<div class="post-text" itemprop="text">
<p>I have several old video files that I'm converting to save space. Since these files are personal videos, I want the new files to have the old files' creation time.</p>
<p>Windows has an attribute called "Media created" which has the actual time recorded by the camera. The files' modification times are often incorrect so there are hundreds of files where this won't work. </p>
<p>How can I access this "Media created" date in Python? I've been googling like crazy and can't find it. Here's a sample of the code that works if the creation date and modify date match:</p>
<pre><code>files = []
for file in glob.glob("*.AVI"):
   files.append(file)

for orig in files:
    origmtime = os.path.getmtime(orig)
    origatime = os.path.getatime(orig)
    mark = (origatime, origmtime)
    for target in glob.glob("*.mp4"):
       firstroot = target.split(".mp4")[0]
       if firstroot in orig:
          os.utime(target, mark)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As Borealid noted, the "Media created" value is not filesystem metadata. The Windows shell gets this value as metadata from within the file itself. It's accessible in the API as a <a href="https://msdn.microsoft.com/en-us/library/ff728871" rel="nofollow">Windows Property</a>. You can easily access Windows shell properties if you're using Windows Vista or later and have the <a href="http://sourceforge.net/projects/pywin32/files/pywin32" rel="nofollow">Python extensions for Windows</a> installed. Just call <a href="https://msdn.microsoft.com/en-us/library/bb762197" rel="nofollow"><code>SHGetPropertyStoreFromParsingName</code></a>, which you'll find in the <a href="http://docs.activestate.com/activepython/3.4/pywin32/propsys.html" rel="nofollow"><code>propsys</code></a> module. It returns a <a href="http://docs.activestate.com/activepython/3.4/pywin32/PyIPropertyStore.html" rel="nofollow"><code>PyIPropertyStore</code></a> instance. The property that's labelled "Media created" is <a href="https://msdn.microsoft.com/en-us/library/bb787395" rel="nofollow">System.Media.DateEncoded</a>. You can access this property using the property key <code>PKEY_Media_DateEncoded</code>, which you'll find in <code>propsys.pscon</code>. In Python 3 the returned value is a <a href="https://docs.python.org/3/library/datetime.html#datetime-objects" rel="nofollow"><code>datetime.datetime</code></a> subclass, with the time in UTC. In Python 2 the value is a custom time type that has a <code>Format</code> method that provides <code>strftime</code> style formatting. If you need to convert the value to local time, the <a href="https://pypi.python.org/pypi/pytz" rel="nofollow">pytz</a> module has the IANA database of time zones.</p>
<p>For example:</p>
<pre><code>import pytz
import datetime
from win32com.propsys import propsys, pscon

properties = propsys.SHGetPropertyStoreFromParsingName(filepath)
dt = properties.GetValue(pscon.PKEY_Media_DateEncoded).GetValue()

if not isinstance(dt, datetime.datetime):
    # In Python 2, PyWin32 returns a custom time type instead of
    # using a datetime subclass. It has a Format method for strftime
    # style formatting, but let's just convert it to datetime:
    dt = datetime.datetime.fromtimestamp(int(dt))
    dt = dt.replace(tzinfo=pytz.timezone('UTC'))

dt_tokyo = dt.astimezone(pytz.timezone('Asia/Tokyo'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the attribute you're talking about came from the camera, it's not a filesystem permission: it's metadata inside the videos themselves which Windows is reading out and presenting to you.</p>
<p>An example of this type of metadata would be a JPEG image's EXIF data: what type of camera took the photo, what settings were used, and so forth.</p>
<p>You would need to open up the .mp4 files and parse the metadata, preferably using some existing library for doing that. You wouldn't be able to get the information from the filesystem because it's not there.</p>
<p>Now if, on the other hand, all you want is the file creation date (which didn't actually come from the camera, but was set when the file was first put onto the current computer, and might have been initialized to some value that was previously on the camera)... That can be gotten with <code>os.path.getctime(orig)</code>.</p>
</div>
<span class="comment-copy">This is a good first step but it's giving me the wrong date. The date and time are close but they're off.</span>
<span class="comment-copy">Ugh, I should have seen that. Tokyo is 8 or 9 hours ahead of UTC and I was expecting PST so it threw me off. Now I get it. Can you submit this as an answer so I can vote it as the right one? Thanks!</span>
<span class="comment-copy">Thank you to both of you for helping. As a note - the reason why I thought it was a file attribute is because Windows lists it as the "creation date" when you view the files in Detailed view.</span>
<span class="comment-copy">eryksun, there's a problem with the last line in your code. It gives me an attribute error on "astimezone"</span>
<span class="comment-copy">@Tensigh, I had only tested in Python 3. Apparently in Python 2 it's returning a custom type instead of a <code>datetime.datetime</code> subclass. Try the workaround.</span>
<span class="comment-copy">@erkysun, if I could, I would give you another upvote. That worked PERFECTLY! Thank you, you've restored my hope in asking for help on SO.</span>
<span class="comment-copy">This is a good clue; I need to look for the pictures' metadata, not file attributes. Thanks.</span>
