<div class="post-text" itemprop="text">
<p>I am getting False while using isdigiti() or isnumeric() string method to verify an item value which is numeric string from a web-page [text attribute fetched from a web-element]</p>
<ol>
<li>When I am trying to print it got printed like numeric string. </li>
<li>When tried to debug it is showing unicode value. </li>
<li>If I assign a variable with same numeric string then it return false if I apply isdigit() or isnumeric() method to this variable.</li>
</ol>
<p>Code1:</p>
<pre><code>value = self.web_page.get_item_value(item_name) # Returns numeric item value from web-page e.g. '1'
print value
if value.isdigit():
     print "Item value is a number"
     pass
else:
     self.fail("Item value is not a number!!")
</code></pre>
<p>Result1:</p>
<pre><code>1
Failure: Item value is not a number!!
</code></pre>
<p>Code2:</p>
<pre><code>new_value = '1' #assigned numeric string to a variable
print new_value
if new_value.isdigit():
     print "Item value is a number"
     pass         
else:
     self.fail("Item value is not a number!!")
</code></pre>
<p>Result2:</p>
<pre><code>1
Item value is a number
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe the return value of <code>self.web_page.get_item_value(item_name)</code> has some spaces or newlines in it. When the string has space of newlines in it, <code>isdigit()</code> returns False.</p>
<p>Example -</p>
<pre><code>&gt;&gt;&gt; '1 '.isdigit()
False
&gt;&gt;&gt; '1\n'.isdigit()
False
</code></pre>
<p>Try stripping the <code>value</code> , before doing the <code>isdigit()</code> check.</p>
<p>Example -</p>
<pre><code>value = self.web_page.get_item_value(item_name).strip()
print value
if value.isdigit():
     print "Item value is a number"
     pass
else:
     self.fail("Item value is not a number!!")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have the logic backwards.</p>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow"><code>str.isdigit()</code></a> returns a boolean; <code>True</code> if the string contains only digits, and <code>False</code> otherwise, e.g.</p>
<pre><code>&gt;&gt;&gt; '1'.isdigit()
True
&gt;&gt;&gt; '1234'.isdigit()
True
&gt;&gt;&gt; '123a'.isdigit()
False
&gt;&gt;&gt; '123 '.isdigit()
False
</code></pre>
<p>So you should write your <code>if</code> statement like this:</p>
<pre><code>value = self.web_page.get_item_value(item_name) # Returns numeric item value from web-page e.g. '1'
if value.isdigit():
     print "Item value is a number"
else:
     self.fail("Item value {!r} is not a number!!".format(value))
</code></pre>
<p>Probably there is some additional whitespace in the string <code>value</code>. This will now be displayed in the error message.</p>
<p>If you do find unwanted whitespace, just call <code>strip()</code> on it:</p>
<pre><code>value = value.strip()
</code></pre>
<p>and you could add that permanently to your code before calling <code>isdigit()</code>.</p>
</div>
<span class="comment-copy"><code>str.isidigt()</code> returns <code>True</code> , if the string is composed of only digits. Your conditions seem to be reversed. I cannot reproduce your second beahvior, are you sure in second you do not have <code>if not new_value.isdigit():</code> or so?</span>
<span class="comment-copy">Also try printing <code>type(value)</code> in first case</span>
<span class="comment-copy">Edited and corrected the code snippet, thanks for pointing it out.. Question still remains same.</span>
<span class="comment-copy">Check my answer below.</span>
<span class="comment-copy">Type of read value:  &lt;type 'unicode'&gt;</span>
<span class="comment-copy">Corrected the code in my question above, issue is that when we read text attribute from web-element in a web-page, we get False when try isdigit() on that text as it returns in unicode from web-element</span>
<span class="comment-copy">Change <code>self.fail("Item value is not a number!!")</code> to <code>self.fail("Item value {!r} is not a number!!".format(value))</code>. Then you will see if there is anything extra in the string, and you'll have a more useful error message too. I've updated the answer to include that.</span>
<span class="comment-copy">I tried like this:         value = self.web_page.get_item_value(item_name).strip()         print 'Read item value: ', value         if not value.isdigit():             self.fail("Item value {!r} is not a number!!".format(value))                                                                       Result as below:Read item value:  0 AssertionError: Item value u'0' is not a number!!</span>
