<div class="post-text" itemprop="text">
<p>How can I verify if any value is contained in any of the variables with an if statement? I'm looking for something like:</p>
<pre><code>if "foo","bar","spam","eggs" in test1,test2:
</code></pre>
<p>This would return true if any of the four values were found in any of the test1, test2 variables. What type should test1,test2 be ?</p>
<p>Later edit:
What if I have a list so it would be something like: </p>
<pre><code>test1=['foo','abc','def']
if {'foo', 'bar', 'spam', 'eggs'} in test1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want to use <a href="https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset">set intersections</a>:</p>
<pre><code>if {test1, test2} &amp; {'foo', 'bar', 'spam', 'eggs'}:
    # true if there is an intersection between the two sets.
</code></pre>
<p>So if one of <code>test1</code> and <code>test2</code> is set to one of the four values in the other set, the test will be true.</p>
<p>If you need <em>both</em> <code>test1</code> and <code>test2</code> to be using values from the other set, you'd test for a <em>subset</em>:</p>
<pre><code>if {test1, test2} &lt;= {'foo', 'bar', 'spam', 'eggs'}:
    # true if all values in the first set are also in the second
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a generator expression within <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any()</code></a> built-in function:</p>
<pre><code>any(i in j for j in [test1,test2] for i in my_var)
</code></pre>
<p>DEMO:</p>
<pre><code>&gt;&gt;&gt; my_var={"foo","bar","spam","eggs"}
&gt;&gt;&gt; test1={'a','b'}
&gt;&gt;&gt; test2={'c','d'}
&gt;&gt;&gt; 
&gt;&gt;&gt; any(i in j for j in [test1,test2] for i in my_var)
False
&gt;&gt;&gt; test2={'c','foo'}
&gt;&gt;&gt; any(i in j for j in [test1,test2] for i in my_var)
True
</code></pre>
</div>
<span class="comment-copy">What if I have a list so it would be something like: <code>test1=['foo','abc','def']; if test1 &amp; {'foo', 'bar', 'spam', 'eggs'}</code> ?</span>
<span class="comment-copy">This is most pythonic way but note that if <code>test1</code> and <code>test2</code> be <code>set</code> objects you can not put them within a <code>set</code>.</span>
<span class="comment-copy">@Kasra: which is unlikely here since we are testing against strings, but yes, using a set requires that the values all are hashable.</span>
