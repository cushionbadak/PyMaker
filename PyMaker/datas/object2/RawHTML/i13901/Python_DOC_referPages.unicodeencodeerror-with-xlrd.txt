<div class="post-text" itemprop="text">
<p>I'm trying to read a .xlsx with xlrd. I have everything set up and working. It works for data with normal English letters as well as numbers. However when it gets to Swedish letters (ÄÖÅ) it gives me this error:</p>
<pre><code>print str(sheet.cell_value(1, 2)) + " " + str(sheet.cell_value(1, 3)) + " " + str(sheet.cell_value(1, 4)) + " " + str(sheet.cell_value(1, 5))
UnicodeEncodeError: 'ascii' codec can't encode character u'\xd6' in position 1: ordinal not in range(128)
</code></pre>
<p>My code:</p>
<pre><code># -*- coding: cp1252 -*-
import xlrd

file_location = "test.xlsx"

workbook = xlrd.open_workbook(file_location)
sheet = workbook.sheet_by_index(0)

print str(sheet.cell_value(1, 2)) + " " + str(sheet.cell_value(1, 3)) + " " + str(sheet.cell_value(1, 4)) + " " + str(sheet.cell_value(1, 5))
</code></pre>
<p>I've even tried:</p>
<pre><code>workbook = xlrd.open_workbook("test.xlsx", encoding_override="utf-8")
</code></pre>
<p>as well as:</p>
<pre><code>workbook = xlrd.open_workbook("test.xlsx", encoding="utf-8")
</code></pre>
<p>Edit: I'm running Python 2.7 on a Windows 7 64-bit computer.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>'ascii' codec can't encode</p>
</blockquote>
<p>The problem here isn't the decode when reading the file, it is the encode necessary to print.  Your environment is using ASCII for sys.stdout, and so when you try to print any Unicode characters that can't be encoded in ASCII you'll receive that error.  </p>
<p><a href="https://docs.python.org/3/library/sys.html?highlight=pythonioencoding#sys.stdout" rel="nofollow">Documentation reference:</a></p>
<blockquote>
<p>The character encoding is platform-dependent. Under Windows, if the stream is interactive (that is, if its isatty() method returns True), the console codepage is used, otherwise the ANSI code page. Under other platforms, the locale encoding is used (see locale.getpreferredencoding()).</p>
<p>Under all platforms though, you can override this value by setting the PYTHONIOENCODING environment variable before starting Python.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Try to use <code>utf-8</code> as <a href="https://stackoverflow.com/users/795990/anand-s-kumar">@Anand S Kumar</a> suggested and <code>decode</code> strings before printing.</p>
<pre><code># -*- coding: utf-8 -*-
import xlrd

file_location = "test.xlsx"

workbook = xlrd.open_workbook(file_location)
sheet = workbook.sheet_by_index(0)

cells = [sheet.cell_value(1, i).decode('utf-8') for i in range(2, 6)]
print ' '.join(cells)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>xlrd by default uses Unicode encoding. If xlrd is not able to recognize the encoding then it will consider that the encoding used in the excel file is ASCII, character encoding. Finally if the encoding is not ASCII or if python is not able to convert the data to Unicode then it will raise a UnicodeDecodeError.</p>
<p>Don't worry we have a solution for this kind of problems. It seems that you are using cp1252. So while you will be opening the file using <code>open_workbook()</code>, you can call it as follows:</p>
<pre><code>&gt;&gt;&gt; book = xlrd.open_workbook(filename='filename',encoding_override="cp1252")
</code></pre>
<p>When you will use the above function xlrd will decode the respective encoding and you will be good to go.<br/>
Source(s):</p>
<ol>
<li><a href="https://docs.python.org/2.4/lib/standard-encodings.html" rel="nofollow">Standard Encodings.</a></li>
<li><a href="http://radiusofcircle.blogspot.in/2016/03/the-xlrd-python-module-for-reading.html" rel="nofollow">xlrd default encoding.</a></li>
<li><a href="http://radiusofcircle.blogspot.com/2016/03/the-xlrd-python-module-for-reading-data.html" rel="nofollow">Over riding default <code>open_workbook</code> encoding.</a></li>
<li><a href="https://secure.simplistix.co.uk/svn/xlrd/trunk/xlrd/doc/xlrd.html?p=4966" rel="nofollow">xlrd official documentation</a></li>
<li><a href="https://wiki.python.org/moin/UnicodeDecodeError" rel="nofollow">UnicodeDecodeError</a></li>
</ol>
<p><br/>
Hope this will help you get rid of the UnicodeDecodeError.</p>
</div>
<span class="comment-copy">Just a guess, try - <code># -*- coding: utf-8 -*-</code> , instead of <code>cp1252</code> .</span>
<span class="comment-copy">The <code># coding...</code> directive/comment only matters how the <i>source code itself</i> is read by Python and has no impact on how it <i>runs</i>.</span>
<span class="comment-copy">So what would the solution be?</span>
<span class="comment-copy">Set the PYTHONIOENCODING environment variable to a suitable value when running python.  The encoding you specify needs to be capable of representing the characters you want to output, and it also needs to match the encoding expected by the terminal or console or IDE or whereever the output of the program is connected.</span>
<span class="comment-copy">Didn't work. :/</span>
