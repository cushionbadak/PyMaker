<div class="post-text" itemprop="text">
<p>I believe I am about to ask a definite newbie question, but here goes:</p>
<p>I written a python script that does snmp queries. The snmp query function uses a global list as its output.</p>
<pre><code>def get_snmp(community_string, mac_ip):
    global output_list

    snmp get here

    output_list.append(output_string)
</code></pre>
<p>The get_snmp querier's are launched using the following code:</p>
<pre><code>pool.starmap_async(get_snmp, zip(itertools.repeat(COMMUNITY_STRING),    input_list))
pool.close()
pool.join()

if output_file_name != None:
        csv_writer(output_list, output_file_name)
</code></pre>
<p>This setup works fine, all of the get_snmp process write their output out to a shared list output_list, and then the csv_write function is called and that list is dumped to disk.</p>
<p>The main issue with this program is on a large run the memory usage can become quite high as the list is being built.  I would like to write the results to the text file in the background to keep memory usage down, and I'm not sure how to do it.  I went with the global list to eliminate file locking issues.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think that your main problem with increasing memory usage is that you don't remove contents from that list when writing them to file. 
Maybe you should do <code>del output_list[:]</code> after writing it to file.</p>
</div>
<div class="post-text" itemprop="text">
<p>Have each of the workers write their output to a <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Queue" rel="nofollow">Queue</a>, then have another worker (or the main thread) read from the Queue and write to a file. That way you don't have to store everything in memory.</p>
<p><strong>Don't write directly to the file from the workers</strong>; otherwise you can have issues with multiple processes trying to write to the same file at the same time, which will just give you a headache until you fix it anyway.</p>
</div>
<span class="comment-copy">Did one of the answers solve your problem? If so, please accept it :).</span>
