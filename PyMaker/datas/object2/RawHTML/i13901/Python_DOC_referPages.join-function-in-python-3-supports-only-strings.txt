<div class="post-text" itemprop="text">
<p>Python 3, Windows 7. I found out that in Python 3 the <code>join()</code> function works only on strings (What!? Why?). I need it to work on anything.</p>
<p>Eg.</p>
<pre><code>lista = [1,2,3,"hey","woot",2.44]
print (" ".join(lista))

1 2 3 hey woot 2.44
</code></pre>
<p>Also could anyone tell me why it supports ONLY strings?</p>
</div>
<div class="post-text" itemprop="text">
<p>It supporst only string becuase the <strong>output of "".join() will be in string format</strong>:</p>
<pre><code>lista = [1,2,3,"hey","woot",2.44]
print (" ".join(map(str,lista)))
print type(" ".join(map(str,lista)))
1 2 3 hey woot 2.44
&lt;type 'str'&gt;
</code></pre>
<p>This is due to fact you can not append int/float and string:</p>
<p>i.e.)</p>
<pre><code>"a"+2
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-232-902dbc9d2568&gt; in &lt;module&gt;()
----&gt; 1 "a"+2

TypeError: cannot concatenate 'str' and 'int' objects 

lista = [1,2,3,"hey","woot",2.44]
print (" ".join(lista))

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-235-f57f2c8c638f&gt; in &lt;module&gt;()
    1 lista = [1,2,3,"hey","woot",2.44]
----&gt; 2 print (" ".join(lista))
    3 

TypeError: sequence item 0: expected string, int found 
</code></pre>
<p>When done with join:</p>
<pre><code>lista = [1,2,3,"hey","woot",2.44]
print (" ".join(lista))

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-235-f57f2c8c638f&gt; in &lt;module&gt;()
    1 lista = [1,2,3,"hey","woot",2.44]
----&gt; 2 print (" ".join(lista))
    3 

TypeError: sequence item 0: expected string, int found 
</code></pre>
<p><strong>It is stating that element at 0 index is int instead of string argument</strong></p>
<p>Internally what the <code>join</code> will do is it will iterate over the list(iterable objects) and append with prefix in this case <code>" " a space</code> and provide a string output <code>So finally "".join() does not support int/float</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Alternative:</p>
<pre><code>print (" ".join([str(x) for x in lista]))
</code></pre>
<p>but Anand S Kumar's version is better for Performance.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>could anyone tell me why it supports ONLY strings?</p>
</blockquote>
<p>Python (both 2.x and 3.x) is dynamically <strong>but strongly</strong> typed, so (unlike <em>weakly typed</em> languages where <code>'a' + 1</code> would be implicitly converted to <code>'a' + '1'</code> and hence <code>'a1'</code>) implicit type conversions simply do not happen:</p>
<pre><code>&gt;&gt;&gt; 'a' + 1

Traceback (most recent call last):
  File "&lt;pyshell#0&gt;", line 1, in &lt;module&gt;
    'a' + 1
TypeError: cannot concatenate 'str' and 'int' objects
</code></pre>
<p>Note that <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow">the documentation for <code>str.join</code></a> reads (emphasis mine):</p>
<blockquote>
<p>Return a string which is the concatenation <strong>of the strings</strong> in the <em><a href="https://docs.python.org/2/glossary.html#term-iterable" rel="nofollow">iterable</a> iterable</em>.</p>
</blockquote>
<p>To get around this, you need to <em>explicitly convert the elements to strings</em>, e.g. using <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow"><code>map</code></a>:</p>
<pre><code>&gt;&gt;&gt; ' '.join(map(str, [1, 2, 3, "hey", "woot", 2.44]))
'1 2 3 hey woot 2.44'
</code></pre>
</div>
<span class="comment-copy">Because <code>join()</code> is a string function... See <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.join</a>.</span>
<span class="comment-copy">If you just want to print, do - <code>print(*lista)</code> .</span>
<span class="comment-copy">@AnandSKumar Thank you SOOO much on that tip. I will use it.</span>
<span class="comment-copy">@SaeX although <code>join</code> is a string <i>method</i>, that's not <i>why</i> the elements in the iterable need to be strings</span>
<span class="comment-copy">Okay, thanks for letting me know how to use the join() in Python 3. (And why it needs a string)</span>
