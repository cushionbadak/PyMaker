<div class="post-text" itemprop="text">
<p>I am having trouble finding a way to do this in a Pythonic way. I assume I can use itertools somehow because I've done something similar before but can't remember what I did.</p>
<p>I am trying to generate all non-decreasing lists of length L where each element can take on a value between 1 and N. For example if L=3 and N=3 then [1,1,1],[1,1,2],[1,1,3],[1,2,2],[1,2,3], etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this using <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations_with_replacement" rel="nofollow"><code>itertools.combinations_with_replacement</code></a>:</p>
<pre><code>&gt;&gt;&gt; L, N = 3,3
&gt;&gt;&gt; cc = combinations_with_replacement(range(1, N+1), L)
&gt;&gt;&gt; for c in cc: print(c)
(1, 1, 1)
(1, 1, 2)
(1, 1, 3)
(1, 2, 2)
(1, 2, 3)
(1, 3, 3)
(2, 2, 2)
(2, 2, 3)
(2, 3, 3)
(3, 3, 3)
</code></pre>
<p>This works because c_w_r preserves the order of the input, and since we're passing a nondecreasing sequence in, we only get nondecreasing tuples out.</p>
<p>(It's easy to convert to lists if you really need those as opposed to tuples.)</p>
</div>
