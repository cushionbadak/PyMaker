<div class="post-text" itemprop="text">
<p>here is the code:</p>
<pre><code># Critter Caretaker
# A virtual pet to care for

class Critter(object):
    """A virtual pet"""
    def __init__(self, name, hunger = 0, boredom = 0):
        self.name = name
        self.hunger = hunger
        self.boredom = boredom

    def __pass_time(self):
        self.hunger += 1
        self.boredom += 1

    @property
    def mood(self):
        unhappiness = self.hunger + self.boredom
        if unhappiness &lt; 5:
            m = "happy"
        elif 5 &lt;= unhappiness &lt;= 10:
            m = "okay"
        elif 11 &lt;= unhappiness &lt;= 15:
            m = "frustrated"
        else:
            m = "mad"
        return m

    def talk(self):
        print("I'm", self.name, "and I feel", self.mood, "now.\n")
        self.__pass_time()

    def eat(self, food = 4):
        print("Brrupp. Thank you.")
        self.hunger -= food
        if self.hunger &lt; 0:
            self.hunger = 0
        self.__pass_time()

    def play(self, fun = 4):
        print("Whee!")
        self.boredom -= fun
        if self.boredom &lt; 0:
            self.boredom = 0
        self.__pass_time()


crit_name = input("What do you want to name your critter?: ")
crit = Critter(crit_name)
choice = None
while choice != "0":

    print \
            ("""
            Critter Caretaker

            0 - Quit
            1 - Listen
            2 - Feed your critter
            3 - Play with your critter
            """)

    choice = input("Choice: ")
    print()

    # exit
    if choice == "0":
        print("Good-bye.")

    # listen to your critter
    elif choice == "1":
        crit.talk()

    # feed your critter
    elif choice == "2":
        crit.eat()

    # play with your critter
    elif choice == "3":
        crit.play()

    # some unknown choice
    else:
        print("\nSorry, but", choice, "isn't a valid choice.")


input("\n\nPress the enter key to exit.")
</code></pre>
<p>When I ran it in IDLE, it works totally fine but when I save the file and double click the file, it wont ran properly. For example, when I choose a valid choice from "0" - "3", it prints - "isn't a valid choice". but even if it's not a valid choice, it should print "Sorry, but - isn't a valid choice". </p>
<p>sorry for my English. Please do tell me if you are confused with my English. </p>
<p>By the way, I'm currently learning Python from a book called "Python Programming for Absolute Beginner" -  by Michael Dawson. Should I finish this book or should I find another way to learn Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks a lot like your IDLE install has a different Python version compared to the one that is accessed elsewhere.</p>
<p>One thing you could do is add a check for the version at the top of the script to see what version you are running:</p>
<pre><code>import sys
print(sys.version)
</code></pre>
<p>The other thing you can do is try to enter in a choice such as <code>"3"</code> with the string syntax and see if it works. If it does you are running a version of Python 2 when you try to run from outside IDLE.</p>
<p>The main thing that breaks if you are going from Python 3 to Python 2 is the behavior of the <code>input()</code> function. Python 3's <code>input</code> function is the same as the <code>raw_input</code> function in Python 2.</p>
<p>In Python 2 <code>input</code> just tries to execute whatever you enter as it if were valid Python code. In Python 3 <code>input</code> just stores whatever you entered in as a string.</p>
<p>So in Python 2:</p>
<pre><code>choice = input("Choice: ")
Choice: 3
print(choice)
3
</code></pre>
<p>Makes <code>choice</code> be the integer 3. This will compare false in the checks you have because <code>3 == "3"</code> will always be false. (Because any comparison with integer and string is False)</p>
<p>However the same code in Python 3 is a bit different:</p>
<pre><code>choice = input("Choice: ")
Choice: 3
print(choice)
"3"
</code></pre>
<p>Here the code does what you would expect. Hopefully this explains how the code that uses Python 3.x in IDLE will work and the code when run by Python 2.x does not.</p>
</div>
<span class="comment-copy">Did you accidentally mix up Python 2 and Python 3?</span>
<span class="comment-copy">Put <code>print('choice type', type(choice)</code> on the line after <code>input("Choice: ")</code>. If <code>choice</code> is an integer it will always compare not-equal to a string so all your if elif expressions will be False</span>
<span class="comment-copy">@msw Assuming the program is designed for python 3, <code>input()</code> will default to string</span>
<span class="comment-copy">@user3636636 sure, but rather than guess which interpreter he's seeing, asking it directly is more accurate. People often get into such version skew when moving from an IDE to command line. And yes, sys.version is another way to get the info, I just thought it simpler to ask the data itself.</span>
<span class="comment-copy">nothing works. Even if I choose "3". Can I change the python version in my command prompt.</span>
<span class="comment-copy">@JohnCruz what's your python version when you run this from the command prompt? We need that information. Go to the command prompt and type <code>python</code>, this should enter the interactive shell and give you information about the version.</span>
<span class="comment-copy">Also have a look at this: <a href="https://docs.python.org/3/using/windows.html" rel="nofollow noreferrer">docs.python.org/3/using/windows.html</a></span>
<span class="comment-copy">when I type python in the command prompt, not python command line, it would output ('python' is not recognized as an internal or external command, operable program or batch file.) should I change the directory or something? the directory is C:\Users\Acer.</span>
<span class="comment-copy">So I Install python 3.4 and install it's entire feature in a command path, When I type python it would return python 3.4. And the other thing I noticed is that when I double click my save file, the icon of the comman line is not the basic command line of my computer but the python command line. And there are two python version I installed in my computer, which is the 3.4 and 3.2. Please do tell me if you don't understand what I am saying above. Thanks.</span>
