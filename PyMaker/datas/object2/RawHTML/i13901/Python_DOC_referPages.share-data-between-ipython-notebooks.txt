<div class="post-text" itemprop="text">
<p>If I have several IPython notebooks running on the same server. Is there any way to share data between them? For example, importing a variable from another notebook? Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>This works for me : </p>
<blockquote>
<p>The %store command lets you pass variables between two different
  notebooks.</p>
<p>data = 'this is the string I want to pass to different notebook'
  %store data</p>
<p>Now, in a new notebookâ€¦ %store -r data print(data) this is the string
  I want to pass to different notebook</p>
</blockquote>
<p>I've successfully tested with sklearn dataset : </p>
<pre><code>from sklearn import datasets

dataset = datasets.load_iris()

%store dataset
</code></pre>
<p>in notebook to read data :</p>
<pre><code>%store -r dataset
</code></pre>
<p>src : <a href="https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/" rel="noreferrer">https://www.dataquest.io/blog/jupyter-notebook-tips-tricks-shortcuts/</a></p>
</div>
<div class="post-text" itemprop="text">
<p>IPython supports the <code>%store</code> magic (<a href="http://ipython.readthedocs.io/en/stable/config/extensions/storemagic.html" rel="nofollow noreferrer">here is the documentation</a>). It seems to have the same constraints of <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a>: if the file can be pickled it will also be storable.</p>
<p>Anyway, it will work for sure with common Python types. Here's a basic example:</p>
<pre><code>var_1 = [1,2,3,4] #list
var_2 = {'a':1,'b':2,'c':3} #dict
var_3 = (6,7,8) #tuple
var_4 = {'d','e','f'} #set
%store var_1
%store var_2
%store var_3
%store var_4
</code></pre>
<pre><code> Stored 'var_1' (list)
 Stored 'var_2' (dict)
 Stored 'var_3' (tuple)
 Stored 'var_4' (set)
</code></pre>
<p>Then on a different IPython notebook it will be sufficient to type:</p>
<pre><code>%store -r var_1 
%store -r var_2 
%store -r var_3 
%store -r var_4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your data is in a single variable then have a try at saving it to a file using the <code>%save</code> magic in one notebook and then reading it back in another.</p>
<p>The one difficulty is that the text file will contain the data but no variable definition so I usually contatenate it with a variable definition and then <code>exec</code> the result.</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe that theoretically you should be able to do so with <a href="http://jupyter-client.readthedocs.io/en/latest/messaging.html" rel="nofollow noreferrer">messaging</a>, though I would have to dig a lot deeper to figure it out.</p>
<p>Why would you need this capability though?</p>
</div>
<span class="comment-copy">The code running each notebook is its own process, so they can't share variables. You'll need to serialise them in some form or another to transfer them between notebooks. The best way to do this depends on your data, but CSV or JSON are two popular formats. 'Pickle' can save most Python variables, but if you also want to archive your data, it's not recommended, because it depends on the specific Python version you're using.</span>
<span class="comment-copy">This facility sounds similar to what I'd like to do. I'd like to keep some data that is "persistent" between Kernel resets.   I suspected JSONing data out to a file and rereading it at the beginning of the notebook would be the easiest.</span>
<span class="comment-copy">For more information: <code>%store?</code> in IPython.</span>
<span class="comment-copy">Any idea how you can suppress the the %store 'var1' (list)  message from occuring?</span>
<span class="comment-copy">@BillyJo_rambler you can do it by using the <a href="https://ipython.readthedocs.io/en/stable/interactive/magics.html#cellmagic-capture" rel="nofollow noreferrer"><code>%%capture</code> cell magic</a>: just add it on top of the cell and it should suppress the message.</span>
<span class="comment-copy">Definitely a possible solution. Would there be any way to do it without modifying the notebook with the variable I want? So essentially making the variable scope of one notebook the same as another -- giving notebook 1 access to notebook 2's variables, without modifying notebook 2 at all?</span>
<span class="comment-copy">This does not "share data" but writes previous IPython inputs to a text files. The <code>%store</code> solution from blue-sky does save and reads back data between notebooks (and sessions, for that matter).</span>
<span class="comment-copy">Messaging looks like it could potentially work. Essentially, I am standing up a server for a group of people to do some data analysis with a package that I am writing. Each notebook is doing a specific analysis and can be pretty long and involved. Occasionally, some data will need to be shared between notebooks, and there no way to really predict what data will need to be shared. Does that make sense?</span>
