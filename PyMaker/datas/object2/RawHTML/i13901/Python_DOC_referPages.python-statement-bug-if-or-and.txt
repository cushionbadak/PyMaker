<div class="post-text" itemprop="text">
<p>for some reason this statement triggers no matter what the variable "msg" has stored. It should only react to what you see in the code. Please let me know if I have written this statement correctly or if I need to format it another way. Thank you</p>
<pre><code>if (username == "ssj3goku878") or (username == "mgnlive") and msg == "!load": 
     keyholder.holdForSeconds("F7", 1);
if (username == "ssj3goku878") or (username == "mgnlive") and msg == "!save": 
     keyholder.holdForSeconds("F8", 1);
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Due to <a href="https://docs.python.org/2.7/reference/expressions.html#operator-precedence" rel="nofollow">operator precedence</a> <code>or</code> has lower binding precedence than does <code>and</code>. For example a similar expression to yours is:</p>
<pre><code>a or b and c
</code></pre>
<p>which is interpreted as shown by the parentheses:</p>
<pre><code>a or (b and c)
</code></pre>
<p>because <code>and</code> has higher precedence. In this case the expression will always be True if <code>a</code> is True, and the sub-expression <code>(b and c)</code> will not be evaluated. So it makes no difference what the sub-expression evaluates to and thus changing the value of <code>c</code> will not affect the result (N.B when <code>a</code> is True).</p>
<p>So, for your expression, whenever <code>username == "ssj3goku878"</code> is True, the value of <code>msg</code> has no bearing on the overall result and you will find that both if statements execute their bodies.</p>
<p>To correct this, you should explicitly add parentheses to override the default precedences:</p>
<pre><code>if ((username == "ssj3goku878") or (username == "mgnlive")) and msg == "!load": 
     keyholder.holdForSeconds("F7", 1)
</code></pre>
<hr/>
<p>You probably have more than 2 users and would prefer not to have to alter your program whenever a new user is added, so this might be preferable:</p>
<pre><code>users = ["ssj3goku878", "mgnlive", "user3"]
if username in users and msg == '!load':
    keyholder.holdForSeconds("F7", 1)
</code></pre>
<p>The <code>users</code> list can be populated from a file, database or other persistent source. In this case <code>in</code> has higher precedence than <code>and</code> so parentheses are not required, however, it is often easier to explicitly add parentheses than it is for you (or whomever is reading your code) to remember (or lookup) the precedences, so this is usually better:</p>
<pre><code>if (username in users) and msg == '!load':
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need another set of brackets, i.e.</p>
<pre><code>((username == "ssj3goku878") or (username == "mgnlive")) and msg == "!load": 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python evaluates and operators before or operators (unless they are in parentheses). So therefore, if you want the logic to be evaluated the way you intended, you should add parentheses, eg:</p>
<pre><code>if ((username == "ssj3goku878") or (username == "mgnlive")) and msg == "!load":
     keyholder.holdForSeconds("F7", 1);
</code></pre>
<p>More information on the workings of these operators can be found here:
<a href="https://docs.python.org/2/library/stdtypes.html#boolean-operations-and-or-not" rel="nofollow">https://docs.python.org/2/library/stdtypes.html#boolean-operations-and-or-not</a></p>
</div>
<span class="comment-copy">you need to learn about operator precedence: <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
<span class="comment-copy">Excellent! This is definitely a better way to design this. Thank you!</span>
<span class="comment-copy">Some explanation would benefit this answer.</span>
