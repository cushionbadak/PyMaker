<div class="post-text" itemprop="text">
<p>I have no python experience. I am trying to figure out how to trigger this part of some code from the command line. The issue I'm finding is that it looks like "UserAccount()" is an object and I'm not sure how to trigger that from the command line. So a) what is UserAccount? b) how do I call that from the command line with arguments?</p>
<pre><code>        # Create a random use account
        randomInt = random.randint(1, 4294967295)
        accountId = "random_id+" + str(randomInt) + "@acme.com"
        randomInt = random.randint(1, 4294967295)
        password = "Random_password1_" + str(randomInt)
        primaryEmail = accountId

        userAccount = UserAccount()
        userAccount.accountId = accountId
        userAccount.password = password
        userAccount.primaryEmail = primaryEmail
        userAccount.firstName = "Random"
        userAccount.lastName = "User"
        userAccount.birthdayMonth = 5
        userAccount.birthdayDay = 31

        #userAccount.firstNamePhonetic = ""
        #userAccount.firstNameRomagi = ""
        #userAccount.middleName = ""
        #userAccount.middleNamePhonetic = ""
        #userAccount.middleNameRomagi = ""
        #userAccount.lastName = ""
        #userAccount.lastNamePhonetic = ""
        #userAccount.lastNameRomagi = ""
        #userAccount.companyName = ""
        #userAccount.securityQuestion = ""
        #userAccount.securityAnswer = ""
        #userAccount.locale = ""
        #userAccount.timeZone = ""
        #userAccount.allowUpdateNotification = False
        #userAccount.allowThirdPartyNotification = False

        # Assume for now that we're just creating a user account, not also requesting activate/deactivate
        # permissions by providing a pre-created OAuth client ID.
        oauthClientId = "";

        print("  Test creating an account: " + userAccount.accountId + ", password: " + userAccount.password + ", email: " + userAccount.primaryEmail)
        accessToken = client.createAccount(userAccount, oauthClientId)
        print("    Account created!")
        if accessToken:
            print("      Access token for account: " + accessToken)
        print()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A: UserAccount is probably a class. <code>UserAccount()</code> is calling the constructor of it. Note that the construction is made by calling it, not by a <code>new</code> Operator.
B: As @OMGtechy already stated, take a look at argparse. Here an example which might work for you:</p>
<pre><code>import argparse
parser = argparse.ArgumentParser(description='UserAccount creator')

parser.add_argument('--id', '-i', required=True, help='Required. User Account Id')
parser.add_argument('--password', '-p', required=True, help="Required. User Account's Password.")
parser.add_argument('--email', '-e', required=True, help='Required. User Account E-Mail')
parser.add_argument('--firstname', '-f', required=True, help="Required. User Account's first name")
parser.add_argument('--lastname', '-l', required=True, help="Required. User Account's last name")
parser.add_argument('--birthdaymonth', '-m', required=True, help="Required. User Account's Birthday month")
parser.add_argument('--birthdayday', '-d', required=True, help="Required. User Account's Birthday day")

args = parser.parse_args()
userAccount = UserAccount()
userAccount.accountId = args.id
userAccount.password = args.password
userAccount.primaryEmail = args.email
userAccount.firstName = args.firstname
userAccount.lastName = args.lastname
userAccount.birthdayMonth = args.birthdaymonth
userAccount.birthdayDay = args.birthdayday

# Now rest, like normal

oauthClientId = "";

print("  Test creating an account: " + userAccount.accountId + ", password: " + userAccount.password + ", email: " + userAccount.primaryEmail)
accessToken = client.createAccount(userAccount, oauthClientId)
print("    Account created!")
if accessToken:
    print("      Access token for account: " + accessToken)
print()
</code></pre>
</div>
<span class="comment-copy">Take a look at <code>argparse</code></span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/__main__.html" rel="nofollow noreferrer">docs.python.org/3/library/__main__.html</a></span>
<span class="comment-copy">Thanks! That will help.</span>
