<div class="post-text" itemprop="text">
<p>I just found out how to make random numbers in Python, but if I print them out, they all have 15 decimal digits. How do I fix that?
Here is my code:</p>
<pre><code>import random
import os

greaterThan = float(input("Your number will be greater than: "))
lessThan = float(input("Your number will be less than: "))
digits = int(input("Your number will that many decimal digits: "))

os.system('cls')

if digits == 15:
    print(random.uniform(greaterThan, lessThan))

if digits == 14:
    print(random.uniform(greaterThan, lessThan))

if digits == 13:
    print(random.uniform(greaterThan, lessThan))

if digits == 12:
    print(random.uniform(greaterThan, lessThan))

if digits == 11:
    print(random.uniform(greaterThan, lessThan))

if digits == 10:
    print(random.uniform(greaterThan, lessThan))
</code></pre>
<p>*(this just continues down to 0)</p>
<p>I know you can do like <code>print("%.2" % someVariable)</code> but the random numbers Python creates with this method are not saved in any variables. At least I think so.
I would also like to know if there is a way of letting a variable choose the amount of decimal points, like <code>print("%." + digits % anotherVariable)</code> but I tried tha out and of course  it failed.</p>
<p>I really got no idea. Hopefully you can help.
Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to take whatever number you get from <code>random.uniform</code> and truncate it to the specific number of digits you can use the <a href="https://docs.python.org/3/library/functions.html#round" rel="noreferrer"><code>round()</code> function</a>.</p>
<p>It allows you to round to a specific precision. For example:</p>
<pre><code>import random

greaterThan = float(input("Your number will be greater than: "))
lessThan = float(input("Your number will be less than: "))
digits = int(input("Your number will that many decimal digits: "))

rounded_number = round(random.uniform(greaterThan, lessThan), digits)
print(rounded_number)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also handle float precision using <code>.format()</code>:</p>
<pre><code>print float("{0:.2f}".format(random.uniform(greaterThan, lessThan)))
</code></pre>
<p>Where the <code>2</code> can be replaced by how many digits after decimal you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure what you mean by "fixing it", since what you're talking about is pretty fundamental to how computers perform what's called <a href="https://docs.python.org/3/tutorial/floatingpoint.html" rel="nofollow">floating-point arithmetic</a>.</p>
<p>However, that said, I am pretty sure you are looking for the <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow">decimal module</a>:</p>
<pre><code>import decimal
</code></pre>
<p>Best of luck!</p>
<p><strong>Edit:</strong></p>
<p>Taking a second look at your post, this feels wonky. Is this a homework assignment? Why have the <code>digits</code> variable at all, if you're not doing anything with its value? Sure, you check it (over and over and over again), but you're doing the same thing each time.</p>
<p>If you're actually doing something differently for each value of <code>digits</code>, then you should use if-elif-else:</p>
<pre><code>if digits == 15:
    do_stuff()
    ...
elif digits == 14:
    do_other_stuff()
    ...
elif digits == 13:
    do_even_moar_different()
    ...
...
else:
    and_now_for_something_completely_different()
</code></pre>
<p>But that's ugly, and Python is supposed to be pretty (<a href="https://www.python.org/dev/peps/pep-0020/" rel="nofollow"><code>import this</code></a>).</p>
<pre><code>if digits &gt; some_value:
    do_stuff()
    ...
elif digits &lt;= some_other_value:
    do_something_else()
...
</code></pre>
<p>I do encourage you to read the <a href="https://docs.python.org/3/tutorial/floatingpoint.html" rel="nofollow">floating-point arithmetic</a> link, since this is very important to understand, at least a little.</p>
</div>
<span class="comment-copy">Have you tried to divide the number by 100 for example (to get 2 decimals)? In case you want 3 decimals  you should divide by 1000 and so on.  <code>number/1000</code></span>
<span class="comment-copy">Your <code>if</code> blocks all have the exact same content. Why do you expect them to behave differently?</span>
<span class="comment-copy">Also, it isn't <code>print("%.2 % someVariable)</code>. It's <code>print("%.2 % someExpression)</code>. You can use the <code>random.uniform(greaterThan, LessThan)</code> as that expression.</span>
<span class="comment-copy">Thank you. I did not expect them to behhave differently. I just wanted to add the "difference", but I didn't know how, so I asked this question.</span>
<span class="comment-copy">@SALZKARTOFFEEEL If one of the answers below fixes your issue, you should accept it (click the check mark next to the appropriate answer). That does two things. It lets everyone know your issue has been resolved to your satisfaction, and it gives the person that helps you credit for the assist. <a href="http://meta.stackexchange.com/a/5235">See here</a> for a full explanation.</span>
<span class="comment-copy">Thank you! This really helped me.</span>
