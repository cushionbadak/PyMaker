<div class="post-text" itemprop="text">
<p>I have a CSV that looks something like this: </p>
<pre><code>F02303521,"Smith,Andy",GHI,"Smith,Andy",GHI,,,
F04300621,"Parker,Helen",CERT,"Yu,Betty",IOUS,,,
</code></pre>
<p>I want to delete all the lines where the 2nd column equal the 4th column (ex. when <code>Smith,Andy = Smith,Andy</code>). I tried to do this in python by using <code>"</code> as the delimiter and splitting the columns into: </p>
<p><code>F02303521,</code> <code>Smith,Andy</code> <code>,GHI,</code> <code>Smith,Andy</code> <code>,GHI,,,</code> </p>
<p>I tried this python code: </p>
<pre><code>testCSV = 'test.csv'
deletionText = 'linestodelete.txt'
correct = 'correctone.csv'
i = 0
j = 0  #where i &amp; j keep track of line number 

with open(deletionText,'w') as outfile: 
    with open(testCSV, 'r') as csv:  
        for line in csv:
            i = i + 1 #on the first line, i will equal 1. 
            PI = line.split('"')[1]
            investigator = line.split('"')[3]

        #if they equal each other, write that line number into the text file
        as to be deleted. 
        if PI == investigator:
            outfile.write(i)



#From the TXT, create a list of line numbers you do not want to include in output
with open(deletionText, 'r') as txt:
    lines_to_be_removed_list = []

    # for each line number in the TXT
    # remove the return character at the end of line
    # and add the line number to list domains-to-be-removed list
    for lineNum in txt:
        lineNum = lineNum.rstrip()
        lines_to_be_removed_list.append(lineNum)


with open(correct, 'w') as outfile:
    with open(deletionText, 'r') as csv:

        # for each line in csv
        # extract the line number
        for line in csv:
            j = j + 1 # so for the first line, the line number will be 1  


            # if csv line number is not in lines-to-be-removed list,
            # then write that to outfile
            if (j not in lines_to_be_removed_list):
                outfile.write(line)
</code></pre>
<p>but for this line: </p>
<pre><code>PI = line.split('"')[1] 
</code></pre>
<p>I get: </p>
<blockquote>
<p>Traceback (most recent call last):
    File "C:/Users/sskadamb/PycharmProjects/vastDeleteLine/manipulation.py", line 11, in 
      PI = line.split('"')[1]
  IndexError: list index out of range</p>
</blockquote>
<p>and I thought it would do <code>PI = Smith,Andy</code> <code>investigator = Smith,Andy</code>... why does that not happen? </p>
<p>Any help would be greatly appreciated, thanks! </p>
</div>
<div class="post-text" itemprop="text">
<p>When you think csv, think <a href="http://pandas.pydata.org/" rel="nofollow">pandas</a>, which is a great data analysis library for Python. Here's how to accomplish what you want:</p>
<pre><code>import pandas as pd

fields = ['field{}'.format(i) for i in range(8)]
df = pd.read_csv("data.csv", header=None, names=fields)
df = df[df['field1'] != df['field3']]
print df
</code></pre>
<p>This prints:</p>
<pre><code>      field0        field1 field2    field3 field4  field5  field6  field7
1  F04300621  Parker,Helen   CERT  Yu,Betty   IOUS     NaN     NaN     NaN
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try splitting on comma, not qoute.</p>
<p>x.split(",")</p>
</div>
<span class="comment-copy">It means there are fewer than two elements in that <code>list</code>. Put it in a <code>try</code> block, and have the matching <code>except</code> print out <code>line.split('"')</code>.</span>
<span class="comment-copy">do you have a random empty line somewhere?  Also, why aren't you using the built-in csv module?</span>
<span class="comment-copy">Why don't you use the very good <code>csv</code> module?</span>
<span class="comment-copy">@NightShadeQueen I don't have an empty line anywhere, I know that for sure. And I don't know, I could use the <code>csv</code>, I just really didn't look into it, because I didn't think I really needed to.</span>
<span class="comment-copy">"CSV," as a format, doesn't have a standard definition. The various implementations all have their own little quirks. The <code>csv</code> module can handle those quirks for you.</span>
<span class="comment-copy">When I think CSV, I just think <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a>.</span>
<span class="comment-copy">@TigerhawkT3 probably because you haven't tried pandas :)</span>
<span class="comment-copy">Oh, thanks! I've never used pandas before. I'll look more into this :)</span>
<span class="comment-copy">if I split on the comma,it'll split the name in half and thats not what I want though</span>
<span class="comment-copy">As stated in the above comment, CSV isn't a simple comma-delimited format - the various implementations include extra rules to handle things like values that contain commas, as the OP's file does.</span>
