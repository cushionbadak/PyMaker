<div class="post-text" itemprop="text">
<p>i'm trying to catch the output of airodump-ng, that has a continuous output, and process every line searching for a string. but that doesn't work. so i try the same thing with "htop" command that has the same kind of output, and it still doesn't work.
i'm trying this with python 3.4 and python 2.7, both on arch linux and osx mavericks. here's the code (not every import is necessary but nevermind):</p>
<pre><code>import subprocess
import sys
import os
import time

command = ["htop"]
proc = subprocess.Popen(command, stdout = subprocess.PIPE)

outs, errs = proc.communicate(timeout=3)
proc.kill()
</code></pre>
<p>and it gives me:</p>
<pre><code> Traceback (most recent call last):
 File "/Users/andrei/Dropbox/python/file_prova.py", line 8, in &lt;module&gt;
 outs, errs = proc.communicate(timeout=3)
 File "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/subprocess.py", line 960, in communicate
 stdout, stderr = self._communicate(input, endtime, timeout)
 File "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/subprocess.py", line 1618, in _communicate
 self._check_timeout(endtime, orig_timeout)
 File "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/subprocess.py", line 986, in _check_timeout
 raise TimeoutExpired(self.args, orig_timeout)
 subprocess.TimeoutExpired: Command '['htop']' timed out after 3 seconds
</code></pre>
<p>seems like it crashes at proc.communicate() and doesn't execute the lines under that. i also tried to handle the exception but no way to make it work...</p>
<p>[EDIT]
ok so it's for 4 am, i learned the try - exception handling, and after a looong time a managed to make it work with htop, following the tips hardly found <a href="http://eyalarubas.com/python-subproc-nonblock.html" rel="nofollow">here</a> (the 2nd solution doesn't seem to work):
this is how it looks</p>
<pre><code>from subprocess import Popen, PIPE
from time import sleep
from fcntl import fcntl, F_GETFL, F_SETFL
from os import O_NONBLOCK, read

# run the shell as a subprocess:
p = Popen(['htop'], stdout = PIPE)
# set the O_NONBLOCK flag of p.stdout file descriptor:
flags = fcntl(p.stdout, F_GETFL) # get current p.stdout flags
fcntl(p.stdout, F_SETFL, flags | O_NONBLOCK)

# let the shell output the result:
# get the output
while True:
    sleep(1)
    try:
        print (read(p.stdout.fileno(), 1024).decode("utf-8")),
    except OSError:
        # the os throws an exception if there is no data
        print ('[No more data]')
        continue
</code></pre>
<p>it works flawlessly. with htop.
but not with airodump-ng. it prints on the terminal its output and every 1 second (the sleep() in the while loop) prints [No more data], like the stream is going elsewhere...</p>
<p>EDIT 2:
solved! the thing was just that airodump-ng dumps data to stderr, not stdout. pretty straight forward try ahah :D</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/subprocess.html#using-the-subprocess-module" rel="nofollow">documentation</a>:</p>
<blockquote>
<p>The timeout argument is passed to Popen.wait(). If the timeout
  expires, the child process will be killed and then waited for again.
  The TimeoutExpired exception will be re-raised after the child process
  has terminated.</p>
</blockquote>
<p>That seems to describe exactly the behavior you are seeing.  You will need to learn about exception handling using <code>try</code>/<code>except</code>.</p>
</div>
<span class="comment-copy">What's your question? For me it looks like 3 seconds passed, so subprocess module raised an appropriate exception.</span>
<span class="comment-copy">"timed out after 3 seconds" this is the reason. You have specified 3 seconds time out.</span>
