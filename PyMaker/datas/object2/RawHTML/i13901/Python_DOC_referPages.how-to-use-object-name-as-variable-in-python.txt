<div class="post-text" itemprop="text">
<p>How could I define a class such that the object name can be used as a variable? I am writing a class for numerical analysis, which contain only one numpy array as instant variable and many mathematical operations. For convenience and readability, it would be nice to access the numpy array simply by it's object name. For example, a numpy array (or objects from many other packages like matplotlib, pandas, etc...) can be called directly,</p>
<pre><code>import numpy as np

foo = np.array([[1,2],[3,4]])
print foo
</code></pre>
<p>This is something like what I have (definition methods are omitted)</p>
<pre><code>import numpy as np

class MyClass():
  def __init__(self, input_array):
    self.data = np.array(input_array)

foo = MyClass([[1,2],[3,4]])
print foo
print foo.data
</code></pre>
<p>This prints <em>foo</em> as pointer and content of <em>foo.data</em></p>
<pre><code>&lt;__main__.MyClass instance at 0x988ff0c&gt;
[[1 2]
 [3 4]]
</code></pre>
<p>I tried <code>self = np.array(input_array)</code> in the constructor but it still gives an address. I am thinking something like overloading object name but I couldn't find any information. </p>
<p>If it is not possible, then how could those packages achieve this? I tried to read some source code of numpy and pandas. But as a newbie to python, it's nearly impossible for me to find the answer there.</p>
<p><strong>EDIT</strong></p>
<p>Thanks for CoryKramer and ≈Åukasz R. for suggestion of using <code>__str__</code> and <code>__repr__</code>. But I realized what I really needed was subclassing numpy.ndarray or even pandas DataFrame such that all mathematical functions are inherited. I found these two links very helpful, <a href="https://stackoverflow.com/questions/7342637/how-to-subclass-a-subclass-of-numpy-ndarray">for ndarray</a> and <a href="https://stackoverflow.com/questions/22155951/how-to-subclass-pandas-dataframe">for DataFrame</a>, to tweek <code>__init__</code> calls for my interface.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can define the <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow"><code>__str__</code></a> method if you want to be able to represent your class object in a printable way</p>
<pre><code>class MyClass():
    def __init__(self, input_array):
        self.data = np.array(input_array)
    def __str__(self):
        return str(self.data)

&gt;&gt;&gt; foo = MyClass([[1,2],[3,4]])
&gt;&gt;&gt; print(foo)
[[1 2]
 [3 4]]
</code></pre>
<p>Also, you can <a href="https://stackoverflow.com/questions/1436703/difference-between-str-and-repr-in-python">see here</a> for detailed discussion of when it is appropriate to use <code>__repr__</code> vs <code>__str__</code> for your class.</p>
</div>
<span class="comment-copy">Implement <code>__str__</code> or <code>__repr__</code>.</span>
<span class="comment-copy">It might be best to use <code>__str__()</code> instead; <code>__repr__()</code> should either return a valid Python expression or something in angle brackets.</span>
<span class="comment-copy">@Kevin You are correct, I've edited accordingly.</span>
<span class="comment-copy">Perhaps I've misunderstood but doesn't the OP want to print the name of the class and have access to the data separately?</span>
<span class="comment-copy">THANKS!!!! This is exactly what I was looking for!</span>
