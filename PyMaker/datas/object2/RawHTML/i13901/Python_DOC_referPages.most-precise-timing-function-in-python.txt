<div class="post-text" itemprop="text">
<p>I'm trying to build a program which has to do with very short time differences and I need a very accurate way to know how much time a statement took.
When I use time.time(), even with hundreds of characters, it shows me that it took 0.0. (I measure the time.time() before and after and then subtract).
I checked to see if python compares string char by char or not with this code:</p>
<pre><code>time1 = time.time()
print s1 == s2
print (time.time() - time1)
time2 = time.time()
print s1 == s3
print time.time() - time2
</code></pre>
<p>(when s1,s2,s3 are very long strings, s2 is the same as s1 but the last char is different, and s3 is the same as s3 only that the first char is different)
but the case I'm dealing with is a string that is about 10 characters, sometimes even less, and I need to find out how much time it takes to compare it to something else).
Any help?</p>
<p>Edit:
time.clock() worked great for me - it is much more accurate than time.time() (on Windows)</p>
</div>
<div class="post-text" itemprop="text">
<p>You want <a href="https://docs.python.org/3/library/time.html#time.perf_counter" rel="nofollow"><code>time.perf_counter()</code></a>:</p>
<blockquote>
<p>a clock with the highest available resolution to measure a short duration</p>
</blockquote>
<p><code>timeit.default_timer()</code> uses it on Python 3. On Python 2, it calls <code>time.clock()</code> on Windows and <code>time.time()</code> on other systems.</p>
<p>Both <code>time.clock()</code> and <code>time.perf_counter()</code> use <code>QueryPerformanceCounter()</code> on Windows so you could use <code>timeit.default_timer()</code> on both Python 2 and 3 on Windows.</p>
<p><a href="https://github.com/python/cpython/blob/0c4861ad12c3482d41aaee68949336072c40f167/Python/pytime.c#L572-L609" rel="nofollow"><code>time.perf_counter()</code> (via <code>pymonotonic(NULL)</code>)</a> calls <code>clock_gettime(CLOCK_HIGHRES)</code> on Linux and <code>mach_absolute_time()</code> on OS X. You could <a href="https://gist.github.com/zed/5073409" rel="nofollow">call <code>clock_gettime()</code> using <code>ctypes</code> on Python 2 too</a> (or find a backport that does it for you).</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/2/library/timeit.html" rel="nofollow noreferrer">timeit</a>?</span>
<span class="comment-copy">@NightShadeQueen I found that on Windows time.clock() works better than time.time(), it is much more accurate), timeit.default_timer would work the same actually so thanks :)</span>
