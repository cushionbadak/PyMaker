<div class="post-text" itemprop="text">
<p>Edit:</p>
<p>random.random() returns values from 0.0 to 1.0</p>
<p>How does seeding with numbers outside of these bounds (0.0-1.0) work? The wiki page says seeds are used to "initialize" the generator. What does the generator do with the seed to keep it within these bounds?</p>
<p>It isn't clear to me how you could use a large # such as 10000 to initialize a function that will return values from 0.0 to 1.0.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>random.random()</code> returns values from <code>0.0</code> to <code>1.0</code>, but it's based on the <a href="https://en.wikipedia.org/wiki/Mersenne_Twister" rel="nofollow">Mersenne Twister</a> algorithm, a pseudorandom number generator that works entirely with integers. When <code>random.random()</code> is called, a float value in that range is generated from the integer data.</p>
<p>According to the docs for <a href="https://docs.python.org/3/library/random.html#random.seed" rel="nofollow"><code>random.seed()</code></a>, when the seed is an <code>int</code>, it's used directly as the seed for the Mersenne Twister. Integers work as seeds because the underlying algorithm works with integers.</p>
<p>You may have been confused by the statement that</p>
<blockquote>
<p>Almost all module functions depend on the basic function <code>random()</code>, â€¦</p>
</blockquote>
<p>This seems to be referring to two things:</p>
<ol>
<li>There are a lot of functions in <code>random</code> that return floats. These, logically, are based on <code>random.random()</code>.</li>
<li>Older versions of Python used <code>random.random()</code> to implement <code>random.randrange()</code> and <code>random.randint()</code>. A <code>random.Random</code> subclass that doesn't provide <a href="https://docs.python.org/3/library/random.html#random.getrandbits" rel="nofollow"><code>getrandbits()</code></a>, like the default implementation does, will do the same.</li>
</ol>
</div>
