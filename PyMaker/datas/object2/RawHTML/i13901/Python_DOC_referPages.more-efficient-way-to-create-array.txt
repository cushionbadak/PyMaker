<div class="post-text" itemprop="text">
<p>I am a bit new to python so I am wondering if there is a more efficient way of accomplishing something.  Basically I need to create an array of values which come from one of two other arrays depending on a random number (0 or 1)  Currently its pretty easy to implement using a for loop, however I am just curious if there is a more elegant/python-ish way to accomplish this, it seems too clunky for how python is designed:</p>
<pre><code>import random

xySet = ['x', 'y']
xP = [10.1, 11.2, 12.3]
yP = [12.5, 13.2, 14.1]
nObser = 10

x = []
p = []

randVals = [random.randint(0,1) for i in range(nObser)]

print randVals

for i in range(nObser):
    x.append(xySet[randVals[i]])
    if randVals[i]:
        p.append(xP[random.randint(0,2)])
    else:
        p.append(yP[random.randint(0,2)])

print x
print p
</code></pre>
<p>This gives me the correct output I would expect:</p>
<pre><code>[1, 1, 1, 0, 1, 1, 1, 0, 1, 0]
['y', 'y', 'y', 'x', 'y', 'y', 'y', 'x', 'y', 'x']
[12.3, 11.2, 10.1, 13.2, 10.1, 11.2, 12.3, 14.1, 10.1, 13.2]
</code></pre>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a pair of list comprehensions</p>
<pre><code>&gt;&gt;&gt; from random import choice
&gt;&gt;&gt; x = [choice(xySet) for _ in range(nObser)]
&gt;&gt;&gt; p = [choice(xP) if v == 'x' else choice(yP) for v in x]
&gt;&gt;&gt; x
['y', 'y', 'y', 'x', 'x', 'x', 'y', 'x', 'x', 'x']
&gt;&gt;&gt; p
[14.1, 13.2, 14.1, 10.1, 10.1, 12.3, 13.2, 12.3, 11.2, 10.1]
</code></pre>
<p>In the first list comprehension, you use <a href="https://docs.python.org/3/library/random.html#random.choice" rel="nofollow"><code>random.choice</code></a> to randomly pick <code>'x'</code> or <code>'y'</code>.</p>
<p>Then in the second list comprehension, you iterate over your <code>x</code> list and sample (again using <code>random.choice</code>) from the appropriate list.</p>
</div>
