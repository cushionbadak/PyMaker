<div class="post-text" itemprop="text">
<p>Suppose someone set the module as MagicMock in the head of the python file:</p>
<pre><code>sys.modules['moduleABC'] = mock.MagicMock()
</code></pre>
<p>This cause trouble as moduleABC will be a mock when I try to run a whole list of unit test.</p>
<p>How can I unset this to an actual moduleABC in the rest of the files?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think a better approach would be to change that unit test to use <a href="https://docs.python.org/3/library/unittest.mock.html#patch" rel="nofollow">patch</a> in a <code>setUp</code> function and then it will apply for all tests in that module, but will be reverted in the end, this is also better as each test will have it's own and not one single mock for all of them (If for instance, you test the number of time a method is called in the module you will have to accumulate all calls in the test...)</p>
<p>Another option is to use the <code>tearDown</code> function and change a bit the way you assign the mock to:</p>
<pre><code>import moduleABC

orig_abc = sys.modules['moduleABC']
sys.modules['moduleABC'] = mock.MagicMock()

def tearDown():
    sys.modules['moduleABC'] = orig_abc
</code></pre>
<p>But I strongly recommend the first option, as it is the better approach. </p>
</div>
