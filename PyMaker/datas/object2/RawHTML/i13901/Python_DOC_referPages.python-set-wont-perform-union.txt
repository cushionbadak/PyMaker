<div class="post-text" itemprop="text">
<p>I have a class with a member that is defined:</p>
<pre><code>self.myset = set()
</code></pre>
<p>When I perform <code>myobject.myset.add('item')</code>, using an instance of my class, it works fine: <code>print(myobject.myset)</code> gives me {'item'} . </p>
<p>However, when I perform <code>myobject.myset.union(yourset)</code>, where <code>yourset</code> is not empty, it won't work; <code>print(myobject.myset)</code> still prints as an empty set. Why is one method (<code>add</code>) working while another (<code>union</code>) is quietly (no exception thrown) failing? Even <code>myobject.myset = yourset</code> works, but <code>union</code> in particular won't. </p>
<p>I'm using Python 3.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>set.union()</code> does not modify the old set in-place, but <code>set.add()</code> does. <code>set.union()</code> returns a new set instead.</p>
<pre><code>myobject.myset = myobject.myset.union(yourset)
</code></pre>
<p>This should do the trick. See the <a href="https://docs.python.org/3/library/stdtypes.html#set.union" rel="nofollow">Python documentation on <code>set.union()</code></a> for more information.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>union</code> doesn't modify the set - it returns a new set. This is clearer if you use the operators for union and intersection - <code>a.union(b)</code> and <code>a | b</code> do the same thing (except that the method form can take the union of three or more sets without creating extra temporary objects). For an in place union, you can use the <code>update</code> method or the equivalent (for two sets) form <code>a |= b</code>.</p>
</div>
<span class="comment-copy">Have you read the documentation for <code>union</code>? <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#set</a></span>
<span class="comment-copy">Thanks! This clears things up.</span>
