<div class="post-text" itemprop="text">
<p>I'm running a simple code in Python 2.7, but it is giving me syntax error. </p>
<pre><code>hello = lambda first: print("Hello", first)
</code></pre>
<p>The error reported is <code>SyntaxError: invalid syntax</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python disallows the use of statements in <a href="https://docs.python.org/3/reference/expressions.html#lambda" rel="nofollow">lambda expressions</a>:</p>
<blockquote>
<p>Note that functions created with lambda expressions cannot contain
  statements or annotations.</p>
</blockquote>
<p><code>print</code> is a statement in Python 2, unless you import the <code>print_function</code>  feature from <a href="https://docs.python.org/3/library/__future__.html" rel="nofollow"><code>__future__</code></a>:</p>
<pre><code>&gt;&gt;&gt; lambda x: print(x)
  File "&lt;stdin&gt;", line 1
    lambda x: print(x)
                  ^
SyntaxError: invalid syntax
&gt;&gt;&gt; from __future__ import print_function
&gt;&gt;&gt; lambda x: print(x)
&lt;function &lt;lambda&gt; at 0x7f2ed301d668&gt;
</code></pre>
</div>
<span class="comment-copy"><code>print()</code> is not a function in Python 2 unless you add <code>from __future__ import print_function</code> to the top of your script. Why are you trying to use it as a function?</span>
<span class="comment-copy">@MartijnPieters The tutorial I was referring to was using the same. When I tried to mimic it, I got an error. I tried the same without the brackets like we normally do in python 2.7 but that failed too.</span>
<span class="comment-copy">Your tutorial appears to be for Python 3; either switch tutorials or install Python 3, you'll have other problems.</span>
<span class="comment-copy">Is there a way to use <code>lambda x: print(x) then 1+1</code> inside a lamda, where the <code>then</code> represents something that just drops the <code>None</code> type and returns the right expression?</span>
<span class="comment-copy">@CMCDragonkai I honestly can't think of a reason why you might want to do  this, but since <code>print</code> (the function) returns <code>None</code>, you can use the <code>or</code> operator: <code>lambda x: print(x) or other_value</code>.</span>
