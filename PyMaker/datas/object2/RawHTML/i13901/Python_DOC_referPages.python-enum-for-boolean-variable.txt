<div class="post-text" itemprop="text">
<p>I'm using class enum.Enum in order to create a variable with selected members.</p>
<p>The main reason is to enable other developers in my team to use the same convention by selecting one of several permitted members for variable.</p>
<p>I would like to create a Boolean variable in the same way, enabling other developers to select either True or False.</p>
<p>Is it possible to define an enum which will receive True False options? Is there any better alternative?</p>
<p>The following options don't work:</p>
<blockquote>
<p>boolean_enum = Enum('boolean_enum', 'True False')</p>
<p>boolean_enum = Enum('boolean_enum', True False)</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<pre><code>boolean_enum = Enum('boolean_enum', [('True', True), ('False', False)])
</code></pre>
<p>Checkout the documentation of this API: <a href="https://docs.python.org/3/library/enum.html#functional-api" rel="nofollow">https://docs.python.org/3/library/enum.html#functional-api</a></p>
<p>If you just specify 'True False' for the names parameter, they will be assigned automatic enumerated values (1,2) which is not what you want.
And of courase you can't just send True False without it being a string argument for the names parameter.</p>
<p>so what you want is one of the options that allow you to specify name and value, such as the above.</p>
<p><strong>Edit:</strong><br/>
When defined as above, the enum elements aren't accessible by <code>boolean_enum.True</code> (but they are accessible by <code>boolean_enum['True']</code> or <code>boolean_enum(True)</code>).<br/>
To avoid this issue, the field names can be changed and defined as  </p>
<pre><code>Enum('boolean_enum', [('TRUE', True), ('FALSE', False)])
</code></pre>
<p>Then accessed as <code>boolean_enum.TRUE</code> or <code>boolean_enum['TRUE']</code> or <code>boolean_enum(True)</code></p>
</div>
<span class="comment-copy">what are you trying to do? Python already has a boolean.</span>
<span class="comment-copy">I want other developers using my class to know this variable is boolean and has the True False options. I'm using this as part of a whole class of enums preserving a naming convention for variables that will be later converted to json format</span>
<span class="comment-copy">I used your command line, but when trying to the boolean_enum variable i get the following syntax error (on PyCharm IDE):  "name expected"</span>
<span class="comment-copy">@user3370773 as you can see here it works: <a href="http://goo.gl/TcdZxo" rel="nofollow noreferrer">goo.gl/TcdZxo</a>.  Maybe something else is going on there. I'm not around PyCharm with Python3 to check, but I can't imagine there should be any problem with this specifically unique to PyCharm.</span>
<span class="comment-copy">Can you please check this now: <a href="http://goo.gl/2nCcWQ" rel="nofollow noreferrer">goo.gl/2nCcWQ</a>. it doesn't seem to work for me when i try using the enum</span>
<span class="comment-copy">@user3370773, Indeed there seem to be some issue, you can access the enum by boolean_enum['True'] or boolean_enum(True). Or you can call the fields with small-caps to avoid the issue, Enum('boolean_enum', [('true', True), ('false', False)]) and then access them as boolean_enum.true (or have it all caps, etc.)</span>
<span class="comment-copy">Ok. Thanks. Can you please add that as an update to your answer so i can "accept" it.</span>
