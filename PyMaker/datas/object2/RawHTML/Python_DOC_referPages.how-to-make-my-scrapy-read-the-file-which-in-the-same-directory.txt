<div class="post-text" itemprop="text">
<p>The target file <code>urls.txt</code> contains all the url to be downloaded.</p>
<pre><code>├─spiders
│  │  stockInfo.py
│  │  urls.txt
│  │  __init__.py
</code></pre>
<p><code>stockInfo.py</code> is my scrapy file.</p>
<pre><code>import scrapy
import os
import re

class QuotesSpider(scrapy.Spider):
    name = "stockInfo"
    projectFile = r"d:/toturial/toturial/spiders/urls.txt"
    with open(projectFile,"r") as f:
        urls = f.readlines()
    start_urls = [url.strip() for url in urls]

    def parse(self, response):
        pass
</code></pre>
<p>I have tested that the above <code>stockInfo.py</code> can run successfully in my local pc end  with command:</p>
<pre><code>scrapy crawl  stockInfo
</code></pre>
<p>Now i deploy the project into remote end <code>scrapy hub</code> with </p>
<pre><code>pip install shub
shub login
API key: xxxxxxxxxxxxxxxxx
shub deploy 380020
</code></pre>
<p>It run into  trouble:</p>
<pre><code>IOError: [Errno 2] No such file or directory: 'd:/toturial/toturial/spiders/urls.txt'
</code></pre>
<p>How to fix it when to deploy my <code>scrapy</code> into the <code>hub</code>?
It is useful to rewrite </p>
<blockquote>
<p>projectFile = r"d:/toturial/toturial/spiders/urls.txt"</p>
</blockquote>
<p>as </p>
<blockquote>
<p>projectFile = "./urls.txt"  </p>
</blockquote>
<p>when to run it in my local pc end.</p>
<p>Strangely, it is no use to rewrite </p>
<blockquote>
<p>projectFile = r"d:/toturial/toturial/spiders/urls.txt"</p>
</blockquote>
<p>as </p>
<blockquote>
<p>projectFile = "./urls.txt"  </p>
</blockquote>
<p>when to run it in remote end <code>scrapy hub</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>1.add new directory and move <code>urls.txt</code> in it.<br/>
To add a new directory <code>resources</code>,and save <code>urls.txt</code> in it.<br/>
My new directory tree is as below.</p>
<pre><code>tutorial
├─tutorial
│  ├─resources
|     |--urls.txt
│  ├─spiders
|     |--stockInfo.py
</code></pre>
<p>2.rewrite the setup.py as below.</p>
<pre><code>from setuptools import setup, find_packages

setup(
    name='tutorial',
    version='1.0',
    packages=find_packages(),
    package_data={
        'tutorial': ['resources/*.txt']
    },
    entry_points={
        'scrapy': ['settings = tutorial.settings']
    },
    zip_safe=False,
)
</code></pre>
<p>3.rewrite <code>stockInfo.py</code> as below.</p>
<pre><code>import scrapy
import os 
import re
import pkgutil
class QuotesSpider(scrapy.Spider):
    name = "stockInfo"
    data = pkgutil.get_data("tutorial", "resources/urls.txt")
    data = data.decode()
    start_urls = data.split("\r\n")

    def parse(self, response):
        pass
</code></pre>
</div>
<span class="comment-copy">Have a look at <a href="https://support.scrapinghub.com/support/solutions/articles/22000200416-deploying-non-code-files" rel="nofollow noreferrer">Scrapinghub's documentation</a> and  <a href="https://stackoverflow.com/a/47018082/4082726">this answer</a>.</span>
