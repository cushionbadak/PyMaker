<div class="post-text" itemprop="text">
<p>I have a text file like below,</p>
<pre><code>#relation 'train'
#attri 'x' real
#attri 'y' integer
#attri 'z' binary (0/1)
#attri 'a' real
#attri 'b' integer
#attri 'class' binary(good/bad)
#data
1.2, 5, 0, 2.3, 4, good
1.3, 6, 1, 1.8, 5, bad
1.6, 7, 0, 1.9, 6, good
2.1, 8, 1, 2.1, 8, good
</code></pre>
<p>I want to understand how to put the heading names to the corresponding columns using python (not using panda dataframe, purely Pythonic version. Because I know how to use Panda to perform this task). This is what I have done so far,</p>
<pre><code>import re

columns = []

with open('test.txt', 'r') as f:
    lines=f.readlines()
    for line in lines:
        l = line.strip()

        if l.startswith('#attri'):
            columns.append(line.split()[1].strip("'"))

        if not l.startswith("#"):
            print(l)
print(columns)
</code></pre>
<p>Thank you for helping me with this without using pandas. 
I want the output looks like below,</p>
<pre><code> x   y  z   a   b   class
1.2, 5, 0, 2.3, 4, good
1.3, 6, 1, 1.8, 5, bad
1.6, 7, 0, 1.9, 6, good
2.1, 8, 1, 2.1, 8, good
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could try this approach: split the others rows also into parts (not just the headers) and then print everything using a fixed-width formatter (I used <code>{:5s}</code> for example).</p>
<pre><code>columns_header = []
data_rows = []

with open('test.txt', 'r') as f:
    for line in f:
        line = line.strip()
        if len(line) &gt; 0:
            if line.startswith('#attri'):
                # split directly by ', not by space and then removing '
                columns_header.append(line.split("'")[1])

            if not line.startswith("#"):
                # split into parts
                data_rows.append(line.split(','))

# add at first position
data_rows.insert(0, columns_header)

for parts in data_rows:
    print(
        ' '.join(
            '{:5s}'.format(s.strip())
            for s in parts))
</code></pre>
<p>This prints:</p>
<pre><code>x     y     z     a     b     class
1.2   5     0     2.3   4     good 
1.3   6     1     1.8   5     bad  
1.6   7     0     1.9   6     good 
2.1   8     1     2.1   8     good 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about</p>
<pre><code>columns = []
data = []
with open('test.txt', 'r') as f:
    lines = f.readlines()
    for line in lines:
        l = line.strip()

        if l.startswith('#attri'):
            columns.append(line.split()[1].strip("'"))

        if not l.startswith("#"):
            data.append(l)
print('   '.join(columns))
for entry in data:
    print(entry)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Seems pretty concise:</p>
<pre><code>with open('text.txt') as txt:
    headers = [l.split()[1][1:-1] for l in txt if '#attri ' in l]
    txt.seek(0)
    data = [l for l in txt if not l.startswith('#')]
    print('\t'.join(headers),'\n')
    for l in data:
        print(l.replace(' ', '\t'))
</code></pre>
<p>And gives:</p>
<pre><code>x       y   z   a       b   class 
1.2,    5,  0,  2.3,    4,  good
1.3,    6,  1,  1.8,    5,  bad
1.6,    7,  0,  1.9,    6,  good
2.1,    8,  1,  2.1,    8,  good
</code></pre>
</div>
<span class="comment-copy">Is something not working with your code? Please explain the output you get and how that is different from what you want to get</span>
<span class="comment-copy">Just print the columns before you print the data. Your current code prints the columns as the last thing.</span>
<span class="comment-copy">It is working, but I want the output like below,</span>
<span class="comment-copy">How does it look currently? Please share</span>
<span class="comment-copy">sorry I have edited the original post, in which I have shown how that must be written in the output file.</span>
