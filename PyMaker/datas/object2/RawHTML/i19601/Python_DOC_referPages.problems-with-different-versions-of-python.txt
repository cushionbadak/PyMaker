<div class="post-text" itemprop="text">
<p>Questions similar to this one have been asked but I haven't seen a solution yet that helps me.</p>
<p>I am running Windows 7 and I've installed two versions of python, 3.3 and 2.7.  Python 3.3 was the first version I installed and I was able to run scripts from the desktop (not the command line).  I installed python 2.7 so that I could get numpy, scipy, and matplotlib down the road, but I found that all the scripts on my desktop defaulted to python 2.7.  Since I coded in 3.3 this caused some issues.</p>
<p>I was able to fix this by right clicking the script icon, browsing programs, navigating to the python 3.3 file in my C: drive, and selecting the idle inside that directory.  But then I found I wasn't able to run those scripts with python 2.7 using the exact same procedure.</p>
<p>Unfortunately I don't know command-line programming very much at all, and it seemed like most of the answers were geared towards that as a solution.  Ideally I'd like to specify which python I want to run a script from the desktop, or possibly while I'm editing the script.  </p>
<p>If it's relevant I'm running the eric python IDE, version 5.</p>
<p>I'd be happy to do the work of reading something fairly technical and long (like a blog post or PDF), but it won't help me much if it isn't aimed at beginners.      </p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="http://www.python.org/dev/peps/pep-0397/" rel="nofollow">Windows Python Launcher</a> can automatically detect the Python from the <a href="http://www.python.org/dev/peps/pep-0397/" rel="nofollow">shebang</a> in your file.</p>
<p>Start your Python 3.3 scripts with</p>
<pre><code>#!/usr/bin/env python3
</code></pre>
<p>and your Python 2.7 scripts with</p>
<pre><code>#!/usr/bin/env python2.7
</code></pre>
<p>If you want to use the <a href="http://docs.python.org/3/using/windows.html#customizing-default-python-versions" rel="nofollow">system's default Python version</a>, you can just start the file with</p>
<pre><code>#!/usr/bin/env python
</code></pre>
<p>This will also work on virtually all Unix systems.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe you should chose another IDE, like <a href="http://www.jetbrains.com/pycharm/" rel="nofollow">PyCharm</a>, it could manage different versions of python easily (and gives tons of other useful features). Perhaps free PyDev could also make it. </p>
<p>Also, using <a href="http://www.virtualenv.org/en/latest/" rel="nofollow">virtualenv</a> — is the best solution here, but it's a "hard way". </p>
</div>
<div class="post-text" itemprop="text">
<p>The method I use is to have several cmd.exe shortcuts on my desktop, each pointing at a different runpython.bat file, one for each version of python.  Here is one command example from a shortcut:</p>
<pre><code>%comspec% /k "C:\QA\Python\QAPYTH3\runpython.bat"
</code></pre>
<p>Here is a typical runpython.bat:</p>
<pre><code>@SET PATH=%PATH%;"C:\Python32"
@SET PYTHONPATH=C:\Python32\Lib

@ASSOC .py=Python.File
@ASSOC .pyc=Python.CompiledFile
@ASSOC .pyo=Python.CompiledFile
@ASSOC .pyw=Python.NoConFile

@FTYPE Python.CompiledFile="C:\Python32\python.exe" "%%1" %%*
@FTYPE Python.File="C:\Python32\python.exe" "%%1" %%*
@FTYPE Python.NoConFile="C:\Python32\pythonw.exe" "%%1" %%*
@SET PATHEXT=.py;%PATHEXT%
</code></pre>
<p>Of course you don't have to call your .bat files the same as I have. Just adjust to suite your setup.</p>
</div>
<span class="comment-copy">see: <a href="http://stackoverflow.com/questions/14188584/dealing-with-multiple-python-versions-do-not-run-independently" title="dealing with multiple python versions do not run independently">stackoverflow.com/questions/14188584/…</a> (it may help you)</span>
