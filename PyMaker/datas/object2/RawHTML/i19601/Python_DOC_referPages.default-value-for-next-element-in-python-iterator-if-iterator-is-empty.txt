<div class="post-text" itemprop="text">
<p>I have a list of objects, and I would like to find the first one for which a given method returns true for some input value.  This is relatively easy to do in Python:</p>
<pre><code>pattern = next(p for p in pattern_list if p.method(input))
</code></pre>
<p>However, in my application it is common that there is no such <code>p</code> for which <code>p.method(input)</code> is true, and so this will raise a <code>StopIteration</code> exception.  Is there an idiomatic way to handle this without writing a try/catch block?</p>
<p>In particular, it seems like it would be cleaner to handle that case with something like an <code>if pattern is not None</code> conditional, so I'm wondering if there's a way to expand my definition of <code>pattern</code> to provide a <code>None</code> value when the iterator is empty -- or if there's a more Pythonic way to handle the overall problem!</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#next" rel="noreferrer"><code>next</code></a> accepts a default value:</p>
<pre><code>next(...)
    next(iterator[, default])

    Return the next item from the iterator. If default is given and the iterator
    is exhausted, it is returned instead of raising StopIteration.
</code></pre>
<p>and so</p>
<pre><code>&gt;&gt;&gt; print next(i for i in range(10) if i**2 == 9)
3
&gt;&gt;&gt; print next(i for i in range(10) if i**2 == 17)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
StopIteration
&gt;&gt;&gt; print next((i for i in range(10) if i**2 == 17), None)
None
</code></pre>
<p>Note that you have to wrap the genexp in the extra parentheses for syntactic reasons, otherwise:</p>
<pre><code>&gt;&gt;&gt; print next(i for i in range(10) if i**2 == 17, None)
  File "&lt;stdin&gt;", line 1
SyntaxError: Generator expression must be parenthesized if not sole argument
</code></pre>
</div>
