<div class="post-text" itemprop="text">
<p>I'm getting this error :</p>
<blockquote>
<p>builtins.TypeError: catching classes that do not inherit from
  BaseException is not allowed</p>
</blockquote>
<pre><code>class a(object):
      pass
class b(a):
      pass
class c(b):
      pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This works as expected I believe:</p>
<pre><code>class a(Exception):
      pass
class b(a):
      pass
class c(b):
      pass


raise c("my c is bad!")
</code></pre>
<p>Prints: <code>__main__.c: my c is bad!</code></p>
<p>You can get the string of the exception in this manner:</p>
<pre><code>&gt;&gt;&gt; try:
...    raise c('This is C talking to you')
... except c as s:
...    print(s)
... 
This is C talking to you
</code></pre>
<p><strong>Edit</strong> <em>From what little there is in your question and comment</em>, here is a way you can use multiple class / subclasses of <code>Exception</code>:</p>
<pre><code>&gt;&gt;&gt; x=1
&gt;&gt;&gt; try:
...    if x==1: raise b('x is 1!!!')
...    else: raise c('I guess x is not 1')
... except (b,c) as s:
...    print(s)
... 
x is 1!!!
</code></pre>
<p>However, you may also be conflating different <em>instances</em> of a class with subclasses of one class.  You can also try something like this:</p>
<pre><code>class MyException(Exception):
    def __init__(self,value):
        self.value=value

    def __str__(self):
        return repr(self.value)

# INSTANCES of MyException class:
e1=MyException(1)           # the int argument becomes the error
e2=MyException('22')        # another instance with a string
e3=MyException({1:33})      # third instance with a dictionary as the result

def f(e):
    try:
        raise MyException, e
    except MyException as s:
        return s    

for e in (e1,e2,e3): 
    print(f(e))
</code></pre>
<p>prints:</p>
<pre><code>1
'22'
{1: 33}
</code></pre>
<p>Note that e1,e2 and e3 and different instances of the class MyException. <code>raise</code> supports calling a class and instance of that class as the exception. </p>
<p>If you are truly looking for a hierarchical error class (once error with subclasses), <a href="http://docs.python.org/3/tutorial/errors.html#user-defined-exceptions" rel="nofollow">here is</a> the subject in the Python docs. I think that you are not though. </p>
</div>
<span class="comment-copy">Error on doing what?</span>
<span class="comment-copy">There's no <code>try</code> or <code>catch</code> in any of the code you've posted here...</span>
<span class="comment-copy">Are you trying to do <code>raise a</code>? We need some context here. This code can't produce that error message.</span>
<span class="comment-copy">@test: Well then the error says exactly what's wrong.  You can't just raise any class as an exception.  If you want to use your classes as exceptions, you need to make them inherit from BaseException.</span>
<span class="comment-copy">@test <code>class c(a,b)</code>, now <code>a</code> will be searched before <code>b</code> for attribute search.</span>
<span class="comment-copy">I'm still getting the error "exceptions must derive from BaseException". Basically what I am trying to do is, I have a function f(x) and if the x equals to a specific number, I am raising either the class b or c which will print out some string through <b>init</b> and <b>str</b>.</span>
<span class="comment-copy">@test: have you adjusted your code to subclass from <code>Exception</code> as this answer suggests?</span>
