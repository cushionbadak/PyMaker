<div class="post-text" itemprop="text">
<p>In one of my script, I used join() method from both string and threading of python. I tried to use <code>import ... as</code> to rename the module name like this:</p>
<pre><code>import str.join as sjoin
import threading.Thread.join as tjoin
</code></pre>
<p>But I always cannot get the string join imported properly. I check the official doc, both <code>join()</code> class paths should be right. What should I do to use the two join at the same time?</p>
<p><strong>EDIT</strong></p>
<p>Initially I didn't import str.join(). But since I got type error, I thought I should rename the join(). But later, I realized that I passed wrong thing into the str.join(), this is the real reason why I got type error. My fault!</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>str.join()</code></a> is a method, used on an instance of a string, so, for example:</p>
<pre><code>&gt;&gt;&gt; ", ".join([1, 2, 3])
1, 2, 3
</code></pre>
<p>No need to import anything. I use a string literal here as an example, but of course, any string can be used. This is then the 'glue' that joins the strings from the iterable (passed to the method) together.</p>
<p>This is also true of <a href="http://docs.python.org/3/library/threading.html#threading.Thread.join" rel="nofollow"><code>threading.Thread.join()</code></a> - you should make an instance of the <code>Thread</code> class and use the <code>join()</code> method on that instance.</p>
<p>Note that due to the way Python works, you can access these methods directly from the class, then pass the instance as the first argument, however, this is generally a very bad idea, as it's harder to read and more effort than calling them normally.</p>
</div>
<div class="post-text" itemprop="text">
<p>str is a builtin, not a module, so you can't import from it.  You could however do:</p>
<pre><code>sjoin = str.join
import threading.Thread.join as tjoin
</code></pre>
</div>
<span class="comment-copy">Why not use <code>myStr.join(listOfStrs)</code> instead of <code>str.join(stuff)</code>?</span>
<span class="comment-copy">Initially I didn't import str.join(). But since I got type error, I thought I should rename the join(). But later, I realized that I passed wrong thing into the str.join(), this is the real reason why I got type error. Thank you.</span>
<span class="comment-copy">-1, this isn't a good way to use the join method.</span>
<span class="comment-copy">Why? <code>','.join</code> is certainly more common, but there's nothing wrong with having two explicit arguments. What if you need the <code>str.join</code> in an <code>itertools.starmap</code>? OP was importing as if it were a separate function.</span>
<span class="comment-copy">In that situation, I would argue a generator expression would be more sensible as it would massively increase the readability. In general, it's a bad idea to use a function like this as it is not very readable.</span>
