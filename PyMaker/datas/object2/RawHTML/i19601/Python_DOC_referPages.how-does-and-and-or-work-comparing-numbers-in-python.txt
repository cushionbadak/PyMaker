<div class="post-text" itemprop="text">
<p>I was looking through some lab material from a computer course offered at Berkeley U C and came across some examples on the form of questions on a test about python. </p>
<p>1 and 2 and 3 
answer 3</p>
<p>I've goggled it till i was red in the fingers, but to no avail.. Could someone be kind enuff to direct me to some docs that explain this?? I've no clue what the hell is going on here..</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python, all numbers that are not 0 are evaluated as <code>True</code>.  Only 0 is evaluated as <code>False</code>. In this code, <code>1 and 2 and 3</code> really evaluates as <code>True and True and True</code>.  Therefore, it must return <code>True</code>.  Now we know that 3 is the same as <code>True</code> - that's why the interpreter is correct in returning 3.  So why does it return 3 when it could make life easy and return <code>True</code>?  That's just the way python is - it returns the last evaluated value.  Hope that answers your question!</p>
</div>
<div class="post-text" itemprop="text">
<p>See <a href="http://docs.python.org/3/reference/expressions.html#boolean-operations" rel="nofollow">the Language Reference</a>:</p>
<blockquote>
<p>All other values are interpreted as true.</p>
</blockquote>
<p>E.g. numbers &gt; 0 are interpreted as true.</p>
<blockquote>
<p>The expression <code>x and y</code> first evaluates <em>x</em>; if <em>x</em> is false, its value is
  returned; otherwise, <em>y</em> is evaluated and the resulting value is
  returned.</p>
</blockquote>
<p>Its actual value (not interpreted value) is returned.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="http://docs.python.org/2/reference/expressions.html" rel="nofollow">docs</a>:</p>
<blockquote>
<p>The expression x and y first evaluates x; if x is false, its value is
  returned; otherwise, y is evaluated and the resulting value is
  returned.</p>
<p>The expression x or y first evaluates x; if x is true, its value is
  returned; otherwise, y is evaluated and the resulting value is
  returned.</p>
</blockquote>
<p><code>bool(1) = True</code>, only <code>bool(0) = False</code></p>
</div>
<div class="post-text" itemprop="text">
<p><code>x</code> and <code>y</code> returns true if both x and y are true; while
<code>x</code> or <code>y</code> returns if either one is true.<br/> <br/>similarly multiple <code>and</code> returns <code>true</code> if all are true.
<br/></p>
</div>
<span class="comment-copy">ohhh okay,, I suppose that makes sense.SO then any sequence of numbers entered into the interpreter, will return the LAST number entered. Thanks</span>
<span class="comment-copy">I just wonder why is it, if you use or instead of and, the first number is returned? Seems inconsistent.</span>
<span class="comment-copy">Consider the truth table for a or b.  The only way a or b is False is if both a and b are false.  If the interpreter finds that a is True, then it doesn't have to look at b.  It knows the outcome is True so it returns a straight away - which is why the first number is returned when doing or.  With and, it MUST look at the second number to evaluate correctly.</span>
<span class="comment-copy">Yes, that concept i know and understand. But the answer isn't True, the answer is 3? 0, None "" and False are all False, everything else is True. Got it. What does 1 and 2 and 3 returning 3 mean??</span>
<span class="comment-copy">Sorry It was 5 am when i read your answer and after being up all night  I was too brain dead to understand that you had answered my question "it's actual value(not interpreted value)..</span>
