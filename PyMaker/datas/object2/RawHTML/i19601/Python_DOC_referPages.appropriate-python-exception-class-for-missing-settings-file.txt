<div class="post-text" itemprop="text">
<p><strong>What is the appropriate <a href="http://docs.python.org/2/library/exceptions.html" rel="noreferrer">python Exception</a> to raise if there is a missing settings file?</strong></p>
<p>For example, in Django projects, a light-weight way to allow users to define local settings is to add the following snippet to the settings.py file</p>
<pre><code>try:
    from local_settings import *
except ImportError:
    # want to add informative Exception here
    pass
</code></pre>
<p>thus, any local settings override the defaults in settings.py.</p>
</div>
<div class="post-text" itemprop="text">
<p>The usual exception for missing files is <a href="https://docs.python.org/3/library/exceptions.html#IOError" rel="nofollow noreferrer"><em>IOError</em></a>.</p>
<p>You can customize the wording by creating a subclass:</p>
<pre><code>class MissingSettingsFile(IOError):
    'Missing local settings file'
    pass
</code></pre>
<p>Then, use that custom exception in your code snippet:</p>
<pre><code>try:
    from local_settings import *
except ImportError:
    raise MissingSettingsFile
</code></pre>
</div>
<span class="comment-copy">Maybe <code>EnvironmentError</code> or <code>LookupError</code> or even <code>RuntimeError</code>. But why is it important? You can create your own if you care: <code>class MyCustomErrorThing(Exception): pass</code></span>
<span class="comment-copy">That is actually what I am doing at the moment, although I was curious if there was a "better" way.</span>
