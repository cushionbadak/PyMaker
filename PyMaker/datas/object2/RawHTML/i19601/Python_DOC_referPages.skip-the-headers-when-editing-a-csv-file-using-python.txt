<div class="post-text" itemprop="text">
<p>I am using below referred code to edit a csv using Python. Functions called in the code form upper part of the code. </p>
<p>Problem: I want the below referred code to start editing the csv from 2nd row, I want it to exclude 1st row which contains headers. Right now it is applying the functions on 1st row only and my header row is getting changed.</p>
<pre><code>in_file = open("tmob_notcleaned.csv", "rb")
reader = csv.reader(in_file)
out_file = open("tmob_cleaned.csv", "wb")
writer = csv.writer(out_file)
row = 1
for row in reader:
    row[13] = handle_color(row[10])[1].replace(" - ","").strip()
    row[10] = handle_color(row[10])[0].replace("-","").replace("(","").replace(")","").strip()
    row[14] = handle_gb(row[10])[1].replace("-","").replace(" ","").replace("GB","").strip()
    row[10] = handle_gb(row[10])[0].strip()
    row[9] = handle_oem(row[10])[1].replace("Blackberry","RIM").replace("TMobile","T-Mobile").strip()
    row[15] = handle_addon(row[10])[1].strip()
    row[10] = handle_addon(row[10])[0].replace(" by","").replace("FREE","").strip()
    writer.writerow(row)
in_file.close()    
out_file.close()
</code></pre>
<p>I tried to solve this problem by initializing <code>row</code> variable to <code>1</code> but it didn't work.</p>
<p>Please help me in solving this issue.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>reader</code> variable is an iterable, by looping over it you retrieve the rows.</p>
<p>To make it skip one item before your loop, simply call <a href="http://docs.python.org/2/library/functions.html#next"><code>next(reader, None)</code></a> and ignore the return value.</p>
<p>You can also simplify your code a little; use the opened files as context managers to have them closed automatically:</p>
<pre><code>with open("tmob_notcleaned.csv", "rb") as infile, open("tmob_cleaned.csv", "wb") as outfile:
   reader = csv.reader(infile)
   next(reader, None)  # skip the headers
   writer = csv.writer(outfile)
   for row in reader:
       # process each row
       writer.writerow(row)

# no need to close, the files are closed automatically when you get to this point.
</code></pre>
<p>If you wanted to write the header to the output file unprocessed, that's easy too, pass the output of <code>next()</code> to <code>writer.writerow()</code>:</p>
<pre><code>headers = next(reader, None)  # returns the headers or `None` if the input is empty
if headers:
    writer.writerow(headers)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another way of solving this is to use the DictReader class, which "skips" the header row and uses it to allowed named indexing.</p>
<p>Given "foo.csv" as follows:</p>
<pre><code>FirstColumn,SecondColumn
asdf,1234
qwer,5678
</code></pre>
<p>Use DictReader like this:</p>
<pre><code>import csv
with open('foo.csv') as f:
    reader = csv.DictReader(f, delimiter=',')
    for row in reader:
        print(row['FirstColumn'])  # Access by column header instead of column number
        print(row['SecondColumn'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Doing <code>row=1</code> won't change anything, because you'll just overwrite that with the results of the loop.</p>
<p>You want to do <code>next(reader)</code> to skip one row.</p>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/11349333/when-processing-csv-data-how-do-i-ignore-the-first-line-of-data">When processing CSV data, how do I ignore the first line of data?</a></span>
<span class="comment-copy">An alternative is also to use <code>for row in islice(reader, 1, None)</code> - although less explicit than <code>next</code> for most simple "skip one line" jobs, for skipping multiple header rows (or getting only certain chunks etc...) it's quite handy</span>
<span class="comment-copy">I'd consider using <code>try: writer.write(next(reader))... except StopIteration: # handle empty reader</code></span>
<span class="comment-copy">@JonClements: Perhaps. This works well enough without having to teach about <code>try:</code> / <code>except:</code>.</span>
<span class="comment-copy">@JonClements: Advantage to explicit <code>next</code> iteration is that it's "free"; <code>islice</code> would wrap the <code>reader</code> forever adding (an admittedly very small amount of) overhead to each iteration. The <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer"><code>consume</code> recipe from <code>itertools</code></a> can be used to skip many values quickly, without adding wrapping to subsequent usage, in the case where the <code>islice</code> would have a <code>start</code> but no <code>end</code>, so the overhead isn't gaining you anything.</span>
<span class="comment-copy">I feel like this is the real answer, as the question seems to be an example of <a href="http://mywiki.wooledge.org/XyProblem" rel="nofollow noreferrer">XY problem</a>.</span>
<span class="comment-copy">DictReader is definitely the way to go</span>
<span class="comment-copy">It is important to note that this only works if you omit the field names parameter when constructing the DictReader. Per the documentation: <code>If the fieldnames parameter is omitted, the values in the first row of the file f will be used as the fieldnames.</code> See <a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer">docs.python.org/2/library/csv.html</a></span>
<span class="comment-copy">I tried changing it to <code>for row in next(reader):</code> but it is giving me <code>IndexError: string index out of range</code> error</span>
