<div class="post-text" itemprop="text">
<p>The topic basically tells what I want to to.</p>
<p>I read the documentation, which tells me how to handle signals but not how I can do signalling by myself.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>os.kill</code> method. Since Python 2.7 it should work (did not test it myself) on both Unix and Windows, although it needs to be called with different parameters:</p>
<pre><code>import os, signal

os.kill(pid, signal.SIGHUP) # Unix version only...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/3/library/os.html#os.kill" rel="noreferrer"><code>os.kill</code></a>. For example, to send <code>SIGUSR1</code> to your own process, use</p>
<pre><code>import os,signal
os.kill(os.getpid(), signal.SIGUSR1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just proposing a different method, if its on windows:</p>
<pre><code>import ctypes
ucrtbase = ctypes.CDLL('ucrtbase')
c_raise = ucrtbase['raise']
c_raise(some_signal)
</code></pre>
<p>'some_signal' can be any signal num, eg <code>signal.SIGINT</code>.</p>
</div>
<span class="comment-copy">please clarify: Are you talking about signals on a OS-level or about signals as in Qt, the concepts of signals and slots.</span>
<span class="comment-copy">please clarify: Are you talking about signals on a OS-level or about signals as in turning signals, the concept of indicating left or right turning</span>
