<div class="post-text" itemprop="text">
<p>I'm making a text-based rpg with python 3.3 and I am wanting a more dynamic inventory system for my game. I am currently using variables assigned to each item but with functions, the variables I am passing as arguments are becoming too many and quite cluttered. If there is a better way out there I would love help creating a better system.</p>
<p>Here is how my inventory call system looks right now:</p>
<pre><code>print('Item1',item1)
print('Item2',item2)
print('Item3',item3)
</code></pre>
<p>and so on.</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, I have an old text game I made and the inventory system I use is just a list named 'inv'. Then all you have to do when you gain an item of whatever type is to append the inventory list with the string.</p>
<pre><code>inv = []

inv.append('Item1')
</code></pre>
<p>Then you can create a dictionary with the key as the item name and the value be a list you can reference. Try this:</p>
<pre><code>itemvalues = {'Item1':[0,0,0]
}
</code></pre>
<p>And the list can be a bunch of different attributes such as buy sell price, strength or what have you. Hope this helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could try and use a list:</p>
<pre><code>inventory = []
inventory.append(some_item)
</code></pre>
<p>And you can implement an inventory cap:</p>
<pre><code>if len(inventory) &gt; inventory_size:
    print('Inventory full.')
</code></pre>
<p>If you want to 'use' an item in the inventory, say, then it's also easy to remove (this is of course assuming the index exists):</p>
<pre><code># use the item
del inventory[index]
</code></pre>
<p>Obviously most of the functionality you need is accessible through standard list methods, so check <a href="http://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range" rel="nofollow">the documentation</a> out.</p>
</div>
