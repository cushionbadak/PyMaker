<div class="post-text" itemprop="text">
<p>I'm currently on Ubuntu 16.04 that I created through Digitalocean Droplet.
I'm trying to run a simple flask application. I'm following this <a href="https://medium.com/ymedialabs-innovation/deploy-flask-app-with-nginx-using-gunicorn-and-supervisor-d7a93aa07c18" rel="nofollow noreferrer">GUIDE</a>
However, I'm stuck on this step <code>You can run the Flask app simply by running the following command:</code> when I try running <code>python app.py</code>, I get the following...</p>
<pre><code>Traceback (most recent call last):
  File "app.py", line 1, in &lt;module&gt;
    from flask import Flask
ModuleNotFoundError: No module named 'flask'
Error in sys.excepthook:
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/apport_python_hook.py", line 63, in apport_excepthook
    from apport.fileutils import likely_packaged, get_recent_crashes
  File "/usr/lib/python3/dist-packages/apport/__init__.py", line 5, in &lt;module&gt;
    from apport.report import Report
  File "/usr/lib/python3/dist-packages/apport/report.py", line 30, in &lt;module&gt;
    import apport.fileutils
  File "/usr/lib/python3/dist-packages/apport/fileutils.py", line 23, in &lt;module&gt;
    from apport.packaging_impl import impl as packaging
  File "/usr/lib/python3/dist-packages/apport/packaging_impl.py", line 23, in &lt;module&gt;
    import apt
  File "/usr/lib/python3/dist-packages/apt/__init__.py", line 23, in &lt;module&gt;
    import apt_pkg
ModuleNotFoundError: No module named 'apt_pkg'

Original exception was:
Traceback (most recent call last):
  File "app.py", line 1, in &lt;module&gt;
    from flask import Flask
ModuleNotFoundError: No module named 'flask'
</code></pre>
<p>Also, flask is already installed.</p>
<pre><code>Requirement already satisfied: flask in /usr/local/lib/python3.5/dist-packages (1.0.2)
Requirement already satisfied: Werkzeug&gt;=0.14 in /usr/local/lib/python3.5/dist-packages (from flask) (0.14.1)
Requirement already satisfied: itsdangerous&gt;=0.24 in /usr/local/lib/python3.5/dist-packages (from flask) (0.24)
Requirement already satisfied: Jinja2&gt;=2.10 in /usr/local/lib/python3.5/dist-packages (from flask) (2.10)
Requirement already satisfied: click&gt;=5.1 in /usr/local/lib/python3.5/dist-packages (from flask) (6.7)
Requirement already satisfied: MarkupSafe&gt;=0.23 in /usr/lib/python3/dist-packages (from Jinja2&gt;=2.10-&gt;flask) (0.23)
</code></pre>
<p>While the environment is active, I get the below stack trace when I run <code>python app.py</code></p>
<pre><code>Traceback (most recent call last):
  File "app.py", line 10, in &lt;module&gt;
    app.run(debug=True)
  File "/home/.env/lib/python3.5/site-packages/flask/app.py", line 910, in run
    cli.load_dotenv()
  File "/home/.env/lib/python3.5/site-packages/flask/cli.py", line 608, in load_dotenv
    dotenv.load_dotenv(path)
  File "/home/.env/lib/python3.5/site-packages/dotenv/main.py", line 255, in load_dotenv
    return DotEnv(f, verbose=verbose).set_as_environment_variables(override=override)
  File "/home/.env/lib/python3.5/site-packages/dotenv/main.py", line 95, in set_as_environment_variables
    for k, v in self.dict().items():
  File "/home/.env/lib/python3.5/site-packages/dotenv/main.py", line 74, in dict
    values = OrderedDict(self.parse())
  File "/home/.env/lib/python3.5/site-packages/dotenv/main.py", line 79, in parse
    f = self._get_stream()
  File "/home/.env/lib/python3.5/site-packages/dotenv/main.py", line 62, in _get_stream
    return io.open(self.dotenv_path)
IsADirectoryError: [Errno 21] Is a directory: '/home/.env'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>@Abhilash looks like the problem isn't the code, it's about the setup. </p>
<p>By default, Python will look for flask environment configurations in the home directory, which generally is stored in the <code>.env</code> file. In your case that is the virtual environment. Hence the error.</p>
<p>Follow the steps below:</p>
<p>Go to your user's document directory, e.g.</p>
<pre><code>cd /home/rahul/Documents/
</code></pre>
<p>Create a separate folder for your flask application:</p>
<pre><code>mkdir flask_test_app
</code></pre>
<p>Go into the above directory:</p>
<pre><code>cd flask_test_app
</code></pre>
<p>Create Virtual Environment here:</p>
<pre><code>virtualenv .env
</code></pre>
<p>Activate this virtual environment:</p>
<pre><code>source .env/bin/activate
</code></pre>
<p>It should show the something like below:</p>
<pre><code>(.env) rahul@ramco:~/Documents/flask_test_app
</code></pre>
<p>Install Flask:</p>
<pre><code>pip install Flask
</code></pre>
<p>Put the flask app file created in the current folder, i.e., app.py file.</p>
<p>Run the application:</p>
<pre><code>python app.py
</code></pre>
<p>This will start the flask app on flask's default port 5000, and will display something like below in the terminal:</p>
<pre><code> * Tip: There are .env files present. Do "pip install python-dotenv" to use them.
 * Serving Flask app "app" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
 * Restarting with stat
 * Tip: There are .env files present. Do "pip install python-dotenv" to use them.
 * Debugger is active!
 * Debugger PIN: 303-406-109
</code></pre>
<p>NOTE: Try to avoid creating a virtual environment in the home directory, if you have to then use some other name like <code>.venv</code> or <code>venv</code>. So that it won't conflict with the default configurations.</p>
</div>
<span class="comment-copy">Try to install flask using 'pip install Flask'</span>
<span class="comment-copy">@Saifullahkhan I did that part. Flask is installed.</span>
<span class="comment-copy">@Saifullahkhan I just edited my question. I have added the part where it's mentioned that flask is already installed.</span>
<span class="comment-copy">Maybe there is a problem with multiple python installations? You could try installing the package using <code>python -m pip install X</code> instead of <code>pip install X</code>. The python documentation (<a href="https://docs.python.org/3/installing/index.html" rel="nofollow noreferrer">docs.python.org/3/installing/index.html</a>) doesnt event mention <code>pip install</code> anymore, only <code>python -m pip install</code>.</span>
<span class="comment-copy">@Abhilash have you created a virtual environment as per mentioned in the link? If yes then check when you run that command, whether the virtual environment is active or not?</span>
<span class="comment-copy">Yes. I did think the same. Code was fine, setup was an issue. Anyway, thank you so much for pointing me in the right direction. This was my first time deploying a python project on a remote server. I will keep all of your suggestions in my mind now. @srahul07</span>
<span class="comment-copy">@Abhilash glad that I could help!!!</span>
