<div class="post-text" itemprop="text">
<p>Is it possible to make a module callable with parameters?</p>
<p>I am trying to make a callable module on Python, following the question and its answers <a href="https://stackoverflow.com/questions/1060796/callable-modules">Callable modules</a>, like so:</p>
<blockquote>
<p><em>foo.py</em></p>
</blockquote>
<pre><code>import sys

class foo(object):
  def __call__(self):
    return 'callable'

sys.modules[__name__] = foo()
</code></pre>
<p>then I call it:</p>
<pre><code>import foo

print(foo()) # 'callable'
</code></pre>
<p>but my objective is to pass a parameter in the callable module: </p>
<p><code>print(foo('parameter'))</code></p>
<p>Any ideas how can I accomplish that? </p>
</div>
<div class="post-text" itemprop="text">
<p>There's nothing special about the class you created (it's not even a <code>ModuleType</code> subclass), so there's nothing special about its <a href="https://docs.python.org/3/reference/datamodel.html#object.__call__" rel="nofollow noreferrer"><code>__call__</code></a> method. If you want to call it with arguments, just add parameters to the <code>__call__</code> definition:</p>
<pre><code>import sys

class foo(object):
  def __call__(self, x):
    return f'callable, and called with {x}'

sys.modules[__name__] = foo()
</code></pre>
<p>And now, you can pass it an argument, exactly like any other callable object:</p>
<pre><code>import foo

print(foo('hello'))
</code></pre>
<p>And <a href="https://repl.it/repls/WearableWeakCareware" rel="nofollow noreferrer">the output is</a>:</p>
<pre><code>callable, and called with hello
</code></pre>
<hr/>
<p>From the comments, you tried to do this:</p>
<pre><code>def __call__(a, self):
    return a
</code></pre>
<p>But, like all methods in Python, <code>__call__</code> wants <code>self</code> to come first. It doesn't care about the names (unless you call it with keyword arguments), just the order: the first parameter gets the receiver (the <code>foo</code> in <code>foo('hello')</code>), even if it you called that parameter <code>a</code>, and the second parameter gets the first normal argument (the <code>'hello'</code>), even if you called that parameter <code>self</code>.</p>
<p>So, you're passing the module <code>foo</code> as the first parameter, <code>a</code>, and you <code>return a</code>, so it returns <code>foo</code>.</p>
<p>Which is why you got this:</p>
<pre><code>&lt;sta.foo object at 0x10faee6a0&gt;
</code></pre>
<p>That isn't an error, that's the perfectly valid output that you get when you print out an instance of a class that doesn't define <code>__repr__</code> or <code>__str__</code>.</p>
</div>
<span class="comment-copy">You didn't define <code>__call__</code> with any parameters.</span>
<span class="comment-copy">Yes, I tried but when I add more parameters other than self it give me an error</span>
<span class="comment-copy">Show us that code, and the error message.</span>
<span class="comment-copy">I add this parameter like so: <code>def __call__(a, self):     return a</code>  and when I called <code>print(sta('a'))</code> it didn't give me an error, it give me <code>&lt;sta.foo object at 0x10faee6a0&gt;</code></span>
<span class="comment-copy"><a href="https://repl.it/repls/WearableWeakCareware" rel="nofollow noreferrer">repl.it/repls/WearableWeakCareware</a></span>
