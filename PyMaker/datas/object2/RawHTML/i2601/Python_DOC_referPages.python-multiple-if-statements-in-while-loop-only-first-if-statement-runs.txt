<div class="post-text" itemprop="text">
<p>I'm trying to get if statements to run and it seems only the 1st one will run the others are just skipped.  I have tried adding else and dummy action and still skips over the other.  I have been playing with the for a couple days and can't seem to get it to check all the if statements.</p>
<pre><code>#!/usr/bin/env python
#version 1.1 Beta
import maidenhead as mh
from math import radians, sin, cos, acos
import re
import telnetlib
import time
import sys
HOST = "xxxxx" #set your cluster host-name here
PORT = 7300 #cluster port
user = "xxxx" #cluster user
mygrid = "fn10"
sys.stdout.write('\33]0;KM4OUS Cluster Connector\a')
sys.stdout.flush()
tn = telnetlib.Telnet(HOST,PORT)
tn.read_until(b"login: ")
tn.write(user.encode('ascii') + b"\n")
count = 0 
timer = 0
tsb =   "y"
fsb =   "y"
tcw =   "y"
fcw =   "y"
print("Welcome to the KM4OUS Cluster Connector")
while (count &lt; 1):
    fw = open("cluster.csv", "w")
    push = tn.read_very_eager()
    fw.write(push)
    fw.close()
    f = open('cluster.csv','r')
#   
    if fcw == "y":
        regexd = re.compile(r'(DX de .+\s70[2-9].+Z\s\w\w\w\w)')
        for z in f:
            ftcw = regexd.findall(z)
            for ftc in ftcw:
                ftc = re.sub('\'|\,|\(|\)','', str(ftc))
                print(ftc)," \n40M CW DIGI"     

    if tsb == "y":
        regexa = re.compile(r'(DX de .+\s142[2-9].+Z\s\w\w\w\w)|(DX de .+\s143[0-5].+Z\s\w\w\w\w)')
        for x in f:
            twssb = regexa.findall(x)
            for tws in twssb:
                tws = re.sub('\'|\,|\(|\)|\"','', str(tws))
                print(tws),"\n20M SSB"              

    if tcw == "y":
        regexb = re.compile(r'(DX de .+\s140[2-9].Z\s\w\w\w\w)')    
        for xc in f:
            twcw = regexb.findall(xc)
            for twc in twcw:
                twc = re.sub('\'|\,|\(|\)|\"','', str(twc))     
                print(twc)," \n20M CW DIGI" 

    if fsb == "y":
        regexc = re.compile(r'(DX de .+\s717[8-9].Z\s\w\w\w\w)|(DX de .+\s72[0-9].Z\s\w\w\w\w)|(DX de .+\s718.Z\s\w\w\w\w)')
        for y in f:
            forty = regexc.findall(y)
            for fts in forty:
                fts = re.sub('\'|\,|\(|\|\")','', str(fts))
                print(fts)," \n40M SSB"             


    f.close()   
    time.sleep(5)
    if timer == 30:
        print ("\n" + time.ctime() + "\nKM4OUS CLuster Connector\n")

    #cw.close()
    count = 0
    timer = timer+1  
</code></pre>
<p>if anyone has a simple solution I would like to hear it.  This seems like something that should be simple but it's not working as expected.  I looked up all the info on if elif and else and can't find anything that's close to this.</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue with your code is not with the <code>if</code> statements, but with the <code>for</code> loop you have over the file <code>f</code>. That kind of loop will consume the contents of the file the first time you run it. If you try looping over the file again in one of the later <code>if</code> blocks, there will be nothing to loop over.</p>
<p>There are a few ways you can fix the issue.</p>
<p>One is to open the file in the <code>if</code> blocks, rather than once at the top of the <code>while</code>. This way, each of the inner loops gets its own file to iterate over:</p>
<pre><code># don't open f up here

if fcw == "y":
    regexd = re.compile(r'(DX de .+\s70[2-9].+Z\s\w\w\w\w)')
    with open('cluster.csv','r') as f:
        for z in f:
            ...

if tsb == "y":
    regexa = re.compile(r'(DX de .+\s142[2-9].+Z\s\w\w\w\w)|(DX de .+\s143[0-5].+Z\s\w\w\w\w)')
    for x in f:
        twssb = regexa.findall(x)
        for tws in twssb:
            ...

if tcw == "y":
    regexb = re.compile(r'(DX de .+\s140[2-9].Z\s\w\w\w\w)')    
    with open('cluster.csv','r') as f:
        for xc in f:
           ...
</code></pre>
<p>In that code I'm using a <code>with</code> statement in each place I open <code>f</code>, as that will close the file automatically when the block ends. I would recommend using <code>with</code> for your other files as well.</p>
<p>Another approach would be to rewind the file object to the start before you loop over it. You can do this with <code>f.seek(0)</code>. I'd put one before each of your loops, as it doesn't hurt to seek to the start of the file if you're already there. Note that the ability to seek forwards and backwards is an idiosyncratic feature of files in Python. Most iterators cannot do that. They are one-shot and once you've consumed them, there's no way to go back.</p>
<p>A final option is to read the lines from your file into a list or other data structure and iterate over that instead of over the file. You can either do <code>f.readlines()</code> or just <code>list(f)</code> to get a list of lines, and you can iterate over the list as many times as you want. Or, since you're writing the contents of the file based on the <code>push</code> variable at the top of the <code>while</code> loop, maybe you can skip the file all together and just use something like <code>push.splitlines()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Put print statements under each if statement and you will see that they are in fact running.</p>
<p>The problem is that once you iterate over the file object once, it reaches the end. The next time you iterate, it's already at the end and does nothing.</p>
<p>You either need to reset the file location, or close the file and read it again each time. Read the I/O section of the Python tutorial. <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/inputoutput.html</a></p>
</div>
<span class="comment-copy">I just tried to replicate the basic problem on my end by defining fcw etc. as "y" and then running ifs against each one.  There wasn't a problem with that, so I don't think the issue is directly just to do with the ifs.  I strongly recommend either starting again and building back up the complexity or trying to chop parts out of your current program (after saving a copy of course) and see if you can find at what point you stop getting the expected behaviour.</span>
<span class="comment-copy">reminds me of a story on <a href="http://rinkworks.com/stupid/cs_programming.shtml" rel="nofollow noreferrer">this</a> page (search for "In college, I worked as")</span>
<span class="comment-copy">tried the f.seek(0) but prob didn't do it right but the with open works great thanks for the help.</span>
