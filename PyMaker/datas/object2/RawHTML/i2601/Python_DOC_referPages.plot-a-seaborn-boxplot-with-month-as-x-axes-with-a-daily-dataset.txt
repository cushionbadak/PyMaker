<div class="post-text" itemprop="text">
<p>I have a dataset like this:</p>
<pre><code>&gt;&gt;&gt; print(ds.head())

         date     sum
  0  2013-08-31  19.000
  1  2013-09-01  37.000
  2  2013-09-02  10.750
  3  2013-09-03  21.500
  4  2013-09-04  44.125

&gt;&gt;&gt; print(ds.tail())


            date      sum
    1742  2018-08-24  129.875
    1743  2018-08-25  196.375
    1744  2018-08-26  247.000
    1745  2018-08-27  104.125
    1746  2018-08-28  149.250
</code></pre>
<p>The dataset contains about 1700 rows with daily data. 
I want to plot a boxplot so see the monthly values. 
Something like this
<a href="https://i.stack.imgur.com/U7UG4.png" rel="nofollow noreferrer"><img alt="monthly boxplot" src="https://i.stack.imgur.com/U7UG4.png"/></a></p>
<p>I need the months on the x-axes like JAN/FEB/MAR and so on.</p>
<p>I canÂ´t find any working solutions where I can achieve this if I have a daily dataset. I think I have to do data preparation and group the values per month first?
Or how can I program this in an easy and short way?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>dt.strftime('%b')</code> element and create the month column as follows:</p>
<pre><code>df=pd.DataFrame(np.random.randint(50,1000,365).reshape(-1,1),
                index=pd.date_range('2018-01-01','2018-12-31',freq='D'),
                columns=['sum'])
df.reset_index(inplace=True)
df.columns = ['Date','sum']
df.head()

          Date  sum
0   2018-01-01  984
1   2018-01-02  582
2   2018-01-03  967
3   2018-01-04  503
4   2018-01-05  330

df['month'] = df['Date'].dt.strftime('%b')
</code></pre>
<hr/>
<p>Use <code>seaborn.boxplot</code> and pass <code>x='month'</code>, <code>y='sum'</code> and <code>data=df</code> as parameter. You will get the desired boxplot.</p>
<pre><code>fig, ax = plt.subplots()
fig.set_size_inches((12,4))
sns.boxplot(x='month',y='sum',data=df,ax=ax)
plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/IiEOJ.png" rel="nofollow noreferrer"><img alt="Actual Plot look like this" src="https://i.stack.imgur.com/IiEOJ.png"/></a>The plot colors and other parameters are not set as OP's display plot.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that your DataFrame <code>df</code> contains the two columns "date" and "sum", we need to sort it on the "date" field to have the rows in the right order for the plot otherwise we could see the months in the wrong order. Then we need to create a support column containing the name of the month of each date. That's it, we are ready for the plot.</p>
<p>Here the code:</p>
<pre class="lang-py prettyprint-override"><code>import pandas as pd
import seaborn as sns

# just an example...
df = pd.DataFrame([["2013-08-31", 19], ["2013-09-01", 37], ["2013-09-02", 10.75]], columns=["date", "sum"])

# sort the rows by date
df.sort_values(by="date", inplace=True)

# create a support series with the name of the month of each row
month_names = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
months = df["date"].apply(lambda date: month_names[int(date.split("-")[1])-1])

# plot it
sns.boxplot(months, df["sum"])
</code></pre>
<p>I hope it helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the function <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">strftime</a> from datetime.</p>
<p>Here is an example:</p>
<pre><code>from datetime import date
import random
import pandas as pd
from seaborn import boxplot

dates = [date.today()]*10
dataSum = [random.randint(1,100) for x in range(10)] 

d = {'date': dates, 'sum':dataSum}
df = pd.DataFrame(data = d)

dateData =  [x.strftime('%B') for x in df['date']]
boxplot(dateData, df['sum'])
</code></pre>
<p><a href="https://i.stack.imgur.com/TKqri.png" rel="nofollow noreferrer">Resulting Plot</a></p>
</div>
<span class="comment-copy">works perfectly, thank you</span>
