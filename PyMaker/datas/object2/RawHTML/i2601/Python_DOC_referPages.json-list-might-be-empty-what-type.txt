<div class="post-text" itemprop="text">
<p>I want to specify an object which has a <code>prizes</code> property. This might either be a list of <code>PrizeInfo</code> objects, or an empty list. I'm looking for a schema something like the code below, except this returns the following error:</p>
<pre><code>"MySchema": {
    "properties": {
        "prizes": {
            "type": "List['PrizeInfo', 'null']",
        }
    }
 }

E   TypeError: Too many parameters for typing.List; actual 2, expected 1
</code></pre>
<p>I am using these templates to generate Python classes.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no annotation for an 'empty' list. Any empty list object will satisfy a <code>List[...]</code> type hint, regardless of the specifics of what the list contents must be.</p>
<p>So if an empty list is allowed, use</p>
<pre><code>List['PrizeInfo']
</code></pre>
<p>That allows for any list with 0 or more elements, so the empty list is included in that hint.</p>
<p>If you instead meant to say that <code>None</code> values (<code>null</code> in JSON) are permitted next to <code>PrizeInfo</code> objects, then use a <a href="https://docs.python.org/3/library/typing.html#typing.Union" rel="nofollow noreferrer"><code>Union[...]</code> annotation</a> with <code>None</code>:</p>
<pre><code>List[Union['PrizeInfo', None]]
</code></pre>
<p>If you wanted to say that either <code>None</code>, or a list of <code>PrizeInfo</code> objects is permitted (in JSON terms, a <code>null</code> or an array), then use</p>
<pre><code>Union[List['PrizeInfo'], None]
</code></pre>
<p>You could also use <a href="https://docs.python.org/3/library/typing.html#typing.Optional" rel="nofollow noreferrer"><code>Optional[...]</code></a>:</p>
<pre><code>Optional[List['PrizeInfo']]
</code></pre>
<p>to mean the same thing. I'd not use that inside the <code>List[...]</code> hint, however; that reads as if you are saying that the type of the elements might be optional, making for a confusing type specification.</p>
</div>
<span class="comment-copy">Do you mean to use type hinting? Then <code>'null'</code> is not a valid type hint anyway, you'd use the Python object <code>None</code>.</span>
<span class="comment-copy">And <code>List[]</code> can't specify the size of the list, so <code>List[PrizeInfo]</code> would already allow an empty list.</span>
<span class="comment-copy">@MartijnPieters, <a href="https://www.ibm.com/support/knowledgecenter/en/SSFTDH_8.5.7/com.ibm.wbpm.wid.integ.doc/topics/rjsonnullunsempprops.html" rel="nofollow noreferrer">ibm.com/support/knowledgecenter/en/SSFTDH_8.5.7/â€¦</a>. 'null' is a valid type in JSON.</span>
<span class="comment-copy">But type hinting is <b>not JSON</b>.</span>
<span class="comment-copy">You are specifying Python syntax in a JSON string, <b>not</b> JSON syntax in that string. And JSON would use <code>null</code>, not the Python string <code>'null'</code>. Don't mix the two.</span>
<span class="comment-copy">After all, all elements of <code>[]</code> are of type <code>PrizeInfo</code>. :)</span>
