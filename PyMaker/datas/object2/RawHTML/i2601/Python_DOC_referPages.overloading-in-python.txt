<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/36785417/how-to-properly-overload-the-add-method">How to properly overload the __add__ method?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<pre><code>class tri:
def __init__(self,x=0):
    self.x=x
def __str__(self):
    return '({0})'.format(self.x)
def __add__(self,one,two):
    length=self.x+one.x+two.x
    return length


&gt;&gt;&gt;perp=tri(5)
&gt;&gt;&gt;print(perp)
&gt;&gt;&gt;base=tri(8)
&gt;&gt;&gt;print(base)
&gt;&gt;&gt;hyp=tri(9)
&gt;&gt;&gt;print(hyp)
&gt;&gt;&gt;print (perp+base+hyp)
</code></pre>
<p>This is showing me:</p>
<pre><code>TypeError(): __add__() missing 1 required positional argument: 'two'
</code></pre>
<p>What's the problem?  I am not getting it.</p>
</div>
<div class="post-text" itemprop="text">
<p>The purpose of overloading magic methods like <code>__add__</code> in python is to define custom functionality in your <code>__add__</code> method, but not to change it's basic purpose. The <code>__add__</code> method corresponds to the <code>+</code> operator, which is used as an operator between two variables. In other words <code>2 + 2</code> is basically saying <code>2.__add__(2)</code>. You defined your method as:</p>
<pre><code>def __add__(self,one,two):
    length=self.x+one.x+two.x
    return length
</code></pre>
<p>So you're adding a third variable to the magic method therefore <code>2 + 2</code> is basically <code>2.__add__(2, missing_var)</code>, which is why it's telling you that a parameter is missing. I would recommend changing this definition to: </p>
<pre><code>def __add__(self, one):
    return self.x + one.x
</code></pre>
<p>If you really want to overload your method, and then your <code>print</code> method will work as expected. If you really need a method to add three variables then define another method in the class, but overloading <code>__add__</code> typically isn't a good solution. </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/reference/datamodel.html#object.__add__" rel="nofollow noreferrer">The signature of <code>__add__</code></a> must be <code>__add__(self, other)</code>, not <code>__add__(self,one,two)</code>.  The left-hand argument to <code>+</code> is the <code>self</code> argument, and the right-hand argument is the other argument to <code>__add__</code>.</p>
</div>
<span class="comment-copy">The add method should only take two arguments; self, and the thing you're adding to it.</span>
<span class="comment-copy">I guess the error message could be more clear. Instead of saying missing argument it could say you have an extra argument there.</span>
<span class="comment-copy">what if we want to add lengths of three sides of triangle using <b>add</b> function?</span>
<span class="comment-copy">@ToobaAftab: It doesn't matter how many things you're adding together; each <code>+</code> in <code>a+b+c</code> only has two arguments.</span>
