<div class="post-text" itemprop="text">
<p>In Python 3.5.2, Tkinter, I'm creating a basic 'menu' system where one would order something from a menu and then a bill would be created at the bottom, based on the price of what they ordered. Here's the code so far:</p>
<pre><code>from tkinter import *
root = Tk()
root.geometry("500x500")
text1 = Label(root, text="Menu", font='Verdana, 15')
text1.pack()
coststr = StringVar()
cost = 0
coststr.set(str(cost))
menu = ["Burger", "Chips", "Milkshake"]
textln = Label(root, text="\n")
textln.pack()

def choiceburger():
    global cost
    global coststr
    cost += 1.99
    coststr.set(str(cost))

def choicechips():
    global cost
    global coststr
    cost += 1.49
    coststr.set(str(cost))

def choicemilkshake():
    global cost
    global coststr
    cost += 0.99
    coststr.set(str(cost))




burgerbutton = Button(root, text="    Burger   £1.99     ", command=choiceburger)
burgerbutton.pack()
chipsbutton = Button(root, text="    Chips   £1.49       ", command=choicechips)
chipsbutton.pack()
milksbutton = Button(root, text="  Milkshake   £0.99 ", command=choicemilkshake)
milksbutton.pack()

textln = Label(root, text="\n")
textln.pack()
textln = Label(root, text="\n")
textln.pack()
textln = Label(root, text="\n")
textln.pack()
textln = Label(root, text="\n")
textln.pack()
textln = Label(root, text="\n")
textln.pack()

costlabel = Label(root, textvariable=coststr, font='Verdana, 15')
costlabel.pack()
</code></pre>
<p>As you can see, once the button is clicked, a number is kept counted in the bottom, but without any currency sign (£ or $). Since I made <code>textvariable=coststr</code>, I can't edit the label to put a £ or $ sign infront of the cost. Is there any way to do this? Is it already defined in python? Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to include the currency symbol into the setting of the label variable:</p>
<pre><code>conststr.set(str(cost) + "£")      # as suggested by @tobias_k in the comments
</code></pre>
<p>To this effect, you could use an f string to format <code>coststr.set(str(cost))</code>:  </p>
<p>replace with</p>
<pre><code>coststr.set(f'{cost} {currency_symbol}')
</code></pre>
<p>Where <code>currency_symbol</code> is your currency symbol.</p>
<p>Regarding your edit: you can use the <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow noreferrer"><code>decimal.Decimal</code></a> type to avoid float imprecision.</p>
</div>
<span class="comment-copy">use an f string to format <code>coststr.set(str(cost))</code>: <code>coststr.set(f'{cost} {currency_symbol}')</code></span>
<span class="comment-copy">I also found that when adding multiple items, because of the irregular price tags (0.49, 0.99) after around 7 or 8 clicks the bill would go to a long decimal number like 4.000000009 or 5.899999999999. Anyway to stop this too? Set it to only 2 decimal places?</span>
<span class="comment-copy">I added a note on using the decimal module for currency arithmetic.</span>
<span class="comment-copy">Isn't this only possible in Python 3.6+? OP said to be using 3.5. Also, using <code>f</code> strings is not really relevant here, but just putting the symbol back into the string, e.g. <code>conststr.set(str(cost) + "£")</code> or <code>conststr.set("%.2f £" % cost)</code> would work as well.</span>
<span class="comment-copy">Good point @tobias_k, I included your remark as part of my answer, thank you for your valueble input.</span>
