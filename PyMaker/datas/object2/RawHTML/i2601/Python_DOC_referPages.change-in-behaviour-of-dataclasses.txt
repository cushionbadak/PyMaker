<div class="post-text" itemprop="text">
<p>I am working on release 3.7.1 of the <a href="http://www.transcrypt.org/" rel="nofollow noreferrer" title="optional title">Transcrypt</a> Python to JavaScript compiler.
Part of the release procedure is a shipment test, in which Transcrypt is tested back to back with CPython.</p>
<p>It used to run flawlessly with the beta's of CPython 3.7, but with the release there's a problem.</p>
<p>The program:</p>
<pre><code>from dataclasses import dataclass
from typing import ClassVar

@dataclass
class Test:
    x: ClassVar = 10
    y:  int = 10

t = Test ()

t.x = 20

print (repr (t))
</code></pre>
<p>used to print (using CPython):</p>
<pre><code>Test(x=20, y=10)
</code></pre>
<p>but with the release it prints (again just using CPython):</p>
<pre><code>Test(y=10)
</code></pre>
<p>So it leaves out the class variable x from the representation.
Can anyone tell my whether or not this change is intentional,
and where I can find a discussion that justifies it?</p>
<p>With this change Transcrypt behaves differently from CPython, which I don't want.
So I wonder should I adapt Transcrypt or should I consider this a CPython regression and wait for it to be solved.</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/library/dataclasses.html#class-variables" rel="nofollow noreferrer">the documentation</a>:</p>
<blockquote>
<p>30.6.3. Class variables</p>
<p>One of two places where <a href="https://docs.python.org/3/library/dataclasses.html#dataclasses.dataclass" rel="nofollow noreferrer"><code>dataclass()</code></a> actually inspects the type of a
  field is to determine if a field is a class variable as defined in <a href="https://www.python.org/dev/peps/pep-0526" rel="nofollow noreferrer">PEP
  526</a>. It does this by checking if the type of the field is <code>typing.ClassVar</code>. If a field is a <code>ClassVar</code>, it is excluded from
  consideration as a field and is ignored by the dataclass mechanisms.
  Such <code>ClassVar</code> pseudo-fields are not returned by the module-level
  <a href="https://docs.python.org/3/library/dataclasses.html#dataclasses.fields" rel="nofollow noreferrer"><code>fields()</code></a> function.</p>
</blockquote>
<p>So, this appears to be an intentional change.</p>
</div>
