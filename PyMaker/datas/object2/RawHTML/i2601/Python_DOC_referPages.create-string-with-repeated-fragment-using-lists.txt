<div class="post-text" itemprop="text">
<p>I am looking for a elegant way to achieve the following:</p>
<p>I have a list (the size is dynamic, depends of the source file) of column names:</p>
<pre><code>columns = ['col1', 'col2', 'col3']
</code></pre>
<p>and a list of column size:</p>
<pre><code>leng = [20, 30, 15]
</code></pre>
<p>and I want to achieve the string:</p>
<pre><code>a = 'CREATE TABLE dbo.table
     (
      [col1] varchar(20)
     ,[col2] varchar(30)
     ,[col3] varchar(15)
     )'
</code></pre>
<p>I can generate this using:</p>
<pre><code>a = 'CREATE TABLE dbo.table\n(\n('

for i in range(len(columns)):
    a = a + '[' + col[i] + '] varchar(' + str(leng[i]) + ')\n'

a = a + ')'

print(a)
</code></pre>
<p>I wonder if the part with column names can be replaced using format function or sth more elegant than just  "for" loop.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>str.join</code> and <code>str.format</code></p>
<p><strong>Ex:</strong></p>
<pre><code>columns = ['col1', 'col2', 'col3']
leng = [20, 30, 15]

sampleStr = """CREATE TABLE dbo.table
     (
      {}
     )"""

print( sampleStr.format(",".join(["[{}] varchar({})".format(i, j) for i,j in zip(columns, leng)])) )
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>CREATE TABLE dbo.table
     (
      [col1] varchar(20),[col2] varchar(30),[col3] varchar(15)
     )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a> to join columns and their length in parallel.</p>
<pre><code>a = ('CREATE TABLE dbo.table (' 
     + ', '.join(['[{}] varchar({})'.format(col, n) 
                  for col, n in zip(columns, leng)])
     + ')'
     )

&gt;&gt;&gt; a
'CREATE TABLE dbo.table ([col1] varchar(20), [col2] varchar(30), [col3] varchar(15))'
</code></pre>
</div>
<span class="comment-copy">Be aware of SQL injection</span>
<span class="comment-copy">Like this? <code>a = a + '[%s] varchar(%s)\n' %(columns[i], str(leng[i]))</code></span>
