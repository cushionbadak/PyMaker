<div class="post-text" itemprop="text">
<p>Consider a case where you open a file using the <code>with</code> statement and call it <code>file_handle</code>. Then open a new file from within the <code>with</code> block and assign it to previous <code>file_handle</code> as follows:</p>
<pre><code>with open('some/file') as file_handle:
    # some codes
    file_handle = open('another/file')
    # more codes
</code></pre>
<p>My question: What would happen in this case? In fact, I want to know the answer of following questions:</p>
<ol>
<li>What would happen to the first <code>file_handle</code>? Would it be closed after assignment or it remains open?</li>
<li>If after the assignment, an exception happened in the <code>with</code> block, would the newly opened file be closed or not?</li>
<li>Once the <code>with</code> block is finished, does it close the new <code>file_handle</code>?</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>If you're asking this question at all, you should restructure your code so these kinds of ambiguities don't exist.  There's literally an infinite number of possible variable names, and if you choose a different name for the second file handle, this issue goes away.</p>
<pre><code>with open('some/file') as file_handle:
  # some codes
  with open('another/file') as file_handle_2:
    # more codes
</code></pre>
<p>Or, if you don't need the two file handles at the same time, use two separate "with" blocks so that the first one closes before the second is opened:</p>
<pre><code>with open('some/file') as file_handle:
  # some codes
with open('another/file') as file_handle_2:
  # more codes
</code></pre>
<blockquote>
<p>What would happen to the first file_handle? Would it be closed after assignment or it remains open?</p>
</blockquote>
<p>It remains open until the end of the <code>with</code> block.</p>
<blockquote>
<p>If after the assignment, an exception happened in the with block, would the newly opened file be closed or not?</p>
</blockquote>
<p>No.  The <code>with</code> block controls the first file object and nothing is explicitly tracking the second one.</p>
<blockquote>
<p>Once the with block is finished, does it close the new file_handle?</p>
</blockquote>
<p>No, it gets leaked until and unless the garbage collector notices it's unused and closes it for you.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>with</code> key word is a shortened <code>try except block</code>.</p>
<ul>
<li><ol>
<li>It would be closed. </li>
</ol></li>
<li><ol start="2">
<li>Not known. </li>
</ol></li>
<li><ol start="3">
<li>Yes, no need to to use the function path.close().  Example <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">Input and Output python 3:</a></li>
</ol></li>
</ul>
<blockquote>
<p>"If youâ€™re <strong>not</strong> using the <code>with</code> keyword, then you should call f.close() to close the file and immediately free up any system resources used by it."</p>
</blockquote>
</div>
<span class="comment-copy">The first file would get closed, as that's handled by the context manager when the block exits, whether there's an exception or not. The second one: not necessarily.</span>
<span class="comment-copy">So, you mean the new file remains open even after the <code>with</code> block is finished or if an exception happened, Right?</span>
<span class="comment-copy">In my application, I want to repeatedly switch between so many large files, in this case, your solution become impractical, because, it will gradually lead to memory overflow. In fact, that's why I'm going to assign them to the same file handle</span>
<span class="comment-copy">Then close the first file (by exiting its <code>with</code> block) before opening the second one; I added an example of this.</span>
