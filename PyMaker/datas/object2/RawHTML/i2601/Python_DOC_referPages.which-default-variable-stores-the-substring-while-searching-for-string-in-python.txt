<div class="post-text" itemprop="text">
<pre><code>if "a" or "b" or "c" in x:
    print (x)
    print ("a" or "b" or "c")
</code></pre>
<p>Here I want to print the substring a or b or c which present in the string and want to do some manipulation on it.
So which variable stores the substring?</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no variable which gets populated under the hood when you find a match. If you need the match index or the matched substring, you need to ask for it specifically.</p>
<p>In any event, <code>"a" or "b" or "c" in x</code> doesn't do what you hope or assume.  It checks if <code>"a"</code> is a non-<code>False</code> value (which it is, so the remainder of the alternatives are skipped; but for the record, it would then check if <code>"b"</code> is a non-<code>False</code> value, and then finally if <code>"c" in x</code> returns a non-<code>False</code> value).</p>
<p>Depending on what exactly you are looking for, perhaps a regular expression would solve your problem?</p>
<pre><code>import re
regex = re.compile(r'a|b|c')
match = regex.search(x)
if match:
    print('{0} in {1}'.format(match.group(0), x))
</code></pre>
<p>The precise behavior might differ from what you desire. This will find the leftmost match on any one of the alternatives in the regular expression.  If you want different behavior (perhaps first check if <code>"a"</code> is anywhere in the string?) then perhaps ask a more well-defined question.</p>
</div>
<div class="post-text" itemprop="text">
<h2>Wrong condition</h2>
<p>First of all <code>"a" or "b" or "c" in x</code> does not checks if any of those characters are in the string. It checks the truthiness of each expression, immediately stopping at <code>"a"</code> which is truthy.</p>
<p>Instead you want this condition:</p>
<pre><code>if 'a' in x or 'b' in x or 'c' in x:
</code></pre>
<p>It can also be written with <code>any</code>.</p>
<pre><code>if any(c in x for c in ('a', 'b', 'c')):
</code></pre>
<h2>Finding the substring</h2>
<p>As for you question, neither of the above will keep track of which substring was found in <code>x</code> for the expression to be <code>True</code>. You need to do that yourself.</p>
<pre><code>chars = ('a', 'b', 'c')
found_char = next((c for c in chars if c in x), False)
if found_char:
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't fully understand but, the efficient-est way (at least i think is):</p>
<pre><code>if any(i in x for i in {'a', 'b', 'c']):
    print ("a" or "b" or "c")
</code></pre>
<p>But to get it do:</p>
<pre><code>if any(i in x for i in {'a', 'b', 'c'}):
    print ([i for i in {'a', 'b', 'c'} if i in x])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't check three substrings like this. Here if condition is becoming <code>if ("a") or ("b") or ("c" in x)</code>, "a" is True hence will always pass the if condition.</p>
<p>You can the if condition to:</p>
<p><code>if "a" in x or "b" in x or "c" in x</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Based on the English interpretation of your code, it looks like you want something like this:</p>
<pre><code>for val in ["a", "b", "c"]:
    if val in x:
        print(x)
        print(val)
        break  # stop checking once the first match is found
</code></pre>
<p>Olivier Melan√ßon's answer achieves the same thing, so the choice between that and this would just be a matter of style.</p>
<p>If you want all the matches, you could use the set <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">intersection operator</a> (<code>&amp;</code>):</p>
<pre><code>matches = {"a", "b", "c"} &amp; set(x)
print(matches)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try using a regex for this kind of thing.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.findall('[abc]', 'foobaz')
['b', 'a']
</code></pre>
<p>Note that the expression <code>"a" or "b" or "c" in x</code> is just <code>'a'</code>.</p>
</div>
<span class="comment-copy">Can you elaborate using an example?</span>
<span class="comment-copy"><code>a or b or c in x</code> does not test whether any of <code>a,b,c</code> are present in <code>x</code>: <code>(1 or 2 or 3 in {4}) == 1</code>.</span>
<span class="comment-copy">if "0628 Established" or "0629 Terminated" or "662  path up" in x:             print  ("the matched substring")  Where x is a string like x= "comm 0628 Established         sdc jdhfjdfjd"  Which variable I can use for do string manipulaton on the substring?</span>
<span class="comment-copy">Is <code>x</code> a string or a collection?</span>
<span class="comment-copy">A character class is convenient when you are really looking for single-character strings, but it appears from comments that the OP is actually looking for longer strings.</span>
