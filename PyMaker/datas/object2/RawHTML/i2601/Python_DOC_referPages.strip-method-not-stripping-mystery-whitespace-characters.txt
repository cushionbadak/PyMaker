<div class="post-text" itemprop="text">
<p>I am reading some utf-8 encoded data from a file like so:</p>
<pre><code>with open (filename, 'rb') as f:
    bytes= f.read(offset, length)
    #bytes is b'hello\x00\x00\x00\x00'
    text = bytes.decode('utf-8')
    #text is 'hello    '
    stripped_text = text.strip()
    #stripped_text is 'hello    '
</code></pre>
<p>You can recreate this with a simple line like </p>
<pre><code>thing = b'hello\x00\x00\x00\x00'.decode('utf8').strip()
print(thing)
#the output is 'hello    '
</code></pre>
<p>As you can see, the trailing nul characters are not stripped - I assume this has something to do with '\x00' not being recognized by .strip() but everywhere I look seems to think it should be. What gives? How can I remove these characters without having to do something very clunky?</p>
<p>I couldn't find a post which addressed this issue.</p>
</div>
<div class="post-text" itemprop="text">
<p>NULs are not whitespace, so <code>strip()</code> with no arguments will not strip them.  You should instead use <code>strip('\0')</code>:</p>
<pre><code>&gt;&gt;&gt; 'hello\0\0\0\0'.strip('\0')
'hello'
</code></pre>
</div>
<span class="comment-copy">Thank you - this is working, but what is the '\0' argument? the string that strip() is being called on is 'hello    '. is '\0' interpreted as a nul character? Where in the docs is that?</span>
<span class="comment-copy">@Nate: <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer">The argument to <code>strip()</code> is the set of characters to remove.</a> <code>'\0'</code> is another way to spell <code>'\x00'</code>, the NUL character (The first uses an octal escape, the latter a hexadecimal escape; see <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">the tables here</a> for more information).</span>
<span class="comment-copy">Thanks - I wasn't aware you could specify NUL in a string in that way.</span>
<span class="comment-copy">@Nate Curiously, I can't see any documentation for <code>\&lt;number&gt;</code> escape sequences in <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">the relevant section about string literals</a>.</span>
<span class="comment-copy">@Aran-Fey: It's the <code>\ooo</code> line near the bottom of the first table.</span>
