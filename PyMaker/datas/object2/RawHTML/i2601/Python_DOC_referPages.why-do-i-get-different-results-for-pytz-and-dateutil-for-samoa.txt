<div class="post-text" itemprop="text">
<p>I was expecting that the following two would give the same result, but they didn't. Why is that the case?</p>
<p>Versions:</p>
<pre><code>pytz==2018.5
python-dateutil==2.7.3
</code></pre>
<h2>Example 1: pytz</h2>
<pre><code>import datetime
import pytz

tz = pytz.timezone('Pacific/Apia')
today_utc = datetime.datetime(2011, 12, 30, 9, 59,
                              tzinfo=datetime.timezone.utc)
today_tz = today_utc.astimezone(tz)
print(today_tz.isoformat())
</code></pre>
<p>prints <code>2011-12-29T23:59:00-10:00</code> (which is correct)</p>
<h2>Example 2: dateutil</h2>
<pre><code>import datetime
import dateutil.tz

tz = dateutil.tz.gettz('Pacific/Apia')
today_utc = datetime.datetime(2011, 12, 30, 9, 59,
                              tzinfo=datetime.timezone.utc)
today_tz = today_utc.astimezone(tz)
print(today_tz.isoformat())
</code></pre>
<p>prints <code>2011-12-29T23:59:00+14:00</code> (which is wrong)</p>
</div>
<div class="post-text" itemprop="text">
<p>You have discovered a <a href="https://github.com/dateutil/dateutil/issues/812" rel="nofollow noreferrer">bug in <code>dateutil</code></a>, which I have now reported and <a href="https://github.com/dateutil/dateutil/pull/810" rel="nofollow noreferrer">fixed</a>. </p>
<p>The bug was caused by an issue with how the "wall time" of transitions were calculated in <code>dateutil</code>, which was making some assumptions that do not hold when a time zone's base offset changes <em>during DST</em>. Expanding your example a bit:</p>
<pre><code>from datetime import datetime, timedelta
from dateutil import tz
import pytz

APIA = tz.gettz('Pacific/Apia')
APIA_p = pytz.timezone('Pacific/Apia')
dt0 = datetime.fromisoformat('2011-12-29T20:00-10:00')

for i in range(5):
    dt = (dt0 + timedelta(hours=i))
    dt_d = dt.astimezone(APIA)
    dt_p = dt.astimezone(APIA_p)
    print(f'{dt_d.isoformat()}, {dt_p.isoformat()}')

## Result:
# 2011-12-29T20:00:00-10:00, 2011-12-29T20:00:00-10:00
# 2011-12-29T21:00:00-10:00, 2011-12-29T21:00:00-10:00
# 2011-12-29T22:00:00-10:00, 2011-12-29T22:00:00-10:00
# 2011-12-29T23:00:00+14:00, 2011-12-29T23:00:00-10:00
# 2011-12-31T00:00:00+14:00, 2011-12-31T00:00:00+14:00
</code></pre>
<p>You can see that <code>dateutil</code> always calculates the date and time correctly, but when <code>isoformat</code> calls <code>utcoffset</code>, the offset change happens 1 hour early. This is because <code>astimezone</code> calls <a href="https://docs.python.org/3/library/datetime.html#datetime.tzinfo.fromutc" rel="nofollow noreferrer"><code>tzinfo.fromutc</code></a> under the hood, while <code>isoformat</code> calls <a href="https://docs.python.org/3/library/datetime.html#datetime.tzinfo.utcoffset" rel="nofollow noreferrer"><code>utcoffset</code></a>. <code>dateutil</code> stores the transition times in both UTC and local time, the  UTC times are used in <code>fromutc</code> and the local times are used in <code>utcoffset</code>, <code>dst</code> and <code>tzname</code>. This bug involved over-compensating for DST when calculating the "wall time" of the transition during DST-&gt;DST transitions (which are exceedingly rare), which is why it didn't affect <code>astimezone</code>.</p>
<p>Bottom line - you are using both <code>pytz</code> and <code>dateutil</code> correctly, and this error will be fixed in the next release.</p>
<p><strong>Note</strong>: This answer was edited after I found the cause of and fix for the bug.</p>
</div>
<span class="comment-copy">Why do you say -10 is correct and +14 is not correct? <a href="https://www.zeitverschiebung.net/en/timezone/pacific--apia" rel="nofollow noreferrer">This page</a> says Pacific/Apia is UTC+13 normally and UTC+14 in DST.</span>
<span class="comment-copy">Because in 2011-12-29 it was -10. They changed the time zone. See <a href="https://www.timeanddate.de/stadt/zeitzone/samoa/apia" rel="nofollow noreferrer">timeanddate.de/stadt/zeitzone/samoa/apia</a></span>
<span class="comment-copy">lol didn't expect that... So, you are expecting that dateutil should be able to change the timezone depending on the date. Maybe it simply does not do that.</span>
<span class="comment-copy">@zvone All offsets depend on the date</span>
<span class="comment-copy">@zvone Well, that might be. But I would like to hear that from somebody / get a reference here. Currently, I assume I just use dateutil the wrong way. If it could not deal with changes of offsets within the same time zone (I phrased it badly before) that would be bad. It happens pretty often.</span>
