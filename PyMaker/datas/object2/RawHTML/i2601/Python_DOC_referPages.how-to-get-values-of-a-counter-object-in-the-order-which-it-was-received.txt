<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/23747564/how-to-get-count-dict-of-items-but-maintain-the-order-in-which-they-appear">How to get count dict of items but maintain the order in which they appear?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/35446015/how-ordered-counter-recipe-works">How Ordered Counter recipe works</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>Task:
The first line contains the integer, N. 
The next N lines each contain a word.
Output should be:
1) On the first line, output the number of distinct words from the input. 
2) On the second line, output the number of occurrences for each distinct word according to their appearance in the input.
I had no difficulty with #1. For point #2, I used Counter to get the occurrences of the words. However I am having difficulty in printing them in the order which it was received. Below is my code.</p>
<pre><code>from collections import Counter
from collections import OrderedDict
all_words=[]
for _ in range(int(raw_input())):
    name=raw_input()
    all_words.append(name)
uniqlst=list(set(all_words)) 
print len(uniqlst)##On the first line, output the number of distinct words from the input. 


x=OrderedDict(Counter(all_words)) #This is where I am having trouble to get values of x in the order it was received.
print " ".join(map(str,x.values()))
</code></pre>
<p>Input:</p>
<pre><code>4
bcdef
abcdef
bcde
bcdef
</code></pre>
<p>Output of my code:</p>
<pre><code>3
1 1 2
</code></pre>
<p>Expected output:</p>
<pre><code>3
2 1 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This isn't going to work:</p>
<pre><code>x=OrderedDict(Counter(all_words))
</code></pre>
<p>First you're creating a <code>Counter</code> by iterating <code>all_words</code>. Since a <code>Counter</code> is just a <code>dict</code> under the hood, depending on your Python version, this may be in insertion order, consistent-but-arbitrary order, or explicitly-randomized order.</p>
<p>Then you create an <code>OrderedDict</code> by iterating that <code>Counter</code>. That will preserve the order of the <code>Counter</code>â€”which isn't very useful if the <code>Counter</code> was in arbitrary order.</p>
<p>What you want to do is to create a class that does everything <code>Counter</code> does but also does everything <code>OrderedDict</code> does. Which is trivial:</p>
<pre><code>class OrderedCounter(Counter, OrderedDict):
    'Counter that remembers the order elements are first encountered'
</code></pre>
<p>This isn't <em>quite</em> perfect, because its <code>repr</code> will give you the wrong class name, and it won't pickle right. But fixing that is almost as simple. In fact, it's <a href="https://docs.python.org/3/library/collections.html?highlight=counter#ordereddict-examples-and-recipes" rel="nofollow noreferrer">given as an example in the docs</a>:</p>
<pre><code>class OrderedCounter(Counter, OrderedDict):
    'Counter that remembers the order elements are first encountered'

    def __repr__(self):
        return '%s(%r)' % (self.__class__.__name__, OrderedDict(self))

    def __reduce__(self):
        return self.__class__, (OrderedDict(self),)
</code></pre>
</div>
<span class="comment-copy">reverse the list before mapping and joining.</span>
<span class="comment-copy">The <code>Counter</code> gives you values in arbitrary order. The <code>OrderedDict</code> then preserves that arbitrary ordering. That isn't very helpful. What you need to do is create an <code>OrderedCounter</code>, which is <a href="https://docs.python.org/3/library/collections.html?highlight=counter#ordereddict-examples-and-recipes" rel="nofollow noreferrer">a trivial example in the <code>collections</code> docs</a>.</span>
<span class="comment-copy">@Bazingaa I am not using set to get value of x.</span>
