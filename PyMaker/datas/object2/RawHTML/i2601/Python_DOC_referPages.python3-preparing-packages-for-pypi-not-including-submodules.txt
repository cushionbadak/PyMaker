<div class="post-text" itemprop="text">
<p>Notes:</p>
<ol>
<li>I am using Python v3.6</li>
<li>I have read the documentation regarding <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">Modules and Packages</a></li>
<li>I have read and gone through the <a href="https://packaging.python.org/tutorials/packaging-projects/" rel="nofollow noreferrer">Packaging project tutorial</a></li>
<li>I have looked at the <a href="https://github.com/pypa/sampleproject" rel="nofollow noreferrer">Sample Project</a> (different from tutorial project)</li>
</ol>
<p>I have a simple package I want to make</p>
<pre><code>myPackage/                      The project directory
    myPackage/                  Top-level package
      __init__.py               Initialize my package
      myClass.py                a file with a single class in it

    setup.py
    README.md
    ...
    dist/
</code></pre>
<p>where <code>myClass.py</code> is just</p>
<pre><code>class myClass:
    __init__(self):
        print('here')
</code></pre>
<p>and my <code>myPackage/__init__.py</code> file is just like the demo</p>
<pre><code>name = "myPackage"
</code></pre>
<p>I have successful got it on pypi and pip installed it.</p>
<p>I can <code>import myPackage</code> but unlike the tutorial where</p>
<pre><code>example_pkg.name
</code></pre>
<p>works,</p>
<pre><code>myPackage.name
</code></pre>
<p>does not.</p>
<p>The above linked Sample project doesn't exactly elaborate any more on the <strong>init</strong>.py file.</p>
<p>So my question is as follows:</p>
<p>suppose one had a package like that under the documentation for Modules and Packages:</p>
<pre><code>sound/                          Top-level package
      __init__.py               Initialize the sound package
      formats/                  Subpackage for file format conversions
              __init__.py
              wavread.py
              wavwrite.py
              aiffread.py
              aiffwrite.py
              auread.py
              auwrite.py
              ...
      effects/                  Subpackage for sound effects
              __init__.py
              echo.py
              surround.py
              reverse.py
              ...
      filters/                  Subpackage for filters
              __init__.py
              equalizer.py
              vocoder.py
              karaoke.py
              ...
</code></pre>
<p>where the actual file structure is (following the packaging project tutorial)</p>
<pre><code>sound/
    sound/ (Top-level package)
        __init__.py
        ...
    dist/
    build/
    sound.egg/
    README.md
    ...
</code></pre>
<p>What goes in <code>sound/__init__.py</code> (or <code>myPackage/__init__.py</code>) so that I can import it and access the functions, submodules, and classes therein?</p>
<p>Sorry for being an noob at python packaging. </p>
<pre><code># contents of setup.py
import setuptools

with open("README.md", "r") as fh:
    long_description = fh.read()

setuptools.setup(
    name="progil",
    version="0.0.4",
    author="name",
    author_email="name@web",
    description="Progress In Line",
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://pypi.org/project/progil/",
    packages=setuptools.find_packages(),
    classifiers=[
        "Programming Language :: Python :: 3",
        "License :: OSI Approved :: MIT License",
        "Operating System :: OS Independent",
    ],
)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sanity checking the distribution's top-level import names by using my project <a href="https://github.com/wimglenn/johnnydep" rel="nofollow noreferrer">johnnydep</a>:</p>
<pre><code># pip install johnnydep
$ johnnydep progil --fields name summary versions_available import_names
name    summary           versions_available    import_names
------  ----------------  --------------------  --------------
progil  Progress In Line  0.0.2, 0.0.3, 0.0.4   progril
</code></pre>
<p>You are going to kick yourself.  It looks like you named the distribution:</p>
<pre><code>progil
</code></pre>
<p>But you named the package in source code</p>
<pre><code>progril
</code></pre>
<p>pip installing <code>progil</code> and importing <code>progril</code> works.  You didn't notice at setup time because you've used <code>find_packages()</code> and, actually, there is no reason the distribution name needs to match the package name(s).</p>
</div>
<span class="comment-copy">Is your <code>myClass.py</code> file accurate? You're missing a <code>class</code> keyword.</span>
<span class="comment-copy">@Chris just a mock up here, I wrote in the question, so please forgive those errors.</span>
<span class="comment-copy">Please <a href="https://stackoverflow.com/posts/52121006/edit">edit</a> the question then. We have no way of knowing which errors are relevant and which we should ignore. What does "doesn't work" mean? Does <code>myPackage.name</code> raise an <code>AttributeError</code>? Does it contain <code>None</code>? An empty string?</span>
<span class="comment-copy">@wim <a href="https://pypi.org/project/progil/" rel="nofollow noreferrer">pypi.org/project/progil</a></span>
<span class="comment-copy">@Chris done, and NameError</span>
<span class="comment-copy">oh no. New keyboard and laziness to thoroughly check before posting. My apologies. Follow-up can you link me to a in-depth (for beginner) guide  for what to do with the main packages <code>__init__.py</code> file? and if I have a file in a submodule<code>myClass.py</code> which just has <code>class myClass</code> is there a way to import it from the top level module?</span>
<span class="comment-copy">@SumNeuron Please try a few of the obvious things yourself first, and if they don't work, open a new question. SO is trying not to be a chat site.</span>
