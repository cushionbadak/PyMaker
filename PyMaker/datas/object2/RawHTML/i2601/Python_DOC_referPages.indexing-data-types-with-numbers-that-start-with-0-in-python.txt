<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/13013638/python-cannot-handle-numbers-string-starting-with-0-why">Python cannot handle numbers string starting with 0. Why?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I have a function that will convert 3 numbers into a date.</p>
<pre><code>def conv(month, day, year):
    months = ('None','January','February','March','April','May','June','July','August','September','October','November','December')
    print(months[month],str(day)+',',year)
</code></pre>
<p>so if I run the function like this: conv(6,17,2016)
the output will be:</p>
<pre><code>June 17, 2016
</code></pre>
<p>so far so good, but what if I give 06 for the month instead of 6 how can I get the same output like above? is there any way to use 06 and somehow turning it into 6 for indexing or I have to only give 6 and there is no way for doing that?</p>
</div>
<div class="post-text" itemprop="text">
<p>assuming you are aware that 06 will automatically raise a syntax error, that means you can only create a string such as <code>"06"</code>. </p>
<p>with that said, simple use to convert to <code>int</code> </p>
<pre><code>number = int(month)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This will be a little easier to digest:</p>
<pre><code>import datetime

def conv(month, day, year):
    d = datetime.date(year, month, day)
    print(d.strftime("%B %d, %Y"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest to use <code>datetime</code>,</p>
<pre><code>In [31]: d = datetime.datetime.now().date()

In [32]: d.strftime('%B %d, %Y')
Out[32]: 'August 30, 2018'
</code></pre>
<p>Or use <code>calender</code>.</p>
<pre><code>import calendar
def conv(month, day, year):
    print(calendar.month_name[int(month)],str(day)+',',year)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>cast your 06 to <code>int</code> - it will then be a normal 6. So you will print by using <code>print(months[int(month)],str(day)+',',year)</code></p>
<p>but as mentioned in the comments - just use <code>datetime</code> module instead :-)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can convert tuple to <a href="https://docs.python.org/2/library/datetime.html#datetime-objects" rel="nofollow noreferrer"><code>datetime</code></a> then use <a href="https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer"><code>.strftime</code></a> to format it:</p>
<pre><code>&gt;&gt;&gt; tup=(2018,8,30)
&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt; datetime(*tup)
datetime.datetime(2018, 8, 30, 0, 0)
&gt;&gt;&gt; print(datetime(*tup)) # print
2018-08-30 00:00:00
&gt;&gt;&gt; datetime(*tup).strftime('%B %d, %y')
'August 30, 18'
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">Is there a reason you're not using the <code>datetime</code> module? It has the facility to deal with zero-padded values, see <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">here</a></span>
<span class="comment-copy">06 would be invalid - it'd throw an error</span>
<span class="comment-copy">yeah I know I can use datetime but I just wondering if there is a way for that indexing</span>
<span class="comment-copy">yeah you are right I have to either give the 6 or give 06 as a string</span>
<span class="comment-copy"><code>def conv(int(month), day, year):</code> is invalid syntax</span>
<span class="comment-copy">you sure? well, then it can be specified later in the code by doing <code>print(months[int(month)],str(day)+',',year)</code></span>
<span class="comment-copy">Yes I'm sure, I tested it :)</span>
