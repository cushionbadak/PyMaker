<div class="post-text" itemprop="text">
<p>I have an enormous set of data about people store in a nested dictionary.</p>
<p>The outer dictionary has the key is the name of a person and the value is another dictionary contains all information about that person (features, such as email, phone, number, salary, ...). The inner dict keys are the features names (so 'email' and so on), and the value is the value of the feature (so <code>'abcde@gmail.com'</code>).</p>
<p>I know that all people have the same number of features. How can I count how many features there are?</p>
<p>When I do this, I only get the number of people:</p>
<pre><code>print(len(enron_data))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you need the length of just one of the values of the outer dictionary, just pick the 'first' value in iteration order. For dictionaries the <a href="https://stackoverflow.com/questions/15479928/why-is-the-order-in-dictionaries-and-sets-arbitrary">order is either 'arbitrary' or insertion order</a>, but if all your dictionaries have the same number of keys, it doesn't matter which one you pick.</p>
<p>To get the 'first', turn <code>dict.values()</code> into an iterator with <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer"><code>iter()</code></a> and call <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code></a> on the result:</p>
<pre><code>one_value = next(iter(enron_data.values()))  # *one* of the values
number_of_features = len(one_value)
</code></pre>
<p>If <code>next()</code> and <code>iter()</code> look scary, you can also use a <code>for</code> loop and <code>break</code> to end the loop after the first iteration:</p>
<pre><code>for value in enron_data.values():
    number_of_features = len(one_value)
    break
</code></pre>
<p>I'm assuming you are using Python 3 here. If you are using Python 2, use <code>enron_data.itervalues()</code> instead of <code>enron_data.values()</code>, otherwise you create a big new list object for all the values first. That's a waste of memory and CPU time, really.</p>
</div>
<span class="comment-copy">So you need the number of keys for <i>a single dictionary value</i>?</span>
<span class="comment-copy">Thank you, it works :)))</span>
