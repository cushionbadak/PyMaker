<div class="post-text" itemprop="text">
<pre><code>first_name = input("Please enter your first name: ").capitalize()
start_inner = int(input("Hi {}, please enter the start value for the inner loop: ".format(first_name)))
end_inner = int(input("Please enter the end value for the inner loop: "))
start_outer = int(input("Please enter the start value for the outer loop: "))
end_outer = int(input("Please enter the end value for the outer loop: "))

while start_outer &lt;= end_outer:
        while start_inner &lt;= end_inner:
                print("{:&gt;1} {:&gt;1}".format(start_outer,start_inner))
                start_inner = start_inner +1
        start_outer = start_outer +1
print("After the loop")
</code></pre>
<p>If i were to enter 1(start_inner), 4(end_inner), 1(start_outer), 3(end_outer)</p>
<p>I should get</p>
<pre><code>1 1
1 2
1 3
1 3
2 1
2 2
2 3
2 4
3 1
3 2
3 3
3 4
</code></pre>
<p>Instead, I get</p>
<pre><code>1 1
1 2
1 3
1 4
</code></pre>
<p>I asked a very similar question about for loops and adding +1 in my print seemed to help but no luck with while loops.</p>
<p>thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>start_inner</code> is not getting reset back to your initial value. Try using an intermediate variable to iterate over or better yet use a <code>for</code> loop.</p>
<pre><code>start_inner = 1
end_inner = 4
start_outer = 1
end_outer = 3

while start_outer &lt;= end_outer:
    iter_start_inner = start_inner
    while iter_start_inner &lt;= end_inner:
            print("{:&gt;1} {:&gt;1}".format(start_outer,iter_start_inner))
            iter_start_inner += 1
    start_outer = start_outer +1
print("After the loop")
</code></pre>
<p><code>for</code> loop alternative</p>
<pre><code>for i in range(start_outer,end_outer+1):
    for j in range(start_inner,end_inner+1):
            print("{:&gt;1} {:&gt;1}".format(i,j))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to reset start inner again once after inner loop </p>
<pre><code>start_inner = 1
end_inner = 4
start_outer = 1
end_outer = 3    
while start_outer &lt;= end_outer:
            while start_inner &lt;= end_inner:
                    print("{:&gt;1} {:&gt;1}".format(start_outer,start_inner))
                    start_inner = start_inner +1
            start_inner = 1        
            start_outer = start_outer +1
    print("After the loop")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>OR:</p>
<pre><code>...
print('\n'.join("{:&gt;1} {:&gt;1}".format(i,j) for i in range(start_outer,end_outer+1) for j in range(start_inner,end_inner+1)))
print("After the loop")
</code></pre>
</div>
<span class="comment-copy">You do not reset <code>start_inner</code>. Its value only ever increases in the first loop iteration until <code>start_inner &gt; end_inner</code>, and then it stays there for the rest of the outer loops. Just go through it with pen and paper and you'll see it.</span>
<span class="comment-copy">Why don't you use <code>for in</code> loops with the <a href="https://docs.python.org/3/library/stdtypes.html?highlight=range#range" rel="nofollow noreferrer"><code>range</code></a> class?</span>
