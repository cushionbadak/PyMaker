<div class="post-text" itemprop="text">
<p>When I subclass a container, how can I specify type hints for the container part of my definition? I mean something like the (currently not supported) following:</p>
<pre><code>from typing import Dict

class MyDict(dict: Dict[str, int]):
    def __init__(...):
...
</code></pre>
<p>That way, when I am trying to add, remove, etc... objects to my dict through the interface inherited from the base class, it could be type checked.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's mentioned <a href="https://docs.python.org/3/library/typing.html#generics" rel="nofollow noreferrer">here</a> that the form is</p>
<pre><code>from typing import Dict

class Test(Dict[str, int]):
    def __init__(self):
        self.update({'a': 5})

test = Test()
print(test) # prints {'a': 5}
</code></pre>
</div>
<span class="comment-copy">Ok, but this one spits an error: class MyDict(Dict[str, int]):     def __init__(self):         self.update(dict())   It says: Instance of 'MyDict' has not 'update' member. Â¿Why is this error?</span>
<span class="comment-copy">@Stagrovin: the code shown in the edited answer works for me on python 3.6</span>
<span class="comment-copy">Thanks, finally I've managed to see where the problem was: It was pylint, not mypy who complains about a supposed "non existent member" (update), as I've both configured in my editor</span>
