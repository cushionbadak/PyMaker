<div class="post-text" itemprop="text">
<p>Hi I'm trying to list roles alphabetically so far I'm able to list roles on my discord server bit I'm unsure how to list them in alphabetical order in .py I've searched everywhere without any success.</p>
<p>Here is what I'm working with. </p>
<pre><code>import re
import discord
from .utils import checks
from discord.ext import commands
from __main__ import send_cmd_help


class Roles:
    def __init__(self, bot):
    self.bot = bot


@commands.command(pass_context=True, no_pm=True, name='add', aliases=['iam','iplay'])
async def add(self, context, *role_name):
    """Add a role"""
    server = context.message.server
    author = context.message.author
    name = ' '.join(role_name)
    roles = [role.name.lower() for role in server.roles]
    if name.lower() in roles:
        for role in server.roles:
            if role.name.lower() == name.lower():
                if role.permissions.value &lt; 1:
                    try:
                        await self.bot.add_roles(author, role)
                        message = '{} added the role **{}**.'.format(author.display_name, role.name)
                        embed = discord.Embed(description=message.format(author.display_name, role.name), colour=0x00ff00)
                        embed.set_footer(text="Tip: type the command !roles or !list to list all roles.")
                        break
                    except discord.Forbidden:
                        message = 'I have no permissions to do that. Please give me role managing permissions.'
                        embed = discord.Embed(description=message)
                else:
                    message = 'You cannot use this role'
                    embed = discord.Embed(description=message)
            else:
                message = 'No such role'
                embed = discord.Embed(description=message)
    else:
        message = 'I cannot find that role :frowning2:'
        embed = discord.Embed(description=message)
        embed.set_footer(text="Tip: type the command !list to list all roles.")
    await self.bot.say(embed=embed)

@commands.command(pass_context=True, no_pm=True, name='remove')
async def remove(self, context, *role_name):
    """Remove a role"""
    server = context.message.server
    author = context.message.author
    name = ' '.join(role_name)
    roles = [role.name.lower() for role in server.roles]
    if name.lower() in roles:
        for role in server.roles:
            if role.name.lower() == name.lower():
                try:
                    await self.bot.remove_roles(author, role)
                    message = '{} removed the role **{}**'.format(author.display_name, role.name)
                    embed = discord.Embed(description=message.format(author.display_name, role.name), colour=0xff0000)
                    break
                except discord.Forbidden:
                    message = 'I have no permissions to do that. Please give me role managing permissions.'
                    embed = discord.Embed(description=message)
            else:
                message = '`Something went wrong...`'
                embed = discord.Embed(description=message)
    else:
        message = 'There is no such role on this server'
        embed = discord.Embed(description=message)
    await self.bot.say(embed=embed)

@commands.command(pass_context=True, no_pm=True, name='list', aliases=['roles', 'role'])
async def _list(self, context):
    """List of all available roles """
    server = context.message.server
    author = context.message.author
    message = '\n**Hey {}, here is a list of roles you can add:**\n'.format(author.display_name)
    for role in server.roles:
        if role.permissions.value &lt; 1:
            message += '\n{} **({})**'.format(role.name, len([member for member in server.members if ([r for r in member.roles if r.name == role.name])]))
    message += ''
    embed = discord.Embed(description=message.format(), colour=0x0080c0)
    embed.set_footer(text="Tip: to add a role from the list type the command !add/remove followed by the role.")
    await self.bot.say(embed=embed)



def setup(bot):
    n = Roles(bot)
    bot.add_cog(n)
</code></pre>
<p>If anyone could help me on how this works then It would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's all about hunting for what you need.</p>
<p>You are looking to change something when you <strong>list</strong> the roles, so you should check under <code>def _list()</code> function. Within there, we see that it iterates through all the roles inside <code>for role in server.roles:</code>.</p>
<p>This is probably what you are looking to change. By sorting the list just before you iterate through them, you will be able to accomplish it as you need:</p>
<pre><code>for role in sorted(server.roles, key=lambda r: r.name):
</code></pre>
<p>If you adjust your code to the above, you'll basically be using the built-in <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted()</code></a> function to sort the list. By utilizing the <code>key</code> parameter, you can give the function the basis of the sorting, which would be the <code>names</code> attribute of the nested object.</p>
</div>
<span class="comment-copy">Hi Shan, welcome to SO! A few suggestions so that you get better response. 1) "I've searched everywhere" - if you could include a few of your results from that search ("what you've tried"), then that helps us a lot. 2) Thank you for providing your code! A big improvement, IMO, would be to make it "minimal", and to tell us what it does and what you want it to do. That's a <i>very</i> big code dump for something simple like alphabetizing. 3) Have you tried the built-in "sorted" function?</span>
