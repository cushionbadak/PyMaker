<div class="post-text" itemprop="text">
<p>Not really an issue here but more so a question of why and where. </p>
<p>I was looking at some code and I had seen that logging was taking place. The logging was configured with a config file logging.conf. </p>
<p>Here are its contents. </p>
<pre><code>[loggers]
keys=root

[handlers]
keys=consoleHandler,fileHandler

[formatters]
keys=simpleFormatter

[logger_root]
level=DEBUG
handlers=consoleHandler,fileHandler

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=simpleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=FileHandler
level=DEBUG
formatter=simpleFormatter
args=(os.getenv('LOG_FILE_PATH'), 'w')

[formatter_simpleFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
datefmt=
</code></pre>
<p>I am still new to logging and I was wondering if keys and root were special words for config files used by python logging. I checked the logging documentation and saw that they weren't included in log record attributes and there was no mention of them being special terms. Could keys be replaced with some other term? The same goes for root.</p>
</div>
<div class="post-text" itemprop="text">
<p>The documentation for the <a href="https://docs.python.org/3/library/logging.config.html#configuration-file-format" rel="nofollow noreferrer">configuration file format</a> does not make this explicit, but <a href="https://docs.python.org/3/library/logging.config.html#logging.config.fileConfig" rel="nofollow noreferrer"><code>fileConfig</code></a> follows a subset of the format permitted by <a href="https://docs.python.org/3/library/logging.config.html#logging.config.dictConfig" rel="nofollow noreferrer"><code>dictConfig</code></a>.</p>
<p>If you take a look at the <a href="https://docs.python.org/3/library/logging.config.html#dictionary-schema-details" rel="nofollow noreferrer">dictionary schema</a>, you will see that there are <code>loggers</code>, <code>formatters</code> and <code>handlers</code> keys at the top level. These correspond to the names listed under <code>keys</code> in the <code>[loggers]</code>, <code>[formatters]</code>, and <code>[handlers]</code> sections, respectively. Notice that the file format does not support other sections, like <code>[filters]</code>. If you use a name other than <code>keys</code>, the file format will still be valid as such, but the configuration system won't be able to find the information it needs, since it looks for the name <code>keys</code> to get a list of keys.</p>
<p>The root logger is a special logger in the logging system. It's name is <code>root</code> in the configuration. It is the parent of all the other loggers. It's the logger used by the module-level <a href="https://docs.python.org/3/library/logging.html#module-level-functions" rel="nofollow noreferrer">logging functions</a>, it's returned by <a href="https://docs.python.org/3/library/logging.html#logging.getLogger" rel="nofollow noreferrer"><code>getLogger(None)</code></a>, and it's the target of <a href="https://docs.python.org/3/library/logging.html#logging.basicConfig" rel="nofollow noreferrer"><code>basicConfig</code></a>. So the name <code>root</code> is indeed special. That logger always exists, and you can refer to it only by that name in the configuration.</p>
</div>
<span class="comment-copy">No it's not possible. Root means root logger. Any other name means another logger. Keys means the name of your logger, handler, or formatter.</span>
