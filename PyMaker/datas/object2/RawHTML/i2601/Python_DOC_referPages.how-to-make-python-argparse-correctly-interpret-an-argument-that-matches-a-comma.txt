<div class="post-text" itemprop="text">
<p>Suppose I have the following setup:</p>
<pre><code>parser.add_argument('-v', '--version', help='Print version',  action='version', version=VERSION)
parser.add_argument('-a', '--analyse', help='Analyse command execution',  nargs='*', action='append')
</code></pre>
<p>The command <code>analyse</code> receives <code>n</code> options to be analysed. These options might match the signature of commands <code>--version</code> and/or <code>--help</code>. Examples:</p>
<ol>
<li><code>cli --analyse key1 --version</code></li>
<li><code>cli --analyse key2 --help</code></li>
<li><code>cli --analyse key1 --version key2 --help</code></li>
</ol>
<p>If I run 1, 2 or 3, instead of proceeding to <code>analyse</code> execution, <code>argparse</code> executes:</p>
<ul>
<li><code>--version</code> for 1;</li>
<li><code>--help</code> for 2;</li>
<li><code>--version</code> for 3;</li>
</ul>
<p><strong>For the given scenarions, where the command starts with <code>--analyse</code>, I want that the subsequent <code>--version</code> and <code>--help</code> to be interpreted as options of <code>analyse</code> and not the commands which they match the signature. Is that possible?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>argparse.Remainder</code> (explanation in the <a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer">last bullet point here in the doc</a>):</p>
<pre><code>import argparse

VERSION = "1.0"
parser = argparse.ArgumentParser(description='Argparse test')
parser.add_argument('-v', '--version', help='Print version',  action='version', version=VERSION)
parser.add_argument('-a', '--analyse', help='Analyse command execution',  nargs=argparse.REMAINDER, action='append')
args = parser.parse_args()

if args.analyse:
    print(args.analyse)
</code></pre>
</div>
<span class="comment-copy">Great! There is just one situation where it didn't work. For multiple commands posted at once with the short version, e.g.: <code>cli -a k1 v1 -a k2 v2</code> gives me wrong signature, however, <code>cli --analytics k1 v1 --analytics k2 v2</code> works fine. Thank you anyways, I should look into the docs more carefully!</span>
<span class="comment-copy">I am surprised that it works for you with <code>cli --analyse k1 v1 --analyse k2 v2</code>. It should only accept one analyse option and then interpret the rest of the commands as arguments of that option, including all further instances of <code>--analyse</code> and <code>-a</code>.</span>
<span class="comment-copy">You are right, it is interpreting the rest as list. By "work" I meant compatibility with the old command processing logic. I'll have to tweak that a bit in order to process the args as a list instead of the way I was doing. Thanks once more.</span>
