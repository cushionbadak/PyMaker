<div class="post-text" itemprop="text">
<p>I have the following structure:</p>
<pre><code>[
    {
        "name": "a-v1",
        "date": "2018-05-08T08:40:35.000Z"
    },
    {
        "name": "a-v2",
        "date": "2018-05-20T08:40:35.000Z"
    },
    {
        "name": "a-v3",
        "date": "2018-05-22T08:40:35.000Z"
    },
    {
        "name": "b-v1",
        "date": "2018-02-08T08:40:35.000Z"
    },
    {
        "name": "b-v2",
        "date": "2018-05-08T08:40:35.000Z"
    },
    {
        "name": "b-v3",
        "date": "2018-05-10T08:40:35.000Z"
    },
    {
        "name": "c-v1",
        "date": "2018-10-08T08:40:35.000Z"
    },
    {
        "name": "c-v2",
        "date": "2018-11-08T08:40:35.000Z"
    },
    {
        "name": "d-v1",
        "date": "2018-08-08T08:40:35.000Z"
    }
]
</code></pre>
<p>Each <code>name</code> combines from type and version (In <code>a-v1</code> for example, a in the type and v1 is the version).</p>
<p>How can i create a list of all the <code>name</code> which are not the 2 latest versions?
In our case, The output would be:</p>
<pre><code>a-v1
b-v1
</code></pre>
<p>Any idea how to do that in Python? I've been thinking about counting sub-strings. For example: To use <code>-</code> as a delimiter, And count how many times i find the left side of the string (aa, b, c). Is this possible to implement such as thing in Python? Any better ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming your list <code>L</code> is pre-sorted, as in your example, you can use <code>itertools.groupby</code> and use list slicing:</p>
<pre><code>from itertools import chain, groupby
from operator import itemgetter

grouper = groupby(map(itemgetter('name'), L), key=lambda x: x.split('-')[0])
groups = (list(vals)[:-2] for _, vals in grouper)

res = list(chain.from_iterable(filter(None, groups)))

# ['a-v1', 'b-v1']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem would be easier with a slightly different data format.</p>
<p>You didn't write any code so I won't give you a complete answer:</p>
<pre><code>data = [{'name': 'a-v1', 'date': '2018-05-08T08:40:35.000Z'}, {'name': 'a-v2', 'date': '2018-05-20T08:40:35.000Z'}, {'name': 'a-v3', 'date': '2018-05-22T08:40:35.000Z'}, {'name': 'b-v1', 'date': '2018-02-08T08:40:35.000Z'}, {'name': 'b-v2', 'date': '2018-05-08T08:40:35.000Z'}, {'name': 'b-v3', 'date': '2018-05-10T08:40:35.000Z'}, {'name': 'c-v1', 'date': '2018-10-08T08:40:35.000Z'}, {'name': 'c-v2', 'date': '2018-11-08T08:40:35.000Z'}, {'name': 'd-v1', 'date': '2018-08-08T08:40:35.000Z'}]
temp = [d['name'].split('-') for d in data]
# [['a', 'v1'], ['a', 'v2'], ['a', 'v3'], ['b', 'v1'], ['b', 'v2'], ['b', 'v3'], ['c', 'v1'], ['c', 'v2'], ['d', 'v1']]
versions = [(letter, int(v[1:])) for letter, v in temp]
sorted(versions)
</code></pre>
<p>It outputs:</p>
<pre><code>[('a', 1),
 ('a', 2),
 ('a', 3),
 ('b', 1),
 ('b', 2),
 ('b', 3),
 ('c', 1),
 ('c', 2),
 ('d', 1)]
</code></pre>
<p>You could now try to use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> to group the versions by letter and remove every version but the last two ones for each group.</p>
</div>
<span class="comment-copy">I don't see any problem with the approach you proposed .</span>
<span class="comment-copy">The output should contain also a-v3,d-v1,... ? why only a-v1 and b-v1?</span>
<span class="comment-copy">or you may use something like priority queue with limit size, maybe overkill I think.</span>
<span class="comment-copy">@newbie I have 3 versions of <code>a</code>, And i want to keep only the 2 latest version, So and output would be <code>a-v1</code> (Which is the oldest version). Same as for <code>b</code>. As for <code>c</code> and <code>d</code>, I don't have more than 2 versions of each, So the output would be empty for them.</span>
<span class="comment-copy">do you sort by postfix like <code>v1</code> or you account for dates as well? do you need to check the order of v-somehting is in proper date?</span>
<span class="comment-copy">Thanks for answer. My use case has been changed. Should i open a new question or update the current one? The new use case supposed the be much easier, But i still have some issues.</span>
<span class="comment-copy">@Omri, You should open a new question since you already have a couple of answers here. If you've checked any of the solutions on this one, feel free to accept one so other users know.</span>
