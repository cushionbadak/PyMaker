<div class="post-text" itemprop="text">
<p>I was playing with the map object and noticed that it didn't print if I do list() beforehand. When I viewed only the map beforehand, the printing worked. Why?</p>
<p><a href="https://i.stack.imgur.com/hRe52.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/hRe52.png"/></a></p>
<p><a href="https://i.stack.imgur.com/169hY.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/169hY.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a> returns an iterator and you can consume an iterator only once.</p>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; a=map(int,[1,2,3])
&gt;&gt;&gt; a
&lt;map object at 0x1022ceeb8&gt;
&gt;&gt;&gt; list(a)
[1, 2, 3]

&gt;&gt;&gt; next(a)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
StopIteration

&gt;&gt;&gt; list(a)
[]
</code></pre>
<p>Another example where I consume the first element and create a list with the rest</p>
<pre><code>&gt;&gt;&gt; a=map(int,[1,2,3])
&gt;&gt;&gt; next(a)
1 
&gt;&gt;&gt; list(a)
[2, 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As per the answer from @newbie, this is happening because you are consuming the <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a> iterator before you use it. (<a href="https://stackoverflow.com/users/2912340/%c5%81ukasz-rogalski">Here</a> is another great answer on this topic from @LukaszRogalski)</p>
<p><strong>Example 1:</strong></p>
<pre><code>w = [[1,5,7],[2,2,2,9],[1,2],[0]]
m = map(sum,w) # map iterator is generated
list(m) # map iterator is consumed here (output: [13,15,3,0])

for v in m:
    print(v) # there is nothing left in m, so there's nothing to print
</code></pre>
<p><strong>Example 2:</strong></p>
<pre><code>w = [[1,5,7],[2,2,2,9],[1,2],[0]]
m = map(sum,w) #map iterator is generated

for v in m:
    print(v) #map iterator is consumed here

# if you try and print again, you won't get a result
for v in m:
    print(v) # there is nothing left in m, so there's nothing to print
</code></pre>
<hr/>
<p>So you have two options here, if you only want to iterate the list once, <strong>Example 2</strong> will work fine. However, if you want to be able to continue using <code>m</code> as a list in your code, you need to amend <strong>Example 1</strong> like so:</p>
<p><strong>Example 1 (amended):</strong></p>
<pre><code>w = [[1,5,7],[2,2,2,9],[1,2],[0]]
m = map(sum,w) # map iterator is generated
m = list(m) # map iterator is consumed here, but it is converted to a reusable list.

for v in m:
    print(v) # now you are iterating a list, so you should have no issue iterating
             # and reiterating to your heart's content!
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's because it return an generator so clearer example:</p>
<pre><code>&gt;&gt;&gt; gen=(i for i in (1,2,3))
&gt;&gt;&gt; list(gen)
[1, 2, 3]
&gt;&gt;&gt; for i in gen:
    print(i)


&gt;&gt;&gt; 
</code></pre>
<h3>Explanation:</h3>
<ul>
<li>it's because to convert it into the list it basically loops trough than after you want to loop again it will think that still continuing but there are no more elements</li>
</ul>
<p>so best thing to do is:</p>
<pre><code>&gt;&gt;&gt; M=list(map(sum,W))
&gt;&gt;&gt; M
[13, 15, 3, 0]
&gt;&gt;&gt; for i in M:
        print(i)
13
15
3
0
</code></pre>
</div>
<span class="comment-copy">Please do not paste screenshots of your code. Paste the code itself. <a href="https://meta.stackoverflow.com/questions/285551/why-not-upload-images-of-code-on-so-when-asking-a-question/285557#285557">Why not upload images of code on SO when asking a question?</a></span>
<span class="comment-copy">I apologize; I didn't know how to portray the empty output. Since there are coded examples in the answer section, I will not remove the screenshots.</span>
<span class="comment-copy">Thank you newbie; that makes sense.</span>
