<div class="post-text" itemprop="text">
<p>Can tuple with list as an element which can be modified at any stage be key in a dictionary?</p>
</div>
<div class="post-text" itemprop="text">
<p>Tuples are hashable, and therefore usable as dict keys, if and only if all of their elements are hashable.</p>
<p>This is what you're intuitively expect, and it's easy to test:</p>
<pre><code>&gt;&gt;&gt; {(1, 2): 3}
{(1, 2): 3}
&gt;&gt;&gt; {(1, [2]): 3}
TypeError: unhashable type: 'list'
</code></pre>
<p>But if you want to know where it's documented, it's in the <a href="https://docs.python.org/3/library/stdtypes.html#immutable-sequence-types" rel="nofollow noreferrer"><strong>Immutable Sequence Types</strong></a> section of the <strong>Sequence Types â€” <code>list</code>, <code>tuple</code>, <code>range</code></strong> docs:</p>
<blockquote>
<p>The only operation that immutable sequence types generally implement that is not also implemented by mutable sequence types is support for the <code>hash()</code> built-in.</p>
<p>This support allows immutable sequences, such as <code>tuple</code> instances, to be used as <code>dict</code> keys and stored in <code>set</code> and <code>frozenset</code> instances.</p>
<p><strong>Attempting to hash an immutable sequence that contains unhashable values will result in <code>TypeError</code>.</strong></p>
</blockquote>
</div>
<span class="comment-copy">Just try if it works. One of the benefits is the REPL which allows playing with the language.</span>
