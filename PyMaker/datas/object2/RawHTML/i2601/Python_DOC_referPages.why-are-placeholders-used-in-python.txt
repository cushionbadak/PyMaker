<div class="post-text" itemprop="text">
<pre><code>a = "hello"
b = 32
print('%s %d' % (a, b))
print(a,b)
</code></pre>
<p>Both print statement will give out same output i.e hello 32.
But using print(a,b) is much easier then the other method so why the concept of placeholders exist in python.</p>
</div>
<div class="post-text" itemprop="text">
<p>Because sometimes you want to put things other than spaces between items.  What if I wanted to take a name, email address, and employer and generate some formatted result?</p>
<pre><code>d = { "first": "Patrick",
      "last": "Haugh",
      "email": "Patrick.Haugh@example.com",
      "job": "My Job"}

print("{first} {last} &lt;{email}&gt; {job}".format(**d))
# Patrick Haugh &lt;Patrick.Haugh@example.com&gt; My Job

print("{last}, {first}: {job} &lt;{email}&gt;".format(**d))
# Haugh, Patrick: My Job &lt;Patrick.Haugh@example.com&gt;
</code></pre>
<p>You can then write code that accepts a format string, so the code itself doesn't have to change if you want to change how you format your output.  I recommend you read the documentation of the <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer"><code>Format String Syntax</code></a> to get more of an idea of what is possible.</p>
</div>
<span class="comment-copy">Say, you have <code>c = 123</code>. It's an order number, so when printing a report, you want it appear padded to the length of 8 (or whatever), like so: <code>00000123</code>. With format strings, this is trivial. I'd like to see how you would approach this, without format strings.</span>
