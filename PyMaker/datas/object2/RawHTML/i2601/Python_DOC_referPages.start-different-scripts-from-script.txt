<div class="post-text" itemprop="text">
<p>I would like to have several scripts running on PythonAnywhere. In order to make sure that the scripts are not killed I would like to check for their status in an interval of five minutes (based on <a href="https://help.pythonanywhere.com/pages/LongRunningTasks/" rel="nofollow noreferrer">https://help.pythonanywhere.com/pages/LongRunningTasks/</a>). </p>
<p>Two questions arise:
1. In the script which runs every five minutes I would like to check whether the other scripts (script2, script3) are still alive or not. If not, I would obviously like to run them. But how do I run several scripts from one script (script1) without script1 getting "stuck"? I.e. how do I start two scripts at the same time from one script?</p>
<ol start="2">
<li>If I just try to run the script using "import script2" I get an error</li>
</ol>
<blockquote>
<p>ImportError: No module named script2</p>
</blockquote>
<p>How do I tell Python that the script is in a different folder (because that has to be the issue)?</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>import time
import subprocess 

def check_process(proc,path):    
    if proc.poll()!=1:
        print('%s still running' % proc)
    elif proc.poll()==1:#will give a 1 if the child process has been killed
        print('%s is dead. Re-running')
        subprocess.Popen(['python.exe', path])

script1=subprocess.Popen(['python.exe', pathscript1])
script2=subprocess.Popen(['python.exe', pathscript2])

while True:
    check_process(script1,pathscript1)
    check_process(script2,pathscript2)
    time.sleep(300) 
</code></pre>
</div>
<span class="comment-copy">Here's some resources that contain the answers to your questions: <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">Modules</a> is about structuring python projects, <a href="https://www.tutorialspoint.com/python/python_multithreading.htm" rel="nofollow noreferrer">Multithreading</a> is about running multiple sections of your code at once, and <a href="https://docs.python.org/2/library/os.html#os.system" rel="nofollow noreferrer">os.system</a> tells you how to start another program separately from your main program.</span>
<span class="comment-copy">Thanks, problem already solved. First, I had to change the permissions of the file(s), second, I used something like:  p = subprocess.Popen("python3.7 folder/script.py", preexec_fn=os.setsid, shell=True)  This way the process is started as subprocess and doesn't get killed when the mother process is killed.</span>
<span class="comment-copy">Cool. Read up some docs before running to SO in the future, though.</span>
