<div class="post-text" itemprop="text">
<p>I'm currently working on a project that involves an Up-board running ubilinux connected to three usb devices. We have witnessed issues where the board sees the usb device disconnect. When the usb device reconnects, it loads the USBSerial and FTDI_sio module, which is an issue. Before the program can check for the presence of the connected devices I need to run</p>
<pre><code>sudo /sbin/rmmod usbserial
sudo /sbin/rmmod ftdi_sio
</code></pre>
<p>I don't want the program to constantly perform those operations, so what I've done is created a thread that looks for a usb device being plugged in. I'm using pyudev to accomplish this.</p>
<p>My issue is that I don't always have to perform the rmmod for usbserial and ftdi_sio, as they don't always load when the usb device is attached. Is there some way to run a check, written in python, to determine if ftdi_sio and usbserial have loaded?</p>
<p>I've done a number of searches and I find a number of links that show how to do it as a bash script, but I'm trying to find out if I can do it in python. I also seem to get a large number of search results for loading python modules, which isn't very helpful. </p>
</div>
<div class="post-text" itemprop="text">
<p>Here's some <code>Popen</code> code to check if it's loaded using <code>lsmod</code>:</p>
<pre><code>import subprocess

def module_loaded(module_name):
    """Checks if module is loaded"""
    lsmod_proc = subprocess.Popen(['lsmod'], stdout=subprocess.PIPE)
    grep_proc = subprocess.Popen(['grep', module_name], stdin=lsmod_proc.stdout)
    grep_proc.communicate()  # Block until finished
    return grep_proc.returncode == 0


for module_name in ['usbserial', 'ftdi_sio']:
    loaded = module_loaded(module_name)
    print('Module {} {} loaded'.format(module_name, "is" if loaded else "isn't"))
</code></pre>
<p>The print is there just to prove it works; you can replace that with your <code>rmmod</code> code. Output:</p>
<pre><code>Module usbserial isn't loaded
ftdi_sio               52791  0 
Module ftdi_sio is loaded
</code></pre>
<p>I went with <code>modinfo</code> to begin with btw, but that didn't work as intended. <code>modinfo</code> would show the module info regardless of whether or not it was loaded. The <code>lsmod</code> approach appears to work well though.</p>
</div>
<span class="comment-copy">I think you should run the checker scripts (normally written in bash or ..) in your python script like this <code>os.system("/path/to/script.sh")</code>.</span>
<span class="comment-copy">So I'm sure you found some solutions based on <code>modinfo</code> and <code>lsmod</code> in your search. Would running something like this: <a href="https://stackoverflow.com/questions/9845877/how-to-determine-if-a-specific-module-is-loaded-in-linux-kernel" title="how to determine if a specific module is loaded in linux kernel">stackoverflow.com/questions/9845877/â€¦</a> but through python suffice? I can write something small up using <code>Popen</code> if so.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/q/9845877/608639">How to determine if a specific module is loaded in linux kernel</a>, <a href="https://unix.stackexchange.com/q/235230/56041">How to check if a module or a package is already installed in python?</a>, <a href="https://askubuntu.com/q/588390">How do I check whether a module is installed in Python</a>, etc.</span>
<span class="comment-copy">This is what I was looking for. I'll intergrate it into my code and test it out. I've never used Popen before. I'll read up on it. Thank you for the support.</span>
<span class="comment-copy">You're welcome. It's worth noting that <code>Popen</code> is the underlying call for various things in the <code>subprocess</code> module. I usually prefer it because it gives you more granular control. The rest, if you haven't found them already, can be found here: <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">docs.python.org/3/library/subprocess.html</a></span>
