<div class="post-text" itemprop="text">
<p>I'm remaking a game in python and the menu file and the game file are separate. The menu imports the game file as a module and calls it when requested. However I want variables that determine the sound and difficulty to be passed through from the menu file to the game file, as these options are chosen by the user in the menu.</p>
<p>I'm not sure how to do this at all, so here is how i import and call the python game file:</p>
<pre><code>import SpaceInvaders
SpaceInvaders.SpaceInvaders().mainLoop()
</code></pre>
<p>and I want to pass the arguments <em>'sound'</em> and <em>'difficulty'</em> through, whose values are strings.</p>
<p>also i call the main loop function but the variables need to be usable in the SpaceInvaders class so i can assign them to <em>self.sound</em> and <em>self.difficulty</em>, they aren't used in the main loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to pass <code>sound</code> and <code>difficulty</code> to the <code>mainLoop</code> of <code>SpaceInvaders</code>, then make it so that <code>mainLoop</code> takes them as arguments, and then you will be able to send them:</p>
<pre><code>SpaceInvaders.SpaceInvaders().mainLoop(sound, difficulty)
</code></pre>
<p>To answer the additional question <em>"That's the issue, I don't want them in main loop, I want them in the SpaceInvaders class :("</em> - do this:</p>
<pre><code>SpaceInvaders.SpaceInvaders(sound, difficulty).mainLoop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>example usage:</p>
<p><code>python somegame.py hello args --difficulty medium</code></p>
<p>how to use <code>sys.argv</code> create an example:</p>
<pre><code>echo 'import sys;print(sys.argv)' &gt;&gt; test.py
python test.py okay okay --diff med
</code></pre>
<p>output:</p>
<pre><code>['1.py', 'okay', 'okay', '--diff', 'med']
</code></pre>
<p>very basic example using <code>sys.argv</code>:</p>
<pre><code>import sys
import SpaceInvaders

print(sys.argv)
# step through using pdb
# see: https://docs.python.org/3/library/pdb.html
import pdb;pdb.set_trace() #print(dir(), dir(SpaceInvaders))
# 'n' enter, 'n' enter
# set self.stuff

# create the class
invade = SpaceInvaders.SpaceInvaders(sys.argv)

# pass argv to mainLoop
invade.mainLoop(sys.argv)
</code></pre>
<p>and in <code>SpaceInvaders.py</code>:</p>
<pre><code>class SpaceInvaders(object):
    def __init__(self, args):
        print(args)
        self.difficulty = # some var from args
        import pdb;pdb.set_trace()

    def mainLoop(self, args):
        print(args)
</code></pre>
<p>if you want to get really fancy checkout:</p>
<ul>
<li><a href="https://github.com/pallets/click" rel="nofollow noreferrer">https://github.com/pallets/click</a></li>
<li><a href="https://github.com/google/python-fire" rel="nofollow noreferrer">https://github.com/google/python-fire</a></li>
<li>and of course checkout examples of <code>argparse</code></li>
</ul>
</div>
<span class="comment-copy">That's the issue, I don't want them in main loop, I want them in the SpaceInvaders class :(</span>
<span class="comment-copy">@AntsOfTheSky i added it to the answer</span>
<span class="comment-copy">Unfortunately I don't understand this at all and wouldn't be able to implement it. Do you think you could explain this a little please? Thanks for the help!</span>
<span class="comment-copy">@AntsOfTheSky updated. also see: <a href="https://stackoverflow.com/questions/10004850/python-classes-and-oop-basics" title="python classes and oop basics">stackoverflow.com/questions/10004850/â€¦</a> and <a href="https://stackoverflow.com/questions/7803493/how-do-python-modules-work" title="how do python modules work">stackoverflow.com/questions/7803493/how-do-python-modules-work</a></span>
