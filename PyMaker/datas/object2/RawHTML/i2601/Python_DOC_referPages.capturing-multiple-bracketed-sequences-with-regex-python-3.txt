<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/22444/my-regex-is-matching-too-much-how-do-i-make-it-stop">My regex is matching too much. How do I make it stop?</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I'm using Python 3 and working with title strings that have a bracketed tag with a pair of names separated by a <code>+</code>. Like this: <code>[John+Alice] A title here.</code></p>
<p>I've been using the regex expression <code>re.search('\[(.+)\]', title)</code> to get the tag <code>[John+Alice]</code>, which is fine, but it's a problem when encountering a title with more than one bracketed tag:</p>
<pre><code>[John+Alice] [Hayley + Serene] Another title.
</code></pre>
<p>That gives me <code>[John+Alice] [Hayley + Serene]</code>, when I would prefer <code>[John+Alice]</code> and <code>[Hayley + Serene]</code>. </p>
<p>How can I modify the regex to give me all bracketed tags that have <code>+</code> between <code>[</code> and <code>]</code>? Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to make your regex non-greedy, like this:</p>
<pre><code>title = '[John+Alice] [Hayley + Serene] Another title.'

for t in re.findall('\[(.+?)\]', title):
    print(t)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>John+Alice
Hayley + Serene
</code></pre>
<p>If you must include the brackets use <code>finditer</code>:</p>
<pre><code>for t in re.finditer('\[(.+?)\]', title):
    print(t.group())
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[John+Alice]
[Hayley + Serene]
</code></pre>
<p>The non-greedy qualifiers such as <code>*?, +?, ??</code> match as little text as possible. You can find more about greedy vs non-greedy in <a href="https://docs.python.org/3/howto/regex.html#greedy-versus-non-greedy" rel="nofollow noreferrer">here</a>.</p>
<p><strong>Observation</strong></p>
<p>In the question you mentioned that you are using <code>'\[(.+)\]'</code> to match all bracketed tags that have <code>+</code> between <code>[</code> and <code>]</code>, but actually it does a little more than that. For instance, for the following example:</p>
<pre><code>title = '[John+Alice] [Hayley + Serene] [No plus text] Another title.'
re.search('\[(.+)\]', title)
</code></pre>
<p>returns:</p>
<pre><code>[John+Alice] [Hayley + Serene] [No plus text]
</code></pre>
<p>consequently, my modification (using <code>finditer</code>) gives:</p>
<pre><code>[John+Alice]
[Hayley + Serene]
[No plus text]
</code></pre>
<p>Therefore <code>[No plus text]</code> is incorrect, to fix that you should use something like:</p>
<pre><code>title = '[John+Alice] [Hayley + Serene] [No plus text] Another title.'

for t in re.finditer('\[(.+?\+.+?)?\]', title):
    print(t.group())
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[John+Alice]
[Hayley + Serene]
</code></pre>
</div>
<span class="comment-copy">Wow, thank you so much for this really comprehensive answer! I still have so much more to learn. :)</span>
