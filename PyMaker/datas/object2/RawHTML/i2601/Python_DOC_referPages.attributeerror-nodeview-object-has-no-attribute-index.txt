<div class="post-text" itemprop="text">
<p>Im using Networkx pyhton library. </p>
<p>Im tried to test a project which define the following fucntion:</p>
<pre><code>def _set_up_p0(self, source):
        """ Set up and return the 0th probability vector. """
        p_0 = [0] * self.OG.number_of_nodes()

        for source_id in source:
            try:
                # matrix columns are in the same order as nodes in original nx
                # graph, so we can get the index of the source node from the OG
                source_index = self.OG.nodes().index(source_id)
                p_0[source_index] = 1 / float(len(source))
            except ValueError:
                sys.exit("Source node {} is not in original graph. Source: {}. Exiting.".format(
                          source_id, source))
        return np.array(p_0)
</code></pre>
<p>The above code generates an exception:</p>
<pre><code>Traceback (most recent call last):
  File "run_walker.py", line 80, in &lt;module&gt;
    main(sys.argv)
  File "run_walker.py", line 76, in main
    wk.run_exp(seed_list, opts.restart_prob,opts.original_graph_prob, node_list)
  File "./Python_directory/Walker/walker.py", line 57, in run_exp
    p_0 = self._set_up_p0(source)
  File "./Python_directory/Walker/walker.py", line 118, in _set_up_p0
    print(self.OG.nodes().index(source_id))
AttributeError: 'NodeView' object has no attribute 'index'
</code></pre>
<p>in fact the following two lines:</p>
<pre><code>print source
print(self.OG.nodes())
</code></pre>
<p>we get the following error:</p>
<pre><code>['0', '1']
['1', '0', '3', '2', '4']
</code></pre>
<p>So when i call the function _set_up_p0 i get the above exception. Where is my error if you have detected it please</p>
</div>
<div class="post-text" itemprop="text">
<p>When you ask a <code>list</code> for the <code>index</code> of a particular element it performs a linear search from the beginning to find the first matching element. This is slow. It's also error prone as identical nodes will be missed as only the first would be found.</p>
<p>Instead of converting to a <code>list</code> you could <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><strong><code>enumerate</code></strong></a> the <code>nodes</code>. This will generate a sequence of indices and nodes.</p>
<p>You can also convert <code>source</code> to a <code>set</code> if it isn't already, to make lookup more efficient:</p>
<pre><code>source = set(source)

proportion = 1 / float(len(source))

for index, node in enumerate(self.OG.nodes()):
    if node in source:
        p_0[index] = proportion
</code></pre>
<p>edit: alternatively, you can create <code>p_0</code> in one line using a list comprehension, so you don't need the index as there is an implicit one to one correlation with node position:</p>
<pre><code>p_0 = [proportion if node in source else 0.0
       for node in self.OG.nodes()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It depends on the networkx version you are using. More info <a href="https://networkx.github.io/documentation/latest/release/migration_guide_from_1.x_to_2.0.html" rel="nofollow noreferrer">here</a>.</p>
<p>networkx 1.x</p>
<pre><code>&gt;&gt;&gt; G=nx.Graph([(1,2),(3,4)])
&gt;&gt;&gt; G.nodes()
[1, 2, 3, 4]
</code></pre>
<p>networkx 2.x</p>
<pre><code>&gt;&gt;&gt; G=nx.Graph([(1,2),(3,4)])
&gt;&gt;&gt; G.nodes()
NodeView((1, 2, 3, 4))
</code></pre>
<p>As you can see in networkx2.x you don't have a list but a NodeView.<br/>
You can convert to a list with <code>list(G.nodes())</code>.</p>
</div>
<span class="comment-copy">The representation of the <code>nodes</code> looks like a list but isn't actually a list and can't be indexed. You could convert it to a list first.</span>
<span class="comment-copy">@PeterWood: print type(source) ==&gt; &lt;type 'list'&gt;</span>
<span class="comment-copy">@PeterWood: you have reason. I typed l = list(self.OG.nodes()). It works. Thank you</span>
