<div class="post-text" itemprop="text">
<p>Here is how I answered the question below. How would I solve this question better?</p>
<p>**</p>
<blockquote>
<p>Define a procedure, stamps, which takes as its input a positive
  integer in pence and returns the number of 5p, 2p and 1p stamps (p is
  pence) required to make up that value. The return value should be a
  tuple of three numbers(that is, your return statement should be
  followed by the number of 5p, the number of 2p, and the number of 1p
  stamps). Your answer should use as few total stamps as possible by
  first using as many 5p stamps as possible, then 2 pence stamps and
  finally 1p stamps as needed to make up the total. (No fair for USians
  to just say use a "Forever" stamp and be done with it!)</p>
</blockquote>
<p>**</p>
<p><strong>Here is my solution</strong></p>
<pre><code>def stamps(i):
    # Your code here
    five = 0
    two = 0
    one = 0
    while i &gt; 0:
        if i == 0:
            break
        if i &gt;= 5:
            five = five + 1
            i = i - 5
        if i == 0:
            break
        if i &lt; 5 or i == 2:
            two = two + 1
            i = i - 2
        if i == 0:
            break
        if i &lt; 2 or i == 1:
            one = one + 1
            i = i - 1
    return five,two,one
</code></pre>
<p>Here are the tests in the exercise</p>
<pre><code>print stamps(8)
#&gt;&gt;&gt; (1, 1, 1)  # one 5p stamp, one 2p stamp and one 1p stamp
print stamps(5)
#&gt;&gt;&gt; (1, 0, 0)  # one 5p stamp, no 2p stamps and no 1p stamps
print stamps(29)
#&gt;&gt;&gt; (5, 2, 0)  # five 5p stamps, two 2p stamps and no 1p stamps
print stamps(0)
#&gt;&gt;&gt; (0, 0, 0) # no 5p stamps, no 2p stamps and no 1p stamps
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would use modulo and remainder operations:</p>
<pre><code>def modulo_and_remainder(a, b):
    return a//b, a %b

def stamps(a):
    five, rem = modulo_and_remainder(a, 5)
    two, one = modulo_and_remainder(rem, 2)
    return five, two, one
</code></pre>
<p>Alternatively (didn't even know this) you can use builtin divmod:</p>
<pre><code>def stamps(a):
    five, rem = divmod(a, 5)
    two, one = divmod(rem, 2)
    return five, two, one
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To make this a bit more generic, a function that takes a tuple of stamp types:</p>
<pre><code>def stamps(postage_cost,stamps):
        stamps_required = []
        for stamp in stamps:
            (num_stamps,remainder) = divmod(postage_cost,stamp)
            stamps_required.append(num_stamps)
            postage_cost = remainder
        return tuple(stamps_required)

stamp_types = (5,2,1)
required = stamps(8,stamp_types)
print(required)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>def stamps(x):
    return (x / 5, (x - x / 5 * 5) / 2, x - (x / 5 * 5 + (x - x / 5 * 5) / 2 * 2))</code></p>
</div>
<span class="comment-copy">If the code works, the question is <i>probably</i> (consult their guidelines) more suitable for codereview.stackexchange.com. If the code <i>doesn't</i> work, you'll need to be specific about where the expected result differs from the actual result.</span>
<span class="comment-copy">Okay, thanks. The code works. As a newbie just wondering how if the code could be written better. I will look into posting it in codereview.stackexchange.com</span>
<span class="comment-copy">+1, although there already is a built-in function <a href="https://docs.python.org/3/library/functions.html#divmod" rel="nofollow noreferrer"><code>divmod</code></a> that does what you do with <code>modulo_and_remainder</code>.</span>
<span class="comment-copy">yes, that's even better</span>
<span class="comment-copy">This does not provide an answer to the question. Once you have sufficient <a href="https://stackoverflow.com/help/whats-reputation">reputation</a> you will be able to <a href="https://stackoverflow.com/help/privileges/comment">comment on any post</a>; instead, <a href="https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead">provide answers that don't require clarification from the asker</a>. - <a href="/review/low-quality-posts/22673695">From Review</a></span>
<span class="comment-copy">Thank you for this code snippet, which might provide some limited, immediate help. A <a href="https://meta.stackexchange.com/q/114762/349538">proper explanation</a> would greatly improve its long-term value by showing why this is a good solution to the problem and would make it more useful to future readers with other, similar questions. Please <a href="https://stackoverflow.com/posts/55541302/edit">edit</a> your answer to add some explanation, including the assumptions youâ€™ve made.</span>
