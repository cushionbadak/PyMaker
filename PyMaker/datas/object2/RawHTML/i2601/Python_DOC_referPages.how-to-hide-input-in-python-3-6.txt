<div class="post-text" itemprop="text">
<p>After pressing enter the input stays there.For example:</p>
<pre><code>myName = input()
print("My name is:" + myName)
</code></pre>
<p>and output would be:</p>
<pre><code>Alex
My name is:Alex
</code></pre>
<p>But I want to display only the latter.I tried using getpass but it it necessary to show the text while typing and getpass hides it.What can I do ?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import sys

myName = input()

sys.stdout.write("\033[F") # Cursor up one line

print("My name is:" + myName)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Depending on platform, you can move the cursor up a line before printing:</p>
<pre><code>myName = input()
print("\x1B[F\x1B[2K", end="")
print("My name is:" + myName)
</code></pre>
<p>The middle line moves thw cursor up and clears that line in POSIX terminals.</p>
<p>On Windows, it's getting more complicated and you need some libraries to call Windows APIs to achieve this.</p>
</div>
<div class="post-text" itemprop="text">
<p>put both statements into one!</p>
<pre><code>myName = input("My Name is: ")
</code></pre>
<p>This way, "My name is Alex" will be printed for Alex input. Also, Alex is assigned to "myName".</p>
<p>EDIT: Obviously, this is only a workaround and does not answer your question specifically. </p>
</div>
<span class="comment-copy">A workaround would be to simply make <code>My name is:</code> the prompt: <code>myName = input("My name is:")</code>.</span>
<span class="comment-copy">@chepner I mean, that solves the example, but not the general case.</span>
<span class="comment-copy">So you want to type without seeing what you type. Right?</span>
<span class="comment-copy">Do you want to <i>remove</i> the first line <i>after</i> getting the input? You must you <a href="https://docs.python.org/3/howto/curses.html" rel="nofollow noreferrer"><code>curses</code></a> or a similar library.</span>
<span class="comment-copy">The general case involves using a library to control the terminal, which is probably more complicated than it is worth.</span>
<span class="comment-copy">This only works if one is writing to a window that imitates an ANSI/VT100 terminal.</span>
