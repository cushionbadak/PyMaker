<div class="post-text" itemprop="text">
<p>I can't really find anything that really helps online so I thought I'd ask myself.  I have the following code:</p>
<pre><code>username = input()
username = username.capitalize()
print("Hello " + username ) # I want this to be centered 
</code></pre>
<p>I want the print statement to be centered on whatever console it is being ran on.  Thanks for the help!</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two parts to this.</p>
<hr/>
<p>First, you need to get the console width. You do that with <a href="https://docs.python.org/3/library/shutil.html#shutil.get_terminal_size" rel="nofollow noreferrer"><code>shutil.get_terminal_size</code></a>.</p>
<p>Since it isn't always possible to get the console widthâ€”for that matter, there might not even <em>be</em> one (e.g., if your program's standard output is redirected to a file and doesn't even have a terminal), it will fall back to 80 columns (although you can override that if you want):</p>
<pre><code>cols, rows = shutil.get_terminal_size()
</code></pre>
<hr/>
<p>Now you just <a href="https://docs.python.org/3/library/stdtypes.html#str.center" rel="nofollow noreferrer"><code>center</code></a> the string in that width. The fact that the string includes user input doesn't matter. Once you concatenate <code>"Hello "</code> and <code>username</code>, you've got a <code>str</code> that works the same as any other string object. So:</p>
<pre><code>print(("Hello " + username).center(cols))
</code></pre>
<hr/>
<p>If it's possible that the user's input will be too long to fit on one line, you want to wrap it first, then center the lines. You can use the <a href="https://docs.python.org/3/library/textwrap.html" rel="nofollow noreferrer"><code>textwrap</code></a> module for that:</p>
<pre><code>for line in textwrap.wrap("Hello " + username, cols):
    print(line.center(cols))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>os.get_terminal_size().columns</code> to get the number of columns in the terminal and then print the necessary spaces to centralise your text:</p>
<pre><code>import os
def print_centre(s):
    print(' ' * ((os.get_terminal_size().columns - len(s))//2) + s)
</code></pre>
<p><a href="https://i.stack.imgur.com/UX6Hc.png" rel="nofollow noreferrer"><img alt="hello there" src="https://i.stack.imgur.com/UX6Hc.png"/></a></p>
<hr/>
<p>Some improvements (as pointed out by abarnert):</p>
<ol>
<li><code>shutil.get_terminal_size</code> is more reliable than <code>os.get_terminal_size</code>.</li>
<li>You can use <code>s.center(...)</code> for more readability.</li>
</ol>
<p>Which gives a neater solution:</p>
<pre><code>import shutil
def print_centre(s):
    print(s.center(shutil.get_terminal_size().columns))
</code></pre>
</div>
<span class="comment-copy">As the docs for <code>os.get_terminal_size</code> explain, you should not use that function; use the one in <code>shutil</code>. This reads <code>COLUMNS</code> and <code>LINES</code> if they exist, falls back to <code>os.get_terminal_size</code> if they don't, and falls back to 80x24 if that doesn't work either.</span>
<span class="comment-copy">Also, you don't need to manually center text by printing spaces. Just call the <code>center</code> method.</span>
<span class="comment-copy">Ah okay thanks for the pointers!</span>
