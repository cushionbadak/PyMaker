<div class="post-text" itemprop="text">
<p>I would like to convert every other letter of a string into uppercase. For example provided the input is <code>'ahdjeryu'</code>, the result should be <code>'AhDjErYu'</code>.</p>
<p><strong>I was trying this:</strong></p>
<pre><code>def mycode(letters):
    myword = letters.split()
    for i in letters:
        if i%2 == 0:
            return i.upper()
        else:
            return i.lower()
print(mycode('ahdjeryu'))
</code></pre>
<p>The error thrown as: 
    <code>if i%2==0:</code></p>
<blockquote>
<p>TypeError: not all arguments converted during string formatting</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Several issues with your code:</p>
<ol>
<li>You only need to use <code>str.split</code> to remove whitespace. Here, not necessary.</li>
<li>To extract the index of a letter as well as the letter, use <code>enumerate</code>.</li>
<li><code>return</code> will return just one letter. You can instead <code>yield</code> letters and then use <code>str.join</code> on the generator.</li>
</ol>
<p>Here's a working example:</p>
<pre><code>def mycode(letters):
    for idx, i in enumerate(letters):
        if idx % 2 == 0:
            yield i.upper()
        else:
            yield i.lower()

print(''.join(mycode('ahdjeryu')))

AhDjErYu
</code></pre>
<p>The above logic can be equivalently implemented via a generator comprehension:</p>
<pre><code>res = ''.join(i.upper() if idx % 2 == 0 else i.lower() for idx, i in enumerate(letters))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>i</code> is a string of one character, not an index. So you can't do <code>i%2</code>. Use <code>enumerate</code> to get both the index and the value.</p>
<pre><code>alternating = ''.join(letter.upper() if index%2==0 else letter.lower() for index, letter in enumerate(text) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, it error, cause <code>i</code> now is letter not a number, so it can't mod for 2.</p>
<p>Im not sure syntax about looping by <code>for</code> in Python but may you can try:</p>
<pre><code>    cnt = 0 
    for i in letters:
        if cnt%2 == 0:
            return i.upper()
        else:
            return i.lower()
        cnt++
</code></pre>
<p>Hope it can help you!</p>
<p>Fix me if I have any wrong. Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>@Abhi, this is inline with your original logic. You need <code>r</code> to get the index of the letters in the string.</p>
<pre><code>def mycode(letters):
    for ch in letters:
        r=letters.index(ch)
        if r%2 == 0:
                letters=letters.replace(ch,letters[r].upper())
        else:
                letters=letters.replace(ch,letters[r].lower())      
    return letters
print(mycode('ahdjeryu'))
</code></pre>
</div>
<span class="comment-copy">please use like this <code>for i in range(len(letters))</code></span>
<span class="comment-copy">Doku <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate()</a></span>
