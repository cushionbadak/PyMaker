<div class="post-text" itemprop="text">
<p>I have the following code that creates a csv file (sw_mac_addr.csv).  Right now it writes each line that I want.  I need it to separate the values with a comma (,).</p>
<p>a single line from the infile looks like this:
<code>
* 51       0000.0c9f.f033    static    0          F    F  sup-eth2
</code></p>
<p>I want it to appear in the csv file like this:
<code>
51,0000.0c9f.f033,sup-eth2
</code></p>
<pre><code>import os
path = 'c:/sw_mac_addr/'
fh = open("C:/Users/cslayton2/Documents/sw_mac_addr.csv", "w+")
print('Switch Name', 'Port', 'mac addr', 'vlan', sep=",", file=fh)

for filename in os.listdir(path):
    with open(os.path.join(path,filename), "r") as infile:
        for line in infile:
            if line.startswith('*') or line.startswith('+'):
                fh.write(line)
fh.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Pandas can do this well</p>
<pre><code>import pandas as pd

df = pd.read_csv('c:/sw_mac_addr/mycsv.csv', sep=',')
df.to_csv('c:/sw_mac_addr/test.txt')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
path = './text/'
# open this file for writing
with open("sw_mac_addr.csv", "w+") as fh:
    print('Switch Name', 'Port', 'mac addr', 'vlan', sep=",", file=fh)
    # get data from all files in the path
    for filename in os.listdir(path):
        with open(os.path.join(path,filename), "r") as infile:
            for line in infile:
                if line.startswith('*') or line.startswith('+'):
                    # if you want to get rid of the * and +, uncomment the following code
                    # line = line.replace("*","").replace("+","")
                    line = ",".join(line.split()) + "\n"
                    fh.write(line)
                    print(line)
</code></pre>
<p>output (both on console and csv file):</p>
<pre><code>*,51,0000.0c9f.f033,static,0,F,F,sup-eth2

*,51,0000.0c9f.f033,static,0,F,F,sup-eth2

*,51,0000.0c9f.f033,static,0,F,F,sup-eth2
</code></pre>
<p>output with uncommented line of code (line = line.replace("*";"").replace("+","")</p>
<pre><code>51,0000.0c9f.f033,static,0,F,F,sup-eth2

51,0000.0c9f.f033,static,0,F,F,sup-eth2

51,0000.0c9f.f033,static,0,F,F,sup-eth2
</code></pre>
</div>
<span class="comment-copy">Is there a good reason not to use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module in the standard library here (or maybe a third-party library like Pandas)? You <i>can</i> write your own code that parses and builds CSV rows and gets all the quoting/escaping/etc. right, but why do you want to?</span>
<span class="comment-copy">You should definitely look into using <code>csv</code> to both read <code>infile</code> and write <code>outfile</code>.</span>
<span class="comment-copy">Yes, I'm using csv for other scripts.  I'll look into it.</span>
<span class="comment-copy">If your fields don't contain embedded commasand you can do a simple split on <code>line</code>, you might even be able to get away with <code>print(*line.split(), sep=',', file=fh)</code> instead of <code>fh.write(line)</code> but using a <code>csv.writer</code> is definitely more robust.</span>
<span class="comment-copy">and to note: <code>if line.startswith('*') or line.startswith('+')</code> can be written as <code>if line.startswith(('*', '+'))</code>... (or <code>if line.startswith(tuple('*+'))</code>...)</span>
