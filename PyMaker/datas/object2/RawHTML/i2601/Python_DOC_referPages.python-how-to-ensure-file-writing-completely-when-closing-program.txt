<div class="post-text" itemprop="text">
<p>I have a python script which dump yaml file every second while running. However, I found sometimes the yaml file is not completed. My guess is it is coincidence that at the same time I am closing the progress (the script is running in Windows commend line), while the file is saving. Sample code as following:</p>
<pre><code>class State(object):
    def __init__(self):
        ...
        self.__t = threading.Thread(name='StateAutoSave', target=self.__auto_save)
        self.__t.start()

    def __auto_save(self):
        while 1:
            try:
                ...
                self.__save()
            except Exception as err:
                logging.exception(err)
            time.sleep(1)

    def __save(self):
        ...
        with open(self.__yaml_file, 'w') as outfile:
            yaml.dump(data, outfile, default_flow_style=False)
</code></pre>
<p>How to avoid this problem? or is there a method like destructor function in python, so that we can do something when the program is being closed? (It seems that 'with' does not fully work here)</p>
</div>
<div class="post-text" itemprop="text">
<p>The atexit module is made just for this purpose.</p>
<p><a href="https://docs.python.org/3/library/atexit.html" rel="nofollow noreferrer">https://docs.python.org/3/library/atexit.html</a> </p>
<p>Just beware that it only works for normal termination of the script (ctrl + c is considered normal), and it won't work if you app suddenly crashes or you have to force close it.</p>
</div>
<span class="comment-copy">Suggestion: add an except clause which is only catching <code>KeyboardInterrupt</code>(i assume you stop the script via ctrl+c?) and let your save function do its thing then or use the <code>finally</code> clause since it was designed for pretty much this purpose ;&gt;</span>
<span class="comment-copy">@meissner_ Nice idea, I will try. Actually I am exiting with just close the commend line window...</span>
<span class="comment-copy">@meissner_ I found keyboardInterrupt seems being ignored under multi-threading situation. There are some Q and A about this and I am working on this.</span>
<span class="comment-copy">"The functions registered via this module are not called when the program is killed by a signal not handled by Python, when a Python fatal internal error is detected, or when os._exit() is called." Does it mean closing cmd window will trigger the registered funcs?</span>
<span class="comment-copy">Yes, closing a terminal is handled by python, so it will trigger. I believe all the regular POSIX terminal signals are handled</span>
