<div class="post-text" itemprop="text">
<p>The following sample database stores posts of news and relevant information for each piece of news. I'm interested in retrieving the topics associated with each news. The problem is, they are stored in different tables with complex relationships.</p>
<p>Each news is assigned with a <code>newsid</code> in the table <code>NewsFeed</code>:</p>
<pre><code>class NewsFeed(models.Model):
      newsid= models.OneToOneField('NewsSub', 
                   on_delete=models.CASCADE, db_column='newsid', 
                   primary_key=True)

      def __str__(self):
        return str(self.newsid)
</code></pre>
<p>An one-to-one relationship is defined between the field <code>newsid</code> in the class <code>NewsFeed</code> and the model <code>NewsSub</code>:</p>
<pre><code>class NewsSub(models.Model):
      newsid = models.BigIntegerField(primary_key=True)
</code></pre>
<p>In another class <code>NewsTopic</code>, a <code>foreignKey</code> relationship is defined between the field <code>newsid</code> with the model <code>NewsSub</code>: </p>
<pre><code>class NewsTopic(models.Model):
      newsid = models.ForeignKey(NewsSub, on_delete=models.DO_NOTHING, 
             db_column='newsid')
      topicid = models.ForeignKey(NewsLabel, on_delete=models.DO_NOTHING, 
             db_column='topicid', related_name = 'topic')
</code></pre>
<p>In the <code>NewsTopic</code> db table, each <code>newsid</code> may correspond to more than one <code>topicid</code>. Finally, the field <code>topicid</code> of the class <code>NewsTopic</code> is related to the model <code>NewsLabel</code>:</p>
<pre><code>class NewsLabel(models.Model):
      topicid = models.BigIntegerField(primary_key=True)
      topiclabel = models.CharField(max_length=100)

      def __str__(self):
        return self.topiclabel
</code></pre>
<p>In the <code>NewsLabel</code> db table, each <code>toicid</code> corresponds to a unique <code>topiclabel</code>.</p>
<p>My goal is to retrieve the <code>topiclabel</code>(s) associated with each <code>NewsFeed</code> object, by querying the <code>newsid</code>. Suppose <code>result</code> represents one such object, I'm wondering is it possible to do something like <code>result.newsid.topicid.topiclabel</code>?</p>
<p>Thanks and sorry for the long descriptions!!</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this</p>
<pre><code>news_id = 1234567890
news_sub_instance = NewsSub.objects.get(newsid=news_id)

topic_labels = news_sub_instance.newstopic_set.values_list('topicid__topiclabel', flat=True)</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>@EvelynZ</p>
<p>You can use the <code>prefech_related</code> to fetch the values of the related object, please check the <a href="https://docs.djangoproject.com/en/2.1/ref/models/querysets/#prefetch-related" rel="nofollow noreferrer">https://docs.djangoproject.com/en/2.1/ref/models/querysets/#prefetch-related</a></p>
</div>
<span class="comment-copy">Hi, I'm wondering can I retrieve the <code>topic_labels</code> by querying <code>result.topic_labels</code> (suppose <code>result</code> is a <code>NewsFeed</code> object)? I'm trying to do the query on an html page so I'm not sure how and where to implement these code. Thanks!</span>
