<div class="post-text" itemprop="text">
<p>I'm looking for assigned a category to my customer_id based on a condition. 
How to set values in a new columns from this function : </p>
<pre><code># customers categories based on rfm segmentation
cat = ["champion", "loyal", "big spenders", "almost lost", "hibernating", "lost cheap", "uncategorized"]

def customers_cat(rfm, f, m):
    if rfm == '444':
        return cat[0]
    if f == 4:
       return cat[1]
    if m == 4 :
       return cat[2]
    if rfm == '244':
        return cat[3]
    if rfm == '144':
        return cat[4]
    if rfm == '111':
        return cat[5]
    else:
        return cat[6]
</code></pre>
<p>What I would like : 
My dataframe df_cat get a new column df_cat['categories'] where values egals to cat list based on condition in the function. </p>
<pre><code>df_cat['categories'] = customers_cat(df_cat['rfm_score'],
df_cat['f_score'],
df_cat['m_score'])
</code></pre>
<p>Error =&gt; </p>
<pre><code>ValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this will read dataframe row by row. <code>axis=1</code> if you want row by row, 
use:</p>
<pre><code>df_cat['categories'] = df_cat.apply(lambda row: customers_cat(row['rfm_score'],row['f_score'],row['m_score']), axis=1)
</code></pre>
<p>if you are using only one column then you can use. </p>
<pre><code>df_cat['categories'] = df_cat['rfm_score'].apply(lambda row: customers_cat(row), axis=0)
</code></pre>
</div>
<span class="comment-copy">Right now you're comparing an entire series to a number in your function</span>
<span class="comment-copy">i don't quite understand your <code>if else</code> logic</span>
<span class="comment-copy">Maybe I should add previous code Answer of Nihal allows to add values.</span>
<span class="comment-copy">Thanks for your pretty code, it works</span>
