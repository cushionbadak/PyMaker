<div class="post-text" itemprop="text">
<p>I have dataset for binary classification that looks like this:</p>
<pre><code>group_id    pos_in_group    ...    target
...         ...                    ...
172          0                      0
172          1                      0
172          2                      1
172          3                      0
172         ...                    ...
172         719                     0
</code></pre>
<p>So happens that in group only one record can have <code>target == 1</code> and those are more likely to happen at first positions. But model used for prediction doesn't account for that. So there may be several records with predicted <code>target == 1</code> in one group.</p>
<pre><code>group_id    pos_in_group    ...    target
...         ...                    ...
172          0                      0
172          1                      0
172          2                      1
172          3                      0
172          4                      1
172          5                      0
172         ...                    ...
172         719                     0
</code></pre>
<p>With <code>df[df['target'] == 1].groupby(['group_id'])['pos'].min()</code> I can get first occurrence of <code>target == 1</code> in each group. How I can use that to assign <code>target == 0</code> to all records with higher position in each group?</p>
<p>Also, how using <code>1 / df.groupby(['group_id'])['target'].sum()</code> can I scale column in each group by different value?</p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand you correctly.
For your first question you can use <code>df.groupby.min</code> and after that fill <code>target</code> column conditionally with <code>np.where</code>:</p>
<pre><code>target_min = df[df.target == 1].groupby('group_id').pos_in_group.min()

df['target'] = np.where(df.pos_in_group.isin(target_min), 1, 0)

print(df)
   group_id  pos_in_group  target
0       172             0       0
1       172             1       0
2       172             2       1
3       172             3       0
4       172             4       0
5       172             5       0
6       172           719       0
</code></pre>
</div>
<span class="comment-copy">with <code>['pos']</code> you mean column <code>['pos_in_group']</code>?</span>
<span class="comment-copy">Yes, I just shortened it in text.</span>
<span class="comment-copy">with <code>df.groupby(['group_id'])['pos'].min()</code> you would get the first row in this case. But <code>target == 1</code> is in row 3. What is your goal exactly? Because with that code you are not getting the first occurrence of <code>target == 1</code></span>
<span class="comment-copy">Yes... that was a typo, sorry. Of course I need first to filter <code>target == 1</code></span>
<span class="comment-copy">Scaling can be done using this: <code>df['target'] = df.groupby('group_id')['target'].apply(lambda t: t / t.sum())</code></span>
<span class="comment-copy">Yes, that works exactly as needed! Thanks)</span>
