<div class="post-text" itemprop="text">
<p>With <a href="https://bokeh.pydata.org" rel="nofollow noreferrer">Bokeh</a>, how do I get a handle to the <a href="https://bokeh.pydata.org/en/latest/docs/reference/models/renderers.html" rel="nofollow noreferrer"><code>Renderer</code></a> (or <code>GlyphRenderer</code>) for an <a href="https://bokeh.pydata.org/en/latest/docs/reference/models/annotations.html" rel="nofollow noreferrer"><code>Annotation</code></a>? Is this possible? </p>
<p>I would like to be able to toggle a <code>Band</code> (which is an <code>Annotation</code>) on  and off with an interactive legend, so I need to be able to pass a list of <code>Renderers</code> to the <code>LegendItem</code> constructor.</p>
<p>This code:</p>
<pre><code>maxline = fig.line(x='Date', y=stn_max, line_width=0.5, legend=stn_max, name="{}_line".format(stn_max), color=stn_color, alpha=0.75, source=source)
minline = fig.line(x='Date', y=stn_min, line_width=0.5, legend=stn_min, name="{}_line".format(stn_min), color=stn_color, alpha=0.75, source=source)
band = bkm.Band(base='Date', lower=stn_min, upper=stn_max, fill_alpha=0.50, line_width=0.5, fill_color=stn_color, source=source)
bkm.LegendItem(label=stn, renderers=[maxline, minline, band])
</code></pre>
<p>Produces this error</p>
<pre><code>...
ValueError: expected an element of List(Instance(GlyphRenderer)), got seq with invalid items [Band(id='1091', ...)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For <code>LegendItem</code> only instances of <code>GlyphRenderer</code> can be passed to its <code>renderers</code> attribute and <code>Band</code> is not based on <code>GlyphRenderer</code> so it gives error. In the code below the Band visibility is being toggled by means of a callback:</p>
<pre><code>from bokeh.plotting import figure, show
from bokeh.models import Band, ColumnDataSource, Legend, LegendItem, CustomJS
import pandas as pd
import numpy as np

x = np.random.random(2500) * 140 - 20
y = np.random.normal(size = 2500) * 2 + 5
df = pd.DataFrame(data = dict(x = x, y = y)).sort_values(by = "x")

sem = lambda x: x.std() / np.sqrt(x.size)
df2 = df.y.rolling(window = 100).agg({"y_mean": np.mean, "y_std": np.std, "y_sem": sem})
df2 = df2.fillna(method = 'bfill')
df = pd.concat([df, df2], axis = 1)
df['lower'] = df.y_mean - df.y_std
df['upper'] = df.y_mean + df.y_std

source = ColumnDataSource(df.reset_index())
p = figure(tools = "pan,wheel_zoom,box_zoom,reset,save")
scatter = p.scatter(x = 'x', y = 'y', line_color = None, fill_alpha = 0.3, size = 5, source = source)
band = Band(base = 'x', lower = 'lower', upper = 'upper', source = source)
p.add_layout(band)
p.title.text = "Rolling Standard Deviation"
p.xaxis.axis_label = 'X'
p.yaxis.axis_label = 'Y'

callback = CustomJS(args = dict(band = band), code = """
if (band.visible == false)
    band.visible = true;
else
    band.visible = false; """)

legend = Legend(items = [ LegendItem(label = "x", renderers = [scatter, band.source.selection_policy]) ])
legend.click_policy = 'hide'
scatter.js_on_change('visible', callback)
p.add_layout(legend)
show(p)
</code></pre>
<p>Result:</p>
<p><a href="https://i.stack.imgur.com/he3bL.gif" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/he3bL.gif"/></a></p>
</div>
<span class="comment-copy">I will try this, thanks for the example. Still have a hard time wrapping my head around how the arguments get passed to <code>CustomJS</code>.</span>
<span class="comment-copy">this worked well. How did you make your demonstration animation?</span>
<span class="comment-copy">I did screen recording with QuickTime then converted the movie to animated GIF with ffmpeg</span>
