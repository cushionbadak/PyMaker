<div class="post-text" itemprop="text">
<p>I have the following code:</p>
<pre><code>N=200



class Nbody:

num_of_bodies = 0

def __init__(self, x, y, z, vx, vy, vz):
    self.x = x
    self.y = y
    self.z = z
    self.vx = vx
    self.vy = vy
    self.vz = vz

    Nbody.num_of_bodies +=1

def position(self):
    return '{}{}{} {}{} {}{}'.format('(',self.x,',', self.y,',', self.z,')')

nbody_1 = Nbody(random.random(), random.random(), random.random(), 0, 0, 0)
nbody_2 = Nbody(random.random(), random.random(), random.random(), 0, 0, 0)

print(nbody_1.position())
print(nbody_2.position())


print(Nbody.num_of_bodies)
</code></pre>
<p>I want to use a loop to create N number of n bodies instead of having to create them manually i.e where nbody_1 and nbody_2 are. </p>
<p>So for instance a loop that for N=200 creates 200 nbody_(i), where i is an integer step between and including 1 and 200.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>nbodies = [Nbody(random.random(), random.random(), random.random(), 0, 0, 0)
           for i in range(N)]
</code></pre>
</div>
<span class="comment-copy">For starters, you don't want 200 separate variables; use a list or a dict to store the objects instead.</span>
