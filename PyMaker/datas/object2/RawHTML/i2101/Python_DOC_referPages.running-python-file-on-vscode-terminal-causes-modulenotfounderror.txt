<div class="post-text" itemprop="text">
<p>I have a python project that uses flask. I want to run a python file that imports another local file but every time I try to run the python file, it gives me </p>
<blockquote>
<p>ModuleNotFoundError: No module named 'localfile'</p>
</blockquote>
<p>which is caused by the other local file I've imported.</p>
<p>Here is the sample code I've used for importing</p>
<pre><code>import logging
from localfile import (
   sample_import
)


class JustATest():
def print_something(self):
    print("Hello World")


test = JustATes()
test.print_something()
</code></pre>
<p>I hope you guys can help me with this.</p>
<p>Edited:</p>
<p>Here's my file tree.</p>
<pre><code>sample-app(root folder)
+-app
  +-web
    +-folder1
    | +-current_file
    |
    +-localfile
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's because there's no module <code>localfile</code> in the directory <code>folder1</code>.</p>
<p>You may use a <a href="https://realpython.com/absolute-vs-relative-python-imports/#relative-imports" rel="nofollow noreferrer">relative import</a> like <code>from .. import localfile</code>. That means "<em>from a parent directory, import module localfile</em>".</p>
<p>But to prevent relative import hell, I really suggest to use <a href="https://realpython.com/absolute-vs-relative-python-imports/#absolute-imports" rel="nofollow noreferrer">absolute imports</a> instead:</p>
<p>Script <code>app/web/folder1/current_file.py</code>:</p>
<pre><code>from app.web.localfile import sample_import
</code></pre>
<p>And run it using <code>python -m app.web.folder1.current_file</code>.</p>
<p>Some further reading:</p>
<ul>
<li><a href="https://softwareengineering.stackexchange.com/questions/159503/whats-wrong-with-relative-imports-in-python">What's wrong with relative imports in Python?</a></li>
<li><a href="https://docs.python.org/2.5/whatsnew/pep-328.html" rel="nofollow noreferrer">PEP 328 introduced in Python 2.5</a> (the whole <a href="https://www.python.org/dev/peps/pep-0328/" rel="nofollow noreferrer">PEP 328</a>)</li>
<li><a href="https://chrisyeh96.github.io/2017/08/08/definitive-guide-python-imports.html#absolute-vs-relative-import" rel="nofollow noreferrer">Absolute vs. Relative Import</a></li>
<li><a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">The import system</a> in Python's language reference</li>
</ul>
</div>
<span class="comment-copy">Could you add your file tree?</span>
<span class="comment-copy">yes, sure. @Q.Holness</span>
<span class="comment-copy">But there's no <code>localfile</code> module in <code>folder1</code> directory. You should rather use absolute imports: <code>from app.web.localfile import ...</code> and run you script like <code>python -m app.web.folder1.current_file</code>.</span>
<span class="comment-copy">I'm still experiencing the same error though.</span>
<span class="comment-copy">Then you have something different than it's stated in your question. How are you running your script?</span>
<span class="comment-copy">Hi, sorry about my first comment, I'm able to run it already. Thank you!</span>
<span class="comment-copy">Good! Glad you have solved your issue. Give it some time and read about absolute vs. relative imports, it'll pay back. Focus on absolute imports. If you'll understand it and stick to use the absolute imports everywhere, you may not have any issues with imports in the future.</span>
