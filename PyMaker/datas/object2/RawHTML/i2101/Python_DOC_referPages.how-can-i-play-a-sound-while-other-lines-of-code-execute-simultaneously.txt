<div class="post-text" itemprop="text">
<p>I want my code to do this, but with music playing in the background:</p>
<pre><code>import time 
while True:
    print ('ligma')
    time.sleep(1.5)
</code></pre>
<p>I tried this:</p>
<pre><code>import time 
import winsound
while True:
    print ('ligma')
    time.sleep(1.5)
    winsound.PlaySound("dank", winsound.SND_ALIAS)
</code></pre>
<p>but, it repeats the sound <strong>then</strong> repeats the word. I am expecting it to repeat the word and play the sound at the same time.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to play the sound on another thread, so your other code can be executing at the same time.</p>
<pre><code>import time
import winsound
from threading import Thread

def play_sound():
    winsound.PlaySound("dank", winsound.SND_ALIAS)

while True:
    thread = Thread(target=play_sound)
    thread.start()
    print ('ligma')
    time.sleep(1.5)
</code></pre>
<p>EDIT:
I have moved the thread declaration into the loop. My initial answer had it created outside of the loop, which caused a RuntimeError. Learn more here: <a href="https://docs.python.org/3/library/threading.html#threading.Thread.start" rel="nofollow noreferrer">https://docs.python.org/3/library/threading.html#threading.Thread.start</a></p>
</div>
<div class="post-text" itemprop="text">
<p>It's called asynchronous sound, and the <a href="https://docs.python.org/3.2/library/winsound.html#winsound.SND_ASYNC" rel="nofollow noreferrer"><code>winsound.SND_ASYNC</code></a> flag on <code>PlaySound</code> will let you play a sound while your code continues to execute:</p>
<pre><code>winsound.PlaySound("dank", winsound.SND_ALIAS|winsound.SND_ASYNC)
</code></pre>
<p>From memory, this will give you a single sound channel i.e. playing other sounds will cut off any currently playing sounds. If more concurrent playback is required, something like <a href="https://www.pygame.org/" rel="nofollow noreferrer">PyGame</a> is required.</p>
</div>
<span class="comment-copy">Your application is single threaded. The playsound function has an option to make it multi-threaded i.e. return immediately and allow the loop to continue. See the winsound doc <a href="https://docs.python.org/2/library/winsound.html" rel="nofollow noreferrer">docs.python.org/2/library/winsound.html</a> : SND_ASYNC</span>
<span class="comment-copy">I get a error when I use this code</span>
<span class="comment-copy">@DerekLeyman You were probably getting an error about a thread only being able to be started once. I have adjusted the code, so that the thread is created within the loop. Try this and let me know if it worked!</span>
