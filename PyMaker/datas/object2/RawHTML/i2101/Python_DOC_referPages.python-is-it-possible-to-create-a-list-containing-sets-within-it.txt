<div class="post-text" itemprop="text">
<p>Is it possible to create a list containing sets within it?</p>
<p>This code is not compiling ( should I use a dictionary of sets instead? )</p>
<pre><code>v = []

v.append(set(3, 2))

v[2] = set()

v[2].append(3, 1)
</code></pre>
<p>I am trying to do a graph traversal using a quasi Dijkstra's Algorithm.
I am trying to store the adjacency list in sets within a list.
Is this the right approach or should I use another data structure?</p>
<p>I am trying to convert the following C++ into Python. what data structure can I use for the Vector?</p>
<pre><code>        long long leastTimeToInterview (int n, int k, int m)
    {
       vector&lt;set&lt;pair&lt;int, int&gt;&gt;&gt; v (n + 1); // first = time, second = stop #

       while (m--) {
          int i, j, t; cin &gt;&gt; i &gt;&gt; j &gt;&gt; t;
          v[i].insert ({ t, j });
          v[j].insert ({ t, i });
       }

       set&lt;pair&lt;int, int&gt;&gt; s ({ { 0,1 } });
       unordered_set&lt;int&gt; done;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>set(3, 2)</p>
</blockquote>
<p>That's not how you define a set. The set constructor only takes one argument.</p>
<p>Instead use: </p>
<pre><code>v = []
v.append({3, 2})
print(v)
</code></pre>
<p>Output: </p>
<pre><code>[{2, 3}]
</code></pre>
<p>As an alternative, you can pass any iterable to the set constructor:</p>
<pre><code>set((3, 2))
set([3, 2])
</code></pre>
</div>
<span class="comment-copy">Yes it's possible. But <code>[2]</code> doesn't exist as an index when your list only contains a single item at index <code>0</code>, which happens to be a <code>set</code></span>
<span class="comment-copy">Please work through basic tutorials on the language features you're trying to use.  This will solve your specific problems, and give you a wider understanding of the language.</span>
<span class="comment-copy">Yes I understand but in C++ you can have a vector v and start assigning it v[i] right away as per the code block above.  What is the equivalent data structure of vector in Python where I can use this kind of functionality?</span>
<span class="comment-copy">@fynx take a look at this <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">python_in_built_ds_page</a></span>
<span class="comment-copy">Thanks, so what your saying is that all the 3 statements below are equivalent?      v = []      v.append({3, 2})      v.append(set([3, 1]))      v.append(set((1, 3)))</span>
<span class="comment-copy">@fynx exactly, <code>{3, 2} == set([3, 1] == set((1, 3))</code></span>
<span class="comment-copy">Ok Thanks, but I am trying to convert C++ code which uses vectors into Python, so can I use a List for this purpose? here is the code I am trying to convert: ( The code does not format properly here so I will add it up above)</span>
<span class="comment-copy">@fynx sets are not ordered, so in your case, you should use a list of list or a list of tuples</span>
