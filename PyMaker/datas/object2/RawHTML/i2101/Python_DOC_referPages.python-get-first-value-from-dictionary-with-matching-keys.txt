<div class="post-text" itemprop="text">
<pre><code>d= {'Time': '1', 'Key':'val1'}
d1={'Time':'2', 'Key':'val1'}
d2={'Time':'3', 'Key':'val1'}
d3={'Time':'3', 'Key':'val2'}
d3={'Time':'8', 'Key':'val2'}}
</code></pre>
<p>How to print the output in this format:</p>
<pre><code>output=[{Time': '1', 'Key':'val1'}, {'Time':'3', 'Key':'val2'}]
</code></pre>
<p>How do I remove the duplicate values by a single key, value combination and print the first occurrence of the combination. Thanks for you help. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>lst =  [
    {'Time': '1', 'Key':'val1'},
    {'Time':'2', 'Key':'val1'},
    {'Time':'3', 'Key':'val1'},
    {'Time':'3', 'Key':'val2'},
    {'Time':'8', 'Key':'val2'}
]
</code></pre>
<p>Using a <code>for</code> loop with <code>any</code></p>
<pre><code>res = []
for i in lst:
    if not any(i['Key'] in x.values() for x in res):
        res.append(i)
    else:
        pass

print(res)
# [{'Time': '1', 'Key': 'val1'}, {'Time': '3', 'Key': 'val2'}]
</code></pre>
<p>Can be done with <code>itertools.groupby</code></p>
<pre><code>res = []
for _, g in groupby(lst, key = lambda x: x['Key']):
    res.append(list(g)[0])
</code></pre>
<p><code>itertools.groupby</code> with list comprehension and <code>operator.itemgetter</code></p>
<pre><code>from itertools import groupby
from operator import itemgetter

res = [list(g)[0] for _, g in groupby(lst, key=itemgetter('Key'))]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also collect items in a dictionary as you <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>reduce</code></a> and only add if the key isn't present:</p>
<pre><code>from functools import reduce

lst =  [
    {'Time': '1', 'Key':'val1'},
    {'Time':'2', 'Key':'val1'},
    {'Time':'3', 'Key':'val1'},
    {'Time':'3', 'Key':'val2'},
    {'Time':'8', 'Key':'val2'}
]

def collect_if_absent(acc, d):
    if d['Key'] not in acc:
        acc[d['Key']] = d
    return acc

res = list(reduce(collect_if_absent, lst, {}).values())
print(res)
# [{'Time': '1', 'Key': 'val1'}, {'Time': '3', 'Key': 'val2'}]
</code></pre>
<p>This should take <em>O(n)</em>.</p>
</div>
<span class="comment-copy">Check <a href="https://stackoverflow.com/questions/8749158/removing-duplicates-from-dictionary">this</a> out</span>
