<div class="post-text" itemprop="text">
<p>I'm scraping this website: <a href="http://housing.ucdavis.edu/dining/menus/dining-commons/tercero/" rel="nofollow noreferrer">http://housing.ucdavis.edu/dining/menus/dining-commons/tercero/</a>. The following is my code: </p>
<pre><code>import requests #For request to the website
from bs4 import BeautifulSoup  #For parsering
from warnings import warn #For non-200 status code

url = 'http://housing.ucdavis.edu/dining/menus/dining-commons/tercero/' 
page = requests.get (url)
if page.status_code != 200:
    warn('Search: {}; Status code: {}. Status of the request is not normal.'.format (search, page.status_code))
else: 
    soup = BeautifulSoup(page.content, 'html.parser')

    main_content = soup.find('div', attrs = {'id': 'tab4content'})
    meal_tag = main_content.find_all('h4')

meal_list = []
for meal in meal_tag: 
    meal_name = meal.text
    meal_list.append(meal_name)
print ('The meals we have today are: '+", ".join(meal_list))
print (meal_list)


for meal_pick in meal_list: 
    print (meal_pick)
    locations_per_meal = main_content.find('h4',text=str(meal_pick)).find_next_siblings('h5')

    for location in locations_per_meal: 
        print (location.text)
        dish_list = main_content.find ('h5',text=location.text).find_next_sibling('ul')

        real_dish_list = []
        for dish in dish_list: 
            real_dish_list = dish_list.findChildren('span')

            real_item_list = []
            for item in real_dish_list:
                item = item.text
                real_item_list.append(item)
        print (real_item_list)
</code></pre>
<p>Basically, I want to reproduce all the dish names, where they are and which meal they belong to. However, my code only works for Breakfast and other meals will have the exact same dishes as the Breakfast, unless a location didn't show up in the Breakfast. I think somehow I cannot overwrite the old dishes by the new ones. Could someone have a review and help me out on this issue? Thanks~</p>
</div>
<div class="post-text" itemprop="text">
<p>You have a logic error, and it's difficult to debug because you're attempting to print unformatted HTML straight to the console.
To make it easier on yourself, you should populate a dict with your structured data as early as possible, using either <a href="https://docs.python.org/3/library/stdtypes.html#dict.update" rel="nofollow noreferrer"><code>dict.update()</code></a> or <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer"><code>dict.setdefault()</code></a>.</p>
<p>In either an interactive Python console, or in a running program, you can also access the most recent item from a loop outside of its scope, i.e.</p>
<pre class="lang-py prettyprint-override"><code>menu = {}
for meal in meal_tag:
   # some loops later...
   menu.update({meal.text: {}})
# ...
import json
print(json.dumps(menu, indent=4))
print(meal.find_next_siblings('h5')[0].find_next_sibling('ul').find_all('li', recursive=False)[0].span.text)
</code></pre>
<p>I encourage you to experiment in the interpreter as much as you can.</p>
<p>Back on topic--your logic error probably has something to do with the fact that <code>print(real_item_list)</code> is on a different scope than I would expect you to put it, but I found debugging your code annoying enough to not look too deeply into it.</p>
<p>Again, emphasizing the importance of making debugging as easy as possible.</p>
<p>In fact, it was easier to just rewrite it. You should be able to do the meat of your looping in about 7 lines and 3 loops.</p>
</div>
