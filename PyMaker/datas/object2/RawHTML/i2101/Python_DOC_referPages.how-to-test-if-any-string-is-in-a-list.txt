<div class="post-text" itemprop="text">
<p>I'm trying to make an AI. The AI knows to say 'Hello' to 'hi' and to stop the program on 'bye', and if you say something it doesn't know it will ask you to define it. For example, if you say 'Hello' it will ask what that means. You type 'hi' and from then on when you say 'Hello' it will say 'Hello' back. I store everything in a list called knowledge. It works like this:</p>
<pre><code>knowledge = [[term, definition], [term, definition], [term, definition]]
</code></pre>
<p>I am trying to add an edit function, where you type <code>edit foo</code> and it will ask for you to input a string, to change the definition of <code>foo</code>. However, I'm stuck. First, of course, I need to test if it already has a definition for <code>foo</code>. But I can't do that. I need to be able to do it regardless of the definition. In other languages, there is <code>typeOf()</code>. However <code>type()</code> doesn't seem to work. Here's what I have, but it doesn't work:</p>
<pre><code>if [term, type(str)] in knowledge:
</code></pre>
<p>Can someone help?</p>
</div>
<div class="post-text" itemprop="text">
<p>As noted by tehhowch in the comments, a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> would be more appropriate as these are "key: value" pairs.</p>
<p>Using a dictionary...</p>
<pre><code>knowledge = {'foo': 'foo def', 'bar': 'bar def', 'baz': 'baz def'}
searchTerm= 'foo'
searchTerm in knowledge

Out[1]: True
</code></pre>
<p>Storing <code>knowledge</code> as a list of lists fails because each item in <code>knowledge</code> is itself a list.  Therefore, searching those lists for a string type (your term) fails.  Instead, you could pull the terms out as a separate list and then check that one list for the term you're looking for.</p>
<pre><code>knowledge = [["foo", "foo definition"], ["bar", "bar definition"], ["baz", "baz 
definition"]]

terms = [item[0] for item in knowledge]

searchTerm= "foo"
searchTerm in terms

Out[1]: True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As others have mentioned, Python would typically use a dict for this kind of associative array. You approach is analogous to a Lisp data structure called an <a href="https://en.wikipedia.org/wiki/Association_list" rel="nofollow noreferrer">Association List</a>. These are less efficient than the hashtable structures used by dicts, but they still have some useful properties.</p>
<p>For example, if you look up a key by scanning through the pairs and getting the first one, this means that you can insert another pair <em>with the same key</em> at the front and it will shadow the old value. You don't have to remove it. This makes insertions fast (at least with Lisp-style linked lists). You can also "undo" this operation by deleting the new one, and the old one will then be found by the scanner.</p>
<p>Your check <code>if [term, type(str)] in knowledge:</code> could be made to work as</p>
<pre><code>if [term, str] in ([term, type(definition)] for term, definition in knowledge):
</code></pre>
<p>This uses a generator expression to convert your <code>term, definition</code> pairs into <code>term, type(definition)</code> pairs on the fly.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use dictionary to store definitions rather than list of lists and python's <code>isinstance</code> function will help you check if <code>term</code> belongs to specific class or not. see below example:</p>
<pre><code>knowledge = {'Hello':'greeting','Hi':'greeting','Bye':'good bye'}

term = "Hello"

if isinstance(term, str):
    if term in knowledge:
        print("Defination exist")
    else:
        print("Defination doesn't exist") 
else:
    print("Entered term is not string")
</code></pre>
</div>
<span class="comment-copy">Hi, please read the <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> guidelines and update your question accordingly.</span>
<span class="comment-copy">To answer the question in the subject about how to test if a string is in a list: <code>'strings' in ['list', 'of', 'strings'] # True</code></span>
<span class="comment-copy">Why are you using a list to store a key value pair?</span>
<span class="comment-copy">If you're just looking to check whether a variable is string or not , refer - <a href="https://stackoverflow.com/questions/4843173/how-to-check-if-type-of-a-variable-is-string" title="how to check if type of a variable is string">stackoverflow.com/questions/4843173/â€¦</a></span>
<span class="comment-copy">Thanks, this worked!</span>
<span class="comment-copy">That <code>.keys()</code> is redundant.</span>
