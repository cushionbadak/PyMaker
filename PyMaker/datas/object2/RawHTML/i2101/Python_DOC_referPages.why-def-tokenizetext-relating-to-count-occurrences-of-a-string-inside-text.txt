<div class="post-text" itemprop="text">
<p>I feel disgraced by asking about the solution of my "homework" here. But I have already spent 4 hours on it, cannot continue like this.</p>
<p><strong>Assignment:</strong> count occurrences of a specific string inside a Lorem Ipsum text (already given); a helper function tokenize that splits a given text and returns a list of tokens has been provided.</p>
<pre><code>def tokenize(text):
    return text.split()

for token in tokenize(text):
    print(token)
</code></pre>
<p>Task: Write a function <code>search_text()</code> which takes two parameters in this order: <code>filename</code> and <code>query</code>.</p>
<p>The function should return the number of occurrences of <code>query</code> inside the file <code>filename</code>.</p>
<pre><code>query = 'ipsum'
search_text('lorem-ipsum.txt', query) # returns 24
</code></pre>
<hr/>
<p>My code:</p>
<pre><code>def tokenize(text):
    return text.split()

def search_text(filename, query):
    with open("lorem-ipsum.txt", "r") as filename:
      wordlist = filename.split()
      count = 0
   for query in wordlist:
      count = count + 1
   return count

query = "lorem"
search_text('lorem-ipsum.txt', query)
</code></pre>
<p>It doesn't work and looks a little bit mess. To be honst, I don't unterstand how the function <code>tokenize()</code> works here.</p>
<p>Could someone give me a hint? </p>
</div>
<div class="post-text" itemprop="text">
<p>You actually have to call the function <code>tokenize()</code> if you want to use it; your code does not.</p>
<p>This version could work:</p>
<pre><code>def tokenize(text):
    return text.split()

def search_text(filename, query):
    word_list = []
    with open(filename, 'r') as f:
        for line in f:
            line = line.strip()
            if len(line) &gt; 0:
                # add tokens to the list, only if line is not empty
                wordlist.extend(tokenize(line))

    count = 0
    for word in word_list:
        if word == query:
            count += 1

    return count

query = "lorem"
search_text('lorem-ipsum.txt', query)
</code></pre>
<hr/>
<p>You could also use other counting methods, like <a href="https://stackoverflow.com/q/2600191/9225671">this question</a> shows. Here is a solution using the <a href="https://docs.python.org/3/library/stdtypes.html#common-sequence-operations" rel="nofollow noreferrer"><code>.count()</code></a> method of sequences:</p>
<pre><code>return word_list.count(query)
</code></pre>
</div>
<span class="comment-copy">The function takes an input string <code>text</code>, runs <code>text.split()</code>, and returns the resulting list (it is a list of words in that string, in this example). In your code it does nothing, because you do not ever call <code>tokenize()</code>.</span>
<span class="comment-copy">Maybe take a step back from the code for a second. How would you go about solving this by hand, if you were given a string of characters and told to find a specific string?</span>
<span class="comment-copy">Hey @CJ59 Thank you very much for the explanation. I also tried:  "for query in tokenize(filename)". Still wrong.</span>
