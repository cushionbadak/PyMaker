<div class="post-text" itemprop="text">
<p>I have a dict which is in the following form:</p>
<pre><code>Sigs_dict['a']=[1,2,3,4,5]
Sigs_dict['b']=[6,7,8,9,0]
Sigs_dict['c']=[1,2,3,4,5]
</code></pre>
<p>I whould like to have a csv file where the first line is the keys of the dict and the next line the vectors in a column shape.
Like: </p>
<pre><code>a    b    c
1    6    1
2    7    2
3    8    3
4    9    4
5    0    5
</code></pre>
<p>what I have for now is the first line but I don't understand how to write the vectors properly.</p>
<pre><code>with open(fileName[0], 'w') as f:
    writer = csv.writer(f, delimiter = ' ')
    writer.writerow(Sigs_dict.keys())
    #missing something here
</code></pre>
<p>All vectors have the same length.</p>
</div>
<div class="post-text" itemprop="text">
<p>Simple option using the <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code> built-in</a> (no <code>pandas</code> dependency, eventhough <code>pandas</code> allows for less code lines):</p>
<pre><code>my_dict = {}
my_dict['a'] = [1, 2, 3, 4, 5]
my_dict['b'] = [6, 7, 8, 9, 0]
my_dict['c'] = [1, 2, 3, 4, 5]

# get keys and values in the same order, in this case, sorted by key
# key_list = sorted(my_dict.keys())
key_list = [k for k, _ in sorted(my_dict.items())]
val_list = [v for _, v in sorted(my_dict.items())]

with open(fileName[0], 'w') as f:
    writer = csv.writer(f, delimiter=' ')
    writer.writerow(key_list)
    for row in zip(*val_list):
        writer.writerow(row)
</code></pre>
<p>Note how I unpack <code>val_list</code> using the asterisk (<code>*</code>); without that unpacking this won't work as expected.</p>
<hr/>
<p>Edited my code to have a fixed ordering to prevent mismatch between column header and content.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are ok with using pandas </p>
<pre><code>import pandas as pd
pd.DataFrame(Sigs_dict).to_csv('your_csv_file_path.csv',index=False,sep=' ')
</code></pre>
<p>Will produce</p>
<pre><code>a b c
1 6 1
2 7 2
3 8 3
4 9 4
5 0 5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Even if the input is a dictionary, you cannot use <code>csv.DictWriter</code>, which would require 1 key per data <em>row</em>, not column.</p>
<p>Just <code>zip</code> the dict values (in a fixed order) to "transpose" and create rows that <code>csv</code> module can write properly.</p>
<p>Also, sort your dict keys so the order of columns is the same everytime:</p>
<pre><code>import csv,sys

title = sorted(Sigs_dict)
cw = csv.writer(sys.stdout)
cw.writerow(title)  # write header
cw.writerows(zip(*(Sigs_dict[k] for k in title)))
</code></pre>
<p>result:</p>
<pre><code>a,b,c
1,6,1
2,7,2
3,8,3
4,9,4
5,0,5
</code></pre>
<p>to write to a file, don't forget <code>newline=""</code> for python 3, and <code>"wb"</code> for python 2 to avoid the infamous extra newline issue on windows:</p>
<pre><code>with open(fileName[0], 'w', newline = "") as f:  # or just ,'wb') for python 2
   cw = csv.writer(f)
</code></pre>
</div>
<span class="comment-copy">You could use <code>pandas</code> library and create a dataframe like your expected output. Then just use <code>to_csv</code> method in order to write the object to a csv file.</span>
<span class="comment-copy">Would recommend <code>zip(*sorted(Sigs_dict.values()))</code> to keep the order</span>
<span class="comment-copy">I have an issue with this solution because I get an empty line each time I insert a new row</span>
<span class="comment-copy"><code>zip(*sorted(Sigs_dict.values()))</code> would not keep the order.</span>
<span class="comment-copy">@Jean-Fran√ßoisFabre It will keep the values sorted as per keys as posted by OP in the question</span>
<span class="comment-copy">@ymmx you need to add <code>newline=""</code> when opening the file, which python version are u using</span>
