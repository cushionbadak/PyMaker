<div class="post-text" itemprop="text">
<p>Suppose we have a string:</p>
<pre><code>A = "John\t20\nChris\t30\nAby\t10\n"
</code></pre>
<p>I want to make <code>A</code> into a list of list with the first element still <code>str</code> and second element converted to <code>int</code>:</p>
<p>What i have done is :</p>
<pre><code>A = [[lambda k,v: str(k), int(v) for k, v in s.split('\t')] for s in A.split('\n')]
</code></pre>
<p>Any suggestion?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can just get the values without <code>lambda</code>:</p>
<p><code>[[s.split('\t')[0], int(s.split('\t')[1])] for s in A.strip().split('\n')]</code></p>
<p>Note: strip() is added to parse out the trailing '\n'.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you are overcomplicating this. You don't need an anonymous function here at all. </p>
<p>First, <code>split</code> the string, then iterate over groups of two from the resulting list and convert the second element of the pairs to <code>int</code>. </p>
<p>For the second part, the <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer"><code>itertools</code> documentation</a> has a recipe called <strong><code>grouper</code></strong>. You can either copy-paste the function or import it from <a href="https://pypi.org/project/more-itertools/" rel="nofollow noreferrer"><code>more_itertools</code></a> (which needs to be installed).</p>
<pre><code>&gt;&gt;&gt; from more_itertools import grouper
&gt;&gt;&gt;
&gt;&gt;&gt; a = "John\t20\nChris\t30\nAby\t10\n"
&gt;&gt;&gt; [(s, int(n)) for s, n in grouper(2, a.split())]
[('John', 20), ('Chris', 30), ('Aby', 10)]
</code></pre>
<p>Finally, if you want to flatten the result, apply <a href="https://docs.python.org/3.7/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain</code></a>.</p>
<pre><code>&gt;&gt;&gt; list(chain.from_iterable((s, int(n)) for s, n in grouper(2, a.split())))
['John', 20, 'Chris', 30, 'Aby', 10]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you like to use lambda, here's a simpler way;</p>
<pre><code>L = lambda s: [s.split('\t')[0], int(s.split('\t')[1])]
A3 = [L(x) for x in A.strip().split('\n')]
</code></pre>
</div>
<span class="comment-copy">yup this is what i want, thanks</span>
