<div class="post-text" itemprop="text">
<p>I have a shell command(I'm running it on python) and I want to get its output and store it in a variable. Can you guys help me on how this can be done?</p>
<p>This is my python code...</p>
<pre><code>os.system("unzip -p'" +filepath+"' docProps/app.xml | grep -oP '(?&lt;=\&lt;Pages\&gt;).*(?=\&lt;/Pages\&gt;)'"
</code></pre>
<p>By the way what it does is it gets the number of page/s of a docx file. It's working but as I've said I don't know how to store it in a variable. </p>
<p>When I do this:</p>
<pre><code>page_number = os.system("unzip -p'" +filepath+"' docProps/app.xml | grep -oP '(?&lt;=\&lt;Pages\&gt;).*(?=\&lt;/Pages\&gt;)'"
</code></pre>
<p>It doesn't return the right value.</p>
<p>Thank you so much in advance. I tried converting this to a sub-process.call but I also don't know how because I'm a beginner. Thanks again!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this with the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code></a> module in the Python Standard Library.</p>
<pre><code>import subprocess

command = "unzip -p'" +filepath+"' docProps/app.xml | grep -oP '(?&lt;=\&lt;Pages\&gt;).*(?=\&lt;/Pages\&gt;)'"
completed_process = subprocess.run(command, shell=True, text=True, capture_output=True)
output = completed_process.stdout
</code></pre>
<p>Please note that if you use <code>shell=True</code> in <code>subprocess.run()</code> and the <code>filepath</code> input is not trusted (e.g. user-provided), you have a security problem, i.e., arbitrary code execution. The same goes for <code>os.system()</code>.
See the <a href="https://docs.python.org/3/library/subprocess.html#security-considerations" rel="nofollow noreferrer">official documentation</a> for a possible solution using <a href="https://docs.python.org/3/library/shlex.html#shlex.quote" rel="nofollow noreferrer"><code>shlex.quote()</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>you can use subprocess to get the output</p>
<pre><code>import subprocess
s=subprocess.Popen("unzip -p'{0}' docProps/app.xml | grep -oP '(?&lt;=\&lt;Pages\&gt;).*(?=\&lt;/Pages\&gt;)'".format(filepath),shell=True,stdout=subprocess.PIPE,stderr=subprocess.STDOUT)
for line in s.stdout.readlines():
  print line
s.kill()
</code></pre>
</div>
<span class="comment-copy">That's grep -oP '(?&lt;=\&lt;Pages\&gt;).*(?=\&lt;/Pages\&gt;)'"</span>
<span class="comment-copy">Hi thank you for replying! üôè I tried it but it gives me a TypeError:  init ()  got an unexpected keyword argument 'capture output'</span>
<span class="comment-copy">However, when I removed text=True and capture_output=True. The errors were gone but I can get the value of output.</span>
<span class="comment-copy">Hey man! It just worked! Just have to change the subprocess.run() to subprocess.check_output(). THANKS again for your help ‚úã</span>
<span class="comment-copy">Which Python version are you using? The subprocess API changed and this may be the cause of your problems :)</span>
<span class="comment-copy">I'm using python 3.5.3 :) Thank you so much once again. This is a big help in our thesis, god bless man!</span>
<span class="comment-copy">Hi thanks for replying! üôè I tried your given code. It has no errors but it didn't output the number of pages. Thanks for your help anyways üôÇ</span>
<span class="comment-copy">The subprocess returns whatever it gets from execution of shell code you wrote if its empty it means shell is not printing in console. Verify the shell command by printing it and executing on terminal.</span>
<span class="comment-copy">I found out why it returns nothing. When I ran the code in shell terminal it returns 1 but in python3 shell it returns 1 and then 0. Now how do I get the first output instead of the last?</span>
