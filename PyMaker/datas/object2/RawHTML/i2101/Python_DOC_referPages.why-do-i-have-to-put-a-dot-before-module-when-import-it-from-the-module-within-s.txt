<div class="post-text" itemprop="text">
<p>I am learning Python and feel import function is some different from that of Java.</p>
<p>I have a code hierarchy like below:</p>
<ul>
<li><p><code>./test.py</code></p>
<pre><code>import pack
</code></pre></li>
<li><p><code>./pack/__init__.py</code></p>
<pre><code>from . import submod
</code></pre></li>
<li><p><code>./pack/submod.py</code></p>
<pre><code>from .anothersubmod import res
</code></pre></li>
<li><p><code>./pack/anothersubmod.py</code></p>
<pre><code>res="something..."
</code></pre></li>
</ul>
<p><code>test.py</code> runs as above. When I re-write <code>submod.py</code> as:</p>
<pre><code>from anothersubmod import res
</code></pre>
<p>Python gives me an error saying <code>anothersubmod</code> can not be found...</p>
<p>I guess <code>submod</code> and <code>anothersubmod</code> are in same directory thus they shall refer to each other with their module (file) name, why should I have to add a dot before <code>anothersubmod</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>The Java equivalent would be to explicitly reference <code>pack</code> everywhere, like:</p>
<pre><code>import pack.anothersubmod.MyClass;
</code></pre>
<p>The Python equivalent of that would be:</p>
<pre><code>from pack.anothersubmod import MyClass
</code></pre>
<p>That is correct Python and actually preferred style. Python also has the ability to use relative paths in import statements (<code>from .</code> style), but they tend to cause more confusion. </p>
<p><a href="https://www.python.org/dev/peps/pep-0008/?#imports" rel="nofollow noreferrer">PEP 8</a> recommends using absolute imports everywhere whenever possible:</p>
<blockquote>
<p>Absolute imports are recommended, as they are usually more readable and tend to be better behaved (or at least give better error messages) if the import system is incorrectly configured.</p>
</blockquote>
</div>
<span class="comment-copy">I'd recommend reading e.g. <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">docs.python.org/3/tutorial/modules.html#packages</a></span>
<span class="comment-copy">Ok at least got something working, so why asking</span>
<span class="comment-copy">it works in terms of test.py. But  if I run submod.py alone, python gives error again until I emove dot ahead of anothersubmod. This does not make sense. Do I have to modify import everytime I load module from different context?</span>
<span class="comment-copy">Relative path of import do confuse me. I will follow PEP8's recommendation ^_^</span>
