<div class="post-text" itemprop="text">
<p>I'm trying to export data from queryset to different file formats and I'm getting an issue with json format.</p>
<p>This is my little piece of code :</p>
<pre><code>from django.core import serializers

def export_categories_json(request):

    with open("categories.json", "w") as out:
        data = serializers.serialize("json", Category.objects.all().values_list('id', 'name'))
        out.write(data)
</code></pre>
<p>Then, I set in my template a button which call this function and should download the json file.
But I have this issue :</p>
<pre><code>Traceback:

File "/home/val/.pyenv/versions/Publication3.6.2/lib/python3.6/site-packages/django/core/handlers/exception.py" in inner
  41.             response = get_response(request)

File "/home/val/.pyenv/versions/Publication3.6.2/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  187.                 response = self.process_exception_by_middleware(e, request)

File "/home/val/.pyenv/versions/Publication3.6.2/lib/python3.6/site-packages/django/core/handlers/base.py" in _get_response
  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "/home/val/Bureau/Projets/Publication/publication/src/web/views/exports.py" in export_categories_json
  276.         data = serializers.serialize("json", Category.objects.all().values_list('id', 'name'))

File "/home/val/.pyenv/versions/Publication3.6.2/lib/python3.6/site-packages/django/core/serializers/__init__.py" in serialize
  129.     s.serialize(queryset, **options)

File "/home/val/.pyenv/versions/Publication3.6.2/lib/python3.6/site-packages/django/core/serializers/base.py" in serialize
  84.             concrete_model = obj._meta.concrete_model

Exception Type: AttributeError at /Category/json
Exception Value: 'tuple' object has no attribute '_meta'
</code></pre>
<p>Something is wrong in my code ?
I can't send a queryset to json file ?</p>
<p><strong>EDIT :</strong></p>
<p>I wrote this and it works, but json is shown in my template. How I can export this one to a json file ?</p>
<pre><code>def export_categories_json(request):
    from django.http import JsonResponse

    data = list(Category.objects.values())
    return JsonResponse(data, safe=False)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Please do <em>not</em> do serialization yourself: Django has some builtin serializiation functionality, and you can subclass a serializer to change its behavior.</p>
<p>Your view also does <em>not</em> return a HTTP response, but this is a contract it should satisfy (well it should return a HTTP response, or it should raise some error).</p>
<p>Instead you write content to a file, but writing to files is typically not a good idea (unless you expect the filesize to be huge, in which case you can use a <em>temporary</em> file). By using files, you create race conditions, a hacker might also aim to "inject" a different filename and thus overwrting certain files to run arbitrary code, or changing credentials, and finally it is possible that the server has certain permissions making it impossible to write to a file (the permissions of the directory).</p>
<p>Django allows you to see a HTTP response a s a stream object, to which content can be written, like:</p>
<pre><code>from django.http import HttpResponse
from django.core import serializers

def export_categories_json(request):
    response = new HttpResponse(content_type='application/json')
    response['Content-Disposition'] = 'attachment;filename=categories.json'
    serializers.serialize(
        'json',
        Category.objects.all(),
        fields=['name'],
        stream=response
    )
    return response
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Django's serialization is for models, but you are using <code>.values_list()</code> which returns plain Python <code>list</code>s.</p>
<p>In your specific case, you can simply use the built-in <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"><code>json</code></a> module:</p>
<pre><code>import json

def export_categories_json(request):

    with open("categories.json", "w") as out:
        values = list(Category.objects.all().values_list('id', 'name'))
        json.dump(values, out)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>django serialize except the querset object ,</p>
<pre><code> Category.objects.all().values_list('id', 'name')
</code></pre>
<p>this will return the tuple, you can replace with below</p>
<pre><code>data = list(Category.objects.all().values('id', 'name'))
with open("file.json", "w+") as file:
      file.write(data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to write the json representation of something to a file, use <code>json.dump</code>:</p>
<pre><code>import json

from django.shortcuts import redirect

def export_to_json(request):
    with open('export.json', 'w') as f:
       json.dump(list(Category.objects.all().values_list('id', 'name')), f)
    return redirect('/')
</code></pre>
</div>
<span class="comment-copy">You should serialize the <i>object</i>, so <code>Category.objects.all()</code>, not <code>Category.objects.values_list('id', 'name')</code>. Furthermore serializing lists is non-sensical, since the order of the fields is then unknown, which would result in a lot of trouble.</span>
<span class="comment-copy">Ok, so I will provide a small edit because I overcome to display json, but not in a file, just in my template.</span>
<span class="comment-copy">you use a template for a JSON stream :O? What is the serializer then doing?</span>
<span class="comment-copy">With all answers, none overcome to export queryset result to json file without issue .. It's pretty strange</span>
<span class="comment-copy">not it is not, just define a <i>serializer</i> that only serializes the <code>id</code> and <code>name</code> field, then pass the queryset, and sit back while the serializer does all the work.</span>
<span class="comment-copy">It makes the job ! Wouaw thank you very much !! I think I can make some changes in order to remove json and set xml ?</span>
<span class="comment-copy">@user10390326: that would normally only be the <code>content_type</code>, the format (<code>'xml'</code> instead of <code>'json'</code>) and the filename in the <code>'Content-Disposition'</code> key. This is one of the reasons why serializers are quite powerful: changing the format is rather straightforward.</span>
<span class="comment-copy">Yes I understand now. As it was the first time I made this link of things, it was a bit obscur for me.</span>
<span class="comment-copy">Ok, so I have to see why I get this issue : <code>The view freepub.views.exports.export_categories_json didn't return an HttpResponse object. It returned None instead.</code></span>
<span class="comment-copy">I got this issue : <code>'flat' is not valid when values_list is called with more than one field.</code></span>
<span class="comment-copy">I tried your code, and I get this issue <code>Object of type 'QuerySet' is not JSON serializable</code></span>
<span class="comment-copy">Try updated version, I forgot to cast the queryset.</span>
