<div class="post-text" itemprop="text">
<p>I wasn't sure what to name the title. But I'm new to programming in general and I'm using python. My question is, how come just writing return instead of a bunch if and else statements work exactly the same.</p>
<pre><code>#Multiple lines
def parrot_trouble(talking, hour):
  if talking:
    if hour &lt;7 or hour &gt;20:
      return True
  return False
#One line
def parrot_trouble(talking, hour):
  return (talking and (hour &lt; 7 or hour &gt; 20))
</code></pre>
<p>Both these codes yield the exact same results.. but why? sorry I'm super new</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Both these codes yield the exact same results</p>
</blockquote>
<p>That's incorrect. It is only true where the inputs are of specific types. Consider this trivial counter-example:</p>
<pre><code>def parrot_trouble1(talking, hour):
    if talking:
        if hour &lt; 7 or hour &gt; 20:
            return True
    return False

def parrot_trouble2(talking, hour):
    return (talking and (hour &lt; 7 or hour &gt; 20))

parrot_trouble1([], 0)  # False
parrot_trouble2([], 0)  # []
</code></pre>
<h3><a href="https://docs.python.org/3/reference/expressions.html#boolean-operations" rel="nofollow noreferrer">But note <code>and</code> / <code>or</code> are designed this way:</a></h3>
<blockquote>
<p>Note that neither <code>and</code> nor <code>or</code> restrict the value and type they return
  to <code>False</code> and <code>True</code>, but rather return the last evaluated argument.</p>
</blockquote>
<p><code>parrot_trouble2</code> exhibits short-circuiting. Let's assume that <code>talking</code> is a Boolean input.  If <code>talking</code> is <code>False</code>, the expression short-circuits and returns <code>False</code>. If <code>talking</code> is <code>True</code>, <code>parrot_trouble2</code> will return <code>True</code> or <code>False</code> depending on the value of <code>hour</code>.</p>
<p><code>parrot_trouble1</code> doesn't short-circuit, but the result is the same. If <code>talking</code> is Boolean and <code>False</code>, the function returns <code>False</code>. If <code>talking</code> is <code>True</code>, then the second criterion <code>hour &lt; 7 or hour &gt; 20</code> is tested. If the condition is not specified then, since nothing is returned, Python move's outside and after the <code>if</code> statement to <code>return False</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of having</p>
<pre><code>if condition == True:
    return True
else:
    return False
</code></pre>
<p>in a function, you could just have it return the condition </p>
<pre><code>return condition
</code></pre>
<p>since you're checking for the same value you would return</p>
</div>
<span class="comment-copy">It's been updated</span>
<span class="comment-copy">Thank you this really helped me understand what was going on.</span>
