<div class="post-text" itemprop="text">
<p>I've made a program that identifies what is inside a text file, splits it into individual lines, and prints a <code>random.choice</code> from it. For example, when I run the program, it will print 3 lines of the text file, however there are duplicates. First of all, here is the text file:</p>
<pre><code>Ball
Rock
Pen
</code></pre>
<p>And here is the code:</p>
<pre><code>import random

lines = open(r"textfile.txt", "r").readlines()

line = lines[random.randint(0, 2)]
words = line.split()
choice = random.choice(words)
print(choice)

line = lines[random.randint(0, 2)]
words = line.split()
choice = random.choice(words)
print(choice)

line = lines[random.randint(0, 2)]
words = line.split()
choice = random.choice(words)
print(choice)
</code></pre>
<p>Right now, when I run the program I get an input similar to this:</p>
<pre><code>Ball
Rock 
Rock
</code></pre>
<p>or</p>
<pre><code>Rock
Rock
Pen
</code></pre>
<p>What I want to come out is all 3 lines, with no duplicates. For example:</p>
<pre><code>Rock
Ball
Pen
</code></pre>
<p>My question is:
How can I get an output with all 3 outcomes in a random order each time, with no duplicates?</p>
</div>
<div class="post-text" itemprop="text">
<p>You <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer">use <code>random.sample(population, k)</code></a> with a size that does not exceed your data:</p>
<pre><code># create the file
with open("tf.txt","w") as f:
    f.write("""Ball
Rock
Pen""")
</code></pre>
<p>Then:    </p>
<pre><code>import random

with open("tf.txt","r") as f:
    lines = [ x.strip() for x in f]

for _ in range(5):
    print(random.sample(lines,k=len(lines))) 
</code></pre>
<p>Output:</p>
<pre><code>['Pen', 'Rock', 'Ball']
['Ball', 'Rock', 'Pen']
['Pen', 'Rock', 'Ball']
['Pen', 'Ball', 'Rock']
['Ball', 'Pen', 'Rock']
</code></pre>
<p>To get them on different lines:</p>
<pre><code>print(*random.sample(lines,k=len(lines)),sep="\n")
</code></pre>
<p>Output:</p>
<pre><code>Ball
Rock
Pen
</code></pre>
<hr/>
<p>If you always want the 3 outputs, you could as well simply <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer">random.shuffle(..)</a> your <code>lines</code> using: </p>
<pre><code>import random

with open("tf.txt","r") as f:
    lines = [ x.strip() for x in f]

random.shuffle(lines) # inplace shuffling lines
print(*lines,"", sep="\n")
random.shuffle(lines)
print(*lines,"", sep="\n")
</code></pre>
<p>Output:</p>
<pre><code>Ball
Rock
Pen

Rock
Ball
Pen
</code></pre>
<p>Sidenote: its better to cache the <code>len(lines)</code> in a variable if you use it multiple times - else it would have to be evaluated again and again.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you read your file do this instead:</p>
<pre><code>with open("textfile.txt", "r") as f:
    words = [i.strip() for i in f.readlines()]
</code></pre>
<p>Using with statement ensures the file is properly closed after opening it. Your problem lies in: <code>line = lines[random.randint(0, 2)]</code> where you can get the same line twice. Reading all your lines to a list and using random.sample instead you make sure you won't get any duplicates.</p>
<p>Then you can use random.sample instead:</p>
<pre><code>import random
random.seed(400)    # &lt;-- makes sure we get same randomness
choice = random.sample(words, 3)
print('\n'.join(choice)) 

#Rock
#Pen
#Ball
</code></pre>
<p>Compare that with:</p>
<pre><code>import random
random.seed(400)    # &lt;-- makes sure we get same randomness
choice = random.choice(words)
print(choice)
choice = random.choice(words)
print(choice)
choice = random.choice(words)
print(choice)

#Pen
#Rock
#Rock
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Put your outputs in sets:
<code>myfirstset = set(choice)</code></p>
<p>Then use the merging function:
<code>total = myssecondset.union(mysfirstset)</code></p>
</div>
<span class="comment-copy">Use random.sample instead. So <code>choice = random.sample(words, 3)</code>. And then <code>print('\n'.join(choice))</code> for instance.</span>
<span class="comment-copy">@AntonvBR Doing this, I get the error <code>ValueError: Sample larger than population or is negative</code></span>
<span class="comment-copy">Ok I see now.. your file is separated with row breaks? I will show you in a moment</span>
<span class="comment-copy">I am afk right now, so i cant show you but instead of calling randint everytime, generate the list of indices, shuffle it, and use it as a queue or a stack. In that way, the index you take is poped from that collection and so will not be chosen anymore</span>
<span class="comment-copy">Thanks for solving my problem, you gave a very simple answer compared to others.</span>
<span class="comment-copy">Any reason that the sample is the same each time I run the program? Any way I can change the order in which they print?</span>
<span class="comment-copy">@jakethefake By providing a <code>random.seed()</code> you "fixate" the randomness - meaning you get the same sequence of random numbers if you do the same operations - just comment the line, and seed will be different for each rund and you'll get different random numbers drawn...</span>
