<div class="post-text" itemprop="text">
<p>What would be the best way to do the following case-insensitive intersection:</p>
<pre><code>a1 = ['Disney', 'Fox']
a2 = ['paramount', 'fox']
a1.intersection(a2)
&gt; ['fox']
</code></pre>
<p>Normally I'd do a list comprehension to convert both to all lowercased:</p>
<pre><code>&gt;&gt;&gt; set([_.lower() for _ in a1]).intersection(set([_.lower() for _ in a2]))
set(['fox'])
</code></pre>
<p>but it's a bit ugly. Is there a better way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Using the set comprehension syntax is slightly less ugly:</p>
<pre><code>&gt;&gt;&gt; {str.casefold(x) for x in a1} &amp; {str.casefold(x) for x in a2}
{'fox'}
</code></pre>
<p>The algorithm is the same, and there is not any more efficient way available because the hash values of strings are case sensitive.</p>
<p>Using <a href="https://docs.python.org/3/library/stdtypes.html#str.casefold" rel="nofollow noreferrer"><code>str.casefold</code></a> instead of <code>str.lower</code> will behave more correctly for international data, and is available since Python 3.3+.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are some problems with definitions here, for example in the case that a string appears twice in the same set with two different cases, or in two different sets (which one do we keep?).</p>
<p>With that being said, if you don't care, and you want to perform this sort of intersections a lot of times, you can create a case invariant string object:</p>
<pre><code>class StrIgnoreCase:
  def __init__(self, val):
    self.val = val

  def __eq__(self, other):
    if not isinstance(other, StrIgnoreCase):
        return False

    return self.val.lower() == other.val.lower()

  def __hash__(self):
    return hash(self.val.lower())
</code></pre>
<p>And then I'd just maintain both the sets so that they contain these objects instead of plain strings. It would require less conversions on each creation of new sets and each intersection operation.</p>
</div>
<span class="comment-copy">Not really; about the best you can do is to convert everything to lower case in one pass, and keep it that way for the remainder of your processing.</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/1479979/case-insensitive-comparison-of-sets-in-python" title="case insensitive comparison of sets in python">stackoverflow.com/questions/1479979/â€¦</a></span>
<span class="comment-copy">Similar question: <a href="https://stackoverflow.com/q/1479979/674039">Case-insensitive comparison of sets in Python</a>.  Not a great dupe because that one is about <code>frozenset</code>, and the set literal syntax is not available.</span>
<span class="comment-copy">Why not store the <i>lowered</i> version on the instance instead of having to do that repeatedly: trade cpu cycles with space.</span>
<span class="comment-copy">@MosesKoledoye i can imagine cases where you might want to keep the original string. If keeping all strings lower case was an option, i guess the question wouldn't have been asked</span>
<span class="comment-copy">I was suggesting to keep both :P</span>
