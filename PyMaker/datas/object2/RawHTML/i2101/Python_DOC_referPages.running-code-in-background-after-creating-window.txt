<div class="post-text" itemprop="text">
<p>I wanted to create a basic GUI for existing Python code, however most frameworks that allow creation of user interface require some kind of window loop. I wanted to create a window with a button that "listens" for the buttonpress while running code.</p>
<p>Using pseudocode:</p>
<pre><code>CreateWindowWithButton(window, button1, button1.text = "False")
arg = False
while(True):
    do_something(arg)
    if window.button1.isPressed():
        arg = not arg
        window.button1.text = str(arg)
    if keypressed("Escape"):
        break
DestroyWindow(window)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you've not specified a GUI framework, I suggest trying <a href="http://www.PySimpleGUI.org" rel="nofollow noreferrer">PySimpleGUI</a>, a tkinter wrapper.</p>
<p>This code creates a window with a button and then reads the button in a while loop just as in your example pseudo-code.</p>
<pre><code>import PySimpleGUI as sg

layout = [[sg.Text('Click the button to trigger main loop')],
          [sg.RButton('My Button')]]

window = sg.Window('My new window').Layout(layout)

while True:                                         # Event Loop
    # do_something()                                # Do whatever you want
    button, value = window.ReadNonBlocking()        # Reads without blocking the program (like polling)
    if value is None:                               # If X button was clicked
        break
    elif button == 'My Button':                       # If got the button click we want
        print('Received the button press')
        break
</code></pre>
<p>The code produces this window:</p>
<p><a href="https://i.stack.imgur.com/BMMhx.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/BMMhx.jpg"/></a></p>
</div>
<span class="comment-copy">Your code has a loop.</span>
<span class="comment-copy">they require a loop for a reason.. you can either try a really easy graphic lib like pygame (lots of examples and tutorials) or dig into <a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer">python threading</a> or both</span>
