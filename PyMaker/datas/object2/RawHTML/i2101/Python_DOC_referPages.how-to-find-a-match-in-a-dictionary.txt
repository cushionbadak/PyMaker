<div class="post-text" itemprop="text">
<p>I have two dictionaries, RFQDict and AwardsDict. I want to take the keys of RFQdict and search through AwardsDict values for matches. </p>
<p>So I tried this</p>
<pre><code>RFQDict = {}
AwardsDict = {}

# Fetch RFQ 

RFQref = db.reference('TestRFQ')

snapshot = RFQref.get()
for key, val in snapshot.items():
    RFQDict[key] = val
    print('{0} =&gt; {1}'.format(key, val))


Awardsref = db.reference('DibbsAwards')

dsnapshot = Awardsref.get()
for key, val in dsnapshot.items():
    AwardsDict[key] = val
    print('{0} =&gt; {1}'.format(key, val))



for key in RFQDict:
    if key in AwardsDict.values():
        print(key+ " Match found")
</code></pre>
<p>is this the way to do it or there is a better way and how could return the key and values where the match was found?</p>
</div>
<div class="post-text" itemprop="text">
<p>In python3 you can do <code>AwardsDict.values() &amp; RFQDict.keys()</code> and you will get a set with the common key/values. </p>
<p>The '&amp;' operator is used for set intersection and works with the dictionary views returned by values() and keys(). More information of the view returned by those methods: <a href="https://docs.python.org/3/library/stdtypes.html?highlight=dictview#dictionary-view-objects" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html?highlight=dictview#dictionary-view-objects</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to store the keys and values that match, it would probably be best to store the key and value from the second dictionary since if you just store the matching key and value you will have elements like <code>(a, a)</code> which won't really tell you much about where they matched in the second dictionary. Maybe something like this </p>
<pre><code>d1 = {'a': 1, 'b': 2, 'c': 3}
d2 = {'x': 'a', 'y': 1, 'z': 'c'}

res = [(i, {j: d2[j]}) for i in d1 for j in d2 if i == d2[j]]
print(res)
# [('a': {'x': 'a'}), ('c': {'z': 'c'})]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would do a list comprehension:</p>
<pre><code>result=[x for x in AwardsDict.values() if x in RFQDict.keys() ]
</code></pre>
<p>This way you get a list keeping the duplicates. That is, if a RFQ key is presented in more than one value in AwardsDict. With the &amp; operator you loss that information (as sets only have unique elements).</p>
<p>For example:</p>
<pre><code>RFQDict = {}
AwardsDict = {}

for i in range(5):
    RFQDict[i]=0

for i in range(5):
    AwardsDict[i]=i

for i in range(5,11):
    AwardsDict[i]=i//2 #integer division, i=8 and i=9 get a value of 4 


result=[x for x in AwardsDict.values() if x in RFQDict.keys() ]
print('{}'.format(result))

#output [0, 1, 2, 3, 4, 2, 3, 3, 4, 4]
</code></pre>
</div>
<span class="comment-copy">@e.s. can you please post as an answer with explanation</span>
<span class="comment-copy">how do we check if their is no match?</span>
<span class="comment-copy">@learner101 if there is no match it will be an empty list,</span>
