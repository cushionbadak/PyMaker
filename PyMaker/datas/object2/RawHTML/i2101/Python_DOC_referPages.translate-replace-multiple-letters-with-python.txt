<div class="post-text" itemprop="text">
<p>I am working on a very basic translation program. Currently it can only deal with one letter in a phrase. For example if I were to input "test" it would blurt out "yesy" because it changes "t" to "y". Here's the code I use to do that:</p>
<pre><code>def translate(phrase):
    translation = ""
    for letter in phrase:
        if letter in "t":
            translation = translation + "y"
        else:
            translation = translation + letter
    return translation




print(translate(input("Enter word: ")))
</code></pre>
<p>Is it possible to add another letter to be translated. So for example "e" to "a" on top of "t" to "y". so that it would spit out "yasy". </p>
</div>
<div class="post-text" itemprop="text">
<p>There's a much easier way using <code>str.replace</code>: <code>'test'.replace('t','y').replace('e','a')</code></p>
<p>However, if you're looking to replace more and more letters <code>str.translate</code> would be more efficient:</p>
<pre><code>from string import maketrans

trans_from = "te"
trans_to = "ya"
trans_model = maketrans(trans_from, trans_to)

'test'.translate(trans_model)
</code></pre>
<p>Or, if you want to keep your code, you can use <code>elif</code>:</p>
<pre><code>def translate(phrase):
    translation = ""
    for letter in phrase:
        if letter in "t":
            translation = translation + "y"
        elif letter in "e":
            translation = translation + "a"
        else:
            translation = translation + letter
    return translation

print(translate(input("Enter word: ")))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a dictionary.</p>
<pre><code>en-gb = {'t':'y', add more here}
def translate(phrase): 
    translation = str()
    for char in phrase:
        translation = translation +   en-gb[char]
    return translation
</code></pre>
</div>
<span class="comment-copy">Have you looked at the built-in <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate</code></a>?</span>
<span class="comment-copy">Yes, it's very much possible. Though I'm not sure that's what you are looking for...?</span>
<span class="comment-copy">How about <code>my_str.replace(...).replace(...)</code> ?</span>
<span class="comment-copy">Yes, and there are many examples on line of how to do this, given various levels of change.  Please research before posting here.  Among other things, read about the <code>replace</code> and <code>translate</code> methods.</span>
<span class="comment-copy">Do you mind indenting the ´elif´ part of the code properly. I can't seem to get it to work when I manually indent it. When I input "test" it comes out with "yayt".</span>
<span class="comment-copy">@Mihkel Indented properly now</span>
<span class="comment-copy">Works perfectly, I appreciate the help.</span>
