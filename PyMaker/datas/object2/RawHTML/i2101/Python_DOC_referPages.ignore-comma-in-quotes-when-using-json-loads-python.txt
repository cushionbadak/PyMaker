<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/41323606/why-does-json-loads-work-on-some-strings">Why does json.loads() work on some strings? [duplicate]</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/4162642/single-vs-double-quotes-in-json">Single vs double quotes in JSON</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>currently working with the below command:</p>
<pre><code>python foo.py "['A,B,C,D','A,B,C','A,B','A']"
</code></pre>
<p>And I want to transform it into an actual string array:</p>
<pre><code>A[0] = 'A,B,C,D'
A[1] = 'A,B,C' 
A[2] = 'A,B' 
A[3] = 'A' 
</code></pre>
<p>At the moment, I've been trying to use <code>json.loads()</code> and <code>sys</code> to read the string into an object or list.</p>
<p>However, it seems that the presence of the single-quotes cause the following error.</p>
<pre><code>ValueError: No JSON object could be decoded
</code></pre>
<p>Yet, without the single-quotes, I end up the array:</p>
<pre><code>B = ["A","B","C","D","A","B","C","A","B","A"]
</code></pre>
<p>How to get Python to ignore the inner commas while keeping track of the outer commas in order to produce the array of strings given in <code>A</code> shown above?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> to...</p>
<blockquote>
<p>Safely evaluate an expression node or a string containing a Python
      expression.  The string or node provided may only consist of the following
      Python literal structures: strings, bytes, numbers, tuples, lists, dicts,
      sets, booleans, and None.</p>
</blockquote>
<pre><code>&gt;&gt;&gt; from ast import literal_eval
&gt;&gt;&gt; literal_eval("['A,B,C,D','A,B,C','A,B','A']")
['A,B,C,D', 'A,B,C', 'A,B', 'A']
</code></pre>
</div>
<span class="comment-copy">Your input isn't JSON, so...why use <code>json.loads</code>?</span>
<span class="comment-copy">Why not use <code>'["A,B,C,D","A,B,C","A,B","A"]'</code>?</span>
<span class="comment-copy">I can't find the duplicate right now, but your are looking for <code>ast.literal_eval</code>.</span>
<span class="comment-copy">@T.J.Crowder I used it because it works on things like "[1,2,3,4]". This was the first time I've run into an issue like this one. Would you be able to recommend me another method to use?</span>
<span class="comment-copy">@timgeb <a href="https://stackoverflow.com/a/21154138/2395133">stackoverflow.com/a/21154138/2395133</a></span>
<span class="comment-copy">Thank you! It works!</span>
