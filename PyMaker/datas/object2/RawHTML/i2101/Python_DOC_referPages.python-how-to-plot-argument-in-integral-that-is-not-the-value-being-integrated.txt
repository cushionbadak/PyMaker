<div class="post-text" itemprop="text">
<p>I want to integrate a function that has no closed form solution with an unknown variable and then plot vs the unknown variable. To try a simpler test, I tried to use the integral of <code>f(x,c) = (x^2+c)</code>, integrated with respect to <code>x</code> and plot with different values of <code>c</code>.  However, the code below gets the error</p>
<blockquote>
<p>only size-1 arrays can be converted to Python scalars</p>
</blockquote>
<p>even though the integral of a number, e.g. <code>integral(5)</code>, seems to return the correct scalar value.  </p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
from scipy import integrate


def f(x,c):
    return x**2+c

def integral(c):
    return integrate.quad(f,0,10, args = (c,))[0]
y = np.linspace(0,20,200)


plt.plot(y, integral(y))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You pass a numpy array as the argument <code>c</code> while you wanted to integrate over <code>x</code> for all the items of <code>c</code>. Therefore you can use this:</p>
<pre><code>def f(x,c):
    return x**2+c

def integrate_f(c):
    result = np.zeros(len(c))
    counter = 0
    for item in c:
        result[counter] = integrate.quad(f,0,10, args = (item))[0]
        counter +=1
    return result

c_array = np.linspace(0,1,200)
plt.plot(c_array, integrate_f(c_array))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>onno was a bit faster. But here is my similar solution. You need to loop over all the different <code>c</code>:</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
from scipy import integrate


def f(x,c):
    return x**2+c

def getIntegral(c_list):
    result = []
    for c in c_list:
        integral = integrate.quad(f,0,10,args = c)[0]
        result.append(integral)
    return result

if __name__ == "__main__":


    c_list = np.linspace(0,20,200)

    plt.plot(c_list, getIntegral(c_list))
    plt.show()
</code></pre>
</div>
<span class="comment-copy">You really shouldn't write a function called <code>int</code>. It creates needless confusion with <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer">the built-in function</a>.</span>
<span class="comment-copy">What is your variable <code>test</code> ?</span>
<span class="comment-copy">I guess <code>test</code> should be <code>f</code> since it is the function defined above</span>
<span class="comment-copy">edited to change int function to integral and fixed the test typo</span>
