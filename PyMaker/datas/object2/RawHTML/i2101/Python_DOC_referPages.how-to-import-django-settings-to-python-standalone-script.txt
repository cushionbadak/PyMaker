<div class="post-text" itemprop="text">
<p>I'm having difficulty calling a django script. Here is what I'm currently doing in my root directory:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.environ['DJANGO_SETTINGS_MODULE'] = 'settings.py'
&gt;&gt;&gt; from django.conf import settings
&gt;&gt;&gt; settings.configure()
&gt;&gt;&gt; settings.DATABASES
{}
</code></pre>
<p>The <code>settings.DATABASES</code> should not be empty, so I know I haven't initialized the project correct. How would I do this in django2.1? I used to be able to do this easily using <code>import settings; setup_environ(settings)</code>, but not anymore.</p>
<p>Note: I'm looking to be able to run the above from any directory. Here is an example from trying to import my project from <code>tmp</code>:</p>
<pre><code>(V) david$ cd /tmp &amp;&amp; python

&gt;&gt;&gt; import django
&gt;&gt;&gt; from django.conf import settings
&gt;&gt;&gt; settings.configure()
&gt;&gt;&gt; django.setup()
&gt;&gt;&gt; from users.models import *
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ModuleNotFoundError: No module named 'users'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The 2.1 docs state that you need to use <code>setup()</code> now.  Relevant snippet:</p>
<pre><code>import django
from django.conf import settings

settings.configure()
django.setup()

# Now this script or any imported module can use any part of Django it needs.
from myapp import models
</code></pre>
<p><a href="https://docs.djangoproject.com/en/2.1/topics/settings/#calling-django-setup-is-required-for-standalone-django-usage" rel="nofollow noreferrer">Here is the full documentation.</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to run <code>settings.configure()</code>. To properly initialize, you could do something like:</p>
<pre><code>if __name__ == '__main__':
    import sys, os
    sys.path.append(django_root)
    os.environ['DJANGO_SETTINGS_MODULE'] = 'settings'
    from django.conf import settings
    print (settings.DATABASES)
</code></pre>
</div>
<span class="comment-copy">Could you please explain what the line <code>from myapp import myapp_defaults</code> means and does? What would be a real-world example of doing that part?</span>
<span class="comment-copy">Also, let's say you are in a directory such as <code>tmp</code>. How would you have access to running <code>from myapp import myapp_defaults</code> ? It seems like in the above you need to be in the 'correct directory' in order to run it.</span>
<span class="comment-copy">Sorry about the confusion, I just copied the code from the documentation.  The link I provided to the documentation explains all of that in detail.  I will modify my answer to be more clear, as that particular line doesn't pertain to your question.</span>
<span class="comment-copy">In answer to the first question of what does the import do: <a href="https://docs.djangoproject.com/en/2.1/topics/settings/#the-basics" rel="nofollow noreferrer">docs.djangoproject.com/en/2.1/topics/settings/#the-basics</a>.  That is a detailed explanation of the construction of some default settings.  To answer your second question: the <code>from myapp import myapp_defaults</code> you are correct that you would need to be in the right directory.  I have gone ahead and removed that import from the answer as it doesn't really pertain to your situation.</span>
<span class="comment-copy">right, I understand that part, but in order to do the above you need to be in the "correct directory". I've added an update to the question -- I think the issue here is I need to add the path to my <code>os.path</code> and also import the project settings from that path.</span>
<span class="comment-copy">That will allow you to access the settings, but you need to add the settings configuration to the OS level environment.  It works, but it isn't really standalone at this point because you're modifying the ENV.  See notes here what that might not be a good idea: <a href="https://docs.python.org/3/library/os.html#os.environ" rel="nofollow noreferrer">docs.python.org/3/library/os.html#os.environ</a></span>
