<div class="post-text" itemprop="text">
<p>I have an input text file containing a list of key/value pairs that I would like to read into python as a list of dictionaries but can not seem to get it to work as expected.  Note that the file is <em>not</em> in valid json format so I can not use the <code>json</code> built-in and this question is <em>not</em> a duplicate of <a href="https://stackoverflow.com/questions/20199126/reading-json-from-a-file">this</a>.  I suspect that I am missing something obvious here so any guidance is much appreciated.  </p>
<pre><code># /tmp/tmp.txt
[{'k1': {'k2': {'k3': ['a', 'b', 'c']}}}, {'k4': {'k5': {'k6': ['v', 'x', 'y', 'z']}}}]
</code></pre>
<p>Since this file contains a list with 2 elements, I would expect the <code>len</code> to be 2 and the <code>type</code> to be <code>list</code> but that is not what I'm seeing.</p>
<pre><code>with open('/tmp/tmp.txt', encoding='utf-8') as data_file:
    data = data_file.read()

print(len(data)) # &lt;-- the goal is for this to show 2
print(type(data)) # &lt;-- the goal is for this to return `list`
</code></pre>
<h3>Output:</h3>
<pre><code>88
&lt;class 'str'&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>data</code> is a string. You can convert it to a list with <code>literal_eval</code>:</p>
<pre><code>import ast
data_list = ast.literal_eval(data)
len(data_list)
#2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>EDIT: I didn't saw earlier that DYZ answered before me but I would like to explain my answer a bit more.</p>
<p>There is a module called 'ast' that have the function 'literal_eval', as the name suggest, it evaluates the information of the txt as python code and also validates the input.</p>
<pre><code>import os, ast

with open('/tmp/tmp.txt', encoding='utf-8') as data_file:
    data = ast.literal_eval(data_file.read())

print(len(data))
print(type(data))
</code></pre>
<p>Output:</p>
<pre><code>2
&lt;class 'list'&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're trying to store and retrieve Python objects, serialization is probably a better way to go. See, for example, the <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle module</a>.</p>
<p>But, in the present context, you could use the built-in Python <a href="https://docs.python.org/2/library/functions.html#eval" rel="nofollow noreferrer">eval</a> function to accomplish your goal.</p>
</div>
<span class="comment-copy">data_file.read() does just return a string. I doesn't automatically convert your file to a list. :)</span>
<span class="comment-copy">Thanks for this.  I was not previously aware of the <code>ast</code> library and will check it out further.</span>
<span class="comment-copy">You should never use eval.</span>
<span class="comment-copy">That's an extremely strong statement @DYZ. Can you please elaborate?</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/1832940/why-is-using-eval-a-bad-practice" title="why is using eval a bad practice">stackoverflow.com/questions/1832940/â€¦</a></span>
