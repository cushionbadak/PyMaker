<div class="post-text" itemprop="text">
<p>I am newbie to GCP, have experience with Python. 
I tried to write a Cloud Function for a scenario to untar files in GCS and copy them to another bucket.</p>
<pre><code>from google.cloud import storage
import tarfile

client = storage.Client()

def untar_lookupfiles(data, context):
    # Get the file that has been uploaded to GCS
    bucket = client.get_bucket(data['Source_bucketName'])

    #copy the tarfiles to another bucket
    bucket = client.get_bucket('Target_bucketName')
    blob = bucket.blob('gs://path/to/file.name')
    blob.upload_from_filename('/path/to/source.file')

    # Untar the files
    print('Untaring Files: {}'.format(data['name']))
    untar = tarfile.open("marfiles.tar.gz", "r:gz") # filename is hard coded should be replaced with data['name']
    untar.extractall(path=dir)
</code></pre>
<p>But it looks like something is missing in this code, can someone help me with the code. I don't have experience with nodejs to write the code.  Appreciate your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a function that will untar a file placed in one bucket and put the contents in another bucket:</p>
<p>In <code>requirements.txt</code>:</p>
<pre><code>google-cloud-storage
</code></pre>
<p>In <code>main.py</code>:</p>
<pre><code>import io
import os
import tarfile

from google.cloud import storage

client = storage.Client()
input_bucket = client.get_bucket('INPUT-BUCKET-NAME')
output_bucket = client.get_bucket('OUTPUT-BUCKET-NAME')


def untar(data, context):
    # Get the contents of the uploaded file
    input_blob = input_bucket.get_blob(data['name']).download_as_string()

    # Turn the upload file into a tar file
    tar = tarfile.open(fileobj=io.BytesIO(input_blob))

    # Iterate over all files in the tar file
    for member in tar.getnames():

        # Extract the individual file
        file_object = tar.extractfile(member)

        # Check if it's a file or directory (which should be skipped)
        if file_object:

            # Create a new blob instance in the output bucket
            output_blob = output_bucket.blob(os.path.join(data['name'], member))

            # Write the contents of the file to the output blob
            output_blob.upload_from_string(file_object.read())
</code></pre>
<p>To deploy:</p>
<pre><code>$ gcloud beta functions deploy test \
    --runtime python37 \
    --project PROJECT_NAME \
    --trigger-resource INPUT_BUCKET_NAME \
    --trigger-event google.storage.object.finalize
</code></pre>
</div>
<span class="comment-copy">What error are you getting?</span>
<span class="comment-copy">I don't see anyplace you're using the <code>tarfiles</code> variable after you fill it with the data. Did you mean <code>tarfile</code>?</span>
<span class="comment-copy">@Brandon, I reused code from other stuff, removed it now, my requirement is to copy tar files into new bucket and untar them.</span>
<span class="comment-copy">Now you're not using the <code>blob</code> variable holding the results of <code>get_blob</code>.</span>
<span class="comment-copy">@BrandonYarbrough, I removed get_blob line,</span>
<span class="comment-copy">Thanks a lot Dustin, the code worked like charm, i am trying to check if the file ends with tar.gz, since multiple files lands at the same time in the input bucket. let me figure it by myself, Thank you once again</span>
<span class="comment-copy">I tried to reuse your code and have written below code to unzip the file and copy to another bucket. can you correct me if I am wrong <code>def untar(data, context):     # Get the contents of the uploaded file     input_blob = input_bucket.get_blob(data['name']).download_as_string() 	# check filename endswith "csv.gz" 	if data['name'].endswith('csv.gz'):         gz = gzip.open(fileobj=io.BytesIO(input_blob)) 		output_blob = output_bucket.blob(os.path.join(data['name'], gz)) 		output_blob.upload_from_string(file_object.read())</code></span>
<span class="comment-copy">You don't need to use <code>gzip</code>. The <code>tarfile.open</code> command takes a <code>mode</code> parameter which you can set to <code>r:gz</code> to decompress the file as well. You'll want to optionally set this based on the filetype. See <a href="https://docs.python.org/3/library/tarfile.html#tarfile.open" rel="nofollow noreferrer">docs.python.org/3/library/tarfile.html#tarfile.open</a></span>
<span class="comment-copy">i tried with below code to unzip <b>Mar_Test.csv.gz</b> file,but it throws me error <code>tar = tarfile.open(fileobj=io.BytesIO(input_blob),mode='r:gz')</code>  error message: <i>ValueError: invalid literal for int() with base 8: ',2014\nMa'</i></span>
<span class="comment-copy">A <code>.csv.gz</code> file is not a tar file, it's a compressed CSV file.</span>
