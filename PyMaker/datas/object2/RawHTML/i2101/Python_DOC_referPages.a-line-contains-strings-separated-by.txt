<div class="post-text" itemprop="text">
<p>in Python, trying to do this thing:
I have a line contains several strings separated by ','.
I want to erase every string that has particular substring in it.
for example:</p>
<pre><code>line: first_name,second_name,every_single_name_exicted,dog,cat.
</code></pre>
<p>I want to erase every string that has the word "name" in it + the ',' it has, so the result would be:</p>
<pre><code>line: dog,cat.
</code></pre>
<p>and not:</p>
<pre><code>line: ,,,dog,cat
</code></pre>
<p>what can I use to achieve that? 
and how generally can I search particular substring when I don't care what it has on its left or right (like the search option in NotePad for example when you can write <em>name</em>)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>s = 'first_name,second_name,every_single_name_exicted,dog,cat'

s = s.split(',')
a = ','.join([i for i in s if 'name' not in i])
print(a)
</code></pre>
<p>Try this</p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>split the string with .split(",")</li>
<li>Filter by "name" with <code>if not in</code>.</li>
<li>strip leading / trailing whitespace with .strip()</li>
<li>join the string with ", ".join()</li>
<li>Add a dot at the end of the string if necessary with + "."</li>
</ul>
<p>Like this:</p>
<pre><code> mystring = "first_name,  second_name, every_single_name_exicted,dog,cat"

 newstring = ", ".join(s.strip() for s in mystring.split(",") if not "name" in s) + "."
</code></pre>
</div>
<span class="comment-copy"><code>split(',')</code> the string to give you a list, and use <code>in</code> on each substring to check for your match</span>
<span class="comment-copy">That's a <a href="https://en.wikipedia.org/wiki/Comma-separated_values" rel="nofollow noreferrer">Comma-Separated Values (or CSV)</a> input. And there are Python modules which are written to handle such specifically, especially since attempting to parse such data on your own is non-trivial because there are some very hard corner-cases.</span>
<span class="comment-copy">What have you tried so far? It looks like that a sensible combination of <code>split()</code> and <code>join()</code> with a conditional list comprehension would do the trick here.</span>
<span class="comment-copy">@Someprogrammerdude: I'm fond of the csv module which is great to process complex files, but for simple operations <code>str.split</code> or <code>re.split</code> can make sense...</span>
<span class="comment-copy">As for your problem, it's very easy when using Python lists. See e.g. <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow noreferrer">here for a list of operations on lists</a>. I'm sure you'll be able to find what you need quite quickly.</span>
<span class="comment-copy">great thank you very much it works! just a little problem, it leaves a lot of spaces in the places we removed the 'name'. what causing that?</span>
<span class="comment-copy"><code>dog,cat</code> is the output I am getting. What spaces are you talking about?</span>
<span class="comment-copy">@ValentinaNikolenko: You probably have the list like this: "dog, cat, a, b"...</span>
<span class="comment-copy">@ValentinaNikolenko: See my answer for this.</span>
<span class="comment-copy">I don't see no harm throwing this all in one line, readability doesn't seem to bad  <code>s = ','.join([i for i in s.split(',') if 'name' not in i]) </code></span>
