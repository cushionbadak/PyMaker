<div class="post-text" itemprop="text">
<p>I am trying to write a code in list comprehensions. However, I received nonetype when I do that. </p>
<p>Code:</p>
<pre><code>a = ["I", "have", "something", "to", "buy"]
delete = ["I", "have"]

aa = [a.remove(x) for x in delete]
print(aa)
</code></pre>
<p>output:</p>
<pre><code>[None, None]
</code></pre>
<p>Expected output:</p>
<pre><code>["something", "to", "buy"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>list.remove</code> changes the list <strong>inplace</strong> and returns None. For example:</p>
<pre><code>a = ["I", "have", "something", "to", "buy"]
print(a.remove("I")) # ['have', 'something', 'to', 'buy']
print(a) # None
</code></pre>
<p>If you really want to do this in one line, you can keep your code. While you don't need aa, just print a.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try print(a) instead of print (aa)</p>
<p>When you do a.remove(x), it removes it from the array'a'.</p>
<pre><code>  a = ["I", "have", "something", "to", "buy"]
  delete = ["I", "have"]

  aa = [a.remove(x) for x in delete]
  print(a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're misunderstanding the usage of 'remove' and/or comprehension list.</p>
<pre><code>aList.remove(item) 
</code></pre>
<p>modify the variable "aList" itself and does not return anything(that's why you're getting only None items).
What you're doing is iterating through every delete's item, and calling remove. 
Actually, your a list should be the result you want after creating the aa list :</p>
<pre><code>a = ["I", "have", "something", "to", "buy"]
delete = ["I", "have"]

aa = [a.remove(x) for x in delete]

a  ["something", "to", "buy"]

aa  [None,None]
</code></pre>
<p>A proper way to obtain the intended result without modifying the initial a list could be:</p>
<pre><code>aa=[word for word in a if not word in delete]
aa  ["something", "to", "buy"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to use the <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">comprehension if clause</a> like:</p>
<h3>Code:</h3>
<pre><code>aa = [x for x in a if x not in delete]
</code></pre>
<h3>Test Code:</h3>
<pre><code>a = ["I", "have", "something", "to", "buy"]
delete = ["I", "have"]

aa = [x for x in a if x not in delete]
print(aa)
</code></pre>
<h3>Results:</h3>
<pre><code>['something', 'to', 'buy']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do something similar to this conceptually with <code>filterfalse</code> </p>
<pre><code>from itertools import filterfalse

aa = list(filterfalse(lambda x: x in delete, a))
print(aa)
# ['something', 'to', 'buy']
</code></pre>
</div>
<span class="comment-copy">You will have to print 'a' ... not 'aa'...</span>
<span class="comment-copy">I see. Thank you sir. But what should I assign for the variable? Should I leave it aa? It will be a waste to the memory isnt it? Is there a smart way to use list comprehension without assign to any variable?</span>
<span class="comment-copy">Found my way thank you</span>
<span class="comment-copy">Else you could do as aa = [x for x in a if not x in delete]</span>
<span class="comment-copy">Thank you sir.  But what should I assign for the variable? Should I leave it aa? It will be a waste to the memory isnt it? Is there a smart way to use list comprehension without assign to any variable?</span>
<span class="comment-copy">I got it now. thank you</span>
