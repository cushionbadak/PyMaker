<div class="post-text" itemprop="text">
<p>I'm sure this has been asked and answered, but I couldn't find it specifically:</p>
<p>I'm just picking up Python and I'm not understanding a <strong>variable scope issue</strong>. </p>
<p><strong>I've simplified the problem to the following:</strong></p>
<p>Case 1:</p>
<pre><code>def lev1():
   exec("aaa=123")
   print("lev1:",aaa)

lev1()
</code></pre>
<p>Case 2:</p>
<pre><code>def lev1():
   global aaa
   exec("aaa=123")
   print("lev1:",aaa)

lev1()
</code></pre>
<p>Case 3:</p>
<pre><code>def lev1():
   exec("global aaa ; aaa=123")
   print("lev1:",aaa)

lev1()
</code></pre>
<ul>
<li><code>Case 1</code> and <code>Case 2</code> have <code>aaa</code> undefined in the print statement. </li>
<li><code>Case 3</code> works. Where does <code>aaa</code> actually exist in <code>Case 1</code> and <code>Case 2</code>?</li>
<li>Is there a way to access <code>aaa</code> in Case 1 without a <code>global</code> declaration?</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/functions.html#exec" rel="noreferrer">docs</a>:</p>
<blockquote>
<p><strong>Note:</strong> The default <em>locals</em> act as described for function <a href="https://docs.python.org/3/library/functions.html#locals" rel="noreferrer"><code>locals()</code></a> below: modifications to the default <em>locals</em> dictionary should not be attempted. Pass an explicit <em>locals</em> dictionary if you need to see effects of the code on <em>locals</em> after function <a href="https://docs.python.org/3/library/functions.html#exec" rel="noreferrer"><code>exec()</code></a> returns.</p>
</blockquote>
<p>In other words, if you call <code>exec</code> with one argument, you're not supposed to try to assign any variables, and Python doesn't promise what will happen if you try.</p>
<p>You can have the <code>exec</code>uted code assign to globals by passing <code>globals()</code> explicitly. (With an explicit <code>globals</code> dict and no explicit <code>locals</code> dict, <code>exec</code> will use the same dict for both globals and locals.)</p>
<pre><code>def lev1():
   exec("aaa=123", globals())
   print("lev1:", aaa)

lev1()
</code></pre>
</div>
