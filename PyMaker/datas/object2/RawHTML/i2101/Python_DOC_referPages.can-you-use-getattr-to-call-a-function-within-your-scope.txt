<div class="post-text" itemprop="text">
<p>I'm trying to do something like this, but I can't figure out how to call the function <code>bar</code>.</p>
<pre><code>def foo():
    def bar(baz):
        print('used getattr to call', baz)
    getattr(bar, __call__())('bar')

foo()
</code></pre>
<p>Notice, that this is somewhat unusual. Normally you'd have an object and get an attribute on that, which could be a function. then it's easy to run. but what if you just have a function within the current scope - how to do getattr on the current scope to run the function?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are close. To use <code>getattr</code>, pass the string value of the <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">name</a> of the attribute:</p>
<pre><code>getattr(bar, "__call__")('bar')
</code></pre>
<p>i.e</p>
<pre><code>def foo():
  def bar(baz):
    print('used getattr to call', baz)
  getattr(bar, "__call__")('bar')

foo()
</code></pre>
<p>Output:</p>
<pre><code>used getattr to call bar
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>alternatively, you can also use the <a href="https://docs.python.org/3.7/library/functions.html#locals" rel="nofollow noreferrer"><code>locals()</code></a> function which returns a dict of local symbols:</p>
<pre><code>def foo():
  def bar(baz):
    print('used getattr to call', baz)
  locals()['bar']('pouet')

foo()
</code></pre>
<p>It also allows you to get the function by its name instead of its reference without need for a custom mapping.</p>
</div>
<span class="comment-copy">what if I wanted to do <code>getattr('bar', "__call__")('bar')</code> ? when I try to make the function referenced via a string I get <code>AttributeError: 'str' object has no attribute '__call__'</code> Is there any way to reference the name of that dynamically?</span>
<span class="comment-copy">I just used a map, this works for my purposes <code>methods = {'bar': bar} ; getattr(methods['bar']...</code></span>
<span class="comment-copy">just call the <code>locals()</code> function, it returns a dictionary of objects from the local scope</span>
