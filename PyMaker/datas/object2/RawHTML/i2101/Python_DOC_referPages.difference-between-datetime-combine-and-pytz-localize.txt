<div class="post-text" itemprop="text">
<p>I am a bit puzzled by the following behavior. Suppose I use <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.combine" rel="nofollow noreferrer"><code>datetime.combine()</code></a> to construct a timezone-aware object:</p>
<pre><code>&gt;&gt;&gt; date
datetime.date(2018, 10, 17)
&gt;&gt;&gt; time
datetime.time(6, 0)
&gt;&gt;&gt; tz
&lt;DstTzInfo 'Europe/Berlin' LMT+0:53:00 STD&gt;
&gt;&gt;&gt; datetime.combine(date, time, tzinfo=tz)
datetime.datetime(2018, 10, 17, 6, 0, tzinfo=&lt;DstTzInfo 'Europe/Berlin' LMT+0:53:00 STD&gt;)
</code></pre>
<p>or I use <a href="https://pythonhosted.org/pytz/#localized-times-and-date-arithmetic" rel="nofollow noreferrer"><code>pytz.localize()</code></a> to do the same:</p>
<pre><code>&gt;&gt;&gt; tz.localize(datetime.combine(date, time))
datetime.datetime(2018, 10, 17, 6, 0, tzinfo=&lt;DstTzInfo 'Europe/Berlin' CEST+2:00:00 DST&gt;)
</code></pre>
<p>Note how the <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.tzinfo" rel="nofollow noreferrer"><code>tzinfo</code></a>’s timezone name and offset have changed. I am unable to find a proper documentation for that behavior. The <code>pytz</code> documentation says</p>
<blockquote>
<p>Unfortunately using the tzinfo argument of the standard datetime constructors “does not work” with pytz for many timezones.</p>
</blockquote>
<p>So what exactly is going on here? (Somewhat related questions are <a href="https://stackoverflow.com/questions/39460236/python-datetime-difference-between-localize-and-tzinfo">here</a> or <a href="https://stackoverflow.com/questions/24359540/why-doesnt-pytz-localize-produce-a-datetime-object-with-tzinfo-matching-the-t">here</a>.)</p>
</div>
<div class="post-text" itemprop="text">
<p>You just found out (again) that you should never directly add timezone information when creating timezone-aware datetimes. Always use <code>tz.localize()</code>.</p>
<p>The problem you are seeing is because <code>datetime.combine</code> doesn't adjust the <code>tzinfo</code> object to the actual datetime. It still assumes the timezone information of the first valid date in this timezone, which was in the late 1800's and happened to be <code>0:53:00</code> off from UTC.</p>
</div>
<span class="comment-copy">Thanks. Neither the Python documentation nor the pytz documentation states that, as far as I can see. Hence my question. I’m tempted to label this as a bug in the Python libs?</span>
<span class="comment-copy">It's not totally obvious, but that's mostly because very little about timezones is obvious. Since you are passing a timezone instance that doesn't come from the stdlib, and the stdlib timezones only handle simple timezones without transitions where this is not an issue, then I think it's reasonable that you refer to the documentation of <code>pytz</code>, where the correct usage is quite clear. It starts by stating two correct ways to localize datetimes, and then proceeds to discourage what you just did :-)</span>
<span class="comment-copy">Well, <code>tzinfo=…</code> <i>does</i> work for some timezones, e.g. it’s safe apparently to pass <code>tzinfo=pytz.utc</code>. That too is mentioned somewhere in the <code>pytz</code> documentation, but again, I’d like to understand <i>why</i> this happens. Your initial explanation of a “first valid date” does make sense though.</span>
