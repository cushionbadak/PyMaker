<div class="post-text" itemprop="text">
<p>I am trying to sort a list which is in a private class, i can sort it without getting private but can't in private.</p>
<p>First i open data and split it in main.py, and set a list call StudentDL in main.py and call it to Student.py , if I private Student.py, I can't sort the StudentDL list in main.py .</p>
<p>How can I sort the StudentDL list in main.py or Student.py after private Student.py?</p>
<p>Main.py:</p>
<pre><code>from Student import Student

StudentDL = []
file = open('markdata.dat', 'r')
line = file.readline()

while line != '':
    StudentRec = line.split('_')
    StudentDL.append(Student(int(StudentRec[0]),str(StudentRec[1]),
                            float(StudentRec[2]),
                            float(StudentRec[3])))
    line = file.readline()
file.close()
for e in StudentDL:
    print (e)
for e in sorted(StudentDL, key=lambda c:c.sID):
    print (e)
print('='*20)
for e in sorted(StudentDL, key=lambda c:c.n):
    print (Student.overall(e))
</code></pre>
<p>Student.py:</p>
<pre><code>class Student(object):
    numStudent = 0 
    def __init__(self,studentID,name,cwmark,exammark):
        Student.numStudent += 1
        self.__sID = studentID
        self.__n = name
        self.__cwm = cwmark
        self.__exm = exammark
        self.__om = (cwmark*0.4)+(exammark*0.6)

    def __str__(self):
        return '%-15s%-27s%-10.2f%7.2f'%\
            (self.__sID,self.__n,self.__cwm,self.__exm)

    def overall(self):
        return '%-15s%-27s%-12.2f%-7.2f%8.2f'%\
            (self.__sID,self.__n,self.__cwm,self.__exm,self.__om)

    def getoverall(self):
        return float(self.__om)
</code></pre>
<p>markdata:</p>
<pre><code>50123456_lam tai man_70.0_60.0_
50223456_li tai man_60.0_90.5_
50323456_wong tai man_34.5_30.0_
50423456_ng tai man_90.5_70.0_
50523456_lau tai man_86.0_92.4_
50623456_chui tai man_70.0_64.5_
50723456_lim tai man_64.5_60.0_
50823456_pok tai man_37.5_35.50_
50923456_kim tai man_92.4_60.0_
50023456_tsang tai man_15.0_20.0_
50999999_chan peter_100.00_80.00_
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why do you expect to be able to access private attributes from outside the class? <a href="https://docs.python.org/3/tutorial/classes.html#tut-private" rel="nofollow noreferrer">The whole point of private attributes is to prevent that</a> (Python <a href="https://stackoverflow.com/q/70528/364696">makes it easy to work around it</a>, but you're explicitly violating encapsulation when you do it).</p>
<p>If the variables should be logically readable, with privacy being used primarily to prevent writes, <code>Student</code> can <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer">declare <code>@property</code> accessors</a>:</p>
<pre><code>class Student(object):
    numStudent = 0 
    def __init__(self,studentID,name,cwmark,exammark):
        ...

    @property
    def n(self):
        return self.__n

    @property
    def sID(self):
        return self.__sID
</code></pre>
<p>If that protection isn't needed though, then just declare your attributes without the leading <code>__</code> in the first place, and leave them public.</p>
</div>
<span class="comment-copy">I know that my question is so silly .. But my teacher told use to submit the program with private class and have a sort function . The tips he gives is sort it in private class , I am so confuse what to do  ...</span>
<span class="comment-copy">@WongYatCheongJacky: Did your teacher perhaps mean to make class instances comparable by defining <code>__lt__</code> and <a href="https://docs.python.org/3/reference/datamodel.html#object.__lt__" rel="nofollow noreferrer">the other rich comparison operators</a>? That allows you to define a natural ordering of the class instances, and since <code>__lt__</code> is defined on the class, it has access to private members. Similarly, defining <code>@property</code> accessors would leave the underlying attributes private, while providing public read-only access (which would allow you to define <code>key</code> functions in terms of the properties).</span>
<span class="comment-copy"><a href="https://dpaste.de/jOrJ" rel="nofollow noreferrer">link</a> and <a href="https://dpaste.de/t0bD" rel="nofollow noreferrer">link</a> i try to use    <b>lt</b>     method but show a error on TypeError: __lt__() missing 1 required positional argument: 'other'</span>
<span class="comment-copy">@WongYatCheongJacky: You don't call <code>__lt__</code> directly (it's not forbidden, but it's silly to do so, and in the scenario you used it, makes no sense). It's just a function that gets called automatically when you test <code>studenta &lt; studentb</code>, and Python's sorting functions use it implicitly as the default comparison when no <code>key</code> function is defined (or the object is part of the <code>key</code>). If <code>__lt__</code> is correctly defined, you just do <code>for e in sorted(StudentDL):</code> without passing a <code>key</code> function at all, and you'll iterate in sorted order.</span>
