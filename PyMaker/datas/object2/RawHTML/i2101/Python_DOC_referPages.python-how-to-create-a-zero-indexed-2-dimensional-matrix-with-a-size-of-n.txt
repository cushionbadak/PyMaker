<div class="post-text" itemprop="text">
<p>Given a value <code>n</code>, what is the most efficient way to create a zero-indexed matrix with the column and row size equal to the value <code>n</code>?</p>
<p>I know the following command will create a 2d matrix with 0 as all of the cell values:</p>
<pre><code>[[0 for x in range(n)] for y in range(n)] 
</code></pre>
<p>So when the <code>n = 4</code>, the matrix would look as follows:</p>
<pre><code>[[0, 0, 0, 0],
 [0, 0, 0, 0],
 [0, 0, 0, 0],
 [0, 0, 0, 0]]
</code></pre>
<p>But is there any way to create the matrix as follows?</p>
<pre><code>[[ 0,  1,  2,  3],
 [ 4,  5,  6,  7],
 [ 8,  9, 10, 11],
 [12, 13, 14, 15]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you are talking about 2-d matrices, and you're specifically asking about efficiency, it might be best to turn to <code>numpy</code>:</p>
<pre><code>import numpy as np

n = 4    
my_matrix = np.arange(n*n).reshape(n,n)

&gt;&gt;&gt; my_matrix
array([[ 0,  1,  2,  3],
       [ 4,  5,  6,  7],
       [ 8,  9, 10, 11],
       [12, 13, 14, 15]])
</code></pre>
<p>Or you could use a list comprehension such as the following (or one of the ones suggested by @hiroprotagonist):</p>
<pre><code>n = 4  
my_ListOfLists = [list(range(i,i+n)) for i in range(0,n*n,n)]

&gt;&gt;&gt; my_ListOfLists
[[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11], [12, 13, 14, 15]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you could simply use the current coordinates <code>x</code> and <code>y</code> to calculate the value <code>x + y*n</code>:</p>
<pre><code>n = 4
print([[x + y*n for x in range(n)] for y in range(n)])
</code></pre>
<p>our you could use <a href="https://docs.python.org/3/library/itertools.html?highlight=count#itertools.count" rel="nofollow noreferrer"><code>itertools.count</code></a>: </p>
<pre><code>from itertools import count

n = 4
counter = count()
print([[next(counter) for x in range(n)] for y in range(n)])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something like this would work.</p>
<pre><code>[[i for i in range(j, j + 4)] for j in range(0, 20, 4)]

[[0, 1, 2, 3],
 [4, 5, 6, 7],
 [8, 9, 10, 11],
 [12, 13, 14, 15],
 [16, 17, 18, 19]]
</code></pre>
</div>
