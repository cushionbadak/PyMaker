<div class="post-text" itemprop="text">
<p>I need run 3 or 5 threads approx, this threads monitoring some activities in the OS. Because of this, the main program must be running in background. I've read many examples and explanations, but I'm not clear yet how to launch threads and main program in the background and after that, how to control them.</p>
<p>I start threads in daemon mode from main program:</p>
<pre><code>import threading
import time

def fun1():
    while True:
        print("Thread 1")
        time.sleep(1)

def fun2():
    while True:
        print("Thread 2")
        time.sleep(1)

def fun3():
    while True:
        print("Thread 3")
        time.sleep(1)

def main():
    thread1 = threading.Thread(target=fun1)
    thread1.daemon = True
    thread1.start()

    thread2 = threading.Thread(target=fun2)
    thread2.daemon = True
    thread2.start()

    thread3 = threading.Thread(target=fun3)
    thread3.daemon = True
    thread3.start()

if __name__ == '__main__':
    try:
        main()
        while True:
            print("------------")
            print("Main program")
            print("------------")
            time.sleep(3)
    except (KeyboardInterrupt, SystemExit):
        print("Terminated")
</code></pre>
<p>and after that I run the <code>main</code> program in background with (I'm not sure that this is the best way to do it for what I want to achieve):</p>
<pre class="lang-none prettyprint-override"><code>python daemon_thread.py &amp;
</code></pre>
<p>How control the threads after main program initialization if I need stop a specific thread, change its state, or whatever? How to access a specific thread or the main program?</p>
</div>
<div class="post-text" itemprop="text">
<p>I understand now how to do, to resume the problem: I have a main program running in background and this main program have some threads. But I want with another script or program stop the main program with the threads safetly and in some cases pause and resume threads. </p>
<p>I didn't have a correctly concept about how to use the Threads. I can stop or send signal to this threads from main program How?,with a database or config file.</p>
<p>I updated my project with this changes: </p>
<pre><code>import threading
import time
import sqlite3

def fun1(stop_event1):
    while not stop_event1.is_set(): 
        print("Thread 1")
        time.sleep(1)

def fun2(stop_event2):
    while not stop_event2.is_set(): 
        print("Thread 2")
        time.sleep(1)

def fun3(stop_event3):
    while not stop_event3.is_set(): 
        print("Thread 3")
        time.sleep(1)

def main():
    stop_event1 = threading.Event()
    thread1 = threading.Thread(target=fun1, args=(stop_event1,))
    thread1.daemon = True
    thread1.start()

    stop_event2 = threading.Event()
    thread2 = threading.Thread(target=fun2, args=(stop_event2,))
    thread2.daemon = True
    thread2.start()

    stop_event3 = threading.Event()
    thread3 = threading.Thread(target=fun3, args=(stop_event3,))
    thread3.daemon = True
    thread3.start()

    while True:
        print("------------")
        print("Main program")
        print("------------")
        time.sleep(3)            
        if alive_main():
            print("Finish Threads")
            stop_event1.set()
            stop_event2.set()
            stop_event3.set()

            print("Bye")
            break


def alive_main():
    conn = sqlite3.connect('example.db')
    c = conn.cursor()
    c.execute('SELECT alive_main FROM config')
    row = c.fetchone()
    if row[0] == 1:
        return True
    else:
        return False

if __name__ == '__main__':
    try:
        main()
    except (KeyboardInterrupt, SystemExit):
        print("Terminated")
</code></pre>
<p>If I want change with another class or script the state of my threads, I just change config table in my database y this take effect in the Threads, from main function. In this example if I stop correctly my threads and program just I update table, that's it.</p>
<pre><code>sqlite&gt; UPDATE config SET alive_main = 1;
</code></pre>
<p>I need read about <a href="https://docs.python.org/3/library/signal.html#module-signal" rel="nofollow noreferrer">Signals</a> and <a href="https://docs.python.org/3/library/threading.html#condition-objects" rel="nofollow noreferrer">Condition Objects</a> to complement correctly Threads uses. </p>
<p>Thanks everyone!</p>
</div>
<span class="comment-copy">you "access"  it like any other python object ... if you want a better answer we will need a more realistic example of what you want to do when you "access" it</span>
<span class="comment-copy">You need to be very specific about what ways you want to "control" them (the threads). How that needs to be done will likely depend on those details.</span>
<span class="comment-copy">There is no <code>kill</code> method for threads. If you want to kill a thread, you should have that thread check a variable occasionally. For example,  instead of <code>while True:</code>, use something like <code>while thread_1_keep_running:</code>, where <code>thread_1_keep_running</code> is a variable that you set to <code>True</code> or <code>False</code>.</span>
<span class="comment-copy">Read about <a href="https://docs.python.org/3/library/threading.html#condition-objects" rel="nofollow noreferrer">Condition Objects</a></span>
<span class="comment-copy">@JoranBeasleyI refer to "access" how I can in some time stop just the Thread 1 and change time sleep in Thread 2, and change a variable to Thread 3. But I don't understan how do that because the main program run in background in OS.</span>
