<div class="post-text" itemprop="text">
<p>I am a fan of Python 3's foregrounding of unicode issues. However in one place I'm not sure what it is doing.</p>
<p>As I understand it, the argv and the environment variables are transmitted from the OS to the python executable as bytes. Python chooses an encoding, and the data is exposed to the user program as unicode strings in <code>sys.argv</code> and <code>os.environ</code>.</p>
<p>I can't figure out how python chooses this encoding. I thought it was with LC variables but that doesn't seem to work.</p>
<pre><code>$ printf -v CENTS '\xC2\xA2' ; export CENTS ; echo "0xC2 0xA2 in UTF-8 is $CENTS"
0xC2 0xA2 in UTF-8 is ¢
$ printf -v LBS '\xC2\xA3' ; echo "0xC2 0xA3 in UTF-8 is $LBS"
0xC2 0xA3 in UTF-8 is £
$ cat &lt;&lt;EOF &gt;test.py
import os, sys
print("0xC2 0xA2 decodes to", *(hex(ord(c)) for c in os.environ.get("CENTS")))
print("0xC2 0xA3 decodes to", *(hex(ord(c)) for c in sys.argv[1]))
EOF
$ python3 test.py $LBS
0xC2 0xA2 decodes to 0xa2
0xC2 0xA3 decodes to 0xa3
$ LC_ALL=es_ES.ISO8859-1 python3 test.py $LBS
0xC2 0xA2 decodes to 0xa2
0xC2 0xA3 decodes to 0xa3
</code></pre>
<p>I expected the second one to give 0xc2 0xa2 and 0xc2 0xa3, but it seems LC_ALL made no difference.</p>
<p>Is there any way to bypass the encoding and just see the binary data provided to the executable?</p>
<p>Optionally, how does Python choose an encoding and where does it expose it? I thought it was exposed in <code>sys.getfilesystemencoding()</code> but that has very sparse docs which do not clarify anything. Pointers to official documentation would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Per the linked answers and the documentation they reference, here is a short answer:</p>
<p>For <code>os.environ</code>, see <a href="https://docs.python.org/3/library/os.html#os.environb" rel="nofollow noreferrer"><code>os.environb</code></a>, which is available on non-windows systems and provides direct access to the underlying bytes.</p>
<p>sys.argv is automatically decoded to a Unicode object using a specialized variety of the system-determined encoding (taken from I think <code>LANG</code>), and the original bytes are not directly exposed. To access them, more or less reliably I think, you can use <a href="https://docs.python.org/3/library/os.html#os.fsencode" rel="nofollow noreferrer"><code>os.fsencode</code></a>.</p>
<p>I have a feeling this can be gamed but I will follow up on that later.</p>
</div>
<span class="comment-copy">for sys.argv, see <a href="https://stackoverflow.com/a/7077803/1008142">stackoverflow.com/a/7077803/1008142</a> .  For os.environ as bytes, try os.environb (see, e.g., <a href="https://stackoverflow.com/a/27185688/1008142">stackoverflow.com/a/27185688/1008142</a> ).</span>
