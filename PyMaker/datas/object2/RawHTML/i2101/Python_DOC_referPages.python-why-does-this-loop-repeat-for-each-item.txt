<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4815792/loop-over-2-lists-repeating-the-shortest-until-end-of-longest">loop over 2 lists, repeating the shortest until end of longest</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to create a program which associates each day of the moth with a corresponding weekday. However, I am running into an issue when I attach the weekday.</p>
<pre><code>January  = ["1", "2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"]

days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
for i in (January):
    for j in days:
        print("January", i,j)
</code></pre>
<p>When this is run, I get the following result:</p>
<pre><code>January 1 Monday
January 1 Tuesday
January 1 Wednesday
January 1 Thursday
January 1 Friday
January 1 Saturday
January 1 Sunday
January 2 Monday
January 2 Tuesday
January 2 Wednesday
January 2 Thursday
January 2 Friday
January 2 Saturday
January 2 Sunday
</code></pre>
<p>This continues right up until 31.</p>
<p>Any help would be greatly appreciated, as I do not understand where I am going wrong.</p>
<p>Thank you! :)</p>
</div>
<div class="post-text" itemprop="text">
<p>With the nested <code>for</code> loops you are saying "for every day in <code>January</code>, <strong>iterate</strong> over <code>days</code> and print something`.</p>
<p>The word <strong>iterate</strong> is key here. You are going over the whole list <code>days</code> for every element in <code>January</code>.</p>
<p>What you are actually trying to do is to cycle the elements of <code>days</code> while iterating over the elements of <code>January</code>. Luckily, we have <a href="https://docs.python.org/3.7/library/itertools.html#itertools.cycle" rel="nofollow noreferrer"><code>itertools.cycle</code></a> for that!</p>
<p>Here's how I would implement your idea.</p>
<pre><code>&gt;&gt;&gt; from itertools import cycle
&gt;&gt;&gt; 
&gt;&gt;&gt; january = range(1, 32)
&gt;&gt;&gt; days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
&gt;&gt;&gt; 
&gt;&gt;&gt; for day, dayname in zip(january, cycle(days)):
...     print('January {} {}'.format(day, dayname))
... 
January 1 Monday
January 2 Tuesday
January 3 Wednesday
January 4 Thursday
January 5 Friday
January 6 Saturday
January 7 Sunday
January 8 Monday
January 9 Tuesday
January 10 Wednesday
January 11 Thursday
January 12 Friday
January 13 Saturday
January 14 Sunday
January 15 Monday
January 16 Tuesday
January 17 Wednesday
January 18 Thursday
January 19 Friday
January 20 Saturday
January 21 Sunday
January 22 Monday
January 23 Tuesday
January 24 Wednesday
January 25 Thursday
January 26 Friday
January 27 Saturday
January 28 Sunday
January 29 Monday
January 30 Tuesday
January 31 Wednesday
</code></pre>
<p>If this is more than just a programming exercise, you might want to look into the <a href="https://docs.python.org/3.7/library/datetime.html" rel="nofollow noreferrer"><code>datetime</code></a> module in order to avoid manually computing the weekday of a given date.</p>
</div>
<div class="post-text" itemprop="text">
<p>The second loop iterates over all 7 days of the week before going to the next day in the month. </p>
<p>One way to go about making what you need is by using a modulo operation:</p>
<pre><code>January  = ["1", "2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"]

days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]

for i in (January):
    # Need to subtract 1 because the loop variable i starts from 1 and not 0 
    current_day = (int(i) % 7) - 1
    print("January", i, days[current_day])
</code></pre>
<p>Output:</p>
<pre><code>January 1 Monday
January 2 Tuesday
January 3 Wednesday
January 4 Thursday
January 5 Friday
January 6 Saturday
January 7 Sunday
January 8 Monday
January 9 Tuesday
January 10 Wednesday
January 11 Thursday
January 12 Friday
January 13 Saturday
January 14 Sunday
January 15 Monday
January 16 Tuesday
January 17 Wednesday
January 18 Thursday
January 19 Friday
January 20 Saturday
January 21 Sunday
January 22 Monday
January 23 Tuesday
January 24 Wednesday
January 25 Thursday
January 26 Friday
January 27 Saturday
January 28 Sunday
January 29 Monday
January 30 Tuesday
January 31 Wednesday
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are several issues with your code:</p>
<ul>
<li>You need to cycle through your day strings ('Monday', 'Tuesday', etc)
repeatedly. You haven't specified any logic to achieve this. One solution (see below) is <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow noreferrer"><code>itertools.cycle</code></a>.</li>
<li>You don't need to create a list of string numbers. You don't need a list, or even strings. Just use a <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer"><code>range</code></a> object to specify a range.</li>
<li>Use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> to iterate sequentially an iterable of day numbers and strings. You then only need a single <code>for</code> loop.</li>
<li>You can use f-strings (Python 3.6+) as an efficient and readable alternative to manual string concatenation.</li>
</ul>
<p>Here's a working example:</p>
<pre><code>from itertools import cycle

January_days = range(1, 32)

days = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]

for day_num, day_str in zip(January_days, cycle(days)):
    print(f'January {day_num} {day_str}')

January 1 Monday
January 2 Tuesday
January 3 Wednesday
January 4 Thursday
...
January 27 Saturday
January 28 Sunday
January 29 Monday
January 31 Wednesday
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for i in (January):
for j in days:
    print("January", i,j)
</code></pre>
<p>This is </p>
<pre><code>for i in ["1", "2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31"] :
    for j in ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]:
    print("January", i, j)
</code></pre>
<p>In first Iteration of outer loop</p>
<pre><code>i = "1"
j = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
</code></pre>
<p>In first Iteration of outer loop</p>
<pre><code>i = "2"
j = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"]
</code></pre>
<p>....</p>
<p>Hence the output above.</p>
</div>
