<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5228158/cartesian-product-of-a-dictionary-of-lists">Cartesian product of a dictionary of lists</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I have a input data</p>
<pre><code>block = {
    'kernel' : [3,5,7],
    'strides' : [2,3],
    'padding': ['same'],
    'activation':['relu'],
    'type':['conv'],
}
</code></pre>
<p>I would like to create a mix and match follow:</p>
<pre><code>[ {'kernel': 3 ,'strides' : 2, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}, 
  {'kernel': 3 ,'strides' : 3, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}, 
  {'kernel': 5 ,'strides' : 2, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}, 
  {'kernel': 5 ,'strides' : 3, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}, 
  {'kernel': 7 ,'strides' : 2, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}, 
  {'kernel': 7 ,'strides' : 3, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a> to generate the combinations of values, then build those back into dictionaries:</p>
<pre><code>from itertools import product

keys, possible_values = zip(*block.items())

res = [dict(zip(keys, vals)) for vals in product(*possible_values)]
print(res)
</code></pre>
<p>prints </p>
<pre><code>[{'kernel': 3, 'strides': 2, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}, 
 {'kernel': 3, 'strides': 3, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}, 
 {'kernel': 5, 'strides': 2, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}, 
 {'kernel': 5, 'strides': 3, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}, 
 {'kernel': 7, 'strides': 2, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}, 
 {'kernel': 7, 'strides': 3, 'padding': 'same', 'activation': 'relu', 'type': 'conv'}]
</code></pre>
</div>
<span class="comment-copy">what is <code>count</code> and <code>hyperparam</code>? If <code>activation</code> has another item in the list are there even more possibilities?</span>
<span class="comment-copy">Hello, Chakkrit, I've never had to do this, the answer they gave you looks pythonic and simple. Next time you do a question, try and describe a little bit more, your problem, considering the data structures you use, and what you've tried, that could help anyone that answers, more, because they don't need to analyze a bunch of code as deep, and instead worry more about, the concept that the explain. Great question, and Welcome.</span>
<span class="comment-copy"><b>How</b> does it not work? Any error messages?</span>
<span class="comment-copy">@ekiim Thank you so much, Next time, I will be doing to your recommendation.</span>
<span class="comment-copy"><code>keys, possible_values = zip(*block.items())</code> looks redundant when we have <code>dict.keys</code>/<code>dict.values</code> methods</span>
<span class="comment-copy">@AzatIbrakov I can never remember if <code>keys()</code> and <code>values()</code> have the same order.  <a href="https://stackoverflow.com/questions/835092/python-dictionary-are-keys-and-values-always-the-same-order">It looks like they do</a>, so you're right that would be better</span>
