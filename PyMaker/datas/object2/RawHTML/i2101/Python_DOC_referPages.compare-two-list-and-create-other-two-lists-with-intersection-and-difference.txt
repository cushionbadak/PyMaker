<div class="post-text" itemprop="text">
<p>I have 2 lists A and B. </p>
<p>In the B list I can have multiple elements from list A.</p>
<p>For example:</p>
<pre><code>A = [1,3,5,7, 9, 12, 14]
B = [1,2,3,3,7,9,7,3,14,14,1,3,2,5,5]
</code></pre>
<p>I want to create:</p>
<ol>
<li>to create a list with ids that are in A and found in B (unique)</li>
<li>to create a list of ids that are in A and have no corresponding in B (unique)</li>
<li>Nice to get also: the numbers in B, that don't have a corespondent in A</li>
</ol>
<p>My approach is two loops:</p>
<pre><code>l1 = []   
l2 = []
for i in A:
    for j in B:
      if i == j
       l1.append[i]
...
l1 = set(l1)
</code></pre>
<p>I don't know if this is a good approach, plus remains the 2) point(what is not in b).</p>
<p>And I can't use <code>else on i!=j</code>, because of repetitions and no order in B.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>#to create a list with ids that are in A and found in B (unique)
resultlist=list(set(A)&amp;set(B))
print(list(set(A)&amp;set(B)))


#to create a list of ids that are in A and have no corresponding in B (unique)
print(list(set(A)-set(B)))


#the numbers in B, that don't have a corespondent in A
print(list(set(B)-set(A)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Convert the list to <code>set</code> and then perform set operations  </p>
<pre><code>&gt;&gt;&gt; set_A = set(A)
&gt;&gt;&gt; set_B = set(B)
&gt;&gt;&gt; list(set_A &amp; set_B)
[1, 3, 5, 7, 9, 14]         # set intersection

&gt;&gt;&gt; list(set_A - set_B)     # set difference
[12]

&gt;&gt;&gt; list(set_B - set_A)
[2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With python you can simply use the set type:</p>
<pre><code>list(set(A) &amp; set(B))
</code></pre>
<p>will return a list containing the element intersection between lists <code>A</code> and <code>B</code>.</p>
<pre><code>list(set(A) - set(B))
</code></pre>
<p>Will return a list containing all the elements that are in <code>A</code> and not in <code>B</code>.</p>
<p>Vice versa:</p>
<pre><code>list(set(B) - set(A))
</code></pre>
<p>Will return a list containing all the elements that are in <code>B</code> and not in <code>A</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>you could use the 'a in L' functionality, which will return True if an element is in a List. e.g.</p>
<pre><code>A = [1,3,5,7, 9, 12, 14]
B = [1,2,3,3,7,9,7,3,14,14,1,3,2,5,5]

common = []
uncommon = []

for a in A:
    if a in B:
      common.append(a)
    else:
      uncommon.append(a)
print(common)
print(uncommon)
</code></pre>
<p>this should give you a good hint on how to approach the other question.
best</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/sets.html" rel="nofollow noreferrer">set operations</a>:</p>
<pre><code>A = [1, 3, 5, 7, 9, 12, 14]
B = [1, 2, 3, 3, 7, 9, 7, 3, 14, 14, 1, 3, 2, 5, 5]

sa = set(A)
sb = set(B)

# intersection
l1 = list(sa &amp; sb)
# [1, 2, 3, 5, 7, 9, 12, 14]

# differences
l2 = list(sa - sb)
# [12]
l3 = list(sb - sa)
# [2]
</code></pre>
</div>
<span class="comment-copy">Just use Python's builtin <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer"><b><code>set</code></b></a> type.</span>
<span class="comment-copy">Please include the desired output in your question, because I'm really not sure if I understood (1) and (2) correctly.</span>
<span class="comment-copy">Isn't l1 = list(sa | sb) the union and l1 = list(sa &amp; sb) the intersection?</span>
<span class="comment-copy">Oh, yes that's definitely easier then my approach. chapeau!</span>
<span class="comment-copy">@AlexanderPane Of course</span>
<span class="comment-copy">@schwobaseggl Ok, so the answer got edited :)</span>
<span class="comment-copy">@AlexanderPane I edited the answer upon your comment. That's what I meant by 'of course'</span>
