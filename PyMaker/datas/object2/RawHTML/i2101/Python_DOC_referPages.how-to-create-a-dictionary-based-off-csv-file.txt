<div class="post-text" itemprop="text">
<p>I have a csv file with the following format:</p>
<pre><code>#ID #Number #Date #Name #Email
1978 26   24/4/10 Jim  Jim@randomemail.com
1328 31   22/7/10 Jim  Kim@randomemail.com
1908 26   21/4/10 Jim  Dim@randomemail.com
1918 26   29/4/10 Jim  Rim@randomemail.com
1938 46   24/4/10 Jim  Lim@randomemail.com
</code></pre>
<p>I have opened the csv file and printed it out already.</p>
<p>I now want to make it so it's made into a dictionary such as:
     [ID: 1978, Number : 26, Date : 24/4/10, Name : Jim, Email : 
     Jim@randomemail.com], [etc], [etc]</p>
<p>I know this is probably very easy but I'm new and have been stuck for a few hours. </p>
</div>
<div class="post-text" itemprop="text">
<p>Here's some code written in pure python that'll do the trick:</p>
<pre><code>for line in file_contents_2:
    line_contents = line.strip().split(",") # Removes the \n,
    # then turns the line into a list, where each value is seperated
    # by the comma      
    the_dictionary = {}
    reference = ["ORIN","DEST","HORIZ","BEAR"]
    for i in range(4): # iterates i=0 to i=3
        # Arrays start at 0, so a=[1,2,3]; a[1] would return 2
        the_dictionary[reference[i]] = line_contents[i]
    dictionary_list.append(the_dictionary)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Following up on my comment, consider something like:</p>
<pre><code>import csv
with open('file.txt', 'r') as f:
    reader = csv.DictReader(f, delimiter=' ', skipinitialspace=True)
    for row in reader:
        print(row)
</code></pre>
<p>Output:</p>
<pre>
OrderedDict([('#ID', '1978'), ('#Number', '26'), ('#Date', '24/4/10'), ('#Name', 'Jim'), ('#Email', 'Jim@randomemail.com')])
OrderedDict([('#ID', '1328'), ('#Number', '31'), ('#Date', '22/7/10'), ('#Name', 'Jim'), ('#Email', 'Kim@randomemail.com')])
OrderedDict([('#ID', '1908'), ('#Number', '26'), ('#Date', '21/4/10'), ('#Name', 'Jim'), ('#Email', 'Dim@randomemail.com')])
OrderedDict([('#ID', '1918'), ('#Number', '26'), ('#Date', '29/4/10'), ('#Name', 'Jim'), ('#Email', 'Rim@randomemail.com')])
OrderedDict([('#ID', '1938'), ('#Number', '46'), ('#Date', '24/4/10'), ('#Name', 'Jim'), ('#Email', 'Lim@randomemail.com')])
</pre>
<p>The two extra arguments to <code>DictReader</code> are necessary to get your variable-space-delimited file to parse correctly.</p>
<p>Or, if you want all the rows at once, something like:</p>
<pre><code>import csv
with open('file.txt', 'r') as f:
    reader = csv.DictReader(f, delimiter=' ', skipinitialspace=True)
    rows = list(reader)

print(rows)
</code></pre>
<p>produces</p>
<pre>
[
    OrderedDict([('#ID', '1978'), ('#Number', '26'), ('#Date', '24/4/10'), ('#Name', 'Jim'), ('#Email', 'Jim@randomemail.com')]), 
    OrderedDict([('#ID', '1328'), ('#Number', '31'), ('#Date', '22/7/10'), ('#Name', 'Jim'), ('#Email', 'Kim@randomemail.com')]), 
    OrderedDict([('#ID', '1908'), ('#Number', '26'), ('#Date', '21/4/10'), ('#Name', 'Jim'), ('#Email', 'Dim@randomemail.com')]), 
    OrderedDict([('#ID', '1918'), ('#Number', '26'), ('#Date', '29/4/10'), ('#Name', 'Jim'), ('#Email', 'Rim@randomemail.com')]), 
    OrderedDict([('#ID', '1938'), ('#Number', '46'), ('#Date', '24/4/10'), ('#Name', 'Jim'), ('#Email', 'Lim@randomemail.com')])
]
</pre>
<p>and,</p>
<pre><code>print(rows[0]["#Email"])
</code></pre>
<p>produces </p>
<pre>
Jim@randomemail.com
</pre>
<p><strong>Update</strong></p>
<p>If your file is actually <em>tab</em> delimited, you could use:</p>
<pre><code>reader = csv.DictReader(f, delimiter='\t')
</code></pre>
<p>You should be able to tell what the delimiter by printing the line (as you already have), but wrap it in a <code>repr</code> call -- something like <code>print(repr(line))</code>.  If you see a <code>\t</code> in the output, it's tab delimited.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using pandas will make your life much easier:</p>
<pre><code>import pandas as pd
df = pd.read_csv('path_to_your_csv')
your_dict = df.to_dict()
</code></pre>
<p>That's it, there are some optional arguments in <code>to_dict</code> to help you format it the way you want.</p>
</div>
<span class="comment-copy">Have you seen <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer"><code>csv.DictReader</code></a>?</span>
<span class="comment-copy">Thanks for the reply, i've added this to my code but nothing seems to happen?<a href="https://imgur.com/a/7WadhrF" rel="nofollow noreferrer">imgur.com/a/7WadhrF</a></span>
<span class="comment-copy">I didn't include the print statement. The code I wrote is meant to replace lines 26-38 in your original picture</span>
<span class="comment-copy">of course! thank you it worked, much appreciated.</span>
<span class="comment-copy">I think the delimiter is a '\t' (tab) not space, but that's jut my reading.</span>
<span class="comment-copy">@hd1 That's possible, my editor auto-replaces -- I'll add alternative Reader arguments</span>
