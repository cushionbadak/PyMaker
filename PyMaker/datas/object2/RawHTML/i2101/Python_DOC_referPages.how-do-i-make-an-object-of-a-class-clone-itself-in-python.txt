<div class="post-text" itemprop="text">
<p>I am creating a game that has a 'Battlefield.' I created a class for it:</p>
<pre><code>class Battlefield:
    units = [[Warrior1, Warrior2]]
</code></pre>
<p>I am creating a function that would clone the units on the battlefield, so the new Battlefield.units would be:</p>
<pre><code>print (Battlefield.units)
[[Warrior1, Warrior2], [Warrior1, Warrior2]]
</code></pre>
<p>'Warrior1'is something like</p>
<pre><code>Warrior1 = [1, 3, 2, 5, 6]
</code></pre>
<p>What makes this difficult, is I need to be able to adjust the stats for ONLY the first Warrior1, without adjust the stats of the second Warrior1. All of the questions that I've seen on stack overflow have addressed how to copy a list onto a new list, such as:</p>
<pre><code>new_list = old_list.copy()
</code></pre>
<p>However, I will not be able to reference this new_list in existing functions, since within the game I constantly refer back to the 'Battlefield.unit' object.  In other words, I must clone WITHIN the existing object, all while making the variables within the list somehow distinct from one another so I can alter one without altering the other.</p>
<p>Please advise.  Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/copy.html#copy.deepcopy" rel="nofollow noreferrer">copy.deepcopy</a>:</p>
<pre><code>&gt;&gt;&gt; import copy
&gt;&gt;&gt; a = [[1, 2], [3,4]]
&gt;&gt;&gt; b = copy.deepcopy(a)
&gt;&gt;&gt; b[0][0] = 4
&gt;&gt;&gt; a
[[1, 2], [3, 4]]
&gt;&gt;&gt; b
[[4, 2], [3, 4]]
</code></pre>
<p>Or for an object oriented approach: </p>
<pre><code>class Warrior():
  def __init__(self):
    pass
  def copy(self):
    return copy.deepcopy(self)
</code></pre>
</div>
<span class="comment-copy">Can you also show us what <code>Warrior1</code> and <code>Warrior2</code> look like? It sounds like you may be confusing how classes and instances thereof should be used.</span>
<span class="comment-copy">Are Warrior1 and Warrior2 instances of another class? Your question is then how to make <i>that</i> class able to clone an instance. <code>Battlefield</code> should not know anything about <code>Warrior</code>'s internals.</span>
<span class="comment-copy">Each Warrior is simply a set of numbers, like 'Warrior1 = [1, 1, 2, 3, 6]</span>
<span class="comment-copy">@DavidWilliam Please add that to the question is this is relevant</span>
<span class="comment-copy">Unfortunately, that does not give the result I'm looking for.  I want to clone the list WITHIN the list, not create a new one.  You are correct that I can create a NEW list 'b', in your example, but I'm looking to have the contents of a cloned and staying within a to make changes.</span>
<span class="comment-copy">in my example, would <code>a.append(copy.deepcopy(a[0]))</code> do what you want?</span>
