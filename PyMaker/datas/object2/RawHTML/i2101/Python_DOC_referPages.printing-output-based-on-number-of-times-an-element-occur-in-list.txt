<div class="post-text" itemprop="text">
<p>Currently, i have a list containing:</p>
<pre><code>lst = [[2],[2,2],[2,2,2,3,3],[2,3,5,5]]
</code></pre>
<p>and I'm trying to print out in the format below where:</p>
<pre><code>2^1             #since there is only one '2'   
2^2             #since there are two '2' in the first list
2^3 | 3^2       #three '2' and two '3'
2^1 | 3^1 | 5^2 #one '2', one '3' and two '5'
</code></pre>
<p>I tried:</p>
<pre><code>for i in range(len(lst)):
    count = 1
    if len(lst[i]) == 1:
        print(str(lst[i][0]) + "^" + str(count))
    else:
        for j in range(len(lst[i])-1):
            if lst[i][j] == lst[i][j+1]:
                count+=1
            else:
                print(str(lst[i][j]) + "^" + str(count) + " | " +str(lst[i][j+1]) + "^" +str(count)) 
        if count == len(lst[i]):
            print(str(lst[i][j]) + "^" + str(count))
</code></pre>
<p>but I'm getting the output of</p>
<pre><code>2^1
2^2
2^3 | 3^3
2^1 | 3^1
3^1 | 5^1
</code></pre>
<p>Would appreciate some help on this</p>
</div>
<div class="post-text" itemprop="text">
<p>a simple variant using <a href="https://docs.python.org/3/library/collections.html?highlight=counter#collections.Counter" rel="nofollow noreferrer"><code>itertools.Counter</code></a></p>
<pre><code>from collections import Counter

for sublist in lst:
    c = Counter(sublist)
    print(' | '.join(f'{number}^{mult}' for number, mult in c.items()))
</code></pre>
<p>this lets the <code>Counter</code> do the work of counting and just displays the items in your desired format.</p>
<p>the <code>Counter</code> objects work like dictionaries an look like this (last item in your list):</p>
<pre><code>c = Counter({5: 2, 2: 1, 3: 1})
</code></pre>
<p>as with a <code>dict</code> you can iterate over the <code>key, value</code> pairs using <code>c.items()</code>. the format string <code>f'{number}^{mult}'</code> then produces strings like <code>5^2</code> which then are <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str%20join#str.join" rel="nofollow noreferrer"><code>join</code></a>ed using the separator <code>' | '</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <em>itertools.groupby</em> only thing issue is the trailing <code>|</code> on the print     </p>
<pre><code>from itertools import groupby

lst = [sorted(i) for i in lst]
for i in lst:
    for k, g in groupby(i):
        print('{}^{} | '.format(k, len(list(g))), end='')
    print()
</code></pre>
<blockquote>
<pre><code>2^1 | 
2^2 | 
2^3 | 3^2 | 
2^1 | 3^1 | 5^2 |
</code></pre>
</blockquote>
</div>
<span class="comment-copy">It would help if you give a small explanation for your code. Anyways, kudos to your answer.</span>
<span class="comment-copy">@Agile_Eagle you are right... was ninja-editing. hope the answer is now +/- self-explanatory (the links to the official doc should make things clear, i hope).</span>
<span class="comment-copy">looks good. Nice explanation</span>
