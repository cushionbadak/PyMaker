<div class="post-text" itemprop="text">
<pre><code>if theurl.startswith("http://"): theurl = theurl[7:]
    head = theurl[:theurl.find('/')]
    tail = theurl[theurl.find('/'):]
response_code = 0
import httplib
conn = httplib.HTTPConnection(head)
conn.request("HEAD",tail)
res = conn.getresponse()
response_code = int(res.status)

http://www.garageband.com/mp3cat/.UZCKbS6N4qk/01_Saraenglish.mp3
Traceback (most recent call last):
  File "check_data_404.py", line 51, in &lt;module&gt;
    run()
  File "check_data_404.py", line 35, in run
    res = conn.getresponse()
  File "/usr/lib/python2.6/httplib.py", line 950, in getresponse
    response.begin()
  File "/usr/lib/python2.6/httplib.py", line 390, in begin
    version, status, reason = self._read_status()
  File "/usr/lib/python2.6/httplib.py", line 354, in _read_status
    raise BadStatusLine(line)
httplib.BadStatusLine
</code></pre>
<p>Does anyone know what "Bad Status Line" is?</p>
<p>Edit: I tried this for many servers, and many URL's and I still get this error?</p>
</div>
<div class="post-text" itemprop="text">
<p>From the documentation for <a href="https://docs.python.org/2/library/httplib.html" rel="noreferrer">httplib (Python 2)</a> (called <a href="https://docs.python.org/3/library/http.client.html" rel="noreferrer">http.client in Python 3</a>):</p>
<blockquote>
<p><em>exception</em> <code>httplib.</code><strong><code>BadStatusLine</code></strong>: (<em>exception</em> <code>http.client.</code><strong><code>BadStatusLine</code></strong>:)</p>
<blockquote>
<p>A subclass of <code>HTTPException</code>.</p>
<p>Raised if a server responds with an HTTP status code that we don’t understand.</p>
</blockquote>
</blockquote>
<p>I ran the same code and did not receive an error:</p>
<pre><code>&gt;&gt;&gt; theurl = 'http://www.garageband.com/mp3cat/.UZCKbS6N4qk/01_Saraenglish.mp3'
&gt;&gt;&gt; if theurl.startswith("http://"):
...     theurl = theurl[7:]
...     head = theurl[:theurl.find('/')]
...     tail = theurl[theurl.find('/'):]
... 
&gt;&gt;&gt; head
'www.garageband.com'
&gt;&gt;&gt; tail
'/mp3cat/.UZCKbS6N4qk/01_Saraenglish.mp3'
&gt;&gt;&gt; response_code = 0
&gt;&gt;&gt; import httplib
&gt;&gt;&gt; conn = httplib.HTTPConnection(head)
&gt;&gt;&gt; conn.request("HEAD", tail)
&gt;&gt;&gt; res = conn.getresponse()
&gt;&gt;&gt; res.status
302
&gt;&gt;&gt; response_code = int(res.status)
</code></pre>
<p>I guess just double-check everything and try again?</p>
</div>
<div class="post-text" itemprop="text">
<p>I recently got this error, in a situation where the method that contained the http request ran successfully once, and then threw this exception (with the status code as an empty string) the second time the method was called (with a different URL). I had a debugging advantage because this is calling my own REST api, so I did some logging on the server side and discovered that the request was never being received. I ultimately figured out that my URL string had a trailing newline character. So make sure that your URLs are stripped of any leading or trailing special characters.</p>
</div>
<div class="post-text" itemprop="text">
<p>The Python Standard Library: <a href="https://docs.python.org/2/library/httplib.html" rel="nofollow noreferrer">httplib (Python 2)</a> (called <a href="https://docs.python.org/3/library/http.client.html" rel="nofollow noreferrer">http.client in Python 3</a>):</p>
<blockquote>
<p><code>exception httplib.BadStatusLine</code><br/>
  A subclass of HTTPException. Raised if a server responds with a HTTP status code that we don’t understand.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Are you using a proxy?</p>
<p>If so, perhaps the proxy server is rejecting <code>HEAD</code> requests.</p>
<p>Do you get the same problem if you issue a <code>GET</code> request? If <code>GET</code> works I'd suspect that there is a proxy in your way.</p>
<p>You can see what's going on in more detail by calling <code>conn.set_debuglevel(1)</code> prior to calling <code>conn.request(...)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I just found when we get exception httplib.BadStatusLine , is when server goes down and doesn't send any response, so it means web server doesn't even send the http code  [1] </p>
<p>[1] <a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes" rel="nofollow">http://en.wikipedia.org/wiki/List_of_HTTP_status_codes</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I've also encountered this problem.
Accordig to GmailAPI (python), it happens when the server closes the connection before sending a valid respone. Indeed, this only happened to me when my program ran on large DB.</p>
<pre><code>def _read_status(self):
    # Initialize with Simple-Response defaults
    line = self.fp.readline(_MAXLINE + 1)
    if len(line) &gt; _MAXLINE:
        raise LineTooLong("header line")
    if self.debuglevel &gt; 0:
        print "reply:", repr(line)
    if not line:
        # Presumably, the server closed the connection before
        # sending a valid response.
        raise BadStatusLine(line)
</code></pre>
<p>My solution was to move all the part that establishes the connection with gmail into a function. Then, call this function only before actually sending the email. Before that, the parts incharge of establishing the connection were just 'thrown' in some .py file, and therefore were called at the begining of the run.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem I had was with multiple requests, but BadStatusLine was only occurring between requests with more then a 5 second interval with a Keep-Alive timeout=5. I'm still uncertain why BadStatusLine was being raised instead of NotConnected. It seems that the connection also defaults to 5 when the header is missing.
The fix was <code>conn.connect()</code> before each request.</p>
</div>
<div class="post-text" itemprop="text">
<p>I know that "you should just use X" answers are frowned upon, but I have to say that after trying to diagnose this same problem for a couple hours I tried <a href="http://docs.python-requests.org/en/latest/" rel="nofollow">Requests</a> with the same set up and it worked perfectly. Easier to use and debug in my opinion as well.</p>
</div>
<div class="post-text" itemprop="text">
<p>We have no clues about what is in your <code>theurl</code> string, and I do not know whether your problem is solved or not (6 years have past and I hope you made it long before), so I just give you one possible reason I met and share it with someone who may find this later.</p>
<p>I have encountered a quite similar problem, in which my code runs quite well on some computers but raises <code>BadStatusLine</code> exceptions sometimes. It is quite annoying just like a ghost.</p>
<p>After careful checked all the possible stituation, I found a <code>'Content-Length'</code> component was in my request <code>http header</code>. After <strong>removeing</strong> the component, my code runs well in all computers. Maybe the first part of your <code>theurl</code> contains something like mine, which contradicts the true data length.</p>
</div>
<div class="post-text" itemprop="text">
<p>I saw this error when trying to access a HTTPS/SSL URL using httplib.HTTPConnection</p>
<p>You should use httplib.HTTPSConnection to access SSL urls.</p>
</div>
<span class="comment-copy">In my particular case, the problem disappeared when I changed Http://... to Https://... Give it a try.</span>
<span class="comment-copy">Very weird.  I copied and pasted your code into 5 of my servers (different IPs), and got the error.</span>
<span class="comment-copy">This is happening with other URLs too. Even google.com or yahoo.com...</span>
<span class="comment-copy">Hmm, have you verified other system things like DNS name resolution?  Also, are you being proxied (as @mhawke asked)?  This is crossing over into sysadmin territory...</span>
<span class="comment-copy">is it possible to log the full HTTP response in the case of httplib.BadStatusLine?</span>
<span class="comment-copy">awesome... this fixed it for me... would have NEVER suspected a newline to bring up such an unrelated error message. I was lucky that four years after the post, aarrgh and me had the same problem.</span>
<span class="comment-copy">I get this error when running through my school's network, but when I use my phone it runs perfectly. Is there a solution to this because all the things I need to access I can in my browser o.O?</span>
<span class="comment-copy">Fixed: Used the path instead of trying to request from the entire url after connecting</span>
<span class="comment-copy">Same issue for me.  Ubuntu drive filled up.  Docker containers with server went bad.  Had to restart to fix it up.</span>
