<div class="post-text" itemprop="text">
<p>I only just noticed this feature today! </p>
<pre><code>s={1,2,3} #Set initialisation
t={x for x in s if x!=3} #Set comprehension
t=={1,2}
</code></pre>
<p>What version is it in? I also noticed that it has set comprehension. Was this added in the same version?</p>
<p><strong>Resources</strong></p>
<ul>
<li><a href="http://docs.python.org/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer">Sets in Python 2.4 Docs</a></li>
<li><a href="http://docs.python.org/dev/3.0/whatsnew/3.0.html" rel="nofollow noreferrer">What's new in Python 3.0</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>The <code>sets</code> module was added in Python 2.3, but the built-in set type was added to the language in 2.4, with essentially the same interface. (As of 2.6, the <code>sets</code> module has been deprecated.)</p>
<p>So you can use sets as far back as 2.3, as long as you</p>
<pre><code>import sets
</code></pre>
<p>But you will get a <code>DeprecationWarning</code> if you try that import in 2.6</p>
<p>Set comprehensions, and the set literal syntax -- that is, being able to say</p>
<pre><code>a = { 1, 2, 3 }
</code></pre>
<p>are new in Python 3.0. To be very specific, both set literals and set comprehensions were present in Python 3.0a1, the first public release of Python 3.0, from 2007. <a href="http://www.python.org/download/releases/3.0/NEWS.txt" rel="nofollow noreferrer">Python 3 release notes</a></p>
<p>The comprehensions and literals were later implemented in 2.7. <a href="https://docs.python.org/3/whatsnew/2.7.html#python-3-1-features" rel="nofollow noreferrer">3.x Python features incorporated into 2.7</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Well, testing it:</p>
<pre><code>&gt;&gt;&gt; s = {1, 2, 3}
  File "&lt;stdin&gt;", line 1
    s = {1, 2, 3}
          ^
SyntaxError: invalid syntax
</code></pre>
<p>I'm running 2.5, so I would assume that this syntax was added sometime in 2.6 (Update: actually added in 3.0, but Ian beat me). I should probably be upgrading sometime soon. I'm glad they added a syntax for it - I'm rather tired of <code>set([1, 2, 3])</code>.</p>
<p>Set comprehensions have probably been around since sets were first created. The Python documentation site isn't very clear, but I wouldn't imagine sets would be too useful without iterators.</p>
</div>
<div class="post-text" itemprop="text">
<p>The set literal and set and dict comprehension syntaxes were backported to 2.x trunk, about 2-3 days ago. So I guess this feature should be available from python 2.7.</p>
</div>
<span class="comment-copy">Again, this doesn't answer the question, but it is my fault for being unclear</span>
<span class="comment-copy">The special set comprehension syntax with brackets is new to Python 3.0, but you can perform set comprehensions in 2.5 and older with the more verbose (and uglier) <code>set([i for i in s])</code></span>
<span class="comment-copy">It is listed as a new feature in Python 3.0. <a href="http://docs.python.org/dev/3.0/whatsnew/3.0.html" rel="nofollow noreferrer">docs.python.org/dev/3.0/whatsnew/3.0.html</a>. It can't be done in Python 2.6</span>
<span class="comment-copy">@Chris: Use a generator expression, it allows to drop the brackets if alone, <code>set(i for i in s)</code>. Not ugly IMO.</span>
<span class="comment-copy">I guess I wasn't clear enough in the question. This is when sets were added and set operators. Don't downvote this answer</span>
