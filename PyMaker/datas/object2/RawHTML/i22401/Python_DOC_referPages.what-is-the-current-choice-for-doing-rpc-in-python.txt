<div class="post-text" itemprop="text">
<p>Actually, I've done some work with Pyro and RPyC, but there is more RPC implementation than these two. Can we make a list of them?</p>
<p>Native Python-based protocols:</p>
<ul>
<li><a href="http://pythonhosted.org/Pyro4/" rel="noreferrer">PyRo4 (Python Remote Objects)</a></li>
<li><a href="http://rpyc.wikidot.com" rel="noreferrer">RPyC (Remote Python Call)</a></li>
<li><a href="https://bitbucket.org/prologic/circuits/" rel="noreferrer">Circuits</a></li>
</ul>
<p>RPC frameworks with a lot of underlying protocols:</p>
<ul>
<li><a href="http://spyne.io" rel="noreferrer">Spyne</a> (see <a href="http://www.youtube.com/watch?v=N4zdWLuSbV0#t=21m58" rel="noreferrer">lightning talk</a>)</li>
</ul>
<p>JSON-RPC based frameworks:</p>
<ul>
<li><a href="http://github.com/niligulmohar/python-symmetric-jsonrpc" rel="noreferrer">python-symmetric-jsonrpc</a></li>
<li><a href="http://www.openminddev.net/rpcbd/python/" rel="noreferrer">rpcbd</a></li>
<li><a href="http://pypi.python.org/pypi/ladon" rel="noreferrer">Ladon</a></li>
<li><a href="https://github.com/wiltd/jsonrpc2-zeromq-python" rel="noreferrer">jsonrpc2-zeromq-python</a></li>
</ul>
<p>SOAP:</p>
<ul>
<li><a href="http://pypi.python.org/pypi/ZSI/" rel="noreferrer">ZSI</a></li>
<li><a href="http://pypi.python.org/pypi/SOAPpy" rel="noreferrer">SOAPpy</a></li>
<li><a href="http://pypi.python.org/pypi/ladon" rel="noreferrer">Ladon</a></li>
<li><a href="http://arskom.github.com/rpclib" rel="noreferrer">Spyne</a></li>
</ul>
<p>XML-RPC based frameworks:</p>
<ul>
<li>XMLRPC, using the <a href="http://docs.python.org/library/xmlrpclib.html" rel="noreferrer">xmlrpclib</a> and <a href="http://docs.python.org/library/simplexmlrpcserver.html" rel="noreferrer">SimpleXMLRPCServer</a> modules in the standard library.</li>
</ul>
<p>Others:</p>
<ul>
<li><a href="http://wamp.ws/spec" rel="noreferrer">WAMP (RPC + PubSub, JSON + MsgPack)</a></li>
<li><a href="http://twistedmatrix.com/trac/" rel="noreferrer">Twisted Spread</a></li>
<li><a href="https://github.com/geoffwatts/zmqrpc" rel="noreferrer">ZMQRPC (ZeroMQ and BSON based)</a></li>
<li><a href="https://versile.com/products/vpy/" rel="noreferrer">VPy (Versile Python)</a> - AGPLv3</li>
<li><a href="http://www.zerorpc.io" rel="noreferrer">zerorpc (Python or Node.js, msgpack + ZeroMQ)</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://en.wikipedia.org/wiki/XML-RPC" rel="noreferrer">XML-RPC</a> is part of the Python standard library:</p>
<ul>
<li>Python 2: <a href="https://docs.python.org/2/library/xmlrpclib.html" rel="noreferrer">xmlrpclib</a> and <a href="https://docs.python.org/2/library/simplexmlrpcserver.html" rel="noreferrer">SimpleXMLRPCServer</a></li>
<li>Python 3: <a href="https://docs.python.org/3/library/xmlrpc.html" rel="noreferrer">xmlrpc</a> (both <a href="https://docs.python.org/3/library/xmlrpc.client.html" rel="noreferrer">client</a> and <a href="https://docs.python.org/3/library/xmlrpc.server.html" rel="noreferrer">server</a>)</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://thrift.apache.org/">Apache Thrift</a> is a cross-language RPC option developed at Facebook. Works over sockets, function signatures are defined in text files in a language-independent way.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since I've asked this question, I've started using <a href="http://github.com/niligulmohar/python-symmetric-jsonrpc" rel="nofollow noreferrer">python-symmetric-jsonrpc</a>. It is quite good, can be used between python and non-python software and follow the JSON-RPC standard. But it lacks some examples.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could try Ladon. It serves up multiple web server protocols at once so you can offer more flexibility at the client side.</p>
<p><a href="http://pypi.python.org/pypi/ladon" rel="noreferrer">http://pypi.python.org/pypi/ladon</a></p>
</div>
<div class="post-text" itemprop="text">
<p>There are some attempts at making SOAP work with python, but I haven't tested it much so I can't say if it is good or not.</p>
<p><a href="http://soapy.sf.net/" rel="nofollow noreferrer">SOAPy</a> is one example.</p>
</div>
<div class="post-text" itemprop="text">
<p>We are developing <a href="https://versile.com/products/vpy/" rel="nofollow">Versile Python</a> (VPy), an implementation for python 2.6+ and 3.x of a new ORB/RPC framework. Functional AGPL dev releases for review and testing are <a href="https://versile.com/download.php" rel="nofollow">available</a>. VPy has native python capabilities similar to PyRo and RPyC via a general native objects layer (<a href="https://versile.com/doc/vpy/current/library/vse/native.html" rel="nofollow">code example</a>). The product is designed for platform-independent remote object interaction for implementations of <a href="https://versile.com/platform/" rel="nofollow">Versile Platform</a>. </p>
<p>Full disclosure: I work for the company developing VPy.</p>
</div>
<div class="post-text" itemprop="text">
<p>maybe ZSI which implements SOAP. I used the stub generator and It worked properly. The only problem I encountered is about doing SOAP throught HTTPS.</p>
</div>
<div class="post-text" itemprop="text">
<p>You missed out <a href="http://omniorb.sourceforge.net/" rel="nofollow" title="OmniORB">omniORB</a>.  This is a pretty full CORBA implementation, so you can also use it to talk to other languages that have CORBA support.</p>
</div>
<span class="comment-copy">It really depends on the context. Internet? LAN? Website? Distributed computation? Quick prototype? Bandwidth? Size of messages?</span>
<span class="comment-copy">@silentghost : done. I prefer not to set "community wiki" by default, because sometimes, I am wrong :) @ddaa : Any. I am asking about RPC in general terms, if they have some pros/cons in specific contexts, please add them to the list.</span>
<span class="comment-copy">I had the need to do "real" RPC a little while ago (The RFC 1050 kind) and the choices then didn't impress much, so I ended up having to do most of it myself. If anyone has a good alternative to that, I'd like to hear about it.</span>
<span class="comment-copy">For those wanting Python-to-Python RPC - PyRo 4 latest version doesn't support SSL, but PyRo 3 still does - both are all-Python so they support Python 2, Python 3, PyPy, Jython, and IronPython.  RPyc does support SSL, while Circuits doesn't mention this.</span>
<span class="comment-copy">+1 to XML-RPC for simplicity, even accounting that SimpleXMLRPCServer lacks proper error handling.</span>
<span class="comment-copy">"Warning The xmlrpc.server module is not secure against maliciously constructed data.", so it has some pretty limited usecases.</span>
<span class="comment-copy">@Equidamoid  If you need to parse untrusted or unauthenticated data see <a href="https://docs.python.org/2/library/xml.html#xml-vulnerabilities" rel="nofollow noreferrer">docs.python.org/2/library/xml.html#xml-vulnerabilities</a></span>
<span class="comment-copy">Thrift does not support Python 3 is not supported yet, that's a shame</span>
<span class="comment-copy">Having used most of the SOAP frameworks and implemented one for doing reflection based RPC myself, my advice is simple - don't do that. If you don't need cross language communication + independent interface descriptions + mapping to custom classes, the complexity of SOAP will only be a headache. Even if you do need to use it, you'll need the experience to know what subset of SOAP is safe to use.</span>
<span class="comment-copy">SOAP is nightmare in general and especially in Python. Don't use it unless you are forced to.</span>
<span class="comment-copy">My limited experience with SOAP agrees with the other comments here. xmlrpc often does everything I need.</span>
