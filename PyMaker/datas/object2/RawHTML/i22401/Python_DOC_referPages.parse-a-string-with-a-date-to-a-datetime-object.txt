<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/466345/converting-string-into-datetime">Converting string into datetime</a>
<span class="question-originals-answer-count">
                    21 answers
                </span>
</li>
</ul>
</div>
<p>How can I parse a string like "01-Jan-1995" to a Python <code>datetime</code> object?</p>
</div>
<div class="post-text" itemprop="text">
<p>On the whole you'd parse date and time strings with the <code>strptime</code> functions in <code>time</code> or <code>datetime</code> modules. Your example could be parsed with:</p>
<pre><code>import datetime
datetime.datetime.strptime("01-Jan-1995", "%d-%b-%Y")
</code></pre>
<p>Note that parsing month names is locale-dependent. <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="noreferrer">This table</a> shows the directives for parsing various formats of dates and times.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://labix.org/python-dateutil" rel="nofollow noreferrer">dateutil</a> can parse this sort of format without you even having to define custom date formats. Just install it with:</p>
<pre><code>pip install python-dateutil
</code></pre>
<p>Then use it:</p>
<pre><code>import dateutil.parser
dateutil.parser.parse('01-Jan-1995').date()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you need to parse natural language date and time strings, consider <a href="https://github.com/bear/parsedatetime" rel="nofollow noreferrer">parsedatetime</a> (and <a href="https://stackoverflow.com/questions/1495487/is-there-any-python-library-for-parsing-dates-and-times-from-a-natural-language/1495548#1495548">this answer</a>).</p>
</div>
<span class="comment-copy">+1 for python-dateutil. It can even parse datestrings without you having to tell it the format.</span>
