<div class="post-text" itemprop="text">
<p>I have a program with a GUI that runs an external program through a Popen call:</p>
<pre><code>p = subprocess.Popen("&lt;commands&gt;" , stdout=subprocess.PIPE , stderr=subprocess.PIPE , cwd=os.getcwd())
p.communicate()
</code></pre>
<p>But a console pops up, regardless of what I do (I've also tried passing it NUL for the file handle). Is there any way to do that without getting the binary I call to free its console?</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="http://code.activestate.com/recipes/409002/" rel="noreferrer">here</a>:</p>
<pre><code>import subprocess

def launchWithoutConsole(command, args):
    """Launches 'command' windowless and waits until finished"""
    startupinfo = subprocess.STARTUPINFO()
    startupinfo.dwFlags |= subprocess.STARTF_USESHOWWINDOW
    return subprocess.Popen([command] + args, startupinfo=startupinfo).wait()

if __name__ == "__main__":
    # test with "pythonw.exe"
    launchWithoutConsole("d:\\bin\\gzip.exe", ["-d", "myfile.gz"])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This works nicely in the win32api. The other solutions were not working for me. </p>
<pre><code>import win32api
chrome = "\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\""
args = "https://stackoverflow.com"

win32api.WinExec(chrome + " " + args)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>just do <code>subprocess.Popen([command], shell=True)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You might be able to just do <code>subprocess.Popen([command], shell=False)</code>.</p>
<p>That's what I use anyways.  Saves you all the nonsense of setting flags and whatnot.
Once named as a .pyw or run with pythonw it shouldn't open a console.</p>
</div>
<div class="post-text" itemprop="text">
<p>According to <a href="https://docs.python.org/2/library/subprocess.html" rel="nofollow noreferrer">Python 2.7 documentation</a> and <a href="https://docs.python.org/3/library/subprocess.html#subprocess.CREATE_NO_WINDOW" rel="nofollow noreferrer">Python 3.7 documentation</a>, you can influence how <code>Popen</code> creates the process by setting <code>creationflags</code>. In particular, the <code>CREATE_NO_WINDOW</code> flag would be useful to you.</p>
<pre><code>variable = subprocess.Popen(
   "CMD COMMAND", 
   stdout = subprocess.PIPE, creationflags = subprocess.CREATE_NO_WINDOW
)
</code></pre>
</div>
<span class="comment-copy">Are these commands that would normally be run in a console? Are you trying to run another GUI program that does not have a console?</span>
<span class="comment-copy">Aha! Thanks. I didn't even notice that option in there...</span>
<span class="comment-copy">What <code>pyw</code> file? He needs to run an external application.</span>
<span class="comment-copy">This works like a charm. You don't need a <code>.pyw</code> file.</span>
<span class="comment-copy">shell=False is already the default, so I don't see what this is going to fix: <a href="https://docs.python.org/2/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">docs.python.org/2/library/subprocess.html#subprocess.Popen</a></span>
<span class="comment-copy"><code>shell = False</code> will not change anything, the solution is to use <code>shell = True</code> with a <code>.pyw</code> file.</span>
<span class="comment-copy">Can you explain <i>why</i> this solves the problem? Thanks!</span>
