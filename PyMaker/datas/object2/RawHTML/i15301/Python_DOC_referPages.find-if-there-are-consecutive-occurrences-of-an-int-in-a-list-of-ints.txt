<div class="post-text" itemprop="text">
<p>I am working on a <a href="http://codingbat.com/prob/p119308" rel="nofollow">Python online exercise</a>.</p>
<p>The task is to:</p>
<pre>
Given an array of ints, return True if the array contains a 2 next to a 2 somewhere.

    has22([1, 2, 2]) → True
    has22([1, 2, 1, 2]) → False
    has22([2, 1, 2]) → False
</pre>
<p>The code I got so far:</p>
<pre><code>def has22(nums):
  for i in range (len(nums)-1):
    if nums[i+1]==2 and nums[i]==2:
      return True
      break
</code></pre>
<p>will return all the <code>True</code> instances, but I cannot think of a way to include statement for the <code>False</code> instances (I would like to stick to a control flow solution). Any suggestions?</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need break after return statement, and you just need to add "return False" statement inside your for loop</p>
<pre><code>def has22(nums):
   for i in range (len(nums)-1):
    if nums[i+1]==2 and nums[i]==2:
     return True
   return False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simplify your function by using <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="nofollow">generator expression</a>:</p>
<pre><code>def has22(nums):
    return any(nums[i+1] == nums[i] == 2 for i in range(len(nums)-1))
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; def has22(nums):
...     return any(nums[i+1] == nums[i] == 2 for i in range(len(nums)-1))
...
&gt;&gt;&gt; has22([1, 2, 2])
True
&gt;&gt;&gt; has22([1, 2, 1, 2])
False
&gt;&gt;&gt; has22([2, 1, 2])
False
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">Your code works. But as I undertastand it, the for loop and the return False statemnt are at the same level (not the return False inside the loop). When the function is called, it starts the for loop, looks at the if statement, if the condition is met anywhere in the range defined, it returns True, if not it does nothing, and goes onto the next statement, returning False. Is that correct?</span>
<span class="comment-copy">Yes you are right, if the "loop" doesn't find elements that meet condition - it "runs" next statement - return False</span>
<span class="comment-copy">mmm, I like the idea but even though any is built-in, this online exercise does not seem to accept it. Error message is:     Compile problems: Error:'any' is not defined</span>
<span class="comment-copy">Must be using python 2.4 or earlier.</span>
