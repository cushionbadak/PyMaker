<div class="post-text" itemprop="text">
<p>I am trying to find</p>
<pre><code>f = "[[[someword_1234]]]"
</code></pre>
<p>inside</p>
<pre><code>s = "weifjwieufh weifuwiefuhw ejfwi eujfh iwueh fiwe [[[someword_1234]]]"
</code></pre>
<p>but the literal <code>someword_1234</code> inside triple square brackets can change. So I cannot do: </p>
<pre><code>s.find(f)
</code></pre>
<p>how can I approach this? </p>
</div>
<div class="post-text" itemprop="text">
<p>Since you need to match a <em>pattern</em> rather than static text, you should use the <code>re</code> module.  Specifically, you are looking for <a href="https://docs.python.org/3/library/re.html#re.search"><code>re.search</code></a>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = "weifjwieufh weifuwiefuhw ejfwi eujfh iwueh fiwe [[[someword_1234]]]"
&gt;&gt;&gt; re.search(r'\[\[\[[^\]]+\]\]\]', s).group()
'[[[someword_1234]]]'
&gt;&gt;&gt;
</code></pre>
<p>Below is an explanation of what the pattern matches:</p>
<pre><code>\[\[\[  # [[[
[^\]]+  # One or more characters that are not ]
\]\]\]  # ]]]
</code></pre>
<p>Note that you need to escape <code>[</code> and <code>]</code> since they have special meaning in a Regex pattern.</p>
</div>
<span class="comment-copy">wow, i knew that python can do anything! thanks in tons</span>
<span class="comment-copy">Instead of <code>[^\]]+</code> you can use a non-greedy qualifier: <code>.+?</code></span>
<span class="comment-copy">@augurar - That works too.  However, it is generally slower because the parser needs to backtrack in order to match its pattern.  Using <code>[^\]]+</code> lets it get everything in one run.  You should always try to use negated character sets over non-greedy qualifiers to improve performance.</span>
