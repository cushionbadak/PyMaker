<div class="post-text" itemprop="text">
<p>I've learned exception 'catching' on one in python</p>
<pre><code>while True:

  try:

    int(input("Enter a number: ")
    break

  except ValueError:

    print("That isn't a number")
    continue
</code></pre>
<p>If I had a lot of user_inputs in a piece of code it would look like I don't know what I'm doing (which I don't fully)</p>
<p>Is there an easier, less 'disgusting' way of doing this.  If so, how?</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually, using <code>try/except</code> for this task is idiomatic in Python because it follows <a href="https://docs.python.org/3/glossary.html#term-eafp" rel="nofollow">EAFP</a>.  The only problem is that you are writing the same input-gathering code for each input.</p>
<p>You can make your code reusable by putting it in a <a href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions" rel="nofollow">function</a>:</p>
<pre><code>def get_int():
    while True:
      try:
          return int(input("Enter a number: "))
      except ValueError:
          print("That isn't a number")
</code></pre>
<p>Now, whenever you need to get an input from the user, you can just call the function:</p>
<pre><code>int_1 = get_int()
int_2 = get_int()
</code></pre>
<hr/>
<p>You can even make it so that the <code>get_int</code> function accepts a custom prompt for each input:</p>
<pre><code>def get_int(prompt):
    while True:
      try:
          return int(input(prompt))
      except ValueError:
          print("That isn't a number")
</code></pre>
<p>This allows you to make your program more intuitive.  For example:</p>
<pre><code>height = get_int('Please enter a height: ')
width = get_int('Please enter a width: ')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="http://en.wikipedia.org/wiki/Python_%28programming_language%29" rel="nofollow"><strong>here</strong></a>;</p>
<blockquote>
<p>Python is a widely used general-purpose, high-level programming
  language.Its design philosophy emphasizes code
  <strong>readability</strong>, and its syntax allows programmers to express concepts in
  fewer lines of code than would be possible in languages such as C++ or
  Java.The language provides constructs intended to enable
  clear programs on both a small and large scale.</p>
<p>The core philosophy of the language is summarized by the document "PEP
  20 (The Zen of Python)", which includes aphorisms such as:</p>
<p>Beautiful is better than ugly </p>
<p>Explicit is better than implicit </p>
<p>Simple is better than complex</p>
<p>Complex is better than complicated</p>
<p>Readability counts</p>
</blockquote>
<p>So don't rush, first complete tutorials and learn the basic, you'll see Python is the most 'clear' and less 'disgusting' language.</p>
</div>
<span class="comment-copy"><code>continue</code> just let you skip the rest of the current iteration; but it is already at the end, so it is not needed. Other than that, it's not so disgusting in my opinion...</span>
<span class="comment-copy">What i mean by 'disgusting' is that i would have to rewrite what is literally the same thing over and over again, which looks like im using copy &amp; paste over and over again</span>
<span class="comment-copy">thats what functions are for</span>
<span class="comment-copy">"Same thing over and over again" leads to the language-independent concept of packaging up code into functions. See iCodez's answer. It's not Python-specific by any means.</span>
<span class="comment-copy">Unlike forum sites, we don't use "Thanks", or "Any help appreciated", or signatures on <a href="https://stackoverflow.com">Stack Overflow</a>. See "<a href="http://meta.stackexchange.com/questions/2950/should-hi-thanks-taglines-and-salutations-be-removed-from-posts">Should 'Hi', 'thanks,' taglines, and salutations be removed from posts?</a>.</span>
<span class="comment-copy">nice reusable approach +1</span>
