<div class="post-text" itemprop="text">
<p>I am having trouble understanding the background assumptions for reading Python documentation.</p>
<p>An example: Documentation for the <code>importlib.import_module</code> function can be found at <a href="https://docs.python.org/3/library/importlib.html#importlib.import_module" rel="nofollow">https://docs.python.org/3/library/importlib.html#importlib.import_module</a>. The function documentation does not specify a return value for the function, but it (maybe obviously) returns the module it has just loaded.</p>
<p>I feel like there are actually a lot of functions for which the return value is not specified. I'm trying to decide which of the following options is closest to the truth.</p>
<ol>
<li>The documentation of this function happens to be incomplete. Don't be so paranoid.</li>
<li>Whenever there is no specified return value, the function is assumed to be sufficiently auto-documenting that you can work it out. Just assign a name to the return value: <code>foo = f(bar)</code> and then <code>print(foo)</code>.</li>
<li>There is a conventional way of knowing what the return value is, and I need to learn the convention.</li>
</ol>
<p>Case 3 is obviously the one that really worries me!</p>
<p>Any advice would be much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/importlib.html#importlib.import_module" rel="nofollow">documentation for <code>import_lib.import_module()</code></a> says what it returns.</p>
<blockquote>
<p>The most important difference is that import_module() returns the
  specified package or module (e.g. pkg.mod), while _ _import__() returns
  the top-level package or module (e.g. pkg).</p>
</blockquote>
<p>Generally speaking: The documentation might be incomplete in places, if it is, do not assume it's a convention you know nothing about.</p>
</div>
<span class="comment-copy">1).  Any good documentation should state the return value on the initial lines, either with the return value to the left of the function, or with <code>Returns:</code> outdented,  then discuss what the arguments are.  Unfortunately, the people who are good programmers tend to be complete idiots in regards to explaining their inventions.  However, you should be thankful: the python docs are 10 times better than the ruby docs.</span>
<span class="comment-copy">@7stud So you're saying Ruby programmers are more good than Python programmers?</span>
<span class="comment-copy">Obviously I failed here. As mentioned by 7stud, I was expecting to see the return value in a more highlighted position, but should have read more carefully through the whole thing. Anyway, thanks for your patience.</span>
<span class="comment-copy">No worries. I too would prefer a formalized description for arguments and the return value in the Python documentation. At least in this case, reading the text gives you some knowledge about a different way how you can solve your problem.</span>
<span class="comment-copy">@Downvoter, care to explain what I did wrong?</span>
