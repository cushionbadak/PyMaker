<div class="post-text" itemprop="text">
<p>Alright, I want to know how to delay a portion of a program without pausing the entire program.
I'm not necessarily good at python so if you could give me a relatively simple answer if possible, that would be great.</p>
<p>I want to have a turtle draw a circle on screen every time this function is called, this is what I have:</p>
<pre><code>import time
from random import randint
turtle5 = turtle.Turtle()    

coinx = randint(-200, 200)
coiny = randint(-200, 200)

turtle5.pu()
turtle5.goto(coinx, coiny)
turtle5.pd()
turtle5.begin_fill()
turtle5.fillcolor("Gold")
turtle5.circle(5, 360, 8)
turtle5.end_fill()
time.sleep(1)
turtle5.clear()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is <a href="https://docs.python.org/3/library/turtle.html#turtle.ontimer" rel="nofollow"><code>turtle.ontimer()</code></a> that calls a function with the specified delay:</p>
<pre><code>turtle.ontimer(your_function, delay_in_milliseconds)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to put the part of the program you want to delay in its own thread, and then call sleep() in that thread.</p>
<p>I am not sure exactly what you are trying to do in your example, so here is a simple example:</p>
<pre><code>import time
import threading

def print_time(msg):
    print 'The time %s is: %s.' % (msg, time.ctime(time.time()))

class Wait(threading.Thread):
    def __init__(self, seconds):
        super(Wait, self).__init__()
        self.seconds = seconds
    def run(self):
        time.sleep(self.seconds)
        print_time('after waiting %d seconds' % self.seconds)

if __name__ == '__main__':
    wait_thread = Wait(5)
    wait_thread.start()
    print_time('now')
</code></pre>
<p>Output:</p>
<pre><code>The time now is: Mon Jan 12 01:57:59 2015.
The time after waiting 5 seconds is: Mon Jan 12 01:58:04 2015.
</code></pre>
<p>Notice that we started the thread that will wait 5 seconds first, but it did not block the print_time('now') call, rather it waited in the background.</p>
<p><strong>EDIT:</strong></p>
<p>From J.F. Sebastian's comment, the simpler solution with threading is:</p>
<pre><code>import time
import threading

def print_time(msg):
    print 'The time %s is: %s.' % (msg, time.ctime(time.time()))

if __name__ == '__main__':
    t = threading.Timer(5, print_time, args = ['after 5 seconds'])
    t.start()
    print_time('now')
</code></pre>
</div>
<span class="comment-copy">Which function? There is no function in the code you posted.</span>
<span class="comment-copy"><code>Alright</code>, you have to be more specific.</span>
<span class="comment-copy">You say you want to "delay a portion of a program without pausing the entire program."  OK, so what will your program do during the delay time, when it's <i>not</i> drawing the turtle?</span>
<span class="comment-copy">You don't need a custom thread subclass here. There is <code>threading.Timer</code>. You could avoid creating threads in a GUI (like <code>turtle</code>), networking code. See <a href="http://stackoverflow.com/a/14040516/4279">Postponing functions in python</a></span>
