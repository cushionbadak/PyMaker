<div class="post-text" itemprop="text">
<p>I need to be able to do this in a way that I can pass the format specification to the <code>fmt</code> parameter in numpy.savetxt(). I want to:</p>
<ol>
<li>Take a float</li>
<li>Pad with zeros</li>
<li>Right align the number</li>
<li>Truncate to 8 digits with 3 decimal places (including negative signs)</li>
</ol>
<p>I tried this:</p>
<p><code>'{:0&gt;8}'.format('%.3f')</code></p>
<p>which I am passing to the numpy.savetxt() function but it is not able to truncate the values to the specified width of 8 digits.</p>
<p>for example:</p>
<pre><code>import numpy as np
arr = np.random.random(10,10)*10
np.savetxt("testfile.txt", arr, fmt='{:0&gt;8}'.format('%.3f')), delimiter='')
</code></pre>
<p>gives the output:</p>
<pre><code>0000-11.54900006.870000021.8620000-0.3420000-20.55700005.5390000-2.343000012.1160000-8.949000012.097
00002.1510000-8.29800004.4310000-6.1050000-4.2280000-11.462000019.7120000-10.29800006.848000013.074
0000-0.536000010.8160000-10.329000011.328000017.5580000-2.83200007.795000012.10400001.834000011.550
0000-2.6060000-10.25000008.5310000-6.839000010.7350000-15.7570000-0.274000011.17500000.9940000-7.971
000022.6050000-1.4860000-2.37000000.806000010.3560000-8.86100002.430000018.6110000-3.1820000-5.281
000022.0720000-7.299000018.0320000-2.556000010.4690000-1.21900006.23900006.3840000-8.1560000-10.781
0000-2.0590000-4.8680000-22.31700005.0220000-9.5820000-2.873000021.6050000-0.9110000-9.7050000-4.920
0000-8.4410000-4.061000023.6880000-2.7050000-0.5700000-3.4070000-10.48900005.1820000-2.32500000.581
000016.9450000-19.11100002.955000018.28900000.62500003.34200003.1910000-14.7660000-4.93600002.139
000016.1390000-1.58100002.095000032.02800006.63900002.07300006.3080000-12.91900001.42500001.447
</code></pre>
<p>So obviously the values are not being truncated properly as each line should be the same length and each column should be fixed width essentially.</p>
<p>How can I modify that format specifier being passed to the <code>fmt</code> parameter of numpy's savetxt function to get the desired result?</p>
</div>
<div class="post-text" itemprop="text">
<p>The expression <code>'{:0&gt;8}'.format('%.3f')</code> is evaluated immediately before <code>savetxt</code> ever gets a chance to even look at it.  This means what <code>savetxt</code> sees from <em>its perspective</em> is simply the string <code>'0000%.3f'</code>, which doesn't do what you want.</p>
<p>After looking at the <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.savetxt.html" rel="nofollow">various</a> <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow">docs</a> on the format specification, I think using <code>fmt='%09.3f'</code> should give you the results that you want.  To dissect this:</p>
<ul>
<li>The <code>0</code> means it's zero-padded.</li>
<li>The <code>9</code> means there are 9 characters (since <code>.</code> requires an extra character).</li>
<li>The <code>.3</code> means there are 3 decimal places.</li>
<li>Lastly, the <code>f</code> specifies decimal notation (as opposed to scientific or other kinds of notation).</li>
</ul>
<p>Floating-point numbers are padded to the right by default so there's no need to worry about that.</p>
</div>
<span class="comment-copy">I don't think <code>'{:0&gt;8}'.format('%.3f')</code> does what you think it does.  The <code>format</code> function is called immediately and you end up passing the string <code>'0000%.3f'</code> to <code>savetxt</code>, which is probably not what you intended.</span>
<span class="comment-copy">Does using <code>fmt='%09.3f'</code> gives you the result you want?</span>
<span class="comment-copy">Yup! I just tried something similar as you posted but your answer gives the right number of digits as well. If you post an answer and explain I think it will be helpful. Thanks!</span>
