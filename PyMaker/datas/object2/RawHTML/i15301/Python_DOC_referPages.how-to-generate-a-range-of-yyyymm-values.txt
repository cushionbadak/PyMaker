<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/10688006/generate-a-list-of-datetimes-between-an-interval">Generate a list of datetimes between an interval</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I have two yyyymm values that will be input by a user:</p>
<pre><code>yyyymm_1 = '201406'
yyyymm_2 = '201501'
</code></pre>
<p>I want to be able to iterate through this range in increasing month order:</p>
<pre><code>for yyyy and mm in the range of yyyymm_1 to yyyymm_2
    my_function( yyyy, mm )
</code></pre>
<p>How can this be done in python?</p>
<hr/>
<p><strong>Update:</strong> </p>
<p>Ideally, the solution should be as simple as possible without requiring external libraries.  I'm not looking for a generic date manipulation solution, but a solution to answer the specific question I have asked above.</p>
<p>I had seen lots of generic solutions before posting my question.  However, being a python noob, couldn't see how to adapt them to my question:</p>
<ul>
<li><a href="https://stackoverflow.com/questions/10688006/generate-a-list-of-datetimes-between-an-interval-in-python">Generate a list of datetimes between an interval</a></li>
<li><a href="https://stackoverflow.com/questions/1060279/iterating-through-a-range-of-dates-in-python/1060352#1060352">Iterating through a range of dates in Python</a></li>
</ul>
<p>On that note, the other questions linked to from this page are much more generic.  If you are looking to generate a range of yyyymm values, I urge you to look at the selected answer on this page.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's another rather simple variant, without even using <code>datetime</code>. Just split the date, calculate the 'total month', and iterate.</p>
<pre><code>def to_month(yyyymm):
    y, m = int(yyyymm[:4]), int(yyyymm[4:])
    return y * 12 + m

def iter_months(start, end):
    for month in range(to_month(start), to_month(end) + 1):
        y, m = divmod(month-1, 12)  # ugly fix to compensate
        yield y, m + 1              # for 12 % 12 == 0

for y, m in iter_months('201406', '201501'):
    print y, m
</code></pre>
<p>Output:</p>
<pre><code>2014 6
2014 7
...
2014 12
2015 1
</code></pre>
<p>For output in the same <code>yyyymm</code> format, use <code>print("%d%02d" % (y, m))</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this using the builtin <a href="https://docs.python.org/3/library/datetime.html#module-datetime" rel="nofollow"><code>datetime</code></a> module and the third party package <a href="https://labix.org/python-dateutil" rel="nofollow"><code>dateutil</code></a>.</p>
<p>The code first converts your strings to <code>datetime.datetime</code> objects using <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow"><code>datetime.datetime.strptime</code></a>. It then uses the <a href="https://labix.org/python-dateutil#head-ba5ffd4df8111d1b83fc194b97ebecf837add454" rel="nofollow"><code>relativedelta</code></a> function from <code>dateutil</code> to create a period of one month that can be added to your datetimes.</p>
<p>Within the <code>while</code> loop you can either work with the <code>datetime</code> objects directly, or construct the month and year as strings using <code>strftime</code>, I've shown an example of both in print functions.</p>
<pre><code>import datetime as dt
from dateutil.relativedelta import relativedelta

yyyymm_1 = '201406'
yyyymm_2 = '201501'

MONTH = relativedelta(months=+1)

fmt = '%Y%m'
date_1 = dt.datetime.strptime(yyyymm_1, fmt).date()
date_2 = dt.datetime.strptime(yyyymm_2, fmt).date()

d = date_1

while d &lt;= date_2:
    print(d)
    print(d.strftime('%Y'), d.strftime('%m'))

    d += MONTH
</code></pre>
</div>
<span class="comment-copy">What did you try? By the way, a <a href="https://stackoverflow.com/q/28035042/2476444">question similar to this one</a> popped up less than 2 days ago. Did you search for similar questions based on the keywords?</span>
<span class="comment-copy"><a href="http://stackoverflow.com/a/1060352/1673391">stackoverflow.com/a/1060352/1673391</a></span>
<span class="comment-copy">This question and the selected answer is clearly different to the other question and answers.  This question is specifically asking how to generate a set of yyyy and mm values from yyyy mm date ranges.  I could not find any questions that are asking the same as this question.</span>
<span class="comment-copy">They look pretty much the same to me, Chris. In what way would you say they differ?</span>
<span class="comment-copy">There are different level of abstraction.  I am working with yyyymm values whereas the other questions mostly are at the level of yyyymmdd.  Some of the questions allow you to provide an interval value, e.g. days, but this doesn't translate easily when you have months having different numbers of days.  One solution uses datetime.timedelta that doesn't seem to support months: <a href="https://docs.python.org/2/library/datetime.html#datetime.datetime" rel="nofollow noreferrer">docs.python.org/2/library/datetime.html#datetime.datetime</a></span>
<span class="comment-copy">The months are zero based with this solution, how can they be one based?</span>
<span class="comment-copy">@ChrisSnow Whops, you are right, I missed that. Should be fixed now.</span>
