<div class="post-text" itemprop="text">
<p>My task is to produce a code that greets the user and asks their name  storing their name as <code>username</code>. Then generates 2 random numbers and an operation. The question is asked to the user. After that it checks if the users answer is correct or not also adding <code>1</code> to <code>questionsAsked</code>. If it is correct, <code>1</code> is added to <code>correctAnswers</code>. If it is incorrect, the user is told so with the correct answer. The program should end after 10 questions (hence the <code>while questionAsked &gt; 11</code>). The user should be given their <code>username</code> and how many questions they got correct.</p>
<p>My problem is when I run the code,it comes up with <code>NameError: name 'questionAsked' is not defined</code>. I'm struggling to work out how else I could define <code>questionAsked</code>.</p>
<p>Here is what I've done so far:</p>
<pre><code>import random
import math

def test():
    Username=input("What is your name?")
    print ("Welcome"+Username+" to the Arithmetic quiz")

    num1=random.randint(1, 10)
    num2=random.randint(1, 10)

    Ops = ['+','-','*']
    Operation = random.choice(ops)

    num3=int(eval(str(num1) + operation + str(num2)))

    print("What is" +" "+str(num1) + operation +str (num2,"?"))
    userAnswer= int(input("Your answer:"))
    if userAnswer != num3:
        print("Incorrect. The right answer is"+" "+(num3))
        return False

    else:
        print("correct")
        return True

correctAnswers=0
questionsAsked=0
while questionAsked &gt; 11:
    if test () == True: 
        questionsAnswered +=1
        correctAnswers +=1
    if test () == False: 
       questionsAnswered +=1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a test <code>while questionAsked &gt; 11</code> but don't use that name anywhere else in your code. You certainly never defined it. You probably wanted to test <em><code>questionsAsked</code></em> (with an <code>s</code>)  instead.</p>
<p>There are other problems, however. The loop should continue while you have <strong>fewer</strong> than 11 questions asked, not more. You also call <code>test()</code> twice, you should only call it once each loop. In your loop you use <em><code>questionsAnswered</code></em> but never defined that either and don't increment <code>questionsAsked</code>; you probably meant to increment the latter:</p>
<pre><code>correctAnswers=0
questionsAsked=0
while questionsAsked &lt; 10:
    if test():
        correctAnswers +=1
    questionsAsked +=1
</code></pre>
<p>Now <code>test()</code> is only called the once. Both your branches incremented <code>questionsAsked</code>, I moved that out of the tests, and now you no longer need to check if the test failed.</p>
<p>Since you start counting at <em>zero</em>, you want to test for <code>&lt; 10</code>, not <code>11</code>.</p>
<p>Instead of a <code>while</code> loop, you could use a <code>for</code> loop using the <code>range()</code> function:</p>
<pre><code>for question_number in range(10):
    if test():
        correctAnswers +=1
</code></pre>
<p>Now the <code>for</code> loop takes care of counting the number of questions asked, and you no longer need to increment a variable manually.</p>
<p>Next, you need to move the <code>username</code> handling <em>out</em> of the <code>test()</code> function. You don't need to ask the user for their name each time. Ask for the name once, before the loop, so that you can access the user's name after the 10 questions:</p>
<pre><code>def test():
    num1=random.randint(1, 10)
    num2=random.randint(1, 10)
    # ... etc.


Username = input("What is your name?")
print("Welcome", Username, "to the Arithmetic quiz")

correctAnswers = 0
for question_number in range(10):
    if test():
        correctAnswers +=1

# print the username and correctAnswers 
</code></pre>
<p>You need to be careful about your names in the <code>test()</code> function too; you define the names <code>Ops</code> and <code>Operation</code> but try to use them as <code>ops</code> and <code>operation</code> instead. That won't work, you need to use the same case everywhere to refer to those names. The <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow">Python style guide</a> recommends you use all lowercase with underscores for local names, to distinguish them from class names (which use CamelCase, initial uppercase letters and no spaces between words).</p>
<p>Next problem: you are using <code>str()</code> with two arguments here:</p>
<pre><code>print("What is" +" "+str(num1) + operation +str (num2,"?"))
</code></pre>
<p>That won't work; a two-argument <code>str()</code> call is meant for decoding bytes to a Unicode string.</p>
<p>Rather than use string concatenation, just pass your values to <code>print()</code> as separate arguments. The function will take care of converting things to strings and adds spaces between separate arguments for you:</p>
<pre><code>print("What is", num1, operation, num2, "?")
</code></pre>
<p>Now there will be a space between <code>num2</code> and the <code>"?"</code> but that is not that big a problem. You can use the <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>str.format()</code> method</a> to create a string with placeholders where arguments to the method are filled in for you, again converting to strings automatically. This allows you to control spaces more directly:</p>
<pre><code>print("What is {} {} {}?".format(num1, operation, num2))
</code></pre>
<p>The three arguments are placed where each <code>{}</code> appears, in order.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have many discrepancies in variable names and indentation. Remember Python is case sensitive. And by the way, the condition in your while loop will cause your program not to ask any questions.</p>
<p>So for example, you created a list of operations called <code>Ops</code> and then used the random module to select an operation from <code>ops</code>. Python will inevitably throw an error, as <code>ops</code> is not actually defined. Instead, you should use <code>Ops</code> because that is the variable you actually declared, with a capital letter. Again, Python is case sensitive. </p>
<p>Likewise, Python recognizes a difference between <code>questionAsked</code> and <code>questionsAsked</code>. It's one or the other, so choose a name and be consistent.  </p>
</div>
<span class="comment-copy">Question: What's the difference between <code>questionsAsked</code> and <code>questionAsked</code>?</span>
<span class="comment-copy">Presumably you have code in the <code>test()</code> function. If so, <i>indent it correctly</i>.</span>
<span class="comment-copy">Also, why are you calling <code>test()</code> <b>twice</b>? Instead use <code>if test():</code> (no need to test for <code>== True</code>, that is what <code>if</code> is <i>for</i>), and <code>else:</code>.</span>
<span class="comment-copy">By removing <code>== False</code> you made your while loop tests incorrect; now you ask the question twice but not increment <code>correctAnswers</code> in the second case. :-) Please don't alter your code based on feedback; that way answers become incorrect. I've reinstated the boolean equality tests to keep the record straight.</span>
<span class="comment-copy">Please don't edit your original question to fix the code based on feedback in answers; that invalidates the answers you received. Fix your own code on your own computer, sure, but don't change the question to effectively ask something different.</span>
<span class="comment-copy">Does that mean I no longer need the 'questionsAsked' anymore?</span>
<span class="comment-copy">or have:correctAnswers=0 questionsAsked=0</span>
<span class="comment-copy">@user3650299: the <code>for</code> loop no longer uses that variable; it simply counts up. You don't need to report to the user how many questions you asked, you'll always ask 10 if you need that number. My sample code did omit <code>correctAnswers</code>, that's my fault.</span>
<span class="comment-copy">Thank you so much for the help so far. After running the code this is what I get:What is your name?saj Welcome saj to the Arithmetic quiz Traceback (most recent call last):   File "C:\Users\Armughan\Downloads\code123 (1).py", line 28, in &lt;module&gt;     if test():   File "C:\Users\Armughan\Downloads\code123 (1).py", line 8, in test     Operation = random.choice(ops) NameError: global name 'ops' is not defined</span>
<span class="comment-copy">What does it mean by 'ops' not being defined?</span>
<span class="comment-copy">The OP made no case sensitivity errors. They may have gotten confused with the names used, but case has nothing to do with it. The remainder of your answer, while true, is not really helpful, and could have been left as a comment instead (if you had the required rep).</span>
<span class="comment-copy">What do you mean? There is a clear difference between <code>Operation</code> and <code>operation</code> in Python.</span>
<span class="comment-copy">Yes, there is. Python <i>is</i> case sensitive, true. But none of the mistakes in the code posted by the OP are to do with getting the case wrong. It's like saying that you cannot use spaces in Python identifiers. That's true too, but that doesn't mean it is <i>relevant here</i>.</span>
<span class="comment-copy">And now I'll have to eat my words. There is <i>one</i> such mistake, <code>ops</code> vs. <code>Ops</code>. But that was not what the original error was about. I do stand by my opinion that your answer is <i>not helpful</i>, because it doesn't help the OP correct the mistakes. Where are the explanations about what names were wrong, and how to correct them?</span>
<span class="comment-copy">Yes, but the concept of case sensitivity is relevant to the discrepancies in variable naming. The difference between <code>Operation</code> and <code>operation</code> is the same as the difference between <code>questionAsked</code> and <code>questionsAsked</code>. The OP must understand both these errors.</span>
