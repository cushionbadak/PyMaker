<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/tutorial/introduction.html#strings" rel="nofollow noreferrer">The Python tutorial</a> explains slice behavior when indices are negative, but I can't find documentation describing the behavior when the end index precedes the start index. (I've also looked at <a href="https://stackoverflow.com/questions/509211/explain-pythons-slice-notation">Explain Python's slice notation</a>, and perhaps I'm not reading carefully enough, but the answers there don't seem to address this point.)</p>
<p>The behavior that I observe is that an empty list is returned, which seems reasonable to me.  However, it also would seem reasonable to me for this to return a list of items between <code>i</code> and <code>j</code> in reversed order or to simply raise an exception.</p>
<p>Is <code>list[i:j]</code> guaranteed to be an empty list if <code>list[j]</code> precedes <code>list[i]</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, if <code>j &lt;= i</code> is true, the resulting slice is empty, for <em>standard Python types</em>. To get the results in reverse order, you need to add a negative stride:</p>
<pre><code>list[i:j:-1]
</code></pre>
<p>because <em>explicit is better than implicit</em>.</p>
<p>This is documented in <a href="https://docs.python.org/3/library/stdtypes.html#common-sequence-operations"><em>Common Sequence Operations</em></a>, footnote 4:</p>
<blockquote>
<p>The slice of <em>s</em> from <em>i</em> to <em>j</em> is defined as the sequence of items with index <em>k</em> such that <code>i &lt;= k &lt; j</code>. If <em>i</em> or <em>j</em> is greater than <code>len(s)</code>, use <code>len(s)</code>. If <em>i</em> is omitted or <code>None</code>, use <code>0</code>. If <code>j</code> is omitted or <code>None</code>, use <code>len(s)</code>. <strong>If <em>i</em> is greater than or equal to <em>j</em>, the slice is empty.</strong></p>
</blockquote>
<p>Bold emphasis mine.</p>
<p>Custom types are free to interpret this differently.</p>
</div>
<span class="comment-copy">Ah, <i>that's</i> where it's mentioned in the Python documentation.  Exactly what I was looking for.</span>
<span class="comment-copy">What do you mean with the italic "for standard Python types"?</span>
<span class="comment-copy">@bamboon: handling of slices is type specific. The <code>list</code>, <code>tuple</code>, <code>str</code>, <code>bytes</code> and <code>range</code> types all behave like this, but if you implement your own type your <code>__getitem__</code> method is free to handle slices differently.</span>
<span class="comment-copy">@MartijnPieters Ah ok, I thought this question was explicitly about <code>list</code>.</span>
<span class="comment-copy">@bamboon: and I am pre-emptively heading off comments along the line of <i>does this apply to strings and tuples too?</i> and <i>but project X doesn't behave like that, is that a bug?</i>.</span>
