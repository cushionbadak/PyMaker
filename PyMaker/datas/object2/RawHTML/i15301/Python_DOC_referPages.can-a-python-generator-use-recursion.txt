<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; def gen(num):
...     print "inside \n"
...     if num &lt; 10:
...         gen(num +1)
...     yield num
... 
&gt;&gt;&gt; x = gen(1)
&gt;&gt;&gt; for i in x:
...     print i
... 
inside

1
&gt;&gt;&gt; 
</code></pre>
<p>Why is inside printed only once? I thought it would get printed many more times.</p>
</div>
<div class="post-text" itemprop="text">
<p>You only created the recursive generator, you never <em>iterated over it</em>. If you don't ask a generator for values, it'll never execute.</p>
<p>Add a loop and yield the results of the recursive call:</p>
<pre><code>def gen(num):
    print "inside"
    if num &lt; 10:
        for recursive_result in gen(num + 1):
            yield recursive_result
    yield num
</code></pre>
<p>This produces:</p>
<pre><code>&gt;&gt;&gt; def gen(num):
...     print "inside"
...     if num &lt; 10:
...         for recursive_result in gen(num + 1):
...             yield recursive_result
...     yield num
... 
&gt;&gt;&gt; x = gen(1)
&gt;&gt;&gt; for i in x:
...     print i
... 
inside 
inside 
inside 
inside 
inside 
inside 
inside 
inside 
inside 
inside 
10
9
8
7
6
5
4
3
2
1
</code></pre>
<p>You are evidently using Python 2, but if you were to use Python 3.3 you can make use of <a href="https://docs.python.org/3/whatsnew/3.3.html#pep-380" rel="nofollow">generator delegation</a> and instead of looping use <a href="https://docs.python.org/3/reference/expressions.html#yieldexpr" rel="nofollow"><code>yield from</code></a>:</p>
<pre><code>def gen(num):
    print("inside")
    if num &lt; 10:
        yield from gen(num + 1)
    yield num
</code></pre>
</div>
<span class="comment-copy">To answer your title question: yes.</span>
<span class="comment-copy">It's worth noting that since 3.3, <code>yield from</code> exists to make this even easier.</span>
