<div class="post-text" itemprop="text">
<p>I've been at this for a while now, and I've gotten so close.</p>
<p>I've had two problems to complete for an assignment. The first one I finished. It's supposed to return the first three indices of the given string, and if the string is less than 3 letters, it returns nothing. It looks like this:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/oJyKl.png"/></p>
<p>The second one is similar, but a little more involved. The problem is:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/Yd1SN.png"/></p>
<p>Hopefully that explains my issue. I can't figure out how to get the inputted number to correspond to the number of indices I'm trying to print. In the first problem, it was simple, because it was always just the first three indices that were used. Now, it's (n) number of indices.</p>
<p>Any help is much appreciated (I'm using Python 3.4.2)</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://www.tutorialspoint.com/python/python_strings.htm" rel="nofollow">Strings support sub-stringing in Python</a>.</p>
<pre><code>def returnN(string, length):
    return string[:length] if len(string) &gt;= length else ''
</code></pre>
<p>In action:</p>
<pre><code>&gt;&gt;&gt; returnN('hello', 2)
'he'
&gt;&gt;&gt; returnN('hello', 5)
'hello'
&gt;&gt;&gt; returnN('BYE', 1)
'B'
&gt;&gt;&gt; returnN('BYE', 10)
''
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use len and slice method of string method like:</p>
<pre><code>def returnN(string, length):
  length_string = len(string)
  if length &gt; length_string:
    return ''
  return string[0:length]

print(returnN('hello', 5))
print(returnN('hello', 2))
print(returnN('Nye', 1))
print(returnN('OKOK', 10))
</code></pre>
<p>or simple way:</p>
<pre><code>def returnN_S(string, length):
  return string[: length] if length &lt;= len(string) else ''

print(returnN_S('hello', 5))
print(returnN_S('hello', 2))
print(returnN_S('Nye', 1))
print(returnN_S('OKOK', 10))
</code></pre>
<p>or one line way:</p>
<pre><code>returnN_H = lambda string, length: string[: length] if length &lt;= len(string) else ''
print(returnN_H('hello', 5))
print(returnN_H('hello', 2))
print(returnN_H('Nye', 1))
print(returnN_H('OKOK', 10))
</code></pre>
<p>Hope helps.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/reference/datamodel.html#index-15" rel="nofollow">Unicode strings</a> in Python are <a href="https://docs.python.org/3/glossary.html#term-immutable" rel="nofollow">immutable</a> Unicode codepoint <a href="https://docs.python.org/3/glossary.html#term-sequence" rel="nofollow">sequences</a>.<br/>
Unicode codepoint is just a number from 0 to <code>sys.maxunicode</code> e.g., <a href="http://codepoints.net/U+1f604" rel="nofollow">NÂº128516: <code>ðŸ˜„</code>(<code>'\U0001f604'</code>)</a>.<br/>
A substring/slice of a Unicode string <code>s</code> such as <code>s[:2]</code> returns a new Unicode string that contains <code>2</code> Unicode codepoints.<br/>
<code>len(s)</code> returns the number of Unicode codepoints in the string <code>s</code>.<br/>
An empty string could be represented using <code>''</code> string literal in Python source code.</p>
<hr/>
<p>To return a given number of <a href="http://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries" rel="nofollow">user-perceived characters</a> from a string or an empty string if the text size is too small, you could use <a href="http://www.unicode.org/reports/tr18/#Default_Grapheme_Clusters" rel="nofollow"><code>\X</code> regular expression (it matches an eXtended grapheme cluster)</a>:</p>
<pre><code>#!/usr/bin/env python3
import regex # $ pip install regex

def returnN(text, n):
    chars = regex.findall(r'\X', text)
    return ''.join(chars[:n]) if len(chars) &gt;= n else ''

text = 'a\u0300 biento\u0302t'
print(text) # -&gt; aÌ€ bientoÌ‚t
print(returnN(text, 4)) # -&gt; aÌ€ bi
</code></pre>
<p>A single user-perceived character such as <code>aÌ€</code> can span several Unicode codepoints such as <a href="http://codepoints.net/U+0061" rel="nofollow">U+0061</a>, <a href="http://codepoints.net/U+0300" rel="nofollow">U+0300</a>.</p>
<hr/>
<p>The term <em>character</em> is ambiguous. It can mean a byte, Unicode codepoint, grapheme cluster in different circumstances.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>input_string = "hello"

def returnN(string, n):
    return string[:n]

output = returnN(input_string, 3)
</code></pre>
<p>that's all</p>
</div>
<span class="comment-copy">How do we suppose to copy paste image into code?</span>
<span class="comment-copy">I'm not sure what you're asking exactly.</span>
<span class="comment-copy">sounds like homework to me, you could check the string-members. if you do not find anything, write a for loop to do as you please</span>
<span class="comment-copy">@Zaiborg It is homework, but I'm very new to Python and unfortunately my textbook hasn't come in the mail yet, so I'm basically left for dead with these homework problems.</span>
<span class="comment-copy">@Brian: try to read <a href="https://docs.python.org/dev/tutorial/" rel="nofollow noreferrer">the Python tutorial (it is available online and as e-book in various formats)</a>. If it is too complex for you then try <a href="http://learnpythonthehardway.org/" rel="nofollow noreferrer">Learn Python The Hard Way</a> (it is available online for free). See also <a href="https://www.python.org/about/gettingstarted/" rel="nofollow noreferrer">Python For Beginners</a> and <a href="https://wiki.python.org/moin/BeginnersGuide/NonProgrammers" rel="nofollow noreferrer">Python for Non-Programmers</a>. There are  <a href="http://stackoverflow.com/q/3088/4279">tons of resources for beginners on the internet</a>.</span>
<span class="comment-copy">Thanks! However, how would I get a return of nothing, or ' ', if the number exceeds the number of characters in the string, like in that last example in action you used?</span>
<span class="comment-copy">There you go. I didn't notice that at first, I thought that was what you were having trouble with.</span>
<span class="comment-copy">I went with @zoosuck's answer, but this was helpful! If nothing else, I'll use it to try and understand the process a bit more. Thanks :)</span>
<span class="comment-copy">This does help a lot! I went with your first example. Thanks :)</span>
<span class="comment-copy">And you can try to understand the other two for learn more things in Python.</span>
<span class="comment-copy">Will do. Thanks again.</span>
<span class="comment-copy">You don't need <code>length_string = len(string)</code> there is no cost to calling <code>len()</code> on something. There is more cost in creating and keeping a second variable just to keep that information.</span>
<span class="comment-copy">@zoosuck I think you confuse the cases <code>&lt;</code> and <code>&gt;=</code> here...</span>
<span class="comment-copy">This is incorrect if the string is shorter than n characters.</span>
<span class="comment-copy">yes you are right. we can add an if condition before return statement.       if len(string) &lt; n: print("n must be smaller than length of string")</span>
