<div class="post-text" itemprop="text">
<p>I am attempting to extract a substring that contains numbers and letters:</p>
<pre><code>string = "LINE     : 11m56.95s CPU    13m31.14s TODAY"
</code></pre>
<p>I only want 11m56.95s and 13m31.14s</p>
<p>I have tried doing this:</p>
<pre><code>re.findall('\d+', string)
</code></pre>
<p>that doesn't give me what I want, I also tried this:</p>
<pre><code>re.findall('\d{2}[m]+\d[.]+\d|\+)
</code></pre>
<p>that did not work either, any other suggestions?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your Regex pattern is not formed correctly.  It is currently matching:</p>
<pre><code>\d{2}  # Two digits
[m]+   # One or more m characters
\d     # A digit
[.]+   # One or more . characters
\d|\+  # A digit or +
</code></pre>
<p>Instead, you should use:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; string = "LINE     : 11m56.95s CPU    13m31.14s TODAY"
&gt;&gt;&gt; re.findall('\d+m\d+\.\d+s', string)
['11m56.95s', '13m31.14s']
&gt;&gt;&gt;
</code></pre>
<p>Below is an explanation of what the new pattern matches:</p>
<pre><code>\d+  # One or more digits
m    # m
\d+  # One or more digits
\.   # .
\d+  # One or more digits
s    # s
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>re.findall("[0-9]{2}[m][0-9]{2}\.[0-9]{2}[s]", string)
</code></pre>
<p>Output:</p>
<pre><code>['11m56.95s', '13m31.14s']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your current regular expression does not match what you expect it to. </p>
<p>You could use the following regular expression to extract those substrings.</p>
<pre><code>re.findall(r'\d+m\d+\.\d+s', string)
</code></pre>
<p><a href="https://regex101.com/r/cJ9cL4/2" rel="nofollow"><strong>Live Demo</strong></a></p>
<p><strong>Example</strong>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = 'LINE     : 11m56.95s CPU    13m31.14s TODAY'
&gt;&gt;&gt; for x in re.findall(r'\d+m\d+\.\d+s', s):
...     print x

11m56.95s
13m31.14s
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>\b   #word boundary
\d+  #starts with digit
.*?   #anything (non-greedy so its the smallest possible match)
s    #ends with s
\b   #word boundary
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your lines are all like your example split will work:</p>
<pre><code>s = "LINE     : 11m56.95s CPU    13m31.14s TODAY"

spl = s.split()

a,b = spl[2],spl[4]
print(a,b)
('11m56.95s', '13m31.14s')
</code></pre>
</div>
<span class="comment-copy">Thanks for the explanation makes much more sense, How do I print the results without having the brackets around the regular expression I am extracting?</span>
<span class="comment-copy">@octain - The brackets mean that the output is a list.  You could remove them by using <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join</code></a>: <code>print ', '.join(re.findall('\d+m\d+\.\d+s', string))</code>.  Of course, that is just an example; it depends on what output you want.</span>
<span class="comment-copy">I want to write the output to a file i did something like this: <code>l = re.sub(r'\d+m\d+\.\d+s', line)</code> and <code>wd0.write(str(l))</code></span>
<span class="comment-copy">Well, <code>re.sub</code> is used to replace patterns in a string.  You want to do something like: <code>for match in re.findall('\d+m\d+\.\d+s', string): wd0.write(match + '\n')</code></span>
<span class="comment-copy">I tried playing around with the other regex tools,  I will give that a try thanks again!</span>
<span class="comment-copy">Make that <code>.*</code> non-greedy, and it'll work.</span>
