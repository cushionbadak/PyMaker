<div class="post-text" itemprop="text">
<p>I have a C/C++ program which takes a set of arguments and displays a set of outputs to a command line (for my research).</p>
<p>I would like to write a Python script to run this program multiple times for different inputs and write outputs to a file. I am planning to run the program with exhaustive inputs.</p>
<p>However, I don't have any experience in writing scripts or programming in Python. So, I was wondering if I could get some pointers where to start.</p>
<p>As an example, I would like to write a script for doing:</p>
<pre><code>./program -flag1 [val1] -flag2 [val2] -arg1 -arg2 -arg3 ...
Append the output to Output.txt
./program -flag1 [val1] -flag2 [val2] -arg1 -arg2 -arg4 ...
Append the output to Output.txt
./program -flag1 [val1] -flag2 [val2] -arg1 -arg2 -arg5 ...
Append the output to Output.txt
...
...
./program -flag1 [val1] -flag2 [val2] -arg1000 -arg1000 -arg1000 ...
Append the output to Output.txt
</code></pre>
<p><strong>EDIT</strong>: I am running the program on Linux through command line, bash.</p>
<p><strong>EDIT2 SLN</strong>: Just for a future reference to others who might be a beginner, doing something similar, the solution looks like following. I stripped all the parts that only affects my case.</p>
<pre><code>import subprocess
from subprocess import Popen, PIPE

for commands in listArgs:

    # Build command through for loop in listArgs.
    # Details are omitted.
    cmd = ["./program", "-flag1", "val1", "-flag2", "val2", "-arg1", "-arg2", ... ]

    # Open/Create the output file
    outFile = open('/path/to/file/Output.txt', 'a+')

    result = subprocess.Popen(cmd, stdout=subprocess.PIPE)
    out = result.stdout.read()

    outFile.write(out)
    outFile.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Currently recommended way of running and controlling executables using Python is <strong>subprocess</strong> module. You can use different arguments, capture stdout, process it, or just redirect to arbitrary file. Have a look at documentation here <a href="https://docs.python.org/3.2/library/subprocess.html#module-subprocess" rel="nofollow">https://docs.python.org/3.2/library/subprocess.html#module-subprocess</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure if this is what you're looking for, but you can use python to execute commands through the terminal. For example</p>
<pre><code>import os
os.system("echo 'hello world'")
</code></pre>
<p>This will execute the terminal command <code>&gt;&gt; echo 'hello world'</code></p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">docs.python.org/3/tutorial</a></span>
<span class="comment-copy">Python's subprocess would probably do the trick nicely . . . With that said, a tool like <code>bash</code> is probably more suited to this task.</span>
<span class="comment-copy">What platform?  Windows?  Mac?  Linux?</span>
<span class="comment-copy">"I have a C/C++ program..." No, you don't. It's one or the other, unless you have a C++ program in which one or more of your compilation units are in C and you have taken the requisite care to make them work together properly, which is often non-trivial.</span>
