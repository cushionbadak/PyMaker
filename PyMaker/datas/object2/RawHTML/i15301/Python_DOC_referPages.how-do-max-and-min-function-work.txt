<div class="post-text" itemprop="text">
<p>I have below dictionary:</p>
<pre><code>d = {1: 'zz', 2: 'we', 'as': 'dfda', 'x': 'zyz'}
</code></pre>
<p>And <code>max</code> and <code>min</code> return following:</p>
<pre><code>max(d)
'x'

min(d)
1
</code></pre>
<p>How do <code>max</code> and <code>min</code> really work in this case?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>max</code> and <code>min</code> work on iterables. If you try to convert a dictionary into an iterable, you get back its keys. So, <code>max(d)</code> is sort of the same as <code>max(1,2,'as','x')</code>. There are some details on the ordering of the various builtin types <a href="https://docs.python.org/3/library/stdtypes.html#comparisons" rel="nofollow">here</a>. As an example, <code>1&lt; "a"</code> is <code>True</code>. This is used to find the maximum of the list. Similarly for <code>min</code>. As a note, I wouldn't recommend doing something like this in production code.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>min</code> and <code>max</code> functions, when applied on dictionaries, they work on the keys of the dictionary.</p>
<p>In your case, they have to work on</p>
<pre><code>[1, 2, 'as', 'x']
</code></pre>
<p>As you can see, there are multiple types of data present in it. <a href="https://docs.python.org/2/tutorial/datastructures.html#comparing-sequences-and-other-types" rel="nofollow">In Python 2.7, if the types are different, then the string value of the types are used for comparison.</a>. Quoting from that section,</p>
<blockquote>
<p>Note that comparing objects of different types is legal. The outcome is deterministic but arbitrary: <strong>the types are ordered by their name</strong>. Thus, a list is always smaller than a string, a string is always smaller than a tuple, etc. (The rules for comparing objects of different types should not be relied upon; they may change in a future version of the language.)</p>
</blockquote>
<p>So if you actually sort the dictionary keys,</p>
<pre><code>&gt;&gt;&gt; sorted(d)
[1, 2, 'as', 'x']
</code></pre>
<p>As you can see now, the smallest is <code>1</code> and the biggest is <code>x</code>.</p>
</div>
<span class="comment-copy">Could you clarify what you're asking? Have you looked at e.g. <code>sorted(d)</code>?</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/3270680/how-does-python-compare-string-and-int" title="how does python compare string and int">stackoverflow.com/questions/3270680/â€¦</a></span>
<span class="comment-copy">It should be noted that this would produce a TypeError in python 3 as python 3 considers there to be no natural ordering between ints and strings.</span>
