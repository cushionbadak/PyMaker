<div class="post-text" itemprop="text">
<p>I have a C++ program that uses some very specific method to calculate pairwise distances for a data set (30,000 elements). The output file would be 20 GB, and look something like this:</p>
<pre>
point1, point2, distancex
pointi, pointj, distancexx
.....
</pre>
<p>I then input the file to Python and use Python (NumPy) for clustering. It takes forever using Python to read the output file. Is there a way to connect the C++ program directly with my Python code to save time on I/O on the intermediate file? Maybe using SWIG?</p>
</div>
<div class="post-text" itemprop="text">
<p>I assume you have been saving ascii. You could modify your C++ code to write binary instead, and read it with <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.fromfile.html" rel="nofollow">numpy.fromfile</a>.</p>
<p>For a more direct connection, you would wrap your C++ code as a library (remove main() and drive it from Python) using swig. This allows you to share the memory of arrays between C++ and Python. </p>
<p>You can use either Python's <a href="https://docs.python.org/3/c-api/buffer.html" rel="nofollow">buffer protocol</a>  on the C++ side together with <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.frombuffer.html" rel="nofollow">numpy.frombuffer</a> on the Python side. Or you can use the <a href="http://docs.scipy.org/doc/numpy/reference/c-api.array.html" rel="nofollow">numpy headers</a> to directly work on numpy arrays in C++. Here is a small <a href="https://github.com/martinxyz/python/tree/master/realistic" rel="nofollow">swig example project</a> using the second method. (Disclaimer: I wrote it.)</p>
</div>
<span class="comment-copy">You might use a pipeline: en.wikipedia.org/wiki/Pipeline_(Unix)</span>
