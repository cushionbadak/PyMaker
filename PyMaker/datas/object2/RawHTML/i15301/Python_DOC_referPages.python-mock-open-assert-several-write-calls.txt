<div class="post-text" itemprop="text">
<p>I am trying to test some code that does logging.</p>
<pre><code>logfile = open(file_name, 'w')
logfile.write("blah1")
logfile.write("blah2")
</code></pre>
<p>I'd like to assert that both blah1 and blah2 get written.  My test function looks like this:</p>
<pre><code>def test_it(self):
    logger.open = mock_open()
    logger.time.time = Mock(return_value=12345)

    logger.run_me()

    logger.open.assert_called_once_with('test_12345.log', 'w');
    file_handle_mock = logger.open()
    file_handle_mock.write.assert_called_with("blah1")
    file_handle_mock.write.assert_called_with("blah2")
</code></pre>
<p>But it gives me an error:</p>
<pre><code>AssertionError: Expected call: write('blah1')
Actual call: write('blah2')
</code></pre>
<p>How can I properly test multiple calls to the write function?</p>
<p>Versions:
Python 2.7.6
mock==1.0.1</p>
</div>
<div class="post-text" itemprop="text">
<p>According to the docs, <code>assert_called_with</code> and <code>assert_called_once_with</code> only pass if the call is the most recent one<sup>1</sup>.  The trick us to use <code>assert_any_call</code>, or <code>assert_has_calls</code>.</p>
<pre><code>file_handle_mock.write.assert_has_calls([
    mock.call('blah1'),
    mock.call('blah2'),
])
</code></pre>
<p><sup><sup>1</sup>It's kinda hidden in the docs for <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_any_call" rel="nofollow">assert_any_call</a>, so we can't really blame you for missing it...</sup></p>
</div>
<span class="comment-copy">Thanks so much!</span>
<span class="comment-copy">No problem.  Happy to help.</span>
