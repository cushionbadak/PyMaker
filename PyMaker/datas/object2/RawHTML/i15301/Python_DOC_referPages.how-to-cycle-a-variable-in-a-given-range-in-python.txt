<div class="post-text" itemprop="text">
<p>is there an easy way in python to cycle a variable in a given range?
For example:
Given a range(), I want a variable goes like this:
0 1 2 3 2 1 0 1 2 3... till some conditions are satisfied.</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to <a href="https://docs.python.org/3.4/library/itertools.html#itertools.cycle" rel="nofollow"><code>cycle</code></a> the sequence <code>0, 1, ..., n, n-1, ..., 1</code>.
You can easily build this sequence using <a href="https://docs.python.org/3.4/library/itertools.html#itertools.chain" rel="nofollow"><code>chain</code></a></p>
<pre><code>from itertools import chain, cycle

def make_base_sequence(n):
    base = range(n+1)                   # 0, ..., n
    rev_base = reversed(range(1, n))    # n-1, ..., 1
    return chain(base, rev_base)        # 0, ..., n, n-1, ..., 1

for x in cycle(make_base_sequence(5)):
    print(x)
</code></pre>
<p>Sample run:</p>
<pre><code>In [2]: from itertools import chain, cycle
   ...: 
   ...: def make_base_sequence(n):
   ...:     base = range(n+1)
   ...:     rev_base = reversed(range(1, n))
   ...:     return chain(base, rev_base)
   ...: 
   ...: for i, x in enumerate(cycle(make_base_sequence(5))):
   ...:     print(x, end=' ')
   ...:     if i &gt; 20:
   ...:         break
   ...:     
0 1 2 3 4 5 4 3 2 1 0 1 2 3 4 5 4 3 2 1 0 1 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want <code>itertools.cycle()</code>, see here:</p>
<p><a href="https://docs.python.org/2/library/itertools.html#itertools.cycle" rel="nofollow">https://docs.python.org/2/library/itertools.html#itertools.cycle</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>itertools.cycle</code> is a good start. Else you can program it yourself:</p>
<pre><code>cycle = [0,1,2,3,2,1]
i = 0
while some_condition:
    value = cycle[i]
    i = (i+1) % len(cycle)
    #do stuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import time

def cycle(range_):
    num = -1
    current = 0
    a=time.time()
    while 1:
        print current
        if current in (0, range_):
            num*=-1
        current += num
        if time.time() - a &gt; 0.002:
            break

cycle(3)
</code></pre>
<p>output:</p>
<pre><code>0 1 2 3 2 1 0 1 2 3 2 1 0 1 2 3 2 1 0 1 2 3 2 1 0 1 2 3 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you need <a href="https://docs.python.org/3/library/itertools.html?highlight=itertools.cycle#itertools.cycle" rel="nofollow">itertools.cycle</a>:</p>
<p>demo:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; count = 0
&gt;&gt;&gt; for x in itertools.cycle(range(3)): 
...     if count == 10:
...         break
...     print x,
...     count += 1
... 
0 1 2 0 1 2 0 1 2 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import itertools

def f(cycle_range, condition_func):
    sequence = range(cycle_range) + range(cycle_range)[-2:0:-1]
    cycle_generator = itertools.cycle(sequence)
    while not condition_func():
        yield next(cycle_generator)

def condition_func():
    """Checks some condition"""
</code></pre>
<p>Essentially, you just want to loop and constantly check the condition. And each time yeild the next item from the cycle. Now, admittedly there are better ways to check a condition than a function call, but this is just an example.</p>
</div>
<span class="comment-copy">This is invalid code, you check "count" and you assign to it but you never initialize it. (Also, "count" is a bad name for a variable IMHO)</span>
