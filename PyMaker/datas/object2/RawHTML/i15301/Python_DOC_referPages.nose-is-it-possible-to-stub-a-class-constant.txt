<div class="post-text" itemprop="text">
<p>N00b at Nose framework here.</p>
<p>Looking at the docs for unittest.mock, I do not see an obvious way to stub a variable. I am testing a class with constants declared. One constant is a really large int and for testing purposes, I'd like to replace it with a much smaller int.</p>
<p>My understanding is that you can only mock (with the @patch decorator) a function, and not a variable.</p>
<p>Is this possible, and if so, how?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the patch decorator to replace a constant.  e.g.:</p>
<pre><code>&gt;&gt;&gt; import mock
&gt;&gt;&gt; class Foo(object):
...   bar = 1000000
... 
&gt;&gt;&gt; with mock.patch.object(Foo, 'bar', 10):
...   print(Foo.bar)
... 
10
&gt;&gt;&gt; print(Foo.bar)
1000000
</code></pre>
<p>Specifically, look at the <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch" rel="nofollow">documentation</a> for the <code>new</code> keyword argument to <code>patch</code> (or any of the various items in the <code>patch</code> family)...</p>
<p><sup>I'm on python2.x where <code>mock</code> was still a 3rd party module.  Changing to <code>from unittest import mock</code> should make the above code work for you.</sup></p>
</div>
