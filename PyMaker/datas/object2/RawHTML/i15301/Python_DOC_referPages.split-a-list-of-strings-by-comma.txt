<div class="post-text" itemprop="text">
<p>I want to convert </p>
<pre><code>['60,78', '70,77', '80,74', '90,75', '100,74', '110,75']
</code></pre>
<p>in to </p>
<pre><code>['60', '78', '70', '77'.. etc]
</code></pre>
<p>I thought I could use </p>
<pre><code>for word in lines:
    word = word.split(",")
    newlist.append(word)
return newlist
</code></pre>
<p>but this produces this instead:</p>
<pre><code>[['60', '78'], ['70', '77'], ['80', '74'], ['90', '75'], ['100', '74'], ['110', '75']]
</code></pre>
<p>Can anyone please offer a solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use <a href="https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types" rel="nofollow"><code>list.extend</code></a> instead of <code>list.append</code>.</p>
<pre><code>newlist = []
for word in lines:
    word = word.split(",")
    newlist.extend(word)  # &lt;----
return newlist
</code></pre>
<p>Or, using <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; lst = ['60,78', '70,77', '80,74', '90,75', '100,74', '110,75']
&gt;&gt;&gt; [x for xs in lst for x in xs.split(',')]
['60', '78', '70', '77', '80', '74', '90', '75', '100', '74', '110', '75']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow"><code>str.split</code></a> actually returns a list.</p>
<blockquote>
<p>Return a list of the words in the string, using <em>sep</em> as the delimiter string. </p>
</blockquote>
<p>Since you are appending the returned list to <code>newlist</code>, you are getting a list of lists. Instead use <code>list.extend</code> method, like this</p>
<pre><code>for word in lines:
    newlist.extend(word.split(","))
</code></pre>
<p>But you can simply use nested list comprehension like this</p>
<pre><code>&gt;&gt;&gt; data = ['60,78', '70,77', '80,74', '90,75', '100,74', '110,75']
&gt;&gt;&gt; [item for items in data for item in items.split(",")]
['60', '78', '70', '77', '80', '74', '90', '75', '100', '74', '110', '75']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>using <a href="https://docs.python.org/2/library/itertools.html#itertools.chain" rel="nofollow">itertools.chain</a> :</p>
<pre><code>from itertools import chain

print(list(chain.from_iterable(ele.split(",") for ele in l)))
['60', '78', '70', '77', '80', '74', '90', '75', '100', '74', '110', '75']
</code></pre>
<p>The more items you have to flatten chain does it  a bit more efficiently:</p>
<pre><code>In [1]: l= ["1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20" for _ in range(100000)]

In [2]: from itertools import chain

In [3]: l= ["1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30" for _ in range(10000)]

In [4]: timeit (list(chain.from_iterable(ele.split(",") for ele in l)))
100 loops, best of 3: 17.7 ms per loop

In [5]: timeit  [item for items in l for item in items.split(",")]
10 loops, best of 3: 20.9 ms per loop
</code></pre>
</div>
