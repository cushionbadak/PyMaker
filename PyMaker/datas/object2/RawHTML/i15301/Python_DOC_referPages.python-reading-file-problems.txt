<div class="post-text" itemprop="text">
<pre><code>highest_score = 0
g = open("grades_single.txt","r")
arrayList = []
for line in highest_score:
    if float(highest_score) &gt; highest_score:
       arrayList.extend(line.split())
g.close()

print(highest_score)
</code></pre>
<p>Hello, wondered if anyone could help me , I'm having problems here. I have to read in a file of which contains 3 lines. First line is no use and nor is the 3rd. The second contains a list of letters, to which I have to pull them out (for instance all the As all the Bs all the Cs all the way upto G) there are multiple letters of each. I have to be able to count how many off each through this program. I'm very new to this so please bear with me if the coding created is wrong. Just wondered if anyone could point me in the right direction of how to pull out these letters on the second line and count them. I then have to do a mathamatical function with these letters but I hope to work that out for myself. </p>
<p>Sample of the data:</p>
<pre><code>GTSDF60000
ADCBCBBCADEBCCBADGAACDCCBEDCBACCFEABBCBBBCCEAABCBB
*
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You do not read the contents of the file. To do so use the <code>.read()</code> or <code>.readlines()</code> method on your opened file. <code>.readlines()</code> reads each line in a file seperately like so: </p>
<pre><code>g = open("grades_single.txt","r")
filecontent = g.readlines()
</code></pre>
<p>since it is good practice to directly close your file after opening it and reading its contents, directly follow with:</p>
<pre><code>g.close()
</code></pre>
<p>another option would be:</p>
<pre><code>with open("grades_single.txt","r") as g:
    content = g.readlines()
</code></pre>
<p>the <code>with</code>-statement closes the file for you (so you don't need to use the <code>.close()</code>-method this way. 
Since you need the contents of the second line only you can choose that one directly:</p>
<pre><code>    content = g.readlines()[1]
</code></pre>
<p><code>.readlines()</code> doesn't strip a line of is newline(which usually is: <code>\n</code>), so you still have to do so:</p>
<pre><code>    content = g.readlines()[1].strip('\n')
</code></pre>
<p>The <code>.count()</code>-method lets you count items in a list or in a string. So you could do:</p>
<pre><code>dct = {}
for item in content:
    dct[item] = content.count(item)
</code></pre>
<p>this can be made more efficient by using a dictionary-comprehension:</p>
<pre><code>dct = {item:content.count(item) for item in content}
</code></pre>
<p>at last you can get the highest score and print it:</p>
<pre><code>highest_score = max(dct.values())
print(highest_score)
</code></pre>
<p><code>.values()</code> returns the values of a dictionary and max, well, returns the maximum value in a list. </p>
<p>Thus the code that does what you're looking for could be:</p>
<pre><code>with open("grades_single.txt","r") as g:
    content = g.readlines()[1].strip('\n')

dct = {item:content.count(item) for item in content}

highest_score = max(dct.values())
print(highest_score)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>highest_score = 0
arrayList = []
with open("grades_single.txt") as f:
    arraylist.extend(f[1])
print (arrayList)
</code></pre>
<p>This will show you the second line of that file. It will extend <code>arrayList</code> then you can do whatever you want with that list.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re


# opens the file in read mode (and closes it automatically when done)
with open('my_file.txt', 'r') as opened_file:

    # Temporarily stores all lines of the file here.
    all_lines_list = []

    for line in opened_file.readlines():
        all_lines_list.append(line)

    # This is the selected pattern.
    # It basically means "match a single character from a to g"
    # and ignores upper or lower case
    pattern = re.compile(r'[a-g]', re.IGNORECASE)

    # Which line i want to choose (assuming you only need one line chosen)
    line_num_i_need = 2

    # (1 is deducted since the first element in python has index 0)
    matches = re.findall(pattern, all_lines_list[line_num_i_need-1])

    print('\nMatches found:')
    print(matches)
    print('\nTotal matches:')
    print(len(matches))
</code></pre>
<p>You might want to check <a href="https://docs.python.org/3/library/re.html" rel="nofollow">regular expressions</a> in case you need some more complex pattern.</p>
</div>
<div class="post-text" itemprop="text">
<p>To count the occurrences of each letter I used a dictionary instead of a list. With a dictionary, you can access each letter count later on.</p>
<pre><code>d = {}
g = open("grades_single.txt", "r")
for i,line in enumerate(g):
    if i == 1:
        holder = list(line.strip()) 
g.close()

for letter in holder:
    d[letter] = holder.count(letter)

for key,value in d.iteritems():
    print("{},{}").format(key,value)
</code></pre>
<p>Outputs</p>
<pre><code>A,9
C,15
B,15
E,4
D,5
G,1
F,1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One can treat the first line specially (and in this case ignore it) with <code>next</code> inside <code>try: except StopIteration:</code>.  In this case, where you only want the second line, follow with another <code>next</code> instead of a <code>for</code> loop.</p>
<pre><code>with open("grades_single.txt") as f:
    try:
        next(f)  # discard 1st line
        line = next(f)
    except StopIteration:
        raise ValueError('file does not even have two lines')

# now use line
</code></pre>
</div>
<span class="comment-copy">Can you include the file content and also the expected output?</span>
<span class="comment-copy">Can you provide an example, of the line format? No one can help you without knowing anything about the data.</span>
<span class="comment-copy">You haven't even tried reading from the file yet ... what problem have you run into that can't be solved by reading the documentation?</span>
<span class="comment-copy"><code>next(g); second_line = next(g); for char in second_line: ...</code></span>
<span class="comment-copy">Have you read <a href="https://docs.python.org/3.4/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">the tutorial on reading files in Python</a>?</span>
