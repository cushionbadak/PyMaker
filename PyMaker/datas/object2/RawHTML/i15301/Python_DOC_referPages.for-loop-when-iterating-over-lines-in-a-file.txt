<div class="post-text" itemprop="text">
<p>I have a loop as follows:</p>
<pre><code>for line in FILE:
    if ('MyExpression' in line)
        # Pull the first number out of this line and put it in a list
        # Pull the first number out of the NEXT line that has either 'MyExpression' or      'MyExpression2', and put it in a list
</code></pre>
<p>Basically, I want to find a line where <code>'My Expression exists'</code>, and pull a number out of that line, which indicates the onset of a trial. I then want to jump to the next line that contains either <code>MyExpression</code> OR <code>MyExpression2</code>, and pull a number from that line which is the offset of my trial. I want to go through my entire file, so I have two lists, one indicating onsets, and one indicating offsets.</p>
<p>I know how to do this in Matlab, but in Python I'm not sure how to tell it to look in the next line. Something like if ('MyExpresion' in line+1) OR ('MyExpression2' in line+1)?</p>
<p>UPDATE: Sorry for the late reply, but this is what my file might look like:</p>
<pre><code>1234 MyExpression Blah Blah
3452 Irrelevant Blah Blah
4675 MyExpression2 Blah Blah
5234 MyExpression Blah Blah
6666 MyExpression Blah Blah
</code></pre>
<p>I would want two arrays/lists: [1234, 5234] and [4675, 6666] basically, which correspond to onsets and offsets. I'll play with the current answers and see if any of them do this, thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>In a <code>for line in afile:</code> loop's body, the next line has not been read yet; however, you can proceed to read following lines within said loop body.  E.g:</p>
<pre><code>for line in afile:
    if 'MyExpression' in line:
        # ...the number extraction, e.g with a regular expression, then:
        for nextline in afile:
            if 'MyExpression' in nextline or 'MyExpression2' in nextline:
                # the other number extraction, then
                break  # done with the inner loop
</code></pre>
<p>Note that this <code>consumes</code> a portion of (or all) what was left in <code>afile</code>.  If you need to walk over that portion again, you need to use <code>itertools.tee</code> to make two "clones" of the <code>afile</code> iterator, and loop on the "clones" instead.  But, from what I understand of your question, that's not necessary for your specific requirements (and it's a bit trickier, so I won't expound on that).</p>
<p>So for example, if <code>a.txt</code> is the example file you give:</p>
<pre><code>1234 MyExpression Blah Blah
3452 Irrelevant Blah Blah
4675 MyExpression2 Blah Blah
5234 MyExpression Blah Blah
6666 MyExpression Blah Blah
</code></pre>
<p>then this sample code:</p>
<pre><code>with open('a.txt') as afile:
    results = []
    for line in afile:
        if 'MyExpression' in line:
            first = int(line.split()[0])
            for nextline in afile:
                if 'MyExpression' in nextline or 'MyExpression2' in nextline:
                    second = int(nextline.split()[0])
                    results.append([first, second])
                    break  # done with the inner loop
    print(results)
</code></pre>
<p>emits</p>
<pre><code>[[1234, 4675], [5234, 6666]]
</code></pre>
<p>No idea what is the algorithm you imagine would give, instead,</p>
<pre><code>[1234, 5234] and [4675, 6666]
</code></pre>
<p>what logical spec would make <code>4675</code> be ignored for the first pair but reconsidered as beginning the second pair?  Certainly nothing I can see specified in the text of your Q, so, please edit that text to make your specs correspond to your actual intentions!</p>
</div>
<div class="post-text" itemprop="text">
<p>File objects are <a href="https://docs.python.org/3/glossary.html#term-iterator" rel="nofollow">iterators</a>, which means that you can advance them with <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow"><code>next</code></a>:</p>
<pre><code>for line in FILE:
    if ('MyExpression' in line):
        next_line = next(FILE, None)
</code></pre>
<p>Note that the <code>None</code> in there is a default value to return if the end of the file is reached.  Without it, a <code>StopIteration</code> exception will be raised.</p>
</div>
<div class="post-text" itemprop="text">
<p>Hope this helps... look for "Expression", and prints the lines in pairs.</p>
<pre><code>text = "Expression"

# Get lines with text in it
with open('test.log') as log_file:
    the_lines = [line.strip() for line in log_file if text in line]

# Make pairs (0,1), (2,3), etc.
duples = [(the_lines[2*i], the_lines[2*i+1]) for i in xrange(len(the_lines)/2)]

# Show me...
for pair in duples:
    print pair
</code></pre>
<p>You should replace line.strip() with your own function to get the number you are looking for.</p>
<p>Note: I don't like using indexes when creating the duples but it was simpler than using an iterator.</p>
</div>
<span class="comment-copy">You want to find a line which include <code>MyExression</code>, and? I don't understand what you mean in <code>pull a number out of that line</code></span>
<span class="comment-copy">The for loop will continue to iterate over the entire file looking at it line by line. The if statement won't break that, once it is done with the if it'll continue with the loop.</span>
<span class="comment-copy">you're missing <code>:</code> after <code>for...FILE:</code>, and no parentness needed for <code>if 'My...' in line:</code> &lt;- again, missing a <code>:</code>. Sure it is just typo ;)</span>
<span class="comment-copy">I believe this should do it; however, I need the first for loop to pickup where the inside for loop left off (so it doesn't duplicate trials). How would I do that?</span>
<span class="comment-copy">@user1566200, that's exactly how this snippet should work: each of the two <code>for</code> loops advances the current item and the other one continues after that.  Have you tried it?</span>
<span class="comment-copy">@user1566200, provided an example -- but the numbers come out in the way you specify in your Q's <b>text</b>, not as in your example, which I can't make heads or tails of -- please edit Q to clarify!</span>
<span class="comment-copy">I think the OP wants to get the next line that has <i>either 'MyExpression' or 'MyExpression2'</i>  not just the next line so another loop inside the if until that line would work</span>
<span class="comment-copy">If that is the case, then Martelli's solution will solve his problem.  But I'm not sure if that is what he wants since he said <i>"I'm not sure how to tell it to look in the next line."</i> and kept mentioning <i>"line+1"</i>.  It sounds more like he wants just the next line.  Either way, our solutions together have him covered. :)</span>
<span class="comment-copy">well you already have my +1  anyway :)</span>
