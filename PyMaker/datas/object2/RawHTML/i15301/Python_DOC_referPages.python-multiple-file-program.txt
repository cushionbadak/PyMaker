<div class="post-text" itemprop="text">
<p>For larger programs in order to be more organized i have been looking into dividing my code up into different .py files and having a main file that calls upon those files when needed. I have looked around and seen lots of remarks about creating a directory and a SystemPath for python. Are those reasonable options for a program that could be distributed between a few computers? As a test i tried to assemble a example </p>
<pre><code>#this is the class named 'grades' in the same directory as 'main'

class student:
    def __init__(self):
        self.name = ""
        self.score = 0
        self.grade = 0

    def update(self,name,score,grade):
        self.score = score
        self.name = name
        self.grade = grade
        print self.score,self.name,self.grade

s = student()
s.update(name,score,grade) 
</code></pre>
<p>this is my main script currently</p>
<pre><code>from grades import score
import random

name = 'carl'
score = random.randrange(0,100)
grade = 11

s = student()
s.score(name,score,grade)
</code></pre>
<p>there are some questions i have generally about this method:</p>
<p>1: Is there a way to import all from different file or do i need to   specify each individual class?                                                                        </p>
<ol start="2">
<li>If i just had a function, is it possible to import it just as a function or can you only import via a class?</li>
</ol>
<p>3.Why is it when i call upon a class in general i have to make a variable for it as in the example below?</p>
<pre><code>#way that works

 s = student()

 s.update(name,score,grade)

#incorrect way

student.update(name,score,grade)
</code></pre>
<p>Thank you for your time and thought towards my question.</p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>Yes.</li>
</ol>
<p>You can import instance of <code>student</code> from other script to main script like this:</p>
<pre><code>from grades import s
# if your first script is called grades.py
import random

name = 'carl'
score = random.randrange(0,100)
grade = 11
# you can directly use it without initializing it again.
s.score(name,score,grade)
</code></pre>
<p>2.
If you have a function called <code>test()</code> in grades.py, you can import it in this way:</p>
<pre><code>from grades import test

# then invoke it
test()
</code></pre>
<p>3.
This variable stands for the instance of class student. You need this instance to invoke the function inside.</p>
</div>
<div class="post-text" itemprop="text">
<p>Generally, to divide the source code of a program, Python use <strong>module</strong> to do that, which corresponds to a *.py file. Then for your 3 questions:</p>
<ol>
<li>You can import a whole "module content" (function, class, global variables, ...) through <code>import module_name.*</code></li>
<li><p>for a function, if it is a function in a class(member method, class method or static method) you can not only import the function, you should import class to use the method; if it is a function under module, you can separately import the function through import <code>module_name.function_name</code></p></li>
<li><p><strong>update</strong> is a member function of the student class, so you should use it through an instance. if it is a class method or static method, you can use it through the class name you wrote.</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>1: Is there a way to import all from different file or do i need to
  specify each individual class?</p>
</blockquote>
<p>You can use the "wildcard import", but you probably shouldn't. See
<a href="https://stackoverflow.com/questions/3615125/should-wildcard-import-be-avoided">Should wildcard import be avoided?</a></p>
<blockquote>
<ol start="2">
<li>If i just had a function, is it possible to import it just as a
  function or can you only import via a class?</li>
</ol>
</blockquote>
<p>Functions can be totally independent of classes in Python.</p>
<blockquote>
<p>3.Why is it when i call upon a class in general i have to make a variable for it as in the example below?</p>
</blockquote>
<p>You should read up on object-oriented programming. In the basic cases, you have to instantiate instances of a class in order to use that class's functionality. In your example, the class student describes what it means to be a student, and the statement</p>
<blockquote>
<p>s = student()</p>
</blockquote>
<p>creates a student and names it "s".
I think this should be clear after reading a bit about object-oriented programming.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, you can use <code>from module import *</code> to import everything like:
hello.py:</p>
<pre><code>def hello():
  print 'hello'

def bye():
  print 'Bye'
</code></pre>
<p>main.py:</p>
<pre><code>from hello import *

hello()
bye()
</code></pre>
<p>But it's not a good way, if you have two files, two functions have the same name, 
so use </p>
<pre><code>from hello import hello, bye

hello()
bye()
</code></pre>
<p>is better, it an example for function ,as same as class.</p>
<p>Third before Second,  student is a class, so you have to use an instance object to use the function which with self parameter. If you want to use student.function, the function must be a static method like this:</p>
<pre><code>class Person:

  def __init__():
    pass

  @staticmethod
  def Count():
    return 1

print Person.Count()
</code></pre>
<p>Second, you can import the function in a class file which is independent of the class.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<ol>
<li>Is there a way to import all from different file or do i need to specify each individual class?</li>
</ol>
</blockquote>
<p>the answer is yes , as python <code>import</code> statement use <a href="https://docs.python.org/3/library/sys.html#sys.path" rel="nofollow"><code>sys.path</code></a> (A list of strings that specifies the search path for modules ) you need to add the patht of your modules in <code>sys.path</code> , for example if you want to interact between different computers you can put your modules in <code>public</code> folder and add the path of folder to <code>sys.path</code> : </p>
<pre><code>import sys
sys.path.append( path to public )
</code></pre>
<blockquote>
<ol start="2">
<li>If i just had a function, is it possible to import it just as a function or can you only import via a class?</li>
</ol>
</blockquote>
<p>you just need to use <code>from ... import function_name</code>.</p>
<blockquote>
<ol start="3">
<li>Why is it when i call upon a class in general i have to make a variable for it as in the example below?</li>
</ol>
</blockquote>
<p>for this question you just need to read the python <a href="https://docs.python.org/2/tutorial/classes.html#class-objects" rel="nofollow"><code>Class objects</code></a> documentation :</p>
<blockquote>
<p>Class objects support two kinds of operations: attribute references and instantiation. </p>
</blockquote>
</div>
