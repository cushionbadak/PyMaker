<div class="post-text" itemprop="text">
<pre><code>file_1 = (r'res\test.png')

with open(file_1, 'rb') as file_1_:
    file_1_read = file_1_.read()    
file_1_hex = binascii.hexlify(file_1_read)
print ('Hexlifying test.png..')

file_1_size_bytes = len(file_1_read)
file_1_size_bytes_hex = binascii.hexlify(file_1_size_bytes)

print (file_1_size_bytes_hex)

TypeError: 'int' does not support the buffer interface
</code></pre>
<p>Ok so im trying to hexlify the .png's byte length here. i know its because the len() of file_1_read is a number. im trying to convert decimal to hexidecimal. how would i go about doing that?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow"><code>str.format</code></a> with <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow"><code>x</code> type</a>:</p>
<pre><code>&gt;&gt;&gt; '{:x}'.format(123)
'7b'
&gt;&gt;&gt; '{:08x}'.format(123)
'0000007b'
</code></pre>
<p>or using <a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting" rel="nofollow"><code>printf</code>-style formatting</a>:</p>
<pre><code>&gt;&gt;&gt; '%x' % 123
'7b'
&gt;&gt;&gt; '%08x' % 123
'0000007b'
</code></pre>
<hr/>
<p>If you want to use <code>binascii.hexlify</code>, convert the <code>int</code> object to <code>bytes</code> using <a href="https://docs.python.org/3/library/struct.html#struct.pack" rel="nofollow"><code>struct.pack</code></a>:</p>
<pre><code>&gt;&gt;&gt; import struct
&gt;&gt;&gt; import binascii
&gt;&gt;&gt; struct.pack('i', 123)  # Replace 123 with `file_1_size_bytes`
b'{\x00\x00\x00'
&gt;&gt;&gt; binascii.hexlify(struct.pack('i', 123))
b'7b000000'
</code></pre>
<p>You can control byte order using <code>&gt;</code>, <code>&lt;</code>, .. format specifier:</p>
<pre><code>&gt;&gt;&gt; binascii.hexlify(struct.pack('&gt;i', 123))
b'0000007b'
&gt;&gt;&gt; binascii.hexlify(struct.pack('&lt;i', 123))
b'7b000000'
</code></pre>
<p>See <a href="https://docs.python.org/3/library/struct.html#format-characters" rel="nofollow">Format characters - python <code>struct</code> module documentation</a></p>
</div>
<span class="comment-copy">Maybe I am missing something, but what about <code>hex</code>? Integer in, hex-representation out. builtin and easy</span>
<span class="comment-copy">Thanks, very helpfull info.</span>
<span class="comment-copy">struct.pack( 'i', file_1_size_bytes)     binascii.hexlify(struct.pack_into( '&gt;i', file_1_size_bytes))     print (file_1_size_bytes_hex)                                                                      So i was trying to pack the variable,im getting pack_into expected offset argument. whats the offset?</span>
<span class="comment-copy">oops: / sorry i wrote that wrong. i included the assignment and im getting the same struct.error pack_into expected offset argument.</span>
<span class="comment-copy">@Death_Dealer, Use <code>pack</code> instead of <code>pack_into</code>. (<code>pack_into</code> accepts an addition buffer object as the second parameter) <a href="https://docs.python.org/3/library/struct.html#struct.pack_into" rel="nofollow noreferrer">docs.python.org/3/library/struct.html#struct.pack_into</a></span>
<span class="comment-copy">@Death_Dealer, unpack it, then pack it: <code>struct.pack('&gt;H', *struct.unpack('&gt;I', b'\x00\x00\x00\x11'))</code>. IOW, convert it to <code>int</code>, then repack it.</span>
