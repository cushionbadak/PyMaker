<div class="post-text" itemprop="text">
<p>I'm a newbie in programming in general, and with python in particular ...</p>
<p>I'm trying to write a python script, launched from a Linux Terminal, with a 'latex' file as an argument : </p>
<pre><code>my_script.py file.tex.
</code></pre>
<p>I wish then my_script.py to open the file.tex in vim (in the Terminal), run another compiling script and then close, leaving 'file.tex' opened in vim and the compiling script running in background.</p>
<p>So, I tried :</p>
<pre><code>myfile = "file.tex"
subprocess.call("vim "+ myfile)
subprocess.call("Latex_compiling_commande "+myfile)
</code></pre>
<p>but my_script.py is still waiting for vim to close before continuing, which is exaclty what subprocess.call is supposed to do, as explained in the : <a href="https://docs.python.org/3/library/subprocess.html?highlight=subprocess.call#subprocess.call" rel="nofollow">official python doc</a>.</p>
<p>I tried :</p>
<pre><code>subprocess.Popen(["vim", myfile])
</code></pre>
<p>I've got an 'input/ouput error'...</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try with:</p>
<pre><code>import os
os.system("command")
</code></pre>
<p>For subprocess see this <a href="https://parezcoydigo.wordpress.com/2012/08/11/call-vim-from-inside-a-python-script/" rel="nofollow">link</a></p>
</div>
<span class="comment-copy">You should probably just call vim non-interactively.  See example <a href="http://stackoverflow.com/a/18865698/429982">here</a></span>
<span class="comment-copy">Thanks for your comment; but I wish to use vim with all its special capabilities (latex-suite plugin, mappings, ...)</span>
<span class="comment-copy">Thanks invictus for your answer. 'os.system("commad")' does the same : vim open 'file.tex'; I can edit the file, save it, do whatever I want; it's only after closing vim that my_script.py continues with the compiler command.</span>
<span class="comment-copy">Thanks for the link as well; I have already checked it, but I think (as far as I understood) my question is a bit different : what 'file.tex' contains does not interact in any way with 'my_script.py'</span>
<span class="comment-copy">What I really do not understand, is that : <code>os.system("Latex_compiling_command "+ myfile)</code> followed by <code>os.system("vim "+myfile)</code> works fine ... (my_script.py only ends when closing vim). Is there really any way to launch vim, then the Latex compiling command and then having my_script.py to close (leaving file.tex opened in vim in the Terminal) ?</span>
