<div class="post-text" itemprop="text">
<p>The <code>pdb</code> module <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer">should</a> contain a function called <code>set_trace</code>, however, when I run the code <code>import pdb; pdb.set_trace()</code> I get an error message saying <code>module 'pdb' has no attribute 'set_trace'</code>. Why is this error happening, even though my code is correct?</p>
<p>Here the code.py file I am executing to get this error:</p>
<pre><code>print("Hello, World!")
import pdb
pdb.set_trace()
print("Goodbye, World!")</code></pre>
<p>And here is the complete output of my program:</p>
<pre>Hello, World!
Hello, World!
Traceback (most recent call last):
  File "code.py", line 3, in 
    import pdb
  File "/usr/lib/python3.6/pdb.py", line 76, in 
    import code
  File "/tmp/code.py", line 4, in 
    pdb.set_trace()</pre>
</div>
<div class="post-text" itemprop="text">
<p>One of the first things that pdb does after you execute it is import a module
called <code>code</code>. However, since you've named your file <code>code.py</code> Python ends up
executing both files. When your file is executed for the second time, it prints
the "Hello, World!" message again. At this point, Python is still processing the
first <code>import pdb</code> statement when it encounters the same statement again. In a
language like C, this would result in infinite recursion, but Python
automatically ignores duplicate imports
(<a href="https://docs.python.org/3/tutorial/modules.html#more-on-modules" rel="nofollow noreferrer">documentation</a>).
Thus, Python ends up executing the next line of your code, <code>pdb.set_trace()</code>,
<em>before the initial <code>import pdb</code> statement finished executing</em>, which is why
you see an error message telling you that <code>pdb.set_trace()</code> does not exist.</p>
<p>To fix this, you could just rename your file to something else, but it would be
better to add a check so that your code doesn't execute when it is imported by a
different file:</p>
<pre><code>if __name__ == "__main__":
    print("Hello, World!")
    import pdb
    pdb.set_trace()
    print("Goodbye, World!")
</code></pre>
</div>
