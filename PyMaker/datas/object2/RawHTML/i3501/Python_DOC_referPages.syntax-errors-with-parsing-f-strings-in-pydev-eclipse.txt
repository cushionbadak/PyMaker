<div class="post-text" itemprop="text">
<p>I've a python project using PyDev in Eclipse. For sample code like below,</p>
<pre><code>var = 'element'
width = 11
print(f'{var:&gt;{width}}')
</code></pre>
<p>the code is executed printing the desired output <code>element</code> with right alignment and no errors.</p>
<p>However, PyDev parses this code raising error at <code>&gt;</code> character and an error message <code>SyntaxError: Unbalanced '{'</code>. But PyDev does support double braces in f-strings since release 6.3.1 (<a href="http://www.pydev.org/history_pydev.html" rel="nofollow noreferrer">#PyDev-884</a>). If I remove this <code>&gt;</code> character, the string is printed 'left-aligned' (which I don't want) and PyDev doesn't raise any error. This confirms PyDev does support double braces, but the error message is incorrect.</p>
<p>On the other hand, <a href="https://www.python.org/dev/peps/pep-0498/#differences-between-f-string-and-str-format-expressions" rel="nofollow noreferrer">PEP 498</a> for f-strings doesn't mention anything about alignment using f-strings. Is alignment part of the f-string syntax? If it is why is it not mentioned in PEP guide, and why does PyDev parser raise an error?</p>
<ol>
<li>Python: 3.6.3</li>
<li>PyDev: 6.3.3</li>
<li>Eclipse: Oxygen.2 (4.7.2)</li>
</ol>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>This is an issue in PyDev (unfortunately <a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer">https://www.python.org/dev/peps/pep-0498/</a> does not provide a grammar for f-strings and is very light on how the expected parsing should take place -- I'll update PyDev to cover for the provided example).</p>
</div>
<span class="comment-copy">Alignment is a valid way of using f-strings.  They use the same <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">Format Specification Mini-Language</a> that <code>str.format</code> does, which include the alignment syntax.  Your IDE is complaining because usually <code>}}</code> is how you escape a <code>}</code> in an f-string.  It's counting two opening expressions, but no closing ones because it thinks <code>}}</code> is a literal <code>}</code> character.  I'm a little surprised this works actually.</span>
<span class="comment-copy">Thanks Fabio. Appreciate it!</span>
<span class="comment-copy">Just released PyDev 6.4.1. Can you check if it's fixed for you?</span>
<span class="comment-copy">The errors at the f-string line have disappeared. However, there are still 'Unused variable' warnings at the lines where variables used in the inner braces of the f-string are defined.</span>
<span class="comment-copy">Yeap... I had tested that snippet in the global scope before, so, the unused variable warning wasn't appearing, but you're right, there's still an issue there. Will take a look at it for 6.4.2.</span>
<span class="comment-copy">Just fixed that error in <a href="https://github.com/fabioz/Pydev/commit/090d95d89ce244f00bc8f635087725ae5c38b341" rel="nofollow noreferrer">github.com/fabioz/Pydev/commit/â€¦</a> (for PyDev 6.4.4).</span>
