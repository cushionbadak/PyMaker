<div class="post-text" itemprop="text">
<p>Let's say I asked the user for a word, if the word is not a key in the dictionary, then I want to print "That word is not a key in the dictionary, try again". How would I do this using try and except? This is what I have so far.</p>
<pre><code>dict = {"These": 1, "are": 2, "words": 3}
while True:
    try:
        w = input("Enter a word: ")
    except: 
        print("That word is not a key in the dictionary, try again")
    else:
        print("That word is a key in the dictionary")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could catch the <code>KeyError</code> when accessing a key that doesn't exist in the map:</p>
<pre><code>try:
    w = input("Enter a word: ")
    k[w]
except KeyError:
    print("That word is not a key in the dictionary, try again")
else:
    print("That word is a key in the dictionary")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To directly answer your question, this code does what you're looking for:</p>
<pre><code>words = {"these": 1, "are": 2, "words": 3}
while True:
    try:
        value = words[input("Enter a word: ").trim().lower()]
    except KeyError: 
        print("That word is not a key in the dictionary, try again")
    else:
        print("That word is a key in the dictionary")
</code></pre>
<p>Couple important things to call out. Using <code>except:</code> without an <code>Exception</code> is very bad practice, as it will catch anything (like <a href="https://docs.python.org/2/library/exceptions.html#exceptions.SystemExit" rel="nofollow noreferrer"><code>SystemExit</code></a> or <a href="https://docs.python.org/2/library/exceptions.html#exceptions.KeyboardInterrupt" rel="nofollow noreferrer"><code>KeyboardInterrupt</code></a> for instance, which will prevent your program from exiting correctly). <code>dict</code> is a name of a <a href="https://docs.python.org/3/library/functions.html#func-dict" rel="nofollow noreferrer">builtin function</a>, so you are re-defining it by naming your dictionary <code>dict</code>.</p>
<p>As others suggested in the comments, you don't need try/except to do this unless you're trying to learn more about try/except. A better way to do this would be to use a set:</p>
<pre><code>words = {"these", "are", "words"}
while True:
    if words[input("Enter a word: ").trim().lower()] in words:
        print("That word is a key in the dictionary")
    else:
        print("That word is not a key in the dictionary, try again")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also avoid using try/except blocks by using <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>dict.get()</code></a>, which returns the value mapped at the specified key, or <code>None</code>(default) if the key was not found. You can change this default to anything you want. </p>
<p><strong>Code:</strong></p>
<pre><code>data = {"These": 1, "are": 2, "words": 3}

# make all keys lowercase
data = {k.lower(): v for k, v in data.items()}

while True:
    w = input("Enter a word: ")

    if data.get(w.lower()):
        print("That word is a key in the dictionary")
    else:
        print("That word is not a key in the dictionary, try again")
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Enter a word: these
That word is a key in the dictionary
Enter a word: These
That word is a key in the dictionary
Enter a word: blah
That word is not a key in the dictionary, try again
</code></pre>
<p><strong>Note:</strong> Keys above were converted to lowercase to avoid case insensitivity when looking up keys. You also shouldn't use <code>dict</code> as a variable name, since it shadows the reserved keyword. </p>
</div>
<span class="comment-copy">Do you have to use try except? There are other better ways.</span>
<span class="comment-copy">why not try to check only using in, example:  "w in dict"  by the way, dont use dict it's a reserved word</span>
<span class="comment-copy">@sP_ No, I don't have to, but I'd like to know if using try and except is possible.</span>
<span class="comment-copy">@LeonardoFabioOrozcoPadilla <code>dict</code> is not a "reserved word", its simply the name of an existing type.</span>
