<div class="post-text" itemprop="text">
<p>Here is my code. I am just starting to learn Python. 
I am trying to generate a random number and guess it. If the answer is 7, then my program will print "lucky". If not, then "unlucky". I try to run my simple code many times. Every time I get "unlucky". Is there anybody who knows whether the problem is in my algorithm or somewhere else. BTW, I really want to know how could I know specifically know what is the number randomly generated in python? I just wonder if the same number, that is being generated every time, is the same one or not.</p>
<pre><code>from random import randint
z = input("What's the max number you want me to guess?")
choice = f"randint(1,{z})"
if choice == 7:
    print("lucky")
else:
    print("unlucky")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason you're getting unlucky every time has nothing to do with randomness.</p>
<p>Try running your code in the debugger, or adding a <code>print(choice)</code>, to what what you're getting. </p>
<p>If you enter, say, <code>10</code>, then <code>choice</code> is the string <code>"randint(1,'10')"</code>. That string is never going to be equal to the number <code>7</code>.</p>
<p>To make this work, you need to change two things:</p>
<ul>
<li>Actually call <code>randint</code>, instead of making a string that looks like the source code to call it.</li>
<li>Call it on a number, like <code>10</code>, not a string, like <code>'10'</code>.</li>
</ul>
<p>So:</p>
<pre><code>choice = randint(1, int(z))
</code></pre>
<hr/>
<p>Once you fix this, the random numbers will be random. Technically, they're created by a PRNG (pseudo random number generator), a fancy algorithm that takes a bunch of state information and spits out a sequence of numbers that <em>look</em> random, but are actually predictable from that state. But, as explained under <a href="https://docs.python.org/3/library/random.html#random.seed" rel="nofollow noreferrer"><code>seed</code></a>, by default, Python seeds that generator with <a href="https://docs.python.org/3/library/os.html#os.urandom" rel="nofollow noreferrer"><code>os.urrandom</code></a> (which, on most platforms, is another PRNG, but is itself seeded by whatever actual random data is available).</p>
<p>If you want the sequence to be repeatable, for testing, you can call the <code>seed</code> function manually. For example, this program:</p>
<pre><code>from random import randint, seed
seed(42)
z = input("What's the max number you want me to guess?")
choice = randint(1, int(z))
print(choice)
</code></pre>
<p>â€¦ will give you <code>2</code> every time you ask for a random number between 1 and 10.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to check whether the same number is being guessed by random, just use <code>print</code>, to check it. Here:</p>
<pre><code>from random import *
z = int(input("What's the max number you want me to guess?"))
choice = randint(1,z)
print("The number that I guessed:",choice)
if choice == z:
    print("I gussed it! I got lucky.")
else:
    print("I couldn't guess it, I got unlucky.")
</code></pre>
</div>
<span class="comment-copy">The random number generated is <i>random</i>. You cannot know beforehand which number will be generated. If you want to see which number is generated, you can print it out.</span>
<span class="comment-copy">If you want the sequence of random numbers generated by your program to be repeatable, you can use the <a href="https://docs.python.org/3/library/random.html#random.seed" rel="nofollow noreferrer"><code>seed</code></a> function (or you can save the state with <code>getstate</code> and restore it with <code>setstate</code>, or you can create a <code>Random</code> instance and pickle and unpickle it, etc.).</span>
<span class="comment-copy">Hey, Miller. Thank you so much. I just did as what you said. then I found out that the choice which is suppose to be a variable is actually a string "randint(1.10)"(I try 10 as the max number). So this code didn't realize what i want to do at the beginning. I try to make choice = randint(1,z). Visual studio told me that TypeError: unsupported operand type(s) for +: 'set' and 'int'. How could i do with it?</span>
<span class="comment-copy">Soooo Helpful! My curiosity has blown up!  There are so many things interesting in Python.</span>
<span class="comment-copy">I just find out that the trivial problem which is also crucial mistake is that I didn't put int in front of the z.  Thank you soooo much for giving me detailed answer.</span>
