<div class="post-text" itemprop="text">
<pre><code>list =
[{'name':'test1', 'start_time': '05-24-2015, 05:47 PM'},
{'name':'test2', 'start_time': '04-24-2018, 02:23 PM'},
{'name':'test3', 'start_time': '06-23-2018, 01:41 PM'}]
</code></pre>
<p>I want to sort the order of dictionaries by the start time, but the start time is a string.  I'm not sure if this is the best way to do this.</p>
<p>I've tried this solution below which works, but ignores the year which makes sense.  I'm guessing I need to remove the dashes, whitespaces and comma's before sorting?</p>
<pre><code>list = sorted(list, k['time_start'], reverse=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Strings just get sorted by alphabetical order, so of course <code>05-24-2015</code> comes after <code>04-24-2018</code>, as you seem to already understand.</p>
<p>(This is one reason a lot of software uses <code>YYYY-MM-DD</code> date formats: then you <em>can</em> just sort them in alphabetical order and it works.)</p>
<p>To sort them by date order, you're going to need to parse the strings to date objects. Because there are so many different date and time formats, you have to be specific about which one you're using. The <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer"><code>strptime</code></a> function is the simplest way to do it (without third-party libraries like <a href="http://dateutil.readthedocs.io/" rel="nofollow noreferrer"><code>dateutil</code></a>, which can sometimes make it easier).</p>
<p>Also, you can't just use <code>k['time_start']</code> as a key function; you need a <em>function</em> that takes a <code>k</code> value and returns the corresponding sort key for it. You can do that inline with <code>lambda</code>, but I think it'll be easier to understand with an out-of-line <code>def</code>.</p>
<p>Also, <code>time_start</code> and <code>start_time</code> are not the same string, and the <code>key</code> argument to sorting functions is keyword-only in Python 3.x.</p>
<p>So:</p>
<pre><code>import datetime

def our_key(d):
    return datetime.datetime.strptime(d['start_time'], '%m-%d-%Y, %I:%M %p')
</code></pre>
<p>And now:</p>
<pre><code>list = sorted(list, key=our_key, reverse=True)
</code></pre>
<hr/>
<p>While we're at it, a couple more things:</p>
<ul>
<li>Don't name your list <code>list</code>. That's the name of the type, and if you later need to do something like, say, turn a tuple into a list, the error messages will be confusing.</li>
<li>If you want to sort a list in-place, you can just call its <code>sort</code> method, instead of building a sorted copy and then assigning it back to the same variable.</li>
</ul>
</div>
