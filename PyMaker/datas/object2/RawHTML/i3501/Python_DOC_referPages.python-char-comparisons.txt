<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4806911/string-comparison-technique-used-by-python">String comparison technique used by Python</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>So, I have been working in some problems that require that the code organize a string in alphabetical order, so my first thoughts were to try using char comparisons.
If charA &lt; charB and all that, but couldn't make it. But I guess I don't really know how the char comparison Works.</p>
<p>Need a simple explanation on how they work.
Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>When you compare chars, their ordinal values are compared</p>
<p>So <code>'a' &lt; 'b'</code> just means <code>ord('a') &lt; ord('b')</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>charA</code> and <code>charB</code> are actually characters (that is, length-1 strings), then <code>charA &lt; charB</code> iff <a href="https://docs.python.org/3/library/functions.html#ord" rel="nofollow noreferrer"><code>ord(charA) &lt; ord(charB)</code></a>. </p>
<p>That is, if the <a href="https://en.wikipedia.org/wiki/Code_point" rel="nofollow noreferrer">Unicode code point</a> of charA is a smaller number than the Unicode code point of charB, it's a smaller character.</p>
<p>Notice that this means that <code>'Z' &lt; 'a'</code>, because in Unicode, all of the capital letters A-Z come before the lowercase letters a-z:</p>
<pre><code>&gt;&gt;&gt; ord('A')
65
&gt;&gt;&gt; ord('Z')
90
&gt;&gt;&gt; ord('a')
97
&gt;&gt;&gt; 90 &lt; 97 # of course
True
&gt;&gt;&gt; 'Z' &lt; 'a' # possibly surprising
True
</code></pre>
<hr/>
<p>If you want some kind of "friendly" comparison, you have to ask for it explicitly. </p>
<p>Often, you just want <a href="https://docs.python.org/3/library/stdtypes.html#str.casefold" rel="nofollow noreferrer"><code>casefold</code></a>, which aggressively gets rid of case information, so that, e.g., <code>A</code> and <code>a</code> can be treated the same:</p>
<pre><code>&gt;&gt;&gt; 'A'.casefold()
'a'
&gt;&gt;&gt; 'Z'.casefold() &lt; 'a'.casefold()
False
</code></pre>
<p>For full generality, you probably want something like the <a href="https://en.wikipedia.org/wiki/Unicode_collation_algorithm" rel="nofollow noreferrer">Unicode Collation Algorithm</a>. But Python doesn't come with that built in, so you'd need a third-party library like <a href="https://github.com/jtauber/pyuca" rel="nofollow noreferrer"><code>pyuca</code></a>.</p>
</div>
<span class="comment-copy">try out <code>ord()</code> and <code>chr()</code></span>
<span class="comment-copy">If <code>charA</code> and <code>charB</code> are actually characters (that is, length-1 strings), then <code>charA &lt; charB</code> iff <code>ord(charA) &lt; ord(charB)</code>. That is, if the Unicode code point of charA is a smaller number than the Unicode code point of charB, it's a smaller character.</span>
