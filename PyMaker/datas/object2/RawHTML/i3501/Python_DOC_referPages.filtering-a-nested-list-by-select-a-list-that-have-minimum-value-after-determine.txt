<div class="post-text" itemprop="text">
<p>I need to select the list that has a minimum value for each unique name after specifying the lists that have first priority for example </p>
<p>The original nested list:</p>
<pre><code>lst=[[['ahmad','a',5],['ahmad','a',6],['ahmad','c',4],['Emme','b',5],['Emme','b',4]],[['ahmad','b',5],['ahmad','b',6],['ahmad','c',6],['ahmad','c',5],['Meno','c',4],['Emme','b',5],['Moo','b',4],['Moo','a',7],['Moo','a',5]]]
</code></pre>
<p>Each list is expressed as: <code>['name', 'priority term', value]</code>.</p>
<p>The priority is for 'a' then 'b' and then 'c'.</p>
<p>The desired result:</p>
<pre><code>new_lst=[[['ahmad','a',5],['Emme','b',4]],[['ahmad','b',5],['Meno','c',4],['Emme','b',5],['Moo','a',5]]]
</code></pre>
<p><strong>Update:</strong></p>
<p>If the list :</p>
<pre><code>lst=[[['ahmad','red',5,20,'a'],['ahmad','red',6,21,'a'],['ahmad','blue',4,15,'c'],['Emme','red',5,30,'b'],['Emme','red',4,12,'b']],[['ahmad','blue',5,10,'b'],['ahmad','blue',6,13,'b'],['ahmad','blue',6,15,'c'],['ahmad','blue',5,30,'c'],['Meno','green',4,40,'c'],['Emme','green',5,35,'b'],['Moo','red',4,7,'b'],['Moo','red',7,3,'a'],['Moo','red',5,18,'a']]] 
</code></pre>
<p>Each list is expressed as: <code>['name','color',value, trivial number, 'priority term']</code>.</p>
<p>the desired result:</p>
<pre><code>new_list=[[['ahmad','red',5,20,'a'],['ahmad','blue',4,15,'c'],['Emme','red',4,12,'b']],[['ahmad','blue',5,10,'b'],['Meno','green',4,40,'c'],['Emme','green',5,35,'b'],['Moo','red',5,18,'a']]] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a dictionary to hold your prioritization order. Then use <code>sorted</code> followed by <code>toolz.unique</code> to sort and drop duplicate names:</p>
<pre><code>from toolz import unique

priority = {v: k for k, v in enumerate('abc')}

def prioritiser(x):
    return priority[x[1]], x[2]

res = [list(unique(sorted(sublist, key=prioritiser), key=lambda x: x[0])) \
       for sublist in lst]

print(res)

[[['ahmad', 'a', 5], ['Emme', 'b', 4]],
 [['Moo', 'a', 5], ['ahmad', 'b', 5], ['Emme', 'b', 5], ['Meno', 'c', 4]]]
</code></pre>
<p>If you don't have access to the 3rd party <a href="https://toolz.readthedocs.io/en/latest/" rel="nofollow noreferrer"><code>toolz</code></a>, note that the function is identical to the <code>itertools</code> <code>unique_everseen</code> <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">recipe</a>.</p>
</div>
<span class="comment-copy">'thank you for your  effort, I tried your method but i get this error --------------------------------------------------------------------------- TypeError                                 Traceback (most recent call last) &lt;ipython-input-387-71db320f41d1&gt; in &lt;module&gt;()       4 from toolz import unique       5  ----&gt; 6 priority = {v: k for k, v in dict(enumerate(list('abc'))).items()}       7        8 def prioritiser(x):  TypeError: 'list' object is not callable '</span>
<span class="comment-copy">Have you defined <code>list</code> as a variable in your code beforehand? If so, please rename it so it doesn't conflict with built-ins, e.g. <code>lst</code> or <code>L</code> instead of <code>list</code>.</span>
<span class="comment-copy">ok, thank you I will check</span>
