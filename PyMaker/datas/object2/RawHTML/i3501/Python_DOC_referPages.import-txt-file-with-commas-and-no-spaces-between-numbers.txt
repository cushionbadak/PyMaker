<div class="post-text" itemprop="text">
<p>I am currently trying to import a .txt file.  I typically like the code:</p>
<pre><code>GID = np.genfromtxt("C:\\Users\\Downloads\\Python\\myfile.txt")
q= GID[:,][:,0]
</code></pre>
<p>however I have even tried:</p>
<pre><code>with open('C:\\Users\\Downloads\\Python\\myfile.txt', 'r') as myfile:
UV = myfile.read().replace('\n', '')
UV = UV.replace(',', ' ')
</code></pre>
<p>The problem I am currently running into is that the file I am trying to import has over 1000 rows is supposed to have two columns of numbers.  However, it seperates the two columns with a comma and no space as follows:</p>
<pre><code>1234.56,-7.89
987.65,43.21
</code></pre>
<p>If I try to import the values with the genfromtxt command it just imports everything as "nan".  If I try importing the values using the "with open" command and replacing all of the commas with spaces I loose the format of having two collumns and over 1000 rows.  </p>
<p>Any advice?</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems to be a comma-separated-value file (csv). Use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">python <code>csv</code> module</a> or pandas <code>read_csv</code> function... Or if you want genfromtxt, you can use the delimiter parameter: </p>
<pre><code>genfromtxt('my_file.txt', delimiter=',')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('C:\\Users\\Downloads\\Python\\myfile.txt', 'r') as myfile:
    for UV in myfile.read().replace(',', ' ').split('\n'):
        print(UV)
</code></pre>
<p>you have to split the file.read('\n') instead of replacing the new line :) </p>
</div>
<span class="comment-copy">This worked!!  Wow, that was way too simple.  Thank you for your help.</span>
