<div class="post-text" itemprop="text">
<p>I have a code that reads the contents of a web page using a url address.</p>
<p>Earlier my code worked well, now there is a problem with the site security certificate. To solve the problem with IE, I completed importing the certificate to trusted sites, and the problem is solved.</p>
<p>But when I run this code: </p>
<pre><code>df = pd.read_html(i,header=0)[0]
</code></pre>
<p>I get an error:</p>
<pre><code>Traceback (most recent call last):
  File "D:\Distrib\Load_Data_from_Flat_ver_1.py", line 95, in &lt;module&gt;
    df = pd.read_html(i,header=0)[0]
  File "C:\Program Files\Python36\lib\site-packages\pandas\io\html.py", line 915, in read_html
    keep_default_na=keep_default_na)
  File "C:\Program Files\Python36\lib\site-packages\pandas\io\html.py", line 749, in _parse
    raise_with_traceback(retained)
  File "C:\Program Files\Python36\lib\site-packages\pandas\compat\__init__.py", line 385, in raise_with_traceback
    raise exc.with_traceback(traceback)
ssl.CertificateError: hostname '10.89.174.12' doesn't match 'localhost'
</code></pre>
<p>Can anyone help me with this problem?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>What is the error</strong></p>
<p>Reading the PSL documentation of <a href="https://docs.python.org/3/library/ssl.html#ssl.match_hostname" rel="nofollow noreferrer">ssl</a> package, you will find an example where this specific error occurs.</p>
<pre><code>&gt;&gt;&gt; cert = {'subject': ((('commonName', 'example.com'),),)}
&gt;&gt;&gt; ssl.match_hostname(cert, "example.com")
&gt;&gt;&gt; ssl.match_hostname(cert, "example.org")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/home/py3k/Lib/ssl.py", line 130, in match_hostname
ssl.CertificateError: hostname 'example.org' doesn't match 'example.com'
</code></pre>
<p>When checking Server Common Name the second check fails. It is exactly what happens in your case.</p>
<p><strong>Python path</strong></p>
<p>Referring to the Pandas <a href="http://pandas.pydata.org/pandas-docs/version/0.22/generated/pandas.read_html.html" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>io : str or file-like
      A URL, a file-like object, or a raw string containing HTML.
      Note that lxml only accepts the http, ftp and file url protocols. If you
      have a URL that starts with 'https' you might try removing the 's'.</p>
</blockquote>
<p>You cannot read from HTTPS with the <code>read_html</code> method.</p>
<p>To circonvolve this problem, first download the resource using PSL over HTTPS without verifying the SSL context:</p>
<pre><code>from urllib import request
import ssl

url="https://example.com/data.html"
context = ssl._create_unverified_context()
response = request.urlopen(url, context=context)
html = response.read()
</code></pre>
<p>And then process it with Pandas:</p>
<pre><code>import pandas as pd
df = pd.read_html(html)
</code></pre>
<p><strong>Create a Valid Context</strong></p>
<p>As pointed out by @AlastairMcCormack:</p>
<blockquote>
<p><code>context = ssl._create_unverified_context()</code> should only be used for localhost or testing.</p>
</blockquote>
<p>If accessing the resource without verifying the SSL context solves your problem, then it is time to <strong>create a valid context</strong> (<a href="https://markusholtermann.eu/2016/09/ssl-all-the-things-in-python/" rel="nofollow noreferrer">intro</a>, <a href="https://www.programcreek.com/python/example/72757/ssl.SSLContext" rel="nofollow noreferrer">snippets</a>) in order to safely fetch your resource.</p>
<p><strong>Server path</strong></p>
<p>You can also create a new certificate where the Common Name does match the server domain (or its IP). Here <code>localhost</code> seems come from a development certificate that was sent to production server, this could not work properly.</p>
<p>Anyway this point does not solve the fact than <code>read_html</code> does not handle HTTPS connections.</p>
</div>
<span class="comment-copy">Welcome on SO, could you provide a <a href="https://stackoverflow.com/help/mcve">mcve</a> to help us understand what is happening. At a first glance it looks like your server Common Name does not match.</span>
<span class="comment-copy">Great answer but it should be highlighted that <code>context = ssl._create_unverified_context()</code> should only be used for localhost or testing</span>
<span class="comment-copy">@AlastairMcCormack I will update my answer accordingly</span>
