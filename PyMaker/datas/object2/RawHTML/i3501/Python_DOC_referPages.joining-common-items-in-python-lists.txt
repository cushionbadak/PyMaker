<div class="post-text" itemprop="text">
<p>I have two lists:                  </p>
<pre><code>list1 = ['a','d']
list2 = [('a', '1'), ('b', '2'), ('c', '3'), ('d', '4')]
</code></pre>
<p>I want to either append list1 or create a new list that results in:</p>
<pre><code>[('a', '1'), ('d', '4')]
</code></pre>
<p>I've tried using index with no luck.                </p>
</div>
<div class="post-text" itemprop="text">
<p>You can achieve this simply using a list comprehension:</p>
<pre><code>list3 = [t for t in list2 if t[0] in list1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer">filter()</a> to filter the elements that interest you:</p>
<pre><code>list1 = ['a','d']
list2 = [('a', '1'), ('b', '2'), ('c', '3'), ('d', '4')]

# operating on a set makes the lookups O(1) which is faster then O(n) for lists.
# List with few elements (4-5) are still better then a set() due to the overhead
# a set introduces
whatIwant = set(list1)

# python 2.x filter returns a list directly
list3 = filter(lambda x: x[0] in whatIwant,list2) 


print(list3)
</code></pre>
<p>Output:</p>
<pre><code>[('a', '1'), ('d', '4')]
</code></pre>
<p><code>filter(function, iterable)</code> operates on any <code>iterable</code> and applies the function on each element and to determine if the element of the iterable should be in the output (<code>function(item) == True</code>) or not (<code>function(item) == False</code> )</p>
<hr/>
<p>For python3: <code>filter(...)</code> will return an iterator, so you need to stuff the result into a <code>list(...)</code> to get a list returned.</p>
</div>
<div class="post-text" itemprop="text">
<p>Create a dictionary from your key, value list <code>list2</code>.</p>
<pre><code>&gt;&gt;&gt; list1 = ['a', 'd']
&gt;&gt;&gt; list2 = [('a', '1'), ('b', '2'), ('c', '3'), ('d', '4')]
&gt;&gt;&gt; d2 = dict(list2)
</code></pre>
<p>The dict looks like this:</p>
<pre><code>&gt;&gt;&gt; d2
{'a': '1', 'c': '3', 'd': '4', 'b': '2'}
&gt;&gt;&gt; d2['c']
'3'
</code></pre>
<p>Get the values for the keys in <code>list1</code>.</p>
<pre><code>&gt;&gt;&gt; [(k, d2[k]) for k in list1]
[('a', '1'), ('d', '4')]
</code></pre>
<p>Also, you might prefer numeric data instead of numbers encoded as strings. In this case, create the dictionary with </p>
<pre><code>&gt;&gt;&gt; d2 = dict((k, int(v)) for k,v in list2)
&gt;&gt;&gt; d2
{'a': 1, 'c': 3, 'd': 4, 'b': 2}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you convert the list <code>list2</code> into a dict, it would be easier for you do what you want</p>
<pre><code>&gt;&gt;&gt; list1 = ['a','d']; list2 = [('a', '1'), ('b', '2'), ('c', '3'), ('d', '4')] 
&gt;&gt;&gt; dict2 = dict(list2)
&gt;&gt;&gt; list3 = [(e, dict2[e]) for e in list1]
&gt;&gt;&gt; 
&gt;&gt;&gt; list3
[('a', '1'), ('d', '4')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a solution</p>
<pre><code>list1 = ['a','d'] 
list2 = [('a', '1'), ('b', '2'), ('c', '3'), ('d', '4')]
my_set = set(list1)
new_list = [(x, y) for x, y in list2 if x in my_set]
</code></pre>
</div>
<span class="comment-copy">FYI: you aquired a downvote/downvotes because you did not present what you have tried and <i>how</i> it did not work.</span>
<span class="comment-copy"><a href="http://idownvotedbecau.se/noattempt/" rel="nofollow noreferrer">idownvotedbecau.se/noattempt</a>  ... and its a dupe, I cant find it. Something along the lines of "select elemnents from list by element in other list" - normally its a list and a list of indexes wanted, in this case its slightly different though similar. This "problem" could be soved with a simple <code>for el in list2:</code> and append it to a result list</span>
<span class="comment-copy">Thank you very much! Works as desired.</span>
<span class="comment-copy">Note that you are creating <code>set(list1)</code> as many times as your lambda function is called. I recommend to compute it once, before filtering.</span>
<span class="comment-copy">If your using python3, you would need to wrap <code>list()</code>, since <code>filter()</code> gives back a iterator.</span>
<span class="comment-copy">This answer is same as of <a href="https://stackoverflow.com/a/51001238/8278951">Sunitha</a>.</span>
<span class="comment-copy">@RahulGoswami so what? I hit "post" a few seonds later and explained what's going on. What makes this answer "not useful" to you?</span>
<span class="comment-copy">Sorry, but when I did the comment, the answer was exactly as same as the one. I guess you added the explanation in further edits. I just upvoted this. Cheers! :)</span>
<span class="comment-copy">@RahulGoswami no problem, glad we could help :)</span>
<span class="comment-copy">It does have a couple of limitations, i.e. no duplicates keys in <code>list2</code> and that all things in <code>list1</code> exist in <code>list2</code>, but it is unclear if this is material to the OP.</span>
<span class="comment-copy">Also it would be better to put <code>set(list1)</code> outside the loop, so you don't create a new set on each iteration.</span>
<span class="comment-copy">@RoadRunner Nice observation! I will edit my answer. Thanks.</span>
<span class="comment-copy">@AChampion true, the version the answer is better.</span>
