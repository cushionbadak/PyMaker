<div class="post-text" itemprop="text">
<p>I have a data frame column named 'movie_title' which has movie names along with year. Following are two types of movie titles in the above mentioned column.</p>
<pre><code>title1='Toy Story (1995)'
title2='City of Lost Children, The (Cité des enfants perdus, La) (1995)'
</code></pre>
<p>I want to split this into two columns with title and release year. I was able to extract years successfully using following regex:</p>
<pre><code>re.findall('[1-2][0-9]{3}', string)[0]
</code></pre>
<p>Need help in writing another regex which can extract titles(excluding year info along with brackets). </p>
<p>e.g. title1 and title2 should look like:</p>
<pre><code>title1='Toy Story'
title2='City of Lost Children, The (Cité des enfants perdus, La)'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This does the trick almost:</p>
<pre><code>.(?:[^\((0-9)])+
</code></pre>
<p>You just need to get rid of the trailing <code>)</code> that it doesn't capture. Will update this answer if I find anything better.</p>
<p><strong>Another thought:</strong> If you are sure that the year will appear at the end of every movie title, why not just strip the last bit off? So remove <code>(xxxx)</code> off of every movie string you have?</p>
</div>
<div class="post-text" itemprop="text">
<p>to get the year and eliminate the parenthesis at the end use the regex "find the first string with at least one digit followed by a parenthesis" the regex looks like this:
'\d+(?=\))' </p>
<p>1.) \d means find a digit, the + infront means find at least one of these</p>
<p>2.) (?=) means followed by. \) means the character ')'. so (?=\)) means followed by a ')'</p>
<p>3.) putting these all together means a string of at least one digit followed by ')'</p>
<p>INPUT: City of Lost Children, The (Cité des enfants perdus, La) (1995)</p>
<p>OUTPUT: 1995 </p>
<p>to get the movie tittle use the regex "get the first string with any number of non digits followed by '(' looks like this: '\D*(?=\()'</p>
<p>1.)/D means non digit. with * it means any number of non digits</p>
<p>2.)again we see (?=\() means followed by '('</p>
<p>3.) all together it means any number of non digits followed by '('</p>
<p>INPUT: City of Lost Children, The (Cité des enfants perdus, La) (1995)</p>
<p>OUTPUT: City of Lost Children, The (Cité des enfants perdus, La)</p>
<p>note: the regex for getting the tittle assumes there are no digits in the tittle.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; titles = [
...     'Toy Story (1995)',
...     'City of Lost Children, The (Cité des enfants perdus, La) (1995)',
... ]
&gt;&gt;&gt;
&gt;&gt;&gt; import re
&gt;&gt;&gt;
&gt;&gt;&gt; for title in titles:
...     m = re.match(r'^(.*) \((19\d\d|20\d\d)\)$', title)
...     name, year = m.groups()
...     print(f'name: {repr(name)} year: {repr(year)}')
...
name: 'Toy Story' year: '1995'
name: 'City of Lost Children, The (Cité des enfants perdus, La)' year: '1995'
</code></pre>
<p>Explanation of <code>^(.*) \((19\d\d|20\d\d)\)$</code> from <a href="https://regex101.com/" rel="nofollow noreferrer">regex101.com</a>:</p>
<p><a href="https://i.stack.imgur.com/eRlTM.png" rel="nofollow noreferrer"><img alt="explanation" src="https://i.stack.imgur.com/eRlTM.png"/></a></p>
</div>
<span class="comment-copy">Have you tried any code yet?</span>
<span class="comment-copy">try your code out here: <a href="https://regex101.com/" rel="nofollow noreferrer">regex101.com</a></span>
<span class="comment-copy">I suppose the easiest way to make sure your code doesn't fail on things like <code>MythMakers Visions (1990): Jon Pertwee (1991)</code> is to not write any code, but you should probably try to write some code anyway.</span>
<span class="comment-copy">@TimBiegeleisen..i was able to extract years by using re.findall("[1-2][0-9]{3}', string). But, do not know what to do for extracting the titles correctly.</span>
<span class="comment-copy">@abarnert...i did not think that way, thanks for pointing out. Any suggestions on how to pick it up? The above regex I wrote did not come up with two values for a single title, so I am assuming the dataset does not have such a record. However, you are making a valid point.</span>
<span class="comment-copy">Thank you! Can you please elaborate how did you come up with this regex? I am pretty new to this! TIA.</span>
<span class="comment-copy">Of course, I basically go on <a href="https://regexr.com/" rel="nofollow noreferrer">regexr.com</a> and play around with things until I get something that works well. Of course, knowing the basics of how certain character classes work definitely helps. But 20-30 minutes of playing around on this site and you will become pretty solid at it.</span>
<span class="comment-copy">@Messa..please elaborate your regex</span>
<span class="comment-copy">@shashankkumar I've added explanation screenshot. Please read documentation of the re module, it is all there: <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a> Basically I'm just looking for "something (something)" where the second "something" must be 19NN or 20NN. Both "somethings" are captured so I can store the matching part to Python variables.</span>
