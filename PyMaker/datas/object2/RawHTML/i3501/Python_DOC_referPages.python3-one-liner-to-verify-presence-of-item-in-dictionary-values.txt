<div class="post-text" itemprop="text">
<p>I am looking for a possible one-liner to return the equivalent of</p>
<pre><code>'A' in ['A', 'B', 'C']
</code></pre>
<p>but in a following case:
Suppose I have a dictionary containing lists as values, like:</p>
<pre><code>dictionary = {'key1': ['A', 'B', 'C', 'D'], 
              'key2': ['E', 'F'], 
              'key3': ['G', 'H', 'I']}
</code></pre>
<p>So far the closest I could get was something like:</p>
<pre><code>r = {v[0] for k, v in dictionary.items() if 'A' in v}
</code></pre>
<p>however this returns a set of length 0 or 1 returning the list element for the presence of which I want to check.</p>
<p>I would want to get only True/False regarding if 'A' is present in any of the lists stored in the dictionary values.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a> built-in function:</p>
<pre><code>any('A' in v for v in dictionary.values())
</code></pre>
<p><code>any()</code> is optimum by itself in terms of returning <code>True</code> as soon as encountering a true proposition but if you wanna boost the performance even more you can use <code>set</code> objects instead of lists for preserving the values for their membership checking is linear. </p>
</div>
<div class="post-text" itemprop="text">
<p>If you like to stop iterating over all the dict values even after finding a match, use <code>itertools.takewhile</code></p>
<pre><code>import itertools
if list(itertools.takewhile(lambda v: 'J' in v, dictionary.values())):
    # Found
else:
    # Not found
</code></pre>
</div>
<span class="comment-copy">thanks! It works perfectly.</span>
<span class="comment-copy">Short, efficient and readable. <code>any</code> is great !</span>
