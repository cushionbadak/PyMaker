<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6181935/how-do-you-create-different-variable-names-while-in-a-loop">How do you create different variable names while in a loop?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I have 109 csv files that I want to import using a function or a for-loop. So far I have imported the files manually using the following function:</p>
<pre><code>import numpy as np 

plain_table1 = np.genfromtxt('File-path\File-name1.csv', delimiter=',')
...
plain_table109 = np.genfromtxt('File-path\File-name109.csv', delimiter=',')
</code></pre>
<p>Is there a simpler way to import all the data files without having to type all of them in manually?</p>
</div>
<div class="post-text" itemprop="text">
<p>Using a dictionary comprehension, you can construct a dictionary to store your data, using numeric keys to identify arrays:</p>
<pre><code>import numpy as np 

d = {i: np.genfromtxt(f'File-path\File-name{i}.csv', delimiter=',') \
     for i in range(1, 110)}
</code></pre>
<p>Then access, for example, the array in <code>File-name100.csv</code> via <code>d[100]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>In its simplest form, use a <code>for</code> loop and a range (assuming that your file names are really numbered 1 through 109). Inside the loop, you could append to a list:</p>
<pre><code>import numpy as np 

first = 1
last = 109
plain_tables = []

for i in range(first, last + 1):
    plain_tables.append(np.genfromtxt('File-path\File-name%s.csv' % i, delimiter=',')
</code></pre>
<p>Note the %s in the string. That's a placeholder. Together with the <code>%</code> operator this can be used to get a variable into a string. </p>
<p>Other features exist in Python to do the same, like <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehensions</a>:</p>
<pre><code>plain_tables = [np.genfromtxt('File-path\File-name%s.csv' % i, delimiter=',')
                for i in range(first, last + 1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should do the work for any number of files as long as all are '.CSV'</p>
<pre><code>import numpy as np
from os import listdir, path
plain_table = {file: np.genfromtxt(path.join(File-path,file), delimiter=',') for file in  listdir(FolderPath)}
print(len(plain_table)) 
</code></pre>
</div>
<span class="comment-copy">You find yourself in need of lots of variables called like <code>var1, var2, var3, ... varN</code> - you probably should use lists (or higher dimensional arrays) instead.</span>
<span class="comment-copy">Your question is a specific instance of the general problem in the linked dupe: use a dict. Or maybe a big array but that needs further conditions. (Don't look at the other answers on the linked question ;)</span>
