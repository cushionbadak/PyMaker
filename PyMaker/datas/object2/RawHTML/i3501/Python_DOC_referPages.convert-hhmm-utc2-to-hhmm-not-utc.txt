<div class="post-text" itemprop="text">
<p>I have a dictionary that contains times, set up like</p>
<pre><code>{ '2018-06-22': { 24: { 24: { 'Team1': 'Nigeria',
                              'Team2': 'Iceland',
                              'Time': '18:00',
                              'Timezone': 'UTC+ ... }}
</code></pre>
<p>How can I take the Time and change from whatever zone it's in (<code>UTC+2</code>, <code>UTC</code>, <code>UTC+3</code>, etc) and change to, say, USA Chicago (UTC-5)?</p>
<p>I've tried using the <a href="https://stackoverflow.com/a/4771733/4650297">solution here</a> but get <code>1900-01-01 10:00:00-05:00</code>.  The date is fine, I can remove that. I am not sure why the time though seems to be a range? I was expecting 24 hour format output.</p>
<pre><code>from datetime import datetime
from dateutil import tz

def update_timezone(time, old_zone, new_zone):
    """
    Takes an old timezone and converts to the new one
    """
    from_zone = tz.gettz(old_zone)
    to_zone = tz.gettz(new_zone)

    utc = datetime.strptime(time, "%H:%M")

    utc = utc.replace(tzinfo=from_zone)
    central = utc.astimezone(to_zone)
    return central

print(update_timezone("18:00", "UTC+3","UTC-5"))
</code></pre>
<p>Output:</p>
<blockquote>
<p>1900-01-01 10:00:00-05:00</p>
</blockquote>
<p>Desired output:</p>
<blockquote>
<p>11:00</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>The date is fine, I can remove that. </p>
</blockquote>
<p>Better than converting to a string and then trying to munge that, just keep it as a <code>datetime</code> object until you need a string, and then use the <code>strftime</code> method to format it however you want. For example:</p>
<pre><code>&gt;&gt;&gt; dt.strftime('%H:%M')
10:00
</code></pre>
<p>Or, if you're using f-strings or <code>str.format</code>, you can even put that directly in the format spec for a <code>datetime</code> object:</p>
<pre><code>&gt;&gt;&gt; print(f'The time sponsored by Accurist is {dt:%H:%M}, precisely.')
The time sponsored by Accurist is 10:00, precisely.
</code></pre>
<blockquote>
<p>I am not sure why the time though seems to be a range? </p>
</blockquote>
<p>Actually, it's not. The default <code>str</code> format for displaying <code>datetime</code> objects is based on <a href="https://en.wikipedia.org/wiki/ISO_8601" rel="nofollow noreferrer">ISO 8601</a>.<sup>1</sup> For local times that know their time zone's <a href="https://en.wikipedia.org/wiki/UTC_offset" rel="nofollow noreferrer">UTC offset</a> at the time in question, it's included as a <code>+02:00</code> or <code>-05:00</code> on the end.</p>
<blockquote>
<p>I was expecting 24 hour format output.</p>
</blockquote>
<p>That's already the default for the <code>str</code> output. </p>
<p>But, more importantly, that's what you always get when you ask <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer"><code>strftime</code></a> for <code>%H</code>. (If you want 12 hour, that's <code>%I</code>.)</p>
<hr/>
<p>1. But not with default settings for all of the options, like <code>T</code> as the time separator. If you want that, you have to call the <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.isoformat" rel="nofollow noreferrer"><code>isoformat</code></a> method.</p>
</div>
<span class="comment-copy"><code>1900-01-01 10:00:00-05:00</code> is not a range, it means 1900 Jan 1, 10:00, 5 hours offset from UTC.</span>
<span class="comment-copy">@abarnert - OH! Wow. So it seems to be working correctly then. Whoops! Thanks for pointing that out. (I'll delete this post shortly)</span>
<span class="comment-copy">Also, don't convert the <code>datetime</code> to a string and then try to strip stuff off of the result; just keep it around as a <code>datetime</code>, and then use <code>strftime</code> to format it however you want for printout. Like <code>dt.strftime('%H:%S')</code>. Or, if you're using <code>str.format</code> or f-strings, you can even just throw the strftime format into the format spec: <code>print(f'The time is {dt:%H:HS}')</code>.</span>
<span class="comment-copy">@abarnert if you want to put both comments in an answer, I'll mark it. Or, should I just delete the question?</span>
<span class="comment-copy">Answeredâ€¦ but I think maybe this is just a dup of the question you already linked to in your question? Let's give it time and see if anyone else votes to close.</span>
