<div class="post-text" itemprop="text">
<p>I'd like to write my loop in a more compact form. When I have code in this form, everything works fine:</p>
<pre><code>a=-1
while a &lt;0:
    user_move()
    if (nastede[1]==X) and (nastede[2]==X) and (nastede[3]==X):
        print("Game Over")
        break

print("END")
</code></pre>
<p>But when I try to use the code in this form, my loop does not break:</p>
<pre><code>y=(nastede[1] and nastede[2] and nastede[3])

a=-1
while a &lt;0:
    user_move()
    if y == X:
        print("Game Over")
        break

print("END")
</code></pre>
<p>Why does my loop in the second situation not break with <code>nastede[]</code> inside <code>y</code> ? </p>
<p><strong>After changes (All Code):</strong></p>
<pre><code>nastede=[" ", " ", " ", " ", " ", " ", " ", " ", " "]
X="X"

def list_global():
    global nastede
    print(" ",nastede[0],"| ",nastede[1]," | ",nastede[2]," ")
    print("---------------")
    print(" ",nastede[3],"| ",nastede[4]," | ",nastede[5]," ")
    print("---------------")
    print(" ",nastede[6],"| ",nastede[7]," | ",nastede[8]," ")

def user_move():
    a=-1
    while a&lt;0:
        move_hum=int(input("Write a number from 1 to 8 ?\n"))
        if (nastede[move_hum] != X) and (nastede[move_hum] != O):
            nastede[move_hum] = "X"
            list_global()
            break
        else:
            print("Write different number")


a=-1
while a &lt;0:
    user_move()
    if all(map(lambda x: x == X, nastede)):
        print("Game Over")
        break

print("END")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your condition <code>y=(nastede[1] and nastede[2] and nastede[3])</code> will bind <code>y</code> to <code>True</code>, and unless <code>X</code> is <code>True</code> also that will not be evaluated as you are expecting.</p>
<p>Better use <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a> combined with <code>map</code>:</p>
<pre><code>...
if all(map(lambda x: x == X, nestede))
...
</code></pre>
<p>Here you have a <a href="https://repl.it/repls/SomeLinenProgrammingtool" rel="nofollow noreferrer">minimal example</a></p>
<p><strong>EDIT</strong>:
Since <code>all</code> checks all this code would fail, because you only check from the index <code>1</code> to <code>3</code>, for that use a <code>slice</code>:</p>
<pre><code>...
if all(map(lambda x: x == X, nestede[1:4]))
...
</code></pre>
<p>remember that python slices are not tail inclusive <code>[x,y)</code> </p>
</div>
<div class="post-text" itemprop="text">
<p><code>(nastede[1]==X) and (nastede[2]==X) and (nastede[3]==X)</code>  and <code>(nastede[1] and nastede[2] and nastede[3])</code> are not same. In the first statement every value needs to be equal to <code>X</code> to get the truthy value. But in  the second code if all the values are truthy even they are not equal to <code>X</code> then the expression will return <code>True</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>Also better:</p>
<pre><code>....
if all(i == X for i in nestede):
...
...
</code></pre>
</div>
<span class="comment-copy">Is this your full code?</span>
<span class="comment-copy">in the second example <code>y</code> only contains a boolean</span>
<span class="comment-copy">why are you redefining <code>all</code>? you can use it straight away by default.</span>
<span class="comment-copy">Yes, now i see. I removed redefining 'all' from my code. But still loop does not break, maybe you see a little more wrong things in my code?</span>
<span class="comment-copy">I added the whole code. I will be very grateful for your help</span>
<span class="comment-copy"><code>def all(iterable):         for element in iterable:             if not element:                 return False         return True     a=-1     while a &lt;0:         user_move()         if if all(map(lambda x: x == X, nastede)):                 print("Game Over")             break</code>  When i tried use the code in this form ^, Python still don't break a loop. Maybe i must change something in lambda? but i read these <a href="https://www.python-course.eu/lambda.php" rel="nofollow noreferrer">python-course.eu/lambda.php</a> and all look good.</span>
<span class="comment-copy">@MaddieGraham, can you update your question with that code please? im seeing some serius problems there but i cannot confirm without propper identation.</span>
<span class="comment-copy">Okey, I added the code with changes.</span>
<span class="comment-copy">@MaddieGraham, the edit should explain why it wasn't working.</span>
<span class="comment-copy">Everything works! Thank you very much, I little thought about it ...</span>
