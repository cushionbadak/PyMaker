<div class="post-text" itemprop="text">
<p>I use yattag to create HTML, and in my code, I want to loop over database records, and, dynamically, creating HTML tables.</p>
<p>For example, if the number of divs in the  is 5 : </p>
<pre><code>with tag('table', klass='all-pr'):
        with tag('tr'):
            with tag('td'):
                for zone in all_zones:
                    clear += 1
                    with tag('div', klass='pr' + ' ' + risk_alert):
                        text(zone['name'])
                    with tag('div', klass='link-pr'):
                        text('-')
                    if (clear % 5 == 0):
                        # create a new &lt;tr&gt;
</code></pre>
<p>Update : 
ok, the html I expect is : </p>
<pre><code>&lt;table class="all-pr" &gt;
 &lt;tr&gt;
    &lt;td&gt; 
        &lt;div class="pr risk-alert-high"&gt;114&lt;/div&gt;
        &lt;div class="link-pr"&gt;-&lt;/div&gt;
        &lt;div class="pr risk-alert-high"&gt;115&lt;/div&gt;
        &lt;div class="link-pr"&gt;-&lt;/div&gt;
        &lt;div class="pr risk-alert-high"&gt;116&lt;/div&gt;
        &lt;div class="link-pr"&gt;-&lt;/div&gt;
        &lt;div class="pr risk-alert-high"&gt;117&lt;/div&gt;
        &lt;div class="link-pr"&gt;-&lt;/div&gt;
        &lt;div class="pr risk-alert-high"&gt;118&lt;/div&gt;
        &lt;div class="link-pr"&gt;-&lt;/div&gt;
    &lt;/td&gt;    
 &lt;/tr&gt;
 &lt;!-- BREAK HERE --&gt;
 &lt;tr&gt;
    &lt;td&gt; 
        &lt;div class="pr risk-alert-high"&gt;119&lt;/div&gt;
        &lt;div class="link-pr"&gt;-&lt;/div&gt;
        &lt;div class="pr risk-alert-high"&gt;120&lt;/div&gt;
        &lt;div class="link-pr"&gt;-&lt;/div&gt;
        &lt;div class="pr risk-alert-high"&gt;121&lt;/div&gt;
        &lt;div class="link-pr"&gt;-&lt;/div&gt;
        &lt;div class="pr risk-alert-high"&gt;122&lt;/div&gt;
        &lt;div class="link-pr"&gt;-&lt;/div&gt;
        &lt;div class="pr risk-alert-high"&gt;123&lt;/div&gt;
        &lt;div class="link-pr"&gt;-&lt;/div&gt;
    &lt;/td&gt;    
 &lt;/tr&gt;
    ...
    ...
 &lt;/table&gt; 
</code></pre>
<p>The (part of) CSS : </p>
<pre><code>.link-pk, .pr {
    text-align: center;
    float: left;
    margin-top: 5px;
    padding: 5px;
    width : 25px
}
</code></pre>
<p>And, after, I convert the HTML in PDF with PDFKIT lib.</p>
<p>But I don't know how to close a tag and (re)create new one, and go on with the loop...
Any idea ?</p>
<p>Thanks,
F.</p>
</div>
<div class="post-text" itemprop="text">
<p>So the problem is not really about Yattag, right? Your problem is to take the elements by groups of 5 (or whatever fixed number).
For this I'd use the <code>islice</code> method from the itertools module.</p>
<p>You have an example of how to use this function to create a <code>take</code> function that takes the first <code>n</code> elements of an iterable:</p>
<p><a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">https://docs.python.org/3/library/itertools.html#itertools-recipes</a></p>
<p>Using this <code>take</code> function, you can consume an iterable by groups of <code>n</code> elements. Here's the solution to your particular problem:</p>
<pre><code>from itertools import islice
from yattag import Doc, indent

def take(n, iterable):
    "Return first n items of the iterable as a list"
    return list(islice(iterable, n))

def zones_to_html(zones):
    zones_iterator = iter(zones) # in case zones is not already an iterator
    doc, tag, text, line = Doc().ttl()
    with tag('table', klass="all-pr"):
        while True:
            first5 = take(5, zones_iterator)
            if len(first5) == 0:
                break
            else:
                with tag('tr'):
                    with tag('td'):
                        for zone in first5:
                            line('div', zone['name'], klass = 'pr ' + zone['risk_alert'])
                            line('div', '-', klass='link-pr')
    return doc.getvalue()

# Example of use:
if __name__ == '__main__':
    all_zones = ({'name': i, 'risk_alert': 'high'} for i in range(114, 129))
    print(indent(zones_to_html(all_zones)))
</code></pre>
<p>I used the <code>line</code> method of Yattag, which is a shortcut described here: <a href="http://www.yattag.org/#shortcut-for-nodes-that-contain-only-text" rel="nofollow noreferrer">http://www.yattag.org/#shortcut-for-nodes-that-contain-only-text</a></p>
</div>
<span class="comment-copy">It's not clear what you're trying to obtain. Could you write the HTML output you're expecting?</span>
<span class="comment-copy">Thanks :). I'll test your code asap :)</span>
