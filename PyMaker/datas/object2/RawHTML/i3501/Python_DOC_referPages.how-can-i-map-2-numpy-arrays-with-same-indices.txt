<div class="post-text" itemprop="text">
<p>I am trying to map 2 numpy arrays as [x, y] similar to what zip does for lists and tuples.</p>
<p>I have 2 numpy arrays as follows:</p>
<pre><code>arr1 = [1, 2, 3, 4]
arr2 = [5, 6, 7, 8]
</code></pre>
<p>I am looking for an <code>output as np.array([[[1, 5], [2, 6], [3, 7], [4, 8]]])</code></p>
<p>I tried this but it maps every value and not with same indices. I can add more if conditions here but is there any other way to do so without adding any more if conditions.</p>
<pre><code>res = [arr1, arr2] for a1 in arr1 for a2 in arr2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for <a href="https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.dstack.html" rel="nofollow noreferrer"><strong><code>np.dstack</code></strong></a></p>
<blockquote>
<p>Stack arrays in sequence depth wise (along third axis).</p>
</blockquote>
<pre><code>np.dstack([arr1, arr2])

array([[[1, 5],
        [2, 6],
        [3, 7],
        [4, 8]]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>IIUC, one way is to use <a href="https://docs.scipy.org/doc/numpy-1.14.0/reference/generated/numpy.vstack.html" rel="nofollow noreferrer"><code>numpy.vstack()</code></a> followed by <a href="https://docs.scipy.org/doc/numpy-1.14.0/reference/generated/numpy.ndarray.transpose.html" rel="nofollow noreferrer"><code>transpose()</code></a>:</p>
<pre><code>import numpy as np
arr1 = np.array([1, 2, 3, 4])
arr2 = np.array([5, 6, 7, 8])
print(np.vstack([arr1, arr2]).transpose())
#array([[1, 5],
#       [2, 6],
#       [3, 7],
#       [4, 8]])
</code></pre>
<p>Or you could pass the output of <code>zip</code> to the <code>array</code> constructor:</p>
<pre><code>print(np.array(zip(arr1, arr2)))
#array([[1, 5],
#       [2, 6],
#       [3, 7],
#       [4, 8]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The built in <code>zip</code> command is the job for you here.  It'll do exactly what you're asking.</p>
<pre><code>arr1 = [1,2,3,4]
arr2 = [5,6,7,8]
list(zip(arr1, arr2))
[(1, 5), (2, 6), (3, 7), (4, 8)]
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#zip</a></p>
</div>
<span class="comment-copy">Do you want a (1,4,2) array?  3d with that initial size 1 dimension.</span>
<span class="comment-copy">I did not know this existed +1</span>
<span class="comment-copy">It's numpy, something always exists ;)</span>
<span class="comment-copy">Thanks @user3483203. I tried the above and I am getting without comma-separated values.</span>
<span class="comment-copy">yeah my input is of this type <code>&lt;class 'numpy.ndarray'&gt;</code></span>
<span class="comment-copy">Oh that's just how your stdout represents a numpy array.  The values are separated, don't worry :)  Try converting to a list if you want to verify</span>
<span class="comment-copy">good approach, but OP is looking for a method specific to <code>numpy.ndarray</code> parameters and returns.</span>
