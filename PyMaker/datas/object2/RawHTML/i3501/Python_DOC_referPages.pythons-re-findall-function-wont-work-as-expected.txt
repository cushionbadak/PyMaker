<div class="post-text" itemprop="text">
<p>I'm trying to create a python script that will find all the files from a working directory with a certain name pattern.</p>
<p>I have stored all files in a list and then I have tried applying the re.findall method on the list to obtain only a list of files with that name pattern.</p>
<p>I have written this code:</p>
<pre><code># Create the regex object that we will use to find our files
fileRegex = re.compile(r'A[0-9]*[a-z]*[0-9]*.*')
all_files = []

# Recursevly read the contents of the working_dir/Main folder #:
for folderName, subfolders, filenames in os.walk(working_directory + "/Main"):
    for filename in filenames:
        all_files.append(filename)

found_files = fileRegex.findall(all_files)
</code></pre>
<p>I get this error at the last line of the code:</p>
<pre><code>TypeError: expected string or bytes-like object
</code></pre>
<p>I have also tried re.findall(all_files) instead of using the 'fileRegex' created prior to that line. Same error. Please tell me what am I doing wrong. Thank you so much for reading my post!</p>
<p>Edit(second question):
I have followed the answers and it's now working fine. I'm trying to create an archive with the files that match that pattern after I've found them. The archive was created however the way I wrote the code the whole path to the file gets included in the archive (all the folders from / up to the file). I just want the file to be included in the final .zip not the whole directories and subdirectories that make the path to it.</p>
<p>Here is the code. The generation of the .zipfile is at the bottom. Please give me a tip how could I solve this I've tried many things but none worked. Thanks:</p>
<pre><code># Project properties:

#  Recursively read the contents of the 'Main' folder which contains files with different names.
#  Select only the files whose name begin with letter A and contain digits in it. Use regexes for this.
#  Archive these files in a folder named 'Created_Archive' in the project directory. Give the archive a name of your choosing.


# Files that you should find are:
  # Aerials3.txt, Albert0512.txt, Alberto1341.txt


########################################################################################################################################
import os
import re
import zipfile
from pathlib import Path

# Get to the proper working directory
working_directory = os.getcwd()
if working_directory != "/home/paul/Desktop/Python_Tutorials/Projects/Files_And_Archive":
  working_directory = "/home/paul/Desktop/Python_Tutorials/Projects/Files_And_Archive"
  os.chdir(working_directory)

check_archive = Path(os.getcwd() + "/" + "files.zip")
if check_archive.is_file():
    print("Yes. Deleting it and creating it.")
    os.unlink(os.getcwd() + "/" + "files.zip")
else:
    print("No. Creating it.")

# Create the regex object that we will use to find our files
fileRegex = re.compile(r'A[0-9]*[a-z]*[0-9]+.*')
found_files = []

# Create the zipfile object that we will use to create our archive
fileArchive = zipfile.ZipFile('files.zip', 'a')

# Recursevly read the contents of the working_dir/Main folder #:
for folderName, subfolders, filenames in os.walk(working_directory + "/Main"):
    for filename in filenames:
        if fileRegex.match(filename):
            found_files.append(folderName + "/" + filename)

# Check all files have been found and create the archive. If the archive already exists
# delete it.


for file in found_files:
    print(file)
    fileArchive.write(file, compress_type=zipfile.ZIP_DEFLATED)

fileArchive.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findAll</code></a> works on strings not on lists, so its better you use <a href="https://docs.python.org/3/library/re.html#re.regex.match" rel="nofollow noreferrer"><code>r.match</code></a> over the list to filter the ones that actually matches:     </p>
<pre><code>found_files = [s for s in all_files if fileRegex.match(s)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>regex works on strings not lists.  the following works</p>
<pre><code>import re
import os

# Create the regex object that we will use to find our files
# fileRegex = re.compile(r'A[0-9]*[a-z]*[0-9]*.*')
fileRegex = re.compile(r'.*\.py')
all_files = []
found_files = []

working_directory = r"C:\Users\michael\PycharmProjects\work"

# Recursevly read the contents of the working_dir/Main folder #:
for folderName, subfolders, filenames in os.walk(working_directory):
    for filename in filenames:
        all_files.append(filename)
        if fileRegex.search(filename):
            found_files.append(filename)

print('all files\n', all_files)
print('\nfound files\n', found_files)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall</code></a> doesn't take a list of strings. You need <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match</code></a> .</p>
<pre><code># Create the regex object that we will use to find our files
fileRegex = re.compile(r'A[0-9]*[a-z]*[0-9]*.*')
all_files = []

# Recursively read the contents of the working_dir/Main folder #:
for folderName, subfolders, filenames in os.walk(working_directory + "/Main"):
    for filename in filenames:
        all_files.append(filename)

found_files = [file_name for file_name in all_files if fileRegex.match(file_name)]
</code></pre>
</div>
<span class="comment-copy">how does this answer actually differs from the one that was already?, please avoid duplicating answers without more information on them ;)</span>
<span class="comment-copy">@Netwave There wasn't an answer when I started on it.</span>
<span class="comment-copy">there is a difference of 5 min between answers....</span>
<span class="comment-copy">Are you implying that I copied your answer?</span>
<span class="comment-copy">well, answers and logs are there... :)</span>
