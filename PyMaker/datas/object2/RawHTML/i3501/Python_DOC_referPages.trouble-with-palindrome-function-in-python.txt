<div class="post-text" itemprop="text">
<p>I'm having trouble in an online course for python, specifically a palindrome problem <a href="https://i.stack.imgur.com/YD7NU.png" rel="nofollow noreferrer">These are the instructions</a>, but the function must be case-insensitive and not see spaces. I think the issue is in my return blocks or my flow. I think I need to use the lower function, but I'm honestly not sure.</p>
<pre><code>def student_func(x):
    for string in x:
        x.lower()
        y = x.replace(" ", "")
        if y[::-1]==y:
            return True
        else:
            return False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You actually have two separate problems in your code—and you're right that one of them is with <code>lower</code> and the other is with the return flow.</p>
<hr/>
<p>First, <code>x.lower()</code> doesn't modify <code>x</code> in-place. In fact, strings are immutable; <em>nothing</em> modifies them in-place. If you look up the interactive <code>help</code> or the <a href="https://docs.python.org/3/library/stdtypes.html#str.lower" rel="nofollow noreferrer">online docs</a>, it says:</p>
<blockquote>
<p>Return a copy of the string with all the cased characters [4] converted to lowercase.</p>
</blockquote>
<p>So, you need to do the same thing with <code>lower</code> that you do with <code>replace</code>: assign the result to a variable, and use that:</p>
<pre><code>y = x.lower()
z = y.replace(" ", "")
</code></pre>
<p>Or you can reuse the same variable:</p>
<pre><code>x = x.lower()
</code></pre>
<p>… or chain the two calls together:</p>
<pre><code>y = x.lower().replace(" ", "")
</code></pre>
<p>As a side note, unless you're using Python 2, you should consider whether you want <a href="https://docs.python.org/3/library/stdtypes.html#str.casefold" rel="nofollow noreferrer"><code>casefold</code></a> instead of <code>lower</code>. For English it makes no difference, but for other languages it can.</p>
<hr/>
<p>Meanwhile, you're doing <code>for string in x:</code>, but then ignoring <code>string</code>.</p>
<p>If <code>x</code> is just a single word, you don't want to loop over it at all.</p>
<p>If <code>x</code> is a list of words, then the <code>for string in x:</code> is correct, but then you have to use <code>string</code> inside the loop, not <code>x</code>. Plus, you can't just <code>return True</code> or <code>return False</code>—that will exit the function as soon as you test the first word, meaning the rest of them never get tested. I'm not sure whether you want to return <code>True</code> if there are <em>any</em> pallidromes, or if they're <em>all</em> palindromes, or if you want to return a list of booleans instead of a single one, or what, but you can't just return the first one.</p>
<p>It would probably be a lot clearer if you used better names, like <code>words</code> instead of <code>x</code> and <code>word</code> instead of <code>string</code>.</p>
<p>Anyway, I can't tell you the right way to fix this since I don't know what you're trying to do, but hopefully this explains enough that you can fix it yourself.</p>
</div>
<div class="post-text" itemprop="text">
<p><em>Giving away the solution defeats the purpose of the exercise</em></p>
<p>your approach is more or less correct.</p>
<ol>
<li><p>convert string to a standard case</p></li>
<li><p>remove whitespace</p></li>
<li><p>check if reverse of the string is equal to the original string</p></li>
</ol>
<p>The error lies in how you are using the python API.</p>
<p>check what each of the functions do, and what they return.</p>
<p>a good idea is to run <code>help(function)</code> to see what the function's documentation has to say about it.</p>
<p>try <code>help(x.lower)</code> (note: not <code>help(x.lower())</code>) and see what the return value is.</p>
</div>
<span class="comment-copy">Should be <code>for x in string:</code> and string as the argument to start. But other problems too. X.lower() doesn’t replace x it returns the lower version and you shouldn’t use special words like string for variables.</span>
<span class="comment-copy">@beroe <code>for x in string</code> would just be a <code>NameError</code>. The parameter is <code>x</code>. The problem is that he's using <code>x</code> instead of <code>string</code> inside the loop.</span>
<span class="comment-copy">When in doubt just get in there and put print statements in between all the lines to see where the result diverges from what you expect. Clearly putting a print either side of <code>x.lower()</code> would highlight the failure to mutate <code>x</code>. Later you'll use a debuger and wont have to go back and rip out all the <code>print</code>s.</span>
<span class="comment-copy">Paul is right - a couple of print statements will maker your errors obvious. Please refer to this article prior to asking homework related questions: <a href="https://meta.stackexchange.com/questions/18242/what-is-the-policy-here-on-homework" title="what is the policy here on homework">meta.stackexchange.com/questions/18242/…</a></span>
<span class="comment-copy">I realize that, @abarnert, that's why I said to "use string as the argument to start". Seemed faster to fix the for loop etc by fixing the argument than changing all the x's to 'string'. But too many minor errors to do the hand-holding on a homework assignment.</span>
