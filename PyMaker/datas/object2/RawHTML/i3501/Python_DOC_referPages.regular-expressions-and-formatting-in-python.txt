<div class="post-text" itemprop="text">
<p>I have an input data set as follows - </p>
<pre><code>INPUT = [
'ABCD , D.O.B: - Jun/14/1999.',
'EFGH , DOB; - Jan/10/1998,',
'IJKL , D-O-B - Jul/15/1985..',
'MNOP , (DOB)* - Dec/21/1999,',
'QRST , *DOB* - Apr/01/2000.',
'UVWX , D O B, - Feb/11/2001 '
]
</code></pre>
<p>I would like this to be in the following formatted output form - </p>
<pre><code>OUTPUT = [
('ABCD, Jun/14/1999'),
('EFGH, Jan/10/1998'),
('IJKL, Jul/15/1985'),
('MNOP, Dec/21/1999'),
('QRST, Apr/1/2000'),
('UVWX, Feb/11/2001')
]
</code></pre>
<p>I tried the following code which works partly but I am unable to do the formatting in the desired OUTPUT format - </p>
<pre><code>import re

INPUT = [
'ABCD , D.O.B: - Jun/14/1999.',
'EFGH , DOB; - Jan/10/1998,',
'IJKL , D-O-B - Jul/15/1985..',
'MNOP , (DOB)* - Dec/21/1999,',
'QRST , *DOB* - Apr/01/2000.',
'UVWX , D O B, - Feb/11/2001 '
]


def formatted_def(input):
    for n in input:
        t = re.sub('[^a-zA-Z0-9 ]+','',n).split('DOB')
        print(t)


formatted_def(INPUT)
</code></pre>
<p>Output - </p>
<pre><code>['ABCD  ', '  Jun141999']
['EFGH  ', '  Jan101998']
['IJKL  ', '  Jul151985']
['MNOP  ', '  Dec211999']
['QRST  ', '  Apr012000']
['UVWX  D O B  Feb112001 ']
</code></pre>
<p>Any pointers will be very helpful. Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
re.findall(r'(\w+)\s+,.*?-\s+([^., ]*)', ' '.join(INPUT))
# [('ABCD', 'Jun/14/1999'), ('EFGH', 'Jan/10/1998'), ('IJKL', 'Jul/15/1985'), ('MNOP', 'Dec/21/1999'), ('QRST', 'Apr/01/2000'), ('UVWX', 'Feb/11/2001')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re.findall</code>:</p>
<pre><code>import re
l = ['ABCD , D.O.B: - Jun/14/1999.', 'EFGH , DOB; - Jan/10/1998,', 'IJKL , D-O-B - Jul/15/1985..', 'MNOP , (DOB)* - Dec/21/1999,', 'QRST , *DOB* - Apr/01/2000.', 'UVWX , D O B, - Feb/11/2001 ']
final_data = [', '.join(re.findall('^\w+|[a-zA-Z]+/\d+/\d+(?=\W)', i)) for i in l]
</code></pre>
<p>Output:</p>
<pre><code>['ABCD, Jun/14/1999', 'EFGH, Jan/10/1998', 'IJKL, Jul/15/1985', 'MNOP, Dec/21/1999', 'QRST, Apr/01/2000', 'UVWX, Feb/11/2001']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In addition to the other answer, you can also use <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a>:</p>
<pre><code>INPUT = [
    'ABCD , D.O.B: - Jun/14/1999.',
    'EFGH , DOB; - Jan/10/1998,',
    'IJKL , D-O-B - Jul/15/1985..',
    'MNOP , (DOB)* - Dec/21/1999,',
    'QRST , *DOB* - Apr/01/2000.',
    'UVWX , D O B, - Feb/11/2001 '
]

pattern = r'(?i)^([a-z]+).*([a-z]{3}/\d{2}/\d{4}).*$'

OUTPUT = [re.sub(pattern, r'\1, \2', x) for x in INPUT]

# OUTPUT:

[
    'ABCD, Jun/14/1999',
    'EFGH, Jan/10/1998',
    'IJKL, Jul/15/1985',
    'MNOP, Dec/21/1999',
    'QRST, Apr/01/2000',
    'UVWX, Feb/11/2001'
]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The main difficult point is to get <code>('ABCD, Jun/14/1999'),</code> content.</p>
<p>It can not be a single-element tuple, as it would have been printed
as <code>('ABCD, Jun/14/1999',),</code> (note extra <code>,</code> before the <code>)</code>).</p>
<p>So to get <strong>exactly</strong> the result you wanted, I did it using
a series of <code>print</code> statements.</p>
<p>The whole script (in Python 3) can be as follows:</p>
<pre><code>import re
input = [
  'ABCD , D.O.B: - Jun/14/1999.',
  'EFGH , DOB; - Jan/10/1998,',
  'IJKL , D-O-B - Jul/15/1985..',
  'MNOP , (DOB)* - Dec/21/1999,',
  'QRST , *DOB* - Apr/01/2000.',
  'UVWX , D O B, - Feb/11/2001 '
]
result = [ re.sub(r'^([a-z]+).*? - ([a-z]{3}/\d{2}/\d{4}).*',
                  r'\1, \2', txt, flags = re.IGNORECASE) for txt in input ]
print('OUTPUT = [')
for txt in result:
    print(" ('{}')".format(txt))
print(']')
</code></pre>
</div>
