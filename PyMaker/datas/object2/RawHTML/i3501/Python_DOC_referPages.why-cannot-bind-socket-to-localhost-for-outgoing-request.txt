<div class="post-text" itemprop="text">
<p>I have following problem. I need to differentiate DNS packets sent by my application from standard DNS queries from other apps for further filtering by iptables. These requests have origin IP equal to IP of public interface to my idea was to bind socket to loopback and then fire request. Unfortunately I get <code>OSError: [Errno 22] Invalid argument</code> exception. Look on these examples:</p>
<pre><code>import socket

# THIS WORKS FINE - PUBLIC -&gt; PUBLIC
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.bind(('192.168.200.15', 7777))
s.sendto('test'.encode(),('192.168.200.16', 10000))

# THIS WORKS FINE - LOOPBACK -&gt; LOOPBACK
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.bind(('127.0.0.1', 7777))
s.sendto('test'.encode(),('127.0.0.1', 10000))

# THIS WORKS FINE - PUBLIC -&gt; LOOPBACK
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.bind(('192.168.200.15', 7777))
s.sendto('test'.encode(),('127.0.0.1', 10000))

# THIS THROWS ERROR - LOOPBACK -&gt; PUBLIC
s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
s.bind(('127.0.0.1', 7777))
s.sendto('test'.encode(),('192.168.200.16', 10000))
# RESULT:
# Traceback (most recent call last):
#  File "x.py", line 21, in &lt;module&gt;
#    s.sendto('test'.encode(),('192.168.200.16', 10000))
#OSError: [Errno 22] Invalid argument
</code></pre>
<p>Why it is so? I though it's just matter of enabling net.ipv4.ip_forward but that's not the case. Any help appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>More details on <em>Python</em> sockets (which are just wrappers over the native implementation): <a href="https://docs.python.org/3/library/socket.html#module-socket" rel="nofollow noreferrer">[Python]: socket - Low-level networking interface</a>.</p>
<p>It's a matter of scope (or visibility domain, if you will). There are 2 (simplified):</p>
<ul>
<li><p><strong>Local</strong> (current machine):</p>
<ul>
<li><strong><em>0</em></strong> or more public interfaces (physical or virtual)</li>
<li><strong><em>0</em></strong> or more <em>loopback</em> interfaces (<strong><em>127.0.0.1</em></strong> .. <strong><em>127.0.0.254</em></strong>)</li>
</ul></li>
<li><p><strong>Global</strong> (network):</p>
<ul>
<li><strong><em>0</em></strong> or more public interfaces (from each host connected to the network), each of them uniquely identifiable</li>
</ul></li>
</ul>
<p>The loopback address has only meaning in the <strong>local</strong> scope. Your 4 cases:</p>
<ul>
<li><strong>public</strong> -&gt; <strong>public</strong>: <em>OK</em> - over the network</li>
<li><strong>loopback</strong> -&gt; <strong>loopback</strong>: <em>OK</em> - local</li>
<li><strong>public</strong> -&gt; <strong>loopback</strong>: <em>OK</em> - local</li>
<li><strong>loopback</strong> -&gt; <strong>public</strong>: <strong><em>FAILED</em></strong> - loopback address is not accessible over the network</li>
</ul>
<p>When the 1<sup>st</sup> <code>sendto</code> call is made (also happens in case of <code>connect</code> for <code>SOCK_STREAM</code>s), the socket is automatically bound on all local addresses (<strong><em>0.0.0.0</em></strong>) (although this might be socket implementation specific) and an <strong>ephemeral port</strong> (also, as a note: once a socket is bound, it can't be unbound or rebound). This pair (which is encapsulated in the packets) will be used by the <strong>peer</strong> socket to figure out who sent them. Think that if <strong><em>127.0.0.1</em></strong> would be there, it would be very confusing for the peer socket to tell the difference between "you" (the socket who actually sent the packets) and their own loopback address. <br/>Maybe the "<em>Invalid argument</em>" error is a bit misleading. On <em>Win</em>, it's a bit more clearer (although some might argue on this):</p>
<blockquote>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; import socket
&gt;&gt;&gt; "Python {:s} on {:s}".format(sys.version, sys.platform)
'Python 3.5.4 (v3.5.4:3f56838, Aug  8 2017, 02:17:05) [MSC v.1900 64 bit (AMD64)] on win32'
&gt;&gt;&gt;
&gt;&gt;&gt; s4 = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
&gt;&gt;&gt; s4.sendto(b"Dummy", ("192.168.1.151", 3321))
5
&gt;&gt;&gt; s4.getsockname()
('0.0.0.0', 61425)
&gt;&gt;&gt; s4.bind(("127.0.0.1", 12345))
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
OSError: [WinError 10022] An invalid argument was supplied
&gt;&gt;&gt; s4.close()
&gt;&gt;&gt;
&gt;&gt;&gt; s4 = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
&gt;&gt;&gt; s4.bind(("127.0.0.1", 12345))
&gt;&gt;&gt; s4.sendto(b"Dummy", ("192.168.1.151", 3321))
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
OSError: [WinError 10051] A socket operation was attempted to an unreachable network
&gt;&gt;&gt; s4.close()
</code></pre>
</blockquote>
<p><strong>References</strong> (<em>Google</em> would yield tons of others):</p>
<ul>
<li><a href="https://askubuntu.com/questions/247625/what-is-the-loopback-device-and-how-do-i-use-it">[AskUbuntu]: What is the loopback device and how do I use it?</a></li>
<li><a href="https://superuser.com/questions/255835/whats-a-loopback-address-i-e-127-0-0-1">[SuperUser]: What's a loopback-address? I.e. 127.0.0.1</a></li>
<li><a href="https://security.stackexchange.com/questions/160120/binding-to-loopback-interface-secure-enough">[SE.Security]: binding to loopback interface secure enough</a></li>
<li><a href="https://www.tldp.org/LDP/nag/node66.html" rel="nofollow noreferrer">[tldp]: The Loopback Interface</a></li>
</ul>
</div>
<span class="comment-copy">From @AndrewWinder (not enough rep to comment):   Works for me on my interfaces, are you assigning the correct interfaces?  On line 15 you bind to your local IP of 192.168.200.15 and you send to 192.168.200.16 on line 21.</span>
<span class="comment-copy">sorry, maybe I haven't put enough info. 192.168.200.15 - is my local IP on public interface. 192.168.200.16 is another host in my network. Also number where error occurs was wrong (now fixed)</span>
<span class="comment-copy">Was this what you're looking for?</span>
