<div class="post-text" itemprop="text">
<p>I have a large xml file with the parent tag having 97k child tags. I want to split into 10 files, each of 10k tags and the last one with the remaining.</p>
<p>I have this code for writing one child tag to each file but unable to come up with groups.</p>
<p>So assume my sample xml with 10 child tags and I want to create 5 files each with 2 child tags.</p>
<p>My sample xml: </p>
<pre><code>&lt;root&gt;
    &lt;row&gt;
        &lt;NAME&gt;A&lt;/NAME&gt;
        &lt;FIRSTNAME&gt;A&lt;/FIRSTNAME&gt;
        &lt;GENDER&gt;M&lt;/GENDER&gt;
    &lt;/row&gt;
    &lt;row&gt;
        &lt;NAME&gt;B&lt;/NAME&gt;
        &lt;FIRSTNAME&gt;B&lt;/FIRSTNAME&gt;
        &lt;GENDER&gt;M&lt;/GENDER&gt;
    &lt;/row&gt;
&lt;row&gt;
        &lt;NAME&gt;A&lt;/NAME&gt;
        &lt;FIRSTNAME&gt;A&lt;/FIRSTNAME&gt;
        &lt;GENDER&gt;M&lt;/GENDER&gt;
    &lt;/row&gt;
    &lt;row&gt;
        &lt;NAME&gt;B&lt;/NAME&gt;
        &lt;FIRSTNAME&gt;B&lt;/FIRSTNAME&gt;
        &lt;GENDER&gt;M&lt;/GENDER&gt;
    &lt;/row&gt;
&lt;row&gt;
        &lt;NAME&gt;A&lt;/NAME&gt;
        &lt;FIRSTNAME&gt;A&lt;/FIRSTNAME&gt;
        &lt;GENDER&gt;M&lt;/GENDER&gt;
    &lt;/row&gt;
    &lt;row&gt;
        &lt;NAME&gt;B&lt;/NAME&gt;
        &lt;FIRSTNAME&gt;B&lt;/FIRSTNAME&gt;
        &lt;GENDER&gt;M&lt;/GENDER&gt;
    &lt;/row&gt;
&lt;row&gt;
        &lt;NAME&gt;A&lt;/NAME&gt;
        &lt;FIRSTNAME&gt;A&lt;/FIRSTNAME&gt;
        &lt;GENDER&gt;M&lt;/GENDER&gt;
    &lt;/row&gt;
    &lt;row&gt;
        &lt;NAME&gt;B&lt;/NAME&gt;
        &lt;FIRSTNAME&gt;B&lt;/FIRSTNAME&gt;
        &lt;GENDER&gt;M&lt;/GENDER&gt;
    &lt;/row&gt;
&lt;row&gt;
        &lt;NAME&gt;A&lt;/NAME&gt;
        &lt;FIRSTNAME&gt;A&lt;/FIRSTNAME&gt;
        &lt;GENDER&gt;M&lt;/GENDER&gt;
    &lt;/row&gt;
    &lt;row&gt;
        &lt;NAME&gt;B&lt;/NAME&gt;
        &lt;FIRSTNAME&gt;B&lt;/FIRSTNAME&gt;
        &lt;GENDER&gt;M&lt;/GENDER&gt;
    &lt;/row&gt;
&lt;/root&gt;
</code></pre>
<p>And my result should be 5 files, each having 2 entries as follows: </p>
<pre><code>&lt;root&gt;
        &lt;row&gt;
            &lt;NAME&gt;A&lt;/NAME&gt;
            &lt;FIRSTNAME&gt;A&lt;/FIRSTNAME&gt;
            &lt;GENDER&gt;M&lt;/GENDER&gt;
        &lt;/row&gt;
        &lt;row&gt;
            &lt;NAME&gt;B&lt;/NAME&gt;
            &lt;FIRSTNAME&gt;B&lt;/FIRSTNAME&gt;
            &lt;GENDER&gt;M&lt;/GENDER&gt;
        &lt;/row&gt;
&lt;/root&gt;
</code></pre>
<p>The below code put each child tag per file but I want here for example 2 tags per file.</p>
<pre><code>import xml.etree.ElementTree as ET
context = ET.iterparse('file.xml', events=('end', ))
index = 0
for event, elem in context:
    if elem.tag == 'row':
        index += 1
        filename = format(str(index) + ".xml")
        with open(filename, 'wb') as f:
            f.write("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n")
            f.write(ET.tostring(elem))
</code></pre>
<p>Thanks in advance!</p>
<p>EDIT to add recipes:</p>
<pre><code>from itertools import zip_longest

def grouper(iterable, n, fillvalue=None):
    "Collect data into fixed-length chunks or blocks"
    # grouper('ABCDEFG', 3, 'x') --&gt; ABC DEF Gxx"
    args = [iter(iterable)] * n
    return zip_longest(*args, fillvalue=fillvalue)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have an iterable of (event, elements) pairs:</p>
<pre><code>context = ET.iterparse('file.xml', events=('end', ))
</code></pre>
<p>Now, you want to filter this down to just the <code>row</code> elements:</p>
<pre><code>rows = (elem for event, elem in context if elem.tag == 'row')
</code></pre>
<p>Now you want to group them. Use <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">the <code>grouper</code> recipe from the <code>itertools</code> docs</a>:</p>
<pre><code>groups = grouper(rows, 2)
</code></pre>
<p>You can obviously change that <code>2</code> to <code>1000</code> or whatever once you get things working and want to run it for real.</p>
<p>Now, you can just iterate the groups. While we're at it, let's use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> so you don't need that manual <code>index += 1</code> stuff. Also, instead of building a string manually and then pointlessly calling <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow noreferrer"><code>format</code></a> on it, let's just use <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">an f-string</a>.</p>
<pre><code>for index, group in enumerate(groups):
    # If you need to run on 3.5 or 2.7, use "{}.xml".format(index)
    filename = f"{index}.xml"
    with open(filename, 'wb') as f:
        f.write("&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n")
</code></pre>
<p>… then iterate the elements within the group—but be careful; if you had an odd number of elements, <code>grouper</code> will fill in the incomplete last group with <code>None</code> values.<sup>1</sup></p>
<pre><code>        for elem in group:
            if elem:
                f.write(ET.tostring(elem))
</code></pre>
<hr/>
<p><sub>1. This isn't that hard to change, but I'm using the recipe directly out of the docs so I don't have to explain how to change it.</sub></p>
</div>
<span class="comment-copy">@abarnet thanks for your response. What exact import statement is required for grouper? import itertools or from itertools import groupby doesn't work.</span>
<span class="comment-copy">@Atihska It's a recipe in the docs. You can't import code from recipes in the docs; you have to type it, or copy and paste it, into your code. They do this because (a) it's only two lines, and (b) it's useful sample code they want you to read. If you really want to, though, there are equivalent functions in third-party libraries like <code>more_itertools</code> and <code>toolz</code>. (Also, why would you expect <code>from itertools import groupby</code> to give you a function called <code>grouper</code>?)</span>
<span class="comment-copy">Oh, I am new to python, don't know about recipes. What code needs to be copied?</span>
<span class="comment-copy">I added the code. Please check my edits but that doesn't work either.</span>
<span class="comment-copy">Got it. I am using python2 and there the name is izip_longest</span>
