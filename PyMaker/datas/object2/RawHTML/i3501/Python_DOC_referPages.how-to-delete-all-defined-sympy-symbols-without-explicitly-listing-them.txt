<div class="post-text" itemprop="text">
<p>SymPy and Python newbie here.  </p>
<p>I run a script that iterates over a number of test files. Each file defines a set of symbols to use. At the end of each loop iteration, I want to delete all the symbols created earlier using the <code>symbols()</code> statement and nothing more, since I have other non-symbol variables around I am using.</p>
<p>I can't do  <code>del(x)</code> and <code>del(y)</code> since each iteration will load a different set of symbols. </p>
<p>I can put a list of the symbols used in a list, or tuple, then at end of each iteration, go over the list of symbols that was created, and delete them one at a time using <code>del</code> But I can't get this to work.</p>
<p>Here is an example.</p>
<pre><code> from sympy import *
 x,y = symbols('x y')
 symbolsToDelete = (x,y) #I also tried symbolsToDelete = ('x','y')

 x=y**3
 y=99

 #now I want to delete all symbols defined above. But I can't
 #use del(x) or del(y) explicitly. So I tried

 for z0 in symbolsToDelete:
     del(z0)
</code></pre>
<p>But the above does not work, <code>x</code> and <code>y</code> are still there, with <code>x=y**3</code> and <code>y=99</code>.  </p>
<p>Again, I know I can do <code>del(x)</code> and <code>del(y)</code> at the end, but I am reading the names of the variables from a file, and the names are in a list. </p>
<p>I could only put the symbols in one variable like I did above, but do not know how to iterate over this tuple and then use <code>del()</code> on each entry to remove the corresponding symbol defined above at end of iteration using <code>symbols</code> command.</p>
<p>I do not know what the correct syntax should be.</p>
<p>I am using Python <strong>3.6.5</strong>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The reason your attempt did not work is explained in <a href="https://stackoverflow.com/questions/14465279/delete-all-objects-in-a-list">Delete all objects in a list</a> - when looping over <code>[x, y]</code> you are deleting additional references to the objects (created in the process of iteration), while the original references stay in place. </p>
<p>You can delete <code>x</code> and <code>y</code> by accessing them via <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer"><code>globals()</code></a> as follows </p>
<pre><code>symbolsToDelete = ('x', 'y')

for z0 in symbolsToDelete:
    del globals()[z0]
</code></pre>
</div>
<span class="comment-copy">As an aside: after <code>y=99</code> the Python variable <code>y</code> is not a SymPy symbol anymore, it's just a Python integer 99. The previous assignment <code>y = symbols('y')</code> is completely forgotten. It is unadvisable to think of SymPy symbols as "variables" because they <i>do not vary</i>: they are immutable, they cannot be "assigned a value".</span>
