<div class="post-text" itemprop="text">
<p>I have been trying to solve the problem of listing power sets on <a href="https://leetcode.com/problems/subsets/description/" rel="nofollow noreferrer">Question 78</a> on Leetcode. I ran into a <a href="https://leetcode.com/problems/subsets/discuss/27356/5-lines-of-python" rel="nofollow noreferrer">solution</a> that uses list comprehensions and it works. I tried expanding it and following through with the <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">Python documentation</a> to make sure I get the correct syntax but I seem to be getting into an infinite loop.</p>
<blockquote>
<p>Given a set of distinct integers, nums, return all possible subsets
  (the power set).</p>
<p>Note: The solution set must not contain duplicate subsets.</p>
<p>Example:</p>
<pre><code>Input: nums = [1,2,3]
Output:
[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]
</code></pre>
</blockquote>
<p>The code in the solution is:</p>
<pre><code>    def subsets(nums):
        nums.sort()
        result = [[]]
        for num in nums:
            result += [i + [num] for i in result]
        return result 
</code></pre>
<p>The code with my change is: </p>
<pre><code>  def subsets(nums):
    """
    :type nums: List[int]
    :rtype: List[List[int]]
    """
    result = [[]]

    for num in nums:
      for list_ in result:
        result.append([num] + list_)
    return result
</code></pre>
<p>I think that in each iteration of the <code>for list_ in result:</code> loop, the result is getting bigger and so I wouldn't get to the end of it but why is it not the same case with the list comprehension? What am I missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because first <code>[i + [num] for i in result]</code> is resolved, and then once that is computed, the <code>result +=</code> part happens, which is different from yours where you append 1 by 1. The other solution appends all at once so there is no issue</p>
</div>
<span class="comment-copy">Yes, you should never append to a list you're iterating. You could, however, create a shallow copy of it (<code>results_iter = list(results)</code>) and iterate through it, while you append to the original <code>result</code> list.</span>
<span class="comment-copy">@Roberto, thanks for pointing an easy way of creating a shallow copy of a list. I didn't know using <code>list()</code> could be used on a list to creating a list. Other suggestions have involved importing modules.</span>
<span class="comment-copy">Please don't do this: <code>class Solution(object):</code> If this is some requirement of some grading system, then strip your question down to a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">@juanpa.arrivillaga, I removed what you requested to strip.</span>
