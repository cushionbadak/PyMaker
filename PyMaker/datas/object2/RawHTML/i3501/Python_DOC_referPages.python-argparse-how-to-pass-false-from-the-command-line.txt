<div class="post-text" itemprop="text">
<p>I am trying to sort out how to pass the boolean value False from the command line to the argparser. My origninal code looked like:</p>
<pre><code>import argparse
parser = argparse.ArgumentParser(allow_abbrev=True)
parser.add_argument('-data', default=True, type=bool, help='uses the history file')
args = parser.parse_args(sys.argv[1:])
</code></pre>
<p>From the command line, I typed: python myscript.py -data False</p>
<p>Also variations with single &amp; double quotes around False. When I examine the contents of the args namespace, args.data is always True.</p>
<p>So I changed the argument definition from bool to str, with a string "True" default as shown below:</p>
<pre><code>parser.add_argument('-data', default="True", type=str, help='uses the history file')
</code></pre>
<p>I then added some massaging of the args to get the boolean value I really wanted:</p>
<pre><code>if re.search("f", args.data, re.I):
   args.data = False
else:
   args.data = True
</code></pre>
<p>This workaround does work. Is there a better way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>store_false</code> or <code>store_true</code> parameter to <code>add_argument</code> (see <a href="https://docs.python.org/2/library/argparse.html#action" rel="nofollow noreferrer">the argparse documentation</a>). For example, if you want the default to be <code>True</code> then you could add an argument with <code>action='store_false'</code>:</p>
<pre><code>parser.add_argument('--no-data', action='store_false', help='don't use the history file')
</code></pre>
<p>Then <code>args.no_data</code> will be <code>False</code> if you run <code>python command.py --no-data</code> and <code>True</code> if you run <code>python command.py</code> without the <code>--no-data</code> argument.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def my_bool(s):
    return s != 'False'

parser.add_argument('-data',default=True,type=my_bool)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If an argument is meant to be a boolean, you should simply use <code>store_true</code> or <code>store_false</code>, so that the presence of the option itself would result in a <code>True</code> or <code>False</code> value, and the absence of the option would result in a <code>False</code> or <code>True</code> value, respectively.</p>
<p>From <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse's documentation</a>:</p>
<pre><code>&gt;&gt;&gt; parser = argparse.ArgumentParser()
&gt;&gt;&gt; parser.add_argument('--foo', action='store_true')
&gt;&gt;&gt; parser.add_argument('--bar', action='store_false')
&gt;&gt;&gt; parser.add_argument('--baz', action='store_false')
&gt;&gt;&gt; parser.parse_args('--foo --bar'.split())
Namespace(foo=True, bar=False, baz=True)
</code></pre>
</div>
<span class="comment-copy"><code>bool</code> converts any non-empty string to True <a href="https://stackoverflow.com/questions/715417/converting-from-a-string-to-boolean-in-python" title="converting from a string to boolean in python">stackoverflow.com/questions/715417/…</a></span>
<span class="comment-copy">You can also use <code>store_true</code> see: <a href="https://stackoverflow.com/questions/32884131/framework-argparse-check-if-flag-is-set" title="framework argparse check if flag is set">stackoverflow.com/questions/32884131/…</a></span>
<span class="comment-copy">Thanks very much! action='store_false' is what I needed.</span>
<span class="comment-copy">Thanks very much! action='store_false' is what I needed.</span>
