<div class="post-text" itemprop="text">
<p>is there any way to join dictionaries as a result in for loop.
Here is my sample code:</p>
<pre><code>for value in data['actions']:
    if 'remoteUrls' in value:
        url = value['remoteUrls']
        ref = value['lastBuiltRevision']['SHA1']
        new_dict['url'] = url
        new_dict['ref'] = ref
        print new_dict
</code></pre>
<p>results:</p>
<pre><code>{
    'url': [u'ssh://abc.com:29418/abc.git'],
    'ref': u'194d4c418c71f77355117bd253cf2ac9849b25dd'
}
{
    'url': [u'ssh://def:29418/def.git'],
    'ref': u'7a198bf01b73330c379cc54aae1631f4448a4b0b'
}
</code></pre>
<p>I want to join the results into one dictionary and the desired output is like this:</p>
<pre><code>{
    vcs1: {
        'url': [u'ssh://abc.com:29418/abc.git'],
        'ref': u'194d4c418c71f77355117bd253cf2ac9849b25dd'
    },
    vcs2: {
        'url': [u'ssh://def:29418/def.git'],
        'ref': u'7a198bf01b73330c379cc54aae1631f4448a4b0b'
    }
}
</code></pre>
<p>Is there any way to achieve the desired output? Any help would be appreciated. Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is one way:</p>
<pre><code>lst = [{'url': [u'ssh://abc.com:29418/abc.git'],'ref':u'194d4c418c71f77355117bd253cf2ac9849b25dd'}, 
       {'url': [u'ssh://def:29418/def.git'], 'ref': u'7a198bf01b73330c379cc54aae1631f4448a4b0b'}]

i = (i for i in range(len(lst)))
d = {'vcs{}'.format(next(i) + 1): x for x in lst}

print(d)
# {'vcs1': {'url': ['ssh://abc.com:29418/abc.git'], 'ref': '194d4c418c71f77355117bd253cf2ac9849b25dd'}, 
#  'vcs2': {'url': ['ssh://def:29418/def.git'], 'ref': '7a198bf01b73330c379cc54aae1631f4448a4b0b'}}                     
</code></pre>
<p>Or using <a href="https://docs.python.org/3/library/itertools.html#itertools.count" rel="nofollow noreferrer"><code>itertools.count</code></a> as suggested in comments:</p>
<pre><code>from itertools import count

lst = [{'url':[u'ssh://abc.com:29418/abc.git'],'ref':u'194d4c418c71f77355117bd253cf2ac9849b25dd'}, 
       {'url': [u'ssh://def:29418/def.git'], 'ref': u'7a198bf01b73330c379cc54aae1631f4448a4b0b'}]

i = count(1)
d = {'vcs{}'.format(next(i)): x for x in lst}

print(d)
# {'vcs1': {'url': ['ssh://abc.com:29418/abc.git'], 'ref': '194d4c418c71f77355117bd253cf2ac9849b25dd'}, 
#  'vcs2': {'url': ['ssh://def:29418/def.git'], 'ref': '7a198bf01b73330c379cc54aae1631f4448a4b0b'}}
</code></pre>
<p>Or this is even simple using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>:</p>
<pre><code>d = {'vcs{}'.format(i): x for i, x in enumerate(lst, 1)}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are some easy methods,</p>
<ul>
<li>dict.update() will help you join dictionaries.  </li>
</ul>
<blockquote>
<pre><code>&gt;&gt;&gt; a = dict()
&gt;&gt;&gt; a.update({1:2})
&gt;&gt;&gt; a
{1: 2}
&gt;&gt;&gt; a.update({3:4})
&gt;&gt;&gt; a
{1: 2, 3: 4}
</code></pre>
</blockquote>
<ul>
<li>dict['key'] = {'url':['URL'], 'ref':'REF'}</li>
</ul>
<blockquote>
<pre><code>&gt;&gt;&gt; a['key123'] = {'url':['url1','url2'], 'ref':'REF'}
&gt;&gt;&gt; a
{1: 2, 'key1': {'a': 'hello'}, 3: 4, 'key123': {'url': ['url1', 'url2'], 'ref': 'REF'}, 'key2': {'url': ['URL1', 'URL2'], 'ref': u'ref'}}
</code></pre>
</blockquote>
<p>As per your case,</p>
<pre><code>res = dict()
for value in data['actions']:
    if 'remoteUrls' in value:
        res['key_name'] = {'url':value['remoteUrls'] ,
                           'ref':value['lastBuiltRevision']['SHA1']}
print res # check the entries
</code></pre>
<ul>
<li>dict comprehension</li>
</ul>
<p><code>dict(dict(&lt;key&gt;, {'url':value['remoteUrls'], 'ref':value['lastBuiltRevision']['SHA1']} for value in data['actions'] if 'remoteUrls' in value)</code></p>
</div>
<span class="comment-copy">Where do <code>vcs1</code> and <code>vcs2</code> come from? Can there be more?</span>
<span class="comment-copy">You can use <code>itertools.count</code> instead of the generator expression in <code>i</code>. But works fine regardless.</span>
<span class="comment-copy">Or <code>d = {'vcs{}'.format(i): x for i, x in enumerate(lst, 1)}</code> -- don't need the generator, it was an odd choice.</span>
<span class="comment-copy">Thanks @FHTMitchell , I think that's better than my previous answer. :)</span>
<span class="comment-copy">Thanks guys. It is working like a charm . I learned a new Python module itertools. Thanks for the help :)</span>
<span class="comment-copy">sure @Austin. Thanks for the help :)</span>
