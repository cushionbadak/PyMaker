<div class="post-text" itemprop="text">
<p>On Linux, is there a debugging tool for a python script that prints the lines of code before executing them, similar to the "set -x" directive in shell scripts ?</p>
<p>I know the debugging pdb module, but I am not aware it can do this (the stacktrace is not suitable).
I know strace, but it does not do this level of debugging.</p>
<p>Example :</p>
<pre><code>def step_1():
    print("some step 1...")
    return 123

def step_2(some_value):
    print("some step 2... %s" % (some_value) )
    return "abc"

# main
x = step_1()
y = step_2(x)
</code></pre>
<p>Execution with the hypothetic debugging tool I'm looking for:</p>
<pre><code>$ python t.py 
+ step_1()
+ print("some step 1...")
some step 1...
+ x = 123
+ step_2(123)
+ print("some step 2... %s" % (123) )
some step 2... 123
+ y = "abc"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/sys.html#sys.settrace" rel="nofollow noreferrer">system trace</a>, which is often used by debuggers for similar purposes, can be used to implement such a feature.  Here is a minimal example that you can tweak to suit your needs:</p>
<pre><code>import sys
import inspect

this_module = sys.modules['__main__']
source_lines = inspect.getsource(this_module).splitlines()

def mytrace(frame, event, arg):
    if source_lines and event in {'line', 'call', 'return'}:
        line = source_lines[frame.f_lineno].strip()
        print('+', line)
    return mytrace

sys.settrace(mytrace)


def step_1():
    print("some step 1...")
    return 123

def step_2(some_value):
    print("some step 2... %s" % (some_value) )
    return "abc"

# main
x = step_1()
y = step_2(x)
</code></pre>
<p>Since Python is not bash and the execution model is different, you might not get the exact same output as seen with <code>set -x</code> in a shell script (for example the line <code>+ y = "abc"</code> with literal rvalue will not make sense in a Python context) but you should be able to recreate something similar enough to be useful for your needs, by interacting with the <code>frame</code> object passed to the trace.</p>
</div>
<span class="comment-copy"><code>import pdb;pdb.set_trace()</code> try it</span>
<span class="comment-copy">pdb.set_trace() breaks immediately. But I want my script to run all the way alone, and just print the debugging info.</span>
<span class="comment-copy">it stops, the execution, when it stop you press <code>n</code> and you will go through the code line by line</span>
<span class="comment-copy">You want something that will print the line about to execute right before it executes?</span>
<span class="comment-copy">And if so, isn't the stacktrace exactly what you need?</span>
