<div class="post-text" itemprop="text">
<p>can a range have a condition in python? for example, I wanna start at position 0 but I want it to run until my while statement is fulfilled.</p>
<pre><code>total = 0
num = int(input ( "Enter a number: " ))
range[0,while num != 0:]
total += num
</code></pre>
<p>I want to be able to save different variables being in a while loop.
The purpose of my program is to print the sum of the numbers you enter unil you put in 0</p>
<p><strong>my code</strong></p>
<pre><code>num = int(input ( "Enter a number: " )) #user input
number_enterd = str() #holds numbers enterd
total = 0 #sum of number

while num != 0:
    total += num

    num = int(input ( "Enter a number: " ))

    number_enterd = num


print( "Total is =", total ) 
print(number_enterd) #check to see the numbers ive collected
</code></pre>
<hr/>
<p>expected output:
enter an integer number (0 to end): 10
1+2+3+4+5+6+7+8+9+10 = 55</p>
<hr/>
<p>as of right now I'm trying to figure out how to store different variables so i can print them before the total is displayed. but since it is in a loop, the variable just keeps getting overwritten until the end.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to store all the numbers you get as input, the simplest way to do that in Python is to just use a list. Here's that concept given your code, with slight modification:</p>
<pre><code>num = int(input ( "Enter a number: " )) #user input
numbers_entered = [] #holds numbers entered
total = 0 #sum of number

while num != 0:
    total += num
    numbers_entered.append(num)
    num = int(input ( "Enter a number: " ))


print("Total is = " + str(total)) 
print(numbers_entered) #check to see the numbers ive collected
</code></pre>
<p>To get any desired formatting of those numbers, just modify that last print statement with a string concatenation similar to the one on the line above it. </p>
</div>
<div class="post-text" itemprop="text">
<p>I used a boolean to exit out of the loop</p>
<pre><code>def add_now():
    a = 0
    exit_now = False
    while exit_now is False:
        user_input = int(input('Enter a number: '))
        print("{} + {} =  {} ".format(user_input, a, user_input + a))
        a += user_input
        if user_input == 0:
            exit_now = True
    print(a)


add_now()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to store all of the values entered and then print them, you may use a list. You code would end like this:</p>
<pre><code>#number_enterd = str() # This is totally unnecessary. This does nothing

num = int(input ( "Enter a number: " ))
total = 0 #sum of number
numsEntered = [] # An empty list to hold the values we will enter
numsEntered.append(num) # Add the first number entered to the list
while num != 0:
    total += num
    num = int(input ( "Enter a number: " ))

    #number_enterd = num # Unnecesary as well, this overwrites what you wrote in line 2
                         # It doesn't even make the num a string

    numsEntered.append(num) #This adds the new num the user just entered into the list


print("Total is =", total )
print("Numbers entered:", numsEntered) #check to see the numbers you've collected
</code></pre>
<p>For example, user enters 5,2,1,4,5,7,8,0 as inputs from the num input request.
Your output will be:</p>
<pre><code>&gt;&gt;&gt;Total is = 32
&gt;&gt;&gt;Numbers entered: [5, 2, 1, 4, 5, 7, 8, 0]
</code></pre>
<p>Just as a guide, this is how I would do it. Hope it helps:</p>
<pre><code>num = int(raw_input("Enter a number: "))
numsEntered = [] # An empty list to hold the values we will enter
total = 0 #sum of numbers
while True:
    numsEntered.append(num) #This adds the num the user just entered into the list
    total += num
    num = int(raw_input("Enter a number: "))

print("Total is =", total)
print("Numbers entered:", numsEntered) #check to see the numbers you've collected
</code></pre>
<p>In this case, the last 0 entered to get out of the loop doesn't show up. At least, I wouldn't want it to show up since it doesn't add anything to the sum.
Hope you like my answer! Have a good day :)</p>
</div>
<span class="comment-copy">Sounds like you want <code>number_enterd</code> to be a <code>list</code> to which you <code>append</code> on each loop?</span>
<span class="comment-copy">Do you know about <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">data structures</a> in Python?</span>
