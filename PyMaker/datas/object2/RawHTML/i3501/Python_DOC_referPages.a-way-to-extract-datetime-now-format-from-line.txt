<div class="post-text" itemprop="text">
<p>I have a log file that contains lines such as</p>
<pre><code>### 192.168.70.10 on 2018-06-19 23:57:37.846200 ###

### 192.168.70.11 on 2018-06-19 23:50:33.073267 ###
</code></pre>
<p>It may also contain other data on different lines.</p>
<p>I am wanting to print all lines that begin with ### and extract their date/time so that I can compare them with another date/time.</p>
<p>How can I do this? Should I use Regex?</p>
<p>Here is an example of what I am doing...</p>
<pre><code>try:
    with open('myfile.log', 'r') as myfile:
        for line in myfile:
            if "###" in line:
                x = line

            print(x)
            # get date and time from x

    myfile.close
except OSError as e:
    print (e)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use regex and the parse the captured group with datetime.striptime</p>
<p>This will allow you to edit the regex to match 1 or more whitespaces, etc.</p>
<pre><code>from datetime import datetime
import re

with open('myfile.log') as myfile:
    for line in myfile:
        # Adding the ### into the regex allows you to remove the conditional if ### in line
        regex = r'###\s+\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}.+(\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}.\d{0,})\s###'
        r = re.match(regex, line)
        if r:  # If there is a matching group, return matching group 1
            dt = datetime.striptime(r.group(1), "%Y-%m-%d %H:%M:%S.%f")

        print(dt)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use regex in this type of problems</p>
<pre><code>try:
  with open('myfile.log', 'r') as myfile:
    reg = re.compile('^###.*on\s([\w\s.:-]*)')
    for line in myfile:
       m = reg.match(line)
       if m:
         datetime.striptime(m.group(1), "%Y-%m-%d %H:%M:%S.%f")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that a line has <em>always</em> the fixed format, then this should work:</p>
<pre><code># Extract the date and time substring.
s = x[-30:-4]

# Parse the string into a datetime object.
dt = datetime.datetime.strptime(s, "%Y-%m-%d %H:%M:%S.%f")
</code></pre>
<p>See the <a href="https://docs.python.org/3.6/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer"><code>strptime()</code> documentation</a> for details on the template string.</p>
<p>If the format of a line in your logfile varies, then a <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regex</a> might work (see <a href="https://stackoverflow.com/questions/50940964/a-way-to-extract-datetime-now-format-from-line#50941151">Daniel’s answer</a>), or consider properly <a href="https://pypi.org/project/parse/" rel="nofollow noreferrer">parsing</a> a string.</p>
</div>
<span class="comment-copy">Consider using <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>if line.startswith("###")</code></a> to check for <code>"###"</code> at the <i>beginning</i> of the line, instead of anywhere in the line.</span>
<span class="comment-copy">I would prefer <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">naming the group</a> in the regex <code>r"…(?P&lt;dt&gt;...)…"</code> and then <a href="https://docs.python.org/3/library/re.html#re.match.group" rel="nofollow noreferrer">referring to it by name</a> rather than offset: <code>r.group("dt")</code>. I think that’s a bit easier to read and maintain.</span>
<span class="comment-copy">Naming groups is certainly useful. But when there is only one group the offset is easy to remember. And naming the group for someone who doesn't understand regex just makes the regex harder to comprehend</span>
<span class="comment-copy">Please fix indent and your code. Also, to improve performance, consider <a href="https://docs.python.org/3/library/re.html#re.compile" rel="nofollow noreferrer">compiling</a> the regex before the loop, and then use the compiled object to <a href="https://docs.python.org/3/library/re.html#re.regex.match" rel="nofollow noreferrer">match</a> the string. Also, remember that <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer">search()</a> can return <code>None</code>, so that needs to be checked too.</span>
<span class="comment-copy">I am getting ValueError: time data '018-06-20 09:12:30.360350 ' does not match format '%Y-%m-%d %H:%M:%S:%f'</span>
<span class="comment-copy">Yes, your log date string misses the <code>2</code> at the beginning, and your template string contains <code>:%f</code> instead of <code>.%f</code>.</span>
