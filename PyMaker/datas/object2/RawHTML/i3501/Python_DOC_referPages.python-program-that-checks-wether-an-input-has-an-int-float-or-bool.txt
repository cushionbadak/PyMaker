<div class="post-text" itemprop="text">
<p>So I'm trying to make a program here that asks for an input but then checks whether the input has an integer, boolean or float and if it has any of these characters then it will ask for the input again. I want to do that instead of just writing <code>str(input())</code> as if the user inputs an <code>int</code> or <code>bool</code> etc it will print error and stop the program.</p>
<p>Here is what I have at the moment but it isn't working:</p>
<pre><code>x=input('Enter your name: ')
while True:
    if x==int or x==bool or x==float:
       print('error, incorrect name please try again!')
    else:
       print('Nice name', x, '!')
       break
</code></pre>
<p>If you can help please reply.</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems you want to check your name only includes alphanumeric characters and potentially whitespace. You can achieve this via <code>str.isalpha</code> after splitting by whitespace.</p>
<p>Remember that <code>input</code> <strong>always returns a string</strong>, so you need to use string methods to validate user input. You can check for empty strings using <code>if not x</code> as an additional validation. Use of <code>type</code> or <code>isinstance</code> is inappropriate.</p>
<p>In addition, you need to include <code>input</code> within your <code>while</code> loop so that a user is able to re-enter a name. Here's an example:</p>
<pre><code>while True:
    x = input('Enter your name: ')
    if (not x) or (not all(i.isalpha() for i in x.split())):
        print('Error, incorrect name please try again!')
    else:
        print('Nice name', x, '!')
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>"checks whether the input has an integer, boolean or float"</em> doesn't really mean anything. <code>input</code> always returns a string, and a string doesn't "have an integer boolean or float", it only has characters, period. You have to rethink and reword your specifications on what is an acceptable input based on this fact (which sets / sequences of characters are allowed or disallowed), and only then will you be able to write the proper validation code. </p>
</div>
<div class="post-text" itemprop="text">
<p>Try using <code>ast.literal_eval</code>:</p>
<pre><code>import ast
x = input('Enter your name: ')
try:
   if type(ast.literal_eval(x)) in (bool,float,int):
      print('Error, incorrect name please try again!')

except:
   print('Nice name', x, '!')
</code></pre>
</div>
<span class="comment-copy">I think you're looking for <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer"><code>isinstance</code></a> rather than comparing a value to a type. Also, <code>input</code> will always return a string anyway.</span>
<span class="comment-copy">A totally useless <code>else: pass</code> and a bare <code>except</code> clause ? Someone submiting such code would be immediatly fired from my team...</span>
<span class="comment-copy">@brunodesthuilliers Oh Yeah you are right, i edited my answer</span>
<span class="comment-copy">Except for the bare except clause.</span>
<span class="comment-copy">We're all make assumptions. But what if someone's name is "True". Unlikely, yes. But just pointing out this probably isn't what OP is meaning to do.</span>
