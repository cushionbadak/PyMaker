<div class="post-text" itemprop="text">
<p>I'm making a programming language and a problem I am currently facing is how to split a list which contains each line of a text file into more items.</p>
<p>For example:</p>
<pre><code>! This is a single line comment

!!!
This line should be ignored
and this one as well
!!!

message_print.Hello World ; message_print.This is multiple line!
</code></pre>
<p>should render as</p>
<pre><code>['! This is a single line comment', '', '!!!', 'This line should be ignored', 'and this one as well', '!!!', '', 'message_print.Hello World', 'message_print.This is multiple line!'
</code></pre>
<p>I've already tried</p>
<pre><code>content = [l.split(',') for l in ','.join(content).split(' ; ')]
</code></pre>
<p>and</p>
<pre><code>content = [x.split(" ; ") for x in content if x.strip()]
</code></pre>
<p>but as my script is calling 2 of the type above, a list of a list is created which is not what I want.</p>
<p>Also, replacing</p>
<pre><code>content = [x.split(" ; ") for x in content if x.strip()]
</code></pre>
<p>with</p>
<pre><code>content = (x.split(" ; ") for x in content if x.strip())
</code></pre>
<p>just results in a runtime error</p>
<p>Also, here is the code responsible for rendering the code</p>
<pre><code>from sys import argv as args
from sys import exit as quit
import syntax

try:
    args[1]
except IndexError:
    print("ERROR: No ROS Code file provided in execution arguments")
    print("Ensure the execution code looks something like this: python run-file.py test.ros")

with open(args[1]) as f:
    ignoreline = False
    content = f.readlines()
    content = [x.strip() for x in content if x.strip()]
    # The code to split a list into more list items goes here
    for value in enumerate(content):
        if not(value[1].startswith('!')) and ignoreline == False:
            firstpart = value[1].split(".")[0]
            lenoffirstpart = len(value[1].split(".")[0])
            afterpart = str(value[1][lenoffirstpart + 1:])
            apwithcomma = afterpart.replace(".", "', '")
            preprint = str(firstpart + "(" + apwithcomma + ")")
            printtext = preprint.replace("(", "('")
            lastprinttext = printtext.replace(")", "')")
            try:
                exec(str("syntax." + lastprinttext))
            except Exception as e:
                template = "ERROR: An error of type {0} occured while running line {1} because {2}"
                message = template.format(
                    type(e).__name__, str(value[0] + 1), str(e.args[0]))
                print(message)
                quit(1)
        elif value[1].startswith('!!!'):
            ignoreline = not(ignoreline)

quit(0)
</code></pre>
<p>The commands I run to execute the script are as follows</p>
<pre><code>@echo off
python run-file.py test.ros
pause
</code></pre>
<p>And the <code>test.ros</code> file is here</p>
<pre><code>! This is a single line comment

!!!
This line should be ignored
and this one as well
!!!

message_print.Hello World ; message_print.This is multiple line!
</code></pre>
<p>If you want to see all of the files involved, take a look at the <a href="https://github.com/Richienb/ROS-Code/tree/ce94693f7abd8b642580acdede45901de3801753/src" rel="nofollow noreferrer">Github Commit</a> (only some of them are relavent to solving this question)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer">re.split</a> to split on a regular expression pattern. </p>
<pre><code>re.split(r' *[;\n] *', source_code)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand correctly, you want to split the input text on newlines and semicolons, this should do what you want:</p>
<pre><code>lines = sum([l.split(';') for l in input_text.splitlines()], [])
</code></pre>
</div>
<span class="comment-copy">Why don't you split with <code>\n</code></span>
<span class="comment-copy">Have you considered using <code>re.split</code>, which can split on a regular expression. <code>re.split(r'\n|;')</code>, for example. <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer">docs.python.org/3/library/re.html#re.split</a></span>
<span class="comment-copy">How would I do that? Please give me the relevant code to insert.</span>
<span class="comment-copy">Everyone is suggesting what code to use but not where to insert it</span>
<span class="comment-copy">Where exactly do I insert this?</span>
