<div class="post-text" itemprop="text">
<p>My data is in CSV format which is minute resolution. It looks like</p>
<pre><code>Timestamp           value
6/10/2018 0:00       23.9
6/10/2018 0:01       19.8
6/10/2018 0:02       20.3
-------------------------
-------------------------
6/18/2018 23:59      25.9
</code></pre>
<p>Now I need the hourly average of this data. The code I have done so far is</p>
<pre><code>import pandas as pd

df = pd.read_csv("filename.csv")
df['DateTime'] = pd.to_datetime(df['Timestamp'])
df.index = df['DateTime']
df1 = df.resample('H').mean()
print(df1)
</code></pre>
<p>But the output is not correct which is as</p>
<pre><code>DateTime               Value
2018-06-13 00:00:00    16.19
2018-06-13 01:00:00    20.80
----------------------------
----------------------------
2018-12-06 23:00:00    19.09
</code></pre>
<p>The date is far from the actual data table. So please help me to debug it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this </p>
<pre><code>df["DateTime"] = pd.to_datetime(df['Timestamp'], format="%d/%m/%Y %H:%M")
</code></pre>
<p>instead this</p>
<pre><code>df['DateTime'] = pd.to_datetime(df['Timestamp'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>pandas</code> has trouble parsing your <code>Datetime</code> column, probably because the string representation begins with the month. I think <code>pandas</code> assumes it is day-first until it is no longer possible, then it goes month-first.</p>
<p>You should specify a format string : </p>
<pre><code>df['DateTime'] = pd.to_datetime(df['Timestamp'], format='%m/%d/%Y %H:%M')
</code></pre>
<p>Conventions for string format are in this page :<br/>
<a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer">https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior</a></p>
</div>
<span class="comment-copy">Can you provide an example of your data where the computed average value contradicts the actual data?</span>
<span class="comment-copy">my data is from 2018-06-10 to 2018-06-18 but the computed values gives the average value from 2018-06-13 to 2018-12-06</span>
<span class="comment-copy">What do you have in <code>df</code> just before resampling? I suspect conversion could mess things up. Similarly for indexing - the order of records could change. Then there is a matter if we need a moving average or average across hourly buckets....</span>
<span class="comment-copy">finally it worked. Thanks</span>
<span class="comment-copy">It should be your hour data that is the issue, as it is not zero-padded. Without the very data that you are using, it is hard to help you further.</span>
<span class="comment-copy">just interchanged the format ='%d/%m/%Y %H:%M' then only worked. Thanks</span>
