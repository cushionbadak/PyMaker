<div class="post-text" itemprop="text">
<p>I received data via TCP socket, it should be <code>"12345678901"</code> as value. I tried also to convert it by <code>int.from_bytes</code> in <code>byteorder ='big'</code> and <code>'littel'</code>
,<code>struct.unpack</code>...</p>
<p>However it didn't work well.</p>
<p>Actual value I got is <code>b'\xd2\x04.\x16\xc5"'( &lt;&lt; data == conn.recv(2048))</code></p>
<p>Which kind of way should I use for converting it to integer?</p>
<p>EDIT: on Server side(really typical)</p>
<pre><code>TCP_IP = '192.168.3.50'
TCP_PORT = 8000
BUFFER_SIZE = 2048  

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind((TCP_IP, TCP_PORT))
s.listen(1)

conn, addr = s.accept()
print('Connection address:', addr)

data_dummy = 0

while 1:

data = conn.recv(BUFFER_SIZE)
if not data: break
if data_dummy != data or data_dummy == 0:
    print("received data:", data)
    print("converted(big)", int.from_bytes(data, byteorder='big'))
    print("converted(little)", int.from_bytes(data, byteorder='little'))
</code></pre>
<p>on Client side(it is came from PLC)</p>
<p>I'll put command line.</p>
<pre><code>NEXT&gt;&gt; 8
received data: b'\xd2\x04\x00\x00\x00\x00'
converted(big) 230914621702144
converted(little) 1234
</code></pre>
<p>It works, if is only 1234.</p>
<pre><code>NEXT&gt;&gt; 9
received data: b'\xd2\x04\x01\x00\x00\x00'
converted(big) 230914638479360
converted(little) 66770
</code></pre>
<p>It doesn't work, in this case 12340001.</p>
<pre><code>NEXT&gt;&gt; 11
received data: b'\xd2\x044\x12\x00\x00'
converted(big) 230915495297024
converted(little) 305398994
</code></pre>
<p>it doesn't work and structure itself is strange.</p>
</div>
<div class="post-text" itemprop="text">
<p>Alright, the last comment cleared things up. You encoded that integer in 3 words (2 bytes each). Previously, I did some tests trying to "decode" the value as a 64bit <code>int</code> as <em>12345678901</em> (<em><strong>0x2DFDC1C35</strong></em>) doesn't fit in 32 bits, but (obviously) without success.</p>
<p>According to <a href="https://docs.python.org/3/library/struct.html#format-characters" rel="nofollow noreferrer">[Python]: Format Characters</a>, for words we have the <code>short</code> correspondent (I chose the <code>unsigned</code> version: <strong><em>H</em></strong>):</p>
<blockquote>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; import struct
&gt;&gt;&gt; sys.version
'3.5.4 (v3.5.4:3f56838, Aug  8 2017, 02:17:05) [MSC v.1900 64 bit (AMD64)]'
&gt;&gt;&gt;
&gt;&gt;&gt; data = b'\xd2\x04.\x16\xc5"'
&gt;&gt;&gt; fmt = b"&lt;HHH"
&gt;&gt;&gt; parts = struct.unpack(fmt, data[:6])
&gt;&gt;&gt; parts
(1234, 5678, 8901)
&gt;&gt;&gt;
&gt;&gt;&gt; # If you want to combine the 3 numbers into the original one:
...
&gt;&gt;&gt; parts[0] * 100000000 + parts[1] * 10000 + parts[2]
123456788901
</code></pre>
</blockquote>
</div>
<span class="comment-copy">That depends upon how you sent it. How did you send that data?</span>
<span class="comment-copy">What do you mean by "<i>didn't work well</i>"?</span>
<span class="comment-copy">I'm sorry. I meant by using int.from_bytes, I'm getting completly wrong number like 38229876016338.I just need decimal conversion from it.</span>
<span class="comment-copy">Problem is why 6byte date looks 4 byte and what is [x04.].</span>
<span class="comment-copy">Can you put your send and receive fucntions</span>
