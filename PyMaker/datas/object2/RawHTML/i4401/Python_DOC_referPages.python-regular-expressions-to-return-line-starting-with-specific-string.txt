<div class="post-text" itemprop="text">
<p>i have this file (output.txt)</p>
<pre><code>Username:traider

domain:domain.net

 
TECH-1366


Username:traider1

domain:domain.net

 
TECH-1367
</code></pre>
<p>I can get values after Username and domain</p>
<pre><code> traider,domain.net
 traider1,domain.net
</code></pre>
<p>but don't know how to get TECH-XXX </p>
<p>desired output:</p>
<pre><code>traider,domain.net,TECH-1366
traider1,domain.net,TECH-1367
</code></pre>
<p>Code:</p>
<pre><code>with open ("output.txt", "r") as myfile:
  data=myfile.read()

people = re.findall(r'\bUsername:(\S+)\s+domain:(\S+)\s', data)

for personinfo in people:
    print(','.join(personinfo))
</code></pre>
<p>I can return only [TECH] but it's incomplete and has brackets</p>
<pre><code>tech =  re.findall(r'TECH-*', data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try</p>
<pre><code>people = re.findall(r'\bUsername:(\S+)\s+domain:(\S+).*(TECH-\d+)', data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This can be done by splitting the text into items, further splitting to obtain the useful text within each item, followed by some simple conditional formatting:</p>
<pre><code>txt="""Username:traider

domain:domain.net


TECH-1366


Username:traider1

domain:domain.net


TECH-1367"""

out = ''
for item in txt.split():
    desired_value = item.split(':')[-1]
    out += desired_value
    if ':' in desired_value:
        out += ','           
    else:
        out += '\n'
</code></pre>
<p>Or using comprehension:</p>
<pre><code>''.join('%s,' % item.split(':')[-1] if ':' in item else '%s\n' % item for item in txt.split())
</code></pre>
<p>Output:</p>
<pre><code>traider,domain.net,TECH-1366
traider1,domain.net,TECH-1367
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need a <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">Regular Expression</a> for this, you can use the built-in <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split()</code></a> and then e.g. a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">List Comprehension</a>  to "bundle" your data:</p>
<pre><code>txt="""Username:traider

domain:domain.net


TECH-1366


Username:traider1

domain:domain.net


TECH-1367"""

l = txt.split()

#udt = [ l[i:i + 3] for i in range(0, len(l), 3)]
# equivalent to list-comprehension above
udt = []
for i in range(0, len(l), 3):
    udt.append( l[i:i + 3] )

print(udt)
</code></pre>
<p>prints</p>
<pre><code>[['Username:traider', 'domain:domain.net', 'TECH-1366'], ['Username:traider1', 'domain:domain.net', 'TECH-1367']]
</code></pre>
<hr/>
<p>To print that as desired:</p>
<pre><code>for e in udt:
    print(",".join(map(lambda f:f.split(":")[-1], e)))
</code></pre>
<p>prints</p>
<pre><code>traider,domain.net,TECH-1366
traider1,domain.net,TECH-1367
</code></pre>
<p>and combined</p>
<pre><code>d = [e.split(":")[-1] for e in txt.split()]
for i in range(0, len(d), 3):
    print( ",".join(d[i:i+3]) )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Finally found why nothing above worked: it's because of  <code>^M</code> i had in file 
It's visible only when open it in vim, when open it using cat it's not visible,once removed it with </p>
<pre><code>sys.stdout = open('out.txt','wt')
with open ("output.txt", "r") as myfile:
  data=myfile.read()
print data.replace('\r','')
</code></pre>
<p>and using @Wiktor Stribiżew code:</p>
<pre><code>people = re.findall(r'\bUsername:(\S+)\s+domain:(\S+)\s+First Name:(\S+)\s+Last Name:(\S+)\s+(TECH-\d+)', data)
</code></pre>
<p>i got desired results, thanks everyone !!</p>
</div>
<span class="comment-copy">Just finish your current pattern, <a href="https://regex101.com/r/WM2kF7/1" rel="nofollow noreferrer"><code>\bUsername:(\S+)\s+domain:(\S+)\s+(.+)</code></a></span>
<span class="comment-copy">Tried it yet? Is it working? Or should there be an explicit check for <code>TECH-\d+</code>? Then replace <code>.+</code> above with this.</span>
<span class="comment-copy"><code>re.findall(r'\bUsername:(\S+)\s+domain:(\S+)\s+(TECH-\d+)', data)</code> and got nothing need match for line starting with TECH</span>
<span class="comment-copy">See <a href="http://rextester.com/AGF36233" rel="nofollow noreferrer">rextester.com/AGF36233</a>. What do you mean by <i>got nothing need match for line starting with TECH</i>?</span>
<span class="comment-copy">Do not add anything. Just update the regex in your current code. <code>people = re.findall(r'\bUsername:(\S+)\s+domain:(\S+)\s+(TECH-\d+)', data)</code></span>
<span class="comment-copy">now got nothing :(</span>
<span class="comment-copy">It won't work if the input can contain blocks of text without <code>TECH-\d+</code> pattern at its end.</span>
<span class="comment-copy">@Wiktor It won't work for a lot of cases, but that one is not part of the question, nor the sample data...</span>
<span class="comment-copy">only get TECH-1366/67</span>
<span class="comment-copy">@Milister Can you be more specific? And please also provide proper sample data. Please see <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> and <a href="https://stackoverflow.com/posts/49804996/edit">update your question</a>.</span>
<span class="comment-copy"><code>[[u'TECH-1366']] [[u'TECH-1367']]</code> is all what i got, i posted sample file in question</span>
