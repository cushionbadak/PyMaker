<div class="post-text" itemprop="text">
<p>I am trying to create a nested list using the lines of a .txt file, but can't reach my desired form.</p>
<h3>.txt file content:</h3>
<pre><code>[1,2,3]  
[2,3,4]  
[3,4,5]
</code></pre>
<h3>Code:</h3>
<pre><code>nested_List = []
file = open("example_File.txt",'r')
    for i in file:
        element = i.rstrip("\n")
        nested_List.append(element)
arch.close()
return (esta)
</code></pre>
<h3>The result I get:</h3>
<pre><code>['[1,2,3]', '[2,3,4]', '[3,4,5]']
</code></pre>
<h3>What I want:</h3>
<pre><code>[[1,2,3],[2,3,4],[3,4,5]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to convert the string representing the list to an actual list.  You can use <a href="https://docs.python.org/3.5/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> like:</p>
<pre><code>from ast import literal_eval

nested_list = []
with open("file1", 'r') as f:
    for i in f:
        nested_list.append(literal_eval(i))
print(nested_list)
</code></pre>
<p>Or with a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> like:</p>
<pre><code>with open("file1", 'r') as f:
    nested_list = [literal_eval(line) for line in f]
print(nested_list)
</code></pre>
<h3>Results:</h3>
<pre><code>[[1, 2, 3], [2, 3, 4], [3, 4, 5]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I was thinking something similar and came up with the following which uses the python's abstract syntax tree's <a href="https://docs.python.org/2/library/ast.html#ast.literal_eval" rel="nofollow noreferrer">literal_eval</a> function.</p>
<pre><code>import ast
nested_List = []

with open("example_File.txt", 'r') as infile:
    for i in infile:
        element = i.rstrip("\n")
        nested_List.append(ast.literal_eval(element))

print(nested_List)
</code></pre>
</div>
<span class="comment-copy">or what stephen-rauch said :)</span>
<span class="comment-copy">there isn't much difference between your code and that of @stephen-rauch. Note that you can leave out <code>ast</code> in <code>ast.literal_eval(element)</code></span>
