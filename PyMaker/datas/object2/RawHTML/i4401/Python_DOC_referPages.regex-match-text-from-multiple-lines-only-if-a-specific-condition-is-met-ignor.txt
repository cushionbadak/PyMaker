<div class="post-text" itemprop="text">
<p>I have the following text:</p>
<pre><code>[Attribute Person]
name=John
description=This is a person
age=16

[Attribute Things]
name=Pencil\ndescription=This is an object

[Attribute Something]
name=John

[Attribute Animal]
name=Tom
description=Just a regular cat
age=2
</code></pre>
<p>I want to get the attribute name plus its description field ONLY if the attribute has a description field. From the text above I want to build a regex such that returns the following:</p>
<pre><code>[Attribute Person] description=description=This is a person
[Attribute Things] description=description=This is an object
[Attribute Animal] description=Just a regular cat
</code></pre>
<p>Notice the attribute 'Something' is being ignored as it doesn't have the description field. Also, the description field of attribute 'Things' is inline with another field (note <strong>the \n is intentional</strong>).</p>
<p>So far I have: </p>
<p><code>(((^\[Attribute \w+\])|((?&lt;=\n)\[Attribute \w+\]))(?=[\n.*]))[\n\w\W]?|(description.*)</code></p>
<p>but I it is including the attribute without the description (attribute 'Something')</p>
<p>I am trying to do this in python | pcre</p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you need the <code>ConfigParser</code></p>
<pre><code>import configparser
config = configparser.RawConfigParser()
config.read('filename.ini')

print(config.get("Attribute Person", "description"))
print(config.get("Attribute Things", "description"))
print(config.get("Attribute Animal", "description"))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>This is a person
This is an object
Just a regular cat
</code></pre>
<p><strong><a href="https://docs.python.org/2/library/configparser.html" rel="nofollow noreferrer">MoreInfo</a></strong></p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it this way if you want :</p>
<pre><code>import re
string = """YOUR STRING GOES HERE"""
list_obj = re.find_all(r"Attribute(\s\w+)\]((\\n|\n)\w+\=\w+)?(\n|\\n)(description)\=(.+?)(\n|\\n)", string, flags = re.MULTILINE)
all_descriptions = filter(lambda x:x[5],list_obj)
print all_descriptions
</code></pre>
</div>
<span class="comment-copy">See <a href="https://regex101.com/r/bT8Mh9/1" rel="nofollow noreferrer">regex101.com/r/bT8Mh9/1</a></span>
<span class="comment-copy">In Python 3 this is renamed to <a href="https://docs.python.org/3/library/configparser.html" rel="nofollow noreferrer"><code>configparser</code></a>.</span>
<span class="comment-copy">@SimonShine. Thanks</span>
