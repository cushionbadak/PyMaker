<div class="post-text" itemprop="text">
<p>Are these equivalent?</p>
<pre><code>class Empty : pass
</code></pre>
<p>and</p>
<pre><code>class Empty:
    '''
    This class intentionally left blank
    '''
</code></pre>
<p>The second one seems better for readability and one could put <code>pass</code> at the end but it does not seem necessary.</p>
<p>Is the comment treated as a <code>pass</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your two codes are <em>almost</em> equivalent, but not quite. <a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements" rel="nofollow noreferrer"><code>pass</code></a> is just a no-op. The docstring is almost a no-op as well, but it adds a <code>__doc__</code> attribute to your class object, so there is a small difference.</p>
<p>A version that would be functionally equivalent to using <code>pass</code> would be to use <a href="https://docs.python.org/3/library/constants.html#Ellipsis" rel="nofollow noreferrer"><code>Ellipsis</code></a> a.k.a. <code>...</code>:</p>
<pre><code>class Empty: ...
</code></pre>
<p>There is nothing special about <code>...</code> in this case. Any pre-existing object that you don't assign will work just as well. For example, you could replace <code>...</code> with <code>None</code>, <code>1</code>, <code>True</code>, etc. The choice of <code>...</code> is a popular alternative because it is much more aesthetically pleasing. By convention, it means a stub that is to be filled in, while <code>pass</code> usually indicates a deliberate no-op.</p>
<p>Using <code>...</code> like that will raise a <code>SyntaxError</code> in Python 2. You can use the named <code>Ellipsis</code> object instead, but that is not nearly as pretty.</p>
<p>You may also find <a href="https://stackoverflow.com/q/36622334/2988730">this question</a> about the equivalence of <code>pass</code> and <code>return None</code> in functions interesting.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, they're not equivalent.</p>
<p>Since the implementation of <a href="https://www.python.org/dev/peps/pep-0257/#specification" rel="nofollow noreferrer">PEP 257</a>, if the first expression in a module, function, or class is a string, that string will be assigned to that module/function/class's <code>__doc__</code> attribute:</p>
<blockquote>
<p>A docstring is a string literal that occurs as the first statement in
  a module, function, class, or method definition. Such a docstring
  becomes the <code>__doc__</code> special attribute of that object.</p>
</blockquote>
<p><em>Functionally</em>, the classes are equivalent. However, the difference between having a docstring and not having a docstring can surface when you're creating documentation for your code. Tools like <a href="http://www.sphinx-doc.org/en/master/ext/autodoc.html" rel="nofollow noreferrer">sphinx-autodoc</a> can pick up the docstring and generate documentation for your class, and you'll end up with something like this in your documentation:</p>
<blockquote>
<p><em>class</em> <strong>Empty()</strong></p>
<p>This class intentionally left blank</p>
</blockquote>
<p>For this reason, it's generally preferable not to use a docstring for this kind of thing. Instead, it would be better to use a comment:</p>
<pre><code>class Empty:
    pass  # This class intentionally left blank
</code></pre>
</div>
<span class="comment-copy">It's a misconception that that's a comment. Comments start with <code>#</code>. What you have there is a string.</span>
<span class="comment-copy">Why would you use <code>Ellipsis</code> rather than say a boolean or integer or anything else you throw away? Wouldn't <code>None</code> be most equivalent?</span>
<span class="comment-copy">@Chris_Rands. No particular reason, but it's semi conventional at this point. Using a particular value implies code or a return value or something, and just generally looks wrong. Ellipsis seems to look right. I'll find a source or two for that.</span>
<span class="comment-copy">@Chris_Rands: <a href="https://twitter.com/raymondh/status/586033215212806144?lang=en" rel="nofollow noreferrer">twitter.com/raymondh/status/586033215212806144?lang=en</a></span>
<span class="comment-copy">You should also note that Python 2 considers using an ellipsis instead of <code>pass</code> that a <code>SyntaxError</code>â€”so the former is more version independent.</span>
<span class="comment-copy">@martineau. Added. Interesting that <code>...</code> is an error but <code>Ellipsis</code> is not. Is it being treated like <code>:</code> outside <code>[]</code>?</span>
