<div class="post-text" itemprop="text">
<p>Being new to python &amp; docker, I created a small flask app (test.py) which has two hardcoded values: </p>
<pre><code>username = "test"
password = "12345"
</code></pre>
<p>I'm able to create a Docker image and run a container from the following Dockerfile:</p>
<pre><code>FROM python:3.6

RUN mkdir /code  
WORKDIR /code  
ADD . /code/  
RUN pip install -r requirements.txt  

EXPOSE 5000  
CMD ["python", "/code/test.py"]`
</code></pre>
<p>How can I create a ENV variable for username &amp; password and pass dynamic values while running containers?</p>
</div>
<div class="post-text" itemprop="text">
<p>Within your python code you can read env variables like:</p>
<pre><code>import os
username = os.environ['MY_USER']
password = os.environ['MY_PASS']
print("Running with user: %s" % username)
</code></pre>
<p>Then when you run your container you can set these variables:</p>
<pre><code>docker run -e MY_USER=test -e MY_PASS=12345 ... &lt;image-name&gt; ...
</code></pre>
<p>This will set the env variable within the container and these will be later read by the python script (<code>test.py</code>)</p>
<p>More info on <a href="https://docs.python.org/3/library/os.html#os.environ" rel="noreferrer">os.environ</a> and <a href="https://docs.docker.com/engine/reference/commandline/run/#set-environment-variables--e---env---env-file" rel="noreferrer">docker env</a></p>
</div>
<div class="post-text" itemprop="text">
<p>In your Python code you can do something like this:</p>
<pre><code> # USERNAME = os.getenv('NAME_OF_ENV_VARIABLE','default_value_if_no_env_var_is_set')
 USERNAME = os.getenv('USERNAME', 'test')
</code></pre>
<p>Then you can create a docker-compose.yml file to run your dockerfile with:</p>
<pre><code>version: '2'
services:
  python-container:
    image: python-image:latest
    environment:
      - USERNAME=test
      - PASSWORD=12345
</code></pre>
<p>You will run the compose file with:</p>
<pre><code>$ docker-compose up
</code></pre>
<p>All you need to remember is to build your dockerfile that you mentioned in your question with:</p>
<pre><code>$ docker build -t python-image .
</code></pre>
<p>Let me know if that helps. I hope that answers your question.</p>
</div>
<span class="comment-copy">Here is an article which shows how to set env variables at build time as opposed to setting them when running the container: <a href="http://blog.ruanbekker.com/blog/2018/04/07/set-docker-environment-variables-during-build-time/" rel="nofollow noreferrer">blog.ruanbekker.com/blog/2018/04/07/â€¦</a></span>
