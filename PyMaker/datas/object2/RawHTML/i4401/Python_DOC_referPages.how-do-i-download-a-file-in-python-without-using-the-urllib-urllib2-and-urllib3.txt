<div class="post-text" itemprop="text">
<p>I have a problem because I need to download a file using python but I cannot use the libraries urllib, urllib2 and urllib3 neither request</p>
<p>If someone can help me I thanks him a lot</p>
</div>
<div class="post-text" itemprop="text">
<p>you can use <code>subprocess</code> module and <code>curl</code> command</p>
<pre><code>import subprocess
result = subprocess.run(['curl', 'https://www.google.com'], stdout=subprocess.PIPE)
# do with result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to do wget in terminal to get the package. Why can't you use these!? (I can't ugh comment)</p>
<p>Try using <code>requests</code> to get the data of the file and write it a path if you can't use urllib's package.</p>
<p>To download files with <code>requests</code> use this example from <a href="https://stackoverflow.com/questions/16694907/how-to-download-large-file-in-python-with-requests-py">here</a></p>
<pre><code>def download_file(url):
    local_filename = url.split('/')[-1]
    # NOTE the stream=True parameter
    r = requests.get(url, stream=True)
    with open(local_filename, 'wb') as f:
        for chunk in r.iter_content(chunk_size=1024): 
            if chunk: # filter out keep-alive new chunks
                f.write(chunk)
                #f.flush() commented by recommendation from J.F.Sebastian
    return local_filename
</code></pre>
<p>Here's the aiohttp example for async functions: </p>
<pre><code>import aiohttp

async def download_file(url):
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as resp:
            with open(filename, 'wb') as fd:
                while True:
                    chunk = await resp.content.read(chunk_size)
                    if not chunk:
                        break
                    fd.write(chunk)

url = "URL"
await download_file(url)
</code></pre>
<p>I recommend using aiohttp if you don't can't use requests.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks to all, finally I could solve my problem
I give you the solution that I used</p>
<pre><code>import * from socket
    s = socket(AF_INET, SOCK_STREAM)
    s.connect((url, port))
    file_mess="GET /" + step2[:5] + " HTTP/1.1\r\n\r\n"
    s.send((file_mess).encode('utf-8'))
    print(s.recv(1024).decode('utf-8'))
    print(s.recv(1024).decode('utf-8'))
</code></pre>
<p>I used the second print for obtaining all the data, because with the first I only get a 200 OK</p>
</div>
<span class="comment-copy">you can use the <code>wget</code> package. Why can't you use the other ones?</span>
<span class="comment-copy">I'm doing a job but with this libraries I can do this</span>
<span class="comment-copy">I use python 3.6 and wget doesn't work</span>
<span class="comment-copy">you can use <a href="https://docs.python.org/3/library/socket.html" rel="nofollow noreferrer">docs.python.org/3/library/socket.html</a></span>
<span class="comment-copy">if you can't comment, don't. provide a full answer when you can</span>
<span class="comment-copy">Will do rn, I literally had to transfer devices,</span>
<span class="comment-copy">OP states: "I cannot use the libraries urllib, urllib2 and urllib3 neither request"</span>
<span class="comment-copy">I added aiohttp example. Be patient.... :P</span>
