<div class="post-text" itemprop="text">
<p>I am trying to use python's <code>csv</code> standard library module to generate comma-separated value (csv) files.</p>
<p>It will not allow the first line to be blank. More annoyingly, it treats the first line differently from other lines, so an empty list gives an empty string ("") in one case and a blank line thereafter:</p>
<pre><code>import csv
import io

def make_csv(rows):
  with io.StringIO(newline='') as sout:
    writer = csv.writer(sout, quoting=csv.QUOTE_MINIMAL)
    writer.writerows(rows)
    return sout.getvalue()
</code></pre>
<p>Given the above definition, an interpreter session might look like:</p>
<pre><code>&gt;&gt;&gt; make_csv([[''], ['']]) # (only the) first line has quoted empty string
'""\r\n\r\n'

&gt;&gt;&gt; make_csv([['A'], ['A']]) # expected: same input row, same output row
'A\r\nA\r\n'
</code></pre>
<p>Why does this quoted empty string happen only on the first line? Is there any way I can stop it, or at least get more consistent behavior?</p>
<hr/>
<p><strong>Update</strong>: this is a bug reported in Dec 2017 as <a href="https://bugs.python.org/issue32255" rel="nofollow noreferrer">https://bugs.python.org/issue32255</a>, and resolved by commit <a href="https://github.com/python/cpython/commit/2001900b0c02a397d8cf1d776a7cc7fcb2a463e3" rel="nofollow noreferrer">https://github.com/python/cpython/commit/2001900b0c02a397d8cf1d776a7cc7fcb2a463e3</a>, which was included in the 3.6.5 release</p>
</div>
<div class="post-text" itemprop="text">
<p>You can force the csv writer to quote the empty strings by setting a different <a href="https://docs.python.org/3/library/csv.html#csv.QUOTE_ALL" rel="nofollow noreferrer">quoting strategy</a>. Both <a href="https://docs.python.org/3/library/csv.html#csv.QUOTE_ALL" rel="nofollow noreferrer">QUOTE_ALL</a> and <a href="https://docs.python.org/3/library/csv.html#csv.QUOTE_NONNUMERIC" rel="nofollow noreferrer">QUOTE_NONNUMERIC</a> will do what you want:</p>
<pre><code>def make_csv(rows):
  with io.StringIO(newline='') as sout:
    writer = csv.writer(sout, quoting=csv.QUOTE_NONNUMERIC)
    writer.writerows(rows)
    return sout.getvalue()
</code></pre>
<pre><code>&gt;&gt;&gt; make_csv([[''], ['']])
'""\r\n""\r\n'
</code></pre>
<hr/>
<p>I don't know why the default strategy treats the first line differently than other lines, but I believe it's a bug. If you try to load the csv data where the 2nd line isn't quoted, you'll notice that the output is different than the input you originally used to create the csv:</p>
<pre><code>&gt;&gt;&gt; data = [[''], ['']]
&gt;&gt;&gt; text = make_csv(data)
&gt;&gt;&gt; text
'""\r\n\r\n'
&gt;&gt;&gt; f = io.StringIO(text)
&gt;&gt;&gt; reader = csv.reader(f)
&gt;&gt;&gt; list(reader)
[[''], []]
</code></pre>
</div>
<span class="comment-copy">what is the value of QUOTE_MINIMAL</span>
<span class="comment-copy">It should be <code>csv.QUOTE_MINIMAL</code></span>
<span class="comment-copy">cannot reproduce. I get 2 quoted lines: <code>'""\r\n""\r\n'</code></span>
<span class="comment-copy">@zipa thanks, changed it</span>
<span class="comment-copy">@Jean-Fran√ßoisFabre which python version? i am using 3.6.3</span>
<span class="comment-copy">Sure but neither of those do what I want for other inputs. If this is expected behavior of QUOTE_MINIMAL, then it's at least undocumented and uninuitive.</span>
<span class="comment-copy">@yamad Why do you care how the input is quoted? It's not like the quotes make any difference in csv (except for empty strings and strings that contain commas, but you get the idea). As long as the csv module reads your file back correctly, what do the quotes matter?</span>
<span class="comment-copy">because the output feeds into a finicky program I don't control and it isn't very smart about accepted formats</span>
<span class="comment-copy">@yamad Well you haven't really given us any information about which fields should be quoted and which shouldn't, so can't really help you with that. But I doubt the csv module has the kind of functionality you need built in. You'll probably have to write your own csv writer (or at least subclass the existing <code>csv.writer</code>).</span>
