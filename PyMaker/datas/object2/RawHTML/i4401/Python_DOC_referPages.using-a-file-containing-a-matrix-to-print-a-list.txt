<div class="post-text" itemprop="text">
<p>I have a score_matrix.txt file which contains:</p>
<pre><code>6,1,2,-10
1,5,0,-2
2,0,6,3
-10,-2,3,5
</code></pre>
<p>I'm trying to code a function "read_scores" that consumes a file name (string) as its parameter and returns a list of list of ints (4x4 matrix).</p>
<p>This is what I have:</p>
<pre><code>def read_scores(file)
    file=open('score_matrix.txt')
    g=[]
    for aline in file:
        aline=float(aline)
        g[aline]=aline.split('/n')
    return g
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a> with <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>split(',')</code></a>:</p>
<pre><code>with open('test.txt') as f:
    data = f.read().splitlines()
    data = [list(map(int, i.split(','))) for i in data]
    print(data)
</code></pre>
<p>Output:</p>
<pre><code>[[6, 1, 2, -10], [1, 5, 0, -2], [2, 0, 6, 3], [-10, -2, 3, 5]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.genfromtxt.html" rel="nofollow noreferrer"><code>numpy.genfromtxt()</code></a> and read it into a <code>numpy.ndarray</code>:</p>
<pre><code>import numpy as np
g = np.genfromtxt('test.txt', delimiter=",")

print(g)
#array([[  6.,   1.,   2., -10.],
#       [  1.,   5.,   0.,  -2.],
#       [  2.,   0.,   6.,   3.],
#       [-10.,  -2.,   3.,   5.]])
</code></pre>
<p>And if you prefer it as a list of lists, you can call <code>tolist()</code>:</p>
<pre><code>print(g.tolist())
#[[6.0, 1.0, 2.0, -10.0],
# [1.0, 5.0, 0.0, -2.0],
# [2.0, 0.0, 6.0, 3.0],
# [-10.0, -2.0, 3.0, 5.0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <code>pandas</code> to read and process csv files:</p>
<pre><code>import pandas as pd

pd.read_csv('file.csv', names=['col1','col2','col3','col4'])
</code></pre>
<p>Output:</p>
<pre><code>   col1  col2  col3  col4
0     6     1     2   -10
1     1     5     0    -2
2     2     0     6     3
3   -10    -2     3     5
</code></pre>
<p>You can also turn the resulting <code>DataFrame</code> to a matrix using:</p>
<pre><code>pd.read_csv('tmp.txt', names=['col1','col2','col3','col4']).as_matrix()
</code></pre>
<p>Output:</p>
<pre><code>array([[  6,   1,   2, -10],
       [  1,   5,   0,  -2],
       [  2,   0,   6,   3],
       [-10,  -2,   3,   5]])
</code></pre>
</div>
<span class="comment-copy">Does your solution work? If not how is it deficient? Does it produce exceptions?</span>
<span class="comment-copy">To read CSV data, it's a good idea it use <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">the csv module</a> and save yourself some reinventing of the wheel.</span>
<span class="comment-copy">Why are you trying to do <code>aline.split('/n')</code>? That isn't going to do anything (even if you meant <code>'\n'</code>, there are no newlines within each line), but without knowing what it was <i>intended</i> to do, it's hard to explain how to fix it. And likewise for <code>g[aline]</code>â€”trying to use a line (a string) as an index into an empty array obviously won't work, but without knowing what it was supposed to do (maybe <code>g.append</code>?), it's hard to explain how to do what you intended.</span>
<span class="comment-copy">This is good, assumes <code>numpy</code>; it's a great library, but for <i>just</i> reading a matrix is an overkill.</span>
<span class="comment-copy">I suppose that it depends on the end goal, but whenever I see "matrix" I think of numpy. Not saying it's the best solution, but it could be useful. @9000</span>
