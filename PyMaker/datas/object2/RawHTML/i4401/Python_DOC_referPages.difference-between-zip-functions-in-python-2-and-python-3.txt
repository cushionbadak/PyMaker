<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1303347/getting-a-map-to-return-a-list-in-python-3-x">Getting a map() to return a list in Python 3.x</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I was wondering what the difference is between the <code>zip()</code> function in python 2 and python 3 is. I noticed when using the <code>timeit</code> module on both functions that the python 3 function was a lot faster. Thanks so much in advance :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Difference between Python 2 and Python 3 is Python 3 returns an iterators. Idea of this saving memory.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, the <code>zip()</code> function returns an iterator, meaning that you can only exhaust elements once, whereas Python 2 returns an iterable itself.</p>
<p>see here:
<a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow noreferrer">Python 2 Doc</a>, <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">Python 3 Doc</a></p>
</div>
<span class="comment-copy">One thing is that in <i>Python3</i>, it returns a <i>generator</i>.</span>
<span class="comment-copy">Python 2's <code>zip</code> builds and returns a list. Python 3's <code>zip</code> returns a lazy iterator. If you actually iterate over both of them, Python 3's will save memory but have the same effect. But if you never try to use the values, Python 3 will be even smarter and just never generate them, which is of course amazingly fast, but not that useful.</span>
