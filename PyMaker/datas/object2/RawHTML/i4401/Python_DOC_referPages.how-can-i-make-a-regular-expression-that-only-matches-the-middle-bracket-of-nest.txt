<div class="post-text" itemprop="text">
<p>I am trying to make a regular expression that will only match the middle bracket if there are nested brackets. For instance, if you type in x(x+3(x+3)) I would want it to only match the (x+3). I have several regular expressions in my program already which involve brackets, and I have discovered they always match the first instance of brackets that they find. In the example above, my regular expressions match (x+3(x+3), and I guess that should have been obvious but I didn't think about it when I started. Essentially, I want it to match a set of brackets that does not contain a '(' or a ')' character inside the bracket. </p>
<p>Here is my regular expression for a single bracket: re.compile(r'(\S+?)').
I would use some sort of negative lookaround, but I think that would prevent the necessary open and close bracket characters at the beginning and end respectively... </p>
<p>I am using Python. Also when I say 'brackets' I mean parentheses, but in British English we say brackets :)</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Easiest way to capture something that does not entail some other things is with</p>
<p><code>[^ ....]</code> - the ^ disallowes anything inside the [] - as a special feature you do not need to escape brackets inside it - so by declaring your regex as</p>
<pre><code>r'(\([^()]+\))'
</code></pre>
<p>you essentially capture a literal <code>(</code> followed bei 1+ anythings but neither <code>(</code> nor <code>)</code> followed by a literal <code>)</code>.</p>
<p>See  <a href="https://regexr.com/3nsfg" rel="nofollow noreferrer">https://regexr.com/3nsfg</a></p>
<p>From  <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">Regex Syntax</a>:</p>
<blockquote>
<ul>
<li>Characters that are not within a range can be matched by complementing the set. If the first character of the set is <code>^</code>, all
  the characters that are not in the set will be matched. For example,
  <code>[^5]</code> will match any character except '5', and <code>[^^]</code> will match any
  character except '^'. ^ has no special meaning if itâ€™s not the first
  character in the set.</li>
<li>To match a literal ']' inside a set, precede it with a backslash, or place it at the beginning of the set. For example, both <code>[()[\]{}]</code>
  and <code>[]()[{}]</code> will both match a parenthesis.</li>
</ul>
</blockquote>
<p>Code:</p>
<pre><code>t = "x(x+3(x+3))"

import re

m = re.findall(r"(\([^()]+\))", t)

print(m[0])
</code></pre>
<p>Output:</p>
<pre><code>(x+3)
</code></pre>
</div>
<span class="comment-copy">Maybe something like <code>\(.*((\.*\)).*\)</code>, using a capturing group? This very well may not be a regular grammar. You might have to specify a Context Free Grammar instead.</span>
<span class="comment-copy">this <code>(\([^()]+\))</code>?  should work .. see <a href="https://regexr.com/3nsfg" rel="nofollow noreferrer">regexr.com/3nsfg</a></span>
<span class="comment-copy">@PatrickArtner <code>[^()]</code> I think ...</span>
