<div class="post-text" itemprop="text">
<p>Can anyone guide me in this?
I have a dictionary in the following format:</p>
<pre><code>date_wise_data = {
        '2018-04-09':{
            'user1': 3,
            'user2': 1,
            'user3': 1,
            'user4': 1
        },
        '2018-04-08': {
            'user1': 2,
            'user2': 0,
            'user3': 1,
            'user4': 1

        },
        '2018-04-07': {
            'user1': 6,
            'user2': 5,
            'user3': 1,
            'user4': 2
        },
        '2018-04-06': {
            'user1': 2,
            'user2': 0,
            'user3': 1,
            'user4': 1
        },
        '2018-04-05': {
            'user1': 2,
            'user2': 0,
            'user3': 2,
            'user4': 8
        },
        '2018-04-04': {
            'user1': 0,
            'user2': 0,
            'user3': 5,
            'user4': 1
        },
        '2018-04-03': {
            'user1': 8,
            'user2': 0,
            'user3': 5,
            'user4': 1
        }
}
</code></pre>
<p>My requirement is to create a dictionary in the following format:</p>
<pre><code>user_data = {
        'user1':{
            '2018-04-09': 3,
            '2018-04-08': 2,
            '2018-04-07': 6,
            '2018-04-06': 2,
            '2018-04-05': 2,
            '2018-04-04': 0,
            '2018-04-03': 8
        },
        'user2': {
            '2018-04-09': 1,
            '2018-04-08': 0,
            '2018-04-07': 5,
            '2018-04-06': 0,
            '2018-04-05': 0,
            '2018-04-04': 0,
            '2018-04-03': 0

        },
        'user3': {
            '2018-04-09': 1,
            '2018-04-08': 1,
            '2018-04-07': 1,
            '2018-04-06': 1,
            '2018-04-05': 2,
            '2018-04-04': 5,
            '2018-04-03': 5
        },
        'user4': {
            '2018-04-09': 1,
            '2018-04-08': 1,
            '2018-04-07': 2,
            '2018-04-06': 1,
            '2018-04-05': 8,
            '2018-04-04': 1,
            '2018-04-03': 1
        }
}
</code></pre>
<p>I have tried splitting up the dict using keys and values.
Tried joining multiple dicts. But I am unable to receive the output in the above format.</p>
<p>Based on your experience in Python, can any of you suggest me a way forward or help me in this.</p>
<p>Thanks,</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer to this is relatively simple, just loop through the dictionaries and assign the values to the correct place e.g:</p>
<pre><code>for date, users in date_wise_data.items():
  for user, value in users.items():
    user_wise_data[user][date] = value
</code></pre>
<p>The most awkward part here is that those dictionaries won't exist, so this code won't work. While you could manually check that and construct them, the easier option is to use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> to automatically construct them. E.g:</p>
<pre><code>user_wise_data = collections.defaultdict(dict)
</code></pre>
<p>This means whenever you try and access a user that doesn't exist, a new dictionary will be created for it. This makes the above code do exactly what you want:</p>
<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; date_wise_data = {
...   '2018-04-09':{
...     'user1': 3,
...     'user2': 1
...   },
...   '2018-04-08': {
...     'user1': 2,
...     'user2': 0
...   }
... }
&gt;&gt;&gt; user_wise_data = collections.defaultdict(dict)
&gt;&gt;&gt; 
&gt;&gt;&gt; for date, users in date_wise_data.items():
...   for user, value in users.items():
...     user_wise_data[user][date] = value
... 
&gt;&gt;&gt; user_wise_data
defaultdict(&lt;class 'dict'&gt;, {
    'user1': {
        '2018-04-09': 3, 
        '2018-04-08': 2
    }, 
    'user2': {
        '2018-04-09': 1, 
        '2018-04-08': 0
    }
})
</code></pre>
<p>Another option is <code>dict.setdefault()</code> which allows you to do this at access time, rather than when you set up the dictionary, e.g:</p>
<pre><code>user_wise_data = {}
for date, users in date_wise_data.items():
   for user, value in users.items():
     user_wise_data.setdefault(user, {})[date] = value
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You <strong>can</strong> use <a href="https://pandas.pydata.org/" rel="nofollow noreferrer">pandas</a>:</p>
<pre><code>import pandas as pd

df = pd.DataFrame(date_wise_data).transpose()
print(df.head())

#             user1  user2  user3  user4
# 2018-04-03      8      0      5      1
# 2018-04-04      0      0      5      1
# 2018-04-05      2      0      2      8
# 2018-04-06      2      0      1      1
# 2018-04-07      6      5      1      2
</code></pre>
<p>Convert the dataframe to a dictionary:</p>
<pre><code>print(df.to_dict())

# {'user1': {'2018-04-03': 8, '2018-04-04': 0, '2018-04-05': 2, '2018-04-06': 2, '2018-04-07': 6, '2018-04-08': 2, '2018-04-09': 3}, 'user2': {'2018-04-03': 0, '2018-04-04': 0, '2018-04-05': 0, '2018-04-06': 0, '2018-04-07': 5, '2018-04-08': 0, '2018-04-09': 1}, 'user3': {'2018-04-03': 5, '2018-04-04': 5, '2018-04-05': 2, '2018-04-06': 1, '2018-04-07': 1, '2018-04-08': 1, '2018-04-09': 1}, 'user4': {'2018-04-03': 1, '2018-04-04': 1, '2018-04-05': 8, '2018-04-06': 1, '2018-04-07': 2, '2018-04-08': 1, '2018-04-09': 1}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, we flatten the 2-level data you have in <code>date_wise_data</code>:</p>
<pre><code>&gt;&gt;&gt; flat_data = [(j, k, u) for k, v in date_wise_data.items() for j, u in v.items()]
&gt;&gt;&gt; flat_data.sort() # we sort data for groupby()
&gt;&gt;&gt; flat_data
[('user1', '2018-04-03', 8), ('user1', '2018-04-04', 0), ..., ('user2', '2018-04-03', 0), ...]
</code></pre>
<p>Then we use <a href="https://docs.python.org/2/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">itertools.groupby</a> which "returns consecutive keys and groups from the iterable" (note that groupby require its argument to be sorted to function correctly):</p>
<pre><code>&gt;&gt;&gt; {key: {item[1]: item[2] for item in grouper}
        for key, grouper in groupby(flat_data, lambda x: x[0])}
{'user1': {'2018-04-03': 8,
           '2018-04-04': 0,
           '2018-04-05': 2,
           '2018-04-06': 2,
           '2018-04-07': 6,
           '2018-04-08': 2,
           '2018-04-09': 3},
 'user2': {'2018-04-03': 0,
           '2018-04-04': 0,
           '2018-04-05': 0,
           '2018-04-06': 0,
           '2018-04-07': 5,
           '2018-04-08': 0,
           '2018-04-09': 1},
 'user3': {'2018-04-03': 5,
           '2018-04-04': 5,
           '2018-04-05': 2,
           '2018-04-06': 1,
           '2018-04-07': 1,
           '2018-04-08': 1,
           '2018-04-09': 1},
 'user4': {'2018-04-03': 1,
           '2018-04-04': 1,
           '2018-04-05': 8,
           '2018-04-06': 1,
           '2018-04-07': 2,
           '2018-04-08': 1,
           '2018-04-09': 1}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is what I would do:</p>
<pre><code>user_data = {}
for date in date_wise_data:
    for user in date_wise_data[date]:
        if user not in user_data:
            user_data[user] = {}
        user_data[user][date] = date_wise_data[date][user]
</code></pre>
<p>note that the keys <code>date</code> and <code>user</code> are used in the opposite order in the last line.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you may have mistyped your output, as it doesn't correspond to you input.
As @pissal comments, the output you requested is not possible.</p>
<p>I guess you want your output to be:</p>
<pre><code>user_data = {
        'user1':{
            '2018-04-09': 3,
            '2018-04-08': 2,
            '2018-04-07': 6,
            '2018-04-06': 2,
            '2018-04-05': 2,
            '2018-04-04': 0,
            '2018-04-03': 8
        },
</code></pre>
<p>Then you want code like:</p>
<pre><code>for date, users in date_wise_data.items()
    for user, value in users.items()
        user_data[user][date] = value
</code></pre>
<p>Edited to include : You may need to use defaultdict as specified in @Gareth Latty's answer</p>
</div>
<div class="post-text" itemprop="text">
<p>This will do the work:</p>
<pre><code>d = {}
for date in date_wise_data:
   for user in date_wise_data[date]:
      if user not in d:
         d[user]={}
      d[user][date] = date_wise_data[date][user]
</code></pre>
</div>
<span class="comment-copy">You cannot have duplicate keys in a dictionary. So your desired output is not possible. Rather you can have a list of values for a particular date.</span>
<span class="comment-copy">Who gave you that requirement? It's not possible with Python.</span>
<span class="comment-copy">Is that really the output you want or did you failed the copy paste of dates?</span>
<span class="comment-copy">Sorry, It was a problem in date copy-paste.. I am correcting it now</span>
<span class="comment-copy">Thanks Gareth Latty for the detailed help</span>
<span class="comment-copy">This is an excellent way to do it - the work has been done for you, if probably a bit heavyweight to include if you aren't using pandas for anything else</span>
<span class="comment-copy">Thanks Aemyl for the help</span>
