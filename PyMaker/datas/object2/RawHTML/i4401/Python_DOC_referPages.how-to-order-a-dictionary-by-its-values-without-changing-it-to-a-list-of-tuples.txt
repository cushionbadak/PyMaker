<div class="post-text" itemprop="text">
<p>I am currently working on a program for my robotics team the prints out a team key(a string) and a value that ranks how good it is. So the current output I have is a dictionary with the team key as the key and the value as the value. However the dictionary is not sorted. I have read that you can change it to a list of tuples which I have tried and worked, but I have just 1 issue. Currently the team key has 'frc' in front of the team number, and I remove it by doing [3:]. However when I do the same for the list of tuples, it doesn't work. So I was wondering if there was a way to sort the dictionary by its values without changing it to a list of tuples?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could add items to an ordered dict after sorting: <a href="https://docs.python.org/2/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">https://docs.python.org/2/library/collections.html#collections.OrderedDict</a></p>
<p>But if you wanted to use a tuple, changing a value in one won't work as they're immutable. However, you could slice before creating it.</p>
<p>(An extension of the top answer here: <a href="https://stackoverflow.com/questions/20944483/python-3-sort-a-dict-by-its-values">Python 3 sort a dict by its values</a>)</p>
<p><code>s = [(k[3:], d[k]) for k in sorted(d, key=d.get, reverse=True)]</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>mydict = {'frc1':40,'frc2':2,'frc3':1,'frc4':3}

for key, value in sorted(mydict.iteritems(), key=lambda (k,v): (k[3:], v)):
    print "%s: %s" % (key, value)
</code></pre>
<p>Output: </p>
<pre><code>frc1: 40  
frc2: 2  
frc3: 1  
frc4: 3 
</code></pre>
<p>This should work, if I undestand your problem correctly :)</p>
<p><a href="https://medium.com/@happymishra66/lambda-map-and-filter-in-python-4935f248593" rel="nofollow noreferrer">lambda functions</a> are quite magical </p>
</div>
<span class="comment-copy">Can you break the problem down with example?</span>
<span class="comment-copy">If you actual have a reference to the string, the slicing with <code>[3:]</code> would work too. I'm guessing you aren't unpacking the <code>tuple</code>s as you go, so you're trying to slice the wrong thing.</span>
<span class="comment-copy">Did you reject OrderedDict? (<a href="https://docs.python.org/3/library/collections.html#ordereddict-examples-and-recipes" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a>)</span>
