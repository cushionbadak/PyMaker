<div class="post-text" itemprop="text">
<p>I had a problem parsing a json file in smaller json files, here is the code so far ...</p>
<pre><code>import json
import pathlib
from pprint import pprint
import xmltodict
from yattag import indent

pathlib.Path('x:/xx/xx/AppData/Local/Programs/Python/Python36-32/example').mkdir(parents=True, exist_ok=True)

with open("text.xml", 'rb') as f:
    xmlString = f.read()

jsonString = json.dumps(xmltodict.parse(xmlString), indent=4)

with open("x:/xxxx/xx/AppData/Local/Programs/Python/Python36-32/example/data.json", 'w') as f:
    f.write(jsonString)

a = json.load(open('x:/xxxx/xx/AppData/Local/Programs/Python/Python36-32/example/data.json'))

for k, v in a.items():
    with open("x:/xxxx/xx/AppData/Local/Programs/Python/Python36-32/example/" + k + ".json", "w",
              encoding='utf-16') as p:
        p.write('{"%s" : "%s"}' % (k, v))
</code></pre>
<p>The original json file is converted from xml format, then my idea was split the json file into several smaller json files according to the data, but it only creates one json file "widgets" that has all the json , and i want to know if theres any way to modify this and create multiple json files with the content of the "widgets" class ("text" , "image", "window"). I am using python 3.x. I would apreciate any help :/</p>
<p>here is the json file :</p>
<pre><code>{"widgets":{
"widget": [ {
"debug": "on",
"window": {
    "title": "Sample Konfabulator Widget",
    "name": "main_window",
    "width": 500,
    "height": 500
},
"image": { 
    "src": "Images/Sun.png",
    "name": "sun1",
    "hOffset": 250,
    "vOffset": 250,
    "alignment": "center"
},
"text": {
    "data": "Click Here",
    "size": 36,
    "style": "bold",
    "name": "text1",
    "hOffset": 250,
    "vOffset": 100,
    "alignment": "center",
    "onMouseUp": "sun1.opacity = (sun1.opacity / 100) * 90;"
}
 }]}}    
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use Json library to read the json files as dataframes which will make your life much easier. Then you can create your own jsons using dumps.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your top-level JSON dict has a single key-value pair, <code>widgets</code>, which itself is a dict with a single key-value pair, <code>widget</code>, which is a list with a single object, which, finally, contains the objects you actually want.</p>
<p>This is easier to see if you pretty-print it:</p>
<pre><code>{
  "widgets": {
    "widget": [
      {
        "debug": "on",
        "window": {
          "title": "Sample Konfabulator Widget",
          "name": "main_window",
          "width": 500,
          "height": 500
        },
        "image": {
          "src": "Images\/Sun.png",
          "name": "sun1",
          "hOffset": 250,
          "vOffset": 250,
          "alignment": "center"
        },
        "text": {
          "data": "Click Here",
          "size": 36,
          "style": "bold",
          "name": "text1",
          "hOffset": 250,
          "vOffset": 100,
          "alignment": "center",
          "onMouseUp": "sun1.opacity = (sun1.opacity \/ 100) * 90;"
        }
      }
    ]
  }
}
</code></pre>
<p>So, obviously, iterating <code>for k, v in a.items():</code> just loops one time, with <code>k</code> set to <code>widgets</code> and <code>v</code> set to the widgets dict.</p>
<p>If you want to loop over all of the elements of that list, you need to do that explicitly:</p>
<pre><code>for k, v in a['widgets']['widget'][0].items():
</code></pre>
<hr/>
<p>Alternatively, there are a few standards for searching JSON in a more direct way (JSONPath, a simpler one I forget the name of, one based on CSS selectors, Apple's KVC, …), and libraries for all of them on PyPI. One of those libs would let you do something like:</p>
<pre><code>for k, v in jsonsearch(a, 'widgets/widget/0/*').items():
</code></pre>
<p>… which, if you later find examples with multiple things in the list, could be changed trivially to:</p>
<pre><code>for k, v in jsonsearch(a, 'widgets/widget/*/*').items():
</code></pre>
<p>However, I don't know any of these standards, or libraries, well; you'll have to do your own research to pick one that works for you.</p>
</div>
<span class="comment-copy">Please fix your indentation</span>
<span class="comment-copy">i forgot to add my json file :/ sorry is my first question here</span>
<span class="comment-copy">Don't worry. I am a beginner as well.</span>
<span class="comment-copy">thanks for the feedback, i will consider in the future</span>
<span class="comment-copy">thank you so much! i am new in python and well this info will help me with larger files , thanks!</span>
<span class="comment-copy">@lmx Do you know how to pretty-print JSON? You can <a href="https://docs.python.org/3/library/json.html#command-line-options" rel="nofollow noreferrer">use Python to do it</a>, or you can use <a href="http://jsonprettyprint.com/json-pretty-printer.php" rel="nofollow noreferrer">any of various websites</a>. Either way, it's very helpful to make sure the structure is what you think it is.</span>
<span class="comment-copy">i am actually converting a larger xml file into a json, and then the idea is to split that json</span>
