<div class="post-text" itemprop="text">
<p>Trying to remove duplicates in list of list and print same without duplicates.</p>
<p><strong>Original List</strong></p>
<p><code>a = [['country',['America_1','America_2','America_3','America_4','England_5','England_6'],['apple_1_more','orange_1_more']],['country',['Brazil_2','Brazil_3','Brazil_1','Brazil_4','Mexico_1','Mexico_3','Mexico_2'],['grapes_1_less','banana_1_more']]]</code></p>
<p><strong>looking for output:</strong></p>
<p><code>[['country', ['America', 'England'], ['orange_more', 'apple_more']], ['country', ['Mexico', 'Brazil'], ['grapes_less', 'banana_more']]]</code></p>
<p><strong>but getting:</strong></p>
<p><code>[['country', ['America', 'England'], ['orange_more', 'apple_more']], ['country', ['America', 'England', 'Mexico', 'Brazil'], ['orange_more', 'grapes_less', 'banana_more', 'apple_more']]]</code></p>
<p><strong>code::</strong> </p>
<pre><code> a = [['country',['America_1','America_2','America_3','America_4','England_5','England_6'],['apple_1_more','orange_1_more']],['country',['Brazil_2','Brazil_3','Brazil_1','Brazil_4','Mexico_1','Mexico_3','Mexico_2'],['grapes_1_less','banana_1_more']]]
aa ={}
aaa=[]
aaaa=[]
aaaaa=[]
for i in a:
    for j in i[1]:
        j=j.split('_',1)[0]
        aaa.append(j)
    for k in i[2]:
        k=k.split('_',2)[0]+'_'+k.split('_',2)[2]
        aaaa.append(k)
    aa['country'] = [i[0],list(set(aaa)),list(set(aaaa))]
    aaaaa.append(aa['country'])
print (aaaaa)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using a list comprehension, converting the second item in each sublist to and from a <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer"><code>set()</code></a>:</p>
<pre><code>a = [['country',['America','America','America','America','England','England']],['country',['Brazil','Brazil','Brazil','Brazil','Mexico','Mexico','Mexico']]]

a = [[i, list(set(j))] for i, j in a]
print(a)
</code></pre>
<p>Output:</p>
<pre><code>[['country', ['England', 'America']], ['country', ['Brazil', 'Mexico']]]
</code></pre>
<p>This may not preserve the order of the inner list, as sets are unordered, so you may need to account for this.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use this recursive function to remove duplicate item in multi level array:</p>
<pre><code>def dup(input_):
    if isinstance(input_, list):
        try:
            input_ = list(set([i.split('_')[0] if not isinstance(i, list) else i for i in input_]))
        except TypeError:
            pass
        for child in input_:
            input_[input_.index(child)] = dup(child)

    return input_
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is how I would go about it.</p>
<pre><code>country_list1 = [a[0[0]]]
country_list2 = [a[1[0]]]
duplicates = [country for country in country_list1 in country_list2]
non_duplicates = [country for country in country_list1 not in country_list2]
</code></pre>
<p>This will give you both the duplicated ones and non-duplicated
This is considering case sensitiveness of the names in both</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this approach :</p>
<pre><code>a = [['country',['America','America','America','America','England','England']],['country',['Brazil','Brazil','Brazil','Brazil','Mexico','Mexico','Mexico']]]



print(list(map(lambda x:[x[0],list(set(x[1:][0]))],a)))
</code></pre>
<p>output:</p>
<pre><code>[['country', ['England', 'America']], ['country', ['Mexico', 'Brazil']]]
</code></pre>
<p>Your variables names are very confusing , Still i tried new approach , you can try this:</p>
<pre><code>a = [['country',['America_1','America_2','America_3','America_4','England_5','England_6'],['apple_1_more','orange_1_more']],['country',['Brazil_2','Brazil_3','Brazil_1','Brazil_4','Mexico_1','Mexico_3','Mexico_2'],['grapes_1_less','banana_1_more']]]


final_data=[]
for i in a:
    sub_data=[]

    for j in i[1:]:
        d = {}

        for m in j:
            data=m.split('_')[0]
            d[data]=data

        sub_data.append(list(d.keys()))
    final_data.append(['country',*sub_data])
print(final_data)
</code></pre>
<p>output:</p>
<pre><code>[['country', ['America', 'England'], ['orange', 'apple']], ['country', ['Brazil', 'Mexico'], ['banana', 'grapes']]]
</code></pre>
<p>If your data format is always like this then you can try this:</p>
<h1>update</h1>
<pre><code>a = [['country',['America_1','America_2','America_3','America_4','England_5','England_6'],['apple_1_more','orange_1_more']],['country',['Brazil_2','Brazil_3','Brazil_1','Brazil_4','Mexico_1','Mexico_3','Mexico_2'],['grapes_1_less','banana_1_more']]]


final_data=[]
for i in a:
    sub_data=[]
    sub_extra=[]

    for j in i[1:2]:
        sub_extra.append(i[2])
        d = {}

        for m in j:
            data=m.split('_')[0]
            d[data]=data

        sub_data.extend([list(d.keys()),*sub_extra])
    final_data.append(['country',*sub_data])
print(final_data)
</code></pre>
<p>output:</p>
<pre><code>[['country', ['America', 'England'], ['apple_1_more', 'orange_1_more']], ['country', ['Mexico', 'Brazil'], ['grapes_1_less', 'banana_1_more']]]
</code></pre>
</div>
<span class="comment-copy">You'll have a much easier time if you use meaningful variable names.</span>
<span class="comment-copy">Traceback (most recent call last):     dup(a)     input_ = list(set([i.split('<i>')[0] for i in input</i>]))     input_ = list(set([i.split('<i>')[0] for i in input</i>])) AttributeError: 'list' object has no attribute 'split'</span>
<span class="comment-copy">I updated my answer @GRNearth</span>
<span class="comment-copy">Thanks, this worked perfectly...Thank @Ayodhyankit Paul... updated list of list but unable to use lambda</span>
<span class="comment-copy">updated.. with split for updated list of list ..getting error..print(list(map(lambda x:[x[0],list(set(x[1:][0].split('<i>',1)[0])),list(set(x[1:][1].split('</i>',2)[0]+'_'+[2]))],a)))</span>
<span class="comment-copy">AttributeError: 'list' object has no attribute 'split'</span>
<span class="comment-copy">@GRNearth , try updated answer.</span>
<span class="comment-copy">-  [['country', ['America', 'England'], ['apple', 'orange']], ['country', ['Brazil', 'Mexico'], ['grapes', 'banana']]]  but looking for [['country', ['America', 'England'], ['orange_more', 'apple_more']], ['country', ['Mexico', 'Brazil'], ['grapes_less', 'banana_more']]]</span>
