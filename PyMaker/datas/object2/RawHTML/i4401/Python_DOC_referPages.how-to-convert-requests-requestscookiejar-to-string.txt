<div class="post-text" itemprop="text">
<p>I have a <a href="http://docs.python-requests.org/en/master/api/#requests.cookies.RequestsCookieJar" rel="nofollow noreferrer"><code>requests.RequestCookieJar</code></a> object which contains multiple cookies from different domain/path. How can I extract a cookies string for a particular domain/path following the rules mentioned in <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#Scope_of_cookies" rel="nofollow noreferrer">here</a>?</p>
<p>For example</p>
<pre><code>&gt;&gt;&gt; r = requests.get("https://stackoverflow.com")
&gt;&gt;&gt; print(r.cookies)
&lt;RequestsCookieJar[&lt;Cookie prov=4df137f9-848e-01c3-f01b-35ec61022540 for .stackoverflow.com/&gt;]&gt;

# the function I expect
&gt;&gt;&gt; getCookies(r.cookies, "stackoverflow.com")
"prov=4df137f9-848e-01c3-f01b-35ec61022540"

&gt;&gt;&gt; getCookies(r.cookies, "meta.stackoverflow.com")
"prov=4df137f9-848e-01c3-f01b-35ec61022540"
# meta.stackoverflow.com is also satisfied as it is subdomain of .stackoverflow.com

&gt;&gt;&gt; getCookies(r.cookies, "google.com")
""
# r.cookies does not contains any cookie for google.com, so it return empty string
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you need to work with a Python dictionary of the cookies. (See my comment <a href="https://stackoverflow.com/questions/49787022/how-to-convert-requests-requestscookiejar-to-string#comment86615091_49787022">above</a>.)</p>
<pre><code>def getCookies(cookie_jar, domain):
    cookie_dict = cookie_jar.get_dict(domain=domain)
    found = ['%s=%s' % (name, value) for (name, value) in cookie_dict.items()]
    return ';'.join(found)
</code></pre>
<p>Your example:</p>
<pre><code>&gt;&gt;&gt; r = requests.get("https://stackoverflow.com")
&gt;&gt;&gt; getCookies(r.cookies, ".stackoverflow.com")
"prov=4df137f9-848e-01c3-f01b-35ec61022540"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>NEW ANSWER</strong></p>
<p>Ok, so I still don't get exactly what it is you are trying to achieve. </p>
<p>If you want to extract the originating url from a <code>requests.RequestCookieJar</code> object (so that you could then check if there is a match with a given subdomain) that is (as far as I know) impossible. </p>
<p>However, you could off course do something like:</p>
<pre><code>#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

import requests
import re

class getCookies():

    def __init__(self, url):

        self.cookiejar = requests.get(url).cookies
        self.url = url

    def check_domain(self, domain):

        try:

            base_domain = re.compile("(?&lt;=\.).+\..+$").search(domain).group()

        except AttributeError:

            base_domain = domain

        if base_domain in self.url:

            print("\"prov=" + str(dict(self.cookiejar)["prov"]) + "\"")

        else:

            print("No cookies for " + domain + " in this jar!")
</code></pre>
<p>Then if you do:</p>
<pre><code>new_instance = getCookies("https://stackoverflow.com")
</code></pre>
<p>You could then do:</p>
<pre><code>new_instance.check_domain("meta.stackoverflow.com")
</code></pre>
<p>Which would give the output:</p>
<pre><code>"prov=5d4fda78-d042-2ee9-9a85-f507df184094"
</code></pre>
<p>While: </p>
<pre><code>new_instance.check_domain("google.com")
</code></pre>
<p>Would output:</p>
<pre><code>"No cookies for google.com in this jar!"
</code></pre>
<p>Then, if you (if needed) fine-tune the regex &amp; create a list of urls, you could first loop through the list to create many instances and save them in eg a list or dict. In a second loop you could check another list of urls to see if their cookies might be present in any of the instances. </p>
<hr/>
<p><strong>OLD ANSWER</strong></p>
<p>The docs you link to explain:</p>
<blockquote>
<p><strong>items()</strong> </p>
<p>Dict-like items() that returns a list of name-value
  tuples from the jar. Allows client-code to call
  dict(RequestsCookieJar) and get a vanilla python dict of key value
  pairs.</p>
</blockquote>
<p>I think what you are looking for is:</p>
<pre><code>#!/usr/bin/env python3
# -*- coding: UTF-8 -*-

import requests

def getCookies(url):

    r = requests.get(url)

    print("\"prov=" + str(dict(r.cookies)["prov"]) + "\"")
</code></pre>
<p>Now I can run it like this:</p>
<pre><code>&gt;&gt;&gt; getCookies("https://stackoverflow.com")
"prov=f7712c78-b489-ee5f-5e8f-93c85ca06475"
</code></pre>
</div>
<span class="comment-copy">Couldn't you use <code>r.cookies.get("stackoverflow.com")</code>?</span>
<span class="comment-copy">@Straw <code>.get(key)</code> is used to get value of a specific key only, I want to get a cookie string that contains all key/value of a particular domain.</span>
<span class="comment-copy">OK, I know. So you can use <code>r.cookies.get_dict(".stackoverflow.com")</code> to get a key-value dict of a particular domain.</span>
<span class="comment-copy">@Straw Thanks. However, this function just compare domain and path value, it does not return a set of key-value that should be sent to this domain/path. <code>.stackoverflow.com</code> mean this cookie should be sent to this domain and all its subdomain (e.g. stackoverflow.com, meta.stackoverflow.com). I will update the wording of the question to make it clear.</span>
<span class="comment-copy">Ideally, it would be great to use the same code that the library uses to generate the string that is sent in a request to the domain. I looked at the source code for this and it uses Python's standard <a href="https://docs.python.org/3/library/http.cookiejar.html" rel="nofollow noreferrer">cookiejar</a> library to do this work. But all of the public code that generates these strings are coupled with a request object. So if you're looking for a standalone function like <code>getCookies()</code> in your example, you're out of luck. I recommend working with the dictionary as described in the answer below.</span>
<span class="comment-copy">Thanks, but <code>get_dict</code> is only a simple matching function, not really follow this <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#Scope_of_cookies" rel="nofollow noreferrer">rules</a>. I think the library should have the ability to do that, but I just cannot find any exposed method.</span>
<span class="comment-copy">I want to extract cookies for a domain from a set of cookies stored in <code>RequestsCookieJar</code>, not to get all cookies when I send a request to a url. Sorry for not clear on that point.</span>
