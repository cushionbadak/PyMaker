<div class="post-text" itemprop="text">
<p>I have a bitmap image and using <a href="http://www.daubnet.com/en/file-format-bmp" rel="nofollow noreferrer">this page</a> I am attempting to read the file size.  </p>
<p>In case the link breaks:</p>
<blockquote>
<p>FileSize   |   4 bytes  |  File size in bytes</p>
</blockquote>
<p>Here is part of the bitmap <code>BM\xe6\x04\x00\x00\x00\x00\x00\x006</code> I want to read from, which as I understand it the file size is between the 3rd and 7th bytes.  So <code>\xe6\x04\x00\x00</code>.</p>
<p>I remove all the <code>\x00</code> since they are null values and don't tell me anything about the file size, so I used:</p>
<pre><code>raw = '\xe6\x04\x00\x00'
character_list = [raw[b:b+1] for b in range(0, len(raw))]
non_empty = [list_ for list_ in character_list if list_ != b'\x00']
</code></pre>
<p>This returned me: <code>[b'\xe6', b'\x04']</code></p>
<p>Now I get all the values in the list using:</p>
<pre><code>size = ''
for byte in non_empty: 
    size += str(ord(byte))
    print(size)
</code></pre>
<p>Here are the results of the conversion:</p>
<p><code>\xe6</code> &gt; 230</p>
<p><code>\x04</code> &gt; 4</p>
<p>This returns me <code>2304</code> (since <code>'230' + '4'</code> is <code>2304</code>), while my bitmap image has the size of 1,254 bytes and 4,096 bytes on disk.  Clearly this is not the image size.  Where have I gone wrong?</p>
<p>As a side note.  If I take another image of size 90 bytes and run the same process with <code>Z\x00\x00\x00</code> it returns 90 as I expected.  (<code>ord('Z')</code> returning 90).</p>
</div>
<div class="post-text" itemprop="text">
<p>From poking around it looks like the byte order for the size in a bitmap is little endian (<a href="https://en.wikipedia.org/wiki/Endianness#Little-endian" rel="nofollow noreferrer">https://en.wikipedia.org/wiki/Endianness#Little-endian</a>).</p>
<p>There's a built-in method for int that can convert bytes to a integer.  <a href="https://docs.python.org/3/library/stdtypes.html#int.from_bytes" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#int.from_bytes</a></p>
<p>So for example:</p>
<pre><code>raw = b'\xe6\x04\x00\x00'
size = int.from_bytes(raw, byteorder='little')
print(size)
</code></pre>
</div>
<span class="comment-copy">Summing up 230 and 4 isn't the correct operation to calculate the file size. Think of the four bytes <code>\xe6\x04\x00\x00</code> as a 4-digit number. The first digit is <code>\xe6</code> (or 230), the 2nd digit is <code>\x04</code> (or 4) and other two digits are zero. Summing up the digits of a number will obviously not give the number as result. As an example, take the number 23: 2+3 gives 5, not 23. To get 23 from 2 and 3, you have to calculate <code>2*10+3</code> (<code>*10</code> because it's a base 10 number). Similarly, to get the correct number from 230 and 4, you have to calculate <code>4*256+230 = 1254</code> (because it's a base 256 number).</span>
<span class="comment-copy">I would suggest using the built-in <a href="https://docs.python.org/3/library/struct.html#module-struct" rel="nofollow noreferrer"><code>struct</code></a> module which could handle this and a lot more.</span>
<span class="comment-copy">Much easier and more efficient that I have been trying to use before.  Thank you.</span>
