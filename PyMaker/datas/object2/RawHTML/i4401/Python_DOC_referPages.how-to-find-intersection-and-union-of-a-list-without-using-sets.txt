<div class="post-text" itemprop="text">
<p>I am trying to find the intersection and union of two lists for an assignment, however, <strong>I cannot use sets</strong>. From set theory, an intersection between two sets is the elements that are in both sets. A union is all elements in both sets, without repetition. So far I have:</p>
<pre><code>setA = [1,2,3,4,5,6,7,8,9]
setB = [1,5,0,9]

def getUnion(a, b):
    return a + b

def getIntersection(a, b):
    return 
</code></pre>
<p>My union function is returning duplicates. Is there a way to simply find the union?</p>
<p>Also, what is the best approach to find the intersection?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> instead to calculate union and intersection</p>
<pre><code>&gt;&gt;&gt; from collections import Counter

&gt;&gt;&gt; c = Counter(setA + setB)
&gt;&gt;&gt; [a[0] for a in c.items() if a[1] &gt; 1] #Intersection
&gt;&gt;&gt; [1,5,9]

&gt;&gt;&gt; list(c.keys()) #Union
&gt;&gt;&gt; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre>
<p><code>Counter</code> object hold the data in format:</p>
<pre><code>&gt;&gt;&gt; c
&gt;&gt;&gt; Counter({1: 2, 5: 2, 9: 2, 0: 1, 2: 1, 3: 1, 4: 1, 6: 1, 7: 1, 8: 1})
</code></pre>
<p>The key is the elements in the list and the value is the occurrence of the element in the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>setA = [1,2,3,4,5,6,7,8,9]
setB = [1,5,0,9]

print (list(set(setA).intersection(setB)))
</code></pre>
<p>Output:</p>
<pre><code>[1, 5, 9]
[Finished in 0.0s]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So, assume you can use <code>sort</code>. Sort two lists first, then do with two pointers, move one pointer with smaller value forward each time.</p>
<p>For union func, add all values each time and move forward both pointers when their values are equal.
For intersection func, only add values when the values are equal.</p>
<p>Time O(nlogn+n)-&gt;O(nlogn)</p>
</div>
<div class="post-text" itemprop="text">
<p>Union and intersection without using using sets:</p>
<pre><code>setA = [1,2,3,4,5,6,7,8,9]
setB = [1,5,0,9]

intersection = [i for i in setA if i in setB]
list_union = list({i: i for i in setA + setB}.values())

print(intersection)
print(list_union)
</code></pre>
<p>Output:</p>
<pre><code>[1, 5, 9]
[1, 2, 3, 4, 5, 6, 7, 8, 9, 0]
</code></pre>
<p><strong>Explanation</strong>:</p>
<p>For union:</p>
<pre><code>[i for i in setA if i in setB]
</code></pre>
<p>Simply loops through <code>setA</code> and adds elements that are also found in <code>setB</code></p>
<p>For intersection:</p>
<pre><code>list({i: i for i in setA + setB}.values())
</code></pre>
<p>Creates a dictionary where the keys and values are the result of <code>setA + setB</code>.  Since keys in a dictionary are unique, duplicates don't show up in the final dictionary, and <code>list(dct.values())</code> is used to pull just the values needed from the dictionary.</p>
</div>
<span class="comment-copy">Or, if you can't use sets, just use dictionaries: <code>dict(e: 1 for e in (setA + setB)).keys()</code></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/q/2151517/6622817">stackoverflow.com/q/2151517/6622817</a></span>
<span class="comment-copy">It says he cannot use sets in the question.</span>
