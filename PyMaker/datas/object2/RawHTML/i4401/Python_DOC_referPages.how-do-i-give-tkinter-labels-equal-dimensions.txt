<div class="post-text" itemprop="text">
<p>The labels are currently side by side which is what I want.  However each label's width is different. Is there a way to make each label have the same width? </p>
<p>Also is there a method that allows the labels to the have equal measurements and simultaneously fill all the way up to 250?</p>
<p>Here is my current code:</p>
<pre><code>from tkinter import *

root = Tk()
root.geometry("250x50")
w = Label(root, text="Label UNO", bg="red", fg="white")
w.pack(side=LEFT)
w = Label(root, text="Label2", bg="green", fg="black")
w.pack(side=LEFT)
w = Label(root, text="Label DREI", bg="blue", fg="white")
w.pack(side=LEFT)

root.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you should try checking tkinter's <a href="http://effbot.org/tkinterbook/pack.htm" rel="nofollow noreferrer">documentation</a> on pack:</p>
<p>check if this is what you are looking for:</p>
<pre><code>root = Tk()
root.geometry("250x50")
w = Label(root, text="Label UNO", bg="red", fg="white")
w.pack(side=LEFT, fill=BOTH, expand=True)
w = Label(root, text="Label2", bg="green", fg="black")
w.pack(side=LEFT, fill=BOTH, expand=True)
w = Label(root, text="Label DREI", bg="blue", fg="white")
w.pack(side=LEFT, fill=BOTH, expand=True)
root.mainloop()
</code></pre>
<p>Fill argument basically fills the parent container.</p>
<p>Expand argument will use to additional remaining space.</p>
<p>Also be sure to take a look at tkinter weight, <a href="https://stackoverflow.com/questions/45847313/what-does-weight-do-in-tkinter">here</a> is an example.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use key word arguments <code>width</code>, and <code>height</code> with a <code>tk.Label</code></p>
<pre><code>import tkinter as tk

if __name__ == '__main__':

    root = tk.Tk()
    root.geometry("250x50")

    label_frame = tk.Frame(root)

    w = tk.Label(label_frame, text="Label UNO", bg="red", fg="white", width=8, height=2)
    w.pack(side=tk.LEFT)
    w = tk.Label(label_frame, text="Label2", bg="green", fg="black", width=8, height=2)
    w.pack(side=tk.LEFT)
    w = tk.Label(label_frame, text="Label DREI", bg="blue", fg="white", width=8, height=2)
    w.pack(side=tk.LEFT)

    label_frame.pack(expand=True)

    root.mainloop()
</code></pre>
<p><a href="https://i.stack.imgur.com/I0Nd9.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/I0Nd9.png"/></a></p>
<h3>Notes:</h3>
<ul>
<li><p><code>tkinter is imported as tk</code> in order to keep the namespace tidy.</p></li>
<li><p>The <code>tk.Labels</code> are included in a <code>tk.Frame</code>, so once this is built,
you do not have to worry about it until you pack the frame in your
GUI.</p></li>
<li><p>The units for width and height are in "text units" when the label
contains text.</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><strong>To make the labels width the same</strong>, just add the <code>width</code> option to the <code>label</code></p>
<p>e.g. <code>width=10</code> this will specifies how much space, in character widths.</p>
<p>if you want to apply the same width to multiable labels, store the width value in a variable, lets say <code>label_w = 10</code></p>
<p>so your code might look like this:</p>
<pre><code>from tkinter import *

root = Tk()
root.geometry("250x50")
label_w = 10
w = Label(root, text="Label UNO", bg="red", fg="white", width=label_w)
w.pack(side=LEFT)
w = Label(root, text="Label2", bg="green", fg="black", width=label_w)
w.pack(side=LEFT)
w = Label(root, text="Label DREI", bg="blue", fg="white", width=label_w)
w.pack(side=LEFT)

root.mainloop()
</code></pre>
<p><strong><em>simultaneously fill all the way up to 250</em></strong></p>
<p>this depend on how many labels you'll create, lets say <code>window_width = 250</code> and <code>labels_all = 3</code> then the <code>width</code> option will be <code>width = window_width/labels_all</code>
also, if you don't write a <code>geometry</code> values, the window size will automatically fit to labels.</p>
<p><strong>if your window is simple enough</strong>, you might consider using the Packer Option <code>expand</code> as in <code>expand=1</code>, also include the <code>fill</code> option if your label has color, fill Legal values: 'x', 'y', 'both', 'none'. </p>
<p>for more information, check <a href="https://docs.python.org/3/library/tkinter.ttk.html#label-options" rel="nofollow noreferrer">label-options</a>, <a href="https://docs.python.org/3/library/tkinter.html#packer-options" rel="nofollow noreferrer">packer-options</a></p>
</div>
