<div class="post-text" itemprop="text">
<p>I have text file with parse logged file, file contains:
file: output.log
End result should be:
 1. sorted the list with max number </p>
<p><code>rt01,te1/1,111,11
rt02,te1/1,11,10
rt01,te1/2,122,20
rt02,te1/2,113,5
rt02,te1/3,10,1
rt03,te1/1,1,6
rt03,te1/2,11,8</code></p>
<p>Result: </p>
<p><code>rt01,te1/2,122,20
rt01,te1/1,111,11
rt02,te1/1,11,10
rt03,te1/2,11,8
rt03,te1/1,1,6
rt02,te1/2,113,5
rt02,te1/3,10,1
</code>
What is the best way, to get the max value within the list:
I try:</p>
<pre><code>results = []
top = []
bottom = []
found = 0
with open('Python/output.log', 'r') as f:
for line in f:
    line = line.split(",")
    results.append(line)
print results

for i,j in enumerate(results[:-1]):
    #print results[i+1][3]
    if j[3] &gt; results[i+1][3]:
        top.append(j)
    elif results[i+1][3] &gt; top[3]:
        bottom.append(results[i+1])
        if top[i-1][3] &gt; results[i+1][3]:
            top.append(j.pop())
            bottom.append(j)
            #top.append(j[])

print(top)
print(bottom)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the last number in each line as the key to <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted()</code></a>:</p>
<pre><code>with open('test.txt') as f:
  data = f.read().splitlines()
  data = sorted(data, key= lambda x: int(x.split(',')[-1]), reverse=True)
  print('\n'.join(data))
</code></pre>
<p>Output:</p>
<pre><code>rt01,te1/2,122,20
rt01,te1/1,111,11
rt02,te1/1,11,10
rt03,te1/2,11,8
rt03,te1/1,1,6
rt02,te1/2,113,5
rt02,te1/3,10,1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My own solution, similar to @chrisz with <code>sorted()</code> but using the <code>csv</code> library</p>
<pre><code>import csv

results = []

with open('Python/output.log', 'r') as f:
    csvreader = csv.reader(f)
    for line in csvreader:
        results.append(line)

sorted_results = sorted(results, key=lambda x: int(x[3]), reverse=True)
</code></pre>
<p>Outputs:</p>
<pre><code>[['rt01', 'te1/2', '122', '20'],
 ['rt01', 'te1/1', '111', '11'],
 ['rt02', 'te1/1', '11', '10'],
 ['rt03', 'te1/2', '11', '8'],
 ['rt03', 'te1/1', '1', '6'],
 ['rt02', 'te1/2', '113', '5'],
 ['rt02', 'te1/3', '10', '1']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a variant of a <a href="https://stackoverflow.com/questions/4836710/does-python-have-a-built-in-function-for-string-natural-sort">natural sort</a>. If you are ONLY grouping by the final number in a CSV line, you can split on the <code>','</code>, convert that to an <code>int</code> and then negate to get max-&gt;min sorting:</p>
<pre><code>s='''\
rt01,te1/1,111,11
rt02,te1/1,11,10
rt01,te1/2,122,20
rt02,te1/2,113,5
rt02,te1/3,10,1
rt03,te1/1,1,6
rt03,te1/2,11,8'''

print '\n'.join(sorted(s.splitlines(), key=lambda s: -int(s.split(',')[-1])))
</code></pre>
<p>Prints:</p>
<pre><code>rt01,te1/2,122,20
rt01,te1/1,111,11
rt02,te1/1,11,10
rt03,te1/2,11,8
rt03,te1/1,1,6
rt02,te1/2,113,5
rt02,te1/3,10,1
</code></pre>
<p>Since Python uses a <a href="https://stackoverflow.com/a/1517824/298607">stable sort</a>, the groups in the first columns will remain in file order unless sorted by the final column.</p>
<p>If you want to sort BOTH by the final column and the numeral in the first column, you can use a regex and do something like:</p>
<pre><code>import re

def f(line):
    digits=map(int, re.findall(r'\d+', line))
    return digits[0], -digits[-1]

print '\n'.join(sorted(s.splitlines(), key=f))
</code></pre>
<p>Prints:</p>
<pre><code>rt01,te1/2,122,20
rt01,te1/1,111,11
rt02,te1/1,11,10
rt02,te1/2,113,5
rt02,te1/3,10,1
rt03,te1/2,11,8
rt03,te1/1,1,6
</code></pre>
<p>Or, if you want to sort primarily by the final column but group by the first column you can reverse the order of the tuple returned by <code>f</code>:</p>
<pre><code>def f(line):
    digits=map(int, re.findall(r'\d+', line))
    return -digits[-1], digits[0]

print '\n'.join(sorted(s.splitlines(), key=f))
</code></pre>
</div>
<span class="comment-copy">"What is the best way, to get the max value within the list?" <code>max(my_list)</code>. For the rest I have no clue what you are trying to do...</span>
<span class="comment-copy">What's wrong with what you tried? You can certainly make it a lot simpler—use <code>csv.reader(f)</code>, call <code>max</code> directly on that with a <code>key</code> function, etc.—but that may not make it easier to understand.</span>
<span class="comment-copy">hey abarnert, I guess i was making complicated</span>
<span class="comment-copy">I try to do sorted but somehow was getting int error. Thanks for the solution. How is it sorted via last value?</span>
<span class="comment-copy">thank you, @Dawg.</span>
