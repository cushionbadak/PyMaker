<div class="post-text" itemprop="text">
<p>For example, how can I randomly use one of the four functions (within the class) listed below?</p>
<pre><code>import random

class Calculate():
    def HI_1(x, y):
        return x + y
    def HI_2(x, y):
        return x - y
    def HI_3(x, y):
        return x * y
    def HI_4(x, y):
        return x/y


a = random.randint(1, 4)
b = 'HI_' + str(a)

p = Calculate.b(15, 7)
print(p)
</code></pre>
<p>My attempt to do so came with an error. Why did I get this error, and how can I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr()</code></a>, in addition your methods must be declared as <a href="https://docs.python.org/3/library/functions.html#staticmethod" rel="nofollow noreferrer"><code>staticmethod</code></a>:</p>
<pre><code>import random

class Calculate():
    @staticmethod
    def HI_1(x, y):
        return x + y

    @staticmethod
    def HI_2(x, y):
        return x - y

    @staticmethod
    def HI_3(x, y):
        return x * y

    @staticmethod
    def HI_4(x, y):
        return x/y


a = random.randint(1, 4)
b = 'HI_' + str(a)
p = getattr(Calculate, b)(15, 7)
print(b, p)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>b is still a string. You need to evaluate it into an expression:</p>
<pre><code>a = random.randint(1, 4)
b = 'HI_' + str(a)
func = eval("Calculate.{}".format(b))
func(15, 7)
</code></pre>
<p>Note you shouldn't be using <code>eval()</code> on any string that is a user input because it can lead to security vulnerabilities.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, your methods should either be static or have <code>self</code> as first argument. Once that is fixed, you could use <code>random.choice</code> instead to choose the method out of a list. This has the advantage of not depending on the methods' names.</p>
<pre><code>import random

class Calculate:
    @staticmethod
    def add(x, y):
        return x + y

    @staticmethod
    def sub(x, y):
        return x - y

    @staticmethod
    def mult(x, y):
        return x * y

    @staticmethod
    def div(x, y):
        return x/y

    @classmethod
    def random_op(cls, x, y):
        return random.choice([
            cls.add,
            cls.sub,
            cls.mult,
            cls.div
        ])(x, y)
</code></pre>
</div>
