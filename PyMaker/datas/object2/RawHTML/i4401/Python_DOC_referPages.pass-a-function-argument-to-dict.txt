<div class="post-text" itemprop="text">
<p>The following works in my current script:</p>
<pre><code>item_dict = json_data
numOfKids = len(item_dict['contents']['rootFeature']['childFeatures'])
print(str(numOfKids))
while numOfKids &gt; 0:
    numOfKids = numOfKids - 1
    assert 'handle' in json_data['contents']['rootFeature']['childFeatures'][numOfKids] 
    handleItem = json_data['contents']['rootFeature']['childFeatures'][numOfKids]['handle']
    print("Child : " + handleItem)
else:
    print("Done")
</code></pre>
<p>I am trying to move this to its own function using the following:</p>
<pre><code>def validateChildren(json_data, parentPath):
    item_dict = json_data
    childList = item_dict + parentPath    
    numOfKids = len(childList)
    print(str(numOfKids))
    while numOfKids &gt; 0:
        numOfKids = numOfKids - 1
        childPath = json_data + parentPath + "[" + numOfKids + "]"
        childHandle = json_data + parentPath + "[" + numOfKids + "][handle]"
        assert 'handle' in childPath
        handleItem = childHandle
        print("Child : " + handleItem)
    else:
        print("Done")
</code></pre>
<p>When calling the function using:</p>
<pre><code>validateChildren(json_data, "['contents']['rootFeature']['childFeatures']")
</code></pre>
<p>I receive an error:</p>
<pre class="lang-none prettyprint-override"><code>TypeError: unsupported operand type(s) for +: 'dict' and 'str'*
</code></pre>
<p>I've tried a few other ways to convert the inputted values, but I am stumped on making it work.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't just take a fragment of Python code like <code>"['contents']['rootFeature']['childFeatures'']"</code> and append it to an object and expect it to work as if you'd used the code.</p>
<p>On the very rare occasions where you really do need to do that, you can build a string out of the entire expression and call <code>eval</code>â€”but this isn't one of those very rare occasions.</p>
<p>What you're actually trying to do is apply a "key path" to a nested dict. The best way to do that is something like this:</p>
<pre><code>def validateChildren(json_data, parentPath):
    item = json_data
    for key in parentPath:
        item = item[key]
    # then use item
</code></pre>
<p>validateChildren(json_data, ('contents', 'rootFeature', 'childFeatures'))</p>
<p>If you're trying to do anything more complicated, like getting a list of all <code>json_data['contents'][:][:]</code>, or accepting a path as a string from the user rather than building it up out of string variables you already have separately, you may want to look at something like <a href="https://pypi.python.org/pypi/dpath" rel="nofollow noreferrer"><code>dpath</code></a> (or, if you're dealing with Cocoa stuff rather than internet stuff, maybe a KVC library), but for simple cases like yours, just iterating or recursing over the keys is all you need.</p>
</div>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation, as suggested when you created this account.  <a href="http://stackoverflow.com/help/mcve">Minimal, complete, verifiable example</a> applies here.  We cannot effectively help you until you post your MCVE code and accurately describe the problem. We should be able to paste your posted code into a text file and reproduce the problem you described.</span>
<span class="comment-copy">print("Child : " + str(handleItem))</span>
<span class="comment-copy">Trying to manually handle json like this is painful, error-prone and generates spaghetti code. Use any of the tons of good json libraries, or <code>dpath</code> like @abamert suggests. Read the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"><code>json</code> help</a> for starters.</span>
