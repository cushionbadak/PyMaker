<div class="post-text" itemprop="text">
<p>I am trying to get output of <code>subprocess.Popen</code> in variable.
It is working fine for <code>pwd</code> command, but not working for <code>pwdx $(pgrep -U $USER -f SimpleHTTPServer)</code> command.</p>
<p>This works:</p>
<pre><code>(Pdb++) p = subprocess.Popen("pwd", stdout=subprocess.PIPE)
(Pdb++) result = p.communicate()[0]
(Pdb++) result
'xyz'
</code></pre>
<p>This is not working:</p>
<pre><code>(Pdb++) subprocess.Popen("pwdx $(pgrep -U $USER -f SimpleHTTPServer)", stdout=subprocess.PIPE)
*** OSError: [Errno 2] No such file or directory
</code></pre>
<p>Can someone please let me know how can I save the output of it to a variable?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to pass a command with arguments to <code>Popen()</code>, you have to pass it as a list, like so:</p>
<pre><code>subprocess.Popen(['/bin/ls', '-lat'])
</code></pre>
<p>If you just pass a single string as in your example, it assumes the entire thing is the command name, and obviously there is no command literally named <code>pwdx $(pgrep -U $USER -f SimpleHTTPServer)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>As the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">docs</a> and previous answers already state the command you want to execute via subprocess.Popen() needs to be passed as a <strong>list</strong>.</p>
<p>From the docs:</p>
<blockquote>
<p>Note in particular that options (such as -input) and arguments (such
  as eggs.txt) that are separated by whitespace in the shell go in
  separate list elements, while arguments that need quoting or backslash
  escaping when used in the shell (such as filenames containing spaces) are single list elements.</p>
</blockquote>
<p>Another useful tip you can get from the docs is to use <code>shlex.split()</code> to help you to properly split your command into a list.</p>
<p>Beware though that the use of special shell parameters (e.g. <code>$USER</code>) might not work well with subprocess.Popen() unless you would set the <code>shell=True</code> option, which you shouldn't do without reading the doc's <a href="https://docs.python.org/3/library/subprocess.html#security-considerations" rel="nofollow noreferrer">Security Considerations</a>. </p>
</div>
<span class="comment-copy">Thanks, I broke the command into multiple ones and could resolve the issue.</span>
