<div class="post-text" itemprop="text">
<p>Consider the following example strings:</p>
<pre><code>abc1235abc53abcXX

123abc098YXabc
</code></pre>
<p>I want to capture the groups that occur between the abc, </p>
<p>e.g. I should get the following groups:</p>
<pre><code>1235, 53, XX
123, 098YX
</code></pre>
<p>I'm trying this regex, but somehow it does not capture the in-between text:</p>
<pre><code>(abc(.*?))+
</code></pre>
<p>What am I doing wrong?</p>
<p>EDIT: I need to do it using regex, no string splitting, since I need to apply further rules on the captured groups.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong><code>re.findall()</code></strong> approach with specific regex pattern:</p>
<pre><code>import re

strings = ['abc1235abc53abcXX', '123abc098YXabc']
pat = re.compile(r'(?:abc|^)(.+?)(?=abc|$)')    # prepared pattern

for s in strings:
    items = pat.findall(s)
    print(items)
    # further processing
</code></pre>
<p>The output:</p>
<pre><code>['1235', '53', 'XX']
['123', '098YX']
</code></pre>
<hr/>
<ul>
<li><code>(?:abc|^)</code> - non-captured group to match either <code>abc</code> substring OR <em>start of the string</em> <code>^</code></li>
<li><code>(.+?)</code> - captured group to match any character sequence as few times as possible</li>
<li><code>(?=abc|$)</code> - lookahead positive assertion, ensures that the previous matched item is followed by either <code>abc</code> sequence OR <em>end of the string</em> <code>$</code> </li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer">re.split</a>:</p>
<pre><code>import re

s = 'abc1235abc53abcXX'

re.split('abc', s)
# ['', '1235', '53', 'XX']
</code></pre>
<p>Note that you get an empty string, representing the match before the first 'abc'.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try splitting the string by <code>abc</code> and then remove the empty results by using <code>if</code> statement inside <code>list</code> comprehension as below:</p>
<pre><code>[r for r in re.split('abc', s) if r]
</code></pre>
</div>
<span class="comment-copy">I guess, I simplified the question too much, I don't need to split it, I need to capture the group and then apply a further regex</span>
