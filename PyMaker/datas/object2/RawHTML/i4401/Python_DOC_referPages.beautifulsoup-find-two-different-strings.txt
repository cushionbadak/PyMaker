<div class="post-text" itemprop="text">
<p>I'm currently using Selenium and Beautiful soup to grab all the HTML data from a website. Currently all the data is stored in a variable in Python.</p>
<pre><code>soup = BeautifulSoup(driver.page_source, 'lxml')
</code></pre>
<p>What is the best way to look for the occurrence of two different words, either exactly "Open" or exactly "Closed" and print them to the console in the order that they are found.</p>
<p>I tried the following:</p>
<pre><code>for node in soup.find_all(text=lambda x: x and "Open" in x):
print(node)
</code></pre>
<p>But how would I also get it to search for exactly "Closed"</p>
<p><strong>Updated code I have:</strong></p>
<pre><code>soup = BeautifulSoup(driver.page_source, 'lxml')

status = soup.find('div', attrs={"class":"pagebodydiv"})

with open("status.txt", "w") as file:
    for node in status.find_all(text=lambda t: t in ('Open', 'Closed')):
        file.write(node.encode("utf-8")+"\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a> here.</p>
<pre><code>for node in soup.find_all(text=lambda t: t and any(x in t for x in ['Open', 'Closed'])):
    print(node)
</code></pre>
<p>This will be useful as a general solution. If you have more words to search for, you can simply add them in the list.</p>
<p>If you want to know what <code>any()</code> does, have a look at the <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p><strong>any(</strong><i>iterable</i><strong>):</strong></p>
<blockquote>
<p>Return <code>True</code> if any element of the <em>iterable</em> is true. If the
    iterable is empty, return <code>False</code>. Equivalent to:</p>
<pre><code>def any(iterable):
    for element in iterable:
        if element:
            return True
    return False
</code></pre>
</blockquote>
</blockquote>
<hr/>
<p><strong>Edit:</strong> Use the above solution if you want to search sentences that contain the specified words. But, if you want to match the exact text (as mentioned in the edited question), you can use what <a href="https://stackoverflow.com/questions/49779905/beautifulsoup-find-two-different-strings#comment86576185_49780254">@Jatimir mentioned in the comments</a>:</p>
<pre><code>for node in soup.find_all(text=lambda t: t in ('Open', 'Closed')):
    print(node)
</code></pre>
</div>
<span class="comment-copy">Doesn't the element you want to scrap have a <code>class</code> or <code>id</code>?</span>
<span class="comment-copy">the only unique tag it has is a font tag. Otherwise all the tags are the same and have no id's or classes</span>
<span class="comment-copy">Why not <code>text=lambda t: t in ('Open', 'Closed')</code>? :D</span>
<span class="comment-copy">Because, the text can contain words other than <code>Open</code> and <code>Closed</code>. For example <code>'this text contains Open' in ('Open', 'Closed')</code> won't work.</span>
<span class="comment-copy">Ye, sure, I missed that. I thought OP just wants the elements containing exactly one of these. Sorry ^^</span>
<span class="comment-copy">Have a look at the edit. @Jatimir, looks like OP was after the same thing you thought he wanted.</span>
<span class="comment-copy">I don't want to see the code, please post an example of what you are scraping. I am only guessing here without actually looking at the data. Maybe you have some whitespacing in the tags</span>
