<div class="post-text" itemprop="text">
<p>Is there a string similarity measure available in Python+Sqlite, for example with the <code>sqlite3</code> module? </p>
<p>Example of use case: </p>
<pre><code>import sqlite3
conn = sqlite3.connect(':memory:')
c = conn.cursor()
c.execute('CREATE TABLE mytable (id integer, description text)')
c.execute('INSERT INTO mytable VALUES (1, "hello world, guys")')
c.execute('INSERT INTO mytable VALUES (2, "hello there everybody")')
</code></pre>
<p>This query should match the row with ID 1, but not the row with ID 2:</p>
<pre><code>c.execute('SELECT * FROM mytable WHERE dist(description, "He lo wrold gyus") &lt; 6')
</code></pre>
<p><strong>How to do this in Sqlite+Python?</strong></p>
<p>Notes about what I've found so far:</p>
<ul>
<li><p>The <a href="https://en.wikipedia.org/wiki/Levenshtein_distance" rel="nofollow noreferrer">Levenshtein distance</a>, i.e. the minimum number of single-character edits (insertions, deletions or substitutions) required to change one word into the other, can be useful, but I'm not sure if an official implementation exists in Sqlite (I've seen a few custom implementations, like <a href="https://github.com/mateusza/SQLite-Levenshtein" rel="nofollow noreferrer">this one</a>)</p></li>
<li><p>The <a href="https://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance" rel="nofollow noreferrer">Damerau-Levenshtein</a> is the same, except it also allows transposition between 2 adjacent characters; it is also called the <a href="https://en.wikipedia.org/wiki/Edit_distance" rel="nofollow noreferrer">Edit distance</a></p></li>
<li><p>I know it's possible to <a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.create_function" rel="nofollow noreferrer">define a function</a> myself, but implementing such a distance will be non-trivial (doing natural language processing comparison super efficiently for databases is really non-trivial), that's why I wanted to see if Python / Sqlite already features such a tool</p></li>
<li><p>Sqlite has FTS (Full Text Seach) features: <a href="https://www.sqlite.org/fts3.html" rel="nofollow noreferrer">FTS3</a>, <a href="https://www.sqlite.org/fts3.html#differences_between_fts3_and_fts4" rel="nofollow noreferrer">FTS4</a>, <a href="https://sqlite.org/fts5.html" rel="nofollow noreferrer">FTS5</a></p>
<pre><code>CREATE VIRTUAL TABLE enrondata1 USING fts3(content TEXT);     /* FTS3 table */
CREATE TABLE enrondata2(content TEXT);                        /* Ordinary table */
SELECT count(*) FROM enrondata1 WHERE content MATCH 'linux';  /* 0.03 seconds */
SELECT count(*) FROM enrondata2 WHERE content LIKE '%linux%'; /* 22.5 seconds */
</code></pre>
<p>but I don't find about string comparison with such a "similarity distance", FTS's features <code>MATCH</code> or <code>NEAR</code> don't seem to have similarity measure with letters changes, etc.</p></li>
<li><p>Moreover <a href="https://stackoverflow.com/a/35025747/1422096">this answer</a> shows that:</p>
<blockquote>
<p>SQLite's FTS engine is based on tokens - keywords that the search engine tries to match.<br/>
  A variety of tokenizers are available, but they are relatively simple. The "simple" tokenizer simply splits up each word and lowercases it: for example, in the string "The quick brown fox jumps over the lazy dog", the word "jumps" would match, but not "jump". The "porter" tokenizer is a bit more advanced, stripping the conjugations of words, so that "jumps" and "jumping" would match, <strong>but a typo like "jmups" would not.</strong></p>
</blockquote>
<p>The latter (the fact that "jmups" cannot be found as similar to "jumps") makes it unpractical for my use case, sadly.</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Here is a ready-to-use example <code>test.py</code>:</p>
<pre><code>import sqlite3
db = sqlite3.connect(':memory:')
db.enable_load_extension(True)
db.load_extension('./spellfix')                 # for Linux
#db.load_extension('./spellfix.dll')            # &lt;-- UNCOMMENT HERE FOR WINDOWS
db.enable_load_extension(False)
c = db.cursor()
c.execute('CREATE TABLE mytable (id integer, description text)')
c.execute('INSERT INTO mytable VALUES (1, "hello world, guys")')
c.execute('INSERT INTO mytable VALUES (2, "hello there everybody")')
c.execute('SELECT * FROM mytable WHERE editdist3(description, "hel o wrold guy") &lt; 600')
print c.fetchall()
# Output: [(1, u'hello world, guys')]
</code></pre>
<p>Important note: The distance <a href="https://sqlite.org/spellfix1.html" rel="nofollow noreferrer">editdist3</a> is normalized so that</p>
<blockquote>
<p>the value of 100 is used for insertion and deletion and 150 is used for substitution</p>
</blockquote>
<hr/>
<h2>Here is what to do first on Windows:</h2>
<ol>
<li><p>Download <a href="https://sqlite.org/2016/sqlite-src-3110100.zip" rel="nofollow noreferrer">https://sqlite.org/2016/sqlite-src-3110100.zip</a>, <a href="https://sqlite.org/2016/sqlite-amalgamation-3110100.zip" rel="nofollow noreferrer">https://sqlite.org/2016/sqlite-amalgamation-3110100.zip</a> and unzip them</p></li>
<li><p>Replace <code>C:\Python27\DLLs\sqlite3.dll</code> by the new <a href="https://www.sqlite.org/download.html" rel="nofollow noreferrer">sqlite3.dll</a> from <a href="https://www.sqlite.org/download.html" rel="nofollow noreferrer">here</a>. If skipping this, you'd get a <code>sqlite3.OperationalError: The specified procedure could not be found</code> later</p></li>
<li><p>Run:</p>
<pre><code>call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat"  
</code></pre>
<p>or</p>
<pre><code>call "C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall.bat" x64
cl /I sqlite-amalgamation-3110100/ sqlite-src-3110100/ext/misc/spellfix.c /link /DLL /OUT:spellfix.dll
python test.py
</code></pre>
<p>(With MinGW, it would be: <code>gcc -g -shared spellfix.c -I ~/sqlite-amalgation-3230100/ -o spellfix.dll</code>)</p></li>
</ol>
<h2>Here is how to do it on Linux Debian:</h2>
<p>(based on <a href="https://stackoverflow.com/a/36427821/1422096">this answer</a>)</p>
<pre><code>apt-get -y install unzip build-essential libsqlite3-dev
wget https://sqlite.org/2016/sqlite-src-3110100.zip
unzip sqlite-src-3110100.zip
gcc -shared -fPIC -Wall -Isqlite-src-3110100 sqlite-src-3110100/ext/misc/spellfix.c -o spellfix.so
python test.py
</code></pre>
<h2>Here is how to do it on Linux Debian with an older Python version:</h2>
<p>If your distribution's Python is a bit old, it will require another method. As <code>sqlite3</code> module is built-in in Python, it seems <a href="https://github.com/ghaering/pysqlite/issues/123#issuecomment-381447917" rel="nofollow noreferrer">not straightforward</a> to upgrade it (<code>pip install --upgrade pysqlite</code> would only upgrade the pysqlite module, not the underlying SQLite library). Thus <a href="https://stackoverflow.com/a/49847451/1422096">this method</a> works for example if <code>import sqlite3; print sqlite3.sqlite_version</code> is 3.8.2:</p>
<pre><code>wget https://www.sqlite.org/src/tarball/27392118/SQLite-27392118.tar.gz
tar xvfz SQLite-27392118.tar.gz
cd SQLite-27392118 ; sh configure ; make sqlite3.c ; cd ..
gcc -g -fPIC -shared SQLite-27392118/ext/misc/spellfix.c -I SQLite-27392118/src/ -o spellfix.so
python test.py   # [(1, u'hello world, guys')]
</code></pre>
</div>
<span class="comment-copy">Thanks @JacquesGaudin, I fixed the link, and included your MinGW version.</span>
<span class="comment-copy">Always a pleasure, I learnt a bit of msvc command line on the way!</span>
<span class="comment-copy">Very nice write up :-). Note that, with a little effort, you can modify the weights to differ from 100 and 150.</span>
<span class="comment-copy">Oh that can be interesting @bodo. Have you tried other weights? (Initially I thought about using weight 1 (or 100) for everything like in the usual definition of Levenshtein distance, but then I thought: there's maybe a reason why 100 and 150 are used as default...) ? I'm curious about this, since I'm coding a <i>"Are you sure you text you entered is not already in our database?"</i> feature [a bit similar to SO's "Questions that may already have your answer" when you ask a question], thus I need to compare the user input text with the texts already present in database.</span>
<span class="comment-copy">@SL5net this is folder name problem, probably use with quotes, etc. Except this, I have no idea about what it could be</span>
