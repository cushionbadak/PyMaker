<div class="post-text" itemprop="text">
<p>ex: <code>"32 ½ is not very hot " to x = "info: 32, numerator = 1, denominator = 2"</code></p>
<p>Note: it could be <code>3/9</code>, but it <strong>cannot</strong> be simplified into <code>1/3</code> aka literally get what is in the string.</p>
<p>I need to detect the fractional string in a longer string and expand the information to a more usable form.</p>
<p><code>½</code> has been given to me decoded and is a string with length one.</p>
</div>
<div class="post-text" itemprop="text">
<p>There seem to be 19 such forms (<a href="http://unicode.org/cldr/utility/list-unicodeset.jsp?a=[:Decomposition_Type=Fraction:]" rel="nofollow noreferrer">here</a>) and they all start with the name VULGAR FRACTION.</p>
<pre><code>import unicodedata

def fraction_finder(s):
    for c in s:
        try:
            name = unicodedata.name(c)
        except ValueError:
            continue
        if name.startswith('VULGAR FRACTION'):
            normalized = unicodedata.normalize('NFKC', c)
            numerator, _slash, denominator = normalized.partition('⁄')
            yield c, int(numerator), int(denominator)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; s = "32 ½ is not very hot "
&gt;&gt;&gt; print(*fraction_finder(s))
('½', 1, 2)
</code></pre>
</div>
<span class="comment-copy">What have you attempted?</span>
<span class="comment-copy">predefined dictionary with various vulgar fraction keys. I search each character in the string (str[i] == '½') and if it matches a key,  return the value for that key:  (1/2) which I had to write manually (very short and limited to a few fractions).</span>
<span class="comment-copy">Could you be more explicit about what your inputs/outputs are going to be?  Are you just trying to turn <code>'½'</code> into <code>'1/2'</code>?  <a href="https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize" rel="nofollow noreferrer"><code>unicodedata.normalize</code></a> can do that.  <code>unicodedata.normalize('NFKD', '½')</code></span>
<span class="comment-copy">@EdZ  What's wrong with that way?  Seems simple and best to me.</span>
<span class="comment-copy">@wim scaling up to cover all possible fractions</span>
<span class="comment-copy">Is it not even possible to do 21/987? There is only 19 vulgar fractions?</span>
<span class="comment-copy">@EdZ  In the current unicode spec, yeah.  I can't say they won't add new ones, though!</span>
<span class="comment-copy">@wim it's actually possible to write any fraction with <a href="https://en.wikipedia.org/wiki/Unicode_subscripts_and_superscripts" rel="nofollow noreferrer">subscript and superscript</a>. Unicode even have U+002F <code>/</code> Solidus and U+2044 ⁄ Fraction slash for that purpose. So we can have ²¹/₉₈₇</span>
<span class="comment-copy">@LưuVĩnhPhúc  Yep, but this question is limited to fractions which are "a string with length one" and that seems to rule out the composed forms.</span>
<span class="comment-copy">Off-topic, but <a href="https://en.wikipedia.org/wiki/Talk%3ABaseball_scorekeeping#%E2%86%89?" rel="nofollow noreferrer">↉</a> made me curious.</span>
