<div class="post-text" itemprop="text">
<p>Is there a more elegant way of comparing these two files?</p>
<p>Right now I am getting the following error message: <code>syntax error near unexpected token (</code>... <code>diff &lt;( tr -d ' '</code>.</p>
<pre><code>result = Popen("diff &lt;( tr -d ' \n' &lt;" + file1 + ") &lt;( tr -d ' \n' &lt;" 
                + file2 + ") | wc =l", shell=True, stdout=PIPE).stdout.read()
</code></pre>
<p>Python seems to read <code>"\n"</code> as a literal character.</p>
</div>
<div class="post-text" itemprop="text">
<p>The constructs you are using are interpreted by <code>bash</code> and do not form a standalone statement that you can pass to <code>system()</code> or <code>exec()</code>.</p>
<ul>
<li><code>&lt;( ${CMD} )</code></li>
<li><code>&lt; ${FILE}</code></li>
<li><code>${CMD1} | ${CMD2}</code></li>
</ul>
<p>As such, you will need to wire-up the redirection and pipelines yourself, or call on <code>bash</code> to interpret the line for you (as @wizzwizz4 suggests).</p>
<hr/>
<p>A better solution would be to use something like <a href="https://docs.python.org/3/library/difflib.html" rel="nofollow noreferrer"><code>difflib</code></a> that will perform this internally to your process rather than calling on <a href="http://man7.org/linux/man-pages/man3/system.3.html" rel="nofollow noreferrer"><code>system()</code></a> / <a href="https://linux.die.net/man/2/fork" rel="nofollow noreferrer"><code>fork()</code></a> / <a href="https://linux.die.net/man/3/exec" rel="nofollow noreferrer"><code>exec()</code></a>.</p>
<p>Using <a href="https://docs.python.org/3/library/difflib.html#difflib.unified_diff" rel="nofollow noreferrer"><code>difflib.unified_diff</code></a> will give you a similar result:</p>
<pre class="lang-py prettyprint-override"><code>import difflib

def read_file_no_blanks(filename):
    with open(filename, 'r') as f:
        lines = f.readlines()

    for line in lines:
        if line == '\n':
            continue

        yield line

def count_differences(diff_lines):
    diff_count = 0

    for line in diff_lines:
        if line[0] not in [ '-', '+' ]:
            continue
        if line[0:3] in [ '---', '+++' ]:
            continue

        diff_count += 1

    return diff_count

a_lines = list(read_file_no_blanks('a'))
b_lines = list(read_file_no_blanks('b'))

diff_lines = difflib.unified_diff(a_lines, b_lines)

diff_count = count_differences(diff_lines)
print('differences: %d' % ( diff_count ))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This will fail when you fix the syntax error because you are attempting to use <code>bash</code> syntax in what is implemented as a C <code>system</code> call.</p>
<p>If you wish to do this in this way, either write a shell script or use the following:</p>
<pre><code>result = Popen(['bash', '-c', 
                "diff &lt;( tr -d ' \n' &lt;" + file1 + ") &lt;( tr -d ' \n' &lt;" 
                + file2 + ") | wc =l"], shell=True, stdout=PIPE).stdout.read()
</code></pre>
<p>This is not an elegant solution, however, since it is relying on the GNU coreutils and <code>bash</code>. A more elegant solution would be pure Python. You could do this with the <a href="https://docs.python.org/3/library/difflib.html" rel="nofollow noreferrer"><code>difflib</code></a> module and the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re</code></a> module.</p>
</div>
<span class="comment-copy">Sorry that was a typo on my part. It's fixed on the original code</span>
<span class="comment-copy">BTW, you can use the builtin <code>difflib</code> module instead of using a system call</span>
<span class="comment-copy">So you still get that <code>syntax error near unexpected token</code>...?</span>
<span class="comment-copy">@Aran-Fey yea I do</span>
<span class="comment-copy">@DeepSpace is there a <code>difflib</code> equivalent for what I am trying to do?</span>
<span class="comment-copy">I get the following error - <code>can't assign to function call</code></span>
<span class="comment-copy">@methuselah That's probably because you're doing something like <code>result() = Popen</code>... There was a typo in my code though; I've fixed that now.</span>
