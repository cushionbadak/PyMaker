<div class="post-text" itemprop="text">
<p>I have a CSV file with date, time, Positive and Negative columns. There are duplication of dates such as row 4 and 5 with different positive and negative value. I wanted to match the user input date with the dates in the csv file and return the index of the date in order for me to get the different positive and negative values. </p>
<p>However, I tried to for loops but it always return me the first index of the date. </p>
<pre><code>The CSV file look like this:
Date      Pos Neg
20180402   1   0
20180402   0   1
20180401   0   1
20180402   1   0

for i in range(len(combine_list)): 
xdate = combine_list[i][0]
print(xdate)
if user_date3 ==xdate:
    print("yes")
    count_price +=1
    index1 = date_list.index(xdate)
    print(index1)
    #index1.append(index1)
</code></pre>
<p>Sorry if the code if messy as I just started to learn how to code. Any help is appreciated. Thanks! :)</p>
</div>
<div class="post-text" itemprop="text">
<p>A <a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow noreferrer">for loop will iterate over items in a sequence</a>. If you need a reference to the index of each item in the sequence, use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a>.  </p>
<p>Assuming <code>combine_list</code> is a list of lists:</p>
<pre><code>combine_list = [['20180402',1,0],
                ['20180402',0,1],
                ['20180401',0,1],
                ['20180402',1,0]]

for i, line in enumerate(combine_list): 
    xdate = line[0]
    print(xdate)
    if user_date3 == xdate:
        print("yes")
        count_price +=1
        index1 = i
        print(index1)
        #index1.append(index1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm assuming that you have imported your .csv file as a table multi-dimensional array.</p>
<pre><code>table = [['Date', 'Pos', 'Neg'],
         [20180402, 1, 0],
         [20180402, 0, 1],
         [20180401, 0, 1],
         [20180402, 1, 0]]

def filter_data(table, date):
    filtered_data = [table[0]]
    for row in table[1:]:
        if row[0] == date:
            filtered_data.append(row)
    return filtered_data

print filter_data(table, 20180402)
</code></pre>
</div>
<span class="comment-copy">For instance, if the user inputs 20180402 would you want to get all 3 rows in that example that match 20180402?</span>
<span class="comment-copy">Yes. I would want to get all the 3 rows index so that I can pull out the positive and negative value.</span>
<span class="comment-copy">One possibility is to look into <a href="https://pandas.pydata.org/pandas-docs/stable/index.html" rel="nofollow noreferrer">pandas</a>. You'd be able to accomplish this within a few lines without a loop. It's very well suited to manipulate data like this.</span>
<span class="comment-copy">thanks for the help! :D</span>
<span class="comment-copy">Thanks you so much! :D</span>
<span class="comment-copy">thanks for the help! :D</span>
