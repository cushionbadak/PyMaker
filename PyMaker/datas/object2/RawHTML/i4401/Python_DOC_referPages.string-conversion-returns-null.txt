<div class="post-text" itemprop="text">
<p>Trying to convert this string (put in the variable <code>a1</code>):</p>
<pre><code> '\'redis_import\':\'start\',\'redis_import\':\'dim_user_level\''
</code></pre>
<p>to:</p>
<pre><code>'\'start\':\'redis_import\',\'dim_user_level\':\'redis_import\''
</code></pre>
<p>I have tried <code>print a1.split(',').reverse()</code> but this returns <code>null</code>. Why? and how to achieve this without using a loop?</p>
<p>Any help is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Split on comma, split on colons, reverse, join colons, join commas:</p>
<pre><code>s = '\'redis_import\':\'start\',\'redis_import\':\'dim_user_level\''
','.join(':'.join(i.split(':')[::-1]) for i in s.split(','))
#"'start':'redis_import','dim_user_level':'redis_import'"
</code></pre>
<p>To understand this better just observe the output of these different calls:</p>
<pre><code>&gt;&gt;&gt; s.split(',')
["'redis_import':'start'", "'redis_import':'dim_user_level'"]
&gt;&gt;&gt; s.split(',')[0]
"'redis_import':'start'"
&gt;&gt;&gt; s.split(',')[0].split(':')
["'redis_import'", "'start'"]
&gt;&gt;&gt; s.split(',')[0].split(':')[::-1]
["'start'", "'redis_import'"]
&gt;&gt;&gt; ','.join(('a', 'b', 'c'))
'a,b,c'
&gt;&gt;&gt; [i[::-1] for i in [[1,2], [3,4]]]
[[2, 1], [4, 3]]
</code></pre>
<hr/>
<p>Some further reading:</p>
<ul>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split</code> - the method used to separate the strings at delimiters</a></li>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join</code> - the method used to join iterables back to strings</a></li>
<li><a href="https://www.python.org/dev/peps/pep-0289/" rel="nofollow noreferrer">a good introduction to those one-line generator expressions</a></li>
<li><a href="https://docs.python.org/2.3/whatsnew/section-slices.html" rel="nofollow noreferrer">a section about slicing and how they can be used to reverse sequences</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>If you want it as a dict. </p>
<pre><code>s = '\'redis_import\':\'start\',\'redis_import\':\'dim_user_level\''
res = {}
for i in s.split(","):
    val =  list(reversed(i.split(":")))
    res[val[0].replace("'", "")] = val[1].replace("'", "")    
print(res)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>{'start': 'redis_import', 'dim_user_level': 'redis_import'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all <code>.reverse()</code> method reverse the list and returns <code>None</code></p>
<p>so you can use <a href="https://docs.python.org/3/library/functions.html#reversed" rel="nofollow noreferrer">reversed()</a> which will return you iterator of reverse of the list</p>
<pre><code>a =  '\'redis_import\':\'start\',\'redis_import\':\'dim_user_level\''

print(', '.join([':'.join(reversed(i.split(':'))) for i in a.split(',')])) # "'start':'redis_import', 'dim_user_level':'redis_import'"
</code></pre>
</div>
<span class="comment-copy">That's not a valid python string, please fix it.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ Sorry I forgot to edit it. Now the string is fine.</span>
<span class="comment-copy">So, something like <code>','.join([':'.join(i.split(':')[::-1]) for i in  string.split(',')])</code></span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ Thanks for you reply! It looks cool. But the structure is too complicated for me to understand at the moment. Can you please tell me the name of this kind of expressions so that I can read more materials.</span>
<span class="comment-copy">There's lot going on there. I use str split to split your string into chunks, and then split each chunk into keys and values, reverse them, join them, and then join the reversed chunks. This is done using split, join, and a list comprehension.</span>
