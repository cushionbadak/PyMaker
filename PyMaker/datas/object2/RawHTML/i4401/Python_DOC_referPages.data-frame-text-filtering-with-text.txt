<div class="post-text" itemprop="text">
<p>I need some help with running some filter on some data. I have a a data set made up of text. And i also have a list of words. I would like to filter each row of my data such that the remaining text in the rows will be made up of only words in the list object</p>
<pre><code>words

(cell, CDKs, lung, mutations monomeric, Casitas, Background, acquired, evidence, kinases, small, evidence, Oncogenic )


data

ID  Text

0   Cyclin-dependent kinases CDKs regulate a 

1   Abstract Background Non-small cell lung  

2   Abstract Background Non-small cell lung 

3   Recent evidence has demonstrated that acquired

4   Oncogenic mutations in the monomeric Casitas  
</code></pre>
<p>so after my filter i would like the data-frame to look like this </p>
<pre><code>data

ID  Text

0    kinases CDKs  

1   Background cell lung  

2   Background small cell lung 

3   evidence acquired

4   Oncogenic mutations monomeric Casitas  
</code></pre>
<p>I tried using the <code>iloc</code> and similar functions but I dont seem to get it. any help with that?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply use <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.apply.html" rel="nofollow noreferrer"><code>apply()</code></a> along with a simple list comprehension:</p>
<pre><code>&gt;&gt;&gt; df['Text'].apply(lambda x: ' '.join([i for i in x.split() if i in words]))
0                             kinases CDKs
1                     Background cell lung
2                     Background cell lung
3                        evidence acquired
4    Oncogenic mutations monomeric Casitas
</code></pre>
<p>Also, I made words a <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer"><code>set</code></a> to improve performance (<code>O(1)</code> average lookup time), I recommend you do the same.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not certain this is the most elegant of solutions, but you could do:</p>
<pre><code>to_remove = ['foo', 'bar']
df = pd.DataFrame({'Text': [
    'spam foo&amp; eggs', 
    'foo bar eggs bacon and lettuce', 
    'spam and foo eggs'
]})

df['Text'].str.replace('|'.join(to_remove), '')
</code></pre>
</div>
<span class="comment-copy">where come from your data ? array ? text file ? did you try something ?</span>
<span class="comment-copy">I may have a bad case of <code>regex</code>, but I was once advice to flee from the <code>apply</code> function like the plague when dealing with the <code>str</code> type in favor of the <code>str</code> attribute.</span>
<span class="comment-copy">@AaronN.Brock, according to my timings, the apply approach will be faster.  However, you may be correct you should avoid <code>apply()</code> for strings, I'm very new to pandas so I am unsure.</span>
<span class="comment-copy">as I mentioned, my solution uses <code>regex</code> even though it probably doesn't need it.  But I feel like there's a nicer solution using <a href="https://pandas.pydata.org/pandas-docs/stable/text.html" rel="nofollow noreferrer">Working with Text</a></span>
