<div class="post-text" itemprop="text">
<p>So as part of my program, I have a button making subroutine that takes in several parameters in order to place it, colour it etc...</p>
<pre><code>def makeTile(message, fontSize, x, y, w, h, overColour, notOverColour)
</code></pre>
<p>Effectively, what I want to be able to do is have a text file with a set of x and y coordinates on each line to create a button. 10 unique lines in the text document would mean 10 buttons could be made.</p>
<p>If I layed out the text document like this...</p>
<p>300, 200<br/>
300, 210<br/>
300, 220<br/>
310, 200<br/>
310, 210<br/>
310, 220 </p>
<p>for example...<br/>
How could I read through each line, place the first value into an "x" variable and the second value into a "y" variable so that they can both be used in the button creation subroutine, and then move onto the next line, until all lines in the file have been read and all buttons been made?
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>If you don't want to bother with CSV, you can just read the file straight, and then call the .split() command on each line to get the x and y.</p>
<pre><code>with open("file.txt") as f:
    for line in f:
        x, y = line.split(", ")  # splits the line into the part before the comma and after the comma
</code></pre>
<p>And do what you please with x and y. You may want to convert them to ints. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can open the csvfile, then for each line, use indexing to put the x and y into the function call:</p>
<pre><code>import csv

with open('lines.csv') as l: # Open the File
    l = csv.reader(l)
    for row in l: #start a loop
#use row[0] for x (the first item in the row and row[1] as y (the 2nd item)
        makeTile(message, fontSize, row[0], row[1], w, h, overColour, notOverColour)
</code></pre>
<p>This will create a tile from each row passed in.</p>
</div>
<span class="comment-copy">This is a CSV—Comma Separated Values—file. You can use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module to read it; there are nice examples in the docs. Or, since it's a really simple example of a CSV, you can just iterate <code>for line in file:</code> and do <code>x, _, y = line.partition(',')</code>. Either way, you'll probably want to pass <code>int(x), int(y)</code> rather than strings to the <code>makeTile</code> function, but that's the only really tricky bit. So you should be able to get started on this, and come back with a more specific question (with a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>) if you get stuck.</span>
<span class="comment-copy">Welcome to SO. Unfortunately this isn't a discussion forum or tutorial service. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links found on that page.  You should invest some time working your way through <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a>, practicing the examples. It will give you an introduction to the tools Python has to offer and you may even start to get ideas for solving your problem.</span>
<span class="comment-copy">forgot it.. it is always best practise to include the reader but on a small file like that it wont matter..</span>
