<div class="post-text" itemprop="text">
<p>I have a list containing a string and lists. I should show you;</p>
<pre><code>list_x = ['a', ['j', '1', 'x'], ['k', '2', 'y'], ['a', '3', 'hj'],
          'd', ['b', '4', 'df'], ['c', '5', 'er'], ['d', '6', 'ty'],
          'g', ['e', '7', 'hj'], ['f', '8', 'bv'], ['g', '9', 'sad'],
          'j', ['h', '10', 'kj'], ['i', '11', 'nbv'], ['c', '12', 'uy'],
          'n', ['d', '13', 'ipoas'], ['e', '14', 'fg'], ['f', '15', 'as'], 
          'r', ['g', '16', 'dsad'], ['h', '17', 'fdgdfg'], ['i', '18', 'retrt'],
          'u', ['j', '19', 'qwe'], ['k', '20', 'ytgf'], ['n', '21', 'asmz']]
</code></pre>
<p>And I want a dict from this list like this;</p>
<pre><code>dict_x = {'a': [['j', '1', 'x'], ['k', '2', 'y'], ['a', '3', 'hj']],
          'd': [['b', '4', 'df'], ['c', '5', 'er'], ['d', '6', 'ty']],
          'g': [['e', '7', 'hj'], ['f', '8', 'bv'], ['g', '9', 'sad']],
          'j': [['h', '10', 'kj'], ['i', '11', 'nbv'], ['c', '12', 'uy']],
          'n': [['d', '13', 'ipoas'], ['e', '14', 'fg'], ['f', '15', 'as']], 
          'r': [['g', '16', 'dsad'], ['h', '17', 'fdgdfg'], ['i', '18', 'retrt']],
          'u': [['j', '19', 'qwe'], ['k', '20', 'ytgf'], ['n', '21', 'asmz']]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a straightforward solution with a simple loop:</p>
<pre><code>dict_x = {}
for value in list_x:
    if isinstance(value, str):
        dict_x[value] = current_list = []
    else:
        current_list.append(value)
</code></pre>
<p>Basically, if the value is a string then a new empty list is added to the dict, and if it's a list, it's appended to the previous list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is one way using a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary comprehension</a> and a <a href="https://docs.python.org/3/reference/expressions.html#generator-expressions" rel="nofollow noreferrer">generator expression</a> combined with <a href="https://stackoverflow.com/questions/6967632/unpacking-extended-unpacking-and-nested-extended-unpacking"><code>*</code> unpacking</a>.</p>
<pre><code>res = {i: j for i, *j in (list_x[i:i + 4] for i in range(0, len(list_x), 4))}

# {'a': [['j', '1', 'x'], ['k', '2', 'y'], ['a', '3', 'hj']],
#  'd': [['b', '4', 'df'], ['c', '5', 'er'], ['d', '6', 'ty']],
#  'g': [['e', '7', 'hj'], ['f', '8', 'bv'], ['g', '9', 'sad']],
#  'j': [['h', '10', 'kj'], ['i', '11', 'nbv'], ['c', '12', 'uy']],
#  'n': [['d', '13', 'ipoas'], ['e', '14', 'fg'], ['f', '15', 'as']],
#  'r': [['g', '16', 'dsad'], ['h', '17', 'fdgdfg'], ['i', '18', 'retrt']],
#  'u': [['j', '19', 'qwe'], ['k', '20', 'ytgf'], ['n', '21', 'asmz']]}
</code></pre>
<hr/>
<p>Alternatively, as @chrisz suggests, you can use <code>zip</code>:</p>
<pre><code>res = {i: j for i, *j in zip(*(list_x[i::4] for i in range(4)))}
</code></pre>
</div>
<span class="comment-copy"><code>{i: j for i, *j in zip(*[x[i::4] for i in range(4)])}</code> might be a bit cleaner.</span>
<span class="comment-copy">@chrisz, good point. I think I ended up replicating <code>zip</code> unnecessarily. I just convert your list to a generator, though.</span>
