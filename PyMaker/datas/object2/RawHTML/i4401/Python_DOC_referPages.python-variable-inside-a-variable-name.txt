<div class="post-text" itemprop="text">
<p>I am very new to python and programming in general. I am currently building a cocktail-mixer and also do the coding from ground up!
My program fortunately works, since I am just adding simple commands after the other... but this is limiting me extremely in scaling my project!
So here is my problem:</p>
<p>I started of to test my electronics with just two cocktails.
So in various functions in my program I have something like this (example)</p>
<pre><code>def Cocktail1():
    Pump1Amount (&lt; this is a variable) = 100 * Cocktail1Ingredient1 (&lt;this is a variable too)
    Pump2Amount = 100 * Cocktail1Ingredient2
    Pump3Amount = 100 * Cocktail1Ingredient3

def Cocktail2():
    Pump1Amount (&lt; this is a variable) = 100 * Cocktail2Ingredient1 (&lt;this is a variable too)
    Pump2Amount = 100 * Cocktail2Ingredient2
    Pump3Amount = 100 * Cocktail2Ingredient3

and so on...
</code></pre>
<p>Now I wanted to add more Cocktails and more Pumps! But to accomplish this with my previous code, I would need to do A LOT of repetition and changing hundreds of single digits in all the functions... I want 12 Cocktails, 12 Pumps, so that already equals to 144 different segments of code... and then situations like I showed exist in my program a few times!</p>
<p>So what I was thinking is something like this:</p>
<pre><code>def CocktailX():
    ChosenCocktail = X (&lt;this is a variable that is set with pressing a button)
    Pump1Amount = 100 * CocktailXIngredient1
    Pump2Amount = 100 * CocktailXIngredient2
</code></pre>
<p>You see what I am talking about? I want to refer to a variable by using a general variable in that variable-name!</p>
<p>As I said, I am really new and therefore don´t know all the important terminology and everything! So please explain your answers to me like you would do it to a fourth-grader :D Thank you so much in advance!!!!</p>
</div>
<div class="post-text" itemprop="text">
<p>While it is possible to <em>compute</em> variable names in many languages (including Python), the common case of a number of analogous variables distinguished by a numeric label (an <em>index</em>) is handled by an <strong>array</strong> (in Python called <code>list</code>).  You can write <code>PumpAmounts[0]</code> and <code>CocktailIngredients[3][5]</code>—the latter conceptually is a variable with two indices and physically is a <code>list</code> of <code>list</code>s.</p>
<p>The important bit is that an index is an <em>expression</em>—which can be a <em>literal</em> (<code>a[1]</code>), a variable (<code>a[x]</code>), or a (more complicated) computation (<code>a[b[2*getHalfIndex(foo)]]</code>).  These choices also let you treat all the elements of a list in a loop that changes the index, although the normal way to simply visit each element in Python doesn’t use indices:</p>
<pre><code>for elem in array:
  foo(elem, ...)
</code></pre>
<p>PS—I had this same question when I started programming: the first reference I had (for a different language) covered functions much more than syntax, so I didn’t know arrays existed.</p>
</div>
<span class="comment-copy">This is a pretty clear case. You need to learn about object oriented programming and how to write your own classes in Python.</span>
<span class="comment-copy">@jpp the formatting problems likely stem from writing the question. I don't think this question is too bad for a first one.</span>
<span class="comment-copy">@timgeb, thanks for fixing. I hope that's the case.. still not clear with "pressing a button"...</span>
<span class="comment-copy">You don't necessarily need to write your own classes for this. To begin with, you should <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">learn about dictionaries and other built-in data structures</a>. You could for example create a dictionary in which you store the ingredients for each cocktail which you can look up by its name.</span>
<span class="comment-copy">as timgeb said, you should re-structure your code to use OOP, what you are trying to do becomes easier with that.</span>
<span class="comment-copy">Thank you so much! This also seems like a useful tip for future programming! But also here: how can this help me?  What is the difference in using PumpAmount1 - a variable i declared before and have to copy and paste - to using PumpAmount[0]? Don´t I need to copy PumpAmount[0] also over and over again? Or can I use a variable (for example X) inside what you´ve proposed? Like PumpAmount[X]</span>
<span class="comment-copy">@AskerBuoi: Edited to address your question.</span>
