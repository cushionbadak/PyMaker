<div class="post-text" itemprop="text">
<p>Say I have 2 hex values that were taken in from keyboard input.</p>
<p>E.g. val1 = 0x000000 and val2 = 0xFF0000</p>
<p>and I do,</p>
<pre><code>print(hex(val1)) 
print(hex(val2))
</code></pre>
<p>I get the right output for val2 but val1 is just 0x0, how do I get it to print the whole value? </p>
<p>By whole value, I mean, if the inputted value is 0x000000, I want to output the value as 0x000000 and not 0x0. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can pad the hex value to the specified number of digits by using the <code>ljust</code> method.</p>
<p>Whenever the string is less than the specified width, it'll append the specified filler character to extend it. </p>
<p>In your example example, <code>hex(0x0).ljust(8, '0') == "0x000000"</code>.
Strings that are already long enough are preserved so that 0xFF0000 will still work.</p>
<pre><code>print(hex(0x000000).ljust(8, '0')) # Prints 0x000000
print(hex(0xFF0000).ljust(8, '0')) # Prints 0xFF0000
</code></pre>
<p>A couple of important things to note that have bitten me in the past:</p>
<ol>
<li>Make sure your width includes the length of the leading "0x"

<ul>
<li>This is because the <code>ljust</code> function operator operates on raw text and doesn't realize it's a hex string</li>
</ul></li>
<li>If you give a width value shorter than you need, the strings won't be filled up enough and will have different lengths.

<ul>
<li>In other words <code>len(hex(0xFF0000).ljust(4, '0')) != len(hex(0xFF0000).ljust(4, '0'))</code> because you need a length of 8 characters to fit both cases</li>
</ul></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow noreferrer"><em>format()</em></a> built-in function to show the hex representation to the expected level of precision:</p>
<pre><code>&gt;&gt;&gt; format(53, '08x')
'00000035'
&gt;&gt;&gt; format(1234567, '08x')
'0012d687'
</code></pre>
<p>The <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">format code</a> <code>08x</code> means "eight lowercase hex digits padded with leading zeros".</p>
</div>
<div class="post-text" itemprop="text">
<p>You say the user typed this input in on the keyboard. That means you <em>already started with</em> the strings you want, but you parsed integers out of the input and threw away the strings.</p>
<p>Don't do that. Keep the strings. Parse integers too if you need to do math, but keep the strings. Then you can just do</p>
<pre><code>print(original_input)
</code></pre>
<p>without having to go through a reconstruction process and guess at how many leading zeros were originally input.</p>
</div>
<span class="comment-copy">Exactly what do you want? <code>0x0</code> and <code>0x000000</code> are equal.</span>
<span class="comment-copy">I understand that they are equal, it's just that the test cases for some programming challenge I am doing is asking for the full value.</span>
<span class="comment-copy">Please <a href="https://stackoverflow.com/posts/49828029/edit">edit</a> your question to explain <b>exactly</b> what do you want to print. What is the "full value"?</span>
<span class="comment-copy">Do you just need a string representation of the full value?</span>
<span class="comment-copy">Why did you convert the user input into integers if you wanted the original strings?</span>
