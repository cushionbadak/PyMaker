<div class="post-text" itemprop="text">
<p>For two arrays a and b, </p>
<pre><code>a = np.array([[1],[2],[3],[4]])

b = np.array(['a', 'b', 'c', 'd'])
</code></pre>
<p>I want to generate the following array</p>
<pre><code>c = np.array([[1, 'a'], [2, 'b'], [3, 'c'], [4, 'd']])
</code></pre>
<p>Is there a way to do this efficiently ?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need:</p>
<pre><code>import numpy as np 

a = np.array([[1],[2],[3],[4]])

b = np.array(['a', 'b', 'c', 'd'])

print(np.array(list(zip(np.concatenate(a), b))))
</code></pre>
<p>Output:</p>
<pre><code>[[1, 'a'], [2, 'b'], [3, 'c'], [4, 'd']] 
</code></pre>
<p><strong>Alternate Solution</strong></p>
<pre><code>print(np.stack((np.concatenate(a), b), axis=1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Solution</strong></p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; a = np.array([[1],[2],[3],[4]])
&gt;&gt;&gt; b = np.array(['a', 'b', 'c', 'd'])


# You have strange array so result is strange
&gt;&gt;&gt; np.array([[a[i],b[i]] for i in range(a.shape[0])])
array([[array([1]), 'a'],
       [array([2]), 'b'],
       [array([3]), 'c'],
       [array([4]), 'd']], dtype=object)



# You want this

&gt;&gt;&gt; np.array([[a[i][0],b[i]] for i in range(a.shape[0])])
array([['1', 'a'],
       ['2', 'b'],
       ['3', 'c'],
       ['4', 'd']], dtype='&lt;U11')
&gt;&gt;&gt;
</code></pre>
<p><strong>Note:</strong></p>
<p><strong>You may want to reshape your 'a' array.</strong></p>
<pre><code>&gt;&gt;&gt; a.shape
(4, 1)

&gt;&gt;&gt; a
array([[1],
       [2],
       [3],
       [4]])
</code></pre>
<p><strong>Reshape like this for easier use, for next time...</strong></p>
<pre><code>&gt;&gt;&gt; a.reshape(4)
array([1, 2, 3, 4])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do:</p>
<pre><code>c = np.vstack((a.flatten(), b)).T
</code></pre>
</div>
<span class="comment-copy">oh.. then would ` list(zip(np.concatenate(a), b)` be better? np.array(zip(np.concatenate(a), b)) returns weird object..</span>
