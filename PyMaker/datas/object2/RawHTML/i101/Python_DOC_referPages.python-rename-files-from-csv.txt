<div class="post-text" itemprop="text">
<h3>Problem</h3>
<p>I have a list of words in different languages with their English translation:</p>
<pre><code>#;Eng;Spanish;
1;yes;si;
2;no;ningun;
3;question;cuesti√≥n;
</code></pre>
<p>For all these words (or entries), I have an audio file on how to pronounce the word (from Forvo). The audio files are named with language and the "#" value. Thus, <strong>spanish1.m4a</strong>, <strong>spanish2.m4a</strong>, <strong>spanish3.m4a</strong>, etc.</p>
<p>Now, I want to rename that file as follows: <strong>yes-si-1.m4a</strong></p>
<h3>Script</h3>
<pre><code>import pandas as pd
import os

os.chdir('/Users/user/Desktop/audio')

df = pd.read_csv('hebrew.csv', delimiter=';')

Row = (df['#']) #line number
Eng = (df['Eng']) #English trans
HebF = (df['HebF']) #Feminine
HebM = (df['HebM']) #Masculine

for filename in os.listdir():

oldName = os.path.basename(filename)

num = oldName.strip('hebrew')
</code></pre>
<p>Now I thought something with an If statement. If Row equals Num, then change the file name to <strong>Eng+HebF+Row+".m4a"</strong></p>
<p>How do I solve this issue?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're in the right direction. Two main things to fix are:</p>
<ul>
<li>In order to rename a file in programming, you generally move them to the same folder, using different names. This can be easily done with the <a href="https://docs.python.org/3/library/shutil.html" rel="nofollow noreferrer">shutil module of Python's standard library</a>.</li>
<li>Try to keep it simple for yourself. No need to change directories and build absolute paths for your files - simply leave your python script in the same folder as the files you want to rename, open a terminal in that folder and execute the script. Python is able to see files which are in the same folder just by passing the file name, no need for a full path.</li>
</ul>
<p>The following code does what you want for the spanish csv example in your OP, renaming the files <code>spanish1.m4a</code>, <code>spanish2.m4a</code> and <code>spanish3.m4a</code>. Note that:</p>
<p>1) all files (code, csv and .m4a files) should be in the same directory;</p>
<p>2) I'm using <a href="https://www.geeksforgeeks.org/formatted-string-literals-f-strings-python/" rel="nofollow noreferrer">f-strings</a> for building the file name strings - hopefully the formatting is obvious enough from the code;</p>
<p>3) You'll need to do some refactoring in order for the code to work with your files in other languages.</p>
<p>Using <code>pandas</code> is overkill for this task but I didn't want to change your code structure too much. Let me know if you have any doubts.</p>
<pre><code>import pandas as pd
import shutil

df = pd.read_csv('spanish.csv', delimiter=';')

Row = (df['#']) #line number
Eng = (df['Eng']) #English trans
Spa = (df['Spanish']) #Spanish 

for i in Row:
    eng = Eng[i-1]
    spa = Spa[i-1]
    old_file = f"spanish{i}.m4a"
    shutil.move(old_file, f"{eng}-{spa}-{i}.m4a")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Please make a backup of your file(s) before you try this</strong></p>
<p>Why use Python or even <code>pandas</code> is you can just use <code>awk</code>:</p>
<pre><code>awk -F ';' '{ if($1!="#") system("mv spanish"$1".m4a "$2"-"$3"-"$1".m4a") }' list.csv
</code></pre>
<p>This will rename your <code>spanish#.m4a</code> files according to your rule. You can apply the same to your <code>hebrew</code> problem.</p>
</div>
<span class="comment-copy">Can you give more details about the directory strucuture?Like is your hebrew.csv in the 'audio' directory. And what do you wish to achieve through <code>num = oldName.strip('hebrew')</code></span>
