<div class="post-text" itemprop="text">
<p>So I defined a function such that it returns a sum of two <code>Time</code> objects as a new <code>Time</code> object, but the sum of the minutes in that resulting <code>Time</code> object cannot exceed 59 and I don't know how to implement that.</p>
<p>Here's my code: </p>
<pre><code>from timer import Time

sum_of_time = Time(0, 0)
sum_of_time.hours= time1.hours + time2.hours
sum_of_time.minutes = time1.minutes + time2.minutes

return sum_of_time

if sum_of_time.minutes &gt;= 60: # where I try to make minutes within 0 to 59
    sum_of_time.minutes = sum_of_time.minutes - 60
    sum_of_time.hours = sum_of_time.hours + 1
    return sum_of_time
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is what <a href="https://docs.python.org/3/library/datetime.html#available-types" rel="nofollow noreferrer">datetime.timedelta</a> is used for. </p>
<pre><code>from datetime import timedelta

delta1 = timedelta(hours=1, minutes=30)
delta2 = timedelta(minutes=31)
sum_time = delta1 + delta2
print(sum_time) #2:01:00
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want to get the quotient and remainder when dividing by 60; the quotient gets added to the hour, and the remainder is used as the number of minutes.</p>
<pre><code>sum_of_time = Time(0,0)
hours = time1.hours + time2.hours
minutes = time1.minutes + time2.minutes
q, r = divmod(minutes, 60)  # e.g. divmod(117, 60) == (1, 57)
hours += q
minutes = r
sum_of_time.hours = hours
sum_of_time.minutes = minutes
</code></pre>
<p>This is logic that should probably be implemented by methods of the <code>Time</code> class. For example:</p>
<pre><code>class Time:
    def __init__(self, h, m):
        self.hours = 0
        self.minutes = 0

    # For simplicity here, assume other is an instance of Time
    def __add__(self, other):
        hours = self.hours + other.hours
        minutes = self.minutes + other.minutes
        q, r = divmod(minutes, 60)
        return Time(hours + q, r)

sum_of_time = time1 + time2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>class Time:
    def __init__(self,h,m):
        self.h = h
        self.m = m
        q, r = divmod(m, 60)
        self.h += q
        self.m = r

    def __add__(self, o): 
        return Time(self.h+o.h,self.m+o.m)

    def __str__(self):
        return "{0}:{1}".format(self.h,self.m)



t1 = Time(1,60)
t2 = Time(1,60)
print (t1+t2)
</code></pre>
</div>
