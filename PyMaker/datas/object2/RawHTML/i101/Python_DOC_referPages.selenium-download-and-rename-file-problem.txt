<div class="post-text" itemprop="text">
<p>I am using <code>selenium</code> to login a page, and download some tiff files, 
now i have a variable <code>downloadurl</code>, it contains an array of url links which i scraped from the website. now i am using the below code to download files:</p>
<pre><code> driver = webdriver.Chrome();
 driver.get(downloadurl)
</code></pre>
<p>I do get all files downloaded but with no names, eg. img(1), img(2) ...</p>
<p>Now my problem is: I want <code>driver.get(downloadurl)</code> download files one by one according to <code>downloadurl</code> array sequence, and rename the file right after  it is downloaded according to <code>title</code> variable which is an array, then download the next file, and rename...</p>
<p><strong>P.S.</strong> I avoid to use requests because the login procedure is very complicated and requires authorization cookies.</p>
<p>Many thanks for the help!</p>
</div>
<div class="post-text" itemprop="text">
<p>To elaborate on my comment:</p>
<pre><code>import os
import time

for downloadlink, uniqueName in my_list_of_links_and_names:
    driver = webdriver.Chrome();
    driver.get(downloadurl)
    time.sleep(5) # give it time to download (not sure if this is necessary)
    # the file is now downloaded
    os.rename("img(1).png", uniqueName) # the name is now changed
</code></pre>
<p>This will work assuming that "img(1).png" will be renamed and then the next download will come in as "img(1).png" yet again.</p>
<p>The hardest part would be making <code>my_list_of_links_and_names</code> but if you have the data in separate lists, just <code>zip()</code> them together. You can also generate your own title every loop based on some criteria... </p>
</div>
<div class="post-text" itemprop="text">
<p>First we will create a function (Rename_file) that renames the downloaded image from its folder.</p>
<pre><code>def Rename_file(new_name, Dl_path):  #Renames Downloaded Files in the path
    filename = max([f for f in os.listdir(Dl_path)])
    if 'image.png' in filename: #Finds 'image.png' name in said path
            time.sleep(2) #you can change the value in here depending on your requirements
            os.rename(os.path.join(Dl_path, filename), os.path.join(Dl_path, new_name+'.png')) #can be changed to .jpg etc
</code></pre>
<p>Then we Apply this function in array of url links:</p>
<pre><code>for link in downloadurl: #Will get each link in download url array
    for new_name in title:
            driver.get(link) #download the said image in link
            Rename_file(new_name,Dl_path)
</code></pre>
<p>Sample code:</p>
<pre><code>downloadurl = ['www.sample2.com','www.sample2.com'] 
Dl_path  = "//location//of//image_downloaded"
title  = ['Title 1', 'Title 2']

def Rename_file(new_name, Dl_path):  
    filename = max([f for f in os.listdir(Dl_path)])
    if 'image.png' in filename: 
            time.sleep(2)
            os.rename(os.path.join(Dl_path, filename), os.path.join(Dl_path, new_name+'.png'))

for new_name in title:
   for link in downloadurl: 
            driver.get(link) 
            time.sleep(2)
            Rename_file(new_name,Dl_path)
</code></pre>
<p>I'm quite sure on the Rename function I created but I haven't really tested this with an array of url links since I really can't think of where could I test it. Hopefully this works on you. Please let me know :-)</p>
</div>
<span class="comment-copy">If you know it will be saved as <code>img(1)</code> initially, just have your script download the file, and then <code>os.rename()</code> the file from "img(1)" to whatever. Then rinse and repeat because they will all download with the same name.  <a href="https://docs.python.org/3/library/os.html#os.rename" rel="nofollow noreferrer">docs.python.org/3/library/os.html#os.rename</a></span>
<span class="comment-copy">this code is awful</span>
