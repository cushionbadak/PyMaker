<div class="post-text" itemprop="text">
<p>I have the following directory structure in python. </p>
<pre><code>├── mel2samp.py
├── tacotron2
│   ├── layers.py
</code></pre>
<p>In mel2samp.py I want to import  <code>TacotronSTFT</code> from tacatron2.layers using these lines of code</p>
<pre><code>import sys
sys.path.insert(0, 'tacotron2')
from tacotron2.layers import TacotronSTFT
</code></pre>
<p>But it throws an error 
<code>ImportError: No module named tacotron2.layers</code>. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import sys
sys.path.insert(0, 'tacotron2')
from tacotron2.layers import TacotronSTFT
# Use TacotronSTFT
</code></pre>
<p>But it is recommended to make tacotron2 as a package by adding init.py </p>
<p>Then you can use it as</p>
<p><code>from tacotron2.layers import TacotronSTFT
 #Use TacotronSTFT
</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Also need an empty <code>__init__.py</code> file in <code>tacotron2</code> folder. After that you can do: </p>
<pre><code>import sys
from tacotron2.layers import TacotronSTFT
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can make your folder a package by adding <code>__init__.py</code><br/>
You can read more about it <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">here</a></p>
<blockquote>
<p>The <code>__init__.py</code> files are required to make Python treat the directories as containing packages; this is done to prevent directories with a common name, such as <code>string</code>, from unintentionally hiding valid modules that occur later (deeper) on the module search path. In the simplest case, <code>__init__.py</code> can just be an empty file, but it can also execute initialization code for the package or set the <code>__all__</code> variable, described later.</p>
</blockquote>
</div>
<span class="comment-copy">Add a <code>__init__.py</code> file to the tacotron2 folder</span>
<span class="comment-copy">@Karl wouldn't that make just the folder importable in a way like <code>import tacotron2.layers</code> instead? He can still use it's own way with <code>sys.path</code></span>
<span class="comment-copy">adding <b>init</b>.py solves it.thanks</span>
<span class="comment-copy">By adding <code>__init__.py</code> python recongnises the tacotron2 folder as a module. Otherwise you are going to have to extend sys.path for every single module you want to import</span>
<span class="comment-copy">Strange. I was unable to reproduce this problem. It ran without even an init fn.</span>
<span class="comment-copy">it throws an error <code>ImportError: No module named layers</code></span>
<span class="comment-copy">I followed @Karl suggestion for the empty file</span>
<span class="comment-copy">You don't need <code>sys.path.insert(0, '/tacotron2')</code> here. After adding <code>__init__</code> you can simply write <code>from tacotron2.layers import TacotronSTFT</code></span>
