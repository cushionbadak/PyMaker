<div class="post-text" itemprop="text">
<p>I have a script I've written that uses a very large object. I load the object with pickle, but it takes quite a few seconds to do so. That's not a big deal if it has to happen once or twice, but I'm hoping to use the code many hundreds or thousands of times!</p>
<p>I think my issue is that I'd like to almost 'leave' the object alive and then be able to call it from command line whenever I need it. I'm reasonably new to Python so I'm not sure how possible that is; sorry if I haven't used the right terminology in my question. I'm writing and running my python in Spyder at the moment, but eventually I'd like to run it on a server, calling the code as and when required.</p>
</div>
<div class="post-text" itemprop="text">
<p>If your script is looping over the python program, move the loop inside the program.</p>
<p>If on the other hand, you want to be able to use the large object on demand, you probably need a client/server configuration. <a href="https://thriftpy.readthedocs.io/en/latest/" rel="nofollow noreferrer">Thriftpy</a> is a very simple way to achieve this. The thriftpy server will hold the object and the processing logic, and the client will be a command line script that will call the server and pass whatever parameters you need to process the object.</p>
</div>
<span class="comment-copy">You need an indexable data store. You can use an in-memory data store such as redis, or if you'd like the data to be more persistent, use a database such as sqlite or mysql.</span>
<span class="comment-copy">@blhsing could you put together an answer with a bit of pseudo code for how I might use the mysql/sqlite.. it seems like this is probably the answer to my question!</span>
<span class="comment-copy">Please go over the examples in Python's <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">documentation</a> for the <code>sqlite3</code> module and post a new question once you have a specific issue with your implementation.</span>
<span class="comment-copy"><i>"my script uses a very large object"</i> is kind of attacking the symptom instead of the problem. Please give us some context. What is your script ultimately doing, why is the object actually that large, how can you rearchitect it to be smaller? Is it a database of transactions? video compression? something else? Essentially, when you profile it, what is the inner loop of your code doing, what data is it touching?</span>
<span class="comment-copy">@smci It is basically one very large matrix. It's not a sparse matrix, so I can't reduce it in that way, and since I need to perform and operation on the matrix as a whole, I can't just load parts of the matrix. The operations I run on the matrix are reasonably mundane.</span>
