<div class="post-text" itemprop="text">
<p>I wrote a simple <code>sys.stdout.write</code> statement in the console of a Windows 10, 64 bit operating system. </p>
<pre><code>Microsoft Windows [Version 10.0.17134.590]
(c) 2018 Microsoft Corporation. All rights reserved.

C:\Users\user&gt;python
Python 3.7.2 (tags/v3.7.2:9a3ffc0492, Dec 23 2018, 23:09:28) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.stdout.write('x')
x1
&gt;&gt;&gt; sys.stdout.write('try')
try3
&gt;&gt;&gt; sys.stdout.write('fooo')
fooo4
</code></pre>
<p>The installed Python version is <code>3.7.2</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The number is not random; it's the number of characters written. Because you are in a Python interactive, the return value of the statement is printed as well. <code>sys.stdout.write</code> (or writing to a file in general) returns the number of characters written.</p>
<p>Therefore, when you do something like <code>sys.stdout.write('fooo')</code>, it first prints <code>fooo</code>, then the return value (<code>4</code>) is printed.</p>
<p><code>sys.stdout.write</code> can be mocked like this:</p>
<pre><code>def mywrite(s):
    print(s, end='')
    return len(s)
</code></pre>
<p>In an interactive:</p>
<pre><code>&gt;&gt;&gt; def mywrite(s):
...     print(s, end='')
...     return len(s)
...
&gt;&gt;&gt; mywrite('x')
x1
&gt;&gt;&gt; mywrite('try')
try3
&gt;&gt;&gt; mywrite('fooo')
fooo4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>REPL will always print a return value (in your case number of written characters to STDOUT) of the function called if you don't capture it. If you don't want to have it printed you can always use a temporary variable to store the return value in a temporary/throaway varaible:</p>
<pre><code>&gt;&gt;&gt; _ = sys.stdout.write('foobar\n')
foobar
&gt;&gt;&gt;
</code></pre>
<p>Notice the added new line at the end - this is because it won't be added automatically so without it your next REPL prompt would start right after <code>foobar</code> instead of the new line.</p>
<p>Or, you know, you can just use the <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer"><code>print()</code></a> function which will, in its default setup, do pretty much the same instead of you having to deal directly with the STDOUT stream. </p>
</div>
<span class="comment-copy">Suggest you to use <code>ipython</code> or <code>idle</code> instead.</span>
<span class="comment-copy"><code>zizi</code> may not be the most appropriate string.</span>
<span class="comment-copy">@Jean-Fran√ßoisFabre Not sure what it means, but I changed it anyway to be safe.</span>
<span class="comment-copy">check here: <a href="https://www.interglot.com/dictionary/fr/en/translate/zizi" rel="nofollow noreferrer">interglot.com/dictionary/fr/en/translate/zizi</a></span>
<span class="comment-copy">oh I didn't see you copied OP example.</span>
