<div class="post-text" itemprop="text">
<p>I have this array:</p>
<pre><code>lst = ['A', 'B', 'C']
</code></pre>
<p>How could I append a string 'D' to each element and convert every set as a tuple:</p>
<pre><code>lst2=  [('A', 'D'),
          ('B', 'D'),
          ('C', 'D')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Like this, using a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer">list comprehension</a>:</p>
<pre><code>lst  = ['A', 'B', 'C']
lst2 = [(x, 'D') for x in lst]

lst2
=&gt; [('A', 'D'), ('B', 'D'), ('C', 'D')]
</code></pre>
<p>By the way, it's a bad idea to call a variable <code>list</code>, that clashes with a built-in function. I renamed it.</p>
</div>
<div class="post-text" itemprop="text">
<p>alternative solution is use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer">zip_longest</a></p>
<pre><code>from itertools import zip_longest
list(zip_longest(['A', 'B', 'C'], [], fillvalue='D'))
</code></pre>
<p>the result wiil be:</p>
<pre><code>[('A', 'D'), ('B', 'D'), ('C', 'D')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>list2 = [(i, 'D') for i in list]
</code></pre>
<p>(apart from the fact that <code>list</code> is a very bad variable name)</p>
</div>
<div class="post-text" itemprop="text">
<p>Another option using zip:</p>
<pre><code>x = ['A', 'B', 'C']
res = list(zip(x,'D'*len(x)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>list1 = ['A', 'B', 'C']
list2 = []
for i in list1:
    list2.append((i, 'D'))
print(list2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the function <code>product()</code>:</p>
<pre><code>from itertools import product

lst = ['A', 'B', 'C']

list(product(lst, 'D'))
# [('A', 'D'), ('B', 'D'), ('C', 'D')]
</code></pre>
</div>
<span class="comment-copy"><code>list2 = [(e, 'D') for e in list]</code></span>
<span class="comment-copy">Is the last one supposed to be <code>('C', 'D')</code>? And what have you tried? What specifically do you need help with?</span>
<span class="comment-copy"><code>('A', 'D')</code> isn't a sublist at all. It is a tuple.</span>
<span class="comment-copy">Thanks, I'll do the corrections.</span>
<span class="comment-copy">Another way: <code>[tuple(x+'D') for x in lst]</code> (assuming all elements in your list are strings)</span>
