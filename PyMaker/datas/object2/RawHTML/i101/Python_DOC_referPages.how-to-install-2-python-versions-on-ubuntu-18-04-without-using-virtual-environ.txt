<div class="post-text" itemprop="text">
<p>I am trying to install 2 python versions:</p>
<p>1) 2.7.14</p>
<p>2) 3.7.2-1</p>
<p>I created them by using make commands:</p>
<p><strong>wget <a href="https://www.python.org/ftp/python/2.7.14/Python-2.7.14.tgz" rel="nofollow noreferrer">https://www.python.org/ftp/python/2.7.14/Python-2.7.14.tgz</a></strong></p>
<p><strong>tar -xvf Python-2.7.14.tgz</strong></p>
<p><strong>cd Python-2.7.14</strong></p>
<p><strong>./configure --without-ensurepip --enable-optimizations</strong></p>
<p><strong>make</strong> </p>
<p><strong>checkinstall -y</strong></p>
<p>When I am unpacking one of them it overrides the second installed: </p>
<p><strong>dpkg -i python_2.7.14-1_amd64.deb</strong></p>
<blockquote>
<p>dpkg: warning: downgrading python from 3.7.2-1 to 2.7.14-1</p>
<p>(Reading database ... 35940 files and directories currently
  installed.)</p>
<p>Preparing to unpack python_2.7.14-1_amd64.deb ...</p>
<p>Unpacking python (2.7.14-1) over (3.7.2-1) ...</p>
<p>Setting up python (2.7.14-1) ...</p>
</blockquote>
<p>How can I have them both running on my ubuntu? </p>
<p>**** NOTE I DON'T WANT TO USE VIRTUAL ENVIRONMENT ****</p>
</div>
<div class="post-text" itemprop="text">
<p>Python is already installed on your machine... If you would run a different version, you'd better configure a virtual environment </p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, uninstall any other package higher than 2.7.</p>
<p>Option 1:</p>
<p>You may use the source code python and "make altinstall"</p>
<p>Docs: <a href="https://docs.python.org/3/using/unix.html#building-python" rel="nofollow noreferrer">https://docs.python.org/3/using/unix.html#building-python</a></p>
<p>Option 2:</p>
<p>Using apt-get I could install/update versions 2.7.15 and 3.7.1-1 using docker environment with this Dockerfile:</p>
<pre><code>FROM ubuntu:18.04

USER root

WORKDIR /app

RUN apt-get update &amp;&amp; apt-get install python=2.7.15~rc1-1 python3.7=3.7.1-1~18.04 -y
</code></pre>
<p>This means, if you use this code:</p>
<pre><code>apt-get update &amp;&amp; apt-get install python python3.7 -y
</code></pre>
<p>It will probably work.</p>
</div>
<span class="comment-copy">Already answered many times <a href="https://stackoverflow.com/questions/2547554/multiple-python-versions-on-the-same-machine" title="multiple python versions on the same machine">stackoverflow.com/questions/2547554/…</a></span>
<span class="comment-copy">But Ubuntu can have 2 versions, as far as I know. I have a machine with both 2.7 and 3.5 running without virtual environment.</span>
<span class="comment-copy">yeas you can have a version of python3  and one of python 2. On Ubuntu 18 python 2 is not installed by default. please check <a href="https://linuxconfig.org/install-python-2-on-ubuntu-18-04-bionic-beaver-linux" rel="nofollow noreferrer">linuxconfig.org/…</a></span>
<span class="comment-copy">Tried this one also, didn't work.</span>
<span class="comment-copy">have you tried <code>sudo apt install python-minimal</code>? with this I have installed <code>Python 2.7.15</code> but you would like to have 2.7.14, right?</span>
<span class="comment-copy">BTW I do not recommend you to install another python version than the one you have by default. Ubuntu 18 comes with a particular version of python 3 and the entire system has this "dependency".  the story changes using a virtual enviroment</span>
<span class="comment-copy">Didn't help, tried to install: make, make altinstall, checkinstall -y and Python3 overrided the Python2</span>
<span class="comment-copy">make install just changes the executable, if python3 with make install you should use "python3" as executable, and python 2 will be only "python". Further installations of minor versions like 3.6.2, will be "Python3.6" and on.</span>
<span class="comment-copy">nope, not working..</span>
<span class="comment-copy">tried it, didn't help me also.</span>
<span class="comment-copy">Within the Ubuntu usually the 2.7 is already installed and any other version you should install (if you want both working) from source code and not deb packages. My last guess is that you should make the one you already have intact, then install the next one from source code and not use .deb packages. I will test with Dockerfile to check if this scenario will work.</span>
