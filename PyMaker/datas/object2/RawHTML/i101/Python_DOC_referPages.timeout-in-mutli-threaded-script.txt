<div class="post-text" itemprop="text">
<p>Unlike this: <a href="https://stackoverflow.com/questions/492519/timeout-on-a-function-call">Timeout on a function call</a></p>
<p>I'm trying to timeout a line of code within a thread (not the main thread).</p>
<p>Signal only works in main thread, so I can't use that.</p>
<p>The line I want to limit is a web request with the requests library:</p>
<pre><code>s.get("https://www.google.com/")
</code></pre>
<p>I can't use requests built-in timeout, because it doesn't always time out under certain conditions.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are using python's standard threading library, I don't think there is an easy way to terminate the thread once it has started. There are some options mentioned in this <a href="https://stackoverflow.com/questions/323972/is-there-any-way-to-kill-a-thread">thread</a> (:D), you could perhaps try.
If you don't care when the thread completes and just want control back, you can provide timeout in join method. It would look like below,</p>
<pre><code>th = threading.Thread(target=f)
th.start()    #starts thread
th.join(timeout=10) # you get control back in 10 seconds, but thread could still be running
if th.is_alive():
    print("still alive")
</code></pre>
<p>Other option (which I like) would be to use <a href="https://docs.python.org/3/library/concurrent.futures.html" rel="nofollow noreferrer">concurrent</a> library,</p>
<pre><code>from concurrent.futures import ThreadPoolExecutor
with ThreadPoolExecutor(max_workers=1) as executor:
    future = executor.submit(pow, 323, 1235)
    print(future.result(timeout=10))    #within 10 seconds if result isn't returned you will get TimeoutError
</code></pre>
<p>Quoting from docs on result(timeout=None),</p>
<blockquote>
<p>If the call hasnâ€™t completed in timeout seconds, then a
  concurrent.futures.TimeoutError will be raised. timeout can be an int
  or float. If timeout is not specified or None, there is no limit to
  the wait time</p>
</blockquote>
</div>
<span class="comment-copy">do you have access to the thread where you do s.get("<a href='https://www.google.com/"' rel="nofollow noreferrer">google.com/"</a>) ?</span>
<span class="comment-copy">@ranjith not sure what you mean, but yeah it's all in 1 script that i wrote myself</span>
<span class="comment-copy">i meant are you using say pythons threading library or something similar ? As in th = threading.Thread(target = your_function, name="thread_name"); th.start() ?</span>
<span class="comment-copy">@ranjith yup that is exactly what i am running</span>
<span class="comment-copy">@ranjith and within that thread, there is like 50 lines of code and a few nested loops. i just need to wrap the web requests somehow.</span>
<span class="comment-copy">So you suggest putting the request into another thread? So a thread created within a thread?</span>
<span class="comment-copy">if you have code that aren't blocked on the results, why not</span>
<span class="comment-copy">well the code after of course relies on the response of the request</span>
<span class="comment-copy">ok, you could still create new thread for http call and if you don't get results in time, proceed with your other part of the code</span>
