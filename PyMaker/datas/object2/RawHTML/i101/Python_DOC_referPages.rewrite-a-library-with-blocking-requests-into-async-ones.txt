<div class="post-text" itemprop="text">
<p>There is a library that uses blocking <code>requests</code> in its core and I would like to rewrite it into asynchronous version, so could you please advise  what would be the best/easiest strategy to do so. </p>
<p>The whole library, after several nested functions, calls one function:</p>
<pre><code>def _send_http_request(self, url, payload, method='post', **kwargs):
# type: (Text, Optional[Text], Text, dict) -&gt; Response

response = request(method=method, url=url, data=payload, **kwargs)

return response
</code></pre>
<p>Just putting <code>async</code> in front of it wont work since it is deeply nested in blocking functions. And rewriting everything would be a way too much hassle.
I had a look into <code>aiohttp</code>, <code>trio</code>, <code>asks</code> and kinda got lost, which one is better. I know about <code>celery</code> or <code>dask</code>, but I need async. </p>
</div>
<div class="post-text" itemprop="text">
<p>You have several options:</p>
<ol>
<li><p>Rewrite <code>_send_http_request</code> to be async (using, for example, <a href="https://docs.aiohttp.org/en/stable/client_quickstart.html#client-quickstart" rel="nofollow noreferrer">aiohttp</a>) and further rewrite all functions that use <code>_send_http_request</code> to be async either. Yes, it's much work to do, but this is how <code>asyncio</code> fundamentally designed.</p></li>
<li><p>Wrap only top-level blocking functions (functions with I/O) you need to run asynchronously with <a href="https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.loop.run_in_executor" rel="nofollow noreferrer">run_in_executor</a> as explained <a href="https://stackoverflow.com/questions/22190403/how-could-i-use-requests-in-asyncio">here</a>. If you aren't going to make millions of requests you won't see much performance difference with option above since main bottleneck is still I/O. Otherwise threads overhead will be noticeable compared to pure <code>asyncio</code> solution.</p></li>
<li><p>Try other solution instead of <code>asyncio</code>. For example, <a href="http://www.gevent.org/intro.html#introduction" rel="nofollow noreferrer">gevent</a> and its <a href="http://www.gevent.org/intro.html#monkey-patching" rel="nofollow noreferrer">monkey-patching</a>. This approach has own pros and cons.</p></li>
</ol>
</div>
<span class="comment-copy">what do you mean you need async? You need to fire a function call asynchronously and provide some sort of callback ?</span>
