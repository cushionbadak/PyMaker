<div class="post-text" itemprop="text">
<p>I was just wondering if it's possible to open a headless browser with the webbrowser module? I'm new to programming and have virtually no experience and don't even know where to look. I heard this is a good site to start. I wanted to use the webbrowser module because I'm planning to run the program on other computers and the average person doesn't have special software like chrome drivers installed on their computers, also webbrowser doesn't require a PATH to open a browser window. So I wanted to use it. If anyone knows any other alternative modules that can open common browsers without needing a PATH please say so.</p>
</div>
<div class="post-text" itemprop="text">
<p>Most modules have a so-called API documentation. For the webbrowser module, it can be found here: <a href="https://docs.python.org/3.6/library/webbrowser.html" rel="nofollow noreferrer">https://docs.python.org/3.6/library/webbrowser.html</a></p>
<p>If you come across a module of which you cannot find any documentation, try <code>help()</code> in iPython:</p>
<pre class="lang-py prettyprint-override"><code>import webbrowser
help(webbrowser) # help for module
help(webbrowser.get) # help for function
browser = webbrowser.get()
help(browser) # help for browser object
</code></pre>
<p>There one can see, that this is no documented feature for the webbrowser module. Nevertheless, there are other modules that you might want to look into - this list seems to be a good start <a href="https://github.com/dhamaniasad/HeadlessBrowsers" rel="nofollow noreferrer">https://github.com/dhamaniasad/HeadlessBrowsers</a></p>
<hr/>
<p>Btw. to respond to <a href="https://stackoverflow.com/users/841108/basile-starynkevitch">Basile Starynkevitch</a> (I have not yet enough reputation to add a comment under other posts): A headless browser might process JavaScript and follow HTML forwarding. You will not get the same from the software you mentioned.</p>
</div>
<div class="post-text" itemprop="text">
<p>Wrong terminology: a headless browser should be more generally called some <em>HTTP client</em>. Read much more about <a href="https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol" rel="nofollow noreferrer">HTTP</a> and take time to understand what should happen in the HTTP clients and what should happen in the HTTP servers. Be also aware of HTML5, JavaScript, AJAX and other web technologies. They are related in their usage within a usual browser such as Firefox, but conceptually independent.</p>
<p>Of course, your typical browser is an HTTP client, but there are many other HTTP clients (e.g. <a href="https://en.wikipedia.org/wiki/Wget" rel="nofollow noreferrer"><code>wget</code></a> or any program using <a href="https://curl.haxx.se/libcurl/" rel="nofollow noreferrer">libcurl</a>, which is a good <a href="https://en.wikipedia.org/wiki/Free_software" rel="nofollow noreferrer">free software</a> HTTP client <em>library</em> or <a href="https://en.wikipedia.org/wiki/Web_crawler" rel="nofollow noreferrer">web crawlers</a>).</p>
<p>Some browsers (e.g. <a href="https://en.wikipedia.org/wiki/Links_(web_browser)" rel="nofollow noreferrer">links</a>) can be much more crude than your typical one, but all browsers are HTTP clients. They might not even know about JavaScript or CSS (or not even show any image). They still deserve to be called "<a href="https://en.wikipedia.org/wiki/Web_browser" rel="nofollow noreferrer">browsers</a>". Some programs (e.g. <a href="https://en.wikipedia.org/wiki/Selenium_(software)" rel="nofollow noreferrer">selenium</a>) reproduce many functions of typical browsers (even JavaScript or CSS) but don't show anything on a screen. You might call them <a href="https://en.wikipedia.org/wiki/Headless_browser" rel="nofollow noreferrer">headless browsers</a> but they might not even claim being one.</p>
<p>And Python includes some HTTP client (and also HTTP server) <a href="https://docs.python.org/3/library/http.html" rel="nofollow noreferrer">functions</a>.</p>
<p>You could find other HTTP server libraries, such as <a href="https://www.coralbits.com/libonion/" rel="nofollow noreferrer">libonion</a>.</p>
<p>Many programs use HTTP (outside of browsing, e.g. as <a href="https://en.wikipedia.org/wiki/Inter-process_communication" rel="nofollow noreferrer">inter-process communication</a>). Be aware of <a href="https://en.wikipedia.org/wiki/Web_service" rel="nofollow noreferrer">web services</a>.</p>
<p>PS. That is the first time I read about <em>headless browsers</em>, so I don't think this terminology is very common.</p>
</div>
<span class="comment-copy">You should explain <i>why</i> you want to use the <code>webbrowser</code> module, and why do you want a headless browser (and not just some HTTP client). In particular, explain more precisely what you'll do with HTML and other contents. What would you do with images on the Web?</span>
<span class="comment-copy">Yep. You wrote: <i>might</i> process. And some browsers don't process JavaScript (e.g. <code>links</code>)</span>
<span class="comment-copy">Totally agree. I just wanted to answer to your statement "Wrong terminology", as "headless browser" is a terminology that is commonly used.</span>
<span class="comment-copy"><code>links</code> is a "full" browser which does not process JavaScript.</span>
<span class="comment-copy">Again, I totally agree that there are (also headless) browsers that do not process JavaScript. Nevertheless the terminology "headless browser" is not wrong.</span>
<span class="comment-copy">BTW, that is the first time I am hearing of "headless browser". So I don't think that terminology is so common. A browser has by definition a human user. And a headless server has no screen.</span>
<span class="comment-copy">(Sorry if I sound stupid, as said I'm very new to tech) So basically, what I think you said is that not all browsers can process javascript, but HTTP clients can? If I'm correct, I just wanted to know if some of the HTTP clients I can find will be able to access sites on the internet as a browser would, like for example would a HTTP client be able to go somewhere like youtube?, also the Wikipedia page for HTTP looks a bit overwhelming, I'm fine with reading it and doing more research on my own, but before I did that I just wanted to know if you knew any more beginner friendly sites?</span>
<span class="comment-copy">I did not wrote that most HTTP clients can process JavaScript. I did wrote that some browsers can't.</span>
