<div class="post-text" itemprop="text">
<p>I'm worked on PHP previously and want to know python web programming. But everything for me is ambiguous.</p>
<p>Is it possible to program web app using python without "any" framework?</p>
<p>I know frameworks make everything easy for us and even if it is possible program web app without framework , it is not logical for big projects. But my target is just learning because I think start programming with frameworks is not good idea and we should know some information about pure python in web applications. So Imagine I want make very very simple webpage like hello world or small counter or small api. please do not offer me lightweight frameworks like flask. I just want know can pure python create webpages?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, technically, you can create a webpage with "pure python," but you certainly wouldn't want to!  The most beautiful part of programming is the fact that there are millions of others who have worked hard to create "frameworks," such as <code>Flask</code> or <code>Django</code>, that massively simplify the work that is required to make an application. </p>
<p>If your goal is "just learning" then using a framework that you are unfamiliar with is a great way to start.  Learning programming is not about the technical knowledge required to run every aspect of your code, rather it is all about knowing <em>how to ask the right questions</em> for the particular application you are trying to build.</p>
<p>Programmers are <strong>lazy</strong>.  If there is a shortcut that can be taken in code, you should take it (unless you have a really good reason not to).</p>
<p>Think of this example:</p>
<p>I have a list that was converted to a string:</p>
<pre><code>myStringList = "['foo', 'bar', 'foobar']"
</code></pre>
<p>How can I convert this string to a format that my computer can interpret as a list?</p>
<p>I <em>could</em> make a function like this:</p>
<pre><code>def stringToList(node_or_string):
    if isinstance(node_or_string, str):
        node_or_string = parse(node_or_string, mode='eval')
    if isinstance(node_or_string, Expression):
        node_or_string = node_or_string.body
    def _convert_num(node):
        if isinstance(node, Constant):
            if isinstance(node.value, (int, float, complex)):
                return node.value
        elif isinstance(node, Num):
            return node.n
        raise ValueError('malformed node or string: ' + repr(node))
    def _convert_signed_num(node):
        if isinstance(node, UnaryOp) and isinstance(node.op, (UAdd, USub)):
            operand = _convert_num(node.operand)
            if isinstance(node.op, UAdd):
                return + operand
            else:
                return - operand
        return _convert_num(node)
    def _convert(node):
        if isinstance(node, Constant):
            return node.value
        elif isinstance(node, (Str, Bytes)):
            return node.s
        elif isinstance(node, Num):
            return node.n
        elif isinstance(node, Tuple):
            return tuple(map(_convert, node.elts))
        elif isinstance(node, List):
            return list(map(_convert, node.elts))
        elif isinstance(node, Set):
            return set(map(_convert, node.elts))
        elif isinstance(node, Dict):
            return dict(zip(map(_convert, node.keys),
                            map(_convert, node.values)))
        elif isinstance(node, NameConstant):
            return node.value
        elif isinstance(node, BinOp) and isinstance(node.op, (Add, Sub)):
            left = _convert_signed_num(node.left)
            right = _convert_num(node.right)
            if isinstance(left, (int, float)) and isinstance(right, complex):
                if isinstance(node.op, Add):
                    return left + right
                else:
                    return left - right
        return _convert_signed_num(node)
    return _convert(node_or_string)
</code></pre>
<p>And call it like this:</p>
<pre><code>myList = stringToList(myStringList)

print(myStringList[0] # [
print(myList[0]) # foo
</code></pre>
<p>Or I could simply use the wonderful <code>ast</code> package in the default python library and achieve the same results:</p>
<pre><code>import ast

myList = ast.literal_eval(myStringList)

print(myList[0]) # foo
</code></pre>
<p>All credit for the <code>stringToList</code> function goes to the creators of the <a href="https://docs.python.org/3/library/ast.html" rel="nofollow noreferrer">ast package</a>, as I merely copied it from source code.</p>
<p>To add an example of a "good reason" to create your own package/framework, lets say I need to use the <code>eval</code> function for whatever reason.  As we all know, <code>eval</code> is <a href="https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html" rel="nofollow noreferrer">dangerous</a> and, generally speaking, shouldn't be used.  If I really need to use it, and there aren't any alternatives (cough cough, <code>literal_eval</code>), the only solution would be to create my own version of the <code>eval</code> function, to avoid having exploitable code.</p>
</div>
<span class="comment-copy">Yes, that's possible.</span>
<span class="comment-copy">it's really just a matter of how much re-inventing the wheel you want to do... Python can listen and respond on tcp ports using the <code>socket</code> library, or you could go one step further and use the <code>http.server</code> library which breaks out a bit more functionality for you, but you still are just working with the exact <code>get</code>, <code>post</code>, <code>delete</code>, etc. requests.</span>
<span class="comment-copy">This link will answer your question <a href="https://stackoverflow.com/questions/136069/python-web-development-with-or-without-a-framework">Python web development with or without frameworks</a></span>
<span class="comment-copy">If learning is the goal, here is a good 3-hour PyCon workshop on that topic by one of the co-creators of Django, which goes into exactly what makes up a web framework - <a href="https://www.youtube.com/watch?v=7kwnjoAJ2HQ" rel="nofollow noreferrer">"Let's Build A Web Framework"</a></span>
<span class="comment-copy">Yes, you can use good old CGI with the <a href="https://docs.python.org/2/library/cgi.html" rel="nofollow noreferrer">builtin cgi module</a> like we used to do 20 years ago (TBH I used Perl CGI back then but same principles apply).</span>
<span class="comment-copy">better yet, you could not convert your objects to <code>str</code> and call that serialization! +1</span>
<span class="comment-copy">Did you mean programm without framework is so hard that we couldn't make even hello world page without framework easily??? Can a intermediate python programmer build a very simple page but he doesn't? or it is advanced subject?</span>
<span class="comment-copy">@AliMarasizadeh sorry, I don't understand your question.</span>
<span class="comment-copy">sorry for my bad english :'( I want to know create hello world page with pure python on web is hard? is it professional case?   I hope that you understood my question.</span>
