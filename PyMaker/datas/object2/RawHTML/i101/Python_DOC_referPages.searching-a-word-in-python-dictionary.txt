<div class="post-text" itemprop="text">
<p>I am tasked with building a program that will ask for an input for a word. I am to write a program to search the word in a dictionary. (I already have composed)
[My hint is: you will find the first character of the word. Get the list of words that starts with that character.
Traverse the list to find the word.]
So far I have the following code:</p>
<pre><code>Word = input ("Search word: ")
my_file = open("input.txt",'r')
d = {}
for line in my_file:
    key = line[0]
    if key not in d:
        d[key] = [line.strip("\n")]
    else:d[key].append(line.strip("\n"))
</code></pre>
<p>I have gotten close, but I am stuck. Thank you in advance!</p>
<pre><code>user_word=input("Search word: ")
def file_records():
    with open("input.txt",'r') as fd:
        for line in fd:
            yield line.strip()
for record in file_records():
    if record == user_word:
        print ("Word is found")
        break
for record in file_records():
    if record != user_word:
        print ("Word is not found")
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do something like this,</p>
<pre><code>words = []
with open("input.txt",'r') as fd:
    words = [w.strip() for w in fd.readlines()]
user_word in words #will return True or False. Eg. "americophobia" in ["americophobia",...]
</code></pre>
<p>fd.readlines() reads all the lines in the file to a list and then w.strip() should strip off all leading and ending whitespaces (including newline). Else try - w.strip( \r\n\t)</p>
<p><code>[w.strip() for w in fd.readlines()]</code> is called <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">list comprehension</a> in python</p>
<p>This should work as long as the file is not too huge. If there are millions of record, you might want to consider creating a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator-expression" rel="nofollow noreferrer">genertor</a> function to read file. Something like,</p>
<pre><code>def file_records():
    with open("input.txt",'r') as fd:
        for line in fd:
            yield line.strip()
#and then call this function as
for record in file_records():
    if record == user_word:
        print(user_word + " is found")
        break 
else:
    print(user_word + " is not found")
</code></pre>
<p>PS: Not sure why you would need a python dictionary. Your professor would have meant English dictionary :)</p>
</div>
<span class="comment-copy">what ? you mean input.txt is a collection of all words and you are tasked to search if user input word is in input.txt ?</span>
<span class="comment-copy">Yes, but our professor wants us to take the input.txt and convert it into a dictionary. From there, search if user input word is in dictionary</span>
<span class="comment-copy">when you say convert file to dictionary, what format are the records in input file ? And is it a consistent pattern ?</span>
<span class="comment-copy">Its just a list of words. Here is the list:</span>
<span class="comment-copy">americophobia, zoophobia, bacteriophobia, pogonophobia, mastigophobia, clinophobia, apiphobia, ornithophobia, haemophobia, erythrophobia, bromidrosiphobia, gephyrophobia, ballistophobia, taphephobia, carcinophobia, ailurophobia, tocophobiapa, edophobia, Sinophobia, ecclesiophobia, nephophobia, coitophobia, cheimaphobia, chromophobia, cometophobia, cyberphobia, coprostasophobia, necrophobia, epistolophobia, demophobia/ochlophobia, hygrophobia, scotophobia, eosophobia, thanatophobia, bathophobia, mysophobia, pathophobia/nosophobia</span>
<span class="comment-copy">Great ! just a tip for next time, you might want to format code !</span>
<span class="comment-copy">Thank you again, and I had one last question. It works, but when I search a word it returns "word is found" and "word is not found"</span>
<span class="comment-copy">I used the code you shared with for creating the generator</span>
<span class="comment-copy">you mean it returns both ? can you paste the actual code here</span>
<span class="comment-copy">posted in my original question</span>
