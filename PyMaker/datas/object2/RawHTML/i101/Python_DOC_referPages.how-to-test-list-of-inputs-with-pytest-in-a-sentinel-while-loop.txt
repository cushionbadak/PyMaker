<div class="post-text" itemprop="text">
<p>I've been trying to test a list of inputs in Pytest using this function</p>
<pre><code>def test_play_hand():                                                               
    word_list = load_words()                                                        
    hand = {'e': 2, 'u': 1, 'g': 1, 'm': 1, 'b': 1, 't': 1}                         
    inputs = ['gum', 'beet', '.']                                                   

    with mock.patch('builtins.input', return_value= next(iter(inputs))):                                                                      
        assert play_hand(hand, word_list) == 0  
</code></pre>
<p>The function play_hand run a sentinel-based while loop that gets a dictionary, then asks users for a string input.</p>
<p>If the input is a <code>.</code>, the loop ends. </p>
<p>Otherwise, if the loop gets a string, it will check the hand and for the available characters and remove the characters used in the string from the hand. </p>
<p>The test works when mock.patch gets only one input. </p>
<p>How can you implement the test using a list or multiple inputs for testing? </p>
<p>Without iter() it gives an error of inputs not iterable and with iter() it just freezes. </p>
<p>I appreciate any input.</p>
<p>Edit: Forgot to mention that play_hand returns an int</p>
</div>
<div class="post-text" itemprop="text">
<p>Found the answer. </p>
<pre><code>def test_play_hand():                                                               
    word_list = load_words()                        
    hand = {'e': 2, 'u': 1, 'g': 1, 'm': 1, 'b': 1, 't': 1} 
    inputs = ['gum', 'beet', '.']                                      

    with mock.patch('builtins.input', side_effect = inputs) :                       
        assert play_hand(hand, word_list) == 12 
</code></pre>
<p>I had to replace <code>return_value</code> with <code>side_effect</code> to run all the inputs in the test. </p>
<p>Link: <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">https://docs.python.org/3/library/unittest.mock.html</a></p>
</div>
