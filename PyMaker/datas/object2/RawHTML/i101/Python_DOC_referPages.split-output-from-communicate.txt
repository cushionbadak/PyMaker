<div class="post-text" itemprop="text">
<p>I am trying to get an output from that program named clasp in a string using communicate but when I try to use split python tells me:</p>
<p><code>AttributeError: 'tuple' object has no attribute 'split'</code></p>
<p>And when I try to convert the tuple to a string with .join Python says:</p>
<p><code>TypeError: sequence item 0: expected str instance, bytes found</code></p>
<p>So I dont understand the type of output using communicate and I was reading so many post but nothing works. Output is bytes object? or tuple?</p>
<pre><code>def resolve(self):
    p = Popen(['clasp', 'propositions.txt'], stdout=PIPE)#stdin=PIPE, stdout=PIPE, stderr=PIPE 
    output= p.communicate("input data that is passed to subprocess' stdin")

    print (output)

    str = '/n'.join(output)
    print (output.split("c Answer: 1",1)[1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow noreferrer">Python 3.7 docs</a> we have</p>
<blockquote>
<p>communicate() returns a tuple (stdout_data, stderr_data). The data will be strings if streams were opened in text mode; otherwise, bytes.</p>
</blockquote>
<p>So <code>output[0]</code> is the data in stdout so to print that just do <code>print(output[0])</code></p>
</div>
<div class="post-text" itemprop="text">
<p>first <code>communicate</code> returns a <code>tuple</code>: output and error data. Do:</p>
<pre><code>output, _ = p.communicate("input data that is passed to subprocess' stdin")
</code></pre>
<p>then </p>
<pre><code>str = '/n'.join(output)
</code></pre>
<p>makes no sense, <code>output</code> is a buffer with all the lines, as <code>bytes</code> (and you're not using <code>str</code> anyway)</p>
<p>So you just need:</p>
<pre><code>print (output.decode().split("c Answer: 1",1)[1])
</code></pre>
</div>
<span class="comment-copy">If you don't understand the type of an object you can always output the type of the object via <code>print(type(output))</code>. In the case of a tuple it's often helpful to also know the type of the object in the tuple i.e. <code>print(type(output[0]))</code>.</span>
<span class="comment-copy"><code>decode()</code> is only needed with python 3.</span>
<span class="comment-copy">So with decode now I can save the output in a variable? I mean the text was on bytes and now with decode i convert it in str?</span>
<span class="comment-copy"><code>decode()</code> returns a string, yes. You can assign the result of the <code>split()</code> operation instead of printing it</span>
