<div class="post-text" itemprop="text">
<p>I am making a To Do List app in Python using Arrays or Lists. I want to check if the array containing all "to-do tasks" is full or not. If it is full I would then inform the user that the list is full. <strong>I am still a beginner.</strong></p>
<pre><code>todo_list = ["1.)", "2.)", "3.)", "4.)", "5.)", "6.)", "7.)", "8.)", "9.)", "10.)"]
def addTask(taskName):

  '''
  this is a global variable to keep track of what index the last task was 
  placed in.
  '''


  global x
  x = int(x)
  num = x + 1
  num = int(num)
  taskName = str(taskName)

  '''
  This is what I tried to make the program start from the beginning if the 
  list was full.
  '''

  if x &gt; list_length:
    x = 0
    todo_list[0] = None


  todo_list[x] = str(num) + ".) " + taskName
  x = x+1

  print("Done!")
  main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Are you saying that you've limited the number of possible tasks to 10? and if each one has a task attached then the list should notify the user it's full?</p>
<p>If so, you know that an empty task is "10.)" so at max it's length is 4 (4 characters), so if any items length is less than or equal to 4 then it's empty</p>
<pre><code>for task in todo_list:
    if len(task) &gt; 4:
        print('Todo list is full')
        break
    else:
        print('Todo list is full')
</code></pre>
<p><strong>Can I also advise of a better way</strong> to create the todo list? Use a dictionary.</p>
<pre><code>todo_list = {'clean cat':'incomplete', 'buy milk':'complete'}
</code></pre>
<p>and to add a new task is easy!</p>
<pre><code>todo_list['learn python'] = 'incomplete'
</code></pre>
<p>and to update a task is even easier!</p>
<pre><code>todo_list['clean cat'] = 'complete'
</code></pre>
<p>Here is how I would do it:</p>
<pre><code>todo_list = {}

if len(todo_list) == 10:
    print('Sorry, list is full!')
else:
    task_name = input('Task name: ')
    todo_list[task_name] = 'incomplete'

print(todo_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't have to define <code>todo_list</code> with numbering. Just define the maximum size of <code>todo_list</code> and check if length of <code>todo_list</code> is bigger than maximum size.</p>
<pre><code>todo_list = list()
MAX_SIZE = 10

add_task(taskName:str):
    if len(todo_list) &gt;= MAX_SIZE:
        # code you want to run when todo_list is full
    else:
        todo_list.append("{}.) {}".format(len(todo_list)+1, taskName))
</code></pre>
</div>
<span class="comment-copy">Hi, I'd recommend you to read through <a href="https://docs.python.org/3/tutorial/controlflow.html#more-control-flow-tools" rel="nofollow noreferrer">this (whole) article</a>.</span>
<span class="comment-copy">Thank you for answering my question and teaching me another way to make lists</span>
<span class="comment-copy">You answered my question too, but @Ari Victor also told me another way to to make lists thank you for the answer though!</span>
