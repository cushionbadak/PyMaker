<div class="post-text" itemprop="text">
<pre><code>['10019', 'Airma25KLOS', 'Juridinis', 'LT', '121979631', 'LT219796314', '2410', '25', '26', '3232', '32131']
</code></pre>
<p>In this list every item is a string, how could I make from this list, same list with same order but instead of integers that are strings now like 10019'  '121979631' and so on, be returned as ints.</p>
<p>My goal is to make list look like this</p>
<pre><code>[10019, 'Airma25KLOS', 'Juridinis', 'LT', 121979631, 'LZ219796314', 2410, 25, 26, 3232, 32131]
</code></pre>
<p>and if there is a mix of letters and numbers it should stay as a string like LZ219796314'</p>
</div>
<div class="post-text" itemprop="text">
<p>This one should work for any string that is a valid representation of an integer (wether positive or negative). Not that if won't work with floats though.</p>
<pre><code>def to_int(s):
    try:
        return int(s)
    except (TypeError, ValueError) as e:
        return s

result = [to_int(s) for s in your_list]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use the following list comprehension with <a href="https://docs.python.org/3/library/string.html" rel="nofollow noreferrer"><code>.isdigit</code></a> in order to convert to <code>int</code> only numeric strings:</p>
<pre><code>l = ['10019', 'Airma25KLOS', 'Juridinis', 'LT', '121979631', 
     'LT219796314', '2410', '25', '26', '3232', '32131']

[int(i) if i.lstrip('-').isdigit() else i for i in l]
# [10019, 'Airma25KLOS', 'Juridinis', 'LT', 121979631, 'LT219796314', 
#  2410, 25, 26, 3232, 32131]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use this code. It works fine incase of negative integers as well as float etc .</p>
<p><strong>Code :</strong></p>
<pre><code>def is_number(s):
    try:
        float(s)
        return True
    except ValueError:
        pass

    try:
        import unicodedata
        unicodedata.numeric(s)
        return True
    except (TypeError, ValueError):
        pass

    return False


l = ['10019', 'Airma25KLOS', 'Juridinis', 'LT', '121979631', 
     'LT219796314', '2410', '-25', '26', '3232', '32131']

print([int(i) if is_number(i) else i for i in l])
</code></pre>
<p><strong>Output :</strong></p>
<pre><code>[10019, 'Airma25KLOS', 'Juridinis', 'LT', 121979631, 'LT219796314', 2410, -25, 26, 3232, 32131]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use regex to check if a string is an integer:</p>
<pre><code>import re

p = re.compile(r'[+-]?\d+')

[int(i) if p.fullmatch(i) else i for i in l]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could try this out:</p>
<pre><code>l=['-10019', 'Airma25KLOS', 'Juridinis', 'LT', '121979631', 'LT219796314', '2410', '25', '26', '3232', '32131']
a=[]
for item in l:
    try:
        a.append(int(item))
    except:
        a.append(item)
</code></pre>
<p>I am not sure if this is the best method to this, but this works for all integers (positive and negative)</p>
</div>
<span class="comment-copy">Yep, this is what I was thinking along the lines of. +1</span>
<span class="comment-copy">Not quite robust. What if one of the integers is negative?</span>
<span class="comment-copy">@JohnColeman is right. In my view, a more rigorous method would be to define a separate function to do a more robust check on whether or not a string is an integer.</span>
<span class="comment-copy">@JohnColeman good point. Will add an update contemplating negative ints also</span>
<span class="comment-copy">@yatu It depends on the intended application. For positive integer base-10 literals (which OP seems to have in mind), this is fine. OP should certainly know about <code>isdigit()</code>, but should also know its limitations.</span>
<span class="comment-copy">This approach only works for integers, as well as the other proposed solution. For a + sign you can simply left strip both by - and +,  <code>i.lstrip('+-')</code> @MykolaZotko</span>
<span class="comment-copy">behtreen hogaya! :)</span>
<span class="comment-copy">shukriya :) @DirtyBit</span>
