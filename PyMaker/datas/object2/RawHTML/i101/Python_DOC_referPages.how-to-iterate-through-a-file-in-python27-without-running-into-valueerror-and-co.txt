<div class="post-text" itemprop="text">
<p>I essentially have the same problem as this guy : <a href="https://stackoverflow.com/questions/826493/mixing-files-and-loops">person also having issues iterating</a></p>
<p>Depending on what I change, I will either run into an IOError, a ValueError (when I use a for each to iterate through each line in the file, and read using readline()), or the program works but it cuts off my data when there's an empty line. I've also tried using the for each loop to iterate through the file with .next() instead of readline, but that skips just about every other line in my data set. I believe top comment there has the solution to my question, except my text file will have lines that are empty, which ends the while loop too early. What is the best way around this? Is there a better data structure to use, or do I have to somehow parse my file to remove empty lines?</p>
<p>Here's a segment of my code, I'm using .rstrip() to get rid of the newline characters at the end of each line:</p>
<pre><code>f = open(self.path,'r')
    while True:
        line = f.readline().rstrip()
        temp_lines_list.append(line)
        if not line:
            break
</code></pre>
<p>Some sample input:</p>
<pre><code>text1 : 2380218302
test2 : sad
test3 : moresad (very)
yetanothertest : more datapoints

wowanewsection: incredible
</code></pre>
<p>I hope this helps thank you :)</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>readline()</code> method returns a line with a trailing newline character, even on an empty line. You should check if the line is empty before you strip it instead:</p>
<pre><code>while True:
    line = f.readline()
    if not line:
        break
    temp_lines_list.append(line.rstrip())
</code></pre>
<p>However, it is more idiomatic in Python to use the file object as an iterable to iterate through the lines of a file, so that you don't have to manage the iterations on your own.</p>
<pre><code>for line in f:
    temp_lines_list.append(line.rstrip())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried something like this:</p>
<pre><code>lines_output = []
with open('myFile.txt', 'r') as file: # maybe myFile.txt == self.path??
    for line in file.readlines(): # we use readlines() instead of readline() so we iterate entire file
        stripped_line = line.strip()
        if stripped_line not '':
            lines_output.append(stripped_line) # save info if line is not blank
        else:
            pass # if line is blank just skip it
</code></pre>
</div>
<span class="comment-copy">if you say you are having the same issue as another person it is most likely that this is a duplicate of that question. Please explicitly state how this is different.</span>
<span class="comment-copy">If you are using a <code>for</code> loop like <code>for line in f: ...</code>, there's no need to use <code>readline</code> or <code>next</code> or any other function to read a line; the iterator already provides each new line via the variable <code>line</code>. <code>next</code> is implicitly called for you.</span>
<span class="comment-copy">Have you tried using <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">exception handling</a>?</span>
<span class="comment-copy">With the <code>while</code> loop, you are stripping the new line too soon; the end-of-file condition is marked by <code>readline</code> returning a truly empty string, while an empty line from a file comes back as the non-empty string <code>'\n'</code>.</span>
<span class="comment-copy">thank you so much coming from Java I keep forgetting I can iterate through the lines in that way and not have to use readline() or readlines()</span>
<span class="comment-copy">There's no need to use <code>readlines</code>; the file itself is already an iterator.</span>
