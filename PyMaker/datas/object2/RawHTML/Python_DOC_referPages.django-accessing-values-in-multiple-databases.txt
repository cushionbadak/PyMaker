<div class="post-text" itemprop="text">
<p>I need to make sure that an object (<code>Device</code>) is only saved once and only to one database.</p>
<p>I have several PostGre SQL databases as so:</p>
<pre><code>                                       List of databases
             Name              | Owner | Encoding |  Collate   |   Ctype    | Access privileges 
-------------------------------+-------+----------+------------+------------+-------------------
 admin                         | admin | UTF8     | en_US.utf8 | en_US.utf8 | 
 postgres                      | admin | UTF8     | en_US.utf8 | en_US.utf8 | 
 reference                     | admin | UTF8     | en_US.utf8 | en_US.utf8 | 
 template0                     | admin | UTF8     | en_US.utf8 | en_US.utf8 | =c/admin         +
                               |       |          |            |            | admin=CTc/admin
 template1                     | admin | UTF8     | en_US.utf8 | en_US.utf8 | =c/admin         +
                               |       |          |            |            | admin=CTc/admin
 workspace_A                   | admin | UTF8     | en_US.utf8 | en_US.utf8 | 
 workspace_B                   | admin | UTF8     | en_US.utf8 | en_US.utf8 | 
 workspace_C                   | admin | UTF8     | en_US.utf8 | en_US.utf8 | 
 workspace_D                   | admin | UTF8     | en_US.utf8 | en_US.utf8 | 
</code></pre>
<p>Workspaces A,B,C and D all have a table called <code>devices_device</code> which contains an ID, a name and some other fields.</p>
<p>What function(s) do I need to call when saving a <code>Device</code> (over-writing the Django <code>save()</code> function) to make sure that a <code>Device</code> with the same parameters is not already present?</p>
<p>This is what I currently have outlined, with question marks where I don't know which function to use</p>
<pre><code>def save(self, *args, **kwargs):
    for tab in ?.objects.all():
        if tab.object.using('devices_device')? == self.device_reference
        and ?.device_name == self.device_name
        and  ?.device_address == self.device_address
        and  ?.device_position== self.device_position
        and  ?.device_desciption == self.device_desciption:
            raise ValidationError(
                "This device already exists in another workspace!"
            )
    super().save(*args, **kwargs)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The obvious disclaimer first: Imposing unique constraints in code is a recipe for chaos and low performance. That's what RDBMS's are for (and you have several of them :). </p>
<p>That said, you can of course loop over every one of the databases where devices are stored and check for the presence of a matching device. For that to work, you have to include each database in your <code>settings.DATABASES</code>.</p>
<pre><code>from django.conf import settings

for db in settings.DATABASES:
    if YourModel.objects.using(db).filter(
        # add your filter conditions here
    ).exists():
        raise ValidationError(
            "This device already exists in another workspace!"
        )            
</code></pre>
<p>I assume you have already read the helpful intro to multiple databases in the <a href="https://docs.djangoproject.com/en/2.1/topics/db/multi-db/" rel="nofollow noreferrer">Django documentation</a>.</p>
</div>
