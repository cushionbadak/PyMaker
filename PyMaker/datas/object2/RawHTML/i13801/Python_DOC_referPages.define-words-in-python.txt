<div class="post-text" itemprop="text">
<p>This may seem like a duplicate of this: <a href="https://stackoverflow.com/questions/19386514/python-define-a-word">Python define a word?</a></p>
<p>However, it is not because I am trying to implement that answer (that works for that thread's OP but not for me) into my code.</p>
<p>Here is my function:</p>
<pre><code>def define_word(user_define_input):
    srch = str(user_define_input[1])
    output_word=urllib.request.urlopen("http://dictionary.reference.com/browse/"+srch+"?s=t")
    output_word=output_word.read()
    items=re.findall('&lt;meta name="description" content="'+".*$",output_word,re.MULTILINE)
    for output_word in items:
        y=output_word.replace('&lt;meta name="description" content="','')
        z=y.replace(' See more."/&gt;','')
        m=re.findall('at Dictionary.com, a free online dictionary with pronunciation, synonyms and translation. Look it up now! "/&gt;',z)
        if m==[]:
            if z.startswith("Get your reference question answered by Ask.com"):
                print ("Word not found!")
            else:
                print (z)
    else:
        print ("Word not found!")
</code></pre>
<p>Note:</p>
<pre><code>&gt;&gt;&gt; print (user_define_input) #to show what is in the list
&gt;&gt;&gt; define &lt;word entered&gt; #prints out the list, in this case, the program ignores user_define_input[0] and looks for [1] which is the targeted word
</code></pre>
<p>Also, this contains a bit of HTML :/ sorry but thats what the other answer used.</p>
<p>So, the Error when I try to use this:</p>
<pre><code>File "/Users/******/GitHub/Multitool/functions.py", line 104, in define_word
items=re.findall('&lt;meta name="description" content="'+".*$",output_word,re.MULTILINE)
File "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/re.py", line 210, in findall
return _compile(pattern, flags).findall(string)
TypeError: can't use a string pattern on a bytes-like object
</code></pre>
<p>Note:
line 104 of functions.py is: </p>
<pre><code>items=re.findall('&lt;meta name="description" content="'+".*$",output_word,re.MULTILINE)
</code></pre>
<p>Line 210 of re.py is the last line of this function:</p>
<pre><code>def findall(pattern, string, flags=0):
    """Return a list of all non-overlapping matches in the string.

    If one or more capturing groups are present in the pattern, return a list of groups; this will be a list of tuples if the pattern
has more than one group.

Empty matches are included in the result."""
    return _compile(pattern, flags).findall(string) #line 210
</code></pre>
<p>If there is anything unclear in this, please tell me (and I'm not quiet sure about what tags to add for this one :/). And thank you in advance :) Feel free to change anything or even re-writing the entire thing but just make sure to use the variables/lists:</p>
<ul>
<li>define_word (for function name)</li>
<li>user_define_input</li>
</ul>
<p>If you wish to see the git for this, go to this link: <a href="https://github.com/DarkLeviathanz/Multitool.git" rel="nofollow noreferrer">https://github.com/DarkLeviathanz/Multitool.git</a></p>
<p>Adding:</p>
<pre><code>output_word = output_word.decode()
</code></pre>
<p>or changing</p>
<pre><code>output_word = output_word.read().decode('iso-8859-2')
</code></pre>
<p>has given this when this is entered: define test:</p>
<pre><code>Test definition, the means by which the presence, quality, or genuineness of anything is determined; a means of trial.&lt;meta property="og:url" content="http://dictionary.reference.com/browse/test"/&gt;&lt;link rel="shortcut icon" href="http://static.sfdict.com/dictcloud/favicon.ico"/&gt;&lt;!--[if lt IE 9]&gt;&lt;link rel="respond-proxy" id="respond-proxy" href="http://static.sfdict.com/app/respondProxy-d7e5f.html" /&gt;&lt;![endif]--&gt;&lt;!--[if lt IE 9]&gt;&lt;link rel="respond-redirect" id="respond-redirect" href="http://dictionary.reference.com/img/respond.proxy.gif" /&gt;&lt;![endif]--&gt;&lt;link rel="search" type="application/opensearchdescription+xml" href="http://dictionary.reference.com/opensearch_desc.xml" title="Dictionary.com"/&gt;&lt;link rel="publisher" href="https://plus.google.com/117428481782081853923"/&gt;&lt;link rel="canonical" href="http://dictionary.reference.com/browse/test"/&gt;&lt;link rel="stylesheet" href="http://dictionary.reference.com/drc/css/bootstrap.min-93899.css" type="text/css" media="all"/&gt;&lt;link rel="stylesheet" href="http://dictionary.reference.com/drc/css/combinedSerp-8c61a.css" type="text/css" media="all"/&gt;&lt;script type="text/javascript"&gt;var searchURL="http://dictionary.reference.com/browse/%40%40queryText%40%40?s=t";var CTSParams={"infix":"","clkpage":"dic","clksite":"dict","clkld":0};&lt;/script&gt;
Word not found!
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>output_word = output_word.decode()
</code></pre>
<p>will convert the bytes to a string.</p>
<hr/>
<p><strong>UPDATE</strong></p>
<p>this is the last state from the script in the chat (still far from perfect...):</p>
<pre><code>import requests
from lxml import html

def define_word(word):
    response = requests.get(
        "http://dictionary.reference.com/browse/{}?s=t".format(word))
    tree = html.fromstring(response.text)
    title = tree.xpath('//title/text()')
    print(title)
    defs = tree.xpath('//div[@class="def-content"]/text()')
    # print(defs)

    defs = ''.join(defs)
    defs = defs.split('\n')
    defs = [d for d in defs if d]
    for d in defs:
        print(d)

define_word('python')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>urllib.request.urlopen().read()</code> returns a byte string. The exception indicates that you can not use a Python string as a regex pattern when applying it to a byte string.</p>
<p>The byte string will (usually) be an encoded unicode string, in this case it looks like UTF-8 encoded data. Therefore you need to decode the byte string into a Python string so that it can be used as the regex pattern:</p>
<pre><code>output_word = urllib.request.urlopen("http://dictionary.reference.com/browse/"+srch+"?s=t")
output_word = output_word.read().decode('utf8')
</code></pre>
<p>That should fix the problem for you.</p>
<p>You do need to know what encoding to use. That can be done by looking at the <code>Content-Type</code> response header, which for this URL is <code>Content-Type: text/html; charset=UTF-8</code>. Alternatively, as this is HTML content, you can look for the <code>&lt;meta http-equiv="Content-type" ...</code> tag.</p>
<p>Finally, you could use the <a href="http://docs.python-requests.org" rel="nofollow"><code>requests</code></a> library which will handle this for you:</p>
<pre><code>import requests
r = requests.get("http://dictionary.reference.com/browse/"+srch+"?s=t")
output_word = r.text
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>After a few changes, this is the code that I stuck with although it still has a few flaws.</p>
<pre><code>def define_word(user_define_input):
    try:
        response = requests.get("http://dictionary.reference.com/browse/{}?s=t".format(user_define_input[1]))
    except IndexError:
        print("You have not entered a word!")
        return
    tree = html.fromstring(response.text)
    title = tree.xpath('//title/text()')
    print(title)
    print("\n")
    defs = tree.xpath('//div[@class="def-content"]/text()')
    defs = ''.join(defs)
    defs = defs.replace("() ", "")
    defs = defs.split('\n')
    defs = [d for d in defs if d]
    for d in defs:
        print(d)
</code></pre>
<p>and this to split the user input into a list with two items:</p>
<pre><code>def split_line_test(user_input):
    global user_define_input
    user_define_input = user_input.split()
    if (user_define_input[0] == "define"): #define is user_define_input[0] while user_define_input[1] is the word that will be searched up
        return True
    if (user_define_input[0] == "weather"): #you can ignore this, it is for my other function
        return True
    return False
</code></pre>
<p>So thank you to whoever helped me fix the code :)</p>
</div>
<span class="comment-copy">thanks, but where would i put this line?</span>
<span class="comment-copy">right after <code>output_word=output_word.read()</code>.</span>
<span class="comment-copy">kk, but i got a lot of html text after the definition is printed.</span>
<span class="comment-copy">yes, now you need to extract the data you need from the html. i suggest you use a html parser like <a href="https://docs.python.org/3/library/html.parser.html" rel="nofollow noreferrer">docs.python.org/3/library/html.parser.html</a> or <a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer">crummy.com/software/BeautifulSoup/bs4/doc</a> or something...</span>
<span class="comment-copy">and.... im lost lol. thanks tho :) but ill look over it</span>
<span class="comment-copy">It fixed the problem but there was a lot of wierd html stuff displayed after the definition was printed.</span>
<span class="comment-copy">Sorry, that might be because I originally said that the data was encoded as ISO-8859-2 (as reported by <code>chardet.detect()</code>), but it seems that it is really UTF-8.</span>
<span class="comment-copy">and... ImportError: No module named 'requests'? thats wierd... but its python 3.4.2 so idk, maybe that changed. And, the extra html code (added in question) is prob not because of encoding. prob because of some problems at the find part for the html.</span>
<span class="comment-copy"><code>requests</code> is a 3rd party library. You can install it with <code>pip install requests</code> or see here: <a href="http://docs.python-requests.org/en/latest/user/install/#install" rel="nofollow noreferrer">docs.python-requests.org/en/latest/user/install/#install</a></span>
<span class="comment-copy">yah, i got that. i also installed lxml/hmtl with that command as well :) ty</span>
