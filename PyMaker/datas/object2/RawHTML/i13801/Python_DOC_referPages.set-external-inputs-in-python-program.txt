<div class="post-text" itemprop="text">
<p>I want to do something like this in my python code</p>
<pre><code>python my_prog.py -inp 3 -inp2 4
</code></pre>
<p>and be able to use inp and inp2 as inputs in my python program. How can I do it? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/getopt.html" rel="nofollow">getopt</a> for parsing input arguments.</p>
<p>Example from the docu:</p>
<pre><code>import getopt, sys

def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], "ho:v", ["help", "output="])
    except getopt.GetoptError as err:
        # print help information and exit:
        print str(err) # will print something like "option -a not recognized"
        usage()
        sys.exit(2)
    output = None
    verbose = False
    for o, a in opts:
        if o == "-v":
            verbose = True
        elif o in ("-h", "--help"):
            usage()
            sys.exit()
        elif o in ("-o", "--output"):
            output = a
        else:
            assert False, "unhandled option"
    # ...

if __name__ == "__main__":
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for the <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">argparse</a> module.</p>
<pre><code>import argparse

parser = argparse.ArgumentParser(description='Process some integers.')
parser.add_argument('input1', metavar='a', type=int, help='an input for foo')
parser.add_argument('input2', metavar='b', type=int, help='an input for bar')
args = parser.parse_args()

print(args.input1 + args.input2)
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse</a></span>
<span class="comment-copy">Sys.argv is basic sample <a href="http://stackoverflow.com/questions/4117530/sys-argv1-meaning-in-script" title="sys argv1 meaning in script">stackoverflow.com/questions/4117530/sys-argv1-meaning-in-script</a></span>
