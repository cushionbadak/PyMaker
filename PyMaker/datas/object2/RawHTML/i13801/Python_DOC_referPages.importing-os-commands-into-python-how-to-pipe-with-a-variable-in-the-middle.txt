<div class="post-text" itemprop="text">
<p>So here's an example of the terminal line I'm trying to run after importing the OS into a Python Script of mine:</p>
<pre><code>user$ echo variable | thecommand
</code></pre>
<p>Even though OS imports have been working for me lately, the fact that the variable is in the MIDDLE of the imported OS command is not allowing my code to run:</p>
<pre><code>#! /bin/python
import os
variable = 'thevariable'
os.system ("echo "+variable +" | thecommand")
</code></pre>
<p>the above is what I have tried in a few different syntax's with no success. Is there a way to accomplish what I'm looking to do using the os.system method?</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't use <code>os.system()</code>. it is deprecated.
Instead try</p>
<pre><code>import subprocess
variable = 'thevariable'
subprocess.call("echo "+variable +" | thecommand", shell=True)
</code></pre>
<p>the <code>shell=True</code> means that the command will be run in a bash process so that <code>echo</code> and the pipe would work.</p>
</div>
<span class="comment-copy">As shoosh says, it's <i>much</i> better to use the <code>subprocess</code> module. But <code>os.system</code> still ought to work, so I'm a bit puzzled by your lack of success. FWIW, you really should quote the string you pass to <code>echo</code> in your Bash command, although it <i>should</i> work without quoting on a single world like <code>'thevariable'</code>. Try this example: <code>python -c "import os;s='hello\nthere\nworld';os.system('echo \"'+s+'\"|tac')"</code>; it should print <code>world</code> <code>there</code> <code>hello</code> on separate lines.</span>
<span class="comment-copy">Thanks so much for telling me about subprocess! I'll have to learn it.  The command is now outputting:      syntax error at line 2: '|' unexpected  any ideas what this could mean?</span>
<span class="comment-copy">On a Unix-like system, <code>subprocess.Popen</code> and the convenience functions like <code>subprocess.call</code> use <code>/bin/sh</code> (which is often symlinked to <code>dash</code>) as the shell, not Bash. But if you really do need Bash then you can specify it by using the <code>executable</code> argument in the <code>subprocess.Popen</code> constructor. See the <a href="https://docs.python.org/3/library/subprocess.html#popen-constructor" rel="nofollow noreferrer">subprocess.Popen</a> docs for details.</span>
<span class="comment-copy">@driedupsharpie these 3 commands work fine for me. Make sure you copied them correctly and didn't miss any quotes.</span>
