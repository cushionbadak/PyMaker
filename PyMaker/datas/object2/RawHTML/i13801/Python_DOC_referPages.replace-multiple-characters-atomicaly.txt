<div class="post-text" itemprop="text">
<p>I'm working on decrypting a substitution cipher (<em>not</em> Caesar/ROT) with frequency analysis and no specialized tools. Let's say I wanted to use this cipher dictionary which seems good enough after analysis:</p>
<pre><code>key = {
'S':'E',
'Q':'A',
'J':'T',
'U':'O',
'B':'I',
'N':'N',
'C':'L',
'G':'R',
'D':'H',
'V':'S',
'Z':'D',
'W':'C',
'M':'U',
'Y':'M',
'T':'F',
'X':'P',
'K':'G',
'E':'W',
'L':'Y',
'A':'B',
'F':'V',
'I':'K',
'O':'X',
'H':'J',
'R':'Q',
'P':'Z'
}
</code></pre>
<p>My code below has an obvious problem:</p>
<pre><code> with open(filename) as f:
     out = f.read()
     for k in key:
         out = out.replace(k,key[k])
     print out
</code></pre>
<p>Because it replaces every character one after the other, a character at a certain position gets replaced several times before the algorithm is done, instead of just once.
(ie: first iteration the algorithm will replace all <code>S</code> with <code>E</code>, but then it reaches <code>E</code> in the dictionary and replaces <em>all</em> <code>E</code>s with <code>W</code>)</p>
<p>Does Python have a convenient way of doing this operation in one shot? Or will I be forced to keep track of the positions that have already been changed myself?</p>
</div>
<div class="post-text" itemprop="text">
<p>For Python 3.x, You can use <a href="https://docs.python.org/3/library/stdtypes.html#str.maketrans" rel="nofollow"><code>str.maketrans()</code></a> (or <a href="https://docs.python.org/2/library/string.html#string.maketrans" rel="nofollow"><code>string.maketrans()</code></a> for Python 2.x) and <a href="https://docs.python.org/2/library/stdtypes.html#str.translate" rel="nofollow"><code>str.translate()</code></a> for this -</p>
<pre><code>In [27]: key = {
   ....: 'S':'E',
   ....: 'Q':'A',
   ....: 'J':'T',
   ....: 'U':'O',
   ....: 'B':'I',
   ....: 'N':'N',
   ....: 'C':'L',
   ....: 'G':'R',
   ....: 'D':'H',
   ....: 'V':'S',
   ....: 'Z':'D',
   ....: 'W':'C',
   ....: 'M':'U',
   ....: 'Y':'M',
   ....: 'T':'F',
   ....: 'X':'P',
   ....: 'K':'G',
   ....: 'E':'W',
   ....: 'L':'Y',
   ....: 'A':'B',
   ....: 'F':'V',
   ....: 'I':'K',
   ....: 'O':'X',
   ....: 'H':'J',
   ....: 'R':'Q',
   ....: 'P':'Z'
   ....: }

In [28]: t = str.maketrans(key)

In [29]: "ABCDEFGZYXW".translate(t)
Out[29]: 'BILHWVRDMPC'
</code></pre>
<hr/>
<p>For Python 2.x,</p>
<pre><code>&gt;&gt;&gt; from string import maketrans
&gt;&gt;&gt; t = maketrans(''.join(key.keys()) , ''.join(key.values()))
&gt;&gt;&gt; "ABCDEFGZYXW".translate(t)
'BILHWVRDMPC'
</code></pre>
</div>
<span class="comment-copy">Use <a href="https://docs.python.org/2/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate</code></a></span>
<span class="comment-copy">The file could be read and processed char by char. Answers at <a href="http://stackoverflow.com/questions/21915501/python-how-to-read-file-one-character-at-a-time" title="python how to read file one character at a time">stackoverflow.com/questions/21915501/â€¦</a> show how to do that.</span>
