<div class="post-text" itemprop="text">
<p>I want to create a dictionary where the key is a state name and the value is the sum of all the count corresponding to the state. </p>
<p>Example from dataFrame</p>
<pre><code>State         Count
California    100
Colorado      100
California    54
Colorado      9254
</code></pre>
<p>I was trying to use the following, but not sure how to include a sum function inside this, also not sure if I should be using a zip method here:</p>
<pre><code>df_dict = dict(zip(df.State, df.Count))
print df_dict
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Calculate the sum by group in the dataframe and then select the <code>'Count'</code> column and use <code>to_dict()</code> to convert the resulting Series to dictionary:</p>
<pre><code>df_dict = df.groupby('State').agg('sum')['Count'].to_dict()
print df_dict
</code></pre>
<hr/>
<p>If you have more columns in the df than those two you probably want to do</p>
<pre><code>df[['State','Count']].groupby('State').agg('sum')['Count'].to_dict()
</code></pre>
<p>to avoid calculating the sum for all of the columns.</p>
<p>Edit:</p>
<p>as EdChum suggested <code>.agg('sum')</code> can be shortened to <code>.sum()</code> which gives you the same result.</p>
</div>
<div class="post-text" itemprop="text">
<p>That won't work properly, since the <code>dict</code> constructor will replace the value of each <code>state</code> as it goes, rather than summing. It's not a one-liner, but:</p>
<pre><code>from collections import Counter

df_dict = Counter()
for state, count in zip(df.State, df.Count):
    df_dict[state] += count
</code></pre>
<p>will get you the total counts, and the <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow">Counter</a> class has some extra functionality that may be useful for dictionaries of counts.</p>
</div>
<span class="comment-copy">perfect, not sure if the ['Count'] is needed. unless i am missing something? @Pekka</span>
<span class="comment-copy">It is needed to select the first (in this case only) column from the resulting DataFrame. Try it without it. You will get a nested dictionary. In that case your desired result is in the <code>Count</code> key.</span>
<span class="comment-copy">So when we use the <code>['Count']</code> selection we get Series instead of DataFrame. Then we convert the Series (not DataFrame) to dictionary. Note that also DataFrames can be converted to dictionary with <code>to_dict()</code> but the result is different (nested dict). See: <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.to_dict.html" rel="nofollow noreferrer">pandas.pydata.org/pandas-docs/stable/generated/…</a> and <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_dict.html" rel="nofollow noreferrer">pandas.pydata.org/pandas-docs/stable/generated/…</a></span>
<span class="comment-copy">I think the <code>agg</code> is unnecessary here</span>
