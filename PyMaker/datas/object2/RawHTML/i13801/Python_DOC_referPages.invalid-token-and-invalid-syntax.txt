<div class="post-text" itemprop="text">
<p>I have a question in python's error case. I have tried here....</p>
<pre><code>&gt;&gt;&gt; 0o08
SyntaxError: invalid syntax
&gt;&gt;&gt; 0o8
SyntaxError: invalid token
</code></pre>
<p>I want to know:</p>
<ul>
<li>Which is the invalid token, <code>0</code>, <code>o</code> or <code>8</code>? </li>
<li>Why is <code>0o08</code> invalid syntax?</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>An integer literal starting with <code>0o</code> is interpreted as <a href="https://en.wikipedia.org/wiki/Octal" rel="nofollow"><strong>octal</strong></a>. Per <a href="https://docs.python.org/3/reference/lexical_analysis.html#integer-literals" rel="nofollow">the documentation</a>:</p>
<pre><code>octinteger     ::=  "0" ("o" | "O") octdigit+  # '0o' or '0O' followed by one or more...
... 
octdigit       ::=  "0"..."7"                  # ...digits 0 to 7 inclusive
</code></pre>
<p>The token <code>8</code> is not a valid <code>octdigit</code>, so is not allowed in an octal literal, hence <em>"invalid token"</em>. </p>
<hr/>
<p>The reason that the error messages are different is that (related to Python's LL(1) parser, which only looks ahead one token at a time):</p>
<ul>
<li>If the <em>first token</em> after <code>0o</code> is not an <code>octdigit</code>, that is clearly an invalid token and parsing stops immediately; whereas</li>
<li>If <em>subsequent tokens</em> happen to be invalid, this isn't detected at such an early stage and parsing continues until the whole line gets rejected as invalid syntax.</li>
</ul>
<p>You can see this difference in the highlighting in IDLE (only <code>0o</code> highlighted vs. whole line highlighted), and if you try some alternatives:</p>
<pre><code>&gt;&gt;&gt; 0ok  # first token is invalid
SyntaxError: invalid token
&gt;&gt;&gt; 0o18  # subsequent token is invalid
SyntaxError: invalid syntax
&gt;&gt;&gt; 0o10  # all tokens are valid
8
</code></pre>
</div>
<span class="comment-copy">Because 'o' is not a number. What number do you expect 0o8 to be?</span>
<span class="comment-copy">By the way, in octal the value (decimal) <code>8</code> is <code>0o10</code></span>
<span class="comment-copy">I have tried to tidy up your question; does that still correspond with what you want to know?</span>
<span class="comment-copy">thank you so much. That's all I want to know</span>
<span class="comment-copy">@BankComSci out of interest: was it just the first bit (<code>8</code> isn't a valid octal digit) you wanted, or the second bit (why the messages differ for two invalid literals) as well?</span>
<span class="comment-copy">I have a last question. 02492  &gt;&gt;&gt; invalid token so which is the invalid token? Why not invalid syntax?</span>
<span class="comment-copy">@BankComSci <code>2</code> in Python 3.x, which requires the token after a leading <code>0</code> to be either <code>o</code> or <code>O</code>; <code>0o2492</code> would give <i>"invalid syntax"</i>. <code>9</code> in Python 2.x, because a leading <code>0</code> (with or without <code>o</code>/<code>O</code>) means octal.</span>
