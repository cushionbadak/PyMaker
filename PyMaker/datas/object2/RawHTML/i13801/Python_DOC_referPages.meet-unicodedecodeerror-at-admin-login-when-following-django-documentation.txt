<div class="post-text" itemprop="text">
<p>I have problem with my Django admin site, <code>127.0.0.1:8000/admin/</code>. Before, I have run the server by typing <code>python manage.py runserver</code>. I am now at Django docs tutorial part 2. I follow it and when I open the admin site, I meet this problem : </p>
<pre><code>UnicodeDecodeError at /admin/login/

'utf-8' codec can't decode byte 0xee in position 394374: invalid continuation byte

Request Method:     GET
Request URL:    http://127.0.0.1:8000/admin/login/?next=/admin/
Django Version:     1.8.3
Exception Type:     UnicodeDecodeError
Exception Value:    

'utf-8' codec can't decode byte 0xee in position 394374: invalid continuation byte

Exception Location:     c:\Python34\lib\codecs.py in decode, line 319
Python Executable:  c:\Python34\python.exe
Python Version:     3.4.3
Python Path:    

['C:\\Python34\\Scripts\\mypoll',
 'C:\\WINDOWS\\system32\\python34.zip',
 'c:\\Python34\\DLLs',
 'c:\\Python34\\lib',
 'c:\\Python34',
 'c:\\Python34\\lib\\site-packages']

Server time:    Sat, 1 Aug 2015 22:19:09 +0700 
</code></pre>
<p>The Traceback : </p>
<pre><code>    Traceback:
File "c:\Python34\lib\site-packages\django\core\handlers\base.py" in get_response
  164.                 response = response.render()
File "c:\Python34\lib\site-packages\django\template\response.py" in render
  158.             self.content = self.rendered_content
File "c:\Python34\lib\site-packages\django\template\response.py" in rendered_content
  133.         template = self._resolve_template(self.template_name)
File "c:\Python34\lib\site-packages\django\template\response.py" in _resolve_template
  88.         new_template = self.resolve_template(template)
File "c:\Python34\lib\site-packages\django\template\response.py" in resolve_template
  80.             return loader.get_template(template, using=self.using)
File "c:\Python34\lib\site-packages\django\template\loader.py" in get_template
  35.                 return engine.get_template(template_name, dirs)
File "c:\Python34\lib\site-packages\django\template\backends\django.py" in get_template
  30.         return Template(self.engine.get_template(template_name, dirs))
File "c:\Python34\lib\site-packages\django\template\engine.py" in get_template
  167.         template, origin = self.find_template(template_name, dirs)
File "c:\Python34\lib\site-packages\django\template\engine.py" in find_template
  141.                 source, display_name = loader(name, dirs)
File "c:\Python34\lib\site-packages\django\template\loaders\base.py" in __call__
  13.         return self.load_template(template_name, template_dirs)
File "c:\Python34\lib\site-packages\django\template\loaders\base.py" in load_template
  17.             template_name, template_dirs)
File "c:\Python34\lib\site-packages\django\template\loaders\app_directories.py" in load_template_source
  39.                     return fp.read(), filepath
File "c:\Python34\lib\codecs.py" in decode
  319.         (result, consumed) = self._buffer_decode(data, self.errors, final)

Exception Type: UnicodeDecodeError at /admin/login/
Exception Value: 'utf-8' codec can't decode byte 0xee in position 394374: invalid continuation byte
</code></pre>
<p>At the bottom of the page, it states : 
<code>You're seeing this error because you have DEBUG = True in your Django settings file. Change that to False, and Django will display a standard page generated by the handler for this status code.</code></p>
<p>Then I change <code>DEBUG = True</code> to <code>False</code>. Automatically, the server will stop because at the command prompt stated : <code>CommandError: You must set settings.ALLOWED_HOSTS if DEBUG is False.</code></p>
<p>Then, I can't do anything. What should I do ? Are there any solution ? I have searched google and stackoverflow but I can't find anything similar to my problem. I hope someone can help me with this problem.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Breakdown:</p>
<p>The exception is issued by python itself. It happens when attempting to decode some raw data stream into strings. If you are new to python, you should know that python3 makes a clear distinction between strings aka <code>str</code> (that contain characters) and raw data aka <code>bytes</code> (that just contain bytes, potentially binary data).</p>
<p>The exception raised here means that for some reason, python was ordered to decode some bytes into text using <code>utf-8</code> encoding, yet the data is not valid <code>utf-8</code>-encoded text.</p>
<p><em>Assuming you come from a western country, my bet is the text is using ANSI or ISO-8859-1 and has an <code>“î”</code> in it. That gets encoded as <code>0xee</code> in ANSI, but should be encoded as <code>0xC3 0xAE</code> in UTF-8.</em></p>
<p>There are several reasons this could happen. Here, from the traceback, it happened while rendering a template. More specifically, while rendering a template from an app's directory. So you have in one of your apps a template that's not properly encoded.</p>
<p>How it happened? Well, I see you are running a Windows box. The Windows environment is somewhat of a mess when it comes to text encoding. Every software comes with its own opinion of what to use as default (when it can be changed). For instance, Notepad still encodes in ANSI by default, or ISO-8859-1 in Western Europe.</p>
<p>It is very likely that one of the software you use for editing your templates is encoding your files into whatever. You have two options from here:</p>
<ul>
<li>Check the options of your tools and make sure they are all configured to use UTF-8 encoding.</li>
<li>Or configure Django to use the same encoding as your tools. You would do that by adding a <code>FILE_CHARSET='iso-8859-1'</code> line to your settings, or whatever encoding your tools use.</li>
</ul>
<p>In any case, you <strong>must</strong> be <strong>sure</strong> that <strong>all</strong> of your tools agree on the encoding used, or you will either have other decoding errors, or some characters will get mangled (and show as strange <code>Ã®</code> or <code>?</code> symbols).</p>
<p><em>Not useful for Django tutorial, but worth reading at some point in your python life: <a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow">Unicode handling in Python</a></em></p>
</div>
<span class="comment-copy">First, you shouldn’t change DEBUG to False. If you set it that way you won’t see the detailed error page, but you’ll still have the error happening. DEBUG = False is intended for production environments, where site visitors shouldn’t see detailed exception information but instead something more user-friendly when an error happens.</span>
<span class="comment-copy">Now to debug the error it’s useful to see exception traceback. It should be somewhere on Django’s error page. It shows where exactly the error happened. Please locate the traceback and add to your question.</span>
<span class="comment-copy">@AntonStrogonoff Done ! I have located the traceback.</span>
<span class="comment-copy">I am using windows xp and notepad++ to edit my django files. I will try to do the 2 steps you give and I will let you know the results. @spectras</span>
<span class="comment-copy">In notepad++ you should have an encoding menu you can use to convert your files from an encoding to another. You want “UTF-8 without BOM”.</span>
<span class="comment-copy">Hello, I have successfully solve the problem. I add <code>FILE_CHARSET='iso-8859-1</code> to my settings.py. I have also checked the notepad++ encoding menu, it already set to "UTF-8 without BOM" and also press "Convert to UTF-8 without BOM". I refreshed the admin site. Still not solved. Then I add <code>FILE_CHARSET='iso-8859-1</code>. It solved. It's still weird about the problem. Django docs also doesn't tell to put that file charset. By the way, thank you so much.</span>
<span class="comment-copy">Using non-UTF-8 encoding is likely to bite you later on. (I’d say Django docs don’t mention <code>FILE_CHARSET</code> for a reason.) If you’re doing any serious web development it’s better to find the root cause right away.</span>
<span class="comment-copy">With a tutorial it’s not a big deal, of course. But if it were a real app, it’d be worth to re-create the project from scratch completely after checking that every tool is set to UTF-8 (if all else fails, of course).</span>
