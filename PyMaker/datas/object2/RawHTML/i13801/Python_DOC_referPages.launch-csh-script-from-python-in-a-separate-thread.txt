<div class="post-text" itemprop="text">
<p>I am trying to run a csh script from python in a separate thread i.e. I don't want to wait for the script to complete.</p>
<p>I am trying to do this:</p>
<pre><code>subprocess.call(['my_script.csh -w switch'])
print 'Job spawned..'
</code></pre>
<p>The problem is that the message is being print after the csh script is completed. Is there a way a just spawn the csh job and continue python</p>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for <a href="https://docs.python.org/3/library/subprocess.html#popen-objects" rel="nofollow"><code>subprocess.Popen</code></a>:</p>
<pre><code>from subprocess import Popen
process = Popen(['sleep', '5'])
print 'job spawned'
process.wait()
print 'job complete'
</code></pre>
<p>To clear up your terminology, a "thread" is a line of execution within a single program, whereas a "process" is a running program (which may have multiple threads).  When you start a program, it's almost always a separate process, which means it's running independently and asynchronously (not on the same thread).  The issue here is that <code>subprocess.call</code> is written for the most common use cases, where you probably want to wait for the called process to finish before continuing.  <code>subprocess.Popen</code> is a class that gives you a lot more power.  It doesn't wait for the process to finish unless you tell it to, using the <code>wait()</code> method.</p>
</div>
<span class="comment-copy">Also, you don't want to start threads and then start processes -- that way lies deadlocks.</span>
<span class="comment-copy">Thanks.... Thats a very clear explanation</span>
