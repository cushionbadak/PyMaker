<div class="post-text" itemprop="text">
<p>I'm eventually trying to have multiple threading.timer threads running with differing wait times but I am having trouble getting even one thread based on single variables to run correctly.</p>
<p>I've added lines to try and eliminate processing time drift but I'm still not getting predictable results. When I run this script:</p>
<pre><code>import threading
import datetime
import time

def foo():
    print datetime.datetime.now()

print datetime.datetime.now()

iterations = 10

wait = 1

thread = None

next_call = time.time()

while iterations &gt; 0:
    if thread == None or thread.is_alive() == False:
        next_call = next_call + wait
        thread = threading.Timer(next_call - time.time(), foo)
        thread.start()
        iterations -= 1
</code></pre>
<p>I get this output:</p>
<pre><code>2015-08-04 16:46:17.606658
2015-08-04 16:46:18.656710
2015-08-04 16:46:19.607990
2015-08-04 16:46:20.654599
2015-08-04 16:46:21.626649
2015-08-04 16:46:22.753762
2015-08-04 16:46:23.610284
2015-08-04 16:46:24.729185
2015-08-04 16:46:25.609802
2015-08-04 16:46:26.608769
2015-08-04 16:46:27.610249
</code></pre>
<p>Which has a seemingly random pattern of uncertainty in the amount of time the timer functions wait. Is there some way I can be certain the function will wait for the correct time?</p>
</div>
<div class="post-text" itemprop="text">
<p>You may want to try some other machines/configurations.</p>
<pre><code>C:\bin\Python27\python.exe C:/www/wsgi/mysite/mysite/test.py
2015-08-04 20:24:36.491000
2015-08-04 20:24:37.492000
2015-08-04 20:24:38.491000
2015-08-04 20:24:39.491000
2015-08-04 20:24:40.491000
2015-08-04 20:24:41.491000
2015-08-04 20:24:42.491000
2015-08-04 20:24:43.491000
2015-08-04 20:24:44.491000
2015-08-04 20:24:45.491000
2015-08-04 20:24:46.491000

Process finished with exit code 0
</code></pre>
<p>That's Windows 7, PyCharm 4.5.1, python 2.7.9, all 64-bit</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are looking for exactly a second of difference between each thread, this is what documentation has to say:</p>
<p>Quoting from [Python 3] (<a href="https://docs.python.org/3/library/threading.html#timer-objects" rel="nofollow">https://docs.python.org/3/library/threading.html#timer-objects</a>)</p>
<blockquote>
<p>The interval the timer will wait before executing its action may not
  be exactly the same as the interval specified by the user.</p>
</blockquote>
</div>
<span class="comment-copy">I'm pretty much bound to specifically using this set up, a Raspberry Pi with raspbian (Debian based linux) and the built in compiler with the unix console. It's some version of python 2.7, I can check more specifically tomorrow. Any insight into why this might be occurring?</span>
<span class="comment-copy">@NickRothbacher: I can only speculate your machine/processor is being heavily loaded with some other program or service</span>
<span class="comment-copy">Hmm, well running <code>top</code> indicates that there is no process using more than half a percent of cpu capacity and none using more than 1% of RAM. I'll keep looking but I guess I may have to be satisfied with the inaccuracy.</span>
