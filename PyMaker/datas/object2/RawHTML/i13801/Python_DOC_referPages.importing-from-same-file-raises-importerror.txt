<div class="post-text" itemprop="text">
<p>I'm sorry for asking but I can't find answer.
I have this tree:</p>
<pre><code>Dogs&amp;Sheeps
    simulation.py
    stuff
        main.py
        values.py
</code></pre>
<p>Code in <code>simulation.py</code> begins:</p>
<pre><code>import pygame
import sys

from stuff import main
from stuff import values
</code></pre>
<p>Code in <code>main.py</code> begins:</p>
<pre><code>from random import randint
from time import sleep
import queue
import pygame
import sys

import values
</code></pre>
<p>If I launch simulation.py this error ocures:</p>
<pre><code>    Traceback (most recent call last):
  File "...\simulation.py", line 5, in &lt;module&gt;
    from stuff import main
  File "...\stuff\main.py", line 7, in &lt;module&gt;
    import values
ImportError: No module named 'values'
</code></pre>
<p>I think it's obvious what I want to do but anyway. In the file <code>main.py</code> I want to import the file <code>values.py</code> which is in the same folder.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.x , from <a href="https://docs.python.org/3/tutorial/modules.html#intra-package-references" rel="nofollow">documentation</a> - </p>
<blockquote>
<p>When packages are structured into subpackages (as with the sound package in the example), you can use absolute imports to refer to submodules of siblings packages. For example, if the module <code>sound.filters.vocoder</code> needs to use the echo module in the <code>sound.effects</code> package, it can use <code>from sound.effects import echo</code> .</p>
</blockquote>
<p>In the same way, you need to use absolute package name , instead of relative names , so in your <code>main.py</code> do - </p>
<pre><code>from stuff import values 
</code></pre>
</div>
<span class="comment-copy">You need an <code>__init__.py</code> file in <code>stuff</code> to <a href="http://stackoverflow.com/questions/448271/what-is-init-py-for">mark it as a package</a>.</span>
<span class="comment-copy">I added <code>__init__.py</code> which is a empty file into stuff folder but it raises the same error</span>
<span class="comment-copy">there are also difirent files in <code>Dogs&amp;Sheeps</code> folder and <code>stuff</code> folder does it matter?</span>
<span class="comment-copy">Ok that solution didn't work @Anand S Kumar solved it and it works even without the <code>__init__.py</code> thingie.</span>
<span class="comment-copy">Thanks, it works! But why? Is what you say in non-programing laguage than it importing the main.py so it is imported in simulation.py so it is out of the stuff folder so I have to say that I need search for it in the stuff folder?</span>
