<div class="post-text" itemprop="text">
<p>I am trying to write unit tests for a class in python. The class opens a tcp socket on <strong>init</strong>. I am trying to mock this out so that I can assert that connecting is called with the correct values but obviously doesn't actually happen in unit tests. I have tired MagicMock, patch, etc but I have not found a solution. </p>
<p>My class so far looks like this</p>
<pre><code>import socket

class MyClass(object):

    def __init__(self):
        self.tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.tcp_socket.connect('0.0.0.0', '6767')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you just want to assert that <code>connect</code> is called correctly, it's a simple as</p>
<pre><code>import mock
import socket

class MyClass(object):

    def __init__(self):
        self.tcp_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.tcp_socket.connect('0.0.0.0', '6767')

with mock.patch('socket.socket'):
    c = MyClass()
    c.tcp_socket.connect.assert_called_with('0.0.0.0', '6767')
</code></pre>
<p>If you have to import a module first to access <code>MyClass</code>, you'll need to adjust the patch slightly:</p>
<pre><code>from mymodule import MyClass
import mock

with mock.patch('mymodule.socket.socket'):
    c = MyClass()
    c.tcp_socket.connect.assert_called_with('0.0.0.0', '6767')
</code></pre>
</div>
<span class="comment-copy">why not just actually connect?</span>
<span class="comment-copy">@JoranBeasley because it may lead to stalled builds if the connection takes too long to establish. That is the reason we need mocks.</span>
<span class="comment-copy">In Python 3.3+, you can simply <code>import unittest.mock</code> as <code>mock</code> is now included in the standard library: <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">docs.python.org/3/library/unittest.mock.html</a></span>
