<div class="post-text" itemprop="text">
<p>Given the following count plot how do I place percentages on top of the bars?</p>
<pre><code>import seaborn as sns
sns.set(style="darkgrid")
titanic = sns.load_dataset("titanic")
ax = sns.countplot(x="class", hue="who", data=titanic)
</code></pre>
<p><a href="https://i.stack.imgur.com/b1m5F.png"><img alt="enter image description here" src="https://i.stack.imgur.com/b1m5F.png"/></a></p>
<p>For example for "First" I want total First men/total First, total First women/total First, and total First children/total First on top of their respective bars.</p>
<p>Please let me know if my explanation is not clear.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>sns.barplot</code> doesn't explicitly return the barplot values the way <code>matplotlib.pyplot.bar</code> does (see last para), but if you've plotted nothing else you can risk assuming that all the <code>patches</code> in the axes are your values. Then you can use the sub-totals that the barplot function has calculated for you:</p>
<pre><code>from matplotlib.pyplot import show
import seaborn as sns
sns.set(style="darkgrid")
titanic = sns.load_dataset("titanic")
total = float(len(titanic)) # one person per row 
#ax = sns.barplot(x="class", hue="who", data=titanic)
ax = sns.countplot(x="class", hue="who", data=titanic) # for Seaborn version 0.7 and more
for p in ax.patches:
    height = p.get_height()
    ax.text(p.get_x()+p.get_width()/2.,
            height + 3,
            '{:1.2f}'.format(height/total),
            ha="center") 
show()
</code></pre>
<p>produces</p>
<p><a href="https://i.stack.imgur.com/3x3eN.png" rel="noreferrer"><img alt="Countplot" src="https://i.stack.imgur.com/3x3eN.png"/></a></p>
<p>An alternate approach is to do the sub-summing explicitly, e.g. with the excellent <code>pandas</code>, and plot with <code>matplotlib</code>, and also do the styling yourself. (Though you can get quite a lot of styling from <code>sns</code> context even when using <code>matplotlib</code> plotting functions. Try it out -- ) </p>
</div>
<div class="post-text" itemprop="text">
<p>With the help of <a href="https://stackoverflow.com/users/1168043/cphlewis">cphlewis's</a> solution, I managed to put the correct percentages on top of the chart, so the classes sum up to one.</p>
<pre><code>for index, category in enumerate(categorical):
    plt.subplot(plot_count, 1, index + 1)

    order = sorted(data[category].unique())
    ax = sns.countplot(category, data=data, hue="churn", order=order)
    ax.set_ylabel('')

    bars = ax.patches
    half = int(len(bars)/2)
    left_bars = bars[:half]
    right_bars = bars[half:]

    for left, right in zip(left_bars, right_bars):
        height_l = left.get_height()
        height_r = right.get_height()
        total = height_l + height_r

        ax.text(left.get_x() + left.get_width()/2., height_l + 40, '{0:.0%}'.format(height_l/total), ha="center")
        ax.text(right.get_x() + right.get_width()/2., height_r + 40, '{0:.0%}'.format(height_r/total), ha="center")
</code></pre>
<p><a href="https://i.stack.imgur.com/hLPv9.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/hLPv9.png"/></a></p>
<p>However, the solution assumes there are 2 options (man, woman) as opposed to 3 (man, woman, child).</p>
<p>Since <code>Axes.patches</code> are ordered in a weird way (first all the blue bars, then all the green bars, then all red bars), you would have to split them and zip them back together accordingly.</p>
</div>
<span class="comment-copy">This is close to what I want. I was unclear in my explanation. I want the percentages of 'First' to sum up to 1, 'Second' to sum up to 1, 'Third' to sum to 1.</span>
<span class="comment-copy">That's just a different equation -- you see where <code>height/total</code> is? Go to town with it.</span>
<span class="comment-copy">I like this approach. This answer might help with some more stylized annotation: <a href="http://stackoverflow.com/questions/19917587/matplotlib-advanced-bar-plot/19919397#19919397" title="matplotlib advanced bar plot">stackoverflow.com/questions/19917587/â€¦</a></span>
<span class="comment-copy">Can you explain this code: <code>'{:1.2f}'.format(height/total)</code>? I follow the format fn, but I don't understand what is going on with the <code>{:1.2f}</code> part...</span>
<span class="comment-copy">@fraxture, that's the <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow noreferrer">format specification</a> for <code>format</code>, saying how the number should be represented as a string.</span>
