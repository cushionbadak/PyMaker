<div class="post-text" itemprop="text">
<p>In a script that I'm building, I need to create a function that will be able to manipulate the following output:</p>
<pre><code>+--------------------------------------+-------------+--------+------------+-------------+-------------------+
| ID                                   | Name        | Status | Task State | Power State | Networks          |
+--------------------------------------+-------------+--------+------------+-------------+-------------------+
| bffd525e-2ad1-2345-afe9-61598fe397c5 | server-name | ACTIVE | -          | Running     | 123.123.123.123   |
| e99eab05-7d08-1234-aa4b-3694f41623f7 | server-name | ACTIVE | -          | Running     | 123.123.123.123   |
| fbb98a6d-3cdd-de53-a75b-d979f97fcbf8 | server-name | ACTIVE | -          | Running     | 123.123.123.123   |
| 27154e64-a708-ea22-a6e6-ded3251af9ec | server-name | ACTIVE | -          | Running     | 123.123.123.123   |
| 9301d7d4-7e76-9fee-8e41-787de357a6ff | server-name | ACTIVE | -          | Running     | 123.123.123.123   |
| e0f9eca9-5033-f5a2-9c93-4c26f9e117c8 | server-name | ACTIVE | -          | Running     | 123.123.123.123   |
| 0e433279-d10e-c324-8310-668df4c237b9 | server-name | ACTIVE | -          | Running     | 123.123.123.123   |
| 3eb38d5c-db5c-7814-9b28-54821ae4d590 | server-name | ACTIVE | -          | Running     | 123.123.123.123   |
| 2dceec47-bd36-4f9e-8a29-47fe4c7558f3 | server-name | ACTIVE | -          | Running     | 123.123.123.123   |
+--------------------------------------+-------------+--------+------------+-------------+-------------------+
</code></pre>
<p>Out of the above output, I need to take only the fields that exist under the 'ID' field and execute a certain command on each (need to bear in mind that in certain cases there could be only 2 IDs in the list, while in other cases I may get more than 14 IDs).</p>
<p>In bash what I did was to direct the output to a temp file, then use a 'for' loop and perform the desired operations:</p>
<pre><code>for i in `cat filename | awk '{ print $2 }'`; do
    my commands here..
done
</code></pre>
<p>Now, I figured I could probably do the same thing in Python using the same commands more or less (by importing the os module and running the commands as plain shell), however I really want to learn how to do it the Python way, which is probably more efficient and could help me in future cases as well..</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you're trying to parse the output of <code>nova list</code>.  While that may be an acceptable short-term solution, if you're starting to work with Python a better choice may be to use the existing <a href="https://github.com/openstack/python-novaclient" rel="nofollow">novaclient</a> Python library (which, if you're able to run the <code>nova</code> cli, is already installed on your system).</p>
<pre><code>&gt;&gt;&gt; import novaclient.client
&gt;&gt;&gt; client = novaclient.client.Client(2, 'username', 'password',
... 'myproject', auth_url='http://controller:5000/v2.0')
&gt;&gt;&gt; [server.id for server in client.servers.list()]
[u'40b74857-830f-4c50-b34e-d7a4a0b50e64']
</code></pre>
<p>Using the Python API means you no longer need to parse the output of commands that are designed primarily to be human readable, rather than useful as input to scripts.</p>
<p>Everything you can do with the <code>nova</code> command line client you can accomplish with the <code>novaclient</code> API (in fact, this is exactly what the <code>nova</code> cli uses to communicate with your OpenStack environment).</p>
<p>If you are just starting out with Python this may not be the best place to start, but it's something to keep in mind if you grow more familiar with the language.</p>
</div>
<span class="comment-copy">if you don't even know python, why would you choose it in any way... if you want to learn it, you should follow a tuto to reach entry level instead of asking question here.</span>
<span class="comment-copy">The closest thing in Python to awk's line splitting is to use the <code>.split()</code> method of Python strings to split each line into a list of strings. By default <code>.split()</code> splits on whitespace, so the list elements will be the same as the fields that awk gives you. To use this, you'll need to learn how to open a file in Python &amp; how to iterate over its lines. You can learn that (and more :) ) from the <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">official Python tutorial</a>.</span>
<span class="comment-copy">The answer is simply and very similar to your Bash solution, but you'd be better off starting with some tutorials first.</span>
<span class="comment-copy">Thanks a lot! That's very useful for my specific case. However, I would still like to get a general answer to my question, since it would be useful for me in user scenarios as well.</span>
