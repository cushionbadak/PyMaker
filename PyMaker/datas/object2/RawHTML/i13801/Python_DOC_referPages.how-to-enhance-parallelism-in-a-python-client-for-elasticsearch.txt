<div class="post-text" itemprop="text">
<p>I am new to elasticsearch and I need to optimize a python client to do the search/indexing on a elasticsearch cluster. It seems to me that the bottleneck is the client itself, and that elasticsearch can handle more queries. 
I would like to know how I can make my program more optimal to enhance performance. Should I use multi-processing or multi-threading or there is a more elegant way to do the work. Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>If your ES server can easily handle multiple request you can use a <a href="https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ThreadPoolExecutor" rel="nofollow">ThreadPoolExecutor</a> in order to run multiple queries concurrently.</p>
<p>As the operation is mainly IO driven, using threads should be enough.</p>
</div>
<span class="comment-copy">Apache Spark has a Python interface to ES.  There is a tutorial on it at <a href="http://blog.qbox.io/building-an-elasticsearch-index-with-python" rel="nofollow noreferrer">blog.qbox.io/building-an-elasticsearch-index-with-python</a> and <a href="http://blog.qbox.io/elasticsearch-in-apache-spark-python" rel="nofollow noreferrer">blog.qbox.io/elasticsearch-in-apache-spark-python</a>.</span>
