<div class="post-text" itemprop="text">
<p>I know that in Python the <code>file.close()</code> method doesn't have any return value, but I can't find any information on whether in some cases it throws an exception.  If it doesn't do that either, then I guess the second part of this question is superfluous.</p>
<p>If it does, then what would be the "correct" way to handle the <code>file.close()</code> method throwing an exception inside a "with" statement used to open the file?</p>
<p>Is there a situation where <code>file.close()</code> could fail immediately after a file has been open and read from successfully?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, <code>file.close()</code> can throw an <code>IOError</code> exception. This can happen when the file system uses quotas, for example. See the <a href="http://linux.die.net/man/2/close" rel="noreferrer">C <code>close()</code> function man page</a>:</p>
<blockquote>
<p>Not checking the return value of <code>close()</code> is a common but nevertheless serious programming error. It is quite possible that errors on a previous <code>write(2)</code> operation are first reported at the final <code>close()</code>. Not checking the return value when closing the file may lead to silent loss of data. This can especially be observed with NFS and with disk quota.</p>
</blockquote>
<p>A non-zero return value of the C <code>close()</code> function leads to Python raising an <code>IOError</code> exception.</p>
<p>If you wanted to handle this exception, put a <code>try...except</code> block <em>around</em> the <code>with</code> statement:</p>
<pre><code>try:
    with open(filename, mode) as fileobj:
        # do something with the open file object
except IOError as exc:
    # handle the exception
</code></pre>
<p>Of course, the <code>IOError</code> could also have been thrown during <em>opening</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>close</code> can throw exceptions, for example, if you run out of disk space while it's trying to flush your last writes, or if you pulled out the USB stick the file was on.</p>
<p>As for the correct way to deal with this, that depends on the details of your application. Maybe you want to show the user an error message. Maybe you want to shut down your program. Maybe you want to retry whatever you were doing, but with a different file. Whatever the response you choose, it'll probably be implemented with a <code>try</code>-<code>except</code> block in whatever layer of your program is best equipped to deal with it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use </p>
<pre><code>file object = open(file_name [, access_mode][, buffering])
</code></pre>
<p>Then you check</p>
<pre><code>file.closed
</code></pre>
<p>It's return True if file is closed and false otherwise.</p>
</div>
<span class="comment-copy">If you're using Python 2.5 or higher, a <code>with</code> block will automatically close the file for you.  There's no need to explicitly state <code>close()</code> in that case.</span>
<span class="comment-copy">@Daniel, OP uses python 3.x tag. @Bitrex you can print the error if it does happen by wrapping your <code>with</code> statement with a <code>try: except Exception,e: print (e)</code></span>
<span class="comment-copy">with statements can throw exceptions with no way to handle them except by wrapping in try/except. with/except was proposed but shot down. with statements are syntactic sugar for simple use cases where no exception is expected. See <a href="http://stackoverflow.com/questions/8774830/how-with-is-better-than-try-catch-to-open-a-file-in-python" title="how with is better than try catch to open a file in python">stackoverflow.com/questions/8774830/â€¦</a> for extended discussion.</span>
<span class="comment-copy"><code>Of course, the IOError could also have been thrown during opening.</code> In which case you use an <a href="https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack" rel="nofollow noreferrer"><code>ExitStack</code></a> to make sure it was <a href="https://docs.python.org/3/library/contextlib.html#catching-exceptions-from-enter-methods" rel="nofollow noreferrer">raised when exiting</a>.</span>
<span class="comment-copy">@Navith or open the file object first and <i>then</i> use it as a context manager.</span>
<span class="comment-copy">This doesn't even begin to answer the question <i>does <code>file.close()</code> throw any exceptions?</i> The OP is <b>not</b> asking how to check if a file object is open or closed.</span>
<span class="comment-copy">Oh , Sorry - I didn't read the Q. well.</span>
<span class="comment-copy">It's all good; welcome to SO.  As you answer questions on the site, just remember to read them carefully before submitting an answer.  Alternatively, you can leave a comment on the question, when you earn enough reputation.</span>
