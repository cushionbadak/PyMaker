<div class="post-text" itemprop="text">
<p>Is the <a href="https://hg.python.org/cpython/file/3.4/Modules/itertoolsmodule.c" rel="nofollow">itertools C module</a> included somehow in the main Python binary in 3.x? </p>
<p>Assuming that the C module is built and included, which it appears to be:</p>
<pre><code>&gt;&gt;&gt; import inspect
&gt;&gt;&gt; import itertools
&gt;&gt;&gt;
&gt;&gt;&gt; inspect.getsourcefile(itertools)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/Cellar/python3/3.4.3_2/Frameworks/Python.framework/Versions/3.4/lib/python3.4/inspect.py", line 571, in getsourcefile
    filename = getfile(object)
  File "/usr/local/Cellar/python3/3.4.3_2/Frameworks/Python.framework/Versions/3.4/lib/python3.4/inspect.py", line 518, in getfile
    raise TypeError('{!r} is a built-in module'.format(object))
TypeError: &lt;module 'itertools' (built-in)&gt; is a built-in module
</code></pre>
<p>I can't find an <code>itertools.so</code> for Python 3.x on my system, but there's one for 2.7. </p>
<p>I noted that some other C modules exist as shared objects (<code>locate '.so' | grep -E '^/usr/local/' | grep '.so'</code> e.g. <code>mmap.so</code>) on disk,  so what's the deal with <code>itertools</code>?  How can I use it if there's not a shared library?</p>
</div>
<div class="post-text" itemprop="text">
<p>There are hints in the makefile that's near the Python wrapper of <code>inspect.py</code>:</p>
<p><code>/usr/local/Cellar/python3/3.4.3_2/Frameworks/Python.framework/Versions/3.4/lib/python3.4/config-3.4m/Makefile</code></p>
<p>We can see the build rules for the itertools.c source:</p>
<pre><code>1668 Modules/itertoolsmodule.o: $(srcdir)/Modules/itertoolsmodule.c; $(CC) $(PY_CORE_CFLAGS)  -c $(srcdir)/Modules/itertoolsmodule.c -o      Modules/itertoolsmodule.o
</code></pre>
<p>And then trace it a little to see that it's being bundled in:</p>
<pre><code> 24 MODOBJS= ..  Modules/itertoolsmodule.o  ... Modules/xxsubtype.o

 462 # objects that get linked into the Python library
 463 LIBRARY_OBJS_OMIT_FROZEN=   \
...
 470         $(MODOBJS)
 471
 472 LIBRARY_OBJS=   \
 473         $(LIBRARY_OBJS_OMIT_FROZEN) \
 474         Python/frozen.o
 ...
 553 # Build the interpreter
 554 $(BUILDPYTHON): Modules/python.o $(LIBRARY) $(LDLIBRARY) $(PY3LIBRARY)
 555     $(LINKCC) $(PY_LDFLAGS) $(LINKFORSHARED) -o $@ Modules/python.o $(BLDLIBRARY) $(LIBS) $(MODLIBS) $(SYSLIBS) $(LDLAST)
 556
 557 platform: $(BUILDPYTHON) pybuilddir.txt
 558     $(RUNSHARED) $(PYTHON_FOR_BUILD) -c 'import sys ; from sysconfig import get_platform ; print(get_platform()+"-"+sys.version[0:     3])' &gt;platform
 589 # Build static library
 ...
 598     $(AR) $(ARFLAGS) $@ $(MODOBJS)
 599     $(RANLIB) $@

 944 $(LIBRARY_OBJS) $(MODOBJS) Modules/python.o: $(PYTHON_HEADERS)
</code></pre>
<p>Or if made via <code>distutils</code>, the path will be something like: <code>/usr/local/Cellar/python3/3.4.3_2/Frameworks/Python.framework/Versions/3.4/lib/python3.4/_sysconfigdata.py</code></p>
<p>And assuming that this gets built into a dynamic library:</p>
<pre><code>Ξ ~ → strings /usr/local/Cellar/python3/3.4.3_2/Frameworks/Python.framework/Versions/3.4/lib/libpython3.4.dylib | grep itertools
itertools
itertools._tee_dataobject
itertools._tee
itertools._grouper
itertools.groupby
itertools.repeat
itertools.product
...
</code></pre>
<p>Which means that at build time, the itertools.c module gets included in the <code>libpython</code> dynamic library, meaning that it's now part of the standard library.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, the <code>itertools</code> extension is compiled into the main Python binary:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; 'itertools' in sys.builtin_module_names
True
</code></pre>
<p>See the <a href="https://docs.python.org/3/library/sys.html#sys.builtin_module_names" rel="noreferrer"><code>sys.builtin_module_names</code> documentation</a>:</p>
<blockquote>
<p>A tuple of strings giving the names of all modules that are compiled into this Python interpreter.</p>
</blockquote>
<p>The module was added to the Python binary because it is used <em>very</em> widely in the Python standard library.</p>
<p>The list of modules to include is taken from the <a href="https://hg.python.org/cpython/file/3.4/Modules/Setup.dist" rel="noreferrer"><code>Modules/Setup.dist</code> file</a> in the Python distribution; <code>itertools</code> was added together with <code>_collections</code>, as it is a transient dependency of that module. See <a href="http://bugs.python.org/issue9545" rel="noreferrer">issue #9545</a>.</p>
</div>
