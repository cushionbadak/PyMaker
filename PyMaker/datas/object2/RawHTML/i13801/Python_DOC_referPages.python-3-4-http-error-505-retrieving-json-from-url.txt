<div class="post-text" itemprop="text">
<p>I am trying to connect to a page that takes in some values and return some data in JSON format in Python 3.4 using urllib. I want to save the values returned from the json into a csv file.</p>
<p>This is what I tried...</p>
<pre><code>import json
import urllib.request

url = 'my_link/select?wt=json&amp;indent=true&amp;f=value'
response = urllib.request.Request(url)    
response = urllib.request.urlopen(response)
data = response.read()
</code></pre>
<p>I am getting an error below:</p>
<pre><code>urllib.error.HTTPError: HTTP Error 505: HTTP Version Not Supported
</code></pre>
<p>EDIT: Found a solution to my problem. I answered it below.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have found a server that apparently doesn't want to talk HTTP/1.1. You could try lying to it by claiming you are using a HTTP/1.0 client instead, by patching the <code>http.client.HTTPConnection</code> class:</p>
<pre><code>import http.client
http.client.HTTPConnection._http_vsn = 10
http.client.HTTPConnection._http_vsn_str = 'HTTP/1.0'
</code></pre>
<p>and re-trying your request.</p>
</div>
<div class="post-text" itemprop="text">
<p>I used FancyURLopener and it worked. Found this useful: <a href="https://docs.python.org/3/library/urllib.request.html" rel="nofollow">docs.python.org: urllib.request </a></p>
<pre><code>url_request = urllib.request.FancyURLopener({})
with url_request.open(url) as url_opener:
        json_data = url_opener.read().decode('utf-8')
        with open(file_output, 'w', encoding ='utf-8') as output:
            output.write(json_data)
</code></pre>
<p>Hope this helps those having the same problems as mine.</p>
</div>
<span class="comment-copy">I forgot to mention that I am running this script behind a vpn. Is that why I am getting this error?</span>
<span class="comment-copy">@Cryssie if your VPN includes a transparent proxy, perhaps. Hard to say.</span>
<span class="comment-copy">Thanks for the help. Your input helped me look at other ways to communicate with the server and I found fancyURLopener which worked in this case.</span>
