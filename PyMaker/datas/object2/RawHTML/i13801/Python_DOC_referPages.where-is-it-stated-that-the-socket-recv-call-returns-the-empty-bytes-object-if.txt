<div class="post-text" itemprop="text">
<p>I've been skimming <a href="https://docs.python.org/3/library/socket.html" rel="nofollow">the Python documentation</a>, but can't seem to find specific details like the above. Where are such details listed?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you want the documentation, the below is the closest thing to documentation I could get.</p>
<p>From <a href="https://docs.python.org/3/library/socket.html" rel="nofollow">Python documentation -</a> -</p>
<blockquote>
<p>The Python interface is a straightforward transliteration of the Unix
  system call and library interface for sockets</p>
</blockquote>
<p>And from <a href="http://man7.org/linux/man-pages/man2/recv.2.html" rel="nofollow">Unix documentation for recv</a> , under the section <em>Return value</em> - </p>
<blockquote>
<p>When a stream socket peer has performed an orderly shutdown, the
  return value will be 0 (the traditional "end-of-file" return).</p>
</blockquote>
<p>And when you convert the 0 to a bytes object, you get an empty bytes object. Example -</p>
<pre><code>&gt;&gt;&gt; bytes(0)
b''
</code></pre>
</div>
<span class="comment-copy"><i>"The return value is a bytes object representing the data received"</i> - if no data is received, what other than an empty bytes object would you expect?</span>
<span class="comment-copy">But the socket is blocking forever on <code>recv()</code>, but if the other end is closed it doesn't ?</span>
<span class="comment-copy">Well, that's how it works in other languages and in Linux/Windows API.  If the the peer closes a TCP connection, recv() returns 'immediately' with 0.</span>
<span class="comment-copy">Thank you very much. However, I was hoping for a more rigoeously and well documented Python documentation.</span>
