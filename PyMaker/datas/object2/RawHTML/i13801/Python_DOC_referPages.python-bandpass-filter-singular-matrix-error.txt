<div class="post-text" itemprop="text">
<p>I've been trying to design a bandpass filter using scipy but I keep getting a LinAlg Singular Matrix error. I read that a singular matrix is one that is not invertable, but I'm not sure how that error is coming up and what I can do to fix it</p>
<p>The code takes in an EEG signal (which, in the code below, I have just replaced with an int array for testing) and filters out frequencies &lt; 8Hz and &gt; 12Hz (alpha band)</p>
<p>Can anyone shed some light on where the singular matrix error is coming from? Or alternatively, if you know of a better way to filter a signal like this I'd love to test out other options too</p>
<pre><code>from scipy import signal
from scipy.signal import filter_design as fd
import matplotlib.pylab as plt

#bandpass
Wp = [8, 12]   # Cutoff frequency
Ws = [7.5, 12.5]   # Stop frequency
Rp = 1             # passband maximum loss (gpass)
As = 100              # stoppand min attenuation (gstop)

b,a = fd.iirdesign(Wp,Ws,Rp,As,ftype='butter')
w,H = signal.freqz(b,a)  # filter response
plt.plot(w,H)

t = np.linspace(1,256,256)
x = np.arange(256)
plt.plot(t,x)

y = signal.filtfilt(b,a,x)
plt.plot(t,y)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As indicated in <a href="http://docs.scipy.org/doc/scipy-0.15.1/reference/generated/scipy.signal.iirdesign.html" rel="nofollow"><code>iirdesign</code> documentation</a>, <code>Wp</code> and <code>Ws</code> are "are normalized from 0 to 1, where 1 is the Nyquist frequency".</p>
<p>If your sampling rate is <code>Fs</code> (for example 100Hz) you can normalize the cutoff and stop frequencies using:</p>
<pre><code>Wp = [x / (Fs/2.0) for x in Wp]
Ws = [x / (Fs/2.0) for x in Ws]
</code></pre>
</div>
<span class="comment-copy">The traceback should show you which line is causing the problem. You could put a try/except block around it and print/log object information. You could also get familiar with <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer">pdb</a> and try using it to indirect the object(s) causing the problem.</span>
<span class="comment-copy">ah, thanks! I did run into a second problem where it said my input vector x must be at least the size of padlen, Given I only have 256 points per sequence, I set padlen=0...are there any issues with this? Why is padding required?</span>
