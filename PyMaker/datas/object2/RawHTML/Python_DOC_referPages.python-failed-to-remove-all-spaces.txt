<div class="post-text" itemprop="text">
<p><a href="https://i.stack.imgur.com/SLpum.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/SLpum.png"/></a></p>
<p>Hello, I tried to </p>
<p><strong>Desired result:</strong>
1. Import data from EXCEL
2. Remove all spaces (include <strong>spaces between and new line</strong>s)
3. Group by column 'BOM', and run the distinct count of 'NAME'</p>
<p><strong>Problem</strong>:</p>
<ol>
<li><p>I have tried 2 ways (remove\ join split) found on previous posts on stackoverflow, but failed as seen in below image.</p></li>
<li><p>In the result part, please see the column 'BOM', why above there is no spaces, but with spaces in the 2nd result?</p></li>
</ol>
<p>Many thanks for any advice.</p>
<pre><code>enter code here

import numpy as np
import pandas as pd
import datetime as datetime
import os
import xlrd

os.chdir('C:/Users/mac/Desktop')
t=pd.read_excel('testdata.xlsx')

# 1st method to remove spaces
#while ' ' in t:
#    t.remove(' ')

#2nd method to remove spaces
def remove(t):
    return "".join(t.split())

print (t,'\n------')

t1=t.fillna(method='ffill')
t1.groupby(['BOM']).NAME.nunique()     
# Group by column "BOM", and then distinct count based on Name
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simply do:</p>
<pre><code>df.NAME = df.NAME.str.replace(' ', '')
df.BOM = df.BOM.str.replace(' ', '') 
</code></pre>
</div>
<span class="comment-copy">A <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> must be provided as text in the body of the question, not an embedded image (let alone a barely readable one like you've provided). Please edit the question to include the full <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> properly. None of the code in the image even attempts to remove the spaces (<code>remove</code> is never called), so even the image fails to be reproducible.</span>
<span class="comment-copy">Post relevant code directly with the question, it is of limited use in a screenshot.</span>
<span class="comment-copy">What about  <code>for col in ["BOM","NAME"]: t[col] = t[col].str.strip()</code>? PS: post code first...</span>
<span class="comment-copy">@ Alexander B.,many thanks, it works~~</span>
<span class="comment-copy">Thanks for your reply. The thing is actually the data has dozens of columns, the example posted here has been simplified. So if there is a way that I could apply to 100+columns without typing hundred of code lines above?</span>
<span class="comment-copy">I tried your recommended solution, the result is still with spaces~~~</span>
<span class="comment-copy">If you want to apply the space stripping to all columns except for a few, you could e.g. do a for loop on 'set(df.columns) - set(list-of-columns-to-exclude-from-stripping)', and apply the stripping as 'df[col] = df[col].str.replace(" ", "")'. In general though, for loops should be avoided when working with pandas in favor of more efficient pandas methods, if possible.</span>
<span class="comment-copy">while ' ' in t:   t.remove(' ') ,  I tried this loop,yet failed to get the result. Besides, I feel it is wiered why I simply run the "t.BOM=t.BOM.str.replace(' ' ,'')", no space is removed.....</span>
<span class="comment-copy">Start by just printing t.BOM and then t.BOM.str.replace(' ', ''), do you not see a difference?</span>
