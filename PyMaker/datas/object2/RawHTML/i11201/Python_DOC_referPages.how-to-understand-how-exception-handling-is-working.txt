<div class="post-text" itemprop="text">
<p>I have been fiddling around with raising exceptions for Google Big Query. I finally figured out how to make it work in the way it should work, but I don't really understand why it works. I am looking to gain a better understanding what is going on in my code. I have already scoured Stack Overflow and nothing seems to help.</p>
<p><strong><em>Here is my view:</em></strong></p>
<pre><code>@api_view(['POST'])
def delete_table(request):  # Deletes table from Big Query
    project_id = request.POST.getlist('data[]')[0]
    dataset_id = request.POST.getlist('data[]')[1]
    table_id = request.POST.getlist('data[]')[2]

    bq = BigQuery(project_id)  # Instantiates BQ instance specific to project id
    try:
        bq.deleteTable(dataset_id, table_id)  # Calls deleteTable method from BQ instance

    except Exception, res:
        logger.debug(res)

    return Response('')
</code></pre>
<p><strong><em>Here is my delete method in my Big Query controller:</em></strong></p>
<pre><code>    def deleteTable(self, datasetId, tableId):  

    try: 
        response, content = \
            self.http_auth.request("https://www.googleapis.com/bigquery/v2/projects/%s/datasets/%s/tables/%s" % (self.PROJECT_ID, datasetId, tableId), "delete")

        content = json.loads(content)
        message = content['error']['message']
        raise Exception, message
    except:
        if response.status &lt; 300:
            message = tableId + " Was Deleted."
            raise Exception, message
        else:
            raise Exception, message
</code></pre>
<p>I understand that the <code>view</code> is catching a raised error from the <code>bqcontroller</code>, I don't understand how the errors are being raised in the <code>bqcontroller</code>. Could someone please shed some light?</p>
</div>
<div class="post-text" itemprop="text">
<p>As the code is, there is no real reason for the <code>try</code> because at the end of the <code>try</code> block you <strong><em>always</em></strong> raise an exception, so you always go to the <code>except</code> block.  So each time the code runs, it goes through the <code>try</code>, then hits the exception so goes to the <code>except</code> block where it raises an exception no matter which branch of the if/else statement you go to.  </p>
<p>This code here does the same thing, it's just a little cleaner (less duplication) so you can see where the exceptions are being raised</p>
<pre><code>def deleteTable(self, datasetId, tableId):
    GOOG_API_ENDPOINT = 'https://www.googleapis.com/bigquery/v2/projects/{}/datasets/{}/tables/{}'
    url = GOOG_API_ENDPOINT.format(self.PROJECT_ID, datasetId, tableId)

    response, json_content = self.http_auth.request(url, "delete")
    content = json.loads(json_content) # don't reassign same variable name

    if response.status &lt; 300:
        message = tableId + " Was Deleted."
        raise Exception, message  # exception raised here or in else below
    else:
        message = content.get('error', {}).get('message')
        raise Exception, message
</code></pre>
<p>Although I wouldn't raise a generic <code>Exception</code>, I'd use one of the <a href="https://docs.python.org/3/library/exceptions.html" rel="nofollow">built-ins</a> or <a href="https://docs.python.org/3/tutorial/errors.html#user-defined-exceptions" rel="nofollow">define your own</a></p>
</div>
<span class="comment-copy">Why are you throwing an exception only to immediately catch it?</span>
<span class="comment-copy">Your <code>try</code> block contains a <code>raise</code> statement, therefore it <b>always</b> raises an exception.  Surely you only want to raise an exception in the <code>except</code> block?  Also in the except block, since you're providing your own message, you are losing any specific message that may have been returned from the API call.</span>
<span class="comment-copy">You seem to be using exceptions in place of a <code>return</code> statement. You are also catching <i>almost all exceptions</i>. Is there not a more specific exception (or set of exceptions) to catch here?</span>
