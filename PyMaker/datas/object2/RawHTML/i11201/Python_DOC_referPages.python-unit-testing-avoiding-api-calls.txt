<div class="post-text" itemprop="text">
<p>I've written some code that makes calls to the SalesforceIQ API.  I'm now trying to unit test my code (writing a unit test for each of my functions).  I'm a little unsure how to go about this since I need to do <em>something</em> to avoid making API calls.</p>
<p>Here's an example function I'm trying to test:</p>
<pre><code>def update_contact(name, phone, address, contact_id):
    contact = Contact(contact_id)
    set_contact_fields(contact, name, phone, address)
    return contact.update()
</code></pre>
<p><code>contact.update()</code> is an API call.  So I'd like to avoid calling <code>contact.update()</code> while still testing <code>update_contact</code> is updating those three fields (name, phone, address).</p>
<p>Any recs for how to go about this?</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>patch</code> (<code>mock.patch</code> in python2, <code>unittest.mock.patch</code> in python3) to patch that method:</p>
<pre><code>@patch.object(Contact, 'update')
def test_api_call(self, update):
    # "update" is the patched method, instace of `MagicMock`
    update_contact('name', 'phone', 'address', 'contact_id')
    update.assert_called_once_with()
</code></pre>
<p><a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch" rel="nofollow">Python documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Is there a <code>__repr__()</code> or <code>__str__()</code> method for the <code>Contact</code> object? If not, why not write one? Then you can just print the <code>contact</code> and see what it is. Or do something else with the string it returns if you want to further automate your testing.</p>
</div>
<span class="comment-copy">I'm reading the docs but could you elaborate a bit?  Thanks!</span>
<span class="comment-copy">It temporarily (for duration of test) replaces the method with a <code>MagicMock</code> instance. <code>MagicMock</code> is an object that you can manipulate freely (eg. set return value, make it raise exceptions, set properties, etc) and assert calls to it. This object is passed in as the first argument to your test function to allow you to verify how the code being tested used it.</span>
<span class="comment-copy">Thanks for the help.  I don't totally follow your example.  You're calling 'update_contact' and then asserting that update was called once.  But I don't have an update method, I just have an update_contact method...</span>
<span class="comment-copy">See how I decorated with <code>patch.object</code>? It patches the method <code>update</code> on the <code>Contact</code> object. That's what you are getting as an argument. It's similar to: <code>tmp = Contact.update; Contact.update = MagicMock(); TestCase.test_api_call(Contact.update); Contact.update = tmp</code> (best I could do in a comment).</span>
