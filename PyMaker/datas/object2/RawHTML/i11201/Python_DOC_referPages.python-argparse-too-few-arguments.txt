<div class="post-text" itemprop="text">
<p>I'm trying to use the argparse library in Python.  I want to have the user do something like:</p>
<pre><code>python my_script.py csv_name.csv [--dryrun]
</code></pre>
<p>where <code>--dryrun</code> is an optional parameter.</p>
<p>I then have the user enter an API key and secret key.  When I run my code, I get past entering the API and secret keys and then I get:</p>
<pre><code>usage: my_script.py [-h] csv dryrun
salesforceImporter.py: error: too few arguments
</code></pre>
<p>Here's my code:</p>
<pre><code>def main():
    api_key = getpass.getpass(prompt='Enter API Key: ')
    secret_key = getpass.getpass(prompt='Enter Secret Key: ')

    parser = argparse.ArgumentParser()
    parser.add_argument("csv")
    parser.add_argument("dryrun")
    args = parser.parse_args()

    validate_csv_name(args.csv)

    is_dry_run = args.dryrun == '--dryrun'
</code></pre>
<p>Any idea where I'm going wrong?</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>To add an optional <code>--dry-run</code> argument, you may use the following snippet:</p>
<pre><code>parser.add_argument('--dry-run', action='store_true')
</code></pre>
<p>Calling your script using <code>python my_script.py csv_name.csv --dry-run</code> will result to <code>args.dry_run</code> being <code>True</code>. Not putting the option will result to it being <code>False</code></p>
</div>
<div class="post-text" itemprop="text">
<p>When you use the following syntax:</p>
<pre><code>parser.add_argument("csv")
parser.add_argument("dryrun")
</code></pre>
<p>You're adding these as positional -- <em>required</em> -- arguments. Only arguments with a leading dash or two are optional.</p>
<p>See <a href="https://docs.python.org/3/library/argparse.html#name-or-flags" rel="nofollow">the docs here</a>:</p>
<blockquote>
<p>The add_argument() method must know whether an optional argument, like -f or --foo, or a positional argument, like a list of filenames, is expected. The first arguments passed to add_argument() must therefore be either a series of flags, or a simple argument name. For example, an optional argument could be created like:</p>
</blockquote>
<pre><code>&gt;&gt;&gt; parser.add_argument('-f', '--foo')
</code></pre>
</div>
<span class="comment-copy">So now I'm doing something like: parser.add_argument("--dryrun").  Unfortunately, now I get:                  usage: my_script.py [-h] [--dryrun DRYRUN] csv my_script.py: error: argument --dryrun: expected one argument</span>
