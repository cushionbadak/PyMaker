<div class="post-text" itemprop="text">
<p>I have list of 100000 items that needs to be posted to a URL end point.
If I were to process this sequentially, performance wise, this would be a long wait. Would this be solved via parallel process or concurrent future? Obviously each element in the list can only be posted once. Do I need to track the threads?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem looks IO bound, not CPU bound, so you may get nice performances by using <a href="http://aiohttp.readthedocs.io/en/stable/" rel="nofollow">aiohttp</a>, and use <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.wait" rel="nofollow">asyncio.wait</a> to wait them all to complete.</p>
</div>
<span class="comment-copy">What have you tried so far? You probably want a pool of threads (take a look at <code>multiprocessing.pool.ThreadPool</code>.</span>
<span class="comment-copy">Did you look into Celery? Which uses a task queue to manage python tasks in parallel. I know, you can do this with vanilla Python threads. But Celery helps you with management (at the cost of a small overhead).</span>
