<div class="post-text" itemprop="text">
<p>Here is my question.  </p>
<ul>
<li><p><strong>a</strong> is a 2-d numpy array in the shape of 100x100 containing finite numbers</p></li>
<li><p><strong>b</strong> is a 2-d bool array in the shape of 100x100 containing <strong>True and False</strong> </p></li>
</ul>
<p>My target:   </p>
<blockquote>
<p>Select specific part of array a when the value of b[i,j] == True  </p>
</blockquote>
<p>My code here:</p>
<pre><code> select = a[np.array(np.where(b == True)).T]  
</code></pre>
<p>But the result shows like some index are out of boundaries.  </p>
<p>Does someone has any idea to achieve that?</p>
</div>
<div class="post-text" itemprop="text">
<p>That's because you are transposing the index array. Also you don't need to convert the result of <code>np.where()</code> to numpy array, just pass it as index to first array. </p>
<p>Here is an example:</p>
<pre><code>&gt;&gt;&gt; b = np.random.choice([0, 1], size=(10,10))
&gt;&gt;&gt; b
array([[0, 0, 0, 1, 0, 1, 1, 0, 0, 0],
       [0, 1, 1, 0, 0, 0, 0, 1, 1, 1],
       [1, 1, 1, 1, 1, 0, 0, 0, 1, 0],
       [1, 1, 0, 1, 0, 0, 1, 0, 0, 1],
       [0, 1, 0, 0, 1, 1, 1, 1, 1, 1],
       [1, 1, 1, 1, 1, 1, 0, 1, 0, 0],
       [0, 1, 1, 1, 0, 0, 0, 0, 0, 0],
       [0, 1, 0, 0, 1, 1, 1, 0, 0, 1],
       [1, 0, 1, 0, 0, 1, 0, 1, 0, 0],
       [1, 0, 0, 1, 0, 1, 1, 0, 0, 1]])
&gt;&gt;&gt; a = np.random.choice(100, size=(10,10))
&gt;&gt;&gt; 
&gt;&gt;&gt; a
array([[47, 90, 94, 11, 17, 65, 95, 57, 36, 43],
       [65, 82, 37, 93, 65, 32,  8, 47, 16, 12],
       [66, 60, 40, 90, 34, 30, 40,  2, 36, 65],
       [ 8, 53, 69,  0, 61, 60, 94, 37, 77, 43],
       [59, 47, 21, 93, 58,  0, 92, 26, 17, 44],
       [98, 16, 33, 56, 39, 30, 14, 93, 93, 58],
       [96, 40, 35, 17, 21, 70, 26,  0, 21, 81],
       [47,  4, 20, 82, 19, 89, 50, 26, 38,  4],
       [60,  3, 72, 56, 78, 55, 60, 53,  3, 87],
       [80,  1, 65,  2, 92, 92, 97, 17, 55, 67]])

&gt;&gt;&gt; a[np.where(b)]
array([11, 65, 95, 82, 37, 47, 16, 12, 66, 60, 40, 90, 34, 36,  8, 53,  0,
       94, 43, 47, 58,  0, 92, 26, 17, 44, 98, 16, 33, 56, 39, 30, 93, 40,
       35, 17,  4, 19, 89, 50,  4, 60, 72, 55, 53, 80,  2, 92, 97, 67])
</code></pre>
<p>Note that you are not have to use <code>b==True</code> as <code>np.where</code> condition, when you pass the boolean array it will choose the valid items which are determined by python's <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow">Truth Value Testing</a>.</p>
</div>
<span class="comment-copy">won't <code>a[b]</code> just work here?</span>
<span class="comment-copy">What shape do you want the output to be?  <code>a[b]</code> is the same as <code>a.flatten()[b.flatten()]</code>.  It will return a vector with length equal to the number of true values in b.</span>
