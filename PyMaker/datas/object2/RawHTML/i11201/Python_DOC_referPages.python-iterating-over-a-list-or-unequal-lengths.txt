<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1277278/python-zip-like-function-that-pads-to-longest-length">Python: zip-like function that pads to longest length?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>From a config file, I would like to iterate over a list that contains <code>users</code>, <code>repositories</code>, and a <code>password</code> and then assign those values to variables to create a repository object using github3.py.  </p>
<p>The <code>user</code> and <code>repo_name</code> lists will not be equal length. For now, there's two users and several repos, but this can change over time.  I've tried to use <code>zip</code>, but it is only working if the lists are the same length. I would like for it to keep the last value in the <code>user</code> list and map that with the last repo in the <code>repo_name</code> list (<code>user2,repo3</code>).</p>
<pre><code>user = ["user1","user2"]
repo_name = ["repo1","repo2","repo3"]
password = "xxxxxxxxx"
</code></pre>
<p>The code below is where I would like to use those values.</p>
<pre><code>from global_var import *
for users, repos in zip(user, repo_name)
    gh = login(users, password)
    repo = gh.repository(users, repos)
    list_all_prs()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that the repository list will always be at least as long as the user list, then you can simply use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow"><code>itertools.zip_longest</code></a> to zip them together:</p>
<pre><code>for u, r in itertools.zip_longest(user, repo_name, fillvalue=user[-1]):
    ...
</code></pre>
<p>As you note, <code>zip</code> ends after the shortest iterable is exhausted.  In contrast <code>zip_longest</code> will continue until the longest iterable is exhausted, using the given <code>fillvalue</code> (which defaults to <code>None</code>) when a value can no longer be taken from the shorter iterables.</p>
<p>So here, we can simply set <code>fillvalue</code> to be the last member of <code>user</code> to have it broadcast over the remaining repositories.</p>
<p>(In python 2.7 this iterator is named <a href="https://docs.python.org/2/library/itertools.html#itertools.izip_longest" rel="nofollow"><code>itertools.izip_longest</code></a>)</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a hash (dictionary in Python I think)</p>
<pre><code>myHash = { 
    'user1': {
      'repos' : [],
      'password' : 'cat123'
  },
    'user2': {
      'repos' : [],
      'password' : 'cat123'
  },
}
</code></pre>
<p>than you can get the last repo with <code>myHash['user1']['repos'][-1]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Use the izip_longest method in the itertools module to zip over the longest iterable. This will return 'None' in cases where there is no value in the shorter list, so you would need to catch this in a function or loop.</p>
<pre><code>import itertools as it

a = []

    for user,repo in it.izip_longest(users,repo_name):
        if user: a.append((user,repo))
        else:  a.append((users[-1],repo))  

a

Output: [('user1', 'repo1'), ('user2', 'repo2'), ('user2', 'repo3')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'd say the better way is to map each user to a repo in a dict, but the closest thing to what you want is something like this</p>
<pre><code>##assuming repos.len() &gt;= users.len() and users is not empty
password = XXX
while repos:
    if users:
        user = users.pop()
    gh = login(user, password)
    repo = gh.repository(user, repos.pop())
    list_all_prs()
</code></pre>
</div>
<span class="comment-copy">What if the user list is longer than the repository list?</span>
<span class="comment-copy">The user list will never be longer than the repository list.  The repository list will always be equal or longer than the user list.</span>
