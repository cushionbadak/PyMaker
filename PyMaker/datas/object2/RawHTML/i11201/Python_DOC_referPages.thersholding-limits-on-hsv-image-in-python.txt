<div class="post-text" itemprop="text">
<p>I have read an image and I have converted the image to HSV image. 
I want to apply threshold limits for hue, saturation , and value components separately.
Hue thershold 0 to 1, saturation thershold 0.28 to 1 and value thershold 0 to 0.55</p>
<p>I want to this application for color masking ! </p>
<p>how to apply these limits on my image files.</p>
<pre><code>image_read = cv2.imread('tryimage.jpg')
im = cv2.cvtColor(image_read,cv2.COLOR_RGB2HSV)
im_hue = im[:,:,0]
im_sat = im[:,:,1]
im_val = im[:,:,2]
# how to apply thershold ?
fig, ax  = plt.subplots(nrows=1,ncols=3)
ax[0].imshow(im_hue)
ax[1].imshow(im_sat)
ax[2].imshow(im_val)
plt.show()
</code></pre>
<p>I have done the same in Matlab, I have taken only the pixels of my interest in each band and then merged these back to get the pixels of my interest.
Here is my matlab code snippet , which I want to do the same in python.</p>
<pre><code>color.hueThresholdLow         = 0;
color.hueThresholdHigh        = 1;
color.saturationThresholdLow  = 0;
color.saturationThresholdHigh = 0.28;
color.valueThresholdLow       = 0.38;    
color.valueThresholdHigh      = 0.97;
maskedRGBImage  = color_masking(rgbImage,color);

function color_masking(rgbImage, color)
hsvimage = rgb2hsv(rgbImage);
himage = hsvimage(:,:,1);
simage = hsvimage(:,:2);
vimage = hsvimage(:,:,3);
hMask = (hImage &gt;= color.hueThresholdLow) &amp; (hImage &lt;= color.hueThresholdHigh);
sMask = (sImage &gt;= color.saturationThresholdLow) &amp; (sImage &lt;= color.saturationThresholdHigh);
vMask = (vImage &gt;= color.valueThresholdLow) &amp; (vImage &lt;= color.valueThresholdHigh); 

ObjectsMask = uint8(hMask &amp; sMask &amp; vMask);
.....
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In python you can write it very similar to matlab. It is usually a good idea to create a function for methods that you might use more than once, but feel free of removing the function declaration if it doesn't suit your needs.</p>
<pre><code>def threshold_hsv(im_hsv, hlow, hhigh, slow, shigh, vlow, vhigh):
    im_hue = im_hsv[:,:,0]
    im_sat = im_hsv[:,:,1]
    im_val = im_hsv[:,:,2]

    h_mask = (im_hue &gt;= hlow) &amp; (im_hue &lt;= hhigh)
    s_mask = (im_sat &gt;= slow) &amp; (im_sat &lt;= shigh)
    v_mask = (im_val &gt;= vlow) &amp; (im_val &lt;= vhigh)

    return h_mask &amp; s_mask &amp; v_mask
</code></pre>
<p>And then you can call the function with your data as:</p>
<pre><code>&gt;&gt;&gt; object_mask = threshold_hsv(hsvimage, 0, 1, 0, 0.28, 0.38, 0.97)
</code></pre>
<p>As you can see, the syntax is pretty similar (if not identical) to that of the matlab. This holds as long as your <code>hsvimage</code> is a <a href="https://docs.scipy.org/doc/numpy-dev/user/numpy-for-matlab-users.html" rel="nofollow">numpy array</a>, which is what OpenCV generates in python.</p>
</div>
<div class="post-text" itemprop="text">
<p>To <em>select</em> values that satisfy your limits (and discard the ones not in the limits), use <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehensions</a>:</p>
<pre><code># filtered_pixels is a list of tuples, which are ordered as (h, s, v)
# i.e. filtered_pixels[0][0] = h, filtered_pixels[0][1] = s and
# filtered_pixels[0][2] = v
filtered_pixels = [(im_hue[i], im_sat[i], im_val[i]) for i in range(len(im_hue)) if satisfies_limits(im_hue[i], im_sat[i], im_val[i])] 
</code></pre>
<p><code>satisfies_limits</code> is a function that checks whether the passed hue, saturation and value are in the required limits. You can unwrap the above list comprehension to a <code>for</code> loop to if you wish.</p>
<hr/>
<p>To <em>limit all</em> values to the given limits, use the <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow"><code>map()</code></a> builtin:</p>
<pre><code>clamped_hue = map(lambda h: max(hue_min, min(h, hue_max)), im_hue)
# And so on for saturation and value
</code></pre>
</div>
<span class="comment-copy">By threshold limits you mean you want to limit H, S and V to those values, that is make values lower/higher than the limits conform to the limits or reject values not in the limits?</span>
