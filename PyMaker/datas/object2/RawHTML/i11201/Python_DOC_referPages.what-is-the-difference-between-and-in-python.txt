<div class="post-text" itemprop="text">
<p>Couldn't find much on this. Trying to compare 2 values, but they can't be equal. In my case, they can be (and often are) either greater than or less than.</p>
<p>Should I use:</p>
<pre><code>if a &lt;&gt; b:
   dostuff
</code></pre>
<p>or</p>
<pre><code>if a != b:
   dostuff
</code></pre>
<p><a href="http://www.tutorialspoint.com/python/comparison_operators_example.htm" rel="nofollow">This page</a> says they're similar, which implies there's at least something different about them.</p>
</div>
<div class="post-text" itemprop="text">
<p>Quoting from <a href="https://docs.python.org/2/reference/lexical_analysis.html#operators" rel="nofollow noreferrer">Python language reference</a>,</p>
<blockquote>
<p>The comparison operators <code>&lt;&gt;</code> and <code>!=</code> are alternate spellings of the same operator. <code>!=</code> is the preferred spelling; <code>&lt;&gt;</code> is obsolescent.</p>
</blockquote>
<p>So, they both are one and the same, but <code>!=</code> is preferred over <code>&lt;&gt;</code>.</p>
<p>I tried disassembling the code in Python 2.7.8</p>
<pre><code>from dis import dis
form_1 = compile("'Python' &lt;&gt; 'Python'", "string", 'exec')
form_2 = compile("'Python' != 'Python'", "string", 'exec')
dis(form_1)
dis(form_2)
</code></pre>
<p>And got the following</p>
<pre><code>  1           0 LOAD_CONST               0 ('Python')
              3 LOAD_CONST               0 ('Python')
              6 COMPARE_OP               3 (!=)
              9 POP_TOP
             10 LOAD_CONST               1 (None)
             13 RETURN_VALUE

  1           0 LOAD_CONST               0 ('Python')
              3 LOAD_CONST               0 ('Python')
              6 COMPARE_OP               3 (!=)
              9 POP_TOP
             10 LOAD_CONST               1 (None)
             13 RETURN_VALUE
</code></pre>
<p>Both <code>&lt;&gt;</code> and <code>!=</code> are generating the same byte code</p>
<pre><code>              6 COMPARE_OP               3 (!=)
</code></pre>
<p>So they both are one and the same.</p>
<h2>Note:</h2>
<p><code>&lt;&gt;</code> is removed in Python 3.x, as per <a href="https://docs.python.org/3/reference/lexical_analysis.html#operators" rel="nofollow noreferrer">the Python 3 Language Reference</a>. </p>
<p>Quoting <a href="https://docs.python.org/2/library/stdtypes.html#comparisons" rel="nofollow noreferrer">official documentation</a>,</p>
<blockquote>
<p><code>!=</code> can also be written <code>&lt;&gt;</code>, but this is an obsolete usage kept for backwards compatibility only. <strong>New code should always use <code>!=</code></strong>.</p>
</blockquote>
<p><strong>Conclusion</strong></p>
<p>Since <code>&lt;&gt;</code> is removed in 3.x, and as per the documentation, <code>!=</code> is the preferred way, better don't use <code>&lt;&gt;</code> at all.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just stick to <code>!=</code>. </p>
<p><code>&lt;&gt;</code> is outdated! Please check recent python reference manual.</p>
</div>
<span class="comment-copy">Don't know how in Python exactly, but I feel &lt;&gt; should be use for numbers only (not for comapring strings), != for both.</span>
<span class="comment-copy">Well I think <code>&lt;&gt;</code> would take two compression first <code>a&gt;b</code> and <code>a&lt;b</code> and if both are false it will be True for equality. But <code>!=</code> case there would be only one comparison i.e. not equal.</span>
<span class="comment-copy">My thoughts exactly. in my case, <code>a</code> and <code>b</code> are both numbers. Both can be null, so &lt;&gt; makes the most sense because I don't care about <code>b</code> if it's null.</span>
<span class="comment-copy">Relevant: <a href="http://stackoverflow.com/questions/16749121/what-does-mean-in-python/16749135#16749135" title="what does mean in python">stackoverflow.com/questions/16749121/what-does-mean-in-python/â€¦</a></span>
<span class="comment-copy">Ok, but what if <code>b</code> can't be null? using <code>&lt;&gt;</code> sounds to me like both variables must have a value</span>
<span class="comment-copy">@JeremyDavis As mentioned in the official documentation, <code>&lt;&gt;</code> is another way to say <code>!=</code>. So there is absolutely no difference between <code>&lt;&gt;</code> and <code>!=</code>. But we should prefer <code>!=</code>.</span>
<span class="comment-copy">@JeremyDavis Please check the included disassembled byte codes for the confirmation.</span>
<span class="comment-copy">Both variables must have a value either way, or you get a NameError before the operator is evaluated (meaning a variable didn't exist, not that it is null). Python doesn't have null; None is just a value which is unequal to other values.</span>
<span class="comment-copy">Commendable effort put into this answer. However the brief answer is just never use <code>&lt;&gt;</code></span>
