<div class="post-text" itemprop="text">
<p><code>file1.txt</code> contains usernames, i.e.  </p>
<pre><code>tony  
peter  
john  
...
</code></pre>
<p><code>file2.txt</code> contains user details, just one line for each user details, i.e.  </p>
<pre><code>alice 20160102 1101 abc  
john 20120212 1110 zjc9  
mary 20140405 0100 few3  
peter 20140405 0001 io90  
tango 19090114 0011 n4-8  
tony 20150405 1001 ewdf  
zoe 20000211 0111 jn09  
...
</code></pre>
<p>I want to get a shortlist of user details from <code>file2.txt</code> by <code>file1.txt</code> user provided, i.e.  </p>
<pre><code>john 20120212 1110 zjc9  
peter 20140405 0001 io90  
tony 20150405 1001 ewdf  
</code></pre>
<p>How to use python to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>.split(' ')</code>, assuming that there will always be a space between the name and the other information in the <code>file2.txt</code></p>
<p>Here's an example:</p>
<pre><code>UserList = []

with open("file1.txt","r") as fuser:
        UserLine = fuser.readline()
        while UserLine!='':
            UserList.append(UserLine.split("\n")[0])    # Separate the user name from the new line command in the text file.
            UserLine = fuser.readline() 

InfoUserList = []   
InfoList = []

with open("file2.txt","r") as finfo:
        InfoLine = finfo.readline()
        while InfoLine!='':
            InfoList.append(InfoLine)
            line1 = InfoLine.split(' ')
            InfoUserList.append(line1[0])   # Take just the user name to compare it later
            InfoLine = finfo.readline()

for user in UserList:
    for i in range(len(InfoUserList)):
        if user == InfoUserList[i]:
            print InfoList[i]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>pandas</code>:</p>
<pre><code>import pandas as pd

file1 = pd.read_csv('file1.txt', sep =' ', header=None)
file2 = pd.read_csv('file2.txt', sep=' ', header=None)

shortlist = file2.loc[file2[0].isin(file1.values.T[0])]
</code></pre>
<p>it will give you the following result:</p>
<pre><code>       0         1     2     3
1   john  20120212  1110  zjc9
3  peter  20140405     1  io90
5   tony  20150405  1001  ewdf
</code></pre>
<p>The above is a <code>DataFrame</code> to convert it back to an array just use <code>shortlist.values</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import pandas as pd

df1 = pd.read_csv('df1.txt', header=None)
df2 = pd.read_csv('df2.txt', header=None)
df1[0] = df1[0].str.strip() # remove the 2 whitespace followed by the feild
df2 = df2[0].str[0:-2].str.split(' ').apply(pd.Series) # split the word and remove whitespace
df = df1.merge(df2)

Out[26]: 
       0         1     2     3
0   tony  20150405  1001  ewdf
1  peter  20140405  0001  io90
2   john  20120212  1110  zjc9
</code></pre>
</div>
<span class="comment-copy">If you start each line with four space it gets rendered in code format - or you can use the {} button to format highlighted code in the markdown editor.</span>
<span class="comment-copy">SO is neither a code-writing nor tutorial service. Please learn <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a>.</span>
<span class="comment-copy">please read about <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">python files</a> and <a href="http://www.learnpython.org/en/Basic_String_Operations" rel="nofollow noreferrer">strings</a>. if you get some error while programming, then ask question.</span>
