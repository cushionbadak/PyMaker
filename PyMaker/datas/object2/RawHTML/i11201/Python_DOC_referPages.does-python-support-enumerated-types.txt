<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/36932/how-can-i-represent-an-enum-in-python">How can I represent an 'Enum' in Python?</a>
<span class="question-originals-answer-count">
                    43 answers
                </span>
</li>
</ul>
</div>
<p>Is there a way to have C++ like enumerated types like in Python? For example, in C++ I can do:</p>
<pre class="lang-c prettyprint-override"><code>enum Foo {
    bar,
    foobar,
    blah
};
</code></pre>
<p>and use these as global constants. Is there a similar thing in Python? </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/enum.html" rel="nofollow">From the Docs:</a>
Enumerations are created using the class syntax, which makes them easy to read and write. An alternative creation method is described in Functional API. To define an enumeration, subclass Enum as follows:</p>
<pre><code>&gt;&gt;&gt;
&gt;&gt;&gt; from enum import Enum
&gt;&gt;&gt; class Color(Enum):
...     red = 1
...     green = 2
...     blue = 3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python3.4+ supports various types of enumerations in the <a href="https://docs.python.org/3/library/enum.html" rel="nofollow"><code>enum</code></a> module.  Obviously it's not quite the same as an enumerated type in <code>C</code> or <code>C++</code>, but it serves the same purpose.  If you're stuck in an older version of python, <a href="https://pypi.python.org/pypi/enum34" rel="nofollow">there's a 3rd party backport available on pypi</a>.</p>
<p>Basic usage would look like:</p>
<pre><code>class Foo(enum.Enum):
    bar = 1
    foobar = 2
    blah = 3
</code></pre>
</div>
<span class="comment-copy">Is there a way to do it without the equals sign? Do you have to do " = 2"?</span>
