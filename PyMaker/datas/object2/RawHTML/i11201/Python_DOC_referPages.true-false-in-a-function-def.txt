<div class="post-text" itemprop="text">
<p>I understand what the function below does, but I don't quite get the significance (or difference) between returning <code>True</code> and <code>False</code>.</p>
<p>Both clauses make the program exit; i.e. upon entering a positive or negative response, the Python prompt is returned, so what actually changes internally?</p>
<p>Also, if I were to <em>design</em> such a function myself, should I use <code>True</code> or <code>False</code> if I just wanted the program to return the prompt to me without actually doing anything?</p>
<pre><code>def ask(prompt, retries = 4, reminder = 'Please try again!'):
    while True:
        response = input(prompt)
        if response in ('y', 'yes'):
            print('Got y or yes!')
            return True
        if response in ('n', 'no', 'nope'):
            print('Got n or no or nope!')
            return False
        retries = retries - 1
        if retries &lt; 0:
            raise ValueError('Invalid user response!')
        print(reminder)

ask('Do you wanna quit?')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Functions rarely get used alone. Returning <code>True</code> or <code>False</code> here is to help the rest of your program determine what to do. For example:</p>
<pre><code>if ask('Do you like cheese?'):
    order_cheese() # Some function you've previously defined
</code></pre>
<p>However, if your function is designed to return to the prompt, you can use <a href="https://docs.python.org/3/library/sys.html#sys.exit" rel="nofollow">sys.exit()</a> to return a success code that calling <em>programs</em> (vs functions) can take advantage of.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since the user's answer can be one of two sides <code>y or n</code>, <code>yes or no</code>, <code>y or nope</code>, <code>yes or nope</code>, <code>y or no</code> in any order, the function simply maps this list of dichotomies into a simple <code>True</code> or <code>False</code>. So you can use the function as a condition to perform an action.</p>
<pre><code>if ask('Are you ill?'):
    print('Go see a physician')
else:
    print('Go hiking')
</code></pre>
<p>Without having to re-evaluate the user's original verbose response.</p>
<p>This is quite consistent with the idea of ensuring a <code>function</code> has only one <em>function</em>, which in this case is to <em>booleanise</em> a user's response or throw an error if the response is inconsistent after a number of trials</p>
</div>
<span class="comment-copy">It depends from your application, if you need to pass the return of the function somewhere else then it makes a difference otherwise you might as well just use return.</span>
<span class="comment-copy">If you not use the returned value, you may use return only (Without True or False)</span>
<span class="comment-copy">I would say it has different return values in case you want to ask the user something else like: "Do you really want to buy this?" then you could do a <code>if ask('Do you really want to buy this?')</code> for example</span>
<span class="comment-copy">Got it, many thanks everyone!</span>
