<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/842059/is-there-a-portable-way-to-get-the-current-username-in-python">Is there a portable way to get the current username in Python?</a>
<span class="question-originals-answer-count">
                    12 answers
                </span>
</li>
</ul>
</div>
<p>I'm using a program named ajenti on linux. it's a program to manage linux servers and it's written in python.</p>
<p>I need to get linux username of logged in user for different sections like file manager. it is required to restrict user's access.</p>
<p>the source of that software can be found <a href="https://github.com/ajenti/ajenti" rel="nofollow">here</a>, and for example in line 73 of <a href="https://github.com/ajenti/ajenti/blob/1.x/ajenti/plugins/fm/fm.py" rel="nofollow">file manager</a> the access can be defined. however I'm getting username by functions like "os.path.expanduser" or "pwd.getpwuid(os.getuid()).pw_name" now, it only returns "root" regardless of the logged in user.</p>
<p>I want each username, what should I do?</p>
<p>P.S: This is not a duplicate. I know there has been questions like mine but that's not exactly what I want. there is a slight difference between them.</p>
</div>
<div class="post-text" itemprop="text">
<p>Could os.getlogin() be what you are looking for? 
(<a href="https://docs.python.org/3/library/os.html#os.getlogin" rel="noreferrer">https://docs.python.org/3/library/os.html#os.getlogin</a>)</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.getlogin()
'msurrow'
&gt;&gt;&gt; 
</code></pre>
<p>Or maybe getpass.getuser()
(<a href="https://docs.python.org/3.1/library/getpass.html" rel="noreferrer">https://docs.python.org/3.1/library/getpass.html</a>)</p>
<pre><code>&gt;&gt;&gt; import getpass
&gt;&gt;&gt; getpass.getuser()
'msurrow'
&gt;&gt;&gt; 
</code></pre>
<p>There is a difference between who the logged in user is, and 'who' the python process is running as. Jeff explains more in <a href="https://stackoverflow.com/questions/3042304/how-to-determine-what-user-and-group-a-python-script-is-running-as">his answer here</a></p>
</div>
<span class="comment-copy">@sumit I'm said I'm using this but that's does not return what I want.</span>
<span class="comment-copy">what return value do you want?</span>
<span class="comment-copy">@Snowleaf Did you try ALL the answers there?</span>
<span class="comment-copy">@MSurrow the username, not "root".</span>
<span class="comment-copy">@Snowleaf have you checked that you are not in fact logged in as root in the session where you are testing your script? (that could be a classical brainfart:) (or running python as root)</span>
<span class="comment-copy">I think the problem is what you and Jeff said. but how can I solve it? I must somehow get user that is logged in.</span>
<span class="comment-copy">if the python process is run as root, some of the functions will return 'root' (eg. getpass.getuser() will).</span>
