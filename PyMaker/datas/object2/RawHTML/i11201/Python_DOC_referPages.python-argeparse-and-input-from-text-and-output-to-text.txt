<div class="post-text" itemprop="text">
<p>I have found a script on GitHub that I want to edit for my own use. </p>
<p>The original script is <a href="https://github.com/PoorBillionaire/sitereview" rel="nofollow">https://github.com/PoorBillionaire/sitereview</a></p>
<p>The idea I want to implement in my fork is to look up a list of websites in a text file instead of manually typing into the python script each time to check a site and then output results to a file.</p>
<p>So, I have started to research this and thing that I need to add some options into the script</p>
<pre><code>p = ArgumentParser()
p.add_argument("-d", "--domains_file", dest = "domains", default = "",
type = "string", help = "A file containing a list of domains to query     against BlueCoat.", action="store_true")
p.add_argument("-o", "--output", dest = "output",  default = False, help  = "Output results to file", action="store_true")
</code></pre>
<p>so this would allow to use </p>
<pre><code>script.py -d ~/home/domainlist.txt -o ~/home/results.txt
</code></pre>
<p>where as at the moment it is </p>
<pre><code>script.py URL
</code></pre>
<p>but what i don't understand is how to tell the script to go to the file and check the first line and get the results and dump it to the file, then go back and check the next line on the input file and go and dump that etc, until there are no most lines to process..</p>
<p>Can someone point me where to look to work this out or provide a sample of the bits I need and I can try to edit them into the fork I am practicing on?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>args = p.parse()
input_file, dest_file = args.d, args.o
with f_input, f_dest as open(input_file,'r'), open(dest_file,'w'):
    for line in f_input.readline():
        f_dest.write(line)
    f_dest.flush()
</code></pre>
<p>Please read the docs for <a href="https://docs.python.org/2/library/argparse.html" rel="nofollow"><code>argparse</code></a> if you have trouble with the module</p>
</div>
<span class="comment-copy">The <a href="https://docs.python.org/2.7/index.html" rel="nofollow noreferrer">Python documentation</a> is pretty great. It sounds like you're currently stuck on <a href="https://docs.python.org/2.7/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">file I/O</a>.</span>
<span class="comment-copy">Please use a <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer"><code>with</code> context manager</a> for <code>open()</code></span>
<span class="comment-copy">with the -d -o options, does your example allow for the user to input thier own locations at the CLI?</span>
<span class="comment-copy">@RaphaëlGomès done</span>
<span class="comment-copy">@GughanRavikumar much better, and safer!</span>
<span class="comment-copy">@GughanRavikumar Python will make sure the file is closed properly. It make the code more readable, since you don't have to think about using <code>close()</code>, or trying to access a closed file by just staying in the indentation. It is also considered good practice, as you said.</span>
