<div class="post-text" itemprop="text">
<p>This question has been asked many times, and I searched diligently to no avail. 
Here is an example of my question:</p>
<p><code>dict = {"a":"1", "b":"2", "c":"3"}</code></p>
<p>The output I am looking for is as below:</p>
<p><code>dict = {"c":"3", "b":"2", "a":"1"}</code></p>
<p>I am really unsure how to attack this, as here is my current code:</p>
<pre><code>def reorder(a):
       clean = {}
       pair = {}
       i = 0
       for k, v in a.iteritems():
             pair = a.popitem()
             #Do stuff here
       return clean
</code></pre>
<p>What I am currently doing is grabbing the tuple pair as a key/value, as these need to remain the same. I am not sure how to insert this pair in a reverse order though.</p>
</div>
<div class="post-text" itemprop="text">
<p>A <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">dictionary</a> is unordered <em>by definition</em>:</p>
<blockquote>
<p>It is best to think of a dictionary as an <strong>unordered set of key: value pairs</strong>, with the requirement that the keys are unique (within one dictionary). </p>
</blockquote>
<p>Therefore, your question cannot be answered and you should consider using a different data structure. Perhaps an <a href="https://docs.python.org/2/library/collections.html#collections.OrderedDict" rel="nofollow"><code>OrderedDict</code></a> which <em>can</em> be reversed:</p>
<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; dict = collections.OrderedDict([(1,2),(3,4),(5,6)])
&gt;&gt;&gt; collections.OrderedDict(reversed(list(dict.items())))
OrderedDict([(5, 6), (3, 4), (1, 2)])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Firstly, the <code>dict</code> object of python is a hashtable, so It have no order.
but if you only want to get a list is order you can use <code>sorted(iterable, key=None, reverse=False)</code> method.
<code>
def order(dic):
   return sorted(dic.items(),key=lambda x:x[1],reverse=True)
</code></p>
</div>
<span class="comment-copy">Your diligent search missed <a href="http://stackoverflow.com/questions/6083531/order-of-keys-in-python-dictionary">this question</a>.</span>
<span class="comment-copy">Thank you very much for a seriously fast answer. Unfortunately at this time, I can't change the data structure but its starting to sound as if this is quite impossible to do. Can this be done manually?  I was thinking up above in my code, is to grab the tuple, and send it to another function. Use that function to store the tuple in memory, assign it to a value such as 0, 1, 2, 3 and use a for loop to insert the tuples backwards into a new dictionary</span>
<span class="comment-copy">As I said, there is <b>no possible way</b> to keep using a dictionary and "reverse" it, because the word "reverse" has no meaning in a dictionary... You can put the items in a <code>list</code> and reverse that, if it helps...</span>
<span class="comment-copy">What about creating a new dict and having the key/value pairs inserted in a specified way?</span>
<span class="comment-copy">You are trying to eat soup with a fork... Please take my advice.</span>
<span class="comment-copy">You got it lol thank you</span>
