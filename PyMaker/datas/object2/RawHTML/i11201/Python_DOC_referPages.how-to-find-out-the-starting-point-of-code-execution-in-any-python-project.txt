<div class="post-text" itemprop="text">
<p>I have been looking at various open source GitHub Python projects like, 
<a href="https://github.com/eliangcs/http-prompt" rel="nofollow"><code>http-prompt</code></a> and <a href="https://github.com/Theano/Theano" rel="nofollow">Theano</a></p>
<p>What I am not able to figure out is where their starting points are, so that I can debug them gracefully. Do I need to look in each and every file for the <code>__main__</code> method? </p>
<p>I am from Android background; so I was searching something related like <code>AndroidManifest.xml</code> from where I can get an idea as where the code is getting started, but I was unsuccessful in my attempts.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two ways a Python script can be loaded:</p>
<ul>
<li>By import : <code>import mymodule</code></li>
<li>By commandline : <code>$ python mymodule.py</code></li>
</ul>
<p>In both cases all code inside the script is executed</p>
<p>Usually <code>if __name__ == '__main__':</code> defines the entry  point :  </p>
<pre><code>if __name__ == '__main__': 
    print('Started from commandline')
else:
    print('Imported as a module')
</code></pre>
<p>In a git project, you can try this to find all scripts made to be launched from command-line : </p>
<pre><code>$ git grep "if __name__ ?== ?\W__main__\W"
</code></pre>
<p>Note that the project you mentioned, doesn't contain any explicitly defined entry point, instead the entry point script is generated at packaging time for distribution (see <code>setup.py</code> for this purpose)</p>
</div>
<div class="post-text" itemprop="text">
<p>The Python equivalent of a manifest file is generally <code>setup.py</code>, so this is a good place to start looking. A package can:</p>
<ul>
<li>define scripts that should be installed, using <a href="http://python-packaging.readthedocs.io/en/latest/command-line-scripts.html#the-scripts-keyword-argument" rel="nofollow noreferrer">the <code>scripts</code> keyword</a> (as <a href="https://github.com/Theano/Theano/blob/master/setup.py#L178" rel="nofollow noreferrer">Theano does</a>); or </li>
<li>use <a href="http://python-packaging.readthedocs.io/en/latest/command-line-scripts.html?highlight=entry_points#the-console-scripts-entry-point" rel="nofollow noreferrer">the <code>entry_points</code> keyword</a> to define a function that should be exposed to the command line (as <a href="https://github.com/eliangcs/http-prompt/blob/master/setup.py#L56" rel="nofollow noreferrer"><code>http-prompt</code></a> does, pointing to <a href="https://github.com/eliangcs/http-prompt/blob/master/http_prompt/cli.py#L46" rel="nofollow noreferrer">the <code>cli</code> function</a>).</li>
</ul>
<p>If neither of these is provided, the package is probably designed to be <code>import</code>ed rather than executed, in which case take a look at the usage examples along with the root <code>__init__.py</code> (e.g. <a href="https://github.com/Theano/Theano/blob/master/theano/__init__.py" rel="nofollow noreferrer">Theano's</a>), which will probably tell you what objects are exposed to the outside world. See <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">the Python docs</a> for more information on module structure.</p>
<p>However, Python is a dynamic, flexible language so there's no <em>"magic bullet"</em> to tell you where to look; there isn't e.g. a specific <code>main.py</code> file that must be defined, for example (although there is a <code>__main__.py</code> that <em>can</em> be defined, see <a href="https://stackoverflow.com/questions/4042905/what-is-main-py">What is __main__.py?</a>)</p>
</div>
<span class="comment-copy">@jonrsharpe Can you please be a little more descriptive. I am a ""newbie"".</span>
<span class="comment-copy">Can you please suggest some links for simpler projects?</span>
<span class="comment-copy">@jonrsharpe  Consider a standalone application which can be executed. Now, assume it has a complex directory structure. Now, can you please help me in locating the starting point of the Python application?</span>
<span class="comment-copy">Let us <a href="http://chat.stackoverflow.com/rooms/114844/discussion-between-ali-waris-and-jonrsharpe">continue this discussion in chat</a>.</span>
<span class="comment-copy">Where do I need to look for the code ? In each module?? Please forgive me for being silly if I seem to..</span>
<span class="comment-copy">Usually the project should be documented accordingly, because you may find several entry points in a project</span>
<span class="comment-copy">The project http-prompt doesn't provide a standard way to execute from source, it uses function <code>cli(url, http_options)</code> in <code>http_prompt/cli.py</code>, this is defined in setup.py <code>entry_points</code> : <code>http-prompt=http_prompt.cli:cli</code>I recommend you install the project with <code>$ pip install http-prompt</code></span>
<span class="comment-copy">What if the code can be executed from source? How to get the start point of the code then?</span>
<span class="comment-copy">Note that this refers to <i>scripts</i>, not <i>packages</i>, which may not have any <code>if __name__ == '__main__':</code> blocks.</span>
