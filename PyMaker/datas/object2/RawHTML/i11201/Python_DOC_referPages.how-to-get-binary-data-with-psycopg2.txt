<div class="post-text" itemprop="text">
<p>I have a column containing binary data. If I do <code>fetchone()</code> it is not giving me any data, instead I do <code>fetchall()</code> then get the result below. How can O get that binary data into a variable and then convert it into a base64 encoded string?</p>
<pre><code>con = psycopg2.connect(config.DB_CONNECTION)                
cur = con.cursor()
cur.execute("select image from user_tbl where mobile=%s",(str(jsond['mobb'][0]),))
print cur.fetchall()
</code></pre>
<pre><code>[(read-only buffer for 0x038DA430, size 64041, offset 0 at 0x03AE61C0,)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>psycopg2</code> returns the binary data (probably stored in a <code>bytea</code> column in your table) in a <code>buffer</code> object in Python 2, or in a <a href="https://docs.python.org/3/library/stdtypes.html#memory-views" rel="nofollow"><code>memoryview</code></a> in Python 3.</p>
<p>Both <code>buffer</code> and <code>memoryview</code> objects can be passed directly to a base64 string encoder, so this will encode the binary data in base 64:</p>
<pre><code>import base64

rows = cur.fetchall()
binary_img = rows[0][0]
base64_img = base64.b64encode(binary_img)
</code></pre>
<p>In Python 2, if you want the binary data itself you can use <code>str()</code> or slice with <code>[:]</code> the <code>buffer</code> object. In Python 3 you can use the <code>tobytes()</code> method of the <code>memoryview</code> object.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to read the buffer:</p>
<pre><code>import base64

# your code here

data = base64.encode(curo[0].read())
</code></pre>
</div>
