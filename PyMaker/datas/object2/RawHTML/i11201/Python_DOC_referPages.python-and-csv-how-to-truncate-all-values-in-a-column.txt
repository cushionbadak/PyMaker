<div class="post-text" itemprop="text">
<p>Given a simple CSV file like this:</p>
<pre><code>Django,Gunslinger,101-707
KingSchultz,Dentist,205-707
Tatum,Marshall,615-707
Broomhilda,Wife,910-707
...,...,...
</code></pre>
<p>How do you truncate all the values in the last column so that only the first three digits remain?  (unrelated:  so they can be used in math operations)</p>
<p>Desired CSV:</p>
<pre><code>Django,Gunslinger,101
KingSchultz,Dentist,205
Tatum,Marshall,615
Broomhilda,Wife,910
...,...,...
</code></pre>
<p>Here is what I have tried so far:</p>
<pre><code>import csv
import re
r = csv.reader(open(input.csv))
for row in r:
    re.sub('\-.*', '', row[3])
writer = csv.writer(open('output.csv', 'w'))
writer.writerow(row)
</code></pre>
<p>I've verified the <code>regex</code> in <code>re.sub</code> works correctly.  Have tried dozens of variations, many hours searching, but cannot get the desired output.</p>
</div>
<div class="post-text" itemprop="text">
<p>Without using <code>re</code> module,</p>
<pre><code>import csv

r = csv.reader(open("sample.csv", "rb"))
writer = csv.writer(open("output.csv", "wb"))

for row in r:
    row[2] = row[2][:3]
    writer.writerow(row)
</code></pre>
<p>As @TigerRedMike pointed out in Python 3.X, instead of <code>'rb'</code> and <code>'wb'</code>, <code>'r'</code> and <code>'w'</code> should be used respectively to read and write the files.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import csv
import re

r = csv.reader(open('input.csv'))
writer = csv.writer(open('/tmp/output.csv', 'w'))

for row in r:
    tmp = re.sub('\-.*', '', row)
    writer.writerow(tmp)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First thing is <code>re.sub</code> returns a new value, it doesn't replace the value in the row.</p>
<p>secondly, <code>row</code> is a running variable, you should handle this within the loop.</p>
<p>Here your code modified to work correctly (for python3):</p>
<pre><code>import csv
import re
r = csv.reader(open('.../test.csv'))
with open('.../test2.csv', 'w') as csvfile:
    writer = csv.writer(csvfile, delimiter=',')
    for row in r:
        row[2] = re.sub('\-.*', '', row[2])
        writer.writerow(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>re.sub</code> returns the string with the substitution. it does not affect the third argument itself</p>
</div>
<span class="comment-copy">Tested working on Python 2.7.6 and 3.4.3.  Thank you @praba230890.  I edited the answer to include a simple error that may confuse someone else on Python 3.4.3.</span>
<span class="comment-copy">Can you explain the syntax of <code>[:3]</code>?</span>
<span class="comment-copy">It's string slicing, [:3] slices the first 3 chars of a string and returns it. Check this out <a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">docs.python.org/3/tutorial/introduction.html#strings</a></span>
<span class="comment-copy">Give an explanation to your code please.</span>
<span class="comment-copy">Tested working on Python 2.7.6 and 3.4.3. Thank you @DomTomCat.  Since this answer uses regular expressions, it will work on complex edits.</span>
<span class="comment-copy">[Premature optimization is the root of all evil -- DonaldKnuth] (<a href="http://c2.com/cgi/wiki?PrematureOptimization" rel="nofollow noreferrer">c2.com/cgi/wiki?PrematureOptimization</a>)</span>
