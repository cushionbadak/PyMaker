<div class="post-text" itemprop="text">
<p>From Automate The Boring Stuff With Python book:
"Create a Mad Libs program that reads in text files and lets the user add their own text anywhere the word ADJECTIVE, NOUN, ADVERB, or VERB appears in the text file. For example, a text file may look like this:</p>
<p>The ADJECTIVE panda walked to the NOUN and then VERB. A nearby NOUN was
unaffected by these events.</p>
<p>The program would find these occurrences and prompt the user to replace them."</p>
<p>I'm almost done, but I can't seem to figure out how to .join the last list on the file. I've looked online and tried the methods. Instead of getting a string out of join, I get the whitespace in ' '.join(mod4) separating the letters within each list string value. 
[ ' A n ' ,   ' o n e ' ,   ' t w o ' ,   ' a n d ' ,   ' t h r e e ' ,   ' f o u r ' ]
Everything else does the job.</p>
<pre><code>#! python3

import re

madText = open('madText.txt', 'w')

text = 'An ADJECTIVE, a NOUN, an ADVERB and a VERB.'

madText.write(text)
madText.close()

content = re.split('\W+', text)

for i in content:

    if i == "ADJECTIVE":
        replaceRegex = re.compile(r'(ADJECTIVE)')
        print('Enter an ADJECTIVE:')
        ADJECTIVE = input()
        output = replaceRegex.sub(ADJECTIVE, str(content))

    elif i == "NOUN":
        replaceRegex = re.compile(r'(NOUN)')
        print('Enter a NOUN:')
        NOUN = input()
        output = replaceRegex.sub(NOUN, str(output))

    elif i == "ADVERB":
        replaceRegex = re.compile(r'(ADVERB)')
        print('Enter an ADVERB:')
        ADVERB =  input()
        output = replaceRegex.sub(ADVERB, str(output))

    elif i == "VERB":
        replaceRegex = re.compile(r'(VERB)')
        print('Enter a VERB:')
        VERB = input()
        output = replaceRegex.sub(VERB, str(output))

content = re.split('\W+', output)
#content = list(output.split(' '))
content = ' '.join(content)
print(content)
madLibs = open('madText2.txt', 'w')
madLibs.write(content)
madLibs.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a basic assumption that is preventing you from completing this.  Your assignment of <code>mod4</code> is based on previous assignments and their order.</p>
<p>Instead what you should be doing is initializing an <code>output</code> variable to <code>[]</code> and appending the words to it as you loop through <code>content</code>.  You would add your adlib words along with the real words.</p>
<p>Once you have built your output list, <em>then</em> you use <code>join</code> to turn that <code>output</code> into a string.</p>
<p>Also, using <code>regex</code> is overkill.  Let's assume you've made an <code>output = []</code> before the loop.</p>
<pre><code>if i == 'NOUN':
   print('Enter a NOUN:')
   noun = input()  # raw_input() on Python 2
   output += noun
[...]
</code></pre>
<p>Now as you hit each adlib token you replace it with the inputted text and build your output list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's the answer I made. I guess I deserved getting -2 downvotes within 4 minutes of posting the above. :)</p>
<pre><code>import re

madText = open('madText.txt', 'w')
text = 'An ADJECTIVE, a NOUN, a VERB and an ADVERB and a NOUN.'
madText.write(text)
madText.close()
content = re.split('(\W+)', text)

for i in content:
    if i == 'NOUN':
        content.insert(content.index('NOUN'), input('Replace ' + i + ': '))
        content.remove('NOUN')
    elif i == 'VERB':
        content.insert(content.index('VERB'), input('Replace ' + i + ': '))
        content.remove('VERB')
    elif i == 'ADVERB':
        content.insert(content.index('ADVERB'), input('Replace ' + i + ': '))
        content.remove('ADVERB')
    elif i == 'ADJECTIVE':
        content.insert(content.index('ADJECTIVE'), input('Replace ' + i + ': '))
        content.remove('ADJECTIVE')

content = ''.join(content)
print(content)
madLibs = open('madText2.txt', 'w')
madLibs.write(content)
madLibs.close()
</code></pre>
</div>
<span class="comment-copy">What did you expect? What happened instead? <code>mod4</code> is a string, were you expecting a list of words?</span>
<span class="comment-copy">What error are you getting? It looks like <code>.sub()</code> from the <code>re</code> module isn't returning what you think ti's returning. <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a></span>
<span class="comment-copy">have you actually tried printing out <code>str(content)</code>? using <code>re.sub</code> on the string representation <b>of a list</b> is rarely what people mean to do.</span>
<span class="comment-copy"><code>'This is what I was expecting'</code> and <code>[ ' N o t ', ' t h i s ' ]</code> Yes I tried printing it several ways. I'll check the docs, thanks.</span>
<span class="comment-copy">To be honest I had figured out earlier something like that would be the best way. Thanks.</span>
