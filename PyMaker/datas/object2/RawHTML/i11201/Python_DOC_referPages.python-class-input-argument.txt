<div class="post-text" itemprop="text">
<p>I am new to OOP. My idea was to implement the following class:</p>
<pre><code>class name(object, name):
    def __init__(self, name):
        print name
</code></pre>
<p>Then the idea was to create two instances of that class:</p>
<pre><code>person1 = name("jean")
person2 = name("dean")
</code></pre>
<p>I know, that is not possible, but how can I pass an input-argument into an instance of a class?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; class name(object):
...     def __init__(self, name):
...         self.name = name
... 
&gt;&gt;&gt; person1 = name("jean")
&gt;&gt;&gt; person2 = name("dean")
&gt;&gt;&gt; person1.name
'jean'
&gt;&gt;&gt; person2.name
'dean'
&gt;&gt;&gt;
</code></pre>
<p>Is this what you are looking for?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem in your initial definition of the class is that you've written:</p>
<pre><code>class name(object, name):
</code></pre>
<p>This means that the class inherits the base class called "object", and the base class called "name". However, there is no base class called "name", so it fails. Instead, all you need to do is have the variable in the special <strong>init</strong> method, which will mean that the class takes it as a variable.</p>
<pre><code>class name(object):
  def __init__(self, name):
    print name
</code></pre>
<p>If you wanted to use the variable in other methods that you define within the class, you can assign name to self.name, and use that in any other method in the class without needing to pass it to the method.</p>
<p>For example:</p>
<pre><code>class name(object):
  def __init__(self, name):
    self.name = name
  def PrintName(self):
    print self.name

a = name('bob')
a.PrintName()
bob
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You just need to do it in correct syntax. Let me give you a minimal example I just did with Python interactive shell:</p>
<pre><code>&gt;&gt;&gt; class MyNameClass():
...   def __init__(self, myname):
...       print myname
... 
&gt;&gt;&gt; p1 = MyNameClass('John')
John
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Remove the <code>name</code> param from the class declaration. The init method is used to pass arguments to a class at creation.</p>
<pre><code>class Person(object):
  def __init__(self, name):
    self.name = name

me = Person("TheLazyScripter")
print me.name
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow">Python Classes</a> </p>
<pre><code>class name:
    def __init__(self, name):
        self.name = name
        print("name: "+name)
</code></pre>
<p>Somewhere else:  </p>
<p><code>john = name("john")</code></p>
<p>Output:<br/>
<code>name: john</code></p>
</div>
<span class="comment-copy">Why do you think it is not possible? start from here: <a href="https://docs.python.org/3/tutorial/classes.html#a-first-look-at-classes" rel="nofollow noreferrer">docs.python.org/3/tutorial/classes.html#a-first-look-at-classes</a></span>
<span class="comment-copy"><a href="http://sopython.com/wiki/What_tutorial_should_I_read%3F" rel="nofollow noreferrer">sopython.com/wiki/What_tutorial_should_I_read%3F</a> - any introductory Python tutorial will cover this kind of basic OOP.</span>
<span class="comment-copy">@jonrsharpe - your link redirects to 404, here is the repost: <a href="https://sopython.com/wiki/What_tutorial_should_I_read%3F" rel="nofollow noreferrer">sopython.com/wiki/What_tutorial_should_I_read%3F</a></span>
