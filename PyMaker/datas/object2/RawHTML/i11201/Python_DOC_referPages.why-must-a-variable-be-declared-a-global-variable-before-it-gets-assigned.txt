<div class="post-text" itemprop="text">
<p>Why do we have to do this:</p>
<pre><code>global x
x = "Hello World!"
</code></pre>
<p>When this is more readable:</p>
<pre><code>global x = "Hello World"
</code></pre>
<p>Why is this, is there a reason behind it?</p>
</div>
<div class="post-text" itemprop="text">
<p>The goal of Python is to be as readable as possible. To reach this goal the user must be forced act in a clear defined way - e.g. you must use exactly four spaces. And just like this it defines that the <code>global</code> keyword is a simple statment. This means:</p>
<blockquote>
<p>A simple statement is comprised within a single logical line.
  <a href="https://docs.python.org/3/reference/simple_stmts.html#simple-statements" rel="nofollow">Simple Statements</a></p>
</blockquote>
<p>And </p>
<blockquote>
<p>Programmerâ€™s note: the global is a directive to the parser. It applies only to code parsed at the same time as the global statement.
  <a href="https://docs.python.org/3/reference/simple_stmts.html#the-global-statement" rel="nofollow">The global statement</a></p>
</blockquote>
<p>If you would write this:</p>
<pre><code>global x = 5
</code></pre>
<p>You would have two logical operations:</p>
<ol>
<li>Interpreter please use the global x not a local one</li>
<li>Assign 5 to x</li>
</ol>
<p>in one line. Also it would seem like the <code>global</code> only applies to the current line, and not to the whole code block.</p>
<p><strong>TL;TR</strong></p>
<p>It's to force the user to write better readably code, which is splitted to single logical operations.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/2/reference/simple_stmts.html#the-global-statement" rel="nofollow">document</a> writes that</p>
<blockquote>
<p>Names listed in a <code>global</code> statement must <em>not</em> be used in the same code block textually <em>preceding</em> that global statement.</p>
<p>CPython implementation detail: The current implementation does not enforce the latter two restrictions, but programs should not abuse this freedom, as future implementations may enforce them or silently change the meaning of the program.</p>
</blockquote>
<p>As for the readability question, I think the second one seems like a C statement. Also it not syntactically correct</p>
</div>
<div class="post-text" itemprop="text">
<p>I like to think it puts your focus squarely on the fact that <em>you are using globals</em>, always a questionable practice in software engineering.
Python definitely isn't about representing a problem solution in the most compact way. Next you'll be saying that we should only indent one space, or use tabs! ;-)</p>
</div>
<span class="comment-copy">Python doesn't have any other variable modifiers, but does have other statements; this therefore keeps the grammar simpler. As to which is more readable, that's inevitably a matter of opinion.</span>
<span class="comment-copy">It would become less readable with more variables. for example: <code>global x = "Hello world", y ="What's up world", z ="Goodbye world"</code> it gets a little full.</span>
<span class="comment-copy">I don't think you are going to get any definitive answer bar asking Guido or some of the devs.</span>
<span class="comment-copy">Falx, thank you for the time and effort you took to answer my question, I have a better understanding now, +1.</span>
<span class="comment-copy">Gdlmx, thank you for the time and effort you took to answer my question, +1.</span>
<span class="comment-copy">Holdenweb, thank you for the time and effort you took to answer my question, +1.</span>
<span class="comment-copy">By all means feel free to mark it down</span>
