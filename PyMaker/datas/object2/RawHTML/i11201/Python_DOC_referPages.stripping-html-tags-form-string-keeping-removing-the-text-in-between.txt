<div class="post-text" itemprop="text">
<p>I'd like to clean up some html in python 3 where I used some span tags to mark inserted text with a color and strikethrough deleted text. An example:</p>
<pre><code>&lt;p&gt;Lorem ipsum dolor sit amet, consetetur sadipscing elitr, 
sed diam nonumy eirmod tempor invidunt ut labore et dolore 
magna aliquyam erat, sed diam voluptua. &lt;span class="inserted"&gt;
Lorem ipsum&lt;/span&gt; Lorem ipsum dolor sit amet, consetetur 
sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut 
labore et dolore magna aliquyam erat, sed diam voluptua. At 
vero eos et accusam et justo duo dolores et ea rebum. 
&lt;span class="strikethrough"&gt;Lorem ipsum&lt;/span&gt; lorem 
&lt;span class="inserted"&gt;ipsum&lt;/span&gt;. At vero eos et accusam et 
justo duo dolores et ea rebum. Stet clita kasd gubergren, 
no sea takimata sanctus est Lorem ipsum dolor sit amet.&lt;/p&gt;
</code></pre>
<p>What I'd like to do is remove the span tags keeping the text between span tags with the class 'inserted' and deleting the text between span tags 'strikethrough'.</p>
<p>I found this to strip the tags keeping the text between:</p>
<pre><code>from html.parser import HTMLParser

class MLStripper(HTMLParser):
    def __init__(self):
        self.reset()
        self.strict = False
        self.convert_charrefs= True
        self.fed = []
    def handle_data(self, d):
        self.fed.append(d)
    def get_data(self):
        return ''.join(self.fed)

def strip_tags(html):
    s = MLStripper()
    s.feed(html)
    return s.get_data()
</code></pre>
<p>But I'd like to remove the text between the span tags if the tag has a special class ('strikethrough').</p>
<p>How can I do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are almost right.
You just need to use the <a href="https://docs.python.org/3/library/html.parser.html#html.parser.HTMLParser.handle_starttag" rel="nofollow"><code>handle_starttag()</code></a> and <a href="https://docs.python.org/3/library/html.parser.html#html.parser.HTMLParser.handle_endtag" rel="nofollow"><code>handle_endtag()</code></a> methods and some variable to keep track of the current state.</p>
<p>How about this:</p>
<pre><code>from html.parser import HTMLParser


class MLStripper(HTMLParser):
    def __init__(self):
        self.reset()
        self.strict = False
        self.convert_charrefs = True

        self._forbidden = False
        self._result = []

    def handle_starttag(self, tag, attrs):
        if tag in ['span']:
            if 'strikethrough' in [a for _, a in attrs]:
                self._forbidden = True

    def handle_endtag(self, tag):
        self._forbidden = False

    def handle_data(self, data):
        if not self._forbidden:
            self._result.append(data)


st = MLStripper()
st.feed('''
&lt;p&gt;Lorem ipsum dolor sit amet, consetetur sadipscing elitr,
sed diam nonumy eirmod tempor invidunt ut labore et dolore
magna aliquyam erat, sed diam voluptua. &lt;span class="inserted"&gt;
Lorem ipsum&lt;/span&gt; Lorem ipsum dolor sit amet, consetetur
sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut
labore et dolore magna aliquyam erat, sed diam voluptua. At
vero eos et accusam et justo duo dolores et ea rebum.
&lt;span class="strikethrough"&gt;Lorem ipsum&lt;/span&gt; lorem
&lt;span class="inserted"&gt;ipsum&lt;/span&gt;. At vero eos et accusam et
justo duo dolores et ea rebum. Stet clita kasd gubergren,
no sea takimata sanctus est Lorem ipsum dolor sit amet.&lt;/p&gt;
''')

print(''.join(st._result))
</code></pre>
<hr/>
<p>The result:</p>
<pre><code>Lorem ipsum dolor sit amet, consetetur sadipscing elitr,
sed diam nonumy eirmod tempor invidunt ut labore et dolore
magna aliquyam erat, sed diam voluptua.
Lorem ipsum Lorem ipsum dolor sit amet, consetetur
sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut
labore et dolore magna aliquyam erat, sed diam voluptua. At
vero eos et accusam et justo duo dolores et ea rebum.
 lorem
ipsum. At vero eos et accusam et
justo duo dolores et ea rebum. Stet clita kasd gubergren,
no sea takimata sanctus est Lorem ipsum dolor sit amet.
</code></pre>
</div>
<span class="comment-copy">Seems straightforward for a regular expression. Have you tried that?</span>
