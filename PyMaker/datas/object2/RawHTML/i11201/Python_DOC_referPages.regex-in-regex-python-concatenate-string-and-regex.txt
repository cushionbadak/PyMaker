<div class="post-text" itemprop="text">
<p>Is it possible to refer to another regular expression inside a regular expression? When I try the following code: </p>
<pre><code>element = re.compile (r"H|He|Li|Be|B|C|N|O|F|Ne|Na|Mg|Al|Si|P|S|Cl|Ar|K|Ca|Sc|Ti|V|Cr|Mn|Fe
|Co|Ni|Cu|Zn|Ga|Ge|As|Se|Br|Kr|Rb|Sr|Y|Zr|Nb|Mo|Tc|Ru|Rh|Pd|Ag|Cd|In|Sn|Sb|Te|I|Xe|Cs|Ba|La
|Ce|Pr|Nd|Pm|Sm|Eu|Gd|Tb|Dy|Ho|Er|Tm|Yb|Lu|Hf|Ta|W|Re|Os|Ir|Pt|Au|Hg|Tl|Pb|Bi|Po|At|Rn|Fr
|Ra|Ac|Th|Pa|U|Np|Pu|Am|Cm|Bk|Cf|Es|Fm|Md|No|Lr|Rf|Db|Sg|Bh|Hs|Mt|Ds")

regex_name01 = (r'(\b)' + element + r'-' + element)
regex_name02 = (r'(\b)' + element + r'-' + element + r'-' + element)
regex_name03 = (r'(\b)' + element + r'-' + element + r'-' + element + r'-' + element)
regex_name04 = (r'(\b)' + element + r'-' + element + r'-' + element + r'-' + element + r'-'
 + element)
regex_name05 = (r'(\b)' + element + r'-' + element + r'-' + element + r'-' + element + r'-' 
+ element + r'-' + element)
</code></pre>
<p>I get the following error: </p>
<pre><code>"TypeError: cannot concatenate 'str' and '_sre.SRE_Pattern" objects
</code></pre>
<p>How can I solve this without having to put the long expression every time 'element' occurs. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>element</code> is an already <em>compiled</em> regular expression. Why don't concatenate and then compile:</p>
<pre><code>element = r"H|He|Li|Be|B|C|N|O|F|Ne|Na|Mg|Al|Si|P|S|Cl|Ar|K|Ca|Sc|Ti|V|Cr|Mn|Fe
|Co|Ni|Cu|Zn|Ga|Ge|As|Se|Br|Kr|Rb|Sr|Y|Zr|Nb|Mo|Tc|Ru|Rh|Pd|Ag|Cd|In|Sn|Sb|Te|I|Xe|Cs|Ba|La
|Ce|Pr|Nd|Pm|Sm|Eu|Gd|Tb|Dy|Ho|Er|Tm|Yb|Lu|Hf|Ta|W|Re|Os|Ir|Pt|Au|Hg|Tl|Pb|Bi|Po|At|Rn|Fr
|Ra|Ac|Th|Pa|U|Np|Pu|Am|Cm|Bk|Cf|Es|Fm|Md|No|Lr|Rf|Db|Sg|Bh|Hs|Mt|Ds"

regex_name01 = re.compile(r'(\b)' + element + r'-' + element)
regex_name02 = re.compile(r'(\b)' + element + r'-' + element + r'-' + element)
regex_name03 = re.compile(r'(\b)' + element + r'-' + element + r'-' + element + r'-' + element)
regex_name04 = re.compile(r'(\b)' + element + r'-' + element + r'-' + element + r'-' + element + r'-'
 + element)
regex_name05 = re.compile(r'(\b)' + element + r'-' + element + r'-' + element + r'-' + element + r'-' 
+ element + r'-' + element)
</code></pre>
<p>Or, you can get the pattern as a string from a compiled regular expression via <a href="https://docs.python.org/3/library/re.html#re.regex.pattern" rel="nofollow"><code>.pattern</code></a>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; element = re.compile(r".*")
&gt;&gt;&gt; element.pattern
'.*'
</code></pre>
<hr/>
<p>As a side note, you may simplify things a little bit by using the <a href="https://github.com/pkienzle/periodictable" rel="nofollow"><code>periodictable</code> package</a>:</p>
<pre><code>&gt;&gt;&gt; from periodictable.core import PUBLIC_TABLE
&gt;&gt;&gt; elements = [element.symbol for element in PUBLIC_TABLE]
&gt;&gt;&gt; elements
['n', 'H', 'He', 'Li', 'Be', 'B', 'C', 'N', 'O', 'F', 'Ne', 'Na', 'Mg', 'Al', 'Si', 'P', 'S', 'Cl', 'Ar', 'K', 'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga', 'Ge', 'As', 'Se', 'Br', 'Kr', 'Rb', 'Sr', 'Y', 'Zr', 'Nb', 'Mo', 'Tc', 'Ru', 'Rh', 'Pd', 'Ag', 'Cd', 'In', 'Sn', 'Sb', 'Te', 'I', 'Xe', 'Cs', 'Ba', 'La', 'Ce', 'Pr', 'Nd', 'Pm', 'Sm', 'Eu', 'Gd', 'Tb', 'Dy', 'Ho', 'Er', 'Tm', 'Yb', 'Lu', 'Hf', 'Ta', 'W', 'Re', 'Os', 'Ir', 'Pt', 'Au', 'Hg', 'Tl', 'Pb', 'Bi', 'Po', 'At', 'Rn', 'Fr', 'Ra', 'Ac', 'Th', 'Pa', 'U', 'Np', 'Pu', 'Am', 'Cm', 'Bk', 'Cf', 'Es', 'Fm', 'Md', 'No', 'Lr', 'Rf', 'Db', 'Sg', 'Bh', 'Hs', 'Mt', 'Ds', 'Rg', 'Cn', 'Uuq', 'Uuh']
&gt;&gt;&gt; element = r"|".join(elements)
</code></pre>
</div>
<span class="comment-copy">Oh wow, I've been trying millions of different options and have never seen this stupid tiny error. Thanks!</span>
<span class="comment-copy">Thanks a lot for the side notes as well!</span>
