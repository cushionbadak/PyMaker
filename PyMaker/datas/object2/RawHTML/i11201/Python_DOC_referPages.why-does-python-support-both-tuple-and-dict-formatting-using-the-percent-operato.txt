<div class="post-text" itemprop="text">
<p>This input:</p>
<pre><code>'%s %(?)s' % {'?': 'a'}
</code></pre>
<p>results in this output:</p>
<pre><code>"{'?': 'a'} a"
</code></pre>
<p>which replaces both the tuple-based and dict-based placeholders in the source string with the value you would expect if you used either of them alone.</p>
<p>However, if you reverse the placement of the placeholders in the string you get a TypeError:</p>
<pre><code>In [2]: '%(?)s %s' % {'?': 'a'}
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-2-7989b5f88c97&gt; in &lt;module&gt;()
----&gt; 1 '%(?)s %s' % {'?': 'a'}

TypeError: not enough arguments for format 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Each %s consumes one of the variable after the standalone % symbol.  In the first case there are two variables, the while expression and the dictionary mapping.</p>
<p>In the second case, the first %s takes the dictionary mapping and consumes the whole expression, has evaluated it. That leaves the second %s without a matching variable.</p>
</div>
<span class="comment-copy">I agree. It would be more consistent if <code>'%s %(?)s' % {'?': 'a'}</code> raised an error as well. Are there many cases like this? You can use a single argument, a tuple or a dictionary as arguments to %-formatting. But it seems that the dictionary is parsed as <i>both</i> a single argument and as a mapping.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting" rel="nofollow noreferrer">This caveat from the docs</a> might be relevant. It might be a <code>printf</code> "quirk". <i><b>Note</b> The formatting operations described here exhibit a variety of quirks that lead to a number of common errors (such as failing to display tuples and dictionaries correctly). Using the newer str.format() interface helps avoid these errors, and also provides a generally more powerful, flexible and extensible approach to formatting text.</i></span>
<span class="comment-copy">I don't understand what you mean by the first case having two variables. The value after % is the same in both cases. What is the "while expression" you are referring to?</span>
