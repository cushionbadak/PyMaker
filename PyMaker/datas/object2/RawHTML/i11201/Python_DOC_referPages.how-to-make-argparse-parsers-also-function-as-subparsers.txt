<div class="post-text" itemprop="text">
<p>Say I have some parsers already defined:</p>
<pre><code>foo_parser = argparse.ArgumentParser()
foo_parser.add_argument('-f')

bar_parser = argparse.ArgumentParser()
bar_parser.add_argument('-b')
</code></pre>
<p>Now I want those parsers to appears as sub-parsers.</p>
<pre><code>parser = argparse.ArgumentParser(prog='parent')
subparsers = parser.add_subparsers()

subparsers.add_parser('foo')   # how can I associate these subparsers 
subparsers.add_parser('bar')   # with my foo and bar parsers already defined?
</code></pre>
<p>I know I could do this by repeating all of the add_argument calls, but I'm hoping for a DRY solution.</p>
<p>Does argparse allow this, or do I have to define my subparsers anew?</p>
<p>The reason I am asking, is that I have a collection of stand-alone scripts that I don't want to monkey with, but I would also like to provide a unified interface via <a href="https://docs.python.org/3/library/argparse.html#sub-commands" rel="nofollow">sub-commands</a>.  I want to import the parsers from each of the standalone scripts, and make them behave as subparsers in the unified interface.</p>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried the <code>parents</code> mechanism?  It's a way of populating a new parser (including a subparser) with arguments (and groups) from another parser.  Some even use it as a way of adding a subset of arguments to multiple subparsers.  It copies the arguments (Action objects) by reference.  Usually that works ok, but it imposes limits on customizing the arguments.</p>
<p><a href="https://docs.python.org/3/library/argparse.html#parents" rel="nofollow">https://docs.python.org/3/library/argparse.html#parents</a></p>
<p>==================</p>
<p>A subparser is created with this method:</p>
<pre><code>class _SubParsersAction(Action):
    def add_parser(self, name, **kwargs):
       ....
       parser = self._parser_class(**kwargs)
       ....
       return parser
</code></pre>
<p>In theory it could be customized to work with your predefined parser instead of creating a new one.  It probably would take me a half hour to debug such a change.</p>
</div>
<span class="comment-copy">You can add arguments in a separate method and then just reuse or derive from that method.</span>
<span class="comment-copy"><code>parents</code> works perfectly -- thank you!</span>
