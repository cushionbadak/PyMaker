<div class="post-text" itemprop="text">
<p>I'm having a hard time grasping regex no matter how much documentation I read up on. I'm trying to match everything between a a string and the first occurrence of <code>&amp;</code> this is what I have</p>
<pre><code>link =  "group.do?sys_id=69adb887157e450051e85118b6ff533c&amp;amp;&amp;"
rex = re.compile("group\.do\?sys_id=(.?)&amp;")
sysid = rex.search(link).groups()[0]
</code></pre>
<p>I'm using <a href="https://regex101.com/#python" rel="nofollow">https://regex101.com/#python</a> to help me validate my regex and I can kinda get <code>rex = re.compile("user_group.do?sys_id=(.*)&amp;")</code> to work but the <code>.*</code> is greedy and matches to the last &amp; and im looking to match to the first <code>&amp;</code></p>
<p>I thought <code>.?</code> matches zero to 1 time</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't necessarily need regular expressions here. Use <a href="https://docs.python.org/2/library/urlparse.html"><code>urlparse</code></a> instead:</p>
<pre><code>&gt;&gt;&gt; from urlparse import urlparse, parse_qs 
&gt;&gt;&gt; parse_qs(urlparse(link).query)['sys_id'][0]
'69adb887157e450051e85118b6ff533c'
</code></pre>
<p>In case of <a href="https://docs.python.org/3/library/urllib.parse.html">Python 3</a> change the import to:</p>
<pre><code>from urllib.parse import urlparse, parse_qs
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simply regex out to the <code>&amp;amp</code> instead of the final <code>&amp;</code> like so:</p>
<pre><code>import re
link =  "user_group.do?sys_id=69adb887157e450051e85118b6ff533c&amp;amp;&amp;"
rex = re.compile("user_group\.do\?sys_id=(.*)&amp;amp;&amp;")
sysid = rex.search(link).groups()[0]

print(sysid)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>.* 
</code></pre>
<p>is greedy but </p>
<pre><code>.*? 
</code></pre>
<p>should not be in regex. </p>
<pre><code>.? 
</code></pre>
<p>would only look for any character 0-1 times while </p>
<pre><code>.*? 
</code></pre>
<p>will look for it up to the earliest matching occurrence. I hope that explains it.</p>
</div>
<span class="comment-copy">your link doesn't have user_group, just group</span>
<span class="comment-copy"><code>re.compile("user_group\.do\?sys_id=(.*?)&amp;", re.S)</code></span>
<span class="comment-copy">sorry that was a typing error</span>
<span class="comment-copy">I've been on here too much, I didn't realize that was part of a url. Nice catch!</span>
<span class="comment-copy">so is urlparse preferred over regex?</span>
<span class="comment-copy">@BrianSmith generally speaking, URLs can be quite complicated and, strictly speaking parsing or validating it with regular expressions can be as hard as <a href="http://stackoverflow.com/a/835527/771848">that</a>. In other words, regular expressions is too general of a tool to apply to URL parsing. <code>urlparse</code> is specifically designed for that.</span>
<span class="comment-copy">I agree with @alecxe, his solution is much better for this task</span>
