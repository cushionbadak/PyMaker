<div class="post-text" itemprop="text">
<p>How delete all files in temp?</p>
<p>thanks to kevin i improved it to :</p>
<pre><code>tmp = os.environ.get("TMP")
def remc(tmp):
    if tmp:
        try:
            for f in os.listdir(tmp):
                ntmp = os.path.join(tmp,f)
                os.remove(ntmp)
        except OSError:
            pass 
</code></pre>
<p>no i still got problem with OSError , if i want to continue to the next file how can it be done ?</p>
<p>so far i got this code </p>
<pre><code>tmp = os.environ.get("TMP")
def remc(tmp):
        try:
            if tmp:
                for f in os.listdir(tmp):
                    ntmp = os.path.join(tmp,f)
                    os.remove(ntmp)
            else:
                os.removedir(ntmp)
        except OSError as err:
            print err
</code></pre>
<p>but files i create there manually won't be deleted , if some file in use the program won't continue delete other files ( I should see error for each file )</p>
</div>
<div class="post-text" itemprop="text">
<p>I have not found a <em>great</em> way of getting the default temporary directory, but I have seen platform dependent search lists of where it is supposed to try. On windows, for the active user, the "TMP" environment variable seems to have the path.</p>
<p>Given that, something like this may suit your needs:</p>
<pre><code>import os
tmp = os.environ.get("TMP")
if tmp:
    for f in os.listdir(tmp):
        name = os.path.join(tmp, f)
        try:
            if os.path.isfile(name):
                os.remove(name)
            else:
                #os.rmdir(name) # to only remove empty directories.
                # To remove the directory and all of its contents.
                os.removedirs(name)
        except OSError as e:
            # Specific exception handling could be done based on the 'errno'.
            pass # skip files that are in use on Windows or otherwise cannot be removed.
</code></pre>
<p><strong>References</strong></p>
<ul>
<li><a href="https://docs.python.org/3/library/exceptions.html#OSError" rel="nofollow">OSError documentation</a></li>
<li><a href="https://docs.python.org/3/library/errno.html" rel="nofollow"><code>errno</code> documentation</a></li>
<li><a href="https://docs.python.org/3/library/ctypes.html" rel="nofollow">ctypes documentation</a> for information on <code>winerror</code></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>tmp = os.environ.get("TMP")
def remc(tmp):
    if tmp:
        for f in os.listdir(tmp):
            ntmp = os.path.join(tmp,f)
            try:
                os.remove(ntmp)
            except OSError as errf:
                print errf

    else:
        try:
            os.removedir(ntmp)
        except OSError as errd:
            print errd
</code></pre>
<p>Thanks to all specially to kevin ! :D</p>
</div>
<span class="comment-copy">is that your whole code?</span>
<span class="comment-copy">No , its part of a bigger program</span>
<span class="comment-copy">Create a small program, test it, and post it.</span>
<span class="comment-copy">I see at least three (potential) problems: <i>Always</i>  use <code>os.path.join()</code> to concatenate paths. Also remember to escape your paths. Currently, you are lucky, because neither <code>\A</code>, <code>\L</code> nor <code>\T</code> are valid python character escapes. And finally: You are simply trying to remove a file called <code>*</code>, there's no automatic filename expansion with <code>remove()</code>. Use <code>os.listdir()</code> or get the files inside a directory.</span>
<span class="comment-copy">If you just want the files in the base temp directory, without recursively walking directories, then use <code>for f in next(os.walk(tmp))[-1]</code>. As to error handling, the try-except needs to be inside the loop. <code>tempfile.gettempdir()</code> is a cross-platform way to get the temp directory.</span>
<span class="comment-copy">this one is good but usually temp folders got files in use how can i overcome it and go to the next file if so</span>
<span class="comment-copy">Look into the exceptions that <code>os.remove</code> may raise. If there are ones that match that case, then wrap the remove statement in a "try/except" block to handle those exceptions by just skipping them (<code>pass</code>).</span>
<span class="comment-copy">Oh, I see what you meant. Move the "try/except" inside of the "for" loop.</span>
<span class="comment-copy">But now i got another issue with deleting the folders i get  <code>[Error 5] Access is denied:</code></span>
