<div class="post-text" itemprop="text">
<p>Hello I have this code but am getting these errors</p>
<p><strong>main loop 'tuple' object has no attribute 'read'</strong> AND
<strong>main loop module 'urllib' has no attribute 'urlopen'</strong></p>
<pre><code>def pullData(stock):
    try:
        fileLine = stock+'.txt'
        urlToVisit = 'http://chartapi.finance.yahoo.com/instrument/1.0/'+stock+'/chartdata;type=quote;range=10d/csv'
        sourceCode = urllib.urlopen(urlToVisit).read()
        splitSource = sourceCode.split('\n')

        for eachLine in splitSource:
            splitLine = eachLine.split(',')
            if len(splitLine)==6:
                if 'values' not in eachLine:
                    saveFile = open(fileLine,'a')
                    lineToWrite = eachLine+'\n'
                    saveFile.write(lineToWrite)

        print('Pulled',stock)
        print('sleeping')
        time.sleep(5)

    except Exception as e:
        print('main loop',str(e))

pullData(stockToPull)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, <code>urlopen()</code> is in <a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen" rel="nofollow"><code>urllib.request</code></a>, so you can do this:</p>
<pre><code>from urllib.request import urlopen

sourceCode = urlopen(urlToVisit).read()
</code></pre>
<p>Regarding the rest of your code you might be better off using a HTML parser such as <a href="https://www.crummy.com/software/BeautifulSoup/" rel="nofollow">BeautifulSoup</a> or <a href="http://lxml.de/lxmlhtml.html" rel="nofollow">lxml.html</a>.</p>
</div>
<span class="comment-copy">How are you getting two errors? Is mhawke's answer not helping?</span>
<span class="comment-copy">Thanks. solves that. However, now I get this message when running the last line of code:                                                                          pullData(stockToPull) main loop a bytes-like object is required, not 'str'</span>
<span class="comment-copy"><code>urllib.urlopen(urlToVisit).read()</code> returns a <code>bytes</code> object. You then attempt to split the bytes object with a <code>str</code> object, which can't be done. You need to either decode the bytes object before splitting with <code>splitSource = sourceCode.decode('ascii').split('\n')</code>, or you can just iterate over the response object returned by <code>urlopen()</code> remembering to decode each line before processing further.</span>
