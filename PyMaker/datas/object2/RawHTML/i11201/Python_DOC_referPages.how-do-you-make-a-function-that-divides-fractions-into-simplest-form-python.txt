<div class="post-text" itemprop="text">
<p>I am taking a class and i'm confused. It would really help if you could guide me through the proccess of this and tell me what I am doing wrong. I have an error that has to do with the parentheses since theres nothing in them. I am a newbie so i'm sorry.</p>
<pre><code>def FractionDivider(a,b,c,d):
    n = ()
    d = ()
    n2 = ()
    d2 = ()
    print int(float(n)/d), int(float(n2)/d2)
    return float (n)/d / (n2)/d2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your function is taking in arguments <code>a</code>, <code>b</code>, <code>c</code>, and <code>d</code>, but you're not using them anywhere. You're instead defining four new variables. Try:</p>
<pre><code>def FractionDivider(n, d, n2, d2):
</code></pre>
<p>and get rid of your empty parentheses bits, see if that does what you are trying to do.</p>
</div>
<div class="post-text" itemprop="text">
<p>you cannot declare a variable as you are doing n = () and then try to assign an integer or string to it. </p>
<p>n=() does not mean:</p>
<blockquote>
<p>n equals nothing at the moment but i will assign a  variable shortly.</p>
</blockquote>
<p>() ---&gt; Tuples  <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow">https://docs.python.org/3/tutorial/datastructures.html</a></p>
<blockquote>
<p>They are two examples of sequence data types (see Sequence Types â€”
  list, tuple, range). Since Python is an evolving language, other
  sequence data types may be added. There is also another standard
  sequence data type: the tuple.</p>
</blockquote>
<p>so within your function, if you want you varialbes to be assigned what is passed as an argument</p>
<p>for Ex:</p>
<pre><code>def FractionDivider(a,b,c,d):

    n = a
    d = b
    n2 = c
    d2 = d
</code></pre>
<p>consider reading more on tuples from the above link</p>
</div>
<div class="post-text" itemprop="text">
<p><code>n=()</code> is a valid python statement and there is no issue with that. However <code>n=()</code> is evaluating <code>n</code> to an empty <code>tuple()</code>. I believe that what you are trying to do is as follows. </p>
<pre><code>def FractionDivider(a,b,c,d):
    '''
        Divides a fraction by another fraction...
        '''

    n = a #setting each individual parameter to a new name.
    d = b #creating a pointer is often useful in order to preserve original data
    n2 = c #but it is however not necessary in this function
    d2 = d
    return (float(n)/d) / (float(n2)/d2) #we return our math, Also order of operations exists here '''1/2/3/4 != (1/2)/(3/4)'''

print FractionDivider(1, 2, 3, 4) #here we print the result of our function call.

#indentation is extremely important in Python
</code></pre>
<p>here is a simpiler way of writing the same function</p>
<pre><code>def FractionDivider_2(n,d,n2,d2):
    return (float(n)/d) / (float(n2)/d2)

print FractionDivider_2(1,2,3,4)
</code></pre>
</div>
<span class="comment-copy">Please update the post with the error you are getting.</span>
<span class="comment-copy">Thanks for the help! I put down what you put, but I still didn't get right answer.</span>
<span class="comment-copy">The code for the first function has an error... <code>d2 = d</code> just assigns <code>d2</code> to the argument <code>b</code>. Note also that Python will do float division with the <code>/</code> operator, so you don't need to cast things with <code>float()</code>.</span>
<span class="comment-copy">You are correct regarding naming, I was attempting to keep to the OPs naming convention. As for float division, pythons / operator will perform float division however depending on your OS and python version it will return the int version if one of the values are not of type float.</span>
