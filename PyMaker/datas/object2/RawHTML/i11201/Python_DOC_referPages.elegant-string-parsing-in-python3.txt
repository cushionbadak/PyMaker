<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/79968/split-a-string-by-spaces-preserving-quoted-substrings-in-python">Split a string by spaces — preserving quoted substrings — in Python</a>
<span class="question-originals-answer-count">
                    16 answers
                </span>
</li>
</ul>
</div>
<p>I have strings that need to be placed into lists; for instance I require that</p>
<pre><code>C C .0033 .0016 'International Tables Vol C Tables 4.2.6.8 and 6.1.1.4' C
</code></pre>
<p>becomes</p>
<pre><code>['C', 'C', '.0033', '.0016', 'International Tables Vol C Tables 4.2.6.8 and 6.1.1.4', 'C']
</code></pre>
<p>So everything in quotes becomes a single list element; otherwise, everything separated by whitespace becomes a single list element.</p>
<p>My first idea was a simple split, place the items that don't contain <code>'</code> into a new array, and then place the ones that are in a quoted-section back together:</p>
<pre><code>&gt;&gt;&gt; s.split()
['C', 'C', '.0033', '.0016', "'International", 'Tables', 'Vol', 'C', 'Tables', '4.2.6.8', 'and', "6.1.1.4'", 'C']
&gt;&gt;&gt; arr = []
&gt;&gt;&gt; i = 0
&gt;&gt;&gt; while i &lt; len(s):
        v = ''
        if s[i].startswith("'"):
            while not s[i].endswith("'"):
                v = v.append(s[i]+ " ")
                i += 1
            v.append(s[i])
            arr.append(v)
        else:
            arr.append(s[i])
</code></pre>
<p>But this strategy is pretty ugly, and in addition I have to assume that the string was split on a single space.</p>
<p><code>s.partition("'")</code> seemed very promising:</p>
<pre><code>&gt;&gt;&gt; s.partition("'")
('C C .0033 .0016 ', "'", "International Tables Vol C Tables 4.2.6.8 and 6.1.1.4' C")
</code></pre>
<p>but it's awkward because I have to partition again as I iterate through, and it's context-sensitive as to which one <em>was</em> in quotes.</p>
<p>Is there a simple Python3 way to split this string as described above?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/shlex.html" rel="nofollow"><code>shlex</code></a> module. Example:</p>
<pre><code>import shlex

print(shlex.split("C C .0033 .0016 'International Tables Vol C Tables 4.2.6.8 and 6.1.1.4' C"))
</code></pre>
</div>
<span class="comment-copy">OMG how did it know?</span>
<span class="comment-copy">Bad choice of words. Edited @NickThompson</span>
