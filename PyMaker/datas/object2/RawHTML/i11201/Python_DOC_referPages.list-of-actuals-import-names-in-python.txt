<div class="post-text" itemprop="text">
<p>With "pip freeze" I'll get a list of package  names. e.g.:</p>
<pre><code>Django==1.9.7
psycopg2==2.6.1
djangorestframework==3.3.3
djangorestframework-jwt==1.8.0
django-rest-swagger==0.3.7
django-environ==0.4.0
python-dateutil==2.5.3
django-sendfile==0.3.10
</code></pre>
<p>Is there any way to receive a list of actual names to <code>import</code>? e.g. instead of <code>djangorestframework</code> =&gt; <code>rest_framework</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, top_level.txt will be a correct module name. You can use pkg_resources module to extract metadata from packages.</p>
<p>Python code for this:</p>
<pre><code>import pkg_resources


def read_requirements(requirements_file):
    with open(requirements_file, 'r') as f:
        return f.read().splitlines()


def get_package_name(package):
    return list(pkg_resources.get_distribution(package)._get_metadata('top_level.txt'))[0]


requirements = read_requirements('/path/to/requirements.txt')
packages = [get_package_name(p) for p in requirements]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may use the standard <a href="https://docs.python.org/3/library/pkgutil.html"><code>pkgutil</code></a> module to get the list of top-level imports like this:</p>
<pre><code>import pkgutil
list(pkgutil.iter_modules())
</code></pre>
<p>That will only find modules that live in regular files, zip files or another loader that supports module enumration. Should be most of them on a standard system.</p>
<p>The result is a list of 3-tuple, with the loader, the module name, and whether it is a single module or a package. If you are only interested in the module name, simply do:</p>
<pre><code>list(item[1] for item in pkgutil.iter_modules())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another way is to look at the first line of this file : </p>
<pre><code># If output of pip freeze is djangorestframework==3.3.3
# Then your dir prefix becomes "djangorestframework-3.3.3"

../lib/python2.7/site-packages/&lt;dir-prefix&gt;.dist-info/top_level.txt 

# e.g.
../lib/python2.7/site-packages/djangorestframework-3.3.3.dist-info/top_level.txt 
</code></pre>
</div>
<span class="comment-copy">Try  <code>pip list</code>. This may be you looking for.</span>
<span class="comment-copy">@RahulKP that gives you the package name, but <i>not</i> necessarily the thing you <code>import</code>.</span>
<span class="comment-copy">Isn't it in name of the actual module stored in C:\Python27\Lib\site-packages (windows)</span>
