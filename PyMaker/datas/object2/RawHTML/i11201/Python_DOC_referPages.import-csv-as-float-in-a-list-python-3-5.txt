<div class="post-text" itemprop="text">
<p>I need to import a csv file, which contains about 1.000.000 numbers. they are all separated with decimals (,) so: 1,2,3,4,...</p>
<p>they just ordered easily in the file: no blanks no paragraphs.</p>
<p>This is my actual code:</p>
<pre><code>import statistics
import csv

with open('test.csv', 'r') as f:
    reader = csv.reader(f)
    zahlenliste = list(reader)

print(zahlenliste)

# x = statistics.mean(zahlenliste)
# print(x)
</code></pre>
<p>I tried many codes, as on stackoverflow was presented, but I just couldn't execute it without any error.</p>
<p>with all the numbers in the list, i want the arithmetic mean as a result (which is actutally in commentary). with the print(zahlenliste) i wanted to look what the content of the list actually is and looks like:</p>
<pre><code>[['1', '2', '3', '4', '5']]
</code></pre>
<p>would you be kind and help me just adding the right function to import the numbers as float to use it in the arithmetic.mean function?</p>
</div>
<div class="post-text" itemprop="text">
<p>The items in your <code>zahlenliste</code> are characters, you'll need to cast them to numbers (<code>int</code> or <code>float</code>). A <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> comes in handy here:</p>
<pre><code>zahlenliste = [[int(item) for item in line] for line in reader]
</code></pre>
<p>Now you've got a list of lists: The inner lists contain a line's values, the outer list represent the lines.
If you need to calculate the mean value for each line, use another list comprehension:</p>
<pre><code>mittelwerte = [statistics.mean(line) for line in zahlenliste]
</code></pre>
</div>
<span class="comment-copy">It is much easier for us to see what is going wrong if you include the actual error message.</span>
<span class="comment-copy">Welcome to SO :-) Please look at <a href="http://stackoverflow.com/help/how-to-ask">how to ask</a></span>
<span class="comment-copy">Thanks for the edit Ulrich, @JETM: i know that it would be better, but as i am a beginner at importing files, i just tried few code snippets and tried to change them to my own code. so i just got a few different errors.</span>
<span class="comment-copy">as i execute my actual code i get:  File "...\wa\prog\listezahlen.py", line 11, in &lt;module&gt;     x = statistics.mean(zahlenliste)   File "...\\Python35-32\lib\statistics.py", line 293, in mean     return <i>sum(data)/n   File "...\\lib\statistics.py", line 162, in _sum     n, d = exact_ratio(x)   File "...\\lib\statistics.py", line 218, in _exact_ratio     raise TypeError(msg.format(type(x).__name_</i>)) from None TypeError: can't convert type 'list' to numerator/denominator</span>
<span class="comment-copy">Thanks, but i get this error: float() argument must be a string, a bytes-like object or a number, not 'list'</span>
<span class="comment-copy">Of course, forgive me, I missed the nested statement. Should work by now</span>
<span class="comment-copy">it works! great. but unfortunately i cant work further with the result. after using the arithmetic.mean it shows this error again: "can't convert type 'list' to numerator/denominator"</span>
<span class="comment-copy">Thanks Finewood! It works so great!</span>
