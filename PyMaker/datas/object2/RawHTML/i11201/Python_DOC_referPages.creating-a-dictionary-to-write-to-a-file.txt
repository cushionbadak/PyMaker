<div class="post-text" itemprop="text">
<p>I am trying to change the format in which a file is written. The file is written in a generic file format. I am putting headers into the file and writing it so that it can be read by another program in the future by simply using a pandas dictionary or an xarray datarray. In order to do this, I am trying to make columns in the file that are more separate than what I have now. I have the following code:</p>
<pre><code>def cvrtpa(fle,separation_character,(labels)):
    import numpy as np
    import pandas as pd
    labels[-1]=labels[-1]+'\n'
    flabels=labels
    finlabel = np.array([flabel + separation_character for flabel in flabels])
    infile=open(fle,'r')
    templines=infile.readlines()
    vardict = {} #dict version
    for i in finlabel:
        for j in range(len(templines)):
            split=templines[j]            
            x = split.split()
            vardict.setdefault(finlabel[i],[]).append(x)
    infile.close()
    outfile=open(fle, 'w')
    outfile.write(finlabel)
    outfile.write(temp)
    outfile.close()
    mfile=open(fle,'r')
    data=mfile.readlines()
    return data

fl='.../Summer 2016/Data/Test/Test'
label=['Year','Month','Day','Hour','Minute','Precipitation']
xx=cvrtpa(fl,'',label)
</code></pre>
<p>I am not overly familiar with dictionaries and so it has been a bit difficult to come up with the code I have. I know there may be inconsistencies/errors.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import json

# Create some random data structure
animals = zip(['dogs', 'cats', 'mice'], [124156, 858532, 812885])
data = {k:{v: {k: [v, v, v, k, v, {k: [k, k, k, k]}]}} for k, v in animals}

# Create a new file, dump the data to it
with open('filename.ext', 'w+') as file:
    json.dump(data, file, indent=4, sort_keys=False)

# Open the same file, load it back as a new variable
with open('filename.ext') as file:
    new_dictionary = json.load(file)

# Make some changes to the dict
new_dictionary['new_key'] = 'hello python'

# Open the file back up again and rewrite the new data
with open('filename.ext', 'w+') as file:
    json.dump(new_dictionary, file, indent=4)
</code></pre>
</div>
<span class="comment-copy">Use json, and the dump() method <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow noreferrer">docs.python.org/3/library/json.html#json.dump</a></span>
<span class="comment-copy">If you want to read from and write to a file with a dict, then you can use PyYaml, it's a really good module.</span>
<span class="comment-copy">@gr1zzly be4r I need to create the dictionary from the file and the list that is at the bottom, though. So I am not sure how I enter that into the json.dump() command.</span>
<span class="comment-copy">OP, this answer uses the method that I was referring to. The answer could  also be update to show usage of <code>json.load()</code> which would read contents of a JSON file into a Python dictionary.</span>
<span class="comment-copy">Now, the only problem with this file type is that it is not the same as I am trying to output. It is very different from NetCDF files, which is basically what I am attempting to create, or create something that looks and behaves like NetCDF files so that I can compare the data in the generic file formats to this one. That is, I am starting with a generic file format similar to a text file and trying to make it work with NetfCDF files.</span>
