<div class="post-text" itemprop="text">
<p>Here in this code they are checking the equality of <code>self</code> with self.parent.leftChild    . why they are doing this </p>
<pre><code>def isLeftChild(self):
    return self.parent and self.parent.leftChild == self
</code></pre>
<p>The site is:-<code>class TreeNode</code>: <a href="http://interactivepython.org/runestone/static/pythonds/Trees/SearchTreeImplementation.html" rel="nofollow">http://interactivepython.org/runestone/static/pythonds/Trees/SearchTreeImplementation.html</a></p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Here in this code they are checking the equality of self with the other two parameters.</p>
</blockquote>
<p>What? Where? No. <code>a and b == c</code> doesn't relate <code>a</code> and <code>c</code> together in any way.</p>
<pre><code>self.parent and self.parent.leftChild == self
</code></pre>
<p>checks if</p>
<ol>
<li><code>self.parent</code> has a meaningful value (is not <code>None</code>) and, if so,</li>
<li><code>self.parent.leftChild</code> equals to the given <code>self</code>.</li>
</ol>
<p>In other words, it does what its name says: it checks if "we" are identical to our parent's left child. This, of course, only works if we have a parent. If we haven't, we aren't its left child.</p>
<p>Note: What I just said about "is not <code>None</code>" is only half the truth. To be exact, it checks if there is a "truthy value", i. e. a value which evaluates true in the context of conditional expressions. As one normally uses <code>None</code> in the case of an absent node such as <code>parent</code>, what I wrote is clear enough.</p>
</div>
<span class="comment-copy">1. <code>self</code> is not an operator. 2. What do you mean <i>"how"</i>? 3. It's not clear which value you're referring to as which. Is it the formulation <code>foo and foo.bar == foo</code> that you find surprising? It's not actually checking equality with two parameters, it's checking first that <code>self.parent</code> is truthy (probably <code>not None</code>) and secondly that its <code>leftChild</code> attribute is equal to <code>self</code>.</span>
<span class="comment-copy"><code>(self.parent is not None) and (self.parent.leftChild == self)</code> is probably a less confusing formulation, does that make more sense?</span>
<span class="comment-copy"><code>self</code> is not an operator, it is a reference to the object for which a method is called. If <code>node.leftChild()</code> is invoked, <code>self == node</code> <i>inside</i> the <code>leftChild</code> code. In other languages, like Java or C++ or JavaScript, the same thing is called <code>this</code>. <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">Read more</a>.</span>
<span class="comment-copy">See e.g. <a href="http://stackoverflow.com/q/2709821/3001761">stackoverflow.com/q/2709821/3001761</a> for more explanation of <code>self</code>. As a starting point, note that it's <i>just a parameter of the method</i>.</span>
<span class="comment-copy"><code>self</code> is the instance of the class the method belongs to. If you're not familiar with classes you should read the <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">tutorial</a> first.</span>
<span class="comment-copy">sir can you please explain the second point</span>
<span class="comment-copy">"Sir" sounds a bit ironical onplatforms like these. Anyway, imagine you are an object in a tree, in a kind of parent/child relationship. In this structure, every child knows its parent, and every parent knows its (left and right) childs. So here we ask about our parent (<code>self.parent</code>) and ask this parent about its left child (<code>self.parent.leftChild</code>). If this one is identical to ourselves, we found out that we are the left child of our parent.</span>
<span class="comment-copy">Yes I started Getting you , but again they are doing (==self)what is stored in (self) and also in the link that i have mentioned they in the same class they are in the replaceNodedata method they are even putting the value of self    (self.leftChild.parent = self) it confuses me</span>
<span class="comment-copy">Might be slightly more accurate to say that <code>self.parent</code> checks if it has a truthy value instead of <code>not None</code></span>
<span class="comment-copy">@VarunRathi I am not sure what exactly confuses you. Is it just the lack of the basics? An explanation what is <code>self</code> can be found directly on the right of the question, there are links to other questions about the same topic ("Linked", "Related"). Besides, there is a very fine tutorial at the python doc site. (You were pointed to that by other commenters directly below your question.) Essentially, <code>self</code> holds a reference to the object just worked on, the object whose method just has been called. And <code>xy == self</code> compares if the variable <code>xy</code> refers to the same object as <code>self</code>.</span>
