<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1373164/how-do-i-create-a-variable-number-of-variables">How do I create a variable number of variables?</a>
<span class="question-originals-answer-count">
                    16 answers
                </span>
</li>
</ul>
</div>
<p>Suppose I have lists as follows:</p>
<pre><code>candy = ['a','b','c']
fruit = ['d','e','f']
snack = ['g','h','i']
</code></pre>
<p>and a string</p>
<pre><code>name = 'fruit'
</code></pre>
<p>I want to use string <code>name</code> for accessing list and it's content. In this case it should be <code>fruit</code>. I will use <code>name</code> for iterating list. As:</p>
<pre><code>for x in name:
    print x
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't understand what exactly you're trying to achieve by doing this but this can be done using <code>eval</code>. I don't recommend using <code>eval</code> though. It'd be better if you tell us what you're trying to achieve finally. </p>
<pre><code>&gt;&gt;&gt; candy = ['a','b','c']
&gt;&gt;&gt; fruit = ['d','e','f']
&gt;&gt;&gt; snack = ['g','h','i']
&gt;&gt;&gt; name = 'fruit'
&gt;&gt;&gt; eval(name)
['d', 'e', 'f']  
</code></pre>
<p><strong>EDIT</strong> </p>
<p>Look at the other answer by Sнаđошƒаӽ. It'll be better way to go. <code>eval</code> has security risk and I do not recommend its usage.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/2/library/functions.html#globals" rel="noreferrer"><code>globals()</code></a> like so:</p>
<pre><code>for e in globals()[name]:
    print(e)
</code></pre>
<p>Output:</p>
<pre><code>d
e
f
</code></pre>
<p>And if your variables happen to be in some local scope you can use <a href="http://docs.python.org/2/library/functions.html#locals" rel="noreferrer"><code>locals()</code></a></p>
<p><strong>OR</strong> you can create your dictionary and access that:</p>
<pre><code>d = {'candy': candy, 'fruit': fruit, 'snack': snack}
name = 'fruit'

for e in d[name]:
    print(e)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a dictionary!</p>
<pre><code>my_dictionary = { #Use {} to enclose your dictionary! dictionaries are key,value pairs. so for this dict 'fruit' is a key and ['d', 'e', 'f'] are values associated with the key 'fruit'
                   'fruit' : ['d','e','f'], #indentation within a dict doesn't matter as long as each item is separated by a , 
             'candy' : ['a','b','c']           ,
                      'snack' : ['g','h','i']
    }

print my_dictionary['fruit'] # how to access a dictionary.
for key in my_dictionary:
    print key #how to iterate through a dictionary, each iteration will give you the next key
    print my_dictionary[key] #you can access the value of each key like this, it is however suggested to do the following!

for key, value in my_dictionary.iteritems():
    print key, value #where key is the key and value is the value associated with key

print my_dictionary.keys() #list of keys for a dict
print my_dictionary.values() #list of values for a dict
</code></pre>
<p>dictionaries by default are not ordered, and this can cause problems down the line, however there are ways around this using multidimensional arrays or orderedDicts but we will save this for a later time!
I hope this helps!</p>
</div>
<span class="comment-copy">You can do this with eval but I'd suggest using dictionaries to hold those lists instead.</span>
<span class="comment-copy">With more emphasis: you <b>do not use a string value as a variable name in python</b>. Python has powerful tools and data structures, use them instead.</span>
<span class="comment-copy">@spectras Please give me reference of data structures I can use in lieu of it.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">Python Datastructures</a>, or <a href="http://learnpythonthehardway.org/book/ex39.html" rel="nofollow noreferrer">this dict tutorial</a>.</span>
<span class="comment-copy">Seriously, use this instead of <code>eval</code>, especially if the value passed in will be from the user - which lets the user effectively run everything which is a <b>huge</b> security risk.  Though using a <code>dict</code> will be better.</span>
<span class="comment-copy">@metatoaster I think that comment of yours should be on the OP's question, don't you think? ;-) Thanks.</span>
<span class="comment-copy">Indeed. But this question and its answers are a textbook example of giving a detailed explanation to someone asking how to shoot himself in the foot.</span>
<span class="comment-copy">using <code>globals()</code> is nice idea.</span>
<span class="comment-copy">@MuhammadYaseenKhan&gt; no it's not. It exposes many, many variables, including imported modules and internal python variables. Just to get a dictionary, so why not use a dictionary in the first place? That's what they are for.</span>
<span class="comment-copy">Some times the best of the answers are  the hardest to use :-)</span>
<span class="comment-copy">@BhargavRao But more often than naught, the easiest answers are the hardest to accept!</span>
<span class="comment-copy">What more does your answer show when approach using dict is already shown in an existing answer. Plus, your answer has things which are irrelevant, eg orderedDict which has nothing to do in the context.</span>
<span class="comment-copy">Your answer was edited to include a dict after mine was already posted. As for the information, I only tried to explain the strengths and weaknesses of using a dictionary.</span>
