<div class="post-text" itemprop="text">
<p>I have a string and I want to replace <code>the</code> every time after its second occurrence only.   </p>
<pre><code>s = "change the string in the sentence and the save"
</code></pre>
<p>I would like the replace the word <code>the</code> to <code>hello</code>. But except the first one.</p>
<p>Output should be:</p>
<pre><code>change the string in hello sentence and hello save
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>def replace_not_first(str, word, replace):
    str_arr = str.split(word)
    return str_arr[0] + word + replace.join(str_arr[1:])

str = "change the string in the sentence and the save"
print(replace_not_first(str, 'the', 'hello'))
</code></pre>
<p>prints: <code>change the string in hello sentence and hello save</code></p>
</div>
<div class="post-text" itemprop="text">
<p>I would split the string from right with the word you're going to replace use <a href="https://docs.python.org/3/library/stdtypes.html#str.rsplit" rel="nofollow"><code>str.rsplit()</code></a> function, but only split <a href="https://docs.python.org/3/library/stdtypes.html#str.count" rel="nofollow"><code>s.count('the') - 1</code></a> times.</p>
<p>Then, join the output list with <code>hello</code>:</p>
<pre><code>&gt;&gt;&gt; s.rsplit('the', s.count('the') - 1)
['change the string in ', ' sentence and ', ' save']

&gt;&gt;&gt; 'hello'.join(s.rsplit('the', s.count('the') - 1))
'change the string in hello sentence and hello save'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try the following one liner solution.</p>
<pre><code>string = 'change the string in the sentence and the save'
new_string = string[:string.find('the')+3] + string[string.find('the')+3:].replace('the', 'hello')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I hope this will do the job.</p>
<pre><code>str = str.partition('the')[0] + str.partition('the')[1] + str.partition('the')[-1].replace('the','hello')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; str = "change the string in the sentence and the save"
&gt;&gt;&gt; str.replace('the', 'hello')
&gt;&gt;&gt; str.replace('hello', 'the',1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work</p>
<pre><code>string = "change the string in the sentence and the save"
the_arr = string.split("the")
print the_arr[0] + "the" + "hello".join(the_arr[1:])`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>&gt;&gt;&gt; s = "change the string in the sentence and the save"
&gt;&gt;&gt; s.split("the",1)[0]+"the" + s.split("the",1)[1].replace("the","hello")
'change the string in hello sentence and hello save'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can split the string into parts:    </p>
<pre><code>string = "change the string in the sentence and the save"

splitString = string.split()
firstIndex = splitString.index('the')

part1 = ' '.join(splitString[:firstIndex+1])
part2 = ' '.join(splitString[firstIndex+1:]).replace('the','hello')

newString = part1 + ' ' + part2
</code></pre>
<p>Or in one line:</p>
<pre><code>newString = ' '.join(['hello' if j == 'the' and i != string.split().index('the') else j for i, j in enumerate(string.split())])
</code></pre>
</div>
<span class="comment-copy"><code>str.partition('the')</code> needs to go through the whole text and your code is wastefully doing it three times.</span>
<span class="comment-copy">Do: <code>first, the, rest = str.partition('the'); str = first + the + rest.replace('the', 'hello')</code></span>
<span class="comment-copy">I guess this is not correct way. coz what if the sentence is like "hello change the string in the sentence and the save". your code will replace 1st hello which is in original string.</span>
<span class="comment-copy">I don't want to change the first one value. i need to change from the second one itself</span>
<span class="comment-copy">This does not work if <code>**hello**</code> is already in the string and is located before the first <code>the</code>. Such as: <code>**hello** change the string in the sentence and the save</code></span>
<span class="comment-copy">@lalitumbarkar nice little trick.</span>
