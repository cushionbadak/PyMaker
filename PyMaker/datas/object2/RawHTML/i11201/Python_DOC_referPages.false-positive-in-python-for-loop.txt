<div class="post-text" itemprop="text">
<p>I've been writing a simple method to check if a web address has subdirectories and, if it does, separate them for me into a list. The code I wrote should ignore the last subdirectory the URL has (this was a mistake I realized after I noticed the loop was iterating about 4 times while checking a URL with a single subdirectory).</p>
<p>Here is the code:</p>
<pre><code>import re

def check_web_address(web_address):
    #set the pattern, then check if it matches
    pattern = re.compile(r"[\w\-\.]*")
    pat_check = pattern.match(web_address)

    #if it does, separate the subdirs, assuming we checked for '/' earlier
    if pat_check:
        pattern_span = pat_check.span()
        web_add_no_subdir = web_address[pattern_span[0]:pattern_span[1]]
        raw_web_subs = web_address[pattern_span[1]:]
        web_subs = []

        """Check if there is an additional slash,
            then separate our subdir if the regex matches."""
        slash = "/"
        for slash in raw_web_subs[1:]:
            pat_span = pattern.match(raw_web_subs[1:]).span()
            real_end = pat_span[1]+1
            web_subs.append(raw_web_subs[:real_end])
            raw_web_subs = raw_web_subs[real_end:]

        separated = [
            web_add_no_subdir,
            web_subs
            ]
        return separated
    else:
        return None
</code></pre>
<p>This code actually returns a subdirectory, as my unittest says it ran the test successfully:</p>
<pre><code>checked_add = wc.check_web_address("www.google.com/docs")
self.assertEqual(checked_add[0], 'www.google.com')
self.assertEqual(checked_add[1][0], '/docs')
</code></pre>
<p>So, I tested the following in the python console:</p>
<pre><code>&gt;&gt;test = "/docs"
&gt;&gt;"/" in test[1:]
false
</code></pre>
<p>Also, if I ask python to print</p>
<pre><code>raw_web_subs[1:]
</code></pre>
<p>Before the loop begins, I get the string "docs", without a forward slash.</p>
<p>What am I missing here?</p>
</div>
<div class="post-text" itemprop="text">
<p>As @TadhgMcDonald-Jensen explained, what is happening is that Python is iterating over each one of the characters, @Evert's suggested using a 'while' loop, which gives the result I was originally looking for.</p>
<p>I'll probably end up using <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow">urllib.parse</a> as @Blckknght suggested. </p>
<p>@TheLazyScripter Mentioned that what can also be done is to separate the string using test = some_string_url.split('/'). This is a much more elegant solution than what I had in mind.</p>
<p>Thank you everybody.</p>
</div>
<span class="comment-copy">What is the issue?   if <code>raw_web_subs = "/docs"</code> then the loop <code>for slash in raw_web_subs[1:]:</code> will iterate over <code>'d', 'o', 'c', 's'</code>, that is 4 times...</span>
<span class="comment-copy"><code>slash = "/"; for slash in raw_web_subs[1:]:</code> I'm not entirely sure what you want this to do, but your console example suggests that you want to use the <code>for</code> statement as an <code>if</code> statement. That doesn't work that way.</span>
<span class="comment-copy">Try <code>while slash in raw_web_subs[1:]:</code> instead.</span>
<span class="comment-copy">Is there a reason you're writing the whole pattern matching bits yourself, rather than using <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer"><code>urllib.parse</code></a>?</span>
<span class="comment-copy">As for why you only receive <code>'docs'</code> mutable objects in python indexes start at <code>0</code> therefore a <code>splice</code> of <code>test[1:]</code> will start at the 1 index and end at the end or -1. if you want to get the <code>'/'</code> you would have to grab the <code>test[0:]</code> however because a string is actually a mutable object in Python, there is no need to splice it. You could just say <code>if '/' in test:</code> and for determining if a string has a subdirectory you could just split the string at '/' using <code>test = some_string_url.split('/')</code> there is probably no need for <code>re</code> at all. Hope this explained it well.</span>
<span class="comment-copy">this is why when my condition for a while loop is <code>x in y</code> I use brackets: <code>while (slash in raw_web_subs[1:]):</code> is perfectly valid and clearly indicates the condition where <code>for (slash in raw_web_subs[1:]):</code> is both syntactically invalid and not at all what was intended.</span>
<span class="comment-copy">@TadhgMcDonald-Jensen That's a good trick, I'll keep that in mind so I don't get the two mixed up again!</span>
