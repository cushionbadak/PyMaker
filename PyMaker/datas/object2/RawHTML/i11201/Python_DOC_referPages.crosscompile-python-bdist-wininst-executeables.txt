<div class="post-text" itemprop="text">
<p>I'm using a 64bit Windows machine with 64bit python3. I need to build a installable package for a windows 32bit machine and stumbled upon the cross compile feature of the bdist feature: <a href="https://docs.python.org/3/distutils/builtdist.html" rel="nofollow">https://docs.python.org/3/distutils/builtdist.html</a></p>
<p>I'm using a setup.py like this:</p>
<pre><code>from ez_setup import use_setuptools
use_setuptools()

from setuptools import setup, find_packages

setup(name='mypackage',
      version='1.0',
      description='Some Description',
      install_requires=['requests'],
      package_dir={'': 'src'},
      packages=[''],
      entry_points = {'console_scripts': ['somescript = foobar:main']},
      )
</code></pre>
<p>And build the install packages like so:</p>
<pre><code>python setup.py build --plat-name=win32 bdist_wininst --user-access-control auto
python setup.py build --plat-name=win-amd64 bdist_wininst --user-access-control auto
</code></pre>
<p>In both cases I get the correct executeable format for the specified architecture but the defined console_script <code>somescript</code> was not executeable after installation.
The python documentation says that I need to crosscompile the whole python package for windows - but I'am uncertain if this is even necessary because the installer was for the right architecture and I got no error message while the build process. 
Is there something wrong with the command? Do I really need to crosscompile or is it sufficiant to have a second 32bit installation of python? </p>
</div>
<div class="post-text" itemprop="text">
<p>As I found out this is a reported bug <a href="https://github.com/pypa/setuptools/issues/253" rel="nofollow">https://github.com/pypa/setuptools/issues/253</a></p>
<p>The setuptools do only check for the OS architecture and ignore the plat-name string for the installation of scripts.</p>
<p>Workaround (until this issue is closed): Use the target architecture for building the wininst.</p>
</div>
