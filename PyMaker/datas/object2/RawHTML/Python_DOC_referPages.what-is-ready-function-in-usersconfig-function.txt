<div class="post-text" itemprop="text">
<p>I have trouble understanding this code</p>
<pre><code>from django.apps import AppConfig


class UsersConfig(AppConfig):
    name = 'users'

    def ready(self):
        import users.signals
</code></pre>
<p>Some signals are imported in ready function but what is <code>ready(self)</code> function doing here? and <code>name</code> variable stated within is a built-in keyword? I have studied the documentation I didn't grasp anything. Please explain what is the meaning of this </p>
<blockquote>
<p>Subclasses can override this method to perform initialization tasks
  such as registering signals. It is called as soon as the registry is
  fully populated.</p>
<p>Although you can’t import models at the module-level where AppConfig
  classes are defined, you can import them in ready(), using either an
  import statement or get_model().</p>
</blockquote>
<p>and please explain it in simple words. Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>Django applications are merely python packages that interact with django framework. But at some point, django needs to keep the record of these packages. For example, for creating migrations.</p>
<p>To keep record of applications, django maintains an app registry internally, and maintains record using instances of classes inherited from <code>AppConfig</code> (The one you posted in your code).</p>
<p><strong>Ready function</strong></p>
<p>As documentation states,</p>
<blockquote>
<p>It is called as soon as the registry is fully populated.</p>
</blockquote>
<p>I have explained above what registry they are talking about.</p>
<blockquote>
<p>Some signals are imported in ready function but what is ready(self)
  function doing here?</p>
</blockquote>
<p>Because ready function is called as soon as registry is ready,</p>
<pre><code>def ready(self):
    import users.signals
</code></pre>
<p>means file <code>users.signals</code> file will be imported at the same time and definitely code inside it will be executed and register our signal.</p>
<p>Now it makes sense that we can use ready function to execute some code that needs to be executed immediately after application starts (Like registering signals). </p>
<blockquote>
<p>Although you can’t import models at the module-level where AppConfig
  classes are defined, you can import them in ready(), using either an
  import statement or get_model().</p>
</blockquote>
<p>means we cannot import models from this application in <code>apps.py</code> the way we import them.</p>
<pre><code>from users.models import SOME_MODEL
</code></pre>
<p>we can't do that. But if we need to access some model in ready function, <code>AppConfig</code> class has <code>get_model</code> function to get them.</p>
<p>I hope it clears your mind.</p>
</div>
<span class="comment-copy">@basirpayenda You are very welcome and please remove your above comment containing your contact number. You should avoid sharing your personal info on public forums. I'll ping you on quora. Regads,</span>
