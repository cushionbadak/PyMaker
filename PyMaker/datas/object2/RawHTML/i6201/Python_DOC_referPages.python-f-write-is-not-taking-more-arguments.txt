<div class="post-text" itemprop="text">
<p>I am having a python code like this</p>
<pre><code>f=open('nv.csv','a+')
a=10+3
b=3+12
c=3+13
f.write(a,b,c)
</code></pre>
<p>This returns the output as</p>
<pre><code>  f.write(a,b,c)
TypeError: function takes exactly 1 argument (3 given)
</code></pre>
<p>Kindly help me to solve this problem. I wish to enter every data into my file. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>file.write</code> takes a single parameter, a string. You have to join your values and then write to the file. Lastly, do not forget to close your file:</p>
<pre><code>f=open('nv.csv','a+')
a=10+3
b=3+12
c=3+13
f.write("{} {} {}\n".format(a, b, c))
f.close()
</code></pre>
<p>If you are going to multiple values later on, you should use a list:</p>
<pre><code>s = [13, 15, 16, 45, 10, 20]
f.write(' '.join(map(str, s)))
f.close()
</code></pre>
<p>Edit:</p>
<p>Regarding you recent comments, you have two options.</p>
<p>Creating an initial dictionary:</p>
<pre><code>s = {"a":13, "b":15, "c" = 16}
for a, b in s.items():
   f.write("{} {}\n".format(a, b))

f.close()
</code></pre>
<p>Or, using <code>globals</code> with a list:</p>
<pre><code>s = [13, 15, 16, 45, 10, 20]
final_data = {a:b for a, b in globals().items() if b in s}
for a, b in final_data.items():
   f.write("{} {}\n".format(a, b))

f.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>f.writelines()</code>: <a href="https://docs.python.org/3/library/io.html#module-io" rel="nofollow noreferrer">https://docs.python.org/3/library/io.html#module-io</a></p>
<pre><code>f.writelines([a,b,c])
</code></pre>
<p>No line-separator is added.</p>
<p>If you want to have a special separator, use <code>"separator".join([str(i) for i in [a,b,c]])</code> and write this to file via <code>f.write()</code></p>
</div>
<div class="post-text" itemprop="text">
<p>all the previous are valid ones, and I will try to complete them</p>
<pre><code>with open('nv.csv','a+') as f:
    a = 10 + 3
    b = 3 + 12
    c = 3 + 13
    f.write('{}\n'.format( ','.join(map(str, (a, b, c))) )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>f.write()</code> only takes one argument and write that into your file. If you want to write multiple components, you can use <code>f.writelines([a,b,c])</code>. Also, you can only write string to a file, so make sure to do <code>str(*)</code> for all your variables.</p>
</div>
<div class="post-text" itemprop="text">
<p>All the answers suggested are good. If you want to make it more readable and neat, you can do this as well:</p>
<pre><code>f.write("{a},{b},{c}".format(a=a, b=b, c=c)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the % operator</p>
<p>Notice that the substitution variables x, y, z are all in parentheses, which means they are a single tuple passed to the % operator.</p>
<pre><code>a=10+3
b=3+12
c=3+13
f.write("%s %s %s" % (a, b, c))
f.close()
</code></pre>
<p>Here is an <a href="https://repl.it/Ner9" rel="nofollow noreferrer"><strong>example</strong></a> that you can execute online.</p>
<p>The code works perfectly.</p>
<p>The output is : <em><code>13 15 16</code></em></p>
</div>
<span class="comment-copy">what is the desired output?  You probably want <code>f.write('{}\n'.format(a))</code> for each of your numbers? Or since it says 'csv', maybe you want <code>f.write({},{},{}\n'.format(a, b, c))</code>? That can be written like this, btw: <code>f.write(','.join(str(x) for x in (a, b, c)) + '\n')</code>. That's a bit more advanced.</span>
<span class="comment-copy">I need values of a,b,c in my file. I will add many assignments in future</span>
<span class="comment-copy">If you're writing csv files, use the csv module.</span>
<span class="comment-copy">It return the output as a,b,c instead of values. How to get values of a,b,c in the file</span>
<span class="comment-copy">@natarajanphysicist could you elaborate on what you mean by "output" and "values"?</span>
<span class="comment-copy">I wish to get output file with values of variables such as a,b,and c(13,15,16). But it writes in the file with name of the variables itself.</span>
<span class="comment-copy">@natarajanphysicist please see my recent edit.</span>
<span class="comment-copy">@natarajanphysicist if this answer helped you, please consider accepting it. Thank you!</span>
<span class="comment-copy">Hello, .join() is only working for strings. So this is not working.</span>
<span class="comment-copy">@PaulStrobach thanks for the remarque</span>
<span class="comment-copy">It return the output as a,b,c instead of values.</span>
<span class="comment-copy">it returns the output of the a, b, c values, the code has been tested. can you please copy the code you tested ?</span>
<span class="comment-copy">f=open('ns.csv','w+') a=10+3 b=3+12 c=3+13 f.write("%s %s %s" % (a, b, c)) f.close()</span>
<span class="comment-copy">answer updated.</span>
