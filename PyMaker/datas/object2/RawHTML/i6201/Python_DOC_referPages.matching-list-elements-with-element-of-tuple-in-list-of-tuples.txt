<div class="post-text" itemprop="text">
<p>I have a list containing strings:</p>
<pre><code>lst = ['a', 'a', 'b']
</code></pre>
<p>where each string is, in fact, a category of a corpus, and I need a list of integers that corresponds to the index of that category.</p>
<p>For this purpose, I built a list of tuples where I have each (unique) category and its index, f.ex:</p>
<pre><code>catlist = [(0, 'a'), (1, 'b')]
</code></pre>
<p>I now need to iterate over the first list of strings, and if the element matches any of the second elements of the tuple, return the tuple's first element to an array, like this:</p>
<pre><code>[0, 0, 1]
</code></pre>
<p>for now I have </p>
<pre><code>catindexes = []
for item in lst:
    for i in catlist:
        if cat == catlist[i][i]:
            catindexes.append(i)
</code></pre>
<p>but this clearly doesn't work and I'm failing to get to the solution. 
Any tips would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You were close, after iterating the inner loop, you should check whether the item from the outer loop is actually equal to the <code>tup[1]</code> (each tup represent <code>(0, 'a')</code> or <code>(1, 'b')</code> for example).</p>
<p>if they equal, just append the first element in tup (<code>tup[0]</code>) to the result list.</p>
<pre><code>lst = ['a', 'a', 'b']

catlist = [(0, 'a'), (1, 'b')]

catindexes = []
for item in lst:
    for tup in catlist:
        if item == tup[1]:
            catindexes.append(tup[0])
print (catindexes)
</code></pre>
<p>You also can use list comprehension:</p>
<pre><code>catindexes = [tup[0] for item in lst for tup in catlist if tup[1] == item]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; lst = ['a', 'a', 'b']
&gt;&gt;&gt; catlist = [(0, 'a'), (1, 'b')]
&gt;&gt;&gt; catindexes = []
&gt;&gt;&gt; for item in lst:
...     for i in catlist:
...       if i[1] == item:
...         catindexes.append(i[0])
...
&gt;&gt;&gt; catindexes
[0, 0, 1]
</code></pre>
<p>During the iteration, <code>i</code> is a direct reference to an element of <code>catlist</code>, not its index. I'm not using <code>i</code> to extract an element from <code>lst</code>, the <code>for ... in ...</code> already takes care of that. As <code>i</code> is a direct reference to a tuple, I can simply extract the relevant fields for matching and appending without the need  to mess with the indexing of <code>lst</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend using a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> for your <code>catlist</code> instead. I think it more naturally fits what you are trying to do:</p>
<pre><code>lst = ['a', 'a', 'b']
catdict = {'a': 0, 'b': 1}
res = [catdict[k] for k in lst]  # res = [0, 0, 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Condition defines in if block is not correct.</p>
<p>Try this..</p>
<pre><code>lst = ['a', 'a', 'b']
catlist = [(0, 'a'), (1, 'b')]


catindexes = []
for item in lst:
    for i in catlist:
        if i[1]==item:
            catindexes.append(i[0]);

print catindexes
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can create a dictionary (we call it <code>d</code>) from <code>catlist</code> and reverse it. Now, for each element <code>i</code> of <code>lst</code>, what you're looking for is <code>d[i]</code>:</p>
<pre><code>d = {v: k for k, v in catlist}
res = [d[i] for i in lst]
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; lst = ['a', 'a', 'b']
&gt;&gt;&gt; d = {v: k for k, v in catlist}
&gt;&gt;&gt; d
{'a': 0, 'b': 1}
&gt;&gt;&gt;
&gt;&gt;&gt; res = [d[i] for i in lst]
&gt;&gt;&gt; res
[0, 0, 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>An efficient way for big lists :</p>
<p>step 1 : build  the good dictionary. </p>
<pre><code>d=dict((v,k) for (k,v) in catlist)
</code></pre>
<p>step 2 : use it.</p>
<pre><code>[d[k] for k in lst]
</code></pre>
<p>This way the execution time will grow like <code>len(lst) + len(catlist)</code> instead of 
<code>len(lst) x len(catlist)</code>.</p>
</div>
<span class="comment-copy">You're right. Thank you for the explanation! This is clearly the lack of experience on my side :)</span>
<span class="comment-copy">Clearly a noob error from me. Thank you a lot :)</span>
