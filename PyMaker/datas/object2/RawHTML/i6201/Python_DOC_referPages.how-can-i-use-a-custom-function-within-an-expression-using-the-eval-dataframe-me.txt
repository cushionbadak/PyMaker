<div class="post-text" itemprop="text">
<p>I am using Python 3.X.</p>
<p>With the builtin function <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval()</code></a> you can use a dictionaty of objects in order to use a custom function like this:</p>
<pre class="lang-py prettyprint-override"><code>from math import *

def one():
    # some operations
    return 1

functions = {
    '__builtins__': None,
    'sqrt': sqrt,
    'one': one,
}
variables = {
    '__builtins__': None,
    'pi': pi,
}
expression = 'sqrt(34 * pi) + one()'
eval(expression, variables, functions)
</code></pre>
<p>But the <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.eval.html#pandas.eval" rel="nofollow noreferrer"><code>eval()</code></a> dataframe method does not work like that. You can only use these built-in functions:</p>
<blockquote>
<p>The supported math functions are sin, cos, exp, log, expm1, log1p, sqrt, sinh, cosh, tanh, arcsin, arccos, arctan, arccosh, arcsinh, arctanh, abs and arctan2</p>
</blockquote>
<pre class="lang-py prettyprint-override"><code>import pandas as pd
import numpy as np
from math import *

df = pd.DataFrame({
    'A': [0, 10, 0, 10, 10, 30],
    'B': [0, 0, 1000, 1000, 0, 0],
    'C': [25, 25, 25, 25, 40, 40]
})

def custom():
    # some operations
    return 3

functions = {
    'custom': custom
}
variables = {
    'pi': pi
}
equation = 'D = sqrt(A) + B + custom()'
df.eval(
    equation, global_dict=variables, local_dict=functions,
    engine='numexpr', inplace=True
)
# ERROR: "custom" is not a supported function
</code></pre>
<p>Is there a way to use a custom function in the expression?</p>
<p>NOTE: I know it could bedangerous, but it is on me</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>@</code> when calling local variables or local functions: </p>
<pre><code>In [45]: equation = 'D = sqrt(A) + B + @custom()'
#  NOTE:   ------------&gt;               ^

In [46]: df.eval(equation, inplace=True)

In [47]: df
Out[47]:
    A     B   C            D
0   0     0  25     3.000000
1  10     0  25     6.162278
2   0  1000  25  1003.000000
3  10  1000  25  1006.162278
4  10     0  40     6.162278
5  30     0  40     8.477226
</code></pre>
</div>
<span class="comment-copy">Learnt something new sir. +1</span>
<span class="comment-copy">@Bharath, thank you! :)</span>
<span class="comment-copy">Thank you @maxu, how did you know that? haha I have been testing it and I have <a href="https://stackoverflow.com/questions/47163401/how-to-return-a-numpy-array-or-list-in-a-custom-function-using-the-eval-datafram">another question related to this</a></span>
