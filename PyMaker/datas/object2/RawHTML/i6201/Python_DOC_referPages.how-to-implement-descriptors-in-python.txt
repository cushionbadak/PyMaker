<div class="post-text" itemprop="text">
<p>I was working on my own descriptor based on the Property example in the docs: <a href="https://docs.python.org/3/howto/descriptor.html#properties" rel="nofollow noreferrer">https://docs.python.org/3/howto/descriptor.html#properties</a></p>
<p>But for some reason all my properties are the same.</p>
<pre><code>class Property(object):
    "Emulate PyProperty_Type() in Objects/descrobject.c"

    def __init__(self, fget=None, fset=None, fdel=None, doc=None):
        self.fget = fget
        self.fset = fset
        self.fdel = fdel
        if doc is None and fget is not None:
            doc = fget.__doc__
        self.__doc__ = doc

    def __get__(self, obj, objtype=None):
        if obj is None:
            return self
        if self.fget is None:
            raise AttributeError("unreadable attribute")
        return self.fget(obj)

    def __set__(self, obj, value):
        if self.fset is None:
            raise AttributeError("can't set attribute")
        self.fset(obj, value)

    def __delete__(self, obj):
        if self.fdel is None:
            raise AttributeError("can't delete attribute")
        self.fdel(obj)

    def getter(self, fget):
        return type(self)(fget, self.fset, self.fdel, self.__doc__)

    def setter(self, fset):
        return type(self)(self.fget, fset, self.fdel, self.__doc__)

    def deleter(self, fdel):
        return type(self)(self.fget, self.fset, fdel, self.__doc__)

class Demo(object):

    def __init__(self, a=None, b=None):
        self._a = a
        self._b = b

    @Property
    def a(self):
        return self._a

    @a.setter
    def a(self, a):
        self._a = a

    @Property
    def b(self):
        return self._b

    @b.setter
    def a(self, b):
        self._b = b

d = Demo('4')
print(d.a, d.b)  # None None   (Should be: '4' None ?)
d.a = '3'
print(d.a, d.b)  # 3 3   (Should be: '3' None ?)
</code></pre>
<p>Firstly, why do the values passed to the constructor not get set/accessed as I intended? Why does changing <code>a</code> seem to change <code>b</code> too?</p>
</div>
<div class="post-text" itemprop="text">
<p>There's a typo in the code. Fixing it produces the expected output.</p>
<pre><code>@b.setter
def a(self, b):
    self._b = b
</code></pre>
<p>Should be:</p>
<pre><code>@b.setter
def b(self, b):
    self._b = b
</code></pre>
</div>
<span class="comment-copy">Oh my, that's... embarrassing :p many thanks</span>
