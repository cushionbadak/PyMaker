<div class="post-text" itemprop="text">
<p>I have a list of objects and I'm trying to get one object's index in that list from an attribute of the object I have (e.g. name). Similar to something like the example below:</p>
<pre><code>class Employee:
    def __init__(self, name):
        self.name = name

def add_emp(name):
    employees.append(Employee(name))

employees = []
add_emp('Emp1')
</code></pre>
<p>Now I'm trying to get the index of <em>'Emp1'</em> in the list <em>self.employees</em> (here <em>'0'</em>). I tried this here: </p>
<pre><code>print(employees.index(filter(lambda x: x.name == 'Emp1', employees)))
</code></pre>
<p>but he tells me that <em>'ValueError: &lt; filter object at 0xblabla &gt; is not in list'</em>. What do I have to change or is there a better option to handle this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Well don't search for the filter itself, search for what the filter <em>finds</em>. For example, <code>next(filter(...))</code> instead of <code>filter(...)</code>.</p>
<p>But really better just use <code>enumerate</code>:</p>
<pre><code>print(next(i for i, x in enumerate(employees) if x.name == 'Emp1'))
</code></pre>
<p>Or you could create a list of names and ask that for the index:</p>
<pre><code>print([x.name for x in employees].index('Emp1'))
</code></pre>
<p>It's less efficient, though.</p>
</div>
<div class="post-text" itemprop="text">
<p>Because <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter()</code></a> returns a filter object, an approach would be converting it to a list and take the element with index 0:</p>
<pre><code>print(employees.index(list(filter(lambda x: x.name == 'Emp1', employees))[0]))
</code></pre>
<p>But, the best approach would be using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a>:</p>
<pre><code>def get_employee_index(name):
    for i, e in enumerate(employees):
        if e.name == name:
            return i
    return -1  # for not found employee
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; get_employee_index('Emp1')
0
</code></pre>
</div>
<span class="comment-copy">You could use the <code>enumerate</code> function, it returns an iterator of tuples in the form <code>i, o</code> where <code>i</code> is the index and <code>o</code> is the actual object.</span>
<span class="comment-copy">@dcg I simply tried this <code>enumerate(employees)</code>, but it only gave me this: <code>&lt; enumerate object at 0xblabla &gt;</code></span>
<span class="comment-copy">@hkzl You have to iterate over it</span>
<span class="comment-copy">Both, your and @ettanany 's answer work perfectly fine, but this one does the job in a single line, so I took this as the accepted answer. Thanks a lot guys!</span>
<span class="comment-copy">The first approach, using the filter, actually didn't work for me because he complained about the <i>list index</i> being out of range. However the second option, which you and the others stated as being better anyway, worked perfectly. Thanks a lot!</span>
