<div class="post-text" itemprop="text">
<p>Started learning Python online myself. Created the following program using List and for loop below to count nodes and edges from a function input. Followed this: <a href="http://mathworld.wolfram.com/GridGraph.html" rel="nofollow noreferrer">http://mathworld.wolfram.com/GridGraph.html</a> simple rules to generate nodes and edges. Is it possible to create same program in Python using only While and array not for loop and List comprehension? Would you mind to enlighten me in on this, please?</p>
<pre><code>def gridGen(a,b):
    return [
            [(x,y) for y in range(0,a)] 
        for x in range(0,b)
    ]

def edgeListGen(grid):
    edgeList = []
    for y, row in enumerate(grid):
        for x, val in enumerate(row):
            if (x &lt; len(row)-1):
                edgeList.append(((x,y),(x+1,y)))
            if (y &lt; len(grid)-1):
                edgeList.append(((x,y),(x,y+1)))
    return edgeList

def printGrid(grid):
    for line in grid:
        for value in line:
            print(value, end=' ')
        print()
    print()       

def printEdgeList(L):
    for edge in edgeList:
        print(edge[0], ',', edge[1])

grid=gridGen(5,2)
printGrid(grid)

edgeList=edgeListGen(grid)
printEdgeList(edgeList)
</code></pre>
<p>Output: </p>
<pre><code>(0, 0) (0, 1) (0, 2) (0, 3) (0, 4) 
(1, 0) (1, 1) (1, 2) (1, 3) (1, 4) 

(0, 0) , (1, 0)
(0, 0) , (0, 1)
(1, 0) , (2, 0)
(1, 0) , (1, 1)
(2, 0) , (3, 0)
(2, 0) , (2, 1)
(3, 0) , (4, 0)
(3, 0) , (3, 1)
(4, 0) , (4, 1)
(0, 1) , (1, 1)
(1, 1) , (2, 1)
(2, 1) , (3, 1)
(3, 1) , (4, 1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python does not support multidimensional arrays out of the box, but you can easily do this with numpy.</p>
<p>For instance, <code>gridGen</code> would become:</p>
<pre><code>def gridGen(a, b):
    columns = np.repeat(np.arange(b), a)
    rows = np.tile(np.arange(a), b)
    return np.dstack([columns, rows]).reshape(2, 5, 2)
</code></pre>
</div>
<span class="comment-copy">Yes. It is possible.</span>
<span class="comment-copy">@juanpa.arrivillaga but no arrays in vanilla python, so it's impossible :)</span>
<span class="comment-copy">list comprehension is simplified <code>for</code> loop and you can convert it to <code>while</code> loop <a href="https://stackoverflow.com/a/18900662/4249707">this</a> way</span>
<span class="comment-copy">One way to do this is to manually get the iterator of an iterable using <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer"><code>iter</code></a>, then in a <code>while True:</code> loop get things from that iterator until you get a <code>StopIteration</code> error, catch the error and then <code>break</code> out of the loop.  That gives you something essential similar to a <code>for</code> loop, and building lists in <code>for</code> loop is relatively trivial.  That said, this is a silly way to try and actually get anything done.  Python makes a lot of boring bookkeeping happen automatically in the background, there's no reason to mess with it.</span>
<span class="comment-copy">@ElRuso sure there are: <code>import array</code></span>
