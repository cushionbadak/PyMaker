<div class="post-text" itemprop="text">
<p>I'm writing a program that stores 3 players and their scores in a list and then prints them out at the end. Simple stuff really, however I'm trying to call the value for the player score from a function called playerscore() which prevents you from entering a score &gt;5.</p>
<p>this works fine when you run through it with the correct value, but if you input an incorrect value &gt; 5 then it begins the playerscore function again and allows for a new value to be entered but returns "None"</p>
<pre class="lang-python prettyprint-override"><code>teamlist = []

def playercreator():
    counter=0
    while counter &lt; 3:
        name = playername()
        score = playerscore()
        print(score) #check - this one goes wrong when returned after the if/else in playerscore()
        teamlist.append(name+" "+str(score))
        counter = counter + 1

def playername():
    name=input("What name do you want for your player?\n")
    return (name)

def playerscore():
    global teamtotal
    score=input("input score?\n")
    print(score) #check
    if int(score)&gt;5:
        print("Your attack score must be between 0 and 5")
        print(score) #check
        playerscore()
    else:
        return int(score)

playercreator()

for x in teamlist:
    print(x)
</code></pre>
<p>for example, these are the inputs and outputs:</p>
<pre><code>What name do you want for your player?
p1
input score?
3
What name do you want for your player?
p2
input score?
6
Your attack score must be between 0 and 5
input score?
5
What name do you want for your player?
p3
input score?
2

p1 3
p2 None
p3 2
</code></pre>
<p>I feel like there's something obvious that i'm missing. Can anyone point me in the right direction?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are missing a return statement in the if block (when the score is greater than 5):</p>
<pre><code>def playerscore():
    global teamtotal
    score=input("input score?\n")
    if int(score)&gt;5:
        print("Your attack score must be between 0 and 5")        
        return playerscore()
    else:
        return int(score)
</code></pre>
<p>Output:</p>
<pre><code>What name do you want for your player?
shovon
input score?
2
2
What name do you want for your player?
sorida
input score?
23
Your attack score must be between 0 and 5
input score?
43
Your attack score must be between 0 and 5
input score?
234
Your attack score must be between 0 and 5
input score?
1
1
What name do you want for your player?
shody
input score?
2
2
shovon 2
sorida 1
shody 2
</code></pre>
<p>From <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">official documentation</a>:</p>
<blockquote>
<p>In fact, even functions without a return statement do return a value, albeit a rather boring one. This value is called None (itâ€™s a built-in name).</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>When you are doing this:    </p>
<pre><code>if int(score)&gt;5:
    playerscore()
</code></pre>
<p>you call <code>playerscore</code> function without <code>return</code> statement. This produces <code>None</code> value.</p>
</div>
<div class="post-text" itemprop="text">
<p>The type of recursion you're trying to do with your code will work with a small correction on your code... which follows:</p>
<pre><code>def playerscore():
global teamtotal
score=input("input score?\n")
print(score) #check
if int(score)&gt;5:
    print("Your attack score must be between 0 and 5")
    print(score) #check
    return playerscore()
else:
    return int(score)
</code></pre>
<p>You can notice that this time, we returned <code>playerscore()</code>. As it seems like you're learning the basics, I'd like to propose a slightly different approach, as you'll get a ValueError exception if the player types a string (some letters) instead of a number. You can keep using your recursive function in the exception catch, and use a while loop to make the player to keep the number within your desired range. Here follows my suggestion to prevent the ValueError exception:</p>
<pre><code>def playerscore():
global teamtotal
score=input("input score?\n")
try:
    while int(score) &lt; 0 or int(score) &gt; 5:
        print("Your attack score must be between 0 and 5")
        print(score)  # check
        score = input("input score?\n")
except ValueError:
    print("Your attack score must be A NUMBER between 0 and 5")
    return playerscore()
return int(score)
</code></pre>
<p>I hope that helps. Regards. </p>
</div>
<div class="post-text" itemprop="text">
<p>When function doesn't return anything, value will be <code>None</code>.</p>
<p>So you should check your code for the case where <code>score</code> is larger than 5. (Compare it to the case where score is <em>not</em> larger than five.)</p>
</div>
<span class="comment-copy">It's that simple! I knew that it had to be something like that but I completely forgot to return if it didn't meet the criteria as well as if it did. Thank you for your help.</span>
<span class="comment-copy">This is great. I hadn't got this far yet but had initially planned to catch errors. Thank you for the assist.</span>
