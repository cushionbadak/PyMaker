<div class="post-text" itemprop="text">
<p>I have following string </p>
<pre><code>messages = """Jan 09, 07:03 AM - +91 12345 12345:‬ added ‪+91 45678 47263‬
Jan 10, 07:03 AM - +91 12345 12345: Hello
Jan 11, 07:03 AM - +91 12345 12345: How are you?.
Jan 12, 07:03 AM - +91 12345 12345: What's up?
"""
</code></pre>
<p>I want to parse above messages using regular expression and print only message</p>
<p>output should be</p>
<pre><code>added ‪+91 45678 47263‬
Hello
How are you?.
What's up?
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to regex it:</p>
<pre><code>for i in re.findall(".+:\s*(.*)", messages):
    print(i)
</code></pre>
<p>This doesn't handle the special chars you have in there though.</p>
</div>
<div class="post-text" itemprop="text">
<p>This should do it:</p>
<pre><code>import re
result = [re.split('\d+:', line)[-1] for line in messages.split('\n')]
for item in result:
    print item
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>python has <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer"><code>find</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.index" rel="nofollow noreferrer"><code>index</code></a> methods that will search a string left-to-right for a substring and return its position as an integer. It also has <a href="http://32bit:odb:Driver=Lotus%20NotesSQL%20Driver%20(*.nsf);Database=aba%5CAPUHOTSHEET.nsf;Server=PHXAPPS3/USAIR;UID=Eric%20Lohmar/MAE/USAIR;PWD=__EncPwd1__;MaxVarcharLen=4096;" rel="nofollow noreferrer"><code>rfind</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.rindex" rel="nofollow noreferrer"><code>rindex</code></a> that do the same, but they search right to left. So you can split the text on newline characters and slice each line. Could look something like this:</p>
<pre><code>messages = """Jan 09, 07:03 AM - +91 12345 12345:‬ added ‪+91 45678 47263‬
Jan 10, 07:03 AM - +91 12345 12345: Hello
Jan 11, 07:03 AM - +91 12345 12345: How are you?.
Jan 12, 07:03 AM - +91 12345 12345: What's up?
"""

for line in messages.split('\n'):
    if line:
        print(line[line.rindex(':') + 2:])
</code></pre>
<p>yields output:</p>
<pre><code>added ‪+91 45678 47263‬
Hello
How are you?.
What's up?
</code></pre>
<p>The <code>if line:</code> was thrown in there because the final <code>"""</code> was on a new line which would have come up as an empty string and <code>index</code>/<code>rindex</code> throws an error if it can't find the substring in the string. If that is an issue, you can use the <code>find</code> or <code>rfind</code> methods which return -1 instead of throwing an error.</p>
<p>It is also worth noting that unexpected results will show up if the message itself has a <code>:</code> in it.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have a string and want to get all the text after the FIRST ":", try something like this:</p>
<pre><code>myString = "Jan 10, 07:03 AM - +91 12345 12345: Hello"
index = myString.find(":") # Gets index of first ":" in the myString variable
message = myString[index:] # Starts at index and gets everything afterwards
# message is now ": Hello"
</code></pre>
<p>If you want to remove the colon from the message, just add 1 to the index</p>
<pre><code>message = myString[index+1:] # message is now " Hello"
</code></pre>
<p>Then you can do this for each line by using messages.split('\n') as shown below</p>
<pre><code>for line in messages.split('\n'):
    index = line.find(':') # Gets index of first ":" in line
    message = line[index+1:]
    print message
</code></pre>
</div>
<span class="comment-copy">What about <code>re.split(':',message)</code> where message is one line of messages?</span>
<span class="comment-copy">But it split time also</span>
<span class="comment-copy">Then split, starting at an offset: <code>re.split(':',message[15])</code>. The only problem might be if a message contains ':'. So you will need to take the  results given by <code>split</code> and append them beginning at index 1</span>
<span class="comment-copy">Yeah but if message contain ":" then?</span>
<span class="comment-copy">Edited with <code>re</code> solution.</span>
