<div class="post-text" itemprop="text">
<p>I am new to Python and I am making a program in which the computer generates a random number within a certain range and then tries to guess the number it picked. I am making the computer guess multiple numbers (in this case 2) by using a for loop. I am also keeping track of the number of guesses it took after each iteration of the loop. After that, I am going to take average of those guesses after the loop has finished. However, when I try to get the average it doesn't print. I don't know what's wrong with the code. Can someone help me with this issue?</p>
<pre><code>import random

def guess():
        the_num = random.randint(1, 100)
        print('The number to guess is',the_num)
        comp_guess = random.randint(1, 100)
        print('The computer guesses ', comp_guess)
        tries = 1

        while comp_guess != the_num:
            print('The computer guesses ', comp_guess)
            tries += 1
            if comp_guess == the_num:
                break
            else:
                comp_guess = random.randint(1, 100)

        for i in range(2):
            guess()

        print('The computer took',tries,'guesses')
        print('The computer guessed it right!')
        print('The computer guessed',(tries/2),'times on average') 
        # Trying to calculate the average number of guesses after the loop is finished
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need or want the <code>guess()</code> function to call itself like that because the way it's currently coded it will never return.</p>
<p>Here's how I would reorganize your code to avoid the need to do that:</p>
<pre><code>import random

NUM_GUESSES = 2

def guess():
    the_num = random.randint(1, 100)
    print('The number to guess is', the_num)

    tries = 0
    comp_guess = None
    while comp_guess != the_num:
        comp_guess = random.randint(1, 100)
        print('The computer guesses', comp_guess)
        tries += 1

    return tries

total_tries = 0
for i in range(NUM_GUESSES):
    tries = guess()
    total_tries += tries
    print('The computer took', tries, 'guesses')
    print('The computer guessed it right!')

average = total_tries / NUM_GUESSES
print('The computer guessed', average, 'times on average')
</code></pre>
<p>Sample output:</p>
<pre class="lang-none prettyprint-override"><code>The number to guess is 88
The computer guesses 58
The computer guesses 19
The computer guesses 55
The computer guesses 16
The computer guesses 85
The computer guesses 24
The computer guesses 76
The computer guesses 36
The computer guesses 18
The computer guesses 58
The computer guesses 27
The computer guesses 1
The computer guesses 2
The computer guesses 100
The computer guesses 74
The computer guesses 49
The computer guesses 26
The computer guesses 76
The computer guesses 28
The computer guesses 38
The computer guesses 27
The computer guesses 100
The computer guesses 7
The computer guesses 50
The computer guesses 54
The computer guesses 80
The computer guesses 36
The computer guesses 39
The computer guesses 61
The computer guesses 28
The computer guesses 11
The computer guesses 38
The computer guesses 27
The computer guesses 29
The computer guesses 70
The computer guesses 45
The computer guesses 18
The computer guesses 65
The computer guesses 40
The computer guesses 88
The computer took 40 guesses
The computer guessed it right!
The number to guess is 99
The computer guesses 73
The computer guesses 99
The computer took 2 guesses
The computer guessed it right!
The computer guessed 21.0 times on average
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>By calling guess inside itself you are creating a recursive function that has no base case, hence it will never end.  A better approach is to make the loop occur in the actual code.  In the following code, I also took the liberty to make the function flexible by allowing it to be called any number of times dependent on input.</p>
<pre><code>import random

def guess(num_loops):
    total_tries = 0
    for i in range(num_loops):
        the_num = random.randint(1, 100)
        print('The number to guess is',the_num)
        comp_guess = random.randint(1, 100)
        print('The computer guesses ', comp_guess)
        tries = 1

        while comp_guess != the_num:
           # print('The computer guesses ', comp_guess)
            tries += 1
            print(tries)
            if comp_guess == the_num:
                break
            else:
                comp_guess = random.randint(1, 100)
        total_tries += tries
        print('The computer took',tries,'guesses')
        print('The computer guessed it right!')
    print('The computer guessed',(total_tries/num_loops),'times on average') 
    # Trying to calculate the average number of guesses after the loop is finished

guess(2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you have there is recursion which is when a function calls itself.</p>
<p>In your case you do not need recursion, just one function and code that calls it.</p>
<p>Your function should do one thing and do it well. In this case your function is for the computer to guess a number it generated.</p>
<pre><code>def guess():
    the_num = random.randint(1, 100)
    print('The number to guess is',the_num)
    comp_guess = random.randint(1, 100)
    print('The computer guesses ', comp_guess)
    tries = 1

    while comp_guess != the_num:
        print('The computer guesses ', comp_guess)
        tries += 1
        if comp_guess == the_num:
            break
        else:
            comp_guess = random.randint(1, 100)
</code></pre>
<p>Now it seems you want this code to run twice. So the computer guesses multiple numbers and has many tries for each number it's trying to guess.</p>
<p>In this case you just need to call the function multiple times outside the function.</p>
<pre><code>for i in range(2):
    guess()
</code></pre>
<p>This code isn't indented and isn't part of the function. </p>
<p>To learn more about functions you can go to the Python Docs: <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/controlflow.html#defining-functions</a></p>
<p>I'll also link to a book I highly recommend: <a href="http://inventwithpython.com/chapter6.html" rel="nofollow noreferrer">http://inventwithpython.com/chapter6.html</a></p>
<p>These resources will help you learn more about functions.</p>
<p>Hope this answer helped you! If you have any further questions please post a comment below!</p>
</div>
<span class="comment-copy">are you calling <code>guess()</code> inside your function with no base case or is that an indentation error?  when i run your code I am getting a max recursion error</span>
<span class="comment-copy">First, call your function (i.e. <code>guess()</code>) since you've only defined it. Second, remove <code>for i in range(2): guess()</code> or else it will run forever.</span>
<span class="comment-copy">@0TTT0 When I run it, it's fine. I actually don't know what error you're talking about. And yes, I did call guess() inside my function.</span>
<span class="comment-copy">@ryugie Thanks for the suggestion, I'll keep that in mind in the future.</span>
<span class="comment-copy">Thanks for the help! I have better understanding of what I need to fix now.</span>
