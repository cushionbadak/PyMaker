<div class="post-text" itemprop="text">
<p>How could I mock an iterable item?</p>
<p>In trying to test this method:</p>
<pre><code>    def convert_time_field(klass, field, default=None):
        time = GrapheneHelper.get_json_field(klass, field, default)

        if time is None:
            return None
        else:
            return iso8601.parse_date(time)
</code></pre>
<p>My first test returns this error: <code>TypeError: argument of type 'Mock' is not iterable</code></p>
<pre><code>    def test_convert_time_field(self):
        """ Return YYYY-MM-DDTHH:MM:FF in iso8601 format """
        time = '2017-09-18T23:09:57Z'
        expected_time = '2017-09-18 23:09:57+00:00'
        mock_klass = Mock()
        self.assertEqual(GrapheneHelper.convert_time_field(mock_klass, time, default=None), expected_time)
</code></pre>
<p>What am I misunderstanding about mocks in this case?</p>
</div>
<div class="post-text" itemprop="text">
<p>My test ended up changing to this:</p>
<pre><code>@patch('myModule.myClass')
def test_convert_time_field(self, mock_klass):
    """ Return YYYY-MM-DDTHH:MM:FF in iso8601 format """
    mock_klass.json = {'time_field': '2017-09-18T23:09:33'}
    expected_time = iso8601.parse_date('2017-09-18 23:09:33')

    self.assertEqual(GrapheneHelper.convert_time_field(mock_klass, field='time_field', default=None), expected_time)
</code></pre>
</div>
<span class="comment-copy">I think you want a <code>MagicMock</code>. Per the docs: <a href="https://docs.python.org/3/library/unittest.mock-examples.html#mocking-a-generator-method" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">I'm using python 2.7... I think it's supported - will give it a try</span>
