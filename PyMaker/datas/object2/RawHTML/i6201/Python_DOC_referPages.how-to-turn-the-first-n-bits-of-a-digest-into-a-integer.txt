<div class="post-text" itemprop="text">
<p>I'm workign with Python 3, trying get an integer out of a digest in python. I'm only interested in the first n bits of the digest though.</p>
<p>What I have right now is this:</p>
<pre><code>n = 3
int(hashlib.sha1(b'test').digest()[0:n])
</code></pre>
<p>This however results in a <code>ValueError: invalid literal for int() with base 10: b'\xa9J'</code> error.</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>The Py3 solution is to use <a href="https://docs.python.org/3/library/stdtypes.html#int.from_bytes" rel="nofollow noreferrer"><code>int.from_bytes</code></a> to convert <code>bytes</code> to <code>int</code>, then shift off the part you don't care about:</p>
<pre><code>def bitsof(bt, nbits):
    # Directly convert enough bytes to an int to ensure you have at least as many bits
    # as needed, but no more
    neededbytes = (nbits+7)//8
    if neededbytes &gt; len(bt):
        raise ValueError("Require {} bytes, received {}".format(neededbytes, len(bt))) 
    i = int.from_bytes(bt[:neededbytes], 'big')
    # If there were a non-byte aligned number of bits requested,
    # shift off the excess from the right (which came from the last byte processed)
    if nbits % 8:
        i &gt;&gt;= 8 - nbits % 8
    return i
</code></pre>
<p>Example use:</p>
<pre><code>&gt;&gt;&gt; bitsof(hashlib.sha1(b'test').digest(), 3)
5  # The leftmost bits of the a nibble that begins the hash
</code></pre>
<p>On Python 2, the function can be used almost as is, aside from adding a <code>binascii</code> import, and changing the conversion from <code>bytes</code> to <code>int</code> to the slightly less efficient two step conversion (from <code>str</code> to hex representation, then using <code>int</code> with <code>base</code> of 16 to parse it):</p>
<pre><code>    i = int(binascii.hexlify(bt[:neededbytes]), 16)
</code></pre>
<p>Everything else works as is (even the <code>//</code> operator works as expected; Python 2's <code>/</code> operator is different from Py 3's, but <code>//</code> works the same on both).</p>
</div>
<span class="comment-copy">Bits or bytes? A slice of the digest will be measured in bytes, not bits; you were pulling <code>n</code> bytes there.</span>
<span class="comment-copy">I was hoping to get the first n bits.</span>
