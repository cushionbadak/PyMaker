<div class="post-text" itemprop="text">
<p>Under the hood, any Python object is implemented as a C struct with some fields. A 16 bytes <a href="https://docs.python.org/3/c-api/structures.html#c.PyObject" rel="nofollow noreferrer">header</a> containing the reference count and a pointer to the object's type is always present on this struct. This is at least the case for 64bit stock CPython 3.x, for which my question is restricted.</p>
<p>For academic purposes and the fun of it, I'm in search of a function <code>print_object(obj)</code> which prints out this underlying <code>struct</code> of the passed object <code>obj</code>.</p>
<p>In terms of implementation, the simplest Python object is perhaps the <code>float</code>, which is just a C <code>double</code> appended to the previously mentioned header. In this simple case I've been able to write my own such function using the <code>ctypes</code> and <code>struct</code> modules:</p>
<pre><code>import collections, ctypes, struct, sys

header_fields = ['refcount', 'typeptr']
Float = collections.namedtuple('Float', header_fields + ['value'])

def print_object(obj):
    ptr = id(obj)
    size = sys.getsizeof(obj)
    byterep = ctypes.string_at(ptr, size)
    header = struct.unpack('qq', byterep[:16])
    if isinstance(obj, float):
        obj_struct = Float(*header, *struct.unpack('d', byterep[16:]))
    elif isinstance(obj, int):
        ...
    print(obj_struct)

# Try it out
a = 1.23
print_object(a)
print('The typeptr should be equal to', id(float))
print('\nNow the refcount should have increased by 1:')
b = a
print_object(a)
</code></pre>
<p>In essence, this function reads the underlying memory of the object and builds a copy of the C <code>struct</code> as a Python <code>namedtuple</code>, effectively re-representing a piece of Python in itself. The code should run on Python 3.5 and up. It prints</p>
<blockquote>
<p>Float(refcount=5, typeptr=140429307606720, value=1.23)<br/>
   The typeptr should be equal to 140429307606720</p>
<p>Now the refcount should have increased by 1:<br/>
  Float(refcount=6, typeptr=140429307606720, value=1.23)</p>
</blockquote>
<p>The above <code>print_object</code> function works great for <code>float</code>s, and the same method could be extended to (I suppose?) all other types. Does any library out there (or perhaps even the Python stadard library) contain such functionality?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem with trying to do this automatically is that there's no general way to get the layout of a Python type. Heck, there isn't even a general way to tell how big the structure is. Also, types created with the <code>class</code> statement don't quite use <code>struct</code>s for their instances, though they mostly work like structs.</p>
<p>You'd need to provide struct definitions yourself for any type you want to work with, and you'd still need custom handling for types like <code>int</code> and <code>str</code> with particularly weird representations.</p>
</div>
<span class="comment-copy">Yea, let's disregard custom made <code>class</code>es. Regarding the size of the <code>struct</code>, isn't that exactly what <code>sys.getsizeof(obj)</code> provides?</span>
<span class="comment-copy">@jmd_dk: Nope. It includes other memory that belongs to the object but isn't actually part of the struct, such as a list's backing buffer.</span>
