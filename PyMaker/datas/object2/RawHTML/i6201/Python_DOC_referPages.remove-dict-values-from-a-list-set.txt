<div class="post-text" itemprop="text">
<p>How can I get a list of the values in a dict in Python?</p>
<p>In Java, getting the values of a Map as a List is as easy as doing <code>list = map.values();</code>.  I'm wondering if there is a similarly simple way in Python to get a list of values from a dict.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes it's the exact same thing in <a href="https://docs.python.org/2/library/stdtypes.html#dict.values" rel="noreferrer">Python 2</a>:</p>
<pre><code>d.values()
</code></pre>
<p>In <a href="https://docs.python.org/3/library/stdtypes.html#dict.values" rel="noreferrer">Python 3</a> (where <code>dict.values</code> returns a <a href="https://docs.python.org/3/library/stdtypes.html#dict-views" rel="noreferrer"><em>view</em></a> of the dictionaryâ€™s values instead):</p>
<pre><code>list(d.values())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Follow the below example --</p>
<pre><code>songs = [
{"title": "happy birthday", "playcount": 4},
{"title": "AC/DC", "playcount": 2},
{"title": "Billie Jean", "playcount": 6},
{"title": "Human Touch", "playcount": 3}
]

print("====================")
print(f'Songs --&gt; {songs} \n')
title = list(map(lambda x : x['title'], songs))
print(f'Print Title --&gt; {title}')

playcount = list(map(lambda x : x['playcount'], songs))
print(f'Print Playcount --&gt; {playcount}')
print (f'Print Sorted playcount --&gt; {sorted(playcount)}')

# Aliter -
print(sorted(list(map(lambda x: x['playcount'],songs))))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">* operator</a> to unpack dict_values:</p>
<pre><code>&gt;&gt;&gt; d = {1: "a", 2: "b"}
&gt;&gt;&gt; [*d.values()]
['a', 'b']
</code></pre>
<p>or list object</p>
<pre><code>&gt;&gt;&gt; d = {1: "a", 2: "b"}
&gt;&gt;&gt; list(d.values())
['a', 'b']
</code></pre>
</div>
<span class="comment-copy">@Muhd The Python docs always have everything: <a href="http://docs.python.org/2/library/stdtypes.html" rel="nofollow noreferrer">docs.python.org/2/library/stdtypes.html</a></span>
<span class="comment-copy">or, alternatively <code>[d[k] for k in d]</code> which works for both python2.x and 3.x (<i>Please be advised, I'm not actually suggesting that you use this</i>).  Usually you don't actually <i>need</i> a list of values so <code>d.values()</code> is just fine.</span>
<span class="comment-copy">A slightly "better" link (to a specific spot on the page you posted):  <a href="http://docs.python.org/2/library/stdtypes.html#dict.values" rel="nofollow noreferrer">docs.python.org/2/library/stdtypes.html#dict.values</a></span>
<span class="comment-copy">Or <code>d.itervalues()</code> for returning an iterator of dictionary values and avoiding a list.</span>
<span class="comment-copy">@figs The question is "list of values" but yes, if you were iterating a dictionary on Python 2 definitely use <code>d.itervalues()</code> and in most cases you will only need to iterate and wont need a list.</span>
<span class="comment-copy">Nice solution,  I knew you could do this with keys but not with values, good to know :D</span>
