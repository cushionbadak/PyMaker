<div class="post-text" itemprop="text">
<p>I have two dictionaries with different lengths. I want to shuffle both the dictionaries and merge them.I am stuck at writing logic for the same I need some help with algorithm.</p>
<p>first dict</p>
<pre><code>a = { 
'key1' : {'video1' : 'url1'}, 
'key2' : {'video2' : 'url2'}, 
'key3' : {'video3' : 'url3'}
}
</code></pre>
<p>second dict</p>
<pre><code>b = {'ad_video1' : 'url1', 'ad_video2' : 'url2'}
</code></pre>
<p>Desired output is</p>
<pre><code>c = {
    'key1': {
        'video1' : 'url1',
        'ad_video1' : 'url1'

    }, 
    'key2': {
        'video2' : 'url2',
        'ad_video2' : 'url2'
    }, 
    'key3': {
        'video3' : 'url3',
        'ad_video1' : 'url1'
    }
}
</code></pre>
<p>How can I get that final merged dict? 
Any help would be appreciated Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's some code that I believe does what you want. It imposes an order onto the dictionaries by sorting the key strings. We can cycle over the keys in the <code>b</code> dict using <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow noreferrer"><code>cycle</code> from itertools</a>.</p>
<pre><code>from itertools import chain, cycle
from pprint import pprint

a = { 
    'key1': {'video1' : 'url1'},
    'key2': {'video2' : 'url2'},
    'key3': {'video3' : 'url3'}
}

b = {'ad_video1': 'url1', 'ad_video2': 'url2'}

c = {}
for k1, k2 in zip(sorted(a.keys()), cycle(sorted(b.keys()))):
    c[k1] = a[k1].copy()
    c[k1][k2] = b[k2]

pprint(c)
</code></pre>
<p><strong>output</strong></p>
<pre><code>{'key1': {'ad_video1': 'url1', 'video1': 'url1'},
 'key2': {'ad_video2': 'url2', 'video2': 'url2'},
 'key3': {'ad_video1': 'url1', 'video3': 'url3'}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This works:</p>
<pre><code>dct = {}
for key1,value1 in a.items():
    for key2,value2 in b.items():
        dct[key1] = value1
        if key2.endswith(key1[-1:]) and value2.endswith(key1[-1:]):
            dct.get(key1)[key2] = value2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you could use the following steps to merge two dictionaries
    z = x.copy()
    z.update(y)</p>
</div>
<span class="comment-copy">Dictionaries are unordered in python, so I'm not sure what you mean by shuffling them?</span>
<span class="comment-copy">Why do you want to end up with <code>'ad_video1' : 'url2'</code> in the final dictionary? this pair doesn't appear in <code>b</code>.</span>
<span class="comment-copy">Why does the output have <code>'ad_video1' : 'url1'</code> in the <code>'key3'</code> sub-dict?</span>
<span class="comment-copy">Where do you get ad_video3 and url3 from?</span>
<span class="comment-copy">@PM2Ring i need it. Understand it this way basically i have a 2 list of videos one is  the health based videos and the other one is list of ad's videos  and I want to play ads before each video and all the ads should be assigned to all the health based videos. I am having trouble finding the logic Thanks</span>
<span class="comment-copy">Thanks a lot it works</span>
<span class="comment-copy">thanks it works but it does't assign any ads to the remaining values in 'a' dict</span>
<span class="comment-copy">Which ad_video's do you want to assign when they don't match? Always ad_video1?</span>
<span class="comment-copy">First I don't want to match values I just want to assign random ad videos. Understand it this way basically i have a 2 list of videos one is the health based videos and the other one is list of ad's videos and I want to play ads before each video and all the ads should be assigned to all the health based videos. Thanks</span>
<span class="comment-copy">So the ad vidoes you play before are always random?</span>
<span class="comment-copy">Yes the are always random. Thanks</span>
