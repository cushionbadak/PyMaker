<div class="post-text" itemprop="text">
<p>In the below function, how to use the parameters of pim function within chat and chat1 without passing them as parameters?</p>
<p>base.py:</p>
<pre><code>def pim(mode, tag, population_file, variable_file, aggregation, user, 
        passw, email, working_schema, output_schema):

    print mode
    print tag
    print population_file
    print variable_file
    print aggregation
    print user
    print passw
    print email
    print working_schema
    print output_schema


    chat()
    chat1()
</code></pre>
<p>I tried using <code>from base import *</code> in to chat.py (where <code>chat()</code> is created), but it is not recognizing. I would like to know if there is a way to access the parameters without passing them as parameters?</p>
</div>
<div class="post-text" itemprop="text">
<p>I feel like that the reason you avoid to pass the parameters is that there is a <strong>bloody long</strong> parameter list. </p>
<p>You can actually change the function <code>pim</code> to the followings:</p>
<pre><code>def pim(*args):
    print(args[0])
    print(args[1])
    print(args[2])
    print(args[3])
    chat(args)
    chat1(args)
# You can call this function by 
pim(mode,tag,population_file,variable_file,aggregation,user,passw,email,working_schema,output_schema)
</code></pre>
<p>or you can use optional arguments format as follows:</p>
<pre><code>def pim(**kwargs):
    print(kwargs['mode'])
    print(kwargs['tag'])
    print(kwargs['population_file'])
    print(kwargs['variable_file'])
    chat(kwargs)
    chat1(kwargs)
# and you can call your function by
pim(mode='1', tag='2', 'population_file'=3, 'variable_file'=4)
</code></pre>
<p>or you can use the <code>global</code> keyword to make the parameters global available, however, this solution is not recommended. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can store the input parameters in variables and make the variables global, eg:</p>
<pre><code>mode = ""

def pim(mode,tag,population_file,variable_file,aggregation,user,passw,email,working_schema,output_schema):

    globals()['mode'] = mode

    chat()
    chat1()
</code></pre>
</div>
<span class="comment-copy">It sounds like you're looking for some kind of global variable. Not sure if Python has what you're asking for, but that's usually discouraged (when anything anywhere in your codebase can access and change certain variables, it's easy to end up with strange bugs). You might want to check into <a href="https://docs.python.org/3/tutorial/classes.html#tut-classdefinition" rel="nofollow noreferrer">classes</a>. Maybe you could bundle all those variables into a single class and pass <i>that</i> to the <code>chat()</code> and <code>chat1()</code> functions.</span>
<span class="comment-copy">Yeah sorry, got confused with Swift, changed it now</span>
