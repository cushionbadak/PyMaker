<div class="post-text" itemprop="text">
<p>I am trying to compile <a href="https://github.com/PyMySQL/mysqlclient-python" rel="nofollow noreferrer">python-mysqlclient</a> against <a href="https://github.com/MariaDB/mariadb-connector-c" rel="nofollow noreferrer">mariadb-connector-c</a> in a Conda environment.  That means that the install prefix is not <code>/usr/local</code> but, for example, <code>$HOME/conda/envs/test</code>.  I also want to use the <code>auth_gssapi_client.so</code> plugin.</p>
<p>Both packages build, but <code>import MySQLdb</code> raises the following exception:</p>
<pre><code>Traceback (most recent call last):
  File "/opt/emsconda/conda-bld/env/test_tmp/run_test.py", line 2, in &lt;module&gt;
    import MySQLdb
  File "/opt/emsconda/conda-bld/env/lib/python3.6/site-packages/MySQLdb/__init__.py", line 19, in &lt;module&gt;
    import _mysql
ImportError: libmariadb.so.3: cannot open shared object file: No such file or directory
</code></pre>
<p>The reason for this is that <em>mysqlclient</em> only searches <code>lib/</code> but not
<code>lib/mariadb</code> even though it was configured with the right path and sucessfully
built.  I can work around this issue by copying the <code>*.so</code> files to <code>lib/</code> (or
by creating a symlink), but then, it does not find the GSSAPI plugisn …</p>
<p>I build <em>mariadb-connector-c 3.0.2</em> this way:</p>
<pre class="lang-bash prettyprint-override"><code>mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_BUILD_TYPE=Release ..
make
make install
</code></pre>
<p>I can install it and run <code>mariadb_config</code> which gives this output:</p>
<pre class="lang-bash prettyprint-override"><code>Copyright 2011-2015 MariaDB Corporation AB
Get compiler flags for using the MariaDB Connector/C.
Usage: /opt/emsconda/conda-bld/mysqlclient_1510048680472/_h_env/bin/mariadb_config [OPTIONS]
  --cflags        [-I/opt/emsconda/conda-bld/env/include/mariadb -I/opt/emsconda/conda-bld/env/include/mariadb/mysql]
  --include       [-I/opt/emsconda/conda-bld/env/include/mariadb -I/opt/emsconda/conda-bld/env/include/mariadb/mysql]
  --libs          [-L/opt/emsconda/conda-bld/env/lib/mariadb/ -lmariadb -lpthread -ldl -lm -lssl -lcrypto]
  --libs_r        [-L/opt/emsconda/conda-bld/env/lib/mariadb/ -lmariadb -lpthread -ldl -lm -lssl -lcrypto]
  --libs_sys      [-lpthread -ldl -lm -lssl -lcrypto]
  --version       [10.2.6]
  --socket        [/tmp/mysql.sock]
  --port          [3306]
  --plugindir     [/opt/emsconda/conda-bld/env/lib/mariadb/plugin]
  --tlsinfo       [OpenSSL 1.0.2k]
</code></pre>
<p>I then build <em>python-mysqlclient 1.3.12</em> this way:</p>
<pre class="lang-bash prettyprint-override"><code>MYSQL_CONFIG="$PREFIX/bin/mariadb_config"
echo "mysql_config = $PREFIX/bin/mariadb_config" &gt;&gt; site.cfg
$PYTHON -m pip install -I --no-deps .
</code></pre>
<p>There are two possible solutions for this problem:</p>
<ol>
<li><p>Configure <em>mariadb-connector-c</em> to directly put its stuff into <code>lib/</code> – I have not found documentation on how to do this.</p></li>
<li><p>Make <em>python-mysqlclient</em> respect the paths that <code>mariadb_config</code> returns – How?</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>You have to statically link the gssapi stuff into <em>mariadb-connector-c</em> and Python <em>mysqlclient</em> will work.</p>
<p>This is how to build <em>mariadb-connector-c:</em></p>
<pre><code>mkdir build
cd build

cmake \
    -DCMAKE_INSTALL_PREFIX=$PREFIX \
    -DINSTALL_LIBDIR=lib \
    -DINSTALL_PLUGINDIR=lib/plugin \
    -DWITH_MYSQLCOMPAT=ON \
    -DAUTH_GSSAPI=STATIC \
    -DCMAKE_BUILD_TYPE=Release \
    ..

make
make install

# WITH_MYSQLCOMPAT only creates links for the libs, not for the binary:
cd $PREFIX/bin
ln -s mariadb_config mysql_config
</code></pre>
</div>
<span class="comment-copy">Have you tried using <a href="https://docs.python.org/3/library/site.html#site.addsitedir" rel="nofollow noreferrer">addsitedir</a>?</span>
<span class="comment-copy">Does this help with finding C-libraries?</span>
<span class="comment-copy">It adds a directory to <code>sys.path</code> and process its <code>.pth</code> files by default; maybe your problem is that the path of your <code>so</code> file isn't listed in <code>sys.path</code>, so python modules can't find its reference.</span>
<span class="comment-copy">I don’t think this will help.  python-mysqlclient does find's the <code>.so</code> if it is in <code>lib/</code>, but this path is also not in <code>sys.path</code>.</span>
<span class="comment-copy"><code>cmake -DCMAKE_INSTALL_PREFIX=$PREFIX -DINSTALL_LIBDIR=lib -DINSTALL_PLUGINDIR=lib/plugin -DCMAKE_BUILD_TYPE=Release ..</code> partially solves the problem. mysqlclient now finds the lib, but still not the plugins.</span>
