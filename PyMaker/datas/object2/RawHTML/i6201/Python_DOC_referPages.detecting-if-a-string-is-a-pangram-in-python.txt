<div class="post-text" itemprop="text">
<p>How is this working?  It checks if a string contains each character from a-z at least once?</p>
<pre><code>import string

def ispangram(str1, alphabet=string.ascii_lowercase):  
    alphaset = set(alphabet)  
    return alphaset &lt;= set(str1.lower()) 
</code></pre>
<p>This returns True for example:</p>
<pre><code>ispangram("The quick brown fox jumps over the lazy dog")
</code></pre>
<p>I can only assume it is something to do with lexographical ordering as stated here, but still a bit confused.</p>
<p><a href="https://stackoverflow.com/questions/13052857/comparing-two-lists-using-the-greater-than-or-less-than-operator">Comparing two lists using the greater than or less than operator</a></p>
<p>When I read the link in this SO question:</p>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html#comparing-sequences-and-other-types" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#comparing-sequences-and-other-types</a></p>
<p>It says:</p>
<blockquote>
<p>Sequence objects may be compared to other objects with the same
  sequence type. The comparison uses lexicographical ordering: first the
  first two items are compared, and if they differ this determines the
  outcome of the comparison; if they are equal, the next two items are
  compared, and so on, until either sequence is exhausted. If two items
  to be compared are themselves sequences of the same type, the
  lexicographical comparison is carried out recursively. If all items of
  two sequences compare equal, the sequences are considered equal. If
  one sequence is an initial sub-sequence of the other, the shorter
  sequence is the smaller (lesser) one. Lexicographical ordering for
  strings uses the Unicode code point number to order individual
  characters. Some examples of comparisons between sequences of the same
  type.</p>
</blockquote>
<p>But this isn't clear to me.</p>
</div>
<div class="post-text" itemprop="text">
<p>It is a <code>set</code> operation, not <code>list</code>. Which is equivalent to,</p>
<pre><code>alphaset.issubset(set(str1.lower()))
</code></pre>
<blockquote>
<p>s &lt;= t</p>
<p>s.issubset(t)</p>
<p>Test whether every element in s is in t.</p>
</blockquote>
<p>See here:
<a href="https://docs.python.org/2/library/sets.html" rel="nofollow noreferrer">https://docs.python.org/2/library/sets.html</a></p>
<p><strong>Edit:</strong> See here for the current version of <a href="https://docs.python.org/2/library/stdtypes.html#set" rel="nofollow noreferrer">Set</a>. Though easier explanation is given in the old version (For comparisons).</p>
</div>
<div class="post-text" itemprop="text">
<p>No. It's comparing two <a href="https://docs.python.org/3/library/stdtypes.html#types-set" rel="nofollow noreferrer">sets</a>. So it's converting the input string to lower case and then using Python's set type to compare it with the set of lowercase letters. </p>
<p>This is very useful (and fast) technique for comparing two lists to see what members they have in common/difference.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def pangram(s):
alphabet = set('abcdefghijklmnopqrstuvwxyz')
s = s.replace(' ','').lower()
s= sorted(s)

count = {}

    #alphabet could be one sting within '' later sorted, but I just went straight to the point. 
    #After initializing my dictionary at null, we start the count    

for letter in s:
    if letter in count:
        count[letter] =[]
    else:
        count[letter] = 1

for letter in alphabet:
    if letter in count:
        count[letter] =[]
    else:
        count[letter] = 0
for letter in count:
    if count[letter]== 0:
        print (letter +' missing!')
print (count[letter]!= 0)
</code></pre>
</div>
<span class="comment-copy">Did you read: <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.issubset" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#frozenset.issubset</a> ?</span>
<span class="comment-copy">I have now, thanks @alfasin</span>
<span class="comment-copy"><code>s.issubset(t)</code> is equivalent to <code>s &lt;= t</code> see: <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.issubset" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#frozenset.issubset</a></span>
<span class="comment-copy">@alfasin It is the same which op used in his code.</span>
<span class="comment-copy">No idea why this got downvoted.  This is the right answer.</span>
<span class="comment-copy">Thanks, very helpful - not surprised I was confused</span>
