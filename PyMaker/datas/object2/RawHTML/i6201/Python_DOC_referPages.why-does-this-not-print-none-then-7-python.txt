<div class="post-text" itemprop="text">
<p>So I have this code and call me an idiot haha, but I cant get this to print None then 7.</p>
<p>Code:</p>
<pre><code>def function(parameter):
    parameter = parameter + 1
parameter = 6
print(function(parameter))
print(parameter == 7)
</code></pre>
<p>I need to know how to alter the variable that has the same name as the parameter in the function. </p>
<p>Any help would be greatly appreciated, and if you don't understand the question I'd be glad to explain more.</p>
</div>
<div class="post-text" itemprop="text">
<p>It prints <code>None</code> because your <code>function()</code> doesn't return anything.</p>
<p>It prints <code>False</code> because <code>parameter</code> (which is currently <code>6</code>) does not equal <code>7</code>.</p>
<hr/>
<p>To alter the global variable which is being masked by the local variable, use the <a href="http://docs.python.org/library/functions.html#globals" rel="nofollow noreferrer"><code>globals()</code></a> function:</p>
<pre class="lang-py prettyprint-override"><code>def function(parameter):
    globals()['parameter'] += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since I truly hate globals variable this is how I would do it:</p>
<pre><code>def function(parameter):
    return parameter + 1
parameter = function(6)
print(parameter)
print(parameter == 7)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>7
True
</code></pre>
<p>Basically, by specifying a variable with the same name as the parameter and assigning the function you can alter <code>parameter</code> as if it was the same variable. Note that this is not the case, it is not actually the same object. But if your goal is to use the same name it works.</p>
</div>
<div class="post-text" itemprop="text">
<p>Define <code>parameter</code> as global and don't actually pass it as parameter:</p>
<pre><code>def function():
    global parameter
    parameter += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you <em>can</em> do is refer to it as a <code>global</code>. What will probably help you better is to use the concept of <em>functions</em> for what they are: provided any given input, they produce some result. </p>
<p>So, you'd probably want to use a <code>return</code>:</p>
<pre><code>def fun(val):
  return val;

parameter = val(10)
print(parameter) # prints '10'
</code></pre>
<p>However, if you want to refer to the variable, in python you can do all sorts of crazy stuff, like accessing the module scope as an object and alter it's value there:</p>
<pre><code>def fun(val):
  import sys;
  sys.modules[__name__].parameter = val

parameter = 10
fun(1)
print(parameter) # prints '1'
</code></pre>
<p>However, there's a reason I call this crazy, and that's because if a function has side effects, you can never tell from the outside. And that is complexity you want to avoid. Because your code should be predictable as much as possible. For obvious reasons.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using globals is neither thread safe nor recommended. Looks like the cleanest solution 'd be to pass your parameter argument in a mutable container. See <a href="https://docs.python.org/3/faq/programming.html#how-do-i-write-a-function-with-output-parameters-call-by-reference" rel="nofollow noreferrer">https://docs.python.org/3/faq/programming.html#how-do-i-write-a-function-with-output-parameters-call-by-reference</a></p>
</div>
<span class="comment-copy">If you <i>must</i> use it as a parameter, then you cannot, because parameters are forced to be local variables. This doesn't sound like a good idea anyway.</span>
<span class="comment-copy">Optimally, you'd not want to use globals as they aren't as efficient as local variables- why not simply return <code>parameter + 1</code> and set <code>parameter = function(parameter)</code> or something along those lines?</span>
<span class="comment-copy">Possibly duplicate: <a href="https://stackoverflow.com/questions/10235973/modifying-global-variable-with-same-name-as-local-variable" title="modifying global variable with same name as local variable">stackoverflow.com/questions/10235973/â€¦</a></span>
<span class="comment-copy">DRY: <code>globals()['parameter'] += 1</code></span>
<span class="comment-copy">Or that, same effect. (I was trying to change his as little as possible)</span>
<span class="comment-copy">And change the final print to <code>print(parameter)</code>, not <code>print(paramater == 7)</code>, if you want it to actually print <code>7</code>.</span>
<span class="comment-copy">Indeed, I didn't even notice that in his code</span>
