<div class="post-text" itemprop="text">
<p>I am trying to evaluate an expression with both arithmetic and logical operation. I am really confused with the output. </p>
<p>For example:</p>
<pre><code>eval('100 &gt;= 1000 &amp; 100 &gt;= 95')
True   ==&gt; Wrong   

eval('400 &gt;= 0 &amp; 400 &gt;= 0')
True  ==&gt; Right
</code></pre>
<p>I gives the output of the condition after the &amp; operator. Is it we cannot use logical operation in eval</p>
<pre><code>eval('400 &gt;= 5000 | 400 &gt;= 0')
False   ==&gt; Wrong
</code></pre>
<p>Using OR operator , it gives me different output.</p>
<p>When i tried with float values inside the expression, it throws TypeError</p>
<pre><code>eval('400.0 &gt;= 0 &amp; 400.0 &gt;= 0')


Traceback (most recent call last):
  File "&lt;pyshell#70&gt;", line 1, in &lt;module&gt;
    eval('400.0 &gt;= 0 &amp; 400.0 &gt;= 0')
  File "&lt;string&gt;", line 1, in &lt;module&gt;
TypeError: unsupported operand type(s) for &amp;: 'int' and 'float'
</code></pre>
<p>Use it without logical operation ,</p>
<pre><code>eval('400.0 &gt;= 0')
True   ==&gt; Right
</code></pre>
<p>Confused here .</p>
</div>
<div class="post-text" itemprop="text">
<p>Python logical operators are named <code>and</code> and <code>or</code> - <code>&amp;</code> and <code>|</code> are the bitwise operators. So you want:</p>
<pre><code>eval('400 &gt;= 5000 or 400 &gt;= 0')
</code></pre>
<p>This being said, <code>eval()</code> is very unsafe so don't pass it user inputs... </p>
</div>
<div class="post-text" itemprop="text">
<p>Bitwise logical operators has higher precedence the equality. There is nothing specific to <code>eval</code> here.</p>
<pre><code>&gt;&gt;&gt; eval('(400 &gt;= 5000) | (400 &gt;= 0)')
True
</code></pre>
<p>You should be using <code>or</code> in order to have the right precedence:</p>
<pre><code>&gt;&gt;&gt; eval('400 &gt;= 5000 or 400 &gt;= 0')
True
</code></pre>
<p>As mentioned by @bruno desthuilliers, <code>eval</code> is not something you should use on user input. You should probably build you own mapping between user input and Python operation. If you really want to build Python expressions, you might want to have a look at <a href="https://docs.python.org/3/library/ast.html" rel="nofollow noreferrer">the <code>ast</code> module</a>.</p>
</div>
<span class="comment-copy">I wonder why are you using <code>|</code> and <code>&amp;</code></span>
<span class="comment-copy">I need to evaluate an expression like this.  <code>aa  &gt;= 1000 AND bb &gt;= 95</code>. I am substituting the value for aa and bb and evaluating</span>
<span class="comment-copy">Use <code>and</code>  and <code>or</code></span>
<span class="comment-copy"><code>&amp;</code> and <code>|</code> are <i>not</i> boolean operators, they are bitwise.</span>
<span class="comment-copy">This is an answer for the real issue, but not an answer to the question :)</span>
<span class="comment-copy">@Elazar indeed - I thought addressing the root problem would be more helpful &lt;g&gt;</span>
