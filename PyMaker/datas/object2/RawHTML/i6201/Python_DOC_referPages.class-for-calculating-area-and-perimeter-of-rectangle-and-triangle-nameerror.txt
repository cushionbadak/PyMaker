<div class="post-text" itemprop="text">
<p>I get an error from this code, any idea? Looks like there is something with my test functions. I really don't understand this. I just started using classes, is there something important I have to thing about when making test functions within classes? The code seems to work fine if I dont call the test functions with <code>test_Rectangle</code> and <code>test_Triangle</code>. Tried looking in my book and other examples but can't find any solution to this problem. </p>
<pre class="lang-none prettyprint-override"><code>Traceback (most recent call last):
  File "geometric_shapes.py", line 5, in &lt;module&gt;
    class Rectangle(object):
  File "geometric_shapes.py", line 31, in Rectangle
    test_Rectangle()
  File "geometric_shapes.py", line 19, in test_Rectangle
    r = Rectangle(3, 4, 2, 5)
NameError: name 'Rectangle' is not defined
</code></pre>
<p>Code:</p>
<pre><code># Exercise 7.4: Make classes for a rectangle and a triangle

from math import sqrt

class Rectangle(object):
    def __init__(self, x0, y0, w, h):
        self.x0 = x0
        self.y0 = y0
        self.w = w
        self.h = h

    def area(self):
        return self.h*self.w

    def perimeter(self):
        return 2*self.w + 2*self.h

    def test_Rectangle():
        r = Rectangle(3, 4, 2, 5)
        w = 2; h = 5
        expected_area = w*h
        computed_area = r.area()
        diff = abs(expected_area - computed_area)
        tol = 1E-14
        assert diff &lt; tol, "bug in Rectangle.area, diff=%s" % diff

        expected_perimeter = 2*w + 2*h
        computed_perimeter = r.perimeter()
        diff = abs(expected_perimeter - computed_perimeter)
        assert diff &lt; tol, "bug in Rectangle.perimeter, diff=%s" % diff
    test_Rectangle()


class Triangle(object):
    def __init__(self, v1, v2, v3):
        self.v1 = v1
        self.v2 = v2
        self.v3 = v3

    def area(self):
        x1, y1 = self.v1
        x2, y2 = self.v2
        x3, y3 = self.v3
        return 1/2*abs(x2*y3 - x3*y2 - x1*y3 + x3*y1 + x1*y1 - x2*y1)

    def perimeter(self):
        ver = (self.v1, self.v2, self.v3)
        AB = sqrt((ver[1][0] - ver[0][0])**2 + (ver[1][1] - ver[0][1])**2)
        BC = sqrt((ver[2][0] - ver[1][0])**2 + (ver[2][1] - ver[1][1])**2)
        AC = sqrt((ver[2][0] - ver[0][0])**2 + (ver[2][1] - ver[0][1])**2)
        perimeter = AB + BC + AC
        return perimeter

        def test_Triangle():
            t = Triangle((0,0), (1,0), (0,2))
            expected_area = 1
            computed_area = t.area()
            diff = abs(expected_area - computed_area)
            tol = 1E-14
            assert diff &lt; tol, "bug in Triangle.area, diff=%s" % diff

            expected_perimeter = 5.236
            computed_perimeter = t.perimeter()
            diff = abs(expected_perimeter - computed_perimeter)
            assert diff &lt; tol, "bug in Rectangle.perimeter, diff=%s" % diff
        test_Triangle()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As jonsharpe pointed out, you are making wrong indentation, in defining the <code>test_Rectangle</code> function inside <code>Rectangle</code> class</p>
<p>The following program will work.</p>
<p><strong>Edit</strong></p>
<p>Before I thought you have given a small set of code from your code which replicates the issue and hence did not care to change the solution much, but now have updated the answer.</p>
<p><strong>Update</strong></p>
<p>Since, the test functions are inside the class, and since there was no instantiation of the classes and no calls to the test functions through those instances, the functions were not getting called.</p>
<p>In the following code, i have moved your own functions outside the class definitions and called them explicitly.</p>
<pre><code>from math import sqrt

class Rectangle(object):
    def __init__(self, x0, y0, w, h):
        self.x0 = x0
        self.y0 = y0
        self.w = w
        self.h = h

    def area(self):
        return self.h*self.w

    def perimeter(self):
        return 2*self.w + 2*self.h



class Triangle(object):
    def __init__(self, v1, v2, v3):
        self.v1 = v1
        self.v2 = v2
        self.v3 = v3

    def area(self):
        x1, y1 = self.v1
        x2, y2 = self.v2
        x3, y3 = self.v3
        return 1/2*abs(x2*y3 - x3*y2 - x1*y3 + x3*y1 + x1*y1 - x2*y1)

    def perimeter(self):
        ver = (self.v1, self.v2, self.v3)
        AB = sqrt((ver[1][0] - ver[0][0])**2 + (ver[1][1] - ver[0][1])**2)
        BC = sqrt((ver[2][0] - ver[1][0])**2 + (ver[2][1] - ver[1][1])**2)
        AC = sqrt((ver[2][0] - ver[0][0])**2 + (ver[2][1] - ver[0][1])**2)
        perimeter = AB + BC + AC
        return perimeter



def test_Rectangle():
    r = Rectangle(3, 4, 2, 5)
    w = 2; h = 5
    expected_area = w*h
    computed_area = r.area()
    diff = abs(expected_area - computed_area)
    tol = 1E-14
    assert diff &lt; tol, "bug in Rectangle.area, diff=%s" % diff

    expected_perimeter = 2*w + 2*h
    computed_perimeter = r.perimeter()
    diff = abs(expected_perimeter - computed_perimeter)
    assert diff &lt; tol, "bug in Rectangle.perimeter, diff=%s" % diff

def test_Triangle():
    t = Triangle((0,0), (1,0), (0,2))
    expected_area = 1
    computed_area = t.area()
    diff = abs(expected_area - computed_area)
    tol = 1E-14
    assert diff &lt; tol, "bug in Triangle.area, diff=%s" % diff

    expected_perimeter = 5.236
    computed_perimeter = t.perimeter()
    diff = abs(expected_perimeter - computed_perimeter)
    assert diff &lt; tol, "bug in Rectangle.perimeter, diff=%s" % diff

test_Triangle()
test_Rectangle()
</code></pre>
<p>Have a look at these python libraries to write your tests</p>
<p><a href="https://docs.python.org/2/library/unittest.html" rel="nofollow noreferrer">Unit Test python 2</a></p>
<p><a href="https://docs.python.org/3/library/unittest.html" rel="nofollow noreferrer">Unit Test python 3</a></p>
</div>
<span class="comment-copy">Please review your indentation</span>
<span class="comment-copy">You get this error because when <code>test_Rectangle</code> is called inside your class definition, <code>Rectangle</code> is obviously not defined yet. What you're doing is exactly the same thing that <code>x = x +1</code>, with x not defined before in your code. Also, classes aren't functions or procedures. You're not supposed to run a function during a class definition, at least not like this. You need a better book to get a better understanding of OOP.</span>
<span class="comment-copy">Thanks, it works now. Only problem is that my test function won't activate when there is an problem. For example if i set expected_area under def_test_Triangle to 3000 nothing happens.</span>
<span class="comment-copy"><code>test_Rectangle()</code> and <code>test_Triangle()</code> never get called this way.</span>
<span class="comment-copy">Care to explain why? Im following the exact recepie from my book.</span>
<span class="comment-copy">@TheNarsisisst If this is the exact thing your books tells you to do, you <b>need</b> to get another one. But to answer your question, they won't be executed because  the test functions are defined and called <b>after</b> the <code>return</code> statements. The tests are most certainly not meant to be in the classes, they should be functions instead.</span>
<span class="comment-copy">@martineau, Yes i did know that, but assumed that, OP has given a small set of code from your code which replicates the issue and hence did not care to change the solution much, but now have updated the answer.</span>
