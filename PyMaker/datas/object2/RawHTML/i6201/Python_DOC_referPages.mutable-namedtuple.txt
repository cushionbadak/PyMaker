<div class="post-text" itemprop="text">
<p>Suppose I have:</p>
<pre><code>from collections import namedtuple
NT = namedtuple('name', ['x'])
</code></pre>
<p>Can someone explain the difference between:</p>
<ol>
<li><code>NT.x = 3</code> </li>
<li><code>var = NT(x=3)</code> </li>
</ol>
<p>I can change <code>NT.x</code> to anything (mutable) but <code>var.x</code> is immutable. Why is that the case?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>NT</code> is not a namedtuple. <code>NT</code> is a class. Its <em>instances</em> are namedtuples.</p>
<p>You cannot reassign <code>x</code> on an instance. While you <em>can</em> technically mess with the <code>x</code> on the class, that will break attribute access for the <code>x</code> attribute of the instances, as the <code>x</code> on the class is a <a href="https://docs.python.org/3/reference/datamodel.html#implementing-descriptors" rel="noreferrer">descriptor</a> that instances rely on to implement the corresponding instance attribute.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>namedtuple</code> is a class factory.</p>
<p><code>NT(x=3)</code> gives you an instance of your freshly created class.</p>
<p><code>NT.x =3</code> sets an attribute on the class itself.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>NT.x</code> is an attribute of the <em>class</em> <code>NT</code>, not of an <em>instance</em> of that class:</p>
<pre><code>&gt;&gt;&gt; NT.x
&lt;property object at 0x7f2a2dac6e58&gt;
</code></pre>
<p>Its presence is just telling you that instances of <code>NT</code> have a property called <code>x</code>. See also <a href="https://stackoverflow.com/questions/6193556/how-do-python-properties-work">this question</a>.</p>
</div>
