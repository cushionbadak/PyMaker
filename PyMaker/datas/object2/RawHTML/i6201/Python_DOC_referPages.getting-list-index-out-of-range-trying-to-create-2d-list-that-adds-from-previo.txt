<div class="post-text" itemprop="text">
<p>basically, I need to create a bell triangle of values based on a-list-of-sublists/nested-lists that are created from a given param of number of "rows". I'll worry about the formatting of the bell myself but I'm struggling to come up with the logic to generate the nested-list. I'm not too familiar with python syntax. </p>
<p>so I need to make it so that the first element of each sublist (except the first sublist, the first sublist/row is always just [1]) in the list <em>rtable</em> is the last element of the previous sublist, and every subsequent value in that sublist is the sum of the previous index's value and the previous sublist's value that has the same index as the current sublist. so if the param was 3 rows it would look like</p>
<blockquote>
<p>1<br/>
  1 2<br/>
  2 3 5</p>
</blockquote>
<p>or as a list would look like</p>
<blockquote>
<p>[[1], [1, 2], [2, 3, 5]]</p>
</blockquote>
<p>here's what I've got so far:</p>
<pre><code>def create_list(num_rows):
    rtable = []
    rtable.append([1])

    if num_rows &gt; 1:
        rtable.append([1])

    for i in range(num_rows):
        for j in range(i + 1):
            if i != 0 and j == 0:
                rtable[i].append(rtable[i - 1][-1]) # error here
            else:
                rtable[i].append(rtable[i - 1][j - 1] + rtable[i][j - 1])

    return rtable
</code></pre>
<p>the first if-statement exists to start the second row if the param is more than 1 row since I know that is what starts the second row. the second if- exists so that it appends iff it isn't on the first sublist where there is nothing more that needs to be added. the out of range error occurs at the line right under that if- . not sure why I'm getting out of range there since I'm making sure that appends only if the sublist it's on isn't the first/0th sublist, meaning afaik it would only run if it were on a sublist between the second and the last sublist, where it could go back and look at the previous sublist and not be out of range. also I'm using [-1] to access the last element of the list as I learned that that's how to access the last element of the list. so not sure what's wrong here. any help would be appreciated</p>
</div>
<div class="post-text" itemprop="text">
<p>this works for me  </p>
<pre><code>def create_list(num_rows):
    r = [[1]]                         # init 0_th row with 1
    for i in range(1, num_rows):      # add num_rows - 1 new rows
        r.append([r[i-1][-1]])        # init new row/list with last element of previous
        for n in r[i-1]:              # get each successive n from previous row
           r[i].append(r[i][-1] + n)  # add each n to the previous num in current row, append 
    return r


create_list(6)

[[1],
 [1, 2],
 [2, 3, 5],
 [5, 7, 10, 15],
 [15, 20, 27, 37, 52],
 [52, 67, 87, 114, 151, 203]]
</code></pre>
<p>wii's comments for debug print statement should help with your code</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>def triangle(n):
   first = 0
   second = 1
   count = 0
   l = [second]
   for i in range(1, n):
      current_list = []
      for b in range(i-1):
           if count%2 == 0:
               current_list.append(second)
           else:
               current_list.append(first)
           temp1 = second
           second += first
           first = temp1
       l.append(current_list)
       count += 1
   return l


final_data = triangle(5)
new_final_data = [final_data[0]]+final_data[3:]
print(new_final_data)
</code></pre>
<p>Output:</p>
<pre><code>[[1], [1, 2], [2, 3, 5]]
</code></pre>
</div>
<span class="comment-copy">Please post the Traceback, formatted as code.</span>
<span class="comment-copy">Have you tried to <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">catch the error</a> and print/inspect <code>rtable</code>, <code>i</code>, and<code>j</code> to see what mmight be going on?</span>
<span class="comment-copy">Add <code>print('rtable:{}, i:{}, j:{}'.format(rtable, i, j))</code> to the <i>top</i> of the inner loop When <code>i</code> is two and <code>j</code> is zero, <code>rtable</code> only has two <i>sub</i>-lists so <code>rtable[i]</code> is trying to index an item that isn't there..</span>
<span class="comment-copy">@wwii sorry for stupid question, how do I get the traceback? I've looked up examples and am getting more errors trying to generate it</span>
<span class="comment-copy">would there be a way to do this without "yield" ? never heard of it before and would like to know if there was a way to do this without it and just list functions like get() and append(), and looping</span>
<span class="comment-copy">@991gal please see my recent edit.</span>
<span class="comment-copy">I'm trying to print new_final_data and not getting anything written at the console, anything else needed to run this?</span>
<span class="comment-copy">@991gal please see my recent edit.</span>
