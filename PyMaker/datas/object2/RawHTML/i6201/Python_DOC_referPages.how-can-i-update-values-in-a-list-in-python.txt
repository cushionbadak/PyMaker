<div class="post-text" itemprop="text">
<p>I have a list of tuples looking like this:</p>
<pre><code>[(5, 0, 1, 8), (5, 0, 1, 14, 15), (5, 0, 1, 14, 16)]
</code></pre>
<p>I also have a dictionary that is in the form: </p>
<pre><code>{0: [], 1: [], 2: [], 3: [], 4: [], 5: ['CVE-2016-3379'], 7: ['CVE-2016-3646'], 8: [], 9: ['CVE-2015-1769'], 10: ['CVE-2016-3364', 'CVE-2016-7193', 'CVE-2016-3363'], 14: [], 15: ['CVE-2015-1769'], 16: ['CVE-2016-3363', 'CVE-2016-7193', 'CVE-2016-3364'], 17: [], 18: [], 19: [], 20: [], 21: ['CVE-2015-1769'], 22: ['CVE-2016-3363', 'CVE-2016-7193', 'CVE-2016-3364'], 26: [], 27: [], 28: [], 29: [], 30: [], 32: []}
</code></pre>
<p>How can I update the values in the first list with the values from the dictionary?</p>
<p>I want <code>5</code> for example to become <code>5: ['CVE-2016-3379']</code>, <code>0</code> to become <code>0: []</code> etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do that with this <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>res = [tuple('{}: {}'.format(i, my_dict[i]) for i in t) for t in my_list]
</code></pre>
<p><strong>Example of output:</strong></p>
<pre><code>&gt;&gt;&gt; my_list = [(5, 0, 1, 8)]
&gt;&gt;&gt; my_dict = {0: [], 1: [], 5: ['CVE-2016-3379'], 8: []}
&gt;&gt;&gt; res = [tuple('{}: {}'.format(i, my_dict[i]) for i in t) for t in my_list]
&gt;&gt;&gt; res
[("5: ['CVE-2016-3379']", '0: []', '1: []', '8: []')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given your <code>list</code> is called <code>lst</code> and the <code>dict</code> is called <code>dct</code>, you can use the following nested comprehension:</p>
<pre><code>lst = [tuple(dct[x] for x in tpl) for tpl in lst]
</code></pre>
<p>Since the tuples in your <code>list</code> are immutable, you can not just update their cells. You have to rebuild them with the new values.</p>
</div>
<span class="comment-copy">Show us what you've already tried.  SO isn't a code-writing service.</span>
<span class="comment-copy">Please put that info in your question, where it belongs. And it's pointless putting multi-line Python code into comments since the indentation gets lost.</span>
<span class="comment-copy">Thank you for the answer. This is not a coding assisgnment, it is a part of a project that is confidential and my python skills are not that great.</span>
<span class="comment-copy">Quite possible that this is what the OP means by his desired output :)</span>
