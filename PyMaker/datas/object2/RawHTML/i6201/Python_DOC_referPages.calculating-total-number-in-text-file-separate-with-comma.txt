<div class="post-text" itemprop="text">
<p>I have this data in txt file:</p>
<pre><code>1,2,3,4
</code></pre>
<p>How do I calculate the average from it? This is what I have so far but it print
<strong>invalid literal for int() with base 10</strong> :</p>
<pre><code>data = []
with open('number.txt') as x:
    for line in x:
        y = line.split()
        xdata = map(int,y)
        data.extend(xdata)
    print('Total:',sum(data))
    print('Average:',(sum(data)/len(data)))
</code></pre>
<p>Suggestion and help please.Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is the changed code as you can see we need to split with comma so that it works properly</p>
<pre><code>data = []
with open('number.txt') as x:
    for line in x:
        y = line.split(',')
        xdata = map(int,y)
        data.extend(xdata)
    print('Total:',sum(data))
    print('Average:',(sum(data)/len(data)))
</code></pre>
<p>you can learn more about split on <a href="https://www.tutorialspoint.com/python/string_split.htm" rel="noreferrer">tutorialspoint</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you're splitting by comma, you'll need to specify that delimiter to <code>split</code>:</p>
<pre><code>&gt;&gt;&gt; line.split(',')
['1', '2', '3', '4']
</code></pre>
<p>Otherwise, you split by space by default, meaning <code>y</code> becomes  </p>
<pre><code>&gt;&gt;&gt; line.split()
['1,2,3,4']
</code></pre>
<p>Which is an invalid numeric value, raising the error.</p>
<hr/>
<p>You can consolidate your code with a list comprehension:</p>
<pre><code>with open('number.txt') as f:
    data = [int(x) for line in f for x in line.split(',')]

avg = sum(data) / len(data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just to add a solution.</p>
<p>You can open the file using the csv module:</p>
<pre><code>import csv


with open("yourfile.txt") as csv_file:
    data = [int(x) for x in csv.reader(csv_file, delimiter=',')[0]]

print sum(data)
print sum(data)/len(data)
</code></pre>
<p>The <code>[0]</code> index is to get the first line in your file
and i used a <a href="https://www.python-course.eu/list_comprehension.php" rel="nofollow noreferrer">list comprehension</a> to get the values as integers</p>
<p><a href="https://en.wikipedia.org/wiki/Comma-separated_values" rel="nofollow noreferrer">more about csv files</a></p>
<p><a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer">more about the csv module</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can make a list of integers from the string you read from the file like this:</p>
<pre><code>from ast import literal_eval
Your_list=literal_eval(your_string)
Your_integer_list=[]
for i in Your_list:
    Your_integer_list.append(int(i))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Inspired by <a href="https://stackoverflow.com/a/47054314/21945">@Karak's effort</a> with <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval()</code></a> consider this:</p>
<pre><code>from ast import literal_eval
from statistics import mean

with open('number.txt') as f:
    data = [i for line in f for i in literal_eval(line)]

    print('Total:', sum(data))
    print('Average:', mean(data))
</code></pre>
<p>This will work as long as the file contains comma separated numbers (will also work with floats, and mixed floats and ints). If there is a single number on a line it must have a trailing <code>,</code> so <code>literal_eval()</code> will interpret the line as a tuple.</p>
</div>
<span class="comment-copy">it works...thanks for the correction</span>
<span class="comment-copy">work as well...thanks</span>
<span class="comment-copy">@Joehan If it works, you could mark the answer accepted. Cheers! Edit: Ah, I see you marked another answer. No probs.</span>
<span class="comment-copy">This works, however, the last 3 lines are redundant. <code>literal_eval()</code> already returns a <i>tuple</i> of integers so you don't need to convert with <code>int()</code>. And you could use <code>list.extend()</code> to accumulate the integers from each line of the file.</span>
