<div class="post-text" itemprop="text">
<p>I'm trying to pull out strictly the index number from the following dictionary:</p>
<pre><code>data = {0: {'GAME_ID': '0021600457', 'TEAM_ID': 1610612744}, 1: {'GAME_ID': 
'0021600457', 'TEAM_ID': 1610612744}, 2: {'GAME_ID': '0021600457', 'TEAM_ID': 
1610612744}
</code></pre>
<p>I'd like to be able to do something like</p>
<pre><code>print(data[x])
</code></pre>
<p>And have it return:</p>
<pre><code>0
</code></pre>
<p>I'm sure this is something simple that I'm overlooking?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you have mixed up index numbers with keys.
Dictionaries are formed like such:</p>
<p><code>{key: value}</code></p>
<p><code>data.keys()</code> will return a list of keys.
In your case:</p>
<pre><code>data.keys()
[0,1,2]
</code></pre>
<p>From there, you can call the first item, which is 0 (First item in a list is 0, and then progresses by one).</p>
<pre><code>data.keys()[0]
0
</code></pre>
<p>If you are looking for a specific key by the predefined values, then try:</p>
<pre><code>x = 'GAME_ID'
y = '0021600457'

for index_num, sub_dict in data.items():
    for eachsub_keys in sub_dict.keys():
        if eachsub_keys == x:
            print(index_num)

for index_num, sub_dict in data.items():
    for eachsub_values in sub_dict.values():
        if eachsub_values == y:
            print(index_num)

Output:
0
1
2

0
1
2
</code></pre>
<p><strong>Note:</strong> python3 no longer uses .iteritems()</p>
<p>By the way, you are missing a curly brace at the end.  It should be like this:</p>
<p><code>data = {0: {'GAME_ID': '0021600457', 'TEAM_ID': '1610612744'}, 1: {'GAME_ID': 
'0021600457', 'TEAM_ID': '1610612744'}, 2: {'GAME_ID': '0021600457', 'TEAM_ID': 
'1610612744'}}</code></p>
<p>Assuming that you wanted consistency, I've added the missing quotes as well.</p>
</div>
<div class="post-text" itemprop="text">
<p>Some more info on dictionary operations in the <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer">docs</a>.</p>
<p>This what you want?:</p>
<pre><code>data = {0: {'GAME_ID': '0021600457', 'TEAM_ID': 1610612744},
        1: {'GAME_ID': '0021600457', 'TEAM_ID': 1610612744},
        2: {'GAME_ID': '0021600457', 'TEAM_ID': 1610612744}}

for key in data:
    print (key)

# Outputs:
0
1
2
</code></pre>
<p>If you are trying to iterate over the values:</p>
<pre><code>data = {0: {'GAME_ID': '0021600457', 'TEAM_ID': 1610612744},
        1: {'GAME_ID': '0021600457', 'TEAM_ID': 1610612744},
        2: {'GAME_ID': '0021600457', 'TEAM_ID': 1610612744}}

for value in data.values():
    print (value)

# or

for key in data:
    print (data[key])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Could you clarify where you are getting 'x' from?  If you want to print keys, you could just do</p>
<pre><code>for i in dict:
    print(i)
</code></pre>
</div>
<span class="comment-copy">What is X here ?please elaborate question</span>
<span class="comment-copy">X just represented the unknown.  I updated this so that the dictionary is called "data".  Can I type some command along side "data" so that it will print the first index number?</span>
<span class="comment-copy">Please give an example value of <code>x</code> and what the output would be.</span>
<span class="comment-copy">I don't have an example for this specific need.  If I wanted to return the first GAME_ID, I could type print(data[0]['GAME_ID]) and get '0021600457'  Put what do I need to type to have it return the "0", which represents the first record?</span>
<span class="comment-copy">You can get a list of the indexes with <code>data.keys()</code> but they won't be in any particular order. If they look like they're in order, that's an accident.</span>
<span class="comment-copy">Ah.  OK.  Yes, my terminology was incorrect.  Thank you!!</span>
<span class="comment-copy">@GeorgeRodman No problem, I hope this helped.</span>
<span class="comment-copy">@GeorgeRodman I have expanded my answer to include predefined searches.</span>
<span class="comment-copy">Perfect.  Yes, thank you!</span>
<span class="comment-copy">If you don't have the rep to comment, don't put them into an "answer" like this.</span>
