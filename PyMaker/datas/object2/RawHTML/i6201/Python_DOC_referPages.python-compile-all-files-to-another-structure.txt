<div class="post-text" itemprop="text">
<p>I have a Python project with files in a directories structure and I would like to get all .pyc files to the same directories to deliver without sources.</p>
<p>I am trying to do this with <code>python -m compileall -d /tmp/new -b .</code> but all pyc files are created in their respective sources directories instead of /tmp/new/somedir/</p>
<p>Any ideas? Will i have to create a script to recreate this structure?</p>
</div>
<div class="post-text" itemprop="text">
<p>Take a look about distributing *.pyc files:</p>
<p><a href="https://stackoverflow.com/questions/11368304/what-are-the-limitations-of-distributing-pyc-files">What are the limitations of distributing .pyc files?</a></p>
<p>I suggest you use Py2Exe or cx_Freeze:</p>
<ul>
<li><a href="http://www.py2exe.org/" rel="nofollow noreferrer">http://www.py2exe.org/</a></li>
<li><a href="https://anthony-tuininga.github.io/cx_Freeze/" rel="nofollow noreferrer">https://anthony-tuininga.github.io/cx_Freeze/</a></li>
</ul>
</div>
<span class="comment-copy">You can try to move the directory iteratively in os.walk()</span>
<span class="comment-copy">why not remove all .py files with <code>find</code> afterwards</span>
<span class="comment-copy">That is the idea of the script i mention in my question : )</span>
<span class="comment-copy">Thanks for this answer but I do not want an executable, I want to use this project as a library.</span>
<span class="comment-copy">I have never used "pyc" files in this way, and I think that it's not a good idea, but if you want to try to do that, you should try to create a <b>pycache</b> directory where you have the source files. Or you can check the documentation, I think that example can be useful: <a href="https://docs.python.org/3/library/compileall.html" rel="nofollow noreferrer">docs.python.org/3/library/compileall.html</a></span>
