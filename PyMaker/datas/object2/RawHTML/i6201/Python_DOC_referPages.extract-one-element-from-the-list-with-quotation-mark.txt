<div class="post-text" itemprop="text">
<p>I would like to extract one element from list in python.</p>
<p>For example:</p>
<pre><code>a = [0,1,2,3]
b = ['0','1','2','3']
a1 = a[0]
b1 = b[0]
print(a1)
print(b1)
</code></pre>
<p>As expected, the code print 0 for both a1 and b1.</p>
<p>However I would like to get '0' for both a1 and b1 with single quotation mark instead of 0.</p>
<p>Any idea or help would be really appreciate.</p>
<p>Thank you,</p>
<p>Issac</p>
</div>
<div class="post-text" itemprop="text">
<p>Quotation marks are not parts of a value - they are only for distinguish e. g. <em>the number</em> <code>1</code> from <em>the string</em> with the only <em>symbol</em> <code>1</code>.</p>
<p>The <code>print()</code> function <em>don't print quotation marks even around strings</em> (unlike  an interactive session when you give as input <em>only a variable name or an expression</em>).</p>
<p>So you have manually put them into the <code>print()</code> function, e. g.</p>
<pre><code>print("'" + str(a1) + "'")
print("'" + b1 + "'")
</code></pre>
<p>or</p>
<pre><code>print("'{}'".format(a1))
print("'{}'".format(b1))
</code></pre>
<p>or - in Python 3.6+ -</p>
<pre><code>print(f"'{a1}'")
print(f"'{b1}'")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Normally, Python will print a string without quotes. That's standard in almost all programming languages.</p>
<p>However, Python <em>does</em> let you print a string with the quotes, you just need to tell it to print the <em>representation</em> of the string. One way to do that is with the <code>!r</code> formatting directive.</p>
<p>The items in <code>a</code> are integers, if you want them printed as strings you need to convert them to strings.</p>
<pre><code>a = [0, 1, 2, 3]
b = ['0','1','2','3']
a1 = a[0]
b1 = b[0]

print('{!r}'.format(str(a1)))
print('{!r}'.format(b1))
</code></pre>
<p><strong>output</strong></p>
<pre><code>'0'
'0'
</code></pre>
<hr/>
<p>You can read about the representation of a string in <a href="https://docs.python.org/3/tutorial/inputoutput.html#fancier-output-formatting" rel="nofollow noreferrer">the official tutorial</a>.</p>
<p>There are other ways to see the representation of a string. For example, you can call the built-in <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow noreferrer"><code>repr</code></a> function:</p>
<pre><code>print(repr(b1))
</code></pre>
<p>Bear in mind that if a string already contains single-quote chars then its representation will be enclosed in double-quotes:</p>
<pre><code>s = "A 'test' string"
print(repr(s))
</code></pre>
<p><strong>output</strong></p>
<pre><code>"A 'test' string"
</code></pre>
<p>And if the string contains a mixture of quotes then the representation will revert to using single quotes, and using backslash escapes to denote single quotes:</p>
<pre><code>s = "A 'test' \"string\""
print(repr(s))
</code></pre>
<p><strong>output</strong></p>
<pre><code>'A \'test\' "string"'
</code></pre>
<p>So if for some reason you don't want that behaviour, then you will need to print the quote marks explicitly:</p>
<pre><code>s = "A 'test' string"
print("'{}'".format(s))
</code></pre>
<p><strong>output</strong></p>
<pre><code>'A 'test' string'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>well,</p>
<pre><code>&gt;&gt;&gt; print(repr(str(a1)))
'0'
&gt;&gt;&gt; print(repr(str(b1)))
'0'
</code></pre>
<p>will do, but as commented by others I am unsure about your intentions.</p>
</div>
<div class="post-text" itemprop="text">
<p>I searched online and found <a href="https://stackoverflow.com/questions/17171889/why-are-some-python-strings-are-printed-with-quotes-and-some-are-printed-without">Why are some Python strings are printed with quotes and some are printed without quotes?</a></p>
<p>I think if you print as follows, it will work as you wish:</p>
<pre><code>print(repr(a1))
print(repr(b1))
</code></pre>
</div>
<span class="comment-copy">Do you want just to print it, or do you need the three-characters-long string '0' for further processing?</span>
<span class="comment-copy">This is not how values and types work. the output of <code>print(0)</code> and <code>print('0')</code> will be the same in almost any language, but that's also mostly completely irrelevant. if you want to print a single quote, <code>print("'")</code> a single quote.</span>
<span class="comment-copy">@GPhilo: I need the three-characters-ling string '0'. Thank you,</span>
<span class="comment-copy">@Isaac you define a string <code>my_string = "'{}'".format(a1)</code>. <code>my_string</code> will contain <code>'0'</code> and have length 3.</span>
<span class="comment-copy">@GPhilo: Thank you!!</span>
<span class="comment-copy">the <code>print()</code> function outputs only the value to the screen. the quotes are not part of the (string) value '1'.</span>
<span class="comment-copy">@hop I don't understand - how it is related to my answer?</span>
<span class="comment-copy">it further clarifies your answer. i didn't want to be rude and edit your answer.</span>
<span class="comment-copy">@hop - Oh, I understood your comment now - you are right and I am going to put it in my answer. Thanks!</span>
<span class="comment-copy">you should not rely on the behaviour of <code>repr()</code> in this case. just print the quotes explicitely.</span>
<span class="comment-copy">@hop What do you mean, exactly? I think my answer covers most of the common options.</span>
<span class="comment-copy">my comment was from befor the edit. the second half of you answer shows why it is a bad idea to rely on <code>repr()</code>.</span>
