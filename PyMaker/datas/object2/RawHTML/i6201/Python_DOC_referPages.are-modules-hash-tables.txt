<div class="post-text" itemprop="text">
<pre><code>import module_name
</code></pre>
<p>Is the above expression copying the whole code inside of the working module, or does it just know its name (or its path)?</p>
<p>If it copies the whole code inside of the working library, then why do we have to use a <code>module_name.function</code> kind of system to work with that module?</p>
<p>If it does not copy any code, then after the amendment of that <code>module(module_name)</code>, why does it still work?</p>
</div>
<div class="post-text" itemprop="text">
<p>Modules are objects just like everything else in Python. When you write <code>import module_name</code>, Python executes the module's contents in its own namespace and stores that namespace/object in <code>sys.modules</code>. In the module where the import was run, that namespace/object is bound to the name of the module. The simple import statement you are asking about is roughly equivalent to <code>module_name = __import__('module_name')</code>.</p>
<p>As <a href="https://stackoverflow.com/users/8150130/treyten-carey">Treyten Carey</a> mentioned in a comment, you can also write <code>from module_name import *</code> instead. From that point on during execution, all public names within <code>module_name</code> are freely available for use within the calling module without the need to refer to the namespace they came from. If you are familiar with other languages, you might think this is similar to <code>using</code> in C# or <code>include</code> from C. However, it is not entirely the same.</p>
<p>In case you dislike having to refer to a module's namespace each time you want to access something from within it <em>and</em> you want to write Pythonic code that would be seen most favorably among other Python programmers, may I suggest that you <code>import this</code> during an interactive session with the interpreter? You will see "The Zen of Python, by Tim Peters," and there a few points people might argue support the idea of namespaces:</p>
<ul>
<li>Explicit is better than implicit.</li>
<li>Readability counts.</li>
<li>In the face of ambiguity, refuse the temptation to guess.</li>
<li>Namespaces are one honking great idea -- let's do more of those!</li>
</ul>
</div>
<span class="comment-copy">I would recommend reading <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">the documentation on this</a>.</span>
<span class="comment-copy">You do not have to use <code>module_name.function</code>. By using <code>from module_name import *</code> you can simply use <code>function</code></span>
<span class="comment-copy">It doesn't <i>copy</i> the module's code. It <i>executes</i> the module's code inside the module's namespace.</span>
<span class="comment-copy">Do me a favor, I am reading the documentation of Python 3.x. and I currently at module section and I still haven't read objects, classes etc.Is it necessary to read all the details(explicitly) about python for beginners? Because sometimes things does not seems to be work .</span>
<span class="comment-copy">To learn Python, I suggest going through a tutorial and typing the code as you go. Do not copy and paste. If what you typed does not work, ask someone in person for help if possible, or ask a question on this website. After getting a working program, try changing things and playing around with a copy of your code to see how changing things causes the program to act differently.</span>
