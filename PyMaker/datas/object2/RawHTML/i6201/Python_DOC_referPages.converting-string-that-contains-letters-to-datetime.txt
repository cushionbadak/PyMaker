<div class="post-text" itemprop="text">
<p>i got a string that looks like :</p>
<pre><code>2012-10-01 13:00:00 +0000 UTC
</code></pre>
<p>i want to change it to DateTime format in python, I've tried this </p>
<pre><code>data['dt']=pd.to_datetime(data['dt'])
</code></pre>
<p>and got the following errors:</p>
<pre><code>1- TypeError: Unrecognized value type: &lt;class 'str'&gt;

2- ValueError: Unknown string format
</code></pre>
<p>also tried to add  <code>format='%d%b%Y %H:%M'</code> but got errors number 1 and </p>
<pre><code>ValueError: time data '2012-10-01 12:00:00 +0000 UTC' does not match format '%d%b%Y %H:%M' (match)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>data['dt']=pd.to_datetime(data['dt'], format = '%Y-%m-%d %H:%M:%S +%f %Z')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend this:</p>
<pre><code>import time
pd.to_datetime(time.strptime('2012-10-01 13:00:00 +0000 UTC', '%Y-%m-%d %H:%M:%S %z %Z'))
</code></pre>
</div>
<span class="comment-copy">Are all date times in UTC time?</span>
<span class="comment-copy">If yes, you can use: <code>data['dt'] = pd.to_datetime(data['dt'].str.rsplit(None, 1).str[0]).dt.tz_localize('utc'))</code></span>
<span class="comment-copy">So make the format match... What is tripping you up exactly? See <code>%Z</code> in <a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer">docs.python.org/3/library/…</a></span>
<span class="comment-copy"><code>'%Y-%m-%d %H:%M:%S +%f %Z'</code> would be better.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ, AFAIK, <code>%f</code> - is a fraction of second...</span>
<span class="comment-copy">@MaxU Thanks, my eyes skimmed over the <code>f</code> and went straight to the hardcoded UTC!</span>
<span class="comment-copy">this worked, Thanks.</span>
<span class="comment-copy">You shouldn't recommend this, it doesn't work with string columns.</span>
<span class="comment-copy">This might work well with scalar value, but it will be painfully slow if we try to apply it to a long vector (DF's column)...</span>
