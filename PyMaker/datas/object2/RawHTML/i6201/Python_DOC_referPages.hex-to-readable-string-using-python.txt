<div class="post-text" itemprop="text">
<p>When I'm executing the following query:</p>
<pre><code>SELECT HEX(FILL),ID FROM dbo.table WHERE FILL &lt;&gt; ''
</code></pre>
<p>It gives me below result:</p>
<pre><code>404040404040404000000F40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040
</code></pre>
<p>When I modified my query like this </p>
<pre><code>SELECT FILL,ID FROM dbo.table WHERE FILL &lt;&gt; ''
</code></pre>
<p>I'm getting the result as shown in the picture:</p>
<p><a href="https://i.stack.imgur.com/iZh4F.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/iZh4F.jpg"/></a></p>
<p>used this URL for conversion: <a href="https://codebeautify.org/hex-string-converter" rel="nofollow noreferrer">https://codebeautify.org/hex-string-converter</a></p>
<p>The above URL does not give me correct desired result. So I used, Python.</p>
<p>This is my python code to convert to a readable format:</p>
<pre><code>import base64
hex_data   ='404040404040404000000F40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040'
ascii_string = str(base64.b16decode(hex_data))[2:-1]
print (ascii_string)
</code></pre>
<p>I'm getting the result as:</p>
<pre><code>@@@@@@@@\x00\x00\x0f@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
</code></pre>
<p>How can I make the string readable ( I wanted to read plain English chars)?</p>
</div>
<div class="post-text" itemprop="text">
<p>You mangled the <a href="https://stackoverflow.com/questions/2592764/what-does-a-b-prefix-before-a-python-string-mean">bytes value</a> by passing it to <code>str()</code>.
By passing your <code>bytes</code> object through <code>str()</code> here, you produced a <em>representation of the bytes object</em>. That a representation is a string too is coincidental.</p>
<p>You can, at best, <em>decode</em> the bytes to text with the decode method:</p>
<pre><code>bytes_object = base64.b16decode(hex_data)
text_object = bytes_object.decode('latin1')
</code></pre>
<p>I used Latin-1 (ISO-8859-1) to decode the data, because it is probably not ASCII data. Most ASCII text doesn't use NULL or <a href="https://en.wikipedia.org/wiki/Shift_Out_and_Shift_In_characters" rel="nofollow noreferrer">SI (shift-in)</a> bytes, to begin with. ASCII will work too, but as soon as you have any data outside of the 0x00-0x7F range you'll get an error instead.</p>
<p>The hex string converter you found includes the NULL and SI bytes too, but they are not printable so your browser doesn't show them. If you use <code>print()</code> then most likely your <em>terminal</em> won't show them either:</p>
<pre><code>&gt;&gt;&gt; import base64
&gt;&gt;&gt; hex_data   ='404040404040404000000F40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040'
&gt;&gt;&gt; bytes_object = base64.b16decode(hex_data)
&gt;&gt;&gt; text_object = bytes_object.decode('latin1')
&gt;&gt;&gt; text_object
'@@@@@@@@\x00\x00\x0f@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'
&gt;&gt;&gt; print(text_object)
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try <a href="https://docs.python.org/3/library/binascii.html#binascii.unhexlify" rel="nofollow noreferrer"><code>binascii.unhexlify()</code></a>:</p>
<pre><code>&gt;&gt;&gt; binascii.unhexlify('404040404040404000000F40404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040')
'@@@@@@@@\x00\x00\x0f@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'
</code></pre>
<p>Of course, you could also change your query to <em>not</em> hex encode the field:</p>
<pre><code>SELECT FILL,ID FROM dbo.table WHERE FILL &lt;&gt; ''
</code></pre>
<p>which seems a better solution.</p>
</div>
<span class="comment-copy">What is the output of that text supposed to be?</span>
<span class="comment-copy">We are getting data from IBM DB2 iSeries machine and reading those for Analytics. So, we are excepting it to be a numbers or chars.</span>
<span class="comment-copy">The image you uploaded appears to be a large blank rectangle with a small square in the top-left corner that says <code>FILL</code>, together with 3 1/2 rows of placeholder squares.</span>
<span class="comment-copy">People are down voting this. However, I can challenge Python exports to at least give a proper clue, at least; as Python has been most popular language to analyze any data (I think even Data from Galaxy has been analyzed by Python). They may give the solution or not. If I got a solution, I'll definitely share here.</span>
<span class="comment-copy">I have just modifies the question as per your suggestion and the data in a screenshot is shown. Please have a look at the data in the screenshot and suggest. I wanted to read plain English chars.Thanks.</span>
<span class="comment-copy">What are these? How can I read this : \x00\x00\x0f</span>
<span class="comment-copy">The screenshot doesn't really help. The string contains <code>\x00</code> (NUL) and '\x0F` characters which are not printable, and that might explain the screenshot. What is the value supposed to be? It looks like those values are actually in the database. Try querying with your databases' native user interface.</span>
<span class="comment-copy"><code>unhexlify</code> produces the same output <code>b16decode</code>. They are using Python 3, and have mangled the <code>bytes</code> object.</span>
