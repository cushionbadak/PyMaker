<div class="post-text" itemprop="text">
<p>I am making a username password program using sqlite and i want to check if a username is in the database (ive already dont this) then i want to find the row id of said username, this will be a username that the user has inputed, i know how to find the rowid of a word in the database e.g 'Word'. How would i make is so i could replace the word with a variable
here is my code:</p>
<pre><code>def sign_in():
    usernameask = input("What is your username?")
    passwordask = input("What is your password?")
    c.execute("SELECT username FROM stuffToPlot")
    names = {name[0] for name in c.fetchall()} 
    if usernameask in names:
        print("Yes")
        c.execute("SELECT password FROM stuffToPlot")
        passs = {name[0] for name in c.fetchall()}
        if passwordask in passs:
            print("yes,pass")
            t = c.execute("SELECT rowid, FROM stuffToPlot WHERE username = 'usernameask' ")
            rowid = t.fetchall()
            for r in rowid:
                print(r)
        else:
            print("No,pass"
</code></pre>
<p>i am looking at where it says <code>t = c.execute("SELECT rowid, FROM stuffToPlot WHERE username = 'usernameask' ")</code>
and want to replace the <code>'usernameask'</code> wich is currently looking for it as a word in the database to a variable. How would i do this?
There is no error, it just finds the position of the word "usernameask" wich isnt in the database.</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to use a <em>parameterised query</em>. You put placeholders in your query where your data has to go, and leave it to the database driver to put your data and the query together.</p>
<p>Parameterised queries let you avoid a common security pitfall, the <em>SQL injection attack</em>, where an attacker can 'augment' your database query by putting in more commands than you originally anticipated. Query parameters always make sure your data is only ever handled as data, not as commands.</p>
<p>A parameterised query us usually also <em>faster</em>, as it lets the database avoid having to parse your query every time if you use it more than once, and it can also reuse query plans.</p>
<p>The <code>sqlite3</code> database library uses <code>?</code> for positional parameters; put a <code>?</code> where ever you need to use data from your code, and put the parameter values in a sequence (like a tuple or a list) in the second argument to <a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.execute" rel="nofollow noreferrer"><code>cursor.execute()</code></a>:</p>
<pre><code>t = c.execute("SELECT rowid, FROM stuffToPlot WHERE username = ?", (usernameask,))
</code></pre>
<p>Note that <code>(usernameask,)</code> is a tuple with one element. You could also use <code>[usernameask]</code>.</p>
<p>This executes your <code>SELECT</code> query using the string value that <code>usernameask</code> references in the <code>WHERE username =</code> filter. The driver takes care of quoting your value properly.</p>
<p>You could also use <em>named</em> parameters, these take the form of <code>:parametername</code>, (where you can pick your own names), and then you use a dictionary for the second argument to <code>cursor.execute()</code>, mapping names to values:</p>
<pre><code>t = c.execute(
    "SELECT rowid, FROM stuffToPlot WHERE username = :username",
    {'username': usernameask})
</code></pre>
<p>Here the placeholder is named <code>username</code>, and the dictionary maps that to the <code>usernameask</code> value.</p>
</div>
<span class="comment-copy">Thank you, these have worked, how ever i want it to just return the password and for some reason when you enter Sam its returning <code>('Sam', 'Sam', 'Sam')</code> note that the password and username are both Sam in the database i have tried fetchone() but that doesnt work, how would you make it only return the passoword, i also updated it a bit to make it more efficient. The updated are in the main body @Ghostly</span>
<span class="comment-copy">@SamboyT: sorry, I had to roll that back, the question you asked was answered. Stack Overflow works by producing questions and answers for future visitors too. You now have a new question.</span>
<span class="comment-copy">@SamboyT: You selected <code>password, *</code>, so first the password column, then add <i>all</i> columns. Just select the password (drop the <code>*</code>), and take out the single element from the row: <code>password = c.fetchone()[0]</code>; this is fetching the first matching row, only one column, then taking that one column result out of the row and assigning it to a variable.</span>
