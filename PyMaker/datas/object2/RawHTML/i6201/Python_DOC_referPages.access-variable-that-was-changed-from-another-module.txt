<div class="post-text" itemprop="text">
<p>I'm studying Python and creating a simple chat bot. Consider I have a module with main function:</p>
<pre><code># bot.py
class QueueWrapper:
    pass

wrapper = QueueWrapper() # also tried with dict

def main():
    wrapper.queue = init_queue()

if __name__ == '__main__':
    main()
</code></pre>
<p>And consider there is an another module where i want to access <code>queue</code> from bot module, but function from this module gets invoked some time after <code>bot.py</code> module got invoked:</p>
<pre><code># another_module.py
from bot import wrapper

def create_job():
    wrapper.queue.do_smth() # &lt;- error. object has no attribute ...
</code></pre>
<p>And when I try to access <code>queue</code> that should be in <code>wrapper</code> object I get and error saying there is no <code>queue</code> in <code>wrapper</code>. But if I run in debug mode over <code>bot</code> module I can clearly see that <code>wrapper.queue</code> contains object. But when <code>create_job</code> function from <code>another_module.py</code> is invoked it doesn't know that there were a <code>queue</code> in <code>wrapper</code>. </p>
<p>The problem here in my opinion is that var <code>queue</code> from <code>bot.py</code> gets initialized after <code>main()</code> and <code>init_queue()</code> had finished working but module itself gets imported into <code>another_module</code> before that.</p>
<p>What am I doing wrong (probably missing something about variable scope) and how can I get my <code>wrapper.queue</code> initialized in when <code>create_job()</code> is invoked?</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer">property</a>, so that the <code>queue</code> attribute is automatically initialised when it is first accessed:    </p>
<pre><code>class QueueWrapper:
    _queue = None

    @property
    def queue(self):
        if self._queue is None:
            self._queue = init_queue()
        return self._queue

wrapper = QueueWrapper()
</code></pre>
</div>
<span class="comment-copy">The <b>main</b>-part isn't run on imports. If you always want to set <code>wrapper.queue = init_queue()</code> you should place that below the definition of <code>wrapper = ...</code></span>
<span class="comment-copy">... or put it in the <code>__init__</code> method of QueueWrapper.</span>
<span class="comment-copy">@ekhumoro Sorry for not responding. I've tried your answer and it worked. Mostly because I moved <code>init_queue()</code> out from <code>main</code> and import started working as i expected.</span>
