<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4529815/saving-an-object-data-persistence">Saving an Object (Data persistence)</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I tried using a list, but when I quit the program, it lost the previously stored data. If this helps I am also using <code>pygame</code> for this project.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a> to save Python objects to a file</p>
<pre><code>import pickle
lst = [4,5,6]
with open("lst.sav", "wb") as fh:
    pickle.dump(lst, fh)
with open("lst.sav", "rb") as fh:
    new=pickle.load(fh)
    print(new)
</code></pre>
<p>Will output</p>
<pre><code>[4, 5, 6]
</code></pre>
</div>
<span class="comment-copy">why not save/read a json file or database?</span>
<span class="comment-copy">There's no data structure that automatically saves data outside the program, you have to write code to do it.</span>
<span class="comment-copy">Filesystems are great at this.</span>
<span class="comment-copy">Once you realize <i>where</i> and <i>how</i> a program saves the variables you define in it (hint: <i>RAM</i>), you will realize why your question doesn't make sense.</span>
<span class="comment-copy">You don't need a special data structure, but you will have to do it manually (although that's pretty easy). You can save instances of most of Python's built-in container classes as well as your own (of arbitrary functionality). See linked duplicate question, especially the end of the accepted answer which describes saving collections of multiple objects.</span>
<span class="comment-copy">1. Even though pickling solves OP's problem, a <code>pickle</code>file  is not a <code>"Python data structure"</code> (quoting OP) and it is essential that OP understands it.  2. It is preferable to use <code>with</code> when dealing with files.</span>
