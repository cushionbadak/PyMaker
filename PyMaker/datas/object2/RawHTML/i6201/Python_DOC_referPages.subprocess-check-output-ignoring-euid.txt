<div class="post-text" itemprop="text">
<p>I have the following bash script:</p>
<pre><code>echo "$(id -u)"
mkdir test
</code></pre>
<p>My own user id is 1000. Now, when I run python3.5 without root rights and invoke the script via <code>subprocess.check_output</code> the script works as expected and creates a folder which is owned by me.
However, when I start python with sudo but then use <code>os.setegid(1000); os.setuid(1000)</code>, the script outputs 0 and the folder "test" is owned by root. While I get that <code>echo "$(id -u)"</code>may be desired behavior, I do not get why this folder is owned by root. Shouldn't the <code>os.seteuid()</code> function prevent that?</p>
<p>My exact call is:</p>
<pre><code>&gt;&gt;&gt; os.setegid(1000)
&gt;&gt;&gt; os.seteuid(1000)
&gt;&gt;&gt; subprocess.check_output(["/.script.sh"])
</code></pre>
<p>Which results in the folder "test" being owned by root. Is this desired behavior and if so, is there any way I can start the script as a normal user while still being able to back to root rights in the python script (i.e., not setting the "real" uid?)</p>
</div>
<div class="post-text" itemprop="text">
<p><code>setegid</code> only sets the effective group id of the <a href="https://docs.python.org/3/library/os.html#os.setegid" rel="nofollow noreferrer">current process</a>. Same with <a href="https://docs.python.org/3/library/os.html#os.seteuid" rel="nofollow noreferrer">seteuid</a>.</p>
<p><code>check_output</code> spawns a new process, which is still apparently still run as root.
You might have more luck if you attempt to create your folder <a href="https://docs.python.org/3/library/os.html#os.mkdir" rel="nofollow noreferrer">using python</a> instead of shelling out to do it, but I imagine this is a simpified example so that may not be appropriate. Is it possible to run the python script as the expected user? If not you might need to do something like this;</p>
<pre><code>subprocess.check_output(["sudo", "-uexpected_user", "./script.sh"])
</code></pre>
</div>
<span class="comment-copy">That did it, thanks!</span>
