<div class="post-text" itemprop="text">
<p>I have a dictionary of items, where the list is formatted to be 
{(x,y): z, (x,y):z...} where x and y are coordinates and z is a probability. I need to perform operations using the probability. How can I access those?</p>
<p>I tried things like </p>
<pre><code>    for item in lst:
        print item[1]
</code></pre>
<p>However, that only returned the y coordinate. Attempting to print item[2] returned the error "Need more than 2 values to unpack"</p>
</div>
<div class="post-text" itemprop="text">
<p>As you are using a dictionary, python can retrieve both names and values individually. For example for:</p>
<pre><code>&gt;&gt;&gt; a = {(1,2): 0.5, (2,3): 0.4}
&gt;&gt;&gt; a.keys()
&gt;&gt;&gt; [(1, 2), (2, 3)]

&gt;&gt;&gt; a.values()
&gt;&gt;&gt; [0.5, 0.4]
</code></pre>
<p>Therefore for you to perform calculations on the probabilities you need to do:</p>
<pre><code>for item in a.values():
    print item
</code></pre>
<p>each item will output the values of your dictionary in sequence.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, you do not have a lit, that is a dict, so you can access z by using coordinates as key:</p>
<pre><code>my_dict = {(x,y): z, (x,y):z...}
my_dict[(x, y)]
</code></pre>
<p>In a for loop:</p>
<pre><code>for probability in my_dict.values():
    print(probability)
</code></pre>
<p>I recommend you do not use the name list for this cause it is a built-in</p>
</div>
<div class="post-text" itemprop="text">
<p>For item in list is getting one item at a time. So how can you access second item. Here is an example I made for you. Let say here is your dictionary d where coordinates 10,20 has prob 0.1 and 20,30 has prob 0.2 </p>
<pre><code>d = {(10,20):0.1, (20,30):0.2}
d.items() # this will print- dict_items([((10, 20), 0.1), ((20, 30), 0.2)])
d[(10,20)] # this will print 0.1
d[(20,30)] # this will print 0.2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use this:</p>
<pre><code>list = {(x1, y1): z1, (x2, y2): z2, ...} # actually a dict
for (x, y), z in list.items():
    print x, y, z
</code></pre>
<p>or this: </p>
<pre><code>list = {(x1, y1): z1, (x2, y2): z2, ...} # actually a dict
for z in list.values():
    print z
</code></pre>
<p>But you may be better off using a true  <code>list</code> instead of a <code>dict</code>. It's also best to avoid giving your variables names that match built-in Python components like <code>list</code>. So then you'd have something like this:</p>
<pre><code>lst = [(x1, y1, z1), (x2, y2, z2), ...]
for x, y, z in lst:
    print x, y, z
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If what you present us here is indeed your data structure <code>{(x,y): z, (x,y):z...}</code> then you should iterate and unpack it in another fashion than you do:</p>
<pre><code>Python 3.6.3 (default, Oct  4 2017, 06:09:15)
[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.37)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; l = {(1,2):0.5, (3,4):0.9}
&gt;&gt;&gt; for coordinates, probability in l.items():
...     print(coordinates, probability)
...
(1, 2) 0.5
(3, 4) 0.9
</code></pre>
<p>See <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer">Documentation</a></p>
<p>If you want a list of tuples, you could transform it easily with </p>
<pre><code>&gt;&gt;&gt; [ (coordinates, probabilities) for coordinates, probabilities in l.items() ]
[((1, 2), 0.5), ((3, 4), 0.9)]
</code></pre>
<p>In your version, you unpack the keys of the dictionary, which are a <code>tuple</code> of an <code>x</code> and a <code>y</code> coordinate. <code>print item[1]</code> references the <code>y</code> coordinate (python has <code>0</code>-based indexing), which is not, what you want.</p>
</div>
<span class="comment-copy">How are you saying your data is in list ? Can you share what is your input and what are you expecting ?</span>
<span class="comment-copy">You need to read a getting started with Python type of guide.</span>
<span class="comment-copy">Also, it's 0-indexed... "(x, y)" is <code>item[0], item[1]</code></span>
<span class="comment-copy">Also that's a dict, not a list.</span>
<span class="comment-copy">See <a href="https://stackoverflow.com/questions/8589812/python-iterate-over-a-dictionary" title="python iterate over a dictionary">stackoverflow.com/questions/8589812/…</a> and <a href="https://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops" title="iterating over dictionaries using for loops">stackoverflow.com/questions/3294889/…</a></span>
