<div class="post-text" itemprop="text">
<p>I need some help adding a list to another list while checking for duplicates. I only want to add items to my base list that are not already there.</p>
<p>I cannot do this using sets because the items in the base list are also lists.</p>
<p>An example of my base list is as follows:</p>
<pre><code>toCrawl=[["http://website.html",0]["http://websiteAlt.html",1]["http://websiteAlt.html",1]]
</code></pre>
<p>The list that I want to add to this is as follows:</p>
<pre><code>newLinks=["http://websiteAlt.html","http://websiteExample.html","http://websiteExampleAlt.html"]
</code></pre>
<p>So I want to add the 'newLinks' list to the base 'toCrawl' list, however I only want to add it if the item in newLinks is not already in toCrawl.</p>
<p>As well as this I also want to add the items from 'newLinks' to the 'toCrawl' list as a list. So rather than adding the item in 'newLinks' as: <code>"http://websiteExample.html"</code> I want to add it to the list as a list for example: <code>["http://websiteExample.html",0]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Could this be done with a dictionary instead of a list?</p>
<pre><code>toCrawlDict = dict(toCrawl)
for link in newLinks:
    if link not in toCrawlDict:
         toCrawlDict[link] = 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A nice solution would be to use list comprehension and cast your list as a set:</p>
<pre><code>toCrawl=[["http://website.html",0],["http://websiteAlt.html",1],["http://websiteAlt.html",1]]
newLinks = set([item[0] for item in toCrawl])
print(newLinks)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'http://website.html', 'http://websiteAlt.html'}
</code></pre>
<p>Note that in order to remove duplicates, sets seems to be the good pratice, this is from the <a href="https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>A set object is an unordered collection of distinct hashable objects.
  Common uses include membership testing, removing duplicates from a
  sequence, and computing mathematical operations such as intersection,
  union, difference, and symmetric difference. (For other containers see
  the built-in dict, list, and tuple classes, and the collections
  module.)</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Dictionary was a good shout thanks. I ended up going with this method however:</p>
<pre><code>for link in newLinks:   #check every link in 'newLinks'
            if link not in toCrawl: #if the link is not in 'toCrawl'...
                toCrawl.append([link,depthFound+1]) #add the link to 'toCrawl' with the 'depthFound'
</code></pre>
</div>
<span class="comment-copy">Can't you just use a dictionary?</span>
