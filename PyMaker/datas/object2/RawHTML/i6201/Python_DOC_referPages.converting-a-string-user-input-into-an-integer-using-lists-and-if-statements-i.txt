<div class="post-text" itemprop="text">
<p>Recently I had a school project in which I need to take a user input as an integer between 1-12 (representing the months of the year), and the age of the user, and do a math equation to produce a number that will spit out the age and birth month of the user (yes I know this is redundant but I have to do the math equation and not spit out the user inputs). Me being that one kid who wants an 100% tried to make it so that the user can input the month by string e.g(Jan = 1) using lists and if statements. The code bellow isn't working as whenever a user inputs something if statement doesn't change the birthNum variable. So please help me as i have tried almost everything and nothing works, but I feel as if I am so close to getting it to work.</p>
<p>Here is the code for turning the user input (string) into a integer:</p>
<pre><code>birthNum = 0

listOfMonths = ["January", "Jan", "january", "jan", "1", "Febuary", "Feb", "febuary", "feb", "2", "March", "Mar", "march", "mar", "3", "April", "Apr", "april", "apr", "4", "May", "may", "5", "June", "Jun", "june", "jun", "6", "July", "Jul", "july", "jul", "7", "August", "Aug", "august", "aug", "8", "September", "Sept", "september", "sept", "9", "October", "Oct", "october", "oct", "10", "November", "Nov", "november", "nov", "11", "December", "Dec", "december", "dec", "12"]

janList = ["January", "Jan", "january", "jan", "1"]

febList = ["Febuary", "Feb", "febuary", "feb", "2"]

marList = ["March", "Mar", "march", "mar", "3"]

aprList = ["April", "Apr", "april", "apr", "4"]

mayList = ["May", "may", "5"]

junList = ["June", "Jun", "june", "jun", "6"]

julList = ["Jul", "july", "jul", "7"]

augList = ["September", "Sept", "september", "sept", "9"]

septList = ["September", "Sept", "september", "sept", "9"]

octList = ["October", "Oct", "october", "oct", "10"]

novList = ["November", "Nov", "november", "nov", "11"]

decList = ["December", "Dec", "december", "dec", "12"]

(birthMonthInput) = input("Please put in your birth month: ")


if (birthMonthInput == (janList)):
    birthNum = int(1)

if (birthMonthInput == (febList)):
    birthNum = int(2)

if (birthMonthInput == (marList)):
    birthNum = int(3)

if (birthMonthInput == (aprList)):
    birthNum = int(4)

if (birthMonthInput == (mayList)):
    birthNum = int(5)

if (birthMonthInput == (junList)):
    birthNum = int(6)

if (birthMonthInput == (julList)):
    birthNum = int(7)

if (birthMonthInput == (augList)):
    birthNum = int(8)

if (birthMonthInput == (septList)):
    birthNum = int(9)

if (birthMonthInput == (octList)):
    birthNum = int(10)

if (birthMonthInput == (novList)):
    birthNum = int(11)

if (birthMonthInput == (decList)):
    birthNum = int(12)

print (birthNum)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your condition is checking whether a string evaluates to a list. What you're looking for is the <code>in</code> keywork - i.e. </p>
<pre><code>if birthMonthInput in augList:
</code></pre>
<p>That said, there's plenty of other problems in your code.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using lists for this is highly unperformant. Your solution would require about 5 * 12 lookups for getting the value associated with a String.</p>
<p>A way faster data structure that can do this use case in <code>O(1)</code> is a dict.
Try to format your code like this:</p>
<pre><code>dic = {
   "Jan": 1,
   "January": 1,
   "Feb": 2 # and so on
}
</code></pre>
<p>Then you can get your solution by simply doing:</p>
<pre><code>birthNum = dict[birthMonthInput]
</code></pre>
<p>Read <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">python data structures</a> for a good overview. Dictionaries are section 5.5</p>
</div>
<span class="comment-copy">1st use only lowercase in your list then use <code>input("enter month: ").lower()</code> when gathering input. 2nd create a dictionary of the lists and use a for loop to test the months: <code>months={1:janList,2:febList} #ect</code> and      <code>for month in months:</code> <code>if birthMonthInput in months[month]:</code> <code># month is correct and number is month (already in int form)</code></span>
<span class="comment-copy">FebRuary misses an <i>r</i>, August is wrong. Standardizing the case before comparison (e.g. by <i>lower</i> method of string) would help to simplify the code.</span>
<span class="comment-copy">Dude, thanks for the constructive criticism (still pretty new at python) and fixing my if statements, you have no idea how much this helped me. Thx again</span>
<span class="comment-copy">How much more complex is a fuzzy match on the dict keys? :p</span>
<span class="comment-copy">wouldn't use a fuzzy match here. You could just use lowercase and substring [0:3]. This would save memory, but should be slower and less flexible.</span>
<span class="comment-copy">But that won't handle a typo, so you make it run the fuzz when it doesn't match and offer the suggestion of what you could have meant. :)</span>
<span class="comment-copy">And you shouldn't use <code>dict</code> due to clash with built-in <code>dict</code></span>
<span class="comment-copy">Thanks, have done too much ruby recently xD i'll keep the variables as they are like this in the question. To be really correct class names should be <code>PascalCase</code> (upper camelcase)</span>
