<div class="post-text" itemprop="text">
<p>I am running SQL query from python API and want to collect data in Structured(column-wise data under their header).CSV format.</p>
<p>This is the code so far I have.</p>
<pre><code>sql = "SELECT id,author From researches WHERE id &lt; 20 " 
cursor.execute(sql)
data = cursor.fetchall()
print (data)
with open('metadata.csv', 'w', newline='') as f_handle:
    writer = csv.writer(f_handle)
    header = ['id', 'author']
    writer.writerow(header)
    for row in data:
        writer.writerow(row)
</code></pre>
<p>Now the data is being printed on the console but not getting in .CSV file this is what I am getting as <a href="https://i.stack.imgur.com/TyGpf.png" rel="nofollow noreferrer">output</a>:</p>
<p><img alt="" src="https://i.stack.imgur.com/TyGpf.png"/></p>
<p>What is that I am missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a simple example of what you are trying to do:  </p>
<pre><code>import sqlite3 as db
import csv

# Run your query, the result is stored as `data`
with db.connect('vehicles.db') as conn:
    cur = conn.cursor()
    sql = "SELECT make, style, color, plate FROM vehicle_vehicle"
    cur.execute(sql)
    data = cur.fetchall()

# Create the csv file
with open('vehicle.csv', 'w', newline='') as f_handle:
    writer = csv.writer(f_handle)
    # Add the header/column names
    header = ['make', 'style', 'color', 'plate']
    writer.writerow(header)
    # Iterate over `data`  and  write to the csv file
    for row in data:
        writer.writerow(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import pandas as pd

import numpy as np

from sqlalchemy import create_engine

from urllib.parse import quote_plus

params = quote_plus(r'Driver={SQL Server};Server=server_name;                        Database=DB_name;Trusted_Connection=yes;')

engine = create_engine("mssql+pyodbc:///?odbc_connect=%s" % params)

sql_string = '''SELECT id,author From researches WHERE id &lt; 20 '''

final_data_fetch = pd.read_sql_query(sql_string, engine)

final_data_fetch.to_csv('file_name.csv')
</code></pre>
<p>Hope this helps!</p>
</div>
<span class="comment-copy">What problem are you having? Python has <code>csv.writer</code> to write CSV to a file, so all you have to do is read the SQL results into a list.</span>
<span class="comment-copy">What have you tried so far ?</span>
<span class="comment-copy">The problem is I don't know how to do it. Can you help me the sample code based on this query?</span>
<span class="comment-copy">I have edited the code. Now I am able to get the Data but to write it to a .csv file I am facing difficulty.</span>
<span class="comment-copy">Check out the examples in <a href="https://docs.python.org/3/library/csv.html#examples" rel="nofollow noreferrer">the docs</a>. I'm not sure, but you might be able to write rows from the cursor directly into a <code>csv.writer()</code>.</span>
<span class="comment-copy">Thanks, @diek. Just one question, after getting everything inside data.We are opening as 'vehicle.csv' where does this file come from and what part it is playing? I mean we haven't written data to 'vehicle.csv' so ..?</span>
<span class="comment-copy">@Hayat Python will create the file. The role that it is playing is the answer to your question, you want to create a csv file.</span>
<span class="comment-copy">@Hayat I added comments to the code, hopefully this will help you understand. Reading this will help you better understand <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/inputoutput.html</a></span>
<span class="comment-copy">Using Pandas makes it quick and easier to work on data with python, hopefully this code helps, I use it for connecting with DB everyday at work</span>
<span class="comment-copy">@Madhur, thanks for editing</span>
