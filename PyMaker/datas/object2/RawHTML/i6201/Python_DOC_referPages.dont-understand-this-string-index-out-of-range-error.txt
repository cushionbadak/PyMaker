<div class="post-text" itemprop="text">
<p>Objective: enter goal string; program loops trying random letters + space until goal word matches generated word. </p>
<p>To expedite, when the randomly generated word has a character of some index that matches the goal word, the character is appended to a list and the range start point is now the length of that "correct character" list. </p>
<p>However, on the 7th loop of this program there will always be a "string index out of range" error indicated at the first IF statement of the SCORE function. I don't understand how this is possible, because range stop is up-to-not-including and I am using the goal word length as my stop value. </p>
<p>Any help is appreciated. Thank you.</p>
<p>Jupyter Notebook with Python3</p>
<pre><code>import random

attempt_list = []


def main():
    goal_strg = 'got it'
    goal_len = len(goal_strg)
    rand_strg= ''
    gen_rand_string(goal_len)
    score(goal_strg, rand_strg)

def gen_rand_string(goal_len): #generates random string to compare
    alphabet = 'abcdefghijklmnopqrstuvwxyz '
    rand_strg = '' 

    for i in range(goal_len):
        rand_strg = rand_strg + alphabet[random.randrange(27)]
        print (rand_strg)

    return rand_strg

def score(goal_strg, rand_strg): #compares rand str and goal str and scores
    x = 0
    x += 1

    for i in range(len(attempt_list), len(goal_strg)):
        if i &lt;= 5 and (rand_strg[i] == goal_strg[i]):
            attempt_list.append(rand.strg[i])
            print (attempt_list)
            print ((len(attempt_list))/(len(goal_strg)))
        elif x%1000000 == 0:
            print (x)
        else: 
            continue 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You seem to be misunderstanding how Python variables work:</p>
<p>After</p>
<pre><code>rand_strg= ''
gen_rand_string(goal_len)
</code></pre>
<p>the variable <code>rand_strg</code> is still <code>''</code> because you didn't assign the result of <code>gen_rand_string()</code> back to it. You don't need to initialize variables in Python (so the first line above is unnecessary), but you do need to say</p>
<pre><code>rand_strg = gen_rand_string(goal_len)
</code></pre>
<p>Simply <code>return</code>ing a local variable (that happens to be named <code>rand_strg</code> too) doesn't magically change that variable in a different scope.</p>
</div>
<span class="comment-copy"><code>attempt_list.append(rand.strg[i])</code> - should this be <code>attempt_list.append(rand_strg[i])</code>?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">catch the error</a> and in the except suite inpsect/print relavent data to see what might be happening.  You are trying to use an invalid index - what is <code>i</code> how long is the string? did you remember that indices are <i>zero based</i>?</span>
<span class="comment-copy">Please explain "7th loop of the program."  There are only two loops in this code and neither will increment seven times (based on the information you have provided).</span>
<span class="comment-copy">I apologize. In the function "gen_rand_string", the FOR loop will print "rand_strg" as it is built. When I run it, it will print 6 lines of varying lengths (i.e. 1, 2, 3, 4, 5, 6), then on the 7th increment is when I get the error.  I am going to take the recommendations you all have given me and try to fix it. Thank you again.</span>
<span class="comment-copy">Thank you for this. I thought because I was making my function call from "Main", the "gen_rand_string" would have access to the upper scope variables and when I changed their assignment down the chain, it would affect changes up the scope.</span>
