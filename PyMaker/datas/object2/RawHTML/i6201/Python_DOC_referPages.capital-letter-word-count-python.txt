<div class="post-text" itemprop="text">
<p>Right now my code prints how many times every word is used in the txt file. I'm trying to get it to ONLY print the top 3 words used with capital letters within the txt file...</p>
<pre><code>file=open("novel.txt","r+")
wordcount={}
for word in file.read().split():
    if word not in wordcount:
        wordcount[word] = 1
    else:
        wordcount[word] += 1
for a,b in wordcount.items():
    print (b, a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First you want to limit your result to only capitalized words using <a href="https://docs.python.org/3/library/stdtypes.html#str.istitle" rel="nofollow noreferrer"><code>str.istitle()</code></a>:</p>
<pre><code>file=open("novel.txt","r+")
wordcount={}
for word in file.read().split():
    if word.istitle():
        if word not in wordcount:
            wordcount[word] = 1
        else:
            wordcount[word] += 1
for a,b in wordcount.items():
    print (b, a)
</code></pre>
<p>Then <a href="https://stackoverflow.com/questions/19720975/python-3-sorting-a-list-of-tuples">sort the results</a> using <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted()</code></a> and print out the first three:</p>
<pre><code>file=open("novel.txt","r+")
wordcount={}
for word in file.read().split():
    if word.istitle():
        if word not in wordcount:
            wordcount[word] = 1
        else:
            wordcount[word] += 1

items = sorted(wordcount.items(), key=lambda tup: tup[1], reverse=True) 

for item in items[:3]:
    print item[0], item[1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In <code>Collections</code> there's a <code>Counter</code> class. <a href="https://docs.python.org/2/library/collections.html" rel="nofollow noreferrer">https://docs.python.org/2/library/collections.html</a>. </p>
<pre><code>cnt = Counter([w for w in file.read().split() if w.lower() != w]).most_common(3)
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#str.istitle" rel="nofollow noreferrer"><code>str.istitle</code></a> or <a href="https://docs.python.org/3/library/stdtypes.html#str.isupper" rel="nofollow noreferrer"><code>str.isupper</code></a> should help you.</span>
<span class="comment-copy">Thank you! it is working to sort the capital letters but still producing an error...6 Jellicle 5 Cats 2 And 1 They 1 Moon Traceback (most recent call last):   File "program.py", line 13, in &lt;module&gt;     items.sort(key=lambda tup: tup[1], reverse=True)  AttributeError: 'dict_items' object has no attribute 'sort'</span>
<span class="comment-copy">@hendro3 The code would only work in Python 2. I've updated it to be Python 3 friendly.</span>
<span class="comment-copy">He wants to have only the ones with capital letters, I suggest you to change <code>file.read().split()</code> to [w for w in file.read().split() if w.istitle()]`</span>
<span class="comment-copy">Thank you Jose! Yes I am trying to read the text file and print the top 3 words used that are in capital letter</span>
<span class="comment-copy"><code>[w for w in file.read().split() if w.istitle()]</code> seems concise to a fault for a beginner... probably better just to loop through everything and use <code>if word.istitle():</code>. I don't think there's a performance or readability benefit to the list comprehension.</span>
<span class="comment-copy">Well I can read <code>[w for w in file.read().split() if w.istitle()]</code> as "word for each word in the file that I read and split in words only if word is title". I think is more concise more readable and much more simpler. I mean, he just wants to count, if he wants to implement a counter then he can look at the <a href="https://github.com/python/cpython/blob/3.6/Lib/collections/__init__.py" rel="nofollow noreferrer">standard library</a> or ask Raymond Hettinger. If it is a simple thing to tell then it MUST be a simple thing to code (in python).</span>
