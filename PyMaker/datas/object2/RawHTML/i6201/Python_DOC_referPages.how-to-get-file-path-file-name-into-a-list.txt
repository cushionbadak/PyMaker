<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3207219/how-do-i-list-all-files-of-a-directory">How do I list all files of a directory?</a>
<span class="question-originals-answer-count">
                    27 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to get a list of strings with the file path and the file name. 
At the moment I only get the file names into the list. </p>
<p>Code:</p>
<pre><code>hamFileNames = os.listdir("train_data\ham")
</code></pre>
<p>Output: </p>
<pre><code>['0002.1999-12-13.farmer.ham.txt', 
 '0003.1999-12-14.farmer.ham.txt', 
 '0005.1999-12-14.farmer.ham.txt']
</code></pre>
<p>I would want an output similar to this:</p>
<pre><code>['train_data\ham\0002.1999-12-13.farmer.ham.txt',
 'train_data\ham\0003.1999-12-14.farmer.ham.txt',
 'train_data\ham\0005.1999-12-14.farmer.ham.txt']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you have access to the directory path you could just do:</p>
<pre><code>dir = "train_data\ham"
output = map(lambda p: os.path.join(dir, p), os.listdir(dir))
</code></pre>
<p>or simpler</p>
<pre><code>output = [os.path.join(dir, p) for p in os.listdir(dir)]
</code></pre>
<p>Where <code>os.path.join</code> will join your directory path with the filenames inside it.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're on Python 3.5 or higher, skip <code>os.listdir</code> <a href="https://docs.python.org/3/library/os.html#os.scandir" rel="nofollow noreferrer">in favor of <code>os.scandir</code></a>, which is both more efficient and does the work for you (<code>path</code> is an attribute of the result objects):</p>
<pre><code>hamFileNames = [entry.path for entry in os.scandir(r"train_data\ham")]
</code></pre>
<p>This also lets you cheaply filter (<code>scandir</code> includes some file info for free, without <code>stat</code>-ing the file), e.g. to keep only files (no directories or special file-system objects):</p>
<pre><code>hamFileNames = [entry.path for entry in os.scandir(r"train_data\ham") if entry.is_file()]
</code></pre>
<p>If you're on 3.4 or below, you may want to look at the PyPI <code>scandir</code> module (which provides the same API on earlier Python).</p>
<p>Also note: I used a raw string for the path; while <code>\h</code> happens to work without it, you should <em>always</em> use raw strings for Windows path literals, or you'll get a nasty shock when you try to use <code>"train_data\foo"</code> (where <code>\f</code> is the ASCII form feed character), while <code>r"train_data\foo"</code> works just fine (because the <code>r</code> prefix prevents backslash interpolation of anything but the quote character).</p>
</div>
<span class="comment-copy">See also <a href="https://stackoverflow.com/a/11058554/8586227">stackoverflow.com/a/11058554/8586227</a>.</span>
