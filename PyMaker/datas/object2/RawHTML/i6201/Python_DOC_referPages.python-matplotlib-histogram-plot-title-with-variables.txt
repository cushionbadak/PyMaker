<div class="post-text" itemprop="text">
<p>I have a set of data that looks like the following:</p>
<pre><code>index   902.4  909.4   915.3
n       0.6    0.3     1.4
n.1     0.4    0.3     1.3
n.2     0.3    0.2     1.1
n.3     0.2    0.2     1.3
n.4     0.4    0.3     1.4
DCIS           0.3     1.6
DCIS.1  0.3    1.2
DCIS.2         1.1
DCIS.3  0.2    1.2
DCIS.4  0.2    1.3
DCIS.5  0.2    0.1     1.5
br_1    0.5    0.4     1.4
br_1.1         0.2     1.3
br_1.2  0.5    0.2     1.4
br_1.3  0.5    0.2     1.6
br_1.4         1.4
</code></pre>
<p>with the regular python indexing for the column[0]. The below is a code that I've written with lots of help from members of Stackoverflow:</p>
<pre><code>nh = pd.ExcelFile(file)
df = pd.read_excel(nh)

df = df.set_index('Samples').transpose()

df = df.reset_index()

df_n = df.loc[df['index'].str.startswith('n')]
df_DCIS = df.loc[df['index'].str.startswith('DCIS')]
df_br1234 = df.loc[df['index'].str.startswith('br')]

#plt.tight_layout()

for i in range(1, df.shape[1]):
    plt.figure()
    df_n.iloc[:, i].hist(histtype='step', color='k', label='N')
    df_DCIS.iloc[:, i].hist(histtype='step', color='r', label='DCIS')
    df_br1234.iloc[:, i].hist(histtype='step', color='orange', label='IDC')
    plt.legend(loc='center left', bbox_to_anchor=(1, 0.5), fancybox=True, shadow=True)
    plt.title("Histograms for " + df.columns[i], loc='center')

plt.show()
</code></pre>
<p>This creates multiple figures with cut-off legend (this was not cut off when the figure was made by pycharm). However, the plt.title gives an error message saying TypeError: must be str, not float. I do understand that the columns of the different dataframes are floating numbers, and when I type print(df.columns), it says dtype is object. Is there a way to convert the float object to str? I tried using</p>
<pre><code>plt.title("Histograms for " + df.columns[i].astype('str')) 
</code></pre>
<p>but it said float object has no attribute astype. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use this:</p>
<pre><code>plt.title("Histograms for " + str(df.columns[i]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't want the plots to be attached together, I'd suggest avoiding <code>subplots()</code> entirely.  Instead, separate each plot with <code>plt.show()</code>:</p>
<pre><code>cols = ["902.4", "909.4", "915.3"]
data = [{"df":df_n, "color":"k", "label":"N"},
        {"df":df_DCIS, "color":"r", "label":"DCIS"},
        {"df":df_br1234, "color":"orange", "label":"IDC"}]

for col in cols:
    for dataset in data:

        dataset["df"][col].hist(histtype='step', 
                                color=dataset["color"], 
                                label=dataset["label"])
        plt.title(f"{dataset['label']} for {col}")
        plt.savefig(f"{dataset['label']}_for_{col}_plot.png")
        plt.show()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try</p>
<pre><code>plt.title("Histograms for {0:.2f}".format(df.columns[i]))
</code></pre>
<p>The characters inside the curly brackets are from the <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">Format Specification Mini-Language</a>. This example formats a float with 2 decimal places. If you follow the link you'll see lots of other options.</p>
</div>
<span class="comment-copy"><code>plt.title("Histograms for " + str(df.columns[i]))</code>?</span>
<span class="comment-copy">Could you make this an answer so I can accept it? I am not sure if it matters much but you solved my question too quickly.</span>
