<div class="post-text" itemprop="text">
<p>I have the following problem: Given a <strong>year</strong> and a <strong>month</strong>, determine the week numbers that are contained in that particular month, i.e., October 2017 contains week numbers 39,40,41,42,43,44. <strong>Caveat:</strong> As a rule, week starts in Monday and ends in Sunday. I have a cumbersome code that does the trick but I would like to know if there is a more elegant or Pythonistic way of doing this.  </p>
<pre><code>from datetime import datetime
import calendar

def get_week_numbers_in_month(year,month):
    list_of_weeks = []
    initial_day   = 1
    ending_day    = calendar.monthrange(int(year),int(month))[1] #get the last day of month
    initial_week  = int(datetime(year,month,initial_day).isocalendar()[1])
    ending_week   = int(datetime(year,month,ending_day).isocalendar()[1]) 
    counter = initial_week
    while(counter &lt;= ending_week):
        list_of_weeks.append(counter)
        counter += 1
    return list_of_weeks

print("Your month contains the following weeks:\n"+str(get_week_numbers_in_month(2017,10)))
# result: Your month contains the following weeks: 
# [39, 40, 41, 42, 43, 44]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could simply return a <a href="https://docs.python.org/3/library/stdtypes.html#range" rel="nofollow noreferrer">range</a> and avoid the whole initializing process. Also, note that <a href="https://docs.python.org/3/library/datetime.html#datetime.date.isocalendar" rel="nofollow noreferrer"><code>isocalendar</code></a> returns a 3-tuple of integers:</p>
<pre><code>from datetime import datetime
import calendar

def get_week_numbers_in_month(year,month):
    ending_day    = calendar.monthrange(year, month)[1] #get the last day of month
    initial_week  = datetime(year, month, 1).isocalendar()[1]
    ending_week   = datetime(year, month, ending_day).isocalendar()[1]
    return range(initial_week, ending_week + 1)

print("Your month contains the following weeks:")
print(get_week_numbers_in_month(2017,10))
# range(39, 45)
</code></pre>
<p>If you really want to return a list, simply return <code>list(range(...))</code></p>
</div>
<span class="comment-copy">Which day is the first day of the first week in a given year?</span>
<span class="comment-copy">Monday is the first day.</span>
<span class="comment-copy">It's still too early to accept any answer. Let's wait to see if other people come up with a better one.</span>
<span class="comment-copy">So, you want all weeks that have any days in the month, rather than weeks such that all their days are in the month?</span>
<span class="comment-copy">I want all weeks that have any days in the month. For instance, October 1st was Sunday and this is week no. 39 and this week contains the days of September.</span>
