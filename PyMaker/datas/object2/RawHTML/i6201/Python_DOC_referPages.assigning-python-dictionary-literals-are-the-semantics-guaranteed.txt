<div class="post-text" itemprop="text">
<p>Simple question:</p>
<pre><code>Python 2.6.6 (r266:84292, Aug 9 2016, 06:11:56)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-17)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; d = {'foo':1,'foo':2}
&gt;&gt;&gt; print d
{'foo': 2}
&gt;&gt;&gt; d = {'foo':2,'foo':1}
&gt;&gt;&gt; print d
{'foo': 1}
</code></pre>
<p>So it seems that if I assign a dictionary literal with a duplicate key to a variable it is the second key/pair that is used, at least for this particular python version.</p>
<p>Is this behaviour guaranteed?</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/reference/expressions.html#dictionary-displays" rel="nofollow noreferrer"><em>Dictionary displays</em> documentation</a>:</p>
<blockquote>
<p>If a comma-separated sequence of key/datum pairs is given, <strong>they are evaluated from left to right</strong> to define the entries of the dictionary: each key object is used as a key into the dictionary to store the corresponding datum. <strong>This means that you can specify the same key multiple times in the key/datum list, and the final dictionary’s value for that key will be the last one given.</strong></p>
</blockquote>
<p>(Bold emphasis mine).</p>
<p>So yes, that is guaranteed. All Python implementations must adhere to this, deviation from the above specification would be a bug.</p>
<p>Older Python version documentation have not always included that last sentence, but the order of evaluation has always been explicit.</p>
</div>
<span class="comment-copy">duplicated: <a href="https://stackoverflow.com/questions/39678672/is-a-python-dict-comprehension-always-last-wins-if-there-are-duplicate-keys" title="is a python dict comprehension always last wins if there are duplicate keys">stackoverflow.com/questions/39678672/…</a></span>
<span class="comment-copy">The text for Python 2.6 (which the OP uses) is a bit different: <a href="https://docs.python.org/2.6/reference/expressions.html#dictionary-displays" rel="nofollow noreferrer">docs.python.org/2.6/reference/…</a></span>
<span class="comment-copy">@StefanPochmann: the behaviour in 2 is no different, although there was a bug where the value expression was evaluated before the key expression.</span>
<span class="comment-copy">@StefanPochmann: <a href="//stackoverflow.com/q/28156687">Will a Python dict literal be evaluated in the order it is written?</a></span>
