<div class="post-text" itemprop="text">
<p>What is the difference between isnumeric and isdecimal functions for strings ( <a href="https://www.tutorialspoint.com/python3/python_strings.htm" rel="nofollow noreferrer">https://www.tutorialspoint.com/python3/python_strings.htm</a> )? They seem to give identical results: </p>
<pre><code>&gt;&gt;&gt; "123456".isnumeric()
True
&gt;&gt;&gt; "123456".isdecimal()
True
&gt;&gt;&gt; "123.456".isnumeric()
False
&gt;&gt;&gt; "123.456".isdecimal()
False
&gt;&gt;&gt; "abcd".isnumeric()
False
&gt;&gt;&gt; "abcd".isdecimal()
False
</code></pre>
<p>I expected <code>isdecimal()</code> to return true for "123.456" but it does not.</p>
</div>
<div class="post-text" itemprop="text">
<p>The two methods test for specific Unicode character classes. If <em>all</em> characters in the string are from the specified character class (have the specific Unicode property), the test is true.</p>
<p><code>isdecimal()</code> does not test if a string is a decimal number. See the <a href="https://docs.python.org/3/library/stdtypes.html#str.isdecimal" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>Return true if all characters in the string are decimal characters and there is at least one character, false otherwise. Decimal characters are those that can be used to form numbers in base 10, e.g. U+0660, ARABIC-INDIC DIGIT ZERO. Formally a decimal character is a character in the Unicode General Category “Nd”.</p>
</blockquote>
<p>The <code>.</code> period character is not a member of the <code>Nd</code> category; it is not a decimal character.</p>
<p><code>str.isdecimal()</code> characters are a subset of <code>str.isnumeric()</code>; this tests for all numeric characters. Again, from the <a href="https://docs.python.org/3/library/stdtypes.html#str.isnumeric" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>Return true if all characters in the string are numeric characters, and there is at least one character, false otherwise. Numeric characters include digit characters, and all characters that have the Unicode numeric value property, e.g. U+2155, VULGAR FRACTION ONE FIFTH. Formally, numeric characters are those with the property value Numeric_Type=Digit, Numeric_Type=Decimal or Numeric_Type=Numeric.</p>
</blockquote>
<p><code>Nd</code> is <code>Numeric_Type=Digit</code> here.</p>
<p>If you want to test if a string is a valid decimal number, just try to convert it to a float:</p>
<pre><code>def is_valid_decimal(s):
    try:
        float(s)
    except ValueError:
        return False
    else:
        return True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are many more numeric characters than decimal ones:</p>
<pre><code>&gt;&gt;&gt; "٣".isdecimal()
True
&gt;&gt;&gt; "¼".isdecimal()
False
&gt;&gt;&gt; "¼".isnumeric()
True
</code></pre>
</div>
<span class="comment-copy"><code>isnumeric</code> and <code>isdecimal</code> test <i>Unicode properties of characters</i>. It does not test for decimal numbers.</span>
<span class="comment-copy">Closely related: <a href="//stackoverflow.com/a/24384917">Difference between unicode.isdigit() and unicode.isnumeric()</a></span>
<span class="comment-copy">Can one test if the number is a valid decimal and assign it to a variable in one step or will one have to run <code>num = float(s)</code> separately?</span>
<span class="comment-copy">So what should be assigned if the number is not a valid float? You can just use <code>try: num = float(s)</code> <code>except ValueError: num = 0.0  # assign a default</code> too of course. I showed you a validation function, but if you wanted to convert and assign just use that.</span>
<span class="comment-copy">Why still "-1".isnumeric() is False?</span>
<span class="comment-copy">@JaakL: because <code>-</code> is not a numeric character.</span>
<span class="comment-copy">I think the API  doc should warn this then, as for 'normal person' -1 is just as numeric as 1 or +1, especially as there are much 'weirder' characters accepted as numeric (like ¼ etc).</span>
