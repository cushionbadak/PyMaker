<div class="post-text" itemprop="text">
<p>I'm sick of typing</p>
<pre><code>class A:
    def __init__(self, x, y, z):
        self.x,self.y,self.z = x,y,z
</code></pre>
<p>It just feel like redundant code. Is there a way to say "these variables that I pass in will become fields with the appropriate names (i.e. the same name as these variable names) In one line?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could achieve your goal with:</p>
<pre><code>class My:
    def __init__(self, **kwargs):
        for k,v in kwargs.items():
            setattr(self, k, v)

my = My(foo=10, bar=12)

print(vars(my))
</code></pre>
<p>See here for <a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow noreferrer">Documentation</a>.</p>
</div>
<span class="comment-copy">You might want to look at <a href="https://stackoverflow.com/questions/3652851/what-is-the-best-way-to-do-automatic-attribute-assignment-in-python-and-is-it-a">this</a></span>
<span class="comment-copy">Explicit is better than implicit...</span>
<span class="comment-copy">"the same name as these variable names" ... what exactly do you mean here?</span>
<span class="comment-copy">So, suppose you have some variables, <code>a, b, c</code>, and an a class, <code>Klass</code>, do you want <code>obj = Klass(a, b, c)</code> to result in an object with <code>obj.a, obj.b, obj.c</code> attributes?</span>
<span class="comment-copy">@juanpa.arrivillaga Eurasia has always been at war with Eastasia.</span>
<span class="comment-copy">The only drawback here is that the names of the member variables are set by the client. It looks like the OP want to get the class itself to define the names.</span>
<span class="comment-copy">@quamrana That depends on your usecase. For sophisticated ways, one might look at <a href="http://www.attrs.org/en/stable/" rel="nofollow noreferrer">attrs.org/en/stable</a></span>
