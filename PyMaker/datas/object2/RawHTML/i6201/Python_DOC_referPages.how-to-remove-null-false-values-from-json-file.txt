<div class="post-text" itemprop="text">
<p>I have a JSON file with this data</p>
<pre><code>{

    "in_reply_to_screen_name": null,
    "favorited": false,
    "id_str": "92",
    "entities": {
        "user_mentions": [],
        "symbols": [],
        "urls": [],
        "hashtags": [
            {
                "indices": [0,8]
            }
        ]
    },
    "geo": null,
    "user": {
        "verified": false,
        "notifications": null,
        "profile_sidebar_border_color": "FFFFFF",
        "geo_enabled": true,
        "profile_background_tile": true,
        "url": null,
        "id": 278,
        "default_profile": false,
        "lang": "pt",
        "location": null,
        "translator_type": "none",
        "protected": false
    },
    "id": 92,
    "in_reply_to_status_id_str": null,
    "in_reply_to_status_id": null,
    "created_at": "Tue Oct",
    "is_quote_status": false,
    "text": "This is a vdd",
    "truncated": false,
    "retweeted": false
}
</code></pre>
<p>How can I delete any key-value pairs that contain null, false and true of this file, using Python?</p>
<p>These values can appear in various level of the data structure.</p>
</div>
<div class="post-text" itemprop="text">
<p>By decoding, processing the object recursively, and encoding to JSON again.</p>
<p>I like to use <a href="https://docs.python.org/3/library/functools.html#functools.singledispatch" rel="nofollow noreferrer">single dispatch</a> for such tasks:</p>
<pre><code>from functools import singledispatch

@singledispatch
def remove_null_bool(ob):
    return ob

@remove_null_bool.register(list)
def _process_list(ob):
    return [remove_null_bool(v) for v in ob]

@remove_null_bool.register(dict)
def _process_list(ob):
    return {k: remove_null_bool(v) for k, v in ob.items()
            if v is not None and v is not True and v is not False}

data = json.load(source)
json.dump(dest, remove_null_bool(data))
</code></pre>
<p>I used <code>is not False</code>, etc. to test for the exact objects. Had I used <code>v not in {None, False, True}</code> the integer values <code>0</code> and <code>1</code> would be removed too as <code>False</code> and <code>True</code> are equal to those values, respectively.</p>
<p>Demo against your sample loaded into <code>data</code>:</p>
<pre><code>&gt;&gt;&gt; print(json.dumps(remove_null_bool(data), indent=4, sort_keys=True))
{
    "created_at": "Tue Oct",
    "entities": {
        "hashtags": [
            {
                "indices": [
                    0,
                    8
                ]
            }
        ],
        "symbols": [],
        "urls": [],
        "user_mentions": []
    },
    "id": 92,
    "id_str": "92",
    "text": "This is a vdd",
    "user": {
        "id": 278,
        "lang": "pt",
        "profile_sidebar_border_color": "FFFFFF",
        "translator_type": "none"
    }
}
</code></pre>
</div>
<span class="comment-copy">Curious that the title mentions "null, false" (i.e. "falsy") values, but the question text says "null, false <b>and true</b>". Which is it?</span>
<span class="comment-copy">@KevinJohnson, these steps for example:                                                                                with open(arq_geral,'r') as f:                                                                                                                         for line in f:         tweet = json.loads(line)         dados_tweet.append(tweet)       for tweet in dados_tweet:         if tweet["geo"]:             del tweet["geo"] It does not remove the 'geo', for example.</span>
<span class="comment-copy">My mistake in the title. @alexis</span>
<span class="comment-copy">when running, it does not recognize 'dest'. NameError: name 'dest' is not defined should this occur in this program? Or was it my mistake?                                                                                                                         file = open('file_ok.json','w') #file to write correct data file_data = 'file_data.json' #JSON file with null, false, and true values   with open(file_data,'r') as f:     for line in f:         data = json.loads(line)         file.write(json.dump(dest, remove_null_bool(data)))         file.write('\n') file.close()</span>
<span class="comment-copy">@Rennan, where do you think <code>dest</code> would come from? Look at the code, look up <code>json.dump()</code>, and you can answer your own question.</span>
<span class="comment-copy">@RennanCÃ©osGleyson I was illustrating; provide your own input and output file objects.</span>
