<div class="post-text" itemprop="text">
<p>So I have a list of sentences and I want to remove punctuation from each sentences. I can remove it in this manner:</p>
<pre><code>textList = ['This is bad.', 'You, me, him are going']

from string import punctuation

for text in textList:
    for p in punctuation:
        text = text.replace(p,'')
    print(text)
</code></pre>
<p>But I want to modify the list content and do it one line. Something like this:</p>
<pre><code># obviously this does not work
textList = [(text.replace(p,'') for p in punctuation) for text in textList]
</code></pre>
<p>What is the proper way to do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2, you can use <a href="https://docs.python.org/2/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate()</code></a> like below:</p>
<pre><code>res = [s.translate(None, string.punctuation) for s in textList]
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; textList = ['This is bad.', 'You, me, him are going']
&gt;&gt;&gt; res = [s.translate(None, string.punctuation) for s in textList]
&gt;&gt;&gt; res
['This is bad', 'You me him are going']
</code></pre>
<p>In Python 3, you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.maketrans" rel="nofollow noreferrer">str.maketrans()</a> like this:</p>
<pre><code>res = [s.translate(str.maketrans('', '', string.punctuation)) for s in textList]
</code></pre>
<p><strong>Note:</strong> Using your approach, you can do:</p>
<pre><code>res = []

for text in textList:
    new_text = ''.join(c for c in text if c not in string.punctuation)
    res.append(new_text)
</code></pre>
<p>In one line:</p>
<pre><code>res = [''.join(c for c in text if c not in string.punctuation) for text in textList]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the fact that you're trying to solve this in a one-liner points out that this is more of a riddle, so I'll not answer with a complete solution.</p>
<p>So, there's loads of ways to do this. You could build a regular expression, replacing all punctuation with nothing at once, for example.</p>
<p>But, if we're going to stay with the idea of your last line of code, I think <code>reduce()</code> is the python built-in that you're looking for!</p>
</div>
<span class="comment-copy">Why do you have to do it in one line?</span>
<span class="comment-copy">cleaner code and I need to enclose it in bracket to make into a list. Otherwise I have to do list.append() everytime.</span>
<span class="comment-copy">I don't think squeezing something that "logically" is a nested loop into a single line is "cleaner code". The Python mantra is that explicitness is a good thing.</span>
<span class="comment-copy">or using map : <code>textList = map(lambda x: x.translate(None, string.punctuation), textList)</code></span>
<span class="comment-copy">@AshishRanjan list comprehension is more pythonic than map :)</span>
<span class="comment-copy">I got this error: <code>TypeError: translate() takes exactly one argument (2 given)</code></span>
<span class="comment-copy">@ettanany yup that's why didn't post it as an answer, was just suggesting an alternative. also, comprehension will faster than map with a lambda</span>
<span class="comment-copy">Nevermind my previous error. Somehow I have to do it like this in Python 3. <code>res= [s.translate(str.maketrans('','',string.punctuation)) for s in textList]</code></span>
<span class="comment-copy">It is not actually a riddle. I want to do a one-liner but I cant figure out the correct syntax to do it. I simply wants to convert that <code>from  p in punctuation: text.replace(p,'')</code> into a 1 liner I can enclose with brackets to make a list.</span>
