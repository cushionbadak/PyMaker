<div class="post-text" itemprop="text">
<p>I'm trying to write a code that verifies the if password entered matches the criteria given below.</p>
<hr/>
<ol>
<li>At least 1 letter between [a-z]</li>
<li>At least 1 number between [0-9]</li>
<li>At least 1 letter between [A-Z]</li>
<li>At least 1 character from [$#@]</li>
<li>Minimum length of transaction password: 6</li>
<li>Maximum length of transaction password: 12

<hr/></li>
</ol>
<p><a href="https://i.stack.imgur.com/7iUwl.png" rel="nofollow noreferrer">Output and code screenshot</a></p>
<pre><code>import re
tmp=[]
for i in input().split(','):
  print(i)
  upp=0
  low=0
  dig=0
  sch=0
  for j in i:
    if j.isdigit() and dig!=1:
      dig=1
    elif j.isupper() and upp!=1:
      upp=1
    elif j.islower() and low!=1:
      low=1
    elif re.search("[$#@]",j) and sch!=1:
      sch=1
    elif dig and sch and low and upp and (len(i)&gt;=6 and len(i)&lt;=12)==True:
      tmp+=[i]
      print(i)
      print(tmp)
print(','.join(tmp))
</code></pre>
<p>The test case is </p>
<blockquote>
<p>This@me1,notThis,Fine@3456,&amp;1234567sdfD</p>
</blockquote>
<p>It seems like its looping through one of the test cases thrice?</p>
<p>The output looks like :</p>
<pre><code>This@me1
notThis
Fine@3456
Fine@3456
['Fine@3456']
Fine@3456
['Fine@3456', 'Fine@3456']
Fine@3456
['Fine@3456', 'Fine@3456', 'Fine@3456']
&amp;1234567sdfD
Fine@3456,Fine@3456,Fine@3456
</code></pre>
<p>Not entirely sure what is causing this. Why is it running the Fine@3456 case thrice? Also, I fail to understand why the first case This@me1 also does not get recognized as valid.</p>
<p>Any help will be much appreciated!</p>
<p>Note: I'm running this code online-on repl.it: <a href="https://IroncladSoulfulKiskadee.yashvedi.repl.run" rel="nofollow noreferrer">https://IroncladSoulfulKiskadee.yashvedi.repl.run</a> &lt;- To run the test case</p>
<p>Python 3.6.1 (default, Dec 2015, 13:05:11)
[GCC 4.8.2] on linux</p>
<p>ps. Please ignore the redundancy in the code;</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>elif dig and sch and low and upp and (len(i)&gt;=6 and len(i)&lt;=12)==True:
  tmp+=[i]
</code></pre>
<p>This is not happening in the right place. Consider the password <code>This@me1</code>. At the last iteration of the inner loop, will we execute</p>
<pre><code>if j.isdigit() and dig!=1:
  dig=1
</code></pre>
<p>And then none of the <code>elif</code> stuff goes through (including your final check).</p>
<p>The issue with <code>Fine@3456</code> running three times is due to a very similar problem.</p>
<p>To fix:</p>
<pre><code>for j in i:
    if j.isdigit() and dig!=1:
      dig=1
    elif j.isupper() and upp!=1:
      upp=1
    elif j.islower() and low!=1:
      low=1
    elif re.search("[$#@]",j) and sch!=1:
      sch=1
if dig and sch and low and upp and (len(i)&gt;=6 and len(i)&lt;=12)==True:
  tmp+=[i]
</code></pre>
<p>Check if the condition holds after you've checked everything.</p>
<p>(And consider using <code>True</code> and <code>False</code> instead of <code>1</code> and <code>0</code>. That's why they're there.)</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe instead of checking all words characters in a loop do something like this (Its more readable):</p>
<pre><code>import re
tmp=[]
for i in input().split(','):
  if not (6 &lt;= len(i) &lt;= 12):
    continue
  if not re.search("[$#@]", i):
    continue
  if not re.search("[a-z]", i):
    continue
  if not re.search("[A-Z]", i):
    continue
  if not re.search("[0-9]", i):
    continue
  tmp.append(i)
print(','.join(tmp))
</code></pre>
</div>
<span class="comment-copy">Ah Hah!, You mean it moves out of the loop before checking the final condition! That makes sense. Thanks a bunch!!</span>
<span class="comment-copy">Fine@3456 verifies the same condition since its looping through the string-thrice after initial verification</span>
<span class="comment-copy">Hello, That looks so much better. Thanks, I'll surely take this approach next time.</span>
