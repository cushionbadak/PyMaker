<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4583367/how-to-run-multiple-python-versions-on-windows">How to run multiple Python versions on Windows</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
</ul>
</div>
<p>How can I configure windows command dialog to run different python versions in it? For example when I type <code>python2</code> it runs python 2.7 and when I type <code>python3</code> it runs python 3.3? I know how to configure environment variables for one version but two? I mean something like Linux terminal.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3.3 introduces Python Launcher for Windows that is installed into <code>c:\Windows\</code> as <code>py.exe</code> and <code>pyw.exe</code> by the installer. The installer also creates associations with <code>.py</code> and <code>.pyw</code>. Then add <code>#!python3</code> or <code>#!python2</code> as the first lline. No need to add anything to the <code>PATH</code> environment variable.</p>
<p><strong>Update:</strong> Just install Python 3.3 from the official <a href="http://www.python.org/download/" rel="noreferrer">python.org/download</a>. It will add also the launcher. Then add the first line to your script that has the <code>.py</code> extension. Then you can launch the script by simply typing the <code>scriptname.py</code> on the cmd line, od more explicitly by <code>py scriptname.py</code>, and also by double clicking on the scipt icon.</p>
<p>The <code>py.exe</code> looks for <code>C:\PythonXX\python.exe</code> where <code>XX</code> is related to the installed versions of Python at the computer. Say, you have Python 2.7.6 installed into <code>C:\Python27</code>, and Python 3.3.3 installed into <code>C:\Python33</code>. The first line in the script will be used by the Python launcher to choose one of the installed versions. The default (i.e. without telling the version explicitly) is to use the highest version of Python 2 that is available on the computer.</p>
</div>
<div class="post-text" itemprop="text">
<p>I also met the case to use both python2 and python3 on my Windows machine. Here's how i resolved it: </p>
<ol>
<li>download python2x and python3x, installed them. </li>
<li>add <code>C:\Python35;C:\Python35\Scripts;C:\Python27;C:\Python27\Scripts</code> to environment variable <code>PATH</code>.</li>
<li>Go to <code>C:\Python35</code> to rename <code>python.exe</code> to <code>python3.exe</code>, also to <code>C:\Python27</code>, rename <code>python.exe</code> to <code>python2.exe</code>.</li>
<li>restart your command window. </li>
<li>type <code>python2 scriptname.py</code>, or <code>python3 scriptname.py</code> in command line to switch the version you like.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest using the <a href="http://docs.python.org/3/using/windows.html?highlight=shebang#python-launcher-for-windows" rel="noreferrer"><em>Python Launcher for Windows</em></a> utility that was introduced into Python 3.3. You can manually download and install it directly from the author's <a href="https://bitbucket.org/vinay.sajip/pylauncher" rel="noreferrer">website</a> for use with earlier versions of Python 2 and 3. </p>
<p>Regardless of how you obtain it, after installation it will have associated itself with all the standard Python file extensions (i.e. <code>.py,</code> <code>.pyw</code>, <code>.pyc</code>, and <code>.pyo</code> files). You'll not only be able to explicitly control which version is used at the command-prompt, but also on a script-by-script basis by adding Linux/Unix-y shebang <code>#!/usr/bin/env pythonX</code> comments at the beginning of your Python scripts.</p>
</div>
<span class="comment-copy">Please explain more I couldn't understand what you have said!</span>
<span class="comment-copy">You can always rename your <code>C:\Python33\python.exe</code> to the <code>C:\Python33\python3.exe</code>. However, it is better to use explicitly <code>py -3 scriptname.py</code>. It is even better to put the information into the script, and then launch your scripts for either version the uniform way.</span>
<span class="comment-copy">@pepr Renaming the exe breaks <code>pip</code> for that installation as it expects the executable under its original name.</span>
<span class="comment-copy">@BlackJack: I see. Anyway, you can create a new copy named <code>python3.exe</code>. However, using the Python Launcher for Windows is better, and there is no need for doing such things.</span>
<span class="comment-copy">@ConradB OK. But the question is how to run different Python version in <code>cmd</code>. When using Python Launcher for Windows, the Python is not in the path at all -- nor the system, nor the user paths. That is because py.exe is in <code>c:\Windows</code>. And if you do not want to modify the script, you can always call <code>py -3 myscript.py</code> for Python 3 or <code>py -2 myscript.py</code> for Python 2. Default today for <code>py myscript.py</code> uses Python 3 interpreter.</span>
<span class="comment-copy">To which environment variable did you add all the Python paths? As for renaming the <code>python.exe</code> files, how does doing that affect things when doing minor upgrades, say from version 2.7.x to 2.7.x+y, which normally would both be located in the same <code>C:\Python27</code> directory?</span>
<span class="comment-copy">what if I want to execute something like "pytest file.py"? It does not work like "python2 pytest file.py"</span>
<span class="comment-copy">+1 for being faster and for including the link.</span>
<span class="comment-copy">Amazing, amazing, amazing!!</span>
