<div class="post-text" itemprop="text">
<p>In this simple implementation of Stack using Python lists. I have a small method to check if the stack is empty (list empty). I am using this method as a check condition for pop method. The pop method should raise an exception when trying to pop an empty stack. For some reason, this doesn't seem to work. Am I missing something here? Please help!</p>
<pre><code> __author__ = '@arun'
# Stack simple implementation using Python list


class Stack(object):
    def __init__(self):
        self.items = []

    def push(self, value):
        self.items.append(value)

    def is_empty(self):
        return not bool(self.items)

    def pop(self):
        print self.is_empty()
        if self.is_empty:  # if not stack is empty
            return self.items.pop()
        else:
            raise Exception("Stack Empty!")

    def peek(self):
        return self.items[-1]

    def get_size(self):
        return len(self.items)

if __name__ == '__main__':
    stack = Stack()
    print stack.get_size()
    stack.push(23)
    stack.push(3)
    print stack.get_size()
    print stack.pop()
    print stack.pop()
    print stack.get_size()
    #print stack.pop()
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>0
2
False
3
False
23
0
</code></pre>
<p>Why is pop() method popping out elements when is_empty() is returning False?!</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>if self.is_empty:
</code></pre>
<p>will always evaluate to <code>True</code>, since it is a <a href="http://docs.python.org/2/library/stdtypes.html#truth-value-testing">Truthy value</a>. You need to call the function like this</p>
<pre><code>if self.is_empty():
</code></pre>
<p>And <strong>a suggestion:</strong> You might want to <code>pop</code> the values only when <code>is_empty()</code> is <code>False</code>, like this</p>
<pre><code>if not self.is_empty():
</code></pre>
</div>
<span class="comment-copy">As a side note, why do the check in the first place? If it's not empty, the <code>pop</code> will work. If it <i>is</i> empty, the <code>pop</code> will raise an <code>Exception</code>. Soâ€¦ you're done. If you want to wrap or replace the extension with a more specific type (although in your case, you're using a <i>less</i> specific type!), just use a <code>try</code>/<code>except</code> to handle it and throw something new. In Python, <a href="http://docs.python.org/3/glossary.html#term-eafp" rel="nofollow noreferrer">EAFP</a> programming is often easier than <a href="http://docs.python.org/3/glossary.html#term-lbyl" rel="nofollow noreferrer">LBYL</a>.</span>
<span class="comment-copy">@abarnert thanks for your valuable insight! the more I learn, the more it fascinates me! Love Python!!</span>
<span class="comment-copy">By the way, his logic is wrong. He pops it when it is empty.</span>
<span class="comment-copy">@thefourtheye Thanks! that's interesting!</span>
<span class="comment-copy">@zhangyangyu Yup :) Updated my answer :)</span>
<span class="comment-copy">@ArunprasathShankar You are welcome :) And please check the suggestion made in the answer.</span>
<span class="comment-copy">@ArunprasathShankar Cool. :) Please consider accepting this answer if it helps you :)</span>
