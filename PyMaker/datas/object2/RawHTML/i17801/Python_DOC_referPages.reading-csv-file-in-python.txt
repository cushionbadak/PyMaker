<div class="post-text" itemprop="text">
<p>With the following data, using the code snippet, I am getting the following error. Can you please help me with this. I am a beginner in python.
Data :</p>
<pre><code>"Id","Title","Body","Tags"
"Id1","Tit,le1","Body1","Ta,gs1"
"Id","Title","Body","Ta,2gs"
</code></pre>
<p>Code:</p>
<pre><code>#!/usr/bin/python 
import csv,sys
if len(sys.argv) &lt;&gt; 3:
print &gt;&gt;sys.stderr, 'Wrong number of arguments. This tool will print first n records from a comma separated CSV file.' 
print &gt;&gt;sys.stderr, 'Usage:' 
print &gt;&gt;sys.stderr, '       python', sys.argv[0], '&lt;file&gt; &lt;number-of-lines&gt;'
sys.exit(1)

fileName = sys.argv[1]
n = int(sys.argv[2])

i = 0 
out = csv.writer(sys.stdout, delimiter=',', quotechar='"', quoting=csv.QUOTE_NONNUMERIC)

ret = []


def read_csv(file_path, has_header = True):
    with open(file_path) as f:
        if has_header: f.readline()
        data = []
        for line in f:
            line = line.strip().split("\",\"")
            data.append([x for x in line])
    return data


ret = read_csv(fileName)
target = []
train = []
target = [x[2] for x in ret]
train = [x[1] for x in ret]
</code></pre>
<p>Error:</p>
<pre><code>    target = [x[2] for x in ret]
IndexError: list index out of range
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are mixing <code>file.readline()</code> and using the file object as an iterable. Don't do that. Use <code>next()</code> instead.</p>
<p>You also should use the <code>csv.reader()</code> module to read your data, don't reinvent this wheel. The <code>csv</code> module can handle quoted CSV values with delimiters embedded in thevalues much better in any case:</p>
<pre><code>import csv

def read_csv(file_path, has_header=True):
    with open(file_path, 'rb') as f:
        reader = csv.reader(f)
        if has_header: next(reader, None)
        return list(reader)
</code></pre>
<p>Last but not least, you can use <code>zip()</code> to transpose rows and columns:</p>
<pre><code>ret = read_csv(fileName)
target, train = zip(*ret)[1:3]  # just the 2nd and 3rd columns
</code></pre>
<p>Here <code>zip()</code> will stop at the first row where there are <em>not</em> enough columns, at the very least avoiding the exception you see.</p>
<p>If there are columns missing in some of the rows, use <a href="http://docs.python.org/2/library/itertools.html#itertools.izip_longest" rel="nofollow"><code>itertools.izip_longest()</code></a> instead (<a href="http://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow"><code>itertools.zip_longest()</code></a> in Python 3):</p>
<pre><code>from itertools import izip_longest

ret = read_csv(fileName)
target, train = izip_longest(*ret)[1:3]  # just the 2nd and 3rd columns
</code></pre>
<p>The default is to replace missing columns with <code>None</code>; if you need to use a different value, pass a <code>fillvalue</code> argument to <code>izip_longest()</code>:</p>
<pre><code>target, train = izip_longest(*ret, fillvalue=0)[1:3]  # just the 2nd and 3rd columns
</code></pre>
</div>
<span class="comment-copy">The created file doesn't have more than two lines?</span>
<span class="comment-copy">Sorry, for the mistake in the data. I have editted the question now. Thanks @PauloBu</span>
<span class="comment-copy">What's the point of [x for x in line]?</span>
<span class="comment-copy">@novieq Are there extra newlines (blank lines) after your data? When it tries to index the line <code>['']</code> it gives you this error? Adding an if statement to check for that before appending your data would help?</span>
<span class="comment-copy">Thanks @Martijin for this. I get the following error : target, train = zip(*ret)[1:2] ValueError: need more than 0 values to unpack</span>
<span class="comment-copy">@novieq: Your CSV file was empty in that case. With no columns to work with, <code>zip()</code> returned an empty list.</span>
<span class="comment-copy">I used <code>ret = read_csv(fileName) print(ret[0][2]) print(ret[1][2]) target, train = zip(*ret)[1:2]</code> and I can see the output. So the csv is parsed correctly. Thanks @Martijn in advance.</span>
<span class="comment-copy">You need to slice with <code>[1:3]</code> to get two columns; the end value is not included.</span>
<span class="comment-copy">Are you still seeing any other problems?</span>
