<div class="post-text" itemprop="text">
<pre><code>if os.path.exists(temp_dir):
    print "Deleting ", temp_dir
    try:
        shutil.rmtree(temp_dir)
    except:
        raise
print "Delete complete"
</code></pre>
<p>it prints "Deleting  c:\temp\metabuild" but neither prints any error nor "Delete complete", obviously the rmtree failed, but want it to print what the error is, will "raise" print what the error is or no? thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>will "raise" print what the error is or no?</p>
</blockquote>
<p>No, all <code>raise</code> does is re-raise the exception, as if you hadn't caught it in the first place. In particular, this code:</p>
<pre><code>try:
    shutil.rmtree(temp_dir)
except:
    raise
</code></pre>
<p>… is guaranteed to do the same thing (except slightly slower and a lot less readably) as:</p>
<pre><code>shutil.rmtree(temp_dir)
</code></pre>
<p>If the exception ultimately propagates up to the top level without being handled anywhere, Python will print a traceback and exit. But if some other code handles the exception anywhere on the chain, it can do anything it wants.</p>
<p>If you want to print the exception out, you have to do that explicitly. For example:</p>
<pre><code>try:
    shutil.rmtree(temp_dir)
except Exception as e:
    print(e)
    raise
</code></pre>
<p>If you want more information than <code>print(e)</code> or <code>print(repr(e))</code> gives you, see the <a href="http://docs.python.org/3/library/traceback.html" rel="nofollow"><code>traceback</code></a> library, which has all kinds of functions for retrieving or dumping information about the exception and its traceback. In particular, to get the same output you would have gotten if this happened at the top level, do this:</p>
<pre><code>try:
    shutil.rmtree(temp_dir)
except Exception as e:
    traceback.print_exc()
    raise
</code></pre>
<p>Because <code>print_exc</code> gets the exception object and other info directly out of Python's guts, you don't really need the <code>except Exception as e:</code> here; you could just use <code>except Exception:</code> or <code>except:</code>.</p>
</div>
<span class="comment-copy">A <code>try:</code>/<code>except: raise</code> doesn't do anything (except make your code more verbose and slightly slower). You're saying, "If there's any exception, instead of raising it, let me handle it… by raising it in the same way it would have been." So… what were you <i>trying</i> to do there?</span>
