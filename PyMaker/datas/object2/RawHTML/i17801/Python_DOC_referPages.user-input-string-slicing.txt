<div class="post-text" itemprop="text">
<p>Write a program that gets a string containing a person's first, middle, and last names, and then display their first, middle, and last initials. For example, if the user enters John William Smith the program should display J. W. S.</p>
<p>That is the exact instructions and this is what i have so far but it prints them in a list not a string.</p>
<pre><code>def main():
my_string = input("Enter in your First, Middle and last name: ")    
word_list = my_string.split()

for ch in word_list:
    print(ch[0] + ".")

main()
</code></pre>
<p>Current Output:</p>
<pre><code>Enter in your First, Middle and last name: Nolan Patrick Archer
N.
P.
A.
&gt;&gt;&gt;
</code></pre>
<p>I can Convert Python 2 into Python 3 its just the concept I am un-able to grasp</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>join</code> to get a single string with the initials and print that out:</p>
<pre><code>print(". ".join(word[0] for word in word_list) + ".")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Print your result without newlines between the components:</p>
<pre><code>for ch in word_list:
    print(ch[0] + '.', end=' ')
print()
</code></pre>
</div>
<span class="comment-copy">@TimothyChoi by default, <code>str.split()</code> splits on whitespace - while explicitly defining it is fine, it's not necessary</span>
<span class="comment-copy">@MattDMo Just read the docs again. Little bit surprised but okay :)</span>
<span class="comment-copy"><code>my_string</code> is a string. When you split the string using <code>my_string.split()</code> it will result in a list, from the words separated by white space. <code>['John', 'William', 'Smith']</code>. Then when you iterate through this list, <code>for ch in word_list:     print(ch[0] + ".")</code>, it grabs the first letter (<code>ch[0]</code>) and prints it with a <code>.</code> and a newline. <a href="http://docs.python.org/3/whatsnew/3.0.html" rel="nofollow noreferrer">Documentation</a> for changes to print in Python 3.0.</span>
<span class="comment-copy">This exactly. You could also do <code>print(". ".join(word[0].upper() for word in word_list) + ".")</code> to make sure if I type "adam duncan smith" it still reads my initials as "A. D. S."</span>
<span class="comment-copy">If you really want to avoid this method for some reason, don't (because it's very readable and pythonic). However, if you MUST, then print() accepts a kwarg <code>end</code> that specifies the last character to print. By default this is <code>\n</code> but you can set it to be an empty string if you like. <code>print(ch[0].upper()+".", end='')</code> would also solve, but looks uglier and is less clear.</span>
<span class="comment-copy">+1 for both suggesting to incorporate <code>upper</code> and providing more information about the <code>end</code> kwarg.</span>
<span class="comment-copy">I used this method and on the next line after this one i added a break so it only displays once. Thanks Everyone!</span>
