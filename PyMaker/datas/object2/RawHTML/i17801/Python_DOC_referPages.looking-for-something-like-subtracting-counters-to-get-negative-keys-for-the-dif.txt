<div class="post-text" itemprop="text">
<p>I've recently started learning python, and I am attempting to optimize a scrabble solving program to practice.  I have written a working program but, after adding the ability to take into account blank tiles, I realized I was doing it wrong, and it was taking ages to run.  I was building a giant list of possible racks, then running my program against each possible rack.  Now, to optimize things, I am looking to build a list of available letters, and then once I have a list of possible words, score them against the rack (to account for blanks).</p>
<p>What I was doing before was:</p>
<pre><code>for item in word_list:
    for letter in item:
        if item.count(letter) &gt; players_rack.count(letter):
            valid_words.append(item)
</code></pre>
<p>I was wondering if there was a way to simplify this using Counter()
What I would want to do, is subtract <code>Counter(word)</code> from <code>Counter(letters_to_work_with)</code> and if any items are negative...which is probably not possible with Counter(), say that it can't be a valid word.</p>
<p>Is there a data type that would work better here?  Or is there a method I am just not seeing?</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your question is not quite clear to me - posting at least some examples inputs and outputs might help (ie : "given this and this as input, I'd like to get this as output").</p>
<p>It's indeed possible to substract a <code>Counter</code> from another one but that doesn't yield the expected result. Now you can still substract values for specific keys, ie  </p>
<pre><code>&gt;&gt;&gt; c1 = Counter("word")
&gt;&gt;&gt; c2 = Counter("oawrc")
&gt;&gt;&gt; [(k, c2.get(k, 0) - v) for k, v in c1.items()]
[('r', 0), ('o', 0), ('w', 0), ('d', -1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.2 and higher, <code>Counter</code> has <a href="https://docs.python.org/3/library/collections.html#collections.Counter.subtract" rel="nofollow">a <code>subtract</code> method</a> which does exactly what you want, preserving 0 and negative values the way the actual <code>-</code> operator does not. It operates in place, so you'd do:</p>
<pre><code>letter_counts = Counter(letters_to_work_with)
letter_counts.subtract(Counter(word))
# Alternatively, though it won't short-circuit, you could do:
# if min(letter_counts.values()) &lt; 0:
if any(v &lt; 0 for v in letter_counts.values()):
    ... not valid ...
</code></pre>
</div>
<span class="comment-copy">An example might be       <code>c1= Counter("arpgjdabcdefghijklmnopqrstuvwxyz")      c2= Counter("pepper")      print(c1 - c2)      [('a', 1).........('p', -1).....]</code>  I think you answered my question though.  It is possible to subtract counters, but it just eliminates the item from the list as opposed to making the key negative.</span>
<span class="comment-copy">Didn't know you could substract Counters - one learn something new everyday, year after year ;). Fixed my answer, thx.</span>
