<div class="post-text" itemprop="text">
<p>I have to write a Python script that will allow the user to enter a set of positive numbers and then count how many are </p>
<ul>
<li>equal to 50</li>
<li>greater than 50</li>
<li>less than 50</li>
</ul>
<p>Use appropriate output to prove that your program is working.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just for example's sake, let's write a function that counts how many numbers are above 50, then one for equal to 50, then one for less than 50. Disclaimer: this is not the only, or even the BEST way to accomplish what you want to do, this is just the best teaching aid :). Also, some of the nomenclature may change if you're not using Python 3.x.</p>
<pre><code>#this function returns how many values in the list that's passed to it
#are greater than 50
def greaterThanFifty(list_to_compare):
    how_many_above_fifty = 0
    for value in list_to_compare:
        if value &gt; 50:
            how_many_above_fifty += 1
    return how_many_above_fifty

#this function returns how many values in the list that's passed to it
#are less than 50
def lessThanFifty(list_to_compare):
    how_many_under_fifty = 0
    for value in list_to_compare:
        if value &lt; 50:
            how_many_under_fifty += 1
    return how_many_under_fifty

#this function returns how many values in the list that's passed to it
#are equal to 50
def equalToFifty(list_to_compare):
    how_many_are_fifty = 0
    for value in list_to_compare:
        if value == 50:
            how_many_are_fifty += 1
    return how_many_are_fifty
</code></pre>
<p>Now we have our functions that will return the values we need. Again, this is not the only or even the best way to do this, but it's the way I'm using because it teaches a lot of basic strategies like writing modular programs (each function is performed by its own bit of code) and using functions rather than straight code to perform your task. Unfortunately, on their own, this code doesn't do anything. It just defines functions that we'll leverage to solve the problem at hand. In essence -- we've made our hammer, nails, and saw, but now we have to cut the lumber to size and nail it up. Let's do that.</p>
<pre><code>def main(): #this is always the name of our function that does the heavy lifting
    list_of_numbers = []
    user_input = input("List some numbers, comma separated please: ")
    for num in user_input.split(","):
    #loop through user_input, split by commas
        list_of_numbers.append(num.strip())
        #add to list_of_numbers each item that we find in user_input,
        #stripped of leading and trailing whitespace
    #at this point we've looped through all of user_input and added each number
    #to list_of_numbers, so we can use our functions, defined earlier, to return
    #the requested values. Luckily we set up our functions to accept
    #lists!

    greater_than_fifty = greaterThanFifty(list_of_numbers)
    less_than_fifty = lessThanFifty(list_of_numbers)
    equal_to_fifty = equalToFifty(list_of_numbers)

    #now just to display the results to the user, and we're done.
    print("There are "+str(greater_than_fifty)+" numbers over fifty")
    print("There are "+str(less_than_fifty)"+ numbers under fifty")
    print("There are "+str(equal_to_fifty)"+ numbers that are fifty")
</code></pre>
<p>We still haven't actually DONE anything, though, since all we've done is define functions that do what we want from start to finish. our <code>greaterThanFifty</code> function is our hammer, our <code>lessThanFifty</code> function is our saw, and our <code>equalToFifty</code> function is our nails. Now we've added a <code>main</code> function, which is our handyman. Now we need to tell him to work. Luckily that's easy :)</p>
<pre><code>main()
</code></pre>
<p>That's it! We're done!</p>
<p>For comparison purposes, this is how I'd write all that:</p>
<pre><code>input_list = [int(each.strip()) for each in input("Enter a list of numbers, comma-separated: ").split(",")]
print("{} are less than 50, {} are more than 50, {} are 50".format(len([each for each in input_list if each&lt;50]),len([each for each in input_list if each&gt;50]),len([each for each in input_list if each==50])))
</code></pre>
<p>You'll get there, young padawan :)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def main():
    inp = input('enter number of positive numbers to enter ')
    print 'enter the list of positive numbers'
    num = []
    count_eq = 0
    count_gr = 0
    count_ls = 0
    for elem in range(inp):
        num.append(input(''))
    for item in num:
        if item == 50:
            count_eq += 1
        if item &gt; 50:
            count_gr += 1
        if item &lt; 50:
            count_ls += 1
    print '%d are equal %d are less than and %d are greater than 50' % (count_eq, count_ls, count_gr)
main()
</code></pre>
<p>This is a very basic program ! You should start python's beginner tutorial <a href="http://docs.python.org/2/tutorial/" rel="nofollow">here</a></p>
</div>
<span class="comment-copy">Start by reading a Python beginners book :)</span>
<span class="comment-copy">Start by reading a tutorial. <a href="http://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">Here's</a> the official one for Python 3.3 (you might want to go with 2.7 though). You can't be stuck if you haven't started.</span>
<span class="comment-copy">You could have at least deleted the last sentence from your Homework assignment ...</span>
<span class="comment-copy">Holy cow, do your own work and ask for help when you get stuck on something you wrote.</span>
<span class="comment-copy">I have to give a +1 for the effort.  :)  This is one of the most comprehensive answers I've ever seen on a question like this.  Good job.</span>
