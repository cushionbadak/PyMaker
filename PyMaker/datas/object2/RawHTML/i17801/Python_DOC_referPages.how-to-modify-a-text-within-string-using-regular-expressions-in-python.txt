<div class="post-text" itemprop="text">
<p>I'm trying to change a file containing strings like: </p>
<pre><code>Record 1 : 
{ "K1":"value1" , 
  "K2":"value2" 
}

Record 2 :
{ "K1":"value3" , 
  "K2":"value4" 
}
</code></pre>
<p>to </p>
<pre><code>{
    "Record_1" : 
        { "K1": "value1", 
          "K2": "value2" 
    }, 

    "Record_2" :
        { "K1": "value3", 
          "K2": "value4" 
        }
}
</code></pre>
<p>(to make it into a correct JSON format).<br/> 
The part of code that I'm having problems with is:</p>
<pre><code>pattern = r"(\s*)Record (\d+):"
all_records_json = re.sub(middle_pattern, "\"Record_"+ ??? + "\" : ",all_records)
</code></pre>
<p>And I don't know what to put instead of ??? so that it reads the (\d+) part that matched the pattern. </p>
</div>
<div class="post-text" itemprop="text">
<p>First, your pattern doesn't actually match your data in the first place:</p>
<pre><code>&gt;&gt;&gt; all_records = '''Record 2 :
... { "K1":"value3" , 
...   "K2":"value4" 
... }'''
&gt;&gt;&gt; pattern = r"(\s*)Record (\d+):"
&gt;&gt;&gt; re.findall(pattern, all_records)
[]
</code></pre>
<p>That's because your data has a space between the digits and the colon. You need to fix that. While we're at it, I have no idea why you're putting a group around the preceding whitespace, so let's not do that. So we get:</p>
<pre><code>&gt;&gt;&gt; pattern = r"\s*Record (\d+)\s*:"
&gt;&gt;&gt; re.findall(pattern, all_records)
[2]
</code></pre>
<p>Now, your only capturing group is the <code>\d+</code>. So that will be group 1. Which you can include in the substitution as <code>\1</code>. So:</p>
<pre><code>&gt;&gt;&gt; print(re.sub(pattern, r'"Record_\1": ', all_records))
"Record_2":
{ "K1":"value3" ,
  "K2":"value4"
}
</code></pre>
<p>That still isn't valid JSON, but it's what you wanted, right?</p>
<p>If you read the docs, <a href="http://docs.python.org/3/library/re.html#re.sub" rel="nofollow"><code>re.sub</code></a> explains that "Backreferences, such as <code>\6</code>, are replaced with the substring matched by group 6 in the pattern." For full details on back references for both <code>(…)</code> groups and <code>(?P&lt;name&gt;…)</code> groups, look them up in the <a href="http://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">Regular Expression Syntax</a>. You should also read the <a href="http://docs.python.org/3/howto/regex.html" rel="nofollow">Regular Expression HOWTO</a>, which explains all of this in a more novice-friendly way.</p>
<p>Notice that I made the substitution a raw string just like the pattern, so I didn't have to escape the <code>\1</code>, and I also used single instead of double quotes, so I didn't have to escape the <code>"</code> characters.</p>
</div>
<span class="comment-copy">The result still isn't anything close to valid JSON. You can't have a <code>key: value</code> outside of an object, you can't have consecutive anythings without commas between them, etc.</span>
<span class="comment-copy">abarnert is right, take a look at <a href="http://www.json.org/" rel="nofollow noreferrer">json.org</a></span>
<span class="comment-copy">That's true. Sorry I didn't put the whole thing. Those formatting parts I have taken care of. The record ids is the part that's causing problems now.</span>
<span class="comment-copy">Also, your pattern doesn't match anything in your input data. <code>re.findall(pattern, all_records)</code> will return <code>[]</code>. So, the question of what to substitute in the pattern doesn't even come into it.</span>
<span class="comment-copy">Also, using backslashes unnecessarily makes your code really hard to read. To put <code>"</code> characters into a string, use single instead of double quotes. And you probably want to use a raw string for the substitution as well as the pattern.</span>
<span class="comment-copy">Ah. thanks. The "\1" was what I was looking for and didn't know how to search for it. Thanks.</span>
