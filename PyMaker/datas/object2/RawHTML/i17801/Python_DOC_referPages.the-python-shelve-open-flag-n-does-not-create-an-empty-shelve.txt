<div class="post-text" itemprop="text">
<p>I am using the Python shelve module and the following python version:
<code>Python 3.3.0 (v3.3.0:bd8afb90ebf2, Sep 29 2012, 10:55:48) [MSC v.1600 32 bit (Intel)] on win32</code>. The flag parameter of the shelve.open method is described <a href="http://docs.python.org/3/library/shelve.html" rel="nofollow">here</a>:</p>
<blockquote>
<p>The optional flag parameter has the same interpretation as the flag parameter of dbm.open().</p>
</blockquote>
<p>and the dbm flag parameter is described <a href="http://docs.python.org/3/library/dbm.html#dbm.open" rel="nofollow">here</a>:</p>
<blockquote>
<p>'n' Always create a new, empty database, open for reading and writing  </p>
</blockquote>
<p>But the following program did not work as I expected:</p>
<pre>
import shelve
import os
import os.path
import shutil
myshelvedir='C:\\testdir'
myshelvefile=os.path.join(myshelvedir,'myshelve')
os.mkdir(myshelvedir)
try:
    myshelve=shelve.open(myshelvefile)
    try:
        myshelve['key1']='value1'
        print(1,dict(myshelve))
    finally:
        myshelve.close()

    myshelve=shelve.open(myshelvefile,'n')
    try:
        myshelve['key2']='value2'
        print(2,dict(myshelve))
    finally:
        myshelve.close()

finally:
    shutil.rmtree(myshelvedir)
</pre>
<p>The output was</p>
<pre>
1 {'key1': 'value1'}
2 {'key1': 'value1', 'key2': 'value2'}
</pre>
<p>For the second line I expected</p>
<pre>
2 {'key2': 'value2'}
</pre>
<p>because the shelve was opened with the <code>'n'</code> flag and therefore the database should be empty after opening.</p>
<p>Do I miss something?</p>
<p><strong>Additional tests:</strong></p>
<p>On</p>
<p><code>Python 3.0.1 (r301:69561, Feb 13 2009, 20:04:18) [MSC v.1500 32 bit (Intel)] on win32</code></p>
<p>I also get</p>
<p><code>2 {'key2': 'value2', 'key1': 'value1'}</code></p>
<p>On</p>
<p><code>Python 2.6.4 (r264:75706, Jun 27 2012, 05:45:50) [C] on sunos5</code></p>
<p>I get the expected</p>
<p><code>(2, {'key2': 'value2'})</code></p>
<p>Also on
<code>Python 2.7.5 (default, May 15 2013, 22:43:36) [MSC v.1500 32 bit (Intel)] on win 32</code></p>
<p>I get</p>
<p><code>(2, {'key2': 'value2'})</code></p>
<p>So this is a new feature or a bug in 3</p>
</div>
<div class="post-text" itemprop="text">
<p>I found <a href="http://bugs.python.org/issue18039" rel="nofollow">http://bugs.python.org/issue18039</a>. </p>
<blockquote>
<p><strong>Title:</strong> dbm.open(..., flag="n") does not work and does not give a warning</p>
</blockquote>
<p>which gives an explanation.</p>
<p>The documentation says that shelve uses one of the available database interfaces.</p>
<p><a href="http://docs.python.org/3/library/shelve.html" rel="nofollow">http://docs.python.org/3/library/shelve.html</a></p>
<blockquote>
<p><strong>12.3. shelve — Python object persistence</strong><br/>
  ...<br/>
  shelve.<strong>open</strong> <em>(filename, flag='c', protocol=None, writeback=False)</em><br/>
  Open a persistent dictionary.<br/>
  ...<br/>
  The optional flag parameter has the same interpretation as the flag parameter of dbm.open().<br/>
  ...<br/>
<strong>12.3.1. Restrictions</strong>
  The choice of which database package will be used (such as dbm.ndbm or dbm.gnu) depends on which interface is available. Therefore it is not safe to open the database directly using dbm. </p>
</blockquote>
<p>and that the 'n' flag works like in <code>dbm.open</code> </p>
<p><a href="http://docs.python.org/3/library/dbm.html" rel="nofollow">http://docs.python.org/3/library/dbm.html</a></p>
<blockquote>
<p><strong>12.5. dbm — Interfaces to Unix “databases”</strong><br/>
  dbm is a generic interface to variants of the DBM database — dbm.gnu or dbm.ndbm. If none of these modules is installed, the slow-but-simple implementation in module dbm.dumb will be used<br/>
  ...<br/>
<em>'n'</em>     :     Always create a new, empty database, open for reading and writing</p>
</blockquote>
<p>But this definition of the n-flag contradicts to the definition of the n-flag if it falls back to dbms.dumb</p>
<p><a href="http://docs.python.org/3/library/dbm.html#module-dbm.gnu" rel="nofollow">http://docs.python.org/3/library/dbm.html#module-dbm.gnu</a></p>
<blockquote>
<p><strong>12.5.1. dbm.gnu — GNU’s reinterpretation of dbm</strong><br/>
<em>Platforms: Unix</em> </p>
</blockquote>
<p><a href="http://docs.python.org/3/library/dbm.html#module-dbm.dumb" rel="nofollow">http://docs.python.org/3/library/dbm.html#module-dbm.dumb</a> says</p>
<blockquote>
<p><strong>12.5.3. dbm.dumb — Portable DBM implementation</strong><br/>
  ...<br/>
  dbm.dumb.open(filename[, flag[, mode]])
  ...
  The optional flag argument is currently ignored; the database is always opened for update, and will be created if it does not exist.</p>
</blockquote>
<p>So this maybe not an issue on Unix implementations where gnu.dbm libraries are installed (I don't have access to a python 3 on Unix to test this)</p>
<p>From this I conclude that there some conflicting statements in the python documentation:
On unix systems where dbm libraries are installed python shelve will use this dbm installation an here the 'n' flag works as described in the documentation.</p>
<p>If no dbm installation can be found (e.g. on windows systems) the dbm.dumb module will be used where the 'n' works like the 'c' flag.</p>
</div>
<span class="comment-copy">Works as expected on py2.7, no key1 on second line.  Can't check right now with py 3</span>
<span class="comment-copy">@alko: Thank you. I now had the possibility to test it on win/2.6, solaris/2.6 and win/3.0 and it worked on 2.6 as expected and did not on 3.x.</span>
