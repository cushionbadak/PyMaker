<div class="post-text" itemprop="text">
<p>Is there a more concise way of doing the following?</p>
<pre><code>t = (1,2,3)
t2 = (4,5)

l.addAll(t)
l.addAll(t2)
print l # [1,2,3,4,5]
</code></pre>
<p>This is what I have tried so far: I would prefer to avoid passing in the list in the parameters.</p>
<pre><code>def t_add(t,stuff):
    for x in t:
        stuff.append(x)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>list.extend()</code>, not <code>list.append()</code> to add all items from an iterable to a list:</p>
<pre><code>l.extend(t)
l.extend(t2)
</code></pre>
<p>or</p>
<pre><code>l.extend(t + t2)
</code></pre>
<p>or even:</p>
<pre><code>l += t + t2
</code></pre>
<p>where <code>list.__iadd__</code> (in-place add) is implemented as <code>list.extend()</code> under the hood.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; l = []
&gt;&gt;&gt; t = (1,2,3)
&gt;&gt;&gt; t2 = (4,5)
&gt;&gt;&gt; l += t + t2
&gt;&gt;&gt; l
[1, 2, 3, 4, 5]
</code></pre>
<p>If, however, you just wanted to create a list of <code>t + t2</code>, then <code>list(t + t2)</code> would be the shortest path to get there.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>stuff.extend</code> is what you want.</p>
<pre><code>t = [1,2,3]
t2 = [4,5]
t.extend(t2)
# [1, 2, 3, 4, 5]
</code></pre>
<p>Or you can do</p>
<pre><code>t += t2
</code></pre>
</div>
<span class="comment-copy">Presumably you want any existing pre-elements in <code>l</code> to be still there if <code>l</code> wasn't empty, right?</span>
<span class="comment-copy">@MartijnPieters yes</span>
<span class="comment-copy">I'm newer to Python, so this may be a naive question, but how did you know that this works for arbitrary iterables, and not just lists?  <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">The documentation</a> says (emphasis added) "<i>list.extend(L) Extend the list by appending all the items in the <b>given list</b>. Equivalent to <code>a[len(a):] = L</code>.</i>"  This might be documented, but I'm not sure where... I see <a href="https://docs.python.org/3/whatsnew/3.0.html#views-and-iterators-instead-of-lists" rel="nofollow noreferrer">Views And Iterators Instead Of Lists</a>, but that's more a "what's changed?" entry.</span>
<span class="comment-copy">@JoshuaTaylor: It looks like the documentation in Python 3 was updated. Now it says: "list.extend(iterable) Extend the list by appending all the items from the iterable. Equivalent to a[len(a):] = iterable.". As for Python 2, I tried "help([].extend)" and also got: "L.extend(iterable) -- extend list by appending elements from the iterable". The respective documentation <a href="https://docs.python.org/2.7/tutorial/datastructures.html" rel="nofollow noreferrer">link</a> looks to be not completely correct.</span>
<span class="comment-copy">@user2273896 Good to see that it's updated!</span>
