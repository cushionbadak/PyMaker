<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/509211/understanding-slice-notation">Understanding slice notation</a>
<span class="question-originals-answer-count">
                    31 answers
                </span>
</li>
</ul>
</div>
<p>Im sure this is a repeated question, however I have no idea how to phrase it.
What does pythons[1:3] yield?</p>
<pre><code>pythons = [’Graham’, ’Eric’, ’Terry’, ’John’, ’Michael’, ’Terry’]
</code></pre>
<p>I know now the answer is Eric and Terry, but why?</p>
</div>
<div class="post-text" itemprop="text">
<p>Think about it like this:</p>
<pre><code>    #0       #1       #2      #3        #4        #5
[’Graham’, ’Eric’, ’Terry’, ’John’, ’Michael’, ’Terry’]
</code></pre>
<p>As it was pointed out above, we start counting at 0 in python, and our ranges are not inclusive on the top end. So, when we say [1:3], we are saying "Grab all of the elements in this list from indexes in the range (1,3). So we split up the list like this</p>
<pre><code>          |                 |    
    #0    |   #1       #2   |   #3        #4        #5
[’Graham’,| ’Eric’, ’Terry’,| ’John’, ’Michael’, ’Terry’]
          |                 |
</code></pre>
<p>So, a new list, <code>['Eric', 'Terry']</code> is returned. This same principle applies with strings too. </p>
</div>
<div class="post-text" itemprop="text">
<p>List are ordered according to data entry, every time you append something this will be the last item of the list:</p>
<pre><code>&gt;&gt;&gt;pythons.append('Monty')
&gt;&gt;&gt;pythons
['Graham', 'Eric', 'Terry', 'John', 'Michael', 'Terry', 'Monty']
</code></pre>
<p>indexes starts from 0 and you can imagine the index number between the elements:</p>
<pre><code>['Graham', 'Eric', 'Terry', 'John', 'Michael', 'Terry', 'Monty']
0        1       2        3       4          5        6        
</code></pre>
<p>So pythons[1:3] select the elements <strong>between</strong> 1 and 3, Eric and the first Terry.</p>
<p>pythons[3] select the <strong>element that start from</strong> 3</p>
<p><a href="http://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow">Python Lists tutorial</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>pythons[1:3]</code> yields <code>Eric, Terry</code> because </p>
<p>1 brings back the 2nd element in the list, because you start counting at 0. And 3 is the highest limit of the range, but is not inclusive so it brings back 2. That is why you get <code>Eric, Terry</code>.</p>
</div>
<span class="comment-copy">well if your so sure that this is a duplicate why didn't you do your research....</span>
<span class="comment-copy">@KDawG:  It is difficult to search for slice notation when you don't know it's called slice notation.</span>
<span class="comment-copy">Indiana University's crappy Intro to Programing class.</span>
