<div class="post-text" itemprop="text">
<p>I want to model a data with gaussian with parameters <code>(mu=1, sig=2, height=1)</code> and pass initial parameters <code>x0 = (0.8, 0.8, 0.9)</code>. </p>
<p>I am wondering  how does the optimizer knows the order of parameters. I could have taken the parameters as (mu,height,sig) or in any other order.</p>
<h2>Edit:</h2>
<p>Gaussian model (mu=1,sig=1.5,height=0.8)<br/>
Initial parameters passed x0=(0.8,0.8,0.8)
How can I be sure that the optimizer understands it as (mu,sig,height) and not as (sig,mu,height)?</p>
</div>
<div class="post-text" itemprop="text">
<p>Function parameters have a positional behavior by default and you need to inform them in the same order of the definition.</p>
<pre><code>def myFunc( name, age ):
    print "Name: ", name
    print "Age ", age

func("myName", 30)
</code></pre>
<p>If you want you can pass the arguments without a specific order but you will have to use thier name example:</p>
<pre><code>def myFunc( name, age ):
    print "Name: ", name
    print "Age ", age

func(age=30, name="myName")
</code></pre>
<p>For more information please refer these <a href="http://www.tutorialspoint.com/python/python_functions.htm" rel="nofollow">link</a></p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li><p>Check the function's help:</p>
<p>help(function)</p></li>
<li><p>Read the source</p></li>
<li><p>Read up on Python's Call semantics: <a href="http://docs.python.org/3/reference/expressions.html#calls" rel="nofollow">http://docs.python.org/3/reference/expressions.html#calls</a></p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>The order in which function parameters are passed is only ever <em>not</em> known when the function is defined with <code>**kwargs</code> (unnamed keyword arguments -- the function then has a dict called <code>kwargs</code> that contains them, obviously unordered).</p>
<p>When the function is defined with named parameters, though, the <code>f(a=b, c=d)</code> syntax does not create a dict -- it simply assigns the values to the corresponding named parameters within the function.</p>
</div>
<span class="comment-copy">Read the source?</span>
<span class="comment-copy">It passes them in the same order you give them in the guess, and returns the optimized parameters still in the same order.  They are all handled and passed as tuples, which maintain their order.</span>
<span class="comment-copy">With respect to your edit, if you call your Gaussian model with three unnamed arguments, they'll be assigned in order to the named parameters given in the function definition.  See my comment at @Kobi's answer.</span>
<span class="comment-copy">This is true but it is the opposite of the question.  @gruangly has <code>def myFunc(name="", age=0)</code> and will call it as <code>myFunc("myName", 30)</code> without keyword names, but in the proper order.</span>
