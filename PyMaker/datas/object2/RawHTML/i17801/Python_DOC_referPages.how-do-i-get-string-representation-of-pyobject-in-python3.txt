<div class="post-text" itemprop="text">
<p>I am debugging Python source code (CPython 3.4). I'm receiving a PyObject*. I would like to <code>printf</code> it.</p>
<p>For example (from Objects/floatobject.c of Python 3.4 source code):</p>
<pre><code>PyObject *o_ndigits = NULL;
Py_ssize_t ndigits;

x = PyFloat_AsDouble(v);
if (!PyArg_ParseTuple(args, "|O", &amp;o_ndigits))
    return NULL;
</code></pre>
<p>How do I <code>printf</code> o_ndigits? It is almost same as this question: <a href="https://stackoverflow.com/questions/5356773/python-get-string-representation-of-pyobject">Python: get string representation of PyObject?</a>, but for Python3. With original solution, I got <code>"undefined reference to PyString_AsString"</code> error.</p>
</div>
<div class="post-text" itemprop="text">
<p>Both <code>PyObject_Repr</code> and <code>PyObject_ASCII</code> return a unicode <code>str</code> representation of the object. If your terminal doesn't use UTF-8, you probably want the ASCII escaped representation. Get the multibyte string with <code>PyUnicode_AsUTF8</code> or <a href="http://docs.python.org/3/c-api/unicode.html#PyUnicode_AsUTF8AndSize" rel="nofollow"><code>PyUnicode_AsUTF8AndSize</code></a>. The new implementation in 3.3 caches the UTF-8 byte string, so don't deallocate it after printing.</p>
<p>As to <code>PyString_AsString</code>, that became <code>PyBytes_AsString</code> or <code>PyBytes_AS_STRING</code> for the 3.x <code>bytes</code> type.</p>
</div>
