<div class="post-text" itemprop="text">
<p>I'm trying to make a dynamic module-loading system in python using the <code>imp</code> module. I have two files, <code>x.py</code> and <code>y.py</code>, and I want to load <code>y.py</code> from <code>x.py</code> and have <code>y.py</code> be able to access variables declared in <code>x.py</code>. Is this at all possible?</p>
<p>From a code point, this is what I have:</p>
<p><strong>x.py</strong></p>
<pre class="lang-py prettyprint-override"><code>import imp

global_var = 7
imp.load_source( 'y', 'y.py' )
print( global_var )
</code></pre>
<p><strong>y.py</strong></p>
<pre class="lang-py prettyprint-override"><code>global_var = 3
</code></pre>
<p>But I can't update <code>x.py</code>'s <code>global_var</code> from <code>y.py</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The module <code>x</code> and <code>y</code> have separated namespace. Changing module-level variable in <code>y</code> does not affect the namespace of <code>x</code> module.</p>
<p>How about following approach?</p>
<pre><code>import imp

global_var = 7
y = imp.load_source('y', 'y.py') # &lt;---
global_var = y.global_var        # &lt;---
print(global_var)
</code></pre>
<p><strong>UPDATE</strong> response to the comment.</p>
<p>You can use <a href="http://docs.python.org/3/library/functions.html#exec" rel="nofollow"><code>exec</code></a> or <a href="http://docs.python.org/2/library/functions.html#execfile" rel="nofollow"><code>execfile</code></a> (Python 2.x only). <strong>not recommended</strong>:</p>
<pre><code>global_var = 7
#execfile('y.py')   # Python 2.x
with open('y.py') as f:
    exec(f.read())
print(global_var)
</code></pre>
</div>
<span class="comment-copy">I also want to be able to access functions in <code>x</code> from <code>y</code> though.</span>
<span class="comment-copy">@RCHowe, How about define functions needed to be used in a separated module, and import that from <code>y</code> ?</span>
<span class="comment-copy">Yes, but I want the functions to be able to access other things in <code>x</code> as well; if I separated them out into another module <code>z</code> there would be the same problem getting things from <code>x</code> into <code>z</code>.</span>
<span class="comment-copy">@RCHowe, You can use something like <a href="http://docs.python.org/2/library/functions.html#execfile" rel="nofollow noreferrer"><code>execfile</code></a>. But I don't recommend it.</span>
<span class="comment-copy">@RCHowe, I updated the answer with the code that use <code>exec</code>/<code>execfile</code>. Check it out.</span>
