<div class="post-text" itemprop="text">
<p>I am trying to write a python program using tkinter that will constantly check for new </p>
<p>emails. The problem I am having is that currently, the email gets updated only when the user </p>
<p>hits a button because I don't want my program to run before the user enter the correct </p>
<p>username and password.</p>
<p>How do I make sure that the program does not check for new emails if the user has not </p>
<p>entered the correct data but at the same time to constantly check for new emails once the </p>
<p>user has entered the data</p>
<p>Below is a part of my code:</p>
<pre><code>    def printer(self):  
    self.mail=StringVar()
    self.username=self.userinput.get()
    self.MailPass=self.password.get()
    self.unread = int(feedparser.parse("https://" + self.username + ":" + self.MailPass +"@mail.google.com/gmail/feed/atom")["feed"]["fullcount"])    #gmail command
    self.mail.set("Unread Emails:"+str(self.unread))
    self.mail_label=Label(self.frame,textvariable=self.mail)
    self.mail_label.grid(row=2,column=0,sticky=W)


    return 

def showGUI(self):
    now=datetime.datetime.now()
    dhtreader.init()
    s = dhtreader.read(11,18)
    if s == None:
       s=(1,1)

    self.temp.set("Temperature:"+str(s[0])+" C")
    self.humidity.set("Humidity:"+str((s[1]))+"%")




    current_time = str(now.hour)+':'+str(now.minute)+':'+str(now.second)
    current_date=(str(now.month)+':'+str(now.day)+':'+str(now.year))
    self.time1.set("Time:"+current_time)
    self.date.set("Date:"+current_date)

    self.frame.after(100,self.showGUI)


def main():

root=Tk()
app=GUI(master=root)
app.showGUI()   
root.title('Controller GUI')
root.mainloop()



if __name__=='__main__':
    main()
</code></pre>
<p>printer is the method that is executed when the button is pushed. showGUI is where all the updating happens.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not 100% sure what you're asking, so I'll answer all the possibilities I can think of.</p>
<p>Just call <code>self.frame.after(0, self.showGUI)</code> or <code>self.showGUI()</code> at the end of <code>printer</code>, after the user has entered the username and password. Then it will start checking every 100ms, and never stop, which is exactly what you want.</p>
<p>If you don't want it to require a button press, instead can you trigger <code>printer</code> to run any time focus leaves the username or password fields, or every time the contents of either changes, etc.; then you just have to check that the username and password are valid, and only call <code>showGUI</code> if they are.</p>
<p>If you want the username and password to be stored between runs of the program, you need to write code that does that. For example, you can store them in <code>printer</code>, and load them (if present) in the same class's <code>__init__</code>. I assume you already know how to read and write files; if not, see <a href="http://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow">the tutorial</a>.</p>
</div>
<span class="comment-copy">calling self.frame.after(0, self.showGUI) or self.showGUI() at the end of printer freezes my program</span>
<span class="comment-copy">@user3064033: That sounds like a different problem. If <code>showGUI</code> does anything slow or blocking (like that <code>dhtreader.read(11, 18)</code> maybe?), you can't do it in the main thread without freezing up the GUI. No matter how you solve your original problem, you will end up with that new problem. If that's your problem, see <a href="http://stupidpythonideas.blogspot.com/2013/10/why-your-gui-app-freezes.html" rel="nofollow noreferrer">Why your GUI app freezes</a> for how to deal with it.</span>
