<div class="post-text" itemprop="text">
<p>On Python, suppose that I have a <strong>string</strong>, that represent a pattern of strings, like that:</p>
<pre><code>myString = "//command -name two -parent one [...]"
</code></pre>
<p>Where <code>[...]</code> means a sequence of <em>-arg</em> and <em>value</em>.</p>
<p><br/></p>
<p>How can I extract a specific content from the string? 
For example, I would like to extract the words:</p>
<pre><code>wordsExtracted = ['command', 'name', 'two', 'parent', 'one', ... ]
</code></pre>
<p>Where <code>...</code> means ... <em>you know what means!</em></p>
<p><br/>
I think the best way to retrieve that is using <strong>RegEx</strong>, right? <br/>
Another way is spliting using both '//' and '-', but I think this is not an ellegant way to do that.</p>
<p>So... How can I do what I want?</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm sure there are other solutions, but if you want to use regular expressions, a pattern like this would work</p>
<pre><code>\w+
</code></pre>
<p>This will match any sequence of one or more 'word' characters. (see the <a href="http://docs.python.org/2/library/re.html" rel="nofollow">official documentation</a> for a precise definition)</p>
<p>For example:</p>
<pre><code>import re
re.findall('\w+', myString)
=&gt; ['command', 'name', 'two', 'parent', 'one']
</code></pre>
<p>To handle any other special characters that might occur within the parameters, you might want to use something like this:</p>
<pre><code>[^\s/-]\S*
</code></pre>
<p>This will match any character that's not a whitespace character, hyphen, or forward slash, followed by zero or more non-whitespace characters.</p>
<p>For example:</p>
<pre><code>myString = "//command -name two -parent one-one foo@example.com"
re.findall('[^\s/-]\S*', myString)
=&gt; ['command', 'name', 'two', 'parent', 'one-one', 'foo@example.com']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Regular expressions are a possible solution, but I'd probably choose one of:</p>
<ul>
<li><a href="http://docs.python.org/3/library/shlex.html#module-shlex" rel="nofollow">http://docs.python.org/3/library/shlex.html#module-shlex</a></li>
<li><a href="http://docs.python.org/3/library/argparse.html#module-argparse" rel="nofollow">http://docs.python.org/3/library/argparse.html#module-argparse</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>import shlex
myString = "//command -name two -parent one [...]"
shlex.split(myString)
['//command', '-name', 'two', '-parent', 'one', '[...]']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>In [11]: myString = "//command -name two -parent one -foo bar"

In [12]: [re.sub(u'^[-/]*', '', x) for x in myString.split()]
Out[12]: ['command', 'name', 'two', 'parent', 'one', 'foo', 'bar']
</code></pre>
<p><code>import re</code> is needed.</p>
</div>
<span class="comment-copy">Maybe you mean something like <code>(?:your word)|(?:your_other_word)|(?:your_other_word)</code> or in that fashion.</span>
<span class="comment-copy">Maybe, but I don't want to limit the amount of words.</span>
<span class="comment-copy">Can't you just do <code>myString.split()</code>?</span>
<span class="comment-copy">Yes, but it comes with '//' and '-'. RegEx could say to me if the string follow the pattern.</span>
<span class="comment-copy">@Richard you can just generate a string based on that list with a simple split or loop (with certain rules).</span>
<span class="comment-copy">it fails if an argument value contains <code>-</code> for example. <code>-opt I-am-kent</code></span>
<span class="comment-copy">@Kent That's a fair point, though I'm not sure that that's a requirement. Nevertheless, I've included that as an alternative</span>
<span class="comment-copy">well, you fixed that <code>-</code> case. maybe I didn't make it clear in my last comment. the <code>\w</code> works great with the given example. however, it will fail if the value string contains <code>\W</code>, well <code>\s</code> in this case doesn't make sense, but we have still <code>-, :, .(dot)...</code> so I am not sure if <code>\w</code> is right for this problem.</span>
<span class="comment-copy">@Kent is right, for example, this not work with a email address as part of string. It just split after and before '@'.</span>
<span class="comment-copy">@Richard It would help if you specified a bit more about what exactly you wanted to match and what you didn't. However, see my updated answer for something that should work in most cases.</span>
<span class="comment-copy">Not even an simple example?</span>
