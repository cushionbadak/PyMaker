<div class="post-text" itemprop="text">
<p>What is the pythonic way to search through the given list <code>['a', 'b', 'c']</code> for the element <code>b</code> replace it and insert multiple items <code>b1, b2, b3</code> so that the list finally reads as <code>['a', 'b1', 'b2', 'b3', 'c']</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Using slice notation:</p>
<pre><code>&gt;&gt;&gt; lst = ['a', 'b', 'c']
&gt;&gt;&gt; i = lst.index('b') # This raises ValueError if there's no 'b' in the list.
&gt;&gt;&gt; lst[i:i+1] = 'b1', 'b2', 'b3'
&gt;&gt;&gt; lst
['a', 'b1', 'b2', 'b3', 'c']
</code></pre>
<p><strong>NOTE</strong> This changes only the first matching item.</p>
</div>
<div class="post-text" itemprop="text">
<p>Alternate approach: Using <a href="http://docs.python.org/2/library/itertools.html#itertools.chain.from_iterable" rel="nofollow"><code>itertools.chain.from_iterable</code></a></p>
<pre><code>&gt;&gt;&gt; b = ["b1", "b2", "b3"]
&gt;&gt;&gt; a = ['a', 'b', 'c']
&gt;&gt;&gt; a = [b if x=='b' else [x] for x in a] 
&gt;&gt;&gt; a
['a', ['b1', 'b2', 'b3'], 'c']
&gt;&gt;&gt; import itertools
&gt;&gt;&gt; list(itertools.chain.from_iterable(a))
['a', 'b1', 'b2', 'b3', 'c']
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">What should happen if <code>b</code> is present more than once?</span>
<span class="comment-copy">in my particular case its guaranteed that the items are unique</span>
<span class="comment-copy">@SteveP., See <a href="http://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer"><i>Lists</i> section from Python tutorial</a>.</span>
<span class="comment-copy">@SteveP., Because the <code>list.__setitem__ with slice object argument</code> is implemented that way. See <a href="http://hg.python.org/cpython/file/a3bdbe220f8a/Objects/listobject.c#l579" rel="nofollow noreferrer">hg.python.org/cpython/file/a3bdbe220f8a/Objects/â€¦</a></span>
<span class="comment-copy">Thanks, that's what I was looking for.</span>
<span class="comment-copy">To support a general case, single elements must be made iterable: <code>...else [x] for x in a</code>.</span>
<span class="comment-copy">Try <code>a = ['aaa', 'b', 'ccc']</code>, and you will see why @thg435 suggest <code>[x]</code>. (BTW, string objects are iterable.)</span>
