<div class="post-text" itemprop="text">
<p>I am new to <code>Python</code> and I have a String, I want to extract the numbers from the string.  For example:</p>
<pre><code>str1 = "3158 reviews"
print (re.findall('\d+', str1 ))
</code></pre>
<p>Output is <code>['4', '3']</code></p>
<p>I want to get <code>3158</code> only, as an Integer preferably, not as List. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can <code>filter</code> the string by <strong>digits</strong> using <code>str.isdigit</code> method,</p>
<pre><code>&gt;&gt;&gt; int(filter(str.isdigit, str1))
3158
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This code works fine. There is definitely some other problem:</p>
<pre><code>&gt;&gt;&gt; str1 = "3158 reviews"
&gt;&gt;&gt; print (re.findall('\d+', str1 ))
['3158']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your regex looks correct. Are you sure you haven't made a mistake with the variable names? In your code above you mixup <code>total_hotel_reviews_string</code> and <code>str</code>. </p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = "3158 reviews"
&gt;&gt;&gt; print re.findall("\d+", s)
['3158']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the format is that simple (a space separates the number from the rest) then</p>
<pre><code>int(str1.split()[0])
</code></pre>
<p>would do it</p>
</div>
<div class="post-text" itemprop="text">
<p>To extract a single number from a string you can use <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><code>re.search()</code></a>, which returns the first match (or <code>None</code>):</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; string = '3158 reviews'
&gt;&gt;&gt; int(re.search(r'\d+', string).group(0))
3158
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There may be a little problem with code from Vishnu's answer. If there is no digits in the string it will return ValueError. Here is my suggestion avoid this:</p>
<pre><code>&gt;&gt;&gt; digit = lambda x: int(filter(str.isdigit, x) or 0)
&gt;&gt;&gt; digit('3158 reviews')
3158
&gt;&gt;&gt; digit('reviews')
0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My answer does not require any additional libraries, and it's easy to understand. But you have to notice that if there's more than one number inside a string, my code will concatenate them together.</p>
<pre><code>def Search_number_String(String):
    index_list = []
    del index_list[:]
    for i, x in enumerate(String):
        if x.isdigit() == True:
            index_list.append(i)
    start = index_list[0]
    end = index_list[-1] + 1
    number = String[start:end]
    return number
</code></pre>
</div>
<span class="comment-copy">Output based on your code is <code>['3158']</code>.</span>
<span class="comment-copy">Not on my side :(</span>
<span class="comment-copy">Then you must not be running the code shown above!</span>
<span class="comment-copy">the fact that there is a 4 in your output but not in your input means you missed something else. the regex should be fine.</span>
<span class="comment-copy">Seeing this question after 3 years makes me smile, I got so many upvotes for a stupid question, and yes I was running the wrong code, but I didnt had time to tell that in comments at that time.</span>
<span class="comment-copy">Doesn't seem to work for Python 3, presumably (though I'm not 100% sure) because in Python 3 <code>filter</code> is a class and calling it like you did returns a <code>filter</code> object which is an iterable, and <code>int()</code> can't cast a filter object into an <code>int</code>. It seems to me that there is no elegant way (such as in your answer, without using regex) to do this is Python 3. Is there?</span>
<span class="comment-copy">@Ray I'm late here, but I bet other people will have this same problem. You can use <code>int(list(filter(str.isdigit, my_str))[0])</code> for example. If <code>filter</code> returns an iterable, you just have to work with it :)</span>
<span class="comment-copy">Adding to Juan's comment: <code>int(''.join(list(filter(str.isdigit, my_str))))</code> if you want ALL the numbers in the string instead of just the first.</span>
<span class="comment-copy">@apricity <code>list</code>is not needed: <code>int(''.join(filter(str.isdigit, 'test3246')))</code></span>
<span class="comment-copy">I'm not sure if this solution is good for the general case of number extraction. Consider using it on <code>"3158 reviews 3158asdf 4"</code>.</span>
<span class="comment-copy"><code>If the format is that simple</code> YESSS ... I was passing a wrong variable... BTW ... you told me a shortest solution .. thanks</span>
<span class="comment-copy">nice, though it only works if there is whitespace after the number ie for str1 = "3158 reviews" but not for str1 = "3158reviews"</span>
<span class="comment-copy">Why are you: <code>del index_list[:]</code>?</span>
<span class="comment-copy">I just want to make sure the index_list is empty</span>
