<div class="post-text" itemprop="text">
<p>I am working on a python script which encrypts text using 128-AES algorithm but i have a problem:  </p>
<p>Picture shows my script processes. This works fine the thing is in the decryption when i give wrong key output decimals goes out of range of ASCII, so program can't show any text at the output.<br/>
I expected a wrong text! Is it wrong with code or it should be like that?</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/2JAyK.jpg"/></p>
</div>
<div class="post-text" itemprop="text">
<p>That's normal, because AES (and most modern cryptosystems) is dealing with encrypting the actual byte values, not the ASCII values. With an incorrect key, the data won't be decrypted correctly, resulting in ranges outside of the normal ASCII values.</p>
<p>If you're looking for something that encrypts/decrypts ASCII, look into some of the "classic" ciphers: Caesar shift, vigenere, etc.</p>
</div>
<span class="comment-copy">A word of warning: doing your own AES implementation is potentially dangerous; even though the AES (and similar) algorithms are 100% open, implementations often have bugs, which may make decrypting the ciphertext without the key trivially easy. While this is an excellent learning project, you probably don't want to use your code to actually encrypt stuff.</span>
<span class="comment-copy">Will just add that the right term for the mentioned "classic" ciphers is <code>classical/polyalphabetic ciphers</code>.</span>
<span class="comment-copy">I used hex ASCII values because in almost every AES encryption references plaintext examples were like this:<code>5e390f7df7a69296a7553dc10aa31f6b</code> So i thought they might be ASCII values.</span>
<span class="comment-copy">That's because it's content-agnostic, so it deals in bytes (encrypting files, IO streams, etc), plus the references and (good) tutorials are also discussing the algorithm and low-level details. You can use the <code>unhexlify</code> and <code>hexlify</code> functions in the <code>binascii</code> library in Python to convert back and forth. <code>hex_plaintext = binascii.hexlify(message)</code> <a href="https://docs.python.org/3/library/binascii.html" rel="nofollow noreferrer">docs.python.org/3/library/binascii.html</a></span>
<span class="comment-copy">@CurtisMattoon Thank you it was so helpful. Could you recommend some good and high-level detailed references?</span>
