<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/16255477/how-to-turn-a-string-list-into-a-real-list">How to turn a 'string list' into a real list?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I have a problem, I can not read a CSV file containing a columns made by list of float.
This is the method I used to save the CSV. data is a list of tuples.</p>
<pre><code>df = pandas.DataFrame(data, columns=['ColA', 'ColB'])
df.to_csv(FILE, index=False, header=True)
</code></pre>
<p>In this way i get the following file in output, which is fine.</p>
<pre><code>ColA,ColB
"[1.5,2.5,3.5]",9
"[4.5,5.5,6.5]",9
"[3.5,1.5,8.5]",9
</code></pre>
<p>Now, when I try to load the file in this way</p>
<pre><code>df = pandas.read_csv(FILE)
mylist = []
for x in xrange(len(df['ColA'])):
    mylist.append(df['ColA'][x])
</code></pre>
<p>I get list of strings instead a list of lists. What am I doing wrong?</p>
<p>EDIT:
I do not think the comma is a problem. Look at this code.</p>
<pre><code>import pandas
FILE = 'file.csv'

listA = [[1.1, 1.2, 1.3], [2.1, 2.2, 2.3], [3.1, 3.2, 3.3]]
listB = [9.1, 9.2, 9.3]

data = map(lambda x, y: (x, y), listA, listB)
df = pandas.DataFrame(data, columns=['ColA', 'ColB'])
df.to_csv(FILE, index=False, header=True)

df = pandas.read_csv(FILE)
print df['ColA'][0], df['ColA'][0][0]
</code></pre>
<p>The output is <code>[1.1, 1.2, 1.3] [</code> instead of <code>1.1</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If all you need to know is how to go from strings to lists and strings to numerals please refer to this post <a href="https://stackoverflow.com/questions/16255477/how-to-turn-a-string-list-into-a-real-list">How to turn a 'string list' into a real list?</a> and the Python docs at <a href="https://docs.python.org/3/library/functions.html#float" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#float</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I don't know if CSV has a concept of complex objects such as lists. You can map your lists to strings by using <code>",".join(your_list)</code> given that you only use floats.</p>
<p>Mapping back the stored string that represents a list would be as simple as <code>retrieved_string.split(',')</code>.</p>
<p>You may want to consider a format that supports lists such as JSON, which is also more friendly (from my experience) when using python.</p>
</div>
<span class="comment-copy">You saved a string "[1.5,2.5,3.5]". So you get a string back :). You can use eval(""[1.5,2.5,3.5]""), but I hear it's bad practice.</span>
<span class="comment-copy">I guessed that was the error, but what I am passing is a list not a string. Should I specify the type in some way?</span>
<span class="comment-copy">I'm not sure if csv has a list concept that maps to a list in python. You could write the list as a <b>string</b> (real string, not in the form of <code>str(list)</code>) using <code>",".join(your_list)</code> and get it back using <code>retrieved_string.split(',')</code>, but you may never include anything containing commas in that list, since it'll ruin the mapping. If that's OK - that's a good solution. Have you considered using our lord and saviour JSON?</span>
<span class="comment-copy">Yes, that can be a solution since it is a list of float numbers. Thank you.</span>
<span class="comment-copy">I replied to you in the first post. However, the topic you linked can be useful.</span>
<span class="comment-copy">I see, it is clear now. You need to look at the Question I linked to indeed. The reason you get <code>[</code> instead of <code>1.1</code> is that <code>[</code> is the first character in the string. It is basically what you ask for by doing <code>df['ColA'][0][0]</code></span>
<span class="comment-copy">I did, in fact I solved by doing ast.literal_eval(df['ColA'][x] in a loop. Thanks.</span>
