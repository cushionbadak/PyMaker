<div class="post-text" itemprop="text">
<p>I'm trying to deploy a hello-world type app on Elastic Beanstalk. Just about everything seems to work, packages are installed, etc. up to the point where mod_wsgi attempts to retrieve the "application" object from wsgi.py. At that point, the following appears in the logs (once in the logs for each unsuccessfuly HTTP request):</p>
<pre><code>mod_wsgi (pid=6114): Target WSGI script '/opt/python/current/app/myapp/wsgi.py' cannot be loaded as Python module.
mod_wsgi (pid=6114): Exception occurred processing WSGI script '/opt/python/current/app/myapp/wsgi.py'.
Traceback (most recent call last):
   File "/opt/python/current/app/caserails/wsgi.py", line 20, in &lt;module&gt;
     application = get_wsgi_application()
   File "/opt/python/run/venv/lib/python2.7/site-packages/django/core/wsgi.py", line 14, in get_wsgi_application
     django.setup()
   File "/opt/python/run/venv/lib/python2.7/site-packages/django/__init__.py", line 18, in setup
     from django.utils.log import configure_logging
   File "/opt/python/run/venv/lib/python2.7/site-packages/django/utils/log.py", line 16, in &lt;module&gt;
     from logging import NullHandler  # NOQA
 ImportError: cannot import name NullHandler
</code></pre>
<p><a href="https://forums.aws.amazon.com/thread.jspa?threadID=165432&amp;tstart=0" rel="nofollow">Link to concurrent AWS Forum Post.</a></p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/library/logging.handlers.html#nullhandler" rel="nofollow">NullHandler</a> was introduced in version 2.7. Are you sure you are running 2.7 on your server?</p>
</div>
<div class="post-text" itemprop="text">
<p>After much trial and error, the (immediate) problem was solved by removing python <a href="https://pypi.python.org/pypi/logging" rel="nofollow">logging</a> from requirements.txt and rebuilding the environment.</p>
<p>I do not yet fully understand why this is a problem.  On my local machine, I'm able to install logging and run Django without error. I suspect as vikramls pointed out that something weird is happening in the intersection between mod_wsgi, the baselineenv in which mod_wsgi executes, and the virtualenv in which my app operates.</p>
<p>But, at least for now, I'm fixing this error by not including "logging" in requirements.txt when deploying Django 1.7 on Elastic Beanstalk.</p>
</div>
<div class="post-text" itemprop="text">
<p>I had similar problem and in my case the issue was that for some unrelated project I created logging.py file in home folder and when I ran something in home, it was importing this file instead of the real module.</p>
<p>You can check which file is being imported like this:</p>
<pre><code>import logging
print(logging.__file__)
</code></pre>
<p>I fixed it by deleting logging.py I created previously.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>NullHandler</code> is only available on Python version 2.7+. You could create the <code>NullHandler</code> yourself on an <code>ImportError</code>:</p>
<pre><code>import logging

try:
    from logging import NullHandler
except ImportError:
    class NullHandler(logging.Handler):
        def emit(self, record):
            pass

logging.getLogger(__name__).addHandler(NullHandler())
</code></pre>
<p>More information about <code>logging.NullHandler</code>: <a href="https://docs.python.org/3/library/logging.handlers.html#logging.NullHandler" rel="nofollow noreferrer">https://docs.python.org/3/library/logging.handlers.html#logging.NullHandler</a>.</p>
</div>
<span class="comment-copy">Sure is famous last words. . . But, I did put some syslog statements into my wsgi.py file to try and see this (e.g. syslog.syslog('sys.executable: {}'.format(sys.executable)); ), and when I run the python that it returns (e.g. -V) it says that my python executable is 2.7.5.</span>
<span class="comment-copy">Why does your traceback have <code>/opt/python/current/...</code> path and <code>/opt/python/run/venv/...</code> as well? Some sort of virtualenv misconfiguration?</span>
<span class="comment-copy">I <i>think</i> that all the different python-paths are an artifact of how AWS's EB environment sets up virtualenvs to run under mod_wsgi.  <a href="https://code.google.com/p/modwsgi/wiki/VirtualEnvironments" rel="nofollow noreferrer">Here is some documentation from Google on it.</a>.   There are three sources of code potentially in play. . . The AWS Elastic Beanstalk Baseline Environment (which shouldn't be being accessed here directly, but is instead the "environment" within which the mod_wsgi interpreter runs), the Virtual Environment (which is in venv), and my app (which is in current)</span>
