<div class="post-text" itemprop="text">
<p>I have JSON response object with string representing date and time:</p>
<pre><code>"event":{
    "type":"Type",
    "date-time":"\/Date(928142400000+0200)\/",
},
</code></pre>
<p>I am not sure:</p>
<ul>
<li>what format is that</li>
<li>how can I parse it in python app</li>
<li>how can I convert python date into this format</li>
</ul>
<p>Any suggestions?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>928142400000</code> is the time in milliseconds since the UNIX epoch, <code>+0200</code> is the timezone.</p>
<p>With the <a href="https://labix.org/python-dateutil#head-8bf499d888b70bc300c6c8820dc123326197c00f" rel="nofollow"><code>dateutil</code> library</a> or <a href="https://docs.python.org/3/library/datetime.html#timezone-objects" rel="nofollow"><code>datetime.timezone()</code> objects</a> you can model the timezone offset, the timestamp itself is parsable with <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.fromtimestamp" rel="nofollow"><code>datetime.datetime.fromtimestamp()</code></a>, provided you divide the value by 1000.0:</p>
<pre><code>import datetime
import re

timestamp_parse = re.compile(r'Date\((\d+)([+-]\d{4})\)')
timestamp, offset = timestamp_parse.search(datetime_value).groups()
tzoffset = datetime.timedelta(hours=int(offset[1:3]), minutes=int(offset[3:]))
if offset[0] == '-':
    tzoffset *= -1
tzoffset = datetime.timezone(tzoffset)
dt = datetime.datetime.fromtimestamp(int(timestamp) / 1000.0).replace(tzinfo=tzoffset)
</code></pre>
<p>The <a href="https://labix.org/python-dateutil#head-8bf499d888b70bc300c6c8820dc123326197c00f" rel="nofollow"><code>dateutil.tz.tzoffset()</code> object</a> version is similar:</p>
<pre><code>import datetime
import re
import dateutil.tz

timestamp_parse = re.compile(r'Date\((\d+)([+-]\d{4})\)')
timestamp, offset = timestamp_parse.search(datetime_value).groups()
tzoffset = int(offset[1:3]) * 3600 + int(offset[3:]) * 60
if offset[0] == '-':
    tzoffset *= -1
tzoffset = dateutil.tz.tzoffset(None, tzoffset)
dt = datetime.datetime.fromtimestamp(int(timestamp) / 1000.0).replace(tzinfo=tzoffset)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; import re
&gt;&gt;&gt; datetime_value = "/Date(928142400000+0200)/"
&gt;&gt;&gt; timestamp_parse = re.compile(r'Date\((\d+)([+-]\d{4})\)')
&gt;&gt;&gt; timestamp, offset = timestamp_parse.search(datetime_value).groups()
&gt;&gt;&gt; tzoffset = datetime.timedelta(hours=int(offset[1:3]), minutes=int(offset[3:]))
&gt;&gt;&gt; if offset[0] == '-':
...     tzoffset *= -1
... 
&gt;&gt;&gt; tzoffset = datetime.timezone(tzoffset)
&gt;&gt;&gt; datetime.datetime.fromtimestamp(int(timestamp) / 1000.0).replace(tzinfo=tzoffset)
datetime.datetime(1999, 5, 31, 10, 20, tzinfo=datetime.timezone(datetime.timedelta(0, 7200)))
</code></pre>
</div>
<span class="comment-copy">Maybe you can see what you are looking for <a href="http://stackoverflow.com/questions/13591858/how-to-parse-json-datetime-string-in-python">here</a>.</span>
<span class="comment-copy">there is a bracket left in answer.</span>
<span class="comment-copy">@MauroBaraldi: long since gone, thanks!</span>
