<div class="post-text" itemprop="text">
<p>I wrote script that checks dirs from Path and remove inaccessible dirs. Also i used snippet to run my script as admin. But when i check my Path after script execution - it's all the same. </p>
<pre><code>import os
import sys
import win32com.shell.shell as shell

if __name__ == "__main__":

    if os.name != 'nt':
        raise RuntimeError("This script is implemented only for Windows")

    ASADMIN = 'asadmin'

    if sys.argv[-1] != ASADMIN:
        script = os.path.abspath(sys.argv[0])
        params = ' '.join([script] + sys.argv[1:] + [ASADMIN])
        shell.ShellExecuteEx(lpVerb='runas', lpFile=sys.executable, lpParameters=params)
        print("I am root now")

    paths = os.environ.get('Path').split(';')
    accessible_paths = []
    for path in paths:
        if os.access(path, os.R_OK):
            accessible_paths.append(path)

    new_path = ';'.join(accessible_paths)
    os.environ['Path'] = new_path

    print(new_path)
    print(new_path == os.environ['Path'])
</code></pre>
<p>So how can i actually change environment variable by Python script ?</p>
</div>
<div class="post-text" itemprop="text">
<p>According to <a href="https://docs.python.org/3/library/os.html?highlight=os.putenv#os.putenv" rel="nofollow noreferrer">documentation</a>, setting environment variables the way you do it calls <code>os.putenv()</code>, but description of this function is not clear. Indeed, it is said the following:</p>
<blockquote>
<p>Such changes to the environment affect subprocesses started with os.system(), popen() or fork() and execv().</p>
</blockquote>
<p>So I'm not sure that <code>os.environ</code> is designed to do what you expect. This is somewhat confirmed by <a href="https://stackoverflow.com/questions/5971312/how-to-set-environment-variables-in-python">the following question</a>, where answer only indicates that <em>child</em> processes will be affected by this change...</p>
</div>
<span class="comment-copy">The initial system environment variables are loaded by the session manager (smss.exe) from the registry key <code>HKLM\System\CurrentControlSet\Control\Session Manager\Environment</code>. winlogon.exe also merges a per-user <code>PATH</code> that's loaded from the user's <code>HKCU\Environment</code> key.</span>
