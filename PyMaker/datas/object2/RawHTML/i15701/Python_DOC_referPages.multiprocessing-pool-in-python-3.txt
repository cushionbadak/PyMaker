<div class="post-text" itemprop="text">
<p>I had a scripts working in Python 2 and I am trying to make it work in Python 3.</p>
<p>One thing I stumbled upon and have no idea about how to solve is the fact that the get() method in the class Applyresult() seems to throw now:</p>
<p>In Pycharm the Traceback is:</p>
<pre><code>Traceback (most recent call last):
  File "C:\Program Files (x86)\JetBrains\PyCharm Community Edition 3.4.1\helpers\pydev\pydevd.py", line 1733, in &lt;module&gt;
    debugger.run(setup['file'], None, None)
  File "C:\Program Files (x86)\JetBrains\PyCharm Community Edition 3.4.1\helpers\pydev\pydevd.py", line 1226, in run
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "C:\Program Files (x86)\JetBrains\PyCharm Community Edition 3.4.1\helpers\pydev\_pydev_execfile.py", line 38, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc) #execute the script
  File "D:/SRC/CDR/trunk/RegressionTests/ExeTests/pyQCDReg_Launcher.py", line 125, in &lt;module&gt;
    result_list = ar.get()
  File "C:\Python33\lib\multiprocessing\pool.py", line 564, in get
    raise self._value
TypeError: can't use a string pattern on a bytes-like object
</code></pre>
<p>The line offending is in pool.py:</p>
<pre><code>def get(self, timeout=None):
    self.wait(timeout)
    if not self.ready():
        raise TimeoutError
    if self._success:
        return self._value
    else:
        raise self._value    // This is the line raising the exception
</code></pre>
<p>It is called from the following line in my script:</p>
<pre><code>pool = Pool(processes=8)
ar = pool.map_async(run_regtest, command_list)
pool.close()
start_time = time.time()
while True:
    elapsed = time.time() - start_time
    if (ar.ready()): break
    remaining = ar._number_left
    print("Elapsed,", elapsed, ", Waiting for", remaining, "tasks to complete...")
    time.sleep(30)

pool.join()
ar.wait()
print("finished")
result_list = ar.get() // This is the offending line causing the exception
</code></pre>
<p>This script was working in Python 2 and I cannot understand why it would not be working in Python 3. Does anyone have an idea why ?</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/2/library/multiprocessing.html#multiprocessing.pool.AsyncResult.get" rel="nofollow">multiprocessing documentation</a>:</p>
<blockquote>
<p>get([timeout])</p>
<pre><code>Return the result when it arrives. If timeout is not None and
the result does not arrive within timeout seconds then
multiprocessing.TimeoutError is raised. If the remote call
raised an exception then that exception will be reraised by
get().
</code></pre>
</blockquote>
<p>It seems likely to me that your exception comes from <code>run_regtest</code>.</p>
<p>The exception you are getting is pretty common when you switch from Python 2 to Python 3. Many functions in the standard library (and other libraries) that used to return <code>string</code>s now return <code>bytes</code>. A <code>bytes</code> object <a href="https://docs.python.org/3/library/stdtypes.html#bytes-and-bytearray-operations" rel="nofollow">can be converted</a> to a string using <code>b.decode('utf-8')</code>, for example, you only need to know the encoding.</p>
</div>
<span class="comment-copy">Yep, the actual error is in <code>run_regtest</code>. Looks like the changes to unicode handling in Python 3 have broken that function.</span>
<span class="comment-copy">You were correct, I was using a reg exp on the non-regresssion test output which was in bytes before to decode it.</span>
