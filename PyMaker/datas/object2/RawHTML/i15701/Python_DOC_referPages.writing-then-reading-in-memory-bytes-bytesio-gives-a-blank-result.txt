<div class="post-text" itemprop="text">
<p>I wanted to try out the python BytesIO class.</p>
<p>As an experiment I tried writing to a zip file in memory, and then reading the bytes back out of that zip file. So instead of passing in a file-object to <code>gzip</code>, I pass in a <code>BytesIO</code> object. Here is the entire script:</p>
<pre><code>from io import BytesIO
import gzip

# write bytes to zip file in memory
myio = BytesIO()
g = gzip.GzipFile(fileobj=myio, mode='wb')
g.write(b"does it work")
g.close()

# read bytes from zip file in memory
g = gzip.GzipFile(fileobj=myio, mode='rb')
result = g.read()
g.close()

print(result)
</code></pre>
<p>But it is returning an empty <code>bytes</code> object for <code>result</code>. This happens in both Python 2.7 and 3.4. What am I missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to <a href="https://docs.python.org/3/library/io.html#io.IOBase.seek"><code>seek</code></a> back to the beginning of the file after writing the initial in memory file...</p>
<pre><code>myio.seek(0)
</code></pre>
</div>
<span class="comment-copy">Thanks! That was it!</span>
<span class="comment-copy">Buffers filled by matplotlib savefig() also do need this before they can be sent by an application server. Thanks for ending hours of research!</span>
