<div class="post-text" itemprop="text">
<p>Generalized Scenario is as follows:</p>
<pre><code>import unittest

class Test(unittest.TestCase):

    string1 = None
    def test1(self):
        self.string1 = "ValueAssignedFromMethod1"
        print "Test1 :"
        print self.string1

    def test2(self):
        print "\nTest 2 :" 
        print self.string1

if __name__ == "__main__":

        unittest.main()
</code></pre>
<p>Output of above Code is as follows:</p>
<pre><code>Test1 :
ValueAssignedFromMethod1

Test 2 :
None
</code></pre>
<p><strong>How can I use the Same "string1" variable across all methods &amp; if the value gets changed in one method it should be available in other methods too?</strong></p>
<p>In my Project I have following Scenario:[Using Python + Selenium Webdriver + Page Object Pattern + UnitTest Library]</p>
<pre><code>class Test(unittest.TestCase):


    def redirectToFalconHostUI(self):
        #Start GOOGLE CHROME Browser
        self.browser = webdriver.Chrome(executable_path='E:\\chromedriver.exe')

        #Navigate to Website URL
        Site_Home = Home(self.browser)
        Site_Home.navigate()


    def testloginToWebsite(self):
        #Get Logged in the Falcon Web UI
        loginPage = Site_Home.getLoginForm()
        loginPage.enter_email(SINGLE_LOGIN_USERNAME)
        loginPage.enter_password(SINGLE_LOGIN_PASSWORD)
        Profile_Home = loginPage.get_logged_into_Site()

    def testProfilePageSection(self):
        Profile_home.go_to_Section1()
</code></pre>
<p>How can I get the current state of Browser's Webdriver in all next unittest method.</p>
<p>The page objects set in one method not available in next methods.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assign the variable in a <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.setUp" rel="nofollow">setUp</a> method. This will do the initialization before each test case is run.</p>
<pre><code>import unittest

class Test(unittest.TestCase):

    def setUp(self):
        self.string1 = "ValueAssignedFromMethod1"

    def test1(self):
        print "Test1 :"
        print self.string1

    def test2(self):
        print "\nTest 2 :" 
        print self.string1

if __name__ == "__main__":
    unittest.main()
</code></pre>
<p>If you want the work to be done exactly once for the entire suite of tests, then you can use a <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.setUpClass" rel="nofollow">setUpClass</a>. You can assign the members for which you are interested to the class, and those will be accessible across methods.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>class Test(unittest.TestCase):
    Site_Home = None
    Profile_Home = None

    def redirectToFalconHostUI(self):
        #Start GOOGLE CHROME Browser
        self.browser = webdriver.Chrome(executable_path='E:\\chromedriver.exe')

        #Navigate to Website URL
        Test.Site_Home = Home(self.browser)
        Test.Site_Home.navigate()


    def testloginToWebsite(self):
        #Get Logged in the Falcon Web UI
        loginPage = Test.Site_Home.getLoginForm()
        loginPage.enter_email(SINGLE_LOGIN_USERNAME)
        loginPage.enter_password(SINGLE_LOGIN_PASSWORD)
        Test.Profile_Home = loginPage.get_logged_into_Site()

    def testProfilePageSection(self):
        Test.Profile_home.go_to_Section1()
</code></pre>
<p>By Having Class Level Objects it is accessible at all methods within the Same class. 
<a href="https://docs.python.org/2/tutorial/classes.html" rel="nofollow">https://docs.python.org/2/tutorial/classes.html</a></p>
</div>
<span class="comment-copy">These aren't really unit tests, and you aren't actually asserting anything in the test cases. So how are you determining that your code is running as expected?</span>
<span class="comment-copy">True, Just for displaying the scenario I have put basic blueprint. Will be adding the Assertions in the end of each method once the Structure gets finalized.</span>
<span class="comment-copy">Thanks for replying. For generalized case it will work, but in my required case. Objects get initialized within specific method which is used in next method. For that how can I proceed?</span>
<span class="comment-copy">How does it not work for your required case?</span>
<span class="comment-copy">Again, that's not how "unit tests" work. You should probably rethink how you are going to test the code. Alternatively, you could refactor things into some helper functions that do the setup. The best thing to do in unit tests is to simply <i>repeat</i> any initialization that you need to do. Each test should be standalone ideally.</span>
<span class="comment-copy">But for that case with each method, webdriver starts new browser instance. Which may not be ideal case.</span>
<span class="comment-copy">And Let say, I follow that approach, one single independent sequence of steps for Login(starting from URL navigation -&gt; Login), Again one single independent sequence of steps for Profile Page checks(starting from URL navigation -&gt; Login -&gt;Profile Page checks). That will (i) start new browser instance each time (ii) And if I wish to get phasewise information for one single sequence of steps then how will I get that one</span>
<span class="comment-copy">This won't guarantee that the order of your tests runs correctly, and so the initialization may not happen in the order you want it to. This is why you should use <code>setUpClass</code> instead of relying on test invocation order.</span>
