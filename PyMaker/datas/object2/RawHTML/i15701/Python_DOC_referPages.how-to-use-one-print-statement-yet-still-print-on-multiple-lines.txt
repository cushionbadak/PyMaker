<div class="post-text" itemprop="text">
<p>Is there a way I can use only one print statement, yet still  achieve the same effect as is in the code below?  I have attempted end statements to which either one don't work in this situation or, I am using incorrectly:</p>
<pre><code>print ('Deposit: ' + str(deposit))
print ('Withdrawl: ' +  str(withdrawl))
print ('Available amount: ' + str((deposit + withdrawl)//1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can use <code>\n</code> to insert a newline:</p>
<pre><code>print('Deposit: {}\nWithdrawl: {}\nAvailable amount: {}'.format(
    deposit, withdrawl, (deposit + withdrawl) // 1))
</code></pre>
<p>It's not necessarily better, though. IMHO using separate <code>print()</code> statements here is more readable.</p>
<p>You could make it slightly better with string concatenation:</p>
<pre><code>print(('Deposit: {}\n' +
    'Withdrawl: {}\n' +
    'Available amount: {}').format(deposit, withdrawl, (deposit + withdrawl) // 1)
</code></pre>
<p>Which, again, is not necessarily better IMHO.</p>
<p>I also used <a href="http://legacy.python.org/dev/peps/pep-3101/" rel="nofollow"><code>format</code></a> to improve readability; this removed the need for manual <code>str</code> calls, and is more readable (it can do a lot more, see the link).</p>
<blockquote>
<p>I have attempted end statements to which either one dont work in this situation or, I am using incorrectly</p>
</blockquote>
<p>I assume you used something like <code>print('foo', 'bar', end='\n')</code>, this won't work, because <code>end</code> is only appended to end <em>end</em> of all the arguments; the <code>sep</code> parameter is printed between the arguments (this defaults to a space).<br/>
So what you want to do, is: <code>print('foo', 'bar', sep='\n')</code></p>
<p>The downside of this, is that you will need 3 <code>.format</code> calls, or keep your "ugly" string concatenations.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you are using Python 3.x.  If so, then you can set the <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow"><code>sep</code> parameter</a> of <code>print</code> to <code>'\n'</code> in order to have each argument be separated by a newline:</p>
<pre><code>print('Deposit: ' + str(deposit), 'Withdrawl: ' +  str(withdrawl), 'Available amount: ' + str((deposit + withdrawl)//1), sep='\n')
</code></pre>
<p>Although this does make you line pretty long.  You might want to consider breaking it over two lines:</p>
<pre><code>print('Deposit: ' + str(deposit), 'Withdrawl: ' +  str(withdrawl),
      'Available amount: ' + str((deposit + withdrawl)//1), sep='\n')
</code></pre>
<hr/>
<p>Note that you could also just drop a few newline characters in select places.  This would allow you to write the above as simply:</p>
<pre><code>print('Deposit: ', deposit, '\nWithdrawl: ', withdrawl, '\nAvailable amount: ', (deposit + withdrawl)//1)
</code></pre>
<p>The nice thing about this solution is that it gets rid of all those calls to <code>str</code> (<code>print</code> automatically stringifies its arguments).</p>
<hr/>
<p>Last but not least, if you are actually using Python 2.x, then you can import the Python 3.x <code>print</code> function from <a href="https://docs.python.org/2/library/__future__.html" rel="nofollow"><code>__future__</code></a>.  Place this line at the top of your code:</p>
<pre><code>from __future__ import print_function
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use template rendering like:</p>
<pre><code>template = '''Deposit: {0}
Withdrawal: {1}
Available amount: {2}'''

deposit = 1000
withdrawal = 900

print template.format(deposit, withdrawal, (deposit + withdrawal)//1)
</code></pre>
<p>I however do not get the balance formula, can you explain?</p>
</div>
<div class="post-text" itemprop="text">
<p>Or you can use this</p>
<pre><code> print(('Deposit: %s\n' +
      'Withdrawl: %s\n' +
      'Available amount: %s') % (deposit, withdrawl, (deposit + withdrawl) // 1)
</code></pre>
</div>
<span class="comment-copy">what is the "//1" ?</span>
