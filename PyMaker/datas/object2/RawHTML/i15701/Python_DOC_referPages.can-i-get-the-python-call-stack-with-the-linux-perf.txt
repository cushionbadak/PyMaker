<div class="post-text" itemprop="text">
<p>For example,</p>
<pre><code>    def test():
        print "test"
</code></pre>
<p>I used <code>perf record -g -p $pid</code>, but the result was just all about <code>PyEval_EvalFrameEx</code>. How can I get the real name "test" or if can not by using perf?</p>
</div>
<div class="post-text" itemprop="text">
<p>You won't be able to do this with perf, that's specifically built to interface the Linux process model, decode those stack frames, etc.  It's doing what it's supposed to by telling you that it was executing the function PyEval_EvalFrameEx.  It would have to be extended with python-specific information to be able to actually decode Python's frame information, which isn't going to happen.  Unfortunately I haven't found a really good way to debug both Python and C/C++ modules easily.  It's generally pdb for one and gdb for the other.</p>
</div>
<div class="post-text" itemprop="text">
<p>As of 2018, <code>perf</code> simply doesn't have support for reading the Python stack frames (cf. <a href="https://mail.python.org/pipermail/python-dev/2014-November/136981.html" rel="nofollow noreferrer">a 2014 Python mailinglist discussion</a>).</p>
<p>Python 3.6 has some support for <a href="https://docs.python.org/3/howto/instrumentation.html" rel="nofollow noreferrer">Dtrace and Systemtap</a>.</p>
<p>An alternative to this is <a href="https://github.com/uber/pyflame" rel="nofollow noreferrer">Pyflame, a stochastic profiler for Python</a> that samples python call stacks via <code>ptrace()</code>. In contrast to Dtrace/Systemtap you don't need extra permissions and it also works with Python versions that are compiled without instrumentalization support.</p>
<p>When you use the <code>--threads</code> option with Pyflame you see Python lines that call into C/C++ extensions, although the stack-trace stops at the last Python frame. But perhaps this is sufficient for your use case.</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe the traceback module will do the trick for you:</p>
<p><a href="https://docs.python.org/2/library/traceback.html" rel="nofollow">https://docs.python.org/2/library/traceback.html</a>
<a href="https://docs.python.org/3/library/traceback.html" rel="nofollow">https://docs.python.org/3/library/traceback.html</a></p>
</div>
<span class="comment-copy">Why are you specifically requiring the use of <code>perf</code>?</span>
<span class="comment-copy">My python program will call some c++ extensions, so I use perf to check the call stack for c++ extensions, also I want to get the python.</span>
