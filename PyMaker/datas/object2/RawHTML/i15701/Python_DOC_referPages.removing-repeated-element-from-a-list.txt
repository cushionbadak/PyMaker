<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/26790493/remove-duplicate-and-original-from-list-python">Remove duplicate and original from list - python</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to remove the repeated elements from a list:</p>
<pre><code>li = [11, 11, 2, 3, 4]
</code></pre>
<p>I am trying in these ways:</p>
<p>Way 1:</p>
<pre><code>li = [x for x in li if x!=11]
</code></pre>
<p>Way 2:</p>
<pre><code>for x in range(0,len(li)):
    if x==11:
        li.remove(x)
</code></pre>
<p>Are there any built-in functions to do this job?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Edit:</strong></p>
<p>I'm sorry, I misread your question originally.</p>
<p>What you really want is <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a> and a list comprehension:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; li= [11, 11, 2, 3, 4]
&gt;&gt;&gt; [k for k, v in Counter(li).iteritems() if v == 1]
[3, 2, 4]
&gt;&gt;&gt;
</code></pre>
<p>This will only keep the items that appear exactly once in the list.</p>
<hr/>
<p>If order does not matter, then you can simply use <a href="https://docs.python.org/3/library/functions.html#func-set" rel="nofollow"><code>set</code></a>:</p>
<pre><code>&gt;&gt;&gt; li = [11, 11, 2, 3, 4]
&gt;&gt;&gt; list(set(li))
[3, 2, 11, 4]
&gt;&gt;&gt;
</code></pre>
<p>Otherwise, you can use the <a href="https://docs.python.org/3/library/stdtypes.html#dict.fromkeys" rel="nofollow"><code>.fromkeys</code></a> method of <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow"><code>collections.OrderedDict</code></a>:</p>
<pre><code>&gt;&gt;&gt; from collections import OrderedDict
&gt;&gt;&gt; li= [11, 11, 2, 3, 4]
&gt;&gt;&gt; list(OrderedDict.fromkeys(li))
[11, 2, 3, 4]
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">You say "remove the repeated elements from a list", but your first code removes all number 11s instead, and your second code won't change your list (because <code>x</code> is looping from 0 to <code>len(l1)-1</code> and that will never be 11 in your case).  What output are you expecting?</span>
<span class="comment-copy">Try this question: <a href="http://stackoverflow.com/q/7961363/3853289">stackoverflow.com/q/7961363/3853289</a></span>
<span class="comment-copy">My question is about removing all the repeated element '11',that is, there will be no element "11" after operation.</span>
<span class="comment-copy">wow, great. thank you. I have almost forget about set(). and +1 for the collections.OrderedDict() method.But my question is about removing all repeated element. That is, all "11".</span>
<span class="comment-copy">I'm not sure that either of these will give the OP what he wants, but it's hard to be sure because neither of the OP's codes seem to achieve what he says he wants.</span>
<span class="comment-copy">+1 for using OrderedDict to make sure if the OP wan't ordered (hashed) list.</span>
