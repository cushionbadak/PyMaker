<div class="post-text" itemprop="text">
<p>I want something like:</p>
<pre><code>for node_a in A_nodes:
    a_pos = A.node[node_a]['pos']
    link_len = math.sqrt((a_pos[0]-a_base_pos[0])**2+(b_pos[1]-b_base_pos[1])**2)
    if link_len &lt; th:
        A_nodes.remove(node_a)
</code></pre>
<p>How to meet my requirements?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try like this,</p>
<pre><code>myset = { item for item in myset if item&lt;tr}
</code></pre>
<p>Or,</p>
<pre><code>new_set = {}
for item in myset:
   if item &lt; tr:
      new_set.add(item)

myset = new_set
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/stdtypes.html#set.intersection" rel="nofollow"><code>set.intersection</code></a> and <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow"><code>range</code></a>:</p>
<pre><code>&gt;&gt;&gt; tr = 5
&gt;&gt;&gt; myset = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
&gt;&gt;&gt; myset.intersection(range(tr + 1))
{1, 2, 3, 4, 5}
&gt;&gt;&gt; myset &amp; set(range(tr + 1))
{1, 2, 3, 4, 5}
&gt;&gt;&gt;
</code></pre>
<p>As you can see, everything greater than <code>tr</code> is removed.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem you'll have with this is you can't modify a collection in place while you're iterating over it, so you'll need to filter and reassign to my_set instead. There are a number of ways you can do this.</p>
<p><strong>Example 1: Comprehension</strong></p>
<pre><code>my_set = {item for item in myset if item &lt; tr }
</code></pre>
<p><strong>Example 2: Filter</strong></p>
<pre><code>def my_filter(item):
    item &lt; tr

my_set = filter(my_filter, my_set)
</code></pre>
<p><strong>Example 2a: Filter with lambda</strong></p>
<pre><code>my_set = filter(lambda x: x &lt; tr, my_set)
</code></pre>
<p><strong>Example 3: For loop</strong></p>
<pre><code>new_set = {}
for item in my_set:
    if item &lt; tr:
        new_set.add(item)
my_set = new_set
</code></pre>
<p>So if we were to apply 2A to your code, roughly because you're not showing a lot of variable definitions:</p>
<pre><code>def calc_len(node):
    #return the length here using your calculation

A_nodes = filter(lambda x: calc_len(x) &lt; th, A_nodes)
</code></pre>
</div>
<span class="comment-copy">who downvote my question? why?</span>
<span class="comment-copy">waht the function will return ??</span>
<span class="comment-copy">@iCodez  the answerer asked me to change it so as to make it in details...</span>
<span class="comment-copy">this is a list, not a set. BTW, if there are many lines within the <code>if</code> block, the list comprehension may not be a good idea.</span>
<span class="comment-copy">Put your code in curly braces to make a set: <code>myset = {item for item in myset if item&lt;tr}</code>.</span>
<span class="comment-copy">You can replace the list comprehension with a generator expression (i.e., drop the square brackets). <code>set</code> doesn't need a list, just an iterable.</span>
<span class="comment-copy">the issue is I have many lines within the <code>if</code> block, not just <code>item&lt;tr</code>, how to deal with this?</span>
<span class="comment-copy">Edit your question to show what you mean by "many lines within the if block".</span>
