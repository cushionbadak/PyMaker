<div class="post-text" itemprop="text">
<p>Having been here: <a href="https://stackoverflow.com/questions/4015417/python-class-inherits-object">Python class inherits object</a>, and here <a href="https://stackoverflow.com/questions/100003/what-is-a-metaclass-in-python/6581949#6581949">What is a metaclass in Python?</a> I'm still unsure of how to get my code working. I'll be honest those explanations were a bit complicated for me. (BTW This is all in Python 3.4).</p>
<p>I'm trying to make Objects for my game in the form of creatures. Example: I want an Object called Dragon, but I want Dragon to inherit the class Entity, and the class Monster.</p>
<p>Here's what I've got:</p>
<pre><code>class Entity:
    id = 0
    xLocation= 0
    yLocation = 0
    name = ''
    description = ''
    def __init__(self, id, xLocation, yLocation, name, description):
        self.xLocation = xLocation
        self.yLocation = yLocation
        self.id = id
        self.name = name
        self.description = description


class Monster:
    life = 0
    pierce = 0
    slash = 0
    blunt = 0
    pierceReduction = 0
    slashReduction = 0
    bluntReduction = 0
    defenseBonus = 0
    score = 0
    def __init__(self, pierceReduction, bluntReduction, slashReduction, price, name, score):
        self.pierceReduction = pierceReduction
        self.bluntReduction = bluntReduction
        self.slashReduction = slashReduction
        self.price = price
        self.name = name
        self.score = score



class Structure:
    pass

Monster = Entity
Dragon = Monster
</code></pre>
<p>I don't know how I can give Dragon all of the values of both an entity and a Monster? Obviously setting Dragon directly to monster doesn't work.</p>
<p>*****I've now tried this*****:</p>
<p>class Structure:
    pass</p>
<p>class Dragon(Entity, Monster):
    pass</p>
<p>Dragon(10, 10, 10, 1000, 'Dragon', 1000)</p>
<p>The Dragon is saying it doesn't have all the parameters of both classes though? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can inherit from Entity class: <code>class Monster(Entity):</code> in declaration. You can find detailed information in <a href="https://docs.python.org/3/tutorial/classes.html?highlight=inheritance#inheritance" rel="nofollow">documentation</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Python can have classes inheriting from multiple parents. You can simply do:</p>
<pre><code>class Dragon(Monster, Entity):
    # class details
</code></pre>
<p>Just make sure that the resolution order between those classes is what you expect. Search for "python mro" for more details about it.</p>
</div>
<span class="comment-copy">Is a monster always a type of entity? And a dragon always a type of monster?</span>
<span class="comment-copy">If you are going to use inheritance, don't forget about calling the parent class method implementations. (<code>__init__</code> in particular)</span>
<span class="comment-copy">Dragons are always a monster and entity. Thank you very much viraptor and serkos! (My rep isn't high enough to upvote you both).  P.S. warvariuc I don't know what you mean.</span>
