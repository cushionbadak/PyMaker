<div class="post-text" itemprop="text">
<p>If I have a list such as : </p>
<pre><code>List = [12,6,3,5,1.2,5.5] 
</code></pre>
<p>Is there a way I can check if all the numbers are whole numbers? I tried something like</p>
<pre><code>def isWhole(d): 
if (d%1 == 0 ) : for z in List return true.
</code></pre>
<p>That is obviously terribly wrong. What can I do?</p>
</div>
<div class="post-text" itemprop="text">
<p>So you want integers and floats that are equal to integers?</p>
<pre><code>def is_whole(d):
    """Whether or not d is a whole number."""
    return isinstance(d, int) or (isinstance(d, float) and d.is_integer())
</code></pre>
<p>In use:</p>
<pre><code>&gt;&gt;&gt; for test in (1, 1.0, 1.1, "1"):
    print(repr(test), is_whole(test))


1 True # integer 
1.0 True # float equal to integer
1.1 False # float not equal to integer
'1' False # neither integer nor float
</code></pre>
<p>You can then apply this to your list with <a href="https://docs.python.org/3/library/functions.html#all"><code>all</code></a> and <a href="https://docs.python.org/3/library/functions.html#map"><code>map</code></a>:</p>
<pre><code>if all(map(is_whole, List)):
</code></pre>
<p>or a <a href="https://docs.python.org/3/reference/expressions.html#generator-expressions">generator expression</a>:</p>
<pre><code>if all(is_whole(d) for d in List):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simple solution for a list L:</p>
<pre><code>def isWhole(L):
    for i in L:
        if i%1 != 0:
            return False
    return True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>List = [12,6,3,5,1.2,5.5]</p>
<p>for i in List:</p>
<pre><code>if i%1 != 0 :
    print(False)
    break
</code></pre>
</div>
<span class="comment-copy">Maybe related: <a href="http://stackoverflow.com/q/707674/2596334">How to compare type of an object in Python?</a>.</span>
<span class="comment-copy">What is a whole number (programatically speaking)?  Are only <code>integers</code> whole numbers?  Then what about <code>bool</code> (<code>True</code> and <code>False</code>) which inherits from <code>int</code>?  Or is a whole number anything that <code>1</code> divides into evenly?  That would make <code>complex(1,0)</code> and <code>fractions.Fraction(1,1)</code> whole numbers.  Is that what you want?</span>
<span class="comment-copy">Voting to close as "Unclear what you are asking" because the definition of "whole number" is unspecified.</span>
<span class="comment-copy">Also, in mathematics whole numbers are not negative.  So should negatives be excluded?</span>
<span class="comment-copy">Okay thanks for this. I think this is the right direction i need to go. So using the "if all(map(is_whole, List)):" How do it print out  if the individual elements come out as True or False?</span>
<span class="comment-copy">Swap <code>if any(...):</code> for <code>list(...)</code> or a list comprehension, e.g. <code>[is_whole(d) for d in [12, 6, 3, 5, 1.2, 5.5]] == [True, True, True, True, False, False]</code>.</span>
<span class="comment-copy"><code>is_whole</code> evaluates <code>True</code> and <code>False</code> as whole numbers.  Should it?</span>
<span class="comment-copy">@StevenRumbalski that's a good question - as <code>bool</code> is a subclass of <code>int</code>, <code>isinstance(d, int)</code> evaluates <code>True</code> for <code>d = True</code>. If this were <i>not</i> the desired behaviour, an initial check <code>if not isinstance(d, bool)</code> would need to be added.</span>
<span class="comment-copy">That hasn't clarified anything (for one thing, whitespace is important in Python - it's unreadable in comments, especially when not even formatted <code>as code</code>). Why don't you make an actual effort - try some things in the interpreter (e.g. <code>sum</code>, as I've already mentioned)? Without seeing a minimal example of the code along with inputs and expected and actual outputs, how are we supposed to know what's wrong with whatever you have?</span>
<span class="comment-copy"><code>isWhole([complex(1,0), fractions.Fraction(1,1), True, False])</code> evaluates to <code>True</code>.  Should it?</span>
