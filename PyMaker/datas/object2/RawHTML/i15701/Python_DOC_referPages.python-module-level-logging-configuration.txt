<div class="post-text" itemprop="text">
<p>I have read from python docs <a href="https://docs.python.org/3/howto/logging.html#advanced-logging-tutorial" rel="nofollow">https://docs.python.org/3/howto/logging.html#advanced-logging-tutorial</a> that the best way to configure module level logging is to name the logger:</p>
<pre><code>logger = logging.getLogger(__name__)  
</code></pre>
<p>I the main application logging works fine:</p>
<pre><code>if __name__ == '__main__':  
    logging.config.fileConfig('logging.conf')  
    # create logger  
    logger = logging.getLogger(__name__)  
</code></pre>
<p>However in another module when I set the logger in the module scope:</p>
<pre><code>logger = logging.getLogger(__name__)  
</code></pre>
<p>the logger does not log anything. When I create the logger within a method logging works fine:</p>
<pre><code>class TestDialog(QDialog, Ui_TestDialog):  
def __init__(self, fileName, parent=None):  
    super(TestDialog, self).__init__(parent)  
    self.logger = logging.getLogger(__name__)  
    logger.debug("--_init_() "+str(fileName))  
</code></pre>
<p>Then I would need to use the self.logger.. formatting to get a logger in all methods in the class - which I have never seen before. I tried to set the logging.conf to log where the call is comming from:</p>
<pre><code>[loggers]
keys=root,fileLogger
...
[formatter_consoleFormatter]
format=%(asctime)s - %(module)s - %(lineno)d - %(name)s - %(levelname)s - %(message)s
datefmt=
</code></pre>
<p>However when the logger is set in the module scope logging still doesn't work even with this configuration.</p>
<p>I also tried:</p>
<pre><code>logger = logging.getLogger('root')
</code></pre>
<p>at the start of a module, again no logger. However If I use:</p>
<pre><code>logger = logging.getLogger('fileLogger')
</code></pre>
<p>at the start of a module, logging works fine and with config file above I can see which module the call is comming from.</p>
<p>Why is configuring logger using <strong>name</strong> not inheriting it's config from root?
Why does configuring using root not work while using fileHandler does, when both root and fileHandler are configured in the logging.conf file?</p>
</div>
<div class="post-text" itemprop="text">
<p>To avoid surprises, use <code>disable_existing_loggers=False</code> in your <code>fileConfig()</code> call, as documented in <a href="https://docs.python.org/3/howto/logging.html#configuring-logging" rel="nofollow">this section</a> of the docs.</p>
<p>You should never need to use a <code>self.logger</code> instance variable - module level loggers should be fine. </p>
</div>
<span class="comment-copy">side note: In order to get the "root" logger, do just  <code>logger = logging.getLogger()</code>.</span>
