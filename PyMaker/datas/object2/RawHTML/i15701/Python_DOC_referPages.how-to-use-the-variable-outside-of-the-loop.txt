<div class="post-text" itemprop="text">
<p>I'm working on my python script as I'm created the variable outside of the loop so I can generate the list of numbers. I have a problem with generating the list of numbers.</p>
<p>When I try this:</p>
<pre><code>def All_Channels(self):
     #Pull the data from the database
     channelList = list()
     database_path = 
xbmc.translatePath(os.path.join('special://userdata/addon_data/script.tvguide', 
'source.db'))

     if os.path.exists(database_path):
         #get the channels list
         cur.execute('SELECT channel FROM programs WHERE channel GROUP BY 
channel')
         for row in cur:
             channels = row[0].encode('ascii')
             channelList.append(channels)

             # set the channels text
             for index in range(0, CHANNELS_PER_PAGE):
                 channel = channelList[index]
                 channel_index = index

                  if channel is not None:
                      for channels_id in range(4127, 4547, 70):
                          for channels_start_end in range(69): 
                              ID = channels_id + channels_start_end
                          print ID
</code></pre>
<p>I will get the output like this:</p>
<pre><code>21:35:54 T:4724  NOTICE: 4545
21:35:54 T:4724  NOTICE: 4545
21:35:54 T:4724  NOTICE: 4545
21:35:54 T:4724  NOTICE: 4545
21:35:54 T:4724  NOTICE: 4545
21:35:54 T:4724  NOTICE: 4545
21:35:54 T:4724  NOTICE: 4545
</code></pre>
<p>The output should be like this:</p>
<p>I will get the output like this:</p>
<pre><code>21:35:54 T:4724  NOTICE: 4127
21:35:54 T:4724  NOTICE: 4197
21:35:54 T:4724  NOTICE: 4267
21:35:54 T:4724  NOTICE: 4337
21:35:54 T:4724  NOTICE: 4407
21:35:54 T:4724  NOTICE: 4477
21:35:54 T:4724  NOTICE: 4547
</code></pre>
<p>The problem are lie in this code:</p>
<pre><code>for channels_id in range(4127, 4547, 70):
    for channels_start_end in range(69): 
        ID = channels_id + channels_start_end
     print ID
</code></pre>
<p>Can you please tell me how I can generate the numbers I want outside of the loop and how I can use the variable outside of the loop?</p>
<p><strong>EDIT: When I try this:</strong></p>
<pre><code>for channels_id in range(4127, 4547, 70):
    print channels_id
</code></pre>
<p>I will get this:</p>
<pre><code>00:30:28 T:6972  NOTICE: 4127
00:30:28 T:6972  NOTICE: 4197
00:30:28 T:6972  NOTICE: 4267
00:30:28 T:6972  NOTICE: 4337
00:30:28 T:6972  NOTICE: 4407
00:30:28 T:6972  NOTICE: 4477
</code></pre>
<p>There are one value that are missing which it is 4547.</p>
<p><strong>EDIT: *Update 1:</strong></p>
<p>When I try to use this:</p>
<pre><code># set the channels text
for index in range(0, CHANNELS_PER_PAGE):
    channel = channelList[index]
    channel_index = index

    for channels_id in range(4127, 4548, 70):
        ID = []
        if channel is not None:
           ID = channels_id
    print ID
    print channel
    self.getControl(ID).setLabel(channel)
</code></pre>
<p>Output:</p>
<pre><code>01:59:10 T:6768  NOTICE: 4547
01:59:10 T:6768  NOTICE: 4547
01:59:10 T:6768  NOTICE: 4547
01:59:10 T:6768  NOTICE: 4547
01:59:10 T:6768  NOTICE: 4547
01:59:10 T:6768  NOTICE: 4547
01:59:10 T:6768  NOTICE: 4547
</code></pre>
<p>It will not store the value outside of the loop as it will get the same value 7 in row. </p>
<p>I want to use the loop of <code>for channels_id</code> under the <code>for index</code> loop so I can then generating the list of values before I can use the control <code>self.getControl(ID).setLabel(channel)</code> to set the label using the variable <code>channel</code> for each value that I set in the label when I generating the values using the variable <code>ID</code>. I've been asking you how I can store the values outside of the loop for later use. If you can help, please update your code in your answer post.</p>
</div>
<div class="post-text" itemprop="text">
<p>You already <em>can</em> access the variable outside the loop. That's why it's printing out <code>4545</code>, instead of giving you an <code>UnboundLocalError</code> or other exception.</p>
<p>The problem is that "outside the loop" only happens once, with the last value from the loop. So, you set <code>ID</code>, then set it again, then set it again, 69 times, and then finally print the 69th value. If you want to print each of the 69 values, you have to do it each time through the loop. Instead of this:</p>
<pre><code>for channels_start_end in range(69): 
    ID = channels_id + channels_start_end
print ID
</code></pre>
<p>Do this:</p>
<pre><code>for channels_start_end in range(69): 
    ID = channels_id + channels_start_end
    print ID
</code></pre>
<p>Or, if you want to do something with all 69 values, you have to accumulate them all, e.g., by adding them to a list, so all 69 of them are available, instead of just the last one:</p>
<pre><code>IDs = []
for channels_start_end in range(69): 
    IDs.append(channels_id + channels_start_end)
print IDs
</code></pre>
<hr/>
<p>From your comments, it seems like your problem is even simpler. You don't want to print out all the values, only every 70th value. You're already got every 70th value in <code>channels_id</code>. So, just <code>print</code> that:</p>
<pre><code>for channels_id in range(4127, 4547, 70):
    for channels_start_end in range(69): 
        ID = channels_id + channels_start_end
    print channels_id
</code></pre>
<p>But really, you don't seem to be doing anything with that <code>ID</code> value, or doing anything useful with the inner loop at all; instead of generating and then ignoring 69 out of every 70 values, why not just not generate them in the first place? Like this:</p>
<pre><code>for channels_id in range(4127, 4547, 70):
    print channels_id
</code></pre>
<hr/>
<p>Your last problem is that the loop doesn't include <code>4547</code>.</p>
<p>That's because a Python <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-range" rel="nofollow"><code>range</code></a> only includes values <em>less than</em> the stop value, not <em>less than or equal to</em> it. For a simpler example:</p>
<pre><code>&gt;&gt;&gt; for i in range(0, 3, 1):
...     print i
0
1
2
</code></pre>
<p>Notice that it didn't print <code>3</code>.</p>
<p>So, you could use <code>range(4127, 4548, 70)</code> or <code>range(4127, 4617, 70)</code> (it's hard to know which one is more "natural" in your use case without understanding what that use case is) to get all the values you want.</p>
</div>
<span class="comment-copy">Declare ID outside of the nested for loop. That way it will be accessible</span>
<span class="comment-copy">@heinst: No, this isn't C; you don't "declare" variables in Python, you just assign to them, and only functions (and a few other things, like comprehensions) have scopes, not every suite.</span>
<span class="comment-copy">It's very hard to know exactly what you want when the code you show us can't be run because it's incomplete, and clearly couldn't be printing the output you're complaining about. Please read <a href="http://stackoverflow.com/help/mcve">minimal, complete, verifiable example</a> in the help.</span>
<span class="comment-copy">thank you very much for your help. I have got the list of values which is start from 4127 to count it up to 4547. I want to start with the value from 4127 to count it to 70 to get the next value 4197, then count it again another 70 to get the next value 4267 and so on. How I can do that?</span>
<span class="comment-copy">I want to generating the values 4127, 4197, 4267, 4337, 4407, 4477 and 4547 to get the ouput. Any idea how I can do that?</span>
<span class="comment-copy">@Mike: You're already generating those values, as <code>channels_id</code>, in the outer loop. The inner loop then generates values, as <code>ID</code>, for 4127-4196, 4197-4266, etc. If you don't want to print those <code>ID</code> values, don't print out <code>ID</code>, print <code>channels_id</code> (outside the inner loopâ€”or, better, just get rid of the inner loop, because you're not using it for anything at all).</span>
<span class="comment-copy">I have generating those values using the variable id <code>channels_id</code>, but there are one value that are missing which it is 4547. Please see the update code in my first post.</span>
<span class="comment-copy">@Mike: OK, that's because <code>range(start, stop, step)</code> includes all values <i>less than</i> <code>stop</code>; it never includes <code>stop</code> itself. For example: <code>print(list(range(0, 5, 1)))</code> will give you <code>[0, 1, 2, 3, 4]</code>, not <code>[0, 1, 2, 3, 4, 5]</code>.</span>
