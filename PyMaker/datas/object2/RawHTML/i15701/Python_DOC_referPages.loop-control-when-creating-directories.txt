<div class="post-text" itemprop="text">
<p>I asked the question before but it wasn't clear, I ll try this time to make it more clear. i am creating 66 directories, each directory has 19 sub-directories, inside those 19 (all will be named 1-19) sub-directories i am moving three files, two files are arbitrary the third file has data relying on the loop that it is, 4th loop will create a directory 4/ and contain a specific file that has 4 inside, etc.. I am trying to use break, continue statements to control the looping so that only one directory is created but 19 subdirectories are created with the correct data in that file, the name of the name of that file MUST be the same in every directory so I have to move them immediately during the loop so the data inside does not get overwritten , since I have everything in a for loop ranging from 1 to 20, it keeps on trying to create another main directory and it is saying that I already have created, here is the code I have:</p>
<pre><code>base_direct = '{}/'.format(dir_Name) #create the main directories so they are already there,

for x in range(1,20): #loop to create 19 subdirectories 
        if not os.path.exists(str(x)+'/'):os.mkdir(str(x)+'/') #create directories 1/ 2/ 3/ etc..
        else: continue
        shutil.copy(filename, str(x)) #copy file to the directories
        shutil.copy(filename1, str(x)) #copy second file
        frag = open("fragments_procs.in", 'w') #open a new file
        frag.write(str(x) + "\n" + str(20-x)) #file will read 1, 19, since it is on first loop and must be in 1/, second file will read 2 18 must be in 2/ etc...
        shutil.copy("fragments_procs.in", str(x)) #copy the input file into the numbered directory
        shutil.move(str(x), '{}/'.format(dir_Name)) #move 1/ -&gt; /dir_Name
        if not os.path.exists('{}/'.format(dir_Name)+str(x)):shutil.move(str(x), '{}/'.format(dir_Name)) #if dir_name/1/ exists continue to making dir_Name/2/
        else: continue


genFiles(dir_Name, filename, filenam1)
genfiles("Water-Water", "Water1", "Water0")
</code></pre>
<p>code is working and creating Water-Water/, but stops there and says Water-Water/1/ already exists</p>
<p>loop code:</p>
<pre><code>fileName = os.path.splitext(xyzfile)[0]
 for x in range(1,20):
     path = os.path.join(fileName, str(x))
     try:
         os.makedirs(path)
     except OSError as exception:
         if exception.errno != errno.EEXIST:
             raise

     shutil.copy(filename, os.path.join(path, filename))
     shutil.copy(filename1, os.path.join(path, filename1))
     with open(os.path.join(path, "fragments_procs.in"), 'w') as frag:
         frag.write(str(x) + "\n" +str(20-x))
             frag.flush()
             frag.close()

         subprocess.Popen(["sbatch", "/work/jobfile_fde", fileName,     "2"], cwd=path)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have several problems including not creating destination paths correctly and trying to write to the directory name instead of a file. Try using <code>os.path</code> instead of cooking up your own strings, it makes the program less confusing!</p>
<pre><code>for x in range(1,20): #loop to create 19 subdirectories
    path = os.path.join(dir_Name, str(x)) 
    os.makedirs(path, exist_ok=True) #create directories 1/ 2/ 3/ etc..
    shutil.copy(filename, os.path.join(path, filename))
    shutil.copy(filename1, os.path.join(path, filename1))
    with open(os.path.join(path, "fragments_procs.in"), 'w') as frag:
        frag.write(str(x) + "\n" + str(20-x)) #file will read 1, 19, since it is on first loop and must be in 1/, second file will read 2 18 must be in 2/ etc...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>While there seem to be multiple possible problems with your code (e.g., you never <code>close</code> the file, or even <code>flush</code> it, and yet you're trying to copy it, meaning you could easily get incomplete files, empty files, or even locking errors), I think the one you're asking about can be answered in one word: <a href="https://docs.python.org/3/library/os.html#os.makedirs" rel="nofollow"><code>makedirs</code></a>:</p>
<blockquote>
<p>since I have everything in a for loop ranging from 1 to 20, it keeps on trying to create another main directory and it is saying that I already have created</p>
</blockquote>
<p>If you call <code>os.makedirs('foo/bar/baz', exist_ok=True)</code>, that will create <code>foo</code> if and only if it doesn't exist, then create <code>foo/bar</code> if and only if it doesn't exist, then create <code>foo/bar/baz</code> if and only if it doesn't exist. Whether all 3 exist, just the first 2, or none of them, you'll get no error.</p>
<p>In Python 3.1 and early (including 2.7), there is no <code>exist_ok</code> parameter. But you will only get an error if all 3 directories exist; the fact that, e.g., <code>foo/bar</code> already exists is still fine.</p>
</div>
<span class="comment-copy">Please don't try and cram as much as possible onto each line. And using 9-character indents instead of the standard 4 makes it even worse, because it pushes even more code off the right edge of the screen, forcing us to use the horizontal scrollbar</span>
<span class="comment-copy">Also, we need a <a href="http://stackoverflow.com/help/mcve">minimal, complete, verifiable example</a>, rather than an overly-detailed but incomplete and non-runnable example, to actually debug your code instead of just guessing.</span>
<span class="comment-copy">fixed those, sorry for the over complication</span>
<span class="comment-copy"><a href="http://legacy.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">legacy.python.org/dev/peps/pep-0008</a></span>
<span class="comment-copy">last part is suppose to move 1/ 2/ 3/ into the dir_Name, but I see what you did with os.path, a lot more clean and more simple opening the new file inside the directory instead of having it everywhere</span>
<span class="comment-copy">@octain - got it! Yeah, just writing to the final location is <i>usually</i> what you want. It can be problematic if another peice of software is scanning the directories looking for information. but for the other 99.9% of the time, its fine.</span>
<span class="comment-copy">I am using python 2.7.6, when running it giving me a TypeError for 'exist_ok', I am assuming that the python is not up to date on my pc?</span>
<span class="comment-copy">@Octain - yeah, try <code>if not os.path.exists(path): os.makedirs(path)</code> instead.</span>
<span class="comment-copy">Was thinking about updating, but the HPC i run these calculations on, is not using any version higher than mine, for the sake of giving the sys admins for work to do, I did <code>try:os.makedirs(path) except OSError</code> method, worked perfect!</span>
<span class="comment-copy">I  added close.() after the files, but when only created one instance of it, I assumed that closing it will completely close the file when it comes to the second iteration of the loop</span>
<span class="comment-copy">@octain: But the second iteration of the loop is <i>too late</i> to close the file. You've already made a copy of whatever was in the fileâ€”which might not be your entire output, because you haven't done anything (like a <code>close</code>) to flush it before the copy. (Also, if you want to work with other Python implementations like Jython or IronPython, they aren't guaranteed to clean up garbage as soon as the last reference goes away, so you could end up with any number of files still hanging open at the same time.)</span>
<span class="comment-copy">@octain: More generally: It's easier to just always close your files (ideally with a <code>with</code> statement) than to try to guess when it is and isn't reasonable to leak them, since there's really never any benefit to leaking them.</span>
<span class="comment-copy">understand, I did that using makedirs, flush and close all files, worked perfectly, thank you for the clarification</span>
