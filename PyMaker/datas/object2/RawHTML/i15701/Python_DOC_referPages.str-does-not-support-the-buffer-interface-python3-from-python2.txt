<div class="post-text" itemprop="text">
<p>Hi have this two funtions in Py2 works fine but it doesn´t works on Py3</p>
<pre><code>def encoding(text, codes):
    binary = ''
    f = open('bytes.bin', 'wb')
    for c in text:
        binary += codes[c]
    f.write('%s' % binary)
    print('Text in binary:', binary)
    f.close()
    return len(binary)

def decoding(codes, large):
    f = file('bytes.bin', 'rb')
    bits = f.read(large)
    tmp = ''
    decode_text = ''
    for bit in bits:
        tmp += bit
        if tmp in fordecodes:
            decode_text += fordecodes[tmp]
            tmp = ''
    f.close()
    return decode_text
</code></pre>
<p>The console ouputs this:</p>
<pre><code>Traceback (most recent call last):
  File "Practica2.py", line 83, in &lt;module&gt;
    large = encoding(text, codes)
  File "Practica2.py", line 56, in encoding
    f.write('%s' % binary)
TypeError: 'str' does not support the buffer interface
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The fix was simple for me</p>
<p>Use </p>
<pre><code>f = open('bytes.bin', 'w')
</code></pre>
<p>instead of</p>
<pre><code>f = open('bytes.bin', 'wb') 
</code></pre>
<p>In python 3 <code>'w'</code> is what you need, not <code>'wb'</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2, bare literal strings (e.g. <code>'string'</code>) are <em>bytes</em>, whereas in Python 3 they are <em>unicode</em>. This means if you want literal strings to be treated as bytes in Python 3, you always have to explicitly mark them as such.</p>
<p>So, for instance, the first few lines of the <code>encoding</code> function should look like this:</p>
<pre><code>binary = b''
f = open('bytes.bin', 'wb')
for c in text:
    binary += codes[c]
f.write(b'%s' % binary)
</code></pre>
<p>and there are a few lines in the other function which need similar treatment.</p>
<p>See <a href="http://python3porting.com/bookindex.html">Porting to Python 3</a>, and the section <a href="http://python3porting.com/problems.html#bytes-strings-and-unicode">Bytes, Strings and Unicode</a> for more details.</p>
</div>
<span class="comment-copy">you need to cast to  <code>bytes</code> or open in "wt" mode if using python 3.4</span>
<span class="comment-copy">@PadraicCunningham <code>'w'</code> is enough.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/3/tutorial/…</a> - note changes from 2.x.</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/5471158/typeerror-str-does-not-support-the-buffer-interface">TypeError: 'str' does not support the buffer interface</a></span>
<span class="comment-copy"><code>f.write(text.translate(codes).encode())</code></span>
