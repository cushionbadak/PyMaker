<div class="post-text" itemprop="text">
<p>In Python, I'm trying to open a regedit Key to add String value to it. However, it's somehow not recognizing the <code>OpenKey()</code> or <code>ConnectRegistry</code> method.</p>
<pre><code>import winreg
import sys
#Create 2 keys with unique GUIDs as Names

KeyName1 = "AppEvents\{Key1}"
KeyName2 = "AppEvents\{Key2}"
KeyName1_Path = "C:\Install\Monitor\Path.asmtx"


winreg.CreateKey(winreg.HKEY_CURRENT_USER, KeyName1)
winreg.CreateKey(winreg.HKEY_CURRENT_USER,  KeyName2)

#Add String as Path
# aReg = ConnectRegistry(None,HKEY_CURRENT_USER) #NameError: name 'ConnectRegistry' is not defined

keyVal=OpenKey(winreg.HKEY_CURRENT_USER,r"AppEvents\{Key2}", 0,KEY_WRITE) ameError: name 'OpenKey' is not defined


SetValueEx(keyVal,"Path",0,REG_SZ, KeyName1_Path)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you have imported it with <code>import winreg</code> you need to refer to all methods within that name space using <code>winreg.xxxxxx</code>. </p>
<p>As such, you need to use <code>winreg.OpenKey</code> and <code>winreg.ConnectRegistry</code>.</p>
<p>Alternatively, you could do</p>
<pre><code>from winreg import CreateKey, OpenKey, ConnectRegistry, etc
</code></pre>
<p>This would then allow you to use <code>CreateKey</code>, etc without the need of the <code>winreg</code> prefix.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>OpenKey</code> function is located <em>inside</em> the <code>winreg</code> module.  Meaning, you need to prefix it with <code>winreg.</code> in order to access it:</p>
<pre><code>keyVal = winreg.OpenKey(winreg.HKEY_CURRENT_USER,r"AppEvents\{Key2}", 0,KEY_WRITE)
#        ^^^^^^^
</code></pre>
<p>The same thing goes for with <code>ConnectRegistry</code>, <code>SetValueEx</code>, and any other names you use from the module.  You can read about this behavior in the <a href="https://docs.python.org/3/reference/simple_stmts.html#import" rel="nofollow">docs</a>:</p>
<blockquote>
<p>If no other name is specified, and the module being imported is a top level module, the moduleâ€™s name is bound in the local namespace as a reference to the imported module</p>
</blockquote>
<p>As you can see, importing a module only makes the module available for use.  All of its contents (globals/functions/classes/etc.) are still retained inside module's namespace.</p>
<hr/>
<p>Alternately, you could import the names you plan to use directly:</p>
<pre><code>from winreg import CreateKey, OpenKey, SetValueEx
</code></pre>
<p>Then, you do not need to prefix them with <code>winreg.</code>.  But I would only recommend doing this when you are using just a few names.  Importing dozens of names like this leads to ugly code and a cluttered global namespace.</p>
</div>
<span class="comment-copy">well, I'm importing winreg. I don't see why I need to do winreg.OpenKey</span>
<span class="comment-copy">I tried from winreg import ..., however the compiler is saying "name winreg is not defined"</span>
<span class="comment-copy">Oh Nevermind, I'm already importing these functions in winreg. It's referring to a line that I'm using winreg.Method again</span>
