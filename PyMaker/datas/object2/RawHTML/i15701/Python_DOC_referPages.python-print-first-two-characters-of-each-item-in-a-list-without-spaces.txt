<div class="post-text" itemprop="text">
<p>Code so far:  </p>
<pre><code>fullname = "John Doe"
namelist = fullname.split()
for word in namelist:
    print word[:2].lower(),
</code></pre>
<p>This outputs:</p>
<pre><code>jo do
</code></pre>
<p>I want it to output:</p>
<pre><code>jodo
</code></pre>
<p>Any and all suggestions welcomed :)</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>print</code> "magic comma" always inserts spaces, so you can't do things this way.</p>
<p>You have three choices:</p>
<ol>
<li><a href="https://docs.python.org/2/library/stdtypes.html#str.join" rel="nofollow">Join</a> the words up into a string first, then print that string: <code>print ''.join(word[:2].lower() for word in namelist)</code>.</li>
<li><a href="https://docs.python.org/2/library/stdtypes.html#file.write" rel="nofollow">Write</a> directly to <a href="https://docs.python.org/2/library/sys.html#sys.stdout" rel="nofollow"><code>stdout</code></a> instead of using <code>print</code>: <code>sys.stdout.write(word[:2].lower())</code></li>
<li>Use <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow">Python 3-style <code>print</code></a>, which <em>can</em> do things this way. First, <code>from __future__ import print_function</code> at the top of your code. Then, <code>print(word[:2].lower(), end='')</code>.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>The comma creates a space.  Try creating a list comprehension and joining it with empty string:</p>
<pre><code>&gt;&gt;&gt; print "".join(word[:2].lower() for word in namelist)
jodo
</code></pre>
<p>To see how it's working in smaller steps:</p>
<pre><code>&gt;&gt;&gt; firsts = [word[:2].lower() for word in namelist]
&gt;&gt;&gt; firsts
['jo', 'do']
&gt;&gt;&gt; print "".join(firsts)
jodo
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; fullname = "John Doe"
&gt;&gt;&gt; words = fullname.lower().split()
&gt;&gt;&gt; words
['john', 'doe']
&gt;&gt;&gt; print("".join(x[:2] for x in words))
jodo
</code></pre>
<p>[:2] selects 1st two letter . <code>lower</code> converts them to lowercase.using <code>+</code> you can concatenate string.</p>
<p>python 2.x:</p>
<pre><code>&gt;&gt;&gt; print "".join(x[:2] for x in words)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow">print function from Python 3</a> has a parameter <code>sep</code> (for "separator") which can be set to a null string. Using that and using the <code>*</code> operator to specify passing in a variable number of arguments:</p>
<pre><code>from __future__ import print_function
fullname = "John Doe"
words = (word[:2].lower() for word in fullname.split())
print(*words, sep='')
</code></pre>
</div>
<span class="comment-copy">+1 for the Python 3-style <code>print</code>.</span>
<span class="comment-copy">@twasbrillig: Actually, I usually avoid it if I'm writing 2.x-specific code, because it tends to make people think I'm writing 2.x/3.x code and complain when it doesn't work in 3.x. Then again, I haven't written any new 2.x-specific code in a few years, soâ€¦</span>
<span class="comment-copy">For the record, <code>"A".join(myList)</code> is the reverse of <code>myString.split("A")</code>.</span>
<span class="comment-copy">Why are you explaining the part of the code he's already written, instead of the part you added to fix his problem?</span>
<span class="comment-copy">@abarnert now good :)</span>
<span class="comment-copy">any reason for downvoting????, if downvote plz provide reason so one should correct it</span>
<span class="comment-copy">This makes the code less general because it now only works for 2-word names, no more and no less.</span>
<span class="comment-copy">its not about general check OP what he asked for</span>
