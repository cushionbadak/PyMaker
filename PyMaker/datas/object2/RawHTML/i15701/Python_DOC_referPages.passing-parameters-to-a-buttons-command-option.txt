<div class="post-text" itemprop="text">
<p>How do I use a function with parameters for a button? </p>
<pre><code>from Tkinter import *
def function(x, y):
    x * y

root = Tk()
button_1 = Button(root, text='Times two numbers', command=function)
</code></pre>
<p>So how do I pass it? Would I:</p>
<pre><code>button_1 = Button(root, text='Times two numbers', command=function(z,v))
</code></pre>
<p>If that doesn't work can someone please explain how it works I saw people using <code>lambda</code> but I don't understand it. </p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can use a <code>lambda</code> for this:</p>
<pre><code>button_1 = Button(root, text='Times two numbers', command=lambda: function(z,v))
</code></pre>
<p><a href="https://docs.python.org/3/reference/expressions.html#lambda" rel="nofollow"><code>lambda</code></a> creates what is known as an <a href="http://en.wikipedia.org/wiki/Anonymous_function" rel="nofollow">anonymous function</a>.  It is equivalent to doing:</p>
<pre><code>def callback():
    function(z,v)
button_1 = Button(root, text='Times two numbers', command=callback)
</code></pre>
<p>except that the function is created inline.</p>
<hr/>
<p>Note that you cannot do:</p>
<pre><code>button_1 = Button(root, text='Times two numbers', command=function(z,v))
</code></pre>
<p>because <code>function(z,v)</code> is a valid function call and will be executed as such when Python interprets the above line.  So, <code>command</code> will be assigned to the return value of <code>function(z,v)</code>.</p>
</div>
<span class="comment-copy">where will you get the value of z, v?</span>
<span class="comment-copy">@RafaelBarros - I think that <code>z</code> and <code>v</code> are just placeholders for real arguments.  The OP was just giving an example.</span>
<span class="comment-copy">@iCodez makes sense.</span>
<span class="comment-copy">I now understand the lambda a bit more but didn't understand the second part, so I will use lambda thanks.</span>
<span class="comment-copy">The second part was just showing what the equivalent code would be using <code>def</code> instead of <code>lambda</code>.  Let me also explain why your current solution does not work...see my edit.</span>
