<div class="post-text" itemprop="text">
<p>I've been seeing code like this on the internet and in response to my questions in people's if statements. </p>
<pre><code>if (not (letter.lower() in word) or not(letter.lower() in guessed_letters)) and letter != ' ':
</code></pre>
<p>Could someone break that down? This is in the context of a raw input being compared to a phrase not given. </p>
</div>
<div class="post-text" itemprop="text">
<p>Let's start with the top:</p>
<pre><code>(not (letter.lower() in word) or not(letter.lower() in guessed_letters)) and letter != ' '
</code></pre>
<p>This is two terms separated by <code>and</code>:</p>
<pre><code>a = (not (letter.lower() in word) or not(letter.lower() in guessed_letters))
b = letter != ' '
result = a and b
</code></pre>
<p>The meaning of that <code>b</code> is pretty obvious, so let's give it a better name:</p>
<pre><code>a = (not (letter.lower() in word) or not(letter.lower() in guessed_letters))
not_space = letter != ' '
result = a and not_space
</code></pre>
<p>But you're still mystified by that <code>a</code>, so let's break it down the same way. It's a parenthesized expression, which is the same as what's inside the parens, so let's skip that part and go right to:</p>
<pre><code>x = not (letter.lower() in word)
y = not (letter.lower() in guessed_letters)
a = x or y
</code></pre>
<p>These should now be small enough to parse in your head. If not, you can go one step furtherâ€”but note that you can also just add some <code>print</code> calls, like <code>print(letter, x, y)</code> and run the program and see if that helps.</p>
<p>Anyway, let's give them names:</p>
<pre><code>not_found = not (letter.lower() in word)
not_guessed = not (letter.lower() in guessed_letters)
new_letter = not_found or not_guessed
not_space = letter != ' '
result = new_letter and not_space
</code></pre>
<p>And now you're done: you're checking that the letter is a new letter (neither in the word, nor guessed), and not a space.</p>
<hr/>
<p>If you wanted to take this to the limit, it would look something like this:*</p>
<pre><code>a1a1a1a = letter.lower
a1a1a1 = a1a1a1a()
a1a1a = a1a1a1 in word
a1a1 = (a1a1a)
a1a = not a1a1
a1b1a1a = letter.lower
a1b1a1 = a1b1a1a()
a1b1a = a1b1a1 in guessedletters
a1b1 = (a1b1a)
a1b = not a1b1
a1 = a1a or a1b
a = (a1)
b = letter != ' '
result = a and b
</code></pre>
<p>And then you can go step by step, eliminating the ones that do nothing, giving intermediate names to the meaningful ones from the lowest level up, and so on.</p>
<p>But in real life, you'd never go that far unless you were trying to interpret code by hand to understand the language definition or something.</p>
<p><sub>* In fact, if you really want to break it down exactly the way Python does, you can ask Python to do it for you, by using the <a href="https://docs.python.org/3/library/ast.html" rel="nofollow"><code>ast</code></a> module.</sub></p>
</div>
<div class="post-text" itemprop="text">
<p>try like this:</p>
<pre><code>if letter.lower() not in word or letter.lower() not in guessed_letters and letter != ' ':
</code></pre>
<p>why unnwanted brackets, if can handle the statment</p>
</div>
<div class="post-text" itemprop="text">
<p>if either the lowercase letter is not in the word or the lowercase letter is not in the list of guessed numbers, and the letter is not a space, then do something ... it is likely for a hangman type game</p>
<p>usually the something you do is add it to the list of guessed letters (at a minimum)</p>
</div>
<span class="comment-copy">Which part specifically do you have a question about?</span>
<span class="comment-copy">"Different than taught" only has meaning if you tell us what you were taught.</span>
<span class="comment-copy">I agree that this is more pythonic ... but Im not sure it answwers his question (to be honest Im not entirely sure what the question is) +1 none the less</span>
<span class="comment-copy">i am also not sure, just formated it in pythonic way</span>
<span class="comment-copy">I disagree that it's Pythonic. "Explicit is better than implicit".</span>
<span class="comment-copy">Taking out the brackets changes the meaning. <code>A or B and C</code> is not the same as <code>(A or B) and C</code>.</span>
<span class="comment-copy">@CharlesDuffy - seems explicit to me, but I'd favor <code>letter.lower() not in word + guessed_letters + [' ']</code>, or init guessed_letters to [' '] and do .<code>letter.lower() not in word + guessed_letters</code>.</span>
