<div class="post-text" itemprop="text">
<p>the function <code>tornado.ioloop.PeriodicCallback(callback, callback_time, io_loop=None)</code> says I couldn't add arguments for my <code>callback</code> function, but what if I really need to call <code>callback</code> with arguments? Is there a work around?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, use a lambda or functools.partial. Docs for the partial function are <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer">here</a>.</p>
<pre><code>from tornado import ioloop

def my_function(a, b):
    print a, b

x = 1
y = 2 

periodic_callback = PeriodicCallback(
    lambda: my_function(x, y),
    10)

ioloop.IOLoop.current().start()
</code></pre>
<p>In this example, if you change x or y, the change will be reflected in the next call to "my_function". On the other hand if you "import functools" and:</p>
<pre><code>periodic_callback = PeriodicCallback(
    functools.partial(my_function, x, y),
    10)
</code></pre>
<p>Then later changes to the value of x and y will <em>not</em> appear in "my_function". And finally, you could just do:</p>
<pre><code>def my_partial():
    my_function(x, y)

periodic_callback = PeriodicCallback(
    my_partial,
    10)
</code></pre>
<p>This behaves the same as the "lambda" expression earlier.</p>
</div>
