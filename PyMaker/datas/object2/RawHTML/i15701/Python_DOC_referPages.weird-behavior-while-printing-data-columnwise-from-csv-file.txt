<div class="post-text" itemprop="text">
<p>I'm trying  to print the data columwise from my csv file.</p>
<pre><code>column, column2, column3, column4, column5, column6, column7 = [], [], [], [], [], [], [] 
for each in data:
    column.append(each[0])
    column2.append(each[1])
    column3.append(each[2])
    column4.append(each[3])
    column5.append(each[4])
    column6.append(each[5])
    column7.append(each[6])            
print column
print column2
print column3
print column4
print column5
print column6
print column7
</code></pre>
<p>This gives correct prints where I can display data columnwise but when I tried:</p>
<pre><code>c=[]
for i in xrange(7):
    for each in data:
        c.append(each[i])
    print c
    c = []
</code></pre>
<p>It printed just 1st column correctly rest all columns are blank!
Where exactly I'm going wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem with your code is that <code>data</code> is a one-shot <a href="https://docs.python.org/2/tutorial/classes.html#iterators" rel="nofollow noreferrer">iterator</a> (whether a <code>csv.reader</code> or something you wrote yourself). Once you get to the last row at the end of the file the first time, <code>for each in data:</code> is just going to give you all the rows after the last row, of which there are none.</p>
<p>You <em>could</em> fix this by closing the file, reopening it, and wrapping another reader around it. Or by calling <a href="https://docs.python.org/2/library/stdtypes.html#file.seek" rel="nofollow noreferrer"><code>f.seek(0)</code></a> on the file. Or by reading the whole file into something repeatably-iterable like a list of strings, and iterating that. But really, none of those are very good solutions.</p>
<hr/>
<p>A better idea is to just reverse your loops:</p>
<pre><code>c=[[] for _ in xrange(7)]
for each in data:
    for i in xrange(7):
        c[i].append(each[i])
for col in c:
    print col
</code></pre>
<p>Now it's equivalent to your original code, except without all that repetition.</p>
<hr/>
<p>An even better idea is to just use <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> to transpose your data, as in <a href="https://stackoverflow.com/a/26897637/908494">Joran Beasley's answer</a>:</p>
<pre><code>for col in zip(*data):
    print col
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>columns = zip(*data)
</code></pre>
<p>thats all you should need </p>
<pre><code>for column in zip(*data):
   print column
</code></pre>
</div>
<span class="comment-copy">+1 for actually addressing the issue OP was having ... something I need to work on doing more of</span>
<span class="comment-copy">ohh so for each column, zip(*data) goes to 1st row again and evaluates the values for that column?</span>
<span class="comment-copy">@tryPy: <code>zip</code> takes any iterable arguments (in this case, <code>*data</code> expands each row into an argument) and gives you a new iterable, giving you the first element from each argument, then the second from each argument, etc. It can be hard to wrap your head around, but it's worth trying, because it's incredibly useful. Try printing <code>zip([1,2,3], ['a','b','c'])</code>. And then try storing the result of that in <code>zipped</code> and printing <code>zip(*zipped)</code>.</span>
<span class="comment-copy">@tryPy: Under the covers, it's basically doing the same thing as the explicit loop above. (Not exactly the same, but close enough for getting the basic concept. The <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">3.x version</a> explains exactly how it works in the docs, with equivalent Python code, but the 3.x version is also a little more complicated, so that may not help.)</span>
<span class="comment-copy">@abarnert Thanks a ton</span>
