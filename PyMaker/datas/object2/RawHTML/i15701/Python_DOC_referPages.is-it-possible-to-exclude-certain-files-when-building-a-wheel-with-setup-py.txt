<div class="post-text" itemprop="text">
<p>I know you can exclude certain packages using:</p>
<pre><code>packages = find_packages("src", exclude=["test"]),
</code></pre>
<p>Is it also possible to exclude single python files?
I am building a binary wheel and want to exclude certain source files which I "cythonized" with a custom function:</p>
<pre><code>python cythonize bdist_wheel
</code></pre>
<p>At the moment I remove all python files which also have a .so library file after building the wheel with a custom script and I would like to do that with setup.py.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is a vague (IMO) article in py-docs <a href="https://docs.python.org/3/distutils/sourcedist.html#specifying-the-files-to-distribute" rel="noreferrer">"How to include/exclude files to the package"</a>. <strong>In two words</strong>: use combination of <a href="http://setuptools.readthedocs.io/en/latest/setuptools.html#using-find-packages" rel="noreferrer"><code>find_packages</code></a> and <a href="https://docs.python.org/3/distutils/commandref.html#sdist-cmd" rel="noreferrer"><code>MANIFEST.in</code></a></p>
<p><em>To check, what is in the package locally (before sending to PyPI), run <code>python setup.py sdist</code>, and then check the content of <code>./dist</code> folder (there should be tarball with your package).</em></p>
<h2>My use-cases</h2>
<h3>Ignore one file</h3>
<p>Add <code>MANIFEST.in</code> to the root of your package, and add these lines:</p>
<pre><code>exclude .travis.yml
exclude appveyor.yml
exclude data/private/file.env
</code></pre>
<p>This files won't be included into distribution package.</p>
<h3>Tests near sources</h3>
<p>If in your project test files are placed near the code (in other words, there is no separated directory <code>tests</code>), something like this:</p>
<pre><code>package1
├── src
│   ├── __init__.py
│   ├── __init__test.py
│   ├── mymod.py
│   ├── mymod_test.py
│   ├── typeconv.py
│   └── typeconv_test.py
│
├── LICENSE
└── README.rst
</code></pre>
<p>You could add this lines to your <code>MANIFEST.in</code>, and <code>setuptools</code> will ignore test files:</p>
<pre><code>global-exclude *_test.py
</code></pre>
<h2>See also</h2>
<ul>
<li><a href="https://stackoverflow.com/a/29978235/1115187">Exclude specific file // on SO</a></li>
<li><a href="https://stackoverflow.com/q/8556996/1115187">Exclude submodule, include data // on SO</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>setuptools.find_packages()</code> along with a <em>revision-control plugin</em> i.e. <code>setuptools-git</code>.</p>
<p>Here is some extracts from a <code>setup.py</code> projects setup to exclude the <code>tests</code> directory:</p>
<pre><code>from setuptools import setup, find_packages

setup(
    name=...
    ...
    packages=find_packages(exclude=["tests"]),
    setup_requires=[
        'setuptools',
        'setuptools-git',
        'wheel',
    ]
</code></pre>
<p>Other plugins like the one used above are available for <em>bzr</em>, <em>darcs</em>, <em>monotone</em>, <em>mercurial</em>, etc.</p>
<p>Tip:</p>
<p>Don't forget to clean your build directory before running: <code>python setup.py bdist_wheel</code></p>
</div>
<span class="comment-copy">There seems to be a bug-report on this, still open (Sept-2015): <a href="https://bitbucket.org/pypa/wheel/issues/99/cannot-exclude-directory" rel="nofollow noreferrer">bitbucket.org/pypa/wheel/issues/99/cannot-exclude-directory</a></span>
<span class="comment-copy">But the original question was <code>Is it possible to exclude single python files?</code> and you are talking about excluding a directory.</span>
<span class="comment-copy">@Palasaty, could you add similar criticism to my answer))) <a href="https://stackoverflow.com/a/45847842/1115187">stackoverflow.com/a/45847842/1115187</a></span>
<span class="comment-copy">python setup.py clean --all</span>
