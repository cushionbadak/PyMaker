<div class="post-text" itemprop="text">
<p><code>file1.py</code>:</p>
<pre><code>def test_globals():
    globals()['t']=5
</code></pre>
<p>in python3 repl:</p>
<pre><code>&gt;&gt;&gt; from file1 import *
&gt;&gt;&gt; test_globals()
&gt;&gt;&gt; t
Traceback ....
NameError: name 't' is not defined
&gt;&gt;&gt; def test_globals2(): #local context
        globals()['t'] = 5
&gt;&gt;&gt; test_globals2()
&gt;&gt;&gt; t
5
</code></pre>
<p>How to fix test_globals function to actually modify <code>globals()</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem with what you did is that <code>from file1 import *</code> didn't import <code>t</code> because it didn't exist. If you repeat the <code>import</code> line, it will work:</p>
<pre><code>&gt;&gt;&gt; from file1 import *
&gt;&gt;&gt; test_globals()
&gt;&gt;&gt; t
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 't' is not defined
&gt;&gt;&gt; from file1 import *
&gt;&gt;&gt; t
5
</code></pre>
<p>Another thing that would work:</p>
<pre><code>&gt;&gt;&gt; import file1 as f1
&gt;&gt;&gt; f1.t
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: 'module' object has no attribute 't'
&gt;&gt;&gt; f1.test_globals()
&gt;&gt;&gt; f1.t
5
</code></pre>
<p>However, if you're only after reloading a module (as you wrote in the comments), consider using <a href="https://docs.python.org/3/library/importlib.html#importlib.reload" rel="nofollow"><code>importlib.reload</code></a>.</p>
</div>
<span class="comment-copy">Generally, you <i>don't</i> want to do this.  Modifying the current module's globals is confusing enough.  Modifying <i>another</i> module's globals is way off the beaten path.  It's probably possible to accomplish in a non-portable way by inspecting the stack, etc, etc.  But before digging into it that deeply, you should probably ask whether this is really something you actually <i>need</i> to do... :-)</span>
<span class="comment-copy">ok, I want to do this to reload functions from changed modules to repl during interactive development process.</span>
