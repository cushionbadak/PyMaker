<div class="post-text" itemprop="text">
<p>Can somebody please help me with this? Here is what Grok Learning put:</p>
<p>You were working hard writing a letter to your penpal, only to realise that your dog has been "helping" and contributing to the letter too! You notice that every few lines starts with WOOF! and includes things you simply didn't write!</p>
<p>Write a program to read in lines from the file letter.txt and write out a new file, fixed.txt, which contains the only lines that do not start with WOOF!.</p>
<p>For instance, given the following letter.txt:</p>
<p><strong>My vegetable garden is growing really well!<br/>
WOOF! Let's play catch!<br/>
The tomatoes and cucumbers are nearly ready to eat.<br/>
How is your garden going?<br/>
WOOF! I better chase that possum!</strong></p>
<p>your program should create the file fixed.txt that contains:</p>
<p><strong>My vegetable garden is growing really well!<br/>
The tomatoes and cucumbers are nearly ready to eat.<br/>
How is your garden going?</strong></p>
<p>My current code is (I will keep on trying, and editing. Will keep you guys posted):</p>
<pre><code>open("letter.txt").read()
line = letter.txt.split()
if line.startswith("WOOF!"):
  print("")
else:
  print(letter.txt)
letter.txt.close()
</code></pre>
<p>Any help would be greatly appreciated. Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>OK, you're working on it, so I will give you the solution. You're still not programming but guessing the syntax so you might want to check out the <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow">official tutorial</a>.</p>
<p>First we're going to open both files. The default is to open a file for reading. That's OK for the source file, but not for the target file so we use <code>mode='w'</code> to allow writing.</p>
<p>Then we loop over each line in the source file, check if the line starts wirh <code>'WOOF!'</code> and if it doesn't we're going to write the line to the target file. The loop will stop when all lines from the source file are read.</p>
<p>After the loop we close both files. </p>
<pre><code>def main():
    source_file = open('letter.txt', encoding='UTF-8')
    target_file = open('fixed.txt', mode='w', encoding='UTF-8')

    for line in source_file:
        if not line.startswith('WOOF!'):
            target_file.write(line)

    source_file.close()
    target_file.close()

if __name__ == '__main__':
    main()
</code></pre>
<p>If you forget to close the files the target may be empty. If you don't want to handle the closing yourself let Python do this for you with the <code>with</code> statement.</p>
<pre><code>     with open('letter.txt', encoding='UTF-8') as source_file,  open('fixed_alt.txt', mode='w', encoding='UTF-8') as target_file:
         for line in source_file:
             if not line.startswith('WOOF!'):
                 target_file.write(line)
</code></pre>
<p>The files will be closed when the <code>with</code> block is left.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('letter.txt','r') as f:  
with open('fixed.txt','w') as i:

  for line in f:
    if 'WOOF!' not in line:
      print(line.strip(), file=i)
</code></pre>
<p>My answer</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('letter.txt') as fin, open('fixed.txt', 'w') as fout:
  for line in fin:
    if not line.startswith('WOOF!'):
      fout.write(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a simpler solution to the question.</p>
<pre><code>f = open('letter.txt')
n = open('fixed.txt', 'w')

for line in f:
  if 'WOOF!' not in line:
    print(line.strip(), file=n)
n.close()
n = open('fixed.txt').read()
print(n)
</code></pre>
</div>
<span class="comment-copy">Please show us your existing code. Do you have problems opening the file? Reading the file? Using <code>startswith</code>?</span>
<span class="comment-copy">It is easy to read text files line by line in Python. It is also easy to write the line to the other text file that was open for writing. Once you have the line read from the file, it is a string object/variable. There is the <code>line.startswith('xxx')</code> method of a string object that can be used for testing.</span>
<span class="comment-copy">With @pepr's hints, you just need 4 properly formatted lines.</span>
<span class="comment-copy">Thanks, I'll try that, and my current code for @Matthias is if letter.txt == "WOOF!":   print("") else:   print(letter.txt)</span>
<span class="comment-copy">@Nick Hofmann: It seems you missed a great part of the tutorial. First you have to <code>open</code> the files. Read <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">Reading and Writing Files</a>. Then you have to loop over the file object of the source file to read each line. Check the first characters of the line with the string method <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>string.startswith</code></a> and write the line to the new file if it doesn't start with "WOOF!". After the loop close both files.</span>
<span class="comment-copy">For the beginners, I would leave the <code>def main():</code> and the last <code>if</code> out. It just makes it more complex for understanding.</span>
<span class="comment-copy">Thank you so much @Matthias and to the others who help ed as well, I would upvote your answeer, but I don't have enough rep</span>
<span class="comment-copy">@pepr: You're right. I should have mentioned the purpose of <code>if __name__ == '__main__':</code> in the answer. Short explanantion: It prevents the running of the code when the file is imported.</span>
<span class="comment-copy">Please add more description and/or information about your answer and how it solves the asked problem so others can easily understand it without asking for clarification</span>
