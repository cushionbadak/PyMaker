<div class="post-text" itemprop="text">
<p>The ProjectEuler's <a href="https://projecteuler.net/problem=8" rel="nofollow noreferrer">problem 8</a> states:</p>
<blockquote>
<p>The four adjacent digits in the 1000-digit number that have the
  greatest product are 9 × 9 × 8 × 9 = 5832.</p>
<pre><code>73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450
</code></pre>
<p>Find the thirteen adjacent digits in the 1000-digit number that have
  the greatest product. What is the value of this product?</p>
</blockquote>
<p>I know that there are various solutions for this excercise available, but I don't want to spoil myself. I have a certain algorithm in mind: calculating the product of the first thirteen digits d_1, ..., d_13, then move one to the right and calculate the product of d_2, ..., d_14, and if this product is greater then the product before, this is supposed to be our new greatest product and so on, until we reach the end of the digits. But I don't see how I would go about something like this in Python. Naive as I am, I tried to copy the whole 1000 digit number, but yeah, I guess this isn't what I am supposed to do here. </p>
<p>But how am I able to work with this number then?</p>
</div>
<div class="post-text" itemprop="text">
<p>To read in the number as a string you can use Python's implicit <a href="https://docs.python.org/3.6/reference/lexical_analysis.html#string-literal-concatenation" rel="nofollow noreferrer">string literal concatenation</a>:</p>
<pre><code>num = (
    "73167176531330624919225119674426574742355349194934"
    "96983520312774506326239578318016984801869478851843"
    "85861560789112949495459501737958331952853208805511"
    ...
)
</code></pre>
<p>Once you have the string, you can read the digits in chunks of the required length and calculate the product. For that, the <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>reduce()</code></a> function may be useful:</p>
<pre><code>from functools import reduce

series_len = 13
max_product = 0

for i in range(len(num) - series_len):
    digits = num[i:i+series_len]
    product = reduce(lambda x, y: x*int(y), digits, 1)

    if product &gt; max_product:
        max_product = product
</code></pre>
</div>
<span class="comment-copy">Read the number as a string and slice the string to get the part you need.</span>
<span class="comment-copy">Thanks! But how do I read in the number without receiving an error message? " " " .... " " " is not working, for example. It gives ValueError: invalid literal for int() with base 10: '\n'</span>
<span class="comment-copy">Use the fact that Python concatenates adjacent strings (see the update).</span>
<span class="comment-copy">Thanks for your help! Although I really don't see how I deserve the downvotes.</span>
