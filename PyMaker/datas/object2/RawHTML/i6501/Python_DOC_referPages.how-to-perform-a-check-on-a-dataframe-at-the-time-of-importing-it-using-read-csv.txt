<div class="post-text" itemprop="text">
<p>I am trying to import a .csv file using pandas in python. I am using pandas.read_csv to do that. But I have a requirement to check each row in the dataframe and take values of two specific columns into an array. As my dataframe has almost 3milion(~1gb) rows doing it iteratively after the import is taking time. Can I do that while importing the file itself? Is it a good idea to modify read_csv library function to accommodate this?</p>
<pre><code>df = pd.read_csv("file.csv")
def get():
    for a in list_A: #This list is of size ~2300
        for b in list_B: #This list is of size ~12000
            if a row exists such that it has a,b: 
                //do something
</code></pre>
<p>Due to very large size of lists, this function is running slow. Also, querying a dataframe of such big size is also slowing down the execution. Any suggestions/solutions to improve the performance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python's default <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv module</a> reads the file line by line, instead of loading it fully into memory. </p>
<p>Code would look something like this:</p>
<pre><code>import csv
with open('file.csv') as csvfile:
  csvreader = csv.reader(csvfile)
  for row in csvreader:
    if row[1] in list_A and row[3] in list_B:
      # do something with the row
</code></pre>
</div>
<span class="comment-copy">What are these specific columns?</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ In dataframe, I want to look at col1 and col3</span>
<span class="comment-copy">So why can't you use <code>df[['col1', 'col3']]</code>?</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ If I do this check after importing the file, it is taking a lot of time. It is already taking 50sec-1min to import the file, My doubt is can I get into the code of read_csv and while it reads the line can I do the check?</span>
