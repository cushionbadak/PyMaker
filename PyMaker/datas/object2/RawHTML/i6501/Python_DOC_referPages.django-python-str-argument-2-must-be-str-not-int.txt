<div class="post-text" itemprop="text">
<p>I have a 12x12 dictionary with values, which are 0 for all.</p>
<pre><code>matchfield = {}
    for i in range(12):
        for j in range(12):
            matchfield[str((i, j))] = 0
</code></pre>
<p>I want to set some values to 1 with the following snippet (it checks whether the surrounding fields are free):</p>
<pre><code>length = 4
m = randint(1, 10-length)
n = randint(1, 10)
for x in range(m-1, m+length+1):
    for y in range(n-1, n+1):
        if not matchfield[str((x, y))]:
            for k in range(length):
                matchfield[str((m+k, n))] = 1
</code></pre>
<p>if I test this in python console, all works and the 4 selected values are set to 1, but in my Django view function I got an TypeError on the following line:</p>
<h2>    matchfield[str((m+k, n))] = 1</h2>
<pre><code>Environment:


Request Method: GET
Request URL: https://www.maik-kusmat.de/schiffeversenken/start/

Django Version: 1.11.5
Python Version: 3.5.3
Installed Applications:
['django.contrib.admin',
 'django.contrib.auth',
 'django.contrib.contenttypes',
 'django.contrib.sessions',
 'django.contrib.messages',
 'django.contrib.staticfiles',
 'django.contrib.sites',
 'django.contrib.flatpages',
 'accounts',
 'home',
 'contact',
 'kopfrechnen',
 'braces',
 'ckeditor',
 'ckeditor_uploader',
 'battleship',
 'hangman']
Installed Middleware:
['django.middleware.security.SecurityMiddleware',
 'django.contrib.sessions.middleware.SessionMiddleware',
 'django.middleware.common.CommonMiddleware',
 'django.middleware.csrf.CsrfViewMiddleware',
 'django.contrib.auth.middleware.AuthenticationMiddleware',
 'django.contrib.messages.middleware.MessageMiddleware',
 'django.middleware.clickjacking.XFrameOptionsMiddleware',
 'django.middleware.locale.LocaleMiddleware',
 'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware']



Traceback:

File "/home/pi/Dev/mkenergy/lib/python3.5/site-packages/django/core/handlers/exception.py" in inner
  41.             response = get_response(request)

File "/home/pi/Dev/mkenergy/lib/python3.5/site-packages/django/core/handlers/base.py" in _get_response
  187.                 response = self.process_exception_by_middleware(e, request)

File "/home/pi/Dev/mkenergy/lib/python3.5/site-packages/django/core/handlers/base.py" in _get_response
  185.                 response = wrapped_callback(request, *callback_args, **callback_kwargs)

File "/home/pi/Dev/mkenergy/lib/python3.5/site-packages/django/contrib/auth/decorators.py" in _wrapped_view
  23.                 return view_func(request, *args, **kwargs)

File "/home/pi/Dev/mkenergy/src/battleship/views.py" in battleship_start
  36.                                 matchfield[str((m+k, n))] = 1

Exception Type: TypeError at /schiffeversenken/start/
Exception Value: str() argument 2 must be str, not int
</code></pre>
<p>did I miss something? I do not understand the error</p>
</div>
<div class="post-text" itemprop="text">
<p>I would expect the <code>argument 2 must be str</code> error to occur if you had </p>
<pre><code>matchfield[str(m+k, n)]
</code></pre>
<p>In Python 3, the second argument to <a href="https://docs.python.org/3/library/functions.html#func-str" rel="nofollow noreferrer"><code>str</code></a> is the encoding, so an integer <code>n</code> would cause that error.</p>
<p>However, your traceback shows <code>matchfield[str((m+k, n))]</code>, which shouldn't cause that error. Try restarting the Django server to make sure you're running the current code.</p>
<p>At first, I suggested that you use tuples as dictionary keys, e.g.</p>
<pre><code>matchfield[(i, j)] = 0
</code></pre>
<p>However, if you are serializing <code>matchfield</code> to json then that won't work because the keys need to be strings.</p>
</div>
<span class="comment-copy">Your solution to using tuples has solved the problem. I had strings used due to an earlier problem that the keys were not strings, but now it works with tuples. Thank you</span>
<span class="comment-copy">As, I said, I'm not sure why you got that error with the code <code>matchfield[str((m+k, n))]</code>, but glad that changing to tuples solved the problem.</span>
<span class="comment-copy">Sorry, little Update: dictionary[str(x, y)] is the working solution. With tuples as keys I got the error again that keys must be strings. This error came from json.</span>
<span class="comment-copy">Ah, didn't realise that you were converting to json, in which case you do need strings for the keys. However I would have thought that you needed double parentheses e.g. <code>matchfield[((i, j))]</code>, not single parentheses as in your comment above.</span>
<span class="comment-copy">I am a bit confused, because today I see, that my code is identical to the code that issued the error, but it works as expected. I have 4 nearly identical snippets so set some values to 1 - if I change one of them to not str() I got an error for the first line with matchfield[str((m+k, n))]. I am using json in another function to check if the value from a clicked button (12x12 Buttons) in html is 0 or 1 in the dictionary. The error is internally fired by Python from site-packages (json) if the key is not a string.</span>
