<div class="post-text" itemprop="text">
<p>I have a test file and a main module file in which there's a function I'm testing. At the end of my test file, I have <code>unittest.main()</code> to run the unit tests. However, When I run the test file, the console shows "No tests were found" , even though I have 2 unit tests in my file (see screenshot below and source code at the end).
<a href="https://i.stack.imgur.com/ZBLYg.png" rel="nofollow noreferrer"><img alt="No tests were found Pycharm" src="https://i.stack.imgur.com/ZBLYg.png"/></a>
This problem seems to go away when I:</p>
<p>(1) <strong>Enclose the <code>unittest.main()</code> inside an <a href="https://stackoverflow.com/questions/419163/what-does-if-name-main-do"><code>if __name__ == "__main__"</code></a></strong>
 (tangent: I sort of understand how this clause works, but it makes no sense for me in this case, when the <code>unittest.main()</code> module runs properly when there's an if clause, versus when there's no coditional at all), OR</p>
<p>(2) <strong>When I run my test program in Spyder</strong> (I'm currently using Pycharm)</p>
<p>Therefore, I'm not quite sure this is an issue specific to my IDE or to my code. I've tried the <a href="https://stackoverflow.com/questions/35964848/pycharm-no-tests-were-found">recommended fix</a> from this Q&amp;A but none worked. If you have any idea on what I should do/configure to get <code>unittest.main</code> running properly, I'd really appreciate it!</p>
<hr/>
<p>For your reference, here are the 2 files in my program; my test file returns no test as opposed to the 2 tests that I'd programmed for it.</p>
<p>---Main file: city_functions.py---</p>
<pre><code>def print_city_country(city, country, population=""):
    """Print 'city, country' from input city and country"""
    if population:
        formatted_city_country = city + ", " + country + " - population " + str(population)
    else:
        formatted_city_country = city + ", " + country
    return formatted_city_country
</code></pre>
<p>---Test file: test_cities.py---</p>
<pre><code>import unittest
from city_functions import print_city_country


class TestCaseCityCountry(unittest.TestCase):
    """Test function city_country from city_functions module"""

    def test_city_country_pair(self):
        """Test for names like Santiago, Chile without population input"""
        formatted_city_country = print_city_country("Santiago", "Chile")
        self.assertEqual(formatted_city_country, "Santiago, Chile")

    def test_city_country_population(self):
        """Test for names like Santiago, Chile, 5000000"""
        formatted_city_country_population = print_city_country("Santiago", "Chile", 5000000)
        self.assertEqual(formatted_city_country_population, "Santiago, Chile - population 5000000")


unittest.main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As a beginner using Pycharm, Don Kirkby's <a href="https://stackoverflow.com/a/46749673/10304166">answer</a> helped me the most.  </p>
<p>The solution, at least for me was to simply remove <code>unittest.main()</code> from the file altogether. It appears that Pycharm is using the command <code>python -m unittest</code> by default whenever the test is run and <code>unittest.main()</code> method is messing up the syntax.</p>
<p>I hope this helps anyone else who came here with the same problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two ways to launch <code>unittest</code> tests. One is with the <code>unittest.main()</code> method that you're using, but I always use the <a href="https://docs.python.org/3/library/unittest.html#command-line-interface" rel="nofollow noreferrer">command-line interface</a> instead. The <code>python -m unittest discover</code> command will find tests in a bunch of files and run them all together.</p>
<p>I'm not sure why <code>unittest.main()</code> isn't working for you, but I would suggest using the other method anyway.</p>
</div>
<span class="comment-copy">How do you run the tests in Pycharm?</span>
<span class="comment-copy">Perfect question! I used Ctrl + Shift + F10 (like this <a href="https://confluence.jetbrains.com/display/PYH/Creating+and+running+a+Python+unit+test" rel="nofollow noreferrer">tutorial</a> showed), but I just went back and used Alt + Shift + F10 (the generic run hotkey for Pycharm), it worked (though without the fancy Pycharm test status you see on the left of my screenshot, just the console result). Do you know why there's such difference? I looked up Ctrl + Shift + 10 but found little reference for it, just cheatsheets saying it stands for "Run context configuration from editor", whatever that means.</span>
<span class="comment-copy">I separate my application files and tests into two different sibling folders. Then I can right click on the test folder and select <code>Run Notestests in tests</code>. (where tests is the name of my test folder).</span>
<span class="comment-copy">By the way, strictly speaking, you shouldn't include <code>unittest.main()</code> at all in your file. Just the tests themselves, and then you run the file like so: <code>python -m unittest myfile.py</code></span>
<span class="comment-copy">@YamMarcovic thanks for the tip! Someone at Pycharm also answered my question with a similar idea, and explain the difference between <code>Alt + Shift + F10</code> and <code>Ctrl + Shift + F10</code> (<a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/115000635410--No-tests-were-found-when-running-unittest-main-" rel="nofollow noreferrer">intellij-support.jetbrains.com/hc/en-us/community/posts/â€¦</a>)</span>
