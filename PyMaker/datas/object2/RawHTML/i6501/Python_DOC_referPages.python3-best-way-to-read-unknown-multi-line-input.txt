<div class="post-text" itemprop="text">
<p>What is the best way in Python 3 to read in multi-line user input when the amount of input is unknown? The multi-line input will be separated by Enter</p>
<p>when I try using</p>
<pre><code>while True:
    line = input()
    if line:
          print(line)
    else:
          break
</code></pre>
<p>I receive an EOFError</p>
<p>Then if I change it to a try-catch block</p>
<pre><code>while True:
    line = input()
    try:
          print(line)
    except EOFError:
          break
</code></pre>
<p>I still get the EOFError.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <strong><code>EOFError</code> occurs when you call <code>input()</code></strong>, not when you test it, nor when you print it. So that means you should <strong>put <code>input()</code> in a <code>try</code> clause</strong>:</p>
<pre><code>try:
    line = input()
    print(line)
except EOFError:
    break</code></pre>
<p>That being said, if <code>input</code> reads from the standard input channel, you can use it as an iterable:</p>
<pre><code>import sys

for line in sys.stdin:
    print(line, end='')
</code></pre>
<p>Since every <code>line</code> now ends with the new line character <code>'\n'</code>, we can use <code>end=''</code> in the <code>print</code> function, to prevent print a new line twice (once from the string, once from the <code>print</code> function).</p>
<p>I think the last version is more elegant, since it almost syntactically says that you iterate over the <code>stdin</code> and processes the lines individually.</p>
</div>
<span class="comment-copy">That's logical, since the error does not occur at printing, but at <code>input()</code>. So that should be in the <code>try</code>.</span>
<span class="comment-copy">Are you piping data in from stdin? I've never seen an EOFError from calling <code>input</code> but I suppose it's possible.</span>
<span class="comment-copy">@AdamSmith: yes, if you use <code>Ctrl+D</code> in most terminals, this is also seen as termining the stdin.</span>
<span class="comment-copy">The dupe is one of the most concise, smartest answers out there.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ the dupe does not answer the question. As specified in my title I ask specifically for Python 3. The dupe is for Python 2</span>
<span class="comment-copy">But the last line might cause problems, won't it? Mimicking <code>input()</code> exactly might be subtle</span>
<span class="comment-copy">@Elazar: based on the <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">documentation</a> of input, it reads from the stdin, strips the new line, and returns that. And raises an <code>EOFError</code> in case it has an EOF char. This is afaik the same what the iterator protocol over a <code>stdin</code> does (except that it terminates the loop in case of an EOF, and that it does not strip the new line).</span>
