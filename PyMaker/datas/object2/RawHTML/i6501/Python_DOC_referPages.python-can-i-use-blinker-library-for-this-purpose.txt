<div class="post-text" itemprop="text">
<p>I'm wondering if I can do these jobs with blinker library(or maybe with whatever libraries).</p>
<ol>
<li>I run a web application using Flask and within this application(maybe <code>app.py</code>), I define a signal named <strong>updated</strong>(e.g. <code>blinker.signal('updated')</code>).</li>
<li>In a separate process, I connect(subscribe) any function(I'll call it <code>subscriber</code>) to the <strong>updated</strong> signal. And this process runs forever like a daemon.</li>
<li>Whenever an <strong>update</strong> occurs on the web side, I want the <code>subscriber</code> function to be called.</li>
</ol>
<p>So I wrote some codes:</p>
<p><em>app.py</em> (Flask application)</p>
<pre><code>from flask import Flask
from blinker import signal

app = Flask(__name__)
updated = signal('updated')

@app.route('/update')
def update():
    updated.send('nothing')
    return 'Updated!'
</code></pre>
<p><em>background.py</em></p>
<pre><code>import time

from app import updated

@updated.connect
def subscriber(*args, **kwargs):
    print('An update occurred on the web side!')

while True:
    print('Waiting for signals...')
    time.sleep(1)
</code></pre>
<p>And ran the web application with <code>flask run</code> command. Now when I visit <code>localhost:5000/update</code>, I can see <code>Updated!</code> message in browser but I can't see the message <code>An update occurred on the web side!</code> from other process.</p>
<p>Is my approach wrong? If it is, how can I do such jobs? Waiting for your answers, thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Blinker's description <a href="https://github.com/jek/blinker" rel="nofollow noreferrer">is</a>:</p>
<blockquote>
<p>A fast Python <em>in-process</em> signal/event dispatching system.</p>
</blockquote>
<p>Emphasis mine, so no you can't use the library to send signals between two processes.</p>
<p>What can you do instead? Well, the Python Standard Library's documentation has a whole chapter on <a href="https://docs.python.org/3/library/ipc.html" rel="nofollow noreferrer">Interprocess Communication and Networking</a>. It's not clear what you're trying to build, but if you need to build a task queue (with "workers"), for instance, try <a href="https://github.com/celery/celery" rel="nofollow noreferrer">Celery</a> or <a href="https://github.com/closeio/tasktiger" rel="nofollow noreferrer">TaskTiger</a>. If you do need to actually send messages between processes, something more complex like <a href="http://zeromq.org" rel="nofollow noreferrer">ZeroMQ</a> would be appropriate.</p>
</div>
<span class="comment-copy">Ah, I've missed that description. Thank you for your clear answer and good suggestions!</span>
