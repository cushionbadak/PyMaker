<div class="post-text" itemprop="text">
<p>I would like to know if is possible to make this with a list comprehension.
The line "total = 0" is what gives the error </p>
<pre><code>listoflists=[[1,2,5],[1,1,1],[1,2,2,2,1]]
result=[]

for lis in listoflists:
    total = 0
    for i in lis:
        if i==1:
            total+=1
    result.append(total)
</code></pre>
<p>All i can think of is</p>
<pre><code>    result = [total for lis in listoflists total=0 for i in lis if i==1 total +=1]
</code></pre>
<p>But of course doesn't work, I can't find how to handle statements that aren't ifs or for loops (in this case the "total") in list comprehensions</p>
<p>any help would be appreciated</p>
</div>
<div class="post-text" itemprop="text">
<p>Although in this case</p>
<pre><code>[l.count(1) for l in listoflists]
</code></pre>
<p>is an efficient answer.</p>
<p>Conceptually to handle some arbitrary aggregation (say different from a simple sum) in your case <code>total</code> on a sublist you can use <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer">reduce</a>.</p>
<pre><code>from functools import reduce
[reduce(lambda total,x:total + (1 if x==1 else 0),l,0) for l in listoflists]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To count the number of <code>1</code> occurrences in each sublist:</p>
<pre><code>listoflists = [[1,2,5],[1,1,1],[1,2,2,2,1]]
result = [i.count(1) for i in listoflists]

print(result)
</code></pre>
<p>The output:</p>
<pre><code>[1, 3, 2]
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html?highlight=count#bytes.count" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html?highlight=count#bytes.count</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt; listoflists=[[1,2,5],[1,1,1],[1,2,2,2,1]]
&gt; [sum([x for x in xs if x == 1]) for xs in listoflists]
&gt; [1, 3, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simply do this to get the total count of <code>1</code>:</p>
<pre><code>result = sum([l.count(1) for l in listoflists])
</code></pre>
<p>or in case you need individual counts in the subarrays , this should do:</p>
<pre><code>result = [l.count(1) for l in listoflists]
</code></pre>
<p>So,</p>
<pre><code>listoflists = [[1,2,5],[1,1,1],[1,2,2,2,1]]
result = sum([l.count(1) for l in listoflists]) # result = 6(1+3+2)
</code></pre>
<p>and :</p>
<pre><code>listoflists = [[1,2,5],[1,1,1],[1,2,2,2,1]]
result = [l.count(1) for l in listoflists] # result = [1, 3, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's not possible with just plain list comprehensions.</p>
<p>You can use <code>[sum(filter(lambda x: x == 1, l)) for l in listsoflists]</code> if you're ok with using a few functions as well. </p>
<p>EDIT:</p>
<p><code>[l.count(1) for l in listsoflists]</code> is of course better.</p>
</div>
<span class="comment-copy">it's not possible in a list comprehension alone.</span>
