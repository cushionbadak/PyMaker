<div class="post-text" itemprop="text">
<p>With this code i print all the elements sorted with the most common word used in the textfile first. But how do i print the first ten elements? </p>
<pre><code>with open("something.txt") as f:
    words = Counter(f.read().split())
print(words)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the docs:</p>
<blockquote>
<p>most_common([n])</p>
<p>Return a list of the n most common elements and their counts from the most common to the least. If n is omitted or None, most_common() returns all elements in the counter. Elements with equal counts are ordered arbitrarily:</p>
</blockquote>
<p>I would try:</p>
<pre><code>words = Counter(f.read().split()).most_common(10)
</code></pre>
<p>Source: <a href="https://docs.python.org/2/library/collections.html#collections.Counter.most_common" rel="noreferrer">here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This will give you the <a href="https://docs.python.org/3/library/collections.html#collections.Counter.most_common" rel="nofollow noreferrer">most common</a> ten words in your <code>words</code> <code>Counter</code>:</p>
<pre><code>first_ten_words = [word for word,cnt in words.most_common(10)]
</code></pre>
<p>You'll need to extract only first elements from the list of pairs <code>(word, count)</code> returned by <a href="https://docs.python.org/3/library/collections.html#collections.Counter.most_common" rel="nofollow noreferrer"><code>Counter.most_common()</code></a>:</p>
<pre><code>&gt;&gt;&gt; words.most_common(10)
[('qui', 4),
 ('quia', 4),
 ('ut', 3),
 ('eum', 2),
 ('aut', 2),
 ('vel', 2),
 ('sed', 2),
 ('et', 2),
 ('voluptas', 2),
 ('enim', 2)]
</code></pre>
<p>with a simple list comprehension:</p>
<pre><code>&gt;&gt;&gt; [word for word,cnt in words.most_common(10)]
['qui', 'quia', 'ut', 'eum', 'aut', 'vel', 'sed', 'et', 'voluptas', 'enim']
</code></pre>
</div>
