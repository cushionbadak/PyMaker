<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15826305/insert-column-using-openpyxl">Insert column using openpyxl</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>i am not able to find any method in openpyxl that allows for inserting a new blank column with a known column letter or index from current cell properties.  for instance, if i am searching through cells on rows and find a cell that has cell.column value of "E" and want to insert a new column before column E, i don't see any function or method for inserting a new column within openpyxl.  is this possible at all or is there any known working method for doing so ?</p>
<p>UPDATE:
so i tried the test code as is from <a href="https://stackoverflow.com/questions/15826305/insert-column-using-openpyxl">Insert column using openpyxl</a> .
and it fails on following lines. i'm using python 2.7 and openpyxl 2.4.8</p>
<p>File "C:/Users/me/Desktop/my.py", line 30, in 
    column_letter, row = coordinate_from_string(coordinate)
  File "C:\Python27\lib\site-packages\openpyxl\utils\cell.py", line 45, in coordinate_from_string
    match = COORD_RE.match(coord_string.upper())
AttributeError: 'tuple' object has no attribute 'upper'</p>
</div>
<div class="post-text" itemprop="text">
<p>Looping could shuffle values to the right, but you already knew that. I assume you weren't happy with cycles spent on interpretive overhead to copy in that way. It might look like:</p>
<pre><code>for src, dst in zip(ws['E:Y'], ws['F:Z']):
    dst.value = src.value
</code></pre>
<p>There is <a href="https://openpyxl.readthedocs.io/en/default/pandas.html" rel="nofollow noreferrer">support for pandas dataframes</a>. Consider turning worksheet into a df, inserting a column, then spitting out a new .xlsx.</p>
<p>Using array slicing with a <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv.writer</a> may prove simpler.</p>
<p>None of this deals with the sticky wicket of adjusting formula references.</p>
</div>
<span class="comment-copy">i just updated my post with trying the test code from the answered link provided but ran into issues.</span>
<span class="comment-copy">i tried but get error "dst.value = src.value AttributeError: 'tuple' object has no attribute 'value' " .. if i look at src and dst they seem to have tuple of the cells i was just testing in a test spreadsheet with src of 'C:E' and dst of 'D:F'</span>
<span class="comment-copy">You may need to wrap an outer loop around that. So 1st iteration: <code>zip(ws['Z:Z'], ws['Y:Y'])</code>, next iteration: <code>zip(ws['Y:Y'], ws['X:X'])</code>, and so on up to <code>E:E</code>.</span>
