<div class="post-text" itemprop="text">
<p>In case you didn't catch it in the title, this is Python 3.6</p>
<p>I'm running into an issue where I <em>was</em> able to write to a file, and now I cannot. <strong><em>The crazy thing is that this was working fine earlier.</em></strong></p>
<p>I'm trying to either append my file if it exists, or write to a new file if it doesn't exist. </p>
<p><strong>main_area_text</strong> represents the div tag text below</p>
<pre><code>&lt;div id="1131607" align="center" 
style="width:970px;padding:0px;margin:0px;overflow:visible;text-
align:center"&gt;&lt;/div&gt;
</code></pre>
<p>and below is my code:
</p>
<pre><code>main_area_text = #this is equal to the html text above
                 #I've verified this with a watch during debugging
                 #But this doesn't actually matter, because you can put
                 #anything in here and it still doesn't work
html_file_path = os.getcwd() + "\\data\\myfile.html"
if os.path.isfile(html_file_path):
    print("File exists!")
    actual_file = open(html_file_path, "a")
    actual_file.write(main_area_text)
else:
    print("File does not exist!")
    actual_file = open(html_file_path, "w")
    actual_file.write(main_area_text)
</code></pre>
<p>Earlier, in it's working state, I could create/write/append to .html and .txt files.</p>
<blockquote>
<p>NOTE: If the file <strong>doesn't exist</strong>, the program still creates a new file... It's just empty.</p>
</blockquote>
<p>I'm somewhat new to the python language, so I realize it's very possible that I could be overlooking something simple. (It's actually why I'm writing this code, to just familiarize myself with python.)</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you're not closing your file, the data isn't being flushed to disk. Instead try this:</p>
<pre class="lang-py prettyprint-override"><code>main_area_text = "stuff"
html_file_path = os.getcwd() + "\\data\\myfile.html"
if os.path.isfile(html_file_path):
    print("File exists!")
    with open(html_file_path, "a") as f:
        f.write(main_area_text)
else:
    print("File does not exist!")
    with open(html_file_path, "w") as f:
        f.write(main_area_text)
</code></pre>
<p>The python <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer">with statement</a> will handle flushing the data to disk and closing the data automatically. It's generally good practice to use <code>with</code> when handling files.</p>
</div>
<span class="comment-copy">Is the file open somewhere else?</span>
<span class="comment-copy">I suspect the issue is you aren't closing your file. This is why you should always use a <code>with</code> statement to open files. Then they are closed automatically.</span>
<span class="comment-copy">@toonarmycaptain +1 for a good question. This was actually the first thing I double, triple, checked before coming to SO. At one point, there was a stale instance of python running that was keeping this file open, but that was not the actual source of the problem.</span>
