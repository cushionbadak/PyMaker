<div class="post-text" itemprop="text">
<p>I'm studying GridSearch method to adjust the parameters of Desicion tree model or random forest model. After reading the example of boston housing price, I found I can't run the code of the example. The following code is the GridSearch code of the example. The problem is <code>ValueError: Parameter values for parameter (max_depth) need to be a sequence.</code> I searched certain examples, however, the variable <code>params</code> in these examples are almost defined in the same format which can lead to this error. I think the writer want to create a dictionary with key is always is "max_depth" but the value will vary from 1 to 10. I have no clue to solve this problem. Could someone can help me?</p>
<pre><code>def fit_model(X, y):
""" Performs grid search over the 'max_depth' parameter for a 
    decision tree regressor trained on the input data [X, y]. """


    # Create cross-validation sets from the training data
    cv_sets = ShuffleSplit(X.shape[0], n_iter = 10, test_size = 0.20, random_state = 0)
    print (cv_sets)
    # Create a decision tree regressor object
    regressor = DecisionTreeRegressor()

    # Create a dictionary for the parameter 'max_depth' with a range from 1 to 10
    params = {'max_depth': range(1,11)}

    # Transform 'performance_metric' into a scoring function using 'make_scorer' 
    scoring_fnc = make_scorer(performance_metric)

    # Create the grid search object
    grid = GridSearchCV(estimator=regressor, param_grid=params, scoring=scoring_fnc, cv=cv_sets)

    # Fit the grid search object to the data to compute the optimal model
    grid = grid.fit(X, y)

    # Return the optimal model after fitting the data
    return grid.best_estimator_
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My theory is: the <code>grid-search</code> module has been designed for python 2 where:</p>
<ul>
<li><code>range</code> generates a <code>list</code></li>
<li>so there ain't no <code>range</code> type to check against</li>
</ul>
<p>So passing a <code>range</code> from Python 3 is a cornercase that doesn't work, with a confusing message.</p>
<p>I think I found the reason (and the fix) by looking at the <a href="https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/grid_search.py" rel="nofollow noreferrer">source code</a>, around line 348:</p>
<pre><code>    check = [isinstance(v, k) for k in (list, tuple, np.ndarray)]
    if True not in check:
        raise ValueError("Parameter values for parameter ({0}) need "
                         "to be a sequence.".format(name))
</code></pre>
<p>in python 3, <code>range</code> <a href="https://docs.python.org/3/library/stdtypes.html#typesseq" rel="nofollow noreferrer"><em>is</em> a sequence</a> but since it doesn't generate a <code>list</code> anymore, it is not accepted by <code>grid-search</code> because the code tests for object types explicity (so the error message is slightly off if you ask me :)). Also, I'm pretty sure that if the code also included <code>range</code> in the type test, the rest of the code would work very well, since <code>range</code> emulates very closely a <code>list</code>, without generating any.</p>
<p>A fix would be to force iteration, for instance like:</p>
<pre><code>params = {'max_depth': list(range(1,11))}
</code></pre>
<p>(<code>tuple</code> or <code>numpy</code> array would work as well)</p>
<p>To fix <code>grid-search</code>, one could do: <code>for k in (list, tuple, np.ndarray, range)</code> (but that may break in python 2, and there may exist some python 2/3 compatibility requirements here)</p>
<p>The other fixes would be:</p>
<ul>
<li>don't perform any check, let Python decide when using the methods (better ask forgiveness than permission)</li>
<li>just use <code>if isinstance(k,(list, tuple, np.ndarray, range)):</code> as <code>isinstance</code> already accepts a <code>tuple</code>, no need for the complex construct with the list comprehension generating booleans.</li>
</ul>
</div>
<span class="comment-copy"><code>range</code> isn't a sequence in python 3 (not sure of that??). But cheap test: try <code>params = {'max_depth': list(range(1,11))}</code></span>
<span class="comment-copy">@Jean-Fran√ßoisFabre <a href="https://docs.python.org/3/library/stdtypes.html#typesseq" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#typesseq</a></span>
<span class="comment-copy">@StefanPochmann the grid search code is a bit restrictive, see my answer.</span>
<span class="comment-copy">@StefanPochmann the code must be python-2, working on python 3, but no <code>range</code> type in python 2, and <code>range</code> is list so would have worked.</span>
<span class="comment-copy">How are you importing the GridSearchCV? from the <code>grid-search</code> module or the newer <code>model-selection</code>? Is the scikit updated?</span>
<span class="comment-copy">Wow... that code... could that be any worse? :-) :-(</span>
<span class="comment-copy">machine-learning modules probably aren't the best ones python-wise. They contain a lot of scientific stuff coded by scientists :)</span>
<span class="comment-copy">Wow... someone should submit <code>if isinstance(v, (list, tuple, np.ndarray, range))</code> or something there... :)</span>
<span class="comment-copy">@JonClements without breaking python2/python3 compatibility, of course. <code>range</code> isn't an object in python 2. The current code has the merit of being compatible with py2 &amp; 3.</span>
<span class="comment-copy">Yeah, but nothing will break... In Python 3 it'll work for the efficient membership test that <code>range</code> objects provide... in Python 2.x - that's already covered by checking against <code>list</code> and the <code>isinstance</code> check against <code>range</code> will always be <code>False</code></span>
