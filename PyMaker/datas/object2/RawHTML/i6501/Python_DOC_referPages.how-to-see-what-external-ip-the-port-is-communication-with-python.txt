<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/166506/finding-local-ip-addresses-using-pythons-stdlib">Finding local IP addresses using Python's stdlib</a>
<span class="question-originals-answer-count">
                    41 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/9481419/how-can-i-get-the-public-ip-using-python2-7">How can I get the public IP using python2.7?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I have a port scanner script that scans ports and tells you if they are open or closed. Is there a way I can see the IP addresses that the ports are communicating with? The script:</p>
<pre><code>from threading import Thread
import socket
host = str(input('host &gt; '))
from_port = int(input('start scan from port &gt; '))
to_port = int(input('finish scan to port &gt; '))
counting_open = []
counting_close = []
threads = []

def scan(port):
    s = socket.socket()
    result = s.connect_ex((str(host),port))
    print(('checking ports &gt; '+(str(port))))
    if result == 0:
        counting_open.append(port)
        print((str(port))+' -&gt; is open')
        peer = s.getpeername()
        print(peer)
        s.close()
    else:
        counting_close.append(port)
        #print((str(port))+' -&gt; is closed')
        s.close()

for i in range(from_port, to_port+1):
    t = Thread(target=scan, args=(i,))
    threads.append(t)
    t.start()

[x.join() for x in threads]

print(counting_open)
</code></pre>
<p>EDIT: Just to be clear, I wasn't asking for the IP of the local host, that is inputted by the user. I was asking if there was a way to know which external public IP's are communicating with the host through the ports found out after the script is run.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/socket.html#socket.socket.getpeername" rel="nofollow noreferrer">getpeername</a></p>
<pre><code>&gt;&gt;&gt; s.getpeername()
('207.38.86.25', 80)
</code></pre>
<p>For anyone else coming to this question who wants to get the ip address of a website without creating a socket object first, you can also use <a href="https://docs.python.org/3/library/socket.html#socket.gethostbyname" rel="nofollow noreferrer">socket.gethostbyname(hostname)</a> like so:</p>
<pre><code>def get_ip_address(host):
    try:
        return socket.gethostbyname(host)
    except:
         return None
</code></pre>
</div>
<span class="comment-copy">EDIT: <a href="https://stackoverflow.com/questions/9481419/how-can-i-get-the-public-ip-using-python2-7" title="how can i get the public ip using python2 7">stackoverflow.com/questions/9481419/…</a></span>
<span class="comment-copy">This post is asking for the machine's own external IP. I'm asking the external IP addresses of what the machine is communicating with on specific ports. @cᴏʟᴅsᴘᴇᴇᴅ</span>
<span class="comment-copy">Get the local IP first, and then get the public IP?</span>
<span class="comment-copy">I already have the Local IP address, as it's inputted by the user. But for example if I found out that on IP address 192.168.1.45, ports 1, 2, and 3 are open, I would like to know what those ports are communicating with. If it's another computer, maybe the public IP address of that computer?</span>
<span class="comment-copy">Thanks, but I didn't mean this. I wanted to know what external IP addresses are being communicated using the specific ports. For example, when I run the script and input the host as 192.168.1.22 and scan ports 1-100, it might say that ports 4,12, and 88 are open. How do I check which IP external addresses are communicating with the host (192.168.1.22) using ports 4,12, and 88?</span>
<span class="comment-copy">Thank you, Mr. Me. This still outputs the local host with the open ports. Can you please look at my code to make sure I used s.getpeername() right?</span>
<span class="comment-copy">Hmmm. I'm not sure how to get the external IP address. I'll have to do some digging around, and see if I can come up with a solution.</span>
<span class="comment-copy">If you could do that, it would be amazing! I've spent over an hour trying to find a solution for this.</span>
<span class="comment-copy">If you only need to get the ip address of localhost, you could use a service like <a href="https://ipapi.co/ip/" rel="nofollow noreferrer">ipapi.co/ip</a> to grab your external ip address. You would do something like <code>external_ip = urllib.request.urlopen('http://ident.me').read().decode('utf8')</code>.</span>
