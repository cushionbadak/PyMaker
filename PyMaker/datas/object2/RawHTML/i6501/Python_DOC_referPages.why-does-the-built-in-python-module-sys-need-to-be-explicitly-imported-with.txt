<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/tutorial/modules.html#standard-modules" rel="nofollow noreferrer">python documentation</a> says: </p>
<p>"One particular module deserves some attention: sys, which is built into every Python interpreter."</p>
<p>My understanding is that if a module is built into the Python interpreter itself, then there is no need for an explicit import statement. If the sys module is built-in the Python interpreter, then why is an explicit import statement required for the sys module?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>sys</code> is imported at Python startup.  So when you import <code>sys</code>, it does not actually do anything except bind a variable name to the already-existing module.  </p>
<p>When creating a module instance, there is no reason to have the <code>sys</code> name bound in the module scope when many (probably most) modules don't need to use <code>sys</code>.  So, that name is not in scope by default.  </p>
</div>
<div class="post-text" itemprop="text">
<p><code>import</code> performs two functions:</p>
<ol>
<li>It loads the module from disk, initializing and executing it.</li>
<li>It adds the module to the local namespace.</li>
</ol>
<p>With "built-in" modules item 1 is not an issue, but item 2 is still important; without it the code would throw a <code>NameError</code>.</p>
</div>
<span class="comment-copy">I understand now, Thanks.</span>
