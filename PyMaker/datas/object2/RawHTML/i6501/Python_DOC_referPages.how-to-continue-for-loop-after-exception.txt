<div class="post-text" itemprop="text">
<p>I have a code where im looping through hosts list and appending connections to connections list, if there is a connection error, i want to skip that and continue with the next host in the hosts list.</p>
<p>Heres what i have now:</p>
<pre><code>def do_connect(self):
    """Connect to all hosts in the hosts list"""
    for host in self.hosts:
        try:
            client = paramiko.SSHClient()
            client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            client.connect(host['ip'], port=int(host['port']), username=host['user'], timeout=2)
        except:
            pass
            #client.connect(host['ip'], port=int(host['port']), username=host['user'], password=host['passwd'])

        finally:
            if paramiko.SSHException():
                pass
            else:
                self.connections.append(client)
</code></pre>
<p>This does not work properly, if connection fails it just loops the same host again and again forever, till it establishes connection, how do i fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your own answer is still wrong on quite a few points...</p>
<pre><code>import logging
logger = logging.getLogger(__name__)

def do_connect(self):
    """Connect to all hosts in the hosts list"""
    for host in self.hosts:
        # this one has to go outside the try/except block
        # else `client` might not be defined.
        client = paramiko.SSHClient()
        try:
            client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            client.connect(host['ip'], port=int(host['port']), username=host['user'], timeout=2)

        # you only want to catch specific exceptions here
        except paramiko.SSHException as e:
            # this will log the full error message and traceback
            logger.exception("failed to connect to %(ip)s:%(port)s (user %(user)s)", host) 

            continue
        # here you want a `else` clause not a `finally`
        # (`finally` is _always_ executed)
        else:
            self.connections.append(client)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Ok, got it working, i needed to add the Continue, mentioned by Mark and also the previous if check inside finally was always returning true so that was fixed aswell.</p>
<p>Here is the fixed code, that doesnt add failed connections and continues the loop normally after that:</p>
<pre><code>def do_connect(self):
    """Connect to all hosts in the hosts list"""
    for host in self.hosts:
        try:
            client = paramiko.SSHClient()
            client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
            client.connect(host['ip'], port=int(host['port']), username=host['user'], timeout=2)
        except:
            continue
            #client.connect(host['ip'], port=int(host['port']), username=host['user'], password=host['passwd'])

        finally:
            if client._agent is None:
                pass
            else:
                self.connections.append(client)
</code></pre>
</div>
<span class="comment-copy">Use <a href="https://docs.python.org/3/reference/simple_stmts.html#continue" rel="nofollow noreferrer"><code>continue</code></a>.</span>
<span class="comment-copy">I cannot understand why it will loop the same host forever?</span>
<span class="comment-copy">I am not seeing any code that loops same host again</span>
<span class="comment-copy">but it does, say i have host1, host2 in the hosts list, if connection to host1 cannot be established, it will for some reason keep trying to loop the same host1 again and again.</span>
<span class="comment-copy">i was getting timeout error aswell due to 2sec timeout timer, so had to import socket.timeout to get it to work properly, otherwise this works. Accepted answer</span>
<span class="comment-copy">You should only catch specific exceptions (connections errors in your case), and always log them (so you can check whether something wrong happened). Also you want to put the client instanciation outside the try/except block (else if it fails on the first host <code>client</code> will not be defined and you'll get a <code>NameError</code> in the <code>finally</code> block), and fwiw this should NOT be a <code>finally</code> block at all but a <code>else</code> block (which will be executed <i>only</i> if no exception occured).</span>
