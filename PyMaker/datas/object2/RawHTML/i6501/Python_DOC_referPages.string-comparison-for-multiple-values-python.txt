<div class="post-text" itemprop="text">
<p>I have sets of data. The first (A) is a list of equipment with sophisticated names. The second is a list of more broad equipment categories (B) - to which I have to group the first list into using string comparisons. I'm aware this won't be perfect.</p>
<p>For each entity in List A - I'd like to establish the levenshtein distance for each entity in List B. The record in List B with the highest score will be the group to which I'll assign that data point. </p>
<p>I'm very rusty in python - and am playing around with FuzzyWuzzy to get the distance between two string values. However - I can't quite figure out how to iterate through each list to produce what I need. </p>
<p>I presumed I'd just create a list for each data set and write a pretty basic loop for each - but like I said I'm a little rusty and not having any luck. </p>
<p>Any help would be greatly appreciated! If there is another package that will allow me to do this (not Fuzzy) - I'm glad to take suggestions.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like the <a href="https://github.com/seatgeek/fuzzywuzzy#process" rel="nofollow noreferrer"><code>process.extractOne</code></a> function is what you're looking for.  A simple use case is something like</p>
<pre><code>from fuzzywuzzy import process
from collections import defaultdict

complicated_names = ['leather couch', 'left-handed screwdriver', 'tomato peeler']
generic_names = ['couch', 'screwdriver', 'peeler']

group = defaultdict(list)   

for name in complicated_names:
    group[process.extractOne(name, generic_names)[0]].append(name)
</code></pre>
<p><a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> is a dictionary that has default values for all keys. </p>
<p>We loop over all the complicated names, use <code>fuzzywuzzy</code> to find the closest match, and then add the name to the <code>list</code> associated with that match.</p>
</div>
<span class="comment-copy">Watch this, it will help a lot. Ned Batchelder - Loop like a native: while, for, iterators, generators <a href="https://www.youtube.com/watch?v=EnSu9hHGq5o" rel="nofollow noreferrer">youtube.com/watch?v=EnSu9hHGq5o</a></span>
