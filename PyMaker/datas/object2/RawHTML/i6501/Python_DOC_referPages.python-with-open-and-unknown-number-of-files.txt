<div class="post-text" itemprop="text">
<p>Say, I want to open a number of files and process them line by line. For the sake of argument, let's assume I want to concatenate the nth lines in each file into one line and write that into yet another file. I don't want to bloat my memory, so I don't want to read them in in their entirety. And I don't know how many files my function will get.</p>
<p>If I knew the number of files, I'd do something like this: </p>
<pre><code>with open(file_a) as in_a, open(file_b) as in_b, open(file_c, "w") as out:
    try:
        while True:
            line_a = next(in_a)
            line_b = next(in_b)
            out.write(line_a + line_b)
    except StopIteration:
        pass
</code></pre>
<p>Is there a way to do something similar with an unknown number of inputs (or other context managers)?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack" rel="nofollow noreferrer"><code>contextlib.ExitStack()</code> object</a> to track an arbitrary number of context managers:</p>
<pre><code>from contextlib import ExitStack

with ExitStack() as stack, open(file_c, "w") as out:
    infiles = [stack.enter_context(open(fname)) for fname in filenames]
    for lines in zip(*infiles):
        out.writelines(lines)
</code></pre>
</div>
<span class="comment-copy">@MosesKoledoye: yup, thanks.</span>
