<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7278779/bit-wise-operation-unary-invert">bit-wise operation unary ~ (invert)</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>Why <strong>bitwise not</strong> does not act as expected for toggling bits? See for example below:</p>
<pre><code>a = 5
print(bin(a))
b = ~a
print(bin(b))
</code></pre>
<p>This is the output:</p>
<pre><code>0b101
-0b110
</code></pre>
<p>The question is why the first bit from the left is not toggled?</p>
<p>Considering that Python documentation says:</p>
<blockquote>
<p>~ x Returns the complement of x - the number you get by switching each
  1 for a 0 and each 0 for a 1.</p>
</blockquote>
<hr/>
<p>Edit: Are you saying that "~" is not the operator for simple toggling of bits, but instead it is the operator for twos complement?
If so, why the sentence quoted from documentation does not tell that. The sentence above from Python documentation does not imply this to me.</p>
</div>
<div class="post-text" itemprop="text">
<p>It <em>is</em> toggling all the bits. <strong>All</strong> of them, including an infinite number of leading zeros, producing an infinite number of leading ones:</p>
<pre><code>0b...111111111111111111111111111111111111111111111111111010
</code></pre>
<p>because Python simulates an infinite-bit representation, not 3-bit or 32-bit or 64-bit or any finite number.</p>
<p>Python can't show you an infinite number of leading ones, so instead, it shows you <code>bin(abs(b))</code> with a <code>-</code> sign in front. <code>abs(b)</code> is <code>6</code> and <code>bin(6)</code> is <code>'0b110'</code>, so you see</p>
<pre><code>-0b110
</code></pre>
</div>
<span class="comment-copy">That's two's complement</span>
<span class="comment-copy">Note the <code>-</code> in front of <code>-0b110</code>. It can't show you an infinite series of <code>1</code>s trailing off to the left, so it's showing you <code>bin(abs(b))</code> with a <code>-</code> sign in front.</span>
<span class="comment-copy">Preamble - <a href="https://wiki.python.org/moin/BitwiseOperators" rel="nofollow noreferrer">wiki.python.org/moin/BitwiseOperators</a></span>
<span class="comment-copy">this is a really good answer. Where did you get the info?</span>
<span class="comment-copy">@lmiguelvargasf: It's hard to remember all the stuff I've read, but at least one of my sources was probably the <a href="https://docs.python.org/3/reference/datamodel.html#the-standard-type-hierarchy" rel="nofollow noreferrer">Python data model documentation</a>, which says "For the purpose of shift and mask operations, a binary representation is assumed, and negative numbers are represented in a variant of 2â€™s complement which gives the illusion of an infinite string of sign bits extending to the left."</span>
