<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/17375340/testing-code-that-requires-a-flask-app-or-request-context">Testing code that requires a Flask app or request context</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
<li>
<a dir="ltr" href="/questions/15753390/how-can-i-mock-requests-and-the-response">How can I mock requests and the response?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/9559963/unit-testing-a-python-app-that-uses-the-requests-library">Unit testing a python app that uses the requests library</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I am writing a small Python flask app whose sole purpose is to make a request to get a web page at one specific URL (always the same) and parse a section of the content. The app surfaces two endpoints, /games/ and /games/. If the former, it returns info for all games listed on the web page, if the latter, just for that one game.</p>
<p>I have been asked to write unit tests and treat the web page as the data, but I dont think the test should hit the target URL through the network, so I want to make it so the web page is read from a file that I produced with curl and use that as the source.</p>
<p>What I am struggling with is <strong>how to insert the data into the response object from a requests.get() call.</strong> I've gone through pages and pages of examples of how to do mocking, but there isn't a clear, simple explanation of how to do this. </p>
<p>That's <strong>all</strong> I need to do. I have a file with the html from the original web site and I want the response data to come from the file, not the web site. </p>
<p>Any ideas?</p>
<p>UPDATE:</p>
<p>I figured it out on my own:</p>
<p>I separated out the line that calls requests.get into a function get_html then I mocked it in the test app.</p>
<pre><code>@mock.patch ('myflaskApp.get_html')
def test_get_html(get_html):
  theSession = requests.Session()
  theSession.mount('file://', FileAdapter())
  resp = theSession.get('file://'+os.getcwd()+'/mytestdata.html')
</code></pre>
<p>And then I simplified things even more by realizing I don't need to mock anything. I changed get_html() to check if the app.testing flag is true and have it load the adapter that way otherwise do a regular get. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>unittest.mock</code> library to intercept requests and test them like this:</p>
<pre><code>try:
    from unittest import mock
except ImportError:
    import mock  # noqa
</code></pre>
<p>Next you take a function and substitute its call:</p>
<pre><code>@mock.patch('requests.get')
def test_fetch(self, mock_get):
    # perform some actions then check it was called with correct number of parameters
    self.assertEqual(len(mock_get.call_args_list), 3)
    # and right parameter values
    self.assertIn(mock.call('http://someurl.com/test.json'), mock_get.call_args_list)
</code></pre>
<p>Here're details - <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">https://docs.python.org/3/library/unittest.mock.html</a></p>
</div>
<span class="comment-copy">See <a href="https://pypi.python.org/pypi/responses" rel="nofollow noreferrer"><code>responses</code></a> - you can make the body whatever you need.</span>
<span class="comment-copy">This is very confusing, because you're telling me I should try something but not <i>where</i>. Does this go in the Flask app? in a separate testing app? What is "telegram.bot."? Too many assumptions of knowledge here... :(</span>
<span class="comment-copy">Sorry this was copy-pasted from one of old projects. I'll describe better.</span>
<span class="comment-copy">Ok, but <i>where</i> do I put this? In the Flask app? In a separate app?</span>
<span class="comment-copy">I figured it out. What I really needed to do was mock the function and then use requests-file and its fileadapter. thanks for the tip that led me to the answer. :)</span>
<span class="comment-copy">Sorry haven't found better example. Glad to hear this was usable :))  Good luck )</span>
