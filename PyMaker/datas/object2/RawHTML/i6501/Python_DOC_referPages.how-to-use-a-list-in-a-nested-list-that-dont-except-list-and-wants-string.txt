<div class="post-text" itemprop="text">
<p>I have this bit of code that works but I would like to use <code>ScoreList1</code> as a part of the nested list but is asking for a string not a list.</p>
<p>I need it to work with lists as I have an input that appends to a list.</p>
<pre><code>ScoreList1= ['04', '05', '01', '07', '08']

nestedList = [["Judge","01","02","03","04","05"],
              ["Couple A","10","06","03","04","05"],
              ["Couple B","01","02","03","04","05"],
              ["Couple C","07","10","03","04","05"],
              ["Couple D","01","02","10","04","05"],]

for item in nestedList:
    print(
    ": "+item[0] + " "*(9-len(item[0]))+": "+
         item[1] + " "*(3-len(item[1]))+": "+
         item[4] + " "*(3-len(item[4]))+": "+
         item[2] + " "*(3-len(item[2]))+": "+
         item[3] + " "*(3-len(item[3]))+": "+
         item[5] + " "*(3-len(item[5]))+": ")
</code></pre>
<p>this is my expected output:</p>
<pre><code>: Judge    : 01 : 04 : 02 : 03 : 05 : 
: Couple A : 10 : 04 : 06 : 03 : 05 : 
: Couple B : 01 : 04 : 02 : 03 : 05 : 
: Couple C : 07 : 04 : 10 : 03 : 05 : 
: Couple D : 01 : 04 : 02 : 10 : 05 : 
</code></pre>
<p>but where the line couple a is I want the numbers in scorelist1</p>
<p>edited:</p>
<pre><code>    ScoreList1= ['04', '05', '01', '07', '08']
ScoreList2= ['07', '02', '01', '02', '08']

nestedList = [["Judge","01","02","03","04","05"],
             ["Couple A","10","06","03","04","05"],
              ["Couple B","01","02","03","04","05"],
              ["Couple C","07","10","03","04","05"],
              ["Couple D","01","02","10","04","05"],]

for item in nestedList:
    row = item[:1] + ScoreList1 if item[0] == "Couple A" else item
    print(": {:&lt;8} ".format(row[0])
          + "".join(": {:&lt;2} ".format(field) for field in row[1:]))
</code></pre>
<p>need scorelist2 next to couple B</p>
<p>Edit 2:</p>
<pre><code>    ScoreList1= ['04', '05', '01', '07', '08']
ScoreList2= ['07', '02', '01', '02', '08']
ScoreList3= ['02', '01', '01', '10', '08']
ScoreList4= ['01', '10', '02', '10', '09']
ScoreList5= ['02', '08', '01', '10', '01']
ScoreList6= ['01', '07', '01', '01', '01']

nestedListOfNames = [["Couple A"],
                     ["Couple B"],
                     ["Couple C"],
                     ["Couple D"],
                     ["Couple E"],
                     ["Couple F"]]
print(": Judge    : 01 : 02 : 03 : 04 : 05")
print("")
substitutions = {"Couple A": ScoreList1, "Couple B": ScoreList2, "Couple C": ScoreList3, "Couple D": ScoreList4, "Couple E" : ScoreList5, "Couple F" : ScoreList6}
with open("myfile.txt",'w') as outfile:
    for item in nestedListOfNames:
        row = item[:1] + substitutions.get(item[0], item[1:],)
        outfile.write(": {:&lt;8} ".format(row[0])
        + "".join(": {:&lt;2} ".format(field) for field in row[1:]))
outfile.close()
</code></pre>
<p>how can i use \n to break the lines up for the text file?</p>
</div>
<div class="post-text" itemprop="text">
<p>The simplest way to do it is to just check for the <code>"Couple A"</code> line and use <code>ScoreList1</code> in place of its values when appropriate:</p>
<pre><code>ScoreList1= ['04', '05', '01', '07', '08']

nestedList = [["Judge",    "01", "02", "03", "04", "05"],
              ["Couple A", "10", "06", "03", "04", "05"],
              ["Couple B", "01", "02", "03", "04", "05"],
              ["Couple C", "07", "10", "03", "04", "05"],
              ["Couple D", "01", "02", "10", "04", "05"],]

for item in nestedList:
    row = item[:1] + ScoreList1 if item[0] == "Couple A" else item
    print(  ": " + row[0] + " "*(9-len(row[0]))
          + ": " + row[1] + " "*(3-len(row[1]))
          + ": " + row[2] + " "*(3-len(row[2]))
          + ": " + row[3] + " "*(3-len(row[3]))
          + ": " + row[4] + " "*(3-len(row[4]))
          + ": " + row[5] + " "*(3-len(row[5])))
</code></pre>
<p>Since you indicated you now want the elements of each sublist printed in order, the construction  of the <code>print()</code> argument could be simplified:</p>
<pre><code>for item in nestedList:
    row = item[:1] + ScoreList1 if item[0] == "Couple A" else item
    print(": {:&lt;8} ".format(row[0])
          + "".join(": {:&lt;2} ".format(field) for field in row[1:]))
</code></pre>
<p>To extend this to handle two or more substitutions, while you <em>could</em> do something like this:</p>
<pre><code>ScoreList1= ['04', '05', '01', '07', '08']
ScoreList2= ['07', '02', '01', '02', '08']

for item in nestedList:
    row = (item[:1] + ScoreList1 if item[0] == "Couple A" else
           item[:1] + ScoreList2 if item[0] == "Couple B" else item) # etc, etc
    print(": {:&lt;8} ".format(row[0])
          + "".join(": {:&lt;2} ".format(field) for field in row[1:]))
</code></pre>
<p>That approach, however, could easily get unwieldy as well as also become relatively slow if there's more than a few to deal withâ€”so it would be better and faster to make the process "table-driven" (using what is known as a <a href="https://en.wikipedia.org/wiki/Control_table" rel="nofollow noreferrer">Control Table</a>) and write code handle all the cases once (as opposed writing small fragments of it for each individual case):</p>
<pre><code>substitutions = {"Couple A": ScoreList1, "Couple B": ScoreList2}

for item in nestedList:
    row = item[:1] + substitutions.get(item[0], item[1:])
    print(": {:&lt;8} ".format(row[0])
          + "".join(": {:&lt;2} ".format(field) for field in row[1:]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try using the built-in <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> function</p>
<pre><code>ScoreList1 = ['04', '05', '01', '07', '08']



nestedList = [["Judge", 1, 2, 3, 4, 5],
             ["Couple A", 10, 6, 3, 4, 5],
              ["Couple B", 1, 2, 3, 4, 5],
              ["Couple C", 7, 10, 3, 4, 5],
              ["Couple D", 1, 2, 10, 4, 5],]

for item, score in zip(nestedList, ScoreList1):
    print(": {:9} : {:02d} : {:02d} : {:02d} : {:02d} : {:02d} : {}".format(item[0], 
                                                                            item[1], 
                                                                            item[4], 
                                                                            item[2], 
                                                                            item[3], 
                                                                            item[5], 
                                                                            score)) 
</code></pre>
</div>
<span class="comment-copy">Where is the nested loop here?</span>
<span class="comment-copy">sorry cold speed meant nested loop ill edit!</span>
<span class="comment-copy">It still isn't clear what you want to do. Why are you mentioning the "shell"?</span>
<span class="comment-copy">that where it giving the error ill take it out as it dont make sence</span>
<span class="comment-copy">Rather than the contents of your <code>print</code> statement, you could instead put <code>":  {:9} : {:02d} : {:02d} : {:02d} : {:02d} : {:02d} : ".format(item[0], item[1], item[4], item[2], item[3], item[5])</code></span>
<span class="comment-copy">hi this looks like it would work with a bit of tweaking and help please can you check to see scoreList1 Actually works?</span>
<span class="comment-copy">GraphicsLab: I tested it with <code>ScoreList1</code> as shown before I posted it and it appeared to work.</span>
<span class="comment-copy">Where does ScoreList1 Numbers show up ? I need them to show up next to Couple A : ScoreList1 : ScoreList1 etc</span>
<span class="comment-copy">GraphicsLab: This does exactly that (uses the values from <code>ScoreList1</code> when printing the output for <code>Couple A</code>).</span>
<span class="comment-copy">o yeah just realised is there anyway of keeping it in order?</span>
<span class="comment-copy">maybe something like <code>print(": {0[0]} : {0[1]} : {0[4]} : {0[2]} : {0[3]} : {0[5]} : {1}".format(item, score))</code> for the print?</span>
<span class="comment-copy">@PatrickHaugh That, specifically, looses the padding that OP seems to want (could be addressed, though).  Shame OP needs the items out of order.  Otherwise, you could just unroll <code>item</code> as arguments to the format function.</span>
<span class="comment-copy">hi  I can see that this is working but I need the score list to be going next to couple A not all of them?</span>
