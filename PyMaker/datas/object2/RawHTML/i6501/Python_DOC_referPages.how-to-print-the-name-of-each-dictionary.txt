<div class="post-text" itemprop="text">
<p>I have just started coding this semester, so if you can use simple methods to help me find my answer I'd appreciate it. Basically, I just want it to print the name of each dictionary and then list it's contents. Oh, and just so you know, I don't actually even like sports this was just a previous homework assignment that I wanted to improve upon. Here's what I've got and yes, I know it doesn't work the way I want it to:</p>
<pre><code>football = {
            'favorite player': 'Troy Aikman',
            'team': 'Dallas Cowboys',
            'number': '8',
            'position': 'quarterback'
           }
baseball = {
            'favorite player': 'Jackie Robinson',
            'team': 'Brooklyn Dodgers',
            'number': '42',
            'position': 'second baseman'
           }
hockey = {
          'favorite player': 'Wayne Gretzky',
          'team': 'New York Rangers',
          'number': '99',
          'position': 'center'
         }

sports = [football, baseball, hockey]
my_sports = ['Football', 'Baseball', 'Hockey']
for my_sport in my_sports:
    print(my_sport)
for sport in sports:
    for question, answer in sport.items():
        print(question.title + ": " + answer)
    print("\n")
</code></pre>
<p>I want it to print:</p>
<pre class="lang-none prettyprint-override"><code>Football
Favorite player: Troy Aikman
Team: Dallas Cowboys
Number: 8
Position: quarterback

Baseball:
Favorite player: Jackie Robinson
Team: Brooklyn Dodgers
Number: 42
Position: second baseman
</code></pre>
<p>...and so forth. How do I achieve the results I want? The simpler the better and please use Python 3, I know nothing of Python 2.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>my_sports = {'Football': football, 'Baseball' : baseball, 'Hockey' : hockey}
for key,value in my_sports.items():
    print(key)

    for question, answer in value.items():
        print(question + ": " + answer)
    print("\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>sports = {"football":football, "baseball":baseball, "hockey":hockey}
for a, b in sports.items():
    print(a)
    for c, d in b.items():
        print("{}: {}".format(c, d))
</code></pre>
<p>Output:</p>
<pre><code>football
position: quarterback
favorite player: Troy Aikman
number: 8
team: Dallas Cowboys
baseball
position: second baseman
favorite player: Jackie Robinson
number: 42
team: Brooklyn Dodgers
hockey
position: center
favorite player: Wayne Gretzky
number: 99
team: New York Rangers
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>UPDATED:</strong></p>
<p>I edit my answer and now the code below works:</p>
<pre><code>my_sports = {'Football': football, 'Baseball' : baseball, 'Hockey' : hockey}

for key,value in my_sports.items():
    print(key)

    for question, answer in value.items():
        print(question + ": " + answer)
    print("\n")
</code></pre>
<p>This is the result:</p>
<pre><code>Football
Favorite Player: Troy Aikman
Team: Dallas Cowboys
Number: 8
Position: quarterback


Baseball
Favorite Player: Jackie Robinson
Team: Brooklyn Dodgers
Number: 42
Position: second baseman


Hockey
Favorite Player: Wayne Gretzky
Team: New York Rangers
Number: 99
Position: center
</code></pre>
<p>Code here: 
<a href="https://repl.it/MOBO/3" rel="nofollow noreferrer">https://repl.it/MOBO/3</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The built-in <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> function seems like the easiest way to combine and pair-up elements from the two lists. Here's how to use it:</p>
<pre><code>sports = [football, baseball, hockey]
my_sports = ['Football', 'Baseball', 'Hockey']

for my_sport, sport in zip(my_sports, sports):
    print('\n'.join((
        '{}',  # name of sport
        'Favorite player: {favorite player}',
        'Team: {team}',
        'Number: {number}',
        'Position: {position}')).format(my_sport, **sport) + '\n'
    )
</code></pre>
</div>
<span class="comment-copy">So, can I ask why you tried to do <code>question.title</code>? That should throw an <code>AttributeError</code>? Is that currently the behavior you are seeing?</span>
<span class="comment-copy">It looks like the title is in one list (my_sports), but the data is in another list (sports). They line up item-to-item at the same index by intentional coincidence, so you just need to access them in the same way. Either use "for index in range(len(my_sports)" or look up the python "zip" function. Good luck.</span>
<span class="comment-copy">Dictionaries <i>don't have names</i>.  Variables have names, but you lost any connection with the original variable when you built the <code>sports</code> list.  You could add the name as an item in each dict, or do <code>for name, sport in zip(sports, my_sports):</code> to loop over the two lists in parallel.</span>
<span class="comment-copy">I just added the title thing as I was typing and forgot the parentheses. My bad, I just started coding after all. Before I added the title I wasn't getting an error, I was just getting the wrong output. Also, I don't know what a zip is yet. Don't think I've gotten there yet in the book. But, my question has been answered in a simplistic way that I can understand by Dharmesh. Thanks a bunch, it's really helped me learn!</span>
<span class="comment-copy">AH! Thanks! This worked exactly how I wanted it to!</span>
<span class="comment-copy">@Ginger: The order that the sport dictionaries keys and associated values (named <code>question</code> and <code>answer</code> in the code) is arbitrary and can even vary between sports. This is a common issue in many of the other answers, too.</span>
<span class="comment-copy">This is going to print all the <code>sport.keys()</code> items for <i>every</i> sport each iteration of the outer for <code>loop</code>. Besides that, the order of the what is printed will be unpredictable because dictionaries don't preserve ordering.</span>
<span class="comment-copy">I update my answer, please check. @martineau</span>
