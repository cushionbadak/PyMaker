<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/17098553/how-to-remove-whitespaces-and-newlines-from-every-value-in-a-json-file">How to remove whitespaces and newlines from every value in a JSON file?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>How do I remove extra space for keys in a json file?
My file looks like this...</p>
<pre><code>{
      " bankName " : " State bank of China " ,
" branchDetails " : [
       {
...
</code></pre>
<p>Expected results:</p>
<pre><code>{
      "bankName" : " State bank of China " ,
"branchDetails" : [
       {
...
</code></pre>
<p>Can I use "strip" method of string to json file (preferably values as well with keys)?</p>
</div>
<div class="post-text" itemprop="text">
<p>Parse your JSON file into a Python data structure, strip all strings, and write it out again:</p>
<pre><code>from functools import singledispatch

@singledispatch
def json_strip(obj):
    return obj

@json_strip.register(str)
def _(obj):
    return obj.strip()

@json_strip.register(list)
def _(obj):
    return [json_strip(v) for v in obj]

@json_strip.register(dict)
def _(obj):
    return {json_strip(k): json_strip(v) for k, v in obj.items()}

with open(inputfile, 'r') as inf:
    with open(outputfile, 'w') as outf:
        json.dump(json_strip(json.load(inf)), outf)
</code></pre>
<p>This uses the <a href="https://docs.python.org/3/library/functools.html#functools.singledispatch" rel="nofollow noreferrer"><code>@functools.singledispatch()</code> decorator</a> to create a series of recursive functions to handle the different types; this requires Python 3.4 or newer.</p>
<p>You may want to adjust the <code>json.dump()</code> output using the <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow noreferrer"><code>separators</code>, <code>indent</code> and <code>sort_keys</code> options</a>.</p>
<p>Quick demo:</p>
<pre><code>&gt;&gt;&gt; json_strip({" bankName " : " State bank of China "})
{'bankName': 'State bank of China'}
</code></pre>
</div>
<span class="comment-copy">I don't think there is a magic method to perform this task. Maybe the quickest way is to loads() your json content to obtain plain Python object, then loop on the dict keys to call strip() on them, then dumps() back the result to json</span>
