<div class="post-text" itemprop="text">
<p><code>format()</code> method is awesome but I want to change identifier of my choice because I dont want to escape <code>{</code> and <code>}</code> in my string.  </p>
<p>e.g.<br/>
<code>'Hi {name}'.format(**{'name': 'Alok'})</code> will print <code>'Hi Alok'</code> </p>
<p><code>'Hi {{{name1}, {name2}}}'.format(**{'name1':'foo', 'name2':'bar'})</code><br/>
will print <code>'Hi {foo, bar}'</code> </p>
<p>In 2nd example <code>{</code> and <code>}</code> are part of my string so I have to escape them using <code>{{</code> and <code>}}</code>.</p>
<p>I dont want to escape <code>{</code> and <code>}</code> or even dont want to use template engine like <a href="http://jinja.pocoo.org" rel="nofollow noreferrer">jinja</a> etc. How can I change identifier? I guess there would be way using subclassing <code>str</code> class. </p>
</div>
<div class="post-text" itemprop="text">
<p>Sure you could probably subclass the str class but i would recommend againt this. This is an example of how this would look like:</p>
<pre><code># -*- coding: utf-8 -*-

class FormattableString(str):
    def format(self, symbols, *args, **kwargs):
        start, end = symbols
        prepared_string = self.replace(
            start, '{').replace(end, '}')

        return prepared_string.format(
            *args, **kwargs)

if __name__ == '__main__':
    f_string = FormattableString('Hello [name]')
    print(f_string.format(('[', ']'), name='john'))
</code></pre>
<p>You can also use the old style of string formatting.</p>
<pre><code>'Hi {%(name1)s, %(name2)s}' % {'name1':'foo', 'name2':'bar'}
</code></pre>
<p>here is a link where the two methods are compared <a href="https://pyformat.info/" rel="nofollow noreferrer">https://pyformat.info/</a></p>
<p>I would recommend avoiding the old style as possible but if the new style clutter the string then maybe using the old style is better for that particular use case.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/string.html#template-strings" rel="nofollow noreferrer"><em>String Templates</em></a> which do $-based substitution instead of {..}</p>
<p>However, the rules are more simple and you lose advanced formatting features like alignment.</p>
<p>Docs: <a href="https://docs.python.org/3/library/string.html#string.Template" rel="nofollow noreferrer"><code>string.Template</code></a></p>
<pre><code>&gt;&gt;&gt; from string import Template 
&gt;&gt;&gt; s = Template('$who likes $what')
&gt;&gt;&gt; s.substitute(who='tim', what='kung pao')
'tim likes kung pao'
</code></pre>
</div>
<span class="comment-copy"><code>Suppose I dont want to escape { and }</code> Then what do you want to do? This question is very broad as it stands.</span>
<span class="comment-copy">''' I guess there would be way using subclassing str class.''' - this sounds bad :)</span>
<span class="comment-copy">this solution does not solve my purpose because its still using <code>{</code> and <code>}</code> for substition.   so <code>f_string = FormattableString('{Hello} [name]')</code> will not work without escaping <code>{</code>, <code>}</code></span>
<span class="comment-copy">Aaah true I missed that part. You can add escaping in the same fashion can't you?</span>
