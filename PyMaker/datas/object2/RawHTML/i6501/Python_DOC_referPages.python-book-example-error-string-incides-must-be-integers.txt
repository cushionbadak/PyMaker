<div class="post-text" itemprop="text">
<p>Scripting Language: Python 3.6</p>
<p>Reference Book: Python Data Visualization Cookbook [Milovanović 2013-11-25]</p>
<hr/>
<p>Teaching myself Python Data Visualization</p>
<p>When I execute code from book</p>
<pre><code>import requests

url = 'https://github.com/timeline.json'

r = requests.get(url)
json_obj = r.json()

repos = set() # we want just unique urls
for entry in json_obj:
    try:
        repos.add(entry['repository']['url'])
    except KeyError as e:
        print ("No key %s. Skipping..." % (e))

from pprint import pprint 
pprint(repos)
</code></pre>
<p>I get error </p>
<pre><code>repos.add(entry['repository']['url'])
TypeError: string indices must be integers
</code></pre>
<p>How to troubleshoot? When I see <a href="https://stackoverflow.com/questions/27839195/reading-a-json-string-typeerror-string-indices-must-be-integers">similar threads</a>, I draw a blank</p>
<p>Is the code from book even correct?</p>
<p><strong>[As an aside, where did set() in <code>repos = set()</code> come from?]</strong></p>
<p>Please point me in the right direction</p>
</div>
<div class="post-text" itemprop="text">
<p>The API being used is obsolete.  The following code uses the current API:</p>
<pre><code>import requests
url = 'https://api.github.com/events' # New API URL

r = requests.get(url)
json_obj = r.json()

repos = set() # we want just unique urls
for entry in json_obj:
    try:
        repos.add(entry['repo']['url'])  # Key change. 'repo' not 'repository'
    except KeyError as e:
        print ("No key %s. Skipping..." % (e))

from pprint import pprint 
pprint(repos)
</code></pre>
<p>As others have pointed out <code>set()</code> creates a set object, which can only contain unique values.  Example:</p>
<pre><code>&gt;&gt;&gt; set([1,2,3,4,4,5,5,6,6])
{1, 2, 3, 4, 5, 6}
</code></pre>
<p>Note that a set is unordered, so don't depend on the items being sorted as they seem to be in the example.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you print the json_obj you get this:</p>
<pre><code>{'message': 'Hello there, wayfaring stranger. If you’re reading this then you pr
obably didn’t see our blog post a couple of years back announcing that this API 
would go away: http://git.io/17AROg Fear not, you should be able to get what you
 need from the shiny new Events API instead.', 'documentation_url': 'https://dev
eloper.github.com/v3/activity/events/#list-public-events'}
</code></pre>
<p>So this link seems to be old and you will have to look the new one up.</p>
<p>For your second question:
<code>set()</code> is a data container similar to <code>dict()</code> and <code>list()</code>. sets are similar to lists in that they store a number of objects. The biggest differences are: </p>
<ul>
<li>sets are not sorted (like dictionaries)</li>
<li>sets only contain unique items</li>
</ul>
<p>You can find more info in the python documentation:
<a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#sets</a></p>
<p>I hope this helps, good luck with your learning.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just so you get some answers to your questions...</p>
<p>The <code>TypeError: string indices must be integers</code> is because, since the API is down, <code>entry</code> is now only a string (<code>u'documentation_url'</code>), and when <code>entry['repository']</code> it raises an error because, with strings, you can only <code>get</code> the n-th character <strong>from an integer n</strong> (you can't get the <em>repository-th</em> character).</p>
<p><strong>[As an aside, where did set() in repos = set() come from?]</strong></p>
<p>When you do <code>repos = set()</code> you're only creating an empty set object an assigning it to <code>repos</code>. You would fill it later with <code>repos.add(entry['repository']['url'])</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>entry</code> object you are trying to access is a string, so you cannot access it with non-integer indices. I tried running your code and the url seems to be down or blocked because of too many requests, so this might be the reason why <code>entry</code> ends up becoming a string object.</p>
<p>the <code>repos = set()</code> means that, when you add new urls to <code>repos</code> it will ignore cases where that url is already in the set so you don't end up with duplicates. If you used <code>repos = []</code> instead you would have to manually check for duplicates at every insertion (unless you wanted to allow duplicates).</p>
<p>You can read more about the set() data structure here: <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html</a></p>
</div>
<span class="comment-copy">From the json_obj: Hello there, wayfaring stranger. If you're reading this then you probably didn't see our blog post a couple of years back announcing that this API would go away: <a href="http://git.io/17AROg" rel="nofollow noreferrer">git.io/17AROg</a> Fear not, you should be able to get what you need from the shiny new Events API instead.</span>
