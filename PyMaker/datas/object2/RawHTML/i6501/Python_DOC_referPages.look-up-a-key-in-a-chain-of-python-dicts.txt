<div class="post-text" itemprop="text">
<p>Is there a built-in way in Python to look up a key <code>k</code> in a <code>dict</code> <code>d</code> and, if the key is not present, look it up instead in another <code>dict</code> <code>e</code>?</p>
<p>Can this be extended to an arbitrarily long chain of <code>dict</code>s <code>d</code> =&gt; <code>e</code> =&gt; <code>f</code> =&gt; ...?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/library/collections.html#collections.ChainMap" rel="nofollow noreferrer"><code>collections.ChainMap</code></a>:</p>
<pre><code>from collections import ChainMap

d = ChainMap({'a': 1, 'b': 2}, {'b': 22}, {'c': 3})
print(d['c'])
print(d['b'])
</code></pre>
<p>This would output:</p>
<pre>
3
2
</pre>
<p>Notice that the lookup for key <code>'b'</code> was satisfied by the first dictionary in the map and the remaining dicts where not searched.</p>
<p><code>ChainMap</code> was introduced in Python 3.3</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're using Python &lt; 3.3, <code>ChainMap</code> isn't available.</p>
<p>This is less elegant, but works:</p>
<pre><code>a = {1: 1, 2: 2}
b = {3: 3, 4: 4}

list_dicts = [a, b]

def lookup(key):
    for i in list_dicts:
        if key in i:
            return i[key]
    raise KeyError

lookup(1) # --&gt; 1
lookup(4) # --&gt; 4
</code></pre>
<p>You add all the dicts to a list, and use a method to look over them.</p>
</div>
<div class="post-text" itemprop="text">
<p>May be like below:</p>
<pre><code>if k in d:
    pass
elif k in e:
    pass
elif k in f:
    ...
</code></pre>
</div>
<span class="comment-copy">Is it linear search between the dicts? like it always will look d first, then e, then f..</span>
<span class="comment-copy">@Vinny - yes, I would like to look at the dicts in order.</span>
<span class="comment-copy">If you need to support Python2.7, then you can use the backport: <a href="https://pypi.python.org/pypi/chainmap" rel="nofollow noreferrer">pypi.python.org/pypi/chainmap</a></span>
