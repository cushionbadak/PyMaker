<div class="post-text" itemprop="text">
<p>I have a list of file names produced by a third party. They all look like this: <code>'D:\\a\\b\\c/d/e/f/g.cpp'</code>.
I would like to normalize these to have a uniform path separator. However the command:</p>
<pre><code>os.path.normpath('D:\\a\\b\\c/d/e/f/g.cpp')
</code></pre>
<p>does nothing to the string under Linux (Python3).
Under Windows I get the expected result, i.e. all slashes converted to <code>\\</code>.
How can I make it work under Linux, without resorting to regex? Is it a bug?</p>
</div>
<div class="post-text" itemprop="text">
<p>On Windows, <code>os.path</code> redirects to <code>ntpath</code> module which is aware of <code>\</code>, drives, ...</p>
<p>On Linux, you have to import &amp; use <code>ntpath</code> explicitly because you're not using the native separators.</p>
<p>The code below works on both platforms:</p>
<pre><code>&gt;&gt;&gt; import ntpath
&gt;&gt;&gt; ntpath.normpath(r'D:\a\b\c/d/e/f/g.cpp')
'D:\\a\\b\\c\\d\\e\\f\\g.cpp'
&gt;&gt;&gt; 
</code></pre>
<p>(note the usage of <code>r</code> prefix when pasting the paths, avoids doubling the backslashes)</p>
</div>
<span class="comment-copy">The <a href="https://docs.python.org/2/library/os.path.html#os.path.normcase" rel="nofollow noreferrer">documentation</a> says this is what is supposed to happen.</span>
<span class="comment-copy">I was starting an answer to point out that it's <a href="https://docs.python.org/3/library/os.path.html#os.path.normpath" rel="nofollow noreferrer">documented</a> that the desired behavior only works on Windows, but I didn't know about this workaround. Nice!</span>
<span class="comment-copy">it's not really a workaround. It's a way to force it, for instance when you generate scripts for Windows on a Linux machine (a bit like a cross compliation, when the target isn't the machine you're running the tool on)</span>
<span class="comment-copy">Fantastic, thanks!!!</span>
