<div class="post-text" itemprop="text">
<p>Is there a way to just open/create <code>filehandle = open( "example.bin", "wb")</code> and extend this file with an existing file?</p>
<p>I think about something like the <code>.extend</code> from function for lists
Like so:</p>
<pre><code>filehandle = open( "example.bin", "wb")
filehande.extend(existing_file.bin)
</code></pre>
<p>I know that i can read the existing file and write that to a variable/list and "paste" it in the new file but im curious if there is an easier option like this...</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('original', 'a') as out_file, open('other', 'r') as ins_file:
    out_file.write(ins_file.read())
</code></pre>
<p>This will append the contents of <code>other</code> onto <code>original</code>. If you're dealing with binary data you can change the mode on each to <code>ab</code> and <code>rb</code>.</p>
<p>If the contents of the file are large you can <a href="https://stackoverflow.com/a/519653/2714534">do it in chunks</a> too.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't merge file objects. You can make a list of each file and extended them</p>
<p><code>files_combined = list(open("example.bin", "wb")) + list(open("file_2"))</code></p>
<p>Will return a list with all the lines in <code>file_2</code> appended to <code>file_1</code>, but in a new list. You can then save it to a new file, or overwrite one of the files.</p>
</div>
<span class="comment-copy">filehandle is just a file object, and not a list</span>
<span class="comment-copy">I know, if you read my question twice im asking about a similar method.</span>
<span class="comment-copy"><code>cat file1 file2 &gt; file3</code> Run it on terminal.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ Thats possible but No option for me.</span>
<span class="comment-copy">Using <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer"><code>pathlib</code></a> you can do stuff like this:  <code>from pathlib import Path; p1, p2 = Path('path1'), Path('path2'); p1.write_bytes(p1.read_bytes() + p2.read_bytes())</code> which appends the contents of 'path2' to 'path1'.</span>
<span class="comment-copy">This will actually <b>replace</b> the content of <code>original</code> with <code>other</code>. Opening an existing file a in write ("w") mode immediatly erases the file's content. To append to an existing file you want to open in append ("a") mode, obviously.</span>
<span class="comment-copy">@brunodesthuilliers good catch, fixed.</span>
<span class="comment-copy">@blakev This works just fine for me. Thanks</span>
