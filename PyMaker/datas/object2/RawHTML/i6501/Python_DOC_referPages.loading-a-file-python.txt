<div class="post-text" itemprop="text">
<p>I am trying to load a file using python, but I don't want to load it all at once. I am having an error and I don't know how to fix it.</p>
<p>This is the code:</p>
<pre><code>import numpy as np
from itertools import islice

with open('C:/Users/jack/Desktop/folder/a.txt') as f:
    while True:
        next_n_lines = np.loadtxt(islice(f, 2))
        if (next_n_lines.any()==0):
            break
        a = next_n_lines[:, 0:2]
        b = next_n_lines[:, 2:4]
        print(a)
        print(b)
</code></pre>
<p>and this is the output:</p>
<pre><code>[[ 1.  2.]
 [ 2.  3.]]
[[ 3.  4.]
 [ 4.  5.]]
[[ 3.  4.]
 [ 4.  5.]]
[[ 5.  6.]
 [ 6.  7.]]
[[ 5.  6.]
 [ 6.  7.]]
[[ 7.  8.]
 [ 8.  9.]]
Traceback (most recent call last):
  File "C:\Users\jack\Desktop\folder\a.py", line 9, in &lt;module&gt;
    a = next_n_lines[:, 0:2]
IndexError: too many indices for array
</code></pre>
<p>this is the file i am loading:</p>
<pre><code>1   2   3   4
2   3   4   5
3   4   5   6
4   5   6   7
5   6   7   8
6   7   8   9
7   8   9   10
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As I understood it, there is one line missing to your loading file, hence it is not possible to create the last two arrays.</p>
<p>Here is a method to load two lines at a time:</p>
<pre><code>import numpy as np
from itertools import islice

with open(r'C:\\path\\to\\file\\a.txt') as f:
    while True:
        try :
            line1 = next(f)
            line2 = next(f)
        except StopIteration:
            break

        a1 = np.loadtxt(islice(line1.split('   '), 2))
        a2 = np.loadtxt(islice(line2.split('   '), 2))
        a = np.array([a1,a2])

        b1 = np.loadtxt(islice(line1.split('   '), 2, 4))
        b2 = np.loadtxt(islice(line2.split('   '), 2, 4))
        b = np.array([b1,b2])

        print(a)
        print(b)
</code></pre>
<p><code>f</code> is an iterator, so you can call the <code>next</code> method to get the next value of the iterator. You can certainely generalize the code to reading <code>n</code> lines at a time.</p>
<p>The output is:</p>
<pre><code>[[ 1.  2.]
 [ 2.  3.]]
[[ 3.  4.]
 [ 4.  5.]]
[[ 3.  4.]
 [ 4.  5.]]
[[ 5.  6.]
 [ 6.  7.]]
[[ 5.  6.]
 [ 6.  7.]]
[[ 7.  8.]
 [ 8.  9.]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you need an alternate and more standard way of efficiently accessing any line of a file you may check the <a href="https://docs.python.org/3/library/linecache.html" rel="nofollow noreferrer">linecache</a> module provided by the standard library. This has the advantage of working even when you don't have access to <code>NumPy</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>First make sure you understand what the slice and loadtxt produce.  Then you can worry about splitting the data:</p>
<pre><code>In [150]: with open('stack46580159.txt') as f:
     ...:     while True:
     ...:         data = np.loadtxt(islice(f,2))
     ...:         print(data)
     ...:         if (data.any()==0):
     ...:             break
     ...:         
[[ 1.  2.  3.  4.]
 [ 2.  3.  4.  5.]]
[[ 3.  4.  5.  6.]
 [ 4.  5.  6.  7.]]
[[ 5.  6.  7.  8.]
 [ 6.  7.  8.  9.]]
[  7.   8.   9.  10.]
/usr/local/bin/ipython3:3: UserWarning: loadtxt: Empty input file: "&lt;itertools.islice object at 0xab79bc84&gt;"
  # -*- coding: utf-8 -*-
[]
</code></pre>
<p>You have an odd number of lines.  So the last slice feeds <code>loadtxt</code> just one line (plus a warning).  <code>loadtxt</code> returns a 1d array, not the 2d that you were expecting.</p>
<p>A simple fix is to make sure <code>data</code> is 2d before you slice it</p>
<pre><code>In [155]: with open('stack46580159.txt') as f:
     ...:     while True:
     ...:         data = np.loadtxt(islice(f,2))
     ...:         data = np.atleast_2d(data)
     ...:         print(data)
     ...:         if (data.any()==0):
     ...:             break
     ...:         data[:,:2]
     ...:         
[[ 1.  2.  3.  4.]
 [ 2.  3.  4.  5.]]
[[ 3.  4.  5.  6.]
 [ 4.  5.  6.  7.]]
[[ 5.  6.  7.  8.]
 [ 6.  7.  8.  9.]]
[[  7.   8.   9.  10.]]
</code></pre>
<p>There are other ways of iterating through the file, or loading it all and then split. But make sure you understand what is going on at each step.  Don't just assume.</p>
</div>
<span class="comment-copy">What are you using <code>numpy</code> for exactly ? You can read file without it...</span>
<span class="comment-copy">How do you want to load your file? can you provide some sample for that?</span>
<span class="comment-copy">I want to load the file n rows at a time so i am using islice to take a certain number of rows and using numpy to put those information in an array.</span>
<span class="comment-copy">Is there a compelling reason for you to load the file chunks per chunks, like a huge file size or so ? Because you could very well start by loading all the data in an array in the same format as it is in the file and only then try formating the data to the desired shape. I would it assume it would also be much more efficient.</span>
<span class="comment-copy">What is the exact output that you are waiting for ?</span>
<span class="comment-copy">that works, but is there any way to do it without losing the last iteration?</span>
<span class="comment-copy">@JackFarah Can you precise the exact output that you want to have ?</span>
<span class="comment-copy">the main thing i need is not the exact output, what i need is not having any missing any line of the file when loading it i parts</span>
<span class="comment-copy">@JackFarah What you do not understand is that you will never create a matrix with the last line as it as been done in your example, because there are an odd number of lines. Do you want the last output line to be an (1,2) matrix ? This is why I keep asking you what is the output you want : your question in still unclear to people here...</span>
