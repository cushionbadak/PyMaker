<div class="post-text" itemprop="text">
<p>Actually I'm calculating throughput given certain window size. 
However, I don't know how to accumulate the values by window. For instance:</p>
<pre><code>time = [0.9, 1.1, 1.2, 2.1, 2.3, 2.6]
value = [1, 2, 3, 4, 5, 6]
</code></pre>
<p>After window size with 1 is applied, I should get</p>
<pre><code>new_value = [1, 5, 15]
</code></pre>
<p>I've thought of using indexes of data frame but not sure how I can realize it since I'm new to python.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>itertools.groupby</code> with a custom grouping function</p>
<pre><code>from itertools import groupby

def f(time, values, dt=1):
    vit = iter(values)
    return [sum(v for _, v in zip(g, vit)) for _, g in groupby(time, lambda x: x // dt)]
</code></pre>
<pre><code>In [14]: f([0.9, 1.1, 1.2, 2.1, 2.3, 2.6], [1, 2, 3, 4, 5, 6])
Out[14]: [1, 5, 15]

In [15]: f([0.9, 1.1, 1.2, 2.1, 2.3, 2.6], [1, 2, 3, 4, 5, 6], dt=2)
Out[15]: [6, 15]
</code></pre>
<p>Note that for the window of size 1 you could simply use <code>groupby(time, int)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>:</p>
<pre><code>time = [0.9, 1.1, 1.2, 2.1, 2.3, 2.6]
value = [1, 2, 3, 4, 5, 6]

from collections import Counter
counter = Counter()
for t,v in zip(time, value):
    counter[int(t)] += v

print(sorted(counter.items()))
# [(0, 1), (1, 5), (2, 15)]
</code></pre>
</div>
<span class="comment-copy">Nice. Note that depending on OP's needs, it might be necessary to sort the values first.</span>
