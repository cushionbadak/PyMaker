<div class="post-text" itemprop="text">
<p>I have the following list:</p>
<pre><code>a = [['A','R.1',1],['B','R.2',1],['B','R.2',2],['C','R.2',3],
     ['C','C.1',4],['C','C.1',5],['A','C.1',8],['B','C.1',9],
     ['B','C.1',1],['A','R.3',2],['C','R.1',3],['A','R.2',4],
     ['C','R.1',5],['A','R.1',1],['C','R.2',5],['A','R.1',8]]
</code></pre>
<p>I need to somehow group it to generate the following result:</p>
<pre><code>[['A', 'C.1', 1],
 ['A', 'R.1', 3],
 ['A', 'R.2', 1],
 ['A', 'R.3', 1],
 ['B', 'C.1', 2],
 ['B', 'R.2', 2],
 ['C', 'C.1', 2],
 ['C', 'R.1', 2],
 ['C', 'R.2', 2]]
</code></pre>
<p>Where the third column is count of rows where the first and second columns match.
From the original list the value of the third column is negligible.</p>
<p>I have already tried via "for" nested and "list comprehension", but I have not been able to come up with any results.</p>
<p>Does anyone have any clue how I can resolve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>With <code>collections.defaultdict</code> object:</p>
<pre><code>import collections

a = [['A','R.1',1],['B','R.2',1],['B','R.2',2],['C','R.2',3],
     ['C','C.1',4],['C','C.1',5],['A','C.1',8],['B','C.1',9],
     ['B','C.1',1],['A','R.3',2],['C','R.1',3],['A','R.2',4],
     ['C','R.1',5],['A','R.1',1],['C','R.2',5],['A','R.1',8]]

d = collections.defaultdict(int)
for l in a:
    d[(l[0],l[1])] += 1

result = [list(k)+[v] for k,v in sorted(d.items())]
print(result)
</code></pre>
<p>The output:</p>
<pre><code>[['A', 'C.1', 1], ['A', 'R.1', 3], ['A', 'R.2', 1], ['A', 'R.3', 1], ['B', 'C.1', 2], ['B', 'R.2', 2], ['C', 'C.1', 2], ['C', 'R.1', 2], ['C', 'R.2', 2]]
</code></pre>
<hr/>
<p>Just for "pretty" print:</p>
<pre><code>import pprint
...
pprint.pprint(result)
</code></pre>
<p>The output:</p>
<pre><code>[['A', 'C.1', 1],
 ['A', 'R.1', 3],
 ['A', 'R.2', 1],
 ['A', 'R.3', 1],
 ['B', 'C.1', 2],
 ['B', 'R.2', 2],
 ['C', 'C.1', 2],
 ['C', 'R.1', 2],
 ['C', 'R.2', 2]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Similar to @RomanPerekhrest, I used a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>:</p>
<pre><code>from collections import Counter

a = [['A','R.1',1],['B','R.2',1],['B','R.2',2],['C','R.2',3],
     ['C','C.1',4],['C','C.1',5],['A','C.1',8],['B','C.1',9],
     ['B','C.1',1],['A','R.3',2],['C','R.1',3],['A','R.2',4],
     ['C','R.1',5],['A','R.1',1],['C','R.2',5],['A','R.1',8]]

def transform(table):
    c = Counter(map(lambda c: tuple(c[:-1]), table))
    return sorted(map(lambda p: list(p[0]) + [p[1]], c.items()))

print(transform(a))
</code></pre>
</div>
<span class="comment-copy">Where are your attempts?  Let's work with what you've already tried, so that we can keep the solution close to stuff you're comfortable with.</span>
