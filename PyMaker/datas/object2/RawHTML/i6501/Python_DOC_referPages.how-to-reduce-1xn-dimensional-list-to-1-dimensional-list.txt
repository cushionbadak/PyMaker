<div class="post-text" itemprop="text">
<p>When I want to transpose a column-like numpy array, like,</p>
<pre><code>a = array([[1],
     [2],
     [3]])
</code></pre>
<p>to a row-like numpy array, which I expected is like,</p>
<pre><code>b = array([1,2,3])
</code></pre>
<p>But when I transpose a, I just get a 1x3 dimensional array,</p>
<pre><code>&gt;&gt;&gt; a.transpose()
&gt;&gt;&gt; array([[1,2,3]])
</code></pre>
<p>I don't know how to fix it.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are using <code>numpy</code>, <code>numpy.transpose</code> doesn't change the number of dimensions of an array; <code>a</code> remains to be a 2d array if it's initially 2d array, you need to flatten it to reduce it from <code>2d</code> to <code>1d</code>:</p>
<pre><code>import numpy as np
a = [[1],
     [2],
     [3]]

np.ravel(a)
#array([1, 2, 3])

np.squeeze(a)
#array([1, 2, 3])

np.array(a)[:,0]
# array([1, 2, 3])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = [[1],
     [2],
     [3]]
b=[i for sl in a for i in sl]
print(b)
</code></pre>
<hr/>
<p><strong>output</strong></p>
<pre><code>[1, 2, 3]
</code></pre>
<hr/>
<p><strong>explanation</strong><br/>
Using <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a></p>
<pre><code>[
i             #Take as a member of the final list
for sl in a   #iterate over all sublists in a
for i in sl   #iterate over each i in sublist
]
</code></pre>
<hr/>
<p><strong>UPDATE</strong></p>
<p><em>OR</em> you can do, (but I would suggest the list comprehension as it does everything inline with no overhead of function calls)</p>
<pre><code>b=transposed_list[0]
</code></pre>
</div>
<span class="comment-copy">@randomir OP said <i>transpose</i>, sounds like a numpy term.</span>
<span class="comment-copy">@randomir Sure. I am not certain about it when I say <i>sounds like</i>. -</span>
<span class="comment-copy">@ I'm sorry that the question is not claimed clearly, but yes, I'm just talking about a numpy array. All your provided methods are feasible while I just use a.flatten() to fix this problem up.</span>
<span class="comment-copy">I get that. But I'm sorry that I didn't make it clear that my data type is numpy array actually. So maybe a numpy method is more effective. Anyway, your answer is valuable.</span>
