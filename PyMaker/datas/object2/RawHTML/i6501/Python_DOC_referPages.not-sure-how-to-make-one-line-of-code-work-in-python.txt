<div class="post-text" itemprop="text">
<p>I am incredibly new to programing, my professor gave me this bit of python code with a clear error on the second to last line, I am not sure how to write this code so that it doesn't error out? </p>
<p>things I have tried:</p>
<pre><code>import numpy as np
a = np.arange(10)

b = a[4:8]
print b
</code></pre>
<p>This returns [3 4 5 6 7] but apparently this is wrong. After this I'm not sure of any other way to express what my professor wants? I have asked her to clarify but nothing helps :/</p>
<p>Here is the original code</p>
<pre><code>import numpy as np
a = np.arange(10)

b = a[a &gt; 3 &amp; a &lt; 8]
print b
</code></pre>
<p>Any ideas?
Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You're missing parenthesis:
<code>b = a[(a &gt; 3) &amp; (a &lt; 8)]</code> should work. </p>
</div>
<div class="post-text" itemprop="text">
<p>You need to understand the nature of <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">operator precedence</a> in Python. The <code>&amp;</code> has higher precedence than <code>&gt;</code> or <code>&lt;</code>, so the original expression is essentially evaluating:</p>
<pre><code>b = a[a &gt; (3 &amp; a) &lt; 8]
</code></pre>
<p>This is clearly not what you want. You want to evaluate <code>a &gt; 3</code>, then <code>a &lt; 8</code>, then combine them. Also, your desired range is 3 to 7 inclusive, so:</p>
<pre><code>b = a[(a &gt;= 3) &amp; (a &lt; 8)]
</code></pre>
<p>Also note that some of these operators behave a bit differently for Numpy arrays than they would for standard Python objects. You will need to play around with this to get a feel for it, or read the relevant docs. For example:</p>
<pre><code>&gt;&gt;&gt; a &gt; 3
array([False, False, False, False,  True,  True,  True,  True,  True,  True], dtype=bool)
</code></pre>
<p>So this evaluates whether each item in the array is &gt; 3, and returns an array of boolean values.</p>
</div>
<span class="comment-copy">3 isn’t greater than 3. That’s why your first attempt was incorrect.</span>
