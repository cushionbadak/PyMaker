<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1373164/how-do-i-create-a-variable-number-of-variables">How do I create a variable number of variables?</a>
<span class="question-originals-answer-count">
                    16 answers
                </span>
</li>
</ul>
</div>
<p>How can I create varying variable name?</p>
<p>like i am iterating in a loop say from 0 to 100.</p>
<p>I need to create  different variable in each iteration and assign some values to it. an example</p>
<pre><code>for i in range(0,100):
   'var'+i=i
</code></pre>
<p>Doesnot seems valid. I want to create variables in each iteration like var0,var1 etc and should be able to access it with that names. Can some one suggest me a solution</p>
</div>
<div class="post-text" itemprop="text">
<p>To solve this, you can try something like this:</p>
<pre><code>for x in range(0, 9):
    globals()['var%s' % x] = x

print var5
</code></pre>
<p>The globals() function produces a list-like series of values, which can be indexed using the typical <code>l[i]</code> syntax.</p>
<p><code>"var%s" % x</code> uses the <code>%s</code> syntax to create a template that allows you to populate the <code>var</code> string with various values.</p>
</div>
<div class="post-text" itemprop="text">
<p>Unless there is a strong reason to create multiple variables on the fly, it is normally in these situations to put things in a list of some sort,
or a dictionary:</p>
<pre><code>mydict = {'var{}'.format(i):i for i in range(1,101)}
</code></pre>
<p>Now access values with:</p>
<pre><code>mydict["var1"] # returns 1
mydict.get("var1") # returns 1
mydict.get("var101") # returns None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't like your Idea but yeah you can do it in python:</p>
<pre><code>for i in range(0,100):
    exec('var{i} = {i}'.format(i=i))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I wouldn't recommend doing this using varying variable names. Instead, you could put everything into a list and you would still be able to access each value independently. For example, you could do: </p>
<pre><code>var = []
for i in range(100):
    var.append(i)
</code></pre>
<p>Then you can access any element from that list like so:</p>
<pre><code>var[33]
</code></pre>
<p>This would return the number 33.</p>
<p>If you really did want each to be its own variable, you could use <code>exec</code> as others have noted.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should better use dictionary for this:</p>
<pre><code>var_dict = {
    'var'+str(i): i
        for i in range(10)
}
var_dict['var0']
</code></pre>
</div>
<span class="comment-copy">Read about list datastructure in Python.</span>
<span class="comment-copy">It is possible but it doesn't make sense. use <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow noreferrer">exec</a>.</span>
<span class="comment-copy">You should look into <a href="https://developers.google.com/edu/python/lists" rel="nofollow noreferrer">python lists</a></span>
<span class="comment-copy">create random strings...follow..<a href="https://stackoverflow.com/questions/2257441/random-string-generation-with-upper-case-letters-and-digits-in-python" title="random string generation with upper case letters and digits in python">stackoverflow.com/questions/2257441/â€¦</a></span>
<span class="comment-copy">This is certainly a duplicate but you should use eval or exec for this</span>
