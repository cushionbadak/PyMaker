<div class="post-text" itemprop="text">
<p>I am making rock paper scissors and when I run it it says "Can't convert 'int' object to str implicitly". </p>
<pre><code>import time
import random
print("Do you want to play rock, paper, scissors?")
playerscore = 0
cpuscore = 0
game = input()
game = game.upper()
while game == "SURE" or game == "YES" or game == "YEAH": # starts rock                                 paper scissors
    number = random.randint(1, 3)
    if number == 1:
        cpurpors = "SCISSORS"
    elif number == 2:
        cpurpors = "ROCK"
    elif number == 3:
        cpurpors = "PAPER"
    print("Cool! Rock, paper or scissors?")
    rpors = input()
    rpors = rpors.upper()
    print("Rock")
    time.sleep(.5)
    print("Paper")
    time.sleep(.5)
    print("Scissors")
    time.sleep(.5)
    print(cpurpors + "!")
    time.sleep(.5)
    if cpurpors == rpors:
        print("Draw!")
    elif cpurpors == "SCISSORS" and rpors == "PAPER" or cpurpors == "PAPER" and rpors == "ROCK" or cpurpors == "ROCK" and rpors == "SCISSORS":
        cpuscore = cpuscore + 1
        print("Haha, I win!")
    elif rpors == "SCISSORS" and cpurpors == "PAPER" or rpors == "PAPER" and cpurpors == "ROCK" or rpors == "ROCK" and cpurpors == "SCISSORS":
        playerscore = playerscore + 1
        print("Oh no! You win!")
    print("The scores are:")
    print("Guiseppebot: " + cpuscore)
    print(name + ": " + playerscore)
    print("Would you like to play again?")
    game = input()
    game = game.upper()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you're adding <code>int</code> variables to the print statements. Try doing something like this: </p>
<pre><code>print(name + ": " + str(playerscore))
</code></pre>
<p>In that example, you're setting <code>playerscore</code> to the <code>string</code> version of the <code>int</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Need to wrap the integers <code>cpuscore</code> and <code>playerscore</code> with <code>str</code> to convert them to a string, as it won't do it implicitly. </p>
<pre><code>print("Guiseppebot: " + str(cpuscore))
print(name + ": " + str(playerscore))
</code></pre>
<p>Another nice option is using format, which does call <code>str</code> on objects for you so you don't have to worry about it in the future: </p>
<pre><code>print("Guiseppebot: {}".format(cpuscore))
print("{}: {}".format(name, playerscore))
</code></pre>
<p><code>str</code> is the built-in function that will convert non string objects to a string. It does this by calling the objects <code>.__str__</code> method if it exists (and knows how to otherwise for objects like ints and floats.) Read more about it in the docs here <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I'm nor sure if this is the best solution, but my approach would be to use str() to convert the integer (cpuscore) to a string.</p>
<pre><code>import time
import random
name = input ("what's your name? ") #added in input for variable (name)
print("Do you want to play rock, paper, scissors?")
playerscore = 0
cpuscore = 0
game = input()
game = game.upper()
while game == "SURE" or game == "YES" or game == "YEAH": # starts rock                                 paper scissors
    number = random.randint(1, 3)
    if number == 1:
        cpurpors = "SCISSORS"
    elif number == 2:
        cpurpors = "ROCK"
    elif number == 3:
        cpurpors = "PAPER"
    print("Cool! Rock, paper or scissors?")
    rpors = input()
    rpors = rpors.upper()
    print("Rock")
    time.sleep(.5)
    print("Paper")
    time.sleep(.5)
    print("Scissors")
    time.sleep(.5)
    print(cpurpors + "!")
    time.sleep(.5)
    if cpurpors == rpors:
        print("Draw!")
    elif cpurpors == "SCISSORS" and rpors == "PAPER" or cpurpors == "PAPER" and rpors == "ROCK" or cpurpors == "ROCK" and rpors == "SCISSORS":
        cpuscore = cpuscore + 1
        print("Haha, I win!")
    elif rpors == "SCISSORS" and cpurpors == "PAPER" or rpors == "PAPER" and cpurpors == "ROCK" or rpors == "ROCK" and cpurpors == "SCISSORS":
        playerscore = playerscore + 1
        print("Oh no! You win!")
    print("The scores are:")
    print("Guiseppebot: " + str(cpuscore)) #converted cpuscore to a string
    print(name + ": " + str(playerscore)) #variable (name) wasn't declared
    print("Would you like to play again?")
    game = input()
    game = game.upper()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>cpuscore</code> is an integer(<code>int</code>) it can't be concatenated with a string. Python doesn't convert it to a string automatically("implicitly"). So you at least need to do: </p>
<pre><code>print("Guiseppebot: " + str(cpuscore))
</code></pre>
<p>Even better/easier, in Python 3.6+, use  <a href="https://docs.python.org/3.6/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">f-strings</a>
Assuming you <em>can</em> put the value inside a variable into a string (integers, strings, lists, dictionaries are ok), you just put them inside curly brackets. </p>
<p>Here's how the line with that error looks with f-strings:</p>
<pre><code>print(f"Guiseppebot: {cpuscore}")
</code></pre>
</div>
<span class="comment-copy">Can you include the error output?</span>
<span class="comment-copy">Traceback (most recent call last):   File "C:\Users\Owner\Downloads\Guiseppebot Simulator (1).py", line 128, in &lt;module&gt;     print("Guiseppebot: " + cpuscore) TypeError: Can't convert 'float' object to str implicitly</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/379906/parse-string-to-float-or-int">Parse String to Float or Int</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/45133311/cant-convert-int-object-to-str-implicitly-error-python">"Can't convert 'int' object to str implicitly" error (Python)</a></span>
<span class="comment-copy">please can you explain what str means?</span>
<span class="comment-copy">@WSingleton sure, added to answer: <code>str</code> is the built-in function that will convert non string objects to a string. It does this by calling the objects <code>__str__</code> method if it exists (and knows how to otherwise for objects like ints and floats.)</span>
<span class="comment-copy">Note that this only works for python 3.6+</span>
