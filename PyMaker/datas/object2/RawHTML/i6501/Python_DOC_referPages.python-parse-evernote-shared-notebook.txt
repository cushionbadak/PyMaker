<div class="post-text" itemprop="text">
<p>I am trying to get data from evernote 'shared notebook'.
For example, from this one: <a href="https://www.evernote.com/pub/missrspink/evernoteexamples#st=p&amp;n=56b67555-158e-4d10-96e2-3b2c57ee372c" rel="nofollow noreferrer">https://www.evernote.com/pub/missrspink/evernoteexamples#st=p&amp;n=56b67555-158e-4d10-96e2-3b2c57ee372c</a></p>
<p>I tried to use Beautiful Soup:</p>
<pre><code>url = 'https://www.evernote.com/pub/missrspink/evernoteexamples#st=p&amp;n=56b67555-158e-4d10-96e2-3b2c57ee372c'
r = requests.get(url)
bs = BeautifulSoup(r.text, 'html.parser')
bs
</code></pre>
<p>The result doesn't contain any text information from the notebook, only some code.</p>
<p>I also seen an advice to use selenium and find elements by XPath. 
For example I want to find the head of this note - 'Term 3 Week2'. In Google Chrome i found that it's XPath is '/html/body/div[1]/div[1]/b/span/u/b'.
So i tried this:</p>
<pre><code>driver = webdriver.PhantomJS()
driver.get(url)
t = driver.find_element_by_xpath('/html/body/div[1]/div[1]/b/span/u/b')
</code></pre>
<p>But it also didn't work, the result was 'NoSuchElementException:... '.</p>
<p>I am a newbie in python and especially parsing, so I would be glad to receive any help.
I am using python 3.6.2 and jupiter-notebook.</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way to interface with Evernote is to use their <a href="https://dev.evernote.com/doc/start/python.php" rel="nofollow noreferrer">official Python API</a>.</p>
<p>After you've configured your API key and can generally connect, you can then download and reference Notes and Notebooks.</p>
<p>Evernote Notes use their own template language called <a href="https://dev.evernote.com/doc/articles/enml.php" rel="nofollow noreferrer">ENML</a> (EverNote Markup Language) which is a subset of HTML. You'll be able to use BeautifulSoup4 to parse the ENML and extract the elements you're looking for.</p>
<p>If you're trying to extract information against a local installation (instead of their web app) you may also be able to get what you need from the executable. See <a href="https://dev.evernote.com/doc/articles/enscript.php" rel="nofollow noreferrer">how to pass arguments</a> to the local install to extract data. For this you're going to need to use the Python3 <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code></a> module.</p>
<p><strong>HOWEVER</strong></p>
<p>If you want to use selenium, this will get you started:</p>
<pre><code>import selenium.webdriver.support.ui as ui
from selenium.webdriver import Chrome
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC

# your example URL
URL = 'https://www.evernote.com/pub/missrspink/evernoteexamples#st=p&amp;n=56b67555-158e-4d10-96e2-3b2c57ee372c'

# create the browser interface, and a generic "wait" that we can use
#  to intelligently block while the driver looks for elements we expect.
#  10:  maximum wait in seconds
# 0.5:  polling interval in seconds
driver = Chrome()
wait = ui.WebDriverWait(driver, 10, 0.5)

driver.get(URL)

# Note contents are loaded in an iFrame element
find_iframe = By.CSS_SELECTOR, 'iframe.gwt-Frame'
find_html = By.TAG_NAME, 'html'

# .. so we have to wait for the iframe to exist, switch our driver context
#  and then wait for that internal page to load.
wait.until(EC.frame_to_be_available_and_switch_to_it(find_iframe))
wait.until(EC.visibility_of_element_located(find_html))

# since ENML is "just" HTML we can select the top tag and get all the 
#  contents inside it.
doc = driver.find_element_by_tag_name('html')

print(doc.get_attribute('innerHTML'))  # &lt;-- this is what you want

# cleanup our browser instance
driver.quit()
</code></pre>
</div>
<span class="comment-copy">To add to what @blakev said, you will not get the correct HTML you want with requests because the "#" in the URL means the bit after is not sent to the server so you are just sending and geting the response back to <code>https://www.evernote.com/pub/missrspink/evernoteexamples</code></span>
<span class="comment-copy">for Selenium you need to make sure you install the webdriver you are going to use correctly, or it will fail on the <code>driver = Chrome()</code> step.</span>
<span class="comment-copy">@blakev Thanks a lot, for such a full answer! The ''selenium" method totally works perfect. The "evernote" method has a disadvantage - there isn't official package for python 3. so it may be a little more complex to use. Thanks for your help!</span>
