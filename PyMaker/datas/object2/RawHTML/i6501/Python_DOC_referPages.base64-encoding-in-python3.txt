<div class="post-text" itemprop="text">
<p>my script includes this line:</p>
<pre><code>encoded = "Basic " + s.encode("base64").rstrip()
</code></pre>
<p>But gives me back the error:</p>
<pre><code>LookupError: 'base64' is not a text encoding; use codecs.encode() to handle arbitrary codecs
</code></pre>
<p>This line seemed to work fine in python 2 but since switching to 3 I get the error</p>
</div>
<div class="post-text" itemprop="text">
<p>This string codec was removed in Python 3. Use <a href="https://docs.python.org/3/library/base64.html" rel="nofollow noreferrer"><code>base64</code></a> module:</p>
<pre><code>Python 3.6.1 (default, Mar 23 2017, 16:49:06)

&gt;&gt;&gt; import base64
&gt;&gt;&gt; base64.b64encode('whatever')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/lib/python3.6/base64.py", line 58, in b64encode
    encoded = binascii.b2a_base64(s, newline=False)
TypeError: a bytes-like object is required, not 'str'
&gt;&gt;&gt; base64.b64encode(b'whatever')
b'd2hhdGV2ZXI='
&gt;&gt;&gt;
</code></pre>
<p>Don't forget to convert the data to bytes.</p>
</div>
<div class="post-text" itemprop="text">
<p>Code as follows:</p>
<pre><code>base64.urlsafe_b64encode('Some String'.encode('UTF-8')).decode('ascii')
</code></pre>
<p><strong>For example:</strong> <code>return {'raw': base64.urlsafe_b64encode(message.as_string().encode('UTF-8')).decode('ascii')}</code></p>
<p><strong>Worked for me.</strong></p>
</div>
<span class="comment-copy">Yes, this string codec was removed in Python 3</span>
<span class="comment-copy">If you want to do Base64 encoding in Python 3, you'd probably want to use the <code>base64</code> module.</span>
<span class="comment-copy">^Of which was just showed by @warvariuc in his answer.</span>
<span class="comment-copy">In addition to this, you may want to use <code>bytes()</code> to convert a <code>str</code> to a bytes-like object. For example, <code>bytes('python3', 'utf-8')</code> would give us <code>b'python3'</code>.</span>
<span class="comment-copy">It wasn't removed, it just can't be used with <code>str.encode()</code> anymore because it translates bytes to bytes and is not a text encoding for that reason. <code>codecs.encode(b'whatever', 'base64')</code> is closer to what was used in python2, and you don't have to remember which module to import for which codec.</span>
<span class="comment-copy">@SeanFrancisN.Ballais or just <code>'python'.encode()</code></span>
<span class="comment-copy">@mata I meant it was removed from codecs available in string. <code>bytes</code> objects don't have <code>encode</code>.</span>
<span class="comment-copy">@warvariuc, that would do then. Then again, both will still produce the same output anyways. Are there any performance differences between <code>str.encode()</code> and <code>bytes()</code>?</span>
