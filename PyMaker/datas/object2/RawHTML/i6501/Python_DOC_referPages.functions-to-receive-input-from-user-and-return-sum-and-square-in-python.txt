<div class="post-text" itemprop="text">
<p>I am a first time programmer learning Python and need to receive input from the user and return the input along with the sum and square of the entered data.  I have prompted for the input and can print that but not sure how to pass the input to the sum function and square function. </p>
<p>Here is what I have:</p>
<pre><code>def sum(list):
  data = input("Enter a list of numbers or enter to quit: ")
  for data in list():
    return sum(list) # Not sure how to make it x*y for my list of values?
  print("The sum of your list is: ", list)
</code></pre>
<p>and this is the same for my square function.  not sure how to make:</p>
<p>return(list**2) #return each number in list by **2?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code has a lot of problems, but they're mostly pretty simple ones that trip a lot of people up their first time.  Don't let  them get you down.</p>
<p>First, you shouldn't reuse names that already have meaning like <code>list</code> and <code>sum</code>.  Basically, any of the names in the table at the top of <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">this page</a>.</p>
<p>Second, you are taking in two "lists" (Not really, but we'll get there).  One is being passed into your function as an argument (<code>list</code> in <code>def sum(list):</code>). The other is <code>data</code> in the line </p>
<pre><code>data = input("Enter a list of numbers or enter to quit: ")
</code></pre>
<p>Third, <code>data</code> in the above line isn't really a list, it's a string.  If you want to split data from that <code>input</code> up and use it as numbers later, you'll have to do that manually.</p>
<p>Fourth, when you use the name <code>data</code> again in the line <code>for data in list()</code> you're overwriting the information contained in the existing <code>data</code> variable with the elements in <code>list()</code>.  At least you would be except that.</p>
<p>Fifth, <code>list()</code> is a function call.  There is a <code>list</code> function in Python, and this would work, but I think you probably expect this to iterate through the list you passed into the function.</p>
<p>Sixth, <code>return sum(list)</code> will call this function again, potentially forever.</p>
<p>Now, how do we go about fixing this?</p>
<p>Thankfully, the built-in function <code>sum</code> can add up lists for us if we want, but first we have to get the list from the user.</p>
<pre><code>def input_list():
    s = input("Enter integers separated by spaces:\n")
    return [int(x) for x in s.split()]
</code></pre>
<p>The <code>[int(x) for x in ...]</code> bit is something called a <a href="http://www.secnetix.de/olli/Python/list_comprehensions.hawk" rel="nofollow noreferrer">list comprehension</a>
.  You'll see another in a second.</p>
<p>This function takes input like </p>
<pre><code>23 45 12 2 3
</code></pre>
<p>and turns it into a list of <code>int</code>s.<br/>
Then we can just</p>
<pre><code>print(sum(input_list()))
</code></pre>
<p>The squares are a bit more difficult, but list comprehensions make them easy.  Just</p>
<pre><code>print([x**2 for x in input_list()])
</code></pre>
<p>Feel free to ask any followup questions if any of this is unclear.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://repl.it/MWIs/6" rel="nofollow noreferrer">repl for code below:</a></p>
<pre><code>def square(numbers):
  squared = []
  for number in numbers:
    squared.append(number**2)
  return(squared)

str_of_numbers = input("Enter a list of numbers or enter to quit: ")
print("input (string):", str_of_numbers)

numbers_as_strings = str_of_numbers.split(' ')  # now have a list of strings
print("list of numbers (as strings):", numbers_as_strings)

# turn list of strings into list of numbers
numbers_list = []
for number_as_string in numbers_as_strings:
  numbers_list.append(int(number_as_string)) 
print("list of numbers: ",numbers_list, "\n")

print("The sum of your numbers is: ", sum(numbers_list))        # uses built in `sum` function
print("The squares of your numbers are:", square(numbers_list)) 
</code></pre>
<p>Output of code above:</p>
<blockquote>
<p>Enter a list of numbers or enter to quit:  1 2 3<br/>
  input string: 1 2 3<br/>
  numbers as a list of strings: ['1', '2', '3']<br/>
  list of numbers:  [1, 2, 3]   </p>
<p>The sum of your numbers is:  6<br/>
  The squares of your numbers are: [1, 4, 9]  </p>
</blockquote>
<p>This can also be done more succinctly using <code>map</code>, <code>reduce</code> and <code>list comprehensions</code>.<br/>
However, this seems more appropriate, based on content of OP's question.</p>
</div>
<div class="post-text" itemprop="text">
<p>Firstly, you shouldn't use list as a variable name as it is actually a data type (<a href="https://docs.python.org/3/library/stdtypes.html#list" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#list</a>).</p>
<p>As for doing mathematical operations on a list of numbers, I would recommend looking into numpy. It allows you to do operations on arrays as well as a lot more varied and useful mathematical functions.
For your squaring each item in the list, you could simply do the following:</p>
<pre><code>import numpy as np

myList = [1,2,3,4]

print(np.square(myList))
</code></pre>
<p>The above code would print <code>[ 1 4 9 16]</code>.</p>
<p>More information on numpy (<a href="http://www.numpy.org/" rel="nofollow noreferrer">http://www.numpy.org/</a>) and the square function (<a href="https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.square.html" rel="nofollow noreferrer">https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.square.html</a>).</p>
</div>
<span class="comment-copy">Welcome to StackOverflow. The code that you show cannot possibly work--since your question does not ask about that, please show working code. And what do you mean by "return .. square"? Do you mean to show the square of each number in the input line? Have you figured out how to separate the values in the input and convert them to numeric values?</span>
<span class="comment-copy">data = map(int, data.split()) correct?  Yes, I mean the square of each number in the input line.</span>
<span class="comment-copy">That helped a ton.  Thank you!</span>
<span class="comment-copy">There's no reason to recommend numpy here.</span>
<span class="comment-copy">@AdamSmith he's wanting to do maths on a list, numpy allows for that kind of operation to be done quickly and easily and may be a useful tool if he would like to continue doing maths in python.</span>
<span class="comment-copy">He's not <i>really</i> doing math on a list, he's doing a homework assignment to learn how Python works. Asking a beginner programmer to download and install numpy, then use the numpy module to vectorize the square operation on a list of user inputs is kind of like handing a first-year shop student a CnC machine.</span>
