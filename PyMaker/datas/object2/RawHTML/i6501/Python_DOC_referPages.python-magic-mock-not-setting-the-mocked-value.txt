<div class="post-text" itemprop="text">
<p>I am writing python tests for the first time. I am trying to test a basic mock. I want to return some value that I want when I call the function, rather than a mock object.</p>
<p>Here is the code:
 In views:</p>
<pre><code>def myfunction():
    return "Actual data"
</code></pre>
<p>In test:</p>
<pre><code>class TestBasic(unittest.TestCase):
    @patch('trailblazer.views.myfunction')
    def testMyFunction(self, val):
        print(val)
        val.return_value = "Test value"
        print(val)
        op = myfunction()
        print(op)
</code></pre>
<p>output:</p>
<pre><code>&lt;MagicMock name='myfunction' id='4520521120'&gt;
&lt;MagicMock name='myfunction' id='4520521120'&gt;
Actual data
.
----------------------------------------------------------------------
Ran 1 test in 0.001s
</code></pre>
<p>PS: I don't have my methods in a class and I don't want to change that.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have a direct reference to <code>myfunction()</code> in your test module, and <em>that reference</em> is never patched. You only patched the reference in the <code>trailblazer.views</code> module.</p>
<p>Your test would work if you used that reference instead of <code>myfunction</code>:</p>
<pre><code>from trailblazer import views

class TestBasic(unittest.TestCase):
    @patch('trailblazer.views.myfunction')
    def testMyFunction(self, val):
        print(val)
        val.return_value = "Test value"
        print(val)
        op = views.myfunction()
        print(op)
</code></pre>
<p>However, a more <em>meaningful</em> test is to test the code that <em>uses</em> <code>myfunction()</code>. You use mocking to be able to focus on the behaviour of a specific unit of code, where mocking lets you precisely control interactions with <em>other</em> units.</p>
<p>In other words, if you have code like:</p>
<pre><code>def some_function_to_test():
    # other things
    result = myfunction()
    # more things working on result
    return final_result
</code></pre>
<p>then <em>when testing <code>some_function_to_test()</code></em> it makes sense to patch <code>myfunction()</code>.</p>
<p>I recommend you read up on how Python names work; I highly recommend <a href="https://nedbatchelder.com/text/names.html" rel="nofollow noreferrer"><em>Facts and myths about Python names and values</em></a>, together with <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="nofollow noreferrer"><em>Where to patch</em></a> in the <code>unittest.mock</code> documentation.</p>
</div>
<span class="comment-copy">I believe that this question, even though over simplified can help others who don't initially understand, like me, that the function that is actually being used needs to be mocked and not the one that was being imported. Also since, there was scope for a valid answer, the question seems valid to me. Hence, the significance of down voting the question is not very clear anymore. I would appreciate if you could tell me what can I do to improve the question.  Thanks!</span>
<span class="comment-copy">@sinshil: I can't read minds, sorry. There is a tooltip on the downvote button that could be a reason, and the only advice I can give you is to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> thoroughly and try to apply the advice.</span>
<span class="comment-copy">Sorry. I was merely trying to understand ,being new to this.</span>
