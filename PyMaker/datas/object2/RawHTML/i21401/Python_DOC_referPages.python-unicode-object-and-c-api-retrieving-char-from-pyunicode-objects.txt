<div class="post-text" itemprop="text">
<p>I am currently binding all of my C++ engine classes to python for game play scripting purposes.
The latest challenge is that when say you make a variable in the script a string such as</p>
<pre><code>string = 'hello world'
</code></pre>
<p>this becomes a PyUnicodeObject. Next we want to call a function on this object in the script from a bound C side function. PrintToLog( string ), as an example lets say this c-function is as such</p>
<pre><code>void PrintToLog( const char * thisString )
{
   //file IO stuff as expected
   myLog &lt;&lt; thisString;
   //more stuff involving fileIO
}
</code></pre>
<p>So my binding needs to extract a char * from the PyUnicodeObject which will be passed at first by the python to my generic function handler, which in turn will extract and covert the pyobjects to the proper c-side type and pass it to my function.</p>
<p>The only function I can find extracts a wchar_t*... Is there anyway to get the ascii representation since we will only be using the ascii character set.</p>
<p>EDIT: I am using Python 3.2 where all strings are unicode</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe the function you're looking for is <a href="http://docs.python.org/c-api/unicode.html#ascii-codecs">PyUnicode_AsASCIIString</a>. This will give you a non-unicode (ASCII) python string. And then you can take the normal approach for extracting a <code>char*</code> from that.</p>
</div>
<div class="post-text" itemprop="text">
<p>I was facing a similar problem with Python3. I solved it as follows.</p>
<p>If you have a <a href="http://docs.python.org/2/c-api/unicode.html" rel="noreferrer">PyUnicodeObject</a> "mystring", do something like</p>
<pre><code>PyObject * ascii_mystring=PyUnicode_AsASCIIString(mystring);
PrintToLog(PyBytes_AsString(ascii_mystring));
Py_DECREF(ascii_mystring);
</code></pre>
<p>PyBytes is explained <a href="http://docs.python.org/3/c-api/bytes.html" rel="noreferrer">here</a>.</p>
</div>
<span class="comment-copy">Is the object returned still defined as a PyUnicodeObject though? If so I could then call PyUnicode_AS_DATA to get the objects internal buffer, but if this is not returned as such what function exists that will allow me to extract the char *?</span>
<span class="comment-copy">Ok, that seems to get results. At the moment it is a string of random data, but I was able to extract data. Once I find what I am doing wrong everything should work out fine. Thank you for the help you two =)</span>
<span class="comment-copy">(if you're still around...) Could you please expand on "the normal approach for extracting a <code>char*</code> from that"?  I'm trying to figure out how to get a <code>char*</code>, and I see that PyUnicode_AsASCIIString returns a <code>PyObject*</code>... could I perhaps use <code>PyUnicode_AsUTF8</code>?</span>
<span class="comment-copy">@lindes Sure, I wrote some (hopefully close-to-valid) pseudo-code here: <a href="https://gist.github.com/eberle1080/7103201" rel="nofollow noreferrer">gist.github.com/eberle1080/7103201</a></span>
