<div class="post-text" itemprop="text">
<p>Using Python regular expressions how can you get a <code>True</code>/<code>False</code> returned? All Python returns is:</p>
<pre><code>&lt;_sre.SRE_Match object at ...&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>Match</code> objects are always true, and <code>None</code> is returned if there is no match. Just test for trueness.</p>
<pre><code>if re.match(...):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you really need <code>True</code> or <code>False</code>, just use <code>bool</code></p>
<pre><code>&gt;&gt;&gt; bool(re.search("hi", "abcdefghijkl"))
True
&gt;&gt;&gt; bool(re.search("hi", "abcdefgijkl"))
False
</code></pre>
<p>As other answers have pointed out, if you are just using it as a condition for an <code>if</code> or <code>while</code>, you can use it directly without wrapping in <code>bool()</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Ignacio Vazquez-Abrams is correct. But to elaborate, <code>re.match()</code> will return either <code>None</code>, which evaluates to <code>False</code>, or a match object, which will always be <code>True</code> as he said. Only if you want information about the part(s) that matched your regular expression do you need to check out the contents of the match object.</p>
</div>
<div class="post-text" itemprop="text">
<p>One way to do this is just to test against the return value. Because you're getting <code>&lt;_sre.SRE_Match object at ...&gt;</code> it means that this will evaluate to true. When the regular expression isn't matched you'll the return value None, which evaluates to false.</p>
<pre><code>import re

if re.search("c", "abcdef"):
    print "hi"
</code></pre>
<p>Produces <code>hi</code> as output.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is my method:</p>
<pre><code>import re
p = re.complie(r'hi')
print bool(p.match("abcdefghijkl"))
</code></pre>
</div>
<span class="comment-copy">re.match(...) would return true if the string's beginning part match the regular pattern. While search will confirm the pattern anywhere in the string.</span>
<span class="comment-copy">It may be more desirable to use <code>if re.match(...) is None:</code> instead</span>
<span class="comment-copy">sorry, did you address the comments in your answer? Its unclear to me, do you mind clarifying?</span>
<span class="comment-copy">May I ask <i>why</i> <code>re</code> is designed like this? If <code>match</code> objects are always true, why doesn't it just return <code>True</code> at the first place, given that we always need to know whether the answer is true or false anyway?</span>
<span class="comment-copy">@ytu: Because then you can do <a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">everything else you need to</a>.</span>
<span class="comment-copy"><code>bool</code> value is needed when the conditional statement contains boolean arithmetic operation. eg: if (re.search("a","abc") &amp; True):</span>
<span class="comment-copy">@AizzatSuhardi, <code>&amp;</code> is a <b>bitwise</b> operaration. <code>and</code> would be the <b>boolean</b> operation.</span>
<span class="comment-copy">thanks @JohnLaRooy. correction: <code>(re.search("a","abc") and True)</code></span>
<span class="comment-copy">how is this different from ignacio's answer?</span>
<span class="comment-copy">Wrapping in <code>bool</code> makes the intention of the programmer clear to the reader.</span>
<span class="comment-copy">You <i>always</i> get a return value; <code>None</code> is the default if nothing is explicitly returned.</span>
<span class="comment-copy">Thanks -- corrected that. I was just going by what I saw in the REPL.</span>
<span class="comment-copy">p = re.comp<b>il</b>e(r'hi')  :-P</span>
<span class="comment-copy">yeah and it returns "False"</span>
