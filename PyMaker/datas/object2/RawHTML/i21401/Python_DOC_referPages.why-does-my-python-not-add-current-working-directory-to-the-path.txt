<div class="post-text" itemprop="text">
<p>I keep seeing sites mentioning that the directory that you execute 'python ' get added to the python path. For example on <a href="http://www.stereoplex.com/blog/understanding-imports-and-pythonpath" rel="noreferrer">http://www.stereoplex.com/blog/understanding-imports-and-pythonpath</a>, the author cd's to the /tmp folder then does 'print(sys.path)' and lo and behold, the /tmp folder appears in the path list. Here is me trying this out on my system (with 2.6.6 installed):</p>
<p>example structure:  </p>
<pre><code>app/
  mymodule.py
  inner_folder/
    myscript.py
</code></pre>
<p>in myscript.py contains the line: </p>
<pre><code>import 'mymodule.py'
</code></pre>
<p>what i did:</p>
<pre><code>cd app
python inner_folder/myscript.py # ImportError
</code></pre>
<p>Since I am executing the interpreter from the app/ directory, shouldn't 'app' be put onto the python path? This is how a lot of the docs I have been reading have specified the behaviour should be. </p>
<p>Please enlighten!</p>
<p>(I have temporarily solved this by manually adding the folder I want into the environment but don't want to rely on that forever. Since many sites say this can be done, I'd like to reproduce it for myself)</p>
</div>
<div class="post-text" itemprop="text">
<p>It is the <em>script's</em> directory that is added, not the current directory. If you turn <code>inner_folder/</code> into a package then you can use <code>python -m inner_folder.myscript</code> in order to run the script while having <code>app/</code> added to <code>sys.path</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Whether or not the current directory is in <code>sys.path</code>, import statements usually look like:</p>
<pre><code>import mymodule
</code></pre>
<p>The code you wrote looks like:</p>
<pre><code>import 'mymodule.py'
</code></pre>
</div>
<span class="comment-copy">don't you mean : <code>import mymodule</code> instead of <code>import 'mymodule.py' </code>.</span>
<span class="comment-copy">+1: indeed, even with the import fixed, this is the real solution.</span>
<span class="comment-copy">Thank you for clarifying. I knew the script's directory was added but the only reason I believed that the "current directory" was added as well was because it used to work. I swear! Something  must have happened to make it stop working. I don't recall modifying the PYTHONPATH in any way so this is why I asked this question.</span>
<span class="comment-copy">When running Python 2.7 in mac OS 10.7.5, the current directory is added for me, and the original example code works.</span>
<span class="comment-copy">@CypressFrankenfeld, not sure why your current directory is added, but just for a sanity check, you might want to first execute <code>unset PYTHONPATH</code>.</span>
<span class="comment-copy">@CypressFrankenfeld: in python versions prior to 3.4, an empty PYTHONPATH resulted in '.' being added to sys.path. See <a href="https://docs.python.org/3/whatsnew/3.4.html#changes-in-python-command-behavior" rel="nofollow noreferrer">docs.python.org/3/whatsnew/â€¦</a></span>
