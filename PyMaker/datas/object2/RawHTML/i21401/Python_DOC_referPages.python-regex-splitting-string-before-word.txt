<div class="post-text" itemprop="text">
<p>I am trying to split a string in python before a specific word. For example, I would like to split the following string before <code>"path:"</code>. </p>
<ul>
<li>split string before <code>"path:"</code></li>
<li>input: <code>"path:bte00250 Alanine, aspartate and glutamate metabolism path:bte00330 Arginine and proline metabolism"</code></li>
<li>output: <code>['path:bte00250 Alanine, aspartate and glutamate metabolism', 'path:bte00330 Arginine and proline metabolism']</code></li>
</ul>
<p>I have tried </p>
<pre><code>rx = re.compile("(:?[^:]+)")
rx.findall(line)
</code></pre>
<p>This does not split the string anywhere. The trouble is that the values after <code>"path:"</code> will never be known to specify the whole word. Does anyone know how to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>using a regular expression to split your string seems a bit overkill: the string <code>split()</code> method may be just what you need.</p>
<p>anyway, if you really need to match a regular expression in order to split your string, you should use the <a href="http://docs.python.org/library/re.html#re.split" rel="nofollow"><code>re.split()</code></a> method, which splits a string upon a regular expression match.</p>
<p>also, use a correct regular expression for splitting:</p>
<pre><code>&gt;&gt;&gt; line = 'path:bte00250 Alanine, aspartate and glutamate metabolism path:bte00330 Arginine and proline metabolism'
&gt;&gt;&gt; re.split(' (?=path:)', line)
['path:bte00250 Alanine, aspartate and glutamate metabolism', 'path:bte00330 Arginine and proline metabolism']
</code></pre>
<p>the <code>(?=...)</code> group is a lookahead assertion: the expression matches a space <em>(note the space at the start of the expression)</em> which is followed by the string <code>'path:'</code>, without consuming what follows the space.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do <code>["path:"+s for s in line.split("path:")[1:]]</code> instead of using a regex. (note that we skip first match, that has no "path:" prefix.</p>
</div>
<div class="post-text" itemprop="text">
<pre>
in_str = "path:bte00250 Alanine, aspartate and glutamate metabolism path:bte00330 Arginine and proline metabolism"
in_list = in_str.split('path:')
print ",path:".join(in_list)[1:]
</pre>
</div>
<div class="post-text" itemprop="text">
<p>This can be done without regular expressons.  Given a string:</p>
<pre><code>s = "path:bte00250 Alanine, aspartate ... path:bte00330 Arginine and ..."
</code></pre>
<p>We can temporarily replace the desired word with a placeholder. The placeholder is a single character, which we use to split by:</p>
<pre><code>word, placeholder = "path:", "|"
s = s.replace(word, placeholder).split(placeholder)
s
# ['', 'bte00250 Alanine, aspartate ... ', 'bte00330 Arginine and ...']
</code></pre>
<p>Now that the string is split, we can rejoin the original word to each sub-string using a list comprehension:</p>
<pre><code>["".join([word, i]) for i in s if i]
# ['path:bte00250 Alanine, aspartate ... ', 'path:bte00330 Arginine and ...']
</code></pre>
</div>
<span class="comment-copy">I didn't get why the whitespace is needed in the regex. Luckily, I got a good answer to my doubts <a href="http://stackoverflow.com/questions/6712855/two-very-close-regexes-with-lookahead-assertions-in-python-what-does-make-them/6712917#6712917">here</a>. I suspect some people can have the same doubt so I post the link here.</span>
<span class="comment-copy">Why does this not work? <code>re.split(" (?=\d)", "User1")</code> gives <code>['User1']</code></span>
<span class="comment-copy">@farukdgn the simple answer is that your regex does not match anything in your input string, i.e. you are searching for a space followed by a digit but there is no space in your input string. for your regex to work you would have to remove the space, but as explained in the link posted by brandizi in the above comment, re.split() cannot split on a zero length-match, so you will have to include some matching context before the lookahead expression. the space was working in the original question because the input always contained a space before the string "path:".</span>
<span class="comment-copy">because the character matched by "." is consumed in the split. you obviously do not understand how re.split() work, please read the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">documentation</a>. also, this has nothing to do with the original question, if you need further guidance, please post a new question here on stackoverflow.</span>
<span class="comment-copy">@AdrienPlisson I figured out the issue. You answered the question under the wrong assumption that each <code>path:</code> would have a space before it (which is not mentioned in the question nor the answer) therefore I hadn't give that part enough attention.</span>
