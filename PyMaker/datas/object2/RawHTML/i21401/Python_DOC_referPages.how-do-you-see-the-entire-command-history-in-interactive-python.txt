<div class="post-text" itemprop="text">
<p>I'm working on the default python interpreter on Mac OS X, and I Cmd+K (cleared) my earlier commands. I can go through them one by one using the arrow keys. But is there an option like the --history option in bash shell, which shows you all the commands you've entered so far?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/library/readline.html#readline.get_current_history_length" rel="noreferrer"><code>readline.get_current_history_length()</code></a> to get the length, and <a href="http://docs.python.org/library/readline.html#readline.get_history_item" rel="noreferrer"><code>readline.get_history_item()</code></a> to view each.</p>
</div>
<div class="post-text" itemprop="text">
<p>Code for printing the entire history (just for future reference):</p>
<h3>python2</h3>
<pre><code>import readline
for i in range(readline.get_current_history_length()):
    print readline.get_history_item(i + 1)
</code></pre>
<h3>python3</h3>
<pre><code>import readline
for i in range(readline.get_current_history_length()):
    print (readline.get_history_item(i + 1))
</code></pre>
<p><strong>Edit</strong>: Note <code>get_history_item()</code> is indexed from 1 to n.</p>
</div>
<div class="post-text" itemprop="text">
<p>With python 3 interpreter the history is written to<br/>
<code>~/.python_history</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Since the above only works for python 2.x
for python 3.x (specifically 3.5) is similar but with a slight modification:</p>
<pre><code>import readline
for i in range(readline.get_current_history_length()):
    print (readline.get_history_item(i + 1))
</code></pre>
<p>note the extra ()</p>
<p>(using shell scripts to parse .python_history or using python to modify the above code is a matter of personal taste and situation imho)</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to write the history to a file:</p>
<pre><code>import readline
with open('pyhistory.txt', 'w') as f:
    for i in range(readline.get_current_history_length()):
        f.write(readline.get_history_item(i + 1) + "\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A simple function to get the history similar to unix/bash version.</p>
<p>Hope it helps some new folks.</p>
<pre><code>def ipyhistory(lastn=None):
"""
param: lastn Defaults to None i.e full history. If specified then returns lastn records from history.
       Also takes -ve sequence for first n history records.
"""
import readline
assert lastn is None or isinstance(lastn, int), "Only integers are allowed."
hlen = readline.get_current_history_length()

is_neg = lastn is not None and lastn &lt; 0
if not is_neg:
    flen = len(str(hlen)) if not lastn else len(str(lastn))
    for r in range(1,hlen+1) if not lastn else range(1, hlen+1)[-lastn:]:
        print(": ".join([str(r if not lastn else r + lastn - hlen ).rjust(flen), readline.get_history_item(r)]))
else:
    flen = len(str(-hlen))
    for r in range(1, -lastn + 1):
        print(": ".join([str(r).rjust(flen), readline.get_history_item(r)]))
</code></pre>
<p>Snippet: Tested with Python3. Let me know if there are any glitches with python2.
Samples:</p>
<blockquote>
<p>Full History : <code>ipyhistory()</code></p>
<p>Last 10 History: <code>ipyhistory(10)</code></p>
<p>First 10 History: <code>ipyhistory(-10)</code></p>
</blockquote>
<p><strong>Hope it helps fellas.</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>In IPython <code>%history -g</code> should give you the entire command history. The default configuration also saves your history into a file named .python_history in your user directory.</p>
</div>
<div class="post-text" itemprop="text">
<p>This should give you the commands printed out in separate lines:</p>
<pre><code>import readline
map(lambda p:print(readline.get_history_item(p)),
    map(lambda p:p, range(readline.get_current_history_length()))
)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>@Jason-V, it really help, thanks. then, i found <a href="http://code.activestate.com/recipes/473900-history-and-completion-for-the-python-shell/" rel="nofollow noreferrer">this</a> examples and composed to own snippet. </p>
<pre><code>#!/usr/bin/env python3
import os, readline, atexit
python_history = os.path.join(os.environ['HOME'], '.python_history')
try:
  readline.read_history_file(python_history)
  readline.parse_and_bind("tab: complete")
  readline.set_history_length(5000)
  atexit.register(readline.write_history_file, python_history)
except IOError:
  pass
del os, python_history, readline, atexit 
</code></pre>
</div>
<span class="comment-copy">The <code>history</code> shell command is a program like any other. It isn't an "option" in <code>bash</code> command.</span>
<span class="comment-copy">To be precise: <code>history</code> is a shell builtin.</span>
<span class="comment-copy">For <a href="http://ipython.org/" rel="nofollow noreferrer">iPython</a> the answer is <code>%history</code>. And the <code>-g</code> option gets <a href="http://stackoverflow.com/a/32019203/673991">earlier sessions</a>.</span>
<span class="comment-copy">%history -g + %edit works best</span>
<span class="comment-copy">This is perfect.</span>
<span class="comment-copy">One liner: <code>import readline; print '\n'.join([str(readline.get_history_item(i)) for i in range(readline.get_current_history_length())])</code></span>
<span class="comment-copy">This answer (and its non-example counterpart) exemplifies how important examples are to people. Thanks.</span>
<span class="comment-copy">Cool! I've added an <code>history()</code> function with the above in my Python interpreter startup script (a script that's pointed to by env. var <code>$PYTHONSTARTUP</code>).  From now on, I can simply type <code>history()</code> in any interpreter session ;-)</span>
<span class="comment-copy">seems like this would be a cool thing to add to python itself...</span>
<span class="comment-copy">I don't have this directory and I use Python 3.5.2</span>
<span class="comment-copy">This would be for Unix-like OSes. I was able to retrieve my history on macOS with <code>cat ~/.python_history</code></span>
<span class="comment-copy">Thanks for this answer. I later found this covered in the docs here: <a href="https://docs.python.org/3/library/site.html#readline-configuration" rel="nofollow noreferrer">docs.python.org/3/library/site.html#readline-configuration</a></span>
<span class="comment-copy">Unfortunately, history doesn't seem to get updated when using virtual environments :-/</span>
<span class="comment-copy">You need to <code>quit()</code> the interpreter for the current session history to be included in <code>~/.python_history</code></span>
<span class="comment-copy">will this persist across python sessions like ruby's pry history?</span>
<span class="comment-copy">hi, thanks. I made your code snippet into a file xx.py. then after opening python, I did import xx. THen I tried ipyhistory() but it says, "&gt;&gt;&gt; ipyhistory Traceback (most recent call last):   File "&lt;stdin&gt;", line 1, in &lt;module&gt; NameError: name 'ipyhistory' is not defined".  What's wrong?</span>
<span class="comment-copy">Can you please be more specific on formatting the code? Are you saying the parentheses are not matching?</span>
<span class="comment-copy">I've fixed the formatting with some simple indentation. @AleksAndreev you may remove your downvote.</span>
