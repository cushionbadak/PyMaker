<div class="post-text" itemprop="text">
<p>I came across this:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.system('ls')
file.txt README
0
</code></pre>
<p>What is return value of <a href="https://docs.python.org/2/library/os.html#os.system"><code>os.system()</code></a>?  Why I get 0?</p>
</div>
<div class="post-text" itemprop="text">
<p>The return value of <a href="https://docs.python.org/3/library/os.html#os.system" rel="noreferrer"><code>os.system</code></a> is OS-dependant.</p>
<p>On Unix, the return value is a 16-bit number that contains two different pieces of information. From the documentation:</p>
<blockquote>
<p>a 16-bit number, whose low byte is the signal number that killed the process, and whose high byte is the exit status (if the signal number is zero)</p>
</blockquote>
<p>So if the signal number (low byte) is 0, it would, in theory, be safe to shift the result by 8 bits (<code>result &gt;&gt; 8</code>) to get the error code. The function <a href="https://docs.python.org/3/library/os.html#os.WEXITSTATUS" rel="noreferrer"><code>os.WEXITSTATUS</code></a> does exactly this. If the error code is 0, that usually means that the process exited without errors.</p>
<p>On Windows, the documentation specifies that the return value of <code>os.system</code> is shell-dependant. If the shell is <code>cmd.exe</code> (the default one), the value is the return code of the process. Again, 0 would mean that there weren't errors.</p>
<p>For others error codes:</p>
<ul>
<li><a href="http://tldp.org/LDP/abs/html/exitcodes.html" rel="noreferrer">on Linux</a></li>
<li><a href="http://msdn.microsoft.com/en-us/library/ms681381%28v=vs.85%29.aspx" rel="noreferrer">on Windows</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><code>os.system('command')</code> returns a 16 bit number, which first 8 bits from left(lsb) talks about signal used by os to close the command, Next 8 bits talks about return code of command. </p>
<pre><code>00000000    00000000
exit code   signal num
</code></pre>
<p>Example 1 - command exit with code 1</p>
<pre><code>os.system('command') #it returns 256
256 in 16 bits -  00000001 00000000
Exit code is 00000001 which means 1
</code></pre>
<p>Example 2 - command exit with code 3</p>
<pre><code>os.system('command') # it returns 768
768 in 16 bits  - 00000011 00000000
Exit code is 00000011 which means 3
</code></pre>
<p>Now try with signal - 
Example 3 - Write a program which sleep for long time use it as command in os.system() and then kill it by kill -15 or kill -9</p>
<pre><code>os.system('command') #it returns signal num by which it is killed
15 in bits - 00000000 00001111
Signal num is 00001111 which means 15
</code></pre>
<p>You can have a python program as command = 'python command.py'</p>
<pre><code>import sys
sys.exit(n)  # here n would be exit code
</code></pre>
<p>In case of c or c++ program you can use return from main() or exit(n) from any function  #</p>
<p>Note - This is applicable on unix</p>
<blockquote>
<p>On Unix, the return value is the exit status of the process encoded in
  the format specified for wait(). Note that POSIX does not specify the
  meaning of the return value of the C system() function, so the return
  value of the Python function is system-dependent.</p>
<p>os.wait()</p>
<p>Wait for completion of a child process, and return a tuple containing its pid and exit status indication: a 16-bit number, whose
  low byte is the signal number that killed the process, and whose high
  byte is the exit status (if the signal number is zero); the high bit
  of the low byte is set if a core file was produced.</p>
<pre><code>Availability: Unix
</code></pre>
</blockquote>
<p>.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>"On Unix, the return value is the exit
  status of the process encoded in the
  format specified for wait(). Note that
  POSIX does not specify the meaning of
  the return value of the C system()
  function, so the return value of the
  Python function is system-dependent."</p>
</blockquote>
<p><a href="http://docs.python.org/library/os.html#os.system">http://docs.python.org/library/os.html#os.system</a></p>
<p>There is no error, so the exit code is zero</p>
</div>
<div class="post-text" itemprop="text">
<p>os.system() returns some unix output, not the command output. So, if there is no error then exit code written as 0.</p>
</div>
<div class="post-text" itemprop="text">
<p>You might want to use </p>
<pre><code>return_value = os.popen('ls').read()
</code></pre>
<p>instead. <code>os.system</code> only returns the error value. </p>
</div>
<span class="comment-copy"><code>os.system("ls")</code> is for running a command where you only care if it ran or not.  If you want the stdout output, use something like <code>commands.getstatusoutput("ls")[1]</code> as defined here: <a href="https://docs.python.org/2/library/commands.html" rel="nofollow noreferrer">docs.python.org/2/library/commands.html</a></span>
<span class="comment-copy">(But <code>os.system("ls")</code> will, however, output the result of an <code>ls</code> if you do not take steps otherwise. I'm not sure in this case that you would want to suppress the additional output, but if you did, one approach would be <code>os.system("ls &gt; /dev/null 2&gt;&amp;1")</code>.</span>
<span class="comment-copy">OS maintains an errno as variable which has the exit status of recently executed process. erron is global , this errno value is returned after execution which states  whether cmd executed successfully or failed</span>
<span class="comment-copy">This isn't an answer, and the Linux link doesn't go anywhere useful now.</span>
<span class="comment-copy">@SteveBennett Thanks, I fixed the link. Why do you think it does not qualify as an answer? The question was "what is this number", I gave the answer.</span>
<span class="comment-copy">@brandones Thanks for pointing that out. This answer was written ages ago and it clearly was missing important information. It should be correct now.</span>
<span class="comment-copy">Solid. Sorry about the tone, I had just spent a while grappling with exactly such a bug. Note that you can use <code>os.WEXITSTATUS(os.system(command))</code> to get the exit status.</span>
<span class="comment-copy">Can you post any documentation or link which says this?</span>
<span class="comment-copy">@shane My answer is applicable for unix, I am not sure on windows, I have referred below - <a href="https://docs.python.org/2/library/os.html#os.system" rel="nofollow noreferrer">docs.python.org/2/library/os.html#os.system</a>, which says it's return would be as per system call wait(), then I referred -  <a href="https://docs.python.org/2/library/os.html#os.wait" rel="nofollow noreferrer">docs.python.org/2/library/os.html#os.wait</a></span>
<span class="comment-copy">NB: You can get the return code with <code>os.WEXITSTATUS(os.system(my_call))</code>. So for example <code>sys.exit(os.WEXITSTATUS(os.system('exit 2')))</code> will exit with status code 2.</span>
<span class="comment-copy">And the return code os os.wait() encodes both the return value and the signal that killed the process.  See <a href="http://stackoverflow.com/a/7616227/496127">stackoverflow.com/a/7616227/496127</a></span>
