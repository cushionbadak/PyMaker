<div class="post-text" itemprop="text">
<p>I have a data file containing timestamps like "1331856000000". Unfortunately, I don't have a lot of documentation for the format, so I'm not sure how the timestamp is formatted. I've tried Python's standard <code>datetime.fromordinal()</code> and <code>datetime.fromtimestamp()</code> and a few others, but nothing matches. I'm pretty sure that particular number corresponds to the current date (e.g. 2012-3-16), but not much more.</p>
<p>How do I convert this number to a <code>datetime</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.fromtimestamp" rel="noreferrer"><code>datetime.datetime.fromtimestamp()</code></a> is correct, except you are probably having timestamp in miliseconds (like in JavaScript), but <code>fromtimestamp()</code> expects Unix timestamp, in seconds.</p>
<p>Do it like that:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; your_timestamp = 1331856000000
&gt;&gt;&gt; date = datetime.datetime.fromtimestamp(your_timestamp / 1e3)
</code></pre>
<p>and the result is:</p>
<pre><code>&gt;&gt;&gt; date
datetime.datetime(2012, 3, 16, 1, 0)
</code></pre>
<p>Does it answer your question?</p>
<p><strong>EDIT</strong>: J.F. Sebastian correctly suggested to <strong>use true division</strong> by <code>1e3</code> (float <code>1000</code>). The difference is significant, if you would like to get precise results, thus I changed my answer. The difference results from the default behaviour of Python 2.x, which always returns <code>int</code> when dividing (using <code>/</code> operator) <code>int</code> by <code>int</code> (this is called <em>floor division</em>). By replacing the divisor <code>1000</code> (being an <code>int</code>) with the <code>1e3</code> divisor (being representation of <code>1000</code> as float) or with <code>float(1000)</code> (or <code>1000.</code> etc.), the division becomes <em>true division</em>. Python 2.x returns <code>float</code> when dividing <code>int</code> by <code>float</code>, <code>float</code> by <code>int</code>, <code>float</code> by <code>float</code> etc. And when there is some fractional part in the timestamp passed to <code>fromtimestamp()</code> method, this method's result also contains information about that fractional part (as the number of microseconds).</p>
</div>
<span class="comment-copy">use true division: <code>/ 1e3</code></span>
<span class="comment-copy">@J.F.Sebastian: You are totally correct, I have edited my answer and added some explanation why you are right. If you do not agree with the explanation, please let me know.</span>
<span class="comment-copy">I find more clear to write x * 0.001 instead of x / 1e3</span>
<span class="comment-copy">This function is dangerous, because takes you timezone into consideration. Try looking up utcfromtimestamp</span>
<span class="comment-copy">@HaimBender Thanks! I feel like your comments deserve more attentions. <code>fromtimestamp</code> give you the date and time in local time <code>utcfromtimestamp</code> gives you the date and time in UTC.</span>
