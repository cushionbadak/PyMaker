<div class="post-text" itemprop="text">
<p>I'm trying to build a package for a django application, but excluding all tests modules.
I have tried setting </p>
<pre><code>exclude = ["*.tests", "*.tests.*", "tests.*", "tests"]
</code></pre>
<p>on <code>find_packages</code> and defining a <code>MANIFEST.in</code>, but the tests are always compiled and included in the bundle.</p>
<p>Any clues?</p>
</div>
<div class="post-text" itemprop="text">
<p>I found the combination both adding <a href="http://setuptools.readthedocs.io/en/latest/setuptools.html#using-find-packages" rel="nofollow noreferrer"><code>find_packages</code></a> rule and writing out <a href="https://docs.python.org/3/distutils/sourcedist.html#specifying-the-files-to-distribute" rel="nofollow noreferrer"><code>MANIFEST.in</code> rules</a> i.e. <code>prune tests</code></p>
<p>Note that for python 3.2 and older you must have <code>__init__.py</code> in tests root, for <code>find_packages</code> command to consider tests folder to be a package.</p>
<p>Sample <code>find_packages</code> exclude command in <code>setup.py</code></p>
<pre><code> packages=find_packages(
    exclude=["*.tests", "*.tests.*", "tests.*", "tests"]),
</code></pre>
<p>Sample <code>MANIFEST.in</code></p>
<pre><code> include *.txt *.ini *.cfg *.rst
 recursive-include fmcc *.ico *.png *.css *.gif *.jpg *.pt *.txt *.mak *.mako *.js *.html *.xml
 prune tests
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Can I asked...did you try:</p>
<p><strong>find_packages(exclude=['tests'])</strong></p>
</div>
<span class="comment-copy">I did. The <code>exclude</code> option only ignore packages(directories), not modules (tests.py).</span>
