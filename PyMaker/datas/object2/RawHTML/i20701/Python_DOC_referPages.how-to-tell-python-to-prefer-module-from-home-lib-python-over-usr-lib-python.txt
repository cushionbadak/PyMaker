<div class="post-text" itemprop="text">
<p>In Python, I'm getting an error because it's loading a module from <code>/usr/lib/python2.6/site-packages</code> but I'd like it to use my version in <code>$HOME/python-modules/lib/python2.6/site-packages</code>, which I installed using <code>pip-python --install-option="--prefix=$HOME/python-modules --ignore-installed</code></p>
<p>How can I tell Python to use my version of the library? Setting <code>PYTHONPATH</code> to <code>$HOME/python-modules/lib/python2.6/site-packages</code> doesn't help, since <code>/usr/lib/...</code> apparently has precedence.</p>
</div>
<div class="post-text" itemprop="text">
<p>Take a look at the <a href="http://docs.python.org/library/site.html" rel="noreferrer">site</a> module for ways to customize your environment.</p>
<p>One way to accomplish this is to add a file to a location currently on <code>sys.path</code> called <code>usercustomize.py</code>, when Python is starting up it will automatically import this file, and you can use it to modify <code>sys.path</code>.</p>
<p>First, set <code>$PYTHONPATH</code> to <code>$HOME</code> (or add <code>$HOME</code> if <code>$PYTHONPATH</code> has a value), then create the file <code>$HOME/usercustomize.py</code> with the following contents:</p>
<pre><code>import sys, os
my_site = os.path.join(os.environ['HOME'],
                       'python-modules/lib/python2.6/site-packages')
sys.path.insert(0, my_site)
</code></pre>
<p>Now when you start Python you should see your custom site-packages directory before the system default on <code>sys.path</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Newer Python versions now have built-in support to search the opendesktop location:</p>
<pre><code>$HOME/.local/lib/pythonX.Y/site-packages
</code></pre>
<p>If you put your local modules there you don't have to any sys.path manipulations. </p>
</div>
<div class="post-text" itemprop="text">
<p>If one has multiple versions of a package installed, say e.g. SciPy:</p>
<pre><code>&gt;&gt;&gt; import scipy; print(scipy.__version__); print(scipy.__file__)
0.17.0
/usr/lib/python3/dist-packages/scipy/__init__.py
</code></pre>
<p>and one would like the user installed version (installed e.g. using <code>pip install --user --upgrade scipy</code>) to be prefered, one needs a <a href="https://docs.python.org/3/library/site.html#module-site" rel="nofollow noreferrer">usercustomize.py</a> file in <code>~/.local/lib/python3.5/site-packages/</code> with e.g. this content:</p>
<pre><code>import sys, os
my_site = os.path.join(
    os.environ['HOME'], '.local/lib/python%d.%d/site-packages' % (
        sys.version_info[0], sys.version_info[1]))
for idx, pth in enumerate(sys.path):
    if pth.startswith('/usr'):
        sys.path.insert(idx, my_site)
        break
else:
    raise ValueError("No path starting with /usr in sys.path")
</code></pre>
<p>(the for loop selecting index ensures that packages installed in "develop mode" takes precedence) now we get our user specific version of SciPy:</p>
<pre><code>&gt;&gt;&gt; import scipy; print(scipy.__version__); print(scipy.__file__)
0.18.1
/home/user/.local/lib/python3.5/site-packages/scipy/__init__.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>to prefer packages installed to userbase (e.g. <code>pip install --user --upgrade cool_thing</code> )</p>
<p>in <code>~/.bashrc</code>,<code>~/.profile</code>, or whatever the init file for your shell is, add</p>
<pre><code>export PYTHONUSERBASE="$HOME/python-modules"
</code></pre>
<p>in <code>$PYTHONUSERBASE/usercustomize.py</code></p>
<pre><code>#!/usr/bin/env python
import sys, site
sys.path.insert(0, site.getusersitepackages())
</code></pre>
</div>
<span class="comment-copy">have you tried just prepending the path to your version of the library before the import? i.e. <code>import sys; sys.path.insert(0,"/path/to/your/version"); import something</code></span>
<span class="comment-copy">I have never done this my self, but I think you could use imp.find_module() and imp.load_module(). <a href="http://docs.python.org/library/imp.html" rel="nofollow noreferrer">Documentation</a></span>
