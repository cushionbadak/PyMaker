<div class="post-text" itemprop="text">
<p>I am creating a module in python, in which I am receiving the date in integer format like <code>20120213</code>, which signifies the 13th of Feb, 2012. Now, I want to convert this integer formatted date into a python date object.</p>
<p>Also, if there is any means by which I can subtract/add the number of days in such integer formatted date to receive the date value in same format? like subtracting 30 days from <code>20120213</code> and receive answer as <code>20120114</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>
I would suggest the following simple approach for conversion:</p>
<pre class="lang-py prettyprint-override"><code>from datetime import datetime, timedelta
s = "20120213"
# you could also import date instead of datetime and use that.
date = datetime(year=int(s[0:4]), month=int(s[4:6]), day=int(s[6:8]))
</code></pre>
<p>For adding/subtracting an arbitary amount of days (seconds work too btw.), you could do the following:</p>
<pre class="lang-py prettyprint-override"><code>date += timedelta(days=10)
date -= timedelta(days=5)
</code></pre>
<p>And convert back using:</p>
<pre class="lang-py prettyprint-override"><code>s = date.strftime("%Y%m%d")
</code></pre>
<p>To convert the integer to a string safely, use:</p>
<pre class="lang-py prettyprint-override"><code>s = "{0:-08d}".format(i)
</code></pre>
<p>This ensures that your string is eight charecters long and left-padded with zeroes, even if the year is smaller than 1000 (negative years could become funny though).</p>
<p>Further reference: <a href="http://docs.python.org/library/datetime.html#datetime-objects" rel="noreferrer">datetime objects</a>, <a href="http://docs.python.org/library/datetime.html#timedelta-objects" rel="noreferrer">timedelta objects</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This question is already answered, but for the benefit of others looking at this question I'd like to add the following suggestion: Instead of doing the slicing yourself as suggested above you might also use <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="noreferrer"><code>strptime()</code></a> which is (IMHO) easier to read and perhaps the preferred way to do this conversion.</p>
<pre><code>import datetime
s = "20120213"
s_datetime = datetime.datetime.strptime(s, '%Y%m%d')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is what I believe answers the question (Python 3, with type hints):</p>
<pre><code>from datetime import date


def int2date(argdate: int) -&gt; date:
    """
    If you have date as an integer, use this method to obtain a datetime.date object.

    Parameters
    ----------
    argdate : int
      Date as a regular integer value (example: 20160618)

    Returns
    -------
    dateandtime.date
      A date object which corresponds to the given value `argdate`.
    """
    year = int(argdate / 10000)
    month = int((argdate % 10000) / 100)
    day = int(argdate % 100)

    return date(year, month, day)


print(int2date(20160618))
</code></pre>
<p>The code above produces the expected <code>2016-06-18</code>.</p>
</div>
<span class="comment-copy">thnx :) Happy Coding...</span>
<span class="comment-copy">but what i m recieving is not a string. its an integer</span>
<span class="comment-copy">well that's not hard, you can use str(x) to convert the integer into a string.</span>
<span class="comment-copy">@peter: ok... thnx for suggestion</span>
<span class="comment-copy">@Uday0119: I added a suggestion how to do it properly even for small years.</span>
<span class="comment-copy">How about a pandas series consisting of similar strings/integers like "20120203"?</span>
<span class="comment-copy"><code>df['order_date'] = df['order_date'].apply(lambda x: pd.to_datetime(str(x), format='%Y%m%d'))</code></span>
<span class="comment-copy">I don't know how this works (black magic I suspect) but it works a treat! As it's the only one that actually answers the OP it should be the accepted answer.</span>
