<div class="post-text" itemprop="text">
<p>I have a string and I want to match something at the start <em>and</em> end with a single search pattern. How can this be done? </p>
<p>Let's say we have a string like:</p>
<pre><code> string = "ftp://www.somewhere.com/over/the/rainbow/image.jpg"
</code></pre>
<p>I want to do something like this:</p>
<pre><code> re.search("^ftp:// &amp; .jpg$" ,string)
</code></pre>
<p>Obviously, it's incorrect, but I hope it gets my point across. Is this possible?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/library/re.html#re.match" rel="noreferrer"><code>re.match</code></a> will <a href="http://docs.python.org/library/re.html#matching-vs-searching" rel="noreferrer">match the string at the beginning</a>, in contrast to <code>re.search</code>:</p>
<pre><code>re.match(r'(ftp|http)://.*\.(jpg|png)$', s)
</code></pre>
<p>Two things to note here:</p>
<ul>
<li><code>r''</code> is used for the string literal to make it trivial to have backslashes inside the regex</li>
<li><code>string</code> is a standard module, so I chose <code>s</code> as a variable</li>
<li>If you use a regex more than once, you can use <a href="http://docs.python.org/library/re.html#re.compile" rel="noreferrer"><code>r = re.compile(...)</code></a> to built the state machine once and then use <code>r.match(s)</code> afterwards to match the strings</li>
</ul>
<p>If you want, you can also use the <a href="https://docs.python.org/2/library/urlparse.html" rel="noreferrer"><code>urlparse</code></a> module to parse the URL for you (though you still need to extract the extension):</p>
<pre><code>&gt;&gt;&gt; allowed_schemes = ('http', 'ftp')
&gt;&gt;&gt; allowed_exts = ('png', 'jpg')
&gt;&gt;&gt; from urlparse import urlparse
&gt;&gt;&gt; url = urlparse("ftp://www.somewhere.com/over/the/rainbow/image.jpg")
&gt;&gt;&gt; url.scheme in allowed_schemes
True
&gt;&gt;&gt; url.path.rsplit('.', 1)[1] in allowed_exts
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about not using a regular expression at all?</p>
<pre class="lang-py prettyprint-override"><code>if string.startswith("ftp://") and string.endswith(".jpg"):
</code></pre>
<p>Don't you think this reads nicer?</p>
<p>You can also support multiple options for start and end:</p>
<pre><code>if (string.startswith(("ftp://", "http://")) and 
    string.endswith((".jpg", ".png"))):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Don't be <a href="https://docs.python.org/3/howto/regex.html#greedy-versus-non-greedy" rel="nofollow noreferrer">greedy</a>, use <code>^ftp://(.*?)\.jpg$</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Try</p>
<pre><code> re.search(r'^ftp://.*\.jpg$' ,string)
</code></pre>
<p>if you want a regular expression search. Note that you have to escape the period because it has a special meaning in regular expressions.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re

s = "ftp://www.somewhere.com/over/the/rainbow/image.jpg"
print(re.search("^ftp://.*\.jpg$", s).group(0))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I want extract all numeric, include int and float.</p>
<p>and it works for me.</p>
<pre><code>import re

s = '[11-09 22:55:41] [INFO ]  [  4560] source_loss: 0.717, target_loss: 1.279, 
transfer_loss:  0.001, total_loss:  0.718'

print([float(s) if '.' in s else int(s) for s in re.findall(r'-?\d+\.?\d*', s)])
</code></pre>
<p>refs: <a href="https://www.tutorialspoint.com/How-to-extract-numbers-from-a-string-in-Python" rel="nofollow noreferrer">https://www.tutorialspoint.com/How-to-extract-numbers-from-a-string-in-Python</a></p>
</div>
<span class="comment-copy">I would, but it's more complicated because there are a number valid starting and ending sequences. If I knew how to do this simple case I could make it work with the more complicated reality. :)</span>
<span class="comment-copy">@Google: You can also query for multiple strings, see my update.</span>
