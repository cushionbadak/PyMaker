<div class="post-text" itemprop="text">
<p>I'm trying to connect to a router over ssh and write a command to the shell.
I think the connection works, because I get an empty output and not an error message. I know that I have to use a keyfile to connect really on the device. Maybe that's the reason why the output is empty.</p>
<p><strong>This is my code:</strong></p>
<pre><code>mykey = os.path.expanduser('C:\\Users\\taaiaal1\\PycharmProjects\\hal_dmms_application\\dev_ssh')
command = 'pcb_cli -u cwmpd pcb://ipc:[/var/run/IGD] -i \'?\''

ssh = subprocess.Popen(["ssh", username + '@' + host + ':' + port, command],
                       shell=True,
                       stdout=subprocess.PIPE,
                       stderr=subprocess.PIPE)
result = ssh.stdout.readlines()
print(result)
</code></pre>
<p>Where should I integrate the keyfile?</p>
<p>I feel like checked every page google let me find and even in the subprocess python doc I couldn't find anything. Is this even possible? I'm using Python 3. </p>
</div>
<div class="post-text" itemprop="text">
<p>Some pointers:</p>
<ul>
<li>First of all <strong>port</strong> is not given after <code>:</code>, It it given with <code>-p</code> option</li>
<li>If key is required then you have to specify it using <code>-i</code> option. Make sure permissions on the key are <code>0400</code>.</li>
<li><p>You are giving remote command as a list and also giving <code>shell=True</code> these are in a way mutually exclusive options. If you want use shell=True then you give command as a single string.</p></li>
<li><p>If want to collect output of a remote command simply use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_output" rel="nofollow noreferrer">subprocess.check_output</a>. It uses popen() function inernally but gives you simpler interface. Don't forget try/except around the function as it raises exception if something went wrong with ssh itself or the remote command's exit status is non-zero.</p></li>
</ul>
<p>Your code may look like:</p>
<pre><code>try:
    out = subprocess.check_ouptput(["ssh", "-i", "&lt;path to your key&gt;", "-p", "&lt;port number&gt;", "{}@{}".format(user, host), command])
    print(out)
except CalledProcessError as e:
...
</code></pre>
<p>Look at my <a href="https://github.com/rsjethani/remote-exec/blob/master/remote-exec.py" rel="nofollow noreferrer">implementation</a> of executing remote commands if you want to see some of the good practices for executing remote commands.</p>
<p><strong>PS:</strong> There are two different ways of using subprocess functions: one which require a shell to execute your command for eg if the remote command has a wildcard(ls *.txt) OR your remote command does not require the shell for eg executing <code>uname -a</code>. Please look at the subprocess documentation link above.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the -i flag to specify an identity file. See the <a href="https://linux.die.net/man/1/ssh" rel="nofollow noreferrer">ssh manual under identity_file</a> </p>
<p>In your example, that would be</p>
<pre><code>ssh = subprocess.Popen(["ssh","-i "+mykey, username + '@' + host + ':' + port, command],
                   shell=True,
                   stdout=subprocess.PIPE,
                   stderr=subprocess.PIPE)
</code></pre>
<p>There are also high level SSH libraries available for Python.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try:</p>
<pre><code>ssh = subprocess.Popen(["ssh", "-i", "/path/to/key", username + '@' + host + ':' + port, command],
                       shell=True,
                       stdout=subprocess.PIPE,
                       stderr=subprocess.PIPE)
</code></pre>
<p>Popen expects an array of arguments formatted in a certain way.
The easiest way to get a proper arg table is to do it like this:</p>
<pre><code>command = "ssh -i my.key user@host"
args = command.split(' ')
ssh = subprocess.Popen(args)
</code></pre>
</div>
<span class="comment-copy">Why dont simply use paramiko instead. <a href="http://www.paramiko.org/" rel="nofollow noreferrer">paramiko.org</a></span>
<span class="comment-copy">But <code>username + "@" + host</code> is correct?</span>
<span class="comment-copy">Yes this is fine. Host part can be an ip address or a hostname like 'myserver'. For latter case the name should either be in your /etc/hosts file or recognized via DNS. I have edited the example in my answer</span>
<span class="comment-copy">I added a proxy an it worked with your advices. Thank you! Important to know is, that the output comes as binary streams. To convert i used <code>output.decode('utf-8')</code></span>
