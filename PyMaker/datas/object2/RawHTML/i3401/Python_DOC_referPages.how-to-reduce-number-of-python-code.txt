<div class="post-text" itemprop="text">
<p>How to reduce number of code when element does not already exist in dictionary? Otherwise assign it to the object.
Prove of python concept:</p>
<pre><code>class MyClass:
    pass

key = "test python"
item = MyClass()
d = {}
if d.get(key) is None:
    d[key] = item
else:
    item = d[key]
print(item)
</code></pre>
<p>Is it possible to remove if else statement?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can read python documentation -&gt; <strong><a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer">setdefault</a></strong>: </p>
<pre><code>class MyClass:
    pass

key = 'test python'
item = MyClass()
d = {}
item = d.setdefault(key, item)
</code></pre>
<p>It`s more pythonic!!!!</p>
</div>
<div class="post-text" itemprop="text">
<p>Read up on <a href="http://Read%20up%20documentation:%20https://docs.python.org/3.4/library/stdtypes.html#dict" rel="nofollow noreferrer">Documentation</a> before you start asking questions...</p>
<p>You want to use this <code>setdefault(key[, default])</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer">dict.setdefault</a> for this:</p>
<pre><code>key = "test python"
item = MyClass()
d = {}
print(d.setdefault(key, item))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe see if using <code>defaultdict</code> (from collections) would help?</p>
<p>I'm not sure exactly what you're trying to do, but I think this is the same behavior?</p>
<pre><code>from collections import defaultdict

class MyClass:
    pass

key = "test python"
item = MyClass()
d = defaultdict()
d[key] = item
print(item)
</code></pre>
<p>Unrelated, with the above, I think</p>
<pre><code>if not key in d:
</code></pre>
<p>or</p>
<pre><code>if not d.get(key):
</code></pre>
<p>might be a little more pythonic?</p>
</div>
<span class="comment-copy">Well, what happens with your test cases when you <i>do</i> remove the <code>else</code>?  Do you get the same results for all cases?  Test at least when the key is, and is not, already in the dict.</span>
<span class="comment-copy">Are you using <code>d.get(key) is None</code> as an attempt to test whether the dict has that key? If so, that should be <code>key in d</code>. <code>d.get(key) is None</code> doesn't distinguish between a not-present key and an explicit <code>None</code>.</span>
<span class="comment-copy"><a href="https://stackoverflow.com/a/17659400/747744">stackoverflow.com/a/17659400/747744</a></span>
