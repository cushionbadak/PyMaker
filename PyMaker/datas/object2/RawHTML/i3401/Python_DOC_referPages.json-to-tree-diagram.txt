<div class="post-text" itemprop="text">
<p>I have a JSON object which is heavily nested. Is there a way in which I could view a hierarchical tree diagram? I went through several resources like Pydot, Plotly etc but nothing could render the JSON in my format.</p>
<p>JSON file:</p>
<pre><code>{
  "found_intents": {
    "_DATE": {}
  },
  "sentence": "What is your name",
  "tree": [
    [
      {
        "canonical": null,
        "concept": "_START_TAG",
        "correct_string": "&lt;start&gt;",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "&lt;start&gt;",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "&lt;start&gt;",
            "language": "english",
            "span": [
              0,
              1
            ],
            "span_string": "&lt;start&gt;",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "&lt;start&gt;",
        "language": "english",
        "span": [
          0,
          1
        ],
        "span_string": "&lt;start&gt;",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_WHAT_IS",
        "correct_string": "what is",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "what",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "what",
            "language": "english",
            "span": [
              1,
              2
            ],
            "span_string": "what",
            "weight": 1.0
          },
          {
            "canonical": null,
            "concept": "",
            "correct_string": "is",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "is",
            "language": "english",
            "span": [
              2,
              3
            ],
            "span_string": "is",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "what is",
        "language": "english",
        "span": [
          1,
          3
        ],
        "span_string": "what is",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_DICTIONARY",
        "correct_string": "your",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "your",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "your",
            "language": "english",
            "span": [
              3,
              4
            ],
            "span_string": "your",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "your",
        "language": "english",
        "span": [
          3,
          4
        ],
        "span_string": "your",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_DICTIONARY",
        "correct_string": "name",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "name",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "name",
            "language": "english",
            "span": [
              4,
              5
            ],
            "span_string": "name",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "name",
        "language": "english",
        "span": [
          4,
          5
        ],
        "span_string": "name",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_END_TAG",
        "correct_string": "&lt;end&gt;",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "&lt;end&gt;",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "&lt;end&gt;",
            "language": "english",
            "span": [
              5,
              6
            ],
            "span_string": "&lt;end&gt;",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "&lt;end&gt;",
        "language": "english",
        "span": [
          5,
          6
        ],
        "span_string": "&lt;end&gt;",
        "weight": 1.0
      }
    ],
    [
      {
        "canonical": null,
        "concept": "_START_TAG",
        "correct_string": "&lt;start&gt;",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "&lt;start&gt;",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "&lt;start&gt;",
            "language": "english",
            "span": [
              0,
              1
            ],
            "span_string": "&lt;start&gt;",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "&lt;start&gt;",
        "language": "english",
        "span": [
          0,
          1
        ],
        "span_string": "&lt;start&gt;",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_WHAT_IS",
        "correct_string": "what is",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "what",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "what",
            "language": "english",
            "span": [
              1,
              2
            ],
            "span_string": "what",
            "weight": 1.0
          },
          {
            "canonical": null,
            "concept": "",
            "correct_string": "is",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "is",
            "language": "english",
            "span": [
              2,
              3
            ],
            "span_string": "is",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "what is",
        "language": "english",
        "span": [
          1,
          3
        ],
        "span_string": "what is",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_DICTIONARY",
        "correct_string": "your",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "your",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "your",
            "language": "english",
            "span": [
              3,
              4
            ],
            "span_string": "your",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "your",
        "language": "english",
        "span": [
          3,
          4
        ],
        "span_string": "your",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_THEATRE_ID",
        "correct_string": "name",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "name",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "name",
            "language": "english",
            "span": [
              4,
              5
            ],
            "span_string": "name",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "name",
        "language": "english",
        "span": [
          4,
          5
        ],
        "span_string": "name",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_END_TAG",
        "correct_string": "&lt;end&gt;",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "&lt;end&gt;",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "&lt;end&gt;",
            "language": "english",
            "span": [
              5,
              6
            ],
            "span_string": "&lt;end&gt;",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "&lt;end&gt;",
        "language": "english",
        "span": [
          5,
          6
        ],
        "span_string": "&lt;end&gt;",
        "weight": 1.0
      }
    ],
    [
      {
        "canonical": null,
        "concept": "_START_TAG",
        "correct_string": "&lt;start&gt;",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "&lt;start&gt;",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "&lt;start&gt;",
            "language": "english",
            "span": [
              0,
              1
            ],
            "span_string": "&lt;start&gt;",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "&lt;start&gt;",
        "language": "english",
        "span": [
          0,
          1
        ],
        "span_string": "&lt;start&gt;",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_WHAT_IS",
        "correct_string": "what is",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "what",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "what",
            "language": "english",
            "span": [
              1,
              2
            ],
            "span_string": "what",
            "weight": 1.0
          },
          {
            "canonical": null,
            "concept": "",
            "correct_string": "is",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "is",
            "language": "english",
            "span": [
              2,
              3
            ],
            "span_string": "is",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "what is",
        "language": "english",
        "span": [
          1,
          3
        ],
        "span_string": "what is",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_THEATRE_ID",
        "correct_string": "your",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "your",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "your",
            "language": "english",
            "span": [
              3,
              4
            ],
            "span_string": "your",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "your",
        "language": "english",
        "span": [
          3,
          4
        ],
        "span_string": "your",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_DICTIONARY",
        "correct_string": "name",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "name",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "name",
            "language": "english",
            "span": [
              4,
              5
            ],
            "span_string": "name",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "name",
        "language": "english",
        "span": [
          4,
          5
        ],
        "span_string": "name",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_END_TAG",
        "correct_string": "&lt;end&gt;",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "&lt;end&gt;",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "&lt;end&gt;",
            "language": "english",
            "span": [
              5,
              6
            ],
            "span_string": "&lt;end&gt;",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "&lt;end&gt;",
        "language": "english",
        "span": [
          5,
          6
        ],
        "span_string": "&lt;end&gt;",
        "weight": 1.0
      }
    ],
    [
      {
        "canonical": null,
        "concept": "_START_TAG",
        "correct_string": "&lt;start&gt;",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "&lt;start&gt;",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "&lt;start&gt;",
            "language": "english",
            "span": [
              0,
              1
            ],
            "span_string": "&lt;start&gt;",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "&lt;start&gt;",
        "language": "english",
        "span": [
          0,
          1
        ],
        "span_string": "&lt;start&gt;",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_WHAT_IS",
        "correct_string": "what is",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "what",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "what",
            "language": "english",
            "span": [
              1,
              2
            ],
            "span_string": "what",
            "weight": 1.0
          },
          {
            "canonical": null,
            "concept": "",
            "correct_string": "is",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "is",
            "language": "english",
            "span": [
              2,
              3
            ],
            "span_string": "is",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "what is",
        "language": "english",
        "span": [
          1,
          3
        ],
        "span_string": "what is",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_THEATRE_ID",
        "correct_string": "your",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "your",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "your",
            "language": "english",
            "span": [
              3,
              4
            ],
            "span_string": "your",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "your",
        "language": "english",
        "span": [
          3,
          4
        ],
        "span_string": "your",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_THEATRE_ID",
        "correct_string": "name",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "name",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "name",
            "language": "english",
            "span": [
              4,
              5
            ],
            "span_string": "name",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "name",
        "language": "english",
        "span": [
          4,
          5
        ],
        "span_string": "name",
        "weight": 1.0
      },
      {
        "canonical": null,
        "concept": "_END_TAG",
        "correct_string": "&lt;end&gt;",
        "definition": "",
        "details": [
          {
            "canonical": null,
            "concept": "",
            "correct_string": "&lt;end&gt;",
            "definition": "",
            "details": [],
            "e.g.": [],
            "grammar": "&lt;end&gt;",
            "language": "english",
            "span": [
              5,
              6
            ],
            "span_string": "&lt;end&gt;",
            "weight": 1.0
          }
        ],
        "e.g.": [],
        "grammar": "&lt;end&gt;",
        "language": "english",
        "span": [
          5,
          6
        ],
        "span_string": "&lt;end&gt;",
        "weight": 1.0
      }
    ]
  ]
}
</code></pre>
<p>More precisely, I'd like to extract the average number of branches per level. </p>
<p>Expected results would be:</p>
<pre><code>Level 0: 4  
Level 1: (1 + 2 + 1 + 1)/4  
Level 2: 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's not completely clear what you're trying to do, but the following code counts the number of dicts and lists at each nesting depth. We use <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="nofollow noreferrer"><code>collections.deque</code></a> as a stack to perform a breadth-first search, counting the number of nested containers at each level, storing the counts in a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> of lists, and pushing those containers onto the stack for future processing. When we've finished counting all the objects we compute the mean number of branches at each level.</p>
<p>I won't paste your data into this code, since it's about 740 lines long. I refer to that data as <code>data_string</code>, on my machine I simply wrapped your data in triple-quotes, but of course you could save it as a file, and use <code>json.load</code> to load it.</p>
<pre><code>import json
from collections import defaultdict, deque

data = json.loads(data_string)

def get_branches(obj):
    branches = defaultdict(list)
    stack = deque()
    stack.append((obj, 0))
    while stack:
        obj, depth = stack.pop()
        newdepth = depth + 1
        branch_count = 0
        if isinstance(obj, dict):
            obj = obj.values()
        for child in obj:
            if isinstance(child, (list, dict)):
                branch_count += 1
                stack.append((child, newdepth))
        if branch_count:
            branches[depth].append(branch_count)
    return branches

branches = get_branches(data)
for depth in sorted(branches.keys()):
    row = branches[depth]
    mean = sum(row) / len(row) if row else None
    print('Level', depth, row, mean)
</code></pre>
<p><strong>output</strong></p>
<pre><code>Level 0 [2] 2.0
Level 1 [4, 1] 2.5
Level 2 [5, 5, 5, 5] 5.0
Level 3 [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] 3.0
Level 4 [1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1] 1.2
Level 5 [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3] 3.0
</code></pre>
</div>
<span class="comment-copy">Thanks for the answer. Is there a way I can get what portion of the entire json falls under the respective levels? One such instance would be self explanatory.</span>
<span class="comment-copy">@nikinlpds That sounds like a good topic for a fresh question. ;) You can put a link in the new question back to this one, if you want. You'll need to explain exactly how you want to measure that. I assume you want it in terms of the number of nodes (items), but maybe you want to measure it in characters.</span>
<span class="comment-copy">Thanks for the quick response. Basically, whatever part of the JSON that falls in each level while traversing has to be fetched. I've made a separate question over here - <a href="https://stackoverflow.com/questions/51189250/nested-json-get-elements-corresponding-to-each-depth" title="nested json get elements corresponding to each depth">stackoverflow.com/questions/51189250/…</a>. What I'm trying to do finally is see how many elements are present corresponding to say "concept" across each level.</span>
<span class="comment-copy">@nikinlpds As bruno said, you need to explain your question more clearly, otherwise it will get put on hold.</span>
<span class="comment-copy">Alright. I'll make it simpler. Currently we have the counts for number of dicts and lists at each nesting depth. I just want those dict/list as a whole to be extracted per level. Is it clear now?</span>
