<div class="post-text" itemprop="text">
<p>So what I am trying to do is to generate a list of number values arranging for example from 1 to 100000.</p>
<p>I have created a script that does that, but it only prints the output to the screen:</p>
<pre><code>1
2
n
100000
</code></pre>
<p>What I need is exactly the same thing but appended to a file with a newline following each value:</p>
<pre><code>1
2
n
100000 
</code></pre>
<p>This is the script that generates the numbers:</p>
<pre><code>def num_gen(min, max):
for i in range(min, max):
    print(i)

print('Enter minimum Appoge value. e.g. 1000')
min_value = int(input())
print("Enter maximum Appoge value. e.g. 3000000")
max_value = int(input())

num_gen(min_value, max_value)
</code></pre>
<p>This is the script I wrote in a try to append the output to a file:</p>
<pre><code>def num_gen(min, max):
appoge_list = file('appoge_wordlist.txt', 'w')
for i in range(min, max):
    appoge_list.write(str(i))
    appoge_list('\n')
appoge_list.close()
print('The appoge_list, appoge_wordlist.txt, has been generated. :)')

print('Enter minimum Appoge value. e.g. 1000')
min_value = int(input())
print("Enter maximum Appoge value. e.g. 3000000")
max_value = int(input())

num_gen(min_value, max_value)
</code></pre>
<p><strong>Solution</strong>: Okay, I have been trying to achieve the above and then tried to oversimplify everything, I let the code explains it all:
Here is the new script, accepts no args:</p>
<pre><code>def num_gen():
for i in range(10000, 2000001):
    print(i)
num_gen()
</code></pre>
<p>Then run the command: <code>python appoge_generator.py &gt; appoge_wordlist.txt</code></p>
<p>To run the script from command line you would <code>python appoge_generator.py</code> I just added the <code>&gt;</code> which means append the output of the procedure to the file <code>appoge_wordlist.txt</code> instead of the screen.
Now I have a 1990001 lines, 14,2 MB wordlist generated in 0.9 seconds. I hope some one finds this useful.</p>
</div>
<div class="post-text" itemprop="text">
<p>It might be faster/more convenient to use Python to write to the file:</p>
<pre><code>with open('appoge_wordlist.txt', 'w') as file:
    for i in range(10000, 2000001):
        file.write('{}\n'.format(i))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another option you might consider:</p>
<pre><code>with open('appoge_wordlist.txt', 'wa') as a_file:
    a_file.write('\n'.join([str(val) for val in range(10000, 2000001)]))
</code></pre>
<p>Basically open the file that you want to write to using a context manager (the <code>with open(...)</code> syntax) in "write-append" mode (the <code>'wa'</code> argument), create your string of numbers joined by new lines with <code>'\n'.join(...)</code>, and finally write that string to the file with <code>a_file.write(...)</code>.</p>
<p>If you want this to be callable from the command line and allow you to pass in any desired start and stop values and any filename, I suggest looking at the excellent <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code> module</a>.</p>
</div>
<span class="comment-copy">OKay! I just figured out how to do it with less code, time and complexity.</span>
<span class="comment-copy">Yeah, your code is just great, runs perfectly and produces the wanted results with the same  1990001 lines, 14,2 MB wordlist generated in 0.9 seconds. Thank you for your time and contribution Mr @Farhan</span>
<span class="comment-copy">I got the following error: Traceback (most recent call last):   File "newanswer.py", line 2, in &lt;module&gt;     filex.write('\n'.join(range(10000, 2000001))) TypeError: sequence item 0: expected string, int found  To fix it I had to just add the str() around range() and now it's working, but the output in the file is like this 1 0 0 0 0 but all horizontally and each value followed with a coma and a space. Also the new file has more than 32 MB ?</span>
<span class="comment-copy">@MurphyAdam Sorry, fixed it. One of those tricky things about <code>str.join</code>, you have to pass it strings or else it chokes. You can just convert to string with a list comprehension as shown.</span>
<span class="comment-copy">your code runs now  at the 1990001 lines, 14,2 MB wordlist generated in 0.9 seconds speed. Thank you, very much appreciated.</span>
