<div class="post-text" itemprop="text">
<p>Easy question, is it possible to remove an object from memory and setting all remaining pointers to it to undefined?  </p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot explicitly free memory in Python.</p>
<p>If you want to call <code>del x</code> without having other references to <code>x</code> preventing it from getting garbage collected, you may want to check out <a href="https://docs.python.org/3/library/weakref.html" rel="nofollow noreferrer"><code>weakrefs</code></a>. </p>
</div>
<div class="post-text" itemprop="text">
<p>In case you are looking to create some sort of 'cancelable' object that can be invalidated and cause all subsequent attempts to use it to get either a None value or an error, you can do that (after a fashion), but your code will have to be disciplined not to get a direct reference ever, but always refer to the object in a special way, for example:</p>
<pre><code>class deletable(object):
    def __init__(self, value):
        self.v = value
    def destroy(self):
        if hasattr(self,"v"): delattr(self, "v")

# create instance
x = deletable( { "key" : "value", "other" : 13 } )

# access
print (x.v["key"])

# re-assign
x.v = { "another" : "dict" }

# "destroy" - option 1 - trigger error on use
x.destroy()

# "destroy" - option 2 - make it None (free memory, but keep x.v valid)
x.v = None # or x.v = {}, if you want to keep it with the original data type of dict()
</code></pre>
<p>Now, this "works" on the condition that you never (EVER) do <code>z = x.v</code> and always pass around <code>x</code> as a whole.</p>
<p>(If you know in advance the data type and it is always the same, e.g., <code>dict</code>, you can do a bit better and have the custom object respond to things like x["key"], x.update(some_dict), etc., i.e., look like a regular dict, but still able to call x.destroy() and make it fail further attempts to access. Advanced stuff, I won't write a whole article here on this, not even knowing that I made a correct guess as to what you really need).</p>
</div>
<span class="comment-copy">Do you mean forcibly dereference it from all of the identifiers/containers currently holding a reference to it? Could you expand on the context of the problem you're actually trying to solve?</span>
<span class="comment-copy">you mean this ( <a href="https://stackoverflow.com/questions/5844672/delete-an-element-from-a-dictionary" title="delete an element from a dictionary">stackoverflow.com/questions/5844672/â€¦</a> )</span>
<span class="comment-copy"><a href="https://stackoverflow.com/q/3013304/1586200">This</a> question may help if that's what you mean.</span>
<span class="comment-copy">In case someone tries to recommend <code>pyjack.replace_all_refs</code>: no, that can't actually get all the references, it just tries its best, the name is misleading.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1316767/how-can-i-explicitly-free-memory-in-python">How can I explicitly free memory in Python?</a></span>
