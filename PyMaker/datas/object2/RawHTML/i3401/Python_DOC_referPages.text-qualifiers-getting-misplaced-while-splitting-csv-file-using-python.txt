<div class="post-text" itemprop="text">
<p>I am trying to split large csv files in smaller chunks and load the data to sql for further analyse on the chunks. But when I am running the following code, the text qualifiers are getting misplaced and it is hampering the csv file and we are unable to load the data:</p>
<pre><code>import csv

divisor = 500000

outfileno = 1
outfile = None

with open('mock_data.txt', 'r') as infile:
    infile_iter = csv.reader(infile)
    header = next(infile_iter)
    for index, row in enumerate(infile_iter):
        if index % divisor == 0:
            if outfile is not None:
                outfile.close()
            outfilename = 'big-{}.csv'.format(outfileno)
            outfile = open(outfilename, 'w')
            outfileno += 1
            writer = csv.writer(outfile)
            writer.writerow(header)
        writer.writerow(row)
    # Don't forget to close the last file
    if outfile is not None:
        outfile.close()
</code></pre>
<p>Even though the script is running properly for smaller mock_data sets(below 1000 lines), it is not working properly for large datasets. Lets say the dataset is as follows:</p>
<pre><code>"col1"  "col2"  "col3"  "col4"
"100"   "0100"  "4900236731"    "2019"
"100"   "0100"  "4900236731"    "2019"
"100"   "0100"  "4900236731"    "2019"
</code></pre>
<p>When I am running the script the smaller chunks are getting generated like following:</p>
<pre><code>"col1   ""col2""    ""col3""    ""col4"""
"100    ""0100""    ""4900236731""  ""2019"""
"100    ""0100""    ""4900236731""  ""2019"""
"100    ""0100""    ""4900236731""  ""2019"""
</code></pre>
<p>The text qualifiers are getting misplaced. Any solution?
Please note: I have tried using other codes to split the data but the issue is same for other codes and data. </p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.x, you should open your CSV files using the parameter <code>newline=''</code>. A tab delimiter can be specified using <code>delimiter='\t'</code>. For example:</p>
<pre><code>import csv

divisor = 500000
outfileno = 1
outfile = None

with open('mock_data.txt', 'r', newline='') as infile:
    infile_iter = csv.reader(infile, delimiter='\t')
    header = next(infile_iter)

    for index, row in enumerate(infile_iter):
        if index % divisor == 0:
            if outfile:
                outfile.close()

            outfilename = 'big-{}.csv'.format(outfileno)
            outfile = open(outfilename, 'w', newline='')
            outfileno += 1
            writer = csv.writer(outfile, delimiter='\t', quoting=csv.QUOTE_ALL)
            writer.writerow(header)

        writer.writerow(row)

    # Don't forget to close the last file
    if outfile:
        outfile.close()
</code></pre>
<p>To force quoting on all of your fields, use <code>quoting=csv.QUOTE_ALL</code>. This would then give you an output as follows, where all fields are double quoted, and are separated with a tab character:</p>
<pre class="lang-none prettyprint-override"><code>"col1"  "col2"  "col3"  "col4"
"100"   "0100"  "4900236731"    "2019"
"100"   "0100"  "4900236731"    "2019"
"100"   "0100"  "4900236731"    "2019"
</code></pre>
<p>This can be verified by opening the file with a text editor. If the data does not look as expected, it implies an issue with your <code>mock_data.txt</code> file. You would need to provide a link to a smaller sample from it that recreates the problem.</p>
</div>
<span class="comment-copy">What is the delimiter in your source file?</span>
<span class="comment-copy">The delimiters are tab delimited.</span>
<span class="comment-copy">You need to specify the delimiter and the quote character.</span>
<span class="comment-copy">what is the syntax for quote qualifiers ?open('mock_data.txt', 'r', delimiter='   ',qualifier=""")???</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs.python.org/3/library/csv.html</a></span>
<span class="comment-copy">Thank you. This seems to work. I'll update if someting else comes up</span>
