<div class="post-text" itemprop="text">
<p>Here is the code:</p>
<pre><code>def _odd_iter():
    n = 1
    while True:
        n = n + 2
        yield n
def _not_divisible(n):
    return lambda x: x % n &gt; 0
def primes():
    yield 2
    it = _odd_iter()
    while True:
        n = next(it) 
        yield n
        it = filter(_not_divisible(n), it)
for n in primes():
    if n &lt; 10:
        print(n)
    else:
        break
</code></pre>
<p>1. I want to know what is the process about this practice , i was stuck on the</p>
<pre><code>it = _odd_iter()
</code></pre>
<p>and </p>
<pre><code>it = filter(_not_divisible(n), it)
</code></pre>
<p>Is the <strong>it</strong> stored value like list or something?</p>
</div>
<div class="post-text" itemprop="text">
<p>For the first part, filter() returns a filter object(which is an iterator) and not a list</p>
<pre><code>&gt;&gt;&gt; filter(lambda x : x &lt; 5 , [1,2,3,4,5,6,7,8])
&lt;filter object at 0x7eff8b5922e8&gt;
&gt;&gt;&gt; list(filter(lambda x : x &lt; 5 , [1,2,3,4,5,6,7,8]))
[1, 2, 3, 4]
</code></pre>
<p>You can check <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer">python docs</a> for more information. This is only in Python3.</p>
<p>The second part is similar. filter() will iterate through the generator and create another iterator which contains the filtered data.</p>
</div>
<span class="comment-copy">Please format your code and try to simplify your question.</span>
<span class="comment-copy"><a href="http://www.pythontutor.com/visualize.html" rel="nofollow noreferrer">pythontutor.com/visualize.html</a></span>
<span class="comment-copy">strippenzieher  this tool is amazing , thx a lot! Mateen Ulhaq  thank you as well , sorry I'm new here :)</span>
<span class="comment-copy"><code>it</code> is not a list, it is a generator object. You can iterate over a generator object just like you can over a list, but (in contrast to the list) only once.</span>
<span class="comment-copy"><code>it</code> is like an imaginary list. (It occupies no memory... other than the reference to object and the method used to construct it.)</span>
