<div class="post-text" itemprop="text">
<p>Im trying to count the amount of words in a text document then write the total back to the .txt</p>
<p>here is how far i've got</p>
<pre><code>words = 0
   f = open("count.txt", 'r+')

for wordcount in f.readline().split(" "):
   words += 1


print('number of words ')
print(words)


f.write("number of words ")
f.write(words)
f.close()
</code></pre>
<p>I get this error</p>
<pre><code>TypeError: expected a character buffer object
</code></pre>
<p>Where am I going wrong?</p>
<p>i feel that <code>f.write(words)</code> isn't the correct way to write the total to the txt?</p>
</div>
<div class="post-text" itemprop="text">
<p>You must convert <code>words</code> to a string before being able to write it into the file.</p>
<pre><code>with open("count.txt", "r+") as f:
    words = len(f.read().split())
    print('number of words ')
    print(words)

    f.write("number of words ")
    f.write(str(words))
</code></pre>
<p>Moreover:</p>
<p><code>readline</code>reads only one line. Use <code>read</code>to read the whole file.</p>
<p>use <code>len</code>to count the size of a list, inside of counting it by yourself</p>
<p>use <code>with</code>to ensure that the file will be closed</p>
</div>
<div class="post-text" itemprop="text">
<p><code>file.write</code> accepts only a text buffer, so you need to cast <code>words</code> into a string first before writing it to a file:</p>
<pre><code>f.write(str(words))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/io.html#io.TextIOBase.write" rel="nofollow noreferrer"><code>f.write</code></a> requires a string as its argument, unlike <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer"><code>print</code></a>, which will take any number of objects of any kind, and automatically convert them all into strings for you, and join them up with configurable separators and a configurable ending, and so on.</p>
<p>In other words, <code>print</code> is clever and friendly; <code>write</code> is a low-level function. So, to make this work with <code>write</code>, you have to do the conversion manually.</p>
<pre><code>f.write(str(words))
</code></pre>
<p>But you can also just use <code>print</code> instead of calling <code>f.write</code>:</p>
<pre><code>print(words, file=f)
</code></pre>
<hr/>
<p>Notice that this doesn't do quite the same thing. When you call <code>print</code>, by default, it puts a newline at the end. So, this code:</p>
<pre><code>print('number of words ')
print(words)
</code></pre>
<p>… will print out two separate lines:</p>
<pre><code>number of words
3
</code></pre>
<p>And likewise, this code:</p>
<pre><code>print('number of words ', file=f)
print(words, file=f)
</code></pre>
<p>… will add the same two separate lines to the file.</p>
</div>
<div class="post-text" itemprop="text">
<p>Words has to be converted to string. <code>File.write()</code> is what is actually going to write it.</p>
<p>Your new code:</p>
<pre><code>f.write("number of words ")
f.write(str(words))
</code></pre>
</div>
<span class="comment-copy">Please fix the indentation of your code</span>
<span class="comment-copy">Could we see the full error message.  Particually on which line it is on.</span>
<span class="comment-copy">Are you using Micropython? If so, on what platform?</span>
