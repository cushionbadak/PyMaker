<div class="post-text" itemprop="text">
<p>Hopefully this doesn't get downvoted on the title but couldn't think of a better way of explaining the issue.</p>
<p>Based on suggestions I've seen on Stack, I am using Sets to ignore duplicate lines which  works a treat until I get a use case where the line changes slightly but I still want to filter that line out as a duplicate. In my example, I cannot seem to be able to search a string for a certain keyword so in my example below, I  exclude any new line where the firs column, which is the ID, already exists, in this case London.</p>
<p>For example. </p>
<pre><code>London,Sold,2021-12-07,1000000,301909
London,Sold,2021-12-07,1000000,999999
</code></pre>
<p>So I wanted to know if it was possible to just check whether the ID London exists in my Set before adding the line or ignoring but I can't find any way to do this. I tried tuples but not sure that is my solution and I cannot create a set from list.  My simple test case is as follows and the end result is I only get the line in my set, not the testline as is happening now. </p>
<pre><code>testline = 'London,Sold,2021-12-07,1000000,301909'
id = 'London'

j="testline2"
seen = set()
seen.add(testline)

if id not in seen:
    seen.add(j)

print seen  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seems like you want a dict, where the key is the first value, rather than a set.</p>
<pre><code>seen = {}
id = testline.partition(',')[0]
seen[id] = testline
...
if id not in seen:
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>testline = 'London,Sold,2021-12-07,1000000,301909'
id = 'London'

j="testline2"
seen = set()
for element in testline.split(',')
    seen.add(element)
if id not in seen:
    seen.add(j)

print seen           
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're near to the solution:</p>
<pre><code>testline = ['London','Sold','2021-12-07','1000000','301909'] #updated
id = 'London'

j="testline2"
seen = set(testline) #updated
if id not in seen:
    seen.add(j)

print (seen )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to extract the first split of your comma separated string and add it to your set. For this, you can either your <code>x.split(',', 1)[0]</code> or <code>x.partition(',')[0]</code>.</p>
<p>The logic is identical to the commonly used <code>itertools</code> recipe <code>unique_everseen</code>, <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">available in the official docs</a>.</p>
<p>The recipe has been re-implemented in 3rd party <a href="http://toolz.readthedocs.io/en/latest/api.html#toolz.itertoolz.unique" rel="nofollow noreferrer"><code>toolz.unique</code></a>, which can save you reinventing the wheel:</p>
<pre><code>from toolz import unique

L = ['London,Sold,2021-12-07,1000000,301909',
     'London,Sold,2021-12-07,1000000,999999']

res = list(unique(L, key=lambda x: x.partition(',')[0]))

print(res)
['London,Sold,2021-12-07,1000000,301909']
</code></pre>
</div>
<span class="comment-copy">If you find such a near-duplicate, would you want to keep the first or the second encountered item?</span>
<span class="comment-copy">keep the first occurrence</span>
<span class="comment-copy">Can you please change <code>id</code> name? Not good practice to shadow built-ins..</span>
<span class="comment-copy">Sure, will do for future posts, was just using that as an example but will remember for best practices. thanks</span>
<span class="comment-copy">What's different than in OP's code? I don't think the indentation was the problem.</span>
<span class="comment-copy">Ah, you split <code>testline</code> to a list. You should mention that in your answer. However, Unless you tell OP how to do this programmatically, I don't think this in itself will help much.</span>
<span class="comment-copy">Thanks @tobias_k, I shall consider your suggestion in my future answer.</span>
