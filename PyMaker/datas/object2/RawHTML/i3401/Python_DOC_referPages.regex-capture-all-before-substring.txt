<div class="post-text" itemprop="text">
<p>I have a string:</p>
<pre><code>s = 'Abc - 33 SR 11 Kill(s) P G - (Type-1P-G) 2 Kill(s) M 1 Kill(s) S - M9A CWS 1 Kill(s) 11 Kill(s)'
</code></pre>
<p>I'm trying to split this up to capture the number of kills, and the information before each <code>"XY Kill(s)"</code> to get this output:</p>
<pre><code>['Abc - 33 SR', 
 'P G - (Type-1P-G)', 
 'M', 
 'S - M9A CWS']
</code></pre>
<p>Getting the number of kills was simple:</p>
<pre><code>re.findall(r"(\d+) Kill", s)
['11', '2', '1', '1', '11']
</code></pre>
<p>Getting the text has been harder. From researching, I have tried to use the following regex, which just gave the beginning of a series of capture groups:</p>
<pre><code>re.findall(r"(?=[0-9]+ Kill)", s)
['', '', '', '', '', '', '']
</code></pre>
<p>I then changed this to add in "any number of characters before each group".</p>
<pre><code>re.findall(r"(.+)(?=[0-9]+ Kill)", s)
['Abc - 33 SR 11 Kill(s) P G - (Type-1P-G) 2 Kill(s) M 1 Kill(s) S - M9A CWS 1 Kill(s) 1']
</code></pre>
<p>This just gives the entire string. How can I adjust this to capture everything before "any number of digits-space-Kill"?</p>
<p>Let's get the dupes out of the way. I've consulted the following. The second in particular looked useful but I've been unable to make it suit this purpose.</p>
<p><a href="https://stackoverflow.com/questions/36167442/extract-number-before-a-character-in-a-string-using-python">Extract Number before a Character in a String Using Python</a>, </p>
<p><a href="https://stackoverflow.com/questions/27387415/how-would-i-get-everything-before-a-in-a-string-python">How would I get everything before a : in a string Python</a>,</p>
<p><a href="https://stackoverflow.com/questions/15851568/how-to-get-the-last-part-of-a-string-before-a-certain-character">how to get the last part of a string before a certain character?</a>. </p>
</div>
<div class="post-text" itemprop="text">
<p>You may use</p>
<pre><code>re.findall(r'(.*?)\s*(\d+) Kill\(s\)\s*', s)
</code></pre>
<p>See the <a href="https://regex101.com/r/XK0BYH/1" rel="nofollow noreferrer">regex demo</a></p>
<p><strong>Details</strong></p>
<ul>
<li><code>(.*?)</code> - Capturing group 1: any 0+ chars other than line break chars, as few as possible</li>
<li><code>\s*</code> - 0+ whitespaces</li>
<li><code>(\d+)</code> - Capturing group 2: one or more digits</li>
<li><code> Kill(s)</code> - a space and <code>Kill(s)</code> substring</li>
<li><code>\s*</code> - 0+ whitespaces</li>
</ul>
<p><a href="https://ideone.com/bCKhBa" rel="nofollow noreferrer">Python demo</a>:</p>
<pre><code>import re
rx = r"(.*?)\s*(\d+) Kill\(s\)\s*"
s = "Abc - 33 SR 11 Kill(s) P G - (Type-1P-G) 2 Kill(s) M 1 Kill(s) S - M9A CWS 1 Kill(s) 11 Kill(s)"
print(re.findall(rx, s))
</code></pre>
<p>Output:</p>
<pre><code>[('Abc - 33 SR', '11'), ('P G - (Type-1P-G)', '2'), ('M', '1'), ('S - M9A CWS', '1'), ('', '11')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer"><code>re.split()</code></a> to get a list of all content <em>between</em> matches.</p>
<pre><code>&gt;&gt;&gt; re.split(r"\d+ Kill\(s\)", s)
    ['Abc - 33 SR ', ' P G - (Type-1P-G) ', ' M ', ' S - M9A CWS ', ' ', '']
</code></pre>
<p>You can clean it up to remove whitespace and empty strings.</p>
<pre><code>&gt;&gt;&gt; [s.strip() for s in re.split(r"\d+ Kill\(s\)", s) if s.strip()]
    ['Abc - 33 SR', 'P G - (Type-1P-G)', 'M', 'S - M9A CWS']
</code></pre>
</div>
<span class="comment-copy">see <a href="https://stackoverflow.com/questions/4963691/python-regex-multiple-groups" title="python regex multiple groups">stackoverflow.com/questions/4963691/â€¦</a></span>
<span class="comment-copy">You can also replace the space by \s+ in the RegEx</span>
<span class="comment-copy">@LaurentLAPORTE Well, that is part of the original pattern and it is a literal, so it is OK as is, I believe.</span>
