<div class="post-text" itemprop="text">
<p>Right now I am trying to read and parse a file using Python 2. The creator of the file typed a bunch of lines in the terminal, with (Ctrl A)s within each line, and copied those lines into a text file. So the lines in the file look like "(something)^A(something)". When I use the readlines() function in python to read the file, those "^A" strings cannot be recognized. </p>
<p>I tried to use io.open and codecs.open and set the encoding as UTF-8, but "^A" is clearly not an UTF-8 string. Does anyone know how to read these special control command strings from a file using python? Thank you very much!</p>
</div>
<div class="post-text" itemprop="text">
<p>Simply read the file in binary mode like so: <code>open('file.txt', 'rb')</code>. Ctrl-A will be the value 1.</p>
<pre><code>with open('test.txt', 'rb') as f:
    text = f.read()
    for char in text:
        if char == b'\x01': # \x01 stands for the byte with hex value 01
            # Do something
            pass
        else:
            # Do something else
            pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>These control characters are part of the <a href="http://jkorpela.fi/chars/c0.html" rel="nofollow noreferrer">ASCII character set</a>, with numeric codes ranging from 0 to 31 (or 00 to 1F in hexadecimals). To strip them out from a string, simply use regex substitution:</p>
<pre><code>import re
clean_string = re.sub(r'[\x00-\x1f]+', '', string_with_control_characters)
</code></pre>
</div>
<span class="comment-copy">Generally speaking, on this site it is encouraged to post your code. Hard to advise where you are going wrong otherwise.  You need to open the file in binary read mode, read in the bytes and examine each byte so that it matches the ascii code for Ctrl-A (which I believe is the value 1).</span>
<span class="comment-copy">Do you know how I am supposed to read by byte and match value 1 in python? Like using which function?</span>
<span class="comment-copy">Control characters are invisible characters, so the terminal uses ^A as a visual representation. You don't want to actually look for ^A if there's a control character. But it's hard to tell what is actually stored in the file. I suggest using an editor which displays invisible characters in a special way to make sure. Then you can use various <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">escaping methods</a> to represent invisible characters and look for them.</span>
<span class="comment-copy">What do you mean by "cannot be recognized"? Do you get an exception? If so, what is it and what does the code look like?</span>
<span class="comment-copy">I mean the "^A" cannot be read and becomes invisible.</span>
<span class="comment-copy">I didn't use the exact same method, but you gave me some pretty good inspiration. Instead of using str.find("^A") in my program, I used str.find("\x01") and it worked. Thank you!</span>
