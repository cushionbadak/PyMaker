<div class="post-text" itemprop="text">
<pre><code>import random
fruits = ['Apple','Mango','Banana','Grapes','Guava']
random.seed(500)
low =0
high = len(fruits)
random_fruits = [fruits[random.randint(low,high)] for i in range(1000)]
</code></pre>
<p>This is my code and following is the error what I am getting?</p>
<p>IndexError: list index out of range</p>
</div>
<div class="post-text" itemprop="text">
<p>You are calling one function 1000 times to get 1000 values. For <a class="post-tag" href="/questions/tagged/python-3" rel="tag" title="show questions tagged 'python-3'">python-3</a> you can simplify your code by using <a href="https://docs.python.org/3.6/library/random.html#random.choices" rel="nofollow noreferrer"><code>random.choices(iterable, k=nubmer of elements)</code></a>.</p>
<p>One call will give you a list of 1000 random items from your source-iterable:</p>
<pre><code>import random

fruits = ['Apple','Mango','Banana','Grapes','Guava']
random.seed(500)
# reduced 1000 to 10 for output-brievity
random_fruits = random.choices(fruits,k=10) # no need to get 1000 times one element, get
                                            # 1000 back in one call is more efficient.

print(random_fruits)
</code></pre>
<p>Which gives an output of:</p>
<pre><code>['Grapes', 'Guava', 'Banana', 'Mango', 'Grapes', 'Mango', 'Guava', 'Mango', 'Banana', 'Grapes']
</code></pre>
<p>You feed it an iterable and a count and get the radomn drawn results (with duplicates) back as <code>list</code>.</p>
<hr/>
<p>Timings:</p>
<pre><code>import timeit

s = """import random
random.seed(500)
fruits=['Apple','Mango','Banana','Grapes','Guava']"""

timeit.timeit("k = [fruits[random.randint(0,4)] for _ in range(1000)]", 
              setup = s , number=100) 

0.11539360368355066
</code></pre>
<p>vs.</p>
<pre><code>timeit.timeit("k = random.choices(fruits, k=1000)", 
              setup = s, number=100)

0.02338418321748037
</code></pre>
<p>which makes using <code>random.choices(...)</code> about 5 times faster.</p>
</div>
<div class="post-text" itemprop="text">
<p>Function <code>random.randint</code> generates a random number inside the range defined by low and high values, both included: <code>low &lt;= x &lt;= high</code>. Since you set <code>high</code> to <code>len(fruits)</code>, and the last list index is actually <code>len(fruits) - 1</code>, you can get a list index out of range error in case <code>random.randint</code> produces the high value.</p>
<p>Instead, modify the code by changing the definition of <code>high</code>.</p>
<pre><code>import random
fruits = ['Apple','Mango','Banana','Grapes','Guava']
random.seed(500)
low = 0
high = len(fruits) - 1
random_fruits = [fruits[random.randint(low,high)] for i in range(1000)]
</code></pre>
</div>
<span class="comment-copy">If you just want a random element from your sequence, use <a href="https://docs.python.org/3/library/random.html#random.choice" rel="nofollow noreferrer"><code>random.choice()</code></a>.</span>
<span class="comment-copy">@zwer I think <a href="https://docs.python.org/3.6/library/random.html#random.choices" rel="nofollow noreferrer"><code>random.choices(iterable,k=number of elems returned)</code></a> would better suit his needs.</span>
<span class="comment-copy">Or just use <code>randrange</code> with the original values (the implementation of <code>randint</code> is already <code>return self.randrange(low, high+1)</code>, so using <code>randrange</code> without subtracting is already faster).</span>
<span class="comment-copy">@ShadowRanger That's true, thanks. I was focusing on explaining and fixing the original example, not as much on proposing alternatives, of which there are several.</span>
