<div class="post-text" itemprop="text">
<p>When I try to start a new thread, my entire program stops until the thread's function finishes. I am trying to make the thread start and continue while my program runs at the same time.</p>
<p>Code:</p>
<pre><code>def do_python(string):
    while True:
        exec(string, globals())
        time.sleep(0.1)

getKeyThread = threading.Thread(target=do_python("key = cpc.get_key()"), daemon=True).start()

time.sleep(0.2)

while True:

    if key == 9:
        print("Tab pressed.")
        exit()
</code></pre>
<p>I have imported all of the required modules, so that is not the problem. Any functions used in here that aren't defined have been defined elsewhere and work perfectly fine. I haven't included my entire program here, because it is far too big to paste here.</p>
</div>
<div class="post-text" itemprop="text">
<p>By doing </p>
<pre><code>do_python("key = cpc.get_key()")
</code></pre>
<p>you are actually <em>calling</em>, in your main thread, the <code>do_python</code> function (which has an infinite loop and will never stop running). Since the function never returns anything, it will just keep running forever. If it did return something, you'd probably get an error unless whatever is returned in a callable object.</p>
<p>The argument <a href="https://docs.python.org/3/library/threading.html#threading.Thread" rel="nofollow noreferrer"><code>target</code> requires a <em>callable</em></a>, so you have to pass your function to it</p>
<pre><code>getKeyThread = threading.Thread(target=do_python, args=some_args, daemon=True).start()
</code></pre>
</div>
<span class="comment-copy">Look at this example:<a href="http://sebastiandahlgren.se/2014/06/27/running-a-method-as-a-background-thread-in-python/" rel="nofollow noreferrer">sebastiandahlgren.se/2014/06/27/â€¦</a></span>
<span class="comment-copy">change <code>getKeyThread = threading.Thread(target=do_python("key = cpc.get_key()"), daemon=True).start()</code> to <code>getKeyThread = threading.Thread(target=do_python, args("key = cpc.get_key()", ), daemon=True).start()</code></span>
<span class="comment-copy">Thanks for the help, but i_th's comment helped me solve the problem.</span>
