<div class="post-text" itemprop="text">
<p>For the YourName input() I would like to get a value that's a string. Hence, it shouldn't be a float, int, etc. In this example I would like to replace "Sunny" with any value that's a string to make the while loop accept the input. </p>
<pre><code>YourName = ''

while YourName != "Sunny":
    print("Please type in your name")
    YourName = input()

print(YourName + " is correct")
</code></pre>
<p>Thanks in advance, best</p>
<p>Sentino</p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned in the comments you could use something similar to the following:</p>
<pre><code>YourName = input("Please enter your name: ")

while True:
    if YourName.isalpha():
        break
    else:
        print("Must enter string")
        print("Please type in your name")
        YourName = input("Please enter your name: ")
        continue
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer">isinstance()</a> is a built-in function that checks to see if a variable is of a specific class, e.g. <code>isinstance(my_var, str) == True</code>. <strong>However</strong>, the <code>Input()</code> function always returns a string. Thus, if you want to make sure the input was all letters you want to use <a href="https://docs.python.org/3/library/stdtypes.html#str.isalpha" rel="nofollow noreferrer">.isalpha()</a>. You could also use <code>Try/except</code>. As @SiHa said <a href="https://stackoverflow.com/questions/23294658/asking-the-user-for-input-until-they-give-a-valid-response">this SO question</a> has a great response. </p>
<hr/>
<p>As pointed out in the comments, this answer will not work if there is a space in the string. If you want to allow multiple name formats you can use Regex. for example you can do the following:</p>
<pre><code>import re

YourName = input("Please enter your name: ")

while True:
    if re.fullmatch(r"[a-zA-Z]+\s?[a-zA-Z]+", YourName) is not None:
        break
    else:
        print("Must enter string")
        print("Please type in your name")
        YourName = input("Please enter your name: ")
        continue
</code></pre>
<p>Using Regular Expressions will give you more control on the inputs than regular string methods. <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">Docs</a>, <a href="https://docs.python.org/3.7/howto/regex.html" rel="nofollow noreferrer">Python Regex HOWTO</a>. <code>re</code> is a standard library that comes with python and will give you the most flexibility. You can use <a href="https://regex101.com/" rel="nofollow noreferrer">regex101</a> to help you test and debug. </p>
<p>What the <code>re.fullmatch()</code> will return a match object if found and <code>None</code> if not. It says the input can be any lower or uppercase letter with an optional space in the middle followed by more letters. </p>
<hr/>
<p>If you don't want to import a package then you can loop through your input object and check to see if all characters are a space or alpha using:</p>
<pre><code>all([x.isalpha() | x.isspace() for x in YourName])
</code></pre>
<p>however this will not say how many spaces there are or where they are. It would be optimal to use Regex if you want more control. </p>
</div>
<div class="post-text" itemprop="text">
<p>It's possible that you're using Python 2.7, in which case you need to use <code>raw_input()</code> if you want to take the input as a string directly.</p>
<p>Otherwise, in Python 3, <code>input()</code> always returns a string. So if the user enters "3@!%," as their name, that value will be stored as a string (You can check the type of a variable by using <code>type(variable)</code>).</p>
<p>If you want to check to make sure the string contains only letters, you can use the method <code>isalpha()</code> and <code>isspace()</code> (in my example code, I'll assume you want to allow spaces, but you can exclude that part if you want to require one word responses).</p>
<p>Because these methods operate on characters, you need to use a for loop:</p>
<pre><code>YourName =""
while YourName is not "Sunny" or not all(x.isalpha() or x.isspace() for x in YourName):

     #You can pass a string as a prompt for the user here
     name = input("please enter name")
print (YourName)
</code></pre>
<p>However, I should note that this check is totally redundant since no string containing a non-letter character could ever be equal to "Sunny".</p>
</div>
<div class="post-text" itemprop="text">
<p>As others have pointed out, <code>input()</code> always returns a string.</p>
<p>You can use the <code>str.isalpha</code> method to check the character is a letter.</p>
<pre><code>YourName = ''

while True:
    print("Please type in your name")
    YourName = input()
    failed = False
    for char in YourName:
        if not char.isalpha():
            failed = True

    if not failed:
        break
</code></pre>
<p>Example:</p>
<pre><code>Please type in your name
&gt; 123
Please type in your name
&gt; John1
Please type in your name
John
John is correct
</code></pre>
</div>
<span class="comment-copy">You presumably mean that it cannot be converted to those types, because <code>input()</code> will always give a string. You probably need to look into <code>try</code>/<code>except</code>.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/23294658/asking-the-user-for-input-until-they-give-a-valid-response">Asking the user for input until they give a valid response</a></span>
<span class="comment-copy">Just want to point out that your description doesn't totally match the code you've provided. This loop will only break when the user inputs "Sunny", and the loop will not end if any other string value is provided (whether it contains non-alphabetic characters or not). As such, checking for alphabetic characters would be redundant, since no string containing non-alphabetic characters will ever be equal to "Sunny".</span>
<span class="comment-copy">this will never break, input always return a string....</span>
<span class="comment-copy">@Netwave fixed &amp; updated. Thx</span>
<span class="comment-copy">Just a note: if you want to accept spaces in the input string, this will not allow that. In order to accept spaces, you need to loop over each character, and check that it is either a space or an alphabetic character (if you try to use <code>YourName.isalpha() or YourName.isspace()</code> without a loop, it will only return true if the entire string is all letters or all spaces, but will return false if there is a mix).</span>
<span class="comment-copy">@LukeBaumann I added some info on Regex to test for cases where it's first name last name.</span>
<span class="comment-copy">@roganjosh appreciate the feedback, I'm not sure I understand though--the asker was asking how to ensure that input would be read as a string, which I think is already guaranteed since the input() method returns type string.</span>
<span class="comment-copy">You absolutely can shoot me down on this because we can fall back to the ambiguous question, but I think it's obvious that the OP intends to throw out <code>3.14</code> as not-a-string and not a valid name.</span>
<span class="comment-copy">@roganjosh right, I just realized that's probably totally right. I'm going to edit my answer accordingly.</span>
<span class="comment-copy">@roganjosh I just realized this question doesn't make much sense, because the loop only ends when <code>YourName</code> is not <code>"Sunny"</code>. Therefore there's no need to check whether the input is alphabetic, since it's also required to be equal to an alphabetic string. Perhaps OP will use this in another context, though.</span>
<span class="comment-copy">The question doesn't make sense, no, but you adapted your answer to come as close to answering it as I think up so you got my +1.</span>
