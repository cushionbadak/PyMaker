<div class="post-text" itemprop="text">
<p>I'm working with a data set of my sleep for the past year or so. I've read the CSV into a pandas Dataframe. In it is a column called <code>'Duration'</code>. I convert it into a timeDelta as follows:</p>
<pre><code>df.Duration = pd.to_timedelta(df.Duration)
df.Duration.head()
</code></pre>
<p>Which outputs</p>
<pre><code>0   17711 days 08:27:00
1   17711 days 07:56:00
2   17711 days 04:22:00
3   17711 days 07:29:00
4   17711 days 06:46:00
Name: Duration, dtype: timedelta64[ns]
</code></pre>
<p>I sort of understand why I get 17711 days in front of the hours, but all I really want is the hours. To solve this, I could write </p>
<pre><code>df.Duration = (df.Duration - pd.Timedelta('17711 days'))
</code></pre>
<p>Which gives me</p>
<pre><code>0   08:27:00
1   07:56:00
2   04:22:00
3   07:29:00
4   06:46:00
Name: Duration, dtype: timedelta64[ns]
</code></pre>
<p>However this is a pretty brittle method. Is there a better method of getting just the hours I want? </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer"><code>datetime.timdelta</code></a> objects store days, seconds and microseconds as attributes. We can access them in a <code>pandas.DataFrame</code> with <code>dt</code>:</p>
<p><strong>Setting up some dummy data</strong></p>
<pre><code>import datetime as dt
import pandas as pd

df = pd.DataFrame(
    data=(
        dt.timedelta(days=17711, hours=i, minutes=i, seconds=i) for i in range(0, 10)
    ), 
    columns=['Duration']
)

print(df['Duration'])

             Duration
0 17711 days 00:00:00
1 17711 days 01:01:01
2 17711 days 02:02:02
3 17711 days 03:03:03
4 17711 days 04:04:04
5 17711 days 05:05:05
6 17711 days 06:06:06
7 17711 days 07:07:07
8 17711 days 08:08:08
9 17711 days 09:09:09
Name: Duration, dtype: timedelta64[ns]
</code></pre>
<p><strong>Accesing seconds and turning them into hours</strong></p>
<pre><code>print(df['Duration'].dt.seconds / 3600)

0    0.000000
1    1.016944
2    2.033889
3    3.050833
4    4.067778
5    5.084722
6    6.101667
7    7.118611
8    8.135556
9    9.152500
Name: Duration, dtype: float64    
</code></pre>
<p><strong>Only hours</strong></p>
<pre><code>print(df['Duration'].dt.seconds // 3600)

0    0
1    1
2    2
3    3
4    4
5    5
6    6
7    7
8    8
9    9
Name: Duration, dtype: int64
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>split()</code> with regex should do what you're looking for I think:</p>
<pre><code>df[['Days', 'Time']] = df['Duration'].str.split('.* days', expand=True)
</code></pre>
<p>This will split the column into two and then you can just call it using the "Time" key.</p>
<p><strong>Code</strong>:</p>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; d = ['17711 days 08:27:00', 
...      '17711 days 07:56:00',
...      '17711 days 04:22:00',
...      '17711 days 07:29:00',
...      '17711 days 06:46:00']
&gt;&gt;&gt; df = pd.DataFrame({'Duration': d})
&gt;&gt;&gt; df[['Days', 'Time']] = df['Duration'].str.split('.* days', expand=True)
&gt;&gt;&gt; df.Time = pd.to_timedelta(df.Time)
&gt;&gt;&gt; df.Time.head()
0   08:27:00
1   07:56:00
2   04:22:00
3   07:29:00
4   06:46:00
Name: Time, dtype: timedelta64[ns]
</code></pre>
</div>
