<div class="post-text" itemprop="text">
<p>I am attempting to download a code from github which contains the library "ee" - Google Earth Engine. GitBash is giving me an error:</p>
<pre><code>ModuleNotFoundError: No module named 'fcntl'
</code></pre>
<p><code>fcntl</code> is a module within the library Google Earth Engine. I have Windows and it seems Linux is required. I was directed to add the module (fcntl) to the PYTHONPATH. Any other suggestions for this error would be helpful as well! The code I intend to add in PYTHONPATH is below.</p>
<pre class="lang-py prettyprint-override"><code>def fcntl(fd, op, arg=0):    
    return 0

def ioctl(fd, op, arg=0, mutable_flag=True):   
    if mutable_flag:    
        return 0    
    else:    
        return ""    

def flock(fd, op):   
    return

def lockf(fd, operation, length=0, start=0, whence=0):    
    return
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, this is probably not going to work for you.</p>
<p>You can't turn Windows to Linux just by adding modules to your Python library. The reason you don't have the <code>fcntl</code> module on your path is that <code>fcntl</code> isn't included on Windows. And the reason it isn't included on Windows is that the Windows OS doesn't support the syscalls that module wraps, or anything close enough to reasonably emulate those syscalls.</p>
<p>If you have code that requires <code>fcntl</code>, that code cannot run on Windows (unless you do some significant work to port it to not require <code>fcntl</code> in the first place).</p>
<hr/>
<p>If you have code that <em>doesn't</em> require <code>fcntl</code> but uses it anyway, or if you just need something for temporary development purposes so you can catch and fix file sharing errors while porting the code to not require <code>fcntl</code>, then you can use msoliman's dummy code, which I'll explain how to do below. But you seem to be expecting it to do magic, and it won't do that.</p>
<p>You may not be sure. Maybe you're using code that uses other code that uses other code that uses <code>fcntl</code> in some scenarios but not others, it may not actually need <code>fcntl</code> to do any of the things you're actually trying to do with it. </p>
<p>If you want to test that, you can take msoliman's dummy code, and change each function body to this:</p>
<pre><code>raise RuntimeError('Oops, using fcntl!')
</code></pre>
<p>Then run the program and see if it fails with that error. If not, you don't actually need <code>fcntl</code> after all. (Or at least you don't need it for any of the things you tested—it's always possible that some other thing you need to do with the app that you didn't think to test will need it.)</p>
<hr/>
<p>If your code actually needs <code>fcntl</code>, and you don't want to/can't port that code to Windows code that uses Win32 API calls (or a cross-platform library like <code>portalocker</code>), then what you probably need to do is install Linux and run the program there.</p>
<p>There are multiple ways to run Linux on top of Windows, rather than instead of Windows. For example, you could install <a href="https://www.docker.com/docker-windows" rel="nofollow noreferrer">Docker for Windows</a> and then build a linux docker container with the app. Or you could use <a href="https://www.vmware.com/products/workstation-player.html" rel="nofollow noreferrer">VMWare Player</a> to, in effect, run a Linux image as an application under Windows, and then do your work inside that image. And so on.</p>
<hr/>
<p>Finally, msoliman's "Place this module in your PYTHONPATH" is a little misleading.</p>
<p>What you actually need to do is get it into your <a href="https://docs.python.org/3/library/sys.html#sys.path" rel="nofollow noreferrer"><code>sys.path</code></a>. <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH" rel="nofollow noreferrer"><code>PYTHONPATH</code></a> is just one way of doing that, and probably not the one you want here.</p>
<p>The options are:</p>
<ol>
<li>Just put it in the same directory as your script. As the docs say, "As initialized upon program startup, the first item of this list, <code>path[0]</code>, is the directory containing the script that was used to invoke the Python interpreter."</li>
<li>Put it in your user or system site packages, or some other directory that's already on your default <code>sys.path</code>. You can <code>import sys; print(sys.path)</code> to get a list of these directories. If you see something inside your home directory, that's a good place to put it; if not, look for something with <code>site-packages</code> in the name.</li>
<li>Put it in some other directory somewhere else, and set the <code>PYTHONPATH</code> environment variable to be the full path to directory. You can set an environment variable in the Windows <code>cmd</code> command prompt by writing <code>SET PYTHONPATH C:\Path\To\Directory</code>. This will only persist as long as the current command prompt window. If you want to set it permanently, there's a setting somewhere in Control Panel (it changes with each Windows version; Super User should have good up-to-date answers for each version) where you can set System and User environment variables. Any User environment variable will take effect in every new command prompt window you open from now on.</li>
</ol>
</div>
<span class="comment-copy">Module, sorry. here is a helpful link to what I am attempting but need more clarification: <a href="https://stackoverflow.com/questions/1422368/fcntl-substitute-on-windows" title="fcntl substitute on windows">stackoverflow.com/questions/1422368/fcntl-substitute-on-windows</a></span>
<span class="comment-copy">Please edit that link, and an explanation, into your question instead of just leaving it as a comment. Also, fix the formatting—to post code in a question, you should select the code and hit the <code>{}</code> icon or Ctrl-K.</span>
<span class="comment-copy">The following was the question which directed me to try this: <a href="https://stackoverflow.com/questions/1422368/fcntl-substitute-on-windows" title="fcntl substitute on windows">stackoverflow.com/questions/1422368/fcntl-substitute-on-windows</a></span>
<span class="comment-copy">@Topher Are you looking to install a dummy <code>fcntl.py</code>, as explained in msoliman's answer? If so, I can update my answer—but it's still probably not what you want. As that answer explains, a dummy module can be useful for developmenttesting purposes, or when the program doesn't really need <code>fcntl</code> but is using it anyway; it's not going to make code that relies on <code>fcntl</code> work.</span>
<span class="comment-copy">I am not sure if the code I am using uses fcntl - the code imports library "ee" which uses it but its unknown where. Seems like I have to download Linux or a VM</span>
<span class="comment-copy">@Topher Let me update the answer again…</span>
