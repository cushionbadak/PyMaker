<div class="post-text" itemprop="text">
<p>If the code was to work properly then whenever someone types something in the chat they get 5 experience and that information gets put into a <code>.json</code> file, but instead what happens is whenever someone types something into the chat it gives me this error.</p>
<pre><code>on_message users = json.dumps(f) 
TypeError: Object of type TextIOWrapper is not JSON serializable
</code></pre>
<p>Here is the code that I am using:</p>
<pre><code>import discord
from discord.ext import commands
from discord.ext.commands import Bot
import asyncio
import json
from json import dumps, loads, JSONEncoder, JSONDecoder
import os

client = commands.Bot(command_prefix='^')
os.chdir(r'C:\Users\quiny\Desktop\sauce')

@client.event
async def on_ready():
    print ("Ready when you are xd")
    print ("I am running on " + client.user.name)
    print ("With the ID: " + client.user.id)

@client.event
async def on_member_join(member):
    with open('users.json', 'r') as f: 
        users = json.dumps(f)

    await update_data(users, member)

    with open('users.json', 'w') as f:
        json.loads("users, f")

@client.event
async def on_message(message):
    with open('users.json', 'r') as f:
        users = json.dumps(f)

    await update_data(users, message.author)
    await add_experience(users, message.author, 5)
    await level_up(users, message.author, message.channel)

    with open('users.json', 'w') as f:
        json.loads("users, f")

async def update_data(users, user):
    if not user.id in users:
        users[user.id] = {}
        users[user.id]['experience'] = 0
        users[user.id]['level'] = 1

async def add_experience(users, user, exp):
    users[user.id]['experience'] += exp

async def level_up(users, user, channel):
    experience = users[user.id]['experience']
    lvl_start = users[user.id]['level']
    lvl_end = int(experience ** (1/4))

    if lvl_start &lt; lvl_end:
        await client.send_message(channel, '{} has achieved a slightly higher 
level of {}, yay'.format(user.mention, lvl_end))
        users[user.id]['level'] = lvl_end
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have your <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow noreferrer"><code>loads</code></a> and <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer"><code>dumps</code></a> backwards, and you should be using <a href="https://docs.python.org/3/library/json.html#json.load" rel="nofollow noreferrer"><code>load</code></a> and <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow noreferrer"><code>dump</code></a> instead (the <code>s</code> suffix means those functions work on strings.).  <code>load</code> from a file, <code>dump</code> to a file</p>
<pre><code>users = {}

@client.event
async def on_message(message):
    # No need to load the dictionary, our copy is the most correct
    await update_data(users, message.author)
    await add_experience(users, message.author, 5)
    await level_up(users, message.author, message.channel)
    with open('users.json', 'w') as f:
        json.dump(users, f)

@client.event
async def on_ready():
    print ("Ready when you are xd")
    print ("I am running on " + client.user.name)
    print ("With the ID: " + client.user.id)
    # Load the json just once, when the bot starts
    global users
    with open('users.json') as f:
        try:
            users = json.load(f)
        except:
            users = {}
</code></pre>
</div>
<span class="comment-copy">FWIW: I got that very error because I accidentally swapped the arguments to <code>json.dump()</code>, e.g. I used <code>json.dump(fp, obj)</code> instead of the proper <code>json.dump(obj, fp)</code>.</span>
