<div class="post-text" itemprop="text">
<p>I have a list similar to the following:
<code>my_list = ['1', '2', '1', '3', '2', '1']</code></p>
<p>These are votes and each vote is corresponds to an id from this model which contains the choices of a poll:</p>
<pre><code>class Choice(models.Model):
    question = models.ForeignKey(Poll, on_delete=models.CASCADE)
    choice_text = models.CharField(max_length=200)
</code></pre>
<p>I'm using <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">Counter</a> to count the votes and I end up with this:</p>
<pre><code>&gt;&gt;&gt;votes = Counter(my_list)
&gt;&gt;&gt;print(votes)
Counter({'1': 3, '2': 2, '3': 1})
</code></pre>
<p>Each key in this dictionary corresponds to an ID in the <code>Choice</code> model. How can I replace the key names of the dictionary with the corresponding <code>choice_text</code> for each ID?
I would like to end up with a dictionary that looks as following:</p>
<p><code>{'choice_text for id=1':3, 'choice_text for id=2':2, 'choice_text for id=3':1}</code></p>
<p>EDIT:Additionally what if I wanted to do the same procedure to the list I already have.</p>
<p><code>my_list = ['1', '2', '1', '3', '2', '1']</code></p>
<p>to something like this:</p>
<p><code>another_list = ['choice_text for id=1', 'choice_text for id=2', 'choice_text for id=1', 'choice_text for id=3', 'choice_text for id=2', 'choice_text for id=1']</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Well we can first load a dictionary that maps <code>id</code>s to <code>choice_text</code>:</p>
<pre><code>mapping = dict(Choice.objects.filter(pk__in=votes.keys())
                             .values_list('pk', 'choice_text'))
</code></pre>
<p>Here with <code>pk__in</code> we thus make a filter (which is, strictly speaking, not necessary, but will reduce the amount of work both for the database and the webserver, unless the number of <code>id</code>s is huge). Then we want it to return <code>values_list</code>s, so for every element a list with two elements: the <code>pk</code> and the <code>choice_text</code>.</p>
<p>We use the <code>dict(..)</code> constructor, which can fetch an iterable of 2-lists (or 2-tuples), and converts it to a dictionary where for every element the left item of the sublist/tuple is the key, and the right item is the value.</p>
<p>Now we can use this to construct a new dictionary:</p>
<pre><code>votes_with_text = {mapping[int(k)]: v for k, v in votes.items()}
</code></pre>
<p>Note that in case there are two <code>Choice</code>s with the <em>same</em> <code>choice_text</code>, then it will only retain <em>one</em> of the elements in the counter.</p>
<p>In case the <code>choice_text</code>s should be different for every two <code>Choice</code>s with the same <code>question</code>, you can enforce that at the model level with <code>unique_together</code>:</p>
<pre><code>class Choice(models.Model):
    question = models.ForeignKey(Poll, on_delete=models.CASCADE)
    choice_text = models.CharField(max_length=200)

    class Meta:
       <b>unique_together = (('question', 'choice_text'), )</b></code></pre>
</div>
<div class="post-text" itemprop="text">
<p>to get the name of your choice : </p>
<p><code>choice_text = Choice.objects.get(pk=choice_id)</code></p>
<p>so you have to iterate over your ids, get the choice_text and use :</p>
<p><code>votes[choice_text] = votes.pop(choice_id)
</code> 
to rename your keys to the corresponding choice names. </p>
</div>
<span class="comment-copy">What should happen if two <code>choice_text</code>s are the same (for different choices). If that can not happen, I would enforce that on the model level.</span>
<span class="comment-copy">I will make sure to enforce it in the model. But shouldn't the filtering include the <code>question</code> field too? Like so:  <code>mapping = dict(Choice.objects.filter(question = quesion_id, pk__in=votes.keys()).values_list('pk', 'choice_text'))</code>  Also can you explain what <code>pk__in</code> actually does?</span>
<span class="comment-copy">@kstr: well the ids aitself are always unique, so if the <code>id</code>s all belong to the same question (which is likely the case), then these will all have the same question.</span>
<span class="comment-copy">oops yes you're right, didn't realize that.</span>
<span class="comment-copy">@kstr: updated with some extra information on the dictionary construction.</span>
<span class="comment-copy">I have another similar question that is kinda off topic but I would really appreciate if you could answer. What if I wanted to do the same but to the list instead of the dictionary? <code>my_list = ['1', '2', '1', '3', '2', '1']</code> to something like: <code>another_list=['choice_text_id=1', 'choice_text_id=2', 'choice_text_id=1', 'choice_text_id=3', 'choice_text_id=2', 'choice_text_id=1']</code></span>
