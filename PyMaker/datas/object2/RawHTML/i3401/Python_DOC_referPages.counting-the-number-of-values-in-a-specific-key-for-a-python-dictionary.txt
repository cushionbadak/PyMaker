<div class="post-text" itemprop="text">
<p>Can someone explain this to me, and/or direct me on the right/pythonic way of doing this?  </p>
<p>Python 2.7.</p>
<p>Ultimately, I am trying to loop through dictionary countsD:</p>
<pre><code>countsD = {"aa": None, "bb": None, "cc": None, "dd": None} 
</code></pre>
<p>and for the match in a corresponding dictionary d:</p>
<pre><code>d = {"aa": (5689, 34, 44, 77, 88, 321), "bb": (33, 6742, 89744), "cc": (45, 98), "dd": (1, 33)}
</code></pre>
<p>add the count of items as a value to the corresponding matching key, to create finally this countsD</p>
<pre><code>{"aa": 6, "bb": 3, "cc": 2, "dd": 2}
</code></pre>
<p>If I do this with the above</p>
<pre><code>&gt; d = {"aa": (5689, 34, 44, 77, 88, 321), "bb": (33, 6742, 89744), "cc": (45, 98), "dd": (1, 33)}

&gt; for key in d:

&gt;&gt;     print(key)
&gt;&gt;     print(len(d[key]))
</code></pre>
<p>Returned is this, which is what I want</p>
<pre><code>aa
6
cc
2
dd
2
bb
3
</code></pre>
<p>HOWEVER, if one of the values for a key only contains 1 value (entirely possible), like (see "cc"):</p>
<pre><code>d = {"aa": (5689, 34, 44, 77, 88, 321), "bb": (33, 6742, 89744), "cc": (45), "dd": (1, 33)}
</code></pre>
<p>and then run the same for loop, I get an error on the "cc" key:</p>
<pre><code>aa
6
cc
Traceback (most recent call last):
  File "&lt;interactive input&gt;", line 3, in &lt;module&gt;
TypeError: object of type 'int' has no len()
</code></pre>
<p>HOWEVER again, if I make that "cc" key have an empty value (), then all is fine again.</p>
<pre><code>d = {"aa": (5689, 34, 44, 77, 88, 321), "bb": (33, 6742, 89744), "cc": (), "dd": (1, 33)}

&gt;&gt;&gt; d = {"aa": (5689, 34, 44, 77, 88, 321), "bb": (33, 6742, 89744), "cc": (), "dd": (1, 33)}
&gt;&gt;&gt; for key in d:
...     print(key)
...     print(len(d[key]))
... 
aa
6
cc
0
dd
2
bb
3
</code></pre>
<p>And in typing the title for this post just now, I was referred to <a href="https://stackoverflow.com/questions/23865851/count-number-of-values-in-dictionary-for-each-key">Count number of values in dictionary for each key</a> for an answer.  Great, one line!  But again, for a key with just one value, it fails.  This good:</p>
<pre><code>&gt;&gt;&gt; d = {"aa": (5689, 34, 44, 77, 88, 321), "bb": (33, 6742, 89744), "cc": (), "dd": (1, 33)}
&gt;&gt;&gt; new_countsD = {k: len(v) for k,v in d.items()}
&gt;&gt;&gt; new_countsD
{'aa': 6, 'bb': 3, 'cc': 0, 'dd': 2}
</code></pre>
<p>this not, see key "cc"</p>
<pre><code>&gt;&gt;&gt; d = {"aa": (5689, 34, 44, 77, 88, 321), "bb": (33, 6742, 89744), "cc": (111), "dd": (1, 33)}
&gt;&gt;&gt; new_countsD = {k: len(v) for k,v in d.items()}
Traceback (most recent call last):
  File "&lt;interactive input&gt;", line 1, in &lt;module&gt;
  File "&lt;interactive input&gt;", line 1, in &lt;dictcomp&gt;
TypeError: object of type 'int' has no len()
</code></pre>
<p>So, what gives??  I feel like I am missing something stupid...</p>
<p>Thanks for any help!</p>
</div>
<div class="post-text" itemprop="text">
<p>This is happening because when you save a value like <code>cc</code> with only one value, it is just saved as an <code>int</code> and is no longer a tuple, which means it does not have a <code>len()</code> function. You can just add a check of the value's <code>type</code>, such as:</p>
<pre><code>if type(d[key]) == int:
    print(1)
else:
    print(len(d[key]))
</code></pre>
<p>This way, you will not try to access the length property of an <code>int</code>, and will not get your error.</p>
</div>
<div class="post-text" itemprop="text">
<p>In python, a single-item tuple (called a singleton) is written as <code>(value,)</code>, so the <code>(111)</code> in your input should be written as <code>(111,)</code> instead; otherwise it would be considered an integer of <code>111</code>.</p>
<p>From <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer"><code>tuple</code>'s documentation</a>:</p>
<blockquote>
<p>A special problem is the construction of tuples containing 0 or 1
  items: the syntax has some extra quirks to accommodate these. Empty
  tuples are constructed by an empty pair of parentheses; a tuple with
  one item is constructed by following a value with a comma (it is not
  sufficient to enclose a single value in parentheses). Ugly, but
  effective.</p>
<pre><code>&gt;&gt;&gt; empty = ()
&gt;&gt;&gt; singleton = 'hello',    # &lt;-- note trailing comma
&gt;&gt;&gt; len(empty)
0
&gt;&gt;&gt; len(singleton)
1
&gt;&gt;&gt; singleton
('hello',)
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/12876177/how-to-create-a-tuple-with-only-one-element">How to create a tuple with only one element</a></span>
<span class="comment-copy">True.  Sometimes, especially when you're new to this, you just don't exactly know what to search for to figure it  out yourslef.  Ultimately, I did not know that what I was dealing here was a tuple.  But, all these responses were helpful, good learning for me.</span>
<span class="comment-copy">Thank-you for the help!!  But I must say that seems odd that you can't get a length of 1 for one item, but you can get a length/count of zero for no items.... in a tuple.  I'm not a pro at this, so not for me to understand yet :-D</span>
<span class="comment-copy">So how would you implement this test for int vs tuple with  'new_countsD = {k: len(v) for k,v in d.items()}'  ???</span>
<span class="comment-copy">Glad to be of help. Can you mark this question as answered if you think it's correct?</span>
