<div class="post-text" itemprop="text">
<p>I've got this dataset in a .csv file:
<a href="https://www.dropbox.com/s/2kzpzkhoiolhnlc/output.csv?dl=0" rel="nofollow noreferrer">https://www.dropbox.com/s/2kzpzkhoiolhnlc/output.csv?dl=0</a></p>
<pre><code>19,3,12
3
12
16,4
26,15,8,3
2
8
15
20
12,25,20,2,16
12,16
12,25
2,16
1,12
16,4
11,19,25,20
11,20,16,21
25,20,21
.....
</code></pre>
<p>for each row, if numbers are less then 51 than I need to add ? until having 51 chars in that row. For example, in the first row I have 19,3,12, so I have to add 48 ? to have a row like this: <code>19,3,12,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?</code>
In the second row I have just one number, so I have to add 50 ?, the same for the other rows. Could you help me please?</p>
<p>EDIT: I've tried with this but didn't work, it just added "" to some rows:</p>
<pre><code>import pandas as pd
df = pd.read_csv('output.csv', sep=';')
df = df.fillna('?')
df.to_csv('sorted2.csv', index=False)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can do it with just text file manipulation if you want, no need to use pandas or csv module for this simple case.</p>
<pre><code>import csv
with open('source.csv') as f:
    with open('result.csv', 'w') as fw:
        for line in f:
            line = line.strip() + (',?' * (50 - line.count(',')))
            fw.write(line + '\n')   
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use pandas to read the file in and set the number of columns you want. The following code reads in a file and assigns n columns. The extra elements will by default have value np.nan</p>
<pre><code>df.read_csv('file', names=range(n))
</code></pre>
<p>If you want them to have a different value you can assign it with </p>
<pre><code>df.fillna(value, inplace = True)
</code></pre>
<p>Then you can just write the dataframe back into the file and it will have the shape you want </p>
<pre><code>df.to_csv('file')
</code></pre>
</div>
<span class="comment-copy">You mean columns, not characters, right?</span>
<span class="comment-copy">can you post the code you have tried?</span>
<span class="comment-copy">Anyway, you do this the same way you do anything else with CSV files. Use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> to open a reader on the input file and a writer on the output file. Then just loop over <code>for row in reader:</code>, extend the row out to length 51, and write it to the writer.</span>
<span class="comment-copy">Or, if you want to use Pandas, its <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html" rel="nofollow noreferrer"><code>read_csv</code></a> automatically fills in missing columns, and you can specify the missing value to use, or convert it from <code>NaN</code> after reading.</span>
<span class="comment-copy">And if your code <i>didn't</i> raise an exception, the wrong <code>sep</code> would mean you read one giant column, and then append 50 <code>?</code> columns onto every row. But if you fix <i>both</i> of those problems, thenâ€¦ <a href="https://repl.it/repls/FixedKookyComputer" rel="nofollow noreferrer">see repl.it for a working example</a>.</span>
<span class="comment-copy">Sorry, I was meaning about columns, I should have 51 columns and not 51 rows! And I've added the code I've tried in the first post</span>
<span class="comment-copy">This code <i>does</i> create 51 columns, not 51 rows.</span>
<span class="comment-copy">@Nicola I had a typo in my answer which I have fixed, my code will make 51 columns. Also in your added code you use <code>sep = ";"</code> but your csv file uses <code>sep = ","</code> which is the read_csv default</span>
