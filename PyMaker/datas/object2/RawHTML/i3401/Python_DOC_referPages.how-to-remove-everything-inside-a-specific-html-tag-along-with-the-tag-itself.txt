<div class="post-text" itemprop="text">
<p>Say you have this string:</p>
<pre><code>text = """&lt;p&gt;Bla bla bla.&lt;/p&gt;&lt;p&gt;Blo blo blo&lt;a 
href="http://www.example.com"&gt;bli bli&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;blu blu&lt;br&gt;
&lt;span style="font-size: x-small;"&gt;&lt;br&gt;
content to remove&lt;/span&gt;&lt;/p&gt;"""
</code></pre>
<p>My goal is to remove everything inside <code>&lt;span style="font-size: x-small;"&gt;&lt;br&gt;content to remove&lt;/span&gt;</code>, along with the opening and closing tags.</p>
<p>So I can only delete span tags (and its content) if attribute style is <code>"font-size: x-small;"</code>.</p>
<p>My code doesn't work. Here it is:</p>
<pre><code>import re    
pattern = re.compile(r"\&lt;span style='font-size: x-small;'\&gt;.*?\&lt;/span\&gt;")
new_text = pattern.sub(lambda match: match.group(0).replace(match.group(0),'') ,text) 
</code></pre>
<p>I'd rather go with Python itself, cause I no nothing about regex (as you can see...). But if regex is the way to go, I will take it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer">find</a>, indexing and string concatenation.</p>
<pre><code>new_text = text[:text.find("&lt;span")]+text[text.find("&lt;/span&gt;")+7:]
</code></pre>
<p><code>text.find("&lt;/span&gt;")+7</code> looks for the index of the first occurence of , then adds 7 to that index, the length of the tag itself. </p>
<p>There are many ways to approach this. For any non-trivial html parsing I'd recommend <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer">Beautifulsoup</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I found a way with Beautiful Soup:</p>
<pre><code>from bs4 import BeautifulSoup

soup = BeautifulSoup(text, 'html.parser')
spans_to_delete = soup.find_all('span', style=lambda value: value and 'font-size: x-small' in value)

if spans_to_delete:
    for span in spans_to_delete:
        span.extract()

    new_text = str(soup)
else:
    print('No span with desired style found')
</code></pre>
<p>Actually <a href="https://stackoverflow.com/questions/35140158/using-beautifulsoup-to-find-tag-with-two-specific-styles">this</a> thread's first answer gave me the directions.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would go with regex.</p>
<p>The regex <code>\&lt;span(.*)span&gt;</code> matches everything inside the span tags, including the opening and closing tags. Try this:</p>
<pre><code>    String text = "&lt;p&gt;Bla bla bla.&lt;/p&gt;&lt;p&gt;Blo blo blo&lt;a 
    href=\"http://www.example.com\"&gt;bli bli&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;blu blu&lt;br&gt;&lt;span 
    style=\"font-size: x-small;\"&gt;&lt;br&gt;content to remove&lt;/span&gt;&lt;/p&gt;";
    text = text.replaceAll("\\&lt;span(.*)span&gt;", "");
</code></pre>
</div>
<span class="comment-copy">Well it works, but I can only delete span tags (and its content) if <code>style="font-size: x-small;"</code>. I guess your code would remove all span tags content, which is no good for me.</span>
<span class="comment-copy">Only the first occurence. See the documentation for find. You could expand the find clause with the style tags to do so.</span>
<span class="comment-copy">I saw the documentation, but I couldn't find a way to remove all span tags (along with content) <code>when style="font-size: x-small;"</code></span>
<span class="comment-copy">OP asked specifically to avoid regex</span>
<span class="comment-copy">No he didn't. He just said he prefers python, but he would consider a regex solution.</span>
<span class="comment-copy">As I said before, I can only delete span tags (and its content) if style="font-size: x-small;". I guess your code would remove all span tags content, which is no good for me. But, yes, I would consider regex or maybe beautifulsoup.</span>
