<div class="post-text" itemprop="text">
<p>So I have data that looks something like this:</p>
<pre><code>&gt;&gt; print data
"12345","string1","string2","string3","string4","string5"
"67890","string6","string7","string8","string9","string10"
</code></pre>
<p>I want to be able to put each line as an array, into an array. So in the end, I want it to look something like this:</p>
<pre><code>&gt;&gt; print array_data
[["12345","string1","string2","string3","string4","string5"],
["67890","string6","string7","string8","string9","string10"]]
</code></pre>
<p>I have tried a few things and this is the closest I got:</p>
<pre><code>&gt;&gt; temp_list = []
&gt;&gt; for line in data.splitlines(): temp_list.append([line])
&gt;&gt; print temp_list
[['"12345","string1","string2","string3","string4","string5"'],
['"67890","string6","string7","string8","string9","string10"']]
</code></pre>
<p>I am getting that single quote around each array. How should I proceed to get the result that I am looking for?</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>ast</code> and <code>split</code></p>
<h3>setup</h3>
<pre><code>import ast
d = '''
"12345","string1","string2","string3","string4","string5"
"67890","string6","string7","string8","string9","string10"
'''
templist=[]
</code></pre>
<p>Then just</p>
<pre><code>for line in d.strip().splitlines(): 
    templist.append([ast.literal_eval(st) for st in line.split(',')])
</code></pre>
<p>Notice that you can also make a oneliner using list comprehension</p>
<pre><code>templist = [[ast.literal_eval(st) for st in line.split(',')] for line in d.strip().splitlines()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using pandas:</p>
<pre><code>import pandas as pd

d = '''\
"12345","string1","string2","string3","string4","string5"
"67890","string6","string7","string8","string9","string10"'''

l = pd.read_csv(pd.compat.StringIO(d), header=None, dtype='object').values
</code></pre>
<p>And you have l:</p>
<pre><code>[['12345', 'string1', 'string2', 'string3', 'string4', 'string5'],
 ['67890', 'string6', 'string7', 'string8', 'string9', 'string10']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/csv.html#module-csv" rel="nofollow noreferrer"><code>csv</code></a> and <a href="https://docs.python.org/3/library/io.html#module-io" rel="nofollow noreferrer"><code>io</code></a> modules from the standard library:</p>
<pre><code>import csv
from io import StringIO

d = '''"12345","string1","string2","string3","string4","string5"
"67890","string6","string7","string8","string9","string10"'''

res = list(csv.reader(StringIO(d)))

print(res)

[['12345', 'string1', 'string2', 'string3', 'string4', 'string5'],
 ['67890', 'string6', 'string7', 'string8', 'string9', 'string10']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given:</p>
<pre><code>&gt;&gt;&gt; data
'"12345","string1","string2","string3","string4","string5"\n"67890","string6","string7","string8","string9","string10"'
</code></pre>
<p>You can do (if the <code>'</code> do not otherwise indicate csv fields that might have <code>,</code> in them!):</p>
<pre><code>&gt;&gt;&gt; [line.replace('"','').split(',') for line in data.splitlines()]
[['12345', 'string1', 'string2', 'string3', 'string4', 'string5'], ['67890', 'string6', 'string7', 'string8', 'string9', 'string10']]
</code></pre>
<p>Or you can use <a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer">csv</a> to properly handle commas in the fields:</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; [list(e) for e in csv.reader(data.splitlines())]
[['12345', 'string1', 'string2', 'string3', 'string4', 'string5'], ['67890', 'string6', 'string7', 'string8', 'string9', 'string10']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are almost there.</p>
<pre><code>&gt;&gt; temp_list = []
&gt;&gt; temp_list = [list(eval(line)) for line in data.splitlines()]
&gt;&gt; print temp_list
[['12345', 'string1', 'string2', 'string3', 'string4', 'string5'], ['67890', 'string6', 'string7', 'string8', 'string9', 'string10']]
</code></pre>
</div>
<span class="comment-copy">If you're still confused, check out how quotes work in Python to indicate strings: <a href="https://docs.python.org/2.0/ref/strings.html" rel="nofollow noreferrer">docs.python.org/2.0/ref/strings.html</a></span>
<span class="comment-copy">If you downvote a answer, also provide a reason for it.</span>
