<div class="post-text" itemprop="text">
<p>Recently, I came across the following oddity.  Nesting <code>{}</code>-enclosed format fields seems to work in both Python 2.7 and 3.6, but I can't find anything in the docs to say that should be so.  For example, I get the following result on both 3.6 and 2.7:</p>
<pre><code>&gt;&gt;&gt; '{:{}.{}f}'.format(27.5, 6, 2)
' 27.50'
</code></pre>
<p>Has anyone seen this before, and is it an intended feature?  Normally, I'd dismiss this as an implementation quirk, and maybe report it as a bug. Two things, though:  Python docs don't always put all the information in the place I'd look for it, and this is a Very Nice Feature to have. </p>
</div>
<div class="post-text" itemprop="text">
<p>This is documented at the end of the introduction to the <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="noreferrer">"Format String Syntax"</a> section:</p>
<blockquote>
<p>A <em>format_spec</em> field can also include nested replacement fields within it. These nested replacement fields may contain a field name, conversion flag and format specification, but deeper nesting is not allowed. The replacement fields within the format_spec are substituted before the <em>format_spec</em> string is interpreted. This allows the formatting of a value to be dynamically specified.</p>
</blockquote>
<p>Some examples of this feature can also be found at the end of the <a href="https://docs.python.org/3/library/string.html#format-examples" rel="noreferrer">"Format examples"</a> section, such as:</p>
<pre><code>&gt;&gt;&gt; for align, text in zip('&lt;^&gt;', ['left', 'center', 'right']):
...     '{0:{fill}{align}16}'.format(text, fill=align, align=align)
...
'left&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;'
'^^^^^center^^^^^'
'&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;right'
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">There is explicit mention of the behaviour in PEP 3101 <a href="https://www.python.org/dev/peps/pep-3101/#format-specifiers" rel="nofollow noreferrer">python.org/dev/peps/pep-3101/#format-specifiers</a>. Nice feature thanks for pointing it out.</span>
<span class="comment-copy">Yes, they are legal (and work).</span>
<span class="comment-copy">BTW, nested formatting also works in Python 3.6+ f-strings. There's even a way to do dynamic formatting with the old <code>%</code> style string interpolation using <code>*</code>.</span>
<span class="comment-copy">Thanks!  I <i>know</i> I read page in both the 2.7 and 3.x docs and missed that paragraph both times.</span>
