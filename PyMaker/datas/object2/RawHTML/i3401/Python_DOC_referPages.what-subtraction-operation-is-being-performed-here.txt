<div class="post-text" itemprop="text">
<p>I have a <code>DataFrame</code> with a number of columns, and a <code>Series</code>. Both have the same <code>DateTimeIndex</code>.</p>
<p><strong><code>DataFrame</code>:</strong></p>
<pre><code>&gt;&gt;&gt; print(df)

                 AAPL      GOOG       MSFT         AMZN        FB
2018-01-01        NaN       NaN        NaN          NaN       NaN
2018-01-02  -0.667375 -1.567656  -1.161474    -0.674142 -1.886490
2018-01-03   2.004473 -2.802214 -24.084166    -2.447172  2.346972
2018-01-04  -4.261619 -1.471697  -0.027939    -1.753661 -1.835053
2018-01-05  -1.008718 -2.816736  -1.524315    -1.001672  0.080345
2018-01-06 -30.325012 -1.056776  -1.190017  2319.212083 -1.847443
2018-01-07   0.497589  8.588272  -2.434537    -0.793424 -1.194649
2018-01-08  -1.650655 -0.583868 -10.141386     2.704900  7.449458
2018-01-09   1.821119 -6.742207  -0.710584    -0.003800 -1.535461
2018-01-10  -0.624853  0.030330   0.405643    -0.513841 -0.775323
</code></pre>
<p><strong><code>Series</code>:</strong></p>
<pre><code>&gt;&gt;&gt; print(ser)

2018-01-01           NaN
2018-01-02     -1.191427
2018-01-03     -4.996421
2018-01-04     -1.869994
2018-01-05     -1.254219
2018-01-06    456.958567
2018-01-07      0.932650
2018-01-08     -0.444310
2018-01-09     -1.434187
2018-01-10     -0.295609
</code></pre>
<p>If I attempt to subtract the series from the dataframe, I get the following result:</p>
<pre><code>&gt;&gt;&gt; df - ser

            2018-01-01 00:00:00  2018-01-02 00:00:00  2018-01-03 00:00:00  \
2018-01-01                  NaN                  NaN                  NaN   
2018-01-02                  NaN                  NaN                  NaN   
2018-01-03                  NaN                  NaN                  NaN   
2018-01-04                  NaN                  NaN                  NaN   
2018-01-05                  NaN                  NaN                  NaN   
2018-01-06                  NaN                  NaN                  NaN   
2018-01-07                  NaN                  NaN                  NaN   
2018-01-08                  NaN                  NaN                  NaN   
2018-01-09                  NaN                  NaN                  NaN   
2018-01-10                  NaN                  NaN                  NaN   

            2018-01-04 00:00:00  2018-01-05 00:00:00  2018-01-06 00:00:00  \
2018-01-01                  NaN                  NaN                  NaN   
2018-01-02                  NaN                  NaN                  NaN   
2018-01-03                  NaN                  NaN                  NaN   
2018-01-04                  NaN                  NaN                  NaN   
2018-01-05                  NaN                  NaN                  NaN   
2018-01-06                  NaN                  NaN                  NaN   
2018-01-07                  NaN                  NaN                  NaN   
2018-01-08                  NaN                  NaN                  NaN   
2018-01-09                  NaN                  NaN                  NaN   
2018-01-10                  NaN                  NaN                  NaN   

            2018-01-07 00:00:00  2018-01-08 00:00:00  2018-01-09 00:00:00  \
2018-01-01                  NaN                  NaN                  NaN   
2018-01-02                  NaN                  NaN                  NaN   
2018-01-03                  NaN                  NaN                  NaN   
2018-01-04                  NaN                  NaN                  NaN   
2018-01-05                  NaN                  NaN                  NaN   
2018-01-06                  NaN                  NaN                  NaN   
2018-01-07                  NaN                  NaN                  NaN   
2018-01-08                  NaN                  NaN                  NaN   
2018-01-09                  NaN                  NaN                  NaN   
2018-01-10                  NaN                  NaN                  NaN   

            2018-01-10 00:00:00  AAPL  GOOG  MSFT  AMZN  FB  
2018-01-01                  NaN   NaN   NaN   NaN   NaN NaN  
2018-01-02                  NaN   NaN   NaN   NaN   NaN NaN  
2018-01-03                  NaN   NaN   NaN   NaN   NaN NaN  
2018-01-04                  NaN   NaN   NaN   NaN   NaN NaN  
2018-01-05                  NaN   NaN   NaN   NaN   NaN NaN  
2018-01-06                  NaN   NaN   NaN   NaN   NaN NaN  
2018-01-07                  NaN   NaN   NaN   NaN   NaN NaN  
2018-01-08                  NaN   NaN   NaN   NaN   NaN NaN  
2018-01-09                  NaN   NaN   NaN   NaN   NaN NaN  
2018-01-10                  NaN   NaN   NaN   NaN   NaN NaN  
</code></pre>
<p>I also get the following warning:</p>
<blockquote>
<pre><code>RuntimeWarning: Cannot compare type 'Timestamp' with type 'str', sort order is
undefined for incomparable objects
  return this.join(other, how=how, return_indexers=return_indexers)
</code></pre>
</blockquote>
<p>I know that I can achieve element-wise subtraction using <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sub.html" rel="nofollow noreferrer"><code>DataFrame.sub</code></a></p>
<pre><code>&gt;&gt;&gt; res = df.sub(ser, axis=0)
&gt;&gt;&gt; print(res)

                  AAPL        GOOG        MSFT         AMZN          FB
2018-01-01         NaN         NaN         NaN          NaN         NaN
2018-01-02    0.524052   -0.376229    0.029954     0.517286   -0.695062
2018-01-03    7.000894    2.194208  -19.087745     2.549249    7.343393
2018-01-04   -2.391625    0.398297    1.842054     0.116333    0.034941
2018-01-05    0.245501   -1.562517   -0.270096     0.252547    1.334565
2018-01-06 -487.283579 -458.015343 -458.148584  1862.253516 -458.806010
2018-01-07   -0.435061    7.655622   -3.367187    -1.726074   -2.127300
2018-01-08   -1.206344   -0.139558   -9.697076     3.149210    7.893768
2018-01-09    3.255306   -5.308020    0.723603     1.430386   -0.101274
2018-01-10   -0.329244    0.325939    0.701251    -0.218232   -0.479714
</code></pre>
<p>What I don't know, however, is:</p>
<ul>
<li><p><strong>What operation</strong> is performed using <code>Dataframe.__sub__</code>?</p></li>
<li><p>Additionally, it seems very counter-intuitive to me that subtracting a <code>Series</code> from a <code>DataFrame</code> with matching <code>Index</code> types / contents, <strong>doesn't</strong> do an element-wise subtraction. What is the rationale behind not doing this?</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Reading the docs you so nicely linked to we find this:</p>
<blockquote>
<p>axis : {0, 1, ‘index’, ‘columns’}</p>
<p>For Series input, axis to match Series index on</p>
</blockquote>
<p>And the default value is <code>'columns'</code>. This gives us a hint of what happens when you do a substraction, i.e.:</p>
<pre><code>df.sub(s) # by not specifying axis you are passing axis=1 / 'columns'
</code></pre>
<p><strong>or</strong></p>
<pre><code>df - s
</code></pre>
<p>None of which will work as you want. Now let us look back on the yellow box. The other alternative is <code>'index'</code> and we would match the index (which sounds exactly like what you expect), i.e.:</p>
<pre><code>df.sub(s, axis=0) # or 'index' &lt;-- note that you pass a param here
</code></pre>
<p><strong>or</strong> </p>
<pre><code>(df.T - s).T  #swap columns and rows and swap back again (transpose)
</code></pre>
<hr/>
<p><strong>Why?</strong> This is a design question. The designers might aswell have set <code>'index'</code> as default but for reasons unknown (and probably because it is more frequently used and that the underlying package behind pandas, numpy, does operation that way) they chose <code>columns</code>. The numpy behaviour is easily tested by doing this: <code>df.values - s.values</code> which indeed operates on columns where as you are interested in rows (index).</p>
<p><strong>Short why:</strong> numpy works like this.</p>
<hr/>
<p>The most elegant solution for this is to use <code>.sub()</code> and specifying <code>axis='index'</code>. (or 0, but index might be more readable in this case)</p>
</div>
<span class="comment-copy">Maybe you can use the <a href="https://docs.python.org/3/library/traceback.html" rel="nofollow noreferrer">traceback module</a> to see what function is called?</span>
