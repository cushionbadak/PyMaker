<div class="post-text" itemprop="text">
<p>I tried the following code:</p>
<pre><code>with x as 1:
    y = 1
with z as 1:
    w = 1
</code></pre>
<p>The compiler reported a SyntaxError: invalid syntax. What is the problem?</p>
<p>[EDITED:] What I was trying to do is:</p>
<pre><code>import tensorflow as tf
with tf.variable_scope("model"):
    y = 1
with tf.variable_scope("model2"):
    z = 1
</code></pre>
<p>I want to change the namescope in tensorflow for sharing variables. I looked at the online tutorial but that doesn't help much.</p>
</div>
<div class="post-text" itemprop="text">
<p>Oversimplifying slightly, your code:</p>
<pre><code>with x as 1:
    y = 1
</code></pre>
<p>… translates to something like this:</p>
<pre><code>try:
    1 = x.__enter__()
    y = 1
finally:
    1.__exit__()
</code></pre>
<p>Writing <code>1 = x.__enter__()</code> is obviously going to raise a <code>SyntaxError: can't assign to literal</code>, because it doesn't mean anything to assign a new value to the literal constant <code>1</code>.</p>
<p>Doing the same thing in a <code>with</code> statement raises the same exception. (In old versions of Python (I think just 2.5?), the error message wasn't quite as useful, and it just said <code>SyntaxError: invalid syntax</code>, but the problem is the same.)</p>
<hr/>
<p>Depending on what was in <code>x</code>, getting past the <code>SyntaxError</code> may well just raise a new exception, <code>AttributeError: __enter__</code>. Only <a href="https://docs.python.org/3/reference/datamodel.html#with-statement-context-managers" rel="nofollow noreferrer">context managers</a> can be used in a <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer"><code>with</code> statement</a>. Roughly, these are things that know how to clean up after themselves, and where it's important to get them to clean up at the end of some block of code no matter what. Files are the prototypical example: they call <code>self.close()</code> when you exit the block, which makes sure you don't get OS errors from having hundreds of open files lying around, or fail to flush the last <code>write</code>, or other such problems.</p>
<p>For more information on <code>with</code>, see <a href="https://www.python.org/dev/peps/pep-0343/" rel="nofollow noreferrer">PEP 343</a>, the proposal that originally added <code>with</code> to Python 2.5, or <a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow noreferrer">Understanding Python's "with" statement (from effbot)</a>.</p>
<hr/>
<p>So, the question here is: what were you trying to do? If you just want to assign the value <code>1</code> to the name <code>x</code>, you already know how to do that, because you did it with <code>y</code> in the very next line: just <code>x = 1</code>. If you were trying to do something different… well, there probably is a way to do it, but <code>with</code> may well be nowhere near the right answer.</p>
</div>
<div class="post-text" itemprop="text">
<p>You misunderstand Python's <a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow noreferrer">with statement</a>.  If you tell us what you want to do, we can help.</p>
<pre><code>with context_obj as name:
</code></pre>
<p>creates a context (execution environment) with three characteristics:</p>
<ol>
<li>On entering the context, the object's <code>__enter__</code> method (function) is called;</li>
<li>The return value of that function is assigned to <code>name</code>;</li>
<li>On leaving the context, the object's <code>__exit__</code> method is called, <em>regardless of how we leave the context</em>.</li>
</ol>
<p>Your attempt, <code>with x as 1</code> fails on all characteristics.  <code>x</code> has no <code>__enter__</code> or <code>__exit__</code> method; there is no return value; you could not assign that return value to the constant <code>1</code>.</p>
</div>
<span class="comment-copy">The error is because this isn't valid syntax—the thing after <code>as</code> has to be an assignment target, and you can't assign to constants like <code>1</code>.</span>
<span class="comment-copy">That probably doesn't help you at all. But what you've written is basically nonsense. If you can explain what you wanted that line of code to do, and why you thought <code>with x as 1:</code> would do it, we could probably explain the right way to do it.</span>
<span class="comment-copy">By the way, what version of Python are you using? Python 2.7 and 3.5+ definitely give a slightly more informative <code>SyntaxError: can't assign to literal</code>, and I think that's been true since around 2.6 and 3.2.</span>
<span class="comment-copy">I am using Python 3.6.5.</span>
<span class="comment-copy">Nice answer. I think adding <a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow noreferrer">this</a> source would turn it into a great one (it sheds some light on your first paragraph).</span>
<span class="comment-copy">@yakobyd Added. Although really, that article seems a lot more focused on why 2.5 adds <code>with</code>, and how to do similar things in 2.4, than on how it works and what to do with it. (Probably because the PEP covered the how pretty well, but not much else.)</span>
