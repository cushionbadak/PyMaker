<div class="post-text" itemprop="text">
<p>I'm trying to write clean and concise code, and in a lot of code I look over sometimes I see people are inconsistent in their code. What I'm asking is, is there ever an instance where this</p>
<p><code>print("Cars on the road: " + cars)</code></p>
<p>is more appropriate than this</p>
<p><code>print("Cars on the road: {}".format(cars))</code></p>
<p>or is it just a matter of preference?</p>
</div>
<div class="post-text" itemprop="text">
<p>The big functional difference between the two examples you gave is that when you concatenate with <code>+</code>, the operation will fail if the object on the right side of the operand is not a string:</p>
<pre><code>"abc" + object()
</code></pre>
<p>For instance will cause the following:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: Can't convert 'object' object to str implicitly
</code></pre>
<p>This is true even if the object on the right side implements the <a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer"><code>__str__</code></a> method: </p>
<pre><code>class Foo:
    def __str__(self):
        return "str"
</code></pre>
<p>Using format however will automatically convert a passed argument using the <code>__str__</code> method:</p>
<pre><code>"{}".format(Foo()) # "str"
</code></pre>
<p>There are some situations where this behavior might not be desirable or necessary, such as when you are simply concatenating a string literal with an object that is expected to be a string.</p>
<p>In all other cases I agree with the <a href="https://softwareengineering.stackexchange.com/questions/304445/why-is-s-better-than-for-concatenation">post cited in the comments</a> which provide plenty of good reasons why formatting is more idiomatically correct and potentially more efficient.</p>
</div>
<div class="post-text" itemprop="text">
<p>if you <strong>know</strong> you are dealing with simple strings, then, yes, <em>Simple is better than complex</em>. Formatting capability is great, and something like </p>
<pre><code>“lit1” + var + “lit2” 
</code></pre>
<p>is a definite code smell.  </p>
<p>Your example isn’t and the extra complexity of the template based version is a slight extra cognitive load which <strong>I</strong> would avoid, or at least not strive for, despite using templating extensively. </p>
</div>
<span class="comment-copy">Personally, I like using <code>+</code> when only one or two are needed since I think it's more readable. This is probably a matter of preference though. Some people might like to stay entirely consistent.</span>
<span class="comment-copy"><a href="https://softwareengineering.stackexchange.com/questions/304445/why-is-s-better-than-for-concatenation">this post</a> might help</span>
<span class="comment-copy">maybe this will help <a href="https://softwareengineering.stackexchange.com/questions/304445/why-is-s-better-than-for-concatenation">why is s better than for concatenation</a></span>
<span class="comment-copy">Nowadays with f-strings there's no excuse</span>
<span class="comment-copy">Yes, this is a game-changer in 3.7, I recently upgraded from 3.6 just for that feature. Sadly the OP is stuck on 2.7.</span>
