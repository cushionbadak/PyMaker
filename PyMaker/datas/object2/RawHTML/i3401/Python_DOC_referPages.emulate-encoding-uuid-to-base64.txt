<div class="post-text" itemprop="text">
<p>I am attempting to emulate the way a C# application converts a UUID to a Base64 value. For some reason, I can get part of the string to match the expected value, but not the whole string.</p>
<p>The C# code I was given:</p>
<pre><code>public static string ToShortGuid(this Guid newGuid) {
string modifiedBase64 = Convert.ToBase64String(newGuid.ToByteArray())
.Replace('+', '-').Replace('/', '_') // avoid invalid URL characters
.Substring(0, 22);
return modifiedBase64;
}
</code></pre>
<p>What I have tried in Python 3.6:</p>
<pre><code>import uuid
import base64

encode_str = = base64.urlsafe_b64encode(uuid.UUID("fa190535-6b00-4452-8ab1-319c73082b60").bytes)
print(encode_str)
</code></pre>
<p>"fa190535-6b00-4452-8ab1-319c73082b60" is a known UUID, and the application apparently uses the above c# code to generate a 'ShortGuid' value of "NQUZ-gBrUkSKsTGccwgrYA".</p>
<p>When I process the same UUID through my Python code, I get: "-hkFNWsARFKKsTGccwgrYA=="</p>
<p>From both of these output strings, this part matches: "KsTGccwgrYA", but the rest doesn't.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use <a href="https://docs.python.org/3/library/uuid.html#uuid.UUID.bytes_le" rel="nofollow noreferrer"><code>bytes_le</code></a> to get the endianness to match <a href="https://msdn.microsoft.com/en-us/library/system.guid.tobytearray(v=vs.110).aspx" rel="nofollow noreferrer">Microsoft's</a>:</p>
<pre><code>base64.urlsafe_b64encode(uuid.UUID("fa190535-6b00-4452-8ab1-319c73082b60").bytes_le)
</code></pre>
<p>That gives <code>b'NQUZ-gBrUkSKsTGccwgrYA=='</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>NQUZ-gBrUkSKsTGccwgrYA</code> corresponds to a byte sequence of <code>350519fa006b52448ab1319c73082b60</code>.</p>
<p>If we add <code>-</code> in the appropriate locations, we get:</p>
<pre class="lang-none prettyprint-override"><code> 350519fa-006b-5244-8ab1-319c73082b60
#   \/     \/   \/
#   /\     /\   /\
 fa190535-6b00-4452-8ab1-319c73082b60
</code></pre>
<p>Compared to the known UUID you started with, the bytes are the same, but the order within the first 3 subgroups is reversed.</p>
<p>To emulate what .NET does, you need to use <a href="https://docs.python.org/3/library/uuid.html#uuid.UUID.bytes_le" rel="noreferrer">UUID.bytes_le</a>:</p>
<blockquote>
<p>The UUID as a 16-byte string (with <em>time_low</em>, <em>time_mid</em>, and <em>time_hi_version</em> in little-endian byte order).</p>
</blockquote>
<p>See also <a href="https://stackoverflow.com/questions/9195551/why-does-guid-tobytearray-order-the-bytes-the-way-it-does">Why does Guid.ToByteArray() order the bytes the way it does?</a></p>
</div>
<span class="comment-copy">Decoding <code>NQUZ-gBrUkSKsTGccwgrYA==</code> with <code>urlsafe_b64decode</code> gives me <code>b'5\x05\x19\xfa\x00kRD\x8a\xb11\x9cs\x08+`'</code>, but <code>UUID("fa190535-6b00-4452-8ab1-319c73082b60").bytes</code> is <code>b'\xfa\x19\x055k\x00DR\x8a\xb11\x9cs\x08+`'</code> which is different. Are you <b><i>sure</i></b> the UUIDs are identical in C# and python?</span>
<span class="comment-copy">What I[m reasonably sure is that "fa190535-6b00-4452-8ab1-319c73082b60" is the starting UUID that goes into the c# function, and that "NQUZ-gBrUkSKsTGccwgrYA" is what it returns. The python code above is just my attempt to get to the same return value from the same starting value, and as you can see, the string from the python code partially matches.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/9195551/why-does-guid-tobytearray-order-the-bytes-the-way-it-does">Why does Guid.ToByteArray() order the bytes the way it does?</a></span>
<span class="comment-copy">@melpomene I wouldn't consider that a dupe. Surely an answer to this question should include a solution that makes the generated UUIDs identical?</span>
<span class="comment-copy">Agree with @Aran-Fey - the linked item is helpful to the question, but I don't think is a duplicate.</span>
<span class="comment-copy">Fantastic, thank you, that gets me the result I was looking for!</span>
<span class="comment-copy">Indeed!  This byte swapping is documented by Microsoft at <a href="https://msdn.microsoft.com/en-us/library/system.guid.tobytearray(v=vs.110).aspx" rel="nofollow noreferrer">msdn.microsoft.com/en-us/library/â€¦</a> - <i>"Note that the order of bytes in the returned byte array is different from the string representation of a Guid value. The order of the beginning four-byte group and the next two two-byte groups is reversed, whereas the order of the last two-byte group and the closing six-byte group is the same."</i></span>
<span class="comment-copy">Interesting, how do I correct for that in python? (I need to do this in both directions -- from UUID to converted value, from converted value back to UUID)</span>
