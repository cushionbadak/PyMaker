<div class="post-text" itemprop="text">
<p>I've a MIP to solve with Pyomo and I want to set an initial solution for cplex.
So googling I find that I can set some variable of instance to some value and then execute this:</p>
<p>solver.solve(instance,warmstart=True,tee=True)</p>
<p>But when I run cplex it seem that it doesn't use the warm start, because for example i pass a solution with value 16, but in 5 seconds it return a solution with value 60.
So I don't know there is some error or other stuff that doesn't work.</p>
<p>P.S.
I don't know if is a problem but my warm start solution set only some variale to a value, but not all. Could be a problem? </p>
</div>
<div class="post-text" itemprop="text">
<p>Make sure that the solution you give to CPLEX is feasible. Otherwise, CPLEX will reject it and start from scratch. </p>
<p>If your solution is feasible, it is possible that CPLEX simply found a better solution than yours, since, after all, it is CPLEX's job, and in my own experience, CPLEX is very good at it. Is this a maximization problem? If so, in your example, CPLEX found a better solution (objective=60) than yours (objective=16), which is the expected behavior.</p>
<p>Sadly, CPLEX is often greedy in term of verbose, so it is hard to know from the solver log if warmstart was used or not (unlike its competitor GUROBI where it is clearly written in the log). However, it seems like you started the warmstart correctly, using the <code>warmstart=True</code> parameter. </p>
<p>If, however, your problem isn't a maximization problem, it is possible that CPLEX will not make a differenciation between the variables that you gave a value and the variable that still holds a solution from last solve. Plus, giving values to only a fraction of your variables might make the problem infeasible, considering that all values not manually specified are the values previously found by CPLEX. ex: contraint x&lt;=2y. The solver found x=2, y=1 as a feasible solution. You define x:=3, then your constraint is not respected (y is still =1 for CPLEX, so the constraint x&lt;=2y is 3&lt;=2, which is false). CPLEX will see it as infeasible and will reject your solution. </p>
<p>One alternative that I can give you, if you absolutely want to use your own values in the final solution, is instead of defining values for your variables, create a constraint that explicitly defines your variable value. This constraint can afterward be "deactivated" if needed. But be careful, as this does not necessarily yield the optimal solution, but the "optimal solution when some variables have the specific value". </p>
</div>
<span class="comment-copy">Hi, thanks for replies. No is a minimization problem so seem that could be an error.</span>
<span class="comment-copy">I have edited the answer.</span>
<span class="comment-copy">Thank, I think, that I've solved the problem.</span>
<span class="comment-copy">The problem was that my initial solution was not correct at all</span>
