<div class="post-text" itemprop="text">
<p>I'm writing a simple script that will be used parse the contents of a JSON file stored on AWS CloudWatch. I've added an argument parser to the script that will accept user input, and allow the user to either print the output of the file to the screen (in a predetermined fashion), or allow them to output the contents to a local JSON file. Here's a snippet of what's stumping me:</p>
<pre><code>import argparse

parser = argparse.ArgumentParser(description="Process a log file")
parser.add_argument('-o', '--output', choices=[???, 'print'], 
                    default='print', help='Specify logfile output path or print to screen')
args = parser.parse_args()
</code></pre>
<p>My question stems from the <code>parser.add_argument</code> line, specifically the <code>choices</code> argument. I'd like to allow two inputs for this flag, those being either <code>print</code> or some valid path on their local machine. I'd like the choice that's currently marked by question marks to be a PATH that Python can recognize.</p>
<p>Is there a way, using argparse, to specify that one of of the arguments to a flag must be a PATH? Search results have been, so far, inconclusive.</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/argparse.html#type" rel="noreferrer"><code>type</code> keyword argument</a> to <code>add_argument</code>, instead of <code>choices</code>. As the documentation says:</p>
<blockquote>
<p>The type keyword argument of <code>add_argument()</code> allows any necessary
  type-checking and type conversions to be performed.</p>
</blockquote>
<pre><code>def myfiletype(arg):
    if arg == 'print' or os.path.isdir(arg):
        return arg
    else:
        raise ValueError('Invalid path specification')


parser.add_argument('-o', '--output', type=myfiletype, 
                    default='print', 
                    help='Specify logfile output path or print to screen')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Define a custom <code>type</code> (as in <a href="https://stackoverflow.com/a/14117511/1093967">https://stackoverflow.com/a/14117511/1093967</a>), where the value can be a valid path or <code>'print'</code>. <code>choices</code> isn't the right choice here.</p>
</div>
<span class="comment-copy">The value for <code>choices</code> can be any list of strings.  I suggest using an <code>os</code> function to fetch the list of valid paths, manipulate it if needed, add 'print' to, and then set up <code>add_argument</code>.  Another option is to accept any string (no choices), and do the testing after parsing.</span>
<span class="comment-copy">In my opinion, you shouldn't use <code>choices</code> option. There's a function to check if a path is valid or not (<a href="https://stackoverflow.com/questions/9532499/check-whether-a-path-is-valid-in-python-without-creating-a-file-at-the-paths-ta">see here</a>). To me, you should just check the value of the flag you're receiving. As you should <i>always</i> do anyways.</span>
<span class="comment-copy"><code>choices</code> will be a problem if the list is long - display in help and error messages gets messy.</span>
<span class="comment-copy">I like the way you use <code>type</code> parameter.</span>
<span class="comment-copy">Use <code>argparse.ArgumentTypeError</code> if you want to pass a custom error message.  <code>argparse</code> will ignore your <code>ValueError</code> message.</span>
<span class="comment-copy">Oh man, this is beautiful. Thank you for the help! Cheers!</span>
