<div class="post-text" itemprop="text">
<p>I am writting bot using Selenium to auto comment photos on Instagram. My bot click on photo, write comment, click on next photo, write comment, click on next photo, write comment, etc. Problem is that my bot shuffle one of comments from my comments list but it uses always same shuffled comment... How to solve it? How to improve my function as to after each click or each post the choosen comment was different?</p>
<pre><code>def randomComments(self):
    messages = [
        'Nice cat',
        'What a lovely cat',
        'Wow, great picture',
        'Amaizing, I am in love &lt;3',
        'Beautiful',
        'I have same cat :)'
    ]

    r = random.randint(0, len(messages))

    return messages[r]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could create an iterator as a class member. Initialize at <code>None</code> at start, and if <code>None</code>, use <code>iter</code> on <code>random.sample</code> on your whole list.</p>
<p>When called, return the <code>next</code> element. On <code>StopIteration</code> exception (normal when you reach the end of the list), create another randomly shuffled list wrapped in a new iterable :</p>
<pre><code>import random

class Foo:
    messages = [
        'Nice cat',
        'What a lovely cat',
        'Wow, great picture',
        'Amaizing, I am in love &lt;3',
        'Beautiful',
        'I have same cat :)'
    ]
    def __init__(self):
        self.__msgiter = None
    def randomComments(self):
        if self.__msgiter:
            try:
                return next(self.__msgiter)
            except StopIteration:
                pass

        self.__msgiter = iter(random.sample(self.messages,len(self.messages)))
        return next(self.__msgiter)

f = Foo()
for _ in range(10):
    print(f.randomComments())
</code></pre>
<p>one output:</p>
<pre><code>What a lovely cat
Wow, great picture
I have same cat :)
Amaizing, I am in love &lt;3
Nice cat
Beautiful
Nice cat
What a lovely cat
Beautiful
I have same cat :)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could return a new statement every time with</p>
<pre><code>return random.choice(messages)
</code></pre>
<p>But that would still have a chance at repeating lines. The solution could be to have use <code>random.shuffle</code>, but if you want the object to "remember" what lines were already used, you would have to do that at the <code>__init__</code> phase:</p>
<pre><code>def __init__(self):
    # add to whatever code you already have here
    self.messages = [
        'Nice cat',
        'What a lovely cat',
        'Wow, great picture',
        'Amaizing, I am in love &lt;3',
        'Beautiful',
        'I have same cat :)'
    ]
    random.shuffle(self.messages)

def randomComments(self):
    return self.messages.pop()
</code></pre>
<p>A small warning however, this will fail if you already finished running through the list once, if you need to continue doing this infinitely consider adding that functionality some other way, possibly with <code>itertools</code></p>
</div>
<span class="comment-copy">you can't without some kind of memory.</span>
<span class="comment-copy">I doubt this will directly solve your problem, but consider using <a href="https://docs.python.org/3/library/random.html#random.choice" rel="nofollow noreferrer"><code>random.choice</code></a> when you want to pick an element randomly from a list.</span>
<span class="comment-copy">can anyone explain,I didn't understood the complete question.What exactly happens?</span>
<span class="comment-copy">thank you it works. I do not understand much enough from your answer but I will read about itertools :)</span>
<span class="comment-copy">I'm not using <code>itertools</code> here. just <code>iter</code> to create an iterator out of an iterable</span>
