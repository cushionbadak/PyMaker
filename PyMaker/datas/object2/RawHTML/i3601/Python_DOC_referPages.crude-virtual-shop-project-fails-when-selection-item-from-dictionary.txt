<div class="post-text" itemprop="text">
<p>I am making a crude shop in a Python 3.x script as a small project ( I started coding two days ago ), and when my program attempts to subtract the value of the item selected by the user from the initial amount of money the user starts out with, the program crashes. </p>
<p>Note: balance(): function aims to display remaining amount of money yet, but is not finished yet.</p>
<p>How can I fix my code, and is there any other way to improve/optimize it? Also, if you give a solution, please assume I don't know what method you will be using, so please give context and explain what you are using and other applications it can be used in.</p>
<pre><code>import time
import sys

# Dictionary:
# Shop Catalog, with numbers for prices.
shopCatalog = { '1. MCM Backpack' : 790 , '2. Gucci Belt' : 450 , '3. Supreme Box Logo Tee' : 100 , '4. Louis Vuitton Trenchcoat' : 1600 , '5. OFF-WHITE windbreaker' : 1200 , '6. Balenciaga Sneakers' : 850 }

# Money Values/Variables:
# Initial Money
initialMoney = 3000

# Functions:
# Catalog browsing:
# This is where you are presented the different items on sale, and choose which you will order

def browse():
    print("Welcome to the Virtual Shop Catalog")
    time.sleep(1)
    print("Here is what is currently on sale (item:price): ")
    time.sleep(1)
    print(shopCatalog)
    time.sleep(1)
    print("Enter '4' to quit")
    time.sleep(1)

# This loop is where you choose to either return to the main menu, or order items.
    while True:
        try:
                shopChoice = int(input("Enter item of choice: "))
                if shopChoice == 4:
                    print("Returning back to main menu...")
                    time.sleep(0.5)
                    mainMenu()
                    break

                # This is supposed to reduce the value/price of the item from your inital amount of money (initalmoney) or balance
                elif shopChoice == 1 or  2 or 3 or 4 or 5 or 6:
                    print(" Purchased 1 " + shopCatalog[shopChoice] + " .")
                    initialMoney = initialMoney - shopCatalog[shopChoice]
                    break
                elif shopChoice == 3:
                    print("You want to leave already...? Ok, have a good day!")
                    time.sleep(1)
                    break
                else:
                    print("Invalid option. Please pick a choice from 1-6")
                    browse()
        except ValueError:
                print("Invalid option. Please input an integer.")
    exit            

# Balance and money in account:
# This loop allows you to check the money in your account:

def balance():
    print("hi")

# Menu selection function:
# It gives the user a number of three options, and will only accept the three integers provided.

def mainMenu ():
    time.sleep(0.5)
    print("1. Browse shop catalog")
    time.sleep(0.5)
    print("2. Check remaining balance")
    time.sleep(0.5)
    print("3. Quit program")

    while True:
        try:
            choice = int(input("Enter number of choice: "))
            if choice == 1:
                browse()
                break
            elif choice  == 2:
                balance()
                break
            elif choice == 3:
                print("You want to leave already...? Ok, have a good day!")
                time.sleep(1)
                break
            else:
                print("Invalid option. Please pick a choice from 1-3")
                mainMenu()
        except ValueError:
            print("Invalid option. Please input an integer.")
    exit     

# On startup:
# This is the startup code and messages

print("Welcome to my virtual shop!")
time.sleep(0.5)
print("What would you like to do?")
time.sleep(0.5)
mainMenu()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Shop catalog is defined as:</p>
<pre><code>shopCatalog = { '1. MCM Backpack' : 790 , '2. Gucci Belt' : 450 , '3. Supreme Box Logo Tee' : 100 , '4. Louis Vuitton Trenchcoat' : 1600 , '5. OFF-WHITE windbreaker' : 1200 , '6. Balenciaga Sneakers' : 850 }
</code></pre>
<p>However, you are trying to access the key by number. Such as </p>
<p><code>shopCatalog[2]</code> which doesn't exist as a valid key. A valid key would be 
<code>shopCatalog['2. Gucci Belt']</code></p>
<p>Instead, try a list of tuples. A list is better because the order is guaranteed. In a dict, even though you numbered your items, it may print out of order.</p>
<pre><code>shopCatalog = [ ('MCM Backpack', 790), ('Gucci Belt' : 450) , ...]
</code></pre>
<p>If you want the first item, you can just access it by the index. If you want them numbered, again, just use the index (although for both, keep in mind it is zero-indexed so you may have to add on to print your numbering and subtract one to get the right item.</p>
<p>Also, there is a flaw in your logic here:
<code>shopChoice == 1 or  2 or 3 or 4 or 5 or 6:</code></p>
<p>While people talk like that, coding doesn't work like that. Instead, you'd have to do:
<code>shopChoice ==1 or shopChoice ==2</code> and so on. But skip all of that and just say:
<code>elif 1 &lt;= shopChoice &lt;= 6:</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The error is:</p>
<pre><code>Traceback (most recent call last):
  File "C:/Users/s4394487/Downloads/crap.py", line 96, in &lt;module&gt;
    mainMenu()
  File "C:/Users/s4394487/Downloads/crap.py", line 73, in mainMenu
    browse()
  File "C:/Users/s4394487/Downloads/crap.py", line 38, in browse
    print(" Purchased 1 " + shopCatalog[shopChoice] + " .")
KeyError: 1
</code></pre>
<p>shopCatalog is a dictionary, so you can access its values using keys. The keys are '1. MCM Backpack', '2. Gucci Belt' etc. Not numbers.</p>
<p>If you want to access the first, second etc. values in a dictionary, you can use an OrderedDictionary in Python: <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">https://docs.python.org/3/library/collections.html#collections.OrderedDict</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Try the below code, now i think it will work:</p>
<pre><code>import time
import sys

# Dictionary:
# Shop Catalog, with numbers for prices.
shopCatalog = { '1. MCM Backpack' : 790 , '2. Gucci Belt' : 450 , '3. Supreme Box Logo Tee' : 100 , '4. Louis Vuitton Trenchcoat' : 1600 , '5. OFF-WHITE windbreaker' : 1200 , '6. Balenciaga Sneakers' : 850 }

# Money Values/Variables:
# Initial Money
initialMoney = 3000

# Functions:
# Catalog browsing:
# This is where you are presented the different items on sale, and choose which you will order

def browse():
    global initialMoney
    print("Welcome to the Virtual Shop Catalog")
    time.sleep(1)
    print("Here is what is currently on sale (item:price): ")
    time.sleep(1)
    print(shopCatalog)
    time.sleep(1)
    print("Enter '4' to quit")
    time.sleep(1)

# This loop is where you choose to either return to the main menu, or order items.
    while True:
        try:
                shopChoice = input("Enter item of choice: ")
                if shopChoice == 4:
                    print("Returning back to main menu...")
                    time.sleep(0.5)
                    mainMenu()
                    break

                # This is supposed to reduce the value/price of the item from your inital amount of money (initalmoney) or balance
                elif shopChoice in ('1','2','3','4','5','6'):
                    print(" Purchased 1 " + str(shopCatalog[[i for i in shopCatalog.keys() if str(shopChoice) in i][0]]) + " .")
                    initialMoney = initialMoney - shopCatalog[[i for i in shopCatalog.keys() if str(shopChoice) in i][0]]
                    break
                elif shopChoice == 3:
                    print("You want to leave already...? Ok, have a good day!")
                    time.sleep(1)
                    break
                else:
                    print("Invalid option. Please pick a choice from 1-6")
                    browse()
        except ValueError:
                print("Invalid option. Please input an integer.")
    exit            

# Balance and money in account:
# This loop allows you to check the money in your account:

def balance():
    print("hi")

# Menu selection function:
# It gives the user a number of three options, and will only accept the three integers provided.

def mainMenu ():
    time.sleep(0.5)
    print("1. Browse shop catalog")
    time.sleep(0.5)
    print("2. Check remaining balance")
    time.sleep(0.5)
    print("3. Quit program")

    while True:
        try:
            choice = int(input("Enter number of choice: "))
            if choice == 1:
                browse()
                break
            elif choice  == 2:
                balance()
                break
            elif choice == 3:
                print("You want to leave already...? Ok, have a good day!")
                time.sleep(1)
                break
            else:
                print("Invalid option. Please pick a choice from 1-3")
                mainMenu()
        except ValueError:
            print("Invalid option. Please input an integer.")
    exit     

# On startup:
# This is the startup code and messages

print("Welcome to my virtual shop!")
time.sleep(0.5)
print("What would you like to do?")
time.sleep(0.5)
mainMenu()
</code></pre>
<p>Your code didn't work because there are no such a key i.e <code>1</code> or <code>2</code> etc so i simply just check each key if <code>shopChoice</code> is in it, if it is, get the value of it, if it isn't, check the next one.</p>
</div>
<span class="comment-copy">What is the error that python produces?</span>
<span class="comment-copy">Traceback (most recent call last):   File "C:/Users/s4394487/Downloads/crap.py", line 96, in &lt;module&gt;     mainMenu()   File "C:/Users/s4394487/Downloads/crap.py", line 73, in mainMenu     browse()   File "C:/Users/s4394487/Downloads/crap.py", line 38, in browse     print(" Purchased 1 " + shopCatalog[shopChoice] + " .") KeyError: 1</span>
<span class="comment-copy">Thanks for selecting my answer. Let me know if there is anything I can clarify.</span>
<span class="comment-copy">You can also use <code>the_dict[the_dict.keys()[1]]</code></span>
<span class="comment-copy">No, because dicts do not necessarily remember the order of keys</span>
<span class="comment-copy">Whoops, you're right. The dict would have to be ordered for that to work.</span>
<span class="comment-copy">OP said "Also, if you give a solution, please assume I don't know what method you will be using, so please give context and explain what you are using and other applications it can be used in. Thank you in advance." which you should be doing anyway.</span>
<span class="comment-copy">@Zev Okay i will</span>
