<div class="post-text" itemprop="text">
<p>I have a set of data similar to this:</p>
<pre><code>trades =  [{'ORDERID': 123, 'LEAVESQTY': 2200}, 
            {'ORDERID': 123, 'LEAVESQTY': 500}, 
            {'ORDERID': 456, 'LEAVESQTY': 100}, 
            {'ORDERID': 789, 'LEAVESQTY': 300}]
</code></pre>
<p>I am looking for an efficient way to find the lowest value of <code>LEAVESQTY</code> for each matching <code>ORDERID</code> in the list of dictionaries.</p>
<p>For example, my desired result for this example would be:</p>
<pre><code>output = [{'ORDERID': 123, 'LEAVESQTY': 5000},
          {'ORDERID': 456, 'LEAVESQTY': 100},
          {'ORDERID': 789, 'LEAVESQTY': 300}]
</code></pre>
<p>I have tried to apply the same approach as similar questions that merge dictionaries based on matching key values, i'm just having trouble merging based on values.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>collections.defaultdict</code> to construct a dictionary to list mapping.</p>
<p>Then use a dictionary comprehension to calculate the minimum of each list.</p>
<pre><code>from collections import defaultdict

trades =  [{'ORDERID': 123, 'LEAVESQTY': 2200}, 
           {'ORDERID': 123, 'LEAVESQTY': 500}, 
           {'ORDERID': 456, 'LEAVESQTY': 100}, 
           {'ORDERID': 789, 'LEAVESQTY': 300}]

d = defaultdict(list)

for item in trades:
    d[item['ORDERID']].append(item['LEAVESQTY'])

res = [{'ORDERID': k, 'LEAVESQTY': min(v)} for k, v in d.items()]

[{'LEAVESQTY': 500, 'ORDERID': 123},
 {'LEAVESQTY': 100, 'ORDERID': 456},
 {'LEAVESQTY': 300, 'ORDERID': 789}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way using <code>sorted</code> and <code>toolz.unique</code>. The idea is to sort by <code>LEAVESQTY</code> and then drop duplicates by <code>ORDERID</code>.</p>
<p>If you don't have access to the <a href="https://toolz.readthedocs.io/en/latest/" rel="nofollow noreferrer"><code>toolz</code></a> library, the logic is identical to the <code>unique_everseen</code> <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">recipe</a> found in the <code>itertools</code> docs.</p>
<pre><code>from operator import itemgetter
from toolz import unique

trades =  [{'ORDERID': 123, 'LEAVESQTY': 2200}, 
           {'ORDERID': 123, 'LEAVESQTY': 500}, 
           {'ORDERID': 456, 'LEAVESQTY': 100}, 
           {'ORDERID': 789, 'LEAVESQTY': 300}]

sorter = sorted(trades, key=itemgetter('LEAVESQTY'))
res = list(unique(sorter, key=itemgetter('ORDERID')))

print(res)

[{'LEAVESQTY': 100, 'ORDERID': 456},
 {'LEAVESQTY': 300, 'ORDERID': 789},
 {'LEAVESQTY': 500, 'ORDERID': 123}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using a simple iteration.</p>
<p><strong>Demo:</strong></p>
<pre><code>d = {}

trades =  [{'ORDERID': 123, 'LEAVESQTY': 2200}, 
            {'ORDERID': 123, 'LEAVESQTY': 500}, 
            {'ORDERID': 456, 'LEAVESQTY': 100}, 
            {'ORDERID': 789, 'LEAVESQTY': 300}]

for i in trades:
    if i['ORDERID'] not in d:
        d[i["ORDERID"]] = i
    else:
        if d[i["ORDERID"]]["LEAVESQTY"] &gt; i["LEAVESQTY"]:
            d[i["ORDERID"]]["LEAVESQTY"] = i["LEAVESQTY"]
print(d.values())
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[{'ORDERID': 456, 'LEAVESQTY': 100}, {'ORDERID': 123, 'LEAVESQTY': 500}, {'ORDERID': 789, 'LEAVESQTY': 300}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">itertools.groupby()</a>:</p>
<pre><code>from itertools import groupby

common = lambda x: x['ORDERID']

grouped = groupby(sorted(trades, key=common), key=common)

output = [min(group) for key, group in grouped]

output
#[{'LEAVESQTY': 500, 'ORDERID': 123},
# {'LEAVESQTY': 100, 'ORDERID': 456},
# {'LEAVESQTY': 300, 'ORDERID': 789}]
</code></pre>
<p><strong>EDIT</strong></p>
<p>The sorted is necessary as @jpp suggested for this to work as it will otherwise produce duplicate keys if the data looks like this:</p>
<pre><code>#trades =  [{'ORDERID': 789, 'LEAVESQTY': 400},
#           {'ORDERID': 123, 'LEAVESQTY': 2200}, 
#            {'ORDERID': 123, 'LEAVESQTY': 500}, 
#            {'ORDERID': 456, 'LEAVESQTY': 100}, 
#            {'ORDERID': 789, 'LEAVESQTY': 300},
#            {'ORDERID': 789, 'LEAVESQTY': 150}]
</code></pre>
</div>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/16560840/python-merge-dictionaries-with-custom-merge-function" title="python merge dictionaries with custom merge function">stackoverflow.com/questions/16560840/â€¦</a></span>
<span class="comment-copy">Quite fast, impressive .. :)</span>
<span class="comment-copy">@jpp Didn't account for that, you are absolutely correct. Will edit</span>
