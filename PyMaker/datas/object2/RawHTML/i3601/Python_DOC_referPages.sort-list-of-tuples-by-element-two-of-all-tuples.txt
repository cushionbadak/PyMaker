<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3121979/how-to-sort-list-tuple-of-lists-tuples">How to sort (list/tuple) of lists/tuples?</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>I want to show the list from the large age to the small age.
 
Here is my list:
 </p>
<pre><code>player = [("Dmitry", 15), ("Dima", 11), ("Sergey", 14), ("Andrey", 12), ("Nikita", 13)]
</code></pre>
<p> 
I can sort list using name element by <code>player.sort</code> and get this list:
 </p>
<pre><code>[('Andrey',12),('Dima',11),('Dmitry',15),('Nikita',13),('Sergey',14)]
</code></pre>
<p> 
But I want this list, where ages are large age to small age:
 </p>
<pre><code>[('Dmitry',15),('Sergey',14),('Nikita',13),('Andrey',12),('Dima',11)]
</code></pre>
<p> 
How I can do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can achieve your desired sort by using the <strong><a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>itemgetter()</code></a></strong>  function as the <strong><a href="https://docs.python.org/3/howto/sorting.html#key-functions" rel="nofollow noreferrer"><code>key</code></a></strong> parameter and also setting <strong><a href="https://docs.python.org/3/howto/sorting.html#ascending-and-descending" rel="nofollow noreferrer"><code>reversed</code></a></strong> to <code>true</code> so the list is in decending order:  </p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; players = [("Dmitry", 15), ("Dima", 11), ("Sergey", 14), ("Andrey", 12), ("Nikita", 13)]
&gt;&gt;&gt; players.sort(key=itemgetter(1), reverse=True)
&gt;&gt;&gt; print(players)
[('Dmitry', 15), ('Sergey', 14), ('Nikita', 13), ('Andrey', 12), ('Dima', 11)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>sorted</code> with <code>key</code> and <code>reverse</code></p>
<p><strong>Ex:</strong></p>
<pre><code>player = [("Dmitry", 15), ("Dima", 11), ("Sergey", 14), ("Andrey", 12), ("Nikita", 13)]
print( sorted(player, key=lambda x: x[1], reverse=True) )
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[('Dmitry', 15), ('Sergey', 14), ('Nikita', 13), ('Andrey', 12), ('Dima', 11)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to pass a <em>lambda expression</em> as argument for <code>sorted</code> method.</p>
<pre><code>sorted_list = sorted(player, key=lambda tup: tup[1], reverse=True)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[('Dmitry', 15), ('Sergey', 14), ('Nikita', 13), ('Andrey', 12), ('Dima', 11)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another way using <code>lambda</code> but <strong>without</strong> <code>reverse=True</code>:</p>
<pre><code>player = [("Dmitry", 15), ("Dima", 11), ("Sergey", 14), ("Andrey", 12), ("Nikita", 13)]
player.sort(key=lambda x: -x[1])

# [('Dmitry', 15), ('Sergey', 14), ('Nikita', 13), ('Andrey', 12), ('Dima', 11)]
</code></pre>
</div>
<span class="comment-copy">Thank you for giving links. I think I understand this more than other lambda answers</span>
<span class="comment-copy">I want to use sort not sorted since I want to modify original list.</span>
<span class="comment-copy">I want to use sort not sorted since I want to modify original list.</span>
<span class="comment-copy">I want to use sort not sorted since I want to modify original list.</span>
<span class="comment-copy">@Ramzes666 use <code>.sort()</code> then. I will update my answer.</span>
