<div class="post-text" itemprop="text">
<p>I am trying to build a C project.  I think the source is fine, however I am getting this error:</p>
<blockquote>
<p>error LNK2001: unresolved external symbol __imp__ExitWindowsEx@8</p>
</blockquote>
<p>Or for the complete traceback:</p>
<pre><code>C:\Users\Simon\Desktop\Learn&gt;python setup.py build
running build
running build_ext
building 'sys_shutdown' extension
C:\Program Files (x86)\Microsoft Visual Studio\2017\WDExpress\VC\Tools\MSVC\14.14.26428\bin\HostX86\x86\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MT -IC:\Users\Simon\AppData\Local\Programs\Python\Python36-32\include -IC:\Users\Simon\AppData\Local\Programs\Python\Python36-32\include "-IC:\Program Files (x86)\Microsoft Visual Studio\2017\WDExpress\VC\Tools\MSVC\14.14.26428\include" "-IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um" "-IC:\Program Files (x86)\Windows Kits\10\include\10.0.17134.0\ucrt" "-IC:\Program Files (x86)\Windows Kits\10\include\10.0.17134.0\shared" "-IC:\Program Files (x86)\Windows Kits\10\include\10.0.17134.0\um" "-IC:\Program Files (x86)\Windows Kits\10\include\10.0.17134.0\winrt" "-IC:\Program Files (x86)\Windows Kits\10\include\10.0.17134.0\cppwinrt" /Tcmain.c /Fobuild\temp.win32-3.6\Release\main.obj
main.c
C:\Program Files (x86)\Microsoft Visual Studio\2017\WDExpress\VC\Tools\MSVC\14.14.26428\bin\HostX86\x86\link.exe /nologo /INCREMENTAL:NO /LTCG /nodefaultlib:libucrt.lib ucrt.lib /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO /LIBPATH:C:\Users\Simon\AppData\Local\Programs\Python\Python36-32\libs /LIBPATH:C:\Users\Simon\AppData\Local\Programs\Python\Python36-32\PCbuild\win32 "/LIBPATH:C:\Program Files (x86)\Microsoft Visual Studio\2017\WDExpress\VC\Tools\MSVC\14.14.26428\lib\x86" "/LIBPATH:C:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\lib\um\x86" "/LIBPATH:C:\Program Files (x86)\Windows Kits\10\lib\10.0.17134.0\ucrt\x86" "/LIBPATH:C:\Program Files (x86)\Windows Kits\10\lib\10.0.17134.0\um\x86" /EXPORT:PyInit_sys_shutdown build\temp.win32-3.6\Release\main.obj /OUT:build\lib.win32-3.6\sys_shutdown.cp36-win32.pyd /IMPLIB:build\temp.win32-3.6\Release\sys_shutdown.cp36-win32.lib
   Creating library build\temp.win32-3.6\Release\sys_shutdown.cp36-win32.lib and object build\temp.win32-3.6\Release\sys_shutdown.cp36-win32.exp
main.obj : error LNK2001: unresolved external symbol __imp__ExitWindowsEx@8
build\lib.win32-3.6\sys_shutdown.cp36-win32.pyd : fatal error LNK1120: 1 unresolved externals
error: command 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\WDExpress\\VC\\Tools\\MSVC\\14.14.26428\\bin\\HostX86\\x86\\link.exe' failed with exit status 1120
</code></pre>
<p>I worked out from <a href="https://social.msdn.microsoft.com/Forums/vstudio/en-US/706bea92-1931-4abf-9af5-41020c909a70/problem-using-exitwindowsex?forum=vcgeneral" rel="nofollow noreferrer">here</a> that <code>__imp__ExitWindowsEx@8</code> is caused by the necessary runtime not being found.</p>
<blockquote>
<p>Don't link using the #using but link using the linker command line. You can do that by adding the user32.lib to the linker command</p>
</blockquote>
<p>I tried this in my setup script using <a href="https://docs.python.org/3/distutils/apiref.html#distutils.core.Extension" rel="nofollow noreferrer"><code>extra_objects</code></a>:</p>
<pre><code>import setup, Extension

module = Extension(
    "sys_shutdown", 
    sources = ["main.c"],
        extra_objects = ["C:\\Program Files (x86)\\Windows Kits\\10\Lib\\10.0.17134.0\\um\\arm64\\User32.Lib"]
)

setup (
    name = "sys_shutdown",
    version = "1.0",
    ext_modules = [module])
</code></pre>
<p>My <code>main.c</code> file (so you know why and what I need to link to):</p>
<pre><code>#include &lt;Python.h&gt;
#include &lt;Windows.h&gt;


/* The functions that need to be created */

static PyObject * sys_shutdown(PyObject *self) {
    ExitWindowsEx(EWX_POWEROFF, SHTDN_REASON_MINOR_OTHER); // Shutdown
    return Py_BuildValue("");
}

static PyObject * sys_restart(PyObject *self) {
    ExitWindowsEx(EWX_REBOOT, SHTDN_REASON_MINOR_OTHER); // Restart
    return Py_BuildValue("");
}

static PyObject * sys_log_out(PyObject *self) {
    ExitWindowsEx(EWX_LOGOFF, SHTDN_REASON_MINOR_OTHER); // Log out
    return Py_BuildValue("");
}

static PyMethodDef allMethods[] = {
    {"sys_shutdown", (PyCFunction)sys_shutdown, METH_NOARGS, "Shuts down the device"},
    {"sys_restart", (PyCFunction)sys_restart, METH_NOARGS, "Restarts the device"},
    {"sys_log_out", (PyCFunction)sys_log_out, METH_NOARGS, "Closes all processes and logs out the user from the device"},
    {NULL, NULL, 0, NULL}
};

static struct PyModuleDef allModule = {
    PyModuleDef_HEAD_INIT,
    "System Functions",
    "sys_shutdown",
    -1,
    allMethods
};

PyMODINIT_FUNC PyInit_sys_shutdown(void) {
    return PyModule_Create(&amp;allModule);
}
</code></pre>
<p>This extension requires the <code>ExitWindowsEx()</code> function provided by the <code>user32.dll</code></p>
<p>How can I link the <code>user32.dll</code> to my extension (or if I have missed the plot completely how can I make it compile correctly)?</p>
</div>
<div class="post-text" itemprop="text">
<p>Right I found the solution.  The linker path is already set for system runtimes.  All I had to do was link the runtime itself.  This can be done using the <code>library</code> attribute in the setup script:</p>
<pre><code>from distutils.core import setup, Extension

module = Extension(
    "sys_shutdown", 
    sources = ["main.c"],
    libraries = ["user32"] # &lt;-- Here it is
)

setup (
    name = "sys_shutdown",
    version = "1.0",
    ext_modules = [module])
</code></pre>
</div>
<span class="comment-copy">Note that if this is not a system runtime, this is a way to do it with the anwer below</span>
