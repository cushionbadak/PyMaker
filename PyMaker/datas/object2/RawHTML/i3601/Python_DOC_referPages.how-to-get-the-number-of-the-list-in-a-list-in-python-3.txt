<div class="post-text" itemprop="text">
<p>I am trying to get the number of the nested list that contains the particular number. This is my code:</p>
<pre><code>listo = [[1,2],[3,4,5]]
for x in listo:
    if 3 in x:
       print(len(x))
</code></pre>
<p>What I am trying to get here is the number of the nested list that has 3 in it. My code is returning 3 because I am of the function len, which is only returning the number of items inside the nested list that has the number. The output should be:</p>
<pre><code>2
</code></pre>
<p>Since the number 3 is located on the second nested list. The count starts from 1, not 0.</p>
<p>How can I get the proper output?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> specifying the start value as <code>1</code>:</p>
<pre><code>listo = [[1,2],[3,4,5]]
for i, x in enumerate(listo, 1):
    if 3 in x:
        print(i)

# 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a>:</p>
<pre><code>listo = [[1,2], [3,4,5]]

res = next(i for i, sublist in enumerate(listo) if 3 in sublist)
print(res)  # -&gt; 1
</code></pre>
<p>Note that Python is 0-index languange; the first element on a list has index number 0. That is why the code above returns <code>1</code>. If you want to get <code>2</code>, well, just add <code>1</code> to that or, ever better, use the optional <code>start</code> parameter of enumerate (<code>enumerate(listo, 1)</code>).</p>
<p>To make the above <em>Error-proof</em><sup>1</sup>, you can specify a default value to be returned in case <code>3</code> is not on any sublist.</p>
<pre><code>res = next((i for i, sublist in enumerate(listo) if 3 in sublist), 'N\A')
</code></pre>
<hr/>
<p><sup>1</sup> <code>next</code> raises <code>StopIteration</code> if it exhausts the iterable without finding something to return, <strong>unless</strong> a default value is provided.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use enumerate so as to get the index of the element in the array.</p>
<pre><code>l1 = ["eat","sleep","repeat"]

# printing the tuples in object directly
for ele in enumerate(l1):
    print ele

Output:
(0, 'eat')
(1, 'sleep')
(2, 'repeat')
</code></pre>
<p>The same can be used for the code above.</p>
<pre><code>listo = [[1,2,3],[4,5]]
for ind,x in enumerate(listo):
     if 3 in x:
        print(ind)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a>. But if you are very new to coding this simple code is good. </p>
<p>Keep an extra variable (count) which will keep track of the index of the current list.</p>
<pre><code>listo = [[1,2],[3,4,5]]
count = 0
for x in listo:
    count += 1
    if 3 in x:
        print(count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simply use <code>enumerate()</code>. <code>enumerate()</code> returns a (element count, element) pair:</p>
<pre><code>for count, element in enumerate(listo):
    if 3 in element:
        print(count + 1)
        # Account for one-based indexing
</code></pre>
</div>
<span class="comment-copy"><code>enumerate(listo, 1)</code> instead of <code>i+1</code></span>
<span class="comment-copy">this approach does not short-circuit. Add a <code>break</code></span>
<span class="comment-copy">@Ev.Kounis I don't think <code>break</code> is needed as OP is after finding positions of all sublists containing a <code>3</code>.</span>
