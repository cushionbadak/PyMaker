<div class="post-text" itemprop="text">
<p>I have a pandas dataframe (<code>df</code>) <br/></p>
<pre><code>Parameter   Date    Concentration   Unit    Prescribed Standard     Exceeding Standard? (Yes/No)    Remarks
1   NaN     02/01/2017  26.10   Âµg/m3  NaN     NaN     NaN
2   NaN     03/01/2017  30.27   Âµg/m3  NaN     NaN     NaN
3   NaN     04/01/2017  36.36   Âµg/m3  NaN     NaN     NaN
4   NaN     05/01/2017  33.41   Âµg/m3  NaN     NaN     NaN
</code></pre>
<p>I am trying to plot the timeseries plot of <code>Date vs Concentration</code><br/>
I converted the dates to datetime object using <code>.to_datetime()</code> </p>
<pre><code>    Parameter   Date    Concentration   Unit    Prescribed Standard     Exceeding Standard? (Yes/No)    Remarks
1   NaN     2017-01-02  26.10   Âµg/m3  NaN     NaN     NaN
2   NaN     2017-01-03  30.27   Âµg/m3  NaN     NaN     NaN
3   NaN     2017-01-04  36.36   Âµg/m3  NaN     NaN     NaN
4   NaN     2017-01-05  33.41   Âµg/m3  NaN     NaN     NaN
</code></pre>
<p>The time series plot is easily done using: <br/></p>
<pre><code>plt.plot(df["Date"][:322], df["Concentration"][:322], "+", color="red", linewidth=0.5)
</code></pre>
<p>But if I try to change the xlabels to anything else, say month names, <code>plt.xticks(["Jan", "Feb","Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"])])</code> I get an error:</p>
<pre><code>---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
~/.local/lib/python3.6/site-packages/pandas/core/tools/datetimes.py in _convert_listlike(arg, box, format, name, tz)
    302             try:
--&gt; 303                 values, tz = tslib.datetime_to_datetime64(arg)
    304                 return DatetimeIndex._simple_new(values, name=name, tz=tz)

pandas/_libs/tslib.pyx in pandas._libs.tslib.datetime_to_datetime64()

TypeError: Unrecognized value type: &lt;class 'str'&gt;

During handling of the above exception, another exception occurred:

OutOfBoundsDatetime                       Traceback (most recent call last)
~/.local/lib/python3.6/site-packages/pandas/plotting/_converter.py in _convert_1d(values, unit, axis)
    310             try:
--&gt; 311                 values = tools.to_datetime(values)
    312                 if isinstance(values, Index):

~/.local/lib/python3.6/site-packages/pandas/core/tools/datetimes.py in to_datetime(arg, errors, dayfirst, yearfirst, utc, box, format, exact, unit, infer_datetime_format, origin)
    379     elif is_list_like(arg):
--&gt; 380         result = _convert_listlike(arg, box, format)
    381     else:

~/.local/lib/python3.6/site-packages/pandas/core/tools/datetimes.py in _convert_listlike(arg, box, format, name, tz)
    305             except (ValueError, TypeError):
--&gt; 306                 raise e
    307 

~/.local/lib/python3.6/site-packages/pandas/core/tools/datetimes.py in _convert_listlike(arg, box, format, name, tz)
    293                     yearfirst=yearfirst,
--&gt; 294                     require_iso8601=require_iso8601
    295                 )

pandas/_libs/tslib.pyx in pandas._libs.tslib.array_to_datetime()

pandas/_libs/tslib.pyx in pandas._libs.tslib.array_to_datetime()

pandas/_libs/tslib.pyx in pandas._libs.tslib.array_to_datetime()

pandas/_libs/tslib.pyx in pandas._libs.tslib.array_to_datetime()

pandas/_libs/tslib.pyx in pandas._libs.tslib.convert_datetime_to_tsobject()

pandas/_libs/tslib.pyx in pandas._libs.tslib._check_dts_bounds()

OutOfBoundsDatetime: Out of bounds nanosecond timestamp: 1-01-01 00:00:00

During handling of the above exception, another exception occurred:

AttributeError                            Traceback (most recent call last)
&lt;ipython-input-26-7f51ae7566c4&gt; in &lt;module&gt;()
      4 
      5 plt.plot(df_btm_pm25["Date"][:322], df_btm_pm25["Concentration"][:322], "+", color="red", linewidth=0.5)
----&gt; 6 plt.xticks(["Jan", "Feb","Mar", "Apr", "May", "Jun", "Jul"])#, "Aug", "Sept", "Oct", "Nov", "Dec"])
      7 #axes.set_xticks(x)
      8 axes.locator_params(nbins=12)

~/.local/lib/python3.6/site-packages/matplotlib/pyplot.py in xticks(*args, **kwargs)
   1722         labels = ax.get_xticklabels()
   1723     elif len(args)==1:
-&gt; 1724         locs = ax.set_xticks(args[0])
   1725         labels = ax.get_xticklabels()
   1726     elif len(args)==2:

~/.local/lib/python3.6/site-packages/matplotlib/axes/_base.py in set_xticks(self, ticks, minor)
   3206             Default is ``False``.
   3207         """
-&gt; 3208         ret = self.xaxis.set_ticks(ticks, minor=minor)
   3209         self.stale = True
   3210         return ret

~/.local/lib/python3.6/site-packages/matplotlib/axis.py in set_ticks(self, ticks, minor)
   1676         """
   1677         # XXX if the user changes units, the information will be lost here
-&gt; 1678         ticks = self.convert_units(ticks)
   1679         if len(ticks) &gt; 1:
   1680             xleft, xright = self.get_view_interval()

~/.local/lib/python3.6/site-packages/matplotlib/axis.py in convert_units(self, x)
   1524             return x
   1525 
-&gt; 1526         ret = self.converter.convert(x, self.units, self)
   1527         return ret
   1528 

~/.local/lib/python3.6/site-packages/pandas/plotting/_converter.py in convert(values, unit, axis)
    278                       for v in values]
    279         else:
--&gt; 280             values = DatetimeConverter._convert_1d(values, unit, axis)
    281         return values
    282 

~/.local/lib/python3.6/site-packages/pandas/plotting/_converter.py in _convert_1d(values, unit, axis)
    315                     values = [_dt_to_float_ordinal(x) for x in values]
    316             except Exception:
--&gt; 317                 values = _dt_to_float_ordinal(values)
    318 
    319         return values

~/.local/lib/python3.6/site-packages/pandas/plotting/_converter.py in _dt_to_float_ordinal(dt)
    263         base = dates.epoch2num(dt.asi8 / 1.0E9)
    264     else:
--&gt; 265         base = dates.date2num(dt)
    266     return base
    267 

~/.local/lib/python3.6/site-packages/matplotlib/dates.py in date2num(d)
    450         if not d.size:
    451             return d
--&gt; 452         return _to_ordinalf_np_vectorized(d)
    453 
    454 

~/.local/lib/python3.6/site-packages/numpy/lib/function_base.py in __call__(self, *args, **kwargs)
   2753             vargs.extend([kwargs[_n] for _n in names])
   2754 
-&gt; 2755         return self._vectorize_call(func=func, args=vargs)
   2756 
   2757     def _get_ufunc_and_otypes(self, func, args):

~/.local/lib/python3.6/site-packages/numpy/lib/function_base.py in _vectorize_call(self, func, args)
   2823             res = func()
   2824         else:
-&gt; 2825             ufunc, otypes = self._get_ufunc_and_otypes(func=func, args=args)
   2826 
   2827             # Convert args to object arrays first

~/.local/lib/python3.6/site-packages/numpy/lib/function_base.py in _get_ufunc_and_otypes(self, func, args)
   2783 
   2784             inputs = [arg.flat[0] for arg in args]
-&gt; 2785             outputs = func(*inputs)
   2786 
   2787             # Performance note: profiling indicates that -- for simple

~/.local/lib/python3.6/site-packages/matplotlib/dates.py in _to_ordinalf(dt)
    253         tzi = UTC
    254 
--&gt; 255     base = float(dt.toordinal())
    256 
    257     # If it's sufficiently datetime-like, it will have a `date()` method

AttributeError: 'str' object has no attribute 'toordinal'
</code></pre>
<p>Although, I can change the ticks by <code>set_xticks</code>. What am I missing here?</p>
</div>
<div class="post-text" itemprop="text">
<p>As @ImportanceOfBeingErnest suggested, you should use <a href="https://matplotlib.org/api/ticker_api.html" rel="nofollow noreferrer">locators</a> to reformat the xtick labels. I have implemented them below:</p>
<pre><code>### Import necessary packages
import matplotlib.pyplot as plt
import pandas as pd
import matplotlib.dates as mdates # For formatting dates


### Make the figure
fig, ax = plt.subplots(ncols=2, nrows=1, figsize=(15, 4.18))

# Original plot
ax[0].plot(df["Date"][:322], 
           df["Concentration"][:322], 
           "+", color="red", linewidth=0.5)
ax[0].set_title('Original plot')

# New xticks plot
months = mdates.MonthLocator()          # Add tick every month
days = mdates.DayLocator(range(1,32,5)) # Add tick every 5th day in a month
monthFmt = mdates.DateFormatter('%b')   # Use abbreviated month name

# Add the locators to the axis
ax[1].xaxis.set_major_locator(months)
ax[1].xaxis.set_major_formatter(monthFmt)
ax[1].xaxis.set_minor_locator(days)

# Plot
ax[1].plot(df["Date"][:322], 
           df["Concentration"][:322], 
           "+", color="red", linewidth=0.5)
ax[1].set_title('Updated xticks')

plt.show()
</code></pre>
<p><img alt="" src="https://i.stack.imgur.com/R6Igr.png"/></p>
<p>Here are some helpful resources:</p>
<ul>
<li>The <a href="https://matplotlib.org/api/dates_api.html#matplotlib.dates" rel="nofollow noreferrer">matplotlib.dates api</a></li>
<li><a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer"><code>strftime()</code> directives</a></li>
<li><a href="https://matplotlib.org/examples/api/date_demo.html" rel="nofollow noreferrer">This example</a>, which I drew from heavily</li>
</ul>
</div>
<span class="comment-copy">I can't easily get your table into a code to provide a propper solution (<a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>). So I will just mention that you should probably use datetimes to plot and matplotlib.dates locators and formatters for the labels.</span>
<span class="comment-copy">@ImportanceOfBeingErnest I didn't get the second part properly. Here's the link for csv datafile: <a href="https://pastebin.com/3zuhckN7" rel="nofollow noreferrer">pastebin.com/3zuhckN7</a></span>
