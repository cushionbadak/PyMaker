<div class="post-text" itemprop="text">
<p>I have some folder: <code>/home/tom/my_module</code>.<br/>
In my_module directory I have:<br/>
<code>__init__.py</code> (empty file)<br/>
<code>my_class.py</code> </p>
<pre><code>class HelloWorldExample(object):
    @staticmethod
    def someMethod():
      print("test")
</code></pre>
<p>Now, let's go into terminal terminal:  </p>
<p><code>cd ~ 
python</code></p>
<p>And then, in python shell:<br/>
<code>import my_module</code> succedeed. However, I can't type something like:<br/>
<code>x= HelloWorldExample()</code><br/>
nor<br/>
<code>HelloWorldExample.someMethod()</code>  because python can't find this class.<br/>
Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>When doing <code>import my_module</code> you're importing the module and it will be available as <code>my_module</code>. </p>
<p>If you want to access something defined in your module you will need to access it on the module ex: <code>my_module.thing_in_my_module</code>.</p>
<p>In your example that would translate to:</p>
<pre><code>import my_module

x = my_module.HelloWorldExample()
</code></pre>
<p>But you could also do:</p>
<pre><code>from my module import HelloWorldExample

x = HelloWorldExample()
</code></pre>
<p>This imports the class directly rather than the module.</p>
<p>See <strong><a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/modules.html#packages</a></strong> for more information on packages and imports.</p>
</div>
<span class="comment-copy"><code>from my_module.my_class import HelloWorldExample</code> after this <code>x = HelloWorldExample()</code></span>
<span class="comment-copy">or, after the import, just use<code>x=my_module.HelloWorldExample()</code></span>
<span class="comment-copy">Is it possible to create such <code>__init__.py</code> such that it would be sufficient to do <code>import my_module</code>?</span>
