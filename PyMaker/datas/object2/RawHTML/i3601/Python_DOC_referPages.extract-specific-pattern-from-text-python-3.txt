<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4894069/regular-expression-to-return-text-between-parenthesis">Regular expression to return text between parenthesis</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I have a string which looks like this <code>avg(foo)</code> from where i want to extract only <code>foo</code>. For this I am using </p>
<pre><code>import re
re.sub(")( avg","","avg(foo)")
</code></pre>
<p>But this is not working. Where am I going wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>First I'm off you might want to use r-strings for you pattern, and in addition you need to change your pattern a bit <code>r"avg\((.*)\)"</code> should suffice.</p>
<pre><code>import re

re.findall(r"avg\((.*)\)", "avg(foo)")
# Will return ['foo']
</code></pre>
<p>So what's happening here?<br/>
We're using <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer">re.findall</a> to find all occurrences matching the pattern.</p>
<p>The pattern can be breaken down to:</p>
<ol>
<li><code>avg\(</code> something that starts with <code>avg(</code></li>
<li><code>(.*)</code> subgroup of any string (this could be modified to match a stricter pattern) </li>
<li>finally <code>\)</code> which will match a single ")".</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>First of all, parenthesis represent the capture groups in regular expression syntax, thus if you want to match the literal parenthesis you need to escape them. Secondly, if you want to find a particular string you should use <code>re.search</code> or <code>re.match()</code> which in this case since the sub-string is not appeared at the leading of the string you should use <code>re.search()</code>. Thirdly, a proper regex for matching everything between parenthesis depends on whether you want to match nested ones or not. One may use <code>r"\(([^)(]*)\)</code> to match everything except parenthesis characters. Another option would be <code>\((.*)\)</code> to match everything between parenthesis but still it depends on your expected format.</p>
<p>Demos:</p>
<pre><code>&gt;&gt;&gt; m = re.search(r"\(([^)(]*)\)","avg(foo)")
&gt;&gt;&gt; m.group(1)
'foo'
&gt;&gt;&gt; m = re.search(r"\((.*)\)","avg(f(o)o)")
&gt;&gt;&gt; m.group(1)
'f(o)o'
&gt;&gt;&gt; m = re.search(r"\(([^)(]*)\)","avg(f(o)o)")
&gt;&gt;&gt; m.group(1)
'o'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>We may use <code>re.search</code> here, with a capture group to extract the text inside the function call to <code>avg()</code>:</p>
<pre><code>f_search = re.search(r'\((.*?)\)', 'avg(foo)', re.IGNORECASE)

if f_search:
    print f_search.group(1)
</code></pre>
<p><a href="http://rextester.com/CYIO35166" rel="nofollow noreferrer"><h2>Demo</h2></a></p>
</div>
<span class="comment-copy">Please be more clear as to what you want. Do you want occurrences of <code>'foo'</code>, or any occurrence of any string inside the parentheses of <code>'avg(â€¦)'</code>, or inside any parentheses of a function, or inside any parentheses at all, or something else?</span>
