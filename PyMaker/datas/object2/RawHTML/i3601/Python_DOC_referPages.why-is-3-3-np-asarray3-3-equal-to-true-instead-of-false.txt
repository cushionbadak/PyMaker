<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/35397801/what-are-the-rules-for-comparing-numpy-arrays-using">What are the rules for comparing numpy arrays using ==?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/36526035/understanding-applied-to-a-numpy-array">Understanding == applied to a NumPy array</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Following statement passes in my tests. </p>
<pre><code>self.assertEqual(3.3, np.asarray([3.3]))
</code></pre>
<p>One type is <code>numpy.float64</code> other is <code>numpy.ndarray</code> and my assumption was that this test will fail but it passes.</p>
<p>Following statement prints <code>[ True]</code></p>
<pre><code>print(3.3 == np.asarray([3.3]))
</code></pre>
<p>Debugging further shows that <code>assertEquals</code> ends up invoking <code>unittest.case.TestCase#_baseAssertEqual</code> which checks equality using <code>==</code>:</p>
<pre><code>if not first == second:
        standardMsg = '%s != %s' % _common_shorten_repr(first, second)
        msg = self._formatMessage(msg, standardMsg)
        raise self.failureException(msg)
</code></pre>
<p>Can someone explain why and how test <code>self.assertEqual(3.3, np.asarray([3.3]))</code> passes?</p>
<p><strong>Edit:</strong> How <code>==</code> works in case you compare an array of one value with a variable and where is this behaviour documented?</p>
</div>
<div class="post-text" itemprop="text">
<p>As explained in the <a href="https://docs.scipy.org/doc/numpy-1.13.0/reference/arrays.ndarray.html#arithmetic-matrix-multiplication-and-comparison-operations" rel="nofollow noreferrer">numpy docs about ndarrays</a>:</p>
<blockquote>
<p>Arithmetic and comparison operations on ndarrays are defined as
  element-wise operations, and generally yield ndarray objects as
  results. </p>
</blockquote>
<p>The <code>==</code> operation on ndarrays returns another ndarray, not a single boolean <code>True</code> or <code>False</code>. </p>
<p>This is useful for data processing, but it's different from almost every other python object, is which <code>A == B</code> would return a simple boolean.</p>
</div>
<div class="post-text" itemprop="text">
<p>In <code>Python</code> one can add several <code>__eq__</code> methods on a specific type, to make it comparable with another. Probably some kind of that is done with <code>numpy.ndarray</code>.</p>
<p>In that case when <code>a == b</code> is checked then it translates to <code>a.__eq__(b)</code>. And if type for <code>a</code> has implemented <code>__eq__</code> method comparison for <code>b</code>'s type they can be compared with <code>==</code>.</p>
<p>Source: <a href="https://docs.python.org/3/reference/datamodel.html#object.__eq__" rel="nofollow noreferrer">https://docs.python.org/3/reference/datamodel.html#object.<strong>eq</strong></a></p>
</div>
<span class="comment-copy">But haven't you already determined why this <code>assertEqual</code> passes? As you say, <code>3.3 == np.asarray([3.3])</code> evaluates to <code>[ True]</code>. So the behavior appears to be: if <code>a == b</code> gives a <a href="https://stackoverflow.com/questions/39983695/what-is-truthy-and-falsy-in-python-how-is-it-different-from-true-and-false">truthy</a> value, then <code>assertEqual(a,b)</code> will pass.</span>
<span class="comment-copy">you seem to have answered the question yourself, as noted by @Kevin. if you want you can additinaly <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertIsInstance" rel="nofollow noreferrer">check the types</a> and fail tests, if there is a mismatch</span>
<span class="comment-copy">@Kevin but that does not explain why a float64 object of value 3.3 equals a ndarray holding a float64 of value 3.3 as the only element,does it?</span>
<span class="comment-copy">Perhaps "Why does <code>3.3 == np.asarray([3.3])</code> evaluate to anything other than False?" is an interesting and worthwhile question, in which case I feel it ought to be asked independently of a question centered around assertEquals</span>
<span class="comment-copy">@M-WaJeEh: because numpy arrays use <i>broadcasting</i>. The comparison doesn't apply to the array as a whole, instead you get a new array with the results of the comparison applied to each value in the array. You can then use the boolean array that gives to do further operations.</span>
<span class="comment-copy">confused about <i>several</i> <code>__eq__</code> methods, can you provide an example?</span>
