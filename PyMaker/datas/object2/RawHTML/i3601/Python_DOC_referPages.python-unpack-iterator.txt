<div class="post-text" itemprop="text">
<p>I know *-operator in Python is used to unpack iterable, such as unpack a list.</p>
<p>However, in practice, we also use *-operator to unpack iterator, but I haven't found document explaining it. </p>
<p>See example:</p>
<pre><code>&gt;&gt;&gt; a = [1,2,3]
&gt;&gt;&gt; print(a)
[1, 2, 3]
</code></pre>
<p>unpack iterable</p>
<pre><code>&gt;&gt;&gt; print(*a)
1,2,3
</code></pre>
<p>unpack iterator</p>
<pre><code>&gt;&gt;&gt; it = iter(a)
&gt;&gt;&gt; print(*it)
1,2,3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This works because <code>iter</code>, applied to an iterator, returns the same iterator:</p>
<blockquote>
<p><code>iterator.__iter__()</code><br/>
  Return the iterator object itself. This is
  required to allow both containers and iterators to be used with the
  for and in statements. This method corresponds to the tp_iter slot of
  the type structure for Python objects in the Python/C API.</p>
</blockquote>
<p>Using an object in an expression list already results in the creation of an iterator. So <code>func(*iter(foo))</code> has the same effect as <code>func(*foo)</code>, assuming the iterable/iterator protocols have been correctly implemented.</p>
</div>
<span class="comment-copy">Despite the wording in the Python documentation, it's not really an operator, as you can't use it in an arbitrary expression. It's special syntax allowed in the argument list to a function call and (in Python 3) on the <i>left</i> side of an assignment.</span>
<span class="comment-copy">See <a href="https://docs.python.org/3/reference/expressions.html#expression-lists" rel="nofollow noreferrer">docs.python.org/3/reference/expressions.html#expression-lists</a> and <a href="https://docs.python.org/3/reference/simple_stmts.html#assignment-statements" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a>.</span>
