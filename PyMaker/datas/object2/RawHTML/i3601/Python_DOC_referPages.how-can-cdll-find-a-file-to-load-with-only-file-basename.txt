<div class="post-text" itemprop="text">
<p>On Lubuntu 18.04</p>
<pre><code>$ python3
&gt;&gt;&gt; from ctypes import *
&gt;&gt;&gt; libc = CDLL("libc.so.6")
&gt;&gt;&gt; libc.printf
&lt;_FuncPtr object at 0x7f10caf0d9a8&gt;
</code></pre>
<p>I didn't specify path for libc.so.6, so how can <code>CDLL()</code> find its file to load?</p>
<p>Originated from <a href="https://stackoverflow.com/questions/50798907/why-does-loading-the-libc-shared-library-have-libraryloader-object-is-not-cal#50798907">Why does loading the libc shared library have "'LibraryLoader' object is not callable" error?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>That is because <code>CDLL</code> (or <code>LibraryLoader</code> or anything else from from <a href="https://docs.python.org/3/library/ctypes.html#module-ctypes" rel="nofollow noreferrer">[Python]: ctypes - A foreign function library for Python</a> - and things can be expanded even more) uses the "native library loading system" in order to deal with library (searching and) loading (including dependencies). <br/>
On <em>Ux</em> systems, that is typically accomplished by the <strong>dynamic linker/loader</strong>.</p>
<p>Now, I assume that you're wondering why e.g. <strong><em>"/lib/x86_64-linux-gnu/libc.so.6"</em></strong> is found, even though <strong><em>"/lib/x86_64-linux-gnu"</em></strong> is <strong>not</strong> in <strong><em>${LD_LIBRARY_PATH}</em></strong>.</p>
<p>From <a href="http://man7.org/linux/man-pages/man8/ld.so.8.html" rel="nofollow noreferrer">[man7]: LD.SO(8)</a>:</p>
<blockquote>
<p>The program <strong>ld.so</strong> handles a.out binaries, a format used long ago; <strong>ld-linux.so*</strong> (<em>/lib/ld-linux.so.1</em> for libc5, <em>/lib/ld-linux.so.2</em> for glibc2) handles ELF, which everybody has been using for years now. Otherwise, both have the same behavior, and use the same support files and programs as <a href="http://man7.org/linux/man-pages/man1/ldd.1.html" rel="nofollow noreferrer">ldd(1)</a>, <a href="http://man7.org/linux/man-pages/man8/ldconfig.8.html" rel="nofollow noreferrer">ldconfig(8)</a>, and <strong><em>/etc/ld.so.conf</em></strong>.</p>
</blockquote>
<p>From <a href="http://man7.org/linux/man-pages/man1/ld.1.html" rel="nofollow noreferrer">[man7]: LD(1)</a>:</p>
<blockquote>
<p>The linker uses the following search paths to locate required shared libraries:<br/>
       ...<br/>
      8. For a native linker on an ELF system, if the file <strong><em>/etc/ld.so.conf</em></strong> exists, the list of directories found in that file.</p>
</blockquote>
<p>Example on my <em>VM</em>:</p>
<blockquote>
<pre><code>[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow]&gt; uname -a
Linux cfati-ubtu16x64-0 4.13.0-43-generic #48~16.04.1-Ubuntu SMP Thu May 17 12:56:46 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow]&gt; which ls
/bin/ls
[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow]&gt; file /bin/ls
/bin/ls: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=d0bc0fb9b3f60f72bbad3c5a1d24c9e2a1fde775, stripped
[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow]&gt; ldd /bin/ls
        linux-vdso.so.1 =&gt;  (0x00007ffc0e2e1000)
        libselinux.so.1 =&gt; /lib/x86_64-linux-gnu/libselinux.so.1 (0x00007f64b63d0000)
        libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f64b6006000)
        libpcre.so.3 =&gt; /lib/x86_64-linux-gnu/libpcre.so.3 (0x00007f64b5d96000)
        libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f64b5b92000)
        /lib64/ld-linux-x86-64.so.2 (0x00007f64b65f2000)
        libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f64b5975000)
[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow]&gt; readelf -d /bin/ls

Dynamic section at offset 0x1de18 contains 25 entries:
  Tag        Type                         Name/Value
 0x0000000000000001 (NEEDED)             Shared library: [libselinux.so.1]
 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]
 ...

[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow]&gt; cat /etc/ld.so.conf
include /etc/ld.so.conf.d/*.conf

[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow]&gt; ls -al /etc/ld.so.conf.d/*.conf
-rw-r--r-- 1 root root 32 iun  6 17:42 /etc/ld.so.conf.d/00vboxvideo.conf
-rw-rw-r-- 1 root root 38 nov 24  2014 /etc/ld.so.conf.d/fakeroot-x86_64-linux-gnu.conf
-rw-r--r-- 1 root root 44 ian 27  2016 /etc/ld.so.conf.d/libc.conf
-rw-r--r-- 1 root root 68 apr 15  2016 /etc/ld.so.conf.d/x86_64-linux-gnu.conf
lrwxrwxrwx 1 root root 43 mar  9 19:43 /etc/ld.so.conf.d/x86_64-linux-gnu_EGL.conf -&gt; /etc/alternatives/x86_64-linux-gnu_egl_conf
lrwxrwxrwx 1 root root 42 mar  9 19:43 /etc/ld.so.conf.d/x86_64-linux-gnu_GL.conf -&gt; /etc/alternatives/x86_64-linux-gnu_gl_conf
-rw-r--r-- 1 root root 56 ian 15 04:49 /etc/ld.so.conf.d/zz_i386-biarch-compat.conf
-rw-r--r-- 1 root root 58 ian 15 04:50 /etc/ld.so.conf.d/zz_x32-biarch-compat.conf
[cfati@cfati-ubtu16x64-0:~/Work/Dev/StackOverflow]&gt; cat /etc/ld.so.conf.d/x86_64-linux-gnu.conf
# Multiarch support
/lib/x86_64-linux-gnu
/usr/lib/x86_64-linux-gnu
</code></pre>
</blockquote>
<p>Since it's <em>libc</em> related, also check <a href="https://stackoverflow.com/questions/49878901/how-does-ctypes-cdll-loadlibrarynone-work/49880922#49880922">[SO]: How does ctypes.cdll.LoadLibrary(None) work? (@CristiFati's answer)</a> in order to use the already loaded <em>libc</em> version (and avoid possible conflicts), <strong>if</strong> <em>libc</em> isn't linked statically.</p>
</div>
<span class="comment-copy">Did this answer your question?</span>
