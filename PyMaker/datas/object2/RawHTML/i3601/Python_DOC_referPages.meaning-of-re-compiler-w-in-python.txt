<div class="post-text" itemprop="text">
<p>I am new to python and trying to work on big data code but not able to understand what the expression <strong>re.compile(r"[\w']+")</strong> means.Anyone has any idea regarding this?</p>
<p>This is the code that i m using.</p>
<pre><code>from mrjob.job import MRJob
import re

WORD_REGEXP = re.compile(r"[\w']+")

class MRWordFrequencyCount(MRJob):

    def mapper(self, _, line):
        words = WORD_REGEXP.findall(line)
        for word in words:
            yield word.lower(), 1

    def reducer(self, key, values):
        yield key, sum(values)


if __name__ == '__main__':
    MRWordFrequencyCount.run()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a regular expression that has been compiled for faster reuse (explained in this question: <a href="https://stackoverflow.com/questions/452104/is-it-worth-using-pythons-re-compile">Is it worth using re.compile</a>). The command re.compile is explained in the <a href="https://docs.python.org/3/library/re.html#re.compile" rel="nofollow noreferrer">Python docs</a>. </p>
<p>Regarding the specific regex expression, this searches for groups that have alphanumerics (that's the <code>\w</code> part) or apostrophes (which is also in those square brackets) that are 1 or longer. Note that whitespace is not a match, so this, generally speaking, breaks a line into words.</p>
<p>See <a href="https://pythex.org/?regex=%5B%5Cw%27%5D%2B&amp;test_string=How%27s%20it%20going%20%24%23%24%23&amp;ignorecase=0&amp;multiline=0&amp;dotall=0&amp;verbose=0" rel="nofollow noreferrer">the query</a> in a Python specific regex tester to try it out or on <a href="https://regex101.com/r/CMGOHz/1" rel="nofollow noreferrer">regex101</a> where they offer an explanation of any regex expression.</p>
<p>In the phrase <code>How's it going $#</code> this would how three matches: <code>How's</code>, <code>it</code>, <code>going</code> but wouldn't match the group of symbols.</p>
<p>There are lots of tutorials and even some games out there but you can start with <a href="https://regexone.com/" rel="nofollow noreferrer">regexone</a> to understand it better by trying some out.</p>
</div>
<span class="comment-copy">Lookup "Python regular expressions" and just read the Python documentation regarding regular expressions. You are compiling a regular expression, then using it to search for text that matches that regular expression.</span>
<span class="comment-copy">Thats what documentation is for:   <a href="https://docs.python.org/3/library/re.html#re-objects" rel="nofollow noreferrer">docs.python.org/3/library/re.html#re-objects</a>   and    <a href="https://docs.python.org/3/library/re.html#re.compile" rel="nofollow noreferrer">docs.python.org/3/library/re.html#re.compile</a></span>
<span class="comment-copy">@PatrickArtner i m not getting still how exactly that r"[\w']+" part breaks the line into words</span>
<span class="comment-copy">See Zev's explanation. and use <a href="http://regex101.com" rel="nofollow noreferrer">regex101.com</a> for testing of regex - you even get an explanation for any pattern you provide. I find it better then pythex - and it also got a <code>python</code> regex switch</span>
<span class="comment-copy">@PatrickArtner awesome resource! I've added that.</span>
