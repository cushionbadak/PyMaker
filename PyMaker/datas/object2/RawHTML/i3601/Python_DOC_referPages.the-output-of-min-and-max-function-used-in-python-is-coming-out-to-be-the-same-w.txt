<div class="post-text" itemprop="text">
<pre><code>#Data 
revenue = [14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 10305.32, 14379.96, 10713.97, 15433.50]
expenses = [12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 6976.93, 16618.61, 10054.37, 3803.96]
</code></pre>
<blockquote>
<p>Data for revenue and expenses are already given using which we have to calculate the rest of the quantities.</p>
</blockquote>
<pre><code>profit = []
tax_profit = []
p_margin = []
mean = 0

for i in range(0,len(revenue)):
    profit.append(revenue[i] - expenses[i])
print ("The profit per month is",profit)
print("\n")   

for i in range(0,len(profit)):
    tax_profit.append(profit[i] * 70/100)
print("The profit after tax is",tax_profit)
print("\n")


for i in range(0,len(tax_profit)):
    p_margin.append((tax_profit[i]/revenue[i]))
print(p_margin)
p_margin = [round(i,2) for i in p_margin]
print(p_margin)
print("\n")

mean_pat = sum(profit) / len(profit)
print(mean_pat)


good_months = []
bad_months = []
for i in range (0, len(tax_profit)):
    good_months.append(tax_profit[i] &gt; mean_pat)
print(good_months)

for i in range (0, len(tax_profit)):
    bad_months.append(tax_profit[i] &lt; mean_pat)
print(bad_months)

best_month = []
for i in range (0, len(tax_profit)):
    best_month.append(tax_profit[i] == max(tax_profit))
print(best_month)
print (round(tax_profit[i],2))
print("\n")

worst_month = []
for i in range (0, len(tax_profit)):
    worst_month.append(tax_profit[i] == min(tax_profit))
print(worst_month) 
print(round(tax_profit[i],2))          

&gt; the output for best month and worst month is coming out to be same.
&gt; Although the month having the worst month is showing True but printing the equivalent value of the worst month incorrectly by giving the value of the best month.
</code></pre>
<blockquote>
<p>This is a code dealing with the financial analysis of a given organisation using the basic concepts of list in python.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You are printing it wrong.
so, you are iterating using for loop. after the <code>for loop</code>, you are directly using <code>i</code> which will be last index. </p>
<p>so, what you need to do is, get the index where the best_month is True and print that index. so, you need to do the following </p>
<pre><code>best_month_val  = print(round(tax_profit[best_month.index(True)],2))  
worst_month_val  = print(round(tax_profit[worst_month.index(True)],2))  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You dont even need to index back in your data, you can simply print the min and max value:</p>
<pre><code>print(min(tax_profit))
print(max(tax_profit))
</code></pre>
<p>Also consider storing the min/max value in a variable to avoid recomputation - not sure if python optimizes the calculation of this max/min or recomputes it for every iteration:</p>
<blockquote>
<pre><code>best_month = []
for i in range (0, len(tax_profit)):
    best_month.append(tax_profit[i] == max(tax_profit))
print(best_month)
</code></pre>
</blockquote>
<p>should be</p>
<pre><code> best_month = []
 maxValue = max(tax_profit)
 for i in range (0, len(tax_profit)):
     best_month.append(tax_profit[i] == maxValue)
 print(best_month)
</code></pre>
<hr/>
<p>That said, if you use list comprehensions you can shorten your code a bit. </p>
<p><strong>Other errors:</strong> </p>
<ul>
<li>You should include <code>mean_pat</code> months either in <code>good_months</code> or <code>bad_months</code>, currently they are in neither list </li>
<li>your <code>mean_pat</code> calculation does not use the <em><code>tax_profit</code></em> but the one before taxes: <em><code>profit</code></em> - hence all other values afterwards are skewed - see comments:</li>
</ul>
<hr/>
<pre><code>revenue = [14574.49, 7606.46, 8611.41, 9175.41, 8058.65, 8105.44, 11496.28, 9766.09, 
           10305.32, 14379.96, 10713.97, 15433.50]
expenses = [12051.82, 5695.07, 12319.20, 12089.72, 8658.57, 840.20, 3285.73, 5821.12, 
            6976.93, 16618.61, 10054.37, 3803.96]

profit = [r-e for r,e in zip(revenue,expenses)]
tax_profit = [p * 70/100 for p in profit]
p_margin = [round(tp/rev,2) for tp,rev in zip(tax_profit,revenue)]
mean = 0  # never used?

print ("The profit per month is",profit,"\n")   

print("The profit after tax is",tax_profit,"\n")

print("The margin is",p_margin,"\n")

mean_pat = sum(profit) / len(profit)     # this is NOT after tax, its before
print("Mean Profit after tax:",mean_pat) # so the variable name is false? you reuse
print("\n")                              # it further down, you should review that   

# one of both should entail the month with mean_pat (if present)
good_months = [ tp &gt;= mean_pat for tp in tax_profit]
bad_months = [tp &lt; mean_pat for tp in tax_profit]

print("Good:",good_months,"\n")
print("Bad: ",bad_months,"\n")

maxTP = max(tax_profit)
best_month = [1 if p == maxTP else 0 for p in tax_profit]
print("Best Months:",best_month)
print ("Best result:",round(maxTP,2),"\n")

minTP = min(tax_profit)
worst_month = [1 if p == minTP else 0 for p in tax_profit]
print("Worst months:", worst_month) 
print("Worst result:",round(minTP,2),"\n")
</code></pre>
<p>Output:</p>
<pre><code>The profit per month is [2522.67, 1911.3900000000003, -3707.790000000001, -2914.3099999999995, -599.9200000000001, 7265.24, 8210.550000000001, 3944.9700000000003, 3328.3899999999994, -2238.6500000000015, 659.5999999999985, 11629.54]

The profit after tax is [1765.869, 1337.9730000000002, -2595.4530000000004, -2040.0169999999996, -419.9440000000001, 5085.668, 5747.385000000001, 2761.4790000000003, 2329.8729999999996, -1567.0550000000012, 461.719999999999, 8140.6780000000
01]

The margin is [0.12, 0.18, -0.3, -0.22, -0.05, 0.63, 0.5, 0.28, 0.23, -0.11, 0.04, 0.53]

Mean Profit after tax: 2500.9733333333334


Good: [False, False, False, False, False, True, True, True, False, False, False, True]

Bad:  [True, True, True, True, True, False, False, False, True, True, True, False]

Best Months: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
Best result: 8140.68

Worst months: [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Worst result: -2595.45
</code></pre>
<hr/>
<p>Link to <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip()</a> - dokumentation - it is handy if you operate on same-lenght lists and have to do things to pairwise values of it - for non-equal lengthy lists you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer">itertoools.zip_longest()</a> instead where you can provide default values for the values of the shorter list.</p>
</div>
<span class="comment-copy">Welcome to Stackoverflow. You need to put in a bit effort and produce a minimal verifiable complete example highlighting your issue. Don't just do a core dump. See <a href="https://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a></span>
<span class="comment-copy">Why are you calculating <code>max</code> and <code>min</code> on every loop iteration? <code>tax_profit</code> isn't changing, so its max and min values won't change either. Compute them outside the loop, that's much more efficient. Also, your code would be easier to read if you loop directly over the loop items, instead of looping with indices. To loop over 2 (or more) lists in parallel, use <code>zip</code>. To loop over a list and get an index and the list items at the same time, use <code>enumerate</code>.</span>
<span class="comment-copy">Python's optimization is pretty simple, so it can't generally optimize constant computations inside loops, like those <code>max</code> and <code>min</code> calls.</span>
<span class="comment-copy">@PM2Ring thanks for confirming, I just had a hunch ;)</span>
