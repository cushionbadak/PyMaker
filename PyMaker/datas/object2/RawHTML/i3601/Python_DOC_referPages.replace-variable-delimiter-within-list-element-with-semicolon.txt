<div class="post-text" itemprop="text">
<p>Given list: </p>
<pre><code>['1~A A1', '2~ B B1', '3~C C1', '4~D D1'] # Delimiter is not fixed
</code></pre>
<p><strong>Note</strong>: I'm getting a dynamic list every time and there may be a different delimiter in the list elements every time. </p>
<p>Expected list:</p>
<pre><code>['1;A A1','2;B B1','3;C C1','4;D D1']
</code></pre>
<p>Tried with the following code, which works fine for string type.</p>
<pre><code>sniffer = csv.Sniffer()
dialect = sniffer.sniff(file)
deli = dialect.delimiter
file = file.replace(deli,';')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you know the set of possible delimiters to be <code>^ ; | ,</code> and <code>~</code> (from comments), just use those in <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a> and replace all with <code>;</code>.</p>
<pre><code>&gt;&gt;&gt; import re    
&gt;&gt;&gt; l = ['1~A A1', '2~ B B1', '3~C C1', '4~D D1'] 
&gt;&gt;&gt; [re.sub(r"[;,|^~]", ";", s) for s in l]
['1;A A1', '2; B B1', '3;C C1', '4;D D1']
</code></pre>
<p>Note that some of those have special meaning in regex, e.g. if you put <code>^</code> in the beginning, the <code>[...]</code> will be inverted. When in doubt, you can escape them as <code>\^</code> etc., but in this order is should be fine, too.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using Regex.</p>
<p><strong>Demo:</strong></p>
<pre><code>import re
l = ['1~A A1', '2~ B B1', '3~C C1', '4~D D1'] 

for i, value in enumerate(l):
    l[i] = re.sub(r"[^A-Za-z0-9\s]", ";", value)
print(l)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>['1;A A1', '2; B B1', '3;C C1', '4;D D1']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the position of delimiter is fixed, then the worst solution may be the best:</p>
<pre><code>&gt;&gt;&gt; l = ['1~A A1', '2~ B B1', '3~C C1', '4~D D1']
&gt;&gt;&gt; for index, value in enumerate(l):
    l[index] = l[index][0]+';' +l[index][2:]
</code></pre>
<p>Other wise, above solution by @Rakesh is good enough</p>
</div>
<span class="comment-copy">So what's the problem?</span>
<span class="comment-copy">The delimiter cannot be <i>completely</i> unknown. For example, I don't assume it can be <code>A</code>. Define which characters can be possible delimiters.</span>
<span class="comment-copy">The possible delimiters are <code>^ ; | ,</code>.</span>
<span class="comment-copy">"The possible delimiters are <code>^ ; | ,</code>" So, <code>~</code> is <i>not</i> a possible delimiter?</span>
<span class="comment-copy">You must define the task better. You can't let us <i>guess</i> what you could need.</span>
<span class="comment-copy"><code>[^A-Za-z0-9\s]</code> is very bold. (Also, regex always as raw strings! <code>r''[^A-Za-z0-9\s]"</code>)</span>
