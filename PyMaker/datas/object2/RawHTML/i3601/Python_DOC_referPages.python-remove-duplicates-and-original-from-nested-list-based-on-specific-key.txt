<div class="post-text" itemprop="text">
<p>I m trying to delete all duplicates &amp; original from a nested list based on specific column.</p>
<p>Example</p>
<pre><code>list = [['abc',3232,'demo text'],['def',9834,'another text'],['abc',0988,'another another text'],['poi',1234,'text']]
</code></pre>
<p>The key column is the first (abc, def, abc) and based on this I want to remove any item (plus the original) which has the same value with the original.</p>
<p>So the new list should contain:</p>
<pre><code>newlist = [['def',9834,'another text'],['poi',1234,'text']]
</code></pre>
<p>I found many similar topics but not for nested lists...
Any help please?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>:</p>
<pre><code>from collections import Counter

lst = [['abc',3232,'demo text'],['def',9834,'another text'],['abc',988,'another another text'],['poi',1234,'text']]

d = dict(Counter(x[0] for x in lst))
print([x for x in lst if d[x[0]] == 1])

# [['def', 9834, 'another text'], 
#  ['poi', 1234, 'text']]
</code></pre>
<p>Also note that you shouldn't name your list as <code>list</code> as it shadows the built-in <a href="https://docs.python.org/3.3/library/functions.html#func-list" rel="nofollow noreferrer"><code>list</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can construct a list of keys</p>
<pre><code>keys = [x[0] for x in list]
</code></pre>
<p>and select only those records for which the key occurs exactly once</p>
<pre><code>newlist = [x for x in list if keys.count(x[0]) == 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using a list comprehension. </p>
<p><strong>Demo:</strong></p>
<pre><code>l = [['abc',3232,'demo text'],['def',9834,'another text'],['abc', 988,'another another text'],['poi',1234,'text']]
checkVal = [i[0] for i in l]
print( [i for i in l if not checkVal.count(i[0]) &gt; 1 ] )
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[['def', 9834, 'another text'], ['poi', 1234, 'text']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>collections.defaultdict</code> for an O(n) solution:</p>
<pre><code>L = [['abc',3232,'demo text'],
     ['def',9834,'another text'],
     ['abc',988,'another another text'],
     ['poi',1234,'text']]

from collections import defaultdict

d = defaultdict(list)

for key, num, txt in L:
    d[key].append([num, txt])

res = [[k, *v[0]] for k, v in d.items() if len(v) == 1]

print(res)

[['def', 9834, 'another text'],
 ['poi', 1234, 'text']]
</code></pre>
</div>
<span class="comment-copy">What have you tried so far?</span>
<span class="comment-copy">Side point. Never name a variable after a built-in, use <code>L</code> or <code>list_</code> instead of <code>list</code>.</span>
<span class="comment-copy">Good solution, this has O(n) complexity. But I don't think <code>if x[0] in d.keys()</code> is necessary?</span>
<span class="comment-copy">@jpp oops! That isn't necessary. Thanks a lot.</span>
<span class="comment-copy">thank you!!!!!!</span>
<span class="comment-copy">You have O(n^2) complexity here by calling <code>list.count</code> n times. You could use <code>collections.Counter</code> to make this O(n). Or store your counts separately.</span>
<span class="comment-copy">Well, OP didn't say anything regarding the list size, so I assumed it is not large enough to make the difference between O(n) and O(n^2). Definitely, using <code>Counter</code> is more efficient approach but I intended to give a quick-and-dirty solution that works well in most cases.</span>
<span class="comment-copy">My comment isn't a complaint, it's just a note which may interest readers.</span>
<span class="comment-copy">No offense taken;) Just explained my intent.</span>
<span class="comment-copy">You have O(n^2) complexity here by calling <code>list.count</code> n times. You could use <code>collections.Counter</code> to make this O(n). Or store your counts separately.</span>
<span class="comment-copy">Between this solution is also good. I usually go for <code>Counter</code> than a <code>defaultdict</code> way. +1.</span>
