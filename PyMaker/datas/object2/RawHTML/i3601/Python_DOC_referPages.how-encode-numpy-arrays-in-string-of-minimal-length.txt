<div class="post-text" itemprop="text">
<p>I have around ten variables (variables / arrays / symmetric matrices) which i want to get through an url. Because i will use a a rest api there is a limit on the size of the url so i need to encode it in a string of minimal length and encrypt. Any idea ? I've always supposed that's how google or other website transmit information sometimes when the adress is downright initelligible</p>
<p>My original idea was to encode all numbers in scientific notation and use separators (2.4e14__3.1e12_2.5e10_ for example to pass a number 2.4e14 and a array [3.1e12_2.5e10]) and encode this string. Possibly use another base (base with numbers + letters) for futher concatenation but i'm not sure how i can save so much string space.</p>
<p>Maybe there's an existing library or technique ? i didn't find it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Pickle and base64 will do the job nicely. Your floating point numbers remain as binary, not converted through ascii.</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; a = np.array([0,1,2])
&gt;&gt;&gt; import pickle
&gt;&gt;&gt; import base64
&gt;&gt;&gt; b64 = base64.b64encode(pickle.dumps(a))
</code></pre>
<p>At the other end</p>
<pre><code>&gt;&gt;&gt; n = pickle.loads(base64.b64decode(b64))
&gt;&gt;&gt; print(n)
array([0, 1, 2])
</code></pre>
<p>However, this won't be the shortest representation possible. Sufficient information to fully reconstruct the object is transmitted. If it is short enough it is the most easily extended and modified option.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can convert a numpy object to python list.Then convert list to a json string.</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; import json
&gt;&gt;&gt; a = np.array([0,1,2])
&gt;&gt;&gt; b = a.tolist()
&gt;&gt;&gt; c = json.dumps(b)
</code></pre>
<p>Similarly,you can convert json string to numpy by: json string-&gt;list-&gt;numpy</p>
<pre><code>&gt;&gt;&gt; d = np.array(json.loads(c))
</code></pre>
</div>
<span class="comment-copy">Not a web expert but <a href="https://docs.python.org/3/library/base64.html" rel="nofollow noreferrer">base64</a> and friends would be one way to "textify" binary data</span>
<span class="comment-copy">Is it guaranteed that your numbers will only have two significant digits like this? Also, why do you need the "â€¦ and encrypt" step?</span>
