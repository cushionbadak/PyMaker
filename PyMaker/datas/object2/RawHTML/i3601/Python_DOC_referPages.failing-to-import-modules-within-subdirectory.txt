<div class="post-text" itemprop="text">
<p>I've got a package I'm trying to import certain modules from, but am failing at. The way my directory is structured is:  </p>
<pre><code>top/
    main_script.py
    middle/
        foo.py
        utils.py
        __init__.py`  
</code></pre>
<p>foo.py imports utils.py just fine whenever I run it, however, if I run main_script.py, foo.py will fail to import utils.py by giving me a ModuleNotFoundError: No module named 'utils.py'  </p>
<p>The way I'm importing foo.py in main_script.py is:<br/>
<code>from middle import foo</code> </p>
<p>The way I'm importing utils.py into foo.py is:<br/>
<code>import utils</code> </p>
<p>If I import, say, numpy into foo.py instead of importing utils and run main_script.py it will import and run just fine, however, if foo.py contains utils then running main_script.py will fail.</p>
<p>Any idea on how to fix this without putting my main_script.py into middle/?</p>
</div>
<div class="post-text" itemprop="text">
<p>It would be helpful if you could share how you are importing in main_script. </p>
<p>Your import should be: </p>
<pre><code>from middle import foo
</code></pre>
<p>Or </p>
<pre><code>from middle import foo, utils
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<p><strong>main_script.py</strong></p>
<pre><code>from middle import foo

print(__name__)
</code></pre>
<p><strong>foo.py</strong></p>
<pre><code>from middle import utils

print(__name__)
</code></pre>
<p><strong>utils.py</strong></p>
<pre><code>print(__name__)
</code></pre>
<p>To know more about it, just check the <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">docs</a></p>
</div>
<span class="comment-copy">How are you importing foo? Is it a relative import? Might help to share your import snippet as well.</span>
<span class="comment-copy">Edited the question to provide more information</span>
<span class="comment-copy">In foo.py, I've tried editing the import statement to be <code>import middle.utils as utils</code> but that gives a <code>ModuleNotFoundError: no module named 'middle'</code>. Similarly, if I try something like<code>from . import utils</code> that gives a <code>ImportError: cannot import name 'utils'</code>.</span>
<span class="comment-copy">I'd also add that, in <code>foo.py</code>, the author might be need to specify that <code>utils</code> be imported from within <code>middle</code> such that this is the import script: <code>import middle.utils as utils</code>.</span>
