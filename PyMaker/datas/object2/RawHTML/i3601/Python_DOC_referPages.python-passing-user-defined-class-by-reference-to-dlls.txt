<div class="post-text" itemprop="text">
<p>I am currently working on a project that requires to access functions in DLLs, and I found ctypes to handle the function call for me. However, I encounter some difficulties when some functions ask to pass parameters by reference. I've tried the ctypes.by_ref() but it doesn't work because the object is a user-defined class.</p>
<p>And then I gave ctypes.pointer() a try and it spits out the error message: "<em>type</em> must have storage info". I guess that means it only takes ctypes data types?</p>
<p>My code:</p>
<pre><code>from ctypes import *
class myclass():
    a= None # requiring c_int32
    b= None # requiring c_int32
myci= myclass()
myci.a= c_int32(255)
myci.b= c_int32(0)
mycip= pointer(myci)  # let's say it's Line 8 here
loadso= cdll.LoadLibrary(mydll)
Result= loadso.thefunction (mycip) # int thefunction(ref myclass)
</code></pre>
<p>And the terminal output:</p>
<pre><code>Line 8: TypeError: _type_ must have storage info
</code></pre>
<p>I would like to know 1) what does that error message mean? and 2) the way to work around and pass a user-defined class by reference to an external DLL.</p>
<p>Thank you in advance for your time.</p>
</div>
<div class="post-text" itemprop="text">
<p>The error message means that you can't create a <code>ctypes</code> pointer to a non-ctypes type.  <code>ctypes</code> types have the information needed to marshal values correctly to C.</p>
<p>Read <a href="https://docs.python.org/3/library/ctypes.html#structures-and-unions" rel="nofollow noreferrer">ctypes: Structures and Unions</a>.  The first sentence is (emphasis mine):</p>
<blockquote>
<p>Structures and unions <strong>must derive from the Structure and Union base classes</strong> which are defined in the <code>ctypes</code> module.</p>
</blockquote>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; from ctypes import *
&gt;&gt;&gt; class Test(Structure):
...   _fields_ = [('a',c_int32),
...               ('b',c_int16),
...               ('c',c_int16)]
...
&gt;&gt;&gt; t = Test(1,2,3)
&gt;&gt;&gt; pointer(t)
&lt;__main__.LP_Test object at 0x00000234A8750A48&gt;
&gt;&gt;&gt; bytes(t)
b'\x01\x00\x00\x00\x02\x00\x03\x00'
</code></pre>
<p>Note that a pointer can be taken and that the raw bytes of the structure can be displayed.  The structure is little-endian and there are four bytes allocated for the <code>c_int32</code>, and two bytes each for the two <code>c_int16</code> members.</p>
</div>
<span class="comment-copy"><i>ctypes</i> comes from <b><i>C</i></b> types (which typically can't handle <i>C++</i> types). However without seeing some code (<a href="https://stackoverflow.com/help/mcve">[SO]: How to create a Minimal, Complete, and Verifiable example (mcve)</a>), it's hard to guess the error (and the fix).</span>
<span class="comment-copy">@CristiFati at first I thought this question could be asked without presenting some codes because it's more about methodology and asking for the meaning of a specific error message. But I would add some code in the next edit to make things clearer.</span>
<span class="comment-copy">That's not the way of using <i>ctypes</i>. Check <a href="https://docs.python.org/3/library/ctypes.html#module-ctypes" rel="nofollow noreferrer">docs.python.org/3/library/ctypes.html#module-ctypes</a>. Also <i>Google</i> yields tons of examples.<a href="https://stackoverflow.com/questions/50447199/ctypes-struct-containing-arrays" title="ctypes struct containing arrays">stackoverflow.com/questions/50447199/…</a>, <a href="https://stackoverflow.com/questions/50325050/ctypes-argumenterror-when-calling-dll-functions-with-python" title="ctypes argumenterror when calling dll functions with python">stackoverflow.com/questions/50325050/…</a>, <a href="https://stackoverflow.com/questions/50003760/python-ctypes-calling-a-function-with-custom-types-in-c" title="python ctypes calling a function with custom types in c">stackoverflow.com/questions/50003760/…</a>, <a href="https://stackoverflow.com/questions/49962265/c-to-python-via-ctypes-wrapping-struct-of-function-pointers-to-static-function" title="c to python via ctypes wrapping struct of function pointers to static function">stackoverflow.com/questions/49962265/…</a>, are just a few of mine...</span>
<span class="comment-copy">@CristiFati Can you elaborate on why it's not how we use ctypes? Is the use case not appropriate? Or wrong setups maybe?  I've read all of the articles linked above, does it mean that there is no way around but to inherit myclass under Structure? The reason I didn't inherit under Structure is that CPython doesn't differentiate c_int and c_long, depending on the machine architecture,  and that CPython store field values(c_int16, c_int32, no matter what it is required) in int. And I just don't like that behavior. But if using a Structure is the best way I 'll do it.</span>
