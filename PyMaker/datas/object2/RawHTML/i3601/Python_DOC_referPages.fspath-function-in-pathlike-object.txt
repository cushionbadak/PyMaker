<div class="post-text" itemprop="text">
<p>I'm trying to implement a PathLike object and use fspath command to retrieve the o/p from <strong>fspath</strong> function.</p>
<p>What I'm expecting is, if a PathLike object is passed to fspath function, it should return the value of <strong>fspath</strong> (here it should return the path in bytes). However, it is still returning in str.</p>
<pre><code>import os,pathlib
class imp(os.PathLike):
 def __init__(self,path):
  self.path=path
 def __fspath__(path):
  return bytes(path)
re=imp('/etc/')
print(os.fspath(re.path))

Output: '/etc/'

Expected output : b '/etc/'
</code></pre>
<p>Can you please let me know where I went wrong and how should I change the code so that it works as expected?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>__fspath__</code> should be defined as</p>
<pre><code>def __fspath__(self):
    return self.path.encode('utf8')
</code></pre>
<p>Then used as</p>
<pre><code>os.fpath(re)
</code></pre>
<p>When <code>re</code> is the argument to <code>fspath</code>, the method <code>re.__fspath__</code> will be automatically invoked, and it should return the value of <code>re.path</code>--not directly, but properly encoded as a <code>bytes</code> object.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you’re calling <code>fspath</code> on <code>re.path</code> instead of on <code>re</code>.</p>
<p>While <code>re</code> is a pathlike object, for which <code>fspath</code> will use the <code>__fspath__</code> protocol, <code>re.path</code> is just a string, so it returns the string unchanged.</p>
<p>As <a href="https://docs.python.org/3/library/os.html#os.PathLike.__fspath__" rel="nofollow noreferrer">the docs</a> say:</p>
<blockquote>
<p>If <code>str</code> or <code>bytes</code> is passed in, it is returned unchanged. Otherwise <code>__fspath__()</code> is called and its value is returned as long as it is a <code>str</code> or <code>bytes</code> object. In all other cases, <code>TypeError</code>is raised.</p>
</blockquote>
<p>Meanwhile, your <code>__fspath__</code> is wrong in two ways. First it’s a method, which should take <code>self</code> and do something with <code>self.path</code>; as-is, you’re taking that <code>self</code> as a variable named <code>path</code> and trying to use it as a string. Second, you have to call <code>encode</code> on your string (with the appropriate encoding—which is usually the fs encoding, although in that case you don’t even need to bother and can just return a string), not pass it to the <code>bytes</code> constructor.</p>
<p>Also, for debugging purposes, it would had been a lot easier to spot the problem if your string and bytes were completely unrelated. If, say, <code>re.path</code> were <code>'unicodepath'</code> while <code>__fspath__</code> returned <code>’8bitpath'</code>, it would be pretty clear whether it was ignoring your method or deciding things behind your back.</p>
</div>
<span class="comment-copy">Thanks for your detailed explanation. :)</span>
