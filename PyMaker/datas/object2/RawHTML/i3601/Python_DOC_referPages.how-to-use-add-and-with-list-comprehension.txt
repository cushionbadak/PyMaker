<div class="post-text" itemprop="text">
<p>I am trying to figure out how to use the code below with list comprehension.</p>
<pre><code>link = 'page={}&amp;index={}'
index = 10
links = []
for page in range(2, 4):
    links.append(link.format(page, index))
    index += 10
</code></pre>
<p>I have tried many different ways and Googled as much as possible (maybe I am not searching for the correct terms?). I am still unable to figure it out. Below is one of the ways I tried but I get a <code>SyntaxError</code> error.</p>
<pre><code>link = 'page={}&amp;index={}'
index = 10
links = [link.format(link, index) for page in range(2, 4) index += 10]
</code></pre>
<p>This should be the output of the list comprehension:</p>
<pre><code>['page=2&amp;index=10', 'page=3&amp;index=20']
</code></pre>
<p>If anyone has any ideas it would be greatly appreciated it. Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>: builtin function to increment the <code>index</code>:</p>
<pre><code>&gt;&gt;&gt; [link.format(page, i*10) for i, page in enumerate(range(2, 4), start=1)]
['page=2&amp;index=10', 'page=3&amp;index=20']
</code></pre>
<p>This will also work with any other iterable instead of just a <code>range(2, 4)</code>, e.g. a list of strings. Any such iterable can thus be augmented with a counter variable, like <code>index</code> in your example.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't use += statements (or any statement for that matter) in a list comprehension. In your case, use <a href="https://docs.python.org/3.4/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> and <a href="https://docs.python.org/3/library/itertools.html#itertools.count" rel="nofollow noreferrer"><code>itertools.count</code></a>:</p>
<pre><code>import itertools
[link.format(page, index) for page, index in zip(range(2, 4), itertools.count(10, 10))]
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/10291997/how-can-i-do-assignments-in-a-list-comprehension">How can I do assignments in a list comprehension?</a></span>
<span class="comment-copy">Broadly speaking, A list comprehension can contain only expressions. <code>index += 10</code> is not an expression; it is a statement. So you can't put it inside a list comprehension. But even if you could do this, you should question whether you should. Not all code is improved by making it shorter.</span>
<span class="comment-copy">@dfundako I edited the question to show my expected output. Thanks.</span>
<span class="comment-copy">@Kevin Oh ok, well that is fine too, not the end of the world if I can't do this. I just could not find anywhere that talked about doing this, etc... Thank you for that information.</span>
<span class="comment-copy">@Kevin Great thing to remember when learning to code. Code will be written once, but read a hundred times. Make it easier to read and comprehend instead of saving a line or two of code.</span>
<span class="comment-copy"><code>enumerate</code> is overkill here, given that <code>i == page - 1</code></span>
<span class="comment-copy">@chepner Well, yes, but it is more generally applicable. Instead of <code>range(2, 4)</code>, you could have a range with steps, or just any iterable.</span>
<span class="comment-copy">yes what chepner said (almost) <code>[link.format(page, 10*(page-1)) for page in range(2, 4)]</code></span>
<span class="comment-copy">(I deleted my comment when I noticed I didn't have the relationship between page and link quite right; Chris got it, though.)</span>
<span class="comment-copy">I am not sure if you want to make your comment into a answer so I can mark it right @Chris_Rands but this is exactly what I was trying to figure out. Thank you for making such a simple and straight to the point answer.</span>
<span class="comment-copy">@antfuentes87 I mean, they all do exactly the same thing... but it's your call I guess. I agree with @tobias_k though, <code>enumerate</code>/<code>itertools.count</code> are more versatile.</span>
<span class="comment-copy">I do agree but I have to import itertools for yours to work and I do not have to with @Chris_Rands. Plus I had a very similar attempt when I was trying to figure it out myself.</span>
