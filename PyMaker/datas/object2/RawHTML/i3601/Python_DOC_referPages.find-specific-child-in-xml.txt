<div class="post-text" itemprop="text">
<pre><code>&lt;graphiceditor&gt;
    &lt;plot name="DS_Autobahn 1.Track: Curvature &amp;lt;78.4204 km&gt;" type="CurvePlot"&gt;
        &lt;parent&gt;DS_Autobahn 1&lt;/parent&gt;
        ...
        &lt;curve name="" isXTopAxis="0" markerSize="8" symbol="-1" 
            &lt;point x="19.986891478960015" y="-0.00020825890723451596"/&gt;
            &lt;point ....
</code></pre>
<p>Hello, I want to open the .xml file, find "curve" and import the y-coordinate of the curve into a list. I know that "curve" has the index [16] so I am using this right now:  </p>
<pre><code>tree = ET.parse(file_name)
root = tree.getroot()    
curvature = [float(i) for i in[x["y"] for x in [root[0][16][i].attrib for i in range(len(root[0][16]))]]]
</code></pre>
<p>But how do I do it, if curve is not at the 16th position? How do I find curve in any xml file then? I have been trying for several hours now but I simply do not get it. Thank you very much in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use XPath for instance.</p>
<p>This would then essentially look like:</p>
<p><code>root.findall(xpath)</code></p>
<p>where your xpath would be './/curve' if you are just interested in all childs of tag-type curve.</p>
<p>For more inofrmation regarding xpath see <a href="https://www.w3schools.com/xml/xpath_syntax.asp" rel="nofollow noreferrer">w3schools</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I recommend learning about Regular Expressions (more commonly referred to as Regex), I use them all the time for problems like this.</p>
<p>This is a good place to reference the different aspects of Regex:
<a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">Regex</a></p>
<p>Regex is a way to match text, its a lot like <code>if "substring" in string:</code> except a million times more powerful. The entire purpose of regex is to find that "substring" even when you don't know what it is.</p>
<p>So lets take a closer look at your example in particular, first thing to do is figure out exactly which rules need to be true in order to "match" the y value.
I don't know exactly how you are actually reading in your data, but am reading it in as a single string. </p>
<pre><code>string = '&lt;graphiceditor&gt;' \
    '&lt;plot name="DS_Autobahn 1.Track: Curvature &amp;lt;78.4204 km&gt;" type="CurvePlot"&gt;' \
    '&lt;parent&gt;DS_Autobahn 1&lt;/parent&gt;' \
    '&lt;curve name="" isXTopAxis="0" markerSize="8" symbol="-1"' \
    '&lt;point x="19.986891478960015" y="-0.00020825890723451596"/&gt;' \
    '&lt;point ....'
</code></pre>
<p>You can see I split the sting into multiple lines to make it more readable. If you are reading it from a file with open() make sure to remove the "\n" meta-characters or my regex wont work (not that you cant write regex that would!)</p>
<p>The first thing I want to do is find the curve tag, then I want to continue on to find the y= section, then grab just the number. Let's simplify that out into really defined steps:</p>
<ol>
<li>Find where the curve section begins</li>
<li>Continue until the next y= section begins</li>
<li>Get the value from inside the quotes after the y= section.</li>
</ol>
<p>Now for the regex, I could explain how exactly it works but we would be here all day. Go back to that Doc I linked at the start and read-up.</p>
<pre><code>import re
string = "[see above]"
y_val = re.search('&lt;curve.*?y="(.*?)"', string).group(1)
</code></pre>
<p>That's it! Cast your y_val to a float() and you are ready to go!</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/a/1732454/317052">Use an XML parser to parse XML; not regex.</a></p>
<p>Like mentioned in another answer, I would also use XPath. If you need to use complex XPaths, I'd recommend using lxml. In your example though ElementTree will suffice.</p>
<p>For example, this Python...</p>
<pre><code>import xml.etree.ElementTree as ET

tree = ET.parse("file_name.xml")
root = tree.getroot()
curvature = [float(y) for y in [point.attrib["y"] for point in root.findall(".//curve/point[@y]")]]

print(curvature)
</code></pre>
<p>using this XML ("file_name.xml")...</p>
<pre><code>&lt;graphiceditor&gt;
    &lt;plot name="DS_Autobahn 1.Track: Curvature &amp;lt;78.4204 km&gt;" type="CurvePlot"&gt;
        &lt;parent&gt;DS_Autobahn 1&lt;/parent&gt;
        &lt;curve name="" isXTopAxis="0" markerSize="8" symbol="-1"&gt;
            &lt;point x="19.986891478960015" y="-0.00020825890723451596"/&gt;
            &lt;point x="19.986891478960015" y="-0.00030825690983451678"/&gt;
        &lt;/curve&gt;
    &lt;/plot&gt;
&lt;/graphiceditor&gt;
</code></pre>
<p>will print...</p>
<pre><code>[-0.00020825890723451596, -0.0003082569098345168]
</code></pre>
<p>Note: Notice the difference between the second y coordinate in the list and what's in the XML. That's because you're casting the value to a float. Consider casting to a decimal if you need to maintain precision.</p>
</div>
<span class="comment-copy"><a href="https://stackoverflow.com/help/someone-answers">What should I do when someone answers my question?</a></span>
