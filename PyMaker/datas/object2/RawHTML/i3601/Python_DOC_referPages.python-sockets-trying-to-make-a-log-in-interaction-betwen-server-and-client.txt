<div class="post-text" itemprop="text">
<p>Hello so i have my server with a database (dictironay) and another passworddatabase</p>
<pre><code>import socket
import sys
from _thread import *
host = ""
port = 8000
serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print("Socket Created")
try:
    serversocket.bind((host, port))
except socket.error as e:
    print(str(e))
    sys.exit()



database = {"name1" :{"hair" : "red", "size" : 1.50}}

password_database = {"name1": "1234",
                     "name2": "4321"}



def client_thread(conn): #threader client
    welcome = "Welcome to the server. Type something and hit enter \n"
    conn.send(welcome.encode("UTF-8"))
    login(conn)
    while True:                # NOT IMPORTANT KEEP READING
        data = conn.recv(24)
        reply = data.decode("UTF-8")
        if reply == "1":
            menu1 = "Menu 1: Buy \n"
            conn.send(menu1.encode("UTF-8"))
        else:
            wrong = "wrong option \n"
            conn.send(wrong.encode("UTF-8"))



def login(conn):  #MY LOGIC PROBLEM IS HERE
    log = "Log in MENU: \n"
    logi = log.encode("UTF-8")
    conn.send(logi)
    us = "Username: \n"
    use = us.encode("UTF-8")
    conn.send(use)
    userr = conn.recv(24)
    user = userr.decode("UTF-8")
    pa = "Password: \n"
    pasw = pa.encode("UTF-8")
    conn.send(pasw)
    passr = conn.recv(24)
    passw = passr.decode("UTF-8")
    tries = 0
    while tries &lt; 3:
        if user in passwordDictionary and passwordDictionary[user] == passw:
            print("Logged in")
            menu()
        else:
            print("Wrong Username Or Password \n")
            tries += 1
    print("You failed the login too many times, blocking you out")
    conn.close()



while 1: # NOT IMPORTANT
    conn, addr = serversocket.accept()
    print("Connected with " + addr[0] + ":" + str(addr[1]))
    start_new_thread(client_thread, (conn, ))
serversocket.close()
</code></pre>
<p>Whats working:
The server is working fine, i'm having troubles doing the login on the client side.</p>
<p>client.py ==&gt; client DOESNT go into the <code>if data == Log in menu</code>
is there a better way to do this?</p>
<pre><code>#! /usr/bin/python3
import socket

clientsocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
clientsocket.connect(('localhost', 8000))
print("Connected")

datae = clientsocket.recv(24)
data = datae.decode("UTF-8")
clientsocket.send(datae)
while data != "!q":
    if data == "Log in MENU: \n":
        usere = input()
        user = usere.encode("UTF-8")
        clientsocket.send(user)
</code></pre>
<p>What would be the best way to create an log in interaction with the server?
the server has the usernames and passwords, i need to log in and then i need to edit the database depending on what user was chossen, but i'm having a hard time doing the algorithm</p>
</div>
<div class="post-text" itemprop="text">
<p>theres problems with the code you provided... however ill assume it actually works for you somehow and rather than copy paste you manually typed it</p>
<p>you are recieveing the first message here</p>
<pre><code>datae = clientsocket.recv(24)
data = datae.decode("UTF-8") # GOT A MESSAGE
</code></pre>
<p>You then have the message <code>datae = b'Welcome to the server. '</code></p>
<p>which does not match <code>"Log in MENU: \n"</code>, and <code>data != "!q"</code> so it goes back into your loop and checks if <code>data == "Log in MENU: \n"</code> it doesnt so it repeats ... but you never get the next message instead try something like this second message </p>
<pre><code>data = ""
while data != "!q":
    if data == "Log in MENU: \n":
        usere = input()
        user = usere.encode("UTF-8")
        clientsocket.send(user)
    data = clientsocket.recv(24).decode("UTF-8")  # GET THE NEXT MESSAGE!
</code></pre>
<p>but even then you are going to have problems because your server continues to write so you will get something like <code>"Log in MENU: \nUsername"</code> or something .... basically you need to work out a better message passing scheme than <code>recv(24)</code></p>
</div>
<span class="comment-copy">When you do <code>send('Log in MENU:\n')</code> then <code>send('Username: \n')</code> on one side, and <code>recv(24)</code> on the other side, you could end up getting anything from 1 to 24 of those bytesâ€”so it could be just <code>L</code>, or 'Log in MENU:\nUsername: \n'<code>, or anything in between. Unless you happen to be running localhost on an machine not doing anything else, the odds of you getting exactly </code>Log in MENU:\n`, no more and no less, are pretty low. See <a href="http://stupidpythonideas.blogspot.com/2013/05/sockets-are-byte-streams-not-message.html" rel="nofollow noreferrer">this blog post</a> for details.</span>
<span class="comment-copy">In this case, <a href="https://docs.python.org/3/library/socket.html#socket.socket.makefile" rel="nofollow noreferrer"><code>makefile</code></a> should be all you need to solve that problem. But you have a number of other problems as well, so just fixing one of them isn't going to make it work.</span>
