<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1038824/how-do-i-remove-a-substring-from-the-end-of-a-string-in-python">How do I remove a substring from the end of a string in Python?</a>
<span class="question-originals-answer-count">
                    16 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/678236/how-to-get-the-filename-without-the-extension-from-a-path-in-python">How to get the filename without the extension from a path in Python?</a>
<span class="question-originals-answer-count">
                    19 answers
                </span>
</li>
</ul>
</div>
<p>I am using Python 3 to process file names, and this is my code:</p>
<pre><code>name = 'movies.csv'
table_name = name.strip(".csv")
</code></pre>
<p>The expected value of table_name should be "movies" yet table_name keeps returning "movie".</p>
<p>Why is it doing this?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>strip()</code> removes all the leading and trailing characters from the input string that match one of the characters in the parameter string:</p>
<pre><code>&gt;&gt;&gt; "abcdefabcdefabc".strip("cba")
'defabcdef'
</code></pre>
<p>You want to use a regex: <code>table_name = re.sub(r"\.csv$", "", name)</code> or <code>os.path</code>s path manipulation functions:</p>
<pre><code>&gt;&gt;&gt; table_name, extension = os.path.splitext("movies.csv")
&gt;&gt;&gt; table_name
'movies'
&gt;&gt;&gt; extension
'.csv'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't know what you need is, but if it's retrieving filename without extension, you have the <code>os.path.splitext</code> <a href="http://docs.python.org/3/library/os.path.html#os.path.splitext" rel="nofollow">function</a>:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; name, extension = os.path.splitext("movies.csv")
&gt;&gt;&gt; name
'movies'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe a bit late, but for those reading this in the future, there is a lazy way that appears to work fine too (assuming all the files from which you want to retrieve the names are CSV files):</p>
<pre><code>if name.endswith('.csv'):    
    table_name = name.rstrip("csv").rstrip(".")
</code></pre>
<p>As said in other solutions, the <code>strip()</code> method removes all the leading/trailing characters that match those inside the parentheses. Therefore, the idea in this approach is to:</p>
<ol>
<li>Remove the <code>csv</code> extension - since there is a <code>.</code> we know <code>rstrip()</code> will stop searching there. This will leave us with the <code>movies.</code> string.</li>
<li>Remove the <code>.</code> from the <code>movies.</code> string - the <code>rstrip()</code> will only look for trailing dots.</li>
</ol>
<p><strong>Why <code>rstrip()</code></strong>: Since we know that the text to be removed is in the end of the string, we can specify <code>rstrip</code> for better control (i.e. to avoid unintentionally removing any eventual leading c, s or v characters)</p>
</div>
<span class="comment-copy">From <a href="http://docs.python.org/2/library/stdtypes.html#str.strip" rel="nofollow noreferrer">docs</a>: : <code>str.strip([chars])</code> <i>The chars argument is not a <b>prefix</b> or <b>suffix</b>; rather, all combinations of its values are stripped</i></span>
<span class="comment-copy">How inconvenient and unintuitive</span>
<span class="comment-copy">This will also remove other extensions, for example <code>.c</code> or <code>.css</code></span>
<span class="comment-copy">Fair enough, I assumed the files were all .csv.  If this isn't the case a simple <code>if name.endswith('.csv')</code> before should solve it.</span>
