<div class="post-text" itemprop="text">
<p>pretty new to python so this might be pretty simple.</p>
<p>I'm working with PIL and I have generated a list of pixel information using Image.getdata(). My goal is to find all dark pixels in the red channel of the image and create a list of where they occur in the overall list of pixels. Here is what I have.</p>
<pre><code>import PIL
from PIL import Image
import os

os.chdir('Correct Path')

im=Image.open('TRY.jpg')
im=im.getchannel(0)
pixels = list(im.getdata())

dark = []
dposition = []
for a in pixels:
    if a&lt;100:
        dark.append(a)

print(dark)
</code></pre>
<p>So my goal is to fill the list "dposition" with the locations of all of the dark pixels within the list "pixels", but I am totally stumped on how to do so! So far the list "dark" works in showing the value of all pixels with a red value of &lt;100. Any help is appreciated, thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>You created a 1d array so most the other answers will give you the position in that 1d array. Here's what you can if you need the <code>x</code> and the <code>y</code> position: </p>
<pre><code>import PIL
from PIL import Image
import os
import numpy as np

im=Image.open('cat.jpg')

im=im.getchannel(0)
</code></pre>
<p>Convert to a 2d numpy array.</p>
<pre><code>im = np.asarray(im)
dposition = []
for i, row in enumerate(im):
    for j, pixel in enumerate(row):
        if pixel &lt; 100:
            dposition.append((i, j))

print(dposition)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Change your for loop to this:</p>
<pre><code>for a in range(0,len(pixels)):
    if pixels[a]&lt;100:
        dark.append(pixels[a])
        dposition.append(a)
</code></pre>
<p>Essentially what this does is allow us to access both the pixel red channel data AND the index of that pixel in the list, so that every time we append something to the list of dark pixels, we append itâ€™s index to the dposition list.</p>
</div>
<div class="post-text" itemprop="text">
<p>What you need is a way to determine the index position as you iterate through the list. You can create a simple counter than increments as you go through the list:</p>
<pre><code>dark = []
dposition = []
count = 0
for a in pixels:
    if a&lt;100:
        dark.append(a)
        dposition.append(count)
    count += 1
</code></pre>
<p>Or you can use Python's built in <a href="https://docs.python.org/2/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> function to generate the position as you iterate through it:</p>
<pre><code>dark = []
dposition = []
for position, a in enumerate(pixels):
    if a&lt;100:
        dark.append(a)
        dposition.append(position)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are only interested in the positions of the dark pixels, <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> + <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> gives you a one-liner:</p>
<p><code>dposition = [position for position, red in enumerate(pixels) if red &lt; 100]</code></p>
<p>BTW, according to the doc of <a href="https://pillow.readthedocs.io/en/5.1.x/reference/Image.html#PIL.Image.Image.getdata" rel="nofollow noreferrer"><code>getdata()</code></a>, it returns all bands by default. You might want to use <code>getdata(band=0)</code> instead for red band.</p>
</div>
<span class="comment-copy">are you talking about their index position in the list?</span>
<span class="comment-copy">OP also appears to be storing the actual pixel itself in the <code>dark</code> list, so this wouldn't work. they could do the same thing with the pixels, but it would make no sense to iterate through a list twice.</span>
<span class="comment-copy">@crookedleaf you are right. But I thought OP only wanted to create the list of positions. I've edited my answer. thx</span>
