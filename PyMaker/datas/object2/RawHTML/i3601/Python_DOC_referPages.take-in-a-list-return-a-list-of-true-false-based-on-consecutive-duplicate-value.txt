<div class="post-text" itemprop="text">
<p>I have a list of values</p>
<pre><code>[3, 3, 3, 0, 0, 2, 2, 2, 2, 1, 5, 5, 5]
</code></pre>
<p>and I want to return a list of True/False values based on whether or not there are consecutive duplicates. I also want to set a threshold so that I only start getting True's if there are at least 3 consecutive values.</p>
<p>For example, the output of the list above would be...</p>
<pre><code>[True, True, True, False, False, True, True, True, True, False, True, True, True]
</code></pre>
<p>I don't really know what the most straightforward and robust way would be to do this. I did a for loop to check if the current value is equal to the next value, and set it to true, but that doesn't account for the beginning and end cases as well (for example one the first set of 3s I will get True, True, False)</p>
<p>Also I feel like there's some difficulty with the beginning and ends of the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby()</code></a> to group consecutive values, then turn those groups into repeated <code>True</code> or <code>False</code> values based on the length of each group:</p>
<pre><code>from itertools import groupby

def consecutives(it, length):
    for v, group in groupby(it):
        grouplength = sum(1 for _ in group)
        yield from (grouplength &gt;= length,) * grouplength
</code></pre>
<p><code>groupby()</code> takes a callable to determine what to group on as the second argument, but without that callable, the default is to group on equality.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; list(consecutives([3, 3, 3, 0, 0, 2, 2, 2, 2, 1, 5, 5, 5], 3))
[True, True, True, False, False, True, True, True, True, False, True, True, True]
</code></pre>
<p>If you want to return <code>False</code> for zeros, even if consecutive, use:</p>
<pre><code>def consecutives(it, length):
    for v, group in groupby(it):
        grouplength = sum(1 for _ in group)
        yield from (bool(v) and grouplength &gt;= length,) * grouplength
</code></pre>
<p><code>v</code> is the repeated value, and <code>bool(v)</code> is <code>False</code> for <code>0</code>:</p>
<pre><code>&gt;&gt;&gt; list(consecutives([3, 3, 3, 0, 0, 0, 0, 2, 2, 2, 2, 1, 5, 5, 5], 3))
[True, True, True, False, False, False, False, True, True, True, True, False, True, True, True]
</code></pre>
</div>
<span class="comment-copy">Post your code so we can help you fix those edge cases. your own code is always the best way to get started.</span>
<span class="comment-copy">Also, isn't the 5th index, where the second 0 sits, supposed to be true?</span>
<span class="comment-copy">I want to set a threshold so that it only returns Trues if there are 3 or more consecutives</span>
<span class="comment-copy">@kabanus No it looks like they only want true when there are 3 in a row, hence both 0's would be <code>False</code>.</span>
<span class="comment-copy">My bad, I missed that, thanks.</span>
<span class="comment-copy">I've run into similar problems and this is much better than what I came up with.</span>
<span class="comment-copy">Thank you! Will digest this (never seen yield from before). Hate to bother you more but while you are here, what can I add to this function to make it only give Trues for consecutive values that aren't 0?</span>
<span class="comment-copy">@lwcj: Done, just insert <code>bool(v) and</code> before the <code>grouplength &gt;= length</code> test.</span>
<span class="comment-copy">thank you! this is great</span>
