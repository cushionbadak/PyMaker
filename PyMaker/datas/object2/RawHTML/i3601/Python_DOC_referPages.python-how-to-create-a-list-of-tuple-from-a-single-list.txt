<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5764782/iterate-through-pairs-of-items-in-a-python-list">Iterate through pairs of items in a Python list [duplicate]</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>How do I create a single list of tuple such as <code>B_tuple_list = [(3,2), (2,1), (1,0), (0,5), (5,4)]</code> from a single python list such as <code>A_python_list = [3, 2, 1, 0, 5, 4]</code>. </p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <strong><code>zip</code></strong>:</p>
<pre><code>a_list = [3, 2, 1, 0, 5, 4]
tuple_list = [(x, y) for x, y in zip(a_list, a_list[1:])]

# [(3, 2), (2, 1), (1, 0), (0, 5), (5, 4)]
</code></pre>
<p>Or simply,</p>
<pre><code>tuple_list = list(zip(a_list, a_list[1:]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a></p>
<pre><code>l = [3, 2, 1, 0, 5, 4]
print(list(zip(l, l[1:])))
# [(3, 2), (2, 1), (1, 0), (0, 5), (5, 4)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>May be you can try something like below with <code>list comprehension</code>:</p>
<pre><code>a_list = [3, 2, 1, 0, 5, 4]
tuple_list = [(a_list[i], a_list[i+1]) for i in range(len(a_list)-1)]
print(tuple_list)
</code></pre>
<p>Result:</p>
<pre><code>[(3, 2), (2, 1), (1, 0), (0, 5), (5, 4)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The solution provided in the <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">itertools recipes</a> uses almost no intermediate storage:</p>
<pre><code>from itertools import tee

def pairwise(iterable):
    a, b = tee(iterable)
    next(b, None)
    return list(zip(a, b))

print(pairwise([1, 2, 3, 4])) # [(1, 2), (2, 3), (3, 4)]
</code></pre>
<p>By removing the cast to a <code>list</code>, this can be made to return a light-weigth iterator.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use list comprehensions.</p>
<pre><code>&gt;&gt;&gt; a = [3, 2, 1, 0, 5, 4]
&gt;&gt;&gt; b = [(a[x], a[x+1]) for x in range(len(a))]
&gt;&gt;&gt; print b
[(3, 2), (2, 1), (1, 0), (0, 5), (5, 4)]
</code></pre>
</div>
