<div class="post-text" itemprop="text">
<p>While working on a module I use the repl (python console) to test the functionality.</p>
<p>The problem I'm trying to solve is easily reloading the module and reimporting the module objects after a modification.</p>
<p>An example shows the problem.</p>
<p>In a console I start testing a function in package a.b.c</p>
<pre><code>&gt;&gt;&gt; from a.b.c import *
&gt;&gt;&gt; myFunction(1)
wrong answer
</code></pre>
<p>I go back to the text editor and fix myFunction
Now I want to re test it (I don't want to kill the repl and restart it, since I might have some test variables that I want to reuse)</p>
<p>So I have to do something like this:</p>
<pre><code>&gt;&gt;&gt; import a.b.c
&gt;&gt;&gt; from importlib import reload
&gt;&gt;&gt; reload(a.b.c)
&gt;&gt;&gt; from a.b.c import *
&gt;&gt;&gt; myFunction(1)
hopefully the right answer
</code></pre>
<p>I would like to write a function that would do the reload and reimport * in one go.</p>
<p>Ideally I would like to replace the previous session with something like</p>
<pre><code>&gt;&gt;&gt; myTestReload(a.b.c)
&gt;&gt;&gt; myFunction(1)
hopefully the right answer
</code></pre>
<p>In the myTestReload() function I can use <code>reload(a.b.c)</code> to reload the modified module but I didn't find a way to do the equivalent of <code>from a.b.c import *</code></p>
</div>
<div class="post-text" itemprop="text">
<p>This will reset <code>globals</code> here is an example with <code>itertools</code>.</p>
<pre><code>import itertools
from itertools import *
from importlib import reload

itools = reload(itertools)

for k, v in itools.__dict__.items():
    if k in globals():
            globals()[k] = v
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/5364050/reloading-submodules-in-ipython">Reloading submodules in IPython</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/437589/how-do-i-unload-reload-a-python-module">How do I unload (reload) a Python module?</a></span>
<span class="comment-copy">Thank you @Avezan , I do know about reloading a module, that is what I'm doing in the example. What I'm trying to achieve is to do it in just one go... call one function that does the reload and then reimports all the symbols from a module. I know how to realod the module but I didn't figure out how to programmatically re import * from the reloaded module.</span>
<span class="comment-copy">@raduw: My bad I think you can give this one a try, posting.</span>
<span class="comment-copy">thanks, that is exactly the idea I was looking for, I'm trying your suggestion but  It doesn't re import the items (I'm trying to figure out exactly why) and will post back</span>
<span class="comment-copy">See if there is no lagging *.pyc remaining. It sometimes is problem.</span>
<span class="comment-copy">Further you can try with <code>getattr</code>, <code>inspect</code> etc.</span>
<span class="comment-copy">The code as written above does the job, if however it is placed in a function within a helper module then globals() returns the module dictionary  (<a href="https://docs.python.org/3/library/functions.html?#globals" rel="nofollow noreferrer">docs.python.org/3/library/functions.html?#globals</a>) and therefore it will not add the members to the repl globals. Any way, thank you @Avezan for your insights.</span>
