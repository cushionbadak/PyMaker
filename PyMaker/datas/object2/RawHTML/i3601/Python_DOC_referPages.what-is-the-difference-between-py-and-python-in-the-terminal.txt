<div class="post-text" itemprop="text">
<p>Why is there a difference between 'py' and 'python', when I'm using to pip to install modules through the command:</p>
<pre><code>python -m pip install [Mod]
</code></pre>
<p>
or
</p>
<pre><code>py -m pip install [Mod]
</code></pre>
<p>The modules aren't available when I'm using the Python IDLE. 
Furthermore, when I'm checking the </p>
<pre><code>sys.path
</code></pre>
<p>
it's different for both 'python' and 'py'. How do I make it so they are both the same, and when installing modules, installing into the same folder where they can both access.</p>
<p>Edit:</p>
<p>I forgot to mention that this on <strong>windows</strong>. 
So Anyways, I executed 
</p>
<pre><code>python -V
</code></pre>
<p>
and it says the version is "<em>Python 3.6.4</em>:: Anaconda, Inc"</p>
<p>While:
</p>
<pre><code>py -V
</code></pre>
<p>
gives "<em>Python 3.6.5</em>". How much difference is there? and why do they have different paths if they are the same version(3.6)?</p>
</div>
<div class="post-text" itemprop="text">
<h2>On Windows</h2>
<p><code>python</code> is the Python executable of the Python installation which you have selected as a default during the installation. This basically put the path to that version inside the PATH, so that the executable is directly available.</p>
<p><code>py</code> is the <em>Python launcher</em> which is a utility that comes with Python installations on Windows. It gets installed into <code>C:\Windows\</code> so it’s available without requiring PATH modifications. The Python launcher detects what Python versions are installed on your machine and is able to automatically delegate to the right version. By default, it will use the latest Python version that is on your machine. So if you have installed 2.7, 3.5 and 3.6, running <code>py</code> will launch 3.6. You can also specify a different version by doing e.g. <code>py -3.5</code> to lauch 3.5, or <code>py -2</code> to launch the latest Python 2 version on your machine.</p>
<p>You can read more about the launcher <a href="https://docs.python.org/3/using/windows.html#launcher" rel="nofollow noreferrer">in the documentation</a>.</p>
<p>These days, I personally never put Python directly in my PATH. I only use the launcher for everything as that gives me more control over what Python will be launched. If you see that <code>py -m pip install</code> will not install modules for the Python version you run with IDLE, you should check what versions there are. Every Python installation comes with its own directory where pip modules are installed in. So if you e.g. launch IDLE for Python 3.5, you need to make sure that you also run pip with Python 3.5 (e.g. <code>py -3.5 -m pip install</code>).</p>
<h2>On Linux</h2>
<p><code>python</code> is a symlink to the default Python installation on your machine. For many Linux machines, this will only be Python 2. Even distributions that no longer come with Python 2 but only ship Python 3 will not use <code>python</code> for Python 3 since the general expectations of tools would be that <code>python</code> is a Python 2. So they may only have a <code>python3</code> symlink.</p>
<p><code>py</code> usually does not exist on Linux, unless you set an alias or symlink yourself. You can check with <code>which python</code> and <code>which py</code> to see what these commands actually are.</p>
<hr/>
<h2>Anaconda</h2>
<p>The Python version you are using is from <a href="https://en.wikipedia.org/wiki/Anaconda_(Python_distribution)" rel="nofollow noreferrer">Anaconda</a>, which is a different Python distribution targeted at data scientists that comes bundled with quite a few things. It uses a different Python version that is separate from the official CPython releases that are available from <a href="https://python.org" rel="nofollow noreferrer">python.org</a>. I assume that those versions simply won’t be available through the Python launcher by default.</p>
</div>
<span class="comment-copy">Whis you system? Which path return sys.path? Do you have command whereis, if command exists show output whereis py whereis python</span>
