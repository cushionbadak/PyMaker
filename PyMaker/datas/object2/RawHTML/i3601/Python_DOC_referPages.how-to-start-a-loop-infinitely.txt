<div class="post-text" itemprop="text">
<p><strong>My Experience</strong>
So I'm creating Discord bots to help teach me how to program Python, and programming in general. What I know about programming is mostly from an AP Computer Science Principles I took this High School Year (I'm gonna be a Junior in High School after summer). In the course we created apps with with MIT App Inventor which literally lets you make apps with blocks of Pseudocode. We learned binary, bits, bytes, parity bits, some search and sort algorithms, loops (index and stuff), variables, procedures (pretty much functions), and that's pretty much it. I used to learn C# game dev off of a course by copying them mostly but gave a little after when I decided I wanna pursue a career in Software Engineering</p>
<p><strong>What I'm looking for</strong>
I was trying to make a for loop or somekind of loop just to experiment and maybe use it later. Mostly to find out the syntax of it and what I would write everytime I would include it.</p>
<pre><code># LearnBot by George D

# Libraries and stuff to import

import discord
from discord.ext import commands
from discord.ext.commands import Bot
import asyncio
import chalk
import time

# Variables and initiate related code

bot = commands.Bot(command_prefix='$')

i = 1 # This variable is super simple yet very important
varTest = 8
charTest = 'Code'
nullTest = None
timeTestDelay = .5

while i&gt;0:
    await bot.say("This is a for loop test, so It's gonna be annoying!")
    time.sleep(1.5)
    i=i+1
    print (i)
</code></pre>
<p>Any help is appreciated :)</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want just an infinite loop here is quick sample:</p>
<pre><code>import time

while True:
    print('!')
    time.sleep(1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The github of <code>discord.py</code> has an example of a background task, found <a href="https://github.com/Rapptz/discord.py/blob/async/examples/background_task.py" rel="nofollow noreferrer">here</a>. You should be able to use this as reference.</p>
<pre><code>import discord
import asyncio

client = discord.Client()

async def my_background_task():
    await client.wait_until_ready()
    counter = 0
    channel = discord.Object(id='channel_id_here')
    while not client.is_closed:
        counter += 1
        await client.send_message(channel, counter)
        await asyncio.sleep(60) # task runs every 60 seconds

@client.event
async def on_ready():
    print('Logged in as')
    print(client.user.name)
    print(client.user.id)
    print('------')

client.loop.create_task(my_background_task())
client.run('token')
</code></pre>
</div>
<span class="comment-copy">it's not clear what you asking for - what do you want to achieve with this code, that is not working yet?</span>
<span class="comment-copy">Are you trying to create unused loops? Whatever you are trying above is to create an infinite loop.</span>
<span class="comment-copy">discord.py isn't a great framework for this.  It relies on an event-driven model, where you write code that will be called in response to certain events, in this case updates from discord.  You should read through the <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">Python tutorial</a> (loops are covered in chapter 4).</span>
<span class="comment-copy">Thanks for a simple quick answer! Also, what is while true, shouldn't it be while something is true?</span>
<span class="comment-copy">Actually, when I try that the await bot.say line of code has a syntax error</span>
<span class="comment-copy">You cannot await outside a function. You need to put your loop inside a function and call it from your on_ready or on_message (or other event) block</span>
