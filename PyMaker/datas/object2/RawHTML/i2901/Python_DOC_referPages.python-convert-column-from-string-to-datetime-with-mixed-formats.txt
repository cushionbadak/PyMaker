<div class="post-text" itemprop="text">
<p>I've converted from string to datetimes in columns numerous times. However in each of those instances, the string format was consistent. Now I have a dataframe with mixed formats to change. Example below, but this is throughout 100,000s of rows.</p>
<pre><code>index    date    
0        30 Jan 2018
1        January 30 2018
</code></pre>
<p>I could convert each type on an individual basis, but is there a way to convert that df['date'] to datetime with mixed formats easily?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a way to do it using <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">datetime.strptime</a> </p>
<pre><code>from datetime import datetime

def IsNumber(s):
    try: 
        int(s)
        return True
    except ValueError:
        return False

def ConvertToDatetime(date):
    date=date.split(" ") #split by space
    if(IsNumber(date[0])): #is of the form dd month year
        if(len(date[1])==3): #if month is for form Jan,Feb...
            datetime_object = datetime.strptime(" ".join(date), '%d %b %Y')
        else: #if month is for form January ,February ...
            datetime_object = datetime.strptime(" ".join(date), '%d %B %Y')
    else:  #is of the form month date year
        if(len(date[0])==3): #if month is for form Jan,Feb...
            datetime_object = datetime.strptime(" ".join(date), '%b %d %Y')
        else: #if month is for form January ,February ...
            datetime_object = datetime.strptime(" ".join(date), '%B %d %Y')
    return datetime_object
</code></pre>
<p>You can add more cases based on the documentation and the format
An example for the two in your question are :</p>
<pre><code>ConvertToDatetime("30 Jan 2018")
2018-01-30 00:00:00
ConvertToDatetime("January 30 2018")
2018-01-30 00:00:00
</code></pre>
</div>
<span class="comment-copy">Thanks Sruthi. Any idea if thereâ€™s a one-liner way that does this exact thing, without explicitly having to add new cases? I was hoping to avoid that, in case in the future a new case does come up, it could handle converting without getting back an error, and then adding the new case each time it may be encountered.  But your answer above does get the job done.</span>
