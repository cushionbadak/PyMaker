<div class="post-text" itemprop="text">
<p>I am getting the CSV file updated on daily basis. Need to process and create new file based on the criteria - If New data then should be tagged as New against the row and if its an update to the existing data then should be tagged as Update. How to write a Python code to process and output in CSV file as follows based on the date.</p>
<h2>Day1 input data</h2>
<pre><code>empid,enmname,sal,datekey
1,cholan,100,8/14/2018
2,ram,200,8/14/2018
</code></pre>
<h2>Day2 input Data</h2>
<pre><code>empid,enmname,sal,datekey
1,cholan,100,8/14/2018
2,ram,200,8/14/2018
3,sundar,300,8/15/2018
2,raman,200,8/15/2018
</code></pre>
<h2>Output Data</h2>
<pre><code>status,empid,enmname,sal,datekey
new,3,sundar,300,8/15/2018
update,2,raman,200,8/15/2018
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm feeling nice, so I'll give you some code. Try to learn from it.</p>
<hr/>
<p>To work with CSV files, we'll need the <code>csv</code> module:</p>
<pre><code>import csv
</code></pre>
<p>First off, let's teach the computer how to open and parse a CSV file:</p>
<pre><code>def parse(path):
    with open(path) as f:
        return list(csv.DictReader(f))
</code></pre>
<p><code>csv.DictReader</code> reads the first line of the <code>csv</code> file and uses it as the "names" of the columns. It then creates a dictionary for each subsequent row, where the keys are the column names.</p>
<p>That's all well and good, but we just want the last version with each key:</p>
<pre><code>def parse(path):
    data = {}
    with open(path) as f:
        for row in csv.DictReader(f):
            data[row["empid"]] = row
    return data
</code></pre>
<p>Instead of just creating a list containing everything, this creates a dictionary where the keys are the row's id. This way, rows found later in the file will overwrite rows found earlier in the file.</p>
<p>Now that we've taught the computer how to extract the data from the files, let's get it:</p>
<pre><code>old_data = parse("file1.csv")
new_data = parse("file2.csv")
</code></pre>
<p>Iterating through a dictionary gives you its keys, which are the ids defined in the data set. For consistency, <code>key in dictionary</code> says whether <code>key</code> is one of the keys in the dictionary. So we can do this:</p>
<pre><code>new = {
    id_: row
    for id_, row in new_data.items()
    if id_ not in old_data
}
updated = {
    id_: row
    for id_, row in new_data.items()
    if id_ in old_data and old_data[id_] != row
}
</code></pre>
<p>I'll put <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer"><code>csv.DictWriter</code></a> here and let you sort out the rest on your own.</p>
</div>
<span class="comment-copy">What code have you tried so far?</span>
<span class="comment-copy">Using datetime, you can know the current date time and you know the date from your CSV file. Keep a check on date and you are good to go.</span>
<span class="comment-copy">import pandas dataInput = pandas.read_csv('source.csv') RecentData = dataInput[dataInput['datekey']==dataInput.datekey.max()] i tried to get extract the recent update using the above code using pandas.</span>
