<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4945155/how-to-clone-a-python-generator-object">How to clone a Python generator object?</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I am creating an iterator using the <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer"><code>iter</code></a> function and iterating several steps using the iterator.</p>
<p>I then want to continue iterating from the same place with a different iterator without affecting the original iterator object.</p>
<p>example:</p>
<p>consider the iterator object <code>org_iter</code>:</p>
<pre><code>&gt;&gt;&gt; a = [1,2,3,4,5]
&gt;&gt;&gt; org_iter = iter(a)
</code></pre>
<p>iterating over it:</p>
<pre><code>&gt;&gt;&gt; next(org_iter)
1
</code></pre>
<p>using <code>iter</code> again gives the same instance of the iterator instead of a different one from the same location:</p>
<pre><code>&gt;&gt;&gt; new_iter = iter(org_iter)
&gt;&gt;&gt; next(new_iter)  # continuing 
2
&gt;&gt;&gt; next(org_iter)  # "org_iter is new_iter"
3
</code></pre>
<p>EDIT because of comment: using <a href="https://docs.python.org/3/library/itertools.html#itertools.tee" rel="nofollow noreferrer"><code>itertools.tee</code></a> doesn't work either:</p>
<pre><code>&gt;&gt;&gt; new_iter = itertools.tee(org_iter)
&gt;&gt;&gt; next(new_iter[0])
2
&gt;&gt;&gt; next(org_iter)
3
</code></pre>
<hr/>
<p>the same functionality could be achieved by using different variables to hold the index numbers and <code>+=1</code>ing them. </p>
<p>or with the <code>enumerate</code> function and nested <code>for</code> loops.</p>
<p>but i am specifically asking about using an iterator object directly.</p>
</div>
<div class="post-text" itemprop="text">
<p>One way I can think of without using any external modules would be by doing:</p>
<pre><code>&gt;&gt;&gt; a = [1, 2, 3, 4, 5]
&gt;&gt;&gt; org_iter = iter(a)
&gt;&gt;&gt; id(org_iter)
58713584
&gt;&gt;&gt; new_iter = iter(list(org_iter))
&gt;&gt;&gt; id(new_iter)
58299600
</code></pre>
</div>
<span class="comment-copy">You are using <a href="https://docs.python.org/3/library/itertools.html#itertools.tee" rel="nofollow noreferrer">tee</a> incorrectly. You would do <code>it1, it2=itertools.tee(iter(a))</code> and it then works as you expect. You cannot use the original iterator once you have used <code>tee</code>.</span>
<span class="comment-copy">this doesn't allow me to continue from the same place as the original iterator, i will have to create both of them at the beginning and iterate over both of them and this is not my question. i am creating iterators dynamically i can't know how many i will need.</span>
<span class="comment-copy">Again: It works as expected so long as you do not use the original. Try: <code>oi=iter(a)</code> couple of nexts then do <code>i1,i2=itertools.tee(iter(oi))</code> and don't use <code>oi</code> at that point. <code>i1</code> and <code>i2</code> are now where <code>oi</code> was and can be used independently from there.</span>
<span class="comment-copy">If it is not clear, you can also reuse the original name: <code>oi,new_i=itertools.tee(iter(oi))</code> so it is functionally the same as keeping the original.</span>
<span class="comment-copy">this destroys the <code>org_iter</code>, doing  <code>next(org_iter)</code> gives me <code>StopIteration</code> exception.</span>
