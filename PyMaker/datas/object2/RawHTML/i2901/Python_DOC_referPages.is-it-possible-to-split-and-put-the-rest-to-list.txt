<div class="post-text" itemprop="text">
<p>I'm trying to process a line like this</p>
<pre><code>item1 item2 item3 item4_1 item4_2 item4_3 ...
</code></pre>
<p>And the code is like this</p>
<pre><code>data = '''item1 item2 item3 item4_1 item4_2 item4_3'''
for row in data.split("\n"):
    (item1, item2, item3, item4_list) = row.split(' ')
</code></pre>
<p>It looks like python can't unpack the rest of the items to a list, any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you use two steps, and <code>maxsplit</code> for <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split()</code></a> this can be python 2 or 3 like:</p>
<pre><code>data = '''item1 item2 item3 item4_1 item4_2 item4_3'''
for row in data.split("\n"):
    item1, item2, item3, item4_list = row.split(' ', 3)
    item4_list = item4_list.split(' ')
    print(item1, item2, item3, item4_list)
</code></pre>
<h3>Results:</h3>
<pre><code>item1 item2 item3 ['item4_1', 'item4_2', 'item4_3']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As suggested by student, you want to use extended unpacking syntax—that is, you can put <code>*rest</code> directly in the target list (the same way you use <code>*args</code> in a function definition), and it will soak up the rest of the values:</p>
<pre><code>item1, item2, item3, *item4_list = row.split(' ')
</code></pre>
<p>If you need something that works in Python 2, there isn’t anything as nice. (They wouldn’t have added extended unpacking if there were already a way to do it that’s just as nice…) The simplest solution here is probably to do it in two steps, using the max-splits argument to <code>split</code>:</p>
<pre><code>item1, item2, item3, rest = row.split(' ', 3)
item4_list = rest.split(' ')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For <code>Python3</code>, may be you can try (<em>As Brad Solomon mentioned <a href="https://www.python.org/dev/peps/pep-3132/" rel="nofollow noreferrer">link for Extended Iterable Unpacking</a> in comments above</em>):</p>
<pre><code>(item1, item2, item3, *item4_list) = row.split(' ')
</code></pre>
</div>
<span class="comment-copy">How about <code>(item1, item2, item3, *item4_list) = row.split(' ')</code></span>
<span class="comment-copy">@student invalid syntax for both python2 and python3?</span>
<span class="comment-copy">Not sure but for above code it worked fine.</span>
<span class="comment-copy">Python 3 only I think, introduced in <a href="https://www.python.org/dev/peps/pep-3132/" rel="nofollow noreferrer">extended iterable unpacking</a></span>
