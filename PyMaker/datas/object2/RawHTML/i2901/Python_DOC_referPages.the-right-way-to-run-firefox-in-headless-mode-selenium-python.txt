<div class="post-text" itemprop="text">
<p>I was wondering how to run hidden Firefox window when testing a page in Selenium and came across <a href="https://stackoverflow.com/a/50828726/7550772">this solution</a>. It says that I can run Firefox in headless mode like this:</p>
<pre><code>from selenium import webdriver
import os
os.environ['MOZ_HEADLESS'] = '1'
driver = webdriver.Firefox()
driver.get("https://www.google.com/")
driver.close()
</code></pre>
<p>But it earned no votes whatsoever. It seems like people think it is a wrong answer. <strong><em>Why?</em></strong></p>
<p>Also, in official documentation I found that it can be done like this:</p>
<pre><code>from selenium import webdriver
from selenium.webdriver.firefox.options import Options
options = Options()
options.add_argument('-headless')
driver = webdriver.Firefox(firefox_options=options)
driver.get("https://www.google.com/")
driver.close()
</code></pre>
<p>Can someone explain the difference between the two ways?</p>
</div>
<div class="post-text" itemprop="text">
<p>The first solutions sets an environment variable on your computer, i.e. changing your platform. According to the <a href="https://docs.python.org/2/library/os.html#os.environ" rel="nofollow noreferrer">docs</a></p>
<blockquote>
<p>If the platform supports the putenv() function, this mapping may be
  used to modify the environment</p>
</blockquote>
<p>It will work only if your platform supports <a href="https://docs.python.org/3/library/os.html#os.putenv" rel="nofollow noreferrer">putenv()</a></p>
<blockquote>
<p>Availability: most flavors of Unix, Windows.</p>
</blockquote>
<p>The second solution sets the <code>webdriver</code> instance with some options, without changing your platform.</p>
</div>
<span class="comment-copy">I'd say following the official documentation is a good bet on the 'right way' to do something.</span>
