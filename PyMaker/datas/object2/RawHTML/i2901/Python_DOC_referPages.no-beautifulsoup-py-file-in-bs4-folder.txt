<div class="post-text" itemprop="text">
<p>I want to see the contents inside the beautifulsoup.py just like in <a href="https://i.imgur.com/8iaHTMGg.png" rel="nofollow noreferrer">parse.py</a></p>
<p>I installed <a href="https://i.imgur.com/mcRQCEOg.png" rel="nofollow noreferrer">bs4</a>, but no <code>beautifulsoup.py</code> <a href="https://i.imgur.com/UexfgXk.png" rel="nofollow noreferrer">file</a>? I'm expecting to see a "beautifulsoup.py" in "bs4" folder, since importing it is: <code>from bs4 import BeautifulSoup</code>.</p>
<p>Importing <code>parse</code> is: <code>from urllib import parse</code> which I see a parse.py <a href="https://i.imgur.com/35DnOr6.png" rel="nofollow noreferrer">here</a>. how about beautiful soup?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>bs4.BeautifulSoup</code> is not a submodule, it's a class. You can find its definition in <a href="https://bazaar.launchpad.net/~leonardr/beautifulsoup/bs4/view/head:/bs4/__init__.py#L56" rel="nofollow noreferrer"><code>bs4/__init__.py</code></a>.</p>
<hr/>
<p>You can see that it's a class like this:</p>
<pre><code>&gt;&gt;&gt; from bs4 import BeautifulSoup
&gt;&gt;&gt; type(BeautifulSoup)
type
</code></pre>
<p>â€¦ and you can see what file it came from using functions from the <a href="https://docs.python.org/3/library/inspect.html#retrieving-source-code" rel="nofollow noreferrer"><code>inspect</code></a> module, like:</p>
<pre><code>&gt;&gt;&gt; import inspect
&gt;&gt;&gt; inspect.getfile(BeautifulSoup)
'/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/bs4/__init__.py'
</code></pre>
<hr/>
<p>The syntax <code>from X import Y</code> can do two different things:</p>
<ul>
<li>If <code>Y</code> is a class, function, or other name in <code>X</code>, it imports that value from module <code>X</code> into your globals as <code>Y</code>.</li>
<li>If <code>Y</code> is a submodule under package <code>X</code>, it imports that submodule into your globals as module <code>Y</code>.</li>
</ul>
<p>For full details, see <a href="https://docs.python.org/3/reference/simple_stmts.html#the-import-statement" rel="nofollow noreferrer">The import system</a> in the docs:</p>
<blockquote>
<p>The <code>from</code> form uses a slightly more complex process:</p>
<ol>
<li>find the module specified in the from clause, loading and initializing it if necessary;</li>
<li>for each of the identifiers specified in the import clauses:
  
  <ol>
<li>check if the imported module has an attribute by that name</li>
<li>if not, attempt to import a submodule with that name and then check the imported module again for that attribute</li>
<li>if the attribute is not found, ImportError is raised.</li>
<li>otherwise, a reference to that value is stored in the local namespace, using the name in the as clause if it is present, otherwise using the attribute name</li>
</ol></li>
</ol>
</blockquote>
</div>
<span class="comment-copy">your question is not clear. What you are asking? can  you explain bit more what are you trying to say? Also please refer <a href="https://stackoverflow.com/help/how-to-ask">stackoverflow.com/help/how-to-ask</a></span>
<span class="comment-copy">Why do you care how hhe code is organized internally? As long as it does what you want, who cares if it's an alias in <code>__init__.py</code> or a file with a particular name?</span>
<span class="comment-copy">@tripleee I'm just curious</span>
