<div class="post-text" itemprop="text">
<p>Is there a way to switch a defaultdict from permissive into strict mode and back again?</p>
<p>Update after first comment: without "trivially" converting to a standard dict, as this may lead to memory problems for dicts with hundreds of millions of entries.</p>
<pre><code>from collections import defaultdict

# population time, be permissive
d = defaultdict(lambda: [])
for i in range(1,10):
    d[i].append(i + 1)

# d.magic()     # magic switch, tell d to be strict
print(d[1])     # OK, exists
print(d[111])   # I'd like to have an error here, please
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use a regular dictionary instead. Simpler and works, since you only need the "default" functionality within a strictly limited context. In that limited context, use <code>dict.setdefault</code>:</p>
<pre><code>d = {}
for i in range(1, 10):
    d.setdefault(i, []).append(i+1)
</code></pre>
</div>
<span class="comment-copy">You can trivially do <code>d = dict(d)</code>. Also note that <code>lambda: []</code> is provided more readably by <code>list</code>.</span>
<span class="comment-copy">Totally valid, I just forgot to mention I need that for humongous dicts where interconversion could result in memory problems.</span>
<span class="comment-copy">Then write your own <code>defaultdict</code> equivalent; you can see the existing API <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">in the docs</a>, and there's no <code>.magic</code>.</span>
