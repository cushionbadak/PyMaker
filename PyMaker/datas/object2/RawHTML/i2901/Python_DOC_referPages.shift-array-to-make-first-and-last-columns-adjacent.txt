<div class="post-text" itemprop="text">
<p>I'm struggling how to explain this in the question title so I'll try better here. </p>
<p>I have an array which contains 360 columns and 180 rows which represents each degree of latitude and longitude on earth. For clarity, my data looks like the following: </p>
<pre><code>longitudes = [0, 1, 2 ... 358, 359]
latitudes = [90, -89 ... -89, -90]
data = np.random.randint(5, (180, 360))
</code></pre>
<p>It looks like <a href="http://www.nco.ncep.noaa.gov/pmb/docs/on388/grids/grid003.gif" rel="nofollow noreferrer">this</a>, where longitude '0' is equal to 0E and '359' is equal to -1E.</p>
<p>As you can see, Africa is split at the start and end of the array and I would like to shift the array so that the first columns corresponds to -180E and the last columns corresponds to 180E, like the traditional world view (<a href="http://www.satsig.net/lat_long.htm" rel="nofollow noreferrer">map</a>) - this will make subsetting the array to 'cookie cut' Africa out. </p>
<p>How do I shift/transform my array so that the first and last column are adjacent? </p>
<p>(Extra: since you can think of my array as a cylinder, as geographically, the first and last rows are adjacent, but how do I change where the 'cylinder is cut' - the analogy I've been thinking of)</p>
</div>
<div class="post-text" itemprop="text">
<p>Solution was to use <code>numpy.roll()</code>.</p>
<p>I firstly found the index of the column corresponding to 180E using:</p>
<pre><code>idx = (longitude.index(180))
</code></pre>
<p>Then, I 'rolled' the data based on this index to move 180E to the furthest left column using:</p>
<pre><code>rolled_data = np.roll(data, idx, axis=1)
</code></pre>
<p>This successfully centred the 0E column to create my desired output. </p>
</div>
<div class="post-text" itemprop="text">
<p>please see this answer: <a href="https://stackoverflow.com/questions/2150108/efficient-way-to-shift-a-list-in-python">Efficient way to shift a list in python</a></p>
<p>Seems to do the same as you want.</p>
<p>From the accepted answer:</p>
<p><a href="https://docs.python.org/3/library/collections.html#deque-objects" rel="nofollow noreferrer">Collections.deque</a></p>
<pre><code>from collections import deque
items = deque([1, 2])
items.append(3) # deque == [1, 2, 3]
items.rotate(1) # The deque is now: [3, 1, 2]
items.rotate(-1) # Returns deque to original state: [1, 2, 3]
item = items.popleft() # deque == [2, 3]
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/2150108/efficient-way-to-shift-a-list-in-python">Efficient way to shift a list in python</a></span>
<span class="comment-copy">I've looked at the possible dupe and don't see this as a solution. I understand that it would work for my two lists, but not for my array.</span>
