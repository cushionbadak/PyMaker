<div class="post-text" itemprop="text">
<p>I need to get size of the window in Python and assign it to the variable. I'm trying with this:</p>
<pre><code>windowSize = '''
    tell application "System Events" to tell application process "%(app)s"
    get size of window 1
    end tell
    ''' % {'app': app} // app = "Terminal


(wSize, error) = Popen(['osascript', '/Setup.scpt'], stdout=PIPE).communicate()
print("Window size is: " + wSize)
</code></pre>
<p>I get this error only: <code>TypeError: can only concatenate str (not "bytes") to str</code></p>
<p>I'm completely new to Python so I hope you can help me with it</p>
</div>
<div class="post-text" itemprop="text">
<p>You'll need to pass your AppleScript (i.e. <code>windowSize</code>) as input to <a href="https://docs.python.org/3/library/subprocess.html?highlight=communicate#subprocess.Popen.communicate" rel="nofollow noreferrer"><code>Popen.communicate()</code></a>:</p>
<p><strong>Example:</strong></p>
<pre class="lang-py prettyprint-override"><code>from subprocess import Popen, PIPE

app = "Terminal"

windowSize = '''
    tell application "%(app)s"
      get size of window 1
    end tell
  ''' % {'app': app}

proc = Popen(['osascript', '-'], stdin=PIPE, stdout=PIPE, stderr=PIPE, universal_newlines=True)
wSize, error = proc.communicate(windowSize)
print("Window size is: " + wSize)
</code></pre>
<hr/>
<p><strong>Notes</strong>:</p>
<ul>
<li><p>In your <code>windowSize</code> AppleScript it shouldn't be necessary to <code>tell application "System Events" to tell ...</code> - you can just <code>tell application "%(app)s"</code> instead. However, you're AppleScript still works assuming <em>Access for assistive devices is enabled</em> in System Preferences.</p></li>
<li><p>This will log something like the following to the console:</p>
<blockquote>
<p><code>Window size is: 487, 338</code></p>
</blockquote>
<p>You may want to consider utilizing <a href="https://docs.python.org/3/library/stdtypes.html?highlight=replace#str.replace" rel="nofollow noreferrer"><code>str.replace()</code></a> in your <code>print</code> statement to replace the comma (<code>,</code>) with an <code>x</code>. For instance, changing <code>print</code> statement in the gist above to this:</p>
<pre class="lang-py prettyprint-override"><code>print("Window size is: " + wSize.replace(",", " x"))
</code></pre>
<p>will print something like this instead:</p>
<blockquote>
<p><code>Window size is: 487 x 338</code></p>
</blockquote></li>
<li><p>If you wanted to replace the two lines of code in the gist above which begin with <code>proc</code> and <code>wSize</code>) with one line (similar to your OP) then replace them with the following instead:</p>
<pre class="lang-py prettyprint-override"><code>(wSize, error) = Popen(['osascript', '-'], stdin=PIPE, stdout=PIPE, stderr=PIPE, universal_newlines=True).communicate(windowSize)
</code></pre></li>
<li><p>To get the windows <em>width</em> and <em>height</em> as two separate variables you could subsequently utilize the <a href="https://docs.python.org/3/library/stdtypes.html?highlight=split#str.split" rel="nofollow noreferrer"><code>str.split()</code></a> method to split the <code>wSize</code> variable (using the string <code>", "</code> as the delimiter). For instance:</p>
<pre class="lang-py prettyprint-override"><code># ...
wWidth = wSize.split(", ")[0]
wHeight = wSize.split(", ")[1]

print("Window width is: " + wWidth)
print("Window height is: " + wHeight)
</code></pre></li>
</ul>
</div>
