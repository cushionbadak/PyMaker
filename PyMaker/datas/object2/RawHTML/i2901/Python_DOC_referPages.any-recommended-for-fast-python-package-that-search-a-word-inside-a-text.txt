<div class="post-text" itemprop="text">
<p>I'm looking for a Python package that will get a list of words, and than search for a word inside a text based on the list of words given to it.</p>
<p>I tried using FlashText (<a href="http://flashtext.readthedocs.io/en/latest/" rel="nofollow noreferrer">http://flashtext.readthedocs.io/en/latest/</a>)</p>
<p>So I built a class that added keywords from file <code>code: keyword_processor.add_keyword(word)</code> </p>
<p>And than search for keywords in a text with the <code>code: keyword_processor.extract_keywords(text)</code></p>
<p>But I'm also getting partial words, for example I have a "keyword" (in Hebrew): גיל</p>
<p>And a sentence: האישה בגילה הלכה לפארק</p>
<p>The word "בגילה" comes up as a found keyword because it contains גיל inside of it, So it is not good for me...</p>
<p>Anyone here have an experience with a different Python package that is doing what I described in here and will not return me "partial keywords"?
And maybe as fast as flashtext, that from the tests I took is very fast.</p>
</div>
<div class="post-text" itemprop="text">
<p>Why not use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re</code></a>?</p>
<pre><code>import re

s = 'asef se fese fes fse se'
words = ['se', 'fes', 'foo']
words_re = '(?:^|\s+)({})(?:$|\s+)'.format('|'.join(words))
re.findall(words_re, s)
</code></pre>
<p>will return <code>['se', 'fes', 'se']</code> <em>i.e.</em> the words from <code>words</code> found in <code>s</code>, in the order in which they are found and including duplicates.</p>
<p>Regex meaning:</p>
<ul>
<li>A word either starts the string or is preceded by a whitespace: <code>(?:^|\s+)</code></li>
<li>A word either ends the string or is followed by a whitespace: <code>(?:$|\s+)</code></li>
<li>We don't care about what preceeds or follows the word: <code>(?:...)</code></li>
<li><code>|</code> is "OR": we want one of the words: <code>'|'.join(words)</code></li>
<li>We want to capture the word found: <code>({})</code></li>
</ul>
<p>Feel free to add more accepted characters before or after the words (I'm thinking of <code>,</code>, <code>.</code>, ...).</p>
<hr/>
<p>Alternatively, if you are looking for words in the text, what your finder is going to return you is words that you already have. If the reason you are doing that is to check if the word is in the text, you may use <code>in</code>:</p>
<pre><code>text = '...' # your input text
words = ['foo', 'bar']

words_in_text = [word for word in words if word in text]
</code></pre>
</div>
