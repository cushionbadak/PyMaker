<div class="post-text" itemprop="text">
<p>I am wondering what is difference in usage of read and read_file in configparser. As far as I have tested </p>
<pre><code>config_parser = configparser.ConfigParser()
config_parser.read(config_file)
</code></pre>
<p>and </p>
<pre><code>config_parser = configparser.ConfigParser()
config_parser.read_file(config_file)
</code></pre>
<p>both works for me. 
config_file is name of my config_file I am passing as input parameter.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>read_file</code> accepts a file-like object, <code>read</code> accepts a file <em>name</em>.</p>
<p>The main issue with <code>read</code> is that if the file doesn't exist, it fails silently, leaving the <code>ConfigParser</code> empty.</p>
<pre><code>config_parser.read("config.ini")  # object is unchanged even if file doesn't exist
</code></pre>
<p>That cannot happen with <code>read_file</code> since you control the way the file is opened.</p>
<pre><code>with open("config.ini") as f:
   config_parser = configparser.RawConfigParser()
   config_parser.read_file(f)
</code></pre>
<p>The other useful case is when you have a list of lines representing a <code>.ini</code> file contents.</p>
<p><code>read_file</code> kind of "acccepts" a string as input (since strings are iterable) but the result isn't useful:</p>
<pre><code>&gt;&gt;&gt; config_parser.read_file("config.ini")
Traceback (most recent call last):
  File "&lt;string&gt;", line 301, in runcode
  File "&lt;interactive input&gt;", line 1, in &lt;module&gt;
  File "L:\Python34\lib\configparser.py", line 690, in read_file
    self._read(f, source)
  File "L:\Python34\lib\configparser.py", line 1057, in _read
    raise MissingSectionHeaderError(fpname, lineno, line)
configparser.MissingSectionHeaderError: File contains no section headers.
file: '&lt;???&gt;', line: 1
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a> "read: Attempt to read and parse a list of filenames, returning a list of filenames which were successfully parsed.", "read_file: Read and parse configuration data from f which must be an iterable yielding Unicode strings (for example files opened in text mode)."</span>
<span class="comment-copy"><code>config_parser.read_file(config_file)</code> cannot work if <code>config_file</code> is a string. Well it cannot work properly</span>
