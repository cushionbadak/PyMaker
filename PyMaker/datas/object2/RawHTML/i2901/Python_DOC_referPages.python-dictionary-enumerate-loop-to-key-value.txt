<div class="post-text" itemprop="text">
<p>I'm new to programming and still trying to identify the logic here.</p>
<p>I am working with the python-gnupg module. There is a function "list_keys() which returns, I think, a list of dictionaries.</p>
<pre><code>&gt;&gt;&gt; gpg.list_keys()
[{'type': 'pub', 'trust': '-', 'length': '4096', 'algo': '1', 'keyid': '1234', 'date': '1234', 'expires': '', 'dummy': '', 'ownertrust': '-', 'sig': '', 'uids': ['john doe &lt;john@doe.com&gt;'], 'sigs': [], 'subkeys': [['1234', 'e', '1234']], 'fingerprint': 'abc1234'}]
</code></pre>
<p>I loop through and enumerate the list:</p>
<pre><code>for c, key in enumerate(all_keys):
    print('{}. {}'.format(c, key['uids']))

# Loop returns
0. ['jane doe jane@doe.com']
1. ['jane doe jane@doe.com']
</code></pre>
<p>Now I want to accept numerical input and have translate to it's associated key/uid:</p>
<pre><code>choice = int(input("Choose key: "))
# How do I translate from enumerated number list to its key?

# What does this do?
if choice in gpg.list_keys():
    choice = all_keys[choice][key]
</code></pre>
<p>Do I need to have the loop generate a list for each enumerated result? I am uncertain which are the right questions to ask nor do I fully grasp the logic here.</p>
<p>The goal is input a number, translate that number to the user-id, and check if that user-id exists in the dictionary.</p>
<p>Guidance is greatly appreciated. What questions should I be asking?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you've tagged Python 3.6, I would not recommend relying on the dictionary order being the same between calls. You can map your numbering to the GPG keys as another dictionary, and since <code>dict</code> has a <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer">constructor from an iterable of pairs</a>, this is 
very easy:</p>
<pre><code>enumerated_keys = dict(enumerate(all_keys))  # {0: {'type': 'pub', ...}, 1: {'type': 'pub', ...}}
print('\n'.join('{}. {}'.format(c, k['uids']) for c, k in enumerated_keys.items()))  # matches your output format
choice = int(input("Choose key: "))
try:
    print(enumerated_keys[choice])
except KeyError:
    print("Invalid option!")
</code></pre>
<p>I think the main idea here is to first create the mapping "user choice -&gt; GPG key", and only then present it to the user. In your code, you do not save the results from <code>enumerate</code> anywhere, which obviously makes it difficult to use it later on.</p>
</div>
<div class="post-text" itemprop="text">
<p>I modified the code so it makes sense to me (if I have correctly understood the question):</p>
<pre><code>all_keys = gpg.list_keys()

for c, key in enumerate(all_keys):
    print('{}. {}'.format(c, key['uids']))

choice = int(input("Choose key: "))

# What does this do?
if choice in all_keys:
    choice = all_keys[choice]['keyid']
</code></pre>
<p><code>choise</code> is any possible integer the user gives. The first thing to do is to verify that <code>choice</code> could well be an index for the list <code>all_keys</code> </p>
<p>The second line, inside the if, takes the corresponding dictionary <code>all_keys[choice]={'type': 'pub', 'trust': '-', 'length' ...}</code> and in this dictionary takes the value for the key <code>keyid</code>. Then <code>choice</code> will be for example the id <code>1234</code></p>
</div>
<span class="comment-copy">I'm not sure i get your question,  You want to get the value that is associated with the provided key (choice) from the list ?</span>
<span class="comment-copy">Why are you converting the user input to <code>int</code> if the values are stored as strings in <code>gpg.list_keys()</code>?</span>
<span class="comment-copy">Thank you so much, this works famously. So this net new dictionary 'enumerated_keys' exclusively has keys which are the enumerated numbers, and the values are the dictionaries associated, correct? There are no other keys in this new dictionary except the numbering assigned from 'for c'. This is amazing to see, this helps me a great deal to understand programming. Thank you so much Norrius!</span>
<span class="comment-copy">@Evan Just to be clear, all the second line (with <code>for c, k in ...</code>) does is output, it doesn't affect anything else.</span>
