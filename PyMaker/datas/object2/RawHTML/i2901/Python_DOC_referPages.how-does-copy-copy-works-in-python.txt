<div class="post-text" itemprop="text">
<p>I have tried this below scenario in shell.</p>
<pre><code>import copy
a = [1, 2, [3, 4], 5]
cp = copy.copy(a)
a.append(6)
print a # [1, 2, [3, 4], 5, 6]
print cp # [1, 2, [3, 4], 5]
</code></pre>
<p>why is a and cp not the same when copy supposedly creates a reference?
while this another scenario works as expected.</p>
<pre><code>a[2].append(11)
print a # [1, 2, [3, 4, 11], 5, 6]
print cp # [1, 2, [3, 4, 11], 5]
</code></pre>
<p>what is the logic behind the difference?</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3.7/library/copy.html" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>A shallow copy constructs a new compound object and then (to the
  extent possible) inserts references into it to the objects found in
  the original.</p>
</blockquote>
<p>So after copying <code>cp</code> points to a <em>new</em> list object, but <code>cp[2]</code> is still a <em>reference</em> to the list <code>a[2]</code>. You can verify this using the <a href="https://docs.python.org/3/library/functions.html#id" rel="nofollow noreferrer"><code>id()</code></a> function:</p>
<pre><code>&gt;&gt;&gt; import copy
&gt;&gt;&gt; a = [1, 2, [3, 4], 5]
&gt;&gt;&gt; cp = copy.copy(a)
&gt;&gt;&gt; id(a) == id(cp)
False
&gt;&gt;&gt; id(a[2]) == id(cp[2])
True
</code></pre>
<p>Compare to <code>deepcopy()</code>:</p>
<pre><code>&gt;&gt;&gt; cp2 = copy.deepcopy(a)
&gt;&gt;&gt; id(a) == id(cp2)
False
&gt;&gt;&gt; id(a[2]) == id(cp2[2])
False
</code></pre>
</div>
