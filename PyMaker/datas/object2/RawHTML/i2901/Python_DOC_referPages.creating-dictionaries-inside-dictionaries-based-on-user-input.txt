<div class="post-text" itemprop="text">
<p>New to programming, and teaching myself by making a to-do list app that stores things to do in a dictionary called <code>ThingsToDo</code>, based on user input. I'm using the <code>dict.update</code> function, which is working, but I want to add a feature so that in the dictionary <code>ThingsToDo</code>, every time a user inputs a new thing to do, it stores the new item as a dictionary inside <code>ThingsToDo</code>, with things like Due Date, and Status inside that sub-dictionary. How can I do this?</p>
<p>Here is the code so far (just started):</p>
<pre><code>ThingsToDo = {}

while True:
    item = input("What do you need to do? ")
    DueDate = input("When do you need to do it by? ")
    status = "Not done."

ThingsToDo.update({
    "Item": item,
    "Due Date": DueDate,
    "Status": status,
})

print(ThingsToDo)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First I suggest you to think about what will be the key(s) of your dictionary(ies). I can suggest you this simple solution using "what you need to do" as a key. It works well:  </p>
<pre><code>ThingsToDo = {}

while True:
    item = input("What do you need to do? ")
    DueDate = input("When do you need to do it by? ")
    status = "Not done."

    ThingsToDo.update({item: {"Due Date": DueDate, "Status": status}})

    print(ThingsToDo)
</code></pre>
<p>Output example:</p>
<pre><code>What do you need to do? Wash the car
When do you need to do it by? 2018/09/01
{'Wash the car': {'Due Date': '2018/09/01', 'Status': 'Not done.'}}
What do you need to do? Sort papers
When do you need to do it by? 2018/08/23
{'Wash the car': {'Due Date': '2018/09/01', 'Status': 'Not done.'}, 
 'Sort papers': {'Due Date': '2018/08/23', 'Status': 'Not done.'}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have "many" things to do, so you can put that dict in a list, or a dict.
You cannot put that in a set beacuse it has to be hashable.
If you chose a dict, you have to chose a "key" for each element, right?
You can read about "data structures" <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">here</a> .
Let's try list :</p>
<pre><code>thingsToDo = []
newThingToDo = {
  'Item': 'I need a haircut',
  'DueDate': 'Right now',
  'Status': 'Done'
}    
thingsToDo.append(newThingToDo)
</code></pre>
<p>Using a dict would allow you to order your tasks, but I'm not sure it is your question. Let's try ordering your tasks by adding a number.</p>
<pre><code>thingsToDo = {}
newThingToDo = {
  'Item': 'I need a haircut',
  'DueDate': 'Right now',
  'Status': 'Done'
}    
thingsToDo[5] = newThingToDo
</code></pre>
<p>So your haircut is task number 5.</p>
<p>If you choose the dict way, your code could look like this :</p>
<pre><code># -*- coding: utf-8 -*-
thingsToDo = {}

while True:
    n = int(input("How many tasks do you want to add?"))
    for i in range(n):
        item = input("What do you need to do? ")
        duedate = input("When do you need to do it by? ")
        status = "Not done."
        newThingToDo = {
           'Item': item,
           'DueDate': duedate,
           'Status': status
        }    
        thingsToDo[i] = newThingToDo
print(thingsToDo)
</code></pre>
</div>
<span class="comment-copy">It sounds like you want a <code>list</code> of dictionaries. Why don't you create a new list and use <code>list.append(your_dictionary)</code> to add the dicts to the list?</span>
<span class="comment-copy">What have you tried so far? What are your keys going to be in <code>ThingsToDo</code> if the values are going to be dictionaries?</span>
<span class="comment-copy">Thanks! The only problem is I need to do this based off user input. How would I do that? Also, if it matters, I'm going to write remove() and markDone() methods after I figure this out. Not sure if that affects how this has to be written...</span>
<span class="comment-copy">Well once you decided which store method you will use, you will also have to choose where you store those entries, file or database for example. If you don't want to store anything, then you will have to make a loop to enter many tasks. See the edited post for new feature in 5 minutes</span>
<span class="comment-copy">May I suggest you read this <a href="http://todomvc.com/" rel="nofollow noreferrer">todoMVC</a> list of examples. It describes different ways to do what you want in Javascript mostly. A <a href="http://simplectic.com/projects/flask-todomvc/" rel="nofollow noreferrer">Python/BackBone example exists</a> You made a good choice it a good way to start I guess.</span>
