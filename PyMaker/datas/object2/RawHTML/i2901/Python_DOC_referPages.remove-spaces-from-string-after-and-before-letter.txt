<div class="post-text" itemprop="text">
<p>I have a quite a few sums of strings that look like this: "a name / another name / something else".</p>
<p>I want to get to this: "a name/another name/something else".</p>
<p>Basically removing the spaces before and after the forward slashes only (not between the words themselves). </p>
<p>I know nothing about programming but I looked and found that this can be done with Python and Regex. I was a bit overwhelmed though with the amount of information I found. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the pattern:</p>
<pre><code>(?:(?&lt;=\/) | (?=\/))
</code></pre>
<ul>
<li><code>(?:</code> Non capturing group.</li>
<li><code>(?&lt;=\/)</code> Lookbehind for <code>/</code>.</li>
<li><code>|</code> OR</li>
<li><code>(?=\/)</code> Positive lookahead for <code>/</code>.</li>
<li><code>)</code> Close non capturing group.</li>
</ul>
<p>You can try it live <a href="https://regex101.com/r/2iTCVo/1" rel="nofollow noreferrer">here</a>.</p>
<hr/>
<p>Python snippet:</p>
<pre><code>import re
str = 'a name / another name / something else'
print(re.sub(r'(?:(?&lt;=\/) | (?=\/))','',str))
</code></pre>
<p>Prints:</p>
<pre><code>a name/another name/something else
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is an answer without using regex that I feel is easier to understand</p>
<pre><code>string = "a name / another name / something else"
edited = "/".join([a.strip() for a in string.split("/")])
print(edited)
</code></pre>
<p>output:</p>
<pre><code>a name/another name/something else
</code></pre>
<hr/>
<p><code>.join()</code> joins elements of a sequence by a given seperator, <a href="https://www.tutorialspoint.com/python/string_join.htm" rel="nofollow noreferrer">docs</a> </p>
<p><code>.strip()</code> removes beginning and trailing whitespace, <a href="https://www.tutorialspoint.com/python/string_strip.htm" rel="nofollow noreferrer">docs</a> </p>
<p><code>.split()</code> splits the string into tokens by character, <a href="https://www.tutorialspoint.com/python/string_split.htm" rel="nofollow noreferrer">docs</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This pattern will match for any amount of whitespace surrounding <code>/</code> and remove it. I think the regex is relatively easy to understand </p>
<pre><code>\s*([\/])\s*
</code></pre>
<p>Has a capturing group that matches the backslash (that's what the middle part is). The <code>s*</code> parts match whitespace (at least one up to any amount of times). </p>
<p>You can then replace these matched strings with just a <code>/</code> to get rid of all the whitespace. </p>
</div>
<div class="post-text" itemprop="text">
<p>There's no need for regex here, since you're simply replacing a string of literals.</p>
<pre><code>str = "a name / another name / something else"
print(str.replace(" / ", "/"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>str1</code> being your string: </p>
<pre><code>re.sub(" / ", "/" ,str1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the following code to remove all spaces before and after the <code>/</code> character:</p>
<pre><code>import re
str = 'a name /  another name / something else'
str = re.sub(r'(?:(?&lt;=\/)\s*|\s*(?=\/))','', str)
</code></pre>
<p>Check <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">this document</a> for more information.</p>
</div>
<span class="comment-copy">maybe <a href="https://regex101.com/r/Crnzow/1" rel="nofollow noreferrer"><code>re.sub(r' +/ +', '/', str)</code></a> suffices.</span>
<span class="comment-copy">You make a good point, +1</span>
<span class="comment-copy">What if there exist more than one whitespace?!</span>
<span class="comment-copy">@AmirRezazadeh There could be any number of potential typos in the input. What if there are more than one forward slashes? What if there's a random letter in between the space and the slash? OP didn't ask about this issue, so my answer didn't account for it.</span>
<span class="comment-copy">@CAustin Then read the question again, cuz itâ€™s about removing spaces not just one space.</span>
<span class="comment-copy">@AmirRezazadeh It says "the spaces before and after" which to me simply indicates the two spaces on either side of the forward slash.</span>
