<div class="post-text" itemprop="text">
<p><strong>THE ISSUE:</strong> 
On macOS...</p>
<ul>
<li>Uninstalled Python 3.6 — reinstalled Python 3.7</li>
<li>Uninstalled Django 2 — attempted reinstall of Django 2.1 (fails)</li>
</ul>
<p>My biggest issue right now is that I cannot figure out how to install Django. </p>
<p><strong>(<em>See the end of this post for all testing I can think to do</em>)</strong></p>
<p><strong>NOTES:</strong></p>
<p>After learning Python syntax for a few months, I wanted to branch out into creating a very basic 101 web app. So I started learning Django. I realized I really had no idea where or how any of the moving parts: pip, python, django, PyCharm, the OS, et cetera... work together or where they were even installed. I'd never heard of... packages, package managers, pip, path, or Frameworks. So, I decided to try to do a deep dive and really learn how it all works. The best way I've always done that is to... undo it all, and put it all back together.  </p>
<hr/>
<h2>Issues and Testing:</h2>
<p>In Terminal:  </p>
<pre><code>python -m Django --version
</code></pre>
<p><em>Results:</em></p>
<pre><code>/Library/Frameworks/Python.framework/Versions/3.7/bin/python3: No module named Django
</code></pre>
<hr/>
<p>Okay... Try to install Django: </p>
<pre><code>pip install Django==2.1
</code></pre>
<p><em>Results:</em></p>
<pre><code>Could not find a version that satisfies the requirement Django==2.1 (from versions: 1.1.3, [LARGE BLOCK OF VERSION NUMBERS, ALL IN RED] 1.11.15)
No matching distribution found for Django==2.1
</code></pre>
<hr/>
<p>Trying to figure out what "path" really means: </p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; for p in sys.path:
        print(p)
</code></pre>
<p><em>Results:</em> </p>
<pre><code>/Users/MichaelPerkins/Documents
/Library/Frameworks/Pthon.framework/Versions/3.7/lib/python37.zip
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload
/Users/MichaelPerkins/Library/Python/3.7/lib/python/site-packages
/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages
</code></pre>
<hr/>
<p>Finally... just to see what all was installed I typed in:</p>
<pre><code>pip list
</code></pre>
<p><em>Results:</em></p>
<pre><code>Package                                Version 
-------------------------------------- --------
altgraph                               0.10.2  
bdist-mpkg                             0.5.0   
bonjour-py                             0.3     
macholib                               1.5.1   
matplotlib                             1.3.1   
modulegraph                            0.10.4  
numpy                                  1.8.0rc1
pip                                    18.0    
py2app                                 0.7.3   
pyobjc-core                            2.5.1   
pyobjc-framework-Accounts              2.5.1   
pyobjc-framework-AddressBook           2.5.1   
pyobjc-framework-AppleScriptKit        2.5.1   
pyobjc-framework-AppleScriptObjC       2.5.1   
pyobjc-framework-Automator             2.5.1   
pyobjc-framework-CFNetwork             2.5.1   
pyobjc-framework-Cocoa                 2.5.1   
pyobjc-framework-Collaboration         2.5.1   
pyobjc-framework-CoreData              2.5.1   
pyobjc-framework-CoreLocation          2.5.1   
pyobjc-framework-CoreText              2.5.1   
pyobjc-framework-DictionaryServices    2.5.1   
pyobjc-framework-EventKit              2.5.1   
pyobjc-framework-ExceptionHandling     2.5.1   
pyobjc-framework-FSEvents              2.5.1   
pyobjc-framework-InputMethodKit        2.5.1   
pyobjc-framework-InstallerPlugins      2.5.1   
pyobjc-framework-InstantMessage        2.5.1   
pyobjc-framework-LatentSemanticMapping 2.5.1   
pyobjc-framework-LaunchServices        2.5.1   
pyobjc-framework-Message               2.5.1   
pyobjc-framework-OpenDirectory         2.5.1   
pyobjc-framework-PreferencePanes       2.5.1   
pyobjc-framework-PubSub                2.5.1   
pyobjc-framework-QTKit                 2.5.1   
pyobjc-framework-Quartz                2.5.1   
pyobjc-framework-ScreenSaver           2.5.1   
pyobjc-framework-ScriptingBridge       2.5.1   
pyobjc-framework-SearchKit             2.5.1   
pyobjc-framework-ServiceManagement     2.5.1   
pyobjc-framework-Social                2.5.1   
pyobjc-framework-SyncServices          2.5.1   
pyobjc-framework-SystemConfiguration   2.5.1   
pyobjc-framework-WebKit                2.5.1   
pyOpenSSL                              0.13.1  
pyparsing                              2.0.1   
python-dateutil                        1.5     
pytz                                   2013.7  
scipy                                  0.13.0b1
setuptools                             18.5    
six                                    1.4.1   
xattr                                  0.6.4   
zope.interface                         4.1.1  
</code></pre>
<hr/>
<h2>In PyCharm:</h2>
<p>When I open a project that I'd created prior to these uninstall/reinstalls, and try to run a new or existing .py file, I get...</p>
<pre><code>"/Users/MichaelPerkins/Library/Mobile Documents/com~apple~CloudDocs/Python Projects/BlackJack/venv/bin/python" "/Applications/PyCharm CE.app/Contents/helpers/pydev/pydevconsole.py" 59523 59524
dyld: Library not loaded: /Library/Frameworks/Python.framework/Versions/3.6/Python
  Referenced from: /Users/MichaelPerkins/Library/Mobile Documents/com~apple~CloudDocs/Python Projects/BlackJack/venv/bin/python
  Reason: image not found
Process finished with exit code 134 (interrupted by signal 6: SIGABRT)
</code></pre>
<p>When I create a new project, however, it picks up the new version of Python 3.7.</p>
<pre><code>import(sys)
print(sys.version)
</code></pre>
<p><em>Results:</em></p>
<pre><code>/Users/MichaelPerkins/Projects/Test_1/venv/bin/python /Users/MichaelPerkins/Projects/Test_1/version.py
3.7.0 (v3.7.0:1bf9cc5093, Jun 26 2018, 23:26:24) 
[Clang 6.0 (clang-600.0.57)]

Process finished with exit code 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If <code>python</code> command starts Python 3.7 in your system you could install Django globally with</p>
<pre><code>python -m pip install django
# or
pip3 install django
</code></pre>
<p>There is one cool thing that PyCharm did for you when you created your second project. It created <a href="https://docs.python.org/3/tutorial/venv.html" rel="nofollow noreferrer">virtual environment</a> - kind of new interpreter which is isolated and meant to use only with your project (it was saved in <code>/Users/MichaelPerkins/Projects/Test_1/venv/bin/python</code>). When you open Terminal in PyCharm you should see <code>(venv)</code> before your prompt. That means you have <code>virtualenv</code> activated in this project and you can install Django with simply <code>pip install django</code>. Just remember that when you are using virtualenv you have to install django each time you start new project.</p>
<p>Your old project is trying to use old 3.6 interpreter which, I guess, does not exist anymore. To fix this you have to provide path to valid Python interpreter in File -&gt; Settings -&gt; Project:  -&gt; Project Interpreter</p>
<p><a href="https://i.stack.imgur.com/rPSst.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/rPSst.png"/></a></p>
<p>There, you can press the cogwheel in the top-right corner and you can either point to Python 3.7 installation path or create new <code>virtualenv</code> for this project.</p>
</div>
<span class="comment-copy">Your pip is referencing the default system installation of Python which is 2.7. Use <code>pip3</code>.</span>
<span class="comment-copy">Thank you for the help umat. I really appreciate it. However, I do not think it worked. It seems that I was able to install Django with:       python -m pip install django  However, when I go to check  by typing:         python -m django --version  ...It still says, "/Library/Frameworks/Python.framework/Versions/3.7/bin/python3: No module named Django"  It looks to me like the Terminal install statement is installing Django in one place, but when I go to check it's version, it is looking in another place.   Way to resolve this?</span>
<span class="comment-copy">I don't know if you check like this: "python -m Django --version". If you spell "Django" with capital letter instead of just "django" (all lowercase) - it will not work. I also wonder if you can just run python and then <code>import django</code>.</span>
<span class="comment-copy">Well I'll be damned!!! I made it lowercase, like you suggested... and it worked. I'm on django 2.1, but Django doesn't exist. Ha! Computers man! Thanks!!!</span>
<span class="comment-copy">Right, this might be confusing, when you install packages with <code>pip</code> case does not matter - it is just package name registered in <a href="https://pypi.org/" rel="nofollow noreferrer">PyPi</a>. But installed package may install more than one module to be used with <code>py -m</code> - and python module names are case sensitive.</span>
