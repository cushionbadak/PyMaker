<div class="post-text" itemprop="text">
<p>In my test case, I assume that if two values are <code>NaN</code> then they are equal. What is the way to express it using <code>unittest</code> assertions? The two common functions presented below are not handling this case.</p>
<pre><code>v1 = np.nan
v2 = np.nan
self.assertEquals(v1, v2)
self.assertTrue(v1 == v2)
</code></pre>
<p>A solution that is working for me right now is using a boolean expression inside <code>assertTrue</code>:</p>
<pre><code>self.assertTrue(v1 == v2 or (np.isnan(v1) and np.isnan(v2))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It does not make sense to check two NaNs for equality. The best you could do is to check it in a different way, for example:</p>
<pre><code>check = numpy.isnan(v1) and numpy.isnan(v2)
self.assertTrue(check)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could check if each of them is NaN separately. To do that, I suggest using the following class:</p>
<pre><code>import math


class NumericAssertions:
    """
    This class is following the UnitTest naming conventions.
    It is meant to be used along with unittest.TestCase like so :
    class MyTest(unittest.TestCase, NumericAssertions):
        ...
    It needs python &gt;= 2.6
    """

    def assertIsNaN(self, value, msg=None):
        """Fail if provided value is not NaN"""
        standardMsg = "%s is not NaN" % str(value)
        try:
            if not math.isnan(value):
                self.fail(self._formatMessage(msg, standardMsg))
        except:
            self.fail(self._formatMessage(msg, standardMsg))

    def assertIsNotNaN(self, value, msg=None):
        """Fail if provided value is NaN"""
        standardMsg = "Provided value is NaN"
        try:
            if math.isnan(value):
                self.fail(self._formatMessage(msg, standardMsg))
        except:
            pass
</code></pre>
<p>It would be as easy as:</p>
<pre><code>v1 = np.nan
v2 = np.nan
self.assertIsNaN(v1)
self.assertIsNaN(v2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/math.html#math.isnan" rel="nofollow noreferrer">math.isnan</a></p>
<pre><code>self.assertTrue(math.isnan(v1) and math.isnan(v2))
</code></pre>
</div>
<span class="comment-copy">I'd probably write my own assertion method, e.g. <code>assertBothNan</code>, or override <code>assertEquals</code> if you always want that behaviour. As to how you check if a value is NaN: <a href="https://stackoverflow.com/q/16890902/3001761">stackoverflow.com/q/16890902/3001761</a></span>
<span class="comment-copy">This will not work, <code>v1==v2</code> will be False. You should check that both are Nan separately and then write your own assertion method.</span>
<span class="comment-copy">That's why I am looking for a solution covering a case when both values are not NaN and when they are both NaN. I will understand if there is only a complex boolean expression available at the moment.</span>
