<div class="post-text" itemprop="text">
<p>I have this script in python 3.7:</p>
<pre><code>pars = argparse.ArgumentParser(prog='copy dirs script', description="à copier MSRE localment:",
                               epilog="Comme ça on copie les repertoires")

pars.add_argument("-o", "--output", action='store_const', default=destination_file,
                         const=destination_file1, 
                       help="the destination dirctory is the curently working dirctory")
pars.add_argument("-a", "--arch", choices=("all", "i386", "x86_64"), type = lambda s : s.lower(),
                       help="Targeted check architecture: 32b, 64b, All")
pars.add_argument("-p", "--platform", choices=("all", "windows", "linux"), type = lambda s : s.lower(),
                       help="Targeted check platform: Windows, Linux, All")
args = pars.parse_args()
</code></pre>
<p>I want to parse the output in the command line, for example:</p>
<pre><code>python script.py -o C:/Users/michael/Documents/install -a all -p windows
</code></pre>
<p>I don't know how to store the output into a variable.
How can I proceed?</p>
</div>
<div class="post-text" itemprop="text">
<p>In your case you can access the arguments using:</p>
<p>As you suggested in comment all you want is to access <strong>--output</strong> or <strong>-o</strong> change your add_argument for output to something like i added below</p>
<pre class="lang-python prettyprint-override"><code>    pars.add_argument("-o", "--output", default=destination_file, 
                       help="the destination dirctory is the curently working dirctory")
    platform = args.platform
    architecture = args.arch
    output = args.output
</code></pre>
<p>so on and so forth, for any other arguments you want to access should be available in args variable. Go through the documentation for more info
<a href="https://docs.python.org/3/library/argparse.html#example" rel="nofollow noreferrer">Documentation</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can get a dictionary of the args passed by using <code>vars(args)</code>. <code>args.parse_args()</code> returns a <a href="https://docs.python.org/3/library/argparse.html#argparse.Namespace" rel="nofollow noreferrer">Namespace object</a>  and you can then use <code>vars(args)</code> on it in order to get a dictionary. Use <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html</a> to learn about manipulating a dict. <br/>
Other answer is probably better if you don't want to learn about dicts or want to keep it simple :)</p>
</div>
<span class="comment-copy">Which output do you want to store into a variable? The output of this program when you call <code>--help</code>? The output of the program itself? The command-line input? I don't think we can help unless you're more specific on what you need us to do.</span>
<span class="comment-copy">I want to store the path i gave to program to be stored into a variable  python script.py -o C:/Users/michael/Documents/install -a all -p windows,  C:/Users/michael/Documents/install to be stored into avariable when i run the program</span>
<span class="comment-copy">i did this, in fact i just want to take the argument "C:/Users/michael/Documents/install" and to store it into a variable when i run the program, this is the exaple: -o C:/Users/michael/Documents/install -a all -p windows</span>
<span class="comment-copy">then just use the 3rd line from my example where i create an variable output, that should work for you</span>
