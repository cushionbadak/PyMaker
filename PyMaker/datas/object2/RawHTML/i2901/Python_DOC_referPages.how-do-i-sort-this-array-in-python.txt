<div class="post-text" itemprop="text">
<p>I have this array:</p>
<pre><code>[14, 'S', 12, 'D', 8, 'S', 9, 'S', 10, 'D']
</code></pre>
<p>I want to sort it in descending order (numbers), but at the same time keep the number with the following letter together. So the result should look like this:</p>
<pre><code>[14, 'S', 12, 'D', 10, 'D', 9, 'S', 8, 'S']
</code></pre>
<p>How can I do this?</p>
<p>I tried to do it this way (five_cards_num is the name of the array):</p>
<pre><code>for j in range(4):
    max = five_cards_num[j]
    max_color = five_cards_num[j+1]
    for i in range(j, 5):
        if (five_cards_num[2*i] &gt; max):
            max = five_cards_num[2*i]
            max_color = five_cards_num[2*i+1]
            five_cards_num[2*i] = five_cards_num[j]
            five_cards_num[2*i+1] = five_cards_num[j+1]
            five_cards_num[j] = max
            five_cards_num[j+1] = max_color
</code></pre>
<p>But I get error:</p>
<p>TypeError: '&gt;' not supported between instances of 'int' and 'str'</p>
<p>Thank you in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>zip</code> to turn the list into a list of tuples so you can sort the pairs together, and then flatten it with nested list comprehension afterwards:</p>
<pre><code>print([a for i in sorted(zip(five_cards_num[::2], five_cards_num[1::2]), reverse=True) for a in i])
</code></pre>
<p>This outputs:</p>
<pre><code>[14, 'S', 12, 'D', 10, 'D', 9, 'S', 8, 'S']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I prefer this simple solution:</p>
<pre><code>list(sum(sorted(zip(x[::2], x[1::2]), reverse=True), ()))
</code></pre>
<p><strong>Output</strong>:</p>
<pre><code>[14, 'S', 12, 'D', 10, 'D', 9, 'S', 8, 'S']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Again another approach using <a href="https://docs.python.org/2/library/itertools.html" rel="nofollow noreferrer">itertools</a>.</p>
<pre><code>&gt;&gt;&gt; import itertools as it
&gt;&gt;&gt; a = [14, 'S', 12, 'D', 8, 'S', 9, 'S', 10, 'D']
&gt;&gt;&gt; b = sorted(it.izip(*[iter(a)]*2), reverse=True)
&gt;&gt;&gt; b
[(14, 'S'), (12, 'D'), (10, 'D'), (9, 'S'), (8, 'S')] # you may want to play with a list of tuples (?|!)
&gt;&gt;&gt; list(it.chain(*b))
[14, 'S', 12, 'D', 10, 'D', 9, 'S', 8, 'S']
</code></pre>
</div>
<span class="comment-copy">Works perfectly, thanks! Could you please give me a little more explanation on what "a for i in" and "for a in i" does? I've never seen "for" used like this before.</span>
<span class="comment-copy">Glad to be of help. You can refer to <a href="https://docs.python.org/3/tutorial/datastructures.html#nested-list-comprehensions" rel="nofollow noreferrer">nested list comprehension</a> for more details.</span>
<span class="comment-copy">Nice one liner :) @Lev</span>
<span class="comment-copy">@KostadinSlavov Thanks:)</span>
