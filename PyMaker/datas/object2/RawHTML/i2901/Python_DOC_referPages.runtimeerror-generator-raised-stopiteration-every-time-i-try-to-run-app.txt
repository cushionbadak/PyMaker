<div class="post-text" itemprop="text">
<p>I am trying to run this code:</p>
<pre><code>import web

urls = (
    '/', 'index'
)

if __name__ == "__main__":
    app = web.application(urls, globals())
    app.run()
</code></pre>
<p>But it gives me this error everytime</p>
<pre><code>C:\Users\aidke\Desktop&gt;python app.py
Traceback (most recent call last):
  File "C:\Users\aidke\AppData\Local\Programs\Python\Python37-32\lib\site-packages\web\utils.py", line 526, in take
    yield next(seq)
StopIteration

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "app.py", line 14, in &lt;module&gt;
    app = web.application(urls, globals())
  File "C:\Users\aidke\AppData\Local\Programs\Python\Python37-32\lib\site-packages\web\application.py", line 62, in __init__
    self.init_mapping(mapping)
  File "C:\Users\aidke\AppData\Local\Programs\Python\Python37-32\lib\site-packages\web\application.py", line 130, in init_mapping
    self.mapping = list(utils.group(mapping, 2))
  File "C:\Users\aidke\AppData\Local\Programs\Python\Python37-32\lib\site-packages\web\utils.py", line 531, in group
    x = list(take(seq, size))
RuntimeError: generator raised StopIteration
</code></pre>
<p>I tried someone else's code and the exact same thing happened.  Additionally I tried reinstalling web.py(experimental) but it still didn't work.</p>
</div>
<div class="post-text" itemprop="text">
<p>To judge from the file paths, it looks like you're running Python 3.7.  If so, you're getting caught by new-in-3.7 behavior <a href="https://docs.python.org/3/whatsnew/3.7.html" rel="noreferrer">described here</a>:</p>
<blockquote>
<p>PEP 479 is enabled for all code in Python 3.7, meaning that StopIteration exceptions raised directly or indirectly in coroutines and generators are transformed into RuntimeError exceptions. (Contributed by Yury Selivanov in bpo-32670.)</p>
</blockquote>
<p>Before this change, a <code>StopIteration</code> raised by, or passing through, a generator simply ended the generator's useful life (the exception was silently swallowed).  The module you're using will have to be recoded to work as intended with 3.7.</p>
<p>Chances are they'll need to change:</p>
<pre><code>yield next(seq)
</code></pre>
<p>to:</p>
<pre><code>try:
    yield next(seq)
except StopIteration:
    return
</code></pre>
</div>
<span class="comment-copy">So if this is in a 3rd party app you need to upgrade it? Are you SOL if that 3rd party app is not fixed for PEP 479?</span>
<span class="comment-copy">Of course upgrading the app won't make a difference unless they've changed the app.  If they haven't, you can patch it yourself.  Or refrain from moving to Python 3.7 until the apps you care about do.comply with PEP 479.  Since I've seen very few reports of this in the wild, I believe it's a rare problem.</span>
<span class="comment-copy">Great, thanks. Using a virtual env when Python 3.7 does not work sounds like a great solution when necessary.</span>
