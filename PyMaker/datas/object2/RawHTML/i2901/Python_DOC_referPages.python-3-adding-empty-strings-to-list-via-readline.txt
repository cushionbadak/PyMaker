<div class="post-text" itemprop="text">
<p>I'm trying to take from a txt file and put them into a variable. Here's my code:</p>
<pre><code>#file_len function, got it from somewhere on stack exchange
def file_len(fname):
    with open(fname) as f:
        for i, l in enumerate(f):
            pass
    return i + 1
#various variables, containing names/files
#wordList File, stores all the words
wordListFileName = '/Users/k/Desktop/Cyber/HashCrack/wordlist.txt'
wordListFile = open(wordListFileName)
#wordList list, stores all the words from the wordList file
wordList = []
#passList file, stores all the passwords
passListFileName = '/Users/k/Desktop/Cyber/HashCrack/passlist.txt'
passListFile = open(passListFileName, 'w')
#for loop, gets all the words in the wordList file, stores them in wordList list
for i in range(0, 185051):
if wordListFile.readline(i) == '':
    print('skipped empty line ' + str(i))
else:
    wordList.append(wordListFile.readline(i).strip('\n'))
    print('added ' + wordListFile.readline(i).strip('\n') + ' to wordList under number ' + str(i) + ' and word ' + wordList[i-1])
</code></pre>
<p>So, the for loop skips any empty lines in the wordlist.txt file and, if they're not empty, adds them to the wordList list. However, for some weird reason, it doesn't like the first three lines and puts them into the variable as blank lines. Why does it do that? sure, they're not the most important words in the world, but I'd still like it to use them.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, you call <a href="https://docs.python.org/3/library/io.html#io.TextIOBase.readline" rel="nofollow noreferrer"><code>readline</code></a> to check if the line is empty:</p>
<pre><code>if wordListFile.readline(i) == '':
    print('skipped empty line ' + str(i))
</code></pre>
<p>Since you're calling it with <code>size=i</code>, you're reading at most <code>i</code> characters. For the first line, that's 0. For every other line, it's more than 0, so this never triggers again (unless you reach EOF), because a line always has at least one character (the newline).</p>
<p>Then, if that doesn't trigger, instead of using the line you read, you read another line:</p>
<pre><code>wordList.append(wordListFile.readline(i).strip('\n'))
</code></pre>
<p>Although again you may not be reading the entire line, because you're passing a <code>size</code> argument.</p>
<p>And then you read yet another line:</p>
<pre><code>print('added ' + wordListFile.readline(i).strip('\n') + ' to wordList under number ' + str(i) + ' and word ' + wordList[i-1])
</code></pre>
<p>So, you're cutting off the start of all of your early lines, and skipping almost two thirds of the lines by reading them without adding them to the list, and your test for emptiness actually just tests for being the first line.</p>
<hr/>
<p>What you probably want to do is just call <code>readline()</code> without a size, and only once instead of three times in a row.</p>
<p>Or, better, just iterate the file directly, the same way you're doing with the other file at the top of your code.</p>
<p>I'm not sure why you want to stop at 185051 lines, but I'll assume there's some reason. So, rather than <code>enumerate</code> the lines, let's <code>zip</code> them with a range:</p>
<pre><code>for i, line in zip(range(185051), wordListFile):
    line = line.strip('\n')
    if not line:
        print('skipped empty line ' + str(i))
    else:
        wordList.append(line)
        print('added ' + line + ' to wordList under number ' + str(i) + ' and word ' + wordList[i-1])
</code></pre>
</div>
<span class="comment-copy">Your tabbing is currently incorrect. Also, please remove any code that is not relevant to your question</span>
<span class="comment-copy">I believe <code>readline</code> doesn't do what you think it does. What do you think <code>i</code> means here?</span>
<span class="comment-copy">Your for loop is wrong. When you do readline(i) you read 0 lines in the first round 1line in the second and 2 lines in the third round. In Python you can simply do: for line in wordListFile:</span>
<span class="comment-copy">@nauer <code>readline</code> doesn't do what <i>you</i> think it does, either.</span>
<span class="comment-copy">Thank you so much @abarnert, that was exactly it! I think that the readline() function is kinda stupid. Why can't you specify a specific line, and maybe after that, check characters? Anyway, thanks a lot. I'm just starting out with python. Also, what does the zip function do?</span>
