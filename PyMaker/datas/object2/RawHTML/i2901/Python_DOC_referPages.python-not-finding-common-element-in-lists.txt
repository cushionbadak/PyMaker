<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1504717/why-does-comparing-strings-using-either-or-is-sometimes-produce-a-differe">Why does comparing strings using either '==' or 'is' sometimes produce a different result?</a>
<span class="question-originals-answer-count">
                    14 answers
                </span>
</li>
</ul>
</div>
<p>I'm building a program in Python 3 that needs to go through two lists and count how many times the elements of the first list appear in the second. However, even if I plug in two lists that are hard-coded to have common elements, Python says the list doesn't have any common elements.</p>
<p>Here's a minimal, runnable version of my program:</p>
<pre><code>strings = ["I sell","seashells","by the","seashore"]
ngramSet = ["by the"]
for ngram in ngramSet:
    print("Ngram: \"" + str(ngram) + "\"")
    # Should return "by the" twice where it appears twice.
    occurrences = [element for element in strings if element is ngram]
    print("Occurrences: " + str(occurrences))
    count = len(occurrences)
    print("Number of times N-gram appears in string" + str(count))
</code></pre>
<p>Output:</p>
<pre><code>Ngram: "by the"
Occurrences: []
Number of times N-gram appears in string0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your approach is correct. The only problem is within your <code>lambda</code>, where you compare the two strings using <code>is</code>. You should be comparing them using <code>==</code> because you are doing equality comparison. </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> was made for this!</p>
<pre><code>import collections

strings = ["I sell","seashells","by the","seashore"]
ngramSet = ["by the"]
strings_counter = collections.Counter(strings)

for string in ngramSet:
    print(string, strings_counter[string])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can make it very short and clear, there are multiple ways but here is one:</p>
<pre><code>strings = ["I sell","seashells","by the","seashore"]
ngramSet = ["by the"]

# Built in count function
for x in ngramSet:
        print (x, " -&gt; ", strings.count(x))

# Or make it a one-liner
print ([(arg, strings.count(arg)) for arg in ngramSet])
</code></pre>
<p>Or you could simply use your code because it seems to be working for me. </p>
</div>
<div class="post-text" itemprop="text">
<p>If you just want to get common elements, then try sets:</p>
<pre><code>list(set(strings).intersection(set(ngramSet)))
</code></pre>
</div>
<span class="comment-copy">first for loops through your set, second for loops through every single letter.</span>
<span class="comment-copy">It returns result for me.</span>
<span class="comment-copy">Don't use <code>is</code> to compare strings for equality, use <code>==</code>, <code>is</code> is for <i>identity comparisons</i></span>
<span class="comment-copy">This is correct, but I don't see a lambda</span>
