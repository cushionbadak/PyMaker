<div class="post-text" itemprop="text">
<p>I am using <a href="https://github.com/fracpete/python-weka-wrapper" rel="nofollow noreferrer">python-weka-wrapper</a> which then uses <a href="https://github.com/LeeKamentsky/python-javabridge/" rel="nofollow noreferrer">javabridge</a> library for running and accessing the Java Virtual Machine to utilize whatever <a href="https://www.cs.waikato.ac.nz/ml/weka/" rel="nofollow noreferrer">WEKA</a> has to offer.
So my application has a frontend in ReactJS, and backend server in flask. For each request to a particular endpoint, a new thread is created by <a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer">Threading</a> module of python. It is on this thread, JVM (using weka.core.jvm ) is started, the script is executed, and then stopped. After a second request to the same endpoint, a new JVM is unable to start.
Error: <code>RuntimeError: Failed to start Java VM.</code>
Help me with the implementation details for such an app. Is it possible to run JVM as a daemon in the backend, something like that, and stopping the JVM only when the server is stopped?</p>
</div>
<div class="post-text" itemprop="text">
<p>pww relies on the <a href="https://pypi.org/project/javabridge/" rel="nofollow noreferrer">javabridge</a> library with which it is not possible to restart the JVM after stopping it. Also, pww has not been implemented with multi-threading in mind and Weka by itself isn't thread-safe by default.</p>
</div>
