<div class="post-text" itemprop="text">
<p>I am currently working on a python script in which there is a moment <strong>I want to delete a file which name is ending with .txt</strong></p>
<p>To do so I just run a command line using os in python:</p>
<pre><code>os.system("del working/*.txt")
</code></pre>
<p>When running the python script, I get the following error in cmd:</p>
<p><strong>Option non valide - "*".</strong> which can be translated <strong>"Invalid option"</strong></p>
<p>It seems that the wildcard isn't recognized by cmd but I know very little about this. Why is it not working ?</p>
<p>I know I could handle the situation with regular expressions but I'd like to understand.</p>
<p>Thank you in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>In Windows, <code>\</code> is the path delimiter, not <code>/</code>, so you should do:</p>
<pre><code>os.system(r"del working\*.txt")
</code></pre>
<p>Note that <code>/</code> in Windows is for switches, hence the "invalid option" error.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think its better use os.remove instead os.system with "del" command. Using os.system your script will not work on linux. Here a example using os.remove:</p>
<pre><code>files = os.listdir("working\")
for fi in files:
    if fi.endswith(".json"):
        os.remove("working\{}".fomat(fi))
</code></pre>
</div>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer"><code>subprocess.run()</code></a> instead and make sure you turn on shell expansion (i.e. <code>shell=True</code>).</span>
<span class="comment-copy">Windows' <code>cmd.exe</code> uses <code>/</code> for program options (much like you might use <code>-</code> or <code>--</code> on a Linux or macOS system). Its filesystem separator is the <i>backslash</i>: <code>\ </code>. In any case, shelling out isn't the best way to handle this. There are standard library functions to remove files.</span>
<span class="comment-copy">What about using <code>os.remove</code>? (<a href="https://docs.python.org/3/library/os.html#os.remove" rel="nofollow noreferrer">docs.python.org/3/library/os.html#os.remove</a>)</span>
<span class="comment-copy">why do this in python to make it platform agnostic? <code>for f in glob.glob('working/*.txt'): os.remove(f)</code></span>
