<div class="post-text" itemprop="text">
<p>It works only if I'm doing a print statement for some reason. For example, I have</p>
<pre><code>warnings.warn('blabla\ 
continuing writing') 
</code></pre>
<p>where continuing is on the next line in the IDE. It gives me an error yet it's the same line continuation as always. Why is this happening? </p>
</div>
<div class="post-text" itemprop="text">
<p>At least as posted here, you have a space after the backslash.</p>
<p>A backslash continuation is a backslash followed by a newline. A backslash followed by a space followed by a newline is just a backslash-escaped space, and an unescaped newline.</p>
<p>This is, of course, hard to see in most text editors, and on sites like Stack Overflow (I had to click "edit" on your question and scroll the cursor around to check), which is one of the reasons many people avoid backslash continuations whenever possible.</p>
<p>And it's especially a problem using them in strings, because a backslash-escaped space is a perfectly legal thing to put in a string, so the compiler won't give you an error about it, and even most linters won't warn about it.</p>
<p>If you can configure your editor to recognize backslashed whitespace and display it in some way, or maybe just to show you all newlines with some subtle marker, it may be helpful.</p>
<p>A better solution—assuming you actually want a newline there—is to use triple quotes:</p>
<pre><code>warnings.warn('''blabla 
continuing writing''')
</code></pre>
<p>… possibly with <a href="https://docs.python.org/3/library/textwrap.html#textwrap.dedent" rel="nofollow noreferrer"><code>textwrap.dedent</code></a> so you can line things up nicely:<sup>1</sup></p>
<pre><code>from textwrap import dedent as D
warnings.warn(D(
    '''blabla 
    continuing writing'''))
</code></pre>
<p>… or to use an explicit <code>\n</code>:</p>
<pre><code>warnings.warn('blabla\ncontinuing writing')
</code></pre>
<p>… possibly together with string concatenation:</p>
<pre><code>warnings.warn('blabla\n'
              'continuing writing')
</code></pre>
<p>(Depending on the purpose of this output, it also might be worth considering not worrying about exactly where the newlines go and letting <code>textwrap.fill</code> take care of making it fit the output.)</p>
<hr/>
<p><sub>1. However, it's worth noting that the examples in the <code>textwrap</code> docs actually use backslash-escaped newlines to feed to <code>dedent</code>, allowing you to put the triple-quote on one line and the start of the text on the next...</sub></p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/5437619/python-style-line-continuation-with-strings">Python style - line continuation with strings?</a></span>
<span class="comment-copy">@JoelBerkeley I don't think it's a dup. While that answer does show alternate ways of accomplishing a similar thing, it doesn't explain what's wrong with this code, which is what the question is asking. And they also don't accomplish the <i>same</i> thing—the OP's code should have a newline in the string, but those answers show how to <i>avoid</i> getting a newline in the string.</span>
<span class="comment-copy">This question is pretty confusing as written. If you could edit the question to show examples that do and don’t work, explain what “doesn’t work” means (if it’s an exception, paste the whole thing), and explain the desired behavior, it may turn out that this is a dup after all, of you may need a different answer from the one I wrote.</span>
<span class="comment-copy">Thank you. The triple quotes worked. I actually didn't have a space in my original code (my bad), but it still wasn't working. I actually don't want a new line in the standard output. I just want to continue writing the statement on the next line in the IDE because it would get too long.</span>
<span class="comment-copy">@masque In that case, you probably just want string concatenation, and your question <i>is</i> a duplicate of the one Joel Berkeley found (which has nice answers covering all the options).</span>
