<div class="post-text" itemprop="text">
<p>this works but shell injection is a security risk </p>
<pre><code>p = subprocess.Popen(['mv ./*.pdf ./target.pdf'], shell=True)
</code></pre>
<p>this doesn't work as * won't glob</p>
<pre><code>p = subprocess.Popen(['mv', './*.pdf', './target.pdf'])
</code></pre>
<p>I'm watching a directory. How can I rename an arriving pdf to target.pdf without compromising security?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>glob</code> command from the <code>glob</code> module to get shell like path extensions:</p>
<blockquote>
<p><code>glob.glob(pathname, *, recursive=False)</code></p>
<p>Return a possibly-empty list of path names that match pathname, which must be a string containing a path specification. pathname can be either absolute (like <code>/usr/src/Python-1.5/Makefile</code>) or relative (like <code>../../Tools/*/*.gif</code>), and can contain shell-style wildcards. Broken symlinks are included in the results (as in the shell).</p>
<p>If <code>recursive</code> is true, the pattern <code>**</code> will match any files and zero or more directories and subdirectories. If the pattern is followed by an os.sep, only directories and subdirectories match. </p>
<p>(taken from the <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">docs</a>)</p>
</blockquote>
<p>In your case it could look like this:</p>
<pre><code>import shutil
import glob

sources = glob.glob('*.pdf')
destination = "target.pdf"
for file in sources:
    shutil.move(file, destination)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This works</p>
<pre><code>import os
import shutil

source = os.listdir(os.curdir)
destination = "target.pdf"
for files in source:
    if files.endswith(".pdf"):
        shutil.move(files,destination)
</code></pre>
</div>
<span class="comment-copy">Why not use <code>glob</code> inside your python script first to find the filenames.</span>
<span class="comment-copy">Why use <code>subprocess</code> for that when you can use <code>shutil.move()</code></span>
<span class="comment-copy">@FlyingTeller I'm using watchdog to rename any arriving pdf file to target.pdf which is passed into a tika-parser by subprocess.Popen so how would i glob first?</span>
<span class="comment-copy">@nauer I'm a beginner. Thanks for the tip. I will post my clunky solution which I'm sure could be done better...</span>
<span class="comment-copy">@user1613312 same way you are using listdir in the answer you ahve posted. Simply do <code>sources = glob.glob('*.pdf')</code></span>
<span class="comment-copy">source = glob.glob('*.pdf') destination = "target.pdf" for file in source:     shutil.move(file,destination)</span>
