<div class="post-text" itemprop="text">
<p>I have a dataframe in pandas as follows:</p>
<pre><code>df = pd.DataFrame({'key1': ['abcd', 'defg', 'hijk', 'abcd'],
                   'key2': ['zxy', 'uvq', 'pqr', 'lkj'],
                   'value': [1, 2, 4, 5]})
</code></pre>
<p>I am trying to create a dictionary with a key of key1 and a nested dictionary of key2 and value. I have tried the following:</p>
<pre><code>dct = df.groupby('key1')[['key2', 'value']].apply(lambda x: x.set_index('key2').to_dict(orient='index')).to_dict()

dct

{'abcd': {'zxy': {'value': 1}, 'lkj': {'value': 5}},
 'defg': {'uvq': {'value': 2}},
 'hijk': {'pqr': {'value': 4}}}
</code></pre>
<p>Desired output:</p>
<pre><code>{'abcd': {'zxy': 1, 'lkj': 5}, 'defg': {'uvq': 2}, 'hijk': {'pqr': 4}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a>, you can construct a <code>defaultdict</code> of <code>dict</code> objects and add elements while iterating your dataframe:</p>
<pre><code>from collections import defaultdict

d = defaultdict(dict)

for row in df.itertuples(index=False):
    d[row.key1][row.key2] = row.value

print(d)

defaultdict(dict,
            {'abcd': {'lkj': 5, 'zxy': 1},
             'defg': {'uvq': 2},
             'hijk': {'pqr': 4}})
</code></pre>
<p>As <code>defaultdict</code> is a subclass of <code>dict</code>, this should require no further work.</p>
</div>
<span class="comment-copy">Worked beautifully, thank you!</span>
