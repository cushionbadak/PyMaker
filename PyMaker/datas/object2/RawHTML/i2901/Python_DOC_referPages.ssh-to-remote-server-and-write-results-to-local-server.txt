<div class="post-text" itemprop="text">
<p>So I want to be able to get this info that I initiate from my local server to this remote appliance and instead of getting the results to my local screen. I want to write it to a local file. I can see examples in paramiko, but I am having issues installing it for python3 as this is what I prefer to use. so I am trying using subprocess. now the unique thing is this remote appliance has limited commands it accepts, it is more like I literally have to run a 'show' command on the appliance. so there is nothing to SCP..hence the reason I did not use SCP.</p>
<p>This will write it to my screen, but that does not do me much good :(</p>
<pre><code>xfer = subprocess.Popen(["ssh", "user@mysystem.com", " show my_secret_file"], stderr=subprocess.PIPE)
errdata = prog.communicate()[1]
</code></pre>
<p>Is this possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming your appliance will actually write its output to stdout, its output will actually be returned in <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow noreferrer"><code>prog.communicate()</code></a>, as long as you asked for stdout in <code>Popen()</code>.</p>
<p>You can then save the returned stdout to a file using the <a href="https://docs.python.org/3/library/io.html" rel="nofollow noreferrer">standard file IO functions</a>.</p>
<p>In other words, here's how it would work:</p>
<pre><code>import subprocess

# Call subprocess and save stdout and stderr
prog = subprocess.Popen(["ssh", "user@mysystem.com", " show my_secret_file"],
                        stdout=subprocess.PIPE, stderr=subprocess.PIPE)
                      # ^ Add this bit
out, err = prog.communicate()

# Do your error handling here...
# ...

# Now write to file
writefile = open("Put your file name here", "w")
writefile.write(out.decode("utf-8"))
writefile.close()
</code></pre>
<p>Note that the above assumes stdout is in text mode. If it is in binary mode, you may have to do some str/bytes conversion, or open the file in a different mode.</p>
</div>
<span class="comment-copy">You can redirect the output of your process to a file, like <code>python myprog.py 1&gt;output.file</code></span>
<span class="comment-copy">..so you are right, I am getting the type error  str not bytes. How would I get around this?</span>
<span class="comment-copy">@DJR Fixed now, see edited post. Basically just needed to decode the bytes to str (second last line). I've used utf-8 encoding here, works with most cases but you may have to check.</span>
<span class="comment-copy">man oh man, I swear I thought I tried exactly that. I found something on google that showed that. I must of did something wrong... in any case...perfection...I thank you!!  I have a long learning road ahead of me :(</span>
<span class="comment-copy">@DJR By the way if the answer helps please click on the green check mark next to it to accept the answer. Thanks and good luck :)</span>
<span class="comment-copy">thank you.. I was wondering how that worked..thanks again..</span>
