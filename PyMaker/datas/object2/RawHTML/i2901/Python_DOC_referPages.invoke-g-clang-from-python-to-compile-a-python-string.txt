<div class="post-text" itemprop="text">
<p>I am currently writing an application that generates C++ code into a python string. I want to compile this code and create a <code>.so</code> from it.</p>
<p>The easiest way is to write the python string containing the code into a file, and use <code>subprocess.Popen(...)</code> to invoke g++/clang to compile it into a <code>.so</code>, but I would rather not write the string to disk first and have that as an intermediate step.</p>
<p>I have looked online for g++/clang bindings in python, and they were all simply parsers(for example, <code>libclang</code>), and do not actually compile anything.</p>
<p>Is there an alternative method that I'm missing here? Or do I need to bite the bullet and use <code>subprocess</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Mat's comment in python3 using the <code>input</code> argument of <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer"><code>subprocess.run</code></a></p>
<p>This uses the fact that g++ accepts code from standard input when passed the file name <code>-</code>. Because there is no file name suffix, the compiler cannot guess the language, so it should be specified with <a href="https://gcc.gnu.org/onlinedocs/gcc/Overall-Options.html" rel="nofollow noreferrer"><code>-x</code></a>.</p>
<p>The <code>encoding</code> argument was added to make the input argument accept a string, otherwise it expects a bytes-like object.</p>
<pre class="lang-py prettyprint-override"><code>#!/usr/bin/python3

import subprocess
import locale

def compile_cpp(cpp_code_as_string, exe_name):
    command = ('g++', '-xc++', '-', '-o', exe_name)
    subprocess.run(command, input=cpp_code_as_string, encoding=locale.getpreferredencoding())

hello = '''
#include &lt;iostream&gt;

int main() {
  std::cout &lt;&lt; "Hello World!\\n";
  return 0;
}
'''

compile_cpp(hello, 'hello')
subprocess.run(['./hello'])
</code></pre>
</div>
<span class="comment-copy">You can pipe code to gcc (and probably clang) by using <code>-</code> as a filename, but you have to specify the language too if I remember correctly. (Something like <code>echo "c_code"|gcc -xc - -o whatever</code>.) Should be doable from python.</span>
<span class="comment-copy">Ah, nice one. Feel free to add that as an answer. If anyone has any python-only way to do it I would prefer that, but I'm happy with this method.</span>
<span class="comment-copy">I did this, except with <code>g++</code> for <code>gcc</code>, and it works. The reason <code>gcc</code> does not work is because <code>g++</code> finds your standard library headers.</span>
<span class="comment-copy">@OneRaynyDay: Yes, thank you, I missed the tag. Edited to C++.</span>
