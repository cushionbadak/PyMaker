<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5466451/how-can-i-print-literal-curly-brace-characters-in-python-string-and-also-use-fo">How can I print literal curly-brace characters in python string and also use .format on it?</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>In python, I'm trying to create a string by format()</p>
<pre><code>json_data_resp = '{"error":false,"code":"{0}","mac":"{1}","message":"Device configured successfully"}'.format(activation_code, macaddress)
</code></pre>
<p>When I execute this code, it gives me an error like so:</p>
<blockquote>
<p>KeyError: '"error"'</p>
</blockquote>
<p>What is it that I'm doing incorrectly?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should escape literal braces by doubling them:</p>
<pre><code>json_data_resp = '{{"error":false,"code":"{0}","mac":"{1}","message":"Device configured successfully"}}'.format(activation_code, macaddress)
</code></pre>
<p>Excerpt from <a href="https://docs.python.org/3.4/library/string.html#format-string-syntax" rel="nofollow noreferrer">Format String Syntax</a>:</p>
<blockquote>
<p>Format strings contain “replacement fields” surrounded by curly braces
  <code>{}</code>. Anything that is not contained in braces is considered literal
  text, which is copied unchanged to the output. If you need to include
  a brace character in the literal text, it can be escaped by doubling:
  <code>{{</code> and <code>}}</code>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can do <code>'%'</code> for string formatting:</p>
<pre><code>json_data_resp = '{"error":false,"code":"%s","mac":"%s","message":"Device configured successfully"}'%(activation_code, macaddress)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is trying to insert a variable inside of the curly braces you put around the entire string. If you want to have curly braces in a formatted string, you have to use two.</p>
<pre><code>string = "{{test_number: {0}}}".format(37)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">Format strings</a> have fields inside curly braces. Each field has an optional number, name, or expression, and optional <code>:spec</code>, and an optional <code>!conversion</code>.</p>
<p>So, when you use this as a format string:</p>
<pre><code>'{"error":false,"code":"{0}","mac":"{1}","message":"Device configured successfully"}'
</code></pre>
<p>You have a field named <code>"error"</code>, with spec <code>false,"code":"{0}","mac":"{1}","message":"Device configured successfully"</code>.</p>
<p>To format that field, you need a keyword parameter named <code>"error"</code>, and of course you don't have one.</p>
<hr/>
<p>Obviously, you didn't want that whole thing to be a field. But that means you need to escape the braces by doubling them:</p>
<pre><code>'{{"error": false,"code":"{0}","mac":"{1}","message":"Device configured successfully"}}'
</code></pre>
<p>Or, better… why are you trying to create a JSON string by <code>str.format</code> in the first place? Why not just create a dict and serialize it?</p>
<pre><code>json_data_resp = json.dumps({
    "error": False, "code": activation_code, "mac": macaddress,
    "message": "Device configured successfully"})
</code></pre>
</div>
<span class="comment-copy"><code>format</code> looks for <code>{}</code> to replace for the values. You have one big <code>{}</code> with some small <code>{]</code>s inside. Thats not valid syntax</span>
<span class="comment-copy">OK, can you please correct this?</span>
<span class="comment-copy">You shouldn't be using <code>str.format</code> to create JSON strings in the first place.</span>
<span class="comment-copy">Due to memory limitations of micropython, its recommended I use format : <a href="https://docs.micropython.org/en/latest/esp8266/reference/constrained.html" rel="nofollow noreferrer">docs.micropython.org/en/latest/esp8266/reference/…</a></span>
<span class="comment-copy">Since I'm using micropython, the format is what is recommended instead of concatenation. This is exactly what I was unable to catch. Thanks</span>
