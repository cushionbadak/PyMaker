<div class="post-text" itemprop="text">
<p>Suppose such a function:</p>
<pre><code> In [56]: def add_numbers(x, y): return x + y
</code></pre>
<p>When I use it without parentheses</p>
<pre><code>In [57]: add_numbers
Out[57]: &lt;function __main__.add_numbers(x, y)&gt;
</code></pre>
<p>What's <code>__main__</code> for here?<br/>
It does not lie in <code>add_numbers</code>s standard or meta attributes:</p>
<pre><code>In [59]: "__main__" in dir(add_numbers)
Out[59]: False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are seeing an IPython feature.  It uses a pretty-printer which prepends the module name to the function's <a href="https://www.python.org/dev/peps/pep-3155/" rel="nofollow noreferrer">qualified name</a>.  If you disable the pretty-printer, you will get the <a href="https://github.com/python/cpython/blob/b92c526ed5da474694f89e29d82565f2a654c29b/Objects/funcobject.c#L554-L559" rel="nofollow noreferrer">usual function repr</a>:</p>
<pre><code>&gt;&gt;&gt; def add_numbers(x, y): return x + y
... 
&gt;&gt;&gt; add_numbers
&lt;function __main__.add_numbers(x, y)&gt;
&gt;&gt;&gt; %pprint
Pretty printing has been turned OFF
&gt;&gt;&gt; add_numbers
&lt;function add_numbers at 0x107921598&gt;
</code></pre>
<p>The function's module is <code>__main__</code> because you've defined it interactively.  If you had imported it from some other module, you would see the module name there instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="http://docs.python.org/3/library/__main__.html" rel="nofollow noreferrer">the documentation</a>:</p>
<blockquote>
<p><code>'__main__'</code> is the name of the scope in which top-level code
  executes. A moduleâ€™s <code>__name__</code> is set equal to <code>'__main__'</code> when read
  from standard input, a script, or from an interactive prompt.</p>
</blockquote>
<p>Since you are running Python from standard input, the module name is set to <code>'__name__'</code>, and all the variables and functions defined are in the scope of this module.</p>
</div>
<span class="comment-copy">I wrote this code but my code prints something else: <code>def main():&lt;br&gt; 	def add_numbers(x, y): return x + y 	print(add_numbers)  if __name__ == '__main__': 	main()</code> I got this:   <code>&lt;function main.&lt;locals&gt;.add_numbers at 0x7f21d39f40d0&gt;</code></span>
