<div class="post-text" itemprop="text">
<p>I am creating a nested dictionary that describes several cases ('1ql' and '2ql'), each with a different number of variations ('var0', 'var1', ...). I use dict comprehension in the following manner:</p>
<pre><code>from numpy import random as rnd

QLS = {
    key: {
        idx: rad
        for idx, rad in enumerate(['var{}'.format(i) for i in range(rnd.randint(1, 4))])
        }
    for key in ['1ql', '2ql']
    }
</code></pre>
<p>This works great, but I have been struggling with the how to handle the dictionary for saving to file(s). I would like to iterate over each variation of '1ql', and then iterate simultaneously over each iteration of '2ql'. This can easily be accomplished like this:</p>
<pre><code>for key1, val1 in QLS['1ql'].items():
    for key2, val2 in QLS['2ql'].items():
        print('1ql: {}, 2ql: {}'.format(val1, val2))
</code></pre>
<p>which, for 2 variations of '1ql' and 3 variation '2ql', produces 6 total permutations:</p>
<pre><code>1ql: var0, 2ql: var0
1ql: var0, 2ql: var1
1ql: var0, 2ql: var2
1ql: var1, 2ql: var0
1ql: var1, 2ql: var1
1ql: var1, 2ql: var2
</code></pre>
<p>However, I would like to get this automatically for any number of cases, for any number of variations per case, without having to specify these by hand. I have tried different iteration schemes and even by inverting the inner and outer keys, but to no avail.</p>
<p>I would really like the to learn the most pythonic way to accomplish this. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>First, transform the data to remove the parts we don't need:</p>
<pre><code>x = [[(case, var) for var in QLS[case].values()] for case in QLS.keys()]
</code></pre>
<p>Now <code>x</code> is something like:</p>
<pre><code>[[('1ql', 'var0'), ('1ql', 'var1'), ('1ql', 'var2')],
 [('2ql', 'var0'), ('2ql', 'var1'), ('2ql', 'var2')]]
</code></pre>
<p>Finally, use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product()</code></a> to get the result:</p>
<pre><code>list(itertools.product(*x))
</code></pre>
<p>Probably in your real code you'll iterate over the results and use <code>print()</code> on each one to get the format you need, but wrapping with <code>list()</code> as above gives you an idea:</p>
<pre><code>[(('1ql', 'var0'), ('2ql', 'var0')),
 (('1ql', 'var0'), ('2ql', 'var1')),
 (('1ql', 'var0'), ('2ql', 'var2')),
 (('1ql', 'var1'), ('2ql', 'var0')),
 (('1ql', 'var1'), ('2ql', 'var1')),
 (('1ql', 'var1'), ('2ql', 'var2')),
 (('1ql', 'var2'), ('2ql', 'var0')),
 (('1ql', 'var2'), ('2ql', 'var1')),
 (('1ql', 'var2'), ('2ql', 'var2'))]
</code></pre>
</div>
<span class="comment-copy">Side note: that bunch of code using <code>enumerate</code> to build the value for <code>key</code> can be written simply as <code>{i: 'var{}'.format(i) for i in range(rnd.randint(1, 4))}</code></span>
