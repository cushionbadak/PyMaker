<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11265603/how-do-i-export-the-output-of-pythons-built-in-help-function">How do I export the output of Python's built-in help() function</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>So I was looking at the help() documentation of a module but soon realized it was very tedius to read the documentation in the small output box. So therefore I tried pasting the help() documentation to another file for more clearer reading.</p>
<pre><code>myfile = open("file.txt","w") 
myfile.write(str(help(random)))
myfile.close()
</code></pre>
<p>Instead of the documentation being written, it instead pasted in <code>None</code>.</p>
<p>Any ideas how to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer is <a href="https://docs.python.org/3/library/pydoc.html" rel="nofollow noreferrer">pydoc</a>!. Run it from the console:</p>
<pre><code>$ pydoc [modulename] &gt; file.txt
</code></pre>
<p>and it will basically write the output of the <code>help()</code> command to <code>file.txt</code></p>
</div>
<div class="post-text" itemprop="text">
<p>i'm not suggesting you should read the python documentation this way - but here is what you could do: you could redirect <code>stdout</code> and call <code>help</code>:</p>
<pre><code>from contextlib import redirect_stdout
import random

with open('random_help.txt', 'w') as file:
    with redirect_stdout(file):
        help(random)
</code></pre>
<p>or, even simpler (as suggested by Jon Clements):</p>
<pre><code>from pydoc import doc
import random

with open('random_help.txt', 'w') as file:
    doc(random, output=file)
</code></pre>
</div>
<span class="comment-copy">Any reason why you don't read the files that are available online, i.e. the documentation?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#help" rel="nofollow noreferrer"><code>help()</code></a> does not return anything.</span>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer"><code>random</code></a> documentation is available online.</span>
<span class="comment-copy">I guess that works too; was interested if there was a way to paste it on a document.</span>
<span class="comment-copy">Are you looking for <a href="https://stackoverflow.com/questions/4675728/redirect-stdout-to-a-file-in-python">Redirect stdout to a file in Python?</a></span>
<span class="comment-copy">did not know that one! thanks!</span>
<span class="comment-copy">You can avoid redirecting standard out... Use <code>pydoc.doc(random, output=file)</code> to explicitly write the output to a stream.</span>
<span class="comment-copy">@JonClements thanks for the suggestion! added it to the answer.</span>
