<div class="post-text" itemprop="text">
<p>I was going through the CPython source code I found the following piece of code from the standard library(<a href="https://github.com/python/cpython/blob/master/Lib/ast.py#L60" rel="nofollow noreferrer"><code>ast.py</code></a>).</p>
<pre><code>        if isinstance(node.op, UAdd):
            return + operand
        else:
            return - operand
</code></pre>
<p>I tried the following in my python interpreter</p>
<pre><code>&gt;&gt;&gt; def s():
...     return + 1
...
&gt;&gt;&gt; s()
1
</code></pre>
<p>But this is same as the following right?</p>
<pre><code>def s():
    return 1
</code></pre>
<p>Can any one help me to understand what does the expression <code>return +</code> or <code>return -</code> do in python and when we should use this?</p>
</div>
<div class="post-text" itemprop="text">
<p>plus and minus in this context are <a href="https://en.wikipedia.org/wiki/Unary_operation" rel="nofollow noreferrer">unary operators</a>. That is, they accept <strong>a single operand</strong>. This is in comparison to the binary operator <code>*</code> (for example) that operates on <strong>two operands</strong>. Evidently <code>+1</code> is just <code>1</code>. So the unary operator <code>+</code> in your return statement is redundant. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>return + operand</code> is equivalent to <code>return operand</code> (if operand is a number). The only purpose I see is to insist on the fact that we do not want the opposite of <code>operand</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Both <code>+</code> and <code>-</code> can be used as unary or binary operators. In your case they are used as unary operators. <code>return + operand</code> is the same as <code>return operand</code>. We are used to see them in the form of <code>return +operand</code> or <code>return -operand</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I haven't studied the code, so I don't know for sure, but Python allows overriding <a href="https://docs.python.org/3/library/operator.html" rel="nofollow noreferrer">unary operator behavior</a>:</p>
<blockquote>
<p><code>__pos__(self)</code> Implements behavior for unary positive (e.g. +some_object)</p>
<p><code>__neg__(self)</code> Implements behavior for negation (e.g. -some_object)</p>
</blockquote>
<p>So <code>operand</code> in your case could be an object of a class which overrides those magic methods.</p>
<p>This means that <code>return + operand</code> is NOT equivalent to <code>return operand</code>.</p>
</div>
<span class="comment-copy">it seems that it is just for underlining that if True we use "+" if False we use "-"</span>
