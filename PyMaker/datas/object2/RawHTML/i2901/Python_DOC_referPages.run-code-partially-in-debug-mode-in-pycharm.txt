<div class="post-text" itemprop="text">
<p>I'd like to run some Python code in debugger mode in PyCharm. My code includes an API function call, and for some reason, that single function call takes forever in debugger mode. </p>
<p>I really do not care about debugging that specific function, and having debugger skip over that function (only run it in regular mode) is fine. However, I'd like to be able run the rest of my code in debug mode.</p>
<p>Is this doable in PyCharm or is there any Python workaround?</p>
<pre><code># some code to be run in debugger mode, e.g.
func_a(obj_a) #this function modifies obj_a

# some API function call, super slow in debugger mode. can I just run this part in run mode? e.g.
obj_b = api_func(obj_a)

# rest of the code to be run in debugger mode e.g.
func_c(obj_b)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>Potentially</em> you could use <a href="https://docs.python.org/3/library/sys.html#sys.gettrace" rel="nofollow noreferrer"><code>sys.gettrace</code></a> and <a href="https://docs.python.org/3/library/sys.html#sys.settrace" rel="nofollow noreferrer"><code>sys.settrace</code></a> to remove the debugger while your API call runs, though it's not recommended, and PyCharm will complain at you if you do:</p>
<blockquote>
<p>PYDEV DEBUGGER WARNING:<br/>
  sys.settrace() should not be used when the debugger is being used.<br/>
  This may cause the debugger to stop working correctly.<br/>
  If this is needed, please check:<br/>
<a href="http://pydev.blogspot.com/2007/06/why-cant-pydev-debugger-work-with.html" rel="nofollow noreferrer">http://pydev.blogspot.com/2007/06/why-cant-pydev-debugger-work-with.html</a><br/>
  to see how to restore the debug tracing back correctly.</p>
</blockquote>
<p>In your case, you'd do something like this:</p>
<pre><code>import sys

# some code to be run in debugger mode, e.g.
func_a(obj_a) #this function modifies obj_a

# Remove the trace function (but keep a reference to it).
_trace_func = sys.gettrace()
sys.settrace(None)

# some API function call, super slow in debugger mode. can I just run this part in run mode? e.g.
obj_b = api_func(obj_a)

# Put the trace function back.
sys.settrace(_trace_func)

# rest of the code to be run in debugger mode e.g.
func_c(obj_b)
</code></pre>
<p>I would <em>strongly</em> recommend keeping the code you run while the debugger is disabled as short as possible.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can right-click on a breakpoint and set condition <a href="https://i.stack.imgur.com/Xepzz.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Xepzz.png"/></a></p>
</div>
<span class="comment-copy">can't you comment out the part you want to skip?</span>
<span class="comment-copy">No, I cannot. The rest of the code depends on execution of the api function call. It is just that I do not specifically need the function to be run in debugger mode.</span>
<span class="comment-copy">set a breakpoint before the call, a breakpoint after, then just execute normally (not stepping) till the next breakpoint.</span>
<span class="comment-copy">@Srini I had already tried that with Resume Program (F9) when it hits the first breakpoint and it does not work. By executing normally, do you mean some other way to run the function call?</span>
<span class="comment-copy">No I meant resume program, so it never reaches the breakpoint after the API call?</span>
<span class="comment-copy">Thank you for the detailed response, works fine for me now. I'm new to Python programming and I knew there should be a solution similar to this unless PyCharm blocks any manipulation of the debugger which they don't :)</span>
<span class="comment-copy">Works like a charm!</span>
