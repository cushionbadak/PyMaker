<div class="post-text" itemprop="text">
<p>I've been trying to debug my code for some hours and haven't had a headway with it. I love if anyone could help me, I just started learning algorithms</p>
<pre><code>def quicksort(arr):
    start = 0
    end = len(arr) - 1
    quick_sort(arr, start, end)


def quick_sort(arr, start, end):
    if start &lt; end:
        pindex = partition(arr, start, end)
        quick_sort(arr, start, pindex)
        quick_sort(arr, pindex+1, end)


def partition(arr, start, end):
    pivot = arr[end]
    i = start
    for j in range(start, end):
        if arr[j]&lt;= pivot:
            arr[i], arr[j] = arr[j], arr[i]
            i += 1
    arr[i], arr[end] = pivot, arr[i]
    return i;
</code></pre>
<p>when i run it with <code>quicksort([6,4,5,4,2,43,1,4,532,515,243,3,34,5,12,24,234,45,6,457,5])</code></p>
<p>I get </p>
<blockquote>
<p>RecursionError: maximum recursion depth exceeded in comparison</p>
</blockquote>
<p>and I'm quite sure I used a base case at the beginning of the quick_sort function</p>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>quicksort</code> and <code>quick_sort</code> routine use, as parameters, the index of the first and of the last item in the sub-array to be sorted. After you partition the sub-array, you sort two parts. However, <em>you include the pivot element</em> of the partition in the first part in your call <code>quick_sort(arr, start, pindex)</code>. You should <em>leave the pivot element out</em>, so use <code>quick_sort(arr, start, pindex-1)</code>.</p>
<p>Give that a try. You have no comments so it is difficult to debug your program. Your example input is also far too large and difficult to debug easily. Try an empty array, then an array with one element, then some arrays with two elements, and so on, to catch your errors.</p>
<p>With that one change, your program now passes all my tests.</p>
</div>
<span class="comment-copy">@RoryDaulton Done That</span>
<span class="comment-copy">Actually, you did not "show ... the full traceback for any errors." It would also be best to include your call to your function, with its input, in your code.</span>
<span class="comment-copy">You can try to increase recursion depth using <a href="https://docs.python.org/3/library/sys.html#sys.setrecursionlimit" rel="nofollow noreferrer">sys.getrecursionlimit</a>. But do it carefully.</span>
<span class="comment-copy">Thanks a lot. It was really helpful</span>
