<div class="post-text" itemprop="text">
<p>I'm using the code below to find all the elements with class value = "ng_isolate_scope". What I would need to do though is to capture the tag value of the selected elements, since I need this information for further analysis</p>
<pre><code>&lt;span class="ng-isolate-scope"&gt;
&lt;div class="ng-isolate-scope"&gt;
</code></pre>
<p>Code:</p>
<pre><code>elems = driver.find_elements_by_class_name("ng-isolate-scope")
for elem in elems:
    tag_value = elem.get_tag()
    print("element found with tag value = " + str(tag_value))
</code></pre>
<p>However, tag_value() doesn't exist. What can I do to capture the tag value of an element?
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>updated:
Its bit tricky, here my approach is to get outerHTML of element and then splitting the first word (which is tag name). So you can try:</p>
<pre><code>    elements = driver.find_elements_by_class_name("ng-isolate-scope")
    for element in elements:
      outerhtml = element.get_attribute('outerHTML ') // to extract outerHTML 
      tag_value=outerhtml.split('',1)[0] // to extract first word
      print("element found with tag value = " + tag_value)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I right understand, you want a text of a tag:</p>
<pre><code>elems = driver.find_elements_by_class_name("ng-isolate-scope")
for elem in elems:
    tag_value = elem.text # get text of an element
    print("'element found with tag value = " + tag_value + "'")
</code></pre>
<p>for example:</p>
<pre><code>&lt;span class="ng-isolate-scope"&gt;span tag&lt;/span&gt;
&lt;div class="ng-isolate-scope"&gt;div tag&lt;/div&gt;
</code></pre>
<p>will produce:</p>
<pre><code>'element found with tag value = span tag'
'element found with tag value = div tag'
</code></pre>
<hr/>
<p>EDIT:</p>
<pre><code>from bs4 import BeautifulSoup
from html.parser import HTMLParser

driver = webdriver.Chrome()
driver.get("https://stackoverflow.com/questions/51789088/python-selenium-get-tag-value-of-a-selected-element/51789139#51789139")
parsed_html = BeautifulSoup(driver.page_source) # get HTML

list = list() # create a list

class MyHTMLParser(HTMLParser):
    def handle_starttag(self, tag, attrs): # get start tags
        list.append(tag) # store them in the list


parser = MyHTMLParser()
parser.feed(str(parsed_html.body.find('div', attrs={'id':'question-header'}))) # feed parser with parsed HTML

print(list[0]) # first element in the list is the tag you need
</code></pre>
<p>Output:</p>
<pre><code>div
</code></pre>
<p>Reference to the <a href="https://docs.python.org/3/library/html.parser.html" rel="nofollow noreferrer">documentation</a>.</p>
</div>
<span class="comment-copy">Are you have tried Xpath and CSS selector rather than class_name?</span>
<span class="comment-copy">thanks for the answer but this seems like Andrei's answer above. I'm aware of element.text but I don't need the text of an element, I would need the value of element's tag (usually div, span, a, input, button, ecctera...)</span>
<span class="comment-copy">check my updated answer above</span>
<span class="comment-copy">thanks, I immediately tried thinking this was exactly what I needed but for some weird reason it only gets the text of the element and not the html. I tried it on a bunch of elements but it doesn't seem to capture the html code. Does it work on your end?</span>
<span class="comment-copy">so I changed the code from inner to outerHTML and it worked! Thanks for your help</span>
<span class="comment-copy">sorry, I made a mistake here. You are right it is outerHTML instead of innerHTML. I have updated my answer. Please accept this as an answer if it helped you in anyway. Thanks</span>
<span class="comment-copy">thank you Andrei. What I would need is the actual tag value "span" and "div". I don't think elem.text does the job. I give you another more concrete example. If you go to this sample page: <a href="https://learn.letskodeit.com/p/practice" rel="nofollow noreferrer">learn.letskodeit.com/p/practice</a>  and check the html code of the "Hide/Show Example" element, what I need to capture is the tag of that element, that in this case would be "input".</span>
<span class="comment-copy">I have adde a working example, please have a look.</span>
<span class="comment-copy">Many thanks Andrei. I was after a selenium solution but appreciated your support.</span>
