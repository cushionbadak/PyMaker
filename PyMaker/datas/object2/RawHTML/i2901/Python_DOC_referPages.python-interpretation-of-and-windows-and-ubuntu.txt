<div class="post-text" itemprop="text">
<p>I have depeloped a flask application that displays information on charts. </p>
<ul>
<li>Windows 10</li>
<li>Python 3.6.6</li>
<li>conda 4.5.4</li>
</ul>
<p>I have then deployed the application on:</p>
<ul>
<li>Ubuntu Server 18.04</li>
<li>conda 4.5.4</li>
<li>python 3.6.6 </li>
</ul>
<p>I then try to execute the application but for some reason I get errors on ubuntu that I did not get on windows. One of these errors is regarding the access to files. </p>
<pre><code>FileNotFoundError: [Errno 2] No such file or directory: '/home/myuser/projects/myflaskappe/mod_on/queries\\prices.sql'
</code></pre>
<p>I access that file and it is there, the user has permission to access it. 
Then I decide to modify the python code that refers to that document:</p>
<pre><code># original code 
data_objects = {'prices': {
    'sql-path': r'queries\prices.sql',
    'source': 'my_db',
    'flavor': 'mysql'}
    }
</code></pre>
<p>I have found that if I modify the code from <code>\</code> to <code>/</code> then it works perfectly. </p>
<pre><code># modified code 
    data_objects = {'prices': {
        'sql-path': r'queries/prices.sql',
        'source': 'my_db',
        'flavor': 'mysql'}
        }
</code></pre>
<p>If you notice, I have only modify <code>\</code> for <code>/</code> to make it work. </p>
<p>Why is the reason for this? </p>
<p>There are some other problems as similar to this one that I can't understand why they happen.</p>
</div>
<div class="post-text" itemprop="text">
<p>The reason is that Windows and *nix use different characters for paths to files. In Windows, it is <code>\</code>, and in *nix it is <code>/</code>.</p>
<p>To make your code cross-platform compatible, you should consider using <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join()</code></a>. For example:</p>
<pre><code>import os
print(os.path.join("queries", "prices.sql"))
</code></pre>
<p>This will give you "queries/prices.sql" on *nix, and "queries\prices.sql" on Windows.</p>
</div>
<span class="comment-copy">Related: <a href="//stackoverflow.com/q/38428561">Difference between forward slash (/) and backslash () in file path</a></span>
<span class="comment-copy">Pretty sure Windows will also accept forward slashes in most cases (not on the command line, though, because it clashes with their options).</span>
<span class="comment-copy">@L3viathan Windows might, but I would still recommend <code>os.path</code> regardless. It has a semantically descriptive name, is a widely tested library function, and if in the future the code is to be ported to some obscure OS with weird path names, it can still be extended easily.</span>
<span class="comment-copy">I am in the process of deploying it with the changes but seems like it is the solution.</span>
