<div class="post-text" itemprop="text">
<p>I want to open the file as output. </p>
<blockquote>
<p>It turned out "exit"</p>
</blockquote>
<p>However, I want to <code>read</code> the file or <code>write</code> the file. Through the test, it seems not
the <code>IOError</code>. How to open the file? </p>
<p>I tried several codes and still could not find the way to open it.     </p>
<pre><code>try:
    my_file_handle=open("/Users/name/Desktop/Trip.docx")
except IOError:
    print("File not found or path is incorrect")
finally:
    print("exit")
</code></pre>
<p>Then, I changed "docx" to "doc" and add 'r' mode and call it. </p>
<p>I tried:</p>
<pre><code>    try:
        my_file_handle=open('/Users/name/Desktop/Trip.doc','r')
        my_file_handle.read()
        print("hi")
    except IOError:
        print("File not found or path is incorrect")
    finally:
        print("exit")
</code></pre>
<blockquote>
<p>it turned out "exit" and   my_file_handle.read()</p>
<blockquote>
<p>File"/usr/local/Cellar/python3/3.6.2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/codecs.py", line 321, in decode
        (result, consumed) = self._buffer_decode(data, self.errors, final)</p>
<p>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xd0 in position
    0: invalid continuation byte</p>
</blockquote>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Have you tested if the file is actually open at the end of the block? Because I think you'll find it is. The code in the 'finally' part of a try: except: block is obeyed regardless of whether there is an exception or not.</p>
<p>From the python documentation:</p>
<p>If finally is present, it specifies a ‘cleanup’ handler. The try clause is executed, including any except and else clauses. If an exception occurs in any of the clauses and is not handled, the exception is temporarily saved. The finally clause is executed. If there is a saved exception it is re-raised at the end of the finally clause. If the finally clause raises another exception, the saved exception is set as the context of the new exception. If the finally clause executes a return or break statement, the saved exception is discarded:</p>
</div>
<div class="post-text" itemprop="text">
<p>When opening the file, you have to specify your intensions.
For writing that would be:</p>
<pre><code>    my_file_handle=open("/Users/name/Desktop/Trip.docx","w")
</code></pre>
</div>
<span class="comment-copy">What’s your error message? I believe when opening a file you need to specify whether you’re reading, writing, etc.</span>
<span class="comment-copy">I want to read it.</span>
<span class="comment-copy">What are you planning to do with the open file? <code>docx</code> files are zip files so you should open them in binary mode (<code>mode='rb'</code>). Also you can open them with <a href="https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile" rel="nofollow noreferrer"><code>zipfile.ZipFile('/Users/name/Desktop/Trip.docx')</code></a>  and access the archived files.</span>
<span class="comment-copy">I tried "rb". It could not work.</span>
<span class="comment-copy">Again, what do you want to do with the file once opened? Perhaps a library like <a href="https://pypi.org/project/python-docx/" rel="nofollow noreferrer"><code>python-docx</code></a> would be more useful.</span>
<span class="comment-copy">No, it still could not open the file.</span>
<span class="comment-copy">Curious - and there is no traceback? Or other sign of an exception?</span>
<span class="comment-copy">Actually, can you try this for me? "with open(/Users/name/Dexktop/Trip.docx" as f: &lt;newline&gt;&lt;indent&gt;r=f.read(20)&lt;newline&gt;' where &lt;..&gt; are the actions within the angle brackets and see if r contains anything afterewards?</span>
<span class="comment-copy">From my comment in reply to @Caligary above can you try specifying a second parameter to the open of 'rb'. The  b is for binary. .docx file are in effect sipped .doc files.</span>
<span class="comment-copy">try 'rb'. It still could not work.</span>
<span class="comment-copy">No, you don't but if you don't r is implied. Actually, that gives me an idea... is this because  .docx files are binary?</span>
<span class="comment-copy">I tried another --&gt;.pages . It still could not work.</span>
