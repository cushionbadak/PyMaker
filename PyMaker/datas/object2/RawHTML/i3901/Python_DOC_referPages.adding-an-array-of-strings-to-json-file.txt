<div class="post-text" itemprop="text">
<p>Hi am I trying to add elements from an array to a JSON file I would like to have each element of the array to be on their own line I currently have this </p>
<pre><code>while i &lt; num:
    name1= tweet_list[i]
    name1 = re.sub(r'(https|http)?:\/\/(\w|\.|\/|\?|\=|\&amp;|\%)*\b|\n|@', '', name1, flags=re.MULTILINE)
    print name1
    judge = input("1 pos, 2 neg, 3 skip: ")
    if judge == 1:
        pos_name.append(name1)
    elif judge == 2:
        neg_name.append(name1)
    i += 1

    with open("pos_names.json", "a") as p:
        json.dump(pos_name, p)
    with open("neg_names.json", "a") as n:
        json.dump(neg_name,n)
</code></pre>
<p>This code puts all the elements on 1 line but for some reason in the file there are always empty elements [] in the front</p>
</div>
<div class="post-text" itemprop="text">
<p>This is happening because you are opening the output files in append mode (the <code>"a"</code> flag as second arg to <code>open</code>), which means that anything written to the file will be <em>appended</em> to the current contents; and you are dumping the list to the file <em>in each iteration</em> of the <code>while</code> loop. (this is also why you have empty lists in the front - during the first few iterations <code>pos_name</code> and/or <code>neg_name</code> may still be an empty list). Try opening the file in write mode <code>"w"</code> and writing the json dump <em>after</em> the loop is finished. Something like this:</p>
<pre><code>while i &lt; num:
    # etc. what you had before

# this after the loop
with open("pos_names.json", "w") as p:
    json.dump(pos_name, p)
with open("neg_names.json", "w") as n:
    json.dump(neg_name,n)
</code></pre>
<p>Note that this will still output everything on a single line - you can use the <code>indent</code> kwarg to <code>json.dump</code> to pretty print it if that's what you want. (see the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">python docs</a> for usage examples.) Also example below (ipython session - json.dumps outputs to stdout instead of a file):</p>
<pre><code>In [8]: import json

In [9]: print(json.dumps(['one', 'two', 'three']))
["one", "two", "three"]

In [10]: print(json.dumps(['one', 'two', 'three'], indent=2))
[
  "one",
  "two",
  "three"
]
</code></pre>
</div>
<span class="comment-copy">If it's a valid json file, how do you care about how it looks?  Why aren't you loading the json, adding to the array, then saving it again?</span>
