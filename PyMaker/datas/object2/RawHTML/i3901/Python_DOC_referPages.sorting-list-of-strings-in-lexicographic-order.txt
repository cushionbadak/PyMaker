<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/13954841/sort-list-of-strings-ignoring-upper-lower-case">Sort list of strings ignoring upper/lower case</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I want to print the words in lexicographic order. I thought <code>sorted()</code> arranges the words in this way. I have also tried <code>.sort()</code> which returns the same order. Or am I missing something with what lexicographic order really is?</p>
<p>Code:</p>
<pre><code>a_list = ['Zrhregegrydb', 'cygzRFWDWBdvF']
for word in sorted(a_list):
    print(word)
</code></pre>
<p>Output:</p>
<pre><code># Zrhregegrydb
# cygzRFWDWBdvF
</code></pre>
<p>Desired Output:</p>
<pre><code># cygzRFWDWBdvF
# Zrhregegrydb
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is because the ASCII value of upper-case letters is smaller than lower-case. If you want your sort to ignore case you can do this, for example:</p>
<pre><code>for word in sorted(a_list, key=str.lower):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are missing something. In the standard, Unicode order (starting with the old ASCII order), all upper-case English letters come before all lower-case letters. You can see that in <a href="https://en.wikipedia.org/wiki/List_of_Unicode_characters#Basic_Latin" rel="nofollow noreferrer">a table of Unicode characters</a>.</p>
<p>If you want to ignore the case while sorting, as it seems you do, just temporarily convert all the letters to upper-case or to lower-case during the sort. Python allows you to do that in the <code>sorted</code> function with the <code>key</code> parameter, as you can see in other answers here (finished before I finished this answer).</p>
</div>
<div class="post-text" itemprop="text">
<p>By default, python already sorts strings in lexicographical order, but uppercase letters are all sorted before lowercase letters. If you want to sort strings and ignore case, then you can do</p>
<pre><code>b_list = sorted(a_list, key=str.lower)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could ignore the case when sorting:</p>
<pre><code>sorted_list = sorted(a_list, key = lambda s : s.lower())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to iterate using the indexes to see the right order.</p>
<p>Here is the code how you can do it.</p>
<pre><code>a_list = ['Zrhregegrydb', 'cygzRFWDWBdvF']
a_list.sort(reverse=True)
for i in range(0, len(a_list)):
    print a_list[i]
</code></pre>
</div>
<span class="comment-copy">Do you want to sort lower-case letters before upper-case letters, or completely ignore the case?</span>
<span class="comment-copy">Lexicographic order and case-insensitivity are seemingly independent but are in fact conflicting concepts. Letter casing is locale/culture-specific. Once you go there, you lose the concept of lexicographic order. Do you actually want a sort order based on the user's locale?</span>
<span class="comment-copy">specifying <code>str.lower</code> directly as the key is faster than calling a lambda which calls <code>str.lower</code>. Even better, use <a href="https://docs.python.org/3/library/stdtypes.html#str.casefold" rel="nofollow noreferrer"><code>str.casefold</code></a>.</span>
<span class="comment-copy">@PM2Ring Good point. It's less typing, too.</span>
<span class="comment-copy">And the loop from the OP is preferred to looping over <code>range()</code>.</span>
<span class="comment-copy">I did and it worked perfectly I tested the code then given the answer can you check again</span>
<span class="comment-copy"><a href="https://repl.it/@codeguru/TriangularNutritiousLicenses" rel="nofollow noreferrer">repl.it/@codeguru/TriangularNutritiousLicenses</a> I get the output as <code>xyz</code> first then <code>abc</code> which is in reverse alphabetical order. This is not the OP's desired result.</span>
<span class="comment-copy">If you want abc first just remove reverse=True and it will do the job I provided the code according to his requirement</span>
<span class="comment-copy">Yes, your code works for the example given. However, your proposed solution does not work for other possible inputs. Removing <code>reverse=True</code> just gives the original code from the question which is not a valid solution, either.</span>
