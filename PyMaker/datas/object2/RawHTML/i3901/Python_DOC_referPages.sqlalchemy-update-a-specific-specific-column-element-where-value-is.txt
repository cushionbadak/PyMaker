<div class="post-text" itemprop="text">
<p>I have a sqlite db, created as below:</p>
<pre><code>class VPN_routers(Base):
    __tablename__ = 'vpnrouters'
    __table_args__ = TABLE_ARGS
    sp_id = Column(String(), primary_key=True)
    router_id = Column(String())
    external_gw = Column(String())
    subnet_attached = Column(String())
    vpn_connectivity = Column(String()
</code></pre>
<p>and the contents of the table are as below:</p>
<pre><code>sp-10.1.10.148|66c49f9b-11c4-4|172.24.4.6|cb3a722e-2ec4-4caf-a34b-93004d885f28|NO
sp-10.1.10.147|282608ba-8870-l|172.24.4.7|Not Attached|NO
sp-10.1.10.149|44cc77fe-3b2e-4|172.24.4.7|50853e0b-918f-4c5f-8188-3acbb23a829a|NO
</code></pre>
<p>I wanted to update the row where sp_id="sp-10.1.10.147"(identifying using the sp_id) and update the subnet_id and vpn_connectivity to new values. after updating the table could be like this.</p>
<pre><code>sp-10.1.10.148|66c49f9b-11c4-4|172.24.4.6|cb3a722e-2ec4-4caf-a34b-93004d885f28|NO
sp-10.1.10.147|282608ba-8870-l|172.24.4.7|cbcbeiowj-d34f5tgygt-6g7ggrydwqrer3d|YES
sp-10.1.10.149|44cc77fe-3b2e-4|172.24.4.7|50853e0b-918f-4c5f-8188-3acbb23a829a|NO
</code></pre>
<p>I am trying to write this update as a function where I can have the feasibility to give anyone value as an identifier(not necessarily sp_id always) of the row, and its corresponding columns new elements as inputs to the function.</p>
<p>ex:</p>
<pre><code>update_DB(VPN_routers, identifier={'sp_id':"sp-10.1.10.147"}, changes={'subnet_attached': "cbcbeiowj-d34f5tgygt-6g7ggrydwqrer3d", 'vpn_connectivity':"YES"})
</code></pre>
<p>*Note: identifier and changes are not same always, the identifier will be of fixed length 1 but changes could be of variable length.</p>
<p>I have tried many methods, but I could not make it, completely relying on this post for an answer. </p>
</div>
<div class="post-text" itemprop="text">
<p>The "identifier" is easy to handle: just use <a href="http://docs.sqlalchemy.org/en/latest/orm/query.html#sqlalchemy.orm.query.Query.filter_by" rel="nofollow noreferrer"><code>Query.filter_by()</code></a> and <a href="https://docs.python.org/3/reference/expressions.html#calls" rel="nofollow noreferrer">unpack the given dictionary as keyword arguments</a>.</p>
<p>Since <a href="http://docs.sqlalchemy.org/en/latest/orm/query.html#sqlalchemy.orm.query.Query.update" rel="nofollow noreferrer"><code>Query.update()</code></a> accepts a dictionary with attribute names as keys, handling the changes is as easy as passing the dictionary forward:</p>
<pre><code>def update_DB(cls, identifier, changes):
    session.query(cls).\
        filter_by(**identifier).\
        update(changes, synchronize_session=False)
</code></pre>
<p>As long as both dictionaries use attribute names as keys, it'll work, but your example includes "subnet_id" as key, which is not an attribute of the mapped class. Perhaps it should've been "subnet_attached".</p>
</div>
