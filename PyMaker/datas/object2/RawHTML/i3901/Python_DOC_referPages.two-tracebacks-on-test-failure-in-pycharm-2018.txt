<div class="post-text" itemprop="text">
<p>I have simple tests in <code>site_tests.py</code> file:</p>
<pre><code>import unittest


class SiteTests(unittest.TestCase):

    def test(self):
        self.assertEqual('a', 'b')

if __name__ == '__main__':
     unittest.main()
</code></pre>
<p>When I run "Unittest in test_site.py" with default PyCharm configuration I'm getting:</p>
<pre><code>Testing started at 23:45 ...
C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\python.exe "C:\Program Files\JetBrains\PyCharm Community Edition 2018.1.3\helpers\pycharm\_jb_unittest_runner.py" --path C:/testSiteDemoTests/site_tests.py
Launching unittests with arguments python -m unittest C:/testSiteDemoTests/site_tests.py in C:\testSiteDemoTests


b != a

Expected :a
Actual   :b
 &lt;Click to see difference&gt;

Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.1.3\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py", line 829, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py", line 1202, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: 'a' != 'b'
- a
+ b


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py", line 59, in testPartExecutor
    yield
  File "C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py", line 605, in run
    testMethod()
  File "C:\testSiteDemoTests\site_tests.py", line 7, in test
    self.assertEqual('a', 'b')



Ran 1 test in 0.000s

FAILED (failures=1)

Process finished with exit code 1
</code></pre>
<p>The last part is very interesting since running this file without <code>_jb_unittest_runner.py</code> so <code>C:\testSite&gt;python lost_hat_tests.py</code>
the output is ok:</p>
<pre><code>F
======================================================================
FAIL: test (__main__.SiteTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "lost_hat_tests.py", line 7, in test
    self.assertEqual('a', 'b')
AssertionError: 'a' != 'b'
- a
+ b


----------------------------------------------------------------------
Ran 1 test in 0.000s

FAILED (failures=1)
</code></pre>
<p>Is there simple answer why that second message appearing in PyCharm runner?</p>
<p>I also run the test in console with <code>_jb_unittest_runner.py</code> - hmm two testSuites - interesting</p>
<pre><code>C:\testSiteDemoTests&gt;python "C:\Program Files\JetBrains\PyCharm Community Edition 2018.1.3\helpers\pycharm\_jb_unittest_runner.py" --path C:/testSiteDemoTests/site_tests.py
##teamcity[enteredTheMatrix timestamp='2018-05-20T23:59:59.931']
Launching unittests with arguments python -m unittest C:/testSiteDemoTests/site_tests.py in C:\testSiteDemoTests

##teamcity[testCount timestamp='2018-05-20T23:59:59.946' count='1']
##teamcity[testSuiteStarted timestamp='2018-05-20T23:59:59.946' locationHint='python&lt;C:\testSiteDemoTests&gt;://site_tests' name='site_tests' nodeId='1' parentNodeId='0']
##teamcity[testSuiteStarted timestamp='2018-05-20T23:59:59.946' locationHint='python&lt;C:\testSiteDemoTests&gt;://site_tests.SiteTests' name='SiteTests' nodeId='2' parentNodeId='1']
##teamcity[testStarted timestamp='2018-05-20T23:59:59.962' captureStandardOutput='true' locationHint='python&lt;C:\testSiteDemoTests&gt;://site_tests.SiteTests.test' name='test' nodeId='3' parentNodeId='2']
##teamcity[testFailed timestamp='2018-05-20T23:59:59.977' actual='b' details='Traceback (most recent call last):|n  File "C:\Program Files\JetBrains\PyCharm Community Edition 2018.1.3\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals|n    old(
self, first, second, msg)|n  File "C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py", line 829, in assertEqual|n    assertion_func(first, second, msg=msg)|n  File "C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\
lib\unittest\case.py", line 1202, in assertMultiLineEqual|n    self.fail(self._formatMessage(msg, standardMsg))|n  File "C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py", line 670, in fail|n    raise self.failureException(msg)
|nAssertionError: |'a|' != |'b|'|n- a|n+ b|n|n|nDuring handling of the above exception, another exception occurred:|n|nTraceback (most recent call last):|n  File "C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py", line 59, in t
estPartExecutor|n    yield|n  File "C:\Users\testSite\AppData\Local\Programs\Python\Python36-32\lib\unittest\case.py", line 605, in run|n    testMethod()|n  File "C:\testSiteDemoTests\site_tests.py", line 7, in test|n    self.assertEqual(|'a|', |'b|')|n' e
xpected='a' locationHint='python&lt;C:\testSiteDemoTests&gt;://site_tests.SiteTests.test' message='|nb != a|n' name='test' nodeId='3' parentNodeId='2' type='comparisonFailure']
##teamcity[testFinished timestamp='2018-05-20T23:59:59.977' duration='30' locationHint='python&lt;C:\testSiteDemoTests&gt;://site_tests.SiteTests.test' name='test' nodeId='3' parentNodeId='2']


Ran 1 test in 0.031s

FAILED (failures=1)
##teamcity[testSuiteFinished timestamp='2018-05-20T23:59:59.977' locationHint='python&lt;C:\testSiteDemoTests&gt;://site_tests.SiteTests' name='SiteTests' nodeId='2' parentNodeId='1']
##teamcity[testSuiteFinished timestamp='2018-05-20T23:59:59.977' locationHint='python&lt;C:\testSiteDemoTests&gt;://site_tests' name='site_tests' nodeId='1' parentNodeId='0']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://github.com/python/cpython/blob/master/Lib/traceback.py#L595" rel="nofollow noreferrer">This message shows up</a> in exception's formatting in Python 3 if <a href="https://docs.python.org/3/reference/simple_stmts.html#index-29" rel="nofollow noreferrer">another exception was raised in an exception handler or <code>finally</code> clause</a> for the first one:</p>
<blockquote>
<p>A similar mechanism works implicitly if an exception is raised inside an exception handler or a <code>finally</code> clause: the previous exception is then attached as the new exception’s <code>__context__</code> attribute</p>
</blockquote>
<p>Setting a breakpoint on the test in PyCharm, then stepping further into the machinery shows where this second exception is thrown. <code>_jb_unittest_runner</code> patches the assert methods in <code>unittest</code>:</p>
<p><code>PyCharm Community Edition\helpers\pycharm\_jb_unittest_runner.py</code>:</p>
<pre><code>from teamcity import unittestpy
</code></pre>
<p><code>PyCharm Community Edition\helpers\pycharm\teamcity\unittestpy.py</code>:</p>
<pre><code>def run(self, test):
    &lt;...&gt;
    patch_unittest_diff(subtest_filter)
    &lt;...&gt;
</code></pre>
<p><code>PyCharm Community Edition\helpers\pycharm\teamcity\diff_tools.py</code>:</p>
<pre><code>def patch_unittest_diff(&lt;...&gt;):

    old = unittest.TestCase.assertEqual

    def _patched_equals(self, first, second, msg=None):
        try:
            old(self, first, second, msg)
            return
        except AssertionError as native_error:
            if not test_filter or test_filter(self):
                error = EqualsAssertionError(first, second, msg)
                if error.can_be_serialized():
                    raise error
            raise native_error

    unittest.TestCase.assertEqual = _patched_equals
</code></pre>
</div>
<span class="comment-copy">Is there a fix for this?</span>
<span class="comment-copy">@mr.bjerre patch <code>_patched_equals</code> as per <a href="https://stackoverflow.com/questions/30235516/how-to-suppress-displaying-the-parent-exception-the-cause-for-subsequent-excep" title="how to suppress displaying the parent exception the cause for subsequent excep">stackoverflow.com/questions/30235516/…</a></span>
<span class="comment-copy">Not sure if it's that simple when I run my tests using nosetests through Pycharm IDE.</span>
<span class="comment-copy">@mr.bjerre Well, <a href="http://idownvotedbecau.se/nodebugging/" rel="nofollow noreferrer">go and check it out, do your homework</a>. I wrote what you need to do to step through the test machinery to find for yourself whatever is happening. If other code than what I've cited in the answer is at play in the case of <code>nosetests</code>, this question doesn't even apply.</span>
<span class="comment-copy">@ivan_pozdev well I have the exact same traceback so yes it does apply! I just haven't got experience patching.</span>
