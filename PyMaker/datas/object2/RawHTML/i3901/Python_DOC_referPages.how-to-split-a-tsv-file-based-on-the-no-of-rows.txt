<div class="post-text" itemprop="text">
<p>I need to split a tsv with 400000 rows into 4 csv files with 100000 rows. </p>
<p>My sample code:</p>
<pre><code>csvfile = open('./world_formatted.tsv', 'r').readlines()
filename = 1
for i in range(len(csvfile)):
    if i % 100000 == 0:
        open(str(filename) + '.tsv', 'w+').writelines(csvfile[i:i+100000])
        filename += 1
</code></pre>
<p>I am getting this error:</p>
<pre><code>'charmap' codec can't decode byte 0x8d in position 7316: character maps to &lt;undefined&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You might try to use  <code>open</code> with the <code>encoding=</code> named parameter, so that Python knows which encoding to read.</p>
<p>Without knowing this (looks like a Windows-CP1252 file according to the hex code, but I might be wrong) you're basically out of luck. On *nix oder MacOS you can use the <code>file</code> command that tries to make an educated guess of the encoding. </p>
<p>Second, you should probably not try to read everything in a list with <code>readlines()</code>. For really large files this is a memory hog. Better stream-read thru the file by iterating as shown below.</p>
<pre><code>MAXLINES = 100000

csvfile = open('./world_formatted.tsv', mode='r', encoding='utf-8')
# or 'Latin-1' or 'CP-1252'
filename = 0
for rownum, line in enumerate(csvfile):
    if rownum % MAXLINES == 0:
        filename += 1
        outfile = open(str(filename) + '.tsv', mode='w', encoding='utf-8')
    outfile.write(line)
outfile.close()
csvfile.close()
</code></pre>
<p>I'm sure you close the files after running, just added it to be sure. :-)</p>
<p>If you are on a *nix'ish operating system (or MacOS) you might want to check out the <code>split</code> command that does exactly this (and more): <a href="https://stackoverflow.com/questions/2016894/how-to-split-a-large-text-file-into-smaller-files-with-equal-number-of-lines">How to split a large text file into smaller files with equal number of lines?</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>csvfile = open('./formatted.tsv', 'r',encoding="ISO-8859-1").readlines()

filename = 1
for i in range(len(csvfile)):
    if i % 100000 == 0:
        open(str(filename) + '.tsv', 'w+',encoding="ISO-8859-1").writelines(csvfile[i:i+100000])
        filename += 1
</code></pre>
<p>This is the answer for the question, Thank you all for the help. </p>
</div>
<span class="comment-copy">Maybe try a different encoding? See the docs of <code>open</code>.</span>
<span class="comment-copy">Your file's encoding is something not supported by your current preferred encoding: <a href="https://stackoverflow.com/questions/9233027/unicodedecodeerror-charmap-codec-cant-decode-byte-x-in-position-y-character" title="unicodedecodeerror charmap codec cant decode byte x in position y character">stackoverflow.com/questions/9233027/â€¦</a></span>
<span class="comment-copy">not getting still the same error.</span>
<span class="comment-copy">Find a list of the supported standard encodings here: <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow noreferrer">docs.python.org/3/library/codecs.html#standard-encodings</a></span>
