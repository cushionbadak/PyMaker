<div class="post-text" itemprop="text">
<p>I have a string that looks like this:</p>
<pre><code>"2018-05-23-13:54:56.594000"
</code></pre>
<p>When i try to convert it to int, it gives me an error:</p>
<pre class="lang-none prettyprint-override"><code>ValueError: invalid literal for int() with base 10: '"2018-05-23-13:54:56.594000"'
</code></pre>
<p>Code:</p>
<pre><code>output_file = open(r"C:\PATH\123.acc.bin", "wb")

with open(r"C:\PATH\00000007.csv", newline='') as csvfile:
    sensor = csv.reader(csvfile, delimiter=',', quotechar='|')

    with open(r"C:\PATH\3dm2.csv", newline='') as csvfile:
        sensor2 = csv.reader(csvfile, delimiter=',', quotechar='|')

        for row, row2 in zip(sensor, sensor2):

            internalTimestamp  = int(row2[16])
            msInfile = (int(float(row2[12])*1000)) + (1523138400000+604800000)

            accX    = float(row[0])
            accY    = float(row[1])
            accZ    = float(row[2])
            roll    = float(row[3])
            pitch   = float(row[4])
            yaw     = float(row[5])

            accData2 = pack('f', accX)
            accData3 = pack('f', accY)
            accData4 = pack('f', accZ)
            accData5 = pack('f', roll)
            accData6 = pack('f', pitch)
            accData7 = pack('f', yaw)
            accData8 = pack('I', internalTimestamp)
            accData9 = pack('I', ValidData)
            accData10 = pack('q', msInfile)

            output_file.write(accData2)
            output_file.write(accData3)
            output_file.write(accData4)
            output_file.write(accData5)
            output_file.write(accData6)
            output_file.write(accData7)
            output_file.write(accData8)
            output_file.write(accData9)
            output_file.write(accData10)
            count += 1
</code></pre>
<p>This is my code where I pack data from two different csv files into one binary file.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want your datetime in unix format.</p>
<pre><code>import datetime
import time
s = "2018-05-23-13:54:56.594000"

d = datetime.datetime.strptime(s, "%Y-%m-%d-%H:%M:%S.%f")
print(time.mktime(d.timetuple()))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>1527063896.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That string is not in base 10.
It has dashes and other characters that are not in the base 10 system.</p>
<p>So, python cannot convert it to int</p>
</div>
<div class="post-text" itemprop="text">
<p>This is because you have non-numerical characters within the string. For <code>int()</code> to properly cast, you must pass it a string with only numerical characters.</p>
<p>Try to replace the non numerical characters in the string using the <code>.replace()</code> method before you pass the string in. <a href="https://www.tutorialspoint.com/python/string_replace.htm" rel="nofollow noreferrer">Here is some info on that method!</a></p>
<p>Additionally, you might want to convert the datetime into a integer representation. To do that, <a href="https://stackoverflow.com/questions/28154066/how-to-convert-datetime-to-integer-in-python">check out this previous question</a>!</p>
</div>
<span class="comment-copy">You have a date-time string what do you want it to be converted to?</span>
<span class="comment-copy">when you say you want to convert it into an int do you mean you want to convert it to unix time?</span>
<span class="comment-copy">I want to pack it into a binary file with a size of 4 bytes</span>
<span class="comment-copy">a MCVE will be <code>internalTimestamp = int("2018-05-23-13:54:56.594000")</code></span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer"><code>strptime()</code></a></span>
<span class="comment-copy">This works, thank you very much :)</span>
<span class="comment-copy">You are welcome :)</span>
