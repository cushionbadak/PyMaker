<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15392730/in-python-is-it-possible-to-escape-newline-characters-when-printing-a-string">In Python, is it possible to escape newline characters when printing a string?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>This code outputs a string of randomly generated characters. For
example: V86Ijgh(!y7l0+x</p>
<pre><code>import string
import random

password = ''.join([random.choice(string.printable) for i in range(15)])

print(password)
</code></pre>
<p>In the case that an escape character like \n appears</p>
<pre><code>V86Ijg\n!y7l0+x
</code></pre>
<p>and creates the output:</p>
<pre><code>V86Ijg 
!y7l0+x
</code></pre>
<p>because it initialized a new line
rather than printing out:</p>
<pre><code>V86Ij\n(!y7l0+x
</code></pre>
<p>like before.</p>
<p>What's the best way at avoiding the intended output of an escape character such as creating a new line, tab, etc, from being interpreted? I have no choice over the input because it is <strong>randomized</strong>. I want to know how to output the string in its raw form <strong>without removing characters</strong> from the original string. I want the password to be displayed as it was generated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should encode your string with escape characters if you want it to keep the special characters escaped, i.e.:</p>
<pre><code>print(password.encode("unicode_escape").decode("utf-8")) 
# on Python 2.x: print(password.encode("string_escape"))
</code></pre>
<p>Using <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow noreferrer"><code>repr()</code></a> will add single quotes around your string. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could make your own set of characters to select frome by taking out all whitespace characters from <code>string.printable</code>, using set operators:</p>
<pre><code>chars = ''.join(set(string.printable) - set(string.whitespace))

password = random.choice(chars)

key_length = 1
while(key_length &lt; 15):
        password += random.choice(chars)
        key_length = key_length + 1

print(password)
</code></pre>
<p>Note that this whole loop can be replaced by the list comprehension:</p>
<pre><code>password = ''.join([random.choice(chars) for _ in range(15)])
</code></pre>
<p><strong>Edit</strong> If you want to keep the escape and whitespace characters, but just want to print the password to your console, use the <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow noreferrer"><code>repr()</code></a> function:</p>
<pre><code>print(repr(password))
</code></pre>
</div>
<span class="comment-copy">Pass the list of characters you deem acceptable instead of using <code>string.printable</code>.</span>
<span class="comment-copy">You can use the <code>repr()</code> of a string to print our the special characters.</span>
<span class="comment-copy">I implemented the list comprehension and removed the while loop. However, this 'fix' doesn't <b>prevent</b> the program from interpreting an escape character and creating a new line during the output.</span>
<span class="comment-copy">See my edit, I think that would take care of it if it's just about printing, I guess I misinterpreted your question</span>
