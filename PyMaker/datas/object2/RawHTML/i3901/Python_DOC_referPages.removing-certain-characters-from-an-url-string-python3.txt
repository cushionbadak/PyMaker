<div class="post-text" itemprop="text">
<p>I finally figured how to convert my dictionary with data into a string which gives me the desired output. I was wondering how to make this code more dense. Any suggestions? </p>
<pre><code>import urllib.parse
import urllib.request
import re

#user input
start = '19851123'
end = '19851124'
stns = [('235','240')]
var = [('TEMP')]

#format input to dict
req = {
'start':start,
'end':end,
'vars':var,
'stns':stns
}

#format dict to url strg without modifing the 'safe characters'
q = urllib.parse.urlencode(req, doseq = True, safe="()',")

#removing the 'safe characters' and turn '+' into ':'
q = re.sub("[\(',\)]", "", q)
q = re.sub("\+", ":", q)

#combine the url and query
url = 'http://projects.knmi.nl/klimatologie/daggegeven/getdata_dag.cgi?%s' % q 


#create a handel with url+query
fhand = urllib.request.urlopen(url)

#print requested data whitout header
for line in fhand:
    if not line.decode().startswith('#'):
        print(line.decode().strip())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>By preprocessing your <code>req</code> input, you could avoid the need for <code>re</code>:</p>
<pre><code>req = {
  'start': 19851123,
  'end': 19851124,
  'vars': ['TEMP'],
  'stns': ['235:240'],
}

urllib.parse.urlencode(req, doseq=True, safe=':')
# 'start=19851123&amp;end=19851124&amp;vars=TEMP&amp;stns=235:240'
</code></pre>
<p>So you could limit your code to:</p>
<pre><code>from urllib.parse import urlencode
from urllib.request import urlopen


def main(parameters, url='http://projects.knmi.nl/klimatologie/daggegeven/getdata_dag.cgi'):
    query = urlencode(parameters, doseq=True, safe=':')
    with urlopen('{}?{}'.format(url, query)) as fhand:
        for line in fhand:
            if not line.startswith(b'#'):
                yield line.decode().strip()


if __name__ == '__main__':
    req = {
        'start': 19851123,
        'end': 19851124,
        'vars': ['TEMP'],
        'stns': ['235:240'],
    }
    for line in main(req):
        print(line)
</code></pre>
<p>But this feels cumbersome to modify the user input, so using <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a> might be beneficial. By the look of things, <code>vars</code> and <code>stns</code> could be of varying length so you might benefit from the <a href="https://docs.python.org/3/library/argparse.html#action" rel="nofollow noreferrer"><code>'append'</code> action</a> with a specific default case handling:</p>
<pre><code>import argparse
from urllib.parse import urlencode
from urllib.request import urlopen


def command_line_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('start', type=int)
    parser.add_argument('end', type=int)
    parser.add_argument('-v', '--vars', action='append')
    parser.add_argument('-s', '--stns', action='append', nargs=2, type=int)
    return parser


def parse_command_line(parser):
    args = parser.parse_args()
    if args.vars is None:
        args.vars = ['TEMP']
    if args.stns is None:
        args.stns = [(235, 240)]
    args.stns = ['{}:{}'.format(*stn) for stn in args.stns]
    return args


def main(parameters, url='http://projects.knmi.nl/klimatologie/daggegeven/getdata_dag.cgi'):
    query = urlencode(parameters, doseq=True, safe=':')
    with urlopen('{}?{}'.format(url, query)) as fhand:
        for line in fhand:
            if not line.startswith(b'#'):
                yield line.decode().strip()


if __name__ == '__main__':
    for line in main(vars(parse_command_line(command_line_parser()))):
        print(line)
</code></pre>
<p>Usage being something like</p>
<pre class="lang-sh prettyprint-override"><code>$ python script.py -v TEMP -v TEST -s 235 240 19851123 19851124
</code></pre>
<p>which would query the following URL:</p>
<pre class="lang-none prettyprint-override"><code>http://projects.knmi.nl/klimatologie/daggegeven/getdata_dag.cgi?start=19851123&amp;end=19851124&amp;vars=TEMP&amp;vars=TEST&amp;stns=235:240
</code></pre>
</div>
<span class="comment-copy">@JoeIddon Feel free to recommend the OP post on CR but in the future, please don't use Code Review as a reason to close a question. Evaluate the request and use a reason like <i>too broad</i>, <i>primarily opinion-based</i>, etc. Then you can mention to the OP that it can be posted on Code Review if it is <a href="https://codereview.stackexchange.com/help/on-topic">on-topic</a>. Please see the section <b>What you should not do</b> in <a href="https://codereview.meta.stackexchange.com/a/5778/120114">this answer to <i>A guide to Code Review for Stack Overflow users</i></a></span>
<span class="comment-copy">@SamOnela Ok thanks for the comment. I don't normally close for code review but felt this question was much more on topic for that SE. In future I will close for <i>primarily opinion based</i> then since I agree that is a better option.</span>
