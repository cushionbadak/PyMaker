<div class="post-text" itemprop="text">
<p>I'm writing a code in python, where I need to extract only the text out of this list of tuples : </p>
<pre><code>[(u'Don',), (u'Film Songs',), (u'Robin Hood',)]
</code></pre>
<p>Output I need is just the strings <code>"Don", "Film Songs", "Robin Hood"</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Use a list-comprehension and <code>join</code> to obtain strings:</p>
<pre><code>&gt;&gt;&gt; lst = [(u'Don',), (u'Film Songs',), (u'Robin Hood',)]
&gt;&gt;&gt; '\n'.join([x[0] for x in lst])
Don
Film Songs                                                 
Robin Hood                                               
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simply by iterating the <em>items</em> of the list and printing the first <em>index</em> of the tuple:</p>
<pre><code>var = [(u'Don',), (u'Film Songs',), (u'Robin Hood',)]
for item in var:
    print item[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to iterate over the list of tuples using a for loop.</p>
<pre><code>my_list = [(u'Don',), (u'Film Songs',), (u'Robin Hood',)]
for item in my_list:
    print(item[0])
</code></pre>
<p>Of course there are many other solutions, but this particular solution is one of many.</p>
</div>
<span class="comment-copy">What have you tried so far?  Please post your code.</span>
<span class="comment-copy">Is the problem getting the first element of each tuple or converting from unicode? (i.e. the u'...')</span>
<span class="comment-copy">I believe in you Darshan - Give it an attempt!</span>
<span class="comment-copy">Welcome to SO. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links found on that page. <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">5.3 tuples and sequences</a></span>
<span class="comment-copy">Appreciate it!! Thank you, this is working.. but can you please share any other method where in I can use these strings individually to compare with some live data which I will be fetching from another source.</span>
<span class="comment-copy">I cannot explain accurately what should be done because I don't know what the live data is like. I would store these strings in a list, iterate through the list, compare each item in list with live data using <code>in</code> operator (like <code>if .. in ...: </code>). Do whatever when <code>if</code> is <code>True</code>. But this may/may not work depending on your case.</span>
<span class="comment-copy">I tried converting the output into a list and getting [u'D', u'o', u'n', u'\n', u'F', u'i', u'l', u'm', u' ', u'S', u'o', u'n', u'g', u's', u'\n', u'R', u'o', u'b', u'i', u'n', u' ', u'H', u'o', u'o', u'd'] I just want these names to be appended to a list, Output like: ['Don','Film Songs','Robin Hood'] didn't find a way how to put them into a list?</span>
<span class="comment-copy">Just do <code>[x[0] for x in lst]</code>.</span>
<span class="comment-copy">Thank you so much Austin. This was really very helpful to me :)</span>
<span class="comment-copy">Actually, those aren't tuples because there are no trailing <code>,</code> like in the original post. If you <code>print(type(tuple))</code> at each pass, you see those are the <code>unicode</code> objects. Hence why extracting the first item of the "tuple" actually gives the first letter of each name. Also, you are redefining the <code>tuple</code> Python type in your loop, which could lead to other problems. (From a fresh interpreter the code <code>print(type(tuple))</code> would show <code>&lt;type 'type'&gt;</code>, not <code>&lt;type 'unicode'&gt;</code> as happens in this loop.)</span>
