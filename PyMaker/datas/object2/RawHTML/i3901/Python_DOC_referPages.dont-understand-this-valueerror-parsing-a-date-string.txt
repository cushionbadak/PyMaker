<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/14735026/parse-hours-without-leading-zeroes-by-strptime-in-python">Parse hours without leading zeroes by strptime in Python</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>For some reason python is not parsing my date properly but I looked at the <a href="https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">strftime/strptime behavior</a> and it looks to be right</p>
<pre><code>import time
d = 'May 17, 2018 3:10 AM PDT'
time.mktime(time.strptime(d, "%B %d, %Y %I:%M %p %Z"))
</code></pre>
<p>If I do:</p>
<pre><code>time.strftime("%B %d, %Y %I:%M %p %Z")
</code></pre>
<p>I get <code>May 18, 2018 02:47 PM EDT</code>, which looks to be the exact same format except for the leading 0 but <code>strptime</code> should be able to parse leading <code>0</code>s.</p>
<p>What am I doing wrong in parsing this date?</p>
<p>Edit: Found out its the timezone but not sure why:</p>
<pre><code>time.mktime(time.strptime("May 17, 2018 3:10 AM UTC", "%B %d, %Y %I:%M %p %Z"))
</code></pre>
<p>returns a value</p>
<pre><code>time.mktime(time.strptime("May 17, 2018 3:10 AM PDT", "%B %d, %Y %I:%M %p %Z"))
</code></pre>
<p>returns ValueError</p>
</div>
<div class="post-text" itemprop="text">
<p>Python date handling has always been a little light in the timezone handling department (it's a complicated problem). You can implement your own derived <code>tzinfo</code> class from the abstract base class provided in the standard library if you only have a small subset of them that need to be handled—I've done it before and it's not too hard—<strong>or</strong> you can use something like the third-party <code>dateutil</code> module recommended in the documentation at the end of the <a href="https://docs.python.org/3/library/datetime.html#tzinfo-objects" rel="nofollow noreferrer"><code>tzinfo</code> section</a> which handles a much larger number of them. </p>
<p>Anyway, you can get <code>dateutil</code> from <a href="https://pypi.org/project/py-dateutil/" rel="nofollow noreferrer">here</a> or you can simply install it from an OS command line with <code>pip install py-dateutil</code>.</p>
<pre><code>from dateutil import parser

t = parser.parse('May 17, 2018 3:10 AM PDT')
print('t: {!r}'.format(t))  # -&gt; t: datetime.datetime(2018, 5, 17, 3, 10)
</code></pre>
</div>
<span class="comment-copy"><a href="https://stackoverflow.com/a/23704862/7044293">stackoverflow.com/a/23704862/7044293</a></span>
<span class="comment-copy">It's not about the leading zeros but about the timezone - it has always been clunky and it depends on the underlying library. In most cases it pays off to deal with the timezone separately instead of relying on <code>strptime()</code>.</span>
<span class="comment-copy">Not sure why this was marked as duplicate.. The issue was because of the timezone, not leading 0</span>
