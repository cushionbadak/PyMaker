<div class="post-text" itemprop="text">
<p>Despite my best attempt, I am unable to make a dent into getting the required output. I have provided my progress so far (after the question). </p>
<p>Write a class named Patient that has the following data attributes:</p>
<blockquote>
<p>name ( type string), height (type float), has_hair (type
      Boolean)</p>
</blockquote>
<p>The <b>Patient </b>class should have an <code>__init__</code> method (i.e., an initializer) that accepts the Patient’s <code>name</code>, <code>height</code>, and <code>has_hair</code> as arguments. These values should be assigned to the object's <code>name</code>, <code>height</code>, and <code>has_hair</code> data attributes. By default, <code>let has_hair = 0</code></p>
<p>Each Patient should start with 0 tablets, stored in an attribute tablets.
A <code>collect_tablets(number)</code> method adds the given number of tablets to the Patient's number. This function should also be able to be called as <code>collect_tablets()</code> which just adds one barange to the total number.</p>
<p>An <code>eat()</code> method consumes one tablet from the Patient's total, but increases the height of the Patient by 0.1m. If the Patient does not have any baranges, the method should print </p>
<blockquote>
<p>"I don't have any tablets  to eat!."</p>
</blockquote>
<p>A 'feast()' method consumes five tablets from the Patient's total. If the Patient is not hairy when he feasts, he grows hair. If the Patient is already hairy when he feasts, he grows by 50% instead (for example: a 2 m Patient grows to 3 m). 
A bald Patient that feasts, only grows hair, he does not grow in height unless he feasts later. If the Patient does not have enough tablets  for a feast, the method should print </p>
<blockquote>
<p>“I don't have enough tablets  to feast!.”</p>
</blockquote>
<pre><code> TEST CASE:
 hungry_patient = Patient("Jack", 1.89)
 hungry_patient.collect_tablets()
 hungry_patient.eat()
 print(hungry_patient)

  OUTPUT
  Jack is a 1.99 m tall blork!
</code></pre>
<p>My Code is :</p>
<pre><code>class Patient:
    def __init__(self, name, height, tablets = 0, has_hair=False):
    """Blork constructor"""
    self.name = name
    self.height = height
    self.tablets = tablets
    self.has_hair = has_hair

  def collect_tablets(self):
    self.tablets = self.tablets + 1

  def eat(self):
    if self.tablets == 0:
        print(“I don't have enough to eat”)
    else: 
        self.tablets = self.tablets - 1
        self.height = self.height + 0.1

  def feast(self):
    if self.tablets &gt;= 5:
        if self.has_hair == True:
            self.height = self.height + 0.5 * (self.height)
        if self.has_hair == False:
            self.has_hair = True
    else:
        print("I don't have enough baranges to feast!")


 hungry_patient = Patient("Jack", 1.89)
 hungry_patient.collect_tablets()
 hungry_patient.eat()
 print(hungry_patient)
</code></pre>
<p>I am not able to get the program to execute.</p>
<p>Please help and advise me as to what I am doing wrong. </p>
</div>
<div class="post-text" itemprop="text">
<p>First, there are invalid characters in your code. On line 14:</p>
<pre><code>print(“I don't have enough to eat”)
</code></pre>
<p>change the special opening and closing quotes to standard double quotes:</p>
<pre><code>print("I don't have enough to eat")
</code></pre>
<p>After fixing the above and some indentation issues, the code runs, but the output is just a raw string representation of the object instance you're printing.</p>
<pre><code>&lt;__main__.Patient instance at 0x7f17180af3b0&gt;
</code></pre>
<p>In order to define a custom string representation, you need to define an <code>__str__</code> and/or <code>__repr__</code> method on your class. Have a look at the <a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow noreferrer">Python documentation</a></p>
<pre><code>def __str__(self):
  return "%s is a %s m tall blork!" % (self.name, self.height)
</code></pre>
<p>Full working code:</p>
<pre><code>class Patient:
  def __init__(self, name, height, tablets = 0, has_hair=False):
    """Blork constructor"""
    self.name = name
    self.height = height
    self.tablets = tablets
    self.has_hair = has_hair

  def collect_tablets(self):
    self.tablets = self.tablets + 1

  def eat(self):
    if self.tablets == 0:
        print("I don't have enough to eat")
    else: 
        self.tablets = self.tablets - 1
        self.height = self.height + 0.1

  def feast(self):
    if self.tablets &gt;= 5:
        if self.has_hair == True:
            self.height = self.height + 0.5 * (self.height)
        if self.has_hair == False:
            self.has_hair = True
    else:
        print("I don't have enough baranges to feast!")

  def __str__(self):
    return "%s is a %s m tall blork!" % (self.name, self.height)


hungry_patient = Patient("Jack", 1.89)
hungry_patient.collect_tablets()
hungry_patient.eat()
print(hungry_patient)
</code></pre>
</div>
<span class="comment-copy">On the line <code>self.tabletX = self.tabletX – 1</code> you seem to have an en dash character <code>–</code> instead of a standard dash/hyphen/minus character <code>-</code>. Is that in your source file or just a copying artefact?</span>
<span class="comment-copy">Dear Darth. ...It is a negative sign. Not an en dash.</span>
<span class="comment-copy">Copy it into Google and see for yourself, it's definitely an en dash as it appears in the question. Same on the line which is commented out.</span>
<span class="comment-copy">You were correct. I have edited and updated the typo. :)</span>
<span class="comment-copy">You have typographic double quotes on line 14. Use a text editor to write code, not a fancy word processor.</span>
<span class="comment-copy">Profuse thanks for the code and explanation. But for your help, I would never have figured it out.  /Jill</span>
<span class="comment-copy">You're welcome. Please accept it as an answer if it was helpful.</span>
