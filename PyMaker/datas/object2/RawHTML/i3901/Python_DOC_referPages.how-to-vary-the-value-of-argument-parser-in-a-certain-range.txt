<div class="post-text" itemprop="text">
<p>I am trying to run this piece of code. I want to assign different values to FLAGS.Ncolor as given is x. But when I run this code it is picking the default value of Ncolor that is 2.  </p>
<pre><code>`p=argparse.ArgumentParser()
passes to add_argument()
p.add_argument('--Ncolor','-nc', default=2, type=int, help='Number of 
colors')
FLAGS=p.parse_args()
x = [ i+1 for i in range(5)]
for FLAGS.NCOLOR in x:
    print ("value is %d" % (FLAGS.Ncolor))`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You seem to be mixing up the variables. FLAGS.Ncolor is the value given from the commandline. Which would be for example FLAGS.Ncolor = 5 (the default value in your code would be 2 ). In above code I would add a COLORS var:</p>
<pre><code>p=argparse.ArgumentParser()
p.add_argument('--Ncolor','-nc', default=2, type=int, help='Number of colors')
FLAGS=p.parse_args()
colors = [c for c in range(1,FLAGS.Ncolor+1)]
for c in colors:
    print ("value is %d" % c)
</code></pre>
<p>so you get a list colors with the number of values you want.</p>
<p>I think you didnt properly understand what argparse is doing in the code and what you get back from p.parse_args(). Check out the argparse doc for example : <a href="https://docs.python.org/3/library/argparse.html#module-argparse" rel="nofollow noreferrer">link</a></p>
<p>if you want to add the numbers from the commandline directly you could do (notice the new 'nargs="+"' argument in add_argument()):</p>
<pre><code>p=argparse.ArgumentParser()
p.add_argument('--Ncolor','-nc', default=2, type=int, nargs='+',help='Number of colors')
FLAGS=p.parse_args()

for c in FLAGS.Ncolor:
    print ("value is %d" % c)
</code></pre>
<p>Hope that helps</p>
<p>You can then do something like that at the CLI:</p>
<pre><code>python your_script.py -nc 1 2 3 8 100 255
</code></pre>
<p>Best</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code, after setting up the parser, is essentially doing:</p>
<pre><code>In [195]: import argparse
In [196]: FLAGS = argparse.Namespace(Ncolor=2)
In [197]: FLAGS
Out[197]: Namespace(Ncolor=2)
In [198]: for FLAGS.NCOLOR in range(3):
     ...:     print(FLAGS)
     ...:     
Namespace(NCOLOR=0, Ncolor=2)
Namespace(NCOLOR=1, Ncolor=2)
Namespace(NCOLOR=2, Ncolor=2)
</code></pre>
<p>Use of <code>FLAGS.NCOLOR</code> as the iteration variable is not normal, but it does work - in a way.  It sets the attribute of the <code>Namespace</code>.  But why would you want to do that?  Usually that's the job of the <code>parse_args</code> method.</p>
<p><code>for FLAGS.NCOLOR in ...</code> works because the <code>for</code> statement assigns a value to <code>FLAGS.NCOLOR</code>, and <code>FLAGS</code> is a simple object class that accepts that kind of assignment.</p>
<p>A more normal iteration would be:</p>
<pre><code>In [199]: FLAGS = argparse.Namespace(Ncolor=2)
In [200]: for i in range(3):
     ...:     print(i, FLAGS, FLAGS.Ncolor)
     ...:     
0 Namespace(Ncolor=2) 2
1 Namespace(Ncolor=2) 2
2 Namespace(Ncolor=2) 2
</code></pre>
<p>where <code>i</code> is the temporary iteration variable (just as used in your <code>x=[]</code> list comprehension.</p>
</div>
<span class="comment-copy">Please fix your indentation.</span>
<span class="comment-copy">I don't understand your question.</span>
<span class="comment-copy">There must be all case sensitive variable names ! You need to change the <code>for FLAGS.NCOLOR in x:</code> to <code>for FLAGS.Ncolor in x:</code></span>
<span class="comment-copy">why do even need argparser, when you want to iterate over a list based on hard coded range</span>
<span class="comment-copy">Because in my actual code I have to vary value of Ncolor. I want to know can we assign it a range of values?</span>
<span class="comment-copy">I know that the arparse is used to change the value from command line.At one time we can only assign it one value. but in above code i want to vary that value in a certain range. Is it possible?</span>
<span class="comment-copy">@sara, maybe you can give a manual example(s) of what you want; i'm not sure i fully understood; if the above response is good for then no worries</span>
