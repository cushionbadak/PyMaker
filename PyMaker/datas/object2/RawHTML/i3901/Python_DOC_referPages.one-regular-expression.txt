<div class="post-text" itemprop="text">
<p>My question is very simple.Can someone explain this python Regular Expression for me?</p>
<p><code>neg_pattern = re.compile(r'\b(' + '|'.join(negations_dic.keys()) + r')\b')</code></p>
<p>And the negations_dic is here:</p>
<p><code>negations_dic = {"isn't":"is not", "aren't":"are not", "wasn't":"was not", "weren't":"were not"}</code> </p>
<p>I want to know what do the ( and ) and '|' mean .</p>
<p>This is the command that use the regular expression above:</p>
<p><code>neg_handled = neg_pattern.sub(lambda x: negations_dic[x.group()], lower_case)</code> </p>
<p>And what is the use of <code>x.group</code> mean? Does it return the key-value pair in the <code>negation_dic</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>In regular expressions:</p>
<p><code>|</code> means 'or' (so any one of the choices will do), and '( )' means a matching group.</p>
<p>So, <code>'(is|are|was)'</code> will match any of the words <code>'is'</code>, <code>'are'</code>, or <code>'was'</code>.</p>
<p><strong>But, the question seems to be more python than regular expression to me.</strong></p>
<p><code>'|'.join(['a', 'b', 'c'])</code> will result in a matching group <code>'(a|b|c)'</code> which will match any of the elements in the list.</p>
</div>
<span class="comment-copy">How about reading a tutorial first? Say, this one: <a href="https://www.tutorialspoint.com/python/python_reg_expressions.htm" rel="nofollow noreferrer">tutorialspoint.com/python/python_reg_expressions.htm</a></span>
<span class="comment-copy">Well, read <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">the docs</a>. It explains all of it in detail.</span>
<span class="comment-copy"><a href="https://regex101.com/" rel="nofollow noreferrer">regex101.com</a></span>
<span class="comment-copy">Well,thank you for the answer.And can you tell me something about the x.group()?</span>
<span class="comment-copy">x.group() returns the matching group. So, in your program it returns one of the keys in the negations_dic</span>
<span class="comment-copy">So the keys in the negations_dic will be replaced by it's value.Wow,thank you very much to give me this guidance.</span>
<span class="comment-copy">If this answer was helpful to you, could you please upvote and mark this answer as correct?</span>
<span class="comment-copy">I have thinked about it again.The x.group() should return one of the keys in the negations_dic rather than the keys in the negation_dic.I think this is about the function of pattern.sub()</span>
