<div class="post-text" itemprop="text">
<p>I have a <code>lambda</code> function</p>
<pre><code>myfun=lambda x:2*x
</code></pre>
<p>if I print its name</p>
<pre><code>print(myfun)
&lt;function &lt;lambda&gt; at 0x000000000E512898&gt;
</code></pre>
<p>Which is not very informative.</p>
<p>If I set its name explicitly, it works better</p>
<pre><code>myfun.__name__='myfun'
print(myfun)
&lt;function myfun at 0x000000000E512898&gt;
</code></pre>
<p>Given that I have a large set of lambdas, how to perform this assignment programmatically?</p>
<p>The motivation for doing is is the following:</p>
<p>I am importing another function</p>
<pre><code>from mymodule import f_many_args
</code></pre>
<p>In <code>mymodule</code>, it is defined as </p>
<pre><code>def f_many_args(a,b,c):
</code></pre>
<p>However, in another script, I need to call this <code>f_many_args</code> by setting b and c using some global variables. 
Later I need to print the name of <code>f_many_args</code> and I needed it to be somewhere more informative than </p>
</div>
<div class="post-text" itemprop="text">
<p>replace:</p>
<p><code>myfun = lambda x:2*x</code></p>
<p>with:</p>
<pre><code>def myfun(x):
    """doubles the input parameter"""
    return 2 * x
</code></pre>
</div>
<span class="comment-copy">Why would you ever want to do that? What's the logic?</span>
<span class="comment-copy">A lambda function(Actually it should be lambda expression) shouldn't even have a name as it is used to create anonymous function.</span>
<span class="comment-copy">use <code>def</code> maybe?</span>
<span class="comment-copy">before downvoting, clarifications to the question and answer to the comments could be waited for</span>
<span class="comment-copy">basically yes, I could also be using the partial module. However, if possible I would stick to lambdas</span>
<span class="comment-copy">it is a clear that a normal function definition would allow to do that. Somehow I might be reinventing the wheel</span>
<span class="comment-copy">maybe, it depends - you may want to have a look at <code>functools.partial</code> <a href="https://docs.python.org/3/library/functools.html" rel="nofollow noreferrer">docs.python.org/3/library/functools.html</a></span>
