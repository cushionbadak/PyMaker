<div class="post-text" itemprop="text">
<p>Consider the following Python program:</p>
<pre><code>code = """
def test():
    1/0
"""

filename = "&lt;test&gt;"

c = compile(code, filename, 'exec')
exec(c)

import linecache

linecache.cache[filename] = (len(code), None, code.splitlines(keepends=True), filename)

import traceback

print("Traceback from the traceback module:")
print()
try:
    test()
except:
    traceback.print_exc()

print()
print("Regular traceback:")
print()

test()
</code></pre>
<p>I am dynamically defining a function that raises an exception and adding it to the <code>linecache</code>. The output of the code is</p>
<pre><code>Traceback from the traceback module:

Traceback (most recent call last):
  File "test.py", line 20, in &lt;module&gt;
    test()
  File "&lt;test&gt;", line 3, in test
    1/0
ZeroDivisionError: division by zero

Regular traceback:

Traceback (most recent call last):
  File "test.py", line 28, in &lt;module&gt;
    test()
  File "&lt;test&gt;", line 3, in test
ZeroDivisionError: division by zero
</code></pre>
<p>If I then get a traceback from that function using the <code>traceback</code> module, the line of code from the function is shown (the <code>1/0</code> part of the first traceback). But if I just let the code raise an exception and get the regular traceback from the interpreter, it doesn't show the code. </p>
<p>Why doesn't the regular interpreter traceback use the linecache? Is there a way to make the code appear in regular tracebacks? </p>
</div>
<div class="post-text" itemprop="text">
<p>The default <a href="https://docs.python.org/3/library/sys.html#sys.excepthook" rel="nofollow noreferrer"><code>sys.excepthook</code></a> uses a separate, C-level implementation of traceback printing, not the <code>traceback</code> module. (Perhaps this is so it still works even if the system is too borked to use <code>traceback.py</code>.) The C implementation doesn't try to use <code>linecache</code>. You can see the code it uses to retrieve source lines in <a href="https://github.com/python/cpython/blob/v3.6.5/Python/traceback.c#L262" rel="nofollow noreferrer"><code>_Py_DisplaySourceLine</code></a>.</p>
<p>If you want tracebacks to use the <code>traceback</code> module's implementation, you could replace <code>sys.excepthook</code> with <a href="https://docs.python.org/3/library/traceback.html#traceback.print_exception" rel="nofollow noreferrer"><code>traceback.print_exception</code></a>:</p>
<pre><code>import sys
import traceback
sys.excepthook = traceback.print_exception
</code></pre>
</div>
<span class="comment-copy">If I read that C source correctly, it just opens the file and reads it each time (no line caching). So I guess your solution is the only reasonable fix.</span>
