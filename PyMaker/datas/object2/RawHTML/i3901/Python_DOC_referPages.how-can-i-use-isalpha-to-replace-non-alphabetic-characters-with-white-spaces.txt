<div class="post-text" itemprop="text">
<p>I'm trying to check and see if every character in a given string is alphabetic. If it isn't, then replace whatever the character is with a blank space. What I have so far is:</p>
<pre><code>def removePunctuation(txt):

    for char in txt:
        if char.isalpha() == False:
            txt.replace(char, " ")
    return txt
</code></pre>
<p>I've tested some input but it's not removing anything.</p>
</div>
<div class="post-text" itemprop="text">
<h3>The Python Way:</h3>
<p>Use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>join()</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#generator-expressions" rel="nofollow noreferrer">generator expression</a> like:</p>
<pre><code>new_txt = ''.join(c if c.isalpha() else ' ' for c in txt)
</code></pre>
<h3>Why did my code not work?</h3>
<p>The basic problem with your code is that in Python strings are immutable.  Which is to say, once they are built, they never change.  You can discard them because you are done with them, but you cannot change them.  Because of this <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>.replace()</code></a> does not change <code>txt</code>.  What is does do is return a new string with the characters replaced.  This is not at all what you want in the loop you have constructed.</p>
</div>
<div class="post-text" itemprop="text">
<p>The minimum change required to make your function work is:</p>
<pre><code>def removePunctuation(txt):
    for char in txt:
        if char.isalpha() == False:
            txt = txt.replace(char, " ")
    return txt

new_txt = removePunctuation(txt)
</code></pre>
<p>Strings are immutable, so <code>str.replace</code> does <em>not</em> alter its argument, but returns a new string.</p>
<p>However, Stephen Rauch's one-liner is a more "Python" way of accomplishing this.</p>
<pre><code>def removePunctuation(txt):
    return ''.join(c if c.isalpha() else ' ' for c in txt)

new_txt = removePunctuation(txt)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>str.translate</code> and a <code>defaultdict</code> is a good way to approach translation problems.</p>
<pre><code>from collections import defaultdict
from string import ascii_letters

translation = defaultdict(lambda: ' ', str.maketrans(ascii_letters, ascii_letters))

print('Hello.World!'.translate(translation))
</code></pre>
</div>
<span class="comment-copy"><code>txt.replace</code> returns a new string. You are ignoring the return value.</span>
<span class="comment-copy">I see, thank you! Would there be a way to correct what I have (as in evaluating char.isalpha() to true or false and doing it that way)?</span>
<span class="comment-copy">@MJames28, updated answer to help explain problem with original code.</span>
<span class="comment-copy">Thanks for taking the time to form your reply. I appreciate the speedy response and explanation.</span>
