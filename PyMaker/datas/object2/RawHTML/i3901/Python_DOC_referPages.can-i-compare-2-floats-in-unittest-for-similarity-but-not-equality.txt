<div class="post-text" itemprop="text">
<p>I have this test above. My problem is the after training my machine learning models the result is a little different each time.</p>
<p>So, I would like to assert TRUE when are similar in my Flask-api.</p>
<p>The <code>ChangeToSurvive</code> is a <code>float</code>, so sometimes is <code>29.2</code> and after training again change to <code>30.5</code> or other number.</p>
<pre><code>def test_by_name(self):
    post_data = {
        'name': 'Andre'
    }
    resp = self.app.post('/survivals',
                         data=json.dumps(post_data),
                         content_type='application/json')
    self.assertEqual(resp.status_code, 200)
    self.assertEqual(resp.content_type, 'application/json')

    content = json.loads(resp.get_data(as_text=True))
    size = len(content['Passengers'])
    self.assertEqual(size, 2)

    self.maxDiff = None 

    expected = {
"Passengers": [
    {
        "SibSp": 1,
        "Sex": "0",
        "PassengerId": 925,
        "Survived": 1,
        "Parch": 2,
        "Age": 1,
        "Name": "Johnston, Mrs. Andrew G (Elizabeth Lily\" Watson)\"",
        "ChangeToSurvive": 74.7,
        "Embarked": "0"
    },
    {
        "SibSp": 0,
        "Sex": "1",
        "PassengerId": 1096,
        "Survived": 0,
        "Parch": 0,
        "Age": 1,
        "Name": "Andrew, Mr. Frank Thomas",
        "ChangeToSurvive": 29.2,
        "Embarked": "0"
    }
]
}
    self.assertEqual(content, expected)   # each train in a model the ChangeToSurvive can a little diferrent
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/unittest.html" rel="nofollow noreferrer"><code>unittest</code></a> has <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertAlmostEqual" rel="nofollow noreferrer"><code>assertAlmostEqual</code></a> method for this purpose:</p>
<pre><code>actual_value = # extract float value from content
expected_value = # extract float value from expected
delta = 1.7
self.assertAlmostEqual(actual_value, expected_value, delta = delta)
</code></pre>
<p>And you need to repeat this for all values from your dictionaries you wish to verify. It's best to wrap this with a test utility method.</p>
</div>
<span class="comment-copy">Similar in what way? Your code doesn't really explain.</span>
<span class="comment-copy">The ChangeToSurvive is a float, so sometimes is 29.2 and after training again change  to 30.5 or other number.</span>
<span class="comment-copy">Thanks! I improved(edited) my question.</span>
<span class="comment-copy">You should possibly define a range your suggested result should be in to fulfill the test, if you can't predict the test result exactly. Main goal of a test should not to be flaky and to ensure your function is tested well though.</span>
<span class="comment-copy">@ferdy OK. I aggre with you, but I'm just trying find a pretty solution. Would be nice have a JSON or dict comparasion with tolerance? There are a lot of approachs like extract and not considered the float values, extract and use tolarance, or just not test the content. Someone here can have a new good idead. I'm just checking.</span>
