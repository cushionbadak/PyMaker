<div class="post-text" itemprop="text">
<p>As shown in the picture:</p>
<p><a href="https://i.stack.imgur.com/JeWOU.png" rel="nofollow noreferrer">pic1</a></p>
<pre><code>In [1]: from datetime import datetime

In [2]: class A(object):
   ...:     now = datetime.now()
   ...:     def __init__(self):
   ...:         pass
   ...:     def p(self):
   ...:         print(self.now)
   ...:

In [3]: datetime.now()
Out[3]: datetime.datetime(2018, 5, 22, 17, 54, 4, 593295)

In [4]: a_1 = A()

In [5]: a_1.p()
2018-05-22 17:53:57.597022

In [6]: datetime.now()
Out[6]: datetime.datetime(2018, 5, 22, 17, 54, 29, 177489)

In [7]: a_2 = A()

In [8]: a_2.p()
2018-05-22 17:53:57.597022
</code></pre>
<p>I can't understand how Python initializes a class variable, and why I created two class objects, but the values of the class variables of these two classes are the same?</p>
<p>Thank you for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use now=datetime.now() in the initialization (<strong>init</strong>) method, like this:</p>
<pre><code>class A(object):
    def __init__(self):
        self.now = datetime.now()
    def p(self):
        print(self.now)
</code></pre>
<p>In your code that method is called only when the class is first initialized and not when an object is defined.</p>
</div>
<div class="post-text" itemprop="text">
<p>@Mike Scotty's comment is correct but needs expanding for clarity.</p>
<p>When a variable is set without self. in front of it in a class body are class variables, they will have the same value in all instances of the class. If you want variables that are instance dependent you need to initialise them within a method, preferably <strong>init</strong> and precede the name with 'self.'.</p>
<p>So your class definition should read:</p>
<pre><code>class A(object):
    def __init__(self):
        self.now = datetime.now()
    def p(self):
        print(self.now)
</code></pre>
</div>
<span class="comment-copy">Because it's a <code>class</code> variable, not an <code>instance</code> variable.</span>
<span class="comment-copy">You should post that code using the code formatting instead of a picture.</span>
<span class="comment-copy">I see what you mean. Thank you. In addition, I would like to confirm that class variables are initialized at the time of class definition, rather than initializing when class objects are created. Is that right?</span>
<span class="comment-copy">@kevinwong Those guys at python.org ara amazing at writing <a href="https://docs.python.org/3/tutorial/classes.html#class-and-instance-variables" rel="nofollow noreferrer">docs</a>, you should give them a chance.</span>
<span class="comment-copy">@kevinwong Depends on which variables you mean. The instance variables will need to be initialised when the instance is. The other variables? When an instance is created two things happen first a new instance pointer is created and the second is that the class's <b>init</b>  is called and <i>all</i> the code in it is obeyed. So it depends where the class variable is being set.</span>
