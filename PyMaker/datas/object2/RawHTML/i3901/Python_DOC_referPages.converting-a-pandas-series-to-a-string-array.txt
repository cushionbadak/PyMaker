<div class="post-text" itemprop="text">
<p>I have a pandas dataframe:</p>
<pre><code>ind  
0   ['C']
1   ['C']
2   ['C']
3   ['C']
4   ['E']
5   ['E']
</code></pre>
<p>I want to convert it into a string: <code>CCCCEE</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can using <code>str</code></p>
<pre><code>df['ind'].str[0].sum()
Out[197]: 'CCCCEE'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain</code></a>:</p>
<pre><code>from itertools import chain

df = pd.DataFrame({'ind': [['C'], ['C'], ['C'], ['C'], ['E'], ['E']]})

res = ''.join(chain.from_iterable(df['ind']))

print(res)

CCCCEE
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this:</p>
<pre><code>chain=""
for index, row in df.iterrows():
    chain=chain+row['column']
return chain
</code></pre>
<p>If you have a problem iterating over a dataframe, you can check this <a href="https://stackoverflow.com/questions/16476924/how-to-iterate-over-rows-in-a-dataframe-in-pandas">How to iterate over rows in a DataFrame in Pandas?</a></p>
</div>
<span class="comment-copy">possible duplicate: <a href="https://stackoverflow.com/questions/41400381/python-pandas-concatenate-a-series-of-strings-into-one-string" title="python pandas concatenate a series of strings into one string">stackoverflow.com/questions/41400381/â€¦</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/41400381/python-pandas-concatenate-a-series-of-strings-into-one-string">Python Pandas concatenate a Series of strings into one string</a></span>
<span class="comment-copy">ind is not an actual column name, just the default python dataframe indexing. Could you please suggest how should I proceed?</span>
<span class="comment-copy">@KrishnaAnapindi You mean: <code>df.index.str[0].sum()</code>?</span>
<span class="comment-copy">gives an error saying 'Index' object has no attribute to sum</span>
<span class="comment-copy">@KrishnaAnapindi it is not like a index in your sample data</span>
<span class="comment-copy">Yeah just replace 'ind' with the name of the column containing the strings</span>
<span class="comment-copy">Sure but shouldn't <code>''.join(chain.from_iterable(df['ind']))</code> suffice?</span>
<span class="comment-copy">@AntonvBR, The <code>list</code> conversion is intentional, <a href="https://stackoverflow.com/a/37782238/9209546">see here why</a>. You're right that accessing <code>values</code> is unnecessary, updated.</span>
<span class="comment-copy">Oh.. it is that same old thing. Yeah that is probably right but I feel it looses readability when applying multiple layers of parenthesis.</span>
<span class="comment-copy">Ok I ran some timings with a very large dataframe and I interpret it like this: the <code>str.join</code> will convert a generator to a list before applying the <code>join</code> and it is therefore recommended to do <code>[]</code> a list comprehension over a <code>()</code> expression. However when the returning value as in this case is an iterator there is no point to convert it to a list as this will be done by the <code>str.join</code> anyway. I therefore think you are wrong in this particular case and that the <code>list()</code> only creates the extra layer of parenthesis.</span>
<span class="comment-copy">@AntonvBR, That's interesting, and I agree <code>list</code> is expensive. Looks like I need to dig a little deeper. Thanks :).</span>
