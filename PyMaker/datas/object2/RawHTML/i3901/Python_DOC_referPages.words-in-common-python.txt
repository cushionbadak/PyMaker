<div class="post-text" itemprop="text">
<p>So I've been having a lot of trouble with this problem. I have to find the words in common from an English.txt and a French.txt.</p>
<p>english.txt:</p>
<pre><code>circle
table
year
competition
</code></pre>
<p>french.txt:</p>
<pre><code>bien
competition
merci
air
table
</code></pre>
<p>My desired output:</p>
<pre><code>competition
table
</code></pre>
<p>However, when I did my code I didn't include french text but got:
competition</p>
<p>table</p>
<p>This is my code:</p>
<pre><code>filenameI = "english.txt"
file = open(filenameI, "r")
for line in file:
   print(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open(filenameI) as I:
    contentI = I.read().splitlines()

with open(filenameF) as F:
    contentF = F.read().splitlines()
</code></pre>
<p>Then go ahead and loop through contentF and contentI and compare the two, printing when they match</p>
<pre><code>for i in contentI:
    for f in contentf:
        if i == f:
          print(i)
</code></pre>
<p>Hope that helps :) </p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>filenameI = "english.txt"
filename2 = "french.txt"
file = open(filenameI, "r")
file2 = open(filenameI, "r")

list1 = [line for line in file]
list2 = [line for line in file2]

out = set(list1) - (set(list1) - set(list2))
</code></pre>
<p>Note that it is better to open file using <code>with</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer"><code>set</code></a>as it will give you an intersection between two collections. </p>
<p>Also use a <a href="https://docs.python.org/3/reference/compound_stmts.html#the-with-statement" rel="nofollow noreferrer"><code>with</code></a> to handle closing the file automatically. </p>
<pre><code>with open('english.txt') as eng, open('french.txt') as fr:
    print(set(x.strip() for x in eng).intersection(x.strip() for x in set(fr)))
</code></pre>
<p>Output:</p>
<pre><code>{'table', 'competition'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let me know if this worked out for you or not!</p>
<pre><code>e_words = set(line.strip() for line in open("english.txt")) # speck of sanity check here
f_words = set(line.strip() for line in open("french.txt"))

print e_words &amp; f_words
# please iterate this and do whatevs..
</code></pre>
<h1>EDIT 1 (BEING CONCISE IS A GOOD THING BUT THIS TIME NO DANGLING FILE HANDLERS)</h1>
<pre><code>output = None
with open("english.txt") as e, open("french.txt") as f:
     output = set([line.strip() for line in e.readlines()]) &amp; set([line.strip() for line in f.readlines()])
print output
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:   </p>
<pre><code>file1 = open("english.txt", "rb+")
file2 = open("french.txt", "rb+")

list1 = [line for line in file1]
list2 = [line for line in file2]

common1 = (set(list1).intersection(list2))
</code></pre>
</div>
<span class="comment-copy">How do you plan to compare with the French list?</span>
<span class="comment-copy">Your code just reads and prints the <code>english.txt</code> - I don't see how you are getting the output described.</span>
<span class="comment-copy">@openwonk yeah but I don't know how to add it in.</span>
<span class="comment-copy">This won't find matches for words that aren't in the same position in both files (look at "competition" in OP's examples).</span>
<span class="comment-copy">Yes it will, it loops over the first set while looping over the whole of the second set for each of the first</span>
<span class="comment-copy">nested for loops</span>
<span class="comment-copy">D'oh! You're right. I'm on a roll with stupidity tonight. I guess I should go to bed.</span>
<span class="comment-copy">There is such a thing as too concise. You should be closing your file handles (or using <code>with</code>), especially in answers directed at inexperienced programmers. Not closing them is a bad habit to get into.</span>
<span class="comment-copy">@d-coder sadly it didn't work, the output just shows: set()</span>
