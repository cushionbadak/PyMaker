<div class="post-text" itemprop="text">
<p>I am using my raspberry Pi3 to create timelapse videos. I have a cron that runs a python script every minute that decides how many photos to take and then imports a function from another python script that takes the actual photos. The problem is that after running for about 4 hours the camera stops taking photos- if I try and take one manually it says it is out of memory, and <code>top</code> confirms this. If I watch <code>top</code> while the timelapse is running the memory usage steadily climbs.</p>
<p>I think I have narrowed the problem down to the python script that takes the photos. I can run this on its own, and if I start up the pi and run it a few times I see that the memory used climbs by about 10MB the first run and about 1MB every subsequent run (screenshot at the bottom of the post). This is the script</p>
<pre><code>import time
import picamera
import os

def ShutterTS(dirname):
    with picamera.PiCamera() as cam:
        cam.resolution=(1920,1440)
        cam.rotation=180
        cam.hflip=True
        # camera warm up time
        time.sleep(2)  
        FNfmt = "%4d%02d%02d_%02d:%02d:%02d.JPG"
        Fname = FNfmt % time.localtime()[0:6]
        framename = os.path.join(dirname, Fname)
        cam.capture(framename)
        return

def main():
    dirname = [insert path here, my path hidden]
    ShutterTS(dirname)
    return

if __name__ == '__main__':
    import sys
    sys.exit(main())
</code></pre>
<p>I'm not a good coder, I basically cobble stuff together from bits I find on the internet so I'm hoping this is something really simple that I've missed. The <code>with</code> is the raspberry pi recommended way of calling the camera. I know this should close the camera instance on exit but I'm guessing something is hanging around in memory? I tried adding <code>close.cam()</code> at the end of the function and it made no difference (didn't think it would). I've tried <code>del</code> on all the variables at the end of the function and it made no difference. I think the <code>return</code> at the end of the function is redundant but adding it made no difference.</p>
<p>This website <a href="https://www.linuxatemyram.com/" rel="nofollow noreferrer">https://www.linuxatemyram.com/</a> suggests that <code>top</code> showing the memory climbing is normal and <code>free -m</code> is a better gauge, and that shows plenty available- but the fact remains the camera stops working, saying it is out of memory. Any clues would be much appreciated!</p>
<p>This is the cron script (some other imports cropped)</p>
<pre><code>from ShutterTimestamp import ShutterTS
from makedirectory import testmakedir
from SunTimesA import gettimes

def Timer(dirname,FRAMES_PER_MINUTE):
    # I take a picture first and then loop so the program isn't
    # sleeping pointlessly to the end of the minute
    start = time.time()
    ShutterTS(dirname)
    if FRAMES_PER_MINUTE&gt;1:
        for frame in range(FRAMES_PER_MINUTE-1):
            time.sleep(int(60 / FRAMES_PER_MINUTE) - (time.time() - start))
            start = time.time()
            ShutterTS(dirname)
    return

def main():
    dirfmt = []
    dirname = dirfmt % time.localtime()[0:3]
    FPM=gettimes()
    if FPM &gt; 0:
        testmakedir(dirname)
        Timer(dirname,FPM)
    return

if __name__ == '__main__':
    sys.exit(main())
</code></pre>
<p><a href="https://i.stack.imgur.com/RO7mz.jpg" rel="nofollow noreferrer">Screenshot of memory use</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I suppose you have a wrapping python script which import the script you provide in the question and call <code>ShutterTS</code> in a loop. This function does not return any output to main script (just <code>return</code>).</p>
<p>If you can observe a memory leak it probably is located in the picamera module.
A workaround it to call this script as a sub-process, not as a function call in the main process. It can be done in a shell script or in the python script using <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">subprocess</a> module.</p>
<p>Thus the memory will be released after each capture.</p>
</div>
<span class="comment-copy">"I have a cron that runs a python script every minute that decides how many photos to take and then imports a function from another python script that takes the actual photos." Show us the importing script. What you've shown us shouldn't cause memory leaks.</span>
<span class="comment-copy">Thanks Dave, I've added the cron script to my original post, but note the first script seems to cause the memory leak when run as a standalone program taking single photos.</span>
<span class="comment-copy">A standalone script releases memory when it exits, unless something extraordinary is going on.  Is <code>gettimes()</code> doing something that uses a non-constant amount of memory?</span>
<span class="comment-copy"><code>gettimes()</code> uses the Astral module (<a href="https://astral.readthedocs.io/en/stable/index.html" rel="nofollow noreferrer">astral.readthedocs.io/en/stable/index.html</a>) to work out whether the sun is up and whether to take photos. I have added a screenshot of the memory issue to the end of the post. 'SunTimesA.py` is the python script that contains the <code>gettimes()</code> function. You can see after running this memory use increases slightly, but this winds back as memory gets released. 'ShutterTimestamp.py` is the python script that contains the <code>ShutterTS()</code> function. After running this multiple times the memory use goes up markedly, and it doesn't wind back over time.</span>
