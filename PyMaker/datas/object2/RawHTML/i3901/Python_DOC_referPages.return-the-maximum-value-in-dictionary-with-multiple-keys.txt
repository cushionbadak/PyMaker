<div class="post-text" itemprop="text">
<p>I have a dictionary of images with its width and height and I want to sort them based on their width or just find the maximum width among dictionary values.
Thanks for your help.</p>
<p>Here is the code: </p>
<pre><code>from PIL import Image 

folder_images = "data/train/melanoma"
size_images = dict()

for dirpath, _, filenames in os.walk(folder_images):
    for path_image in filenames:
        image = os.path.abspath(os.path.join(dirpath, path_image))
        with Image.open(image) as img:
            width, heigth = img.size
            size_images[path_image] = {'width': width, 'heigth': heigth}

for k, v in size_images.items():
    print (k, '--&gt;', v)
</code></pre>
<p>Output:</p>
<pre><code>ISIC_0011130.jpg --&gt; {'width': 1024, 'heigth': 768}
ISIC_0013581.jpg --&gt; {'width': 4288, 'heigth': 2848}
ISIC_0013832.jpg --&gt; {'width': 3008, 'heigth': 2000}
ISIC_0014127.jpg --&gt; {'width': 4288, 'heigth': 2848}
ISIC_0013861.jpg --&gt; {'width': 4288, 'heigth': 2848}
ISIC_0000169.jpg --&gt; {'width': 722, 'heigth': 542}
ISIC_0001140.jpg --&gt; {'width': 1936, 'heigth': 1936}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to create a new dict that has the desired order, you can create an <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer"><code>OrderedDict</code></a> from the result of sorting the original dict's items. <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer"><code>OrderedDict</code></a> stores its items in the order in which they were inserted (whereas the built-in dict which has no internal ordering).</p>
<pre><code>from collections import OrderedDict

newDict = OrderedDict(sorted(oldDict.items(), key=lambda x: x[1]['width']))
largest = list(newDict.items())[-1]
# {'ISIC_0013861.jpg', {'width': 4288, 'heigth': 2848})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To print the images in ascending height order:</p>
<pre><code>for k, v in sorted(size_images.items(), lambda kv: kv[1]['height']):
    print (k, '--&gt;', v)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Maximum width</strong></p>
<p>Using <code>max</code> with a generator expression:</p>
<pre><code>max_width = max(v['width'] for v in size_images.values()}
</code></pre>
<p><strong>Sorted by width</strong></p>
<p>Using <code>sorted</code> with a custom key:</p>
<pre><code>sorted_list = sorted(sizes_images.items(), key=lambda x: x[1]['width'])
</code></pre>
<p>Note that this will output a list of tuples, sorted by width smallest first. Add <code>reverse=True</code> to start with the largest.</p>
</div>
<span class="comment-copy"><a href="https://wiki.python.org/moin/HowTo/Sorting" rel="nofollow noreferrer"><b>Sorting Mini-HOW TO</b></a>...</span>
<span class="comment-copy">Thanks! it solved the problem.</span>
<span class="comment-copy">TypeError: must use keyword argument for key function. I've changed the code to for k, v in sorted(size_images.items(),key= lambda kv: kv[1]['heigth']):     print (k, '--&gt;', v) and it works great. thanks</span>
<span class="comment-copy">Ah yeah, sorry about that. :)</span>
<span class="comment-copy">sorted list code is working great however max() function gives me this error: TypeError: string indices must be integers</span>
<span class="comment-copy">@SarahK, Ah, see update. We only need to iterate <code>dict.values</code> here, assuming your values are dictionaries.</span>
