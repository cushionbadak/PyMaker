<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/16607704/one-liner-creating-a-dictionary-from-list-with-indices-as-keys">One liner: creating a dictionary from list with indices as keys</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/37619848/python-loop-list-index-out-of-range">Python Loop: List Index Out of Range</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>To convert a <code>list</code> into a <code>dictionary</code> with key as the index of the element and values as the value in the list. i have tried to create it but was facing errors.below is my current code</p>
<pre><code>for each in list:
    dict[each] = list[each]
</code></pre>
<p>what is wrong in my code. i am a beginner in python.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>dict = {}
for each in list:
    dict[each] = list[each]
</code></pre>
<p>Take for array <code>list = [1,2,34,22]</code> an example </p>
<pre><code>dict[1] = list[1]  # list[1] = 2
dict[2] = list[2]  # list[2] = 34
dict[34] = list[34]  # Error size is just 4 , accessing list[34] will give index error
</code></pre>
<p>Try this simple code</p>
<pre><code>a = [1,2,34,22]

dict = {}
for i in  range(len(a)):
  dict[i]=a[i]
print(dict)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try using enumerate! It's nifty:</p>
<pre><code>list = ['a','b','c']

print(dict(enumerate(list))) # &gt;&gt;&gt; {0: 'a', 1: 'b', 2: 'c'}
</code></pre>
<p>what is wrong with your code is that you are taking two elements of a list (by subscripting them with the list[value] syntax) and setting them equal to each other.</p>
<p>What you meant to do:</p>
<pre><code>   d = {}
    l = ['a','b','c']
    for k,v in enumerate(l):
        d[k] = v
</code></pre>
<p>What this does:</p>
<p>Enumerating a sequence gives you a tuple where an integer is paired with the value of the sequence.Like in my list above, the enumerate(list) itself would be: </p>
<pre><code>for k in enumerate([1,2,3]):
print(k)
</code></pre>
<p>Result: (0, 1)
        (1, 2)
        (2, 3)</p>
<p>The k and v in the loop first for loop I wrote unpacks the tuples (k= the index 0 of the tuple, v = the second), and the predefined dict (d in my case) sets the enumerate value (d[k], the key) to the value k (the second value of the tuple after enumeration)</p>
<p>Hope this makes sense!</p>
</div>
<div class="post-text" itemprop="text">
<p>the following code will work</p>
<pre><code>lst = [1,2,3,4]
result = {i:j for i,j in enumerate(lst)}
</code></pre>
</div>
<span class="comment-copy">You have not defined <code>dict</code> as a dictionary object. Also you are assigning <code>each</code> value of the list both as key and value of the dictionary.</span>
<span class="comment-copy">Welcome to SO, You are actually applying a for loop on your on your list without using indexing method, you are using a direct approach - simple iterating over your elements and the value of <code>each</code> is basically the element value not the index value, if you want to work with indexing method try this - <code>for i in range(0,len(list): dict[i] = list[i]</code>. This will work</span>
<span class="comment-copy">What question isn't market duplicate anymore? Waste of time answering SMH</span>
<span class="comment-copy">@AaronBrandhagen That's why we don't <i>delete</i> duplicate questions. Questions marked as duplicate stay around to serve as guide posts. But we don't want the <i>answers</i> to be fragmented. We want all the answers to be in the same place because it makes it easier to find them and vote on them and comment on them. The existing answers have already been voted on, and the best ones have risen to the top. If you start reposting the same answers instead of closing the question as a dupe, all that voting and commenting has to happen <i>again</i>.</span>
<span class="comment-copy">@AaronBrandhagen I've lost count how many times some n00b has (re-)posted a garbage answer (think <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval</code></a> or the like) and I've had to explain why that is bad and yadda yadda. I'm not interested in repeating myself every time someone decides to repost an answer I've commented on in the past. It's a waste of everyone's time. We're all better off if every answer exists exactly once, and they all exist on the same question.</span>
<span class="comment-copy">wonderful answer :)</span>
<span class="comment-copy">Thank you! Just added info as I saw you were wondering why yours wasn't working :)  edit: thought you were the OP :S lol sorry.</span>
<span class="comment-copy">can you help me understand what is wrong in my code</span>
<span class="comment-copy">see my answer, it explains what is wrong.</span>
