<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/20449427/how-can-i-read-inputs-as-numbers">How can I read inputs as numbers?</a>
<span class="question-originals-answer-count">
                    19 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to create a python program that uses user input in an equation. When I run the program, it gives this error code, "answer = ((((A*10<strong>A)**2)</strong>(B*C))*D**E) TypeError: unsupported operand type(s) for ** or pow(): 'int' and 'str'". My code is: </p>
<pre><code>import cmath

A = input("Enter a number for A: ")
B = input("Enter a number for B: ")
C = input("Enter a number for C: ")
D = input("Enter a number for D: ")
E = input("Enter a number for E: ")

answer = ((((A*10**A)**2)**(B*C))*D**E)
print(answer)`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer"><code>input()</code></a> function returns a string value: you need to convert to a number using <code>Decimal</code>:</p>
<pre><code>from decimal import Decimal

A = Decimal(input("Enter a number for A: "))
# ... etc
</code></pre>
<p>But your user might enter something that isn't a decimal number, so you might want to do some checking:</p>
<pre><code>from decimal import Decimal, InvalidOperation

def get_decimal_input(variableName):
    x = None
    while x is None:
        try:
            x = Decimal(input('Enter a number for ' + variableName + ': '))
        except InvalidOperation:
            print("That's not a number")
    return x

A = get_decimal_input('A')
B = get_decimal_input('B')
C = get_decimal_input('C')
D = get_decimal_input('D')
E = get_decimal_input('E')

print((((A * 10 ** A) ** 2) ** (B * C)) * D ** E)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The compiler thinks your inputs are of string type. You can wrap each of A, B, C, D, E with float() to cast the input into float type, provided you're actually inputting numbers at the terminal. This way, you're taking powers of float numbers instead of strings, which python doesn't know how to handle.</p>
<pre><code>A = float(input("Enter a number for A: "))
B = float(input("Enter a number for B: "))
C = float(input("Enter a number for C: "))
D = float(input("Enter a number for D: "))
E = float(input("Enter a number for E: "))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That code would run fine for python 2.7 I think you are using python 3.5+ so you have to cast the variable so this would become like this</p>
<pre><code>import cmath

A = int(input("Enter a number for A: "))
B = int(input("Enter a number for B: "))
C = int(input("Enter a number for C: "))
D = int(input("Enter a number for D: "))
E = int(input("Enter a number for E: "))

answer = ((((A*10**A)**2)**(B*C))*D**E)
print(answer)
</code></pre>
<p>I tested it </p>
<pre><code>Enter a number for A: 2
Enter a number for B: 2
Enter a number for C: 2
Enter a number for D: 2
Enter a number for E: 2
10240000000000000000
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>there are three ways to fix it, either </p>
<pre><code>A = int(input("Enter a number for A: "))
B = int(input("Enter a number for B: "))
C = int(input("Enter a number for C: "))
D = int(input("Enter a number for D: "))
E = int(input("Enter a number for E: "))
</code></pre>
<p>which limits you to integers (whole numbers)</p>
<p>or:</p>
<pre><code>A = float(input("Enter a number for A: "))
B = float(input("Enter a number for B: "))
C = float(input("Enter a number for C: "))
D = float(input("Enter a number for D: "))
E = float(input("Enter a number for E: "))
</code></pre>
<p>which limits you to float numbers (which have numbers on both sides of the decimal point, <a href="https://stackoverflow.com/questions/7545015/can-someone-explain-this-0-2-0-1-0-30000000000000004">which can act a bit weird</a>)</p>
<p>the third way is not as recommended as the other two, as I am not sure if it works in python 3.x but it is </p>
<pre><code>A = num_input("Enter a number for A: ")
B = num_input("Enter a number for B: ")
C = num_input("Enter a number for C: ")
D = num_input("Enter a number for D: ")
E = num_input("Enter a number for E: ")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer"><code>input()</code></a> returns a string, you have to convert your inputs to <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer">integers</a> (or <a href="https://docs.python.org/3/library/functions.html#float" rel="nofollow noreferrer">floats</a>, or <a href="https://docs.python.org/3/library/decimal.html#decimal.Decimal" rel="nofollow noreferrer">decimals</a>...) before you can use them in math equations. I'd suggest creating a separate function to wrap your inputs, e.g.:</p>
<pre><code>def num_input(msg):
    # you can also do some basic validation before returning the value
    return int(input(msg))  # or float(...), or decimal.Decimal(...) ...

A = num_input("Enter a number for A: ")
B = num_input("Enter a number for B: ")
C = num_input("Enter a number for C: ")
D = num_input("Enter a number for D: ")
E = num_input("Enter a number for E: ")
</code></pre>
</div>
