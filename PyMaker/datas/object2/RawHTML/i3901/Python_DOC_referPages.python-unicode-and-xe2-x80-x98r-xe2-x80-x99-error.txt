<div class="post-text" itemprop="text">
<blockquote>
<p>Python version 3.5.2</p>
</blockquote>
<p>So I have file output from <code>mitmproxy</code> called <code>enter code here</code>, and I want to read it using:</p>
<pre><code>from shelljob import proc

g = proc.Group()
command = "tail -f -c +0 output_file | mitmdump -n -r - --set flow_detail=1 --showhost"
p = g.run (command)

def read_process():
    while g.is_pending():
        lines = g.readlines()
        for proc, line in lines:
            print ("data:" + str(line) + '\n\n')
</code></pre>
<p>and returning</p>
<pre><code>data:b'tail: invalid number of lines: \xe2\x80\x98r\xe2\x80\x99\n'
</code></pre>
<p>but if I change command to <code>ping 127.0.0.1</code>, like:</p>
<pre><code>from shelljob import proc

g = proc.Group()
command = "ping 127.0.0.1"
p = g.run (command)

def read_process():
    while g.is_pending():
        lines = g.readlines()
        for proc, line in lines:
            print ("data:" + str(line) + '\n\n')
</code></pre>
<p>and it works fine!. returning:</p>
<pre><code>data:b'64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.056 ms\n'
</code></pre>
<p>So what's the solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>The data is returned in bytes, as indicated by the <code>b</code> in fron of the output.
You have to decode it to a string.</p>
<p><code>print ("data:" + line.decode('utf-8') + '\n\n')</code></p>
</div>
<div class="post-text" itemprop="text">
<p>I am pretty sure your command isn't being piped as you might expected when calling <code>g.run</code> - the arguments <code>-n -r</code> after <code>mitmdump</code> is somehow being passed to <code>tail</code>, thus running this:</p>
<pre><code>$ tail -n -r
tail: invalid number of lines: ‘r’
</code></pre>
<p>Produce that error message you are seeing.</p>
<p>Now that you tell us what <code>g.run</code> actually is, looking at the <a href="https://pythonhosted.org/shelljob/shelljob.html#shelljob.proc.Group.run" rel="nofollow noreferrer">documentation</a> for the function we can see that it takes a <code>shell</code> argument which is passed to <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer"><code>Popen</code></a>, which is the argument to enable the processing of shell commands.  To resolve this issue, you may try the following instead:</p>
<pre><code>p = g.run(command, shell=True)
</code></pre>
</div>
<span class="comment-copy">Have you tried adding ` # -<i>- coding: utf-8 -</i>-` at the top of your script file?</span>
<span class="comment-copy">I already tried adding  # -- coding: utf-8 --, but same error @LISHITING</span>
<span class="comment-copy">So, what eaxactly are you askinge here? Why your command <code>tail -f -c +0 output_file | mitmdump -n -r - --set flow_detail=1 --showhost</code> does not work as you expect and how to fix it? Because the encoding of the output does not seem as much of a problem for you as the question suggests from my point of view</span>
<span class="comment-copy">@LISHITING That declaration only declares the encoding of the <i>source file</i>.  If the source file is all ASCII (as shown) it makes no difference.</span>
<span class="comment-copy">Error again.. and returning <code>tail: invalid number of lines: ‘r’</code></span>
<span class="comment-copy">yes. that is an error that the command on the command line produces. It has nothing to do with python. Also, see metatoaster's answer regarding this</span>
<span class="comment-copy">Oh sorry, I updated my code. I followed tutorial from: <a href="https://mortoray.com/2014/03/04/http-streaming-of-command-output-in-python-flask/#comment-29298" rel="nofollow noreferrer">mortoray.com/2014/03/04/…</a></span>
<span class="comment-copy">If i add <code>shell=True</code>, nothing print in the screen..</span>
<span class="comment-copy">Does anything print on the screen when you run the command directly from the command line outside of Python?</span>
<span class="comment-copy">Same, nothing print on the screen..</span>
<span class="comment-copy">Then it is working in the exact same way.  Are you sure <code>output_file</code> is being written with data? What does running <code>tail -f output_file</code> provide?</span>
