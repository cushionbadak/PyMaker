<div class="post-text" itemprop="text">
<p>My text file has 6 lines but everytime verify is run twice it always gets:</p>
<pre><code>  File "verifier.py", line 34, in &lt;module&gt;
    verify(i)
  File "verifier.py", line 27, in verify
    real_account = account[acc_no]
IndexError: list index out of range
</code></pre>
<p>When I replace acc_no with just 2 it works fine, but when printing out acc_no I get 2 so I do not know why it is printing this error my code:</p>
<pre><code>import random
import time
import json
import threading
import requests
from selenium import webdriver
from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from colorama import init
from colorama import Fore, Back, Style
from datetime import datetime

init(autoreset=True)

config = json.load(open("config.json"))
times = int(config['amount'])
delay = int(config['verifier_delay'])
username = config['username']
password = config['password']
read_file = open("accounts.txt", "r")
acc_no=0

def verify(acc_no):
    account = read_file.readlines()
    real_account = account[acc_no]
    username = real_account[0:real_account.find(":")]
    password = real_account[real_account.find(":")+1:]
    print(username + password)
    print(acc_no)

for i in range (times):
    verify(i)

time.sleep(5)
</code></pre>
<p>Thanks in advanced for any help provided</p>
</div>
<div class="post-text" itemprop="text">
<p>You are reaching the point where <code>account</code> doesn't have a valid index for <code>acc_no</code>. Try catching the error and seeing what these values actually are:</p>
<pre><code>try:
    real_account = account[acc_no]
except IndexError:
    print(acc_no, account)
</code></pre>
<p>I think you'll find that account is not what you think it is! </p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>readlines()</code> function reads all the lines from the current position to the end of the file. When you call <code>verify()</code> a second time, you're already at the end of the file, so there's nothing left to read.</p>
<p>You need to seek back to the beginning of the file first.</p>
<pre><code>def verify(acc_no):
    read_file.seek(0)
    account = read_file.readlines()
    ...
</code></pre>
<p>But instead of reading the file repeatedly, you could just read it once and save that in a global variable. Then you can reuse that variable each time.</p>
<pre><code>with open("accounts.txt", "r") as read_file:
    account = read_file.readlines()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You seem to be opening read_file once, and then trying to read its entire content with read_file.readlines() every time you enter the verify() function.</p>
<p>AFAIK, readlines reads the entire file, so it cannot work a second time without reopening the file. Am I missing something? 
<a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">The docs</a> say:</p>
<blockquote>
<p>If you want to read all the lines of a file in a list you can also use
  list(f) or f.readlines()</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>List will raise <code>IndexError</code> when you try to fetch positional value where position itself does not exist. So the problem would be either</p>
<ol>
<li>File is empty</li>
<li>File is not empty but the <code>acc_no</code> you supply does not exists in the <code>account</code></li>
<li>Exception raised if loop executes twice where <code>read_file.readlines()</code> will return <code>[]</code> an empty list. </li>
</ol>
<p>Now coming to the solution here is mine.</p>
<pre><code>import random
import time
import json
import threading
import requests
from selenium import webdriver
from selenium.webdriver.support.ui import Select
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
from colorama import init
from colorama import Fore, Back, Style
from datetime import datetime

init(autoreset=True)

config = json.load(open("config.json"))
times = int(config['amount'])
delay = int(config['verifier_delay'])
username = config['username']
password = config['password']
read_file = open("accounts.txt", "r")
account = read_file.readlines()
acc_len = len(account)
acc_no=0

def verify(acc_no):
    if acc_no &gt;= acc_len:
         print('Account number does not exist in file. ', acc_no)
         return
    real_account = account[acc_no]
    username = real_account[0:real_account.find(":")]
    password = real_account[real_account.find(":")+1:]
    print(username + password)
    print(acc_no)

for i in range(times):
    verify(i)

time.sleep(5)
</code></pre>
<p>Cheers!</p>
</div>
<span class="comment-copy">Have you tried to use a debugger? What can you see there?</span>
<span class="comment-copy">I did catch the errors and it prints out 1 when the text file has six lines @101</span>
<span class="comment-copy">that still gives me the index error</span>
<span class="comment-copy">If I add the with statement I get:</span>
<span class="comment-copy">Traceback (most recent call last):     verify(i)     read_file.seek(0) ValueError: I/O operation on closed file.</span>
<span class="comment-copy">I don't see any <code>read_file.close()</code> in your code, I don't see how that could be happening.</span>
<span class="comment-copy">You shouldn't use <i>both</i> of my solutions, pick one. Either read the file once and save it in a variable, or use <code>seek(0)</code> before reading the file each time.</span>
<span class="comment-copy">so if I add the open file into the verify loop the problem should be fixed?</span>
<span class="comment-copy">Won't it just call readfile when account is run?</span>
<span class="comment-copy">I'm almost certain it's something to do with acc_no as when I just do real_account = account[1] it works</span>
