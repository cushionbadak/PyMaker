<div class="post-text" itemprop="text">
<p>Im trying to pass a dict (as a string) as an argument to a python script. when i run it from terminal I get an error </p>
<pre><code>not enough values to unpack (expected 2, got 1)
</code></pre>
<p>From terminal this I run : </p>
<pre><code>python3 "./cleanuplogs.py" --dict='{"a":["anv", "huj"], "s":["dc", "dc"]}'
</code></pre>
<p>Could someone be able to help me fix this error. Below is the python script</p>
<pre><code>import argparse
import subprocess as sp
import json

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--dict', help='Directory and Files', 
    required=True, type=str)

    args = parser.parse_args()

    try:
        for folder, files in json.loads(args.dict):
            for file in files:
                sp.call(["rm -r", folder+file])
    except Exception as e:
        print (e)

if __name__ == '__main__':
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This part is where I think the problem is:</p>
<pre><code>try:
    for folder, files in json.loads(args.dict):
        for file in files:
            sp.call(["rm -r", folder+file])
except Exception as e:
    print (e)
</code></pre>
<p>The problem is in the 'for' statement json.loads returns a dict and it is this that is the one thing that is unpacked. you need to change the 'for' statement to read:</p>
<pre><code>for folder, file in enumerate(json.loads(args.dict)):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use the module <a href="https://docs.python.org/3/library/ast.html" rel="nofollow noreferrer">ast</a> and its function literal_eval() to convert to a dict, then use items() method to iterate over (key, value) pairs. Like so: </p>
<pre><code>import argparse
import subprocess as sp
import ast

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--dict', help='Directory and Files', required=True, type=str)
    args = parser.parse_args()

    try:
        for folder, files in ast.literal_eval(args.dict).items():
            for file in files:
                sp.call(["rm -r", folder+file])
    except Exception as e:
        print (e)

if __name__ == '__main__':
    main()
</code></pre>
</div>
<span class="comment-copy">Can you please fix your indentation, and provide the full error? And show an example of your input.</span>
<span class="comment-copy">the argument is called <code>dict</code>, yet you're providing <code>path</code> on command line? Should it not be <code>--dict='{"a":["anv", "huj"], "s":["dc", "dc"]}'</code></span>
<span class="comment-copy">Can you post the full stack trace so we can see which line fails? Not this problem, but that should be <code>sp.call(["rm", "-rf", os.path.join(folder, file))</code>.</span>
<span class="comment-copy">Its probably <code>for folder, files in json.loads(args.path):</code>... try <code>print(json.loads(args.path))</code> to see what it returns. And, there isn't an <code>args.path</code> (its <code>args.dict</code>) so the code you show is raising a different error.</span>
<span class="comment-copy">Also, just catching <code>Exception</code> looses important information. You could use the traceback module, <code>traceback.print_exc()</code> to get more info.</span>
