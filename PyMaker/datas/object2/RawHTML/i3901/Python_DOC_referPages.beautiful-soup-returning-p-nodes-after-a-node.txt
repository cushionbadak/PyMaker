<div class="post-text" itemprop="text">
<p>I am using python 3.6 and beautfulsoup4</p>
<p>I have the first node:</p>
<p><code>title = self.html.find(id=(lists[1][selectionindex]))</code></p>
<p>this is not none and is this node is highlighted in red:</p>
<p><a href="https://i.stack.imgur.com/gzBsv.jpg" rel="nofollow noreferrer"><img alt="Image" src="https://i.stack.imgur.com/gzBsv.jpg"/></a></p>
<p>How can i get a list of the nodes in blue (any div/p nodes) but stop when it gets to h1/2/3 node</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm assuming that you can find the first <code>&lt;h3&gt;</code> tag using some <code>id</code> (as shown in your code). The following code will get all the <code>&lt;p&gt;</code> and <code>&lt;div&gt;</code> tags after the <code>&lt;h3&gt;</code> tag and will stop when it encounters either <code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code> or an <code>&lt;h3&gt;</code> tag.</p>
<pre><code>html = '''
&lt;p&gt;unwanted&lt;/p&gt;
&lt;h3 id="special"&gt;some text&lt;/h3&gt;
&lt;div class="foo"&gt;wanted&lt;/div&gt;
&lt;p&gt;wanted&lt;/p&gt;
&lt;p&gt;wanted&lt;/p&gt;
&lt;p&gt;wanted&lt;/p&gt;
&lt;h2&gt;some text&lt;/h2&gt;'''

soup = BeautifulSoup(html, 'html.parser')

list_of_wanted_tags = []
starting_tag = soup.find('h3', id='special')

for tag in starting_tag.find_all_next():
    if tag.name in ('div', 'p'):
        list_of_wanted_tags.append(tag)
    elif tag.name in ('h1', 'h2', 'h3'):
        break

print(list_of_wanted_tags)
# [&lt;div class="foo"&gt;wanted&lt;/div&gt;, &lt;p&gt;wanted&lt;/p&gt;, &lt;p&gt;wanted&lt;/p&gt;, &lt;p&gt;wanted&lt;/p&gt;]
</code></pre>
<p>The <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#find-all-next-and-find-next" rel="nofollow noreferrer"><strong><code>find_all_next()</code></strong></a> method returns a list of all the tags that come after the current tag.</p>
<hr/>
<p>If you want all the tags between two such tags, and not only the <code>&lt;p&gt;</code> and <code>&lt;div&gt;</code> tags, use this:</p>
<pre><code>for tag in starting_tag.find_all_next():
    if tag.name in ('h1', 'h2', 'h3'):
        break
    list_of_wanted_tags.append(tag)
</code></pre>
<p>Or, the same using <a href="https://docs.python.org/3/library/itertools.html#itertools.takewhile" rel="nofollow noreferrer"><code>itertools.takewhile</code></a>:</p>
<pre><code>wanted = list(itertools.takewhile(lambda tag: tag.name not in ('h1', 'h2', 'h3'), start.find_all_next()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use BeautifulSoup's <code>find_all</code> function to get all instances of a specific HTML tag.</p>
<pre><code>import requests, lxml
from bs4 import BeautifulSoup

r = requests.get('https://www.google.co.uk')
soup = BeautifulSoup(r.content, "lxml")

f = soup.find_all("p")

for p in f:
    print p
</code></pre>
</div>
<span class="comment-copy">however this will get all the 'p' tags in the file. As you can see in my description i clearly state i want the 'p' and div files between the red and green tag not all the p files.</span>
<span class="comment-copy">What's stopping you from using a simple <code>for</code> loop between the <code>h3</code> and <code>h2</code> tags then and simply checking the tag?</span>
