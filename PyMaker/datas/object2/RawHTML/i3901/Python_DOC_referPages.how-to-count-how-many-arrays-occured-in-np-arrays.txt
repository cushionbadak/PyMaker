<div class="post-text" itemprop="text">
<p>Suppose I have: </p>
<pre><code>x = [[0, 1], [0, 1], [0, 2], [0, 2], [0, 3]]
</code></pre>
<p>and I want to have an output something like this:</p>
<pre><code>count = [0, 1] = 2, [0, 2] = 2, [0, 3] = 1
</code></pre>
<p>How can I count how many arrays occurred?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">Counter</a> class like:</p>
<h3>Code:</h3>
<pre><code>Counter(tuple(i) for i in x)
</code></pre>
<p>Note that since a <code>Counter</code> is a <code>dict</code>, the keys need to be hashable.  This is why the <code>tuple(i) for i in x</code> is needed, since that will convert the lists in <code>x</code> to tuples so that they can be used as keys for the <code>Counter</code>.</p>
<h3>Test Code:</h3>
<pre><code>x = [[0, 1], [0, 1], [0, 2], [0, 2], [0, 3]]

from collections import Counter
print(Counter(tuple(i) for i in x))
</code></pre>
<h3>Results:</h3>
<pre><code>Counter({(0, 1): 2, (0, 2): 2, (0, 3): 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In <code>numpy</code> you can use <code>np.unique</code>, e.g.:</p>
<pre><code>In []:
np.unique(x, axis=0, return_counts=True)

Out[]:
(array([[0, 1],
        [0, 2],
        [0, 3]]), array([2, 2, 1]))
</code></pre>
<p>If you want to collapse them then you can use <code>zip()</code>, e.g.:</p>
<pre><code>In []:
list(zip(*np.unique(x, axis=0, return_counts=True)))

Out[]:
[(array([0, 1]), 2), (array([0, 2]), 2), (array([0, 3]), 1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are looking for pure numpy solution:</p>
<pre><code>In [12]: import numpy as np

In [13]: x = np.array([[0, 1], [0, 1], [0, 2], [0, 2], [0, 3]])

In [14]: np.unique(x, axis=0, return_counts=True)
Out[14]: 
(array([[0, 1],
        [0, 2],
        [0, 3]]), array([2, 2, 1]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>THe following code will solve it</p>
<pre><code>print({str(i):x.count(i) for i in x})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try:</p>
<h3><strong>1. Using</strong> <code>.count</code>:</h3>
<hr/>
<pre><code>result = set((tuple(item), x.count(item)) for item in x)
print(result)
</code></pre>
<p><strong>Result</strong>:</p>
<pre><code>{((0, 1), 2), ((0, 2), 2), ((0, 3), 1)}
</code></pre>
<hr/>
<h3><strong>2. Using</strong> <code>defaultdict</code>:</h3>
<hr/>
<pre><code>from collections import defaultdict

result = defaultdict(int)
for item in x:
    result[tuple(item)] += 1

print(dict(result))
</code></pre>
<p><strong>Result</strong>:</p>
<pre><code>{(0, 1): 2, (0, 3): 1, (0, 2): 2}
</code></pre>
<hr/>
<h3><strong>3. Using</strong> <code>Counter</code>:</h3>
<hr/>
<pre><code>from collections import Counter

result = list(Counter(map(tuple, x)).items())
print(result)
</code></pre>
<p><strong>Result</strong>:</p>
<pre><code>[((0, 1), 2), ((0, 3), 1), ((0, 2), 2)]
</code></pre>
</div>
<span class="comment-copy">Where is the numpy?</span>
<span class="comment-copy">What attempt or research have you done so far?</span>
<span class="comment-copy">You may want to mention why <code>Counter</code> being a <code>dict</code> means you can't just do <code>Counter(x)</code>. +1 regardless.</span>
<span class="comment-copy">this is great! but how can i select to print only where count &gt; c? so when i set c = 1, (0, 3):1 is not printed</span>
<span class="comment-copy"><code>Counter(i for i in counts if i[1] &gt; c)</code> where <code>counts = Counter(tuple(i) for i in x)</code></span>
<span class="comment-copy">I ran this and got <code>[2, 2, 2, 2, 1]</code> in both python 2.7 and python 3.5.</span>
<span class="comment-copy">that gives the count for each of the element</span>
<span class="comment-copy">But that's not what OP wants. OP was looking for <code>count = [0, 1] = 2, [0, 2] = 2, [0, 3] = 1</code> or something similar.</span>
<span class="comment-copy">now, i have edited my code</span>
<span class="comment-copy">okay, now i made it a dictionary, @Helium_1s2</span>
