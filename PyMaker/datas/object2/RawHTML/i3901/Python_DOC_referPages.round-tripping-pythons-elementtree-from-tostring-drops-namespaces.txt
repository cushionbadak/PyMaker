<div class="post-text" itemprop="text">
<p>I've got a base XML string that I want to build off of, so the first thing I do is parse the XML string into an etree.</p>
<p>However, it looks like the other namespaces "d" and "m" are being ignored. I can successfully parse the string into an XML <code>Element</code>:</p>
<pre><code>import xml.etree.ElementTree as ET
BASE = """&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;feed
  xml:base="https://www.nuget.org/api/v2/"
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:d="http://schemas.microsoft.com/ado/2007/08/dataservices"
  xmlns:m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"
&gt;
&lt;/feed&gt;
"""
a = ET.fromstring(BASE)
# &lt;Element '{http://www.w3.org/2005/Atom}feed' at 0x000002264B03F778&gt;
</code></pre>
<p>But when we convert <em>back</em> to string, we drop the "d" and "m" namespaces:</p>
<pre><code>ET.tostring(a)
# Formatted manually for StackOverflow
# b'&lt;ns0:feed
#    xmlns:ns0="http://www.w3.org/2005/Atom"
#    xml:base="https://www.nuget.org/api/v2/"&gt;
# &lt;/ns0:feed&gt;'
</code></pre>
<p>So what's going on here?</p>
</div>
<div class="post-text" itemprop="text">
<p>It appears that unused namespaces are dropped. If you change your <code>BASE</code> to something like this:</p>
<pre><code>BASE = """&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;feed
  xml:base="https://www.nuget.org/api/v2/"
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:d="http://schemas.microsoft.com/ado/2007/08/dataservices"
  xmlns:m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"
&gt;
  &lt;m:properties&gt;
    &lt;d:Id&gt;NuGetTest&lt;/d:Id&gt;
  &lt;/m:properties&gt;
&lt;/feed&gt;
"""
</code></pre>
<p>You'll see the missing namespaces:</p>
<pre><code>&gt;&gt;&gt; et.tostring(a)
b'&lt;ns0:feed
   xmlns:ns0="http://www.w3.org/2005/Atom"
   xmlns:ns1="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata"
   xmlns:ns2="http://schemas.microsoft.com/ado/2007/08/dataservices"
   xml:base="http://localhost:40221/nuget"&gt;
     &lt;ns1:properties&gt;
       &lt;ns2:Id&gt;NuGetTest&lt;/ns2:Id&gt;
     &lt;/ns1:properties&gt;
&lt;/ns0:feed&gt;'
</code></pre>
<p>Note that the namespaces change: <code>d</code> becomes <code>ns2</code>, <code>m</code> becomes <code>ns1</code>. I'm not sure how Python does this, but it looks like it's just based on which is used first.</p>
</div>
<span class="comment-copy">If you want to keep the original namespace prefixes, you can use the <code>register_namespace</code> function. See <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.register_namespace" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">Thanks, I did see that in the docs but it wasn't clear to me what it would actually do. I guess I should have tested it out first...</span>
