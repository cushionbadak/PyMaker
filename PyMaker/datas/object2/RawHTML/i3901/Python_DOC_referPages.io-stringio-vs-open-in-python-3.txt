<div class="post-text" itemprop="text">
<p>All I could find is this <a href="https://docs.python.org/3/library/io.html#text-i-o" rel="nofollow noreferrer">statement</a>:</p>
<blockquote>
<p>The easiest way to create a text stream is with open(), optionally
  specifying an encoding:</p>
<p><code>f = open("myfile.txt", "r", encoding="utf-8")</code></p>
<p>In-memory text streams are also available as StringIO objects:</p>
<p><code>f = io.StringIO("some initial text data")</code></p>
</blockquote>
<p>But this gives no insight at all on when I should use <code>open()</code> over <code>io.StringIO</code> and vice-versa. I know that they do not work exactly the same behind the scene. But why would someone go for <code>open()</code> in Python 3 ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The difference is: <code>open</code> takes a file name (and some other arguments like mode or encoding), <code>io.StringIO</code> takes a plain string and both return file-like objects.</p>
<p>Hence:</p>
<ul>
<li>Use <code>open</code> to read files ;</li>
<li>Use <code>StringIO</code> when you need a file-like object and you want to pass the content of a string.</li>
</ul>
<p>An example with <code>StringIO</code>:</p>
<pre><code>import csv
import io

reader = csv.reader(io.StringIO("a,b,c\n1,2,3"))
print ([r for r in reader])
# output [['a', 'b', 'c'], ['1', '2', '3']]
</code></pre>
<p>It's very useful because you can use a string where a file was expected. </p>
<p>In the usual case, with a csv file on your disk, you would write something like:</p>
<pre><code>with open(&lt;path/to/file.csv&gt;, ...) as f:
    reader = csv.reader(f, ...)
</code></pre>
</div>
<span class="comment-copy">Have you <i>tried</i> to open a file with <code>io.StringIO</code>?</span>
<span class="comment-copy">Asker didn't specify they were trying to open a file specifically.</span>
<span class="comment-copy">@Aran-Fey Have you <i>tried</i> reading the post ?</span>
<span class="comment-copy">Umm, yes, I have. You say you don't know when to use which. If you had <i>tried</i> to use both of them, you would've quickly found the answer.</span>
<span class="comment-copy">@Aran-Fey I'm glad the below answer is there, because it is exactly the situation where I was wondering which to use. Considering both output this exact samething in this situation, I tought it would be relevant to know what's the difference. I really don't see why you pretend I didn't try.</span>
<span class="comment-copy">Consice and great example (the exact one that brought me here) thank you!</span>
<span class="comment-copy">Both <code>open</code> and <code>StringIO</code> take strings. The difference is in what they do with the string.</span>
<span class="comment-copy">@user2357112 Right! I will edit my answer to add this precision!</span>
