<div class="post-text" itemprop="text">
<p>So I've got this function that I use through multiple file, is there a way to turn this into a class saved on a separate file and call for it on each of my other files?</p>
<pre><code>def count():

    for name in data:
        if name not in topUsers:
            topUsers[name] = 1
        else:
            topUsers[name] += 1

count()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>is there a way to turn this into a class saved on a separate file and
  call for it on each of my other files?</p>
</blockquote>
<p>For example:</p>
<pre><code># bar.py
class TopUserCounter(object):

    def __init__(self, top_users):
        self._top_users = top_users

    def count(self, user_names):
        for name in user_names:
            if name not in self._top_users:
                self._top_users[name] = 1
            else:
                self._top_users[name] += 1

    def get_top_users(self):
        return dict(self._top_users)


# foo.py
from collections import Counter

from bar import TopUserCounter


top_user_counter = TopUserCounter({'Alex': 4, 'John': 3})
top_user_counter.count({'Alex', 'Damon'})
print(top_user_counter.get_top_users())

top_user_counter_1 = Counter({'Alex': 4, 'John': 3})
top_user_counter_1.update({'Alex', 'Damon'})
print(top_user_counter_1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't necessarily need to use a <code>Class</code> for that. You could just have the function defined in one file and then import it into the file that you are working in. It will be easiest if the two files are in the same folder.</p>
<p>File containing function, e.g. called <strong>func.py</strong>:</p>
<pre><code># File called 'func.py' saved in a folder
def add(a, b):
    result = a + b
    print(result)
</code></pre>
<p>File you are working in, e.g. called <strong>working_file.py</strong>:</p>
<pre><code># File where the function should be used, placed in the same folder
import func         # This imports all functions contained inside 'func.py'

func.add(2, 3)      # Use the 'add'-function imported from 'func.py'
</code></pre>
<p>Running <strong>working_file.py</strong> will return</p>
<pre><code>5
</code></pre>
<p>If you would like to type <code>add(2, 3)</code> instead of <code>func.add(2, 3)</code>, you have to change the import statement in <strong>func.py</strong> to <code>from func import add</code>, which only imports that specific funciton.</p>
<p>Hope this cleared it up.</p>
</div>
<span class="comment-copy">Your function has no inputs. When you call it, how will it know where to find <code>data</code> and <code>topUsers</code>? You should look up <a href="https://docs.python.org/3/tutorial/controlflow.html#more-on-defining-functions" rel="nofollow noreferrer">function arguments</a>.</span>
<span class="comment-copy">Create a separate <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer"><b>module</b></a> containing your function and then import it in your other files.</span>
