<div class="post-text" itemprop="text">
<p>I have a python .py file with the libraries and I want to load it into my environment on startup without having to individually load it each time. </p>
<p>E.g. I currently need to load numpy, matlab imports etc line by line, is it not possible to have a couple of files ready to load from the &gt;&gt;&gt; prompt. I've tried running python3 &lt;&gt; but it wont work. </p>
<p>This is my .py file am I doing something incorrect.</p>
<pre><code># Load libraries
import sys
#import OS

import pandas

from pandas.plotting import scatter_matrix

import matplotlib.pyplot as plt

from sklearn import model_selection

from sklearn.metrics import classification_report

from sklearn.metrics import confusion_matrix

from sklearn.metrics import accuracy_score

from sklearn.linear_model import LogisticRegression

from sklearn.tree import DecisionTreeClassifier

from sklearn.neighbors import KNeighborsClassifier

from sklearn.discriminant_analysis import LinearDiscriminantAnalysis

from sklearn.naive_bayes import GaussianNB

from sklearn.svm import SVC

import pandas as pd

from datatime import datetime

import matplotlib.pyplot as plt

import statsmodels.api as sm

from sklearn import datasets

import scipy.stats as stats

import pylab
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you're looking for is called a startup file.</p>
<hr/>
<p>Before going any further: you really should look into using <a href="http://jupyter.org/" rel="nofollow noreferrer"><code>jupyter</code></a> or at least the <a href="https://ipython.org/" rel="nofollow noreferrer"><code>ipython</code></a> part of it. It has much more powerful features for setting up a custom interactive environment—as well as a much more powerful interactive environment in the first place. For example, you can specify a directory full of scripts instead of a single script, or different named profiles, or you can even make it auto-import the modules on first use instead of waiting for them all to load for every session whether you need them or not—and that's really just scratching the surface.</p>
<p>But, let's assume you're sticking with the default interactive environment instead.</p>
<hr/>
<p>The environment variable <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONSTARTUP" rel="nofollow noreferrer"><code>PYTHONSTARTUP</code></a> allows you to specify a startup file that runs only in interactive mode:</p>
<blockquote>
<p>If this is the name of a readable file, the Python commands in that file are executed before the first prompt is displayed in interactive mode. The file is executed in the same namespace where interactive commands are executed so that objects defined or imported in it can be used without qualification in the interactive session. You can also change the prompts <code>sys.ps1</code> and <code>sys.ps2</code> and the hook <code>sys.__interactivehook__</code> in this file.</p>
</blockquote>
<p>So, create a file in your home directory, your <code>virtualenv</code>, or wherever else seems appropriate that looks like this:</p>
<pre><code>import sys
import os
import pandas
# etc.
</code></pre>
<p>Then set the environment variable to point to that file. Of course the exact way to do that depends on what platform you're on (and what shell you're using), and where you stored the file, and whether you want it to happen automatically every time you login.</p>
<hr/>
<p>Just as an example, let's say you're on Linux, using bash, you're not using virtual environments, you put the file in your home directory as <code>.pythonstartup.py</code>, and you want it to happen on every login. Then you'll put this in your profile:</p>
<pre><code>export PYTHONSTARTUP="$HOME/.pythonstartup.py"
</code></pre>
<p>Now, start a new shell, and every time you run Python, it'll start up with all these imports:</p>
<pre><code>$ python3
&gt;&gt;&gt; print(sys.version_info)
sys.version_info(major=3, minor=6, micro=4, releaselevel='final', serial=0)
</code></pre>
</div>
