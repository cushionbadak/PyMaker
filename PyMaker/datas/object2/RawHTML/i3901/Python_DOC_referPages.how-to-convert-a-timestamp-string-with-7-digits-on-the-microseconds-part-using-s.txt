<div class="post-text" itemprop="text">
<p>Having a timestamp as string like <code>2016-09-22T13:57:31.2311892-04:00</code>, how can one get the datetime object?</p>
<p>I've tried using <code>strptime</code> for this, but I got two issues:</p>
<ul>
<li>I need to remove <code>:</code> from the timezone part, at the end, for <code>%z</code> to work properly.</li>
<li>The microseconds part has 7 digits, but <code>strptime</code> handles only up to 6 digits.</li>
</ul>
<p>Is there a way to parse timestamps in this format without modifying* the string itself before passing to <code>strptime</code>? </p>
<p>* - by modifying, I think of removing the last microsecond digit, and removing the last <code>:</code>.</p>
<p>Note: This is for inserting a record in MySQL. If that helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>How about convert like this:</p>
<pre><code>dt = datetime.strptime(s[:-len('2-04:00')], '%Y-%m-%dT%H:%M:%S.%f')
# datetime.datetime(2016, 9, 22, 13, 57, 31, 231189)
</code></pre>
<p><a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer">https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior</a></p>
<p>Suddenly found a useful method at django:</p>
<pre><code>from django.utils.dateparse import parse_datetime
dt = parse_datetime('2016-09-22T13:57:31.2311892-04:00')
# datetime.datetime(2016, 9, 22, 13, 57, 31, 231189, tzinfo=&lt;django.utils.timezone.FixedOffset object at 0x7f20184f8390&gt;)
</code></pre>
<p><a href="https://docs.djangoproject.com/en/2.0/ref/utils/#module-django.utils.dateparse" rel="nofollow noreferrer">https://docs.djangoproject.com/en/2.0/ref/utils/#module-django.utils.dateparse</a></p>
<blockquote>
<p>Another pythonic format (use <code>maya</code> <a href="https://github.com/kennethreitz/maya" rel="nofollow noreferrer">https://github.com/kennethreitz/maya</a>):</p>
</blockquote>
<pre><code># pip install maya
import maya
maya.parse('2016-09-22T13:57:31.2311892-04:00').datetime()
# datetime.datetime(2016, 9, 22, 17, 57, 31, 231189, tzinfo=&lt;UTC&gt;)
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/12281975/convert-timestamps-with-offset-to-datetime-obj-using-strptime">Convert timestamps with offset to datetime obj using strptime</a></span>
<span class="comment-copy">@pktangyue this is not a duplicate question. I'm asking how to handle two different extra characters using the method, not how to make the conversion itself.</span>
<span class="comment-copy">In python2 <code>strptime</code> do not support 7 digits microseconds and <code>%z</code> for timezone. That means using a third lib will be a better way.</span>
<span class="comment-copy">Using python 3 here.</span>
<span class="comment-copy">You said 'removing the last microsecond digit, and removing the last :'. This may be simple enough.</span>
<span class="comment-copy">So you are saying that basically I don't need the timezone info? Maybe I can store it in another column? Now that I think of it, it makes sense. This would allow a conversion on-the-fly, based on the user's timezone. Was that your thought?</span>
<span class="comment-copy">@RenatoOliveira I edit my answer and fix the timezone.</span>
