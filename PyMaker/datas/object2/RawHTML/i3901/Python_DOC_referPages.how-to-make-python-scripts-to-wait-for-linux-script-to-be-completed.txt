<div class="post-text" itemprop="text">
<p>I am preparing python script which will control other python and linux scripts in correct sequence. And I have one doubt about below code:</p>
<pre><code>import os
import unittest

class TestDict(unittest.TestCase):

    x = factory.FileGenerator()
    os.system('./linux_script.sh')

    def test_dict(self):
        self.assertDictEqual(self.test, self.json, 'Message')
</code></pre>
<p>As you can see at first I am preparing files and then run <code>linux_script.sh</code>. Next step is to compare two dict, but it cannot be done until linux script will be completed - the script is running other application which creates .json file. Until .json file is not prepared, test_dict cannot be executed because it will fail. </p>
<p>Question: python will be waiting for this line to be completed: <code>os.system('./linux_script.sh</code>, and then run test? If not how I can force python to do that?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>os.system()</code> does wait for the command to complete before returning.</p>
<p>Note that, since you're calling the function directly inside the class body, this will execute when your test class <em>is being loaded</em>, not when it gets instantiated. If that's not what you want, move the call into the constructor, a set up method or directly into the test method itself.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer">docs.python.org/3/library/subprocess.html#subprocess.run</a></span>
<span class="comment-copy">Using a relative path for a script is inviting trouble in the future.  Better to put the script in a well-known directory and add that to your <code>PATH</code> environment variable.</span>
<span class="comment-copy">I will add it to a setUp method. Thanks</span>
