<div class="post-text" itemprop="text">
<p>I'm following <a href="http://docs.python-guide.org/en/latest/starting/install3/osx/#install3-osx" rel="nofollow noreferrer">these instructions</a> on installing Python 3 with with Homebrew on my MacBook running Mac OSX High Sierra.</p>
<p>I'm having trouble with this step:</p>
<blockquote>
<p><em>Once you’ve installed Homebrew, insert the Homebrew directory at the top of your PATH environment variable. You can do this by adding the following line at the bottom of your ~/.profile file</em></p>
<p><em><code>export PATH=/usr/local/bin:/usr/local/sbin:$PATH</code></em></p>
</blockquote>
<p>After updating <code>~/.profile</code> and running <code>python --version</code>, I still see <code>Python 2.7.10</code>.</p>
<p>This seems to be an issue because when I follow the <a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/#virtualenvironments-ref" rel="nofollow noreferrer">next page</a> to install a virtual environment using <code>pip install --user pipenv</code>, I get the following warning after installation completes:</p>
<blockquote>
<p>The scripts pewtwo, pipenv and pipenv-resolver are installed in '/Users/charliesneath/Library/<strong>Python/2.7</strong>/bin' which is not on PATH.</p>
</blockquote>
<p>It seems like my system is not properly prioritizing Homebrew's installation of Python 3.</p>
<p>How can I fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>For Mac, when you install python3, it is installed in a different path as those examples you are citing. To find out where the python3 is installed, type the command line:</p>
<pre><code>which python3
</code></pre>
<p>It will return <code>/Library/Frameworks/Python.framework/Versions/3.6/bin/python3</code>.</p>
<p>Add the following lines to .bash_profile:</p>
<pre><code>PATH="/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}"
export PATH
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I solved this once I eventually understood the <a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/#installing-pipenv" rel="nofollow noreferrer">following instructions</a>:</p>
<blockquote>
<p><em>If <code>pipenv</code> isn’t available in your shell after installation, you’ll need to add the user base‘s binary directory to your <code>PATH</code>.</em></p>
<p><em>On Linux and macOS you can find the user base binary directory by running <code>python -m site --user-base</code> and adding <code>bin</code> to the end. For example, this will typically print <code>~/.local</code> (with <code>~</code> expanded to the absolute path to your home directory) so you’ll need to add <code>~/.local/bin</code> to your <code>PATH</code>. You can set your <code>PATH</code> permanently by modifying <code>~/.profile</code>.</em> </p>
</blockquote>
<p>My system outputs <code>/Users/charliesneath/Library/Python/3.6</code> when running the command, so I added the following to <code>~/.profile</code>:</p>
<p><code>export PATH="~/Library/Python/3.6/bin"</code></p>
<p><strong>Does anyone know why my system is not outputting <code>~/.local</code> as suggested by the instructions above?</strong></p>
<hr/>
<p>EDIT: It seems like version of Python I've installed is considered "framework build," and according to the <a href="https://docs.python.org/3/library/site.html#site.USER_BASE" rel="nofollow noreferrer">Python documentation</a>, the path I added to <code>~/.profile</code> is the default "user base directory" for this framework:</p>
<blockquote>
<p><strong>site.USER_BASE</strong>: Default value is ~/.local for UNIX and Mac OS X non-framework builds, ~/Library/Python/X.Y for Mac framework builds, and %APPDATA%\Python for Windows.</p>
</blockquote>
</div>
<span class="comment-copy">Are you calling the virtualenv command? <code>virtualenv -p &lt;path to python3&gt;</code>?</span>
<span class="comment-copy">What is the output you receive after you do <code>brew install python</code> according to the instructions of your link?</span>
<span class="comment-copy"><code>python3 -m venv env &amp;&amp; source env/bin/active</code> ?</span>
<span class="comment-copy">@MikeTung Add the command I used to install the virtualenv—is that helpful?</span>
<span class="comment-copy">@MikeTung I'm getting <code>-bash: virtualenv: command not found</code> when running that command + path.   I'm also getting <code>-bash: pipenv: command not found</code> after trying to install pipenv with <code>pip install --user pipenv</code>.</span>
<span class="comment-copy">Do you know why this needs to be added to <code>.bash_profile</code> and not <code>.profile</code>?</span>
