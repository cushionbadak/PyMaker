<div class="post-text" itemprop="text">
<p>This feels redundant:</p>
<pre><code>name = 'Isaiah'
myInfo = {
  'name': name
}
</code></pre>
<p>Is there a shorter, idiomatic way to do this, like in JavaScript:</p>
<pre><code>myInfo = { name }
</code></pre>
<p><strong>Edit</strong>: changed the variable name from <code>dict</code> to <code>myInfo</code>, since <code>dict</code> is a keyword.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, there isn't. Also it would be unlikely that such syntax would ever emerge, as the construct</p>
<pre><code>{name}
</code></pre>
<p>has been reserved for <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer"><em><code>set</code></em> literals</a>.</p>
<p>The other alternative you have is to use the <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer"><code>dict</code> constructor</a>:</p>
<pre><code>d = dict(name=name)
</code></pre>
<p>P.S. since <code>dict</code> is a name that's been defined in the <code>builtins</code> module, please do not name your variables as <code>dict</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>In the very rare case where you're trying to make a dict out of a huge and/or dynamic subset of the local, global, or self namespace, you can do that by filtering the appropriate namespace:</p>
<pre><code>keys = set('name age height balance hoopiness'.split())
d = {key: value for (key, value) in locals().items()
     if key in keys}
</code></pre>
<hr/>
<p>But obviously this is not worth doing for a simple case. The shortest you could make it would be:</p>
<pre><code>d = {key: value for (key, value) in locals().items() if key == 'name'}
</code></pre>
<p>â€¦ which does avoid repeating <code>name</code>, but is very, very silly.</p>
<p>For just creating a dict out of one or two statically-named variables, you should just be explicit:</p>
<pre><code>d = {'name': name}
d = dict(name=name)
</code></pre>
</div>
<span class="comment-copy">In this short example, its <code>{'name':'Isaiah'}</code>, but in general if you want to assign a variable to a dict, this is pretty much it. Notice in python that <code>{ name }</code> is a <code>set</code>.</span>
<span class="comment-copy">@tdelaney well I'm wanting the <i>name</i> of the variable to be the key, as well as the value of the variable to be the value.</span>
