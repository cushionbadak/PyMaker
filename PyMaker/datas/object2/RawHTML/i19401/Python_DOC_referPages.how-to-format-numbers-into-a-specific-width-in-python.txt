<div class="post-text" itemprop="text">
<p>How would you format this??</p>
<pre><code>for i in range(11):
    print(i)
</code></pre>
<p>so it would look like:</p>
<pre><code> 0
 1
 2
 3
 4
 5
 6
 7
 8
 9
10
</code></pre>
<p>instead of:</p>
<pre><code>0
1
2
3
4
5
6
7
8
9
10
</code></pre>
<p>I would like all the single digits to be pushed into 2 spaces, instead of 1</p>
</div>
<div class="post-text" itemprop="text">
<p>This is <a href="http://docs.python.org/3/library/string.html#formatstrings">the new way</a>:</p>
<pre><code>print("{:&gt;2}".format(i))
</code></pre>
<p>This is the <a href="http://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting">old printf-like way</a>:</p>
<pre><code>print('%2u' % i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Generally you can use the format specifier, but you can also use <code>str.rjust</code></p>
<pre><code>print str(i).rjust(2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or, you can do</p>
<pre><code>"%2d" % 5
</code></pre>
<p>to output " 5"</p>
</div>
<span class="comment-copy">Your answer is more comprehensive than mine was, go for it. :)</span>
<span class="comment-copy">+1. But I'd reverse the order and put the new way before the old way.</span>
<span class="comment-copy">Fixed links to point to python3 docs &gt;_&gt;</span>
<span class="comment-copy">Also, for %-formatting, you're really supposed to use a <code>tuple</code> of format parameters, even if there's only one of them, so <code>print('%2u' % (i,))</code>.</span>
<span class="comment-copy">If format requires a single argument, values may be a single non-tuple object (quoting docs verbatim).</span>
