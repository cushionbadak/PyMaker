<div class="post-text" itemprop="text">
<p>I'm going slightly mad on this one, trying with Python 3.3.0 .</p>
<p>On <a href="http://docs.python.org/3/tutorial/classes.html" rel="nofollow">http://docs.python.org/3/tutorial/classes.html</a> there is a class example with the following code:</p>
<pre><code>class Bag:
    def __init__(self):
        self.data = []
    def add(self, x):
        self.data.append(x)
</code></pre>
<p>First I wonder that it is missing the object <strong>class somename(object)</strong> that Python3 normally demands.</p>
<pre><code>class Bag(object):
</code></pre>
<p>Second, when I try to run it I get this error message:</p>
<pre><code>&gt;&gt;&gt; a=Bag
&gt;&gt;&gt; a.add('23')
Traceback (most recent call last):
  File "&lt;pyshell#14&gt;", line 1, in &lt;module&gt;
    a.add('23')
TypeError: add() missing 1 required positional argument: 'x'
</code></pre>
<p>WTF?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>First I wonder that it is missing the object class somename(object)
  that Python3 normally demands.</p>
</blockquote>
<p>In Python 3, your class will automatically derive from <code>object</code>, and so there's no need to do it explicitly.  The only reason this wasn't done in 2 was for backward compatibility, because so-called new-style (deriving-from-object) classes behaved slightly differently from old-style classes.</p>
<pre><code>a=Bag
</code></pre>
<p>This doesn't make an instance of <code>Bag</code>, it just says that <code>a</code> is now a new name for the <code>Bag</code> class.  As a result, when you use</p>
<pre><code>a.add('23')
</code></pre>
<p>you're not calling the method <code>add</code> of an instance, so the instance isn't being passed as the first argument (it can't be, as there isn't an instance yet!)  As a result, it's interpreting '23' as your value for <code>self</code>, and therefore you didn't pass an <code>x</code>, hence</p>
<pre><code>TypeError: add() missing 1 required positional argument: 'x'
</code></pre>
<p>Try</p>
<pre><code>&gt;&gt;&gt; a = Bag()
&gt;&gt;&gt; a.add('23')
&gt;&gt;&gt; a.data
['23']
</code></pre>
<p>instead.</p>
</div>
<span class="comment-copy">Brackets.......(doh)...thanks!</span>
