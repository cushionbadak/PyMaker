<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1868714/how-do-i-copy-an-entire-directory-of-files-into-an-existing-directory-using-pyth">How do I copy an entire directory of files into an existing directory using Python?</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
</ul>
</div>
<p>I have a directory /a/b/c that has files and subdirectories.
I need to copy the /a/b/c/* in the /x/y/z directory. What python methods can I use?</p>
<p>I tried <code>shutil.copytree("a/b/c", "/x/y/z")</code>, but python tries to create /x/y/z and raises an <code>error "Directory exists"</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I found this code working.</p>
<pre><code>from distutils.dir_util import copy_tree

# copy subdirectory example
fromDirectory = "/a/b/c"
toDirectory = "/x/y/z"

copy_tree(fromDirectory, toDirectory)
</code></pre>
<p>Reference:</p>
<ul>
<li>Python 2: <a href="https://docs.python.org/2/distutils/apiref.html#distutils.dir_util.copy_tree" rel="nofollow noreferrer">https://docs.python.org/2/distutils/apiref.html#distutils.dir_util.copy_tree</a></li>
<li>Python 3:  <a href="https://docs.python.org/3/distutils/apiref.html#distutils.dir_util.copy_tree" rel="nofollow noreferrer">https://docs.python.org/3/distutils/apiref.html#distutils.dir_util.copy_tree</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You can also use glob2 to recursively collect all paths (using ** subfolders wildcard) and then use shutil.copyfile, saving the paths</p>
<p>glob2 link: <a href="https://code.activestate.com/pypm/glob2/" rel="nofollow">https://code.activestate.com/pypm/glob2/</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from subprocess import call

def cp_dir(source, target):
    call(['cp', '-a', source, target]) # Linux

cp_dir('/a/b/c/', '/x/y/z/')
</code></pre>
<p>It works for me. Basically, it executes shell command <strong>cp</strong>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The python libs are obsolete with this function. I've done one that works correctly:</p>
<pre><code>import os
import shutil

def copydirectorykut(src, dst):
    os.chdir(dst)
    list=os.listdir(src)
    nom= src+'.txt'
    fitx= open(nom, 'w')

    for item in list:
        fitx.write("%s\n" % item)

    fitx.close()

    f = open(nom,'r')
    for line in f.readlines():
        if "." in line:
            shutil.copy(src+'/'+line[:-1],dst+'/'+line[:-1])
        else:
            if not os.path.exists(dst+'/'+line[:-1]):
                os.makedirs(dst+'/'+line[:-1])
                copydirectorykut(src+'/'+line[:-1],dst+'/'+line[:-1])
            copydirectorykut(src+'/'+line[:-1],dst+'/'+line[:-1])
    f.close()
    os.remove(nom)
    os.chdir('..')
</code></pre>
</div>
<span class="comment-copy">Are you trying to move or copy the directory over? Your title says move, but your content says copy. Since these are two different things, it matters exactly which one you mean.</span>
<span class="comment-copy">Maybe give an example of before and after, to make it clearer what you want the effect to be, as well?</span>
<span class="comment-copy">Thanks for your comment, I'll update the heading. It's copy, not move.</span>
<span class="comment-copy">Np. Also, like @Xymostech said, we're slightly unclear on the desired output. Do you want: /x/y/z/a/b/c or /x/y/z/c? Your use of <code>copytree</code> implies the former, but I just want to make sure.</span>
<span class="comment-copy">Could you simply delete any <code>/x/y/z/</code> directory first (<code>shutil.rmtree()</code>) and then do <code>copytree()</code>?</span>
<span class="comment-copy">An excellent solution, I suggest adding <code>update=1</code> to copy_tree() if that is what you need.</span>
<span class="comment-copy">Just bear in mind that copy_tree will fail if you call it twice for same set of args, and you've wiped the destination in the meantime. This is due to path caching in mkpath, see <a href="https://bugs.python.org/issue10948" rel="nofollow noreferrer">bugs.python.org/issue10948</a></span>
<span class="comment-copy">What if I want to overwrite all existing files no matter what. Does this function overwrite existing files if update=0?</span>
<span class="comment-copy">funnily enough shutil.copy2 in a loop is much faster than copying the directory as a whole.</span>
<span class="comment-copy">FYI pathlib Path objects break dir_utils, which wants paths as text.</span>
<span class="comment-copy">yes, but this is not pythonic way :)</span>
<span class="comment-copy">@ArtsiomPraneuski I agree, but sometimes may be helpful. :)</span>
<span class="comment-copy">this is called ''Kludge"</span>
