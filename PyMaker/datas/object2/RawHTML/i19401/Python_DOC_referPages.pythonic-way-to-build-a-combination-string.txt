<div class="post-text" itemprop="text">
<p>I have one list, like so,</p>
<pre><code>a = ['dog','cat','mouse']
</code></pre>
<p>I want to build a list that is a combination of the all the list elements and  looks like,</p>
<pre><code>ans = ['cat-dog', 'cat-mouse','dog-mouse']
</code></pre>
<p>This is what I came up with,</p>
<pre><code>a = ['dog','cat','mouse']
ans = []
for l in (a):
    t= [sorted([l,x]) for x in a if x != l]
    ans.extend([x[0]+'-'+x[1] for x in t])
print list(set(sorted(ans)))
</code></pre>
<p>Is there a simpler and a more pythonic way! </p>
</div>
<div class="post-text" itemprop="text">
<p>How important is the ordering?</p>
<pre><code>&gt;&gt;&gt; a = ['dog','cat','mouse']
&gt;&gt;&gt; from itertools import combinations
&gt;&gt;&gt; ['-'.join(el) for el in combinations(a, 2)]
['dog-cat', 'dog-mouse', 'cat-mouse']
</code></pre>
<p>Or, to match your example:</p>
<pre><code>&gt;&gt;&gt; ['-'.join(el) for el in combinations(sorted(a), 2)]
['cat-dog', 'cat-mouse', 'dog-mouse']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="http://docs.python.org/3/library/itertools.html" rel="nofollow">itertools</a> module:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; map('-'.join, itertools.combinations(a, 2))
['dog-cat', 'dog-mouse', 'cat-mouse']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>itertools</code> is surely the way to go here. If you want to do it only with build-ins, use:</p>
<pre><code>a = ['dog','cat','mouse']
ans = [x + '-' + y for x in a for y in a if x &lt; y]
</code></pre>
</div>
<span class="comment-copy">A <code>sorted</code> will take care of it if it is important: <code>['-'.join(c) for c in combinations(sorted(a),2)]</code> yields the answer given in the question text.</span>
<span class="comment-copy">@mark So does <code>combinations(sorted(a), 2)</code> ?</span>
<span class="comment-copy">that's what I said. ;)</span>
<span class="comment-copy">@MarkReed I must have imagined the "couple of sorted" then :P</span>
<span class="comment-copy">You were just too fast, @JonClements.  Thanks, though. :)</span>
