<div class="post-text" itemprop="text">
<p>I am doing some calculations and before outputting I want to change the number to a fraction.
For example 0.25 would become 1/4, well in a list of the two numbers [1, 4].</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="http://docs.python.org/3/library/fractions.html" rel="nofollow"><code>fractions</code> module</a> to do that:</p>
<pre><code>&gt;&gt;&gt; import fractions
&gt;&gt;&gt; fractions.Fraction(0.25)
Fraction(1, 4)
&gt;&gt;&gt; f = fractions.Fraction(0.25)
&gt;&gt;&gt; f.numerator
1
&gt;&gt;&gt; f.denominator
4
</code></pre>
<p>For arbitrary floats as input, you really want to use the <a href="http://docs.python.org/2/library/fractions.html#fractions.Fraction.limit_denominator" rel="nofollow"><code>.limit_denominator()</code> method</a> to limit your fractions to sane approximations of the floating point number:</p>
<pre><code>&gt;&gt;&gt; from math import pi, cos
&gt;&gt;&gt; fractions.Fraction(cos(pi/3))
Fraction(4503599627370497, 9007199254740992)
&gt;&gt;&gt; fractions.Fraction(cos(pi/3)).limit_denominator()
Fraction(1, 2)
</code></pre>
</div>
<span class="comment-copy">I would use <code>.limit_denominator</code> to avoid weird output with e.g. <code>Fraction(0.1)</code>. Otherwise, this is an absolutely solid answer.</span>
<span class="comment-copy">@nneonneo: Sure, and you should <i>always</i> study the documentation of any module you want to start using, not just take the answer example code for granted! :-)</span>
