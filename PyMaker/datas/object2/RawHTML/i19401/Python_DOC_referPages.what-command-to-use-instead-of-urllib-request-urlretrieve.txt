<div class="post-text" itemprop="text">
<p>I'm currently writing a script that downloads a file from a URL</p>
<pre><code>import urllib.request
urllib.request.urlretrieve(my_url, 'my_filename')
</code></pre>
<p>According to the docs, <a href="http://docs.python.org/3/library/urllib.request.html#urllib.request.urlretrieve" rel="nofollow noreferrer"><code>urllib.request.urlretrieve</code></a> is a legacy interface and might become deprecated, therefore I would like to avoid it so I don't have to rewrite this code in the near future.</p>
<p>I'm unable to find another interface like <code>download(url, filename)</code> in standard libraries.  If <code>urlretrieve</code> is considered a legacy interface in Python 3, what is the replacement?</p>
</div>
<div class="post-text" itemprop="text">
<p><em>Deprecated</em> is one thing, <em>might become deprecated at some point in the future</em> is another.</p>
<p>If it suits your needs, I'd continuing using <code>urlretrieve</code>.</p>
<p>That said, you can do without it:</p>
<pre><code>from urllib.request import urlopen
from shutil import copyfileobj

with urlopen(image['url']) as in_stream, open(p, 'wb') as out_file:
    copyfileobj(in_stream, out_file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>requests is really nice for this.  There are a few dependencies though to install it.  Here is an example.</p>
<pre><code>import requests
r = requests.get('imgurl')
with open('pic.jpg','wb') as f:
  f.write(r.content)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another solution without the use of <a href="https://docs.python.org/3/library/shutil.html" rel="nofollow noreferrer"><code>shutil</code></a> and no other external libraries like <a href="http://docs.python-requests.org/en/latest/" rel="nofollow noreferrer"><code>requests</code></a>.</p>
<pre><code>import urllib.request

image = {'url': 'https://cdn.sstatic.net/Sites/stackoverflow/img/appletouch-icon.png'}
p = 'image.png'

response = urllib.request.urlopen(image['url'])
image = response.read()

file = open(p, 'wb')

file.write(image)
file.close()
</code></pre>
</div>
<span class="comment-copy">Thanks a lot. I had no idea the shutil library even existed :)</span>
<span class="comment-copy">Wow, this worked beautifully. I was looking for the same thing, but for small pieces of audio, and couldn't figure out how to save it to a file. Didn't find <code>urlretrieve</code> for a while, and I didn't realize that <code>urlopen</code> would give me the bytes -- I thought I should look for a method that can save the file, not go into the file and read/save the bits. I guess this is standard practice with programming so it should make sense, but I've never worked with I/O before. Thank you, it's way simpler than I feared it might be.</span>
<span class="comment-copy">Thanks for copyfileobj! The problem with <code>urlretrieve</code> is that it has no way to determine server failure (502/404/whatever).</span>
<span class="comment-copy">Hi and welcome to SO. Code-only answers generally considered as less useful. Please edit your answer to add some context and explain your solution.</span>
