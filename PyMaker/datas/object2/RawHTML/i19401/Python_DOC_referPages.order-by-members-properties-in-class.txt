<div class="post-text" itemprop="text">
<p>I'm working on a genetic algorithm problem. Suppose I have a <code>Population()</code> class that has a list of <code>Individual()</code>. Each individual has a score associated with it. What is a good way to order / rank these individuals based their scores in the population? As an example:</p>
<pre><code>class Individual(object):
    rr = 100
    def __init__(self):
        self.score = random.randrange(self.rr)

class Population(object):
    def __init__(self, size):
        self.size = size
        self.population = [Individual() for _ in xrange(self.size)]

pop = Population(5)
for i in xrange(pop.size):
    print pop.population[i].score
</code></pre>
<p>Is there a Pythonic way to sort these individuals by their scores? Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Sure, use the <code>key</code> parameter to the <code>.sort()</code> method:</p>
<pre><code>from operator import attrgetter
pop.population.sort(key=attrgetter('score'))
</code></pre>
<p>Using <a href="http://docs.python.org/2/library/operator.html#operator.attrgetter" rel="nofollow"><code>operator.attrgetter()</code></a> makes this a little easier but is not required.</p>
<p>See the <a href="http://wiki.python.org/moin/HowTo/Sorting/" rel="nofollow">Sorting Howto</a> on the Python wiki for more tips and tricks.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>sorted_pop = sorted(pop.population, lambda x, y: cmp(x.score, y.score))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Without importing any libraries:</p>
<pre><code>pop.population.sort(key=lambda x: x.score)
</code></pre>
</div>
<span class="comment-copy">......Gorgeous!</span>
<span class="comment-copy">Should be getting 'score', not 'rr', but nice answer.</span>
<span class="comment-copy">@mVChr: indeed, corrected. Thanks.</span>
<span class="comment-copy">using a cmp function does more work, and the option has been removed from Python 3 (although there is a <a href="http://docs.python.org/3/library/functools.html#functools.cmp_to_key" rel="nofollow noreferrer">workaround</a>).</span>
<span class="comment-copy">@MartijnPieters good to know, thank you.</span>
