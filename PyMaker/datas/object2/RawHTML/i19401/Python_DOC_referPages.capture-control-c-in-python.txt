<div class="post-text" itemprop="text">
<p>I want to know if it's possible to catch a Control-C in python in the following manner:</p>
<pre><code> if input != contr-c:
    #DO THINGS
 else:
    #quit
</code></pre>
<p>I've read up on stuff with <code>try</code> and <code>except KeyboardInterrupt</code> but they're not working for me.</p>
</div>
<div class="post-text" itemprop="text">
<p>Consider reading <a href="http://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="noreferrer">this</a> page about handling exceptions.. It should help.</p>
<p>As <a href="https://stackoverflow.com/a/15318291/1931274">@abarnert</a> has said, do <code>sys.exit()</code> after <code>except KeyboardInterrupt:</code>.</p>
<p>Something like </p>
<pre><code>try:
    # DO THINGS
except KeyboardInterrupt:
    # quit
    sys.exit()
</code></pre>
<p>You can also use the built in <code>exit()</code> function, but as <a href="https://stackoverflow.com/questions/15318208/capture-control-c-in-python/15319004#comment21631060_15319004">@eryksun</a> pointed out, <code>sys.exit</code> is more reliable.</p>
</div>
<div class="post-text" itemprop="text">
<p>From your comments, it sounds like your only problem with <code>except KeyboardInterrupt:</code> is that you don't know how to make it exit when you get that interrupt.</p>
<p>If so, that's simple:</p>
<pre><code>import sys

try:
    user_input = input()
except KeyboardInterrupt:
    sys.exit(0)
</code></pre>
</div>
<span class="comment-copy">Something like this: <a href="http://stackoverflow.com/questions/1112343/how-do-i-capture-sigint-in-python" title="how do i capture sigint in python">stackoverflow.com/questions/1112343/…</a>?</span>
<span class="comment-copy">Yes, but I've tried using <code>KeyboardInterrupt</code> but instead of just exiting, Python does the operations in <code>try</code>, which is not what I want.</span>
<span class="comment-copy">What platform are you on? And what version of Python? And are you reading input via <code>input</code>/<code>stdin.read</code>/etc., a platform-specific <code>getch</code> (if so, which?), <code>curses</code>, or …? It's generally possible in every case, but the answers are very different between the cases.</span>
<span class="comment-copy">@pauliwago: What do you mean "Python does the operations in <code>try</code>"? Normally, when you handle an exception, Python does the operations in the <code>except</code> block. If you want it to quit, you can just, e.g., call <code>sys.exit()</code> in that <code>except</code> block.</span>
<span class="comment-copy">And more generally: Just saying "not working for me" isn't very useful. Tell us exactly what you tried, what you expected, and what happened instead.</span>
<span class="comment-copy"><code>site.exit</code> (builtins exit) won't be defined if Python is started with <code>-S</code>. That isn't common, but still, <code>sys.exit</code> is more dependable. You can also use <code>raise SystemExit([exit_code=0])</code>.</span>
