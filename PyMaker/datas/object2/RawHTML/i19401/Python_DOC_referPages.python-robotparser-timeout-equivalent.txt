<div class="post-text" itemprop="text">
<p>Is there a way in Python 3.3.0 to set the timeout of the robotparser.read() function?
(such as in the urllib.request urlopen)</p>
<p>The default timeout of 60 seconds is a bit drastic.</p>
<p>(I'm self-teaching myself into Python.)</p>
<p><a href="http://docs.python.org/3.3/library/urllib.robotparser.html?highlight=robotparser#urllib.robotparser.RobotFileParser.read" rel="nofollow">Python 3.3.0 - robotparser</a></p>
<p><a href="http://docs.python.org/3.0/library/urllib.request.html" rel="nofollow">Python 3.3.0 - urllib.request</a></p>
</div>
<div class="post-text" itemprop="text">
<p>No, you'd have to either set the global default timout with <a href="http://docs.python.org/3/library/socket.html#socket.setdefaulttimeout" rel="nofollow"><code>socket.setdefaulttimeout()</code></a>, or subclass the <code>RobotFileParser</code> class to add a custom timeout:</p>
<pre><code>from urllib.robotparser import RobotFileParser
import urllib.request

class TimoutRobotFileParser(RobotFileParser):
    def __init__(self, url='', timeout=60):
        super().__init__(url)
        self.timeout = 60

    def read(self):
        """Reads the robots.txt URL and feeds it to the parser."""
        try:
            f = urllib.request.urlopen(self.url, timeout=self.timeout)
        except urllib.error.HTTPError as err:
            if err.code in (401, 403):
                self.disallow_all = True
            elif err.code &gt;= 400:
                self.allow_all = True
        else:
            raw = f.read()
            self.parse(raw.decode("utf-8").splitlines())
</code></pre>
</div>
