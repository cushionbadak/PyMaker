<div class="post-text" itemprop="text">
<p>I need a array of <code>n</code> elements, in which each element has 2 attributes.</p>
<pre><code>A.element[0].name="qwe"
A.element[0].age=23
A.element[1].name="www"
A.element[1].age=24
...
A.element[n].name="e"
A.element[n].age=25
</code></pre>
<p>Is there another form which doesn't involve designing a class?</p>
</div>
<div class="post-text" itemprop="text">
<p>There is <a href="http://docs.python.org/3/library/collections.html?highlight=namedtuple#collections.namedtuple" rel="nofollow noreferrer"><code>collections.namedtuple</code></a>.</p>
<pre><code>&gt;&gt;&gt; from collections import namedtuple
&gt;&gt;&gt; Element = namedtuple('Element', 'name age')
&gt;&gt;&gt; A.element[0] = Element('qwe', 23)
&gt;&gt;&gt; print A.element[0].name
qwe
&gt;&gt;&gt; print A.element[0].age
23
</code></pre>
<p>However these are tuples, not lists, and so they can't be changed. Also, these are still essentially classes, but you just don't define them with the <code>class</code> keyword. See <a href="https://stackoverflow.com/a/2970722/1907098">this</a> for an in-depth explanation.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use an array of dictionaries.</p>
<p>Something like this:</p>
<pre><code>A = [
    {'name': 'qwe', 'age': 23},
    {'name': 'www', 'age': 24}
]
</code></pre>
<p>You can simplify inserting by doing something like this:</p>
<pre><code>A = []

def addPerson(name, age):
    global A
    A.append({'name': name, 'age': age})
</code></pre>
<p>Or just make the dictionaries into arrays, so you do not have to specify 'name' and 'age' in every line. It might be easier writing a class representing a person (or whatever it is).</p>
</div>
<div class="post-text" itemprop="text">
<p>If you use numpy, you can also use structure array:</p>
<pre><code>In [66]: struct = np.dtype([("name", np.object), ("age", np.int)])
a = np.array([("abc", 12), ("def", 20), ("xyz", 50)], dtype=struct)
a[0]
Out[66]: ('abc', 12)

In [67]: a[0]["name"]
Out[67]: 'abc'

In [68]: a["name"]
Out[68]: array([abc, def, xyz], dtype=object)

In [69]: a["age"]
Out[69]: array([12, 20, 50])

In [72]: a["age"][2]
Out[72]: 50
</code></pre>
</div>
<span class="comment-copy">I liked, but remove the global!</span>
