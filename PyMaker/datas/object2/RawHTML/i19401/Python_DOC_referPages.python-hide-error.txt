<div class="post-text" itemprop="text">
<p>Alright, I am fairly new to python and I am making a console witch will allow multiple features, one of those is to grab a page source and either print it on the page, or if they have another arg then name the file of that arg... The first arg would be the website url to grab the source from.</p>
<p>My imports are:</p>
<pre><code>import os, urllib.request
</code></pre>
<p>This is my code:</p>
<pre><code>def grab(command, args, argslist):
    if args == "":
        print("The " + command + " command wan't used correctly type help " + command + " for help...")
    if args != "":
        print("This may take a second...")
        try:
            argslistcheck = argslist[0]
            if argslistcheck[0:7] != "http://":
                argslist[0] = "http://" + argslist[0]
            with urllib.request.urlopen(argslist[0]) as url:
                source = url.read()
                source = str(source, "utf-8")
        except IndexError:
            print("Couln't connect")
            source = ""
        try:
            filesourcename = argslist[1] + ".txt"
            filesourceopen = open(filesourcename, "w")
            filesourceopen.write(source)
            filesourceopen.close()
            print("You can find the file save in " + os.getcwd() + " named " + argslist[1] + ".txt.")
        except IndexError:
            print(source)
</code></pre>
<p>Now while I will be ok with improving my code right now I'm focusing on the main point. Right now it works, I will improve the code later on, the only problem is that if the user inputs a fake website or a website page that doesn't exist then it returns lot's of errors. Yet if I change:</p>
<pre><code>except IndexError:
    print("Coulnd't connect")
    source = ""
</code></pre>
<p>to just:</p>
<pre><code>except:
    print("Couldn't connect")
    source = ""
</code></pre>
<p>Then it always says Couldn't connect...</p>
<p>Any help? I didn't put the rest of my code because I didn't think it would be useful, if you need it I can put it all.</p>
<p>The reason I titled this hide error is because it still works for some reason it just says that it was unable to connect, if the user types a second argument then it will save the source to the file he named.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>try:
    argslistcheck = argslist[0]
    if argslistcheck[0:4] != "http://":
        argslist[0] = "http://" + argslist[0]
    with urllib.request.urlopen(argslist[0]) as url:
        source = url.read()
        source = str(source, "utf-8")
except IndexError:
    print("Couln't connect")
    source = ""
</code></pre>
<p>In that code block, the only thing that can raise an <code>IndexError</code> exception is the <code>argslist[0]</code>. This will happen if there is no element within that list. This is very likely not your problem.</p>
<p>Now if an invalid address is entered, <code>urlopen</code> will fail. But it will not raise an <code>IndexError</code> but rather an <a href="http://docs.python.org/3.1/library/urllib.error.html#urllib.error.URLError" rel="nofollow"><code>urllib.error.URLError</code></a> or the more specialized <a href="http://docs.python.org/3.1/library/urllib.error.html#urllib.error.HTTPError" rel="nofollow"><code>urllib.error.HTTPError</code></a>.</p>
<p>If you just write <code>except IndexError</code> you will only catch that error, but not the exception raised by the <code>urlopen</code>. If you want to catch those as well, you have to add another <code>except</code> case:</p>
<pre><code>except IndexError:
    print('Argument is missing')
except urllib.error.URLError:
    print('Could not connect to the URL.')
</code></pre>
<p>The alternative is to just catch <em>any</em> exception by just not specifying any (this is what you did in your last code). Note that this is usually not recommended as it will hide any exceptions that occur which you might not have expected to ever happen; i.e. it will hide bugs. So if you know that there are only a few possible exceptions, just catch those and handle them explicitely.</p>
</div>
<span class="comment-copy">instead of throwing in <code>try: except:</code> when you get errors, have you thought of actually avoiding the error in the first place?</span>
<span class="comment-copy">What do you mean? If I could avoid the error then yes I would like that as well.</span>
<span class="comment-copy">Why were you getting <code>IndexError</code>s in the first place?</span>
<span class="comment-copy">Honestly I had no idea that except would focus on certain errors, I thought that it meant all errors, It's all cleared up now.</span>
<span class="comment-copy">I didn't know you could specify the except that much, thank you!</span>
<span class="comment-copy">@TrevorPeyton Then you might be interested in <a href="http://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">this part</a> of the tutorial for more information :)</span>
