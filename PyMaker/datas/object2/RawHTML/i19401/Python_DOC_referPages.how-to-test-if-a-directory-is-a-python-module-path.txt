<div class="post-text" itemprop="text">
<p>In order to test if a directory <code>path</code> if a python module path (i.e. contains a file named <code>__init__.py</code>) one can do something like</p>
<pre><code>os.path.isfile(os.path.join(path, '__init__.py'))
</code></pre>
<p>I wonder if there is a special function call to do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="http://docs.python.org/2/library/imp.html#imp.find_module" rel="nofollow"> imp.find_module(name[, path])</a> to test if a particular module is present in a certain path</p>
<p>How to use</p>
<pre><code>import imp
fname, pathname, description = imp.find_module("__test__.py", path)
if not fname:
    #File is not present
else:
    #File is present
    fname.close()
</code></pre>
<p><strong>Form the documentation</strong></p>
<blockquote>
<p>If search is successful, the return value is a 3-element tuple (file,
  pathname, description): ..... If the module does not live in a file,
  the returned file is None, pathname is the empty string, and the
  description tuple contains empty strings for its suffix and mode</p>
</blockquote>
</div>
<span class="comment-copy">Note that that is not a future-proof solution: <a href="http://docs.python.org/3/whatsnew/3.3.html" rel="nofollow noreferrer">New in Python 3.3</a></span>
