<div class="post-text" itemprop="text">
<p>I have a folder that contain a lot of files and i need to optimize the speed of the search because i have over 1k of different files to search , actually i am using this : </p>
<pre><code>for path,dirs,files in os.walk('M:/MYFOLDER'):
</code></pre>
<p>But it is taking really long time ( over 30 minutes ) to search in all the folder (because it search file by file), but the "Windows search" take 20 second to find it .</p>
<p>Do you know some tricks to optimize the search and make it more fast.</p>
<p>Thanks for any tips.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are in the land of <strong><a href="http://en.wikipedia.org/wiki/Information_retrieval" rel="nofollow">Information Retrieval</a></strong>, instead of searching from scratch every time - do what search engines do:</p>
<ul>
<li><a href="http://en.wikipedia.org/wiki/Index_%28search_engine%29" rel="nofollow">Index</a> your data (pre-processing, done only once, or one in a while - this assumes the collection of documents is relatively stable - and changes very little comparing to the number of searches)</li>
<li>Each time a query comes - search in the index to quickly find the answer.</li>
</ul>
<p>This approach will allow you later on not only to return related documents - but will also allow you to rank them from most relevant to least relevant by using some already proven heuristics, such as the <a href="http://en.wikipedia.org/wiki/Tf%E2%80%93idf" rel="nofollow">tf-idf model</a>.</p>
<p>There is an open-source project called <strong><a href="http://lucene.apache.org/core/" rel="nofollow">Lucene</a></strong>, which also has <a href="http://lucene.apache.org/pylucene/" rel="nofollow">python binding</a> that can help you with the implementations. Lucene is a mature widely used (and widely tested) Information-Retrieval library (used in eclipse search, for example)</p>
<hr/>
<p><strong>P.S.</strong> If you find yourself interested in Information Retrieval further more, I recommend reading Manning's <a href="http://nlp.stanford.edu/IR-book/" rel="nofollow">Introduction to Information Retrieval</a> - it will give you great understanding on the field - but it is really not mandatory for just applying your task.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://www.microsoft.com/en-us/download/details.aspx?id=7388" rel="nofollow">Windows Search SDK</a> + <a href="http://docs.python.org/3/library/ctypes.html" rel="nofollow">Python ctypes</a>. </p>
</div>
<span class="comment-copy">Windows search cheats; it <i>indexes</i> the data beforehand. In other words, it uses a dedicated search engine, and you are doing a brute-force search.</span>
<span class="comment-copy">@MartijnPieters Could he then index the files himself (supposing he is the one to place them in the first place, or run a one-time operation to do so?)</span>
<span class="comment-copy">is there a way to use windows search with python ? or any similar ?</span>
<span class="comment-copy">@BlackVegetable: Sure; write a new search engine yourself. :-)</span>
<span class="comment-copy">@MartijnPieters Ah, I wasn't aware this would be a monumental task.  I thought perhaps there was some simplish way to cut down the time from 30 mins to 2 or something...</span>
<span class="comment-copy">I am a bit lost after searching for python ctypes using windows sdk , can you give me more info please .</span>
<span class="comment-copy">cyptes allows calling functions in DLLs or shared libraries and Windows Search SDK providers such API. <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb266517(v=vs.85).aspx" rel="nofollow noreferrer">msdn.microsoft.com/en-us/library/windows/desktop/â€¦</a>. I have not personally used such integration myself and it is just a suggestion. I should have made it clear in my answer. My apology.</span>
<span class="comment-copy">no prob , thanks ;)</span>
<span class="comment-copy">Gregory, if you eventually choose to do it this way, let me know how it turns out. :)</span>
