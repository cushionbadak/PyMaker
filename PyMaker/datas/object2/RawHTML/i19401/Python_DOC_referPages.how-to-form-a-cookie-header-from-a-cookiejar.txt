<div class="post-text" itemprop="text">
<p>I have a <code>CookieJar</code> instance and I want to get a well-formed <code>Cookie:</code> HTTP header from its content.</p>
<p>I had a look at Python modules source code but it amounts to ~ 3/4 functions and 20 sloc, I'm looking for a more elegant solution.</p>
<p>Note: I really want the header, not to make a <code>urllib</code> request with that cookies, and I know of <code>HTTPCookieProcessor</code> but it doesn't fit my needs (see above).</p>
<p>EDIT: If I was able to obtain a single <code>Cookie</code> (different thing, different module) object with the contents of the cookiejar, then it would be as easy as <code>.output(header="Cookie:")</code>. However,</p>
<blockquote>
<p>The cookielib and Cookie modules do not depend on each other.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Since Python uses <a href="http://en.wikipedia.org/wiki/Duck_typing#In_Python" rel="nofollow">duck typing</a>, you could instead pass in your own object to <code>add_cookie_header</code>; the <a href="http://docs.python.org/3/library/http.cookiejar.html#cookiejar-and-filecookiejar-objects" rel="nofollow">documentation</a> even lists the methods you would need to implement (<code>get_full_url</code>, <code>get_host</code>, etc.), although it's probably just simpler to create a temporary <code>urllib.request.Request</code> object and then fetch the cookie from it and do what you want with it.</p>
<p>(Of course, you <em>could</em> call internal methods like <code>_cookie_attrs</code> but I assume you know why that's a bad ideaâ€”it's brittle to depend on implementation details like that.)</p>
</div>
<span class="comment-copy">You're looking for a more elegant solution than implemented in Python source code? Well... Make sure to issue a pull request when you're done ;-)</span>
<span class="comment-copy">Hehe ;) Theirs is made to integrate directly into a <code>Request</code> object and to check for domain etc. I only need the header of all the cookies as a string.</span>
