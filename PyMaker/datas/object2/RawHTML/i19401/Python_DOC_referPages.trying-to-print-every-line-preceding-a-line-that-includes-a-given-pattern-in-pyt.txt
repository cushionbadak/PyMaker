<div class="post-text" itemprop="text">
<p>basically i have a massive text file that has several lines that have nothing on them but an '@' symbol.</p>
<p>i want to print every line that precedes the FIRST line that is nothing but a single '@' symbol.</p>
<p>i'm new to python but pretty familiar with regex but i just can't figure this out. here's what i've got so far:</p>
<pre><code>original = open('oldfile.txt')
for each_line in original:  
    pattern = re.compile("(^.*)(^@\s)", re.M)
    m = re.match(pattern, each_line).group(1)
    print(m)

original.close
</code></pre>
<p>i swear i have been reading the python online docs and other stackoverflow articles for an hour and a half and somehow i'm still not getting this.</p>
<p>the result of that code is:</p>
<blockquote>
<p>AttributeError: 'NoneType' object has no attribute 'group'</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You don't need regular expressions here, it's actually pretty simple:</p>
<pre><code>with open('file.txt') as file:
    for line in file:
        line = line.rstrip("\n")
        if line == "@":
            break
        print(line)
</code></pre>
<p>We open the file (using the <code>with</code> statement, which is both more readable, and ensures the file is closed, even if an exception occurs), then we loop through the lines in the file. We break out of the loop if the line is just <code>"@"</code>, otherwise, we print the line and continue.</p>
<p>As pointed out in the comments, we need to strip the newline character off the line (or check against <code>"@\n"</code> (if we did that, we would also need to do <code>print(line, end="")</code> in 3.x or <code>print line,</code> in 2.x to stop <code>print()</code> adding an extra newline).</p>
<p>As Martijn Piters points out, there is another way to do this, using the <a href="http://docs.python.org/3/library/itertools.html#itertools.takewhile" rel="nofollow"><code>takewhile()</code></a> function from <a href="http://docs.python.org/3/library/itertools.html" rel="nofollow"><code>itertools</code></a>. This takes items from an iterable until a condition is met, which is exactly what we want here:</p>
<pre><code>import itertools

with open('file.txt') as file:
    for line in itertools.takewhile(lambda x: x != "@\n", file):
        print(line, end="")
</code></pre>
<p>I would argue that for just printing the values out, this is harder to read, there might be cases where it's useful, however (for example, if you wish to make a list of the values, or pass them into another function, having them as an iterable is useful).</p>
</div>
<div class="post-text" itemprop="text">
<p>As Lattyware has mentioned, you don't need regex for this.</p>
<p>As for the problem with your code,
when the string doesn't match the pattern, <code>re.match</code> returns <code>None</code> rather than a match object. You can call the <code>group</code> attribute in that case. That's the reason of the exception: <code>None</code>, which is an instance (<em>the</em> instance) of type <code>NoneType</code>, doesn't have an attribute <code>group</code>.</p>
<p>Also the <code>re.compile</code> statement should be outside the loop, otherwise there's not much point in compiling the regex explicitly.</p>
</div>
<span class="comment-copy">That <b>precedes</b> the first line?</span>
<span class="comment-copy">that precedes the first line <i>that is nothing but a single '@' symbol</i></span>
<span class="comment-copy">Now add a <code>.takewhile()</code> example. :-)</span>
<span class="comment-copy">You're missing a newline in the string literal I believe</span>
<span class="comment-copy">i just tried this and the result was just my entire original file, reprinted.</span>
<span class="comment-copy">@user1825081 Check my edit, it was what mgilson pointed out. I actually tested this version, and it worked for me.</span>
<span class="comment-copy">BINGO! aaaahhhh thank you. : )  ...i still don't really get why stripping the newline fixed it? any chance you could explain that for me.</span>
