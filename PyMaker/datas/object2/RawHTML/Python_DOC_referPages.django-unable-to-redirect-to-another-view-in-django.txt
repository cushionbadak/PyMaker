<div class="post-text" itemprop="text">
<p>I'm trying to click on a button in <code>http://127.0.0.1:8000/main/electronics/switch/</code> to call <code>getCommodityCommentDetail</code> to do something, and then redirect to another page <code>commodityInfoPage</code>. </p>
<p>What puzzles me is that the page always shows the same content in the initial page, although the url has changed e.g. to <code>http://127.0.0.1:8000/main/comments/1/</code>. </p>
<p>After testing, I found that the <code>commodityInfoPage</code> in views.py isn't called. I have searched long time for solutions, but all of them failed. So how can I fix it?</p>
<p>urls.py:</p>
<pre><code>app_name = 'main'

urlpatterns = [
    # eg:127.0.0.1:8000/main/
    path('', views.index, name = 'index'),
    path('getCommodityInfo/', views.getCommodityInfo, name = 'getCommodityInfo'),
    path('getCommodityCommentDetail/', views.getCommodityCommentDetail, name="getCommodityCommentDetail"),
    path('&lt;str:category&gt;/&lt;str:searchKey&gt;/',views.commodityInfoPage, name = 'commodityInfoPage'),
    path('comments/&lt;str:commodityId&gt;/', views.commodityCommentPage,name = 'commodityCommentPage'),
]
</code></pre>
<p>view.py:</p>
<pre><code>def getCommodityCommentDetail(request):
    if request.method=="POST":
        commodityId = request.POST.get("commodityId")
        # scrapy module is waiting implementation

        #
        return HttpResponseRedirect(reverse('main:commodityInfoPage',args=(commodityId)))

def commodityCommentPage(request, commodityId):
    print("enter commodityCommentPage")
    commentList = JDCommentDetail.objects.all()
    context = {'commentList':commentList}
    return render(request,'main/commodityCommentPage.html',context)
</code></pre>
<p>templates:</p>
<pre><code>&lt;form action="{% url 'main:getCommodityCommentDetail'%}" method="POST"&gt;
   {% csrf_token %}
   &lt;input class="hidden" value="{{commodity.id}}" name="commodityId"&gt;
   &lt;button type="submit" class="btn btn-default" &gt;review&lt;/button&gt;
&lt;/form&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that <code>comments/1/</code> is matched by the <code>commodityInfoPage</code> URL pattern.</p>
<pre><code>path('&lt;str:category&gt;/&lt;str:searchKey&gt;/',views.commodityInfoPage, name='commodityInfoPage'),
</code></pre>
<p>You can fix this problem by changing the URL patterns so that they don't clash, or by moving the <code>commodityCommentPage</code> URL pattern above the <code>commodityInfoPage</code> one. </p>
<pre><code>path('comments/&lt;str:commodityId&gt;/', views.commodityCommentPage, name='commodityCommentPage'),
path('&lt;str:category&gt;/&lt;str:searchKey&gt;/', views.commodityInfoPage, name='commodityInfoPage'),
</code></pre>
<p>Note that if you re-order the patterns, you won't be able to view <code>commodityInfoPage</code> if the category is 'comments'.</p>
</div>
<span class="comment-copy">Note that <code>args</code> should be a tuple or a list, i.e. <code>args=(commodityId,)</code>.</span>
<span class="comment-copy">I have check the source code, but I can't understand why args must be tuple or list.Could you tell me why?<a href="https://docs.djangoproject.com/en/1.11/_modules/django/urls/base/#reverse" rel="nofollow noreferrer">link</a></span>
<span class="comment-copy">First, see <a href="https://docs.djangoproject.com/en/2.1/ref/url" rel="nofollow noreferrer">examples in the docs</a> - they use a list. It should be a list or a tuple because there can be more than one arg. Your code is probably working for you at the moment because <code>commodityId</code> is a single character string, e.g. <code>"1"</code>. If you test with <code>args=("15")</code>, <a href="https://github.com/django/django/blob/master/django/urls/base.py#L90" rel="nofollow noreferrer">I think it will be treated</a> the sane way as <code>args=["1", "5"]</code> (since strings are iterable), and you'll get an error.</span>
<span class="comment-copy">Thanks!!! I have changed the path to the below pattern, and it works. <code>path('commodityInfo/&lt;str:category&gt;/&lt;str:searchKey&gt;/',views.commodityInfoPage, name = 'commodityInfoPage'),</code></span>
