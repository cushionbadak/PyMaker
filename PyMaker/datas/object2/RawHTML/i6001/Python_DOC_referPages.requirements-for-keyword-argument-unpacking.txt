<div class="post-text" itemprop="text">
<p>What is required to support keyword argument unpacking for a custom class in Python? In both the Python 2.7 and Python 3.6 interpreters the following error message is given when trying to unpack an incompatible type:</p>
<pre><code>&gt;&gt;&gt; dict(**None)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: type object argument after ** must be a mapping, not NoneType
</code></pre>
<p>Does <em>mapping</em> mean the object has to specifically subclass <code>collections.Mapping</code>? Or is <em>mapping</em> in this case one of those pseudo types such as <em>iterable</em> where you don't have to explicitly subclass <code>collections.Iterable</code> to support <code>iter()</code>? Does this behavior differ between Python 2 and 3?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>A Mapping is a generic container for associating key/value pairs.</p>
</blockquote>
<p>It is not compulsory to inherit from <code>collections.Mapping</code> in order to use dictionary unpacking. Besides, <code>collections.Mapping</code> is an abstract class, so you'll still have to override some methods in order to be able to use dict unpacking with any of its subclasses.</p>
<p>For an instance of a class to be <em>dict unpackable</em>, it is enough for the class to implement a <code>keys</code> method and a corresponding <code>__getitem__</code> method to return a value given a key:</p>
<pre><code>class D(object):
  def __getitem__(self, key):
      return 2

  def keys(self):
      return ['1','2','3']

print(dict(**D()))
# {'1': 2, '2': 2, '3': 2}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is the Python <a href="https://docs.python.org/3/glossary.html#term-mapping" rel="nofollow noreferrer">glossary entry</a> for <code>mapping</code>:</p>
<blockquote>
<p>A container object that supports arbitrary key lookups and implements the methods specified in the Mapping or MutableMapping abstract base classes. Examples include dict, collections.defaultdict, collections.OrderedDict and collections.Counter.</p>
</blockquote>
</div>
<span class="comment-copy">That's interesting.  I'm surprised that it's not sufficent to implement <code>__iter__</code>, which is require by <code>Mapping</code>, while <code>keys</code> isn't</span>
<span class="comment-copy"><code>__iter__</code> is more general for objects that implement the iterator protocol and is not restricted to mapping. A map must be able to return a value, given a a key, and <code>__getitem__</code> does that.</span>
