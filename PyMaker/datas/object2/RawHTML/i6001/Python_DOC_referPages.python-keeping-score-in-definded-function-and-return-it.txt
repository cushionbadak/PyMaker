<div class="post-text" itemprop="text">
<p>So I am trying to make a sort of quiz with different categories you can choose from. It works all fine but I cant get the score function working properly. If I print(score) after three correct answers (the score should be 3) it still says 0.
If I put the return score after the score += 1 it will automatically stop after one correct answer but I want to be able to give 3 correct answers.</p>
<p>Below is a part of the code</p>
<pre><code>   def quizquestion(score,question_category):
       for question_number,question in enumerate(question_category): 
           print ("Question",question_number+1)
           time.sleep(1)
           slow_type (question)
           for options in question_category[question][:-1]: 
               slow_type (options)

           user_choice = input("make your choice: ")
           if user_choice == question_category[question][-1]: 
               replay = good[random.randint(0,7)]
               slow_type (replay)
               score += 1
           else: 
               replay = wrong[random.randint(0,7)]
               slow_type (replay)
               slow_type ("The correct answer should have been")
               print(question_category[question][-1])
               time.sleep(1)

       slow_type("okay you finished this category, lets see what your score is in this category")
       slow_type("You have"), print(score), slow_type("correct answer(s)")
       return score
</code></pre>
<h1>one of the categories:</h1>
<pre><code> questions_random = {
     "How tall is the Eiffel Tower?":['a. 350m', 'b. 342m', 'c. 324m', 'd. 1000ft','a'],
     "How loud is a sonic boom?":['a. 160dB', 'b. 175dB', 'c. 157dB', 'd. 213dB', 'd'],
     "What is the highest mountain in the world?":['a. Mont Blanc', 'b. K2', 'c. Mount Everest', 'd. Mount Kilomonjaro', 'c']
 } 
</code></pre>
<p>If you need more of the code to help me please let me know</p>
</div>
<div class="post-text" itemprop="text">
<p>The score can be a keyword argument. That way it has a default initial value. Here is a working example derived from your code. </p>
<p>Note: For testing purposes,  I replaced <code>slow_type</code> with <code>print</code>, <code>good[random.randint(0,7)]</code> with <code>"\ncorrect"</code>, and <code>wrong[random.randint(0,7)]</code> with <code>"\nwrong\n"</code>. 
This works, the correct score is returned.</p>
<p>You can pass in the score from a previous round of questions like follows:</p>
<p><code>quizquestion(question_category, score=&lt;current_score&gt;)</code>.</p>
<p>You can learn more about keyword arguments <a href="https://docs.python.org/3/tutorial/controlflow.html" rel="nofollow noreferrer">here</a>.</p>
<pre><code>def quizquestion(question_category, score=0):
    boundary = "*************************************************"
    for question_number,question in enumerate(question_category): 
        print ("\nQuestion",question_number+1)
        time.sleep(1)
        print(question)
        for options in question_category[question][:-1]: 
            print(options)

    user_choice = input("make your choice: ")
    if user_choice == question_category[question][-1]: 
        replay = "\ncorrect!"
        print(replay)
        score += 1
        print(boundary)
    else: 
        replay = "\nwrong\n"
        print(replay)
        print("The correct answer should have been")
        print(question_category[question][-1])
        print(boundary)
        time.sleep(1)

    print("\nokay you finished this category, lets see what your score is in this category")
    print("You have {} correct answers!".format(score))
return score
</code></pre>
</div>
<span class="comment-copy">please post a mcve removing all irrelevant code and including how the function id called.</span>
<span class="comment-copy">I can't reproduce the error. The code works correctly for me after replacing <code>slow_type</code> with <code>print</code> and removing the <code>replay</code> stuff. Better post a complete example. Also, what do you mean with <code>score</code> function? There's no function or function call with this name.</span>
<span class="comment-copy">Thank you very much for the feedback and sorry for the many rubish line in the code. Next time I will, as bruno desthuilliers described, post a more MCVE code</span>
<span class="comment-copy">You're welcome. Accept or upvote if this helps you.</span>
