<div class="post-text" itemprop="text">
<p>I was reading about daemon threads, and came across this <a href="https://stackoverflow.com/a/15086113/8852560">SO</a> page, the comment under the answer says:</p>
<blockquote>
<p>But joining a demonized thread opens most likely a whole can of
  trouble! I'm now considering to remove the join() call in my little
  diagram for the daemon-thread</p>
</blockquote>
<p>I understand what daemon threads are used for and why but, suppose you had to wait for a daemon thread to finish what it's doing, how would you do it if calling <code>join()</code> is considered a lot of trouble?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to be able to <code>.join</code> a thread, it's better to not make it a daemon. Daemon threads are for when you want a thread to do its thing and you're not too concerned about when or if it finishes.</p>
<p>The point of making daemon threads is that the program will exit when there are no non-daemon threads left alive. </p>
<p>From <a href="https://docs.python.org/3/library/threading.html#thread-objects" rel="nofollow noreferrer">the threading docs</a>:</p>
<blockquote>
<p>A thread can be flagged as a “daemon thread”. The significance of this
  flag is that the entire Python program exits when only daemon threads
  are left. The initial value is inherited from the creating thread. The
  flag can be set through the daemon property or the daemon constructor
  argument.</p>
</blockquote>
<p>You can actually call <code>.join</code> on daemon threads, but it's generally considered to be not good practice.</p>
<p>You could get a daemon thread to set an Event just before it finishes, which one or more other threads check, but it's simpler just to use a non-daemon thread and <code>.join</code> it.</p>
<p>An earlier version of this answer claimed that you can't <code>.join</code> a daemon thread. That's incorrect. I was getting mixed up with dummy threads. Sorry about that. :oops: </p>
</div>
<span class="comment-copy">Explain a little more why you won't call <code>join()</code> when it's daemon, because it's going to die anyway, so waiting is pointless?</span>
<span class="comment-copy">@SvetlanaRosemond I've changed my answer. Sorry for the confusion. :(</span>
<span class="comment-copy">No Worries. Why is it bad practice? Because it defeats the purpose of what a daemon thread is and what it's supposed to do? Example, I'll be waiting for a thread, that in reality I don't need to wait for?</span>
<span class="comment-copy">@SvetlanaRosemond Waiting for daemon threads can be a bit weird. There's a good explanation here: <a href="http://www.bogotobogo.com/python/Multithread/python_multithreading_Daemon_join_method_threads.php" rel="nofollow noreferrer">Multithreading - Daemon threads &amp; join method</a></span>
<span class="comment-copy">@PirateApp Sorry, I know nothing about Redis.</span>
