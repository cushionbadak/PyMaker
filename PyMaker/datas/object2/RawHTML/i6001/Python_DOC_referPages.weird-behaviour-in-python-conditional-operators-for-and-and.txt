<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3845018/boolean-operators-vs-bitwise-operators">Boolean operators vs Bitwise operators</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>Below are the different scenarios tried using '&amp;' and 'and' conditional operators and its result. (using Python 2.7)</p>
<ol>
<li>Using '&amp;' operator:</li>
</ol>
<p><a href="https://i.stack.imgur.com/lUU0x.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/lUU0x.png"/></a></p>
<ol start="2">
<li>Using 'and' operator:</li>
</ol>
<p><a href="https://i.stack.imgur.com/eytOz.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/eytOz.png"/></a></p>
<p>Wondering why both conditional operators showing different behaviour?
Explanation with real scenarios would be helpful.</p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>&amp;</code> <strong>is not</strong> a conditional operator. It stands for <a href="https://wiki.python.org/moin/BitwiseOperators" rel="nofollow noreferrer">the bitwise and</a>. Not only it is a different operator but also <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">the operator precedence</a> is different (<code>and</code> is below <code>&gt;</code> while <code>&amp;</code> is above).</p>
<p>So first of all an example:</p>
<pre><code>&gt;&gt;&gt; 1 and 2
2
&gt;&gt;&gt; 1 &amp; 2
0
</code></pre>
<p>Now lets analyze your case:</p>
<pre><code>&gt;&gt;&gt; point = 1
&gt;&gt;&gt; score = 2
&gt;&gt;&gt; point == 1 &amp; score &gt; 0
</code></pre>
<p>Now the operator precedence kicks in and the last line is equivalent to</p>
<pre><code>&gt;&gt;&gt; point == (1 &amp; score) &gt; 0
</code></pre>
<p>Note that <code>==</code> and <code>&gt;</code> have equivalent precedence. So lets evaluate that:</p>
<pre><code>&gt;&gt;&gt; 1 &amp; score
0
&gt;&gt;&gt; point == 0 &gt; 0
</code></pre>
<p>The last line is equivalent to <code>(point == 0) &gt; 0</code> (when operators have equal precedence then you simply go from left to right). Lets evaulate that:</p>
<pre><code>&gt;&gt;&gt; point == 0
False
&gt;&gt;&gt; False &gt; 0
False
</code></pre>
<p>All in all</p>
<pre><code>&gt;&gt;&gt; point == 1 &amp; score &gt; 0
False
</code></pre>
<p>Can you break down the evaluation for your second statement now?</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue is that <code>&amp;</code> is not actually a logical "and", it's a <a href="https://wiki.python.org/moin/BitwiseOperators" rel="nofollow noreferrer">bitwise operator</a>. So it'll compare two numbers by each bit, and produce a number that has a bit set if both of the first two numbers had that bit set. So <code>1 &amp; 2</code> will give you 0.</p>
<p>This wouldn't usually be a problem (True is 1, False is 0) - except that the <a href="https://docs.python.org/2/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">operator precedence</a> for &amp; and <code>and</code> relative to <code>&gt;</code> and <code>=</code> are different.</p>
<p>So <code>1 == 1 &amp; 2 &gt; 0</code> (the first case):</p>
<ul>
<li>This is interpreted as <code>1 == (1 &amp; 2) &gt; 0</code>, or <code>1 == 0 &gt; 0</code>, and since <code>1 == 0</code> is False the whole thing is False.</li>
</ul>
<p>Whereas <code>1 == 1 and 2 &gt; 0</code> (the second case):</p>
<ul>
<li>This is interpreted as <code>(1 == 1) and (2 &gt; 0)</code>, and since both of those cases are True, the whole thing is True.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>and tests whether both expressions are logically True while &amp; (when used with True/False values) tests if both are True.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>&amp;</code> is a <a href="https://wiki.python.org/moin/BitwiseOperators" rel="nofollow noreferrer">bitwise</a> AND operator, whereas <code>and</code> is a logical operator.</p>
</div>
<span class="comment-copy">Please post <i>text</i> as text</span>
<span class="comment-copy">Please see <a href="http://meta.stackoverflow.com/questions/285551/why-may-i-not-upload-images-of-code-on-so-when-asking-a-question">Why may I not upload images of code on SO when asking a question?</a></span>
<span class="comment-copy">Also see <a href="https://stackoverflow.com/questions/36550588/assigning-string-with-boolean-expression" title="assigning string with boolean expression">stackoverflow.com/questions/36550588/â€¦</a></span>
<span class="comment-copy">Can you please elaborate the answer.  if we do like (point == 1 &amp; (score &gt; 0)) =&gt; return true.</span>
<span class="comment-copy">@PrashantkumarKB I've updated the answer. I'm not sure what you are trying to do but unless you are going to manipulate bits then don't use <code>&amp;</code>.</span>
<span class="comment-copy">You're absolutely right, and I've corrected my answer.</span>
<span class="comment-copy">&gt;&gt;&gt; point = 1  &gt;&gt;&gt; score = 2  &gt;&gt;&gt; point == 1 True  &gt;&gt;&gt; score &gt; 0 True</span>
