<div class="post-text" itemprop="text">
<p>I'm trying to calculate the occurrence of countries in a dictionary.
I am reading all country`s with a for loop from a CSV file. And add them to a list:</p>
<pre><code>landen = []
landen.append({"Datum": datumbestand, "Land": [land]})
</code></pre>
<p>Then I try to combine all countries by date:</p>
<pre><code>scores_unique = {}
for item in landen:
    if item['Datum'] not in scores_unique:
        scores_unique.update({item['Datum']: item['Land']})
    else:
        scores_unique[item['Datum']] += item['Land']
</code></pre>
<p>When I print my output I get the following (A little part of my data):</p>
<pre><code>[('2017-11-20', [US', 'US', 'US', 'US', 'SK', 'SK', 'IE', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'ES', 'ES', 'DE', 'CA', 'CA', 'CA', 'CA', 'CA', 'CA', 'CA', 'CA', 'CA', 'CA', 
('2017-11-10', ['US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US',
</code></pre>
<p>Now I would like to see from every date the countries who are most occurrence. Something like:</p>
<pre><code>2017-11-20:
USA 10x
SK 3x
IE 2x

2017-11-10
USA 20x
GB 15x
</code></pre>
<p>And see the diffrence in occurence from every date. But I been trying a long time but I cant manage to count the occurence and print it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to keep duplicated copies of the same items in a list. Use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> object to keep count of each object reading straight from your CSV reader/file, keying each counter on the corresponding date in a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a>:</p>
<pre><code>from collections import Counter, defaultdict

d = defaultdict(Counter)

for date, country in csv_reader:
    d[date][country] += 1
</code></pre>
<p>You can then use the <code>most_common</code> method of the <code>Counter</code> objects to get the countries with the most occurrence at each date:</p>
<pre><code>for date, counter in d.items():
    print(date, counter.most_common(3))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can create a dictionary from the list and use the <code>count()</code> function to do so. </p>
<p>This will roughly work in the following way:</p>
<pre><code>result_occurrences = {i:scores_unique.count(i) for i in scores_unique}
print result_occurrences
</code></pre>
<p>This will work in Python 2.7. For Python 3 you can write:</p>
<pre><code>result_occurrences = {i:list(scores_unique.values()).count(i) for i in scores_unique}
print(result_occurrences)
</code></pre>
<p>Another way to do this is by using <a href="https://docs.python.org/2/library/collections.html#collections.Counter" rel="nofollow noreferrer">Collections.Counter</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a solution based on pandas apply valuecounts i.e </p>
<pre><code>import pandas as pd    
tup= [('2017-11-20', ['US', 'US', 'US', 'US', 'SK', 'SK', 'IE', 'GB', 
 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 
 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB', 'GB',
 'GB', 'GB', 'GB', 'ES', 'ES', 'DE', 'CA', 'CA', 'CA', 'CA', 'CA', 
 'CA', 'CA', 'CA', 'CA', 'CA']), 
 ('2017-11-10', ['US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 
'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 
'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 
'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 
'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 'US', 
'US', 'US', 'US', 'US'])]

count = pd.DataFrame(tup).set_index(0)[1].apply(pd.Series.value_counts).stack()
</code></pre>
<pre>
2017-11-20  CA    10.0
            DE     1.0
            ES     2.0
            GB    28.0
            IE     1.0
            SK     2.0
            US     4.0
2017-11-10  US    61.0
dtype: float64
</pre>
<pre><code>count.to_dict()

{('2017-11-20', 'ES'): 2.0, ('2017-11-20', 'US'): 4.0, ('2017-11-20', 'CA'): 10.0, ('2017-11-20', 'GB'): 28.0, ('2017-11-20', 'SK'): 2.0, ('2017-11-20', 'IE'): 1.0, ('2017-11-10', 'US'): 61.0, ('2017-11-20', 'DE'): 1.0}
</code></pre>
</div>
<span class="comment-copy">Can you provide a complete example to make easier the testing ?</span>
<span class="comment-copy">Thanks alot! It works finally haha! Thanks!</span>
