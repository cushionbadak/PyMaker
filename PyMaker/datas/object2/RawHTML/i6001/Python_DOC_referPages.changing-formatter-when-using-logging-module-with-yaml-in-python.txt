<div class="post-text" itemprop="text">
<p>When using logging module in python, we can initialize general setting for each logger using yaml file. My test code looks like</p>
<p>[main.py]</p>
<pre><code>import yaml
import logging, logging.config
def setup_logging(default_level=logging.DEBUG):
    with open("./logging.yaml", 'rt') as f:
        configdata = yaml.safe_load(f.read())
    logging.config.dictConfig(configdata)
setup_logging()

dbg = logging.getLogger(__name__)
dbg.info("Test")
</code></pre>
<p>[logging.yaml]</p>
<pre><code>version: 1
disable_existing_loggers: False
formatters:
    detail:
        format: "%(asctime)s - %(name)s - %(message)s"
    onlymessage:
        format: "%(message)s"

handlers:
    file_handler:
        class: logging.FileHandler
        level: DEBUG 
        formatter: detail
        filename: ./log
        mode: w

loggers:
    __main__:
        level: DEBUG
        handlers: [file_handler]
        propagate: No
</code></pre>
<p>So for "file_handler", the default formatter is "detail". Then how do I change the formatter of this logger to another one, in this case "onlymessage"? </p>
<p>I know that if we were given formatter object, we can use <a href="https://docs.python.org/3/library/logging.html#logging.Handler.setFormatter" rel="nofollow noreferrer">Handler.setFormatter()</a> to change the formatter of a logger, like</p>
<pre><code>dbg.handlers[0].setFormatter(FORMATTER NAME)
</code></pre>
<p>But since I specified all information about formatter in yaml file and used logging.config when initizliaing logger, I have no formatter object. I think if I can retrieve formatter object written in that yaml file, problem can be solved. Or is there any other way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, "unused" formatters will be lost in the process if you don't bind them to any handler. 
You can check the source of what happens, <a href="https://github.com/python/cpython/blob/master/Lib/logging/config.py#L686" rel="nofollow noreferrer">here</a> is the interesting bit.</p>
</div>
