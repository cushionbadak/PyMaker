<div class="post-text" itemprop="text">
<p>I'm trying to save a score for my game. I've got a piece of example code, why isn't it saving, if so, how would I go about fixing it?</p>
<pre><code>hisc = open("highscore.txt","w+")
hi = hisc.read()
if hi == '':
    hisc.write('0')
    hi = '0'
if score &gt; int(hi):
    hisc.write(str(score))
    print("NEW HIGHSCORE!")
else:
    print("HIGHSCORE =",hi)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are a few issues: First and foremost, you cannot use <code>w+</code> as the file mode for a scorelist, as it <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">opens for reading &amp; writing, <strong>truncating the file first</strong></a>. So every time you open a file with <code>w+</code>, it first erases it, so you'll have an empty file every time. You want <code>r+</code>.</p>
<p>Second, I've removed <code>hisc.write('0')</code>. Since we treat an empty file as a zero anyway, and are going to immediately overwrite it with their high score if empty, it's not helpful.</p>
<p>Third, manually opening/closing files is discouraged. Instead, use a <a href="https://jeffknupp.com/blog/2016/03/07/python-with-context-managers/" rel="nofollow noreferrer">context manager</a></p>
<p>Finally, we need to <code>seek(0)</code> to get back to the start of the file, or else we are appending the score to the end. If we want to be able to reset the highscore list (which may make it smaller, we need to <code>truncate()</code> after we are finished writing to remove any extra that is left over.</p>
<pre><code>with open("highscore.txt", "r+") as hisc:
    hi = hisc.read()
    if not hi:  # not hi will only be true for strings on an empty string
        hi = '0'
    if score &gt; int(hi):
        print("NEW HIGHSCORE!")
        hisc.seek(0)  # We already read to the end. We need to go back to the start
        hisc.write(str(score))
        hisc.truncate()  # Delete anything left over... not strictly necessary
    else:
        print("HIGHSCORE =%s" % hi)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use context managers in python every time you can. This will help you avoiding bugs related to closing resources and will save you a lot of debugging time.</p>
<p>If you don't know what a context manager is take a look at this:
<a href="http://book.pythontips.com/en/latest/context_managers.html" rel="nofollow noreferrer">http://book.pythontips.com/en/latest/context_managers.html</a></p>
<pre><code>new_score = 100

with open("highscore.txt", "r") as high_file:
    stored_val = high_file.read()
    high_score = int(stored_val) if stored_val else 0

with open("highscore.txt", "w") as high_file:
    if new_score &gt; int(high_score):
        high_file.write(str(new_score))
        print("NEW HIGHSCORE!")
    else:
        print("HIGHSCORE =", high_score)
</code></pre>
<p>EDIT: I had to edit the example code and make it a fully functional based on comments. This code runs perfectly on python3.</p>
</div>
<div class="post-text" itemprop="text">
<p>In this case, you should use <code>with</code> and <code>as</code> to open your text file. </p>
<pre><code>with open("foo.txt", "w") as bar:
    # code that references bar goes here
</code></pre>
<p>The great thing about this method is that it automatically closes the file for you, and handles some other things for you as well.</p>
<p>In your case, it would look like this:</p>
<pre><code>with open("highscore.txt", "w+") as hisc:
    hi = hisc.read()
    if hi == '':
        hisc.write('0')
        hi = '0'
    if score &gt; int(hi):
        hisc.write(str(score))
        print("NEW HIGHSCORE!")
    else:
        print("HIGHSCORE =",hi)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As @swimmingduck said, so need to add <code>hisc.close()</code> to the end of your code, as without it, Python wouldn't realise that you have finished writing to the file.</p>
</div>
<span class="comment-copy">Remember to write hisc.close()</span>
<span class="comment-copy">Okay, now how do I overwrite the current file value?</span>
<span class="comment-copy">once you've already called hisc.write("mystring"), the current file value has been overwritten and replaced with mystring. Just remember to put hisc.close() at the end.</span>
<span class="comment-copy">Have you tested your code? It <a href="https://repl.it/repls/ShabbyValidIcelandichorse" rel="nofollow noreferrer">doesn't work</a> for me.</span>
<span class="comment-copy">I haven't, I just added the "with" statement to his code in order to close the opened file.  What doesn't work for you? Are you getting any error? Can you explain please so I can help you.</span>
<span class="comment-copy">NameError: name 'score' is not defined</span>
<span class="comment-copy">by the way, thanks for your link, that's good.</span>
<span class="comment-copy">Based on your comments you are just copying and running the code so I will edit the example to a fully functional one. Thanks for the comments</span>
<span class="comment-copy">'Always' is a strong word.</span>
<span class="comment-copy">This is still a flawed solution: <code>w+</code> <b>truncates</b> the file prior to opening it, and a <code>read()</code> followed by a <code>write()</code> will just <b>append</b> the written string.</span>
<span class="comment-copy">@DanielR.Livingston you're right, I should change that</span>
<span class="comment-copy">Welcome on SO. Rewriting a comment whitout providing anything more is not a valid answer. Try to provide more feedback than the comment or just upvote it.</span>
<span class="comment-copy">@scharette thanks for letting me know, I am a new user, so I'll end up making a few mistakes here and there, and in the future, I'll keep that in mind :)</span>
