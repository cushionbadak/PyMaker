<div class="post-text" itemprop="text">
<pre><code>            if chance == 1:
                function1()

            elif chance == 4:
                function2()

            elif chance == 20:
                function3()

            elif chance == 10:
                functiongettingoutofideas()

            elif chance == 40:
               function_minecraft_club_was_not_on_today_insertcryingemoji()

            elif chance == 10:
               function8()

            elif chance == 4:
                functionthesearealotoffunctions()

            elif chance == 5:
                function_above_when_i_mean_5_i_mean_5_percent_chance()

            elif chance == 6:
                function_thank_you_for_your_help()
</code></pre>
<p>In the if and the elifs when i put for example, chance == 10, that means there is a 10% chance of that function being activated.</p>
<p><strong>Any help will be <em>much</em> appreciated</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>This approach uses only Python standard libraries.</p>
<p>First convert percentages to probabilities.</p>
<pre><code>&gt;&gt;&gt; p = [1, 4, 20, 10, 40, 10, 4, 5, 6]
&gt;&gt;&gt; p = [0.01*_ for _ in p]
</code></pre>
<p>Then obtain cumulative probabilities. It's necessary to perform these preliminaries only once.</p>
<pre><code>&gt;&gt;&gt; cum_probs = [0]
&gt;&gt;&gt; for _ in p:
...     cum_probs.append(_ + cum_probs[-1])
...     
&gt;&gt;&gt; cum_probs
[0, 0.01, 0.05, 0.25, 0.35, 0.75, 0.85, 0.89, 0.9400000000000001, 1.0]

&gt;&gt;&gt; from random import random
</code></pre>
<p>Make a random selection from the unit interval, [0, 1].</p>
<pre><code>&gt;&gt;&gt; selection = random()
</code></pre>
<p>Starting on the left, find the first probability interval in which this random number belongs, then stop.</p>
<pre><code>&gt;&gt;&gt; for i, possibility in enumerate(cum_probs[1:]):
...     if selection &lt; possibility:
...         print ('perform function number ', i)
...         break
...         
perform function number  3
</code></pre>
<p>This is the <em>number</em> of the function to perform.</p>
<p>These lines are just to verify that the random number selected is in the required interval.</p>
<pre><code>&gt;&gt;&gt; selection
0.33920981672706096
</code></pre>
<p>You can assign functions to intervals in an array.</p>
<pre><code>&gt;&gt;&gt; functions = [function_one, another_fn, my_function, ...]
</code></pre>
<p>More likely, you would put them in a dictionary. (I'm using your names.)</p>
<pre><code>functions = {0: function1(); 1: function2(); ...}
</code></pre>
<p>Then you would call the desired one like this.</p>
<pre><code>functions[i]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>An example with three functions: </p>
<pre><code>from numpy.random import choice
func_list = [function1, function2, function2]   
weights = [10,40, 50]
choice(func_list, 1, p=weights)()
</code></pre>
<p>Note that for this to work, <code>weights</code> has to add up to 100.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you pick a random number between 0-100, and you want a 10% chance of something happening, you can do:</p>
<pre><code>if random &lt; 10:
    doSomething()
</code></pre>
<p>The <code>doSomething</code> will happen for the numbers 0-10, but not for the numbers 11-100, giving you a 10% chance. Repeat as needed for other functions / probabilities.</p>
</div>
<span class="comment-copy">Where does <code>chance</code> come from? Your logic is hard to dissect.</span>
<span class="comment-copy">If you can give us a few examples as to what function1, function2, function3 and etc - are doing, we might be able to help you find a better way to express what you want to do without using this chain of if/elif</span>
<span class="comment-copy">It comes from <code>chance = random.randint(0,100)</code></span>
<span class="comment-copy">what happens if chance == 4 ? You are calling two methods. May be what you really want is a range of chances, rather than specific chances. Hmm?</span>
<span class="comment-copy">It is not clear what your question is? 10% chance of <b>which</b> function?</span>
<span class="comment-copy">I get an error saying <code>ImportError: No module named numpy.random</code></span>
<span class="comment-copy">Are you using Spyder, Jupyter, or other?</span>
<span class="comment-copy">@MasterHackerLOIS: If you're on Python 3.6 or later, you don't need NumPy. Look into <a href="https://docs.python.org/3/library/random.html#random.choices" rel="nofollow noreferrer"><code>random.choices</code></a>.</span>
<span class="comment-copy">@Acccumulation When i run your code an error says that choice has not been defined, do i just have to put at the start of the program <code>choice = 0</code>? I use the Atom IDE but its not very good.</span>
<span class="comment-copy">@MasterHackerLOIS When you import a module, that defines a module. If your import is failing, then it will throw another error when you try to run something that tries to use that module, since it's not defined. You can try Mark Dickinson's suggestion of not using numpy, or figure out how to import numpy into Atom.</span>
<span class="comment-copy">That code works but i want it to activate the different functions based on chance, so for example doSomething10() has a 10 percent chance of being activated.</span>
