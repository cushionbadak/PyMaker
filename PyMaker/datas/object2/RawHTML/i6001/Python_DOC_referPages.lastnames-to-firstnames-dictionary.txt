<div class="post-text" itemprop="text">
<p>So I'm given a dictionary containing people's friend's circle, and I'm supposed to create a dictionary organizing these people based on their lastnames i.e. a lastname to firstname dictionary.</p>
<pre><code>people_and_friends = {'Jay Pritchett': ['Claire Dunphy', 'Gloria Pritchett', 'Manny Delgado'], 'Claire Dunphy': ['Jay Pritchett', 'Mitchell Pritchett', 'Phil Dunphy'], 'Manny Delgado': ['Gloria Pritchett', 'Jay Pritchett', 'Luke Dunphy'], 'Mitchell Pritchett': ['Cameron Tucker', 'Claire Dunphy', 'Luke Dunphy'], 'Alex Dunphy': ['Luke Dunphy'], 'Cameron Tucker': ['Gloria Pritchett', 'Mitchell Pritchett'], 'Haley Gwendolyn Dunphy': ['Dylan D-Money', 'Gilbert D-Cat'], 'Phil Dunphy': ['Claire Dunphy', 'Luke Dunphy'], 'Dylan D-Money': ['Chairman D-Cat', 'Haley Gwendolyn Dunphy'], 'Gloria Pritchett': ['Cameron Tucker', 'Jay Pritchett', 'Manny Delgado'], 'Luke Dunphy': ['Alex Dunphy', 'Manny Delgado', 'Mitchell Pritchett', 'Phil Dunphy']}
</code></pre>
<p>This is the code I have so far which isolates the lastnames of the individuals in the first dictionary:</p>
<pre><code>lastnames_to_firstnames = {}

for people in person_and_friends:
    family = person[person.rfind(' '):].strip()
    if not family in lastnames_to_firstnames:
        lastnames_to_firstnames[family_name] = person_and_friends[people]
</code></pre>
<p>The lastnames_to_firstnames should look like this:</p>
<pre><code>lastname_firstname = {'Pritchett':['Jay', 'Gloria', 'Mitchell'], 
'Dunphy':['Alex', 'Claire', 'Haley Gwendolyn', 'Luke', 'Phil'], 
'Delgado':['Manny'],'Tucker':['Cameron'],'D-Money':['Dylan'], 'D-Car':
['Chairman']}
</code></pre>
<p>I can't figure out how to organize the values of the first dictionary. Any help?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a></p>
<pre><code>from collections import defaultdict

d = defaultdict(list)

people_and_friends = {'Joseph Hazelton': ['Penny Patrick', 'Paul Paulson'], 
                     'Gilbert Gunderson': ['Philip Patrick', 'Jenny Paulson'], 
                     'Helena Anderson': ['Penny Patrick', 'Dylan D-Money']}

for k, v in people_and_friends.items():
    for first, last in map(str.split, (k, *v)):
        d[last].append(first)
</code></pre>
<p>Edit:</p>
<p>As TitanFighter points out below, if you want to avoid duplicate name pairing, you can use a <code>set</code> instead by replacing</p>
<pre><code>d = defaultdict(set)
</code></pre>
<p>and</p>
<pre><code>d[last].add(first)
</code></pre>
<p>Edit the Second:</p>
<p>If you can't use <code>defaultdict</code> you can roll your own like this</p>
<pre><code>d = {}

people_and_friends = {'Joseph Hazelton': ['Penny Patrick', 'Paul Paulson'], 
                     'Gilbert Gunderson': ['Philip Patrick', 'Jenny Paulson'], 
                     'Helena Anderson': ['Penny Patrick', 'Dylan D-Money']}

for k, v in people_and_friends.items():
    for first, last in map(str.split, (k, *v)):
        if last in d:
            d[last].append(first)
        else:
            d[last] = [first]
</code></pre>
<p>3dit:</p>
<p>The problem is that some people in your dictionary have three names: <code>Haley Gwendolyn Dunphy</code>.  So what we'll do is collect all of the names except for the last one into a list, then join that list again into a string</p>
<pre><code>d = {}

for k, v in people_and_friends.items():
    for *first, last in map(str.split, (k, *v)):
        first = ' '.join(first)
        if last in d:
            d[last].add(first)
        else:
            d[last] = {first}
</code></pre>
</div>
<span class="comment-copy">What do you want the <code>lastname_to_firstnames</code> dictionary to look like?</span>
<span class="comment-copy">it should look like lastnames_firstname</span>
<span class="comment-copy">@AbbyLiu I think you need to place the format in which you want the <code>lastnames_to_firstnames</code> into the question, it will help people understand what you want quickly. The less mental headache they have whilst checking your question the quicker they can get to answering it.</span>
<span class="comment-copy">i just updated that, thanks</span>
<span class="comment-copy">Would be better to use <code>set</code> instead of <code>list</code>. Check <code>'Patrick': ['Penny', 'Philip', 'Penny']</code></span>
<span class="comment-copy">i'm not allowed to import anything</span>
<span class="comment-copy">@AbbyLiu see my most recent edit</span>
<span class="comment-copy">Hi Patrick, your addition helps with smaller dictionaries but returns 'too many values to unpack' for larger ones</span>
<span class="comment-copy">Do you have some names that have more than just a first name and a last name?</span>
