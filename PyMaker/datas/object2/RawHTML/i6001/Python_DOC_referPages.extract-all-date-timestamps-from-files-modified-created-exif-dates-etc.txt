<div class="post-text" itemprop="text">
<p>I am trying to extract all available date and timestamps for all files in the CWD.</p>
<p><strong>For example</strong> <code>YYYYMMDD_HHMMSS</code> (even if the output not so nice):</p>
<pre><code>lastwritetime     creationtime      datetakentime
20171124_190646   20171124_190646   20171124_190646   file1.txt
20171124_190646   20171124_190646   20171124_190646   file2.txt
20171124_190646   20171124_190646   20171124_190646   file3.txt
</code></pre>
<p>I am getting syntax error for <code>(mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime) = os.stat(file)</code>. Any hints what I am doing wrong?</p>
<p><strong>Code:</strong></p>
<pre><code>import os
import time
cwd = os.getcwd()
(mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime) = os.stat(file)
timestr = time.strftime("%Y%m%d_%H%M%S")
files = open(cwd)
files = [f for f in os.listdir(cwd) if os.path.isfile(f)]
for f in files:
    print("created: %s" % time.ctime(os.path.getctime(file) timestr))
    print("last modified: %s" % time.mtime(os.path.getmtime(file) timestr))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I got the same errors that you did. First, I had to move line 4 after "file" is defined, or, in this case, "f". Then, the second error was the syntax of the print command. If you place a comma before timestr, it should print fine. The third problem was that I was getting permission denied, apparently from trying to open a whole directory.</p>
<p>I have rewritten some of your script to something that I think better suits your needs.</p>
<pre><code>import glob
import time
import os

timestr = time.strftime("%Y%m%d_%H%M%S")
files = glob.glob('*.*')

for file in files:
    print('created: %s' % time.ctime(os.path.getctime(file)), timestr)
    print('last modified: %s' % time.ctime(os.path.getmtime(file)), timestr)
</code></pre>
<p>However, seeing your first posted example, I thought I could modify this to match it. Here's what I came up with:</p>
<pre><code>import glob
import time
import os

files = glob.glob('*.*')

print('    created           modified        file_name')
for file in files:
    print('%s' % time.strftime("%Y%m%d_%H%M%S", time.gmtime(os.path.getctime(file))), end='   ')
    print('%s' % time.strftime("%Y%m%d_%H%M%S", time.gmtime(os.path.getmtime(file))), end='   ')
    print(file)
</code></pre>
<p>Running it gave me:</p>
<pre><code>    created           modified        file_name
20170723_223307   20170723_223307   36e73b41-4366-4bf8-825f-9f16e41b1b41.tmp
20160928_232029   20171116_081039   desktop.ini
20171124_215147   20171124_215413   help.py
20171124_215637   20171124_221613   help2.py
20171124_214353   20171124_214353   test.txt
</code></pre>
<p>Now, it's just a matter of you getting the parameters on the right places and configuring the print commands to suit your exact needs.</p>
<p>Edit: With the request to extract EXIF data, the code looks like this. Forgive the blank except.</p>
<pre><code>import glob
import time
import os
from PIL import Image

files = glob.glob('*.*')

print('      created               modified                EXIF            file_name')
for file in files:
    print('%s' % time.strftime("%Y:%m:%d %H:%M:%S", time.gmtime(os.path.getctime(file))), end='   ')
    print('%s' % time.strftime("%Y:%m:%d %H:%M:%S", time.gmtime(os.path.getmtime(file))), end='   ')
    try:
        print('%s' % Image.open(file)._getexif()[36867], end='   ')
    except:
        print('Not an image', end='          ')
    print(file)
</code></pre>
<p>Remember that you can adjust glob to only get jpg, png, or whatever you want. This script gets everything and if it's not an image, it just prints that it failed.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>    print("created: %s" % time.ctime(os.path.getctime(file) timestr))
</code></pre>
<p>You would need a <code>,</code> comma if you wanted timestr to be the 2nd argument to ctime. But it only takes one argument.</p>
<p>There is a difference between a scalar numeric value representing seconds since 1970, and a <a href="https://docs.python.org/3/library/datetime.html#datetime-objects" rel="nofollow noreferrer">datetime</a>. It looks like you want to hand the getctime() result to utcfromtimestamp(). Then you'll have an object you can call strftime() on, which will accept timestr as an argument.</p>
</div>
<span class="comment-copy"><code>file</code> seems undefined in your code</span>
<span class="comment-copy">thank you. updated. error now: <code>print("created: %s" % time.ctime(os.path.getctime(file) timestr))   SyntaxError: invalid syntax</code></span>
<span class="comment-copy">I only know of time.ctime with one argument, in your code it seems you're trying to use two.</span>
<span class="comment-copy">very nice!!! thank you! a bonus question if i may: how would you insert, if available for the file, the EXIF date and time taken? for example: <a href="https://stackoverflow.com/questions/23064549/get-date-and-time-when-photo-was-taken-from-exif-data-using-pil">https://stackoverflow.com/questions/23064549</a>. i literally would like to extract all available times for the files to see which one is really the true "creation" time.</span>
<span class="comment-copy">Your link helped a lot. I would add the following line: print('%s' % Image.open(file)._getexif()[36867], end='   '). Enclose it in a try loop for more safety. I've updated the comment with this new addition.</span>
