<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/25456448/is-it-possible-to-override-the-assignment-operator-in-python">Is it possible to override the assignment ('=') operator in Python?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I found out yesterday that it is possible to override operators in python, so after a bit of googling i found out how, but i could not find any way of overloading the "=" sign. There is __set__() but as i understand it, it overloads the sign for attributes in the object, and not for the object itself.  </p>
<p>What i want to accomplish is this:</p>
<pre><code>F = Foo(1)
G = Foo(2)
F = G #overloaded =
</code></pre>
<p>So is there a way of overloading "=" for an object in python? (and what is that function called)</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot overload =(assign) operator.</p>
</div>
<span class="comment-copy">No. You cannot overload the assignment operator in Python. See <a href="https://docs.python.org/3/reference/datamodel.html#special-method-names" rel="nofollow noreferrer">docs.python.org/3/reference/datamodel.html#special-method-names</a></span>
<span class="comment-copy">You want to overload <code>=</code> (assignment) not <code>==</code> (equality comparison)?</span>
<span class="comment-copy">In some cases a <code>property</code> with a setter could do that. But it only works on object attributes not on "free" variables. There are other options you might want to consider: <code>setattr()</code>, a dictionary, the <code>__dict__</code> attributeâ€¦</span>
<span class="comment-copy">Yes, to basically call a c method when assigning to a different object</span>
<span class="comment-copy">Ok, Thanks for the reply!</span>
