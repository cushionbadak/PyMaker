<div class="post-text" itemprop="text">
<p>I have something like this:-</p>
<pre><code>List = [["a","1"],["b","2"]]
</code></pre>
<p>and what I wanna do is keep single letter integers as integers.
so output should be like</p>
<pre><code>List =  [["a",1],["b",2]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming that you stored that in a list called "data", you can do the following.</p>
<pre><code>new_data = [[k,int(v)] for k,v in data]
</code></pre>
<p>Refer below for details:</p>
<pre><code>data =  [["a","1"],["b","2"]]
new_data = [[k,int(v)] for k,v in data]

print new_data
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[['a', 1], ['b', 2]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1><a href="https://stackoverflow.com/revisions/47325984/3">Changed question before rollback</a>: Sort heterogeneous list</h1>
<p>It seems that you completely changed your question after people answered the first version. Please don't do that. You could simply ask a new question.</p>
<p>If you want to sort a heterogeneous list, you can provide a custom <a href="https://wiki.python.org/moin/HowTo/Sorting#Key_Functions" rel="nofollow noreferrer">key</a> which returns a tuple. The first element is <code>0</code> for strings and <code>1</code> for integers. This way, the strings would appear before the integers.
If the object is an integer, the second element is set to <code>-x</code> in order to sort the integers in decreasing order:</p>
<pre><code>def custom_order(x):
    if isinstance(x, int):
        return (1, -x)
    else:
        return (0, x)

print(sorted([1,2,3,4,5,"a","b","c","d"], key=custom_order))
# ['a', 'b', 'c', 'd', 5, 4, 3, 2, 1]
</code></pre>
<p>This code should work on Python2 and Python3. It will fail on Python3 if an element is neither a string nor an int.</p>
<h1>Original question: convert nested strings to ints</h1>
<p>You could use a <a href="https://stackoverflow.com/a/18072799/6419007">nested list comprehension</a> with a <a href="https://stackoverflow.com/a/394814/6419007">ternary operator</a> to check if the string <a href="https://docs.python.org/3/library/stdtypes.html#str.isdecimal" rel="nofollow noreferrer">looks like an integer</a>:</p>
<pre><code>&gt;&gt;&gt; data = [["a","1"],["b","2"]]
&gt;&gt;&gt; [[int(s) if s.isdecimal() else s for s in l] for l in data]
[['a', 1], ['b', 2]]
</code></pre>
<p>As a bonus, it would work in any order and with sub-lists of any size:</p>
<pre><code>&gt;&gt;&gt; data = [["a","1"],["b","2"],["3", "c"], ["4", "5", "d"]]
&gt;&gt;&gt; [[int(s) if s.isdecimal() else s for s in l] for l in data]
[['a', 1], ['b', 2], [3, 'c'], [4, 5, 'd']]
</code></pre>
</div>
<span class="comment-copy">what is your input and what is output ?</span>
<span class="comment-copy"><code>output_list = map(lambda x: [x[0], int(x[1])], input_list)</code></span>
<span class="comment-copy"><code>output = [[x[0], int(x[1])] for x in list]</code></span>
<span class="comment-copy">You might also want to read about <a href="https://stackoverflow.com/help/how-to-ask">how to ask a good question</a>.</span>
<span class="comment-copy">Oh my, you completely changed your question.</span>
<span class="comment-copy">One could also suggest using a dictionary <code>{k:int(v) for k,v in data}</code> because I have a hunch that's what OP actually wants :)</span>
<span class="comment-copy">@timgeb: Surprise, suprise! :D Look at what OP wants now.</span>
<span class="comment-copy">This will fail with <code>[['x', '⅕']]</code>, see <a href="https://stackoverflow.com/a/24384917/7207392">here</a>.</span>
<span class="comment-copy">@PaulPanzer: Excellent remark, thanks! So <code>str.isdigit</code> would be correct, right?</span>
<span class="comment-copy">I'm afraid no, because of digits like '➊'.</span>
<span class="comment-copy">@PaulPanzer: You can break many things with unicode ¯_(ツ)_/¯ . What about <code>isdecimal()</code>?</span>
<span class="comment-copy"><code>.isdecimal</code> although it also includes a few unexpected characters seems to work</span>
