<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/33533148/how-do-i-specify-that-the-return-type-of-a-method-is-the-same-as-the-class-itsel">How do I specify that the return type of a method is the same as the class itself in python?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>In Python 3.5, type annotations were added (see <a href="https://docs.python.org/3/library/typing.html" rel="noreferrer">here</a>).</p>
<p>Is there a way of defining recursive type annotations, such as for a tree-like structure?</p>
<pre><code>class Employee(object):
    def __init__(self, name: str, reports: List[Employee]):
       self.name = name
       self.reports = reports
</code></pre>
<p>In the above, it doesn't seem as though the annotation <code>List[Employee]</code> works. Running the code results in this error:</p>
<p><code>NameError: name 'Employee' is not defined</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://www.python.org/dev/peps/pep-0484/#forward-references" rel="noreferrer">Forward References</a> as defined in PEP 484</p>
<blockquote>
<p>A situation where this occurs commonly is the definition of a
  container class, where the class being defined occurs in the signature
  of some of the methods. For example, the following code (the start of
  a simple binary tree implementation) does not work:</p>
<pre><code>class Tree:
    def __init__(self, left: Tree, right: Tree):
        self.left = left
        self.right = right
</code></pre>
<p>To address this, we write:</p>
<pre><code>class Tree:
    def __init__(self, left: 'Tree', right: 'Tree'):
        self.left = left
        self.right = right
</code></pre>
<p>It is allowable to use string literals as part of a type hint, for
  example:</p>
<pre><code>class Tree:
    ...
    def leaves(self) -&gt; List['Tree']:
</code></pre>
</blockquote>
</div>
