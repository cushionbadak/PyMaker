<div class="post-text" itemprop="text">
<p>I keep on getting this error when running my code:</p>
<pre><code>**name 'driver' is not defined**
</code></pre>
<p>Can anybody tell me why? How would I make it run like this. So If any of the smaller tests fail, it is very clear where the problem is.</p>
<pre><code>generateRandomBroswerInfo()
loginSite()
getSomeInfo()
quitBroswer()
</code></pre>
<p>I am using selenium on Python 3.6</p>
<p>My code:</p>
<pre><code>from selenium import webdriver
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


def genrateBroswer():
    dcap = dict(DesiredCapabilities.PHANTOMJS)
    dcap["phantomjs.page.settings.userAgent"] = ('Mozilla/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3')
    driver = webdriver.PhantomJS(desired_capabilities=dcap)
    driver.set_window_size(300, 600)

def letssee():
    driver.get('http://www.whatsmyip.org/')
    driver.save_screenshot('this.png')


genrateBroswer()
letssee()
#ETC
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a class with all the necessary methods, see <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">Classes</a>. An example:</p>
<pre><code>class Webdriver:

    def __init__(self):
        self.genrateBroswer()
        self.letssee()


    def genrateBroswer(self):
        dcap = dict(DesiredCapabilities.PHANTOMJS)
        dcap["phantomjs.page.settings.userAgent"] = ('Mozilla/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3')
        self.driver = webdriver.PhantomJS(desired_capabilities=dcap)
        self.driver.set_window_size(300, 600)

    def letssee(self):
        self.driver.get('http://www.whatsmyip.org/')
        self.driver.save_screenshot('this.png')


# Creating an instance of the webdriver
myWebsite = Webdriver()

myWebsite.driver
</code></pre>
<p>In short, everything you need to use across functions, you need to make a property of the class by storing it with the keyword <code>self</code>, and you need to pass <code>self</code> to all the functions in the class.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are defining <code>driver</code> locally inside <code>genrateBroswer</code>, once you leave that function, it is gone.</p>
<p>In your <code>letssee</code> function, you are trying to access <code>driver</code>, which is not defined at this point, hence you are getting an error:</p>
<pre><code>NameError: name 'driver' is not defined
</code></pre>
<p>For details, read about <a href="http://python-textbok.readthedocs.io/en/1.0/Variables_and_Scope.html" rel="nofollow noreferrer">Python variables and scope</a>.</p>
<p>Also, check out <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">the Python tutorial</a>.</p>
</div>
<span class="comment-copy">I marked your answer because it works. But it isn't the answer I fixed my problem with instead I turned my variable driver into a variable globe.</span>
<span class="comment-copy">@FutureHendrixs if you want to stay away from classes, I would recommend bgse's method, by passing <code>driver</code> to the functions, and returning the updated <code>driver</code>.</span>
<span class="comment-copy">Can I take out <code>driver</code>  from <code>genrateBroswer</code> and load it into the second function? &amp; how</span>
<span class="comment-copy">You could for example add a return statement to the end of your <code>genrateBroswer</code> function: <code>return driver</code>, and call it like <code>driver = genrateBroswer()</code>.</span>
<span class="comment-copy">@FutureHendrixs On a side note, I'd suggest you work your way through <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">the Python tutorial</a>, as this is kind of a very basic question. No offense meant, just it'll save you a lot of headache and swearing :-)</span>
