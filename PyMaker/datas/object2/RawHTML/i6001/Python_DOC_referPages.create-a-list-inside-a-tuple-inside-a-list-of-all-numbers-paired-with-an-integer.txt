<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/773/how-do-i-use-pythons-itertools-groupby">How do I use Python's itertools.groupby()?</a>
<span class="question-originals-answer-count">
                    12 answers
                </span>
</li>
</ul>
</div>
<p>I have a list like this:</p>
<pre><code>[(0, 1), (0, 2), (0, 3), (1, 4), (1, 6), (1, 7), (1, 9)]
</code></pre>
<p>That I need to convert to a tuple that looks like this:</p>
<pre><code>[(0, [1, 2, 3]), (1, [4, 6, 7, 9])]
</code></pre>
<p>This is the code I have:</p>
<pre><code>friends = open(file_name).read().splitlines()
network = []
friends = [tuple(int(y) for y in x.split(' ')) for x in friends]
return friends
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>import itertools
s = [(0, 1), (0, 2), (0, 3), (1, 4), (1, 6), (1, 7), (1, 9)]
final_data = [(a, [i[-1] for i in list(b)]) for a, b in itertools.groupby(sorted(s, key=lambda x:x[0]), key=lambda x:x[0])]
</code></pre>
<p>Output:</p>
<pre><code>[(0, [1, 2, 3]), (1, [4, 6, 7, 9])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is not exactly what you ask for but from the kind of output you're looking for please let, me suggest you using <a href="https://docs.python.org/2/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">defaultdict</a>, it is super readable and efficient,</p>
<pre><code>from collections import defaultdict

some_list = [(0, 1), (0, 2), (0, 3), (1, 4), (1, 6), (1, 7), (1, 9)]

d = defaultdict(list)

for k, v in some_list:
    d[k].append(v)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>defaultdict(&lt;class 'list'&gt;, {0: [1, 2, 3], 1: [4, 6, 7, 9]})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>a 'one liner' nested list comprehension, with a line break</p>
<pre><code>tpls = [(0, 1), (0, 2), (0, 3), (1, 4), (1, 6), (1, 7), (1, 9)]  

[(k, [tp[1] for tp in tpls if tp[0] == k])
 for k in set([*zip(*tpls)][0])]

Out[11]: [(0, [1, 2, 3]), (1, [4, 6, 7, 9])]
</code></pre>
<p><code>[*zip(*tpls)]</code> is an idiom that 'transposes' the sub iterable  </p>
<p>giving <code>[(0, 0, 0, 1, 1, 1, 1), (1, 2, 3, 4, 6, 7, 9)]</code> </p>
<p>so <code>set([*zip(*tpls)][0])</code> is <code>set((0, 0, 0, 1, 1, 1, 1))</code> </p>
<p>which gives the unique items in the 1st position of the tuples in <code>tpls</code>: <code>{0, 1}</code></p>
<p>which the outer <code>for k in ...</code>  iterates over, providing <code>k</code> to the list comp inside the result tuple<br/>
<code>[tp[1] for tp in tpls if tp[0] == k]</code></p>
</div>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer">ast.literal_eval</a> to parse the list from the file.</span>
