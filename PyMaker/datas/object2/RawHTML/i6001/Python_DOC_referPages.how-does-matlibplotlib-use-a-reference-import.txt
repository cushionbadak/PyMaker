<div class="post-text" itemprop="text">
<p>When I draw lines and rectangles using Matplotlib I usually use:</p>
<pre><code>from matplotlib.lines import Line2D
from matplotlib.patches import Rectangle
Line2D(...)
</code></pre>
<p>But I also find somebody simply use:</p>
<pre><code>import matplotlib.pyplot as plt
plt.Line2D(..)
</code></pre>
<p>I found <code>plt.Line2D</code> is in fact <code>&lt;class 'matplotlib.lines.Line2D'&gt;</code>, which means <code>matplotlib.pyplot.Line2D</code> is a reference to <code>matplotlib.lines.Line2D</code>?</p>
<p>I am curious in:</p>
<ul>
<li>How does it work? some python tricks?</li>
<li>I would use <code>dir(plt)</code> to view but not in <a href="https://matplotlib.org/devdocs/api/pyplot_summary.html" rel="nofollow noreferrer">The Pyplot API</a>, should I know they are designed on purpose, or deprecated?</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Inside <code>matplotlib.pyplot</code> there is a line saying </p>
<pre><code>from matplotlib.lines import Line2D
</code></pre>
<p>Hence, if you import <code>matplotlib.pyplot</code>, <code>Line2D</code> is available from the pyplot namespace,</p>
<pre><code>import matplotlib.pyplot as plt
plt.Line2D(...)
</code></pre>
<p>Because the availability in the namespace itself is not a documented feature, one should probably not rely on it. Also it is better style to use the functions/objects imported from their original submodule.<br/>
On the other hand it is very convenient to just write <code>plt.Rectangle</code> instead of having to import the patches module first.<br/>
I guess at the end you need to decide for yourself which case applies.</p>
</div>
<span class="comment-copy">This isn't a <code>matplotlib</code> thing so much as a general Python thing. <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">docs.python.org/3/reference/import.html</a></span>
