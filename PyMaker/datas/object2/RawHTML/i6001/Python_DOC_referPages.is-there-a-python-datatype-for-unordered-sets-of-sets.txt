<div class="post-text" itemprop="text">
<p>I want to store sets <code>A</code> and <code>B</code>, in a set <code>C</code>. 
My condition is that if set <code>A = {a,b}</code> and set <code>B = {b,a}</code></p>
<p>Then set <code>A</code> is equal to set <code>B</code> </p>
<p>Set <code>C</code> will then be <code>= {{a,b}}</code> </p>
<p>Is there a datatype which supports something like this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, and that datatype is just <code>set</code>. The trick is that the <em>inside</em> sets have to be <code>frozenset</code>s, the immutable counterpart of <code>set</code>, for them to be placed inside another set. You may also want to make the outer <code>set</code> a <code>frozenset</code>, depending on what you want to do with it; for example, if you want to stick these sets inside more layers of sets indefinitely, it's probably easier to go with frozensets for everything.</p>
<pre><code>&gt;&gt;&gt; A = frozenset(['a', 'b'])
&gt;&gt;&gt; B = frozenset(['b', 'a'])
&gt;&gt;&gt; C = {A, B}
&gt;&gt;&gt; C
set([frozenset(['a', 'b'])])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/stdtypes.html#frozenset" rel="nofollow noreferrer"><code>frozenset()</code></a> type meets your criteria:</p>
<pre><code>&gt;&gt;&gt; A = frozenset({"a", "b"})
&gt;&gt;&gt; B = frozenset({"b", "a"})
&gt;&gt;&gt; A == B
True
&gt;&gt;&gt; frozenset({ A, B })
frozenset({frozenset({'b', 'a'})})
</code></pre>
</div>
<span class="comment-copy">No, since A and B are equal, they'd hash to the same value, so you couldn't have two of them at once. (I'm referring to hashing frozensets)</span>
<span class="comment-copy">Thanks. I also want to know if there are ordered sets which accept non-unique elements. Something like A = {1, 0, 1} and B = {1,1,0} and I can perform an intersection which would give me {1}?</span>
<span class="comment-copy">@user3927312: That... doesn't really sound like any sort of set, not even a multiset. That sounds like a sequence, and the natural choices to model a sequence would be <code>list</code> or <code>tuple</code>, but it's not clear what you want intersection to mean.</span>
<span class="comment-copy">So if I have A and B like I mentioned above if I were to do a Union then it would give me {1,1,1} and for intersection it would be {1,0,0}. I need them to preserve the order. I just realised that this is pretty much boolean ands and ors.</span>
<span class="comment-copy">@user3927312: That sounds like you're trying to encode sets as a sequence of present/not-present booleans. You could do that with lists/tuples and a manual intersect/union implementation, or with ints and bitwise and/or, or you could drop that encoding and just use <code>set</code>/<code>frozenset</code>, or you could do something else. We're getting away from the focus of this question, though. If you have more to ask, post a new question.</span>
