<div class="post-text" itemprop="text">
<p>given an integer x, the function should compute and return the following:</p>
<pre><code>f(x) = 1/2 + 2/3 + ... + x/x+1
</code></pre>
<p>in my main, I have to display f(x) for values of x from 1 to 10, inclusively.</p>
<pre><code>def recursive(x):
    if x == 0:
        return 0
    else:
        return (x / (x + 1)) + recursive(x-1)

def main():
    print(recursive(10))   
main()
</code></pre>
<p>Not sure what I'm doing wrong. I'm new to recursion and don't quite understand it after using iteration for so long.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are missing brackets for x+1. Probably a typo.</p>
<p>your function should be below,</p>
<pre><code>def recursive(x):
    if x == 0:
        return 0
    else:
        return x / (x + 1) + recursive(x-1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>there is one more correction about the data type currently its returning 0 we have to typecast it to float</p>
<pre><code>def recursive(x):
if x == 0:
    return 0
else:
    return (float(x) / (x + 1)) + recursive(x-1)
</code></pre>
<p>def main():
    print(recursive(10))   </p>
</div>
<div class="post-text" itemprop="text">
<p>First you need parentheses in your denominator. Right now you are computing <code>(x/x) + 1 + recursive(x-1)</code></p>
<pre><code>def recursive(x):
    if x == 0:
        return 0
    else:
        return x/(x+1) + recursive(x-1)
</code></pre>
<p>Second, you should write separate code for printing <code>f(x)</code> from <code>1</code> to <code>10</code>. <code>print(recursive(10))</code> simply prints the value returned by <code>recursive(10)</code>, which is approximately <code>7.98</code>. What you want is a function that prints out a visual representation of the sum.</p>
<pre><code>s = '1/2'
for i in range(2, 11): 
    s += ' + {}/{}'.format(i, i+1)
print(s)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think I misunderstood the question and  figured out the proper answer:</p>
<pre><code>def recursive(x):
    if x == 0:
        return 0
    else:
        return (float(x) / (x + 1)) + recursive(x-1)

def main():
    print(recursive(1))
    print(recursive(2))
    print(recursive(3))
    print(recursive(4))
    print(recursive(5))
    print(recursive(6))
    print(recursive(7))
    print(recursive(8))
    print(recursive(9))
    print(recursive(10))

main()
</code></pre>
<p>I was thinking that given a recursive function it should cycle and repeat itself (derp) I suppose I could do a for loop and a counter, but then I would be getting into iteration instead of recursion.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python also has a very useful "generator" function - yield, that can be used to develop recursive functions that actually return individual values for each call:</p>
<pre><code>def factor(x: int):
    for a in range(x, 0, -1):
        yield((a-1)/a)

# Can be retrieved as a list or summed

l = [f for f in factor(10)]

s = sum(factor(10))


print("Result of {} is {}".format(l, s))
</code></pre>
<blockquote>
<p>Result of [0.9, 0.8888888888888888, 0.875, 0.8571428571428571, 0.8333333333333334, 0.8, 0.75, 0.6666666666666666, 0.5, 0.0] is 7.071031746031746</p>
</blockquote>
</div>
<span class="comment-copy">You are returning the number 2 + recursive(x-1) since x /x is 1. Use parentheses.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">Operator Precedence</a></span>
<span class="comment-copy">You shouldn't change your question by incorporating an answer someone posted into it.</span>
<span class="comment-copy">Also, add a print just after <code>else</code> so the whole series gets printed</span>
<span class="comment-copy">@Prakash Palnati May be I am wrong. But When i invoking <code>print(recursive(2))</code> it is returning 0. It should be 1/2 + 2/3 right. Ie,1.1666666666666665?</span>
<span class="comment-copy">I tried fixing the brackets and added print for the else statement and I end up getting an error TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'</span>
<span class="comment-copy">Fix the brackets and see if your result is good. For printing you refer answers below. sumthng like.. <code>"{}/{}".format(a-1, a)</code></span>
