<div class="post-text" itemprop="text">
<p>I'm running python-3.2.3 on raspbian, and I've encountered some unusual results from my code which I debugged a bit in the python shell:</p>
<pre><code>    &gt;&gt;&gt; a = [ 7, 33]
    &gt;&gt;&gt; a = [7,33]
    &gt;&gt;&gt; a[0]&lt;&lt;8
    1792
    &gt;&gt;&gt; a[1]
    33
    &gt;&gt;&gt; a[0]&lt;&lt;8 + a[1]
    15393162788864
    &gt;&gt;&gt; a[1] + a[0]&lt;&lt;8
    10240
    &gt;&gt;&gt; a[0]*2**8 + a[1]
    1825
</code></pre>
<p>What is going on here that I'm missing?  I can work around this issue, but something is going on behind the scene that I'm not understanding.  I would expect all of these operations to have the same result.</p>
</div>
<div class="post-text" itemprop="text">
<p>The bit shift operators have lower <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">precedence</a> than any of the other operations you're doing, so your expressions are equivalent to:</p>
<pre><code>&gt;&gt;&gt; a[0] &lt;&lt; (8 + a[1])
15393162788864
&gt;&gt;&gt; (a[1] + a[0]) &lt;&lt; 8
10240
</code></pre>
</div>
<span class="comment-copy">Have you tried looking at <code>a</code> again after each operation? It's not clear why you think the list is impacting anything.</span>
<span class="comment-copy">Mind the operator precedence.</span>
<span class="comment-copy">Hint: Writing an operator closer to an operand doesn't magically give it precendence.  :-)  Another hint: 7 &lt;&lt; 41 is greater than 40 &lt;&lt; 8.</span>
