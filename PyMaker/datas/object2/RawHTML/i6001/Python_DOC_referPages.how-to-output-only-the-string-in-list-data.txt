<div class="post-text" itemprop="text">
<p>My file reads the teamNames.txt file which is:</p>
<pre><code>Collingwood

Essendon

Hawthorn

Richmond
</code></pre>
<p>Code:    </p>
<pre><code>file2 = input("Enter the team-names file: ") ## E.g. teamNames.txt

bob = open(file2)
teamname = []

for line1 in bob: ##loop statement until no more line in file
    teamname.append(line1)

print(teamname)
</code></pre>
<p>The output is:</p>
<pre><code>['Collingwood\n', 'Essendon\n', 'Hawthorn\n', 'Richmond\n']
</code></pre>
<p>I want to make it so the output will be:</p>
<pre><code>Collingwood, Essendon, Hawthorn, Richmond
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One option is to use the <code>replace()</code> function. I've modified your code to include this function.</p>
<pre><code>file2= input("Enter the team-names file: ") ## E.g. teamNames.txt

bob =open(file2)
teamname = []

for line1 in bob: ##loop statement until no more line in file
    teamname.append(line1.replace("\n",""))

print(teamname)
</code></pre>
<p>Would give you the output:</p>
<pre><code>['Collingwood', 'Essendon', 'Hawthorn', 'Richmond']
</code></pre>
<p>You could then modify <code>teamname</code> to get your requested output:</p>
<pre><code>print(", ".join(teamname))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about</p>
<pre><code>for line1 in bob:
    teamname.append(line1.strip()) # .strip() removes the \n

print (', '.join(teamname))
</code></pre>
<p>The <code>.join()</code> does the final formatting.</p>
<hr/>
<p><strong>Update.</strong> I now think a more pythonistic (and elegant) answer would be:</p>
<pre><code>file2 = input("Enter the team-names file: ") ## E.g. teamNames.txt

with open(file2) as f:
    teamname = [line.strip() for line in f]

print (', '.join(teamname))
</code></pre>
<p>The <code>with</code> statement ensures the file is closed when the block finishes. Instead of doing the <code>for</code> loop, it now uses a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>, a cool way to create a list by transforming the elements from another list (or from an <a href="https://wiki.python.org/moin/Iterator" rel="nofollow noreferrer">iterable object</a>, like <code>file</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>The join method works well but you can also try using a for loop.</p>
<pre><code>for name in teamname: # takes each entry separately 
    print name
</code></pre>
</div>
<span class="comment-copy">When you are appending the <code>line1</code> to <code>teamname</code> just <code>strip</code> the <code>line1</code> before that by using <code>teamname.append(line1.strip())</code>. And inside print, convert your list to a string by using <code>print(“, “.join(teamname))</code></span>
<span class="comment-copy">thanks alot!, i never considered the replace() function</span>
<span class="comment-copy">thanks alot! i know this question was very simple, and i used split but did it like teamname = teamname.split() which gave an error.</span>
