<div class="post-text" itemprop="text">
<p>I have a file email.txt which has email addresses as follows:</p>
<blockquote>
<p>James, Brian &lt; brian.james@abc.com&gt;; Attar, Daniel &lt; Daniel.Attar@abc.com&gt;; Alex, James &lt; james.alex@abc.com&gt;; Trendy, Elizabeth &lt; elizabeth.trendy@abc.com&gt;; jones, Gary &lt; Gary.Jones@abc.com&gt;; bones, byron &lt; byron.bones@abc.com&gt;;  </p>
</blockquote>
<p>I want to write the email addresses into a .csv file in one column like this:  </p>
<pre><code>brian.james@abc.com  
daniel.attar@abc.com  
...  
byron.bones@abc.com  
</code></pre>
<p>I wrote a Python script as follows which does this:  </p>
<pre><code>    fn1 = "email.txt"
    f1 = open(fn1,"r")
    f1r1 = f1.readlines()
    f1r2 = [i.strip() for i in f1r1]
    f1r3 = [i.split(";") for i in f1r2]
    s1 = f1r3[0]
    a = open("ef.csv","w")
    for i in s1:
        j = i.split("&lt;")
        a.write(j[1].strip("&gt;")+"\n")
    a.close()
</code></pre>
<p>Is there a better, more efficient or more elegant way to write this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could consider reading the contents of the text file as a single string and then using <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re</code></a> to extract the emails from that string.</p>
<p>In this case, it looks like your email format is fairly specific, so the regex below is also specific also.  Realize, though, that a regex capable of finding any RFC 5322-compliant email address (the "official standard" for email address formats) is several hundred characters long.  For more on that see <a href="https://www.regular-expressions.info/email.html" rel="nofollow noreferrer">How to Find or Validate an Email Address</a> from Jan Goyvaerts.</p>
<p>Anyway...</p>
<pre><code>import re

with open('emails.txt', 'r') as file:
    # Produces a single string, `emails`
    emails = file.read().replace('\n', '')

regex = re.compile('\S+\.\S+@abc\.com')

for email in regex.findall(emails):
    print(email)
# brian.james@abc.com
# Daniel.Attar@abc.com
# james.alex@abc.com
# elizabeth.trendy@abc.com
# Gary.Jones@abc.com
# byron.bones@abc.com
</code></pre>
<p>Regex walkthrough: this regex assumes each email takes a pretty specific form: <code>something&lt;dot&gt;somethingelse&lt;at&gt;abc.com</code>.  </p>
<ul>
<li><code>\S+</code> is 1 or more non-whitespace characters</li>
<li><code>\.</code> is a literal period (backslashing a metacharacter)</li>
</ul>
</div>
<span class="comment-copy">@Alpha Delta, first you have to define efficient. Secondly, if it works, and you want simply to ask how to do it better, check out <a href="https://codereview.stackexchange.com/">stack exchange code review</a></span>
