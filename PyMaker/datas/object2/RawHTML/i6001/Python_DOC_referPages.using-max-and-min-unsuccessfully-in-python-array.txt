<div class="post-text" itemprop="text">
<p><strong>Context</strong>: Continuing with my self-learn of Python, I recently completed a textbook exercise that asked for a program that allowed the user to define 'x' number of years and to be able to input, for every month in 'x', a value for rainfall.</p>
<p><strong>Issue:</strong> Below is my code, which works 'ok', however the latest exercise demands I 'expand' my code to present the numerically largest and smallest user input rainfall value, in a print statement.</p>
<p><strong>Disclosure: I have looked on S.O to try finding the solution to my question, but nothing seems to be close enough to my challenge, to help me.</strong></p>
<p><strong>What I've tried:</strong> I have tried using <code>max()</code> and <code>min()</code> however I keep getting a <code>TypeError: 'int' object is not iterable</code> when I type the code <code>print(max(monthlyRainfall)</code> or <code>print(min(monthlyRainfall)</code></p>
<pre><code>def yearsToTrack():
    userYearsTracking = int(input("How many years do you want to track: "))
    return userYearsTracking

def calculationAlgorithm(userYearsTracking):
    totalMonths = 0
    totalRainfall = 0
    for currentYear in range (1, userYearsTracking +1):
        for currentMonth in range (1, 13):
            monthlyRainfall = int(input("Inches of rainfall for month " + format(currentMonth, "d",) + " | year " +
                                    format(currentYear, "d",)+": "))
            totalMonths += 1
            totalRainfall += monthlyRainfall
    averageRainfall = totalRainfall / totalMonths
    print("Total months: " + str(totalMonths))
    print("Total rain:", format(totalRainfall), "(inch)")
    print("Total average rainfall:", round(averageRainfall,2), "(inch)")

def main():
    userYearsTracking = yearsToTrack()
    calculationAlgorithm(userYearsTracking)
main()
</code></pre>
<p>Is anyone able to offer some 'pointers' as to where I am going wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python's built-in min() and max() functions expect iterable object like <strong>list, set</strong>, etc. I think you are putting only one integer which is not so correct (how can you pick min or max number when only 1 number given - obviously it is bot min and max).
One way of doing this would be:</p>
<ol>
<li><p>declare list var:</p>
<p><code>rainfallList = []</code></p></li>
<li><p>Then when you get monthlyRainfall, you should add this code:</p>
<p><code>rainfallList.append(monthlyRainfall)</code></p></li>
<li><p>After all for loops you can use <strong>min(rainfallList)</strong> and/or <strong>max(rainfallList)</strong></p></li>
</ol>
<p>So your final code should be:</p>
<pre><code>def yearsToTrack():
    userYearsTracking = int(input("How many years do you want to track: "))
    return userYearsTracking

def calculationAlgorithm(userYearsTracking):
    totalMonths = 0
    totalRainfall = 0

    rainfallList = []

    for currentYear in range (1, userYearsTracking +1):
        for currentMonth in range (1, 13):
            monthlyRainfall = int(input("Inches of rainfall for month " + format(currentMonth, "d",) + " | year " +
                                    format(currentYear, "d",)+": "))
            totalMonths += 1
            rainfallList.append(monthlyRainfall)

            totalRainfall += monthlyRainfall
    averageRainfall = totalRainfall / totalMonths
    print("Total months: " + str(totalMonths))
    print("Total rain:", format(totalRainfall), "(inch)")
    print("Total average rainfall:", round(averageRainfall,2), "(inch)")
    print("Min rain:", format(min(rainfallList)), "(inch)")
    print("Max rain:", format(max(rainfallList)), "(inch)")

def main():
    userYearsTracking = yearsToTrack()
    calculationAlgorithm(userYearsTracking)
main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/sys.html#sys.maxsize" rel="nofollow noreferrer"><code>sys.maxsize</code></a> and <code>0</code> to intilize variables for tracking the minimum and maximum rainfall values that realistically the user will never enter above above or below respectively. </p>
<p>However for the second case just to make sure you can also add a simple check to ensure the user does not enter a negative rainfall amount:</p>
<pre><code>def calculationAlgorithm(userYearsTracking):
    totalMonths = 0
    totalRainfall = 0
    maxRainfall = 0
    minRainfall = sys.maxsize
    for currentYear in range (1, userYearsTracking +1):
        for currentMonth in range (1, 13):
            monthlyRainfall = int(input("Inches of rainfall for month " + format(currentMonth, "d",) + " | year " +
                                    format(currentYear, "d",)+": "))
            if monthlyRainfall &lt; 0:
                print("Error invalid rainfall entered")
                sys.exit()
            if monthlyRainfall &gt; maxRainfall:
                maxRainfall = monthlyRainfall
            if monthlyRainfall &lt; minRainfall:
                minRainfall = monthlyRainfall
            totalMonths += 1
            totalRainfall += monthlyRainfall
    averageRainfall = totalRainfall / totalMonths
    print("Total months: " + str(totalMonths))
    print("Total rain:", format(totalRainfall), "(inch)")
    print("Total average rainfall:", round(averageRainfall,2), "(inch)")
    print("Largest input rainfall: " + str(maxRainfall))
    print("Smallest input rainfall: " + str(minRainfall))
</code></pre>
<p>Try out the full program with above changes <strong><a href="https://repl.it/repls/VerifiableTomatoLoris" rel="nofollow noreferrer">here.</a></strong></p>
<p><strong>Example Usage:</strong></p>
<pre><code>How many years do you want to track:  1
Inches of rainfall for month 1 | year 1:  2
Inches of rainfall for month 2 | year 1:  2
Inches of rainfall for month 3 | year 1:  2
Inches of rainfall for month 4 | year 1:  2
Inches of rainfall for month 5 | year 1:  4
Inches of rainfall for month 6 | year 1:  1
Inches of rainfall for month 7 | year 1:  2
Inches of rainfall for month 8 | year 1:  2
Inches of rainfall for month 9 | year 1:  2
Inches of rainfall for month 10 | year 1:  2
Inches of rainfall for month 11 | year 1:  2
Inches of rainfall for month 12 | year 1:  2
Total months: 12
Total rain: 25 (inch)
Total average rainfall: 2.08 (inch)
Largest input rainfall: 4
Smallest input rainfall: 1
</code></pre>
<p><strong>N.B.</strong> I have only used <strong><a href="https://en.wikipedia.org/wiki/Camel_case" rel="nofollow noreferrer">camelCase</a></strong> in naming the new variables as that is the style you are using. I would recommend changing all the names of the variables in your program to <a href="https://en.wikipedia.org/wiki/Snake_case" rel="nofollow noreferrer"><strong>snake_case</strong></a> as that is the convention in python.</p>
</div>
<span class="comment-copy"><code>print(str(...))</code></span>
<span class="comment-copy">Can you mention your current output</span>
<span class="comment-copy">Sounds like you're passing an <code>int</code> to <code>max</code>/<code>min</code> instead of a list of them.</span>
<span class="comment-copy">Those functions (min, max) are called on iterables (lists, tuples, etc.). There is no such data structure in your code, you just maintain totals.</span>
<span class="comment-copy">You need to add something like <code>overallMin = min(overallMin, monthlyRainfall)</code> to your inner loop. Same for max. These should be initialized like the sum variables.</span>
<span class="comment-copy">Thank you for the simplicity of explanation, it really helped. I have thought about the declaring a list, but kept persuading myself I didn't need to.</span>
<span class="comment-copy">I am happy that it was helpful to you :)</span>
