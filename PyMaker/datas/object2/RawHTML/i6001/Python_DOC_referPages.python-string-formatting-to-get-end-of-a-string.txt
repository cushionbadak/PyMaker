<div class="post-text" itemprop="text">
<p>So I know that I can use either the "%" or ".format" syntax to format string, particularly to trim the end of string to a set number of characters:</p>
<pre><code>&gt;&gt;&gt; print("%s" % "12345678990")    
12345678990
&gt;&gt;&gt; print("%.5s" % "12345678990")
12345
</code></pre>
<p>Is there any way to trim the <em>beginning</em> of the string <strong>using string formatting</strong> (not slicing, etc)? The desired output would be:</p>
<pre><code>&gt;&gt;&gt; print("%&lt;lst3&gt;" % "12345678990")    
990
</code></pre>
<p>I have tried the following, to no avail:</p>
<p>"%.-3s"</p>
<p>"%.=3s"</p>
<p>"%.:3s"</p>
<p>"%.:-3s"</p>
<p>And so on.</p>
<p>I have seen nothing in <a href="https://docs.python.org/3/library/stdtypes.html#string-formatting" rel="nofollow noreferrer">the docs</a> about this, but would be happy to be proven wrong! Any help is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>well for this problem you have to use <code>slicing</code>.</p>
<pre><code>print ("12345678990"[8:])
#or
print ("12345678990"[-3:])
</code></pre>
<p><a href="https://stackoverflow.com/questions/509211/understanding-pythons-slice-notation">Understanding Python's slice notation</a> will be useful to you.</p>
</div>
<div class="post-text" itemprop="text">
<p>For strings, taking a slice is more Pythonic:</p>
<pre><code>&gt;&gt;&gt; "12345678990"[-3:]
'990'
</code></pre>
<p>Bear in mind the "wrap-around" behavior of negative numbers in slicing and indexing.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do like this :</p>
<pre><code> print("%s" % "12345678990"[-3:])
</code></pre>
</div>
<span class="comment-copy">Just to clarify, I am looking for a way to use string formatting for this, not slicing</span>
