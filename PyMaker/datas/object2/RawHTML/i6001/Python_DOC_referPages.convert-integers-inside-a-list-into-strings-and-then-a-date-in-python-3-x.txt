<div class="post-text" itemprop="text">
<p>i've just started studying python in college and i have a problem with this exercise:
basically i have to take a list of integers, like for example [10,2,2013,11,2,2014,5,23,2015], turn the necessary elements to form a date into a string, like ['1022013',1122014,5232015] and then put a / between the strings so i have this ['10/2/2013', '11/22/2014','05/23/2015']. It needs to be a function, and the length of the list is assumed to be a multiple of 3. How do i go about doing this? 
I wrote this code to start:</p>
<pre><code>def convert(lst):
     ...:     for element in lst:
     ...:      result = str(element)
     ...:      return result
     ...:
</code></pre>
<p>but from a list [1,2,3] only returns me '1'.</p>
</div>
<div class="post-text" itemprop="text">
<p>To split your list into size 3 chunks you use a <a href="https://docs.python.org/3/library/stdtypes.html#range" rel="nofollow noreferrer"><code>range</code></a> with a <code>step</code> of 3</p>
<pre><code>for i in range(0, len(l), 3):
    print(l[i:i+3])
</code></pre>
<p>And joining the pieces with <code>/</code> is as simple as </p>
<pre><code>'/'.join([str(x) for x in l[i:i+3]])
</code></pre>
<p>Throwing it all together into a function:</p>
<pre><code>def make_times(l):
    results = []
    for i in range(0, len(l), 3):
        results.append('/'.join([str(x) for x in l[i:i+3]]))
    return results
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>testList = [10,2,2013,11,2,2014,5,23,2015]

def convert(inputList):
    tempList = []
    for i in range (0, len(inputList), 3): #Repeats every 3 elements
        newDate = str(inputList[i])+"/"+str(inputList[i+1])+"/"+str(inputList[i+2]) #Joins everything together
        tempList.append(newDate)
    return tempList

print(convert(testList))
</code></pre>
<p>Saswata sux</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer"><code>datetime</code></a> to extract the date and and <a href="https://docs.python.org/3/library/datetime.html#datetime.date.strftime" rel="nofollow noreferrer"><code>strftime</code></a> to format it:</p>
<pre><code>from datetime import datetime

dates = [10,2,2013,11,2,2014,5,23,2015]
for i in range(0, len(dates), 3):
    d = datetime(dates[i+2], dates[i], dates[i+1])
    print(d.strftime("%m/%d/%y"))
</code></pre>
<p><strong>OUTPUT</strong></p>
<pre><code>10/02/13
11/02/14
05/23/15
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something like this would work:</p>
<pre><code>def convert(lst):
    string = ''
    new_lst = []
    for x in lst:
        if len(str(x)) &lt; 4:
            string += str(x)+'/'
        else:
            string += str(x)
            new_lst.append(string)
            string = ''
    return(new_lst)

lst = [10,2,2013,11,2,2014,5,23,2015]

lst = convert(lst)

print(lst)

#output
['10/2/2013', '11/2/2014', '5/23/2015']
</code></pre>
<p>So create a placeholder string and a new list. Then loop through each element in your list. If the element is not a year, then add it to the string with a '/'. If it is a year, add the string to the new list and clear the string.</p>
</div>
<span class="comment-copy">Thank you, this worked. Could you explain the use of step tho'? I don't understand how the splitting happens.</span>
<span class="comment-copy">Basically, instead of counting <code>0, 1, 2, 3, 4, 5, 6</code>, we're by threes <code>0, 3, 6</code>.  Then we use list slicing to take <code>l[i:i+3]</code>, everything from the <code>i</code> index up to (but not including) the <code>i+3</code> index. Then on the next iteration of the loop, <code>i</code> is equal to the old <code>i</code> plus three. So we're taking 3-wide slices from the list, starting every third element.  I recommend playing around a little with list slicing and <code>range</code> to get comfortable with them</span>
<span class="comment-copy">Thank you for your answer. Unfortunately, it returns an empty list.</span>
<span class="comment-copy">Does your input list look like mine?</span>
<span class="comment-copy">Nevermind it works now. I forgot to place return at the right indentation. Sorry.</span>
