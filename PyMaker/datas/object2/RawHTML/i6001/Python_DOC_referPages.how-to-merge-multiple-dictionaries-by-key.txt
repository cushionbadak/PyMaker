<div class="post-text" itemprop="text">
<p>I want to get an union-like merged dict of multiple (3 or more) dictionaries.</p>
<p>What I have:</p>
<pre><code>d1 = {'key1': 'x1', 'key2': 'y1', 'key4': 'z1'}
d2 = {'key1': 'x2', 'key2': 'y2', 'key5': 'z2'}
d3 = {'key1': 'x3', 'key3': 'y3', 'key4': 'z3'}
</code></pre>
<p>What I want to get:</p>
<pre><code>d_merged = {
    'key1' : ('x1', 'x2', 'x3'),
    'key2' : ('y1', 'y2', None),
    'key3' : (None, None, 'y3'),
    'key4' : ('z1', None, 'z3'), 
    'key5' : (None, 'z2', None)
}
</code></pre>
<p>What is the most pythonic / efficient way to to this?</p>
<p>I've found an example for 2 dictionaries <a href="https://stackoverflow.com/questions/5946236/how-to-merge-multiple-dicts-with-same-key">here</a>, but is there a better way (e.g.: a comprehension) what can solve the missing key problem for some dictionaries here?</p>
<p>Is there a way to do the same merge for any number of input dictionaries?</p>
</div>
<div class="post-text" itemprop="text">
<p>Produce a union of all the keys, then iterate over that union to gather values:</p>
<pre><code>result = {key: (d1.get(key), d2.get(key), d3.get(key))
          for key in d1.keys() | d2.keys() | d3.keys()}
</code></pre>
<p>In Python 3, <a href="https://docs.python.org/3/library/stdtypes.html#dict.keys" rel="nofollow noreferrer"><code>dict.keys()</code></a> gives you a <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow noreferrer"><em>dictionary view</em> object</a>, which acts like a set. You can create a union of all keys in all dictionaries with <code>|</code> on those objects.</p>
<p>In Python 2, use <a href="https://docs.python.org/2/library/stdtypes.html#dict.viewkeys" rel="nofollow noreferrer"><code>dict.viewkeys()</code></a> instead.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; d1 = {'key1': 'x1', 'key2': 'y1', 'key4': 'z1'}
&gt;&gt;&gt; d2 = {'key1': 'x2', 'key2': 'y2', 'key5': 'z2'}
&gt;&gt;&gt; d3 = {'key1': 'x3', 'key3': 'y3', 'key4': 'z3'}
&gt;&gt;&gt; {key: (d1.get(key), d2.get(key), d3.get(key))
...  for key in d1.keys() | d2.keys() | d3.keys()}
{'key1': ('x1', 'x2', 'x3'), 'key5': (None, 'z2', None), 'key3': (None, None, 'y3'), 'key4': ('z1', None, 'z3'), 'key2': ('y1', 'y2', None)}
&gt;&gt;&gt; from pprint import pprint
&gt;&gt;&gt; pprint(_)
{'key1': ('x1', 'x2', 'x3'),
 'key2': ('y1', 'y2', None),
 'key3': (None, None, 'y3'),
 'key4': ('z1', None, 'z3'),
 'key5': (None, 'z2', None)}
</code></pre>
<p>For an arbitrary <em>sequence</em> of dictionaries, use <code>set().union(*dictionaries)</code> and a <code>tuple()</code> call on a generator expression:</p>
<pre><code>dictionaries = (d1, d2, d3)  # or more
result = {key: tuple(d.get(key) for d in dictionaries)
          for key in set().union(*dictionaries)}
</code></pre>
</div>
<span class="comment-copy">there is a link what I've tried, BTW thanks for the down vote without even reading the content, and understanding the problem!!!</span>
<span class="comment-copy">Oh, I didn't downvote. Must've been someone else.</span>
<span class="comment-copy">Sry then. My bad. Your reaction came so quickly and it seemed, the question was viewed only twice.</span>
<span class="comment-copy">vao, that's it! Thanks! Is it possible to use this with any number of input dictionaries without extending the tuple here?</span>
<span class="comment-copy">@user1802693: added that in.</span>
<span class="comment-copy">That's what I was looking for.. Thank you!</span>
