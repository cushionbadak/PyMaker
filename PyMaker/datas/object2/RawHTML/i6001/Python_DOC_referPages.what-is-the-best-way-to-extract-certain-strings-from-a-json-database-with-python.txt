<div class="post-text" itemprop="text">
<p>I have a large data base such as this:</p>
<pre><code>{'gifts': [{'id': 603988529, 'created_at': 1511248537, 'item_id': 11, 'item_type': 'Point::Stone', 'quantity': 1, 'description': 'Compensation for the incorrect item names and an incorrect banner description'}, {'id': 603988528, 'created_at': 1511248537, 'item_id': 932, 'item_type': 'SpecialItem', 'quantity': 2, 'description': '"Dokkan Thank-You Celebration" Login Bonus!'}, {'id': 603988527, 'created_at': 1511248537, 'item_id': 931, 'item_type': 'SpecialItem', 'quantity': 2, 'description': '"Dokkan Thank-You Celebration" Login Bonus!'}, {'id': 603988526, 'created_at': 1511248537, 'item_id': 1004, 'item_type': 'TrainingItem', 'quantity': 5, 'description': '"Dokkan Thank-You Celebration" Login Bonus!'}, {'id': 603988525, 'created_at': 1511248537, 'item_id': 1003, 'item_type': 'TrainingItem', 'quantity': 5, 'description': '"Dokkan Thank-You Celebration" Login Bonus!'}, {'id': 603988524, 'created_at': 1511248537, 'item_id': 1002, 'item_type': 'TrainingItem', 'quantity': 5, 'description': '"Dokkan Thank-You Celebration" Login Bonus!'}, {'id': 603988523, 'created_at': 1511248537, 'item_id': 1001, 'item_type': 'TrainingItem', 'quantity': 5, 'description': '"Dokkan Thank-You Celebration" Login Bonus!'}, {'id': 603988522, 'created_at': 1511248537, 'item_id': 1000, 'item_type': 'TrainingItem', 'quantity': 5, 'description': '"Dokkan Thank-You Celebration" Login Bonus!'}]}
</code></pre>
<p>and I would like to write some code to extract every number after "ID" and put it into a table. </p>
<p>so that i can get [603988529, 603988528....] until all the IDs are extracted</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>With a deeply nested structure, <a href="https://docs.python.org/3/library/pprint.html" rel="nofollow noreferrer"><code>pprint</code></a> can help you:</p>
<pre><code>&gt;&gt;&gt; from pprint import pprint
&gt;&gt;&gt; pprint(data)
{'gifts': [{'created_at': 1511248537,
            'description': 'Compensation for the incorrect item names and an '
                           'incorrect banner description',
            'id': 603988529,
            'item_id': 11,
            'item_type': 'Point::Stone',
            'quantity': 1},
           {'created_at': 1511248537,
            'description': '"Dokkan Thank-You Celebration" Login Bonus!',
            'id': 603988528,
            'item_id': 932,
            'item_type': 'SpecialItem',
            'quantity': 2},
           {'created_at': 1511248537,
            'description': '"Dokkan Thank-You Celebration" Login Bonus!',
            'id': 603988527,
            'item_id': 931,
            'item_type': 'SpecialItem',
            'quantity': 2},
           {'created_at': 1511248537,
            'description': '"Dokkan Thank-You Celebration" Login Bonus!',
            'id': 603988526,
            'item_id': 1004,
            'item_type': 'TrainingItem',
            'quantity': 5},
           {'created_at': 1511248537,
            'description': '"Dokkan Thank-You Celebration" Login Bonus!',
            'id': 603988525,
            'item_id': 1003,
            'item_type': 'TrainingItem',
            'quantity': 5},
           {'created_at': 1511248537,
            'description': '"Dokkan Thank-You Celebration" Login Bonus!',
            'id': 603988524,
            'item_id': 1002,
            'item_type': 'TrainingItem',
            'quantity': 5},
           {'created_at': 1511248537,
            'description': '"Dokkan Thank-You Celebration" Login Bonus!',
            'id': 603988523,
            'item_id': 1001,
            'item_type': 'TrainingItem',
            'quantity': 5},
           {'created_at': 1511248537,
            'description': '"Dokkan Thank-You Celebration" Login Bonus!',
            'id': 603988522,
            'item_id': 1000,
            'item_type': 'TrainingItem',
            'quantity': 5}]}
</code></pre>
<p>So. You have a dict with only one key : <code>gifts</code>.</p>
<pre><code>&gt;&gt;&gt; pprint(data['gifts'])
[{'created_at': 1511248537,
  'description': 'Compensation for the incorrect item names and an incorrect '
                 'banner description',
  'id': 603988529,
  'item_id': 11,
  'item_type': 'Point::Stone',
  'quantity': 1},
 {'created_at': 1511248537,
  'description': '"Dokkan Thank-You Celebration" Login Bonus!',
  'id': 603988528,
  'item_id': 932,
  'item_type': 'SpecialItem',
  'quantity': 2},
 {'created_at': 1511248537,
  'description': '"Dokkan Thank-You Celebration" Login Bonus!',
  'id': 603988527,
  'item_id': 931,
  'item_type': 'SpecialItem',
  'quantity': 2},
 {'created_at': 1511248537,
  'description': '"Dokkan Thank-You Celebration" Login Bonus!',
  'id': 603988526,
  'item_id': 1004,
  'item_type': 'TrainingItem',
  'quantity': 5},
 {'created_at': 1511248537,
  'description': '"Dokkan Thank-You Celebration" Login Bonus!',
  'id': 603988525,
  'item_id': 1003,
  'item_type': 'TrainingItem',
  'quantity': 5},
 {'created_at': 1511248537,
  'description': '"Dokkan Thank-You Celebration" Login Bonus!',
  'id': 603988524,
  'item_id': 1002,
  'item_type': 'TrainingItem',
  'quantity': 5},
 {'created_at': 1511248537,
  'description': '"Dokkan Thank-You Celebration" Login Bonus!',
  'id': 603988523,
  'item_id': 1001,
  'item_type': 'TrainingItem',
  'quantity': 5},
 {'created_at': 1511248537,
  'description': '"Dokkan Thank-You Celebration" Login Bonus!',
  'id': 603988522,
  'item_id': 1000,
  'item_type': 'TrainingItem',
  'quantity': 5}]
</code></pre>
<p>You have a list of dicts and each dict has a <code>id</code> key. Use a list comprehension and you're done:</p>
<pre><code>&gt;&gt;&gt; [d['id'] for d in data['gifts']]
[603988529, 603988528, 603988527, 603988526, 603988525, 603988524, 603988523, 603988522]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Saving the string in a file to put it in a variable, like the reply you would get when you ask the API:</p>
<pre><code>text_file = open("json.txt", "r")
array = text_file.read().replace('"', '\\"').replace("'", '"')
data  = json.loads(array)
idlist = []
for ids in data['gifts']:
    idlist.append(ids['id'])

print(idlist)
</code></pre>
<p>this returns:</p>
<pre><code>[603988529, 603988528, 603988527, 603988526, 603988525, 603988524, 603988523, 603988522]
</code></pre>
</div>
<span class="comment-copy"><code>the_ids = [item["id"] for item in your_obj['gifts']]</code> where <code>your_obj</code> is whatever object you posted?</span>
<span class="comment-copy">Hmm, parse json with a <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">builtin module</a> then extract values from the dicts?</span>
<span class="comment-copy">@user3159253 it's not valid JSON, I assume it's already parsed into a python object.</span>
<span class="comment-copy">That's a dictionary, not JSON or a database. What have you tried to parse it?</span>
<span class="comment-copy">hi eric i tried pprint(data) but it says Traceback (most recent call last):   File "&lt;pyshell#10&gt;", line 1, in &lt;module&gt;     pprint(data) TypeError: 'module' object is not callable</span>
<span class="comment-copy">@cromat: I forgot about <code>from pprint import pprint</code>. I updated the answer.</span>
