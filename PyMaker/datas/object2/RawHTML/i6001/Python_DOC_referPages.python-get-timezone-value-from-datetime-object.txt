<div class="post-text" itemprop="text">
<p>Does anyone know how to obtain the Timezone value (in minutes, hrs etc.) of an ISO8601 timestamp? I can see it in a tzinfo object, but can't seem to get the value out. Here's what I've done so far, but how do I get the the value -28800 out into a variable?</p>
<pre><code>import dateutil.parser
import datetime
firststarttime = '2008-12-31T23:00:00-08:00'
datetime_obj = dateutil.parser.parse(firststarttime)
datetime_obj
Out[57]: datetime.datetime(2008, 12, 31, 23, 0, tzinfo=tzoffset(None, -28800))
datetime_obj.tzinfo
Out[46]: tzoffset(None, -28800)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use (if you're on Python 2.7 or above):</p>
<pre><code>datetime_obj.utcoffset().total_seconds()
</code></pre>
<p>Using <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.utcoffset" rel="nofollow noreferrer"><code>utcoffset()</code></a> to get the <code>timedelta</code>, and <a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta.total_seconds" rel="nofollow noreferrer"><code>total_seconds()</code></a> to convert to seconds. You can read the documentation linked for information about what exactly they're doing.</p>
<p>If you need to add this offset onto some other <code>datetime</code>, then you can just use <code>utcoffset()</code> to get back a <code>timedelta</code>. Though the return value might look a bit strange:</p>
<pre><code>datetime.timedelta(-1, 57600)  # equivelant to datetime.timedelta(seconds=-28800)
</code></pre>
<p>This is because of the way <code>timedelta</code> normalizes negative values which is also noted at <a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer"><code>datetime.timedelta</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>the problem is, that the values seem to be fixed to that object.
this is not the most efficient way to do it, in fact, I would happily know other answers, but, this is how I'd do it:</p>
<pre><code>import dateutil.parser
import datetime
import re
firststarttime = '2008-12-31T23:00:00-08:00'
datetime_obj = dateutil.parser.parse(firststarttime)
s = str(datetime_obj.tzinfo)
p = re.compile(",\s.?\d+")
result = p.search(s).group()
result = int(result[2:])
</code></pre>
<p>prints</p>
<pre><code>print(result)
&gt;&gt;&gt; -28800 # as integer
</code></pre>
</div>
<span class="comment-copy">Thanks guys. The solution by eugenhu worked perfectly.</span>
