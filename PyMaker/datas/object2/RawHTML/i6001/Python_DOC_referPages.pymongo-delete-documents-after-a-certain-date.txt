<div class="post-text" itemprop="text">
<p>I have a python script that I want to delete some MongoDB documents when the <code>published</code> key date is over 30 days.</p>
<p>My code currently is:</p>
<pre><code>def db_rotate(mongo_server, mongo_port):
    try:
        logging.info('Connecting to MongoDB')
        client = MongoClient(mongo_server, mongo_port)
        db = client['vuln_sets']
        logging.info('Connected to MongoDB')
        today = datetime.now()
        last_month = today - timedelta(days=30)
        result = db.vulnerabilities.delete_many({'Published': last_month})
        logging.info('Deleted ' + str(result.deleted_count) + ' vulnerabilities')
    except Exception as e:
    logging.exception(e)
</code></pre>
<p>This code runs with no errors but does not remove any documents and I believe this to be because the date in the <code>Published</code> key has the date in Unix format i.e. <code>2017-10-30T11:36:20</code> whereas the last_month variable uses a different format.</p>
<p>The code which inserts the documents is:</p>
<pre><code>import json
import logging
import logging.handlers
import os
import pymongo
from datetime import timedelta, datetime
from pymongo import MongoClient


def import_json(mongo_server,mongo_port, vuln_folder):
    try:
        logging.info('Connecting to MongoDB')
        client = MongoClient(mongo_server, mongo_port)
        db = client['vuln_sets']
        coll = db['vulnerabilities']
        logging.info('Connected to MongoDB')
        basepath = os.path.dirname(__file__)
        filepath = os.path.abspath(os.path.join(basepath, ".."))
        archive_filepath = filepath + vuln_folder
        filedir = os.chdir(archive_filepath)
        file_count = 0
        for item in os.listdir(filedir):
            if item.endswith('.json'):
                file_name = os.path.abspath(item)
                with open(item, 'r') as currentfile:
                    vuln_counter = 0
                    duplicate_count = 0
                    logging.info('Currently processing ' + item)
                    file_count +=1
                    json_data = currentfile.read()
                    vuln_content = json.loads(json_data)
                    today = datetime.now()
                    last_month = today - timedelta(days=30)
                    for vuln in vuln_content:
                        try:
                            del vuln['_type']
                            new_vuln = {key: vuln[key] for key in vuln if key != '_source'}
                            new_vuln.update(vuln['_source'])
                            if new_vuln['published'] &gt;= str(last_month):
                                coll.insert(new_vuln, continue_on_error=True)
                                vuln_counter += 1
                            else:
                                pass
                        except pymongo.errors.DuplicateKeyError:
                            duplicate_count +=1

                logging.info('Added ' + str(vuln_counter) + ' vulnerabilities for ' + item)
                logging.info('Found ' + str(duplicate_count) + ' duplicate records!')
                os.remove(file_name)
        logging.info('Processed ' + str(file_count) + ' files')
    except Exception as e:
        logging.exception(e)
</code></pre>
<p>An example of the documents inserted is:</p>
<pre><code>{
    "_id" : "CESA-2017:3081",
    "_index" : "bulletins",
    "_score" : null,
    "sort" : [
        103042
    ],
    "lastseen" : "2017-10-30T20:42:09",
    "references" : [
        "https://access.redhat.com/errata/RHSA-2017:3081"
    ],
    "affectedPackage" : [

    ],
    "description" : "",
    "edition" : 1,
    "reporter" : "",
    "published" : "2017-10-30T11:36:20",
    "title" : "",
    "type" : "centos",
    "enchantments" : {

    },
    "bulletinFamily" : "unix",
    "cvelist" : [
        "",
    ],
    "modified" : "2017-10-30T11:36:20",
    "id" : "CESA-2017:3081",
    "href" : "http://lists.centos.org/pipermail/centos-announce/2017-October/022611.html",
    "cvss" : {
        "score" : 6.8,
        "vector" : "AV:NETWORK/AC:MEDIUM/Au:NONE/C:PARTIAL/I:PARTIAL/A:PARTIAL/"
    }
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>result = db.vulnerabilities.delete_many({'Published': last_month})</p>
</blockquote>
<p>First, the field names are case-sensitive. In your document you have <code>published</code> but in your query is capital <code>P</code> for <code>Published</code>. </p>
<p>Also note that you store the dates in your document as String type, please use <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">Python datetime object</a> as much as possible. See also <a href="http://api.mongodb.com/python/current/examples/datetimes.html" rel="nofollow noreferrer">PyMongo Datetimes and Timezones</a> for more information and examples. i.e. </p>
<pre><code>last_month = datetime.now() - timedelta(days=30) 
</code></pre>
<p>The value of <code>last_month</code> when you passed into the delete query is <code>datetime.datetime(2017, 10, 28, 17, 36, 34, 358732)</code>. If you were to convert this into String, it would be <code>2017-10-28 17:36:34.358732</code>. As you can see both values are not what you expecting. </p>
<p>Another advantage of storing the value as <a href="https://docs.mongodb.com/manual/reference/bson-types/#document-bson-type-date" rel="nofollow noreferrer">Date object</a> is that you can utilise an expression for any dates passed 30 days i.e. <code>{published: {$gt: &lt;30 days ago&gt;}}</code></p>
<p>See also <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer">datetime.strptime to convert string to datetime</a> for example: </p>
<pre><code>datetime.datetime.strptime(string_date, "%Y-%m-%d %H:%M:%S.%f")
</code></pre>
<p>Having said all the above, if you were intending to just expire a document past certain timestamp within MongoDB , please see <a href="https://docs.mongodb.com/manual/core/index-ttl/" rel="nofollow noreferrer">MongoDB TTL Indexes</a> and <a href="https://docs.mongodb.com/manual/tutorial/expire-data/" rel="nofollow noreferrer">Tutorial: Expire Data from Collections by Setting TTL</a>. </p>
</div>
<span class="comment-copy">please provide  <a href="https://stackoverflow.com/help/mcve">MCVE</a> with function which write to collection</span>
<span class="comment-copy">Can you show a document example?</span>
<span class="comment-copy">I have added a document example and the code which writes to MongoDB</span>
