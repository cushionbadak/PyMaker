<div class="post-text" itemprop="text">
<p>I have a form in my Django app where one field is called url. The user can add a youtube url.
On submit, I want to save only the video id.</p>
<p>My views.py look like this:</p>
<pre><code>import re
def video_new(request):
    if request.user.is_authenticated():
        if request.method == "POST":
            form = VideoForm(request.POST)
            if form.is_valid():
                video = form.save(commit=False)
                fullURL = video.url
                youtubeId = re.sub(r'\shttps://www.youtube.com/watch?v=\s', '',fullURL)
                video.url = youtubeId
                video.created_by = request.user
                video.save()
            return redirect('videos:video_detail', video_id=video.pk)
        else:
            form = VideoForm()
    else:
        #if user isn't logged in
        return redirect('login')
    return render(request, 'videos/video_edit.html', {'form': form})
</code></pre>
<p>When I output youtubeId in the console, I actually see the full Url.</p>
<p>So I guess I'm not using re.sub correct.
How to use it correctly ?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can using this function to get the id from complex youtube urls. </p>
<p>source: <a href="https://gist.github.com/kmonsoor/2a1afba4ee127cce50a0" rel="nofollow noreferrer">https://gist.github.com/kmonsoor/2a1afba4ee127cce50a0</a></p>
<pre><code>def get_yt_video_id(url):
    """Returns Video_ID extracting from the given url of Youtube

    Examples of URLs:
      Valid:
        'http://youtu.be/_lOT2p_FCvA',
        'www.youtube.com/watch?v=_lOT2p_FCvA&amp;feature=feedu',
        'http://www.youtube.com/embed/_lOT2p_FCvA',
        'http://www.youtube.com/v/_lOT2p_FCvA?version=3&amp;amp;hl=en_US',
        'https://www.youtube.com/watch?v=rTHlyTphWP0&amp;index=6&amp;list=PLjeDyYvG6-40qawYNR4juzvSOg-ezZ2a6',
        'youtube.com/watch?v=_lOT2p_FCvA',
        'https://www.youtube.com/watch?v=S6q41Rfltsk'

      Invalid:
        'youtu.be/watch?v=_lOT2p_FCvA',
    """

    try:
        # python 3
        from urllib.parse import urlparse, parse_qs
    except ImportError:
        # python 2
        from urlparse import urlparse, parse_qs

    if url.startswith(('youtu', 'www')):
        url = 'http://' + url

    query = urlparse(url)

    if 'youtube' in query.hostname:
        if query.path == '/watch':
            return parse_qs(query.query)['v'][0]
        elif query.path.startswith(('/embed/', '/v/')):
            return query.path.split('/')[2]
    elif 'youtu.be' in query.hostname:
        return query.path[1:]
    else:
        raise ValueError
</code></pre>
<p>In your case;</p>
<pre><code>youtubeId = get_yt_video_id(video.url)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need the leading and trailing <code>\s</code> in your pattern. Besides YouTube urls cannot be trivilally parsed with one pattern as there is also a short form for every url in the form <code>https://youtu.be/...</code>.</p>
<p>Better to use <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow noreferrer"><code>urllib.parse.urlparse</code></a> for parsing the url:</p>
<pre><code>from urllib.parse import urlparse

def parse_youtube_url(url_str):
    parsed_url = urlparse(url_str)
    if parsed_url.netloc in ('www.youtube.com', 'youtu.be'):
        youtube_id = parsed_url.query.split('&amp;')[0].split('=')[1]
    else:
        raise ValueError('Host is not youtube')
    return youtube_id

url = 'https://www.youtube.com/watch?v=dwyw7esd67'
print(parse_youtube_url(url))
# 'dwyw7esd67'
</code></pre>
<p>In Python 2, you'll use <code>from urlparse import urlparse</code> instead.</p>
</div>
<span class="comment-copy">In this example, I don't think you have any need to use regular expressions at all - wouldn't <code>fullURL.replace("https://www.youtube.com/watch?v=", "")</code> do the job?</span>
<span class="comment-copy">If I were you I'd try to capture the ID rather than delete the text preceding it. What if someone enters a URL with additional parameters?</span>
<span class="comment-copy">Works perfectly with this. Thanks a lot !</span>
