<div class="post-text" itemprop="text">
<p>I want to get all <code>datetime</code> object of each day in the current month but I haven't done yet. The result expected I wanted:</p>
<pre><code>[datetime.date(2014, 1, 1), datetime.date(2014, 1, 2), 
 datetime.date(2014, 1, 3), ..., datetime.date(2014, 1, 29),
 datetime.date(2014, 1, 30), datetime.date(2014, 1, 31)]
</code></pre>
<p>How can I solve this issue?</p>
<p>Please show me your ideas or suggestions. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a solution with <code>datetime</code> and <code>calendar</code>:</p>
<pre><code>&gt;&gt;&gt; import datetime, calendar
&gt;&gt;&gt; year = 2014
&gt;&gt;&gt; month = 1
&gt;&gt;&gt; num_days = calendar.monthrange(year, month)[1]
&gt;&gt;&gt; days = [datetime.date(year, month, day) for day in range(1, num_days+1)]
&gt;&gt;&gt; days
[datetime.date(2014, 1, 1), datetime.date(2014, 1, 2), datetime.date(2014, 1, 3), datetime.date(2014, 1, 4), datetime.date(2014, 1, 5), datetime.date(2014, 1, 6), datetime.date(2014, 1, 7), datetime.date(2014, 1, 8), datetime.date(2014, 1, 9), datetime.date(2014, 1, 10), datetime.date(2014, 1, 11), datetime.date(2014, 1, 12), datetime.date(2014, 1, 13), datetime.date(2014, 1, 14), datetime.date(2014, 1, 15), datetime.date(2014, 1, 16), datetime.date(2014, 1, 17), datetime.date(2014, 1, 18), datetime.date(2014, 1, 19), datetime.date(2014, 1, 20), datetime.date(2014, 1, 21), datetime.date(2014, 1, 22), datetime.date(2014, 1, 23), datetime.date(2014, 1, 24), datetime.date(2014, 1, 25), datetime.date(2014, 1, 26), datetime.date(2014, 1, 27), datetime.date(2014, 1, 28), datetime.date(2014, 1, 29), datetime.date(2014, 1, 30), datetime.date(2014, 1, 31)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Look into <a href="http://docs.python.org/3/library/calendar.html" rel="noreferrer">calendar</a> module: </p>
<pre><code>import calendar
print calendar.monthcalendar(2013, 4)
[[1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14], [15, 16, 17, 18, 19, 20, 21], [22, 23, 24, 25, 26, 27, 28], [29, 30, 0, 0, 0, 0, 0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>datetime</code> and <code>timedelta</code>:</p>
<pre><code>import datetime
d0 = datetime.datetime(year=2014, month=1, day=1)
d1 = datetime.datetime(year=2014, month=2, day=1)
print (d1 - d0).days
&gt;&gt;&gt; 31
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There's several method, but with <a href="http://docs.python.org/library/calendar.html#calendar.monthrange" rel="nofollow"><code>calendar.monthrange</code></a>, you can get a tuple <code>(first_weekday, nb_days)</code>:</p>
<pre><code>&gt;&gt;&gt; from calendar import monthrange
&gt;&gt;&gt; monthrange(2014, 2)
(5, 28)
&gt;&gt;&gt; a = monthrange(2014, 2)
&gt;&gt;&gt; range(1, a[1]+1)
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28]
&gt;&gt;&gt; [datetime.date(2014, 2, day) for day in range(1, a[1]+1)]
[datetime.date(2014, 1, 1), datetime.date(2014, 1, 2), datetime.date(2014, 1, 3), datetime.date(2014, 1, 4), datetime.date(2014, 1, 5), datetime.date(2014, 1, 6), datetime.date(2014, 1, 7), datetime.date(2014, 1, 8), datetime.date(2014, 1, 9), datetime.date(2014, 1, 10), datetime.date(2014, 1, 11), datetime.date(2014, 1, 12), datetime.date(2014, 1, 13), datetime.date(2014, 1, 14), datetime.date(2014, 1, 15), datetime.date(2014, 1, 16), datetime.date(2014, 1, 17), datetime.date(2014, 1, 18), datetime.date(2014, 1, 19), datetime.date(2014, 1, 20), datetime.date(2014, 1, 21), datetime.date(2014, 1, 22), datetime.date(2014, 1, 23), datetime.date(2014, 1, 24), datetime.date(2014, 1, 25), datetime.date(2014, 1, 26), datetime.date(2014, 1, 27), datetime.date(2014, 1, 28), datetime.date(2014, 1, 29), datetime.date(2014, 1, 30), datetime.date(2014, 1, 31)]
</code></pre>
<p>With a function to make it cleaner:</p>
<pre><code>from calendar import monthrange
import datetime

def get_datetime_range(year, month):
    nb_days = monthrange(year, month)[1]

    return [datetime.date(year, month, day) for day in range(1, nb_days+1)]

print get_datetime_range(2014, 2)  # usage example
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; from calendar import Calendar
&gt;&gt;&gt; Calendar().monthdayscalendar(2014,1)
[[0, 0, 1, 2, 3, 4, 5], [6, 7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18, 19], [20, 21, 22, 23, 24, 25, 26], [27, 28, 29, 30, 31, 0, 0]]

&gt;&gt;&gt; month = Calendar().itermonthdates(2014,1)
&gt;&gt;&gt; print [day for day in month if day.month == 1] # this function will pad to make up full weeks, so filter it by month
[datetime.date(2014, 1, 1), datetime.date(2014, 1, 2), datetime.date(2014, 1, 3), datetime.date(2014, 1, 4), datetime.date(2014, 1, 5), datetime.date(2014, 1, 6), datetime.date(2014, 1, 7), datetime.date(2014, 1, 8), datetime.date(2014, 1, 9), datetime.date(2014, 1, 10), datetime.date(2014, 1, 11), datetime.date(2014, 1, 12), datetime.date(2014, 1, 13), datetime.date(2014, 1, 14), datetime.date(2014, 1, 15), datetime.date(2014, 1, 16), datetime.date(2014, 1, 17), datetime.date(2014, 1, 18), datetime.date(2014, 1, 19), datetime.date(2014, 1, 20), datetime.date(2014, 1, 21), datetime.date(2014, 1, 22), datetime.date(2014, 1, 23), datetime.date(2014, 1, 24), datetime.date(2014, 1, 25), datetime.date(2014, 1, 26), datetime.date(2014, 1, 27), datetime.date(2014, 1, 28), datetime.date(2014, 1, 29), datetime.date(2014, 1, 30), datetime.date(2014, 1, 31)]
</code></pre>
<p><a href="http://docs.python.org/3/library/calendar.html" rel="nofollow">http://docs.python.org/3/library/calendar.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it in one line if you use <code>pandas</code></p>
<pre><code>&gt;&gt;&gt; import pandas
&gt;&gt;&gt; import datetime
&gt;&gt;&gt; (datetime.datetime.now() - (datetime.datetime.now() - pandas.DateOffset(months=1))).days
30
</code></pre>
</div>
<span class="comment-copy">Do you want to know how many days there are in a month? Do you want a <code>datetime</code> object for each day of a month? Please clarify what exactly you're looking for in more detail, and also show us what you've tried so far.</span>
<span class="comment-copy">Check the <a href="http://docs.python.org/3/library/calendar.html" rel="nofollow noreferrer">calendar module</a></span>
<span class="comment-copy">@senshin: Sorry for my mistake, I have updated my question.</span>
