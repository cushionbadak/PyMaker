<div class="post-text" itemprop="text">
<p>I have a json file in which must be added some values which I am getting from another json file. the problem is that I could add anything at the end of the json, but not in the exact place.
My actual json file is:</p>
<pre><code>{
  "id" : "some-id",
  "name" : "some-name",
  "email" : "some@email.com",
  "config" : {
    "pipelineConfigs" : [ {
      "application" : "service1",
      "pipelineConfigId" : "d2eb526c-839b-41b3-b59c-f86db6eebb4e"
    }, {
      "application" : "service2",
      "pipelineConfigId" : "f79394b6-e37f-42e2-a9b3-fdbcf85ad1d7"
    } ],
    "applications" : [ "service1", "service2" ],
    "clusters" : [ {
      "account" : "some-account",
      "stack" : "*",
      "detail" : "*",
      "applications" : null
    } ]
  },
  "updateTs" : 1510750871252,
  "createTs" : 1510743534340,
  "lastModifiedBy" : "admin"
}
</code></pre>
<p>I am getting <code>service3</code> and <code>another-id</code> from another json file Need to add them into destination json file in this way:</p>
<pre><code>       {
      "application" : "service3",
      "pipelineConfigId" : "another-id"
    },
</code></pre>
<p>after this part:</p>
<pre><code>"config" : {
    "pipelineConfigs" : [
</code></pre>
<p>and add the <code>"service3"</code> to <code>"applications" : [ "service1", "service2" ],</code></p>
<p>The desired final result:</p>
<pre><code>{
  "id" : "some-id",
  "name" : "some-name",
  "email" : "some@email.com",
  "config" : {
    "pipelineConfigs" : [ {
      "application" : "service1",
      "pipelineConfigId" : "d2eb526c-839b-41b3-b59c-f86db6eebb4e"
    }, {
      "application" : "service2",
      "pipelineConfigId" : "f79394b6-e37f-42e2-a9b3-fdbcf85ad1d7"
    }, {
      "application" : "service3",
      "pipelineConfigId" : "another-id"
    } ],
    "applications" : [ "service1", "service2", "service3" ],
    "clusters" : [ {
      "account" : "some-account",
      "stack" : "*",
      "detail" : "*",
      "applications" : null
    } ]
  },
  "updateTs" : 1510750871252,
  "createTs" : 1510743534340,
  "lastModifiedBy" : "admin"
}
</code></pre>
<p>Which direction I should dig?</p>
</div>
<div class="post-text" itemprop="text">
<p><em>a.py</em>:</p>
<pre><code>import json
from pprint import pprint as pp

def add_app(obj_dict, app_name, pipeline_config_id):
    new_cfg = {
        "application": app_name,
        "pipelineConfigId": pipeline_config_id,
    }
    obj_dict["config"]["pipelineConfigs"].append(new_cfg)
    obj_dict["config"]["applications"].append(app_name)


def main():
    with open("initial.json") as fin:
        obj = json.load(fin)
    print("INITIAL:\n")
    pp(obj)
    add_app(obj, "service3", "another_id")
    print("\nFINAL:\n")
    pp(obj)
    # EDIT: writing the modified json to file
    with open("final.json", "w") as fout:
        json.dump(obj, fout, indent="  ")


if __name__ == "__main__":
    main()
</code></pre>
<p><strong>Notes</strong>:</p>
<ul>
<li>I saved your initial json in a file called <em>initial.json</em> which I'm loading using the <a href="https://docs.python.org/3/library/json.html#module-json" rel="nofollow noreferrer">[Python]: json â€” JSON encoder and decoder</a> module</li>
<li>2 things needed to do (after loading the file):

<ul>
<li>Add the application name to the existing applications list</li>
<li>Ad the application config to the existing  pipeline configs list</li>
</ul></li>
<li>I'm <strong>not</strong> doing any error checking</li>
</ul>
<p><strong>Output</strong>:</p>
<blockquote>
<pre><code>c:\Work\Dev\StackOverflow\q47345368&gt;"c:\Work\Dev\VEnvs\py35x64_test\Scripts\python.exe" a.py
INITIAL:

{'config': {'applications': ['service1', 'service2'],
            'clusters': [{'account': 'some-account',
                          'applications': None,
                          'detail': '*',
                          'stack': '*'}],
            'pipelineConfigs': [{'application': 'service1',
                                 'pipelineConfigId': 'd2eb526c-839b-41b3-b59c-f86db6eebb4e'},
                                {'application': 'service2',
                                 'pipelineConfigId': 'f79394b6-e37f-42e2-a9b3-fdbcf85ad1d7'}]},
 'createTs': 1510743534340,
 'email': 'some@email.com',
 'id': 'some-id',
 'lastModifiedBy': 'admin',
 'name': 'some-name',
 'updateTs': 1510750871252}

FINAL:

{'config': {'applications': ['service1', 'service2', 'service3'],
            'clusters': [{'account': 'some-account',
                          'applications': None,
                          'detail': '*',
                          'stack': '*'}],
            'pipelineConfigs': [{'application': 'service1',
                                 'pipelineConfigId': 'd2eb526c-839b-41b3-b59c-f86db6eebb4e'},
                                {'application': 'service2',
                                 'pipelineConfigId': 'f79394b6-e37f-42e2-a9b3-fdbcf85ad1d7'},
                                {'application': 'service3',
                                 'pipelineConfigId': 'another_id'}]},
 'createTs': 1510743534340,
 'email': 'some@email.com',
 'id': 'some-id',
 'lastModifiedBy': 'admin',
 'name': 'some-name',
 'updateTs': 1510750871252}
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Once you've loaded the JSON files, the structures are just nested Python dictionaries and lists:</p>
<pre><code>import json

data = '''\
{
  "id" : "some-id",
  "name" : "some-name",
  "email" : "some@email.com",
  "config" : {
    "pipelineConfigs" : [ {
      "application" : "service1",
      "pipelineConfigId" : "d2eb526c-839b-41b3-b59c-f86db6eebb4e"
    }, {
      "application" : "service2",
      "pipelineConfigId" : "f79394b6-e37f-42e2-a9b3-fdbcf85ad1d7"
    } ],
    "applications" : [ "service1", "service2" ],
    "clusters" : [ {
      "account" : "some-account",
      "stack" : "*",
      "detail" : "*",
      "applications" : null
    } ]
  },
  "updateTs" : 1510750871252,
  "createTs" : 1510743534340,
  "lastModifiedBy" : "admin"
}'''

D = json.loads(data)
other = {'application':'service3',
         'pipelineconfigId':'another-id'}

# Make the two modifications...
D['config']['pipelineConfigs'].append(other)
D['config']['applications'].append(other['application'])

data = json.dumps(D,indent=2)
print(data)
</code></pre>
<p>Output:</p>
<pre><code>{
  "id": "some-id",
  "name": "some-name",
  "email": "some@email.com",
  "config": {
    "pipelineConfigs": [
      {
        "application": "service1",
        "pipelineConfigId": "d2eb526c-839b-41b3-b59c-f86db6eebb4e"
      },
      {
        "application": "service2",
        "pipelineConfigId": "f79394b6-e37f-42e2-a9b3-fdbcf85ad1d7"
      },
      {
        "application": "service3",
        "pipelineconfigId": "another-id"
      }
    ],
    "applications": [
      "service1",
      "service2",
      "service3"
    ],
    "clusters": [
      {
        "account": "some-account",
        "stack": "*",
        "detail": "*",
        "applications": null
      }
    ]
  },
  "updateTs": 1510750871252,
  "createTs": 1510743534340,
  "lastModifiedBy": "admin"
}
</code></pre>
</div>
<span class="comment-copy">this worked for me. I also need to write FINAL back to INITIAL file. So as I run the script and after that I open the json file, I'll see the final. Should I use json.dumps for that?</span>
<span class="comment-copy">Just added the code. Using <code>json.dumps</code> is possible (that writes to a string), but using <code>json.dump</code> it's easier. I'm writing to another file (to avoid overwriting the original content). Change the output file name to the to match the one of the input file.</span>
<span class="comment-copy">This wrote to a file, but with 1 line. how to write as it was before?</span>
<span class="comment-copy">Added some indenting. Note that it won't match the input <i>json</i> from the question <b>exactly</b> ("records" like: <code>[ {</code>, <code>}, {</code>, <code>} ]</code>).</span>
<span class="comment-copy">I know about matching, it;s ok. but adding the indent throws me an error "TypeError: 'indent' is an invalid keyword argument for this function"</span>
<span class="comment-copy">Thanks @Mark. it works. But I also need to write it to the initial file. what should I use for that?</span>
<span class="comment-copy">@cristifati already answered.</span>
