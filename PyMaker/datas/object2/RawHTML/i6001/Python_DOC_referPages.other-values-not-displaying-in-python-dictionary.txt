<div class="post-text" itemprop="text">
<p>I am writing a program to create a dictionary in python were the key will be the lenghth of words and the value will be the words itself. So therefore, if i have say a word like "in" and "to", i expect the dictionary to print dict_value = {2:["in","to"]}. To further clarify my problem here is my code:</p>
<pre><code>string_value = "I ate a bowl of cereal out of a dog bowl today."
remove_p = string_value.replace(".","")
remove_c = remove_p.replace(",","")
remove_q = remove_c.replace("?","")
remove_e = remove_q.replace("!","")
remove_a = remove_e.replace('\'',"")
lowervalue = remove_a.lower()
split_v = lowervalue.split()
length = {}
for i in split_v:  
   length[len(i)] = []
   length[len(i)].append(i)         
print length
</code></pre>
<p>This is what my code is printing:</p>
<pre><code>{1: ['a'], 2: ['of'], 3: ['dog'], 4: ['bowl'], 5: ['today'], 6: ['cereal']}
</code></pre>
<p>This is what i want it to print:</p>
<pre><code>{1: ['i', 'a', 'a'], 2: ['of', 'of'], 3: ['ate', 'out', 'dog'], 4: ['bowl', 'bowl'], 5: ['today'], 6: ['cereal']}
</code></pre>
<p>So, if a word has the same length it should be printed under the same keys.
Thanks for your help in advance. This question is about displaying words with the same length under one key and does not involve refactoring. I have reviewed similar questions but no perfect fit for mine. They are either too advanced or too basic</p>
</div>
<div class="post-text" itemprop="text">
<p>You can replace your <code>length[len(i)] = []</code> with an if statement to prevent it from being executed on every execution of the loop:</p>
<pre><code>   if len(i) not in length.keys():
       length[len(i)] = []
</code></pre>
<p>Not very efficient, but a simple answer.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is a pattern for this type of problem:</p>
<p>Let's solve your issue in two steps:</p>
<blockquote>
<p>first split() the string:</p>
</blockquote>
<pre><code>for item in string_value.split():
</code></pre>
<blockquote>
<p>Second step just follow this pattern:</p>
</blockquote>
<pre><code>for item in string_value.split():
    if len(item) not in final_dict:
        final_dict[len(item)]=[item]
    else:
        final_dict[len(item)].append(item)
</code></pre>
<blockquote>
<p>Final code:</p>
</blockquote>
<pre><code>string_value = "I ate a bowl of cereal out of a dog bowl today."
final_dict={}
for item in string_value.split():
    if len(item) not in final_dict:
        final_dict[len(item)]=[item]
    else:
        final_dict[len(item)].append(item)

print(final_dict)
</code></pre>
<p>output:</p>
<pre><code>{1: ['I', 'a', 'a'], 2: ['of', 'of'], 3: ['ate', 'out', 'dog'], 4: ['bowl', 'bowl'], 6: ['cereal', 'today.']}
</code></pre>
<blockquote>
<p>if we have :</p>
</blockquote>
<pre><code>string_value = "I ate a bowl of cereal out of a dog bowl today."
from collections import defaultdict

new_dict=defaultdict(list)
</code></pre>
<blockquote>
<p>then one line apporach:</p>
</blockquote>
<pre><code>[new_dict[len(item)].append(item) for item in string_value.split()]
print(new_dict)
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/9358983/python-dictionary-and-default-values">python dictionary and default values</a></span>
<span class="comment-copy">By doing <code>length[len(i)] = []</code> you're overriding existing results. Lookup: <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a></span>
<span class="comment-copy">There is no need to call <code>keys()</code> here, just use <code>not in length</code>.</span>
