<div class="post-text" itemprop="text">
<p>I'm new here so forgive me if there's anything unusual
I know it's simple to remove some whitespaces
but actually I'm not using strings, it's float elements list
so I'm using append to put the numbers in the list but they are passed in like this:</p>
<pre><code>[1.2, 3.5, 41.2, 2.9]
</code></pre>
<p>I want them to be like this:</p>
<pre><code>[1.2,3.5,41.2,2.9]
</code></pre>
<p>any kind of help will appreciated </p>
</div>
<div class="post-text" itemprop="text">
<p>There is no actual whitespace in the list. It is just how it's <code>__str__</code> function is coded (the way it prints out). If you want to print it out without any spaces the best way to do it is convert it to a string first:</p>
<pre><code>&gt;&gt;&gt; test = [2, 32, 123, 1]
&gt;&gt;&gt; test
[2, 32, 123, 1]
&gt;&gt;&gt; print(str(test).replace(" ",""))
[2,32,123,1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Both those list representations are equal, regardless of the whitespace added after the commas. The extra whitespace just makes it clearer to read.</p>
<p>To really test if they are equal, you can use <code>==</code> comparison:</p>
<pre><code>&gt;&gt;&gt; l1 = [1.2, 3.5, 41.2, 2.9]
&gt;&gt;&gt; l2 = [1.2,3.5,41.2,2.9]
&gt;&gt;&gt; l1 == l2
True
</code></pre>
<p>If you want a string representation without whitespace, you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code></a>:</p>
<pre><code>&gt;&gt;&gt; l1 = [1.2, 3.5, 41.2, 2.9]
&gt;&gt;&gt; '[%s]' % ','.join(map(str, l1))
'[1.2,3.5,41.2,2.9]'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That is the default behavior of Python's <code>__str__</code> but hey its Python and you can override the default behavior. I will not recommend to change the default code of <code>__str__</code> but instead write your own <code>list</code> like class of yours to meet the requirement of yours</p>
<pre><code>class my_list(list):
    x=[]
    def __init__(self, argument):
        self.x=list(argument)

    def __str__(self):
        return '['+','.join(map(str,self.x))+']'
</code></pre>
<p>For testing</p>
<pre><code>print(my_list([1.2, 3.5, 41.2, 2.9]))   #[1.2,3.5,41.2,2.9,5,6]
</code></pre>
</div>
<span class="comment-copy">Both are the same thing though?</span>
<span class="comment-copy">There is no actual whitespace. It is just a representation.</span>
<span class="comment-copy">no actually the first one got spaces after the comma</span>
<span class="comment-copy">If its a list of integers/floats there is no spacing in the list, it shows it like that to make it nicer to view. If you iterate the list you will only get numbers.</span>
<span class="comment-copy">As @mad_ said, that is only a representation of the list, the numbers are not saved with white spaces. It is only printed this way for visibility.</span>
<span class="comment-copy">that did the trick , thank you very much</span>
