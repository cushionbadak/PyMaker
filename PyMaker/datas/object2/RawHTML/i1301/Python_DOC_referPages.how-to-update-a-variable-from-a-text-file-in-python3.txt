<div class="post-text" itemprop="text">
<p>So, let's say that I got a shell script that generates a v.py on the output that contains  </p>
<pre><code>v = some-float
</code></pre>
<p>And I'm accessing it in the main.py script via <code>from v import v</code>
But later the main Script toggles generation process again and the variable in v.py gets updated, but the variable <code>v</code> is not updating for the main script.</p>
<p>To make main script work I need to update the variable from v.py while script is running</p>
<p>I've tried <code>importlib.reload(v)</code> - didn't work</p>
<p>I'm still new to python and don't understand it completely</p>
</div>
<div class="post-text" itemprop="text">
<p>Presuming you are using python 3.*, v needs to be a module, so the way you import it changes to example below.</p>
<pre><code>import v
import importlib

print(v.v)

with open('v.py', 'w') as f:
    f.write('v = 20.0')

importlib.reload(v)
print(v.v)
</code></pre>
<p>Also note the document of <a href="https://docs.python.org/3/library/importlib.html" rel="nofollow noreferrer">importlib</a> </p>
<p>"When a module is reloaded, its dictionary (containing the moduleâ€™s global variables) is retained. Redefinitions of names will override the old definitions, so this is generally not a problem."</p>
<p>Though our minimal example works, this is something to bear in mind for more complicated cases.</p>
</div>
<span class="comment-copy">You might want to lookup on how to read from and write to text file in Python</span>
<span class="comment-copy">You could rely on <code>v.v</code> instead of <code>v</code>. In this case, <code>importlib.reload</code> allows for the value of <code>v.v</code> to change.</span>
