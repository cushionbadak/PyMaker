<div class="post-text" itemprop="text">
<p>I am trying to count the duplicate characters of strings in a list; additionally I increment a variable depending on whether it is a duplicate 2 or 3 times.</p>
<p>However, out of my 250 string test list, it is returning a total count of 641, so I'm sure something's wrong.</p>
<p>Here is my code:</p>
<pre><code>def findDupesNum(listy):
    a = []      # the current string's character list
    b = 0       # the 2-dupe counter
    c = 0       # the 3-dupe counter
    for i in listy:
        a.clear()
        for x in i:
            if x in a and a.count(x) == 1 and x != '':
                b += 1
            elif x in a and a.count(x) == 2 and x != '':
                c += 1
                b -= 1
            a.append(x)
        print('b = ' + str(b) + ' and c = ' + str(c))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It would be a bit easier to count occurrences using a dict:</p>
<pre><code>def findDupesNum(listy):
    for i in listy:
        counts = {}
        for x in i:
        if x:
            counts[x] = counts.get(x, 0) + 1
        doubles = 0
        triples = 0
        for i in counts:
            if counts[i] == 2:
                doubles = doubles + 1
            elif counts[i] == 3:
                triples = triples + 1

        print('{} doubles and {} triples'.format(doubles, triples))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This looks like a good use case for <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> (a subclass of <code>dict</code>).</p>
<pre><code>from collections import Counter

def find_duplicates(string_list):
    total_counter = Counter()

    for s in string_list:
        s_counter = Counter(s)
        total_counter.update(s_counter)    # also update total counter

        print()
        print('this string:', s)
        print(
            'number of chars that appear 2 times in this string:',
            len([c for c, n in s_counter.items() if n == 2]))
        print(
            'number of chars that appear 3 times in this string:',
            len([c for c, n in s_counter.items() if n == 3]))

    # print()
    # print(
    #     'number of chars that appear 2 times in ALL strings:',
    #     len([c for c, n in total_counter.items() if n == 2]))
    # print(
    #     'number of chars that appear 3 times in ALL strings:',
    #     len([c for c, n in total_counter.items() if n == 3]))
</code></pre>
<p>The output could look like this:</p>
<pre><code>&gt;&gt;&gt; s_list = ['alfa', 'beta', 'gamma', 'aaabbcc']
&gt;&gt;&gt; find_duplicates(s_list)

this string: alfa
number of chars that appear 2 times in this string: 1
number of chars that appear 3 times in this string: 0

this string: beta
number of chars that appear 2 times in this string: 0
number of chars that appear 3 times in this string: 0

this string: gamma
number of chars that appear 2 times in this string: 2
number of chars that appear 3 times in this string: 0

this string: aaabbcc
number of chars that appear 2 times in this string: 2
number of chars that appear 3 times in this string: 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should be working:</p>
<pre><code>l = ["bob",'bob', "thomas", "rémi", "marc", 'rémi']

dictElt = {}

for string in l:
    if string in dictElt.keys(): #if the key of the dictionnary exists
        dictElt[string] += 1
    else:
        dictElt[string] = 1

print(dictElt)
# to get your results 
for string, nbr in dictElt.items():
    if nbr == 1:
         print(string, "number of occurences =", nbr)
    elif nbr ==2:
         print(string, "number of occurences =",nbr)
    elif nbr == 3:
         print(string, "number of occurences =",nbr)
</code></pre>
</div>
<span class="comment-copy">The duplicate count is higher than the number of strings because you're looping over each string <b>and</b> each character in the string.</span>
<span class="comment-copy">I don't think this is what OP is looking for; he counts duplicates of characters of strings in a list, but your suggestion only counts strings in a list.</span>
<span class="comment-copy">@Ralf - you're right - thanks! I updated my answer</span>
<span class="comment-copy">I don't think this is what OP is looking for; he counts duplicates of characters of strings in a list, but your suggestion only counts strings in a list.</span>
