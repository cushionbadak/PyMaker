<div class="post-text" itemprop="text">
<p>i made a simple program of adding two nos.in python 
my code is:</p>
<pre><code>#python 3
def sum(x,y):
    return x+y

a= int(input("Enter first number:"))
b= int(input("Enter second number:"))

print("Sum of the given two numbers is: ", sum(a,b))
</code></pre>
<p>output error is as follows:</p>
<p>Failed case #1/8: Cannot check answer. Perhaps output format is wrong.</p>
<pre><code>Input:
0 0 

ValueError : invalid literal for int() with base 10: '0 0'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code works well as expected, but you have to input like:</p>
<pre><code>Enter first number:1
Enter second number:2
Sum of the given two numbers is:  3
</code></pre>
<p>And also you're creating a <code>sum</code> method which already exists builtin, so you can do:</p>
<pre><code>a= int(input("Enter first number:"))
b= int(input("Enter second number:"))
print("Sum of the given two numbers is: ", sum(a,b))
</code></pre>
<p>Without the <code>sum</code> method you created will also work, also even better using <code>+</code> for the two values:</p>
<pre><code>a= int(input("Enter first number:"))
b= int(input("Enter second number:"))
print("Sum of the given two numbers is: ", a+b)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In code you have taken input at separate lines , whereas while in code you are taking them in single line with comma seperated. 
So try giving input in seperate lines like </p>
<pre><code> 0
 0
</code></pre>
<p>Or change the input scehma like <br/>
<code>a, b = map(int, input().strip().split())</code></p>
<p>This will solve your problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are not providing an <code>int</code> value of <code>base 10</code>.
Refer the python docs: <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#input</a>.</p>
<pre><code>    class int([x])
    class int(x, base=10)

        Return an integer object constructed from a number or string x, 
or return 0 if no arguments are given. If x defines __int__(), int(x)
returns x.__int__(). If x defines __trunc__(), it returns x.__trunc__(). 
For floating point numbers, this truncates towards zero.

If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in radix base.

    Optionally, the literal can be preceded by + or - (with no space in between) 
and surrounded by whitespace. A base-n literal consists of the digits 0
 to n-1, with a to z (or A to Z) having values 10 to 35. The default base 
is 10. The allowed values are 0 and 2â€“36. Base-2, -8, and -16 literals 
can be optionally prefixed with 0b/0B, 0o/0O, or 0x/0X, as with 
integer literals in code. Base 0 means to interpret exactly as a code literal, 
so that the actual base is 2, 8, 10, or 16, and so that int('010', 0) 
is not legal, while int('010') is, as well as int('010', 8).
</code></pre>
<p>Below is the run of you program in <code>ipython</code>. Problem is with how your program expects the input and how you are actually providing it. 
You ask the program to </p>
<p>a) print "Enter first number" on the stdout and assign the value to <code>a</code>, while you tell the program that it has to be an 'int'</p>
<p>then,</p>
<p>b) print "Enter second number" on the stdout and  assign the value to <code>b</code>
then,
sum the two values assigned to 'a' and 'b' and print that sum</p>
<p>Now,</p>
<p>Look at the first run. You are doing exactly how you wrote your program, providing the first value (hitting enter, marking move to next step  if the input is right)
then you provide the second value, bit enter, and you get your result</p>
<p>You are providing int values so program works like a charm</p>
<pre><code>In [12]: def sum(x,y):
    ...:     return x+y
    ...: a= int(input("Enter first number:"))
    ...: b= int(input("Enter second number:"))
    ...:
    ...: print("Sum of the given two numbers is: ", sum(a,b))
    ...:
    ...:
Enter first number:0
Enter second number:0
Sum of the given two numbers is:  0
</code></pre>
<p>Probelm is here, you entered first value to be <code>0 0</code>  that's not an <code>int</code> value. <code>0</code> is <code>0 0</code> isn't
and hence the error exactly says, invalid literal for <code>int</code> suggesting its not an int. the <code>base 10</code> part in error tells it is expecting a decimal (normal counting number)</p>
<pre><code>In [13]: def sum(x,y):
    ...:     return x+y
    ...: a= int(input("Enter first number:"))
    ...: b= int(input("Enter second number:"))
    ...:
    ...: print("Sum of the given two numbers is: ", sum(a,b))
    ...:
    ...:
Enter first number:0 0
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-13-4dd94dc4de5b&gt; in &lt;module&gt;()
      1 def sum(x,y):
      2     return x+y
----&gt; 3 a= int(input("Enter first number:"))
      4 b= int(input("Enter second number:"))
      5

ValueError: invalid literal for int() with base 10: '0 0'
</code></pre>
<p>You will get the same error if you entered let's say <code>a</code> which is again not an <code>int</code></p>
<pre><code>In [14]: def sum(x,y):
    ...:     return x+y
    ...: a= int(input("Enter first number:"))
    ...: b= int(input("Enter second number:"))
    ...:
    ...: print("Sum of the given two numbers is: ", sum(a,b))
    ...:
    ...:
Enter first number:a
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
&lt;ipython-input-14-4dd94dc4de5b&gt; in &lt;module&gt;()
      1 def sum(x,y):
      2     return x+y
----&gt; 3 a= int(input("Enter first number:"))
      4 b= int(input("Enter second number:"))
      5

ValueError: invalid literal for int() with base 10: 'a'
</code></pre>
</div>
<span class="comment-copy">Try <code>int('0 0')</code> in your python interpreter :).</span>
