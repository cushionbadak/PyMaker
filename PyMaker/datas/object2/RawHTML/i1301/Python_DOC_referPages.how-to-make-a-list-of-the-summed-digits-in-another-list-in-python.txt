<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1155617/count-the-number-occurrences-of-a-character-in-a-string">Count the number occurrences of a character in a string</a>
<span class="question-originals-answer-count">
                    18 answers
                </span>
</li>
</ul>
</div>
<p>Is there a way to easily convert numbers in a list into single digits for example</p>
<pre><code>population = ['10001','11111','11010','110001']

into ['1','0','0','0','1'] 

add each digit in each set and put it in another list like 
this

evaluation = [2,5,3,3] (adding up all the 1's up on the first list)
</code></pre>
<p>I'm very new to Python so I'm not sure if I'm doing this correctly</p>
</div>
<div class="post-text" itemprop="text">
<p>One possible way is iterate over the <code>population</code> list and use <a href="https://docs.python.org/3/library/stdtypes.html#str.count" rel="nofollow noreferrer">str.count('character')</a> to count the <code>'1'</code>'s in each "number" string:</p>
<pre><code>evaluation = list(item.count('1') for item in population)
</code></pre>
<p><code>evaluation</code> will contain the desired counts:</p>
<pre><code>&gt;&gt;&gt; print(evaluation)
[2, 5, 3, 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are only dealing with zeros and ones, then @davedwards is a good solution.  Count the instances of <code>'1'</code> in each string.</p>
<pre><code>out = [x.count('1') for x in population]
</code></pre>
<p>If you need the solution to be more extensible to values other than 0 and 1, you can convert each digit to an int and sum the integers.</p>
<pre><code>out = [sum(map(int, x)) for x in population]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter()</code></a>:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; population = ['10001','11111','11010','110001']
&gt;&gt;&gt; [Counter(x).get('1', 0) for x in population]
[2, 5, 3, 3]
</code></pre>
<p>A functional aproach would be to also use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a> and <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter()</code></a>:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; list(map(itemgetter('1'), map(Counter, population)))
[2, 5, 3, 3]
</code></pre>
</div>
<span class="comment-copy"><code>print(list(item.count('1') for item in population))</code></span>
