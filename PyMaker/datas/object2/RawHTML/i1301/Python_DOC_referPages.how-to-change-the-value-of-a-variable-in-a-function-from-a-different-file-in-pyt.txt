<div class="post-text" itemprop="text">
<p>I have two files, say file1 and file2. I want to be able to edit the value of a variable (epoch) from file1 in file2, but it is in the main() function in file1.</p>
<p><strong>File1.py</strong></p>
<pre><code>def main(): 
  global epoch
  epoch=1
  train(args, model, device, train_loader, optimizer, epoch)
</code></pre>
<p><strong>File2.py</strong></p>
<pre><code>global epoch

var = imageClassifier.main()
epochMenu = Menu(middleFrame)
subEpochMenu = Menu(epochMenu)
epochMenu.add_cascade(label="epoch", menu=subEpochMenu)
subEpochMenu.add_command(Label="1", command=imageClassifier.main(epoch == 
1))
subEpochMenu.add_command(Label="5", command=var.epoch == 5)
</code></pre>
<p>Please ignore my menu settings, I have been trying to get this bit working firt as it is more important.</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/faq/programming.html#how-do-i-share-global-variables-across-modules" rel="nofollow noreferrer">Python's FAQ</a>:</p>
<blockquote>
<h2>How do I share global variables across modules?</h2>
<p>The canonical way to share information across modules within a single
  program is to create a special module (often called config or cfg).
  Just import the config module in all modules of your application; the
  module then becomes available as a global name. Because there is only
  one instance of each module, any changes made to the module object get
  reflected everywhere. For example:</p>
<p>config.py:</p>
<pre><code>x = 0   # Default value of the 'x' configuration setting
</code></pre>
<p>mod.py:</p>
<pre><code>import config
config.x = 1
</code></pre>
<p>main.py:</p>
<pre><code>import config
import mod
print(config.x)
</code></pre>
</blockquote>
<p>In your case, this means you need to:</p>
<ol>
<li><p>Create a file <code>config.py</code>:</p>
<pre><code>epoch = 1
</code></pre></li>
<li><p>Modify <code>file1.py</code>:</p>
<pre><code>import config

def main(): 
    train(args, model, device, train_loader, optimizer, config.epoch)
</code></pre></li>
<li><p>Modify <code>file2.py</code>:</p>
<pre><code>import config
...
subEpochMenu.add_command(Label="1", command=imageClassifier.main(config.epoch == 
1))
</code></pre></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>One way, is by reading it from an outsource file. <code>File1.py</code> can access the file and write into it.</p>
<p>So, under <code>File1.py</code> you will have the following:</p>
<pre><code>import json

dct = {"epoch": 7}
with open('config.json', 'w') as cf:
    json.dump(dct, cf)
</code></pre>
<p>And <code>File2.py</code> can read from that <em>.json</em>.</p>
<p>So, under <code>File2.py</code> you will have the following:</p>
<pre><code>with open('config.json', 'r') as cf:
    config = json.load(cf)

epoch = config['epoch']
print(epoch)
# 7
</code></pre>
<p>I think this is the better way to do it as you decouple the modules and having a more maintainable and salable code.</p>
</div>
<span class="comment-copy">read it from an outsource file. for example, you can write the var value from File2.py into config.json and read config.json in File1.py</span>
<span class="comment-copy">Sorry @EranMoshe, I'm quite new to this and I don't understand - could you please provide some code?</span>
<span class="comment-copy">What about just passing the value as argument ?</span>
<span class="comment-copy">@brunodesthuilliers naa That'll be too easy... ;&gt;</span>
<span class="comment-copy">What do you mean "access a function within a function" ???</span>
<span class="comment-copy">Thanks for your help. How can I alter this to access the variable from inside a function within the file, rather than just a variable in a file?</span>
<span class="comment-copy">in this example, you can do "config.x =1" from within a function in mod.py</span>
<span class="comment-copy">@YakovDan But if x was in a function in the config.py file, how could you access it in the mod.py file?</span>
<span class="comment-copy">If <code>config.py</code> contains a <code>function()</code> which defines a global variable <code>x</code>, you need to <code>import config</code> and call <code>config.function()</code>. Then you can access <code>config.x</code>.</span>
<span class="comment-copy">user10739557: If <code>x</code> was a function, you would access the same way. If you want to <i>call</i> it, just append parentheses: e.g. <code>config.x()</code>.</span>
