<div class="post-text" itemprop="text">
<p>Hello I have a python string in such a way</p>
<pre><code>s = "Hello world\n\n"
</code></pre>
<p>I want to count the number of trailing new line characters in the string in this case it is <strong>2</strong>.
If I use <code>s.strip()</code> it just removes new lines and returns the string but not how many new line characters it has removed in the process.
How to get the count as well as remove the trailing new line characters.
Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow noreferrer"><code>str.rstrip</code></a>:</p>
<pre><code>&gt;&gt;&gt; s = "Hello world\n\n"
&gt;&gt;&gt; s.rstrip("\n")
'Hello world'
</code></pre>
<p>Then just check the difference:</p>
<pre><code>&gt;&gt;&gt; s = "Hello world\n\n"
&gt;&gt;&gt; len(s) - len(s.rstrip("\n"))
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>s = "Hello world\n\n" 
s.count('\n')
</code></pre>
<p>Returns 2</p>
<p>Then </p>
<pre><code>s.strip('\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can count the number of newline characters before removing them. </p>
<pre><code>count = s.count("\n");
</code></pre>
<p>which should return the number of new lines.</p>
</div>
<div class="post-text" itemprop="text">
<p>Quick, but perhaps "dirty", is to do it in two steps:</p>
<pre><code>s = "Hello world\n\n"
s.count("\n")
</code></pre>
<p>Count: 2</p>
<p>Followed by</p>
<pre><code>s.strip("\n")
</code></pre>
</div>
<span class="comment-copy">Upvote. The only correct solution here for <i>trailing</i> new line</span>
<span class="comment-copy">All answers seem to work but just that rather than using count to find "\n" using difference between lengths seems to be faster. Don't know if there is any specific reason. Since I work with latency I consider this for me thanks.</span>
<span class="comment-copy">@RaghavendraSugeeth, count iterates over the string while the lenght of it is cached (since they are inmutable). That is why it is faster</span>
<span class="comment-copy"><code>s.strip('\n')</code> also removes  newlines only... and OP wants to have a way of something with only one method...</span>
<span class="comment-copy">@U9-Forward absolutely thanks :)</span>
<span class="comment-copy">OP wants a method that counts newlines and removes newlines altogether.</span>
<span class="comment-copy">ah, OP wasnt too specific about that, or i miss understood.</span>
<span class="comment-copy">The OP wants to have a way of something with only one method...</span>
<span class="comment-copy">I think that splitting in two steps is not dirty at all. @U9-Forward as strings are immutable, there is no such method. Methods that apply a transformation on a string returns the new string.</span>
<span class="comment-copy">@ U9-Foward I do not really agree that OP explicitly asks to do it in one method.</span>
