<div class="post-text" itemprop="text">
<p>The title is very confusing, so let me explain. I have a pandas column: </p>
<pre><code>x   | desired x
1.5 | 1
1   | 1
1   | 1         
1   | 1
1   | 1
0   | 0
0   | 0
0   | 0
0   | 0
1   | 0
0   | 0
-1.5|-1
-1  |-1
-1  |-1
-1  |-1
0   | 0  
0   | 0
0   | 0
0   | 0
-1  | 0
0   | 0
0   | 0
1.5 | 1
</code></pre>
<p>...</p>
<p>Currently, I have solved this using itertuples:</p>
<pre><code> currval = np.nan
for idx in df.itertuples():
    if idx[33] == 1.5: 
        currval = 1
    elif idx[33] == -1.5:
        currval = -1
    elif idx[32] &lt;&gt; "":
        currval = np.nan
    else: 
        next
    df.loc[idx.Index,'refPos2'] = currval
</code></pre>
<p>however, this code is wayyyyyy too slow, and was wondering if anyone had ideas on how to vectorize this. </p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem statement I understood from the comments, here is the solution:</p>
<pre><code>for index, item in enumerate(a): ## a is your list [-1.5,1,1,0,1,1.5]
    if item == 1.5:
       a[index] = 1
    elif item == -1.5:
       a[index] = -1
    elif a[index] == 0:
        a[index] = 0
    elif a[index] == 1 and a[index-1] ==0:
        a[index] = 0
    else:
        a[index] =1
</code></pre>
</div>
<span class="comment-copy">they are just columns in the data frame that I am working with. Idx is the row iteration. If it helps, 32 is an indicator column named exit and 33 is an indicator column named 'refPos'</span>
<span class="comment-copy">no, it is simply just to pass to the next iteration</span>
<span class="comment-copy">It will work but that wont do what you are expecting. I think you need to use pass instead of next. <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer">next</a> is a built-in function</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/16749121/what-does-mean-in-python" title="what does mean in python">stackoverflow.com/questions/16749121/what-does-mean-in-python</a>, &lt;&gt; is not equal to</span>
<span class="comment-copy">I have deleted previous comments, these are getting too big. <code>&lt;&gt;</code> is deprecated for a long time, <code>next</code> doesn't do what you want and your question is unclear. It seems easily vectorizble, but you really really should put some more effort explaining what you're doing.</span>
<span class="comment-copy">close, not entirely correct but that is my fault for explaining it poorly; in addition, I need to have a vectorized solution or a solution aster than a for loop.</span>
<span class="comment-copy">the third elif would be: "elif (a[index] == 1 or a[index] == -1) and a[index-1] == 0:", and the last else would be either -1 or 1 depending on if the previous value was -1 or 1 respectively</span>
<span class="comment-copy">Yes!! I missed the <code>-1</code> part!! What I would suggest is "Ask a new question suggesting that this can be done by loop thro' my solution and now what to vectorize it.</span>
<span class="comment-copy">Thanks! I upvoted, but am too new for my vote to display in the public!</span>
<span class="comment-copy">No problem, if you get an other answers then good, otherwise implement my advice, even if you can't explain well enough what you need. folks would understand from code I wrote...and then you can accept my answer for this solution!!</span>
