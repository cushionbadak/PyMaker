<div class="post-text" itemprop="text">
<pre><code>import subprocess
from subprocess import Popen
p = Popen(['nmap', '-sn', '***.***.*.*'])
out, err = p.communicate()
print(out)
</code></pre>
<p>THE O/p as BELOW:----&gt; IS MUST BE STORE INTO TEXT FILE</p>
<pre><code>Starting Nmap 7.70 ( https://nmap.org ) at 2018-12-11 04:26 *****n Standard Time
Nmap scan report for ***.***.*.*
Host is up (0.00s latency).
MAC Address: **:**:**:**:**:BF (***** *****(******)Co.)
Nmap done: 1 IP address (1 host up) scanned in 3.82 seconds
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code is sending the output you want to the screen. To send it to a file instead, change this:</p>
<pre><code>print(out)
</code></pre>
<p>to </p>
<pre><code>with open("my_output.txt", "w") as outfile:
    print(out, file=outfile)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>According to the <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>Note that if you want to send data to the processâ€™s stdin, you need to
  create the Popen object with stdin=PIPE. Similarly, to get anything
  other than None in the result tuple, you need to give stdout=PIPE
  and/or stderr=PIPE too.</p>
</blockquote>
<p>So in your case you should write:</p>
<pre><code>from subprocess import Popen, PIPE
p = Popen(['nmap', '-sn', '***.***.*.*'], stdout = PIPE, stderr = PIPE)
out, err = p.communicate()
</code></pre>
<p>This should work.</p>
</div>
<div class="post-text" itemprop="text">
<p>Please check</p>
<pre><code>import subprocess
out = subprocess.check_output(['nmap', '-sn', '***.***.*.*'])
with open("./my.txt", "wb") as f:
    f.write(out)
</code></pre>
</div>
<span class="comment-copy">'None' is storing</span>
<span class="comment-copy">Whatever you see in the file is what is in the variable <code>out</code>. Add back your original <code>print</code> call (so that the output goes to screen <i>and</i> file) and use that to resolve the problem.</span>
<span class="comment-copy">f.write(out) TypeError: a bytes-like object is required, not 'NoneType'</span>
