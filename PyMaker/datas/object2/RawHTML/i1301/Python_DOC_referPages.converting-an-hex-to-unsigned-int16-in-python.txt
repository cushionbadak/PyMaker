<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/209513/convert-hex-string-to-int-in-python">Convert hex string to int in Python</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>I've been struggling for a while doing that and can not find the right way to do it.
I have a HEX </p>
<pre><code>8a:01
</code></pre>
<p>which is the unsigned INT16 </p>
<pre><code>394
</code></pre>
<p>How can I do that in python 3.X ?</p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>You can convert using the  <a href="https://docs.python.org/3/library/binascii.html" rel="nofollow noreferrer">binascii</a> and <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">struct</a> modules from the standard library:</p>
<pre><code>&gt;&gt;&gt; import binascii
&gt;&gt;&gt; import struct
&gt;&gt;&gt; import sys

# Check our system's byte order
&gt;&gt;&gt; sys.byteorder
'little'
&gt;&gt;&gt; hx = '8a01'
# convert hex to bytes
&gt;&gt;&gt; bs = binascii.unhexlify(hx)
&gt;&gt;&gt; bs
b'\x8a\x01'
# struct module expects ints to be four bytes long, so pad to make up the length
&gt;&gt;&gt; padded = bs + b'\x00\x00'
# Ask struct to unpack a little-endian unsigned int.
&gt;&gt;&gt; i = struct.unpack('&lt;I', padded)
&gt;&gt;&gt; i
(394,)
</code></pre>
<h2>Update</h2>
<p>This question has been closed as a duplicate.  The duplicate solution doesn't produce the required result:</p>
<pre><code>&gt;&gt;&gt; int('8a01', 16)
35329
</code></pre>
<p>However it works as expected if the order of bytes is reversed:</p>
<pre><code>&gt;&gt;&gt; int('018a', 16)
394
</code></pre>
<p>This is because the <code>int</code> builtin function assumes that the hexstring is ordered in the same way we order base 10 numbers on paper, that is the leftmost values are the most significant.  The initial value <code>0x8a01</code> has the least significant values on the left, hence using <code>int</code> to convert from base 16 produces the wrong result.</p>
<p>However in Python3 we can still use <code>int</code> to produce a simpler solution, using <a href="https://docs.python.org/3/library/stdtypes.html#int.from_bytes" rel="nofollow noreferrer"><code>int.from_bytes</code></a>.</p>
<pre><code>&gt;&gt;&gt; hx = '8a01'
&gt;&gt;&gt; bs = binascii.unhexlify(hx)
&gt;&gt;&gt; bs
b'\x8a\x01'
&gt;&gt;&gt; int.from_bytes(bs, byteorder=sys.byteorder)
394
</code></pre>
</div>
<span class="comment-copy">this is for an unsigned int16, solution in this thread does not cover this case</span>
<span class="comment-copy">Perfect! I didn't realize we can pad it just like that !</span>
<span class="comment-copy">@deubNippon I found a slightly simpler solution for you - see the update the to the answer.</span>
