<div class="post-text" itemprop="text">
<p>I can't use this</p>
<pre><code>import foo
method_to_call = getattr(foo, 'bar')
result = method_to_call()
</code></pre>
<p>because module name is hardcoded and I can't use this</p>
<pre><code>module = __import__('foo')
func = getattr(module, 'bar')
func()
</code></pre>
<p>because module is nested.</p>
<p>I tried this</p>
<pre><code>customer = 'jci'
module = __import__('customer.{customer_name}.gt'.format(customer_name=customer_name)) # AttributeError: module 'customer' has no attribute 'get_gt'
#module = __import__('customer.{customer_name}'.format(customer_name=customer_name), fromlist=['gt']) # AttributeError: module 'customer.jci' has no attribute 'get_gt'
#module = __import__('customer.{customer_name}.gt'.format(customer_name=customer_name), fromlist=[]) # AttributeError: module 'customer' has no attribute 'get_gt'
func = getattr(module, 'get_gt')
gt = func()    
</code></pre>
<p>but failed with errors, specified in comment along with each variant.</p>
<p><code>get_gt()</code> is a function inside <code>gt.py</code> file inside <code>customer/jci</code> directory. Each directory has empty <code>__init__.py</code> inside.</p>
<p>The following hardcoded code works:</p>
<pre><code>import customer.jci.gt as g
gt = g.get_gt()
</code></pre>
<p>How to overcome?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you want is <a href="https://docs.python.org/3/library/importlib.html#importlib.import_module" rel="nofollow noreferrer"><code>importlib.import_module</code></a>.</p>
<hr/>
<p>Note that <code>__import__</code> <em>does</em> handle dotted names but it returns the <em>parent</em> package, not the last child.</p>
<p>Proof:</p>
<pre><code>&gt;&gt;&gt; http = __import__('http.client')
&gt;&gt;&gt; http.client   # the client submodule was imported
&lt;module 'http.client' from '/usr/lib/python3.6/http/client.py'&gt;
&gt;&gt;&gt; # without specifying the .client in the name the submodule is not imported
&gt;&gt;&gt; __import__('http').client
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: module 'http' has no attribute 'client'
</code></pre>
<p><code>import_module</code> instead returns the child module, which is what most people expect:</p>
<pre><code>&gt;&gt;&gt; importlib.import_module('http.client')
&lt;module 'http.client' from '/usr/lib/python3.6/http/client.py'&gt;
</code></pre>
</div>
<span class="comment-copy">This is a good approach, anyway if his package has a class and he wants the method from class, he will return to initial case.</span>
<span class="comment-copy">@MauroBaraldi I don't understand what you are saying. There is no one function where you can specify <code>package.module.class.method</code> and get a reference to the method. The OP already knows how to retriever an attribute using <code>getattr</code>, the only issue they had is the one I explained in the answer.</span>
<span class="comment-copy">You're right @Bakuriu, I have misunderstood the question. Sorry :-(</span>
