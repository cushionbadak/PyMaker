<div class="post-text" itemprop="text">
<p>I'm using socket programming for sending a UDP text message and it's working fine. Here is the code:</p>
<p><strong>send:</strong></p>
<pre><code>import socket
UDP_IP = "10.0.0.2"
UDP_PORT = 5005
MESSAGE = "Hello"
print "UDP target IP:", UDP_IP
print "UDP target port:", UDP_PORT
print "message:", MESSAGE
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # UDP
sock.sendto(MESSAGE, (UDP_IP, UDP_PORT))
</code></pre>
<p><strong>recv:</strong></p>
<pre><code>import socket

UDP_IP = "10.0.0.2"
UDP_PORT = 5005
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # UDP
sock.bind((UDP_IP, UDP_PORT))
while True:
  data, addr = sock.recvfrom(1024)
  print "received message:", data
</code></pre>
<p>Now I want to change the message I'm sending to a list. I tried to do this by using <code>pickle</code>. Here is the code:</p>
<p><strong>send:</strong></p>
<pre><code>import socket
import pickle

UDP_IP = "10.0.0.2"
UDP_PORT = 5005
a = []
a.append('H')
a.append('G')
MESSAGE = pickle.dumps(a)
print "UDP target IP:", UDP_IP
print "UDP target port:", UDP_PORT
print "message:", MESSAGE
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # UDP
sock.sendto(MESSAGE, (UDP_IP, UDP_PORT))
</code></pre>
<p><strong>recv:</strong></p>
<pre><code>import socket
import pickle

UDP_IP = "10.0.0.2"
UDP_PORT = 5005

sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # UDP
sock.bind((UDP_IP, UDP_PORT))
while True:
  data, addr = sock.recvfrom(1024)
  print "received message:", data
  pickle.loads(data)
  print(data)
</code></pre>
<p>But I'm not getting the correct form of the list in the receiver side. Here is the output:</p>
<pre><code>(1p0
S'H'
p1
aS'G'
p2
a.

(1p0
S'H'
p1
aS'G'
p2
a.
</code></pre>
<p>what's wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is solved. The code is working fine, there was a problem because I was printing the data itself not the output of <code>pickle.loads(data)</code>, So this code is working fine now:</p>
<p><strong>recv:</strong></p>
<pre><code>import socket
import pickle

UDP_IP = "10.0.0.2"
UDP_PORT = 5005

sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # UDP
sock.bind((UDP_IP, UDP_PORT))
while True:
  data, addr = sock.recvfrom(1024)
  print "received message:", data
  print(pickle.loads(data))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>Sockets</em> are operating on bytes (binary data).<br/>
Encode your string when sending data to socket connection (<code>str.encode()</code>) <br/>
and decode byte sequence received from socket with <code>bytes.decode('utf8')</code>.</p>
<p><a href="https://docs.python.org/3/howto/sockets.html#socket-howto" rel="nofollow noreferrer">https://docs.python.org/3/howto/sockets.html#socket-howto</a></p>
</div>
<span class="comment-copy">What are you getting on the receiver side?  (<code>print(repr(data))</code>)</span>
<span class="comment-copy">@snakecharmerb I updated my post.</span>
<span class="comment-copy">You're calling <code>pickle.loads</code> on fragments of the message.  You need to keep building up the string until you have it all, then call <code>pickle.loads</code>.  Of course, you need a way to work out when you have received the full message...</span>
<span class="comment-copy">thanks, but why does it work fine when I send a simple string message like "hello"?</span>
<span class="comment-copy">By the way I added the <code>encode()</code> and <code>decode()</code>, but it didn't solve the problem.</span>
