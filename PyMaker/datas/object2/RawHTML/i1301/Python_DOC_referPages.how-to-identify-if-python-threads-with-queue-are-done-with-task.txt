<div class="post-text" itemprop="text">
<p>Here i have <code>MazeRunner</code> Class which put all elements of <code>self.boxes</code> in queue and run thread on them until all of the queue becomes empty <code>q.empty()</code> .</p>
<blockquote>
<p>Here problem is how do i actually identify if my program is done performing threads on all elements which are in queue of <code>self.boxes</code> &amp; return <code>True</code>.</p>
</blockquote>
<p>It looks challenging because <code>our threads</code> are in while loop which keep changes based on <code>self.boxes</code> length &amp; <code>self.threads</code> we defined.
i have tried putting all threads in list and <code>t.join</code> them all. But not luck. Any Help?</p>
<pre><code>import threading,queue,time 

class MazeRunner:
    def __init__(self):
        self.q = queue.Queue()
        self.boxes = [1,2,3,4,5,6,7] ## `7` elements of list
        self.threads = 5

        for i in self.boxes:
            self.q.put(i) ### ADDING Every element of list to queue

        for j in range(self.threads): ### for i in range(5)  threads
            t = threading.Thread(target=self.ProcessQueue)
            t.start() ### Started `5` threads on `7` elements

    def ProcessQueue(self):
        while not self.q.empty():
            each_element = self.q.get()
            self.SleepFunction(each_element)
            self.q.task_done()

    def SleepFunction(self,each_element):
        print("STARTING : ",each_element)
        time.sleep(10)
        print("DONE : ",each_element)
</code></pre>
<hr/>
<pre><code>lets_try = MazeRunner()
if lets_try == True:
     print("All Threads Done on Elements")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to wait until all threads are done calling <a href="https://docs.python.org/3/library/threading.html#threading.Thread.join" rel="nofollow noreferrer"><code>Thread.join</code></a>:</p>
<p><em>HOWTO:</em></p>
<ul>
<li><p>Replace your <code>self.threads = 5</code> expression with class constant:</p>
<pre><code>THREAD_NUM = 5
</code></pre></li>
<li><p>Put additional attribute <code>threads</code> (for a list of threads) into your <code>__init__</code> method:</p>
<pre><code>...
self.threads = []
</code></pre></li>
<li><p>Put each created thread into <code>threads</code> list:</p>
<pre><code>for j in range(self.THREAD_NUM):
    t = threading.Thread(target=self.ProcessQueue)
    self.threads.append(t)
    t.start()
</code></pre></li>
<li><p>Define method like <code>check_completed</code> to ensure all threads are terminated (done):</p>
<pre><code>....

def check_completed(self):
    for t in self.threads:
        t.join()
    return True
</code></pre></li>
</ul>
<p>The way you need to check "all done":</p>
<pre><code>m_runner = MazeRunner()
if m_runner.check_completed():
    print("All Threads Done on Elements")
</code></pre>
</div>
<span class="comment-copy">Thanks Roman,  How do i get the  return <code>True</code> ?  , <code>AttributeError: 'MazeRunner' object has no attribute 'check_completed'</code> <code>lets_try = MazeRunner() print(lets_try.check_completed())</code></span>
<span class="comment-copy">Solved : Thanks to <a href="https://stackoverflow.com/questions/13094713/getting-an-attributeerror-class-has-no-attribute-method" title="getting an attributeerror class has no attribute method">stackoverflow.com/questions/13094713/â€¦</a></span>
<span class="comment-copy">@ArbazzHussain, see my update (the way you need to check your threads done)</span>
