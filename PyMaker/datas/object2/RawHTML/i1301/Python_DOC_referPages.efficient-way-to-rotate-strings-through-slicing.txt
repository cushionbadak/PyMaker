<div class="post-text" itemprop="text">
<p>The following program is designed to take a string, <code>my_string = "Stackoverflow"</code>, and rotate it to the right based off a given integer <code>num</code>.</p>
<pre><code>def rotateString(n, arr):
    rotate_beginning = arr[0 : len(arr)-n] 
    rotate_end = arr[len(arr)-n : ]
    newStr = rotate_end + rotate_beginning
    print (newStr)


my_string = "Stackoverflow"
num = 2
rotate(num, my_string)


# prints "owStackoverfl"
</code></pre>
<p>Is this the most efficient way to perform this function? Space complexity wise I know its not favorable to create new variables. Can it be done without creating new variables without sacrificing readability? In place? </p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a comparison of suggested answers using Ipython <code>timeit</code> module:</p>
<pre><code>from collections import deque

def rotateString1(n, arr):
    rotate_beginning = arr[0 : len(arr)-n] 
    rotate_end = arr[len(arr)-n : ]
    newStr = rotate_end + rotate_beginning
    return newStr


def rotateString2(n, arr):    
    d = deque(arr)
    d.rotate(n)
    return ''.join(d)

def rotateString3(n, arr):   
    return arr[-n:]+arr[:-n]

my_string = "Stackoverflow"
num = 2
</code></pre>
<p>Now Test using ipython:</p>
<pre><code>%timeit rotateString1(num, my_string)
%timeit rotateString2(num, my_string)
%timeit rotateString3(num, my_string)
</code></pre>
<p><strong>OUTPUT:</strong></p>
<pre><code>465 ns ± 11.2 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
968 ns ± 26.6 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
353 ns ± 3.38 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One way is using <code>collections.deque</code></p>
<pre><code>from collections import deque

my_string = "Stackoverflow"

d = deque(my_string)
d.rotate(1)
print (''.join(d))
#wStackoverflo
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python strings are immutable, so no you cannot do it without creating a new variable.  If you really want to be space efficient, you could use a list of characters or if you want to be very efficient, a <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-mutable" rel="nofollow noreferrer">byte array</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>Yes you can</p>
<pre><code>def rotateString(n, arr):
   print (arr[len(arr)-n : ]+  arr[0 : len(arr)-n] )

rotateString(2, "Stackoverflow")
</code></pre>
</div>
<span class="comment-copy"><code>arr[-n:] + arr[:-n]</code> would be more pythonic and somewhat more efficient, too.</span>
<span class="comment-copy">Is this <i>really</i> more efficient than the original solution?</span>
