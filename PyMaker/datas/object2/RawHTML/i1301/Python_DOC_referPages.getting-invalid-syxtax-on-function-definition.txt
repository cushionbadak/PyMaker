<div class="post-text" itemprop="text">
<pre><code>def create_processor_groups(self, parent_id=None, name: str=None, position: tuple=(0, 0)):
</code></pre>
<p>I have this function definition and it gives me invalid syntax on name and position. If I remove the types, the error goes but this should also work. What is wrong here? </p>
</div>
<div class="post-text" itemprop="text">
<p>I think you are writing code in Python 2.7 which can throw error. Python 3.x should run your code. </p>
</div>
<div class="post-text" itemprop="text">
<p>Sam.
I've got the error Unexpected EOF while parsing,when executed yout code. That means your code end is reached before the end of a block.
You should put something after (inside) your declaration like</p>
<p><code>def create_processor_groups(self, parent_id=None, name: str=None, position: tuple=(0, 0)):
    print('something')</code></p>
</div>
<div class="post-text" itemprop="text">
<p>I can't see any immediate reason why your code is not working so <strong>the most likely issue is that you are using a Python version &lt; 3.5.</strong></p>
<p>Another potential issue could be that lack of any code in the body of the function causing an EOF error as mentioned in another answer (though I will assume you just haven't included this in the question because you didn't think it was relevant). <strong>Note that it's always best to include a minimal but complete example in your <em>stackoverflow</em> questions.</strong></p>
<p>In Python 3.5.1, using an integer argument works as expected:</p>
<pre><code>def dostuff(a: int):
  return 2*a

dostuff(1)
2
</code></pre>
<p>So does using a tuple:</p>
<pre><code>def domore(a: tuple):
  return a[0]

domore((3,5))
3
</code></pre>
<p>But for tuples where the contained type is known, which may be your case, it may be better (stricter) to use a type alias, as follows:</p>
<pre><code>from typing import Tuple

TINT = Tuple[int]

def docoolstuff(a: TINT):
  return sum(a)

docoolstuff((1, 2, 3))
6
</code></pre>
<p>If you can't upgrade your Python version for any reason, there may be other packages which provide type hints in lower versions of Python.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try running the following code : (this will show you the version of Python you're actually using)</p>
<pre><code>import sys
print(sys.version)
</code></pre>
<p>If the reported Python version is somehow &lt; 3.5 then you should investigate your environment first and use the correct intended version.</p>
</div>
<span class="comment-copy">Which version of Python are you using? Type hints only arrived with 3.5, I think</span>
<span class="comment-copy">You are using ":" inside a tuple () which is not allowed, you may need to define a Dictionary outside your function and parse it within your function. In case you may call it multiple time you may use Class instead.</span>
<span class="comment-copy">Your line does not throw an error on my version of Python -- 3.5.3 -- which <b><i>strongly</i></b> suggests your version is too old for this syntax.</span>
<span class="comment-copy">strange, I had 3.6 selected as the default interpreter but It somehow isn't accepting it properly. But if i give it 2.7 it generates venv for 2.7. and then the error is understandable but its still not taking 3.6</span>
<span class="comment-copy">Just tried your function definition in Python 3.7 and it works, no problem. I think you should double-check your environnement, you could be using a different version of Python unknowingly. You can run the following inside the same environnement:  <code>import sys</code> <code>print(sys.version)</code>  and report the results</span>
<span class="comment-copy">It is a new feature in python 3.x  that it uses colon to specify argument type.</span>
<span class="comment-copy">Note: I believe it is only Python versions &gt;= 3.5 that has typing support. <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer">docs.python.org/3/library/typing.html</a></span>
<span class="comment-copy">strange, I had 3.6 selected as the default interpreter but It somehow isn't accepting it properly. But if I give it 2.7 it generates venv for 2.7. and then the error is understandable but its still not taking 3.6</span>
<span class="comment-copy">That is not the error that Sam reports and so it does not seem to be the problem. He only omitted the next lines of code in his post.</span>
<span class="comment-copy">I have 3.6 selected as the interpreter in the project settings in pycharm but sys.version is showing 2.7 â€“</span>
<span class="comment-copy">which python and which python3 gives me the location so the location is correct.</span>
<span class="comment-copy">Then there's something amiss, did you run the above code from inside pycharm ?</span>
<span class="comment-copy">yes! i ran it inside the IDE</span>
<span class="comment-copy">np. It worked after I restarted the IDE :D somehow it was not taking 3.6 as default i changed it and did it per project and finally had to restart</span>
