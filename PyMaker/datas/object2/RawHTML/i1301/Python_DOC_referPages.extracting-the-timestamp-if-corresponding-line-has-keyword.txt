<div class="post-text" itemprop="text">
<p>I want to extract the timestamp in <code>col2</code> whenever <code>col1</code> has the keyword.</p>
<pre><code>keywords=["i can help you with that", "i can surely help you with that", "i can check and help you with that", "i will be more than happy to help you", "let me assist you on this", "to assist you better"]
</code></pre>
<p>Given excel data is,</p>
<pre><code>    col1                                                                                                                            
1.agent enters(as arrin)
2.
3.I'll be happy to assist you. Give me a moment to review your request.
4.I see that the light in your Modem is Blinking Red. Am I right ?
5.Thank you for the detailed information.
6.Please do not worry.
7.Don't worry johny. I can help you with that.
8.Let me connect this chat to the concern team to help you out with this, 
  Please stay connected.

   col2
1. 2018-10-14 21:16:58
2. 2018-10-14 21:17:00
3. 2018-10-14 21:17:40
4. 2018-10-14 21:18:25
5. 2018-10-14 21:19:39
6. 2018-10-14 21:19:43
7. 2018-10-14 21:21:04
8. 2018-10-14 21:22:00
</code></pre>
<p>For example one of the keywords is present in the 7th row, So the corresponding timestamp in <code>col2</code> should be extracted.</p>
<p>The output should be as follows, </p>
<pre><code>[out]: 2018-10-14 21:21:04
</code></pre>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>this should work.</p>
<p>either change all to upper or lower case, as it would be case sensitive. be careful, as punctuation might have to be dealt with as well</p>
<pre><code>import pandas as pd

keywords=["i can help you with that", "i can surely help you with that", "i can check and help you with that", "i will be more than happy to help you", "let me assist you on this", "to assist you better"]

############## Read in excel file ##########################
col1 = ["agent enters(as arrin)",
"",
"I'll be happy to assist you. Give me a moment to review your request.",
"I see that the light in your Modem is Blinking Red. Am I right ?",
"Thank you for the detailed information.",
"Please do not worry.",
"Don't worry johny. I can help you with that.",
"Let me connect this chat to the concern team to help you out with this, Please stay connected."]

col2 = ['2018-10-14 21:16:58',
'2018-10-14 21:17:00',
'2018-10-14 21:17:40',
'2018-10-14 21:18:25',
'2018-10-14 21:19:39',
'2018-10-14 21:19:43',
'2018-10-14 21:21:04',
'2018-10-14 21:22:00']

df = pd.DataFrame()
df['col1'] = col1
df['col2'] = col2

#####################################################

# lower case keywords and col1 strings
lower_keywords = [x.lower() for x in keywords]
df['low_col1'] = df['col1'].str.lower()

df_filter = df[df['low_col1'].str.contains('|'.join(lower_keywords))]

print (df_filter['col2'])
</code></pre>
<p>output:</p>
<pre><code>In  [38]: print (df_filter['col2'])
Out [38]: 6    2018-10-14 21:21:04
          Name: col2, dtype: object
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given </p>
<pre><code>keywords=[
    "i can help you with that", 
    "i can surely help you with that", 
    "i can check and help you with that", 
    "i will be more than happy to help you", 
    "let me assist you on this", 
    "to assist you better"
]

col1 = [
    "agent enters(as arrin)",
    "",
    "I'll be happy to assist you. Give me a moment to review your request.",
    "I see that the light in your Modem is Blinking Red. Am I right ?",
    "Thank you for the detailed information.",
    "Please do not worry.",
    "Don't worry johny. I can help you with that.",
    "Let me connect this chat to the concern team to help you out with this, Please stay connected."
]

col2 = [
    '2018-10-14 21:16:58',
    '2018-10-14 21:17:00',
    '2018-10-14 21:17:40',
    '2018-10-14 21:18:25',
    '2018-10-14 21:19:39',
    '2018-10-14 21:19:43',
    '2018-10-14 21:21:04',
    '2018-10-14 21:22:00'
]
</code></pre>
<p>you can run:</p>
<pre><code>for i, col in enumerate(col1): 
    if any([keyword in col for keyword in keywords]): 
        print(col2[i]) 
</code></pre>
<p><code>any</code> enables you to succinctly test if <strong>any</strong> of the keywords occur in your strings.</p>
<p>Depending on your need, you may want to convert the strings to lowercase before the search or do something similar to the following within the <code>for-loop</code>:</p>
<pre><code>for i, col in enumerate(col1): 
    if any([keyword.lower() in col.lower() for keyword in keywords]): 
        print(col2[i]) 
</code></pre>
</div>
<span class="comment-copy"><code>Enumerate</code> is your friend. Here's the docs: <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">link</a></span>
<span class="comment-copy">How is this different from <a href="https://stackoverflow.com/q/53743915/2564301">your previous question</a>? (Which <i>also</i> did not contain any effort from your side.)</span>
