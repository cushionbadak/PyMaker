<div class="post-text" itemprop="text">
<p>I have a function that can generate WAV audio frames into a list. Is there any way I can play audio from that list without using an intermediate file to generate an <code>AudioSegment</code> object?</p>
<p><strong>EDIT:</strong> For reference, <a href="https://gitlab.com/Noammac/morse-practice/blob/master/morse_to_sound.py" rel="nofollow noreferrer">this</a> is my code.</p>
</div>
<div class="post-text" itemprop="text">
<p>I managed to solve this by using a <a href="https://docs.python.org/3/library/io.html#binary-i-o" rel="nofollow noreferrer">BytesIO</a> object. Since my library uses <a href="https://docs.python.org/3/library/wave.html#wave.open" rel="nofollow noreferrer"><code>wave.open</code></a>, I can just input an IO-like object to save to and read from. I'm not sure that this is the most pythonic answer, but that is what I used.</p>
</div>
<div class="post-text" itemprop="text">
<p>I suggest instantiating <code>AudioSegment()</code> objects directly like so:</p>
<pre><code>from pydub import AudioSegment

sound = AudioSegment(
    # raw audio data (bytes)
    data=b'â€¦',

    # 2 byte (16 bit) samples
    sample_width=2,

    # 44.1 kHz frame rate
    frame_rate=44100,

    # stereo
    channels=2
)
</code></pre>
<p>addendum: I see you're generating sound in your linked code snippet. You may be interested in <a href="https://github.com/jiaaro/pydub/blob/master/pydub/generators.py" rel="nofollow noreferrer">pydub's audio generators</a></p>
<pre><code>from pydub.generators import Sine
from pydub import AudioSegment

sine_generator = Sine(300)

# 0.1 sec silence
silence = AudioSegment.silent(duration=100)
dot = sine_generator.to_audio_segment(duration=150)
dash = sine_generator.to_audio_segment(duration=300)

signal = [dot, dot, dot, dash, dash, dash, dot, dot, dot]

output = AudioSegment.empty()
for piece in signal:
    output += piece + silence
</code></pre>
<p>and one final note: iteratively extending an <code>AudioSegment</code> like this can get slow. You might want to do something like <a href="https://gist.github.com/jiaaro/b610728a642bbaa28b3f1e5d3b6f9cf7" rel="nofollow noreferrer">this Mixer example</a></p>
</div>
<span class="comment-copy">that's what IO objects are for,  so unleass pydub already provides a documented way to solve your problem this is probably the pythonic solution indeed.</span>
<span class="comment-copy">Thanks for the advice on instantiating the AudioSegment with data of its own, didn't know I can do that. On the matter of using PyDub generators in my library, I think I'd rather not. I want to make it as independent as possible and understand the math behind sound at the same time.</span>
