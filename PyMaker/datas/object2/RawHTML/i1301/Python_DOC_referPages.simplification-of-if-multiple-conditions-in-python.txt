<div class="post-text" itemprop="text">
<p>I want to pick out some items in one rectangular box with axis limits of (xmin, xmax, ymin, ymax, zmin, zmax). So i use the following conditions, </p>
<pre><code>if not ((xi &gt;= xmin and xi &lt;= xmax) and (yi &gt;= ymin and yi &lt;= ymax) and (zi &gt;= zmin and zi &lt;= zmax)):
    expression 
</code></pre>
<p>But I think python has some concise way to express it. Does anyone can tell me? </p>
</div>
<div class="post-text" itemprop="text">
<p>Typical case for <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="noreferrer"><em>operator chaining</em></a>:</p>
<pre><code>if not (xmin &lt;= xi &lt;= xmax and ymin &lt;= yi &lt;= ymax and zmin &lt;= zi &lt;= zmax):
</code></pre>
<p>Not only it simplifies the comparisons, allowing to remove parentheses, while retaining readability, but also the center argument is only evaluated <em>once</em> , which is particularly interesting when comparing against the result of a function:</p>
<pre><code>if xmin &lt;= func(z) &lt;= xmax:
</code></pre>
<p>(so it's not equivalent to 2 comparisons if <code>func</code> has a side effect)</p>
</div>
<div class="post-text" itemprop="text">
<p>If you really want to start cooking with gas, create a class library for handling 3D points (e.g. by extending this one to include the Z coordinate: <a href="https://stackoverflow.com/questions/12468900/making-a-point-class-in-python">Making a Point Class in Python</a>).</p>
<p>You could then encapsulate the above solution into a method of the class, as:</p>
<pre><code>def isInBox(self, p1, p2):
    return (p1.X &lt;= self.X &lt;= p2.X and p1.Y &lt;= self.Y &lt;= p2.Y and p1.Z &lt;= self.Z &lt;= p2.Z)
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">Associated documentation here</a></span>
<span class="comment-copy">@Gao If their answer satisfies your question, please mark it as such with the green checkmark.</span>
<span class="comment-copy">@TheIncorrigible1 thanks. Was trying to get an internal bookmark on that page :)</span>
<span class="comment-copy">Just wondering how that is valid. <code>xmin &lt;= xi</code> returns True, which is evaluated as <code>1</code> and then it shouldn't make sense, but surprisingly, it works perfectly fine</span>
<span class="comment-copy">@Ayxan Comparison operators don't associate in this case; <code>x &lt;= y &lt;= z</code> is evaluated like <code>x &lt;= y and y &lt;= z</code> (but with <code>y</code> evaluated only once). It doesn't simply evaluate <code>x &lt;= y</code> and then compare the result to <code>z</code>.</span>
<span class="comment-copy">Yes. I understand your idea. Thanks.</span>
