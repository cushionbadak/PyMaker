<div class="post-text" itemprop="text">
<p>I have a .csv file with mean and standard deviation for each person. I have created a function which reads the file and creates a dictionary.</p>
<pre><code>def read_data():
    f = open("data.csv","r")
    reader = csv.reader(f)
    for row in reader:
        data[row[0]] = (float(row[1]),float(row[2]))
    return data
</code></pre>
<p>The output of this is</p>
<pre><code>{'Person 1': (50.0, 0.0), 'Person 2': (100.0, 10.0), 'Person 3': (100.0, 5.0)}
</code></pre>
<p>I want to write a function which takes the mean and standard deviation for each person and generates a random number using normal distribution. I would like the output to be something like</p>
<pre><code>{'Person 1': (*random number*), 'Person 2': (*random number*), 'Person 3': (*random number*)}
</code></pre>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>random.gauss</code>. Given a mean and standard deviation for a person, you create a random value based on a normal distribution as follows</p>
<pre><code>from random import gauss

data = {'Person 1': (50.0, 0.0), 'Person 2': (100.0, 10.0), 'Person 3': (100.0, 5.0)}
# Randomize values based on a normal distribution
rand_data = {k: gauss(mu=v[0], sigma=v[1]) for k,v in data.items()} 

# mu specifies mean and sigma specifies standard deviation
</code></pre>
<p>Alternatively, if you already plan on using <code>numpy</code>, can use <code>numpy.random.normal</code>:</p>
<pre><code>from numpy.random import normal

data = {'Person 1': (50.0, 0.0), 'Person 2': (100.0, 10.0), 'Person 3': (100.0, 5.0)}
# Randomize values based on a normal distribution
rand_data = {k: normal(loc=v[0], scale=v[1]) for k,v in data.items()} 

# loc specifies mean and scale specifies standard deviation   
</code></pre>
<p>The result of each gives the following running Python 3.7:</p>
<pre><code>{'Person 1': 50.0, 'Person 2': 104.66767928603309, 'Person 3': 90.49432247610861}
</code></pre>
</div>
<span class="comment-copy">Did you try something? What exactly is the problem? Take a look at the <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer"><code>random</code></a> module, you can use the <code>gauss</code> function.</span>
<span class="comment-copy">Could you clarify the question a bit?  Do you want the random number to be between the mean and 1, 2 or some increment of the standard deviation?</span>
<span class="comment-copy">Using <code>numpy</code> is not really necessary here.</span>
<span class="comment-copy"><code>random.gauss</code> from the standard library - it's not really "better", but it means one less dependency to install, and numpy can take quite long to import. Its benefits are not really used here.</span>
<span class="comment-copy">Just realized after posting. Thanks. Updated.</span>
