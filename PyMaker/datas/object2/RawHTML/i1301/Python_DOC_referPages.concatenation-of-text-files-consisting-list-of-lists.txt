<div class="post-text" itemprop="text">
<p>Suppose that I am having two text files 1.txt and 2.txt</p>
<p>The content of <code>1.txt</code> as:</p>
<pre><code>[['Hi', 'I'], ['I'], ['_am']]
</code></pre>
<p>and</p>
<p>The content of <code>2.txt</code> as:</p>
<pre><code>[['_a', 'good'], ['boy']]
</code></pre>
<p>How to join the same and write the same into a new file in time efficient manner, say <code>3.txt</code>, which should look like this:</p>
<pre><code>[['Hi', 'I'], ['I'], ['_am'], ['_a', 'good'], ['boy']]
</code></pre>
<p>Note: I want the special characters (_) to be remain as it is.</p>
<p>I have tried from a previous answer of stack overflow which is mentioned in <a href="https://stackoverflow.com/questions/53739613/concatenation-of-text-files-txt-files-with-list-in-python">Concatenation of Text Files (.txt files) with list in python?</a></p>
<p>What I have tried is as follows:</p>
<pre><code>global inputList
inputList = []
path = "F:/Try/"
def load_data():
    for file in ['1.txt', '2.txt']:
        with open(path + file, 'r', encoding = 'utf-8) as infile:
           inputList.extend(infile.readlines())
    print(inputList)
load_data()
</code></pre>
<p>But I am not getting the desired output as shown in above. The output what I am getting right now is as follows:</p>
<pre><code>["[['Hi', 'I'], ['I'], ['_am']]", "[['_a', 'good'], ['boy']]"]
</code></pre>
<p>Why there is a extra (" ") in the current output of mine.</p>
<p>Please suggest something productive?</p>
<p>Thanks in Advance.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import ast
x="[['Hi', 'I'], ['I'], ['_am']]"
ast.literal_eval(x)
</code></pre>
<p>output:</p>
<pre><code>[['Hi', 'I'], ['I'], ['_am']]
</code></pre>
<p>In your case:</p>
<pre><code>import ast
global inputList
inputList = []
path = "F:/Try/"
def load_data():
    for file in ['1.txt', '2.txt']:
        with open(path + file, 'r', encoding = 'utf-8') as infile:
           inputList.extend(ast.literal_eval(infile.readlines()))
    print(inputList)
load_data()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may want to use:</p>
<pre><code>import json

with open("1.txt", "r") as t1, open("2.txt", "r") as t2, open("3.txt", "w") as t3:
    t3.write(json.dumps([eval(t1.read().strip()), eval(t2.read().strip())]))
</code></pre>
<hr/>
<p><strong>3.txt</strong></p>
<pre><code>[[["Hi", "I"], ["I"], ["_am"]], [["_a", "good"], ["boy"]]]
</code></pre>
<hr/>
<p>Notes:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval()</code></a></li>
<li><a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"><code>json</code></a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Do your files always look like that? You can then just remove the "outer" <code>[</code> and <code>]</code>.</p>
<pre><code>path = "F:/Try/"

def load_data():
    result = []
    for file in ['1.txt', '2.txt']:
        with open(path + file, 'r', encoding='utf-8') as infile:
            result.append(infile.readline().strip()[1:-1])
    return "[" + ", ".join(result) + "]"

print(load_data())
</code></pre>
<p>Which prints</p>
<pre><code>[['Hi', 'I'], ['I'], ['_am'], ['_a', 'good'], ['boy']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>xlist = ["[['Hi', 'I'], ['I'], ['_am']]", "[['_a', 'good'], ['boy']]"]
ylist = []
for x in xlist:
    if x.startswith('[') and x.endswith(']'):
        ylist.append(x[1:-1])
zstring =''
for y in ylist:
    if zstring == '':
        zstring = y
    else:
        zstring += ', ' + y

print (zstring)
#['Hi', 'I'], ['I'], ['_am'], ['_a', 'good'], ['boy']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this out (don't forget to put the star operator):</p>
<pre><code>import ast
global inputList
inputList = []
path = "F:/Try/"
def load_data():
    for file in ['1.txt', '2.txt']:
        with open(path + file, 'r', encoding = 'utf-8') as infile:
            inputList.extend(ast.literal_eval(*infile.readlines()))
    print(inputList)
load_data()
</code></pre>
</div>
<span class="comment-copy">You are trying to read an array from a file. But reading a file like this returns a string. You will have to parse the string convert it to an array. There are a lot of things going wrong here.</span>
<span class="comment-copy">Thanks Pedro. I am not that proficient in json. I will go through with your suggested links. Thanks a ton!</span>
<span class="comment-copy">You've very welcome, GL!</span>
<span class="comment-copy">Thanks @TED. What is the star operator about?</span>
<span class="comment-copy">Basically if you have input that is something like [[a]], the star * 'unwraps' the outermost [] so that we now have input as [a].</span>
