<div class="post-text" itemprop="text">
<p>I try to calculate several properties of students:</p>
<ul>
<li>the amount of students</li>
<li>the sum of the marks of the students</li>
<li>the lowest, the average and the highest mark they received.</li>
</ul>
<p>Yet, the variable <code>mark</code> only shows 0.</p>
<p>How can I solve this problem using function but not max() and min()?</p>
<pre><code>mark = 0

a = 0
student = 0
a = int(input("Enter Marks :"))

def maxx():
    maxx = 0
    for i in range(1, a):
        if a&gt; maxx :
            maxx = a
    return maxx

def minn():
    minn = 0
    for i in range(1, a):
        if a &lt; minn :
            minn = a
    return minn

while (a &gt;= 0):
    mark = mark + a
    student = student + 1
    a = int(input("Enter Marks :"))

print("Exit")
print("Total students :", student)
print ("The total marks is:", mark)

average = mark/student

print ("The average marks is:", average)
print("The max marks is :", maxx())
print("The min marks is :", minn())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code has a lot of problems. One of them is </p>
<pre><code>for i in range(1, a):
</code></pre>
<p>This part makes no sense if you want a min or max value. You need to iterate over a list of grades instead.<br/>
<code>mark</code> and <code>student</code> are also unnecessary considering they can be replaced by <code>sum</code> and <code>len</code> respectively.<br/>
The entire code seems to lack a proper structure. Here's an example implementation. If you are not allowed to use <code>sum</code> or <code>len</code>, you may bring your own <code>mark</code> and <code>student</code> method back, but try not to make a mess and keep it readable:</p>
<pre><code>def maxx(grades):
    if (not grades): # if empty, we let the caller know 
        return None

    res = grades[0]  # we know the list is not empty

    for i in grades:
        if i &gt; res:
            res = i
    return res

def minn(grades):
    if (not grades):
        return None

    res = grades[0]

    for i in grades:
        if i &lt; res:
            res = i
    return res

def main():
    grades = []  # list of grades

    while (True):
        grade = int(input("Enter Mark: "))
        if (grade &lt; 0): break
        grades.append(grade)

    student_cnt = len(grades)
    total = sum(grades)

    print("Exit")
    print("Total students :", student_cnt)
    print("The total marks is:", total)

    print ("The average marks is:", total / student_cnt)
    print("The max marks is :", maxx(grades))
    print("The min marks is :", minn(grades))


if __name__ == "__main__":
    main()
</code></pre>
<p>Input/Output:</p>
<pre><code>Enter Mark:  30
Enter Mark:  20
Enter Mark:  10
Enter Mark:  40
Enter Mark:  -1
Exit
Total students : 4
The total marks is: 100
The average marks is: 25.0
The max marks is : 40
The min marks is : 10
</code></pre>
</div>
<span class="comment-copy">your function use the global <code>a</code> - your while loop loops until <code>a</code> is smaller then 0. Your function uses ranges from 1 to the current <code>a</code> .. how many numbers are there in an exclusive  <code>range</code> of <code>1</code> to <i>less then zero</i> if you are only allowed to increment .... You might want to use a debugger or print - statements. This: <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">docs.python.org/3/tutorial</a>  and that:  <a href="https://ericlippert.com/2014/03/05/how-to-debug-small-programs/" rel="nofollow noreferrer">How to debug small programs (#1)</a> might help you fix your errors.</span>
<span class="comment-copy">@PatrickArtner, actually, yes. I don't really understand what's the point of these functions now...</span>
<span class="comment-copy">You have different problems in the code, store marks in a list and use it for looping in your functions (<b>maxx</b> and <b>minn</b>). Be sure to pass the list for argument of the function like so <code>maxx(marks)</code>.</span>
<span class="comment-copy">WOW, Thank you !!!</span>
