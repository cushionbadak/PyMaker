<div class="post-text" itemprop="text">
<p>When inheriting from string the value passed to <code>argument</code>is printed out:</p>
<pre><code>class StringChild(str):

    def __init__(self, argument):
        self.argument = argument

print(Child("text"))
</code></pre>
<p>Output:</p>
<pre><code>text
</code></pre>
<p>Same thing when inheriting from int:</p>
<pre><code>class IntChild(int):

    def __init__(self, argument):
        self.argument = argument

print(IntChild(10))
</code></pre>
<p>Output:</p>
<pre><code>10
</code></pre>
<p>However, when I inherit from a list or a dict I get an empty list or dict respectively:</p>
<pre><code>class ListChild(list):

    def __init__(self, argument):
        self.argument = argument

print(ListChild([1,2,3]))
</code></pre>
<p>Output:</p>
<pre><code>[]
</code></pre>
<p>Why is there a different behaviour?</p>
</div>
<div class="post-text" itemprop="text">
<p>Initializing <code>self.argument = argument</code> does not <em>really</em> initialize the object itself (the list), it's just setting an arbitrary attribute called <code>argument</code>. </p>
<p>If you are using a half-decent IDE you should see a warning saying <code>Call to __init__ of super class is missing</code>.</p>
<p>If you do that you will get your list:</p>
<pre><code>class ListChild(list):
    def __init__(self, argument):
        super().__init__(argument)
        # self.argument = argument

print(ListChild([1, 2, 3]))
# [1, 2, 3]
</code></pre>
<p>And you don't even need <code>self.argument</code>.</p>
<p>Now, you will see the same warning when subclassing <code>int</code> as well. The difference between <code>int</code> and <code>list</code> is that <code>int</code> is primitive and works a bit different. You don't even need to pass in <code>argument</code> to <code>super().__init__</code>. You are however required to pass it to <code>IntChild.__init__</code>:</p>
<pre><code>class IntChild(int):
    def __init__(self, argument):
        super().__init__()

print(IntChild(3))
# 3
</code></pre>
<p>See <a href="https://stackoverflow.com/questions/34065862/where-is-stored-the-int-value-of-a-int-instance-in-python">this question</a> for more details about how <code>int</code> works.</p>
<p>Users are encouraged to subclass <a href="https://docs.python.org/3/library/collections.html#collections.UserList" rel="nofollow noreferrer"><code>collections.UserList</code></a> and <a href="https://docs.python.org/3/library/collections.html#collections.UserString" rel="nofollow noreferrer"><code>collections.UserString</code></a> instead of <code>list</code> and <code>str</code> directly, however there is no <code>UserInt</code>. </p>
</div>
