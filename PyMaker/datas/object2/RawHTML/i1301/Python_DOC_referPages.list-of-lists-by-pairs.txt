<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2407398/how-to-merge-lists-into-a-list-of-tuples">How to merge lists into a list of tuples?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/16401906/how-to-pair-up-two-lists">How to pair up two lists? [duplicate]</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I have two lists and I would like to create a list of lists but mainting the order, so if I have:</p>
<pre><code>l1 = [1,2,3,2]
l2 = [2,3,4,1]
</code></pre>
<p>I would like to have:</p>
<pre><code>ans = [[1,2],[2,3],[3,4],[2,1]]
</code></pre>
<p>It mantains the order of the indexes</p>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>zip</code>,</p>
<pre><code>ans = [[a, b] for a, b in zip(l1, l2)]
</code></pre>
<ul>
<li>a good tutorial about zip in <a href="https://www.programiz.com/python-programming/methods/built-in/zip" rel="nofollow noreferrer">here</a>. </li>
</ul>
<hr/>
<p>In case one of the lists is longer then the other, you can use <code>zip_longest</code> (documented <a href="https://docs.python.org/3.0/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer">here</a>):</p>
<pre><code>from iterators import zip_longest
l1 = [1,2,3,2,7]
l2 = [2,3,4,1]
ans = [[a, b] for a, b in zip_longest(l1, l2, fillvalue=0)]
# output: ans = [[1,2],[2,3],[3,4],[2,1],[7,0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; l1 = [1,2,3,2]
&gt;&gt;&gt; l2 = [2,3,4,1]
&gt;&gt;&gt; ans = [[1,2],[2,3],[3,4],[2,1]]
&gt;&gt;&gt; [list(v) for v in zip(l1, l2)]
[[1, 2], [2, 3], [3, 4], [2, 1]]
&gt;&gt;&gt; assert _ == ans
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simply do following:</p>
<pre><code>l1 = [1,2,3,2]
l2 = [2,3,4,1]

ans = zip(l1, l2) #convert to tuples

ans = map(list, ans) #convert every tuples to list

for pairs in ans:
    print pairs
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>EDIT: <code>izip</code> is needed for python2 only. In Python 3 the built-in zip does the same job as itertools.izip in 2.x (returns an iterator instead of a list  </p>
<p>Using <code>zip</code></p>
<pre><code>l1 = [1,2,3,2]
l2 = [2,3,4,1]

zip(l1, l2)
# [(1, 2), (2, 3), (3, 4), (2, 1)]
</code></pre>
<p>Note that <code>zip</code> return <code>list</code> type:</p>
<pre><code>type(zip(l1, l2))
# &lt;type 'list'&gt;
</code></pre>
<p>It means <code>zip</code> computes all the list at once, which is not memory efficient when your <code>l1, l2</code> is large. For saving memory, using <code>izip</code>: <code>izip</code> computes the elements only when requested.</p>
<pre><code>from itertools import izip
y = izip(l1, l2)

for item in y:
    print(item)
# (1, 2), (2, 3), (3, 4), (2, 1)

print(type(y))
# &lt;itertools.izip object at 0x7f628f485f38&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do it by using <code>zip</code> function.</p>
<p>The <strong>zip</strong>() function take iterables (can be zero or more), makes iterator that aggregates elements based on the iterables passed, and returns an iterator of tuples. </p>
<p><strong>Code :</strong></p>
<pre><code>l1 = [1,2,3,2]
l2 = [2,3,4,1]
ans = zip(l1,l2)
final = []
for i in ans:
    final.append(i)
print(final)
</code></pre>
<p><strong>Output :</strong></p>
<pre><code>[(1, 2), (2, 3), (3, 4), (2, 1)]
</code></pre>
</div>
<span class="comment-copy">The builtin <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> is almost exactly what you want: <code>zip(l1, l2)</code>. To produce the exact output you want, <code>[[x, y] for x, y in zip(l1, l2)]</code></span>
<span class="comment-copy">thank you! just realized how stupid my question was xD</span>
<span class="comment-copy">You have enough reputation to close this as a duplicate. There might be over 10 duplicates of this</span>
<span class="comment-copy">You are using Python 2. The OP explicitly requested <a href="https://stackoverflow.com/questions/tagged/python-3.x">python-3.x</a>, where pretty much everything about this is different. :) (e.g. <code>itertools.izip</code> doesn't exist, and <code>zip</code> returns an iterator.)</span>
<span class="comment-copy">My bad, I didn't even notice his tag :D</span>
