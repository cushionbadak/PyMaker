<div class="post-text" itemprop="text">
<p>I have a rest API endpoint which returns list of available countries in JSON format, like:</p>
<pre><code>[["ALL","Albania Lek"],["AFN","Afghanistan Afghani"],["ARS","Argentina Peso"],["AWG","Aruba Guilder"],["AUD","Australia Dollar"]]
</code></pre>
<p>I need to convert it to </p>
<pre><code>{
"ALL":"Albania Lek",
"AFN":"Afghanistan Afghani",
"ARS":"Argentina Peso"
}
</code></pre>
<p>How can I do this quickly and efficiently?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>dict()</code> constructor builds dictionaries directly from sequences of key-value pairs, as stated in the <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer">documentation</a>. So it's as simple as this:</p>
<pre><code>the_list = [['ALL', 'Albania Lek'],
            ['AFN', 'Afghanistan Afghani'], 
            ['ARS', 'Argentina Peso'], 
            ['AWG', 'Aruba Guilder'],
            ['AUD', 'Australia Dollar']]

dict(the_list)

=&gt; {
     'AWG': 'Aruba Guilder',
     'ALL': 'Albania Lek', 
     'ARS': 'Argentina Peso',
     'AFN': 'Afghanistan Afghani',
     'AUD': 'Australia Dollar'
   }
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think</p>
<pre><code>{k:v for k,v in the_list}
</code></pre>
<p>Is better than dict(the_list) because it does not invoke a function. So performance-wise comprehension wins. </p>
<p>See Tests: <a href="https://doughellmann.com/blog/2012/11/12/the-performance-impact-of-using-dict-instead-of-in-cpython-2-7-2/" rel="nofollow noreferrer">https://doughellmann.com/blog/2012/11/12/the-performance-impact-of-using-dict-instead-of-in-cpython-2-7-2/</a></p>
<p>And:
<a href="https://medium.com/@jodylecompte/dict-vs-in-python-whats-the-big-deal-anyway-73e251df8398" rel="nofollow noreferrer">https://medium.com/@jodylecompte/dict-vs-in-python-whats-the-big-deal-anyway-73e251df8398</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Another 1 liner option is dict comprehension</p>
<pre><code>{x[0]:x[1] for x in the_list}
</code></pre>
</div>
<span class="comment-copy">Possible duplicates: <a href="https://stackoverflow.com/questions/1747817/create-a-dictionary-with-list-comprehension-in-python/1747827#1747827">Create a dictionary with list comprehension in Python</a> and <a href="https://stackoverflow.com/questions/3783530/python-tuple-to-dict">python tuple to dict</a></span>
<span class="comment-copy">I have added two references documentating quickly and efficiently of {} over dict()</span>
<span class="comment-copy">Use added. Looking for Python3 numbers ...</span>
<span class="comment-copy">I just ran some timings (using 3.6.6), and this does not seem to be accurate.  For a 10 million item list (<code>list(zip(range(10000000), range(10000000)))</code>), the comprehension had a time of <code>1.23 sec per loop</code> and the <code>dict</code> call had a time of <code>1.06 sec per loop</code></span>
