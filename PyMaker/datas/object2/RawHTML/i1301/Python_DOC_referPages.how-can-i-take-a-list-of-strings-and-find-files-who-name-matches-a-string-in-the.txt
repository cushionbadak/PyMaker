<div class="post-text" itemprop="text">
<p>I have a list of 600+ numbers, and a directory of 50,000+ files. All of the files are named like this:</p>
<pre><code>99574404682_0.jpg
99574404682_1.jpg
99574437307_0.gif
99574437307_1.gif
99574437307_2.gif
99574449752.jpg
99574457597.jpg
99581722007.gif
</code></pre>
<p>I want to copy any file that has a name that matches a number in the list, up to the underscore, and copy to a new directory.</p>
<p>For example if my list contains:</p>
<pre><code>99574404682
99574449752
99581722007
</code></pre>
<p>Then the files:</p>
<pre><code>99574404682_0.jpg
99574404682_1.jpg
99574449752.jpg
99581722007.gif
</code></pre>
<p>would be copied to a new directory. I am on a Mac using bash 3.2. I am thinking something like python is what I need to use because the list is too large for grep or find but I am not sure. Thanks! </p>
</div>
<div class="post-text" itemprop="text">
<p>You could iterate through two lists taking item from one based on <code>startswith</code> condition:</p>
<pre><code>files_lst = ['99574404682_0.jpg', '99574404682_1.jpg', '99574437307_0.gif', '99574437307_1.gif', '99574437307_2.gif', '99574449752.jpg', '99574457597.jpg', '99581722007.gif']

lst = [99574404682, 99574449752, 99581722007]

for x in files_lst:
    for y in lst:
        if x.startswith(str(y)):
            print(x)

# 99574404682_0.jpg
# 99574404682_1.jpg
# 99574449752.jpg
# 99581722007.gif
</code></pre>
<p>This gets all files that starts with numbers provided in <code>lst</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>using os module and shutil module in python</p>
<pre><code>import os
import shutil
</code></pre>
<p>and you can prepare a list contains the match pattern likes</p>
<pre><code>match_pattern=['99574404682','99574449752','99581722007']
</code></pre>
<p>then use os.listdir() to get a list which contains the file name in source directory</p>
<pre><code>files_in_source_dir=os.listdir(source_directory_path)
</code></pre>
<p>at last copy the matching files</p>
<pre><code>for file in files_in_source_dir:
  if file.split('.')[0] in match_pattern: #using split('.')[0] to get filename without extend name
    shutil.copyfile(source_directory_path+file,target_directory_path+file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/shutil.html#shutil.copy" rel="nofollow noreferrer"><code>shutil.copy()</code></a> to copy your files over from a source to a destination.</p>
<pre><code>from shutil import copy

from os import listdir
from os import makedirs

from os.path import abspath
from os.path import exists
from os.path import splitext

filenames = {'99574404682', '99574449752', '99581722007'}

src_path = # your files
dest_path = # where you want to put them

# make the destination if it doesn't exist
if not exists(dest_path):
    makedirs(dest_path)

# go over each file in src_path
for file in listdir(src_path):

    # If underscore in file
    if "_" in file:
        prefix, *_ = file.split("_")

    # otherwise treat as normal file
    else:
        prefix, _ = splitext(file)

    # only copy if prefix exist in above set
    if prefix in filenames:
        copy(abspath(file), dest_path)
</code></pre>
<p>Which results in the following files in <code>dest_path</code>:</p>
<pre><code>99574404682_0.jpg  
99574404682_1.jpg  
99574449752.jpg  
99581722007.gif
</code></pre>
<p>I'm not really an expert in bash, but you can try something like this:</p>
<pre><code>#!/bin/bash

declare -a arr=("99574404682" "99574449752" "99581722007")

## Example directories, you can change these
src_path="$PWD/*"
dest_path="$PWD/src"

if [ ! -d "$dest_path" ]; then
    mkdir $dest_path
fi

for f1 in $src_path; do 
    filename=$(basename $f1)
    prefix="${filename%.*}"
    IFS='_' read -r -a array &lt;&lt;&lt; $prefix

    for f2 in "${arr[@]}"; do
        if [ "${array[0]}" == "$f2" ]; then
            cp $f1 $dest_path
        fi
    done
done
</code></pre>
</div>
<span class="comment-copy">Can you post some code which has tried?</span>
<span class="comment-copy">A quick code: <code>while read number; do cp /source/directory/$number[._]* /dest/dir 2&gt;/dev/null; done &lt; number_list_filename</code> (Assuming that the numbers are one per line.)</span>
<span class="comment-copy">Thank you! Iâ€™ll give this a try tonight.</span>
<span class="comment-copy">This worked perfectly. Thank you!</span>
