<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7571635/fastest-way-to-check-if-a-value-exist-in-a-list">Fastest way to check if a value exist in a list</a>
<span class="question-originals-answer-count">
                    12 answers
                </span>
</li>
</ul>
</div>
<p>So this is going to be a bit of a stupid question, what is the more accepted way of phrasing:</p>
<pre><code>    if Answer1 == ("Register") or Answer1 == ("register") or Answer1 == 
    ("rgister") or Answer1 == ("Registe"):
</code></pre>
<p>In a list?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>in</code> with a list:</p>
<p><code>if Answer1 in ["Register", "register", "rgister", "Registe"]:</code></p>
<pre><code>&gt;&gt;&gt; if Answer1 in ["Register", "register", "rgister", "Registe"]:
...   print "OK"
... else:
...   print "NO"
... 
NO
</code></pre>
</div>
<span class="comment-copy">make a set*(or a list, but set is better for lookups) for your checks, and check membership. <code>Answer1 in [your list]</code> or <code>Answer1 in {your set}</code></span>
<span class="comment-copy">@ParitoshSingh if reglog == ["Register","register"]: 	print("registering") else: 	print("NOT WORKING")</span>
<span class="comment-copy">you have to check if it is <code>one of</code> the values present. it uses the <code>in</code> keyword. also called as a membership check.</span>
<span class="comment-copy">If you want to do fuzzy string comparison, you can take a look at <a href="https://docs.python.org/3/library/difflib.html#sequencematcher-objects" rel="nofollow noreferrer">SequenceMatcher</a>, which lets you compare how close two strings are, like <code>SequenceMatcher(None, 'hello', 'heelo').ratio()</code></span>
<span class="comment-copy">In addition, you could probably cut down your checks by calling <code>.lower()</code> on the string. <code>"register"</code> will then catch all correct spellings regardless of any capital letters</span>
<span class="comment-copy">Thx! I knew there was something I was missing.                                        I had tried it without the 'in' and just kept the '=='.</span>
