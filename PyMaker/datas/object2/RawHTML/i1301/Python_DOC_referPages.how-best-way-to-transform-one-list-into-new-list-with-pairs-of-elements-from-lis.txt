<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6822725/rolling-or-sliding-window-iterator">Rolling or sliding window iterator?</a>
<span class="question-originals-answer-count">
                    19 answers
                </span>
</li>
</ul>
</div>
<p>My problem was to transform the list <code>[1,2,3,4,5]</code> to <code>[[1, 2], [2, 3], [3, 4], [4, 5]]</code>.</p>
<p>I resolved it with:</p>
<pre><code>a = [1,2,3,4,5]

result = [[e, a[idx + 1]] for idx, e in enumerate(a) if idx + 1 != len(a)]
</code></pre>
<p>What the best way to do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a>:</p>
<pre><code>L = [1,2,3,4,5]

res = list(zip(L, L[1:]))
</code></pre>
<p>This gives a list of tuples. If a list <em>of lists</em> is a strict requirement, you can use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a>:</p>
<pre><code>res = list(map(list, zip(L, L[1:])))

print(res)

[[1, 2], [2, 3], [3, 4], [4, 5]]
</code></pre>
<p>For a generalised solution to your problem, see <a href="https://stackoverflow.com/questions/6822725/rolling-or-sliding-window-iterator">Rolling or sliding window iterator</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't know about the "best" way, but here is another way.</p>
<pre><code>d = [1,2,3,4,5]

results = [[d[i], d[i+1]] for i in range(len(d) - 1)]
print(results)
# OUTPUT
# [[1, 2], [2, 3], [3, 4], [4, 5]]
</code></pre>
</div>
