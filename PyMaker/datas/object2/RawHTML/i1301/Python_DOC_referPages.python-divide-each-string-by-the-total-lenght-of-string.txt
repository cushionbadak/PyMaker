<div class="post-text" itemprop="text">
<p>Thank you for your help and patience.</p>
<p>I am new to python and am attempting to calculate the number of times a particular atomic symbol appears divided by the total number of atoms. So that the function accepts a list of strings as argument and returns a list containing the fraction of 'C', 'H', 'O' and 'N'. But I keep on getting one result instead of getting all for each of my atoms. My attempt is below:</p>
<pre><code>Atoms = ['N', 'C', 'C', 'O', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'O', 'H']

def count_atoms (atoms):
    for a in atoms:
        total = atoms.count(a)/len(atoms)
        return total
</code></pre>
<p>Then</p>
<pre><code>faa = count_atoms(atoms)
print(faa)
</code></pre>
<p>However I only get one result which is 0.07692307692307693. I was supposed to get a list starting with [0.23076923076923078,..etc], but I don't know how to. I was supposed to calculate the fraction of 'C', 'H', 'O' and 'N' atomic symbols in the molecule using a for loop and a return statement. :( Please help, it will be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Well you return the variable total at your first loop. Why don't you use a list to store your values? Like this:</p>
<pre><code>atoms = ['N', 'C', 'C', 'O', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'O', 'H'] #python is case sensitive!

def count_atoms (atoms):
    return_list = [] #empty list
    for a in atoms:
        total = atoms.count(a)/len(atoms)
        return_list.append(total) #we add a new item
    return return_list #we return everything and leave the function
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>@ganderson comment explains the problem. as to alternative implementation here is one using <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">collections.Counter</a></p>
<pre><code>from collections import Counter

atoms = ['N', 'C', 'C', 'O', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'O', 'H']

def count_atoms(atoms):
    num = len(atoms)
    return {atom:count/num for atom, count in Counter(atoms).items()}

print(count_atoms(atoms))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It would be better to return a dictionary so you know which element the fraction corresponds to:</p>
<pre><code>&gt;&gt;&gt; fractions = {element: Atoms.count(element)/len(Atoms) for element in Atoms}
&gt;&gt;&gt; fractions
{'N': 0.07692307692307693, 'C': 0.23076923076923078, 'O': 0.15384615384615385, 'H': 0.5384615384615384}
</code></pre>
<p>You can, then, even lookup the fraction for a particular element like:</p>
<pre><code>&gt;&gt;&gt; fractions['N']
0.07692307692307693
</code></pre>
<p>However, if you must use a <code>for</code> loop and a return statement, then answer from @not_a_bot_no_really_82353 would be the right one.</p>
</div>
<div class="post-text" itemprop="text">
<p>A simple one liner should do</p>
<pre><code>[atoms.count(a)/float(len(atoms)) for a in set(atoms)]
</code></pre>
<p>Or better create a dictionary using comprehension</p>
<pre><code>{a:atoms.count(a)/float(len(atoms)) for a in set(atoms)}
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'C': 0.23076923076923078,
 'H': 0.5384615384615384,
 'N': 0.07692307692307693,
 'O': 0.15384615384615385}
</code></pre>
<p>If you still want to use the for loop. I would suggest to go for <code>map</code> which would be a lot cleaner</p>
<pre><code>atoms = ['N', 'C', 'C', 'O', 'H', 'H', 'C', 'H', 'H', 'H', 'H', 'O', 'H'] 

def count_atoms (a):
    total = atoms.count(a)/float(len(atoms))
    return total

map(count_atoms,atoms)
</code></pre>
</div>
<span class="comment-copy">As soon as you <code>return</code> in a function, the function exits. This means that it only goes through your loop one time. Try <code>append()</code>ing your values to a list then returning the whole list outside the loop</span>
<span class="comment-copy">Thank you for the quick response</span>
<span class="comment-copy">Also please note: python is case sensitive. So please use atoms not Atoms.</span>
<span class="comment-copy">Thank you so much</span>
<span class="comment-copy">No problem, just mark the question as answered so everybody knows your problem is solved.</span>
<span class="comment-copy">Thank you for your help</span>
<span class="comment-copy">If you're going to go that route, might as well do it on the <code>set</code> of Atoms to not needlessly iterate multiple times on each: <code>{element: Atoms.count(element)/len(Atoms) for element in set(Atoms)}</code></span>
<span class="comment-copy">Thank you very much</span>
<span class="comment-copy">Thank you for the answer</span>
