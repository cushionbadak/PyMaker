<div class="post-text" itemprop="text">
<p>I am trying to get a reference number inside a string which is in most cases precedented by "Ref." or something similar.</p>
<p>e.g.: </p>
<blockquote>
<p>Explorer II Ref.16570 Box</p>
</blockquote>
<p><a href="https://regex101.com/r/qO3NKM/3" rel="nofollow noreferrer">regex with further examples</a></p>
<p>The problem is that there are many different variations<a href="https://regex101.com/r/qO3NKM/3" rel="nofollow noreferrer">1</a> as this is user generated content. How could I retrieve the number with python which is precented by e.g. <code>Ref.</code>? </p>
<p>The number/string is not always the same pattern e.g. numbers. .They might be mixed with characters and dots and slashes but for a human eye there is almost always such a number in each line identifiable.</p>
<p>E.g.:</p>
<pre><code>Ref.16570
Ref. 16570
Referenz 216570
Referenz 01 733 7653 4159-07 4 26
331.12.42.51.01.002
166.0173
AB012012/BB01
Ref. 167.021
PAM00292
14000M
L3.642.4.56.6
161.559.50
801
666
753
116400GV
Ref.: 231.10.39.21.03.002
3233
Ref: 233.32.41.21.01.002
T081.420.97.057.01
16750
... almost each line in the example provided contains a certain ID
</code></pre>
<p>A small amount of false positives would not be a problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not totally sure if you need to <code>match</code> or <code>extract</code>, but <code>Ref\.?([ \d.]+)</code> will extract any digits after <code>Ref</code> (case insensitive), i.e.:</p>
<pre><code>import re
result = re.findall(r"Ref\.?([ \d.]+)", subject, re.IGNORECASE | re.MULTILINE)
</code></pre>
<hr/>
<pre><code>['16570', '16570', '167.021', '3527']
</code></pre>
<hr/>
<p><a href="https://regex101.com/r/SFasuC/3" rel="nofollow noreferrer">Regex Demo</a><br/>
<a href="https://www.jdoodle.com/embed/v0/Qtg" rel="nofollow noreferrer">Python Demo</a></p>
<hr/>
<p><strong>Regex Explanation</strong><br/>
<a href="https://i.stack.imgur.com/EXn3e.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/EXn3e.jpg"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>This ought to do the trick:</p>
<pre><code>import re
str = 'Explorer II Ref.16570 Box'
m = re.match('Ref\.[0-9]+', str)
if m:
    print(m.group(0)[4:])
</code></pre>
<p>For more info:</p>
<ul>
<li><a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html#re.search</a></li>
<li><a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html#match-objects</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Try the following code. It collects all the data after <code>Ref</code> till one of pre-defined stoppers. Stoppers are used because the question does not contain clear definition of what data is reference (<code>not always the same pattern</code>, <code>might be mixed with</code>, <code>for a human eye there is almost always</code>). I guess additional processing of matches is needed to extract actual references more accurately.</p>
<pre><code>import re

ref_re = re.compile('(?P&lt;ref_keyword&gt;Referenz|Ref\.|Ref)[ ]*(?P&lt;ref_value&gt;.*?)(?P&lt;ref_stopper&gt; - | / |,|\n)')

with open('1.txt', mode='r', encoding='UTF-8') as file:
    data = file.read()

for match in ref_re.finditer(data):
    print('key:', match.group('ref_keyword'))
    print('value:', match.group('ref_value'))
    # print('stopper:', match.group('ref_stopper'))
</code></pre>
<p>Output starts with the lines:</p>
<pre><code>key: Ref.
value: 16570 Box&amp;Papiere mit Revision
key: Ref.
value: 16570 Box&amp;Papiere mit Revision
key: Referenz
value: 216570 mit schwarzem Zifferblatt 
key: Referenz
value: 01 733 7653 4159-07 4 26 34EB 
key: Ref.
value: 167.021
key: Ref.
value: 3527
key: Referenz
value: 01 733 7653 4159-07 4 26 34EB
key: Ref.
value: 16570 Box&amp;Papiere mit Revision
</code></pre>
</div>
<span class="comment-copy">Do you need to <code>match</code> or <code>extract</code> ?</span>
<span class="comment-copy">The link you shared doesn't show any further examples. It would be better if you could share some more examples in your question.</span>
<span class="comment-copy">Probably you are looking for <code>Ref(?:erenz)?\. *(\d+)</code>. It shouldn't start with <code>^</code>. What you need is in 1st capturing group.</span>
<span class="comment-copy">@PedroLobito I am looking to extract the number. It is always one per line. The example shows the titles of several cases which are typical. Each contains a reference number.</span>
<span class="comment-copy"><i>...but for a human eye there is almost always such a number in each line identifiable.</i> no sir. Not unless you give us some rules.</span>
<span class="comment-copy">I want to extract the reference number. For a better explanation I took your regex, added some code and updated the link within the question. You can see that there are certain maches now, but with different color and not all ref ids are matche. E.g. L.3.674.4.50.0 is one I want to get and also 331.12.42.51.01.002. Will update the question in order to make it more clear.</span>
<span class="comment-copy">I am getting: &gt;&gt;&gt; print(m.group(0)[4:]) Traceback (most recent call last):   File "&lt;console&gt;", line 1, in &lt;module&gt; AttributeError: 'NoneType' object has no attribute 'group'</span>
<span class="comment-copy">Then the string likely doesn't have a match. I've updated my answer to account for this possibility.</span>
