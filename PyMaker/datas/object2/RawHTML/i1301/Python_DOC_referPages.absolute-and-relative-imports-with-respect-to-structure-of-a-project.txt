<div class="post-text" itemprop="text">
<p>I'm having a hard time understanding how imports work in Python 3.x. Suppose I have a project structure like this</p>
<pre><code>test
../foo
....foo1.py
....foo2.py
../bar
....bar1.py
</code></pre>
<p>My understanding is that <code>foo</code> and <code>bar</code> can be treated as packages and the <code>.py</code> files as modules.</p>
<p>I want to import <code>foo1</code> and <code>bar1</code> in <code>foo2</code>(which is the main script). How can that be done in both absolute and relative ways?</p>
<p>If I want to execute <code>foo2</code> after this, is this a bad project structure (maybe <code>foo2</code> should be placed elsewhere, but I do not want to place it at the root)?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>import importlib

name = input('Enter module name:')
importlib.import_module(name)
</code></pre>
<p>If you want more information on importlib, check <a href="https://docs.python.org/3/library/importlib.html#module-importlib" rel="nofollow noreferrer">https://docs.python.org/3/library/importlib.html#module-importlib</a></p>
</div>
<span class="comment-copy">The answers to the question <a href="https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time">Relative imports for the billionth time</a> might be helpful reading.</span>
