<div class="post-text" itemprop="text">
<p>Please forgive me for asking, but despite a ton of dictionary.update threads I could not find one that is an example of what I'm want to do.</p>
<p>I have a dictionary:</p>
<pre><code>dictionary = {1:'a', 2:'b', 3:'c', 4:'d'}
</code></pre>
<p>and I have a list:</p>
<pre><code>zip_codes = [25840, 26807, 24739, 26501]
</code></pre>
<p>I want to add each list item to the dictionary values. The result would look like:</p>
<pre><code>dictionary = {1:('a', 25840), 2:('b', 26807), 3:('c', 24739), 4:('d', 26501)}
</code></pre>
<p>The best result I've got is from trying something like this:</p>
<pre><code>for i in zip_codes:
    new_list = [(key,value, i) for key, value in dictionary.items()]

print(new_list)
</code></pre>
<p>But this returns the following: </p>
<pre><code>[(1, 'a', 26501), (2, 'b', 26501), (3, 'c', 26501), (4, 'd', 26501)]
</code></pre>
<p>Because I am looping through the list items, I get the last list item (26501) as the result. I'm stumped.  </p>
</div>
<div class="post-text" itemprop="text">
<p>I guess, the dictionary key is the order of which you want the zip codes to append?</p>
<pre><code>dictionary = {1:'a', 2:'b', 3:'c', 4:'d'}
zip_codes = [25840, 26807, 24739, 26501]

for i, zip_code in enumerate(zip_codes, 1):
    dictionary[i] = (dictionary[i], zip_code)

print(dictionary)
</code></pre>
<p>Which prints</p>
<pre><code>{1: ('a', 25840), 2: ('b', 26807), 3: ('c', 24739), 4: ('d', 26501)}
</code></pre>
<p>You might want to have a look at the Python docs about <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> or this question on StackOverflow about it <a href="https://stackoverflow.com/questions/22171558/what-does-enumerate-mean">What does enumerate mean?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>With a dict comprehension, you can enumerate through your dictionary and set the new values to the tuple of your existing values and the corresponding zip code:</p>
<pre><code>new_dict = {k:tuple([v,zip_codes[i]]) for i, (k,v) in enumerate(dictionary.items())}
&gt;&gt;&gt; new_dict
{1: ('a', 25840), 2: ('b', 26807), 3: ('c', 24739), 4: ('d', 26501)}
</code></pre>
<p>Or very similarly, you can zip the dictionary and the zip codes and iterate through that:</p>
<pre><code>new_dict = {k:tuple([v,z]) for z, (k,v) in zip(zip_codes,dictionary.items())}
&gt;&gt;&gt; new_dict
{1: ('a', 25840), 2: ('b', 26807), 3: ('c', 24739), 4: ('d', 26501)}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can just use dictionary.update, and, since you are using numbers as dictionary keys, you can use a regular old <code>for</code> loop and don't even have to use <code>enumerate</code>, but you have to remember that list indices start from 0 and your dictionary keys start from 1:</p>
<pre><code>dictionary = {1:'a', 2:'b', 3:'c', 4:'d'}
zip_codes = [25840, 26807, 24739, 26501]

for i in range(1, len(zip_codes)+1):
    d1 = {i:[dictionary[i], zip_codes[i-1]]}
    dictionary.update(d1)

print(dictionary)
&gt;&gt;&gt;{1: ['a', 25840], 2: ['b', 26807], 3: ['c', 24739], 4: ['d', 26501]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Change new_list to</p>
<pre><code>   new_list = {key: (value, i) for key, value in dictionary.items()}
</code></pre>
<p>such that you're making the key be... the key and the overall structure be a dictionary</p>
</div>
<span class="comment-copy">How do you know which zip code to associate with which key? Remember that a dict is not sorted. Furthermore here, keys do not match indices since they start at 1.</span>
