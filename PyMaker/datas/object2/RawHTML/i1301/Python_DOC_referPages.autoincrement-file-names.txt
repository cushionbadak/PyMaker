<div class="post-text" itemprop="text">
<p>This issue comes from <a href="https://stackoverflow.com/questions/49700561/incrementing-number-in-file-name-when-file-exists?noredirect=1&amp;lq=1">[here]</a>. I tried asking about this is the link provided but I was downvoted and told to ask my own question...so here I am.</p>
<p>I tried replicating the results for my own project and it didn't work.  when I try to save more than two files the script starts renaming each file instead of just the new ones I create:</p>
<pre><code>file_1_2_2_1_4_4_6_2_2.pdf
file1_3_2_3_3-6_5_1.pdf
file2_1_1_1-7_3_9.pdf
etc
</code></pre>
<p>instead of</p>
<pre><code>file_1.pdf
file_2.pdf
file_3.pdf
etc.
</code></pre>
<p>Any suggestions?</p>
<pre><code>def save_file():
    path = "/home/PycharmProjects/untitled/screening/"
    newPath = "/home/PycharmProjects/untitled/screening/finished"
    i = 1
    for root, dirs, files in os.walk(path):

        for name in files:
            base, extension = os.path.splitext(name)
            if not os.path.exists(os.path.join(newPath, base + extension)):
                oldfile = os.path.join(os.path.abspath(root), name)
                newfile = os.path.join(newPath, base + extension)
                os.rename(oldfile, newfile)
            else:
                oldfile = os.path.join(os.path.abspath(root), name)
                newfile = os.path.join(newPath, base + '_' + str(i) + extension)
                i += 1
                os.rename(oldfile, newfile)
</code></pre>
<p>Thank you in advance for you help!</p>
</div>
<div class="post-text" itemprop="text">
<p>The reason you get this behavior is that <code>os.walk</code> recurses into subdirs. Your target dir <strong>IS</strong> a subdir of your sourcedir - so you rename files from <em>source</em> to <em>target</em> and later <code>os.walk</code> into the <em>target</em> directory and rename some more into <em>itself</em> using the "renaming" strategy all the time because the file already exists.</p>
<hr/>
<p>Lenghty solution - most of it is creating file structures so this is a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> you can use. </p>
<p>See the documentation of <code>topdown=False</code> in <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">os.walk</a></p>
<p><strong>Create file structure</strong></p>
<pre><code>import os
files = [ f"file_{i:05}x.txt" for i in range(20)]

org = os.path.abspath("./dir1/dir2/")
new = os.path.abspath("./dir1/dir2/new/")
os.makedirs(new)
# create all in org
for f in files:
    with open(os.path.join(org,f),"w") as f:
        f.write(" ")
#create every 4th one in new 
for f in files[::4]:
    with open(os.path.join(new,f),"w") as f:
        f.write(" ")

for root,dirs,files in os.walk(org):
    print(root)
    print(" [d] ", dirs)
    print(" [f] ", sorted(files))
</code></pre>
<p>Output:</p>
<pre><code>/tmp/dir1/dir2
 [d]  ['new']
 [f]  ['file_00000x.txt', 'file_00001x.txt', 'file_00002x.txt', 'file_00003x.txt',
       'file_00004x.txt', 'file_00005x.txt', 'file_00006x.txt', 'file_00007x.txt', 
       'file_00008x.txt', 'file_00009x.txt', 'file_00010x.txt', 'file_00011x.txt', 
       'file_00012x.txt', 'file_00013x.txt', 'file_00014x.txt', 'file_00015x.txt', 
       'file_00016x.txt', 'file_00017x.txt', 'file_00018x.txt', 'file_00019x.txt']
/tmp/dir1/dir2/new
 [d]  []
 [f]  ['file_00000x.txt', 'file_00004x.txt', 'file_00008x.txt', 'file_00012x.txt', 
       'file_00016x.txt']
</code></pre>
<p><strong>Fixed method</strong></p>
<pre><code>def save_file(old_path, new_path):

    # topdown = False allows to modify the results to NOT recurse

    for root, dirs, files in os.walk(old_path, topdown=False):
        dirs = [] # do not recurse into subdirs ( whereto we copy the stuff )
        root_abs = os.path.abspath(root)
        new_abs = os.path.abspath(new_path)

        for name in sorted(files):  # sorting is convenience, not needed
            old_file = os.path.join(root_abs, name)
            new_file = os.path.join(new_abs, name)

            # fix renaming logic (simplified) - looks until a unique name is found
            i = 1
            base, extension = os.path.splitext(name)
            while os.path.exists(new_file):  
                # create a new name if it already exists 
                new_file = os.path.join(new_abs, f"{base}_{i}{extension}")
                i += 1 

            # do the copy over
            os.rename(old_file, new_file)
</code></pre>
<p><strong>Usage:</strong> </p>
<pre><code># uses the org/new from above
# org = os.path.abspath("./dir1/dir2/")
# new = os.path.abspath("./dir1/dir2/new/")

save_file(org,new)

for root,dirs,files in os.walk(org):
    print(root)
    print(" [d] ", dirs)
    print(" [f] ", sorted(files))
</code></pre>
<p>Output afterwards:</p>
<pre><code>/tmp/dir1/dir2
 [d]  ['new']
 [f]  []
/tmp/dir1/dir2/new
 [d]  []
 [f]  ['file_00000x.txt', 'file_00000x_1.txt', 'file_00001x.txt', 'file_00002x.txt', 
       'file_00003x.txt', 'file_00004x.txt', 'file_00004x_1.txt', 'file_00005x.txt', 
       'file_00006x.txt', 'file_00007x.txt', 'file_00008x.txt', 'file_00008x_1.txt', 
       'file_00009x.txt', 'file_00010x.txt', 'file_00011x.txt', 'file_00012x.txt', 
       'file_00012x_1.txt', 'file_00013x.txt', 'file_00014x.txt', 'file_00015x.txt', 
       'file_00016x.txt', 'file_00016x_1.txt', 'file_00017x.txt', 'file_00018x.txt', 
       'file_00019x.txt']
</code></pre>
<p>You see some files in <code>new</code> got the <code>_1</code> infix in it's name due to a same-named file was already in it.</p>
</div>
<span class="comment-copy">The code looks fine to me. What are the original files and the files that already exist in the destination directory?</span>
<span class="comment-copy">@Barmar - Thank you for your response. Right now there aren't any files in the directory.  I want to save into the directory by pushing a lot of files over. For example, I save a file "file.pdf" to the directory "finished".  Then I send another file over. Since "file.pdf" exists it should save the new file as "file_1.pdf". Instead it overwrites "file.pdf" and renames it as "file23.pdf".  Then when I try again with "file23.pdf" in the directory I get "file3.pdf", "file32.pdf", and "file2324.pdf".  I'm not sure where I need to change the code...</span>
<span class="comment-copy">I can't see any reason for that in this code. Try adding some <code>print</code> statements so you can see what it's doing.</span>
<span class="comment-copy">What is it supposed to do if both <code>file.pdf</code> and <code>file_1.pdf</code> already exist? There's nothing in the <code>else</code> block that checks whether the file with the numeric suffix already exists.</span>
<span class="comment-copy">The problem is the recursing nature of <code>os.walk</code> - you rename files from the parent dir into the subdirectory and later os.walk runs into the subdir and tries to copy each file into the same dir using the renaming strategy. See answer for how to avoid it.</span>
<span class="comment-copy">@JarrenPoulsen  <code>save_file('/home/PycharmProjects/untitled/screening/', '/home/PycharmProjects/untitled/screening/finished')</code>  should do it ...</span>
<span class="comment-copy">@ Patrick Artner - Thank you for your help! The issue I'm having now is the code you provided me creates pdf's but doesn't save the pdf I want. The project is I auto-generate randomized data, that data is automatically imputed into a fillable pdf, then I need to save that pdf in a specific folder incrementally. i'd prefer to save the pdf with a specific title but at this point all I want is a number system. I've tried various manipulations of your code to make it work but haven't had any luck. What do you suggest?</span>
<span class="comment-copy">@JarrenPoulsen comments are unsuited for code. probably best way would be to create a question showing how you create your "fillable pdf" and how you save it (all in python`?) - then you should be simply providing a new name for each iteration of the pdf ... yourOP does not show how you create the pdfs - it just was about moving stuff from one folder to the next without overwriting already existing files - which is what I gave as answer.</span>
<span class="comment-copy">@JarrenPoulsen see my answer @ your other question. HTH</span>
