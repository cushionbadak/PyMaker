<div class="post-text" itemprop="text">
<p>I am new with Python so sorry about my ugly code...
I need to create a program that allows me to rearange a list using a condition from another list.
I have a list with first names and a list with last names (sorting is important because each first name corresponds to eahc last names). The idea is to create a new list randomly picked up from the first names ones, the condition being that two last names cannot be side by side (and the last and first item of last names must be different)... not sure I am very clear here, hope you will get it by looking at my code.</p>
<p>Here is my code below (it works when removing the while loop and repeating it manually...). I am sure there is a way to do it very simply...</p>
<p>Any help on that?</p>
<p>Mel</p>
<p>My code:</p>
<pre><code>import random

first_names = ['an','bn','ji','au','jo','ki','ko','bo','mi','li']
last_names = ['A','A','A','R','R','R','C','C','C','C']
results =[]
results_names = []

#picking the first item
tirage = random.choice(list(enumerate(first_names)))
index = tirage[0]
pren = tirage[1]
results.append(pren)
results_names.append(last_names[index])
first_names.remove(pren)
last_names.pop(index)



while len(first_names) &gt; 0 :
    tirage = random.choice(list(enumerate(first_names)))
    index = tirage[0]
    pren = tirage[1]
    if last_names[index] != results_names[len(last_names)-1]:
        results.append(pren)
        results_names.append(last_names[index])
        first_names.remove(pren)
        last_names.pop(index)
        print(results)
        print(results_names)

    if len(resultats_noms) == 10:
        print('liste completed')

    if len(first_names)&gt;9 and last_names[index] == results_names[len(results_names)-1]:
        print('blocked, need to restart',len(results_names),'first names of 10')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can brute-force it, using <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer">random.shuffle()</a>:</p>
<pre><code>import random

def neighbouring(l):
    """Returns True if any 2 elements in l have the same last name."""
    return any( last == l[idx+1][1] for idx,(_,last) in enumerate(l[:-1]) )

first_names = ['an','bn','ji','au','jo','ki','ko','bo','mi','li']
last_names = ['A','A','A','R','R','R','C','C','C','C'] 

# combine first and last name to name-tuples
names = list(zip(first_names,last_names))  
print(names)


tries = 0
len_names = len(names)
# brute force: shuffle until neighbouring(names) == False
while neighbouring(names) and tries &lt; len_names*100: # abort after 100*listlenght tries
    random.shuffle(names)
    tries += 1

print(names)
</code></pre>
<p>Output:</p>
<pre><code># before
[('an', 'A'), ('bn', 'A'), ('ji', 'A'), ('au', 'R'), ('jo', 'R'), 
 ('ki', 'R'), ('ko', 'C'), ('bo', 'C'), ('mi', 'C'), ('li', 'C')]

# after
[('bn', 'A'), ('jo', 'R'), ('mi', 'C'), ('au', 'R'), ('ko', 'C'), 
 ('ji', 'A'), ('li', 'C'), ('an', 'A'), ('ki', 'R'), ('bo', 'C')]
</code></pre>
<p>To get the basic lists back:</p>
<pre><code>first_names, last_names = zip(*names)

print(list(first_names))
print(list(last_names))
</code></pre>
<p>Output:</p>
<pre><code>['ko', 'bn', 'ki', 'an', 'bo', 'jo', 'mi', 'ji', 'li', 'au']
['C', 'A', 'R', 'A', 'C', 'R', 'C', 'A', 'C', 'R']
</code></pre>
<hr/>
<p>Fix for endless run with names that can not be combined as wished:</p>
<pre><code>tries = 0
max_tries = len(names) * 100 
while neighbouring(names) and tries &lt; max_tries:
    random.shuffle(names)
    tries += 1

if tries == max_tries:
    print("Check the data - list might still have neighboring dupes after ", 
          tries, " shufflings")
else:
    print("Used ",tries," out of ",max_tries," shufflings")

print(names)
first_names, last_names = zip(*names)

print(list(first_names))
print(list(last_names))
</code></pre>
</div>
<span class="comment-copy">your second and third if statements are outside the while loop,have you tried to indent them ?</span>
<span class="comment-copy">Covert your sentences to English</span>
<span class="comment-copy">The while loop needs to randomly pick the next name; it needs code similar to (or maybe the same as) the section of code <i>beneath</i> the comment <code>#picking the first item</code>.</span>
<span class="comment-copy">sorry I am editing my code again, issues with the copy-paste stuff... yes you're right wwii</span>
<span class="comment-copy">You need to update your <code>index</code>.</span>
<span class="comment-copy">thank you so much... obvisouly so many things I didn't know...</span>
<span class="comment-copy">@Melwhowanttolearn  you need to be careful - if you input data that does not allow this configuration (f.e. only last_name is 'A') - this runs forever - you might want to add a counter to the while and a second break condition so it breaks after 50k tries or so ... hinted at it in the code. If you have bad luck it might still quit although a way would be possible ...</span>
<span class="comment-copy">ok thank you, it works perfectly fine with my real input data (which is a list of people who are going to celebrate christmas together and each must bring a present to another one, randomly but not to a member of their family).</span>
