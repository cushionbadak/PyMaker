<div class="post-text" itemprop="text">
<p>Given a list of sets, how would you test if all the sets share no data:</p>
<p>For example:</p>
<pre><code>[set((1,2)),set((3,)),set((4,)),set((5,))] would be True
</code></pre>
<p>but </p>
<pre><code>[set((1,2)),set((2,)),set((4,)),set((5,))] would be False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A quick way is to sum the sizes of the sets and compare it with the size of the union:</p>
<pre><code>def no_common_elements(sets):
    return sum(len(s) for s in sets) == len(set.union(*sets))

print(no_common_elements([set((1, 2)), set((3,)), set((4,)), set((5,))]))
# True
print(no_common_elements([set((1, 2)), set((2,)), set((4,)), set((5,))]))
# False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.isdisjoint" rel="nofollow noreferrer"><code>set.isdisjoint</code></a> with <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>itertools.combinations</code></a>:</p>
<pre><code>from itertools import combinations

L1 = [set((1,2)),set((3,)),set((4,)),set((5,))]
L2 = [set((1,2)),set((2,)),set((4,)),set((5,))]

def test_all_disjoint(L):
    return all(x.isdisjoint(y) for x, y in combinations(L, 2))

test_all_disjoint(L1)  # True
test_all_disjoint(L2)  # False
</code></pre>
<p>You may see <a href="https://stackoverflow.com/q/45112928/9209546">performance benefits</a> using <code>set.isdisjoint</code> over <code>set.union</code> / <code>set.intersection</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is an option which uses <code>numpy</code> and <code>pandas</code>:</p>
<pre><code>import numpy as np
import pandas as pd


def shares_no_data(list_of_sets):
    # convert the list of sets into a 1d numpy array
    array = np.hstack(list(map(list, list_of_sets)))

    # no data will be shared if we have the same number of unique values 
    # as the number of items in the array
    return len(pd.unique(array)) == len(array)
</code></pre>
<p>We can test with the following:</p>
<pre><code>l1 = [set((1,2)),set((3,)),set((4,)),set((5,))]
l2 = [set((1,2)),set((2,)),set((4,)),set((5,))]

shares_no_data(l1)
# returns True

shares_no_data(l2)
# returns False
</code></pre>
</div>
