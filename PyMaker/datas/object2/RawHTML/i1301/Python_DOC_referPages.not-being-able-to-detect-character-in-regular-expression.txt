<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/9589074/regex-should-hyphens-be-escaped">Regex - Should hyphens be escaped? [duplicate]</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/35536590/do-i-need-to-escape-dash-character-in-regex">Do I need to escape dash character in regex? [duplicate]</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to test whether a character is a special character or not. </p>
<p>It fails for '-' character when I write the following code:</p>
<pre><code>import re

s = '-'
regex = re.compile('[!@#$%^&amp;*()-+]')

if regex.search(s) == None:
    print("Not found")
else:
    print("Found")
</code></pre>
<p><strong>Output&gt;&gt;Not found</strong></p>
<p>However, if I change the position of the '-' character in the pattern as follows (line 3 of code), it works correctly</p>
<pre><code>import re 

s = '-'
regex = re.compile('[!@#$%^&amp;*()+-]')

if regex.search(s) == None:
    print("Not found")
else:
    print("Found")
</code></pre>
<p><strong>Output&gt;&gt;Found</strong></p>
<p>What is causing this difference and how can I make sure that the characters will be detected?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>-</code> is treated as a special character <em>if</em> it is not the last or the first character in a range and not escaped. So:</p>
<ul>
<li><code>[-19]</code> or <code>[19-]</code> or <code>[1\-9]</code> is <code>-</code>, <code>1</code> or <code>9</code>, but </li>
<li><code>[1-9]</code> is anything between <code>1</code> and <code>9</code>, inclusive, but not <code>-</code> itself.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><code>'-'</code> in Regex means between. 
So the first expression says </p>
<pre><code>regex = re.compile('[!@#$%^&amp;*()-+]')
</code></pre>
<p>Match characters between ')' and '+'</p>
<p><a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">https://docs.python.org/2/library/re.html</a></p>
</div>
<span class="comment-copy">I'll give you a hint: look at the characters in the character class <code>[a-z]</code>. It's more than three characters long!</span>
<span class="comment-copy">Try escaping characters like re.compile('[\-]')</span>
<span class="comment-copy">Got it. It should be either the first or the last character in the range. Also works with an escape character: regex = re.compile('[!@#$%^&amp;*()\-+]'). Thanks!</span>
<span class="comment-copy">Hi,  please take a look at the two questions I've marked. This is a common issue that has been asked before. If they don't address your problem please add more details to your question.</span>
<span class="comment-copy">From <a href="https://docs.python.org/3/library/re.html?highlight=re#regular-expression-syntax" rel="nofollow noreferrer">the docs</a>: "Ranges of characters can be indicated by giving two characters and separating them by a <code>'-'</code>, for example <code>[a-z]</code> will match any lowercase ASCII letter, <code>[0-5][0-9]</code> will match all the two-digits numbers from <code>00</code> to <code>59</code>, and <code>[0-9A-Fa-f]</code> will match any hexadecimal digit. If <code>-</code> is escaped (e.g. <code>[a\-z]</code>) or if itâ€™s placed as the first or last character (e.g. <code>[-a]</code> or <code>[a-]</code>), it will match a literal <code>'-'</code>."</span>
