<div class="post-text" itemprop="text">
<p>I'm a starting programmer, and I can't figure out how to remove the brackets and the commas from the values I'm pulling out of a dictionary with lists. What did I miss? </p>
<p>From what I know, a for loop normally removes them, but doesn't do it now.</p>
<p>simplified code:</p>
<pre><code>dict = { 
    'name1': ['python', 'c', 'java'],
    'name2': ['c.'],
    'name3': ['ruby', 'go'],
    'name4': ['javascript', 'python'],
    'name5': [],
    }

for k, v in dict.items():
    if len(v) ==  1:        
        print(str(k).title() + "'s favorite language is " + str(v).title() + "\n")
    elif len(v) &gt; 1:
        print(str(k).title() + "'s favorite languages are: \n" + str(v).title() + "\n")
    elif len(v) &lt; 1 :
        print(str(k).title() + " does not have a favorite language")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">join</a> and <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a>:</p>
<pre><code>dict = {
    'name1': ['python', 'c', 'java'],
    'name2': ['c.'],
    'name3': ['ruby', 'go'],
    'name4': ['javascript', 'python'],
    'name5': [],
    }

for k, v in dict.items():
    if len(v) == 1:
        print(str(k).title() + "'s favorite language is " + ', '.join(map(str.title, v)) + "\n")
    elif len(v) &gt; 1:
        print(str(k).title() + "'s favorite languages are: \n" + ', '.join(map(str.title, v)) + "\n")
    elif len(v) &lt; 1 :
        print(str(k).title() + " does not have a favorite language")
</code></pre>
<p><strong>Output</strong></p>
<pre><code>Name3's favorite languages are: 
Ruby, Go

Name5 does not have a favorite language
Name2's favorite language is C.

Name4's favorite languages are: 
Javascript, Python

Name1's favorite languages are: 
Python, C, Java
</code></pre>
<p>The idea is to apply <code>str.title</code> to each string in the list of values (using map) and then join those strings by comma and whitespace (<code>', '</code>). Note that you can change the string of the join to fit your needs.</p>
</div>
<div class="post-text" itemprop="text">
<p>While Daniel's answer is more elegant and complete, I want to address your question about why the 'for' function did not split the language names (remove "," and "]"). The first 'for' function in your code iterates through the dictionary. If you wanted to just use 'for' functions, you would need to reuse it again for each persons's entry to separate the languages. Like code sample below.</p>
<pre><code>dict = { 
'name1': ['python', 'c', 'java'],
'name2': ['c.'],
'name3': ['ruby', 'go'],
'name4': ['javascript', 'python'],
'name5': [],
}

for k, v in dict.items():
    if len(v) ==  1:        
        print(str(k).title() + "'s favorite language is " + str(v).title() + "\n")
    elif len(v) &gt; 1:
        print(str(k).title() + "'s favorite languages are:")
        for language in v:
            print(language + ", ")
        print("")
    elif len(v) &lt; 1 :
        print(str(k).title() + " does not have a favorite language")
</code></pre>
</div>
<span class="comment-copy">perfect! thanks a bunch.</span>
<span class="comment-copy">@Dtuned, Glad I could help! Please consider marking the answer as accepted if you found it helpful.</span>
<span class="comment-copy">a very nice and detailed answer. this makes it way more 'readable' for starters. thanks!</span>
