<div class="post-text" itemprop="text">
<p>I am working on a neural network and when i try to shuffle the two numpy.ndarray i get this error. I tried rechecking the shuffle function format and cannot find any faults with that. Please help</p>
<pre><code>train_images,train_labels = shuffle(train_images,train_labels)
TypeError                                 
Traceback (most recent call last)
&lt;ipython-input-8-b3f4173331ac&gt; in &lt;module&gt;
 18     print("Training the Network")
 19     for i in range(epoch):
 20     --&gt; train_images,train_labels = shuffle(train_images,train_labels)
 21         for offset in range (0,no_eg,batch_size):
 22             end = offset+batch_size

/usr/lib/python3.5/random.py in shuffle(self, x, random)
275             for i in reversed(range(1, len(x))):
276                 # pick an element in x[:i+1] with which to exchange x[i]
277            --&gt;  j = _int(random() * (i+1))
278                 x[i], x[j] = x[j], x[i]
279 

TypeError: 'numpy.ndarray' object is not callabl
</code></pre>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Have a look at the docs of <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer">random.shuffle(x[, random])</a></p>
<blockquote>
<p>The optional argument random is a 0-argument function returning a
  random float in [0.0, 1.0); by default, this is the function random()</p>
</blockquote>
<p>in your case you pass train_labels, which, according to error message is numpy.ndarray, not function</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two functions named <code>shuffle</code> that you may want to use, and none of them works the way you expect.</p>
<p><code>random.shuffle(x, random=None)</code> shuffles list <code>x</code> using function <code>random</code>.</p>
<p><code>numpy.random.shuffle(x)</code> shuffles a NumPy array <code>x</code>.</p>
<p>Both functions can shuffle only one array at a time, but you want to shuffle two arrays, and you want to shuffle them consistently. Consider building a pandas Series, shuffling ("sampling") the Series, and then splitting it into values and labels again:</p>
<pre><code>import pandas as pd
series = pd.Series(train_images, index=train_labels)
shuffled = series.sample(series.size)
train_images_shuffled = shuffled.values
train_labels_shuffled = shuffled.index
</code></pre>
</div>
