<div class="post-text" itemprop="text">
<p>How to make it raise an exception on setting a misspelled fields in a <code>@dataclass</code>-decorated Python class?</p>
<p>I want a practical way to do this. Do I need to write my own decorator instead?</p>
<pre><code>@dataclass
class C(object):
    x: int = 1

obj = C()
obj.y = 2  # should raise an exception
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One straightforward way (which works with <em>any</em> class) is to define <code>__slots__</code>:</p>
<pre><code>In [1]: from dataclasses import dataclass

In [2]: @dataclass
   ...: class Foo:
   ...:     __slots__ = 'bar','baz'
   ...:     bar: int
   ...:     baz: int
   ...:

In [3]: foo = Foo(42, 88)

In [4]: foo.biz = 10
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-4-d52b60444257&gt; in &lt;module&gt;()
----&gt; 1 foo.biz = 10

AttributeError: 'Foo' object has no attribute 'biz'
</code></pre>
<p>The purpose of slots is to serve as a small optimization. It allows the instances of the class to use a symbol table instead of a <code>dict</code> as the namespace of the class. It increases the speed of attribute access slightly, and can significantly improve the per-instance memory usage (because the instance doesn't carry around a <code>dict</code> underneath the hood), however, it disallows dynamic attribute setting.</p>
<p>This is actually my favorite <em>feature</em> of <code>__slots__</code>.</p>
<p>Note, you must take care when using inheritance with slots, at least, if you want subclasses to retain the slots behavior.</p>
</div>
<span class="comment-copy">Could you provide an example?</span>
<span class="comment-copy">As long as you don't need to mutate your classes after creation, setting <code>@dataclass(frozen=True)</code> also works, and still allows you to set default values.</span>
<span class="comment-copy">I've edited the answer to show that it does not work</span>
<span class="comment-copy">@porton yes, because you cannot use a class (static) variable with slots. If you want a <i>default value</i> use a default factory</span>
<span class="comment-copy">@porton <a href="https://docs.python.org/3/library/dataclasses.html#dataclasses.field" rel="nofollow noreferrer">docs.python.org/3/library/dataclasses.html#dataclasses.field</a></span>
