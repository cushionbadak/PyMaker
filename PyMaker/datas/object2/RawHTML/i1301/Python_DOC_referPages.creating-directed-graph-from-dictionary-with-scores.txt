<div class="post-text" itemprop="text">
<p>I have this dictionary:</p>
<pre><code>d1={
'a':['b','c','b'],
'b':['a','d','e']
}
</code></pre>
<p>it is sort of a directed graph. For example, d1['a'] points twice to 'b', and once to 'c' (see graph below)</p>
<p><a href="https://i.stack.imgur.com/MzTXY.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/MzTXY.jpg"/></a></p>
<p>What I want is to create two dictionaries out of d1 - pointing_to and pointed_by with values describing how many times they are pointing to or pointed by, respectively. </p>
<pre><code>pointing_to={
'a':{'b':2,'c':1},
'b':{'a':1,'d':1,'e':1},
}

pointed_by={
'a':{'b':1},
'b':{'a':2},
'c':{'a':1},
'd':{'b':1},
'e':{'b':1}
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use some <a href="https://docs.python.org/3/library/collections.html" rel="nofollow noreferrer"><code>collections</code></a> utils to get to your output:</p>
<pre><code>from collections import Counter, defaultdict

d1 = {'a': ['b', 'c', 'b'], 'b': ['a', 'd', 'e']}

pointed_to = {k: Counter(v) for k, v in d1.items()}
pointed_from = defaultdict(dict)
for k, v in pointed_to.items():
    for k_, v_ in v.items():
        pointed_from[k_][k] = v_

# pointed_to
{'a': Counter({'b': 2, 'c': 1}), 
 'b': Counter({'d': 1, 'a': 1, 'e': 1})}

# pointed_from
defaultdict(&lt;class 'dict'&gt;, {'d': {'b': 1}, 
                             'a': {'b': 1}, 
                             'c': {'a': 1}, 
                             'b': {'a': 2}, 
                             'e': {'b': 1}})
</code></pre>
<p>Note that both <code>Counter</code> and <code>deafultdict</code> are subclasses of <code>dict</code>, so these two can, for all intents and purposes, be used as your desired output dicts.</p>
<p>If you really want <code>dict</code> objects, you can easily do that:</p>
<pre><code>pointed_to = {k: dict(v) for k, v in pointed_to.items()}
pointed_from = dict(pointed_from)
</code></pre>
</div>
<span class="comment-copy">Where do you get the <code>2</code> from? <code>{'b','c','b'}</code> is the same as <code>{'b','c'}</code>, so counting won't help.</span>
<span class="comment-copy">@schwobaseggl , in d1['a'], it has 2 b's inside, so, in pointing_to 'a':{'b':2,...}. And image corresponds to d1. Pointing_to is basically count of number of values in d1</span>
<span class="comment-copy">@EricKlaus <code>{'b','c','b'}</code> is a <a href="https://www.python-course.eu/sets_frozensets.php" rel="nofollow noreferrer"><code>set</code></a>, which in Python does not contain duplicate values.</span>
<span class="comment-copy">@Ajax1234, my bad. Edited the post. Thanks</span>
<span class="comment-copy">Thanks, is it possible to make pointed_to and pointed_from dictionaries? I tried dict(pointed_to), it didn't work. I just want to eliminate 'Counter' term there</span>
<span class="comment-copy">@EricKlaus As stated in the answer, the <code>Counter/defaultdict</code> objects <b>are</b> dictionaries (don't get distracted by their string representation). You can, of course, cast them if you want. Added that.</span>
