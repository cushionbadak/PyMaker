<div class="post-text" itemprop="text">
<p><strong>So this is the original list:</strong></p>
<pre><code>ticket_list=

["AI567:MUM:LON:014",

"AI077:MUM:LON:056",

"BA896:MUM:LON:067",

"SI267:MUM:SIN:145",

"AI077:MUM:CAN:060",

"SI267:BLR:MUM:148",

"AI567:CHE:SIN:015",

"AI077:MUM:SIN:050",

"AI077:MUM:LON:051",

"SI267:MUM:SIN:146"]
</code></pre>
<p>I'm trying to generate a sublist out of this which looks like the following:</p>
<pre><code>['AI077:077', 'AI077:077', 'AI077:077', 'AI077:077', 'AI567:567', 'AI567:567', 'BA896:896', 'SI267:267', 'SI267:267', 'SI267:267']
</code></pre>
<p>I have <strong>successfully</strong> generated the list, now I'm trying to compute the <strong>sum of the sorted list ** based on the values after **":"</strong> for each flight_no</p>
<p><strong>Expected output:</strong></p>
<pre><code>[AI077:308, AI567:1134, BA896:896, SI267:801]
</code></pre>
<p><strong>My Code:</strong></p>
<pre><code>def find_passengers_per_flight():
    flight_name=[]
    flight_passenger=[]
   """
    In the list, details should be provided in the format:
    [flight_no:no_of_passengers, flight_no:no_of_passengers, etc.]."""


    for t in ticket_list:
        res=''
        res = re.search(r"[A-Z]*\d*|[a-z]*\d*",t).group()

        flight_name.append(res)

    for i in flight_name:

        new_str=''
        res2 = re.search(r"\d+",i).group()
        new_str+=':'+res2
        flight_passenger.append(i+new_str)


    print(sorted(flight_passenger))
</code></pre>
<p><strong>My Output:</strong></p>
<pre><code>['AI077:077', 'AI077:077', 'AI077:077', 'AI077:077', 'AI567:567', 'AI567:567', 'BA896:896', 'SI267:267', 'SI267:267', 'SI267:267']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you really want to summ up flight-numbers, you can create tuples from your raw data directly and summ them into a dict: (using a defaultdict would be better)</p>
<pre><code>t = ['AI077:077', 'AI077:077', 'AI077:077', 'AI077:077', 'AI567:567',
     'AI567:567', 'BA896:896', 'SI267:267', 'SI267:267', 'SI267:267']

trimmed = [(y[0:5],int(y[6:])) for y in t]

summs = {}
for flight,price in trimmed:
    summs.setdefault(flight,0)
    summs[flight] += price

print(summs) 
</code></pre>
<p>Output:</p>
<pre><code>{'BA896': 896, 'SI267': 801, 'AI077': 308, 'AI567': 1134}
</code></pre>
<hr/>
<p><strong>What I find a bit curious though is, that you seem to have used the flightnumber from the flightsname as passenger count - should you not count the sold tickets per flight?</strong></p>
<hr/>
<p>Counting tickets:</p>
<pre><code>               #flight : from : to : seat-number
ticket_list= ["AI567:MUM:LON:014", "AI077:MUM:LON:056", "BA896:MUM:LON:067",
              "SI267:MUM:SIN:145", "AI077:MUM:CAN:060", "SI267:BLR:MUM:148", 
              "AI567:CHE:SIN:015", "AI077:MUM:SIN:050", "AI077:MUM:LON:051",
              "SI267:MUM:SIN:146"]

from collections import Counter
c = Counter ((t.split(":")[0] for t in ticket_list))

print(c)
</code></pre>
<p>Output:</p>
<pre><code># sold tickets per flight
Counter({'AI077': 4, 'SI267': 3, 'AI567': 2, 'BA896': 1})
</code></pre>
<hr/>
<p>You can also use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">groupby from itertools</a> on a sorted list to group your flights and evaluate them like so:</p>
<pre><code>from itertools import groupby

# if you need the tickets as well:
grp = groupby(sorted(ticket_list), lambda x:x[:6])

for g in grp:
    key, seats = g
    seats = list(seats)
    print(f"Flight: {key} has sold seats {len(seats)}: {','.join( x.split(':')[-1] for x in seats)}")

Flight: AI077: has sold seats 4: 060,051,056,050
Flight: AI567: has sold seats 2: 015,014
Flight: BA896: has sold seats 1: 067
Flight: SI267: has sold seats 3: 148,145,146
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It'd be easier to use <code>defaultdict</code>, then if you insist on having the output as a list convert it later:</p>
<pre><code>from collections import defaultdict

l = ['AI077:077', 'AI077:077', 'AI077:077', 'AI077:077', 'AI567:567', 'AI567:567', 'BA896:896', 'SI267:267', 'SI267:267', 'SI267:267']
d = defaultdict(int)

for e in l:
    name, number = e.split(':')
    number = int(number)
    d[name] += number

print(d)
#  defaultdict(&lt;class 'int'&gt;, {'AI077': 308, 'AI567': 1134, 'BA896': 896, 'SI267': 801})
print(['{}:{}'.format(k, v) for k, v in d.items()])
#  ['AI077:308', 'AI567:1134', 'BA896:896', 'SI267:801']
</code></pre>
<p>If you are using Python &lt;= 3.6 it is not guaranteed that the output will always be in the same order, and I assumed that it does not matter.</p>
</div>
<div class="post-text" itemprop="text">
<p>It appears as though you are adding together the flight numbers, however I would think you would want to add the passenger totals together, like so:</p>
<pre><code>import re

tickets = {}
for i in ticket_list:
    data = re.findall(r'(^[A-Z]+[0-9]+).*?([0-9]+$)', i)[0]
    if data[0] in tickets.keys():
        tickets[data[0]] += int(data[1])
    else:
        tickets[data[0]] = int(data[1])
</code></pre>
<p>Therefore <code>tickets</code> returns:</p>
<pre><code>{'AI567': 29, 'AI077': 217, 'BA896': 67, 'SI267': 439}
</code></pre>
</div>
<span class="comment-copy">Thanks, the idea of slicing looks really cool. However, the values aren't visible when converted to a list</span>
<span class="comment-copy">@HackersInside  what values? the numbers from the flight? why are you adding flightnumbers?</span>
<span class="comment-copy">Thank you so much for your efforts, i guess this is what i wanted.</span>
<span class="comment-copy">Thanks for your answer. I like the use of defaultdict here. but when I'm trying to convert it back to a list the values disappear. Any suggestions on how i can preserve the values while converting it to a list?</span>
<span class="comment-copy">@Hackersinside I've used the data you provided in your question. You are either using a different input or have wrongly copy-pasted the code from my answer.</span>
