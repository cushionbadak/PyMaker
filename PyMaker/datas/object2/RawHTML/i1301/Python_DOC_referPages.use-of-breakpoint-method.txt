<div class="post-text" itemprop="text">
<p>I am new to python and am unsure of how the breakpoint method works. Does it open the debugger for the IDE or some built-in debugger?</p>
<p>Additionally, I was wondering how that debugger would be able to be operated.</p>
<p>For example, I use Spyder, does that mean that if I use the breakpoint() method, Spyder's debugger will open, through which I could the Debugger dropdown menu, or would some other debugger open?</p>
<p>I would also like to know how this function works in conjunction with the breakpointhook() method.</p>
</div>
<div class="post-text" itemprop="text">
<p>No, debugger <em>will not open itself automatically</em> as a consequence of setting a breakpoint.</p>
<p>So you have first <em>set a breakpoint (or more of them)</em>, and then <em>manually launch a debugger</em>.</p>
<p>After this, the debugger will perform your code as usually, but *stops performing instructions when it reach a breakpoint - the instruction <em>at the breakpoint itself it will not perform</em>. It will pause <em>just before it</em>, given you an opportunity to perform some debug tasks, as</p>
<ul>
<li><em>inspect</em> variable values,</li>
<li><em>set</em> variables manually to <em>other values</em>,</li>
<li><em>continue</em> performing instructions <em>step by step</em> (i. e. <em>only the next instruction</em>),</li>
<li><em>continue</em> performing instructions <em>to the next breakpoint</em>,</li>
<li><em>prematurely</em> stop debugging your program.</li>
</ul>
<p>This is the <em>common scenario for all debuggers of all programming languages (and their IDEs).</em></p>
<p>For IDEs, launching a debugger will </p>
<ul>
<li>enable or reveal debugging instructions in their menu system,</li>
<li>show a toolbar for them and will,</li>
<li>enable hot keys for them.</li>
</ul>
<p><em>Without setting at least one breakpoint, most debuggers perform the whole program without a pause (as launching it without a debugger), so you will have no opportunity to perform any debugging task.</em></p>
<p>(Some IDEs have an option to launch a debugger in the <em>"first instruction, then a pause"</em> mode, so you <em>need not set breakpoints in advance</em> in this case.)</p>
<hr/>
<p>Yes, the <code>breakpoint()</code> built-in function (introduced in Python 3.7) stops executing your program, enters it in the debugging mode, and you may use Spyder's debugger drop-down menu.</p>
<p>(It isn't a <em>Spyders' debugger</em>, only <em>its drop-down menu</em>; the used debugger will be still the <code>pdb</code>, i. e. the default <strong>P</strong>ython <strong>D</strong>e<strong>B</strong>ugger.)</p>
<p>The connection between the <code>breakpoint()</code> built-in function and the <code>breakpointhook()</code> function (from the <code>sys</code> built-in module) is very straightforward - <em>the first one directly calls the second one.</em> </p>
<p>The natural question is <em>why we need two functions with the exactly same behavior?</em></p>
<p>The answer is in the <em>design</em> - the <code>breakpoint()</code> function may be changed <em>indirectly</em>, by changing the behavior of the <code>breakpointhook()</code> function.</p>
<p>For example, IDE creators may change the behavior of the <code>breakpointhook()</code> function so that it will launch <em>their own debugger</em>, not the <code>pdb</code> one.</p>
</div>
<div class="post-text" itemprop="text">
<p>The default behavior of the <code>breakpoint()</code> builtin is to open the <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer">pdb</a> debugger at that point.</p>
<p>That is, by default the line</p>
<pre><code>breakpoint()
</code></pre>
<p>Should behave identically to</p>
<pre><code>import pdb; pdb.set_trace()
</code></pre>
<p>The behavior can be customized (e.g. to open a different debugger) by modifying <code>sys.breakpointhook</code>. Generally the only time you would do this is if you were implementing a debugger or something that functioned like a debugger. If you're running code from an IDE, the IDE itself should modify <code>sys.breakpointhook</code> so that it opens the IDE debugger. (I don't know if all Python IDEs actually do this, but they should.)</p>
<p>For more information, including the rationale of why this function was added, see the <a href="https://www.python.org/dev/peps/pep-0553/" rel="nofollow noreferrer">PEP 553 proposal</a>. The actual implementation was landed into Python 3.7.</p>
</div>
<span class="comment-copy">Thanks, I was hoping you could also answer the [updated] latter part of the question.</span>
<span class="comment-copy">This answer is about breakpoints in general, but I think the question is actually about the <code>breakpoint()</code> builtin from <a href="https://www.python.org/dev/peps/pep-0553/" rel="nofollow noreferrer">PEP 553</a>.</span>
<span class="comment-copy">@H.Khan, I probable misunderstood your original question, so after your update I updated my answer, too.</span>
