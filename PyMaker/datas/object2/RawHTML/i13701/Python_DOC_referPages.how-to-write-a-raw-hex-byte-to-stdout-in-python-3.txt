<div class="post-text" itemprop="text">
<p>How do you get Python 3 to output raw hexadecimal byte? I want to output the hex <code>0xAA</code>.</p>
<p>If I use <code>print(0xAA)</code>, I get the ASCII '170'.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>print()</code> takes <em>unicode text</em> and encodes that to an encoding suitable for your terminal.</p>
<p>If you want to write raw bytes, you'll have to write to <code>sys.stdout.buffer</code> to bypass the <a href="https://docs.python.org/3/library/io.html#io.TextIOBase" rel="noreferrer"><code>io.TextIOBase</code> class</a> and avoid the encoding step, and use a <code>bytes()</code> object to produce bytes from integers:</p>
<pre><code>import sys

sys.stdout.buffer.write(bytes([0xAA]))
</code></pre>
<p>This won't include a newline (which is normally added when using <code>print()</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>The solution was to first create a <code>bytes</code> object:</p>
<pre><code>x = bytes.fromhex('AA')
</code></pre>
<p>And then output this to <code>stdout</code> using the buffered writer</p>
<pre><code>sys.stdout.buffer.write(x)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use the hex-byte escape sequence ("\x") in a bytestring, specifying the <code>sys.stdout.buffer.write()</code> method:</p>
<pre><code>$ python -c 'import sys; sys.stdout.buffer.write(b"\x74\x68\x65\x73\x65\x20\x61\x72\x65\x20\x72\x61\x77\x20\x62\x79\x74\x65\x73\x21\xde\xad\xbe\xef")'
</code></pre>
<p>will output on your terminal:</p>
<pre><code>these are raw bytes!ޭ��%
</code></pre>
<p>and inspecting with <code>xxd</code>:</p>
<pre><code>$ python -c 'import sys; sys.stdout.buffer.write(b"\x74\x68\x65\x73\x65\x20\x61\x72\x65\x20\x72\x61\x77\x20\x62\x79\x74\x65\x73\x21\xde\xad\xbe\xef")' | xxd
00000000: 7468 6573 6520 6172 6520 7261 7720 6279  these are raw by
00000010: 7465 7321 dead beef                      tes!....
</code></pre>
</div>
