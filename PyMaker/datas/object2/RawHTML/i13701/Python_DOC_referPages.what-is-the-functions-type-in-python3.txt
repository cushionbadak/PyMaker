<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/624926/how-do-i-detect-whether-a-python-variable-is-a-function">How do I detect whether a Python variable is a function?</a>
<span class="question-originals-answer-count">
                    22 answers
                </span>
</li>
</ul>
</div>
<p>in python 3 every things are objs , functions too. functions are first-class citizens that mean we can do like other variables.</p>
<pre><code>&gt;&gt;&gt; class x:
    pass

&gt;&gt;&gt; 
&gt;&gt;&gt; isinstance(x,type)
True
&gt;&gt;&gt; type(x)
&lt;class 'type'&gt;
&gt;&gt;&gt; 
&gt;&gt;&gt; x=12
&gt;&gt;&gt; isinstance(x,int)
True
&gt;&gt;&gt; type(x)
&lt;class 'int'&gt;
&gt;&gt;&gt; 
</code></pre>
<p>but functions are diffrent ! :</p>
<pre><code>&gt;&gt;&gt; def x():
    pass

&gt;&gt;&gt; type(x)
&lt;class 'function'&gt;
&gt;&gt;&gt; isinstance(x,function)
Traceback (most recent call last):
  File "&lt;pyshell#56&gt;", line 1, in &lt;module&gt;
    isinstance(x,function)
NameError: name 'function' is not defined
&gt;&gt;&gt;
</code></pre>
<p>why error ? what is python functions type ?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/types.html#types.FunctionType"><code>types.FunctionType</code></a>:</p>
<pre><code>&gt;&gt;&gt; def x():
...     pass
...
&gt;&gt;&gt; import types
&gt;&gt;&gt; isinstance(x, types.FunctionType)
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>@falsetru's answer is correct for function's type.</p>
<p>But if what you are looking for is to check whether a particular object can be called using <code>()</code> , then you can use the built-in function <a href="https://docs.python.org/3/library/functions.html#callable" rel="nofollow"><code>callable()</code></a>. Example -</p>
<pre><code>&gt;&gt;&gt; def f():
...  pass
...
&gt;&gt;&gt; class CA:
...     pass
...
&gt;&gt;&gt; callable(f)
True
&gt;&gt;&gt; callable(CA)
True
&gt;&gt;&gt; callable(int)
True
&gt;&gt;&gt; a = 1
&gt;&gt;&gt; callable(a)
False
</code></pre>
</div>
