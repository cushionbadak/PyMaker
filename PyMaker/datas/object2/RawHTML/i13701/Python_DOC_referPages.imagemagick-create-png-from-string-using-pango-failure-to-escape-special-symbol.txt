<div class="post-text" itemprop="text">
<p>I'm using convert and pango to create a png file from a string, where the string is C language code.</p>
<p>My conversion fails on many files but not all. It's difficult to track down the exact cause of the failure, but it would appear as if the string contains characters that are being interpreted by pango.</p>
<p>Is there a way to escape all tokens which can cause an error with Pango?</p>
<p>I'm calling convert like this via Python subprocess:</p>
<pre><code>cmd = """convert pango:'&lt;span foreground="black" background="white"&gt;"%s"&lt;/span&gt;' outfile.png""" % C_string
</code></pre>
<p>TIA !</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.PIPE" rel="nofollow"><code>subprocess.PIPE</code></a> with <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow"><code>subprocess.Popen.communicate</code></a>, and not waste time attempting to mix python, shell, and pango escape sequences. Pango should be escaped by glib, or cgi.</p>
<pre class="lang-py prettyprint-override"><code>import glib
from subprocess import Popen, PIPE

cmd = 'convert pango:- outfile.png'

pid = Popen(cmd,
            stdin=PIPE,
            stdout=PIPE,
            stderr=PIPE,
            shell=True)
text_node = glib.markup_escape_text(C_string) # or cgi.escape(C_string)
pango = '&lt;span foreground="black" background="white"&gt;{0}&lt;/span&gt;'.format(text_node)
stdout, stderr = pid.communicate(pango)
</code></pre>
</div>
<span class="comment-copy">Just an idea, but try putting your text in a file called <code>file.txt</code> and then using <code>convert pango:@file.txt outfile.png</code> and that will prevent any mad (unexpected) interpretations of your characters by the shell.</span>
<span class="comment-copy">Thank you will try since it's just a line or two...</span>
<span class="comment-copy">I'd recommend you go with Eric's answer since it is much the same thing but all <i>"on a plate"</i> for you.</span>
<span class="comment-copy">Nice work, as usual!</span>
<span class="comment-copy">Excited to try. Cheers !</span>
