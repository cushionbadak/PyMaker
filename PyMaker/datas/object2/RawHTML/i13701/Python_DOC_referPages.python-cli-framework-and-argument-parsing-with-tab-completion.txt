<div class="post-text" itemprop="text">
<p>I am looking for a good module that is already out there for parsing arguments on custom CLI interfaces.  If you can imagine there is a CLI that gives you a prompt:</p>
<pre><code>framework&gt; commands go here....
</code></pre>
<p>It starts to get tedious when you add in arguments, example:</p>
<pre><code>framework&gt; command &lt;argument1&gt; &lt;argument2&gt; ...
</code></pre>
<p>I'd like to know if there is any sort of module that will not only make it easy to create these CLI interfaces, but one that has tab completion for each argument in a command chain.  I'm tired of reinventing the wheel each time I create something like this!</p>
<pre><code>framework&gt; comma&lt;tab&gt;
framework&gt; command arg&lt;tab&gt;
framework&gt; command argument parame&lt;tab&gt;
framework&gt; command argument parameter
</code></pre>
<p>You get the idea.  If there is no module already out there for this sort of thing, any suggestions on an elegant solution to creating something like this in a modularized fashion, it would be much appreciated.</p>
<p>Please note that I do not want to parse arguments passed in through the parent process command shell (such as bash), I want to do the processing from within an infinite while loop within the script itself.  For example:</p>
<pre><code>while (True):
    cmd = raw_input("framework&gt; ")
    framework.process_command(cmd)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Take a look at Click, "a Python package for creating beautiful command line interfaces in a composable way with as little code as necessary": <a href="http://click.pocoo.org/5/" rel="nofollow">http://click.pocoo.org/5/</a></p>
</div>
<div class="post-text" itemprop="text">
<p>in python you have a build in module called <code>argparse</code> to manage CLI parameters application, now take a look to this module <code>argparse</code> extension for tab completion <a href="https://pypi.python.org/pypi/argcomplete/0.8.4" rel="nofollow">https://pypi.python.org/pypi/argcomplete/0.8.4</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like the builtin <a href="https://docs.python.org/2/library/cmd.html" rel="nofollow">cmd</a> module offers what you're looking for. It supports tab completion for commands and arguments. Here's a <a href="http://pymotw.com/2/cmd/" rel="nofollow">tutorial</a> from PyMOTW. Another example <a href="https://docs.python.org/3/library/cmd.html#cmd-example" rel="nofollow">here</a>.</p>
<p>If you need some more customizations, there's also <a href="https://pythonhosted.org/cmd2/" rel="nofollow">cmd2</a> which extends the builtin cmd.</p>
</div>
<span class="comment-copy">Unless I'm mistaken, this only allows you to interact with arguments passed in from the command line of the parent process such as bash.  What I had in mind is something that traps input in an infinite while loop or something, and does its processing from inside the script rather than from what is passed in as system arguments through the command line of the shell.</span>
