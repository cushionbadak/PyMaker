<div class="post-text" itemprop="text">
<p>I want to mock the default argument in a class constructor:</p>
<pre><code>class A (object):
    def __init__(self, connection=DefaultConnection()):
        self.connection = connection
</code></pre>
<p>I want to mock <code>DefaultConnection</code> in my unittests, but it doesn't work when passed in as a default value.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use patch to <a href="https://docs.python.org/3/library/unittest.mock.html#patch" rel="nofollow">patch</a> the module, and then you can set the return value as a Mock.</p>
<pre><code># --- a.py (in package path x.y) --
from c import DefaultConnection

class A (object):
    def __init__(self, connection=DefaultConnection()):
        self.connection = connection

#---- a_test.py ----
from mock import patch
from a import A

@patch('x.y.a.DefaultConnection')
def test(def_conn_mock):
  conn_mock = Mock()
  def_conn_mock.return_value = conn_mock

  a_obj = A()
  ....
</code></pre>
</div>
<span class="comment-copy">how to you both pass it as a default value plz? I thought that the default is there if you DON'T pass a value... also executing class initialization code during definition of another class is not very wise (<code>DefaultConnection()</code> is executed already during import of the module, not during initialization of <code>a = A()</code> if I understand it correctly)</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/36704191/mocking-class-constructor-default-parameters-in-python">Mocking class constructor default parameters in Python</a></span>
