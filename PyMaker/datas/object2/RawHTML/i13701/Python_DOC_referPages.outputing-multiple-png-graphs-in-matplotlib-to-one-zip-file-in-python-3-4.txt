<div class="post-text" itemprop="text">
<p>I wrote a program that outputs multiple different pie charts (more than 60) from a CSV file using MatPlotLib in Python. I don't think I need to share all of the code, but I have a <code>draw()</code> function that creates the graph, that ends with the following:</p>
<pre><code>def draw(data):
    [make the graph]
    plt.savefig(filename)
</code></pre>
<p>This function successfully makes one of my graphs as a .png file in the cwd. I then run a loop that creates a pie chart for each section of my data. The code is as follows:</p>
<pre><code>if __name__ == '__main__':
    data = sys.argv[1]
    things = process(data) 
    for thing in things.values():
        draw(thing)
</code></pre>
<p>I'm wondering if there are any Python packages that would help me automatically output all 60+ graphs to one zip file.</p>
</div>
<div class="post-text" itemprop="text">
<p>Sure, there's the standard <a href="https://docs.python.org/3/library/zipfile.html">zipfile</a> module, which can zip existing files, and it can also zip a string of bytes. So if you don't want to create the files separately and then zip them you could save them to <a href="https://docs.python.org/3/library/io.html#io.BytesIO">BytesIO</a> objects and then zip up those byte buffers. I've linked you to the Python 3 docs, but those features are also available in Python 2.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to save both <code>png</code>'s and the <code>zip</code>, maybe for debugging purposes, you can do something like using <a href="http://pymotw.com/2/zipfile/" rel="nofollow"><code>zipfile</code></a>:</p>
<pre><code>import zipfile

zf = zipfile.ZipFile('myzip.zip', mode='w')

zf.write('image1.png')
zf.write('image2.png')
# ...

zf.close()
</code></pre>
</div>
<span class="comment-copy">Seems like it should be pretty straightforward with this module:  <a href="https://docs.python.org/3.4/library/zipfile.html" rel="nofollow noreferrer">docs.python.org/3.4/library/zipfile.html</a></span>
