<div class="post-text" itemprop="text">
<p>I am wondering how I can make a simple socket server in Python 2.7 which can handle and add/accept multiple clients at a time. I do not want to use Twisted nor threading, nor any libraries; just Python, and sockets. I have looked around SoF (stackoverflow- is that a thing?) and found people asking the same question but not getting a clear answer. </p>
<p>If you are wondering why I need to do this, It's because I want to create a simple data forwarder which forwards client data to another server. I think a very simple example showing me Server.py, Client1.py, and Client2.py is just what I need. Again, just a very simple example with no threading, no twisted, no libraries. </p>
<p>I hope you can help me, I'm fairly new to Python and I feel like this project will help get me on my feet, and I learn great from examples. </p>
</div>
<div class="post-text" itemprop="text">
<p>Consider using <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow">asyncio</a> (available for python 3.3 and later). </p>
<p>Asyncio is the new python standard for single-threaded concurrent programming:</p>
<blockquote>
<p>This module provides infrastructure for writing single-threaded concurrent code using coroutines, multiplexing I/O access over sockets and other resources, running network clients and servers, and other related primitives.</p>
</blockquote>
<p>The documentation provides a few examples:</p>
<ul>
<li><a href="https://docs.python.org/3/library/asyncio-protocol.html#tcp-echo-client-protocol" rel="nofollow">TCP echo client</a></li>
<li><a href="https://docs.python.org/3/library/asyncio-protocol.html#tcp-echo-server-protocol" rel="nofollow">TCP echo server</a></li>
</ul>
<hr/>
<p>If you're not ready to migrate to python 3, you can use <a href="https://pypi.python.org/pypi/trollius/" rel="nofollow">trollius</a>, the portage of asyncio for python 2. There is a few differences between the two modules, as listed in the <a href="http://trollius.readthedocs.org/en/latest/using.html" rel="nofollow">documentation</a>: </p>
<blockquote>
<ul>
<li>replace asyncio with trollius (or use import trollius as asyncio)</li>
<li>replace yield from ... with yield From(...)</li>
<li>replace yield from [] with yield From(None)</li>
<li>in coroutines, replace return res with raise Return(res)</li>
</ul>
</blockquote>
<hr/>
<p>Other solutions for single-threaded concurrent programming on python 2.7:</p>
<ul>
<li><a href="http://www.gevent.org/" rel="nofollow">gevent</a>: a coroutine-based Python networking library that uses <a href="http://greenlet.readthedocs.org/en/latest/" rel="nofollow">greenlet</a>.</li>
<li><a href="https://docs.python.org/2/library/asyncore.html#module-asyncore" rel="nofollow">asyncore</a>: built-in asynchronous socket library (<a href="https://docs.python.org/2/library/asyncore.html#asyncore-example-basic-echo-server" rel="nofollow">echo server example</a>).</li>
</ul>
</div>
<span class="comment-copy">If you want the server to handle multiple clients at one time you won't be able to avoid using multi-threading</span>
<span class="comment-copy">If I've done it in PHP, I'm damn positive I can do it in Python!</span>
<span class="comment-copy">So when the server is handing a request from one client, and a second client request arrives what do you want to happen? If you have only 1 thread then any subsequent requests that arrive will have to sit in a queue and wait to be processed one at a time - it would be possible to do it this way, but your users would hate you.</span>
<span class="comment-copy">If you wanna go totally old-school, use <code>select</code></span>
<span class="comment-copy">By <code>nor any libraries</code> do you mean third-party librarys or even the standart library? So if you want to work with <code>sockets</code> you will need to <code>import socket</code> in python. If you do this you can also <code>import SocketServer</code>, i think this module will provide something you can work with: <a href="https://docs.python.org/2/library/socketserver.html" rel="nofollow noreferrer">docs.python.org/2/library/socketserver.html</a></span>
<span class="comment-copy">I'm using Python 2.7 and I plan on keeping it that way. Check the edit I'm about to make to the OP</span>
<span class="comment-copy">@RoyalScripters Edited.</span>
