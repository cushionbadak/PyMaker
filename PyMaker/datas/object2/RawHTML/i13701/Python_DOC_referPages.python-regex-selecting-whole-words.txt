<div class="post-text" itemprop="text">
<p>I am writing a script that introduces misspellings into sentence. I am using python re module to replace the original word with the misspelling. The script looks like this: </p>
<pre><code># replacing original word by error
pattern = re.compile(r'%s' % original_word)    
replace_by = r'\1' + err
modified_sentence = re.sub(pattern, replace_by, sentence, count=1)
</code></pre>
<p>But the problem is this will replace even if original_word was part of another word for example: </p>
<p>If i had </p>
<pre><code>original_word = 'in'
err = 'il'
sentence = 'eating food in'
</code></pre>
<p>it would replace the occurrence of 'in' in eating like:</p>
<pre><code>&gt; 'eatilg food in'
</code></pre>
<p>I was checking in the <a href="https://docs.python.org/2/howto/regex.html" rel="nofollow">re documentation</a> but it doesn't give any example on how to include regex options, for example: </p>
<p>If my pattern is:</p>
<pre><code>regex_pattern = '\b%s\b' % original_word
</code></pre>
<p>this would solve the problem as \b represents 'word boundary'. But it doesn't seem to work. </p>
<p>I tried to find to find a work around it by doing: </p>
<pre><code>pattern = re.compile(r'([^\w])%s' % original_word)
</code></pre>
<p>but that does not work. For example : </p>
<pre><code>original_word = 'to'
err = 'vo'
sentence = 'I will go tomorrow to the'
</code></pre>
<p>it replaces it to:</p>
<pre><code>&gt; I will go vomorrow to the 
</code></pre>
<p>Thank you, any help appreciated</p>
</div>
<div class="post-text" itemprop="text">
<p>See <a href="https://stackoverflow.com/questions/3995034/does-python-re-module-support-word-boundaries-b">here</a> for an example of word boundaries in python re module.  It looks like you were close just need to put it all together.  The following script gives you the output you want...</p>
<pre><code>import re

original_word = 'to'
err = 'vo'
sentence = 'I will go tomorrow to the'

pattern = re.compile(r'\b%s\b' % re.escape(original_word)) 
modified_sentence = re.sub(pattern, err, sentence, count=1)

print modified_sentence
</code></pre>
<p>Output --&gt;  I will go tomorrow vo the</p>
</div>
<span class="comment-copy">Note: use <a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow noreferrer"><code>re.escape()</code></a> on the <code>original_word</code> in case the string ever contains any characters that have special meaning in the regular expression language.</span>
<span class="comment-copy">@dsh thank you. useful tip</span>
<span class="comment-copy">Thanks alot worked brilliantly. Yea i was almost there! It was probably the combination of the %s syntax that i had not tried with the \b in the pattern.</span>
