<div class="post-text" itemprop="text">
<p>I have a few lines of code for making a rotated string for a Caesar cipher and just for fun I am trying to condense them into one. Obviously this is pointless since it is completely unreadable but I'm curious. Still, I can't quite figure out how to do it. Here's what I have tried so far</p>
<pre><code>s = 'abcdefghijklmnopqrstuvwxyz'
rot = raw_input('Enter Rotation or Key: ')
s = s[-int(rot):] + s[:-int(rot)] if rot.isdigit() else rot.lower()+ ''.join([j for i in s for j in rot.lower() if j == i]) # This is the only line I want condensed
print s
</code></pre>
<p>Here is the readable version which actually works</p>
<pre><code>s = 'abcdefghijklmnopqrstuvwxyz'
rot = raw_input('Enter Rotation or Key: ')
if rot.isdigit():                        #I only want from here
    s = s[-int(rot):] + s[:-int(rot)]
else:
    for i in rot.lower():
        s = s.replace(i,'')
    s = rot.lower() + s                  #To here condensed into one line
print s
</code></pre>
<p><code>rot</code> is the amount to rotate the alphabet or the key for a <a href="http://rumkin.com/tools/cipher/caesar-keyed.php" rel="nofollow">keyed version</a> of a Caesar cipher. You should be able to just run the code as is and see exactly what's wrong</p>
<p>I know this is bad code but I find this kind of code interesting since the language supports linking so many if/else/for/lambda/whatever together into a single line. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can rewrite the else case using <a href="https://docs.python.org/2/library/functions.html#reduce" rel="nofollow"><code>reduce</code></a> (it’s <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow"><code>functools.reduce</code></a> in Python 3):</p>
<pre><code>if rot.isdigit():
    s = s[-int(rot):] + s[:-int(rot)]
else:
    s = rot.lower() + reduce(lambda x, y: x.replace(y, ''), rot.lower(), s)
</code></pre>
<p>And then you can combine it to one line:</p>
<pre><code>s = s[-int(rot):] + s[:-int(rot)] if rot.isdigit() else rot.lower() + reduce(lambda x, y: x.replace(y, ''), rot.lower(), s)
</code></pre>
<p>But you’re absolutely right: It makes no sense to write it like this. It’s really unreadable.</p>
<hr/>
<p>Since you’re using Python 2, you can actually use <a href="https://docs.python.org/2/library/stdtypes.html#str.translate" rel="nofollow"><code>str.translate</code></a> here too, to remove the characters in <code>rot</code> from <code>s</code>. This uses the <code>deletechars</code> parameter of that function:</p>
<pre><code>s = rot.lower() + s.translate(None, rot.lower())
</code></pre>
<p>Your one-line expression is then a little bit shorter:</p>
<pre><code>s = s[-int(rot):] + s[:-int(rot)] if rot.isdigit() else rot.lower() + s.translate(None, rot.lower())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given this simple test case</p>
<pre><code>&gt;&gt;&gt; from string import ascii_lowercase as letters
&gt;&gt;&gt; s = 'this is a test with 2 numbers 55!'
&gt;&gt;&gt; rot = 5
</code></pre>
<p>The following one-liner seems to do the trick</p>
<pre><code>&gt;&gt;&gt; ''.join(letters[(letters.index(i)+rot)%len(letters)] if i in letters else i for i in s)
'ymnx nx f yjxy bnym 2 szrgjwx 55!'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is just a quick golfing of your code (178 bytes):</p>
<pre><code>rot=raw_input('Enter Rotation or Key: ').lower();s='abcdefghijklmnopqrstuvwxyz';print s[-int(rot):]+s[:-int(rot)]if rot.isdigit()else rot+reduce(lambda s,i:s.replace(i,''),rot,s)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The simplest one-liner you can have: <code>s = rotify(s, rot)</code></p>
<pre><code>s = 'abcdefghijklmnopqrstuvwxyz'
rot = raw_input('Enter Rotation or Key: ')
s = rotify(s, rot)
print s
</code></pre>
<p>All you need is a function <code>rotify()</code>, which you've already provided yourself in the question (I made few modifications from <code>s =</code> to <code>return</code>):</p>
<pre><code>def rotify(s, rot):
    if rot.isdigit():
        return s[-int(rot):] + s[:-int(rot)]
    else:
        for i in rot.lower():
            s = s.replace(i,'')
        return rot.lower() + s
</code></pre>
<p>There's no need to force one-liners. You gain nothing, you lose readability.</p>
</div>
<span class="comment-copy">Why do you want it to be a one-liner? You lose readability and gain nothing.</span>
<span class="comment-copy">@MarkusMeskanen To quote OP: <i>“Obviously this is kind of pointless since it is completely unreadable but <b>I'm curious</b>.”</i> (emphasis mine). It’s just about playing around.</span>
<span class="comment-copy">@poke I understand that he's just curious, but what he's doing is plain stupid (no offense, I've done it too myself). Look at my answer, you could have one function instead, keep the readability, lose nothing. There's no need to be curious on writing bad code.</span>
<span class="comment-copy">Why do you want to condense the code? It looks like a stupid question.</span>
<span class="comment-copy">I want to condense it into one line because I see code like this all the time and I struggle to read it so I am trying to write bad code so I can understand bad code. It's also very interesting to me that the language supports linking so many if/else/for/lambda/whatever together.</span>
<span class="comment-copy">That doesn't do the same thing as the original.</span>
<span class="comment-copy">@skyking that is what I was looking for. I only wanted the if else statement condensed and I updated my question to portray that better.</span>
<span class="comment-copy">@skyking Yes, it does. Or do you have an example that produces different results for the same input?</span>
<span class="comment-copy">The original includes prompting for a key for example...</span>
<span class="comment-copy">@skyking It was perfectly clear to me from the original text. The <i>“Here's what I have tried so far”</i> code shows how it should look like; with the replacement of <code>s</code> done in a single line. But OP’s code didn’t work (as made clear by the line afterwards which introduces the <i>“version which actually works“</i>), so he asked for how to do this correctly while having it still work. I can’t help it that you didn’t understand it but I did. And that also doesn’t invalidate my answer, so I have no idea why my answer is being downvoted when it is exactly what OP was asking for.</span>
<span class="comment-copy">This does not take into account the keyed cipher case. Only the rotation case. There is a link in the question if you don't understand the keyed cipher. It's a nice explanation</span>
<span class="comment-copy">I don’t get where you got the idea from that OP wanted to golf the code…</span>
<span class="comment-copy">@poke "I have a few lines of code ... and just for fun I am trying to condense them into one ...". Not exactly "golfing", I know, but pretty close. That said, I should probably go to sleep, so I could just be wrong :).</span>
<span class="comment-copy">@Cyphase you condensed more than I was looking for but it still answers the question so +1 for that</span>
<span class="comment-copy">Where do you find the <code>rotify</code> function?</span>
<span class="comment-copy">@SirParselot Why's that? I find this to be much better and readable than any other answer. Like you said yourself: "Here is the readable version which actually works"</span>
<span class="comment-copy">@skyking "Minimize the number of lines"? What's this, a one-line-notepad?</span>
<span class="comment-copy">I agree that it's a stupid question.</span>
<span class="comment-copy">@SirParselot Then why ask this question in the first place? What you're trying to accomplish is insane. It's like wanting to have a bathroom with a laptop built-in to the wall: Why not just use a normal laptop which you can carry into the bathroom whenever you want? You're desperately seeking a way to mount a laptop into a solid wall, when the correct answer is not to do it in the first place. Don't condense the code, it's absolutely perfect right now. Not a single employer would like you to use the one-liners provided by others, rather than the multi-line solution you already have.</span>
