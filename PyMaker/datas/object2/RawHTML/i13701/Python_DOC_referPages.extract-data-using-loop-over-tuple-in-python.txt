<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7100243/finding-in-elements-in-a-tuple-and-filtering-them">Finding in elements in a tuple and filtering them</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I have the following tuple containing molecule number (<code>MolNum</code>) and corresponding <code>distance</code> from certain reference point. The molecules are arranged in ascending order according to <code>distances</code>. I can extract <code>MolNum</code> and <code>distances</code> as two individual lists. However, I would like to get the elements of <code>g</code> by satisfying the following condition, <code>if  10 &lt; distance &lt; 100</code> ; so I will get <code>gg</code>. How I can get this ? </p>
<pre><code>g = [(MolNum(378), 2.4613922385709617e-14),
 (MolNum(373), 40.6680008439399),
 (MolNum(353), 72.49296570091882),
 (MolNum(354), 83.18203548933252),
 (MolNum(359), 88.23588863972836),
 (MolNum(372), 97.47433492265824),
 (MolNum(369), 104.59206739018573),
 (MolNum(370), 114.66573137439451),
 (MolNum(361), 122.33788252133775),
 (MolNum(376), 137.2686523522959),
 (MolNum(360), 141.72521396936926),
 (MolNum(371), 145.96842598002533),
 (MolNum(352), 149.8990795114449),
 (MolNum(366), 164.55606071030496),
 (MolNum(358), 180.72531479536423),
 (MolNum(375), 182.21612213617874),
 (MolNum(364), 185.78028496680486),
 (MolNum(363), 192.02220222384793),
 (MolNum(368), 194.0298647708072),
 (MolNum(365), 194.57037736733918),
 (MolNum(356), 201.91526815811372),
 (MolNum(362), 217.8580017023349),
 (MolNum(357), 234.3818585062885),
 (MolNum(374), 241.33751568809993),
 (MolNum(367), 249.36129229747306),
 (MolNum(355), 253.59625354913504)]
</code></pre>
<p>After satisfying the condition; </p>
<pre><code>gg = [(MolNum(373), 40.6680008439399),
 (MolNum(353), 72.49296570091882),
 (MolNum(354), 83.18203548933252),
 (MolNum(359), 88.23588863972836),
 (MolNum(372), 97.47433492265824)] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>gg = [(mol_num, distance) for mol_num, distance in g if 10 &lt; distance &lt; 100]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow">builtin <code>filter</code> function</a> for this, giving the condition as a lambda expression in first argument and the list to filter in second argument -</p>
<pre><code>gg = list(filter(lambda x: 10 &lt; x[1] &lt; 100,g))
</code></pre>
<p>For Python 2.7 , you do not need the <code>list(...)</code> as filter returns a list.</p>
<hr/>
<p>In Python 3.x, <code>filter()</code> function returns an iterator which yields elements where the condition is satisfied (that is the condition returns <code>True</code> .</p>
<p>In Python 2.7 ,  <code>filter()</code> function returns a list of elements where the condition is satisfied (that is the condition returns <code>True</code> .</p>
<hr/>
<p>Example/Demo -</p>
<pre><code>&gt;&gt;&gt; class MolNum:
...     def __init__(self, n):
...             self.n = n
...
&gt;&gt;&gt; g = [(MolNum(378), 2.4613922385709617e-14),
...  (MolNum(373), 40.6680008439399),
...  (MolNum(353), 72.49296570091882),
...  (MolNum(354), 83.18203548933252),
...  (MolNum(359), 88.23588863972836),
...  (MolNum(372), 97.47433492265824),
...  (MolNum(369), 104.59206739018573),
...  (MolNum(370), 114.66573137439451),
...  (MolNum(361), 122.33788252133775),
...  (MolNum(376), 137.2686523522959),
...  (MolNum(360), 141.72521396936926),
...  (MolNum(371), 145.96842598002533),
...  (MolNum(352), 149.8990795114449),
...  (MolNum(366), 164.55606071030496),
...  (MolNum(358), 180.72531479536423),
...  (MolNum(375), 182.21612213617874),
...  (MolNum(364), 185.78028496680486),
...  (MolNum(363), 192.02220222384793),
...  (MolNum(368), 194.0298647708072),
...  (MolNum(365), 194.57037736733918),
...  (MolNum(356), 201.91526815811372),
...  (MolNum(362), 217.8580017023349),
...  (MolNum(357), 234.3818585062885),
...  (MolNum(374), 241.33751568809993),
...  (MolNum(367), 249.36129229747306),
...  (MolNum(355), 253.59625354913504)]
&gt;&gt;&gt;
&lt;filter object at 0x02302E70&gt;
&gt;&gt;&gt; gg = list(filter(lambda x: 10 &lt; x[1] &lt; 100,g))
&gt;&gt;&gt; len(gg)
5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try like this</p>
<pre><code>gg = [item for item in g if 10&lt;item[1]&lt;100]
</code></pre>
<p>Or you may think about @Anand S Kumar is answer of using <code>filter()</code>, which is a more <strong>pythonic</strong> way.</p>
<p>Hope it helps</p>
</div>
<div class="post-text" itemprop="text">
<p>You might want to look at Pandas, it's a very commonly used package for tabular data analysis of this type:</p>
<pre><code>import pandas as pd
g= pd.DataFrame(g)
gg = g[g[1].between(10,100)] 
gg

Out[239]: 
     0          1
1  373  40.668001
2  353  72.492966
3  354  83.182035
4  359  88.235889
5  372  97.474335
</code></pre>
</div>
<span class="comment-copy">nice, thank you a lot. it works !</span>
<span class="comment-copy">thank you for help.</span>
<span class="comment-copy">Glad we could be of help, I would like to request you to accept an answer, whichever you feel like the best, by clicking on the tick mark on the left of the answer, it would be helpful for the community.</span>
<span class="comment-copy">this works too. thank you!</span>
<span class="comment-copy">thank you for your recommendation. I did not use panda though.</span>
