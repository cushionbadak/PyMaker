<div class="post-text" itemprop="text">
<p>I have a string. For example:</p>
<pre><code>str=     '\n                                    4 420 700 – 6 219 000 \n        '
</code></pre>
<p>or</p>
<pre><code>'\n  4\xa0420\xa0700 – 6\xa0219\xa0000\xa0 \n'
</code></pre>
<p>In this case I would like get number: <code>4420700</code>. But any number can be there. It would be <code>3 333 999 233</code>, for example.</p>
<p>I had tried this solution:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.sub(r'\D','',str)
'4420700621900016'
</code></pre>
<p>Could you help me?</p>
</div>
<div class="post-text" itemprop="text">
<p>Do split and replace.</p>
<pre><code>&gt;&gt;&gt; st =     '\n                                    4 420 700 – 6 219 000 \n        '
&gt;&gt;&gt; re.sub(r'\D', '',st.split('–')[0])
'4420700'
</code></pre>
<p>or</p>
<pre><code>st.split('–')[0].strip().replace(' ', '')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you want to remove all whitespace from the string, then parse the longest initial prefix of all digits, stopping if there is a non-digit (such as a hyphen). Here is my code:</p>
<pre><code>s = (... your input string ...)

import re
s = re.sub(r"\s", "", s)    # Remove all whitespace
s = re.sub(r"\D.*", "", s)  # Remove everything starting at a non-digit
n = int(s)  # Parse the number (optional)
</code></pre>
<p>Btw, don't name your variable <code>str</code>, because it confuses with the built-in type <a href="https://docs.python.org/3/library/stdtypes.html#text-sequence-type-str" rel="nofollow"><code>str</code></a>.</p>
</div>
<span class="comment-copy">In Python 3 I get <code>44207006219000</code></span>
<span class="comment-copy">@KronoS it's not a actual hyphen. Just copy and paste the hyphen present in the original string.</span>
<span class="comment-copy">Holy crap you're right.</span>
<span class="comment-copy">@AvinashRaj If I expect only whitespaces before the firs number is it ok to use: st.split('–')[0].strip()</span>
<span class="comment-copy">ya, but this won't remove the spaces present between the digits.</span>
