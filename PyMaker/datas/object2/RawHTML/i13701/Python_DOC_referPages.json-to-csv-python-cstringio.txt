<div class="post-text" itemprop="text">
<p>I'm trying to convert a JSON file to CSV format (in memory), so that I can pass it to another Transformer in Mulesoft. Here is a snippet of the JSON:</p>
<pre><code>[
{
"observationid": 1,
"fkey_observation": 1,
"value": 1,
"participantid": null,
"uom": "ppb",
"finishtime": 1008585047000,
"starttime": 1008581447000,
"observedproperty": "NO2",
"measuretime": 1008581567000,
"measurementid": 1,
"longitude": 3.1415,
"identifier": "Test-1",
"latitude": 10
},
{
"observationid": 1,
"fkey_observation": 1,
"value": 12,
"participantid": null,
"uom": "ppb",
"finishtime": 1008585047000,
"starttime": 1008581447000,
"observedproperty": "SO2",
"measuretime": 1008582047000,
"measurementid": 2,
"longitude": 5,
"identifier": "Test-1",
"latitude": 11
}
]
</code></pre>
<p>Essentially, this should create a CSV (in memory) with 2 rows, that looks like this:</p>
<pre><code>1,1,1,N,ppb,1008585047000,1008581447000,NO2,1008581567000,1,3.1415,Test-1,10
1,1,12,N,ppb,1008585047000,1008581447000,SO2,1008582047000,2,5,Test-1,11
</code></pre>
<p>Currently, the output comes out like this, which is wrong:</p>
<pre><code>[1  1   1    None    u'ppb'  1008585047000L  1008581447000L  u'NO2'  1008581567000L 1   3.1415   u'Test-1'   10]
[1  1   12   None    u'ppb'  1008585047000L  1008581447000L  u'SO2'  1008582047000L 2   5    u'Test-1'   11]
</code></pre>
<p>I believe the 'u' bit refers to Unicode, but I don't know how to change the encoding. 
Any help would be greatly appreciated!</p>
<p>Here is the Python code I have so far:</p>
<pre><code>import json
import cStringIO

f = open('test.json')
data = json.load(f) 
f.close()

output = cStringIO.StringIO()
for item in data:
    output.write(str([item['observationid'], item['fkey_observation'],     item['value'], item['participantid'], item['uom'], item['finishtime'], item['starttime'], item['observedproperty'], item['measuretime'],item['measurementid'], item['longitude'], item['identifier'], item['latitude']]) + '\n')

contents = output.getvalue()
print contents`
</code></pre>
<p><strong>EDIT</strong></p>
<p>Hi guys, slight change of plan.
Essentially, I have a String object, but it actually is structured like a JSON file:</p>
<pre><code>"[{observationid=1, fkey_observation=1, value=1, participantid=null,   uom=ppb, finishtime=2001-12-17 10:30:47.0, starttime=2001-12-17 09:30:47.0, observedproperty=NO2, measuretime=2001-12-17 09:32:47.0, measurementid=1, longitude=3.1415, identifier=CITISENSE-Test-00000001, latitude=10}, {observationid=1, fkey_observation=1, value=12, participantid=null, uom=ppb, finishtime=2001-12-17 10:30:47.0, starttime=2001-12-17 09:30:47.0, observedproperty=SO2, measuretime=2001-12-17 09:40:47.0, measurementid=2, longitude=5, identifier=CITISENSE-Test-00000001, latitude=11}, {observationid=1, fkey_observation=1, value=7000, participantid=null, uom=ppb, finishtime=2001-12-17 10:30:47.0, starttime=2001-12-17 09:30:47.0, observedproperty=NO2, measuretime=2001-12-17 09:52:47.0, measurementid=3, longitude=6, identifier=CITISENSE-Test-00000001, latitude=9}, {observationid=2, fkey_observation=2, value=5, participantid=null, uom=ppb, finishtime=2001-12-18 10:30:47.0, starttime=2001-12-18 09:30:47.0, observedproperty=SO2, measuretime=2001-12-18 09:32:47.0, measurementid=4, longitude=7, identifier=CITISENSE-Test-00000001, latitude=8}, {observationid=2, fkey_observation=2, value=6, participantid=null, uom=ppb, finishtime=2001-12-18 10:30:47.0, starttime=2001-12-18 09:30:47.0, observedproperty=PM10, measuretime=2001-12-18 09:34:47.0, measurementid=5, longitude=8, identifier=CITISENSE-Test-00000001, latitude=10}, {observationid=3, fkey_observation=3, value=10000, participantid=null, uom=ppb, finishtime=2001-12-19 10:30:47.0, starttime=2001-12-19 09:30:47.0, observedproperty=SO2, measuretime=2001-12-19 09:38:47.0, measurementid=6, longitude=9,  identifier=CITISENSE-Test-00000001, latitude=11.2}]"
</code></pre>
<p>How do I go about converting this to CSV? I can't use the json module as it is not a JSON file.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is my approach: use <a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer"><code>csv.DictWriter</code></a> to handle converting from a dictionary to a row of CSV data:</p>
<pre><code>import csv
import json
from cStringIO import StringIO

with open('test.json') as f:
    my_data = json.load(f)
    headers = [
        'observationid', 'fkey_observation', 'value',
        'participantid', 'uom', 'finishtime', 'starttime',
        'observedproperty', 'measuretime', 'measurementid',
        'longitude', 'identifier', 'latitude']

    buffer = StringIO()
    writer = csv.DictWriter(buffer, headers)

    for row in my_data:
        writer.writerow(row)
    print buffer.getvalue()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a little snippet I wrote up, I think it should handle your scenario and give you a list of lists. Ereli is onto something with that module though, it might make your life easier. But in the meantime maybe this will help. </p>
<pre><code>import json
myFile =  open('myJson.json','r+')
myData = json.load(myFile)
myFile.close()

myList = []
for x in range(0,len(myData)):
    myList.append([])
    for key in myData[x].keys():
        value = myData[x][key]
        if isinstance(value,(str,unicode)):
            value = value.encode('ascii','ignore')
        myList[x].append(value)

print myList
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should probably consider using something like <a href="https://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow noreferrer">csvwriter</a>. it will handle the escaping and delimiter setting for you.</p>
<p>See example for python3:</p>
<pre><code>import csv 
with open('output.csv', 'w', newline='') as csvfile:
    writer = csv.writer(csvfile, delimiter=',')
    for line in data:
        writer.writerow(line)
</code></pre>
<p>it can also be used with <a href="https://stackoverflow.com/a/9157370/1265980">cStringIO</a>.</p>
</div>
<span class="comment-copy">Please show your work so we can help</span>
<span class="comment-copy">@HaiVu, I have just edited my previous post and provided the Python code. Thanks!</span>
<span class="comment-copy">headers = d.keys()</span>
<span class="comment-copy">@Wyrmwood - That does not guarantee the order</span>
<span class="comment-copy">use an OrderedDict and object_pairs_hook</span>
<span class="comment-copy">Yes, that method will work.</span>
<span class="comment-copy">It just insulates the code from the json. At this point, changes to keys need to be made in tandem.</span>
<span class="comment-copy">This is working for me, thanks so much @Ereli, and everyone else!</span>
<span class="comment-copy">@Jono_b If you found one of the answers satisfactory, consider <a href="https://stackoverflow.com/help/accepted-answer">accepting</a> it.</span>
