<div class="post-text" itemprop="text">
<p>I'm using the <code>logging</code> module in python 3, and want a particular warning message to be displayed only once.
The problem is that the check is inside a loop:</p>
<pre><code>def canned_example():
    logger.warning("This function hasn't been created yet")


for i in range(10):
    canned_example()
</code></pre>
<p>Is there a flag to set inside the logging module that will denote that this particular warning is only to be displayed once? The alternative is to keep a record of different flags, but I'd like to keep it simple if possible.</p>
<p><strong>Update:</strong> Amir Yazdanbakhsh has posted an answer in the comments that allows us to do this for all messages. Ideally, I'd like some per-message flag:</p>
<pre><code>def canned_example():
    logger.warning("This function hasn't been created yet", norepeat=True)


for i in range(10):
    canned_example()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Define a filter which keeps track of what was logged, and attach it to your logger for the duration of the loop. This example will remember each message it sees, and only allow the first occurrence to be logged.</p>
<pre><code>class DuplicateFilter(object):
    def __init__(self):
        self.msgs = set()

    def filter(self, record):
        rv = record.msg not in self.msgs
        self.msgs.add(record.msg)
        return rv

dup_filter = DuplicateFilter()
logger.addFilter(dup_filter)
for i in range(10):
    canned_example()
logger.removeFilter(dup_filter)
</code></pre>
</div>
<span class="comment-copy">You may find your answer here:    <a href="http://stackoverflow.com/questions/6506146/logging-in-continouous-loop" title="logging in continouous loop">stackoverflow.com/questions/6506146/logging-in-continouous-loop</a></span>
<span class="comment-copy">Great find! I couldn't find that on Google, so I've added some keywords there. It doesn't <i>quite</i> do what I want though -- I want control per-message, but it will do for now.</span>
<span class="comment-copy">Write your own <code>logging.warn</code> wrapper that keeps track of messages you would not like to repeat.</span>
<span class="comment-copy">Have a look at the <a href="https://docs.python.org/3/library/warnings.html" rel="nofollow noreferrer"><code>warnings</code></a> module and its <a href="https://docs.python.org/3/library/logging.html#integration-with-the-warnings-module" rel="nofollow noreferrer">integration with logging</a></span>
<span class="comment-copy">Just don't forget that any string you log will remain in memory.</span>
<span class="comment-copy">True; a quick fix would be to add <code>del dup_filter</code> after removing it from the logger. The garbage collector will free the memory on its next run.</span>
