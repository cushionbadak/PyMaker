<div class="post-text" itemprop="text">
<p>I am getting this error when I put this input command:</p>
<p><code>$ python3.4 cron_e2e.py -f test_web_events -E ctg-clickstream testbrad</code></p>
<p>error:</p>
<pre><code>$ python3.4 cron_e2e.py -f test_web_events -E ctg-clickstream testbrad
Traceback (most recent call last):
  File "cron_e2e.py", line 421, in &lt;module&gt;
    sys.exit(main(sys.argv))
  File "cron_e2e.py", line 368, in main
    log.addHandler(logging.FileHandler(logfile))
  File "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py", line 1006, in __init__
    StreamHandler.__init__(self, self._open())
  File "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/logging/__init__.py", line 1030, in _open
    return open(self.baseFilename, self.mode, encoding=self.encoding)
FileNotFoundError: [Errno 2] No such file or directory: '/Users/bli1/Development/QE/chun-qe-trinity-functional/qe/tests/qe/logs/testbrad_8_21_2015_cron.log'
</code></pre>
<p>The error occurs at this line:</p>
<pre><code>log.addHandler(logging.FileHandler(logfile))
</code></pre>
<p>Not quite sure where my code isnt creating the log file for me</p>
<p>code:</p>
<pre><code>def main(argv):
    "Test"
    exit_code = 0
    global me; me = os.path.basename(argv[0]) # name of this program
    global mydir; mydir = os.path.dirname(os.path.abspath(__file__))
    parser = argparse.ArgumentParser(description=main.__doc__)
    parser.add_argument("-f", "--functional_test", metavar="FUNCTEST",
                        dest="functest", help="Type of functional test")
    parser.add_argument("-p","--phase", action="append",
                        metavar="POST|HDFS|HIVE|ALL", dest="phase",
                        help="phase of test to run")
    parser.add_argument("-t", "--testfile", metavar="TESTFILE",
                        dest="testfile", default=os.path.join(mydir, "resources/cron.json"),
                        help="file with test commands")
    parser.add_argument("-E","--Event", metavar="EVENTNAME",
                        dest="event_names", action="append",
                        help="[repeatable] topic to which to post")
    parser.add_argument("runtag",
                        metavar="RUNTAG",
                        help="run tag for this run")
    args = parser.parse_args(args=argv[1:])  # will exit on parse error
    log = logging.getLogger(me)
    log.setLevel(logging.INFO)
    dt = datetime.datetime.utcnow()
    logfile = "qe/logs/" + (args.runtag + "_{}_{}_{}".format(dt.month, dt.day, dt.year) + "_cron.log")

    pdb.set_trace()
    if isinstance(logfile, str):
        if os.path.exists(logfile):
            os.remove(logfile)
        # logging.FileHandler() returns FileHandler class, the file is opened and used as the stream for logging
        log.addHandler(logging.FileHandler(logfile))
    console = logging.StreamHandler(sys.stderr); console.setLevel(logging.WARNING); log.addHandler(console)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The issue is that the directory in which you have defined the log file to go to - <code>"qe/logs/"</code> - does not exist.</p>
<p>By default the mode for <a href="https://docs.python.org/2/library/logging.handlers.html#logging.FileHandler" rel="noreferrer"><code>FileHandler</code></a> is <code>'a'</code> , which means that if the log file exists it would open it and start appending to it at the end, otherwise it would create the file.</p>
<p>But the FileHandler would only create the log file if it does not exist , it would not create the directory if that does not exist, if the directory does not exist, it would throw an error like you got.</p>
<p>You would need to create the directory yourself , either manually or programatically. If you want to create the directory programatically, you can use - <a href="https://docs.python.org/3/library/os.html#os.makedirs" rel="noreferrer"><code>os.makedirs()</code></a> - which would -</p>
<blockquote>
<p>create all intermediate-level directories needed to contain the leaf directory. </p>
</blockquote>
<p>Example -</p>
<pre><code>import os, os.path
if not os.path.exists("qe/logs/"):
    os.makedirs("qe/logs/")
</code></pre>
</div>
<span class="comment-copy">And you are sure that the path in the last line of the traceback exists? Don't you want to have <code>logfile = '../logs/' + .....</code> instead?</span>
