<div class="post-text" itemprop="text">
<p>Does anyone know how do I correct this as this code is not saving the data in a database?</p>
<pre><code>def save():

    #FUNCTIONS

    def savenow():
        params = [i.get(), n.get(), p.get(), r.get(), t.get(), a.get(), "None", "None"]

        if not os.path.exists("C:/Users/Dhruv/DS"):
            os.makedirs("C:/Users/Dhruv/DS/")

        connect = sqlite3.connect("C:/Users/Dhruv/DS/data.db")
        connect.execute("""CREATE TABLE IF NOT EXISTS FD 
                        (ID TEXT NOT NULL,
                         NAME TEXT NOT NULL,
                         P INT NOT NULL,
                         R INT,
                         T INT,
                         A INT NOT NULL,
                         D1 DATE,
                         D2 DATE);""")

        tobeexec = "INSERT INTO FD(ID, NAME, P, R, T, A, D1, D2) VALUES(?, ?, ?, ?, ?, ?, ?, ?)"

        connect.execute(tobeexec, params);

        connect.close()
</code></pre>
<p>I just want to write the data in the database but when I am trying to retrieve it, it shows that the database is empty...
Anyway thanks in advance...</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to <a href="https://docs.python.org/2/library/sqlite3.html#sqlite3.Connection.commit" rel="nofollow">commit the transaction</a>.</p>
<pre><code>connect.execute(tobeexec, params);
connect.commit()
connect.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In addition to the best answer, think also to the use of the <em>Connection</em> object as a context manager, it can be useful and it is provided in the <a href="https://docs.python.org/3/library/sqlite3.html#using-the-connection-as-a-context-manager" rel="nofollow">SQLite3 API</a> :</p>
<pre><code>connect = sqlite3.connect("C:/Users/Dhruv/DS/data.db")
try:
    with connect:
        connect.execute(...)  # Your SQL statement
except Exception as err:
    # Do what you want with the Exception
</code></pre>
<p>If your statement(s) within the <code>with connect</code> don't raise error, the transaction will be committed automatically. If something goes wrong the transaction is rolled back.</p>
<p>(Another answer could be to set the <em>isolation_level</em> to <em>None</em> after loading the db, which will implies an <strong>autocommit</strong> mode)  </p>
</div>
<span class="comment-copy">try: <code>connect.commit()</code> before you close the connection.</span>
<span class="comment-copy">Thanks!! The code worked....</span>
<span class="comment-copy">Actually, <code>connect.commit()</code> is a lot better.</span>
<span class="comment-copy">I do not want to needlessly argue on what is the best answer (knowing that my answer was only a complement to the first/best answer), but i'm curious (really!), on which facts do you base your view that <code>connect.commit()</code> is <i>"a lot better"</i> than the manager context? Or have you an example ? According to the doc the use of the context manager <code>with</code> is just a convenient way to automatically call <code>connect.commit()</code> when no error is encountered or <code>connect.rollback()</code> otherwise.</span>
