<div class="post-text" itemprop="text">
<p>Hi I am fairly new to python and I am trying to create a program that starts a thread that after five seconds will interrupt the input () function and print the message “Done!”.<br/>
Currently it only prints “Done!” after input is given. Even after five seconds has passed, the user must enter input before the message "Done!" is displayed. How can I get the thread to interrupt the input() function?</p>
<pre><code>import time
import threading

def fiveSec():
    time.sleep(5)
    print('Done!')

def main():
    t = threading.Thread(target = fiveSec)
    t.daemond = True
    t.start()
    input('::&gt;')

if __name__ == '__main__':
    main()
</code></pre>
<p>(Using Python version 3.4.2)</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need a thread to do this, use a signal instead:</p>
<pre><code>import signal
def interrupted(signum, frame):
    print "Timeout!"
signal.signal(signal.SIGALRM, interrupted)
signal.alarm(5)
try:
    s = input("::&gt;")
except:
    print "You are interrupted."
signal.alarm(0)
</code></pre>
<p>You can read the documentation on signal module:
<a href="https://docs.python.org/2/library/signal.html" rel="nofollow">https://docs.python.org/2/library/signal.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>As NeoWang shows, you can do it with a signal.  You can also do it with a thread and a signal.  Here is a slightly more complete example that will let you enter several lines of data, and will exit if it has been more than 5 seconds since you pressed enter:</p>
<pre><code>import time
import threading
import os
import signal

class FiveSec(threading.Thread):
    def restart(self):
        self.my_timer = time.time() + 5
    def run(self, *args):
        self.restart()
        while 1:
            time.sleep(0.1)
            if time.time() &gt;= self.my_timer:
                break
        os.kill(os.getpid(), signal.SIGINT)


def main():
    try:
        t = FiveSec()
        t.daemon = True
        t.start()
        while 1:
            x = input('::&gt; ')
            t.restart()
            print('\nYou entered %r\n' % x)
    except KeyboardInterrupt:
        print("\nDone!")

if __name__ == '__main__':
    main()
</code></pre>
</div>
<span class="comment-copy">Which OS are you using?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/select.html#select.poll" rel="nofollow noreferrer"><code>select.poll()</code></a>?</span>
<span class="comment-copy">SIGALRM does not seem to work on windows, according to the documentation. The documentation does not offer any alternatives</span>
