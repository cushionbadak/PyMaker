<div class="post-text" itemprop="text">
<p>Suppose I have a string</p>
<pre><code>the_string = "the brown fox"
</code></pre>
<p>And I wan't to replace the spaces with a number of characters, for example, 5 dash marks</p>
<pre><code>new_string = "the-----brown-----fox"
</code></pre>
<p>but this will be a variable, so i cant just do:</p>
<pre><code>the_string = 'the brown fox'
new_string = re.sub(r'\s', '-----', the_string)
</code></pre>
<p>I need something like the following:</p>
<pre><code>the_string = 'the brown fox'
num_dashes = 5
new_string = re.sub(r'\s', r'-{num_dashes}', the_string)
</code></pre>
<p>Is something like this possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can do this:</p>
<pre><code>the_string = 'the brown fox'
num_dashes = 5
re.sub(r'\s', '-'*num_dashes, the_string)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def repl(matchobj):
    if matchobj.group():
        #do something
        #return whatever you want to replace

my_str = "the brown fox"

pattern = r"\s+"
print re.sub(pattern, repl, my_str)
</code></pre>
<p>You can define a function in <code>re.sub</code></p>
</div>
<span class="comment-copy">Is there some reason you do not want to use <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer">str.replace(old, new[, count])</a>? You could write <code>new_string = the_string.replace(' ', '-' * num_dashes)</code>.</span>
<span class="comment-copy">In this case that would work just fine.  Does str.replace work with a regex?  For example if I need to replace one or more spaces.  Could be one, could be multiple.</span>
<span class="comment-copy">Then you are correct. You would want to use the <code>re</code> module for a variable number of whitespace characters. The <code>str.replace</code> method does not work with regular expressions.</span>
<span class="comment-copy">That's genius, THANKS A LOT</span>
