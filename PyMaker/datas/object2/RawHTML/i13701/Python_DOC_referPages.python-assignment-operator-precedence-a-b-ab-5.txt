<div class="post-text" itemprop="text">
<p>I saw this Python snippet on <a href="https://twitter.com/fijall/status/634260102795685890">Twitter</a> and was quite confused by the output:</p>
<pre><code>&gt;&gt;&gt; a, b = a[b] = {}, 5
&gt;&gt;&gt; a
{5: ({...}, 5)}
</code></pre>
<p>What is going on here?</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/reference/simple_stmts.html#assignment-statements" rel="nofollow noreferrer"><em>Assignment statements</em> documentation</a>:</p>
<blockquote>
<p>An assignment statement evaluates the expression list (remember that this can be a single expression or a comma-separated list, the latter yielding a tuple) and assigns the single resulting object to each of the target lists, from left to right.</p>
</blockquote>
<p>You have two assignment target lists; <code>a, b</code>, and <code>a[b]</code>, the value <code>{}, 5</code> is assigned to those two targets from left to right.</p>
<p>First the <code>{}, 5</code> tuple is unpacked to <code>a, b</code>. You now have <code>a = {}</code> and <code>b = 5</code>. Note that <code>{}</code> is mutable.</p>
<p>Next you assign the same dictionary and integer to <code>a[b]</code>, where <code>a</code> evaluates to the dictionary, and <code>b</code> evaluates to <code>5</code>, so you are setting the key <code>5</code> in the dictionary to the tuple <code>({}, 5)</code> creating a circular reference. The <code>{...}</code> thus refers to the same object that <code>a</code> is already referencing.</p>
<p>Because assignment takes place from left to right, you can break this down to:</p>
<pre><code>a, b = {}, 5
a[b] = a, b
</code></pre>
<p>so <code>a[b][0]</code> is the same object as <code>a</code>:</p>
<pre><code>&gt;&gt;&gt; a, b = {}, 5
&gt;&gt;&gt; a[b] = a, b
&gt;&gt;&gt; a
{5: ({...}, 5)}
&gt;&gt;&gt; a[b][0] is a
True
</code></pre>
</div>
<span class="comment-copy">Hmm that's surprisingly unintuitive for Python! I would expect it to cascade from right to left and thus throw a <code>NameError</code>, with <code>a[b] = a, b = {}, 5</code> working.</span>
<span class="comment-copy">Excellent answer. I figured out what was going on before I posted and was planning on posting a response, but you answered it very well. Also, +1 for the <code>a[b][0] is a</code> line.</span>
<span class="comment-copy">Nice answer! But the docs say <i>assigns the <b>single resulting object</b> to each of the target lists, from left to right</i>, so shouldn't it be equivalent to <code>a, b = {}, 5; a[b] = {}, 5</code>?</span>
<span class="comment-copy">@Sun: it is. Where do I say otherwise?</span>
<span class="comment-copy">@SunQingyao: exactly. Assigning the tuple to a key in that dictionary you created a reference to itself.</span>
