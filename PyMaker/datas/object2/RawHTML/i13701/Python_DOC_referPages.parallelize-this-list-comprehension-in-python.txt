<div class="post-text" itemprop="text">
<p>I'm trying to make this statement run in parallel (on 4 threads).</p>
<pre><code>[x for x in obj_list if x.attribute == given_attribute]
</code></pre>
<p>Any help would be appreciated.</p>
<p>I found <a href="https://stackoverflow.com/questions/5236364/how-to-parallelize-list-comprehension-calculations-in-python">this</a> question useful for other type of comprehension, but not for filtering like in this case.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <code>Pool</code> as described in the example you provided. This sort of works, but you have to remove the <code>None</code> result afterwards:</p>
<pre class="lang-python prettyprint-override"><code>import multiprocessing as mp

class Thing:
    def __init__(self, y):
        self.attribute = y

def square(thing, given_attribute):
    if thing.attribute == given_attribute:
        return thing

given_attribute = 4
x = [Thing(i) for i in range(10)]  # List of objects to process

if __name__ == '__main__':
    pool = mp.Pool(processes=4)
    results = [pool.apply(square, args=(x[i], given_attribute, )) for i in range(10)]
    r = [i for i in results if i is not None]  # Remove the None results
    print r
</code></pre>
</div>
<span class="comment-copy">See the docs <a href="https://docs.python.org/3/library/concurrent.futures.html#processpoolexecutor-example" rel="nofollow noreferrer">here</a>, you can replace <code>ProcessPoolExecutor</code> with <code>ThreadPoolExecutor</code>.</span>
