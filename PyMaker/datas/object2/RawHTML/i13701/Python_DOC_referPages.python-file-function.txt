<div class="post-text" itemprop="text">
<p>I've been adapting an old piece of code to be Python 3 compliant and I came across this individual script</p>
<pre class="lang-py prettyprint-override"><code>"""Utility functions for processing images for delivery to Tesseract"""

import os


def image_to_scratch(im, scratch_image_name):
    """Saves image in memory to scratch file.  .bmp format will be read 
        correctly by Tesseract"""
    im.save(scratch_image_name, dpi=(200, 200))


def retrieve_text(scratch_text_name_root):
    inf = file(scratch_text_name_root + '.txt')
    text = inf.read()
    inf.close()
    return text


def perform_cleanup(scratch_image_name, scratch_text_name_root):
    """Clean up temporary files from disk"""
    for name in (scratch_image_name, scratch_text_name_root + '.txt',
                 "tesseract.log"):
        try:
            os.remove(name)
        except OSError:
            pass
</code></pre>
<p>On the second function, <code>retrieve_text</code> the first line fails with:</p>
<pre class="lang-py prettyprint-override"><code>Traceback (most recent call last):
  File ".\anpr.py", line 15, in &lt;module&gt;
    text = image_to_string(Img)
  File "C:\Users\berna\Documents\GitHub\Python-ANPR\pytesser.py", line 35, in image_to_string
    text = util.retrieve_text(scratch_text_name_root)
  File "C:\Users\berna\Documents\GitHub\Python-ANPR\util.py", line 10, in retrieve_text
    inf = file(scratch_text_name_root + '.txt')
NameError: name 'file' is not defined
</code></pre>
<p>Is this a deprecated function or another problem alltogether? Should I be replacing <code>file()</code> with something like <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow"><code>open()</code></a>?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 2, <code>open</code> and <code>file</code> are mostly equivalent. <code>file</code> is the type and <code>open</code> is a function with a slightly friendlier name; both take the same arguments and do the same thing when called, but calling <code>file</code> to create files is discouraged and trying to do type checks with <code>isinstance(thing, open)</code> doesn't work.</p>
<p>In Python 3, the file implementation in the <code>io</code> module is the default, and the <code>file</code> type in the builtin namespace is gone. <code>open</code> still works, and is what you should use.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do what the <a href="https://docs.python.org/2/library/functions.html#file" rel="nofollow">documentation for <code>file()</code></a> suggests -</p>
<blockquote>
<p>When opening a file, itâ€™s preferable to use <code>open()</code> instead of invoking this constructor directly.</p>
</blockquote>
<p>You should use <code>open()</code> method instead.</p>
</div>
<span class="comment-copy"><code>file</code> has been deprecated even in Python 2. You should be using <code>open</code></span>
<span class="comment-copy">Yes, use <code>open</code>.</span>
<span class="comment-copy">Just replaced it for <code>inf = open(scratch_text_name_root + '.txt', 'r')</code>, working nicely now :)</span>
