<div class="post-text" itemprop="text">
<p>With C# and NUnit, there exists the <a href="http://www.nunit.org/index.php?p=testCase&amp;r=2.6.4" rel="nofollow">TestCase attribute</a> and the T<a href="http://www.nunit.org/index.php?p=testCaseSource&amp;r=2.6.4" rel="nofollow">estCaseSource attribute</a>, both of which allows unit tests to be parameterized, so that the same "test" can be used multiple times with different input. This reduces code duplication while maintaining readability.</p>
<p>Does something similar exist for Python?</p>
<p>EDIT:
@Dunes mentioned <a href="https://docs.python.org/3/library/unittest.html#subtests" rel="nofollow">subtests</a>, which I should have included as part of this question. Unfortunately, it is a 3.4 only functionality, and I'm looking to support 2.7 and 3.4.</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer is <a href="https://docs.python.org/3/library/unittest.html#subtests" rel="nofollow"><code>subTest</code></a>. However, this is only available as of Python 3.4.</p>
<p>There is <a href="https://pypi.python.org/pypi/unittest2" rel="nofollow"><code>unittest2</code></a>, though. It provides a backport of the latest features of unittest in Python 3.4 (including <code>subTest</code>). <code>unittest2</code> is tested to run on Python 2.6, 2.7, 3.2, 3.3, 3.4 and pypy.</p>
</div>
<div class="post-text" itemprop="text">
<p>Several libraries will allow you to do this. For example, the py.test example is as follows:</p>
<pre><code>import pytest
@pytest.mark.parametrize("test_input,expected", [
    ("3+5", 8),
    ("2+4", 6),
    ("6*9", 42),
])

def test_eval(test_input, expected):
    assert eval(test_input) == expected
</code></pre>
<p>This is from the <a href="http://doc.pytest.org/en/latest/parametrize.html" rel="nofollow noreferrer">py.test documentation</a>.</p>
</div>
<span class="comment-copy">Are you running python 3.4? If so, see <a href="https://docs.python.org/3/library/unittest.html#subtests" rel="nofollow noreferrer">docs.python.org/3/library/unittest.html#subtests</a></span>
<span class="comment-copy">Sorry I forgot about that. I'm trying to be compatible for 3.4 and 2.7 unfortunately, but I'll update my question.</span>
