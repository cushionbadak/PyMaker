<div class="post-text" itemprop="text">
<p>I have the following json output:</p>
<pre><code>{  
   "code":0,
   "message":"success",
   "data":[  
      {  
         "group_id":"12345678901234567890",
         "display_name":"GROUP",
         "description":"Group 1",
         "monitors":[  
            "12345678901234567890",
            "12345678901234567890",
            "12345678901234567890"
         ]
      },
      {  
         "group_id":"12345678901234567890",
         "display_name":"KK-GROUP1",
         "description":"KK Group 1",
         "monitors":[  
            "12345678901234567890",
            "12345678901234567890",
            "12345678901234567890"
         ]
      },
      {  
         "group_id":"12345678901234567890",
         "display_name":"KK-GROUP2",
         "description":"KK Group 2",
         "monitors":[  
            "12345678901234567890",
            "12345678901234567890",
            "12345678901234567890"
         ]
      },
      {  
         "group_id":"12345678901234567890",
         "display_name":"KK-GROUP3",
         "description":"KK Group 3",
         "monitors":[  
            "12345678901234567890",
            "12345678901234567890",
            "12345678901234567890"
         ]
      }
   ]
}
</code></pre>
<p>I have this definition that should be looping through the JSON output received from a pycurl command and find all groups that start with KK for example and create a list from all the ID's in the respective monitors field to add to another section of a script I wrote. In the above output it should provide 9 IDs (3 from each group) ... For whatever reason it's only grabbing the first 3 monitor IDs.</p>
<pre><code>def ReturnedMonitors():
    listOfChecks = json.loads(connectSite('GET',''))
    for i in listOfChecks['data']:
        while i['display_name'].startswith(options.clusterName.upper()):
            return i['monitors']
</code></pre>
<p>The output from this will be passed into the following:</p>
<pre><code>for monitor in ReturnedMonitors():
          putData = 'activate/' + monitor
          print "Activated: " + modifyMonitors('PUT',putData)
</code></pre>
<p>modifyMonitors is another pycurl definition that will post to a site.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are trying to create a generator function with - <code>ReturnedMonitors()</code> , you have created it wrongly , when you do <code>return</code> it returns from the function, you need to use the <code>yield</code> keyword , also, if you need to yield each id in `monitors list separately , you should loop over them and yield separately. Example -</p>
<pre><code>def ReturnedMonitors():
    listOfChecks = json.loads(connectSite('GET',''))
    for i in listOfChecks['data']:
        while i['display_name'].startswith(options.clusterName.upper()):
            for x in i['monitors']:
                yield x
</code></pre>
<p>For Python 3.3 + , you can use <a href="https://docs.python.org/3/whatsnew/3.3.html#pep-380-syntax-for-delegating-to-a-subgenerator" rel="nofollow"><code>yield from</code></a> to yield all values from an iterable/iterator (called generator delegation) -</p>
<pre><code>def ReturnedMonitors():
    listOfChecks = json.loads(connectSite('GET',''))
    for i in listOfChecks['data']:
        while i['display_name'].startswith(options.clusterName.upper()):
            yield from i['monitors']
</code></pre>
</div>
<span class="comment-copy">Thanks Anand, that helped.</span>
