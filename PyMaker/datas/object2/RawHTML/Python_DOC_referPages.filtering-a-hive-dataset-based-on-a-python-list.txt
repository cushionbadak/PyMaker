<div class="post-text" itemprop="text">
<p>I'm pretty new to hive and spark, but what I want to do feels like it should be simple. Essentially, I want to take a list from Python and then only pull in records from hive that have a key in that list. Like this:</p>
<pre><code>my_list=['a','b','c','d']
new_dataset = 
    spark.sql(
    select * 
    from hive_dataset 
    where variable_name in my_list)
</code></pre>
<p>I would even be fine with handling it after the sql statement. Like this:</p>
<pre><code>my_list=['a','b','c','d']
new_dataset = 
    spark.sql(
    select * 
    from hive_dataset)

new_dataset=new_dataset(new_dataset[variable_name] in my_list)
</code></pre>
<p>I know this is a pretty generic question, but how would I do this? Is this even possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work - </p>
<pre><code>my_list=['a','b','c','d']

your_filter  = ','.join(["'" +i + "'" for i in my_list])

new_dataset  = spark.sql("SELECT * FROM hive_dataset WHERE variable_name IN ({})".format(your_filter))
</code></pre>
</div>
<span class="comment-copy">For the second method you can use <code>isin</code>: <code>new_dataset=new_dataset.where(new_dataset[variable_name].isin(my_list))</code></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/35870760/filtering-a-pyspark-dataframe-with-sql-like-in-clause">Filtering a Pyspark DataFrame with SQL-like IN clause</a></span>
<span class="comment-copy"><a href="https://docs.datastax.com/en/dse/6.0/dse-dev/datastax_enterprise/spark/sparkPredicatePushdown.html" rel="nofollow noreferrer">docs.datastax.com/en/dse/6.0/dse-dev/datastax_enterprise/spark/…</a> makes good reading</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/55288734/how-to-get-strings-separated-by-commas-from-a-list-to-a-query-in-pyspark/55335115#55335115" title="how to get strings separated by commas from a list to a query in pyspark">stackoverflow.com/questions/55288734/…</a>  I have updated my response there for DF and sql based approach.</span>
