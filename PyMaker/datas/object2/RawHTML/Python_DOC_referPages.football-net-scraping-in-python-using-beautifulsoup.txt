<div class="post-text" itemprop="text">
<h3>Problem</h3>
<p>I've managed to scrape out the names of the clubs from "goal.com", but now I need to make use of that data. I don't know how to select a particular club from that data and use it so I can make a countdown time to the next match against a particular team.</p>
<h3>Code</h3>
<pre><code>from requests import get
from bs4 import BeautifulSoup

#target site
url = "https://www.goal.com/en-in/team/real-madrid/fixtures-results/3kq9cckrnlogidldtdie2fkbl"

#get data from site
response = get(url)

#print data
print(response.status_code)

#get raw html data
match = BeautifulSoup(response.content, "html.parser")

#view the html data
#print(match.prettify)
#match_div = match.findAll('div')
#match_div = match.findAll('div', {"class":"match-data"})
#match_div = match.findAll('div', {"class":"team-away win"})
#match_div = match.find({"class":"team-name"})
#match_div = match.findAll('div', {"class":"team-away win"})
#opponent = match.find('span', {"class":"team-name"})
#opponent = match.find('span', {"class":"team-away win"})
opponent = match.findAll('span', {"class":"team-name"})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following scrapes the future dates and team ignoring past matches and includes tbc. It looks at the datetime to determine future matches as I assume countdowns are only required for those.</p>
<pre><code>from datetime import datetime
from bs4 import BeautifulSoup as bs
import requests
from dateutil import parser
import pytz

utc=pytz.UTC

r = requests.get('https://www.goal.com/en-in/team/real-madrid/fixtures-results/3kq9cckrnlogidldtdie2fkbl')
soup = bs(r.content, 'lxml')
items = soup.select('.match-main-data')
times = [item.find('time')['datetime'] if item.find('time') is not None else 'TBC' for item in items]
matches = [item['content'] for item in soup.select('[itemprop="name"][content]')]
results = list(zip(matches, times))
currentUTC = datetime.utcnow()
data = []

for result in results:
    if result[1] == 'TBC':
        data.append(result)
    else:
        dt = parser.parse(result[1])
        if dt &gt; utc.localize(currentUTC):
            data.append(result)

print(data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I like using xpath, it is very powerfull.
Input:</p>
<pre><code>from requests import get
from bs4 import BeautifulSoup
from lxml import html
import datetime

#target site
url = "https://www.goal.com/en-in/team/real-madrid/fixtures-results/3kq9cckrnlogidldtdie2fkbl"

#get data from site
response = get(url)

#print status code
print(response.status_code)

#get raw html data
tree = html.fromstring(response.content)

#get the dates
dates = tree.xpath("//a[@class='match-main-data-link']/div/span[not(text())]/../time")
dates = [date.get('datetime') for date in dates]

#get the teams
teams = tree.xpath("//a[@class='match-main-data-link']/div/span[not(text())]/../../div/div/div/span[@class='team-name']")
teams = [team.text for team in teams]

print(dates)
print(teams)
</code></pre>
<p>Output:</p>
<pre><code>200
['2019-03-31T18:45:00+00:00', '2019-04-03T19:30:00+00:00', '2019-04-06T14:15:00+00:00', '2019-04-15T19:00:00+00:00']
['Real Madrid', 'Huesca', 'Valencia', 'Real Madrid', 'Real Madrid', 'Eibar', u'Legan\xe9s', 'Real Madrid']

</code></pre>
</div>
<span class="comment-copy">Can you help me to convert this time to IST(indian standard time)</span>
<span class="comment-copy">I can have a look later when near a compute</span>
<span class="comment-copy">run the following and do any match the required time zone?  pytz.all_timezones</span>
