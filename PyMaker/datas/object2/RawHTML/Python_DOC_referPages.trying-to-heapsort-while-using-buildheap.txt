<div class="post-text" itemprop="text">
<p>I am trying to heapsort while using my buildheap but for some reason my function is not working. It works if I don't but the code in my HeapSort function outside of the function but not when it is inside. I don't know how to implement by creating a HeapSort function</p>
<pre><code>class BinHeap:
    def __init__(self):
        self.heapList = [0]
        self.currentSize = 0
    def percUp(self,i):
        while i // 2 &gt; 0:
          if self.heapList[i] &lt; self.heapList[i // 2]:
             tmp = self.heapList[i // 2]
             self.heapList[i // 2] = self.heapList[i]
             self.heapList[i] = tmp
          i = i // 2
    def insert(self,k):
      self.heapList.append(k)
      self.currentSize = self.currentSize + 1
      self.percUp(self.currentSize)
    def percDown(self,i):
      while (i * 2) &lt;= self.currentSize:
          mc = self.minChild(i)
          if self.heapList[i] &gt; self.heapList[mc]:
              tmp = self.heapList[i]
              self.heapList[i] = self.heapList[mc]
              self.heapList[mc] = tmp
          i = mc
    def minChild(self,i):
      if i * 2 + 1 &gt; self.currentSize:
          return i * 2
      else:
          if self.heapList[i*2] &lt; self.heapList[i*2+1]:
              return i * 2
          else:
              return i * 2 + 1
    def delMin(self):
      retval = self.heapList[1]
      self.heapList[1] = self.heapList[self.currentSize]
      self.currentSize = self.currentSize - 1
      self.heapList.pop()
      self.percDown(1)
      return retval
    def buildHeap(self,alist):
      i = len(alist) // 2
      self.currentSize = len(alist)
      self.heapList = [0] + alist[:]
      while (i &gt; 0):
          self.percDown(i)
          i = i - 1

    def HeapSort(alist): 
        bh = BinHeap()
        bh.buildHeap(alist)
        while bh.currentSize != 0:
            print(bh.delMin())

te = [9,5,6,2,3]                    
print(HeapSort(te))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have the answer, you just can't return it?</p>
<pre><code>def HeapSort(alist):
    result = []
    bh = BinHeap()
    bh.buildHeap(alist)
    while bh.currentSize != 0:
        result.append(bh.delMin())
    return result
</code></pre>
<p>If you want it to return a list, just build a list and return it.</p>
</div>
<span class="comment-copy">I see why you added the dummy at 0, but you really should get comfortable with zero based indexes.</span>
<span class="comment-copy">im sorry but what do you mean by this</span>
<span class="comment-copy">The zero, which is in the list but not part of the data, is a "dummy value" because it isn't actual data. (placeholder, fake value, sentinel) <a href="https://en.wikipedia.org/wiki/Sentinel_value" rel="nofollow noreferrer">en.wikipedia.org/wiki/Sentinel_value</a></span>
<span class="comment-copy">when i do this it tells me that heapsort is not defined.</span>
<span class="comment-copy">Check indentation. You can tell it's defined, but is it in the right scope? Or did your editor try to help out by moving it over a tab, so it's now a member of BinHeap (which it should not be)?</span>
