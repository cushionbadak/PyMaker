<div class="post-text" itemprop="text">
<p>I have tried all kinds of different things when it comes to this. How do I just remove all the # from this list that I created?</p>
<pre><code>import requests
from bs4 import BeautifulSoup

headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}
page = requests.get('http://www.demodms.com/annuity', headers=headers)
soup = BeautifulSoup(page.text, 'html.parser')
lists = []

for anchor in soup.find_all("a"):
    lists.append(anchor['href'])

lists.remove('#')


print(lists)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>.remove(value)</code> only removes the first occurrence.  You can use a loop to keep removing duplicate values until there are none left:</p>
<pre><code>while '#' in lists:
    lists.remove('#')
</code></pre>
<p>Perhaps a better solution is to not add unwanted values in the first place:</p>
<pre><code>for anchor in soup.find_all("a"):
    if anchor['href'] != '#':
        lists.append(anchor['href'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or a list comprehension:</p>
<pre><code>print([i for i in lists if i != '#'])
</code></pre>
<p>Or <code>filter</code>:</p>
<pre><code>print(list(filter(lambda x: x!='#',lists)))
</code></pre>
<p>Also as John Gordon says, even easier:</p>
<pre><code>for anchor in soup.find_all("a"):
    if anchor['href'] != '#':
        lists.append(anchor['href'])
</code></pre>
<p>Or a list comprehension again:</p>
<pre><code>lists = [anchor['href'] for anchor in soup.find_all("a") if anchor['href'] != '#']
</code></pre>
<p>See <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">List comprehnsions</a></p>
<p>See <a href="http://book.pythontips.com/en/latest/map_filter.html" rel="nofollow noreferrer">Map, Filter, and Reduce</a></p>
</div>
<div class="post-text" itemprop="text">
<p>One quick method for removing all instances of a character is the string method <a href="https://docs.python.org/3.7/library/stdtypes.html#str.replace" rel="nofollow noreferrer">replace</a>:</p>
<p>Assuming a list like this, updated based on your feedback. Let's say remove all <code>#</code> and <code>*</code> in strings, you just need to use replace twice:</p>
<pre><code>a = ['#AA#andRou**nds', '#abcDrat', '#ad**dchat', '#advchat', '#Aet#', '#A#Cha#t', 
    '#An#Q', '#an#alk', '#AskAvail#', '#ASP#hat', '#AT#lk', 
    '#aut#chat', '#AX###hat', '#aya#m', '#*bc*#c#', '#bc#w', '#bioet##hx']

a = [e.replace("#", "").replace("*", "") for e in a]
print(a)
</code></pre>
<p>This will loop through each element of your list using a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> and remove all instances of <code>#</code> in each string. You can send the optional count if you want to limit the number of hashtags replaced (change to <code>e.replace("#", "", 1)</code> if you only wanted to remove the first instance for example).</p>
</div>
<span class="comment-copy">Please just show your <code>lists</code> data so we can  manipulate it directly without importing and downloading external data.  BeautifulSoup and Requests have nothing to do with the actual issue at hand.</span>
<span class="comment-copy">This will remove every string with the value <code>#</code> from the list named <code>lists</code>, which is exactly what you asked for. Are you trying to do something different, like remove every <code>#</code> from every string in that list? Or truncate every string at the first <code>#</code>, removing everything after it? Orâ€¦? If so, you have to tell us what you actually want to do. It may be easier to give us a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> with sample input and desired output instead of trying to explain it.</span>
<span class="comment-copy">Also, is there a reason this is called <code>lists</code>? That implies that it's going to be a list of lists, or something like that, but from your code, it looks like it's going to be a list of strings. Obviously, the right thing to do for a list of strings isn't going to the same as the right thing to do for a list of lists of strings.</span>
<span class="comment-copy">I liked the second solution you offered. It worked better and logically would be cleaner than making another loop that just would be redundant. Thanks for this feedback.</span>
<span class="comment-copy">The while loop that you have above works great just for one item, but if I try to remove '#' or '/events/' I keep getting an error. What is the best way to loop through the entire list and remove them in one swipe vs making a loop for each set of items I want to remove? I've tried using <code>while '#' or '/events/'</code> and <code>while '#' and '/events/'</code> but neither work.</span>
<span class="comment-copy">@Kamikaze_goldfish if you just want to remove all the instances of multiple strings: use replace as in my answer or alter it to do a double remove in the while loop in the same fashion.</span>
