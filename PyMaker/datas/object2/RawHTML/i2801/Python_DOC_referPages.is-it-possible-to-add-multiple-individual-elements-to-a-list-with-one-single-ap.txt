<div class="post-text" itemprop="text">
<p>Using Python, I would like to be able to add multiple values/elements/items to a single list without having to repeat the .append method </p>
<p>Here is an example of what I mean. Review the following Python function:</p>
<pre><code>singleList = []

def cal(rock):
    singleList.append(rock)
    singleList.append(input('Size: '))
    singleList.append(int(input('Qty: ')))
    print(singleList)

rock = cal(input('Rock: '))

Rock: granite
Size: small
Qty: 2

['granite', 'small', 2]
</code></pre>
<p>The --  singleList.append(list_element) -- statement must be repeated each time. Is it not possible to do something more like this:</p>
<pre><code>singleList = []

def cal(rock):
    singleList.append(rock), input('Size: '), int(input('Quantity: '))
    print(singleList)

rock = cal(input('Rock: '))
</code></pre>
<p>...and still end up with: </p>
<pre><code>['granite', 'small', 2]
</code></pre>
<p>Every way that I try to do this, I get the following error.</p>
<blockquote>
<p>TypeError: append() takes exactly one argument (3 given)</p>
</blockquote>
<p>I understand that .append() can only accept one argument, as per the error message. Is there an alternative way around this, or do people just repeat the .append() statement for each argument/element/value/item?</p>
<p>P.S. anyone know the correct term for: argument/element/value/item?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do </p>
<pre><code>singleList.extend(
                 [rock, input('Size: '), int(input('Quantity: '))]
                 )
</code></pre>
<p>or equivalently </p>
<pre><code>singleList += [rock, input('Size: '), int(input('Quantity :'))]
</code></pre>
<p>which is syntactic sugar for <code>singleList = singleList + &lt;other list&gt;</code> and where Python interprets the <code>+</code> using the <code>__iadd__</code> method, more details can be <a href="https://stackoverflow.com/questions/2347265/why-does-behave-unexpectedly-on-lists">found here</a> if you're interested. As pointed out in the comments, this will mutate the list in place, so you can't use it directly in a <code>print</code> or <code>return</code> statement. </p>
</div>
<div class="post-text" itemprop="text">
<p>You have mainly two options: </p>
<p>1) Use <a href="https://docs.python.org/3/tutorial/datastructures.html#more-on-lists" rel="nofollow noreferrer"><code>extend</code></a>: </p>
<pre><code>singleList.extend([rock, input('Size: '), int(input('Quantity: '))])
</code></pre>
<p>2) Concatenate your list with another list: </p>
<pre><code>singleList += [rock, input('Size: '), int(input('Quantity: '))]
</code></pre>
<p>They are quite close in performance: </p>
<pre><code>$ python -m timeit 'l = [1,2,3]; l.extend([4,5,6,7,8,9])'
1000000 loops, best of 3: 0.553 usec per loop

$ python -m timeit 'l = [1,2,3]; l += [4,5,6,7,8,9]'
1000000 loops, best of 3: 0.493 usec per loop
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>singleList.extend(
    [rock, input('Size: '), int(input('Quantity: '))]
)
</code></pre>
</div>
<span class="comment-copy">Look at <code>.extend()</code> (<code>help(list.extend)</code>). (There’s also <code>+=</code> but it can be a little confusing.)</span>
<span class="comment-copy">First, you need to be careful about parentheses. <code>singleList.append(rock), …</code> is only passing <code>rock</code> to <code>append</code>. Whatever comes after that <code>,</code>, you're just building a tuple out of the result of calling <code>append(rock)</code> and those other values. You are <i>not</i> passing 3 arguments to <code>append</code> in that code. If you want to pass multiple arguments, you have to put them all inside the <code>()</code>. If you want to pass a list, tuple, or other collection as an argument, you have to put the whole collection inside the <code>()</code>.</span>
<span class="comment-copy">One you fix <i>that</i> problem, then you'll be trying to <code>append</code> a list or tuple of three values to <code>singleList</code>, which will <i>work</i>, but do the wrong thing. That's when switching to <code>extend</code> will solve your problem.</span>
<span class="comment-copy">Meanwhile, your function doesn't return anything; it just modifies <code>singleList</code> and then <code>print</code>s it. So, after that call, <code>rock</code> is just going to be <code>None</code>.</span>
<span class="comment-copy"><code>a += b</code> is not syntactic sugar for <code>a = a + b</code>. If it were, the list would not be modified in-place.</span>
<span class="comment-copy">@abarnert Thank you, I've edited my answer to reflect that.</span>
<span class="comment-copy">While this code snippet may solve the question, <a href="http://meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers">including an explanation</a> really helps to improve the quality of your post. Remember that you are answering the question for readers in the future, and those people might not know the reasons for your code suggestion.</span>
