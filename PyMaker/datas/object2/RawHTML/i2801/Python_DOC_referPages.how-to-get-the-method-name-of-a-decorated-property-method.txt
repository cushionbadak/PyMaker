<div class="post-text" itemprop="text">
<p>Lets say I have a method which I decorate with <code>@property</code>.</p>
<p>Is there a way to get the underlying name of the decorated method?</p>
<p>How could I for instance print the name of the property when it does not have a <code>__name__</code> attribute?</p>
<p>I'm trying to do a RPC call and everything works for methods and static functions but not this.</p>
</div>
<div class="post-text" itemprop="text">
<p>A property has the following attributes: <em>fget</em>, <em>fset</em> and <em>fdel</em>, which are references to the getter/setter/deleter functions.</p>
<p>So, you can get the <code>__name__</code> of each of this functions (if not <code>None</code>)</p>
<p>Demo:</p>
<pre><code>class Thing(object):
    @property
    def foo(self):
        return "foo"

    def get_baz(self):
        return "baz"

    bar = property(get_baz)

&gt;&gt;&gt; Thing.foo.fget.__name__
'foo'
&gt;&gt;&gt; Thing.bar.fget.__name__
'get_baz'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>i think if use decorator @property you can access your function with name of function and you can give return value.</p>
<pre><code>class Foo:
   value = 'Foo'
   def setName(self, name):
      self.value = name
   @property
   def name(self):
     return "You name is: {}".format(self.value)

foo = Foo()
print(foo.name)
foo.setName('Bar')
print(foo.name)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you use <a href="https://docs.python.org/3/library/functools.html#functools.wraps" rel="nofollow noreferrer"><code>functools.wraps()</code></a> in your decorator, the decorated function <em>will</em> have the <code>__name__</code> of the wrapped function.</p>
<p>IF you had some sample code for the decorator in your question, I could show more precisely how to do this...</p>
</div>
<span class="comment-copy">Isn't the name of the method decorated by <code>@property</code> always the same as the name of the property itself?</span>
<span class="comment-copy">Sure but it does not have a attribute like <code>__name__</code>.</span>
<span class="comment-copy">Thank you, that worked!</span>
