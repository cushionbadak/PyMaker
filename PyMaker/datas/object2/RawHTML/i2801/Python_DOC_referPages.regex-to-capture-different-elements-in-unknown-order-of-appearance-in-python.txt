<div class="post-text" itemprop="text">
<p>I am building a regex to extract the header values from a forwarded email in Python. I am only interested in the first appearance of these kinds of headers in an email and I only want to capture the text parts appearing after the colons.   </p>
<pre><code>From: ...  
Sent: ...   
To: ...   
Subject: ...  
</code></pre>
<p>The following regex works fine using <code>re.search</code> for most variations of the above format:</p>
<pre><code>(?:From\s*:\s*)(.*)(?:\n*)(?:Sent\s*:\s*)(.*)(?:\n*)(?:To\s*:\s*)(.*)(?:\n*)(?:Subject\s*:\s*)
</code></pre>
<p>but sometimes, the different header parts are ordered differently and have missing elements, such as below:</p>
<pre><code>Sent: ...    
From: ...  
Subject: ... 
</code></pre>
<p>I thought I could use a positive lookahead to match the header format in any order but I could not get this to work. Does anyone have any idea how this can be done efficiently? Any help is greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>One possibility would be to never consume any characters, and use lookahead to capture everything you need in optional groups:</p>
<pre><code>(?=(?:.*^From\s*:\s*)(.*?$)|)(?=(?:.*^Sent\s*:\s*)(.*?$)|)(?=(?:.*^To\s*:\s*)(.*?$)|)(?=(?:.*^Subject\s*:\s*)(.*?$)|)
</code></pre>
<p><a href="https://regex101.com/r/pOThDP/2" rel="nofollow noreferrer">https://regex101.com/r/pOThDP/2</a></p>
<p>Spaced out, that's just 4 repititions of a similar pattern that looks like:</p>
<pre><code>(?=(?:.*^From\s*:\s*)(.*?$)|)
(?=(?:.*^Sent\s*:\s*)(.*?$)|)
(?=(?:.*^To\s*:\s*)(.*?$)|)
(?=(?:.*^Subject\s*:\s*)(.*?$)|)
</code></pre>
<p>Also, you might consider named capture groups, for clarity:</p>
<pre><code>(?=(?:.*^From\s*:\s*)(?P&lt;From&gt;.*?$)|)(?=(?:.*^Sent\s*:\s*)(?P&lt;Sent&gt;.*?$)|)(?=(?:.*^To\s*:\s*)(?P&lt;To&gt;.*?$)|)(?=(?:.*^Subject\s*:\s*)(?P&lt;Subject&gt;.*?$)|)
</code></pre>
<p><a href="https://regex101.com/r/pOThDP/3" rel="nofollow noreferrer">https://regex101.com/r/pOThDP/3</a></p>
<p>Edit: Example in python code:</p>
<pre><code>text = '''To: totext
Sent: sent text
this text has no no "from" label
Subject: subject text'''
pattern = re.compile(r'(?=(?:.*^From\s*:\s*)(.*?$)|)(?=(?:.*^Sent\s*:\s*)(.*?$)|)(?=(?:.*^To\s*:\s*)(.*?$)|)(?=(?:.*^Subject\s*:\s*)(.*?$)|)', flags=re.S | re.M)
match = re.search(pattern, text)
print(match.groups())
</code></pre>
<p>Output is:</p>
<pre><code>(None, 'sent text', 'totext', 'subject text')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this pattern: <code>\G(From:|Subject:|Sent:|To:)(.+)\n</code></p>
<p>Requirement, that it should capture only first block, is fulfilled by <code>\G</code> anchor, which makes sure next match (Sent/To/From/Subject) is met right after the previous one, so header of another mail isn't matched, because it will be separated by content of an e-mail.</p>
<p>Alternation makes sure, that it will match the header independently of the order of Sent/To/From/Subject.</p>
<p><a href="https://regex101.com/r/bm0XIq/1" rel="nofollow noreferrer">Demo</a></p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/email.parser.html" rel="nofollow noreferrer">docs.python.org/3/library/email.parser.html</a></span>
<span class="comment-copy">I don't think I can use this library as my data set is multilingual.</span>
<span class="comment-copy">This looks great! When I try it out in regex101 it works (only issue is that it doesn't just capture the first occurrence). For some reason however, my python code finds a match in each email with this regex that captures only None for each of the values. I'm not sure why though.</span>
<span class="comment-copy">Update: I forgot to set the m and s flags. It works perfectly now! Do you have any idea how this can be adapted to only return the first match for each of the different parts?</span>
<span class="comment-copy">Make all the quantifiers before the label text lazy instead of greedy, eg <code>(?=(?:.*?^From</code> <a href="https://regex101.com/r/pOThDP/4" rel="nofollow noreferrer">regex101.com/r/pOThDP/4</a></span>
<span class="comment-copy">I'm sorry, I meant it differently.. Let's say the first header block contains only From, Sent, To, and the second block contains From, Sent, To, Subject, then I don't want the result to include the Subject line of the second forwarded block, but now that one is captured because the first block didn't contain that one.</span>
<span class="comment-copy">Can you give a fuller example of the input and desired output? You might require there not be two line breaks in a row, maybe</span>
