<div class="post-text" itemprop="text">
<p>Suppose I have this data:</p>
<pre><code>dat = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
<p>and I want to subset vector <code>a</code> from <code>begin</code> to <code>end</code> and vector <code>b</code> that does not include from <code>begin</code> to <code>end</code> that are values (not indexes).</p>
<pre><code>begin = 4
end = 7
</code></pre>
<p>How would I accomplish this?</p>
<p>Desired output:</p>
<pre><code>a = [ 4 5 6 7 ]
b = [ 1 2 3 8 9 10 ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I <em>think</em> you're intending those <code>begin</code> and <code>end</code> values to be values in the list, not indexes into it. (Although it would be a whole lot clearer if your values weren't monotonically increasing integers that look just like indexes…)</p>
<p>Otherwise, all you'd need is <code>dat[:begin] + dat[end:]</code> and <code>dat[begin:end]</code>, but those would be the wrong values for your example—you clearly don't want to start at position 4, but position 3 (which has value 4).</p>
<hr/>
<p>And I <em>think</em> you're expecting the values to be in sorted order, but that's kind of a wild guess.</p>
<p>If so, what you want to do is find the positions of <code>begin</code> and <code>end</code> in the list. You can do this by manually walking the list until you find them, but let's be clever and use the <a href="https://docs.python.org/3/library/bisect.html" rel="nofollow noreferrer"><code>bisect</code></a> library:</p>
<pre><code>beginpos = bisect.bisect_left(dat, begin)
endpos = bisect.bisect_right(dat, end)
outside = dat[:beginpos] + dat[endpos:]
inside = dat[beginpos:endpos]
</code></pre>
<p>Notice that I used <code>bisect_left</code> on the left and <code>bisect_right</code> on the right, to make sure we get a half-open range (that is, the "stop" index is not part of the range) even though you specified the <code>begin</code> and <code>end</code> as a closed range (that is, 7 is supposed to be in the output, if it's present).</p>
<hr/>
<p>If they're <em>not</em> sorted, the question is ambiguous. There could be multiple ranges from 4-7 in the list. They could even overlap. So, you need to better specify the problem before you can solve it. But maybe you just want, say, all the values where <code>4 &lt;= value &lt;= 7</code>, without thinking in terms of ranges at all? That's easy:</p>
<pre><code>outside = [value for value in dat if not 4 &lt;= value &lt;= 7]
inside = [value for value in dat if 4 &lt;= value &lt;= 7]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You'll want to use slice notation.</p>
<pre><code>a = dat[begin-1:end]
b = dat[:begin-1] + dat[end:]
</code></pre>
<p>If you meant <code>begin</code> and <code>end</code> as data (where <code>begin</code> and <code>end</code> are distinct), then just find where the elements are first:</p>
<pre><code>start_ind = dat.index(4)
stop_ind = dat.index(7)

a = dat[start_ind:stop_ind+1]
b = date[:start_ind] + dat[stop_ind+1:]
</code></pre>
<p>If your elements are sorted, use <code>bisect.bisect()</code> instead of <code>index()</code>. If you have duplicates/overlap, then you'll have to be more specific in the question.</p>
<p>Remember that the <code>[start:stop:step]</code> slice notation is NOT inclusive on <code>stop</code>.</p>
</div>
<span class="comment-copy">Are those <code>begin</code> and <code>end</code> values, or indexes? (It might help if your example list values weren't monotonically increasing integers that all look like indexes…)</span>
<span class="comment-copy">@abarnert They are values, not indexes. Sorry for the confusion.</span>
<span class="comment-copy">Good call on the overlap/non-distinct issues here, +1. I think the question is probably not specific enough for the general case, but hopefully one of us covered what the OP is after :P</span>
<span class="comment-copy">@MattMessersmith I think between us we probably covered what the OP is after, and also anything anyone who manages to find this question in a search might be after… the only problem is whether they'll be able to figure out which question they were asking to find the right answer…</span>
<span class="comment-copy">I don't think this is what he's after. Although it's hard to be sure, with an ambiguous question.</span>
<span class="comment-copy">Yeah, i think you're right. i saw your comment on the question. i've updated</span>
