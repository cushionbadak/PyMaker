<div class="post-text" itemprop="text">
<p>I have a chat bot that displays information <strong>from a call</strong> to <strong>an API</strong>. </p>
<pre><code>def btcChange(bot, update):
"""Send a message when the command /btc24 is issued."""
btcChangeCallJson = requests.get("https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC&amp;tsyms=USD,EUR").json()
btcChange = btcChangeCallJson['RAW']['BTC']['USD']['CHANGE24HOUR']
btcVol = btcChangeCallJson ['RAW']['BTC']['USD']['TOTALVOLUME24HTO']
btcPrice = btcChangeCallJson ['RAW']['BTC']['USD']['PRICE']
update.message.reply_text("Price change over 24H:  $" + str (btcChange)+
                          "              Volume for 24 hours :  ${}".format(btcVol)+
                          "              The price of the coin is:   ${}".format(btcPrice))
</code></pre>
<p>I would like to display the following information more clearly:</p>
<ul>
<li>Having it break and skip to the next line</li>
<li>Have <code>(btcChange)</code>, <code>(btcVol)</code>, <code>(btcPrice)</code> proper commas like <code>100,000</code>.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>If you're trying to get commas in the JSONâ€¦ well, you can't; that would make it invalid JSON, which no program can read, so Python's <code>json</code> library won't let you do that.</p>
<p>If the whole JSON thing is irrelevant, and you just want to know how to get commas when formatting a number using <code>str.format</code>, then you just need to look at the <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">Format Specification Mini-Language</a> or maybe a third-party tutorial or cheatsheet that's not quite as dense).</p>
<p>If you have a modern version of Python, there are two choices.<sup>1</sup></p>
<p>A <code>,</code> for the <code>grouping_option</code> can be used together with any of the normal number presentation types, including the default <code>d</code> type for integers, and it will add commas every 3 digits:</p>
<pre><code>&gt;&gt;&gt; "Price: ${:,}".format(100000)
'Price: $100,000'
</code></pre>
<p>Alternatively, you might want to use the special presentation type <code>n</code>, which sues the appropriate separates for your current locale. That might be commas every 3 digits, dots every 3 digits, the ...-2-2-3 thing that's used in India, etc., depending on your locale. Although the default "C" locale actually has no separators at all, so it may not be very useful if that's your setting:</p>
<pre><code>&gt;&gt;&gt; "Price: ${:n}".format(100000)
'Price: $100000'
</code></pre>
<hr/>
<p><sub>1. Basically that means 2.7 or 3.1+, which covers most people nowadays. Grouping options were added in 3.6, but <code>,</code> as a special case with only slightly different details goes back to 2.7/3.1. <code>n</code> goes back to the initial version of <code>str.format</code>, but didn't do the right thing until 2.7/3.1.</sub></p>
</div>
<span class="comment-copy">Thanks man you rock! Thanks for the fast response!</span>
<span class="comment-copy">@toBePythonNinja consider clicking the tick to accept the answer if it solves your issue.</span>
