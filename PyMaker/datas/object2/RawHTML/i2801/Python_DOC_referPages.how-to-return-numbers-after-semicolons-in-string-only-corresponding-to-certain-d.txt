<div class="post-text" itemprop="text">
<pre><code>['2017-07-17', '2017-07-27', '2017-07-17;14', '2017-07-17;5', '2017-07-19;11', '2017-07-19;13', '2017-07-23;4', '2017-07-27;-1']
</code></pre>
<p>I want to extract all the numbers to the right of the semicolon corresponding to a date. For example, with date <code>'2017-07-17'</code>, I want to return the list <code>[14,5]</code>. And for date <code>2017-07-23</code> I just want to return <code>[4]</code>.</p>
<p>How can I do this? I only know of iterating through the indices to extract numbers but that's not going to get me lists of numbers corresponding to certain dates.</p>
<p><code>for eventIndex in range(2,len(path)):
   curr_date = path[eventIndex].split(';')[0]</code></p>
<p>Will only get me the corresponding numbers traversed, but I just have no idea how to get lists corresponding to each date.</p>
</div>
<div class="post-text" itemprop="text">
<p>Choose a proper data structure e.g. a <code>collections.defaultdict</code> with <code>list</code> as the factory:</p>
<pre><code>In [1233]: out = collections.defaultdict(list)

In [1234]: lst = ['2017-07-17', '2017-07-27', '2017-07-17;14', '2017-07-17;5', '2017-07-19;11', '2017-07-19;13', '2017-07-23;4', '2017-07-27;-1']

In [1235]: for i in lst:
      ...:     m, _, n = i.partition(';')
      ...:     if n:
      ...:         out[m].append(n)
      ...:         

In [1236]: out
Out[1236]: 
defaultdict(list,
            {'2017-07-17': ['14', '5'],
             '2017-07-19': ['11', '13'],
             '2017-07-23': ['4'],
             '2017-07-27': ['-1']})

In [1237]: out['2017-07-17']
Out[1237]: ['14', '5']

In [1238]: out['2017-07-23']
Out[1238]: ['4']
</code></pre>
<p>Here, we're iterating over the list, partitioning strings on <code>;</code>, and using the date portion as the key to the <code>out</code> dictionary with values being the right sided substrings appended.</p>
</div>
<div class="post-text" itemprop="text">
<p>Join your list with a character that is not present in your list (<em>e.g.</em> <code>|</code>), then use a regex to find the numbers that are after a semicolon after the date in question:</p>
<pre><code>import re

l = ['2017-07-17', '2017-07-27', '2017-07-17;14', '2017-07-17;5', '2017-07-19;11', '2017-07-19;13', '2017-07-23;4', '2017-07-27;-1']

&gt;&gt;&gt; re.findall('2017-07-17;(\d+)','|'.join(l))
['14', '5']

&gt;&gt;&gt; re.findall('2017-07-23;(\d+)','|'.join(l))
['4']
</code></pre>
<p>If you need them as numeric dtypes and not strings, use <code>map(int,...)</code>:</p>
<pre><code>&gt;&gt;&gt; list(map(int,re.findall('2017-07-17;(\d+)','|'.join(l))))
[14, 5]
</code></pre>
</div>
<span class="comment-copy">Please share what you've tried so far; Stack Overflow is a question answering service, not a code writing service. Consider reading <a href="https://stackoverflow.com/help/how-to-ask">How do I ask a good question?</a></span>
<span class="comment-copy">You know how to iterate the list. Good. Now you need to process the strings. I suggest reading the Python documentation on <a href="https://docs.python.org/3/library/stdtypes.html#string-methods" rel="nofollow noreferrer">String Methods</a> to see which weapons you have available.</span>
<span class="comment-copy">So far I've tried <code>for eventIndex in range(2,len(path)): curr_date = path[eventIndex].split(';')[0]</code></span>
<span class="comment-copy">But that only gets me the corresponding number after each date traversed.</span>
