<div class="post-text" itemprop="text">
<p>html.escape() and .unescape() are not symmetrical. According to <a href="https://docs.python.org/3/library/html.html" rel="nofollow noreferrer">the docs</a>, escape only converts &amp;, &lt; and &gt;, whereas .unescape handles "all named and numeric character references". How can I escape all characters that .unescape() unescapes?</p>
<p>Current behavior:</p>
<pre><code>html.unescape('&amp;deg;')
'°'
html.escape('°')
'°'
</code></pre>
<p>Desired Behavior:</p>
<pre><code>html.unescape('&amp;deg;')
'°'
html.escape('°')
'&amp;deg;'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The documentation you linked to links to this:</p>
<pre><code>html.entities.codepoint2name
</code></pre>
<p>As another poster pointed out, you probably don't really want to escape <em>everything</em>, since there are entity names, or at least numeric escapes, for every character.</p>
<p>Given the above mapping, however, you can certainly create your own function that goes through a string character by character, and either keeps the original character or replaces it with an entity from the above dictionary. Just choose which characters, or ranges of characters, you most want to represent in entity form rather than character form.</p>
</div>
<span class="comment-copy"><i>Every</i> character can be unescaped from a numeric character reference. Even regular characters like spaces and letters. Do you really want to escape <i>everything</i>?</span>
<span class="comment-copy">Also, there's no inverse for <code>unescape</code>, because two strings can unescape to the same string.</span>
<span class="comment-copy">(Correction after looking up the <a href="https://www.w3.org/TR/html52/syntax.html#character-references" rel="nofollow noreferrer">spec</a>: numeric character references can be used for <i>almost</i> any character, but not "U+0000, U+000D, permanently undefined Unicode characters (noncharacters), surrogates (U+D800–U+DFFF), and control characters other than space characters".)</span>
<span class="comment-copy">Fair enough. I should say I need to convert character references for which there is no direct keyboard equivalent (Alt + numeric keypad codes notwithstanding).</span>
<span class="comment-copy">It seems like for now html.escape() is limited to escaping a hard-coded set of just &lt;, &gt; and &amp;. I could argue that it should provide some configurable ability to escape sensible subsets of the entity character reference space, such as "all symbols beyond standard keyboard punctuation", which is surely a common use case. Alas, that is just a feature request and we're confined to manually escaping anything that isn't an angular bracket or ampersand.</span>
