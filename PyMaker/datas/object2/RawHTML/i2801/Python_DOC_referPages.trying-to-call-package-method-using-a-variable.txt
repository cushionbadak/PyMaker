<div class="post-text" itemprop="text">
<p>Im trying to store the method in a package in a variable as it might change and I dont want to manually update in multiple places in the code.</p>
<pre><code>import hashlib as hashy

foo='hello world'
bar='hello world'

algo='md5'
hfoo=hashy.algo(foo.encode())
hbar=hashy.algo(bar.encode())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In this particular case you can use <a href="https://docs.python.org/3/library/hashlib.html#hashlib.new" rel="nofollow noreferrer">hashlib.new()</a> to create a hasher by its name.</p>
<pre><code>import hashlib  # don't randomly rename standard libraries
ALGORITHM = 'md5'
h = hashlib.new(ALGORITHM)
h.update('hello world'.encode('utf-8'))
print(h.hexdigest())
</code></pre>
<p>If you think you might want to change which function in a module you're calling, you can wrap it in your own function, which is right generic answer to the question you're asking.</p>
<pre><code>import hashlib

def hash(s):
    hashlib.md5(s.encode('utf-8'))

print hash('hello world')
</code></pre>
<p>You <em>can</em> use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">getattr()</a> on a module to retrieve a function by name, but that's not the usual way to do things.</p>
</div>
