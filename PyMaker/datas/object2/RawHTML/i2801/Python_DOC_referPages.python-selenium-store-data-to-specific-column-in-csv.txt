<div class="post-text" itemprop="text">
<p>I have two prints that I want to write to a single <strong>CSV</strong> File into Column <strong>A</strong> and Column <strong>B</strong> </p>
<p>My problem is when I print both(first and second print) at the end , I get only an element, multiple times I guess because it's not inside a loop or so.</p>
<pre><code>print((text), (link[0:-9]))
</code></pre>
<p><strong>Result :</strong></p>
<pre><code>LMFCIIC PWFERT-BK
LMFCIIC PMFEP-BK
LMFCIIC LMF8CC-BL
LMFCIIC PMFEP-GY
LMFCIIC ASPCP-NV
LMFCIIC LWBASK-PK
LMFCIIC LWBATA-PK
LMFCIIC LWBATOP-PK
LMFCIIC LMF8CC-RD
</code></pre>
<p>My first print looks like this : And I want to print it to Column <strong>A</strong></p>
<pre><code>PWFERT-BK
PMFEP-BK
LMF8CC-BL
PMFEP-GY
ASPCP-NV
LWBASK-PK
LWBATA-PK
LWBATOP-PK
LMF8CC-RD
</code></pre>
<p>My Second print looks like this : And I want to print it to Column <strong>B</strong></p>
<pre><code>LMFCIIC


LWBASK
LWBATA
LWBATOP
LMFCIIC
</code></pre>
<p>Here is my full code : </p>
<pre><code>from bs4 import BeautifulSoup
from selenium import webdriver
import html5lib
import time
import requests

driver_path = '/usr/local/bin/chromedriver 2'
driver = webdriver.Chrome(driver_path)
driver.implicitly_wait(10)

driver.get('https://www.tenniswarehouse-europe.com/zzz/producttracker_bl.html?ccode=SWIMG030')
try:
    iframe = driver.find_elements_by_tag_name('iframe')
    for i in range(0, len(iframe)):
            f = driver.find_elements_by_tag_name('iframe')[i]
            driver.switch_to.frame(i)
            #  your work to extract link
            text = driver.find_element_by_tag_name('body').text
            text = text.replace("Code: ","")
            text = text.replace("No Copy Images to TW Server","")
            print(text)
            driver.switch_to_default_content()
finally:
    driver.quit()

resp = requests.get('https://www.tenniswarehouse-europe.com/zzz/producttracker_bl.html?ccode=SWIMG030')
soup = BeautifulSoup(resp.text,"lxml")
for frame in soup.findAll('img'):
    link = (frame['src'])
    link = link.split('=')[1] 
    print ((link[0:-9]))
</code></pre>
<ul>
<li>I used <strong>www.example.com</strong> because the link is not accessible out of my network</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>when you write <code>driver.switch_to.frame(i)</code> you are basically accessing iframe html element. like normal html page you can access its inside element as well. </p>
<p>from your previous question iframe was like</p>
<pre><code>&lt;body&gt;
&lt;a href="http://www.test2.com" target="_blank"&gt;
&lt;img src="https://img2.test2.com/LWBAD-1.jpg"&gt;&lt;/a&gt;
&lt;br/&gt;Code: LWBAD
</code></pre>
<p>you can easily access image url by</p>
<pre><code>img_src = driver.find_element_by_tag_name('img').get_attribute('src')
</code></pre>
<p>and store that in csv file</p>
<p><strong>code:</strong></p>
<pre><code>from bs4 import BeautifulSoup
from selenium import webdriver
import html5lib
import time
import requests
import csv

driver_path = '/usr/local/bin/chromedriver 2'
driver = webdriver.Chrome(driver_path)
driver.implicitly_wait(10)

driver.get('https://www.example.com')

iframe = driver.find_elements_by_tag_name('iframe')
images = driver.find_elements_by_tag_name('img')
with open('file_name.csv', 'w', newline='') as csvfile:
    field_names = ['text', 'src']
    writer = csv.DictWriter(csvfile, fieldnames=field_names)
    writer.writerow({'text': 'text', 'src': 'src'})
    for i in range(0, len(iframe)):
        f = driver.find_elements_by_tag_name('iframe')[i]
        img_src = images[i].get_attribute('src')

        # do the src splitting here
        img_src = img_src.split('=')[1]

        driver.switch_to.frame(i)

        text = driver.find_element_by_tag_name('body').text


        text = text.replace("Code: ", "")
        text = text.replace("No Copy Images to TW Server", "")
        print(text)
        writer.writerow({'text': text, 'src': img_src})

        driver.switch_to_default_content()
driver.quit()
</code></pre>
</div>
<span class="comment-copy">You can use pandas library it has method called df.to_csv("filename.csv") using which you can save it to csv</span>
<span class="comment-copy">Don't <code>print</code> to CSV. Use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code> package</a> instead of reinventing the wheel.</span>
<span class="comment-copy">@zvone - would you mind telling me where should I change my code so I can save time not reinventing the wheel ?</span>
<span class="comment-copy">anyone that could guide me to the right path, please ?</span>
<span class="comment-copy">@Andie31 please solve indent problem in last 4 lines of your code</span>
<span class="comment-copy">if you want further explaination of csv writer you can refer my previous answer with <a href="https://stackoverflow.com/a/51568748/7053679">this link</a></span>
<span class="comment-copy">trying to piece all together with the first part of code, having issues :(  <code>AttributeError: module 'csv' has no attribute 'DictWriter'</code> on line 15 Do u mind checking it ?</span>
<span class="comment-copy">use <code>import csv</code></span>
<span class="comment-copy">i did :(  no luck</span>
<span class="comment-copy">you forgot to include  <code>iframe = driver.find_elements_by_tag_name('iframe')</code></span>
