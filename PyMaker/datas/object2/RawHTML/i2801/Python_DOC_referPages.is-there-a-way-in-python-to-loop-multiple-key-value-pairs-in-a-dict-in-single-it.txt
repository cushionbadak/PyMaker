<div class="post-text" itemprop="text">
<p>I have the following example code and was interested if there was a way in Python to loop multiple key value pairs in a single loop iteration? If you see my example I have a dictionary with four key value pairs is there a way in python to loop this in a single pass?</p>
<pre><code>my_dict = {'key1':'value1', 'key2':'value2', 'key3':'value3', 'key4':'value4'}

count = 1
for key, value in my_dict.items():
    print('the count is {} the key is {} and the value is {}'.format(count, key, value))

    count += 1
</code></pre>
<hr/>
<pre><code>the count is 1 the key is key4 and the value is value4
the count is 2 the key is key3 and the value is value3
the count is 3 the key is key1 and the value is value1
the count is 4 the key is key2 and the value is value2
</code></pre>
<hr/>
<p>expected return data would look like this</p>
<pre><code>iteration count 1 - key1 value1, key2 value2, key3 value3, key4 value4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> with <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> to keep the current index.</p>
<pre><code>import os

out = 'count: {}, key: {}, val: {}'
my_dict = {'key1':'value1', 'key2':'value2', 'key3':'value3', 'key4':'value4'}
os.linesep.join([out.format(c, *kv) for c, kv in enumerate(my_dict.items())])
</code></pre>
<p>Output:</p>
<pre><code>count: 0, key: key3, val: value3
count: 1, key: key2, val: value2
count: 2, key: key1, val: value1
count: 3, key: key4, val: value4
</code></pre>
<p><strong>Example with condition:</strong></p>
<p>To answer the question in your comment, if you want to add or not items depending on a condition (btw, more <code>if</code> are possible):</p>
<pre><code>[(c, *kv) for c, kv in enumerate(my_dict.items()) if c % 0 and len(kv[1]) &lt; 5)
</code></pre>
<p>Also consider...</p>
<pre><code>def do_something(c, kv):
    key, value = kv
    if key == 'key1':
        pass  # do something

    # somewhere return True or False depending on your logic

[(c, *kv) for c, kv in enumerate(my_dict.items()) if do_something(c, kv)
</code></pre>
</div>
<span class="comment-copy">Is this not a single loop? What do you really want?</span>
<span class="comment-copy">What I mean to say is a single loop with a single iteration in the loop. If you see the count the iteration count is four. I was trying to do this in a single iteration.</span>
<span class="comment-copy">A loop with single iteration is not a loop, but simply a statement</span>
<span class="comment-copy">What would you want to do in this single iteration? What would the loop iterations return other than the whole dict itself? Which you can get without looping.</span>
<span class="comment-copy">This is what I was looking for. But just another question is there a way to add an if condition to this? for example if key == 'key1' do something</span>
