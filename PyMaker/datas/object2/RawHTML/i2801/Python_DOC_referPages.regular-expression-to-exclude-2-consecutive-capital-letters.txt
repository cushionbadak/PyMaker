<div class="post-text" itemprop="text">
<p>I'm having difficulty using regex to solve this expression,</p>
<pre><code>e.g when given below: 
regex_exp(address, "OG 56432") 
</code></pre>
<p><br/>
It should return</p>
<pre><code>"OG 56432: Middle Street Pollocksville | 686"
</code></pre>
<p><br/>
address is an array of strings:</p>
<pre><code>address = [
  "622 Gordon Lane St. Louisville OH 52071",
  "432 Main Long Road St. Louisville OH 43071",
  "686 Middle Street Pollocksville OG 56432"
]
</code></pre>
<p><br/>
My solution currently looks like this (Python):
<br/></p>
<pre><code>import re
def regex_exp(address, zipcode):
    for i in address:
        if zipcode in i:
            postal_code = (re.search("[A-Z]{2}\s[0-9]{5}", x)).group(0)
            # returns "OG 56432"

            digits = (re.search("\d+", x)).group(0)
            # returns "686"

            address = (re.search("\D+", x)).group(0)
            # returns "Middle Street Pollocksville OG"

            print(postal_code + ":" + address + "| " + digits)

regex_exp(address, "OG 56432")
# returns OG 56432: High Street Pollocksville OG | 686
</code></pre>
<p>As you can see from my second paragraph, this is not the correct answer - I need the returned value to be </p>
<pre><code>"OG 56432: Middle Street Pollocksville | 686"
</code></pre>
<p>How do I manipulate my address variable Regex search to exclude the 2 capital consecutive capital letters? I've tried things like</p>
<pre><code>address = (re.search("?!\D+", x)).group(0)
</code></pre>
<p>to remove the two consecutive capitals based on <a href="https://stackoverflow.com/questions/2078915/a-regular-expression-to-exclude-a-word-string">A regular expression to exclude a word/string</a> but I think this is a step in the wrong direction.</p>
<p>PS: I understand there are easier methods to solve this, but I want to use regex to improve my fundamentals</p>
</div>
<div class="post-text" itemprop="text">
<p>If you just want to remove the two consecutive Capital Letters which are predecessor of zip-code(a 5 digit number) then use this</p>
<pre><code>import re
text = "432 Main Long PC Market Road St. Louisville OG 43071"
address = re.sub(r'([A-Z]{2}[\s]{1})(?=[\d]{5})','',text)
print(address) 
# Output: 432 Main Long PC Market Road St. Louisville 43071
</code></pre>
<p>For removing all occurrences of two consecutive Capital Letters:</p>
<pre><code>import re 
text = "432 Main Long PC Market Road St. Louisville OG 43071" 
address = re.sub(r'([A-Z]{2}[\s]{1})(?=[\d]{5})','',text)
print(address) 
# Output: 432 Main Long Market Road St. Louisville 43071
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With re.sub() and group capturing you can use:</p>
<pre><code>s="686 Middle Street Pollocksville OG 56432"
re.sub(r"(\d+)(.*)\s+([A-Z]+\s+\d+)",r"\3: \2 | \1",s)
Out: 'OG 56432:  Middle Street Pollocksville | 686'
</code></pre>
</div>
<span class="comment-copy">If they're consistently formatted - can't you use something like: <code>'{2}: {1} | {0}'.format(*re.match('(\d+) (.*?) ([A-Z]{2} \d{5})', "686 Middle Street Pollocksville OG 56432").groups())</code> ?</span>
<span class="comment-copy">yeah i think i could! how does the (.*?) separator work?</span>
<span class="comment-copy">Takes anything until the next pattern matches...</span>
<span class="comment-copy">hey Jon! I coudln't find anything regarding the differences of re.match and *re.match. I only found documentation regarding the use of * as a greedy quantifier in the regex itself, but nothing in the re.match bit</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow noreferrer">docs.python.org/3/tutorial/…</a> and <a href="https://stackoverflow.com/questions/36901/what-does-double-star-asterisk-and-star-asterisk-do-for-parameters" title="what does double star asterisk and star asterisk do for parameters">stackoverflow.com/questions/36901/…</a> etc...</span>
