<div class="post-text" itemprop="text">
<p>I wish to search for specific sequences of words within a string. I have so far been able to find them (jumbled within) the string, but am unable to find them in a specific sequence. Let me illustrate:</p>
<pre><code>from nltk.tokenize import word_tokenize
negative_descriptors = ['no', 'unlikely', 'no evidence of']
diagnosis = 'disc prolapse'
report = 'There is no evidence of disc prolapse but this is evidence of a collection.'

def find_diagnosis(diagnosis, negative_descriptors, report):
    keywords = word_tokenize(diagnosis)
    if [keyword for keyword in keywords if keyword in report] == keywords:
        if [descriptor for descriptor in negative_descriptors if descriptor in report]: return False
        else: return True
</code></pre>
<p>In the above example, the algorithm should return False if the negative descriptors AND diagnosis appear in the report, and the negative descriptors should appear BEFORE the diagnosis within the report (and should not be more than 1 word apart). </p>
<p>How do I ensure the algorithm takes not only the words but their sequences to account?</p>
</div>
<div class="post-text" itemprop="text">
<p>If the limit of negative descriptors is small, You can use <code>|</code> to join them:</p>
<pre><code>    import re
    negative_descriptors = ['no', 'unlikely', 'no evidence of']
    diagnosis = 'disc prolapse'
    report = 'There is no evidence of disc prolapse but this is no evidence of a collection.'
    neg = '|'.join(negative_descriptors)

    out = re.search("("+neg+")"+r".*?"+diagnosis,report)
    print (not(out==None))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
negative_descriptors = ['no', 'unlikely', 'no evidence of']
diagnosis = 'disc prolapse'
report = 'There is no evidence of disc prolapse but this is evidence of a collection.'

if diagnosis in report:
    for ng in negative_descriptors:
         pattern = re.escape(ng) + r"[\s\w\s]{1}" + re.escape(diagnosis)
         print(re.findall(pattern, report))
</code></pre>
</div>
<span class="comment-copy">I would suggest to build a regex that matches the sequence of words you want to find and then search this regex within your string using <code>re.search()</code> <a href="https://docs.python.org/3/library/re.html#search-vs-match" rel="nofollow noreferrer">docs.python.org/3/library/re.html#search-vs-match</a></span>
<span class="comment-copy">Are you searching for an exact phrase or should e.g. <i>"no direct evidence of"</i> count as a match for <i>"no evidence of"</i>? What about <i>"no toxic substances found but clear evidence of diabetes mellitus"</i>? (Between the lines, I'm saying your model of language is probably too simplistic.)</span>
<span class="comment-copy">There are a large number of negative descriptors, however the diagnosis words are a small number. How do I convert your code to search by individual descriptors but join the diagnosis instead?</span>
<span class="comment-copy">@Code I don't think that can be done. The code should work even with large number of negative descriptors.</span>
