<div class="post-text" itemprop="text">
<p>I am trying to make a discord bot that will log the edited or deleted messages.</p>
<p>At some point the program is considring the author id as string for some reason.</p>
<p>the code of <code>on_message_edit</code>doesn't work like the <code>on_message</code> code</p>
<p>when I am on the <code>on_message</code> I mention the author like this at it works</p>
<pre><code>UserID = message.author.id
await bot.send_message(whatever channel, 'This is &lt;@%s&gt;' % (UserId))
</code></pre>
<p>but when I tried to do the same mentioning method on the <code>on_message_edit</code> it didn't work. I did </p>
<pre><code> @bot.event
async def on_message_edit(before, after):
    MemberId = after.author.id
    await bot.send_message(bot.get_channel('480495197034381332'), 'The user &lt;@%s&gt; have edited his message from ``' + before.content + '`` to `` ' + after.content + ' `` ' % (MemberId))
</code></pre>
<p>and I get this error </p>
<pre><code>    Ignoring exception in on_message_edit
Traceback (most recent call last):
  File "C:\Users\ezter\AppData\Local\Programs\Python\Python36\lib\site-packages\discord\client.py", line 307, in _run_event
    yield from getattr(self, event)(*args, **kwargs)
  File "D:\programing\Discord Bots\Test bot\Setup.py", line 25, in on_message_edit
    await bot.send_message(bot.get_channel('480495197034381332'), 'The user &lt;@%s&gt; have edited his message from ``' + before.content + '`` to `` ' + after.content + ' `` ' % (MemberId))
TypeError: not all arguments converted during string formatting
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to move the <code>%s</code></p>
<pre><code>&gt;&gt;&gt; '12%s' + '45' % '3'
TypeError: not all arguments converted during string formatting

&gt;&gt;&gt; '12%s' % '3' + '45'
'12345'
</code></pre>
<p>In your case you want</p>
<pre><code>await bot.send_message(bot.get_channel('480495197034381332'), 'The user &lt;@%s&gt; have edited his message from ``' % MemberId + before.content + '`` to `` ' + after.content + ' `` ')
</code></pre>
<p>If you're on Python3.6+, f-strings are even cleaner</p>
<pre><code>channel = bot.get_channel('480495197034381332')
message = f'The user &lt;@{MemberId}&gt; has edited his message from ``{before.content}`` to `` {after.content}``'
await bot.send_message(channel, message)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Operator <code>%</code> has higher precedence than <code>+</code>. See <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">the docs on operator precedence</a>.</p>
<p>So a code which does <code>a + b % c</code> evaluates <code>b % c</code> first.</p>
<p>In your code, that would mean, the first thing evaluated is <code>' `` ' % (MemberId)</code> and that fails because there is no <code>%s</code> in <code>' `` '</code>:</p>
<pre><code>'The user &lt;@%s&gt; have edited his message from ``' + before.content + '`` to `` ' + after.content + ' `` ' % (MemberId)
</code></pre>
<p>This could be fixed by adding parenthesis around everything before <code>%</code>, e.g.:</p>
<pre><code>bot.send_message(bot.get_channel('480495197034381332'),
                 ('The user &lt;@%s&gt; have edited his message from ``'
                  + before.content + '`` to `` ' + after.content + ' `` ')
                 % (MemberId))
</code></pre>
<p><strong>But that is still a rather poor way to do it.</strong></p>
<p>For example, it fails if there is a <code>%</code> in <code>before.content</code> or in <code>after.content</code>. It also fails if <code>MemberId</code> is a tuple.</p>
<p><strong>This would be correct:</strong></p>
<pre><code>bot.send_message(bot.get_channel('480495197034381332'),
                 'The user &lt;@%s&gt; have edited his message from ``%s``'
                 ' to ``%s`` ' % (MemberId, before.content, after.content))
</code></pre>
<p><strong>This would be even better:</strong></p>
<pre><code>bot.send_message(bot.get_channel('480495197034381332'),
                 f'The user &lt;@{MemberId}&gt; have edited his message from '
                 f'``{before.content}`` to ``{after.content}`` ')
</code></pre>
</div>
