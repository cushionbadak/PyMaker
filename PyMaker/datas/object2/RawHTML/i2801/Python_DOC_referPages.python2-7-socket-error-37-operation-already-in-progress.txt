<div class="post-text" itemprop="text">
<p>I'm making a script that reads a file full of proxy servers and checks if they are up or down.</p>
<pre><code>import socket

proxyFile = open("proxies.txt","r");
lines = proxyFile.readlines();

class Colors:
    none = "\033[0m";
    red = "\033[31m";
    green = "\033[32m";
    yellow = "\033[33m";
    blue = "\033[34m";
    purple = "\033[35m";
    cyan = "\033[36m";

sock = socket.socket(socket.AF_INET,socket.SOCK_STREAM);
sock.settimeout(3);

for line in lines:
    line = line.replace(":"," : ");
    reader = line.split();
    ip = reader[reader.index(":") - 1];
    port = int(reader[reader.index(":") + 1]);
    try:
        sock.connect((ip,port));
        print Colors.cyan + ip + ":" + str(port) + Colors.none + " is " + Colors.green + "UP";
        sock.close();
    except socket.timeout:
        print Colors.cyan + ip + Colors.yellow + ":" + Colors.cyan + str(port) + Colors.none + " is " + Colors.red + "DOWN";
</code></pre>
<p>It seems that the file reads fine and the socket creates, but it only connects to one server then it gives the error.</p>
<p>Proxy File:</p>
<pre><code>1.0.134.56:8080
1.165.192.248:3128
1.172.185.143:53281
1.179.156.233:8080
1.179.164.213:8080
1.179.185.253:8080
1.192.242.191:3128
1.20.169.166:8080
1.20.179.68:8080
1.20.99.163:8080
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't re-<a href="https://docs.python.org/3/library/socket.html#socket.socket.connect" rel="nofollow noreferrer"><code>connect</code></a> a socket. Once it's connected, it's connected. Even if you call <a href="https://docs.python.org/3/library/socket.html#socket.socket.close" rel="nofollow noreferrer"><code>close</code></a>:</p>
<blockquote>
<p>all future operations on the socket object will fail.</p>
</blockquote>
<p>The right answer is to create a new socket each time through the loop, whether with <a href="https://docs.python.org/3/library/socket.html#socket.create_connection" rel="nofollow noreferrer"><code>create_connection</code></a> or with <a href="https://docs.python.org/3/library/socket.html#socket.socket" rel="nofollow noreferrer"><code>socket</code></a> and <code>connect</code>. For example, change your <code>try</code> block to this:</p>
<pre><code>try:
    sock = socket.socket(socket.AF_INET,socket.SOCK_STREAM);
    sock.settimeout(3);
    sock.connect((ip,port));
    print Colors.cyan + ip + ":" + str(port) + Colors.none + " is " + Colors.green + "UP";
    sock.close();
except socket.timeout:
    print Colors.cyan + ip + Colors.yellow + ":" + Colors.cyan + str(port) + Colors.none + " is " + Colors.red + "DOWN";
</code></pre>
</div>
<span class="comment-copy">You canâ€™t re-<code>connect</code> a socket after closing it. Just create a new socket each time through the loop.</span>
<span class="comment-copy">@abarnert Ahh I did not know that, thankyou!</span>
<span class="comment-copy">As a side note: Semicolons are not statement terminators in Python the way they are in C; they're only used to separate multiple simple statements on the same line (which is a very rare thing to need to do). You should not have one at the end of each line.</span>
<span class="comment-copy">Also, whenever possible, you should use <code>with</code> statements instead of explicit <code>close</code> calls (or instead of not closing the file at all). In Python 3.2+, this works for sockets as well as files. Plus, you don't need to call <code>readlines</code> on a file if you just want to iterate the lines; just iterate <code>for line in file:</code>.</span>
<span class="comment-copy">@abarnert Thank-you for the tips &amp; info! Also, I use semicolons as an ocd thing.</span>
