<div class="post-text" itemprop="text">
<p>Am having problem with python smtplib when using a non ascii characters in from name. Part of the error code - is</p>
<p><code>server does not advertise the required SMTPUTF8 capability</code> </p>
<p>I have checked online for solutions and also looked around in stackoverflow with no solutions.</p>
<p>Using same </p>
<blockquote>
<p>smtp</p>
</blockquote>
<p>on Other mail client with same From name it worked so I figured this can be solved with code since I can't edit the server config.</p>
<p>Please help with a solution guide or example to help fix this.</p>
<p>See snippet of code below with traceback.</p>
<pre><code># the problem is this line below. How do I make it work regardless 
# since i have no means of advertising smtputf8 from there server.
# Thunderbird doesn't have problem with the name when used as client.

data['from_name'] = "Böy" # problem is the ö
data['from_email'] = "user@example.com"
msg = MIMEMultipart()
msg['To'] = "{to_name} &lt;{to_email}&gt;".format(**data)
msg['From'] = "{} &lt;{}&gt;".format(data['from_name'], data['from_email'])
msg['Date'] = formatdate(localtime=True)
msg['Subject'] = subject
msg.attach(MIMEText(body, 'html'))

smtp_server.send_message(msg) # exception is raised here
</code></pre>
<p>Traceback:</p>
<pre><code>`Traceback (most recent call last):
  File "Emailer.py", line 460, in &lt;module&gt;
    main(args)
  File "Emailer.py", line 447, in main
    sender.send()
  File "Emailer.py", line 386, in send
    smtp_server.send_message(msg)
  File "/usr/local/Cellar/python3/3.6.4_2/Frameworks/Python.framework/Versions/3.6/lib/python3.6/smtplib.py", line 952, in send_message
    "One or more source or delivery addresses require"
smtplib.SMTPNotSupportedError: One or more source or delivery addresses require internationalized email support, but the server does not advertise the required SMTPUTF8 capability`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am unable to reproduce your issue.  With the following augmented code, I have what appears to be a <a href="/help/mcve">MCVE</a>:</p>
<pre><code>from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.utils import formatdate


data = {'to_name': 'me', 'to_email': 'me@example.net'}
subject = 'Hellö'
body = 'Hellö'

data['from_name'] = "Böy" # problem is the ö
data['from_email'] = "user@example.com"
msg = MIMEMultipart()
msg['To'] = "{to_name} &lt;{to_email}&gt;".format(**data)
msg['From'] = "{} &lt;{}&gt;".format(data['from_name'], data['from_email'])
msg['Date'] = formatdate(localtime=True)
msg['Subject'] = subject
msg.attach(MIMEText(body, 'html'))

print(msg.as_string())
</code></pre>
<p>But when I run it, Python produces a completely healthy, completely 7-bit US-ASCII message with all the parts encoded precisely like they should be for a legacy server which doesn't support SMTPUTF8.</p>
<pre><code>Content-Type: multipart/mixed; boundary="===============2605356503081581034=="
MIME-Version: 1.0
To: me &lt;me@example.net&gt;
From: =?utf-8?b?QsO2eSA8dXNlckBleGFtcGxlLmNvbT4=?=
Date: Mon, 13 Aug 2018 10:56:02 +0300
Subject: =?utf-8?b?SGVsbMO2?=

--===============2605356503081581034==
Content-Type: text/html; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: base64

SGVsbMO2

--===============2605356503081581034==--
</code></pre>
<p>However, I will notice that instantiating a bare <code>MIMEMultipart</code> as your top-level message is not really correct.  You should have a <a href="https://docs.python.org/3/library/email.compat32-message.html#email.message.Message" rel="nofollow noreferrer"><code>Message</code></a> object and then add MIME parts to that.  But this still uses the somewhat complex legacy Python <code>email</code> API; with the new API, which was introduced in 3.3 and became the preferred API in 3.6, you should start with an <a href="https://docs.python.org/3/library/email.message.html#email.message.EmailMessage" rel="nofollow noreferrer"><code>EmailMessage</code></a> and take it from there.</p>
<p>Anyway, if you only have a single body part, you should not wrap it in a multipart message.  Simply create an email message and attach the text part directly to that. (It's not <em>wrong</em> per se to have a more complex MIME structure than you need, but it's silly to add unnecessary complexity and overhead.)</p>
</div>
<span class="comment-copy">Thunderbird most likely encodes the string using RFC2047 encapsulation; so it doesn't attempt to send bare UTF-8 to a server which doesn't support this.</span>
<span class="comment-copy">@tripleee Good suggestion I will see if I can go that route. Wouldn't mind if you can give more light on this since message body is utf8 already. Doubt i can combine both encodings</span>
<span class="comment-copy">Perfect. I figured it out from a github source. <code>formataddr</code> was the solution from <code>email.utils</code> it takes a tuple of name and email. Thanks very much though for the other tips</span>
