<div class="post-text" itemprop="text">
<p>This is a python grammar question.</p>
<p>Why is it not possible to run <code>if test: for list: one-statement</code> in one line in python? e.g.:</p>
<pre><code>a=1
b=[1, 2]
if a: for x in b: print(x)
  File "&lt;ipython-input-52-8abcd450fc7a&gt;", line 3
    if a: for x in b: print(x)
            ^
SyntaxError: invalid syntax
</code></pre>
<p>I understand that it'd be an issue with indentation should there be 2+ statements to follow, but one statement creates no ambiguity. Am I wrong?</p>
<p>Splitting the one-liner works, as it disambiguates it:</p>
<pre><code>a=1
b=[1, 2]
if a: 
    for x in b: print(x)
1
2
</code></pre>
<p>Looking at <a href="https://docs.python.org/3/reference/grammar.html" rel="nofollow noreferrer">the python grammar</a> we have:</p>
<pre><code>if_stmt: 'if' test ':' suite ('elif' test ':' suite)* ['else' ':' suite]
suite: simple_stmt | NEWLINE INDENT stmt+ DEDENT
simple_stmt: small_stmt (';' small_stmt)* [';'] NEWLINE
small_stmt: (expr_stmt | del_stmt | pass_stmt | flow_stmt |
             import_stmt | global_stmt | nonlocal_stmt | assert_stmt)
</code></pre>
<p>Won't something like the following change to <code>if_stmt</code> allow for such simple nested statements in one line?</p>
<pre><code>simple_for_stmt: 'for' exprlist 'in' testlist ':' simple_stmt
if_stmt: 'if' test ':' (suite ('elif' test ':' suite)* ['else' ':' suite] | simple_for_stmt) 
                       ^                                                  ^^^^^^^^^^^^^^^^^^
</code></pre>
<p>Besides the change to <code>if_stmt</code> I defined a new token <code>simple_for_stmt</code>.
Of course this is just for the <code>for</code> statement, but it could be adjusted for <code>while</code> and others.</p>
<p>I understand, of course, that perhaps keeping things simple is the best approach in python land - add the damn new line!</p>
<p><strong>note: this is not a help-me-make-my-code-run question. The code example is just to demonstrate the issue, it doesn't need to be fixed/improved. So please refrain from suggesting how the example code can be rewritten in a different way. Thank you.</strong></p>
<p>I'm using python 3.6.6.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think the the solution you propose is a hint as to why it was never implemented. The change would add a lot of complexity to the grammar with very little real benefit. A few simple statements could be shoe-horned into a single line, but the change would create a number of confusing edge cases.</p>
<p>The <a href="https://docs.python.org/3/reference/compound_stmts.html" rel="nofollow noreferrer">Python docs</a> explicitly say that</p>
<pre><code>if test1: if test2: print(x)
</code></pre>
<p>must be illegal because it would not be clear which <code>if</code> a following <code>else</code> clause belonged to. (Obviously, an arbitrary decision could be implemented, but that would still cause confusion for readers of the code.) This argument also applies to <code>for</code> statements (and other compound statements) because in Python a <code>for</code> statement can also have an <code>else</code> clause.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is not the if statement, it is the for statement.
What you want to want can be do as follows</p>
<pre><code>a = True
b = [1,2,3]
if a: [print(x) for x in b]
</code></pre>
</div>
<span class="comment-copy">Questions of the form "Why does language X do this and not that?" are skating very close to the StackOverflow discouragement of subjective questions. In some cases, the reasons are documented somewhere, so an objective question and answer are possible. But please try to avoid using a question of this form as a way to argue that the behaviour should be different; StackOverflow is not an appropriate forum for such discussions.</span>
<span class="comment-copy">I can see why you'd see it this way, @rici. I was first trying to figure out why there was the restriction in the first place, spent a lot of time trying to find a similar question on SO and elsewhere and couldn't find anything of the sorts. Then I started looking at python's grammar and discovered why this is the case. So I compiled my research into this question. Won't it be good to have one page dedicated to this particular issue - so that others having a similar question will be able to find it? I'm open to suggestions at how to reword it so that it becomes more useful to others.</span>
<span class="comment-copy">well, I answered the question to the best of my ability. But basically I think it's the responsibility of the Python community (in this case) to maintain a rationale document (which they mostly do; I'm not complaining). In the case of languages whose design community does not always feel the need to do so, my experience is that SO gets filled up with argumentative questions and insufficiently grounded responses, none of which is very useful. So my comment was just a comment in general about this kind of question.</span>
