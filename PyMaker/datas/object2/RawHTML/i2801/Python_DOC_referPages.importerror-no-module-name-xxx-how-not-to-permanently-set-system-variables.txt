<div class="post-text" itemprop="text">
<p>I'm running <code>python 3.4.2</code> under Windows 7. I have some modules that I do NOT want to put (at least yet) into the python subdirectories. After much angst, I've gotten them to run, but only at the expense of adding <code>PYTHONHOME</code> and <code>PYTHONPATH</code> to my System variables.  </p>
<p>I tried creating a batch file, set these and then executed my script. I tried setx, but this just puts the variables in my User variables where python does not appear to recognize them.  </p>
<p>I find it hard to believe that I can't distribute some of these scripts to my co-workers without forcing them to change their System variables. </p>
<p>Am I doing something wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Make sure you understand the module search path. <a href="https://docs.python.org/3/tutorial/modules.html#the-module-search-path" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/modules.html#the-module-search-path</a></p>
<p>Beyond that, one option is to prepend any directories where you have dependencies to sys.path before your import statements.</p>
</div>
<div class="post-text" itemprop="text">
<p>As has been pointed out elsewhere setting pythonpath and pythonhome were probably not the best of ideas, especially in my newbie case because they ended up interferring with gcloud. I ended up adjusting my scripts so they sys.path.append("ZXYLIB") where XYXLIB is a path I set the the batch file calls the python, and that works.</p>
</div>
<span class="comment-copy">That's the whole point of a package.</span>
<span class="comment-copy">Can you show a sample directory structure and file snippets that reproduces your problem?</span>
