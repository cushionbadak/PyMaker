<div class="post-text" itemprop="text">
<p>I have a file named "uscf" in /usr/local/bin:</p>
<pre><code>#! /bin/sh
python3 ~/Desktop/path/to/uscf.py
</code></pre>
<p>I have already <code>chmod +x</code> this file so that I can run it from my terminal with the command "<code>uscf</code>". How can I run this with command line arguments so that the arguments are accessible through <code>sys.argv</code> in uscf.py?</p>
<p>EDIT: Added below example for clarification:</p>
<p>The uscf.py file:</p>
<pre><code>import sys
if len(sys.argv) &gt; 1:
print(sys.argv)
</code></pre>
<p>Running it from the command line:</p>
<pre><code>Abraham$ uscf these are arguments
</code></pre>
<p>Expected output:</p>
<pre><code>these are arguments
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In sh the "$@" variable contains all the positional arguments passed to the script. You can use that to pass it to your python script:</p>
<pre><code>#!/bin/sh
python3 $HOME/Desktop/path/to/uscf.py "$@"
</code></pre>
</div>
<span class="comment-copy">did you mean to say that you want to take <code>input</code> from the python script, here <code>uscf.py</code> ?</span>
<span class="comment-copy">Are you talking about argparse? <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html</a></span>
<span class="comment-copy">No, I want to run the unix executable through the command line and give it some arguments</span>
<span class="comment-copy">I would make it <code>#!/usr/bin/python</code> and have <code>setup.py</code> have scripts section to call your python executable with argparse or argv</span>
<span class="comment-copy">See jordanm's answer, it is what I was looking for.  I also added an edit for clarification</span>
<span class="comment-copy">This is what I was looking for, thank you!</span>
<span class="comment-copy">You cannot use <code>~</code> for <code>$HOME</code> in <code>sh</code> scripts. See also <a href="/questions/5725296/difference-between-sh-and-bash">Difference between sh and bash</a></span>
