<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/355539/a-get-like-method-for-checking-for-python-attributes">A get() like method for checking for Python attributes</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/610883/how-to-know-if-an-object-has-an-attribute-in-python">How to know if an object has an attribute in Python</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>Background is I'm getting data from a JSON API where lots of fields are optional and I want most of the fields in a database. When a specific field isn't available I want an empty string (<code>""</code>) written into the database.</p>
<p>Currently I've been doing:</p>
<pre><code>if jsonobject.what_i_look_for:
  dbstring = jsonobject.what_i_look_for
else:
  dbstring = ""
</code></pre>
<p>And then inserted dbstring into the database. However I'm getting a lot more of these fields now and I want a much cleaner code rather than a function which consists about 80% of if-statements.</p>
<p>I've found <a href="https://stackoverflow.com/a/14461984/9138821">if-shorthands</a> and <a href="https://stackoverflow.com/a/13710667/9138821">this</a> shorthand to check if a variable is empty, but both don't seem to work directly as a string. I've tested this using <code>print()</code> in an interactive python 3.5.2 shell:</p>
<pre><code>&gt;&gt;&gt; print(testvar or "")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'testvar' is not defined

&gt;&gt;&gt; print(testvar if testvar else "")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'testvar' is not defined
</code></pre>
<p>This: <code>echo (isset($testvar) ? $testvar : "");</code> is the PHP equivalent of what I seek.</p>
<p><strong>Edit:</strong> Since it seems relevant: The object I am trying to process is coming from Telegram's JSON API. I'm using <code>python-telegram-bot</code> as library and <a href="https://python-telegram-bot.readthedocs.io/en/stable/telegram.chat.html" rel="nofollow noreferrer">this</a> is an example object.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <em>Pythonic</em> way is to look out for <code>NameError</code> exception that would be raised when the variable is not defined, <em>the name is not bound to any object</em> to be precise.</p>
<p>So, for example:</p>
<pre><code>try:
    foobar
except NameError:
    # Do stuffs
    print('foobar is not defined')
    raise  # raise the original exception again, if you want
</code></pre>
<hr/>
<p>Names reside in namespaces e.g. local names reside in <code>locals()</code> (<code>dict</code>) namespace, global names reside in <code>globals()</code> (<code>dict</code>) namespace. You can define a function that takes name string and namespace as an argument to check for the existence, here is a hint passing namespace as a <code>dict</code> and catching <code>KeyError</code>:</p>
<pre><code>In [1213]: def is_defined(name, namespace):
      ...:     try:
      ...:         namespace[name]
      ...:     except KeyError:
      ...:         return False
      ...:     return True
      ...: 

In [1214]: is_defined('spamegg', globals())
Out[1214]: False

In [1215]: spamegg = 10

In [1216]: is_defined('spamegg', globals())
Out[1216]: True
</code></pre>
<hr/>
<p>On the other hand, if you are looking to get the value of an atrribute string of an object, <code>getattr</code> is the way to go:</p>
<pre><code>getattr(obj, attr)
</code></pre>
<p>For example, the following two are equivalent:</p>
<pre><code>obj.foobar
getattr(obj, 'foobar')
</code></pre>
<p>Even you can add a default when the object attribute is missing:</p>
<pre><code>getattr(obj, 'foobar', 'spamegg')
</code></pre>
<p>The above will output the value <code>obj.foobar</code>, if <code>foobar</code> is missing it would output <code>spamegg</code>.</p>
<p>You might also be interested in <code>hasattr</code> that returns <code>True</code>/<code>False</code> for an attribute existence check, instead of needing to manually handle <code>AttributeError</code>.</p>
</div>
<span class="comment-copy"><code>jsonobject.what_i_look_for</code> is an attribute, not a variable. Is your question about variables or about attributes? Also, <code>if jsonobject.what_i_look_for:</code> checks whether the <code>what_i_look_for_attribute</code> is set to a truthy value; it does <i>not</i> check if that attribute <i>exists</i>. So, again, what is your question really?</span>
<span class="comment-copy">Variables don't really exist in Python. There are names which are assigned objects.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#hasattr" rel="nofollow noreferrer"><code>hasattr</code></a> is possibly what you want although it may be better to <a href="https://stackoverflow.com/questions/12265451/ask-forgiveness-not-permission-explain">ask forgiveness not permission</a></span>
<span class="comment-copy">Yes, attributes and variables are different.</span>
<span class="comment-copy">If you’re looking for attributes of an object, then you can use <code>hasattr(obj, name)</code> to see if it exists, or getattr(obj, name, default)` to get the attribute if it exists or return the default if it doesn’t. But if you find yourself doing <code>hasattr</code> or <code>getattr</code> for most of your attributes, that’s often a sign that you didn’t want an object full of attributes in the first place, but a dictionary. (Notice that the stdlib json module uses dictionaries.)</span>
<span class="comment-copy">Is there a way I can write a function or anything for that? My goal is to get a short and clean code, having a <code>try</code> block for every variable I need to check doesn't exactly achieve that.</span>
<span class="comment-copy">@confetti Names reside in namespaces e.g. local names reside in <code>locals()</code> namespace, global names reside in <code>globals()</code> namespace. You can define a function that takes namespace as an argument to check for the existence.</span>
<span class="comment-copy"><code>except NameError</code> is pretty major code smell to me, unless you are in to some pretty arcane meta-programming black-magic, maybe. In any event, reading the op it isn't clear to me if this is even what they need, since they are talking about attributes on objects.</span>
<span class="comment-copy">@confetti why have you found yourself in a situation where you don't know if a name is in scope or not? This doesn't seem related to your question at all, which is about attributes on objects, not whether or not variables are defined....</span>
<span class="comment-copy">@juanpa.arrivillaga I have edited my OP. I think I worded it wrong at first. I added an example of the exact object I am working with.</span>
