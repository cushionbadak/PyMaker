<div class="post-text" itemprop="text">
<p>I want to wait for the result of a set of tasks during the current loop running in the Ipython notebook due to the need of data process. In the Ipython notebook,
the event loop is running by default. That is to say, whenever u run the code below, you'll get <code>True</code></p>
<pre><code>import asyncio
loop = asyncio.get_event_loop()
loop.is_running()
</code></pre>
<p>And you can't shutdown the current loop because the notebook is using it. And I have some tasks to do in Ipython notebook. But I can't create a new loop without closing the current loop.
I almost implement it. This is how I do it:</p>
<pre><code>import asyncio as aio
loop = aio.get_event_loop()
async def hello():
    await aio.sleep(10)
    return "hello"
tasks = []
for i in range(10):
    tasks.append(loop.create_task(hello()))
    # all the tasks will automatically run
rest = aio.gather(*tasks)
</code></pre>
<p>Now what I need to do is to wait for <code>rest</code> to be done, however, I can't use <code>loop.run_until_complete</code> to wait for it to complete, because I can't close the current notebook loop.</p>
<p>What should I do to get the result?
Thanks.  </p>
</div>
<div class="post-text" itemprop="text">
<p>Just create a new event loop and set it as the current event loop. I couldn't reproduce your issue, see below, so note that this is untested:</p>
<pre><code>import asyncio as aio
loop = aio.new_event_loop()
aio.set_event_loop(loop)
</code></pre>
<p>Then you should be able to safely call <code>loop.run_until_complete(rest)</code> without interfering with the default event loop.</p>
<p>See the docs for detail: <a href="https://docs.python.org/3/library/asyncio-eventloops.html" rel="nofollow noreferrer">https://docs.python.org/3/library/asyncio-eventloops.html</a></p>
<p>P.S. I'm not sure what version of IPython/Jupyter notebook you're using, but I couldn't reproduce the issue on Jupyter notebook version 4.4 or ipython version 6.2.1. Mac OS High Sierra. Note that IPython notebooks have long been deprecated in favor of Jupyter notebooks.</p>
<pre><code>jMatthews-MacBook-Pro:stackoverflow matt$ jupyter --version
4.4.0
Matthews-MacBook-Pro:stackoverflow matt$ ipython --version
6.2.1
</code></pre>
<p>For instance, when running <code>ipython</code> REPL:</p>
<pre><code>In [1]: import asyncio
   ...: loop = asyncio.get_event_loop()
   ...: loop.is_running()
   ...: 
Out[1]: False
</code></pre>
<p>Similar output in a Jupyter notebook.</p>
</div>
<span class="comment-copy">What's the output of <code>python --version</code>?</span>
<span class="comment-copy">my python version is python3.6.6</span>
<span class="comment-copy">Thanks for ur trying the issue. In fact, I've tried to create a new loop to implement it, and I failed when call <code>new_loop.run_until_complete</code>. The error says "RuntimeError: Cannot run the event loop while another loop is running". And my Jupyter notebook version is 5.6.0 and python version 3.6.6 and Os is win10x64. Things work fine in REPL, but issue occurs when edit in browser. I don'e know why.</span>
