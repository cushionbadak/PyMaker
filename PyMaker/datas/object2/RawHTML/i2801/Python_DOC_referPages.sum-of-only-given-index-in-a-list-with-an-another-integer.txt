<div class="post-text" itemprop="text">
<p>I want to sum the particular index in this list</p>
<pre><code>b = [3,4,6,8,9]
b[2:4] += 100
print(b)
</code></pre>
<p>When i try to execute i get:</p>
<pre><code>b[2:4] += 100
TypeError: 'int' object is not iterable
</code></pre>
<p>The expected Output is:</p>
<pre><code>[3,4,106,108,9]
</code></pre>
<p>Can anyone help me out to get me my expected output?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>enumerate</code> and list comprehension</p>
<pre><code>&gt;&gt;&gt; b=[3,4,6,8,9]
&gt;&gt;&gt; [e*100 if i in range(2,4) else e for i,e in enumerate(b)]
[3, 4, 600, 800, 9]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python lists do not work like that.  Just use a loop over the indices.</p>
<pre><code>&gt;&gt;&gt; b
[3, 4, 6, 8, 9]
&gt;&gt;&gt; for i in range(2, 4):
...     b[i] += 100
...     
&gt;&gt;&gt; b
[3, 4, 106, 108, 9]
</code></pre>
<p>Or, use numpy arrays, which do support that syntax exactly:</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; b = np.array([3, 4, 6, 8, 9])
&gt;&gt;&gt; b[2:4] += 100
&gt;&gt;&gt; b
array([  3,   4, 106, 108,   9])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you're hoping is NumPy indexing. This, however, requires the 3rd party NumPy library:</p>
<pre><code>import numpy as np

b = [3,4,6,8,9]
b = np.array(b)
b[2:4] += 100

print(b)

array([  3,   4, 106, 108,   9])
</code></pre>
<p>In pure Python, you can use a list comprehension. To save having to repeat indices, you can define a <a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow noreferrer"><code>slice</code></a> object:</p>
<pre><code>s = slice(2, 4)
b[s] = [i+100 for i in b[s]]

print(b)

[3, 4, 106, 108, 9]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, I'll answer the question as to why that fails. You're taking a <code>slice</code> of your array <code>b</code>. Which translates to,</p>
<pre><code>&gt;&gt;&gt; b = [3, 4, 6, 8, 9]
&gt;&gt;&gt; b[2:4]
[6, 8]
</code></pre>
<p>Then you say, <code>b[2:4] + 100</code> which is equivalent to <code>[6, 8] + 100</code> but what does that mean to Python? Do you want to append <code>100</code> to the list? Do you want to add <code>100</code> to the first element? The second?</p>
<p>Are you starting to see the ambiguity here? As others have pointed out, this behavior is defined for numpy arrays but not for vanilla python.</p>
<p>There are many solutions for this but IMO the following is the clearest solution.</p>
<pre><code>b = [3, 4, 6, 8, 9]
for i in range(2, 4):
    b[i] += 100
</code></pre>
<p>However, the most pythonic would involve a list comprehension which you can see in other answers but IMO that seems a little advanced for you.</p>
</div>
