<div class="post-text" itemprop="text">
<p>Lets consider some list:</p>
<pre><code>arr = [2, 4, 6, 8, 10]
</code></pre>
<p>I need to divide each element of list by its first element.
It can be done with list compehension:</p>
<pre><code>[e / arr[0] for e in arr]
</code></pre>
<p>but I have to use some functional programming for this</p>
</div>
<div class="post-text" itemprop="text">
<p><code>map</code>:</p>
<pre><code>&gt;&gt;&gt; arr = [2, 4, 6, 8, 10]
&gt;&gt;&gt; list(map(lambda x: x/arr[0],arr))
[1.0, 2.0, 3.0, 4.0, 5.0]
</code></pre>
<p>Or as a function:</p>
<pre><code>&gt;&gt;&gt; def f(x):
    return x/arr[0]

&gt;&gt;&gt; list(map(f,arr))
[1.0, 2.0, 3.0, 4.0, 5.0]
&gt;&gt;&gt; 
</code></pre>
<p>Or use numpy:</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; arr2=np.array(arr)
&gt;&gt;&gt; arr2/arr[0]
array([ 1.,  2.,  3.,  4.,  5.])
&gt;&gt;&gt; 
</code></pre>
<p>and if you want list:</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; arr2=np.array(arr)
&gt;&gt;&gt; (arr2/arr[0]).tolist()
[1.0, 2.0, 3.0, 4.0, 5.0]
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the built-in function <code>map</code> in combination with the class <code>list</code>:</p>
<pre><code>arr = [2, 4, 6, 8, 10]
new_arr = list(map(lambda x: x / arr[0], arr))
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a> returns an iterator that applies a function to every item of iterable, yielding the results.</p>
<p><a href="https://docs.python.org/3/library/stdtypes.html#list" rel="nofollow noreferrer"><code>list()</code></a> takes an iterable in order to produce a list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>map</code>:</p>
<pre><code>arr = [2, 4, 6, 8, 10]
out = list(map(lambda x: x/arr[0], arr))
</code></pre>
<p>And if you don't like the <code>lambda</code> expression, you can use the <code>truediv</code> (or <code>floordiv</code>) method in <code>operator</code>, but two parameters are required so here I used a little trick.</p>
<pre><code>from operator import truediv
from itertools import starmap
arr = [2, 4, 6, 8, 10]
arr = zip(arr, [arr[0]]*len(arr))
out = list(starmap(truediv, arr))
print(out)
</code></pre>
<p>I first build a new iterable according to the question, and then use <code>starmap</code> which can <code>map</code> <strong>multiple parameters</strong> to a function. <code>truediv</code> in <code>operator</code> has exactly the same functionality as operator <code>/</code> but just make it run in a function way and accept two parameters and return the div result between them.</p>
</div>
<span class="comment-copy">Ok, this answer is a duplicate answer now</span>
<span class="comment-copy">@coldspeed, I just updated my answer.</span>
<span class="comment-copy">Comment removed.</span>
<span class="comment-copy">Ah you beat be in few seconds</span>
