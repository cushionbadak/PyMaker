<div class="post-text" itemprop="text">
<p>Being a perl developer I am aware of the <strong>perldoc</strong> utility. I am new to python  and I was looking for same and found <strong>pydoc</strong>. 
But the problem with pydoc is it is <strong>also executing my script</strong> while I want to see only doc written inside triple quotes.
Any help would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Probably the best way is to work in Python (instead of the command line). Let's take the module <code>sys</code> as an example. First import your module and then use <code>help()</code>, like this:</p>
<pre><code>import sys
help(sys)
</code></pre>
<p>If you want to see the docstrings:</p>
<pre><code>print(sys.__doc__)
</code></pre>
<p>For modules you develop yourself, you can build in a guard so that the module is not executed, as described in the <a href="https://docs.python.org/3/library/pydoc.html" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>Note: In order to find objects and their documentation, pydoc imports the module(s) to be documented. Therefore, any code on module level will be executed on that occasion. Use an <code>if __name__ == '__main__':</code> guard to only execute code when a file is invoked as a script and not just imported.</p>
</blockquote>
</div>
<span class="comment-copy">Scenario is my script expects some command line arguments. When I use either the way you suggested or pydoc, it's asking for those arguments. Ideally, it should only be displaying doc strings.</span>
<span class="comment-copy">Ok I see, I updated my answer. Does this work?</span>
<span class="comment-copy">It worked @Honie. Though I had to intend the entire code in this IF block. Thanks.</span>
