<div class="post-text" itemprop="text">
<p>It seems recently there were some changes of python logging package. Some code work previously doesn't work now. And I am confused. My python version is Python 2.7.15.</p>
<p>The first example I don't understand is that below only prints "WARNING:root:hello from warn". If I understand correctly, "logging.info" actually calls the root logger, and root logger default to warn level. So the first "hello from info" is ignored, which is fine. But why the second "hello from info" is also not printed? </p>
<pre><code>import logging 
logging.info("hello from info")
logging.warn("hello from warn")

logging.basicConfig(level=logging.INFO)
logging.info("hello from info")
</code></pre>
<p>The second question is the logging level of Handler versus logger. If we set the log level for both the handler and logger, which one is working? Or what if we just set level for Handler? Take the example as below. We already set the log level for StreamHandler, <em>but the "hello from info" is not printed to stdout</em>. Only the "hello from warn" (Besides, it is not "WARNING:t:hello from warn"). Why is that? </p>
<pre><code>import logging
ch = logging.StreamHandler()
ch.setLevel(logging.INFO)
logger = logging.getLogger('t')
logger.addHandler(ch)
logger.info("hello from info")
logger.warn("hello from warn")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>But why the second "hello from info" is also not printed?</p>
</blockquote>
<p>Because</p>
<ol>
<li><p><code>logging.info / warn / error / debug</code> call <code>logging.basicConfig</code> under the hood. Example:</p>
<pre><code>def info(msg, *args, **kwargs):
    if len(root.handlers) == 0:
        basicConfig()
    root.info(msg, *args, **kwargs)
</code></pre></li>
<li><p><code>logging.basicConfig</code> does not do anything if the root logger is already configured. Quote from <a href="https://docs.python.org/3/library/logging.html#logging.basicConfig" rel="nofollow noreferrer">the docs</a>:</p>
<blockquote>
<p>This function does nothing if the root logger already has handlers configured for it.</p>
</blockquote></li>
</ol>
<p>So, in your code, the root logger is configured with <code>WARN</code> level when <code>logging.info("hello from info")</code> is executed. The subsequent call of  <code>logging.basicConfig(level=logging.INFO)</code> has no effect.</p>
<p>Rule of thumb: configure the loggers (no matter if manually or via <code>logging.basicConfig()</code>) as early as possible in your code.</p>
<blockquote>
<p>If we set the log level for both the handler and logger, which one is working?</p>
</blockquote>
<p>Both! Logger level and handler level are two different stages of filtering records. The logger level defines what records are actually passed to its handlers, while the handler level defines what records will be handled by the particular handler. Examples:</p>
<pre><code>logger.setLevel(logging.INFO)
handler.setLevel(logging.ERROR)
logger.addHandler(handler)
logger.info('spam')
</code></pre>
<p>Since logger has level <code>INFO</code>, it will process <code>spam</code> record and pass it to its handlers. However, <code>handler</code> has level <code>ERROR</code>, so the record will not be processed by handler.</p>
<pre><code>logger.setLevel(logging.WARN)
handler.setLevel(logging.DEBUG)
logger.addHandler(handler)
logger.info('spam')
</code></pre>
<p>Now the handler will process almost any record, including <code>spam</code> record since its level is <code>INFO</code>, thus greater than <code>DEBUG</code>. However, the handler will never receive <code>spam</code> to process because the logger will not process it, thus not passing <code>spam</code> to its handlers.</p>
<pre><code>logger.setLevel(logging.INFO)
h1 = logging.StreamHandler()
h1.setLevel(logging.CRITICAL)
h2 = logging.FileHandler('some.log')
h2.setLevel(logging.DEBUG)
logger.addHandler(h1)
logger.addHandler(h2)
logger.info('spam')
</code></pre>
<p>Now the logger has two handlers, <code>h1</code> printing records to terminal, <code>h2</code> writing them to file. The logger will pass only records of level <code>INFO</code> or greater to its handlers. However, you will see only records with level <code>CRITICAL</code> in terminal, but all records in log file.</p>
</div>
<span class="comment-copy">Thank you so much Hoefling. The answer is great!</span>
<span class="comment-copy">Glad I could help!</span>
