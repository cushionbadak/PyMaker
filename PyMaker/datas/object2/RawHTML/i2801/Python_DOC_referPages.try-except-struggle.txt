<div class="post-text" itemprop="text">
<p>I am trying to stop this program if the number the person enters is not 4 numbers long, using the try-except structure. I don't really get why it skips the except block if I enter a 2 or 3 digit number for example. All help appreciated.</p>
<pre><code>guess = int(input('Guess a 4 digit number:\n'))
guesslist = [int(x) for x in (str(guess))]
x = 0
y = 0

try:
    print(len(str(guess)))
    len(str(guess)) == 4

except:
    print('please enter a 4 digit number')
    quit()

print('past')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>try</code>/<code>except</code> syntax catches exceptions (aka errors).  If there are no errors thrown by the code in a <code>try</code> clause, the <code>except</code> clause is skipped. You don't have any obvious errors in your <code>try</code> clause.</p>
<p>From the <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer"><code>try</code>/<code>except</code> docs</a>:</p>
<blockquote>
<p>First, the try clause (the statement(s) between the try and except keywords) is executed.
  If no exception occurs, the except clause is skipped and execution of the try statement is finished.</p>
</blockquote>
<p>Use <code>if</code>/<code>then</code> conditional syntax instead:</p>
<pre><code>if len(str(guess)) == 4:
    print(len(str(guess)))
else:
    print('please enter a 4 digit number')
    quit()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try adding an <code>assert</code> to <code>len(str(guess)) == 4</code> so it is <code>assert len(str(guess)) == 4</code>.</p>
<p>The reason why is that just having <code>len(str(guess)) == 4</code> is useless - that is run but you haven't told Python to do anything with the result. If you <code>assert</code>, it basically means verify the next code is true, otherwise throw an exception. </p>
</div>
<div class="post-text" itemprop="text">
<p>You need to raise an exception in order to trigger the except. Try it like this:</p>
<pre><code>guess = int(input('Guess a 4 digit number:\n'))
guesslist = [int(x) for x in (str(guess))]
x = 0
y = 0
try:
    print(len(str(guess)))
    if(len(str(guess)) != 4):
        raise Exception("Invalud number")

except:
    print('please enter a 4 digit number')
    quit()

print('past')
</code></pre>
</div>
<span class="comment-copy">a <code>try</code> is not an <code>if</code>. The <code>except</code> triggers only when an <code>Error</code> is thrown inside the <code>try</code>; not if a test fails.</span>
<span class="comment-copy">You shouldn't really use assert statements for this kind of thing, as they are for debugging: <a href="https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
