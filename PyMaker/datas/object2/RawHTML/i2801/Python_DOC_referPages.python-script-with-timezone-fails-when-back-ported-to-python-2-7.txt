<div class="post-text" itemprop="text">
<p>I have a python script running on python 3.6.4 locally buy trying to run it on a system with python 2.7. </p>
<pre><code>File "report_scheduler.py", line 5, in &lt;module&gt;
from datetime import datetime, timedelta, timezone, tzinfo
ImportError: cannot import name timezone
</code></pre>
<p>I cant seem to import timezone module.  I can't seem to install the timezone module.  is there an easy way to import that module or modify the scripts to not need it? my only two references to that module are below. </p>
<pre><code>from datetime import datetime, timedelta, timezone, tzinfo

last_run=(row[4]).replace(tzinfo=timezone.utc)
time_since_last_request = datetime.now(timezone.utc) - last_run
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>1) for the reason: as outlined e.g. in <a href="https://stackoverflow.com/a/24666683/4092588">this answer</a> <code>datetime.now(timezone.utc)</code> works only from Python 3.2 and later versions</p>
<p>2) for fixing: I would use a quick snippet like the following [check <a href="https://stackoverflow.com/a/2331640/4092588">this other answer</a> as reference]:</p>
<pre><code>import pytz  # 3rd party: $ pip install pytz
from datetime import datetime

u = datetime.utcnow()
u = u.replace(tzinfo=pytz.utc) #NOTE: it works only with a fixed utc offset

# print(u)   # prints UTC time
# print(u.astimezone(pytz.timezone("America/New_York")))     # prints another timezone
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, you're not importing a <code>timezone</code> module, you're importing the <code>timezone</code> class out of the <code>datetime</code> module. So, trying to install a <code>timezone</code> module, even if there were such a thing, wouldn't help anything.</p>
<p>Meanwhile, as <a href="https://docs.python.org/3/library/datetime.html#datetime.timezone" rel="nofollow noreferrer">the docs</a> say, the <code>timezone</code> class was added in Python 3.2, so you don't have it in 2.7.</p>
<p>There used to be a backport of the <code>datetime</code> module from around Python 3.4 to 2.7, which would have solved your problem, but it seems to have been abandoned years ago.</p>
<hr/>
<p>So, that leaves modifying your code so that it doesn't need <code>timezone</code>.</p>
<p>Fortunately, the only instance of <code>timezone</code> you're ever using is the UTC one, and that's pretty easy to work around.</p>
<p>A <code>timezone</code> class is just a pre-built implementation of a <a href="https://docs.python.org/2/library/datetime.html#tzinfo-objects" rel="nofollow noreferrer"><code>tzinfo</code></a> class. In 2.x, you have to implement your own <code>tzinfo</code> class. But the trivial <code>class UTC</code> example in the docs happens to be exactly what you want:</p>
<pre><code>ZERO = timedelta(0)
HOUR = timedelta(hours=1)

class UTC(tzinfo):
    """UTC"""

    def utcoffset(self, dt):
        return ZERO

    def tzname(self, dt):
        return "UTC"

    def dst(self, dt):
        return ZERO

utc = UTC()
</code></pre>
<p>Now, everywhere you used <code>timezone.utc</code>, just use <code>utc</code> instead, and you're done.</p>
</div>
<span class="comment-copy">First, you're not importing a <code>timezone</code> module, you're importing the <code>timezone</code> class out of the <code>datetime</code> module. So, trying to install a <code>timezone</code> module, even if there were such a thing, wouldn't help anything</span>
