<div class="post-text" itemprop="text">
<p>Here is a catch:</p>
<p>I need to collect all the logs only from the specific time which is parsed as a string argument to the python file as <code>'python main.py -t "Aug 6 12:30:45.123"</code> </p>
<p>The logs actually have the timestamps and the corresponding logs. For example:</p>
<pre><code>Aug 6 12:30:45.123 abcdefghijklmnopqrstuvwxyz
</code></pre>
<p>and so on</p>
<p>It is becoming very difficult to capture logs from this time onwards till the script executes.</p>
<p>Please note: only standard Python libraries can be used.</p>
<p>This is what I have tried so far:</p>
<pre><code>log_lines = ["Aug  7 11:00:00 abc newsyslog[25714]: logfile turned over due to size&gt;1024K",
             "Aug  7 11:00:00.000  abc xyz lol"]  # we'll use a list as an example

for line in log_lines:
    date_string = " ".join(line.split(None, 3)[:-1])
    print(date_string)
</code></pre>
<p>Extracting the date and time.</p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you're not having trouble separating the time stamp string, but you'll need to convert it to a <a href="https://docs.python.org/3/library/time.html" rel="nofollow noreferrer">time</a> object or similar so you can compare times.</p>
<p>Here's a simple example that parses the string to create a time object and then compares that with the start log time:</p>
<pre><code>import time
#example log
log_lines = ["Aug  7 11:00:00 abc newsyslog[25714]: logfile turned over due to size&gt;1024K",
             "Aug  8 11:00:00.000  abc xyz lol",  
             "Aug  3 11:00:00.000  def 3.14",  
             "Dec  4 11:00:00.000  ghi 1.62",
            ]  

# process args (TODO use argparse)
start_time_arg = "Aug  6 12:30:45.123"

log_start = time.strptime(start_time_arg[:15], "%b %d %H:%M:%S")

for log in log_lines:
    log_time = time.strptime(log[:15], "%b %d %H:%M:%S")
    if log_time &gt; log_start:
        print(log)
</code></pre>
<p>This produces:</p>
<pre><code>Aug  7 11:00:00 abc newsyslog[25714]: logfile turned over due to size&gt;1024K
Aug  8 11:00:00.000  abc xyz lol
Dec  4 11:00:00.000  ghi 1.62
</code></pre>
<p>See <a href="https://docs.python.org/3/library/time.html#time.strptime" rel="nofollow noreferrer">time.strptime()</a> for more information. I've lazily sliced the string, assuming that the time stamp is in the first fifteen characters, you may need to use some of the other work you've done in isolating the time string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try list comprehension to filter the list:</p>
<pre><code>log_lines = ["Aug  7 11:00:00 abc newsyslog[25714]: logfile turned over due to size&gt;1024K",
             "Aug  7 11:00:00.000  abc xyz lol"] 
arg = "Aug  7 11:00:00"
[line for line in log_lines if line.startswith(arg)]
</code></pre>
<p>Output:</p>
<pre><code>['Aug  7 11:00:00 abc newsyslog[25714]: logfile turned over due to size&gt;1024K', 'Aug  7 11:00:00.000  abc xyz lol']
</code></pre>
</div>
<span class="comment-copy">If you are only trying to run the script at a specific time, you can use crontab.</span>
<span class="comment-copy">How do I integrate crontab in the python script ? Can you give an example ? Sorry I am new to Python. Other thing is I want to collect the logs from the specified time till the time of execution of the script</span>
<span class="comment-copy">I don't think crontab is going to help here. You need something to read your logs, line by line, and then do something with lines that match. In the simplest case, you could write a new log file with matching lines, for later processing.</span>
<span class="comment-copy">My guess is that you need to extract a timestamp from each log line, and then do a time comparison on each timestamp. Have you tried these things? Python will have a date/time class that will let you convert a string into a date/time type, and Stack Overflow will have answers showing how to do that.</span>
<span class="comment-copy"><i>'only from the specific time'</i>: Does this mean <i>at the exact time</i>, or *after this time?</span>
