<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/419163/what-does-if-name-main-do">What does if __name__ == “__main__”: do?</a>
<span class="question-originals-answer-count">
                    27 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to make a CLI and GUI for a appliaction in which I am using my CLI to perform task and return string for my GUI and give output.</p>
<p>But problem is when I import my CLI it first takes input as it should when it is run from direct CLI, but I do not want it to take input from CLI when running from GUI.</p>
<p>So, for this is there any way from which I can check if the CLI script is run directly or from CLI or is imported in some file and then being run.</p>
<p>this is an example what I did:</p>
<p>cli.py</p>
<pre><code>print("hello CLI run")
x=input()
def pr(x):
    return("this is what you typed = "+x)
print(pr(x))
</code></pre>
<p>gui.py</p>
<pre><code>from tkinter import *
from cli import pr
def sb():
    c=en.get()
    zz=pr(c)
    expression.insert(0,zz)
win=Tk()
lbl=Label(win,text="Hello World")
lbl.pack()
en=Entry(win)
en.pack()
sn=Button(win,height = 2, width = 10,text="submit",command=sb)
sn.pack()
lbl=Label(win,text="Output :")
lbl.pack()
expression=Entry(win)
expression.pack()
win.mainloop()
</code></pre>
<p>When I run this this asks me to input in CLI first and then give CLI output and then run the GUI</p>
</div>
<div class="post-text" itemprop="text">
<p>You should add your logic in to main function and then at the bottom of the file add</p>
<pre><code>if __name__ == "__main__":
    # Do some validation
    main()
</code></pre>
<blockquote>
<p>'main' is the name of the scope in which top-level code executes. A module’s <code>__name__</code> is set equal to <code>'__main__'</code> when read from standard input, a script, or from an interactive prompt.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/__main__.html" rel="nofollow noreferrer">https://docs.python.org/3/library/<strong>main</strong>.html</a></p>
</div>
<div class="post-text" itemprop="text">
<h3>OR to create a class:</h3>
<h3><code>gui.py</code>:</h3>
<pre><code>from tkinter import *
from cli import C
def sb():
    c=en.get()
    zz=C(c).pr()
    expression.insert(0,zz)
win=Tk()
lbl=Label(win,text="Hello World")
lbl.pack()
en=Entry(win)
en.pack()
sn=Button(win,height = 2, width = 10,text="submit",command=sb)
sn.pack()
lbl=Label(win,text="Output :")
lbl.pack()
expression=Entry(win)
expression.pack()
win.mainloop()
</code></pre>
<h3><code>cli.py</code>:</h3>
<pre><code>print("hello CLI run")
class C:
   def __init__(self,x):
      self.x=x
   def pr(self):
      return("this is what you typed = "+self.x)
</code></pre>
</div>
<span class="comment-copy">How do you run this via CLI?</span>
<span class="comment-copy">just usual calling of script using "python3 cli.py"</span>
<span class="comment-copy">Thank ! this is the answer I was looking for.</span>
<span class="comment-copy">Yes this is helpful and this method works, but I didn't wanted to create class, I wanted to differentiate when a file is imported and when its being run directly.Thanx</span>
<span class="comment-copy">@AvinashKarhana Ok then, Does whatever in the duplicate help?</span>
<span class="comment-copy">Yes that explained well.</span>
