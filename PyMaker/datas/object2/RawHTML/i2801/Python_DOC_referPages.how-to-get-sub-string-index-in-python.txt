<div class="post-text" itemprop="text">
<p>substring_list = ['good to have', 'must have','plus','must']</p>
<p>mystr = '''C++ C, Standard Template Library, IOStreams, String Library and C++ Standard containers, the C Library
C++, C#, Microsoft .NET frameworks, Winforms, WPF, Infragistics, TFS
Inter-language integration, REST
Must be very familiar with modern versions of Oracle databas SQL.
good to have Core Java, Collections, multi-threading, Spring, JSON.
Excellent communication skills.
Familiarity with modern full software development lifecycle practices'''</p>
<p>for w in substring_list:</p>
<h1>how to get the indexes of substring</h1>
</div>
<div class="post-text" itemprop="text">
<pre><code>mystr.find(w)
</code></pre>
<p>That will return the index of the first instance of the found substring, or <code>-1</code> if the substring isn't found. For example for the first substring it will return 271. And you could use <code>mystr[271:]</code> tor retrieve the string at that index on.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this</p>
<pre><code>for x in substring_list:
    y = mystr.find(x)
    if y != -1:
        print("found: ", x, "at ", y)
</code></pre>
<p>Output </p>
<blockquote>
<p>('found: ', 'good to have', 'at ', 271)</p>
</blockquote>
<p>More about <code>find</code> <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer">HERE</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You have to iterate through the list, find the start and end position and then display. You can build on this.</p>
<pre><code>    substring_list = ['good to have', 'must have','plus','must']

    mystr = "C++ C, Standard Template Library, IOStreams, String Library and C++ Standard containers, the C Library C++, C#, Microsoft .NET frameworks, Winforms, WPF, Infragistics, TFS Inter-language integration, REST Must be very familiar with modern versions of Oracle databas SQL. good to have Core Java, Collections, multi-threading, Spring, JSON. Excellent communication skills. Familiarity with modern full software development lifecycle practices"

    for i in substring_list:
        if i in mystr:
            start=mystr.find(i)
            end=start + len(i)
            print('Substring found: "%s" Start: %s End %s' %(mystr[start:end], start, end))
        else:
            print('Substring not found: "%s" ' %(i))
</code></pre>
<p>The output is like the following:</p>
<pre><code>     Substring found: "good to have" Start: 271 End 283
     Substring not found: "must have"
     Substring not found: "plus"
     Substring not found: "must"
</code></pre>
</div>
<span class="comment-copy">thankyou @tpaskowski</span>
<span class="comment-copy">OP means the indices of the strings in <code>mystr</code>.</span>
<span class="comment-copy">sub_string index value in string?</span>
<span class="comment-copy">thank you @emmanuel-mtali</span>
<span class="comment-copy">It does not have the end position of the string but only the start index.</span>
<span class="comment-copy">thankyou@MichalelR small doubt how to get 40 indices after the sub string</span>
<span class="comment-copy">You can create an array and then add each occurrence of the string</span>
<span class="comment-copy">Thankyou@MichalelR</span>
<span class="comment-copy">Can you accept the answer if you are good?</span>
