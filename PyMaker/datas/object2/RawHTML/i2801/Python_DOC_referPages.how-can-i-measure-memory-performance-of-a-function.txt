<div class="post-text" itemprop="text">
<p>Is there a way to measure the memory a function uses in Python? 
The Peak Of memory Usage, or like a Memory Vs Execution Time?</p>
<p>I could insert some bytecode, and check every certain amount of steps the stack and take a timestamp, but this is the solution I think of, I'm sure that there is a way to find out with a standard module or something. </p>
<p>The problem Is that I don't even know If what I'm trying to do has a name, and If it does what are the appropriate terms for it. </p>
<p>The main Issue that will help me out a lot is memory monitoring. 
Any Idea? </p>
<p>(I'm attempting to do Performance test over some routines, I picture this could be with decorators, but I just need ways to measure, memory, time, and possible state of variables during execution, but not as in debugging as in " how many iterations occurred when a certain variable preserved it's value" and questions of that sort, and try to extract the history of variables in the scope of the function to work stuff out with them) </p>
</div>
<div class="post-text" itemprop="text">
<p>Yes it does exist! 
You can use the memory profiler, more info <a href="https://pypi.org/project/memory_profiler/" rel="nofollow noreferrer">here.</a></p>
<p>As an example:</p>
<pre><code>@profile
def yourFunction():
    alpha = sqrt(2)
</code></pre>
<p>You launch your script with:</p>
<pre><code>python -m memory_profiler main.py
</code></pre>
<p>To get the memory footprint over time, you could use mprof from the same package:</p>
<pre><code>mprof run main.py
mprof plot
</code></pre>
<p>You will get (as an example)
<a href="https://i.stack.imgur.com/krzcw.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/krzcw.png"/></a></p>
</div>
<span class="comment-copy">That helps, but Is there something in the standard library of python? or just additional packages like this one?</span>
<span class="comment-copy">You may have look to <a href="https://docs.python.org/3/library/tracemalloc.html" rel="nofollow noreferrer">tracemalloc</a>, note that it is for Python &gt;=3.4</span>
<span class="comment-copy">Perfect, I work with Python 3.6 and thinking to move to 3.7 so there would be no problem, Thanks.</span>
