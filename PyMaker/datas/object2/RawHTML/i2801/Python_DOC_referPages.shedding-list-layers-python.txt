<div class="post-text" itemprop="text">
<p>How could you turn:</p>
<pre><code>[[["hi"], ["hello"]]]
</code></pre>
<p>into:</p>
<pre><code>[["hi"], ["hello"]]
</code></pre>
<p>While also working with [] as an input</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>pop</code> function to take the first item out of the list.</p>
<pre><code>&gt;&gt;&gt; a = [["hi"]]
&gt;&gt;&gt; a = a.pop(0)
&gt;&gt;&gt; a
['hi']
</code></pre>
<p>Or you can also do something like:</p>
<pre><code>&gt;&gt;&gt; a = [["hi"]]
&gt;&gt;&gt; a = a[0]
&gt;&gt;&gt; a
['hi']
</code></pre>
<p>As you edited your question:</p>
<pre><code>&gt;&gt;&gt; a = [[["hi"], ["hello"]]]
&gt;&gt;&gt; a = a.pop(0)
&gt;&gt;&gt; a
[['hi'], ['hello']]
</code></pre>
<p>If you have an empty list:</p>
<pre><code>a = []
try:a = a.pop(0) #try if it don't raises an error
except:pass  #if error is raised, ingnore it
</code></pre>
<p>So , according to the code above, if the list is empty , it will not raise any error.</p>
<p>If you want it to be more simpler:</p>
<pre><code>a = []
if len(a) != 0:a = a[0] 
print(a)
</code></pre>
<p>You can also make a function to make it simple to use with empty or non-empty lists:</p>
<pre><code>def get(list):
    return list if len(list) == 0 else list[0]
</code></pre>
<p>Testing our function:</p>
<pre><code>&gt;&gt;&gt; get([])
[]
&gt;&gt;&gt; get([["Hi","Bye"]])
['Hi', 'Bye']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a nested list comprehension to flatten it:</p>
<pre><code>list_of_lists = [['hi'],['hello']]
flattened = [val for sublist in list_of_lists for val in sublist]
print(flattened)
</code></pre>
<p>This also works if you have multipe sublists in your list.<br/>
You can read more about this on <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">python's documentation</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>itertools</code></p>
<pre><code>import itertools
ip = [["hi"]]
op = list(itertools.chain.from_iterable(ip))
# op ["hi"]
</code></pre>
<p>Or a numpy solution using <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.ravel.html#numpy-ravel" rel="nofollow noreferrer">ravel</a></p>
<pre><code>import numpy as np
ip = [["hi"]]
ip = np.array(ip)
op = list(ip.ravel())
</code></pre>
<p>Since you edited your question, you only want n-1 dimensions, you could use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.transpose.html" rel="nofollow noreferrer">np.transpose</a> -</p>
<pre><code>ip = [[["hi"], ["hello"]]]
op = ip.transpose().reshape(2, 1)
</code></pre>
<p>You could check if your input is empty<code>[]</code> explicitly before doing any operations on it, that way to avoid errors -</p>
<pre><code>if ip:
    # do some operations on ip
</code></pre>
</div>
<span class="comment-copy">try <code>flattened = [val for sublist in list_of_lists for val in sublist]</code></span>
<span class="comment-copy">That didn't in the edit you made</span>
<span class="comment-copy">Actually it doesn't work for an empty list which is a problem</span>
<span class="comment-copy">@Leosha What do you mean by an empty list?</span>
<span class="comment-copy">the empty list []</span>
<span class="comment-copy">@Leosha Check now.</span>
