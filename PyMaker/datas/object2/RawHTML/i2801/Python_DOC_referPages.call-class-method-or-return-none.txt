<div class="post-text" itemprop="text">
<p>I am struggling with database relationships and Django, but have simplified my case drastically in order to get to the point.</p>
<p>I have the following class:</p>
<pre><code>class Car(object):
    owner = 'No owner'

    def get_owner(self):
        return self.owner
</code></pre>
<p>If I do <strong>not</strong> instantiate Car, but set nissan to None and then call get_owner, I get the following error:</p>
<pre><code>nissan = None
nissan.get_owner()
AttributeError. 'NoneType' object has no attribute 'get_owner'
</code></pre>
<p>Is it possible to return None when calling nissan.get_owner() if nissan is None?</p>
<p>The bigger picture: I am writing a Django templatetag that returns some data based on whether database relationships exist. It would be nice to write such code one one line though. In the end, I just want to get the value from get_owner() or get None.</p>
<pre><code>nissan.get_owner() or None
</code></pre>
<p>Is not working here...</p>
</div>
<div class="post-text" itemprop="text">
<p>Short answer: no, you should not be able to call methods on <code>None</code> objects, I believe you're misunderstanding how object creation works. If you just want to return a <code>None</code> value, then don't assign it in the first place. The correct way to declare an unitialized attribute would be:</p>
<pre><code>class Car(object):
    def __init__(self):
        self.owner = None
</code></pre>
<p>And to use it:</p>
<pre><code>nissan = Car()
nissan.owner
=&gt; None
nissan.owner = 'Some Guy'
nissan.owner
=&gt; 'Some Guy'
</code></pre>
<p>Also note that <code>get</code> methods are frowned upon in Python, just access the attribute directly.</p>
<p>Now for the big picture - after having clarified how object creation works, you could test whether the object is not null before using it:</p>
<pre><code>nissan.owner if nissan is not None else None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html?highlight=builtin%20functions#getattr" rel="nofollow noreferrer"><code>getattr()</code></a> should help you.</p>
<pre><code> getattr(nissan, 'owner', None)
</code></pre>
<p>Also, you don't need <code>get_owner()</code> method -- python way is to access the property directly. Find about <a href="https://docs.python.org/3/library/functions.html?highlight=builtin%20functions#property" rel="nofollow noreferrer"><code>property()</code></a> to get a direction.</p>
<p>Cheers!</p>
</div>
<div class="post-text" itemprop="text">
<p>Looking at your bigger picture directly, normal python logic operators can help you with this, the and stops at the first False. So this works just fine:</p>
<pre><code>nissan and nissan.get_owner() or None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If Nissan is None, it has no method named "get_owner", meaning you can not call this method on a nissan object (or any method for that case). 
you need to make nissan a car, and then decide in which circumstances will the get_owner method return none, and implement that in your code</p>
</div>
<span class="comment-copy">try to <code>print(type(nissan))</code> and <code>print(dir(nissan))</code> you don't understand what are you doing.</span>
<span class="comment-copy">The whole idea of using classes is that you need to instantiate them <i>first</i>.</span>
<span class="comment-copy">Too bad Python has no <code>Maybe</code> functor :(</span>
<span class="comment-copy">Sorry that was me. Not entirely sure if he's struggling with OO concepts. But your edit resolved any issues I had :)</span>
<span class="comment-copy">This will, unfortunately, can start failing if <code>Car</code> overrides the <code>__bool__</code>, or <code>__len__</code>, etc. This can be fixed, but is bad design anyway :(</span>
<span class="comment-copy">True, but I wasn't looking at edge cases. I was looking at his 'bigger picture' and trying to help him get further. I did assume he knows what's he doing to some extent ;)</span>
<span class="comment-copy">Downvoter, pls Explain</span>
<span class="comment-copy">Looks like a drive-by downvoter, I was also affected. I hate it when someone does that, with no explanations at all.</span>
<span class="comment-copy">That was me by accident. But also not so sure if your answer makes it any clearer for him to be honest.</span>
<span class="comment-copy">Yes, using logic is horrible! Shame on me. Shhhaaamee! No need to be rude, I said it was by accident. So far each time I try to undo it it ups the timer of it being locked..</span>
<span class="comment-copy">If you want to undo the downvote, Rafi needs to edit the post first</span>
