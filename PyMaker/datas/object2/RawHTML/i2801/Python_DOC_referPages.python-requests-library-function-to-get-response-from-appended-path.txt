<div class="post-text" itemprop="text">
<p>I'm trying to GET the value of a THING on Thingworx platform. I have the below code which achieves the result.</p>
<pre><code>import json
import requests
url = 'https://academic.cloud.thingworx.com/Thingworx/Things/weatherrover1/Properties/battery'

headers = {'appKey': 'fdb123fc-e369-483b-baa5-8445bd8746ee',
           'Accept': 'application/json'}

getreq = requests.get(url, headers=headers)
</code></pre>
<p>But I'm trying to break down the URL to basic URL until <code>'https://academic.cloud.thingworx.com/'</code> and define variables for what follows and get response. But it fails. Below is the code I tried.</p>
<pre><code>import json
import requests

url = 'https://academic.cloud.thingworx.com/'
params = { 'Platform': 'Thingworx',
           'Things': 'Things',
           'Entity':'Things',
           'Thing_Name':'weatherrover1',
           'Properties':'Properties',
           'Property_Name':'battery'}

getreq = requests.get(url, params = params, headers=headers)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>params</code> argument is <em>purely</em> for defining the query parameters, the part after a <code>?</code> in the URL.</p>
<p>You added <em>URL path elements</em> to your <code>params</code>, that won't get you the URL you want, because the URL path is the part <em>before</em> the <code>?</code> in a URL. You can use <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer"><em>string formatting</em></a> to expand the path.</p>
<p>String formatting can use templates, so the URL could be:</p>
<pre><code>url_template = 'https://academic.cloud.thingworx.com/{platform}/{entity}/{entity_name}/Properties/{property}'
</code></pre>
<p>and then each <code>{...}</code> placeholder name can be taken from a dictionary:</p>
<pre><code>url_parts = {
    'entity': 'Things',
    'platform': 'Thingworx',
    'entity': 'Things',
    'entity_name': 'weatherrover1',
    'property': 'battery'
}

url_template.format(**url_parts)
</code></pre>
<p>Use the <code>url_template.format(**url_parts)</code> result in a <code>requests.get()</code> call:</p>
<pre><code>response = requests.get(url_template.format(**url_parts), headers=headers)
</code></pre>
</div>
<span class="comment-copy">What are you trying to do? What's wrong with just using the full URL?</span>
