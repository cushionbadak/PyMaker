<div class="post-text" itemprop="text">
<p>I wonder if the following can be done better:</p>
<pre><code>import numpy as np
def label_items(items):
    data = np.array(items)
    labels = np.zeros(len(items), dtype='int')
    for label, value in enumerate(set(items)):
        labels[data==value] = label
    return labels
</code></pre>
<p>for example:</p>
<pre><code>label_items(['a', 'a', 'c', 'd', 'e', 'b', 'e', 'e', 'd', 'c'])
</code></pre>
<p>will return</p>
<pre><code>array([0, 0, 1, 4, 3, 2, 3, 3, 4, 1])
</code></pre>
<p>Addendum: the letters are merely an example, it could be a list of anything. That's why I called the function "label_items". The order of the labels doesn't matter.</p>
</div>
<div class="post-text" itemprop="text">
<p>If order is not important, you can use <a href="https://docs.scipy.org/doc/numpy-1.14.0/reference/generated/numpy.unique.html" rel="nofollow noreferrer"><code>numpy.unique</code></a>:</p>
<pre><code>import numpy as np

def label_items(arr):
    return np.unique(arr, return_inverse=True)

vals, labels = label_items(['a', 'a', 'c', 'd', 'e', 'b', 'e', 'e', 'd', 'c'])

print(vals)

['a' 'b' 'c' 'd' 'e']

print(labels)

[0 0 2 3 4 1 4 4 3 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use simple <code>map</code>:</p>
<pre><code>list(map(lambda x: ord(x) - ord('a'), a))
</code></pre>
<p>Result:</p>
<pre><code>[0, 0, 2, 3, 4, 1, 4, 4, 3, 2]
</code></pre>
<p>So, <a href="https://docs.python.org/3/library/functions.html#ord" rel="nofollow noreferrer"><code>ord</code></a> function returns an integer representing the Unicode code point of that character. Than <code>ord(x) - ord('a')</code>, where <code>x</code> - some letter, returns alphabetical order number.</p>
</div>
<span class="comment-copy">So your data will always be in this form with "clear" mapping from letter to number?</span>
<span class="comment-copy">The letters are just an example, it could be a list of anything really.</span>
<span class="comment-copy">How would you determine what 'label' to give them?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3172509/numpy-convert-categorical-string-arrays-to-an-integer-array">numpy convert categorical string arrays to an integer array</a></span>
<span class="comment-copy">It'll be helpful if you could explain what you did.</span>
<span class="comment-copy">The letters where just an example, it should work for other stuff as well</span>
