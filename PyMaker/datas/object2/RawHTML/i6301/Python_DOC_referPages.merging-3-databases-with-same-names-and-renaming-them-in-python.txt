<div class="post-text" itemprop="text">
<p>I have 3 df with 25 columns each. All the columns are same in the 3 df. </p>
<p>I want to merge the 3 df, and change the column name to "_a" for 25 columns of df1, change to "_b" for 25 columns of df2, and change to "_c" for 25 columns of df3.</p>
<p>I am using the below code:</p>
<pre><code>pd.merge(pd.merge(df1,df2,'left',on='year',suffixes=['_a','_b']),df3,'left',on='year')
</code></pre>
<p>How do I use a rename or some other function, to change all the 25 columns of df3 in the code above?</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>pd.merge(pd.merge(df1,df2,'left',on='year',suffixes=['_a','_b']),
         df3,'left',on='year',suffixes=['','_c'])
</code></pre>
<hr/>
<p>Another approach:</p>
<p>Source DFs:</p>
<pre><code>In [68]: d1
Out[68]:
   col1  col2  col3
0     1     2     3
1     4     5     6

In [69]: d2
Out[69]:
   col1  col2  col3
0    11    12    13
1    14    15    16

In [70]: d3
Out[70]:
   col1  col2  col3
0    21    22    23
1    24    25    26
</code></pre>
<p>Let's create a list of DFs:</p>
<pre><code>In [71]: dfs = [d1,d2,d3]
</code></pre>
<p>and a list of suffixes:</p>
<pre><code>In [73]: suffixes = ['_a','_b','_c']
</code></pre>
<p>Now we can merge them in one step like as follows:</p>
<pre><code>In [74]: pd.concat([df.add_suffix(suffixes[i]) for i,df in enumerate(dfs)], axis=1)
Out[74]:
   col1_a  col2_a  col3_a  col1_b  col2_b  col3_b  col1_c  col2_c  col3_c
0       1       2       3      11      12      13      21      22      23
1       4       5       6      14      15      16      24      25      26
</code></pre>
<p>Short explanation: in the list comprehension we are generating a list of DFs with already renamed columns:</p>
<pre><code>In [75]: [suffixes[i] for i,df in enumerate(dfs)]
Out[75]: ['_a', '_b', '_c']

In [76]: [df.add_suffix(suffixes[i]) for i,df in enumerate(dfs)]
Out[76]:
[   col1_a  col2_a  col3_a
 0       1       2       3
 1       4       5       6,    col1_b  col2_b  col3_b
 0      11      12      13
 1      14      15      16,    col1_c  col2_c  col3_c
 0      21      22      23
 1      24      25      26]
</code></pre>
</div>
<span class="comment-copy">Great demonstration, even before the edit! <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">List Comprehensions</a> are often confusing to those new to python, so they generally deserve a small explanation or note. Nonetheless, your answer is clear and concise. +1</span>
<span class="comment-copy">@Aaron3468, thank you! I've added a short explanation...</span>
<span class="comment-copy">Thanks!   pd.merge(pd.merge(df1,df2,'left',on='year',suffixes=['_a','_b']),          df3,'left',on='year',suffixes=['','_c']) does not work as I guess the columns of the data frames should be identical (Note- merging 2 dfs changes the columns to "_a" and "_b" and so they are not identical to df3. How can I use a rename function to change the suffix of the 3rd df?</span>
<span class="comment-copy">maybe you can try <code>reduce(lambda x, y: pd.merge(x, y, on = 'year'), l)</code></span>
<span class="comment-copy">@Wen, itâ€™s a great idea- turn it into an answer.</span>
