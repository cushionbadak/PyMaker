<div class="post-text" itemprop="text">
<p>Say I have a list called <code>list</code>, which is comprised of boolean values.  Also say that I have some (valid) index <code>i</code> which is the index of <code>list</code> where I want to switch the value.</p>
<p>Currently, I have: <code>list[i] = not list[i]</code>.</p>
<p>But my question is, doesn't this iterate through <code>list</code> twice? If so is there are way to setup a temp value through aliasing to only iterate through the list once? </p>
<p>I tried the following:</p>
<pre><code>temp = list[i]
temp = not temp
</code></pre>
<p>But this has not worked for me, it has only switched the value of <code>temp</code>, and not the value of <code>list[i]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>you can look a little ways 'under the hood' using the <code>dis</code> module <a href="https://docs.python.org/3/library/dis.html" rel="nofollow noreferrer">https://docs.python.org/3/library/dis.html</a> </p>
<pre><code>import dis


boolst = [True, True, True, True, True]

dis.dis('boolst[2] = not boolst[2]')
  1           0 LOAD_NAME                0 (boolst)
              2 LOAD_CONST               0 (2)
              4 BINARY_SUBSCR
              6 UNARY_NOT
              8 LOAD_NAME                0 (boolst)
             10 LOAD_CONST               0 (2)
             12 STORE_SUBSCR
             14 LOAD_CONST               1 (None)
             16 RETURN_VALUE

dis.dis('boolst[2] ^= True')
  1           0 LOAD_NAME                0 (boolst)
              2 LOAD_CONST               0 (2)
              4 DUP_TOP_TWO
              6 BINARY_SUBSCR
              8 LOAD_CONST               1 (True)
             10 INPLACE_XOR
             12 ROT_THREE
             14 STORE_SUBSCR
             16 LOAD_CONST               2 (None)
             18 RETURN_VALUE
</code></pre>
</div>
<span class="comment-copy"><code>doesn't this iterate through list twice?</code> Does it? Why do you think so?</span>
<span class="comment-copy">It doesn't iterate the list at all? I'm not understanding what you mean.</span>
