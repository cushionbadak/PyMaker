<div class="post-text" itemprop="text">
<p>I am trying to read a line of numbers in a csv file, then call on them individually to compute with them. Here is my code so far:</p>
<pre><code>import sys
import os
import csv
import numpy as np

with open('data.csv') as csv_file:
    csv_reader = csv.reader(csv_file)

    for line in csv_reader:

        x = np.array(line[3])
        print(x)
</code></pre>
<p>Within this line of the csv file there are numbers with decimals like 4.65 that I need to use in the calculations. I tried things like:</p>
<p><code>print(5 + x[14])</code> but it won't work.</p>
<p>I assume I need to convert the line into a list of integers or something, please help.</p>
<p>Thank you in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>According to your example line you want to add <code>delimiter=' '</code> to the <code>csv.reader()</code></p>
<pre><code>csv_data = csv.reader(csv_file, delimiter=' ')
</code></pre>
<hr/>
<p>Taking a guess at the structure of your <code>csv</code>, but under the assumption that it contains no headings and you want to keep the decimals:</p>
<pre><code>with open('new_data.txt') as csv_file:
    csv_data = csv.reader(csv_file, delimiter=' ')
        for line in csv_data:
            x = [float(n) for n in line.split(',')]
            print(x)
</code></pre>
<p>This will fail if you have string values, such as <code>'A string'</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Here is an alternative to @GiantsLoveDeathMetal's solution with <code>map</code> (also it shows a way to provide us a copy/paste-able piece of code containing a sample of your csv file with <a href="https://docs.python.org/3/library/io.html#io.StringIO" rel="nofollow noreferrer"><code>io.StringIO</code></a>) :</p>
<p><strong>EDITED the <code>StringIO</code> to contain data in columns and with empty rows</strong></p>
<pre><code>import csv
import io 

f = io.StringIO("""
7.057
7.029

5.843
5.557
4.186
4.1

2.286""")
csv_reader = csv.reader(f, delimiter=' ')
for line in csv_reader:
    line = list(map(float, filter(None, line)))
    print(line)
</code></pre>
<p>In python 2 (and in some cases in python 3 if your code works with a generator, which is not the case in this example), you don't need to convert the result of <code>map</code> to a list.</p>
<p>So <code>line = list(map(float, line))</code> can be replaced by the much cleaner <code>map(float, line)</code>. Which <em>can</em> be considered cleaner and more explicit than a list comprehension (or a generator expression).</p>
<p>For instance this will work :</p>
<pre><code>import csv
import io 

f = io.StringIO("""7.057 7.029 5.843 5.557 4.186 4.1 2.286""")
csv_reader = csv.reader(f, delimiter=' ')
for line in csv_reader:
    line = map(float, line)
    print(sum(line))
# 36.05800000000001
</code></pre>
<p>If you're interested in the <code>map</code> vs list comprehension debate, <a href="https://stackoverflow.com/questions/1247486/python-list-comprehension-vs-map">here you go for more details</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>yes indeed Unatiel.</p>
<p>sorry, had to create an answer to my own question, apparently </p>
</div>
<div class="post-text" itemprop="text">
<p>I think you can try to read it with pandas. 
Below is sample code where dataarr will be ndarray of numpy type and you can access it using for loop. </p>
<pre><code>import pandas as pd
data = pd.read_csv('data.csv',header=None)
dataarr = pd.np.array(data)
</code></pre>
<p>Access element like this:</p>
<pre><code>float(a[0][0]) #this will give 5.11 in your case
</code></pre>
<p>I hope this help you to solve your problem.</p>
</div>
<span class="comment-copy">Do you really need a numpy array or do regular arrays suffice?</span>
<span class="comment-copy">either one should suffice</span>
<span class="comment-copy">Have you tried <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.loadtxt.html" rel="nofollow noreferrer"><code>numpy.loadtxt</code></a> or <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.genfromtxt.html" rel="nofollow noreferrer"><code>numpy.genfromtxt</code></a>?</span>
<span class="comment-copy">Welcome to SO. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a>.  <a href="https://docs.python.org/3/library/functions.html#float" rel="nofollow noreferrer"><code>float()</code>'</a></span>
<span class="comment-copy">Can you give us an example of a line as it is presented in the <code>csv</code> ?</span>
<span class="comment-copy">it returned: ValueError: could not convert string to float: '5.11,0.5,5.61'</span>
<span class="comment-copy">those are the first numbers in the string</span>
<span class="comment-copy">Can you give me a sample of the csv file?</span>
<span class="comment-copy">['5.11' '0.5' '5.61'] ['5.08' '0.5' '5.58'] ['5.06' '0.5' '5.56'] ['4.74' '-0.5' '4.24'] ['' '' ''] ['' '' ''] ['6.486' '1' '7.486'] ['4.687' '-0.5' '4.187'] ['4.488' '-0.5' '3.988'] ['4.34' '-0.5' '3.84']</span>
<span class="comment-copy">There are no commas which confuses me, try <code>line.split(',')</code> in the list comprehension of my answer.</span>
<span class="comment-copy">Nice <code>map</code>. Please get rid of unused <code>import</code>s it will make your answer look less like a beast. :)</span>
<span class="comment-copy">thanks Unatiel, however I this solution only works if I keep the string short enough so that its on one line. Also, if I write out the string then there is no point in haveing the csv file, but i need to be calling on the numbers from that file to do computations.</span>
<span class="comment-copy">@ChristopherRivas The <code>StringIO</code> is used to provide a file-like object for <code>csv.reader</code>. It's a dummy file in memory for demonstration purposes. For your real code, you would of course use <code>open()</code> on your file. What we need now is an actual sample of your csv file so we can use the right parameters for <code>csv.reader</code>. If the line you've provided in @GiantsLoveDeathMetal's answer is indeed how your csv looks like, then a confirmation would be welcome. Because you've provided a different sample in the comment to your question. Also, a <code>StringIO</code> can indeed contain multiple lines.</span>
<span class="comment-copy">my file is an exel file. 5.61 5.58 5.56 4.24   7.486 4.187 3.988 3.84   1.057 1.029 1.843 5.7 9.86 4.1 7.26   7.95 3.071 7.98 8.56   4.36 1.63 1.67 1.875 4.683 1.9 1.4</span>
<span class="comment-copy">sorry, here is what it looks like:                                                                                                                                                          5.61 5.58 5.56 4.24   7.486 4.187 3.988 3.84   1.057 1.029 1.843 5.7 9.86 4.1 7.26   7.95 3.071 7.98 8.56   4.36 1.63 1.67 1.875 4.683 1.9 1.4</span>
