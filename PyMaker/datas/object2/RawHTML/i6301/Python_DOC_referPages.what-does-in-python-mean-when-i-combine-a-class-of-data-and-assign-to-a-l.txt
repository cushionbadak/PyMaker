<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/17160162/what-do-ellipsis-mean-in-a-list">What do ellipsis [â€¦] mean in a list?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>Example </p>
<pre><code>PatientDir = []

class Patient_Data(object):
    def __init__(self,first_name,last_name,SSN,more,PatientDir):
        self.fn = first_name
        self.ln = last_name
        self.ssn = SSN
        self.more = more
        self.pd = PatientDir
        print("Patient Created with credentials: ",self.fn,",",self.ln)
    def update(self):
        PatientDir.append(self.pd)

    def getit(self):
        print("First Name: ",self.fn)
        print("Last NameL ",self.ln)
        print("SSN: ",self.ssn)
        print("more fields:,",self.more)

patient00000005 = Patient_Data("Julie","Roberton",123121234,
                               "More fields will be here",PatientDir)
patient00000048 = Patient_Data("Andrew","Johnson",987989876,
                               "More fields will be here",PatientDir)
</code></pre>
<p>Now I was curious if I could save the two patients, in a list, then i wanted to see a dictionary just to see how it works. I want to see if I could access the data through the list or dictionary, when I assigned them to the list</p>
<pre><code>print(PatientDir)
[[...], [...]] 
</code></pre>
<p>, 
when I try to print the first position, </p>
<pre><code>PatientDir[1]  
[[...], [...]] 
</code></pre>
<p>when I try to search in google I get no results. So I can't find the next step if there is a step, if you can do this? I like to try to figure things out myself but I can't find results... So what does it mean? How would I extract the information if I can? Lastly I of course would not make a program without encryption with medical data, or other sensitive data, just trying this out. </p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>...</code> in the question is an infinitely recursive list. It is not an instance of an <code>Ellipsis</code> object, this can be tested <code>l = []; l.append(l); l == [[...]]</code> will give <code>False</code>.<br/>
The second is an <code>Ellipsis</code> object in a double list.<br/>
(Credits <em>@Patrick Haugh</em> in the comments)</p>
<p>python <a href="https://docs.python.org/3/library/constants.html" rel="nofollow noreferrer">Ellipsis</a>:</p>
<blockquote>
<p>Ellipsis<br/>
  The same as .... Special value used mostly in conjunction
  with extended slicing syntax for user-defined container data types.</p>
</blockquote>
<p><a href="https://stackoverflow.com/questions/772124/what-does-the-python-ellipsis-object-do">This stack overflow question</a> explains what it does.</p>
<blockquote>
<p>Its interpretation is purely up to whatever implements the <strong>getitem</strong>
  function and sees Ellipsis objects there, but its main (and intended)
  use is in the numeric python extension, which adds a multidimensional
  array type. Since there are more than one dimensions, slicing becomes
  more complex than just a start and stop index; it is useful to be able
  to slice in multiple dimensions as well. E.g., given a 4x4 array, the
  top left area would be defined by the slice [:2,:2]</p>
</blockquote>
</div>
<span class="comment-copy">I am not sure it is a duplicate TerryA, the OP was looking for a name to call <code>[...]</code>, so he could efficiently search for it.</span>
<span class="comment-copy">"<code>PatientDir.append(self.pd)</code>" ... What?</span>
<span class="comment-copy">Your answer is wrong. The <code>...</code> in the question is not an instance of an <code>Ellipsis</code> object.  You can test this your self <code>l = []; l.append(l); l == [[...]]</code> will give you <code>False</code>.  The second is an <code>Ellipsis</code> object in a double list, the first is an infinitely recursive list</span>
<span class="comment-copy">Thank you @Patrick, I did not know.</span>
