<div class="post-text" itemprop="text">
<p>I am creating a Django application, and during development I have created many classes which have a very similar structure, e.g.:</p>
<pre><code>class OneAPIListView(generics.ListAPIView):
    queryset = models.One.objects.all()
    serializer_class = serializers.OneSerializer
    filter_class = OneFilterSet

class TwoAPIListView(generics.ListAPIView):
    queryset = models.Two.objects.all()
    serializer_class = serializers.TwoSerializer
    filter_class = TwoFilterSet

...
class &lt;Name&gt;APIListView(generics.ListAPIView):
    queryset = models.&lt;Name&gt;.objects.all()
    serializer_class = serializers.&lt;Name&gt;Serializer
    filter_class = &lt;Name&gt;FilterSet
</code></pre>
<p>I am wondering if there is a way to automatically generate these classes from the list of strings <code>["One", "Two", ..., &lt;Name&gt;]</code>. I see that there are metaclasses in other SO questions <a href="https://stackoverflow.com/questions/2461751/python-class-factory-using-user-input-as-class-names">like this</a>, e.g. I could do something like</p>
<pre><code>&lt;Name&gt; = type(&lt;Name&gt; + "APIListView", (generics.ListAPIView,), {'queryset' : ???})
</code></pre>
<p>But I am not sure what to put into <code>???</code> in my case since the variable is part of an object name.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just put <code>{'queryset': getattr(models, name).objects.all()}</code> and so on.  <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr</code></a> is important to know about if you're going to be doing any kind of metaprogramming.  Occasionally <a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow noreferrer"><code>setattr</code></a> as well but less often, especially if you're just building classes with <code>type(...)</code>.</p>
</div>
<span class="comment-copy">Just put <code>{'queryset': getattr(models, name).objects.all()}</code> and so on.</span>
<span class="comment-copy">By the way, this has nothing to do with <i>metaclasses</i>, which is a different thing.  Though programmatic creation of classes that match some pattern could be considered <i>metaprogramming</i>.  You could also in principle write a metaclass that does this but from your description there's no need for the extra complication that entails.</span>
<span class="comment-copy">thank you, I did not know about getattr and it looks like it works well!</span>
