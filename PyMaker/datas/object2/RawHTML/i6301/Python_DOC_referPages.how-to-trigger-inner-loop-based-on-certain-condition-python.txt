<div class="post-text" itemprop="text">
<p>I'm new to Python, and to programming in general. I've been writing a temperature converter as a way to practice some concepts I've learned. What I wrote so far works ok overall, but I've hit a brick wall on a specific objective I'm trying to achieve:</p>
<p>When the user makes an acceptable first choice (either "F to C" or "C to F", as opposed to anything else), they then get the next question, which is the temperature they want to convert. Here also I have made sure that the program does not give an error message and stop when the person enters anything other than an integer or a float, but if and when that happens, I don't want the program to loop all the way to the beginning, but only to the beginning of that particular branch of the decision tree.</p>
<p>In other words, when someone says they want to convert a fahrenheit value to a celsius but then type "jambalaya" instead of "78", I want the program to ask them to "enter a value" again within the same "fahrenheit to celsius" selection branch, as opposed to asking them whether they want to convert F to C or C to F, which is what the program is currently doing.</p>
<p>(Just a quick note: I DO want the program to keep asking whether the person wants to convert from F to C or C to F, IF the person has successfully obtained a converted value.)</p>
<p>Here is the code I have written:</p>
<pre><code>def temperature():
while True:
    selection = input ('Choose your conversion ("F to C" or "C to F"): ')
    if selection == 'F to C':
        num = input ('Enter a temperature in °F: ')
        try:
            float(num)
            r = round(float(num))
            s = (r-32)*(5/9)
            print (r,'°F is ',round(s),'°C')
            if s &gt; 30:
                print ('A little hot out there!')
            elif s &lt; 5:
                print ('Make sure to wear a jacket!')
            else:
                print ('Have a nice day!')
        except:
            print ('Please enter only numbers') 
    elif selection == 'C to F':
        num = input ('Enter a temperature in °C: ')
        try:
            float(num)
            r = round(float(num))
            s = (r*9/5)+32
            print (r,'°C is ',round(s),'°F')
            if s &gt; 86:
                print ('A little hot out there!')
            elif s &lt; 41:
                print ('Make sure to wear a jacket!')
            else:
                print ('Have a nice day!')
        except:
            print ('Please enter only numbers')
    else:
        print ('Please make a valid selection')
temperature()
</code></pre>
<p>How would you amend this code to achieve the result I have described above?</p>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way to do this is to just add another loop to your program that will keep asking your user to enter a correct value. Once the user does enter a correct value it exits out the loop using <code>break</code>.</p>
<pre><code>def temperature():
while True:
    selection = input ('Choose your conversion ("F to C" or "C to F"): ')
    if selection == 'F to C':
        while True: # *** Wrap this code in a loop
            num = input ('Enter a temperature in °F: ')
            try:
                float(num)
                r = round(float(num))
                s = (r-32)*(5/9)
                print (r,'°F is ',round(s),'°C')
                if s &gt; 30:
                    print ('A little hot out there!')
                elif s &lt; 5:
                    print ('Make sure to wear a jacket!')
                else:
                    print ('Have a nice day!')

                break # *** Break out of the loop after a success
            except:
                print ('Please enter only numbers') 
    elif selection == 'C to F':
        while True:
            num = input ('Enter a temperature in °C: ')
            try:
                float(num)
                r = round(float(num))
                s = (r*9/5)+32
                print (r,'°C is ',round(s),'°F')
                if s &gt; 86:
                    print ('A little hot out there!')
                elif s &lt; 41:
                    print ('Make sure to wear a jacket!')
                else:
                    print ('Have a nice day!')

                break
            except:
                print ('Please enter only numbers')
    else:
        print ('Please make a valid selection')
temperature()
</code></pre>
<p>As it's probably easy to tell, this starts to make things cluttered. It would probably be a good idea to take the code for F to C and C to F and move it into its own function.</p>
</div>
<div class="post-text" itemprop="text">
<p>One thing you could do here is combine your <code>while</code> loop with a <code>try</code>.  The maybe new idea is testing the object type. </p>
<pre><code>num = ''
while not type(num) == float:
    try:
        num = float(num)
    except:
        num = input('Enter a temperature in °F: ')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this , this satisfies all your requirements</p>
<ol>
<li>It will keep asking user what type of conversion he/she wants to make until they press q</li>
<li>if they don't enter F or C prompts again</li>
<li>If they don't enter float number prompts again</li>
<li><p>case sensitive is remove means accepts F/f to C/c</p>
<p><code>def temperature():
    selection = input ('Choose your conversion ("F to C" or "C to F"): or Q to quit ')</code></p>
<pre><code>if selection.lower() == 'f to c':
    while True:
        try:
            num = float(input ('Enter a temperature in °F: '))
            r = round(float(num))
            s = (r-32)*(5/9)
            print (r,'°F is ',round(s),'°C')
            if s &gt; 30:
                print ('A little hot out there!')

            elif s &lt; 5:
                print ('Make sure to wear a jacket!')

            else:
                print ('Have a nice day!')
            return True
        except ValueError:
            print ('Please enter only numbers') 
elif selection.lower() == 'c to f':
    while True:
        try:
            num = float(input ('Enter a temperature in °C: '))
            r = round(float(num))
            s = (r*9/5)+32
            print (r,'°C is ',round(s),'°F')
            if s &gt; 86:
                print ('A little hot out there!')
            elif s &lt; 41:
                print ('Make sure to wear a jacket!')
            else:
                print ('Have a nice day!')
            return True
        except ValueError:
            print ('Please enter only numbers')
elif selection == 'Q':
    return False
else:
    print ('Please make a valid selection')
</code></pre>
<p><code>while temperature():
    temperature()</code></p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>For your purpose I suggest you to write separate function to calculate conversion so you can call it recursively</p>
<pre><code># first of all let's define how many invalid attempt you want to allow to user.
MAX_INCORRECT_ATTEMPT = 5

def f_to_c(attempt=0):
    """
    convert °F to °C
    """
    try:
        num = float(input ('Enter a temperature in °F: ')) # take input and convert it to float if exception occurs it will be handled
        r = round(num)
        s = (r-32)*(5/9)
        print (r,'°F is ',round(s),'°C')
        if s &gt; 30:
            print ('A little hot out there!')
        elif s &lt; 5:
            print ('Make sure to wear a jacket!')
        else:
            print ('Have a nice day!')
        return True # returns True if act of user is valid as expected
    except ValueError: # to only handle valueerror caused only if user enters invalid input like string or any special character
        # it is good habit to precise which exception you are handling so I have specified ValueError arise in python3 when conversion of input is not possible
        attempt += 1 # well here we increse invalid attempt count
        print ('Please enter only numbers..')
        if attempt &gt; MAX_INCORRECT_ATTEMPT:
            return False
        else:
            return f_to_c(attempt) # pass the invalid attempt count to function argument


def c_to_f(attempt=0):
    """
    convert °C to °F
    """
    try:
        num = float(input('Enter a temperature in °C: '))
        r = round(num)
        s = (r*9/5)+32
        print("{} °C is {} °F".format(r, round(s)))
        if s &gt; 86:
            print ('A little hot out there!')
        elif s &lt; 41:
            print ('Make sure to wear a jacket!')
        else:
            print ('Have a nice day!')
        return True
    except ValueError:
        attempt += 1 # calculating attempt so we can end the program if user exceeds allowed limit of faults
        print ('Please enter only numbers..')
        if attempt &gt; MAX_INCORRECT_ATTEMPT:
            return False
        else:
            return c_to_f(attempt)


def temperature_converter():
    while True:
        selection = input ('\nChoose your conversion \n1- "F to C" \n2- "C to F"\n3- Quit\n&gt; ')
        if selection == '1':
            status = f_to_c() # store the value returned by function in status
            if not status: # the block only executes if function return False
                print("too many incorrect attempt... bye...")
                break
        elif selection == '2':
            stat = c_to_f()
            if not stat:
                print("too many incorrect attempt... bye...")
                print("bye...")
                break
        elif selection == "3":
            print("bye...")
            break
        else:
            print ('Please make a valid selection.')

temperature_converter()
</code></pre>
<p>Output:</p>
<pre><code>Choose your conversion
1- "F to C"
2- "C to F"
3- Quit
&gt; 1
Enter a temperature in °F: sd
Please enter only numbers..
Enter a temperature in °F: 25
25 °F is  -4 °C
Make sure to wear a jacket!

Choose your conversion
1- "F to C"
2- "C to F"
3- Quit
&gt; 3
bye...
</code></pre>
</div>
<span class="comment-copy">Makes sense, and it worked like a charm! Thanks.</span>
<span class="comment-copy">Thanks for this. If you don't mind, I have a few questions: 1) What is the benefit of specifying the type of exception? Would the program run any differently if you did not specify it? 2) In the main program you have written (temperature_converter()), which exact line calls the f_to_c function? Does the act of defining a "status" variable by saying status = f_to_c() also call that function?  3) What is the purpose of printing True, and what exactly is "True"? Also, how does the print function know only to print True, as opposed to the whole f_to_c function? 4) What does "if not status" do?</span>
<span class="comment-copy">1-by specifying exception you can <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">handle each specific exception</a> 2- yes, <code>status = f_to_c()</code> call to function and when function reach to return statement return value whatever it is will be store in <code>status</code> 3- as I said True the Boolean value return by function I am not printing it. 4- <code>if not status</code> implies to negative of Boolean value stored in <code>status</code> i.e. it will only executed if <code>status</code> will be <code>False</code> then <code>if not False:</code> implies to <code>if True:</code> and that specific block will be executed.</span>
<span class="comment-copy">however check the comments in code now. I have updated</span>
<span class="comment-copy">Thanks, it's clearer now. I experimented with something: Instead of assigning the "status" variable to call the function and then using if not like you had done, I straight up called the function by its name, and then used if False, like so:  if selection == '1':             f_to_c()             if False:                 print("too many incorrect attempt... bye...")                 break</span>
<span class="comment-copy">This seems to be running in exactly the same way that your version is running. Do you see anything inherently wrong with the way I've done it?</span>
