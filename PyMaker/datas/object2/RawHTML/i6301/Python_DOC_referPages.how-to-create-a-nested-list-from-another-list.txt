<div class="post-text" itemprop="text">
<p><code>list1=[1, 2, 3, 4, 5]</code></p>
<p>I want to create a list <code>[[1, 2, 3, 4, 5]]</code> from <code>list1</code>.
I tried <code>list(list1)</code> but it's showing only <code>[1, 2, 3, 4, 5]</code> instead of <code>[[1, 2, 3, 4, 5]]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just initialise a new <code>list</code> which has a <code>sub-list</code> that is <code>list1</code>.</p>
<p>This is done with:</p>
<pre><code>[list1]
</code></pre>
<p>which will give:</p>
<pre><code>[[1, 2, 3, 4, 5]]
</code></pre>
<p>Or alternatively, when you are defining <code>list1</code>, you can <em>define</em> it already <code>nested</code> inside another <code>list</code>:</p>
<pre><code>list1 = [[1, 2, 3, 4, 5]]
</code></pre>
<hr/>
<p>Note that when you were trying to <code>nest</code> the original <code>list</code> inside another <code>list</code>, using <code>list()</code> will not work.</p>
<p>If you read <a href="https://docs.python.org/3/library/stdtypes.html#list" rel="nofollow noreferrer">the documentation</a>:</p>
<blockquote>
<p>The constructor builds a list whose items are the same and in the same order as iterableâ€™s items. iterable may be either a sequence, a container that supports iteration, or an iterator object. If iterable is already a list, a copy is made and returned, similar to iterable[:]. For example, list('abc') returns ['a', 'b', 'c'] and list( (1, 2, 3) ) returns [1, 2, 3]. If no argument is given, the constructor creates a new empty list, [].</p>
</blockquote>
<p>The key thing mentioned here is that <code>list</code> creates a <code>list</code> from an <code>iterable</code>. As <code>list1</code> is a <code>list</code> already, it is an <code>iterable</code>. This means that the <code>list()</code> constructor will treat as an <code>iterable</code> and create a new <code>list</code> from the <code>elements</code> inside <code>list1</code> - creating a copy of it. So that is why it wasn't working as you expected it to.</p>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried?</p>
<pre><code>list2 = [list1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You'll have to put it in another list using. When you declare a list, you put them in two square brackets. If you want to make a list of lists, you'll have to use them twice. </p>
<pre><code>lis = [your_list]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This works for me </p>
<pre><code>list1=list([list1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One line solution :</p>
<pre><code>list1=[1, 2, 3, 4, 5]

print([[nested_list for nested_list in list1]])
</code></pre>
<p>or just use:</p>
<pre><code>list1=[1, 2, 3, 4, 5]

nested_list=[list1]
</code></pre>
</div>
<span class="comment-copy">If you ask a question about lists, it's usually implied that numpy isn't a necessity to solve the problem... just a heads up. Also please don't use the tag <code>arrays</code> if you're talking about <code>list</code>s.</span>
<span class="comment-copy"><code>list([list1])</code> does it for me.</span>
<span class="comment-copy">what about <code>[list1]</code> ?</span>
<span class="comment-copy"><code>list()</code> is redundant</span>
