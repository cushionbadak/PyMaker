<div class="post-text" itemprop="text">
<p>there is a list consist of time and query, such as:</p>
<pre><code>data = [['bbb', '2017-10-24 07:23:02'], 
        ['ccc', '2017-10-24 11:01:00'], 
        ['aaa', '2017-10-24 16:13:32']]
</code></pre>
<p>I want to sort it by time. Both the query and time are string type. How can I realize it?</p>
<p>Well I convert it to </p>
<pre><code>[['aaa', 16,13,32],
 ['bbb', 7,23,2],
['ccc', 11,1,0],...] 
</code></pre>
<p>regardless of the day since all the days are the same. </p>
</div>
<div class="post-text" itemprop="text">
<p>In this scenario, sorting works on the string counterparts too. However, I'd like to provide a more canonical version for anybody interested. </p>
<p><a href="http://pandas.pydata.org/pandas-docs/version/0.20/generated/pandas.to_datetime.html" rel="nofollow noreferrer"><code>pd.to_datetime</code></a> from the <code>pandas</code> module is my goto method for most <code>datetime</code> related operations because of how good it is at guessing date formats.</p>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; data = [['bbb', '2017-10-24 07:23:02'], 
            ['ccc', '2017-10-24 11:01:00'], 
            ['aaa', '2017-10-24 16:13:32']]  
&gt;&gt;&gt; sorted(data, key=lambda x: pd.to_datetime(x[1]))
</code></pre>
<p>Which gives:</p>
<pre><code>[['bbb', '2017-10-24 07:23:02'], 
 ['ccc', '2017-10-24 11:01:00'], 
 ['aaa', '2017-10-24 16:13:32']]
</code></pre>
<hr/>
<p>You can also use the inbuilt <a href="http://dateutil.readthedocs.io/en/stable/parser.html#module-dateutil.parser" rel="nofollow noreferrer"><code>dateutil.parser</code></a> to infer datetime formats:</p>
<pre><code>&gt;&gt;&gt; import dateutil.parser
&gt;&gt;&gt; sorted(data, key=lambda x: dateutil.parser.parse(x[1]))
</code></pre>
<p>Which gives the same result.</p>
<hr/>
<p>If you're stuck in a position where you cannot convert without passing a format, use <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><code>datetime.strptime</code></a> and explicitly pass a format string.</p>
</div>
<div class="post-text" itemprop="text">
<p>logical operatos like <em>&lt;</em>, &gt;=, and etc are implemented for <code>datetime</code> objects.<br/>
So I suggest to convert strings to datetime objects in order to sort them:</p>
<pre><code>from datetime import datetime

data = [
        ['aaa', '2017-10-24 16:13:32'],
        ['bbb', '2017-10-24 07:23:02'],
        ['ccc', '2017-10-24 11:01:00']
]


sorted_dates = sorted(data, key= lambda x: datetime.strptime(
                                            x[1], "%Y-%m-%d %H:%M:%S")
)

print(sorted_dates)
</code></pre>
</div>
<span class="comment-copy">As always, convert first.</span>
<span class="comment-copy">For this particular time format, a lexical sort (sort by string) will actually do just fineâ€¦</span>
<span class="comment-copy">As @deceze stated, lexicographical sorting works for datetimes in ISO format.</span>
