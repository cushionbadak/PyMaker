<div class="post-text" itemprop="text">
<p>I need to input three lists and make a Boolean check whether there is a common element to all lists. So far it the main part of the code looks like this:</p>
<pre><code>def in_all_three(listA, listB, listC):
    for x in listA:
        if x in listB and x in listC:
            return True
        else: 
            return False
</code></pre>
<p>I don't know why, but it only returns True if the lists are identical. What is wrong with my code?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use intersection of <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">sets</a> for this purpose. </p>
<pre><code>def check_common_element(listA, listB, listC):
    common_elements = set.intersection(set(listA), set(listB), set(listC))
    if common_elements:
        return True
    else:
        return False

# Test case 1: Testing when there is a common value among lists
list_a = [1,2,3]
list_b = [1,5,6]
list_c = [1,8,9]

print(check_common_element(list_a,list_b,list_c))
# output: True

# Test case 2: Testing when there is no common value among lists
list_a = [1,2,3]
list_b = [1,5,6]
list_c = [7,8,9]

print(check_common_element(list_a,list_b,list_c))
# output: False
</code></pre>
<p>As @Reti43 suggested, you can do <code>return bool(common_elements)</code> instead of <code>if-else</code> as its a better option for the reasons described in the comments below. In that case, the modified function would look like this: </p>
<pre><code>def check_common_element(listA, listB, listC):
    common_elements = set.intersection(set(listA), set(listB), set(listC))
    return bool(common_elements)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Logically you need to return False only after all items were checked and no match was found. 
In order to do that <strong>you need to RETURN FALSE; after the loop done.</strong></p>
<pre><code>def in_all_three(listA, listB, listC):
for x in listA:
    if x in listB and x in listC:
        return True
return False
</code></pre>
</div>
<span class="comment-copy">since python is whitespace heavy, could you properly indent your code?</span>
<span class="comment-copy">The moment an element is found which is not common, your code will stop executing. Why? Because, <code>return</code> statement is encountered. So, put it at the end, after the for loop.</span>
<span class="comment-copy">When checking for membership, sets are the way to go. By the way, the whole if else block can be rewritten as <code>return bool(common_elements)</code>.</span>
<span class="comment-copy">The point is the ternary statement reads like <code>return True if True else False</code> (assuming the set is not empty), which is a tautology. Besides behind the scenes python will call bool(something) when you put that something in a conditional statement, so returning its boolean value directly is more concise. If someone can handle the idea of <code>if my_set:</code>, they can handle <code>bool(my_set)</code>. But it's just a heads up.</span>
<span class="comment-copy">@Reti43 agreed. Modified my answer with a reference to your comment as an explanation :)</span>
