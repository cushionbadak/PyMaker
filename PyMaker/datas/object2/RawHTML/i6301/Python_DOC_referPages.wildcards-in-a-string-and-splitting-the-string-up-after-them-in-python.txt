<div class="post-text" itemprop="text">
<p>I have a string that takes on the following format:</p>
<pre><code>TEST 1 EXAMPLE 1 BLAHBLAH
</code></pre>
<p>The number 1 can be replaced by any number and "BLAHBLAH" by any string, e.g:</p>
<pre><code>TEST 2 EXAMPLE 99 HELLOWORLD
</code></pre>
<p>What I'd like to do is first, check if the string (which I'm receiving as 'data') starts with <code>TEST * EXAMPLE *</code> and then, split it apart so I have a new string of only whatever follows. Here's what I've tried:</p>
<pre class="lang-py prettyprint-override"><code>import fnmatch
filtered = fnmatch.filter(data, 'TEST ? EXAMPLE ?')
if filtered != "":
    str = filtered.split("EXAMPLE ",1)[1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>fnmatch</code>'s <code>?</code> matches only one single character. In your case, as you showed, the numbers can be multiple digits, e.g. <code>99</code>, so you should use <code>*</code> instead. The following worked for me:</p>
<pre><code>import fnmatch
data = "TEST 2 EXAMPLE 99 HELLOWORLD"
if fnmatch.fnmatch(data, 'TEST * EXAMPLE *'):
    // do what you want with the data
</code></pre>
<p><a href="https://docs.python.org/3.4/library/fnmatch.html" rel="nofollow noreferrer">Reference</a></p>
<p>But I suggest using regex instead, in the following way:</p>
<pre><code>import re
m = re.compile("^TEST \d+ EXAMPLE \d+.*")
data = "TEST 2 EXAMPLE 99 HELLOWORLD TRY TRY"
if m.search(data):
    print(' '.join(data.split(' ')[4:])) // or whatever you want to do 
</code></pre>
<p>I think regex is a more powerful tool. You can read more about it <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Your example almost works:</p>
<pre><code>import fnmatch
data = 'TEST 1 EXAMPLE 1 BLAHBLAH'
matches = fnmatch.fnmatchcase(data, 'TEST * EXAMPLE *')
if matches:
    rest = data.split('EXAMPLE ', 1)[1]
    print(rest)
</code></pre>
<p>Note that <code>fnmatch.filter()</code> is expecting a list as its first argument, not a string, and it also returns a list. Also, <code>?</code> matches only a single character, so you need to use <code>*</code> instead.</p>
<p>I'd probably use a regular expression though:</p>
<pre><code>import re
data = 'TEST 1 EXAMPLE 1 BLAHBLAH'
match = re.search(r'^TEST \d+ EXAMPLE (\d+ \w+)$', data)
if match:
    rest = match.groups()[0]
    print(rest)
</code></pre>
</div>
<span class="comment-copy">Look at the re module</span>
<span class="comment-copy">What is the question?</span>
