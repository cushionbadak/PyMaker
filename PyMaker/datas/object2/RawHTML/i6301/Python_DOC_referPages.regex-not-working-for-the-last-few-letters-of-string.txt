<div class="post-text" itemprop="text">
<p>This is what my header looks like</p>
<pre><code>header = "GET method P2P-DI/1.0\n" +"Host: "+ host+ "\nOS: " + OS + "\nStatus: 404"
</code></pre>
<p>I was successfully able to get method by doing this:</p>
<pre><code>method = re.search('GET (.*?) P2P-DI/1\.0.*',header).group(1)
</code></pre>
<p>I'm trying to just retrieve the Status Code '404'. Which returns <strong>None has no group error</strong></p>
<pre><code>status = re.search('GET .*Status: ([0-9][0-9][0-9]?)',header).group(1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>import re
status = re.findall('Status: (.*?)$', header)[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>The final metacharacter in this section is <code>'.'</code><br/>
  It matches anything except a newline character, and thereâ€™s an alternate mode (<code>re.DOTALL</code>) where it will match even a newline.</p>
</blockquote>
<p>So, you can fix your code just by specifying <code>re.DOTALL</code> in the arguments:</p>
<pre><code>status = re.search('GET .*Status: ([0-9][0-9][0-9]?)', header, re.DOTALL).group(1)
print(status) # 404
</code></pre>
<p>As an alternative to match any character, you can use any of the following constructions:</p>
<pre><code>[\d\D] # that means 'digit char' or 'non-digit char' =&gt; 'any char'
[\w\W] # ...
[\s\S]
</code></pre>
<p>For your example it could be:<br/>
(note that <code>[0-9]</code> is equivalent to <code>\d</code>)</p>
<pre><code>status = re.search('GET [\s\S]*Status: (\d\d\d?)', header).group(1)
</code></pre>
<p>Also, for the instance given in the question, it is sufficient to use only:</p>
<pre><code>status = re.search('Status: (\d+)', header).group(1)
</code></pre>
</div>
<span class="comment-copy">and add index 0. cause it returns a list. re.findall('Status: (.*?)$', header)[0]</span>
