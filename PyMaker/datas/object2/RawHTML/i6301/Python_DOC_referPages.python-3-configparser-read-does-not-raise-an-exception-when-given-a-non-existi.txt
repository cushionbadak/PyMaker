<div class="post-text" itemprop="text">
<p>When I attempt to read a non-existing file using configparser.read, I think it ought to raise an exception.  It doesn't.  It returns an empty list instead.  Obviously, I can test for an empty list and raise an exception.  It just seems to me to be more intuitive and safer if the configparser.read raised a FileNotFound exception.</p>
<pre><code>jeffs@jeffs-laptop:~/nbmdt (blue-sky)*$ python3.6
Python 3.6.2 (default, Oct  2 2017, 16:51:32)  [GCC 7.2.1 20170915 (Red Hat 7.2.1-2)] on linux 
Type "help", "copyright", "credits" or "license" for more information.
 &gt;&gt;&gt; import configparser
 &gt;&gt;&gt; config=configparser.ConfigParser()
 &gt;&gt;&gt; config.read("xyzzy.xyz")
[]
 &gt;&gt;&gt; config.read("nbmdt.ini")
 ['nbmdt.ini']
 &gt;&gt;&gt;
</code></pre>
<p>Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>As the <a href="https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read" rel="nofollow noreferrer">documentation</a> makes clear, you can pass any number of filenames to the <code>read</code> method, and it will silently ignore the ones that cannot be opened.</p>
<p>If you want to see an exception on failure to open the file, try the <code>read_file</code> method instead:</p>
<pre><code>config.read_file(open("xyzzy.xyz", "r"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are right, and I am wrong.  My solution of testing the length of the list returned is not a bad solution, and it will work around the outlier case where none of the files exists, but my question suggests that I did not do a good job of reading the documentation.</p>
</div>
<span class="comment-copy">The docs explain that this is so you can look for a config file in several different places: <a href="https://docs.python.org/2/library/configparser.html#ConfigParser.RawConfigParser.read" rel="nofollow noreferrer">docs.python.org/2/library/â€¦</a>. I guess they probably could throw an exception if nothing was found.</span>
