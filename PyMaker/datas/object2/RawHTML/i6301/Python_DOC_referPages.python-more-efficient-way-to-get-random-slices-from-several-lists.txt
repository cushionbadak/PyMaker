<div class="post-text" itemprop="text">
<p>Here's a piece of python code I wrote to get random characters from 4 lists and append them to a separate list:</p>
<pre><code>key.append(chr(upper[randint(0,len(upper)-1)]))
key.append(chr(lower[randint(0,len(lower)-1)]))
key.append(chr(nums[randint(0,len(nums)-1)]))
key.append(chr(symbols[randint(0,len(symbols)-1)]))
</code></pre>
<p>Is there a more elegant way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd recommend using <code>random.choice</code> + <code>list.extend</code>:</p>
<pre><code>lsts = [upper, lower, nums, symbols]    
key.extend(chr(random.choice(x)) for x in lsts)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<h3><code>random.choice(</code><em>seq</em><code>)</code></h3>
<p>Return a random element from the non-empty sequence <em>seq</em>. If <em>seq</em> is empty, raises <code>IndexError</code>.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/random.html#random.choice" rel="nofollow noreferrer">source</a></p>
<pre><code>key.append(chr(random.choice(upper)))
</code></pre>
</div>
<span class="comment-copy">Do they all have the same length?</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ Not necessarily. Upper is uppercase unicodes, lower - lowercase unicodes etc.</span>
<span class="comment-copy">You can drop the <code>[...]</code> in this case for some added memory efficiency.</span>
<span class="comment-copy">@MartijnPieters Thanks. I didn't know extend worked well with generators.</span>
<span class="comment-copy">It takes any iterable. Most things that accept a list and tuple take a generator too. The only exception is <code>str.join()</code> where using a list comprehension is just more efficient, see <a href="//stackoverflow.com/a/9061024">List comprehension without [ ] in Python</a></span>
<span class="comment-copy">@MartijnPieters Thanks again. I knew about the case of <code>join</code> but didn't know that was an exception to a rule. Cool stuff.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ Cool! This is what I was looking for. Thanks!</span>
