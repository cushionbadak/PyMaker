<div class="post-text" itemprop="text">
<p>I try to count the number of frequency of each letters</p>
<p>Here is my main file:</p>
<pre><code>from moduleA import get_text, process_data,print_output
import os

filename1 = os.path.join(os.getcwd(),'script01.txt') 
filename2 = os.path.join(os.getcwd(),'script02.txt') 
myList1 = get_text(filename1)
myList2 = get_text(filename2)


data01=process_data(myList1)
data02=process_data(myList2)


print_output(data01)
print_output(data02)
</code></pre>
<p>Here is the moduleA file:</p>
<pre><code>def get_text(file_name):
text = None
try:
    with open(file_name) as f:
        text = f.read()
except IOError as io:
    print(str(io))
return text

def process_data(text_data):
from string import ascii_lowercase
data = {}
for char in text_data:
    ch = char.lower()
    if ch in ascii_lowercase:
        if ch not in data:
            data[ch] = 1
        else:
            data[ch] += 1  
return(data)

def print_output(data):
     for char in sorted(data.items()):
     print(str(char), str(data[char]))
</code></pre>
<p>This is the error I got：</p>
<pre><code> print(str(char), str(data[char]))
 KeyError: ('a', 867)
</code></pre>
<p>I have no idea why I am not getting the whole dictionary but only the first line</p>
</div>
<div class="post-text" itemprop="text">
<p>yes, or you could use <code>collections Counter</code>:  </p>
<pre><code>from collections import Counter

frequencies = Counter(text)
</code></pre>
<p>for the printing, you must iterate over keys in sorted order:</p>
<pre><code>def print_output(frequencies):
     for key in sorted(frequencies.keys()):
         print(key, frequencies[key])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You build the dictionary like this</p>
<pre><code>    if ch in ascii_lowercase:
        if ch not in data:
            data[ch] = 1
        else:
            data[ch] += 1  
</code></pre>
<p>So I imagine the keys are characters and the values are the counts of the characters:</p>
<pre><code>{'a':867, 'b':233, ....}
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer"><code>dict.items()</code></a> produces (key, value) pairs as tuples - like <code>('a', 867)</code>.</p>
<pre><code>def print_output(data):
    for char in sorted(data.items()):
        #print(char)
        print(str(char), str(data[char]))
</code></pre>
<p>So <code>char</code> <em>in</em> <code>for char in sorted(data.items()):</code> is ('a', 867) and you are trying to use it as a key with <code>str(data[char])</code> which causes a <a href="https://docs.python.org/3/library/exceptions.html#KeyError" rel="nofollow noreferrer">KeyError</a>.</p>
<p>Try</p>
<pre><code>def print_output(data):
     for char, count in sorted(data.items()):
         print(str(char), str(count))
</code></pre>
<p>or </p>
<pre><code>def print_output(data):
     for char in sorted(data):
         print(str(char), str(data[char]))
</code></pre>
</div>
<span class="comment-copy">Yes, upvoted. Might want to add an MCVE for OP.</span>
<span class="comment-copy">what does this meant MCVE for OP @cᴏʟᴅsᴘᴇᴇᴅ,   curiosity......</span>
<span class="comment-copy">@Sanket <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">Thanks @cᴏʟᴅsᴘᴇᴇᴅ</span>
<span class="comment-copy">Thank you so much for your detailed explanation!</span>
