<div class="post-text" itemprop="text">
<p>I have a dataset containing a column "date":</p>
<pre><code>date                     item
20.3.2010 17:08           a 
20.3.2010 11:16           b
2010-03-20 15:55:14.060   c
2010-03-21 13:56:45.077   d
</code></pre>
<p>I would like to convert all values that have format as <code>20.3.2010 17:08</code> into <code>2010-03-21 13:56:45.077</code>.</p>
<p>Does anybody have an idea?</p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>Check on below:</p>
<pre><code>from datetime import datetime

INPUT_FORMAT = '%d.%m.%Y %H:%M'
OUTPUT_FORMAT = '%Y-%m-%d %H:%M:%S.%f'

datetime.strptime('20.3.2010 17:08',INPUT_FORMAT).strftime(OUTPUT_FORMAT)
#Output '2010-03-20 17:08:00.000000'
</code></pre>
<p>You could find more information in <a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer">offcial <code>strptime</code> and <code>strftime</code></a>.</p>
<p>To do a 100% match with 3 digits microseconds you could use <a href="https://stackoverflow.com/questions/11040177/python-datetime-round-trim-number-of-digits-in-microseconds">this SO approach</a>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>df['date'] = pd.to_datetime(df['date'], , format = '%Y-%m-%d %H:%M:%S.%f')
</code></pre>
<p>You can find more information on <code>pd.to_datetime()</code> <a href="http://pandas.pydata.org/pandas-docs/version/0.20/generated/pandas.to_datetime.html" rel="nofollow noreferrer">here</a>, and the format string type can be <a href="https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">found here</a>. </p>
</div>
<span class="comment-copy">Resolved! Thank you! :)</span>
<span class="comment-copy">Resolved! Thank you :)</span>
