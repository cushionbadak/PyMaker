<div class="post-text" itemprop="text">
<p>I am trying to find the maximum number and it's index using only <code>for</code> loop and without any Python given function.</p>
<p>Here is my code:</p>
<pre><code>def main():
    a = [2,1,5,9,8,3,7,4,6]
    max = 0
    index = 0

    for number in a:
        if number &gt; max:
            max = number
    index += 1

    print(max, index)

if __name__ == '__main__':
    main()
</code></pre>
<p>After looping is finished I get correct max number, but incorrect index. What should I improve?</p>
</div>
<div class="post-text" itemprop="text">
<p>You were almost there:</p>
<pre><code>a = [2,1,5,9,8,3,7,4,6]

# index: index of max, i: running index
max_index = -1  
i = 0
# do not shadow built-in 'max'
max_val = a[0] if a else None  # or sth. similar to handle negative or empty input

for number in a:
    if number &gt; max_val:
        max_val = number
        max_index = i
    i += 1

print (max, max_index)
</code></pre>
<p>This assumes that all numbers in <code>a</code> are positive.</p>
</div>
<div class="post-text" itemprop="text">
<p>Move the <code>index</code> incrementation to the body of the loop and keep the index for the maximum number, e.g:</p>
<pre><code>def main():
    a = [2, 1, 5, 9, 8, 3, 7, 4, 6]
    max_number = max_index = index = 0

    for number in a:
        if number &gt; max_number:
            max_number = number
            max_index = index
        index += 1

    print(max_number, max_index)
</code></pre>
<p>Also, don't name your variable <code>max</code> to avoid shadowing the built-in <a href="https://docs.python.org/3/library/functions.html#max" rel="noreferrer">function</a> of the same name.</p>
</div>
<div class="post-text" itemprop="text">
<p>This will probably do what you want it to do:</p>
<pre><code>def find_max_index(data, max_num=0, index_of_max=0, step=1):
    for item in data:
        if int(item) &gt; max_num:
            max_num = int(item)
            index_of_max += step
    return max_num, index_of_max - step
</code></pre>
<p>Here's an example:</p>
<pre><code>items = [1, 2, 3, 4, 999, 6, 7, 8, 9]
find_max_index(items)
# (999, 4)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should indent the line 9 variable index inside the for loop.</p>
<pre><code>def main():
    a = [2,1,5,9,8,3,7,4,6]
    max = 0
    index = 0

    for number in a:
        if number &gt; max:
            max = number
            #index +=1 should happen here 
            index += 1
         #index previously here 

    print (max, index)

if __name__ == '__main__':
    main()
</code></pre>
</div>
<span class="comment-copy">declare and use max_index variable</span>
<span class="comment-copy">I am using max and index variables both.</span>
<span class="comment-copy">I really wanna do this just because it seems interesting.. Give me a little bit</span>
<span class="comment-copy">@13aal not really. It's a mundane homework assignment.</span>
<span class="comment-copy">you need 2 indentation at the <code>index += 1</code>. I mean put it under the if statement because it will update the index only when the max is changed</span>
<span class="comment-copy">I guess it doesn't matter that we're shadowing <code>max</code> in this program. ;)</span>
<span class="comment-copy">It should, you are right. Just staying close to the OP's nomenclature.</span>
<span class="comment-copy">Shouldn't <code>max</code> be initialized to <code>-inf</code> or something similar? I'm worried that an all-negative list would give garbage data back</span>
<span class="comment-copy">I guess we could initialize it to <code>min(a)</code> :D</span>
<span class="comment-copy">This doesn't work.  Try with <code>items = [1, 2, 0, 0, 999]</code></span>
<span class="comment-copy">@PatrickHaugh your monkey wrench makes me sad.</span>
<span class="comment-copy">you should have indented <code>index += 1</code> in the if not in the for loop. Doing it in the for loop will loop in the whole list. Your attempt was almost a copy-paste of OP's code. ;)</span>
<span class="comment-copy">I know it. I thought he want very similar code to his own, but working.</span>
<span class="comment-copy">keep pushing, you will get more knowledgeable next time.</span>
