<div class="post-text" itemprop="text">
<p>guys below is my code for dictionary generating:</p>
<pre><code>import collections
from typing import Callable

def group_by_retval(*args, grouper_func: Callable[[], None]):
    my_list = []
    for elem in args:
        my_tr = grouper_func(elem)
        my_list.append([my_tr,elem])
    my_tuple = tuple(tuple(elem) for elem in my_list)
    my_diction = collections.defaultdict(list)
    for k,v in my_tuple:
        my_diction[k].append(v)
    return my_diction
</code></pre>
<p>I have read from python official documentation that I can announce callable function after the *args. as above. However, when I run simple example like below I got an error. Can someone please help me to solve this issue. Thank you for reading:</p>
<pre><code>l = ["ab", 12, "cd", "d", 3]


print(group_by_retval(l, lambda x: isinstance(x, str)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned in comments, after <code>*arg</code> (arbitrary arguments list) you could use only <a href="https://docs.python.org/3/tutorial/controlflow.html#arbitrary-argument-lists" rel="nofollow noreferrer">keyword arguments</a>:</p>
<pre><code>group_by_retval(l, grouper_func=lambda x: isinstance(x, str))
</code></pre>
<p>to do it without providing a name you could swap arguments:</p>
<pre><code>def group_by_retval(grouper_func: Callable[[], None], *args):
...

print(group_by_retval(lambda x: isinstance(x, str), l))
</code></pre>
<p>Output:</p>
<pre><code>defaultdict(&lt;class 'list'&gt;, {False: [['ab', 12, 'cd', 'd', 3]]})
</code></pre>
<p>But in fact, you just do not need to use arbitrary arguments list, because your first argument is a <code>list</code>. Right solution</p>
<pre><code>def group_by_retval(args, grouper_func: Callable[[], None]):
...
print(group_by_retval(l, lambda x: isinstance(x, str)))
</code></pre>
<p>Output:</p>
<pre><code>defaultdict(&lt;class 'list'&gt;, {False: [12, 3], True: ['ab', 'cd', 'd']})
</code></pre>
</div>
<span class="comment-copy">Post full error traceback</span>
<span class="comment-copy"><code>group_by_retval(l, grouper_func=lambda x: isinstance(x, str))</code></span>
<span class="comment-copy">@kvorobiev Traceback (most recent call last):   File "testm.py", line 20, in &lt;module&gt;     print(group_by_retval(l, lambda x: isinstance(x, str))) TypeError: group_by_retval() missing 1 required keyword-only argument: 'grouper_func'</span>
<span class="comment-copy">@vaultah What do you mean "must be provided by name"?</span>
<span class="comment-copy">@vaultah thanks. Maybe you can give me an idea. How can I do that without providing a name? Thanks again</span>
