<div class="post-text" itemprop="text">
<p>I wrote two set of codes</p>
<p>Set 1:</p>
<pre><code>numArray = map(int, input('input content:').split())
print('numArray is', list(numArray))

sum_integer = 0
for number in numArray:
    sum_integer += number*number

print('sum is:', sum_integer)
</code></pre>
<p>Set 2:</p>
<pre><code>numArray = map(int, input('input content:').split())

sum_integer = 0
for number in numArray:
    sum_integer += number*number

print('sum is:', sum_integer)
</code></pre>
<p>You can see that this is to create a set of numbers, by input, then calculate the sum of the square of each number.The difference between Set 1 and Set 2 is merely a <code>print()</code> line</p>
<p>Assume I inputed: <code>4 7 2 8 5</code> for both sets</p>
<p>for Set 1:
I get: </p>
<pre><code>numArray is [4, 7, 2, 8, 5]
sum is: 0
</code></pre>
<p>for Set 2:
I get:</p>
<pre><code>sum is 158
</code></pre>
<p>How could one <code>print()</code> line change the calculation logic?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> returns an iterator. By calling <code>list</code> on it you're consuming it, thus leaving it empty for the following code. If you want to reuse the sequence of numbers several times (e.g., for printing and then summing), you could save the list:</p>
<pre><code>numArray = list(map(int, input('input content:').split()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your question had been well answered in <a href="https://stackoverflow.com/a/46993381/7434365"><code>@Mureinik's answer</code></a>, but just if anyone is interested, you could do this in a <code>one-line</code> <code>sum</code>:</p>
<pre><code>sum_integer = sum(n ** 2 for n in numArray)
</code></pre>
<p>You could actually do the whole <code>code</code> in <code>one-line</code>:</p>
<pre><code>sum_integer = sum(int(n) ** 2 for n in input('input content:'))
</code></pre>
</div>
<span class="comment-copy">Is it because the <code>list(numArray)</code> changed the <code>numArray </code> so that it does not exist anymore??</span>
<span class="comment-copy">I see. Thank you!</span>
<span class="comment-copy">I am intrigued. Can you explain it a bit more. I didn't get the <code>consuming it</code> part?</span>
<span class="comment-copy">@Miraj50 An iterator is like a generator, it is not necessarily a <code>space</code> in <code>memory</code>. Therefore if you convert the <code>iterator</code> to a <code>list</code>, you modify the <code>pointer</code> to the original so that it cannot be used later.</span>
<span class="comment-copy">It's like reading a file. Once you reach the end, more reads won't get any more data unless you reset the file. Once the iterator returned by map() has reached the end of its data, more calls to it won't get anything. So after processing the iterator through list() in the print() statement, there's nothing more to read. So the OP needs to save the data for subsequent use or not read the data the first time until ready to use it.</span>
<span class="comment-copy">@TomBarron Your explanation makes me remember the <code>The practical Dev</code> page on Fb. <code>Explain it like I am 5</code>? :) . Thanks though. Thanks to @Joe Iddon too.</span>
<span class="comment-copy">this is great, thank you! Like you mentioned, the question has an answer now, but I learned something more from your input!</span>
<span class="comment-copy">@Code_Control_jxie0755 Feel free to up-vote!</span>
