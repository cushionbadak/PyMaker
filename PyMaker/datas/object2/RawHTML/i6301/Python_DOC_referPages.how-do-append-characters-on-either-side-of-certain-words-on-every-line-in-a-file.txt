<div class="post-text" itemprop="text">
<p>Say I have a file my_file, and I want to search for a certain word x on every line of the file, and if the word exists, attach my variable y to the left and right side of the word. Then I want replace the old line with the new, modified line in my_new_file. How do I do this? So far I have:</p>
<pre><code>output = open(omy_new_file, "w")

for line in open(my_file):

    if (" " + x + "") in line:
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('inputfile.txt', 'r') as infile:
    with open('outfile.txt', 'w') as outfile:
        for line in infile.readlines():
            outfile.write(line.replace('string', y + 'string' + y)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>y = "someword"
x = "target_string"
lines = [i.strip('\n') for i in open('filename.txt')]
final_lines = ["{}{}{}".format(y, i, y) if x in i else i for i in lines]
f = open(omy_new_file, "w")
for i in final_lines:
   f.write("{}\n".format(i))

f.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try This:</p>
<pre><code>with open("my_file", "r") as my_file:
    raw_data = my_file.read()

# READ YOUR FILE

new_data = raw_data.split("\n")

for line in new_data:

    if "sd" in line:

        my_new_line = "y" + line + "y"
        raw_data = raw_data.replace(line, my_new_line)


print(raw_data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's tough to replace a line in a file while reading it, for the same reason that it's tough to safely modify a list as you iterate over it.</p>
<p>It's much better to read through the file, collect a list of lines, then overwrite the original. If the file is <em>particularly</em> large (such that it would be infeasible to hold it all in memory at once), you can write to disk twice.</p>
<pre><code>import tempfile

y = "***"
your_word = "Whatever you're filtering by"

with tempfile.TemporaryFile(mode="w+") as tmpf:
    with open(my_file, 'r') as f:
        for line in f:
            if your_word in line:
                line = f"{y}{line.strip()}{y}\n"
            tmpf.write(line)  # write to the temp file

    tmpf.seek(0)  # move back to the beginning of the tempfile

    with open(my_file, 'w') as f:
        for line in tmpf:  # reading from tempfile now
            my_file.write(line)
</code></pre>
</div>
<span class="comment-copy">Just use str.find(...); <a href="https://docs.python.org/3/library/stdtypes.html?highlight=find#str.find" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html?highlight=find#str.find</a> . When in REPL (= interactive prompt), use dir() to examine objects; for example: dir(line) will show you all the methods that line (str object) uses. Also, what are you doing? Are you parsing or creating some HTML or XML by any chances? Asking, because there are libraries for that. Python means "batteries included"</span>
<span class="comment-copy">Let's say your word is 'bob', and <code>y = '$'</code>, should <code>bobcat</code> turn into <code>$bob$cat</code>?</span>
<span class="comment-copy">If my word is 'bob' and y = "$" then "The bobcat is owned by bob" should turn into "The bobcat is owned by $bob$".</span>
