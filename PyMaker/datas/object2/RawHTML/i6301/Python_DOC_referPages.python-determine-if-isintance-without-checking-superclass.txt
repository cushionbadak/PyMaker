<div class="post-text" itemprop="text">
<pre><code>class A:
   pass

class B(A):
   pass
</code></pre>
<p>How can I check that <code>var</code> is instance of <code>B</code>, not <code>A</code>, without referencing <code>A</code>. I have around 50 classes that subclass some class. I want to check whether instance is a child.
Something like <code>not isinstance(var, A)</code>.</p>
<p>Is there any way?</p>
</div>
<div class="post-text" itemprop="text">
<p>So I assume that <code>B</code> does something particular that <code>A</code> can't do. Ie it has a method that <code>A</code> doesn't. So one way to check that the instance is from <code>B</code> is to use the following. </p>
<pre><code>if hasattr(my_instance, 'method_name_particular_to_b'):
    # do this
</code></pre>
<p>This will check if that method exists on <code>my_instance</code> if it does. You can treat it as an instance from <code>B</code>, otherwise treat it as an instance from <code>A</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>It is really hard to use <code>isinstance</code> and judge whether a particular variable <code>var</code> is an instance of a subclass or superclass. What you can in fact do is specify a special property <code>__class__</code> which can tell you about the instance's class.</p>
<p>for example:</p>
<pre><code>class A:
    @property
    def __class__(self):
        return '__main__.A'

class B(A):
    @property
    def __class__(self):
        return '__main__.B'

b = B()
a = A()

print b.__class__
&gt; '__main__.B'

print a.__class__
&gt; '__main__.A'
</code></pre>
<p>If you however inherit <code>class A</code> with <code>object</code> you can check the behaviour without specifying these properties.</p>
<pre><code>class A(object):
    pass

class B(A):
    pass

b = B()
a = A()

print b.__class__
&gt; '__main__.B'

print a.__class__
&gt; '__main__.A'
</code></pre>
<p>PS: I referred <a href="https://stackoverflow.com/questions/16688655/check-if-a-object-is-a-instance-of-a-class-but-not-a-instance-of-its-subclass">this</a> SO question although it is in Java</p>
</div>
<div class="post-text" itemprop="text">
<p>Not elegant, but seems working: <code>not var.__class__.__name__=='A'</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can find the type of an instance using <code>__class__</code>.</p>
<p><code>var.__class__</code> will give you the specific type of the object.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>isinstance(object, classinfo)</code> checks if the object is an instance of (or subclass of) the class given as second parameter.</p>
<p><code>type(object)</code> returns the exact type of the object.</p>
<p>So you can check whether the object is an instance of a subclass of <code>A</code>, but not <code>A</code> itself, you can do something like the following.</p>
<pre><code>if isinstance(obj, A) and not type(obj) == A:
    print("is subclass of A")
else:
    print("is either A or completely unrelated")
</code></pre>
<p>For reference:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#isinstance</a></li>
<li><a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#type</a></li>
</ul>
</div>
<span class="comment-copy"><code>B</code> specifically, or any subclass of <code>A</code>? (If any subclass of <code>A</code>, why do you want to avoid referring to <code>A</code> explicitly?)</span>
<span class="comment-copy">Perhaps you could try look at the <code>var.__mro__</code></span>
<span class="comment-copy">Why without referencing <code>A</code>?</span>
<span class="comment-copy">Please clarify. To me it's not quite clear whether you want to check if it's an instance of <code>B</code> specifically, or of any class derived from <code>A</code> (but not <code>A</code> itself). What's the point of <i>"without referencing <code>A</code>"</i> ? Have you considered implementing <code>A</code> as an <i>abstract base class</i>?</span>
<span class="comment-copy">why not <code>type(x) is A</code>?</span>
<span class="comment-copy">@user2357112 That wont work. If <code>var = B()</code>, <code>not isinstance(var, A)</code> returns <code>False</code>.</span>
<span class="comment-copy">@pstatix: Bleh, right. Got mixed up there. Should be <code>var.__class__ is not A</code>, which is a solution the questioner probably wasn't aware of.</span>
<span class="comment-copy">Is <code>var.__class__</code> better than <code>type(var)</code>?</span>
<span class="comment-copy">@StefanPochmann: It handles old-style classes, which the questioner may be using.</span>
<span class="comment-copy">(<code>isinstance(var, A) and var.__class__ is not A</code> to check specifically for subclasses and reject superclasses and unrelated classes.)</span>
