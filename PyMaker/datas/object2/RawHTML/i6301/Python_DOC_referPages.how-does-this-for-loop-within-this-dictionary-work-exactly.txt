<div class="post-text" itemprop="text">
<p>Currently I'm learning Python text sentiment module via this online course and the lecturer failed to explain in enough detail how this piece of code works. I tried searching each piece of code individually to try piece together how he did it but it makes no sense to me.</p>
<ol>
<li><p>So how does this code work? Why is there a for loop within dictionary braces?</p></li>
<li><p>What is the logic behind <code>x</code> before the <code>for y in emotion_dict.values()</code> then <code>for x in y</code> at the end?</p></li>
<li><p>What is the purpose behind <code>emotion_dict=emotion_dict</code> within the parentheses? Wouldn't just <code>emotion_dict</code> do?</p>
<pre><code> def emotion_analyzer(text,emotion_dict=emotion_dict):
 #Set up the result dictionary
     emotions = {x for y in emotion_dict.values() for x in y}
     emotion_count = dict()
     for emotion in emotions:
         emotion_count[emotion] = 0

     #Analyze the text and normalize by total number of words
     total_words = len(text.split())
     for word in text.split():
          if emotion_dict.get(word):
               for emotion in emotion_dict.get(word):
                   emotion_count[emotion] += 1/len(text.split())
     return emotion_count
</code></pre></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<h1>1 and 2</h1>
<p>The line <code>emotions = {x for y in emotion_dict.values() for x in y}</code> uses a <em>set comprehension</em>. It builds a set, not a dictionary (though dictionary comprehensions also exist and look somewhat similar). It is shorthand notation for</p>
<pre><code>emotions = set()  # Empty set
# Loop over all values (not keys) in the pre-existing dictionary emotion_dict
for y in emotion_dict.values():
    # The values y are some kind of container.
    # Loop over each element in these containers.
    for x in y:
        # Add x to the set
        emotions.add(x)
</code></pre>
<p>The <code>x</code> right after the <code>{</code> in the original set comprehension signifies which value to store in the set. In all, <code>emotions</code> is just a set (with no repeats) of all elements within all containers within the dictionary <code>emotion_dict</code>. Try printing out <code>emotion_dict</code> and <code>emotion</code> and compare.</p>
<h1>3</h1>
<p>In the function definition,</p>
<pre><code>def emotion_analyzer(text, emotion_dict=emotion_dict):
</code></pre>
<p>the <code>emotion_dict=emotion_dict</code> means that the <em>local</em> variable with name <code>emotion_dict</code> gets set to the <em>global</em> variable similarly named <code>emotion_dict</code>, if you do not pass anything as the second argument. This is an example of a <a href="https://docs.python.org/3/tutorial/controlflow.html#default-argument-values" rel="noreferrer">default argument</a>.</p>
</div>
<span class="comment-copy">The <code>emotion_dict=emotion_dict</code> is giving the function a default-value, which will be used if no value is provided.</span>
<span class="comment-copy">Thanks for your response that makes sense now that I looked up set comprehension. Appreciate the clear break down of each part.</span>
