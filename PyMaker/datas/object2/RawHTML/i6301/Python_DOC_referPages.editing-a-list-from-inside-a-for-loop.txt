<div class="post-text" itemprop="text">
<p>Let's say I have a list, <code>mylist</code>, and I define it to be <code>[1, 2, 3, 4, 5]</code>. How is there a simple way to double every element of the list from within a <code>for</code> loop?</p>
<p>I know you could do something like:</p>
<pre><code>for i in range(len(mylist)):
    mylist[i] *= 2
</code></pre>
<p>I also know that you could make a list comprehension:</p>
<p><code>mylist = [2*i for i in range(1, 6)</code></p>
<p>But is there a way to do it like this?</p>
<pre><code>for num in mylist:
   #code goes here
</code></pre>
<p>I tried doing something like:</p>
<pre><code>for num in mylist:
    num *= 2
</code></pre>
<p>but <code>num</code> is a local variable, so this doesn't modify <code>mylist</code>, just <code>num</code>. Does anyone know a good way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The usual way to do this is with a list comprehension, iterating directly over the list items, not indirectly via an index.</p>
<pre><code>mylist = [1, 2, 3, 4, 5]
mylist = [2 * num for num in mylist]
print(mylist)
</code></pre>
<p><strong>output</strong></p>
<pre><code>[2, 4, 6, 8, 10]
</code></pre>
<p>That replaces <code>mylist</code> with a new list object. That's generally ok, but sometimes you want to modify the existing object, eg when other objects have a reference to <code>mylist</code>. You can do that with a slice assignment.</p>
<pre><code>mylist[:] = [2 * num for num in mylist]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's not really possible since you shouldn't try to change a list while looping through it in that way. I would stick with your other two ways of manipulating the list </p>
</div>
<div class="post-text" itemprop="text">
<p>Using an explicit <code>for</code> loop.  Use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> while iterating and assign a new value to each item.</p>
<pre><code>mylist = [1, 2, 3, 4, 5]
for i, n in enumerate(mylist):
    mylist[i] = n * 2
</code></pre>
<p>Just be careful - don't change the number of items in a list: <a href="https://stackoverflow.com/q/1207406/2823755">Remove items from a list while iterating</a></p>
</div>
<span class="comment-copy">You could just do <code>mylist[:] = [2*i for i in mylist]</code>... as well</span>
<span class="comment-copy">It's ok to mutate  a list you're iterating over, as long as you don't add or remove items. But even then, it's <i>possible</i> to alter the number of items in the list if you're careful not to upset the indices of the items you haven't visited yet. Thus you can safely remove items from a list if you iterate over it in reverse.</span>
