<div class="post-text" itemprop="text">
<p>Suppose I compile some python files (<code>.py</code> to <code>.pyc</code> / <code>.pyo</code>) containing code using modules like NumPy, SciPy, MatPlotLib. If I execute them on another configuration (i.e. the client), is it required that versions of modules are the same ? Or have I only to be in the range of compatible versions ?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>.pyc</code> and <code>.pyo</code> files are just cached bytecode. Python's import machinery is built entirely around strings, and this leaves code that executes an import decoupled from whatever library they import.</p>
<p>So those files are no more tied to the version of the libraries they import than the source code itself. If the source code works with a wide range of versions of the library, so will the compiled bytecode.</p>
<p>You can always take a look at what bytecode Python generates with the <a href="https://docs.python.org/3/library/dis.html" rel="nofollow noreferrer"><code>dis</code> module</a>. A straight-up <code>import</code> statement becomes:</p>
<pre><code>&gt;&gt;&gt; import dis
&gt;&gt;&gt; dis.dis(compile('import numpy as np', '', 'single'))
  1           0 LOAD_CONST               0 (0)
              2 LOAD_CONST               1 (None)
              4 IMPORT_NAME              0 (numpy)
              6 STORE_NAME               1 (np)
              8 LOAD_CONST               1 (None)
             10 RETURN_VALUE
</code></pre>
<p>The <a href="https://docs.python.org/3/library/dis.html#opcode-IMPORT_NAME" rel="nofollow noreferrer"><code>IMPORT_NAME</code> opcode</a> takes the name from the <code>co_names</code> structure that is attached to a code object (stored in the cache too):</p>
<pre><code>&gt;&gt;&gt; compile('import numpy as np', '', 'single').co_names
('numpy', 'np')
</code></pre>
<p>It doesn't matter here that the <code>numpy</code> module consists in large parts of dynamically-loaded libraries; if you replaced the <em>name</em> <code>numpy</code> with something else that would be imported instead. Modules are loaded at runtime, not at compile time after all.</p>
</div>
<div class="post-text" itemprop="text">
<p>Even as compiled bytecode, names in modules are still strings. As long as the interfaces of the modules are compatible the code will still work with different module versions.</p>
</div>
<span class="comment-copy">However, this doesn't extend to changing the version of the underlying Python runtime - not only is the Python version is embedded in the generated filename, but there's a version compatibility marker inside the file itself (Note: reworded because my original comment was based on misreading the question)</span>
<span class="comment-copy">Oops, never mind, I misread the question - I thought it also covered changing the Python version as well (which is the part that would trigger the need for recompilation)</span>
