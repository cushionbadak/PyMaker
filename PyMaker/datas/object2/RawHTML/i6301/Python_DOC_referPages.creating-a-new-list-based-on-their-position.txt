<div class="post-text" itemprop="text">
<p>So there is a list which contains</p>
<pre><code>'3,2,5,4,1','3,1,2,5,4','2,5,1,4,3'
</code></pre>
<p>These numbers are part of the same list, HOWEVER they are strings in a list(ie. list 1)</p>
<p>and from this, you say that for the "first row", 3 occurs at position 0, 2 occurs at position 1, 5 at 2 etc.
For the "second row", 3 occurs at position 0, 1 occurs at position 1, 2 occurs at position 2 etc.</p>
<p>I would like to create a loop or anything at all (besides using imported functions) to create a final list which looks like </p>
<pre><code>0: [3, 3, 2]
1: [2, 1, 5]
2: [5, 2, 1]
3: [4, 5, 4]
4: [1, 4, 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Transposition of a two-dimensional list can simply be done using <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a></p>
<pre><code>In [1]: l = [[3,2,5,4,1],
   ...:      [3,1,2,5,4],
   ...:      [2,5,1,4,3]]
In [2]: t = list(zip(*l))
In [3]: t
Out[3]: [(3, 3, 2), (2, 1, 5), (5, 2, 1), (4, 5, 4), (1, 4, 3)]
</code></pre>
<p>To output that in the format described above:</p>
<pre><code>In [4]: for n,line in enumerate(t):
   ...:     print("{}: {}".format(n, list(line)))
   ...:
0: [3, 3, 2]
1: [2, 1, 5]
2: [5, 2, 1]
3: [4, 5, 4]
4: [1, 4, 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Single line of code using <code>Dictionary comprehension</code> and <code>List comprehension</code> :</p>
<pre><code>&gt;&gt;&gt; { col:[row[col] for row in l] for col in range(len(l[0])) }
=&gt; {0: [3, 3, 2], 1: [2, 1, 5], 2: [5, 2, 1], 3: [4, 5, 4], 4: [1, 4, 3]}
</code></pre>
<p>#driver values :</p>
<pre><code>IN : l = [[3,2,5,4,1], 
          [3,1,2,5,4],
          [2,5,1,4,3]]
</code></pre>
<p><strong>NOTE to OP</strong> : what your <code>output</code> suggests is a <code>Dictionary</code> by looking at its structure. A <code>list</code> cannot be defined in the same manner.</p>
<p><strong>EDIT :</strong> Since the OP's <code>list</code> is a <code>list of strings</code>, first convert that to a <code>list of int</code> using <code>map</code> and then continue as above.</p>
<pre><code>&gt;&gt;&gt; l = ['3,2,5,4,1', '3,1,2,5,4', '2,5,1,4,3']

&gt;&gt;&gt; l = [list(map(int,s.split(','))) for s in l]

&gt;&gt;&gt; l
=&gt; [[3, 2, 5, 4, 1], [3, 1, 2, 5, 4], [2, 5, 1, 4, 3]]
</code></pre>
</div>
<span class="comment-copy">Thanks for your reply!!  There is an issue where the comma in between the numbers are considered a position. As such instead of wanting 5 positions, i will get 8 as the commas are included. Is there a way to fix this?</span>
<span class="comment-copy">@H.Y : From the looks of it, am guessing your <code>list</code> is actually a <code>list</code> of <code>string</code>. If that is the case, small modification will have to be made. So pls post the <code>exact list</code> you are using</span>
<span class="comment-copy">@H.Y , check the edit. Have listed how to work with <code>list of string</code> .</span>
