<div class="post-text" itemprop="text">
<p>When I execute python myscript.py -i -i myfile.txt
The output should be:</p>
<pre><code> info from file

 info from file
</code></pre>
<p>So everytime it comes across a flag a peice of code is executed even if it is outputting the same data.</p>
<p>At the moment it just prints:</p>
<p>info from file</p>
<pre><code>parser = argparse.ArgumentParser()
parser.add_argument('-i', help="info", action='store_true')
parser.add_argument('filename', nargs='+')
results = parser.parse_args()

if results.i:
    print("info from file")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I mean I guess you could do something like this (that's if I'm understanding your question correctly):</p>
<pre><code>import sys
import argparse


def parse_i(args, to_parse):
    times_counted = 0
    for arg in args:
        if arg == to_parse:
            times_counted += 1
    return times_counted

if __name__ == "__main__":

    parser = argparse.ArgumentParser()
    parser.add_argument('-i', help="info", action='store_true')
    parser.add_argument('filename', nargs='+')
    results = parser.parse_args()

    for _ in range(0, parse_i(sys.argv, "-i")):
        if results.i:
            print("info from file")
</code></pre>
<p>An example would be:</p>
<pre><code>root@baal-Aspire-5733Z:~/bin/python/zeus-scanner# python file.py file -i 
info from file
root@baal-Aspire-5733Z:~/bin/python/zeus-scanner# python file.py file -i -i
info from file
info from file
root@baal-Aspire-5733Z:~/bin/python/zeus-scanner# python file.py file -i -i -i
info from file
info from file
info from file
root@baal-Aspire-5733Z:~/bin/python/zeus-scanner# python file.py file -i -i -i -i
info from file
info from file
info from file
info from file
root@baal-Aspire-5733Z:~/bin/python/zeus-scanner# 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the 'count' action rather than 'store_true':</p>
<pre><code>In [373]: parser = argparse.ArgumentParser()
In [374]: parser.add_argument('filename', nargs='+');
In [375]: parser.add_argument('-i', action='count');
In [376]: args = parser.parse_args('-i -i myfile.txt'.split())

In [377]: print(args)
Namespace(filename=['myfile.txt'], i=2)

In [378]: for i in range(args.i): print(args.filename)
['myfile.txt']
['myfile.txt']
</code></pre>
<p>Without <code>-i</code>:</p>
<pre><code>In [379]: args = parser.parse_args('myfile.txt'.split())
In [380]: print(args)
Namespace(filename=['myfile.txt'], i=None)
</code></pre>
<p>With the default <code>None</code>, you'd need catch the <code>None</code> case with:</p>
<pre><code>if args.i:
    # do the rest
</code></pre>
<p>Setting the default to 0 would simplify that testing:</p>
<pre><code>parser.add_argument('-i', action='count', default=0); 
</code></pre>
</div>
<span class="comment-copy">'store_true' just sets  <code>results.i</code> once.  <code>action='count'</code> records the number of '-i'.  It is often used to set 'verbosity'.  <a href="https://docs.python.org/3/library/argparse.html#action" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html#action</a> has an example.</span>
<span class="comment-copy">If using <code>sys.argv</code> like this, just skip the use of <code>argparse</code>.  Get the file name directly from <code>sys.argv</code>.</span>
