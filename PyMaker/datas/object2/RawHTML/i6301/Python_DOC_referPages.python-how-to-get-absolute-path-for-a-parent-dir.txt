<div class="post-text" itemprop="text">
<p>I have a file at location <code>a/b/c/d/e/f/x.xml</code> . i need to find the absolute path of the the dir <code>d</code>, i.e a parent dir up the hierarchy that matches the dir name <code>d</code> . </p>
<p>I can obtain the filename's current dir as <code>os.path.abspath(__file__)</code> . i have see the documentation for <a href="https://docs.python.org/3/library/pathlib.html#module-pathlib" rel="nofollow noreferrer">pathlib</a> and <a href="https://docs.python.org/3/library/glob.html#glob.glob" rel="nofollow noreferrer">glob</a>, but am unable to figure out how would i use them.  </p>
<p>Can someone help</p>
<p>EDIT:</p>
<p>Thanks to all the answers below, I have gotten to a one liner</p>
<pre><code>os.path.join(*list(itertools.takewhile(lambda x: x != 'd', pathlib.PurePath(os.getcwd()).parts)))
</code></pre>
<p>I also need to append the actual dir name to it, i.e, the output should be <code>a/b/c/d</code> . An ugly solution is below (uses os.path.join twice). Can someone fix it (by adding an element to the iterator or to the list in one line :)</p>
<pre><code>os.path.join(os.path.join(*list(itertools.takewhile(lambda x: x != 'd', pathlib.PurePath(os.getcwd()).parts))),"d")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You use can use <code>dirname</code> on <code>abspath</code> of <code>__file__</code> to get the <strong>full path</strong> of the x.xml:</p>
<p><code>os.path.dirname(os.path.abspath(__file__))</code></p>
<pre><code>&gt;&gt;&gt; import pathlib
&gt;&gt;&gt; p = pathlib.PurePath('a/b/c/d/e/f/x.xml')
&gt;&gt;&gt; p.parts
('a', 'b', 'c', 'd', 'f', 'x.xml')
</code></pre>
<p>Then you can extract any part of your path. If you want to get the <code>d</code> folder:</p>
<pre><code>import itertools
res = '/'.join(itertools.takewhile(lambda x: x != 'd', p.parts))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>pathlib</code>'s <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.resolve" rel="nofollow noreferrer"><code>Path.resolve()</code></a> and <a href="https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.parents" rel="nofollow noreferrer"><code>Path.parents</code></a>:</p>
<pre><code>from pathlib import Path

path = Path("a/b/c/d/e/f/x.xml").resolve()

for parent in path.parents:
    if parent.name == "d":  # if the final component is "d", the dir is found
        print(parent)
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use regexp and cut:</p>
<pre><code>import re
import os
mydir_regexp = re.compile('dirname')
abs_path = os.path.abspath(__file__)
s = re.search(mydir_regexp, abs_path)

my_match = abs_path[:abs_path.index(s.group())+len(s.group())]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you have a file in your current dir, you can get it absolute path (starting at root) with <code>abspath</code>:</p>
<pre><code>path = os.path.abspath(filename)
</code></pre>
<p>Thes the magic word is <code>os.path.split</code> that splits a pathname into the last component and the head (everything in front of it). So to get the absolute path of what comes before <code>d</code> just iterate the components:</p>
<pre><code>def findinit(path, comp):
    while (len(path) &gt; 1):
        t = os.path.split(path)
        if t[1] == comp:
            return t[0]
        path = t[0]
    return None
</code></pre>
<p>You can control that <code>findinit('/a/b/c/d/e/f/x.xml')</code> gives as expected <code>/a/b/c</code></p>
<hr/>
<p>Alternatively if you want to use the <code>pathlib</code> module, you can search the <code>parts</code> for a specific component:</p>
<pre><code>def findinit(path, comp):
    p = pathlib.PurePath(path)
    i = p.parts.index(comp)
    if i != -1:
        return pathlib.PurePath(*p.parts[:i])
    return None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I found the one-liner finally:</p>
<pre><code>os.path.join(*list(itertools.takewhile(lambda x: x != 'd', pathlib.PurePath(os.getcwd()).parts)),"d")
</code></pre>
<p>wouldnt hve been possible without others answers though. thanks a lot.</p>
</div>
