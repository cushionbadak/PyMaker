<div class="post-text" itemprop="text">
<p>I am trying to implement a customized automata where the transition table looks like:</p>
<p><a href="https://i.stack.imgur.com/aUb9M.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/aUb9M.jpg"/></a></p>
<p>The table is dynamic i.e. the column heading, row name, and data at every cell can be determined at run time. The column name and row name are also necessary.</p>
<p>I tried this code </p>
<pre><code>table = []
table.append(["A",[0,["B",2],["C1",2]],[1,["C1",1]]])
table.append(["B",[0,["C",1]],[1,["C2",1]]])
table.append(["C",[0,["C1",1]],[1,["C2",1]]])
</code></pre>
<p>but I am unable to access the individual item in the cell i.e. B or 2 from B:2 etc. Then I tried</p>
<pre><code>row = ["A","B","C","C1","C2"]
col = [0,1]
table = [] 
table.append([[["B",2],["C1",2]],["C1",1]])
table.append([["C",1],["C2",1]])
table.append([["C1",1],["C2",1]])

print(table[0][0][0][0])
</code></pre>
<p>Now, I can access the individual item (B in the above case) but I am lost with the four subscript. Specially, when I do not know the depth of the list in advance. Need to get some help to do it in some easy way. Being a novice, I will appreciate some explanation to the pythonic code. </p>
<p><strong>Update:</strong> This is Non-deterministic Finite Automata. I tried the automaton package but they are not solving my problem. Following the solution of Tadhg-Mcdonald-Jensen, it give the correct out put for the first row (A) in the table but an error message for second row (B). Here is the code </p>
<pre><code>table = {}
table["A"] = {0: {"B":2, "C1":2}, 1: {"C1":1}}
table["B"] = {0: {"C":1},         1: {"C2",1}}
table["C"] = {0: {"C1":1},        1: {"C2",1}}

for key,value in table["A"][0].items():  \\ok treated as dictionary (1)
    print(key, value, sep="\t")        
for key,value in table["A"][1].items():  \\ok treated as dictionary (2)
    print(key, value, sep="\t")          
for key,value in table["B"][0].items():  \\ok treated as dictionary (3)
    print(key, value, sep="\t")          
for key,value in table["B"][1].items():  \\wrong: why treated as set? Although same as (2)
    print(key, value, sep="\t")          \\Error message: AttributeError: 'set' object has no attribute 'items' 
</code></pre>
<p>The output is </p>
<pre><code>B   2
C1  2 
C1  1
C   1
Traceback (most recent call last):
  File "C:/Users/Abrar/Google Drive/Tourism Project/Python Projects/nestedLists.py", line 17, in &lt;module&gt;
for key,value in table["B"][1].items():
AttributeError: 'set' object has no attribute 'items'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Pandas is great at doing tables but you could also move to dictionaries, either way, list is not the data structure you want. </p>
<pre><code>table = {}
table["A"] = {0: {"B":2, "C1":2}, 1: {"C1":1}}
table["B"] = {0: {"C":1},         1: {"C2":1}}
table["C"] = {0: {"C1":1},        1: {"C2":1}}
</code></pre>
<p>Then <code>table["A"][0]</code> will give you the first element, each element will have one or more entries, if you wanted to iterate over the entries you can do <code>for key,value in table["A"][0].items()</code></p>
<p>Or to iterate over the entire table you could use 3 nested for loops:</p>
<pre><code>#do_stuff = print
for row, line in table.items():
    #each row in the table, row will go through ("A", "B", "C")
    for column, cell in line.items():
        #each cell in the row, column will go through (0, 1)
        for label, value in cell.items(): 
            #each entry in cell, most only have one entry except table["A"][0]
            do_stuff(row, column, label, value)
</code></pre>
<p>To be honest I don't understand what the table represents so I can't give you specific advice but I think this would at least be a clearer data structure.</p>
</div>
<span class="comment-copy">I would suggest you to look into pandas (<a href="http://pandas.pydata.org/" rel="nofollow noreferrer">pandas.pydata.org</a>). It's built for specifically handling tabular data and you will be able to access elements very easily using index and column names.</span>
<span class="comment-copy">I tried but having same confusion of accessing the multilevel nested elements. I am giving it another try. Thanks</span>
<span class="comment-copy">PANDAS is perfectly happy to handle nested lists within a table.  You just have to make sure you feed it the proper diet of punctuation.</span>
<span class="comment-copy">The errors you show at the end of your code have to do with these entries: <code>{"C2",1}</code>. You want <code>{"C2": 1}</code> (with a colon instead of a comma).</span>
<span class="comment-copy"><b>THANK YOU so much</b></span>
<span class="comment-copy">You have a typo on both of the <code>C2</code> entries. You need colons instead of commas: <code>{"C2": 1}</code>. With a comma you get a set instead of a dictionary.</span>
<span class="comment-copy">Thank you so much Blcknght. I am novice.</span>
<span class="comment-copy">@Abrar next time an answer gives you issues please comment on the answer, that way I'd get a notification that you asked a clarifying question and can respond with help. :)</span>
<span class="comment-copy">@TadhgMcDonald-Jensen Thank you so much for updated answer. You saved my days by giving the iterative solution. Can you tell me that how can I update the table if I want want to find and key in the table and increment its associated values. Like for B, i need to increment :2 to 3 and if the key in not present in the table I will add {'New':1} to corresponding key. Is it okay to ask it here or I need to ask another question? Thanks for your guidance.</span>
<span class="comment-copy">@Abrar to add entries to a cell look at <a href="https://stackoverflow.com/questions/473099/check-if-a-given-key-already-exists-in-a-dictionary-and-increment-it">this question</a>.  And know that <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> works like <code>defaultdict(int)</code>.  So you'd have something like <code>table['A'] = {0:Counter(B=2, C1=2), 1:Counter(C1=1)}</code>.  If that question doesn't solve your issue then you would post a new question. :)</span>
