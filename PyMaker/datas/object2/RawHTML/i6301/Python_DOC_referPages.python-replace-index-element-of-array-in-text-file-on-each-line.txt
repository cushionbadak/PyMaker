<div class="post-text" itemprop="text">
<p>I have a text file that looks similar to: </p>
<pre><code>20, 32, 28, 32

27, 38, 30, 30

82, 39, 28, 18

29, 38, 10, 20

90, 28, 29, 09
</code></pre>
<p>If the value in the first column is &gt; 50 then the remaining data is replaced with 0. </p>
<p>So it should look like this: </p>
<pre><code>20, 32, 28, 32

27, 38, 30, 30

82, 0, 0, 0

29, 38, 10, 20

90, 0, 0, 0
</code></pre>
<p>I am really stuck on how to go about this. I have searched this site, but only find examples with one list e.g. <code>a=[20,32,28,32]</code>. but I have 5 different rows (is each row a separate list?)</p>
<p>Any help would her very much welcomed. </p>
</div>
<div class="post-text" itemprop="text">
<p>Just use <a href="https://docs.python.org/3/reference/compound_stmts.html#for" rel="nofollow noreferrer">for</a> loop and do for each row what you'd do for one row.</p>
<p>Here's an example:</p>
<pre><code>with open("example_file", "r") as f:
    for line in f.readlines():
        # do what you'd do with one line
        new_line = [int(l) for l in line.split(',')]
        if new_line[0] &gt; 50:
            new_line[1:] = [0]*(len(new_line)-1)
        # process the line further ... save it to another file?
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you have found for a single list can also be used as multiple lists. Let's have a <code>data.txt</code> which contains out data like below:</p>
<p><code>data.txt</code></p>
<pre><code>20, 32, 28, 32

27, 38, 30, 30

82, 39, 28, 18

29, 38, 10, 20

90, 28, 29, 09
</code></pre>
<p>Now we are going to read the data and process those as required. Finally we will write the processed data in a new file called <code>output_data.txt</code>. The program can be solved in the following way:</p>
<pre><code>output_lines = []
with open("data.txt", "r") as input_file:
    input_lines = input_file.readlines()
    for line in input_lines:
        line = line.strip()
        if line!="":
            ar = list(map(int, line.split(",")))
            if ar[0] &gt; 50:
                ar[1:] = [0] * (len(ar)-1)
            output_lines.append(", ".join([str(i) for i in ar]))
with open("output_data.txt", "w") as output_file:
    for line in output_lines:
        output_file.write(line+"\n")
</code></pre>
<p><code>output_data.txt</code> contains:</p>
<pre><code>20, 32, 28, 32
27, 38, 30, 30
82, 0, 0, 0
29, 38, 10, 20
90, 0, 0, 0
</code></pre>
<p>There are many alternatives to solve this. I have showed the most trivial one.</p>
</div>
<div class="post-text" itemprop="text">
<p>try this. COde need to be changed if number of columns changes</p>
<pre><code>fle =open("C:\Python27\projects\infile.txt")
lst=fle.readlines()
lst=[i.strip() for i in lst]

for i in lst:
        j=i.split(',')
        if int(j[0]) &gt; 50:

                for k in range(1,len(j)):
                    j[k]=0

        print ','.join(str(l) for l in j)
fle.close()
</code></pre>
</div>
<span class="comment-copy">Doing this with pure python is going to be painstaking. Do you have numpy or pandas?</span>
<span class="comment-copy">should the result be written to the new file?</span>
<span class="comment-copy">II have never come across numpy before. No the result does not have to be written to the new file as I will be doing additional calculations once the '0' have been added.</span>
<span class="comment-copy">You are amazing! That is just what I wanted. Thank you so much.</span>
<span class="comment-copy">Are you seriously going to sit and individually set each element to 0? what if you have 10,000 columns? Will you repeat this 10,000 times?</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ: edited code</span>
