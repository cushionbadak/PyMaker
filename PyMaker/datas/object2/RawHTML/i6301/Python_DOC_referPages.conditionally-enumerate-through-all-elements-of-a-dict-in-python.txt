<div class="post-text" itemprop="text">
<p>I have a dict as such:</p>
<pre><code>config = {
          'CONF_A': ['a1', 'a2', 'a3'],
          'CONF_B': ['b1', 'b2'],
          'CONF_C': {
                     'CONF_C1': ['c1'],
                     'CONF_C2': ['c21','c22']
                    }
          }
</code></pre>
<p>I need to enumerate through all values of CONF_A and CONF_B, firstly using all the values in CONF_C1, and then all the values in CONF_C2. e.g:</p>
<pre><code>('a1', 'b1', 'c1')
('a1', 'b2', 'c1')
('a2', 'b1', 'c1')
('a2', 'b2', 'c1')
('a3', 'b1', 'c1')
('a3', 'b2', 'c1')
.... same for 'c21'
.... same for 'c22'
</code></pre>
<p>I also need to have the key for each of these too. I can get this for a config consisting of just CONF_A and CONF_B (see below), but I'm not sure how to also enumerate each of the CONF_C elements.</p>
<pre><code>&gt;&gt;&gt; for x in itertools.product(*conf.itervalues()):
        for k, v in itertools.izip(conf,x):
            print k,v
...        
    CONF_A a1
    CONF_B b1
    CONF_A a1
    CONF_B b2
    CONF_A a2
    CONF_B b1
    CONF_A a2
    CONF_B b2
    CONF_A a3
    CONF_B b1
    CONF_A a3
    CONF_B b2
</code></pre>
<p>N.B. The keys for CONF_C elements should be the 'CONF_C1' and 'CONF_C2'</p>
<p>---- edit ----</p>
<p>@Patrick.Haugh provided this answer for the first part of the question:</p>
<pre><code> for x in product(config['CONF_A'], config['CONF_B'], chain.from_iterable(config['CONF_C'].values())):
</code></pre>
<p>This works for getting the cartesian product, however I still need to get the keys back in. When I do the following:</p>
<pre><code>for k, v in itertools.izip(config, x):
</code></pre>
<p>I get the keys CONF_A, CONF_B, and CONF_C. However the values are in reverse order, e.g.</p>
<pre><code>{'CONF_A': c1, 'CONF_B': b1, 'CONF_C': 'a1'}
</code></pre>
<p>Additionally, I'm trying to figure out how to ensure that the keys for C match up with the CONF_C values, i.e.</p>
<pre><code>{'CONF_A': a1, 'CONF_B': b1, 'CONF_C1': 'c1'}
{'CONF_A': a1, 'CONF_B': b1, 'CONF_C2': 'c21'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a> with <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain</code></a></p>
<pre><code>from itertools import product, chain

list(product(config['CONF_A'], config['CONF_B'], chain.from_iterable(config['CONF_C'].values())))
</code></pre>
<p>gives us</p>
<pre><code>[('a1', 'b1', 'c1'), ('a1', 'b1', 'c21'), ('a1', 'b1', 'c22'), ('a1', 'b2', 'c1'), 
 ('a1', 'b2', 'c21'), ('a1', 'b2', 'c22'), ('a2', 'b1', 'c1'), ('a2', 'b1', 'c21'), 
 ('a2', 'b1', 'c22'), ('a2', 'b2', 'c1'), ('a2', 'b2', 'c21'), ('a2', 'b2', 'c22'), 
 ('a3', 'b1', 'c1'), ('a3', 'b1', 'c21'), ('a3', 'b1', 'c22'), ('a3', 'b2', 'c1'), 
 ('a3', 'b2', 'c21'), ('a3', 'b2', 'c22')]
</code></pre>
<p>Edit: </p>
<pre><code>a_gen = (('CONF_A', a) for a in config['CONF_A'])
b_gen = (('CONF_B', b) for b in config['CONF_B'])
c_gen = ((k, e) for k, v in config['CONF_C'].items() for e in v)
for i in product(a_gen, b_gen, c_gen):
    print(i)
</code></pre>
<p>gives us </p>
<pre><code>(('CONF_A', 'a1'), ('CONF_B', 'b1'), ('CONF_C1', 'c1'))
(('CONF_A', 'a1'), ('CONF_B', 'b1'), ('CONF_C2', 'c21'))
(('CONF_A', 'a1'), ('CONF_B', 'b1'), ('CONF_C2', 'c22'))
(('CONF_A', 'a1'), ('CONF_B', 'b2'), ('CONF_C1', 'c1'))
(('CONF_A', 'a1'), ('CONF_B', 'b2'), ('CONF_C2', 'c21'))
(('CONF_A', 'a1'), ('CONF_B', 'b2'), ('CONF_C2', 'c22'))
(('CONF_A', 'a2'), ('CONF_B', 'b1'), ('CONF_C1', 'c1'))
(('CONF_A', 'a2'), ('CONF_B', 'b1'), ('CONF_C2', 'c21'))
(('CONF_A', 'a2'), ('CONF_B', 'b1'), ('CONF_C2', 'c22'))
(('CONF_A', 'a2'), ('CONF_B', 'b2'), ('CONF_C1', 'c1'))
(('CONF_A', 'a2'), ('CONF_B', 'b2'), ('CONF_C2', 'c21'))
(('CONF_A', 'a2'), ('CONF_B', 'b2'), ('CONF_C2', 'c22'))
(('CONF_A', 'a3'), ('CONF_B', 'b1'), ('CONF_C1', 'c1'))
(('CONF_A', 'a3'), ('CONF_B', 'b1'), ('CONF_C2', 'c21'))
(('CONF_A', 'a3'), ('CONF_B', 'b1'), ('CONF_C2', 'c22'))
(('CONF_A', 'a3'), ('CONF_B', 'b2'), ('CONF_C1', 'c1'))
(('CONF_A', 'a3'), ('CONF_B', 'b2'), ('CONF_C2', 'c21'))
(('CONF_A', 'a3'), ('CONF_B', 'b2'), ('CONF_C2', 'c22'))
</code></pre>
</div>
<span class="comment-copy">Thanks for the answer.  It works for all enumerations, however I was also looking to get the keys back in - see <i>edit</i> for details.</span>
<span class="comment-copy">@Michael see my edit</span>
