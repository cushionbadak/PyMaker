<div class="post-text" itemprop="text">
<p>I've written some code using python to scrape some titles and price from a webpage and write the results in a csv file. The script is running awesome. As I'm appending data to a csv file the script is writing headers in such a way that if it runs 4 loops then the headers will be written 4 times. How to fix it so that the headers will be written once. Thanks.</p>
<p>This is the script:</p>
<pre><code>import csv
import requests
from bs4 import BeautifulSoup

diction_page = ['http://www.bloomberg.com/quote/SPX:IND','http://www.bloomberg.com/quote/CCMP:IND']

for link in diction_page:
    res = requests.get(link).text
    soup = BeautifulSoup(res,'lxml')
    title = soup.select_one('.name').text.strip()
    price = soup.select_one('.price').text
    print(title,price)
    with open('item.csv','a',newline='') as outfile:
        writer = csv.writer(outfile)
        writer.writerow(["Title","Price"])
        writer.writerow([title, price])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As an option you can try this:</p>
<pre><code>import csv
import requests
from bs4 import BeautifulSoup

diction_page = ['http://www.bloomberg.com/quote/SPX:IND','http://www.bloomberg.com/quote/CCMP:IND']

for i,link in enumerate(diction_page):
    res = requests.get(link).text
    soup = BeautifulSoup(res,'lxml')
    title = soup.select_one('.name').text.strip()
    price = soup.select_one('.price').text
    print(title,price)
    with open('item.csv','a',newline='') as outfile:
        writer = csv.writer(outfile)
        if (i == 0):
            writer.writerow(["Title","Price"])
        writer.writerow([title, price])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Don't write the headers in the for loop:</p>
<pre><code>import csv
import requests
from bs4 import BeautifulSoup

diction_page = ['http://www.bloomberg.com/quote/SPX:IND','http://www.bloomberg.com/quote/CCMP:IND']

outfile = open('item.csv','w',newline='')
writer = csv.writer(outfile)
writer.writerow(["Title","Price"])

for link in diction_page:
    res = requests.get(link).text
    soup = BeautifulSoup(res,'lxml')
    title = soup.select_one('.name').text.strip()
    price = soup.select_one('.price').text
    print(title,price)
    writer.writerow([title, price])
outfile.close()
</code></pre>
</div>
<span class="comment-copy">Would it be a problem to move <code>writer.writerow(["Title","Price"])</code> outside of the loop? You could either keep one file context for the entire loop or write the headers, close the file and continue to the loop</span>
<span class="comment-copy">Thanks Fidan, for this great workaround. I was expecting something like this. Thanks a lot.</span>
<span class="comment-copy">One more things to know : What to do when there is a range to deal with in a for loop as in <code>for i,year in enumerate(range(1947,1950),1):</code>. I tried it but it doesn't work in this case. Did I do it accordingly? Thanks.</span>
<span class="comment-copy">Second arg in <b>enumerate</b> function used for start num <b>i</b>. Check this out <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a>. Do you really wanted to start <b>i</b> from 1, not from zero?</span>
<span class="comment-copy">@ Fidan, Thanks god, you responded. I know nothing of enumerate. I tried few different ways but found wrong results. Just give me an idea how to write there the header which won't be repeated. Please care to check out this link <a href="https://www.dropbox.com/s/7u039c75lytouwk/for%20Fidan.txt?dl=0" rel="nofollow noreferrer">dropbox.com/s/7u039c75lytouwk/for%20Fidan.txt?dl=0</a>  Thanks again.</span>
<span class="comment-copy">I think @Ken Wei's corrected answer will be much better and correct for you.  Just keep file open, write header and then at loops write your data.</span>
<span class="comment-copy">why not leaving the file open instead of appending in the loop?</span>
<span class="comment-copy">@ Ken Wei, I used your suggested method earlier and in this case <code>with open('item.csv','a',newline='') as outfile:         writer = csv.writer(outfile)</code> is completely redundant. Thanks anyway.</span>
