<div class="post-text" itemprop="text">
<p>How do I make two while loops run at the same time? Here is my code design.</p>
<pre><code>while True:
    print(recieve_message()) #this waits for the message
    send_message(input()) #this also waits for the input
</code></pre>
<p>This will not work, because both codes do not run without waiting. So, I wanted them to run on separate loops, like this:</p>
<pre><code>while True:
    print(recieve_message())
while True:
    send_message(input())
</code></pre>
<p>how do I make these codes run simultaneously? </p>
<pre><code>recieve_message
</code></pre>
<p>and </p>
<pre><code>send_message
</code></pre>
<p>uses the socket module.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use multithreading:</p>
<pre><code>import threading


def f1():
    while True:
        print(recieve_message()) #this waits for the message


def f2():
    while True:
        send_message(input()) #this also waits for the input

threading.Thread(target=f1).start()
threading.Thread(target=f2).start()
</code></pre>
</div>
<span class="comment-copy">you need to elaborate on question more.There is only one while loop in your pseudocode.</span>
<span class="comment-copy">I meant originally that both codes will not run simultaneously, so it should be run on separate loops, but thanks!</span>
<span class="comment-copy">One way to do this is through the <a href="https://docs.python.org/3/library/signal.html" rel="nofollow noreferrer"><code>signal</code></a> module</span>
<span class="comment-copy">process from multiprocessing does a similar thing too. The differences - <a href="https://stackoverflow.com/questions/3044580/multiprocessing-vs-threading-python" title="multiprocessing vs threading python">stackoverflow.com/questions/3044580/â€¦</a></span>
<span class="comment-copy">This doesn't really work, since the computer waits for the input, then prints the output. Try it. EDIT: I found out it works in the cmd. Thanks!</span>
<span class="comment-copy">@HyunsooKim Since this works, would you mind accepting it?</span>
<span class="comment-copy">Yes, of course. Thanks for your help!</span>
