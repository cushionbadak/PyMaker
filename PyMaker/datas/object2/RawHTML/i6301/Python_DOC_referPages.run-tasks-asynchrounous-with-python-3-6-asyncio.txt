<div class="post-text" itemprop="text">
<p>I started working on a new Python 3.6 project that communicates with AWS Boto. Since spinning up EC2 instances takes some time, I started working with the <code>asyncio</code> library, I am having some troubles however understanding it.</p>
<p>I want to asynchronously spin up 2 EC2 instances. However, if I call <code>run_tests</code> I get the following error:</p>
<blockquote>
<p>ERROR:asyncio:Task was destroyed but it is pending!</p>
</blockquote>
<p>This is currently my code: </p>
<pre><code>from manager import Manager
import asyncio


async def run_new_vm(manager, loop, vm_name):
    new_instance = manager.launch_ec2_instance(vm_name)
    task = loop.create_task(new_instance)
    task.add_done_callback(lambda f: do_something(manager, f.result()))


def do_something(manager, instance):
    // Do stuff once the instance is usable


async def one_service_per_vm(n, manager, loop):
    for x in range (0, n):
        print('Started with number %s.' % x)
        loop.create_task(run_new_vm(manager, loop, n))


def run_tests():
    loop = asyncio.get_event_loop()
    m = Manager()
    loop.run_until_complete(one_service_per_vm(2, m, loop))
    loop.close()
</code></pre>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're using <code>create_task</code> to schedule jobs on the loop, but nothing waits for them to complete. The <code>one_service_per_vm</code> will return immediately.</p>
<p>You can <code>await</code> for many tasks with <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.gather" rel="nofollow noreferrer"><code>asyncio.gather</code></a></p>
<pre><code># ...

async def one_service_per_vm(n, manager, loop):
    tasks = [run_new_vm(manager, loop, n) for x in range (0, n)]
    await asyncio.gather(*tasks, loop=loop)


def run_tests():
    loop = asyncio.get_event_loop()
    m = Manager()
    loop.run_until_complete(one_service_per_vm(2, m, loop))
    loop.close()
</code></pre>
</div>
