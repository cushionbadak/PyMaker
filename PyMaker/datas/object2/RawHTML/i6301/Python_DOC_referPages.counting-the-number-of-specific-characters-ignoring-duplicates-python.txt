<div class="post-text" itemprop="text">
<p>I have an input like this: BFFBFBFFFBFBBBFBBBBFF .
I want to count 'B's and the answer should be 6.(ignore the duplicate ones)</p>
<p>How to do it in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> :</p>
<pre><code>&gt;&gt;&gt; from itertools import groupby
&gt;&gt;&gt; l = [k for k,v in groupby(s)]

&gt;&gt;&gt; l
=&gt; ['B', 'F', 'B', 'F', 'B', 'F', 'B', 'F', 'B', 'F', 'B', 'F']

&gt;&gt;&gt; l.count('B')
=&gt; 6
</code></pre>
<p>#driver values :</p>
<pre><code>IN : s = 'BFFBFBFFFBFBBBFBBBBFF
</code></pre>
<p><strong>EDIT :</strong> Also, for more extensive use, its better to use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> to get <code>count</code> <em>for all the characters</em>.</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; Counter(l)
=&gt; Counter({'B': 6, 'F': 6})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>s = "BFFBFBFFFBFBBBFBBBBFF"
f = False
count = 0
for i in s:
    if f and i == 'B':
        continue
    elif i == 'B':
        count += 1
        f = True
    else:
        f = False
print(count)
</code></pre>
<p>another</p>
<pre><code>from itertools import groupby
count = 0
for i,_ in groupby(s):
    if i == 'B':
        count += 1
print(count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should set a counter and a flag variable. Then count only occurences which are not duplicates, and flip the flag. The logic is simple: if current letter is 'B', and you the letter before isn't 'B' (dup = False), then count it + flip the boolean:</p>
<pre><code>s = 'BFFBFBFFFBFBBBFBBBBFF'

count = 0
dup = False
for l in s:
    if l == 'B' and not dup:
        count += 1
        dup = True
    elif l != 'B':
        dup = False

# count: 6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>We can remove consecutive dups and use <a href="https://docs.python.org/3.1/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> to count the B's that are left:</p>
<pre><code>from collections import Counter

def remove_conseq_dups(s):
    res = ""
    for i in range(len(s)-1):
        if s[i] != s[i+1]:
            res+= s[i]
    return res

s = "BFFBFBFFFBFBBBFBBBBFF"
print(Counter(remove_conseq_dups(s))['B']) # 6
</code></pre>
<p>And a <a href="https://docs.python.org/2/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>groupby</code></a> solution:</p>
<pre><code>from itertools import groupby

s = "BFFBFBFFFBFBBBFBBBBFF"
print(sum(map(lambda x: 1 if x == 'B' else 0, [x for x, v in groupby(s)])))
</code></pre>
<p>Or</p>
<pre><code>print(len(list(filter(lambda x: x == 'B', [x for x, v in groupby(s)]))))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another solution by first removing duplicates using RE-library:</p>
<pre><code>import re

l1 = "BFFBFBFFFBFBBBFBBBBFF"
l2 = re.sub(r'([A-z])\1+', r'\1', l1) # Remove duplicates

l2.count("B") # 6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want to count when the letters change from F to B, and another function can do that : <code>split</code>. It removes all Fs, but create empty strings for consecutive Fs, so we must remove them from the count.</p>
<pre><code>s = "BFFBFBFFFBFBBBFBBBBFF"                                                                                                                                                             
t = s.split('F')                                                                                                                                                                        
n = sum([1 for b in t if len(b) &gt; 0])                                                                                                                                                   
print(n)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Alternative solution:</p>
<pre><code>s = 'BFFBFBFFFBFBBBFBBBBFF'
l = [c for i,c in enumerate(s) if s[i-1] != c]
l.count('B') #or use counter
&gt;&gt;&gt;6
</code></pre>
</div>
<span class="comment-copy">Reader note: If you want counts for every character, use a counter object and count all characters once, instead of calling <code>list.count</code> repeatedly.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ , good point. Will mention that. Thanks.</span>
<span class="comment-copy">Yup, I did see that (and +1), just before closing it ;-)</span>
