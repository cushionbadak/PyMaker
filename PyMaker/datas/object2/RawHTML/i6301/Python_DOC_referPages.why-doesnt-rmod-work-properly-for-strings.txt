<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/40402235/is-it-possible-to-overwrite-strs-behaviour-using-rmod">Is it possible to overwrite str's % behaviour using __rmod__?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<pre><code>&gt;&gt;&gt; class MyInt(int):
...     def __rmod__(self, other):
...         return 42
...     
&gt;&gt;&gt; class MyStr(str):
...     def __rmod__(self, other):
...         return 'wat'
...     
&gt;&gt;&gt; 0 % MyInt()
42
&gt;&gt;&gt; '%r' % MyStr()
"''"
</code></pre>
<p>Why is the <code>int</code> subclass able to control this BinOp from the reflected side, but <code>str</code> can not?  This seems to contradict the documented <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">datamodel</a>.  </p>
<p>I was hoping to use the feature to create a non-intrusive and backwards-compatible extension providing curly-braces-style handlers/formatters for the <code>logging</code> framework, but this stopped me in my tracks.  Is that a bug?  </p>
<p><strong>Python 3.6.0 on Linux</strong>. Using <code>collections.UserString</code> as a base class also has the issue. Using <code>bytes</code> as a base does not.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is <a href="https://bugs.python.org/issue28598" rel="nofollow noreferrer">Python issue 28598</a>. The <a href="https://github.com/python/cpython/blob/v3.6.0/Python/ceval.c#L1412-L1414" rel="nofollow noreferrer">fast path</a> for <code>%</code> string formatting in the bytecode evaluation loop wasn't checking for string subclasses. It's <a href="https://github.com/python/cpython/blob/v3.6.3/Python/ceval.c#L1459-L1462" rel="nofollow noreferrer">fixed now</a>, so update your Python to v3.6.1+.</p>
</div>
<span class="comment-copy"><a href="https://bugs.python.org/issue28598" rel="nofollow noreferrer">This</a> seems relevant.</span>
<span class="comment-copy">I backported the fix to 2.7 and 3.5 as well; it's part of 2.7.14 and 3.5.4.</span>
