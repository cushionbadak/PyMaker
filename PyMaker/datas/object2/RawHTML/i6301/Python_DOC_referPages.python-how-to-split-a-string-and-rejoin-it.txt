<div class="post-text" itemprop="text">
<p>I am doing a cryptography assignment in python and I need to:
- split a string
- replace the letters
- rejoin it so that it is one word. </p>
<p>This is the full code but I am stuck on the for loop under <code>def encode(plain)</code>.</p>
<pre><code>""" crypto.py
Implements a simple substitution cypher
"""

alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
key =   "XPMGTDHLYONZBWEARKJUFSCIQV"

def menu():

    print("Secret decoder menu")
    print("0) Quit")
    print("1) Encode")
    print("2) Decode")
    print("What do you want to do?")
    response = input()
    return response

def encode(plain):

for i in range(len(plain)):

    plain = plain.upper()
    x = plain[i:i+1]
    y = alpha.index(x)
    z = key[y:y+1]
    plain[x] = z

return plain

def main():

keepGoing = True
  while keepGoing:

    response = menu()

    if response == "1":

        plain = input("text to be encoded: ")
        print(encode(plain))

    elif response == "2":
       coded = input("code to be decyphered: ")
       print (decode(coded))

    elif response == "0":
       print ("Thanks for doing secret spy stuff with me.")
       keepGoing = False

    else:
       print ("I don't know what you want to do...")

return main

main()
menu()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The simplest way to implement this substitution is to use dictionary and list comprehension:</p>
<pre><code>alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
key = "XPMGTDHLYONZBWEARKJUFSCIQV"
converter = {a:b for a, b in zip(alpha, key)}
def encode(s):
   return ''.join(converter[i] for i in s)

def decode(s):
   reverse = {b:a for a, b in converter.items()}
   return ''.join(reverse[i] for i in s)

def main():
   response = input("Enter 1 to decode, 2 to encode: ")
   if response == "1":
      the_string = input("Enter the scrambled string: ")
      print("The result is ", decode(the_string))
   elif response == "2":
       the_string = input("Enter the plain string: ")
       print("The result is ", encode(the_string))
main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are trying to implement your own solution do as @Ajax1234 say.</p>
<p>But is more easy with <a href="https://www.tutorialspoint.com/python/string_translate.htm" rel="nofollow noreferrer">string translate</a></p>
<pre><code>alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
key =   "XPMGTDHLYONZBWEARKJUFSCIQV"
crypto = maketrans(alpha, key)

....
the_string = input("Enter the scrambled string: ")
the_string = the_string.upper()
encrypted = the_string.translate(crypto)
</code></pre>
</div>
<span class="comment-copy">Sample input and expected output would be nice.</span>
<span class="comment-copy">you need to indent the code under your function definitions</span>
<span class="comment-copy">Secret decoder menu 0) Quit 1) Encode 2) Decode What do you want to do? 1 text to be encoded: hello L T Z Z E HELLO</span>
<span class="comment-copy">this is what happens when I print out z, I want it to come out as one word though</span>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate</code></a> with <a href="https://docs.python.org/3/library/stdtypes.html#str.maketrans" rel="nofollow noreferrer"><code>str.maketrans</code></a></span>
<span class="comment-copy">In your code, <code>reverse</code> ends up the same as <code>converter</code>. I would use <code>converter=dict(zip(alpha,key))</code> and <code>reverse=dict(zip(key,alpha))</code> (or <code>reverse={b:a for a, b in converter.items()}</code>).</span>
<span class="comment-copy">@MatthiasFripp thank you for pointing that out. Please see my recent edit.</span>
<span class="comment-copy">my professor told us to only use standard code so we can't use the translate() method. We also can't change the main() function so we basically have to convert the secret messages using string manipulation. Under def encode(plain) I already sliced the string "plain" and compared the characters to the strings "alpha" and "key" but I don't know how to combine them into a word again</span>
