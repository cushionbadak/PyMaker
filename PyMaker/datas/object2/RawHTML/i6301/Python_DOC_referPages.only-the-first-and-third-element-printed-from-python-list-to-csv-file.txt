<div class="post-text" itemprop="text">
<p>I am trying write a list to a csv file.
I face several problems.</p>
<ol>
<li>writer = csv.writer(f) AttributeError: 'list' object has no attribute 'writer'</li>
</ol>
<p>I used this <a href="https://stackoverflow.com/questions/5618878/how-to-convert-list-to-string">link</a> to solve it and it worked, and only printed the second for without writing the first and third for. </p>
<p>this is the code writen by <a href="https://stackoverflow.com/users/7181046/gumboy">@gumboy</a> </p>
<pre><code>csv = [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'], ['2', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0'], ['3', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0']]

csvdict = {words[0]:words[1:] for words in csv}
for x in csvdict.keys(): # iterate over the keys '1', '2', ....
    products = [index+1 for index,v in enumerate(csvdict[x]) if v == '1' ] # create list of purchases where the '1's are indexed

    print ("costummer", x, "buy", products)
</code></pre>
<p>The idea is to replace list that contains 1 with the list index. This problem is solved already. When I used the link above to solve the first problem, the code ran but did not write into the csv file.
I tried to combine the solution from the first problem with @gumboy code and here is the code:</p>
<pre><code>csvdict = {words[0]:words[1:] for words in csv}
for x in csvdict.keys(): # iterate over the keys '1', '2', ....
    products = [index+1 for index,v in enumerate(csvdict[x]) if v == '1' ] # create list of purchases where the '1's are indexed

    #print (products)
    f = open("H.csv", 'w')
    hasil = ("costummer", x, "buy", products)
    hasilstr = (','.join([str(x) for x in hasil]))
    print (hasilstr)
    f.write(hasilstr)
</code></pre>
<p>Like I mentioned above, the code is working but only printed second for without print the first and third element.</p>
<p><strong>print function vs what is written on csv file:</strong> 
print :</p>
<pre><code>costummer,1,buy,[12, 22] 
costummer,2,buy,[8, 12, 38, 46]
costummer,3,buy,[4, 34, 43]
</code></pre>
<p>csf file : </p>
<pre><code>costummer,2,buy,[8, 12, 38, 46]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you are doing with the <code>f = open('H.csv','w')</code> is that it is write to the file but also writing over your data. What you need to do is use <code>f =open('H.csv', 'a+')</code> this appends new string everytime to the file.<a href="https://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">link</a>
To sort data use</p>
<pre><code>for x in sorted(csvdict.keys()):
</code></pre>
<p>With this code I was able to write to file what was printed on console.</p>
<pre><code>csvfile = [['1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'], ['2', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0'], ['3', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0', '0', '1', '0', '0', '0', '0', '0', '0', '0']]
csvdict = {words[0]:words[1:] for words in csvfile}
for x in sorted(csvdict.keys()): # iterate over the keys '1', '2', ....
    products = [index+1 for index,v in enumerate(csvdict[x]) if v == '1' ] # create list of purchases where the '1's are indexed

    #print (products)
    f = open("H.csv", 'a+')
    hasil = ("costummer", x, "buy", products)
    hasilstr = ("costummer, %s,buy,"+','.join([str(i) for i in products])) %(x)
    print (hasilstr)
    f.write(hasilstr +"\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you open the file again for each iteration of the for loop (open it just once) and then overwrite it because you pass <code>'w'</code> as the 'mode' argument (if you just want to append something to the file you can pass 'a').</p>
<p>What you should actually do is, import the <code>csv</code> module, open the file with a <code>with</code> statement, create a writer <code>writer = csv.writer(csv_file)</code>, write the header and then the rows in the for loop. (Also, rename the <code>csv</code> list, because <code>csv</code> is the name of the module.)</p>
<pre><code>import csv


lst = [...]  # Your csv list.
csvdict = {words[0]:words[1:] for words in lst}

with open('temp.csv', 'w', newline='') as csv_file:
    writer = csv.writer(csv_file, delimiter=';')
    writer.writerow(('costumer', 'buy'))  # Write the header.
    for costumer in csvdict:
        products = [index for index, v in enumerate(csvdict[costumer], 1) if v == '1']
        writer.writerow((costumer, products))
</code></pre>
<p>The resulting csv file will look like this (the first column contains the costumers and the second the products):</p>
<pre><code>costumer;buy
3;[4, 34, 43]
2;[8, 12, 38, 46]
1;[12, 22]
</code></pre>
</div>
<span class="comment-copy">yeah that's interesting, i did't notice is because they print second element and not the third element. so by converting the list into str is the right move sir ? the other things is  why it won't print the last (third for) element ?</span>
<span class="comment-copy">What is your desire csv output?</span>
<span class="comment-copy">CMIIW, they will write what they print right ? i mean i just wanna clarified what am i doing above is not abused the  looping logic. since print and write hasilstr, they should write what it print right ? i this case they print : costummer,1,buy,[12, 22],  costummer,2,buy,[8, 12, 38, 46],  costummer,3,buy,[4, 34, 43], but they only printed costumer 1 and 2.</span>
<span class="comment-copy">Did that help you?</span>
<span class="comment-copy">Just edited answer, let me know if it as desired?</span>
<span class="comment-copy">thank you sir, I am just curious can we remome the " " ?  i try to remove the list braked and the "" so far i used your code like this =         products1 = " ,".join(str(x) for x in products)         writer.writerow((costumer, products1)) and it remove the list braked but still have know idea how to remove the ""</span>
<span class="comment-copy">The csv writer had to add the quotes because commas were used as the delimiters and because a list also uses commas to separate the items. You can prevent this by passing a different delimiter like semicolon. I've edited the example.</span>
<span class="comment-copy">muchas gracias sir.</span>
<span class="comment-copy">You're welcome. Also, it seems that storing your data in a <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json</a> file could be a better alternative.</span>
<span class="comment-copy">thank you sir, next time i will try to used json file instead.</span>
