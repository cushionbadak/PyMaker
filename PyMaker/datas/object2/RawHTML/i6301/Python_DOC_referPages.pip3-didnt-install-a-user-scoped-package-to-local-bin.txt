<div class="post-text" itemprop="text">
<p>I recently installed <code>pipenv</code> using the following command: <code>pip3 install --user pipenv</code>. (It's also worth mentioning that I'm following Python's official guide <a href="http://docs.python-guide.org/en/latest/dev/virtualenvs/" rel="nofollow noreferrer">here</a>.) Most online resources seem to indicate that the default installation directory for user-scoped packages is at <code>~/.local/bin</code>. However, it would seem that my installation of <code>pipenv</code> resides in <code>~/Library/Python/3.6/bin</code>. I'm concerned that keeping the installation in a version specific directory (i.e. Python 3.6) could lead to problems down the road. What happened? Should I be worried?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is entirely correct behaviour, and not something that you need to worry about.</p>
<p>Python packages with native compiled extensions are tied to the specific Python version into which it is installed and should not be shared. Because you can't detect a-priori what package will contain native extensions, <strong>all</strong> Python packages are installed in a version-specific location.</p>
<p>The <code>--user</code> switch installs in the <a href="https://pip.pypa.io/en/stable/user_guide/#user-installs" rel="nofollow noreferrer"><em>User Scheme</em> location</a>:</p>
<blockquote>
<p>With Python 2.6 came the <a href="http://docs.python.org/install/index.html#alternate-installation-the-user-scheme" rel="nofollow noreferrer">"user scheme" for installation</a>, which means that all Python distributions support an alternative install location that is specific to a user. The default location for each OS is explained in the python documentation for the <a href="https://docs.python.org/3/library/site.html#site.USER_BASE" rel="nofollow noreferrer"><code>site.USER_BASE</code></a> variable. This mode of installation can be turned on by specifying the <a href="https://pip.pypa.io/en/stable/reference/pip_install/#install-user" rel="nofollow noreferrer"><code>--user</code></a> option to <code>pip install</code>.</p>
</blockquote>
<p>You can always list your <code>USER_BASE</code> location by running:</p>
<pre><code>python3 -m site
</code></pre>
<p>(using the same Python binary as tied to your <code>pip</code> command).</p>
<p>The Python module search path automatically includes the user location, and because that location is Python version (major.minor) specific, won't interfere with other Python versions.</p>
<p><code>~/Library/Python/3.6/</code> is the <em>Mac OS X</em> specific path used when you have a <a href="https://stackoverflow.com/questions/1444543/differences-between-framework-and-non-framework-builds-of-python-on-mac-os-x">framework build</a>. You can override the path by setting the <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONUSERBASE" rel="nofollow noreferrer"><code>PYTHONUSERBASE</code> environment variable</a>.</p>
</div>
<span class="comment-copy">So what does <code>python3 -m site</code> say the <code>USER_SITE</code> location is?</span>
<span class="comment-copy">And keeping things installed <i>per Python version</i> is absolutely the right choice to make.</span>
<span class="comment-copy">@GhostlyMartijn <code>python3 -m site</code> is what originally led me to <code>~/Library/Python/3.6/bin</code>. It returns <code>~/Library/Python/3.6/bin</code>.</span>
