<div class="post-text" itemprop="text">
<p>How can I make this program more efficient?</p>
<pre><code>    tempPossiblePairs = defaultdict(lambda: set([]))

    for w1 in words:
        for w2 in words:
            if(w1 != w2):
                tempPossiblePairs[w1].add(w2)

    for w1 in words:
        for w2 in words:

            if(w1 != w2 and (w2 in tempPossiblePairs[w1])):
                res.append((self.getPMI(w1, w2), self.pair(w1, w2)[0], self.pair(w1, w2)[1]))
</code></pre>
<p>I wrote a program that generates (given a list 'words') a dictionary that takes a word as a key and words that can be paired with the key as values. Then I look through the words list again and see if they are not equal and they can be pair-able (by checking the tempPossiblePairs dict).</p>
<p>I know this code is messay and inefficient, but I would like to hear some tips to make this more efficient.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you can boil this down to </p>
<pre><code>from itertools import product

res = [(self.getPMI(w1, w2), *self.pair(w1, w2)) for w1, w2 in product(words, repeat=2) if w1 != w2]
</code></pre>
<p>The <code>*self.pair</code> bit is unpacking the result of <code>pair</code> into the tuple (This is assuming <code>pair</code> returns something with only two elelments), and I think it requires you to have a relatively recent version of Python 3</p>
</div>
<span class="comment-copy">I don't see the need for <code>tempPossiblePairs</code></span>
<span class="comment-copy">Then how would I efficiently check if the w2 is a value of the key w1?</span>
<span class="comment-copy">I got halfway through my answer before realizing that it's identical to yours.</span>
<span class="comment-copy">this itertools a standard python package?</span>
<span class="comment-copy">@Dawn17 yup.  You can read more about <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code> here</a></span>
<span class="comment-copy">@Dawn17 if you don't want reflections (That is, both <code>(A, B)</code> and <code>(B, A)</code>), <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>itertools.combinations</code></a> is probably faster</span>
