<div class="post-text" itemprop="text">
<p>Currently, a Python beginner looking for some help. I'm reading from a text file with 365 lines of integers. Each integer is representative of a day of the year. Like this, but for 365 lines:</p>
<pre><code>1102
9236
10643
2376
6815
10394
3055
3750
4181
5452
10745
</code></pre>
<p>I need to go through the whole file and separate the 365 days into each of the 12 months and take the average of the numbers of each month. For instance, the first 31 lines are January, take the average, print it, then continue from there...</p>
<p>At this point I have written code that goes through the whole file and gives a total for the year and an average per day, but am stuck on splitting the file into the separate months and taking individual averages. What do I do to achieve this?</p>
<p>Here's my current code:</p>
<pre><code>import math

def stepCounter ():
    stepsFile = open("steps.txt", "r")
    stepsFile.readline()

    count = 0
    for line in stepsFile:
        steps = int(line)
        count = count + steps
        avg = count / 365
    print(count, "steps taken this year!")
    print("That's about", round(avg), "steps each day!")

  stepsFile.close()

stepCounter()
</code></pre>
<p>I hope this question was clear enough. Thanks for any help!</p>
</div>
<div class="post-text" itemprop="text">
<p>You'll have to have the number of days per month. Either use a fixed table, or you could ask the <a href="https://docs.python.org/3/library/calendar.html" rel="nofollow noreferrer"><code>calendar</code></a> module:</p>
<pre><code>In [11]: months = [calendar.monthrange(2017, m)[1] for m in range(1, 13)]

In [12]: months
Out[12]: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
</code></pre>
<p>In case you decide to use a fixed table the only month of interest is February during leap years. You could just increment that if <a href="https://docs.python.org/3/library/calendar.html#calendar.isleap" rel="nofollow noreferrer"><code>calendar.isleap()</code></a> is True.</p>
<p>Given an open file of integer per row you could simply <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer">slice</a> it suitably, map <code>int()</code> over the slices, and use <a href="https://docs.python.org/3/library/statistics.html#statistics.mean" rel="nofollow noreferrer"><code>statistics.mean()</code></a>:</p>
<pre><code>In [17]: from statistics import mean

In [18]: from itertools import islice

In [19]: [mean(map(int, islice(the_file, mdays))) for mdays in months]
Out[19]: [15, 44.5, 74, 104.5, 135, 165.5, 196, 227, 257.5, 288, 318.5, 349]
</code></pre>
<p>where <code>the_file</code> was simply</p>
<pre><code>In [13]: from io import StringIO

In [14]: the_file = StringIO()

In [15]: the_file.writelines(map('{}\n'.format, range(365)))

In [16]: the_file.seek(0)
Out[16]: 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, you need a list with the quantity of days in each month:</p>
<pre><code>month_len = [31, 28, 31,
             30, 31, 30,
             31, 31, 30,
             31, 30, 31]
</code></pre>
<p>Now write a loop to step through the months, with another inside to step through the days:</p>
<pre><code>for month_num in range(12):
    # Start a new month

    for day_num in range(month_len[month_num]):
        #Process one day
</code></pre>
<p>Do remember that Python indexing starts at 0, so you'll have month_num running 0-11, and day_num running 0-30 at most.</p>
<p>Can you take it from there?</p>
<hr/>
<p><strong>RESPONSE TO OP'S COMMENT</strong></p>
<p>Okay, you're handicapped: lists are disallowed.  Instead, try this:</p>
<pre><code>for month_num in range(1, 12):
    month_len = 31
    if month_num = 2:
        month_len = 28
    elif month_num = 4 or
         month_num = 6 or
         month_num = 9 or
         month_num = 11:
        month_len = 30

    for day_num in range(month_len):
</code></pre>
</div>
<span class="comment-copy">Since it is ordered and you know how many days each month has, maybe count the lines you have read to know in which month you are? First 31 are january etc.</span>
<span class="comment-copy">As embarrassing as this is, we haven't even covered lists yet. Is there a way to do it by declaring months as constants?</span>
<span class="comment-copy">Then how do you iterate through those constants?  In this case, I suggest some ugly <code>if</code> statements.  See edited answer.</span>
