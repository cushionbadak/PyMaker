<div class="post-text" itemprop="text">
<p>I am trying very hard to write a function that will duplicate the first string in a list into 6 places and duplicate the ones that occur at even indices into two places,if it occurs at an index that is a multiple of three, duplicate three times. However, if it occurs at both an even index and at an index that is a multiple of three, it should duplicate it into six places. Here is the code i have written but it seems not to be solving it dynamically as soon as i change input and target more cases i get this error :</p>
<pre><code>IndexError: list index out of range


def multiply_strings(test):
    test[0] *= 6
    test[2] *= 2
    test[3] *= 3
    test[4] *= 2
    test[6] *= 6
    test[8] *= 8

    return test
test_list = ["A", "B", "C", "D", "E", "F", "G"]
print(multiply_strings(test_list))
</code></pre>
<p>this prints</p>
<pre><code>IndexError: list index out of range
</code></pre>
<p>This is not the desired output.</p>
<p>am expecting it to print </p>
<pre><code>['AAAAAA', 'B', 'CC', 'DDD', 'EE', 'F', 'GGGGGG']
</code></pre>
<p>But am expected to take care of other cases like </p>
<pre><code>["A", "B", "C", "D", "E", "F", "G", "H", "I"]
</code></pre>
<p>this will print.</p>
<pre><code>['AAAAAA', 'B', 'CC', 'DDD', 'EE', 'F', 'GGGGGG', 'H', 'II']
</code></pre>
<p>There are also other edge cases similar to this one i already posted.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just some oneliners...</p>
<pre><code>&gt;&gt;&gt; a = ["A", "B", "C", "D", "E", "F", "G"]

&gt;&gt;&gt; [(6, 1, 2, 3, 2, 1)[i % 6] * s for i, s in enumerate(a)]
['AAAAAA', 'B', 'CC', 'DDD', 'EE', 'F', 'GGGGGG']

&gt;&gt;&gt; [(1 if i % 2 else 2) * (1 if i % 3 else 3) * s for i, s in enumerate(a)]
['AAAAAA', 'B', 'CC', 'DDD', 'EE', 'F', 'GGGGGG']

&gt;&gt;&gt; [(bool(i % 2) or 2) * (bool(i % 3) or 3) * s for i, s in enumerate(a)]
['AAAAAA', 'B', 'CC', 'DDD', 'EE', 'F', 'GGGGGG']
</code></pre>
<p>Rather annoying that the first one is the shortest. I like the others better. I found <code>(2 - i % 2)</code> for factor 2 but nothing that short for factor 3...</p>
<p>Edit: Another short one:</p>
<pre><code>&gt;&gt;&gt; [(min(i % 6, -i % 6) or 6) * s for i, s in enumerate(a)]
['AAAAAA', 'B', 'CC', 'DDD', 'EE', 'F', 'GGGGGG']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> function to iterate over the index/value pairs of the list. Then just apply your logic to update the values in-place, e.g.:</p>
<pre><code>def multiply_strings(strings):
    for i, s in enumerate(strings):
        k = 1
        if i % 2 == 0:
            k *= 2
        if i % 3 == 0:
            k *= 3
        strings[i] = s*k

strings =  ["A", "B", "C", "D", "E", "F", "G"]    
multiply_strings(strings)
print(strings)  # ['AAAAAA', 'B', 'CC', 'DDD', 'EE', 'F', 'GGGGGG']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The solution below is very similar to the above poster, but with a test for length of the list in the beginning and slight difference in the looped conditional. Either work for what you're trying to do.</p>
<pre><code>def multiply_strings(test):
    if len(test) &gt; 0:
        test[0] *= 6
        for i in range(1, len(test)):
            k = 1
            if i % 2 == 0:
                k *= 2
            if i % 3 == 0:
                k *= 3
            test[i] *= k
    return test

&gt;&gt;&gt;test_list = ["A", "B", "C", "D", "E", "F", "G", "H", "I"]
&gt;&gt;&gt;print(multiply_strings(test_list))
['AAAAAA', 'B', 'CC', 'DDD', 'EE', 'F', 'GGGGGG', 'H', 'II']
</code></pre>
</div>
<span class="comment-copy">how can that generate an error? which error? there are more than 7 items in both lists, it <i>has</i> to work</span>
<span class="comment-copy">Why are you trying to multiply test[8] by 8 instead of by 2?</span>
<span class="comment-copy">And do you really need to modify the given list in-place <i>and</i> return it? That's rather unusual.</span>
<span class="comment-copy"><code>test_list = ["A", "B", "C", "D", "E", "F", "G"]</code> can be simplified to <code>test_list = list("ABCDEFG")</code></span>
