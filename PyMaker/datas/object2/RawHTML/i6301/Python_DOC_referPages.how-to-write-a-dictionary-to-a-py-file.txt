<div class="post-text" itemprop="text">
<p>I have a dictionary in "albums_data.py" and "album.py" as main program.
I need to update the <code>add_one()</code> function in main program to write the actual state of dictionary in to "albums_data.py" and save it after some data is added to dictionary (using the <code>add_one()</code> function).</p>
<p>Here is the source code:</p>
<p>albums_data.py</p>
<pre><code>albums= {}
albums["Adele"]="21"
albums["Michael Jackson"]="Thriler"
albums["Lady Gaga"]="The Fame"
</code></pre>
<p>album.py</p>
<pre><code>import tkinter
from albums_data import *

root=tkinter.Tk()
root.title("DICT example")

#Functions
def show_all():
    #clear the listbox
    lb_music.delete(0,"end")
    #iterate throught the keys and add to the listbox
    for artist in albums:
        lb_music.insert("end",artist)

def show_one():
    artist=lb_music.get("active")    #active is clicked field
    album=albums[artist]
    msg=artist+" - "+album
    lbl_output["text"]=msg  #Ready is replaced with msg

def add_one():
    info=txt_input.get()
    split_info=info.split(",") #list is created after is separated with ","
    artist=split_info[0]
    album=split_info[1]
    albums[artist]=album
    show_all()
    txt_input.delete(0,"end")

    #write to .py file (not worked to txt also) -&gt;permission denied
    f = open("albums_data.py","w")
    f.write( str(albums) )
    f.close()


#GUI
lbl_output=tkinter.Label(root,text="Ready")
lbl_output.pack()

txt_input=tkinter.Entry(root)
txt_input.pack()

lb_music=tkinter.Listbox(root)
lb_music.pack()

btn_show_all=tkinter.Button(root,text="Show all",command=show_all)
btn_show_all.pack()

btn_show_one=tkinter.Button(root,text="Show one",command=show_one)
btn_show_one.pack()

btn_add_one=tkinter.Button(root,text="Add one",command=add_one)
btn_add_one.pack()


root.mainloop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://www.json.org/" rel="nofollow noreferrer">JSON</a>.</p>
<pre><code>import json

d = { "hello": "world" }

with open('state.json', 'w') as f:
    json.dump(d, f)

with open('state.json', 'r') as f:
    d2 = json.load(f)

assert d == d2
</code></pre>
</div>
<span class="comment-copy">You need to ask a clear question.</span>
<span class="comment-copy">This is a very bad idea. Use <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">JSON</a> instead.</span>
<span class="comment-copy">Why are you using the string methods rather than plain <code>dump</code> and <code>load</code>?</span>
<span class="comment-copy">@Novel Because I forgot about them. :)</span>
<span class="comment-copy">Thanks for suggestion. I try to investigate...it is all new to me :)</span>
