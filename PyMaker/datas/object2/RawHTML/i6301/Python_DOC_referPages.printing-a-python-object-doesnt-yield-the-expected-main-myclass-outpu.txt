<div class="post-text" itemprop="text">
<p>When I create a Class like this</p>
<pre><code>class Node(object):
    def __init__(self):
        pass

node = Node()
print node
</code></pre>
<p>prints <code>&lt;__main__.Task object at 0x7fc9be21cd0&gt;</code>.
However, I was using a library and wanted to print an object, which yielded the following:</p>
<pre><code>foo.node(path="/test/1/2", value='Text')
</code></pre>
<p>how is this being constructed? value doesn't seem to be member variable or anything accessible? I was expecting something like <code>&lt;__main__.foo object at ...</code></p>
</div>
<div class="post-text" itemprop="text">
<p>It's generated by the <a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow noreferrer"><code>__repr__()</code></a> method. And like all other normal methods, the instance it's being run on is passed as the first argument.</p>
</div>
<div class="post-text" itemprop="text">
<p>As I was expecting a more explanatory answer, I found the answer in the Book "Fluent Python"  Basically the author of the library implemented the <code>__repr__</code></p>
<pre><code>class Node:
    def __init__(self, path=0, value=0):
        self.path = path
        self.value = value

    def __repr__(self):
        return "foo.node(path="{0}", value='{1}')".format(self.path, self.value)
</code></pre>
<blockquote>
<p>The <strong>repr</strong> special method is called by the repr built-in to get string representation
  of the object for inspection. If we did not implement <strong>repr</strong>, vector instances would
  be shown in the console like <code>&lt;Vector object at 0x10e100070&gt;</code></p>
</blockquote>
</div>
<span class="comment-copy">I'm intimidated by your points...so slowly asking...possible to generate a minimal example? never used <code>__repr__()</code> before</span>
