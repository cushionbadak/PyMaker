<div class="post-text" itemprop="text">
<p>I found a bug in my code tonight where I had written:</p>
<pre><code>item["error"]: "message"
</code></pre>
<p>instead of:</p>
<pre><code>item["error"] = "message"
</code></pre>
<p>What I can't figure out is why the original line did not cause a syntax error.  What is going on there?  This is not inside a dict declaration; this is just a regular standalone line of code.</p>
</div>
<div class="post-text" itemprop="text">
<p>You've accidentally <a href="https://docs.python.org/3/whatsnew/3.6.html#pep-526-syntax-for-variable-annotations" rel="nofollow noreferrer">annotated</a> <code>item["error"]</code> with the value <code>"message"</code>.  (What that actually means is up to whatever code processes the annotations, which by default is nothing.)  Variable annotations are a new feature in Python 3.6.</p>
</div>
<span class="comment-copy">I was unaware of PEP526 and I think it is a terrible decision to use such similar syntax.</span>
<span class="comment-copy">I tried <code>pylint</code> on such line of code. Hoped to get some kind of <code>pointless-statement</code> warning, but no, <code>pylint</code> does not see any problem. Well, it isn't pointless statement indeed, because it creates new annotation. But without errors and without warnings it is a "gotcha".</span>
<span class="comment-copy">I 've now thought about this a bit and think it would have made far more sense to use <code>@</code> as the annotation operator. <code>item["error"]  @ "message</code>.  This would be similar to <code>@property</code>  and java annotations.  It is also visually a great distance from <code>=</code> which <code>:</code> is not.  Especially given that <code>:</code> assumes the role of <code>=</code> within the construction of a <code>dict</code>.</span>
