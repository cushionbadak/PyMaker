<div class="post-text" itemprop="text">
<p>I need to read the header of a bmp file with python. I tried like this but it obviously returns just a bunch of non intelligible bytes:</p>
<pre><code>f = open(input_filename,"rb")
data = bytearray(f.read())
f.close()
print(data[:14])
</code></pre>
<p>My idea was to find a module, or something fast, in order to log image info while opening it. I know about this function in matlab that does exactly what i want: <code>imfinfo()</code>. But I can't find a counterpart in python.</p>
<p>To be clear, this is what I get with matlab:</p>
<pre><code>       FileModDate: '20-Oct-2017 09:42:24'
          FileSize: 1311798
            Format: 'bmp'
     FormatVersion: 'Version 3 (Microsoft Windows 3.x)'
             Width: 1280
            Height: 1024
          BitDepth: 8
         ColorType: 'indexed'
   FormatSignature: 'BM'
NumColormapEntries: 256
          Colormap: [256x3 double]
           RedMask: []
         GreenMask: []
          BlueMask: []
   ImageDataOffset: 1078
  BitmapHeaderSize: 40
         NumPlanes: 1
   CompressionType: 'none'
        BitmapSize: 1310720
    HorzResolution: 0
    VertResolution: 0
     NumColorsUsed: 256
NumImportantColors: 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/imghdr.html#module-imghdr" rel="nofollow noreferrer">imghdr module</a> (which is in the python stdlib):</p>
<pre><code>&gt;&gt;&gt; import imghdr
&gt;&gt;&gt; print(imghdr.what(input_filename))
bmp
</code></pre>
<p>This will extract the image type from the header, but that is all. There is nothing else in the Python standard library that can get more detailed information - you need a third-party library to do such a specialized task. To get an idea of the complexity of this, take at look at <a href="https://en.wikipedia.org/wiki/BMP_file_format#Bitmap_file_header" rel="nofollow noreferrer">BMP file format</a>. Based on the specification outlined there, it might be feasible to write some pure Python code to extract a few items of information, but it won't be easy to get it right for an arbitrary bitmap image file.</p>
<p><strong>UPDATE</strong>:</p>
<p>Below is a simple script to extract some basic information from a bitmap header using the <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">struct module</a>. See the BMP file format mentioned above for how to interpret the various values, and note that this script will only work with the most common version of the format (i.e. Windows BITMAPINFOHEADER):</p>
<pre><code>import struct

bmp = open(fn, 'rb')
print('Type:', bmp.read(2).decode())
print('Size: %s' % struct.unpack('I', bmp.read(4)))
print('Reserved 1: %s' % struct.unpack('H', bmp.read(2)))
print('Reserved 2: %s' % struct.unpack('H', bmp.read(2)))
print('Offset: %s' % struct.unpack('I', bmp.read(4)))

print('DIB Header Size: %s' % struct.unpack('I', bmp.read(4)))
print('Width: %s' % struct.unpack('I', bmp.read(4)))
print('Height: %s' % struct.unpack('I', bmp.read(4)))
print('Colour Planes: %s' % struct.unpack('H', bmp.read(2)))
print('Bits per Pixel: %s' % struct.unpack('H', bmp.read(2)))
print('Compression Method: %s' % struct.unpack('I', bmp.read(4)))
print('Raw Image Size: %s' % struct.unpack('I', bmp.read(4)))
print('Horizontal Resolution: %s' % struct.unpack('I', bmp.read(4)))
print('Vertical Resolution: %s' % struct.unpack('I', bmp.read(4)))
print('Number of Colours: %s' % struct.unpack('I', bmp.read(4)))
print('Important Colours: %s' % struct.unpack('I', bmp.read(4)))
</code></pre>
<p>output:</p>
<pre class="lang-none prettyprint-override"><code>Type: BM
Size: 287518
Reserved 1: 0
Reserved 2: 0
Offset: 1078
DIB Header Size: 40
Width: 657
Height: 434
Colour Planes: 1
Bits per Pixel: 8
Compression Method: 0
Raw Image Size: 286440
Horizontal Resolution: 11811
Vertical Resolution: 11811
Number of Colours: 256
Important Colours: 0        
</code></pre>
</div>
<span class="comment-copy">Did you try <code>PIL</code>'s <code>Image.info</code>? <a href="http://effbot.org/imagingbook/image.htm#tag-Image.Image.info" rel="nofollow noreferrer">effbot.org/imagingbook/image.htm#tag-Image.Image.info</a></span>
<span class="comment-copy">with PIL this is what I get <code>{'dpi': (0, 0), 'compression': 0}</code></span>
<span class="comment-copy">I think that you should look at the <code>struct</code> module. <a href="https://docs.python.org/3/library/struct.html#module-struct" rel="nofollow noreferrer">docs.python.org/3/library/struct.html#module-struct</a></span>
<span class="comment-copy">This just returns the image extension. I'm looking for the file header</span>
<span class="comment-copy">@RobiNoob. It's not just returning the extension, it's determining the type of the image from the header. But anyway, what specific information do you actually <b>need</b>?</span>
<span class="comment-copy">I just updated the OP</span>
<span class="comment-copy">@RobiNoob. Yes, I know - but what specific information do you really, actually <b>need</b>? If you want what matlab gives you, then just use that. If you want something quicker, you might have to settle for less.</span>
<span class="comment-copy">I'm translating a script from matlab to python so I cannot use matlab ahah. Anyway I would like to retrieve the information I cannot access just loading the image. For example I can do img.shape or img.size to get information about the pixels but I don't know how to get the format version for example</span>
