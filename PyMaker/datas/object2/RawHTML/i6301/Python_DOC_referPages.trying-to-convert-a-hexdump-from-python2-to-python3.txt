<div class="post-text" itemprop="text">
<p>So I've been learning Python3 for the last month or so. I'm going through "Black Hat Python" by Justin Seitz right now, but all of the code is in Python2. Most of the code so far was easy to convert to Python3, but I ran across a hexdump function in a tcp_proxy program that has me stumped. Below is the Python2 code from the book.</p>
<pre><code>def hexdump(src, length=16):
    result = []
    digits = 4 if isinstance(src, unicode) else 2

    for i in xrange(0, len(src), length):
        s = src[i:i+length]
        hexa = b' '.join(["%0*X" % (digits, ord(x)) for x in s])
        text = b''.join([x if 0x20 &lt;= ord(x) &lt; 0x7F else b'.' for x in s])
        result.append(b"%04X %-*s %s" % (i, length*(digits + 1), hexa, text))

    print b'\n'.join(result)
</code></pre>
<p>I have a few questions that I haven't been able to find online. Why would digits need to be unpacked if it's a single int? Would the equivalent of <code>"%0*X" % (digits, ord(x))</code> be <code>"{0:X}".format(*digits, ord(x))</code>? Why are there two arguments for this? I noticed that there was an additional argument in <code>result.append()</code> as well. Any help would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>This worked for me. Changed the xrange to range, isinstance isn't really necessary but 2to3 suggested it. Removed byte strings.</p>
<pre><code>def hexdump(src, length=16):
  result = []
  digits = 4 if isinstance(src, str) else 2
  for i in range(0, len(src), length):
   s = src[i:i+length]
   hexa = " ".join(map("{0:0&gt;2X}".format,src))
   text = "".join([chr(x) if 0x20 &lt;= x &lt; 0x7F else "." for x in s])
   result.append("%04X   %-*s   %s" % (i, length*(digits + 1), hexa, text) )
  return "\n".join(result)
</code></pre>
</div>
<span class="comment-copy">You can use the <code>%</code>-formatting in Python 3 as well. See docs at <a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting" rel="nofollow noreferrer">docs.python.org/3/library/…</a> . Your main problem is mixing up <code>bytes</code> literals (starting with <code>b'</code>) with strings (without b).</span>
<span class="comment-copy">In the interests of a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> what is the value of src? I get a NameError on 'unicode'. Also, if you're running this in python3, you need parentheses for the print function. This link might be relevant: <a href="https://stackoverflow.com/questions/19877306/nameerror-global-name-unicode-is-not-defined-in-python-3" title="nameerror global name unicode is not defined in python 3">stackoverflow.com/questions/19877306/…</a></span>
<span class="comment-copy">In Python 3 by default all strings <i>are</i> Unicode (UTF-8), so the <code>digits = 4 if isinstance(src, unicode) else 2</code> becomes meaningless (even if it "worked"). Unicode glyphs can require different numbers of bytes to represent, depending on what the exact Unicode encoding is being used is.</span>
<span class="comment-copy">This <a href="https://stackoverflow.com/a/14067233/355230">answer</a> to another question might help (although it's written for Python 2).</span>
<span class="comment-copy">Src is the data that was received from the remote socket object. The hexdump function is supposed to output the packet details with both the hexadecimal values and ASCII-printable characters. So if the digits variable isn't required, does that mean I don't have to use the asterisk in the string formatters?</span>
