<div class="post-text" itemprop="text">
<p>I've got a data set for which I am trying to extract gene names, however they have a numeric value infront of them (their ID) also in the row which I need to remove:</p>
<pre><code>data = pd.read_csv("genes_person1.csv")
</code></pre>
<p>I read in my data which has this input:</p>
<pre><code>Column 1
153 ADRB1
3486 IGFBP3
9531 BAG3
9612 NCOR2
</code></pre>
<p>I have been trying to get this output:</p>
<pre><code>ADRB1
IGFBP3
BAG3
NCOR2
</code></pre>
<p>I've looked into answers from similar questions, like using slices, .replace, rstrip, but this either hasn't done anything or removes numbers which are a part of my gene name which I need to keep. How can I remove the numbers at the start of each row?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>str.split</code></p>
<p><strong>Ex:</strong></p>
<pre><code>import pandas as pd

df = pd.DataFrame({"Column 1": ["153 ADRB1", "3486 IGFBP3", "9531 BAG3", "9612 NCOR2"]})
print(df["Column 1"].str.split().str[1])
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>0     ADRB1
1    IGFBP3
2      BAG3
3     NCOR2
Name: Column 1, dtype: object
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>genename = "153 ADRB1"
print(genename.split(" ")[1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can load the dataset in to columns by splitting the csv file based on space and take the second column, as below:</p>
<p><code></code> <code>
datatemp = pd.read_csv("genes_person1.csv", sep=' ')
data = datatemp.iloc[:, 1]</code> <code></code> </p>
</div>
<span class="comment-copy">Are you using pandas?</span>
<span class="comment-copy">Split on the space and take the second component.</span>
<span class="comment-copy">Thank you both for your commentd. I will try to split that way now, and yes I am using pandas, I import my data with pd_read.csv, I will add this in to my question.</span>
<span class="comment-copy">Thank you for this I am going to try it now. This seems like it would work best for me as I have 80 genes to go through, would there be a quick way for me to obtain all 80 genes to have in quotes for the pd.DataFrame line? Or can it only be done manually?</span>
<span class="comment-copy">I am sorry I do not understand</span>
<span class="comment-copy">for the ["153 ADRB1", "3486 IGFBP3", "9531 BAG3", "9612 NCOR2"] I have 80 more genes to add into those [ ], can I only do this manually? Apologies for any confusion from me I am very new to python</span>
<span class="comment-copy">No you do not have to do it manually....I used <code>pd.Dataframe</code> as an example. You only need <code>print( data["Column 1"].str.split().str[1] )</code></span>
<span class="comment-copy">Oh I see ok thank you very much this works great</span>
<span class="comment-copy">Uh, Why reversed?</span>
<span class="comment-copy">In case id is empty</span>
<span class="comment-copy">But on the other hand, you might want an error if id is empty, I think I'll remove the reverse.</span>
