<div class="post-text" itemprop="text">
<p>Hi I have a set of data as shown below(dummy data to replace school data) in a text file</p>
<pre><code>01-01-1998 00:00:00 AM  GP: D(B):1234 to time difference. Hourly Avg:-3 secs
01-01-1998 00:00:12 AM  GP: D(A): 2345 to time difference. Hourly Avg:0 secs
01-01-1998 00:08:08 AM  SYS: The Screen Is now minimised.
01-01-1998 00:09:10 AM  00:09:10 AM SC: Findcorrect: W. D:1. Count one two three four five.       #there are somehow some glitch in the system showing 2 timestamp
01-01-1998 00:14:14 AM  SC: D1 test. Old:111, New:222, Calculated was 123, out of 120 secs.    
01-01-1998 01:06:24 AM  ET: Program Disconnected event.
</code></pre>
<p>I would like to tidy up the data as shown to the desired outcome below in a format of</p>
<pre><code>[['Timestamp','System','Di','Message']    #  &lt;-- header
['01-01-1998 00:00:00 AM', 'GP:','D(B):','1234 to time difference. Hourly Avg:-3 secs'],
['01-01-1998 00:00:12 AM', 'GP:','D(A):', '2345 to time difference. Hourly Avg:0 secs'],
['01-01-1998 00:08:08 AM', 'SYS:','','The Screen Is now minimised.'],   #&lt;-- with a blank
['01-01-1998 00:09:10 AM', 'SC:','','Findcorrect: HW. D:1. Count one two three four five.'],
['01-01-1998 00:14:14 AM', 'SC:','D1','test. Old:111, New:222, Calculated was 123, out of 120 secs.' ],
['01-01-1998 01:06:24 AM', 'ET:','', 'Program Disconnected event.']]
</code></pre>
<p>Basically I would like to add a header from start, then allowing the data to fit into 4 columns (Timestamp, ststem, Di and message). Some of the issue that might be a problem is that on line 4 of the source data, it duplicates an additional timestamp within the system thus leading to the need of clearing it. </p>
<p>Di field will mainly take in "D(A), D(B), D1 and D2</p>
<p>The rest of the string will be under the field Message.  Then the finalised output will be to a excel file for data analysis. </p>
<p>The code as shown below is what i had tried(weak in python)</p>
<pre><code>import re
from itertools import islice
from itertools import groupby
from operator import itemgetter
import xlsxwriter
import pandas as pd
import os

content = []

with open("DTBL.log","r") as infile:
    for line in infile.readlines():
        words = line.split(" ")
        #print(line)
        #content.append(words).split(',')
        print(words)
        timestamp = line[:22]
        system = line[23:28]
        ##print(timestamp)
        content.append(timestamp + ', ' + system + ','+(line[29:]).rstrip('\n'))
        print(content)

for l in content:
    if l[-2].isdigit():
</code></pre>
<p>Due to lack of knowledge in python the code is not fully developed and i will greatly appreciate any guidance or example!
Some question to ponder, do i use pandas/ dataframe? or can i just do it without pd?</p>
<p><strong>EDITTED: the 1st line of data updated to "D(B)1234", it shouldnt have any space between the numbers and D(B)</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>The code to cleanup this <strike>mess</strike> data uses partly regex, partly string interpolation. </p>
<p>The writing of cleaned up csv uses the module <a href="https://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow noreferrer">csv</a> due to need of masking inner <code>,</code> in text (f.e. in line wiht <code>Old:111, New:222, ...</code> ):</p>
<p>Create demo file:</p>
<pre><code>with open("data.txt","w") as w:
    w.write("""01-01-1998 00:00:00 AM  GP: D(B): 1234 to time difference. Hourly Avg:-3 secs
01-01-1998 00:00:12 AM  GP: D(A): 2345 to time difference. Hourly Avg:0 secs
01-01-1998 00:08:08 AM  SYS: The Screen Is now minimised.
01-01-1998 00:09:10 AM  00:09:10 AM SC: Findcorrect: W. D:1. Count one two three four five.       #there are somehow some glitch in the system showing 2 timestamp
01-01-1998 00:14:14 AM  SC: D1 test. Old:111, New:222, Calculated was 123, out of 120 secs.    
01-01-1998 01:06:24 AM  ET: Program Disconnected event.""")
</code></pre>
<p>Parse and write it:</p>
<pre><code>import re

def parseLine(line):
    # get the timestamp
    ts = re.match(r"\d{2}-\d{2}-\d{4} \d{2}:\d{2}:\d{2} +(?:AM|PM)",line)

    # get all but the timestamp - cleaning the double-time issue
    cleaned = re.sub(r"^\d{2}-\d{2}-\d{4} (\d{2}:\d{2}:\d{2} (AM|PM) +)+","", line)

    # split cleaned part based on occurence of ["D(A)", "D(B)", "D1", "D2"]
    if any(k in cleaned.split(":")[1] for k in ["D(A)", "D(B)", "D1", "D2"]):
        system, di, msg = cleaned.split(" ", maxsplit = 2)
    else:
        di = ""
        system, msg = cleaned.split(":", maxsplit = 1)

    # return each line as list of cleaned stuff:
    return [ts[0].strip() ,system.strip(), di.strip(), msg.strip()]

# fixed header, lines will be appended   
p = [['Timestamp','System','Di','Message']]

with open("data.txt","r") as r:
    for l in r:
        l = l.strip()
        p.append(parseLine(l))

import csv
with open("c.csv","w",newline="") as w:
    writer = csv.writer(w,quoting=csv.QUOTE_ALL)
    writer.writerows(p)
</code></pre>
<p>Read and output the written file:</p>
<pre><code>with open("c.csv") as r:
    print(r.read())
</code></pre>
<p>File-Content (masked csv) else <code>st. Old:111, New:222, Calculated was 123, ...</code> would corrupt your format:</p>
<pre><code>"Timestamp","System","Di","Message"
"01-01-1998 00:00:00 AM","GP:","D(B):","1234 to time difference. Hourly Avg:-3 secs"
"01-01-1998 00:00:12 AM","GP:","D(A):","2345 to time difference. Hourly Avg:0 secs"
"01-01-1998 00:08:08 AM","SYS","","The Screen Is now minimised."
"01-01-1998 00:09:10 AM","SC","","Findcorrect: W. D:1. Count one two three four five.       #there are somehow some glitch in the system showing 2 timestamp"
"01-01-1998 00:14:14 AM","SC:","D1","test. Old:111, New:222, Calculated was 123, out of 120 secs."
"01-01-1998 01:06:24 AM","ET","","Program Disconnected event."
</code></pre>
</div>
<span class="comment-copy">Hi! Thank you for your guidance. Just want to check with you on some stuff, as the data as shown above is just a portion of my test data, when I test it out with my actual data, it causes an error of 'Nonetype' object is not subscriptable.</span>
<span class="comment-copy">Was doing some troubleshooting and realise that the error occur when my time is in single digit for the hour portion. I've tried changing the parameters for the checking of digit to " \d{2,} ' , but it still doesnt work. Please advice thanks!</span>
<span class="comment-copy">Have solved the issue by using (\d{2}|\d{1})!</span>
<span class="comment-copy">Have updated the question as i spotted an error in my test data!</span>
<span class="comment-copy">@ThanksForHelping  seems your daytime is my sleeptime. You can change <code>\d{1,2}</code> to let it accept 1 up to 2 digits - <code>\d{2,}</code> accepts 2 or more digits. I use <a href="http://regex101.com" rel="nofollow noreferrer">regex101.com</a>  to test regexes - it even explains them in "normal" text to you - the error in your data should not impact this, as that part is spltited at <code>:</code> - space or not should not matter</span>
