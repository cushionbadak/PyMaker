<div class="post-text" itemprop="text">
<p>I have a word list like this:</p>
<pre><code>river
mississippi
water
spain
cairo


hellow
kind
words
sentences
</code></pre>
<p>They are separated by different number of '\n'</p>
<p>What I want to do is to put these words which separate by one '\n' in an inner list, and the words which separate by <strong>more than one</strong> (could be 2,3 or more) '\n' in different inner list like this:</p>
<pre><code>[['river', 'mississippi', 'water', 'spain', 'cairo'], ['hellow','kind','words','sentences']]
</code></pre>
<p>I tried</p>
<pre><code>infile=open(test_sets_file,'r')
readed=infile.readlines()
newlist=[]
new_nestedlist=[]
for i in range(len(readed)):
    if readed[i]!='\n':
        new_nestedlist.append(readed[i].strip('\n'))
    else:
        newlist.append(new_nestedlist)
        new_nestedlist=[]
return newlist
</code></pre>
<p>it doesn't work
My code cannot print anything when the input text is</p>
<pre><code>river
mississippi
water
spain
cairo
</code></pre>
<p>I know it is because I initialized the list as an empty one when meet a '\n'</p>
<p>I also found another question 
<a href="https://stackoverflow.com/questions/47001912/creating-nested-list-from-string-data-with-two-delimiters-in-python">Creating nested list from string data with two delimiters in Python
</a>
about creating nested list by different separators, but it cannot solve my question</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this with the <a href="https://docs.python.org/3/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer"><code>str.splitlines</code></a> method. We also use <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow noreferrer"><code>str.rstrip</code></a> to clean up any blank spaces (or tabs) at the ends of lines. We don't have to worry about newlines, since <code>.splitlines</code> takes care of those.</p>
<p>The idea is that if there are any blank lines or lines just containing whitespace, they will get converted to empty strings by the combined action of <code>.splitlines</code> &amp; <code>.rstrip</code>. So when we encounter an empty <code>row</code>, if we have data in the <code>inner</code> buffer we append it to the <code>nested</code> output buffer, and create a new empty <code>inner</code> buffer. Otherwise, we just append the current <code>row</code> to the <code>inner</code> buffer. When we get to the end of the data we also need to save any data from <code>inner</code> to <code>nested</code>.</p>
<pre><code>data = '''\
river
mississippi
water
spain
cairo


hellow
kind
words
sentences
'''

nested = []
inner = []
for row in data.splitlines():
    # Remove any trailing whitespace
    row = row.rstrip()
    if row:
        inner.append(row)
    elif inner:
        nested.append(inner)
        inner = []
if inner:
    nested.append(inner)

print(nested)
</code></pre>
<p><strong>output</strong></p>
<pre><code>[['river', 'mississippi', 'water', 'spain', 'cairo'], ['hellow', 'kind', 'words', 'sentences']]
</code></pre>
<hr/>
<p>Note that it's easy to adapt this code to reading line by line directly from a file. You don't need to read the whole file into a list before you start work on it. Eg,</p>
<pre><code>nested = []
inner = []
with open("test_sets_file") as data:
    for row in data:
        # Remove any trailing whitespace, including newline
        row = row.rstrip()
        if row:
            inner.append(row)
        elif inner:
            nested.append(inner)
            inner = []
    if inner:
        nested.append(inner)

print(nested)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can first split based on multiple occurences of <code>\n</code> by using a regular expression. Assuming your input is in the variable <code>string</code>, we can do the following</p>
<pre><code>import re
first_split = re.compile('\n\n+').split(string)
</code></pre>
<p>Then you can further divide each individual string based on a single <code>\n</code></p>
<pre><code>second_split = [x.split('\n') for x in first_split]
</code></pre>
<p>This yields</p>
<pre><code>[['river', 'mississippi', 'water', 'spain', 'cairo'], ['hellow', 'kind', 'words', 'sentences']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use split with <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">regex</a> the multiple <code>\n</code> (<code>\n\n+</code> =&gt; 2 or more <code>\n</code> in a row) and then <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer"><code>split</code></a> each part by a single <code>\n</code>:</p>
<p>By the way, it's preferable to use <a href="https://stackoverflow.com/a/26342829/1918287"><code>with</code></a> when working with files (for a proper file closing ant context managing):</p>
<pre><code>import re

def transform(data):
    return [x.split('\n') for x in re.compile('\n\n+').split(data)]

with open(test_sets_file, 'r') as infile:
    # Read the entire file to a single string
    # data = infile.read()

    # First example
    data = 'river\nmississippi\nwater\nspain\ncairo\n\n\nhellow\nkind\nwords\nsentences'    
    print(transform(data))  # [['river', 'mississippi', 'water', 'spain', 'cairo'], ['hellow', 'kind', 'words', 'sentences']]

    # Second example
    data = 'river\nmississippi\nwater\nspain\ncairo'

    print(transform(data))  # [['river', 'mississippi', 'water', 'spain', 'cairo']]
</code></pre>
</div>
<span class="comment-copy">Please expand on <i>"doesn't work"</i> with a proper <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
