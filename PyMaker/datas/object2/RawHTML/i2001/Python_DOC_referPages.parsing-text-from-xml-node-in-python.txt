<div class="post-text" itemprop="text">
<p>I'm trying to extract URLs from a sitemap like this: <a href="https://www.bestbuy.com/sitemap_c_0.xml.gz" rel="nofollow noreferrer">https://www.bestbuy.com/sitemap_c_0.xml.gz</a></p>
<p>I've unzipped and saved the .xml.gz file as an .xml file. The structure looks like this:</p>
<pre><code>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xhtml="http://www.w3.org/1999/xhtml" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"&gt;
&lt;url&gt;
    &lt;loc&gt;https://www.bestbuy.com/&lt;/loc&gt;
    &lt;priority&gt;0.0&lt;/priority&gt;
&lt;/url&gt;
&lt;url&gt;
    &lt;loc&gt;https://www.bestbuy.com/site/3d-printers/3d-printer-filament/pcmcat335400050008.c?id=pcmcat335400050008&lt;/loc&gt;
    &lt;priority&gt;0.0&lt;/priority&gt;
&lt;/url&gt;
&lt;url&gt;
    &lt;loc&gt;https://www.bestbuy.com/site/3d-printers/3d-printing-accessories/pcmcat748300527647.c?id=pcmcat748300527647&lt;/loc&gt;
    &lt;priority&gt;0.0&lt;/priority&gt;
&lt;/url&gt;
</code></pre>
<p>I'm attempting to use ElementTree to extract all of the URLs within the <strong>loc</strong> nodes throughout this file, but struggling to get it working right.</p>
<p>Per the documentation, I'm trying something like this:</p>
<pre><code>import xml.etree.ElementTree as ET
tree = ET.parse('my_local_filepath')
root = tree.getroot()

value = root.findall(".//loc")
</code></pre>
<p>However, nothing gets loaded into value. My goal is to extract all of the URLs between the loc nodes and print it out into a new flat file. Where am I going wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>We can iterate through the URLs, toss them into a list and write them to a file as such: </p>
<pre><code>from xml.etree import ElementTree as ET

tree = ET.parse('test.xml')
root = tree.getroot()

name_space = '{http://www.sitemaps.org/schemas/sitemap/0.9}'

urls = []
for child in root.iter():
    for block in child.findall('{}url'.format(name_space)):
        for url in block.findall('{}loc'.format(name_space)):
            urls.append('{}\n'.format(url.text))

with open('sample_urls.txt', 'w+') as f:
    f.writelines(urls)
</code></pre>
<ul>
<li>note we need to append the name space from the open urlset definition to properly parse the xml</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You were close in your attempt but like mzjn said in a comment, you didn't account for the default namespace (<code>xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"</code>).</p>
<p>Here's an example of how to account for the namespace:</p>
<pre class="lang-py prettyprint-override"><code>import xml.etree.ElementTree as ET
tree = ET.parse('my_local_filepath')

ns = {"sm": "http://www.sitemaps.org/schemas/sitemap/0.9"}

for elem in tree.findall(".//sm:loc", ns):
    print(elem.text)
</code></pre>
<p>output:</p>
<pre class="lang-none prettyprint-override"><code>https://www.bestbuy.com/
https://www.bestbuy.com/site/3d-printers/3d-printer-filament/pcmcat335400050008.c?id=pcmcat335400050008
https://www.bestbuy.com/site/3d-printers/3d-printing-accessories/pcmcat748300527647.c?id=pcmcat748300527647
</code></pre>
<p>Note that I used the namespace prefix <code>sm</code>, but you could use any <a href="https://www.w3.org/TR/xml-names/#ns-decl" rel="nofollow noreferrer">NCName</a>.</p>
<p><a href="https://docs.python.org/3/library/xml.etree.elementtree.html#parsing-xml-with-namespaces" rel="nofollow noreferrer">See here</a> for more information on parsing XML with namespaces in ElementTree.</p>
</div>
<span class="comment-copy">You are not taking namespaces into account. See <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#parsing-xml-with-namespaces" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">It doesn't work, my urls array is still empty. Not sure if there's a formatting issue with the actual XML file I'm trying to open? I'm scraping the .xml.gz file like the one I linked to and using GzipFile to unzip it.</span>
<span class="comment-copy">Right, I think I chopped some important info off with my test file, and appending it in the parsing should help. I updated the answer.</span>
