<div class="post-text" itemprop="text">
<p>I want to make a function that given a list and a range:</p>
<pre><code>coordinate=[x,y]
</code></pre>
<p>Creates a list that contains all integer points in range.
For example,</p>
<pre><code>coordinate=[0,0]
range=1
</code></pre>
<p>Would return</p>
<pre><code>[[-1,1],[0,1],[1,1],[-1,0],[0,0],[0,1],[-1,-1],[0,-1],[1,-1]]
</code></pre>
<p>Likewise for range 2 would return</p>
<pre><code>[[-2,2],[-1,2],[0,2]...]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a> with an accordant <code>range</code>. Speaking of <code>range</code>, you should select some other name for your <code>range</code> variable, e.g. <code>dist</code>.</p>
<pre><code>&gt;&gt;&gt; coordinate = (x,y) = (0, 0)
&gt;&gt;&gt; dist = 1
&gt;&gt;&gt; [(x+dx, y+dy) for (dx, dy) in itertools.product(range(-dist, dist+1), repeat=2)]
[(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 0), (0, 1), (1, -1), (1, 0), (1, 1)]
</code></pre>
<p>If you want the exact same ordering as in your example output, try this variation:</p>
<pre><code>&gt;&gt;&gt; [(x+dx, y+dy) for (dy, dx) in itertools.product(range(dist, -dist-1, -1), range(-dist, dist+1))]
[(-1, 1), (0, 1), (1, 1), (-1, 0), (0, 0), (1, 0), (-1, -1), (0, -1), (1, -1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def coord(x,y,range_of_search):
    scan=range_of_search
    blank=[]
    for i in range(x-scan,x+scan+1):
        for j in range(y-scan,y+scan+1):
            blank.append([i,j])

    print(blank)
coord(0,0,2)
</code></pre>
<p>I got it, didn't think of appending a list at once. I was appending individual elements</p>
</div>
<div class="post-text" itemprop="text">
<p>Using a list-comprehension:</p>
<pre><code>&gt;&gt;&gt; ranges = 1
&gt;&gt;&gt; [[y, x] for x in range(ranges, -(ranges + 1), -1) for y in range(-ranges, ranges + 1)])
[[-1, 1], [0, 1], [1, 1], [-1, 0], [0, 0], [1, 0], [-1, -1], [0, -1], [1, -1]]
&gt;&gt;&gt; ranges = 2
&gt;&gt;&gt; [[y, x] for x in range(ranges, -(ranges + 1), -1) for y in range(-ranges, ranges + 1)])
[[-2, 2], [-1, 2], [0, 2], ...]]
</code></pre>
</div>
<span class="comment-copy">Nice idea, what do you have already?</span>
<span class="comment-copy">What have you tried already, and what are your thoughts? I don't want to do your homework</span>
