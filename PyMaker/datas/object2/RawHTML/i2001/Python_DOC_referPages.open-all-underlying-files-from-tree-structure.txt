<div class="post-text" itemprop="text">
<p>I have loads of html files that I want to merge to one single file.
File path is /Desktop/Username/My_files/. This folder contains 1300 different folders, and all of these folders has message.html file.</p>
<p>Instead of copying them one by one I want to solve this using Python.
My code works if the message.html is in the folder, but is unable to read the contents of the underlying folder structure. The bolded part of the code needs changing, but how can it be corrected most easily?</p>
<pre><code>import re, sys, glob
out = open("cleaned.txt", 'r')
**path = '/Home/Username/Desktop/My_files/*.html'**
files = glob.glob(path)
for file in files:
        f = open(file, 'r')
        data = f.read().replace("\n", ' ')
        cleaner = re.compile('&lt;.*?&gt;')
        cleantext = re.sub(cleaner, "\n", data)
        out.write(cleantext)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If all your files are just one folder level deep, you have simply misplaced your placeholder. Use a placeholder for the unknown folder, not the file name:</p>
<pre><code># match "message.html" in all direct subfolders of "/Home/Username/Desktop/My_files/"
path = '/Home/Username/Desktop/My_files/*/message.html'
</code></pre>
<p>Note that if the filename is not constant either, <code>glob</code> also takes several placeholders:</p>
<pre><code># match any html file in all direct subfolders of "/Home/Username/Desktop/My_files/"
path = '/Home/Username/Desktop/My_files/*/*.html'
</code></pre>
<hr/>
<p>Things are trickier if not only direct subfolders are needed. Since Python3.5, <a href="https://docs.python.org/3/library/glob.html#glob.glob" rel="nofollow noreferrer"><code>glob.glob</code> supports a recursive placeholder</a>:</p>
<blockquote>
<p>If recursive is true, the pattern "<code>**</code>" will match any files and zero or more directories and subdirectories.</p>
</blockquote>
<p>In your case, this would look like this:</p>
<pre><code># match "message.html" in all subfolders of "/Home/Username/Desktop/My_files/"
path = '/Home/Username/Desktop/My_files/**/message.html'
files = glob.glob(path, recursive=True)
</code></pre>
<p>On an older Python version, you should walk the directories yourself. The <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk</code> function</a> allows you to recursively inspect all files in subdirectories.</p>
<p>The following provides the full path to each file with a fixed name from a base directory:</p>
<pre><code>def find_files(base_path, file_name):
    """Yield all paths to any file named ``file_name`` in a subdirectory of ``base_path``"""
    # recursively walk through all subdirectories
    for dirpath, dirnames, filenames in os.walk(base_path):
        # test if the file name occurs in the current subdirectory
        if file_name in filenames:
            yield os.path.join(base_path, dirpath, file_name)
</code></pre>
<p>You can use it in place of your glob result:</p>
<pre><code>files = find_files('/Home/Username/Desktop/My_files/', 'message.html')
for file in files:
   ...
</code></pre>
</div>
<span class="comment-copy">You opened <code>out</code> for <i>read</i>, then <i>write</i> to it. Side-note: If you're going to compile a regex, do it <i>outside</i> the loop; recompiling it every time removes the benefit of precompiling. I'm guessing you just want to change the filter to <code>'/Home/Username/Desktop/My_files/*/*.html'</code> so it descends one level of directories, but your folder layout description could use a few example paths to clarify things.</span>
<span class="comment-copy">Use <code>glob.glob('/Home/Username/Desktop/My_files/**/*.html', recursive=True)</code>. Also, besides the thing with <code>out</code>, you should close the files you open, or use them in a <code>with</code> context.</span>
