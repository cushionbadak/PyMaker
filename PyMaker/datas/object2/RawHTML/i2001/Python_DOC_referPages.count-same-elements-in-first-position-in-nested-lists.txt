<div class="post-text" itemprop="text">
<p>4 jobs scheduled on 3 machines, using nested lists [machine#, job#]</p>
<pre><code>schedule = [[1, 0], [2, 1], [3, 2], [3, 3]]
</code></pre>
<p>I want to count how often machine 3 is used.</p>
<p>I tried using <code>schedule.count(3)</code> but I didn't get any output and I guess it would check all elements anyways.</p>
</div>
<div class="post-text" itemprop="text">
<p>To use count you need to create list of machines (by extracting each machine from the pair list) and the count the occurrences of <code>3</code>, for instance something like this:</p>
<pre><code>schedule = [[1, 0], [2, 1], [3, 2], [3, 3]]
lst_count = [ma for ma, _ in schedule].count(3)  # using list and count
</code></pre>
<p>The above approach is inefficient because it creates a list and the applies count on it. A more efficient approach is to use a generator expression as @schwobaseggl suggested, one alternative to the proposed generator is the following:</p>
<pre><code>schedule = [[1, 0], [2, 1], [3, 2], [3, 3]]
gen_count = sum(1 for ma, _ in schedule if ma == 3)  # using a generator
</code></pre>
<p>Finally both approaches work fine if you intend to count only the occurrences of single machine, if you want the occurrences of several machines for example <code>1</code> and <code>3</code>, I suggest you use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">Counter</a>:</p>
<pre><code>from collections import Counter

schedule = [[1, 0], [2, 1], [3, 2], [3, 3]]
counts = Counter(ma for ma, _ in schedule)  # using Counter
print(counts[3])
print(counts[1])
</code></pre>
<p><strong>Output</strong></p>
<pre><code>2
1
</code></pre>
<p><strong>Update</strong></p>
<p>Besides the above approaches you could use a simple <code>for</code> loop and a counter variable:</p>
<pre><code>schedule = [[1, 0], [2, 1], [3, 2], [3, 3]]

counter = 0
for ma, _ in schedule:
    if ma == 3:
        counter += 1
print(counter)  # 2
</code></pre>
<p><strong>Note</strong> </p>
<p>The <code>ma, _ = x</code> notation is known as unpacking. When you write <code>ma, _</code> Python expects that each element of the <code>schedule</code> list is a pair of elements. For example, <code>x, y = [1, 2]</code> assigns the value <code>1</code> to <code>x</code> and the value <code>2</code> to <code>y</code>. Using <code>_</code> simply means ignore the second value.</p>
<p><strong>Further</strong></p>
<ol>
<li><a href="http://treyhunner.com/2018/03/tuple-unpacking-improves-python-code-readability/" rel="nofollow noreferrer">http://treyhunner.com/2018/03/tuple-unpacking-improves-python-code-readability/</a></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>You could use a list comprehension to extract the jobs on machine #3, and then just check its length:</p>
<pre><code>num_jobs = len([x for x in schedule if x[0] == 3])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>schedule.count(3)</code> counts how many of the elements in <code>schedule</code> are equal to <code>3</code>. You can easily see that none of them are. After all, the elements are lists.</p>
<p>However, you can use <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer"><code>sum</code></a> with an appropriate generator expression:</p>
<pre><code>sum(x[0] == 3 for x in schedule)
# 2
</code></pre>
<p>This is more space efficient than building a <code>list</code> and calling <code>len</code> on it. The summation makes use of the fact that <code>bool</code> is a subtype of <code>int</code>.</p>
</div>
<span class="comment-copy">Thank you for your help! How would you approach the solution if you want to use IF statements? if position (0,0) == 3, add 1 to a counter? I hope I can express myself clearly</span>
<span class="comment-copy">Hi Sinisa, glad I could help! I didn't understand what you mean by (0, 0) == 3? Do you want to count the machine <code>3</code> only if in a certain position?</span>
<span class="comment-copy">I am thinking about checking the first position of every nested list and if that first position equals 3, then add +1 to a counter.</span>
<span class="comment-copy">@Sinisa Updated the answer, see if it helps you</span>
<span class="comment-copy">Thanks!!! Can you help me understand the reasoning behind the underscore _ in the FOR statement? Helping me really much, just started out !</span>
