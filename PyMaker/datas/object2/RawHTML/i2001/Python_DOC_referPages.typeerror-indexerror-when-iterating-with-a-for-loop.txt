<div class="post-text" itemprop="text">
<p>I'm using a <code>for</code> loop to iterate over a list like this:</p>
<pre><code>lst = ['a', 'b', 'c']
for i in lst:
    print(lst[i])
</code></pre>
<p>But there must be something wrong with that, because it throws the following exception:</p>
<pre><code>Traceback (most recent call last):
  File "untitled.py", line 3, in &lt;module&gt;
    print(lst[i])
TypeError: list indices must be integers or slices, not str
</code></pre>
<p>And if I try the same thing with a list of integers, it throws an <code>IndexError</code> instead:</p>
<pre><code>lst = [5, 6, 7]
for i in lst:
    print(lst[i])
</code></pre>
<pre><code>Traceback (most recent call last):
  File "untitled.py", line 4, in &lt;module&gt;
    print(lst[i])
IndexError: list index out of range
</code></pre>
<p>What's wrong with my <code>for</code> loop?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python's <code>for</code> loop iterates over the <em>values</em> of the list, not the <em>indices</em>:</p>
<pre><code>lst = ['a', 'b', 'c']
for i in lst:
    print(i)

# output:
# a
# b
# c
</code></pre>
<p>That's why you get an error if you try to index <code>lst</code> with <code>i</code>:</p>
<pre><code>&gt;&gt;&gt; lst['a']
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: list indices must be integers or slices, not str
</code></pre>
<pre><code>&gt;&gt;&gt; lst[5]
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
IndexError: list index out of range
</code></pre>
<p>Many people use indices to iterate out of habit, because they're used to doing it that way from other programming languages. But in python you rarely need indices. Looping over the values is much more convenient:</p>
<pre><code>lst = ['a', 'b', 'c']
for val in lst:
    print(val)

# output:
# a
# b
# c
</code></pre>
<p>And if <em>really</em> need the indices in your loop, you can use the <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> function:</p>
<pre><code>lst = ['a', 'b', 'c']
for i, val in enumerate(lst):
    print('element {} = {}'.format(i, val))

# output:
# element 0 = a
# element 1 = b
# element 2 = c
</code></pre>
</div>
<span class="comment-copy">Questions like this come up fairly regularly, and I never could find a proper duplicate for them. So I made my own. If anyone knows a better one, please share.</span>
<span class="comment-copy">can even use <code>print("element %d  = %c"%(i,val))</code></span>
