<div class="post-text" itemprop="text">
<p>I am trying to compare <code>__class__</code> function in Python and IPython with <code>type()</code> function in both and wondering if below difference in behavior is because of <code>__class__</code> modification in IPython w.r.t Python. </p>
<p>Python </p>
<pre><code>&gt;&gt;&gt; [].__class__
&lt;class 'list'&gt;
&gt;&gt;&gt; type([])
&lt;class 'list'&gt;
</code></pre>
<p>IPython</p>
<pre><code>In [2]: [].__class__
Out[2]: list

In [3]: type([])
Out[3]: list
</code></pre>
<p>But with print it still seems to be referring to Python's <code>__class__</code></p>
<p>Python</p>
<pre><code>&gt;&gt;&gt; print(type([]))
&lt;class 'list'&gt;
</code></pre>
<p>IPython</p>
<pre><code>In [4]: print(type([]))
&lt;class 'list'&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's where the magic happens:</p>
<pre><code>In [1] import sys
In [2] sys.displayhook
Out[2]: &lt;IPython.terminal.prompts.RichPromptDisplayHook at 0x7f6c42b08190&gt;
</code></pre>
<p>vs.</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.displayhook
&lt;built-in function displayhook&gt;
</code></pre>
<p>The object being displayed (<code>list</code>, or <code>&lt;class 'list'&gt;</code>) is the same object. Using <a href="https://docs.python.org/3/library/sys.html#sys.displayhook" rel="nofollow noreferrer"><code>sys.displayhook</code></a>, IPython modifies how it is displayed in the interactive REPL.</p>
</div>
<span class="comment-copy">I'm guessing it is IPython's <code>sys.displayhook</code> that is modified: <code>list</code> still refers to <code>&lt;class 'list'&gt;</code>, it is just printed differently.</span>
