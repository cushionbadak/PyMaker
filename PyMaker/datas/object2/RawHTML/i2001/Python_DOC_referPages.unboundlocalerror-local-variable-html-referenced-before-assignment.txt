<div class="post-text" itemprop="text">
<pre><code>html += '''
&lt;table style="width:100%"&gt;
  &lt;tr align="center"&gt;
    &lt;th style="width:10%"&gt;Metrics&lt;/th&gt;
    '''
def get_bus_metrics (met,name):
    for i in met:
        html += '&lt;th&gt;' + str(i) + '&lt;/th&gt;'
    html += '''&lt;/tr&gt;'''
    html += '''&lt;tr&gt;&lt;th&gt;''' + name +'''&lt;/th&gt;'''

get_bus_metrics (g1,'R')
</code></pre>
<blockquote>
<p>UnboundLocalError: local variable 'html' referenced before assignment</p>
</blockquote>
<p>I am getting this error.
Can someone please suggest me what I am missing here, why I am getting the above error.</p>
</div>
<div class="post-text" itemprop="text">
<p>Fix the <code>+=</code> if the variable was not used before and provide it to the function:</p>
<pre><code># fix here - no += unless you decleared html as some string beforehand
html = '''
&lt;table style="width:100%"&gt;
  &lt;tr align="center"&gt;
    &lt;th style="width:10%"&gt;Metrics&lt;/th&gt;
    '''
# fix here - else not known
def get_bus_metrics (met,name,html):
    for i in met:
        html += '&lt;th&gt;' + str(i) + '&lt;/th&gt;'
    html += '''&lt;/tr&gt;'''
    html += '''&lt;tr&gt;&lt;th&gt;''' + name +'''&lt;/th&gt;'''
    return html

html = get_bus_metrics (range(1,5),'R',html)  # provide as parameter: cleaner

print(html) # 
</code></pre>
<p>Output:</p>
<pre><code>&lt;table style="width:100%"&gt;
  &lt;tr align="center"&gt;
    &lt;th style="width:10%"&gt;Metrics&lt;/th&gt;
    &lt;th&gt;1&lt;/th&gt;&lt;th&gt;2&lt;/th&gt;&lt;th&gt;3&lt;/th&gt;&lt;th&gt;4&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;R&lt;/th&gt;
</code></pre>
<p>or (less preferable) declare it global:</p>
<pre><code>def get_bus_metrics (met,name,html):
    # don't use globals, they are _evil_ - if you need to _modify_ smth
    # from global scope, you need to announce this in the function
    # reading works without if decleard earlier then the function, 
    # changing it needs this line:
    global html   
    for i in met:
        html += '&lt;th&gt;' + str(i) + '&lt;/th&gt;'
    html += '''&lt;/tr&gt;'''
    html += '''&lt;tr&gt;&lt;th&gt;''' + name +'''&lt;/th&gt;'''
</code></pre>
<hr/>
<p><strong>Tip 1</strong>:<br/>
Better string formatting using <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer">str.format()</a> or <a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer">f-strings / PEP-0498 / Literal String Interpolation</a></p>
<p><strong>Tip 2</strong>:<br/>
Adding to strings in a loop is wasteful - it constructs lots of intermediate strings that are thrown away. Use a list instead</p>
<pre><code>def get_bus_metrics (met,name,html):
    t = []
    for i in met:
        t.append('&lt;th&gt;{}&lt;/th&gt;'.format(i))  # using format(..)
    t.append(f'&lt;/tr&gt;&lt;tr&gt;&lt;th&gt;{name}&lt;/th&gt;')  # using string interpol
    return html+''.join(t)                 # faster, less wasted intermediate strings
</code></pre>
<p>Doku:</p>
<ul>
<li><a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer">str.format()</a>  - works for 2.7</li>
<li><a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer">PEP-0498 string interpol</a> works for 3.6+</li>
<li><a href="https://stackoverflow.com/questions/291978/short-description-of-the-scoping-rules">Short Description of the Scoping Rules?</a> if you want to read about scoping</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><code>html+= someVal</code> is same as <code>html = html + someVal</code>.</p>
<p>Having not been initialized before the variable <code>html</code> is undefined. </p>
<p>Since <code>html</code> is undefined you can't perform <code>html + someVal</code></p>
</div>
<span class="comment-copy">Do you mean to use += on the first line? If html isn't already assigned and you try to add to it that's where your error's coming from</span>
<span class="comment-copy">You are creating crioss-workable code for python 2.7 and 3.6? If not, please only tag the version you use.</span>
<span class="comment-copy">@strava Html needs a <code>&lt;html&gt;</code> and <code>&lt;body&gt;</code> tag before the <code>&lt;table&gt;</code> tag makes sense. Line 1 is probably a copy&amp;paste problem. The problem is far more likely to be that the code uses <code>html</code> in global scope and tries to modify it in the <code>get_bus_metric()</code> function without declaring it global or providing it as parameter - there the += hits as well</span>
<span class="comment-copy">@PatrickArtner I just the responded to your code, could you please take a look. I am not able to output of the function to the html code</span>
<span class="comment-copy">def get_bus_metrics(value,name,html_table,sym=None):         for i in value:            lol.append('{:,.0f}'.format(i))         html_table += '''&lt;tr&gt;&lt;th&gt;'''+name+'''&lt;/th&gt;'''         for i in lol:             if sym is not None:                 html_table += '&lt;td&gt;' + '$' + str(i)  + '&lt;/td&gt;'             else:                 html_table += '&lt;td&gt;' + ' ' + str(i)  + '&lt;/td&gt;'         html_table += '''&lt;/tr&gt;'''      get_bus_metrics(g2,'Row',html_table,1)     Hey Patrick any thought what I am missing here, Row is not adding in the HTML code</span>
<span class="comment-copy">@EricDsilva Comments are unsuitable for code. Your function uses <code>lol</code> without defining it first - try <code>lol = []</code> at top. The whole indentation is missing in comments. You do not return the constructed string from your function. If you have antoher problem, post a second question if it is not realted - else edit and add to this question. Do not ask different things in one question, because it makes the reusability of answers worse (i.e. asking for apples, getting apples answer, asking for pumpkins again - ppl searching after pumpkins getting lots of apples answers - kind of thing).</span>
