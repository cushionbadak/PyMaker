<div class="post-text" itemprop="text">
<p>I have a single list that could be any amount of elements.</p>
<pre><code>['jeff','ham','boat','','my','name','hello']
</code></pre>
<p>How do I split this one list into two lists or any amount of lists depending on blank string elements?</p>
<p>All these lists can then be put into one list of lists.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is one approach using a simple iteration.</p>
<p><strong>Ex:</strong></p>
<pre><code>myList = ['jeff','ham','boat','','my','name','hello']
result = [[]]
for i in myList:
    if not i:
        result.append([])
    else:
        result[-1].append(i)
print(result)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[['jeff', 'ham', 'boat'], ['my', 'name', 'hello']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are certain that there is only one blank string in the list, you can use <code>str.index</code> to find the index of the blank string, and then slice the list accordingly:</p>
<pre><code>index = lst.index('')
[lst[:index], lst[index + 1:]]
</code></pre>
<p>If there could be more than one blank string in the list, you can use <code>itertools.groupby</code> like this:</p>
<pre><code>lst = ['jeff','ham','boat','','my','name','hello','','hello','world']
from itertools import groupby
print([list(g) for k, g in groupby(lst, key=bool) if k])
</code></pre>
<p>This outputs:</p>
<pre><code>[['jeff', 'ham', 'boat'], ['my', 'name', 'hello'], ['hello', 'world']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>, you can do:</p>
<pre><code>from itertools import groupby

lst = ['jeff','ham','boat','','my','name','hello']

[list(g) for k, g in groupby(lst, key=bool) if k]
# [['jeff', 'ham', 'boat'], ['my', 'name', 'hello']]
</code></pre>
<p>Using <code>bool</code> as grouping key function makes use of the fact that the empty string is the only non-truthy string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Let list_string be your list. This should do the trick :</p>
<pre><code>list_of_list=[[]]
for i in list_string:
    if len(i)&gt;0:
        list_of_list[-1].append(i)
    else:
        list_of_list.append([])
</code></pre>
<p>Basically, you create a list of list, and you go through your original list of string, each time you encounter a word, you put it in the last list of your list of list, and each time you encounter '' , you create a new list in your list of list. The output for your example would be :</p>
<pre><code>[['jeff','ham','boat'],['my','name','hello']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>i'm not sure that this is what you're trying to do, but try :</p>
<pre><code>my_list = ['jeff','ham','boat','','my','name','','hello']
list_tmp = list(my_list)
final_list = []
while '' in list_tmp:
    idx = list_tmp.index('')
    final_list.append(list_tmp[:idx])
    list_tmp = list_tmp[idx + 1:]
</code></pre>
</div>
<span class="comment-copy">We can now write down any kind of solution - but did you try to solve this yourself first? Maybe you show us the code that you tried and we give you feedback on how to improve?</span>
<span class="comment-copy">That's where I'm stuck. I can make a variable that gives the number of lists I want but I have no idea what to do from there</span>
<span class="comment-copy">I saw already a few answers popping up. If you want to try this yourself without taking a predefined method, you could try to initialize an empty result list and a temporary list. iterate through your current list and check the element. if it is not empty, append it to the temporary list, otherwise append the temporary list to the result list and initialize a new temporary list. you just need to also append the temporary list once you reach the end of the iteration. This would not be the simples solution, but implementing it yourself gives you a good feeling on how to work with python lists.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/6164313/make-python-sublists-from-a-list-using-a-separator">Make Python Sublists from a list using a Separator</a></span>
