<div class="post-text" itemprop="text">
<p>I am trying to read several csv files that all have different names but same structure inside:</p>
<pre><code>u'/1001/download field1.imem_LOG.csv', 
u'/1001/IRDP_01_25_2018_11_47_16.imem_LOG.csv',
u'/1001/IRDP_08_06_2014_15_07_35.imem_LOG.csv',
u'/1001/IRDP_03_17_2014_15_38_03_LOG.csv',
u'/1001/IRDP-KK-1001_09_11_2017_14_40_48.imem_LOG.csv',
</code></pre>
<p>I cannot read the first and last one:</p>
<pre><code>folder = dataiku.Folder("AfbOboIX")



list_files = folder.list_paths_in_partition()
list_files
list_files_split = map(lambda x : x.split("_"),list_files)
list_files_split

list_idx = [list_files_split.index(x) for x in list_files_split if "LOG.csv" in x]list_idx
list_files_log = [list_files[idx] for idx in list_idx]
list_files_log
    output = pd.DataFrame()
    for name in list_files_log:
        with folder.get_download_stream(name) as f:
            try:
                tmp = pd.read_csv(f)
                tmp = tmp.fillna(0)
                output = output.append(tmp)
            except:
                pass
</code></pre>
<p>`    </p>
<p>How can I solve it? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can loop through the files and append them one by one</p>
<pre><code>import glob
import pandas as pd

dir = 'path_to_directory/*.csv'

files = glob.glob(dir)

data = pd.DataFrame()

for f in files:
    df = pd.read_csv(f)
    data = data.append(df)
</code></pre>
<p><code>data</code> will contain all the dataframes in the directory</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import glob

print(glob.glob(path_of_folder+"/*.csv"))
</code></pre>
<p>and </p>
<pre><code>for index,filename in enumerate(glob.glob(path + "/*.csv")):
    dfs.append(pd.read_csv(filename))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Replace the 'Pass' at the except.
Raise and exception or write the the log the error that occurred.
And then It will be easier to understand what is the problem.</p>
<pre><code>import logging
output = pd.DataFrame()
for name in list_files_log:
    with folder.get_download_stream(name) as f:
        try:
            tmp = pd.read_csv(f)
            tmp = tmp.fillna(0)
            output = output.append(tmp)
        except Exception as err:
            logging.error(err.message)
            logging.exception(err)  # Shows the traceback. 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>The new code without <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">glob</a></strong></p>
</blockquote>
<p>I think what you want can be solved using Ipython:</p>
<pre><code>import pandas as pd

files= !ls *.csv #IPhython stuff
data= pd.concat([pd.read_csv(f, enconding='latin1') for f in files], sort=False)
</code></pre>
<p>Hope it helps.</p>
<blockquote>
<p><strong>The old code</strong></p>
</blockquote>
<p>I think what you want can be solved using the <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">glob</a> library:</p>
<pre><code>import glob
import pandas as pd

dir= 'dir/*.csv'

files = glob.glob(dir)
data= pd.concat([pd.read_csv(f) for f in sorted(files)], sort=False)
</code></pre>
<p>Hope it helps.</p>
</div>
<span class="comment-copy">Welcome to SO. What <i>exactly</i> is the problem that you face?</span>
<span class="comment-copy">I cannot read them all. Is there an issue with the .csv filename when importing such as "-"</span>
<span class="comment-copy">What does that mean exactly? Do you get an error message? Is your dataframe incomplete? Which of the files cannot be read? In order to help you here you have to be as specific as possible.</span>
<span class="comment-copy">I get a dataframe, the first one and the last one do not appear in the dataframe</span>
<span class="comment-copy">Please format your code properly.</span>
<span class="comment-copy">TypeError: can only concatenate list (not "str") to listpath_of_folder is not defined</span>
<span class="comment-copy">you need to give path of folder as a string, or dir*</span>
<span class="comment-copy">If my folder is called ''folder'', shall I put print(glob.glob(folder+"/*.csv")) ?</span>
<span class="comment-copy">No you need to give the full path of that folder like in linux, it can be /home/paul/downloads/folder.  And in Windows it will be like c:/downloads/folder</span>
<span class="comment-copy">AttributeError: 'module' object has no attribute 'err'</span>
<span class="comment-copy">Sorry my mistake -&gt; logging.error(err.message)</span>
<span class="comment-copy">ERROR:root:No columns to parse from file Traceback (most recent call last):   File "&lt;ipython-input-102-6e0e8c37fd74&gt;", line 6, in &lt;module&gt;     tmp = pd.read_csv(f)</span>
<span class="comment-copy">File "/home/dss/python.packages/pandas/io/parsers.py", line 764, in <b>init</b>     self._make_engine(self.engine)   File "/home/dss/python.packages/pandas/io/parsers.py", line 985, in <i>make_engine     self._engine = CParserWrapper(self.f, **self.options)   File "/home/dss/python.packages/pandas/io/parsers.py", line 1605, in <b>init</b>     self._reader = parsers.TextReader(src, **kwds)   File "pandas/_libs/parsers.pyx", line 565, in pandas._libs.parsers.TextReader.__cinit_</i> (pandas/_libs/parsers.c:6260) EmptyDataError: No columns to parse from file</span>
<span class="comment-copy">Print the name of the file to the log too, logging.info(name), seems like one of the file has invalid content.</span>
<span class="comment-copy">It tells me that concat is not defined</span>
<span class="comment-copy">Excuse me, try with the new edit.</span>
<span class="comment-copy">still tells me that concat is not defiend</span>
<span class="comment-copy">It tells me then TypeError: concat() got an unexpected keyword argument 'sort</span>
<span class="comment-copy">import glob import pandas as pd  dir= 'dir/*.csv'  files = glob.glob(dir) # IPython stuff data= pd.concat([read_csv(f) for f in sorted(files)], sort=False)</span>
