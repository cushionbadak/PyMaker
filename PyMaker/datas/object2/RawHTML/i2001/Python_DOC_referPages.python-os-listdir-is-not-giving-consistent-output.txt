<div class="post-text" itemprop="text">
<p>I am using Python 3.6.2 in a Conda virtual environment, on Linux Ubuntu 18.04.</p>
<p>I have tried several ways to list both the files and directories of a particular path but I every method I try seems to only list the files in a directory, not the files and directories.</p>
<p>My code contains</p>
<pre><code>directory_contents = os.listdir(run_directory)
print(directory_contents)
</code></pre>
<p>which shows only </p>
<blockquote>
<p>['170224-ARC122-1-uM-Cis-S1-subsample_R1_001.fastq.gz',
  '170224-ARC122-1-uM-Cis-S1-subsample_R2_001.fastq.gz']</p>
</blockquote>
<p>If I call a break before the <em>listdir</em> command, and then step through the <em>listdir</em> command the variable is filled with the correct contents </p>
<pre><code>ipdb.set_trace()
print(directory_contents)
directory_contents = os.listdir(run_directory)
print(directory_contents)
</code></pre>
<blockquote>
<p>*** NameError: name 'directory_contents' is not defined</p>
<p>['170224-ARC122-1-uM-Cis-S1-subsample_R1_001.fastq.gz', 'bw', 'Stats',
  'bwChrM', 'bg', '170224-ARC122-1-uM-Cis-S1-subsample_R2_001.fastq.gz',
  'bgChrM', 'Log']</p>
</blockquote>
<p>Calling the break after the <em>listdir</em> command </p>
<pre><code>directory_contents = os.listdir(run_directory)
ipdb.set_trace()
print(directory_contents)
</code></pre>
<p>gives</p>
<blockquote>
<p>['170313-ARC122-no-Cis-S5-subsample_R2_001.fastq.gz', '170313-ARC122-no-Cis-S5-subsample_R1_001.fastq.gz']</p>
</blockquote>
<p>What is it that I am not understanding or what extra keyword/argument have I overlooked ? Why am I getting different results depending on if I break before the command or afterwards?</p>
<p>The apparent simplicity of this seems hardly worth posing as a question but I have run out of solutions.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the first result of<a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"> <code>os.walk()</code></a>:</p>
<pre><code>import os

# demo structure: 5 dirs, 5 files
for n in range(5):
    os.mkdir(f"dir_{n}")

for n in range (10,15):
    with open(f"file_{n}.txt","w") as f:
        f.write("...")

# query
akt_dir, subdirs, files = next(os.walk("./")) # get the first result of the generator
print(akt_dir)
print(subdirs)
print(files)
</code></pre>
<p>Output:</p>
<pre><code>./
['dir_0', 'dir_2', 'dir_3', 'dir_4', 'dir_1']
['file_14.txt', 'file_10.txt', 'file_12.txt', 'main.py', 'file_13.txt', 'file_11.txt']
</code></pre>
<p><code>os.walk()</code> returns a generator - so it might query more then you want.</p>
</div>
<span class="comment-copy">No screenhots for this, please copy and paste the formated code (including the snippet with <code>break</code>)</span>
<span class="comment-copy">also: if you break before, you get the value of your variable before <code>os.listdir(..)</code> puts new things into it, if you break afterwards you get the new content ...</span>
<span class="comment-copy">Surely I should get the same values back irrespective if I break before or after. If i.e. if I break before, and run the command manually, I get X value, if I break after I should see X value ?</span>
<span class="comment-copy">I am still only getting the files present in the output for os.walk attempt.   Running  `    for akt_dir, subdirs, files in os.walk(run_directory):         print(akt_dir, subdirs, files)`</span>
<span class="comment-copy">@Liam Then you should check where exactly you are - if there are directories in the dir you are sitting in, you will get them as well as files. You might want to check your "directories" and see if they are actually symlinks, if so you might need to tweak os.walk() using parameters to follow symlinks as well - see <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">docs.python.org/3/library/os.html#os.walk</a>  and maybe read into <a href="https://stackoverflow.com/questions/11068419/check-if-file-is-symlink-in-python">check-if-file-is-symlink-in-python</a></span>
<span class="comment-copy">Thanks for the suggestions. I can see the directories if I browse to them, and the directories are not symlinks, they are created by another process. Using <code>os.path.isdir</code> or <code>isfile</code> returns True.  I did not mention that this is a method inside an object. Perhaps that has something to do with the peculiarity.</span>
<span class="comment-copy">Turns out the os.walk or os.listdir command was being called too soon after the previous asynchronous command. A time.sleep() caused the right information to be returned.</span>
