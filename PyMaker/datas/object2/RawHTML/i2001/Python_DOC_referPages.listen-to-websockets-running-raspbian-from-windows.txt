<div class="post-text" itemprop="text">
<p>I've created a websocket using Python's <code>asyncio</code> and <code>websockets</code> modules. This servers works properly in the same machine. This is the actual code for the server:</p>
<pre><code>import sys
import os
import asyncio
import websockets

@asyncio.coroutine
def receive(websocket, path):
    data = yield from websocket.recv()
    print('&lt; {}'.format(data))

    output = 'Sent data from server: {}'.format(data)

    yield from websocket.send(output)
    print('&gt; {}'.format(output))


start_server = websockets.serve(receive, '127.0.0.1', 8765)

asyncio.get_event_loop().run_until_complete(start_server)
asyncio.get_event_loop().run_forever()
</code></pre>
<p>It runs properly, and the connection from a client residing on the same machine connects to it without any problem.</p>
<p>But when I try to access it from a client on a LAN network, it generates a <code>ConnectionRefusedError</code>. This is the client code:</p>
<pre><code>import asyncio
import websockets

@asyncio.coroutine
def hello():
    websocket = yield from websockets.connect(
        'ws://192.168.0.26:8765')

    try:
        name = input("What's your name? ")

        yield from websocket.send(name)
        print("&gt; {}".format(name))

        greeting = yield from websocket.recv()
        print("&lt; {}".format(greeting))

    finally:
        yield from websocket.close()

asyncio.get_event_loop().run_until_complete(hello())
</code></pre>
<p>I've installed <code>ufw</code> on Raspbian to enable the port 8765 with this command:</p>
<pre><code>ufw allow 8765
</code></pre>
<p>But it doesn't work. On the Windows machine, the command</p>
<pre><code>nmap -p 8765 192.168.0.26
</code></pre>
<p>generates this result:</p>
<pre><code>PORT        STATE    SERVICE
8765/tcp    closed   ultraseek-http
</code></pre>
<p>And... the command </p>
<pre><code>ufw status
</code></pre>
<p>Could someone give some suggestions to solve this communication problem between the client and the server.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is one problem:</p>
<pre><code>start_server = websockets.serve(receive, '127.0.0.1', 8765)
</code></pre>
<p>You have told websockets to <a href="https://websockets.readthedocs.io/en/stable/api.html#websockets.server.serve" rel="nofollow noreferrer">listen</a> only on 127.0.0.1, thus you can only receive connections originating from the local host, and only on legacy IPv4. Both localhost IPv6 connections (the default) and all connections from other computers will receive the connection refused error.</p>
<p>If you want to receive connections from outside the local machine, you should set the <code>Host</code> to <code>None</code> or the empty string. This will accept connections from anywhere, on both IPv6 and IPv4, subject of course to any firewall rules.</p>
<pre><code>start_server = websockets.serve(receive, None, 8765)
</code></pre>
<p>The host and port are passed directly to <a href="https://docs.python.org/3/library/asyncio-eventloop.html#creating-network-servers" rel="nofollow noreferrer"><code>asyncio.create_server()</code></a> which documents Host as:</p>
<blockquote>
<ul>
<li>If host is a string, the TCP server is bound to a single network interface specified by host.</li>
<li>If host is a sequence of strings, the TCP server is bound to all network interfaces specified by the sequence.</li>
<li>If host is an empty string or None, all interfaces are assumed and a list of multiple sockets will be returned (most likely one for IPv4 and another one for IPv6).</li>
</ul>
</blockquote>
</div>
