<div class="post-text" itemprop="text">
<p>I have read so many questions on parsing ISO8601 in python but most of them use external dependencies.
Then i bumped in to this question,</p>
<p><a href="https://stackoverflow.com/questions/127803/how-to-parse-an-iso-8601-formatted-date/15228038">How to parse an ISO 8601-formatted date?</a></p>
<p>It explains that python doesn't support iso8601 formatting, but the answer is 3 years old.</p>
<p>I need to parse this date without using any external dependencies,</p>
<pre><code>from datetime import datetime
app_login = "1996-12-19T16:39:57+08:00"
parse_app_login = datetime.strptime(x,"%Y-%m-%dT%H:%M:%S%z")
print(parse_app_login)
</code></pre>
<p>I get error:</p>
<pre><code>ValueError: time data '1996-12-19T16:39:57+08:00' does not match format '%Y-%m-%dT%H:%M:%S%z'
</code></pre>
<p>i want to know why python does not support iso8601 format?</p>
</div>
<div class="post-text" itemprop="text">
<p>Please note that <code>Python 3.7</code> support <code>ISO8601</code> UTC offsets format,</p>
<p><a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">From Docs</a>,</p>
<blockquote>
<p><strong>Changed in version 3.7:</strong> When the %z directive is provided to the
  strptime() method, the UTC offsets can have a colon as a separator
  between hours, minutes and seconds. For example, '+01:00:00' will be
  parsed as an offset of one hour. In addition, providing 'Z' is
  identical to '+00:00'.</p>
</blockquote>
<p>using Python 3.7.0 (v3.7.0:1bf9cc5093, Jun 27 2018, 04:06:47),</p>
<pre><code>&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt; x = "2018-10-18T16:39:57+08:00"
&gt;&gt;&gt; y = datetime.strptime(x,"%Y-%m-%dT%H:%M:%S%z")
&gt;&gt;&gt; print(y)
</code></pre>
<p><strong>Output,</strong></p>
<pre><code>2018-10-18 16:39:57+08:00
</code></pre>
</div>
