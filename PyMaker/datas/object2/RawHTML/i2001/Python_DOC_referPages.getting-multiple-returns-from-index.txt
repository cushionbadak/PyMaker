<div class="post-text" itemprop="text">
<p>I'm working on a hangman game in Python. My "answer" list contains all the letters of the word in order, the "work" list starts off with dashes for each letter, which are then populated with correct letters.</p>
<p>When using index(), it only returns the lowest position in the list that the value appears. However, I need a way to make all instances of the value be returned (otherwise repeating letters aren't getting filled in).</p>
<p>I'm new to Python, so I'm not sure if some kind of loop is best, or if there is a different function to get the result I'm looking for. I've looked at enumerate() but I'm not sure how this would work in this instance. </p>
<pre><code>if guess in word:
    print("Correct!")

    for i in range(count):
        work[answer.index(guess)] = [guess]

    print(work)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you mentioned the problem is that <code>index</code> returns only the first occurrence of the character in the string. In order to solve your problem you need to iterate over <code>answer</code> and get the indices of the characters equal to <code>guess</code>,  something like this (using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a>):</p>
<pre><code>guess = 'l'
word = "hello"
work = [""] * len(word)
answer = list(word)

if guess in word:
    print("Correct!")
    for i, c in enumerate(answer):
        if c == guess:
            work[i] = guess
    print(work)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>Correct!
['', '', 'l', 'l', '']
</code></pre>
<p>Note that <code>work</code> is slightly different from what you put on the comments.</p>
<p><strong>Further:</strong></p>
<ol>
<li><a href="https://stackoverflow.com/questions/6294179/how-to-find-all-occurrences-of-an-element-in-a-list">How to find all occurrences of an element in a list?</a></li>
</ol>
</div>
<span class="comment-copy">can you give an example input and desired output? I'm not sure I fully understand what you're trying to do.</span>
<span class="comment-copy">So, currently, if the generated word was "hello", answer would look like ["h", "e", "l", "l", "o"] and work would look like ["<i>", "</i>", "<i>," "</i>", "_"]. As it stands, if the user guessed "l", the index would return 3, and the third item in the work list would be populated with "l". However, the second "l" is never given, so won't be populated</span>
<span class="comment-copy">index method can be given an offset to start the search see <code>help(str.index)</code>. Use the last match position+1 to advance.</span>
