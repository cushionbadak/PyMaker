<div class="post-text" itemprop="text">
<p>New to python neural networks and sklearn, i wrote the following neural model. On a train set, it works nicely around 98% accuracy.
Now i have some questions.</p>
<pre><code>from sklearn.ensemble import GradientBoostingClassifier
model = GradientBoostingClassifier(learning_rate=0.99,max_depth=3)
model.fit(X_standardized, y)
predictions = model.predict(X_standardized)

from sklearn.metrics import confusion_matrix, classification_report
print(confusion_matrix(y, predictions))
print ()
print(classification_report(y,predictions))
</code></pre>
<p>Can the state of the neural network be saved and loaded.<br/>
ea store the weights gradients.</p>
<pre><code>#something like:
Model.save("c:\neural\testnet.xml")
</code></pre>
<p>How to perform individual tests on a single data frame ea:</p>
<pre><code>print ("answer =" ,Model.TestSample(test_data_frame))  # single input
   &gt;&gt;&gt; answer = 0.78     ...estimated accuracy 97%  # or so
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Regarding saving the state of the model: you can save the model using <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a> package, e.g.:</p>
<pre><code>import pickle
pickle.dump(model, open('model.sav', 'wb'))
</code></pre>
<p>Not sure what you mean by 'individual tests on a single data frame', but if you want to test the model on some different (test) data, you can just create something like that:</p>
<pre><code>import sklearn
df_predictions = model.predict( *input X data* )
accuracy = sklearn.metrics.r2_score(*target (y data)*, df_predictions)
</code></pre>
</div>
<span class="comment-copy">use <code>joblib</code> to save model</span>
