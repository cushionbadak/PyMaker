<div class="post-text" itemprop="text">
<p>The docs for <code>file.read()</code> say: </p>
<pre><code>    Notice that when in non-blocking mode, less data than what was requested
    may be returned, even if no size parameter was given.
</code></pre>
<p>Does this mean that <code>file.read()</code> isn't <em>guaranteed</em> to always return the entire contents of a text file, even though it most likely will?
If so, what would be the correct way to read an entire text file?</p>
</div>
<div class="post-text" itemprop="text">
<p>For "files" that are not regular files, if you have <em>specifically turned on</em> the mode where <code>file.read()</code> doesn't try to read everything, then <code>file.read()</code> might not read everything.</p>
<p>The docs specify non-blocking mode. Non-blocking mode is a mode that can be set on a <a href="https://en.wikipedia.org/wiki/File_descriptor" rel="nofollow noreferrer">file descriptor</a> in Unix, that only has an effect for "files" that represent sockets, pipes, or other communication devices. In non-blocking mode, if you try to read more data than is currently available, the file will give you what it has instead of waiting until enough data arrives.</p>
</div>
<div class="post-text" itemprop="text">
<p>Non blocking mode isn't something you'd typically use if you want the entire file, since the point of nonblocking is to get whatever data is available on the I/O you're waiting for, typically some async stream that may or may not have anything in it. </p>
<p>If it's a plain text file, you'd do something like this:</p>
<pre><code>with open("file.txt", "r") as infile:
    for line in infile:
         # something with a line of text here
         print(line)
</code></pre>
</div>
<span class="comment-copy">For clarification, which docs are you looking at? If online docs, can you provide a link? If a docstring, which docstring?</span>
<span class="comment-copy">Part of why I ask is that the file object implementation is different on different Python versions, and there are multiple file implementations even on the same Python version.</span>
<span class="comment-copy">So is there a way through Python to turn on non-blocking mode? Or is it an OS configuration?</span>
<span class="comment-copy">@AvivCohn: <a href="https://docs.python.org/3/library/os.html#os.set_blocking" rel="nofollow noreferrer"><code>os.set_blocking</code></a> and <a href="https://docs.python.org/3/library/socket.html#socket.socket.setblocking" rel="nofollow noreferrer"><code>socket.socket.setblocking</code></a>, among other ways.</span>
