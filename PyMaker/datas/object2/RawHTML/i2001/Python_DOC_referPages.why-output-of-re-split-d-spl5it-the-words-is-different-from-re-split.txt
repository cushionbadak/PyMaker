<div class="post-text" itemprop="text">
<p>I have a question regarding regular expressions in Python. I have tried to print out the result of re.split('(\d)', 'SPL5IT THE WORDS') and re.split('\d', 'SPL5IT THE WORDS'). The result is like this:</p>
<pre><code>re.split('\d', 'SPL5IT THE WORDS')
Out[20]: ['SPL', 'IT THE WORDS']

re.split('(\d)', 'SPL5IT THE WORDS')
Out[21]: ['SPL', '5', 'IT THE WORDS']
</code></pre>
<p>Why will the second one return the separator, while the first one will not?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because that's what <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer">it's documented to do</a> in the first two lines of the documentation (emphasis added):</p>
<blockquote>
<p>Split <code>string</code> by the occurrences of <code>pattern</code>. <em>If capturing parentheses are used in <code>pattern</code>, then the text of all groups in the pattern are also returned as part of the resulting list.</em></p>
</blockquote>
<p>The "why" for the feature itself is that sometimes you <em>want</em> to know what you captured, particularly when using a more complex pattern that could match all sorts of things, and you might need to adjust your code depending on what the split sequence was.</p>
<p>For the most simple example, if you want to mutate certain words in a sentence (in a sufficiently complicated way such that <code>re.sub</code> isn't a reasonable option), then reconstruct the sentence exactly as it was, but with the new words, splitting on non-alphabetic characters, or on runs of whitespace, without capturing would make it impossible to reconstruct the form of the original sentence; even without mutating any words, using simple <code>str.split</code> on runs of whitespace and just assuming it was single spaces, <code>' '.join('a\tb\nc            d\re'.split())</code> would get back <code>'a b c d e'</code>; the moment you split without capturing, you lost data. By contrast, <code>''.join(re.split(r'(\s+)', 'a\tb\nc            d\re'))</code> is lossless.</p>
<p>If you need to group <em>without</em> capturing, use non-capturing groups of the form <code>(?:PAT)</code> instead of capturing, <code>(PAT)</code>.</p>
</div>
<span class="comment-copy">I removed the duplicate status because, while <a href="https://stackoverflow.com/q/2136556/364696">the other question</a> wants to know <i>how</i> to do something, this one already knows, and asks <i>why</i> it behaves this way. I'm not sure <i>why</i> is a particularly useful question to ask, but it's not a duplicate.</span>
<span class="comment-copy">@ShadowRanger At the very least, answering the question signals that you find it useful.</span>
<span class="comment-copy">@TylerH: Eh. Or it just means I was bored and didn't mind playing link monkey to the docs.</span>
<span class="comment-copy">@TylerH: I decided it was at least a useful thing to answer why the feature exists (not just why it behaves this way), so I've updated <a href="https://stackoverflow.com/a/52845961/364696">my answer</a>.</span>
