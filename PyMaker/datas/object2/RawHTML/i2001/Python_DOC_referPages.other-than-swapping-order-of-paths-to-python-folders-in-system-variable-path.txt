<div class="post-text" itemprop="text">
<p>I can change the order to python2,3 folders in the system PATH variable. But what are other ways to do this?
<a href="https://i.stack.imgur.com/EG88R.png" rel="nofollow noreferrer"><img alt="rrr" src="https://i.stack.imgur.com/EG88R.png"/></a></p>
<p>There should be more elegant way to change versions of python i want to run.</p>
<p>e.g. in console:</p>
<blockquote>
<p>python file.py #will run python2 </p>
</blockquote>
<p>and after i change python command to use python3, it should be the same:</p>
<blockquote>
<p>python file.py #will use python3</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>I suppose you are trying to run your script with the correct interpreter depending on which python version was used. On Unix/Linux this is done with a so called “shebang” which is written in the very first line of the file. E.g.:</p>
<pre><code>#!/usr/bin/env python3.6
</code></pre>
<p>If your installation of Python3 is newer than Python 3.3 you can use the <a href="https://docs.python.org/3/using/windows.html#python-launcher-for-windows" rel="nofollow noreferrer">python launcher for windows</a>, which should be able to launch the correct version of Python depending on the shebang, even on window.</p>
<p>Also see here for more informations on <a href="https://stackoverflow.com/questions/7574453/shebang-notation-python-scripts-on-windows-and-linux">shebangs</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If your concern is what Python version is executed when calling <code>python</code> in a console, then an alias or a stub script are the two ways to go.
<a href="https://superuser.com/q/560519">This post</a> will explain you how you can do this on Windows.</p>
<p>The alias way, just like it would be on a Unix system, is to create an alias, either temporary to the session or permanent, so that <code>python</code> now means <code>C:\Python27\python</code>, or whatever version you want.</p>
<p>The script approach consists in putting a script named <code>python</code> in a directory referred to in your <code>PATH</code>, and have that script run the right version of Python.</p>
<p>I highly doubt that this will affect all the batch scripts that call <code>python</code>, but it will definitely fire the right Python when you'll type <code>python</code> in a console.</p>
<hr/>
<p>Now, if you're concerned about what version a script is executed with, you can specify an explicit version with a <a href="https://docs.python.org/3/using/windows.html#shebang-lines" rel="nofollow noreferrer">shebang line</a>, or manually select it by right-clicking the <code>.py</code> file and clicking <code>open with</code>.</p>
</div>
<span class="comment-copy">What are you trying to do exactly?</span>
<span class="comment-copy">find a way to swap versions of python, e.g. in console: 'python xx.py' - will use python2 version</span>
<span class="comment-copy">@Rightleg, i want to know how to do it the right way, other than changing order of paths in system var! there must be better way to do it</span>
<span class="comment-copy">Maybe you should tag <code>windows</code>, because in a Unix system, it's gonna be straightforward but pretty different.</span>
<span class="comment-copy">ok, i will tag it windows</span>
<span class="comment-copy">doskey.exe creates console aliases, which most people probably do not want, since they match in the console itself, not the shell, and only at the beginning of a line that's read from the console (e.g. you cannot pipe to an alias since <code>... | python</code> won't match the console alias).</span>
<span class="comment-copy">Using Python 3's py.exe launcher is one common way to run different versions of Python, and associating it with .py files (as is configured by default) is the way for scripts to support shebangs. You can also create symlinks beside each executable (e.g. python3.6.exe -&gt; python.exe) to allow running a particular version via <code>PATH</code>.</span>
