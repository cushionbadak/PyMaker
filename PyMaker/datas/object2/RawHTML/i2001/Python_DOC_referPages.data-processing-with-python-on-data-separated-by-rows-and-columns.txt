<div class="post-text" itemprop="text">
<p>I have a data that is separated by rows(date time row) as such</p>
<pre><code>01-Jan-1990 00:00:01 ABCD
A  abcde fghijk lmnopq
     hsjfne qqq                     # EDITED WITH ADDITONAL SPILL OVER DATA with \t
B abcde fghijk lmnopq
01-Jan-1990 00:00:05 ABCD
A ancfjhr sfjerhj egen
C etfhw3uh uhuefwh fewvjh dfeg efwbywgefb
D wrf fcwewe fvwefwe fwef
01-Jan-1990 00:00:07 ABCD
A wfw fbebwu
B fewhuf ifgiwejhifgj fijweij
</code></pre>
<p>Would like to clean it in a way to separate the A, B , C, etc as shown in the 1st value after the date time row as a column and the values that come after the A,B,C as another column followed by capturing the date time and input as another column. Something like this</p>
<pre><code>A,abcde fghijk lmnopq hsjfne qqq, 01-Jan-1990 00:00:01 #WOULD LIKE TO COMBINE THE SPILL DATA
B,abcde fghijk lmnopq, 01-Jan-1990 00:00:01
A,ancfjhr sfjerhj egen,01-Jan-1990 00:00:05
C,etfhw3uh uhuefwh fewvjh dfeg efwbywgefb,01-Jan-1990 00:00:05
D,wrf fcwewe fvwefwe fwefe,01-Jan-1990 00:00:05

etc etc etc
</code></pre>
<p>Would greatly appeciate if anyone can guide me along. I've try reading by doing a pattern match then to grab the following lines but unable to accomplish it.</p>
<pre><code>import re
#Log Reading

log=open("IDM.txt","r")


for line in log:
    splitLine = line.split()
    iterator = iter(splitLine)
    datematch = (re.match('^(([0-9])|([0-2][0-9])|([3][0-1])- 
   (JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)-\\d{4}$',splitLine[0]))
if datematch:
    print(line)
</code></pre>
<p>Understand that the code as above is nothing alike to what i want to achieve therefore would like you guys to help me to guide me along and to show that i've tried some stuff. Thank you for your time</p>
<p><strong>EDITED: Included the 3rd line of data to show the spill over of value from 2nd line of data with a \t tabspace before line</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>It is always a good idea to open a file using <code>with open()</code>, then you can parse the lines as you want in a list, in my case I just checked to see the first 2 characters of the line is a digit, if it is, it stores the value to be added to the desired line later:</p>
<pre><code>import csv
content = []

with open('IDM.txt','r') as f:
    lines = f.readlines()
    for idx,line in enumerate(lines):
        if line[:2].isdigit():
                date = line[:20]

        elif idx == len(lines)-1 or (line[0] != ' ' and lines[idx+1][0] != ' '):
            data = line[0] + ',' + line[1:].rstrip('\n') 
            content.append(data+ ', '+ date)  

        elif lines[idx+1][0] == ' ':
            spill = lines[idx+1].rstrip('\n').strip()
            data = line[0] + ',' + line[1:].rstrip('\n') + ' ' + spill
            content.append(data+ ', '+ date)

        else:
            pass


with open('IDMOutput.csv','w') as f:
    for line in content:
        f.write("%s\n" % line)

&gt;&gt;content
['A, abcde fghijk lmnopq hsjfne qqqqq, 01-Jan-1990 00:00:01',
 'B, abcde fghijk lmnopq, 01-Jan-1990 00:00:01',
 'A, ancfjhr sfjerhj egen, 01-Jan-1990 00:00:05',
 'C, etfhw3uh uhuefwh fewvjh dfeg efwbywgefb, 01-Jan-1990 00:00:05',
 'D, wrf fcwewe fvwefwe fwef, 01-Jan-1990 00:00:05',
 'A, wfw fbebwu, 01-Jan-1990 00:00:07',
 'B, fewhuf ifgiwejhifgj fijweij, 01-Jan-1990 00:00:07']
</code></pre>
<p>Edited: Added <code>rstrip</code> to remove <code>'\n'</code> and included <code>timestamp</code> and spill over updated in question with the output.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Another easy approach is to use a Regular Expression: <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">Regular
  Expression HOWTO</a> and <a href="https://www.geeksforgeeks.org/print-lists-in-python-4-different-ways/" rel="nofollow noreferrer">Print lists in Python</a></p>
</blockquote>
<ul>
<li>read from the <code>.txt</code> file <code>IDM.txt</code></li>
<li>removed whitespace on the left side using <code>lstrip()</code></li>
<li>created regular expression <code>pattern_num</code> for finding the match line starting with digits</li>
<li><code>log</code> string formatted per <strong>OP</strong> request</li>
<li>write the final results to <code>IDM_clean.txt</code></li>
</ul>
<hr/>
<blockquote>
<h1>Update: Final and last solution as <code>Generalization</code>:</h1>
</blockquote>
<pre><code>import re


pattern_num = re.compile(r'^[0-9]') # patter we look in the string

log_list = []


#for line in file_as_list:
file_as_list = []

lines = open("IDM.txt", "r").read().split("\n")
for i, line in enumerate(lines):
    if line.startswith(" "):
        lines[i-1] = lines[+1].strip() + " " + line.lstrip()
        lines.pop(i)
    logs = '\n'.join(lines)+"\n"

file_as_list = logs.splitlines()

for l in file_as_list:
    if re.match(pattern_num, l):
        datos = l
    else:
        info = l[0] + ', ' + l[1:].lstrip()
        log_list.append(info + ', ' + datos)

        log = '\n'.join(map(str, log_list))

open("IDM_clean.txt", "w").write(log+"\n") # write to the file the result       


print("-----------------------------------")
print(type(log))
print("------------------------------------------------------------------------")
print(log)#print the desired format
print("------------------------------------------------------------------------")
</code></pre>
<blockquote>
<pre><code>Out:
----------------------------------
&lt;class 'str'&gt;
-----------------------------------------------------------------------
A, abcde fghijk lmnopq hsjfne qqq, 01-Jan-1990 00:00:01 ABCD
B, abcde fghijk lmnopq, 01-Jan-1990 00:00:01 ABCD
A, ancfjhr sfjerhj egen, 01-Jan-1990 00:00:05 ABCD
C, etfhw3uh uhuefwh fewvjh dfeg efwbywgefb, 01-Jan-1990 00:00:05 ABCD
D, wrf fcwewe fvwefwe fwef, 01-Jan-1990 00:00:05 ABCD
A, wfw fbebwu, 01-Jan-1990 00:00:07 ABCD
B, fewhuf ifgiwejhifgj fijweij, 01-Jan-1990 00:00:07 ABCD
-----------------------------------------------------------------------
</code></pre>
</blockquote>
<p>Screen from the file:</p>
<pre><code>A, abcde fghijk lmnopq hsjfne qqq, 01-Jan-1990 00:00:01 ABCD
B, abcde fghijk lmnopq, 01-Jan-1990 00:00:01 ABCD
A, ancfjhr sfjerhj egen, 01-Jan-1990 00:00:05 ABCD
C, etfhw3uh uhuefwh fewvjh dfeg efwbywgefb, 01-Jan-1990 00:00:05 ABCD
D, wrf fcwewe fvwefwe fwef, 01-Jan-1990 00:00:05 ABCD
A, wfw fbebwu, 01-Jan-1990 00:00:07 ABCD
B, fewhuf ifgiwejhifgj fijweij, 01-Jan-1990 00:00:07 ABCD
</code></pre>
</div>
<span class="comment-copy">Hi! Thank you for your reply! It is certainly something im looking for and it gives me a direction to head towards. Just another question will be that I will be saving these output into a txt file then probably open by excel file. but excel doesnt seems to recognise " next line". Do advise!</span>
<span class="comment-copy">And also, I've updated the question with a little changes to the data. Do take a look and would appreciate if you can help with the updated question</span>
<span class="comment-copy">Can you highlight which portion you have added? And also what is your then expected output for the additional?</span>
<span class="comment-copy">I updated my answer, if you find any of the answers here useful, it will be beneficial to the community if you can accept the answer by ticking the check box below the vote buttons. ;)</span>
<span class="comment-copy">Sorry for the many updates, this should be the final 1 I can think of tonight. Hope it helps. I also included the save function in csv which you should be able to open with excel.</span>
<span class="comment-copy">Hi, thank you for your reply! But i will need to read the data from a txt file. therefore by using your method, splitlines cannot be used. :(</span>
<span class="comment-copy">Would appreciate if you are able to help with using reading of file. I've also update the question. Do take a look and thanks for your answer!!</span>
<span class="comment-copy">made all the changes based on your file modified so check the "Update 0: Final and last solution as Generalization:"</span>
<span class="comment-copy">@ThanksForHelping, your chosen answer is a particular case and wonâ€™t generalize on your data is differ from the lines you listed ... why you accepted the answer than ? You see that the other questions you posted the approach accepted as answer is not working ?</span>
