<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3594514/how-to-find-most-common-elements-of-a-list">How to find most common elements of a list?</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/2600191/how-can-i-count-the-occurrences-of-a-list-item">How can I count the occurrences of a list item?</a>
<span class="question-originals-answer-count">
                    22 answers
                </span>
</li>
</ul>
</div>
<p>Let's say I have a list like so:</p>
<pre><code>list = [0,0,1,1,1,1,1,1,1,1,3,3,3,3,5,9,9,9,9,9,9,22,22,22,22,22,22,22,22,22,22,45]
</code></pre>
<p>The top 5 reoccurring values would be:
22, 1, 9, 3, and 0.</p>
<p>What is the best way to get these values, as well as the number of times they reoccur? I was thinking of pushing the values into a new list, so that I get something like:</p>
<pre><code>new_list = [22,10, 1,8, 9,6, 3,4, 0,2]
</code></pre>
<p>With the list value being the odd index entry, and the reoccurred value being the even index entry.</p>
<p>EDIT: What is the simplest way to do this without using a library?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use collections.Counter:</p>
<pre><code>from collections import Counter


l = [0,0,1,1,1,1,1,1,1,1,3,3,3,3,5,9,9,9,9,9,9,22,22,22,22,22,22,22,22,22,22,45]

print(Counter(l).most_common())

[(22, 10), (1, 8), (9, 6), (3, 4), (0, 2), (5, 1), (45, 1)]
</code></pre>
<p>You feed it an iterable and it counts it for you. The resultings dictionaries key is the value that was counted, its value is how often it occured. (i.e. 22 was counted 10 times)</p>
<p>Doku: <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">collections.Counter(iterable)</a></p>
<hr/>
<p>Sidenote:</p>
<p>dont call variables after types or built ins, you shadow them and get problems later. Never call anything</p>
<pre><code>list, tuple, dict, set, max, min, abs, ... 
</code></pre>
<p>See: <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>collections.Counter</code> from the standard library.</p>
<pre><code>import collections

list = [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 5, 9, 9, 9, 9, 9, 9, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 45]
ctr = collections.Counter(list)
print(ctr.most_common(5))
</code></pre>
<p>outputs</p>
<pre><code>[
    (22, 10),
    (1, 8),
    (9, 6),
    (3, 4),
    (0, 2),
]
</code></pre>
</div>
<span class="comment-copy">Use <code>Counter</code> from the <code>Collections</code> module.</span>
<span class="comment-copy">Are these values sorted? See <code>collections.Counter</code> or <code>itertools.groupby</code>.</span>
<span class="comment-copy">The values are already sorted. <code>collections.Counter</code> works, but I was wondering how to do this without the use of an external library (mainly code in my own function).</span>
<span class="comment-copy">See here: <a href="https://repl.it/@SicariusNoctis/SO-counts-sorted-without-using-built-in-library-counter" rel="nofollow noreferrer">repl.it/@SicariusNoctis/â€¦</a></span>
