<div class="post-text" itemprop="text">
<p>I have the following Python code:</p>
<pre><code>import requests
import json
from bs4 import BeautifulSoup

url = requests.get('https://www.perfectimprints.com/custom-promos/20492/Beach-Balls.html')
source = BeautifulSoup(url.text, 'html.parser')

products = source.find_all('div', class_="product_wrapper")

def get_product_details(product):
  product_name = product.find('div', class_="product_name").a.text
  sku = product.find('div', class_="product_sku").text
  product_link = product.find('div', class_="product_image_wrapper").find("a")["href"]
  src = product.find('div', class_="product_image_wrapper").find('a').find("img")["src"]
  return {
      "title": product_name,
      "link": product_link,
      "sku": sku,
      "src": src
  }

all_products = [get_product_details(product) for product in products]

with open("products.json", "w") as write_file:
  json.dump(all_products, write_file)

print("Success")
</code></pre>
<p>This code works perfectly as written. The problem is I want the structure instead of</p>
<pre><code>[
  {
    "title": "12\" Beach Ball",
    "link": "/promos/PI-255-751/12-Beach-Ball.html?cid=20492",
    "sku": "  \n\t\t\t\t#PI-255-751\n\t\t\t",
    "src": "https://12f598f3b6e7e912e4cd-a182d9508ed57781ad8837d0e4f7a945.ssl.cf5.rackcdn.com/thumb/751_group.jpg"
  },
]
</code></pre>
<p>I want it to be:</p>
<pre><code>{
  "items": [
    {
      "title": "12\" Beach Ball",
      "link": "/promos/PI-255-751/12-Beach-Ball.html?cid=20492",
      "sku": "  \n\t\t\t\t#PI-255-751\n\t\t\t",
      "src": "https://12f598f3b6e7e912e4cd-a182d9508ed57781ad8837d0e4f7a945.ssl.cf5.rackcdn.com/thumb/751_group.jpg"
    },
  ]
}
</code></pre>
<p>Here's a link to what I have working in Repl.it, just so you don't have to set up your own: <a href="https://repl.it/repls/AttractiveDimpledTheory" rel="nofollow noreferrer">https://repl.it/repls/AttractiveDimpledTheory</a></p>
<p>Side note: Would love to also be able to remove all of the <code>\n</code> and <code>\t</code> in the <code>sku</code>s if possible.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here you're dumping your <code>all_products</code> list directly to JSON:</p>
<pre><code>with open("products.json", "w") as write_file:
    json.dump(all_products, write_file)
</code></pre>
<p>The JSON you want just has that list in an object. Something like</p>
<pre><code>with open("products.json", "w") as write_file:
    json.dump({'items': all_products}, write_file)
</code></pre>
<p>should do what you want.</p>
<p>Generally speaking there's a 1:1 relationship between your Python data structure and the JSON it generates. If you build the right Python data structure you'll get the right JSON. Here we're using a <code>dict</code> (which maps to a JSON object) to wrap your existing <code>list</code> (which maps to a JSON array).</p>
<blockquote>
<p>Side note: Would love to also be able to remove all of the <code>\n</code> and <code>\t</code> in the <code>sku</code>s if possible.</p>
</blockquote>
<p>Assuming you also want to remove spaces, you can just use <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str%20strip#str.strip" rel="nofollow noreferrer"><code>str.strip()</code></a>, which strips whitespace by default:</p>
<pre><code>return {
    "title": product_name,
    "link": product_link,
    "sku": sku.strip(),  # &lt;-- here
    "src": src
}
</code></pre>
</div>
<span class="comment-copy">I seriously overcomplicated that. Thank you so much!</span>
<span class="comment-copy">Thank you @Chris. I needed to wait the mandatory 2 minutes. Further question regarding the <code>.string()</code> function. What stripping when I don't want to strip all of the whitespace. For example: I have something similar to get the category name i.e. <code>Beach Balls</code> but the data I got from python is <code>\n\t\t\t\t\t\tBeach Balls</code>. As you'd imagine, I want to keep the spacing there.</span>
<span class="comment-copy">You mean you want to keep the space between <code>Beach</code> and <code>Balls</code>? That should happen by default. <code>str.strip()</code> only removes leading and trailing characters.</span>
<span class="comment-copy">Sorry, I forgot to come back and reply that I figured that. Thanks!</span>
