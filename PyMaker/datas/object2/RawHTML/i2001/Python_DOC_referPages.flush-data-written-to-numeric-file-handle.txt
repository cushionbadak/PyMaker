<div class="post-text" itemprop="text">
<p>How can I flush the content written to a file opened as a numeric file handle?</p>
<p>For illustration, one can do the following in Python:</p>
<pre><code>f = open(fn, 'w')
f.write('Something')
f.flush()
</code></pre>
<p>On the contrary, I am missing a method when doing the following:</p>
<pre><code>import os
fd = os.open(fn)
os.pwrite(fd, buffer, offset)
# How do I flush fd here?
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>os.fsync(fd)</code>. See <a href="https://docs.python.org/3/library/os.html#os.fsync" rel="nofollow noreferrer">docs</a> for <code>fsync</code>.</p>
<p>Be careful if you do <code>fsync</code> on a file descriptor obtained from a python file object. In that case you need to flush the python file object first.</p>
</div>
<span class="comment-copy">I couldn't understand isn't the second one also in python?</span>
<span class="comment-copy">@Rarblack Yes, it is.</span>
<span class="comment-copy">AFAIK, strictly speaking, <code>fsync</code> does not equal <code>flush</code>. Both are targeting different buffers / levels of buffering. The doc also states: <i>If youâ€™re starting with a buffered Python file object f, <b>first do f.flush()</b>, and <b>then do os.fsync(f.fileno())</b>, to ensure that all internal buffers associated with f are written to disk.</i></span>
<span class="comment-copy">You're right. When using file objects, CPython uses e.g. <code>BufferedWriter</code> and its <code>flush</code> doesn't do any low-level <code>fsync</code>, all it does is a low-level <code>write</code> to the raw stream. The way I understood the question was that the OP wanted to flush the contents of the file descriptor which is exactly what <code>fsync</code> does (e.g. <a href="http://man7.org/linux/man-pages/man2/fdatasync.2.html" rel="nofollow noreferrer">POSIX fsync docs</a> )</span>
