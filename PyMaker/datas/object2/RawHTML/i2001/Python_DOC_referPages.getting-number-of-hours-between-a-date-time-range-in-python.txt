<div class="post-text" itemprop="text">
<p>So I'm trying to print the total hours in intervals between a start date and an end date in python as follows:</p>
<pre><code>@app.route('/test/')
def test():

date_format = "%Y-%m-%d %H:%M:%S"
start_date_time = datetime.strptime("2018-10-16 07:00:00", date_format)
end_date_time = datetime.strptime("2018-10-18 22:00:00", date_format)

def daterange(start_date_time, end_date_time):
    for n in range(int ((end_date_time - start_date_time).days)):
        yield start_date_time + timedelta(n)

for single_date in daterange(start_date_time, end_date_time):
    def get_delta(start_date_time, end_date_time):
        delta = end_date_time - start_date_time
        return delta

# Split time in hours
delta = get_delta(start_date_time,end_date_time)
for i in range(delta.days * 24 + 1): # THIS IS ONLY CALCULATING 24HRS FROM TIME GIVEN START TIME NOT TILL THE SELECTED END TIME SO I'M ONLY GETTING AN EXACT 24 HOUR RANGE
    currtime = start_date_time + timedelta(hours=i)

    print (currtime)
return ("done")
</code></pre>
<p>By This i'm only managing to get the first 24 Hours from the selected date, but I wish to keep on counting and get all hours till the selected end date.</p>
</div>
<div class="post-text" itemprop="text">
<p>You might be overthinking it.</p>
<pre><code>from datetime import datetime, timedelta

date_format = "%Y-%m-%d %H:%M:%S"
start_date_time = datetime.strptime("2018-10-16 07:00:00", date_format)
end_date_time = datetime.strptime("2018-10-18 22:00:00", date_format)

def get_delta(l, r):
    return abs(int((l-r).total_seconds())) / 3600

for h in range(int(get_delta(start_date_time, end_date_time))):
    print((start_date_time + timedelta(0, h*3600)).strftime(date_format))
</code></pre>
</div>
<span class="comment-copy">You can always use <code>.total_seconds() / 3600</code> <a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta.total_seconds" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">But this just gives me the total amount of hours between both dates and won't print hour intervals... thanks for your help</span>
<span class="comment-copy">Ahh. That's an odd thing to do, but OK. Edited.</span>
<span class="comment-copy">ok this seems to work well, thanks for your answer. I will mark as correct, but I have one question if you can help, is it possible to loop within the dates after this and do a function for each day, ex: 16/10/2018 &gt; do something ... continue... 17/10/2018 &gt; do something .... continue ... 18/10/2018 &gt; do something. Thanks again</span>
<span class="comment-copy">Yes - you could use something like <code>new_time = start_date_time + timedelta(0, h*3600)</code> in the loop. Then <code>if new_time.hour == 0:</code> will run code every time there's a new day.</span>
<span class="comment-copy">this did the trick, thanks for your help man</span>
