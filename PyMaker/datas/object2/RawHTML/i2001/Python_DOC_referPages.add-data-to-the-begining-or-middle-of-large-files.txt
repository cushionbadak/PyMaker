<div class="post-text" itemprop="text">
<p>I need to append to the beginning or middle of a binary file and that file may be large (anywhere from 100Mb to 15Gb). Most of the answers I've seen so far either do not accommodate large files or basically rewrite the file entirely. Hoping to avoid "writing to a new file and replacing old file" method if at all possible. In my head, something like this should be able to add data from, for example, the 60th byte:</p>
<pre><code>with open('file.dat', 'ab') as f:
    f.seek(60)
    f.write(b'_hello_world_')
</code></pre>
<p>However it doesn't work as intended, rather it appends to the end of the file. Still trying to wrap my head around how the previous example fails, but using <code>io.BytesIO()</code> works in the same fashion. Hopefully I'm just overlooking something simple.</p>
</div>
<div class="post-text" itemprop="text">
<p>The filemode parameter <code>a</code> means explicitely to <strong>a</strong>ppend text at the end of the line, <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">see documentation</a>:</p>
<blockquote>
<p>and 'a' for appending (which on some Unix systems, means that all writes append to the end of the file regardless of the current seek position)</p>
</blockquote>
<p>So seeking does not help if you use <code>a</code> as a filemode parameter. But you don't have to use <code>a</code>. Simply use <code>r+</code> instead, that means to open file with the possibility to update it also (read and write):</p>
<pre><code>with open('file.dat', 'r+b') as f:
    f.seek(60)
    f.write(b"_hello_world_")    
</code></pre>
<p>I'm still not sure if this is the case for Windows, too (documentation said "<em>on some Unix systems</em>").</p>
</div>
<span class="comment-copy">Maybe you don't need Python for this. It is also possible to use <code>sed</code>, e.g.: <code>sed -ie '/^searchpattern/include some text' filename</code>. This would place some text after pattern was matched. I'm unsure if this will fit you needs (especially if you can give a start position in bytes instead of a regex), but maybe it could be helpful to look there more in detail. Using <code>sed</code> could be faster than Python, at least. Just want to mention this.</span>
<span class="comment-copy"><code>sed</code> is also being considered but the problem is that I might have Windows users down the line. The bytes offset vs regex isn't a deal breaker necessarily just a nuisance.</span>
