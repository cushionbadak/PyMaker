<div class="post-text" itemprop="text">
<p>So I've got an interesting problem that's holding me back. I've got a massive list that contains around 150 lists of length 28. Each of these small lists looks something like this:</p>
<pre><code>['A', '1', 'item', 'item', 'item', 'item', 'item', 'item', '', '', '', '', '', '', '', 'item', 'item', 'item plus text, hi there', 'item and more items', 'item ', 'item', '  item', 'item', 'item ', 'item', 'item', 'item', '']
</code></pre>
<p>It's worth pointing out that each of those items is a string that contains anything from \n characters, nothing at all, commas, etc... The first two items in each list is something like A 1, A 2, B 1, etc. My delimiter for csv files is the | character. The issue I'm having is that when I try to write this data back to a csv file I'm either only able to put the entire list as a string into the very first column on each row (meaning it looks exactly like what I've included above) or put each item on it's own row. </p>
<p>Ideally what I need to accomplish is each small list within the large list being on its own row, with each item in the small list being in it's own cell on that row. So each row would utilize columns A-AB for one list. The code I have tried looks similar to:</p>
<pre><code>with open("testFile.csv", "w") as csvfile:
    writer = csv.writer(csvfile, delimiter='|')
    for row in listOfRows: # Uses nested loops to access each item within
        for i in row:      # the small lists.
            writer.writerow([i])
</code></pre>
<p>I've tried a variation of this that writes the entire small list item but that ends up putting each small list into one cell in the first column. Anyone have any ideas on how to go about this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should be able to use the <a href="https://docs.python.org/3/library/csv.html?highlight=writer%20writerows#csv.csvwriter.writerows" rel="nofollow noreferrer"><code>writerows</code></a> function of the csvwriter class to do this all at once without a loop.</p>
<pre class="lang-py prettyprint-override"><code>with open("testFile.csv", "w") as csvfile:
    writer = csv.writer(csvfile, delimiter='|')
    writer.writerows(listOfRows)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Pandas can do this without you doing anything, really. I'll show you an example with your list just duplicated, so that you have each list in one row, utilizing columns a-ab (I think this is what you wanted):</p>
<pre><code>import pandas as pd

a = [['A', '1', 'item', 'item', 'item', 'item', 'item', 'item', '', '', '', '', '', '', '', 'item', 'item', 'item plus text, hi there', 'item and more items', 'item ', 'item', '  item', 'item', 'item ', 'item', 'item', 'item', ''],
['A', '1', 'item', 'item', 'item', 'item', 'item', 'item', '', '', '', '', '', '', '', 'item', 'item', 'item plus text, hi there', 'item and more items', 'item ', 'item', '  item', 'item', 'item ', 'item', 'item', 'item', '']]

df = pd.DataFrame(a)

df.to_csv('./Desktop/goofy.csv', index=False, sep='|')
</code></pre>
<p>Then your csv file looks like this:</p>
<p><a href="https://i.stack.imgur.com/0kfNu.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/0kfNu.png"/></a></p>
<p>Blank columns correspond to '' in the list.</p>
</div>
<span class="comment-copy">Any idea why this method puts a blank line between every other line? This may be the best solution to what I've got.</span>
<span class="comment-copy">Never mind! I used the lineterminator = '\n' to fix it. Thank you!</span>
<span class="comment-copy">Beat me to this by about 5 seconds :P but you did forget one thing, i'll suggest edit</span>
<span class="comment-copy">Pandas for everything! I wasn't entirely sure if I needed to add that, but then after rereading the question I realized he is writing out with that delimiter, so thank you for suggesting this!</span>
<span class="comment-copy">Absolutely.  I'd been trying to manage data for excel reports using c# and a less than stellar API I was previously required to use before i discovered pandas.  it really is at least a time saver, at most it's saved a number of brain cells lol</span>
<span class="comment-copy">I love this solution, very simple. Unfortunately the work computer I'm using is terrible and I can't get pandas installed on it - I would have much rather started this project using pandas in the first place. I'm going to stick with csv for now since I've used it elsewhere in this project. Marcus gave me a solution that works as well. Thank you though!</span>
<span class="comment-copy">That's great! No problem at all @MikeSassatelli I just figured I'd offer the pandas solution as well. Perhaps you could use it in the future. Marcus' answer is great.</span>
