<div class="post-text" itemprop="text">
<p>My socket sends the first message but nothing afterward.<br/>
The output in the server:</p>
<p><code>What do you want to send?</code></p>
<p><code>lol</code></p>
<p>The client receives:</p>
<p><code>From localhost got message:</code></p>
<p><code>lol</code></p>
<p>And then it doesn't want to send anything else. 
I don't get the <code>what do you want to send</code> printed anymore.</p>
<p>My code:</p>
<p><code>server.py</code> file:</p>
<pre><code>#!/usr/bin/python3
import socket

# create a socket object
serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# get local machine name
host = socket.gethostname()
print ("got host name:", host)

port = 9996
print("connecting on port:", port)

# bind to the port
serversocket.bind((host, port))
print("binding host and port")

# queue up to 5 requests
serversocket.listen(5)
print("Waiting for connection")

while True:
    clientsocket, addr = serversocket.accept()
    msg = input("what do you want to send?\n")
    clientsocket.send(msg.encode('ascii'))
</code></pre>
<p><code>client.py</code> file:</p>
<pre><code>#!/usr/bin/python3
import socket # create a socket object

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # get local machine

# name
host = socket.gethostname()
port = 9996 # connection to hostname on the port.

s.connect((host, port)) # Receive no more than 1024 bytes

while True:
    msg = s.recv(1024)
    print(msg.decode("ascii"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The client only connects once (OK) but the server waits for an incoming connection every start of the <code>while</code> loop. </p>
<p>Since there are no more connection requests by a client, the server will freeze on the second iteration.</p>
<p>If you just want to handle a single client, move <code>clientsocket, addr = serversocket.accept()</code> before the <code>while</code> loop. If you want to handle multiple clients, the standard way is to have the server accept connections inside the <code>while</code> loop and <a href="https://stackoverflow.com/questions/23828264/how-to-make-a-simple-multithreaded-socket-server-in-python-that-remembers-client">spawn a thread for each client</a>. </p>
<p>You can also use <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow noreferrer">coroutines</a>, but that may be a bit overkill if you are just starting out.</p>
</div>
<span class="comment-copy">The client only connects once (OK) but the server waits for an incoming connection every start of the <code>while</code> loop.</span>
<span class="comment-copy">OH! im so dumb! thanks alot! i finally got this working for the first time.</span>
<span class="comment-copy">@timgeb Please turn this comment into an answer.</span>
<span class="comment-copy">@GottaAimHigherPal is there still something unclear?</span>
