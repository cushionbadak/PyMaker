<div class="post-text" itemprop="text">
<p>Help, I have the following XML file that I am trying to read and extract data from, below is an extract from the xml file,</p>
<p><code>&lt;Variable name="Inboard_ED_mm" state="Output" type="double[]"&gt;17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154&lt;Properties&gt;&lt;Property name="index"&gt;25&lt;/Property&gt;&lt;Property name="description"&gt;&lt;/Property&gt;&lt;Property name="upperBound"&gt;0&lt;/Property&gt;&lt;Property name="hasUpperBound"&gt;false&lt;/Property&gt;&lt;Property name="lowerBound"&gt;0&lt;/Property&gt;&lt;Property name="hasLowerBound"&gt;false&lt;/Property&gt;&lt;Property name="units"&gt;&lt;/Property&gt;&lt;Property name="enumeratedValues"&gt;&lt;/Property&gt;&lt;Property name="enumeratedAliases"&gt;&lt;/Property&gt;&lt;Property name="validity"&gt;true&lt;/Property&gt;&lt;Property name="autoSize"&gt;true&lt;/Property&gt;&lt;Property name="userSlices"&gt;&lt;/Property&gt;&lt;/Properties&gt;&lt;/Variable&gt;</code></p>
<p>I am trying to extract the following, <code>17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154</code></p>
<p>I have worked through the example here, <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow noreferrer">xml.etree.ElementTree â€” The ElementTree XML API</a> and I can get the example to work, but when I modify the code for the above xml, the code returns nothing!</p>
<p>Here is my code,</p>
<pre><code>import xml.etree.ElementTree as ET
work_dir = r"C:\Temp\APROCONE\Python"

with open(model.xml, 'rt') as f:
    tree = ET.parse(f)
    root = tree.getroot()

for Variable in root.findall('Variable'):
    type = Variable.find('type').text
    name = Variable.get('name')
    print(name, type)
</code></pre>
<p>Any ideas? Thanks in advance for any help.</p>
<p>Edit:
Thanks to everyone who has commented. With with your advice I have had a play and a search and got the following code,</p>
<pre><code>with open(os.path.join(work_dir, "output.txt"), "w") as f:
for child1Tag in root.getchildren():
    for child2Tag in child1Tag.getchildren():
        for child3Tag in child2Tag.getchildren():
            for child4Tag in child3Tag.getchildren():
                for child5Tag in child4Tag.getchildren():
                    name = child5Tag.get('name')
                    if name == "Inboard_ED_mm":
                        print(child5Tag.attrib, file=f)
                        print(name, file=f)
                        print(child5Tag.text, file=f)
</code></pre>
<p>To return the following,</p>
<pre><code>{'name': 'Inboard_ED_mm', 'state': 'Output', 'type': 'double[]'}
Inboard_ED_mm
17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154, 17.154
</code></pre>
<p>I know, not the best code in the world, any ideas on how to streamline the code would very welcome.</p>
</div>
<div class="post-text" itemprop="text">
<p>You say the above is an "extract" of the XML file.  The structure of the XML is important.  Does the above just sit inside the root node?</p>
<pre><code>for Variable in root.findall('Variable'):
    print(Variable.get('name'), Variable.text)
</code></pre>
<p>Or does it exist somewhere deeper in the XML tree structure, at a known level?</p>
<pre><code>for Variable in root.findall('Path/To/Variable'):
    print(Variable.get('name'), Variable.text)
</code></pre>
<p>Or does it exist at some unspecified deeper level in the XML tree structure?</p>
<pre><code>for Variable in root.findall('.//Variable'):
    print(Variable.get('name'), Variable.text)
</code></pre>
<hr/>
<p>Demonstrating the last two:</p>
<pre><code>&gt;&gt;&gt; import xml.etree.ElementTree as ET
&gt;&gt;&gt; src = """
&lt;root&gt;
 &lt;SubNode&gt;
  &lt;Variable name='x'&gt;17.154, ..., 17.154&lt;Properties&gt;...&lt;/Properties&gt;&lt;/Variable&gt;
  &lt;Variable name='y'&gt;14.174, ..., 15.471&lt;Properties&gt;...&lt;/Properties&gt;&lt;/Variable&gt;
 &lt;/SubNode&gt;
&lt;/root&gt;"""
&gt;&gt;&gt; root = ET.fromstring(src)
&gt;&gt;&gt; for Variable in root.findall('SubNode/Variable'):
        print(Variable.get('name'), Variable.text)


x 17.154, ..., 17.154
y 14.174, ..., 15.471
&gt;&gt;&gt;
&gt;&gt;&gt; for Variable in root.findall('.//Variable'):
        print(Variable.get('name'), Variable.text)


x 17.154, ..., 17.154
y 14.174, ..., 15.471
</code></pre>
<hr/>
<p><strong>Update</strong></p>
<p>Based on your new/clearer/updated question, you are looking for:</p>
<pre><code>for child in root.findall("*/*/*/*/Variable[@name='Inboard_ED_mm']"):
    print(child.attrib, file=f)
    print(child.get('name'), file=f)
    print(child.text, file=f)
</code></pre>
<p>or</p>
<pre><code>for child in root.findall(".//Variable[@name='Inboard_ED_mm']"):
    print(child.attrib, file=f)
    print(child.get('name'), file=f)
    print(child.text, file=f)
</code></pre>
<p>With the exact tagnames of tags 1 through 4 are, we could give you a more exact XPath, instead of relying on <code>*/*/*/*/</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your root node is already the <code>Variable</code> tag, so you won't find anything with a <code>Variable</code> tag with <code>findall</code>, which can only search for child nodes. You should simply output the <code>text</code> attribute of the root node instead:</p>
<pre><code>print(root.text)
</code></pre>
</div>
<span class="comment-copy"><i>"below is an extract from the xml file"</i> - The problem could be that <code>Variable</code> is in a default namespace. Do you have a <code>xmlns="???"</code> anywhere in the XML that's not shown?</span>
<span class="comment-copy">@Daniel Haley, thanks for responding, sorry bit no I can not find 'xmlns' in the file.</span>
<span class="comment-copy">thanks for your response, after a bit of playing and searching it sits deep in the root node! I have added the code in the original question.</span>
<span class="comment-copy">Ah - you are looking for the <code>Variable</code> tag with an exact <code>name</code> attribute.   There is an XPath for that.  See update.</span>
<span class="comment-copy">thanks for you response, you answer has helped me find a solution.</span>
