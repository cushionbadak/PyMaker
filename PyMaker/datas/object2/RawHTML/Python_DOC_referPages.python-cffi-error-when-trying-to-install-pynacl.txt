<div class="post-text" itemprop="text">
<p>I am trying to build a shared library using a C extension file but first I have to generate the output file using the command below:</p>
<pre class="lang-none prettyprint-override"><code>gcc -Wall utilsmodule.c -o Utilc
</code></pre>
<p>After executing the command, I get this error message:</p>
<blockquote>
<p>utilsmodule.c:1:20: fatal error: Python.h: No such file or directory
  compilation terminated.</p>
</blockquote>
<p>in fact I have tried all the suggested solutions over the internet but the problem still exists ... also I have no problem with <code>Python.h</code>. I managed to locate the file on my machine ... anybody has faced the same problem before??</p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you haven't properly installed the header files and static libraries for python dev.  Use your package manager to install them system-wide.  </p>
<p>For <code>apt</code> (<strong>Ubuntu, Debian...</strong>):</p>
<pre><code>sudo apt-get install python-dev   # for python2.x installs
sudo apt-get install python3-dev  # for python3.x installs
</code></pre>
<p>For <code>yum</code> (<strong>CentOS, RHEL...</strong>):</p>
<pre><code>sudo yum install python-devel   # for python2.x installs
sudo yum install python34-devel   # for python3.4 installs
</code></pre>
<p>For <code>dnf</code> (<strong>Fedora...</strong>):</p>
<pre><code>sudo dnf install python2-devel  # for python2.x installs
sudo dnf install python3-devel  # for python3.x installs
</code></pre>
<p>For <code>zypper</code> (<strong>openSUSE...</strong>):</p>
<pre><code>sudo zypper in python-devel   # for python2.x installs
sudo zypper in python3-devel  # for python3.x installs
</code></pre>
<p>For <code>apk</code> (<strong>Alpine...</strong>):</p>
<pre><code># This is a departure from the normal Alpine naming
# scheme, which uses py2- and py3- prefixes
sudo apk add python2-dev  # for python2.x installs
sudo apk add python3-dev  # for python3.x installs
</code></pre>
<p>For <code>apt-cyg</code> (<strong>Cygwin...</strong>):</p>
<pre><code>apt-cyg install python-devel   # for python2.x installs
apt-cyg install python3-devel  # for python3.x installs
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>On Ubuntu, I was running Python 3 and I had to install </p>
<pre><code>sudo apt-get install python3-dev
</code></pre>
<p>If you want to use a version of Python that is not linked to python3, install the associated python3.x-dev package.  For example:</p>
<pre><code>sudo apt-get install python3.5-dev
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Two things you have to do.</p>
<p>Install development package for Python, in case of Debian/Ubuntu/Mint it's done with command:</p>
<pre><code>sudo apt-get install python-dev
</code></pre>
<p>Second thing is that include files are not by default in the include path, nor is Python library linked with executable by default. You need to add these flags (replace Python's version accordingly):</p>
<pre><code>-I/usr/include/python2.7 -lpython2.7 
</code></pre>
<p>In other words your compile command ought to be:</p>
<pre><code>gcc -Wall -I/usr/include/python2.7 -lpython2.7  utilsmodule.c -o Utilc 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are using a Raspberry Pi:</p>
<pre><code>sudo apt-get install python-dev
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>on Fedora run this for Python 2:</p>
<pre><code>sudo dnf install python2-devel
</code></pre>
<p>and for Python 3:</p>
<pre><code>sudo dnf install python3-devel
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are using <a href="https://tox.readthedocs.org/en/latest/">tox</a> to run tests on multiple versions of Python, you may need to install the Python dev libraries for each version of Python you are testing on.</p>
<pre><code>sudo apt-get install python2.6-dev 
sudo apt-get install python2.7-dev 
etc.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>Solution for <em>Cygwin</em></h2>
<p>You need to <strong>install the package <code>python2-devel</code> or <code>python3-devel</code></strong>, depending on the Python version you're using. </p>
<p>You can quickly install it using the <a href="https://cygwin.com/setup-x86.exe" rel="nofollow noreferrer">32-bit</a> or <a href="https://cygwin.com/setup-x86_64.exe" rel="nofollow noreferrer">64-bit</a> <code>setup.exe</code> (depending on your installation) from <a href="http://cygwin.com" rel="nofollow noreferrer">Cygwin.com</a>.</p>
<p>Example (modify <code>setup.exe</code>'s filename and Python's major version if you need):</p>
<pre><code>$ setup.exe -q --packages=python3-devel
</code></pre>
<p>You can also check my <a href="https://stackoverflow.com/a/23143997/971141">other answer</a> for a few more options to install Cygwin's packages from the command-line.</p>
</div>
<div class="post-text" itemprop="text">
<p>In AWS API (centOS) its </p>
<pre><code>yum install python27-devel
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For me, changing it to this worked:</p>
<pre><code>#include &lt;python2.7/Python.h&gt;
</code></pre>
<p>I found the file <code>/usr/include/python2.7/Python.h</code>, and since <code>/usr/include</code> is already in the include path, then <code>python2.7/Python.h</code> should be sufficient.</p>
<p>You could also add the include path from command line instead - <code>gcc -I/usr/lib/python2.7</code> (thanks @erm3nda).</p>
</div>
<div class="post-text" itemprop="text">
<p>AWS EC2 install running python34:</p>
<p><code>sudo yum install python34-devel</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Make sure that the Python dev files come with your OS.</p>
<p>You should not hard code the library and include paths. Instead, use pkg-config, which will output the correct options for your specific system:</p>
<pre><code>$ pkg-config --cflags --libs python2
-I/usr/include/python2.7 -lpython2.7
</code></pre>
<p>You may add it to your <em>gcc</em> line:</p>
<pre><code>gcc $(pkg-config --cflags --libs python2) -Wall utilsmodule.c -o Utilc
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In my case, what fixed it in Ubuntu was to install the packages <code>libpython-all-dev</code> (or <code>libpython3-all-dev</code> if you use Python 3).</p>
</div>
<div class="post-text" itemprop="text">
<p>It's not the same situation, but it also works for me and now I can use <strong>SWIG</strong> with <strong>Python3.5</strong>:</p>
<p>I was trying to compile:</p>
<pre><code>gcc -fPIC -c existe.c existe_wrap.c -I /usr/include/python3.5m/
</code></pre>
<p><strong>With Python 2.7 works fine, not with my version 3.5:</strong></p>
<blockquote>
<p>existe_wrap.c:147:21: fatal error: Python.h: No existe el archivo o el
  directorio compilation terminated.</p>
</blockquote>
<p><strong>After run in my Ubuntu 16.04 installation:</strong></p>
<pre><code>sudo apt-get install python3-dev  # for python3.x installs
</code></pre>
<p><strong>Now I can compile without problems Python3.5:</strong></p>
<pre><code>gcc -fPIC -c existe.c existe_wrap.c -I /usr/include/python3.5m/
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you use a virtualenv with a 3.6 python (edge right now), be sure to install the matching python 3.6 dev <code>sudo apt-get install python3.6-dev</code>, otherwise executing <code>sudo python3-dev</code> will install the python dev 3.3.3-1, which won't solve the issue.</p>
</div>
<div class="post-text" itemprop="text">
<p>I managed to solve this issue and generate the .so file in one command </p>
<pre><code>gcc -shared -o UtilcS.so
-fPIC -I/usr/include/python2.7 -lpython2.7  utilsmodule.c
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try apt-file. It is difficult to remember the package name where the missing file resides. It is generic and useful for any package files.</p>
<p>For example:</p>
<pre><code>root@ubuntu234:~/auto# apt-file search --regexp '/Python.h$'
pypy-dev: /usr/lib/pypy/include/Python.h
python2.7-dbg: /usr/include/python2.7_d/Python.h
python2.7-dev: /usr/include/python2.7/Python.h
python3.2-dbg: /usr/include/python3.2dmu/Python.h
python3.2-dev: /usr/include/python3.2mu/Python.h
root@ubuntu234:~/auto# 
</code></pre>
<p>Now you can make an expert guess as to which one to choose from.</p>
</div>
<div class="post-text" itemprop="text">
<p>For the OpenSuse comrades out there:</p>
<pre><code>sudo zypper install python3-devel
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For CentOS 7:   </p>
<pre class="lang-sh prettyprint-override"><code>sudo yum install python36u-devel
</code></pre>
<p>I followed the instructions here for installing python3.6 on several VMs: <a href="https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-centos-7" rel="noreferrer">https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-centos-7</a>
and was then able to build mod_wsgi and get it working with a python3.6 virtualenv</p>
</div>
<div class="post-text" itemprop="text">
<p>I also encountered this error when I was installing coolprop in ubuntu. </p>
<p>For ubuntu 16.04 with python 3.6 </p>
<pre><code>sudo apt-get install python3.6-dev
</code></pre>
<p>If ever this doesn't work try installing/updating <code>gcc</code> lib.</p>
<pre><code>sudo apt-get install gcc
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This error occurred when I attempted to install ctds on CentOS 7 with Python3.6. I did all the tricks mentioned here including <code>yum install python34-devel</code>.  The problem was <code>Python.h</code> was found in <code>/usr/include/python3.4m but not in /usr/include/python3.6m</code>.  I tried to use <code>--global-option</code> to point to include dir (<code>pip3.6 install --global-option=build_ext --global-option="--include-dirs=/usr/include/python3.4m" ctds</code>).  This resulted in a <code>lpython3.6m</code> not found when linking ctds.</p>
<p>Finally what worked was fixing the development environment for Python3.6 needs to correct with the include and libs.</p>
<pre><code>yum -y install https://dl.iuscommunity.org/pub/ius/stable/CentOS/7/x86_64/python36u-libs-3.6.3-1.ius.centos7.x86_64.rpm
</code></pre>
<p>Python.h needs to be in your include path for gcc.  Whichever version of python is used, for example if it's 3.6, then it should be in <code>/usr/include/python3.6m/Python.h</code> typically.</p>
</div>
<div class="post-text" itemprop="text">
<p>Sure <code>python-dev</code> or <code>libpython-all-dev</code> are the first thing to (<code>apt</code> )<code>install</code>, but if that doesn't help as was my case, I advice you to install the <em>foreign Function Interface</em> packages by <code>sudo apt-get install libffi-dev</code> and <code>sudo pip install cffi</code>.</p>
<p>This should help out especially if you see the error as/from <code>c/_cffi_backend.c:2:20: fatal error: Python.h: No such file or directory</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It often appear when you trying to remove <code>python3.5</code> and install <code>python3.6</code>.</p>
<p>So when using <code>python3</code> (which <code>python3 -V</code> =&gt; <code>python3.6</code>) to install some packages required <code>python3.5</code> header will appear this error.</p>
<p>Resolve by install <code>python3.6-dev</code> module.</p>
</div>
<div class="post-text" itemprop="text">
<p>Sometimes even after installing python-dev the error persists,
Check for the error if it is 'gcc' missing.</p>
<p>First download as stated in <a href="https://stackoverflow.com/a/21530768/8687063">https://stackoverflow.com/a/21530768/8687063</a>, then install gcc</p>
<p><strong>For apt (Ubuntu, Debian...):</strong></p>
<pre><code>sudo apt-get install gcc
</code></pre>
<p><strong>For yum (CentOS, RHEL...):</strong></p>
<pre><code>sudo yum install gcc
</code></pre>
<p><strong>For dnf (Fedora...):</strong></p>
<pre><code>sudo dnf install gcc
</code></pre>
<p><strong>For zypper (openSUSE...):</strong></p>
<pre><code>sudo zypper in gcc
</code></pre>
<p><strong>For apk (Alpine...):</strong></p>
<pre><code>sudo apk gcc
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This means that <code>Python.h</code> isn't in your compiler's default include paths. Have you installed it system-wide or locally? What's your OS?</p>
<p>You could use the <code>-I&lt;path&gt;</code> flag to specify an additional directory where your compiler should look for headers. You will probably have to follow up with <code>-L&lt;path&gt;</code> so that gcc can find the library you'll be linking with using <code>-l&lt;name&gt;</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're using Python 3.6 on Amazon Linux (based on RHEL, but the RHEL answers given here didn't work):</p>
<pre><code>sudo yum install python36-devel
</code></pre>
</div>
<span class="comment-copy">Which system are you in? Include gcc version and architecture...</span>
<span class="comment-copy">if you use python3 maybe this answer could help you to solve <a href="http://stackoverflow.com/a/33062410/2216956">stackoverflow.com/a/33062410/2216956</a></span>
<span class="comment-copy">If it does not work even after installing the required package as per wim answer (<a href="https://stackoverflow.com/a/21530768/3559967">stackoverflow.com/a/21530768/3559967</a>), it could be a path issue. Check the <code>-I&lt;path&gt;</code> parameter to gcc. See the accepted answer for an example: <a href="https://stackoverflow.com/a/21548557/3559967">stackoverflow.com/a/21548557/3559967</a></span>
<span class="comment-copy">Someone please help here.Same problem but inside docker container python virtualenv. [<a href="https://stackoverflow.com/questions/53738715/gcc-error-in-python-virtual-environment-in-docker]" title="gcc error in python virtual environment in docker%5d">stackoverflow.com/questions/53738715/…</a></span>
<span class="comment-copy">for opensuse, install "python3-devel"</span>
<span class="comment-copy">for centos yum install python-devel</span>
<span class="comment-copy">Try <code>locate Python.h</code> and see if you already have the file before you do all this. If you can find the file located, mostly this answer will work: stackoverflow.com/a/19344978/4954434 (It might be just a path issue)</span>
<span class="comment-copy">@Hack-R and others if you have Python 2.6 <i>and</i> 2.7 installed, "python-devel" will only install the dev libraries for 2.6. To force it to install the 2.7 libraries, use <code>sudo yum install python27-devel</code></span>
<span class="comment-copy">I'm using python3.6 on 14.04 <code>apt-get install python3.6-dev</code> worked for me.</span>
<span class="comment-copy">I ran the command <code>sudo apt-get install python3.4-dev</code> for my Python3.4 and this solved my problem.</span>
<span class="comment-copy">@Rawrgulmuffins well it depends which version of python you are using. In my case <code>sudo apt-get install python2.7-dev</code> fixed the problem</span>
<span class="comment-copy">I'd add one more thing to this answer - if you have multiple Python 3.x versions, <code>python3-dev</code> will install dependencies for that version which is linked to <code>python3</code> command. So, if you want to install for a specific version, use the full version like - <code>python3.x-dev</code>.</span>
<span class="comment-copy">This helped with python 3.6.3 on Ubuntu 14.04 <code>sudo apt-get install python3.6-dev</code></span>
<span class="comment-copy">If running a version of Python inside a virtual environment that is different to your system Python, this.</span>
<span class="comment-copy">do I have to add flags for each included file in the C extension file ??</span>
<span class="comment-copy">If you are using another version of Python, 3.3 for example: sudo apt-get install python3.3-dev</span>
<span class="comment-copy">I'd recommend using <code>pkg-config</code> instead of a raw <code>-I</code>: <a href="https://stackoverflow.com/a/21531170/895245">stackoverflow.com/a/21531170/895245</a></span>
<span class="comment-copy">This works for any apt based distribution :) +1</span>
<span class="comment-copy">My CentOS applys this command successfully</span>
<span class="comment-copy">On Mint 18.2 (Ubuntu based), it was <code>apt-get install python-dev</code>.</span>
<span class="comment-copy">This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post - you can always comment on your own posts, and once you have sufficient <a href="http://stackoverflow.com/help/whats-reputation">reputation</a> you will be able to <a href="http://stackoverflow.com/help/privileges/comment">comment on any post</a>.</span>
<span class="comment-copy">@Wtower Yes, it does provide an answer.</span>
<span class="comment-copy">It does provide an answer. Although you have to substitute the version for what you need.</span>
<span class="comment-copy">this helped overcome my issues attempting to <code>pip install cryptography</code> on an amazon linux instance.</span>
<span class="comment-copy">This was a helpful answer, while it is possible to install python-devel or python2-devel on Amazon Linux, this is the only one that actually worked for me when running a pip install inside a virtualenv</span>
<span class="comment-copy">All the other answers tell you to install something. This one worked for me. Why isn't this the top answer?</span>
<span class="comment-copy">@ uoɥʇʎPʎzɐɹC  Maybe because it won't run under python3 ?</span>
<span class="comment-copy">It is better to set the lib at <code>gcc -I/usr/lib/python2.7 etc</code> rather than hardcode the include calls.</span>
<span class="comment-copy">@noɥʇʎԀʎzɐɹƆ Because it should work without changing the code. You often need to compile a code not owned by you, some external dependency for example, and the worst thing you can do is to modify that code.</span>
<span class="comment-copy">@DawidFerenczy Understod.</span>
<span class="comment-copy"><code>python-all-dev</code> in my case, but close enough.</span>
<span class="comment-copy">@Oriol Nieto, Thank you very much. python-all-dev also solved the issue for me.</span>
<span class="comment-copy">This worked for me on Raspbian.</span>
<span class="comment-copy">Worked great for me on 3.5(.2), too. Explicitly installing the right dev package for your version of Python is a Good Thing.</span>
<span class="comment-copy">omg, I struggled with this for SO long because I had run <code>python3-dev</code> many times and kept getting the same error, but didn't know about <code>python3.6-dev</code>!! Thanks!!</span>
<span class="comment-copy">Not sure why there is a -1 but this is a problem as of today for python3.6 with CentOS as python36-devel is not available.  You will need to install it from the URL above.</span>
<span class="comment-copy">sudo pip3 install cffi              (# for python3)</span>
