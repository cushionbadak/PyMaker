<div class="post-text" itemprop="text">
<p>So I have a script that has date arguments for different functions and I want it to loop through <code>01-01-2012</code> to <code>06-09-2012</code> not including weekends. Im trying to figure out a way I can use time delta because my script outputs files with the date used in the name of the file for example:</p>
<pre><code>items = (functions.getItems(item,date)
    print items
    test = sum(abs(l[-1]) for l in items)
    total = open('total' +str(datetime.today- datetime.timedelta(1)),'a')
</code></pre>
<p>I want timedelta(1) to cycle through each date so that the output file would have the format of <code>total2012-01-01</code> for the first day and cycle through until it created the file <code>total2012-06-09</code>. Also the date argument for items has the format of <code>MM-DD-YYYY</code></p>
<p>I thought that I could do this: </p>
<pre><code>sd = 01-01-2012
ed = 06-09-2012
delta = datetime.timedelta(days=1)
diff = 0
while sd != ed
    # do functions 
    # (have output files (datetime.today - datetime.delta(diff))
    diff +=1
    sd+=delta
</code></pre>
<p>So essentially I'm just trying to figure out how can I loop through having the function start with <code>01-01-2012</code> and ending with <code>06-10-2012</code> excluding weekends. I'm having trouble figuring out how to exclude weekends and how to get it to loop in the proper order</p>
<p>Thanks </p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="http://docs.python.org/library/datetime.html#datetime.date.weekday" rel="noreferrer"><code>datetime.weekday()</code></a> method. It returns values between zero and six, related to the weekdays. Saturday value is 5 and Sunday value is 6; so, if you skip the operation when these values appear, you skip weekdends:</p>
<pre><code>start = datetime(2012, 1, 1)
end = datetime(2012, 10, 6)
delta = timedelta(days=1)
d = start
diff = 0
weekend = set([5, 6])
while d &lt;= end:
    if d.weekday() not in weekend:
        diff += 1
    d += delta
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>@brandizzi's answer is more syntactically aesthetic but as an alternative you can use the following</p>
<pre><code>start = datetime(2012, 1, 1)
end = datetime(2012, 10, 6)
delta = timedelta(days=1)
d = start
diff = 0
SATURDAY = 5
while d &lt;= end:
    if d.weekday() &lt; SATURDAY:
        diff += 1
        d += delta
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is easier way to do this using  <code>freq = 'B'</code> for <code>business day frequency</code>. </p>
<pre><code>import pandas as pd
dt = pd.date_range(start=datetime.date.today(), periods=10, freq='B')
dt
</code></pre>
<p>which gives you :</p>
<pre><code>DatetimeIndex(['2018-08-13', '2018-08-14', '2018-08-15', '2018-08-16',
               '2018-08-17', '2018-08-20', '2018-08-21', '2018-08-22',
               '2018-08-23', '2018-08-24'],
              dtype='datetime64[ns]', freq='B')
</code></pre>
<p>you check name of day also by:</p>
<pre><code>dt.weekday_name

Index(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Monday',
       'Tuesday', 'Wednesday', 'Thursday', 'Friday'],
      dtype='object')
</code></pre>
</div>
<span class="comment-copy">Please avoid using dates in the format MM-DD-YYYY. It is very confusing since the elements are neither in increasing nor in decreasing order of magnitude. Furthermore, it to easy to mix it up with DD-MM-YYYY, which is the second most reasonable date format after the ISO-standard YYYY-MM-DD.</span>
<span class="comment-copy">I agree with @Celada, use the ISO format if possible. If that isn't possible, please use <code>/</code> instead of <code>-</code> as a separator to reduce the confusion.</span>
<span class="comment-copy">its gives this error dear 'TypeError: 'module' object is not callable'</span>
<span class="comment-copy">@PriyanRockZ you probably imported it as <code>import datetime</code>. Try to use <code>from datetime import datetime</code> instead.</span>
<span class="comment-copy">thanks dear friend brandizzi.its solved :-)</span>
<span class="comment-copy">@mrbTT documentation says <a href="https://docs.python.org/3/library/datetime.html#datetime.date.weekday" rel="nofollow noreferrer">Monday is 0 and Sunday is 6</a>, the <a href="https://docs.python.org/2/library/datetime.html#datetime.date.weekday" rel="nofollow noreferrer">same as Python 2</a>. Of course, we can always test it, but I wonder why they would change that, especially to count the days backward :)</span>
