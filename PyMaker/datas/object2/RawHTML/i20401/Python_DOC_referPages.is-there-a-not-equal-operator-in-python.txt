<div class="post-text" itemprop="text">
<p>How would you say does not equal?</p>
<p>Like </p>
<pre><code>if hi == hi:
    print "hi"
elif hi (does not equal) bye:
    print "no hi"
</code></pre>
<p>Is there something equivalent to <code>==</code> that means "not equal"?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>!=</code>. See <a href="http://docs.python.org/release/2.5.2/lib/comparisons.html" rel="noreferrer">comparison operators</a>. For comparing object identities, you can use the keyword <code>is</code> and its negation <code>is not</code>.</p>
<p>e.g.</p>
<pre><code>1 == 1 #  -&gt; True
1 != 1 #  -&gt; False
[] is [] #-&gt; False (distinct objects)
a = b = []; a is b # -&gt; True (same object)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not equal  <code>!=</code>  (vs equal <code>==</code>)</p>
<p>Are you asking about something like this?</p>
<pre><code>answer = 'hi'

if answer == 'hi':     # equal
   print "hi"
elif answer != 'hi':   # not equal
   print "no hi"
</code></pre>
<p>This <a href="http://www.tutorialspoint.com/python/python_basic_operators.htm" rel="noreferrer">Python - Basic Operators</a> chart might be helpful.</p>
</div>
<div class="post-text" itemprop="text">
<p>There's the <code>!=</code> (not equal) operator that returns <code>True</code> when two values differ, though be careful with the types because <code>"1" != 1</code>. This will always return True and <code>"1" == 1</code> will always return False, since the types differ. Python is dynamically, but strongly typed, and other statically typed languages would complain about comparing different types.</p>
<p>There's also the <code>else</code> clause:</p>
<pre><code># This will always print either "hi" or "no hi" unless something unforeseen happens.
if hi == "hi":     # The variable hi is being compared to the string "hi", strings are immutable in Python, so you could use the 'is' operator.
    print "hi"     # If indeed it is the string "hi" then print "hi"
else:              # hi and "hi" are not the same
    print "no hi"
</code></pre>
<p>The <code>is</code> operator is the <em>object identity</em> operator used to check if two objects in fact are the same:</p>
<pre><code>a = [1, 2]
b = [1, 2]
print a == b # This will print True since they have the same values
print a is b # This will print False since they are different objects.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Seeing as everyone else has already listed most of the other ways to say not equal I will just add:</p>
<pre><code>if not (1) == (1): # This will eval true then false
    # (ie: 1 == 1 is true but the opposite(not) is false)
    print "the world is ending" # This will only run on a if true
elif (1+1) != (2): #second if
    print "the world is ending"
    # This will only run if the first if is false and the second if is true
else: # this will only run if the if both if's are false
    print "you are good for another day"
</code></pre>
<p>in this case it is simple switching the check of positive == (true) to negative and vise versa...</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use both <code>!=</code> or <code>&lt;&gt;</code>.</p>
<p>However, note that <code>!=</code> is preferred where <code>&lt;&gt;</code> is deprecated.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two operators in Python for the "not equal" condition -</p>
<p>a.) != If values of the two operands are not equal, then the condition becomes true.
    (a != b) is true.</p>
<p>b.) &lt;&gt; If values of the two operands are not equal, then the condition becomes true.
    (a &lt;&gt; b) is true. This is similar to the != operator.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>!=</code> or <code>&lt;&gt;</code>. Both stands for not equal.</p>
<p>The comparison operators <code>&lt;&gt;</code> and <code>!=</code> are alternate spellings of the same operator. <code>!=</code> is the preferred spelling; <code>&lt;&gt;</code> is obsolescent. [Reference: Python language reference]</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply do:</p>
<pre><code>if hi == hi:
    print "hi"
elif hi != bye:
     print "no hi"
</code></pre>
</div>
<span class="comment-copy">Are you asking about <code>else</code>, <code>!=</code> (optionally <code>&lt;&gt;</code>) or <code>is not</code>?</span>
<span class="comment-copy">Attention that &lt;&gt; doesn't work any more in python 3, so use !=</span>
<span class="comment-copy">from python documentation: <code>Python3 : The operators &lt;, &gt;, ==, &gt;=, &lt;=, and != compare the values of two objects.</code> <a href="https://docs.python.org/3/reference/expressions.html#value-comparisons" rel="nofollow noreferrer">docs.python.org/3/reference/expressions.html#value-comparisons</a></span>
<span class="comment-copy">from python documentation:  <code>python2: </code> <a href="https://docs.python.org/2/reference/expressions.html#not-in" rel="nofollow noreferrer">docs.python.org/2/reference/expressions.html#not-in</a></span>
<span class="comment-copy"><code>&lt;&gt;</code> is not removed from Python 3. Checkout <code>PEP401</code> and try <code>from __future__ import barry_as_FLUFL</code> lol~</span>
<span class="comment-copy">How would you compare two binary data?</span>
<span class="comment-copy">@Masi: <code>==</code> and <code>!=</code> work fine for binary data...</span>
<span class="comment-copy"><code>&lt;&gt;</code> was removed in Python 3. In any case, this answer doesn't provide any new information.</span>
<span class="comment-copy">this answer is basically a copy of the one @user128364 gave before.</span>
<span class="comment-copy">What value would you assign to the variables <code>hi</code> and <code>bye</code>? Whatever it would be, the elif clause would never be reached. Lastly, this example does not clearly provide an answer to the question.</span>
