<div class="post-text" itemprop="text">
<p>What if I want to include a single batch command that isn't already in a file in python?</p>
<p>for instance:</p>
<pre><code>REN *.TXT *.BAT
</code></pre>
<p>Could I put that in a python file somehow?</p>
</div>
<div class="post-text" itemprop="text">
<p>The "old school" answer was to use <a href="http://docs.python.org/3/library/os.html#os.system" rel="noreferrer"><code>os.system</code></a>. I'm not familiar with Windows but something like that would do the trick:</p>
<pre><code>import os
os.system('ren *.txt *.bat')
</code></pre>
<p>Or (maybe)</p>
<pre><code>import os
os.system('cmd /c ren *.txt *.bat')
</code></pre>
<hr/>
<p>But now, as noticed by Ashwini Chaudhary, the "recommended" <a href="http://docs.python.org/3/library/subprocess.html#replacing-os-system" rel="noreferrer">replacement for <code>os.system</code></a> is <a href="http://docs.python.org/3/library/subprocess.html#subprocess.call" rel="noreferrer"><code>subprocess.call</code></a></p>
<p>If <code>REN</code> is a Windows shell <em>internal</em> command:</p>
<pre><code>import subprocess
subprocess.call('ren *.txt *.bat', shell=True)
</code></pre>
<p>If it is an <em>external</em> command:</p>
<pre><code>import subprocess
subprocess.call('ren *.txt *.bat')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this:</p>
<pre><code>cmd /c ren *.txt *.bat
</code></pre>
<p>or</p>
<pre><code>cmd /c "ren *.txt *.bat"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A example use subprocess for execute a command of Linux from Python:</p>
<pre><code>mime = subprocess.Popen("/usr/bin/file -i " + sys.argv[1], shell=True, stdout=subprocess.PIPE).communicate()[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I created a <code>test.py</code> containing this, and it worked....</p>
<pre><code>from subprocess import Popen    # now we can reference Popen
process = Popen(['cmd.exe','/c ren *.txt *.tx2'])
</code></pre>
</div>
<span class="comment-copy">What exactly are you trying to do here? rename all <code>.txt</code> files to <code>.bat</code>?</span>
<span class="comment-copy">Prefer <code>subprocess</code> module for such tasks and this is mentioned in the <code>os.system</code>'s docs as well.</span>
<span class="comment-copy">@AshwiniChaudhary For "advanced" use (like capturing output) you are right. For basic usage, system does a decent job ;) Anyway, I'm not sure how will behave "subprocess" while invoking internal shell commands. You have to invoke <code>subprocess.call</code> with <code>shell=True</code>, right? I edit my answer accordingly. Thanks to pointing that out!</span>
<span class="comment-copy"><code>shell = True</code> can be dangerous and is not recommended generally, use <code>shlex.split</code> : <code>subprocess.call(shlex.split('ren *.txt *.bat'))</code></span>
<span class="comment-copy">@AshwiniChaudhary I agree that <code>shell=True</code> could be dangerous when invoking user-provided commands (<a href="http://en.wikipedia.org/wiki/Code_injection#Shell_injection" rel="nofollow noreferrer">shell command injection</a>) -- but I don't think we are in that situation here. The "shell command" seems to be provided by the programmer. And (I'm not sure about that) if 'REN' is actually an <i>internal</i> Windows shell command -- you will need a shell.</span>
<span class="comment-copy"><code>shell = True</code> doesn't means the command has to be a shell command, it is required when you're passing a single string to <code>subprocess</code>. <a href="http://docs.python.org/2/library/subprocess.html#frequently-used-arguments" rel="nofollow noreferrer">docs.python.org/2/library/â€¦</a></span>
