<div class="post-text" itemprop="text">
<p>I'm currently writing validation code for a tool parameter in ArcMap 10 (updateMessages) and need to prevent users from using non-alphanumeric characters within a string as it will be used to name a newly created field in a feature class.</p>
<p>I have so far used 'str.isalnum()' however this of course excludes underscores. Is there an efficient way to only accept alphanumeric characters and underscores?  </p>
<pre><code>if self.params[3].altered:
  #Check if field name already exists
  if str(self.params[3].value) in [f.name for f in arcpy.ListFields(str(self.params[0].value))]:
    self.params[3].setErrorMessage("A field with this name already exists in the data set.")
  #Check for invalid characters
  elif not str(self.params[3].value).isalnum():
    self.params[3].setErrorMessage("There are invalid characters in the field name.")   
  else:
    self.params[3].clearMessage()

return
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
if re.match(r'^\w+$', text):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try regular expressions:</p>
<pre><code>import re
if re.match(r'^[A-Za-z0-9_]+$', text):
    # do stuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are using Python3 and there are non-ASCII characters in your string it is better to compile the regex with 8-bit string setting. </p>
<pre><code>import sys
import re

if sys.version_info &gt;= (3, 0):
    _w = re.compile("^\w+$", re.A)
else:
    _w = re.compile("^\w+$")

if re.match(_w, text):
    pass
</code></pre>
<p>For more information please refer to <a href="https://docs.python.org/3/howto/regex.html#compilation-flags" rel="nofollow noreferrer">here</a>.</p>
</div>
<span class="comment-copy">PEP8 â€” one statement in one line -&gt; <code>\npass</code> :)</span>
<span class="comment-copy">@PeterVaro if it suits your fancy ;) I use one line <code>if</code>s for very simple statements though</span>
<span class="comment-copy">Thanks! BTW it's not about fanciness -&gt; if these "example" and "answer" codes here, on StackOverflow, will use the <i>"good code format"</i>, then we will teach these conventions to anyone, who is starting programming, or not familiar with python. And actually, our job is going to be easier: reading a well-formatted code is always a pleasure.</span>
<span class="comment-copy">@PeterVaro Of course, but also note that PEP-8 is like the Pirate's code <i>"the Code is more what you'd call guidelines than actual rules."</i>, I follow it <b>almost fully</b> however sometimes I notice situations where a one line <code>if</code> is beneficial to the code. In this case I see you are correct to promote two lines though</span>
<span class="comment-copy">@PaulKenjora Wrong. <code>\w When the LOCALE and UNICODE flags are not specified, matches any alphanumeric character and the underscore</code> <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">docs.python.org/2/library/re.html</a></span>
<span class="comment-copy">Right, missed the alpha part. :)</span>
<span class="comment-copy"><code>re.match</code> matches from the start so <code>^</code> is redundant</span>
<span class="comment-copy">I believe it is good practice to be specific when it comes to regular expressions. This way the expression is portable, too.</span>
<span class="comment-copy">then you should use <code>re.search</code></span>
