<div class="post-text" itemprop="text">
<p>I am scraping an XML file and returning a load of percentages, pulled out directly as a percentage sometimes negative with the % sign already attached e.g. </p>
<pre><code>-38%
-2%
4%
25%
</code></pre>
<p>I am trying to do a filter such as this: </p>
<pre><code>if percentage &lt; 20.0 : continue;
</code></pre>
<p>However I cannot perform this filter, I assume as a result of the % symbol. </p>
<p>For reference I use:</p>
<pre><code>cell['roi']
</code></pre>
<p>To get the percentages, iterating through each row using: </p>
<pre><code>for row in xmlload1['rows']:
    cell = row["cell"]
</code></pre>
<p>How do I get around this % symbol? Is there an easy way?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't perform that filter because you're trying to compare a string (like <code>"4%"</code>) to a float (<code>20.0</code>). In Python 3, this will raise a <code>TypeError</code>; in Python 2, it will "work", but all strings will be treated as greater than the number <code>20.0</code>, so it won't do any good.</p>
<p>You need to convert the string to a float before you can use it as a float. But you don't want to convert the <em>whole</em> string, just the part before the <code>"%"</code> character. (Because <code>4%</code> isn't a number, it's only the <code>4</code> that's a number.)</p>
<p>So, let's do it in two steps: use <a href="http://docs.python.org/3/library/stdtypes.html#str.rstrip"><code>rstrip</code></a> to remove the <code>"%"</code>, then use <a href="http://docs.python.org/3/library/functions.html#float"><code>float</code></a> to convert it to a float.</p>
<pre><code>cell = float(row["cell"].rstrip("%"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can pass a string to <code>strip</code> which will strip the characters passed in the passed string, the below will strip %, newlines and spaces:</p>
<pre><code>cell = int(row["cell"].strip("%\n "))
</code></pre>
</div>
<span class="comment-copy">Please show the actual code that you tried and the exception that you got (with traceback), instead of just saying that you can't get the code to work.</span>
<span class="comment-copy">Also, as a side note: You don't need semicolons at the end of lines in Python, and shouldn't use them. At best, it's visual noise; at worst, it confuses people into trying to guess what you were trying to do that required the unusual semicolon.</span>
<span class="comment-copy">Both answers the same, but I gave you the accepted answer because I really appreciate it when people take the time to explaning the logic, I am new to coding, and this was really useful.</span>
<span class="comment-copy">For my actuall code, which contains more than just these percentages, It wasnt appropriate to use <code>cell = float(row["cell"].rstrip("%"))</code> instead I used the following, <code>roi = cell['roi']         roi_without_percentage_symbol = int(roi.strip("%\n "))         if roi_without_percentage_symbol &lt; 20.0 : continue;</code></span>
<span class="comment-copy">@AEA: That makes sense. Although for cases like this, I often do it in two steps: <code>roi.strip().rstrip("%")</code>. In English: remove all extraneous whitespace from both sides, so I know I've got exactly <code>"4%"</code>, then remove the <code>"%"</code>. Also, if you're converting to <code>int</code> instead of <code>float</code>, you really should check <code>&lt; 20</code> instead of <code>&lt; 20.0</code>, because <code>20 &lt; 20.0</code> isn't guaranteed to be false.</span>
<span class="comment-copy">Hi thanks for the prompt reply, just for expanding my python knowledge what does the \n function do. Kind regards AEA</span>
<span class="comment-copy"><code>\n</code> is not a function. it is the representation of a new line character.</span>
