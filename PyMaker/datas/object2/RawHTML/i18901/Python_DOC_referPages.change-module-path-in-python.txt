<div class="post-text" itemprop="text">
<p>I have a project like that :</p>
<pre><code>foo/
    | main.py
    | bar/
    | | __init__.py
    | | module1.py
    | | module2.py
</code></pre>
<p>And I import module1.py in main.py by <code>import bar.module1</code>.
But I need rewrite bar's function and keep old code. So I change project like that:</p>
<pre><code>foo/
| main.py
| bar/
| | __init__.py
| | oldbar/
| | | module1.py
| | | module2.py
| | | __init__.py
| | newbar/
| | | module1.py
| | | module2.py
| | | __init__.py
</code></pre>
<p>Now, I do not want to change main.py, and I still use <code>import bar.module1</code> in main.py.
Can I do it? add some code into <code>bar/__init__.py</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>In <code>foo/bar/__init__.py</code> you can write:</p>
<pre><code>from subbar import module1
from subbar import module2
</code></pre>
<p>this should allow you to use <code>import bar.module1</code> from <code>main.py</code></p>
</div>
<span class="comment-copy">Do You mean <code>from subbar import module1</code>? (Be careful mind a cyclic import)</span>
<span class="comment-copy">oleg, I change my question, thank you</span>
<span class="comment-copy">rxdazn, I try it, but it does not work</span>
<span class="comment-copy">works for me... tested with your updated version <a href="https://gist.github.com/rxdazn/5780497" rel="nofollow noreferrer">gist.github.com/rxdazn/5780497</a> (just updated gist a few seconds ago, reload it)</span>
<span class="comment-copy">Yes. if I use <code>from bar import module1</code>, it works. But, if I use <code>import bar.module1</code>, it does not work</span>
<span class="comment-copy">importing will execute <code>__init__.py</code> files in sub folders (see [<a href="http://docs.python.org/3/reference/import.html#regular-packages](Python" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a> - The import system: regular packages). This means <code>bar/__ini__.py</code> will be executed once <code>bar</code> is imported. By using <code>import bar.module1</code>, <code>bar/__init__.py</code> is not loaded so it does not know <code>bar/newbar/module1</code> exists. Either use <code>from bar import module1</code> with <code>module1.hello()</code> or <code>import bar</code> with <code>bar.module1.hello()</code></span>
<span class="comment-copy">Oh, I see. Is there any method to do it except adding code in <code>__init__.py</code> file?</span>
