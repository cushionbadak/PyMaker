<div class="post-text" itemprop="text">
<p>I am attempting to write a grammar for a small language utility using the python library <a href="https://github.com/erikrose/parsimonious" rel="nofollow">parsimonious</a>, but I am struggling with writing a part, which covers strings, especially strings with escaped quotes and other special characters.</p>
<p>I have the following:</p>
<pre><code>string         = doubleString / singleString
doubleString   = "\"" escapedString "\""
singleString   = "'" escapedString "'"
</code></pre>
<p><code>escapedString</code> is as if yet undefined, but should accept anything one would reasonably expect a string in a programming language to accept. I cannot think of where to begin. Does anyone have any suggestions?</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't know parsimonious's syntax, but in a regex-style one I'd do something like:</p>
<pre><code>string         = doubleString / singleString
doubleString   = ~'"([^"]|(\"))*"'
singleString   = ~"'([^']|(\'))*'"
</code></pre>
<p>i.e. you'd need a different escaped string for each kind of string, each made of a possibly empty sequence of either characters that are not the end quote char or escaped end quote chars.</p>
</div>
<div class="post-text" itemprop="text">
<p>You may want to do two things here.  The first is adding the prefix <code>r</code> before your string.  The other thing you would probably want to do is use triple quotes i.e <code>"""</code>.  The use of the prefix will make it so that escape sequences in strings are "interpreted according to rules similar to those used by Standard C".  The second is to take care of any extra quotes/apostrophes that would otherwise make your string quit early.</p>
<p>Consider the following example:</p>
<pre><code>string = r"""this %is m%y crazy s"\tri""'""ng\s\n%\d\\r''\'"""
print string
</code></pre>
<p>This may not work if there are also triple quotes in the string you are feeding thou; I'm not sure how one goes about dealing with that. </p>
</div>
<span class="comment-copy">Maybe you can get ideas from the string specifications of other languages. <a href="http://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">Here</a> is Python's.</span>
<span class="comment-copy">I'm not dealing with python strings, but with attempting to write a grammar to parse strings similar to python strings in an arbitary string with the use of the library linked.</span>
