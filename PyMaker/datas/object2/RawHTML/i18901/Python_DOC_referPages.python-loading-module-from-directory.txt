<div class="post-text" itemprop="text">
<p>Why python load my module from directory, even if the directory shouldn't be treated as a package (doesn't contains <code>__init__.py</code>)? </p>
<pre><code>app
  main.py
  fake_module
    module.py
</code></pre>
<p>this works, even if <code>fake_module</code> doesn't contains <code>__init__.py</code></p>
<pre><code>import fake_module.module
</code></pre>
<p>If i would create regular <code>fake_module</code> with <code>__init__.py</code> and <code>module.py</code> file somewhere in <code>sys.path</code>, will be <code>module.py</code> loaded from this regular <code>fake_module</code> package?</p>
<p>I am using pycharm and python3.3</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like <a href="http://docs.python.org/3/whatsnew/3.3.html#pep-420-implicit-namespace-packages" rel="noreferrer">the <code>__init__.py</code> is optional</a> as of Python 3.3. See also <a href="http://www.python.org/dev/peps/pep-0420/" rel="noreferrer">PEP420</a>.</p>
</div>
<span class="comment-copy">Are you 100% certain that you are looking at the <b>right</b> fake_module? What does <code>print fake_module.module.__file__</code> give you?</span>
<span class="comment-copy">@MartijnPieters: it gives that app/fake_module/module.py</span>
<span class="comment-copy">@JBernardo: no i didn't</span>
<span class="comment-copy">@Krab: and <code>print fake_module.__file__</code> prints what?</span>
<span class="comment-copy">@Krab: What does <code>print type(fake_module)</code> give?</span>
<span class="comment-copy">Bingo, I forgot about the new implicit namespaces support in 3.3.</span>
