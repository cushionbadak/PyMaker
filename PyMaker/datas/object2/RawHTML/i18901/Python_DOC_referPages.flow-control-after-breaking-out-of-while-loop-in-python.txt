<div class="post-text" itemprop="text">
<p>I am pretty new to both programming and Python. A few times now, I have created what feels like an awkward program flow,  and I am wondering if I am following best practices. This is conceptually what I have wanted to do:</p>
<pre><code>def pseudocode():
    while some condition is true:
        do some stuff
        if a condition is met:
            break out of the while loop
    now do a thing once, but only if you never broke out of the loop above 
</code></pre>
<p>What I've ended up doing works, but feels off somehow:</p>
<pre><code>def pseudocode():
    while some condition is true:
        do some stuff
        if some condition is met:
            some_condition_met = True
            break out of the while loop

    if some_condition_met is False:
        do a thing
</code></pre>
<p>Is there a better way?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for <a href="http://docs.python.org/2/reference/compound_stmts.html#while"><code>while-else</code></a> loop:</p>
<pre><code>def pseudocode():
    while some condition is true:
        do some stuff
        if a condition is met:
            break out of the while loop
    else:
        now do a thing once, but only if you never broke out of the loop above 
</code></pre>
<p>From docs:</p>
<pre><code>while_stmt ::=  "while" expression ":" suite
                ["else" ":" suite]
</code></pre>
<blockquote>
<p>A <code>break</code> statement executed in the first suite terminates the loop
  without executing the <code>else</code> clause’s suite.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Use an <code>else</code> clause to the <code>while</code> loop:</p>
<pre><code>while some_condition:
    do_stuff()
    if a_condition_is_met:
        break
else:
    executed_when_never_broken
</code></pre>
<p>See the <a href="http://docs.python.org/3/reference/compound_stmts.html#the-while-statement" rel="nofollow"><code>while</code> statement documentation</a>:</p>
<blockquote>
<p>A <code>break</code> statement executed in the first suite terminates the loop without executing the <code>else</code> clause’s suite.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>If you think about it, you might already have a perfectly good condition to use without setting a flag: the condition at the top of the while loop (or, rather, the <code>not</code> of it). Assuming you don't change the truthiness of your condition during the same iteration as a <code>break</code>, this gives you:</p>
<pre><code>while something:
    do_stuff()
    if something_else:
        break
if not something:
   more_stuff()
</code></pre>
<p>This makes sense if you think of <code>while</code> as a repeated <code>if</code>: instead of happening once, a while <em>keeps going</em> until the condition becomes falsey.</p>
<p>But, like the other answers have mentioned, the analogy goes further: just like you don't have to spell all your <code>if</code>s as </p>
<pre><code>if a:
    a_stuff()
if not a:
    b_stuff()
</code></pre>
<p><code>while</code> accepts an <code>else</code> that is executed if the condition at the top is tested and found to be falsey. So,</p>
<pre><code>while something:
    do_stuff()
    if something_else:
       break
else:
    more_stuff()
</code></pre>
<p>And, same as the <code>if</code>/<code>else</code> case, this doesn't imply any further tests of the condition than what would happen anyway. In the same way that an <code>else</code> attached to <code>if a</code> won't run if the true-branch makes <code>a</code> falsey, an <code>else</code> attached to a <code>while</code> will never run after a <code>break</code> since that explicitly skips ever checking the condition again. This makes the <code>else:</code> equivalent to a decicated flag in every case.</p>
<p>This also extends to <code>for</code> loops, even though the analogy breaks - but it executes under similar enough rules: the <code>else</code> is run if the loop ends by having run its course rather than hitting a <code>break</code>.</p>
</div>
<span class="comment-copy">Whoa, did not now that existed (obviously!). Thx.</span>
<span class="comment-copy">Note that the <code>else:</code> clause and the <code>if not something</code> test can subtly differ. If the <code>while</code> loop condition becomes <code>False</code> during the loop <b>and</b> you use <code>break</code> during that same iteration, then the <code>else:</code> suite will not execute, but your <code>if</code> suite will.</span>
<span class="comment-copy">@MartijnPieters very true. I've edited the answer to account for that.</span>
