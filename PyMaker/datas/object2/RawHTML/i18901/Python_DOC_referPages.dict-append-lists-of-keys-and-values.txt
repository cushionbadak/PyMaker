<div class="post-text" itemprop="text">
<p>Is there an efficient way to append elements in a dict from a list of keys and a list of values, in same order ?</p>
<p>For now, i iterate in a for loop on elements in lists, and do</p>
<pre><code>dictio[key] = val
</code></pre>
<p>for each pair. Is there a built in function ? I am with 3.3.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, use <a href="http://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip()</code></a>:</p>
<pre><code>dictio = dict(zip(keys, values))
</code></pre>
<p>or use <code>.update()</code> to add items to an existing dictionary:</p>
<pre><code>dictio.update(zip(keys, values))
</code></pre>
<p>The <code>zip()</code> function pairs up two iterables into a sequence of tuples, which both <a href="http://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow"><code>dict()</code></a> and <a href="http://docs.python.org/3/library/stdtypes.html#dict.update" rel="nofollow"><code>dict.update()</code></a> happily turn into key-value pairs:</p>
<pre><code>&gt;&gt;&gt; keys = ('foo', 'bar')
&gt;&gt;&gt; values = ('spam', 'eggs')
&gt;&gt;&gt; list(zip(keys, values))
[('foo', 'spam'), ('bar', 'eggs')]
&gt;&gt;&gt; dict(zip(keys, values))
{'bar': 'eggs', 'foo': 'spam'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use dict comprehension:</p>
<pre><code>dictio.update({k:v for k,v in zip(keys, values)})
</code></pre>
</div>
<span class="comment-copy">I think answer should be <code>dictio.update(dict(zip(keys, values)))</code></span>
<span class="comment-copy">@oleg why? <code>dict</code> and <code>dict.update</code> takes iterable pairs or another <code>dict</code>... So completely pointless building a dict first</span>
<span class="comment-copy">This creates an extra dict, which is not needed. Moreover, because you don't <i>do</i> anything with the key and value in the loop, the dict comprehension is entirely redundant too. You could just do <code>.update(zip(keys, values))</code> directly and save a loop.</span>
