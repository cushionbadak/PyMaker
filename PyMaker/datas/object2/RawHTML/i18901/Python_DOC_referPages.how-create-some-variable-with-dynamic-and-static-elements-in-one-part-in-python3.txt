<div class="post-text" itemprop="text">
<p>How can i create some variables with dynamic and static elements in one part together in python loop? Something like this:</p>
<p>Static part: <code>self.var_li_</code>. Dynamic part: <code>da</code></p>
<pre><code>for da in range(10):
   self.var_li_da = da
</code></pre>
<p>And my output would be:</p>
<pre><code>var is : self.var_li_1 and value : 1
var is : self.var_li_2 and value : 2
var is : self.var_li_3 and value : 3
var is : self.var_li_4 and value : 4
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/3/library/functions.html#setattr" rel="nofollow"><code>setattr</code></a>:</p>
<pre><code>for da in range(10):
    setattr(self, 'var_li_{}'.format(da), da)
</code></pre>
</div>
<span class="comment-copy">Thx, solved!! i use setattr this way :for da in range(10):     setattr(self, 'var_li_%s' %da, da) and not work, can i ask why ?</span>
<span class="comment-copy">@alireza.m Glad it helped :) I prefer <code>format</code> instead of <code>%</code> for string interpolation, but both ways work for me in Python 3.3.</span>
<span class="comment-copy">thx, maybe i was wrong, i found this way too and it's work, but this way is right to use (because of exec)? <a href="http://stackoverflow.com/a/7422918/1170846">stackoverflow.com/a/7422918/1170846</a></span>
<span class="comment-copy">@alireza.m The problem with <code>exec</code> is that you can execute arbitrary code, and that is something risky when you use string interpolation. Here it doesn't matter, but <code>setattr</code> is more natural in this context (setting an object attribute).</span>
