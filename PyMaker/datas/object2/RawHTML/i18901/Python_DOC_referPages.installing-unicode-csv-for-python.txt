<div class="post-text" itemprop="text">
<p>I'm new to github and I'm trying to install unicodecsv (<a href="https://github.com/jdunck/python-unicodecsv" rel="nofollow">https://github.com/jdunck/python-unicodecsv</a>).</p>
<p>I'm trying </p>
<pre><code>sudo pip install -e git://github.com/jdunck/python-unicodecsv.git#egg=unicodecsv
</code></pre>
<p>But I'm getting an error message. I'm probably doing someone basic wrong, can someone help?</p>
<pre><code>Obtaining unicodecsv from git+git://github.com/jdunck/python-unicodecsv.git#egg=unicodecsv
  Cloning git://github.com/jdunck/python-unicodecsv.git to ./src/unicodecsv
  Running setup.py egg_info for package unicodecsv
    Traceback (most recent call last):
      File "&lt;string&gt;", line 14, in &lt;module&gt;
      File "/Users/dave/Dropbox/Promoter/working/src/unicodecsv/setup.py", line 5, in &lt;module&gt;
        version = __import__('unicodecsv').__version__
      File "unicodecsv/__init__.py", line 49
        except TypeError, e:
                        ^
    SyntaxError: invalid syntax
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File "&lt;string&gt;", line 14, in &lt;module&gt;

  File "/Users/dave/Dropbox/Promoter/working/src/unicodecsv/setup.py", line 5, in &lt;module&gt;

    version = __import__('unicodecsv').__version__

  File "unicodecsv/__init__.py", line 49

    except TypeError, e:

                    ^

SyntaxError: invalid syntax

----------------------------------------
Command python setup.py egg_info failed with error code 1
Storing complete log in /Users/dave/.pip/pip.log
Davids-MacBook-Air:working dave$ sudo pip install -e git://github.com/jdunck/python-unicodecsv.git#egg=unicodecsv
Obtaining unicodecsv from git+git://github.com/jdunck/python-unicodecsv.git#egg=unicodecsv
  Updating ./src/unicodecsv clone
^[  Running setup.py egg_info for package unicodecsv
    Traceback (most recent call last):
      File "&lt;string&gt;", line 14, in &lt;module&gt;
      File "/Users/dave/Dropbox/Promoter/working/src/unicodecsv/setup.py", line 5, in &lt;module&gt;
        version = __import__('unicodecsv').__version__
      File "unicodecsv/__init__.py", line 49
        except TypeError, e:
                        ^
    SyntaxError: invalid syntax
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File "&lt;string&gt;", line 14, in &lt;module&gt;

  File "/Users/dave/Dropbox/Promoter/working/src/unicodecsv/setup.py", line 5, in &lt;module&gt;

    version = __import__('unicodecsv').__version__

  File "unicodecsv/__init__.py", line 49

    except TypeError, e:

                    ^

SyntaxError: invalid syntax

----------------------------------------
Command python setup.py egg_info failed with error code 1
Storing complete log in /Users/dave/.pip/pip.log
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you're using Python 3.0 or later, and trying to use a library which is only compatible with 2.7 and earlier.</p>
<p>The specific problem is the line the traceback points at:</p>
<pre><code>except TypeError, e:
</code></pre>
<p>This syntax was deprecated in 2.6, in favor of (more flexible and more consistent) new syntax:</p>
<pre><code>except TypeError as e:
</code></pre>
<p>In 3.0 and later, the deprecated syntax is no longer allowed at all.</p>
<p>So, if you want to use this library, someone will have to port it—you, the author, or someone else. It may just be a matter of running <a href="http://docs.python.org/3/library/2to3.html" rel="nofollow"><code>2to3</code></a>, or fixing each <code>except</code> statement manually—but it may be a lot more to do than that, especially considering this library is all about Unicode.</p>
<hr/>
<p>However, it's worth noting that Python 3.x doesn't have the same problem as 2.x did. You can pass the <code>csv</code> module text/Unicode file objects, and it will just handle them. Adapting the example from the <code>unicodecsv</code> docs:</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; from io import StringIO
&gt;&gt;&gt; f = StringIO()
&gt;&gt;&gt; w = csv.writer(f)
&gt;&gt;&gt; w.writerow(('é', 'ñ'))
&gt;&gt;&gt; f.seek(0)
&gt;&gt;&gt; r = csv.reader(f)
&gt;&gt;&gt; row = r.next()
&gt;&gt;&gt; print row[0], row[1]
é ñ
</code></pre>
<p>Note that I didn't even have to specify <code>utf-8</code>, because <code>StringIO</code> is a Unicode <code>str</code> buffer, not a <code>bytes</code> buffer. You don't have to worry about coding at all.</p>
<hr/>
<p>If you didn't even know you were running Python 3.x (as in, you knew you installed it, but you were careful to keep Apple's pre-installed  Python 2.7 higher on the PATH), there are three common reasons this can happen.</p>
<ul>
<li><p>Apple's Python doesn't come with <code>pip</code>; all of the popular Python 3.x installers and packages do. So, if you haven't installed <code>pip</code> for 2.7, the only one you have is 3.x.</p></li>
<li><p>Apple's Python installs scripts like <code>pip</code> to <code>/usr/local/bin</code>. So do some of the popular Python 3.x installers and packages. So, whichever you installed more recently wins. (The 3.x one should also be available as <code>/usr/local/bin/pip3</code>, so overwriting its <code>/usr/local/bin/pip</code> with 2.7's is usually fine… unless <code>pip3</code> is a symlink to <code>pip</code>.)</p></li>
<li><p><code>sudo</code> deliberately discards most of your user environment, so 2.7 may be higher on your <code>PATH</code> when running as yourself, but not when running with <code>sudo</code>.</p></li>
</ul>
</div>
<span class="comment-copy">What version of Python are you using? Or, in particular, what version of Python is the first <code>pip</code> command on your <code>PATH</code> using?</span>
<span class="comment-copy">Also, out of curiosity, why are you installing this off github, instead of just installing the latest released version on PyPI with <code>pip install unicodecsv</code>?</span>
<span class="comment-copy">1) Python 2.7.2.  2) pip install unicodecsv gives me the same error.</span>
<span class="comment-copy">Are you sure your <code>pip</code> is using Python 2.7.2? What do <code>which pip</code> and <code>head -1 $(which pip)</code> say? What about <code>sudo which pip</code>? (For the other one, I didn't expect it to do anything different, I was just wondering whether you have any good reason to install out of github instead of installing the released package. If not, you're just making things more complicated for no good reason.)</span>
<span class="comment-copy">You are correct. I installed pip for 2.7 and it works great now. Thanks!!!</span>
<span class="comment-copy">That's not what the new syntax looks like.</span>
<span class="comment-copy">@IgnacioVazquez-Abrams: Oops, I originally wrote about the new <code>raise</code> and <code>except</code> syntax, then decided that was more detail than necessary and removed the <code>raise</code> parts, then edited it incorrectly. Thanks for the catch!</span>
<span class="comment-copy">Thanks very much for this. The issue I have is that I am reading data from the CSV with ? replacing special characters. For example, "São Paulo" reads as "S?o Paulo".</span>
<span class="comment-copy">@DavidBailey: Yes, in Python 2.7 the module is useful; that's why I said "Python 3.x doesn't have the same problem as 2.x did". Most likely, your <code>python</code> is actually <code>/usr/bin/python</code>, which is 2.7.2, while your <code>pip</code> is <code>/usr/local/bin/pip</code> or <code>/Library/Frameworks/Python.framework/Versions/3.3/bin/pip</code> is something, which is 3.3, which is going to confuse you. That's why I wrote a whole section on this in the answer, which you should read.</span>
<span class="comment-copy">Sorry, reread and installed pip for 2.7, now have safely installed. Thanks and my bad.</span>
