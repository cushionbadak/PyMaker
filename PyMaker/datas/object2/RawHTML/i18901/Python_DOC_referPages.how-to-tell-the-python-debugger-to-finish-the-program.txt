<div class="post-text" itemprop="text">
<p>I have recently come across a VERY cool Python module called <a href="http://docs.python.org/3/library/pdb.html" rel="nofollow">pdb</a>. For those that are not familiar with it, it is super easy to use and gives you access to pretty much anything within scope at the time. All you have to do to use it is <code>import pdb</code> and put this line in your program where you want to set the breakpoint:</p>
<pre><code>pdb.set_trace()
</code></pre>
<p>It works very much like <code>gdb</code>, and I wouldnt be surprised if it was built on top to some extent. Anyway, what I would like to know:</p>
<p>Say I have stopped at my first breakpoint, evaluated some things, and now I want to finish my program. How can I tell the debugger to finish the program, WITHOUT stopping at any more breakpoints? There are some commands, like <code>continue</code>, <code>step</code>, and <code>next</code>, but none of these seem to run the rest of the program uninterrupted. Anyone have some experience with this or am I asking for something that doesnt exist? Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>I would just override pdb.set_trace function, delete all breakpoints and continue</p>
<pre><code>pdb.set_trace = lambda : 0
</code></pre>
<p>The good thing is that you can do monkey patching in the debugger.</p>
<pre><code>vikasdhi@redpanda:~$ cat ~/tmp/test.py
for i in range(1000):
    import pdb
    pdb.set_trace()
vikasdhi@redpanda:~$ python ~/tmp/test.py
&gt; /home/vikasdhi/tmp/test.py(1)&lt;module&gt;()
-&gt; for i in range(1000):
</code></pre>
<p>it stopped for the first time</p>
<pre><code>(Pdb) c
&gt; /home/vikasdhi/tmp/test.py(1)&lt;module&gt;()
-&gt; for i in range(1000):
(Pdb) c
&gt; /home/vikasdhi/tmp/test.py(1)&lt;module&gt;()
-&gt; for i in range(1000):
</code></pre>
<p>when i want to skip everything i just replace the function</p>
<pre><code>(Pdb) pdb.set_trace = lambda : 0
(Pdb) c
vikasdhi@redpanda:~$ 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>the command is <code>cl</code> or <code>clear</code>.</p>
<blockquote>
<p>cl(ear) [filename:lineno | bpnumber [bpnumber ...]]</p>
<p>With a filename:lineno argument, clear all the breakpoints at this line. With a space separated list of breakpoint numbers, clear those breakpoints. <strong>Without argument, clear all breaks (but first ask confirmation).</strong></p>
</blockquote>
</div>
<span class="comment-copy">You know what's cooler than <code>pdb</code>? <a href="https://pypi.python.org/pypi/ipdb" rel="nofollow noreferrer"><code>ipdb</code></a> - it gives you a lot of <code>IPython</code>'s niceness (tab completion, syntax highlighting, better tracebacks, better introspection...) that is lacking in <code>pdb</code>, and has an identical interface.</span>
<span class="comment-copy">Thanks a lot ali I like iPython also so I am definitely going to check that out!</span>
<span class="comment-copy">Hmm, I know how to use <code>lambda</code> functions, but what exactly is that doing here?</span>
<span class="comment-copy">pdb.set_trace function is not the function it was anymore. I have replaced it with a dummy function that does nothing but returns 0 all the time. So pdb.set_trace won't stop your program anymore, it will just keep returning 0 (in this case)</span>
<span class="comment-copy">May be this will help: <a href="http://stackoverflow.com/questions/5626193/what-is-monkey-patching" title="what is monkey patching">stackoverflow.com/questions/5626193/what-is-monkey-patching</a> .</span>
<span class="comment-copy">That is helpful but I still want it to enter <code>pdb</code> the first time, just not every other time after that. i.e. If I have more breakpoints, I want it to skip over them.</span>
<span class="comment-copy">One caveat: when you monkey-patch like this, <code>pdb.set_trace()</code> won't work again until you <code>reload(pdb)</code></span>
<span class="comment-copy"><code>Quit</code> quits my program, that is not what I am trying to do.</span>
<span class="comment-copy">Oh ... Sorry, I misunderstood your intention.  I'll delete the post in a minute.</span>
<span class="comment-copy">Its cool no problem</span>
<span class="comment-copy">@Houdini -- looks like you want <code>clear</code>.  See my update.</span>
<span class="comment-copy">This won't work for pdb.set_trace() as it is a hard-coded breakpoint, not the one that was set by debugger.</span>
