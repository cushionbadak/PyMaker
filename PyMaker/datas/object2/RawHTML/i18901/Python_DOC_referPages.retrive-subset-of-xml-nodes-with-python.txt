<div class="post-text" itemprop="text">
<p>xml very newbie here.</p>
<p>I have an xml file, which is quite big with this form:</p>
<pre><code>&lt;a&gt;
  &lt;b&gt;
    &lt;id&gt;1&lt;/id&gt;
    ...
  &lt;/b&gt;
  &lt;b&gt;
    &lt;id&gt;2&lt;/id&gt;
    ...
  &lt;/b&gt;
  &lt;b&gt;
    &lt;id&gt;3&lt;/id&gt;
    ...
  &lt;/b&gt;
  &lt;b&gt;
    &lt;id&gt;4&lt;/id&gt;
    ...
  &lt;/b&gt;
&lt;/a&gt;
</code></pre>
<p>In <code>b</code> there is some information I want to retrieve and I am trying to follow a python help doc.
I start with this:</p>
<pre><code>#!/usr/bin/env python

import xml.etree.ElementTree as ET

tree = ET.parse('data.xml')
root = tree.getroot()

print 'root.tag = ', root.tag
print 'root.attrib = ', root.attrib
</code></pre>
<p>but because my file is to big, it takes several minutes just to do this part.</p>
<p>What I want to do is something like this:</p>
<pre><code>for node in (n for n in nodes if n.id in ['1', '3']):
  print node.val1
  print node.val2
</code></pre>
<p>(without having to process all the nodes that don't match the id I want).</p>
<p>Is there a way of doing this?</p>
</div>
<div class="post-text" itemprop="text">
<p>ElementTree is a DOM-like parser, meaning it will first process the whole XML document and keep it in the memory, before you can navigate through the objects. This also means that you will have to wait until it is done before you can do that.</p>
<p>If your document is very large, you should look into <a href="http://en.wikipedia.org/wiki/Simple_API_for_XML" rel="nofollow">SAX parsers</a> which will only go through the document once but won’t store everything, making it very fast and memory efficient (but also more difficult to use).</p>
<p>You can also make use of ElementTree’s <a href="http://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.iterparse" rel="nofollow">iterparse</a> which will report information about elements it comes across similar to SAX parsers while it builds its internal structure. So you could read the information you want earlier and still have a complete ElementTree object in the end.</p>
</div>
<div class="post-text" itemprop="text">
<p>What you have to is use something like "Using the target parser method" E.g <a href="http://www.ibm.com/developerworks/library/x-hiperfparse/" rel="nofollow">High-performance XML parsing in Python with lxml</a> </p>
</div>
