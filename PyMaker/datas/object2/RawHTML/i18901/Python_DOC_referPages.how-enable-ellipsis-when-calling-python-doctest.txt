<div class="post-text" itemprop="text">
<p>In Python (3.3.2) doctest, ellipsis (<code>...</code>) can match any string. So, for the code below</p>
<pre><code>def foo():
    """
    &gt;&gt;&gt; foo()
    hello ...
    """
    print("hello world")
</code></pre>
<p>when running doctest it shouldn't raise any error. But</p>
<pre><code>$ python -m doctest foo.py 
**********************************************************************
File "./foo.py", line 3, in foo.foo
Failed example:
    foo()
Expected:
    hello ...
Got:
    hello world
**********************************************************************
1 items had failures:
   1 of   1 in foo.foo
***Test Failed*** 1 failures.
</code></pre>
<p>What I must do to enable the ellipis? As far as I can tell it is disable by default.</p>
<p>I know that add <code># doctest: +ELLIPSIS</code>, as in the code below, solve it, but I like to enable ellipsis for all tests.</p>
<pre><code>def foo():
    """
    &gt;&gt;&gt; foo() # doctest: +ELLIPSIS
    hello ...
    """
    print("hello world")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can pass in <code>optionflags</code> to the <a href="http://docs.python.org/3/library/doctest.html#doctest.testmod"><code>testmod</code></a> method, but this requires you to run the module itself instead of the <code>doctest</code> module:</p>
<pre><code>def foo():
    """
    &gt;&gt;&gt; foo()
    hello ...
    """
    print("hello world")

if __name__ == "__main__":
    import doctest
    doctest.testmod(verbose=True, optionflags=doctest.ELLIPSIS)
</code></pre>
<p>Output:</p>
<pre><code>$ python foo.py
Trying:
    foo()
Expecting:
    hello ...
ok
1 items had no tests:
    __main__
1 items passed all tests:
   1 tests in __main__.foo
1 tests in 2 items.
1 passed and 0 failed.
Test passed.
</code></pre>
</div>
