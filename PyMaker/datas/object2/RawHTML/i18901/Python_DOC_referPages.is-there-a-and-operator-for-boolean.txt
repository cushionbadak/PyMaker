<div class="post-text" itemprop="text">
<p>There is the "+=" operator for, namely, int.</p>
<pre><code>a = 5
a += 1
b = a == 6 # b is True
</code></pre>
<p>Is there a "and=" operator for bool?</p>
<pre><code>a = True
a and= 5 &gt; 6 # a is False
a and= 5 &gt; 4 # a is still False
</code></pre>
<p>I know, this 'and=' operator would correspond to:</p>
<pre><code>a = True
a = a and 5 &gt; 6 # a is False
a = a and 5 &gt; 4 # a is still False
</code></pre>
<p>But, I do this operation very often and I donâ€™t think it looks very neat.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes - you can use <code>&amp;=</code>.</p>
<pre><code>a = True
a &amp;= False  # a is now False
a &amp;= True   # a is still False
</code></pre>
<p>You can similarly use <code>|=</code> for "or=".</p>
<p>It should be noted (as in the comments below) that this is actually a bitwise operation; it will have the expected behavior <strong>only</strong> if <code>a</code> starts out as a Boolean, and the operations are only carried out with Booleans.</p>
</div>
<div class="post-text" itemprop="text">
<p>nrpeterson showed you how to use <code>&amp;=</code> with boolean.</p>
<p>I show only what can happend if you mix boolean and integer</p>
<pre><code>a = True
a &amp;= 0 # a is 0
if a == False : print "hello" # "hello"

a = True
a &amp;= 1 # a is 1
if a == False : print "hello" # nothing

a = True
a &amp;= 2 # a is 0 (again)
if a == False : print "hello" # "hello"

a = True
a &amp;= 3 # a is 1
if a == False : print "hello" # nothing
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could take a look at the operator library:
<a href="http://docs.python.org/3/library/operator.html" rel="nofollow">http://docs.python.org/3/library/operator.html</a></p>
<p>This allows you to do</p>
<pre><code>a = True
a = operator.iand(a, 5&gt;6) # a is False
</code></pre>
</div>
<span class="comment-copy">Do you mean only <code>1</code> or <code>0</code> values, that would be bitwise <code>and</code></span>
<span class="comment-copy">This is the closest you can get in the present language, but it's not exactly what was asked for: these operators do <i>bitwise</i> and and or.  The difference matters when the values on either side aren't strictly booleans.</span>
<span class="comment-copy"><code>&amp;=</code> is bitwise operation, but the question is asking for boolean operation, you should point out the difference.</span>
<span class="comment-copy">Is that better?</span>
<span class="comment-copy">To use it in place of <code>and=</code> just wrap any non-boolean operands in <code>bool()</code>, which is effectively what regular <code>and</code> does.</span>
<span class="comment-copy">It's nice to know this exists in <code>operator</code> module but it's not useful in most cases</span>
<span class="comment-copy">Besides, it is bitwise as well.</span>
