<div class="post-text" itemprop="text">
<p>I am still new at python so I was just wondering if it is possible to write if statements like this:</p>
<pre><code>def win_check(board, mark):

    for mark in board:
        if (mark == board [7] and mark == board [8] and mark == board [9]) or
            (mark == board [4] and mark == board [5] and mark == board [6]) or
            (mark == board [1] and mark == board [2] and mark == board [3]):
            print("you won 1") 
        elif (mark == board [7] and mark == board [4] and mark == board [1]) or
            (mark == board [8] and mark == board [5] and mark == board [2]) or
            (mark == board [9] and mark == board [6] and mark == board [3]):
            print("you won 2")
        elif (mark == board [7] and mark == board [5] and mark == board [3]) or
            (mark == board [9] and mark == board [5] and mark == board [1]) or
            (mark == board [1] and mark == board [2] and mark == board [3]):
            print("you  won 3")
        else:
            print ("game tied")
</code></pre>
<p>This is a function from a Tic-tac-toe game. As i try to run the function, it gives me an error stating</p>
<pre><code> File "&lt;ipython-input-13-94777e972072&gt;", line 4
    if (mark == board [7] and mark == board [8] and mark == board [9]) or
                                                                         ^
SyntaxError: invalid syntax
</code></pre>
<p>I'm not too sure on what this means and what is required, can anyone assist me on this and help me on my method?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't end line before statement w\o putting '\' at the end of it.
The proper way to do it is:</p>
<pre><code>for mark in board:
    if (mark == board[7] and mark == board[8] and mark == board[9]) or\
            (mark == board[4] and mark == board[5] and mark == board[6]) or\
            (mark == board[1] and mark == board[2] and mark == board[3]):
        print("you won 1") ...
</code></pre>
<p>And so on..</p>
<p>I've also removed spacing before indexing board, so it should be board[i] and not board [i]</p>
<p>Good luck!</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is that the if statement needs to be one continuous line.  Or python treats the next line as new code.  You need a backslash to escape the end of line and continue with the line under it.  </p>
<pre><code>for mark in board:
    if (mark == board[7] and mark == board[8] and mark == board[9]) \
            or (mark == board[4] and mark == board[5] and mark == board[6]) \
            or (mark == board[1] and mark == board[2] and mark == board[3]):

        print("you won 1")

    elif (mark == board[7] and mark == board[4] and mark == board[1]) \
            or  (mark == board[8] and mark == board[5] and mark == board[2]) \
            or  (mark == board[9] and mark == board[6] and mark == board[3]):
        print("you won 2")
    elif (mark == board [7] and mark == board[5] and mark == board[3]) \
            or  (mark == board[9] and mark == board[5] and mark == board[1]) \
            or (mark == board[1] and mark == board[2] and mark == board[3]):
        print("you  won 3")
    else:
        print ("game tied")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just add an extra parenthesis around the entire if expression...</p>
<pre class="lang-py prettyprint-override"><code>if (
       ((a == b) and (b == c) and (c == d))
       or ((e == f) and (f == g) and (g == h))
       or ...
       ):
   # do something here
   print('Winner')
</code></pre>
<p>That said, this is probably the wrong way entirely for you to do the code you're actually attempting.  A much more idiomatic approach might be as follows.  Keep in mind you only need to check if the current player actually won after that player moved.</p>
<pre class="lang-py prettyprint-override"><code>def detect_winner(win_value: str = 'o') -&gt; bool:
    """Determines if current player won.

    Args:
        win_value: the value to check for a win; value of current player

    Returns:
        True if winner is detected otherwise False
    """
    # Anything within a parenthesis can allow for newlines and ignore
    #  generally considered "good" and "pythonic" whitespacing
    row_win = (
        all(cell == win_value for cell in mark[1:3])
        or all(cell == win_value for cell in mark[4:6])
        or all(cell == win_value for cell in mark[7:9])
        )
    col_win = (...)
    cross_win = (...)
    possible_wins = (row_win, col_win, cross_win)
    found_a_winner = True if any(possible_wins) else False
    return found_a_winner
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/181530/styling-multi-line-conditions-in-if-statements">Styling multi-line conditions in 'if' statements?</a></span>
