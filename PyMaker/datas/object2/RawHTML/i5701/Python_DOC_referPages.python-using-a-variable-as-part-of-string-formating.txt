<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/41853132/how-to-set-variable-precision-for-new-python-format-option">How to set variable precision for new python format option</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/14932247/variable-number-of-digit-in-format-string">variable number of digit in format string</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/15728321/can-a-variable-be-used-in-python-to-define-decimal-places">Can a variable be used in Python to define decimal places</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I searched for an answer but since it is a bit specific couldnt find an answer. A simple question for the experts (I hope).</p>
<p>I want to be able to use a int variable instead of the number (5) used in the code below. I hope there is a way or else I will have to put my code within <strong>if</strong> blocks which i am trying to avoid if possible (i don't want it to go through a condition everytime in my loop).</p>
<pre><code>my_array[1, 0] = '{0:.5f}'.format(a)
</code></pre>
<p>Is there a way for me to write the code below using a variable like:</p>
<pre><code>x = 5
my_array[1, 0] = '{0:.xf}'.format(a)
</code></pre>
<p>Any help will be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Of course there is:</p>
<pre><code>x = 5
a = '{1:.{0}f}'.format(x, 1.12345111)
print(a)  # -&gt; 1.12345
</code></pre>
<p>If you do not want to specify the positions (<code>0</code> &amp; <code>1</code>), you just have to <strong>invert</strong> your input:</p>
<pre><code>a = '{:.{}f}'.format(1.12345111, x)
#                    ^ the float that is to be formatted goes first
</code></pre>
<p>That is because the <strong>first argument</strong> to <code>format()</code> goes to the
<strong>first (outermost) bracket</strong> of the string.</p>
<p>As a result, the following <strong>fails</strong>:</p>
<pre><code>a = '{:.{}f}'.format(x, 1.12345111) 
</code></pre>
<p>since <code>{:1.12345111f}</code> is invalid.</p>
<hr/>
<p>Other examples of formatting you might find interesting:</p>
<pre><code>a = '{:.{}{}}'.format(1.12345111, x, 'f')  # -&gt; 1.12345

a = '{:.{}{}}'.format(1.12345111, x, '%')  # -&gt; 112.34511%

a = '{:.{}}'.format(1.12345111, '{}{}'.format(x, 'f'))  # -&gt; 112.34511%
</code></pre>
<p>Finally, as @m_____z points out in his great answer and if you are using Python3.6 or higher, you can do all this very easily by using <a href="https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals" rel="nofollow noreferrer"><code>f-strings</code></a>.</p>
<pre><code>number = 1.12345111
x = 5
a = f'{number:.{x}f}'
print(a)  # -&gt; 1.12345
</code></pre>
<p>Notice the <code>f</code> before the quotes.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you're using Python 3.6, you could simply do the following: </p>
<pre><code>x = 5
my_array[1, 0] = f'{a:.{x}f}'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Two ways this can be accomplished. Either by using str.format() or by using %</p>
<p>Where <code>a</code> is the number you're trying to print and <code>x</code> is the number of decimal places we can do:</p>
<p>str.format:</p>
<pre><code>'{:.{dec_places}f}'.format(a, dec_places=x)
</code></pre>
<p>%:</p>
<pre><code>'%.*f' % (x, a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>x=5
f='{0:.'+str(x)+'f}'
my_array[1, 0] = f.format(a)
</code></pre>
</div>
<span class="comment-copy">what is your desired output?</span>
<span class="comment-copy">the output is tricky and works without an issue. I have the code running without a problem. The question is regarding using a variable inside the {} brackets. The reason is when a certian condition matches I have to put a lot of different lines within if/elif statements. And I want to avoid that. I would rather assign a variable above this code and not have to change the lines here. I know it sound a bit confuing. I'm just trying to avoid unneeded if statements that are in loops that go over hundreds of times.</span>
<span class="comment-copy">for example I see but yet haven't learned the % sign in code.. like %x... I doubt that's how it works but maybe there is a way like it that allows me to use the variable within the brackets before .format()</span>
<span class="comment-copy">The code you gave worked like a charm! I would like to thank you and the other members here for your quick and helpful responses. Just to clarify, the {0} stands for the the x variable.. it is its position. that part i understand. What about the beginning 1: ? What does that stand for in this code? that it takes two arguments (x, 1.12345111) in the format function??</span>
<span class="comment-copy">Both the <code>0</code> and the <code>1</code> are indexes in the tuple passed to <code>.format()</code>. So in this case, <code>0</code> <i>points to</i> <code>x</code> and <code>1</code> <i>to</i> <code>1.12345111</code>. Think of it as doing <code>(x, 1.12345111)[0]</code>.</span>
<span class="comment-copy">It took me a while to understand the last part. Now I got it. Thanks again!!!</span>
<span class="comment-copy">I believe that last part(<a href="https://stackoverflow.com/a/47928643/3124746">@m_____z's answer</a>) should be only in @m_____z's answer. Because answered time is the same, and you just added his/her answer to your's.</span>
<span class="comment-copy">A little late reply (sorry), anyway.. I wanted to try alternative methods. Your example was a good and new way to do it. It works very well. Thank you!</span>
