<div class="post-text" itemprop="text">
<p>This is a followup to <a href="https://stackoverflow.com/q/47820803/2988730">Python. How to print a certain part of a line after it had been "re.searched" from a file</a></p>
<p>Here is the initial code, based on the accepted answer to the linked question:</p>
<pre><code>import re

VSP = input("Номер ВСП (четыре цифры): ")

c = re.compile('(\d+\.226\.\S+)\s+\S+' + VSP)
Tunnel0_IP_VSP = re.search(c, open('OUS_IP.txt').read())
print (Tunnel1_IP_VSP.group(1))

Номер ВСП (четыре цифры): 1020
10.226.27.60 
</code></pre>
<p>I was able to find the requested IP address in text file.</p>
<p>My goal is to somehow convert the string <code>"10.226.27.60"</code> to a format that would allow me to use it in mathematical formulas. For example, I want to get another address <code>"10.226.27.59"</code> by subtracting 1 from the last octet of the original address.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>ipaddress</code> module for Python 3:</p>
<pre><code>&gt;&gt;&gt; import ipaddress
&gt;&gt;&gt; ip = ipaddress.IPv4Address('10.226.27.60')
&gt;&gt;&gt; ip - 1
IPv4Address('10.226.27.59')
</code></pre>
<p>The <code>IPv4Address</code> class allows for arithmetic operators</p>
<p>Docs: <a href="https://docs.python.org/3/library/ipaddress.html#operators" rel="nofollow noreferrer">https://docs.python.org/3/library/ipaddress.html#operators</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You could take the <code>string</code> (what you end up with):</p>
<pre><code>s = "10.226.27.60"
</code></pre>
<p>and then <code>split</code> on <code>'.'</code> and use a <code>list-comprehension</code> to convert the parts to <code>integers</code>:</p>
<pre><code>p = [int(i) for i in s.split('.')]
</code></pre>
<p>and then finally, subtract <code>1</code> from the last element:</p>
<pre><code>p[-1] -= 1
</code></pre>
<p>to get <code>p</code> as:</p>
<pre><code>[10, 226, 27, 59]
</code></pre>
<hr/>
<p>Note that if you want to display this list in the original <code>string</code> format, then you can use <code>join</code> with a <code>generator-expression</code>:</p>
<pre><code>".".join(str(i) for i in p)
#"10.226.27.60"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do:</p>
<pre><code>string = "10.226.27.60".split(".")
number_list = [int(number) for number in string]
print(number_list)
</code></pre>
<p>[10, 226, 27, 60] you can calculate each element </p>
<p>convert back:</p>
<pre><code>string_again = ".".join(str(number) for number in number_list)
print(string_again)
</code></pre>
<p>10.226.27.60</p>
</div>
<span class="comment-copy">You should invest some time working your way through <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a>, practicing the examples. It will give you an introduction to the tools Python has to offer and you may even start to get ideas for solving your problem.</span>
<span class="comment-copy">Thats true, but I really need to resolve my problem as soon as possible and with your help I could learn much faster</span>
<span class="comment-copy">You could split the strings by <code>.</code> and then the natural ordering of the resulting list of strings should be all you need...</span>
<span class="comment-copy">@juanpa.arrivillaga that is what I did in my answer :)</span>
<span class="comment-copy">Thats good, but I need something like that ip = ipaddress.IPv4Address(Tunnel1_IP_VSP.group(1)). Its not possible in here.</span>
<span class="comment-copy">@user9100567 why is it not possible here?</span>
<span class="comment-copy">I apologize, that works and this is the quickest decision</span>
<span class="comment-copy">The only potential inconvenience is that if you want to subtract <code>1</code> from the second octet, for example, you would have to do something like <code>ip - (1 &lt;&lt; 16)</code>. I find this to be less convenient than doing <code>ip[1] -= 1</code>, as you would do in the list representation, but +1 regardless.</span>
<span class="comment-copy">This site and you guys are amazing! Thank you!</span>
<span class="comment-copy">Alternatively <code>'.'.join(map(str, p))</code></span>
