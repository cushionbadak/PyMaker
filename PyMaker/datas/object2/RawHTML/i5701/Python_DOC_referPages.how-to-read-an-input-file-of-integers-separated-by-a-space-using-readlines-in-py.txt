<div class="post-text" itemprop="text">
<p>I need to read an input file (input.txt) which contains one line of integers (13 34 14 53 56 76) and then compute the sum of the squares of each number. </p>
<p>This is my code:</p>
<pre><code># define main program function
def main():
    print("\nThis is the last function: sum_of_squares")
    print("Please include the path if the input file is not in the root directory")
    fname = input("Please enter a filename : ")
    sum_of_squares(fname)

def sum_of_squares(fname):
    infile = open(fname, 'r')
    sum2 = 0
    for items in infile.readlines():
        items = int(items)
        sum2 += items**2
    print("The sum of the squares is:", sum2)
    infile.close()

# execute main program function
main()
</code></pre>
<p>If each number is on its own line, it works fine. </p>
<p>But, I can't figure out how to do it when <strong>all the numbers are on one line separated by a space</strong>. In that case, I receive the error: <code>ValueError: invalid literal for int() with base 10: '13 34 14 53 56 76'</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>file.read()</code> to get a string and then use <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split</code></a> to split by whitespace.</p>
<p>You'll need to convert each number from a <code>string</code> to an <code>int</code> first and then use the built in <code>sum</code> function to calculate the sum.</p>
<p>As an aside, you should use the <a href="https://docs.python.org/3/reference/compound_stmts.html#the-with-statement" rel="nofollow noreferrer"><code>with</code></a> statement to open and close your file for you:</p>
<pre><code>def sum_of_squares(fname):

    with open(fname, 'r') as myFile: # This closes the file for you when you are done
        contents = myFile.read()

    sumOfSquares = sum(int(i)**2 for i in contents.split())
    print("The sum of the squares is: ", sumOfSquares)
</code></pre>
<p>Output:</p>
<pre><code>The sum of the squares is: 13242
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to turn a <strong>string</strong> with <strong>spaces</strong> in it, into an <strong>integer</strong>.</p>
<p>What you want to do is use the <strong>split</strong> method (here, it would be <code>items.split(' ')</code>, that will return a <strong>list</strong> of strings, containing numbers, without any space this time. You will then iterate through this list, convert each element to an <strong>int</strong> as you are already trying to do.</p>
<p>I believe you will find what to do next. :)</p>
<hr/>
<p>Here is a short code example, with more pythonic methods to achieve what you are trying to do.</p>
<pre><code># The `with` statement is the proper way to open a file.
# It opens the file, and closes it accordingly when you leave it.
with open('foo.txt', 'r') as file:
    # You can directly iterate your lines through the file.
    for line in file:
        # You want a new sum number for each line.
        sum_2 = 0
        # Creating your list of numbers from your string.
        lineNumbers = line.split(' ')
        for number in lineNumbers:
            # Casting EACH number that is still a string to an integer...
            sum_2 += int(number) ** 2
        print 'For this line, the sum of the squares is {}.'.format(sum_2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could try splitting your items on space using the <a href="https://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow noreferrer">split()</a> function.</p>
<p>From the doc: For example, <code>' 1  2   3  '.split()</code> returns <code>['1', '2', '3']</code>.</p>
<pre><code>def sum_of_squares(fname):
    infile = open(fname, 'r')
    sum2 = 0
    for items in infile.readlines():
        sum2 = sum(int(i)**2 for i in items.split())
    print("The sum of the squares is:", sum2)
    infile.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just keep it really simple, no need for anything complicated. Here is a commented step by step solution:</p>
<pre><code>def sum_of_squares(filename):

    # create a summing variable
    sum_squares = 0

    # open file
    with open(filename) as file:

        # loop over each line in file
        for line in file.readlines():

            # create a list of strings splitted by whitespace
            numbers = line.split()

            # loop over potential numbers
            for number in numbers:

                # check if string is a number
                if number.isdigit():

                    # add square to accumulated sum
                    sum_squares += int(number) ** 2

    # when we reach here, we're done, and exit the function
    return sum_squares

print("The sum of the squares is:", sum_of_squares("numbers.txt"))
</code></pre>
<p>Which outputs:</p>
<pre><code>The sum of the squares is: 13242
</code></pre>
</div>
<span class="comment-copy">What is the exact content of the file?</span>
<span class="comment-copy">If it's just a single line, call <code>data = infile.read(); for number in map(int, data.split()): sum2 += number ** 2</code></span>
<span class="comment-copy">Is your file a single line containing space delimited numbers?</span>
<span class="comment-copy">yes, that is correct. This is the entire contents of the file: 13 34 14 53 56 76</span>
<span class="comment-copy">@JonClements Right, though that may be a bit too advanced for a homework assignment. Also, don't forget the <code>int(num)</code> :-)</span>
<span class="comment-copy">You can get rid of the <code>[]</code> - you don't need a list-comp there...</span>
<span class="comment-copy">@JonClements always forget that :)</span>
<span class="comment-copy">How about a KISS solution that OP can turn in without being suspected of plagiarism/misconduct ;-)</span>
<span class="comment-copy">Might be nice if you threw in the opening the file (demo'ing the <code>with</code> statement) and getting the <code>contents</code> here :)</span>
<span class="comment-copy">Right... but if you try this - you'll get an error because <code>items = int(items.split())</code> is a list and you won't be able to convert that to an <code>int</code> - you want to loop over that list and convert each item and then add...</span>
<span class="comment-copy">Thanks, good catch @JonClements. It looks like Farhan.K has updated his answer to cover this case now.</span>
<span class="comment-copy">I still don't believe he has the knowledge to understand this one-liner expression if he has problems differentiating lists, from strings, from integers, etc..</span>
