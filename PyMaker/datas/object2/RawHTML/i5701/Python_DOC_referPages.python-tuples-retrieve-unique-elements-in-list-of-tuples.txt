<div class="post-text" itemprop="text">
<p>UPDATE:</p>
<p>I went with this:   </p>
<pre><code>set(item[1] for item in id) 
</code></pre>
<p>Thanks guys, your ideas helped me.</p>
<hr/>
<p>I am working with a list of tuples:</p>
<p>Using the following line of code as an example. My list can be of any lenght. However, I will always be looking for a given index of my tuples: </p>
<pre><code>id = [(9,'Tup','Check'),(10,'Tup','Pyton'),(11,'Not Tup','Stack'),(12,'Not Tup','Stack')]
</code></pre>
<p>In this scenario, I am looking to grab the unique second elements.</p>
<pre><code>objective_ouput = ('Tup','Not Tup')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It as simple as follow:</p>
<pre><code>objective_ouput_set = {item[1] for item in id}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension.</p>
<pre><code>tup = ()
tuple([t[1] for t in your_list_of_tuples if t[1] not in tup])
</code></pre>
<p>By the way, <code>id</code> is not a good variable name because it is a builtin.</p>
</div>
<div class="post-text" itemprop="text">
<p>By zipping the tuples together you get a series of tuples at each index. Combine this with <code>set()</code> to eliminate duplicates then;</p>
<pre><code>[set(tup) for tup in zip(*id))]
</code></pre>
<p>will generate a list containing unique elements at each index. </p>
</div>
<span class="comment-copy">What did you try so far and where did you get stuck? Please note that SO isn't a code writing service.</span>
<span class="comment-copy">Try using <a href="https://docs.python.org/3.1/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> to obtain a list of the elements you want and then look at how you could use <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">set</a>.</span>
<span class="comment-copy">Ok thanks, will let you guys know.</span>
<span class="comment-copy">Please mark the question as answered (the check mark next to a response) if you feel it has been answered completely.</span>
<span class="comment-copy">Used this: set(item[1] for item in id) - Thanks guys, your ideas helped me.</span>
<span class="comment-copy">@ruh adapted to your choice ;)</span>
<span class="comment-copy">That's btw not only prettier but also a lot faster: <a href="https://ideone.com/Yde1qR" rel="nofollow noreferrer">ideone.com/Yde1qR</a></span>
<span class="comment-copy">@StefanPochmann Happens also with <code>list()</code> vs <code>[]</code>, and <code>dict()</code> vs <code>{}</code> dont really know why. <a href="https://ideone.com/4ZP6Rz" rel="nofollow noreferrer">Here</a></span>
<span class="comment-copy">@JoseA. That's a very different issue, though. Doesn't involve any comprehensions or generators. You really shouldn't write <code>...</code> there. And better don't measure it in the same benchmark at all. And don't use such low and different <code>number</code> values.</span>
