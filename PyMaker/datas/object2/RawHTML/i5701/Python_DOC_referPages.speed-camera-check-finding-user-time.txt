<div class="post-text" itemprop="text">
<p>I am currently writing a speed camera check program that records the time taken for the driver to pass two sensors.</p>
<p>I want to find the user's average speed by using speed = distance/time</p>
<p>With a speed camera, the distance is known but the time isn't. Here's some of my code.</p>
<pre><code>distanceapart = 20
start = input("Press enter to start")
starttime =(datetime.now())
stop = input("Press enter to stop")
stoptime =(datetime.now())

time = stoptime-starttime
</code></pre>
<p>This is to record the user's time.</p>
<p>One of the outputs is
    '0:00:00.451445 seconds'</p>
<p>I have tried </p>
<pre><code>distanceapart/time
</code></pre>
<p>But it doesn't work</p>
<p>Is there anyway to make this work?</p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd use a dedicated precision timer for that:</p>
<pre><code>import sys
import time

# a cross-platform precision timer
get_timer = time.clock if sys.platform == "win32" else time.time

distance = 20
input("Press enter to start.")
start_time = get_timer()
input("Press enter to stop.")
stop_time = get_timer()

delta_time = stop_time - start_time  # passed time in seconds
speed = distance / delta_time  # the unit depends on the unit of your `distance` value
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The difference between start and end gives a <a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer">timedelta</a> object. You need to access the time difference using one of the class fields of the timedelta like this.</p>
<pre><code>from datetime import datetime
start = datetime.now()
end = datetime.now()
delta = end - start
distance = 20
speed = distance / delta.seconds
# 4.0 distance units / second
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should help:</p>
<pre><code>import datetime
import time # for sleep 

dt = datetime.datetime.now()   # one now()
time.sleep(1.83)
dt2 = datetime.datetime.now()  # another now() a bit later


dtdelta = dt2-dt               # time spent (it is a deltatime)
print( dtdelta.total_seconds()) # in total_seconds   - use it to calculate your speed
</code></pre>
<p>Dokumentation: <a href="https://docs.python.org/3/library/datetime.html#module-datetime" rel="nofollow noreferrer">https://docs.python.org/3/library/datetime.html#module-datetime</a></p>
</div>
<span class="comment-copy">What do you want to happen? For example, what would your expected output be for the time you gave?</span>
<span class="comment-copy">You can't convert and int by a <code>datetime</code> object. Convert to for instance to seconds first. Secondly what is dsitance? <code>km/m</code></span>
<span class="comment-copy">@Ludisposed The distance is metres</span>
<span class="comment-copy">have a look into the datetime documentation - you need something that gives you the total amount in seconds <a href="https://docs.python.org/2/library/datetime.html#datetime-objects" rel="nofollow noreferrer">docs.python.org/2/library/datetime.html#datetime-objects</a> or some kind of timedelta with totalseconds ...</span>
<span class="comment-copy">@pycoder - i want to workout the user's average speed using 'distance/time' equation. Also, I'm still new to python as well.</span>
<span class="comment-copy">I understand most of it, but not the 3rd line 'get_timer'... can you please explain?</span>
<span class="comment-copy">@1ndy123 the built-in <code>time</code> module has two functions for precision timers - <a href="https://docs.python.org/2/library/time.html#time.clock" rel="nofollow noreferrer"><code>time.clock()</code></a> and <a href="https://docs.python.org/2/library/time.html#time.time" rel="nofollow noreferrer"><code>time.time()</code></a> (you can read more on different Python timers at <a href="https://www.webucator.com/blog/2015/08/python-clocks-explained/" rel="nofollow noreferrer">this page</a>). Unfortunately, they behave differently on different platforms and for Windows the former one is preferred. That line just stores a reference to the more precise function in dependence of the platform to the <code>get_timer</code> variable.</span>
