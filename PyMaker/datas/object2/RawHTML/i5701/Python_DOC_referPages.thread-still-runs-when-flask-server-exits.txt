<div class="post-text" itemprop="text">
<p>As titles describe, I create a separate thread to do a long task in <code>Flask</code>.</p>
<pre><code>import schedule
import time

start_time = time.time()


def job():
    print("I'm working..." + str(time.time() - start_time))


def run_schedule():
    while True:
        schedule.run_pending()
        time.sleep(1)
</code></pre>
<p>When I press <code>Ctrl + c</code> to terminate the server, the thread still <code>prints</code>. <strong>How can I stop the thread when server exits?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>You may want to set your thread as <a href="https://docs.python.org/3/library/threading.html#threading.Thread.daemon" rel="nofollow noreferrer">daemon</a>.</p>
<p>A thread runs until it ends by itself or it is explicity killed.</p>
<p>A daemon thread runs with the same conditions and if at least one other non-daemonic thread is running: this means that if you end your main thread and no other threads are running, all daemonic thread will end as well.</p>
<p>if you're using threading module, you may set the thread as daemonic by changing his boolean:</p>
<pre><code>import threading
your_thread.daemon = True
</code></pre>
<p>if you're using thread module, it should be one of the kwargs</p>
</div>
<span class="comment-copy">have you tried <b>ctrl+z</b></span>
<span class="comment-copy">then add your code in try except, handle keyboard interruption and on that event pause/stop your thread</span>
<span class="comment-copy">**ctrl+z ** can work but is there any other way such as to check main_thread alive.</span>
<span class="comment-copy">Thanks for your answer.</span>
