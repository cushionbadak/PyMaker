<div class="post-text" itemprop="text">
<p>I'm using twitter from <code>python</code> in an environment where I can't store files.</p>
<p>I get a HTTP POST with a text and an image and want to create a tweet from this data without writing a local file (it's <code>zappa</code> on AWS api environment).</p>
<p>Tweepy only allows filenames, which does not work for me.</p>
<p><code>python-twitter</code> seems to have something like that, but I can't find a doc for this.</p>
<p>Should I just send POST requests to twitter for uploading the images? Is there a simpler way?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try passing a <a href="https://docs.python.org/3/library/io.html#binary-i-o" rel="nofollow noreferrer">io.BytesIO</a> to <a href="http://docs.tweepy.org/en/v3.5.0/api.html#API.update_with_media" rel="nofollow noreferrer">tweepy's API.update_with_media</a> as <code>file</code>.</p>
<blockquote>
<p>filename – The filename of the image to upload. <strong>This will automatically be opened unless file is specified</strong></p>
</blockquote>
<p>...</p>
<blockquote>
<p>file – A <strong>file object</strong>, which will be <strong>used instead of opening filename</strong>. <strong>filename is still required, for MIME type detection and to use as a form field in the POST data</strong></p>
</blockquote>
<p>Edit: 
It looks like you have the image data base64 encoded. You can use <a href="https://docs.python.org/3/library/base64.html#base64.b64decode" rel="nofollow noreferrer">base64.b64decode</a> to decode it before creating the io.BytesIO:</p>
<pre><code>file = io.BytesIO(base64.b64decode(base64_data))
</code></pre>
</div>
<span class="comment-copy">How are you receiving the images? And if can't you make permanent writes, find a way to either push it online by serializing it, that is, if you cannot find the doc.</span>
<span class="comment-copy">I get it as HTTP Post in base64, so very perfect to send to Twitter, but tweepy wants to make it simple and only allows a filename.</span>
<span class="comment-copy">Ah, on the third check I found out that I do get <code>multipart-formdata</code>, only the example looked like some encoded data. So i already get file handles.</span>
