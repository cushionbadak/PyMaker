<div class="post-text" itemprop="text">
<p>Following is the code snippet - </p>
<pre><code>parser = argparse.ArgumentParser()
#External Modules
parser.add_argument('--foo', action='store_true', dest='FOO_OPTION', help='builds foo')
parser.add_argument('--bar', action='store_true', dest='BAR_OPTION', help='builds bar')
parser.add_argument('--xyz', action='store_true', dest='XyZ_OPTION', help='builds xyz')
</code></pre>
<p>Invoking the command </p>
<pre><code>program.py --foo
program.py --bar 
program.py --xyz
</code></pre>
<p>works perfectly.</p>
<p>However, there is another mandatory arguement for --foo like</p>
<pre><code>program.py --foo -d /usr/local/include
</code></pre>
<p>This additional arguement is just for --foo. How can this be achieved in the easiest possible way?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer"><code>nargs</code></a> argument, with a caveat.</p>
<p>For example,</p>
<pre><code>parser.add_argument('--foo', nargs=2)
args = parser.parse_args()
print(args.foo)
</code></pre>
<p>Then, <code>python program.py --foo bar baz</code> gives <code>['bar', 'baz']</code>.</p>
<p>The caveat is that you couldn't use <code>-d</code> as a value for foo because of the dash.</p>
</div>
<span class="comment-copy">There isn't a mechanism in <code>argparse</code> to do this.  You need to test for this after parsing.</span>
<span class="comment-copy">Or just the default <code>store</code> and <code>nargs</code>, so that <code>--foo</code> requires one argument.  <code>args.foo</code> will be the default <code>None</code> if not provided.</span>
<span class="comment-copy">will using add_subparsers help? My only concern with add_subparsers is that because of just one argument ( foo ) , all other arguements ( bar and xyz ) will have to be changed. Is my understanding correct?</span>
