<div class="post-text" itemprop="text">
<p>I am trying to replicate the situation happening in the following snippet. Here I have two different loggers trying log some info.</p>
<p>Each is configured to print the logging info to the console. The problem with the code is that it is not printing the name of logger before the message, what went wrong here?</p>
<pre><code>import logging
import sys

ch = logging.StreamHandler(sys.stdout)
ch.setLevel(logging.DEBUG)

logger1 = logging.getLogger("logger1")
logger1.setLevel(logging.DEBUG)
logger1.addHandler(ch)

logger2 = logging.getLogger("logger2")
logger2.setLevel(logging.DEBUG)
logger2.addHandler(ch)

logger1.debug('log statement')
logger2.debug('log statement')
</code></pre>
<p>The output I am getting is,</p>
<pre><code>log statement
log statement
</code></pre>
<p>What I am expecting is </p>
<pre><code>logger1: log statement
logger2: log statement
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may want to add a formatter to your StreamHandler:</p>
<pre><code>import logging
import sys

ch = logging.StreamHandler(sys.stdout)
ch.setLevel(logging.DEBUG)
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
ch.setFormatter(formatter)

logger1 = logging.getLogger("logger1")
logger1.setLevel(logging.DEBUG)
logger1.addHandler(ch)

logger2 = logging.getLogger("logger2")
logger2.setLevel(logging.DEBUG)
logger2.addHandler(ch)

logger1.debug('log statement')
logger2.debug('log statement')
</code></pre>
<p>If you want logger1 and logger2 to behave differently, you may create 2 different StreamHandler</p>
</div>
<span class="comment-copy">You have not configured you logging properly. A basic configuration can be done with the help of the <code>logging.basicConfig()</code> function: <a href="https://docs.python.org/3/library/logging.html#logging.basicConfig" rel="nofollow noreferrer">docs.python.org/3/library/logging.html#logging.basicConfig</a></span>
<span class="comment-copy">@KlausD. Yes the OP did configure it's logging "properly", else he would have no output at all and  he would get a message about loggers not having handlers.</span>
