<div class="post-text" itemprop="text">
<p>I have implemented a script that connects to a Cisco device and collects the show run output. </p>
<p>The script is:</p>
<pre><code>import getpass
import telnetlib
import time


HOST = "10.62.149.9"
user = input("Enter your remote account: ")
password = getpass.getpass("User Password: ")
enable = getpass.getpass("Enable Password: ")

tn = telnetlib.Telnet(HOST)

tn.read_until(b"Username: ")
tn.write(user.encode('ascii') + b"\n")
if password:
    tn.read_until(b"Password: ")
    tn.write(password.encode('ascii') + b"\n")
tn.write(b"enable\n")
if enable:
    tn.read_until(b"Password: ")
    tn.write(enable.encode('ascii') + b"\n")
tn.write(b"term len 0\n")
tn.write(b"show run\n")
time.sleep(10)
s = tn.read_very_eager()
print (s)
tn.close()
</code></pre>
<p>The script output is:</p>
<pre><code>\r\ninterface GigabitEthernet1/0/26\r\n!\r\ninterface GigabitEthernet1/0/27\r\n!\r\ninterface GigabitEthernet1/0/28\r\n!\r\ninterface GigabitEthernet1/0/29\r\n!\r\ninterface GigabitEthernet1/0/30\r\n!\r\ninterface GigabitEthernet1/0/31\r\n!\r\ninterface GigabitEthernet1/0/32\r\n!\r\ninterface GigabitEthernet1/0/33\r\n!\r\ninterface GigabitEthernet1/0/34\r\n!\r\ninterface GigabitEthernet1/0/35\r\n!\r\ninterface GigabitEthernet1/0/36\r\n!\r\ninterface GigabitEthernet1/0/37\r\n!\r\ninterface GigabitEthernet1/0/38\r\n!\r\ninterface GigabitEthernet1/0/39\r\n!\r\ninterface GigabitEthernet1/0/40\r\n!\r\ninterface GigabitEthernet1/0/41\r\n!\r\ninterface GigabitEthernet1/0/42\r\n!\r\ninterface GigabitEthernet1/0/43\r\n!\r\ninterface GigabitEthernet1/0/44\r\n!\r\ninterface GigabitEthernet1/0/45\r\n!\r\ninterface GigabitEthernet1/0/46\r\n!\r\ninterface GigabitEthernet1/0/47\r\n!\r\ninterface GigabitEthernet1/0/48\r\n no switchport\r\n ip address 10.62.149.9
255.255.255.128\r\n!\r\ninterface GigabitEthernet1/0/49\r\n!\r\ninterface GigabitEthernet1/0/50\r\n!\r\ninterface GigabitEthernet1/0/51\r\n!\r\ninterface GigabitEthernet1/0/52\r\n!\r\ninterface Vlan1\r\n no ip address\r\n shutdown\r\n!\r\ninterface Vlan10\r\n ip address 10.10.10.1
255.255.255.0\r\n!\r\ninterface Vlan199\r\n ip address 217.21.0.6 255.255.254.0\r\n no ip redirects\r\n ip ospf priority 100\r\n!\r\ninterface Vlan777\r\n ip address 7.7.7.1
</code></pre>
<p><strong>Question</strong></p>
<p>Is there a way to change the script so the output is presented line by line way?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/telnetlib.html" rel="nofollow noreferrer">documentation for telnetlib</a> isn't very clear about <code>Telnet.read_very_eager</code>, but it mentions that it reads and writes <code>bytes</code> for other methods. <code>type(s)</code> is probably <code>bytes</code>.</p>
<p>Use <a href="https://docs.python.org/3/library/stdtypes.html#bytes.decode" rel="nofollow noreferrer"><code>bytes.decode</code></a> to get a string: <code>print(s.decode('ascii'))</code> (use the appropriate encoding)</p>
<p>Note: This is for Python 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to check the string with some common special character that separates the lines using python split() function and after that initiate a for loop with the length of variable and then print.</p>
</div>
<span class="comment-copy">Not a solution to your question, but wouldn't <code>pexpect </code> do a much better job than trying to parse raw telnet?</span>
<span class="comment-copy">Or <code>netmiko</code> as another option.</span>
<span class="comment-copy">yeap! Works like a charm!</span>
