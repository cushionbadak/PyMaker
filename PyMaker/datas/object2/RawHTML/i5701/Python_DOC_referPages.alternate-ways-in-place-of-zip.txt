<div class="post-text" itemprop="text">
<p>I have below inputs,</p>
<pre><code>inp = 'Sample'
n = 5
</code></pre>
<p>I would like to generate a list of tuples of <code>n</code> elements packing <code>input</code> with index. So that my output is,</p>
<pre><code>[('Sample', 0), ('Sample', 1), ('Sample', 2), ('Sample', 3), ('Sample', 4)]
</code></pre>
<p>Below snippet does the work neat,</p>
<pre><code>output = zip([inp]*n, range(n))
</code></pre>
<p>Just curious about alternate approaches to solve the same?</p>
</div>
<div class="post-text" itemprop="text">
<p>The most obvious solution (a list comprehension) has already been <a href="https://stackoverflow.com/questions/47885839/alternate-ways-in-place-of-zip/47885915#comment82737248_47885839">mentioned in the comments</a>, so here's an alternative with <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><em><code>itertools.zip_longest</code></em></a>, just for fun - </p>
<pre><code>from itertools import zip_longest

r = list(zip_longest([], range(n), fillvalue=inp))
print(r)
[('Sample', 0), ('Sample', 1), ('Sample', 2), ('Sample', 3), ('Sample', 4)]
</code></pre>
<p>On python2.x, you'd need <em><code>izip_longest</code></em> instead.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>inp='sample'
n=5
print [(inp,i) for i in range(n)]
</code></pre>
<p>it Shows O/P as:</p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>[('sample', 0), ('sample', 1), ('sample', 2), ('sample', 3), ('sample', 4)]</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</div>
<span class="comment-copy"><code>[('Sample', x) for x in range(n)]</code></span>
<span class="comment-copy">Ah!!! That's really simple and neat than with <code>zip</code> ! Thanks!!</span>
<span class="comment-copy">list comprehension is good way to solve the problem over zip function?</span>
