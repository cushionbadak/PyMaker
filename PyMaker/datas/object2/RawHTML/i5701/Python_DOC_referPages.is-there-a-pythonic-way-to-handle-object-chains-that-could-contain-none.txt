<div class="post-text" itemprop="text">
<p>My Django codebase has foreign key references that are a few objects deep and it feels like a code smell to have to check for truthiness at each level.</p>
<p>Is there a way to check for this kind of thing in a more pythonic way with less boilerplate?</p>
<p>Take this simplified example:</p>
<pre><code>if page.banner.image:
    # ...
</code></pre>
<p>If <code>page.banner</code> is optional and it doesn't exist it will return <code>None</code> and throw an exception saying, rightly, that <code>NoneType</code> doesn't have an <code>image</code> attribute.</p>
<p>The obvious fix is</p>
<pre><code>if page.banner and page.banner.image:
    # ...
</code></pre>
<p>But this will get repetitive and verbose.  I suppose you could use <code>getattr()</code> to do something like I'm after but it's even uglier:</p>
<pre><code>if getattr(getattr(page, 'banner', None), 'image', None):
    # ...
</code></pre>
<p>Is there a concise way to do this without all these conditional clauses?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python recommends the <a href="https://docs.python.org/3/glossary.html?highlight=eafp#term-eafp" rel="nofollow noreferrer">easier to ask for forgiveness than permission</a> approach.</p>
<pre><code>try:
    new_var = page.banner.image
except AttributeError:
    ....
</code></pre>
<p>There is some good discussion about asking permission vs forgiveness <a href="https://stackoverflow.com/questions/7604636/better-to-try-something-and-catch-the-exception-or-test-if-its-possible-first">here</a>.</p>
</div>
<span class="comment-copy">Yeah, that makes sense. Feels a little weird to be using a bunch of <code>try..except</code> blocks, though.</span>
<span class="comment-copy">Yeah, I need to take that to heart more. Thanks!</span>
