<div class="post-text" itemprop="text">
<p>I need to replace dollar amounts with a"" tag in string in python. This is what I have figured out so far:</p>
<p>Here is my string:</p>
<pre><code>s = 'Accounts and current portion of notes receivable, net of allowances of $2,199 and $2,506 at July 2, 2011 and October 2, 2010, respectively'
</code></pre>
<p>With this regular expression I can find all the dollar amounts correctly.</p>
<pre><code>re.findall(r"[\$]{1}[\d,]+\.?\d{0,2}",s)
</code></pre>
<p>gives me:</p>
<pre><code>['$2,199', '$2,506']
</code></pre>
<p>However, I want to replace the dollar amounts with "" in the original string. How do I do that? </p>
<p>Expected output:</p>
<pre><code>'Accounts and current portion of notes receivable, net of allowances of &lt;amount&gt; and &lt;amount&gt; at July 2, 2011 and October 2, 2010, respectively'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>maybe</p>
<pre><code>re.sub(r"[\$]{1}[\d,]+\.?\d{0,2}","&lt;amount&gt;",s)
</code></pre>
<p>will do what you need... btw if you need just one you dont have to specify <code>{1}</code> as that is the default behaviour</p>
</div>
<div class="post-text" itemprop="text">
<p>You can make your replacements with:</p>
<pre><code>s1 = re.sub("\$([\d,]+\.?\d{0,2})", '&lt;amount&gt;', s)
#              ^                ^
</code></pre>
<p>but</p>
<pre><code>s1 = re.sub("\$([\d,]+(?:\.\d{2})?)", '&lt;amount&gt;', s)
#              ^      %         % ^
#  in between '^' matches the entire dollar amount
#  in between '%' matches the decimal part
</code></pre>
<p>might be better.  </p>
<p>The part within the parentheses is the matching part, which gets substituted with your replacement string. After we find the dollar sign, we grab all the following digits and commas. So, what comes between the parentheses marked with the caret is the matching part that gets replaced. There's a slight tweak to the decimal-handling part. With your code, you could match just '.' or '.5'. The version above makes sure to capture a decimal point followed by two digits. Also, note that this decimal capture is inside non-capturing parentheses. But this is okay, because the non-capturing parentheses are still inside capturing parentheses.  See <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html</a> for more details.</p>
</div>
