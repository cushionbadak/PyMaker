<div class="post-text" itemprop="text">
<p>I was reminding myself about the ''keyword'' and I stumbled across this article <a href="http://effbot.org/zone/python-with-statement.htm" rel="nofollow noreferrer">http://effbot.org/zone/python-with-statement.htm</a>. I just had a small, likely obvious, question. The article states that this ''swallows any TypeError''</p>
<pre><code> def __exit__(self, type, value, traceback):
    return isinstance(value, TypeError)
</code></pre>
<p>I'm not quite seeing how that is the case? A quick explanation would be greatly appreciated?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you return <code>True</code> from an <code>__exit__</code> clause, it will stop any errors from going through. For example:</p>
<pre><code>class Foo():
    def __enter__(self):
        print("enter")
    def __exit__(self, type, value, tb):
        print("exit with", repr(value))
        return True

with Foo():
    print("inside")
    raise ValueError()
</code></pre>
<p>will output</p>
<pre><code>enter
inside
exit with ValueError()
</code></pre>
<p>but not raise anything because <code>__exit__()</code> returned <code>True</code>.</p>
<p>In the example case, if the error raised is a <code>TypeError</code>, the statement:</p>
<pre><code>return isinstance(value, TypeError)
</code></pre>
<p>Will return <code>True</code> and the <code>TypeError</code> will be "swallowed".</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/datamodel.html#object.__exit__" rel="nofollow noreferrer">The documentation for <code>__exit__</code> mentions this.</a>.</span>
