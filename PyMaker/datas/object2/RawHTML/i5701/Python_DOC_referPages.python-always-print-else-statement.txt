<div class="post-text" itemprop="text">
<p>I have code like this: </p>
<pre><code>from tabulate import tabulate

def search_movie_title():
    movies = open('movies.txt','r').readlines()
    title = input("Input movie title: ").lower()
    for i in movies:
        movie = i.strip("\n").split("|")
        if title == movie[0].lower():
            table = [['Name:',movie[0]],['Genre:',movie[1]],['Running:',movie[2]],['Director:',movie[3]],['Starring:', movie[4]],['Country:', movie[5]], ['Realised:', movie[6]]]
            print (tabulate(table))
        else:
            print("Nothing found! Try again.")
            search_movie_title()
</code></pre>
<p>And text file like this: </p>
<pre><code>A fistful of Dolars|Western|100|Sergio Leone|Clint Eastwood|Italia|1964
For a few dolars more|Western|130|Sergio Leone|Clint Eastwood|Italia|1965
The Good, the Bad and the Ugly|Western|179|Sergio Leone|Clint Eastwood|Italia|1966
March on the Drina|War movie|107|Zika Mitrovic|LJuba Tadic|Serbia|1964
</code></pre>
<p>If I use use only <code>if</code> statement it works "fine", but if I input nonexistent movie, then program just stop running, obvious.</p>
<p>In case I use <code>if</code> and <code>else</code> it will always print <code>else</code> statement (except for first line in text file)</p>
<p><strong>Question is:</strong> How to print only finded and also movie and how to print message if movie is not found?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could make use of python <code>for-else</code>:</p>
<pre><code>from tabulate import tabulate

def search_movie_title():
    movies = open('movies.txt','r').readlines()
    title = input("Input movie title: ").lower()
    for i in movies:
        movie = i.strip("\n").split("|")
        if title == movie[0].lower():
            table = [['Name:',movie[0]],['Genre:',movie[1]],['Running:',movie[2]],['Director:',movie[3]],['Starring:', movie[4]],['Country:', movie[5]], ['Realised:', movie[6]]]
            print (tabulate(table))
            break
    else:
        print("Nothing found! Try again.")

    # optionally add code here to be run regardless
</code></pre>
<p>the <code>else</code> will only be executed if the <code>for</code> loop was not broken. This way, you can add code afterwards that is run regardless of whether a movie was found or not (rather than immediately returning)</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><strong><code>next</code></strong></a>:</p>
<pre><code>movie = next((movie for movie in movies
              if movie.split('|')[0] == title),
             None)

if movie:
    movie = movie.strip().split('|')
    fields = ['Name:', 'Genre:', 'Running:', 'Director:', 'Starring:', 'Country:', 'Realised:']
    table = list(zip(fields, movie))
    print (tabulate(table))
else:
    print("Nothing found! Try again.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You must make sure to iterate over all movies (<code>for i in movies</code>) until you can decide if the movie was found or not. So: iterate over all movies, print the movie and return from the function if you find it. If you haven't found the movie after iterating over all them then ask the user to try again.</p>
<pre><code>from tabulate import tabulate

def search_movie_title():
    movies = open('movies.txt','r').readlines()
    title = input("Input movie title: ").lower()
    for i in movies:
        movie = i.strip("\n").split("|")
        if title == movie[0].lower():
            table = [['Name:',movie[0]],['Genre:',movie[1]],['Running:',movie[2]],['Director:',movie[3]],['Starring:', movie[4]],['Country:', movie[5]], ['Realised:', movie[6]]]
            print (tabulate(table))
            return

    print("Nothing found! Try again.")
    search_movie_title()
</code></pre>
<p>I would suggest just printing "Nothing found" and then return instead of calling the function recursively though.</p>
</div>
<div class="post-text" itemprop="text">
<p>Every time you hit 'else', you restart the search by calling <code>search_movie_title()</code>.  Unless your search matches on the first entry of <code>movies</code>, you'll be in an infinite loop of else-clause.</p>
<p>Remove the else and do that block if the for loop completes without finding a match.</p>
</div>
<span class="comment-copy">The <code>if</code> is inside the <code>for</code>-loop so it is done once for each movie in your text file.</span>
<span class="comment-copy">Your loop logic is faulty. You cycle through <code>movies</code>, but you have to stop this loop, <code>if</code> the title was found. You can do this in the function with <code>break</code> or leaving the function with <code>return</code>. The <code>else</code> clause has to move out of the loop, otherwise it is executed for each movie that is not <code>title</code></span>
<span class="comment-copy">@MichaelButscher if i move it outside of <code>for</code> loop, then it will find only last movie.</span>
<span class="comment-copy">As written, youâ€™ll get a proper stack overflow :-).</span>
