<div class="post-text" itemprop="text">
<p>Since the <a href="https://docs.python.org/3/library/platform.html#platform.linux_distribution" rel="nofollow noreferrer">Python Docs</a> clearly state that <code>platform.linux_distribution()</code> is:</p>
<blockquote>
<p>Deprecated since version 3.5, will be removed in version 3.7.</p>
</blockquote>
<p>What would be the correct and future-proof way to detect a Linux Distribution via Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://pypi.python.org/pypi/distro" rel="noreferrer"><code>distro</code> project</a>:</p>
<pre><code>$ pip install distro
$ python
&gt;&gt;&gt; import distro
&gt;&gt;&gt; distro.linux_distribution(full_distribution_name=False)
('centos', '7.1.1503', 'Core')
</code></pre>
<p>This project came out of <a href="https://bugs.python.org/issue1322" rel="noreferrer">issue #1322</a>, which led to the deprecation of the function. From the <a href="https://github.com/nir0s/distro#distro---a-linux-os-platform-information-api" rel="noreferrer">project README</a>:</p>
<blockquote>
<p>It is a renewed alternative implementation for Python's original <code>platform.linux_distribution</code> function, but it also provides much more functionality which isn't necessarily Python bound like a command-line interface</p>
</blockquote>
<p>The method was removed from the <code>platform</code> library because the correct method to detect what distribution you were using changed faster than the Python release schedule could follow. From the above bug report:</p>
<blockquote>
<p>The stdlib is not the right place for things that change this often. Just look at how many semi standards we've seen in the last few years. There's no point in trying to follow these in a slow moving code base as the Python stdlib. It's much better to put the functionality into a PyPI module which can be updated much more frequently.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>That will be left to a package. From the What's new entry for this change:</p>
<blockquote>
<p>The <code>platform.dist()</code> and <code>platform.linux_distribution()</code> functions are now deprecated. Linux distributions use too many different ways of describing themselves, <em>so the functionality is left to a package</em>. (Contributed by Vajrasky Kok and Berker Peksag in bpo-1322.)</p>
</blockquote>
<p>You can take a look at <a href="https://bugs.python.org/issue1322" rel="nofollow noreferrer">issue 1322</a> that removed it for a more detailed discussion, there's also <a href="https://pypi.python.org/pypi/distro" rel="nofollow noreferrer">a package there already</a>. </p>
<p>The Python standard library won't be a place where you'll be able to do this due to the maintenance overhead it incurs.</p>
</div>
<div class="post-text" itemprop="text">
<p>This functionality will be removed from Python, as per Jim's answer. The <a href="https://pypi.python.org/pypi/distro" rel="nofollow noreferrer">distro</a> package seems to be the recommended alternative:</p>
<pre><code>$ pip3 install --user distro

$ python3
Python 3.6.3 (default, Oct  9 2017, 12:07:10) 
[GCC 7.2.1 20170915 (Red Hat 7.2.1-2)] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import distro
&gt;&gt;&gt; distro.linux_distribution()
('Fedora', '27', 'Twenty Seven')
</code></pre>
</div>
<span class="comment-copy">I think instead of deprecating it they should have said "the distribution is responsible for implementing this function". It's not like they don't do all sorts of changes as is.</span>
<span class="comment-copy">@IgnacioVazquez-Abrams: so you prefer leaving people that <a href="https://github.com/collective/buildout.python" rel="nofollow noreferrer">install Python from source</a> high and dry?</span>
<span class="comment-copy">@MartijnPieters: If it's implemented as a namespace package then it can be sitting in the filesystem waiting for the install to happen.</span>
<span class="comment-copy">@IgnacioVazquez-Abrams: Not sure I'm following you. I'm perfectly fine with pip installing an extra dependency; that's consistent and the same experience regardless of how I installed Python. Why require Linux distributions to have to produce a plugin for this?</span>
<span class="comment-copy">@MartijnPieters: I'm hard-pressed to think of a distro of any real size that doesn't already have <i>some</i> sort of dependency on Python. This just becomes an extension of that.</span>
<span class="comment-copy">Thnx for your answer and insights. I did not expect the question to raise this much attention so soon. It probably would have been more clear if the Python docs would've had some kind of link to the underlying issue (#1322). Now it just says the function's deprecated without any further explanation.</span>
