<div class="post-text" itemprop="text">
<p>I thought I understood these two singleton values in Python until I saw someone using <code>return l1 or l2</code> in the code, where both l1 and l2 are linked list object, and (s)he wanted to return l1 if it is not None, otherwise, return l2.</p>
<p>This piece of code is good because it is quite short and seems easy to understand. Then, I write some code to figure out what is going one here.</p>
<pre><code>print ( True or 'arbitrary' ) #True
print ( False or 'arbitrary') #arbitrary
print ( None or 'arbitrary' ) #arbitrary
</code></pre>
<p>The printed results are as expected. However, when I try to put <code>None</code> and <code>False</code> together. Something really weird happened.</p>
<pre><code>print ( False or None ) #None
print ( None or False ) #False
print ( None or False or True) #True
</code></pre>
<p>So, my guess the rules of <code>return A or B</code> are:</p>
<ul>
<li><p>return the first True (not None, Not False) value in order (First A and then B)</p></li>
<li><p>if there is no True value, then the last value will be returned.</p></li>
</ul>
<p>At last, I run this code to verify my guess.</p>
<pre><code>print ( None or False or True or None) # True
print ( None or False or None) # None
print ( False or None or False) # False
</code></pre>
<p>The results seem to prove my theory. But anyone has more explanation?</p>
<p>Also, I got something interesting when I use <code>and</code>. Why?</p>
<pre><code>print ( None and False) #None
print ( False and None) #False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The short answer is that 'and' returns the first false value or last true value and 'or' returns the first true or last false answer.</p>
<pre><code>&gt;&gt;&gt; None or False
False
&gt;&gt;&gt; False or None
&gt;&gt;&gt; False and None
False
&gt;&gt;&gt; None and False
</code></pre>
<p>...</p>
<pre><code>&gt;&gt;&gt; 0 or 3 or 4
3
&gt;&gt;&gt; 5 and 0 and 6
0
&gt;&gt;&gt; 5 and 0 or 6
6
&gt;&gt;&gt; False or {} or 0
0
&gt;&gt;&gt; 3 and 4 and 5
5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In python an empty string, set, list, dictionary, other container or 0 are all equivalent to False for logical operations.  Non-empty collections and non-zero numbers are logically True.</p>
<p>For an 'or' the last expression will be returned if no logically True expression was previously encountered. That expression will logically evaluated by the above rule.</p>
</div>
<div class="post-text" itemprop="text">
<p>No need to guess.  For <code>or</code>, Python's <a href="https://docs.python.org/3/reference/expressions.html#boolean-operations" rel="nofollow noreferrer">Reference Manual</a> says</p>
<p>"The expression <code>x or y</code> first evaluates <code>x</code>; if <code>x</code> is true, its value is returned; otherwise, <code>y</code> is evaluated and the resulting value is returned."</p>
<p>In other words, <code>x if x else y</code>, where <code>x</code> is evaluated just once and <code>y</code> only if needed.</p>
<p>For <code>and</code>, change 'true' to 'false'.</p>
<p>The expression <code>x and y</code> first evaluates <code>x</code>; if <code>x</code> is false, its value is returned; otherwise, <code>y</code> is evaluated and the resulting value is returned.</p>
<p>In other words, <code>x if not x else y</code>, where <code>x</code> is evaluated just once and <code>y</code> only if needed.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3914667/false-or-none-vs-none-or-false">False or None vs. None or False</a></span>
<span class="comment-copy">The link is very useful. So I accepted this as the answer to my problem. Thank you very much. Again, here is the URL with very detail explanation - <a href="https://docs.python.org/3/reference/expressions.html#boolean-operations" rel="nofollow noreferrer">docs.python.org/3/reference/expressions.html#boolean-operations</a></span>
