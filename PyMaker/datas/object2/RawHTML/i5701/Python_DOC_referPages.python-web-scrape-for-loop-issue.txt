<div class="post-text" itemprop="text">
<p>I have this little project to web scrape a website. I completed another website for a competitor but I am having a hard time with the current one.</p>
<p>What the code is currently doing is creating a csv file (which is what I want), and in the csv file, I have the headers shown, but no data under it. </p>
<p>Can someone help me with my for loop script. I believe it's not capturing the data in order to write it into the csv file.</p>
<p>Thank you for your help.</p>
<p>Below is the python script:</p>
<pre><code>from urllib.request import urlopen as uReq
from bs4 import BeautifulSoup as soup

# setting my_url to the wesite
urls = ['https://www.extraspace.com/Storage/Facilities/US/North_Carolina/Charlotte/1000000398/Facility.aspx'
    , 'https://www.extraspace.com/Storage/Facilities/US/North_Carolina/Charlotte/1000000404/Facility.aspx']

#https://www.extraspace.com/Storage/Facilities/US/North_Carolina/Charlotte/1000000398/Facility.aspx?cid=org::maps&amp;utm_source=google&amp;utm_medium=organic&amp;utm_campaign=org::maps



filename = "extraspace.csv"
open(filename, 'w').close()
f = open(filename, "a")
num = 0

headers = "unit_size, size_dim1, unit_type, online_price, reg_price, street_address, store_city, store_postalcode\n"

f.write(headers)

for my_url in urls:
    # Opening up connection, grabbing the page
    uClient = uReq(my_url)

    # naming uClient to page_html
    page_html = uClient.read()

    # closing uClient
    uClient.close()

    # this does my html parsing
    page_soup = soup(page_html, "html.parser")

    # setting container to capture where the actual info is using inspect element

    #-----   &lt;div class="right-col-unit-listings" class="unit-listings"&gt; ==$0    -------this is body of each unit container
    #-----   &lt;div class="results"&gt; ==$0    -------this is body of each unit container
    #grabs each product
    containers = page_soup.findAll("div", {"itemprop": "makesOffer"})

    #-----   &lt;div itemprop="address" itemscope itemtype="http://schema.org/PostalAddress"&gt; ==$0     -----this is body of address
    #grabs address
    store_locator = page_soup.findAll("div", {"itemprop": "address"})

    f.write("website " + str(num) + ": \n")
    for container in containers:
        for store_location in store_locator:
            street_address = store_location.findAll("span", {"itemprop": "streetAddress"})
            store_city = store_location.findAll("span", {"itemprop": "addressLocality"})
            store_postalcode = store_location.findAll("spand", {"itemprop": "postalCode"})
            title_container = container.findAll("div", {"class": "size RamaGothicSemiBold"})
            size_dim = container.findAll("div", {"itemprop": "description"})
            #unit_type = container.findAll("ul", {"itemprop": "description"})
            unit_container = container.ul.li
            unit_type = container.text
            online_price = container.findAll("div", {"itemprop": "price"})
            reg_price = container.findAll("div", {"class": "rate strikeout"})

        for item in zip(title_container, size_dim, unit_type, online_price, reg_price, street_address, store_city, store_postalcode):
            csv = item[0].text + "," + item[1].text + "," + item[2] + "," + item[3].text + "," + item[4].text + "," + item[5].text + "," + item[6].text + "," + item[7].text + "\n"
            f.write(csv)
    num += 1
</code></pre>
<p>Below is the HTML for containers:</p>
<pre><code>&lt;div itemprop="makesOffer" itemscope="" itemtype="http://schema.org/Offer"&gt;
    &lt;div itemprop="itemOffered" itemscope="" itemtype="http://schema.org/Product"&gt;
        &lt;div class="guide"&gt;
            &lt;div class="size-help-lnk size-guide hidden" data-locker="False" data-square-feet="25"&gt;Size Help&lt;/div&gt;
            &lt;div alt="5x5" class="video-btn-5x5 video-link" onclick="trackSC('UnitListingVideo');"&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="size RamaGothicSemiBold"&gt;
            &lt;div itemprop="description"&gt;5' x 5'&lt;/div&gt;
            &lt;div&gt;SMALL&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="features"&gt;
            &lt;ul itemprop="description"&gt;
                &lt;li&gt;&lt;i class="check-icon"&gt;&lt;/i&gt;Enclosed Storage&lt;/li&gt;
                &lt;li&gt;&lt;i class="check-icon"&gt;&lt;/i&gt;Indoor&lt;/li&gt;
                &lt;li&gt;&lt;i class="check-icon"&gt;&lt;/i&gt;1st Floor Access&lt;/li&gt;
            &lt;/ul&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;div class="rate strikeout"&gt;
            &lt;div&gt;&lt;span style="width:100%;"&gt;&lt;/span&gt;$57&lt;/div&gt;&lt;span class="StreetRate"&gt;IN-STORE&lt;/span&gt;&lt;/div&gt;
        &lt;div class="rate"&gt;
            &lt;div content="35.00" itemprop="price"&gt;$35
                &lt;meta content="USD" itemprop="priceCurrency" /&gt;
            &lt;/div&gt;&lt;span class="WebRate"&gt;WEB RATE&lt;/span&gt;&lt;/div&gt;
        &lt;div class="promo"&gt;&lt;span style="color:#000;"&gt;Act fast:&lt;br/&gt;Limited units&lt;/span&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;a class="btn btn-orange cta-test is-vehicle" href="https://www.extraspace.com/Storage/ReserveOrHold.aspx?uid=a0GC000000tUNupMAG" id="ctl00_mContent_UnitListPopular_ctrl0_hlReserveLink" onclick="upDown('unitRows|8506|1;05X05|NDN|57|35| | ; | | | | | ; | | | | | ;05X05|CDN|71|48| | ;05X07|CDN|74|50| | ');"&gt;RESERVE&lt;/a&gt;
    &lt;div class="clear"&gt;&lt;/div&gt;
    &lt;link href="http://schema.org/OnlineOnly" itemprop="availability"&gt;
    &lt;/link&gt;
&lt;/div&gt;
</code></pre>
<p>and finally below is the HTML for the address:</p>
<pre><code>&lt; div itemprop = "address"
    itemscope = ""
    itemtype = "http://schema.org/PostalAddress" &gt;
    &lt;span id = "ctl00_mContent_lbAddress"
    itemprop = "streetAddress" &gt; 3304 Eastway Dr &lt; br / &gt; Ste D &lt; /span&gt;&lt;br/ &gt;
    &lt;span id = "ctl00_mContent_lbCity"
    itemprop = "addressLocality" &gt; Charlotte &lt; /span&gt;, &lt;
    span id = "ctl00_mContent_lbState"
    itemprop = "addressRegion" &gt; NC &lt; /span&gt; &lt;
    span id = "ctl00_mContent_lbPostalCode"
    itemprop = "postalCode" &gt; 28205 &lt; /span&gt; &lt;
    /div&gt;]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is only one address on the webpage so you only need to fetch it once. So you can get rid on one of the for loops. You had a typo in </p>
<pre><code>store_postalcode = store_location.findAll("spand", {"itemprop": "postalCode"})
</code></pre>
<p>resulting in a None value. </p>
<p>From the zip documentation h<a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">ttps://docs.python.org/3/library/functions.html#zip</a></p>
<blockquote>
<p>The iterator stops when the shortest input iterable is exhausted.</p>
</blockquote>
<p>So it stopped on the None value and you didn't get any output. Otherwise it would have stopped after one iteration when the address details were exhausted.</p>
<p>Fixing these your code works:</p>
<pre><code>from urllib.request import urlopen as uReq
from bs4 import BeautifulSoup as soup
import re

urls = ['https://www.extraspace.com/Storage/Facilities/US/North_Carolina/Charlotte/1000000398/Facility.aspx'
    , 'https://www.extraspace.com/Storage/Facilities/US/North_Carolina/Charlotte/1000000404/Facility.aspx']

filename = "extraspace.csv"
open(filename, 'w').close()
f = open(filename, "a")
num = 0
headers = "unit_size_0, unit_size_1, size_dim1, unit_type, online_price, reg_price, street_address, store_city, store_postalcode\n"
f.write(headers)

for my_url in urls:
    uClient = uReq(my_url)
    page_html = uClient.read()
    uClient.close()
    page_soup = soup(page_html, "html.parser")

    street_address = page_soup.find("span", {"itemprop": "streetAddress"}).text
    store_city = page_soup.find("span", {"itemprop": "addressLocality"}).text
    store_postalcode = page_soup.find("span", {"itemprop": "postalCode"}).text

    containers = page_soup.findAll("div", {"itemprop": "makesOffer"})
    for container in containers:
        title_container = container.findAll("div", {"class": "size RamaGothicSemiBold"})
        size_dim = container.findAll("div", {"itemprop": "description"})
        unit_type = container.findAll("ul", {"itemprop": "description"})
        online_price = container.findAll("div", {"itemprop": "price"})
        reg_price = container.findAll("div", {"class": "rate strikeout"})

        for item in zip(title_container, size_dim, unit_type, online_price, reg_price ):
            i= re.match(r"([^A-Z]*)([A-Z]*)", item[0].text.replace('\n', '').strip("\""))
            csv = i.group(1) + "," + i.group(2) + "," + item[1].text + "," + item[2].text + "," + item[3].text + "," + item[4].text + "," \
                  + street_address + "," + store_city + "," + store_postalcode + "\n"
            f.write(csv)
    num += 1

f.close()
</code></pre>
<p>You could update it if you like to use the Python csv module <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">https://docs.python.org/3/library/csv.html</a></p>
</div>
<span class="comment-copy">close file at the end - it may not send data to file if you don't close it. And code <code>open(filename, 'w').close()</code> may not work because it creates new connection and then it close only this new connection, not old one which you forgot to close.</span>
<span class="comment-copy">@ furas - should I place the close() command at the end of the script ?</span>
<span class="comment-copy">What is your expected output for a single lead? Do you want viewers to go through your code and discover that? Try to be explicit about your requirement.</span>
<span class="comment-copy">@D-Ru yes, use <code>f.close()</code> at the end. It is information for Python or system to send on disk all data which can still be in buffer in memory RAM.</span>
<span class="comment-copy">@ Dan-Dev - thank you this works. Although, I'm not sure what you mean by "There is only one address on the webpage so you only need to fetch it once" because I am pulling from multiple websites (same company, but different locations). Is it possible to grab the unit_size and separate the dimensions (5' x 5') from the "SMALL" on different columns?</span>
<span class="comment-copy">What I meant was there is only one address on each web-page (one per URL). Assuming the text you want is the uppercase text you can use the a regular expression I have updated the answer with.</span>
