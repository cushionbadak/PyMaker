<div class="post-text" itemprop="text">
<p>Say that I have a dictionary like <code>{'Alice':'P-1', 12:'F-1', 17:'P-1', 'Bob':'F-1', 19:'T'}</code>. In this case same values would mean 'P-1' and 'F-1'. And 4 entries are removed. I wonder how can I write my codes so that it is effecient and can deal with very large dictionaries (like dozens of duplicate values).</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a function that does what you want:</p>
<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; def remove_duplicates(d):
...     grouper = collections.defaultdict(list)
...     for k, v in d.items():
...         grouper[v].append(k)
...     total = 0
...     for val, keys in grouper.items():
...         if len(keys) &gt; 1:
...             for k in keys:
...                 del d[k]
...             total += len(keys)
...     return total
...
&gt;&gt;&gt; d = {'Alice':'P-1', 12:'F-1', 17:'P-1', 'Bob':'F-1', 19:'T'}
&gt;&gt;&gt; remove_duplicates(d)
4
&gt;&gt;&gt; d
{19: 'T'}
</code></pre>
<p>It works in linear time, but requires linear space. Personally, I would create a new dictionary instead of modifying the original, but that is what the above does.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>import re
s = {'Alice':'P-1', 12:'F-1', 17:'P-1', 'Bob':'F-1', 19:'T'}
removal_count = len([b for a, b in s.items() if b[-1].isdigit() and [re.findall('\d+$', c) for c in s.values()].count(re.findall('\d+$', b)) &gt; 1])
print(removal_count)
</code></pre>
<p>Output:</p>
<pre><code>4
</code></pre>
<p>To filter the dictionary:</p>
<pre><code>new_s = {a:b for a, b in s.items() if [re.findall('\d+$', c) for c in s.values()].count(re.findall('\d+$', b)) &lt;= 1}
</code></pre>
<p>Output:</p>
<pre><code>{19: 'T'}
</code></pre>
</div>
<span class="comment-copy">What should be the result??? IOW, are you keeping one of the values, or removing <i>all</i> values.... giving you a final result of <code>{19:'T'}</code>?</span>
<span class="comment-copy">The function I am constructing should return 4 while the dictionary after modification should be {19:'T'} .</span>
<span class="comment-copy">just curious.... what does   collections.defaultdict(list)    do here?</span>
<span class="comment-copy">@PeterJiang it creates a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> with a <code>list</code> factory.</span>
<span class="comment-copy">@juanpa - Thanks for correcting me. I deleted my post.</span>
<span class="comment-copy">@Transhuman you can still salvage it, just note, get <code>counts = Counter(dct.values())</code> then something like <code>{k:v for v in dct.items() if counts[v] &lt;= 1}</code></span>
