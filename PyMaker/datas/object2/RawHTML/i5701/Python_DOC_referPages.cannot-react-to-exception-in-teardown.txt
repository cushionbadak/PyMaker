<div class="post-text" itemprop="text">
<p>I'm trying to add something to my teardown method so that in the event of an exception it takes a screenshot before closing the browser instance.</p>
<p>So far I have: -</p>
<pre><code>def tearDown(self):
    if sys.exc_info()[0]:
        test_method_name = self._testMethodName
        screenshot_name = common_functions.create_unique_id() + test_method_name + ".png"
        common_functions.take_screenshot(self.driver, screenshot_name)
    self.driver.close()
</code></pre>
<p>As it is the screenshot is never taken and if I change the if statement to <code>if sys.exc_info():</code> then it always takes a screenshot regardless of whether an exception is raised.</p>
<p>When I query what is returned by <code>sys.exc_info</code> I get <code>None, None, None</code>. I was hoping that the first element should contain the exception name at least.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/sys.html#sys.exc_info" rel="nofollow noreferrer">docs</a> on <code>sys.exc_info()</code> (my <strong>emphasis</strong>):</p>
<blockquote>
<p>This function returns a tuple of three values that give information about the exception that is <strong>currently being handled</strong>.</p>
</blockquote>
<p>This is not good enough for what you're looking for because when <code>tearDown</code> is called, the potential exception that occurred during the test has already been handled, that's why regardless of whether or not an exception has been raised during the test, <code>sys.exc_info()</code> will return a tuple of <code>None, None, None</code>.</p>
<p>However, you can try using a different approach: in <code>setUp</code> define a flag <code>had_exception</code> which will indicate whether or not the test has had an exception. This will look something like:</p>
<pre><code>class MyTest(unittest.TestCase):
    def setUp(self):
        self.had_exception = True
        # ...

    def test_sample(self):
        self.assertTrue("your test logic here...")
        self.had_exception = False

    def tearDown(self):
        if self.had_exception:
            test_method_name = self._testMethodName
            screenshot_name = common_functions.create_unique_id() + test_method_name + ".png"
            common_functions.take_screenshot(self.driver, screenshot_name)
        self.driver.close()
</code></pre>
</div>
<span class="comment-copy">Where and how is <code>tearDown</code> called?</span>
<span class="comment-copy">It's within the test case class along with the setup and the actual test case function. Both Setup and Teardown work as expected when the test case is run (I am forcing an exception by looking for an element that does no exist), it's just that I can't get the screenshot to be taken when an exception occurs. It either happens all the time or none of the time depending on the if statement.</span>
<span class="comment-copy">That's great - thank you. This works perfectly and a great explanation as to why I was getting the None, None, None result too. :)</span>
