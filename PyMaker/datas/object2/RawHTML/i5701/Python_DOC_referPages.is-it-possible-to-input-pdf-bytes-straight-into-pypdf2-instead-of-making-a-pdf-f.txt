<div class="post-text" itemprop="text">
<p>I am using Linux; printing raw to port 9100 returns a "bytes" type. I was wondering if it is possible to go from this straight into PyPDF2, rather than make a pdf file first and using method PdfFileReader?</p>
<p>Thank you for your time.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://pythonhosted.org/PyPDF2/PdfFileReader.html#PyPDF2.PdfFileReader" rel="nofollow noreferrer"><code>PyPDF2.PdfFileReader()</code></a> defines its first parameter as:</p>
<blockquote>
<p><strong>stream</strong> â€“ A File object or an object that supports the standard read and seek methods similar to a File object. Could also be a string representing a path to a PDF file.</p>
</blockquote>
<p>So you can pass any data to it as long as it can be accessed as a file-like stream. A perfect candidate for that is <a href="https://docs.python.org/3/library/io.html#io.BytesIO" rel="nofollow noreferrer"><code>io.BytesIO()</code></a>. Write your received <em>raw bytes</em> to it, then seek back to <code>0</code>, pass the object to <a href="https://pythonhosted.org/PyPDF2/PdfFileReader.html#PyPDF2.PdfFileReader" rel="nofollow noreferrer"><code>PyPDF2.PdfFileReader()</code></a> and you're done.</p>
</div>
<span class="comment-copy">Make a stream object out of your bytes with <a href="https://docs.python.org/3/library/io.html#io.BytesIO" rel="nofollow noreferrer"><code>io</code></a> and pass the stream to <code>PyPDF2.PdfFileReader</code>. Essentially: <code>import io, PyPDF2; PyPDF2.PdfFileReader(io.BytesIO(b"your pdf bytes"))</code>.</span>
