<div class="post-text" itemprop="text">
<p>I want to have an object <code>conManager</code> that is a <a href="https://docs.python.org/3/library/contextlib.html#reentrant-context-managers" rel="nofollow noreferrer">reentrant context manager</a> instance such that whenever I enter and exit its context it will print a number, but the number must be one higher than the number of the previus context (starting at 0). </p>
<p>Example:</p>
<pre><code>with conManager:
    print("Afirst")
    with conManager:
        print("Asecond")
        with conManager:
            print("third")
        print("Bsecond")
    print("Bfirst")
</code></pre>
<p>Output expected:</p>
<pre><code>0
Afirst
1
Asecond
2
third
2
Bsecond
1
Bfirst
0
</code></pre>
<p>The only solution I have so far is a class with a stack in it, but that's not concurrent-safe. Are there any concurrent-safe solutions?</p>
<p>EDIT: as Sraw pointed out, I said thread safe when I meant concurrent-safe, changed the question accordingly.</p>
</div>
<div class="post-text" itemprop="text">
<p>The only solution I can think of is overriding <code>conManager</code>'s __call__ so that <strong>it</strong> returns a context manager, but I'd rather have a cleaner, no-call usage. </p>
</div>
<span class="comment-copy">why not just a value? You just need to increase and decrease it.</span>
<span class="comment-copy">@Sraw 1. The real example of what i need is more complicated (hence it requires a stack) 2. Ints aren't thread safe either.</span>
<span class="comment-copy">Actually, as there is a GIL in python, <code>int</code> and most of basic objects are thread safe including <code>list</code>'s <code>append</code> and <code>pop</code> methods.</span>
<span class="comment-copy">PS: confirmed on linux's cython, not sure about windows.</span>
<span class="comment-copy">@Sraw yes but if I enter two "contexts" of the int before i exit another one asyncronusly (i.e. increment and decrement asyncronously), bugs will happen.</span>
<span class="comment-copy">what is <code>__opcall__</code>?</span>
<span class="comment-copy">Whoops I showed my D roots! edited</span>
