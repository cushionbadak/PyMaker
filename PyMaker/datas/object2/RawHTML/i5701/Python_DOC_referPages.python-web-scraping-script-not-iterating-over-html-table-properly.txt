<div class="post-text" itemprop="text">
<p>I'm using BeautifulSoup to pull the elements of an HTML table into a python dict. The problem I'm having is, when I create the dict, the first record from the table is repeatedly loaded into the the dict. Printing the variable rows shows the expected number of different records returned in the response, but only the first record is printed when print(d) is called.</p>
<pre><code>import requests
from bs4 import BeautifulSoup as bs

url = 'http://host.com/user_activity?page=3'
r = requests.get(url)
#print(r.text)

soup = bs(r.text, 'lxml')
table = soup.find_all('table')[0]
rows = table.find_all('td')
#records = soup.find_all('td')


#print(table.prettify())

ct=0
for record in rows :
    if ct &lt; 20:
        keys = [th.get_text(strip=True)for th in table.find_all('th')]
        values = [td.get_text(strip=True) for td in rows]
        d = dict(zip(keys, values))
        print(d)
        ct+=1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you meant to get the header cells from the first row of the table (once, before the loop) and iterate over the <code>tr</code> elements instead of <code>td</code>. </p>
<p>You can also use a regular <code>find()</code> instead of <code>find_all()[0]</code> and <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> to handle the loop increment variable more nicely:</p>
<pre><code>table = soup.find('table')
rows = table.find_all('tr')

headers = [th.get_text(strip=True) for th in rows[0].find_all('th')]

for ct, row in enumerate(rows[1:]):
    values = [td.get_text(strip=True) for td in row.find_all('td')]

    d = dict(zip(headers, values))
    print(d)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Apart from what sir alecxe has already shown, you can do like this as well using selector. Just make sure the table index is accurate, as in first table or second table or another one you wanna parse.</p>
<pre><code>table = soup.select("table")[0] #be sure to put here the correct index
for items in table.select("tr"):
    data = ' '.join([item.text for item in items.select("th,td")])
    print(data)
</code></pre>
</div>
<span class="comment-copy">you must be getting all columns when you do <code>table.find_all('td')</code> .. what you need is <code>tr</code> to get rows</span>
<span class="comment-copy">@Vasif that returns empty strings as values and the headers concatenated as the value of ID</span>
<span class="comment-copy">i think <code>for td in record.find_all('td')</code> is missing too Edit : it should be record</span>
<span class="comment-copy">you always use the same <code>rows</code> so it always get the same first row of data and put to dictionary. It will not "jump" to next row in every loop. you have to get new row in every loop or try to slice current <code>rows</code> - like <code>rows[10:]</code>, <code>rows[40:]</code>, etc.</span>
<span class="comment-copy">you could add real url</span>
