<div class="post-text" itemprop="text">
<p>Currently if I input <code>x = Matrix([[5, 4], [3, 8]])</code> it is calling <code>__str__</code>. How do I get it to call another method with this input? </p>
<pre><code>class Matrix(object):
    def __init__(self, matrix = 0):
        self.matrix = matrix

    def __Matrix__(self):
        return 10

    def __str__(self):
        return "\\n".join(["\\t".join
                       (["%d" % k for k in row]) for row in self.matrix])
</code></pre>
<p>If my input is <code>x = Matrix([[5, 4], [3, 8]])</code> how do I tell the program to call the method <code>__Matrix__</code>? It is currently calling <code>__str__</code>. </p>
<p>I tried to make a method "Matrix" inside the class "Matrix", but the program didn't change, it keeps using the <code>__str__</code> method.  </p>
</div>
<div class="post-text" itemprop="text">
<p>Python has no way of knowing that it's supposed to use your <code>__Matrix__</code> method to print a Matrix instance. The way that <a href="https://docs.python.org/3/reference/datamodel.html#special-method-names" rel="nofollow noreferrer">special method names</a> are handled is an internal language feature, you can't just add new special method names or change the way existing ones are handled without modifying the Python source and compiling your own version. And it's generally not a good idea to do that unless you <em>really</em> need to. ;)</p>
<p>As I mentioned above, <code>__str__</code> should return a string that's suitable to display to the user, so it's probably not a good idea to return that sequence containing <code>'\\t'</code> and <code>'\\n'</code> via <code>__str__</code>. I guess you could return it via <code>__repr__</code>, but that's still a little odd, IMHO. I strongly suggest that you give it a new name, like <code>esc_str</code>.</p>
<hr/>
<p>Just for fun, I've implemented a relatively simple <code>__format__</code> method for you class. This special method gets called by the <code>format</code> built-in function and the <code>str.format</code> method. It also gets called by the new f-string syntax.</p>
<p>My <code>__format__</code> method determines the minimum width required for each column of the matrix, you can supply a numeric format_spec to set a minimum width for all columns. An extra space is added to stop columns running together. You could enhance this method to handle an initial '&gt;' or '&lt;' in the format_spec to indicate alignment.</p>
<pre><code>class Matrix(object):
    def __init__(self, matrix = 0):
        self.matrix = matrix

    def __format__(self, minwidth):
        minwidth = int(minwidth) if minwidth else 0
        # Find maximum width of each column
        widths = [max(len(str(k)) for k in col) for col in zip(*self.matrix)]
        widths = [max(minwidth, u) for u in widths]
        result = []
        for row in self.matrix:
            result.append(" ".join(["%*d" % t for t in zip(widths, row)]))
        return "\n".join(result)

    def __repr__(self):
        return "Matrix(%s)" % self.matrix

    def __str__(self):
        return "\n".join(["\t".join(["%d" % k for k in row]) 
            for row in self.matrix])

    def esc_str(self):
        return r"\n".join([r"\t".join(["%d" % k for k in row]) 
            for row in self.matrix])

# test

m = Matrix([[1, 2, 3], [5, 4, 16], [9, 867, 0]])
print(repr(m))
print(m)
print(m.esc_str())
print('Matrix\n{:2}'.format(m))
print(f'Matrix\n{m}')
</code></pre>
<p><strong>output</strong></p>
<pre><code>Matrix([[1, 2, 3], [5, 4, 16], [9, 867, 0]])
1       2       3
5       4       16
9       867     0
1\t2\t3\n5\t4\t16\n9\t867\t0
Matrix
 1   2  3
 5   4 16
 9 867  0
Matrix
1   2  3
5   4 16
9 867  0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can just call the function</p>
<pre><code>print(x.__Matrix__())
</code></pre>
<p>and it should work
if you just print the object it automatically call the built in function <strong>str</strong></p>
</div>
<span class="comment-copy">Search before asking please <a href="https://stackoverflow.com/questions/7022211/how-to-access-elements-in-a-2d-array" title="how to access elements in a 2d array">stackoverflow.com/questions/7022211/â€¦</a>  Inside matrix i see only a return, please re-study the python basics before going into self/__methods etc  or give us code, input and expected output in a clear way and we can help you out.</span>
<span class="comment-copy">I know how to turn an input of numbers into an array/matrix. What I'm trying to understand is why the program keeps using __ str __ instead of using __ Matrix __ (and doing whatever is inside it).</span>
<span class="comment-copy">Because <b>str</b> is builtin and matrix is not even called?</span>
<span class="comment-copy">How should Python know that it's supposed to use your <code>__Matrix__</code> method to print a Matrix instance? FWIW, Python provides 3 special methods for creating string representations: <code>__str__</code>, <code>__repr__</code>, and <code>__format__</code>. You can read about them in <a href="https://docs.python.org/3/reference/datamodel.html#basic-customization" rel="nofollow noreferrer">Basic customization</a>. BTW, your <code>__str__</code> is a bit strange. Why do you have <code>"\\n"</code> and <code>"\\t"</code> rather than <code>"\n"</code> and <code>"\t"</code>?</span>
<span class="comment-copy">It's not a regular __ str __, I need the string to have the format 1\t2\n\4\t5.</span>
<span class="comment-copy">When you give Python m = Matrix([[1, 2, 3], [5, 4, 16], [9, 867, 0]]), and then print(m), how does it know which method to use, since you're only giving it the name of the entire class?</span>
<span class="comment-copy"><code>print</code> calls <code>str</code> on the objects it's printing. Then <code>str</code> calls the object's <code>__str__</code> method if it exists, otherwise it calls <code>__repr__</code>. All objects should have a <code>__repr__</code>. If a class doesn't define <code>__repr__</code>, the one it inherits from its parent class will be used, in many cases that will be the default  <code>__repr__</code> defined in the <code>object</code> class.</span>
