<div class="post-text" itemprop="text">
<p>When I read the ipaddress docs:</p>
<p><a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Address.compressed" rel="nofollow noreferrer">https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Address.compressed</a></p>
<p>When I read the <code>IPv4Address.compressed</code>, I find there is no explain for the <code>compressed</code>.</p>
<p>Who can tell me what is it mean ?</p>
<hr/>
<p>From the <a href="https://github.com/python/cpython/blob/v3.6.3/Lib/ipaddress.py#L397" rel="nofollow noreferrer">source 
code</a>, there is only <code>Return the shorthand version of the IP address as a string.</code> explain, I am not well understand the <code>shorthand version of the IP address</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>compressed</code> and <code>exploded</code> are properties defined by the base class <a href="https://github.com/python/cpython/blob/v3.6.3/Lib/ipaddress.py#L385" rel="nofollow noreferrer"><code>ipaddress._IPAddressBase</code></a>, so every ip address instance has them. For IPv4 there is no difference between the two, as historically there was no need to have a shorter representation:</p>
<pre><code>&gt;&gt;&gt; i4 = ipaddress.IPv4Address("127.0.0.1")
&gt;&gt;&gt; i4.exploded
'127.0.0.1'
&gt;&gt;&gt; i4.compressed
'127.0.0.1'
</code></pre>
<p>The difference is with ipv6 addresses:</p>
<pre><code>&gt;&gt;&gt; i6 = ipaddress.IPv6Address("::1")
&gt;&gt;&gt; i6.exploded
'0000:0000:0000:0000:0000:0000:0000:0001'
&gt;&gt;&gt; i6.compressed
'::1'
</code></pre>
<p>Here leaving out groups of 0s is a big help for usability.</p>
<p>Since all addresses have both properties you don't need to care what type an address object is. If only <code>IPv6Address</code> objects had an <code>exploded</code> property it would be more cumbersome to use it when processing mixed address types.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I find there is no explain for the compressed</p>
</blockquote>
<p>It's actually <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Address.compressed" rel="nofollow noreferrer">documented</a> <em>together</em> with the <strong>exploded</strong> property:</p>
<blockquote>
<p><strong>compressed</strong></p>
<p><strong>exploded</strong></p>
<p>The string representation in dotted decimal notation. Leading zeroes are never included in the representation.</p>
<p>As IPv4 does not define a shorthand notation for addresses with octets set to zero, these two attributes are always the same as
  <code>str(addr)</code> for IPv4 addresses. Exposing these attributes makes it
  easier to write display code that can handle both IPv4 and IPv6
  addresses.</p>
</blockquote>
<p>The property itself is <a href="https://github.com/python/cpython/blob/v3.6.3/Lib/ipaddress.py#L397" rel="nofollow noreferrer">defined</a> in the base class for both IPv4 and IPv6 addresses as follows:</p>
<pre><code>@property
def compressed(self):
    """Return the shorthand version of the IP address as a string."""
    return str(self)
</code></pre>
<p>For an <code>IPv4Address</code> object <code>str(self)</code> would return a <a href="https://github.com/python/cpython/blob/v3.6.3/Lib/ipaddress.py#L1163" rel="nofollow noreferrer">string</a> in decimal-dot notation, e.g. <code>"192.168.0.1"</code>.</p>
</div>
<span class="comment-copy">I would sort of expect it to omit optional zeros from 127.0.0.1 to produce 127.1 but it doesn't. Maybe it's more useful for IPv6 and included for orthogonality for IPv4.  I see it doing what this page describes for IPv6: <a href="https://networklessons.com/ipv6/shortening-ipv6-addresses/" rel="nofollow noreferrer">networklessons.com/ipv6/shortening-ipv6-addresses</a></span>
<span class="comment-copy">@tripleee That makes sense, because the IPv4 object have many property for imitate IPv6 object.</span>
<span class="comment-copy">It's not entirely true that there are no shortened versions of IPv4 addresses.  There are obscure notations which were once moderately widespread, but I suppose they ended up being abused as security holes more often than they were actually useful.</span>
<span class="comment-copy">@tripleee At least there doesn't seem to have been enough need to write a RFC, or I haven't come across one. At least if you see an ip address in this form you tend to know what it is. I've once come across a log file with addresses in hex notation, took me some minutes to figure out what those ment.</span>
<span class="comment-copy">You can still do stuff like <code>ping 134744072</code> on some platforms.</span>
<span class="comment-copy">Quick googling turned up this: <a href="https://tools.ietf.org/html/draft-main-ipaddr-text-rep-02" rel="nofollow noreferrer">tools.ietf.org/html/draft-main-ipaddr-text-rep-02</a></span>
<span class="comment-copy">@tripleee nice, didn't know that one. Seems even firefox accepts  addresses like <a href="http://2899908494" rel="nofollow noreferrer">2899908494</a> :)</span>
<span class="comment-copy">is there a example of it?  I am not very understand the <code>shorthand version of the IP address as a string</code>.</span>
