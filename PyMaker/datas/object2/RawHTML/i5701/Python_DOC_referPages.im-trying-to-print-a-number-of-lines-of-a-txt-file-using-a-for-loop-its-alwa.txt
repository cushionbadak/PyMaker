<div class="post-text" itemprop="text">
<p>Apparently there are other questions about reading the last lines of a .txt file but I really did not understand the answers and don't know how to apply them in my code. </p>
<p>I've created a simple program that writes a sequence of numbers on a .txt file, a new line for each number. Then you can choose how many of them to print.</p>
<p>For some reason, it misses the last 3 lines, for example:</p>
<ul>
<li>I choose to write 100 numbers on the file</li>
<li>In the next step, I choose to print n lines.</li>
<li>It only prints n-3 lines!</li>
</ul>
<p>I could "solve" this by adding 3 to the numbers of lines I want to print, but that's just not right. I don't understand why this is happening. There isn't any empty lines on the .txt file. It's literally just a file with one number per line, from beginning to end.</p>
<p>The code is this:</p>
<pre><code>print("How many numbers to write on file?")
x = input()
x = int(x)

file = open("bla.txt", "w")

for i in range(0,x):
    file.write(str(i))
    file.write("\n")

file.close()

print("How many numbers to print?")

y = input()
y = int(y)

file = open("bla.txt", "r")

for j in range(0,y):
    print(file.readline(j))

file.close()

print("Done!\n")
</code></pre>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>The argument to <a href="https://docs.python.org/3/library/io.html#io.IOBase.readline" rel="nofollow noreferrer"><code>readline</code></a> isn't the number of the <strong>line</strong>, it tells <strong>how many characters</strong> the <code>readline</code> method is allowed to read <em>at most</em>. Use <code>print(file.readline())</code>, not <code>print(file.readline(i))</code>.</p>
<p>Otherwise for input <code>5</code>, this will happen: The contents of the file are</p>
<pre><code>1\n2\n3\n4\n5\n
</code></pre>
<p>Now, the first iteration reads maximum of <strong>0</strong> characters, returning the empty string <code>''</code>. This is printed with a newline. The second reads a maximum of <strong>1</strong> characters, which now will contain the digit <code>0</code>. This is printed with newline. The third read will read maximum of <strong>2</strong> characters but meets a newline right away, and returns a string that only has <em>one</em> newline. This is printed, with the extra newline from <code>print</code>. Now read 4 will read maximum of 3 characters, and this will now return the string <code>'3\n'</code> which is just 2 characters. This is printed, with an extra newline. Finally, the last read will read maximum of 4 characters, returns <code>'5\n'</code>, which again is printed with extra newline.</p>
<hr/>
<p>Finally, no one writes the actual Python code like that. Try the following instead:</p>
<pre><code># you can add a prompt to the input itself
num_lines = int(input("How many numbers to write on file? "))

# with will automatically close the file upon exit from the block
with open("bla.txt", "w") as output_file:
    # 0 as start implied
    for i in range(num_lines):
        # print will format the number as a string, a newline is added automatically
        print(i, file=output_file)

num_lines = int(input("How many lines to read? "))    
with open("bla.txt", "r") as input_file:
    # _ is the common name for a throw-away variable 
    for _ in range(num_lines):
        # get the *next* line from file, print it without another newline
        print(next(input_file), end='')

# or to read *all* lines, use
# for line in file:
#     print(line)    

print("Done!")
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/io.html#io.IOBase.readline" rel="nofollow noreferrer">io.IOBase.readline</a></span>
<span class="comment-copy">@Jean-FrançoisFabre yeah, but the output in this case was a bit peculiar so I decided to write an answer.</span>
<span class="comment-copy">Thanks! I will save your code for a later time, when I'm more familiar with the "with" and "as" commands. The rest is very familiar. I'm just beginning and I write code in a way that seems good to read, for me at least.</span>
<span class="comment-copy">@AnttiHaapala don't worry, I've already got a 100k+ "duplicate" buddy :) it's not like you're writing 10 answers to duplicates every week. anyway, worth to mention / link to it: <a href="https://stackoverflow.com/questions/14541010/pythons-function-readlinesn-behavior" title="pythons function readlinesn behavior">stackoverflow.com/questions/14541010/…</a></span>
<span class="comment-copy">"no one writes actual Python code like that" could be discouraging for a someone new to programming or coming from a different language. There are lot of subtle aspects to the code here like looping over a open file object and use of next() that requires some time to understand fully. So some explanations regarding why this approach is better compared to other will be better make newcomers feel more welcome.</span>
