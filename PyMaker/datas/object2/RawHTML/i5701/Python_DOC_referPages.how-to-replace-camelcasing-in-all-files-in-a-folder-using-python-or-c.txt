<div class="post-text" itemprop="text">
<p>I have a folder that has a mix and match of camelCase and non camel case filenames. I have used this in Python to remove underscores and was hoping I could easily tweak it to replace 'camelCaseExample' with 'camel Case Example':</p>
<pre><code>folder = r"C:/....."
import os
pathiter = (os.path.join(root, filename)
    for root, _, filenames in os.walk(folder)
    for filename in filenames
)
for path in pathiter:
    newname =  path.replace('_', ' ')
    if newname != path:
        os.rename(path,newname)
</code></pre>
<p>Could anyone help me edit this to get it working for regex?</p>
<p>I have tried this with no luck:</p>
<pre><code>newname =  path.replace('%[A-Z][a-z]%', ' ')
</code></pre>
<p>I would also be able to use a c# solution if that would be easier</p>
</div>
<div class="post-text" itemprop="text">
<p>You will probably want to try regex using the <code>re</code> library.</p>
<pre><code>import re
new_name = re.sub("(?=[A-Z])", " ", "testFileName")
print(new_name)
</code></pre>
<p>Will output:</p>
<pre><code>test File Name
</code></pre>
<p>If you want it to be lowercase after this, you could just call</p>
<pre><code>new_name = new_name.lower()
</code></pre>
<p>What the regex is doing is looking for any point immediately before an upper case letter and substituting a space there. This <a href="https://regex101.com/r/80yuLO/1" rel="nofollow noreferrer">regex101 link</a> will help explain it better.</p>
</div>
<span class="comment-copy">Why do you have <code>%</code> in your regex?</span>
<span class="comment-copy">I must be thinking of SQL.  I have tried it without and still no luck.</span>
<span class="comment-copy">If your goal is to simply replace insert a space between a lowercase alpha followed by an uppercase alpha: <code>re.sub(r'([a-z])([A-Z])', r'\1 \2', 'camelCaseExample')</code>. See <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a></span>
<span class="comment-copy">the issue is when I try to do this with folders, as this seems to apply this to the entire path rather than filename?</span>
<span class="comment-copy">So only apply it to the filename. You are currently joining the filename with the root immediately.</span>
<span class="comment-copy">This applies the logic to the entire path, rather than just the filename. It also adds a space between words, so it converts 'This File' to 'This   File'. Which creates issues with the entire path.</span>
<span class="comment-copy">How did you handle that in your original underscore version?</span>
<span class="comment-copy">Something like <a href="https://docs.python.org/3/library/os.path.html#os.path.basename" rel="nofollow noreferrer"><code>os.path.basename()</code></a> might be helpful for you.</span>
<span class="comment-copy">the underscore was only part of filename, and never anywhere upstream in path, so was a non issue.</span>
<span class="comment-copy">Yup that was it. THANK YOU!</span>
