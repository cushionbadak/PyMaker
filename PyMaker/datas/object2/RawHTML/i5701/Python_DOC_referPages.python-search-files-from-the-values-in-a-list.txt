<div class="post-text" itemprop="text">
<p>I'm very new to Python and I'm trying to solve the following problem. I want to iterate a List with words and lookup it in a file and if found return me the line number where the words are found.</p>
<pre><code>files = glob.iglob(os.path.join(in_dir, '*.*'))
List = ['word1', 'word2',...'wordn']

for index, word in enumerate(List):
    print(index, word)

    for item in files: # Iterate all files in Input directory
        filename = os.path.basename(item) # Copy the filename without the path
        print('file: {0}'.format(filename))
        with open(item, 'r') as f:
            for num, line in enumerate(f, 0):
                if word in line:
                    print('num: {0}, line: {1}'.format(num, line))
</code></pre>
<p>But it doesn't seem to work, it only searched the first value o the list. What I want to do is to search all the List values in every file.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think your holdup is that iglob returns a generator. It is a one-use iterator that get's used during the first "for item in files" loop. You need to either replace iglob with glob (returns a list instead of a one-time use iterator), or re-invoke iglob for every loop.</p>
<p>Read more about generators:</p>
<ul>
<li><a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">https://wiki.python.org/moin/Generators</a> </li>
<li><a href="https://stackoverflow.com/questions/1756096/understanding-generators-in-python">Understanding generators in Python</a></li>
<li><a href="http://intermediatepythonista.com/python-generators" rel="nofollow noreferrer">http://intermediatepythonista.com/python-generators</a></li>
</ul>
<p>And glob documentations:</p>
<ul>
<li><a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">https://docs.python.org/3/library/glob.html</a></li>
</ul>
<p>Hope this helps set you in the right direction!</p>
<p>Edit (Note): The advantage of iglob over glob is that it doesn't work with the entire list in memory. If you have a really huge list (lots of items * size in memory per item), then iglob may be expected to have performance advantages over glob. </p>
</div>
<span class="comment-copy">OMG!!! THANKS A LOT @mathewguest it worked!!!</span>
