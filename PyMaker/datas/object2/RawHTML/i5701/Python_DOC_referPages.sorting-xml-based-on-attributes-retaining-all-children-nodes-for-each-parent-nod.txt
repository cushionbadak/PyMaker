<div class="post-text" itemprop="text">
<p>I have an xml file which I want to sort based on attribute values.  The following is the xml file:</p>
<pre><code>&lt;?xml-stylesheet type='text/xsl' href='image_metadata_stylesheet.xsl'?&gt;
&lt;dataset&gt;
  &lt;name&gt;imglab dataset&lt;/name&gt;
  &lt;comment&gt;Created by imglab tool.&lt;/comment&gt;
  &lt;images&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00003.jpg"&gt;
      &lt;box top="175" left="59" width="73" height="29"&gt;
        &lt;label&gt;groundpainting_hotstar&lt;/label&gt;
      &lt;/box&gt;
      &lt;box top="174" left="205" width="56" height="24"&gt;
        &lt;label&gt;groundpainting_yesbank&lt;/label&gt;
      &lt;/box&gt;
      &lt;box top="170" left="141" width="44" height="32"&gt;
        &lt;label&gt;groundpainting_vodafone&lt;/label&gt;
      &lt;/box&gt;
    &lt;/image&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00001.jpg"/&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00002.jpg"&gt;
      &lt;box top="198" left="17" width="32" height="10"&gt;
        &lt;label&gt;sightscreen_pepsi&lt;/label&gt;
      &lt;/box&gt;
    &lt;/image&gt;
 &lt;/images&gt;
&lt;/dataset&gt;
</code></pre>
<p>The desired output is this:</p>
<pre><code>&lt;?xml-stylesheet type='text/xsl' href='image_metadata_stylesheet.xsl'?&gt;
&lt;dataset&gt;
  &lt;name&gt;imglab dataset&lt;/name&gt;
  &lt;comment&gt;Created by imglab tool.&lt;/comment&gt;
  &lt;images&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00001.jpg"/&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00002.jpg"&gt;
      &lt;box top="198" left="17" width="32" height="10"&gt;
        &lt;label&gt;sightscreen_pepsi&lt;/label&gt;
      &lt;/box&gt;
    &lt;/image&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00003.jpg"&gt;
      &lt;box top="175" left="59" width="73" height="29"&gt;
        &lt;label&gt;groundpainting_hotstar&lt;/label&gt;
      &lt;/box&gt;
      &lt;box top="174" left="205" width="56" height="24"&gt;
        &lt;label&gt;groundpainting_yesbank&lt;/label&gt;
      &lt;/box&gt;
      &lt;box top="170" left="141" width="44" height="32"&gt;
        &lt;label&gt;groundpainting_vodafone&lt;/label&gt;
      &lt;/box&gt;
    &lt;/image&gt;
 &lt;/images&gt;
&lt;/dataset&gt;
</code></pre>
<p>I tried the following two options:</p>
<pre><code>import xml.etree.ElementTree as ET
tree = ET.parse("finalxml.xml")
container = tree.find("images")
data = []
for elem in container:
    key = elem.findtext("image")
    data.append((key,elem))
data.sort()
container[:] = [item[-1] for item in data]
tree.write("new-data.xml")
</code></pre>
<p>This code just realigns the box attributes and not the image file attribute, which is not desirable.  The following is something I have taken from SO, but doesn't do anything.</p>
<pre><code># =======================================================================
# Monkey patch ElementTree
import xml.etree.ElementTree as ET

def _serialize_xml(write, elem, encoding, qnames, namespaces):
    tag = elem.tag
    text = elem.text
    if tag is ET.Comment:
        write("&lt;!--%s--&gt;" % ET._encode(text, encoding))
    elif tag is ET.ProcessingInstruction:
        write("&lt;?%s?&gt;" % ET._encode(text, encoding))
    else:
        tag = qnames[tag]
        if tag is None:
            if text:
                write(ET._escape_cdata(text, encoding))
            for e in elem:
                _serialize_xml(write, e, encoding, qnames, None)
        else:
            write("&lt;" + tag)
            items = elem.items()
            if items or namespaces:
                if namespaces:
                    for v, k in sorted(namespaces.items(),
                                       key=lambda x: x[1]):  # sort on prefix
                        if k:
                            k = ":" + k
                        write(" xmlns%s=\"%s\"" % (
                            k.encode(encoding),
                            ET._escape_attrib(v, encoding)
                            ))
                #for k, v in sorted(items):  # lexical order
                for k, v in items: # Monkey patch
                    if isinstance(k, ET.QName):
                        k = k.text
                    if isinstance(v, ET.QName):
                        v = qnames[v.text]
                    else:
                        v = ET._escape_attrib(v, encoding)
                    write(" %s=\"%s\"" % (qnames[k], v))
            if text or len(elem):
                write("&gt;")
                if text:
                    write(ET._escape_cdata(text, encoding))
                for e in elem:
                    _serialize_xml(write, e, encoding, qnames, None)
                write("&lt;/" + tag + "&gt;")
            else:
                write(" /&gt;")
    if elem.tail:
        write(ET._escape_cdata(elem.tail, encoding))

ET._serialize_xml = _serialize_xml

from collections import OrderedDict

class OrderedXMLTreeBuilder(ET.XMLTreeBuilder):
    def _start_list(self, tag, attrib_in):
        fixname = self._fixname
        tag = fixname(tag)
        attrib = OrderedDict()
        if attrib_in:
            for i in range(0, len(attrib_in), 2):
                attrib[fixname(attrib_in[i])] = self._fixtext(attrib_in[i+1])
        return self._target.start(tag, attrib)


tree = ET.parse("example1.xml", OrderedXMLTreeBuilder())
tree.write("new-data.xml")
</code></pre>
<p>How do I get the xml sorted?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>key</code> named argument for <a href="https://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow noreferrer"><code>list.sort</code></a> to use the <code>file</code> attribute of each <code>&lt;image&gt;</code> tag as the key for sorting:</p>
<blockquote>
<p>key specifies a function of one argument that is used to extract a comparison key from each list element (for example, key=str.lower). The key corresponding to each item in the list is calculated once and then used for the entire sorting process. The default value of None means that list items are sorted directly without calculating a separate key value.</p>
</blockquote>
<pre><code>import xml.etree.ElementTree

xml_string = r'''&lt;?xml-stylesheet type='text/xsl' href='image_metadata_stylesheet.xsl'?&gt;
&lt;dataset&gt;
  &lt;name&gt;imglab dataset&lt;/name&gt;
  &lt;comment&gt;Created by imglab tool.&lt;/comment&gt;
  &lt;images&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00003.jpg"&gt;
      &lt;box top="175" left="59" width="73" height="29"&gt;
        &lt;label&gt;groundpainting_hotstar&lt;/label&gt;
      &lt;/box&gt;
      &lt;box top="174" left="205" width="56" height="24"&gt;
        &lt;label&gt;groundpainting_yesbank&lt;/label&gt;
      &lt;/box&gt;
      &lt;box top="170" left="141" width="44" height="32"&gt;
        &lt;label&gt;groundpainting_vodafone&lt;/label&gt;
      &lt;/box&gt;
    &lt;/image&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00001.jpg"/&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00002.jpg"&gt;
      &lt;box top="198" left="17" width="32" height="10"&gt;
        &lt;label&gt;sightscreen_pepsi&lt;/label&gt;
      &lt;/box&gt;
    &lt;/image&gt;
 &lt;/images&gt;
&lt;/dataset&gt;'''

root = xml.etree.ElementTree.fromstring(xml_string)
images_root = root.find('images')
images = images_root.findall('image')
images.sort(key = lambda x: x.attrib['file'])
images_root[:] = images

print(xml.etree.ElementTree.tostring(root))
</code></pre>
<p>Alternate solution using <code>lxml</code> based off of <a href="https://stackoverflow.com/a/17654556/8955448">this answer</a> that points out that <code>lxml</code> serializes attributes in the order they are set (unlike <code>xml</code>):</p>
<pre><code>import lxml.etree

xml_string = r'''&lt;?xml-stylesheet type='text/xsl' href='image_metadata_stylesheet.xsl'?&gt;
&lt;dataset&gt;
  &lt;name&gt;imglab dataset&lt;/name&gt;
  &lt;comment&gt;Created by imglab tool.&lt;/comment&gt;
  &lt;images&gt;
    &lt;text&gt;lol&lt;/text&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00003.jpg"&gt;
      &lt;box top="175" left="59" width="73" height="29"&gt;
        &lt;label&gt;groundpainting_hotstar&lt;/label&gt;
      &lt;/box&gt;
      &lt;box top="174" left="205" width="56" height="24"&gt;
        &lt;label&gt;groundpainting_yesbank&lt;/label&gt;
      &lt;/box&gt;
      &lt;box top="170" left="141" width="44" height="32"&gt;
        &lt;label&gt;groundpainting_vodafone&lt;/label&gt;
      &lt;/box&gt;
    &lt;/image&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00001.jpg"/&gt;
    &lt;image file="/home/iris/Documents/SONY_MAX-20150408-200026-210358-00002.jpg"&gt;
      &lt;box top="198" left="17" width="32" height="10"&gt;
        &lt;label&gt;sightscreen_pepsi&lt;/label&gt;
      &lt;/box&gt;
    &lt;/image&gt;
 &lt;/images&gt;
&lt;/dataset&gt;'''

root = lxml.etree.fromstring(xml_string)
images_root = root.find('images')
images = images_root.findall('image')
images.sort(key = lambda x: x.attrib['file'])
images_root[:] = images

print(lxml.etree.tostring(root))
</code></pre>
<p>Note: This will remove any child (immediate descendant) of <code>&lt;images&gt;</code> that is not a <code>&lt;image&gt;</code>.</p>
</div>
<span class="comment-copy">Thank you.  It worked...but for some reason....this realigns the box attributes...for example the original layout is top, left, width and height...which got changed to height, left, top and width.</span>
<span class="comment-copy">@popeye Is there a particular reason you want to preserve the attribute order? <a href="https://stackoverflow.com/questions/14917943/python-lxml-enforcing-a-specific-order-for-attributes">Attribute order is not significant in XML</a>. <a href="https://stackoverflow.com/a/17654556/8955448">This answer</a> points out that <code>lxml</code> serializes attributes in the order they are set (unlike <code>xml</code>). I have updated my answer to include this alternative.</span>
<span class="comment-copy">thank you...this is really helpful.</span>
