<div class="post-text" itemprop="text">
<p>NEWBIE USING PYTHON (2.7.9)- When I export a gzipped file to a csv using: </p>
<pre><code>myData = gzip.open('file.gz.DONE', 'rb') 
myFile = open('output.csv', 'wb') with myFile:
        writer = csv.writer(myFile)
        writer.writerows(myData)    
print("Writing complete")
</code></pre>
<p>It is printing in the csv with a comma deliminated in every character. eg. </p>
<pre><code>S,V,R,","2,1,4,0,",",2,0,1,6,1,1,3,8,0,4,",",5,0,5,0,1,3,4,2,0,6,4,7,3,6,4,",",",",2,0,0,0,5,6,5,9,2,9,6,7,4,",",2,0,0,7,2,4,5,2,3,5,",",0,0,0,2,","
I,V,E,",",",",",",E,N,",",N,/,A,",",0,4,2,1,4,4,9,3,7,0,",":,I,R,_,",",N,/,A,",",U,N,A,N,S,W,",",",",",",",","
"
S,V,R,",",4,7,3,3,5,5,",",2,0,5,7,",",5,0,5,0,1,4,5,0,1,6,4,8,6,3,7,",",",",2,0,0,0,5,5,3,9,2,9,2,8,0,",",2,0,4,4,1,0,8,3,7,8,",",0,0,0,2,","
I,V,E,",",",",",",E,N,",",N,/,A,",",0,4,4,7,3,3,5,4,5,5,",",,:,I,R,_,",",N,/,A,",",U,N,A,N,S,W,",",",",",",",","
</code></pre>
<p>How do I get rid of the comma so that it is exported with the correct fields? eg. </p>
<blockquote>
<p>SVR,2144370,20161804,50501342364,,565929674,2007245235,0002,1,PPDAP,PPLUS,DEACTIVE,,,EN,N/A,214370,:IR_,N/A,,,,,
  SVR,473455,208082557,14501648637,,2000553929280,2044108378,0002,1,3G,CODAP,INACTIVE,,,EN,N/A,35455,:IR_,N/A,,,,,</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You are only opening the gzip file.  I think you are expecting the opened file to act automatically like an iterator.  Which it does.  However each line is a text string.  The writerows expects an iterator with each item being an array of values to write with comma separation.  Thus given an iterator with each item being a sting, and given that a string is an array of characters you get the result you found. </p>
<p>Since you didn't mention what the gzip data lines really contain I can't guess how to parse the lines into an array of reasonable chunks.  But assuming a function called 'split_line' appropriate to that data you could do</p>
<pre><code>with gzip.open('file.gz.Done', 'rb') as gzip_f:
  data = [split_line(l) for l in gzip_f]
  with open('output.csv', 'wb') as myFile:
    writer = csv.writer(myFile)
    writer.writerows(data)
    print("Writing complete")
</code></pre>
<p>Of course at this point doing row by row and putting the with lines together makes sense.</p>
<p>See <a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer">https://docs.python.org/2/library/csv.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I think it's simply because <code>gzip.open()</code> will give you a file-like object but  <a href="https://docs.python.org/3/library/csv.html#writer-objects" rel="nofollow noreferrer"><code>csvwriter.writerows()</code></a> needs a list of lists of strings to do its work. </p>
<p>But I don't understand why you want to use the <code>csv</code> module. You look like you only want to extract the content of the gzip file and save it in a output file uncompressed. You could do that like that:</p>
<pre><code>import gzip

input_file_name = 'file.gz.DONE'
output_file_name = 'output.csv'

with gzip.open(input_file_name, 'rt') as input_file:
    with open('output.csv', 'wt') as output_file:
        for line in input_file:
            output_file.write(line)

print("Writing complete")
</code></pre>
<p>If you want to use the <code>csv</code> module because you're not sure your input data is  properly formatted (and you want an error message right away) you could then do:</p>
<pre><code>import gzip
import csv

input_file_name = 'file.gz.DONE'
output_file_name = 'output.csv'

with gzip.open(input_file_name, 'rt', newline='') as input_file:
    reader_csv = csv.reader(input_file)
    with open('output.csv', 'wt', newline='') as output_file:
        writer_csv = csv.writer(output_file)
        writer_csv.writerows(reader_csv)

print("Writing complete")
</code></pre>
<p>Is that what you were trying to doÂ ? It's difficult to guess because we don't have the input file to understand. </p>
<p>If it's not what you want, could you care to clarify what you want?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since I now have information the gzipped file is itself comma, separated values it simplifies thus..</p>
<pre><code>with gzip.open('file.gz.DONE', 'rb') as gzip_f, open('output.csv', 'wb') as myFile:
  myfile.write(gzip_f.read())
</code></pre>
<p>In other words it is just a round about gunzip to another file.</p>
</div>
<span class="comment-copy">Sounds like a type mismatch.  Maybe writerows() expects an iterable but myData is actually a string?</span>
<span class="comment-copy">Thanks mr nick but that did not work writer.writerows() needs to take exactly one argument</span>
<span class="comment-copy">what if you pass <code>myData</code> as a <code>list</code> (e.g. <code>writer.writerows([myData])</code>) as suggested here: <a href="https://stackoverflow.com/a/1816897/1248974">Why does csvwriter.writerow() put a comma after each character?</a></span>
<span class="comment-copy">Nope- tried both "writer.writerows[myData]" and "writer.writerows([myData])"</span>
<span class="comment-copy">Thanks Samantha. The gzip data  contain 14,000 lines which each contain 21 comma seperated fields... eg. SVR,370,2011143804,05047364,,2056599674,200724525,0002,1,G,PPPCODAP,3LUS,DIVE,,,EN,N/A,0421449370,DS:IR_SMS,N/A,UW,,,,   Your suggestion came back with "NameError: name 'split_line' is not defined" ??</span>
<span class="comment-copy">Of course it did.  I said that "assuming a function called split_line..".  If your gzip data is already comma separated then why not just write it out directly instead of fooling around with the csv writer?</span>
<span class="comment-copy">oh ok.  I need it in CSV format??</span>
<span class="comment-copy">csv means comma separated values.  It is what you already have.    See new answer below.</span>
<span class="comment-copy">Thank you  ........</span>
