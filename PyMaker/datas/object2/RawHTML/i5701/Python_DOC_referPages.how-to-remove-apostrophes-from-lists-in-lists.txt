<div class="post-text" itemprop="text">
<p>I'm trying to calculate line averages from a <code>.csv</code> file and return a list of the averages of each line. Currently, I can get </p>
<pre><code>in_ = [['1,2'], ['1,1,1,1'], ['-1,0,1'], ['42,17']]
</code></pre>
<p>but I need to remove the apostrophes as to average the individual lists! I have tried using <code>int()</code> but have had no luck.</p>
<p>My desired output</p>
<pre><code>out = [[1, 2], [1, 1, 1, 1], [-1, 0, 1], [42, 17]]
</code></pre>
<p>my current code is:</p>
<pre><code>def line_averages(filename):
    """takes a file and returns the average values of each line in a
    .csv file"""
    f = open(filename, 'r')
    lines = f.readlines()
    #print(lines)
    f.close()
    words = []
    for line in lines:
        words.append(line.split())
    for i in words:
        words.replace("'", "")
    return words
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are re-inventing the CSV-reader wheel here. Use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code> module</a> to handle the splitting for you instead; we then only have to convert the string columns to integers:</p>
<pre><code>def line_averages(filename):
    """takes a file and returns the average values of each line in a
    .csv file"""
    with open(filename, 'r', newline='') as f:
        reader = csv.reader(f)
        for row in reader:
            yield [int(c) for c in row]
</code></pre>
<p>This produces a generator, and iteration gives you rows with integers:</p>
<pre><code>for row in line_averages(some_file_name):
    # do something with each row
</code></pre>
<p>You can also return a list of lists:</p>
<pre><code>def line_averages(filename):
    """takes a file and returns the average values of each line in a
    .csv file"""
    with open(filename, 'r', newline='') as f:
        reader = csv.reader(f)
        return [[int(c) for c in row] for row in reader]
</code></pre>
<p>Your attempt splits on <em>whitespace</em>, and not on commas. You'd have to explicitly split on <code>','</code>, and convert your columns to integers:</p>
<pre><code>def line_averages(filename):
    """takes a file and returns the average values of each line in a
    .csv file"""
    with open(filename, 'r') as f:
        return [[int(c) for c in line.split(',')] for line in f]
</code></pre>
<p>I used <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">nested list comprehensions</a> here to produce a list of lists, transforming each line from the file to a list of integers.</p>
<p>I also used the file as a <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer">context manager in a <code>with</code> statement</a>; this makes sure the file is closed no matter what happens in the managed block; there is no need to manually close it.</p>
<p>I also used the file as an <em>iterator</em>; each time you iterate (like the <code>for</code> loop would do) you get the next line in the file. There is no need to read all lines up front with <code>file.readlines()</code>.</p>
</div>
<span class="comment-copy">Thats because entire list element is one string. Try to split them first on <code>,</code> then cast to int</span>
<span class="comment-copy">By <i>"remove apostrophes"</i> do you mean "convert strings to integers"? That might be easier to search for.</span>
<span class="comment-copy">Could you show the code you're using to read from the csv file, please? There may be a way to do this automatically without a cumbersome post-processing step.</span>
<span class="comment-copy">Your problem is not "how to remove apostrophes" but "how to read numbers from a CSV file"</span>
<span class="comment-copy">Your question managed to avoid downvote hell and closure only <i>just</i>, because you added your own attempt at the solution. That gave me much more context to help you effectively. In future, make sure your question <i>starts</i> with that information.</span>
<span class="comment-copy">Thanks for replying, when using this exact code it outputs:     &lt;generator object line_averages at 0x181bb167d8&gt;</span>
<span class="comment-copy">@SebTerry: yes, you have an iterator. You can now use that in a <code>for</code> loop.</span>
