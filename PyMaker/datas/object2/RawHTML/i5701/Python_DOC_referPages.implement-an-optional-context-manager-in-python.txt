<div class="post-text" itemprop="text">
<p>We have a codebase with the following use pattern:</p>
<pre class="lang-python prettyprint-override"><code>factory = DataFactory(args)
dataset = factory.download_and_cache_big_dataset(key)
metadata = dataset.get_some_metadata()
</code></pre>
<p>Currently, <code>download_and_cache_big_dataset</code> fetches a very large file from S3 and puts it somewhere. Among other things, it does</p>
<pre class="lang-python prettyprint-override"><code>filename = get_s3_key(key)
filepath = os.path.join(get_tmp_dir(), filename)
s3.download_file(key, filepath)
return BigFileClass(filepath) # gets stored in a class somewhere
</code></pre>
<p>However, this file doesn't get deleted. This is fine when this function is called sparingly and relies on file caching, but bad when it is called repeatedly and we don't want to fill up the disk. Is there a way to refactor the code with a <a href="https://docs.python.org/3/library/contextlib.html" rel="nofollow noreferrer">context manager</a> such that we can use it as</p>
<pre class="lang-python prettyprint-override"><code>factory = DataFactory(args)
with factory.download_and_cache_big_dataset(key) as dataset:
    metadata = dataset.get_some_metadata()
    # do something with metadata

# file gets automatically deleted
</code></pre>
<p>But critically, <strong>without breaking the existing usage</strong>, so that the other code works as is? Or will there need to be a different method that returns the context manager?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you return an instance of <code>BigFileClass</code> to handle/represent the data, I would suggest the following.</p>
<p>I'm assuming that the data file is unique to each instance.</p>
<ul>
<li>Add an instance variable to <code>BigFileClass</code> to keep track of the path of the data file.</li>
<li>Add a <code>__del__</code> method to <code>BigFileClass</code> in which the data file is removed.</li>
</ul>
<p><strong>Edit:</strong> If you want to use <code>BigFileClass</code> as a contextmanager, define <code>__enter__</code> and <code>__exit__</code> methods for <code>BigFileClass</code>. The only thing that <code>__enter__</code> has to do in this case is basically <code>return self</code>.</p>
<p>I would leave the task of deleting the file to the <code>__del__</code> method (when the reference count for a <code>BigFileClass</code> reaches 0). It doesn't feel right to have the class instance still around when you have already deleted the data file.</p>
<hr/>
<p><em>Remark w.r.t. architecture.</em></p>
<p>The use of a factory seems like an unnecessary complication to me. IMO, <code>download_and_cache_big_dataset</code> could just be a function returning a <code>BigFileClass</code> instance.</p>
</div>
<span class="comment-copy">Can you give an example of the code that creates the file and the code that you are looking to get run automatically that will delete the file?</span>
<span class="comment-copy">@quamrana sure, updated.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/5019209/python-using-with-to-delete-a-file-after-use">Python using 'with' to delete a file after use</a></span>
<span class="comment-copy">What is <code>BigFileClass</code>? Is it a class you control? Does it have a <code>close</code> method, or some other method that performs cleanup?</span>
<span class="comment-copy">@user2357112 yep, I control it. It is a convenience class to represent the big data file on disk.</span>
<span class="comment-copy">What if I want the file to be deleted only when the code is used as <code>with ... as dataset:</code> and not in the old style of <code>dataset = ...</code> ?</span>
