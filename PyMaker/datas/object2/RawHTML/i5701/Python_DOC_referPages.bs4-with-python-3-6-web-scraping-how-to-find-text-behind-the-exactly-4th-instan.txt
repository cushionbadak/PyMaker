<div class="post-text" itemprop="text">
<p>I'm using BeautifulSoup4 on Python3.6 to web scrape a generated page. The information is always laid out exactly the same, but the information itself changes, which is what I'm scraping.</p>
<p>Imports: BeautifulSoup4, LXML, Tkinter, Sys, OS, Time</p>
<p>I've been using a basic soup.find to get the first bit of information, which is easy since it's always the very first tag.</p>
<pre><code>&lt;font face="Arial" size="-1"&gt;
</code></pre>
<p>Scraping that with:</p>
<pre><code>information = soup.find('font', {'face': 'Arial', 'size': '-1'}).b.div.previousSibling
</code></pre>
<p>always pulls what I'm looking for, which is [important information]. This is all in the <code>&lt;body&gt;</code>, with the first bit scraping successfully.</p>
<p>The issue I'm having is, I need the information that's just after the 4th instance of the tag</p>
<pre><code>&lt;font face="Arial" size="-1" color="BLACK"&gt;informationIneed&lt;/font&gt;
</code></pre>
<p>Which is inside the same line as several instances of </p>
<pre><code>&lt;td align="right"&gt;&lt;font face="Arial" size="-1" color="BLACK"&gt;INFORMATION I NEED&lt;/font&gt;&lt;/td&gt;
</code></pre>
<p>But the information changes. </p>
<p>When I replace the soup.find that pulls the first bit of information and turn it into</p>
<pre><code>information = soup.find('font', {'face': 'Arial', 'size': '-1', 'color': 'BLACK'}).b.div.previousSibling
</code></pre>
<p>I get "AttributeError: 'NoneType' object has no attribute 'previousSibling'. I assume this is because the information I'm browsing for doesn't have <code>&lt;div&gt;</code> or <code>&lt;b&gt;</code> tags, but the code I'm using wasn't generated myself and I'm still unfamiliar with how to adjust it correctly. Replacing <code>.b.div.previousSibling</code> with <code>.td.previousSibling</code> doesn't work and I'm not sure what else I should try.</p>
<p>TL;DR, does anyone know how to get the information directly after the 4th instance of <code>&lt;font face="Arial" size="-1" color="BLACK"&gt;</code> OR directly after the SECOND instance of <code>&lt;td align="right"&gt;&lt;font face="Arial" size="-1" color="BLACK"&gt;</code>?</p>
<p>Edit 1: An easier way is to find the next integer, which can go up to the triple digits.</p>
<p>It looks like <code>&lt;td align="right"&gt;&lt;font face="Arial" size="-1" color="BLACK"&gt;&amp;nbsp;1&lt;/font&gt;</code>, where I'd want to scrape the 1 just before <code>&lt;/font&gt;</code>.  <code>&lt;td align="right"&gt;&lt;font face="Arial" size="-1" color="BLACK"&gt;</code> is not unique, there are two. The one I am hunting for is the second occurrence of this string.</p>
<p><strong>Edit 2:</strong> SOLUTION!</p>
<pre><code>with open("output.html") as url:
    soup = BeautifulSoup(url, 'lxml')
    tags = soup.findAll('font', {'face': 'Arial', 'size': '-1', 'color': 'BLACK'})
    print('There are {} matching tags'.format(len(tags)))
    print('Second: {}'.format(tags[3]))
</code></pre>
<p>I will leave this on the internet for any other folks having similar issues and can't grasp the documentation. Just be aware that it counts from 0, not 1. tags[0] is the first instance. Just keep printing more numbers.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think that you are looking for <code>findAll</code> which returs a list of all occurences of a tag instead of just returning the first occurence.</p>
<pre><code>info = soup.findAll('font', {'face': 'Arial', 'size': '-1'})[4].text
</code></pre>
<p>should give what you need...</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>bs.find_all</code> and set a limit to first <code>N</code> matches found.</p>
<pre><code>result = soup.find_all(
    'font', {'face': 'Arial', 'size': -1, 'color': 'BLACK'}, limit=4
)
information = result[-1].text
print(information)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Collect the list of tags you're interested in:</p>
<pre><code>list_of_tags = soup.find_all('font', {'face': 'Arial', 'size': '-1', 'color': 'BLACK'})
</code></pre>
<p>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer">islice</a> to get the desired elemtents:</p>
<pre><code>from itertools import islice

infos = islice(list_of_tags, 4, 5)   
# will be an empty list if less than 5 elements in it
if infos:
    print(infos[0].text)
</code></pre>
<p>Does this give you what you wanted?</p>
</div>
<span class="comment-copy">Found the solution independently but this is very similar to what I already have. Thank you anyway!</span>
<span class="comment-copy">I like the use of <code>limit</code>, thanks for sharing.</span>
