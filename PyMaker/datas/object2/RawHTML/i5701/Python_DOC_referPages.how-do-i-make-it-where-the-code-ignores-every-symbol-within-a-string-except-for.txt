<div class="post-text" itemprop="text">
<p>I was trying to make a program that could be used for one-time pad encryption by counting the number of characters and having a random number for each one. I started making a line that would let the program ignore spaces, but then I realized I would also need to ignore other symbols. I had looked at <em> <a href="https://stackoverflow.com/questions/18455222/how-to-count-the-number-of-letters-in-a-string-without-the-spaces">How to count the number of letters in a string without the spaces?</a></em> for the spaces, 
and it proved very helpful. However, the answers only show how to remove one symbol at a time. To do what I would like by using that answer, I would have to have a long line of  <code>- how_long.count('</code><em>character</em><code>')</code>'s, and symbols that I may not even know of may still be copied in. Thus, I am asking for a way where it will only count all the alphabetic characters I write down in a list. Is this possible, and if so, how would it be done?</p>
<p>My code:</p>
<pre><code>import random
import sys

num = 0

how_long = input("Message (The punctuation will not be counted)\n     Message: ")
charNum = len(how_long) - how_long.count(' ')

print("\n")
print("Shift the letters individually by their respective numbers.")

for num in range(0, charNum-1):
    sys.stdout.write(str(random.randint(1, 25))+", ")
print(random.randint(1, 25))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">Regex</a> to find the number of letters in the input:</p>
<pre><code>import re, sys, random
how_long = input("Message (The punctuation will not be counted)\n     Message: ")

regex_for_letters = "[A-Za-z]"

letter_count = 0
for char in how_long: 
    check_letter = re.match(regex_for_letters, char)
    if check_letter:
        letter_count += 1
print(letter_count)

for num in range(0, letter_count-1):
    sys.stdout.write(str(random.randint(1, 25))+", ")
print(random.randint(1, 25))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your desired outcome is to clean a string so it only contains a desired subset of characters the following will work but, I'm not sure I totally understand what your question is so you will probably have to modify somewhat.</p>
<pre><code>desired_letters = 'ABCDOSTRY'
test_input = 'an apple a day keeps the doctor away'
cleaned = ''.join(l for l in test_input if l.upper() in desired_letters)
# cleaned == 'aaadaystdoctoraay'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Filter the string:</p>
<pre><code>source_string='My String'
allow_chars=['a','e','i','o','u'] #whatever characters you want to accept
source_string_list=list(source_string)

source_string_filtered=list(filter(lambda x: x in allow_chars,source_string_list))
</code></pre>
<p>the count would be: <code>len(source_string_filtered)</code></p>
</div>
