<div class="post-text" itemprop="text">
<p><strong>Context:</strong>
I have an internal Linux command, let's say "signals", which will give output whatever the signals placed for that day by oozie.</p>
<p>For example:</p>
<pre><code>$signals | grep -i empty
*/user/oozie/coordinator/signals/2017/10/12/oltp1/_insurance_transaction_empty*
*/user/oozie/coordinator/signals/2017/10/12/oltp2/_loan_transaction_empty*

$signals | grep -i maxid
*/user/oozie/coordinator/signals/2017/10/12/oltp1/_insurance_transaction_maxid*
*/user/oozie/coordinator/signals/2017/10/12/oltp1/_loan_transaction_maxid*
</code></pre>
<p>I am writing a python script which runs every day and will grep for "empty" and "maxid" signals per <em>oltp</em> and send an email.</p>
<p>Let's say there are empty signal for oltp1 and maxid signal for oltp2. It will send an email with all oltps and signals.</p>
<p>I have a configfile which has all oltps in 1 column:</p>
<pre><code>oltp1
oltp2
soltp
doltp
</code></pre>
<p>Code:</p>
<pre><code>#!/usr/bin/python

import commands
import os

config_file="/home/xxx/config_file"
for var in confil_file:
    var=var.strip()
    print " checking with OLTP:"+var
    empty_cnt_loan=commands.getoutput("signals | grep -i empty | grep -i $var | wc -l")
    maxid_cnt_loan=commands.getoutput("signals | grep -i maxid | grep -i $var| wc -l")
    print empty_cnt_loan
</code></pre>
<p>attempts:
tried with $var</p>
<pre><code>ERROR: grep: write error:Broken Pipe
</code></pre>
<p>tried with %var
empty_cnt_loan has value 0, where when i run the command in linux box, its has 2 value.</p>
<p>I tried subprocess, but since I am new I couldn't figure out how to use it.. Any help would be much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Running a complex Bash pipeline to do things which are trivial in Python is an antipattern.  Just run <code>signals</code> once and loop over the output in Python.</p>
<p>Assuming <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer">Python 3.6+</a>,</p>
<pre><code>#!/usr/bin/env python3

from subprocess import run, PIPE

with open("/home/xxx/config_file") as config:
    vars = [line.strip() for line in config.readlines()]
empty_cnt_loan = {x: 0 for x in vars}
maxid_cnt_loan = {x: 0 for x in vars}
p = run(['signals'], stdout=PIPE, check=True, universal_newlines=True)
for line in p.stdout.split('\n'):
    line = line.lower()
    for var in vars:
        if var in line:
            if 'maxid' in line:
                maxid_cnt_loan[var] += 1
            if 'empty' in line:
                empty_cnt_loan[var] += 1
</code></pre>
<p>As an aside, <code>grep</code> has an option <code>-c</code> to count the number of matches; but you really almost never need <code>grep</code> (or Awk, or <code>sed</code>, or <code>cut</code>, or a number of other standard utilities) when you have Python.</p>
</div>
<span class="comment-copy"><code>var</code> isn't evaluated: try <code>commands.getoutput("signals | grep -i maxid | grep -i {} | wc -l".format(var))</code></span>
<span class="comment-copy">Thanks, but i got an error :(  <code>Traceback (most recent call last): File "&lt;stdin&gt;",line 1,in &lt;module&gt; ValueError: zero length field name in format</code></span>
