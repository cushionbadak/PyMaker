<div class="post-text" itemprop="text">
<p>How can I do it with itertools or do it efficiently? The length of that list is 557845</p>
<pre><code>#Generate all combinations of 4 elements and put on list    
listLol=list(map("".join, itertools.combinations('1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',4)))
#This is too slow
    for a in listLol:
        for b in listLol:
            for c in listLol:
                for d in listLol:
                    for e in listLol:
                        cadena="SomeString-"+a+"-"+b+"-"+c+"-"+d+"-"+e
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can indeed do this with <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer"><code>itertools.product</code></a>. </p>
<pre><code>IllAdvised = ["SomeString-" + "-".join(i) for i in itertools.product(listLol, repeat=5)]
</code></pre>
<p>You also might want to consider <code>itertools.combinations_with_replacement</code> rather than simply <code>itertools.combinations</code> for generating your original list. <strong>EDIT:</strong> <code>itertools.product</code> might be what you want for the original list as well. If this is the case, then you can go straight to using <code>itertools.product(alphabetALPHABET, repeat=20)</code>. (Where <code>alphabetALPHABET</code> is your original string, of course.)</p>
<p>However, no matter how you do this, it is going to take a very, very long time. There are 557845^5 elements in your list, or 7311616^5 if you use <code>combinations_with_replacement</code> or <code>itertools.product</code>, as you probably should. That's over 10^28 elements in this new list. Even if you avoid memory issues with a generator:</p>
<pre><code>for i in itertools.product(listLol, repeat=5): 
   cadena="SomeString-" + "-".join(i)
   #do something with cadena
</code></pre>
<p>the runtime for this loop will exceed the current age of the universe. This barrier is intractable, no matter how well you know the language or whatever small optimizations you apply. I suggest you try a different approach.</p>
</div>
<span class="comment-copy">Huh... you want to run 5 nested loops on a list of half a million elements... what are you trying to do?</span>
<span class="comment-copy">Aren't your nested loops essentially just creating combinations out of <code>listLol</code>? With duplication, sure. But you can emulate that. Can you describe a bit more about what your actual goals are?</span>
<span class="comment-copy">At a billion attempts per second you'll succeed after about 60 times the age of the universe. No biggie.</span>
<span class="comment-copy">In case someone wonders: <a href="http://www.wolframalpha.com/input/?i=557845%2A%2A5+%2F+(1+billion+per+second)+%2F+(age+of+the+universe+in+seconds)+%2F+2" rel="nofollow noreferrer">the calculation</a></span>
<span class="comment-copy">Yeah in fact there are a lot of combinations, I think I have to find another approach</span>
<span class="comment-copy">@StefanPochmann Good catch -- I will edit the answer to use <code>itertools.product</code> instead.</span>
<span class="comment-copy">@StefanPochmann Just needed to name the default argument. Fixed. Incidentally, SO provides an "edit" button right in the bottom left, so next time you see a problem that can be fixed in 20 characters you can add them yourself instead of leaving a 70-character complaint :)</span>
