<div class="post-text" itemprop="text">
<p>Scikit-learn often uses <code>joblib</code> to parallelize with calls like <code>Parallel(n_jobs=n_jobs)(delayed(function)(param_to_function) for param_to_function in iterable)</code>.</p>
<p><a href="https://stackoverflow.com/questions/6476825/what-do-double-parentheses-mean-in-a-function-call-e-g-funcstuffstuff">This helpful question and answer</a> indicate that this double-parenthesis business means the second set is passed to whatever is returned by the call involving the first set, which makes a lot of sense if the thing returned is a callable.</p>
<p>But here the thing returned by <code>Parallel(n_jobs=n_jobs)</code> should be a <code>Parallel</code> object, right? And then we're passing it a <code>generator</code> object given by the loop in the second parenthetical. You shouldn't be able to directly pass a generator to a class after construction like that. There should be some function call between the object and the input. Or in python is there <code>__some_special_function__</code> that works with this syntax?</p>
<p>What is this syntax doing, exactly?</p>
</div>
<div class="post-text" itemprop="text">
<p>The "special function" is probably just a <a href="https://docs.python.org/3/reference/datamodel.html#object.__call__" rel="nofollow noreferrer"><code>__call__</code> method</a>. An instance of a class with that method can be called just like a function. In this case, Parallel presumably defines <code>__call__</code> to accept a generator.</p>
<p>(Note, that's not to say it's a good idea to write code like your example. It's needlessly confusing.)</p>
</div>
