<div class="post-text" itemprop="text">
<p>Hello so i need to draw a game board with dynamic width and height:</p>
<p>format:</p>
<pre><code>  ----   ----   ----
|  01  |  02  |  03  |
  ----   ----   ----
|  04  |  05  |  06  |
  ----   ----   ---- 
|  07  |  08  |  09  |
  ----   ----   ----
Enter width and height (min = 2x2, max 6x8):
</code></pre>
<p>This is what i got now:</p>
<pre><code>def board_draw(height, width):
    for x in range(height):
        print(" --- " * width)
        print("|   |" * width)
    print(" --- " * width)

heightinp= int(input("Enter the height of the board: "))
widthinp= int(input("Enter the width of the board: "))

board_draw(heightinp,widthinp)
</code></pre>
<p>Could someone help me with printing the numbers inside i cant get it to work..</p>
</div>
<div class="post-text" itemprop="text">
<p><code>str.format()</code> is a good choice for inserting numbers into those strings.
<code>str.join()</code> is a good choice for joining together a lot of strings. In your case, I'd use a generator expression inside the <code>.join()</code>.</p>
<pre><code>def board_draw(height, width):
    for x in range(height):
        print("  ---- " * width)
        print("|" +
              "|".join('  {:02d}  '.format(x * width + y + 1)
                       for y in range(width)) +
              "|")
    print("  ---- " * width)
</code></pre>
<p>Result:</p>
<pre class="lang-none prettyprint-override"><code>$ python3 x.py 
Enter the height of the board: 3
Enter the width of the board: 4
  ----   ----   ----   ---- 
|  01  |  02  |  03  |  04  |
  ----   ----   ----   ---- 
|  05  |  06  |  07  |  08  |
  ----   ----   ----   ---- 
|  09  |  10  |  11  |  12  |
  ----   ----   ----   ---- 
</code></pre>
<p>Just for fun, here is one that uses Unicode box-drawing characters. (Note: this is Python3 syntax).</p>
<pre><code>def board_draw(height, width):
    top = "┌" + "┬".join(["─"*6]*width) + "┐\n"
    bottom = "└" + "┴".join(["─"*6]*width) + "┘"
    middle = "├" + "┼".join(["─"*6]*width) + "┤\n"
    print(top +
          middle.join(
              "│" +
              "│".join('  {:02d}  '.format(x * width + y + 1)
                       for y in range(width)) +
              "│\n"
              for x in range(height)) +
          bottom)
</code></pre>
<p>Result:</p>
<pre class="lang-none prettyprint-override"><code>$ python3 x.py 
Enter the height of the board: 4
Enter the width of the board: 3
┌──────┬──────┬──────┐
│  01  │  02  │  03  │
├──────┼──────┼──────┤
│  04  │  05  │  06  │
├──────┼──────┼──────┤
│  07  │  08  │  09  │
├──────┼──────┼──────┤
│  10  │  11  │  12  │
└──────┴──────┴──────┘
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Printing the numbers makes your grid dramatically more complicated. You'll have to rewrite your entire board draw function. </p>
<p>What you essentially want to do is: </p>
<ol>
<li>Draw the top</li>
<li>For each row, draw a side, then a number, then a side as many times as there are squares, keeping track of what square was last. </li>
<li>Draw the bottom</li>
</ol>
<p>Here's one possible implementation of what you want:</p>
<pre><code>def board_draw(height, width):
    square = 0
    print(" --- " * width)
    for x in range(height):
        line = "| "
        for i in range(0, width):
            line += format(square, '02d') + " | "
            square += 1
        print(line)
    print(" --- " * width)    

heightinp= int(input("Enter the height of the board: "))
widthinp= int(input("Enter the width of the board: "))

board_draw(heightinp,widthinp)
</code></pre>
</div>
<span class="comment-copy">It isn’t drawing the boxes correctly, either.</span>
<span class="comment-copy">Read docs about <code>str.format</code>. <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">docs.python.org/3/library/string.html#format-string-syntax</a></span>
