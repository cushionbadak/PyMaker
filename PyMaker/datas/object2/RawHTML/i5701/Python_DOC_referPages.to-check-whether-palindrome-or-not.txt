<div class="post-text" itemprop="text">
<p>On compilation of this code it shows <code>None</code> as Output</p>
<pre><code>list = ["malayalam"]
reverse_list = list.reverse()
print(reverse_list)
while list == reverse_list:
    print('the answer is palindrome')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>reverse() mutates the original list and doesn't return a new one.
so  reverse_list=list.reverse() makes reverse_list None.</p>
<p>Here's an answer you might want to check out
<a href="https://stackoverflow.com/questions/17331290/how-to-check-for-palindrome-using-python-logic">How to check for palindrome using Python logic</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You're using wrong reverse function in python try this one</p>
<pre><code>def is_palindrome1(st):
    ln = len(st)
    for i in range(ln//2):
        if st[i] != st[ln - 1 - i]:
            return False
    return True

def is_palindrome2(st):
    lst=list("malayalam")
    reversed_list=list(reversed(lst))
    return lst == reversed_list

def is_palindrome3(st):
    p1 = st[:len(st)//2]
    p2 = st[(len(st)+1)//2:]
    return p1 == p2

lst = "malayalam"

if is_palindrome1(lst):
    print('the answer is palindrome')
else:
    print('not palindrome')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead reverse the string itself</p>
<p>Use the following</p>
<pre><code>&gt;&gt;&gt; a = "Malayalam"
&gt;&gt;&gt; rev = a[::-1]
&gt;&gt;&gt; if a == rev:
&gt;&gt;&gt;   print("palindrome")
&gt;&gt;&gt; else:
&gt;&gt;&gt;   print("Not a palindrome")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Why it says None ?</strong></p>
<p>Here's an example,</p>
<pre><code>&gt;&gt;&gt; mylist = [1, 2, 3, 4, 5]
&gt;&gt;&gt; mylist
[1, 2, 3, 4, 5]

&gt;&gt;&gt; mylist.reverse()
None

&gt;&gt;&gt; mylist
[5, 4, 3, 2, 1]
</code></pre>
<p>As you can see, calling mylist.reverse() returned None, but modified the original list object. This implementation was chosen deliberately by the developers of the Python standard library:</p>
<blockquote>
<p>The reverse() method modifies the sequence in place for economy of space when reversing a large sequence. To remind users that it operates by side effect, it does not return the reversed sequence. <a href="https://docs.python.org/3/library/stdtypes.html?highlight=list#mutable-sequence-types" rel="nofollow noreferrer">Source</a></p>
</blockquote>
<p>So in your case it should print <strong>None</strong>, and since <strong>list == reverse_list</strong> is evaluated to <strong>false</strong> nothing other than the previous will print. Why is explained earlier.</p>
<p><strong><em>Hope you want to check a word is palindrome or not</em></strong>, if so you don't need a list for that. Below solution uses some inbuilt functions to achieve that.</p>
<pre><code>word = "malayalam"
rev = ''.join(reversed(word))

if (word == rev):
    print('the answer is palindrome')
else:
    print('the answer is not a palindrome')
</code></pre>
<p><a href="https://repl.it/repls/WellgroomedDevotedFieldspaniel" rel="nofollow noreferrer">See this working example</a></p>
</div>
<span class="comment-copy">Are you running this in REPL?</span>
<span class="comment-copy">Do you want to check if the <i>list</i> is palindromic?  Or that it <i>contains</i> palindromes?  Or don't you actually need a list and are mistaken?</span>
<span class="comment-copy">As stated by @xtofl, please state your requirements properly. Also, I request all the people writing an answer to this question, to wait for some time and allow the OP to explain his problem more briefly.</span>
