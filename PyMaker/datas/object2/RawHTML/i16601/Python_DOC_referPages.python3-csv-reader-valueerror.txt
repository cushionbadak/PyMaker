<div class="post-text" itemprop="text">
<p>I searched through the python csv questions, can't seem to find anything addressing the reader error I'm getting.</p>
<p>I have a csv file with 6 columns, trying to access two of them:</p>
<pre><code>import csv

with open('/home/conjugater/Downloads/aapl.csv', newline='') as csvfile:
  dialect=csv.Sniffer().sniff(csvfile.read(1024))
  csvfile.seek(0)
  reader=csv.reader(csvfile, dialect)
  for row in reader:
      for Date, Open, High, Low, Close, Volume in row:
          print(Date, Close)
</code></pre>
<p>I'm not done coding, but this is my first time using the csv module and I'm just trying to get a feel for it (relatively new to python in general).</p>
<pre><code>Traceback (most recent call last):
File "reader.py", line 8, in &lt;module&gt;
for Date, Open, High, Low, Close, Volume in row:
ValueError: need more than 5 values to unpack
</code></pre>
<p>I can get the columns I want with</p>
<pre><code>for row in reader:
    print(row[0], row[4])
</code></pre>
<p>but I know there's a way to assign each column a name with python as well; any help much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have 2 for loops when you only need one:</p>
<pre><code>for (Date, Open, High, Low, Close, Volume) in reader:
    print(Date, Close)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why are you assigning <code>newline=''</code>? That tells <code>open()</code> to treat each empty string as the end of a line. Try this instead: <code>newline='\n'</code>. Or try it without passing <code>newline</code>. </p>
<p>Vor's comment below is useful too. <a href="https://docs.python.org/2/library/functions.html#open" rel="nofollow">See docs</a> on <code>open</code> for more information.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're close, but you need to use </p>
<pre><code>with open('/home/conjugater/Downloads/aapl.csv', newline='') as csvfile:
  dialect=csv.Sniffer().sniff(csvfile.read(1024))
  csvfile.seek(0)
  reader=csv.DictReader(csvfile, dialect, fieldnames = ['Date', 'Open', 'High', 'Low', 'Close', 'Volume'])
  for row in reader:
      for Date, Open, High, Low, Close, Volume in row:
          print("{}: {}".format(Date, Close))
</code></pre>
<p>Hope that helps....</p>
</div>
<span class="comment-copy">looks like your file has only 5 columns.</span>
<span class="comment-copy">@dano print(len(row)) returns 6 for every row</span>
<span class="comment-copy">I think he probably wants <code>for (Date, Open, High, Low, Close, Volume) in reader:</code>. But yeah, that's his problem.</span>
<span class="comment-copy">@dano Good call. I updated the answer.</span>
<span class="comment-copy">true, kinda new to python (and programming in general), not yet as efficient as I'd like to be.  Thanks for pointing that out, I'm trying to develop efficient coding practices</span>
<span class="comment-copy">@bushc Not sure if you realized this or not, but this is the actual cause of your error. Doing <code>for Date, Open, High, Low, Close, Volume in row:</code> like you are is actually iterating over each  of the six elements in the <code>row</code> tuple one at a time.</span>
<span class="comment-copy">@dano does that slow things down? not sure I understand why that's a bad thing?</span>
<span class="comment-copy">or specify <code>rU</code> mode</span>
<span class="comment-copy">@Vor <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs.python.org/3/library/csv.html</a> says to use newline='' for file objects</span>
<span class="comment-copy">@nofinator cool. good to know. thanks.</span>
<span class="comment-copy">@bushc thanks for pointing this out</span>
<span class="comment-copy">thanks, I'll check that out after I try @dano 's fix</span>
