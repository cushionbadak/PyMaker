<div class="post-text" itemprop="text">
<p>I'm using <code>assertEquals()</code> from <code>unittest.TestCase</code>. What I want to do now is to call a function and do something there when the assertion fails, I wonder if there's a way of doing this?</p>
</div>
<div class="post-text" itemprop="text">
<p>In general you shouldn't do it, but if you really want to, here is a simple example:</p>
<pre><code>import unittest

def testFailed():
    print("test failed")

class T(unittest.TestCase):
    def test_x(self):
        try:
            self.assertTrue(False)
        except AssertionError:
            testFailed()
            raise

if __name__ == "__main__":
    suite = unittest.defaultTestLoader.loadTestsFromTestCase(T)
    unittest.TextTestRunner().run(suite)
</code></pre>
<p>Another, more generic possibility is to write your own <code>runTest</code> method (as mentioned in <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase" rel="nofollow">the documentation</a>) which will wrap all tests with <code>try</code>/<code>except</code> block. This would be even more recommended if you really need to do it, as it will keep your test code clean.</p>
</div>
<div class="post-text" itemprop="text">
<p>Catch it:</p>
<pre><code>try:
    # something
except AssertionError:
    # do something
</code></pre>
</div>
<span class="comment-copy">I only want to execute the code when the assertion fails. I think the code under finally will be executed in both circumstances?</span>
<span class="comment-copy">Yes correct. So just use try except and under except raise the exception after calling the desired function</span>
