<div class="post-text" itemprop="text">
<p>I created embedded python interpreter which is calling a function, that has 3 parameters. I successfully managed to do this for function without parameters, but when I execute <code>PyObject_CallObject</code> the program crashes with SEGFAULT:</p>
<pre><code>#0  0x00007ffff79c3a25 in PyEval_EvalCodeEx () from /usr/lib/libpython3.2mu.so.1.0
#1  0x00007ffff79c42bf in ?? () from /usr/lib/libpython3.2mu.so.1.0
#2  0x00007ffff79c730a in PyObject_Call () from /usr/lib/libpython3.2mu.so.1.0
#3  0x00000000004f3f31 in Huggle::Python::PythonScript::Hook_SpeedyFinished(Huggle::WikiEdit*, bool) ()
</code></pre>
<p>The source code of call is:</p>
<pre><code>void PythonScript::Hook_SpeedyFinished(WikiEdit *edit, bool successfull)
{
    if (edit == nullptr)
        return;
    if (this-&gt;ptr_Hook_SpeedyFinished != nullptr)
    {
        HUGGLE_DEBUG("Calling hook Hook_SpeedyFinished @" + this-&gt;Name, 2);
        // let's make a new list of params
        PyObject *args = PyTuple_New(3);
        PyObject *page_name = PyUnicode_FromString(edit-&gt;Page-&gt;PageName.toUtf8().data());
        PyObject *user_name = PyUnicode_FromString(edit-&gt;User-&gt;Username.toUtf8().data());
        PyObject *success;
        if (!successfull)
            successfull = PyUnicode_FromString("fail");
        else
            successfull = PyUnicode_FromString("success");
        if (PyTuple_SetItem(args, 0, page_name))
            HUGGLE_DEBUG("Failed to pass page_name to tuple @hook_speedy_finished", 3);
        if (PyTuple_SetItem(args, 1, user_name))
            HUGGLE_DEBUG("Failed to pass user to tuple @hook_speedy_finished", 3);
        if (PyTuple_SetItem(args, 2, success))
            HUGGLE_DEBUG("Failed to pass success to tuple @hook_speedy_finished", 3);
        PyObject_CallObject(this-&gt;ptr_Hook_SpeedyFinished, args);
        HUGGLE_DEBUG("finished", 1);
    }
}
</code></pre>
<p>Full source code of this .cpp file is <a href="https://github.com/huggle/huggle3-qt-lx/blob/master/huggle/pythonengine.cpp" rel="nofollow">https://github.com/huggle/huggle3-qt-lx/blob/master/huggle/pythonengine.cpp</a></p>
<p>What is wrong? Is this even proper way to call the function? I am following <a href="https://docs.python.org/3/c-api/object.html" rel="nofollow">https://docs.python.org/3/c-api/object.html</a> and <a href="https://docs.python.org/2/c-api/tuple.html" rel="nofollow">https://docs.python.org/2/c-api/tuple.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Here is an example from the python documentation.</p>
<pre><code>PyObject *arglist;
...
arglist = Py_BuildValue("(l)", eventcode);
result = PyObject_CallObject(my_callback, arglist);
Py_DECREF(arglist);
if (result == NULL)
    return NULL; /* Pass error back */
/* Here maybe use the result */
Py_DECREF(result);
</code></pre>
<p>It seems to me you should take care of the refcount. </p>
<p><a href="https://docs.python.org/3.0/extending/extending.html#calling-python-functions-from-c" rel="nofollow noreferrer">https://docs.python.org/3.0/extending/extending.html#calling-python-functions-from-c</a></p>
<p>Segmentation fault is discussed here.</p>
<p><a href="https://stackoverflow.com/questions/16606872/calling-python-method-from-c-or-c-callback">Calling python method from C++ (or C) callback</a></p>
</div>
<span class="comment-copy">There is an obvious error: instead of <code>success</code> (pointer type) I am passing result of string convert fc to <code>successfull</code>. I am an idiot that I didn't notice that :P</span>
