<div class="post-text" itemprop="text">
<p>I have an inheritance hierarchy whereby some of the classes have a class property named e.g., 'pickled'.  I would like to get <code>A.pickled</code> if it exists or None if not â€” even if A derives from many classes including e.g., B and <code>B.pickled</code> exists (or not).</p>
<p>Right now my solution crawls <code>A</code>'s <code>__mro__</code>.  I would like a cleaner solution if possible.</p>
</div>
<div class="post-text" itemprop="text">
<p>To bypass the normal search through the <code>__mro__</code>, look directly at the attribute dictionary of the class instead. You can use the <a href="https://docs.python.org/3/library/functions.html#vars" rel="nofollow noreferrer"><code>vars()</code> function</a> for that:</p>
<pre><code>return vars(cls).get('pickled', None)
</code></pre>
<p>You could just access the <code>__dict__</code> attribute directly too:</p>
<pre><code>return cls.__dict__.get('pickled', None)
</code></pre>
<p>but using built-in functions is preferred over direct access to the double-underscored attribute dictionary.</p>
<p><code>object.__getattribute__</code> is the wrong method to use for looking at class attributes; see <a href="https://stackoverflow.com/questions/24150894/what-is-the-difference-between-type-getattribute-and-object-getattribute">What is the difference between type.__getattribute__ and object.__getattribute__?</a></p>
<p><code>type.__getattribute__</code> is what is used for attribute access on classes, but that'd still search the MRO too.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure, but perhaps</p>
<pre><code>try:
    return object.__getattribute__(cls, 'pickled')
except AttributeError:
    return None
</code></pre>
</div>
<span class="comment-copy">What problem are you trying to solve?</span>
<span class="comment-copy">@IfLoop I am using the class property to automatically pickle particular properties.  I am also using another class property to automatically generate a user interface, and yet more class properties to automatically generate histories of parameter values.  Do you have a better solution?</span>
<span class="comment-copy">Thank you very much.  We're lucky to have you on Stackoverflow.</span>
