<div class="post-text" itemprop="text">
<p>I am working with a huge xml-file and try to extract information from different elements.</p>
<pre><code>import xml.etree.ElementTree as ET
tree = ET.parse('t.xml')
root = tree.getroot()
</code></pre>
<p>To find the elements I use the find method:</p>
<pre><code>elm = root.find('.//Element[@elmid="1234"]')
</code></pre>
<p>From this I extract information and in addition I need information from the parent element. But <code>elm.find('..')</code> returns only <code>None</code> as documented here:
<a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="noreferrer">https://docs.python.org/3/library/xml.etree.elementtree.html</a></p>
<p>Now I use the folowing:</p>
<pre><code>prt = root.find('.//Element[@elmid="1234"]/..')     
elm = prt.find('/Element[@elmid="1234"]')
</code></pre>
<p>This looks a bit unnatural to me, but works. </p>
<p>Do you know a better way to do this?
Do you know why only <code>None</code> is returned?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>xml.etree</code> API only supports a limited version of XPath. The <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#supported-xpath-syntax" rel="noreferrer"><code>xml.etree</code> docs</a> for the <code>..</code> XPath expression state:</p>
<blockquote>
<p>Selects the parent element. <strong>Returns None if the path attempts to
  reach the ancestors of the start element (the element find was called
  on).</strong></p>
</blockquote>
<p>Directly getting the parent element is <a href="https://stackoverflow.com/a/2170994/1599111">not supported in the <code>xml.etree</code> API</a>. I would therefore recommend to use <a href="http://lxml.de" rel="noreferrer"><code>lxml</code></a>, where you can simply use <a href="http://lxml.de/api/lxml.etree._Element-class.html#getparent" rel="noreferrer"><code>getparent()</code></a> to get the parent element:</p>
<pre><code>elm = root.find('.//Element[@elmid="1234"]')
elm.getparent()
</code></pre>
<p><code>lxml</code> also has a full <a href="http://lxml.de/xpathxslt.html" rel="noreferrer">XPath 1.0 implementation</a>, so <code>elem.xpath('..')</code> would work as well.</p>
</div>
<div class="post-text" itemprop="text">
<p>I had a similar problem and I got a bit creative. Turns out nothing prevents us from adding the parentage info ourselves. We can later strip it once we no longer need it.</p>
<pre><code>def addParentInfo(et):
    for child in et:
        child.attrib['__my_parent__'] = et
        addParentInfo(child)

def stripParentInfo(et):
    for child in et:
        child.attrib.pop('__my_parent__', 'None')
        stripParentInfo(child)

def getParent(et):
    if '__my_parent__' in et.attrib:
        return et.attrib['__my_parent__']
    else:
        return None

tree = ...
addParentInfo(tree.getroot())
el = tree.findall(...)[0]
parent = getParent(el)
while parent:
    ...
    parent = getParent(parent)
...
stripParentInfo(tree.getroot())
</code></pre>
</div>
<span class="comment-copy">thx!! funny that the don't implement a getparent originally.</span>
