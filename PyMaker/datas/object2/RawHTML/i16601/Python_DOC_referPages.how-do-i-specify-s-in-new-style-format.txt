<div class="post-text" itemprop="text">
<p>I would like to translate the following code</p>
<pre><code>print "%-*s" % (10, 'foo')
</code></pre>
<p>which would print <code>foo</code> with 7 trailing spaces (field width == 10, left justified), into a Python 3 <code>.format()</code> call, but not having much luck googling.. Is it possible?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>'{1:{0}}'.format(10, 'foo')
</code></pre>
<p>or with implicit indices:</p>
<pre><code>'{:{}}'.format('foo', 10)
</code></pre>
<p>See <a href="https://docs.python.org/2/library/string.html#format-string-syntax">https://docs.python.org/2/library/string.html#format-string-syntax</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This should work.    </p>
<pre><code>'{:&lt;10}'.format('foo')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about this:</p>
<pre class="lang-python prettyprint-override"><code>"{:&lt;10}".format("foo")
</code></pre>
<p>Which will produce (spaces replaced by underscores):</p>
<blockquote>
<p>'foo_______'</p>
</blockquote>
<p>For more information check out the section <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow">Format specification mini-language</a> of the python documentation.</p>
</div>
<span class="comment-copy">Why <code>{1:{0}}</code> in the first one and not <code>{0:{1}}</code> (so the argument order would stay the same)?</span>
<span class="comment-copy">So that the argument order would stay the same (w/r/t your previous solution with operator <code>%</code>)</span>
<span class="comment-copy">This puts leading spaces, not trailing.</span>
<span class="comment-copy">True, but I need to pass the width as an argument...</span>
<span class="comment-copy">Edited to trailing spaces. For leading spaces use <code>'{:&gt;10}'.format('foo')</code> in stead.</span>
<span class="comment-copy">True, but I need to pass the width as an argument...</span>
<span class="comment-copy">@thebjorn Indeed, however not doing so was not stated as a requirement. If this is required, use Kos' solution (i.e. nested formatting strings).</span>
<span class="comment-copy">technically that is true, and that is the best kind of truth... (otoh, the <code>*</code> in the format string could have been a clue.. :-)</span>
