<div class="post-text" itemprop="text">
<p>I want to generate multiple streams of random numbers in python.
I am writing a program for simulating queues system and want one stream for the inter-arrival time and another stream for the service time and so on.</p>
<p><code>numpy.random()</code> generates random numbers from a global stream.</p>
<p>In matlab there is <a href="http://www.mathworks.com/help/matlab/ref/randstream.html" rel="noreferrer">something called RandStream</a> which enables me to create multiple streams.</p>
<p>Is there any way to create something like RandStream in Python</p>
</div>
<div class="post-text" itemprop="text">
<p>Both Numpy and the internal random generators have instantiatable classes.</p>
<p>For just <code>random</code>:</p>
<pre><code>import random
random_generator = random.Random()
random_generator.random()
#&gt;&gt;&gt; 0.9493959884174072
</code></pre>
<p>And for Numpy:</p>
<pre><code>import numpy
random_generator = numpy.random.RandomState()
random_generator.uniform(0, 1, 10)
#&gt;&gt;&gt; array([ 0.98992857,  0.83503764,  0.00337241,  0.76597264,  0.61333436,
#&gt;&gt;&gt;         0.0916262 ,  0.52129459,  0.44857548,  0.86692693,  0.21150068])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Veedrac's answer did not address how one might generate independent streams.</p>
<p>The best way I could find to generate independent streams is to use a replacement for numpy's RandomState. This is provided by the <a href="https://bashtage.github.io/randomgen/index.html" rel="nofollow noreferrer">RandomGen package</a>.</p>
<p>It supports <a href="https://bashtage.github.io/randomgen/parallel.html#independent-streams" rel="nofollow noreferrer">independent random streams</a>, but these use one of three random number generators: PCG64, ThreeFry or Philox. If you want to use the more conventional MT19937, you can rely on <a href="https://bashtage.github.io/randomgen/parallel.html#jump-advance-the-prng-state" rel="nofollow noreferrer">jumping</a> instead.</p>
</div>
<span class="comment-copy">Are you intending this for variance reduction purposes?</span>
<span class="comment-copy">Where do I find the docs for the first one? I cannot seem to Google it properly...</span>
<span class="comment-copy">@Atcold "The functions supplied by this module are actually bound methods of a hidden instance of the <code>random.Random</code> class. You can instantiate your own instances of <code>Random</code> to get generators that donâ€™t share state." - <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer">docs.python.org/3/library/random.html</a></span>
<span class="comment-copy">But how do you generate independent streams? Are successive seeds guaranteed to work?</span>
<span class="comment-copy">@Praveen If you just want different streams, use <code>random.Random()</code>. If you want to seed it for reproducibility, any seeds that differ will be fine.</span>
