<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1238306/what-does-do-to-strings-in-python">What does % do to strings in Python? [closed]</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>Can you explain what this python code means.  </p>
<pre><code>     for v in m.getVars():
           print('%s %g' % (v.varName, v.x))  
</code></pre>
<p>The output for the print is</p>
<pre><code>     x 3
     y 5
</code></pre>
<p>The '3' and '5' are values of '(v.varName, v.x)' I don't get how it knows to print 'x' and 'y' and what other uses are there for '%' other than finding the remainder.</p>
</div>
<div class="post-text" itemprop="text">
<p>The command </p>
<pre><code>for v in m.getVars():
</code></pre>
<p>Assigns the list of all Var objects in model m to variable v.</p>
<p>You can then query various attributes of the individual variables in the list. </p>
<p>For example, to obtain the variable name and solution value for the first variable in list v, you would issue the following command</p>
<pre><code>print v.varName, v.x
</code></pre>
<p>You can type help(v) to get a list of all methods on a Var object</p>
<p>As others mentioned % is just place holders
To understand how your code works, inspect the model m</p>
</div>
<div class="post-text" itemprop="text">
<p>It is a way to simplify strings when contain many variables. In python, as you see, you made a string in your print statement which reflects the variables v.varName and v.x. When a percent sign is used in a string, it will be matched, in order, with the parameters you give it.</p>
<p>There are specific letters used for each TYPE of variable. In your case you used "s" and "g" representing a string and a number. Of course numbers are turned into strings if you are creating a string (like in this case).</p>
<p>Example:</p>
<pre><code>x = 20
y = "hello"
z = "some guy"

resulting_string = "%s, my name is %s. I am %g years old" % (y, z, x)

print resulting_string
</code></pre>
<p>The result will be:</p>
<pre><code>hello, my name is some guy. I am 20 years old
</code></pre>
<p>Notice that the order in the variables section is what gives the correct ordering.</p>
</div>
<span class="comment-copy">It is format string. <code>%s</code> is a placeholder for string and <code>%g</code> probably an integer. (I'm not sure about it). Parameters after last <code>%</code> would be placed instead of placeholders.</span>
<span class="comment-copy">From the docs, @SAM is correct <a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">It's an overloaded binary operator that when applied to a string is known as <a href="https://docs.python.org/2/reference/expressions.html?highlight=interpolation#binary-arithmetic-operations" rel="nofollow noreferrer">string interpolation</a>.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/q/1238306/1258041">What does % do to strings in Python?</a></span>
<span class="comment-copy">I think that this answers the actual question, not just the title of the question.</span>
