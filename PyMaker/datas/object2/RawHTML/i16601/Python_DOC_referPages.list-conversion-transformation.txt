<div class="post-text" itemprop="text">
<p>Any way to transform list_1 into list_2?:</p>
<pre><code>list_1 = [('h', 'e', 'l', 'l', 'o'), ('w', 'o', 'r', 'd')]

list_2 = ['hello', 'word']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is the data.</p>
<pre><code>data = [('h', 'e', 'l', 'l', 'o'), ('w', 'o', 'r', 'd')]
</code></pre>
<p>Let's start with the basics. We just try to work on one tuple. The following loop will print out every single string in the tuple.</p>
<pre><code>element = ('h', 'e', 'l', 'l', 'o')
for character in element:
    print(character)
</code></pre>
<p>Looking at the output we can see a simple way to create a combined string. Just declare an empty string at the beginning, then add all the characters to it.</p>
<pre><code>word = ''
for character in element:
    word = word + character
print(word)
</code></pre>
<p>The result looks good, but there is an better way to do it. Strings have a <a href="https://docs.python.org/3/library/stdtypes.html?highlight=join#str.join" rel="nofollow">join</a> method we can use here.</p>
<pre><code>print(''.join(element))
</code></pre>
<p>You get the same result as with the loop before: <code>'hello'</code>.</p>
<p>Now we have to expand our code to use all the tuples in our data. Just add another loop on the outside.</p>
<pre><code>for element in data:
    print(''.join(element))
</code></pre>
<p>To create a new list we use a pattern we used before when we built a string. We create an empty list before the loop and add the results of the <code>join</code> to it.</p>
<pre><code>result = []
for element in data:
    result.append(''.join(element))
print(result)
</code></pre>
<p>Code like this calls for a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>.</p>
<pre><code>result = [''.join(element) for element in data]
print(result)
</code></pre>
<p>That's all.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>list_2 = [''.join(word) for word in list_1]
</code></pre>
</div>
<span class="comment-copy">What did you try? Did you read the documentation of the <a href="https://docs.python.org/2/library/stdtypes.html#string-methods" rel="nofollow noreferrer">methods of strings</a>?</span>
<span class="comment-copy">As @Bakuriu says, you should try before asking, and post in your question what have you tried to solve the question.</span>
<span class="comment-copy">Nice.  Transferring upvotes to @Matthias...</span>
<span class="comment-copy">Thank you. I just felt the urgent need to explain how you can start to solve problems like this.</span>
