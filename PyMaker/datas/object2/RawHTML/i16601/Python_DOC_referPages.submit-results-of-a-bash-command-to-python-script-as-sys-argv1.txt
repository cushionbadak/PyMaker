<div class="post-text" itemprop="text">
<p>I have a list of files to be used as input that is very long. I was looking at the file input module, which seems to have some attractive features, [<a href="https://docs.python.org/3/library/fileinput.html%5d%5b1%5d" rel="nofollow">https://docs.python.org/3/library/fileinput.html][1]</a></p>
<p>But I could not figure out how to use it without entering each file name by hand, which would be prohibitively long.</p>
<p>What I would love to do is submit something like</p>
<pre><code>python myscript.py (ls -d -1 dir/* | grep summary.txt)
</code></pre>
<p>Or I could push this same bash command to filelist.txt and submit that way; either way the trick would be to submit without having to type each file.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the <a href="https://docs.python.org/2/library/os.html" rel="nofollow">os package</a> or <a href="https://docs.python.org/2/library/subprocess.html" rel="nofollow">subprocess</a>. You would just have to figure out the exact command you would need to run in the terminal then read it and split it.</p>
<pre><code>import os
files = os.popen('ls').read()
# "file1\nfile2\nfile3\nfile4"
files.rsplit()
# ['file1', 'file2', 'file3', 'file4']
</code></pre>
<p>Now you have a list of inputs that you can pass to the function</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm pretty sure <strong>you cannot use <code>sys.argv</code> for this.</strong> Try using <code>subprocess.Popen()</code>:</p>
<pre><code>import subprocess
args = subprocess.Popen(['ls', '-d', '-1', 'dir/*', '|', 'grep', 'summary.txt'], stdout=subprocess.PIPE)
out, err = args.communicate()
#Do something with out
</code></pre>
</div>
<span class="comment-copy">Maybe this will work: <code>ls -d -1 dir/* | xargs grep summary.txt | xargs python myscript.py </code></span>
<span class="comment-copy">You should probably not be calling on an external utility to generate the file names to begin with. Python is perfectly capable of all of that. Never <a href="http://mywiki.wooledge.org/ParsingLs" rel="nofollow noreferrer">use ls output</a> in a program either.</span>
<span class="comment-copy">What are the contents of <code>summary.txt</code>? Under no circumstances should you be processing the output of <code>ls</code>. (Also, <code>grep</code> reads from standard input <i>or</i> a file argument, not both.)</span>
<span class="comment-copy">@chepner - why "under no circumstances" could you help me understand why this is bad practice?</span>
<span class="comment-copy">See <a href="http://mywiki.wooledge.org/ParsingLs" rel="nofollow noreferrer">mywiki.wooledge.org/ParsingLs</a></span>
<span class="comment-copy">Use <code>os.listdir</code> instead of a pipe to <code>ls</code>.</span>
<span class="comment-copy">This won't work. <code>ls</code> doesn't understand globs and definitely can't create a pipe or execute the grep utility. You should be executing a shell (or better, not relying on external programs for this simple task at all).</span>
