<div class="post-text" itemprop="text">
<p>I saw this in a code, </p>
<pre><code>print('Job: {!r}, {!s}'.format(5,3))
</code></pre>
<p>and the answer is </p>
<pre><code>Job: 5, 3
</code></pre>
<p>how does <code>{!r}</code> evaluate? Does it have any special meaning there? </p>
</div>
<div class="post-text" itemprop="text">
<p><code>!r</code> calls <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow"><code>repr()</code></a> on the value before interpolating.</p>
<p>For integers, the <code>str()</code>, default <code>format()</code> and <code>repr()</code> output doesn't differ. For other types, such as strings, the difference is more visible:</p>
<pre><code>&gt;&gt;&gt; print('Repr of a string: {!r}'.format("She said: 'Hello, world!'"))
Repr of a string: "She said: 'Hello, world!'"
</code></pre>
<p>Note that quotes were included.</p>
<p>See the <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow">Format String Syntax</a>; the character after <code>!</code> specifies the <em>conversion</em> applied to the value. The default is no conversion, but you can use either <code>!r</code> or <code>!s</code> to convert a value to its <code>repr()</code> representation or <code>str()</code> string output, respectively.</p>
<p>You'd usually use conversion when either dealing with a type that doesn't specify an explicit <code>__format__()</code> method (such as <code>bytes</code>), when explicitly formatting to the <code>repr()</code> output (very helpful for debug output), or when you have to handle a mix of types.</p>
</div>
<span class="comment-copy">What is so terrible about this question to deserve downvoting? For integers <code>!r</code> makes no difference from <code>!s</code> here, so that can be surprising.</span>
<span class="comment-copy">@MartijnPieters thanks for this comment, some people prefer to down vote before they even read it yet they can't give the solution.</span>
<span class="comment-copy">Your post <i>does</i> lack information as to what you expected instead. I had to <i>infer</i> from the fact that you also have <code>{!s}</code> in your format that you perhaps were surprised there was no difference in output. It would have been helpful had you made it explicit <i>why</i> you asked the question, or showed that you had read the documentation.</span>
<span class="comment-copy">@MartijnPieters noted. I would do as you've instructed next time.</span>
<span class="comment-copy">Martijn  ,is !s for str()??</span>
<span class="comment-copy">@RAJ: yes, I state so in the answer.</span>
<span class="comment-copy">@MartijnThanks, it really helpful answer, it should be get always upwordvote.</span>
<span class="comment-copy">@MartijnPieters you have the insights of a master. Thanks for the clarity. I wish I could reach you formally through mail, is it possible?</span>
<span class="comment-copy">@iamshola: I reserve email for business and personal contacts only, sorry.</span>
