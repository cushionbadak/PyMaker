<div class="post-text" itemprop="text">
<p>If I want to make a base class that other classes will inherit from, but will never use the class variables from, what should I set the class variables to?</p>
<p>For example:</p>
<pre><code>class Spam:
    time_to_cook = None

    def eat(self):
        ...

class SpamWithEggs(Spam):
    time_to_cook = Minutes(5)

    def eat(self):
        ...
</code></pre>
<p>All subclasses will have their own <code>time_to_cook</code>, so its value in <code>Spam</code> has no effect on the functioning of the program.</p>
<pre><code>class Spam:
    time_to_cook = None
</code></pre>
<p>looks good to me, but it doesn't give any information about the type of <code>time_to_cook</code>. Therefore I'm leaning towards</p>
<pre><code>class Spam:
    time_to_cook = Minutes(0)
</code></pre>
<p>but that could give the misleading impression that the value of <code>time_to_cook</code> is actually used.</p>
<p>I'm also considering missing it out entirely, and mentioning it in the docstring instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>I like shavenwarthog's answer, but it is a little strange to use an exception directly as the value of an attribute. So, instead, you could pass it something that will raise an error no matter what method you call:</p>
<pre><code>class Complainer:
    def __getattr__(self, name):
        raise NotImplementedError 
</code></pre>
<p>and use it like so:</p>
<pre><code>class Spam(object):
    time_to_cook = Complainer()
</code></pre>
<p>then, whenever you try to call any of <code>Minute</code>'s methods, you'll get an exception. Alternatively, if you're never going to be instantiating <code>Spam</code> directly, you can just <a href="https://docs.python.org/3/library/abc.html" rel="nofollow">make it entirely abstract</a> and not worry about it.</p>
</div>
<div class="post-text" itemprop="text">
<p>I suggest <strong>NotImplementedError</strong>.  It doesn't give any hint as to what the type should be, but it's very clear that the value should not be used directly.</p>
<pre><code>class Spam(object):
    time_to_cook = NotImplementedError

    def eat(self):
        ...

class SpamWithEggs(Spam):
    time_to_cook = Minutes(5)
</code></pre>
</div>
<span class="comment-copy">You could also set it to None or zero or whatever placeholder value you want, <i>and</i> mention in the docstring what kind of value it should be set to.</span>
<span class="comment-copy">Note that <code>SpamWithEggs</code> is <i>not</i> a subclass of <code>Spam</code> (because the latter isn't listed as a base class of the former).</span>
<span class="comment-copy">@martineau OOPs, fixed now.</span>
<span class="comment-copy">Can you set it to <code>Minute(0)</code>, then put a doc string saying it is not used in the base class?</span>
<span class="comment-copy">Except that <code>NotImplementedError</code> is a type, so using it as value this way is a little weird IMHO, even though (obviously) legal.</span>
<span class="comment-copy">@martineau: true. <code>NotImplementedError()</code> is a little more proper, as it's an instance vs a type, but in neither case does it signify the type of the variable.  It's a hack :)</span>
