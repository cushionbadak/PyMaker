<div class="post-text" itemprop="text">
<p>I'm trying to concatenate some dictionaries.  The best way I've come up with to do that is to use <code>dict1.update(dict2)</code>.  </p>
<p>This is the code I'm trying to run, but it evaluates to None.  Why?</p>
<pre><code>{k:30 for k in [4, 9, 11, 6]}.update({k:31 for k in [1, 3, 5, 7, 8, 10, 12]})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since <code>update</code> doesn't return a reference to the updated dictionary, you can use the following instead:</p>
<pre><code>import itertools
d = dict(itertools.chain({k:30 for k in [...]}.items(),
                         {k:31 for k in [...]}.items()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>dict.update</code> method works in-place and therefore always returns <code>None</code>.  It is no different than other in-place methods such as <code>dict.clear</code> and <code>list.append</code>.</p>
<p>Note too that this behavior is mentioned in the <a href="https://docs.python.org/3/library/stdtypes.html#dict.update" rel="nofollow">docs</a>:</p>
<blockquote>
<p><code>update([other])</code></p>
<p>Update the dictionary with the key/value pairs from <code>other</code>, overwriting existing keys. <strong>Return <code>None</code></strong>.</p>
</blockquote>
<p>Emphasis mine.</p>
</div>
<span class="comment-copy">Because <code>update</code> changes the dictionary in-place, and doesn't return anything explicitly</span>
<span class="comment-copy">You're updating the first temporary dictionary with the contents of the second one <i>in place</i>.</span>
