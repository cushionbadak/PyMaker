<div class="post-text" itemprop="text">
<p>In the Python tutorial book I'm using, I typed an example given for <strong>simultaneous assignment</strong>. I get the aforementioned ValueError when I run the program, and can't figure out why.</p>
<p>Here's the code:</p>
<pre><code>#avg2.py
#A simple program to average two exam scores
#Illustrates use of multiple input

def main():
    print("This program computes the average of two exam scores.")

    score1, score2 = input("Enter two scores separated by a comma: ")
    average = (int(score1) + int(score2)) / 2.0

    print("The average of the scores is:", average)

main()
</code></pre>
<p>Here's the output.</p>
<pre><code>&gt;&gt;&gt; import avg2
This program computes the average of two exam scores.
Enter two scores separated by a comma: 69, 87
Traceback (most recent call last):
  File "&lt;pyshell#4&gt;", line 1, in &lt;module&gt;
    import avg2
  File "C:\Python34\avg2.py", line 13, in &lt;module&gt;
    main()
  File "C:\Python34\avg2.py", line 8, in main
    score1, score2 = input("Enter two scores separated by a comma: ")
ValueError: too many values to unpack (expected 2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Judging by the prompt message, you forgot to call <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="noreferrer"><code>str.split</code></a> at the end of the 8th line:</p>
<pre><code>score1, score2 = input("Enter two scores separated by a comma: ").split(",")
#                                                                ^^^^^^^^^^^
</code></pre>
<p>Doing so splits the input on the comma.  See a demonstration below:</p>
<pre><code>&gt;&gt;&gt; input("Enter two scores separated by a comma: ").split(",")
Enter two scores separated by a comma: 10,20
['10', '20']
&gt;&gt;&gt; score1, score2 = input("Enter two scores separated by a comma: ").split(",")
Enter two scores separated by a comma: 10,20
&gt;&gt;&gt; score1
'10'
&gt;&gt;&gt; score2
'20'
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The above code will work fine on Python 2.x. Because <code>input</code> behaves as <code>raw_input</code> followed by a <code>eval</code> on Python 2.x as documented here - <a href="https://docs.python.org/2/library/functions.html#input" rel="nofollow">https://docs.python.org/2/library/functions.html#input</a></p>
<p>However, above code throws the error you mentioned on Python 3.x. On Python 3.x you can use the <code>ast</code> module's <a href="https://docs.python.org/2/library/ast.html#ast.literal_eval" rel="nofollow"><code>literal_eval()</code></a> method on the user input. </p>
<p>This is what I mean:</p>
<pre><code>import ast

def main():
    print("This program computes the average of two exam scores.")

    score1, score2 = ast.literal_eval(input("Enter two scores separated by a comma: "))
    average = (int(score1) + int(score2)) / 2.0

    print("The average of the scores is:", average)

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is because behavior of input changed in python3</p>
<p>In python2.7 input returns value and your program work fine in this version</p>
<p>But in python3 input returns string</p>
<p>try this and it will work fine!</p>
<pre><code>score1, score2 = eval(input("Enter two scores separated by a comma: "))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>that means your function return more value!</p>
<p>ex:</p>
<p>in python2 the function <code>cv2.findContours()</code> return --&gt; <code>contours, hierarchy</code></p>
<p>but in python3 <code>findContours(image, mode, method[, contours[, hierarchy[, offset]]]) -&gt; image, contours, hierarchy</code></p>
<p>so when you use those function, <code>contours, hierachy = cv2.findContours(...)</code> is well by python2, but in python3 function return 3 value to 2 variable.</p>
<p>SO  ValueError: too many values to unpack (expected 2)</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/19098478/python-valueerror-too-many-values-to-unpack">python valueerror : too many values to unpack</a></span>
<span class="comment-copy">This is because of you are using python3 check my answer it may help you :)</span>
<span class="comment-copy">Huh, never considered using <code>literal_eval</code> for that!</span>
