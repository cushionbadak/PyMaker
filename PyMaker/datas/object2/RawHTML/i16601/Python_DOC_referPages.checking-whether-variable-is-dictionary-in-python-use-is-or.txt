<div class="post-text" itemprop="text">
<p>Summary: I have a variable called <code>'parent'</code> that is a dictionary in python. I want to check if it is a <code>dict</code> object. However, using <code>"type(parent) is dict"</code> gives me <code>'False'</code>. </p>
<p>NOTE: I have the following library loaded in my python script: </p>
<pre><code>from google.appengine.ext import ndb
</code></pre>
<p>Why is this happening? I suspected at first it is because this variable <code>'parent'</code> is created using the <code>json</code> library's <code>'loads'</code> method.</p>
<pre><code>parent = json.loads(self.request.body)
</code></pre>
<p>However, even when I create parent like so,</p>
<pre><code>parent = {}
</code></pre>
<p>I get the the same results as observed below:</p>
<pre><code>        print type(parent)
          &gt;&gt; &lt;type 'dict'&gt;
        print type(parent) is dict
          &gt;&gt; False
        print type({}) is type(parent)
          &gt;&gt; True
        print type(parent) == dict
          &gt;&gt; False
        print type({}) == type(parent)
          &gt;&gt; True
</code></pre>
<p>What's going on here? Is this a python version issue? Or does this have to do with the fact I've loaded google's app engine library? When I execute the following commands in a normal terminal, with no libraries loaded (Python 2.7.5), I get the following results, which are what I expect:</p>
<pre><code>Python 2.7.5 (default, Sep 12 2013, 21:33:34) 
[GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin
&gt;&gt;&gt; parent = {}
&gt;&gt;&gt; print type(parent)
&lt;type 'dict'&gt;
&gt;&gt;&gt; print type(parent) is dict
True
&gt;&gt;&gt; print type({}) is dict
True
&gt;&gt;&gt; print type({}) is type(parent)
True
&gt;&gt;&gt; print type({}) == type(parent)
True
</code></pre>
<p>Thanks in advance for any guidance!</p>
</div>
<div class="post-text" itemprop="text">
<p>What's most likely happening is that GAE is using some subclass of <code>dict</code> behind the scenes.</p>
<p>The idiomatic way to check whether an object is an instance of a type in python is the <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="noreferrer"><code>isinstance()</code></a> built-in function:</p>
<pre><code>&gt;&gt;&gt; parent = {}
&gt;&gt;&gt; isinstance(parent, dict)
True
</code></pre>
<p>... which works for instances of the type itself, and of subclasses.</p>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/1504717/why-does-comparing-strings-in-python-using-either-or-is-sometimes-produce">Why does comparing strings in Python using either '==' or 'is' sometimes produce a different result?</a></span>
<span class="comment-copy">I expect that GAE is using some sort of non-<code>dict</code> under the hood in order to optimize code behavior.</span>
<span class="comment-copy">Did you name a variable <code>dict</code>?</span>
<span class="comment-copy">Try <code>print dict</code> and show us what happens.</span>
<span class="comment-copy">Judging by the tests with <code>type({})</code>, I would be surprised if this is the cause.</span>
