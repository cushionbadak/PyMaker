<div class="post-text" itemprop="text">
<p>I have a JSON file named debug.json that I created in Python3.3 that looks  like this:    </p>
<pre><code>{"TIME": 55.55, "ID":155,"DATA": [17,22,33,44,55]}{"TIME": 56.55, "ID":195,"DATA": [17,22,ff,44,55]}
</code></pre>
<p>I'm trying to load it with the following code:</p>
<pre><code>import json
with open("debug.json",'r',encoding='utf-8') as f:
    testing = json.loads(f.read())
</code></pre>
<p>However when I try this I get the following error:</p>
<pre><code>ValueError: Extra data line 1 column 92
</code></pre>
<p>This is where the second JSON object starts in the text  file...I'm guessing that I am missing something pretty trivial  here but I haven't found any examples that relate to my problem. Any help is appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/json.html#json.JSONDecoder.raw_decode" rel="nofollow"><code>json.JSONDecoder.raw_decode</code></a>, which accepts JSON with extra data at the end, such as another JSON object, and returns a tuple with the first object decoded and the position of the next object.</p>
<p>Example with your JSON :</p>
<pre><code>import json

js = """{"TIME": 55.55, "ID":155,"DATA": [17,22,33,44,55]}{"TIME": 56.55, "ID":195,"DATA": [17,22,ff,44,55]}"""

json.JSONDecoder().raw_decode(js) # ({'TIME': 55.55, 'DATA': [17, 22, 33, 44, 55], 'ID': 155}, 50)

js[50:] # '{"TIME": 56.55, "ID":195,"DATA": [17,22,ff,44,55]}'
</code></pre>
<p>As you can see, it successfully decoded the first object and told us where the next object starts (in this case at the 50th character).</p>
<p>Here is a function that I made that can decode multiple JSON objects and returns a list with all of them :</p>
<pre><code>def multipleJSONDecode(js):
    result = []
    while js:
        obj, pos = json.JSONDecoder().raw_decode(js)
        result.append(obj)
        js = js[pos:]
    return result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you create the file, make sure that you have at most one valid JSON string <em>per line</em>.  Then, when you need to read them back out, you can loop over the lines in the file one at a time:</p>
<pre><code>import json
testing = []
with open("debug.json",'r',encoding='utf-8') as f:
    for line in f:
        testing.append(json.loads(line))
</code></pre>
</div>
