<div class="post-text" itemprop="text">
<p>I would like to replace text in a file using a regexp and Python. Using <code>sed</code> I can can do something like this on the command line</p>
<pre><code>sed -r 's/([0-9]{1,3}\.)([0-9]{1,3}\.)([0-9]{1,3}\.)([0-9]{1,3})/\1\2xx.xx/' ./input/my_file &gt; ./output/my_file_new
</code></pre>
<p>Which basically takes looks for a string of ip=[4 octets] and replaces the last two with xx.</p>
<p>The input file would look like</p>
<pre><code>name=rockband&amp;ip=176.4.23.71&amp;releasedate=none
name=rockband2&amp;ip=121.1.44.52&amp;releasedate=none
</code></pre>
<p>The desired output file looks like</p>
<pre><code>name=rockband&amp;ip=176.4.xx.xx&amp;releasedate=none
name=rockband2&amp;ip=121.1.xx.xx&amp;releasedate=none
</code></pre>
<p>I need to put this into a Python script I am using</p>
<pre><code>import re
regexp = re.compile(r's/([0-9]{1,3}\.)([0-9]{1,3}\.)([0-9]{1,3}\.)([0-9]{1,3})/\1\2xx.xx/')

def replace(source_file_path):
fh, target_file_path = mkstemp()

with codecs.open(target_file_path, 'w', 'utf-8') as target_file:
    with codecs.open(source_file_path, 'r', 'utf-8') as source_file:
        for line in source_file:
            print(line)
            target_file.write( !! How to use sub in here )
remove(source_file_path)
move(target_file_path, source_file_path)
</code></pre>
<p>How can I use the <code>sub()</code> method to achieve what I want to do? I need to pass 3 arguments to this method and can only think of how to pass 2, I don't know what that third argument should be</p>
<pre><code>target_file.write(re.sub(regexp, line))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Minimal required change to you code would be:</p>
<pre><code>import re
regexp = re.compile(r'([0-9]{1,3}\.)([0-9]{1,3}\.)([0-9]{1,3}\.)([0-9]{1,3})')

def replace(source_file_path):
    fh, target_file_path = mkstemp()

    with codecs.open(target_file_path, 'w', 'utf-8') as target_file:
        with codecs.open(source_file_path, 'r', 'utf-8') as source_file:
            for line in source_file:
                print(line)
                target_file.write(regexp.sub(r'\1\2xx.xx', line))
    remove(source_file_path)
    move(target_file_path, source_file_path)
</code></pre>
<p><code>regexp</code> only defines what to match. <code>sub()</code> has an argument of what to substitute with.</p>
<p>You can either call <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub()</code></a> which takes three required arguments: what to match, what to replace it with, which string to work on. Or as in the example above when you already have a precompiled regex, you can use its <a href="https://docs.python.org/3/library/re.html#re.Pattern.sub" rel="nofollow noreferrer"><code>sub()</code></a> method in which case need to say what to replace with and what string to work on.</p>
</div>
<span class="comment-copy">Uhm, Sample I/O?</span>
<span class="comment-copy">So replacing every digit after third <code>.</code> into a <code>x</code> before the first <code>&amp;</code>?</span>
<span class="comment-copy">Unlike in case of <code>sed</code> syntax, your sub expect what to match and what to replace it as two arguments.</span>
<span class="comment-copy">Thank you @Ondrej works great, just what I wanted</span>
