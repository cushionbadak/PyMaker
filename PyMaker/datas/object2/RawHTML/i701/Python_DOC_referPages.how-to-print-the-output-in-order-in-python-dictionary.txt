<div class="post-text" itemprop="text">
<p>I tried to print the output in order as mentioned in header but still im receiving the output in unordered. Please help on this.</p>
<p><strong>Test.csv</strong></p>
<pre><code>/,9.8G,6.8G,27%
/home,4.8G,3.6G,22%
/opt,9.8G,5.2G,44%
/tmp,3.9G,3.6G,2%
</code></pre>
<p><strong>Code</strong></p>
<pre><code>import csv
from collections import OrderedDict
import collections
disk_status = {'DiskStatus': []}
header = ['Mount', 'Total', 'available', 'used']
with open('test.csv') as infile:
    reader = csv.reader(infile)
    for line in reader:
        disk_status["DiskStatus"].append(collections.OrderedDict(dict(zip(header, line))))

print(disk_status)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'DiskStatus': [{'available': '6.8G', 'Mount': '/', 'Total': '9.8G', 'used': '27%'}, {'available': '3.6G', 'Mount': '/home', 'Total': '4.8G', 'used': '22%'}, {'available': '5.2G', 'Mount': '/opt', 'Total': '9.8G', 'used': '44%'}, {'available': '3.6G', 'Mount': '/tmp', 'Total': '3.9G', 'used': '2%'}]}
</code></pre>
<p><strong>Expected Result</strong></p>
<pre><code>{'DiskStatus': [{'Mount': '/', 'Total': '9.8G','available': '6.8G','used': '27%'},{'Mount': '/home','Total': '4.8G','available': '3.6G','used': '22%'},{'Mount': '/opt','Total': '9.8G','available': '5.2G',
'used': '44%'},{'Mount': '/tmp','Total': '3.9G','available': '3.6G','used': '2%'}]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just do not create a <code>dict</code>, simply pass <code>zip</code> result to <code>collections.OrderedDict</code>:</p>
<pre><code>disk_status["DiskStatus"].append(collections.OrderedDict(zip(header, line)))
</code></pre>
<p><em>This is not required for Python 3.7 and higher, as since 3.7 <code>dict</code> keeps the order of the inserted elements (<a href="https://docs.python.org/3/whatsnew/3.7.html" rel="nofollow noreferrer">https://docs.python.org/3/whatsnew/3.7.html</a>)</em></p>
</div>
<div class="post-text" itemprop="text">
<p>Do not create dict inside <code>OrderedDict</code>. 
Updated code will be</p>
<pre><code>import csv
from collections import OrderedDict
import collections
disk_status = {'DiskStatus': []}
header = ['Mount', 'Total', 'available', 'used']
with open('test.csv') as infile:
    reader = csv.reader(infile)
    for line in reader:
        #updated line
        disk_status["DiskStatus"].append(collections.OrderedDict(zip(header, line)))

print(disk_status)
</code></pre>
<p>Output: </p>
<pre><code>{'DiskStatus': [OrderedDict([('Mount', '/'), ('Total', '9.8G'), ('available', '6.8G'), ('used', '27%')]), OrderedDict([('Mount', '/home'), ('Total', '4.8G'), ('available', '3.6G'), ('used', '22%')]), OrderedDict([('Mount', '/opt'), ('Total', '9.8G'), ('available', '5.2G'), ('used', '44%')]), OrderedDict([('Mount', '/tmp'), ('Total', '3.9G'), ('available', '3.6G'), ('used', '2%')])]}
</code></pre>
</div>
<span class="comment-copy">Its working for me. My python version is 3.6.</span>
<span class="comment-copy">Just noting that 3.6 preserves insertion order as well, but is only noted to be an implementation detail, not a feature like in 3.7.</span>
<span class="comment-copy">Great. Just became a bit late ;)</span>
