<div class="post-text" itemprop="text">
<p>I'm trying to replicate Perl Fathom in Python. This step corrects the syllable count for some word combinations. Is =~ equivalent to re.match in Python? re.match only looks for the first instance. Thank you!  </p>
<pre><code> @SubSyl = (
           'cial',
           'tia',
           'cius',
           'cious',
           'giu',              
           'ion',
           'iou',
           'sia$',
           '.ely$',             
           '[^td]ed$',          
          );

 foreach (@SubSyl) {
          $syl-- if $word =~ /$_/;
        }
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>=~</code> is the binding operator. It can bind a match, substitution, or transliteration. I guess only the first one could be equivalent to matching in Python, but it seems you need <code>re.search</code> instead, as matching with <code>//</code> is not anchored at the beginning of the string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Certainly not <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match()</code></a>. It's a bit of a gotcha, but <code>re.match</code> matches pattern only starting at the beginning of the string.</p>
<blockquote>
<p>If zero or more characters at the beginning of string match the regular expression pattern, return a corresponding match object. Return None if the string does not match the pattern; note that this is different from a zero-length match.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><code>re.search()</code></a> is more likely what you are looking for (unless you regex patter happens to always match beginning of the string).</p>
</div>
