<div class="post-text" itemprop="text">
<p>I need to run a Custom Django Management Command (module named populate_db.py) included in a management/commands directory. It populates a database. </p>
<pre><code>restaurant/
    __init__.py
    models.py
    management/
        commands/
            _private.py
            populate_db.py
    tests.py
    views.py
    formDict.py
</code></pre>
<p>I want the command to take a mandatory argument as a dictionary. The mentioned dictionary can be obtained from the execution of another program named formDict.py </p>
<p>So I want a one-line command which will run formDict.py and consecutively take its result as an argument for my Custom Django Management Command <code>python manage.py populate_db</code>.</p>
<p>Is it possible to form such a command at all? If not, how to implement the idea alternatively?</p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>fromDict.py</code> prints to terminal (STDOUT), you can use a <a href="https://stackoverflow.com/questions/9834086/what-is-a-simple-explanation-for-how-pipes-work-in-bash">pipe</a> (<code>|</code>) to get the parameter from <a href="https://en.wikipedia.org/wiki/Standard_streams" rel="nofollow noreferrer">STDIN</a> in your management command, you can use <code>sys.stdin</code> for that. As you may want to execute the command by itself, it is a good idea to accept a string by parameter too.</p>
<p>Your management command would look line:</p>
<pre class="lang-py prettyprint-override"><code># populate_db.py
import argparse
import ast
import sys

from django.core.management.base import BaseCommand, CommandError


class Command(BaseCommand):
    help = 'Polulate the Database'

    def add_arguments(self, parser):
        parser.add_argument(
            'input_dict',
            nargs='?',
            type=str,
            default=None
        )

    def handle(self, *args, **options):
        if options['input_dict']:
            input_dict = options['input_dict']
        else:
            input_dict = sys.stdin.read()

        try:
            data = ast.literal_eval(input_dict)
        except SyntaxError:
            raise CommandError(f'Invalid dict input: {input_dict}')

        # populate the DB with data
</code></pre>
<p>You can execute that command with either:</p>
<p>Getting the dict from STDIN</p>
<pre class="lang-sh prettyprint-override"><code>python fromDict.py | python yourproject/manage.py populate_db
</code></pre>
<p>or</p>
<p>Passing the dict by parameter</p>
<pre class="lang-sh prettyprint-override"><code>python yourproject/manage.py populate_db '{'some': 'dict'}'
</code></pre>
<p>Note: Take care with <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer">literal_eval</a> if the dict comes from an untrusted source, as someone could exploit it (with very large values, for exemple) to break the python interpreter. </p>
</div>
<div class="post-text" itemprop="text">
<p>Wrap the logic of formDict in a function. Call it inside the handle function of populate_db.py to access the result returned from form_dict.</p>
<p>or </p>
<p>move formDict.py to management/commands/ and use call_command inside formDict to call populate_db.
<a href="https://docs.djangoproject.com/en/2.1/ref/django-admin/#running-management-commands-from-your-code" rel="nofollow noreferrer">https://docs.djangoproject.com/en/2.1/ref/django-admin/#running-management-commands-from-your-code</a>.</p>
</div>
<span class="comment-copy">You can run django background tasks take a look at my answer here: <a href="https://stackoverflow.com/questions/54225303/signal-django-to-run-a-task/54225921#54225921" title="signal django to run a task">stackoverflow.com/questions/54225303/â€¦</a> and if you find it useful then don't forget to upvote it so that the community can take advantage of it. :)</span>
<span class="comment-copy">I've done the code with python 3.7. If you are using python &lt; 3.6, you need to replace the <a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer">f-string</a> with <code>.format</code>.</span>
<span class="comment-copy">@aspiring The error you posted suggests your attribute is required. Did you added <code>nargs='?',</code> to <code>parser.add_argument</code> as the code in my answer does? Are you handling the absence of the parameter and getting it from stdin? If you can post the current code of <code>populate_db.py</code>, it might help.</span>
