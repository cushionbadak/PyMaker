<div class="post-text" itemprop="text">
<p>I have a list with this shape:</p>
<pre><code>temp5=[]
for i in range(0,len(df)):
   temp5.append(df['text'][i].split())
df['each']=temp5
df['each']
</code></pre>
<p>and the result is like this:</p>
<p><a href="https://i.stack.imgur.com/GPAKr.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/GPAKr.png"/></a></p>
<p>now I want to remove some elements of the previous list. I want to check if each word of the previous list is similar to the following list, remove it from it. the second list is like this:</p>
<pre><code>stopwords = open('stop_words.txt','r').read().split('\n')
print(stopwords)
</code></pre>
<p><a href="https://i.stack.imgur.com/1XTbp.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/1XTbp.png"/></a></p>
<p>now I wrote this code to delete the same words of each list from the first one. but all I receive is NONE.
Could you please help me with it?</p>
<pre><code>for k in range(0,len(df)):
    for j in df['each'][k][:]:
        for f in stopwords:
            if f==j:
                temp6.append(df['each'][k][:].remove(f))
                print(temp6)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned in the comments, <code>remove</code> method removes inplace, but if you want something more 'pythonic', the working code would be </p>
<pre><code>temp5=[]
for i in range(0,len(df)):
    temp5.append([x for x in df['text'][i].split() if x not in stopwords])
</code></pre>
<p>using the <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> as mentioned e.g. <a href="https://stackoverflow.com/questions/4211209/remove-all-the-elements-that-occur-in-one-list-from-another">in this question</a>, which creates the filtered list. Or, if you insist on using the original dataframe as input, it would be something like </p>
<pre><code>temp5=[]
for i in range(0,len(df)):
    temp5.append([x for x in df['each'][i] if x not in stopwords])
</code></pre>
</div>
<span class="comment-copy">Just <code>my_list.remove(x)</code>. This works in-place i.e. it modifies the list it is called on</span>
