<div class="post-text" itemprop="text">
<p>I don't understand why the first one is true, does it short circuit when it sees True or?</p>
<pre><code>&gt;&gt;&gt; True or False and False
True
&gt;&gt;&gt; True or False and True
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python, <code>and</code> has a higher precedence than <code>or</code>, meaning that <code>and</code> will bind first (search for <code>Operator precedence</code> in <a href="https://docs.python.org/3/reference/expressions.html" rel="nofollow noreferrer">the following section of the Python documentation</a>, for example<sup>(1)</sup>).</p>
<p>Hence your two statements are equivalent to (despite your incorrect assertion that Python reads left to right):</p>
<pre><code>True or (False and False)
True or (False and True)
</code></pre>
<p>And, regardless of what the result of the parenthesised sub-expression in those two expressions above, <code>or</code>ing that with <code>True</code> will give <code>True</code>.</p>
<hr/>
<p><sup>(1)</sup> The relevant parts of that link (the explanatory text and the initial part of the table) are included below for completeness, with my emphasis:</p>
<blockquote>
<p>The following table summarizes the operator precedence in Python, <strong><em>from lowest precedence (least binding) to highest precedence (most binding).</em></strong> Operators in the same box have the same precedence. Unless the syntax is explicitly given, operators are binary. Operators in the same box group left to right (except for exponentiation, which groups from right to left).</p>
<p><code>Operator   Description</code><br/>
<code>--------   -----------</code><br/>
<code>lambda     Lambda expression</code><br/>
<code>if â€“ else  Conditional expression</code><br/>
<code>or         Boolean OR</code><br/>
<code>and        Boolean AND</code><br/>
<code>not x      Boolean NOT</code></p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Thanks to <a href="https://stackoverflow.com/users/4014959">PM 2Ring</a>'s <a href="https://stackoverflow.com/questions/54500896/why-does-the-first-one-return-true-doesnt-python-read-from-left-to-right-if-s/54500916#comment95806283_54500916">comment</a>: <code>and</code> has higher precedence than <code>or</code>. So Python will execute <code>and</code> first, so
The first one is like this:</p>
<pre><code>True or (False and False) 
=&gt; True or False 
=&gt; True
</code></pre>
<p>result of <code>(False and False)</code> is <code>False</code> and <code>True or False</code> is <code>True</code>.</p>
<p>The second one is like this:</p>
<pre><code>True or (False and True) 
=&gt; True or False 
=&gt; True
</code></pre>
<p>result of <code>(False and True)</code> is again <code>False</code> and <code>True or False</code> is <code>True</code>.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/35439251/python-logical-operator-precedence">Python logical operator precedence</a></span>
<span class="comment-copy">Also <a href="https://stackoverflow.com/questions/51784005/python-or-and-operator-precedence-example">this</a> and <a href="https://stackoverflow.com/questions/16679272/priority-of-the-logical-statements-not-and-or-in-python">this</a> and many more.</span>
<span class="comment-copy">You should mention that <code>and</code> has higher precedence than <code>or</code>, similar to <code>*</code> having higher precedence than <code>+</code>.</span>
