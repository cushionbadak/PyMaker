<div class="post-text" itemprop="text">
<p>I would like to create methods or tasks to Add/Update/Delete operations for text file.</p>
<p>Here are the operations that I want to make for textfile operations</p>
<pre><code>add(KEY,VALUE,COMMENT)
update(KEY,VALUE)
delete("KEY")
</code></pre>
<p><strong><em>Case 1:  Adding new Key</em></strong></p>
<pre><code>add("PRODUCT_NAME","Sigma","title for product name")
</code></pre>
<p>I would like to run a command like above to add a new entry to the TextFile.text</p>
<p>//add an entry like below </p>
<pre><code>PRODUCT_NAME|Sigma|title for product name  
</code></pre>
<p><strong>Case 2:  Update existing Key</strong></p>
<pre><code>update("PRODUCT_NAME","Sigma Rox")
</code></pre>
<p>I would like to run a command like above to update value to the key in TextFile.text</p>
<p>// update value for key</p>
<pre><code>PRODUCT_NAME|Singma Rox|title for the product name  
</code></pre>
<p><strong>Case 3:  Delete the entry for Key</strong></p>
<pre><code>delete("PRODUCT_NAME")
</code></pre>
<p>I would like to run a command like above to delete entire entry/value from the TextFile.text</p>
<p>// delete entry for key PRODUCT_NAME </p>
</div>
<div class="post-text" itemprop="text">
<p>You need to define <code>add</code>, <code>update</code> and <code>delete</code> methods:</p>
<pre><code>FILE = 'text.txt'

def add(key, value, comment):
    with open(FILE, 'a') as f:
        f.write('{}|{}|{}\n'.format(key, value, comment))

def update(key, value):
    with open(FILE, 'r+') as f:
        data = ''
        for line in f:
            if line.startswith('{}|'.format(key)):
                comment = line.split('|')[2].rstrip()
                line = '{}|{}|{}\n'.format(key, value, comment)
                data += line
            else:
                data += line
        f.seek(0)
        f.write(data.rstrip())

def delete(key):
    with open(FILE, 'r+') as f:
        data = ''
        for line in f:
            if not line.startswith('{}|'.format(key)):
                data += line
    with open(FILE, 'w') as f:
        f.write(data.rstrip())
</code></pre>
<p>So how it works:</p>
<pre><code>&gt;&gt;&gt; add('Key1', 'Value1', 'Comment1')
Key1|Value1|Comment1
&gt;&gt;&gt; add('Key2', 'Value2', 'Comment2')
Key1|Value1|Comment1
Key2|Value2|Comment2
&gt;&gt;&gt; update('Key2', 'Value3')
Key1|Value1|Comment1
Key2|Value3|Comment2
&gt;&gt;&gt; delete('Key2')
Key1|Value1|Comment1
</code></pre>
</div>
<span class="comment-copy">Use argParse and file operations. Maybe on delete function you need read whole file line by line and if line contains product that you want delete, do not write that file, but write all the other lines to file, not the best way? <a href="https://www.pythonforbeginners.com/cheatsheet/python-file-handling" rel="nofollow noreferrer">pythonforbeginners.com/cheatsheet/python-file-handling</a> <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html</a></span>
<span class="comment-copy">In my comment above is two link, but I don't know why it looks like that.</span>
<span class="comment-copy">is there any way like ruby tasks?</span>
<span class="comment-copy">Thanks @Alderven</span>
