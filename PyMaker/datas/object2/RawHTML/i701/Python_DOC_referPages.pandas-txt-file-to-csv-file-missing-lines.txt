<div class="post-text" itemprop="text">
<p>I want to convert a .txt file into a .csv file. The .txt file consists of a list of words along with their POS tags in the form of:
Sophie_NNP listens_VBZ to_TO her_PRP$ classmates_NNS as_IN they_PRP tell_VBP her_PRP (and so on).</p>
<p>Using this code, I converted it into a csv file so that each word and its tag are on their own line:</p>
<pre><code>import re
import pandas as pd

infile = 'POS_Test.txt'
Text_File = open(infile, 'r')

Table = 'POS_Text.csv'
output_file = open(Table, 'w')

for line in Text_File.readlines():
    text_list = re.split('[ ]', line)

sentences = pd.DataFrame(text_list)
print(sentences, file=output_file)

output_file.close()
</code></pre>
<p>This works fine, only the problem is that when I open the .csv file in Notepad++ or Excel, it seems to skip out lines 30 through to 540 (there are 571 in total) and replaces them with dots in one line.</p>
<p><a href="https://i.stack.imgur.com/vz4nn.png" rel="nofollow noreferrer">Screenshot of the area where the lines are missing</a></p>
<p>Is there something I can add to my code that will prevent this from happening so that I can see every single line? Ideally in Excel as this is where the work will be continued.</p>
<p>As requested by Jan:
Here is the full .txt file:</p>
<p>B_IN The_DT dare_NN Sophie_NNP listens_VBZ to_TO her_PRP$ classmates_NNS as_IN they_PRP tell_VBP her_PRP about_IN the_DT dare_NN ._. She_PRP is_VBZ nervous_JJ ._. She_PRP does_VBZ not_RB want_VB to_TO do_VB the_DT dare_NN ._. But_CC every_DT new_JJ pupil_NN has_VBZ to_TO do_VB it_PRP ._. Every_DT day_NN on_IN her_PRP$ way_NN to_TO school_NN ,_, Sophie_NNP passes_VBZ the_DT old_JJ house_NN ._. It_PRP looks_VBZ terrifying_VBG and_CC everyone_NN says_VBZ it_PRP is_VBZ haunted_VBN ._. No_DT one_NN is_VBZ sure_JJ if_IN people_NNS live_VBP there_RB or_CC not_RB ._. People_NNS are_VBP too_RB scared_JJ to_TO find_VB out_RP ._. Most_JJS pupils_JJ never_RB knock_VBP on_IN the_DT door_NN ._. Only_RB brave_JJ children_NNS finish_VBP the_DT dare_NN and_CC knock_NN ._. again_RB :_: One_CD afternoon_NN a_DT young_JJ boy_NN is_VBZ bored_VBN ._. He_PRP wants_VBZ to_TO go_VB to_TO the_DT old_JJ house_NN ._. His_PRP$ parents_NNS tell_VBP him_PRP not_RB to_TO go_VB ._. They_PRP tell_VBP him_PRP it_PRP 's_VBZ dangerous_JJ ._. But_CC the_DT young_JJ boy_NN does_VBZ n't_RB listen_VB ._. When_WRB he_PRP gets_VBZ to_TO the_DT house_NN he_PRP knocks_VBZ on_IN the_DT door_NN and_CC waits_NNS ._. Nothing_NN ._. He_PRP knocks_VBZ again_RB ._. Finally_RB ,_, the_DT door_NN opens_VBZ ._. But_CC there_EX is_VBZ nobody_NN there_RB ._. The_DT boy_NN walks_NNS inside_IN ._. The_DT door_NN shuts_VBZ quickly_RB behind_IN him_PRP ._. The_DT house_NN is_VBZ dark_JJ and_CC it_PRP smells_VBZ disgusting_VBG ._. The_DT boy_NN hears_VBZ a_DT noise_NN ._. A_DT scratch_NN ._. He_PRP walks_VBZ along_IN the_DT hallway_NN ._. The_DT noise_NN gets_VBZ louder_JJR ._. Where_WRB is_VBZ it_PRP coming_VBG from_IN ?_. Suddenly_RB ,_, he_PRP trips_VBZ ._. His_PRP$ head_NN hits_VBZ the_DT wooden_JJ floor_NN with_IN a_DT B_NNP A_NNP N_NNP G_NNP !_. The_DT boy_NN lies_VBZ on_IN the_DT floor_NN ,_, shocked_VBD ._. He_PRP hears_VBZ the_DT noise_NN again_RB ._. Scratch_NNP ,_, scratch_NN ,_, S_NNP C_NNP R_NNP A_NNP T_NNP C_NNP H_NNP ,_, S_NNP C_NNP R_NNP A_NNP T_NNP C_NNP H._NNP It_PRP is_VBZ coming_VBG from_IN under_IN the_DT floor_NN ._. The_DT boy_NN is_VBZ too_RB scared_VBN to_TO move_VB ._. He_PRP wants_VBZ the_DT scratching_NN to_TO stop_VB ._. Finally_RB ,_, it_PRP does_VBZ ._. The_DT boy_NN slowly_RB stands_VBZ up_RP and_CC looks_VBZ around_RB ._. And_CC there_RB ,_, in_IN front_NN of_IN him_PRP ,_, is_VBZ a_DT dark_JJ figure_NN in_IN a_DT hood_NN ._. The_DT figure_NN stares_VBZ at_IN him_PRP ._. It_PRP says_VBZ nothing_NN ._. Terrified_NNP ,_, the_DT boy_NN runs_VBZ to_TO the_DT door_NN ._. It_PRP 's_VBZ locked_VBN ._. He_PRP is_VBZ trapped_VBN ._. A_DT cold_JJ ,_, white_JJ hand_NN grabs_VBD him_PRP ._. The_DT boy_JJ screams_NN ._. Nobody_NN ever_RB sees_VBZ the_DT boy_NN again_RB ._. People_NNS say_VBP that_IN sometimes_RB you_PRP can_MD still_RB hear_VB his_PRP$ screams_NN ._. Some_DT people_NNS say_VBP he_PRP is_VBZ dead_JJ ._. Others_NNS are_VBP not_RB so_RB sure_JJ ._. Sophie_NNP thinks_VBZ about_IN the_DT story_NN as_IN she_PRP walks_VBZ slowly_RB along_IN the_DT icy_NN path_NN ._. She_PRP reaches_VBZ the_DT garden_NN wall_NN ._. T_NNP H_NNP U_NNP M_NNP P_NNP ,_, T_NNP H_NNP U_NNP M_NNP P._NNP T_NNP H_NNP U_NNP M_NNP P_NNP ,_, T_NNP H_NNP U_NNP M_NNP P._NNP Her_NNP heart_NN beats_VBZ quickly_RB ._. She_PRP walks_VBD into_IN the_DT garden_NN ._. She_PRP shivers_VBD when_WRB she_PRP sees_VBZ graves_NNS by_IN the_DT path_NN ._. She_PRP tries_VBZ not_RB to_TO look_VB at_IN them_PRP as_IN she_PRP walks_VBZ up_IN to_TO the_DT house_NN ._. For_IN a_DT second_JJ Sophie_NNP thinks_VBZ she_PRP sees_VBZ a_DT dark_JJ figure_NN at_IN the_DT window_NN ._. She_PRP walks_VBZ slowly_RB to_TO the_DT door_NN ._. She_PRP knocks_VBZ and_CC waits_NNS ._. But_CC Sophie_NNP wants_VBZ to_TO be_VB really_RB brave_JJ ,_, so_IN she_PRP knocks_VBZ again_RB ._. She_PRP waits_VBZ ._. After_IN a_DT while_NN ,_, the_DT door_NN opens_VBZ ._. A_DT little_JJ old_JJ lady_NN looks_VBZ at_IN her_PRP ._. away_RB ._. I_PRP wonder_VBP why_WRB ._. anyway_RB ._. you_PRP are_VBP the_DT Then_RB she_PRP asks_VBZ Sophie_NNP to_TO come_VB in_IN ._. T_NNP H_NNP U_NNP M_NNP P_NNP ,_, beats_VBZ faster_RBR ._. She_PRP looks_VBZ behind_IN her_PRP ,_, then_RB walks_VBZ inside_RB ._. ("'", "''")</p>
<p>And the intended solution would be simply what is in the above screenshot, but instead of the ellipsis, you should actually see every single word with the POS tag - all 571 lines. This is the full Excel table I get at the moment:
<a href="https://i.stack.imgur.com/njfet.png" rel="nofollow noreferrer">Excel result with ellipsis (Would like for the ... to be replaced through the actual words and POS tags)</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_csv.html" rel="nofollow noreferrer">df.to_csv</a></p>
<p>What you are seeing is the middle of the dataframe sentence as displayed on the screen. </p>
<pre><code>import pandas as pd
import re 

infile = 'POS_Test.txt'
Text_File = open(infile, 'r')

for line in Text_File.readlines():
    text_list = re.split('[ ]', line)

sentences = pd.DataFrame(text_list)
sentences.to_csv('POS_Text.csv')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Do you need to use Pandas for this? Seems like you can read the entire text file to a variable and split on the spaces.</p>
<pre><code>import csv

with open('POS_Test.txt', 'r') as Text_File:
    split_values = Text_File.read().split(" ")

with open('POS_Text.csv', 'w') as output_file:
    wr = csv.writer(output_file)
    wr.writerow(split_values)
</code></pre>
<p>Edit - some more details:</p>
<p>First you want to open the files with 'with'. This ensures the files are closed after you are done with them.</p>
<p>Next you have the file contents (presumably as text) and you can simply perform the .split(" ") method on the string which would split on the spaces and give you a list containing many strings.</p>
<p>Then we open the output csv file with 'with' again and use the csv module <a href="https://docs.python.org/3/library/csv.html#csv.csvwriter.writerows" rel="nofollow noreferrer">writerows</a> to write the file out. </p>
<blockquote>
<p>writerows:
  Write all elements in rows (an iterable of row objects as described
  above) to the writerâ€™s file object, formatted according to the current
  dialect.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can give list to pandas DataFrame</p>
<pre><code>with open('temp.txt') as f:
    list = f.read().split()
    df = pd.DataFrame(list)
    df.to_csv('temp.csv')
</code></pre>
<p>Hope this helps!</p>
</div>
<span class="comment-copy">Please post an actual line from the file, and the intended solution. Or a link to example files.</span>
<span class="comment-copy">Perfect! This works. Thank you!</span>
<span class="comment-copy">@skytt4 Most welcome!</span>
<span class="comment-copy">Later on I want to add columns with certain information. I have experience doing that with pandas which is why I chose it, but I can take a look at csv too, thanks! However, I get this error when I try your suggestion: AttributeError: '_io.TextIOWrapper' object has no attribute 'split'. Any ideas?</span>
<span class="comment-copy">While this code may answer the question, providing additional context regarding how and/or why it solves the problem would improve the answer's long-term value.<a href="https://stackoverflow.com/help/how-to-answer">Read this</a>.</span>
<span class="comment-copy">@skytt4 my bad, I missed the .read() on the file object to read it into a string. Give this a shot!</span>
