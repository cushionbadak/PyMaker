<div class="post-text" itemprop="text">
<p>I want to open an existing txt file and search for line of text appearing many times and in different places. Each time search found, insert 2 new rows below it with specified text.</p>
<p>I tried this code but got 'AttributeError' on 'Path.write' line ('str' object has no attribute 'write').   </p>
<pre><code>Path = '...\\Test.txt'
searchString = '* Start *'

with open(Path, 'r+') as f:
    content = f.readlines()

nextLine = False 

for line in content:
    if searchString in line:
        nextLine = not nextLine
else:
    if nextLine:
        Path.write('Name\nDirection')
        nextLine = not nextLine
    else:
        pass
</code></pre>
<p>I must also allocate to 'Direction' line a number, starting at 0 and increment by 15 until all file is read. So after first instance is found, two lines are inserted into existing txt file like this;</p>
<pre><code>...some text in the existing text file....
* Start *
Name
Direction 0
</code></pre>
<p>0 then changes to 15 on next instance (ie Direction 15), then 30 (ie Direction 30) etc until end of file.</p>
<p>EDITED CODE: Simplified coded. Anyone vote me up I'd appreciate</p>
<pre><code>Path = '...\\Test.txt'

direction_number = 0
#Open new file
Newfile = open(Path, 'w')

#read other file
with open(Path, 'r') as f:
    content = f.readlines()

#if find special text, write other lines to new file            
for line in content:
    Newfile.write(line)
    if searchString in line:
        Newfile.write('Name\nDirection %d' % direction_number)
        direction_number += 15

Newfile.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of trying to reopen and insert lines into the original file, you should just write a new file.  So for each line in the old file, write it to the new file, and write the two additional lines if it contains the text in question.</p>
<pre><code>direction_number = 0

with open("newfile.txt", 'w') as g:

    # Loop through every line of text we've already read from
    # the first file.
    for line in content:

        # Write the line to the new file
        g.write(line)

        # Also, check if the line contains the &lt;searchString&gt; string.
        # If it does, write the "Name" and "Direction [whatever]" line.
        if searchString in line:
            g.write('Name\nDirection %d\n' % direction_number)
            direction_number += 15
</code></pre>
<p><strong>EDIT:</strong>  To explain more about this second <code>with open</code> statement: Remember earlier that you used <code>with open(Path, 'r+') as f:</code> to READ your file. 
 The <code>Path</code> part is where the name of the file is stored, the <code>r+</code> part means that you're opening it for reading, and the "<code>f</code>" is just a variable that essentially says, "Anything we do on f, we do to the file".  Likewise, to start working with a new file, I wrote <code>with open("newfile.txt", 'w') as g:</code>.  The "<code>newfile.txt</code>" is the name of the file.  The "<code>w</code>" means you're opening up this file for writing to it instead of reading from it (if the file doesn't exist, it will create it; if it exists already, it will completely write over it).  Then the "<code>g</code>" is just a variable I picked to refer to this file.  So <code>g.write(line)</code> just writes the next line of text from the first file to the next line of text in the second file.  I suppose you could use "<code>f</code>" again here, since at this point you've already read all of the lines from the old file.  But using a different variable cuts down on any ambiguity of what file you're dealing with, especially if you ever wanted to change this so that you simultaneously have one file still open for reading as you have a second file open for writing.</p>
</div>
<span class="comment-copy">If you search on the phrase "Python file output", youâ€™ll find resources that can explain it much better than we can in an answer here.  You have the right ideas in your head, but you need to work through a tutorial to learn how to express that in Python.  <code>write</code> is a method of a <code>file</code> object, not of the file name (a string).  It's very similar to what you did with the input file.</span>
<span class="comment-copy">should it be <code>name\nDirection</code> or <code>Force\nDirection</code></span>
<span class="comment-copy">Do you expect <code>Path</code> to have an attribute <code>write</code>? Why?</span>
<span class="comment-copy">should be <code>f.write(...</code> since <code>f</code> is the object associated to the <code>Path</code> filename</span>
<span class="comment-copy">You cannot "insert" into a text file. Open a new file, read the other file, copy every line over into the new file, if you find your special line, write the two other lines into the new file -do until old file read completely. close both, delete old, rename new to old name. Done. Or: Use notepad++ search and replace. Doku: <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">reading and writing files</a></span>
<span class="comment-copy">thanks. I got a traceback with your code..."for line in content:NameError: name 'content' is not defined". I put back the line content = g.readlines(). Now tracback is "content = g.readlines(), IOError: File not open for reading"</span>
<span class="comment-copy">Bill could you please add some explanation annotation to the line 'g.write(line)'.</span>
<span class="comment-copy">I've added some further explanation on the "with open" and "g.write(line)" commands.</span>
<span class="comment-copy">Thanks Bill. Very clear. I'm having problems now though trying to include a second If condition into the 'for' loop. Was trying the .seek(0) method. No luck. Any feedback appreciated</span>
<span class="comment-copy">If you're jumping to a part of the newly opened document, I don't see why g.seek(0) wouldn't work.  Then again, I'm not sure why you need .seek in the first place.</span>
