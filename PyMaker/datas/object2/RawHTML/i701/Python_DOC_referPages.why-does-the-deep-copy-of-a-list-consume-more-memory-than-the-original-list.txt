<div class="post-text" itemprop="text">
<pre><code>import sys, copy

x = [None]
y = x
c = copy.copy(x)
dc = copy.deepcopy(x)

print(x, y, c, dc)          # [None] [None] [None] [None]
print(sys.getsizeof([0]))   # 72
print(sys.getsizeof(["0"])) # 72
print(sys.getsizeof(x))     # 72
print(sys.getsizeof(y))     # 72
print(sys.getsizeof(c))     # 96
print(sys.getsizeof(dc))    # 96
</code></pre>
<p>I understand that <code>sys.getsizeof</code> (<a href="https://docs.python.org/3/library/sys.html#sys.getsizeof" rel="nofollow noreferrer">docs</a>) returns the size of the container (list) itself, not considering the content, so I get that it returns the same size (<strong>72</strong>) for <code>[0], [None] and ["0"]</code>.</p>
<p>However, why would a copy or a deep copy require more memory for holding the same data (<strong>96</strong> instead of <strong>72</strong>)?</p>
<p>The <a href="https://docs.python.org/3/library/sys.html#sys.getsizeof" rel="nofollow noreferrer">docs</a> state:</p>
<blockquote>
<p>getsizeof() calls the objectâ€™s __sizeof__ method and adds an additional garbage collector overhead if the object is managed by the garbage collector.</p>
</blockquote>
<p>So the only plausible reason for the difference is that a copy is handled differently by the garbage collector, right? But why would it?</p>
<p>My environment: Win 10, Python 3.4.3 64 bit</p>
</div>
<div class="post-text" itemprop="text">
<p>Lists use a resize policy that involves sometimes keeping spare space on the end to accommodate more elements, to guarantee amortized constant time appends. Some of your lists have more spare space on the end than others. Python doesn't promise how much spare space any list will have.</p>
</div>
<span class="comment-copy">I am getting sizeof(c) 72 in 3.6.6 version</span>
<span class="comment-copy">So it's kind of an implementation detail, right? I know that asking for off-site resources is off-topic, but can you link any sources where this is mentioned?</span>
<span class="comment-copy">@MikeScotty: It's briefly mentioned in the <a href="https://docs.python.org/3/faq/design.html#how-are-lists-implemented-in-cpython" rel="nofollow noreferrer">design faq</a>. I'm not aware of any other official documentation of the resize policy.</span>
