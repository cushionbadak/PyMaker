<div class="post-text" itemprop="text">
<p>I am writing a Python program to measure the time complexity of insertion sort. However, I got the above mentioned error on line number 6. This error also occurs during other{  int(inputs)  }. Any help would be great,thanks. My code is:</p>
<pre><code>import random, matplotlib.pyplot as plt

def input():
    arr=[]
    ret_size=[]
    ret_count=[]
    n=int(input('enter the number of trials'))
    for i in range(n):
        x=int(input('size of array:'))
        for z in range(x):
            r=random.randint(1,2000)
            arr.append(r)
        count=0
        for ind in range(1,len(arr)):
            count+=1
            cur=arr[ind]
            count+=1
            pos=ind
            while pos&gt;0 and arr[pos-1]&gt;cur:
                count+=1
                pos=pos-1
                count+=1
            arr[pos]=cur
        count+=1
        print('sorted listL')
        print(arr)
        print('number of hops:')
        print(count)
        ret_size.append(x)
        ret_count.append(count)
    plt.plot(ret_size,ret_count)
    plt.xlabel('size of input')
    plt.ylabel('number of hops')
    plt.title('insertion sort')
    plt.show()

input()
</code></pre>
<p></p>
</div>
<div class="post-text" itemprop="text">
<p>Note these 2 lines of your code:</p>
<pre><code>def input():
</code></pre>
<p>and</p>
<pre><code>    n=int(input('enter the number of trials'))
</code></pre>
<p>In the first of them you <em>redefined</em> the built-in function <code>input()</code> (which accepts <code>0</code> or <code>1</code> parameter) with your own with the <strong>same name</strong> (which accepts <strong>only <code>0</code> parameters, i. e. none).</strong></p>
<p>So in the second of them you called <em>NOT</em> the built-in function <code>input()</code> - as you wanted - but <strong>your own one</strong>, and as you callded it with <code>1</code> parameter (<code>'enter the number of trials'</code>), you got a relevant error.</p>
<p>Choose an <em>other name</em> for defining <em>your</em> <code>input()</code> function - and then use that name for calling it, too.</p>
</div>
<span class="comment-copy"><code>input</code> is a built-in function. Its a very bad idea to use that as a name for your own function. What is <code>n=int(input('enter the number of trials'))</code> going to resolve to when you've called you own function <code>input</code>? Rename your function and it will fix this issue.</span>
<span class="comment-copy">You defined your own <code>input()</code> function. You can't now use the built-in <code>input()</code> function, not without some additional work. Easier to just rename your own function.</span>
<span class="comment-copy">oh ! thank you , did not notice that.</span>
<span class="comment-copy">wait, how do you use the builtin after shadowing it? @MartijnPieters i..uh...asking for a friend.</span>
<span class="comment-copy">@ParitoshSingh: 3 options: create an alias up front (<code>builtin_input = input</code> before binding to <code>input</code>), by <a href="https://docs.python.org/3/library/builtins.html" rel="nofollow noreferrer">importing the <code>builtins</code> module</a> (<code>import builtins</code>, ..., <code>builtins.input()</code>), or by deleting the global that shadows the built-in (<code>del input</code>, not an option here).</span>
