<div class="post-text" itemprop="text">
<p>I would like to connect with several address using asyncio library, like 
'127.0.0.1:8000/hello'</p>
<p>But where can I put '/hello' part ? and how can I call this part? (endpoint? static url? )</p>
<pre><code>asyncio.open_connection('127.0.0.1', 8000)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>But where can I put <code>/hello</code> part ?</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/asyncio-stream.html#asyncio.open_connection" rel="nofollow noreferrer"><code>asyncio.open_connection</code></a> opens a raw TCP connection to the given remote endpoint. The address of the form <code>127.0.0.1:8000/hello</code> strongly indicates an HTTP connection. HTTP is a protocol built on top of TCP, where you connect to the given host and port (<code>127.0.0.1</code> and port 8000 in your case) using TCP and send a <em>request</em> in a specified format, and to which the server answers with a <em>response</em>.</p>
<p>HTTP communication is a complex topic and is not something you want to implement from scratch. Fortunately there are mature asyncio-aware libraries that handle it for you, such as <a href="https://github.com/aio-libs/aiohttp" rel="nofollow noreferrer">aiohttp</a>. Using that library connecting to a server might look like this:</p>
<pre><code>import aiohttp, asyncio

async def connect_to(url, session):
    async with session.get(url) as response:
        return await response.data()

async def main():
    async with aiohttp.ClientSession() as session:
        data = connect_to('http:/127.0.0.1:8000/hello')
        # do something with data, or connect to other urls

asyncio.run(main())
</code></pre>
<blockquote>
<p>and how can I call this part? (endpoint? static url? )</p>
</blockquote>
<p>That part is typically called the <em>path</em> of the URL, see e.g. section 3.3 of <a href="https://www.ietf.org/rfc/rfc3986.txt" rel="nofollow noreferrer">the RFC</a> for more details.</p>
</div>
