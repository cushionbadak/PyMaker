<div class="post-text" itemprop="text">
<p>Flask + Sqlalchemy + WTForms</p>
<p>Code was working perfectly before, now with zero change I am receiving an error saying:</p>
<p>job = {"name": form.command.data.filename[:-3],
AttributeError: 'unicode' object has no attribute 'filename'</p>
<p>Which of course is very confusing as it has been working perfectly and very much had the attribute filename until this morning. </p>
<p>Below i've attached the form code and relevant view creation code, some info redacted for security. </p>
<p>Form Code:</p>
<pre><code>class DkronJobForm(FlaskForm):

command = FileField("Python File", validators=[DataRequired()])
schedule = StringField('Schedule', validators=[DataRequired()]) 
timezone = QuerySelectField(query_factory=lambda: Timezone.query.all(), get_label="name", default=lambda: Timezone.query.filter(Timezone.timezoneid == '418').one_or_none())
owner = StringField('Owner/Job Creator', validators=[DataRequired()])
owner_email = StringField("Owner's Email", validators=[Email()])
executor = StringField("Executor: (default=shell)", default="shell", validators=[DataRequired()])

#advanced options
exec_shell= BooleanField('Executor config: Shell (default = true)', default=True)
disable = BooleanField('Disable Job', default=False)
tags = StringField('Tags: Target nodes tags of this job', default=None)
retries = IntegerField('# of job retries if failed', default=0)
</code></pre>
<p>View creation code:</p>
<pre><code>@admin.route('/dkron', methods=['GET','POST'])
def dkron_job():

global to_upload

check_BI_permission()

dkron = Dkron.query.all()
form=DkronJobForm()
null = None

if form.validate_on_submit():

    # save current and change to new working directory
    os.chdir("&lt;path removed&gt;")


    #creating json file from WTForm
    job = {"name": form.command.data.filename[:-3],
           "timezone": form.timezone.data.name,
           "shell": True, 
           "schedule": form.schedule.data,
           "environment_variables": null,
           "command":"",
           "owner": form.owner.data,
           "owner_email": form.owner_email.data,
           "disabled": form.disable.data,
           "tags": tags,
           "retries": form.retries.data,
           "dependent_jobs": null,
           "last_success":"0001-01-01T00:00:00Z",
           "last_error":"0001-01-01T00:00:00Z",
           "success_count":0,
           "error_count":0,
           "parent_job": "",
           "processors": null,
           "concurrency": "allow",
           "executor": form.executor.data,
           "executor_config": {"command": "&lt;info removed&gt;}}

    with open(form.command.data.filename[:-3] + '.json', 'w') as outfile:
        json.dump(job, outfile, ensure_ascii=False)

    # saving python script to correct location
    form.command.data.save('&lt;path removed&gt;'+form.command.data.filename)

    # uploading job to Dkron
    to_upload = form.command.data.filename[:-3] + '.json'

    cc="allow"


    new_job = Dkron(name=form.command.data.filename[:-3], 
                        timezone = form.timezone.data.name, 
                        schedule = form.schedule.data,
                        owner = form.owner.data,
                        owner_email = form.owner_email.data,
                        disabled = form.disable.data,
                        tags = form.tags.data,
                        retries = form.retries.data,
                        concurrency = cc,
                        executor = form.executor.data,
                        exec_command = form.command.data,
                        exec_shell = form.exec_shell.data)

    os.chdir("&lt;path removed&gt;")

    with open(form.command.data.filename[:-3]+".sh", "a+") as bash_file:
        bash_file.write("&lt;code removed&gt;+form.command.data.filename)

    os.chdir("&lt;path removed&gt;")

    try:    
        os.system("python JOBPOST_dkron.py "+ form.command.data.filename[:-3]+".json")
        db.session.merge(new_job)
        db.session.commit()
        return redirect(url_for('admin.dkron_job'))
    except:
        flash('Sorry an error occurred while attempting to commit the job.')
        return redirect(url_for('admin.dkron_job'))

return render_template('admin/dkron.html',form=form, dkron=dkron,
                       title='Dkron')
</code></pre>
<p>From personal research I see there was a solution some time ago that required form = Form(request.form) to become form = Form(), however as you can see that is not the issue here.</p>
<p>I am quite confused and any help would be greatly appreciated! Thanks so much in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd advise you to take a look at <a href="https://wtforms.readthedocs.io/en/stable/fields.html#wtforms.fields.FileField" rel="nofollow noreferrer">Filefield documentation</a> or even source code to see that in Filefield there would be no <code>filename</code> attribute, but actual sent file name would be in <code>field.data</code>, so <code>form.command.data</code> in your case.</p>
<p>P.S. Also, removing last 3 symbols is a bad way to get rid of file extension, use <a href="https://docs.python.org/3/library/os.path.html#os.path.splitext" rel="nofollow noreferrer">stdlib os.path.splitext</a> instead.</p>
</div>
<span class="comment-copy">Thank you! That was the problem and also thanks for the documentation links. splitext was exactly what i needed.</span>
