<div class="post-text" itemprop="text">
<p>Can I find the index of the changed value by comparing two arrays? </p>
<p>For exaple;</p>
<pre><code>array1 = [1, 2 ,3]
array2 = [1, 2, 4]
</code></pre>
<p>I want to find the index of the changing value by comparing these two arrays. For this example this should be <code>2</code>.</p>
<p>I am using numpy to compare two arrays. But I can't find the index of changed value(s).</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a non-numpy solution. You can use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> with <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a>:</p>
<pre><code>array1 = [1,2,3]
array2 = [1,2,4]

print([i for i, (x, y) in enumerate(zip(array1, array2)) if x != y])
# [2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you are using NumPy, you can compare using the <code>!=</code> operator and use <a href="https://docs.scipy.org/doc/numpy-1.15.0/reference/generated/numpy.flatnonzero.html" rel="nofollow noreferrer"><code>np.flatnonzero</code></a>:</p>
<pre><code>array1 = np.array([1,2,3])
array2 = np.array([1,2,4])

res = np.flatnonzero(array1 != array2)

print(res)
# array([2], dtype=int64)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use numpy's <code>where</code> function to do this</p>
<pre><code>array3 = np.where((array1-array2) != 0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To find index of n changing elements between two lists we can use</p>
<pre><code>c = set(a) - set(b)
[a.index(i) for i in c]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>list(set(a1)-set(a2))</code> gives the list of all the elements which are not present in the set <code>a2</code></p>
<pre><code>a1 = [1,2,3]
a2 = [1,2,4]
arr=list(set(a1)-set(a2)) #arr=[3]
print(a1.index(arr[0]))   #2
</code></pre>
</div>
<span class="comment-copy">I used this one and it's worked. Thanks!!</span>
<span class="comment-copy">This doesn't work. It can find the wrong index if the same element can occur twice. It also doesn't work if the lists have the same element in different positions. Even when it works, this is very inefficient. It requires a loop (the <code>index</code> call) per mismatching element.</span>
