<div class="post-text" itemprop="text">
<p>I have a parent folder (<code>PF</code>) with child folders (<code>CF1</code>, <code>CF2</code>, <code>CF3</code>...) and files both in the parent folder (<code>PFf1.csv</code>, <code>PFf2.csv</code>,...) and children folders (<code>CF1f1.csv</code>, <code>CF1f2.csv</code>, <code>CF2f1.csv</code>, <code>CF2f2.csv</code>,...)</p>
<p>I want to find only the files in the children folders (<code>CF1f1.csv</code>, <code>CF1f2.csv</code>, <code>CF2f1.csv</code>, <code>CF2f2.csv</code>,...) and ignore the files in the parent folder.</p>
<p>All the examples I have seen in stackoverflow and the internet are of the form:</p>
<pre><code>for folder, subfolders, files in os.walk(rootDir):
   for f in files:
      print(f)
</code></pre>
<p>which finds the files in the parent folder also.  I have tried a to modify this to: </p>
<ul>
<li><p>loop through the subfolders</p></li>
<li><p>on the walk, test when the new parent folder is in the original list of subfolders, then branch into an if statement</p></li>
</ul>
<p>but without success.  I feel this should be easy, but I am new to python and cannot figure it out.  Any help would be much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>your loop gives you the path to the current folder, you can check if it is different than the <code>rootDir</code> (provided <code>rootDir</code> is a full path ofcourse):</p>
<pre><code>for folder, subfolders, files in os.walk(rootDir):
    if folder != rootDir:
        for f in files:
            print(f)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Walk is too much if all you want is the files in the directories in a given directory. For that I would write:</p>
<pre><code>for name in os.listdir(base):
    if os.path.isdir(os.path.join(base, name)):
       for file in os.listdir(os.path.join(base, name)):
           if os.path.isfile(os.path.join(base, name, file)):
               print(os.path.join(base, name, file))
</code></pre>
<p>Sure, there is some redundant <code>os.path.join</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can first get all of the sub directories in the root directory using <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer"><code>os.listdir</code></a> and putting a check with <a href="https://docs.python.org/3/library/os.path.html#os.path.isdir" rel="nofollow noreferrer"><code>os.path.isdir</code></a>:</p>
<pre><code>&gt;&gt;&gt; from os import listdir
&gt;&gt;&gt; from os.path import isfile, isdir, join

&gt;&gt;&gt; root_dir = './PF'
&gt;&gt;&gt; sub_dirs = [join(root_dir, dir) for dir in listdir(root_dir) if isdir(join(root_dir, dir))]
&gt;&gt;&gt; sub_dirs
['./PF/CF2', './PF/CF1']
</code></pre>
<p>And then iterate over all the sub-directories again using <code>os.listdir</code> to get files in them. You can use <a href="https://docs.python.org/3/library/os.path.html#os.path.isfile" rel="nofollow noreferrer"><code>os.path.isfile</code></a> to check for only files:</p>
<pre><code>&gt;&gt;&gt; sub_dir_files = [f for subdir in sub_dirs for f in listdir(subdir) if isfile(join(subdir, f))]
&gt;&gt;&gt; sub_dir_files
['CF2f2.txt', 'CF2f1.txt', 'CF1f2.txt', 'CF1f1.txt']
</code></pre>
</div>
