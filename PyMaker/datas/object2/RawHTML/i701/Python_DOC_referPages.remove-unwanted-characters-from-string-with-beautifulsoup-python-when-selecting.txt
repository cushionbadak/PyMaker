<div class="post-text" itemprop="text">
<p>I am new to Python and still don't understand all of it and its functionality but I am getting close to what I am trying to achieve. </p>
<p>Essentially I have got the programme to scrape the data I want from the website but when it is printing selected words/items from the "specs" string it is also printing characters such as [ ] and '' from the string. </p>
<p>The example is that I am trying to just get the 'gearbox' type, 'fuel' type and 'mileage' from a list of li's which i have converted to a string with the plant to then select the specific item from that string. </p>
<p>What I am getting with the current programme is this:</p>
<p>['Manual']['Petrol']['86,863 miles']</p>
<p>What I would like to achieve is a printed result like this:</p>
<p>Manual, Petrol, 86,863 miles </p>
<p>Which when exported to separate columns in my .csv should show up in their correct columns under the appropriate headings. </p>
<p>I have tried .text to remove just the text but it shows up with the 'list' object has no attribute 'text' error. </p>
<pre class="lang-py prettyprint-override"><code>
import csv 

import requests
from bs4 import BeautifulSoup

outfile = open('pistonheads.csv','w', newline='')
writer = csv.writer(outfile)
writer.writerow(["Link", "Make", "Model", "Price", "Image Link", 
"Gearbox", "Fuel", "Mileage"])

url = 'https://www.pistonheads.com/classifieds?Category=used- cars&amp;Page=1&amp;ResultsPerPage=100'

get_url = requests.get(url)
get_text = get_url.text

soup = BeautifulSoup(get_text, 'html.parser')
car_link = soup.find_all('div', 'listing-headline', 'price')

for div in car_link:
    links = div.findAll('a')
    for a in links:
        link = ("https://www.pistonheads.com" + a['href'])
        make = (a['href'].split('/')[-4])
        model = (a['href'].split('/')[-3])
        price = a.find('span').text.rstrip()
        image_link = a.parent.parent.find('img')['src']
        image = ("https:") + image_link
        vehicle_details = a.parent.parent.find('ul', class_='specs')
        specs = list(vehicle_details.stripped_strings)
        gearbox = specs[3:]
        fuel = specs[1:2]
        mileage = specs[0:1]
        writer.writerow([link, make, model, price, image, gearbox, fuel, mileage])
        print(link, make, model, price, image, gearbox, fuel, mileage)

outfile.close()

</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Welcome to StackOverflow!</p>
<p>So there's a lot to improve from your script. You are getting there!</p>
<ul>
<li><code>specs = list(vehicle_details.stripped_strings)</code> is a generator  resolved into a list. Effectively, you get to access by index the things you want. For example, <code>mileage</code> can simply be <code>specs[0]</code>.</li>
<li>The issue that you get extra <code>[</code> and <code>]</code> is caused by your use of slicing <code>mileage = specs[0:1]</code>. From the documentation, <strong>indexing returns an item, slicing returns a new list</strong>. See <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">lists introduction</a>.</li>
<li><em>(Optional)</em> And finally, to get all those information in a single line, you can do multiple assignments from the specs list. See <a href="https://treyhunner.com/2018/03/tuple-unpacking-improves-python-code-readability/" rel="nofollow noreferrer">multiple assignments.</a></li>
</ul>
<pre class="lang-py prettyprint-override"><code>mileage, fuel, _, gearbox = specs
</code></pre>
<ul>
<li><strong>Bonus tip</strong> When in doubt, use <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer">pdb</a>.</li>
</ul>
<pre class="lang-py prettyprint-override"><code>mileage = specs[0]
import pdb; pdb.set_trace()  # temp set on one line so you can remove it easily after
# now you can interactively inspect your code
(Pdb) specs
</code></pre>
<p>Good luck! And enjoy Python!</p>
</div>
<div class="post-text" itemprop="text">
<p>if you want to get the string from the list maybe you can do this</p>
<pre><code>gearbox = specs[3:][0] if specs[3:] else '-'
fuel = specs[1:2][0]  if specs[1:2] else '-'
mileage = specs[0:1][0]  if specs[0:1] else '-' 
</code></pre>
<p>but this way or aldnav answer will give false result even throw an error</p>
<blockquote>
<p>ValueError: not enough values to unpack</p>
</blockquote>
<p>Usually I will extract parent container first, not select the child (<code>a</code>) then go to the parent.</p>
<pre><code># helper to get dynamic specs element
def getSpec(element, selector):
    spec = element.select_one(selector)
    return spec.nextSibling.string.strip() if spec else '-'

soup = BeautifulSoup(get_text, 'html.parser')
results = soup.find_all('div', class_="result-contain")

for car in results:
    a = car.find('a')
    if not a:
        continue
    link = ("https://www.pistonheads.com" + a['href'])
    make = (a['href'].split('/')[-4])
    model = (a['href'].split('/')[-3])
    price = a.find('span').text.rstrip()
    image_link = car.find('img')['src']
    image = ("https:") + image_link

    if not car.find('ul', class_='specs'):
        gearbox = fuel = mileage = '-'
    else:
        gearbox = getSpec(car, '.location-pin-4')
        fuel = getSpec(car, '.gas-1')
        mileage = getSpec(car, '.gauge-1')
    print(gearbox, fuel, mileage)
    writer.writerow([link, make, model, price, image, gearbox, fuel, mileage])
    #print(link, make, model, price, image, gearbox, fuel, mileage)

outfile.close()
</code></pre>
</div>
<span class="comment-copy">the specs turned to be a list object as you operated, then you used slice of the list specs, obviously the result still being list..</span>
<span class="comment-copy">Thanks @cieunteung that actually worked great! I just used the (if specs[3:] else '-') version and it worked perfectly. So thanks! The only problem I am having is with my 'price' line where it is printing all prices with a strange character (¬) before every price output. I.e. this is what it prints ¬£18,995. Any idea how I could remove this character before every price output?</span>
<span class="comment-copy">I cannot see that char in my environment, you can replace it or write the file in <code>utf-8</code> format or use <code>.strip()</code> not <code>.rstrip()</code> for price</span>
<span class="comment-copy">It is weird I can see that it looks fine in sublime text but when I write it to .csv it shows up with that character.</span>
<span class="comment-copy">also I am now looking to get the program to parse through multiple pages of the same url, i.e. page 2, page 3 etc might you be able to help me with this? This is the link parameter: "<a href="https://www.pistonheads.com/classifieds?Category=used-cars&amp;Page=" rel="nofollow noreferrer">pistonheads.com/classifieds?Category=used-cars&amp;Page=</a>"</span>
<span class="comment-copy">have you try to write the csv in utf-8? and for another question please create another post.</span>
