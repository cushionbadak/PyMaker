<div class="post-text" itemprop="text">
<p>I've installed a user module with the command <code>pip --ignore-installed --user requests[security]</code> and realized that the python interpreter, which is embedded in a tool, is ignoring that and is loading first the System wide installed Module i: </p>
<pre><code>/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/OpenSSL
</code></pre>
<p>So went ahead and inserted manually my user path and tried to reload every module in <code>OpenSSL</code> like this:</p>
<pre><code>import sys
sys.path.insert(0, /Users/MYUSERNAME/Library/Python/2.7/lib/python/site-packages/)
reload(OpenSSL.SSL)
reload(OpenSSL.SSL)
reload(OpenSSL._util)
reload(OpenSSL.crypto)
reload(OpenSSL.rand)
reload(OpenSSL.version)
</code></pre>
<p>However, I've realized that that <code>OpenSSL</code> comes with <code>so</code> files. Is reload reloading <code>so</code> files as well?</p>
<p>Let me know if more info is needed.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/imp.html?highlight=reload#imp.reload" rel="nofollow noreferrer">https://docs.python.org/3/library/imp.html?highlight=reload#imp.reload</a></p>
<blockquote>
<p>There are a number of other caveats:</p>
<p>It is legal though generally <strong>not very useful to reload built-in or dynamically loaded modules</strong>, except for sys, __main__ and builtins. In many cases, however, <strong>extension modules are not designed to be initialized more than once</strong>, and may fail in arbitrary ways when reloaded.</p>
</blockquote>
<p>(Emphasize mine â€” phd.)</p>
</div>
