<div class="post-text" itemprop="text">
<p>After I installed flask by pip3, why can't I run it? How can I run it then? Thanks.</p>
<pre><code>$ pip3 install Flask
Collecting Flask
  Using cached https://files.pythonhosted.org/packages/7f/e7/08578774ed4536d3242b14dacb4696386634607af824ea997202cd0edb4b/Flask-1.0.2-py2.py3-none-any.whl
Collecting Werkzeug&gt;=0.14 (from Flask)
  Using cached https://files.pythonhosted.org/packages/20/c4/12e3e56473e52375aa29c4764e70d1b8f3efa6682bef8d0aae04fe335243/Werkzeug-0.14.1-py2.py3-none-any.whl
Collecting click&gt;=5.1 (from Flask)
  Using cached https://files.pythonhosted.org/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click-7.0-py2.py3-none-any.whl
Collecting Jinja2&gt;=2.10 (from Flask)
  Using cached https://files.pythonhosted.org/packages/7f/ff/ae64bacdfc95f27a016a7bed8e8686763ba4d277a78ca76f32659220a731/Jinja2-2.10-py2.py3-none-any.whl
Collecting itsdangerous&gt;=0.24 (from Flask)
  Using cached https://files.pythonhosted.org/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous-1.1.0-py2.py3-none-any.whl
Collecting MarkupSafe&gt;=0.23 (from Jinja2&gt;=2.10-&gt;Flask)
  Using cached https://files.pythonhosted.org/packages/08/04/f2191b50fb7f0712f03f064b71d8b4605190f2178ba02e975a87f7b89a0d/MarkupSafe-1.1.0-cp36-cp36m-manylinux1_x86_64.whl
Installing collected packages: Werkzeug, click, MarkupSafe, Jinja2, itsdangerous, Flask
Successfully installed Flask-1.0.2 Jinja2-2.10 MarkupSafe-1.1.0 Werkzeug-0.14.1 click-7.0 itsdangerous-1.1.0

$ export FLASK_APP=hello.py

$ python3 flask run
python3: can't open file 'flask': [Errno 2] No such file or directory
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try as a module</p>
<blockquote>
<p>python -m flask run</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Your command does not run, because <code>python3</code> expects a file as its argument, and there's not one there (or a directory, check out the documentation linked below).</p>
<p>The option <code>-m module-name</code> will search the <code>sys.path</code> for the <em>module</em> you pass on, and execute its contents as the <code>__main__</code> module. Check out the official <a href="https://docs.python.org/3/using/cmdline.html" rel="nofollow noreferrer">docs</a>. </p>
<p>You might have seen that as an example, where people run <code>python3 -m http.server</code> to serve files from their current directory.</p>
</div>
<span class="comment-copy">the command can be used without python3, for instance in a virtual env. But where is the code, what program are you trying to run? Flask doesn't 'run' just like you just tried.</span>
<span class="comment-copy">Thanks. Could you explain why my command doesn't run?</span>
<span class="comment-copy">What does <code>python3</code> expect if I don't specify <code>-m</code>?</span>
<span class="comment-copy">As per the documentation linked above, <i>it depends</i>.... When called with a <code>file name</code> argument or with a file as standard input, it reads and executes a script from that file. When called with a <code>directory name</code> argument, it reads and executes an appropriately named script from that directory. When called with <code>-c</code> command, it executes the Python statement(s) given as command. Here command may contain multiple statements separated by newlines. When called with <code>-m</code> module-name, the given module is located on the Python module path and executed as a script.</span>
