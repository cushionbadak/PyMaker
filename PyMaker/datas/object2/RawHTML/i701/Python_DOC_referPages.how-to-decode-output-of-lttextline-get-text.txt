<div class="post-text" itemprop="text">
<p>I'm new to PDFminer. I noticed that some symbols/punctuations are not output in the literal form when using PDFminer get_text() command. For example, "-" came out as "\xe2\x80\x93" and single quotes ' came out as "\xe2\x80\x99". Here's the command I used:</p>
<p>print(LTTextLine.get_text().encode('UTF-8'))</p>
<p>Can somebody help me understand how to read these, and transform it back to the literal form?</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>The hex escapes that you don't like aren't hyphens (ASCII 39) and single quotes (ASCII 45). They are typographic hyphens (a.k.a. en-dashes) <code>–</code> (Unicode 2010) and right single (“smart”) quotation marks <code>’</code> (Unicode 2019). They are encoded as UTF-8. If you want to decode them, treat the string that contains them as bytes, not a string (note the <code>b</code> prefix):</p>
<pre><code>&gt;&gt;&gt; mystring = b"This is an en\xe2\x80\x93dash and this - isn\xe2\x80\x99t"
&gt;&gt;&gt; mystring.decode('UTF8')
'This is an en–dash and this - isn’t'
</code></pre>
<p>If Python thinks the data is already a string, as below, with no <code>b</code> prefix, then you need to convince it that it is really bytes, and decode the result:</p>
<pre><code>&gt;&gt;&gt; mystring = "This is an en\xe2\x80\x93dash and this - isn\xe2\x80\x99t"
&gt;&gt;&gt; bytes(mystring.encode("latin-1")).decode("UTF-8")
'This is an en–dash and this - isn’t'
</code></pre>
<p>In the font that SO uses there is not much obviously different between ASCII 39 and Unicode 2010 but in general the typographic hyphen is shorter, thicker and closer to the baseline than the ASCII hyphen. The distinction between the other two is fairly clear in 
<code>isn’t'</code>. It's common to find the Unicode variants in <code>.pdf</code> files because they are intended to be printed. The ASCII variants are really only appropriate in program code, and emulations of old typewriters; not printed books and magazines.</p>
</div>
<span class="comment-copy">I suspect that they weren't really hyphens <code>-</code> (ASCII 45) and single quotes <code>'</code> (ASCII 39) but instead typographic hyphens <code>‐</code> (Unicode 2010) and Unicode right single quotation marks  <code>’</code> (Unicode 2019).</span>
<span class="comment-copy">looks like the \x?? are Python escape characters as in <a href="https://stackoverflow.com/questions/2672326/what-does-a-leading-x-mean-in-a-python-string-xaa" title="what does a leading x mean in a python string xaa">stackoverflow.com/questions/2672326/…</a>   but I still don't have a clue how I can properly encode these symbols. Tried all the utf* supported encodings in <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow noreferrer">docs.python.org/3/library/codecs.html#standard-encodings</a> to no avail.</span>
