<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/701802/how-do-i-execute-a-string-containing-python-code-in-python">How do I execute a string containing Python code in Python?</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
</ul>
</div>
<p>I want to be able to take a string which describes a Python function and turn it into a function object which I can then call. For example,  </p>
<pre><code>myString = "def add5(x):
   return x + 5"
myFunc = myString.toFunction() &lt;-- something like this?
print myFunc(10)     &lt;-- should print 15
</code></pre>
<p>My desire to be able to do this arose from a problem posed in my theoretical foundations of computing class, which operates under an assumption of SISO (String in, String out). In particular, we are examining the uncomputable problem yesOnString(P,I), which returns "yes" if P(I) = "yes" and "no" otherwise. Thus I want to be able to have a function P passed in String form as a parameter, and then have the function convert the string into a function which it then calls. </p>
</div>
<div class="post-text" itemprop="text">
<p>This is possible with the Python built-in <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow noreferrer">exec() function</a>.</p>
<pre><code>myString = "def myFunc(x): return x + 5"
exec( myString )  # myFunc = myString.toFunction() &lt;-- something like this?
print( myFunc(10) )  #   &lt;-- should print 15
</code></pre>
<p>If you want to keep the same naming pattern</p>
<pre><code>myString = "def add5(x): return x + 5"
exec( myString )  # myFunc = myString.toFunction() &lt;-- something like this?
myFunc = add5
print( myFunc(10) )  #   &lt;-- should print 15
</code></pre>
<p>In terms of safety: <code>exec()</code> <em>executes</em> the given string, <em>any</em> given string.</p>
<pre><code>import os.system
os.system("format C:")  # etc.
</code></pre>
<p>So be really careful how it's used.  Certainly not on any sort of user's input.</p>
</div>
<span class="comment-copy">@Kingsley <code>eval()</code> wouldn't work but <code>exec()</code> would but it would just introduce <code>add5</code> as the function name. @SufiyanGhori you can't use <code>literal_eval</code> that is only for literals - and this is code.</span>
<span class="comment-copy">@AChampion - I think <code>exec()</code> is what the OP wants.  Even if it supports <code>exec('import os')</code>, <code>exec('os.system("rm -rf blah")')</code>.</span>
<span class="comment-copy">Yes, the obligatory warnings.</span>
<span class="comment-copy">@TigerhawkT3: This is not a duplicate. OP has clearly said he want to convert string to function and store it as a varialbe. This is not answered in the origianl question and answer.</span>
<span class="comment-copy">followup question: <a href="https://stackoverflow.com/questions/54453678/right-way-to-turn-an-input-string-into-a-callable-function-and-store-it-as-varia" title="right way to turn an input string into a callable function and store it as varia">stackoverflow.com/questions/54453678/â€¦</a></span>
