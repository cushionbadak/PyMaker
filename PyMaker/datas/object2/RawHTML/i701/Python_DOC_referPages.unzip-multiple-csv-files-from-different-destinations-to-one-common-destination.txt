<div class="post-text" itemprop="text">
<p>I am currently using some code that downloads csv data in zip files for each month in each year, the files are downloaded and then stored like this:</p>
<p><a href="https://i.stack.imgur.com/jRlNh.png" rel="nofollow noreferrer"><img alt="folders" src="https://i.stack.imgur.com/jRlNh.png"/></a></p>
<p>Currently these folders are just on my desktop</p>
<p>Once I click on say the folder <code>2011</code> you can see a folder for each month, jan, feb etc...</p>
<p>So far I have tried this:</p>
<pre><code>import os, zipfile

z = zipfile.ZipFile('PUBLIC_*.zip')
for f in z.namelist():
    if f.endswith('/'):
        os.makedirs(f)
</code></pre>
<p>but it doesn't seem to work?</p>
<p>Any help would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>This seems to be more related to file system traversing than <em>zipfile</em>. For that, you can use <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">[Python 3]: glob - Unix style pathname pattern expansion</a>, and for handling <em>.zip</em> files handling use <a href="https://docs.python.org/3/library/zipfile.html" rel="nofollow noreferrer">[Python 3]: zipfile - Work with ZIP archives</a>.</p>
<p>For more details on traversing directories, check <a href="https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory/48393588#48393588">[SO]: How do I list all files of a directory? (@CristiFati's answer)</a>.</p>
<p><em>code.py</em>:</p>
<pre class="lang-py prettyprint-override"><code>#!/usr/bin/env python3

import sys
import os
import glob
import zipfile


INPUT_DIR = ".\\InDir"
OUTPUT_DIR = ".\\OutDir"


def get_zip_files(path, start_pattern):  # Python 3.5 + !!!
    return glob.iglob(os.path.join(INPUT_DIR, os.path.join("**", start_pattern + "*.zip")), recursive=True)


def main():
    for item in get_zip_files(INPUT_DIR, "PUBLIC_"):
        print("Found .zip file that matches pattern: {:s}".format(item))
        zf = zipfile.ZipFile(item)
        for name in zf.namelist():
            if name.lower().endswith(".csv"):
                print("    Extracting {:s}".format(name))
                zf.extract(name, path=OUTPUT_DIR)


if __name__ == "__main__":
    print("Python {:s} on {:s}\n".format(sys.version, sys.platform))
    main()
</code></pre>
<p><strong>Notes</strong>:</p>
<ul>
<li>I created (in my <em>cwd</em>) a tree structure that is simpler than yours, but thew principle is the same</li>
<li>The files used are dummy</li>
<li>The algorithm is simple:

<ul>
<li>Search the input dir for <em>.zip</em> files that match desired pattern (name starts with <em>PUBLIC_</em>)</li>
<li>For each such file, extract all <em>.csv</em> files that it contains in the output dir</li>
</ul></li>
</ul>
<p><strong>Output</strong>:</p>
<blockquote>
<pre><code>e:\Work\Dev\StackOverflow\q054498244&gt;dir /b
code.py
InDir
OutDir

e:\Work\Dev\StackOverflow\q054498244&gt;dir /b /s InDir
e:\Work\Dev\StackOverflow\q054498244\InDir\Dir0
e:\Work\Dev\StackOverflow\q054498244\InDir\Dir0\Dir00
e:\Work\Dev\StackOverflow\q054498244\InDir\Dir0\Dir01
e:\Work\Dev\StackOverflow\q054498244\InDir\Dir0\Dir00\OTHER_FILE.zip
e:\Work\Dev\StackOverflow\q054498244\InDir\Dir0\Dir00\PUBLIC_DVD_DISPATCH_UNIT_SCDATA_00.zip
e:\Work\Dev\StackOverflow\q054498244\InDir\Dir0\Dir01\PUBLIC_DVD_DISPATCH_UNIT_SCDATA_01.zip

e:\Work\Dev\StackOverflow\q054498244&gt;dir /b OutDir

e:\Work\Dev\StackOverflow\q054498244&gt;"e:\Work\Dev\VEnvs\py_064_03.06.08_test0\Scripts\python.exe" code.py
Python 3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)] on win32

Found .zip file that matches pattern: .\InDir\Dir0\Dir00\PUBLIC_DVD_DISPATCH_UNIT_SCDATA_00.zip
    Extracting PUBLIC_DVD_DISPATCH_UNIT_SCDATA_0.csv
Found .zip file that matches pattern: .\InDir\Dir0\Dir01\PUBLIC_DVD_DISPATCH_UNIT_SCDATA_01.zip
    Extracting PUBLIC_DVD_DISPATCH_UNIT_SCDATA_1.csv

e:\Work\Dev\StackOverflow\q054498244&gt;dir /b OutDir
PUBLIC_DVD_DISPATCH_UNIT_SCDATA_0.csv
PUBLIC_DVD_DISPATCH_UNIT_SCDATA_1.csv
</code></pre>
</blockquote>
<p><strong><em>@EDIT0</em></strong>:</p>
<p>For <em>Python <strong>2</strong></em></p></div>
<div class="post-text" itemprop="text">
<p>I do not have experience with the zip module unfortunately, but if you are asking how you could navigate to each of these folders I would approach the problem like such:</p>
<pre><code>import os
import zipfile

main_file = 'C:\\Users\\Folder1' #wherever you have saved all this data in full path form
os.chdir(main_file) # Load program into top level
os.mkdir('OUTPUT') # make a folder to save output
try:
    for i in range(2010, 2016 + 1): # for years 2010-2016
        os.chdir(str(i))
        for j in range(1, 12+1): # months 1-12
            os.chdir('MMSDM_{0}_{1:02d}'.format(i, j))
            os.chdir('MMSDM_Historical_Data_SQLLoader/DATA')
            z = zipfile.ZipFile('PUBLIC_*.zip')
            # do stuff with zip file here
            os.chdir(main_file)
            os.chdir('OUTPUT')
            with open('FileNameUsingIorJ.csv/zip/SomeOtherExtension', 'w+') as file:
                file.write(zipfile_data)
            os.chdir(main_file) # reset for next loop
except Exception as e:
    print('Exception occurred: {}'.format(e))
</code></pre>
<p>I can't verify it works though because I obviously don't have the files on my PC, and there are still some fill in the blanks like "# do stuff here" but hopefully this can help get you on track! Let me know if you need more clarification.</p>
</div>
<span class="comment-copy">Thanks so much for your detailed response, will this work on python2? Or do I need python3?</span>
<span class="comment-copy">Unfortunately <i>glob</i> is only able to search recursively on <i>Python 3</i>. I'll prepare a <i>Python 2</i> variant shortly</span>
<span class="comment-copy">Okay thank you! Just have a lot of stuff still set up for python2</span>
<span class="comment-copy">Hi, thanks for your help so far, however it doesnt seem to be working for me. I'll show you here</span>
