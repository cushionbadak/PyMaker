<div class="post-text" itemprop="text">
<p>For each iteration in given script, i am importing a data and computing a variable. for simplicity, i am not including all that stuff and lets say i want to print the ID for each of 25 cases. In whatever way, i place the last statement, it always prints - either all iterations for last data or last iteration for all data. </p>
<pre><code>for data in range(0,5):

    if data==0:
        for iteration in range(0,5):
            # Import some data 
            ID = (data,iteration)

    elif data ==1:
        for iteration in range(0,5):
            # Import some data 
            ID = (data,iteration)

    elif data ==2:
        for iteration in range(0,5):
            # Import some data 
            ID = (data,iteration)

    elif data ==3:
        for iteration in range(0,5):
            # Import some data 
            ID = (data,iteration)           

   elif data ==4:
        for iteration in range(0,5):
            # Import some data 
            ID = (data,iteration)


   ComputedValue = data + iteration                             
   print( 'ComputedValue = %.1d for ID = (%.1d,%.1d)' %(ComputedValue,data,iteration) )
</code></pre>
<p>Currently it prints only for 5 cases:</p>
<pre><code>ComputedValue = 4 for ID = (0,4)
ComputedValue = 5 for ID = (1,4)
ComputedValue = 6 for ID = (2,4)
ComputedValue = 7 for ID = (3,4)
ComputedValue = 8 for ID = (4,4)
</code></pre>
<p>What changes/modifications to be done, so it prints for all 25 cases? 
Thanks!!
Rachit</p>
<p>Edit: I don't want to print at the end of every for loop as I want to create a vector of computed values (25 values) and plot it with respect to some variable. </p>
</div>
<div class="post-text" itemprop="text">
<p>You need to put </p>
<pre><code>print( 'ComputedValue = %.1d for ID = (%.1d,%.1d)' %(ComputedValue,data,iteration) )
</code></pre>
<p>at the end of every inner for loop (but still inside of the loop, so not on the same line as the for) that it gets printed for every single iteration. </p>
<p>If you do the same stuff for every loop you could also consider to create a function which you call there with the print in it.</p>
<p>To receive a vector with all values in the end insert this line in the beginning (before the outer for loop):</p>
<pre><code>hist = []
</code></pre>
<p>Then in every inner for loop add this line:</p>
<pre><code>hist.append(id)
</code></pre>
<p>Now you'll have all values available after you're done with the loops and can print them or do whatever you like with them.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I don't want to print at the end of every for loop as I want to create a vector of computed values (25 values)</p>
</blockquote>
<p>Well, so why don't you just do that ("create a vector of computed values") then ??? </p>
<pre><code>values = []
for i in range(5):
   for j in range(5):
       values.append((i, j))

print(values)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to print after each iteration, without accumulating the result and printing it at the end (like in Bruno's answer) then you can use a simple function like in the following example:</p>
<pre><code>def f(data, r=range(5)):
    for iteration in r:
        ID = (data, iteration)
        print( 'ComputedValue = %.1d for ID = (%.1d,%.1d)' %(ComputedValue,data,iteration) )

for data in range(5):
    f(data)
</code></pre>
<p>You can modify the function as you think is best for your code, without the need of writing all that boilerplate code.</p>
</div>
<span class="comment-copy">Your print statement is outside the second for loop so you will always get <code>4</code>. Easy ugly way would be to put the print statement in every for loop</span>
<span class="comment-copy">you add a 'else' after all the 'elif' conditions ?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">docs.python.org/3/tutorial/introduction.html#lists</a></span>
<span class="comment-copy">Not at the end of every for loop <b>but</b> in every for loop. At the end would mean again printing only the last value of the loop iteration which will be 4</span>
<span class="comment-copy">Uh that's what I mean. After the ID call but still on the same line as the ID thing</span>
<span class="comment-copy">You should specify that. Currently you wrote "at the end of every inner for loop" which has a different meaning. Just write "inside the inner for loop after the ID =...."</span>
<span class="comment-copy">I dont want to do that as i want to create a vector of computed values (25 values) and plot it with respect to some variable.</span>
<span class="comment-copy">In this case create a list before the outer for loop and instead of the print in the forloops just add the values to the list. I edit my answer there you'll see an example</span>
<span class="comment-copy">This is best if it was minor computation for each case (i,j). I am importing a new data file (each has a different name and location) for each case and computing the ComputedValue which consists of many lines. Puting so many lines of computation for each case makes code very long. My purpose is to extract the relevant values from imported data (lets say i and j for simplicity) and use this i and j values to compute the ComputedValue at end.</span>
<span class="comment-copy">@Rachit You asked how to collect values, I posted the minimal example doing so.  wrt/ "Puting so many lines of computation for each case makes code very long", just factor out this code in a distinct (or many distinct) functions - I don't see how replacings <code>print</code> calls with <code>list.append</code> one relates to this problem FWIW.</span>
<span class="comment-copy">The OP clearly stated: "I don't want to print at the end of every for loop as I want to create a vector of computed values (25 values) and plot it with respect to some variable."</span>
<span class="comment-copy">Yep, you are right. I didn't notice the "Edit" session at the end.</span>
