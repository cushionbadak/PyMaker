<div class="post-text" itemprop="text">
<p>You are given a dictionary of the US states and their capitals. The keys in the dictionary are states and the values are capital names.</p>
<p>Write a code to return a list of all capitals that contain the name of a state in their name as a substring.</p>
<p>HINT: For example, Indiana as a capital name and Indianapolis as a state name is one of the key/value pairs that your code would find. Your code should add Indianapolis to the list. After you found all capitals and added them to the list, print out the list</p>
<h1>Run this cell to create a dictionary of states' capitals</h1>
<pre><code>capitals={
    'Alabama': 'Montgomery',
    'Alaska': 'Juneau',
    'Arizona':'Phoenix',
    'Arkansas':'Little Rock',
    'California': 'Sacramento',
    'Colorado':'Denver',
    'Connecticut':'Hartford',
    'Delaware':'Dover',
    'Florida': 'Tallahassee',
    'Georgia': 'Atlanta',
    'Hawaii': 'Honolulu',
    'Idaho': 'Boise',
    'Illinios': 'Springfield',
    'Indiana': 'Indianapolis',
    'Iowa': 'Des Monies',
    'Kansas': 'Topeka',
    'Kentucky': 'Frankfort',
    'Louisiana': 'Baton Rouge',
    'Maine': 'Augusta',
    'Maryland': 'Annapolis',
    'Massachusetts': 'Boston',
    'Michigan': 'Lansing',
    'Minnesota': 'St. Paul',
    'Mississippi': 'Jackson',
    'Missouri': 'Jefferson City',
    'Montana': 'Helena',
    'Nebraska': 'Lincoln',
    'Neveda': 'Carson City',
    'New Hampshire': 'Concord',
    'New Jersey': 'Trenton',
    'New Mexico': 'Santa Fe',
    'New York': 'Albany',
    'North Carolina': 'Raleigh',
    'North Dakota': 'Bismarck',
    'Ohio': 'Columbus',
    'Oklahoma': 'Oklahoma City',
    'Oregon': 'Salem',
    'Pennsylvania': 'Harrisburg',
    'Rhoda Island': 'Providence',
    'South Carolina': 'Columbia',
    'South Dakota': 'Pierre',
    'Tennessee': 'Nashville',
    'Texas': 'Austin',
    'Utah': 'Salt Lake City',
    'Vermont': 'Montpelier',
    'Virginia': 'Richmond',
    'Washington': 'Olympia',
    'West Virginia': 'Charleston',
    'Wisconsin': 'Madison',
    'Wyoming': 'Cheyenne'  
}
</code></pre>
<p>Code:</p>
<pre><code>result = []
for x in capitals.keys():
    if(x in capitals[x]):
        result.append(capitals[x])
print(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Oh, I got it. I missunderstood your question.
This will be work.</p>
<pre><code>print([v for k, v in capitals.items() if k in v])

# more readable
print([capital for state, capital in capitals.items() if state in capital])
</code></pre>
<p>This will return </p>
<pre><code>['Indianapolis', 'Oklahoma City']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If would go for the following:</p>
<pre><code>states = capitals.keys()
capitals = capitals.values()
solution = [capital for capital in capitals if [state for state in states if state in capital]]
# solution = ['Indianapolis', 'Oklahoma City']
</code></pre>
<p>The inner list contains the list of states that appear in the capital we are currently iterating over in the outer list. If this list is not empty current captial is added to the list of outputs.
You can yield the same results by sequencing the same logic with normal <code>if/for</code> statements.</p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>Use map to find the list of matching capitals.</li>
<li>filter 'None' entries.</li>
</ol>
<p>Output:</p>
<pre><code>filter(None, map(lambda state: capitals[state] if state in capitals[state] else None, capitals))
</code></pre>
<p>Output:</p>
<pre><code>['Oklahoma City', 'Indianapolis']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use list comprehension to do the same thing that you code currently does. This:</p>
<pre><code>result = []
for x in capitals.keys():
    if(x in capitals[x]):
        result.append(capitals[x])
print(result)
</code></pre>
<p>can be converted into a list comprehension just by observation.</p>
<pre><code>result = [capitals[x] for x in capitals.keys() if x in capitals[x]]
print(result)
</code></pre>
<p>The above is equivalent to your code. If you don't know <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">list comprehensions</a>, I suggest getting familiar with the concept.</p>
<p>This code calls <code>capitals[x]</code> twice, so there is yet another improvement possible: iterate over the <code>items</code> of the dictionary, which is covered in Yuda's answer.</p>
</div>
<div class="post-text" itemprop="text">
<p>For Python 2.x:</p>
<pre><code>capital_list = []
for state, capital in capitals.iteritems():
  if state.lower() in capital.lower():
    capital_list.append(capital)
print(capital_list)
</code></pre>
<p>For Python 3.x:</p>
<pre><code>capital_list = []
for state, capital in capitals.items():
  if state.lower() in capital.lower():
    capital_list.append(capital)
print(capital_list)
</code></pre>
<p>Result:</p>
<pre><code>['Indianapolis', 'Oklahoma City']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Iterate through your dictionary and check if the value contains the key in it i.e. if key is sub-string of value.</p>
<pre><code>for key, value in capitals.items():
  if key in value:
    print(value)
</code></pre>
</div>
<span class="comment-copy">Please post what you have tried</span>
<span class="comment-copy"><code>code</code> result = [] for x in capitals.keys():     if(x in capitals[x]):         result.append(capitals[x]) print(result) <code>code</code></span>
<span class="comment-copy">You can edit your question by clicking the edit button beneath it. A question should be self contained, and comments are only for clarification, not providing necessary information.</span>
<span class="comment-copy">Please add your code to the question, and not as a comment. Also, just to confirm, the expected answer is <code>['Indianapolis', 'Oklahoma City']</code>, isn't it?</span>
<span class="comment-copy">Seems like a homework, not a reasonable question.</span>
<span class="comment-copy">Definitely not what the question is asking, but possibly a good first step.</span>
<span class="comment-copy">your code must return a list of ALL capitals that contain the name of a state in their name as a substring.</span>
<span class="comment-copy">OP wants to output a list of capitals not states</span>
<span class="comment-copy"><code>Indiana as a capital name and Indianapolis as a state name</code> - I'm not from US and this caused the confusion :) <a href="https://en.wikipedia.org/wiki/Indiana" rel="nofollow noreferrer">en.wikipedia.org/wiki/Indiana</a> states Indiana is the state (and not capital) and Indianapolis is its capital.</span>
