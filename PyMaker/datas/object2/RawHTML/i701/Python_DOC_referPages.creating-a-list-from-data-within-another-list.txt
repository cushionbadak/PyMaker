<div class="post-text" itemprop="text">
<p>I have created a list </p>
<pre><code>a=[1,2,3,4,5]*100
</code></pre>
<p>I now need to create another list  that will contain the first 8 prime number locations from within <code>a</code>.</p>
<p>I have tried these two lines of code and they didn't work</p>
<pre><code>b=a[2:3:5:7:11:13:17:19]
a[2:3:5:7:11:13:17:19]=b
</code></pre>
<p>The output for list A is "[1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2, 3, 4, 5]" so its the locations 2,3,5,7,11,13,17,19 out of that output</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a=[1,2,3,4,5]*100
indices = [2,3,5,7,11,13,17,19]
b  = []
for i in indices:
   b.append(a[i])
print(b)
</code></pre>
<p>You have to access each element individually. <code>b=a[2:3:5:7:11:13:17:19]</code> <strong>is not valid syntatically in Python. Actually, this is not the way to access elements at particular indices.</strong></p>
<p>Pythonic way to do the same thing (It will reduce code length) using List Comprehension:</p>
<pre><code>indices = [2,3,5,7,11,13,17,19]
b = [a[i] for i in indices]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would try it like this using list comprehension (beware the test_prime method is not optimized at all):</p>
<pre><code>def test_prime(n):
    if (n==1):
        return False
    elif (n==2):
        return True;
    else:
        for x in range(2,n):
            if(n % x==0):
                return False
        return True



a=[1,2,3,4,5]*100
b = [item for item in range(len(a)) if test_prime(a[item])]
b = b[0:8]

print b
</code></pre>
<p>which outputs (<em>note Python counts from 0</em>, so the first element of an array is 0 and not 1):</p>
<pre><code>[1, 2, 4, 6, 7, 9, 11, 12]
</code></pre>
</div>
<span class="comment-copy">It's unclear to me what you expected from that code. You already know what the first 8 primes in the list will be, and where they are, why not just write <code>b = [1, 2,   6, 7, ...]</code>?</span>
<span class="comment-copy">But <code>a</code> is just <code>[1,2,3,4,5]</code> repeated 100 times?</span>
<span class="comment-copy">@hqkhan yes exactly... If you need first 8 prime numbers then Pi's answer is correct.. If you have some very specific (and a little strange requirement) then go for taurus05's answer.</span>
<span class="comment-copy">i have edited the question]</span>
<span class="comment-copy">Iterate over <code>a</code> using <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>; check each value for <i>primeness</i>; if a value is prime, save the index; stop when you have enough.</span>
<span class="comment-copy">This would be a standard use-case for a list comprehension as well. +1</span>
<span class="comment-copy">@MadPhysicist, Yes it can be!</span>
<span class="comment-copy">i have edited the question</span>
<span class="comment-copy">I have posted the answer. If it works for you, upvote it so that it can be helpful to others as well. You can also mark it as appropriate answer.</span>
<span class="comment-copy">Well that depends on the personal taste. I like vectorized approaches. For this small case, it might be an overkill but it is always good to have options</span>
<span class="comment-copy">you can run the for loop till <code>n//2</code> only for a more efficient code</span>
<span class="comment-copy">Actually I am trying to think of a way to interrupt the list comprehension, but my Python skills are to bad</span>
<span class="comment-copy">@AshuGrover Right, sorry was blinded with the other problem. Actually even to sqrt of n</span>
<span class="comment-copy">i have edited the question</span>
<span class="comment-copy">this does not work i get a syntax error</span>
