<div class="post-text" itemprop="text">
<p>First thing is that I'm not a python expert.</p>
<p>I have a project which were run on Mac by PyChart and was working well. Since I moved back to Windows I'd like to run my python project in Windows Linux Subsystem a.k.a. Ubuntu Bash command line. The reason behind are the following:</p>
<ul>
<li>Ubuntu gives more flexibility to deal with different python versions</li>
<li>I connect to kerberized Impala where thrift-ssl and other packages are required and they are compiled by install time, on Windows I faced difficulties to install these. Ubuntu works like a charm. Due to this PyCharm on Windows is not an option</li>
<li>the service I connect to requires kerberos authentication. PyCharm running on Windows can manage spinning up Ubuntu and execute the developed script there, but kerberos (kinit) authentication gives extra complexity and requires me to put my domain password in a script or file. It's a no-go for me.</li>
</ul>
<p>So, I moved my project to Ubuntu Bash. I created virtualenv, activated it and tried to run my script. It failed with the following error:</p>
<pre><code>(venv) desktop@DESKTOP-ST034M2:/mnt/c/DEV/project$ ./etl/finance/exports/export.py
Traceback (most recent call last):
  File "./etl/finance/exports/export.py", line 5, in &lt;module&gt;
    from util import db_connection
ModuleNotFoundError: No module named 'util'
</code></pre>
<p>This is what project looks like:</p>
<pre><code>project/
project/__init__.py

project/etl/
project/etl/__init__.py

project/etl/finance/
project/etl/finance/__init__.py

project/etl/finance/exports
project/etl/finance/exports/__init__.py
project/etl/finance/exports/export.py

project/util
project/util/__init__.py
project/util/db_connection.py
</code></pre>
<p>What export.py looks like:</p>
<pre><code>#!/usr/bin/python3
import csv
import datetime

from util import db_connection

c = db_connection.Connect("finance_db")
</code></pre>
<p>Having <code>__init__.py</code> in every directory means that - at least for me -, python manages the directories as packages/modules, so I can include python files from different directories. So, my assumption is that if I execute the scripts from the <code>project</code> directory, which is the project root directory, then python should find the files in the directories.</p>
<p>What I'm doing wrong here? What other parameters should I setup and/or check to have the script running?</p>
</div>
<div class="post-text" itemprop="text">
<p>try</p>
<pre><code>PYTHONPATH=. python youstartfile.py
</code></pre>
</div>
<span class="comment-copy">Are you running it as a module? <code>python -m project</code>?</span>
<span class="comment-copy">No, I tried to execute a single file as script.</span>
<span class="comment-copy">Having a proper package is useless if the package's parent directory path  isn't in your <code>sys.path</code>.</span>
<span class="comment-copy">You need to <a href="https://docs.python.org/3/using/cmdline.html#cmdoption-m" rel="nofollow noreferrer">run it as a module</a>.  Also see <a href="https://realpython.com/absolute-vs-relative-python-imports/" rel="nofollow noreferrer">relative import</a>.</span>
<span class="comment-copy">It solves the problem, but unfortunately the imported file also has other imports which fails... I have to rethink this whole <code>running it from command line</code> thing...</span>
