<div class="post-text" itemprop="text">
<p>I'm trying to create a log in Python 3.x, that writes out to the console. Here is my code:</p>
<pre><code>import logging
import sys

class Temp:
    def __init__(self, is_verbose=False):
        # configuring log
        if (is_verbose):
            self.log_level=logging.DEBUG
        else:
            self.log_level=logging.INFO

        log_format = logging.Formatter('[%(asctime)s] [%(levelname)s] - %(message)s')
        logging.basicConfig(level=self.log_level, format=log_format)
        self.log = logging.getLogger(__name__)

        # writing to stdout
        handler = logging.StreamHandler(sys.stdout)
        handler.setLevel(self.log_level)
        handler.setFormatter(log_format)
        self.log.addHandler(handler)

        # here
        self.log.debug("test")

if __name__ == "__main__":
    t = Temp(True)
</code></pre>
<p>If the line after "here" is entered, Python raises an error:</p>
<pre><code>[2019-01-29 15:54:20,093] [DEBUG] - test
--- Logging error ---
Traceback (most recent call last):
  File "C:\Programok\Python 36\lib\logging\__init__.py", line 993, in emit
    msg = self.format(record)
  File "C:\Programok\Python 36\lib\logging\__init__.py", line 839, in format
    return fmt.format(record)
  File "C:\Programok\Python 36\lib\logging\__init__.py", line 577, in format
    if self.usesTime():
  File "C:\Programok\Python 36\lib\logging\__init__.py", line 545, in usesTime
    return self._style.usesTime()
  File "C:\Programok\Python 36\lib\logging\__init__.py", line 388, in usesTime
    return self._fmt.find(self.asctime_search) &gt;= 0
AttributeError: 'Formatter' object has no attribute 'find'
...
</code></pre>
<p>I also had some other places in my code that prints to the log, but nothing is written to stdout, even if the line after "here" is removed.</p>
<p>What might be the problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem comes from the call to <code>basicConfig</code> which sets up a log handler for stderr and also accepts a format string, not a formatter. Because you are doing this work yourself later, you don't need to use the <code>basicConfig</code> function. More information can be found in the <a href="https://docs.python.org/3/library/logging.html#logging.basicConfig" rel="nofollow noreferrer">python documentation.</a></p>
<p>Removing the call to <code>basicConfig</code>, and adding a <code>self.log.setLevel(self.log_level)</code> will fix the issue you are seeing.</p>
<p>Working code:</p>
<pre><code>import logging                                                                  
import sys                                                                      

class Temp:                                                                     
    def __init__(self, is_verbose=False):                                       
        # configuring log                                                       
        if (is_verbose):                                                        
            self.log_level=logging.DEBUG                                        
        else:                                                                   
            self.log_level=logging.INFO                                         

        log_format = logging.Formatter('[%(asctime)s] [%(levelname)s] - %(message)s')
        self.log = logging.getLogger(__name__)                                  
        self.log.setLevel(self.log_level)                                       

        # writing to stdout                                                     
        handler = logging.StreamHandler(sys.stdout)                             
        handler.setLevel(self.log_level)                                        
        handler.setFormatter(log_format)                                        
        self.log.addHandler(handler)                                            

        # here                                                                  
        self.log.debug("test")                                                  

if __name__ == "__main__":                                                      
    t = Temp(True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Looking through a similar issue on the Python bug tracker (<a href="https://bugs.python.org/issue16368" rel="nofollow noreferrer">https://bugs.python.org/issue16368</a>), you can see that the <code>formatter</code> argument is expected to be a string (hence the attempt to invoke <code>find</code>):</p>
<pre><code>log_format = '[%(asctime)s] [%(levelname)s] - %(message)s'
logging.basicConfig(level=self.log_level, format=log_format)
</code></pre>
</div>
<span class="comment-copy">Check here: <a href="https://stackoverflow.com/questions/34319521/python-logging-module-having-a-formatter-causes-attributeerror" title="python logging module having a formatter causes attributeerror">stackoverflow.com/questions/34319521/â€¦</a></span>
<span class="comment-copy">The OP's code already does what the linked question suggests as answer</span>
<span class="comment-copy">It's related though</span>
<span class="comment-copy">Yes, I had already checked that before posting. Thanks though.</span>
<span class="comment-copy">Definitely better than what I was suggesting. +1</span>
