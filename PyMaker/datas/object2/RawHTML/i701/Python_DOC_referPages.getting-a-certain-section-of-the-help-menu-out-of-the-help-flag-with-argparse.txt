<div class="post-text" itemprop="text">
<p>I have a really long help menu when <code>--help</code> is passed in one of my programs:</p>
<pre><code>optional arguments:
  -h, --help            show this help message and exit

mandatory arguments:
  arguments that have to be passed for the program to run

  -u URL, --url URL     Pass a single URL to detect the protection
...
request arguments:
  arguments that will control your requests

  --pa USER-AGENT       Provide your own personal agent to use it for the HTTP
...
encoding options:
  arguments that control the encoding of payloads

  -e PAYLOAD [TAMPER-SCRIPT-LOAD-PATH ...], --encode PAYLOAD [TAMPER-SCRIPT-LOAD-PATH ...]
...
output options:
  arguments that control how WhatWaf handles output

  -F, --format          Format the output into a dict and display it
...
misc arguments:
  arguments that don't fit in any other category

  --verbose             Run in verbose mode (more output)
...
</code></pre>
<p>The structure that builds the arguments looks like this:</p>
<pre><code>        mandatory = parser.add_argument_group("mandatory arguments",
                                              "arguments that have to be passed for the program to run")
        mandatory.add_argument("-u", "--url", dest="runSingleWebsite", metavar="URL",
                               help="Pass a single URL to detect the protection")
...
        req_args = parser.add_argument_group("request arguments",
                                             "arguments that will control your requests")
        req_args.add_argument("--pa", dest="usePersonalAgent", metavar="USER-AGENT",
                              help="Provide your own personal agent to use it for the HTTP requests")
...
        encoding_opts = parser.add_argument_group("encoding options",
                                                  "arguments that control the encoding of payloads")
        encoding_opts.add_argument("-e", "--encode", dest="encodePayload", nargs="+", metavar=("PAYLOAD", "TAMPER-SCRIPT-LOAD-PATH"),
                                   help="Encode a provided payload using provided tamper script(s) "
                                        "you are able to payy multiple tamper script load paths to "
                                        "this argument and the payload will be tampered as requested")
...
... # so on so forth
</code></pre>
<p>What I want to happen is to obtain a single argument groups help message such as <code>encoding options</code> and display <em>only</em> that groups help. Is there a builtin way to do this or would writing the full help menu to a file and parsing it from there be the easiest solution? </p>
<p>IE:</p>
<pre><code>def gen_menu(data):
    with open(some_temp_file,"a+") as f:
        f.write(data)
    search_through_data_for_encoding
    return to_the_end_of_encoding
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just grab that information from the <code>encoding_opts</code> actions group. The help formatter takes the <code>.title</code> and <code>.description</code> attributes from the group, followed by the arguments of the group (via the <code>._group_actions</code> attribute).</p>
<p>The <code>argparse</code> <code>HelpFormatter</code> API is grossly under-documented and we have to rely on a private implementation detail to get the arguments for a group, but you can re-create the string by using the configured help formatter:</p>
<pre><code>def help_for_group(parser, group):
    formatter = parser.formatter_class(None)  # required argument, but None suffices.
    formatter.start_section(group.title)
    formatter.add_text(group.description)
    formatter.add_arguments(group._group_actions)
    formatter.end_section()
    return formatter.format_help()

print(help_for_group(parser, encoding_opts))
</code></pre>
<p>Demo using your <code>encoding_opts</code> sample:</p>
<pre><code>&gt;&gt;&gt; print(help_for_group(parser, encoding_opts))
encoding options:
  arguments that control the encoding of payloads

  -e PAYLOAD [TAMPER-SCRIPT-LOAD-PATH ...], --encode PAYLOAD [TAMPER-SCRIPT-LOAD-PATH ...]
                        Encode a provided payload using provided tamper
                        script(s) you are able to payy multiple tamper script
                        load paths to this argument and the payload will be
                        tampered as requested
</code></pre>
</div>
<span class="comment-copy">Please include the actual <code>argparse</code> structure created that outputs this help information. It is probably built up from <a href="https://docs.python.org/3/library/argparse.html#argument-groups" rel="nofollow noreferrer">argument groups</a>.</span>
<span class="comment-copy">Oh sorry one second</span>
<span class="comment-copy">I have no idea about what you are asking about writing to a file here. Argparse help information is a string, you can use regular Python string operations to manipulate it. But if you only need the help information for a single argument group, then you can just locate that group and tell it to produce its component help string.</span>
<span class="comment-copy">@MartijnPietersdoes that look better?</span>
<span class="comment-copy">@MartijnPieters my bad, it's no longer deleted it, i deleted it because your comment <code>Argparse help information is a string</code> had gave me an idea of parsing the string through subprocess</span>
