<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/23344185/how-to-convert-a-decimal-number-into-fraction">How to convert a decimal number into fraction?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I'm writing a program that uses the <code>Fractions</code> module. I want to get the most simplified fraction of a float. When I try it with numbers like <code>0.5</code>, it works correctly:</p>
<pre><code>&gt;&gt;&gt; import fractions
&gt;&gt;&gt; str(fractions.Fraction(0.5))
'1/2'
</code></pre>
<p>But when I try it with <code>0.55</code> or <code>0.1</code> it displays fractions with very high numerator and denominator, instead of <code>11/20</code> and <code>1/10</code>.</p>
<pre><code>&gt;&gt;&gt; str(fractions.Fraction(0.1))
'3602879701896397/36028797018963968'
&gt;&gt;&gt; str(fractions.Fraction(0.55))
'2476979795053773/4503599627370496'
</code></pre>
<p>What can I do to be sure that the script will always display the most simplified fraction? Is there any way to do it with <code>Fractions</code> module or another module, or I have to write the function myself?</p>
</div>
<div class="post-text" itemprop="text">
<p>When you pass <code>0.55</code> you are passing in a float, so it is already an inexact representation before the <code>Fraction</code> receives the value.</p>
<p>Alternatively, if you pass a string instead, you can get the exact value you want:</p>
<pre><code>&gt;&gt;&gt; fractions.Fraction('0.55')
Fraction(11, 20)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>fractions.Fraction(0.1).limit_denominator()
</code></pre>
<p>See the results:</p>
<pre><code>In [77]: str(fractions.Fraction(0.55).limit_denominator())
Out[77]: '11/20'

In [78]: str(fractions.Fraction(0.1).limit_denominator())
Out[78]: '1/10'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try with <code>decimal</code> module example from the <a href="https://docs.python.org/3/library/fractions.html#fractions.Fraction" rel="nofollow noreferrer">docs</a>:</p>
<pre><code>&gt;&gt;&gt; from fractions import Fraction
&gt;&gt;&gt; from decimal import Decimal
&gt;&gt;&gt; Fraction(Decimal('0.55'))
&gt;&gt;&gt; Fraction(11, 20)
&gt;&gt;&gt; str(Fraction(11, 20))
&gt;&gt;&gt; '11/20'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Pass it as string to get the simplified fraction:</p>
<pre><code>&gt;&gt;&gt; fractions.Fraction('0.1')
Fraction(1, 10)
&gt;&gt;&gt; str(fractions.Fraction('0.1'))
'1/10'
</code></pre>
</div>
<span class="comment-copy">When you pass <code>0.55</code> you are passing in a float, so it is already an inexact representation before the <code>Fraction</code> receives the value</span>
<span class="comment-copy">The crux is that simple decimal fractions like e.g. 0.1 are often periodic fractions in the dual system. The floating point numbers used in the computer make it even more worse. Recommended reading: <a href="http://floating-point-gui.de/" rel="nofollow noreferrer">Floating point guide</a>.</span>
<span class="comment-copy">If you pass a string like <code>Fraction('0.1')</code> it will work.</span>
<span class="comment-copy">@khelwood Do you know what causes the giant numbers to appear for <code>0.1</code>? Is there some deterministic rule for this?</span>
<span class="comment-copy">It's not dulicate of <a href="https://stackoverflow.com/questions/23344185/how-to-convert-a-decimal-number-into-fraction" title="how to convert a decimal number into fraction">stackoverflow.com/questions/23344185/â€¦</a>. It doesn't explain why I have to pass the number as a string.</span>
