<div class="post-text" itemprop="text">
<p>I'm trying to debug my service with <code>PythonService.exe</code> and I get a strange error:</p>
<pre><code>PS C:\Users\rs_al\Dev\PyXLSQL&gt; py serviceapp.py install
Installing service pyxlsql
Changing service configuration
Service updated
PS C:\Users\rs_al\Dev\PyXLSQL&gt; py serviceapp.py debug
Debugging service pyxlsql - press Ctrl+C to stop.
Error 0xC0000004 - Python could not import the service's module

ModuleNotFoundError: No module named 'w32service'

(null): (null)
</code></pre>
<p>Project structure</p>
<pre><code>serviceapp.py
    w32service\
               __init__.py
               service.py
</code></pre>
<p>And if I move whole code from <code>service.py</code> into <code>serviceapp.py</code> I can debug it without issues. </p>
<p>EDIT:</p>
<pre><code>gui.py
gui\
    __init__.py
    menu.py
    pageone.py
    pagetwo.py
    pagethree.py
</code></pre>
<p>And it perfectly works as <code>*.py</code> or <code>.*exe</code></p>
</div>
<div class="post-text" itemprop="text">
<p><em>Python</em> interpreter doesn't know where to look for <em>w32service</em> module (package). One way would be to add its path to <a href="https://docs.python.org/3/tutorial/modules.html#the-module-search-path" rel="nofollow noreferrer">[Python 3]: The Module Search Path</a> (<strong>before</strong> importing it):</p>
<pre class="lang-py prettyprint-override"><code>import sys
import os
sys.path.append(os.path.abspath(os.path.dirname(__file__)))

from w32service.service import WinService

# ...
</code></pre>
<p>To make things clearer, use <code>print(sys.path)</code> before importing anything (well, except <em>sys</em>) to see where is the <em>Python</em> searching for modules.</p>
</div>
<span class="comment-copy">Are <i>serviceapp.py</i> and <i>w32service</i> located in the same dir? It's not clear from the tree.</span>
<span class="comment-copy">In same project dir</span>
<span class="comment-copy">And how does the import look like in <i>serviceapp.py</i>?</span>
<span class="comment-copy">‘from w32service.service import WinService‘.</span>
<span class="comment-copy">You might be missing an <code>__init__.py</code> in the folder holding <code>serviceapp.py</code></span>
<span class="comment-copy">Could you explain why I can then import in <code>gui.py</code> in the same dir as <code>serviceapp.py</code> from package <code>gui</code>? <code>gui</code> is on the same level as <code>w32service</code>. I still don't undestand Python imports.</span>
<span class="comment-copy">Unfortunately without additional details I can't. whith the code above you'll be able to import <b>any</b> package from <i>serviceapp</i>'s dir.</span>
<span class="comment-copy">I've edited my question. I accept your solution, but if you could explain me why other imports works without issue, I would be appreciate.</span>
<span class="comment-copy">I assume that you have something similar in <i>service.py</i>. As a note you have a <i>gui.py</i> and a <i>gui</i> dir with <i>__init__.py</i>,  so you have 2 entities with the same name which could yield unexpected results. Anyway if you could post a <a href="https://stackoverflow.com/help/mcve">[SO]: How to create a Minimal, Complete, and Verifiable example (mcve)</a> (short files ~1 line of code), I'd be happy to investigate.</span>
