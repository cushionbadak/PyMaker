<div class="post-text" itemprop="text">
<p>I have made an age calculator in python that, after you answer a series of questions, gives you your age in years, months and days. I am trying to incorporate leap years in it using an if statement that adds an extra day onto your age for every leap year experience, but I think there could be a shorter way. Any ideas?</p>
<p>Here is my code:</p>
<pre><code>currentDay = int(input('What day of the month is it?'))
currentMonth = int(input('What month is it?'))
currentYear = int(input('What year is it?'))
birthDay = int(input('What day of the month were you born on?'))
birthMonth = int(input('What month were you born?'))
birthYear = int(input('Which year were you born in?'))
ageDays = currentDay - birthDay
ageMonths = currentMonth - birthMonth
ageYears = currentYear - birthYear
daysToAdd = 0

if currentMonth == 1 or currentMonth == 3 or currentMonth == 5 or 
currentMonth == 7:
    daysToAdd = 31

elif currentMonth == 2:
    daysToAdd = 28

elif currentMonth == 8 or currentMonth == 10 or currentMonth == 12:
    daysToAdd = 31

else:
    daysToAdd = 30

if birthDay &gt; currentDay:
    ageMonths = ageMonths + 1
    ageDays = ageDays + daysToAdd

if birthMonth &gt; currentMonth:
    ageMonths = ageMonths + 12

if birthYear &lt; 2016:
    ageDays = ageDays + 1
    if birthYear &lt; 2012:
        ageDays = ageDays + 1
        if birthYear &lt; 2008:
            ageDays = ageDays + 1
            if birthYear &lt; 2004:
                ageDays = ageDays + 1
                if birthYear &lt; 2000:
                    ageDays = ageDays + 1
                    if birthYear &lt; 1996:
                        ageDays = ageDays + 1

print('You are: ', ageYears, ' years, ', ageMonths, ' months, ', ageDays, ' 
days.')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Leap years are defined as being divisible:</p>
<ul>
<li>by 4 but not 100</li>
<li>by 400</li>
</ul>
<p>Using <code>list</code> comprehension and <code>range</code> you can get number of leap years between given years following way:</p>
<pre><code>start_year = 1998 #inclusive
end_year = 2019 #exclusive
leaps =  [i for i in list(range(start_year,end_year)) if (i%4==0 and i%100!=0) or i%400==0]
print(leaps)
</code></pre>
<p>output:</p>
<pre><code>[2000, 2004, 2008, 2012, 2016]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Without using the said modules, assuming you are doing it for excercise sake, use integer division:</p>
<pre><code>ageDays = ageDays + (2019-birthYear) // 4
</code></pre>
<p>Example:</p>
<pre><code>(2019 - 2016) // 4
&gt;&gt; 0
(2019 - 2015) // 4
&gt;&gt; 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this code:</p>
<pre><code># import date to get current year
from datetime import date
# Get current year
current_year = date.today().year
    # your code here...
    # ...
    # loop from birthYear to current year
    for y in range(birthYear, current_year+1, 1):
        # check if leap year
        if y in range(0, date.today().year, 4):
            ageDays = ageDays + 1
</code></pre>
<p>Hope it helps!</p>
</div>
<span class="comment-copy">Take a look at <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer"><code>datetime</code></a> and <a href="https://docs.python.org/3.7/library/calendar.html" rel="nofollow noreferrer"><code>calendar</code></a>.</span>
<span class="comment-copy">A much shorter way, using the <code>datetime</code> module</span>
<span class="comment-copy">You could use a loop &amp; a list of the years in question.</span>
<span class="comment-copy">Python's modules are cool and all, but maybe it would be cooler to explain the user how to do it without them and then talking to him about their usage</span>
<span class="comment-copy">If you want to avoid the built-in stuff, a better way to write the leap-year calculations would be to use an algorithm. Your approach above won't incorporate any leap years from 1992 or earlier. Here are a few pages to get you headed in the right direction. <a href="https://www.cse.unsw.edu.au/~cs1511/17s2/week02/09_leapYear/" rel="nofollow noreferrer">cse.unsw.edu.au/~cs1511/17s2/week02/09_leapYear</a> and <a href="https://stackoverflow.com/questions/725098/leap-year-calculation">stackoverflow.com/questions/725098/leap-year-calculation</a></span>
<span class="comment-copy">Your answer does answer my question, but how can I use it to change the output?</span>
<span class="comment-copy">In my example <code>leaps</code> is list of years, you can get number of years as <code>nleaps = len(leaps)</code> and add that value to your <code>ageDays</code>.</span>
<span class="comment-copy">Thanks for your answer - it has helped me so much.</span>
<span class="comment-copy">This is wrong for a number of reasons. 1. It doesn't account for years divisible by 100 (except divisible by 400) not being leap years. 2. It doesn't account for <i>when</i> in the year someone was born (or when in the current year it is if this year is a leap year).  Someone born in March of a leap year should not have an extra day added, but someone born in January should.</span>
<span class="comment-copy">You are right, that is why I assumed an exercise (otherwise why would you not use <code>datetime</code>??): all I gave was the step to simplify OPs sequence of <code>if</code>s</span>
