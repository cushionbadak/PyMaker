<div class="post-text" itemprop="text">
<p>I am writing a program to walk the filesystem to collect file information to put into a database.  I am trying to learn python after a lifetime of shell scripting, and am seeing an issue between what find returns and what <code>os.walk</code> returns</p>
<pre><code>find THIS_PATH -print

for dirpath, dirs, files in os.walk( THIS_PATH ):
    print ( root )
    for fname in files:
        print ( os.path.join( root, fname ) )
</code></pre>
<p>The issue I have is that the "OS" <code>find</code> returns symlinks to directories, but the python find does not, and I have no idea how to make it do that.  Now I don't want it to follow them (i.e. <code>followlinks=True</code>) and that would create a different result from find as well.  But I want to be able to print the entries that are symlinks to directories.</p>
<p>thanks
c</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to get same output (sorting may vary), you need to print both directories and files for given path. <code>find</code> returns directories as well as links (to anything). Minimal change to you code would be:</p>
<pre><code>print(THIS_PATH)
for dirpath, dirs, files in os.walk(THIS_PATH):
    for fname in dirs + files:  # iterate over items form both lists
        print (os.path.join(dirpath, fname))
</code></pre>
<p>This may be a bit easier to do with <a href="https://docs.python.org/3/library/pathlib.html#module-pathlib" rel="nofollow noreferrer"><code>pathlib</code></a>:</p>
<pre><code>from pathlib import Path
mypath = Path(THIS_PATH)
for found_item in mypath.rglob('*'):
    print(mypath.joinpath(found_item))
</code></pre>
<p>For instance I've created the following tree:</p>
<pre><code>.
├── d1
│   ├── d2
│   │   └── f2
│   └── f1
├── f2 -&gt; d1/d2/f2
└── l1 -&gt; d1
</code></pre>
<p>Running <code>find</code> will yield (note directories and links to directories appear the same way):</p>
<pre><code>$ find .
.
./f2
./l1
./d1
./d1/.h
./d1/d2
./d1/d2/f2
./d1/f1
</code></pre>
<p>And running the first snippet with <code>THIS_PATH='.'</code> yields the same items (in slightly different order, <code>find</code> would default to depth first, <code>os.walk</code> does breadth first). For that <code>pathlib</code> example just be ware if <code>THIS_PATH</code> is <code>'.'</code>, as is it would chomp the leading <code>./</code> off.</p>
</div>
<span class="comment-copy">tks for taking the time man.</span>
