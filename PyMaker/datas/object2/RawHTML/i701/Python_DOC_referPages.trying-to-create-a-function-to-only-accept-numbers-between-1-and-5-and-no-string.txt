<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/23294658/asking-the-user-for-input-until-they-give-a-valid-response">Asking the user for input until they give a valid response</a>
<span class="question-originals-answer-count">
                    17 answers
                </span>
</li>
</ul>
</div>
<p>I'm creating a function that receives a number between 1 and 5 (likert scale), from a question. When the user inputs a wrong INT my loop is ok, the question repeats. But i want the question to repeat if the user inputs a string too. But in that case the program crashes "ValueError: invalid literal for int() with base 10" </p>
<pre><code>def likert(msg):


    while True:
        L = int(input(msg))

        if 1 &lt;= L &lt;= 5 and type(L) == int:
            return L
        elif L &lt; 1 or L &gt; 5:
            print('\033[031mError  [1 to 5] only\033[m')
            continue
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>int()</code> always returns an integer, so <code>type(L) == int</code> will always be true. If the user types something that isn't a valid integer, <code>int()</code> will signal an error.</p>
<p>Use <code>try/except</code> to handle the error if the user enters something that isn't an integer.</p>
<pre><code>def likert(msg):
    while True:
        try:
            L = int(input(msg))
        except ValueError:
            print('\033[031mError  [1 to 5] only\033[m')
            continue

        if 1 &lt;= L &lt;= 5:
            return L
        else:
            print('\033[031mError  [1 to 5] only\033[m')
</code></pre>
<p>You don't need <code>elif</code>, since the condition is just the opposite of the <code>if</code> condition; use <code>else</code>. You also don't need <code>continue</code>, since it's at the end of the loop and it's just going to continue anyway.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of trying to abstract the input as <code>int</code> right off the bat, do this instead:</p>
<pre><code>def likert():

    while True:
        L = input()

        if L.isalpha:
            #if input is string
            print('\033[031mError  [1 to 5] only\033[m')
            continue
        elif L.isdigit:
            #if input is int
            if 1 &lt;= L &lt;= 5:
                #if input is within range
                return L
            else:
                #if input is out of range
                print('\033[031mError  [1 to 5] only\033[m')
                continue
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You cast L to int before checking its type. So when L is a string, your program tries to cast it to int and it crashes. You should do numerical operations only when you are sure that L is not a string. The solution is either to use try and catch or to handle it with an if statement.</p>
</div>
<span class="comment-copy">Use a <code>try: ... except ValueError: ...</code> to catch the exception and handle it.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">Handling Execptions</a></span>
<span class="comment-copy">Thanks !  i'm watching youtube Tutorials , and none of them got to this part (try/except) yet , but it really helped!</span>
<span class="comment-copy">It's a relatively advanced topic, you're not likely to see it in beginner tutorials.</span>
