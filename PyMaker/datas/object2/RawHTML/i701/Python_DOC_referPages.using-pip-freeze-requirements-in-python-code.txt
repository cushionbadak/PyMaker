<div class="post-text" itemprop="text">
<p>I found how to use pip command in code:</p>
<pre><code>import subprocess
subprocess.call(["pip", "freeze"])
</code></pre>
<p>It displays all packages in command prompt.</p>
<p>But it doesn't work this way:</p>
<pre><code>import subprocess
subprocess.call(["pip", "freeze", "&gt;", "requirements.txt"])
</code></pre>
<p>It doesn't writes it to file, it prints in console again.</p>
<p><strong>How to run this command in the right way?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>Redirection is implemented in the shell/terminal, that means the command must be executed in the shell using <code>shell=True</code> keyword argument. Otherwise subprocess executes the first item in the list and uses the rest as arguments to it. See the <a href="https://docs.python.org/3/library/subprocess.html#frequently-used-arguments" rel="nofollow noreferrer">documentation</a> for subprocess for more information.</p>
<pre><code>subprocess.call("pip freeze &gt; requirements.txt", shell=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use this:</p>
<pre><code>&gt;&gt;&gt; with open('requirements.txt', 'w') as file_:
...   subprocess.Popen(['pip', 'freeze'], stdout=file_).communicate()
...
</code></pre>
<p>or, <code>call</code> if you prefer that</p>
<pre><code>&gt;&gt;&gt; with open('requirements.txt', 'w') as file_:
    ...   subprocess.call(['pip', 'freeze'], stdout=file_)
</code></pre>
</div>
<span class="comment-copy">If you used wait rather than communicate, it would be the same as using call.</span>
<span class="comment-copy">@DanD. I did not understand this. Can you elaborate more on this comment?</span>
<span class="comment-copy">I mean <code>Popen(cmd).wait()</code> is the same as <code>call(cmd)</code>.</span>
