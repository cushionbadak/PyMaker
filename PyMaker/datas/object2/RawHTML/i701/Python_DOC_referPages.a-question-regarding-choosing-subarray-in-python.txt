<div class="post-text" itemprop="text">
<p>In the following code in python:</p>
<pre><code>import numpy as np
a =  np.random.normal(2, 0.1, 10)
c = [0,1,2,3,4,5,6,7,8,9]
b = [2,4]
print(a[b])
print(c[b])
</code></pre>
<p>Why print(a[b]) can be executed but an error message is shown for print(c[b])?</p>
</div>
<div class="post-text" itemprop="text">
<p>This type of indexing only works for <code>numpy.ndarray</code> and <code>c</code> is just a python <code>list</code> so you can't index it like <code>numpy.ndarray</code>. You can convert it to numpy array first then use your indexing.</p>
<pre><code>c = np.array(c)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In python, list accepts integer based index.</p>
<p>To execute</p>
<pre><code>## Replace print(c[b]) with following line
print(c[b[0]:b[1])
</code></pre>
<p>Output of the above code</p>
<pre><code>[2, 3]
</code></pre>
<p>The C list is being iterated from index 2 to index 3. As python iterated upto end-1 index.</p>
<p>E.g c[2:4] only index 2 and index 3 will be considered.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you use bracket on an object like this:</p>
<pre><code>a[b]
</code></pre>
<p>You are calling the function <code>__getitem__</code> of the class of the object a with b as the argument. See <a href="https://docs.python.org/3/reference/datamodel.html#object.__getitem__" rel="nofollow noreferrer">this</a> for more detailed of the function.</p>
<p>Now if <code>a[b]</code> does not show an error while <code>c[b]</code> raises one this means that the implementation of the method <code>__getitem__</code> for the class of <code>a</code> is handling the type of <code>b</code> and the implementation of this method for the class of <code>c</code> does not. This behaviour is exactly the same for every functions, the call is just a bit hidden.</p>
</div>
<span class="comment-copy">Because <code>a</code> is a numpy array and <code>c</code> is a list.</span>
<span class="comment-copy">Because a is a numpy-array and c is not. Numpy arrays implement such a feature, lists do not.</span>
