<div class="post-text" itemprop="text">
<p>I want to count the histogram for a property value(depth here) of 3 different samples with 1 dictionary.</p>
<pre class="lang-py prettyprint-override"><code>SamplesList = ('Sa','Sb','Sc')
from collections import defaultdict
DepthCnt = dict.fromkeys(SamplesList, defaultdict(int))
</code></pre>
<p>This code will make DepthCnt contains 3 <code>defaultdict(int)</code> of the same one, thus I cannot count different samples.</p>
<p>How can I do it right ?</p>
<p>It is OK to use either <code>DepthCnt[sample][depth]</code> or <code>DepthCnt[depth][sample]</code>.</p>
<hr/>
<p>I tested these 3 ways:</p>
<pre class="lang-py prettyprint-override"><code>from collections import defaultdict
DepthCnt = {key:defaultdict(int) for key in SamplesList}
yDepthCnt = defaultdict(lambda: defaultdict(int))

from collections import Counter
cDepthCnt = {key:Counter() for key in SamplesList}
</code></pre>
<p>The memory size are:</p>
<pre><code> DepthCnt[sample][depth]:  993487
yDepthCnt[depth][sample]: 1953307
cDepthCnt[sample][depth]:  994207
</code></pre>
<p>It seems good to change to <code>Counter()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like you're trying to count occurences of <code>sammples</code> in <code>SamplesList</code>. If so you're looking for a <a href="https://docs.python.org/2/library/collections.html#counter-objects" rel="nofollow noreferrer">collections.Counter</a></p>
<p><strong>Given:</strong></p>
<pre><code>SamplesList = ('Sa','Sb','Sc')
</code></pre>
<p><strong>Counter:</strong></p>
<pre><code>from collections import Counter
DepthCnt = Counter(SamplesList)
print(DepthCnt)
#Counter({'Sc': 1, 'Sa': 1, 'Sb': 1})
</code></pre>
<p><strong>Edit:</strong></p>
<p>You can always use a counter instead of a defaultdict as well</p>
<pre><code>DepthCnt = {key:Counter() for key in SamplesList}
print(DepthCnt)
#DepthCnt = {'Sa': Counter(), 'Sb': Counter(), 'Sc': Counter()}
</code></pre>
<p><strong>P.S</strong></p>
<p>If you're working over a large dataset as well take a look into the Counter class both Counter and defaultdict are similar below is the TLDR from <a href="https://stackoverflow.com/a/19883180/225020">this great answer</a> to a question on <a href="https://stackoverflow.com/questions/19883015/python-collections-counter-vs-defaultdictint"><code>Collections.Counter</code> vs <code>defaultdict(int)</code></a></p>
<blockquote>
<ul>
<li><p>Counter supports most of the operations you can do on a multiset. So,
  if you want to use those operation then go for Counter.</p></li>
<li><p>Counter won't add new keys to the dict when you query for missing
  keys. So, if your queries include keys that may not be present in the
  dict then better use Counter.</p></li>
<li>Counter also has a method called most_common that allows you to sort items by their count. To get the same thing in defaultdict you'll have to use sorted.</li>
</ul>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/reference/expressions.html#displays-for-lists-sets-and-dictionaries" rel="nofollow noreferrer">dictionary expression/comprehension/display</a></p>
<pre><code>DepthCnt = {key:defaultdict(int) for key in SamplesList}
</code></pre>
</div>
<span class="comment-copy">Your question is not clear as to what you wish to accomplish. What is the result that you want?</span>
<span class="comment-copy">If you're counting things, consider using <code>collections.Counter</code>.</span>
<span class="comment-copy">I need <code>DepthCnt['Sa']</code> and <code>DepthCnt['Sb']</code> point to different dict.</span>
<span class="comment-copy">I saw after you edited. No problem</span>
<span class="comment-copy">About <code>Counter</code>, will it store all items in memory, or just store a histogram ? I have a huge file to count.</span>
<span class="comment-copy">Counter will hold one value for every duplicate item in memory, and the number of occurences for each item</span>
<span class="comment-copy">@Galaxysee my edit</span>
