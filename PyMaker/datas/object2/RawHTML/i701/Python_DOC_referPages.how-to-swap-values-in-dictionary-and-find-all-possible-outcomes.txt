<div class="post-text" itemprop="text">
<p>I have the following dictionary:</p>
<pre><code>d = {
     'A': 50, 
     'B': 30, 
     'C': 20
      }
</code></pre>
<p>Is it possible to find and print all iterations of this dictionary based only on <strong>swapping the values</strong>? </p>
<p>E.g.</p>
<pre><code># First iteration
d = {'A': 50, 'B': 30, 'C': 20}

# Second iteration
d = {'A': 50, 'B': 20, 'C': 30}

# Third iteration
d = {'A': 30, 'B': 50, 'C': 20}

...
</code></pre>
<p>The values are unique and the order of swapping the values does not matter as long as all possible iterations are found.</p>
</div>
<div class="post-text" itemprop="text">
<p>We can obtain possible permutations using <a href="https://docs.python.org/2/library/itertools.html" rel="nofollow noreferrer"><code>itertools</code> library</a> from stdlib</p>
<pre><code>&gt;&gt;&gt; from itertools import permutations
&gt;&gt;&gt; d = {
     'A': 50, 
     'B': 30, 
     'C': 20
      }
&gt;&gt;&gt; [dict(zip(d.keys(), values)) for values in permutations(d.values())]
[{'A': 50, 'B': 30, 'C': 20},
 {'A': 20, 'B': 30, 'C': 50},
 {'A': 30, 'B': 50, 'C': 20},
 {'A': 20, 'B': 50, 'C': 30},
 {'A': 30, 'B': 20, 'C': 50},
 {'A': 50, 'B': 20, 'C': 30}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.permutations" rel="nofollow noreferrer"><code>itertools.permutations</code></a>:</p>
<pre><code>from itertools import permutations

d = {
     'A': 50, 
     'B': 30, 
     'C': 20
      }

vals = d.values()    
for x in permutations(vals, len(vals)):
    x = iter(x)
    print({k: next(x) for k in d})

# {'A': 50, 'B': 30, 'C': 20}
# {'A': 50, 'B': 20, 'C': 30}                                  
# {'A': 30, 'B': 50, 'C': 20}                                 
# {'A': 30, 'B': 20, 'C': 50}                                
# {'A': 20, 'B': 50, 'C': 30}                               
# {'A': 20, 'B': 30, 'C': 50}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I don't know of any direct way to do this but you can make a permutation of the keys themselves (i.e "abc", "acb", "bac", "bca" etc') and use that to get the permutated values to your set.</p>
<p>for example with the permutated key set 'bca':
key "a" gets the content of original dictionary "b".
key "b" gets the content of original dictionary "c".
key "c" gets the content of original dictionary "a".</p>
<p>and I'd get the permutated keyset from this question:
<a href="https://stackoverflow.com/questions/8306654/finding-all-possible-permutations-of-a-given-string-in-python">Finding all possible permutations of a given string in python</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can using permutation in <code>itertools</code>:</p>
<pre><code>import itertools
[dict(zip(d.keys(), l)) for l in itertools.permutations(d.values())]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you make a set with the keys and values you can use the itertools module, the combinations() function. From the result you eliminate the pairs with only keys. </p>
<p>here are details: <a href="https://docs.python.org/2/library/itertools.html#itertools.combinations" rel="nofollow noreferrer">https://docs.python.org/2/library/itertools.html#itertools.combinations</a></p>
</div>
<span class="comment-copy">@AzatIbrakov - All values are unique, I forgot to include that.</span>
<span class="comment-copy">this doesn't help, can you list all possible "swappings" for case with at least 2 elements?</span>
