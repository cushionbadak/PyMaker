<div class="post-text" itemprop="text">
<p>I have several rows of text. The first row is a header row, and each subsequent line represents the fields of data, each value is separated with a comma. Within each line are one to three dollar values, ranging from single digit dollar values ($4.50) to triple digit ($100,000.34). They are also surrounded by quotes. </p>
<p><code>206360941,5465685679,"$4,073.77",567845676547,"$88,457.21",34589309683</code></p>
<p>I need to eliminate the quotations and dollar sign for the money values, as well as the comma inside. The period separator for the decimal value needs to stay, so "$6,801.56" becomes 6801.56</p>
<p>I've used regex to eliminate the dollar sign as well as quotations--</p>
<pre><code>with open("datafile.csv", "r") as file:
    data = file.readlines()

for i in data:
    i = re.sub('[$"]', '', i)
</code></pre>
<p>which then makes the data look like <code>7545245,6,801.56,3545647</code>
so if I split by a comma, it cuts larger values in two.</p>
<p><code>['206360941,5465685679,4,073.77,567845676547,88,457.21,34589309683']</code></p>
<p>I thought about splitting by quotations, doing some more regex and rejoining with .join() but it turns out that only the currency values with a comma contain quotations, the smaller values with no comma do not. </p>
<p>Also, I know I can use <code>re.findall(r'\$\d{1,3}\,\d\d\d\.\d\d', i)</code> to draw out the number format, if I print it, it will output a list like <code>[$100,351.35]</code></p>
<p>I am just not sure what to do with it after that. </p>
</div>
<div class="post-text" itemprop="text">
<p>This seems to work:</p>
<pre><code>&gt;&gt;&gt; data = '206360941,5465685679,"$4,073.77",567845676547,"$88,457.21",34589309683'
&gt;&gt;&gt; re.findall(r'"\$((\d+),)*(\d+)(\.\d+)"', data)
[('4,', '4', '073', '.77'), ('88,', '88', '457', '.21')]
&gt;&gt;&gt; re.sub(r'"\$((\d+),)*(\d+)(\.\d+)"', r'\2\3\4', data)
'206360941,5465685679,4073.77,567845676547,88457.21,34589309683'
</code></pre>
<p>The idea is to grab the data before and after the decimal point, keeping the latter as well. Then, given that the first group is identical to the second one, just replace with the contents of all groups except the first one. If there are more than one comma, you'll probably need a more dynamic approach.</p>
<p>That's why you need this <code>((\d+),)*</code> group, which captures a subgroup and the comma. You should replace this whole group with the subgroup.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd recommend using <a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow noreferrer"><code>csv.reader</code></a> (or <code>csv.DictReader</code> if you want to do other processing on each column) to read the file as this will parse each column automatically. Once you read the file, you can do your regex on each column so no need to split the line yourself. The default <code>delimiter</code> and <code>quotechar</code> for <code>csv.reader</code> is as you would need, I believe.</p>
</div>
<div class="post-text" itemprop="text">
<p>Did you try the module <code>locale</code>? As in <a href="https://stackoverflow.com/questions/1779288/how-do-i-use-python-to-convert-a-string-to-a-number-if-it-has-commas-in-it-as-th">How do I use Python to convert a string to a number if it has commas in it as thousands separators?</a>
It'll be easier than regex.</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all you could go about deleting all commas that are inside of quotes.</p>
<p>Pseudo code might look like:</p>
<pre><code>s = Your String
insideQuotes = false;
charIndex = 0;
while (c = nextChar() != null){
    if(c == "\""){
        insideQuotes = !insideQuotes;
    }else if(insideQuotes &amp;&amp; c == ","){
        s.removeAt(charIndex, "");
        charIndex--;
    }
}
</code></pre>
<p>Now that there are no more commas inside the quotes, you only need to remove the dollar signs and the quotes themselves!</p>
<p>Hope it helps!</p>
</div>
<span class="comment-copy">Looks like this is the ticket. Thank you.</span>
<span class="comment-copy">I thought about doing it this way. This may have been a better approach. I'll take some time to play around with it, I could use the practice.</span>
