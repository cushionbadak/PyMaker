<div class="post-text" itemprop="text">
<p>Consider the following <code>Path</code>:</p>
<pre><code>import pathlib
path = pathlib.Path(r'C:\users\user1\documents\importantdocuments')
</code></pre>
<p>How can I extract the exact string 'documents\importantdocuments' from that <code>Path</code>?</p>
<p>I know this example looks silly, the real context here is translating a local file to a remote download link.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.relative_to" rel="nofollow noreferrer"><code>PurePath.relative_to()</code> method</a> to produce a relative path.</p>
<p>You weren't very clear as to how the base path is determined; here are two options:</p>
<pre><code>secondparent = path.parent.parent
homedir = pathlib.Path(r'C:\users\user1')
</code></pre>
<p>then just use <code>str()</code> on the <code>path.relative_to(secondparent)</code> or <code>path.relative_to(homedir)</code> result.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import pathlib
&gt;&gt;&gt; path = pathlib.Path(r'C:\users\user1\documents\importantdocuments')
&gt;&gt;&gt; secondparent = path.parent.parent
&gt;&gt;&gt; homedir = pathlib.Path(r'C:\users\user1')
&gt;&gt;&gt; str(path.relative_to(secondparent))
'documents\\importantdocuments'
&gt;&gt;&gt; str(path.relative_to(homedir))
'documents\\importantdocuments'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can make use of <a href="https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.parts" rel="nofollow noreferrer">.parts</a>:</p>
<pre><code>import pathlib
path = pathlib.PureWindowsPath(r'C:\users\user1\documents\importantdocuments')
print ('/'.join(path.parts[-2:]))
</code></pre>
<p>Prints:</p>
<pre><code>'documents/importantdocuments'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This works on any OS and every version of Python:</p>
<pre><code>import os
os.path.join(os.path.basename(os.path.dirname(p)),os.path.basename(p))
</code></pre>
<p>This works on python 3:</p>
<pre><code>str(p.relative_to(p.parent.parent))
</code></pre>
</div>
<span class="comment-copy">So you want it relative to the second parent directory? Or a hardcoded path?</span>
<span class="comment-copy">@MartijnPieters I want the string <code>documents\importantdocuments</code></span>
<span class="comment-copy">I know that. But <b>why that section of your path</b>? Is it because those are the last two parts of the path? Or do you have <code>Path(r'C:\users\user1')</code> somewhere else and that's the reference path?</span>
<span class="comment-copy">@MartijnPieters because I need the parent folder relative path</span>
<span class="comment-copy">This isn't Windows friendly.</span>
<span class="comment-copy">@Benoît Pilatte: What do you mean ?</span>
<span class="comment-copy">The path needs to accommodate for different OS. <code>documents/importantdocuments</code> is not a valid Windows path because windows uses `\` as a separator. Using your own way of joining pathes isn't a good idea.</span>
<span class="comment-copy">@Benoît Pilatte: Within Python you can use forward and backward slashes (but not mix them). Personally, I prefer always to use forward slashes to make code running on all operation systems :)</span>
<span class="comment-copy">Yeah but he said "I want the string <code>documents\importantdocuments</code>"</span>
