<div class="post-text" itemprop="text">
<p>I have a dictionary that contains multiple keys and values, one of which contains a list of more dictionaries. I need to be able to find if a given value exists within those dictionaries, but I'm unsure how to check against them when they exist not only within a list, but within an object property.</p>
<p>While a for loop check could accomplish this, the property could end up holding hundreds of values, which would make this approach inefficient. </p>
<p>I've also tried variations of:
<code>if &lt;value&gt; in &lt;dict&gt;[&lt;list&gt;][&lt;dict2&gt;]</code></p>
<p>But, I keep getting TypeErrors that list indices must be an integer or slice (The values are strings).</p>
<p>An example of the code would be:</p>
<pre><code>dictExample = {
"name": "yes",
"age": 25,
"Check_Me": [
    {"type": "code", "value": "001"},
    {"type": "code", "value": "002"},
    {"type": "code", "value": "003"},
    {"type": "code", "value": "004"},
    {"type": "code", "value": "005"}
    ],
}

if "007" not in dictExample["Check_Me"]["value"]:
    print("It works!")
else:
    print("Failure...")
</code></pre>
<p>(I cannot upload the actual code, but this is roughly what I am facing.)</p>
<p>Expected output would be that the code runs without errors, and is successfully able to find if the value is in the nested dictionary or not.</p>
</div>
<div class="post-text" itemprop="text">
<p>One example is to use the inbuilt <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">any</a> function which short circuits when the first match is found. However there are several options  </p>
<pre><code>if not any("007" in x["value"] for x in dictExample["Check_Me"]):
    print("It works!")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>dictExample = {
"name": "yes",
"age": 25,
"Check_Me": [
    {"type": "code", "value": "001"},
    {"type": "code", "value": "002"},
    {"type": "code", "value": "003"},
    {"type": "code", "value": "004"},
    {"type": "code", "value": "005"}
    ],
}
if "007" not in [d['value'] for d in dictExample['Check_Me']]:
    print("It works!")
else:
    print("Failure...")
</code></pre>
<ul>
<li>Just iterate over <code>Check_Me</code> and get all the values of key <code>'value'</code> from dictionary.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You may need recursion:</p>
<pre><code>def val_in_dict(my_val, the_dict):
    for value in the_dict.values():
        if my_val == value:
            return True
        elif isinstance(value, list):
            for element in value:
                if isinstance(element, dict) and val_in_dict(my_val, element):
                    return True
    return False
if val_in_dict("007", d):
    print("It works")
</code></pre>
<p>You may also want to change a line up there to <code>isinstance(value, (list, tuple))</code> or something more complicated. Using recursion allows you to be more flexible on how deep your data hierarchy can go.</p>
</div>
