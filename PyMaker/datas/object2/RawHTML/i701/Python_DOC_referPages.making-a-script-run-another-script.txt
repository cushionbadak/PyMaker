<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/89228/calling-an-external-command-in-python">Calling an external command in Python</a>
<span class="question-originals-answer-count">
                    56 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to make a game, I have made a basic launcher. This is just another version of it. I made it in python 3.</p>
<p>I have tried watching YouTube videos on how to do it but they are all using python 2. I still tried it, it didn't work.</p>
<pre><code>import os
print ("**Test Starting**")
print ("")
import time
time.sleep (0.75)
COMMAND = "SCRIPT_TWO.py"
os.system(COMMAND)
</code></pre>
<p><code>SCRIPT_TWO.py</code></p>
<pre><code>print ("Hello, it worked")
</code></pre>
<p>I still want it to launch the other script but also transfer the variables. I want it to be as simple as possible.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're sure you don't want to import the first file from the second then the below answer is for you.</p>
<p><code>os.system(args)</code> is a relatively simple function and does not allow passing of arguments. I suggest you take a look at <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer"><strong><code>subprocess.run(...)</code></strong></a>. It allows you to pass arguments as a list which you can then access through the second script as normal command line arguments.</p>
<p>For example:</p>
<p><strong>script1.py</strong></p>
<pre class="lang-py prettyprint-override"><code>import subprocess

subprocess.run(["python", "script2.py", "var1", "var2"])
</code></pre>
<p><strong>script2.py</strong></p>
<pre class="lang-py prettyprint-override"><code>import sys

print(sys.argv) # prints ['script2.py', 'var1', 'var2']
</code></pre>
<p>In this way the subprocess module is very helpful, I suggest you take a look at its documentation <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">here</a>.</p>
</div>
<span class="comment-copy">you can use <a href="https://docs.python.org/3.7/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code></a> module in python to execute another python script. However, you do not know yet that <i>you don't want to do that.</i> You should instead be looking at importing 1 python script from another, and doing your work in 1 main script with function calls to other scripts. This sounds like an <a href="https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY Problem</a>. Are you familiar with something like <code>import script_two</code>  for example?</span>
<span class="comment-copy">No i am not, i can look up on it. I have tried this:                  import subprocess                                                                                      subprocess.call("SCRIPT_TWO.py")</span>
<span class="comment-copy">@Jared i would very highly recommend completely staying away from subprocess or anything os related for now. you may need to slightly restructure your code but <code>import</code> should be the way to go.</span>
<span class="comment-copy">"it didn't work" is not a precise enough error description for us to help you. <i>What</i> doesn't work? <i>How</i> doesn't it work? What trouble do you have with your code? Do you get an error message? What is the error message? Is the result you are getting not the result you are expecting? What result do you expect and why, what is the result you are getting and how do the two differ? Is the behavior you are observing not the desired behavior? What is the desired behavior and why, what is the observed behavior, and in what way do they differ?</span>
