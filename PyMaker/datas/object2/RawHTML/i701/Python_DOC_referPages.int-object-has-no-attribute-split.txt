<div class="post-text" itemprop="text">
<p>I'm doing the merge sort in python but I have a problem. When I try to split data by delimiter (one number per line which return a list of string) I cannot convert it in integers. Can you help me understanding the problem. 
I try to convert data csv file from horizontal data format to vertical data from to implement eclat algorithm. can anybody help me?</p>
<pre><code>from sys import argv
import sys
from itertools import chain, combinations
import pandas as pd

data = pd.read_csv(r'2010.csv',engine='python', header=None)

def Read_Data(filename):
    data = {}
    trans = 0

    for row in filename:
        trans += 1
        for item in row.split(','):
            if item not in data:
                data[item] = set()
            data[item].add(trans)

    return data

item = Read_Data(data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do a <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow noreferrer">type()</a> check before your second loop to make sure you're on'y splitting on a <code>str</code>. Also you can use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> instead of using <code>trans</code> variable. Also a <a href="https://docs.python.org/2/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">defaultdict</a> would be better than having to make a set for every item. It will do that for you automatically.</p>
<pre><code>from collections import defaultdict

def Read_Data(filename):
    data = defaultdict(set)

    for trans, row in enumerate(filename):
        if isinstance(row, str):
            for item in row.split(','):
                data[item].add(trans)
        else:
            #something to this effect
            data['numbers'].add(trans)

    return data
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Documentation for <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_csv.html" rel="nofollow noreferrer">pandas.read_csv</a> states:</p>
<blockquote>
<p><strong>Returns</strong>: <code>DataFrame</code> or <code>TextParser</code></p>
</blockquote>
<p>So when you try: </p>
<pre><code>data = pd.read_csv(r'2010.csv',engine='python', header=None)
item = Read_Data(data)
</code></pre>
<p>Your inner loop does not iterates on <code>str</code>-ings:</p>
<pre><code>for row in filename: # filename is DataFrame or TextParser
    for item in row.split(','):  ## it's not a string. You can't split it
</code></pre>
<p>So you are incorrect in your expectation of existence of method <code>split</code></p>
</div>
<span class="comment-copy">Could you reformat this so the code is all readable, and ensure you've included all relevant code. Thanks!</span>
<span class="comment-copy">put <code>print (row, type(row))</code> after <code>for row in filename:</code> and you will solve the mystery</span>
<span class="comment-copy">@NineBerry I don't think so, <code>filename</code> is just a really bad variable name, look at the call <code>Read_Data(data)</code></span>
