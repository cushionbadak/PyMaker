<div class="post-text" itemprop="text">
<p>I am a beginner in python and working on a starter programming project where I want to:</p>
<p>Estimate the number of calories in one cubic mile of chocolate ice cream.
Note: There are 5,280 feet in a mile and one cubic foot of chocolate ice cream contains about 48,600 calories.</p>
<p>My code:</p>
<pre><code>Onemile = 5280
cubicmile = 5280**3
calories = 48,600
print("Number of calories per cubic mile:",cubicmile*calories)
</code></pre>
<p>Output: </p>
<pre><code>Traceback (most recent call last):

  File "&lt;ipython-input-100-90c2410fa01f&gt;", line 4, in &lt;module&gt;
    print("Number of calories per cubic mile:",cubicmile*calories)

MemoryError
</code></pre>
<p>Why does this happen? Is there an issue with the way I am framing the equation?</p>
</div>
<div class="post-text" itemprop="text">
<p>As noted, the problem is the line <code>calories = 48,600</code>.</p>
<p>The problem is that due to the <code>,</code> on the right side, this is the same as <code>calories = (48, 600)</code>, which is a <code>tuple</code>. And for tuples, multiplication means "repeat the tuple <code>n</code> times". So e.g. <code>2 * (48, 600) == (48, 600, 48, 600)</code>.</p>
<p>But since you do <code>5280**3 * calories</code>, this is trying to allocate a tuple with <code>2 * 5280**3 = 294395904000</code> elements, which seems to be too big to fit into your memory (assuming 64bits per value, this would be 2.14 TiB, which is larger than most peoples memory).</p>
<p>Note that in <a href="https://docs.python.org/3/whatsnew/3.6.html#pep-515-underscores-in-numeric-literals" rel="nofollow noreferrer">Python 3.6+</a> you can use <code>_</code> as a separator for thousands:</p>
<pre><code>calories = 48_600
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to print the tuple <code>(48, 600)</code> (that's what you get when you write <code>calories = 48,600</code>) <code>147197952000</code> times.</p>
<p>Your output <em>would</em> be:</p>
<pre><code>Number of calories per cubic mile: (48, 600, 48, 600, 48, 600, ... , 48, 600)
</code></pre>
<p>Your pc simply cannot handle the approx. <code>1324781568000</code> characters that you want to dump at once.</p>
<p>Instead of using <code>,</code> as a thousand separator, you should just write <code>48600</code>.</p>
<pre><code>Onemile = 5280
cubicmile = 5280**3
calories = 48600
print("Number of calories per cubic mile:",cubicmile*calories)
</code></pre>
<p>Output:</p>
<pre><code>Number of calories per cubic mile: 7153820467200000
</code></pre>
<p><strong>Edit:</strong></p>
<p>Actually, it's not the printing or the creating of such a large string that fails, because it seems - at least for me - that Python will run out of memory when attempting to create <code>147197952000</code> pointers to the tuple, which you can test by running only <code>(48,600) * 147197952000</code>.</p>
</div>
<span class="comment-copy">Note that using a comma is the problem; wouldn't have expected a memory error but you want to either calories = 48600</span>
<span class="comment-copy"><code>calories</code> is a tuple of <code>(48, 600)</code>, when you multiply a tuple you get the tuple repeated, i.e. <code>(48, 600, 48, 600, ...)</code> <code>5280**3</code> times - which runs out of memory.</span>
<span class="comment-copy">You can use <code>_</code> instead of the comma to separate thousands (for readability). <code>calories = 48_600</code></span>
