<div class="post-text" itemprop="text">
<p>How to escape a string so that it can be used in an XML attribute?</p>
<p>I am <em>not</em> setting the attribute programmatically from python code â€” I just need to create a valid string which can be used as an XML attribute. </p>
<p>I have tried:</p>
<pre class="lang-python prettyprint-override"><code>from xml.sax.saxutils import escape, quoteattr

print (escape('&lt;&amp;% "eggs and spam" &amp;&gt;'))
# &gt;&gt;&gt; &amp;lt;&amp;amp;% "eggs and spam" &amp;amp;&amp;gt;

print (quoteattr('&lt;&amp;% "eggs and spam" &amp;&gt;'))
# &gt;&gt;&gt; '&amp;lt;&amp;amp;% "eggs and spam" &amp;amp;&amp;gt;'
</code></pre>
<p>The problem is that both <code>escape()</code> and <code>quoteattr()</code> are not escaping the double quote character, i.e. <code>"</code>. </p>
<p>Of course, I can do a <code>.replace('"', '&amp;quot;')</code> on the escaped string, but I am assuming there should be a way to do it with the existing API (from the standard library or with third-party modules such as <code>lxml</code>).</p>
<p><strong><em>Update</em></strong>: I've found that Python3's <a href="https://docs.python.org/3/library/html.html#html.escape" rel="nofollow noreferrer"><code>html.escape</code></a> produces the expected result but I am reluctant to use it in an XML context since I'm assuming that HTML escaping might follow a different spec than what is required by the XML standard (<a href="https://www.w3.org/TR/xml/#AVNormalize" rel="nofollow noreferrer">https://www.w3.org/TR/xml/#AVNormalize</a>).</p>
</div>
<div class="post-text" itemprop="text">
<p>Shamelessly stolen from <code>tornado</code> (with a few modifications):</p>
<pre class="lang-py prettyprint-override"><code>import re
_XHTML_ESCAPE_RE = re.compile('[&amp;&lt;&gt;"\']')
_XHTML_ESCAPE_DICT = {'&amp;': '&amp;amp;', '&lt;': '&amp;lt;', '&gt;': '&amp;gt;', '"': '&amp;quot;',
                      '\'': '&amp;#39;'}

def xhtml_escape(value):
    """Escapes a string so it is valid within HTML or XML.

    Escapes the characters ``&lt;``, ``&gt;``, ``"``, ``'``, and ``&amp;``.
    When used in attribute values the escaped strings must be enclosed
    in quotes.

    .. versionchanged:: 3.2

       Added the single quote to the list of escaped characters.
    """
    return _XHTML_ESCAPE_RE.sub(lambda match: _XHTML_ESCAPE_DICT[match.group(0)],
                                value)
</code></pre>
</div>
<span class="comment-copy">I don't understand the question. Are you building XML by string concatenation?</span>
<span class="comment-copy">@Tomalak: yes, something like that; i need to process the 'raw' strings into a form that can be subsequently inserted into the XML in a <i>non-programatic</i> way.</span>
<span class="comment-copy">Building XML this way it's not a great idea at all, but if you positively have to do it, I'd still recommend tapping into an XML API. Using ElementTree or lxml, I'd create the simplest XML document with a single element (e.g. <code>&lt;root&gt;</code>), add an attribute through the API, serialize the document to string, and finally remove the <code>'&lt;root attr="'</code> and <code>'" /&gt;'</code> from the result. It would probably be 4 lines of code overall.</span>
