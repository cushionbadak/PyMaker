<div class="post-text" itemprop="text">
<p>I am cleaning up a column in a pandas dataframe getting rid of garbage usernames that contain certain characters.  Here is the example:</p>
<pre><code>d = {'username': ["11111", "222!22", "21212!", "85511$", "8552$", "115522@@"]}
df = pd.DataFrame(data=d)

    username
0   11111
1   222!22
2   21212!
3   85511$
4   8552$
5   115522@@
....
</code></pre>
<p>I am using the following and it is working as expected:</p>
<pre><code>df[~df['username'].str.contains('~|`|!|@|#|\$|%|\^|&amp;|\*|\(|\)|-|_|\+|=|{|\[|}|]|:|;|"|\'|&lt;|,|&gt;|\.|/|\?')]
</code></pre>
<p>But I would like to add two more characters:</p>
<p><code>\</code> and <code>|</code></p>
<p>When I try to add these like <code>\\</code> for <code>\</code> and <code>\|</code> for <code>|</code> but I receive errors. How should I go about this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try adding a <code>r</code> in front of the string so Python will interpret your string as raw:</p>
<pre><code>df[~df['username'].str.contains(r'~|`|!|@|#|\$|%|\^|&amp;|\*|\(|\)|-|_|\+|=|{|\[|}|]|:|;|"|\'|&lt;|,|&gt;|\.|/|\?')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can avoid manually specifying <code>|</code> conditions via <a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow noreferrer"><code>re.escape</code></a>:</p>
<pre><code>import re

chars = """~`!@#$%^&amp;*()-_+={[}]:;"'&lt;,&gt;./?\|"""
regex_search = '|'.join(map(re.escape, chars))

res = df[~df['username'].str.contains(regex_search)]
</code></pre>
<p>This use case is specifically mentioned in <a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow noreferrer">the docs</a>, which also advise: as of Python 3.7, only characters that can have special meaning in a regular expression are escaped.</p>
</div>
<span class="comment-copy">Try <code>\\\\</code> and <code>\\|</code> or  raw string as <code>r'~|`|!|@|#|\$|%_and_so_on'</code> (&lt;- <code>r</code> before opening quotations mark).</span>
<span class="comment-copy">This works. @Psytho</span>
<span class="comment-copy">This is what I was looking for.  Thank you @Marjan Moderc</span>
<span class="comment-copy">I like this a lot @jpp</span>
