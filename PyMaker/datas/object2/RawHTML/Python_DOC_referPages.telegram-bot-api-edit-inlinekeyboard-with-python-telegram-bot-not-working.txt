<div class="post-text" itemprop="text">
<p>I'm trying to create a menu where the user can navigate on it. This is my code:</p>
<pre><code>MENU, HELP = range(2)

def start(bot, update):
    keyboard = [
                 [InlineKeyboardButton('Help', callback_data='help')]
               ]

    # Create initial message:
    message = 'Welcome.'

    update.message.reply_text(message, reply_markup=InlineKeyboardMarkup(keyboard))

def help(bot, update):

    keyboard = [
                 [InlineKeyboardButton('Leave', callback_data='cancel')]
               ]


    update.callback_query.edit_message_reply_markup('Help ... help..', reply_markup=InlineKeyboardMarkup(keyboard))

def cancel(bot, update):

    update.message.reply_text('Bye.', reply_markup=ReplyKeyboardRemove())

    return ConversationHandler.END     


# Create the EventHandler and pass it your bot's token.
updater = Updater(token=config.TELEGRAM_API_TOKEN)

# Get the dispatcher to register handlers:
dispatcher = updater.dispatcher

dispatcher.add_handler(CommandHandler('start', start))
dispatcher.add_handler(CallbackQueryHandler(help, pattern='help'))
dispatcher.add_handler(CallbackQueryHandler(cancel, pattern='cancel'))

updater.start_polling()

updater.idle()
</code></pre>
<p>As expected, at the /start the user gets the menu 'Help'. When the user clicks on it, the function help() is triggered as expected as well. </p>
<p>Based on my understanding of the python-telegram-bot documentation is was supposed to have the <strong>update.callback_query.inline_message_id</strong> populated, but its value is <strong>None</strong>.</p>
<p>I need the <strong>update.callback_query.inline_message_id</strong> to update my InlineKeyboard menu, right ? Why is the inline_message_id empty (None) ?</p>
<pre><code>Python 3.6.7
python-telegram-bot==11.1.0
</code></pre>
<p>Best Regards.
Kleyson Rios.</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe there are 2 problems in your code. </p>
<p><strong>First</strong>. In your <code>help</code> function, you're trying to change both the <strong>text</strong> of the message and the <strong>markup</strong> of it. But the <code>edit_message_reply_markup</code> method <em>only changes the markup</em>. So instead of </p>
<pre><code>update.callback_query.edit_message_reply_markup(
    'Help ... help..',
    reply_markup=InlineKeyboardMarkup(keyboard)
)
</code></pre>
<p>Do this:</p>
<pre><code>bot.edit_message_text(
    text='Help ... help..',
    chat_id=update.callback_query.message.chat_id,
    message_id=update.callback_query.message.message_id,
    reply_markup=InlineKeyboardMarkup(keyboard)
)
bot.answer_callback_query(update.callback_query.id, text='')
</code></pre>
<p>Notice the changes:</p>
<ul>
<li>I replaced <code>update.callback_query</code> with <code>bot</code>.</li>
<li><strong>IMPORTANT</strong>: I replaced <code>edit_message_reply_markup</code> with <code>edit_message_text</code>; Because the first one <em>only changes the markup</em>, but the second one can do both.</li>
<li>I added <code>chat_id</code> and <code>message_id</code> arguments; Because <a href="https://python-telegram-bot.readthedocs.io/en/stable/telegram.message.html#telegram.Message.edit_text" rel="nofollow noreferrer">that's what it says in the documents</a>.</li>
<li><em>IMPORTANT</em>: I added a new method (<code>bot.answer_callback_query</code>); Because every time you handle a <em>callback query</em> you need to <em>answer</em> it (using this method). However, you can leave the <code>text</code> argument <em>empty</em>, so that it doesn't show anything.</li>
</ul>
<p><strong>Second</strong>. Correct me if I'm wrong, but I believe when the user presses the <code>cancel</code> button, you want the text of the message to be <em>changed</em> to "Bye." and <em>remove the keyboard</em>. If this is the case, what you're doing wrong is that you're sending a <em>new</em> message (<code>reply_text</code>) while trying to remove the keyboard (<code>reply_markup=ReplyKeyboardRemove()</code>). You can simply do it like this: </p>
<pre><code>bot.edit_message_text(
    text='Bye',
    chat_id=update.callback_query.message.chat_id,
    message_id=update.callback_query.message.message_id,
)
bot.answer_callback_query(update.callback_query.id, text='')
</code></pre>
<p>Here, the idea is that when you edit the <em>text</em> of the message and don't use a markup keyboard, the <em>previous</em> keyboard gets automatically <em>removed</em>, so you don't need to use <code>ReplyKeyboardRemove()</code>.</p>
<p>Here's a GIF (with a hard G) that it works! </p>
<p><a href="https://i.stack.imgur.com/c0wyM.gif" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/c0wyM.gif"/></a></p>
</div>
<span class="comment-copy">Thanks Amir. It worked like a charm :). This is my first time trying to write a telegram bot and all those details that you gave are what I miss on the telegram bot API.</span>
<span class="comment-copy">@KleysonRios You got it, glad to help ^_^</span>
