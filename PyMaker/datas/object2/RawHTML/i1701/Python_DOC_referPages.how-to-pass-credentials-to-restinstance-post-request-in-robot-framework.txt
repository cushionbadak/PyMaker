<div class="post-text" itemprop="text">
<p>Python Code (Working fine):</p>
<pre><code> credentials = ("key","token")
 verify = False
 if not verify:
     from requests.packages.urllib3.exceptions import InsecureRequestWarning  
     requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

response = requests.post(url, auth=credentials, data=json.dumps(payload), headers={'content-type': 'application/json'}, verify=verify)
status = response.status_code
</code></pre>
<p>Robot Framework Code:</p>
<p>I would like to duplicate same API testing in robot framework but i am stuck how to pass credentials to the RESTinstance POST method</p>
<pre><code>*** Settings ***
Library         REST    url=https://testhost.com   ssl_verify=${verify}

*** Variables ***
header = {"content-type": "application/json"}

*** Test Cases ***
Test Task
    POST     endpoint=/api/something   body=${payload}   headers=${header}
    Output   response status
</code></pre>
<p>ERROR RESPONSE STATUS - 401 </p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>auth</code> argument in requests <code>post()</code> method is just a shortcut to http basic authentication.<br/>
And it on the other hand is <a href="https://en.wikipedia.org/wiki/Basic_access_authentication" rel="nofollow noreferrer">a very simple (hence - basic) one</a> - a header with name "Authorization", with value "Basic <em>b64creds</em>", where <em>b64creds</em> is base64 encoded form of the "user:password" string.</p>
<p>So the flow is quite simple - encode the credentials, and add them as a header. There is only one caveat - python's <code>base64</code> <a href="https://docs.python.org/3/library/base64.html" rel="nofollow noreferrer">module works with bytes</a>, where the strings in Robotframework/python3 are unicode, so they have to be converted.</p>
<pre><code>${user}=    Set Variable    username
${pass}=    Set Variable    the_password

# this kyword is in the Strings library
${userpass}=    Convert To Bytes    ${user}:${pass}   # this is the combined string will be base64 encode
${userpass}=    Evaluate    base64.b64encode($userpass)    base64

# add the new Authorization header
Set To Dictionary    ${headers}    Authorization    Basic ${userpass}

# and send the request with the header in:
POST     endpoint=/api/something   body=${payload}   headers=${header}
</code></pre>
</div>
<span class="comment-copy">Wowww its working like a monster.. thanks a lot Todor..</span>
