<div class="post-text" itemprop="text">
<pre><code>#Takes user's email and stores it in a variable
userEmail = input("Please enter email: ").lower()
while '@' not in userEmail or '.com\' not in userEmail or userEmail == '':       #Checks if email has a valid format
     if (userEmail == ''):
         userEmail = input("Field is empty. Please enter an email address: ").lower().strip()
     else:
         userEmail = input("\nIncorrect format. Please re-enter email address: ").lower().strip()
</code></pre>
<p>So the code above is supposed to get an email address from a user and it error checks for if the user put in a <code>.com</code> and <code>@</code> when inputting. </p>
<p>However, when I run the code; if the user puts is <code>name@**@**gmail.com</code> or <code>name@gmail.com**m**</code> it takes it as the right format. </p>
<p>What is a way to limit the number of characters a user can input on after a certain character within a string? </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>What is a way to limit the number of characters a user can input on after a certain character within a string?</p>
</blockquote>
<p>To limit the number of characters after the <code>.</code> to, e.g., between 2 and 4, you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.rpartition" rel="nofollow noreferrer"><code>rpartition</code></a>:</p>
<pre><code>while True:
    email = input("Enter a valid email address: ").strip()

    if "@" in email:
        if 2 &lt;= len(email.rpartition(".")[-1]) &lt;= 4:
            # TLD length is acceptable; stop prompting
            break

print("You entered {e}.".format(e=email))
</code></pre>
<blockquote>
<p>...checks for if the user put in a <strong>'.com'</strong> and '@' when inputting.</p>
</blockquote>
<p>If these are your actual criteria:</p>
<pre><code>email = None

while ("@" not in email) or not email.endswith(".com"):
    email = input("Enter a valid email address: ").strip()

print("You entered {e}.".format(e=email))
</code></pre>
<p>This still doesn't come close to format-validating an email address, though. While that's not what you asked, if you're interested, various approaches are discussed in answers to <a href="https://stackoverflow.com/questions/8022530/python-check-for-valid-email-address">this question</a>.</p>
</div>
