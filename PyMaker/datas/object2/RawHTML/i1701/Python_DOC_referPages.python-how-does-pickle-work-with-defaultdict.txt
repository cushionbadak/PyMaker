<div class="post-text" itemprop="text">
<p>I am new to Python and am playing with Pickle and don't understand how this works</p>
<p>I define a defaultdict, write it to pickle. Then in a different script I read it and it still behaves like a defaultdict even without importing collections</p>
<p>script1:</p>
<pre><code>import pickle
from collections import defaultdict

x = defaultdict(list)

x['a'].append(1)
print(x)

with open('pick','wb') as f:
    pickle.dump( x, f )
</code></pre>
<p>script2:</p>
<pre><code>import pickle

with open('pick','rb') as f:
    x = pickle.load( f )

x['b'].append(2)
print(x)

y = dict()

try:
    y['b'].append(2)
    print(y)
except KeyError:
    print("Can't append to y")
</code></pre>
<p>running:</p>
<pre><code>$ python3 pick2.py
defaultdict(&lt;class 'list'&gt;, {'a': [1], 'b': [2]}) 
Can't append to y
</code></pre>
<p>So, the 2nd script doesn't import defaultdict but the pickled x still acts like one. I'm confused :)</p>
<p>How does this work in Python? Thanks for any info :)</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, if you look at the <a href="https://docs.python.org/3/library/pickle.html#relationship-to-other-python-modules" rel="nofollow noreferrer">pickle docs</a>, specifically:</p>
<blockquote>
<p>pickle can save and restore class instances transparently, however the class definition must be importable and live in the same module as when the object was stored</p>
</blockquote>
<p>So what this is telling us is that pickle will import the module that defines the object you are unpickling. </p>
<p>We can show this with a small example, consider the following folder structure:</p>
<pre><code>parent/
|-- a.py
|-- sub/
</code></pre>
<p><code>sub</code> is an empty sub-folder<br/>
<code>a.py</code> holds an example class</p>
<pre><code># a.py
class ExampleClass:
    def __init__(self):
        self.var = 'This is a string'
</code></pre>
<p>Now starting the <code>python</code> console in the <code>parent</code> directory:</p>
<pre><code>alex@toaster:parent$ python3
&gt;&gt;&gt; import pickle
&gt;&gt;&gt; from a import ExampleClass
&gt;&gt;&gt; x = ExampleClass()
&gt;&gt;&gt; x.var
'This is a string'
&gt;&gt;&gt; with open('eg.p', 'wb') as f:
...     pickle.dump(x, f)
</code></pre>
<p>Exit the shell. Move to the <code>sub</code> directory and try to load the pickled <code>ExampleClass</code> object.</p>
<pre><code>alex@toaster:sub$ python3
&gt;&gt;&gt; import pickle
&gt;&gt;&gt; with open('../eg.p', 'rb') as f:
...     x = pickle.load(f)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 2, in &lt;module&gt;
ModuleNotFoundError: No module named 'a'
</code></pre>
<p>We get a <code>ModuleNotFoundError</code> as pickle cannot load the class definition from the module <code>a</code> (it's in a different directory). In your case, python can load the <code>collections.defaultdict</code> class as this module is on the <code>PYTHONPATH</code>. However, to continue to use the module(s) imported by pickle you will still need to import them yourself; eg you want to create another <code>defaultdict</code> in <code>script2.py</code>.</p>
<p>To find out more about modules look <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">here</a>, specifically <a href="https://docs.python.org/3/tutorial/modules.html#the-module-search-path" rel="nofollow noreferrer">6.1.2 The Module Search Path</a>. </p>
</div>
<span class="comment-copy">Does anyone know? Thanks in advance</span>
<span class="comment-copy">thank you! Makes perfect sense. Pickle is a bit sneaky but thank you for explaining it :)</span>
