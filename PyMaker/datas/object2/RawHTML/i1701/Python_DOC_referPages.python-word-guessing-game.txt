<div class="post-text" itemprop="text">
<p>I'm trying to make a word guessing game in Python, but the final part is a bit confusing to me.</p>
<p>Here is my code uptil now:</p>
<pre><code>word_tuple = ("c", "o", "d", "e", "c")

word = ""

word = input("Give a word of " +  str(len(word_tuple)) + " characters: ")

while len(word) != len(word_tuple):
    if len(word) != len(word_tuple):
        print("Wrong!")
        word = input("Give a word of " + str(len(word_tuple)) + " characters: ")

for i in range(len(word_tuple)):
    print(word_tuple[i], end="")
</code></pre>
<p>Basically, the loop checks if you insert a 5 character word, and if you do, it compares the word with the characters of the tuple. If 1 or more characters are correct, it will print the correct characters, and the ones which haven't been guessed are masked with a symbol, for example '*'.</p>
<p>The confusing part is where I have to check if the entered word has characters that match the tuple and then print out the correct characters.</p>
<p>So for example:</p>
<pre><code>Give a word of 5 characters: Python
Wrong!
Give a word of 5 characters: Candy
Almost there! The word is "C*d*c"
Give a word of 5 characters: Denim
Almost there! The word is "C*dec"
Give a word of 5 characters: Codec
You found the word!
</code></pre>
<p>Any help would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is you do not print your word correctly, and your print is outside of the while, here is an answer you can try</p>
<pre><code>word_tuple = ("c", "o", "d", "e", "c")

# We use this list to keep in memory the letters found
found = [False] * len(word_tuple)

word = ""

# The `all` method return True only if the list contains only True values
# Which means, while all letters are not found

while not all(found):
    # the `lower` method allows you to not take in account the uppercases
    word = input("Give a word of " +  str(len(word_tuple)) + " characters: ").lower()

    if len(word) == len(word_tuple):
        for charac in word_tuple:
            if charac in word:
                found = [b or word_tuple[index] in word for index, b in enumerate(found)]
        # The `any` method return True only if the list contains at least one True value
        # Which means we print Wrong only if there is no letter found
        if not any(found):
            print('Wrong!')
        else:
            print('Almost there! The word is "', end='')
            for i in range(len(word_tuple)):
                if found[i]:
                    print(word_tuple[i], end="")
                else:
                    print('*', end='')
            print('"')

    else:
        print('Wrong!')
# The method `join` allows you to join every string of an iterable
# Which means it joins every character of your tuple to a printable string
while word != ''.join(word_tuple):
    print('Close, try again')
    word = input("Give a word of " +  str(len(word_tuple)) + " characters: ").lower()

print('You found the word!')
</code></pre>
<p>An exercise can be to refactor this code in different methods</p>
</div>
<span class="comment-copy">Which part exactly are you having trouble with? You clearly know how to loop over characters in a string and how to compare strings.</span>
<span class="comment-copy">The last part, where you insert a word, the program compares it to the characters in the string and prints out the characters you guessed correctly. I don't know how to write it in code.  So for example:  Give a word of 5 characters: Candy Almost there! The word is "C * * * c" Give a word of 5 characters: Cotton Almost there! The word is "C o * * c"</span>
<span class="comment-copy">You probably want to take a look at "<a href="https://docs.python.org/3/reference/expressions.html#membership-test-details" rel="nofollow noreferrer">Membership test operations</a>". Your question will probably get downvoted as long as it's not hyper-specific about your problem. (The StackOverflow format generally discourages "help me solve this general problem" questions.) Glance over that page and maybe you can edit to make your question more specific.</span>
<span class="comment-copy">You can use a condition, check if a character is in your word to display it.</span>
<span class="comment-copy">@BlueSheepToken Thank you! Your solution works. Can't seem to upvote since I don't have 15 rep yet, but I marked your answer as the solution. I don't fully understand everything since I've only picked up Python about 2 weeks ago, but I'm sure I'll figure it out after staring at it long enough, haha. Again, thanks!</span>
