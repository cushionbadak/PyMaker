<div class="post-text" itemprop="text">
<p>I have an array of arrays, like this...</p>
<pre><code>[['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Summer Smith', 4], ['Summer Smith', 4], ['Summer Smith', 4], ['Abradolf Lincler', 4], ['Summer Smith', 4], ['Summer Smith', 4]]
</code></pre>
<p>I want to be able to scan through the each array and if element 0 already exists in array, merge them and add the first element together. So for example, there are 5 instances of Summer Smith. The code should recognise that its the same player and therefore add all the Summer Smith scores so making the total Summer Smith score 20. It should do that for each player. So it all looks like for example,</p>
<pre><code>[['Harry',20], ['Jake', 16]]....
</code></pre>
<p>I tried to...</p>
<pre><code>for array in arrays:
        if array[0] in [not sure what to do now]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Consider using a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> to keep track of score sums for each player:</p>
<pre><code>scores = [['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Summer Smith', 4], ['Summer Smith', 4], ['Summer Smith', 4], ['Abradolf Lincler', 4], ['Summer Smith', 4], ['Summer Smith', 4]]

grouped_scores = {}
for name, score in scores:
    if name not in grouped_scores: grouped_scores[name] = score
    else: grouped_scores[name] += score
</code></pre>
<p>Then you can get back the results as a list of lists:</p>
<pre><code>merged_scores = [list(t) for t in grouped_scores.items()]
print(merged_scores)
# [['Summer Smith', 20], ['Scary Terry', 20], ['Abradolf Lincler', 32]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would use a <code>Counter</code></p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; arrays = [['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Summer Smith', 4], ['Summer Smith', 4], ['Summer Smith', 4], ['Abradolf Lincler', 4], ['Summer Smith', 4], ['Summer Smith', 4]]
&gt;&gt;&gt; result = Counter()
&gt;&gt;&gt; for k, v in arrays:
...     result[k] += v
...
&gt;&gt;&gt; result
Counter({'Abradolf Lincler': 32, 'Scary Terry': 20, 'Summer Smith': 20})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Better using <code>setdefault</code>:</p>
<pre><code>d={}
for x,y in arrays:
   d.setdefault(x,[]).append(y)
print(list(map(list,{k:sum(v) for k,v in d.items()}.items())))
</code></pre>
<p>Output:</p>
<pre><code>[['Abradolf Lincler', 32], ['Scary Terry', 20], ['Summer Smith', 20]]
</code></pre>
<p>Best in all <code>defaultdict</code>:</p>
<pre><code>from collections import defaultdict
d=defaultdict(int)
for x,y in arrays:
   d[x]+=y
print(list(map(list,dict(d).items())))   
</code></pre>
<p>Output:</p>
<pre><code>[['Abradolf Lincler', 32], ['Scary Terry', 20], ['Summer Smith', 20]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertools.groupby</code> for this:</p>
<pre><code>from itertools import groupby
l = [['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Scary Terry', 4], ['Scary Terry', 4], ['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Abradolf Lincler', 4], ['Summer Smith', 4], ['Summer Smith', 4], ['Summer Smith', 4], ['Abradolf Lincler', 4], ['Summer Smith', 4], ['Summer Smith', 4]]

res = [[name, sum(s[1] for s in score)] for name, score in groupby(sorted(l, key=lambda x: x[0]), key=lambda x: x[0])]
</code></pre>
<p>Which is equivalent to the loop:</p>
<pre><code>res = []
for name, score in groupby(sorted(l, key=lambda x: x[0]), key=lambda x: x[0]):
    res.append([name, sum(s[1] for s in score)])
</code></pre>
<p>and returns:</p>
<pre><code>&gt;&gt;&gt; res
[['Abradolf Lincler', 32], ['Scary Terry', 20], ['Summer Smith', 20]]
</code></pre>
</div>
<span class="comment-copy">You have lists, not arrays.</span>
<span class="comment-copy">What you have are lists. Arrays are <code>bytearray</code> or <code>array.array</code> (stdlib) or <code>numpy.array</code> (third-party) usually. Lists are lists.</span>
<span class="comment-copy">Better: <code>d[x] += y</code>, but you're right: <code>defaultdict</code> is best.</span>
<span class="comment-copy">@jpp Oh yeah that's right, thank you :-), finished edit, also thanks for saying <code>defaultdict</code> is the best :D</span>
