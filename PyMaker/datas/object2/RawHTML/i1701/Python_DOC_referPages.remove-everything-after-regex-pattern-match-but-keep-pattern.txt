<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/35637317/using-regex-to-remove-all-text-after-the-last-number-in-a-string">Using regex to remove all text after the last number in a string</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I was searching for a way to remove all characters past a certain pattern match. I know that there are many similar questions here on SO but i was unable to find one that works for me. Basically i have a fixed pattern (\w\w\d\d\d\d), and i want to remove everything after that, but keep the pattern.</p>
<p>ive tried using:</p>
<pre><code>test = 'PP1909dfgdfgd'
done = re.sub ('(\w\w\d\d\d\d/w*)', '\w\w\d\d\d\d/', test)
</code></pre>
<p>but still get the same string ..</p>
<p>example:</p>
<pre><code>dirty = 'AA1001dirtydata'
dirty2 = 'AA1001222%^&amp;*'
</code></pre>
<p>Desired output:</p>
<pre><code>clean = 'AA1001'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/re.html#re.Pattern.match" rel="nofollow noreferrer"><code>re.match()</code></a> instead of <code>re.sub()</code>:</p>
<pre><code>re.match('\w\w\d\d\d\d', dirty).group(0)  # returns 'AA1001'
</code></pre>
<p><strong>Note</strong>: <code>match</code> will look for the regular expression at the beginning of the string you provide and only "match" the characters corresponding to the pattern. If you want to find the pattern partway through the string you can use <a href="https://docs.python.org/3/library/re.html#re.Pattern.search" rel="nofollow noreferrer"><code>re.search()</code></a>.</p>
</div>
<span class="comment-copy">What do you want to happen to text that appears before that pattern?</span>
<span class="comment-copy">There is no slash in your test string, but your regex looks for an expression with a slash in it.</span>
<span class="comment-copy">Also want to delete=)</span>
<span class="comment-copy">Oh right! i accidentally put a slash..</span>
<span class="comment-copy">Notice also in the duplicate how the second argument to <code>re.sub</code> is not (and could not be) a regex.</span>
<span class="comment-copy">Hi Alex, what if i am trying to change the original string itself? test = 's' test= re.search('\w\w\d\d\d\d', test).group(0)</span>
<span class="comment-copy">You can just reassign the variable (i.e. <code>test = ...</code>)</span>
<span class="comment-copy">Aha! It worked really well. i was trying to ask if my string dirty string does not fufil the re.search requirements how can i pass the operation, and did it with a try and except command. Cheers!</span>
