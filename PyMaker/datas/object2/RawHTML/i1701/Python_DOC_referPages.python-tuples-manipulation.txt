<div class="post-text" itemprop="text">
<p>I have a tuple in Python like this - </p>
<pre><code>a = ((-,-,x), (-,-,x), (-,-,y), (-,-,z), (-,-,z), (-,-,z))
</code></pre>
<p>Now, I want to group the tuples with the same third element. I have to convert this tuple,a into</p>
<pre><code>b = (((-,-,x), (-,-,x)), ((-,-,y)), ((-,-,z), (-,-,z), (-,-,z)))
</code></pre>
<p>How do I write Python code for this? To convert <code>a</code> into <code>b</code>? Since tuples are immutable I'm not able to write the code successfully. </p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done with <a href="https://docs.python.org/2/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>.</p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; from itertools import groupby
&gt;&gt;&gt; 
&gt;&gt;&gt; a = (('-','-','x'), ('-','-','x'), ('-','-','y'), ('-','-','z'), ('-','-','z'), ('-','-','z'))
&gt;&gt;&gt; tuple(tuple(grp) for _, grp in groupby(a, key=itemgetter(-1)))
&gt;&gt;&gt; 
((('-', '-', 'x'), ('-', '-', 'x')),
 (('-', '-', 'y'),),
 (('-', '-', 'z'), ('-', '-', 'z'), ('-', '-', 'z')))
</code></pre>
<p>It's assumed that groups of equal last elements cannot be interrupted (like in your sample data). If they can, you need to sort <code>a</code> with <code>key=itemgetter(-1)</code> first.</p>
<blockquote>
<p>...can you explain "interrupted"?</p>
</blockquote>
<p>Sure. What I mean is that <code>groupby</code> lumps together groups of <strong>consecutive</strong> elements where <code>key</code> returns the same value. So if we had something like </p>
<pre><code>b = (('-','-','z'), ('-', '-', 'x'), ('-','-','z'))
</code></pre>
<p>then the <code>groupby</code> from above would create three groups, not two.</p>
<pre><code>&gt;&gt;&gt; b = (('-','-','z'), ('-', '-', 'x'), ('-','-','z'))
&gt;&gt;&gt; tuple(tuple(grp) for _, grp in groupby(b, key=itemgetter(-1)))
&gt;&gt;&gt; ((('-', '-', 'z'),), (('-', '-', 'x'),), (('-', '-', 'z'),))
</code></pre>
<p>If you don't want that to happen, sort <code>b</code> first.</p>
<pre><code>&gt;&gt;&gt; last = itemgetter(-1)
&gt;&gt;&gt; tuple(tuple(grp) for _, grp in groupby(sorted(b, key=last), key=last))
&gt;&gt;&gt; ((('-', '-', 'x'),), (('-', '-', 'z'), ('-', '-', 'z')))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>from itertools import groupby

a = (('-','-','x'), ('-','-','x'), ('-','-','y'), ('-','-','z'), ('-','-','z'), ('-','-','z'))

print(tuple(tuple(x) for _, x in groupby(a)))
# ((('-', '-', 'x'), ('-', '-', 'x')), (('-', '-', 'y'),), (('-', '-', 'z'), ('-', '-', 'z'), ('-', '-', 'z')))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given the elements are already ordered by the last element (well the tuples with <code>x</code> as last element, etc. are positioned in a sequence), we can use <a href="https://docs.python.org/2/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><strong><code>itertools.groupby</code></strong></a>:</p>
<pre><code>from itertools import groupby
from operator import itemgetter

b = tuple(tuple(vs) for _, vs in groupby(a, itemgetter(-1)))
</code></pre>
</div>
<span class="comment-copy">- is string or?</span>
<span class="comment-copy">I don't get why tuples immutability is a problem. You here construct a <i>new</i> tuple.</span>
<span class="comment-copy">I had to add so many <code>'</code> :( - next time please post data structures that we can copy-paste into the Python interpreter.</span>
<span class="comment-copy">@DejanMariÄ‡ '-' can be any datatype. I just wanted the logic irrespective of datatype.</span>
<span class="comment-copy">@timgeb Alright noted, my bad. Thanks.</span>
<span class="comment-copy">...can you explain "interrupted"?</span>
<span class="comment-copy">Yep, OK. Thanks.</span>
