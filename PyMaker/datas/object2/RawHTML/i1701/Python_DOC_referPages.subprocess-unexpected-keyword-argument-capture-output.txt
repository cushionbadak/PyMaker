<div class="post-text" itemprop="text">
<p>When executing <code>subprocess.run()</code> as given in the <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="noreferrer">Python docs</a>, I get a TypeError:</p>
<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; subprocess.run(["ls", "-l", "/dev/null"], capture_output=True)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.6/subprocess.py", line 403, in run
    with Popen(*popenargs, **kwargs) as process:
TypeError: __init__() got an unexpected keyword argument 'capture_output'
</code></pre>
<p>I am running Python 3.6.6:</p>
<pre><code>$ python3 --version
Python 3.6.6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You inspected the wrong documentation, for <a class="post-tag" href="/questions/tagged/python-3.6" rel="tag" title="show questions tagged 'python-3.6'">python-3.6</a> this parameter does <em>not</em> exists, as can be found in the <a href="https://docs.python.org/3.6/library/subprocess.html#subprocess.run" rel="noreferrer">documentation</a> (you select the version at the top left):</p>
<blockquote>
<pre><code>subprocess.run(args, *, stdin=None, input=None, stdout=None, stderr=None,
               shell=False, cwd=None, timeout=None, check=False, encoding=None,
               errors=None, env=None)
</code></pre>
</blockquote>
<p>You can however easily "emulate" this by setting both <code>stdout</code> and <code>stderr</code> to <code>PIPE</code>:</p>
<pre><code>from subprocess import <b>PIPE</b>

subprocess.run(["ls", "-l", "/dev/null"], stdout=<b>PIPE</b>, stderr=<b>PIPE</b>)</code></pre>
<p>In fact, if we look at the source code of the <a class="post-tag" href="/questions/tagged/python-3.7" rel="tag" title="show questions tagged 'python-3.7'">python-3.7</a> version, where the feature was introduced, we see in the <a href="https://github.com/python/cpython/blob/3.7/Lib/subprocess.py#L459" rel="noreferrer">source code [GitHub]</a>:</p>
<blockquote>
<pre><code>if capture_output:
    if ('stdout' in kwargs) or ('stderr' in kwargs):
        raise ValueError('stdout and stderr arguments may not be used '
                         'with capture_output.')
    kwargs['stdout'] = PIPE
    kwargs['stderr'] = PIPE
</code></pre>
</blockquote>
</div>
<span class="comment-copy"><code>capture_output</code> is new in Python 3.7.</span>
<span class="comment-copy">You inspected the wrong documentation, this feature was introduced in 3.7.</span>
