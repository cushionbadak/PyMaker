<div class="post-text" itemprop="text">
<p>Alright, so I have a question to pose, and I'm not exactly sure how to phrase it, and I couldn't find anything on the Internet either for that same reason.  But I have a large text file, and it's an output from a Nastran job; here is a sample :</p>
<pre><code>                                         D I S P L A C E M E N T   V E C T O R

  POINT ID.   TYPE          T1             T2             T3             R1             R2             R3
    158819      G      1.709110E-04   7.605540E-16  -1.555717E-15  -4.860894E-18   1.829865E-03  -2.318361E-02
    158820      G      1.875926E-04   7.603908E-16  -1.382438E-15   2.883937E-18   3.121088E-04   2.332622E-02
    158821      G      1.275168E-04   6.281925E-16  -1.472595E-15  -1.425970E-17   4.282258E-03  -1.669750E-02
    158822      G      1.712281E-04   7.267596E-16  -1.473447E-15  -2.136693E-18   1.425850E-03   2.210620E-02
    158823      G      1.010464E-04   5.633097E-16  -1.426041E-15  -3.498301E-17   4.969753E-03  -1.144002E-02
    158824      G      1.274082E-04   6.164795E-16  -1.567410E-15  -5.947361E-18   3.224372E-03   1.580865E-02
                                                 L O A D   V E C T O R

  POINT ID.   TYPE          T1             T2             T3             R1             R2             R3
    158801      G      1.175810E+02  -3.610042E-16  -2.782717E-12   0.0            0.0            0.0
    158802      G      8.539756E+01   1.118419E-15  -2.639934E-12   0.0            0.0            0.0
    158803      G      9.717072E+01  -7.574143E-16  -2.682750E-12   0.0            0.0            0.0
    158804      G      1.175825E+02   0.0           -2.986422E-12   0.0            0.0            0.0
</code></pre>
<p>So as you can see, Nastran creates the file by heading each section with the name in all caps and a space between each letter, and three spaces between each word.  So my question is, if I have a script that looks for a POINT ID. in the file, how can I write it such that if I specify a section, it looks for the section name with the formatting, but it also stops at the next section, regardless of the name of the section, but stopping with respect to the formatting of the section header.</p>
<p>Thanks so much for any help, please let me know if that doesn't make sense.</p>
</div>
<div class="post-text" itemprop="text">
<p>On the top of my head I would read the file in, split the content by sep="   " (three spaces) and finally create a dictionary of the separate parts. The headers are the keys and the following rows are the values.</p>
</div>
<div class="post-text" itemprop="text">
<p>The phrase for formatting that you might have been looking for can be called as pattern matching, or <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">regex</a>.</p>
<p>If all else fails, you should always be able to muscle your way through this problem using regex to find the end of a section. 
Note that it might still be wise to follow up this code with logic that can import your data into pandas or something similar that you can manage easily.
If you wish to tweak this regex, i find <a href="https://regex101.com/r/jQIeTz/1" rel="nofollow noreferrer">regex101.com</a> very useful. Hope this helps.</p>
<pre><code>import re    
#matches the pattern UPPERCASE,SPACE followed by (UPPERCASE, SPACE) repeated, 
#followed by TWO SPACE optional
#whole pattern can be repeated. 
#You may want to tweak the rules to make it more strict as necessary.

pattern = re.compile("(([A-Z] )([A-Z] )+(  )?)+")

test = '''                                         D I S P L A C E M E N T   V E C T O R

  POINT ID.   TYPE          T1             T2             T3             R1             R2             R3
    158819      G      1.709110E-04   7.605540E-16  -1.555717E-15  -4.860894E-18   1.829865E-03  -2.318361E-02
    158820      G      1.875926E-04   7.603908E-16  -1.382438E-15   2.883937E-18   3.121088E-04   2.332622E-02
    158821      G      1.275168E-04   6.281925E-16  -1.472595E-15  -1.425970E-17   4.282258E-03  -1.669750E-02
    158822      G      1.712281E-04   7.267596E-16  -1.473447E-15  -2.136693E-18   1.425850E-03   2.210620E-02
    158823      G      1.010464E-04   5.633097E-16  -1.426041E-15  -3.498301E-17   4.969753E-03  -1.144002E-02
    158824      G      1.274082E-04   6.164795E-16  -1.567410E-15  -5.947361E-18   3.224372E-03   1.580865E-02
                                                 L O A D   V E C T O R

  POINT ID.   TYPE          T1             T2             T3             R1             R2             R3
    158801      G      1.175810E+02  -3.610042E-16  -2.782717E-12   0.0            0.0            0.0
    158802      G      8.539756E+01   1.118419E-15  -2.639934E-12   0.0            0.0            0.0
    158803      G      9.717072E+01  -7.574143E-16  -2.682750E-12   0.0            0.0            0.0
    158804      G      1.175825E+02   0.0           -2.986422E-12   0.0            0.0            0.0'''

#your input for beginning of a section header    
begin = 'displacement vector'
#getting it into the correct style laid out here for section headers.
begin = ' '.join(begin.upper()) 
location = test.find(begin)

if location != -1:
    relevant_section = test[location + len(begin):]
else:
    relevant_section = test
#regex matching for end of section
end = pattern.search(relevant_section)
if end is not None:
    end = end.span()[0]
    relevant_section = relevant_section[:end]
</code></pre>
</div>
<span class="comment-copy">I'm thinking <a href="https://pandas.pydata.org" rel="nofollow noreferrer">pandas</a> here.</span>
<span class="comment-copy">Did you manage to solve your question?</span>
<span class="comment-copy">I did, so sorry for not replying. It worked just fine.</span>
<span class="comment-copy">I'll try this out and let you know what happens.</span>
