<div class="post-text" itemprop="text">
<p>So I'm trying to implement a system where user authentication is based on external sql.</p>
<p>This external sql is on my first website where I have a lot of users and I simply want them to login with the same credentials.</p>
<p>The passwords stored in the database are encrypted so I need to figure out the encryption method. I have full access to the website so I found this php code (site is based on php):</p>
<pre><code>/**
 * Generate a password hash
 *
 * @param string $strPassword The unencrypted password
 *
 * @return string The encrypted password
 *
 * @throws \Exception If none of the algorithms is available
 */
public static function hash($strPassword)
{
    if (CRYPT_SHA512 == 1)
    {
        return crypt($strPassword, '$6$' . md5(uniqid(mt_rand(), true)) . '$');
    }
    elseif (CRYPT_SHA256 == 1)
    {
        return crypt($strPassword, '$5$' . md5(uniqid(mt_rand(), true)) . '$');
    }
    elseif (CRYPT_BLOWFISH == 1)
    {
        return crypt($strPassword, '$2a$07$' . md5(uniqid(mt_rand(), true)) . '$');
    }
    else
    {
        throw new \Exception('None of the required crypt() algorithms is available');
    }
}
</code></pre>
<p>and also this:</p>
<pre><code>/**
 * Run the controller and parse the password template
 */
public function run()
{
    $this-&gt;Template = new BackendTemplate('be_password');

    if (Input::post('FORM_SUBMIT') == 'tl_password')
    {
        $pw = Input::postRaw('password');
        $cnf = Input::postRaw('confirm');

        // The passwords do not match
        if ($pw != $cnf)
        {
            Message::addError($GLOBALS['TL_LANG']['ERR']['passwordMatch']);
        }
        // Password too short
        elseif (utf8_strlen($pw) &lt; Config::get('minPasswordLength'))
        {
            Message::addError(sprintf($GLOBALS['TL_LANG']['ERR']['passwordLength'], Config::get('minPasswordLength')));
        }
        // Password and username are the same
        elseif ($pw == $this-&gt;User-&gt;username)
        {
            Message::addError($GLOBALS['TL_LANG']['ERR']['passwordName']);
        }
        // Save the data
        else
        {
            // Make sure the password has been changed
            if (crypt($pw, $this-&gt;User-&gt;password) === $this-&gt;User-&gt;password)
            {
                Message::addError($GLOBALS['TL_LANG']['MSC']['pw_change']);
            }
            else
            {
                $this-&gt;loadDataContainer('tl_user');

                // Trigger the save_callback
                if (is_array($GLOBALS['TL_DCA']['tl_user']['fields']['password']['save_callback']))
                {
                    foreach ($GLOBALS['TL_DCA']['tl_user']['fields']['password']['save_callback'] as $callback)
                    {
                        if (is_array($callback))
                        {
                            $this-&gt;import($callback[0]);
                            $pw = $this-&gt;$callback[0]-&gt;$callback[1]($pw);
                        }
                        elseif (is_callable($callback))
                        {
                            $pw = $callback($pw);
                        }
                    }
                }

                $objUser = UserModel::findByPk($this-&gt;User-&gt;id);
                $objUser-&gt;pwChange = '';
                $objUser-&gt;password = Encryption::hash($pw);
                $objUser-&gt;save();

                Message::addConfirmation($GLOBALS['TL_LANG']['MSC']['pw_changed']);
                $this-&gt;redirect('contao/main.php');
            }
        }

        $this-&gt;reload();
    }
</code></pre>
<p>My question is:</p>
<p>how to translate this method to python?</p>
<p>I don't quite understand the randomness and how to repeat it. Cou;ld someone explain?</p>
<p>Thanks,</p>
<p>C</p>
<p>//edit:</p>
<p>I mean I don't understand where </p>
<pre><code>return crypt($strPassword, '$6$' . **md5(uniqid(mt_rand(), true))** . '$');
</code></pre>
<p>this middle part is saved and thus how can it ever be compared to crypt(password, the_same_function(but gives totally different value);</p>
<p>succesfully</p>
<p>I feel like I'm missing something obvious here, could someone explain? I know it's basic.</p>
<p>Thanks again</p>
</div>
<div class="post-text" itemprop="text">
<p>Main magic here is in 2 lines:</p>
<p>the one that you mentioned:</p>
<pre><code>return crypt($strPassword, '$6$' . **md5(uniqid(mt_rand(), true))** . '$');
</code></pre>
<p>and the one which checks if password is changed:</p>
<pre><code>if (crypt($pw, $this-&gt;User-&gt;password) === $this-&gt;User-&gt;password)
</code></pre>
<p>in fist one the salt for the password is generated, in second hashed password from database is used to extract the salt which has to be used in <code>crypt()</code> method</p>
<p>Here you have more info: <a href="http://php.net/manual/en/faq.passwords.php#faq.passwords.salt" rel="nofollow noreferrer">http://php.net/manual/en/faq.passwords.php#faq.passwords.salt</a></p>
<p>minus may be because you didn't put enough work at first and ( the thing that made it harder for me ) you didn't put your password verification code and you didn't put your python code.</p>
<p>I think you have enough now to write your own code. Take a look in the python hashlib documentation <a href="https://docs.python.org/3/library/hashlib.html" rel="nofollow noreferrer">https://docs.python.org/3/library/hashlib.html</a> and using salts. </p>
<p>I hope it's enough to get you going if not post your python code. </p>
</div>
<span class="comment-copy">I can't help with PHP, but I think it is unfair that someone downvoted the question without leaving a comment. Have my upvote</span>
<span class="comment-copy">Thanks, I figured it it (well it right there).</span>
