<div class="post-text" itemprop="text">
<p>So I have two lists:</p>
<pre><code>vocabulary = ['a','b','c']
sentences = ['a a b b c c', 'a c b c', 'b c c a b']
</code></pre>
<p>I want to calculate how many times the letters in vocabulary appear in the strings in the list sentences.</p>
<p>So I want the output to be:</p>
<pre><code>a = 4
b = 5
c = 6
</code></pre>
<p>My program:</p>
<pre><code>counter = Counter()
for word in sentences:
    if word in vocabulary:
        counter.update(word)
print(counter)
</code></pre>
<p>But I keep getting the output:</p>
<pre><code>Counter()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>Counter</code> is a subclass of <code>dict</code>. <a href="https://docs.python.org/3/library/stdtypes.html#dict.update" rel="nofollow noreferrer"><code>dict.update</code></a> accepts another dictionary or an iterable of pairs. But you're only supplying a single character.</p>
<p>In this case, you can chain your list of strings and pass to <code>Counter</code>, then filter the result via a dictionary comprehension:</p>
<pre><code>from collections import Counter
from itertools import chain

vocabulary = ['a','b','c']
sentences = ['a a b b c c', 'a c b c', 'b c c a b']

vocab_set = set(vocabulary)
c = Counter(chain.from_iterable(sentences))
res = {k: v for k, v in c.items() if k in vocab_set}

{'a': 4, 'b': 5, 'c': 6}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This will do it, no <code>import</code> needed:</p>
<pre><code>vocabulary = ['a','b','c']
sentences = ['a a b b c c', 'a c b c', 'b c c a b']

data = ''.join(sentences)

for v in vocabulary:
    print('{}: {}'.format(v, data.count(v)))

a: 4
b: 5
c: 6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>An <em>O(n)</em> solution, with no <code>import</code>:</p>
<pre><code>vocabulary = ['a', 'b', 'c']
sentences = ['a a b b c c', 'a c b c', 'b c c a b']

counts = {}
vocab_set = set(vocabulary)
for sentence in sentences:
    for ch in sentence:
        if ch in vocab_set:
            counts[ch] = counts.get(ch, 0) + 1

print(counts)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'c': 6, 'a': 4, 'b': 5}
</code></pre>
</div>
<span class="comment-copy">Worth noting this is at the cost of time complexity O(<i>m</i> * <i>n</i>) vs O(<i>n</i>).</span>
