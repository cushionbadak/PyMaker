<div class="post-text" itemprop="text">
<p>When I check condition of this list <code>a = [1,2,3,4,5]</code> and this list <code>[1,2,3,2,1,5,4]</code> to 'sorted' keyword means</p>
<pre><code>&gt;&gt; a == sorted
&gt;&gt; False
</code></pre>
<p>why this gives me False and </p>
<pre><code>&gt;&gt;a != sorted
&gt;&gt; True
</code></pre>
<p>why this gives me true? 
it's gives false in '==' and true in '!=' regardless list is sorted or not</p>
</div>
<div class="post-text" itemprop="text">
<p><code>sorted</code> is a built-in function in Python. Lists and functions are inherently incomparable so it's natural that <code>a == sorted</code> would return false regardless of what's in <code>a</code>. You can check this by using the <code>type</code> function:</p>
<pre><code>&gt;&gt;&gt; print(type([1, 2, 3]))
&lt;class 'list'&gt;
&gt;&gt;&gt; print(type(sorted))
&lt;class 'builtin_function_or_method'&gt;
</code></pre>
<p>If you wanted to check the "sortedness" of <code>a</code>, you would do:</p>
<pre><code>a == sorted(a)
</code></pre>
<p>or, if you prefer something that doesn't run in O(n log n) time:</p>
<pre><code>all(first &lt;= second for first, second in zip(a, a[1:]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>sorted()</code> function takes a list and returns it sorted.</p>
<p>So you should compare your list to a "sorted version" of that list to see if it was originally sorted.</p>
<p>E.g.</p>
<pre><code>&gt;&gt;&gt; l = [1,2,3]
&gt;&gt;&gt; l == sorted(l)
True
&gt;&gt;&gt; l = [2,1,3]
&gt;&gt;&gt; l == sorted(l)
False
</code></pre>
<hr/>
<p>Note that this is slow for long lists as you are generating a new, sorted version in memory. Instead you could write a procedure to check if each element is greater than the previous. This would be much more efficient.</p>
</div>
<div class="post-text" itemprop="text">
<p>You misunderstood the meaning of <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a>. It's a function that returns a sorted list, not a test of whether a given list is sorted. To achieve that you could use something like <code>a == sorted(a)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Let's have a look at this in a bit of depth:</p>
<p><code>sorted</code> is indeed a keyword but it's not what you think it is:</p>
<pre><code>&gt;&gt;&gt; type(sorted)
&lt;class 'builtin_function_or_method'&gt;
</code></pre>
<p>so this expression <code>&gt;&gt;&gt; a == sorted</code> checks if your list <code>a</code> is equal to this <code>builtin_function_or_method</code>, it's not checking whether the list is sorted. You will need to write your own sort check, maybe like below:</p>
<pre><code>def is_sorted(a=[]):
    prev = a[0]
    if len(a)&gt;1:
        for item in a[1:]:
            if item &lt; prev:
                return False
            else:
                prev=item
    return True
</code></pre>
<p>and then use that function to make your check like so:</p>
<pre><code>&gt;&gt;&gt; is_sorted(a)
&gt;&gt;&gt; True
</code></pre>
<p>or use <code>sorted</code> for it's intended purpose:</p>
<pre><code>a==sorted(a)
</code></pre>
</div>
<span class="comment-copy"><code>sorted</code> is a built-in function, and since a list can never equal a function, <code>a == sorted</code> will always return <code>False</code>. Therefore, the opposite, <code>a != sorted</code>, will always return <code>True</code>. <code>== sorted</code> is <b>not</b> the same as determining whether a list is sorted; you would need to create your own function for that.</span>
<span class="comment-copy">Because <code>some_list == sorted</code>, compares your list with the <code>sorted</code> <i>function</i>, and since a list is something different than a <code>sorted</code>, it returns <code>False</code>.</span>
<span class="comment-copy">Note that <code>sorted</code> is <i>not</i> a keyword, it is a builtin function, that is something different.</span>
<span class="comment-copy">it's clear now.. thanks all</span>
