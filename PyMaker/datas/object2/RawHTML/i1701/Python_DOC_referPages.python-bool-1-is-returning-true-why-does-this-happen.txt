<div class="post-text" itemprop="text">
<p>I decided to cast -1 into a bool to check what the outcome was.</p>
<p>Contrary to my Expectation that <code>bool(-1)</code> would return <code>FALSE</code> it returns <code>TRUE</code>.</p>
<p>Why is this the case?</p>
</div>
<div class="post-text" itemprop="text">
<p>Based on <a href="https://docs.python.org/3/library/stdtypes.html" rel="nofollow noreferrer">Python 3 documentation</a>, most of the built-in objects considered false are:</p>
<blockquote>
<ul>
<li>Constants defined to be false: None and False.</li>
<li>Zero of any numeric type: 0, 0.0, 0j, Decimal(0), Fraction(0, 1)</li>
<li>Empty sequences and collections: '', (), [], {}, set(), range(0)</li>
</ul>
</blockquote>
<p>Notice that it only specifies zero to be false, instead of any value that is equal to or lower than 0. This is also common in various other programming languages.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>TL;DR</strong></p>
<p>Yes, this is expected. Most programming languages only consider 0 to be false.</p>
<p><strong>Elaborated</strong></p>
<p>This makes sense when you consider how -1 is represented in the processor. Typically you convert a positive number to it's negative counterpart by using <a href="https://en.wikipedia.org/wiki/Two%27s_complement" rel="nofollow noreferrer">2's complement</a>. 2's complent represents a negative binary number by <em>inverting all the bits and adding 1</em>. Say we have a 4-bit architecture, the decimal 1 is represented as 0001. To get its negative representation, invert all the bits and add 1, thus 0001 becomes 1110 + 1 = 1111.</p>
<p>When we want to know if a value is <code>false</code>, we can <a href="https://msdn.microsoft.com/en-us/library/f355wky8.aspx" rel="nofollow noreferrer"><code>or</code></a> all its inputs, if the result is 0, it's false, otherwise it's true, and thus it makes perfect sense that -1 == true.</p>
<p>The reson that we use 2's complement, as appose to 1's complement (where we just invert all bits without adding 1) is exacly because we do not want to be able to represent both 0 and -0. </p>
</div>
<span class="comment-copy">Generally (for many programming languages) only <i>zero</i> is considered false. Everything non-zero is true.</span>
<span class="comment-copy">Generally (for many programming languages) there is detailed information to be found online, so you don't have to check and see what happens. See <a href="https://docs.python.org/3.7/library/functions.html#bool" rel="nofollow noreferrer">docs.python.org/3.7/library/functions.html#bool</a> of the official documentation.</span>
<span class="comment-copy">...and to make the answer complete, I'd also mention that <code>bool()</code> uses the standard truth testing protocol that you quote from. <a href="https://docs.python.org/3/library/stdtypes.html#boolean-values" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#boolean-values</a></span>
