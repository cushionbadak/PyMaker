<div class="post-text" itemprop="text">
<p>I'm trying to check if one or two files exist like this:</p>
<pre><code>def check_files_if_exist():
    try:
        f1 = open(file1)
        f1.close()
        f2 = open(file2)
        f2.close()
    except:
        #how to pass exception if one or two files does not exist?
</code></pre>
<p>My question is how do I pass an exception if of one or both files does not exist?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you don't want to use <code>os.path.exists()</code> or <code>os.path.isfile()</code> from the built-in <code>os.path</code> module, you'll have to use two try-except blocks:</p>
<pre><code>def check_files_if_exists(...):
    try:
        f1 = open(...)
        f1.close()
    except:
        return False # Return False because the path doesn't exist
    try:
        f2 = open(...)
        f2.close()
    except:
        return False # Return False because the path doesn't exist
    return True # This only occurs when both files exist.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can directly check if a file exist by using the <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer"><code>pathlib.Path</code></a> module. It comes with python.</p>
<pre><code>from pathlib import Path
p = Path('/path/to/file.txt')
if p.exists():
    # open file...
    with p.open('r') as file:
        for line in file:
            line = line.strip()
            # Do something here...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use <code>os.path.isfile(path)</code> to check whether file exists, without any exception.</p>
<pre><code>import os

def check_files_if_exist(path1, path2):
  return os.path.isfile(path1) and os.path.isfile(path2)
</code></pre>
<p>or</p>
<pre><code>import os

def check_files_if_exist(*paths):
  return all(os.path.isfile(path) for path in paths)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def check_files_if_exist():
    try:
        f1 = open(file1)
        f1.close()
        f2 = open(file2)
        f2.close()
    except:
        pass  # if you want to stop the whole function, you can use "return False" here.
</code></pre>
<p>I don't know the scenario of the author. If you want to just stop the function, you can use <code>return False</code>. But if you still want to execute some function even the <code>file1</code> and <code>file2</code> doesn't exists, you can use pass to ignore the exception.</p>
</div>
<span class="comment-copy">Why not just use <code>os.path.exists()</code>? (from the built-in <code>os.path</code> module)</span>
<span class="comment-copy">What do you mean "pass an exception"? Do you want to raise an error?</span>
<span class="comment-copy">Also, won't you need to pass <code>file1</code> and <code>file2</code> as arguments to <code>check_files_if_exist</code>?</span>
<span class="comment-copy">If the function is just to check whether the files exist, there's no need to open and close them. Just <code>return True</code>.</span>
