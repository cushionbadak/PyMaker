<div class="post-text" itemprop="text">
<p>I've got a text file that is written as follows:</p>
<pre><code>things to do
blah blah blah
Places to visit:
!
State Texas
Austin
Houston
Dallas
State Florida
Orlando
Miami
Jacksonville
Naples
!
State California
San Diego
Los Angeles
San Francisco
I can only pick one each year
!
State Illinois
Chicago
Peoria
Rockford
! 
</code></pre>
<p>Goal: I want to be able to extract any of the lines that starts with a "State" as key and the subsequent line as value (cities) until it hits a "!" or another "State".</p>
<p>The code below works from a help I got from another posting but it only works when there are no other "garbage" in the text file. I would like the code to only pick up the state and cities.</p>
<pre><code>State_Dict = {}
with open('state.txt', 'r') as main_fd:
   for line in main_fd:
      line = line.strip() #left and right stripped

      if ("State" in line):
        state_key = "_".join(line.split()[1:])
        State_Dict[state_key] = []

      elif ("!" in line):
        continue #goes to next iteration of loop instead of stopping the 
                                      loop unlike break

      else:
        State_Dict[state_key].append(line) #line has already been stripped
</code></pre>
<p>The output of this code with the text file as written above comes to an error as follows:</p>
<pre><code>Traceback (most recent call last):
snip 
snip   
State_Dict[state_key].append(line.rstrip())
NameError: name 'state_key' is not defined
</code></pre>
<p>Please advise. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>It is important to reset state when you see "!"
I hope it is not a homework :)</p>
<pre><code>State_Dict = {}
state_key = None  # init state key with empty value
with open('state.txt', 'r') as main_fd:
    for line in main_fd:
        line = line.strip()  # left and right stripped

        if line.startswith('State '):  # in python there is no need for "c-like" brackets in "if"; also I included a space
            # are you trying to replace spaces with "_"?
            state_key = "_".join(line.split()[1:])
            # if we see same state second time, what should we do?
            State_Dict[state_key] = []

        elif line.startswith('!'):
            state_key = None  # important! resent state after "!"
            # no need for next line as we go to next iteration anyway
            # continue # goes to next iteration of loop instead of stopping the loop unlike break

        elif state_key:  # if state_key is None, it is evaluated as False
            State_Dict[state_key].append(line)  # line has already been stripped
</code></pre>
</div>
<span class="comment-copy">You should use <code>line.startswith("State")</code> instead of using <code>in</code>. Same for <code>!</code>. Also, <code>elif ("")</code> is always True. And what is <code>state_key</code> in that case if it has never been set before?</span>
<span class="comment-copy">sorry, i typo'd and now the edited version of "else:"</span>
<span class="comment-copy">I'm actually a network engineer venturing into the "automation" so you could say a noob in the Python world. I'm testing the code now with the the real data set that I need to apply this with. Looks to be working but I'm auditing each line.</span>
<span class="comment-copy">So, this is paid homework :) We all are noobs in some technology, thanks for keeping networks connected! Double check, that you don't have repeated state</span>
<span class="comment-copy">One more thing - <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer">pdb</a> can help when you stuck and people on internet just mock you.</span>
