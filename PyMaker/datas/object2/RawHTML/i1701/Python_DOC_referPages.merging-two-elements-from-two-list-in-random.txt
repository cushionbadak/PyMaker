<div class="post-text" itemprop="text">
<p>I am trying to randomly match two elements from list and tuple. My goal is to create a string with 1 to 1 match.</p>
<p>Below is the ideal code I am trying to achieve in the end.</p>
<pre><code>&gt;&gt;&gt; color = ['red', 'orange', 'yellow']
&gt;&gt;&gt; transportation = ('car', 'train', 'airplane')
&gt;&gt;&gt; combination(color, transportation)

['a red car', 'a yellow train', 'a orange airplane']
</code></pre>
<p>Here is what I have so far.</p>
<pre><code>def combination(color, transportation):
    import random
    import itertools
    n = len(colors)
    new = random.sample(set(itertools.product(color, transportation)), n)
    return new

[('red', 'car'), ('orange', 'car'), ('red', 'airplane')]
</code></pre>
<p>As you can see, the color 'red' is being used twice and the transportation 'car' is also being used twice.</p>
<p>I am having trouble assigning each transportation to only one of the color and each color to only one of the transportation.</p>
<p>Also, I would really appreciate any tips on how to turn the tuple in to string.
ex) ('red', 'car') -&gt; 'a red car' for every item i have in list.</p>
</div>
<div class="post-text" itemprop="text">
<p>something like that might work:</p>
<pre><code>from random import shuffle

color = ['red', 'orange', 'yellow']
transportation = ('car', 'train', 'airplane')

t_list = list(transportation)
shuffle(color)
shuffle(t_list)

new_lst = list(zip(color, t_list))
print(new_lst)
#  [('red', 'train'), ('orange', 'car'), ('yellow', 'airplane')]
</code></pre>
<p>note that you have to convert <code>transportation</code> to a list for <a href="https://docs.python.org/3/library/random.html?highlight=shuffle#random.shuffle" rel="nofollow noreferrer"><code>random.shuffle</code></a> work: <code>shuffle</code> modifies the list in-place.</p>
<p>as for the second part of your question: <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str%20join#str.join" rel="nofollow noreferrer"><code>str.join</code></a> will help:</p>
<pre><code>for col_trans in new_lst:
    print(' '.join(col_trans))
# red train
# orange car
# yellow airplane
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also try like this.</p>
<blockquote>
<p>Use <code>random.shuffle()</code> and <code>zip()</code>.</p>
</blockquote>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt;
&gt;&gt;&gt; color = ['red', 'orange', 'yellow']
&gt;&gt;&gt; transportation = ('car', 'train', 'airplane')
&gt;&gt;&gt;
&gt;&gt;&gt; random.shuffle(color)
&gt;&gt;&gt;
&gt;&gt;&gt; list(zip(color, transportation))
[('yellow', 'car'), ('orange', 'train'), ('red', 'airplane')]
&gt;&gt;&gt;
&gt;&gt;&gt; random.shuffle(color)
&gt;&gt;&gt; list(zip(color, transportation))
[('red', 'car'), ('yellow', 'train'), ('orange', 'airplane')]
&gt;&gt;&gt;
&gt;&gt;&gt; random.shuffle(color)
&gt;&gt;&gt; list(zip(color, transportation))
[('orange', 'car'), ('red', 'train'), ('yellow', 'airplane')]
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">See the random.shuffle() method (the "transportation  must be a list).</span>
<span class="comment-copy"><code>'a orange airplane'</code> Are you sure it is really ideal?</span>
