<div class="post-text" itemprop="text">
<p>Sorry if this has already been answered before; the searches I have done have not been helpful.</p>
<p>I have a file that stores data as such:</p>
<blockquote>
<p>name,number</p>
</blockquote>
<p>(Although perhaps not relevant to the question, I will have to add entries to this file. I know how to do this.)</p>
<p>My question is for the pythonic(?) way of analyzing the data and sorting it in ascending order. So if the file was:</p>
<blockquote>
<p>alex,30</p>
<p>bob,20</p>
</blockquote>
<p>and I have to add the entry</p>
<blockquote>
<p>carol, 25</p>
</blockquote>
<p>The file should be rewritten as</p>
<blockquote>
<p>bob,20</p>
<p>carol,25</p>
<p>alex,30</p>
</blockquote>
<p>My first attempt was to store the entire file as a string (by read()) and then split by lines to get a list of strings, procedurally split those strings by a comma, and then create a new list of scores then sort that, but this doesn't seem right and fails because I don't have a way to go "back" once I have the order of scores.</p>
<p>I am unable to use libraries for this program.</p>
<p>Edit:</p>
<p>My first attempt I did not test because all it manages to do is sort a list of the scores; I don't know of a way to get the "entries" back.</p>
<pre><code>file = open("scores.txt" , "r")
data = file.read()
list_data = data.split()
data.append([name,score])
for i in range(len(list_data)):
    list_scores = list_scores.append(list_data[i][1])
list_scores = sorted(list_scores)
</code></pre>
<p>As you can see, this gives me an ascending list of scores, but I do not know where to go from here in order to sort the list of name, score entries.</p>
</div>
<div class="post-text" itemprop="text">
<p>You will just have to write the sorted entries back to some file, using some basic string formatting:</p>
<pre><code>with open('scores.txt') as f_in, open('file_out.txt', 'w') as f_out:
    entries = [(x, int(y)) for x, y in (line.strip().split(',') for line in f_in)]
    entries.append(('carol', 25))
    entries.sort(key=lambda e: e[1])
    for x, y in entries:
        f_out.write('{},{}\n'.format(x, y))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm going to assume you're capable of putting your data into a <code>.csv</code> file in the following format:</p>
<pre><code>Name,Number
John,20
Jane,25
</code></pre>
<p>Then you can use <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer">csv.DictReader</a> to read this into a dictionary with something like as shown in the listed example:</p>
<pre><code>with(open('name_age.csv', 'w') as csvfile:
    reader = csv.DictReader(csvfile)
</code></pre>
<p>and write to it using</p>
<pre><code>with(open('name_age.csv') as csvfile:
    writer = csv.DictWriter(csvfile)
    writer.writerow({'Name':'Carol','Number':25})
</code></pre>
<p>You can then sort it using python's built-in <code>operator</code> as shown <a href="http://kapoorabhish.github.io/blog/2013/07/26/sorting-a-csv-file-using-python/" rel="nofollow noreferrer">here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>this a function that will take a filename and sort it for you</p>
<pre><code>def sort_file(filename):
    f = open(filename, 'r')
    text = f.read()
    f.close()
    lines = [i.split(',') for i in text.splitlines()]
    lines.sort(key=lambda x: x[1])
    lines = [', '.join(i) for i in lines]
    text = '\n'.join(lines)
    f = open(filename, 'w')
    f.write(text)
    f.close()
</code></pre>
</div>
<span class="comment-copy">add your "first attempt" to the question.</span>
<span class="comment-copy">Please add what you tried. Do you want to sort it based on both name and number or just number?</span>
<span class="comment-copy">I have added my first attempt. I want to sort it based on ascending number but want the final list to be name,number entries, if that makes sense.</span>
