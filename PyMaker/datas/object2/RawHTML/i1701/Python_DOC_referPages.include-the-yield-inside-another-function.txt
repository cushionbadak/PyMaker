<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6257644/python-generator-to-yield-everything-from-another-generator-call">Python generator to yield everything from another generator call</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I have two functions , <code>generatorA()</code> calls the <code>generatorB()</code> inside it. I want to get all the yield when calling the <code>generatorB()</code>, but I only get <code>0,1,2</code> 
how to get <code>0,1,2,3,4,5</code> </p>
<p><code>generatorA()</code> is a call back function. so I can't say, when It will be called.</p>
<pre><code>def generatorA():
    mylist = range(4,6)
    for i in mylist:
        yield i


def generatorB():
    generatorA()

    mylist = range(3)
    for i in mylist:
        yield i

for i in generatorB():
    print(i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>yield from</code>, and you can further shorten this with iterable unpacking.</p>
<pre><code>def generatorB():
    yield from (*range(3), *generatorA())
</code></pre>
<p>You could do the same thing to <code>generatorA</code>:</p>
<pre><code>def generatorA():
    yield from range(4,6)
</code></pre>
<p>(...But I assume that <code>generatorA</code> is a stand-in for something more complex.)</p>
<p></p>
<pre><code>&gt;&gt;&gt; list(create())
[0, 1, 2, 4, 5]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>yield from</code>:</p>
<pre><code>def generatorA():
    return range(4,6)  

def generatorB():
    mylist = range(3)
    for i in mylist:
        yield i

    yield from generatorA()

for i in generatorB():
    print(i)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>0
1
2
4
5
</code></pre>
</div>
<span class="comment-copy">@schwobaseggl I don't know Why they have marked as the duplicate. in my case my function isa call back function</span>
<span class="comment-copy">what do you mean by * in (*range(3), *generatorA())</span>
<span class="comment-copy">What if the generator is a call back function . Than I don't know when it will execute ? Don't we</span>
<span class="comment-copy">@BalakrishnanSathiyakugan that's the syntax for iterable unpacking. Also, what do you mean by call back in this context and why would it matter?</span>
<span class="comment-copy">I am using keras call back function to get the accuracy and losses for every ephos. so I update it in to the front end using yield and ajax call.</span>
<span class="comment-copy">@BalakrishnanSathiyakugan In that case you might want to look at <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow noreferrer"><code>asyncio</code></a>.</span>
<span class="comment-copy">What if the generator is a call back function .  Than I don't know when it will execute ? Don't we</span>
