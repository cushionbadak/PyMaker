<div class="post-text" itemprop="text">
<p>I'm rather new to programming, but what I want to do is basically this:<br/>
If I have 2 lists:</p>
<pre><code>ls1 = ("red", "red",  "red",  "black", "black", "black")
ls2 = ("red", "red", "black", "black", " red",   "red" )
</code></pre>
<p>I want to count how many of a specific item in <code>ls1</code> is equal to an item on the same position on <code>ls2</code>.</p>
<p>But the counting need to be separated for each item. I don't want the "total" of any matches, but specific for each string. So let's say I want to know how many "red" match. It would give me the answer 2, because the position [0] and [1] of both lists are "red". If I want "black" it would give me 1, since only in the position [3] both match as "black".</p>
<p>I tried to figure out by myself and did a lot of search in this forums but couldn't find an answer for this specific problem. I don't even know where to start. =/</p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li><p>To iterate a sequence in Python, you use a <a href="https://wiki.python.org/moin/ForLoop" rel="nofollow noreferrer">for-loop</a>.</p></li>
<li><p>To iterate two sequences in parallel,  you use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a>.</p></li>
<li><p>To store the results, use a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a>, which maps unique keys to values.</p></li>
<li><p>When you don't know if a key in a dict is present or not, you can supply a default value by using <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>dict.get</code></a>.</p></li>
</ul>
<p>Putting all these pieces together:</p>
<pre><code>&gt;&gt;&gt; d = {}
&gt;&gt;&gt; for s1, s2 in zip(ls1, ls2):
...     if s1 == s2:
...         d[s1] = d.get(s1, 0) + 1
...         
&gt;&gt;&gt; d
{'red': 2, 'black': 1}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As a follow up to <a href="https://stackoverflow.com/a/53232274/1822698">wim's answer</a>, you can also create a <a href="https://docs.python.org/2/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> from a list that only has elements that are equal at the same index:</p>
<pre><code>from collections import Counter

ls1 = ("red","red","red", "black","black", "black")
ls2 = ("red", "red", "black", "black", "red", "red")

c = Counter([x for x, y in zip(ls1, ls2) if x == y])
print(c) # Counter({'red': 2, 'black': 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The general approach is to <a href="https://www.w3schools.com/python/python_for_loops.asp" rel="nofollow noreferrer">iterate through the lists</a>, and increase the count of matches whenever you find one. Following is a solution in python with comments</p>
<pre><code>def getCounts(a, b):
    # Initialize counts
    counts = {}
    # Go through the lists together. Assumption: lists are of same size
    for i in range(len(a)):
        # If elements are equal, increase count
        if a[i] == b[i]:
           counts[a[i]] = counts.get(a[i], 0) + 1
    return counts
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In case you would like to count all occurrences without specifically items being at the corresponding index, Then this might help </p>
<pre><code>res = {}
for i in set(ls2):
    res[i] = ls1.count(i)
print(res)
{'black': 3, 'red': 3}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you can use a 3rd party library, here's a fun way with Pandas:</p>
<pre><code>import pandas as pd

ls1 = ("red", "red",  "red",  "black", "black", "black")
ls2 = ("red", "red", "black", "black", " red",   "red" )

s1 = pd.Series(ls1)
s2 = pd.Series(ls2)

res = s1.loc[s1 == s2].value_counts().to_dict()

{'black': 1, 'red': 2}
</code></pre>
</div>
<span class="comment-copy">Thanks a lot ! this is pretty much what i needed =)</span>
<span class="comment-copy">This is also very helpful. Thanks!</span>
<span class="comment-copy">Note you don't need to create a list, you can instead feed a generator expression: <code>Counter(x for x, y in zip(ls1, ls2) if x == y)</code>.</span>
