<div class="post-text" itemprop="text">
<p>I'm very new to programming. I need to create a function that takes any string and a fill character and returns a list of 8 character strings.
For example:</p>
<pre><code>&gt;&gt;&gt;segmentString("Hello, World!","-")
['Hello, W', 'orld!---']
</code></pre>
<p>As you can see, the string has 13 characters. The function splits into 2 strings, where the first contains 8 characters, and the second contains 5 characters and 3 fill characters.</p>
<p>So far, I've figured out how to do this for strings less than 8 characters, but not for more than 8 characters, where the string is split up, which is what I am stuck on.</p>
<pre><code>def segmentString(s1,x):
    while len(s1)&lt;8:
        s1+=x
    return s1
</code></pre>
<p>How do you split a string up?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a slightly modified version of <a href="https://stackoverflow.com/a/312464/9209546">this chunking recipe</a>:</p>
<pre><code>def chunks(L, n, char):
    for i in range(0, len(L), n):
        yield L[i:i + n].ljust(n, char)

res = list(chunks('Hello, World!', 8, '-'))

['Hello, W', 'orld!---']
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.ljust" rel="nofollow noreferrer"><code>str.ljust</code></a> performs the necessary padding.</p>
</div>
<div class="post-text" itemprop="text">
<p>A slightly modified version of @jpp's answer is to first pad the string with your fill character, so that the length is cleanly divisible by 8:</p>
<pre><code>def segmentString(s, c):
    s = s + c * (8 - len(s) % 8)
    return [s[i:i+8] for i in range(0, len(s), 8)]

&gt;&gt;&gt; segmentString("Hello, World!","-")
['Hello, W', 'orld!---']
</code></pre>
<p>And if you needed the size to be variable, you can just add in a size argument:</p>
<pre><code>def segmentString(s, c, size):
    s = s + c * (size - len(s) % size)
    return [s[i:i+size] for i in range(0,len(s),size)]

&gt;&gt;&gt; segmentString("Hello, World!","-",4)
['Hell', 'o, W', 'orld', '!---']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yet another possibility:</p>
<pre><code>def segmentString(s1, x):
    ret_list = []
    while len(s1) &gt; 8:
        ret_list.append(s1[:8])
        s1 = s1[8:]
    if len(s1) &gt; 0:
        ret_list.append(s1 + x*(8-len(s1)))
    return ret_list
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am also new to programming but I think you could use this...</p>
<pre><code>Word = "Hello, World!---"
print([Word[i:i+x] for i in range(0, len(Word), x)])
</code></pre>
<p>Just change x to whatever value you want..
Check out <a href="https://www.google.co.in/amp/s/www.geeksforgeeks.org/python-string-split/amp/" rel="nofollow noreferrer">https://www.google.co.in/amp/s/www.geeksforgeeks.org/python-string-split/amp/</a>
Hope it helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is the simple answer that you can understand that solves your problem with few simple ifs:</p>
<pre><code>a= 'abcdefghijklmdddn'

def segmentString(stuff):
    c=[]
    i=0
    hold=""

    for letter in stuff:
        i+=1
        hold+=letter

        if i%8==0:
            c.append(hold)
            hold=""

    c.append(hold)

    if hold=="":
        print(c)

    else:
        if hold==c[-1]:
            print(c)

        else:
            c.append(hold)
            print(c)
</code></pre>
</div>
<span class="comment-copy">Easier way to write the padding step: <code>yield x.ljust(n, char)</code>. No need to perform the calculations for required padding yourself over and over. And because it doesn't even need to know the original length of <code>x</code>, you could one-line the body of the loop to <code>yield L[i:i+n].ljust(n, char)</code></span>
<span class="comment-copy">@ShadowRanger, Good point, forgot about <code>str.ljust</code> !</span>
<span class="comment-copy">I think that the issue is that the word is not <code>"Hello, World!---"</code>, but <code>"Hello, World!"</code>, and it needs to be split into 8 character chunks, with <code>-</code> as a filler when the last chunk is not 8 characters long</span>
<span class="comment-copy">Still do not understand at all..</span>
