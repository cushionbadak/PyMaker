<div class="post-text" itemprop="text">
<p>I have a function that is a part of hangman, that gets two inputs</p>
<pre><code>filter_words_list(words, pattern):
</code></pre>
<p>I need a way to know that the letter in a word from the words in a specific spot, is identical
to the letter (that is uncovered) in the pattern and that those letters are IN THE SAME PLACE.
also, word and pattern ought to be in the same length</p>
<p>this is what ive tried:</p>
<pre><code>def filter_words_list(words, pattern):
    relevant_words = []
    for word in words:
        if len(word) == len(pattern):
            for i in range(len(word)):
                for j in range(len(pattern)):
                    if word[i] == pattern[j] and i == j:
                        relevant_words.append(word)
print(relevant_words)

filter_words_list(['aardvark', 'aardwolf', 'aaron', 'aback', 'abacus', 
'abaft', 'abalone'],'ab___',))
</code></pre>
<p>print: not good.. as you can see here:</p>
<pre><code>['aaron', 'aback', 'aback', 'abaft', 'abaft']
</code></pre>
<p>the print I need:</p>
<pre><code>['aback', 'abaft']
</code></pre>
<p>thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>something like this might work:</p>
<pre><code>words = ('aardvark', 'aardwolf', 'aaron', 'aback', 'abacus',
'abaft', 'abalone')

pattern = 'ab___'

def match(word, pattern):

    # also need to match the length?
    # if len(word) != len(pattern):
    #     return False

    for letter, p in zip(word, pattern):
        if p == '_':
            continue
        if letter != p:
            return False
    return True

matches = [word for word in words if match(word, pattern)]
print(matches)
</code></pre>
<p>it compares one letter of the word against one character of the pattern (using <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> in order to iterate over those pairs). it ignores if the character of the pattern is <code>'_'</code>.</p>
<p>as the function is written now it does not consider the length of either the word or the pattern.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you use <code>.</code> instead of <code>_</code> for your missing character then you've basically got a regular expression, eg:</p>
<pre><code>import re

words = ['aardvark', 'aardwolf', 'aaron', 'aback', 'abacus', 'abaft', 'abalone']
# starting with ab followed by exactly 3 characters ($ means match end of string)
wanted = [word for word in words if re.match('ab...$')]
#  ['aback', 'abaft']
# starting with ab followed by at least 3 characters (notice no $ here)
wanted2 = [word for word in words if re.match('ab...', word)]
# ['aback', 'abacus', 'abaft', 'abalone']
# starting with ab, followed by any letter, followed by "f", and exactly one letter
wanted3 = [word for word in words if re.match('ab.f.$', word)]
# ['abaft']
# etc...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Check the below code:</p>
<pre><code>def filter_words_list(words, pattern):
    relevant_words = []
    pat = pattern.replace("_","")
    for word in words:
        if word.startswith(pat):
            relevant_words.append(word)
    print(relevant_words)

filter_words_list(['aardvark', 'aardwolf', 'aaron', 'aback', 'abacus','abaft', 'abalone'],'ab___',)
</code></pre>
<p>Output:</p>
<pre><code>['aback', 'abacus', 'abaft', 'abalone']
</code></pre>
<p>Note: Its gonna work only in the case where the pattern is given such as it starts with certain characters. For e.g, it's not gonna work in case if the pattern is "__a_". Please edit your question if you need something like that.</p>
</div>
<div class="post-text" itemprop="text">
<p>This code will filter words that start with supplied pattern and are as long as that pattern (including "_" characters):</p>
<pre><code>def filter_words_list(words, pattern):
    pattern_len = len(pattern)
    pattern = pattern.split('_')[0]

    relevant_words = []
    for word in words:
        if len(word) == pattern_len and word.startswith(pattern):
            relevant_words.append(word)

    return relevant_words

words = ['aardvark', 'aardwolf', 'aaron', 'aback', 'abacus', 'abaft', 'abalone']
pattern = 'ab___'
print(filter_words_list(words, pattern)) # ['aback', 'abaft']
</code></pre>
</div>
<span class="comment-copy">what are you using for input? looks like the top line that is returned only has 1 error which is first aaron. Other match the ABA sequence</span>
<span class="comment-copy">@Austin only words with the same length it seems</span>
<span class="comment-copy">@Austin yeah... one or the other doesn't seem right - code with the <code>len</code> check implies it shouldn't be there though.... :)</span>
<span class="comment-copy">hey sry had a slight error there, edited it. anyway - aback and abaft shows, but two times. and also I get aaron (which shouldn't be there)</span>
<span class="comment-copy">Beautiful. The key insight for the OP would be to recognize that strings in python are iterables, and can be used in zips as a consequence.</span>
<span class="comment-copy">...that would have been my go-to as well!</span>
<span class="comment-copy">can you explain the startswitch part and pat? thanks</span>
<span class="comment-copy">Basically, what I am doing is fetching ab from the pattern "ab___". Now we have a method in python called as "startswith" which check if a string starts with the particular string. So in this case it checks if a word starts with "ab". Check out the startswith documentation : <a href="https://www.programiz.com/python-programming/methods/string/startswith" rel="nofollow noreferrer">programiz.com/python-programming/methods/string/startswith</a></span>
<span class="comment-copy">oh so it wouldnt work for a pattern that the string isnt at the start?</span>
<span class="comment-copy">can you explain the split part and the startswitch ?</span>
<span class="comment-copy">I used split here to remove part with "_" characters and have pure pattern, to later check if word starts with it.</span>
<span class="comment-copy">what if I want not only that it will start with, but will have it and only it ? for example, the words: catch fetch hatch, tache the pattern is <i>_tc</i> so the output will be catch fetch and hatch (withuot tache)</span>
