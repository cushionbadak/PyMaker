<div class="post-text" itemprop="text">
<p>I have a string variable like below.</p>
<pre><code>AKT= PDK1 &amp; ~ PTEN
AP1= JUN &amp; (FOS | ATF2)
Apoptosis= ~ BCL2 &amp; ~ ERK &amp; FOXO3 &amp; p53
ATF2= JNK | p38
ATM= DNA_damage
BCL2= CREB &amp; AKT
</code></pre>
<p>I want to remove <code>'&amp;'</code>, <code>'~'</code>, <code>'('</code>, <code>')'</code>, <code>'or'</code> and to list words left like below.</p>
<pre><code>AKT = ['PDK1', 'PTEN']
AP1 = ['JUN', 'FOS', 'ATF2']
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way you can do this,</p>
<pre><code>s = '''AKT= PDK1 &amp; ~ PTEN
AP1= JUN &amp; (FOS | ATF2)
Apoptosis= ~ BCL2 &amp; ~ ERK &amp; FOXO3 &amp; p53
ATF2= JNK | p38
ATM= DNA_damage
BCL2= CREB &amp; AKT'''


import re

final_list = []
for line in s.split('\n'):
    valid_words = re.findall(r'\w+', line)
    rhs = valid_words[0]
    lhs = valid_words[1:]
    final_list.append([rhs, lhs])

for item in final_list:
    print(item[0],'=', item[1])
</code></pre>
<p>Outputs:</p>
<pre><code>AKT = ['PDK1', 'PTEN']
AP1 = ['JUN', 'FOS', 'ATF2']
Apoptosis = ['BCL2', 'ERK', 'FOXO3', 'p53']
ATF2 = ['JNK', 'p38']
ATM = ['DNA_damage']
BCL2 = ['CREB', 'AKT']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could <code>split</code> and <code>join</code>, i.e.</p>
<pre><code>APT = APT.split('&amp;') #APT = ['PDK1', '~PTEN']
APT = join(APT)
APT = split('~')
APT = join(APT)
...
</code></pre>
</div>
<span class="comment-copy">Assuming your inputs are only letters, look at the <a href="https://docs.python.org/3/library/string.html#string.ascii_letters" rel="nofollow noreferrer"><code>string.ascii_letters</code></a> in python. Consider stripping all but these (<code>string.translate</code>) and then splitting all on spaces.</span>
<span class="comment-copy">Seems a bit congested but it can get you started <code>import re; ' '.join(re.split('&amp;|~|\(|\)|or',AKT)).split()</code></span>
<span class="comment-copy">This doesn't work, you can't call <code>join</code> or <code>split</code> just like that without a <code>str</code> object to operate on.</span>
