<div class="post-text" itemprop="text">
<p>I have a datarow in excel as </p>
<blockquote>
<p>'Ars','Cr','Assl','Burg','Consp' </p>
</blockquote>
<p>I want to convert it into nested dictionary like this</p>
<pre><code> data_dict.update({'name':'Ars','children':[{
                  'name':'Cr','children':[{
                  'name':'Assl','children':[{
                  'name':'Burg','children':[{
                  'name':'Consp','children':[{
                  'none'}]}]}]}]}]}
</code></pre>
<p>I am trying to write a recursive method to update my dictionary</p>
<pre><code>def update(row,idx,data_dict):
   if idx==len(row):
     return data_dict
  else:
     data_dict.update({'name':row[idx],'children':update(row,idx+1,{})}
</code></pre>
<p>I am pretty sure the last line is wrong but I cant figure out a way to create this structure</p>
<p>P.S updated the question to include square brackets
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer">reduce</a>:</p>
<pre><code>from functools import reduce

keys = ['Ars', 'Cr', 'Assl', 'Burg', 'Consp']

result = reduce(lambda x, y: {"name": y, "children": x}, reversed(keys), None)
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'name': 'Ars', 'children': {'name': 'Cr', 'children': {'name': 'Assl', 'children': {'name': 'Burg', 'children': {'name': 'Consp', 'children': None}}}}}
</code></pre>
<p><strong>UPDATE</strong></p>
<p>If you need brackets do the following:</p>
<pre><code>from functools import reduce

keys = ['Ars', 'Cr', 'Assl', 'Burg', 'Consp']

result = reduce(lambda x, y: {"name": y, "children": [x]}, reversed(keys), None)
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'name': 'Ars', 'children': [{'name': 'Cr', 'children': [{'name': 'Assl', 'children': [{'name': 'Burg', 'children': [{'name': 'Consp', 'children': [None]}]}]}]}]}
</code></pre>
<p>Basically just add brackets around <code>x</code> in the lambda function.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>l = ['Ars','Cr','Assl','Burg','Consp']

d_ = d = {}

for name, val in zip(l, l[1:]):
    d['name'] = val
    d['children'] = d = {}

d_
</code></pre>
<p>evaluates to</p>
<pre><code>{'name': 'Cr',
 'children': {'name': 'Assl',
  'children': {'name': 'Burg', 'children': {'name': 'Consp', 'children': {}}}}}
</code></pre>
</div>
<span class="comment-copy"><code>'children':{'none'}</code> is not a dictionary</span>
<span class="comment-copy">Assuming you have many rows like that and want to build a kind of tree structure. Wouldn't a structure like <code>{'Ars': {'Cr': {'Assl': {'Burg': {'Consp': None}}}}}</code> be more to the point? Otherwise you keep overriding the <code>name</code>.</span>
<span class="comment-copy"><code>reduce</code> is slicker than mine - nice</span>
<span class="comment-copy">Hi Daniel Thanks for the answer however I made one mistake i need to wrap children in '[]' square brackets. Can you please also help me with that</span>
<span class="comment-copy">Hi Rohit, could you add an example, to make it clear?</span>
<span class="comment-copy">@DanielMesejo done</span>
<span class="comment-copy">@Rohit Updated the answer!</span>
