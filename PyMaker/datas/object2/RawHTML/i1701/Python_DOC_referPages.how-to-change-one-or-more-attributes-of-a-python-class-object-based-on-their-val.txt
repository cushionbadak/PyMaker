<div class="post-text" itemprop="text">
<p>I want to create a Python class which stores the name, surname and grades of a student and checks whether the grades are in the correct range or not (0-10).</p>
<p>Is there any way to change the attributes which are greater than 10 to 0 (not one by one)?</p>
<pre><code>class Student:
    def __init__(self, name, lastName, programming, algebra,
             calculus, physics, writing):
        self.name = name
        self.lastName = lastName
        self.programming = programming
        self.algebra = algebra
        self.calculus = calculus
        self.physics = physics
        self.writing = writing
    def check(self):
        if self.programming or self.algebra or self.calculus or self.physics or self.writing not in range(11):
            #Change the value of the attributes which are &gt; 10 to 0
        #Is there any way to do it apart from this one?
        #if self.programming not in range(11):
            #self.programming = 0
        #if self.algebra not in range(11):
            #self.algebra = 0
         ................... 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use properties and setters and guard against wrong values inside the setters:</p>
<pre><code>class Student:
    def __init__(self, name, programming ):
        self.name = name
        self.programming = programming # using the setter so our business rule is applied

    @property
    def programming(self):
        return self._programming

    @programming.setter
    def programming(self,n):
        # apply the businessrule of n being in 1 to 10 else 0
        self._programming = n if 0 &lt; n &lt; 11 else 0


studs = [ Student("Enya",20), Student("Eric",0), Student("Karl",5)]

for s in studs:
    print(s.name, s.programming)
</code></pre>
<p>Output:</p>
<pre><code>Enya 0
Eric 0
Karl 5
</code></pre>
<p>Read more about @property's at <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer">python.org property() and @property</a></p>
</div>
<span class="comment-copy">Yes. See: <a href="https://stackoverflow.com/questions/11637293/iterate-over-object-attributes-in-python" title="iterate over object attributes in python">stackoverflow.com/questions/11637293/â€¦</a>. Alternatively, you could store all of those attributes in a dictionary <code>student.marks</code> and iterate over that</span>
<span class="comment-copy">I just add, that when using getter and setter, attribute <code>programming</code> per se should be (conventionally) "private", i.e. <code>self._programming = programming</code></span>
<span class="comment-copy">@MichalPolovka you cant name the backing variable of the getter the same - and I used the convention of one <code>_</code> thats by convention signifies "privateness" - so I do not quite get what you mean.</span>
<span class="comment-copy">@MichalPolovka  and the assignment in <code>__init__(self)</code> if purposefully using the property setter - so the buisinessrules are applied - you <i>can</i> use the private one directly but then you circumvent the setter buisiness rule implementation which would make it silly to use in the first place...</span>
