<div class="post-text" itemprop="text">
<p>I am not thoroughly sure in how GIL is implemented, but in theory, if I was to compile a python script into exe using <a href="https://www.pyinstaller.org/" rel="nofollow noreferrer">pyinstaller</a>, would it still have GIL implemented? Any way to bypass that?</p>
</div>
<div class="post-text" itemprop="text">
<p>GIL will be there, if you are using CPython (the "standard Python"). Pyinstaller does not compile, but <a href="https://pyinstaller.readthedocs.io/en/stable/operating-mode.html" rel="nofollow noreferrer">bundles the Python script, its dependencies, <strong>and the interpreter</strong></a> in use in the executable. Because of that the standard ways to bypass GIL apply:</p>
<ul>
<li>C extensions and <a href="https://cython.readthedocs.io/en/latest/src/userguide/external_C_code.html#nogil" rel="nofollow noreferrer">Cython code</a> may release the GIL while not manipulating interpreter state or Python objects, or <a href="https://docs.python.org/3/c-api/init.html#thread-state-and-the-global-interpreter-lock" rel="nofollow noreferrer">calling Python/C API functions</a>.</li>
<li>Divide the work between <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer">multiple processes</a>.</li>
</ul>
</div>
<span class="comment-copy">I was talking about standard Python.3 however. Would the executable be any faster if I used Cython?</span>
