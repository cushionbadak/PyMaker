<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/715417/converting-from-a-string-to-boolean-in-python">Converting from a string to boolean in Python?</a>
<span class="question-originals-answer-count">
                    27 answers
                </span>
</li>
</ul>
</div>
<p>Is there a way in python to parse the string <code>'True'</code> as <code>True</code> (boolean) and <code>'False'</code> as <code>False</code> (boolean)?</p>
<p>I know I could do <code>bool('True')</code> or <code>bool('False')</code> but each would be <code>True</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a>:</p>
<pre><code>&gt;&gt;&gt; import ast
&gt;&gt;&gt; ast.literal_eval('False')
False
</code></pre>
<p>If you do <code>type(ast.literal_eval('False'))</code>, you see <code>&lt;class 'bool'&gt;</code>:</p>
<pre><code>&gt;&gt;&gt; type(ast.literal_eval('False'))
&lt;class 'bool'&gt;
</code></pre>
<hr/>
<p>You could also write your own function that returns <code>'True'</code> as boolean <code>True</code>, <code>'False'</code> as boolean <code>False</code> and if you supply any other input, it returns the same back:</p>
<pre><code>def parse(string):
    d = {'True': True, 'False': False}
    return d.get(string, string)
</code></pre>
<p>Now, you call as:</p>
<pre><code>&gt;&gt;&gt; parse('True')
True
&gt;&gt;&gt; parse('False')
False
&gt;&gt;&gt; parse('Anything')
'Anything'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In this case I would not recommend <code>ast.literal_eval</code> or <code>eval</code>. The best thing to do is probably this:</p>
<pre><code>def parse_boolean(b):
    return b == "True"
</code></pre>
<p><code>"True"</code> will return <code>True</code> and <code>"False"</code> will return <code>False</code>.</p>
</div>
<span class="comment-copy">Take a look at <code>ast.literal_eval()</code>.</span>
<span class="comment-copy">Can’t test because I’m on my phone, can you use eval()?</span>
<span class="comment-copy">Look at @Austin's answer.</span>
<span class="comment-copy">Why not simply use <code>string == 'True'</code>?</span>
