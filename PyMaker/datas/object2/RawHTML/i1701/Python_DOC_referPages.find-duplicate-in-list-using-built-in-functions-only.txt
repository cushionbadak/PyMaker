<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/28202634/check-for-duplicates-in-a-python-list">check for duplicates in a python list</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I am a TOTAL Noob so please be gentle!</p>
<p>I have written this code:</p>
<pre><code>def sorted_has_duplicate(numbers):
     numbers.sort()
     duplicate = False

     for num in range(len(numbers)-1):
         if numbers[num] == numbers[num + 1]:
             duplicate = True
             break
     return duplicate
</code></pre>
<p>The code runs fine and it does what it is supposed to do which is find the first duplicate value in a list if any and return <code>True or False</code>.</p>
<p>My question is how can I have the same function perform the same task if the list is not sorted (sorting is not allowed) and i can only use built in python functions?</p>
</div>
<div class="post-text" itemprop="text">
<p>Collect nums in a <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer"><code>set</code></a> as you iterate:</p>
<pre><code>def has_duplicate(numbers):
     seen = set()
     for num in numbers:
         if num in seen:
             return True
         seen.add(num)
     return False
</code></pre>
<p>You can also shorten this down to:</p>
<pre><code>def has_duplicate(numbers):
     return len(numbers) != len(set(numbers))
</code></pre>
<p>This simply checks whether the <code>list</code> has as many elements as its <code>set</code> which by definition has no duplicates.</p>
<p>Note that both these set-based solutions run in linear time because of a set's <code>O(1)</code> contains-check. The naive brute force approach of searching for each element in the list remainder</p>
<pre><code>def has_duplicate(numbers):
     for i, num in enumerate(numbers):
         if num in numbers[i+1:]:
             return True
     return False
</code></pre>
<p>is quadratic because of a list's <code>O(N)</code> contains-check.</p>
</div>
<span class="comment-copy">For each item in the list, check if that item occurs elsewhere in the remainder of the list.  If so, it's a duplicate.</span>
<span class="comment-copy">You could use <code>numbers.count(num)</code> as a good option</span>
<span class="comment-copy">The duplicate I identified <i>also</i> ignores/removes 0 and None values; you don't need that functionality.  The remaining solution is equivalent to the one answer you got.</span>
