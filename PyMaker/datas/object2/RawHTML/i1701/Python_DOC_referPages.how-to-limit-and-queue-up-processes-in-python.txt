<div class="post-text" itemprop="text">
<p>Lets say I have 10000 tasks at hand. How can I process them in parallel, running precisely 8 processes at any time? The moment a task is finished, the next task should be fetched for execution immediately.</p>
<pre><code>for e in arr:
   pr=Process(target=execute, args=(q,e))
   pr.start()
   pr.join()
</code></pre>
<p>I want to do this because my CPU has only 8 hardware threads. Swarming it with 10000 tasks at once will slow down the overall computation due to the switching overhead. My memory is also limited.</p>
<p>(<strong><em>Edit</em></strong>: This is not a duplicate of <a href="https://stackoverflow.com/questions/51814897/how-to-process-a-list-in-parallel-in-python">this question</a> as I am not asking how to fork a process.)</p>
</div>
<div class="post-text" itemprop="text">
<p>I think if you split the "for" loop for join statement your problem might be solved. Right now you start a fork and want the result to come back and go do another fork process. And no fork is closed right now. </p>
<pre><code>for e in arr:
   pr=Process(target=execute, args=(q,e))
   pr.start()

for e in arr: 
   pr.join()
</code></pre>
<p>Or just go with pool and map functions. </p>
</div>
<div class="post-text" itemprop="text">
<p>For Pool to work here I need to call get() too.</p>
<pre><code>from multiprocessing import Pool
pl=[]
pool = Pool(8)
for e in arr:
   pl.append(pool.apply_async(execute, (e))
for pl2 in pl: pl2.get() 
</code></pre>
</div>
<span class="comment-copy">Look at the <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.pool.Pool" rel="nofollow noreferrer">Pool classes in the docs</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/51814897/how-to-process-a-list-in-parallel-in-python">How to process a list in parallel in Python?</a></span>
<span class="comment-copy">I don't think it is a duplicate of that question, as I am not asking how to fork a process. Anyway, Pool is probably the solution to my problem. Thanks, James!</span>
<span class="comment-copy">I am going for Pool.</span>
