<div class="post-text" itemprop="text">
<p>I am writing a simple secret santa script that selects a "GiftReceiver" and a "GiftGiver" from a list. Two lists and an empty dataframe to be populated are produced:</p>
<pre><code>import pandas as pd
import random

santaslist_receivers = ['Rudolf',
        'Blitzen',
        'Prancer',
        'Dasher',
        'Vixen',
        'Comet'
        ]

santaslist_givers = santaslist_receivers

finalDataFrame = pd.DataFrame(columns = ['GiftGiver','GiftReceiver'])
</code></pre>
<p>I then have a while loop that selects random elements from each list to pick a gift giver and receiver, then remove from the respective list:</p>
<pre><code>while len(santaslist_receivers) &gt; 0:

    print (len(santaslist_receivers)) #Used for testing.

    gift_receiver = random.choice(santaslist_receivers)
    santaslist_receivers.remove(gift_receiver)

    print (len(santaslist_receivers)) #Used for testing.

    gift_giver = random.choice(santaslist_givers)
    while gift_giver == gift_receiver:                      #While loop ensures that gift_giver != gift_receiver
        gift_giver = random.choice(santaslist_givers)

    santaslist_givers.remove(gift_giver)

    dummyDF = pd.DataFrame({'GiftGiver':gift_giver,'GiftReceiver':gift_receiver}, index = [0])

    finalDataFrame = finalDataFrame.append(dummyDF)
</code></pre>
<p>The final dataframe only contains three elements instead of six:</p>
<pre><code>print(finalDataframe)
</code></pre>
<p>returns</p>
<pre><code>    GiftGiver GiftReceiver
0    Dasher      Prancer
0     Comet        Vixen
0    Rudolf      Blitzen
</code></pre>
<p>I have inserted two print lines within the while loop to investigate. These print the length of the list santaslist_receivers before and after the removal of an element. The expected return is to see original list length on the first print, then minus 1 on the second print, then the same length again on the first print of the next iteration of the while loop, then so on. Specifically I expect:</p>
<pre><code>6,5,5,4,4,3,3... and so on.
</code></pre>
<p>What is returned is</p>
<pre><code>6,5,4,3,2,1
</code></pre>
<p>Which is consistent with the DataFrame having only 3 rows, but I do not see the cause of this.</p>
<p>What is the error in my code or my approach?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can solve it by simply changing this line</p>
<pre><code>santaslist_givers = santaslist_receivers
</code></pre>
<p>to </p>
<pre><code> santaslist_givers = list(santaslist_receivers)
</code></pre>
<p>Python variables are pointers essentially so they refer to the same list , ie <code>santaslist_givers</code> and <code>santaslist_receivers</code> were accessing the same location in memory in your implementation . To make them different use a <code>list</code> function </p>
<p>And for some extra information , you can refer <a href="https://docs.python.org/3/library/copy.html" rel="nofollow noreferrer"><code>copy.deepcopy</code></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You should make an explicit copy of your list here</p>
<pre><code>santaslist_givers = santaslist_receivers
</code></pre>
<p>there are multiple options for doing this as explained in <a href="https://stackoverflow.com/questions/2612802/how-to-clone-or-copy-a-list">this question</a>.</p>
<p>In this case I would recommend (if you have Python &gt;= 3.3):</p>
<pre><code>santaslist_givers = santaslist_receivers.copy()
</code></pre>
<p>If you are on an older version of Python, the typical way to do it is:</p>
<pre><code>santaslist_givers = santaslist_receivers[:]
</code></pre>
</div>
<span class="comment-copy">Mandatory reading: <a href="https://nedbatchelder.com/text/names.html" rel="nofollow noreferrer">nedbatchelder.com/text/names.html</a></span>
