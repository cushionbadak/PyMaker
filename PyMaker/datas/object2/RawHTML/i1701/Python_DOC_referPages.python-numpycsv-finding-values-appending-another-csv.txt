<div class="post-text" itemprop="text">
<p>I have found other posts very closely related to this, but they are not helping. </p>
<p>I have a Master CSV file, and I need to find specific 'string' from the third column. Shown below:</p>
<pre><code>Name,ID,Title,Date,Prj1_Assigned,Prj1_closed,Prj2_assigned,Prj2_solved
Joshua Morales,MF6B9X,Tech_Rep, 08-Nov-2016,948,740,8,8
Betty García,ERTW77,SME, 08-Nov-2016,965,854,15,12
Kathleen Marrero,KTD684,Probation, 08-Nov-2016,946,948,na,na
Mark León,GSL89D,Tech_Rep, 08-Nov-2016,951,844,6,4
</code></pre>
<p>The ID column is unique, and so I was trying to find 'KTD684'(for expample). Once found, I need to export the values of "Date", "Prj1_Assigned", "Prj1_closed", "Prj2_assigned" and "Prj2_solved".</p>
<p>The export would be to a file 'KTD684.csv'(same as ID) where there is already headers available 'Date,Prj1_Assigned,Prj1_closed,Prj2_assigned,Prj2_solved'</p>
<p>So far (as I am a non-programmer) I have not been able to draft this, but can one please be kind to guide me in:</p>
<ol>
<li>Finding the row with the element 'KTD684'.</li>
<li>Selecting the values of the below from that row:
['Date,Prj1_Assigned,Prj1_closed,Prj2_assigned,Prj2_solved']</li>
<li>Appending the file with the ID name itself please('KTD684.csv')</li>
</ol>
<p>I need to perform this for 45 userIDs, and now with hiring in company, its 195. I tried to write excel macro(didn't work either), but I feel python is most reliable.</p>
<p>I know I need to at least show the basic progress, but after over 2 months of trying to learn from someone, I'm still unable to find the element in this csv.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is an ideal use-case for <a href="https://pandas.pydata.org/pandas-docs/stable/index.html" rel="nofollow noreferrer"><code>pandas</code></a>:</p>
<pre><code>import pandas as pd

id_list = ['KTD684']

df = pd.read_csv('input.csv')
# Only keep values that are in 'id_list'
df = df[df['ID'].isin(id_list)]

gb = df.groupby('ID')
for name, group in gb:
    with open('{}.csv'.format(name), 'a') as f:
        group.to_csv(f, header=False, index=False,
                     columns=["Date", "Prj1_Assigned", "Prj1_closed",
                             "Prj2_assigned", "Prj2_solved"])
</code></pre>
<p>This will open the CSV, only select rows that are in your list (<code>id_list</code>), group by the values in the <code>ID</code> column and save individual CSV files for each unique <code>ID</code>. You just need to expand <code>id_list</code> to have the ids you are interested in.</p>
<hr/>
<h3>Extended example:</h3>
<p>Reading in the CSV results in a DataFrame object like this:</p>
<pre><code>df = pd.read_csv('input.csv')
               Name      ID      Title          Date  Prj1_Assigned  \
0    Joshua Morales  MF6B9X   Tech_Rep   08-Nov-2016            948
1      Betty García  ERTW77        SME   08-Nov-2016            965
2  Kathleen Marrero  KTD684  Probation   08-Nov-2016            946
3         Mark León  GSL89D   Tech_Rep   08-Nov-2016            951

   Prj1_closed Prj2_assigned Prj2_solved
0          740             8           8
1          854            15          12
2          948            na          na
3          844             6           4
</code></pre>
<p>If you just select <code>KTD684</code> and <code>GSL89D</code>:</p>
<pre><code>id_list = ['KTD684', 'GSL89D']
df = df[df['ID'].isin(id_list)]
               Name      ID      Title          Date  Prj1_Assigned  \
2  Kathleen Marrero  KTD684  Probation   08-Nov-2016            946
3         Mark León  GSL89D   Tech_Rep   08-Nov-2016            951

   Prj1_closed Prj2_assigned Prj2_solved
2          948            na          na
3          844             6           4
</code></pre>
<p>The <code>groupby</code> operation groups on <code>ID</code> and export each unique ID to a CSV file resulting in:</p>
<pre><code>KTD684.csv
Date,Prj1_Assigned,Prj1_closed,Prj2_assigned,Prj2_solved
08-Nov-2016,946,948,na,na

GSL89D.csv
Date,Prj1_Assigned,Prj1_closed,Prj2_assigned,Prj2_solved
08-Nov-2016,951,844,6,4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand your problem correctly; You need to read from 2 input files:</p>
<ul>
<li><p>1 containing the users IDs you are looking for </p></li>
<li><p>2 containing the project data related to users</p></li>
</ul>
<p>In that fashion something like this would find all the users you specify in 1 in file 2 and write them out to result.csv</p>
<blockquote>
<p>Sepicify your search IDs in search_for.csv. Keep in mind that this
  will revrite your result.csv every time you run it.</p>
</blockquote>
<pre><code>import csv
import sys
import os


inputPatterns = open(os.curdir + '/search_for.csv', 'rt')

# Reader for the IDs (users) you are looking to find (key)
reader = csv.reader(inputPatterns)

ids = []

# reading the IDs you are looking for from search_for.csv
for row in reader:
    ids.append(row[0])
inputPatterns.close()

# Let's see if any of the user IDs we are looking for has any project related info
# if so write them to your output CSV
for userID in ids:
    # Organization list with names and Company ID and reader
    userList = open(os.curdir + '/users.csv', 'rt')
    reader = csv.reader(userList)

    # This will be the output file
    result_f = open(os.curdir + "/" + userID + ".csv", 'w')
    w = csv.writer(result_f)
    # Writing header information
    w.writerow(['Date', 'Prj1_Assigned', 'Prj1_closed', 'Prj2_assigned', 'Prj2_solved'])

    # Scanning for projects for user and appending them
    for row in reader:
        if userID == row[1]:
            w.writerow([row[3], row[4], row[5], row[6], row[7]])
    result_f.close()
    userList.close()
</code></pre>
<p>For example, <strong>search_for.csv</strong> looks like this</p>
<p><a href="https://i.stack.imgur.com/IWRWF.png" rel="nofollow noreferrer"><img alt="if your search_for.csv looks like this" src="https://i.stack.imgur.com/IWRWF.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a pure python approach which reads the master <code>.csv</code> file with <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer"><code>csv.DictReader</code></a>, matches the ids, and appends the file data into a new or existing <code>.csv</code> file with <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer"><code>csv.DictWriter()</code></a>:</p>
<pre><code>from csv import DictReader
from csv import DictWriter

from os.path import isfile

def export_csv(user_id, master_csv, fieldnames, key_id, extension=".csv"):
    filename = user_id + extension
    file_exists = isfile(filename)

    with open(file=master_csv) as in_file, open(
        file=filename, mode="a", newline=""
    ) as out_file:

        # Create reading and writing objects
        csv_reader = DictReader(in_file)
        csv_writer = DictWriter(out_file, fieldnames=fieldnames)

        # Only write header once
        if not file_exists:
            csv_writer.writeheader()

        # Go through lines and match ids
        for line in csv_reader:
            if line[key_id] == user_id:

                 # Modify line and append to file
                line = {k: v.strip() for k, v in line.items() if k in fieldnames}
                csv_writer.writerow(line)
</code></pre>
<p>Which can be called like this:</p>
<pre><code>export_csv(
    user_id="KTD684",
    master_csv="master.csv",
    fieldnames=["Date", "Prj1_Assigned", "Prj1_closed", "Prj2_assigned", "Prj2_solved"],
    key_id="ID",
)
</code></pre>
<p>And produces the following <em>KTD684.csv</em>:</p>
<pre><code>Date,Prj1_Assigned,Prj1_closed,Prj2_assigned,Prj2_solved
08-Nov-2016,946,948,na,na
</code></pre>
</div>
<span class="comment-copy">So for ID = KTD684 you want to write "Mark León,GSL89D,Tech_Rep, 08-Nov-2016,951,844,6,4" into a file called "KTD684.csv", is this correct?</span>
<span class="comment-copy">dear Jonathan, yes please, I would need the data pertaining to the specific ID: 08-Nov-2016,951,844,6,4</span>
<span class="comment-copy">Dear Alex, thanks so much for offering your take on this.. I find the following error please    File "&lt;ipython-input-5-e4be53771aeb&gt;", line 4     header=["Date", "Prj1_Assigned", "Prj1_closed",     ^ SyntaxError: keyword argument repeated  [This could be something minor, or maybe even my mistake, but I've been hustling with this since a while]</span>
<span class="comment-copy">I’ve updated the answer, I accidentally duplicated a parameter.</span>
<span class="comment-copy">Thankss a tonn Alex...It really worked well... :) :) :)</span>
<span class="comment-copy">I'm glad it worked, take a look at the <a href="https://pandas.pydata.org/pandas-docs/stable/index.html" rel="nofollow noreferrer">pandas docs</a> to get an idea of what you can do with the library. If you get stuck you can ask at the <a href="https://stackoverflow.com/questions/tagged/pandas">pandas tag</a>.</span>
<span class="comment-copy">Dear Gabor, thanks so very much for providing your solution on this. But when I execute the code, this gives me output files with the usernames as you had mentioned. Actually hoped it would be ID names(.csv), moreover, the output csv files, are only having the headers in them, but there are no data pertaining to them <i>MF6B9X,Tech_Rep, 08-Nov-2016,948,740,8,8</i> ... kindly help me with the steps of: [1]Opening Master file(Trials.csv) - [2]Finding the exact column where 'KTD684' is available - [3]Appending the(already existing KTD684.csv with the 5 values from Date... in the next available row pls</span>
<span class="comment-copy">Hi Lokkii, Yes I misunderstood your question in the first version. This version was uploaded before your comment and should do exactly what you are looking for. I'm also new to StackOverflow so I didn't know that I need to notify you on update :) But just to clarify. If you use input files: <b>search_for.csv</b> and <b>users.csv</b> (instead of Trials.csv) in the same directory as this python file. It should work as desired; Creates useID.csv files. I see you already accepted an answer so the problem is solved. One note: This problem can be solved in excel pivot table very quickly.</span>
<span class="comment-copy">Hi Gabor :) thanks soo very much for this..It does work perfectly well... :) Appreciate your time!</span>
<span class="comment-copy">Dear RoadRunner, thanks really for taking time on this one..kindly find this error which seems to be coming when I execute this. **TypeError                                 Traceback (most recent call last) &lt;ipython-input-7-3ae7e09af9ad&gt; in &lt;module&gt;()       3     master_csv="master.csv",       4     columns=["Date", "Prj1_Assigned", "Prj1_closed", "Prj2_assigned", "Prj2_solved"], ----&gt; 5     key_id="ID",       6 )  TypeError: export_csv() got an unexpected keyword argument 'columns' **  Is there any way around for this please..</span>
<span class="comment-copy">@Lokkii9 No problem. I updated the answer.</span>
<span class="comment-copy">Very Grateful for this RoadRunner...sorry for the late response... :) :) :)</span>
