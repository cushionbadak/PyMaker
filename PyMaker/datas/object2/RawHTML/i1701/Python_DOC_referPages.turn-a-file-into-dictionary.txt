<div class="post-text" itemprop="text">
<p>I'm really new into Python and I have a question. I need to convert a file containing morse code alphabet. It's a file with a single string and it looks like this (<code>A2.-B4-...C4-.-.D3-..</code>). I'm thinking that I should be able to create a dictionary out of this file but I'm not sure how. Do you guys have any idea?</p>
</div>
<div class="post-text" itemprop="text">
<p>This approach uses regular expression to parse your entire string and convert it to <code>dict</code> directly:</p>
<pre><code>import re

with open('yourfile.txt') as f:
    data = f.read()

morse = dict(re.findall(r'(\w)\d+([-.]+)', data))
print(morse)
</code></pre>
<p>The results for your example data:</p>
<pre><code>{'A': '.-', 'C': '-.-.', 'B': '-...', 'D': '-..'}
</code></pre>
<p>Here's a short explanation of the regular expression:</p>
<ul>
<li><code>(\w)</code> parens means we want to capture this part, <code>\w</code> means <em>any alphanumeric</em></li>
<li><code>\d+</code> here, <code>\d</code> means <em>any digit</em> and the <code>+</code> sign means <em>one or more</em></li>
<li><code>([-.]+)</code> parens again means we want to capture this part, <code>[-.]</code> means we want <code>.</code> or <code>-</code> and the <code>+</code> again means we want one or more of those.</li>
</ul>
<p>For more regular expression explanation I suggest reading <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer"><em>"Regular Expression HOWTO" by A. M. Kuchling</em></a>, excellent read.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you open files in Python, they can be read line by line like so:</p>
<pre><code>d = {} # Init empty dict
with open("file.txt", "r") as file: # This manages the open/close, IO mode, et cetera
    for line in file: # Iterates through the file line by line
        # Now the variable line represents a string for that line
        sline = line.split("-")
        d[sline[0]] = sline[1]
</code></pre>
<p>In the last two lines of this example I assume that you want a dict where the key (lookup) always sits before "-" on each line, and the value (to be looked up) is always after. On this assumption I <code>line.split("-")</code> and then assign those keys and values to dict <code>d</code> with <code>d[sline[0]] = sline[1]</code>. If you adopt this solution but have problems with this part of the solution, I think that might warrant a separate question.</p>
</div>
<span class="comment-copy">Welcome to Stackoverflow! Would you like to post some data formatted as they are in your file and give us an example of desired output?</span>
<span class="comment-copy">I can't see your screen from here, can you post what you have tried, what the file looks like, what you want the output to be, what you want the directory to be?</span>
<span class="comment-copy">Wow, this looks really elegant! I've never heard about regular expression... but it looks like a really good tool to handle different patterns in text. I've tried google to understand what r'(\w)\d+([-.]+)' means but I don't fully understand it. Could you please explain what different parts of mention code mean? I'm really thankful for your help :)</span>
<span class="comment-copy">@gdom I have added a short explanation of the regular expression, and a link to a more detailed regular expression text for beginners. If my answer is good for you, please consider marking it as accepted to close the question.</span>
