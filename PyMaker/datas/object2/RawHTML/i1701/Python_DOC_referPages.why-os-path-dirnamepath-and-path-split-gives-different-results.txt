<div class="post-text" itemprop="text">
<p>According to <a href="https://docs.python.org/3/library/os.path.html#os.path.dirname" rel="nofollow noreferrer">official documentation</a> os.path.dirname(path) returns first element of the pair returned by passing path to the function split(). But, when I try to call code below, I get another result:</p>
<pre><code>os.path.dirname('C:/Polygon/id/folder/folder')
</code></pre>
<blockquote>
<p>'C:/Polygon/id/folder'</p>
</blockquote>
<pre><code>'C:/Polygon/id/folder/folder'.split()
</code></pre>
<blockquote>
<p>['C:/Polygon/id/folder/folder']</p>
</blockquote>
<p>But, if I add one extra slash to the end of line:</p>
<pre><code>os.path.dirname('C:/Polygon/id/folder/folder/')
</code></pre>
<blockquote>
<p>'C:/Polygon/id/folder/folder'</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You're calling the <code>str.split()</code> method instead of <code>os.path.split()</code>, which instead of splitting with the <code>os.path.sep</code> delimiter, is splitting the whitespace (which there are none in your string, hence, no splits).</p>
<p>Observer the differences:</p>
<pre><code>p = 'C:/Polygon/id/folder/folder'

os.path.dirname(p)    # dirname method of os.path
# 'C:/Polygon/id/folder'

os.path.split(p)      # split method of os.path
#('C:/Polygon/id/folder', 'folder')

p.split()             # split method of str object with space
# ['C:/Polygon/id/folder/folder']

p.split('/')          # split method of str object with '/'      
# ['C:', 'Polygon', 'id', 'folder', 'folder']
</code></pre>
<p>To answer your other question: the <code>os.path.split()</code> is basically the same as follows:</p>
<pre><code>('/'.join(p.split('/')[:-1]), p.split('/')[-1])
# i.e. tuple of (everything but the last element, the last element)
# ('C:/Polygon/id/folder', 'folder')
</code></pre>
<p>So when you <code>split()</code> the <code>'/'</code> in the string, the last element becomes an empty string because nothing follows the last <code>'/'</code>.  Hence:</p>
<pre><code>os.path.split(p)          
# ('C:/Polygon/id/folder/folder', '')

('/'.join(p.split('/')[:-1]), p.split('/')[-1]) 
# ('C:/Polygon/id/folder/folder', '')

os.path.dirname(p)      
# since it returns the first element of os.path.split():
# 'C:/Polygon/id/folder/folder'
</code></pre>
</div>
<span class="comment-copy">does it still do the same thing if you have say 'C:/Polygon/id/folder/whatever' instead of double folder?</span>
<span class="comment-copy">@Brent yes, result will be the same</span>
<span class="comment-copy">Thank you @Idlehands</span>
