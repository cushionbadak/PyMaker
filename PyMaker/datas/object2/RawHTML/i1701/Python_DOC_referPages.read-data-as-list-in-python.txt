<div class="post-text" itemprop="text">
<pre><code>     x       y
[133,28,23] female
[157,22,87] male
[160,33,77] male
[122,87,20] female
[120,22,20] female
</code></pre>
<p>This is the data that i have in my book.csv file.</p>
<pre><code>&gt;&gt;fd=pandas.read_csv("C://users/admin/Desktop/Book1.csv")
&gt;&gt;l1=[h for h in fd.x]
</code></pre>
<p>After following commands, <code>l1</code> stores this value:</p>
<pre><code>['[133,28,23]', '[157,22,87]', '[160,33,77]', '[122,87,20]', '[120,22,20]']
</code></pre>
<p>The following output is string in list format, but i want nested list like this:</p>
<pre><code>[[133,28,23],[157,22,87],[160,33,77],[122,87,20],[120,22,20]]
</code></pre>
<p>What changes do I need to make?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do the following, using <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer">ast.literal_eval</a>:</p>
<pre><code>import pandas as pd
import ast

data = [['[133,28,23]', 'female'],
        ['[157,22,87]', 'male'],
        ['[160,33,77]', 'male'],
        ['[122,87,20]', 'female'],
        ['[120,22,20]', 'female']]

df = pd.DataFrame(data=data, columns=['x', 'y'])
df['x'] = df['x'].apply(ast.literal_eval)
result = df['x'].tolist()

print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[[133, 28, 23], [157, 22, 87], [160, 33, 77], [122, 87, 20], [120, 22, 20]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use json:</p>
<pre><code>&gt;&gt; import json
&gt;&gt; fd=pandas.read_csv("C://users/admin/Desktop/Book1.csv")
&gt;&gt; l1=[json.loads(h) for h in fd.x]
[[133,28,23],[157,22,87],[160,33,77],[122,87,20],[120,22,20]]
</code></pre>
<p>Or ast</p>
<pre><code>&gt;&gt; import ast
&gt;&gt; fd=pandas.read_csv("C://users/admin/Desktop/Book1.csv")
&gt;&gt; l1=[ast.literal_eval(h) for h in fd.x]
&gt;&gt; [[133,28,23],[157,22,87],[160,33,77],[122,87,20],[120,22,20]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One simple way, if you don't want to resort to <code>ast</code> (for example to avoid parsing something that is not a list):</p>
<pre><code>from io import StringIO

inp = """     x       y
[133,28,23] female
[157,22,87] male
[160,33,77] male
[122,87,20] female
[120,22,20] female"""

# Read data
df = pd.read_csv(StringIO(inp), delim_whitespace=True, header=0)
# Remove brackets, split and convert to int
df.x = df.x.map(lambda el: list(map(int, el.strip()[1:-1].split(','))))
# Print
l1 = [h for h in df.x]
print(l1)
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>[[133, 28, 23], [157, 22, 87], [160, 33, 77], [122, 87, 20], [120, 22, 20]]
</code></pre>
</div>
<span class="comment-copy">data.x.tolist()</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1894269/convert-string-representation-of-list-to-list">Convert string representation of list to list</a></span>
<span class="comment-copy">still the same                                                                                                  &gt;&gt;&gt; fd.x.tolist()  ['[133,28,23]', '[157,22,87]', '[160,33,77]', '[122,87,20]', '[120,22,20]']</span>
