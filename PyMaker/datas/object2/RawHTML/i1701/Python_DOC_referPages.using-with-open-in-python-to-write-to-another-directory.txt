<div class="post-text" itemprop="text">
<p>I want to do the following:</p>
<p>1) Ask the user for input for a file path they wish a directory listing for.
2) Take this file path and enter the results, in a list, in a text file in the directory they input NOT the current directory. </p>
<p>I am very nearly there but the last step is that I can't seem to save the file to the directory the user has input only the current directory. I have set out the current code below (which works for the current directory). I have tried various variations to try and save it to the directory input by the user but to no avail - any help would be much appreciated. </p>
<p>CODE BELOW</p>
<pre><code>import os

filenames = os.path.join(input('Please enter your file path: '))
with open ("files.txt", "w") as a:
    for path, subdirs, files in os.walk(str(filenames)):
       for filename in files:
         f = os.path.join(path, filename)
         a.write(str(f) + os.linesep)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I came across this link <a href="https://cmdlinetips.com/2012/09/three-ways-to-write-text-to-a-file-in-python/" rel="nofollow noreferrer">https://cmdlinetips.com/2012/09/three-ways-to-write-text-to-a-file-in-python/</a>. I think your issue has something to do with you needing to provide the full path name and or the way you are using the close() method.</p>
<pre><code>with open(out_filename, 'w') as out_file:
     .. 
     .. 
     .. parsed_line
     out_file.write(parsed_line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to alter the <code>with open ("files.txt", "w") as a:</code> statement to not only include the filename, but also the path. This is where you should use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join()</code></a>. Id could be handy to first check the user input for existence with <a href="https://docs.python.org/3/library/os.path.html#os.path.exists" rel="nofollow noreferrer"><code>os.path.exists(filepath)</code></a>.</p>
<p><a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer"><code>os.path.join(input(...))</code></a> does not really make sense for the <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer"><code>input</code></a>, since it returns a single <code>str</code>, so there are no separate things to be joined.</p>
<pre><code>import os

filepath = input('Please enter your file path: ')
if os.path.exists(filepath):
    with open (os.path.join(filepath, "files.txt"), "w") as a:
        for path, subdirs, files in os.walk(filepath):
            for filename in files:
                f = os.path.join(path, filename)
                a.write(f + os.linesep)
</code></pre>
<p>Notice that your file listing will always include a <code>files.txt</code>-entry, since the file is created before <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk()</code></a> gets the file list.</p>
<p>As ShadowRanger kindly points out, this LBYL (look before you leap) approach is unsafe, since the existence check could pass, although the file system is changed later while the process is running, leading to an exception.</p>
<p>The mentioned EAFP (it's easier to ask for forgiveness than permission) approach would use a <code>try... except</code> block to handle all errors.</p>
<p>This approach could look like this:</p>
<pre><code>import os

filepath = input('Please enter your file path: ')
try:
    with open (os.path.join(filepath, "files.txt"), "w") as a:
        for path, subdirs, files in os.walk(filepath):
            for filename in files:
                f = os.path.join(path, filename)
                a.write(f + os.linesep)
except:
    print("Could not generate directory listing file.")
</code></pre>
<p>You should further refine it by catching specific <a href="https://docs.python.org/3/library/exceptions.html#built-in-exceptions" rel="nofollow noreferrer">exceptions</a>. The more code is in the <code>try</code> block, the more errors unrelated to the directory reading and file writing are also caught and suppressed.</p>
</div>
<div class="post-text" itemprop="text">
<p>Move to the selected directory then do things.</p>
<p>Extra tip: In python 2 use raw_input to avoid special chars error like <code>:</code> or <code>\</code> ( just use <code>input</code> in python 3 )</p>
<pre><code>import os

filenames = raw_input('Please enter your file path: ')
if not os.path.exists(filenames):
    print 'BAD PATH'
    return
os.chdir(filenames)
with open ("files.txt", "w") as a:
    for path, subdirs, files in os.walk('.'):
        for filename in files:
            f = os.path.join(path, filename)
            a.write(str(f) + os.linesep)
</code></pre>
</div>
<span class="comment-copy">This doesn't put the file in the directory provided as the OP specified, it uses LBYL design rather than EAFP (so it's racy for no real gain), and it won't even run, because you used a non-existent name.</span>
<span class="comment-copy">Thanks for your kind suggestion, @ShadowRanger, i have updated my post.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/2to3.html#2to3fixer-raw_input" rel="nofollow noreferrer"><code>raw_input</code></a> is needed for Python 2.x, in Python 3.x <code>input</code> is sufficient. Also, to my understanding the "files.txt" should be saved to the same folder that is listed. Your code does not do that. The original approach to provide <code>os.walk</code> with the full filename already lists the files in the correct path.</span>
<span class="comment-copy">Oh you are right!, Then we can just move to the final directory before opening the file. About the python version i'll point it out in my answer</span>
