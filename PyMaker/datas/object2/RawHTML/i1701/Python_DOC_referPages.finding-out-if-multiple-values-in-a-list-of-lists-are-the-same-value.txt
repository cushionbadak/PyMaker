<div class="post-text" itemprop="text">
<p>This is my problem:</p>
<p>I have a list of lists (adjoining) that is setup of x and y coordinates.</p>
<p>I'm trying to create a function that can figure out which way to go, that should return a single element from that list. </p>
<p>That return value will be the direction the character moves.</p>
<p><em>(Example: adjoining = [[1, 0], [3, 2], [1, 1]]. Return returns the smallest both x and y coordinate which is [1, 0].)</em></p>
<p><strong>My function should return the value with the lowest x coordinate. If there are multiple x coordinates that have the same low value, the one with the lowest y coordinate should be chosen.</strong></p>
<p>How can I create a function that can figure out which x and y value is lowest?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use min() like so:</p>
<pre><code>&gt;&gt;&gt; adjoining = [[3,2],[1,1],[1,0]]
&gt;&gt;&gt; min(adjoining)
[1, 0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this:</p>
<pre><code>minimum = min(adjoining, key=lambda elem: (elem[0], elem[1]))
</code></pre>
<p>Result:</p>
<pre><code>[1, 0]
</code></pre>
<p>Use the <code>key</code> parameter to define the fields which will affect the sorting process. First, you will get the minimum element based on <code>x</code> value and if there are many of them, they will be sorted again based on their <code>y</code> value.</p>
<p>An alternative is to use the <code>itemgetter</code> function from <code>operator</code> module:</p>
<pre><code>import operator

adjoining = [[1, 0], [3, 2], [1, 1]]

minimum = min(adjoining, key=operator.itemgetter(0,1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>adjoining.sort(key= lambda x:x[0])
mins = [i for i in adjoining if i[0] == adjoining[0][0]]
if len(mins)&gt;1:
   mins.sort(key= lambda x:x[1])
   min = [i for i in mins if i[1] == mins[0][1]]
else:
   min = mins
answer = min[0]
</code></pre>
<p>I used <code>sort</code> with the <code>key</code> attribute. This allows you to define the criteria by which to sort the list.
The rest of the code is base on list comprehension.</p>
<pre><code>[ item for item in a list_of_items if item == wanted_item]
</code></pre>
<p>This filters <code>list_of_item</code> based of some chosen criteria. Just need to make sure what follows <code>if</code> can be evaluated <code>True</code> or <code>False</code>.</p>
</div>
<span class="comment-copy">You could use <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer">min</a></span>
<span class="comment-copy">@SigurdSets√•, Can you explain your logic more clearly <a href="https://stackoverflow.com/posts/53241552/edit">as an edit to your question</a>. Your question seems to imply <code>[0, 1]</code> comes before <code>[1, 0]</code>, i.e. <code>My function should return the value with the lowest x coordinate</code>. Concrete examples (rather than descriptions) often help.</span>
<span class="comment-copy">@jpp I realised that my comment got it backwards. [0, 1] would be correct. I meant to say it the other way</span>
<span class="comment-copy">While this might answer the authors question, it lacks some explaining words and/or links to documentation. Raw code snippets are not very helpful without some phrases around them. You may also find <a href="https://stackoverflow.com/help/how-to-answer">how to write a good answer</a> very helpful. Please edit your answer.</span>
