<div class="post-text" itemprop="text">
<p>I have a question about this piece of Python 3 script:</p>
<pre><code>import datetime
d = datetime.date.today()

print(d.year)
print(d.weekday())
</code></pre>
<p><a href="https://tio.run/##K6gsycjPM/7/PzO3IL@oRCElsSS1JDM3lStFwRbO0QMx9EryUxIrNTS5uAqKMvNKNFL0KlMTizThvPLU1GywAs3//wE" rel="nofollow noreferrer">TIO</a></p>
<p>Why is <code>d.year</code> without parentheses, but <code>d.weekday()</code> isn't? Why is one a property and the other a function?</p>
</div>
<div class="post-text" itemprop="text">
<p>Probably because <code>year</code> is a required argument when constructing a <code>datetime.date</code> object. No computation is required within the object to access the <code>year</code> value. See the implementation:</p>
<pre><code>class date:
    def __new__(cls, year, month=None, day=None):
        ...
</code></pre>
<p>Whereas weekday needs to be computed:</p>
<pre><code>def weekday(self):
    "Return day of the week, where Monday == 0 ... Sunday == 6."
    return (self.toordinal() + 6) % 7
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Because <code>year</code> is required for defining <a href="https://docs.python.org/3/library/datetime.html#datetime.date" rel="nofollow noreferrer"><code>datetime.date</code></a> objects and is subsequently set as a property of the class:</p>
<blockquote>
<pre><code>class datetime.date(year, month, day)
</code></pre>
<p>All arguments are required.</p>
</blockquote>
<p>While <code>weekday</code> needs to be calculated via a method <em>from</em> year, month and day.</p>
</div>
<div class="post-text" itemprop="text">
<p>There's no particular reason I can think of. It's a module with a documented API which says <code>weekday()</code> is a method not a property. One can argue whether it should have been otherwise, but as soon as the module was released and people wrote code that depended on this interface, it could no longer be changed. (Other than by deprecating the module and releasing <code>datetime2</code>, which the Python gods have indeed done for a few modules that were much more badly broken by design). </p>
<p>If it really bugs you you can 'fix' it. In Python3 (simplified <code>super</code>):</p>
<pre><code>class MyDate( datetime.date):
    @property
    def weekday(self):
        return super().weekday()

&gt;&gt;&gt; d = MyDate.today()
&gt;&gt;&gt; d
MyDate(2018, 11, 14)
&gt;&gt;&gt; d.weekday
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For no good reason. It's inconsistent, and violates <a href="http://wiki.c2.com/?UniformAccessPrinciple" rel="nofollow noreferrer">some basic principles</a>. Don't read too much into it, it was probably some instant decision that stuck.</p>
</div>
<div class="post-text" itemprop="text">
<p>Because weekday need some operations.</p>
</div>
<span class="comment-copy">year, month and day are base constituents of the class datetime so properties. Getting the weekday is the result of a computation involving year, month and day so it is a method.</span>
