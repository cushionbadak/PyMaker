<div class="post-text" itemprop="text">
<p>I have a data frame that looks like this:</p>
<pre><code>import pandas as pd
df = pd.DataFrame({'id': [1,2,3], 'tokens': [["anna","brings","work","life"], ["apples","bananas"], ["sun","trial","once"]]})
</code></pre>
<p>what I am trying to do is simply concatenate all the strings from lists in the column into a single list so that the resulting list looks like this:</p>
<pre><code>result_list = ["anna","brings","work","life", "apples","bananas","sun","trial","once"]
</code></pre>
<p>I have tried to iterate over each row and then each element in a list:</p>
<pre><code>result_list = [item for sublist in df.tokens for item in sublist]
</code></pre>
<p>but what I get is a list every single symbol of lists.
What am I missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer">chain.from_iterable</a>:</p>
<pre><code>import pandas as pd

from itertools import chain

df = pd.DataFrame(
    {'id': [1, 2, 3], 'tokens': [["anna", "brings", "work", "life"], ["apples", "bananas"], ["sun", "trial", "once"]]})

result = list(chain.from_iterable(df.tokens))
print(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>your_list = []
for i in range (0, len(df)):
    for j in range (0, len(df['tokens'][i])):
       your_list.append(df['tokens'][i][j])
your_list
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a nested list comprehension.</p>
<pre><code>&gt;&gt;&gt; [x for sub in df['tokens'] for x in sub]                                
['anna', 'brings', 'work', 'life', 'apples', 'bananas', 'sun', 'trial', 'once']
</code></pre>
<p>edit: which is equivalent to your attempt, which I missed. What you did should work fine.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = []
[a.extend(i) for i in df.tokens]
print(a)
</code></pre>
<p>Output:</p>
<pre><code>['anna', 'brings', 'work', 'life', 'apples', 'bananas', 'sun', 'trial', 'once']
</code></pre>
</div>
<span class="comment-copy">Your solution works fine for me. It gives <code>['anna', 'brings', 'work', 'life', 'apples', 'bananas', 'sun', 'trial', 'once']</code></span>
<span class="comment-copy">@jpp Confirmed same.</span>
<span class="comment-copy">wouldn't <code>list(chain.from_iterable(df.tokens))</code> do the job already?</span>
<span class="comment-copy">@hochl You are right updated the answer.</span>
<span class="comment-copy">@hochl Or just <code>[*chain(*df.tokens)]</code> since we are in Python3 and we are consuming the tokens instantly anyway, so we also do not need the lazy evaluation of <code>from_iterable</code>.</span>
