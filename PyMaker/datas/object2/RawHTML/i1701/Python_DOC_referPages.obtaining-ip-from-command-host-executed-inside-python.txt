<div class="post-text" itemprop="text">
<p>I have this function to show me the 1st ip of a domain:</p>
<pre><code>def get_ip_address(url):
    command="host "+url
    process=os.popen(command)
    results=str(process.read()) 
    marker=results.find('has address')+12   
    print results[marker:].splitlines()[0]
    return results[marker:].splitlines()[0]
</code></pre>
<p>But this only shows me the first ip. I'd like to show only the ip's. The marker is for not having "has address" as shown below (imagine I input "reddit.com": </p>
<pre><code>['151.101.65.140', 'reddit.com has address 151.101.129.140', 'reddit.com has address 151.101.193.140', 'reddit.com has address 151.101.1.140', 'reddit.com mail is handled by 1 aspmx.l.google.com.', 'reddit.com mail is handled by 10 aspmx2.googlemail.com.', 'reddit.com mail is handled by 10 aspmx3.googlemail.com.', 'reddit.com mail is handled by 5 alt1.aspmx.l.google.com.', 'reddit.com mail is handled by 5 alt2.aspmx.l.google.com.']
</code></pre>
<p>I want to show only the ips, not <code>reddit.com has address</code>nor once the ip's end, <code>mail is handled</code>etc. </p>
<p>I tried with </p>
<pre><code>def get_ip_address(url):
    command="host "+url
    process=os.popen(command)
    results=str(process.read()) 
    marker=results.find('has address')+12
    i=0
    arrayIps=[]
    while "has address" in results[marker:].splitlines()[i]:

        print results[marker:].splitlines()[i]
        arrayIps.append(results[marker:].splitlines()[i])
        print("array")
        print arrayIps[i]
        i=i+1
    return arrayIps
</code></pre>
<p>But it is not working! Not even returning anything useful!</p>
<p>What I am expecting is an array with (in this case):</p>
<pre><code>'151.101.65.140', '151.101.129.140', '151.101.193.140', '151.101.1.140'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>See it shows multiple hosts as you required .Your output can be generated using a <code>map</code> function</p>
<pre><code>In [132]: socket.getaddrinfo("reddit.com", 80, proto=socket.IPPROTO_TCP)
Out[132]: 
[(&lt;AddressFamily.AF_INET: 2&gt;,
  &lt;SocketKind.SOCK_STREAM: 1&gt;,
  6,
  '',
  ('151.101.65.140', 80)),
 (&lt;AddressFamily.AF_INET: 2&gt;,
  &lt;SocketKind.SOCK_STREAM: 1&gt;,
  6,
  '',
  ('151.101.1.140', 80)),
 (&lt;AddressFamily.AF_INET: 2&gt;,
  &lt;SocketKind.SOCK_STREAM: 1&gt;,
  6,
  '',
  ('151.101.129.140', 80)),
 (&lt;AddressFamily.AF_INET: 2&gt;,
  &lt;SocketKind.SOCK_STREAM: 1&gt;,
  6,
  '',
  ('151.101.193.140', 80))]


In [134]: list(map(lambda x:x[4][0],socket.getaddrinfo("reddit.com", 80, proto=socket.IPPROTO_TCP)))
Out[134]: ['151.101.129.140', '151.101.193.140', '151.101.65.140', '151.101.1.140']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should try the dig command instead of host and apply a proper regexp aswell:</p>
<pre><code>from subprocess import run, PIPE

def get_answer(url):
    response = run(["dig", "+noall", "+answer", "+short","{url}".format(url=url)], stdout=PIPE, universal_newlines=True)
    return response.stdout
</code></pre>
<p><strong>Notes:</strong></p>
<ul>
<li>The run's parameter may vary depends on why python version you are, this is an example for python 3.5: <a href="https://docs.python.org/3.5/library/subprocess.html" rel="nofollow noreferrer">https://docs.python.org/3.5/library/subprocess.html</a></li>
<li>You should adapt this code to some border cases.</li>
</ul>
<p><strong>EDIT</strong></p>
<p>As mentioned in commentaries, you can rid off the regex part using +short option in dig.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try splitting the string IPs at their spaces using <code>.split()</code> and then taking the last item of it <code>[-1]</code> and then splitting the last item (which should be an IP address) at the periods <code>.split('.')</code>. Join the strings returned from that using <code>''.join(iterable)</code> where iterable are the value from <code>.split('.')</code>. Check if the joined string is a numeric value using <code>.isnumeric()</code> and if that is True, print and return the last item.</p>
<pre><code>def get_ip_address(url):
    command="host "+url
    process=os.popen(command)
    results=str(process.read())
    marker=results.find('has address')+12
    ip_list=[]
    for ip in results[marker:].splitlines()[0]:
        if ''.join(ip.split()[-1].split('.')).isnumeric():
            ip_list.append(ip.split()[-1])
    print ip_list
    return ip_list
</code></pre>
<p>The bad news is that I can't seem to get <code>results=str(process.read())</code> to be set to anything. It currently just returns an empty string, but hopefully, you'll have more luck :D</p>
<p>(Edit: As said in your comments, <code>socket.getaddrinfo()</code> works with flying colours. Not sure of it on Python 2.7, but it works here in 3.7.1)</p>
<p>(Edit2: Here's your code in 3.7.1. Should be similar in 2.7)</p>
<pre><code>import socket
ip_list = []
for info in socket.getaddrinfo('reddit.com', 80):
    ip_list.append(info[-1][0])
</code></pre>
</div>
<span class="comment-copy">If you want to perform dns lookups in Python, why not using something like the <a href="https://docs.python.org/3/library/socket.html#socket.getaddrinfo" rel="nofollow noreferrer">socket.getaddrinfo</a> function in the Python standard library?</span>
<span class="comment-copy">Wouldn't what you are suggesting, only show the first one (as I did?). I want to show all the ones that are possible! And I used this as I wanted to call the command. @larsks</span>
<span class="comment-copy">@LouisStorming It will show all the ones possible, just try it</span>
<span class="comment-copy">Rather than asking what it returns, just try it out.  It will require less typing than was required to write that comment :).</span>
<span class="comment-copy">it does not. I tried... @AlbinPaul</span>
<span class="comment-copy">You don't need the regex foolery with <code>dig +short</code></span>
