<div class="post-text" itemprop="text">
<p>I am trying to use lambda for a usecase, but it seems not working. The following is what I tried</p>
<p>The below is what I used, in stackflow I came across many people getting output for this, but for me its None </p>
<pre><code>from __future__ import print_function
f = lambda x: print(x)
f()
f("Hello") ### now out put is shown expected is Hello output
f("Hello") is None ## I checked if its None and it is
&gt;&gt;&gt; True 
</code></pre>
<p><a href="https://i.stack.imgur.com/2YcWC.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/2YcWC.png"/></a>
then I tried something else</p>
<pre><code>l = lambda x : sys.stdout.write(x)
l('hello') # this time its showing output as 5 instead of printing hello
&gt;&gt;&gt; 5
</code></pre>
<p><a href="https://i.stack.imgur.com/USbqy.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/USbqy.png"/></a></p>
<p>I even tried something which is not using lambda, unfourtunately that too not working, and got None</p>
<pre><code>from functools import partial
spam = partial(print, 'Hello!')
spam()
spam() is None
&gt;&gt;&gt; True
</code></pre>
<p>I got this from the last answer in this question <a href="https://stackoverflow.com/questions/47851402/assigning-print-function-to-variable">assigning print function to variable</a> </p>
<p>Can anyone help me what I am missing and why I am not able to print the string?</p>
</div>
<div class="post-text" itemprop="text">
<p>What's not expected? that <code>f('Hello') is None</code> evaluate to <code>True</code>? Well that's expected because it is <code>None</code>.</p>
<p><code>lambda x: print(x)</code> has no 'return', only a side effect, and the side effect is to print stuff to the output. This is similar to a function</p>
<pre><code>def func(x): 
    print(x)
</code></pre>
<p>which has no return statement, hence, if you evaluate the function, it's output will be <code>None</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>l = lambda x : sys.stdout.write(x)
l('hello') # this time its showing output as 5 instead of printing hello
&gt;&gt;&gt; 5
</code></pre>
<p>it's probably because the write is not flushed, you can force this by manually calling</p>
<pre><code>sys.stdout.flush()
</code></pre>
<p>As for why it's returns <code>hello5</code> is because the Python shell prints out the return value of the previous statement, <code>sys.stdout.write()</code> returns the count of the written characters which in case of 'hello' is 5. thus they become concatenated into <code>hello5</code>. If you ran this in a normal Python file i.e <code>python filename.py</code> it would never print the <code>5</code> and only <code>hello</code>.</p>
</div>
<span class="comment-copy">This is really amazing!</span>
<span class="comment-copy">With Python3 l('hello') is outputting hello and returning 5 on my system. With python2 I only get the hello output without the integer return value.</span>
<span class="comment-copy">Please consider telling a bit more about the environment you are using. Also, if you just write a simple <code>print("Hello")</code>, does it appear correctly?</span>
<span class="comment-copy">@tevemadar Yes print("Hello") prints Hello. I am using inside jupyter notebook</span>
<span class="comment-copy">Are you perhaps supressing error messages somehow? If I put the first snippet into a single cell, the empty <code>f()</code> call raises <code>TypeError</code> for me both locally and on jupyter.org/try. Then the rest of the lines does not run, but the error message is pretty visible by default. Have you tried restarting the kernel? Based on your screenshot, you are at the 59-60th input, and who knows happened earlier.</span>
<span class="comment-copy">@ Rocky Li,  this is about when you call <code>l = lambda x : sys.stdout.write(x)</code> and then call it like <code>l('hello')</code> it returns <code>hello5</code> rather just <code>hello</code> !</span>
<span class="comment-copy">Its not printing output. Say if I type f("Hello") it prints nothing. And in other case l('hello') prints the number of count of characters not string</span>
<span class="comment-copy">@pygo: <code>l('hello')</code> prints <code>hello</code> (if flushed) and returns <code>5</code>, since <code>sys.stdout.write</code> returns the number of characters written, see <a href="https://docs.python.org/3/library/io.html#io.TextIOBase.write" rel="nofollow noreferrer">docs.python.org/3/library/io.html#io.TextIOBase.write</a></span>
<span class="comment-copy">@pygo Interesting, however, I can't duplicate..</span>
<span class="comment-copy">@pygo haha this is funky. Now I am getting something like you , with the hello5. When tried in shell</span>
<span class="comment-copy">tried  flush that already but Still same result.</span>
<span class="comment-copy">But how to print just "Hello" instead of the number of characters ?</span>
<span class="comment-copy">Your code should work perfectly fine outside of the Python interpreter REPL (put it in a separate file and try)</span>
<span class="comment-copy">@UkuLoskit I put this inside a python file and still it returning the number.l = lambda x : sys.stdout.write(x); sys.stdout.flush(). l(hello).. returned 5</span>
<span class="comment-copy">could you  include exact code that's doing this?</span>
