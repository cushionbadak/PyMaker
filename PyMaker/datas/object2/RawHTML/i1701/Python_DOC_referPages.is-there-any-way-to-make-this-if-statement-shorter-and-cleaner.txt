<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/17615020/what-is-the-best-approach-in-python-multiple-or-or-in-in-if-statement">What is the best approach in python: multiple OR or IN in if statement?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/15112125/how-to-test-multiple-variables-against-a-value">How to test multiple variables against a value?</a>
<span class="question-originals-answer-count">
                    21 answers
                </span>
</li>
</ul>
</div>
<p>I have this long if statement to see if a string is equal to any number up to 9. But it is so long and takes a lot of space. Is there any way to make it shorter and cleaner? I'm new to programming.</p>
<pre><code>if calculated == "1" or calculated == "2" or calculated == "3" or calculated == "4" or calculated == "5" or calculated == "6" or calculated == "7" or calculated == "8" or calculated == "9":
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, try this:</p>
<pre><code>if calculated in ['1','2','3',...,'9']:
    # do
</code></pre>
<p>or you can do this:</p>
<pre><code>if calculated in [str(i) for i in range(1, 10)]:
    # do
</code></pre>
<p>also this way is possible too:</p>
<pre><code>if calculated in list(map(str, range(1, 10))):
   # do
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This smells like an <a href="https://meta.stackexchange.com/a/66378">XY problem</a>. If you know your string is a number, you should cast it to a number and use integer based logic:</p>
<pre><code>if 1 &lt;= int(calculated) &lt;= 9:
    pass
</code></pre>
<p>But if that doesn’t work for some reason, your logic could be simplified to checking a range:</p>
<pre><code>if calculated in (str(n) for n in range(1, 10)):
    pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or, say, in this simple case,</p>
<pre><code>try:
    if int(calculated) in range(1, 10):
</code></pre>
<p>Or vice versa:</p>
<pre><code>if calculated in map(str, range(1, 10)):
</code></pre>
</div>
<span class="comment-copy">if calculated in ['1','2','3',...]:</span>
<span class="comment-copy"><code>if calculated in {'1', '2', ...}:</code>.</span>
<span class="comment-copy">at least for once this duplicate isn't used for questions like <code>if a == 12 or 13 or 15</code> ...</span>
<span class="comment-copy">@Kasrâmvd not sure it's an exact duplicate, as OP seems to imply that the numbers as string follow. I'm contemplating reopening, but what do you think?</span>
<span class="comment-copy">its testing one variabl against multiple values :) sounds different</span>
<span class="comment-copy">In Python 3.x it should be simple a <code>if calculated in  '1,2,3,4':</code> , 3.2 and newer will recognise this as an immutable constant. This is the fastest option for newer code.</span>
<span class="comment-copy">you don't need to force iteration, even in python 3. Just use <code>calculated in map(str, range(1, 10))</code></span>
<span class="comment-copy">@pygo its an O(n) test - predefining a set of 1char strings and testing that is O(1) so faster</span>
<span class="comment-copy">your last 2 method profit from doing the conversion <i>outside</i> the testing code itself - consider using this in a tight loop - you would recreate and recreate and recreate and reacreate (you get it) the list you look into. Also: list membership testing is O(n) (if you find it in the last possible place) whereas <code>set</code> - testing is O(1) constant. Especially if you reuse the test, use <code>set</code>.</span>
<span class="comment-copy">This is the <a href="https://docs.python.org/3/whatsnew/3.2.html#optimizations" rel="nofollow noreferrer">link</a> for immutable  constants..</span>
<span class="comment-copy">thumbs up for the int conversion which allows O(1) testing in <code>range</code>. In that case, go further and use <code>if 1 &lt;= int(calculated) &lt; 10</code> which is even faster because it doesn't create a range object :)</span>
<span class="comment-copy">Sure, I've thought about posting simple comparison but considered it not generic enough. :)</span>
