<div class="post-text" itemprop="text">
<p>I have 4 lists:</p>
<pre><code>string1=['I love apple', 'Banana is yellow', "I have no school today", "Baking pies at home", "I bought 3 melons today"]
no=['strawberry','apple','melon', 'Banana', "cherry"]
school=['school', 'class']
home=['dinner', 'Baking', 'home']
</code></pre>
<p>I want to know every sting in string1 belongs to which group, if the string is about fruit, then ignore it, if string is about school and home, print them.</p>
<p>The result I expected:</p>
<pre><code>I have no school today
school
Baking pies at home
Baking #find the first match
</code></pre>
<p>Here's my code, it did print out something I want, but with many duplicate values:</p>
<pre><code>for i in string1:
    for j in no:
        if j in i:
            #print(j)
            #print(i)
            continue
        for k in school:
            if k in i:
                print(i)
                print(k)
            for l in home:
                if l in i:
                    print(i)
                    print(l)
</code></pre>
<p>I know this is not an efficient way to find the match. If you have any suggestion please let me know. Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this with a combination of <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a> and <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter</code></a>. We use <code>any</code> to ignore strings that have any occurrence of a word in <code>no</code>. Otherwise, we find the match using <code>filter</code>:</p>
<pre><code>string1 = ['I love apple', 'Banana is yellow', "I have no school today", "Baking pies at home", "I bought 3 melons today"]
no = ['strawberry', 'apple', 'melon', 'Banana', "cherry"]
school = ['school', 'class']
home = ['dinner', 'Baking', 'home']

for s in string1:
    if not any(x in s for x in no):
        first_match = list(filter(lambda x: x in s, school + home))[0]
        print(s)
        print(first_match)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>I have no school today
school
Baking pies at home
Baking
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you are trying to see if any of the lists no, school, and home have a word that is in any of the strings in string1.</p>
<p>I would just concatenate no, school and home lists together then just do</p>
<pre><code>for string in string1:
    for word in all3lists:
        if word in string:
            print("{0}\n{1}".format(string, word))
</code></pre>
<p>Hope that is of some help, I'm not in a position to test it but that's my best bet without doing a test to see if that works :)</p>
</div>
<span class="comment-copy">Very neat and easy for me to understand, thanks!</span>
<span class="comment-copy">I have one more question, sometimes the string contains both school and home, but in this case, school will be the at the first place. For example, "I am going home after school." I only will need to extract "school" but ignore the home part. I tried to add second_match in order but not working :)</span>
<span class="comment-copy">@Lara19 you will probably need an <code>if</code> <code>else</code> block in that case to first check if any word in <code>school</code> is contained in <code>s</code> (since that's your first preference). Something like <code>if any(x in s for x in school):</code>. If yes, get that match. Otherwise (in the <code>else</code> block) get the matching word from <code>home</code>.</span>
<span class="comment-copy">awesome, know how to do it now :)</span>
