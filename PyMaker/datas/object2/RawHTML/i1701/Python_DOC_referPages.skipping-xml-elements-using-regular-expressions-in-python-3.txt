<div class="post-text" itemprop="text">
<p>I have an XML document where I wish to extract certain text contained in specific tags such as-</p>
<pre><code>&lt;title&gt;Four-minute warning&lt;/title&gt;
&lt;categories&gt;
&lt;category&gt;Nuclear warfare&lt;/category&gt;
&lt;category&gt;Cold War&lt;/category&gt;
&lt;category&gt;Cold War military history of the United Kingdom&lt;/category&gt;
&lt;category&gt;disaster preparedness in the United Kingdom&lt;/category&gt;
&lt;category&gt;History of the United Kingdom&lt;/category&gt;
&lt;/categories&gt;

&lt;bdy&gt;
some text
&lt;/bdy&gt;
</code></pre>
<p>In this toy example, if I want to extract all the text contained in  tags by using the following Regular Expression code in Python 3-</p>
<pre><code># Python 3 code using RE-
file = open("some_xml_file.xml", "r")
xml_doc = file.read()
file.close()

title_text = re.findall(r'&lt;title&gt;.+&lt;/title&gt;', xml_doc)

if title_text:
    print("\nMatches found!\n")
    for title in title_text:
        print(title)
else:
    print("\nNo matches found!\n\n")
</code></pre>
<p>It gives me the text within the XML tags ALONG with the tags. An example of a single output would be-</p>
<pre><code>&lt;title&gt;Four-minute warning&lt;/title&gt;
</code></pre>
<p>My question is, how should I frame the pattern within the re.findall() or re.search() methods so that  and  tags are skipped and all I get is the text between them.</p>
<p>Thanks for your help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use a capture group in your regex (<code>re.findall()</code> takes care of the rest in this case). For example:</p>
<pre><code>import re

s = '&lt;title&gt;Four-minute warning&lt;/title&gt;'

title_text = re.findall(r'&lt;title&gt;(.+)&lt;/title&gt;', s)

print(title_text[0])
# OUTPUT
# Four-minute warning
</code></pre>
</div>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags">Don't use regex to parse XML.</a></span>
<span class="comment-copy">I think I am forced to use regex to parse the XML file as the XML file contains more than a single root node/element (document root). As a result, ElementTree throws and error.</span>
<span class="comment-copy">You could read the file as sting and wrap the contents into a root tag. <code>valid_xml = f'&lt;document&gt;{xml_file_contents}&lt;/document&gt;'</code>. Then use the result as input for ElementTree.</span>
<span class="comment-copy">@Arun, Johan is telling you not to use regular expressions to parse XML because XML is not a regular language.  You can assume your language is regular (and you'll get a valid regexp) only in case you never process any <code>&lt;title&gt;</code> tag inside a pair of <code>&lt;title&gt;...&lt;/title&gt;</code> tags, which <b>is permitted by XML</b>.  On other side, XML syntax is too complex to get a simple regexp to isolate all cases of possible <code>&lt;title&gt;</code> tags (e.g. <code>&lt;title xmlns:blabla="..."&gt;</code>)</span>
<span class="comment-copy">Hopefully OP's incoming data doesn't ever contain any tags with attributes...</span>
<span class="comment-copy">@mypetlion you are right to comment for OP's benefit or future readers that regex is often not the best tool for parsing XML unless you have a fairly complete knowledge of how the input XML is constructed. Otherwise, check out <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow noreferrer">ElementTree</a> or something similar.</span>
