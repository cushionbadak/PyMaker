<div class="post-text" itemprop="text">
<p>I am currently self teaching myself Python , and this is my first program. I am doing some simple projects so i can improve. Would like to hear feedback on this one.</p>
<pre><code>import random

print("There is a number between 1 and 100 guess it and you will win a price : ")


def guess():
    # A simple guess game.
    random_number = random.randint(1, 5)
    flag = True
    user_guess = []

    while flag:

        user_number = input("Enter the number : ")

        user_guess.append(user_number)

        if int(user_number) &lt; random_number:
            print("You have to go higher")

        elif int(user_number) &gt; random_number:
            print("You have to go lower ")

        else:
            flag = False
            print("Congrats you win !!! \nThe numbers of guesses before you won : ")
            print(len(user_guess))


guess()

while True:
    play_again = input("Do you like to play again ? : (y/n): ")
    if play_again == 'y':
        guess()
    else:
        print("Thank you for playing have a nice day!!! ")
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>Your program will throw an exception if the user enters an invalid (nondigit) character. Use <a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow noreferrer">isdigit</a> to avoid such cases.    </li>
<li>Converting <code>user_number</code> to integer every time you want to compare it with some other integer is costly, and frivolous. Convert it once and reassign it to <code>user_number</code>.</li>
<li><code>flag</code> is not necessary. Use <code>while True</code>, and break when needed.</li>
<li>Keeping an entire <code>list</code> object just to count user input is a bit overkill. Have a single integer (<code>count</code> in my example) and use it.</li>
<li>You print <em>"between 1 and 100"</em> but your program creates a random integer between 1 and 5. I am not sure about your intentions with doing that (perhaps a debugging aid), but I presume it's a small mistake.</li>
<li>A minor suggestion, move the <code>print("There is a number between 1 and 100 guess it and you will win a price : ")</code> to the <code>guess</code> function since it makes more sense for the function to declare its own purpose.</li>
</ol>
<p>Here's how I would make those changes to the <code>guess</code> function:</p>
<pre><code>def guess():
    print("There is a number between 1 and 100 guess it and you will win a price : ")
    # A simple guess game.
    random_number = random.randint(1, 100)
    # flag = True obsolete
    count = 0
    while True:
        user_number = input("Enter the number : ")
        if (user_number.isdigit()):
          user_number = int(user_number)
        else:
          print("Invalid:")
          continue
        count += 1
        if user_number &lt; random_number:
            print("You have to go higher")
        elif user_number &gt; random_number:
            print("You have to go lower ")
        else:
            print("Congrats you win !!! \nThe numbers of guesses before you won : ")
            print(count)
            break
</code></pre>
</div>
<span class="comment-copy">With some work, this might be right for Code Review, but you need to be clearer on your aim</span>
<span class="comment-copy">Isn't the number supposed to be between 1 and 100? <code>random_number = random.randint(1, 5)</code></span>
<span class="comment-copy">@SilverSlash It is easier to test that way that is why it is <code>random_number = random.randint(1, 5)</code></span>
<span class="comment-copy">Thank you and <code>random_number = random.randint(1, 5)</code> was for testing only .</span>
