<div class="post-text" itemprop="text">
<p>I have the following list of lists:</p>
<pre><code>mylist = [['NNP', 'NN', 'VBZ', 'VBN', 'NNP', 'NNP'],
           ['VB', 'VBN'],
           ['NNP'],
           ['VB', 'NN'],
           ['NN', 'NN']]
</code></pre>
<p>I have one more list of lists:</p>
<pre><code>cond = [['NNP', 'NN'], ['VBZ', 'VBN', 'VB']]
</code></pre>
<p>I want to group the list of list items in mylist based on the lists in the cond list and get the following output.</p>
<pre><code>out = [['NNP', 'NN'], ['VBZ', 'VBN'], ['NNP', 'NNP'], ['VB', 'VBN'], ['NNP'], ['VB'], ['NN'], ['NN', 'NN']]
</code></pre>
<p>The items should be grouped in such a way that the list of list items in mylist should be part of only one list in cond i.e, ['NN', 'VBZ'] or ['VBN', 'NNP'] is not expected in output. </p>
<p>This is not a case where I have to split a list when some item is encountered.</p>
<p>I went through many codes where lists are split based on condition, but my problem is different here. Hence it's not a duplicate question.</p>
<p>I don't know the initial approach to take to start coding. </p>
</div>
<div class="post-text" itemprop="text">
<p>Here's the best I could come up with:</p>
<pre><code>import itertools

mylist = [['NNP', 'NN', 'VBZ', 'VBN', 'NNP', 'NNP'],
           ['VB', 'VBN'],
           ['NNP'],
           ['VB', 'NN'],
           ['NN', 'NN']]

cond = [['NNP', 'NN'], ['VBZ', 'VBN', 'VB']]

out = list()
for sublist in mylist:
    while sublist != []:
        match = list(filter(lambda x: x != [], [list(itertools.takewhile(lambda x: x in condition, sublist)) for condition in cond]))[0]
        out.append(match)
        sublist = sublist[len(match):]

print(out)
</code></pre>
<p>First, we iterate through all of the sub-lists. Then we use the <code>itertools</code> method <a href="https://docs.python.org/3/library/itertools.html#itertools.takewhile" rel="nofollow noreferrer"><code>takewhile</code></a> to construct a list of elements that match any of the conditions in <code>cond</code>. Sometimes there will not be a matching set of elements for the given <code>condition</code>, so we filter out <code>[]</code> results. Then we remove that amount of elements from the front of the list. We add the constructed list to our final list. We then to the <code>takewhile</code> process again until that <code>sublist</code> has been exhausted. We repeat the entire process for every sub-list in <code>mylist</code>.</p>
<p><a href="https://docs.python.org/3/library/itertools.html#module-itertools" rel="nofollow noreferrer"><code>itertools</code></a> is a very powerful library in python and you should familiarize yourself with it if you are working with lists or other iterables in python a lot.</p>
</div>
<span class="comment-copy">I don't understand your example. What is the condition/grouping doing? is it a carthesian product between two collections or a filter? it's not clear</span>
<span class="comment-copy">This grouping is not clear at all.</span>
<span class="comment-copy">This means that each list in mylist should be split into new lists, such that each new split lists should contain items from any one of the list in cond, but not from both the lists in cond.</span>
<span class="comment-copy">Thanks. Will learn that.</span>
