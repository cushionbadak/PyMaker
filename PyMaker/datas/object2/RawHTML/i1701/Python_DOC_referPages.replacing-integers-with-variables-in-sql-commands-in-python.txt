<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3220005/escaping-chars-in-python-and-sqlite">Escaping chars in Python and sqlite</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>So currently my code is this which works </p>
<pre><code>result = connection.execute('SELECT * FROM PastOrders WHERE CustomerID="1";')
</code></pre>
<p>But as others use my programme the customer will change so how do I replace 1 with a variable like this..</p>
<pre><code>cat = str(1)    
result = connection.execute('SELECT * FROM PastOrders WHERE CustomerID=cat;')
</code></pre>
<p>However, this doesn't work so any help thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Have you considered breaking the SQL statement.</p>
<pre><code>cat = '\"+'str(1)+'\"';
result = connection.execute('SELECT * FROM PastOrders WHERE CustomerID='+cat+';)'
</code></pre>
</div>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">sqlite3 documentation</a> covers this for you; look for <i>placeholders</i> and <i>parameters</i>. Do not use string interpolation, as that would open you up to SQL injection attacks!</span>
<span class="comment-copy">For this specific query, use one placeholder (<code>?</code>): <code>result = connection.execute('SELECT * FROM PastOrders WHERE CustomerID=?;', (cat,))</code>, there <code>cat</code> is the customer ID. You do not need to convert it to a string first.</span>
<span class="comment-copy"><b><i>NO</i></b>, you should <b><i>NEVER</i></b> use string formatting to interpolate untrusted data into a SQL command!</span>
<span class="comment-copy">See the <a href="https://www.owasp.org/index.php/SQL_Injection" rel="nofollow noreferrer">OWASP SQL Injection overview</a> for why this is a <b>really bad idea</b>.</span>
<span class="comment-copy">He should add some security measures. Converting html special characters and SQL keywords.</span>
<span class="comment-copy">Yes, and the first security measure is to <i>use SQL parameters and not use string formatting</i>.</span>
<span class="comment-copy">From the <code>sqlite3</code> documentation: <i>Instead, use the DB-API’s parameter substitution. Put <code>?</code> as a placeholder wherever you want to use a value, and then provide a tuple of values as the second argument to the cursor’s <code>execute()</code> method.</i>. SQL parameters take care of proper escaping of values for you.</span>
