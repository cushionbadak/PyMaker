<div class="post-text" itemprop="text">
<p>my code looks something like this:</p>
<pre><code>documents=set()
finals = []
temporary_set= set()
temporary_set.add(i)
finals.append(documents.intersection(temporary_set))
</code></pre>
<p>when i want to get all values from the finals list i use: </p>
<pre><code>for final in finals:
    print (final)
</code></pre>
<p>This returns however the items as a set item within a list. like this:</p>
<pre><code>[{27309053}, {23625724}, {25051134}]
</code></pre>
<p>How can i make it that the curly brackets will be omitted and that my result will look like this: </p>
<pre><code>[27309053, 23625724, 25051134]
</code></pre>
<p>???</p>
</div>
<div class="post-text" itemprop="text">
<p>You can change </p>
<pre><code>finals.append(documents.intersection(temporary_set))
</code></pre>
<p>to </p>
<pre><code>finals.extend(documents.intersection(temporary_set))
</code></pre>
<p>which will add each element of that intersection to the list, rather than the intersection itself.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can flatten your list of sets using <a href="https://docs.python.org/2/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain.from_iterable</code></a>:</p>
<pre><code>import itertools

x = [{27309053}, {23625724}, {25051134}]

list(itertools.chain.from_iterable(x))
# [27309053, 23625724, 25051134]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Fixing the code upstream by using <a href="https://stackoverflow.com/a/53213635/3620003"><code>extend</code></a> is the way to go here.</p>
<p>If you end up with a list</p>
<pre><code>l = [{27309053}, {23625724}, {25051134}]
</code></pre>
<p>where you can't modify how it's created, you can use iterable unpacking like this:</p>
<pre><code>&gt;&gt;&gt; l = [{27309053}, {23625724}, {25051134}]
&gt;&gt;&gt; [x for x, in l]
&gt;&gt;&gt; [27309053, 23625724, 25051134]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>l = [{27309053}, {23625724}, {25051134}]

[x for sl in l for x in sl]  # evaluates to [27309053, 23625724, 25051134]
</code></pre>
</div>
<span class="comment-copy">Great! this was exactly the answer I was looking for. Thanks a lot!</span>
<span class="comment-copy">they could but it would better to go back a step on not create a list of sets in the first place</span>
<span class="comment-copy">I agree. But the question was essentially that they end up with a list of sets, and want it turned into a flat list...</span>
<span class="comment-copy">if you intupret the question that way, then it's a common duplicate <a href="https://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python" title="making a flat list out of list of lists in python">stackoverflow.com/questions/952914/â€¦</a> (Patrick's approach is better IMO)</span>
<span class="comment-copy">Better:  <code>[x for [x] in l]</code>  (non-destructive, and validates sets are 1 item only)</span>
<span class="comment-copy">@wim Good idea, I modified my answer with the tuple version of this.</span>
