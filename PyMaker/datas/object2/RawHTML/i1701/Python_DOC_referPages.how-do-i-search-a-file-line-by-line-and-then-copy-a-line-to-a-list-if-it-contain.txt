<div class="post-text" itemprop="text">
<p>I know how to read a whole file into a list line by line, but I cannot figure out the syntax for searching a file for a string and grabbing the whole line, and then appending that to a list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Simplest way I can think of:</p>
<pre><code>with open('myfile.txt') as f:
    mylist = [line for line in f if search_string in line]
</code></pre>
<p>This will preserve the newlines at the end of every line since that's how iterating a file works. To remove the newlines, call <code>line.rstrip('\n')</code> before appending:</p>
<pre><code>with open('myfile.txt') as f:
    mylist = [line.rstrip('\n') for line in f if search_string in line]
</code></pre>
<p>Other options are <code>line.rstrip()</code> to remove all trailing spaces including newlines, and <code>line.strip()</code> to remove all trailing <em>and</em> leading spaces, including of course the newline.</p>
</div>
<div class="post-text" itemprop="text">
<p>The simplest way would be to use <code>string.find()</code> on each line as you parse the file: <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.find</a></p>
<p>For example:</p>
<pre><code>with open('filename', 'r') as f:
  for line in f.readlines():
    if line.find('search_string') != -1:
      # do stuff
</code></pre>
</div>
<span class="comment-copy">Using <code>in</code> is even better than <code>find()</code>, or at least more Pythonic. Good answer</span>
<span class="comment-copy">@ahota. Thanks. Not to mention comprehension vs explicit loop.</span>
<span class="comment-copy">@Mad Physicist - This worked perfectly except it is putting a newline char at the end of each element. How do I strip the \n?</span>
<span class="comment-copy">@JakeMiller <code>line.strip()</code> in the list comprehension</span>
<span class="comment-copy">@Jake. Updated.</span>
