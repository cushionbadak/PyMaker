<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1207406/how-to-remove-items-from-a-list-while-iterating">How to remove items from a list while iterating?</a>
<span class="question-originals-answer-count">
                    23 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/3013449/list-comprehension-vs-lambda-filter">list comprehension vs. lambda + filter</a>
<span class="question-originals-answer-count">
                    14 answers
                </span>
</li>
</ul>
</div>
<p>I have an array (moves) of arrays. I want to iterate through my moves array and set a condition for each element. The condition is, if either number in the element is negative, then I want to remove that element from the moves array. The loop does not remove my items correctly. BUT if I run it through the exact same loop twice, then it WILL remove the last element. This makes no sense to me. Using Python 3.6</p>
<pre><code>moves = [[3,-1],[4,-1],[5,-1]]
for move in moves:
    if move[0] &lt; 0 or move[1] &lt; 0:
        moves.remove(move)
</code></pre>
<p>If you run this code, moves ends with a result of [[4,-1]]
But if you run this result through the exact same for loop again, the result is []</p>
<p>I also tried doing this with many more elements and it's just not grabbing certain elements for some reason. Is this a bug with .remove()? This is what I tried...(In this I tried detecting nonnegative number to see if that was part of the issue, it wasn't)</p>
<pre><code>moves = [[3,1],[4,1],[5,1],[3,1],[4,1],[5,1],[3,1],[4,1],[5,1]]
    for move in moves:
        if move[0] &lt; 2 or move [1] &lt; 2:
            moves.remove(move)
</code></pre>
<p>The result of the above code is</p>
<pre><code>moves = [[4, 1], [3, 1], [4, 1], [5, 1]]
</code></pre>
<p>Any ideas???</p>
</div>
<div class="post-text" itemprop="text">
<p>You can iterate through a copy of a list. This can be done by adding <code>[:]</code> in your for loop list <code>moves[:]</code>.</p>
<p><strong>Input</strong></p>
<pre><code>moves = [[3,-1],[4,-1],[5,-11], [2,-2]]
for move in moves[:]:
    if (move[0] &lt; 0) or (move[1] &lt; 0):
        moves.remove(move)

print(moves)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Dont iterate and modify at the same time.</p>
<p>You can use a list comp or <code>filter()</code> to get a list that fits your needs:</p>
<pre><code>moves = [[3,1],[4,-1],[5,1],[3,-1],[4,1],[5,-1],[3,1],[-4,1],[-5,1]]

# keep all values of which all inner values are &gt; 0
f = [x for x in moves if all(e&gt;0 for e in x)]

# same with filter()
k = list(filter(lambda x:all(e&gt;0 for e in x), moves))

# as normal loop
keep = []
for n in moves:
    if n[0]&gt;0 and n[1]&gt;0:
        keep.append(n)

print(keep)

print(f) # f == k == keep  
</code></pre>
<p>Output:</p>
<pre><code>[[3, 1], [5, 1], [4, 1], [3, 1]]
</code></pre>
<p>Doku for <code>filter()</code> and <code>all()</code> can be found at the overview on <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">built in functions</a></p>
</div>
<span class="comment-copy">Do not iterate and modify the list you iterate at the same time.</span>
<span class="comment-copy">So then how do I filter the list based on a condition?</span>
<span class="comment-copy">In your 2nd example nothing would beleft as all elements have onne inner element &lt; 2 .. what are you trying to do?</span>
<span class="comment-copy">Yoiur 1st example would also not have anything left - as all elements contain 1 eleemnt less then 0</span>
<span class="comment-copy">@PatrickArtner yes I'm aware that that is what is SUPPOSED to happen, but as you can see from the output, that isn't what's happening. That's what the question is about :)</span>
