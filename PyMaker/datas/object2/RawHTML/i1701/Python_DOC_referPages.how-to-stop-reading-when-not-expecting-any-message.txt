<div class="post-text" itemprop="text">
<p>in the below code we asynchronously wait to receive data. But how to stop waiting for read when not expecting anymore data. 
The reason I'm asking this is because I want to implement a class which keeps listening to arriving messages in a separate thread using asyncio.run_coroutine_threadsafe and want to terminate listening once my test gets over (in order to release socket connection).</p>
<pre><code>import asyncio

@asyncio.coroutine
def tcp_echo_client(message, loop):
    reader, writer = yield from asyncio.open_connection('127.0.0.1', 8888,
                                                    loop=loop)

    print('Send: %r' % message)
    writer.write(message.encode())

    data = yield from reader.read(100)
    print('Received: %r' % data.decode())

    print('Close the socket')
    writer.close()

message = 'Hello World!'
loop = asyncio.get_event_loop()
loop.run_until_complete(tcp_echo_client(message, loop))
loop.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To stop waiting, <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.Task.cancel" rel="nofollow noreferrer">cancel</a> the <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.Task" rel="nofollow noreferrer">task</a> that runs the coroutine. For example:</p>
<pre><code># tcp_echo_client as in your code

message = 'Hello World!'
loop = asyncio.get_event_loop()
task = loop.create_task(tcp_echo_client(message, loop))
loop.call_later(5, task.cancel)  # cancel the task after five seconds
try:
    loop.run_until_complete(task)
except asyncio.CancelledError:
    pass
loop.close()
</code></pre>
<p>If you are using <code>asyncio.run_coroutine_threadsafe</code>, note that it returns a <a href="https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future" rel="nofollow noreferrer"><code>concurrent.futures.Future</code></a> object, which itself has a <a href="https://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.Future.cancel" rel="nofollow noreferrer"><code>cancel</code></a> method. Cancellation of the future returned by <code>run_coroutine_threadsafe</code> will be noticed by asyncio and result in the cancellation of the task in the event loop thread.</p>
</div>
<div class="post-text" itemprop="text">
<p>streamreader doesn't comes with any timeout <a href="https://github.com/python/asyncio/issues/96" rel="nofollow noreferrer">https://github.com/python/asyncio/issues/96</a>
so once you start reading you cannot stop.
For me I sent a closing message and handled in my client that on encountering closing message it should not go for further read.
That's how i stopped reading.
Once reader.read is called it keeps waiting for a message (Even after calling writer.close) and keeps the socket engaged until object is destroyed.</p>
</div>
<span class="comment-copy">It is not true that once you start reading you cannot stop. For example, you can use <code>data = await asyncio.wait_for(reader.read(4096), 5)</code>, and reading will time out in 5 seconds.</span>
