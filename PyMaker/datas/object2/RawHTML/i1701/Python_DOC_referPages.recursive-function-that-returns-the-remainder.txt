<div class="post-text" itemprop="text">
<p>I am instructed to define a recursive function in Python that finds the remainder of n divided by b with the condition <strong>to not use the "/" ,"%" or "//" operator</strong>. I have defined the following function, which works fine for positive numbers. Is there a better way to do this using <strong>recursion and simple conditions</strong>.</p>
<pre><code>def division(n, b, q = 1):
    """
    parameters : a et b (integers)
    returns: the remainder of a and b
    pre-requisites : q = 1
    """
    if n &lt;= 0 or n &lt; b:
        if n == 0:
            print("Your division has no remainder.")
        elif n in range(0,5):
            print("Your remainder is", n)
        return 0
    else:
        return division(n - b, b, q) + q

print(division(274,5))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe your teacher was probably only trying to go for remainders without quotients.</p>
<pre><code>def division(n, b):
    if n &lt; b:
        return n
    return division(n - b, b)
print(division(274, 5))
</code></pre>
<p>However, since you brought it up, you can do it with the quotient, without having to start with a 1 for the default.</p>
<pre><code>def division(n, b, q = 0):
    if n &lt; b:
        return n, q
    return division(n - b, b, q + 1)
print(division(274, 5))
</code></pre>
<p>Main takeaways, you do not need to check n for range (0,5).</p>
</div>
<div class="post-text" itemprop="text">
<p>What about</p>
<pre><code>def remainder(n, q):
    if(n &lt; q):
        return n
    return remainder(n - q, q)

print(remainder(274, 5)) # will return: 4
print(remainder(275, 5)) # will return: 0
print(remainder(123, 3)) # will return: 0
</code></pre>
<p>much shorter ...</p>
</div>
<span class="comment-copy">are you allowed to use the <a href="https://docs.python.org/3/library/operator.html#operator.mod" rel="nofollow noreferrer"><code>%</code></a> operator? ...</span>
<span class="comment-copy">sorry,no, you may not, I will edit the question now.</span>
<span class="comment-copy">@hiroprotagonist He is "instructed to define a recursive function" ... So I would not consider a one-liner solution with "%". (As always when it comes to homework questions)</span>
<span class="comment-copy">Are you looking for a way to extend this to negative numbers? Your function looks recursive and simple to me. Note sure about that <code>elif</code> part though.</span>
<span class="comment-copy">i was <i>trying</i> to be sarcastic... that went the wrong way. sorry.</span>
<span class="comment-copy">That's definitely better, thanks! how would you extend this to work for negative numbers?</span>
<span class="comment-copy">@MisterTusk That depends a bit, as the modulo of negative numbers is not too well defined. There are different ways of calculating them with different results, see the excellent answer of chux here <a href="https://stackoverflow.com/questions/13683563/whats-the-difference-between-mod-and-remainder/20638659#20638659" title="whats the difference between mod and remainder">stackoverflow.com/questions/13683563/â€¦</a> . If you tell me which way you want, I will update my answer accordingly.</span>
