<div class="post-text" itemprop="text">
<p>Can anyone explain why its printing <code>failed</code>? <code>word</code> is a string but it keeps jumping to the <code>else</code>.</p>
<pre><code>word = input("Enter a word.. ")
word_length = len(word)
first_letter = word[0]
last_letter = word[word_length-1]

if word == str:
    print(last_letter + word[1 : word_length-1] + first_letter)
else:
    print("failed")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you say</p>
<pre><code>if word == str:
</code></pre>
<p>you are checking if the <code>word</code> is the same as the <a href="https://docs.python.org/3/library/functions.html#func-str" rel="nofollow noreferrer"><code>str()</code></a> function.</p>
<hr/>
<p>If you want to check if the input is a string, then you can use the 
<a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer"><code>isinstance()</code></a> function, like this</p>
<pre><code>if isinstance(word, str):
</code></pre>
<hr/>
<p>But <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer"><code>input()</code></a> function, in Python 3.x, always returns a string only. So, you don't have to check if the input is a string or not.</p>
<hr/>
<p><strong>Note:</strong> In case, you are using Python 2.x, <code>print</code> is actually a statement, not a function. You can read more about that in <a href="https://stackoverflow.com/q/6182964/1903116">this question</a>.</p>
</div>
<span class="comment-copy">Did you try <code>print(word)</code> and <code>print(str)</code>? I think you'd be surprised at the results.</span>
<span class="comment-copy">@thefourtheye: As <a href="https://www.python.org/dev/peps/pep-0008/#whitespace-in-expressions-and-statements" rel="nofollow noreferrer">PEP 8</a>, <code>word[word_length-1]</code> is recommended.</span>
<span class="comment-copy">By the way a simpler way to get the right-most letter in a string is to index from the right using a negative offset, for example <code>last_letter = word[-1]</code>.  Negative offsets work with all Python sequences, which include string, lists, and tuples.</span>
<span class="comment-copy"><code>if word == str:</code> checks against the string object. If he were using <code>if word == str():</code> then that's the same as checking if word is an empty string. As <code>str()</code> on it's own returns an empty string</span>
