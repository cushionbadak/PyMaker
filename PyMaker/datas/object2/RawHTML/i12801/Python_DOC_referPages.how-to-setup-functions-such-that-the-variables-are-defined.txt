<div class="post-text" itemprop="text">
<p>I'm new to programming, and I'm having trouble relating my functions in such a manner that the variables I'm using are defined. For example, I initialized the following board for a game I'm developing:</p>
<pre><code>def initialize(dimension, nb_of_pieces, difficulty):
    board = []
    for i in range(dimension):
        row = [None] * dimension
        board.append(row)

    i = 0
    while i &lt; nb_of_pieces:
        initial_element = math.pow(2, difficulty)
        row_position = randint(0, dimension-1)
        column_position = randint(0, dimension-1)
        if initial_element not in board:
            board[row_position][column_position] = initial_element
            i = i + 1

    return board
</code></pre>
<p>This produces a board with all 'none' values except at two random positions, where there is a float value. Now I need to write a function that checks for possible matches in a row. A match is found when two identical elements ('None' values are ignored) are next to each other or only separated by 'None'. For example [2, None, 2, None] would count as a match. I now want to write a new function <code>def check(row)</code> that checks the indices of the initial elements (the float value '2.0') in each row, and then compares if they are next to each other or separated by 1. The function would return <code>True</code> if this is the case. I wrote:</p>
<pre><code>def check(row):

    for row in board:
        for i in range(dimension):
            if board[i] == None:
                continue
            else:
                if board[i] == board[i + 1] or board[i] == board[i + 2]:
                    return True
                else:
                    return False   
</code></pre>
<p>I'm not sure if this is correct, since Python keeps saying the variables are undefined, so I cannot check my program. How can I use the variables I defined in other functions? Also, I want to print the result somewhere (i.e True or False). Should this be done inside the function?        </p>
</div>
<div class="post-text" itemprop="text">
<p>I recommend using a Class here.  This will eliminate the need to constantly pass around your <code>board</code> variable, and make it much cleaner to write more behaviors of boards into class methods.  Note that the class's <code>__init__()</code> method doesn't need to return anything explicitly.</p>
<pre><code>class Board:
  def __init__(self, dimension, nb_of_pieces, difficulty):
    self.board = []
    for i in range(dimension):
      row = [None] * dimension
      self.board.append(row)
    (etc...)

  def check(self, row):
    for row in self.board:
      (etc...)
</code></pre>
<p>Then simply instantiate a Board by doing:</p>
<pre><code>my_board = Board()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you want to use a variable defined in a function in an other function. You best have to pass it in argument.</p>
<pre><code>def initialize(dimension, nb_of_pieces, difficulty):
    board =  [2, None, 2, None]
    return board

def check(row, board):
    return True

board =  initialize(5,4,3)
check(None, board  )
</code></pre>
<p>There's still a possibility to use nested function or global variable. but when i can i prefer to use the option i describe above..</p>
<p>so to use global variable you can do :</p>
<pre><code>def initialize(dimension, nb_of_pieces, difficulty):
    global board
    board =  [2, None, 2, None]


def check(row):
    global board
    if len(board)&gt; 5:
        return True
    else
        return False 

board = [] 
initialize(5,4,3)
check(None)
</code></pre>
</div>
<span class="comment-copy">Could you post the exact error you're getting here?</span>
<span class="comment-copy">You have to pass the variables around as arguments from the main program, or, in this case it would be better to model this as a <code>class MyBoardGame</code> or something. Then you can stick your state variables (<code>board</code>, <code>dimension</code> etc) in the <code>self</code> object, and use it in all methods of the class.</span>
<span class="comment-copy">See <a href="https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces" rel="nofollow noreferrer">Python Scopes and Namespaces</a> in the official tutorial.</span>
<span class="comment-copy">Thanks for the hint. How does one return the index of an element in a row of a board? For example, I want to know in what position my float value '2.0' is in.</span>
<span class="comment-copy">Like this: <code>row.index(2.0)</code></span>
