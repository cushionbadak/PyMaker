<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2039140/python-re-how-do-i-match-an-alpha-character">python-re: How do I match an alpha character</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Ok so basically this is what I know, and it does work, using Python3:</p>
<pre><code>color="Red1 and Blue2!"
color[2]=="d"
True
</code></pre>
<p>What I need is that when I call any position, (which inputs any single character Lower or Upper case in the comparison), into the brackets "color[ ]" and compare it to match only with "Lower or Upper case letters" excluding all numbers and characters (.*&amp;^%$#@!). 
in order words something to the effects below:</p>
<pre><code>color="Red1 and Blue2!"
if color[5]==[a-zA-z]:
     doSomething
else:
     doSomethingElse
</code></pre>
<p>Of course what I just listed above does not work. Perhaps my syntax is wrong, perhaps it just cant be done.   If I only use a single letter on the "right" side of the equals, then all is well, But like I said I need whatever single letter is pulled into the left side, to match something on the right.</p>
<p>First off I wan't to make sure that its possible to do, what I'm trying to accomplish? 
2nd, if it is indeed possible to do then have this accomplished "Without" importing anything other then "sys". </p>
<p>If the only way to accomplish this is by importing something else, then I will take a look at that suggestion, however I prefer not to import anything if at all possible. </p>
<p>I'v searched my books, and a whole other questions on this site and I can't seem to find anything that matches, thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>For the case of looking for letters, a simple <a href="https://docs.python.org/3/library/stdtypes.html#str.isalpha" rel="nofollow"><code>.isalpha()</code></a> check:</p>
<pre><code>if color[5].isalpha():
</code></pre>
<p>will work.</p>
<p>For the general case where a specific check function doesn't exist, you can use <code>in</code> checks:</p>
<pre><code>if color[5] in '13579':  # Checks for existence in some random letter set
</code></pre>
<p>If the "random letter set" is large enough, you may want to preconvert to a <a href="https://docs.python.org/3/library/stdtypes.html#frozenset" rel="nofollow"><code>frozenset</code></a> for checking (<code>frozenset</code> membership tests are roughly <code>O(1)</code>, vs. <code>O(n)</code> for <code>str</code>, but <code>str</code> tests are optimized enough that you'd need quite a long <code>str</code> before the <code>frozenset</code> makes sense; possibly larger than the one in the <code>example</code>):</p>
<pre><code>CHARSET = frozenset('13579adgjlqetuozcbm')

if color[5] in CHARSET:
</code></pre>
<p>Alternatively, you can <a href="https://docs.python.org/3/library/re.html" rel="nofollow">use regular expressions</a> to get the <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">character classes</a> you were trying to get:</p>
<pre><code>import re

# Do this once up front to avoid recompiling, then use repeatedly
islet = re.compile('^[a-zA-Z]$').match  
...
if islet(color[5]):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is where <a href="https://docs.python.org/3/library/stdtypes.html#str.isalpha" rel="nofollow"><code>isalpha()</code></a> is helpful.</p>
<pre><code>color="Red1 and Blue2!"
if color[5].isalpha():
     doSomething
else:
     doSomethingElse
</code></pre>
<p>There's also <code>isnumeric()</code>, if you need numbers.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not really sure why you'd require not importing anything from the standard libraries though.    </p>
<pre class="lang-py prettyprint-override"><code>import string

color="Red1 and Blue2!"
if color[5] in string.ascii_letters:
   print("do something")
else:
   print("do something else")
</code></pre>
</div>
<span class="comment-copy">While that's a good pattern for general purpose testing if a letter is part of an arbitrary set of characters (and <code>string.ascii_letters</code> is useful for other purposes, like iterating specific letters or the like), and necessary if you want only ASCII letters, <code>.isalpha()</code> is more predictable (same runtime for all hits and misses), and will also include non-ASCII letters as "alphabetic" characters, which you usually want.</span>
<span class="comment-copy">@ShadowRanger You're right, but I wanted to give a simpler answer then when using the regex package or listing all characters explicitly. I'd have prefered to add the <code>string.ascii_letters</code> to your answer as to make it more complete.</span>
<span class="comment-copy">Yes it wasnt my choice, it was the requirement  I was given, involves not importing anything, these reponses have helped. I still have more code to write.</span>
