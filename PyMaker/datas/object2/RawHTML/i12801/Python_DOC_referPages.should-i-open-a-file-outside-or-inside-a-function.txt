<div class="post-text" itemprop="text">
<p>Maybe this question makes no sense, but I was wondering if there was a "recommended practice" on how to pass a file to a function in Python.</p>
<p>Should I pass the file's path or the opened file itself ?</p>
<p>Should I do :</p>
<pre><code>def func(file):
  file.write(...)

with open(file_path, 'w') as file:
  func(file)
</code></pre>
<p>...or :</p>
<pre><code>def func(file_path):
  with open(file_path, 'w') as file:
    file.write(...)

func(file_path)
</code></pre>
<p>?</p>
<p>Is there some reason to use one method instead of the other ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Both ways have their advantages and disadvantaged. When a function takes an open file object, it becomes easier to use with other file-like object such s <code>io.StringIO</code>. On the other hand, using a <code>with</code> statement inside a function is very elegant. A hybrid solution would be accepting both a path (string) and a file-like object. Several libraries do that.  </p>
</div>
<div class="post-text" itemprop="text">
<p>Passing a file like object is recommended over passing a path. This means it will be easier to reuse your function with other types of files not just ones with a path on disk, such as BytesIO <a href="https://docs.python.org/3/library/io.html#io.BytesIO" rel="nofollow">https://docs.python.org/3/library/io.html#io.BytesIO</a>.</p>
<p>You can still use the <code>with</code> statement on the file like object, you don't have to use it only when you open it.</p>
</div>
<span class="comment-copy">Completely depends on what you are doing, if you are only using the file in the function then do it in the function, if you wanted access outside the function then dont</span>
<span class="comment-copy">But the problem is you have to remember to close the file every time</span>
