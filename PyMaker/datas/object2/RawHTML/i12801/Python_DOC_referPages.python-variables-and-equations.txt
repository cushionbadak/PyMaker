<div class="post-text" itemprop="text">
<p>So I'm pretty new to Python and coding in general, however I was messign around with some bisection stuff and I came across a problem. I have this code:</p>
<pre><code>a = 1
b = 2
c = 0

fa = a**3-a-2
fb = b**3-b-2
fc = c**3-c-2

c += 2
print(fc)
</code></pre>
<p>The problem is that when I run it, the 'c' variable changes but 'fc' stays the same and outputs -2, when it should output 4 instead. No matter what I've tried, fc alwas stays the same and updating c does nothing to change fc, even though I believe it should?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python stores the <em>outcome</em> of the expressions in <code>fa</code>, <code>fb</code> and <code>fc</code>, not the expressions themselves:</p>
<pre><code>&gt;&gt;&gt; a = 1
&gt;&gt;&gt; b = 2
&gt;&gt;&gt; c = 0
&gt;&gt;&gt; fa = a**3-a-2
&gt;&gt;&gt; fb = b**3-b-2
&gt;&gt;&gt; fc = c**3-c-2
&gt;&gt;&gt; fa
-2
&gt;&gt;&gt; fb
4
&gt;&gt;&gt; fc
-2
&gt;&gt;&gt; type(fc)
&lt;class 'int'&gt;
</code></pre>
<p>If you wanted to re-run an expression for changing variables, create <em>functions</em>. For a single expression, you can create a function object by using a <a href="https://docs.python.org/3/reference/expressions.html#lambda" rel="nofollow"><code>lambda</code> expression</a>:</p>
<pre><code>fa = lambda: a**3-a-2
fb = lambda: b**3-b-2
fc = lambda: c**3-c-2
</code></pre>
<p>These 3 functions expect <code>a</code>, <code>b</code> and <code>c</code> to exist in their parent scope. Now changing <code>c</code> and then <em>calling</em> the function will re-run the expression:</p>
<pre><code>c += 2
print(fc())  # note the (), calling the function
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; fa = lambda: a**3-a-2
&gt;&gt;&gt; fb = lambda: b**3-b-2
&gt;&gt;&gt; fc = lambda: c**3-c-2
&gt;&gt;&gt; fa
&lt;function &lt;lambda&gt; at 0x10979dd90&gt;
&gt;&gt;&gt; fb
&lt;function &lt;lambda&gt; at 0x1097b1e18&gt;
&gt;&gt;&gt; fc
&lt;function &lt;lambda&gt; at 0x1097b1ea0&gt;
&gt;&gt;&gt; fc()  # calling a function executes the expression, each time
-2
&gt;&gt;&gt; c += 2
&gt;&gt;&gt; fc()
4
</code></pre>
</div>
<span class="comment-copy">Why do you believe <code>fc</code> would change? The variable stores the <i>outcome</i> of the expression, not the expression itself.</span>
<span class="comment-copy">Take a look at: <a href="https://docs.python.org/2/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">docs.python.org/2/tutorial/controlflow.html#defining-functions</a> or <a href="https://docs.python.org/3.5/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">docs.python.org/3.5/tutorial/â€¦</a> for python 3.x</span>
