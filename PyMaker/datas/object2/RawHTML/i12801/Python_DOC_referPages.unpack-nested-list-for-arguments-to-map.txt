<div class="post-text" itemprop="text">
<p>I'm sure there's a way of doing this, but I haven't been able to find it. Say I have:</p>
<pre><code>foo = [
    [1, 2],
    [3, 4],
    [5, 6]
]

def add(num1, num2):
    return num1 + num2
</code></pre>
<p>Then how can I use <code>map(add, foo)</code> such that it passes <code>num1=1</code>, <code>num2=2</code> for the first iteration, i.e., it does <code>add(1, 2)</code>, then <code>add(3, 4)</code> for the second, etc.?</p>
<ul>
<li>Trying <code>map(add, foo)</code> obviously does <code>add([1, 2], #nothing)</code> for the first iteration</li>
<li>Trying <code>map(add, *foo)</code> does <code>add(1, 3, 5)</code> for the first iteration</li>
</ul>
<p>I want something like <code>map(add, foo)</code> to do <code>add(1, 2)</code> on the first iteration.</p>
<p>Expected output: <code>[3, 7, 11]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like you need <a href="https://docs.python.org/3/library/itertools.html#itertools.starmap" rel="nofollow"><code>starmap</code></a>:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; list(itertools.starmap(add, foo))
[3, 7, 11]
</code></pre>
<p>This unpacks each argument <code>[a, b]</code> from the list <code>foo</code> for you, passing them to the function <code>add</code>. As with all the tools in the <code>itertools</code> module, it returns an iterator which you can consume with the <code>list</code> built-in function.</p>
<p>From the documents:</p>
<blockquote>
<p>Used instead of <code>map()</code> when argument parameters are already grouped in tuples from a single iterable (the data has been “pre-zipped”). The difference between <code>map()</code> and <code>starmap()</code> parallels the distinction between <code>function(a,b)</code> and <code>function(*c)</code>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>try this:</p>
<pre><code> foo = [
    [1, 2],
    [3, 4],
    [5, 6]]

def add(num1, num2):
        return num1 + num2

print(map(lambda x: add(x[0], x[1]), foo))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There was another answer with a perfectly valid method (even if not as readable as ajcr's answer), but for some reason it was deleted. I'm going to reproduce it, as it may be useful for certain situations</p>
<pre><code>&gt;&gt;&gt; map(add, *zip(*foo))
[3, 7, 11]
</code></pre>
</div>
<span class="comment-copy">can you check your question as the answers and what you say you want as expected output are not the same</span>
<span class="comment-copy">Wow, good to know it. :)</span>
<span class="comment-copy">after reading the question again it seems we are all  wrong as the OP wants to  <code>add(1, 2</code>), then <code>add(2, 3)</code> ... unless that is a mistake by the OP</span>
<span class="comment-copy"><code>[3, 7 ,11]</code> is indeed the expected result for my example :)</span>
<span class="comment-copy">lol well they half clarified, the left the <i>it does <code>add(1, 2)</code>, then <code>add(2, 3)</code></i> but added expected output</span>
<span class="comment-copy">@BinaryFunt: I think now you've clarified the expected output it's clear - I edited the typo which caused the doubt originally.</span>
<span class="comment-copy">This can be slightly quicker than ajcr's answer</span>
