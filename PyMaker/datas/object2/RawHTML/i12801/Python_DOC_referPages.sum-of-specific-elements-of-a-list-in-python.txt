<div class="post-text" itemprop="text">
<blockquote>
<p>What question is asking for is a list that contains the number of all occurrences of the number 2 for a given index. </p>
</blockquote>
<p>For example:</p>
<pre><code>[1, 2, 2]
[2, 1, 1]
[1, 1, 2]
</code></pre>
<p>Gives</p>
<pre><code>[1,1,2]
</code></pre>
<p>While </p>
<pre><code>[2, 2, 2]
[2, 1, 2]
[2, 2, 1]
</code></pre>
<p>Gives:</p>
<pre><code>[3,2,2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand the problem correctly, you're trying to rotate the matrix by 90 degrees to the right, then count the number of twos in each of the rows in the matrix:</p>
<pre><code>from numpy import array

l = [[1, 2, 2, 1, 1], [1, 1, 2, 2, 2], [1, 1, 1, 2, 2], [2, 2, 1, 2, 2], [2, 2, 1, 1, 1]]

result = [cur_l.count(2) for cur_l in array(l).T]
</code></pre>
<p>Output</p>
<pre><code>print result
[2, 3, 2, 3, 3]
</code></pre>
<p><strong>Edit:</strong></p>
<p>Here's a solution without numpy:</p>
<pre><code>&gt;&gt;&gt; [cur_l.count(2) for cur_l in map(list, zip(*l))]
[2, 3, 2, 3, 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Iterate each index of your length five list, then look at all of those indices in l that contain a 2. If so, add 1 to a counter. Append that counter to a new list to after looking at each sub list in l.</p>
<pre><code>l = [[1, 2, 2, 1, 1],
    [1, 1, 2, 2, 2],
    [1, 1, 1, 2, 2],
    [2, 2, 1, 2, 2],
    [2, 2, 1, 1, 1]]

output = []
for i in range(0, len(l[0])):
    sum = 0
    for j in range(0, len (l)):
        if l[j][i] == 2:
            sum += 1
    output.append(sum)

print output
</code></pre>
<p>Outputs:</p>
<pre><code>[2, 3, 2, 3, 3]
</code></pre>
</div>
<span class="comment-copy">Please clarify the question and use a readable example</span>
<span class="comment-copy">there are 4 2's in 4th element, how come it shows only 3 1's?</span>
<span class="comment-copy"><i>After all that I should get a list like this:</i> What's this? Also I still don't understand your example...and what have you tried?</span>
<span class="comment-copy">Oh man, can't able to understand the logic.</span>
<span class="comment-copy">@KevinGuan it won't give the expected output. <code>[i.count(2) for i in l]</code></span>
<span class="comment-copy">I think this answered my problem, but I dont understand what the cur_l is</span>
<span class="comment-copy">Wouldn't it be simpler to use <code>cur_l.count(2)</code> than <code>len([x for x in cur_l if x == 2])</code></span>
<span class="comment-copy">@DavidNunes - I can't read the code when it's squished into one line, but if you're interested in counting the twos in rows without transposing it, in the first solution, just remove the <code>.T</code> after <code>array(l)</code>; in the second solution, replace <code>map(list, zip(*l))</code>, with` l`. But that doesn't seem to be the question you were asking.</span>
<span class="comment-copy">@Stuart - sure, that would work for the non-numpy solution. I'll edit accordingly.</span>
<span class="comment-copy">I wanted exactly what you showed me, I appreciate it</span>
<span class="comment-copy">This works but avoid using <code>sum</code> as a variable name</span>
<span class="comment-copy">@Stuart I'm new to programming, is this just a python convention, or is sum too general?</span>
<span class="comment-copy">@MonteCarlo: Stuart means that <code>sum()</code> is a function name, use it as a variable name will not be able to use that function again.</span>
<span class="comment-copy">Python will throw an error if you use a <a href="https://docs.python.org/3.4/reference/lexical_analysis.html#keywords" rel="nofollow noreferrer">keyword</a> as a variable name, but not if you use one of its <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">built-in functions</a> as a variable name, like <code>sum</code>. As Kevin says, using <code>sum</code> as a variable name should be avoided because you won't then be able to use the built-in function.</span>
<span class="comment-copy">@Stuart - can you help me with my new problem? I actually want a thing a bit different from what I tought I wanted</span>
