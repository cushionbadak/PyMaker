<div class="post-text" itemprop="text">
<p>I have the dictionary <code>{'Bill': 4, 'Alex' : 4, 'Bob' : 3, "Charles": 7}</code></p>
<p>I need to sort this dictionary first numerically, then within that, alphabetically. If 2 items have the same number key, they need to be sorted alphabetically. </p>
<p>The output of this should be <code>Bob, Alex, Bill, Charles</code></p>
<p>I tried using lambda, list comprehension, etc but I can't seem to get them to sort correctly. </p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/functions.html#sorted"><code>sorted</code></a> with key function (order by value (<code>d[k]</code>) first, then key <code>k</code>):</p>
<pre><code>&gt;&gt;&gt; d = {'Bill': 4, 'Alex' : 4, 'Bob' : 3, "Charles": 7}    
&gt;&gt;&gt; sorted(d, key=lambda k: (d[k], k))
['Bob', 'Alex', 'Bill', 'Charles']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sort on the dictionary's items (which are tuples) using <code>sorted()</code>. You can specify the sort key which will be by the dictionary's values, and then its keys:</p>
<pre><code>&gt;&gt;&gt; d = {'Bill': 4, 'Alex' : 4, 'Bob' : 3, "Charles": 7}
&gt;&gt;&gt; sorted(d.items(), key=lambda x:(x[1],x[0]))
[('Bob', 3), ('Alex', 4), ('Bill', 4), ('Charles', 7)]
&gt;&gt;&gt; [t[0] for t in sorted(d.items(), key=lambda x:(x[1],x[0]))]
['Bob', 'Alex', 'Bill', 'Charles']
</code></pre>
</div>
<span class="comment-copy">How would I do one value descending and the other ascending?</span>
<span class="comment-copy">@AlexStewart, For numerical value, you can control that with negation (<code>-</code>) for descending. For non-numerical value, you should define subclass with <code>__lt__</code> defined.</span>
