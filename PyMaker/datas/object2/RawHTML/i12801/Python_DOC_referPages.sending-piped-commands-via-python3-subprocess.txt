<div class="post-text" itemprop="text">
<p>I am trying to execute the following subprocess command via python3.4</p>
<pre><code>cd /home/mailer-domains/domain | rndc loadkeys domain
</code></pre>
<p>I have tried numerous methods using .call and .Popen but it either doesn't like my pipe or it doesn't like my switch</p>
<pre><code>&gt;&gt;&gt; subprocess.call(['cd /home/mailer-domains/'+domain, '|', 'rndc', 'loadkeys', domain])    
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python3.4/subprocess.py", line 537, in call
    with Popen(*popenargs, **kwargs) as p:
  File "/usr/local/lib/python3.4/subprocess.py", line 859, in __init__
    restore_signals, start_new_session)
  File "/usr/local/lib/python3.4/subprocess.py", line 1457, in _execute_child
    raise child_exception_type(errno_num, err_msg)
FileNotFoundError: [Errno 2] No such file or directory: 'cd /home/mailer-domains/lecomm.com'

&gt;&gt;&gt; subprocess.call(['cd /home/ex-mailer-domains/'+domain, '&amp;&amp;', 'rndc', 'loadkeys', domain]) 
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python3.4/subprocess.py", line 537, in call
    with Popen(*popenargs, **kwargs) as p:
  File "/usr/local/lib/python3.4/subprocess.py", line 859, in __init__
    restore_signals, start_new_session)
  File "/usr/local/lib/python3.4/subprocess.py", line 1457, in _execute_child
    raise child_exception_type(errno_num, err_msg)
FileNotFoundError: [Errno 2] No such file or directory: 'cd /home/mailer-domains/lecomm.com'


&gt;&gt;&gt; subprocess.call(['cd', '/home/mailer-domains/'+domain, '&amp;&amp;', 'rndc', 'loadkeys', domain])
cd: too many arguments
2


&gt;&gt;&gt; subprocess.Popen(['cd', '/home/mailer-domains/'+domain, '&amp;&amp;', 'rndc', 'loadkeys', domain])    
&lt;subprocess.Popen object at 0x805aa5860&gt;
cd: too many arguments


&gt;&gt;&gt; subprocess.call(['cd', '/home/mailer-domains/'+domain] '&amp;&amp;' ['rndc', 'loadkeys', domain])    
  File "&lt;stdin&gt;", line 1
    subprocess.call(['cd', '/home/mailer-domains/'+domain] '&amp;&amp;' ['rndc', 'loadkeys', domain])
                                                                 ^
SyntaxError: invalid syntax


&gt;&gt;&gt; subprocess.call(['cd', '/home/mailer-domains/'+domain], '&amp;&amp;' ['rndc', 'loadkeys', domain])
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: string indices must be integers


&gt;&gt;&gt; subprocess.call(['cd', '/home/mailer-domains/'+domain], ['rndc', 'loadkeys', domain])     
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python3.4/subprocess.py", line 537, in call
    with Popen(*popenargs, **kwargs) as p:
  File "/usr/local/lib/python3.4/subprocess.py", line 767, in __init__
    raise TypeError("bufsize must be an integer")
TypeError: bufsize must be an integer


&gt;&gt;&gt; subprocess.call(['cd', '/home/mailer-domains/'+domain] ['rndc', 'loadkeys', domain])
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: list indices must be integers, not tuple


&gt;&gt;&gt; subprocess.call(['cd', '/home/mailer-domains/'+domain] +['rndc', 'loadkeys', domain])
cd: too many arguments
2


&gt;&gt;&gt; ps = subprocess.Popen((['cd', '/home/mailer-domains/'+domain]), stdout = subprocess.PIPE)        
&gt;&gt;&gt; output = subprocess.check_output((['rndc', 'loadkeys', domain]), stdin=ps.stdout)
rndc: 'loadkeys' failed: not found
no matching zone 'lecomm.com' in any view
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/local/lib/python3.4/subprocess.py", line 620, in check_output
    raise CalledProcessError(retcode, process.args, output=output)
subprocess.CalledProcessError: Command '['rndc', 'loadkeys', 'lecomm.com']' returned non-zero exit status 1


&gt;&gt;&gt; output = subprocess.check_output((['rndc', 'loadkeys', domain]), stdin=ps.stdout, stdout=PIPE)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'PIPE' is not defined
</code></pre>
<p>How do I properly send 2 piped commands via Python3 <code>subprocess</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer can be found in the <a href="https://docs.python.org/3/library/subprocess.html#replacing-shell-pipeline" rel="nofollow">subprocess documentation</a>.</p>
<p>The functions from the <code>subprocess</code> module normally do not call a shell to interpret the commands, but rather invoke them directly with the given arguments! This behaviour can be overidden by using the argument <code>shell=True</code> (example from the Python documentation):</p>
<pre><code>output = check_output("dmesg | grep hda", shell=True)
</code></pre>
<p>However, this is not advisable if the command and arguments are not fix but depends on user input. Then, the correct way to do this is to use two <code>Popen</code> calls and construct the pipeline by hand (code example again from the Python documentation):</p>
<pre><code>p1 = Popen(["dmesg"], stdout=PIPE)
p2 = Popen(["grep", "hda"], stdin=p1.stdout, stdout=PIPE)
p1.stdout.close()  # Allow p1 to receive a SIGPIPE if p2 exits.
output = p2.communicate()[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need pipes at all, just pass the <code>cwd</code> to to subprocess:</p>
<pre><code>subprocess.call(['rndc', 'loadkeys', domain],cwd='/home/mailer-domains/'+domain)
</code></pre>
<p>If you did wanted to  change directory for more than just the subprocess, you should use <code>os.chdir</code>.</p>
</div>
<span class="comment-copy">What are you trying to achieve by piping the output of <code>cd</code> (which is normally empty) into the <code>rndc</code> process? Do you really just want to run <code>rndc</code> in the new directory?</span>
<span class="comment-copy">@TomDalton  I am assuming the loadkey switch looks in the current directory.  I saw some odd behavior that indicated this. I have numerous zone directories each with their own keys.</span>
<span class="comment-copy">though, I am pondering to myself, that sounds silly.</span>
<span class="comment-copy">There is no need for a pipe at all. the cwd can be passed to subprocess</span>
<span class="comment-copy">@PadraicCunningham Agreed in this case. However, someone searching for the title of this question will almost certainly be interested in this answer.</span>
<span class="comment-copy">There are 1000 dupes of how to pipe, this is not the approach to take for the OP, piping when you can pass the directory makes no sense</span>
<span class="comment-copy">@PadraicCunningham: 1001... :D</span>
