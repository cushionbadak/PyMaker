<div class="post-text" itemprop="text">
<p>I am trying to identify all cells that contain external workbook references, using openpyxl in Python 3.4.  But I am failing.  My first try consisted of:</p>
<pre><code>def find_external_value(cell):
# identifies an external link in a given cell

    if '.xls' in cell.value:
        has_external_reference = True

    return has_external_value
</code></pre>
<p>However, when I print the cell values that have  external values to the console, it yields this:</p>
<pre><code>=[1]Sheet1!$B$4
=[2]Sheet1!$B$4
</code></pre>
<p>So, openpyxl obviously does not parse formulas containing external values in the way I imagined and since square brackets are used for table formulas, there is no sense in trying to pick up on external links in this manner.  </p>
<p>I dug a little deeper and found the detect_external_links function in the openpyxl.workbook.names.external module (<a href="http://openpyxl.readthedocs.org/en/latest/_modules/openpyxl/workbook/names/external.html#detect_external_links" rel="nofollow noreferrer">reference</a>).  I have no idea if one can actually call this function to do what I want.</p>
<p>From the console results it seems as if openpyxl understands that there are references, and seems to contain them in a list of sorts.  But can one access this list?  Or detect if such a list exists?</p>
<p>Whichever way - all I need is to figure out if a cell contains a link to an external workbook.</p>
</div>
<div class="post-text" itemprop="text">
<p>I decided to veer outside of openpyxl in order to achieve my goal - even though openpyxl has numerous functions that refer to external links I was unable to find a simple way to achieve my goal.</p>
<p>Instead I decided to use <a href="https://docs.python.org/3/library/zipfile.html#module-zipfile" rel="nofollow">ZipFile</a> to open the workbook in memory, then search for the externalLink1.xml file.  If it exists, then the workbook contains external links:</p>
<pre><code>import tkinter as tk
from tkinter import filedialog
from zipfile import ZipFile
Import xml.etree.ElementTree

root = tk.Tk()
root.withdraw()
file_path = filedialog.askopenfilename()

with ZipFile(file_path) as myzip:
    try:
        my_file = myzip.open('xl/externalLinks/externalLink1.xml')
        e = xml.etree.ElementTree.parse(my_file).getroot()
        print('Has external references')
    except:
        print('No external references')
</code></pre>
<p>Once I have the XML file, I can proceed to identify the cell address, value and other information by running through the XML tree using <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow">ElementTree</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I have found a solution to this. 
Use the openpyxl library for load the xlsx file as </p>
<pre><code>import openpyxl
wb=openpyxl.load_workbook("Myworkbook.xlsx")

"""len(wb._external_links)        *Add this line to get count of linked workbooks*"""

items=wb._external_links
for index, item in enumerate(items):
    Mystr =wb._external_links[index].file_link.Target
    Mystr=Mystr.replace("file:///","")
    print(Mystr.replace("%20"," "))


----------------------------
Out[01]: ##Indicates that the workbook has 4 external workbook links##
/Users/myohannan/AppData/Local/Temp/49/orion/Extension Workpapers_Learning Extension Calc W_83180610.xlsx
/Users/lmmeyer/AppData/Local/Temp/orion/Complete Set of Workpapers_PPS Workpapers 123112_111698213.xlsx
\\SF-DATA-2\IBData\TEMP\ie5\Temporary Internet Files\OLK8A\LBO Models\PIGLET Current.xls
/WINNT/Temporary Internet Files/OLK3/WINDOWS/Temporary Internet Files/OLK8304/DEZ.XLS     
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is no way to do what you want from within openpyxl. You are free to try and use the library to work with a file archive yourself but this will entail working closely with the file format specification.</p>
</div>
<span class="comment-copy">If you found this in the documentation, could you please provide a link for that as well?</span>
<span class="comment-copy">I checked out the class and methods provided in the documentation. Read this documentation. It can give you some clue <a href="https://openpyxl.readthedocs.io/en/stable/_modules/openpyxl/workbook/external_link/external.html" rel="nofollow noreferrer">link</a></span>
<span class="comment-copy">Thank you Charlie, any advice on how to do that?</span>
<span class="comment-copy">No, because I'm not really sure what you want to do. If you're interested in formulae you may also find the tokeniser useful. You'll need to look at the openpyxl source and get used to working with an Excel archive. I won't be following up on this.</span>
<span class="comment-copy">For future readers: I want to check a formula to see if it references an external workbook, using openpyxl. Tokenizer won't work because openpyxl doesn't reveal external references in the formulae, so nothing can be parsed. I worked through the source but didn't find anything that seems to help. So I will take a different approach to Charlie's suggestion and see if I can crack open the Excel archive using an appropriate XML library. I will revert with an answer.</span>
