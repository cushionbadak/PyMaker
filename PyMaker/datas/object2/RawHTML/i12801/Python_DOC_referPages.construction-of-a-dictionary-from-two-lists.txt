<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/209840/convert-two-lists-into-a-dictionary-in-python">Convert two lists into a dictionary in Python</a>
<span class="question-originals-answer-count">
                    15 answers
                </span>
</li>
</ul>
</div>
<p>I have two lists as shown below (of equal length)</p>
<pre><code>cities = ['New York','Tokyo','Moscow','London']
altitudes = ['13000','12000','11000','9000']
</code></pre>
<p>I want to construct a dictionary as follows</p>
<pre><code>mydict = {x : y for x in cities and y in altitudes}
</code></pre>
<p>My python interpreter says invalid syntax. why is this invalid? How would I do this?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>thing = {city:altitude for city, altitude in zip(cities, altitudes)}
</code></pre>
<p>Comprehensions expect a single iterable (list, etc) to loop across.  So, to solve it, you first need to convert your two lists into a single list, then feed that list into a comprehension that converts it to dict.</p>
<p>Pulling the above line apart a bit, you first use python's <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow">zip</a> to aggregate the elements</p>
<pre><code>list_of_tuples = zip(cities, altitudes)
</code></pre>
<p>Then you convert that into a dict:</p>
<pre><code>thing = {city: alt for city, alt in list_of_tuples}
</code></pre>
<p>or more simply</p>
<pre><code>thing = dict(list_of_tuples)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>mydict = dict(zip(cities, altitudes))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you actually want is </p>
<pre><code>mydict = dict(zip(cities, altitudes))
</code></pre>
<p>Doing a nested loop will give you the wrong results as it will iterate the cartesian product of the two lists as evidenced by:</p>
<pre><code>&gt;&gt;&gt; [ (c,a) for c in cities for a in altitudes ]
[('New York', '13000'), ('New York', '12000'), ('New York', '11000'), ('New York', '9000'), ('Tokyo', '13000'), ('Tokyo', '12000'), ('Tokyo', '11000'), ('Tokyo', '9000'), ('Moscow', '13000'), ('Moscow', '12000'), ('Moscow', '11000'), ('Moscow', '9000'), ('London', '13000'), ('London', '12000'), ('London', '11000'), ('London', '9000')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>cities = ['New York','Tokyo','Moscow','London']
altitudes = ['13000','12000','11000','9000']
print dict(i for i in zip(cities,altitudes))
</code></pre>
<p>You can simply do it using this.</p>
</div>
<span class="comment-copy">While this code may answer the question, it would be better to include some context, explaining how it works and when to use it. Code-only answers are not useful in the long run.</span>
<span class="comment-copy"><code>i for i in</code> is excessive</span>
<span class="comment-copy">@EliKorvigo yeah realised later.........too late now :P</span>
