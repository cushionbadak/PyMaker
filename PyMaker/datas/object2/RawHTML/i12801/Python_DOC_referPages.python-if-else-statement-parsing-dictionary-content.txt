<div class="post-text" itemprop="text">
<p>I have some code that analyzes pull request in GitHub based on certain conditions and then prints output to the console. </p>
<p>The if/else statement below evaluates the set of files associated with a pull request and if any file in that set has a <code>'status'</code> of <code>'added'</code> or <code>'removed'</code>, output True/False once.</p>
<pre><code>if 'added' in (data.status for data in repo.pull_request(prs.number).files()) or 'removed' in (data.status for data in repo.pull_request(prs.number).files()):
   print('Added or Deleted Files: True')
else:
   print('Added or Deleted Files: False')
</code></pre>
<p>I'm trying to achieve this same result with a second if/else statement that's contained in a for loop pertaining to the number of files within each commit of a pull request, but it is evaluating and outputting each individual file within a commit as opposed to the set of files associate with all commits for a pull request.</p>
<pre><code>for pullrequestcommits in repo.pull_request(prs.number).commits():
    files_in_commit = repo.commit(pullrequestcommits.sha).as_dict()

    if len([file['filename'] for file in files_in_commit['files']]) &lt;= 10:
       print("Commits in pr less than/equal 10 files: True")
    else:
       print("Commit in pr less than/equal 10 files: False")
</code></pre>
<p>In the output, I get the desired result for the evaluation of added or deleted files as it is evaluating the set files and then outputs True or False based on the evaluation of the set.  I'm trying to achieve the same result with commits, but it's outputting True/False based on each individual commit and not analyzing the set of files within the commits. For <code>Title: update1</code>, it should output <code>Commits in pr less than/equal 10 files: True</code> once and for <code>Title: update 2</code>, it should output <code>Commits in pr less than/equal 10 files: False</code> just once, as one of the commits in the pull request has more than 10 files.</p>
<p>Current output:</p>
<pre><code>Title:  update 1
Added or Deleted Files: True
Commits in pr less than/equal 10 files: True
Commits in pr less than/equal 10 files: True

Title:  update 2
Added or Deleted Files: True
Commits in pr less than/equal 10 files: True
Commit in pr less than/equal 10 files: False
Commits in pr less than/equal 10 files: True
</code></pre>
<p>Desired output:</p>
<pre><code>Title:  update 1
Added or Deleted Files: True
Commits in pr less than/equal 10 files: True

Title:  update 2
Added or Deleted Files: True
Commit in pr less than/equal 10 files: False
</code></pre>
<p>Code in full:</p>
<pre><code>for prs in repo.pull_requests():
        getlabels = repo.issue(prs.number).as_dict()

        if 'ready-to-merge' in [getlabels['name'] for getlabels in getlabels['labels']] and 'Validation Succeeded' in [getlabels['name'] for getlabels in getlabels['labels']]:
            changes = repo.pull_request(prs.number).as_dict()
            print('Title: ', changes['title'])

            if 'added' in (data.status for data in repo.pull_request(prs.number).files()) or 'removed' in (data.status for data in repo.pull_request(prs.number).files()):
                print('Added or Deleted Files: True')
            else:
                print('Added or Deleted Files: False'

            for pullrequestcommits in repo.pull_request(prs.number).commits():
                files_in_commit = repo.commit(pullrequestcommits.sha).as_dict()

                if len([file['filename'] for file in files_in_commit['files']]) &lt;= 10:
                    print("Commits in pr less than/equal 10 files: True")
                else:
                    print("Commit in pr less than/equal 10 files: False")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>Improved solution</h2>
<p>Sounds like you need to sum up all file counts per PR:</p>
<pre><code>files_in_pr = 0
for pullrequestcommits in repo.pull_request(prs.number).commits():
    files_in_commit = repo.commit(pullrequestcommits.sha).as_dict()
    files_in_pr += len([file['filename'] for file in files_in_commit['files']]) 
    # This should do. No?
    # files_in_pr += len(files_in_commit['files']]) 

 if files_in_pr &lt;= 10:
     print("Commits in pr less than/equal 10 files: True")
 else:
     print("Commit in pr less than/equal 10 files: False")
</code></pre>
<p>Your code:</p>
<pre><code>for pullrequestcommits in repo.pull_request(prs.number).commits():
    files_in_commit = repo.commit(pullrequestcommits.sha).as_dict()

    if len([file['filename'] for file in files_in_commit['files']]) &lt;= 10:
        print("Commits in pr less than/equal 10 files: True")
    else:
        print("Commit in pr less than/equal 10 files: False")
</code></pre>
<p>Counts the number of files per commit but prints out how many commits it found.</p>
<h2>First attempt</h2>
<p>It looks like, this is closer to what you intent to do:</p>
<pre><code>number_of_commits = len(repo.commit(pullrequestcommits.sha).as_dict())
if number_of_commits &lt;= 10:
    print("Commits in pr less than/equal 10 files: True")
else:
    print("Commit in pr less than/equal 10 files: False")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>PullRequest</code> object has a <a href="http://github3py.readthedocs.org/en/latest/pulls.html#github3.pulls.PullRequest.files" rel="nofollow"><code>.files()</code></a> method, which should help you count the files regardless of which commit they're in.</p>
<hr/>
<p>This</p>
<pre><code>if 'added' in (data.status for data in repo.pull_request(prs.number).files()) or 'removed' in (data.status for data in repo.pull_request(prs.number).files()):
</code></pre>
<p>can be (using <code>any</code>)</p>
<pre><code>if any(data.status in ['added', 'removed'] for data in repo.pull_request(prs.number).files()):
</code></pre>
<p>You don't need to get the file names to count the files, so this</p>
<pre><code>if len([file['filename'] for file in files_in_commit['files']]) &lt;= 10:
</code></pre>
<p>should be</p>
<pre><code>if len(files_in_commit['files']) &lt;= 10:
</code></pre>
<p>or if <code>files_in_commit['files']</code> is an iterable and not a list, make it a list first:</p>
<pre><code>if len(list(files_in_commit['files'])) &lt;= 10:
</code></pre>
<p>If you want the number of things that satify a condition, you can write a sum:</p>
<pre><code>if sum(file.status in ['added', 'removed'] for file in commit) &lt;= 10:
</code></pre>
<p>or, less preferable, make a list filtered by an <code>if</code>, and find its length:</p>
<pre><code>if len([file for file in commit if file.status in ['added', 'removed']]) &lt;= 10:
</code></pre>
<p>It's better to define a function for your criteria:</p>
<pre><code>def added_or_removed(file):
    return file.status in ['added', 'removed']

if sum(added_or_removed(file) for file in commit) &lt;= 10:
</code></pre>
<hr/>
<p>For this:</p>
<pre><code>for pullrequestcommits in repo.pull_request(prs.number).commits():
    files_in_commit = repo.commit(pullrequestcommits.sha).as_dict()

    if len([file['filename'] for file in files_in_commit['files']]) &lt;= 10:
        print("Commits in pr less than/equal 10 files: True")
    else:
        print("Commit in pr less than/equal 10 files: False")
</code></pre>
<p>you are taking each <code>pullrequestcommits</code> (named wrong; should be <code>pullrequestcommit</code>, singular) and checking whether it satisfies your condition (total changed files &lt;= 10).</p>
<p>With corrected variable names and corrections above:</p>
<pre><code>for commit in repo.pull_request(prs.number).commits():
    files_in_commit = repo.commit(commit.sha).as_dict()['files']

    if len(files_in_commit) &lt;= 10:
        print("Commits in pr less than/equal 10 files: True")
    else:
        print("Commits in pr less than/equal 10 files: False")
</code></pre>
<p>Define the conditions as functions:</p>
<pre><code>def added_or_removed(file):
    return file.status in ['added', 'removed']

def added_or_removed_at_most_ten_files(files):
    return sum(added_or_removed(file) for file in files) &lt;= 10

def changed_at_most_ten_files(files):
    return len(files) &lt;= 10
</code></pre>
<p>To check if any single commit has greater than ten files:</p>
<pre><code>no_commit_has_more_than_ten_files = True
for commit in repo.pull_request(prs.number).commits():
    files_in_commit = repo.commit(commit.sha).as_dict()['files']

    if not changed_at_most_ten_files(files_in_commit):
        no_commit_has_more_than_ten_files = False
        break

if no_commit_has_more_than_ten_files:
    print("Commits in pr less than/equal 10 files: True")
else:
    print("Commits in pr less than/equal 10 files: False")
</code></pre>
<p>This can be rewritten as an <code>any</code> or an <code>all</code>:</p>
<pre><code>def changed_at_most_ten_files(repo, commit):
    return len(repo.commit(commit.sha).as_dict()['files']) &lt;= 10

commits = repo.pull_request(prs.number).commits()
result = all(changed_at_most_ten_files(repo, commit) for commit in commits):
print("Commits in pr less than/equal 10 files:", result)
</code></pre>
<p>To check if the commit itself changes at most ten files, you would have to be careful that no file is counted twice. To do that, you would usually use a <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow"><code>set()</code></a>, add the files to the set, and check the length at the end. You have to pass in something that would uniquely identify each file, and which can be hashed. In this case, the file path would work.</p>
</div>
<span class="comment-copy">Too much information. Should have a summary first, and then additional details that might be useful.</span>
<span class="comment-copy">Could you post a git log of the commits this is pulling from?</span>
<span class="comment-copy">@BrendanAbel.  I'm querying the github api directly so I don't have a log file.  I can post the relevant sample json returned as shown here: <a href="https://developer.github.com/v3/repos/commits/#get-a-single-commit" rel="nofollow noreferrer">developer.github.com/v3/repos/commits/#get-a-single-commit</a>?</span>
<span class="comment-copy">@DBS I wanted to see the logs to see the actual number of files in the commits.  Are you sure about the number of files in the commits?</span>
<span class="comment-copy">@BrendanAbel Yes, I'm sure about the number of files in the commits.  I've printed that out before crafting the True/False statements.</span>
<span class="comment-copy">I would like to analyze the number of files per commit for a given pull request (pull request may have more than one commit) and if all of the commits in the pull request &lt;=10 files, print true, just once, else print false just once.  Right now its printing T/F based on each commit and not evaluating the all of the commits in the pull request as a set.</span>
<span class="comment-copy">Sounds like you need to sum up all file counts per PR. Updated my answer.</span>
<span class="comment-copy">I tried out your update and I still get the same output, True/False for each commit (as in my current output example).  My desired output is True/False printed just once after an evaluation of the number of files in each commit for the pull request (evaluated as a set).  I got this to work  for the if 'added' statement, but can't get this one to do the same.</span>
<span class="comment-copy">Are you sure your indentation is right?</span>
<span class="comment-copy">I unindented the if statement and placed it on the same level as the for statement. It prints just one True/False statement, but it's not accurate because it's only looking at the first commit returned for the pull request and if it's &lt;= 10 it prints True.  A pull request can have multiple commits and thus it needs to evaluate all the commits in the pull request before it outputs the result. I hope that makes sense. In my example output for <code>Title: update 2</code> it would return True, though it should be False because the second commit in the pull request returns False.</span>
<span class="comment-copy">I changed the if statement to <code>if len(files_in_commit['files']) &lt;= 10:</code>, but I'm still getting the individual results as in my current output example, but I would like just one <code>Commits in pr less than/equal 10 files:</code> as in my desired output example if any of commits returned meet/fail &lt;= 10 files,  I hope that makes sense.</span>
<span class="comment-copy">Then change your innermost <code>for</code> loop to an <code>any</code>.</span>
<span class="comment-copy">I made this change: <code>if any(len([file['filename'] for file in files_in_commit['files']])) &lt;= 10:</code> and tried this <code>if any(len(files_in_commit['files'])) &lt;= 10:</code>, but I get an error message int object is not iterable.</span>
<span class="comment-copy">@DBS, you're making changes without understanding what you're doing. <code>any</code> is a built-in function which takes an iterable (a list or a generator, including generator expressions such as <code>x for x in y</code>) and returns True if any of them evaluate to True.</span>
