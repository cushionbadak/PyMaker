<div class="post-text" itemprop="text">
<p>RegEx Expression:</p>
<pre><code>[Height|Length|Width|Depth]:\D*\s*(\d*\.*-*\d*)-*\D*\s*  [Height|Length|Width|Depth]:\D*\s*(\d*\.*-*\d*)-*\D*\s*[Height|Length|Width|Depth]:\D*\s*(\d*\.*-*\d)*-*\D*\s*
</code></pre>
<p>Input Text - JSON TEXT</p>
<pre><code>{"Product Type":["Printer Cartridges"],"Product Name":["Xerox - Yellow - toner cartridge ( equivalent to: HP CB382A ) - for HP Color LaserJet CM6030 CM6040 CP6015"],"Brand":["XEROX"],"Product Long Description":["&lt;!-- CNET Content --&gt;Toner cartridges for HP printers from Xerox deliver brilliant image quality and excellent reliability at a low cost. Compared to the original HP toner cartridge youll get better or equal page yield pay around 25% less. Get more pay less without risk.&lt;br&gt;&lt;br&gt;&lt;h3 id=detailspecs&gt;Specifications&lt;/h3&gt;&lt;span class=font_size3bold&gt;General&lt;/span&gt;&lt;br&gt;&amp;nbsp;&lt;img align=absmiddle src=http://images.highspeedbackbone.net/main/gfx-blkbullet.jpg&gt;&amp;nbsp;&amp;nbsp;Compatible Cartridge: &amp;nbsp;HP CB382A&lt;br&gt;&lt;br&gt;&lt;span class=font_size3bold&gt;Consumable&lt;/span&gt;&lt;br&gt;&amp;nbsp;&lt;img align=absmiddle src=http://images.highspeedbackbone.net/main/gfx-blkbullet.jpg&gt;&amp;nbsp;&amp;nbsp;Consumable Type: &amp;nbsp;Toner cartridge&lt;br&gt;&amp;nbsp;&lt;img align=absmiddle src=http://images.highspeedbackbone.net/main/gfx-blkbullet.jpg&gt;&amp;nbsp;&amp;nbsp;Printing Technology: &amp;nbsp;Laser&lt;br&gt;&amp;nbsp;&lt;img align=absmiddle src=http://images.highspeedbackbone.net/main/gfx-blkbullet.jpg&gt;&amp;nbsp;&amp;nbsp;Color: &amp;nbsp;Yellow&lt;br&gt;&amp;nbsp;&lt;img align=absmiddle src=http://images.highspeedbackbone.net/main/gfx-blkbullet.jpg&gt;&amp;nbsp;&amp;nbsp;Included Qty: &amp;nbsp;1-pack&lt;br&gt;&amp;nbsp;&lt;img align=absmiddle src=http://images.highspeedbackbone.net/main/gfx-blkbullet.jpg&gt;&amp;nbsp;&amp;nbsp;Duty Cycle: &amp;nbsp;Up to 23500 pages at 5% coverage&lt;br&gt;&lt;br&gt;&lt;span class=font_size3bold&gt;Compatibility Information&lt;/span&gt;&lt;br&gt;&amp;nbsp;&lt;img align=absmiddle src=http://images.highspeedbackbone.net/main/gfx-blkbullet.jpg&gt;&amp;nbsp;&amp;nbsp;Compatible with: &amp;nbsp;HP Color LaserJet CM6030 MFP CM6030f MFP CM6040 MFP CM6040f MFP CP6015de CP6015dn CP6015n CP6015x CP6015xh&lt;br&gt;&lt;!-- END CNET Content --&gt;"],"Item ID":["41057188"],"Product Segment":["Electronics"],"UPC":["095205855838"]}
</code></pre>
<p><strong>Problem</strong>:</p>
<p>RegEx should check in JSON text if one of these <code>words --&gt; (Height or Width or Length or Depth)</code> are there then fetch the value. </p>
<p>Since above given JSON text doesn't have this kind of value it should not find anything but my RegEx is finding undesirable value. I think I am missing something in RegEx.</p>
<p>Edit:</p>
<p>For this input JSON - I should be be able to extract Height, Length, Width or Depth:</p>
<pre><code>{"Brand":["Concord Fans"],"Energy Guide: Appliance Labeling Rule Required":["N"],"Country of Origin: Components":["USA and/or Imported"],"Product Short Description":["Height: 6.2."],"Actual Color":["Multicolor"],"Product Segment":["Clothing, Shoes &amp; Accessories"],"Color":["Multicolor"],"Product Name":["Concord Fans RM-08 Remote &amp; Wall Control Set"],"Product Type":["Televisions"],"Manufacturer Part Number":["RM-08"],"Manufacturer":["Concord Fans"],"Category":["TVs"],"Product Long Description":["Height: 6-2- Width: 8-8- Length: 8-8- Energy Star: No- Energy Saver: No- UL Classification: UL Certified- UL Application: Dry SKU: CNCD467"],"GTIN":["00014592213038"],"Number of Batteries":["0"],"E-Waste Recycling Compliance Required":["N"],"UPC":["014592213038"]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is not a good idea, in general, to parse JSON data with regular expressions, but you definitely have something wrong in this part of the regular expression:</p>
<pre><code>[Height|Length|Width|Depth]
</code></pre>
<p>This would, for instance, match a single "H":</p>
<pre><code>&gt;&gt;&gt; re.search("[Height|Length|Width|Depth]", "H").group()
'H'
</code></pre>
<p>It looks like you've meant to use a <a href="https://docs.python.org/2/howto/regex.html#non-capturing-and-named-groups" rel="nofollow noreferrer"><em>non-capturing group here</em></a>:</p>
<pre><code>(?:Height|Length|Width|Depth)
</code></pre>
<p>See also:</p>
<ul>
<li><a href="https://stackoverflow.com/q/9801630/771848">What is the difference between square brackets and parentheses in a regex?</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>It looks that your data is json compatiable- So try <code>json</code> module instead-Details <a href="https://docs.python.org/2/library/json.html" rel="nofollow">here</a>. After converting into json you can access using regular dictionary key as <code>d['Product Long Description']</code> and thereafter you can use many way to extract any information from that - I just showed one way to go-</p>
<pre><code>import json,re

s = """{"Brand":["Concord Fans"],"Energy Guide: Appliance Labeling Rule Required":["N"],"Country of Origin: Components":["USA and/or Imported"],"Product Short Description":["Height: 6.2."],"Actual Color":["Multicolor"],"Product Segment":["Clothing, Shoes &amp; Accessories"],"Color":["Multicolor"],"Product Name":["Concord Fans RM-08 Remote &amp; Wall Control Set"],"Product Type":["Televisions"],"Manufacturer Part Number":["RM-08"],"Manufacturer":["Concord Fans"],"Category":["TVs"],"Product Long Description":["Height: 6-2- Width: 8-8- Length: 8-8- Energy Star: No- Energy Saver: No- UL Classification: UL Certified- UL Application: Dry SKU: CNCD467"],"GTIN":["00014592213038"],"Number of Batteries":["0"],"E-Waste Recycling Compliance Required":["N"],"UPC":["014592213038"]}"""

d=json.loads(json.loads(json.dumps(s)))
print d['Product Long Description']
print ''.join(d['Product Long Description']).split(":")[0:4]
print [filter(len,y) for y in re.findall(r'Height:\s*([\d.]+-[\d.]+)|Width:\s*([\d.]+-[\d.]+)|Length:\s*([\d.]+-[\d.]+)',''.join(d['Product Long Description']))]
</code></pre>
<p>Output-</p>
<pre><code>[u'Height: 6-2- Width: 8-8- Length: 8-8- Energy Star: No- Energy Saver: No- UL Classification: UL Certified- UL Application: Dry SKU: CNCD467']
[u'Height', u' 6-2- Width', u' 8-8- Length', u' 8-8- Energy Star']
[(u'6-2',), (u'8-8',), (u'8-8',)]
</code></pre>
</div>
<span class="comment-copy">Have you tried using the json library? <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">docs.python.org/3/library/json.html</a></span>
<span class="comment-copy">Can you give an example of the undesirable value, and the sample JSON that returned that value?</span>
<span class="comment-copy">Undesired Value I am getting on running this regex and input value is:  ['1-', '', '23500']</span>
<span class="comment-copy">Edit your question with that info please.</span>
<span class="comment-copy">I have updated my post with an example that should be able to extract information. Can you please suggest.</span>
<span class="comment-copy">I didn't understand the last print statement, how did u extract. it will be helpful if u can explain briefly.</span>
<span class="comment-copy"><code>r'\w+:'</code> means to split a string by <code>:</code> that have one or more word char i.e. a-z and 0-9 before.</span>
<span class="comment-copy">OK i edited answer!!</span>
