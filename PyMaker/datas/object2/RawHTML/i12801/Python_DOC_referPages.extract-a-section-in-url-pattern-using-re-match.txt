<div class="post-text" itemprop="text">
<p>In nodejs, i use regex to extract the sub-section under <code>tenant</code> in this url, <code>http://myServer:8000/api/running/tenant/sk/services</code>. It prints correctly, <code>sk</code>.</p>
<p>Code is,</p>
<pre><code>var re = /(?:[\w\W]+)\/tenant\/([\w]+?)\/(?:[\w\W]*)/
var results = re.exec('http://myServer:8000/api/running/tenant/sk/services')
console.log(results[1])
</code></pre>
<p>I moved the code to python as,</p>
<pre><code>import re
m = re.match(r"(?:\w\W+)tenant/(\w+)/(?:[\w\W]*)", "http://myServer:8000/api/running/tenant/sk/services")
m.group(1)
</code></pre>
<p>It throws <code>AttributeError: 'NoneType' object has no attribute 'group'</code></p>
<p>Why doesn't it match one word that comes after <code>tenant</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>findall/search should help you</p>
<p>findall</p>
<pre><code>&gt;&gt;&gt; m = re.findall(r"(?:\w\W+)tenant/(\w+)/(?:[\w\W]*)", "http://myServer:8000/api/running/tenant/sk/services")
&gt;&gt;&gt; m
['sk']
</code></pre>
<p>search</p>
<pre><code>&gt;&gt;&gt; m = re.search(r"(?:\w\W+)tenant/(\w+)/(?:[\w\W]*)", "http://myServer:8000/api/running/tenant/sk/services")
&gt;&gt;&gt; m.group(1)
'sk'
</code></pre>
<p>The reason match fails is because it tries to match it at beginning of string 
<a href="https://docs.python.org/2/library/re.html#re.match" rel="nofollow">re.match documentation</a></p>
<blockquote>
<p>re.match(pattern, string, flags=0) If zero or more characters at the
  beginning of string match the regular expression pattern, return a
  corresponding MatchObject instance. Return None if the string does not
  match the pattern; note that this is different from a zero-length
  match.</p>
<p>Note that even in MULTILINE mode, re.match() will only match at the
  beginning of the string and not at the beginning of each line.</p>
<p>If you want to locate a match anywhere in string, use search() instead
  (see also search() vs. match()).</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><code>match</code> does not have <code>group</code> attribute. Try <code>search</code> instead-</p>
<pre><code>&gt;&gt;&gt;m = re.search(r"(tenant)/(\w+)/(\w+)", "http://myServer:8000/api/running/tenant/sk/services")
&gt;&gt;&gt;m.group(1)
&gt;&gt;&gt;'tenant'
&gt;&gt;&gt;m.group(2)
&gt;&gt;&gt;'sk'
&gt;&gt;&gt;m.group(3)
&gt;&gt;&gt;'services'
&gt;&gt;&gt;m.groups()
&gt;&gt;&gt;('tenant', 'sk', 'services')
</code></pre>
<p>Or try <code>re.split</code> that returns a regular list- <code>(?&lt;!\\)/(?!=\\)</code> means find <code>/</code> that does not have <code>/</code> after or before- and split the text by it-</p>
<pre><code>&gt;&gt;&gt;re.split(r"(?&lt;!\\)/(?!=\\)", "http://myServer:8000/api/running/tenant/sk/services")
&gt;&gt;&gt;['http:', '', 'myServer:8000', 'api', 'running', 'tenant', 'sk', 'services']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Actually you don't need regex in this case, <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow"><code>str.split()</code></a> is enough:</p>
<pre><code>&gt;&gt;&gt; url = 'http://myServer:8000/api/running/tenant/sk/services'
&gt;&gt;&gt; l = url.split('/')
&gt;&gt;&gt; l[l.index('tenant')+1]
'sk'
&gt;&gt;&gt; 
</code></pre>
</div>
