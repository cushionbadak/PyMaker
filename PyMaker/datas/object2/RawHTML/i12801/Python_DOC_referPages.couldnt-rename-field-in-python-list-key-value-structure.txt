<div class="post-text" itemprop="text">
<p>I have below list with nested lists (sort of key,values)</p>
<pre><code>inp1=[{'id': 0, 'name': 98, 'value': 9}, {'id': 1, 'name': 66, 'value': 8}, {'id': 2, 'name': 29, 'value': 5}, {'id': 3, 'name': 99, 'value': 3}, {'id': 4, 'name': 15, 'value': 9}]     
</code></pre>
<p>Am trying to replace 'name' with 'wid' and 'value' with 'wrt', how can I do it on same list?</p>
<p>My output should be like </p>
<pre><code>inp1=[{'id': 0, 'wid': 98, 'wrt': 9}, {'id': 1, 'wid': 66, 'wrt': 8}, {'id': 2, 'wid': 29, 'wrt': 5}, {'id': 3, 'wid': 99, 'wrt': 3}, {'id': 4, 'wid': 15, 'wrt': 9}]     
</code></pre>
<p>I tried below, but it doesn't work as list cannot be indexed with string but integer</p>
<pre><code>    inp1['name'] = inp1['wid']
    inp1['value'] = inp1['wrt']
</code></pre>
<p>I tried if I can find any examples, but mostly I found only this for dictionary and not list.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to iterate each item, and remove the old entry (<a href="https://docs.python.org/3/library/stdtypes.html#dict.pop" rel="nofollow"><code>dict.pop</code></a> is handy for this - it removes an entry and return the value) and assign to new keyes:</p>
<pre><code>&gt;&gt;&gt; inp1 = [
...     {'id': 0, 'name': 98, 'value': 9},
...     {'id': 1, 'name': 66, 'value': 8},
...     {'id': 2, 'name': 29, 'value': 5},
...     {'id': 3, 'name': 99, 'value': 3},
...     {'id': 4, 'name': 15, 'value': 9}
... ]
&gt;&gt;&gt; 
&gt;&gt;&gt; for d in inp1:
...     d['wid'] = d.pop('name')
...     d['wrt'] = d.pop('value')
... 
&gt;&gt;&gt; inp1
[{'wid': 98, 'id': 0, 'wrt': 9},
 {'wid': 66, 'id': 1, 'wrt': 8},
 {'wid': 29, 'id': 2, 'wrt': 5},
 {'wid': 99, 'id': 3, 'wrt': 3},
 {'wid': 15, 'id': 4, 'wrt': 9}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def f(item):
    if(item.has_key('name') and not item.has_key('wid')):
        item['wid']=item.pop('name')
    if(item.has_key('value') and not item.has_key('wrt')):
        item['wrt']=item.pop('value')
map(f,inp1)
</code></pre>
<p>Output:</p>
<pre><code>[{'wrt': 9, 'wid': 98, 'id': 0}, {'wrt': 8, 'wid': 66, 'id': 1}, {'wrt': 5, 'wid': 29, 'id': 2}, {'wrt': 3, 'wid': 99, 'id': 3}, {'wrt': 9, 'wid': 15, 'id': 4}]
</code></pre>
</div>
<span class="comment-copy">Thanks a lot for helping!</span>
<span class="comment-copy">Thank you for this!</span>
