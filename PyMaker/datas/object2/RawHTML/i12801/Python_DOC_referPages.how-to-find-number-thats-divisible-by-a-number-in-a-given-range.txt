<div class="post-text" itemprop="text">
<p>I have this code:</p>
<pre><code>generateMin = 150
generateMax = 250
if (current_level.world_shift * -1 % n == 0
        for n in range(generateMin, generateMax)):
    print("in range")
</code></pre>
<p>Which is checked at 100 FPS â€” as I move right/left <code>current_level.world_shift</code> is changed. However this code does not work. Can someone help me with that?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't use a <a href="https://docs.python.org/3/reference/expressions.html?#generator-expressions" rel="nofollow">generator expression</a> in an <code>if</code> statement like that. This is because initially a generator expression yields a new generator object and instances of most types are generally considered <code>True</code> (see <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow">Truth Value Testing</a> in the documentation). </p>
<p>To do what you want I suggest you instead use the built-in <a href="https://docs.python.org/3/library/functions.html?#any" rel="nofollow"><code>any()</code></a> function. Doing so will be fast because it will stop soon as a <code>True</code> boolean sub-expression value is encountered. </p>
<p>Here's what I mean:</p>
<pre><code># a couple of things to allow dot syntax used in question to be used in answer
class Level: pass
current_level = Level()

current_level.world_shift = -175
generateMin = 150
generateMax = 250

if any(current_level.world_shift*-1 % n == 0
        for n in range(generateMin, generateMax)):
    print("in range")
</code></pre>
<p><code>any()</code> will return <code>True</code> if <code>current_level.world_shift*-1</code> is evenly divisible by any number in the open-ended range (assuming that's what you're trying to determine). By open-ended I mean that the value <code>generateMax</code> will <em>not</em> be considered because <code>range(start, stop)</code> only covers the values from <code>start</code> to <code>stop-1</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you're misunderstanding the <code>range()</code> method. It doesn't create a random number, it creates a list of numbers in a particular range. E.g., <code>range(1,5)</code> yields <code>[1,2,3,4]</code></p>
<pre><code>import random
generateMin = 150
generateMax = 250
if (current_level.world_shift * -1 % random.randint(generateMin, generateMax) == 0):
        print("in range")
</code></pre>
<p>I think you were trying to have an assignment in the conditional, e.g., <code>if (n == 1 with n = 1)</code>, but mistakenly ended up using list comprehension, which always validated as <code>True</code>. I'm kind of amazed that didn't give a syntax error.</p>
<p>Python does not support assignment within a conditional, you'll need to assign before the if, or don't assign at all, like in the above code.</p>
</div>
<span class="comment-copy">"Not working"? What is it not doing or doing?</span>
<span class="comment-copy"><code>current_level.world_shift</code> its returning negative number always, thats why  i multiply it with -1, basically, if i move right <code>current_level.world_shift</code> increases + 2 every time i press right arrow key, if i press left arrow key, it decreases -2, i need to get random location, between min and max number, if  <code>range(generateMin, generateMax)</code> is dividable by <code>current_level.world_shift</code>, now 0 - 4000 Right now it returns "In range" every time <code>current_level.world_shift</code> changes</span>
<span class="comment-copy">FWIW, <code>range(1,5)</code> yields <code>[1,2,3,4]</code> in Python 2 (or an iterator of those values in Python 3).</span>
