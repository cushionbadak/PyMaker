<div class="post-text" itemprop="text">
<p>I'd like to filter a list of strings in python by using regex. In the following case, keeping only the files with a '.npy' extension.</p>
<p>The code that doesn't work:</p>
<pre><code>import re

files = [ '/a/b/c/la_seg_x005_y003.png',
          '/a/b/c/la_seg_x005_y003.npy',
          '/a/b/c/la_seg_x004_y003.png',
          '/a/b/c/la_seg_x004_y003.npy',
          '/a/b/c/la_seg_x003_y003.png',
          '/a/b/c/la_seg_x003_y003.npy', ]

regex = re.compile(r'_x\d+_y\d+\.npy')

selected_files = filter(regex.match, files)
print(selected_files)
</code></pre>
<p>The same regex works for me in Ruby:</p>
<pre><code>selected = files.select { |f| f =~ /_x\d+_y\d+\.npy/ }
</code></pre>
<p>What's wrong with the Python code?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>selected_files = filter(regex.match, files)
</code></pre>
<p><a href="https://docs.python.org/3/library/re.html#re.match" rel="noreferrer"><code>re.match('regex')</code></a> is equal to <code>re.search('^regex')</code> or <code>text.startswith('regex')</code> but regex version. <strong>It only check if the string starts with the regex</strong>.</p>
<p>So, use <code>re.search()</code> instead:</p>
<pre><code>import re

files = [ '/a/b/c/la_seg_x005_y003.png',
          '/a/b/c/la_seg_x005_y003.npy',
          '/a/b/c/la_seg_x004_y003.png',
          '/a/b/c/la_seg_x004_y003.npy',
          '/a/b/c/la_seg_x003_y003.png',
          '/a/b/c/la_seg_x003_y003.npy', ]

regex = re.compile(r'_x\d+_y\d+\.npy')

selected_files = filter(regex.search, files)
print(selected_files)
</code></pre>
<p>Output:</p>
<pre><code>['/a/b/c/la_seg_x005_y003.npy',
 '/a/b/c/la_seg_x004_y003.npy',
 '/a/b/c/la_seg_x003_y003.npy']
</code></pre>
<hr/>
<p>And if you just want to get all of the <code>.npy</code> files, just use <a href="https://docs.python.org/3/library/stdtypes.html#str.endswith" rel="noreferrer"><code>str.endswith()</code></a>:</p>
<pre><code>files = [ '/a/b/c/la_seg_x005_y003.png',
          '/a/b/c/la_seg_x005_y003.npy',
          '/a/b/c/la_seg_x004_y003.png',
          '/a/b/c/la_seg_x004_y003.npy',
          '/a/b/c/la_seg_x003_y003.png',
          '/a/b/c/la_seg_x003_y003.npy', ]


selected_files = filter(lambda x: x.endswith('.npy'), files)

print(selected_files)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use <code>search</code>- since match starts matching from the beginning to end (i.e. entire) of string and search matches anywhere in the string.</p>
<pre><code>import re

files = [ '/a/b/c/la_seg_x005_y003.png',
          '/a/b/c/la_seg_x005_y003.npy',
          '/a/b/c/la_seg_x004_y003.png',
          '/a/b/c/la_seg_x004_y003.npy',
          '/a/b/c/la_seg_x003_y003.png',
          '/a/b/c/la_seg_x003_y003.npy', ]

regex = re.compile(r'_x\d+_y\d+\.npy')

selected_files = filter(regex.search, files)
print(selected_files)
</code></pre>
<p>Output-</p>
<pre><code>['/a/b/c/la_seg_x005_y003.npy', '/a/b/c/la_seg_x004_y003.npy', '/a/b/c/la_seg_x003_y003.npy']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/library/re.html#re.match" rel="nofollow"><code>re.match()</code></a> looks for a match at the beginning of the string. You can use <code>re.search()</code> instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow">match</a>, the pattern must cover the <em>entire</em> input.
Either extend you regular expression:</p>
<pre><code>regex = re.compile(r'.*_x\d+_y\d+\.npy')
</code></pre>
<p>Which would match:</p>
<pre><code>['/a/b/c/la_seg_x005_y003.npy',
 '/a/b/c/la_seg_x004_y003.npy',
 '/a/b/c/la_seg_x003_y003.npy']
</code></pre>
<p>Or use <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow">re.search</a>, which</p>
<blockquote>
<p>scans through string looking for the <em>first location</em> where the regular expression pattern produces a match [...]</p>
</blockquote>
</div>
<span class="comment-copy">You wan to filter the elements in <code>files</code> with the <code>.npy</code> extension?</span>
<span class="comment-copy">I wondered why <code>filter()</code> accepts the the <code>re.search()</code>-method, as the latter returns an instance of <code>MatchObject</code> and not a boolean. It is explained <a href="http://www.diveintopython.net/functional_programming/filtering_lists.html" rel="nofollow noreferrer">here</a> in 16.8.3: The <code>search()</code>-method returns a MatchObject if the item matches and <code>filter()</code> interprets that as True. Otherwise <code>search()</code> returns None, which is interpreted as False.</span>
<span class="comment-copy">In Python 3.x, <code>filter()</code> <a href="https://stackoverflow.com/a/12319034/2573061">returns a generator</a>, so you need to wrap it in <code>list()</code> if that's what you want.</span>
