<div class="post-text" itemprop="text">
<p>How do you add one list to another, I keep running into the problem of the second list in my for loop going through the whole list.</p>
<p>If <code>aList</code> was <code>[1, 2, 3, 4]</code>, I want the output be <code>1hello, 2good, 3what...</code> so on.</p>
<pre><code>def function(aList):
    myList = ['hello','good','what','tree']
    newList = []

    for element in aList:
         for n in myList:
              newList.append[element+n]
</code></pre>
<p>Input:</p>
<pre><code>[1, 2, 3, 4]
</code></pre>
<p>Expected output:</p>
<pre><code>['1hello', '2good', '3what', '4tree']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a>:</p>
<pre><code>def function(aList):
    myList = ['hello', 'good', 'what', 'tree']
    return [str(a) + b for a, b in zip(aList, myList)]
</code></pre>
<p>Output:</p>
<pre><code>In [4]: function([1, 2, 3, 4])
Out[4]: ['1hello', '2good', '3what', '4tree']
</code></pre>
<p>You also need to cast the passed in value to a string to make sure you can concatenate to the strings in your <code>myList</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Read about <a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">List Comprehensions</a></p>
<pre><code>aList = ['1', '2', '3']
print [element + n for element in aList for n in myList]
['1hello', '1good', '1what', '1tree', '2hello', '2good', '2what', '2tree', '3hello', '3good', '3what', '3tree']
</code></pre>
<p>or <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow">zip</a></p>
<pre><code>aList = ['1', '2', '3']
print [element + n for element, n in zip(aList, myList)]
['1hello', '2good', '3what']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Your question I feel no need to add two for loop. One loop itself sufficient.</p>
<p>let me give two cases, which one will match your need use that.</p>
<p><strong>Case 1:</strong> - with one for loop</p>
<pre><code>aList = [1,2,3,4]
def function(aList):
   myList = ['hello','good','what','tree']
   newList = []

   for i in range(len(aList)):
      newList.append(str(aList[i]) + myList [i] )

   return newList
</code></pre>
<p>this will return <code>1hello , 2good ...</code></p>
<p><strong>Case 2:</strong> - with two for loop</p>
<pre><code>aList = [1,2,3,4]
def function(aList):
   myList = ['hello','good','what','tree']
   newList = []

   for element in aList:
      for i in range(len(myList )):
         newList.append(str(element) + myList [i] )

   return newList
</code></pre>
<p>this will return <code>1hello , 1good ... 2hello, 2good</code></p>
<p>I hope this will help...</p>
</div>
<span class="comment-copy">So what do you want to get?</span>
<span class="comment-copy">You sure you don't want <code>zip</code> <code>for n in myList</code> first?</span>
<span class="comment-copy">I think he wants <code>[a[0], b[0], a[1], b[1] .. ]</code> and so on</span>
<span class="comment-copy">If aList was [1,2,3,4], I want it to say 1hello, 2good, 3what... so on</span>
<span class="comment-copy">Also, your alist has int elements. You can't concatenate int and str.</span>
<span class="comment-copy">exactly what I was looking for, thanks!</span>
<span class="comment-copy">@kevin Guan, thanks, you beat me to it</span>
<span class="comment-copy">Yes, because I tried to guess what You need.</span>
<span class="comment-copy">Sorry, I improve the answer.</span>
