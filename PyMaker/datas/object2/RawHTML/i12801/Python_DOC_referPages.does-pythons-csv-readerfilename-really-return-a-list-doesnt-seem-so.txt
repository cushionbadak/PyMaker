<div class="post-text" itemprop="text">
<p>So I am still learning Python and I am on learning about reading files, csv files today. The lesson I just watched tells me that using </p>
<pre><code>csv.reader(filename)
</code></pre>
<p>returns a list.</p>
<p>So I wrote the following code:</p>
<pre><code>import csv
my_file = open(file_name.csv, mode='r')
parsed_data = csv.reader(my_file)
print(parsed_data)
</code></pre>
<p>and what it prints is</p>
<pre><code>&lt;_csv.reader object at 0x0000000002838118&gt;
</code></pre>
<p>If what it outputs is a list, shouldn't I be getting a list, ie, something like this?</p>
<pre><code>[value1, value2, value3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you get is an <a href="https://wiki.python.org/moin/Iterator" rel="nofollow"><em>iterable</em></a>, i.e. an object which will give you a sequence of other objects (in this case, strings). You can pass it to a <code>for</code> loop, or use <code>list()</code> to get an actual list:</p>
<pre><code>parsed_data = list(csv.reader(my_file))
</code></pre>
<p>The reason it is designed this way is that it allows you to work with files that are larger than the amount of memory you have on your computer (or simply files that are large enough to consume inconvenient amounts of memory if you were to load all of its contents into a list). With an iterable, you may choose to look at one element at a time and e.g. throw it out of memory again before reading the next.</p>
</div>
<div class="post-text" itemprop="text">
<p>The return value of the <a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow"><code>csv.reader</code></a> is an iterator (reader object).</p>
<p>You need to iterate it, to get lists:</p>
<pre><code>import csv
my_file = open(file_name.csv, mode='r')
parsed_data = csv.reader(my_file)
for row in parsed_data:
    print(row)   # &lt;--- a list of strings
</code></pre>
</div>
<span class="comment-copy"><i>"If what it outputs is a list, shouldn't I be getting a list"</i> - err, yes. So the fact that you aren't tells you that the lesson is wrong. The canonical definition is in the <a href="https://docs.python.org/2/library/csv.html#csv.reader" rel="nofollow noreferrer">actual docs</a>.</span>
<span class="comment-copy">So it returns an iterable that can generate lists, but is not itself a list - so what the instructor was saying over and over again was technically wrong. Thanks, that makes so much more sense.</span>
<span class="comment-copy">Yes - although the list creation is only indirect, via <code>list()</code>. It's more precise to say that an iterable can produce a <i>sequence</i> (a generic word that isn't tied to a Python concept the way <i>list</i> is) of elements - you can repeatedly ask it for the next element until it runs out of elements. One of the possible things you can do with the elements is to put them in a list.</span>
<span class="comment-copy">I think row IS a list, since I can refer to an element of it by index, row[0] - yes?</span>
<span class="comment-copy">@AasmundEldhuset, <code>row</code> is a list of strings. According to <a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow noreferrer"><code>csv.reader</code> documentation</a>: <i>Each row read from the csv file is returned as a list of strings.</i></span>
<span class="comment-copy">@Sindyr, You're right.</span>
<span class="comment-copy">This is very helpful, thanks everyone.</span>
<span class="comment-copy">@falsetru: Gah, of course - I stand corrected.</span>
