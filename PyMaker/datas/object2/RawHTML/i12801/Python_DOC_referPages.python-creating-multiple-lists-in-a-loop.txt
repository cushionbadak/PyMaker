<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5036700/how-can-you-dynamically-create-variables-via-a-while-loop">How can you dynamically create variables via a while loop? [duplicate]</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to put together a programming project at my university, but I'm stuck. The "math" part I've got covered, but I need help with lists and loops in Python.</p>
<p>I'm working with graphs, let me show one example, to make it clearer:
<a href="http://i.stack.imgur.com/W64QU.png" rel="nofollow">3 node graph</a></p>
<p>As you can see, I have 3 nodes in it and 2 edges, nothing fancy. I need to compute the closest route between each pair of nodes, and I have that covered already. Now I need to put it either in <strong><em>n</em></strong> lists, <strong><em>n</em></strong> elements each, or in a <strong><em>n x n</em></strong>, so either:</p>
<pre><code>a = [0, 1, 2]
b = [1, 0, 1]
c = [2, 1, 0]
</code></pre>
<p>or a table (or matrix?) like this:
<a href="http://i.stack.imgur.com/bFBox.png" rel="nofollow">table 3x3</a>, where I only really need the part with the white background.</p>
<p>When I read data to work on, I put each node into a list, as a new element, so with these 3 steps I gradually get:</p>
<pre><code>lw = []
lw = ['a']
lw = ['a','b']
lw = ['a','b','c']
</code></pre>
<p>Is there any way, to create empty lists out of elemnts of <strong><em>lw</em></strong>? I would really like to name them like <strong><em>dis_a</em></strong>, <strong><em>dis_b</em></strong>, <strong><em>dis_c</em></strong> etc. I tried to do it with a dictionary, but then I couldn't manipulate with those lists, like I usually do. And truth be told, I'd much prefer the solution using lists, as I already have a latter part of the program written for this.</p>
<p>EDIT:
Ok, so one of you asked for input/output to make my question clearer. Mmy input is:</p>
<pre><code>lw = ['a','b','c']
</code></pre>
<p>my desired output is:</p>
<pre><code>a = []
b = []
c = []
</code></pre>
<p>or something like that (lists that can be easly identified with the nodes, that I have listed in <strong><em>lw</em></strong>)</p>
<p>EDIT2:</p>
<p>Ok, so now I have a number of lists created like this (still sticking to the example):</p>
<pre><code>dis['a']
dis['b']
dis['c']
</code></pre>
<p>I have a working command </p>
<pre><code>path[X][Y]
</code></pre>
<p>which on input takes the names of the nodes (as in <strong><em>lw</em></strong> list ex. 'a'), and on input returns a list of </p>
<p>nodes on the shortest path from X to Y. What I need to be doing now, is to take the length of it with</p>
<pre><code>len(path[X][Y])
</code></pre>
<p>And substract 1 from it (it's counting the "starting" point as well, so it's correcting it). Then I have </p>
<p>to put this number in a corresponding place in a list. I would like to do it in a loop, so it would </p>
<p>automatically append numbers to existing lists, so I would automatically get from</p>
<pre><code>dis['a'] = []
dis['b'] = []
dis['c'] = []
</code></pre>
<p>to</p>
<pre><code>dis['a'] = [0, 1, 2]
dis['b'] = [1, 0, 1]
dis['c'] = [2, 1, 0]
</code></pre>
<p>Don't worry, about it calculating the path twice (ex. from <strong><em>a</em></strong> to <strong><em>b</em></strong> and then from <strong><em>b</em></strong> to <strong><em>a</em></strong>), It doesn't have to be perfect ;) I tried to create such method, but I have no idea, how to store the results in said lists (or if I'm even correct). Here is my proposition:</p>
<pre><code>def lo():   
    for i in range(0, len(lw)):
        for j in range (0, len(lw)):
        dis[i].append(path[lw[i]][lw[j]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What couldn't you manipulate with a dictionary?</p>
<p><code>dis_a</code>, <code>dis_b</code>, <code>dis_c</code>... could as well be <code>dis['a']</code>, <code>dis['b']</code> and <code>dis['c']</code>...</p>
<p>You could do:</p>
<pre><code>dis = {}
for elem in lw:
    dis[elem] = []
    # ...
</code></pre>
<p>Want to loop over all <code>dis</code>-es now?</p>
<pre><code>for elem, val in dis.iteritems():
    print elem    # your a, b, or c
    print val     # your [] corresponding to a, b, or c
</code></pre>
<hr/>
<p>If you want to add elements, and find min and max (as requested in the comments):</p>
<p>Let's say initially <code>dis['a']</code> gets <code>[0, 1, 2]</code></p>
<p>and ...</p>
<pre><code>dis['b'] = [1, 0, 1]
dis['c'] = [2, 1, 0]
</code></pre>
<p>and now you want to add a new item to all of the <code>dis</code>-es...</p>
<pre><code>item = 5
for elem in dis:
    dis[elem].append(item)
</code></pre>
<p>and now you want to find the max ...</p>
<pre><code>for elem in dis:
    print max(dis[elem])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I'm correct you want to dynamically create variables.
Here is short answer, for more information checkout this post <a href="https://stackoverflow.com/questions/5036700/how-can-you-dynamically-create-variables-in-python-via-a-while-loop">How can you dynamically create variables via a while loop?</a> Actually there you can find different approaches like using a dict.</p>
<pre><code>&gt;&gt;&gt; lw = ['a', 'b', 'c']
&gt;&gt;&gt; for l in lw:
        exec("{prefix}{var}=[]".format(prefix="dis_", var=l)) 

&gt;&gt;&gt; dis_a
        []

&gt;&gt;&gt; dis_b.append('some')
&gt;&gt;&gt; dis_b
        ['some']
</code></pre>
</div>
<span class="comment-copy">Can you please add an example of the desired output to make the question clearer?</span>
<span class="comment-copy">"Is there any way, to create empty lists out of elemnts of lw?" Could you also clarify that statement ? You can create empty lists out of anything (or out of nothing for that matter) so this doesn't really make sense to me.</span>
<span class="comment-copy">@kjubus Thanks for that.  ComputerFellow's answer already gives you a way to achieve your desired output.</span>
<span class="comment-copy">I'm a newbie in python (and not much of a programmer either, rather a beginner, I'd say), but when I Do it like you show in the first part, I can print all the created <b><i>dis</i></b> lists, and get a result: print(dis) {'a': [], 'c': [], 'b': []}  but how do I get to add values to them, find max/min etc?</span>
<span class="comment-copy">@kjubus - I suggest reading through <a href="https://docs.python.org/3/tutorial" rel="nofollow noreferrer">the Python tutorial</a>. (If you're using Python 2, then use <a href="https://docs.python.org/2/tutorial" rel="nofollow noreferrer">the Python 2 tutorial</a> instead). But briefly, to access the lists in your dictionary, you can do <code>dis['a']</code>, <code>dis['b']</code>, etc. To append the number 1 to list <code>a</code>, you can do <code>dis['a'].append(1)</code>. I hope that and the tutorial links are enough to get you started.</span>
<span class="comment-copy">Note: to find out more about dictionaries, <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">the dictionary section of the tutorial</a> will help you the most. (As with my other comment, that's a link to the Python 3 tutorial. <a href="https://docs.python.org/2/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">If you're using Python 2, use this link instead</a>.)</span>
<span class="comment-copy">@computerfellow thank you! I think that it does finally explain and solves my problem to me :)</span>
<span class="comment-copy"><code>d = {k:[] for k in lw}</code></span>
<span class="comment-copy">This is a bad idea. Using <code>exec</code> has all kinds of security problems, and should only <b>ever</b> be done by someone who really knows what they're doing. The OP has said that he's a Python beginner, so he should <i>not</i> be using <code>exec</code>.</span>
<span class="comment-copy">@rmunn yep, you are definitely right.</span>
