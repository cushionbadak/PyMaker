<div class="post-text" itemprop="text">
<p>I am working on a project where I have large input files which come from numerical solutions of pdes. The format of the data is as follows.</p>
<pre><code>x \t y \t f(x,y)
</code></pre>
<p>For each value of y, we have several values of x, and the function value evaluated at each point. The size of the data I'm dealing with is about <code>[-3, 5]x[-3, 5]</code> in steps of <code>0.01</code> in each dimension, so the raw data file is pretty big (about <code>640,000</code> entries). Reading it into memory is also pretty time-taking because the tools I'm working on have to read multiple raw data files of this type at the same time.</p>
<p>I'm using Python.</p>
<p>Is there any way to store and read data like this efficiently in Python? The idea is to include a tool that massages these raw data files into something that can be read more efficiently. I'm currently working on interpolating the data and storing some coefficients (essentially replacing memory by computing time), but I'm sure there must be an easier way that helps both memory and time.</p>
<p>Thanks SOCommunity!</p>
<p>PS: I saw related questions in Java. I'm working entirely on Python here.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're using numpy (and you probably should be), <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.save.html" rel="nofollow"><code>numpy.save</code></a>/<a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.savez.html" rel="nofollow"><code>numpy.savez</code></a> and <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.load.html" rel="nofollow"><code>numpy.load</code></a> should be able to handle this pretty easily.</p>
<p>For example:</p>
<pre><code>import numpy as np
xs = np.linspace(-3, 5, 800)
ys = np.linspace(-3, 5, 800)
f_vals = np.random.normal(size=(xs.size, ys.size))
np.savez('the_file.npz', xs=xs, ys=ys, f=f_vals)
</code></pre>
<p>is quite quick, and the resulting file is less than 5mb.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Is there any way to store and read data like this efficiently in Python?</p>
</blockquote>
<p>If you don't need to keep it in memory all the time, I would suggest migrating the data to an <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">Sqlite</a> database. This would also allow you making SQL queries on the data.</p>
</div>
<span class="comment-copy">If the values of <code>x</code> and <code>y</code> are predictable, why are you storing them  in the file at all?  Have you considered simply generating their values based on the position of the <code>f(x,y)</code> value?</span>
<span class="comment-copy">How are you reading them? It shouldn't be that slow.</span>
<span class="comment-copy">I'm basically looping through each line and storing into a dict with [x][y]. My next move was to eliminate the x and y values from the file because they're predictable just like @cheeken suggested. Now I'm wondering if there's a way to interpolate the data so that I can optimize reading in even better.</span>
