<div class="post-text" itemprop="text">
<p>I've been searching through SO for a while now trying to come up with an answer to this but due to my inexperience with programming I don't understand much of the documentation, nor am I confident enough to experiment too much. </p>
<p>Would anyone be able to describe in slightly simpler terms how I would use programs like Py2exe, PyInstaller, cx_freeze etc.? I just want a way for others (mainly friends) to be able to run my (simple, text only) program without having to download python themselves.  If there is an easier way to do this I'd appreciate knowing that too. </p>
<p>Running Vista 32bit, python 2.7</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two distinct ways of freezing python scripts to create executables:</p>
<ol>
<li>Packing the interpreter and *.pyc files into one exe file-container. Such an approach is used by tools like <a href="http://www.pyinstaller.org/" rel="nofollow noreferrer">PyInstaller</a>, <a href="http://www.py2exe.org/" rel="nofollow noreferrer">Py2exe</a>, <a href="http://cx-freeze.sourceforge.net/" rel="nofollow noreferrer">cx_freeze</a>.</li>
<li>Creating native code from Python source, usually using a middle step of converting Python-source to C or C++ code. This is done by such tools as <a href="http://shed-skin.blogspot.com/" rel="nofollow noreferrer">Shed-skin</a> and <a href="http://nuitka.net/" rel="nofollow noreferrer">Nuitka</a>. The problem of this aproach is that such tools do not always support all the functionality of Python (e.g. they can have some typing limitations and so on)</li>
</ol>
<p>The point where you have to start is reading the documentation. Such tools are not just push-and-run style tools, they usually have some configuration that must be implemented (that's the problem of possibly all build systems, and as the project grows, the configuration and number of hooks also grows).</p>
<p>You can start with <a href="http://www.py2exe.org/index.cgi/Tutorial" rel="nofollow noreferrer">Py2exe tutorial</a> and 'hello-world' to get acquainted with that how compilation is done. As far as I know it's a simplest way to get your goal.</p>
<p>And the last thing, <strong>you can't create cross-platform native executables</strong> as their file formats <em>are strongly operating system and hardware dependent</em>.</p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>Download <strong>py2exe</strong></li>
<li>Download this <a href="https://drive.google.com/file/d/0B6Soi7N9itO_YWV0cVlEdS11alU/edit" rel="nofollow">msvcp90.dll</a></li>
<li>Copy your <em>FileCode.py</em> <strong>AND</strong> <em>msvcp90.dll</em> to C:\Python27\ </li>
<li>In C:\Python27\ create new text file, then enter this code inside it:</li>
</ol>
<blockquote>
<pre><code>from distutils.core import setup
import py2exe
setup(console=['Avril.py'])
</code></pre>
</blockquote>
<ol start="5">
<li>Replace <strong>Avril.py</strong> with <strong>YourFileName.py</strong></li>
<li>Save the file as <strong>setup.txt</strong></li>
<li>Open <strong>CMD</strong> and type this:  </li>
</ol>
<blockquote>
<p>cd C:\Python27\<br/>
  python setup.txt py2exe </p>
</blockquote>
<ol start="8">
<li>Now go to C:\Python27\dist\ and there's your <em>.exe</em> program.  </li>
</ol>
<p>Source: <a href="https://www.youtube.com/watch?v=kyoGfnLm4LA" rel="nofollow">Manvir Singh</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Python scripts can be made directly executable, like shell scripts, by putting the python environment path in the top of the script file.</p>
<pre><code>#!/usr/bin/env python3.5 
</code></pre>
<p>The Python installer automatically associates .py files with python.exe so that a double-click on a Python file will run it as a script. The extension can also be .pyw, in that case, the console window that normally appears is suppressed.</p>
<p>Detailed description also for linux is <a href="https://docs.python.org/3/tutorial/appendix.html#executable-python-scripts" rel="nofollow noreferrer">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Install pyinstaller, a program that converts .py to .exe for python 2.7  to where python is located:</p>
<pre><code>cd C:\python27\scripts
pip install pyinstaller
</code></pre>
<p>then move whatever python file you want to compile to C:\python27\scripts, compile from there by using:</p>
<pre><code>pyinstaller --onefile yourfile.py
</code></pre>
<p>the --onefile is optional but it packages the whole thing(in this example yourfile.py) into one .exe. Once everything is done there will be 2 new folders along with a .spec file. From C:\python27\scripts open the folder dist. Your .exe will be located there in one file which you can double tap to execute and distribute to anyone who doesn't have python. Hope it helps.</p>
</div>
<span class="comment-copy">I probably should have specified - yes friends, this isn't a commercial thing at all.</span>
<span class="comment-copy">I had already looked at documentation for all three of these, and tried to use the tutorial you mentioned already too - I haven't had any luck with the tutorial as what it is telling me should happen isn't, and I find the other documentation hard to understand. I apologise for being difficult but I was hoping someone would be able to provide an explanation/guide in easier terms.</span>
<span class="comment-copy">@Ricochet_Bunny, to my opinion py2exe tutorial is the easiest explanation to start with, you should possibly have to spend more time to catch it, nothing is simple).</span>
<span class="comment-copy">Ok, I'll give it another go. The only reason was that I wasn't getting the same results from doing the things it told me to and I don't know why.</span>
<span class="comment-copy">in a related matter, would it be possible to download just the Python IDLE on the user's computer and let it run on that? Or does the IDLE need the rest of the Python package to work?</span>
<span class="comment-copy">I managed to figure out what was wrong with what I was doing - my cmd was not set to the directory the files were in, and I didn't know they needed to be. Thanks for your help.</span>
