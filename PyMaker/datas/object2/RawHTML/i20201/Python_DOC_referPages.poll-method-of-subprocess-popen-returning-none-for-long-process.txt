<div class="post-text" itemprop="text">
<p>I am executing curl command through subprocess. This curl command starts video processing at another server, and waits for the response. Once the process is done, the remote server  returns json object. I am checking the status of the subprocess using poll() value, which is None - process not completed, 0- process completed successfully and 1- for error. </p>
<p>I am getting the correct response if the processing takes around 30 mins/or less on remote server, but if the processing is taking more time, I am getting just None value , even though I can see that the remote server has finished processing and already returned the json object.</p>
<p>Can anyone tell me, what could be the possible reason for poll() returning only None after certain time.  Thank you in advance.</p>
<p>My Popen object is :</p>
<pre><code>object = subprocess.Popen(str(curlCmd), shell=True,
                           stdout=subprocess.PIPE,
                           stderr=subprocess.PIPE)
</code></pre>
<p>and I am calling <code>object.poll()</code> after every 2 seconds to check if the process is successfully completed or not. </p>
</div>
<div class="post-text" itemprop="text">
<p>It seems like a known issue in Popen.poll can you try using the solutions as outlined in this link. <a href="http://www.gossamer-threads.com/lists/python/bugs/633489" rel="nofollow">http://www.gossamer-threads.com/lists/python/bugs/633489</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>.poll() is None</code> means that the child is still running.</p>
<p>The <code>curl</code>  process may hang as soon as it fills its stdout or stderr OS pipe buffer (around 64K on my Linux box) unless you read from your end of the pipe.</p>
<p>That is while you are waiting for the child to finish, the child waits for you to drain the pipe buffer -- <strong>deadlock</strong>. From <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.poll" rel="nofollow">the <code>subprocess</code> docs</a>:</p>
<blockquote>
<p>This[<code>.wait()</code>] will deadlock when using <code>stdout=PIPE</code> or <code>stderr=PIPE</code> and the child
  process generates enough output to a pipe such that it blocks waiting
  for the OS pipe buffer to accept more data. Use <code>Popen.communicate()</code>
  when using pipes to avoid that.</p>
</blockquote>
<p>You could use threads, async.io to consume the pipes concurrently.</p>
</div>
<div class="post-text" itemprop="text">
<p>Finally I ended up using PyCurl instead of creating a subprocess and calling curl command through it. It seems to be an raised issue bit subprocess , where .poll method returns none after certain time, reason is still unclear. I would like to inform people who are using subprocess - poll method ( without wait/ communicate) to be aware of it, if you are running long process . Thank you  J.F. Sebastian and Pranav for your directions.</p>
</div>
<div class="post-text" itemprop="text">
<p>In python 2.7 and possibly 3.x can use:</p>
<pre><code>object._internal_poll(_deadstate=127)
</code></pre>
<p>instead of regular <code>Popen.poll()</code> as a workaround. This will return 127 instead of None if the process is terminated.</p>
<p>Of course this is an internal module's method and there's no guarantee it will work after Python's library update.</p>
</div>
<div class="post-text" itemprop="text">
<p>To complement hegemon, this code works on 2.7:    </p>
<pre><code>process = subprocess.Popen(cmd, cwd=current_dir, shell=True, stdout=subprocess.PIPE, stdin=subprocess.PIPE, stderr=subprocess.PIPE )
process._internal_poll(_deadstate='dead')

while timeout &gt; 0:
  if process.poll() is not 'dead':
</code></pre>
</div>
<span class="comment-copy">my Popen object is  :-  PObject = subprocess.Popen(str(curlCmd), shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE) and I am calling object.poll() after every 2 seconds to check if the process is successfully completed or not.</span>
<span class="comment-copy">your code has <code>PIPE</code>; do you read from <code>object.stdout/stderr</code>?</span>
<span class="comment-copy">yes I read it from object. It is working for process which are not too long, giving the perfect output. I just don't understand why .poll() keeps on returning none for long process even after the process has terminated. Does it have something to do with memory buffer?</span>
<span class="comment-copy">could you provide more details? Does it happen for each long (&gt;30 min) job? Could your write <a href="http://sscce.org/" rel="nofollow noreferrer">a short script</a> that does nothing but reproduces the problem? Does running with the latest subprocess version help (either try on newer python version or install <a href="http://pypi.python.org/pypi/subprocess32/" rel="nofollow noreferrer"><code>subprocess32</code></a>).</span>
<span class="comment-copy">btw, why do you call <code>curl</code>? Have you tried <a href="http://docs.python-requests.org/en/latest/index.html" rel="nofollow noreferrer"><code>requests</code> library</a>?</span>
<span class="comment-copy">you could link directly to Python bug tracker: <a href="http://bugs.python.org/issue2475" rel="nofollow noreferrer">bugs.python.org/issue2475</a></span>
<span class="comment-copy">Still returns 'None'</span>
