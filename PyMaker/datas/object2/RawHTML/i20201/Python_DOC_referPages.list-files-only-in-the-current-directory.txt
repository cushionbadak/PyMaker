<div class="post-text" itemprop="text">
<p>In Python, I only want to list all the files in the current directory ONLY. I do not want files listed from any sub directory or parent.</p>
<p>There do seem to be similar solutions out there, but they don't seem to work for me. Here's my code snippet:</p>
<pre><code>import os
for subdir, dirs, files in os.walk('./'):
    for file in files:
      do some stuff
      print file
</code></pre>
<p>Let's suppose I have 2 files, holygrail.py and Tim inside my current directory. I have a folder as well and it contains two files - let's call them Arthur and Lancelot - inside it. When I run the script, this is what I get:</p>
<pre><code>holygrail.py
Tim
Arthur
Lancelot
</code></pre>
<p>I am happy with holygrail.py and Tim. But the two files, Arthur and Lancelot, I do not want listed.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use <a href="http://docs.python.org/library/os#os.listdir" rel="noreferrer"><code>os.listdir</code></a> and <a href="http://docs.python.org/library/os.path.html#os.path.isfile" rel="noreferrer"><code>os.path.isfile</code></a> instead of <a href="http://docs.python.org/library/os#os.walk" rel="noreferrer"><code>os.walk</code></a>.</p>
<p><strong>Example:</strong><br/></p>
<pre><code>files = [f for f in os.listdir('.') if os.path.isfile(f)]
for f in files:
    # do something
</code></pre>
<hr/>
<p>But be careful while applying this to other directory, like </p>
<pre><code>files = [f for f in os.listdir(somedir) if os.path.isfile(f)].
</code></pre>
<p>which would not work because <code>f</code> is not a full path but relative to the current dir. </p>
<p>Therefore, for filtering on another directory, do <code>os.path.isfile(os.path.join(somedir, f))</code></p>
<p><em>(Thanks <a href="https://stackoverflow.com/users/1311956/causality">Causality</a> for the hint)</em></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>os.listdir</code> for this purpose.  If you only want <em>files</em> and not <em>directories</em>, you can filter the results using <code>os.path.isfile</code>.</p>
<p>example:</p>
<pre><code>files = os.listdir(os.curdir)  #files and directories
</code></pre>
<p>or</p>
<pre><code>files = filter(os.path.isfile, os.listdir( os.curdir ) )  # files only
files = [ f for f in os.listdir( os.curdir ) if os.path.isfile(f) ] #list comprehension version.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os

destdir = '/var/tmp/testdir'

files = [ f for f in os.listdir(destdir) if os.path.isfile(os.path.join(destdir,f)) ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code><a href="https://docs.python.org/3/library/os.html#os.scandir" rel="noreferrer">os.scandir()</a></code>. New function in stdlib starts from Python 3.5.</p>
<pre><code>import os

for entry in os.scandir('.'):
    if entry.is_file():
        print(entry.name)
</code></pre>
<p>Faster than <code>os.listdir()</code>. <code>os.walk()</code> <a href="https://docs.python.org/3/whatsnew/3.5.html#optimizations" rel="noreferrer">implements</a> <code>os.scandir()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>this can be done with os.walk()</p>
<p><strong>python 3.5.2 tested;</strong></p>
<pre><code>import os
for root, dirs, files in os.walk('.', topdown=True):
    dirs.clear() #with topdown true, this will prevent walk from going into subs
    for file in files:
      #do some stuff
      print(file)
</code></pre>
<p>remove the dirs.clear() line and the files in sub folders are included again.</p>
<p>update with <strong>references</strong>;</p>
<p><a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">os.walk</a> documented here and talks about the triple list being created and topdown effects.</p>
<p><a href="https://docs.python.org/3.3/tutorial/datastructures.html" rel="nofollow noreferrer">.clear()</a> documented here for emptying a list</p>
<p>so by clearing the relevant list from os.walk you can effect its result to your needs.</p>
</div>
<div class="post-text" itemprop="text">
<p>instead of <code>os.walk</code>, just use <code>os.listdir</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
for subdir, dirs, files in os.walk('./'):
    for file in files:
      do some stuff
      print file
</code></pre>
<p>You can improve this code with <code>del dirs[:]</code>which will be like following .</p>
<pre><code>import os
for subdir, dirs, files in os.walk('./'):
    del dirs[:]
    for file in files:
      do some stuff
      print file
</code></pre>
<p>Or even better if you could point os.walk with current working directory .</p>
<pre><code>import os
cwd = os.getcwd()
for subdir, dirs, files in os.walk(cwd, topdown=True):
    del dirs[:]  # remove the sub directories.
    for file in files:
      do some stuff
      print file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My solution is:</p>
<pre><code>import re
p = re.compile('[a-z]+', re.IGNORECASE)
words = p.findall("Hello, world! I'm a coder")
</code></pre>
<p>I think this solution is better</p>
</div>
<span class="comment-copy">This is what I needed in the end <code>[os.path.join(path_base,f) for f in os.listdir(path_base) if os.path.isfile(os.path.join(path_base,f))]</code></span>
<span class="comment-copy">Thanks for giving the general solution (in the case where the dir is not the cwd).</span>
<span class="comment-copy">I think you may have answered the wrong question..</span>
<span class="comment-copy">I think the above comment is true... maybe you're on the wrong website?</span>
