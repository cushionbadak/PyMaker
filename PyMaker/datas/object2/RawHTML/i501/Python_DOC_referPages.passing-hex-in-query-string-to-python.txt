<div class="post-text" itemprop="text">
<p>I have a situation where I want to pass hex value in query string to server code written in Python. I saw this answer The URL looks like (if I want b to contain <code>0x80</code>):</p>
<blockquote>
<p>www.example.com/page?a=10&amp;b=%80</p>
</blockquote>
<p>I did the following steps in Python (I want to print and check if I am able to get <code>0x80</code>):</p>
<pre><code>#!/usr/bin/python3

import cgitb
import urllib.parse
import os

cgitb.enable()

# Print necessary headers.
print("Content-Type: text/html")
print()

query = os.environ.get('QUERY_STRING')
query = urllib.parse.unquote(query)
# Not able to use print(query) -- throws error
query_print = query.encode('utf-8')
print(query_print)
</code></pre>
<p>I get the following output:</p>
<pre><code>b'a=10&amp;b=\xef\xbf\xbd' 
</code></pre>
<p>What am I doing wrong ? Is it the way I print ?</p>
</div>
<div class="post-text" itemprop="text">
<p>When you try to convert something into utf-8 there can be some problems because some bytes sequences aren't valid UTF-8 symbols. For example <code>b'\x80'.decode()</code> throws and an error. When Python encodes/decodes some byte sequences you can specify what should happen when it hit some invalid sequence. The <code>urllib.parse.unquote()</code> by default use for this errors approach called <code>replace</code>. The <code>replace</code> aproach just replace every byte in invalid sequence with <code>U+FFFD</code> which is in bytes equivalent to <code>0xEF 0xBF 0xBD</code>. </p>
<p>There is other way around and use aproach called <code>surrogateescape</code> which map invalid bytes into valid UTF-8 symbols (U+DC80 to U+DCFF) and then in encoding to the bytes it can translate those symbols back to original bytes. Here is you code with this approach:</p>
<pre><code>#!/usr/bin/python3

import cgitb
import urllib.parse
import os

cgitb.enable()

# Print necessary headers.
print("Content-Type: text/html")
print()

query = "page?a=10&amp;b=%80"
query = urllib.parse.unquote(query, errors="surrogateescape")
query_print = query.encode('utf-8', 'surrogateescape')
print(query_print)
</code></pre>
<hr/>
<p>Full documentation for encoding/decoding error handling is in <a href="https://docs.python.org/3/library/codecs.html#error-handlers" rel="nofollow noreferrer">Python documentation</a>.</p>
</div>
<span class="comment-copy">What exception is thrown?</span>
<span class="comment-copy">@KristiyanGospodinov: UnicodeEncodeError: 'ascii' codec can't encode character '\\ufffd' in position 7: ordinal not in range(128)</span>
