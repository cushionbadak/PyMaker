<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18425225/getting-the-name-of-a-variable-as-a-string">Getting the name of a variable as a string</a>
<span class="question-originals-answer-count">
                    15 answers
                </span>
</li>
</ul>
</div>
<p>I want to make a function in Python that will print information about a variable given to it elegantly. If I did this for dictionaries, I might command and receive</p>
<pre><code>&gt;&gt; dict1 = {'r':5,'t':3}
&gt;&gt; prettyPrint(dict1)

    dict1 is a dictionary with entries:

     r: 5
     t: 3
</code></pre>
<p>But I'm having difficulty finding any straightforward way of extracting the name that an input variable had in the system before it was given to a function.</p>
<p>Some questions have come close to asking what I'm wondering about, but the answers on <a href="https://stackoverflow.com/questions/12687965/variable-name-to-string-in-python/12688058">Variable name to string in Python</a> either make use of not actually needing what I'm asking for or confess to being bad practice.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python, function objects have a <code>.func_name</code> attribute. So you might try that.</p>
<p>Below there is a solution that is very hacky but could work for things other than functions -- maybe it will be useful too?</p>
<p>So, one idea (although it isn't smart about cases where variables have multiple names, and it also won't work on expressions that are not variables, and also it should not be thought of as "fast") is as follows:</p>
<pre class="lang-py prettyprint-override"><code>from itertools import chain

def variable_name(variable):
    for name, object in chain(globals().items(), locals().items()):
        if object is variable:
            return name
    return None # didn't find anything...
</code></pre>
<p>This accepts anything, not just functions, and looks through the <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer">global</a> and <a href="https://docs.python.org/3/library/functions.html#locals" rel="nofollow noreferrer">local</a> symbol tables to see if what you're looking for is there.</p>
<p>Since you're also printing type info, you might like to check out the <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow noreferrer">type</a> builtin function, which will give you that info.</p>
</div>
<span class="comment-copy">Suppose you call <code>prettyPrint(dict(dict1))</code>... what should be printed?</span>
<span class="comment-copy">An object can be referred to by multiple names, or via containers, or neither of the above (<code>prettyPrint("this?")</code>). See also <a href="https://stackoverflow.com/q/2749796/3001761">stackoverflow.com/q/2749796/3001761</a>, and <a href="https://nedbatchelder.com/text/names1.html" rel="nofollow noreferrer">nedbatchelder.com/text/names1.html</a>.</span>
<span class="comment-copy">@kindall @jonrsharpe Matlab, which has the functionality I'm trying to mimic, refers to values that are not individual variables as <code>ans</code></span>
<span class="comment-copy">Maybe this can answer to your question : <a href="https://stackoverflow.com/questions/18425225/getting-the-name-of-a-variable-as-a-string/18425523">Get the name of a variable as a string</a></span>
<span class="comment-copy">In Python, <code>dict1</code> is just a name that is bound to a <code>dict</code> value; there is no concrete "variable" object that has both the name <code>"dict1"</code> and the corresponding <code>dict</code> instance as attributes. <code>prettyPrint</code> gets the <code>dict</code> only, not any information about the name it was bound to. The only equivalent in Python would be to call <code>prettyPrint({'dict1': dict1})</code> explicitly, and have <code>prettyPrint</code> use the key and the value from its argument.</span>
