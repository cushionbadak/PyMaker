<div class="post-text" itemprop="text">
<p>I want to check if two strings contain "\n" or "\r" using just one if statement not two, and is there any way to do this or must I use a for loop?</p>
<p>I tried tweaking the if statement in many ways but it seems like I just cant get it right, so must I use a for loop or two if statements?</p>
<pre><code>def singleline_diff_format(line1, line2, idx):
    """
    Inputs:
      line1 - first single line string
      line2 - second single line string
      idx   - index at which to indicate difference
    Output:
      Returns a three line formatted string showing the location
      of the first difference between line1 and line2.

      If either input line contains a newline or carriage return,
      then returns an empty string.

      If idx is not a valid index, then returns an empty string.
     """
    equals = "=" * (idx)
    min_length = min(len(line1), len(line2))

    if "\n" or "\r" in line1 or line2:
        return ""
    else:
        return line1 +  "\n{}^".format(equals) + "\n" + line2 

print(singleline_diff_format("abcd", "abed", 2))
print(singleline_diff_format("abcd \nhey man", "abed", 2))    
print(singleline_diff_format("abcd", "abed", 5))
</code></pre>
<p>I expect </p>
<p>abcd</p>
<p>==^</p>
<p>abed</p>
<p>abcd</p>
<p>hey man</p>
<p>==^</p>
<p>abed</p>
<p>abcd</p>
<p>=====^</p>
<p>abed</p>
<p>But I just get empty strings which means that the if statement isn't working properly.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">any</a>:</p>
<pre><code>if any(char in line for char in ('\n',  '\r') for line in (line1, line2)):
    ....
</code></pre>
<p>This will be <code>True</code> if any of the 4 conditions <code>'\n' in line1</code>, <code>'\n' in line2</code>,<code>'\r' in line1</code>, <code>'\r' in line2</code> is `True - and is much more compact...</p>
</div>
<div class="post-text" itemprop="text">
<p>Your logic isn't doing what you intend and when you do match, you are returning an empty string.
if "\n" or "\r" in line1 or line2:
        return ""</p>
<p>Try:
if ("\n" or "\r") in (line1 or line2):
    return f'{line1}\n=\n{line2}'</p>
</div>
<span class="comment-copy"><code>if "\n" or "\r" in line1 or line2</code> test this line in the REPL, I don't think it does what you think.</span>
<span class="comment-copy"><code>or</code> conditions do not work like that. you have to write complete conditions on either side such as <code>"\n" in line1 or "\r" in line1</code> and so on etc</span>
<span class="comment-copy">@ParitoshSingh oh so this is where i got it wrong, i just thought there was a more pythonic and compact way to do it.</span>
<span class="comment-copy">@snakecharmerb no it doesnt do what i though</span>
<span class="comment-copy">Since both line1 and line2 should be strings, you could however append them if you absolutely do not want to use a for-loop: <code>if '\n' in line1+line2 or '\r' in line1+line2: ...</code></span>
<span class="comment-copy">that worked as well, thank u very much</span>
<span class="comment-copy"><code>or</code> doesnt work how you think either. Your condition essentially resolved to <code>if "\r" in line2</code>.</span>
