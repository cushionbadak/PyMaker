<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15928525/header-footer-terminal-display">header/footer terminal display [duplicate]</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/12758638/python-command-line-interaction-library">Python command line interaction library?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>How to print a continuous stream of data to stdout where the header columns are maintained at the top of the window?</p>
<p>For example, instead of printing output in this format:</p>
<pre><code>import random
while True:
    data = tuple(random.random() for i in range(4))
    print('Column A: %.3f, Column B: %.3f, Column C: %.3f, Column D: %.3f' % data)

Column A: 0.364, Column B: 0.311, Column C: 0.485, Column D: 0.272
Column A: 0.366, Column B: 0.619, Column C: 0.280, Column D: 0.305
Column A: 0.383, Column B: 0.119, Column C: 0.805, Column D: 0.778
Column A: 0.764, Column B: 0.957, Column C: 0.756, Column D: 0.849
Column A: 0.075, Column B: 0.909, Column C: 0.719, Column D: 0.749
Column A: 0.576, Column B: 0.165, Column C: 0.834, Column D: 0.529
Column A: 0.500, Column B: 0.404, Column C: 0.852, Column D: 0.782
Column A: 0.023, Column B: 0.681, Column C: 0.002, Column D: 0.713
Column A: 0.769, Column B: 0.523, Column C: 0.363, Column D: 0.044
Column A: 0.558, Column B: 0.892, Column C: 0.249, Column D: 0.854
</code></pre>
<p>How to print it in this format (where the top header row is kept on screen no matter how many lines have been printed)?:</p>
<pre><code>print('Column A\tColumn B\tColumn C\tColumn D')
while True:
    data = tuple(random.random() for i in range(4))
    print('%.3f\t\t%.3f\t\t%.3f\t\t%.3f' % data)

Column A    Column B    Column C    Column D
0.376       0.549       0.180       0.812
0.851       0.482       0.186       0.280
0.369       0.423       0.065       0.282
0.108       0.804       0.361       0.790
0.615       0.600       0.133       0.623
0.023       0.880       0.633       0.698
0.611       0.313       0.461       0.728
0.151       0.615       0.604       0.350
0.700       0.418       0.072       0.647
0.071       0.064       0.116       0.670
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Rank Python amateur here, but I took inspiration from the linked references in your question's comments, and came up with this:</p>
<pre><code>#!/usr/bin/env python
import random
import time
import urwid

def quit(*args, **kwargs):
    raise urwid.ExitMainLoop()

# The main callable
class EndlessRandom:
    def __call__(self):
        while True:
            data = tuple(random.random() for i in range(4))
            print('%.3f\t\t%.3f\t\t%.3f\t\t%.3f' % data)
            time.sleep(0.1)

# The components
title = urwid.Text("Column A\tColumn B\tColumn C\tColumn D".expandtabs(8))
body = urwid.Terminal(EndlessRandom())
urwid.connect_signal(body, 'closed', quit)

loop = urwid.MainLoop(urwid.Frame(body, title), handle_mouse=False, unhandled_input=quit)
body.main_loop = loop
loop.run()
</code></pre>
<p>It essentially uses the <a href="http://urwid.org/" rel="nofollow noreferrer">urwid</a> TUI library to create a "terminal with a titlebar", then wraps your random generator in a <a href="https://docs.python.org/3/library/functions.html#callable" rel="nofollow noreferrer">callable</a> "factory" class for <code>urwid.Terminal</code> to run.</p>
<p>If you don't have <code>urwid</code> already installed:</p>
<pre><code>pip install urwid
</code></pre>
<p>Hit <kbd>Ctrl-C</kbd> to terminate.</p>
</div>
