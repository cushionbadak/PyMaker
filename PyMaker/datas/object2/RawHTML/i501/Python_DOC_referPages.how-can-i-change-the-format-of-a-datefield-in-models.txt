<div class="post-text" itemprop="text">
<p>I want store some data in my django model class. The dates I need to store are of the form mm/dd/yy but the django date field format by default is yyyy-mm-dd so i get this error django.core.exceptions.ValidationError: ["'10/05/1997' value has an invalid date format. It must be in YYYY-MM-DD format."]
. how can i resolve this issue? I am not using any forms so I cannot use forms.datefield and its a datefield and not a datetimefield</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">datetime</a> module from Python's standard library to convert between different date formats.  </p>
<p><a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><code>datetime.datetime.strptime</code></a> creates a <a href="https://docs.python.org/3/library/datetime.html#datetime-objects" rel="nofollow noreferrer"><code>datetime.datetime</code></a> object, given a string and a format; <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strftime" rel="nofollow noreferrer"><code>datetime.datetime.strftime</code></a> returns a string, given a datetime and a format.</p>
<p>In your case you can define the display format as 'mm/dd/yyy' and 'yyyy-mm-dd' as the storage format and generate datestrings for storage like this:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; display_format = '%m/%d/%Y'
&gt;&gt;&gt; db_format = '%Y-%m-%d'
&gt;&gt;&gt; date = '10/05/1997'
&gt;&gt;&gt; db_date = datetime.datetime.strptime(date, display_format).strftime(db_format)
&gt;&gt;&gt; print(db_date)
1997-10-05
</code></pre>
<p>Converting from storage format to display format is similar:</p>
<pre><code>&gt;&gt;&gt; display_date = datetime.datetime.strptime(db_date, db_format).strftime(display_format) 
&gt;&gt;&gt; print(display_date)
10/05/1997
</code></pre>
<p>Alternatively, you could <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">split</a> the string into parts, and then <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer">join</a> it back together in the order that you want, with the separators that you want:</p>
<pre><code>&gt;&gt; date = '10/05/1997'
&gt;&gt;&gt; month, day, year = date.split('/')
&gt;&gt;&gt; month, day, year
('10', '05', '1997')
&gt;&gt;&gt; 
&gt;&gt;&gt; db_date = '-'.join((year, month, day))
&gt;&gt;&gt; print(db_date)
1997-10-05
</code></pre>
<p>To go from storage format to display format:</p>
<pre><code>&gt;&gt;&gt; year, month, day = db_date.split('-')
&gt;&gt;&gt; display_date = '/'.join((month, day, year))
&gt;&gt;&gt; print(display_date)
10/05/1997
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/8636760/parsing-a-datetime-string-into-a-django-datetimefield">Parsing a Datetime String into a Django DateTimeField</a></span>
