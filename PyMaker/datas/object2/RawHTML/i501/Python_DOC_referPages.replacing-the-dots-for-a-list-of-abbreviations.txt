<div class="post-text" itemprop="text">
<p>I'm trying to remove the dots of a list of abbreviations so that they will not confuse the sentence tokenizer. This is should be very straightforward. Don't know why my code is not working. </p>
<p>Below please find my code:</p>
<pre><code>abbrevs = [
    "No.", "U.S.", "Mses.", "B.S.", "B.A.", "D.C.", "B.Tech.", "Pte.", "Mr.", "O.E.M.",
    "I.R.S", "sq.", "Reg.", "S-K."
]



def replace_abbrev(abbrs, text):
    re_abbrs = [r"\b" + re.escape(a) + r"\b" for a in abbrs]

    abbr_no_dot = [a.replace(".", "") for a in abbrs]

    pattern_zip = zip(re_abbrs, abbr_no_dot)

    for p in pattern_zip:
        text = re.sub(p[0], p[1], text)

    return text

text = "Test No. U.S. Mses. B.S. Test"

text = replace_abbrev(abbrevs, text)

print(text)
</code></pre>
<p>Here is the result. Nothing happened. What was wrong? Thanks. </p>
<pre><code> Test No. U.S. Mses. B.S. Test
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>re_abbrs = [r"\b" + re.escape(a)  for a in abbrs]
</code></pre>
<p>You need to use this.There is no <code>\b</code> after <code>.</code> .This gives the correct output.</p>
<p><code>Test No US Mses BS Test</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a> and <a href="https://docs.python.org/3/library/operator.html#operator.methodcaller" rel="nofollow noreferrer">operator.methodcaller</a> no need for re even though it's a great library.</p>
<pre><code>from operator import methodcaller

' '.join(map(methodcaller('replace', '.', ''), abbrevs))
#No US Mses BS BA DC BTech Pte Mr OEM IRS sq Reg S-K
</code></pre>
</div>
<span class="comment-copy">What is the <code>re_abbrs = [r"\b" + re.escape(a) + r"\b" for a in abbrs]</code> line for? Because removing it makes it work for this test case!</span>
<span class="comment-copy">I want to match the whole word, so I add word boundaries.</span>
<span class="comment-copy">You're just trying to rid all periods?</span>
<span class="comment-copy">Yes, that's I'm trying to do.</span>
<span class="comment-copy">remove the '\b' after re.escape(a)</span>
<span class="comment-copy">Thank you very much. I already took me more than one hour trying to figure out.</span>
<span class="comment-copy">Removing the second r"\b" will match patterns like U.S.A. I changed it to r"\b" + re.escape(a) + r"(?=\s+)" . Very happy with the results. Thank you for pointing this out.</span>
<span class="comment-copy">@VictorWang you might want to use <code>r"\b" + re.escape(a) + r"(?=(?:\s+|$))"</code> in case the last word ends with <code>.</code></span>
<span class="comment-copy">Good point! Yes, will add.</span>
