<div class="post-text" itemprop="text">
<p>I am making a program witch is basically a terminal interface to a couple of math libraries that i made for school. the flow is an infinite loop in python terminal that gives you the option to call a function in the library, add values and get an answer. </p>
<p>The thing is that i would like to make the code less shaky buy being able to call a help input and for that i would like to make a list of all available commands. </p>
<p>Or even better show the different categories and make it possible to write sub helps like for example </p>
<hr/>
<pre><code>&gt;&gt;&gt; help 
algebra
finance
geometry
&gt;&gt;&gt;help.finance
stockmarket
personal finance
&gt;&gt;&gt;help.finance.stockmarket 
what: price to earnings. command: "p2e" values: stockpice, eps
</code></pre>
<hr/>
<p>note: this is just some sudo scenario i just created but something like that would work.</p>
<p>For now i have created if statements, but when porting in all my different libraries and categories is the the code quickly becomes repetitive.</p>
<p>i also now have it that if you type "help" you get every single command just out of the blue.  </p>
<pre><code>print("Welcome to the stockmath project ")
print("if you want to run a command  just type it in below")
print("if you dont know any commands, type help")
print("_______________________________________________")


command = input() 


while True:
    if command == ("stm.test"):
        stockmath.test()
    elif command == ("help") and counter == 0:
        print ("p2e, price to earnings,command = stm.p2e,"
        "values: price per share, earnings per share")
    elif command == ("quit"):
        break
</code></pre>
<p>I would just again remind you that i have not built this part yet.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the python module <a href="https://docs.python.org/3/library/cmd.html" rel="nofollow noreferrer">cmd</a>.</p>
<p>Here is a very basic example</p>
<pre><code>import cmd

class SimpleCmd(cmd.Cmd):
    intro = 'Welcome to this simple command prompt'
    prompt = "&gt;&gt;"

    def do_left(self,arg):
        """Go Left"""
        print("Go Left")

    def do_right(self,arg):
        """Go Right"""
        print("Go Right")

    def do_quit(self,arg):
        """Exit command prompt"""
        return True

if __name__ == '__main__':
    SimpleCmd().cmdloop()
</code></pre>
<p>The output of the program will look something like this</p>
<pre><code>Welcome to this simple command prompt
&gt;&gt;help

Documented commands (type help &lt;topic&gt;):
========================================
help  left  right

&gt;&gt;help left
Go Left
</code></pre>
<p>The cmd module takes care of the infinite loop for you and will do a lot of the complex stuff like parsing the help documentation and providing a command history using the  and  arrow keys.</p>
</div>
<span class="comment-copy">There is a python built in module called <a href="https://docs.python.org/3/library/cmd.html" rel="nofollow noreferrer">cmd</a> which will allow you to create a number of functions as commands. Typing help will show all the command that you have programmed in to it.</span>
<span class="comment-copy">Im having dificulties adding arguments in the cmd framework. i can run simple args that have static values, but i am not able to write new values and make the function do what ever it needs to do. any tips?</span>
<span class="comment-copy">The example on the python documentation page (linked in my post) shows how to pass arguments to the functions. Any specific examples of things you are trying to do?</span>
