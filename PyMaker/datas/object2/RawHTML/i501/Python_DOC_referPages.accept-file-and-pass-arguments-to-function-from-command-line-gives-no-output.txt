<div class="post-text" itemprop="text">
<p>I am writing a script to accept (optional) two arguments in command line: --top to return top words by count e.g. --top 5, returns top 5; --lower to lower a list of words before counting the unique values.</p>
<p>I got to this stage and I am getting no output:</p>
<pre><code>import collections
import argparse

def counts(text, top = 10, case = None):
    """ returns counts. Default is top 10 frequent words without change of case"""
    # split on whitespace
    word_list = text.split()

    if case is None:
        c = collections.Counter(word_list)
        return c.most_common(top)
    else:
        c = collections.Counter([w.lower() for w in word_list])
        return c.most_common(top)

# declare parser
parser = argparse.ArgumentParser()

# add argument --top
parser.add_argument("--top", help="returns top N words. If not specified it returns top 10", type=int)

# add argument --lower
parser.add_argument("--lower", help = "lowercase all the words.('StackOverFlow' and 'stackoverflow' are counted equally.")

# add argument filename
parser.add_argument("filename", help = "accepts txt file")

args = parser.parse_args()

# read text file
file = open(args.filename, 'r').read()

counts(text = file, top = args.top, case = args.lower)
</code></pre>
<p>When I run the script with</p>
<pre><code>$python script.py text.txt --top 5 --lower
</code></pre>
<p>I get no output. Any clue where I am going wrong?</p>
<p>If the file were to output something, I would expect:</p>
<pre><code>(word1 count1)
(word2 count2)
(word3 count3)
(word4 count4)
(word5 count5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Based on amazing comments above, the working code is:</p>
<pre><code>import collections
import argparse

def counts(text, top = 10, case = False):
    """ returns counts. Default is top 10 frequent words without change of case"""
    # split on whitespace
    word_list = text.split()

    if case is False:
        c = collections.Counter(word_list)
        return c.most_common(top)
    else:
        c = collections.Counter([w.lower() for w in word_list])
        return c.most_common(top)

# declare parser
parser = argparse.ArgumentParser()

# add argument --top
parser.add_argument("--top", help="returns top N words. If not specified it returns top 10", type=int)

# add argument --lower
parser.add_argument("--lower", help = "lowercase all the words.('StackOverFlow' and 'stackoverflow' are counted equally.",action='store_true')

# add argument filename
parser.add_argument("filename", help = "accepts txt file")

args = parser.parse_args()

# read text file
file = open(args.filename, 'r').read()

if args.top:
    print(counts(text = file, top = args.top, case = args.lower))
else:
    print(counts(text = file, case = args.lower))
</code></pre>
</div>
<span class="comment-copy">If you are using ArgParse, do this properly and make it handle all your arguments. Do not use <code>sys.argv</code></span>
<span class="comment-copy">Check out this question for help with using file arguments with argparse: <a href="https://stackoverflow.com/questions/18862836/how-to-open-file-using-argparse" title="how to open file using argparse">stackoverflow.com/questions/18862836/â€¦</a></span>
<span class="comment-copy"><code>parse_args</code> parses <code>sys.argv[1:]</code>.  I'd expect it to raise an <code>unknown value</code> error if it encountered the 'text.txt' string first.  The error appears to be produced by the <code>open</code> command, using `open('--top').  That too makes it look like you did not include 'text.txt' or you put it last.</span>
<span class="comment-copy">Thanks for the comments, I fixed the post based on the suggestions. But the script still does not give any output.</span>
<span class="comment-copy">@feijao That's because you use the default <a href="https://docs.python.org/3/library/argparse.html#action" rel="nofollow noreferrer">action</a> <code>store</code> for <code>--lower</code>; it needs any value in that case, e.g. <code>--lower 1</code>. You could also use action <code>store_true</code>, then you can omit a value for <code>--lower</code>. You'd have to change the condition in <code>count()</code> in that case though, because <code>args.lower</code> can only ever be <code>True</code> or <code>False</code> then. Oh, and the missing output ... you don't print anything. <code>print(counts(text = file, top = args.top, case = args.lower))</code></span>
<span class="comment-copy">You could also add <a href="https://docs.python.org/3/library/argparse.html#default" rel="nofollow noreferrer"><code>default=10</code></a> to your definition of <code>--top</code>. Then you would not need to worry about <code>args.top</code> being <code>None</code> when calling <code>counts</code> ;)</span>
<span class="comment-copy">Just wow! Thanks again @shmee</span>
