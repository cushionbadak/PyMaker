<div class="post-text" itemprop="text">
<p>I want to Hash a CAN message received from a vehicle. The following code written in Python is used to receive the CAN message(<code>dev.recv()</code>) from the vehicle and print the received message (<code>dev.send()</code>).I want to hash the CAN message present in <code>dev.recv()</code>function before sending the message using <code>dev.send()</code>.Is this possible? If so how can it be done? </p>
<pre class="lang-py prettyprint-override"><code>from canard.hw import socketcan

dev = socketcan.SocketCanDev(’can0’)
dev.start()
while True:
    f = dev.recv()
    dev.send(f)

`

</code></pre>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>I am not sure what the data type is for <code>"f"</code>, the data you receive from the function <code>recv</code>.</li>
<li>I am guessing that <code>SocketCanDev</code> is just a wrapper for the device, and <code>recv</code> acts very similar to the function, read().</li>
<li>So, <code>"f"</code> in your code might be interpreted as an array of bytes, or chars.</li>
</ul>
<blockquote>
<p>Hashing is done to an array of bytes, regardless of the format of the
  string.</p>
</blockquote>
<p>And, the result of the hashing does not depend on the input format or data type.
Therefore, in your case,</p>
<pre><code>while True:
    f = dev.recv()
    result = (hashFunction)(f)
    dev.send(result) // result should in the data type that the function send can accept as a parameter 
</code></pre>
<p><code>(hashFunction)</code> can be replaced with an actual function from a hashing library, such as "hashlib".</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are interested in cryptographic hashing, you should take a look at <a href="https://docs.python.org/3/library/hashlib.html" rel="nofollow noreferrer">hashlib</a></p>
<p>With it you should be able to hash the message and send the hash like this</p>
<pre class="lang-py prettyprint-override"><code>H = hashlib.new('sha256', message)
dev.send(H.digest())
</code></pre>
<p>If you want to still send the original message besides the hash, you could make two calls to <code>send</code>.</p>
</div>
<span class="comment-copy">What do you mean by "hash"?</span>
<span class="comment-copy">cryptographic hash function. It is used to convert a message to a fixed length  ciphertext</span>
<span class="comment-copy">Hash does not convert a message to ciphertext. Which is exactly why I asked what you meant by it. Do you in fact want to encrypt the message? Or are you trying sign the message? Or something else? What do you want to accomplish?</span>
<span class="comment-copy">I want to do something like this for an input like this "slcan0 123 [8] 11 22 33 44 55 66 77 88" output should be a hash like this "38a2dbcf47db1d3026e89f6118d308f1"</span>
<span class="comment-copy">@MaartenBodewes Thank you for your comment. I edited and made changes. I now know about the backquote, thanks!</span>
<span class="comment-copy">dev.send() accepts only CAN message format like 11 22 33 44 55 66 so how can I send the hashed message across the CAN bus?</span>
<span class="comment-copy">You need to re-format the result so that it is sendable. If SHA1 hash is used, result would be an array of 16 bytes (128 bits). If CAN message should in format "11 22 33", you can transform it by concatenating the array values plus whitespace. Ex. message = array[0] + " " + array[1] + " " + ... + array[15]</span>
