<div class="post-text" itemprop="text">
<p>To create a virtual environment using <code>virtualenv</code> you can specify the Python release and point version like so:</p>
<pre><code>virtualenv --python=python3.6 .venv
</code></pre>
<p>How can I achieve this using Python3's <code>venv</code> module (as in <code>python3 -m venv .newvenv</code>)? <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">According to the documentation</a> using <code>venv</code> is the recommended way to create virtual environments but I didn't see how I can choose a virtual environement with a specific Python version.</p>
</div>
<div class="post-text" itemprop="text">
<p>Run <code>venv</code> with whatever Python installation you want to use for the new virtual environment. For example, if you would run your Python 3.6 installation with <code>python3.6</code>, then</p>
<pre><code>python3.6 -m venv whatever
</code></pre>
<p>would be how you create a Python 3.6 virtual environment.</p>
</div>
<span class="comment-copy">Great. <code>python3.5 -m venv ...</code> works without a problem (that came with the distribution), but <code>python3.6 -m venv whatever</code> returns <code>Error: Command '['/home/someuser/dev/somedir/whatever/bin/python3.6', '-Im', 'ensurepip', '--upgrade', '--default-pip']' returned non-zero exit status 1.</code> - not exactly helpful, but it does create a functional Python 3.6 environment nevertheless.</span>
