<div class="post-text" itemprop="text">
<p>Due to some architectural reasons out of my control, an object I use frequently and would like full code completion for is a dynamic composite of several features on top of the static features already present in the source code.</p>
<pre><code>import lgb.reqs.plan
# Various imports which dynamically extend the smallform
import lgb_extensions.water_extras
import lgb_extensions.toolkit_extras

d = c.req[0]  # type: lgb.reqs.plan.smallform 
d = d  # type: lgb_extensions.water_extras.common
d = d  # type: lgb_extensions.toolkit_extras.common

# Now I get the autocomplete on d as I type "d."
d.
</code></pre>
<p>I've found the re-assign <code>d</code> method to work great, but it feels wrong. Is there no way to type hint with a tuple or something? I tried and couldn't figure it out.</p>
<p>I've found jupyter notebook to be great for autocompletion, and I'll jump into either ipython or a notebook session if I really need to explore an unknown codebase, but in this case, I'm pretty familiar with the code base and just would like the autocompletions to be better as I can never remember quite what things are called. I'm mostly in pycharm or atom if that matters. The solution above already solves my problem <strong>if there are only a few extensions</strong>, but it doesn't work when I have 10 things extending the object. In my use usual case, I have about 20 things extending the object I'd like auto-complete on.</p>
</div>
<div class="post-text" itemprop="text">
<p>You might be able to use <a href="https://docs.python.org/3/library/typing.html#typing.Union" rel="nofollow noreferrer"><code>Union</code></a> here. It's more for when a name can hold different types in different circumstances.</p>
<p>Eg.</p>
<pre><code>from typing import Union

a = f() # type: Union[str, int]
d. # now get autocompletion for str and int from IDEs
</code></pre>
</div>
<span class="comment-copy">Ugly and is about 800 characters on that line to implement, but it works beautifully. Awesome, thank you.</span>
