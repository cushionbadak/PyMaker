<div class="post-text" itemprop="text">
<p>I promise I searched and read several pages of google before I came to make this post. Due diligence has been done I swear.</p>
<p>I am trying to open a CSV file in python, read the file, make changes to it, and then write out a new file.</p>
<p>I got this far:</p>
<pre><code>import csv
def water_data ():
    with open('aquastat.csv', 'r') as csv_file:
        csv_reader = csv.reader(csv_file)
        final_file_name = "final_water.data.csv"
        final_file = open(final_file_name,'w')
        csv_writer = csv.writer(final_file,delimiter="\t")
        for row in csv_reader:
            csv_writer.writerow(row)
</code></pre>
<p>But I'm struggling to get any further. I want to remove certain columns, but I cannot comprehend how python will know the difference between a row and a column. For example, the columns are <code>Area, Area ID, Year, Value</code>, etc. I only want <code>Area, Year, Value</code>. I tried </p>
<pre><code>for row in final_file:

final_file.writerow(row[0] + row[2] + row[4] + row[5])
</code></pre>
<p>but I kept getting the following error: IndexError: list index out of range</p>
<p>[I would also like to replace blank cells with a *, but the column thing is the priority]</p>
<p><em>Note that I cannot use Pandas</em></p>
<p>If possible I would really appreciate if someone could not just tell me the code but explain it to me so I can figure it out further myself.</p>
<p><strong>TLDR: How can I remove empty rows from the CVS file and write only certain columns into the new file?</strong> </p>
<p><strong>INPUT:</strong></p>
<pre><code>"Area","Area Id","Variable Name","Variable Id","Year","Value","Symbol","Md" 
"Afghanistan",2,"Total area of the country",4100,1977,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,1982,65286.0,"E","","" 
"Afghanistan",2,"Total area of the country",4100,1987,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,1992,65286.0,"E","","" 
"Afghanistan",2,"Total area of the country",4100,1997,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,2002,65286.0,"E","",""
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I have tried to provide you an answer as close as possible than what you have done so far.  </p>
<p><strong>Prototype:</strong></p>
<pre><code>import csv

with open('aquastat.csv', 'r') as csv_file:
  csv_reader = csv.reader(csv_file)
  final_file_name = "final_water.data.csv"
  final_file = open(final_file_name,'w')
  csv_writer = csv.writer(final_file,delimiter="\t")
  for row in csv_reader:
    if len(row) &gt;= 6:
        row = [row[0], row[4], row[5]]
        csv_writer.writerow(row)
  final_file.close()
</code></pre>
<p><strong>explanations:</strong></p>
<ul>
<li>Before the line <code>csv_writer.writerow(row)</code> where you output the row in the output csv file. I have added the line <code>row = [row[0], row[4], row[5]]</code> where I overwrite the content of the array <code>row</code> by an array containing only 3 cells, those cells are respectively taken from the <code>Area</code>, <code>Year</code>, <code>Value</code> columns</li>
<li>On top of this, I have added a the if condition <code>if len(row) &gt;= 6:</code> to check that you have at least enough elements in your row to extract the columns until <code>Value</code>.</li>
</ul>
<p><strong>input:</strong></p>
<pre><code>"Area","Area Id","Variable Name","Variable Id","Year","Value","Symbol","Md"
"Afghanistan",2,"Total area of the country",4100,1977,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,1982,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,1987,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,1992,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,1997,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,2002,65286.0,"E","",""
</code></pre>
<p><strong>output:</strong></p>
<pre><code>Area    Year    Value
Afghanistan     1977    65286.0
Afghanistan     1982    65286.0
Afghanistan     1987    65286.0
Afghanistan     1992    65286.0
Afghanistan     1997    65286.0
Afghanistan     2002    65286.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This line will not <code>IndexError</code> and will write the line ignoring non existing values:</p>
<p><code>final_file.writerow((row[i] for i in (0,2,5) if i&lt;len(row)))</code></p>
<p>This line will not <code>IndexError</code> and will write the line replacing empty values with a star:</p>
<p><code>final_file.writerow((row[i] if i&lt;len(row) else "*" for i in (0,2,5)))</code></p>
<p>This line will not <code>IndexError</code> either but won't write the line:</p>
<p><code>if len(row)&gt;5: final_file.writerow((row[i] for i in (0,2,5)))</code></p>
<p>This line will not <code>IndexError</code> either but won't write any line at all:</p>
<p><code>pass</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer"><code>DictReader</code> and <code>DictWriter</code></a> to selectively modify and write specific columns using their header/column names.</p>
<p>I'll use <a href="https://docs.python.org/3/library/io.html#io.StringIO" rel="nofollow noreferrer"><code>io.StringIO</code></a> to simulate the files</p>
<pre><code>s = '''"Area","Area Id","Variable Name","Variable Id","Year","Value","Symbol","Md" 
"Afghanistan",2,"Total area of the country",4100,1977,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,1982,65286.0,"E","","" 
"Afghanistan",2,"Total area of the country",4100,1987,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,1992,65286.0,"E","","" 
"Afghanistan",2,"Total area of the country",4100,1997,65286.0,"E","",""
"Afghanistan",2,"Total area of the country",4100,2002,65286.0,"E","",""'''

f = io.StringIO(s)
g = io.StringIO()

reader = csv.DictReader(f)
writer = csv.DictWriter(g, fieldnames=["Area","Variable Id","Value"], extrasaction='ignore')

for row in reader:
    #process row values?
    row['Value'] = float(row['Value']) / 1000
    writer.writerow(row)
</code></pre>
<p>Note that the DictWriter <code>extrasaction</code> parameter needs to be set to <code>'ignore'</code> because there are <em>extra</em> keys/fields in the original.</p>
<p>If the csv file does not have a header row, you have to specify the field names for the DictWriter.</p>
<hr/>
<pre><code>&gt;&gt;&gt; g.seek(0)
0
&gt;&gt;&gt; print(g.read())
Afghanistan,4100,65.286
Afghanistan,4100,65.286
Afghanistan,4100,65.286
Afghanistan,4100,65.286
Afghanistan,4100,65.286
Afghanistan,4100,65.286
</code></pre>
</div>
<span class="comment-copy">Can you give us a part of the input?</span>
<span class="comment-copy">"Area","Area Id","Variable Name","Variable Id","Year","Value","Symbol","Md" "Afghanistan",2,"Total area of the country",4100,1977,65286.0,"E","","" "Afghanistan",2,"Total area of the country",4100,1982,65286.0,"E","","" "Afghanistan",2,"Total area of the country",4100,1987,65286.0,"E","","" "Afghanistan",2,"Total area of the country",4100,1992,65286.0,"E","","" "Afghanistan",2,"Total area of the country",4100,1997,65286.0,"E","","" "Afghanistan",2,"Total area of the country",4100,2002,65286.0,"E","",""</span>
<span class="comment-copy">Could you also add your expected output for the input?</span>
<span class="comment-copy">I'm not sure. I am just trying to clean up the data. i would like the data to be the same but without the area ID column, or without empty rows</span>
<span class="comment-copy">@AshleyF do you need to do it by Python ? otherwise, you could use a simple bash command such as <code>cat File.csv | cut -d, -f1,5,6</code></span>
