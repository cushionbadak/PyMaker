<div class="post-text" itemprop="text">
<p>I was reading <a href="https://docs.python.org/3.3/tutorial/classes.html#scopes-and-namespaces-example" rel="nofollow noreferrer">section 9.2.1</a> about namespace and scope when I came across the following piece of code.</p>
<pre><code>def scope_test():
    def do_local():
        spam = "local spam"
    def do_nonlocal():
        nonlocal spam
        spam = "nonlocal spam"
    def do_global():
        global spam
        spam = "global spam"
    spam = "test spam"
    do_local()
    print("After local assignment:", spam)
    do_nonlocal()
    print("After nonlocal assignment:", spam)
    do_global()
    print("After global assignment:", spam)

scope_test()
print("In global scope:", spam)
</code></pre>
<p>The documentation claims the following is the output:</p>
<pre><code>After local assignment: test spam
After nonlocal assignment: nonlocal spam
After global assignment: nonlocal spam
In global scope: global spam
</code></pre>
<p>My question is the following: shouldn't the output of line 3 be <code>global spam</code> due to the use of the <code>global</code> keyword in in <code>do_global()</code> function?</p>
</div>
<div class="post-text" itemprop="text">
<p>No, it is local to the function's scope by default unless you explicitly say otherwise. From the <a href="https://docs.python.org/3/faq/programming.html" rel="nofollow noreferrer">Python Programming FAQ</a>:</p>
<blockquote>
<p>In Python, variables that are only referenced inside a function are implicitly global. If a variable is assigned a value anywhere within the function’s body, it’s assumed to be a local unless explicitly declared as global.</p>
</blockquote>
<p>Note that you can <strong>access</strong> the value of a global variable from any scope, and for that matter, you may access the value of any parent scope to the current scope, but unless you explicitly say you will modify it with the <code>global</code> keyword, its value cannot change.</p>
</div>
<div class="post-text" itemprop="text">
<p>The documentation is correct here - just try the code to make sure...</p>
<p>You are right on one point: as <code>do_global</code> contains <code>global spam</code> it changes the value of a global variable <code>spam</code>. But what in printed in position 3 is the <code>spam</code> variable in the <code>scope_test</code> function, which has not been changed by <code>do_global</code>.</p>
<p>And the 4th print does show the content of the global <code>spam</code> which was set in <code>do_global</code>.</p>
</div>
