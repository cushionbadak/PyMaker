<div class="post-text" itemprop="text">
<p>I have different products, there are 4 different ways they can be presented.</p>
<ol>
<li>1/ABC123456</li>
<li>ABC123456</li>
<li>ABC123456/1</li>
<li>1/ABC123456/1</li>
</ol>
<p>In all of these cases I want to extract "ABC" and "123" from the product name. 
I know that I should be able to use reg exp for this, but I am not sure how to construct the pattern. </p>
<p>Thank you for the help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can search for a group of 3 letters followed by 3 digits: </p>
<p>import re</p>
<pre><code>tests = ["1/ABC123456", "ABC123456", "ABC123456/1", "1/ABC123456/1"]

for ref in tests:
    print(re.search(r'[A-Za-z]{3}\d{3}', ref).group(0))
</code></pre>
<p>Output:</p>
<pre><code>ABC123
ABC123
ABC123
ABC123
</code></pre>
<p><a href="https://docs.python.org/3/library/re.html#re.Pattern.search" rel="nofollow noreferrer">search</a> looks for the first location where the pattern matches, so you don't have to care about the <code>1/</code> that could appear at the start of your reference.</p>
</div>
<span class="comment-copy">Please add realistic input strings.</span>
<span class="comment-copy">What is the rule that makes you extract <code>123</code>? Why not <code>123456</code>? Do you mean 'all letters and the next 3 digits'? You should clarify that.</span>
<span class="comment-copy">These are actual realistic input strings. First 3 letters are prod category, e.g ABC. Then it is product type which is the following 3 numbers. I do not need the following numbers since they relate to other info.</span>
