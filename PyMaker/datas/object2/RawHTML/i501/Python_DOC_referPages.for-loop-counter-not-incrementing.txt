<div class="post-text" itemprop="text">
<p>I have a double for loop to go through a matrix and compare numbers. The <code>RowCounter</code> is not incremented in my loop and I can't see why. I also recreated the spaces in front of every line, in order to have nothing "broken" by this part. In Notepad++ I get therefore that "plus-sign" in front of the first <code>for</code>-loop, so that I can close the whole loops and what is inside. Basically my 2 <code>for</code>-loops do this:</p>
<pre class="lang-none prettyprint-override"><code>RowCounter=0 ColCounter=0
RowCounter=0 ColCounter=1
RowCounter=0 ColCounter=2
RowCounter=0 ColCounter=3
RowCounter=0 ColCounter=0
RowCounter=0 ColCounter=1
RowCounter=0 ColCounter=2
RowCounter=0 ColCounter=3
</code></pre>
<p>I really do not understand why the <code>RowCounter</code> is not raised to 1.</p>
<pre class="lang-none prettyprint-override"><code>Rows=2
Cols=5
for RowCounter in range(0, Rows-1, 1):
    for ColCounter in range(0, Cols-1, 1):
        CurrentValue=float(Numbers[RowCounter][ColCounter])                  
        if CurrentValue==NoDataValue:
            DataMatrix[RowCounter][ColCounter]=float(0.0)
        else:
            DataMatrix[RowCounter][ColCounter]=float(CurrentValue)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><code>class range(start, stop[, step])</code></p>
<p>[...]</p>
<p>For a positive step, the contents of a range r are determined by the formula r[i] = start + step*i where i &gt;= 0 and r[i] &lt; stop.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/stdtypes.html#range" rel="nofollow noreferrer">Python3 documentation</a></p>
<p>From an usage perspective, <code>for x in range(start, stop, step)</code> could be explained as following:</p>
<pre><code># This is an explanation, use for ... in range
x = start
while x &lt; stop:
     # ...
     x += step
</code></pre>
<p>Your stop boundary is therefore wrong.</p>
</div>
<span class="comment-copy"><code>range(0, Rows-1, 1)</code> =&gt; <code>range(0, 1, 1)</code> 1 is not inclusive in range. Remove <code>-1</code></span>
<span class="comment-copy">the last integer generated by range() is up to, but not including, stop. For example range(0, 5) generates integers from 0 up to, but not including, 5. Your first for_loop generates only 0.</span>
<span class="comment-copy">Better yet, just use <code>range(Rows)</code> (and <code>range(Cols)</code>)â€”that's all that's required in those cases.</span>
