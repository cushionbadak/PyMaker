<div class="post-text" itemprop="text">
<p>I have a folder that has hundreds of files in it. I have a list of files that I know need to be deleted, so I am trying to write code to figure out: which files in this list are in this folder, and which are not. </p>
<p>I am using the os module, and I know how to walk through all of the files in my folder using <code>os.walk</code>, but what I don't know is how to specify if the file is in my <code>files_list</code>.</p>
<p>So I want to check if the file name in my <code>files_list</code> is in "folder" and if it is, then append it to <code>bad_list</code>, and if it isn't then append it to <code>good_list</code>. This is what I have so far:</p>
<pre><code>for root, dirs, files in os.walk(my_path):
    for file in files:
        if file in folder:
            badlist.append(file)
        else:
            good_list.append(file)
</code></pre>
<p>My question is, how do I put in the "is in <code>files_list</code>" part of this? I assume it should go after the <code>if file in folder</code> part, to say something like "is in <code>files_list</code>" but I can't figure out exactly how to write that in the code. </p>
<p>I am new to Python, so apologies if this is very simple. </p>
</div>
<div class="post-text" itemprop="text">
<p>Why not just try to delete the files you know that are under the folder and ignore any error</p>
<pre><code>import os

files_to_remove = ['a.txt', 'b.txt']
folder_name = '/the_files_folder'
for file_to_remove in files_to_remove:
    try:
        os.remove(os.path.join(folder_name, file_to_remove))
    except OSError:
       pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer"><code>set</code></a> for membership testing.  </p>
<p>Assuming <code>folder</code> is a list of file names with extensions (e.g.<code>'foo.txt'</code>), make <code>folder</code> a set then use set methods to differentiate the files.  Use <code>os.path.join</code> if you want to store complete paths in the good and bad lists.</p>
<pre><code>folder = set(folder)
for root, dirs, files in os.walk(my_path):
    files = set(files)
    #badlist.extend(files.intersection(folder))
    for fname in files.intersection(folder):
        badlist.append(os.path.join(root, fname))
    #goodlist.extend(files.difference(folder))
    for fname in files.difference(folder):
        goodlist.append(os.path.join(root, fname))
</code></pre>
</div>
<span class="comment-copy">would it be possible to give a snip of your file structure? Also, I'm not sure what <code>folder</code> means in your code. You don't post where you declared it...</span>
<span class="comment-copy">Hi, sorry, I can't give a snip of that at the moment, but I actually think I just figured out my own problem: where it says folder, I think that should be files_list, if that makes sense to you. Sorry for wasting your time with this!</span>
<span class="comment-copy">What does <code>files_list</code> contain? Do you have full, absolute paths, relative paths (relative to what directory if so), or only the base filenames?</span>
<span class="comment-copy"><code>files_list</code> contains the base filename, so 'xyz.csv' and so forth. Then the folder I am pointing to has the same thing. So essentially I just want to match if a filename in the <code>files_list</code> is also in that folder.</span>
<span class="comment-copy">Then all you need to do is check if <code>file in files_list</code> is true. You may want to make <code>files_list</code> a <i>set</i> to make that test a lot faster.</span>
<span class="comment-copy"><code>except:</code> should be <code>except OSError:</code>. Imagine you have a typo in one variable name. Best answer so far, that said.</span>
<span class="comment-copy">code was modified in order to catch OSError only</span>
