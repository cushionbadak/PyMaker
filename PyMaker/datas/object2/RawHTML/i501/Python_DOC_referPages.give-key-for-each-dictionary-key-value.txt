<div class="post-text" itemprop="text">
<p>I am running this code to combine three lists into a dictionary with the first list being the key. </p>
<pre><code>list_dict = {x: (y, z) for x, y, z in zip_longest(order_instance, final_mem, final_disk)}
pprint(list_dict)
</code></pre>
<p>which returns this...</p>
<pre><code>{'instanceIndex:0': ('212590592', '192389120'),
 'instanceIndex:1': ('5971968', '13963264'),
 'instanceIndex:2': ('93331456', '216592384')}
</code></pre>
<p>I would like to be able to format this dictionary to show keys for the y and z value, making it easier to input into a SQL db. Something like this.</p>
<pre><code>{'instanceIndex:0': ((Memory: '212590592'),
                      (Disk: '192389120')),
 'instanceIndex:1': ((Memory: '5971968'),
                      (Disk: '13963264')),
 'instanceIndex:2': ((Memory: '93331456'),
                      (Disk: '216592384'))}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can directly modify your dict-comprehension to match whatever format you choose to store your values. In your case, your key-value format resembles a <code>dict</code>ionary -- so use that.</p>
<pre><code>list_dict = {x: {'Memory':y, 'Disk':z} for x, y, z in zip_longest(order_instance, final_mem, final_disk)}
#               ^^^^^^^^^^  ^^^^^^^^ ^
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer"><code>collections.namedtuples</code></a> to store your data as <em>named tuple</em>:</p>
<pre><code>from itertools import zip_longest
from collections import namedtuple
from pprint import pprint

inst = ["i1","i2","i3"]
memo = ["1","2","3"]
disk = ["d1","d2","d3"] 

Data = namedtuple("Data", ["Memory","Disk"])

k = {x: Data(m,d) for x, m, d in zip_longest(inst,memo,disk)}

pprint(k) 
</code></pre>
<p>Output:</p>
<pre><code>{'i1': Data(Memory='1', Disk='d1'),
 'i2': Data(Memory='2', Disk='d2'),
 'i3': Data(Memory='3', Disk='d3')}
</code></pre>
<p>You can access named tuples either by index or by name:</p>
<pre><code>print( k["i1"].Memory)   # 1 
print( k["i1"][1])       # d1
</code></pre>
</div>
<span class="comment-copy">Minor: <code>('Memory': '212590592')</code> instead of <code>(Memory: '212590592')</code>?</span>
<span class="comment-copy">That whole last part has some invalid syntax. Do you want nested dictionaries or tuples? Also, could you show what you've tried so far?</span>
<span class="comment-copy">That doesn't look like valid syntax</span>
<span class="comment-copy">@MadPhysicist Forgive me. I haven't Pythoned for a while.</span>
