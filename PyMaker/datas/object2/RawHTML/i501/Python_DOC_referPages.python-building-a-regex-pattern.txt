<div class="post-text" itemprop="text">
<p>I'm working with this code and I'm having a hard time finding the correct pattern for this. I can achieve this by altering doing <code>re.sub</code> but I want to match without using <code>re.sub</code> if possible.</p>
<pre><code>var = "77777 11111 12891 22222 i"
</code></pre>
<ol>
<li><p>From <code>var</code> I want to get only <code>11111</code>. Like my code:</p>
<pre><code>ppat = re.findall(r'(77777 (?:[\d]{1,6}))', var)
</code></pre></li>
<li><p>From <code>var</code> I want to get the <code>22222</code> before the <code>"i"</code> like this:</p>
<pre><code>opat = re.findall(r'((?:[\d]{1,6}) i)', var)
</code></pre></li>
<li><p>How do I match these 2 patterns? For example, I'm putting different output to variable which will be matched by the patterns?</p></li>
</ol>
<p>a. 1st possible output is:</p>
<pre><code>output = "ndescr:  XXXX"
</code></pre>
<p>b. What pattern should I use to match the <code>XXXX</code> and instance that output variable appears like this and I want to get only the <strong>No entries</strong>. What regex pattern should I use?</p>
<pre><code>output = "%  No entries found for the selected source(s)" 
</code></pre>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>re.findall("(?&lt;=77777)\\s+(?:\\d{1,6})",var)
re.findall("(?:\\d{1,6})\\s+(?=i)",aa)
</code></pre>
<p>you can read python re module for details.
<a href="https://docs.python.org/3/library/re.html#index-19" rel="nofollow noreferrer">enter link description here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>While it is not completely clear what you are trying to match, I am giving it a shot.</p>
<p>If you are just trying to get the second and last element, then this can be done without regular expressions.</p>
<pre><code>var = "77777 11111 12891 22222 I"

elements = var.split(" ") # Take the string, and split it into a list on spaces.

first_number = elements[1] # Get the second element ("11111").

second_number = elements[-2] # Get the second element from the end ("22222").
</code></pre>
<p>Alternatively, if you really want to use regular expressions or are looking for the number after <code>77777</code> a regular expression like this would work:</p>
<pre><code>import re
var = "77777 11111 12891 22222 I"

# Finds the 5 numbers that follows a "7" repeated 5 times (with a space in between).
first_number = re.search("(?&lt;=7{5}\s)\\d{5}", var).group()

# Find the 5 numbers that precedes an "I" (with a space in between).
second_number = re.search("\\d{5}(?=\sI)", var).group()
</code></pre>
</div>
<span class="comment-copy">Your use of capturing and non-capturing groups is rather bizarre. You always wrap the whole pattern in an unnecessary capture group for some reason, and you wrap the part you're interested in in a non-capturing group as if that will do something useful.</span>
<span class="comment-copy">Not enough information to derive a practical sample extraction pattern. Based solely on what is written in the original question, you could use <code>re.findall(r'(0{4,7}|2{4,7}|3{4,7}|4{4,7}|5{4,7}|6{4,7}|7{4,7}|8{4,7}|9{4,7})\s+(\d+)\s+\d+', var)[0][1]</code></span>
<span class="comment-copy">Your question still isn't clear. Are you trying to get the second number, of the number  following <code>77777</code>? And are you trying to get these both into one variable or two?</span>
<span class="comment-copy">you should explain what does the code do, in case someone else stumbles upon this question with a similar problem but not the exact same.</span>
<span class="comment-copy">Thanks @goudan,</span>
<span class="comment-copy">Thanks man for sharing. this really helps</span>
