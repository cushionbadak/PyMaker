<div class="post-text" itemprop="text">
<p>I want to create a JSON like that </p>
<pre><code>{
    "beacons": {
        "0c:f3:ee:16:6f:15": {
            "label": "label",
            "major": "7",
            "minor": 15349,
            "uuid": "699EBC80-E1F3-11E3-9A0F-0CF3EE3BC012"
        },
        "0c:f3:ee:16:6f:24": {
            "label": "label",
            "major": "7",
            "minor": 15364,
            "uuid": "699EBC80-E1F3-11E3-9A0F-0CF3EE3BC012"
        },
        "0c:f3:ee:16:6f:53": {
            "label": "label",
            "major": "7",
            "minor": 15411,
            "uuid": "699EBC80-E1F3-11E3-9A0F-0CF3EE3BC012"
        }
    }
}
</code></pre>
<p>I have already created beacon object like that </p>
<pre><code>beacon = {
    advertiser_mac: {
        'major': major,
        'minor': minor,
        'uuid': proximity_uuid
    }
}
</code></pre>
<p>But I do not know how to concat all of them in one object like the example above </p>
</div>
<div class="post-text" itemprop="text">
<p><code>beacon</code> is a dictionary. So, if you know how to generate the dictionary for each <code>advertiser_mac</code>, you can just do key assignment:</p>
<pre class="lang-py prettyprint-override"><code>beacon = {}

advertiser_mac = "0c:f3:ee:16:6f:53"
advertiser_mac_dict = {
            "label": "label",
            "major": "7",
            "minor": 15411,
            "uuid": "699EBC80-E1F3-11E3-9A0F-0CF3EE3BC012"
        }

beacon[advertiser_mac] = advertiser_mac_dict

beacon
{"0c:f3:ee:16:6f:53": {
            "label": "label",
            "major": "7",
            "minor": 15411,
            "uuid": "699EBC80-E1F3-11E3-9A0F-0CF3EE3BC012"
        }
}
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer">You can insert new keys into dictionaries</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3294889/iterating-over-dictionaries-using-for-loops">Iterating over dictionaries using 'for' loops</a></span>
<span class="comment-copy">Works like charm, thanks</span>
