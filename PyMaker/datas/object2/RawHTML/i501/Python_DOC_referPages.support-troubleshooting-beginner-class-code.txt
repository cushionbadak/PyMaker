<div class="post-text" itemprop="text">
<p>I am learning coding and believe I followed the test script but I'm getting an error on line 12</p>
<p>tried adjusting spacing but not working.</p>
<pre><code>class Song(object):

    def _init_(self, lyrics):
        self.lyrics = lyrics

    def sing_me_a_song(self):
        for line in self.lyrics:
            print(line)

happy_bday = Song(["Happy birthday to you",
                    "I don't want to get sued",
                    "So I'll stop right there"])

bulls_on_parade = Song(["They rally around tha family",
                        "With a pocket full of shells"])

happy_bday.sing_me_a_song()

bulls_on_parade.sing_me_a_song()
</code></pre>
<p>It should print out the lyrics to each song but instead I get:</p>
<pre><code>Traceback (most recent call last):
  File "ex40.py", line 12, in &lt;module&gt;
    "So I'll stop right there"])
TypeError: object() takes no parameters
</code></pre>
<p>But not sure what I am looking for on line 12</p>
</div>
<div class="post-text" itemprop="text">
<p>You need <em>two</em> underscores on each side of the <code>__init__</code>:</p>
<pre><code>def __init__(self, lyrics):
</code></pre>
<p>This is because <code>__init__</code> has a <a href="https://docs.python.org/3/reference/datamodel.html#special-method-names" rel="nofollow noreferrer">special meaning</a> in Python, and by convention all such names start and end with two underscores.</p>
<p>Also, in Python 3, there is no need to inherit from <code>object</code>, as <a href="https://portingguide.readthedocs.io/en/latest/classes.html" rel="nofollow noreferrer">all classes inherit from <code>object</code> automatically</a>:</p>
<pre><code>class Song:
</code></pre>
<p>There's no harm in keeping the explicit inheritance, though, and it's necessary if you want to support Python 2.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that parameter <code>object</code> doesn't have take any parameters, so there's no initialization for it. The parameter for your class should import another class and then initialize it in the <code>init</code> function. So just remove object as a parameter. Also add two underscores for <code>init</code> function so it looks like <code>__init__</code>.</p>
</div>
<span class="comment-copy"><code>__init__</code> needs <b>two</b> underscores on each side...</span>
<span class="comment-copy">thank you! did not see that clearly in the text!</span>
