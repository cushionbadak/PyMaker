<div class="post-text" itemprop="text">
<p>I have some troubles with reading .txt file with numbers, I tried to do it in many ways but still getting error:<br/>
if x % 3 == 0:
TypeError: not all arguments converted during string formatting</p>
<p>Here are some numbers:</p>
<pre><code>75158, 81917, 2318, 69039, 46112, 30323, 28184, 92597, 89159, 6579, 90155, 
56960, 88247, 72470, 36266, 32693, 31542, 65354, 73315, 1440, 82950, 84901, 
35835, 86530, 27137, 43235, 98977, 21224, 62530, 52675, 18297, 41055, 25597,
13878, 65430, 90050, 66844, 67605
</code></pre>
<p>Here is my code:</p>
<pre><code>from string import punctuation


file=open("test.txt","r+")
lines=file.read()
xx=''.join(ch for ch in lines if ch not in punctuation)

print(xx)
for x in xx:
    if x % 3 == 0:
    print(x)

file.close()
</code></pre>
<p>I want to get printed all numbers divisible by 3.</p>
<p>While trying to make int from this string there is other error: invalid literal for int() with base 10: '75158....'</p>
</div>
<div class="post-text" itemprop="text">
<p>You could read it and then <code>split</code> on comma <code>,</code> and then do a <code>list comprehension</code> :) </p>
<pre><code>&gt;&gt;&gt; x = "75158, 81917, 2318, 69039, 46112, 30323, 28184, 92597, 89159, 6579, 90155, 56960, 88247, 72470, 36266, 32693, 31542, 65354, 73315, 1440, 82950, 84901, 35835, 86530, 27137, 43235, 98977, 21224, 62530, 52675, 18297, 41055, 25597, 13878, 65430, 90050, 66844, 67605"
&gt;&gt;&gt;
&gt;&gt;&gt; x.strip().split(',') # being careful since reading from a file may have newlines :)
['75158', ' 81917', ' 2318', ' 69039', ' 46112', ' 30323', ' 28184', ' 92597', ' 89159', ' 6579', ' 90155', ' 56960', ' 88247', ' 72470', ' 36266', ' 32693', ' 31542', ' 65354', ' 73315', ' 1440', ' 82950', ' 84901', ' 35835', ' 86530', ' 27137', ' 43235', ' 98977', ' 21224', ' 62530', ' 52675', ' 18297', ' 41055', ' 25597', ' 13878', ' 65430', ' 90050', ' 66844', ' 67605']
&gt;&gt;&gt; [int(y) for y in x.split(',')]
[75158, 81917, 2318, 69039, 46112, 30323, 28184, 92597, 89159, 6579, 90155, 56960, 88247, 72470, 36266, 32693, 31542, 65354, 73315, 1440, 82950, 84901, 35835, 86530, 27137, 43235, 98977, 21224, 62530, 52675, 18297, 41055, 25597, 13878, 65430, 90050, 66844, 67605]
&gt;&gt;&gt; [int(y) for y in x.split(',') if y and int(y) % 3]
[75158, 81917, 2318, 46112, 30323, 28184, 92597, 89159, 90155, 56960, 88247, 72470, 36266, 32693, 65354, 73315, 84901, 86530, 27137, 43235, 98977, 21224, 62530, 52675, 25597, 90050, 66844]
</code></pre>
<p>or the right way :)</p>
<pre><code>with open('test.txt') as file_:
    nums = file_.read().strip()
    vals = []
    for val in nums.split(','):
      try:
         val = int(val.strip()) # being again careful for vals like `\n565'
      except ValueError as err:
         continue
      else:
        if val % 3:
          vals.append(val)
print(vals)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your reading the numbers as a string and trying use modulo operator. Also since your separating numbers by <strong>","</strong> , You have to split it before appending them in a list.
Here's the solution:</p>
<pre><code>numbers_file=open("numbers.txt","r")
my_numbers=numbers_file.read().split(',')
print (my_numbers)

for no in my_numbers:
    temp="%s"%(no)
    temp=int(temp)
    if (temp%3 == 0):
        print(no)
</code></pre>
</div>
<span class="comment-copy">tried if int(x) % 3 == 0 ?</span>
<span class="comment-copy"><code>x % 3</code> is modulo if <code>x</code> is a number, but <a href="https://docs.python.org/3/library/stdtypes.html#old-string-formatting" rel="nofollow noreferrer">C-style string formatting</a> if <code>x</code> is a string. You'll need to split the file content into separate numbers.</span>
<span class="comment-copy">You need to convert your input to <code>int()</code> before you use the modulo operator. Also, if you plan on on working with CSV files, the <code>csv</code> module is very useful and well documented</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/12754680/modulo-operator-in-python">Modulo operator in Python</a></span>
<span class="comment-copy">That worked, really thanks for help!</span>
