<div class="post-text" itemprop="text">
<p>I want to check if some words are in a text file,
but I need to make the search case-insensitive,
so, I need to know how the "in" inside the if condition works, and see its documentation for an option like that.</p>
<p>But I couldn't find it by searching google,
I tried to search using terms like "conditional statements python"
but still couldn't find it.</p>
<pre><code>#!/usr/bin/python3

search_words = ['Day 3','day 3']

with open('test-target.txt','r') as targetFile:
    for search_word in search_words:

        if search_word in targetFile.read():
            print('yes')
        else:
            print('no')

        # put the read cursor again at the begining of the file to prepare it fot next read ^o^
        targetFile.seek(0)
</code></pre>
<p>the file:</p>
<pre><code>Day 3 Lab ......etc
bla bla bla
</code></pre>
<p>the output:</p>
<pre><code>yes
no
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>casefold()</code> for case-insensitive search. You don't need to use <code>seek(0)</code> as a file pointer, by default, points to beginning of file when you open it. If you are bothered about exhausting the file pointer, read file contents to a variable, and use the variable in loop:</p>
<pre><code>with open('test-target.txt','r') as targetFile:
    file_contents = targetFile.read()
    for search_word in search_words:
        if search_word.casefold() in file_contents:
            print('yes')
        else:
            print('no')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is called the "contains" operator, a <a href="https://docs.python.org/3/reference/expressions.html#in" rel="nofollow noreferrer">membership test operator</a>. It doesn't really come with options; it simply checks if something is present in something else - but you can "normalize" these "somethings" e.g. by converting both to lower case (or upper case, or <a href="https://en.wikipedia.org/wiki/Unicode_equivalence" rel="nofollow noreferrer">Unicode normalized</a> case <a href="/questions/45745661/python-lower-vs-casefold-in-string-matching-and-converting-to-lowercase">folded</a> or whatever is suitable for your particular application) before checking for containment.</p>
<p>Seeking back in the file repeatedly is extremely inefficient, though. You want to read the file into memory once:</p>
<pre><code># Normalize once, before looping
search_words = set([x.lower() for x in ['Day 3','day 3']])

with open('test-target.txt','r') as targetFile:
    contents = targetFile.read()
for search_word in search_words:
    if search_word in contents.lower():
        print('yes')
    else:
        print('no')
</code></pre>
<p>... or perhaps examine a line at a time:</p>
<pre><code>with open('test-target.txt','r') as targetFile:
    for line in targetFile:
        for search_word in search_words:
            if search_word in line.lower():
                print('yes')
                break # maybe?
    else:
        print('no')
</code></pre>
<p>This will be more robust because you can handle arbitrarily large files, as long as every individual line will fit into memory.</p>
<p>Notice how a <code>for</code> loop can have an <code>else</code> branch, by the by.</p>
<p>As a usability improvement, the message you print should probably identify which search word was or wasn't found in each iteration.</p>
</div>
<span class="comment-copy">That's the same as <a href="https://docs.python.org/3/library/operator.html#operator.contains" rel="nofollow noreferrer"><code>operator.__contains__</code></a></span>
<span class="comment-copy">thanks, I will also use .lower() to make the file also lower case,,,,,,,,,      if search_word.casefold() in targetFile.read().lower()</span>
<span class="comment-copy">the file has "Day3" with an upper case "D", so when I used only .casefold() as you said, it gave me "no no" as it searched for "day" and "day" in a file that only had "Day",</span>
<span class="comment-copy">@Omar, Yes I missed that. This should work fine.</span>
<span class="comment-copy">Mixing <code>casefold()</code> and <code>lower()</code> is a bug, isn't it? It will do the wrong thing in the few cases where it actually matters whether you use one or the other.</span>
<span class="comment-copy">@Austin, yes I am sure, anyway, I think a final easy way for this is to use .lower () on both of them: if search_word.lower()in targetFile.read().lower()</span>
