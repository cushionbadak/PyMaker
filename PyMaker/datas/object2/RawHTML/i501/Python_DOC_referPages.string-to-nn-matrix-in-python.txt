<div class="post-text" itemprop="text">
<p>I am an undergraduate student who loves programming. I encountered a problem today and I don't know how to solve this problem. 
I looked for "Python - string to matrix representation" (<a href="https://stackoverflow.com/questions/31877901/python-string-to-matrix-representation">Python - string to matrix representation</a>) for help, but I am still confused about this problem.</p>
<p>The problem is in the following:</p>
<p>Given a string of whitespace separated numbers, create an nxn matrix (a 2d list where with the same number of columns as rows)and return it. The string will contain a perfect square number of integers. The int() and split() functions may be useful. </p>
<p>Example: </p>
<p>Input: '1 2 3 4 5 6 7 8 9' </p>
<p>Output: [[1,2,3],[4,5,6],[7,8,9]] </p>
<p>Example 2: </p>
<p>Input: '1' </p>
<p>Output: [[1]]</p>
<p>My answer:</p>
<pre><code>import numpy as np
def string_to_matrix(str_in):
    str_in_split = str_in.split()
    answer = []
    for element in str_in_split:
        newarray = []
    for number in element.split():
        newarray.append(int(number))
    answer.append(newarray)
    print (answer)
</code></pre>
<p>The test results are in the following:</p>
<pre><code>Traceback (most recent call last):
  File "/grade/run/test.py", line 20, in test_whitespace
    self.assertEqual(string_to_matrix('1      2 3   4'), [[1,2],[3,4]])
AssertionError: None != [[1, 2], [3, 4]]

Stdout:
[[4]]
</code></pre>
<p>as well as</p>
<pre><code>Traceback (most recent call last):
  File "/grade/run/test.py", line 15, in test_small
    self.assertEqual(string_to_matrix('1 2 3 4'), [[1,2],[3,4]])
AssertionError: None != [[1, 2], [3, 4]]

Stdout:
[[4]]
</code></pre>
<p>as well as</p>
<pre><code>Traceback (most recent call last):
  File "/grade/run/test.py", line 10, in test_one
    self.assertEqual(string_to_matrix('1'), [[1]])
AssertionError: None != [[1]]

Stdout:
[[1]]
</code></pre>
<p>as well as</p>
<pre><code>Traceback (most recent call last):
  File "/grade/run/test.py", line 25, in test_larger
    self.assertEqual(string_to_matrix('4 3 2 1 8 7 6 5 12 11 10 9 16 15 14 13'), [[4,3,2,1], [8,7,6,5], [12,11,10,9], [16,15,14,13]])
AssertionError: None != [[4, 3, 2, 1], [8, 7, 6, 5], [12, 11, 10, 9], [16, 15, 14, 13]]

Stdout:
[[13]]
</code></pre>
<p>I am still confused how to solve this problem. Thank you very much for your help! </p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you don't want <code>numpy</code> and want to use a list of lists:</p>
<pre><code>def string_to_matrix(str_in):
    nums = str_in.split()
    n = int(len(nums) ** 0.5)
    return list(map(list, zip(*[map(int, nums)] * n)))
</code></pre>
<p><code>nums = str_in.split()</code> splits by any whitespace, <code>n</code> is the side length of the result, <code>map(int, nums)</code> converts the numbers to integers (from strings), <code>zip(*[map(int, nums)] * n)</code> groups the numbers in groups of <code>n</code>, <code>list(map(list, zip(*[map(int, nums)] * n)))</code> converts the tuples produced by <code>zip</code> into lists.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you want to make this dynamic.</p>
<pre><code>str_in = '1 2 3 4 5 6 7 8 9'
a = str_in.split(" ")
r_shape = int(math.sqrt(len(a)))
np.array([int(x) for x in a]).reshape(r_shape, r_shape)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given that you will <strong>always</strong> get perfect square number of ints:</p>
<pre><code>import numpy as np

input_strings = '1 2 3 4 5 6 7 8 9'
arr = np.array(input_strings.split(), dtype=int)
n = int(len(arr) ** 0.5)
arr.reshape(n, n)
array([[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]])
</code></pre>
<p>Note: in your case, <code>str.split</code> is better off without explicit <code>sep</code> in order to work fine with multiple whitespaces in between the digits.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import numpy as np
def string_to_matrix(str_in):
   str_in_split = str_in.split()
   numbers = list(map(int, str_in_split))
   size = r_shape = int(np.sqrt(len(numbers)))
   return np.array(numbers).reshape(r_shape, r_shape)
</code></pre>
<p>This is why you always got: <code>AssertionError: None != ...</code></p>
<p><code>assertEqual(A, string_to_matrix("..."))</code> verifies if <code>A</code> is equals to the value returned by string_to_matrix. In your code you don't return anything so it is <code>None</code></p>
<p>The other issue is how you splitted the string, the easier options is to split everything and convert to number, and then reshape to sqrt(number of elements). This assumes that input length can be splited to form a nxn matrix</p>
</div>
<div class="post-text" itemprop="text">
<p>Use split, create the 1D numpy array, then use <code>reshape</code>:</p>
<pre><code>&gt;&gt;&gt; s = '1 2 3 4 5 6 7 8 9'
&gt;&gt;&gt; np.array([s.split(), dtype=int).reshape(3,3)
array([[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]])
</code></pre>
<p>If you don't know the size of the array, but you know it's square (same width / height), then you can use <code>math.sqrt</code> to get the inputs for <code>reshape</code>:</p>
<pre><code>&gt;&gt;&gt; import math
&gt;&gt;&gt; s = '1 2 3 4 5 6 7 8 9'
&gt;&gt;&gt; arr = np.array(s.split(), dtype=int)
&gt;&gt;&gt; size = int(math.sqrt(len(arr)))
&gt;&gt;&gt; arr.reshape(size, size)
array([[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import math
string = "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16"
stringItems = string.split(" ")
numberOfItems = len(stringItems)
if math.sqrt(numberOfItems) - int(math.sqrt(numberOfItems)) == 0:
    width = int(math.sqrt(numberOfItems))
    array = []
    finalArray = []
    for i in range (0, width):
        for j in range (0, width):
            array.insert(j, stringItems[0])
            stringItems.pop(0)
        finalArray.insert(i, array)
        array = []
    print finalArray
else:
    print "I require a string with length equal to a square number please"
</code></pre>
</div>
<span class="comment-copy">assertEqual is not going to compare your <code>print</code> result, it uses the value returned by string_to_matrix. string_to_matrix currently returns nothing so the value is None. Change print for <code>return</code> and you will start getting better resutls</span>
<span class="comment-copy">Firstly, the function you created only <code>print</code> out the answer, rather than <code>return</code>ing it, thus the assertion will always fail as <code>None</code> is what functions return by default.  Replace <code>print (answer)</code> with simply <code>return answer</code>. Secondly, it doesn't seem like you taken into account of "The string will contain a perfect square number of integers".</span>
<span class="comment-copy">Thanks a lot! Your explanation of "zip(*[map(int, nums)] * n) groups the numbers in groups of n, list(map(list, zip(*[map(int, nums)] * n))) converts the tuples produced by zip into lists." is very helpful for me to understand why it could be written like this.</span>
<span class="comment-copy">This use of <code>zip</code> is shown in the <code>grouper</code> recipe at <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">docs.python.org/3/library/itertools.html#itertools-recipes</a>.  Unfortunately it doesn't explain how it works.  It takes advantage of a couple of Python features that often trip up users.</span>
<span class="comment-copy">You don't need the <code>int</code> map or comprehension.  Just ask <code>np.array</code> to produce an integer array: <code>np.array(s.split(), dtype=int)</code></span>
<span class="comment-copy">Ah neat! Thanks for the tip!</span>
<span class="comment-copy">Answers <a href="https://stackoverflow.com/help/how-to-answer">should consist of</a> more than a mere code-dump. If you think the question is poorly asked, you can flag it or post a comment.</span>
