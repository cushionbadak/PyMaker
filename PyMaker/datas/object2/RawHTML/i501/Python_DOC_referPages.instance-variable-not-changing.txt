<div class="post-text" itemprop="text">
<p>The instance variable 'x' is not changing as expected after assignment.</p>
<p>This is my code:</p>
<pre><code>class Foo:
def __init__(self, x=0):
    self.x = x
    if self.x&gt;=100:
        self.x = int(str(self.x)[-2:])
    elif self.x&lt;0:
        self.x = -1

p = Foo()
print(p.x)
p.x = 125
print(p.x)
p.x = -945
print(p.x)
</code></pre>
<p>Expected:</p>
<pre><code>0
25
-1
</code></pre>
<p>However I got this:</p>
<pre><code>0
125
-945
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you get your desired results this way:</p>
<pre><code>p = Foo()
print(p.x)
p = Foo(125)
print(p.x)
p = Foo(-945)
print(p.x)
</code></pre>
<p><code>__init__</code> is only called when instatiating the class; e.g. <code>Foo(125)</code>.</p>
<hr/>
<p>if you want this code to be called any time you modify <code>self.x</code>, you should use a <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer"><code>property</code></a>:</p>
<pre><code>class Foo:

    def __init__(self, x=0):
        self.x = x

    @property
    def x(self):
        return self._x

    @x.setter
    def x(self, value):
        self._x = value
        if self._x &gt;= 100:
            # self._x = int(str(self._x)[-2:])
            self._x %= 100
        elif self._x &lt; 0:
            self._x = -1
</code></pre>
<p>this way</p>
<pre><code>p = Foo()
print(p.x)
p.x = 125
print(p.x)
p.x = -945
print(p.x)
</code></pre>
<p>works as you expect it.</p>
<p>also note the improved way on how to eliminate the leading digits: <code>self._x %= 100</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>__init__</code> method is called when you instantiate Foo, as stated by @khelwood already, you could add a method like:</p>
<pre><code>class Foo:
    def __init__(self, x=0):
        self.x = x

    def numVal(self, x=0):
        if self.x&gt;=100:
            self.x = int(str(self.x)[-2:])
        elif self.x&lt;0:
            self.x = -1
        return self.x

p = Foo()
print(p.x)
p.x = 125
print(p.numVal(p.x))
p.x = -945
print(p.numVal(p.x))
</code></pre>
<p>OUTPUT:</p>
<pre><code>0
25
-1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>class Foo:
    def __init__(self, x):
        self.x = x
            if self.x&gt;=100:
                self.x = int(str(self.x)[-2:])
            elif self.x&lt;0:
                self.x = -1

x=0
p = Foo(x)
print(p.x)

x=125
p = Foo(x)
print(p.x)

x=-945
p = Foo(x)
print(p.x)
</code></pre>
</div>
<span class="comment-copy">The <code>__init__</code> method is called when you instantiate <code>Foo</code>. It is not called every time you update the <code>x</code> attributes.</span>
<span class="comment-copy">If you need a special setter that modifies the attribute assignment, use a <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer">property</a>.</span>
<span class="comment-copy">Thanks a lot. that worked.</span>
<span class="comment-copy">Perhaps add some context to this code so that others who find this can understand whats going on. StackOverflows guidelines say "Brevity is acceptable, but fuller explanations are better." <a href="https://stackoverflow.com/help/how-to-answer">stackoverflow.com/help/how-to-answer</a></span>
