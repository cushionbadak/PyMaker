<div class="post-text" itemprop="text">
<p>I have a string and 2 arrays like below:</p>
<pre><code>st="a1b2c3d"
arr1 = ['1','2','3']
arr2 = ['X','Y','Z']
</code></pre>
<p>I want to replace all the value of '1', '2', '3' to 'X', 'Y', 'Z'. The final string will look like:</p>
<pre><code>'aXbYcZd'
</code></pre>
<p>So I wrote this for loop:</p>
<pre><code>for i in range(0, len(arr1)):
    st.replace(str(arr1[i]),str(arr2[i]))
</code></pre>
<p>The result is:</p>
<pre><code>'aXb2c3d'
'a1bYc3d'
'a1b2cZd'
</code></pre>
<p>How to correctly do what I want above?</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3.3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a> to iterate through two lists simultaneously to replace values:</p>
<pre><code>st = "a1b2c3d"
arr1 = ['1','2','3']
arr2 = ['X','Y','Z']

for x, y in zip(arr1, arr2):
    st = st.replace(x, y)

print(st)
# aXbYcZd
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>str.replace()</code></a> does not replace a string in-place. You need to assign returned value back to a variable.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're replacing characters, instead of the inefficient replace loop use <code>str.translate</code> with <code>str.maketrans</code>:</p>
<pre><code>&gt;&gt;&gt; table = str.maketrans('123', 'XYZ')
&gt;&gt;&gt; result = 'a1b2c3d'.translate(table)
&gt;&gt;&gt; result
'aXbYcZd'
</code></pre>
<p><code>maketrans</code> requires 2 strings as arguments. If you really have a list, you can use <code>''.join(l)</code> to make it into a suitable string. You need to make the table only once.</p>
<p>The efficiency is but one point. <code>str.translate</code> is the way to do this correctly in cases where you will map <code>a</code> =&gt; <code>b</code> and <code>b</code> =&gt; something else. If you want to replace <em>strings</em> then you might need to use <code>re.sub</code> instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>Calling replace over and over means you have to iterate through the entire string for each replacement, which is O(m * n).  Instead:</p>
<pre><code>rep = dict(zip(arr1, arr2)) # make mapping, O(m)
result = ''.join(rep.get(ch, ch) for ch in st)
</code></pre>
<p>The first line is O(m), where m is the length of arr1 and arr2.</p>
<p>The second line is O(n), where n is the length of st.</p>
<p>In total this is O(m + n) instead of O(m * n), which is a significant win if either m or n is large.</p>
</div>
<span class="comment-copy">Thank you. I choose yours as the solution since it fit my case. I have array of more than 100 string element as html img tag that I want to replace to just the name of images itself.</span>
<span class="comment-copy">Nice efficiency and use of lesser-known builtins.</span>
<span class="comment-copy">This solution is beautiful and efficiency, however it only works with character right? My arrays have are more than 100 element as html string so it didnt work. Thank you!</span>
<span class="comment-copy">@hafiddle that's correct.  Next time please provide a slightly more realistic set of example inputs.  All the examples in your question used single characters, so that's what I wrote my code to handle.</span>
