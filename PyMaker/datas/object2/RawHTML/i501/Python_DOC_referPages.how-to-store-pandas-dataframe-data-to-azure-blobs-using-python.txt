<div class="post-text" itemprop="text">
<p>I want to store processed data in pandas dataframe to azure blobs in parquet file format. But before uploading to blobs, I have to store it as parquet file in local disk and then upload. I want to write pyarrow.table into pyarrow.parquet.NativeFile and upload it directly. Can anyone help me with this. Below code is working fine:</p>
<pre><code>import pyarrow as pa
import pyarrow.parquet as pq

battery_pq = pd.read_csv('test.csv')
</code></pre>

########  SOme Data Processing

<pre><code>battery_pq = pa.Table.from_pandas(battery_pq)
pq.write_table(battery_pq,'example.parquet')
block_blob_service.create_blob_from_path(container_name,'example.parquet','example.parquet')
</code></pre>
<p>Need to create the file in memory(I/O file type object) and then upload it to blob.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can either use <a href="https://docs.python.org/3/library/io.html#binary-i-o" rel="nofollow noreferrer">io.BytesIO</a> for this or alternatively Apache Arrow also provides its native implementation <code>BufferOutputStream</code>. The benefit of this is that this writes to the stream without the overhead of going through Python. Thus less copies are made and the GIL is released.</p>
<pre><code>import pyarrow as pa
import pyarrow.parquet as pq

df = some pandas.DataFrame
table = pa.Table.from_pandas(df)
buf = pa.BufferOutputStream()
pq.write_table(table, buf)
block_blob_service.create_blob_from_bytes(
    container,
    "example.parquet",
    buf.getvalue().to_pybytes()
)
</code></pre>
</div>
<span class="comment-copy">To create an in-memory file-object you can use io.BytesIO  <a href="https://docs.python.org/3/library/io.html#binary-i-o" rel="nofollow noreferrer">docs.python.org/3/library/io.html#binary-i-o</a></span>
<span class="comment-copy">Function [<code>block_blob_service.create_blob_from_stream</code> ](<a href="https://azure-storage.readthedocs.io/ref/azure.storage.blob.blockblobservice.html#azure.storage.blob.blockblobservice.BlockBlobService.create_blob_from_stream" rel="nofollow noreferrer">azure-storage.readthedocs.io/ref/â€¦</a>) also works for <code>buf</code> without getting bytes.</span>
