<div class="post-text" itemprop="text">
<p>I am trying to implement <code>Bag of Words</code> model, unable to get it right in below code</p>
<pre><code>words_to_index={'hi': 0, 'you': 1, 'me': 2, 'are': 3}
ex=["hi how are you"]
Z=ex.split(" ")
ans=[[1,1,0,1]]
res=np.zeros(40)
for i in range(0,len(ex)+1):
    for key,val in words_to_index.items():
        if Z[i]==key:
            res[words_to_index[key]]=res[words_to_index[key]]+1
print(res)
</code></pre>
<p>Getting this error - <code>AttributeError: 'list' object has no attribute 'split'</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Your code contains a number of bugs and inefficiencies.</p>
<p>Before you proceed, perhaps spend a moment to figure out how to get your program to tell when an assumption of yours might not be correct.  A good place to start is to add this after the assignment of <code>ex</code>:</p>
<pre><code>print('ex is a {0}: {1!r}'.format(type(ex), ex))
</code></pre>
<p>which prints out the type of the variable, and its value.  With that in place, you will easily spot the problem</p>
<pre><code>ex is a &lt;class 'list'&gt;: ['hi how are you']
</code></pre>
<p>A slightly more advanced technique is to use <code>logging</code>, which allows you to easily disable the diagnostic messages when your code is working, and later enable them again if you want to make changes to your code and see that it still does what it's supposed to do.</p>
<pre><code>import logging

logging.basicConfig(level=logging.DEBUG)

# ...
logging.debug('ex is a {0}: {1!r}'.format(type(ex), ex)))
</code></pre>
<p>When you are done debugging, simply change the <code>logging.basicConfig()</code> to say <code>level=logging.WARN</code>, which will disable the display of all <code>logging.debug()</code> and <code>logging.info()</code> output.  See the <a href="https://docs.python.org/3/library/logging.html#levels" rel="nofollow noreferrer">documentation</a> for details.</p>
<p>Another useful debugging aid is <code>assert</code>:</p>
<pre><code>assert isinstance(str, ex), 'ex is not a str: {0) ({1!r})'.format(type(ex), ex))
</code></pre>
<p>See <a href="https://wiki.python.org/moin/UsingAssertionsEffectively" rel="nofollow noreferrer">the Python Wiki</a> for some guidance.  Notice that <code>assert</code> statements can be disabled e.g. when you enable optimization of your Python code, so you should perhaps add explicit checks instead, or as well, in your code.</p>
<pre><code>if not isinstance(str, ex):
    raise TypeError('ex must be a str, not {0} ({1!r})'.format(type(ex), ex)))
</code></pre>
<p>Now, with that out of the way, here is a refactored version of your script with what I <em>think</em> you were trying to do.</p>
<pre><code>#!/usr/bin/env python

import numpy as np
import logging

logging.basicConfig(level=logging.DEBUG, format='%(module)s:%(asctime)s:%(message)s')

words_to_index={'hi': 0, 'you': 1, 'me': 2, 'are': 3}
ex = "hi how are you"                   # single string, not list of strings
#print('ex is {0} (type {1})'.format(ex, type(ex)))
logging.debug('ex is {0} (type {1})'.format(ex, type(ex)))
assert isinstance(ex, str), 'ex should be a string (is {0} {1!r})'.format(type(ex), ex)
Z=ex.split(" ")                         # maybe choose a more descriptive variable name
#ans=[[1,1,0,1]]                        # never used, commented out
res=np.zeros(40)
#for i in range(0,len(ex)+1):           # Looping over the wrong thing
for word in Z:
    logging.debug('word is {0}'.format(word))
    if word in words_to_index:          # words_to_index is a hash; no need to loop
        logging.debug('{0} found in {1}'.format(word, Z))
        res[words_to_index[word]] += 1  # notice increment syntax
        logging.debug('res[{0}] = {1}'.format(words_to_index[word], res[words_to_index[word]]))
print(res)
</code></pre>
<p>Of course, this is not using NLTK at all; the NLTK library contains a somewhat more advanced set of functions which already do some of this for you, starting with proper NLP tokenization etc, but does not actually contain a TF component. Perhaps start with <a href="https://stackoverflow.com/questions/29570207/does-nltk-have-tf-idf-implemented">Does NLTK have TF-IDF implemented?</a> which has pointers to some existing implementations.</p>
</div>
<span class="comment-copy">As the error message says, <code>ex</code> is a list. Remove the square brackets if you meant for it to be a string.</span>
