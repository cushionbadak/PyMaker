<div class="post-text" itemprop="text">
<p>I am most certainly a newbie when it comes to python. About 1 week into learning it and realize there are a lot of tools here I should be using. One of them is numpy.darray. However i am having difficuly applying it to my problem. </p>
<p>I have the following array data structure: string -&gt; value. That is I want something like </p>
<p><strong>a["string1"] = 4.5</strong>. </p>
<p>I then need to associate this array to an object where <strong>"attr" -&gt; a["string1"]</strong>, so in the end I have the following</p>
<p><strong>b["attr"] -&gt; (a["string1"] -&gt; 4.5)</strong></p>
<p>This way if I were to make a call like the following</p>
<p><strong>b["attr"]["string1"]</strong> it will return 4.5</p>
<p>In other words a 2D numpy array where I can use strings instead of integers to access my array. Or perhaps there is another better way to do this in python? </p>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for dictionaries. Please refer to <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">Data Structures: 5.5. Dictionaries</a>. Dictionaries allow you to not only store numeric values but also other data structures as lists, arrays, data frames or <strong>dictionaries itself</strong>.</p>
<p>Your example:</p>
<pre><code>a = {"string1": 4.5}

a["string1"]
&gt; 4.5

b = {"att": a}

b["attr"]["string1"]
&gt; 4.5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As <a href="https://stackoverflow.com/a/54710321">the other answer</a> states, you most likely want a dictionary. However, just for your information, there exist NumPy-like structures that can be indexed by strings, namely those offered by <a href="https://pandas.pydata.org/" rel="nofollow noreferrer">Pandas</a>, <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.html" rel="nofollow noreferrer"><code>Series</code></a> and <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html" rel="nofollow noreferrer"><code>DataFrame</code></a> (for more than two dimensions there is <a href="https://xarray.pydata.org/" rel="nofollow noreferrer">xarray</a>). For example, using a <code>Series</code> object:</p>
<pre><code>import pandas as pd

s = pd.Series([1, 2, 3], index=['abc', 'def', 'ghi'])
print(s)
# abc    1
# def    2
# ghi    3
# dtype: int64
print(s['abc'])
# 1
print(s[['def', 'ghi']])
# def    2
# ghi    3
# dtype: int64
</code></pre>
</div>
<span class="comment-copy">You can use <code>dict</code>.</span>
<span class="comment-copy">Best way is to use a <code>dict</code>, where data is accessed by keys and not indices, which are usually strings.</span>
<span class="comment-copy">Of course.... wonderful!</span>
