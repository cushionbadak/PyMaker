<div class="post-text" itemprop="text">
<p><code>list = [40000 elements]</code></p>
<p>After processing first 30 elements need to pause for 5 minutes and then start processing again the next 30 element from the list. </p>
<pre><code>a = list(set(proflinks))
a = sorted(a) # list a has 40000 elements
a=a[0:30]
#print(a)
for b in a:
    inedex = a.index(b)
    print('profile____' + str(inedex) + '____is processing')
    profileMeta(driver,b)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> and <a href="https://docs.python.org/3/reference/expressions.html#binary-arithmetic-operations" rel="nofollow noreferrer"><code>%</code></a> to decide when to sleep like:</p>
<pre><code>import time 
a = sorted(set(proflinks)) # list a has 40000 elements
for idx, b in enumerate(a):
    print('profile____{}____is processing'.format(idx)
    profileMeta(driver, b)
    if not ((idx + 1) % 30):
        time.sleep(600)
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/510348/how-can-i-make-a-time-delay-in-python">How can I make a time delay in Python?</a></span>
<span class="comment-copy">@ScottMcC, this dupe suggestion is pretty weak...</span>
<span class="comment-copy">profileMeta will process first 30 elements. after that it will rest for 5 minutes and continue processing another 30 elements.  this process will be continued until the list is empty.</span>
<span class="comment-copy">You can set the <code>delay</code> parameter in the <code>custom_setting</code> before parsing the url.</span>
<span class="comment-copy">@StephenRauch I disagree. The solution to this problem isn't any more complicated than inserting a <code>time.sleep()</code> command at the correct point.</span>
