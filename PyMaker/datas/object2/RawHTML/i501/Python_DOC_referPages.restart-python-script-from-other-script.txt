<div class="post-text" itemprop="text">
<p>I already searched several solutions on this site, but unfortunately the provided ones didn't work out for me.</p>
<p>Let's say I have a python script called "DataGen.py" that stops running (green arrow is clickable) because some background program is crashing. Unfortunately, there is no exception being thrown, which is why I need a workaround:</p>
<p>What I'm searching for is another python script called "RestartScript.py" that restarts "DataGen.py" 60 seconds after it has stopped running. </p>
<p>I tried something like:</p>
<pre><code>from os import system
from time import sleep

while True:
    system('DataGen.py')
    sleep(300)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>system</code> function executes what command you use as input.. See <a href="https://docs.python.org/3/library/os.html#os.system" rel="nofollow noreferrer">link</a>. As such, this would be how you would run it to achieve the results you desire:</p>
<p><code>system('python DataGen.py')</code></p>
<p>Also, whatever value used as input in the <code>sleep</code> function is supposed to be seconds..
Using this logic, your code reruns every 300 seconds.</p>
<p>See below for full solution:</p>
<pre><code>from os import system
from time import sleep

while True:
    system('python DataGen.py')
    sleep(60)
</code></pre>
</div>
<span class="comment-copy">Have you tried <code>os.system("python DataGen.py")</code>?</span>
<span class="comment-copy">This might help you to identify whether your script is currently running or not: <a href="https://stackoverflow.com/questions/788411/check-to-see-if-python-script-is-running" title="check to see if python script is running">stackoverflow.com/questions/788411/â€¦</a></span>
<span class="comment-copy">@AlexYu this seems to work. What does the sleep command do in this context?</span>
<span class="comment-copy">It <a href="https://docs.python.org/3.7/library/time.html#time.sleep" rel="nofollow noreferrer">suspend execution of the calling thread for the given number of seconds</a></span>
<span class="comment-copy">It's a good start, but if you want to monitor <code>DataGen.py</code> from a master process, <code>subprocess.call</code> or the likes would probably be a better choice. Besides, there is no <code>restart if crashed</code> logic, which I would find much more interesting. I think a satisfying solution would be to pass <code>DataGen.py</code>'s pid to a <code>monitor</code> function, that would regularly check if the process is still running, and restart it if it crashed. Maybe <code>os.system('ps')</code> then a lookup for this pid would be a good starter.</span>
<span class="comment-copy">@Rightleg This would also be better for my purposes. The link "DocDriven" posted under the question is what you're refering to I think.</span>
