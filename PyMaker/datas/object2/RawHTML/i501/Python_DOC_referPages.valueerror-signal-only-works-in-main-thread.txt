<div class="post-text" itemprop="text">
<p>When i run this code i get this error:</p>
<blockquote>
<p>ValueError: signal only works in main thread</p>
</blockquote>
<p>I'm using ActiveMQ.</p>
<p>RealTor is the name where i have my Spider(selogerSpider) this one help me for the scraping.</p>
<pre><code> import stomp
 from RealTor import selogerSpider
 from scrapy.crawler import CrawlerProcess
 from scrapy.settings import Settings


class MyListener(stomp.ConnectionListener):
def on_error(self, headers, message):
    print('received an error "%s"' % message)
def on_message(self, headers, message):
    print('received a message "%s"' % message)

    settings = Settings()
    settings.set("USER_AGENT",
                 "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_4) 
    AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.134 Safari/537.36")
    settings.set("LOG_ENABLED", False)
    crawler = CrawlerProcess(settings)
    crawler.crawl(selogerSpider)
    selogerSpider.signals.engine_started()
    print("STARTING scraping")
    crawler.start()
    print("Scraping STOPPED")
try:
conn = stomp.Connection()
conn.set_listener('', MyListener())
conn.start()
""" conn = stomp.Connection([('0.0.0.0', 61613)])"""
conn.connect('admin', 'password', wait=True)
conn.subscribe(destination='/queue/test', id=1, ack='auto')
print('subscripe')
"""conn.send(body=' '.join(sys.argv[1:]), destination='/queue/test')"""
input("coucou")
"""conn.disconnect()"""
print('end')

except IOError as e:
  print("error message")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This problem doesn't have anything to do with ActiveMQ. You're misusing signals. As the <a href="https://docs.python.org/3/library/signal.html" rel="nofollow noreferrer">Python documentation</a> states:</p>
<blockquote>
<p>Python signal handlers are always executed in the main Python thread, even if the signal was received in another thread. This means that signals canâ€™t be used as a means of inter-thread communication. You can use the synchronization primitives from the threading module instead.</p>
<p>Besides, only the main thread is allowed to set a new signal handler.</p>
</blockquote>
<p>I believe the <code>on_message</code> method is executed in its own thread since the message is received asynchronously.</p>
<p>In short, <em>don't</em> use signals from threads. Use the synchronization primitives from the <a href="https://docs.python.org/3/library/threading.html#module-threading" rel="nofollow noreferrer">threading module</a> instead. If you can't avoid using signals then receive the STOMP message synchronously on the main thread instead of using a <code>ConnectionListener</code>.</p>
</div>
<span class="comment-copy">so what's the solution for this error?</span>
<span class="comment-copy">I updated my answer to address your question.</span>
<span class="comment-copy">any help with code because i can't find a solution for this</span>
<span class="comment-copy">What have you tried? Why didn't what you tried work? Please clarify.</span>
<span class="comment-copy">it's okay i get it thank you</span>
