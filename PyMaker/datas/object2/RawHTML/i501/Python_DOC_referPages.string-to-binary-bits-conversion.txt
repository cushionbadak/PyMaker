<div class="post-text" itemprop="text">
<p>How do I convert a string, for example,</p>
<blockquote>
<p>"To Infinity and Beyond!"</p>
</blockquote>
<p>to a stream of binary digits? I want to implement DES encryption in Python. But this kind of encryption requires a plaintext size of 64 bits. The length of bits notwithstanding, how to do I actually convert it into a stream of bits for encryption?</p>
<p>Also, the conversion to bits should be such that post encryption, decryption can also be done effectively ( by bit conversion of even the ' ' in the string).</p>
<p>I would like to know how can this be accomplished in general.</p>
<blockquote>
<p>'{0:b}'.format("") won't work.</p>
</blockquote>
<p>So how do I do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is the most pythonic way I can think to do it:</p>
<pre><code>&gt;&gt;&gt; string = "hello"
&gt;&gt;&gt; [bin(i) for i in bytearray(string, 'utf8')]
['0b1101000', '0b1100101', '0b1101100', '0b1101100', '0b1101111']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>python 2.7</p>
<p>You could do this like that:</p>
<pre><code>s = "To Infinity and Beyond!"  # s for string
s = ' '.join(format(ord(x.decode('utf-8')), 'b') for x in s)
print str(s)
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#func-bytes" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#func-bytes</a>,  <a href="https://docs.python.org/3/library/functions.html#func-bytearray" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#func-bytearray</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/7585435/best-way-to-convert-string-to-bytes-in-python-3">Best way to convert string to bytes in Python 3?</a></span>
<span class="comment-copy"><code>..stream of binary digits</code>  what do you mean by stream?</span>
<span class="comment-copy">Or ... <a href="https://stackoverflow.com/q/18815820/2823755">Convert string to binary in python</a></span>
<span class="comment-copy">"Binary" is more of a concept, whereas computer languages deal with types. In python 3 most interfaces that process arbitrary "binary" values accept <code>bytes</code> and similar types.</span>
<span class="comment-copy"><code>ord</code> doesn't respect UTF-8, so for a large number of possible strings this code will fail.  Also be aware that while encryption algorithms (like DES) operate on binary, they don't operate on literal <i>strings</i> of binary data (e.g. "0110101010101").</span>
<span class="comment-copy">now it will work with utf-8 and if you want binary data and not binary string you could use split and convert the string to binary</span>
