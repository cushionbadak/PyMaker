<div class="post-text" itemprop="text">
<p>I have the following dataframe:</p>
<pre><code>       YEARMODA  TEMP   MAX   MIN
0      19730701  74.5  90.0  53.6
1      19730702  74.5  88.9  57.9
2      19730703  81.7  95.0  63.0
3      19730704  85.0  95.0  65.8
4      19730705  85.0  97.9  63.9
</code></pre>
<p>How do I get the date to datetimelike. I want to get the average and standard deviation of the temp by year and by month. I know how to use group, it's just working with YEARMODA that is the problem</p>
</div>
<div class="post-text" itemprop="text">
<p>Here are two ways to solve this, take your pick</p>
<pre><code>df['YEARMODA'] = pd.to_datetime(df['YEARMODA'], format='%Y%m%d')

    YEARMODA  TEMP   MAX   MIN
0 1973-07-01  74.5  90.0  53.6
1 1973-07-02  74.5  88.9  57.9
2 1973-07-03  81.7  95.0  63.0
3 1973-07-04  85.0  95.0  65.8
4 1973-07-05  85.0  97.9  63.9

--------------------------------------------------------------------

from functools import partial

p = partial(pd.to_datetime, format='%Y%m%d')

df['YEARMODA'] = df['YEARMODA'].apply(p)

    YEARMODA  TEMP   MAX   MIN
0 1973-07-01  74.5  90.0  53.6
1 1973-07-02  74.5  88.9  57.9
2 1973-07-03  81.7  95.0  63.0
3 1973-07-04  85.0  95.0  65.8
4 1973-07-05  85.0  97.9  63.9
</code></pre>
<p>Edit: The issue you are having is you are not providing the correct <code>format</code> to your <code>pd.to_datetime</code> expression hence it is failing.</p>
<p>Edit 2: To get the <code>std</code> by month according to how you want to do it you would do it as such.</p>
<pre><code>df.groupby(df.YEARMODA.apply(p).dt.strftime('%B')).TEMP.std()


YEARMODA
July    5.321936
Name: TEMP, dtype: float64


df.assign(temp=pd.to_datetime(df['YEARMODA'], format='%Y%m%d') \
  .dt \
  .strftime('%B')) \
  .groupby('temp') \
  .TEMP \
  .std()

temp
July    5.321936
Name: TEMP, dtype: float64
</code></pre>
</div>
<span class="comment-copy">sorry what exactly is the problem? you want to convert <code>YEARMODA</code> in to a datetime?</span>
<span class="comment-copy">yes. I want to convert YEARMODA in to a datetime</span>
<span class="comment-copy">Have you looked at: <a href="https://stackoverflow.com/questions/26763344/convert-pandas-column-to-datetime" title="convert pandas column to datetime">stackoverflow.com/questions/26763344/…</a> and you can get the formatting strings at <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">docs.python.org/3/library/…</a></span>
<span class="comment-copy">Yes, I have tried that and I kept getting "ValueError: time data 19730701 does not match format '%d%b%Y:%H:%M:%S.%f' (match)"</span>
<span class="comment-copy">How do I sort this monthStd = data.groupby(data['Date'].dt.strftime('%B'))['TEMP'].std() by month of the year not by alphabetical order</span>
<span class="comment-copy">please look at the edit</span>
<span class="comment-copy">April        9.018825 August       5.630849 December     8.293874 February     8.593250 January      8.221079 July         5.530319 June         9.193297 March        8.056263 May          9.363602 November     8.559405 October      8.234723 September    8.065359</span>
<span class="comment-copy">It is in alphabetical order. I want it to be in date order. like January , February , March , April , March</span>
<span class="comment-copy">that's for you to figure out since that is outside the scope of this question. I answered the question you asked here in completeness.</span>
