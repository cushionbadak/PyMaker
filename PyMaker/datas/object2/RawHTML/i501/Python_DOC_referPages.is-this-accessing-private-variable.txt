<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1641219/does-python-have-private-variables-in-classes">Does Python have “private” variables in classes?</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>How is <code>a(object of F class)</code> is printing the private variable?</p>
<pre><code>    class F:
        def __init__(self):
            self.__y=5
    a=F()
    a.__y=10
    print(a.__y)
</code></pre>
<p>The output is <code>10</code>. I know that the new assignment updated the value of <code>a.__y</code>(or y?). But, I'm not able to understand how <code>y</code> is accessed outside the class. I tried printing IDs of both, they are different. Can someone provide better explanation for this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python doesn't really have a concept of private variables. However, due to convention, python programmers prefix an underscore <code>_</code> behind variables which they don't want accessed publicly. You can read more about this on the <a href="https://docs.python.org/3/tutorial/classes.html#tut-private" rel="nofollow noreferrer">official documentation</a></p>
</div>
<span class="comment-copy">Check here <a href="https://stackoverflow.com/a/1641236/10418812">stackoverflow.com/a/1641236/10418812</a></span>
<span class="comment-copy"><a href="https://www.geeksforgeeks.org/private-variables-python/" rel="nofollow noreferrer">geeksforgeeks.org/private-variables-python</a></span>
<span class="comment-copy">They're not private variables. The <code>_</code> is just the writer of the code saying " don't mess with this please". Python doesn't actually do anything to make it "private".</span>
<span class="comment-copy">You're accessing a completely different attribute outside the class.</span>
<span class="comment-copy">The information in this answer is technically true but misleading in context. Names starting with <code>__</code> are treated specially in a class definition.</span>
