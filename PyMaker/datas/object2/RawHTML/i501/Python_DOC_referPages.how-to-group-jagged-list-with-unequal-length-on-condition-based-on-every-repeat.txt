<div class="post-text" itemprop="text">
<p>I have a jagged list in the below format,</p>
<pre><code>[['x01','xxxx','yyy','01234355'],['x02','fas','gere','1434'],[],['y05','KLM'],['1231','Port','erwe'],[],['Load','Music','XF32'],['x01','JJJJ','LLJU','2342','6346CS','qras'],['x02','ASF','10'],['CAC','131','CDF$#'],['v32','rrte','dceg'],['CS223','w34','4234ye'][],
['fsdf','rwrw','cacw','fcwe'],['x01','eeee','wefw','CDE'],['x02','WEF','083DV'],[],['vrev','wef3','DV23']]
</code></pre>
<p>and I am expecting to group all the lists into one list which are in between the common item, in this case till the next occurance of item 'x01' should be group to one list</p>
<pre><code>[

[item_01:['x01','xxxx','yyy','01234355'],['x02','fas','gere','1434'],[],['y05','KLM'],['1231','Port','erwe'],[],['Load','Music','XF32']],

[item_02:['x01','JJJJ','LLJU','2342','6346CS','qras'],['x02','ASF','10'],['CAC','131','CDF$#'],['v32','rrte','dceg'],['CS223','w34','4234ye'][],
['fsdf','rwrw','cacw','fcwe']],

[item_03:['x01','eeee','wefw','CDE'],['x02','WEF','083DV'],[],['vrev','wef3','DV23']]

]
</code></pre>
<p>It may be simple or repeated question, but I am new to python coding so, please help to achieve the expected format</p>
</div>
<div class="post-text" itemprop="text">
<p>As pointed out in <em>@PatrickArtner</em> and <em>@aws_apprentice</em>'s comments, your desired output <strong>does not exists</strong> in python: you can't have a list with a <em>key</em> (i.e. <code>item_01</code>, <code>item_02</code>...).<br/>
Some similar objects let you store information with <em>keys</em> (see <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">Dict</a>), but you can't have many different <em>values</em> for the same <em>key</em>.<br/>
also your input is invalid, since a comma is missing. </p>
<p>Anyway it is possible to understand the general idea of what you want, and I can suggest you an approach:</p>
<p>Create a Dictionary where the values are lists of lists:</p>
<pre><code>my_list = [['x01','xxxx','yyy','01234355'],['x02','fas','gere','1434'],[],['y05','KLM'],['1231','Port','erwe'],[],['Load','Music','XF32'],['x01','JJJJ','LLJU','2342','6346CS','qras'],['x02','ASF','10'],['CAC','131','CDF$#'],['v32','rrte','dceg'],['CS223','w34','4234ye'],[],['fsdf','rwrw','cacw','fcwe'],['x01','eeee','wefw','CDE'],['x02','WEF','083DV'],[],['vrev','wef3','DV23']]


n = 0 # initialize a counter
common_item = 'x01' # identify the common item
my_dictionary = {} # create the empty dictionary
for x in my_list: # go through each element of your list
    if len(x)&gt;0 and x[0] == common_item: # check if the first item is the common item
        n +=1 # if it is, it's a new list: increase n by 1
        identifier = 'item_{0}'.format(str(n).zfill(2)) # build the key of your dictionary with item_ + n
        my_dictionary[identifier] = [] # assign at the new key an empty list as value
    my_dictionary[identifier].append(x) # add in the list of the current key each element found in my_list

print(my_dictionary)
</code></pre>
<p><strong>Output:</strong></p>
<blockquote>
<p><code>{'item_03': [['x01', 'eeee', 'wefw', 'CDE'], ['x02', 'WEF', '083DV'], [], ['vrev', 'wef3', 'DV23']], 'item_02': [['x01', 'JJJJ', 'LLJU', '2342', '6346CS', 'qras'], ['x02', 'ASF', '10'], ['CAC', '131', 'CDF$#'], ['v32', 'rrte', 'dceg'], ['CS223', 'w34', '4234ye'], [], ['fsdf', 'rwrw', 'cacw', 'fcwe']], 'item_01': [['x01', 'xxxx', 'yyy', '01234355'], ['x02', 'fas', 'gere', '1434'], [], ['y05', 'KLM'], ['1231', 'Port', 'erwe'], [], ['Load', 'Music', 'XF32']]}</code></p>
</blockquote>
<p>As you can see, dictionary are not ordered: this means that <code>item_01</code> could not be the first key of your dictionary.</p>
<p>you can also retrieve the value of a specific key:</p>
<pre><code>print(my_dictionary['item_01'])
</code></pre>
<p><strong>Output:</strong></p>
<blockquote>
<p><code>[['x01', 'xxxx', 'yyy', '01234355'], ['x02', 'fas', 'gere', '1434'], [], ['y05', 'KLM'], ['1231', 'Port', 'erwe'], [], ['Load', 'Music', 'XF32']]</code></p>
</blockquote>
<p>And many other operations: see the <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">official documentation</a>, and thousand of questions in SO, starting from <a href="https://stackoverflow.com/questions/45072283/how-to-use-a-python-dictionary">How to use a Python dictionary?</a></p>
</div>
<span class="comment-copy">if it's a repeated question you should try searching more yourself, however your expected output is not valid python</span>
<span class="comment-copy">Your output is invalid. It is not possible.</span>
<span class="comment-copy">Very kind of you @Gsk for the solution by understanding the intent of request, and its my bad that I referred my expected output as 'List' which should be some key value pair collection. Taking your code as reference, I tried many ways to create a list of lists instead of a dictionary but nothing worked. Can you please guide me to achieve it.</span>
<span class="comment-copy">@keyan'Aura the code that I gave you transform a list of lists (<code>my_list</code>, the one that you proposed in the question) into a dictionary of list of lists (<code>my_dictionary</code>). Copy and paste my code and <code>print(my_dictionary)</code> that and see the outcome. if you want to see how dictionaries works, start with <code>my_dict = {'even':[2,4,6], 'odd':[1,3,5]}</code>. This is a dict with 2 keys (<code>even</code> and <code>odd</code>) and their values (2 lists, <code>[2,4,6]</code> and <code>[1,3,5]</code>).</span>
<span class="comment-copy">Once again Thank you @Gsk for the explanation with a simple example.</span>
<span class="comment-copy">If you were able to solve your question, accept the answer. Otherwise, ask for details</span>
