<div class="post-text" itemprop="text">
<p>I'm getting an error when trying to use <code>autospec=True</code> when mocking an object's method. I'll write down a simple example showing how to reproduce the error I'm getting. Suppose I have a very simple class like the following  one:</p>
<pre><code>class SimpleClass:

    def target_method(self, a, b):
        return a + b
</code></pre>
<p>Now, in a different part of my system I have a function that interacts with a <code>SimpleClass</code> instance by doing <code>print(obj.target_method(a, b))</code> and I have to unitary test this function. I'd like to test it by mocking <code>target_method</code> with <code>autospec=True</code> to ensure the method signature and to check if it was called as expected. This when I get the error as described bellow:</p>
<pre><code>In [24]: with patch.object(SimpleClass, 'target_method', autospec=True) as mock: 
    ...:     mock(2, 5) 
    ...:                                                                                                 
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-24-04b2a0db8a31&gt; in &lt;module&gt;
      1 with patch.object(SimpleClass, 'target_method', autospec=True) as mock:
----&gt; 2     mock(2, 5)
      3 

&lt;string&gt; in target_method(*args, **kwargs)

/usr/lib/python3.6/unittest/mock.py in checksig(*args, **kwargs)
    169     func, sig = result
    170     def checksig(*args, **kwargs):
--&gt; 171         sig.bind(*args, **kwargs)
    172     _copy_func_details(func, checksig)
    173 

/usr/lib/python3.6/inspect.py in bind(*args, **kwargs)
   2987         if the passed arguments can not be bound.
   2988         """
-&gt; 2989         return args[0]._bind(args[1:], kwargs)
   2990 
   2991     def bind_partial(*args, **kwargs):

/usr/lib/python3.6/inspect.py in _bind(self, args, kwargs, partial)
   2902                             msg = 'missing a required argument: {arg!r}'
   2903                             msg = msg.format(arg=param.name)
-&gt; 2904                             raise TypeError(msg) from None
   2905             else:
   2906                 # We have a positional argument to process

TypeError: missing a required argument: 'b'
</code></pre>
<p>If I'm getting it right, <code>mock</code> is executing itself as a stand-alone function and, by doing so, it requires the <code>self</code> parameter to be passed explicitly.</p>
<p>So, my question is if there is a way to use <code>autospec</code> when patching an object's method without getting this exception.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should call the method of the instantiated object:</p>
<pre><code>with patch.object(SimpleClass, 'target_method', autospec=True): 
    obj = SimpleClass()
    obj.target_method(2, 5)
</code></pre>
<p>as described in <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch.object" rel="nofollow noreferrer">https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch.object</a></p>
</div>
<span class="comment-copy">Thank you! It worked for me and I'm not believing I did this simple mistake hehehe  I hope this answer can help other distracted developers in the future</span>
