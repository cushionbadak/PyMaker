<div class="post-text" itemprop="text">
<p>I want to make a plot that shows the missclassification error versus de K neighbors using KNN.</p>
<p>This the code i've built for that:</p>
<pre><code># creating odd list of K for KNN
myList = list(range(1,50))

# subsetting just the odd ones
neighbors = filter(lambda x: x % 2 != 0, myList)

# empty list that will hold cv scores
cv_scores = []

# perform 10-fold cross validation
for k in neighbors:
    knn = KNN(n_neighbors=k, n_jobs = 6, metric = 'minkowski', contamination = 0.05)
    scores = cross_val_score(knn, X_test, pred, cv=10, scoring='accuracy')
    cv_scores.append(scores.mean())

### Create Plot
import matplotlib.pyplot as plt
plt.style.use('ggplot')

# changing to misclassification error
MSE = [1 - x for x in cv_scores]

# determining best k
optimal_k = neighbors[MSE.index(min(next(iter(MSE))))]
print ("The optimal K neighbors number is %d" % optimal_k)

# plot misclassification error vs k
plt.plot(neighbors, MSE, figsize = (20,12))
plt.xlabel('Number of Neighbors K')
plt.ylabel('Misclassification Error')
plt.show()
</code></pre>
<p>The problem is at this line:</p>
<pre><code>optimal_k = neighbors[MSE.index(min(next(iter(MSE))))]
</code></pre>
<p>This code seemed to be written in python 2. This was the original line:</p>
<pre><code>optimal_k = neighbors[MSE.index(min(MSE))]
</code></pre>
<p>I added <code>next()</code> and <code>iter()</code> to solve this issue, as adviced by some usersin other threads similar to this. But i'm getting this error:</p>
<pre><code>TypeError: 'numpy.float64' object is not iterable
</code></pre>
<p>I know why this error is happening, it should be iterting through a list but it's taking only the numbers. I think the problem comes from the <code>filter()</code> use at this line:</p>
<pre><code>neighbors = filter(lambda x: x % 2 != 0, myList)
</code></pre>
<p>How can i fix this code to run on python 3 and prevent this from happening??</p>
<p>Thanks in advance</p>
<p>EDIT: </p>
<p>The KNN version i'm using is not the one in sklearn, for those who would like to try this code. It comes from an anomaly detetction package called PYOD. Link <a href="https://pyod.readthedocs.io/en/latest/pyod.models.html#module-pyod.models.knn" rel="nofollow noreferrer">here</a></p>
<p>You can also try it with the original KNN from sklearn, but note you will need to remove the contamination parameter and maybe the distance parameter</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue is that the code is defining <code>neighbors</code> as a generator and exhausting it in the first loop. Solution: use a list.</p>
<pre><code>neighbors = list(filter(lambda x: x % 2 != 0, myList))
</code></pre>
<p>Also your original syntax for getting the optimal was correct (no need for <code>iter</code> or <code>next</code>):</p>
<pre><code>optimal_k = neighbors[MSE.index(min(MSE))]
</code></pre>
</div>
<span class="comment-copy"><code>next(iter(MSE))</code> returns <i>a number</i>. <code>min(&lt;one single number&gt;)</code> makes zero sense and thus is an error. Also, when given a single argument, <code>min</code> assumes that it's an iterable, but it's a single number in your case. BTW, what was wrong with the original <code>MSE.index(min(MSE))</code>?</span>
<span class="comment-copy">Clearly, calculating the minimum of <i>a single number</i> is an error, so is <code>min(next(iter(MSE)))</code>. You say you "added <code>next()</code> and <code>iter()</code> to solve this issue". What was the original issue? You couldn't index into <code>neighbors</code> in Python 3, right?</span>
<span class="comment-copy">then use <code>neighbors = list(neighbors)</code></span>
<span class="comment-copy">@Miguel2488, yep, <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer">here's why</a> and <a href="https://docs.python.org/3/library/2to3.html#2to3fixer-filter" rel="nofollow noreferrer">here's how to solve it</a></span>
<span class="comment-copy">Did you put the <code>neighbors = list(neighbors)</code> at the beginning? Once the iterator is exhausted it doesn't produce anything. Try <code>neighbors = list(filter(lambda x: x % 2 != 0, myList))</code></span>
<span class="comment-copy">Thank you buddy. Another lesson i have learnt ;)</span>
