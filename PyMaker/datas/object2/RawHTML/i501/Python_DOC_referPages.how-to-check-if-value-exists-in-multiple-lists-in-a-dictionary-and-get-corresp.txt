<div class="post-text" itemprop="text">
<p>I have a dictionary that looks like this:</p>
<pre><code>directions = {"north": ["n", "N", "north", "North"],
              "south": ["s", "S", "south", "South"],
              "east": ["e", "E", "east", "East"],
              "west": ["w", "W", "west", "West"]}
</code></pre>
<p>I want to:
1) check if a variable (direction) exists at all in any of the lists in the dictionary
2) get the dictionary key of the list the value is in. How could this be done?</p>
</div>
<div class="post-text" itemprop="text">
<p>I am going to take a stab in the dark and assume you are trying to take an input and return a direction - that's why you have 4 different formats for a direction.</p>
<p>If you flip your dictionary around it becomes useful:</p>
<pre><code>directions = {"north": ["n", "N", "north", "North"],
              "south": ["s", "S", "south", "South"],
              "east": ["e", "E", "east", "East"],
              "west": ["w", "W", "west", "West"]}

useful_dict = {}

for i in directions:
    for d in directions[i]:
        useful_dict[d] = i
</code></pre>
<p>gives you:</p>
<pre><code>{'n': 'north',
 'N': 'north',
 'north': 'north',
 'North': 'north',
 's': 'south',
 'S': 'south',
 'south': 'south',
 'South': 'south',
 'e': 'east',
 'E': 'east',
 'east': 'east',
 'East': 'east',
 'w': 'west',
 'W': 'west',
 'west': 'west',
 'West': 'west'}
</code></pre>
<p>now you just put any input you're 'searching for' into your dictionary:</p>
<pre><code>useful_dict['N']
# 'north'
useful_dict['s']
# 'south'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are <strong>only</strong> interested in knowing whether the variable exists:</p>
<pre><code>v = "north"
v in sum(directions.values(), [])
# True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use <code>in</code> to check if a variable exists in a list, and <code>for k,v in dict.items()</code> to iterate the dictionary:</p>
<pre><code>directions = {"north": ["n", "N", "north", "North"],
              "south": ["s", "S", "south", "South"],
              "east": ["e", "E", "east", "East"],
              "west": ["w", "W", "west", "West"]}


my_variable = "W"

for k,v in directions.items():
    if my_variable in v:
        print(True)
        break
</code></pre>
<p>In this iteration, <code>k</code> will store all the keys of your dictionary (the <code>strings</code>), and <code>v</code> will store the relative value (the <code>lists</code>)</p>
<p>or, as suggested by @Ev. Kounis in the comment, you can use list comprehension:</p>
<pre><code>print(any(my_variable in v for v in directions.values()))
</code></pre>
<p>which is more elegant, but you need to have a look on how <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> works.<br/>
you can also see the usage of <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a>, which returns <code>True</code> if any value in an iterable is true</p>
</div>
<span class="comment-copy">What have you tried so far?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/16125950/search-python-dictionary-where-value-is-list">Search Python dictionary where value is list</a></span>
<span class="comment-copy">if you're trying to convert n/N/north/North to 'north' why not have your dictionary the other way around, with any valid option as a key and then 'north' as the value for all of them?</span>
<span class="comment-copy">The key words you want to google, is "iteration" and "string compare"/"list contains"</span>
<span class="comment-copy">@Jaba - Well, I managed to get it working with two for loops, but I was looking for a more elegant solution. Stael's answer was just what I was looking for, and Chris's answer would be great in a case where I wasn't looking to get the key.</span>
<span class="comment-copy">...and I could just use useful_dict.values() to check if the value exists. This was exactly what I was looking for!</span>
<span class="comment-copy">@oneseventwonine only things to consider - this will behave oddly if you have the same value in multiple lists, and if you put a string instead of a list as a value in the directions dictionary. Just so you're aware :)</span>
<span class="comment-copy">I say only things... there might be plenty more to consider that I haven't thought about.</span>
<span class="comment-copy">Sure, I'll keep that in mind.</span>
<span class="comment-copy">This worked great for me, although I was actually looking for the functionality suggested by Stael, but could you please explain how it works?</span>
<span class="comment-copy">or just <code>any(my_variable in v for v in directions.values())</code></span>
