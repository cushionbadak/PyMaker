<div class="post-text" itemprop="text">
<p>I am using pathlib to manage my paths in my Python project using the <code>Path</code> class.</p>
<p>When I am using Linux, everything works fine. But on Windows, I have a little issue.</p>
<p>At some point in my code, I have to write a JavaScript file which lists the references to several other files. These paths have to be written in POSIX format. But when I do <code>str(my_path_instance)</code> on Windows, The path is written in Windows format.</p>
<p>Do you know a simple way to convert a <code>WindowsPath</code> to a <code>PosixPath</code> with pathlib?</p>
</div>
<div class="post-text" itemprop="text">
<p>pathlib has an <a href="https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.as_posix" rel="nofollow noreferrer"><code>as_posix</code> method</a> for this purpose:</p>
<pre><code>pathlib.path('foo\\bar').as_posix()
</code></pre>
<p>Apart from this, you can generally convert between Windows and POSIX paths by calling the appropriate constructor. <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">The documentation states</a> that</p>
<blockquote>
<p>You cannot instantiate a <code>WindowsPath</code> when running on Unix, but you can instantiate <code>PureWindowsPath</code>. [or vice versa]</p>
</blockquote>
<p>So use the <code>Pure*</code> class constructor:</p>
<pre><code>str(pathlib.PurePosixPath(your_windows_path))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python  <strong>pathlib</strong>  if you want to manipulate Windows paths on a Unix machine (or vice versa) -  you cannot instantiate a WindowsPath when running on Unix, but you can instantiate <code>PureWindowsPath/PurePosixPath</code></p>
<p>.</p>
<p><a href="https://i.stack.imgur.com/mLWjl.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/mLWjl.png"/></a></p>
</div>
<span class="comment-copy">Thanks for your reply, but it doesn't seem to work :( On my python console :  &gt;&gt;&gt; t = Path("foo") / "bar" &gt;&gt;&gt; str(pathlib.PurePosixPath(t)) . Output : 'foo\\bar'</span>
<span class="comment-copy">@graille Odd, it works for me (the other way round; I’m on macOS), and it <i>should</i> work. That said, see update. There’s a more direct way.</span>
<span class="comment-copy"><code>as_posix</code> is the correct method here. I can verify that <code>str(PurePosixPath("some\\path\\on\Windows"))</code> still uses backslashes, though.</span>
<span class="comment-copy">@AdamSmith That … must be a bug in pathlib. On macOS I get, as expected <code>str(PureWindowsPath(Path('foo/bar'))) == 'foo\\bar'</code>, and this is indeed the documented behaviour (although the documentation doesn’t explicitly mention the <code>__str__</code> dunder method, but the documentation comment for <code>Path.__str__</code> <i>does</i> specify this behaviour).</span>
<span class="comment-copy">@KonradRudolph I'm inclined to agree!</span>
