<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3674409/how-to-split-partition-a-dataset-into-training-and-test-datasets-for-e-g-cros">How to split/partition a dataset into training and test datasets for, e.g., cross validation?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/38250710/how-to-split-data-into-3-sets-train-validation-and-test">How to split data into 3 sets (train, validation and test)?</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I have the following bumpy array:</p>
<p>y =</p>
<pre><code>array([[0],
       [2],
       [0],
       [1],
       [0],
       [1],
       [1],
       [1],
       [0],
       [0],
       [2],
       [2],
       [1],
       [2]])
</code></pre>
<p>I want to generate 3 lists of non-overlapping indices of rows of <code>y</code> as follows:</p>
<pre><code>list_1 = 70% of rows
list_2 = 15% of rows
list_3 = 15% of rows
</code></pre>
<p>I know how to generate a single list, e.g. <code>list_1</code>:</p>
<pre><code>import numpy as np

list_1 = [np.random.choice(np.where(y == i)[0], size=n_1, replace=False) for i in np.unique(y)]
</code></pre>
<p>where <code>n_1</code> is equal to the number of rows that correspond to 70% of all rows. In the above example of <code>y</code> there are totally 14 rows. It means that 70% of 14 rows is equal to 9 (rounded down to 9). Therefore <code>n_1</code> would be equal to 9.</p>
<p>However, I don't know how to generate the rest of lists (<code>list_2</code> and <code>list_3</code>), so that they do not overlap with the row indices in <code>list_1</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>you have <strong>y</strong> and <strong>list1</strong> now, </p>
<pre><code>l2 = list(set(y) - set(list1))
</code></pre>
<p>Now from l2 you can run same code of np.random.choice and choose next 15%
and save it in list2, then perform </p>
<pre><code>list3 = list(set(l2) - set(list2))
</code></pre>
</div>
<span class="comment-copy">Maybe you could create three index arrays. Use set differences to form the next index arrays.</span>
<span class="comment-copy">just shuffle the entire array and slice the shuffle output.</span>
<span class="comment-copy">@ParitoshSingh: It is indeed a good idea. Could you please show how can I do it?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer"><code>random.shuffle</code></a> and <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">docs.python.org/3/tutorial/introduction.html#lists</a></span>
<span class="comment-copy">@ParitoshSingh: From the documentation of <code>shuffle</code>: "Note that even for small len(x), the total number of permutations of x can quickly grow larger than the period of most random number generators. This implies that most permutations of a long sequence can never be generated. For example, a sequence of length 2080 is the largest that can fit within the period of the Mersenne Twister random number generator."</span>
<span class="comment-copy">How to get <code>l3</code>? Like this? <code>l3 = y.symmetric_difference(np.concatenate(list1,l2))</code></span>
<span class="comment-copy">you can take symmetric_difference of list2 from l2, and the remaining element will be list 3</span>
<span class="comment-copy">I don't understand. I do not have <code>list2</code>. I only have <code>list1</code> as a starting point. If I create <code>list2</code> in the same way as I created <code>list1</code> and then I apply <code>symmetric_difference</code>, then I will get a smaller number of rows in <code>list2</code> which will not correspond to 15%.</span>
<span class="comment-copy">Sorry, in your update you use <code>list2</code>. As I said, I only have <code>list1</code> as a starting point. The reason is explained in the above comment. If I use your approach (if I understood it correctly), I will not get 75%/15%/15%. Can you please put the complete code starting from <code>list1</code> and show how it works on my data?</span>
