<div class="post-text" itemprop="text">
<p>Let's say I have the following series:</p>
<pre><code>0    A
1    B
2    C
dtype: object

0    1
1    2
2    3
3    4
dtype: int64
</code></pre>
<p>How can I merge them to create an empty dataframe with every possible combination of values, like this:</p>
<pre><code>   letter  number
0       A       1
1       A       2
2       A       3
3       A       4
4       B       1
5       B       2
6       B       3
7       B       4
8       C       1
9       C       2
10      C       3
11      C       4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the 2 series are <code>s</code> and <code>s1</code>, use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="noreferrer"><code>itertools.product()</code></a> which gives a <em>cartesian product of input iterables</em> :</p>
<pre><code>import itertools
df = pd.DataFrame(list(itertools.product(s,s1)),columns=['letter','number'])
print(df)

    letter  number
0       A       1
1       A       2
2       A       3
3       A       4
4       B       1
5       B       2
6       B       3
7       B       4
8       C       1
9       C       2
10      C       3
11      C       4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you have 2 <code>Series</code> <code>s1</code> and <code>s2</code>.
you can do this:</p>
<pre><code>pd.DataFrame(index=s1,columns=s2).unstack().reset_index()[["s1","s2"]]
</code></pre>
<p>It will give you the follow</p>
<pre><code>   s1  s2
0   A   1
1   B   1
2   C   1
3   A   2
4   B   2
5   C   2
6   A   3
7   B   3
8   C   3
9   A   4
10  B   4
11  C   4
</code></pre>
</div>
<span class="comment-copy">If you have a lot of data and need speed, check out this answer.... <a href="https://stackoverflow.com/questions/1208118/using-numpy-to-build-an-array-of-all-combinations-of-two-arrays" title="using numpy to build an array of all combinations of two arrays">stackoverflow.com/questions/1208118/â€¦</a></span>
<span class="comment-copy">Just to add that this method requires that the series be named first, and the subsequent slicing <code>[["s1", "s2"]]</code> be done using the names of the series</span>
