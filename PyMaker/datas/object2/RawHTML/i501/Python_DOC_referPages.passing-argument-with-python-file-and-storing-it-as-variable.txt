<div class="post-text" itemprop="text">
<p>I need to pass some argument when running pythonfile. </p>
<p>The argument is a path, <code>/home/user/</code>, where it should be stored as list, so I can use it in the code later.</p>
<p>Example: when running file. findfiles.py /home/user/ /home/user2/</p>
<p>I want to pass the list to <code>glob.glob('path *.txt')</code>, so it can search for files ending in .txt</p>
<p>This is what I got right now:</p>
<pre><code>import glob

test = glob.glob('*.txt')
text1 = "file "
text2 = " has following 2 line inside"
for files in test:
        print text1 + files + text2 
        f = open(files, "r")
        print(f.readline())
        print(f.readline())
</code></pre>
<p>It searches in current dir after *.txt and list the files and first 2 lines.</p>
</div>
<div class="post-text" itemprop="text">
<p>you have several options : </p>
<p>1.use <code>Argparse</code>, to read more:
   <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">https://docs.python.org/3/library/argparse.html</a></p>
<p>2.use <code>sys.argv</code> which in your simple case seems the simplest :</p>
<pre><code>import sys
script_argument = sys.argv[1:]
print script_argument 
# output is : "['/home/user/', '/home/user2/']" 
</code></pre>
<p>just use that according to what you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thx for tips, but what i used in the end was. </p>
<p>printfiles.py /home/user/ /home/user2/
where the two arguments would be stored in list. </p>
<pre><code>import glob, sys, os
list = []
list = sys.argv
    for stuff in list:
    result = glob.glob(os.path.join(stuff, '*.txt'))
    print stuff
</code></pre>
<p>would return the .txt files it found. 
i could later open them with result.</p>
<pre><code>for files in result:
                        print text1 + files + text2 
                        f = open(files, "r")
                        print(f.readline())
</code></pre>
</div>
<span class="comment-copy">So what exactly is your question?</span>
<span class="comment-copy">To me it is unclear what you are asking</span>
<span class="comment-copy">Look at the module <code>argparse</code> in the Standard Library.</span>
