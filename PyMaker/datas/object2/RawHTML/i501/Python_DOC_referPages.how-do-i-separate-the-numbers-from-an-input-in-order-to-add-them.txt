<div class="post-text" itemprop="text">
<p>I am trying to have the user input a series of numbers (separated by commas) to receive the total of them. </p>
<p>I have tried (with no luck):</p>
<pre><code>values = input("Input some comma seprated numbers: ")
numbersSum = sum(values)
print ("sum of list element is : ", numbersSum)

values = input("Input some comma seprated numbers: ")
list = values.split(",")
sum(list)
print ("The total sum is: ", sum)
</code></pre>
<p>If the user inputs 5.5,6,5.5 the expected output will be 17.</p>
</div>
<div class="post-text" itemprop="text">
<p>After you <code>split</code> the values by comma into a list, you need to convert them from strings to numbers.  You can do that with</p>
<pre><code>values = input("Input some comma seprated numbers: ")
lst = values.split(",")
lst = [float(x) for x in lst]
total = sum(lst)
print("The total sum is: ", total)
</code></pre>
<p>For reference, see <a href="https://www.pythonforbeginners.com/basics/list-comprehensions-in-python" rel="nofollow noreferrer">List Comprehensions in Python</a>.</p>
<p>(Also, you shouldn't use <code>list</code> as a variable name, since that's a function in Python.)</p>
</div>
<div class="post-text" itemprop="text">
<p>You're almost there.</p>
<p>After splitting, the values will still be strings, so you have to map them to float.</p>
<pre><code>values = "5.5,6,5.5" # input("Input some comma seprated numbers: ")
L = list(map(float, values.split(",")))
print ("The total sum is: ", sum(L))
</code></pre>
<p>Output:</p>
<pre><code>The total sum is:  17.0
</code></pre>
<p>Side note: Please don't name your variables <code>list</code> or <code>sum</code>, otherwise you will shadow the python built-ins!</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to convert the inputs to float:</p>
<pre><code>numbers = input("Input some comma seprated numbers: ")

result = sum([float(n) for n in numbers.split(',')])

print(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to convert to numbers before adding them together.</p>
<p>For example, you could convert them all into <code>float</code>s:</p>
<pre><code>input_str = input("Input some comma seprated numbers: ")

# Option1: without error checking
number_list = [float(s) for s in input_str.split(',')]

# Option2: with error checking, if you are not sure if the user will input only valid numbers
number_list = []
for s in input_str.split(','):
    try:
        n = float(s)
        number_list.append(n)
    except ValueError:
        pass

print("The list of valid numbers is:", number_list)
print("The sum of the list is:", sum(number_list))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code># empty list to store the user inputs
lst = []      

# a loop that will keep taking input until the user wants
while True:
    # ask for the input
    value = input("Input a number: ")
    # append the value to the list
    lst.append(value)
    # if the user wants to exit
    IsExit = input("enter exit to exit")
    if 'exit' in IsExit:
        break

# take the sum of each element (casted to float) in the lst 
print("The sum of the list: {} ".format(sum([float(x) for x in lst])))
</code></pre>
<p>OUTPUT:</p>
<pre><code>Input a number: 5.5
enter exit to exitno
Input a number: 6
enter exit to exitno
Input a number: 5.5
enter exit to exitexit
The sum of the list: 17.0 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's hard to know what went wrong w\o a sample of the error\output code.</p>
<p>I think the issue is in getting the sum of list (very bad name btw) when it's a list of strings.</p>
<p>please try the following</p>
<pre><code>values = input("Input some comma seprated numbers: ")
lst = values.split(",")
lst = [int(curr) for curr in lst]
sum(lst)
print ("The total sum is: ", sum)
</code></pre>
<p>This code will work when expecting integers, if you want floats then change the list comprehension.</p>
<p><strong>Try not to name objects with the same name of standard objects such as list,int,str,float etc...</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>use below</p>
<pre><code>print('sum of input is :',sum(list(map(float,input('Input some comma separated numbers: ').split(',')))))
</code></pre>
</div>
<span class="comment-copy">a while loop to take input from users first, then a list that would store those input, finally the sum of it.</span>
<span class="comment-copy">The result of the <code>input</code> is the <code>&lt;tuple&gt;</code> data type, not <code>&lt;str&gt;</code> type. You cann't use <code>string.split()</code> method on <code>&lt;tuple&gt;</code> data type.</span>
<span class="comment-copy">@s3n0 That is not true. <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#input</a></span>
<span class="comment-copy">@BilltheLizard yes, I know, but in the case of the code above is the result just a <code>&lt;tuple&gt;</code> ! So, the <code>string.split()</code> method does not work there.</span>
<span class="comment-copy">@s3n0 Based on the print statements, the OP appears to be using Python 3.</span>
<span class="comment-copy">Yup. But in this case, as the user input must be used <code>raw_input()</code> which gives a string, instead of the standard <code>input()</code> which returns a specific data structure. ////EDIT: Sorry, this is for Python 2.x only :). Python 3.x is a new magic :).</span>
