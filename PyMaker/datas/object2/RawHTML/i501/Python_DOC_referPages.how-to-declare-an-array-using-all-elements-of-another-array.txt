<div class="post-text" itemprop="text">
<p>Assume I have a "constant" like:</p>
<pre><code>ITEMS = [ "item1", "item2" ]
</code></pre>
<p>Now I would like to create an array that contains all entries of <code>ITEMS</code>, plus some more.</p>
<p>Obviously, this is wrong:</p>
<pre><code>more_things = [ "all", ITEMS ]
</code></pre>
<p>as it would put the whole array into the new array. But I want the new array to contain <code>[ "all", "item1", "item2" ]</code> in the end. </p>
<p>Sure, I could somehow iterate the first array, but I am wondering if there is a more idiomatic one liner way to do this. Ideally, it should work for python2 and python3.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just concatenate them with <code>+</code>:</p>
<pre><code>more_things = ["all"] + ITEMS
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're running Python 3.5+, the closest to your request is to use <a href="https://www.python.org/dev/peps/pep-0448/" rel="nofollow noreferrer">unpacking</a>:</p>
<pre><code>&gt;&gt;&gt; ITEMS = ['item1', 'item2']
&gt;&gt;&gt; ['all', *ITEMS]
['all', 'item1', 'item2']
</code></pre>
<p>In earlier versions list concatenation would do the same:</p>
<pre><code>&gt;&gt;&gt; ITEMS = ['item1', 'item2']
&gt;&gt;&gt; ['all'] + ITEMS
['all', 'item1', 'item2']
</code></pre>
<p>If you simply need an <em>iterable</em> (i.e. not necessarily a list), using <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain()</code></a> may be more efficient:</p>
<pre><code>from itertools import chain
more_things = chain(['all'], ITEMS)  # or wrap in list() to get a list
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3 you can do:</p>
<pre><code>ITEMS = [ "item1", "item2" ]
more_things = [ "all", *ITEMS ]
</code></pre>
<p>This is quite flexible because it lets you combine several lists (or iterables in general) and elements in one line:</p>
<pre><code>even_more_things = [ "all", *ITEMS, "the", *ITEMS, "items" ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'll suggest one more obvious approach: <a href="https://docs.python.org/3/tutorial/datastructures.html#data-structures" rel="nofollow noreferrer"><code>list.insert</code></a>.</p>
<pre><code>ITEMS.insert(0, 'all')
ITEMS
# ['all', 'item1', 'item2']
</code></pre>
<p>It modifies <code>ITEMS</code> in-place.</p>
<hr/>
<p>If you don't want to modify <code>ITEMS</code>, you can create a copy... although at that point, you'd rather one of the simpler options like iterable unpacking (<code>*</code>)...</p>
<pre><code>ITEMS2 = ITEMS.copy()
ITEMS2.insert(0, 'all')

ITEMS2
# ['all', 'item1', 'item2']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <code>itertools.chain</code></p>
<pre><code>from itertools import chain

more_things = list(chain(more_things, ITEMS))
</code></pre>
<p>it is useful when you want to add more than two lists together.</p>
</div>
<span class="comment-copy">@GhostCat yep, works for both major versions of Python; I didn't downvote, but IMO people are more likely to downvote this for the abundance of duplicates than its simplicity.</span>
<span class="comment-copy">@GhostCat StackOverflow works in mysterious ways, but if I had to guess it could be fear of retribution</span>
<span class="comment-copy">Ah, well. I really dont mind simple (correct) close as dup votes. If there would have been one early on,I just delete the question and move on. But comment-less downvotes, that sucks. And I think hope assume that I dont have a reputation of going revenging things ...</span>
<span class="comment-copy">Thanks for pointing out that this is python3 only?!</span>
<span class="comment-copy">ITEMS is supposed to be a "constant". more_things on the other hand is supposed to go into a choices array for argparse. So my question is really about creating a new array, without changing the first one. But sure, it is worth noting that changing is possible, too.</span>
