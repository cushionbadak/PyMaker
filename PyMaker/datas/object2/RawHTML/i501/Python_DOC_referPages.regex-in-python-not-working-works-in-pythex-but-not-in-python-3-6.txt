<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/180986/what-is-the-difference-between-re-search-and-re-match">What is the difference between re.search and re.match?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>This regex works in pythex, but not in python 3.6.  I am not sure why:</p>
<p><a href="https://pythex.org/?regex=(%3FP%3Cpun1%3E%5Cd%7B3%7D)%5Cs%2B(%3FP%3Cpun2%3E%5Cd%7B6%7D)(%5Cs%2B(%3FP%3Cpun3%3E%5B01oO%5D)(%5Cs%2B(%3FP%3Cpun4%3E%5Cd%7B4%7D))%3F)%3F%5Cs.*%5Cs(%3FP%3Camt%3E%5Cd%2B%5C.%5Cd%5Cd)%5Cs&amp;test_string=105297%20%09003%20%09002394%20%09o%20%090000%20%0920891%20%090.00%20%091%20%09%0A105297%20003%20%20002394%20%20o%20%200000%20%2020891%20%200.00%20%201%0A105297%20%20003%20%20002394%20%20o%20%200000%20%2020891%20%200.00%20%201%0A105297%20%20003%20%20002394%20%20o%20%200000%20%2020891%20%200.00%20%201%0A%0A(%3FP%3Cpun1%3E%5Cd%7B3%7D)%5Cs%2B(%3FP%3Cpun2%3E%5Cd%7B6%7D)(%5Cs%2B(%3FP%3Cpun3%3E%5B01oO%5D)(%5Cs%2B(%3FP%3Cpun4%3E%5Cd%7B4%7D))%3F)%3F%5Cs.*%5Cs(%3FP%3Camt%3E%5Cd%2B%5C.%5Cd%5Cd)%5Cs%0A(%3FP%3Cpun1%3E%5Cd%7B3%7D)%5Cs%2B(%3FP%3Cpun2%3E%5Cd%7B6%7D)(%5Cs%2B(%3FP%3Cpun3%3E%5B01oO%5D)(%5Cs%2B(%3FP%3Cpun4%3E%5Cd%7B4%7D))%3F)%3F%5Cs.*%5Cs(%3FP%3Camt%3E%5Cd%2B%5C.%5Cd%5Cd)%5Cs&amp;ignorecase=1&amp;multiline=1&amp;dotall=0&amp;verbose=0" rel="nofollow noreferrer">Pythex link (click)</a></p>
<p>Code in python:</p>
<pre><code>import re
test = '105297  003  002394  o  0000  20891  0.00  1'
pattern = r"(?P&lt;pun1&gt;\d{3})\s+(?P&lt;pun2&gt;\d{6})(\s+(?P&lt;pun3&gt;[01oO])(\s+(?P&lt;pun4&gt;\d{4}))?)?\s.*\s(?P&lt;amt&gt;\d+\.\d\d)\s"
match = re.match(pattern, test, re.IGNORECASE)
match is None
True
</code></pre>
<p>I haven't been able to figure out why it works in pythex but not in python interpreter.</p>
</div>
<div class="post-text" itemprop="text">
<p>You might be looking for <code>re.search()</code> not <code>re.match()</code>. The latter only matches at the start of the string (implies an anchor <code>^</code>, that is):</p>
<pre><code>match = re.search(pattern, test, re.IGNORECASE)
#            ^^^
if match:
    # change the world here
</code></pre>
<p>See <a href="https://regex101.com/r/z2uz5E/2" rel="nofollow noreferrer"><strong>a demo on regex101.com</strong></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I suspect your problems comes from calling <code>re.match</code> instead of <a href="https://docs.python.org/3.5/library/re.html#re.search" rel="nofollow noreferrer"><code>re.search</code></a>. The <code>re.search</code> function tries to find the regex in the given string, while <code>re.match</code> requires the regex to match at the beginning of the string.</p>
<p>Change this:</p>
<pre><code>match = re.match(pattern, test, re.IGNORECASE)
</code></pre>
<p>to this:</p>
<pre><code>match = re.search(pattern, test, re.IGNORECASE)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that match() is used for matching the beginning of a string, not anywehere.
from python docs: (<a href="https://docs.python.org/3/library/re.html#re.Pattern.match" rel="nofollow noreferrer">Python docs for match()</a>)</p>
<p>"If zero or more characters at the <strong>beginning</strong> of string match this regular expression, return a corresponding match object."</p>
<p>You should use search() instead:
"If you want to locate a match anywhere in string, use search() instead."</p>
<p><a href="https://docs.python.org/3/library/re.html#search-vs-match" rel="nofollow noreferrer">see also search() vs. match()</a></p>
<p>this part:</p>
<pre><code>match = re.match(pattern, test, re.IGNORECASE)
</code></pre>
<p>has to be:</p>
<pre><code>match = re.search(pattern, test, re.IGNORECASE)
</code></pre>
</div>
<span class="comment-copy">What does it suppose to do?</span>
