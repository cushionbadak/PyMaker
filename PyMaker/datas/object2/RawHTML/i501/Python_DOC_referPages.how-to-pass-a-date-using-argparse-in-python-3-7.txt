<div class="post-text" itemprop="text">
<pre><code>parser.add_argument("-s", "--start-date", dest="start_date", 
                    default=date.today() - timedelta(days = 1), 
                    type=date, help="Date in the format yyyymmdd")
</code></pre>
<p>This method gives the error</p>
<pre><code>argument_test.py: error: argument -s/--start-date: invalid date value: 20181215
</code></pre>
<p>I assume that argument received is a string and it is incompatible as the object expected is date. So, how do I actually pass the date object? Is there a work around?</p>
<p>I could parse a string and pass it to a date object. But, I'd like to explore other direct options.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a wrapper function that uses <code>datetime.strptime</code> to parse the given date string with the desired format:</p>
<pre><code>parser.add_argument("-s", "--start-date", dest="start_date", 
                    default=date.today() - timedelta(days = 1), 
                    type=lambda d: datetime.strptime(d, '%Y%m%d').date(),
                    help="Date in the format yyyymmdd")
</code></pre>
</div>
<span class="comment-copy">What's this <code>date</code> function?  Look at <code>sys.argv</code> to see what the shell has pass to your script.  That's what the parser has to work with.  For a start I'd suggest just accepting a string, and doing your own conversion to a data after parsing.  That way you'll get to pay more attention as to how it's being done, without assumptions about what argparse might or might not be doing.</span>
<span class="comment-copy">The <code>type</code> parameter is supposed to be a function.  It isn't the name of the expect object type.   It is just doing <code>date("20181215")</code>.</span>
<span class="comment-copy">@hpaulji So does it mean, everytime I specify a time, I'm basically invoking a constructor?</span>
<span class="comment-copy">so the type here is whatever the return type of the function?</span>
<span class="comment-copy">Yes, <code>type</code> can be any callable that takes a single string argument and returns the converted value. Please refer to the <a href="https://docs.python.org/3/library/argparse.html#type" rel="nofollow noreferrer">documentation</a> for more details.</span>
