<div class="post-text" itemprop="text">
<p>I'm getting tired of renaming every episode with its subtitle (i have 100+)</p>
<p>How can I compare the 2 files if they have the same episode number in their name, after that I want it to replace the subtitle to the episode name </p>
<p>I tried to do it my self, I successfully managed to change the name(easy), but the comparison part is what I'm missing.</p>
<p>Thank you.</p>
<p><strong><em>edited:</em></strong></p>
<p>The files names would be like this;</p>
<p>(Episode): [PuyaSubs!] Banana Fish - 12 [1080p].mkv</p>
<p>(Subtitle): Banana Fish - 12.ass</p>
<p>what i came up so far:</p>
<pre><code>import os
old_file = os.path.join(r"D:\Downloads\Media\Anime\[PuyaSubs!] Banana Fish [1080p][Batch]\Banana Fish - 12.ass", "Banana Fish - 12.ass")
new_file = os.path.join(r"D:\Downloads\Media\Anime\[PuyaSubs!] Banana Fish [1080p][Batch]\Banana Fish - 12.ass", "[PuyaSubs!] Banana Fish - 12 [1080p][2ECC9207].ass")
os.rename(old_file, new_file)
</code></pre>
<p>this will only change the name, but it's not automated and I will have to do it for every subtitle file manually.</p>
</div>
<div class="post-text" itemprop="text">
<p>The way I looked at this is like so:</p>
<p><strong>How I Implemented This:</strong></p>
<ol>
<li>First get the list of all files in your directory by using <code>os.listdir</code> </li>
<li>Next we run through each file and if it contains <code>.ass</code> suffix (that means it's a subtitle file)</li>
<li>Then we look through the entire files directory to see whether there is a movie that matches to the subtitle file. We do this in the <code>try</code> statement and this allows us to break through the for loop so that we don't get any errors.</li>
<li>Lastly we just have to rename the subtitle file name, and for this we use <code>os.rename</code></li>
</ol>
<pre class="lang-py prettyprint-override"><code>#!/usr/bin/env python3

import os, re

def fixMySubtitles(mediaFolderPath):
    # Lists all the files in the folder
    files = os.listdir(mediaFolderPath)

    # Loops through every single file in the directory
    for file in files:
        # In the beginning we set both names to "" since we don't know what they are yet.
        movie = ""
        subtitle = ""

        # If searches the current file name to see if it ends in .ass
        if re.search(r'\.ass', file):
            # This removes the .ass part from the subtitle name
            subtitle = re.search(r'(.*).ass', file).group(1)

            # This chunk matches the subtitle file to the movie file
            movie = [movie for movie in files if subtitle in movie]
            movie = [movie for movie in movie if '.mkv' in movie]
            movie = "".join(movie)

            # Now we try to get the movie without the .mkv part
            try:
                movie = re.search(r'(.*).mkv', movie).group(1)
            except:
                print("Movie not found error for subtitle '%s'" % (file))
                break

            # Lastly we can set the path of the new subtitle file
            newPath = os.path.join(mediaFolderPath, "%s.ass" % (movie))

            # And if the movie variable has a value then we can rename
            if movie:
                os.rename(os.path.join(mediaFolderPath, file), newPath)

    print("I have fixed your subtitles!")
</code></pre>
<p><strong>How To Run This</strong></p>
<p>I'm actually on a Mac right now, however this should still work on windows.</p>
<ol>
<li>When running this you will need a python file with the code in it.</li>
<li>Once you have this code ready inside, you will need to actually call the method since right now we have used <code>def</code> to create the function (function/method are used interchangeably) however we actually aren't running the function anywhere</li>
<li>At the bottom of your code add a line that says<br/>
<code>fixMySubtitles("[DIRECTORY OF FOLDER WITH MEDIA]")</code> and replace <code>[DIRECTORY OF FOLDER...]</code> with the path to your folder</li>
<li>Finally you should be able to run the file with 
<code>python.exe [PATH TO PYTHON FILE]</code></li>
</ol>
<p>For reference, this is the exact code I have in my file:</p>
<pre class="lang-py prettyprint-override"><code>#!/usr/bin/env python3

import os, re

def fixMySubtitles(mediaFolderPath):
    files = os.listdir(mediaFolderPath)

    for file in files:
        movie = ""
        subtitle = ""
        if re.search(r'\.ass', file):
            subtitle = re.search(r'(.*).ass', file).group(1)
            movie = [movie for movie in files if subtitle in movie]
            movie = [movie for movie in movie if '.mkv' in movie]
            movie = "".join(movie)
            try:
                movie = re.search(r'(.*).mkv', movie).group(1)
            except:
                print("Movie not found error for subtitle '%s'" % (file))
            newPath = os.path.join(mediaFolderPath, "%s.ass" % (movie))
            if movie:
                os.rename(os.path.join(mediaFolderPath, file), newPath)

    print("I have fixed your subtitles!")

fixMySubtitles("/Users/My_User/Desktop/test")
</code></pre>
<p>Hope this helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is my solution... Assign the variable <code>inDir</code> with the path of your files which -I think- is <code>D:\Downloads\Media\Anime</code>:</p>
<pre><code>import os
import re
from glob import glob

inDir = "D:\Downloads\Media\Anime"

lst = glob(os.path.join(inDir, r"*.ass"))
for filepath in lst:
    parent, filename = os.path.split(filepath)
    episode = re.findall(r"Banana Fish - (\d+).ass", filename)[0]
    newName = "[PuyaSubs!] Banana Fish - {} [1080p][2ECC9207].ass".format(episode)
    os.chdir(parent)
    os.rename(filename, newName)
</code></pre>
</div>
<span class="comment-copy">Please show us what you have so far so we can help you figure out what is wrong with it.</span>
<span class="comment-copy">Give an example of how the 2 files are looking like?</span>
<span class="comment-copy">The first file (the anime episode): [PuyaSubs!] Banana Fish - 01 [1080p][EBD2A650].mkv    the second (subtitle): Banana Fish - 11 .ass</span>
<span class="comment-copy">You can use <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">regex</a> (regular expressions) to split the filename into parts, e.g. the show-name and the episode number and then operate on those.</span>
<span class="comment-copy">OF COURSE, the subtitle of the above episode would look like this <code>Banana Fish - 01 .ass </code>.. right?</span>
<span class="comment-copy">Hi, what should I change in the code (like the directory ?) &amp; also i'm new to python so i don't know what '$' means and other functions. if you could explain it further it would be helpful a lot, thank you in advance :D</span>
<span class="comment-copy">Hey, @VXsz do you mind letting me know whether you are on Mac or Windows?</span>
<span class="comment-copy">Windows 10, Never used Mac btw</span>
<span class="comment-copy">Alright, i've added some comments and i'll just add another section to help you run the method</span>
<span class="comment-copy">I've read it and now it's much better for me to understand, just one last question... should I change "mediaFolderPath" or anything else?</span>
<span class="comment-copy">Tried it, didn't work..., I tried modifying the code myself but still, no success... if you have the time can you explain the code</span>
<span class="comment-copy">I edited my code, try it one more time!</span>
