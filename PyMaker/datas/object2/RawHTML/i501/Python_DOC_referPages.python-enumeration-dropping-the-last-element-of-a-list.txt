<div class="post-text" itemprop="text">
<p>I am working off this article <a href="https://www.tutorialspoint.com/python/python_command_line_arguments.htm" rel="nofollow noreferrer">here</a> trying to parse some command line arguments but the script I built keeps dropping the last argument. </p>
<p>To keep it simple I reproduced the problem like so:</p>
<pre><code>import getopt

argv = ["-c", "config", "-o", "hello", "-e", "fu bar", "-q", "this is a query"]
opts, args = getopt.getopt(argv, "c:o:e:q", ["cfile=", "ofile=", "entry=", "query="])

for opt, arg in opts:
    print(opt, arg)
</code></pre>
<p>Here is what I get for output:</p>
<pre><code>-c config
-o hello
-e fu bar
-q
</code></pre>
<p>Where am I going wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>The colon (<code>:</code>) is not a separator, it needs to follow each argument as stated <a href="https://docs.python.org/3/library/getopt.html#getopt.getopt" rel="noreferrer">in the docs</a>:</p>
<blockquote>
<p><em>shortopts</em> is the string of option letters that the script wants to recognize, with options that require an argument followed by a colon (<code>':'</code>; i.e., the same format that Unix <code>getopt()</code> uses).</p>
</blockquote>
<p>Therefore you should change <code>"c:o:e:q"</code> to <code>"c:o:e:q:"</code></p>
<p>The tutorial you linked to uses it the same way too.</p>
</div>
<span class="comment-copy">It's generally recommended to switch to <code>argparse</code> these days. Which has nothing to do with your question, but that's why this is a comment. :-)</span>
<span class="comment-copy">I would recommend switching to <code>click</code>. Yes, it is a third party library which means an extra dependency but feels much more natural.</span>
