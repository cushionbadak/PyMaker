<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/9189172/why-doesnt-calling-a-python-string-method-do-anything-unless-you-assign-its-out">Why doesn't calling a Python string method do anything unless you assign its output?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I'm using Python's NLP library - Spacy. I'm trying to replace noun chunks in an article. Noun chunks look like this: 'the most secure facial recognition'. I would like to replace them by something like this: 'the_most_secure_facial_recognition' (underlines instead of spaces)</p>
<p>So I wrote this piece of code:</p>
<pre><code>import spacy

nlp = spacy.load('en_core_web_md')

data =  "In the end, the notch was a relatively useless design trend for Android phones, and consumers were left " \
        "wanting. The hole-punch camera seems to be a better answer. Here's a new idea that looks genuinely futuristic " \
        "and hasn't been pulled off by Apple yet. It's an admission that Face ID is difficult to clone, a hole-punch " \
        "won't include all the fancy sensors required for the most secure facial recognition, but consumers probably " \
        "don't care that much, anyway. There's always a fingerprint sensor, after all."

doc = nlp(data)

# doc2 = doc.text
doc2 = str(doc)

for nc in doc.noun_chunks:
    old_nc = str(nc)
    new_nc = old_nc.replace(' ', '_')
    print(old_nc)
    print(new_nc)
    doc2.replace(old_nc, new_nc)

print(doc2)
</code></pre>
<p>When I run it, nothing is replaced in doc2. Am I doing something wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>replace</code> doesn't modify the existing string, but instead returns a new string.</p>
<p>So this won't work:</p>
<pre><code>doc2.replace(old_nc, new_nc)
</code></pre>
<p>But this will:</p>
<pre><code>doc2 = doc2.replace(old_nc, new_nc)
</code></pre>
<p>This is the relevant documentation:</p>
<blockquote>
<p><strong>str.replace(old, new[, count])</strong></p>
<p>Return a copy of the string with all occurrences of substring old replaced by new. If the optional argument count is given, only the first count occurrences are replaced.</p>
</blockquote>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.replace</a></p>
</div>
<span class="comment-copy">Strings are not mutable, <code>str.replace()</code> returns a new string. Don't ignore that returned value.</span>
<span class="comment-copy">Makes sense, thanks!</span>
