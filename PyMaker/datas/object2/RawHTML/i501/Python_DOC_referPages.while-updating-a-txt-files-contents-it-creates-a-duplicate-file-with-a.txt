<div class="post-text" itemprop="text">
<p>I'm trying to make a file that keeps a players money in it, but while trying to update the line with money on it. It'll create a new file with the same name but with a '?' on the end.  </p>
<pre><code>Name = input("Username: ")
f = open((Name) + ".txt", "w")
global Money
Money = int(100)
lines = [(Name) + "\n", str(Money)]
f.writelines(lines)
f.close()  
</code></pre>
<p>This is where the file is originally made</p>
<pre><code>save = input("What is the file you'd like to refer to?")
f = open((save) + ".txt", "r")
Name = (f.readline())
Money = int(f.readline())   
</code></pre>
<p>This snippet works fine, and it's setting the variables to the data I want as expected. (In another instance)</p>
<pre><code>lines = [(Name) + "\n", str(Money)]
</code></pre>
<p>I've defined 'lines' as these lines here in a previous module.</p>
<pre><code>global Name
Money = Money - 50
f = open((Name) + ".txt", "w")
f.writelines(lines)
f.close()
</code></pre>
<p>This is the snippet that creates another file, I just want it to update the file but instead it's creating another. (Sometimes it doesn't do anything at all)</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that the filename contains a newline character (<code>'\n'</code>). The <code>ls</code> utility will replace this character with a question mark when displaying the filename.</p>
<p>The newline comes from this code:</p>
<pre><code>save = input("What is the file you'd like to refer to?")
f = open((save) + ".txt", "r")
Name = (f.readline())
Money = int(f.readline())  
</code></pre>
<p>The line returned by <code>f.readline</code> includes the newline at the end of the line.</p>
<p>The easiest way to remove the newline is to use <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow noreferrer">str.rstrip</a>, like this:</p>
<pre><code>Name = f.readline().rstrip('\n')
</code></pre>
<p>This would also work:</p>
<pre><code>Name = f.readline().rstrip()
</code></pre>
<p>if <code>rstrip</code> isn't passed a parameter it will remove <em>all</em> trailing whitespace characters.</p>
<p>The "Money" line in the file does not have a trailing newline, but it might be prudent to call <code>rstrip</code> on it regardless, as one could potentially be added if the file is edited in a text editor, or if more lines were added to the file.</p>
<p>In the bash shell you can "see" the newlines by piping the output of <code>ls</code> through <code>cat</code> or <code>sed</code> (credit to <a href="https://unix.stackexchange.com/questions/361432/question-marks-in-filenames-and-samba#comment640499_361432">this comment</a>):</p>
<pre><code>&gt;  ls test*.txt
test?.txt
&gt;  ls test*.txt | cat
test
.txt
&gt;  ls test*.txt | sed -n l
test$
.txt$
</code></pre>
</div>
<span class="comment-copy">There is no need for <code>global</code> here. I can only assume that you have this in a function and you're getting the textbook thrown at you on why <code>global</code>s are a bad idea. Please give a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> to recreate the problem.</span>
<span class="comment-copy">why all those parentheses?</span>
<span class="comment-copy">The reason i haven't given you the full code and I've just done the part that going wrong. is its currently 323 lines away from where the variables are defined.</span>
<span class="comment-copy">What do you get if you <code>print(Name + '.txt')</code> before you write to the file?</span>
<span class="comment-copy">After i've originally made the file for the first time it gives me mansand.txt (mansand is the eg name) however when im trying to rewrite it gives me mansand (then a new line) .txt</span>
