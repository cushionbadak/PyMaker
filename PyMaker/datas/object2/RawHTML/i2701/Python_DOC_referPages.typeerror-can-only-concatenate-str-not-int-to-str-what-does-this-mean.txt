<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11844072/python-typeerror-cannot-concatenate-str-and-int-objects">Python: TypeError: cannot concatenate 'str' and 'int' objects [duplicate]</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<pre><code>def myFunc(King):
    print("The characters name is " + King.name + " and age is " + King.age)
</code></pre>
<p>How do I link int to string?</p>
</div>
<div class="post-text" itemprop="text">
<p>It means exactly what the error message says: <code>"The characters name is " + King.name + " and age is "</code> is a string. You can not add an integer (<code>King.age</code>) to it.</p>
<p>Luckily, you have a whole slew of workarounds available:</p>
<ol>
<li><code>print("The characters name is", King.name, "and age is", King.age)</code></li>
<li><code>print(f"The characters name is {King.name} and age is {King.age}")</code> (requires Python &gt;= 3.6</li>
<li><code>print("The characters name is {King.name} and age is {King.age}".format(King=King))</code></li>
<li><code>print("The characters name is {} and age is {}".format(King.name, King.age))</code></li>
</ol>
<p>...</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def myFunc(King):
    print("The characters name is " + str(King.name) + " and age is " + str(King.age))
</code></pre>
</div>
<span class="comment-copy"><code>"The characters name is " + King.name + " and age is " + str(King.age)</code> note the <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str#str" rel="nofollow noreferrer"><code>str</code></a>: you need to cast the <code>int</code> to a <code>str</code> before you can <code>+</code> them.</span>
<span class="comment-copy">I like how you do not cast <code>King.age</code> to a string, but rely on implicit formatting. The usual answer that is to use <code>str</code> is not the preferred way.</span>
<span class="comment-copy">@OlivierMelan√ßon. I agree. The conversion to <code>str</code> happens implicitly anyway. No need to belabor the point. The only time I find it necessary to convert explicitly on a regular basis is when using <code>str.join</code>.</span>
<span class="comment-copy">User the str built-in function</span>
<span class="comment-copy"><code>King.name</code> is almost certainly a string already... no need to cast.</span>
<span class="comment-copy">Your first comment should be a part of your answer...</span>
