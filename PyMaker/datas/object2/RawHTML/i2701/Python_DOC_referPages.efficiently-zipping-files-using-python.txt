<div class="post-text" itemprop="text">
<p>I need to zip directories:</p>
<p>directory -&gt; directory.zip.</p>
<p>It should be possible to easily open that file on WIndows but creation of that file should be as fast as possible -&gt; sth like tar </p>
<p>Then original directory may be deleted. What would be the best options for that? The only reason for "zipping" that directory is to be able to download it over http as one file.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the built-in <a href="https://docs.python.org/3/library/zipfile.html" rel="nofollow noreferrer">zipfile</a> module. In particular <a href="https://docs.python.org/3/library/zipfile.html#zipfile.ZIP_STORED" rel="nofollow noreferrer"><code>ZIP_STORED</code></a> disables compression.</p>
<p>For extra performance, you could also send the generated zip output directly into the HTTP response, without first creating a file on disk or a buffer in memory.</p>
</div>
<div class="post-text" itemprop="text">
<p>For zipping directories I have always used the <a href="https://docs.python.org/3/library/zipfile.html" rel="nofollow noreferrer">zipfile</a> module, and used it like so;</p>
<pre><code>import zipfile

def zip(src, dst):
    zf = zipfile.ZipFile("%s.zip" % (dst), "w", zipfile.ZIP_DEFLATED)
    abs_src = os.path.abspath(src)
    for dirname, subdirs, files in os.walk(src):
        for filename in files:
            absname = os.path.abspath(os.path.join(dirname, filename))
            arcname = absname[len(abs_src) + 1:]
            print('zipping %s as %s' % (os.path.join(dirname, filename),
                                        arcname))
            zf.write(absname, arcname)
    zf.close()
</code></pre>
<p>Then called with this;</p>
<pre><code>zip(str(source), str(destination))
</code></pre>
</div>
