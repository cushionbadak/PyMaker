<div class="post-text" itemprop="text">
<p>I am new to python so please excuse me if I am asking something simple. I am experimenting with the import function. I would like to know if import a module,  can I make classes from that module. Here is my code for the module:</p>
<pre><code>class Parent(object):

    def override(self):
        print("PARENT override")

    def implicit(self):
        print("PARENT implicit")

    def altered(self):
        print("PARENT altered")


class Child(Parent):
    def override(self):
        print("CHILD override")


    def altered(self):
        print("CHILD, BEFORE PARENT altered")
        super(Child, self).altered()
        print("CHILD, PARENT altered")
</code></pre>
<p>and here is my code for the script which I want to import my module:</p>
<pre><code>import test

dad = Parent()
print(dad)
</code></pre>
<p>I keep getting: NameError: name 'Parent' is not defined</p>
<p>Again, excuse me if I am getting it all wrong but why cant I simply create a class from the module I just imported?</p>
</div>
<div class="post-text" itemprop="text">
<p>With <code>import test</code>, only the name <code>test</code> is made available in your script, and you can refer to <code>Parent</code> as <code>test.Parent</code>.</p>
<p>If you want to refer to your class simply by its name <code>Parent</code>, you should use <code>from test import Parent</code>.</p>
</div>
<span class="comment-copy">The <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">modules tutorial</a> has a good explanation.</span>
<span class="comment-copy">So I will only be able to use the independent functions in test?</span>
<span class="comment-copy">@EliBaum: You can use everything, you just have to refer to it as, e.g., <code>test.Parent</code> instead of <code>Parent</code>, just like the answer already says.</span>
<span class="comment-copy">@EliBaum I'm not sure what you mean by "independent functions".</span>
