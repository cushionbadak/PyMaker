<div class="post-text" itemprop="text">
<p>I successfully imported from the web this <code>json</code> file, which looks like:</p>
<p><code>[{"h_mag":"19.7","i_deg":"9.65","moid_au":"0.035"},{"h_mag":"20.5","i_deg":"14.52","moid_au":"0.028"},</code><br/>
etc ...</p>
<p>I want to extract the values of the key <code>moid_au</code>, later compare <code>moid_au</code> with the key values of <code>h_mag</code>. </p>
<p>This works: <code>print(data[1]['moid_au'])</code>, but if I try to ask all the elements of the list it won't, I tried: <code>print(data[:]['moid_au'])</code>.</p>
<p>I tried iterators and a <code>lambda</code> function but still has not work yet, mostly because I'm new in data manipulation. It works when I have one dictionary, not with a list of dictionaries. </p>
<p>Thanks in advance for other tips. Some links were confusing. </p>
</div>
<div class="post-text" itemprop="text">
<p>Sounds like you are using <code>lambda</code> wrong because you need <code>map</code> as well:</p>
<pre><code>c = [{"h_mag":"19.7","i_deg":"9.65","moid_au":"0.035"},{"h_mag":"20.5","i_deg":"14.52","moid_au":"0.028"}]

list(map(lambda rec: rec.get('moid_au'), c))
['0.035', '0.028']
</code></pre>
<p>Each <code>lambda</code> grabs a record from your list and you map your function to that.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>print(data[:]['moid_au'])</code> equals to <code>print(data['moid_au'])</code>, and you can see that it won't work, as <code>data</code> has no key named <code>'moid_au'</code>.</p>
<p>Try working with a loop:</p>
<pre><code>for item in data:
    print(item['moid_au'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>using your approach to iterate over the whole array to get all the instances of a key,this method might work for you</p>
<pre><code>a = [data[i]['moid_au']for i in range(len(data))]
print(a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In which exact way do you want to compare them?</p>
<p>Would it be useful getting the values in a way like this?</p>
<pre><code>list_of_dicts = [{"h_mag":"19.7","i_deg":"9.65","moid_au":"0.035"}, {"h_mag":"20.5","i_deg":"14.52","moid_au":"0.028"}]
mod_au_values = [d["moid_au"] for d in list_of_dicts]
h_mag_values = [d["h_mag"] for d in list_of_dicts]
</code></pre>
</div>
<span class="comment-copy">You need a simple <a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow noreferrer"><code>for</code> loop</a>. Take a look at <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionaries</a>, there is also a section on <a href="https://docs.python.org/3/tutorial/datastructures.html#looping-techniques" rel="nofollow noreferrer">looping techniques</a></span>
<span class="comment-copy">Hi Giacomo, the simple 'for ' loops I read on the web are for one dictionary, not for a "list" of dictionaries, I am having trouble how to access them.</span>
<span class="comment-copy">You need to show the code you tried.</span>
<span class="comment-copy">The links I provided explain looping over lists too. I would personally suggest that you find a good tutorial and stick with it instead of asking questions here right now. Asking questions when you don't know the language is going to waste way more time than reading a tutorial and following the exercises and you're going to get downvotes for not having done proper research before asking. If you have trouble with some point of a tutorial you can try to search for an answer and, eventually, ask a specific questions <i>linking to the tutorial</i> so that people can properly explain.</span>
<span class="comment-copy">Hey! It was this  for k in data.keys():     print(data[k])  but someone below answered something simple that it works. I understand this is a beginners problem.</span>
<span class="comment-copy">Why use get instead of regular indexing (<code>list(map(lambda rec: rec['moid_au'], c))</code>)?</span>
<span class="comment-copy">one advantage is that it won't throw an error if they key does not exist</span>
<span class="comment-copy">That's the only difference I know, and from my perspective, its not necessarily an advantage</span>
<span class="comment-copy">ok, depending on the problem it could be, especially if you give it a default value, like <code>0</code> if you plan to plot the data as OP specified.</span>
<span class="comment-copy">Thanks ClsForCookies, this works. However the thing is not only to print it but to manipulate it, so I will try to see how to make it a variable I can play with.</span>
<span class="comment-copy">exactly that! Later I can do anything I want with these two variables (e.g. plot)</span>
<span class="comment-copy">@IreneDelCarmenPÃ©rez-Merbis I'm glad I helped! If this answers your question completely I suggest you to mark it as accepted so others can see it more easily.</span>
