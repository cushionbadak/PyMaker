<div class="post-text" itemprop="text">
<p>Is there a simple way of creating data objects that are programmatically-similar (without necessarily the memory properties) to C-like <code>struct</code>'s in vanilla Python (2 or 3), without going through all the class stuff? I'm primarily interested in a quick-and-easy way of creating arbitrary datatypes and accessing their fields by name. </p>
<p>Something as simple as: </p>
<pre><code>def Car:               # quick and easy definition
    milesPerGallon
    color

myCar = Car(10,"blue")  # instantiation
myCar.color = "red"     # ability to set by attribute name
print(myCar.MPG)        # ability to get by attribute name
</code></pre>
<p>Or, is the only real way of being able to do this using classes?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3.7's <a href="https://docs.python.org/3/library/dataclasses.html" rel="nofollow noreferrer">data classes</a> offer something very much like what's described in your post:</p>
<pre><code>&gt;&gt;&gt; from dataclasses import dataclass
&gt;&gt;&gt; 
&gt;&gt;&gt; @dataclass
... class Car:
...     miles_per_gallon: float
...     color: str
... 
&gt;&gt;&gt; my_car = Car(10, 'blue')
&gt;&gt;&gt; my_car.color = 'red'
&gt;&gt;&gt; 
&gt;&gt;&gt; print(my_car.miles_per_gallon)
10
</code></pre>
<p>If you're on an older version of Python, <a href="https://docs.python.org/3/library/collections.html?highlight=namedtuple#collections.namedtuple" rel="nofollow noreferrer">named tuples</a> might be a good fit (as AChampion points out in <a href="https://stackoverflow.com/a/52020039/354577">their answer</a>).</p>
</div>
<div class="post-text" itemprop="text">
<p>@Chris provides a good example of <code>@dataclass</code>, and would recommend that approach if you are using 3.7.<br/>
This is what a <code>namedtuple</code> looks like:</p>
<pre><code>In []:
from collections import namedtuple
Car = namedtuple('Car', ['mpg', 'color'])

my_car = Car(10, 'blue')
print(my_car.mpg)

Out[]:
10
</code></pre>
<p>The one limitation with <code>namedtuple</code> is you cannot change the values (much like a normal tuple)</p>
</div>
<div class="post-text" itemprop="text">
<p>What about a dictionary?</p>
<pre><code>myCar = {'mpg': 10, 'color': 'blue'}
myCar['color'] = 'red'
print(myCar['mpg'])
</code></pre>
</div>
<span class="comment-copy">You may want to look at <a href="https://docs.python.org/3/library/collections.html?highlight=namedtuple#collections.namedtuple" rel="nofollow noreferrer"><code>collections.namedtuple</code></a></span>
<span class="comment-copy">I'm aware of classes, as noted in the post. I'll have a look at named tuple's though.</span>
<span class="comment-copy">@StephenLasky, <i>data</i> classes are fairly close to what you describe in your post. They're new in Python 3.7. I'll add an answer with an example.</span>
<span class="comment-copy">@StephenLasky <code>namedtuple</code>'s are <i>class factories</i>, so no, you would always do this with a class, one way or another, in Python. Unless you use a container like a <code>dict</code>. But you you want a <i>type</i> then you need a class. All types are classes. <i>Everything</i> in python is an object.</span>
<span class="comment-copy">Possible duplicate: <a href="https://stackoverflow.com/questions/42287579/how-to-define-basic-python-structures/42287634#42287634" title="how to define basic python structures">stackoverflow.com/questions/42287579/â€¦</a> although it didn't include 3.7 data classes...</span>
