<div class="post-text" itemprop="text">
<p>I need a way to completely delete list items from memory.
The point is that even if an object is in more than one list, when I delete it it will no longer be available in any list and it will be completely deleted from memory.
I tried del, but it doesn't work:</p>
<pre><code>a = [Object(), Object()]
b = a[1]
del a[1]
</code></pre>
<p>but the value of a [1] is still in memory and b != None</p>
<p>How do I delete it completely from memory?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python, assignment operator binds the result of the right-hand side expression to the name from the left-hand side expression.</p>
<p>So when you define this</p>
<pre><code>a = [Object(), Object()]
b = a[1]
del a[1]
</code></pre>
<p>a is an object and the b is another object. When you are defining <code>b = a[1]</code> it gives the same reference since the values are the same. but when you are deleting the a[1] simply it disconnect the connection between the a[1] and the value. but still, b is connected to that value so it remains.</p>
<p><a href="https://i.stack.imgur.com/CH65S.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/CH65S.png"/></a></p>
<p><a href="http://pythontutor.com/visualize.html#code=a%20%3D%20%5B3,4%5D%0Ab%20%3D%20a%5B1%5D%0Aa%5B1%5D%3D5%0Adel%20a%5B1%5D&amp;cumulative=false&amp;curInstr=4&amp;heapPrimitives=nevernest&amp;mode=display&amp;origin=opt-frontend.js&amp;py=3&amp;rawInputLstJSON=%5B%5D&amp;textReferences=false" rel="nofollow noreferrer">Link that visualizes evverything</a></p>
</div>
<span class="comment-copy">Why do you want to do this? What are you expecting to happen to the other references to that object?</span>
<span class="comment-copy">if you assigned to some other variable, you cannot</span>
<span class="comment-copy">This is not how Python works. In Python you have references to objects. You create them (for example) when you use <code>=</code> and <code>del</code> will delete them. If there is no reference to an object anymore the garbage collector will remove the object, eventually. This is the way you dispose objects.</span>
<span class="comment-copy">As an addition: in some cases the <a href="https://docs.python.org/3/library/weakref.html" rel="nofollow noreferrer">weakref</a> module is helpful to allow objects to be disposed while there is still a way to reference them.</span>
<span class="comment-copy"><i>"When you are defining <code>b = a[1]</code> it's a new object"</i> â€“ What? That sounds wrong. Cannot tell if it's badly expressed or factually false. Overall, I don't know how this answers the question.</span>
<span class="comment-copy">a [1] and b are two references to the same object. You can check it, a change in a [1] will affect b, and a change in b will affect a [1].</span>
<span class="comment-copy">The problem is, when I use the function del, it only deletes the reference to the object, not the actual object</span>
<span class="comment-copy">@ParanoidAndroid It's not changing the value! when I defined like that and change a[0] value it's not changing the value of b. have a lokk at it on the url . Ihave edited my answer</span>
<span class="comment-copy">@Sathiyakugan if you change a property of the object, it will effect all the pointers</span>
