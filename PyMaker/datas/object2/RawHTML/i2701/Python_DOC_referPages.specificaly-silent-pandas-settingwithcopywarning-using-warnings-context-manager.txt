<div class="post-text" itemprop="text">
<p>I have the policy of showing all warnings:</p>
<pre><code>import warnings
warnings.simplefilter('always')
</code></pre>
<p>I would like to silent some false positive Pandas warnings using context managers:</p>
<pre><code>with warnings.catch_warnings():
    warnings.filterwarnings('ignore', category=SettingWithCopyWarning)
    # Some assignment raising false positive warning that should be silenced

# Some assignment actually raising a true positive warning
</code></pre>
<p>But after having a look on <a href="https://github.com/pandas-dev/pandas/tree/master/pandas" rel="nofollow noreferrer">Pandas source</a>, I cannot found where the object <code>SettingWithCopyWarning</code> is defined in Pandas.</p>
<p>Does anyone know where this object is defined in Pandas namespace?</p>
</div>
<div class="post-text" itemprop="text">
<p>The following should do what you are looking for:</p>
<p><code>pd.set_option('mode.chained_assignment', None)</code> </p>
<p>taken from <a href="https://www.dataquest.io/blog/settingwithcopywarning/" rel="nofollow noreferrer">https://www.dataquest.io/blog/settingwithcopywarning/</a></p>
<p>However, take some time to read the above article as it explains much about that warning. Perhaps you do not want to always silence it!</p>
</div>
<div class="post-text" itemprop="text">
<p>Merging information from comments into a single answer:</p>
<pre><code>import warnings
import pandas as pd
</code></pre>
<p>As @Andrew pointed out, I can achieve it using dedicated Pandas Context Manager:</p>
<pre><code>with pd.option_context('mode.chained_assignment', None):
    # Chaining Assignment, etc...
</code></pre>
<p>Or using the PSL <code>warnings</code> provided I can locate the warning <code>SettingWithCopyWarning</code> object (thanks to @coldspeed for the GitHub link):</p>
<pre><code>with warnings.catch_warnings():
    warnings.filterwarnings('ignore', category=pd.core.common.SettingWithCopyWarning)
    # Chaining Assignment, etc...
</code></pre>
<p>Notice both solution seems to behave similarly but they are not exactly equivalent:</p>
<ul>
<li>Pandas Context Manager temporarily alters Pandas options an then restores it;</li>
<li><a href="https://docs.python.org/3/library/warnings.html#temporarily-suppressing-warnings" rel="nofollow noreferrer">PSL Context Manager</a> catches a specific warning and silent it without altering Pandas options.</li>
</ul>
<p><strong>Additional information</strong></p>
<p>It can be worthy to convert this specific warning into error:</p>
<pre><code>pd.set_option('mode.chained_assignment', 'raise')
</code></pre>
<p>This will force your development to avoid those specific edge-cases and force your code to explicitly state if it works on view or only on a copy.</p>
<p>Off course the exception can be caught as usual:</p>
<pre><code>try:
    # Chaining Assignment, etc...
except pd.core.common.SettingWithCopyError:
    pass
</code></pre>
<p>But in this case, converting warning into error will likely force you to modify the ambiguous code until the error vanishes instead of catching the related exception.</p>
<p><strong>Observation</strong></p>
<p>IMHO, completely silent those warnings using:</p>
<pre><code>pd.set_option('mode.chained_assignment', None)
</code></pre>
<p>Is a bad practice, and does not help to produce better code.</p>
</div>
<span class="comment-copy"><a href="https://github.com/pandas-dev/pandas/blob/ff1fa4e55c90bb1ec3dc03987f989791eabda7d8/pandas/core/common.py#L28-#L29" rel="nofollow noreferrer">github.com/pandas-dev/pandas/blob/â€¦</a></span>
<span class="comment-copy">@coldspeed Thank you for pointing it out, I missed it I was looking in <code>errors.py</code>.</span>
<span class="comment-copy">No I want to specifically silent it, this is why I use a context manager. I already know about this. Thank you for answering anyway.</span>
<span class="comment-copy"><code>with pd.option_context('mode.chained_assignment', None):</code></span>
<span class="comment-copy">from the linked article</span>
<span class="comment-copy">Thank you for the link and pointing out the context manager. I have merged both comments from you and @coldspeed into an answer. I think this how it suits best to the OP.</span>
