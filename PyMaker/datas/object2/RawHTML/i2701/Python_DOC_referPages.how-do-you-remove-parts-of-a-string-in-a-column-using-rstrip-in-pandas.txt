<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/34297084/strip-removing-more-characters-than-expected">Strip removing more characters than expected</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Code before rstrip</p>
<pre><code>column_names = lh_Area_Base_V2.columns.tolist()
for i, val in enumerate(column_names[1:]):
    column_names[i+1] += '_Base_V2'
column_names[0] = 'Subj_ID'
# Replace the column names with a new name
lh_Area_Base_V2.columns = column_names
lh_Area_Base_V2.head()
</code></pre>
<p><a href="https://i.stack.imgur.com/hJfUQ.png" rel="nofollow noreferrer"><img alt="Initial DF" src="https://i.stack.imgur.com/hJfUQ.png"/></a></p>
<p>Code with rstrip (to drop "_V2" from the end of first column values):</p>
<pre><code>column_names = lh_Area_Base_V2.columns.tolist()
for i, val in enumerate(column_names[1:]):
    column_names[i+1] += '_Base_V2'
column_names[0] = 'Subj_ID'
lh_Area_Base_V2['Subj_ID'] = lh_Area_Base_V2['Subj_ID'].map(lambda x: x.lstrip().rstrip('_V2'))
# Replace the column names with a new name
lh_Area_Base_V2.columns = column_names
lh_Area_Base_V2.head()
</code></pre>
<p><a href="https://i.stack.imgur.com/0MczZ.png" rel="nofollow noreferrer"><img alt="Resulting DF After rstrip" src="https://i.stack.imgur.com/0MczZ.png"/></a></p>
<p>Error: Why does ID index #1 have a value 2 dropped at the end, which was not requested by the rstrip function (the function only requested for "_V2" to be dropped)?</p>
<p>I would love to hear any suggestions for fixes.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is expected behavior of <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow noreferrer"><code>rstrip</code></a>:</p>
<blockquote>
<p>The chars argument is a string specifying the set of characters to be removed</p>
</blockquote>
<p>It is not just stripping the <em>string</em> <code>_V2</code>, it will strip any of the contained characters, including the <code>2</code> at the end of your second row.</p>
<p>Instead, you may use a regular expression to replace a trailing <code>_V2</code>:</p>
<p></p>
<pre><code>df.assign(Subj_ID=df.Subj_ID.str.replace(r'_V2$', ''))

    Subj_ID  lh_bankssts_area_base_V2
0  SILVA001                       861
1  SILVA002                      1051
2  SILVA004                      1127
3  SILVA005                      1346
4  SILVA007                      1209
</code></pre>
</div>
<span class="comment-copy">Please post dataframes as text, not images</span>
<span class="comment-copy"><code>rstrip()</code> removes <i>any</i> from the character list, not <i>all</i>. For example <code>"Hello".rstrip('Ao2')</code> returns <code>'Hell'</code>.</span>
<span class="comment-copy">I'm marking this as a duplicate since Pandas <code>str</code> method behaviour mimics exactly regular Python string methods.</span>
