<div class="post-text" itemprop="text">
<h2>Background</h2>
<p>In Python's <a href="https://docs.python.org/3/library/unittest.html" rel="nofollow noreferrer"><code>unittest</code></a> framework, it is a fairly common idiom to use inheritance on a base set of tests to apply an entire set of tests to a new problem, and occasionally to add additional tests. A trivial example would be:</p>
<pre><code>from unittest import TestCase

class BaseTestCase(TestCase):
    VAR = 3

    def test_var_positive(self):
        self.assertGreaterEqual(self.VAR, 0)

class SubTestCase(BaseTestCase):
    VAR = 8

    def test_var_even(self):
        self.assertTrue(self.VAR % 2 == 0)
</code></pre>
<p>Which, when run, runs 3 tests:</p>
<pre><code>$ python -m unittest -v
test_var_positive (test_unittest.BaseTestCase) ... ok
test_var_even (test_unittest.SubTestCase) ... ok
test_var_positive (test_unittest.SubTestCase) ... ok

----------------------------------------------------------------------
Ran 3 tests in 0.000s
</code></pre>
<p>This is particularly useful if you are testing a class hierarchy, where each subclass <a href="https://en.wikipedia.org/wiki/Is-a" rel="nofollow noreferrer">is a</a> subtype of the parent classes, and should thus be able to pass the parent class's test suite in addition to its own.</p>
<h2>Problem</h2>
<p>I would like to switch over to using <a href="https://docs.pytest.org/en/latest/" rel="nofollow noreferrer"><code>pytest</code></a>, but I have a lot of tests that are structured this way. From what I can tell, <code>pytest</code> intends to replace most of the functionality of <code>TestCase</code> classes with fixtures, but <strong>is there a pytest idiom that allows test inheritance, and if so what is it</strong>?</p>
<p>I am aware that <code>pytest</code> can be used to run <code>unittest</code>-style tests, but <a href="https://docs.pytest.org/en/latest/unittest.html#pytest-features-in-unittest-testcase-subclasses" rel="nofollow noreferrer">the support is limited</a>, and I would like to use some of the "will never be supported" features of <code>pytest</code> in my tests.</p>
</div>
<div class="post-text" itemprop="text">
<p>Pytest allows you to group test cases in classes, so it naturally has support for test case inheritance.</p>
<p>When rewriting your <code>unittest</code> tests to <code>pytest</code> tests, remember to follow <a href="https://docs.pytest.org/en/reorganize-docs/goodpractices.html#conventions-for-python-test-discovery" rel="nofollow noreferrer">pytest's naming guidelines</a>:</p>
<ul>
<li>class names must begin with <code>Test</code></li>
<li>function/method names must begin with <code>test_</code></li>
</ul>
<p>Failing to comply with this naming scheme will prevent your tests from being collected and executed.</p>
<hr/>
<p>Your tests rewritten for pytest would look like this:</p>
<pre><code>class TestBase:
    VAR = 3

    def test_var_positive(self):
        assert self.VAR == 0

class TestSub(TestBase):
    VAR = 8

    def test_var_even(self):
        assert self.VAR % 2 == 0
</code></pre>
</div>
<span class="comment-copy">Wow, I can't believe I never thought to try this.</span>
