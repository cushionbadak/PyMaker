<div class="post-text" itemprop="text">
<p>I want to convert my date into DateTime object for MySQL.</p>
<p>My string format is: <code>Mon Aug 27 04:47:45 +0000 2018</code>
Expected Output: <code>'YYYY-M-D H:mm:ss'</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from datetime import datetime
t = datetime.strptime('Mon Aug 27 04:47:45 +0000 2008', '%a %b %d %H:%M:%S %                                                                                                             z %Y')
t.strftime('%Y-%m-%d %H:%M:%S')
</code></pre>
<p>Refer section 8.1.8
<a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.day" rel="nofollow noreferrer">here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you are using python 3, this solution would work -</p>
<pre><code>from datetime import datetime
x = 'Mon Aug 27 04:47:45 +0000 2018'
x = datetime.strftime(datetime.strptime(x, '%a %b %d %I:%M:%S %z %Y'), '%Y-%m-%d %H:%M:%S')
# OP '2018-08-27 04:47:45'
</code></pre>
<p>But for python 2, you might get a <code>ValueError: 'z' is a bad directive...</code>. In that case, you'll either have to use something like <a href="https://pypi.org/project/pytz/" rel="nofollow noreferrer">pytz</a> or <a href="http://labix.org/python-dateutil" rel="nofollow noreferrer">dateutil</a>. The table that you need to look for all these conversions can be found <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">here</a> </p>
<p><strong>Edit</strong>: You can't have <code>Expected Output: 'YYYY-M-D H:mm:ss'</code> if you convert your datetime string to datetime object. Datetime object has it's own format. Above gives you a <code>string</code> of the format that you want</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from datetime import datetime
date_as_dt_object = datetime.strptime(dt, '%a %b %d %H:%M:%S %z %Y')
</code></pre>
<p>You can use date_as_dt_object in a raw query or an ORM. If used in a raw query pass it as a string like:</p>
<pre><code>query = "select * from table where date &gt;" + str(date_as_dt_object)
</code></pre>
<p>Check out this list for Python's strftime directives.
 <a href="http://strftime.org/" rel="nofollow noreferrer">http://strftime.org/</a> </p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/33839738/most-efficient-way-in-python-to-convert-string-with-whitespaces-to-datetime-for">Most Efficient Way in Python to Convert String with Whitespaces to DateTime for MySql</a></span>
<span class="comment-copy">possible duplicate of <a href="https://stackoverflow.com/questions/10624937/convert-datetime-object-to-a-string-of-date-only-in-python">Convert datetime object to a String of date only in Python</a></span>
<span class="comment-copy">The timezone data is cut off.</span>
<span class="comment-copy">Not in the same format as OP asked</span>
<span class="comment-copy">How So?  OP says he wants to convert my date into &gt;&gt;DateTime object .</span>
<span class="comment-copy">You can't have the expected output in the case of datetime object, edit your answer, I'll remove the downvote</span>
<span class="comment-copy">Sure. But it depends on how OP is using it against MySQL. A raw query will yield the correct results against this str(formatted_date). If its an ORM its better to pass a datetime object.</span>
<span class="comment-copy">Correct, but the question says <i>expected format</i> after conversion, which is not possible</span>
