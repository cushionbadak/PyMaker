<div class="post-text" itemprop="text">
<p>For a given timedata - <code>2018-06-01 06:36:40.047883+00:00</code>, I want to remove microsecond and strip the value after '+'. Most of my dataset contains values like <code>2018-06-04 11:30:00+00:00</code> without the microsecond part. </p>
<p>How to have a common date time format for all values?</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm answering your question with an assumption that the <strong>type of the data is a string</strong>.</p>
<p>If you are facing problem in handling in different formats like <code>"2018-06-01 06:36:40.047883+00:00"</code> and <code>"2018-06-04 11:30:00+00:00"</code> you can use <code>split()</code>.
Learn more about <code>split()</code> at <a href="https://docs.python.org/3/library/stdtypes.html?highlight=split#str.split" rel="nofollow noreferrer">here</a></p>
<pre><code>str_data_time.split("+")[0].split(".")[0]
</code></pre>
<h3>Like,</h3>
<pre><code>for str_data_time in ["2018-06-01 06:36:40.047883+00:00", "2018-06-04 11:30:00+00:00"]:
    output = str_data_time.split("+")[0].split(".")[0]
    print(output)
</code></pre>
<p>The output of the above script is,</p>
<pre><code>2018-06-01 06:36:40
2018-06-04 11:30:00
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let's say you have a mix of different formats that looks like this:</p>
<pre><code>import pandas as pd

df = pd.DataFrame()
df['time'] = ['2018-06-01 06:36:40.047883+00:00', '2018-06-01 06:36:40.047883+00:00', '2018-06-04 11:30:00+00:00', '2018-06-01 06:36:40.047883']
</code></pre>
<p>Corresponding output:</p>
<pre><code>                               time
0  2018-06-01 06:36:40.047883+00:00
1  2018-06-01 06:36:40.047883+00:00
2         2018-06-04 11:30:00+00:00
3        2018-06-01 06:36:40.047883
</code></pre>
<p>You wish to get to a common format by removing microseconds and anything after +. In short, you want something that is in Y-M-D H-M-S format.</p>
<p>Currently, let me assume that your column is in string format. So, we now convert this to a datetime format and then replace the microseconds part with 0 and get rid of it. </p>
<pre><code>df['time'] = pd.to_datetime(df['time'])
df['time'] = df['time'].apply(lambda x: x.replace(microsecond = 0))
</code></pre>
<p>Output:</p>
<pre><code>                 time
0 2018-06-01 06:36:40
1 2018-06-01 06:36:40
2 2018-06-04 11:30:00
3 2018-06-01 06:36:40
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another way to achieve that is by using str.split:</p>
<pre><code>t = "2018-06-04 11:30:00+00:00"
t.split('+')[0]
</code></pre>
</div>
<span class="comment-copy">What have you done so far?</span>
<span class="comment-copy">What is the datatype of time data? Is it a string/ datetime?? And where are you stuck at?</span>
<span class="comment-copy">The data type is in the string format</span>
<span class="comment-copy">Thank you. Can you explain the index [0] near split. Sorry, I am new to this language and in the learning process</span>
<span class="comment-copy">When you split a string, it splits into 2 parts. [0] corresponds to the first half of the split while [1] corresponds to the second half of the split.</span>
<span class="comment-copy">Very nice solution using <code>Pandas</code> - Can be used for a large dataset.</span>
