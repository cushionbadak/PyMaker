<div class="post-text" itemprop="text">
<p>I came across a solution for a program in python but I couldn't understand what it does even after searching. Could someone please explain me what this statement will do.</p>
<pre><code>a, b, c = map(numpy.array,eval(dir()[0]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Function <a href="https://docs.python.org/2/library/functions.html#dir" rel="nofollow noreferrer"><code>dir</code></a>, when called without arguments returns the names of all local variables, similar to <code>locals().keys()</code>.</p>
<pre><code>def f(y):
     print(dir())  # prints ['y']
</code></pre>
<p>Then, obviously, <code>dir()[0]</code> is the name of the first of the local variables and <code>eval(dir()[0])</code> evaluates the variable name, i.e. returns the first local variable's value.</p>
<pre><code>def f(y):
     print(dir())  # prints ['y']
     print(dir()[0])  # prints 'y'
     print(eval(dir()[0]))  # prints the value of y
</code></pre>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; f(77)
['y']
y
77
&gt;&gt;&gt; f([1,2,3])
['y']
y
[1, 2, 3]
</code></pre>
<p>Function <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> calls the first argument (which has to be callable) with each of the values in the second argument (which has to be iterable), and generates the results e.g.</p>
<pre><code>&gt;&gt;&gt; for result in map(str.upper, ['foo', 'bar', 'baz']):
...     print(result)
...
FOO
BAR
BAZ
</code></pre>
<p>Combining those together, and assuming that the first local variable is a list named <code>first_variable</code>, then this code:</p>
<pre><code>a, b, c = map(numpy.array,eval(dir()[0]))
</code></pre>
<p>would be the same as this code:</p>
<pre><code>a, b, c = first_variable
a = numpy.array(a)
b = numpy.array(b)
c = numpy.array(c)
</code></pre>
</div>
<span class="comment-copy">Which part of it do you not understand?</span>
<span class="comment-copy">As a general rule, whenever you see a call to <code>eval</code> or <code>exec</code>, spit over your left shoulder three times and run away, because <a href="https://stackoverflow.com/questions/1832940/why-is-using-eval-a-bad-practice" title="why is using eval a bad practice">stackoverflow.com/questions/1832940/â€¦</a></span>
<span class="comment-copy"><code>eval(dir()[0])</code> is horrific and fragile. Do not take this as an example of what you should do in your own code.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#dir" rel="nofollow noreferrer"><code>dir()[0]</code></a> is the first name in the current local namespace, sorted alphabetically.  <code>eval</code> evaluates that name to get the object it represents.  <code>map</code> then iterates though it and does <code>numpy.array(x) for x in eval(dir()[0])</code>.  We then assume that there were three items in the <code>eval</code>ed object and assign the three arrays from <code>map</code> to those variables.</span>
<span class="comment-copy"><a href="https://hans.codes/exploiting-side-information-codefights-challenges/" rel="nofollow noreferrer">Apparently this is supposed to be an exploit vector against auto-grading of online code challenges</a>, which is why they're doing things that make no sense in a normal program.</span>
