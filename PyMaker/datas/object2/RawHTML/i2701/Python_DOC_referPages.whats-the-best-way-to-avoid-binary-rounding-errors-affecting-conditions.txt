<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/19473770/how-to-avoid-floating-point-errors">How to avoid floating point errors?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I noticed this strange behavior in a part of my code:</p>
<pre><code>num = 0.14
num += 0.01

if num == 0.15:
    print('equal')
elif num &gt; 0.15:
    print('greater')
elif num &lt; 0.15:
    print('less')

&gt; greater
</code></pre>
<p>I assume this is because of binary rounding errors, so <code>num</code> is actually stored as <code>0.1500000000001</code> or something.
I'm just wondering what is the best way to avoid these kinds of errors in conditional statements?</p>
</div>
<div class="post-text" itemprop="text">
<p>Of course rounding:</p>
<pre><code>num = 0.14
num += 0.01
num=round(num,2)
if num == 0.15:
    print('equal')
elif num &gt; 0.15:
    print('greater')
elif num &lt; 0.15:
    print('less')
</code></pre>
<p>Output:</p>
<pre><code>equal
</code></pre>
<p>Even better <code>decimal</code> module:</p>
<pre><code>from decimal import Decimal
num = Decimal('0.14')
num += Decimal('0.01')
num=float(num)
if num == 0.15:
    print('equal')
elif num &gt; 0.15:
    print('greater')
elif num &lt; 0.15:
    print('less')
</code></pre>
<p>Output:</p>
<pre><code>equal
</code></pre>
<p>And of course, compare <code>decimal.Decimal</code> types:</p>
<pre><code>from decimal import Decimal
num = Decimal('0.14')
num += Decimal('0.01')
if num == Decimal('0.15'):
    print('equal')
elif num &gt; Decimal('0.15'):
    print('greater')
elif num &lt; Decimal('0.15'):
    print('less')
</code></pre>
<p>Output:</p>
<pre><code>equal
</code></pre>
</div>
<span class="comment-copy">Thanks - I think <code>Decimal()</code> is what I'm looking for if I want flexibility in sig figs.</span>
<span class="comment-copy">@berkelem Yeah it should work, of course you can try</span>
<span class="comment-copy">@berkelem See: <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow noreferrer">docs.python.org/3/library/decimal.html</a></span>
