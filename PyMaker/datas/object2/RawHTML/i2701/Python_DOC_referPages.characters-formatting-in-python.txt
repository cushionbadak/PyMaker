<div class="post-text" itemprop="text">
<p>I'm beginner to Python ... I'd like to format the characters in Python using basic concepts and operations of Tuples and Lists as below ... </p>
<ol>
<li>I enter 10 digit number and except last 4 digits remaining all the numbers should be replaced by 'X'. For e.g.

<blockquote>
<p>number = 1234567890</p>
</blockquote></li>
</ol>
<p>Expecting output as - </p>
<blockquote>
<p>number = XXXXXX7890</p>
</blockquote>
<ol start="2">
<li>How to mask entered characters / numbers in Python using Tuples/Lists concept not using by importing any modules or existing high functions. Is it possible ?
For e.g. entered some characters , those should be masked using * (asterisk) or # (hashed) while entering. For e.g.

<blockquote>
<p>password : pa55w0rd</p>
</blockquote></li>
</ol>
<p>Expecting output while entering password as - </p>
<blockquote>
<p>password : ********</p>
</blockquote>
<p>OR</p>
<blockquote>
<p>password: ########</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>It is always better to use built-in modules for things sensitive like password. One way of doing is following:</p>
<pre><code>import getpass

number = 1234567890
first = 'X' * max(0,len(str(number)[:-4]))
last = str(number)[-4:]

n = first + last
print(n)



# part 2
p = getpass.getpass(prompt='Enter the number : ')

if int(p) == 123:
    print('Welcome..!!!')
else:
    print('Please enter correct number..!!!')
</code></pre>
<p>If you don't want to display typed password just print:</p>
<pre><code>print('######')
</code></pre>
<p>It does not have to be of the same length you just have to print something.</p>
</div>
<div class="post-text" itemprop="text">
<p>Break down what's needed: you need to convert to a string, to figure out how many characters to replace, generate a replacement string of that length, then include the tail of the original string.  Also you need to be robust against, eg, strings too short to have any characters replaced.</p>
<pre><code>'X' * max(0, len(str(number)) - 4) + str(number)[-4:]
</code></pre>
<p>For the second part: use a library.</p>
<p>Doing this directly is more complicated than it might seem to a beginner, because you're having to communicate with the systems which take text entry.  It's going to depend upon the operating system, Windows vs "roughly everything else".  For text entry outside of a web-browser or a GUI, most systems are emulating ancient text-only terminal devices because there's not yet enough reason to change that.  Those devices have modes of text input (character at a time, line at a time, raw, etc) and changing them to <strong>not</strong> immediately "echo" the character typed involves some intricate system calls, and then other programming to echo a different character instead.</p>
<p>Thus you're going to want to use a library to take care of all those intricate details for you.  Something around password entry.  Given the security implications, using tested and hardened code instead of rolling your own is something I <em>strongly</em> encourage.  Be aware that there are all sorts of issues around password handling too (constant time comparisons, memory handling, etc) such that as much as possible, you should avoid doing it at all, or move it to another program, and when you do handle it, use the existing libraries.</p>
<p>If you can, stick to the <a href="https://docs.python.org/3/library/index.html" rel="nofollow noreferrer">Python standard library</a> and use <a href="https://docs.python.org/3/library/getpass.html" rel="nofollow noreferrer">getpass</a> which won't echo anything for passwords, instead of printing stars.</p>
<p>If you really want the stars, then search <a href="https://pypi.org/" rel="nofollow noreferrer">https://pypi.org/</a> for getpass and see all the variants people have produced. Most of the ones I saw in a quick look didn't inspire confidence; <a href="https://pypi.org/project/pysectools/" rel="nofollow noreferrer">pysectools</a> seemed better than the others, but I've not used it.</p>
</div>
<span class="comment-copy">What have you tried already?</span>
<span class="comment-copy">I learnt characters can't be edited (immutable). Was trying to create a variable assigned with '1234567890' and converting it to list and replacing the numbers using index slicing, and then with "".join() function etc.., But couldn't proceed much.</span>
<span class="comment-copy">Python has a standard <a href="https://docs.python.org/3/library/getpass.html?highlight=getpass#getpass.getpass" rel="nofollow noreferrer"><code>getpass()</code></a> function for inputing passwords.</span>
<span class="comment-copy">Yes, I saw the other existing posts on masking the characters with <code>getpass()</code> ... just wanted to know other than , is there any possibility to do masking without that <code>getpass()</code></span>
<span class="comment-copy">Thanks @Bhishan for the info üëç</span>
<span class="comment-copy">@devPython you can thank by clicking the up arrow button on the answer. Good luck.</span>
