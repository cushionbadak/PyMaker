<div class="post-text" itemprop="text">
<p>I've been trying for around half an hour now and just cant seem to wrap my head around what im doing wrong here. 
Working Code:</p>
<pre><code>import threading
from time import sleep


def printX():
    threading.Timer(5.0, printX).start()
    print("five")


printX()
while True:
    print("1")
    sleep(1)
</code></pre>
<p>This works, however I need to be able to dynamically assign what the print statement will be along with the delay.
Desired Code:</p>
<pre><code>import threading
from time import sleep


def printX(time, message):
    threading.Timer(int(time), printX).start()
    print(str(message)


printX(time, message)
while True:
    print("Rest of the program continues")
    sleep(1)
</code></pre>
<p>Thanks for any help in advance :).</p>
</div>
<div class="post-text" itemprop="text">
<p><code>threading.Timer</code> could pass arguments with <code>args</code>:</p>
<pre><code>threading.Timer(int(time), printX, (time, message)).start()
</code></pre>
<p>read more on <a href="https://docs.python.org/3/library/threading.html#threading.Timer" rel="nofollow noreferrer">its doc</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative method is to define a class with printX as an inner function.</p>
<pre><code>class thread:

    def __init__(self, time, message):
        self.time = time
        self.message = message

    def printX(self):
        threading.Timer(int(self.time), self.printX).start()
        print(str(self.message))

thread(3,"test message").printX()

while True:
    print("Rest of the program continues")
    sleep(1)
</code></pre>
</div>
<span class="comment-copy">Use the <a href="https://docs.python.org/3/library/threading.html#threading.Timer" rel="nofollow noreferrer"><code>args</code></a> argument:  <code>threading.Timer(time, printX, args=(time, message)).start()</code> -</span>
