<div class="post-text" itemprop="text">
<p>I have a custom class in my Python code, that handles k-means clustering. The class takes some arguments to customize the clustering, however when subtracting two values from a list passed to the class, I get the following error:</p>
<pre><code>    Traceback (most recent call last):
  File "/home/dev/PycharmProjects/KMeans/KMeansApplication.py", line 22, in &lt;module&gt;
    application()
  File "/home/dev/PycharmProjects/KMeans/KMeansApplication.py", line 16, in application
    opt_num_clusters = cluster_calculator.calculate_optimum_clusters()
  File "/home/dev/PycharmProjects/KMeans/ClusterCalculator.py", line 19, in calculate_optimum_clusters
    self.init_opt_line()
  File "/home/dev/PycharmProjects/KMeans/ClusterCalculator.py", line 33, in init_opt_line
    self. m = (self.sum_squared_dist[0] - self.sum_squared_dist[1]) / (1 - self.calc_border)
TypeError: unsupported operand type(s) for -: 'KMeans' and 'KMeans'
</code></pre>
<p>Here is the code of my custom class:</p>
<pre><code>import KMeansClusterer
from math import sqrt, fabs
from matplotlib import pyplot as plp

class ClusterCalculator:
    m = 0
    b = 0
    sum_squared_dist = []
    derivates = []
    distances = []
    line_coordinates = []

    def __init__(self, calc_border, data):
        self.calc_border = calc_border
        self.data = data

    def calculate_optimum_clusters(self):
        self.calculate_squared_dist()
        self.init_opt_line()
        self.calc_distances()
        self.calc_line_coordinates()
        opt_clusters = self.get_optimum_clusters()
        print("Evaluated", opt_clusters, "as optimum number of clusters")
        return opt_clusters


    def calculate_squared_dist(self):
        for k in range(1, self.calc_border):
            kmeans = KMeansClusterer.KMeansClusterer(k, self.data)
            self.sum_squared_dist.append(kmeans.calc_custom_params(self.data, k))

    def init_opt_line(self):
        #here the error is thrown
        self. m = (self.sum_squared_dist[0] - self.sum_squared_dist[1]) / (1 - self.calc_border)
        self.b = (1 * self.sum_squared_dist[0] - self.calc_border*self.sum_squared_dist[0]) / (1 - self.calc_border)

    def calc_y_value(self, x_calc):
        return self.m * x_calc + self.b

    def calc_line_coordinates(self):
        for i in range(1, self.calc_border):
            self.line_coordinates.append(self.calc_y_value(i))

    def calc_distances(self):
        for i in range(1, self.calc_border):
            self.distances.append(sqrt(fabs(self.calc_y_value(i))))
        print("For border", self.calc_border, ", calculated the following distances: \n", self.distances)

    def get_optimum_clusters(self):
        return self.distances.index((max(self.distances)))

    def plot_results(self):
        plp.plot(range(1, self.calc_border), self.sum_squared_dist, "bx-")
        plp.plot(range(1, self.calc_border), self.line_coordinates, "bx-")
        plp.xlabel("Number of clusters")
        plp.ylabel("Sum of squared distances")
        plp.show()
</code></pre>
<p>I append the KMeansClusterer as well, because <code>sum_squared_dist</code> is filled with values of there:  </p>
<pre><code>from sklearn.cluster import KMeans
from matplotlib import pyplot as plp
class KMeansClusterer:
    def __init__(self, clusters, data):
        self.clusters = clusters
        self.data = data

    def cluster(self):
        kmeans = KMeans(n_clusters=self.cluster(), random_state=0).fit(self.data)
        print("Clustered", len(kmeans.labels_), "GTINs")
        for i, cluster_center in enumerate(kmeans.cluster_centers_):
            plp.plot(cluster_center, label="Center {0}".format(i))
        plp.legend(loc="best")
        plp.show()

    def calc_custom_params(self, data_frame, clusters):
        kmeans = KMeans(n_clusters=clusters, random_state=0).fit(data_frame)
        return kmeans

    def cluster_without_plot(self):
        return KMeans(n_clusters=self.cluster(), random_state=0).fit(self.data)
</code></pre>
<p>I cannot imagine why '-' should be unsupported, I trie to subtract two list values of type integer and 1 and a integer variable.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>KMeans.fit()</code> returns a class instance, which implies <code>calc_custom_params()</code> returns a class instance, so your list <code>sum_squared_dist</code> does not contain integers, the elements are objects of the <code>sklearn.cluster.KMeans</code> class.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python cannot automatically subtract classes. You need to implement the <code>__sub__</code> method on your class for python to know how to handle subtracting these classes. You can find the full reference here <a href="https://docs.python.org/3/library/operator.html" rel="nofollow noreferrer">https://docs.python.org/3/library/operator.html</a></p>
</div>
<span class="comment-copy">Please post a minimal complete verifiable example (<a href="https://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a>) and the full traceback (the one obtained from the MCVE).</span>
<span class="comment-copy">this is a construated MVCE, i posted everything that relates to the error and left everything that does not</span>
<span class="comment-copy">Sorry, I overlooked something obviously - time for more coffee I think ;-)</span>
