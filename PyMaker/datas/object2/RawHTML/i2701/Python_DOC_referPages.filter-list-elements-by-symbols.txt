<div class="post-text" itemprop="text">
<p>Hi I want to filter elements with / without <code>-</code>, <code>.</code> into two lists. My code doesn't do the job, it seems run through everything twice and cannot replace both <code>-</code> and <code>.</code> at the same time. Where did I do wrong? </p>
<p>Code:</p>
<pre><code>NO_SYMBOL = []
WITH_SYMBOL = []
SPACE = []
for i in DATA:
    for ch in ['-', '.']:
        if ch in i:
            WITH_SYMBOL.append(i)
            SPACE.append(i.replace(ch, ' '))
        else:
            NO_SYMBOL.append(i)
</code></pre>
<p>Data</p>
<pre><code>['volunteer-abroad',
 'volunteer-abroad.com',
 'volunteer-abroad.ie',
 'volunteer-abroad.org',
 'volunteerabroad']
</code></pre>
<p>My output:</p>
<pre><code>SPACE
['volunteer abroad',
 'volunteer abroad.com',
 'volunteer abroad.ie',
 'volunteer abroad.org',
 'volunteer-abroad com',
 'volunteer-abroad ie',
 'volunteer-abroad org']

NO_SYMBOL
['volunteer-abroad', 'volunteerabroad', 'volunteerabroad']
</code></pre>
<p>I want to get output like these:</p>
<pre><code>SPACE
['volunteer abroad',
 'volunteer abroad com',
 'volunteer abroad ie',
 'volunteer abroad org']

NO_SYMBOL
['volunteerabroad']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are treating those two characters separately, by using a <code>for</code> loop:</p>
<ul>
<li>The first time through the <code>for ch in ['-', '.']:</code> loop, <code>ch</code> is set to <code>'-'</code>. When that character is found in <code>i</code> you create a new string with <code>-</code> removed, and append that to <code>SPACE</code> and <code>i</code> itself is appended to <code>WITH_SYMBOL</code>. If the character is not found you append to <code>NO_SYMBOL</code>.</li>
<li>The second time through the loop, <code>ch</code> is set to <code>'.'</code>, and you do all the same work again.</li>
</ul>
<p>As a result, you always append to either <code>SPACE</code> and <code>WITH_SYMBOL</code>, or to <code>NO_SYMBOL</code> <em>twice</em> for each <code>i</code>.</p>
<p>You need to delay appending until you have processed all the characters in <code>ch</code>, and only when the loop is done decide where to append. You could use a flag variable for that:</p>
<pre><code>for i in data:
    altered = False
    cleaned = i
    for ch in ['-', '.']:
        if ch in clean:
            altered = True
            cleaned = cleaned.replace(ch, ' ')
    if altered:
        SPACE.append(cleaned)
        WITH_SYMBOL.append(i)
    else:
        NO_SYMBOL.append(i)
</code></pre>
<p>You can also just test for <em>either</em> character to be present, and use <code>str.replace()</code> for both. It's safe to do so, <code>str.replace()</code> doesn't care if the character you are replacing is not present at all:</p>
<pre><code>if '-' in i or '.' in i:
    SPACE.append(i.replace('-', ' ').replace('.', ' '))
    WITH_SYMBOL.append(i)
else:
    NO_SYMBOL.append(i)
</code></pre>
<p>Rather than use two <code>.replace()</code> calls you can also use a <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><em>translation table</em> passed to <code>str.translate()</code></a>; this is faster, and much more flexible if you have a variable number of characters to replace. For the latter case, you can use the <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code> function</a> to test for a sequence of characters:</p>
<pre><code>symbols = ['-', '.']  # can be extended later
translation_map = str.maketrans(dict.fromkeys(symbols, ' '))  # map any symbol to a space
for entry in data:    # entry is a nicer name here than i
    # the following loops over symbols until one is found that matches, then 
    # returns True. If no matching symbol is found, False is given instead.
    if any(ch in entry for ch in symbols):
        SPACE.append(entry.translate(translation_map))
        WITH_SYMBOL.append(entry)
    else:
        NO_SYMBOL.append(entry)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You dont need a loop to run twice on the same list instead you can modify the if condidition</p>
<pre><code>NO_SYMBOL = []
WITH_SYMBOL = []
SPACE = []
for i in DATA:
    if '-' in i or '.' in i:
        WITH_SYMBOL.append(i)
        SPACE.append(i.replace('.', ' ').replace('-', ' '))
    else:
        NO_SYMBOL.append(i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the error in your code was found by other answers - but by using a simple RegEx you would get more performance and could easily change it when you have to add new symbols to match:</p>
<pre><code>import re
pattern = re.compile("[-.]")
NO_SYMBOL = []
WITH_SYMBOL = []
SPACE = []

for item in data:
  if pattern.search(item):
    WITH_SYMBOL.append(item)
    SPACE.append(pattern.sub(" ", item))
  else:
    NO_SYMBOL.append(item)
</code></pre>
<p>Online demo <a href="https://repl.it/repls/InfiniteOldlacePress" rel="nofollow noreferrer">here</a></p>
</div>
<span class="comment-copy">Can you figure out why your list might be twice as long as you expected? Look at your loops. Well written question, by the way.</span>
<span class="comment-copy">Well, when <code>i</code> is set to <code>'volunteer-abroad.com'</code>, you first take <code>'-'</code>, create a new string with just <code>-</code> replaced with spaces, and add that to <code>SPACE</code>. You then take <code>.</code> and do the same. Perhaps you need to first take care of all replacements?</span>
