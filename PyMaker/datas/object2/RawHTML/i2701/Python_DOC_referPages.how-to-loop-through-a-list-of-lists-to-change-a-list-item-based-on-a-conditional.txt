<div class="post-text" itemprop="text">
<p>I have the following sample python code that works, but I need to convert the series of IF statements to a for loop to scale for a much larger list. Just not sure how. Any help is greatly appreciated. </p>
<pre><code>my_list = [[1,2,y,5],[5,6,y,4],[9,4,n,3],[3,2,n,5]]

if my_list[0][2] == y:
    my_list[0][4]= some_new_value
if my_list[1][2] == y:
    my_list[1][4]= some_new_value
if my_list[2][2] == y:
    my_list[2][4]= some_new_value
if my_list[3][2] == y:
    my_list[3][4]= some_new_value
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This solution should fit a more broad set of cases (for example, if the variable you want to replace does not always fall in the index 2 position):</p>
<pre><code>[[some_new_value if i==y else i for i in each_list] for each_list in my_list]
</code></pre>
<p>Here is your example (with sample inputs):</p>
<pre><code>y = 'y'
n = 'n'
some_new_value = 'NEW'

my_list = [[1,2,y,5],[5,6,y,4],[9,4,n,3],[3,2,n,5]]

output = [[some_new_value if i==y else i for i in each_list] for each_list in my_list]
</code></pre>
<p>Which gives:</p>
<pre><code>[[1, 2, 'NEW', 5], [5, 6, 'NEW', 4], [9, 4, 'n', 3], [3, 2, 'n', 5]]
</code></pre>
<p>And here is another sample input, where the values are not always located in the same index position (or if there are multiple occurrences) for each list in your list of lists:</p>
<pre><code>my_list = [[1,y,2,5],[y,6,y,4],[9,4,n,y],[y,2,n,5]]
</code></pre>
<p>Which gives:</p>
<pre><code>[[1, 'NEW', 2, 5], ['NEW', 6, 'NEW', 4], [9, 4, 'n', 'NEW'], ['NEW', 2, 'n', 5]]
</code></pre>
<p><strong>EDIT</strong></p>
<p>Modified answer to change the last element in each list if y is present anyway in the list:</p>
<pre><code>[i[:-1] + [some_new_value] if y in i else i for i in my_list]
</code></pre>
<p>If it will always be located at index 2, then you can do:</p>
<pre><code>[i[:-1] + [some_new_value] if i[2]==y else i for i in my_list]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for item in my_list:
    if item[2] == y:
        item[4] = some_new_value
</code></pre>
</div>
<span class="comment-copy"><a href="http://idownvotedbecau.se/noresearch/" rel="nofollow noreferrer">idownvotedbecau.se/noresearch</a>  Since you don't know how, can you share what you researched, tried, and found to not accomplish what you are looking for?</span>
<span class="comment-copy">See the python tutorial: parts <a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow noreferrer">4.2 (for loops)</a> and <a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function" rel="nofollow noreferrer">4.3 (the <code>range</code> function)</a></span>
<span class="comment-copy">Also <a href="https://docs.python.org/3.7/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a>.</span>
<span class="comment-copy">Will the variable you are trying to replace always be in the index <code>2</code> position?</span>
<span class="comment-copy">I assume you defined <code>y</code>, <code>n</code> and <code>some_new_value</code> in earlier code. However, <code>my_list[0][4]= some_new_value</code> etc won't work: it will raise <code>IndexError: list assignment index out of range</code> since those sublists are all of length 4, so the highest valid index is 3.</span>
<span class="comment-copy">Your solution works great, the conditional index will always be in the same position, but I need to change the last element in the sublist not the item being checked. For example: my_list = [[1,2,'y',3]....] if mylist[0][2] == 'y' then the output should be my_list = [[1,2,'y',some_new_value]....]</span>
<span class="comment-copy">Oh I see. Appreciate your clarification, I will update my answer.</span>
<span class="comment-copy">That's awesome, thanks.</span>
