<div class="post-text" itemprop="text">
<pre><code>def concordance(string, search_term, width=80):
    offset = 0
    indexes = []

  while offset &lt; len(string):
    try:

        position = string[offset:].lower().index(search_term.lower())
    except ValueError:

        break
    if position:
        indexes.append(position + offset)

        offset += position + len(search_term)
   return tuple(string[index-width:index+width+len(search_term)] 

string = 'The relationship between beef and beef broth, is not like the 
relationship between beef and beef-broth, a simpler extraction and 
condensation; rather, as Einstein goes on, it is like the relationship 
between our overcoat and the ticket given us when we check our overcoat. In 
other words, human perception involves coding even more than crude 
sensing.just as a map-maker colors a nation purple not because it is purple 
but because his code demands it."  
</code></pre>
<p>when i attempted to call out the concordance function with the search_term being 'and', the result not only returns 'and', but it also returns words that have and in them such as 'demand'. How can i change my code so that it only returns 'and'?</p>
</div>
<div class="post-text" itemprop="text">
<p>as mentioned in the comments: you could try to use the <a href="https://docs.python.org/3/library/re.html?highlight=regex" rel="nofollow noreferrer"><code>re</code> module</a>. here i try to match your <code>search_term</code> only if it is surrounded by characters that are not in <code>[a-zA-Z0-9_]</code> (not sure if that suits your intentions best...):</p>
<pre><code>import re

def concordance(strg, search_term, width=5):
    ret = []
    # \W Matches any character which is not a word character. 
    # ~ anything that is not [a-zA-Z0-9_]
    rgx = re.compile('\W{}\W'.format(search_term))
    match_end = 0
    while True:
        match = rgx.search(strg, match_end)
        if match is None:
            break
        ret.append(strg[match.start()+1-width:match.end()-1+width])
        match_end = match.end()
    return ret


print(concordance(strg, 'and'))  
# ['beef and beef', 'beef and beef', 'tion and\ncond', 'coat and the ']
</code></pre>
</div>
<span class="comment-copy">Maybe if you add a space before and an other after the keyword ?</span>
<span class="comment-copy">dude you are amzing boi &lt;3</span>
<span class="comment-copy">if you need to refine your search (i.e. search for a word that is surrounded by non-letters) you might want to condiser the <a href="https://docs.python.org/3/library/re.html?highlight=regex" rel="nofollow noreferrer"><code>re</code> module</a>.</span>
<span class="comment-copy">Hi the code works after adding the space before and after, i just have a follow up question. Lets say the width in this case is 80, how do i ensure that the width of the entire sentence is 80, rather than 80 being the width of the string of words before the keyword AND after the keyword, making the actual width of the entire sentence 160.</span>
