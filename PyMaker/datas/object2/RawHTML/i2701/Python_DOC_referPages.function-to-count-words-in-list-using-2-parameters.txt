<div class="post-text" itemprop="text">
<p>Hi i am trying to create a function to count the word occurence in a list of text to produce the result as ['a','1'], ['b' ,'4'] , ['c' , '5']......</p>
<p>this is what i tried to do but its not working and i have not learn the count function yet.</p>
<pre><code>file_name = input('what file would you like to open? : ')
objecthere = open(file_name,'r')
argument = objecthere.read()
word_list = argument.split()


def word_frequency(words_from_list, word_frequency):
    new_list = []
    for word in word_list:
        if word in word_list:
            new_list.index(word)[1] += 1
        else:
            new_list.append([word,0])
    print(new_list)
</code></pre>
<p>Am i on the right track or is there another way?  </p>
<p>Edited : Im trying to figure out how do i use the function call in the way that word_frequency(word_list,3) will give me the top 3 word occurence like ['c','3'],['b' , '2'] , ['a' , '1']. Any help or input will be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Maybe try dictionary.</p>
<pre><code>def word_frequency(words_from_list, word_frequency):
    dic = {}
    for word in word_list:
        if word in dic:
            dic[word] += 1
        else:
            dic[word] = 1
    # You can convert tuple pairs to list and sort it like @glitch did.
    print(list(dic.items()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am on mobile so I can't check but I believe you've names the wrong list when checking for the occurrence in your result list:</p>
<pre><code>def word_frequency(words_from_list, word_frequency):
    new_list = [] 
    for word in word_list:
        if word in word_list:
            new_list.index(word)[1] += 1
        else:
            new_list.append([word,0])
    print(new_list)
</code></pre>
<p>Correction:</p>
<pre><code>def word_frequency(words_from_list, word_frequency):
    new_list = [] 
    for word in word_list:
        if word in new_list:
            new_list.index(word)[1] += 1
        else:
            new_list.append([word,0])
    print(new_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As suggested by <a href="https://stackoverflow.com/users/4381487/gilch">gilch</a> we can use Collection.Counter and split to make list</p>
<pre><code>from collections import Counter
lst = 'what file would you like to open? : '.split()
Counter(lst)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; word_list = ['a','b','b','c','c','c','d']
&gt;&gt;&gt; Counter(word_list).most_common()
[('c', 3), ('b', 2), ('a', 1), ('d', 1)]
</code></pre>
<p>This pairs them using tuples, which is probably fine for your purposes, but if you want them as lists of strings, </p>
<pre><code>&gt;&gt;&gt; [[k, str(v)] for k, v in _]
[['c', '3'], ['b', '2'], ['a', '1'], ['d', '1']]
</code></pre>
<p>And if you prefer them alphabetical instead of in frequency order,</p>
<pre><code>&gt;&gt;&gt; [*sorted(_)]
[['a', '1'], ['b', '2'], ['c', '3'], ['d', '1']]
</code></pre>
</div>
<span class="comment-copy">Try <a href="https://docs.python.org/3/library/collections.html?highlight=collections#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>.</span>
<span class="comment-copy">Obviously, <code>word</code> <i>is</i> <code>in word_list</code>, since that's where you got it from in the first place. So that if-statement isn't doing anything useful.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/2612802/how-to-clone-or-copy-a-list">How to clone or copy a list?</a></span>
<span class="comment-copy">If you're on Andriod, you can run Python as an app like <a href="https://play.google.com/store/apps/details?id=org.qpython.qpy3" rel="nofollow noreferrer">QPython3</a>, or in a shell app like <a href="https://play.google.com/store/apps/details?id=com.termux" rel="nofollow noreferrer">Termux</a>. They're free.</span>
<span class="comment-copy">Ah, good to know, thank you!</span>
