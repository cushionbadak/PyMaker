<div class="post-text" itemprop="text">
<p>User provides input with spaces: </p>
<pre><code>row = list(input())

print(row)

['1','2','3',' ','4','5','6',' ','7','8','9',' ']
</code></pre>
<p>So I need to create 'row' list into the below. The list is divided into sub-lists based on whitespace:</p>
<pre><code>[['1','2','3'],['4','5','6'],['7','8','9']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>str.split</code> to split by whitespace:</p>
<pre><code>myinput = '123 456 789'
row = list(map(list, myinput.split()))

print(row)

[['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]
</code></pre>
<p>Alternatively, using a list comprehension:</p>
<pre><code>row = [list(i) for i in myinput.split()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use<a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split</code></a> to split the input on spaces to give a list of sub-strings.</p>
<p><em>E.g. <code>'123 456 789'</code> would become <code>['123', '456', '789']</code>.</em></p>
<p>Then use a <a href="https://www.python.org/dev/peps/pep-0202/" rel="nofollow noreferrer">list-comprehension</a> to convert these strings into lists of characters with the <code>list()</code> constructor (as you are already familiar with).</p>
<p>Making the final code:</p>
<pre><code>row = [list(s) for s in input().split()]
#[['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Starting with your list rather than the string, you can do that using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">itetools.groupby</a>:</p>
<pre><code>from itertools import groupby

row = ['1','2','3',' ','4','5','6',' ','7','8','9',' ']

out = [list(group) for key, group in groupby(row, lambda x: x != ' ') if key]
print(out)
# [['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]
</code></pre>
<p>We group the values depending on whether or not they are spaces, and only keep the groups that are not made of spaces.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>abc=['1','2','3',' ','4','5','6',' ','7','8','9',' ']
newList=list()
temp=list()
for i in abc:
    if(i==' '):
      newList.append(temp)
      temp=list()
    else:
      temp.append(i)
print(newList)
</code></pre>
<p>Output:</p>
<pre><code>[['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']]
</code></pre>
</div>
<span class="comment-copy">add input sample for your snippet</span>
<span class="comment-copy">I consider list-comprehensions more readable, but this get's the job done :) +1</span>
<span class="comment-copy"><code>groupby(row, str.isdigit)</code> or <code>str.isspace</code> and <code>if not key</code></span>
