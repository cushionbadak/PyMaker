<div class="post-text" itemprop="text">
<pre><code>def fre(dic, k):
    max_k = dic.keys()[0]
    max_v = dic.values()[0]
    while len(dic2) &lt; k:
        for key, value in dic.items():
            if max_v &lt; value:
                max_k = key
                max_v = value

        dic2[max_k] = max_v
        del dic[max_k]
    return dic2
# dic is a dictionary, k is an int
</code></pre>
<p>This question is to get the k biggest value in dic and get the matched key :value pairs. But I got running problem and got KeyError: 1.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that, each time through the loop, you leave <code>max_k</code> and <code>max_v</code> to the key-value pair you just found. </p>
<p>Since that was the maximum value, no other value in the dictionary will be larger. So at the end of the loop, you'll still have the same <code>max_k</code> and <code>max_v</code>. And then you'll try to <code>del dic[max_k]</code> again, and it raises a <code>KeyError</code>, because you already deleted it.</p>
<p>The solution is simple: take the code that sets <code>max_k</code> and <code>max_v</code> to the first element, and move it into the outer loop, so it runs every time instead of just the first time:</p>
<pre><code>while len(dic2) &lt; k:
    max_k = dic.keys()[0]
    max_v = dic.values()[0]

    for key, value in dic.items():
        if max_v &lt; value:
            max_k = key
            max_v = value

    dic2[max_k] = max_v
    del dic[max_k]
</code></pre>
<hr/>
<p>But, while we're at it, there are easier (or at least harder-to-get-subtly-wrong) ways to do this.</p>
<p>The most obvious is to just <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer">sort the items by value</a>, then take the first <code>k</code>:</p>
<pre><code>import operator

def fre(dic, k):
    return dict(sorted(dic.items(), key=operator.itemgetter(1), reverse=True)[:k])
</code></pre>
<p>For more on how key functions work, and that <code>itemgetter</code>, see the <a href="https://docs.python.org/3/howto/sorting.html" rel="nofollow noreferrer">Sorting HOWTO</a>.</p>
<p>But you can make this more efficient. <code>sorted</code> obviously has to sort all <code>n</code> values, just to get the top <code>k</code>, so it takes <code>O(n)</code> space and <code>O(n log n)</code> time. If <code>k</code> is a lot smaller than <code>n</code>, you can do a lot better by using <a href="https://docs.python.org/3/library/heapq.html#heapq.nlargest" rel="nofollow noreferrer"><code>heapq.nlargest</code></a>, which takes only <code>O(k)</code> space and <code>O(n log k)</code> time:</p>
<pre><code>import heapq
import operator

def fre(dic, k):
    return dict(heapq.nlargest(k, dic.items(), key=operator.itemgetter(1)))
</code></pre>
<p>Either way, this doesn't delete the keys from <code>dic</code>; if you need that, you can do that manually:</p>
<pre><code>def fre(dic, k):
    dic2 = dict(heapq.nlargest(k, dic.items(), key=operator.itemgetter(1)))
    for key in dic2:
        del dic[key]
    return dic2
</code></pre>
</div>
<span class="comment-copy">After you <code>del dic[max_k]</code>, in the next iteration of the <code>while</code> loop, <code>max_k</code> starts with the same value, you don't find any other better key in your dictionary, and then you try and delete it again.</span>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation, as suggested when you created this account.  <a href="http://stackoverflow.com/help/mcve">Minimal, complete, verifiable example</a> applies here.  We cannot effectively help you until you post your MCVE code and accurately describe the problem.   We should be able to paste your posted code into a text file and reproduce the problem you described. This problem probably involves the values in the dictionary you passed in -- which you failed to include in your posting.  Also give us the full error message.</span>
<span class="comment-copy">You should <i>always</i> post the entire traceback and error message when asking questions about exceptions.</span>
