<div class="post-text" itemprop="text">
<p>i am trying to copy line from text file in zip folder by matching partial string,
zip folders are in a shared folder
is there a way to copy strings from text files and send it to one output text file.
how to do it using python..
is it possible with zip_archive?</p>
<p>i tried using this, with no luck.</p>
<pre><code>zf = zipfile.ZipFile('C:/Users/Analytics Vidhya/Desktop/test.zip') 
# having First.csv zipped file.
df = pd.read_csv(zf.open('First.csv'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Unlike <em>@strava</em> answer, you don't actually have to extract... <code>zipfile</code> gives you excellent <a href="https://docs.python.org/3/library/zipfile.html" rel="nofollow noreferrer">API</a> for manipulating files. Here is a simple example of reading each file inside a simple zip (I zipped only one <code>.txt</code> file):</p>
<pre><code>import zipfile
zip_path = r'C:\Users\avi_na\Desktop\a.zip'
niddle = '2'

zf = zipfile.ZipFile(zip_path) 
for file_name in zf.namelist():
    print(file_name, zf.read(file_name))
    if(niddle in str(zf.read(file_name))):
        print('found substring!!')
</code></pre>
<p>output:</p>
<pre><code>a.txt b'1\r\n2\r\n3\r\n'
found substring!!
</code></pre>
<p>Using this example you can easily elaborate and read each one of the files, search the text for your string, and write it to output file.</p>
<p>For more info, check <code>printdir, read, write, open, close</code> members of <code>zipfile.ZipFile</code></p>
<p>If you just want to extract and then use <code>pd.read_csv</code>, that's also fine:</p>
<pre><code>import zipfile
zip_path = r'...\a.zip'
unzip_dir = "unzip_dir"

zf = zipfile.ZipFile(zip_path) 
for file_name in zf.namelist():
    if '.csv' in file_name: # make sure file is .csv
        zf.extract(file_name, unzip_dir)
        df = pd.read_csv(open("{}/{}".format(unzip_dir,file_name)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here it is a script that does what <em>I suppose</em> you need — please note that we DO NOT need <code>pandas</code> if we want to simply match a string against a line's content, it'd be different if you want to match on a specific field, a numerical value etc — hence I am not using <code>pandas</code>...</p>
<pre><code>$ cat zip.py
from sys import argv
from zipfile import ZipFile
'''
Usage python zip.py string ziparchive1 [ziparchive2 ...]
'''

def interesting(fn):
    # just an example
    return fn[-4:].lower() == '.csv'

script, text, zips = argv

if len(argv) == 3:
    # if 3 arguments, 'zips' is a string and iterating (below) on a
    # string gives us the individual characters in it, not exactly
    # what we want, hence we force it to be a list
    zips = [zips]

# iterate on archives' names    
for arch_name in zips:
    # instance a zipfile object
    archive = ZipFile(arch_name)
    # iterate on the names of contained files
    for file_name in archive.namelist():
        # skip directories
        if file_name[-1] == '/': continue
        if interesting(file_name):
            line_no = 0
            for line in archive.open(file_name):
                line_no += 1
                if text in line:
                    # here I just print the matching line, if you need
                    # something more complex you can use the
                    # 'arch_name', the 'file_name' and the 'line_no'
                    # to pinpoint the position of the matching line
                    print(line)
$ 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could try extracting them first, and then treating them as normal csv files</p>
<pre><code>zf = zipfile.ZipFile( path to zip )
zf.extract('first.csv', path to save directory )
file = open('path\first.csv')
</code></pre>
</div>
<span class="comment-copy">What's the problem your having? Is there an error message?</span>
<span class="comment-copy">I have duplicated what you have shown (opening a ZIP archive and reading a CSV file using <code>pandas</code>) and it works <i>perfectly</i>, could you please be more explicit with the problems you are facing?  is it a problem with <code>zipfile</code>, is it a problem with <code>pandas</code> or, as I suspect, is it a problem with accessing and using the file content?</span>
<span class="comment-copy">In the last part of your answer you have written <code>df = pd.read_csv(zf.open(...</code> but shouldn't it be a plain <code>pd.read_csv(open(...</code> as you have already extracted the file?</span>
<span class="comment-copy">Thanks! <code>zf</code> must have slipped in and I overlooked it :-)</span>
<span class="comment-copy">i have tried this with few changes but i am getting error.     script, text, zips = argv ValueError: not enough values to unpack (expected 3, got 1)</span>
<span class="comment-copy">It seems that you may have missed the line <i>"Usage: python zip.py string ziparchive1 [ziparchive2 ...]"</i> that explains how to invoke the script... The script expects at least 3 arguments on the command line. ① by convention, the first argument is the script name ② the string that you want to match ③ the filename of the first ZIP archive to search.  If you want to search more  ZIP archives you just name them on the command line (as exemplified in the <i>Usage</i> line).  Also a wildcard works, as long as it is expanded by the shell, <code>$ python zip.py 'hole' arch0?.zip</code>  acts on <code>archo1.zip</code>, etc.</span>
