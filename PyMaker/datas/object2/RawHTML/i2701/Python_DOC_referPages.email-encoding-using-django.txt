<div class="post-text" itemprop="text">
<p>My webapp stores Hebrew text in a Postgres DB and later sends it as an email.
I can see that the text is stored well in the DB, but when sent as an email it look like gibberish:</p>
<blockquote>
<p>×¢×•×‘×“ ×™×§×¨, ×–×”×• ×˜×¡×˜ ×©×œ ×”×”×ª×¨××•×ª ×”× ×©×œ×—×•×ª
  ×‘×¢×‘×¨×™×ª.</p>
</blockquote>
<p>I'm using urlllib to unquote the text from the DB</p>
<pre><code>urllib.unquote(text)
</code></pre>
<p>and EmailSender to send the email:</p>
<pre><code>EmailSender().send_html(
    "my email subject",
    email_content,
    [email],
    headers=headers,
    fail_silently=True
)
</code></pre>
<p>What can be causing that?</p>
</div>
<div class="post-text" itemprop="text">
<p>It's probably happening because the source text is in UTF-8, not in ASCII. </p>
<p>You should take a look at <a href="https://docs.djangoproject.com/en/dev/ref/unicode/#useful-utility-functions" rel="nofollow noreferrer">Useful utility functions</a>.</p>
<p>There you will find the <code>smart_text()</code> method, which I think will solve your problem by converting your <code>email_content</code>.</p>
<hr/>
<p>You could also use the encode/decode approach.</p>
<p>Read <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow noreferrer">Standard Encodings</a> and try:</p>
<p><code>email_content.encode("your_encoding").decode("utf-8")</code></p>
</div>
<span class="comment-copy">Is there any specific motive for use of <b>urllib</b>?</span>
<span class="comment-copy">Which <a href="https://www.postgresql.org/docs/current/static/multibyte.html" rel="nofollow noreferrer">encoding</a> are you using with your Postgres DB?</span>
