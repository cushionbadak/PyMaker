<div class="post-text" itemprop="text">
<p>I have a problem. I need to kill the batch file using the python script residing within the same batch file. The batch file has <strong>abc.py</strong> script as the first one along with other scripts. So I need to kill the batch file so that others don't get executed. Here is what I have tried:</p>
<pre class="lang-py prettyprint-override"><code>for proc in psutil.process_iter():
     if proc.name() == "python.exe" and len(proc.cmdline()) &gt; 1 and 
         "abc.py" in proc.cmdline()[1]:
    proc.terminate()
</code></pre>
<p>But this only kills the python script, not the batch file. Tried killing the pid  with the same effect.</p>
<pre class="lang-py prettyprint-override"><code>os.system("taskkill /F /PID " + str(os.getpid()))
</code></pre>
<p><strong>Edit 1</strong>
The script checks for existence of another running script and then needs to terminate itself.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're just looking to kill whoever your parent is, that's easy: just use <a href="https://docs.python.org/3/library/os.html#os.getppid" rel="nofollow noreferrer"><code>os.getppid()</code></a> instead of <code>os.getpid()</code>:</p>
<pre><code>os.system("taskkill /F /PID " + str(os.getppid()))
</code></pre>
<p>Of course it's better to use <code>subprocess</code> instead of <code>os.system</code> for all the usual reasons, like getting a useful error if it fails:</p>
<pre><code>subprocess.run(['taskkill', '/F', '/PID', str(os.getppid())])
</code></pre>
<p>Or, even better, don't use <code>taskkill</code>, just <a href="https://docs.python.org/3/library/os.html#os.kill" rel="nofollow noreferrer"><code>kill</code></a> it directly. This also gives you the option of using a nicer <a href="https://docs.python.org/3/library/signal.html#signal.CTRL_C_EVENT" rel="nofollow noreferrer">Ctrl-C or Ctrl-Break</a> kill instead of a hard kill, if preferred:</p>
<pre><code>os.kill(os.getppid(), signal.CTRL_BREAK_EVENT)
</code></pre>
<hr/>
<p>If you're using Python 2.7, <code>getppid</code> doesn't work on Windows; that was only added in 3.2. (And I think the same is true for <code>os.kill</code>, and definitely for <code>signal.CTRL_BREAK_EVENT</code>.) </p>
<p>Since you're already apparently amenable to using <code>psutil</code>, you can use that.</p>
<p>There's no need to search through every process on the system to find yourself, just construct a default <a href="https://psutil.readthedocs.io/en/latest/#psutil.Process" rel="nofollow noreferrer"><code>Process</code></a>. And you can go from any process to its parent with <a href="https://psutil.readthedocs.io/en/latest/#psutil.Process.parent" rel="nofollow noreferrer"><code>parent</code></a>. And then you can use the <a href="https://psutil.readthedocs.io/en/latest/#psutil.Process.kill" rel="nofollow noreferrer"><code>kill</code></a> or <a href="https://psutil.readthedocs.io/en/latest/#psutil.Process.terminate" rel="nofollow noreferrer"><code>terminate</code></a></p>
<pre><code>proc = psutil.Process().parent()
proc.kill()
</code></pre>
<hr/>
<p>All of the above, except using <code>CTRL_C_EVENT</code> or <code>CTRL_BREAK_EVENT</code> instead of a standard signal), have the nice advantage of being cross-platform—you can run the same script on Linux or macOS or whatever and it'll kill the shell script that ran it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your batch file will need to check whether the last command succeeded and exit if it didn't.</p>
<p>See <a href="https://stackoverflow.com/questions/734598/how-do-i-make-a-batch-file-terminate-upon-encountering-an-error">How do I make a batch file terminate upon encountering an error?</a></p>
</div>
<span class="comment-copy">Not a solution, but an alternative. See <a href="https://stackoverflow.com/questions/11907163/how-can-i-stop-a-programs-execution-with-python" title="how can i stop a programs execution with python">stackoverflow.com/questions/11907163/…</a> .</span>
<span class="comment-copy">Try using <a href="https://stackoverflow.com/questions/12978013/need-to-find-which-program-called-the-python-script" title="need to find which program called the python script">stackoverflow.com/questions/12978013/…</a> or <a href="https://stackoverflow.com/questions/1728330/how-to-get-processs-grandparent-id/4229596" title="how to get processs grandparent id">stackoverflow.com/questions/1728330/…</a> .</span>
<span class="comment-copy">sys.exit() terminates abc.py but not the others. I need to kill the batch file.</span>
<span class="comment-copy">I need to kill the batch file programatically. So cannot use process explorer.</span>
<span class="comment-copy">Thanks for the wonderful explanation. I wanted  a programmatic solution. It works!!</span>
<span class="comment-copy">@MallikKumar One thing: this will kill <i>whoever</i> its parent is. If, say, you accidentally run this program from your IDE, it'll kill your IDE. Is that a problem?</span>
<span class="comment-copy">not at all...it runs on a cmd prompt.</span>
<span class="comment-copy">Summarize the link here</span>
<span class="comment-copy">I don't get an error. Please see  Edit 1</span>
<span class="comment-copy">@user202729 ..try except sys.exit()</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/9426045/difference-between-exit0-and-exit1-in-python" title="difference between exit0 and exit1 in python">stackoverflow.com/questions/9426045/…</a></span>
<span class="comment-copy">@user202729 I know the difference between exit(0) and exit(1)</span>
