<div class="post-text" itemprop="text">
<p>List all the files having ext .txt in the current directory .</p>
<pre><code>L = [txt for f in os.walk('.') 
            for txt in glob(os.path.join(file[0], '*.txt'))]
</code></pre>
<p>I want to avoid files from <strong>one specific directory and its subdirectories</strong> . Lets say I do not want to dig into <code>folder3</code> and its available subdirectories to get the <code>.txt</code> files. I tried below</p>
<pre><code>d = list(filter(lambda x : x != 'folder3', next(os.walk('.'))[1]))
</code></pre>
<p>but further steps not able to figure it out.How to include both to work together?</p>
<p><strong>EDIT</strong>:</p>
<p>I tried referring the link provided as already answered query but I am unable to get desired output with below and surprisingly getting empty list as output for <code>a</code></p>
<pre><code>a=[]
for root, dirs, files in os.walk('.'):
  dirs[:] = list(filter(lambda x : x != 'folder3', dirs)) 
  for txt in glob(os.path.join(file[0], '*.txt')): 
      a.append(txt)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following solution seems to be working, any directory specified in the exclude set will be ignored, any extension in the extensions set will be included.</p>
<pre><code>import os

exclude = set(['folder3'])
extensions = set(['.txt', '.dat'])
for root, dirs, files in os.walk('c:/temp/folder', topdown=True):
    dirs[:] = [d for d in dirs if d not in exclude]
    files = [file for file in files if os.path.splitext(file)[1] in extensions]
    for fname in files:
        print(fname)
</code></pre>
<p>This code uses the option <code>topdown=True</code> to modify the list of dir names in place as specified in the <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>When topdown is True, the caller can modify the dirnames list in-place
  (perhaps using del or slice assignment), and walk() will only recurse
  into the subdirectories whose names remain in dirnames; this can be
  used to prune the search</p>
</blockquote>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/19859840/excluding-directories-in-os-walk">Excluding directories in os.walk</a></span>
<span class="comment-copy">Its kind of duplicate but seems doesnot serves my purpose as per my requirement and the above code but let me try ..</span>
<span class="comment-copy">@Isma The link referred by you is not helping me with my code .Need Help.</span>
<span class="comment-copy"><code>a=[]  for root, dirs, files in os.walk('.'):         dirs[:] = list(filter(lambda x : x != 'folder3', dirs))     for pdf in glob(os.path.join(file[0], '*.txt')):         a.append(txt)</code> <code>a</code> is giving empty list as output, however there are other folders available. @Isma</span>
<span class="comment-copy">@Isma I think <code>for pdf in glob(os.path.join(file[0], '*.txt')</code> needs to be fixed so that it should avoid  digging <code>folder3</code></span>
<span class="comment-copy">What is splittext? Can it be done for other filetype?</span>
<span class="comment-copy">That's to get the extension. Check the last edit, you can now specify multiple extensions.</span>
<span class="comment-copy">The documentation for <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk</code></a> explicitly says that if <code>topdown=True</code> (which is the default) then modifying the <code>dirs</code> directory achieve what the OP wants. You could probably add a quote to the docs to clarify that this is not an accident...</span>
<span class="comment-copy">Thanks for the elobrate answer. I found this also working from one of the recent stack post  <code>for root, dirs, files in os.walk('.'):    if "folder3" not in root:        for file in files:             if file.endswith(".txt"):                 print (os.path.join(root, file))</code> .  The answer you provided is very helpful if we have to ignore multiple directories.</span>
<span class="comment-copy">Yes, the intention is that - if my code is in <code>Desktop</code> and  inside it I have multiple folders and their respective subfolders. but let me give that a try</span>
