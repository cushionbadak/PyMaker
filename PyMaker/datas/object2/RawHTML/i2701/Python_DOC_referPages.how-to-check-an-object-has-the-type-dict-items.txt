<div class="post-text" itemprop="text">
<p>In Python 3, I need to test whether my variable has the type 'dict_items', so I tried something like that :</p>
<pre><code>&gt;&gt;&gt; d={'a':1,'b':2}
&gt;&gt;&gt; d.items()
dict_items([('a', 1), ('b', 2)])
&gt;&gt;&gt; isinstance(d.items(),dict_items)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'dict_items' is not defined
</code></pre>
<p>But <code>dict_items</code> is not a known type. it is not defined in <code>types</code> module neither. How can I test an object has the type <code>dict_items</code> (without consuming data) ?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.abc.html#collections.abc.ItemsView" rel="nofollow noreferrer"><code>collections.abc</code></a>:</p>
<pre><code>from collections import abc

isinstance(d.items(), abc.ItemsView)  # True
</code></pre>
<p>Note, as per @schwobaseggl's comment, that <code>dict_items</code> is a <em>subclass</em> of <code>abc.ItemsView</code>, rather than the <em>same</em> class. For greater precision, you can use:</p>
<pre><code>isinstance(d.items(), type({}.items()))
</code></pre>
<p>To clarify the above, you can use <code>issubclass</code>:</p>
<pre><code>issubclass(type(d.items()), abc.ItemsView)  # True
issubclass(abc.ItemsView, type(d.items()))  # False
</code></pre>
</div>
<span class="comment-copy">Related reading: <a href="https://stackoverflow.com/q/47273297/18771">stackoverflow.com/q/47273297/18771</a></span>
<span class="comment-copy">There's no way to get it directly, you could either use <code>type({}.items())</code> or use <code>abc.ItemsView</code> which basically does the <a href="https://github.com/python/cpython/blob/3.7/Lib/_collections_abc.py#L53" rel="nofollow noreferrer">same thing internally</a>. Many other types under <a href="https://github.com/python/cpython/blob/3.7/Lib/types.py" rel="nofollow noreferrer"><code>types</code> module</a> are also defined in the same way.</span>
<span class="comment-copy">This is more generous, however, than e.g. <code>isinstance(d.items(), type({}.items()))</code> since <code>ItemsView</code> is a superclass of <code>dict_items</code>. That may or may not be what the OP wants.</span>
<span class="comment-copy">@schwobaseggl, That is a very fair comment, have updated.</span>
