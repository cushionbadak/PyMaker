<div class="post-text" itemprop="text">
<p>I guess I'm not the first asking this question, but I haven't found a solution that I could use/understand yet. And the issue is probably not as simple as i first expected.</p>
<p>I think it can be boiled down to two general questions:</p>
<p>1) Is there a way to avoid Python to stop when an error occur and just jump on to the next line of code in the script?</p>
<p>2) Is there a way to make Python execute a line of code if an error occurs? Like, if error then...</p>
<p>My concrete problem:
I have a very large program with a lot of functions and other stuff, which would take forever to adjust individually by using "try" for example (if i understand it correctly)</p>
<p>My program run as a large loop that gather information and keeps running. This means that it does not really matter to me, that my program fails multiple time as long as it keeps running. I can easily handle that some of the information is with error and would just like my program to take a note of it and keep going.</p>
<p>Is there a solution to this?</p>
</div>
<div class="post-text" itemprop="text">
<p>As you rightly pointed out, the <code>try/catch</code> block in Python is by far your best ally:</p>
<pre><code>for i in range(N):
    try: do_foo()  ; except: do_other_foo()
    try: do_bar()  ; except: do_other_bar()
</code></pre>
<p>Alternatively, you could also use, in case you didn't need the Exception:</p>
<pre><code>from contextlib import suppress

for i in range(N):
    with suppress(Exception):
        do_foo()
    with suppress(Exception):
        do_bar()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your only possibility is to rely on the <code>try/except</code> clause. Keep in mind that the <code>try/except</code> may use also <code>finally</code> and <code>else</code> (see <a href="https://docs.python.org/3/reference/compound_stmts.html#try" rel="nofollow noreferrer">documentation</a>:</p>
<pre><code>try:
    print("problematic code - error NOT raised")
except:
    print("code that gets executed only if an error occurs")
else:
    print("code that gets executed only if an error occurs")
finally:
    print("code that gets ALWAYS executed")
# OUTPUT:
# problematic code - error NOT raised
# code that gets executed only if an error occurs
# code that gets ALWAYS executed
</code></pre>
<p>or, when an error is raised:</p>
<pre><code>try:
    print("problematic code - error raised!")
    raise "Terrible, terrible error"
except:
    print("code that gets executed only if an error occurs")
else:
    print("code that gets executed only if an error occurs")
finally:
    print("code that gets ALWAYS executed")
# OUTPUT:
# problematic code - error raised!
# code that gets executed only if an error occurs
# code that gets ALWAYS executed
</code></pre>
<p>I urge to point out, by the way, that <em>ignoring everything</em> makes me shiver:<br/>
you really should (at least, <em>more or less</em>) identify which exception can be raised, catch them (<code>except ArithmeticError: ...</code>, check <a href="https://docs.python.org/3/library/exceptions.html" rel="nofollow noreferrer">built-in exceptions</a>) and handle them individually. What you're trying to do will probably snowball in an endless chain of problems, and ignoring them will probably create more problems!</p>
<p>I think that <a href="https://www.tutorialspoint.com/python/python_exceptions.htm" rel="nofollow noreferrer">this question</a> helps to understand what a <em>robust software</em> is, meanwhile on <a href="https://stackoverflow.com/questions/730764/how-to-properly-ignore-exceptions">this one</a> you can see how SO community thinks python exceptions should be handled</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/26059424/on-error-resume-next-in-python">On Error Resume Next in Python</a></span>
<span class="comment-copy">Have you even tried anything? Ever had a look at <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">Python Docs - Error Handling</a> ?</span>
