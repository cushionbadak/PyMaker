<div class="post-text" itemprop="text">
<p>I'm working on plotting some time series data; I have a very long time series (~68k lines). I've got a small helper functions that grabs a small subset by slicing the list, performs some analysis, then plots the results</p>
<p>The resulting plot is zero-indexed because I pass in only the sliced subset. I'd like it to be absolute indexed. How do I dynamically change the labels?</p>
<p>Here's something similar to what I'm looking at</p>
<pre><code>data = load_data() # very long
start, end = get_start_end_from_cmd_line()
subset = data[start, end]
data_to_plot = process_data(subset)

plt.plot(data_to_plot, label="P1")
plt.show()
</code></pre>
<p>The problem is that my graph x-axis ranges from <code>0</code> to <code>(end - start)</code>, not from <code>start</code> to <code>end</code>. I'd like to change the labels dynamically, so they're correct for any size graph I'm looking at, and correct if I pan or zoom</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to include the range of set of x values that pairs with the calculated set of y values, otherwise matplotlib will default to base zero for the x axis:</p>
<p>something like this, maybe:</p>
<pre><code>import matplotlib.pyplot as plt


def get_start_end_from_cmd_line():   # substitute for your own function
    return 5, 9

def load_data():                     # substitute for your own function
    x, y = (list(range(3, 13)), list(range(10)))
    return x, y

xdata, ydata = load_data()
start, end = get_start_end_from_cmd_line()
subsetx, subsety = xdata[start: end], ydata[start: end]   # slice both the x and the corresponding y
plt.plot(subsetx, subsety, label="P1")
plt.show()
</code></pre>
<p>As the <code>xdata</code> may be only implied in your dataset, you will need to construct a set of x values: under certain circumstances, (original x data starts at zero, are integers, and increment by one being the simplest), you could use this to substitute:</p>
<pre><code>xdata = range([start: end])   # matplotlib will also accept a range object i/o a list so you do not need to do list(range([start: end]))
</code></pre>
<p>Check out <a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow noreferrer"><code>slice</code></a> to construct more sophisticated sequences</p>
</div>
