<div class="post-text" itemprop="text">
<p>I want to create a dict from a list of strings:</p>
<pre><code>print(l)
print(l[0])                            # 1st string in list
print(l[0].split(',',1))
print(len(l[0].split(',',1)))
d = {int(k):v for k,v in l[0].split(',',1)}

['0,[7,2,5,7]', '1,[7,18,6,2]']
0,[7,2,5,7]
['0', '[7,2,5,7]']
2
</code></pre>
<p>However, I get <code>d = {int(k):v for k,v in l[0].split(',',1)}     ValueError: not enough values to unpack (expected 2, got 1)</code></p>
<p>I can't understand why, as <code>l[0].split(',',1)</code> returns 2 values, as can be seen from my previous checks (<code>print(len(l[0].split(',',1)))</code> returns 2)</p>
<p><em>My desired output:</em></p>
<pre><code>d = {0 : [7,2,5,7]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It returns two values but the loop expects a list of two values.</p>
<p>You have this: <code>[x, y]</code></p>
<p>But the code expects this: <code>[[x, y]]</code></p>
<p>You could do:</p>
<pre><code>from itertools import repeat
items = map(str.split, l, repeat(','), repeat(1))
d = {int(k):v for k,v in items}
</code></pre>
<p>Note that you'll get all the data and not just one item.</p>
<p>You may want to parse the list using <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> because currently its a string:</p>
<pre><code>import ast
from itertools import repeat
items = map(str.split, l, repeat(','), repeat(1))
d = {int(k):ast.literal_eval(v) for k,v in items}
</code></pre>
</div>
<span class="comment-copy">I edited it into the question, but how does it matter? <code>l[0]</code> should give complete information, no?</span>
<span class="comment-copy">So you want to turn the first element of <code>l</code> into a dict with a single key/value pair? That seems odd. What's the point of a dict with only a single key inside of it? It would make more sense to turn the whole list <code>l</code> into a dict, no?</span>
<span class="comment-copy">The <code>len</code> return two and it returns two values, seems like it should be.</span>
<span class="comment-copy">@Aran-Fey I'm testing it for the 1st element. When I'll fix this issue, I'll expand it for the entire list (<code>l</code> can be much bigger)</span>
<span class="comment-copy">Surely <code>(s.split(',', 1) for s in l)</code> would've been more readable than this weird <code>map(str.split, l, repeat(','), repeat(1))</code> construct?</span>
<span class="comment-copy">@Aran-Fey Not for <i>me</i>. But you may use what you choose. I don't like a lot of syntax that gets out of hand quickly. Maybe it isn't that weird and you're just no used to it? Anyway, I'd prefer to use <code>partial</code> if not the <code>map</code> - but honestly its very readable to me (<code>repeat</code> in <code>map</code> is just a constant binding on a parameter).</span>
