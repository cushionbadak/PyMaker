<div class="post-text" itemprop="text">
<p>I was reading python dunder method and came across that the we can have our own definition for built-in method like len(object)<br/>
So I created a class otherclass which has definition</p>
<pre><code>&gt;&gt;&gt; class otherclass:
        def __len__(self):
            return 0

&gt;&gt;&gt; len(otherclass())
0

&gt;&gt;&gt; dir(otherclass)
['__doc__', '__len__', '__module__']
</code></pre>
<p>And it does print len of the object and further inspecting I also found <strong>len</strong> dunder method is available in otherclass object using dir    </p>
<p>I am wondering how python display the value for dir(object) as there is no <strong>dir</strong> dunder method in the result of dir(otherclass)</p>
</div>
<div class="post-text" itemprop="text">
<p>I mean for me (python 3.6) <code>dir(otherclass)</code> prints </p>
<pre><code>['__class__',
 '__delattr__',
 '__dict__',
 '__dir__',
 '__doc__',
 '__eq__',
 '__format__',
 '__ge__',
 '__getattribute__',
 '__gt__',
 '__hash__',
 '__init__',
 '__init_subclass__',
 '__le__',
 '__len__',
 '__lt__',
 '__module__',
 '__ne__',
 '__new__',
 '__reduce__',
 '__reduce_ex__',
 '__repr__',
 '__setattr__',
 '__sizeof__',
 '__str__',
 '__subclasshook__',
 '__weakref__']
</code></pre>
<p>The iteresting one is <code>__dict__</code>. </p>
<pre><code>otherclass.__dict__ == \
mappingproxy({'__dict__': &lt;attribute '__dict__' of 'otherclass' objects&gt;,
              '__doc__': None,
              '__len__': &lt;function __main__.otherclass.__len__&gt;,
              '__module__': '__main__',
              '__weakref__': &lt;attribute '__weakref__' of 'otherclass' objects&gt;})
</code></pre>
<p>So this holds all the methods/attributes specific to that object. However, where do all the others come from? Well, from the superclass:</p>
<p><code>object.__dict__</code></p>
<pre><code>object.__dict__ == \ 
mappingproxy({'__class__': &lt;attribute '__class__' of 'object' objects&gt;,
              '__delattr__': &lt;slot wrapper '__delattr__' of 'object' objects&gt;,
              '__dir__': &lt;method '__dir__' of 'object' objects&gt;,
              '__doc__': 'The most base type',
              '__eq__': &lt;slot wrapper '__eq__' of 'object' objects&gt;,
              '__format__': &lt;method '__format__' of 'object' objects&gt;,
              '__ge__': &lt;slot wrapper '__ge__' of 'object' objects&gt;,
              '__getattribute__': &lt;slot wrapper '__getattribute__' of 'object' objects&gt;,
              '__gt__': &lt;slot wrapper '__gt__' of 'object' objects&gt;,
              '__hash__': &lt;slot wrapper '__hash__' of 'object' objects&gt;,
              '__init__': &lt;slot wrapper '__init__' of 'object' objects&gt;,
              '__init_subclass__': &lt;method '__init_subclass__' of 'object' objects&gt;,
              '__le__': &lt;slot wrapper '__le__' of 'object' objects&gt;,
              '__lt__': &lt;slot wrapper '__lt__' of 'object' objects&gt;,
              '__ne__': &lt;slot wrapper '__ne__' of 'object' objects&gt;,
              '__new__': &lt;function object.__new__&gt;,
              '__reduce__': &lt;method '__reduce__' of 'object' objects&gt;,
              '__reduce_ex__': &lt;method '__reduce_ex__' of 'object' objects&gt;,
              '__repr__': &lt;slot wrapper '__repr__' of 'object' objects&gt;,
              '__setattr__': &lt;slot wrapper '__setattr__' of 'object' objects&gt;,
              '__sizeof__': &lt;method '__sizeof__' of 'object' objects&gt;,
              '__str__': &lt;slot wrapper '__str__' of 'object' objects&gt;,
              '__subclasshook__': &lt;method '__subclasshook__' of 'object' objects&gt;})
</code></pre>
<p>So <code>dir</code> looks for a <code>__dir__</code> method, then looks at <code>__dict__</code> (or <code>__slots__</code>) and then recursively looks up the method resolution order (available as <code>otherclass.mro()</code>) at each class in turn.</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer is in the Python Docs: <a href="https://docs.python.org/3/library/functions.html#dir" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#dir</a></p>
<blockquote>
<p>If the object does not provide <code>__dir__()</code>, the function tries its best to gather information from the objectâ€™s <code>__dict__</code> attribute, if defined, and from its type object. </p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><code>dir</code> is a built-in function. When it is passed an object it uses the object's <code>__dict__</code> (if defined) and its corresponding type object to attempt to display attributes.</p>
<p>Note that built-in <code>dir</code> can result in strange outputs if <code>__getattr__</code> has been overridden in the object.</p>
<p>Read more:
<a href="https://docs.python.org/3/library/functions.html#dir" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#dir</a></p>
<p>Addressing comment:
Apologies, I don't have enough reputation to comment.</p>
<p>All objects in Python implicitly have a bunch of special attributes, one of these is the <code>__dict__</code> attribute. In Python, classes are objects too. Therefore your <code>otherclass</code> class already has a <code>__dict__</code>. In your code, try:</p>
<pre><code>otherclass.__dict__
</code></pre>
<p>In the output you'll see some of the output corresponds to the output of the <code>dir</code> call.</p>
<p>Edit 2:</p>
<p>Like I said, classes are objects in Python. They implicitly have all of the methods objects have. Try:</p>
<pre><code>object.__dict__
</code></pre>
<p>and you'll find <code>dir</code> in there.</p>
</div>
<span class="comment-copy">Hint: see what <code>otherclass.__dict__</code> prints</span>
<span class="comment-copy">By doing <code>help(dir)</code> you might have an idea</span>
<span class="comment-copy">I print these   {'<b>module</b>': '<b>main</b>', '<b>doc</b>': None, '<b>len</b>': &lt;function <b>len</b> at 0x0000000003547128&gt;}</span>
<span class="comment-copy">@Vinay what version of python are you using?</span>
<span class="comment-copy">@FHTMitchell From <code>'__len__': &lt;function __len__ at 0x0000000003547128&gt;</code> I'd say he's using Python 2.</span>
<span class="comment-copy">Thanks for explanation but I am still not that master in python and didn't understand the much from the code.</span>
<span class="comment-copy">Thanks for response, But even <b>dict</b> is not defined, Clear me if I am wrong based on the code expample shared in my question.</span>
<span class="comment-copy">When I print otherclass.__dict__, I got these output {'module': 'main', 'doc': None, 'len': &lt;function len at 0x0000000003547128&gt;} There is no dir in the output. FYI, I am using python 2.7.15</span>
