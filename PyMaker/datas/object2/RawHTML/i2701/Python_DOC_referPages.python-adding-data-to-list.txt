<div class="post-text" itemprop="text">
<p>I am learning lists and trying to create a list and add data to it.</p>
<pre><code>mylist=[]
mylist[0]="hello"
</code></pre>
<p>This generates Error.</p>
<p>Why cant we add members to lists like this, like we do with arrays in javascript.
Since these are also dynamic and we can add as many members and of any data type to it.</p>
<p>In javascript this works:</p>
<pre><code>var ar=[];
ar[0]=333;
</code></pre>
<p>Why this dosent work in Python and we only use append() to add to list.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>mylist[0] = 'hello'</code> is syntactic sugar for <code>mylist.__setitem__(0, 'hello')</code>.</p>
<p>As per the <a href="https://docs.python.org/3/reference/datamodel.html#object.__setitem__" rel="nofollow noreferrer">docs</a> for <code>object.__setitem__(self, key, value)</code>:</p>
<blockquote>
<p>The same exceptions should be raised for improper key values as for
  the <code>__getitem__()</code> method.</p>
</blockquote>
<p>The <a href="https://docs.python.org/3/reference/datamodel.html#object.__getitem__" rel="nofollow noreferrer">docs</a> for <code>__getitem__</code> states specifically what leads to <code>IndexError</code>:</p>
<blockquote>
<p>if value outside the set of indexes for the sequence (after any
  special interpretation of negative values), <code>IndexError</code> should be
  raised.</p>
</blockquote>
<p>As to the purpose behind this design decision, one can write several chapters to explain why <code>list</code> has been designed in this way. You should familiarise yourself with Python list indexing and slicing before making judgements on its utility.</p>
</div>
<div class="post-text" itemprop="text">
<p>Lists in Python are fundamentally different to arrays in languages like C. You do not create a list of a fixed size and assign elements to indexes in it. Instead you either create an empty list and append elements to it, or use a list-comprehension to generate a list from a type of expression.</p>
<p>In your case, you want to add to the end, so you must use the <code>.append</code> method:</p>
<pre><code>mylist.append('hello')
#["hello"]
</code></pre>
<hr/>
<p>And an example of a list comprehension:</p>
<pre><code>squares = [x**2 for x in range(10)]
#[1,4,9,16,25,36,49,64,81,100]
</code></pre>
</div>
<span class="comment-copy">Because your list is empty and you are trying to assign to the first element. Try <code>mylist.append("hello")</code>.</span>
<span class="comment-copy">Adding elements to list in the way you suggest would lead to implicit resizing of the list, which is not pythonic.</span>
<span class="comment-copy">You can't do this with arrays in other languages either. Although lists aren't exactly arrays</span>
<span class="comment-copy">So... <a href="https://repl.it/repls/FatalExcitedProducts" rel="nofollow noreferrer">repl.it/repls/FatalExcitedProducts</a></span>
<span class="comment-copy">I'd guess that by "other languages" you mean Javascript and PHP, at least.</span>
