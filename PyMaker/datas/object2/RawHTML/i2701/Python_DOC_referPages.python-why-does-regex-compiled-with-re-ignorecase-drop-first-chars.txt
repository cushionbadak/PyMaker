<div class="post-text" itemprop="text">
<p>I have the following regex in python to parse listings in text:</p>
<pre><code>re.compile('(.*,?) and (.*)')
</code></pre>
<p>Everything works as expected, except when the re is compiled with the <code>re.IGNORECASE</code> flag, then the first two chars are not returned.</p>
<p>Output from re group 1 when compiled <strong>without</strong> the IGNORECASE flag:</p>
<pre><code>the 1689 London Baptist Confession of Faith , 1742 Philadelphia Baptist Confession , the 1833 New Hampshire Baptist Confession of Faith , the Southern Baptist Convention 's Baptist Faith and Message ,
</code></pre>
<p>Output from re group 1 when compiled <strong>with</strong> the IGNORECASE flag:</p>
<pre><code>e 1689 London Baptist Confession of Faith , 1742 Philadelphia Baptist Confession , the 1833 New Hampshire Baptist Confession of Faith , the Southern Baptist Convention 's Baptist Faith and Message ,
</code></pre>
<p>The <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">documentation</a> regarding the flag states:</p>
<blockquote>
<p>Perform case-insensitive matching; expressions like [A-Z] will match lowercase letters, too. This is not affected by the current locale. To get this effect on non-ASCII Unicode characters such as ü and Ü, add the UNICODE flag.</p>
</blockquote>
<p>So no hint regarding this behaviour, what could explain it or am I missing something obvious here?
EDIT: As requested in the comments, the full code example (Python 3.6.5):</p>
<pre><code>listing_re = re.compile('(.*,?) and (.*)')
def parse_listing(txt):
    listing_search = listing_re.search(txt, re.IGNORECASE)
    if listing_search:
        seperated_by_comma = listing_search.group(1)    # listing of expressions, seperated by ','
        parts = seperated_by_comma.split(',')           # split string at ','
        parts.append(listing_search.group(2))           # append the single expression after 'and'
        return [x.strip() for x in parts if x.strip()]  # return list of stripped exressions
    return list()

print(parse_listing("the 1689 London Baptist Confession of Faith , 1742 Philadelphia Baptist Confession , the 1833 New Hampshire Baptist Confession of Faith , the Southern Baptist Convention 's Baptist Faith and Message , and written church covenants"))
</code></pre>
<p>Code above returns wrong result, removing the re.IGNORECASE flag returns the correct result.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem here is that you're passing the <code>re.IGNORECASE</code> flag in the wrong place. Since <code>listing_re</code> is a compiled regex, <code>listing_re.search</code> has a signature like this (<a href="https://docs.python.org/3/library/re.html#re.Pattern.search" rel="nofollow noreferrer">docs</a>):</p>
<blockquote>
<p><strong>Pattern.search(string[, pos[, endpos]])</strong></p>
<p>[...]</p>
<p>The optional second parameter pos gives an index in the string where the search is to start; it defaults to 0. This is not completely equivalent to slicing the string; the '^' pattern character matches at the real beginning of the string and at positions just after a newline, but not necessarily at the index where the search is to start.</p>
</blockquote>
<p>As you can see, you've passed <code>re.IGNORECASE</code> as the value of the <code>pos</code> parameter. Since <code>re.IGNORECASE</code> happens to have a value of 2, you end up skipping the first 2 characters.</p>
<pre><code>&gt;&gt;&gt; re.IGNORECASE
&lt;RegexFlag.IGNORECASE: 2&gt;
</code></pre>
<hr/>
<p>The correct usage would be to pass the flags to <a href="https://docs.python.org/3/library/re.html#re.compile" rel="nofollow noreferrer"><code>re.compile</code></a>:</p>
<pre><code>listing_re = re.compile('(.*,?) and (.*)', re.IGNORECASE)
</code></pre>
</div>
<span class="comment-copy">Can't reproduce on Python 3.4 - 3.7. Please provide full code that shows this.</span>
