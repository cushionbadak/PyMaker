<div class="post-text" itemprop="text">
<p>I construct such a pattern object</p>
<pre><code>text_regex = re.compile(r"""(
(\w+)
)""", re.UNICODE|re.VERBOSE)
</code></pre>
<p>I tried:</p>
<pre><code>In [75]: text_regex.findall("put returns between paragraphs")
Out[75]: 
[('put', 'put'),
 ('returns', 'returns'),
 ('between', 'between'),
 ('paragraphs', 'paragraphs')]
</code></pre>
<p>It return double matches.</p>
<p>If I keep the enclosing <code>()</code>,<br/>
How could avoid the duplicate?</p>
</div>
<div class="post-text" itemprop="text">
<p>Remove the extra set of parenthesis from the regex:</p>
<pre><code>text_regex = re.compile(r"""(\w+)""", re.UNICODE|re.VERBOSE)
text_regex.findall("put returns between paragraphs")
</code></pre>
<p>Yields</p>
<pre><code>['put', 'returns', 'between', 'paragraphs']
</code></pre>
<p>You were getting a list of tuples because, as the <a href="https://docs.python.org/2/library/re.html#re.findall" rel="nofollow noreferrer">findall documentation</a> states:</p>
<blockquote>
<p>If one or more groups are present in the pattern, return a list of groups; this will be a list of tuples if the pattern has more than one group.</p>
</blockquote>
<p>So, if you want a group but don't want a capture group use <code>(?:PATTERN)</code> instead of just <code>(PATTERN)</code> as noted in the <a href="https://docs.python.org/3/howto/regex.html#non-capturing-and-named-groups" rel="nofollow noreferrer">regular expression documentation</a>.</p>
</div>
<span class="comment-copy">And if you (for whatever reason) need the parens, but don't want to trigger capturing groups, use <code>(?:PATTERN)</code> instead of <code>(PATTERN)</code>; <code>(?:</code> begins a non-capturing group.</span>
<span class="comment-copy">could you please leave an answer. @ShadowRanger</span>
