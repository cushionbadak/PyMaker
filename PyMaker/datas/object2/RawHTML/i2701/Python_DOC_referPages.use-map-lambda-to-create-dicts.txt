<div class="post-text" itemprop="text">
<p>Here's my code: </p>
<pre><code> a = {}
 ins = ["foo", "bar"]
 for i in ins:
     a[i] = {}
</code></pre>
<p>Output</p>
<pre><code>{'foo': {}, 'bar': {}}
</code></pre>
<p>Basically, I want to create a dict for each item in the list.
Is there any way to do this using map or lambda, in a more concise way?</p>
</div>
<div class="post-text" itemprop="text">
<p>The correct approach is not <code>map</code> or <code>lambda</code> based, but a simple <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer"><code>dict</code> comprehension</a>:</p>
<pre><code>ins = ["foo", "bar"]
a = {x: {} for x in ins}
</code></pre>
<p>You could do it with <code>map</code> and a <code>lambda</code> like so:</p>
<pre><code>a = dict(map(lambda x: (x, {}), ins))
</code></pre>
<p>but that's both slower and more verbose that a direct <code>dict</code> comprehension.</p>
<p>If your associated value was immutable, then <a href="https://docs.python.org/3/library/stdtypes.html#dict.fromkeys" rel="nofollow noreferrer">the <code>dict.fromkeys</code> alternate constructor</a> would be a good solution, but it reuses the default value each time, so if you used it with a default value of <code>{}</code>, it would make all the keys reference the <em>same</em> <code>dict</code>, and modifying it through one key would change all the others:</p>
<pre><code>a = dict.fromkeys(ins, 0)  # GOOD! int is immutable

a = dict.fromkeys(ins, {})  # BAD! dict is mutable
</code></pre>
<p>Lastly, a good option in many such scenarios is to <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">use <code>collections.defaultdict</code></a> to provide defaults when you access a (previously) non-existent key. That way, you can just do:</p>
<pre><code>from collections import defaultdict
a = defaultdict(dict)
</code></pre>
<p>and accessing any key (from <code>ins</code> or not) via bracket syntax will assign it a value of <code>dict()</code> (equivalent to <code>{}</code>) on first access.</p>
</div>
