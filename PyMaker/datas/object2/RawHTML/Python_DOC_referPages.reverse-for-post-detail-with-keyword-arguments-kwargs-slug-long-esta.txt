<div class="post-text" itemprop="text">
<p>I am trying to add comment fields to my post-detail view. But as soon i add redirect url after calling save(). This gives me error something like this.</p>
<blockquote>
<p>Reverse for 'post-detail' with keyword arguments '{'kwargs': {'slug': 'long-established-fact-that-a-reader-will'}}' not found. 1 pattern(s) tried: ['post/(?P[^/]+)/$']</p>
</blockquote>
<p>this is my code</p>
<blockquote>
<p>posts/views.py</p>
</blockquote>
<pre><code>@login_required
def postDetail(request, slug):
    post = get_object_or_404(Post, slug=slug)
    latest_post = Post.objects.order_by('-timestamp')[0:4]
    form = CommentForm(request.POST or None)
    if request.method == 'POST':
        if form.is_valid():
            form.instance.user = request.user
            form.instance.post = post
            form.save()
            return redirect('post-detail', kwargs = {
                'slug': post.slug
            })
    context ={
        'form': form,
        'post': post,
        'latest_post': latest_post
    }
    return render(request, 'posts/post_detail.html', context)
</code></pre>
<blockquote>
<p>posts/urls.py</p>
</blockquote>
<pre><code>from django.urls import path, include
from django.conf.urls.static import static

from posts.views import index,postDetail, categoryDetail, blog, search

urlpatterns = [
    path('', index, name="home"),
    path('blog/', blog, name="blog"),
    path('search/', search, name='search'),
    path('post/&lt;str:slug&gt;/', postDetail, name='post-detail'),
    path('category/&lt;slug&gt;/', categoryDetail, name='category-detail'),    
]
</code></pre>
<blockquote>
<p>posts/models.py</p>
</blockquote>
<pre><code>from tinymce import HTMLField
from django.db import models
from django.contrib.auth import get_user_model
from slugger import AutoSlugField
from django.urls import reverse
# Create your models here.
User = get_user_model()


def upload_location(instance, filename):
    return "%s/%s" %(instance.slug, filename)


class Author(models.Model):
    user = models.OneToOneField(User, on_delete=models.CASCADE)

    def __str__(self):
        return self.user.username

class Category(models.Model):
    title = models.CharField(max_length=20)
    slug = AutoSlugField(populate_from='title')
    def __str__(self):
        return self.title

    def get_absolute_url(self):
        return reverse('category-detail', kwargs={'slug': self.slug})


class Post(models.Model):
    title = models.CharField(max_length = 100)
    slug = AutoSlugField(populate_from='title')
    overview = models.CharField(max_length= 200)
    timestamp = models.DateTimeField(auto_now_add=True)
    content = HTMLField()
    comment_count = models.IntegerField(default=0)
    view_count = models.IntegerField(default=0)
    author = models.ForeignKey(Author, on_delete=models.CASCADE)
    thumbnail = models.ImageField(
        upload_to=upload_location,
        null=True, 
        blank=True)
    category = models.ManyToManyField(Category)
    featured = models.BooleanField()
    previous_post = models.ForeignKey('self', related_name= 'previous', on_delete=models.SET_NULL, blank=True, null=True)
    next_post = models.ForeignKey('self', related_name= 'next', on_delete=models.SET_NULL, blank=True, null=True)

    def __str__(self):
        return self.title

    def get_absolute_url(self):
        return reverse('post-detail', kwargs={'slug': self.slug})

    @property
    def get_comments(self):
        return self.comments.all().order_by('-timestamp')

class Comment(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    timestamp = models.DateTimeField(auto_now_add=True)
    content = models.TextField()
    post = models.ForeignKey(Post, related_name='comments',on_delete=models.CASCADE)

    def __str__(self):
        return self.user.username
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your 4th path, you used <code>&lt;str:slug&gt;</code> - I don't believe the URL catching type <code>str</code> catches the dashes used in slugs.</p>
<p>Try this path instead: <code>path('post/&lt;slug:slug&gt;/', postDetail, name='post-detail'),</code></p>
<p><strong>EDIT</strong></p>
<p>You are also missing a <code>reverse</code> in your <code>postDetail()</code> redirect:</p>
<pre><code>@login_required
def postDetail(request, slug):
    post = get_object_or_404(Post, slug=slug)
    latest_post = Post.objects.order_by('-timestamp')[0:4]
    form = CommentForm(request.POST or None)
    if request.method == 'POST':
        if form.is_valid():
            form.instance.user = request.user
            form.instance.post = post
            form.save()
            return redirect(reverse('main:post-detail', kwargs = {
                'slug': post.slug
            }))
    context ={
        'form': form,
        'post': post,
        'latest_post': latest_post
    }
    return render(request, 'posts/post_detail.html', context)
</code></pre>
<blockquote>
<p><a href="https://docs.djangoproject.com/en/2.1/topics/http/urls/#path-converters" rel="nofollow noreferrer">https://docs.djangoproject.com/en/2.1/topics/http/urls/#path-converters</a></p>
</blockquote>
</div>
<span class="comment-copy">it still gives me the same error.</span>
<span class="comment-copy">@adityakumar did you try adding an <code>app_name</code> above your urlpatterns, and then referincing it in the redirect? i.e. <code>app_name = 'main'</code>, <code>redirect('main:post-detail, ...)</code></span>
<span class="comment-copy">no i did not add any app_name.</span>
<span class="comment-copy">@adityakumar give it a shot like I wrote, restart your server, and let me know if it changes anything</span>
<span class="comment-copy">thnk you this is working now.</span>
