<div class="post-text" itemprop="text">
<p>I created a class that takes 2 coordinates and returns the slope and distance of the respective coordinates.
It works fine but, apparently, what I did was wrong and was supposed to give an error.</p>
<p>My code:</p>
<pre><code>class Line:
    def __init__(self, coord1, coord2):

        self.coord1 = coord1
        self.coord2 = coord2

    def distance(self):

        return math.sqrt( ((self.coord1[0]-self.coord2[0])**2)+((self.coord1[1]-self.coord2[1])**2) )

    def slope(self):

        c = self.coord2[0]-self.coord1[0]
        d = self.coord2[1]-self.coord1[1]
        if d==0:
            return "zero"
        elif c==0:
            return "Infinity"
        else:
            return d/c

line1=Line((8,3),(0,-4))
print(line1.distance())
print(line1.slope())
</code></pre>
<pre class="lang-none prettyprint-override"><code>RESTART: C:\Users.....\Classes.py
10.63014581273465 **The result is right...?**
0.875
</code></pre>
<p>I get the right output, but this is how I am <em>supposed</em> to do it:</p>
<pre class="lang-none prettyprint-override"><code>&gt;&gt;&gt; line1=Line((8,3),(0,-4))
&gt;&gt;&gt; line1.distance()
Traceback (most recent call last):File "&lt;stdin&gt;", line
1, in &lt;module&gt;TypeError: 'float' object is not callable  **This is like mine but error?**
&gt;&gt;&gt; line1.slope()
Traceback (most recent call last):File "&lt;stdin&gt;", line 1, in &lt;module&gt;TypeError:
    'float' object is not callable **Just like mine but error?**
&gt;&gt;&gt; line1.distance
10.63
&gt;&gt;&gt; line1.slope
0.875
</code></pre>
<p>What is the difference and is mine wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>just put <code>property decorator</code> behind the func <a href="https://www.programiz.com/python-programming/property" rel="nofollow noreferrer">some useful docs</a></p>
<pre><code>@property
def distance(self):
    ...

@property
def slope(self):
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you need distance/slope to be variables</p>
<pre><code>class Line: 

def __init__(self, coord1, coord2):

    self.coord1 = coord1
    self.coord2 = coord2
    self.distance = self.get_distance()
    self.slope = self.get_slope()

def get_distance(self):

    return math.sqrt( ((self.coord1[0]-self.coord2[0])**2)+((self.coord1[1]-self.coord2[1])**2) )



def get_slope(self):

    c = self.coord2[0]-self.coord1[0]
    d = self.coord2[1]-self.coord1[1]
    if d==0:
        return "zero"
    elif c==0:
        return "Infinity"
    else:
        return d/c
</code></pre>
<p>This way, distance/slope are floats, and not functions; so you'll get the error that you're after</p>
</div>
<span class="comment-copy">make distance a variable, not a function</span>
<span class="comment-copy">Related reading: <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#property</a></span>
<span class="comment-copy">This may sound real stupid but im a beginner ....but how do i do that?</span>
<span class="comment-copy">As suggested by @Kevin, checkout the documentation. You can also just search a bit for <code>python</code>, <code>property</code>, <code>decorator</code>. There are multiple threads around here as well, like <a href="https://stackoverflow.com/questions/6304040/real-world-example-about-how-to-use-property-feature-in-python">this</a>.</span>
<span class="comment-copy">Thanks a lot this helped!!! But why? I really don't understand why? What is a property decorator?</span>
<span class="comment-copy">@SheshankPs i put some docs to my answer you can read it</span>
<span class="comment-copy">A property is an application of the descriptor protocol. Put briefly, <code>line1.distance</code> doesn't return the value of an instance attribute, but the return value of a call to <code>Line.distance.__get__(line1, Line)</code></span>
<span class="comment-copy">Thank you! But below is simpler and worked exactly like it should.</span>
<span class="comment-copy">it's "simpler" but you don't understand it.  Decorators are a bit more advanced than what I showed</span>
<span class="comment-copy">This is unlikely to be what the assignment had in mind. In particular, you'll need to manually call <code>get_distance</code> and <code>get_slope</code> manually each time you change one of the coordinates.</span>
