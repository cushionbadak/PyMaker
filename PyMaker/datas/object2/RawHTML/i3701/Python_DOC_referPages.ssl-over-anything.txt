<div class="post-text" itemprop="text">
<p>I would like to use SSL over something other than sockets. The <code>ssl</code> TLS/SSL wrapper is only for socket objects. </p>
<p>For example I have my own IPC class such as: </p>
<pre><code>class MyIPC: 
    def recv(self):
        return self.received_data if self.data else None

    def send(self, message): 
        self._send(message)
</code></pre>
<p>In these scheme I would like to wrap this above class to the <code>ssl</code> Python module. Is this something possible. </p>
<p>Notice this <code>MyIPC</code> class is p2p communication. In the real world. I would like to use MQTT for the data exchange. </p>
<p>I guess one option is to write a duck-type class to mimic a Socket Object, but I am sure there is a better option.</p>
</div>
<div class="post-text" itemprop="text">
<p>With recent versions of Python (3.5+) one is no longer bound to use SSL only with sockets but one can use memory buffers as a more abstract layer. How these buffers are the transferred to the peer is up to the application, i.e. it can use sockets directly but also implement protocols such as <a href="https://tools.ietf.org/html/draft-friel-tls-over-http-00" rel="nofollow noreferrer">this proposal</a> which essentially transports the SSL memory buffers by encoding these into base64 inside JSON and transporting then this JSON within a weakly authenticated HTTPS channel.</p>
<p>To use memory buffers follow <a href="https://docs.python.org/3/library/ssl.html#memory-bio-support" rel="nofollow noreferrer">the documentation</a> or have a look at <a href="http://blog.povilasb.com/posts/python-ssl-memorybio-usage/" rel="nofollow noreferrer">example code</a>.</p>
</div>
<span class="comment-copy">I'm not sure I understand. MQTT belongs to the application layer and typically <b>is</b> used over TCP sockets. And thus I don't see any obstacle to run it over SSL/TLS. What do you mean by "other than sockets"? TLS is specifically designed to work over sockets, nothing else. Or are you looking for custom message encryption?</span>
<span class="comment-copy">Not really. MQTT uses TCP sockets from one node to the broker. However it does not ensure a secured connection from a node to another. This is absolutely normal because MQTT is not a p2p communication protocol.</span>
<span class="comment-copy">Because there is no such thing as connection from a node to another. That concept <b>doesn't</b> exist in MQTT. What are you trying to achieve? Are you looking for a custom message encryption?</span>
<span class="comment-copy">I am looking for a way to use standard x509 certificates to secure a communication between two nodes.</span>
<span class="comment-copy">@freakish I am implementing a custom exchange protocol over MQTT for configuring devices. This exchange protocol is very similar to pure sockets I have instances <code>bob = Tunnel(); alice = Tunnel(); bob.bind(alice), alice.bind(bob); bob.send("Hello Bob");</code>.</span>
<span class="comment-copy">TLS in base64 over JSON through HTTP over SSL over TCP, when one needs just plain SSL over TCP... I'm not sure I want to live in a world where this seems a sensible solution to implement...</span>
<span class="comment-copy">@MatteoItalia: This was added as an example what kind of weird things are possible (and what people try to standardize) and not of what one should really do. I mean, HTTP(S) can easily transport binary data so why pack the stuff in JSON + base64? But at least its not XML  or maybe even a full SOAP call with the TLS payload inside :)</span>
