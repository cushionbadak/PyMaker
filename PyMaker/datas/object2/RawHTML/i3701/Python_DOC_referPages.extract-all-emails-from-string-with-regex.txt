<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7724993/python-using-regex-to-find-multiple-matches-and-print-them-out">Python - Using regex to find multiple matches and print them out</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I want to extract all emails from a string. In this, I would expect a tuple</p>
<pre><code>(hello@gmail.com, aaaa@yahoo.com, no@yes.de, why@hotmail.com)
</code></pre>
<p>However, I am only getting back the first email from my function</p>
<pre><code>(hello@gmail.com)
</code></pre>
<p>What's going on?</p>
<pre><code>import re

def getEmails(str):
    regex = r'([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9_-]+){0,}'
    obj = re.search(regex, str, re.M|re.I)
    return obj.groups()

str = "hello@gmail.com;aaaa@yahoo.com no@yes.de, why@hotmail.com"
print(getEmails(str))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><code>re.search()</code></a> is not the function you want in this case. Instead, you should use <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall()</code></a>:</p>
<pre><code>import re

def getEmails(str):
    regex = r'([\w0-9._-]+@[\w0-9._-]+\.[\w0-9_-]+)'
    return re.findall(regex, str, re.M|re.I)

str = "hello@gmail.com;aaaa@yahoo.com no@yes.de, why@hotmail.com"
print(getEmails(str))
</code></pre>
<p><a href="https://tio.run/##VU7LCsIwELznK0IvTbANgicVIRcPHvwCKxJs2gTSbEkjNeC/x8QH6Bx2Z4bd2R2DV2BXMephBOexkwi1ssO99PtBaDORyTu6QTjByV7e8Q67kpyaeVmv2aU@L/gPb9hbZE7Lz5K/OZsa67RthTHkFVPhlFtl@/hI5UARSkYKL5Q0Bnifj7MrDFuRwINQAFliCzzIibWywrMKXIH/ThZodNp68v86jfEJ" rel="nofollow noreferrer" title="Python 3 – Try It Online">Try it online!</a></p>
<p>I've replaced <code>[A-Za-z]</code> with <code>[\w]</code>, since it makes the regex easier to read.I've also removed the flags, since they aren't going to be necessary for this particular regex. Most importantly, I've removed the <code>{0,}</code> quantifier from the regex, since you only want one email per iterable item, not consecutive emails or empty items.</p>
<p>It currently returns a list; if you want it to be a tuple, you can change the return statement to be <code>return tuple(re.findall(regex, str, re.M|re.I))</code></p>
<hr/>
<p>I will also note in closing that <a href="https://stackoverflow.com/a/201378/">email address validation can be complicated</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>@jchi2241</strong>, you can also use <code>re.finditer()</code> to solve your problem.</p>
<p>Here is the code (with a little change in your code):</p>
<blockquote>
<p><strong>Try it online at:</strong> <a href="http://rextester.com/BST18087" rel="nofollow noreferrer">http://rextester.com/BST18087</a></p>
</blockquote>
<pre><code>def getEmails(str):
    regex = r'([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9_-]+){0,}'
    emails = tuple(m.group(0) for m in re.finditer(regex, str) if m.group(0))
    return emails

str = "hello@gmail.com;aaaa@yahoo.com no@yes.de, why@hotmail.com"
print(getEmails(str))
</code></pre>
<h3>Output »</h3>
<pre><code>('hello@gmail.com', 'aaaa@yahoo.com', 'no@yes.de', 'why@hotmail.com')
</code></pre>
</div>
<span class="comment-copy">Why not just split the string with /\.;/</span>
<span class="comment-copy"><b>@jchi2241</b>, just comment/remove 2 last lines inside your <b>getEmails()</b> function and add <code>return tuple(m.group(0) for m in re.finditer(regex, str) if m.group(0));</code> statement. It will return a tuple of emails that you expect.</span>
<span class="comment-copy"><code>re.finditer()</code> seems like it's a more complicated solution unless the additional <a href="https://docs.python.org/3/library/re.html#match-objects" rel="nofollow noreferrer">match object</a> properties (i.e. groups handling), are being used.</span>
