<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/41585078/how-do-i-read-and-write-csv-files-with-python">How do I read and write CSV files with Python?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I want to save the options from a file in a list like:</p>
<pre><code>options = [
    ["ala", "bala", "ma", "sc"],
    ["fg", "ada", "aas","asd"],
]
</code></pre>
<p>This options are for a quiz. For questions I was able to take the text line by line from the file, but for options this is not working:</p>
<pre><code>with open('Options.txt', 'r') as k:
    options = k.readlines()
</code></pre>
<p>What should I do?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can store each set of options as 1 line, comma-separated:</p>
<pre><code># create a file
filename = "Options.txt"
with open(filename, 'w') as file:
    file.write("a,b,c,d\n")
    file.write("4,7,8,9\n")
    file.write("27,k,l,pp\n")
</code></pre>
<p>Your file would look like:</p>
<blockquote>
<pre><code>a,b,c,d
4,7,8,9
27,k,l,pp
</code></pre>
</blockquote>
<p>You can read in this file by:</p>
<pre><code># read file in
options =[]
with open(filename, 'r') as file:
    for line in file:
        options.append(line.strip().split(","))

print(options) 
</code></pre>
<p>Output: </p>
<pre><code>[['a', 'b', 'c', 'd'], ['4', '7', '8', '9'], ['27', 'k', 'l', 'pp']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your Options.txt file has data as follows:</p>
<pre><code>ala bala ma sc 
fg ada aas asd
---
--- so on
</code></pre>
<p>Do this:</p>
<pre><code>with open('Options.txt', 'r') as k:
lst = []
file_line = k.readline()
while file_line:
    file_line_lst = list(file_line.strip().split())
    lst.append(file_line_lst)
    file_line = k.readline()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The issue your facing here is this is more easily handled by pulling the contents in as a pair of lists <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">data structures</a> rather than a string object.
The simplest way is to rename your options.txt file options.py and assuming this code runs in the same directory, it could look like this.</p>
<pre><code>In [4]: import options as o  

In [5]: gennie = ((o.options[0]+o.options[1]))  

In [6]: type(gennie)  
Out[6]: list  

In [7]: gennie  
Out[7]: ['ala', 'bala', 'ma', 'sc', 'fg', 'ada', 'aas', 'asd']  

In [8]: g = iter(gennie)  

In [9]: while True:  
   ...:     try:  
   ...:         print(g.__next__())  
   ...:     except StopIteration:  
   ...:         break  
   ...:     
</code></pre>
<p>Output:<br/>
  ala<br/>
  bala<br/>
  ma<br/>
  sc<br/>
  fg<br/>
  ada<br/>
  aas<br/>
  asd  </p>
</div>
<span class="comment-copy">What is the content of <code>Options.txt</code> file ?</span>
<span class="comment-copy">Welcome to your first question on StackOverflow. However, you need to include enough information in your question for us to help you. Please read and follow <a href="http://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">You can use eval, like this:  <code>with open('Options.txt', 'r') as k:     options = eval(k.read()[10:]) </code>  But there are probably better ways. PS: The slice [10:] is because I thought that "options = " was included in the txt file. Feel free to remove it if that was not the case.</span>
<span class="comment-copy">@KostasMouratidis <a href="https://stackoverflow.com/questions/1832940/why-is-using-eval-a-bad-practice">why-is-using-eval-a-bad-practice</a></span>
<span class="comment-copy">"joystick", "imprimanta", "modem", "scanner" "Power Computer", "Personal Computer", "Professional Computer", "Pret de Cost" "Scanner", "plotter", "Videoproiector", "Touchscreen" "Sustine componentele interne", "Alimenteaza componentele interne", "Transmite comenzi componentelor, fiind creierul calculatorului", "Foloseste la pastrarea informatiilor pe termen lung" "1+1=10", "1+1+1=11", "10+11=101", "11+11=100"</span>
<span class="comment-copy">whatfor the <code>map(str, ....)</code> ? it is a string already? and <code>for line in k:</code> is easier then the while construct you are using.</span>
<span class="comment-copy">I am new to python too.. :P</span>
