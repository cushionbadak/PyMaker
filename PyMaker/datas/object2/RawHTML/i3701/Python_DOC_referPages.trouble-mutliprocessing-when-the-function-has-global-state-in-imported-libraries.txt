<div class="post-text" itemprop="text">
<p>This is being done on a machine learning example but I don't believe the problem or solution is specifically related to it using keras/tensorflow.</p>
<p><code>__init__.py</code> file with some gobal state I can't get around...</p>
<pre><code>## Silly module with some odd state variables

global __STATE
__STATE = 3

def add(x):
    if __STATE == 3:
        return x + __STATE
    else:
        return 0

def finish():
    global __STATE
    __STATE = None
    del __STATE
    return 
</code></pre>
<p>Multiprocessing code I want to get working</p>
<pre><code>def doSomethingComplicated(x):

    # x = x + y
    # import some libraries
    import stateFullStuff 
    # create some of its own processes and run them
    x = stateFullStuff.add(x)
    print (x)
    stateFullStuff.finish()
    # print ("finished")
    return x

from multiprocessing import Pool

if __name__ == '__main__':

    x_ = range(100)
    pool = Pool(3)
    results = pool.map(doSomethingComplicated,x_)
    print ("results: ", results)
</code></pre>
<p>Now this works okay if the number of workers for the pool is equal to or greatert than len(x_) but that is unmaintainable. For anyone's interest, the global state that is causing problems in my real code is the loaded tensorflow backend in Keras. I believe the session is closed when the task is done but the next task for some worker still sees the old session...</p>
</div>
<div class="post-text" itemprop="text">
<p><code>multiprocessing</code> internally works by launching python instances and running your function. global state is not shared at all. global code (outside functions) executes all over again as each module is loaded in the new instance. If you need global state in <code>multiprocessing</code>, you have to keep it in the main process and use some form of communication, like a shared memory mapping. See <code>multiprocessing</code> docs <a href="https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes" rel="nofollow noreferrer">here</a> for more info.</p>
</div>
