<div class="post-text" itemprop="text">
<p>I am looking for minimum between a range of index in a dictionary; for instance:</p>
<pre><code>A = {1: -3, 2: -5, 3: 4, 5: 12, -34: 23, 64: 32}
</code></pre>
<p>I want to find:</p>
<pre><code>min(A[2..5]) = min(A[2] A[3] A[4]A [5]) = -5
</code></pre>
<p>Is this possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python <code>list</code> does not support indexing via a list of indexers. There are a couple of solutions to overcome this.</p>
<h3>Where you know keys exist</h3>
<p>You can use <code>itemgetter</code> and sequence unpacking:</p>
<pre><code>from operator import itemgetter

A = {1: -3, 2: -5, 3: 4, 5: 12, -34: 23, 64: 32}

res = min(itemgetter(*[2, 3, 5])(A))

# -5
</code></pre>
<h3>Where keys may not exist</h3>
<p>You can use a <code>range</code> object to specify a range of keys. A <code>list</code> or <code>set</code> would work too. Here we feed a generator expression to <code>min</code>:</p>
<pre><code>res = min(v for k, v in A.items() if k in range(2, 6))

# -5
</code></pre>
</div>
<span class="comment-copy">you didn't even googled it. here is a link to <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">python built-in functions</a>. use it well</span>
<span class="comment-copy">@SaNa, I edited your question to fix syntax errors; hope that's OK.</span>
