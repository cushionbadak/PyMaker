<div class="post-text" itemprop="text">
<p>This might not make sense but I have a file which consists of (in each line) Song name, length of the song, artist, album, and genre.  So, I try to split them by spaces, and of course that splits song titles, so I just use the first whatevers of the list depending on another calculation.  My example will be: </p>
<pre><code>Hells Bells     5:13    AC/DC   Back In Black   Rock    0   6   
Shoot to Thrill     5:18    AC/DC   Back In Black   Rock    0   6   
Back in Black       4:16    AC/DC   Back in Black   Rock    0   6   
</code></pre>
<p>So I have a for loop that counts the length of the list of those things split and it gives me what I want.</p>
<pre><code>    for line in f:
        Thing = line.replace(' ', ',').replace('\t', ',')
        a = Thing.split(',')
        integar = len(a)-11 #This subtract 11 is to get just the song which doesn't work situationally because if the album has more than 3 words unlike in this situation, then it wouldn't give the right amount
        integar = integar+1
        for i in range(integar):
            print(a[i+1])
            namelist.append(a[i])
        name = str(namelist)
        namelist=[]
</code></pre>
<p>I'm curious as to how I would get just the title out of it.  I guess its possible to iterate through the list and find the length until it finds a number, but I'm not sure how I would do that, or if there is a better solution.</p>
</div>
<div class="post-text" itemprop="text">
<p>I copy pasted your song lines into a text editor (I thought they may be seperated by tabs), but it's like 4 or 3 spaces randomly - that as may be, here's a possible solution if you're just wanting the seperated info:</p>
<pre><code>namedir = {}

for line in f:
    line = line.split("    ")   # 4 spaces, returns list
    name = line[0]
    duration = line[1].replace(' ', '')
    line[2] = line[2].split("   ")  # 3 spaces, no idea why ??
    band = line[2][0]
    album = line[2][1]
    genre = line[2][2]
    meta = line[-1]

    namedir[name] = (duration, band, album, genre, meta)

for song in namedir.keys():
    print(song, ", ".join(namedir[song]))
</code></pre>
<p>I get this as output when I run it</p>
<pre><code>$ python t1.py 
('Shoot to Thrill', '5:18, AC/DC, Back In Black, Rock, 0   6')
('Hells Bells', '5:13, AC/DC, Back In Black, Rock, 0   6')
('Back in Black', '4:16, AC/DC, Back in Black, Rock, 0   6')
</code></pre>
<p>Hopefully this helps</p>
</div>
<span class="comment-copy">What is your delimiter in your file? If you are only using spaces, how do you know confidently that you are only taking the song title alone? Can you show a sample few lines of your file? (not a screenshot please)</span>
<span class="comment-copy">Could you provide what one line from the file looks like? I'm not understanding your description of it.</span>
<span class="comment-copy">@MatthewOujiri please edit your question and add the file sample exactly as it is to understand the real format. Placing it in the comments is not very helpful for the reader.</span>
<span class="comment-copy">Why are you eliminating information in the first line of your code? You already seem to have two different separators in the file and just throw them away... What happens when you split by tabs?</span>
<span class="comment-copy">@MatthewOujiri Going back to my first question, is your file separated by tabs? If so, you should look in to using something like the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a> module. Ultimately, there should ideally be something that clearly separates each category in your file by some unique identifier so you can confidently separate them. Otherwise, you are not going to be able to split out what you want with 100% certainty.</span>
