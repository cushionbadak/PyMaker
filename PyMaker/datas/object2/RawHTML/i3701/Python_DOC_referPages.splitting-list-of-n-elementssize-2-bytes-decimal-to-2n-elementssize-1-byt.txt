<div class="post-text" itemprop="text">
<p>I have a list of n elements in decimal where each element is two bytes long.</p>
<p>Lets say:</p>
<pre><code>x = [9000 , 5000 , 2000 , 400]
</code></pre>
<p>The idea is to split each element into MSB and LSB and store it in consecutive list elements.</p>
<p>Output should be :</p>
<pre><code>y = [23 , 28 , 13 , 88 , 07 , D0 , 01 , 90]
</code></pre>
<p>Now the basic logic for a signal number operation is clear:</p>
<pre><code>x=9000
y_msb = x//256 #Hex Quotient for FF
y_lsb = x%256 #Hex Remainder for FF
</code></pre>
<p>And store both values in Hex</p>
<p>Output:</p>
<pre><code>y_msb=23
y_lsb=28
</code></pre>
<p>My question is what is the most efficient way to do this operation in <strong>Python3 lists of size n.</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>With a <a href="https://docs.python.org/3/reference/expressions.html#generator-expressions" rel="nofollow noreferrer">generator expression</a> and some bit manipulation, you can do that like:</p>
<h3>Code:</h3>
<pre><code>data = sum(((d &gt;&gt; 8, d &amp; 0xff) for d in in_data), ())
</code></pre>
<h3>Test Code:</h3>
<pre><code>in_data = [9000 , 5000 , 2000 , 400]
out_data = (0x23, 0x28, 0x13, 0x88, 0x07, 0xD0, 0x01, 0x90)

data = sum(((d &gt;&gt; 8, d &amp; 0xff) for d in in_data), ())
assert data == out_data
</code></pre>
</div>
