<div class="post-text" itemprop="text">
<p>I have the following 2 dataframes: </p>
<p>df1</p>
<pre><code>product_ID         tags
100         chocolate, sprinkles
101         chocolate, filled
102         glazed
</code></pre>
<p>df2</p>
<pre><code>customer   product_ID
A            100
A            101
B            101
C            100
C            102
B            101
A            100
C            102
</code></pre>
<p>I should be able to create a new dataframe like this.</p>
<pre><code>| customer | chocolate | sprinkles | filled | glazed |
|----------|-----------|-----------|--------|--------|
| A        | ?         | ?         | ?      | ?      |
| B        | ?         | ?         | ?      | ?      |
| C        | ?         | ?         | ?      | ?      |
</code></pre>
<p>Where the contents of cells represent the count of occurrences of product attribute.</p>
<p>I've used <code>merge</code> and got the following result</p>
<pre><code>df3 = pd.merge(df2, df1)
df3.drop(['product'], axis = 1)

customer       tags
A        chocolate, sprinkles
C        chocolate, sprinkles
A        chocolate, sprinkles
A        chocolate, filled
B        chocolate, filled
B        chocolate, filled
C        glazed
C        glazed
</code></pre>
<p>How do we get to the final result from here?
Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this in 2 steps:</p>
<ol>
<li>Expand / flatten your dataframe with a series of comma separated strings.</li>
<li>Use <a href="https://pandas.pydata.org/pandas-docs/version/0.21/generated/pandas.crosstab.html" rel="nofollow noreferrer"><code>pandas.crosstab</code></a> to tabulate your counts.</li>
</ol>
<p>Here's an example assuming you have performed your merge and the result is <code>df</code>:</p>
<pre><code>import numpy as np
from itertools import chain

# split by comma to form series of lists
tag_split = df['tags'].str.split(',')

# create expanded dataframe
df_full = pd.DataFrame({'customer': np.repeat(df['customer'], tag_split.map(len)),
                        'tags': list(chain.from_iterable(tag_split))})

# use pd.crosstab for result
res = pd.crosstab(df_full['customer'], df_full['tags'])

print(res)

tags       filled   sprinkles  chocolate  glazed
customer                                        
A               1           2          3       0
B               2           0          2       0
C               0           1          1       2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>get_dummies</code></p>
<pre><code>df.set_index('customer').tags.str.get_dummies(sep=',').sum(level=0)
Out[593]: 
          chocolate  filled  glazed  sprinkles
customer                                      
A                 3       1       0          2
C                 1       0       2          1
B                 2       2       0          0
</code></pre>
</div>
<span class="comment-copy">worked like a charm! Could you explain the code you've done under the section #create expanded dataframes?</span>
<span class="comment-copy">Sure, <code>np.repeat(df['customer'], tag_split.map(len))</code> repeats each value in the <code>customer</code> column by the respective length of tags. <code>list(chain.from_iterable(tag_split))</code> creates a single list of all the comma-separated elements in <code>tags</code>. You can read up the docs for <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.repeat.html" rel="nofollow noreferrer"><code>np.repeat</code></a> and <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain.from_iterable</code></a>.</span>
