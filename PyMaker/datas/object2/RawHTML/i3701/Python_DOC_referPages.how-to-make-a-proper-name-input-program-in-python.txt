<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/23294658/asking-the-user-for-input-until-they-give-a-valid-response">Asking the user for input until they give a valid response</a>
<span class="question-originals-answer-count">
                    17 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/5473480/how-to-validate-person-names-python-django">How to validate person names? - Python/Django</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I am at the part where I ask the user for their name. So far I got this:</p>
<pre><code># Import stuff
import time

# Create empty variable
Name = ""

# Ask their name
while Name = ""
    Name = input("What is your name? ")
    print("")
print(Name)
print("")
time.sleep(3)
</code></pre>
<p>So if the user inputs nothing, it repeats the question. But when the user inputs an integer or a float it registers this as a valid name. </p>
<p>How will I be able to make it so that if the <code>Name</code> variable is an integer or a float, it will respond with <code>"Please enter a valid name"</code> and repeat the question? </p>
</div>
<div class="post-text" itemprop="text">
<p><strong>I'm updating my answer to simplify the code and make it more readable.</strong> </p>
<p>The below function is a function that I would use in my own code, I would consider it to be more "proper" than my old answer.</p>
<pre><code>from string import ascii_letters

def get_name():
    name = input("What is your name?\n: ").strip().title()

    while not all(letter in ascii_letters + " -" for letter in name):
        name = input("Please enter a valid name.\n: ").strip().title()

    return name
</code></pre>
<p>To break this down, the line <code>all(letter in ascii_letters + " -" for letter in name)</code> means "if each letter in name is not an alphabetical character, a space, or a hyphen".</p>
<p>The part <code>letter in ascii_letters + " -"</code> checks to see if a letter is in the string <code>"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ -"</code>.</p>
<p>This is repeated by the next part, <code>for letter in name</code>, for every character in the string. This will effectively return a list of booleans, <code>[True, True, True, ...]</code> where any <code>False</code> is a character that did not pass the conditional. Next, this list is passed to the <code>all()</code> function, which returns  <code>True</code> if all of the list items are <code>True</code>.</p>
<p>After the <code>all()</code> is executed, conditional is reversed, allowing the loop to continue on the existence of a single failed character.</p>
<hr/>
<p><strong>Old answer is as follows, it will still be useful.</strong></p>
<p>This function should work well for you. Simply check if the string the user entered is alpha characters only, otherwise ask again.</p>
<p>Notice the use of <code>str.isalpha()</code>.</p>
<pre><code>def get_name():
    name = input("What is your name?\n: ").strip().title()

    while not (name.replace("-", "") and
               name.replace("-", "").replace(" ", "").isalpha()):
        name = input("Please enter a valid name.\n: ").strip().title()

    return name
</code></pre>
<p>Checking <code>if name</code> will check if the string is empty, and using <code>str.strip()</code> on the values returned will remove any surrounding whitespace (stray spaces) to the left or right of the user input.</p>
<p>The <code>str.replace("-", "")</code> eliminates hyphens while checking validity. Thanks for pointing this out <strong>@AGN Gazer</strong>.</p>
<p>Now you can just call the function later in your script, or store it for later.</p>
<pre><code>name = get_name().title()

print("You said your name was " + name + ".)
</code></pre>
<p>The <code>str.title()</code> converts the letter of each word in a string to uppercase. For example, if I entered my name "jacob birkett", the output (and subsequent value of <code>name</code> would be "Jacob Birkett".</p>
<p>Take a look at the documentation for <a href="https://docs.python.org/3/library/stdtypes.html#str.isalpha" rel="nofollow noreferrer"><code>str.isalpha()</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>str.strip()</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>str.replace()</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.title" rel="nofollow noreferrer"><code>str.title()</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this :</p>
<pre><code>while Name == "" or Name.isnumeric() == True:
    Name = input("What is your name? ")
    print("")
</code></pre>
<p>Here if the Name is any numeric value it will ask again, But if the name is like alphanumeric it will accept.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a function like <code>.isalpha()</code> as this will return True if all the string contains all the alphabets:</p>
<pre><code>while True:
    Name = input("Please enter a valid name.\n: ")
    if name.isalpha()
        break
    else:
        print("Please enter a valid name.")
        continue

    print(Name)
</code></pre>
<p>Or You can try exception handling in python as (but this should be prevented):</p>
<pre><code>try :
    int(Name)
    print("Please enter a valid name")
    ...

except:
    print("Accepted")
    ...
</code></pre>
<p>This will check if the input is an integer print the error.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try:
This will check if variable <code>Name</code> containing numeric data or not.</p>
<pre><code>import time
Name = ""
while Name == "" :
    Name = input("What is your name? ")
    if not Name.isalpha():
        print "It is containing numberic characher or characters"
        Name = ""
    print("")

print(Name)
print("")
time.sleep(3)
</code></pre>
<p>You also can try if name is like "harsha-biyani":</p>
<pre><code>import time
Name = ""
while Name == "" :
    Name = input("What is your name? ")
    if any(i.isdigit() for i in Name):
        print "It is containing numberic characher or characters"
        Name = ""
    print("")

print(Name)
print("")
time.sleep(3)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use: </p>
<pre><code>Name.isalpha()
</code></pre>
<p><code>"3".isalpha()</code> </p>
<blockquote>
<p>False</p>
</blockquote>
<pre><code>"anna".isalpha()
</code></pre>
<blockquote>
<p>True</p>
</blockquote>
</div>
<span class="comment-copy">You could try using the float, and int methods to convert the string to those types. But wrap that in a try except, then if it succeeds, get the user to reenter the input, otherwise you know its not a number</span>
<span class="comment-copy">Is this Python 2 or 3?</span>
<span class="comment-copy">By default the type of <code>input</code> is <code>string</code>. You can convert using <code>int</code> and use conditions to check if it is an integer</span>
<span class="comment-copy">This is python 3. Sorry I didn't mention that earlier</span>
<span class="comment-copy">Your code seems to be malformed. I have answered to the best of my ability.</span>
<span class="comment-copy">Wow thanks a lot, although I have come across a problem when testing your code. It only seems to work the second time I input something. The first time it asks the question nothing seems to work.</span>
<span class="comment-copy">@Caeruleas Fixed. Thanks for pointing that out. See my edited answer.</span>
<span class="comment-copy">Well, although this is the accepted answer, I don't think it's the correct way to check. Names like Mary-Ann would not be accepted, same for names like Kim Robert.</span>
<span class="comment-copy">@spikespaz Thanks a lot! This solved my question. I appreciate the extra info to help better explain your answer as well :)</span>
<span class="comment-copy">@TobiasBr√∂samle Reload your page and see my edit. This is fixed.</span>
<span class="comment-copy">You shouldn't be using try/except for these things. This is simple enough to do without catching a thrown error, and suppressing errors should not be your first line-of-attack when validating user input.</span>
<span class="comment-copy">Thank You, I have edited the answer accordingly.</span>
<span class="comment-copy">Checking <code>str.isdigit()</code> for every character in the string is redundant, <code>str.isalpah()</code> does the same thing.</span>
<span class="comment-copy">@spikespaz You are correct</span>
<span class="comment-copy">@spikespaz What would <code>isalpha()</code> return for <code>'Maria-Elena'</code>???</span>
<span class="comment-copy">No @spikespaz is wrong</span>
<span class="comment-copy">@Harsha If you restore back checking of every character, I'll delete my answer</span>
