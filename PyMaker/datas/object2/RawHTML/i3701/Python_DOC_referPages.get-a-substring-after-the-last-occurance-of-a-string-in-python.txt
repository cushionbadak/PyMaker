<div class="post-text" itemprop="text">
<p>I have a string like:</p>
<pre><code>test = "/home/myself/Downloads/example.py"
</code></pre>
<p>And I want to get the text after the last occurrence of <code>/</code>, which is <code>example.py</code>. I tried using split:</p>
<pre><code>test.split("/")[0]
</code></pre>
<p>But the problem is that it would return the string with a fixed index, which I don't have usually.</p>
<p>How can I get the string after the last occurrence of /?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>str.split</code> and get index <code>-1</code> which is the last element of the list.</p>
<pre><code>test = "/home/myself/Downloads/example.py"
print(test.split("/")[-1]) # 'example.py'
</code></pre>
<p>Although, in the specific case of recovering a filename, the answer from <a href="https://stackoverflow.com/a/50702021/5079316">Ev. Kounis</a> displays the best approach.</p>
<p>You can let <a href="https://docs.python.org/3/library/os.path.html#os.path.basename" rel="nofollow noreferrer"><code>os</code></a> do it for you:</p>
<pre><code>import os
test = "/home/myself/Downloads/example.py"
os.path.basename(test)  # -&gt; example.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can let <a href="https://docs.python.org/3/library/os.path.html#os.path.basename" rel="nofollow noreferrer"><code>os</code></a> do it for you:</p>
<pre><code>import os
test = "/home/myself/Downloads/example.py"
os.path.basename(test)  # -&gt; example.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try using</p>
<pre><code>test.split("/")[-1]
</code></pre>
<p>negative indices go backwards in lists in python so this accesses the last element</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>pop</code> method.</p>
<pre><code>print(test.split("/").pop())
</code></pre>
<p><code>pop</code> method is faster than <code>slicing</code>.</p>
<pre><code>import timeit
t1 = timeit.Timer('test = "/home/myself/Downloads/example.py";test.split("/").pop()')
t2 = timeit.Timer('test = "/home/myself/Downloads/example.py";test.split("/")[-1]')
</code></pre>
<p>Output</p>
<pre><code>t1 = 9.307525000622263e-07
t2 = 8.126347900179098e-06
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your strings are paths, you can also operate with them using <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer"><code>pathlib</code></a>:</p>
<pre><code>p = Path("/home/myself/Downloads/example.py")
print(p.parts[-1])
# example.py
</code></pre>
</div>
<span class="comment-copy"><code>test.split("/")[-1]</code></span>
<span class="comment-copy">As the string looks remarkably like a file path, maybe there is a function to extract the filename from it?</span>
<span class="comment-copy">Or <code>test.rsplit("/", 1)[-1]</code></span>
<span class="comment-copy">@jdehesa yea sure, there are probably thousands of small variation as how you can do that</span>
<span class="comment-copy">@jdehesa, or using <code>pop</code> method which is faster than slicing.</span>
<span class="comment-copy">@MihaiAlexandru-Ionut Does getting a single element actually count as slicing? How can <code>pop</code> be faster than getting one element of a list?</span>
<span class="comment-copy">@jdehesa, i mean that pop is faster than slicing in case when you want the last item from one list.</span>
<span class="comment-copy">In the case of a path, this is clearly the best way to do that.</span>
