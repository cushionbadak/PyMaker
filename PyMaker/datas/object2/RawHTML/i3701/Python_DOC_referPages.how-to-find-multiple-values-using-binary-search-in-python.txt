<div class="post-text" itemprop="text">
<p>I am using a standard binary search algorithm that takes an integer value as an argument, and searches through a list for the integer. However, I want to be able to find the indexes of the location of each integer in the list that matches the search value. What I have so far is:</p>
<pre><code>def bin_search(x):
    my_list = [57,68,76,77,82,86,89,89,89,98,100]
    bottom = 0
    top = len(my_list)-1
    found = False
    location = -1
    while(bottom &lt;= top) and not(found):
        middle = int((bottom + top)//2)
        if(my_list[middle] == x):
            location = middle
            found = True
        else:
            if x &lt; my_list[middle]:
                top = middle - 1
            else:
                bottom = middle + 1

    return location

print(bin_search(89))
</code></pre>
<p>Any help in making this binary search able to find two values would be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>Adding in this code at the end of the binary search will provide the user with the index of the first and last occurrence of the value that is being searched for (x in this case). The user can then use the indexes to find the range of indexes that matches the searched item, since they know the indexes of the first and last occurrence of the searched item.</p>
<pre><code># Index of last occurrence
location2 = -1
# Index of first occurrence
location3 = -1

# Finds last index that matches x
for I in range(len(my_list)):
    if my_list[I] == x:
        location2 = I
# Finds first index that matches x
for I in range(len(my_list)):
    if my_list[I] == x:
        location3 = I
        break
</code></pre>
</div>
<span class="comment-copy">post the stack trace. <i>where</i> are you getting the error?</span>
<span class="comment-copy">why do you make <code>location</code> a list? I bet this is the source of your error.</span>
<span class="comment-copy">Do you need to reinvent the wheel? <a href="https://docs.python.org/3/library/bisect.html" rel="nofollow noreferrer">The <code>bisect</code> module</a> provides APIs that can directly determine <a href="https://docs.python.org/3/library/bisect.html#bisect.bisect_left" rel="nofollow noreferrer">the left</a> and <a href="https://docs.python.org/3/library/bisect.html#bisect.bisect_right" rel="nofollow noreferrer">right</a> bounds for a given value (or you just go straight to the left and start scanning linearly until you reach the end of the run of identical values).</span>
<span class="comment-copy">I made it a list so that I could store multiple values for the location.</span>
<span class="comment-copy">@Newoej <code>bisect</code> <i>is</i> binary search. See <a href="https://docs.python.org/3/library/bisect.html" rel="nofollow noreferrer">the docs</a>. (And, while you're at it, notice that the docs link to the source, so if you're not sure how they could have done some particular feature, you can just click and see how they did it.)</span>
