<div class="post-text" itemprop="text">
<p>I have directories structure:</p>
<pre><code>--- main_dir
------ aaa
--------subaaa
----------file
------ xxx
--------subxxx
----------file
------ 111
--------sub111
----------file
</code></pre>
<p>etc.</p>
<p>All directories has different names but FILE has the same name.
Every FILE has three lines.
My question is how to read these three lines frome every FILE in the fastest way? </p>
<p>I have written code that search for FILEs. But still do not know how to read all of them. Check this out:</p>
<pre><code>import os

def list_files(dir):
    r = []
    for root, dirs, files in os.walk(dir):
        for name in files:
            r.append(os.path.join(root, name))
return r, print(r)
list_files('some_path)
</code></pre>
<p>I want to achieve something like that:</p>
<pre><code>import os

def list_files(dir):
    r = []
    for root, dirs, files in os.walk(dir):
        for name in files:
            r.append(os.path.join(root, name))
    return r, print(r)
    with open(r[*]) as f:     #this is the question
    f.readlines()             #how to read all of the files
list_files('some_path)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To efficiently find every file named 1.txt and print it's contents prefixed with the files name would just be:</p>
<pre><code>find . -name '1.txt' -exec awk '{print FILENAME, $0}' {} +
</code></pre>
<p>If that's not all you want then edit your question to clarify.</p>
</div>
<div class="post-text" itemprop="text">
<p>Consider using:</p>
<pre><code>import os

listOfFiles = os.listdir("the absolute path to main_dir")
for fileName in listOfFiles:
 print fileName
 # read the lines of fileName
 with open(fileName) as f:
   contentOfFile = f.readlines()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I found the solution for openning FILEs, here is the code:</p>
<pre><code>import os

def list_files(dir):
    r = []
    for root, dirs, files in os.walk(dir):
        for name in files:
            r.append(os.path.join(root, name))
            with open(os.path.join(root, name)) as f:
                print(f.readlines())
    return r, print(r)


list_files('C:\gpdw-feeds')
</code></pre>
<p>Now I have a problem with the structure.
How to list ONLY files in the last subfolders?
Example:</p>
<pre><code>---main_dir
----sub
-----file1
----sub_sub
-----file2
</code></pre>
<p>I want to read only file2, but my code reads all of the files in all of the subs.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/2186525/use-a-glob-to-find-files-recursively-in-python" title="use a glob to find files recursively in python">stackoverflow.com/questions/2186525/…</a></span>
<span class="comment-copy">not sure, but are you looking for <code>open</code> function to read the files once you've the names in a list? check out <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/3/tutorial/…</a></span>
<span class="comment-copy">This is an output from my code: ['C:\\gpdw-feeds\\1\\DA1\\1.txt', 'C:\\gpdw-feeds\\1\\DA2\\1.txt', 'C:\\gpdw-feeds\\2\\da\\1.txt', 'C:\\gpdw-feeds\\xxx\\da2323232\\1.txt'] So it's just simple list with files in different folders.  I want to read all of these '1.txt's lines, because in every 1.txt lines are different.</span>
<span class="comment-copy">yeah, could you try the <code>open</code> function, see examples in the docs link I gave and see if that solves your issue</span>
<span class="comment-copy">++ve for simple command sir.</span>
<span class="comment-copy">It will show only subfolders. Please check my code (I've added to post). Now i have the list of all files but still don't know how to read all of them.</span>
