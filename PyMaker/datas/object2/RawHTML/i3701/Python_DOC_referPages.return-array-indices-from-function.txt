<div class="post-text" itemprop="text">
<p>I have an array and function and I would like the function to return a list of indices in which the difference of two consecutive elements passes a threshold.</p>
<p>I have:</p>
<pre><code>def func (y, t=100):
    for i in range(1, len(y)): #Range skips 1st element
        if abs(y[i] - y[i-1]) &gt; t:
            return(i)
</code></pre>
<p>The problem I'm facing is that this function only returns the first index where my if statement is true. How do I get the rest of them?</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two ways. First, <code>yield</code> instead of <code>return</code> will give you a generator:</p>
<pre><code>def func (y, t=100):
    for i in range(1, len(y)): #Range skips 1st element
        if abs(y[i] - y[i-1]) &gt; t:
            yield(i)
</code></pre>
<p>Or add a list in you function:</p>
<pre><code>def func (y, t=100):
    output = []
    for i in range(1, len(y)): #Range skips 1st element
        if abs(y[i] - y[i-1]) &gt; t:
            output.append(i)
    return output
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> you can do that like:</p>
<h3>Code:</h3>
<pre><code>def peak_detect(in_data, threshold=100):
    return [i for i, (x, y) in enumerate(zip(in_data, in_data[1:]))
            if abs(y - x) &gt;= threshold]
</code></pre>
<h3>Test Code:</h3>
<pre><code>data = [1, 2000, 2001, 4000]

print(peak_detect(data))
</code></pre>
<h3>Result:</h3>
<pre><code>[0, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def peak_detect (y_, threshold=100):
    indicesList = []
    for i in range(1, len(y_)): #Range skips 1st element
        if abs(y[i] - y[i-1]) &gt; threshold:
            indicesList.append(i)
    return(indicesList)
</code></pre>
</div>
<span class="comment-copy"><code>yield i</code> and collect  items in a <code>list</code>(In other words convert your function to a generator function)</span>
<span class="comment-copy">Don't return it. Just capture it.</span>
