<div class="post-text" itemprop="text">
<p>I am a beginner with ctypes and I can not figure out how to turn char array into a string in python. I have started using :</p>
<p><code>create_string_buffer(bytes(var, 'utf8'))</code> to populate an array, but had no luck with getting it back as a string using "byref()".</p>
<p>If someone has any idea you would be a life saver. Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p><em>ctypes</em> page: <a href="https://docs.python.org/3/library/ctypes.html#module-ctypes" rel="nofollow noreferrer">[Python]: ctypes - A foreign function library for Python</a>. <br/>
It's hard to tell without seeing some code, but here's an example:</p>
<blockquote>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; import ctypes
&gt;&gt;&gt; "Python {:s} on {:s}".format(sys.version, sys.platform)
'Python 3.5.2 (default, Nov 23 2017, 16:37:01) \n[GCC 5.4.0 20160609] on linux'
&gt;&gt;&gt; src = "some dummy Python string"
&gt;&gt;&gt; src_charp = ctypes.create_string_buffer(src.encode())
&gt;&gt;&gt; dst_initial = b"Just "
&gt;&gt;&gt; dst_charp = ctypes.create_string_buffer(len(dst_initial) + len(src) + 1)
&gt;&gt;&gt; dst_charp
&lt;ctypes.c_char_Array_25 object at 0x7fe6c41209d8&gt;
&gt;&gt;&gt; dst_charp.value
b''
&gt;&gt;&gt; for idx, c in enumerate(dst_initial):
...     dst_charp[idx] = c
...
&gt;&gt;&gt; dst_charp.value
b'Just '
&gt;&gt;&gt; ctypes.CDLL(None).strcat(dst_charp, src_charp)
32414128
&gt;&gt;&gt; dst_charp
&lt;ctypes.c_char_Array_25 object at 0x7fe6c41209d8&gt;
&gt;&gt;&gt; dst_charp.value
b'Just some dummy Python string'
&gt;&gt;&gt; dst = dst_charp.value.decode()
&gt;&gt;&gt; dst
'Just some dummy Python string'
</code></pre>
</blockquote>
<p><strong>Notes</strong>:</p>
<ul>
<li>Uses <a href="http://man7.org/linux/man-pages/man3/strcat.3.html" rel="nofollow noreferrer">[man7]: STRCAT(3)</a> as an example. For more details on <strong>how</strong>, please check <a href="https://stackoverflow.com/questions/49878901/how-does-ctypes-cdll-loadlibrarynone-work/49880922#49880922">[SO]: How does ctypes.cdll.LoadLibrary(None) work? (@CristiFati's answer)</a></li>
<li>There was no <code>byref</code> involved</li>
</ul>
</div>
<span class="comment-copy">Did you try: <a href="https://stackoverflow.com/questions/8875185/casting-into-a-python-string-from-a-char-returned-by-a-dll" title="casting into a python string from a char returned by a dll">stackoverflow.com/questions/8875185/â€¦</a></span>
<span class="comment-copy">The solution is quite ugly indeed :  cp = create_string_buffer(bytes("  &lt;spaces of return value for example (20 spaces, chars...) stackoverflow just ignores the sapces&gt;                   ", 'utf8'))  <b>&lt;--- keep in mind the spaces</b>  and then getting it using <code>byref(cp)</code> from inside the function, you get the object  str(cp.value) finally returns the desired string/path  I have no idea why it works, so if someone could elaborate me a bit on this python madness i'd appreciate it. Thanks</span>
<span class="comment-copy">So the argument is an inout one. I modified the code to reflect that. As I said at the beginning, it's hard to guess what happens in your case without any code. For a proper understanding, the <i>Python</i> code that calls the function should be available, and also the <i>C</i> function declaration.</span>
