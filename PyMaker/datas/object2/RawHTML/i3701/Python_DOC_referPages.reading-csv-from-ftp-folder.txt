<div class="post-text" itemprop="text">
<p>I am trying to read csv file from FTP Folder   </p>
<pre><code>ftp = FTP('adr')  
ftp.login(user='xxxx', passwd = 'xxxxx')
r = StringIO()
ftp.retrbinary('RETR /DataLoadFolder/xxx/xxx/xxx/'+str(file_name),r.write)
r.seek(0)
csvfile1 = csv.reader(r,delimiter=';')
input_file = [list(line) for line in csv.reader(r)] ----- Error
</code></pre>
<p>getting an error at last line as      </p>
<pre><code>new-line character seen in unquoted field - do you need to open the file in universal-newline mode?
</code></pre>
<p>My csv file   </p>
<p><a href="https://i.stack.imgur.com/Y682L.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Y682L.png"/></a></p>
<p>Text Version<br/>
<a href="https://i.stack.imgur.com/WAmmb.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/WAmmb.png"/></a></p>
<p>There are whites spaces at the end of each row (after 17.00)</p>
<p>Data starts from second row   </p>
<p>what does the error mean? Any help would be much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>The error message simply asking how you'd want to handle the newline differently due to historical reasons, you can read the explanation <a href="https://stackoverflow.com/a/419460/4902099">here</a>. </p>
<p>To solve the issue, specify the <code>newline</code> on <code>StringIO</code> like this:</p>
<pre><code>r = StringIO(newline='')
</code></pre>
<p>According to <a href="https://docs.python.org/3/library/io.html#io.StringIO" rel="nofollow noreferrer">StringIO documentation</a>. If newline is set to None, newlines are written as <code>\n</code> on all platforms, but universal newline decoding is still performed when reading.</p>
</div>
<div class="post-text" itemprop="text">
<p>I could partially reproduce and fix. The error is caused by a line containing a <em>bad</em> end of line. I could reproduce by adding a line <code>\r \n</code> at the end of an otherway valid csv file.</p>
<p>A simple way to fix it is to use a filter to eliminate blank lines and clean end of lines:</p>
<pre><code>def filter_bytes(fd):
    for line in fd:
        line = line.strip()
        if len(line) != 0:
            yield(line + b'\r\n')
</code></pre>
<p>Once this is done, your code could become:</p>
<pre><code>ftp = FTP('adr')  
ftp.login(user='xxxx', passwd = 'xxxxx')
r = BytesIO()
ftp.retrbinary('RETR /DataLoadFolder/xxx/xxx/xxx/'+str(file_name),r.write)
r.seek(0)
csvfile1 = csv.reader(filter_bytes(r),delimiter=';')
input_file = list(csvfile1)
</code></pre>
</div>
<span class="comment-copy">A csv file is <b>not</b> a spreadsheet but plain text. Once you load it into Excel, what you see in not the original file but the way it has been transformed. Please show the text version...</span>
<span class="comment-copy">@SergeBallesta edited question and added text version. FYI there are around 70 white spaces at the end of each row</span>
<span class="comment-copy">How can you feed a <code>StringIO</code> with bytes retrieved from <code>retrbinary</code>? Is this really your real code?</span>
<span class="comment-copy">nothing seems to be worked. please find edited question. Thanks</span>
<span class="comment-copy">Maybe you should test the code by reading the csv directly from file to make sure whether the StringIO/FTP reading cause the problem or the problem was caused by malformed csv file.</span>
<span class="comment-copy">problem was caused by malformed csv file, previously i used to read csv firectly from  file with same code.</span>
