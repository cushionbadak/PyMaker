<div class="post-text" itemprop="text">
<p>I have a test that I am running with:</p>
<pre><code>pytest --capture=no --verbose --rootdir=testing/ testing/tests/docker_test.py
</code></pre>
<p>from <code>/home/user/development/</code>. The test checks if some containers are running and uses the default logging framework of Python 3.6. The logger inside the test file is configured as follows:</p>
<pre><code>logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
logging.basicConfig(level=logging.INFO, stream=sys.stdout, format="%(asctime)s %(levelname)s %(message)s")
</code></pre>
<p>Inside tests I am using the logger as follows:</p>
<pre><code>logger.info(f"TEST SUCCESSFUL: container {container_name} is running")
logger.info(f"TEST SUCCESSFUL: all required containers are running")
</code></pre>
<p>Inside <code>testing</code> (the root directory) I have a file <code>pytest.ini</code>:</p>
<pre><code>[pytest]
log_level = INFO
log_cli_level = INFO
log_format = %(asctime)s %(levelname)s %(message)s
log_cli_format = %(asctime)s %(levelname)s %(message)s
log_date_format = %H:%M:%S
log_cli_date_format = %H:%M:%S
</code></pre>
<p>Basically I do not want any date to be in the timestamp and I want pytest to log live to the command line when I am running the tests.</p>
<p>For one I am wondering what <code>asctime</code> stands for. It looks like "ascii time". I do not want a standardized timestamp, but instead the format I describe in the <code>pytest.ini</code>. That is why I also tried to use <code>date</code>, <code>datetime</code> and <code>timestamp</code>, instead of <code>asctime</code>, all resulting in an error. So I guess <code>asctime</code> is the only way to get a timestamp.</p>
<p>However, pytest seems to ignore all the options I am setting in my <code>pytest.ini</code> file, although is indicates, that it found the file, when I am running the tests:</p>
<pre><code>cachedir: testing/.pytest_cache
rootdir: /home/user/development/testing, inifile: pytest.ini
</code></pre>
<p>How can I change the timestamp in pytest logging?</p>
</div>
<div class="post-text" itemprop="text">
<p>I guess what you are missing is <code>log_cli = 1</code> (or <code>true</code>/<code>yes</code>/etc) in your <code>pytest.ini</code>. Besides that, with the config you're provided the log records are printed in the format you specified in <code>log_cli_format</code>. You can even reduce the <code>pytest.ini</code> to:</p>
<pre><code>[pytest]
log_cli = 1
log_cli_level = INFO
log_cli_format = %(asctime)s %(levelname)s %(message)s
log_cli_date_format = %H:%M:%S
</code></pre>
<p>Also, the above config will take care of the root logger config in test session, so you shouldn't need to configure the logger in tests for live logging. Just call the logger in tests:</p>
<pre><code>import logging

def test_spam():
    logger = logging.getLogger(__name__)
    logger.info('spam')
    logger.warning('eggs')
    logger.error('bacon')
</code></pre>
<p>This will print:</p>
<pre><code>$ pytest
============================== test session starts ================================
platform linux -- Python 3.6.5, pytest-3.4.1, py-1.5.3, pluggy-0.6.0 -- /data/gentoo64/usr/bin/python3.6
cachedir: .pytest_cache
rootdir: /data/gentoo64/home/u0_a82/projects/stackoverflow/so-50677656, inifile: pytest.ini
plugins: mock-1.6.3, cov-2.5.1, flaky-3.4.0
collected 1 item

testing/tests/test_docker.py::test_logs
---------------------------------- live log call ----------------------------------
16:29:12 INFO spam
16:29:13 WARNING eggs
16:29:13 ERROR bacon
PASSED                                                                       [100%]
============================ 1 passed in 1.08 seconds =============================
</code></pre>
<blockquote>
<p>For one I am wondering what asctime stands for</p>
</blockquote>
<p>The <a href="https://docs.python.org/3/library/logging.html#logrecord-attributes" rel="nofollow noreferrer">logging docs</a> are a bit laconic about it:</p>
<blockquote>
<p>Human-readable time when the LogRecord was created. By default this is of the form ‘2003-07-08 16:49:45,896’ (the numbers after the comma are millisecond portion of the time).</p>
</blockquote>
<p>However, <code>asctime</code> does not mean that the records will be always formatted using <a href="https://docs.python.org/3/library/time.html#time.asctime" rel="nofollow noreferrer"><code>time.asctime</code></a> - it's only the default datetime format used when you don't pass your own to the <code>logging.Formatter</code> (<a href="https://docs.python.org/3/library/logging.html#logging.Formatter" rel="nofollow noreferrer">second argument in the formatter constructor</a>).</p>
</div>
