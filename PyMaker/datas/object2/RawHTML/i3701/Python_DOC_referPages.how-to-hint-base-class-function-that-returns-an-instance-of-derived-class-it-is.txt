<div class="post-text" itemprop="text">
<p>I want to hint that for B-instance <code>.duplicate_itself(</code>) returns B-instance, not A-instance.</p>
<pre><code>class A:
    def duplicate_itself(self) -&gt; 'WHAT SHOULD I WRITE HERE?'
        return self.__class__()         

class B(A):
    pass
</code></pre>
<p>BTW I am using PyCharm, so feel free to write an answer if you know some PyCharm specific solution </p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done by attaching a <a href="https://docs.python.org/3/library/typing.html#typing.TypeVar" rel="nofollow noreferrer"><code>TypeVar</code></a> to <code>self</code>:</p>
<pre><code>T = typing.TypeVar('T')

class A:
    def duplicate_itself(self: T) -&gt; T:
        return self.__class__()
</code></pre>
</div>
<span class="comment-copy">How is PyCharm relevant to the question?</span>
<span class="comment-copy">I'm not sure but as type hinting is static, is it possible?</span>
<span class="comment-copy">@Aran-Fey, i've added pycharm related note.</span>
<span class="comment-copy">It was hard for me, to understand <a href="https://docs.python.org/3/library/typing.html#typing.TypeVar" rel="nofollow noreferrer">docs</a>. But now everything clear! Will read it again.</span>
<span class="comment-copy">@AlexanderChzhen -- if you want more detailed docs, you may want to check out <a href="https://mypy.readthedocs.io/en/latest/generics.html#generic-methods-and-generic-self" rel="nofollow noreferrer">mypy's</a> -- it generally does a more thorough job of explaining PEP 484 semantics. Warning: while most of the docs apply to both mypy and PyCharm (or any PEP 484 compliant typechecker), you might run into one or two sections which are mypy-specific or which mypy implements differently from Pycharm.</span>
