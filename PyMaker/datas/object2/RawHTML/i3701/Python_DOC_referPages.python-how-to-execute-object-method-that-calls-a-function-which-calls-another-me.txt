<div class="post-text" itemprop="text">
<p>There's this function called <strong>start_party</strong> that doesn't belong to any class, an independent function that prints music, tells a party participant to make something interesting like dancing or singing.</p>
<p>A <strong>person</strong> can fit like a party participant, it has a <strong>feeling</strong> with two states: into connection and out of connection. A person can be told to execute an action(method) according to the outer function; so when the person executes the action, it starts by feeling the connection in, participates in the outer function with whichever method was asked to achieve. Outer function stops(start party ends...) and so the Person feels disconnected from this incredible moment, as it makes us know by printing it.</p>
<p>All this experience was implemented as follows:</p>
<pre><code>class Feeling():
    def __init__(self):
        self.data_in = 'into connection'
        self.data_out = 'out of connection'


class Person():
    def __init__(self):
        self.feeling = Feeling()

    def execute(self, outer_function, inner_function):
        print(self.feeling.data_in)
        outer_function(self, inner_function)
        print(self.feeling.data_out)

    def dance(self):
        print(' └[∵┌]└[ ∵ ]┘[┐∵]┘ ')

    def sing(self):
        print('( ◜◒◝ )')


def start_party(party_participant, inner_function):
    print('♬♩♪♩')
    party_participant.inner_function()
    print('♬♩♪♩')


liz = Person()
liz.execute(start_party, dance)
</code></pre>
<p>My best try and does not compile, it gives me a: </p>
<blockquote>
<p>NameError: name 'dance' is not defined</p>
</blockquote>
<p>But still the main problem is not compilation, it's design. (Though I need to fix compilation too.)</p>
<p>Desired output should be: </p>
<pre><code>into connection
♬♩♪♩
└[∵┌]└[ ∵ ]┘[┐∵]┘
♬♩♪♩
out of connection
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr()</code></a> to get the class method to execute like:</p>
<h3>Code:</h3>
<pre><code>def start_party(party_participant, inner_function):
    print('♬♩♪♩')
    getattr(party_participant, inner_function)()
    print('♬♩♪♩')
</code></pre>
<h3>Test Code:</h3>
<pre><code>class Feeling():
    def __init__(self):
        self.data_in = 'into connection'
        self.data_out = 'out of connection'


class Person():
    def __init__(self):
        self.feeling = Feeling()

    def execute(self, outer_function, inner_function):
        print(self.feeling.data_in)
        outer_function(self, inner_function)
        print(self.feeling.data_out)

    def dance(self):
        print(' └[∵┌]└[ ∵ ]┘[┐∵]┘ ')

    def sing(self):
        print('( ◜◒◝ )')


def start_party(party_participant, inner_function):
    print('♬♩♪♩')
    getattr(party_participant, inner_function)()
    print('♬♩♪♩')


liz = Person()
liz.execute(start_party, 'dance')
</code></pre>
<h3>Results:</h3>
<pre><code>into connection
♬♩♪♩
 └[∵┌]└[ ∵ ]┘[┐∵]┘ 
♬♩♪♩
out of connection
</code></pre>
</div>
<span class="comment-copy"><code>liz.execute(start_party, liz.dance)</code></span>
<span class="comment-copy">AttributeError: 'Person' object has no attribute 'inner_function' Tried with: liz.dance(), same</span>
<span class="comment-copy">That's a new error. Remove the <code>party_participant.</code> from <code>start_party</code>. <code>inner_function</code> is actually a method bound to the <code>Person</code> already.</span>
<span class="comment-copy">Your correction also works. But if tried to make many people dance, I would need to mention twice something they know. Moreover, I could make liz dance as Klaus, but they'd dance the same :/</span>
