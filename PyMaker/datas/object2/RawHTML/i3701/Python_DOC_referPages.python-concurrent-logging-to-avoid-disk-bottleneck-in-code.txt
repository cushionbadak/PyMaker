<div class="post-text" itemprop="text">
<p>I'm not super familiar with asyncio, but I was hoping there would be some easy way to use asyncio.Queue to push log messages to a Queue instead of writing them to the disk, and then have a worker on a thread wait for these Queue events and write them to disk when resources are available. This seems pretty widely necessary, as logging is a huge bottleneck in a lot of code but isn't always needed in real time. Are there any pre-existing packages for this or can anyone with more experience write a short example script to get me started? NOTE: This needs to interface with existing code, so making it all packaged in a class would probably be preferred.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's handled in the standard library in recent Python versions. See <a href="https://plumberjack.blogspot.com/2010/09/improved-queuehandler-queuelistener.html" rel="nofollow noreferrer">this post</a> for information, and the <a href="https://docs.python.org/3/library/logging.handlers.html#queuehandler" rel="nofollow noreferrer">official documentation</a>. This functionality predates <code>asyncio</code>, and so doesn't use it (and doesn't especially need to).</p>
<p>For Python 2.7, you can use the <a href="https://pypi.org/project/logutils/" rel="nofollow noreferrer">logutils</a> package which provides equivalent functionality.</p>
</div>
<span class="comment-copy">It sounds like you might want <code>queue.Queue</code>, not <code>asyncio.Queue</code>. asyncio is single threaded.</span>
<span class="comment-copy">Thanks! I don't see that highlighted in documentation. It looked like they had moved queue.Queue at first glance!</span>
