<div class="post-text" itemprop="text">
<p>Please help and explain. I tried by adding <code>max</code> argument but it didn't help.</p>
<pre><code> key = "tea-1_a-1"
 print(key.replace("a-1","a-2")) # prints 'tea-2_a-2'
</code></pre>
<p>I need <code>tea-1_a-2</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>A regular expression would do the job by looking for either the beginning of the string or the underscore character before your pattern:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; key = 'a-1_tea-1'
&gt;&gt;&gt; re.sub(r'(?:^|(?&lt;=_))a-1', 'a-2', key)
'a-2_tea-1'
&gt;&gt;&gt; key = 'tea-1_a-1'
&gt;&gt;&gt; re.sub(r'(?:^|(?&lt;=_))a-1', 'a-2', key)
'tea-1_a-2'
</code></pre>
<p>See Python <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">Regular expression syntax</a> documentation for more information.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try the following:</p>
<pre><code>key = "tea-1_a-1"
print(key.replace("_a-1","_a-2")) 
</code></pre>
</div>
<span class="comment-copy">You have <code>"te" + "a-1" + "_" + "a-1"</code> and both <code>"a-1"</code> get replaced. As to what how to get what you want, you need to be a bit more specific... For instance if you want last three characters replaced: <code>key[:-3] + "a-2". Or </code>"a-1"<code>, but only as last three characters, you can test those three characters or ending of the string and replace their length on match. Or use </code>re.sub`. But please, clarify your question a bit more.</span>
<span class="comment-copy">I just realised I have two times "a-1" in my string :/</span>
<span class="comment-copy">Oh, I thought the double <code>a-1</code> was actually your point and the problem you're trying to solve :)</span>
<span class="comment-copy">Thanks that works. So there is no a more robust solution? In case when <code>key = "a-1_tea-1"</code> your method will not work but I solve that case with <code>(key.replace("a-1","a-2", 1))</code></span>
