<div class="post-text" itemprop="text">
<p>I'm new to regular expressions, and I'm trying to figure out how to generate a new column in a dataframe that captures the first initial of a name and the last name.</p>
<p>example <code>df</code>:</p>
<pre><code>Name           NormName
john smith     j smith
s r peterson   s peterson
sandra oh      s oh
</code></pre>
<p>This is the code I tried so far, but can't seem to get it to work. I don't know how to get it to just replace the middle part only.</p>
<pre><code>namereg = re.compile('(^[a-z])(.*)(\s[a-z]*$)')
names['NormName'] = names.Name.apply(lambda tmp: namereg.sub('',tmp))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you don't even need to use regex:</p>
<pre><code>names['NormName'] = names.Name.apply(lambda tmp: tmp[0]+" "+tmp.rpartition(" ")[2])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this should work, please tweak it according to you need.</p>
<pre><code>import re
name="john smith"
PATTERN=r'^(\w).*(\s+\w+)$'
MATCH=re.search(PATTERN, name)
print(MATCH.group(1)+MATCH.group(2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may use</p>
<pre><code>names['NormName'] = names['Name'].str.replace(r'^([a-z]).*\s([a-z]+)$', r'\1 \2')
</code></pre>
<p>See the <a href="https://regex101.com/r/YQWMjD/1" rel="nofollow noreferrer">regex demo</a>.</p>
<p><strong>Pattern details</strong></p>
<ul>
<li><code>^</code> - start of string</li>
<li><code>([a-z])</code> - Group 1 (referred to with the <code>\1</code> placeholer from the replacement pattern): one lowercase ASCII letter</li>
<li><code>.*\s</code> - any 0+ chars up to the last whitespace </li>
<li><code>([a-z]+)</code> - Group 2 (referred to with the <code>\2</code> placeholer from the replacement pattern): 1+ lowercase ASCII letters at...</li>
<li><code>$</code> - the end of the string.</li>
</ul>
<p>Python demo:</p>
<pre><code>&gt;&gt;&gt; names['NormName'] =  names['Name'].str.replace(r'^([a-z]).*\s([a-z]+)$', r'\1 \2')
&gt;&gt;&gt; names
           Name    NormName
0    john smith     j smith
1  s r peterson  s peterson
2     sandra oh        s oh
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try to use re.sub. Here ^(\w) first letter, (\b\w+\b$) last word. </p>
<pre><code>df['NormName']=df.Name.apply(lambda x: re.sub(r'^(\w).*(\b\w+\b$)',r'\1 \2',x))
</code></pre>
</div>
<span class="comment-copy">Why replace? Just exract it. (Why do you use regex in the first place? Isn't split enough?)</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split()</code></a> should be more than enough for this.</span>
<span class="comment-copy">There is no need to use regex <i>unless</i> there is no need to <i>validate</i> the input.</span>
<span class="comment-copy">@zwer Than <code>rpartition</code>? Nope.</span>
<span class="comment-copy">It will work, too, however, note that <code>\w</code> also matches digits and <code>_</code> char while OP regex clearly matches lowercase ASCII letters only. OP is using pandas, so this approach might turn out a little bit "messier" to implement compared to my suggestion.</span>
<span class="comment-copy">Don't use <code>ALLCAPS</code> as variable names. Use <code>lowercase_with_underscores</code></span>
