<div class="post-text" itemprop="text">
<p>I have a python list as follows: </p>
<pre><code>[(numpy.datetime64('2000-04-01'), 'pie'),
 (numpy.datetime64('2000-04-01'), 'apple'),
 (numpy.datetime64('2000-04-01'), 'orange'),
 (numpy.datetime64('2000-04-01'), 'mango'),
 (numpy.datetime64('2000-04-01'), 'pears')]
</code></pre>
<p>i want it to a csv file output as following</p>
<pre><code>|    date    |  item |
+------------+-------+
| 2000-04-01 | pie   |
| 2000-04-01 | apple |
|     ...    |  ...  |
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I was able to output as csv file finally.</p>
<pre><code>import csv
with open('date_prop.csv','w',newline='') as out:
    csv_out=csv.writer(out)
    csv_out.writerow(['date','item'])
    for row in f2:
        csv_out.writerow(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Straight forward Python file write:</p>
<pre><code>In [116]: with open('test','w') as f:
     ...:     print('   date   item', file=f)
     ...:     for t in alist:
     ...:         print('%s   %s'%t, file=f)
     ...:         
In [117]: cat test
   date   item
2000-04-01   pie
2000-04-01   apple
2000-04-01   orange
2000-04-01   mango
2000-04-01   pears
</code></pre>
<p>The key is that <code>str(np.datetime64('2000-04-01')</code> is formatted as you want.</p>
<p>And object dtype array can be written with <code>savetxt</code> with the right <code>fmt</code>:</p>
<pre><code>In [121]: arr = np.array(alist)
In [122]: arr
Out[122]: 
array([[numpy.datetime64('2000-04-01'), 'pie'],
       [numpy.datetime64('2000-04-01'), 'apple'],
       [numpy.datetime64('2000-04-01'), 'orange'],
       [numpy.datetime64('2000-04-01'), 'mango'],
       [numpy.datetime64('2000-04-01'), 'pears']], dtype=object)
In [123]: np.savetxt('test', arr, fmt='%s', delimiter=',', header='date item')
In [124]: cat test
# date item
2000-04-01,pie
2000-04-01,apple
2000-04-01,orange
2000-04-01,mango
2000-04-01,pears
</code></pre>
<p>I could also create a structured array and write that with <code>savetxt</code></p>
<pre><code>In [125]: arr = np.array(alist, dtype='datetime64[D], U10')
In [126]: arr
Out[126]: 
array([('2000-04-01', 'pie'), ('2000-04-01', 'apple'),
       ('2000-04-01', 'orange'), ('2000-04-01', 'mango'),
       ('2000-04-01', 'pears')], dtype=[('f0', '&lt;M8[D]'), ('f1', '&lt;U10')])
In [127]: np.savetxt('test', arr, fmt='%s', delimiter=',  ', header='date   item
     ...: ')
In [128]: cat test
# date   item
2000-04-01,  pie
2000-04-01,  apple
2000-04-01,  orange
2000-04-01,  mango
2000-04-01,  pears
</code></pre>
</div>
<span class="comment-copy">This is not a numpy object, numpy doesn't have lists. You can turn your list into a pandas' dataFrame and then save it with <code>to_csv</code> method.</span>
<span class="comment-copy">the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module works fine too, without pandas</span>
<span class="comment-copy">Iterate on the list, format each element as you wish and write to the file.  Just ordinary python text file creation.</span>
