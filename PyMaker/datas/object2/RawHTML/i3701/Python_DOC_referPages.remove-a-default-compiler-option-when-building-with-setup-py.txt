<div class="post-text" itemprop="text">
<p>I am exposing my C++ code to Python using pybind11. Let's say I'm doing exactly <a href="https://github.com/pybind/python_example" rel="nofollow noreferrer">the example</a> provided by the pybind developers. In the end, I'm building using</p>
<pre><code>python setup.py build
</code></pre>
<p>The compiler is invoked with </p>
<pre><code>clang ... -DNDEBUG ... -O3 ... -I... -std=c++14
</code></pre>
<p>My question is simple:</p>
<p><em>How can I, at least temporarily, switch on the assertions in my code? I.e. how can I tell the setuptools to omit the <code>-DNDEBUG</code> compiler option?</em></p>
</div>
<div class="post-text" itemprop="text">
<p>Try</p>
<pre><code>setup(...
    ext_modules=[Extension(...
        undef_macros=['NDEBUG']
    ...)]
...)
</code></pre>
<p>See <a href="https://docs.python.org/3/distutils/apiref.html#distutils.core.Extension" rel="nofollow noreferrer">https://docs.python.org/3/distutils/apiref.html#distutils.core.Extension</a></p>
</div>
<span class="comment-copy">Thanks a lot for your answer. This seems exactly what I need. Sadly though, it seems that it does not work for me... To verify that the option is actually invoked I also tried the illegal <code>undef_macros=['-DNDEBUG']</code> which raises indeed an error. Also <code>undef_macros=['DNDEBUG']</code> does not get rid of the define.</span>
<span class="comment-copy">Shouldn't it be just <code>undef_macros=['NDEBUG']</code>?</span>
<span class="comment-copy">Sorry, then I did not make myself clear enough. I tried <code>undef_macros=['NDEBUG']</code> in addition to what I mention. With each of them the compiler option <code>-DNDEBUG</code> remains.</span>
