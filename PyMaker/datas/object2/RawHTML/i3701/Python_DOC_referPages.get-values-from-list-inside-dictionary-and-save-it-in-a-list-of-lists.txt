<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/464864/how-to-get-all-possible-combinations-of-a-list-s-elements">How to get all possible combinations of a listâ€™s elements?</a>
<span class="question-originals-answer-count">
                    24 answers
                </span>
</li>
</ul>
</div>
<p>I have a dictionary A containing day as a key, and list of strings as a values example: </p>
<pre><code>A = {"day1": ['A', 'B', 'C']}.
</code></pre>
<p>How can I create a List B containing the unique relationships that will be established Lists?</p>
<pre><code>B = [['A','B'], ['A','C'], ['B','C']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>A = {"day1": ['A', 'B', 'C']}
B = [['A','B'], ['A','C'], ['B','C']]

vals = A['day1']
connections = []
for val in vals:
    connections_to_val = [(val, x) for x in vals 
        if (val != x and (x, val) not in connections)]
    connections.extend(connections_to_val)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; A = {"day1": ['A', 'B', 'C']}
&gt;&gt;&gt; seq = A["day1"]
&gt;&gt;&gt; list(itertools.combinations(seq, r=2))
[('A', 'B'), ('A', 'C'), ('B', 'C')]
</code></pre>
</div>
<span class="comment-copy">Thank you it works, but I didn't understand how connections_to_val works can you simplify it to separated for and if statements</span>
<span class="comment-copy">connections_to_val is a list comprehension that basically loops through the values in vals = ('A', 'B', 'C') using the variable x and for every value it appends the tuple (val, x). So we append the tuple (val, x) if the conditions (val!=x and x,val not in connections) is true. That means that we don not want to append tuples where val and x are equal (i.e. ('A', 'A') and tuples that are already in the list but in opposite order (i.e. if ('A', 'B') is in there, do not append ('B', 'A').</span>
<span class="comment-copy">the doc: <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow noreferrer">docs.python.org/3/library/itertools.html#itertools.combinations</a></span>
