<div class="post-text" itemprop="text">
<p>Write a function, which would return a list with the strings and their index.  e.g. <code>['good', 'morning']</code> -&gt; <code>['0 - good', '1 - morning']</code></p>
<p>I tried this:</p>
<pre><code>def add_index(list_a):

    x = []
    for word in list_a:
        x = [list_a.index(word) for word in list_a]

    return x
</code></pre>
<p>However, the return is <code>[0, 1]</code>, not what I am looking for.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3.5/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> function:</p>
<pre><code>&gt;&gt;&gt; def f(data):
...     return ['{} - {}'.format(i, s) for i, s in enumerate(data)]
... 
&gt;&gt;&gt; f(['good', 'morning'])
['0 - good', '1 - morning']
</code></pre>
<p>If you are in python 3.6+ you can also use <a href="https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals" rel="nofollow noreferrer"><code>f-strings</code></a>:</p>
<pre><code>&gt;&gt;&gt; def f(data):
...     return [f'{i} - {s}' for i, s in enumerate(data)]
... 
&gt;&gt;&gt; f(['good', 'morning'])
['0 - good', '1 - morning']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>x = []
for word in list_a:
    x = [list_a.index(word) + ' - ' + word  for word in list_a]

return x
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your list comprehension is only pulling the index and not the word:</p>
<pre><code>x = ["{} - {}".format(list_a.index(word), word) for word in list_a]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try doing this:</p>
<pre><code>for index, word in enumerate(list_a):
    print(str(index) + " - " + word)
</code></pre>
<p>This will add an index number for every topic in list_a. That index is then added into a string printing it. If you want it to be added to a new list I would do like this. </p>
<pre><code>x = []
for index, word in enumerate(list_a):
    x.insert(len(x), str(index) + " - " + str(word))
</code></pre>
</div>
