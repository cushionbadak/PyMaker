<div class="post-text" itemprop="text">
<p>I need to pass an instance method as an argument to a function:</p>
<pre><code>class C(object):
    def m(self):
        print("m",self)

def f(l,b):
    for z in l:
        b(z)

x = C()

f([x], lambda c: c.m())
</code></pre>
<p>is there a better way than the <code>lambda</code>?</p>
<p>It appears that <code>f([x], C.m)</code> works too, but is this an accident or an official feature?</p>
</div>
<div class="post-text" itemprop="text">
<h3><a href="https://docs.python.org/3/library/operator.html#operator.methodcaller" rel="nofollow noreferrer"><code>operator.methodcaller</code></a></h3>
<pre><code>&gt;&gt;&gt; from operator import methodcaller
&gt;&gt;&gt; f([x], methodcaller('m'))
m &lt;__main__.C object at 0x1317bbda0&gt;
</code></pre>
<p><code>methodcaller</code> returns a callable that will call a method on a given instance passed to it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this:</p>
<pre><code>f([x], C.m)
</code></pre>
<p>Here, <code>C.m</code> is the method without an instance.  It does the same thing as your lambda.  It is definitely an official and supported feature.</p>
</div>
<span class="comment-copy"><code>C.m</code> will be a reference to an unbound method (as in no associated <code>self</code> instance).  Passing <code>&lt;instance&gt;.m</code> would work though.</span>
<span class="comment-copy">@jedwards: I do not have the instance.</span>
