<div class="post-text" itemprop="text">
<pre><code>a = [['df','37s',''],['4d','34','jd']]
for lst in a:
    if any(i=='' for i in lst):
        print(lst.index(i)) # NameError: name 'i' is not defined
</code></pre>
<p>The code above is indicative of what I want to do.</p>
<p>Is it possible to get the index of the <code>i</code> of <code>lst</code> that returned true in the <code>any()</code> method, without using an explicit for loop over <code>lst</code>, and if so how?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're merely confusing the scope of your subscript variable.  Try a more direct approach with the <code>index</code> method:</p>
<pre><code>a = [['df','37s',''],['4d','34','jd']]
target = ''
for lst in a:
    if target in lst:
       print(lst.index(target))
</code></pre>
<p>Output:</p>
<pre><code>2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Now that you've altered your problem description (note that sample output really helps), try this list comprehension:</p>
<pre><code>print([pos for pos, lst in enumerate(a) if target in lst])
</code></pre>
<p>Output:</p>
<pre><code>[0]
</code></pre>
<p>which indicates that a[0] is the only element that contains an empty string.</p>
<p>If I extend the input test to</p>
<pre><code>a = [['df','37s',''],
     ['4d','34','jd'],
     ['one','','more', 'try']]
</code></pre>
<p>The output is</p>
<pre><code>[0, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To answer strictly the initial question: is it possible to get the indice that returned true in the any(), without making an explicit for.
Well, it is possible. But that does not mean that you should do it. Please do not use this code in production, it relies on Cpython implementation details. Use Prune's answer instead.</p>
<pre><code>a = [['df','37s',''],['4d','34','jd']]

for lst in a:
    gen = (value == '' for i, value in enumerate(lst))

    if any(gen):
        i = gen.gi_frame.f_locals['i']
        print('i=',i)
        #i= 2
</code></pre>
</div>
<span class="comment-copy">No point in trying to avoid explicitly iterating over your list, because <b><code>any</code></b> <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">explicitly iterates over your list anyways</a>.</span>
<span class="comment-copy">he wants the index of target in <code>lst</code>, not the index in <code>a</code>.</span>
<span class="comment-copy">His comment asked for the <code>index i of lst</code>, which isn't entirely clear.  That's why I separated my solutions into separate answers.  I'm hoping OP will clarify by choosing one of the posted solutions; I'll delete the one that doesn't match the accepted answer.</span>
<span class="comment-copy">Oh ... someone voted this as useful.  Okay, I'll leave this answer alive for illustration, but please note that it does <i>not</i> solve the poster's intended problem statement.</span>
<span class="comment-copy">I didn't realize the same person wrote both answers.</span>
