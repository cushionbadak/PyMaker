<div class="post-text" itemprop="text">
<p>I am still not too familiar with list composition and stuff so I appreciate the help.</p>
<p>I have a list of dictionaries which contain a url and a number in each dictionary like so:</p>
<pre><code>data = [{'url': 'www.url1.com', 'max': '14.6'},
        {'url': 'www.url2.com', 'max': '17.8'},
        {'url': 'www.url2.com', 'max': '18.4'},
        {'url': 'www.url3.com', 'max': '15.5'}]
</code></pre>
<p>I would like to filter out any dictionaries with a duplicate <code>url</code> key even if the <code>max</code> key is different from the other duplicate entry.</p>
<p>My expected result would be:</p>
<pre><code>data = [{'url': 'www.url1.com', 'max': '14.6'},
        {'url': 'www.url2.com', 'max': '17.8'},
        {'url': 'www.url3.com', 'max': '15.5'}]
</code></pre>
<p>I have tried quite a few things but none of it is close enough to post here in order to fix. </p>
<p>I appreciate your help, thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>Try creating a dictionary comprehension then get the values of it then convert it into a list:</p>
<pre><code>data = [{'url': 'www.url1.com', 'max': '14.6'},
        {'url': 'www.url2.com', 'max': '17.8'},
        {'url': 'www.url2.com', 'max': '18.4'},
        {'url': 'www.url3.com', 'max': '15.5'}]
print(list({v['url']:v for v in data}.values()))
</code></pre>
<p>Output:</p>
<pre><code>[{'url': 'www.url1.com', 'max': '14.6'}, {'url': 'www.url2.com', 'max': '18.4'}, {'url': 'www.url3.com', 'max': '15.5'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way using <a href="http://toolz.readthedocs.io/en/latest/api.html#toolz.itertoolz.unique" rel="nofollow noreferrer"><code>toolz.unique</code></a>. If you don't have this 3rd party library, you can use the equivalent <code>unique_everseen</code> <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">itertools recipe</a>:</p>
<pre><code>from toolz import unique
from operator import itemgetter

res = list(unique(data, key=itemgetter('url')))

print(res)

[{'url': 'www.url1.com', 'max': '14.6'},
 {'url': 'www.url2.com', 'max': '17.8'},
 {'url': 'www.url3.com', 'max': '15.5'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For a pure python method:</p>
<pre><code>data = [{'url': 'www.url1.com', 'max': '14.6'},
        {'url': 'www.url2.com', 'max': '17.8'},
        {'url': 'www.url2.com', 'max': '18.4'},
        {'url': 'www.url3.com', 'max': '15.5'}]

seen_before = []
for d in data:
    if d['url'] not in seen_before:
        seen_before.append(d['url'])
print(seen_before)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the simple function below would satisfy your needs.</p>
<pre><code>def clean_data(data):
    new_data = []
    urls = [] 
    for rec in data:
        rec_url = rec.get("url")
        if not rec_url in urls:
            urls.append(rec_url)
            new_data.append(rec)
        else:
            pass
    return new_data

clean_data(data)
</code></pre>
</div>
<span class="comment-copy">thank you, that's exactly what i was looking for.</span>
<span class="comment-copy">@Canna Your Welcome, Happy Coding</span>
<span class="comment-copy">Nice man thank you, that works perfectly for my needs. I appreciate it</span>
