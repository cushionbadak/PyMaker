<div class="post-text" itemprop="text">
<p>I would like to pass a command-line arg, a string representing an address, to my integration tests for my location based service. These tests are invoked from a test runner, <code>run_tests.py</code>. </p>
<pre><code>import argparse
import unittest

import mycity.test.integration_tests.test_snow_emergency_parking as snow_parking
import mycity.test.integration_tests.test_trash_intent as trash_intent
import mycity.test.integration_tests.test_unhandled_intent as unhandled_intent
import mycity.test.integration_tests.test_get_alerts as get_alerts
import mycity.test.unit_tests.test_finder_csv as finder_csv
import mycity.test.unit_tests.test_mycity_controller as my_controller
import mycity.test.unit_tests.test_address_utils as address_utils
import mycity.test.unit_tests.test_google_maps_utils as g_maps_utils
import mycity.test.unit_tests.test_csv_utils as csv_utils
import mycity.test.unit_tests.test_gis_utils as gis_utils


TEST_CASES = [  my_controller.MyCityControllerUnitTestCase,
                g_maps_utils.TestGoogleMapsUtilities,
                address_utils.AddressUtilitiesTestCase,
                csv_utils.CSVUtilitiesTestCase,
                gis_utils.GISUtilitiesTestCase,
                finder_csv.FinderCSVTestCase,
                get_alerts.GetAlertsTestCase,
                trash_intent.TrashDayTestCase,
                unhandled_intent.UnhandledIntentTestCase,
                snow_parking.SnowEmergencyTestCase
                ]

def load_tests():
    suite = unittest.TestSuite()
    loader = unittest.TestLoader()
    for test_case in TEST_CASES:
        suite.addTests(loader.loadTestsFromTestCase(test_case))
    return suite


if __name__ == "__main__":
    test_suite = load_tests()
    runner = unittest.TextTestRunner()
    runner.run(test_suite)
</code></pre>
<p>Here is base class that my integration tests subclass. Right now I have hard-coded an address. I would like to assign the cmd-line arg to <code>self.request._session_attributes[key]</code>.</p>
<pre><code>import unittest
import unittest.mock as mock

import mycity.intents.intent_constants as intent_constants
import mycity.mycity_controller as my_controller
import mycity.mycity_request_data_model as req
import mycity.test.test_constants as test_constants




###############################################################################
# TestCase parent class for all intent TestCases, which are integration tests #
# to see if any changes in codebase have broken response-request model.       #
#                                                                             #
# NOTE: Assumes that address has already been set.                            #
###############################################################################

class IntentBaseCase(unittest.TestCase):

    intent_to_test = None
    returns_reprompt_text = False

    def setUp(self):
        self.controller = my_controller
        self.request = req.MyCityRequestDataModel()
        key = intent_constants.CURRENT_ADDRESS_KEY
        self.request._session_attributes[key] = "1000 Dorchester Ave"
        self.request.intent_name = self.intent_to_test

    def tearDown(self):
        self.controller = None
        self.request = None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You will need an argument parser</p>
<p>Here is a quick example:</p>
<pre><code>import argparse


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='integration tests')
    parser.add_argument('--address', help='address', required=True,
                        help="address as string")


    args = parser.parse_args()
    address = args.address
</code></pre>
<p>Feel free to have a look at the <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse documentation</a> (Python 3)</p>
</div>
<span class="comment-copy">I guess my question is more about passing the string address to any TestCase rather than parsing them. Sorry, if there was confusion</span>
<span class="comment-copy">By using the parser, you will have your address available in the "address" variable.  Then you can just create an object with an address property having the value you passed as an argument.</span>
