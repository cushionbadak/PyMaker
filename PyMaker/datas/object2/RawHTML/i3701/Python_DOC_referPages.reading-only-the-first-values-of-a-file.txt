<div class="post-text" itemprop="text">
<p><strong>Background:</strong> I have a large file and I want to read the first few values from it.  I don't really want to read the entire file partly since I have no further use for it, so that it does not use unnecessary memory and is faster to execute (since it does not need to read this huge file).</p>
<hr/>
<p>From the <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">documentation</a> I am using:</p>
<p><strong>test.txt</strong></p>
<pre><code>Greetings World :)
</code></pre>
<p><strong>test.py:</strong></p>
<pre><code>with open('test.txt', buffering=3) as file:
    a = file.read()
print(a)
</code></pre>
<p>It does not only partly read my file.</p>
<p>Is there a way to only read part of a file?</p>
</div>
<div class="post-text" itemprop="text">
<p>From this answer <a href="https://stackoverflow.com/questions/29712445/what-is-the-use-of-buffering-in-pythons-built-in-open-function">What is the use of buffering in python's built-in open() function?</a> you will see that <code>buffering</code> does not  actually read up to a range.  Instead set a range in <code>a.read()</code>.  So:</p>
<pre><code>with open('test.txt') as file:
    a = file.read(3) 
print(a)
</code></pre>
<p>returns <code>Gre</code> as you would expect.</p>
<p>See the <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">documentation</a></p>
<blockquote>
<p>To read a fileâ€™s contents, call f.read(size), which reads some quantity of data and returns it as a string (in text mode) or bytes object (in binary mode). size is an optional numeric argument. When size is omitted or negative, the entire contents of the file will be read and returned;</p>
</blockquote>
<p>If you need to read values inside the text file, then you could use <code>a.seek()</code> see <a href="https://stackoverflow.com/questions/11696472/seek-function">seek() function?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You have a couple of options.</p>
<p><code>file.read()</code> reads the entire file</p>
<p><code>file.read(size)</code> reads size amount of data (character for text mode, byte for binary mode)</p>
<p><code>file.readlines()</code> <code>list(file)</code> <code>for line in file:</code> all provide ways to read the whole file</p>
<p><code>file.readline()</code> returns a single line at a time (read until newline char (<code>\n</code>) or end of file (EOF))</p>
<p><a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">check here</a> for documentation.</p>
</div>
<span class="comment-copy">So how would I read the first two lines if I knew nothing about the line length beforehand?</span>
<span class="comment-copy"><code>file.readline()</code> reads a single line at a time (reads until \n or EOF)</span>
<span class="comment-copy">@Simon but that defeats the purpose of not reading the whole file</span>
<span class="comment-copy">@Simon but that reads the whole file</span>
<span class="comment-copy">@Sam   Try running <code>file.readlines.__doc__</code> you should see "hint can be specified to control the number of lines read"</span>
