<div class="post-text" itemprop="text">
<p>I've been writing a Countdown program in Python, and in it. I've written this:</p>
<pre><code>#Letters Game

global vowels, consonants
from random import choice, uniform
from time import sleep
from itertools import permutations

startLetter = ""
words = []

def check(word, startLetter):
    fileName = startLetter + ".txt"
    datafile = open(fileName)
    for line in datafile:
        print("Checking if", word, "is", line.lower())
        if word == line.lower():
            return True
    return False

def generateLetters():
    lettersLeft = 9
    output = []
    while lettersLeft &gt;= 1:
        lType = input("Vowel or consonant? (v/c)")
        sleep(uniform(0.5, 1.5))
        if lType not in ("v", "c"):
            print("Please input v or c")
            continue
        elif lType == "v":
            letter = choice(vowels)
            print("Rachel has picked an", letter)
            vowels.remove(letter)
            output.append(letter)
        elif lType == "c":
            letter = choice(consonants)
            print("Rachel has picked a", letter)
            consonants.remove(letter)
            output.append(letter)

        print("Letters so far:", output)
        lettersLeft -= 1

    return output

def possibleWords(letters, words):
    for i in range(1,9):
        print(letters)
        print(i)
        for item in permutations(letters, i):
            item = "".join(list(item))
            startLetter = list(item)[0]
            if check(item, startLetter):
                print("\n\n***Got one***\n", item)
                words.append(item)
    return words


vowels = ["a"]*15 + ["e"]*21 + ["i"]*13 + ["o"]*13+ ["u"]*5

consonants =  ["b"]*2 + ["c"]*3 + ["d"]*6 + ["f"]*2 + ["g"]*3 +["h"]*2 +["j"]*1 +["k"]*1 +["l"]*5 +["m"]*4 +["n"]*8 +["p"]*4 +["q"]*1 +["r"]*9 +["s"]*9 +["t"]*9 + ["v"]*1 +["w"]*1 +["x"]*1 +["y"]*1 +["z"]*1

print("***Let's play a letters game!***")

sleep(3)

letters = generateLetters()

sleep(uniform(1, 1.5))

print("\n\n***Let's play countdown***\n\n\n\n\n")

print(letters)

for count in reversed(range(1, 31)):
    print(count)
    sleep(1)
print("\n\nStop!")

print("All possible words:")

print(possibleWords(letters, words))

'''

#Code for sorting the dictionary into files

alphabet = "abcdefghijklmnopqrstuvwxyz"

alphabet = list(alphabet)

for letter in alphabet:

    allFile = open("Dictionary.txt", "r+")

    filename = letter + ".txt"

    letterFile = open(filename, "w")

    for line in allFile:
        if len(list(line.lower())) &lt;= 9:
            if list(line.lower())[0] == letter:
                print("Writing:", line.lower())
                letterFile.write(line.lower())

    allFile.close()
    letterFile.close()
</code></pre>
<blockquote>
<p>I have 26 text files called a.txt, b.txt, c.txt... to make the search quicker</p>
</blockquote>
<p>(Sorry it's not very neat - I haven't finished it yet)</p>
<p>However, instead of returning what I expect (pan), it returns all words with pan in it (pan, pancake, pans, pandemic...)</p>
<p>Is there any way in Python you can only return the line if it's EXACTLY the same as the string? Do I have to .read() the file first?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Your post is strangely written so excuse me if I missmatch</p>
<blockquote>
<p>Is there any way in Python you can only return the line if it's EXACTLY the same as the string? Do I have to .read() the file first?</p>
</blockquote>
<p>Yes, there is!!!</p>
<pre><code>file = open("file.txt")
content = file.read() # which is a str
lines = content.split('\n') # which is a list (containing every lines)

test_string = " pan "
positive_match = [l for l in lines if test_string in l]
</code></pre>
<p>This is a bit hacky since we avoid getting pancake for pan (for instance) but using spaces (and then, what about cases like ".....,pan "?). You should have a look at tokenization function. As pythonists, we hve one of the best library for this: <a href="http://www.nltk.org/api/nltk.tokenize.html" rel="nofollow noreferrer">nltk</a></p>
<p>(because, basically, you are reinventing the wheel)</p>
</div>
<span class="comment-copy">check out <code>\b</code> in <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a>, And I suggest you post your code on <a href="https://codereview.stackexchange.com/">code review</a> once it works</span>
<span class="comment-copy">best open files using a context manager (<code>with</code>-statement)</span>
<span class="comment-copy">Doesn't seem to work - just to clarify, the text files are just words on every line that start with the text file name - although when I remove the spaces, it still has the error in it. Also, I want the code to return only 'pan' instead of pan, pancake, marzipan etc.</span>
<span class="comment-copy">Rewrote the files with spaces either side and it works - Thanks</span>
