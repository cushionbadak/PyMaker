<div class="post-text" itemprop="text">
<p>Can Someone Explain the Difference between logical and Boolean &amp; in this code</p>
<pre><code>def isprime(num):
    return [i for i in range(2,num) if num%i==0]==[]

num_which_are_prime=[i for i in range(1,100) if isprime(i) and i!=1]
print(num_which_are_prime)

num_which_are_prime=[i for i in range(1,100) if isprime(i) &amp; i!=1]
print(num_which_are_prime)
</code></pre>
<p>Shows this:</p>
<blockquote>
<p>[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]  </p>
<p>[2, 4, 6, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99]</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Aside from the improper use of <code>&amp;</code> as stated in the comment.</p>
<p>It's because of the <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">operator precedence</a>.</p>
<ul>
<li><code>and</code> has lower priority than <code>!=</code></li>
<li><code>!=</code> has lower priority than <code>&amp;</code></li>
</ul>
<p>So the first expression is evaluated as <code>isprime(i) and (i != 1)</code>, the second expression is evaluated as <code>((isprime(i) &amp; i) != 1)</code>.</p>
<p><strong>EDIT</strong></p>
<p>To explain output for the <code>&amp;</code> version. As stated in the comment, <code>&amp;</code> is a bitwise AND operator. Boolean expressions <code>True</code> and <code>False</code> can be represented as a single bit <code>1</code> and <code>0</code>, respectively. As a result, the expression <code>isprime(i) &amp; i</code> tests only the very first bit (the right-most bit)</p>
<ul>
<li><p>For every non-prime number you get <code>0 &amp; i</code> which always evaluates to 0 and <code>0 != 1</code> is always <code>True</code>. </p></li>
<li><p>Every prime number, except for 2, is an odd number (that is the first bit is 1). As such, <code>1 &amp; x1</code>, where <code>x</code> is arbitrary binary string, will evaluate to 1 and <code>1 != 1</code> will always be <code>False</code>.</p></li>
<li><p>And lastly, 2 is a prime number but it's even (first bit is 0). So, <code>1 &amp; 10</code> will be 0, and <code>0 != 1</code> evaluates to <code>True</code>.</p></li>
</ul>
<p>Your output, therefore, contains only non-prime numbers and a number 2.</p>
</div>
<span class="comment-copy">Please see <a href="https://stackoverflow.com/help/formatting">Formatting Help</a> to get your code formatted correctly. Images of code aren't great either.</span>
<span class="comment-copy">Please add your code (not image of code). It's time consuming writing your code again and explain the answer. It's easier to copy your code and edit it.</span>
<span class="comment-copy">Please write a brief description of your problem. The problem statement that you have posted is not sufficient to understand the problem.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3845018/boolean-operators-vs-bitwise-operators">Boolean operators vs Bitwise operators</a></span>
<span class="comment-copy"><code>&amp;</code> is bitwise operator, it does NOT produce boolean True/False value.</span>
