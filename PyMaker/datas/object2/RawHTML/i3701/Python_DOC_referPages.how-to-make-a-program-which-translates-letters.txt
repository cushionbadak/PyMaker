<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/12723751/replacing-instances-of-a-character-in-a-string">Replacing instances of a character in a string</a>
<span class="question-originals-answer-count">
                    9 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to make a program, which replaces letters with other letters, for instance 'Q' into 'R', or 'D' into 'U'. I'm stuck here:</p>
<pre><code>def dna():
    seq = input('Enter the sequence:')
    list1 = list(seq)
    for i in seq:
       if i == 'A':
           seq[i] = 'T'
    return ''.join(list1)
</code></pre>
<p>This returns an error. What can I do?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I just want to make a simple code which transforms A(Adenin) into
  T(Thymin), G(Guanin) into C(Cytosin) and vice versa.</p>
</blockquote>
<p>Based on this clarification what you actually want to do is complement your DNA sequences. <a href="https://biopython.org/" rel="nofollow noreferrer">Biopython</a> provides this functionality:</p>
<pre><code>&gt;&gt;&gt; from Bio.Seq import Seq
&gt;&gt;&gt; seq = Seq('ATCGGAT')
&gt;&gt;&gt; seq.complement()
Seq('TAGCCTA', Alphabet())
</code></pre>
<p>You could build your own implementation if you needed, the biopython one uses <code>str.translate</code> in an alphabet aware way (to check your not mixing DNA/RNA etc.), see the <a href="https://github.com/biopython/biopython/blob/master/Bio/Seq.py#L859" rel="nofollow noreferrer">source code</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have many answers to your problem but none address your issue, so looking at your code and hopefully this can help:</p>
<p><code>seq</code> is a string and as such is immutable in python, so:</p>
<pre><code>seq[i] = 'T'
</code></pre>
<p>is not valid python. You already created a <code>list1</code> so did you mean:</p>
<pre><code>list1[i] = 'T'
</code></pre>
<p>Note, this still wouldn't work because <code>i</code> is not the index but a character in <code>seq</code> but you can get both the index and character with <code>enumerate()</code>, e.g.:</p>
<pre><code>for i, c in enumerate(seq):
    if c == 'A':
        list1[i] = 'T'
...
</code></pre>
<p>In python <code>str.translate()</code> is ideal for translating multiple characters, e.g. for your simple example:</p>
<pre><code>def dna():
    t = str.maketrans('A', 'T')
    seq = input('Enter the sequence: ')
    return seq.translate(t)
</code></pre>
<p>And this is easy to extend, e.g. <code>A-&gt;T</code> and <code>G-&gt;C</code> and vice versa would look like:</p>
<pre><code>    t = str.maketrans('AGTC', 'TCAG')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If it's as easy as translating one character into another you can use replace. Is this what you want?</p>
<pre><code>def dna():
    seq = input('Enter the sequence: ')
    return seq.replace('A', 'T')

print(dna())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str%20replace#str.replace" rel="nofollow noreferrer">str.<strong>replace</strong></a>:</p>
<pre><code>def dna(seq):
  # Replace Q with R
  seq = seq.replace("Q", "R")
  # Replace D with U
  seq = seq.replace("D", "U")
  return seq

seq = input('Enter the sequence:')
print(dna(seq))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Enter the sequence: QQQDDD
RRRUUU
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way using a comprehension and a lookup dictionary, which should be more easily expandable to include more characters:</p>
<pre><code>mapping = {'Q': 'R', 'D': 'U'}
seq = input('Enter the sequence:')
new = ''.join(mapping.get(c, c) for c in seq)
</code></pre>
<p>Example input 'QUAD' becomes 'RUAU'.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def dna():
    d={'Adenin':'Thymin','Thymin':'Adenin','Guanin':'Cytosin','Cytosin':'Guanin'}
    seq = raw_input('Enter the sequence:')
    return d[seq]
print dna()
</code></pre>
<p>In simple terms, you can try making a dictionary and try to transforms A(Adenin) into T(Thymin), G(Guanin) into C(Cytosin) and vice versa.</p>
</div>
<span class="comment-copy">Look into the built-in function <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate()</code></a>.</span>
<span class="comment-copy">What is the bioinformatic transformation you want? Is this transcribing, reverse complementing, or translating sequences, or something else? Whatever it is, biopython can do this for you <a href="https://biopython.org/" rel="nofollow noreferrer">biopython.org</a> Without more details you won't get a clear ansewr</span>
<span class="comment-copy">@Chris_Rands I just want to make a simple code which transforms A(Adenin) into T(Thymin), G(Guanin) into C(Cytosin) and vice versa. I am a newbie in both biology and python and this doesn't have a particular purpose.</span>
<span class="comment-copy">@coldspeed, that's not really an appropriate dupe IMO, there is a specific bioinformatics solution to this problem</span>
