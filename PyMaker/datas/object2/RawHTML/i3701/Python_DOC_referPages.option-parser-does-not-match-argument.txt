<div class="post-text" itemprop="text">
<p>I have a simple python (v2.7) script (<strong>test.py</strong>)</p>
<pre><code>#!/usr/bin/python

import sys
from optparse import OptionParser

def main():
    parser = OptionParser()
    parser.add_option("--files", dest="files", 
                      metavar="FILES", default=None, 
                      help="A file pattern matching ottcall logs.")
    (options, args) = parser.parse_args()


    print "FILES_PATTERN %s" % options.files

    if not options.files:
        parser.error("Files_pattern option is mandatory - Abort execution.")

    return 0

if __name__ == "__main__":
    sys.exit(main())
</code></pre>
<p>User must provide a file pattern or a filename</p>
<p>Run script in command line if option is missing returns error:</p>
<pre><code>python test.py
FILES_PATTERN None
Usage: test.py [options]

test.py: error: Files_pattern option is mandatory - Abort execution.
</code></pre>
<p>If option files is <strong>missing some letters</strong> (--fil instead of --files):</p>
<pre><code>python test.py --fil "a_pattern_for_files"
FILES_PATTERN a_pattern_for_files
</code></pre>
<p>I think I should have an error like the following</p>
<pre><code>python test.py --fl "a_pattern_for_files"
Usage: test.py [options]

test.py: error: no such option: --fl
</code></pre>
<p>Why don't I get an error from <strong>OptionParser</strong> when I use <strong>--fil</strong> instead of the correct argument <strong>--files</strong> ?</p>
<p>Not only I do not get an error but variable files stores the value: <strong>a_pattern_for_files</strong> (which is printed).</p>
<p>I am expecting argument files to have value: None (default) unless in command line <strong>--files</strong> exists</p>
</div>
<div class="post-text" itemprop="text">
<p><code>optparse</code> allows abbreviated forms of long options. <code>--fil</code> is a prefix of <code>--files</code> and not a prefix of any other long options the program supports, so <code>--fil</code> is treated as equivalent to <code>--files</code>.</p>
<p>This is barely mentioned in the docs, and there is no option to turn it off. <code>argparse</code> has an <a href="https://docs.python.org/3/library/argparse.html#allow-abbrev" rel="nofollow noreferrer">option</a> to turn it off, but only in Python 3.5+.</p>
</div>
<span class="comment-copy">You aren't asking a question here. What is it you're looking to achieve?</span>
<span class="comment-copy">If you're having issues with the <code>OptionParse</code> package, and are using Python 2.7+, try using <code>argparse</code>.</span>
<span class="comment-copy">Please provide a complete, runnable test file, including all your imports (and any shebang line that tells what interpreter you are using). Also make sure that your indentation is correct (edit your question and fix it).</span>
