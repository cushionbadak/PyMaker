<div class="post-text" itemprop="text">
<p>I know for example  "{:,}".format(123456789) will print '123,456,789' as output in python. </p>
<p>However, instead of the commas I would like the thin space character as the thousands separator. According to <a href="https://www.fileformat.info/info/unicode/char/2009/index.htm" rel="nofollow noreferrer">here</a>, the python source encoding for the thin space character is u"\u2009".</p>
<p>So I tried replacing the comma in "{:,}" by u"\u2009", but that results in a syntax error. This might be because python can't deal with the resulting nested double quotes and something needs to be escaped. </p>
<p>So is there a way to make this, or some other mechanism work? And by the way I'd like to suppress the single quotes that appear in the output as well. </p>
</div>
<div class="post-text" itemprop="text">
<p>I can offer you an obvious workaround:</p>
<pre><code>&gt;&gt;&gt; n = 123456789
&gt;&gt;&gt; print(f'{n:,}'.replace(',', u'\u2009'))
123 456 789
</code></pre>
<p>Works for <code>str.format</code> the same way.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>replace</code> method from <code>str</code> to replace <code>,</code> by thin spaces after having formatted it, i.e: <code>"{:,}".format(123456789).replace(",", u"\u2009")</code></p>
<p>According to the official documentation <a href="https://docs.python.org/3/library/string.html#grammar-token-type" rel="nofollow noreferrer">here</a>, only <code>,</code> and <code>_</code> can be used as separators. To use a user-defined one, you need to use the <code>n</code> representation, and change your <code>locale</code> settings (see <a href="https://docs.python.org/3/library/locale.html#locale.LC_NUMERIC" rel="nofollow noreferrer">https://docs.python.org/3/library/locale.html#locale.LC_NUMERIC</a>). You can create a new localization and use this fake localization for what you want but this is a rather complicated solution.</p>
<p>EDIT: By a fake localization, I really mean a new locale in your computer, not in Python. You can read <a href="https://askubuntu.com/questions/653008/how-to-create-a-new-system-locale">https://askubuntu.com/questions/653008/how-to-create-a-new-system-locale</a> for more details (I think this can be adapterd on most distributions)</p>
</div>
<span class="comment-copy">It would help to show an example and the exact error. <code>"{:\u2009}".format(123456789)</code> gives a different error: <code>ValueError: Unknown format code '\x2009' for object of type 'int'</code> but at least its not a syntax error!</span>
<span class="comment-copy">As per <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">docs.python.org/3/library/…</a> you can have only <code>_</code> or <code>,</code> as grouping option. So, you should use string replace as mentioned in the answers below.</span>
<span class="comment-copy">If your question was answered, please <a href="https://stackoverflow.com/help/someone-answers">mark the most helpful answer as accepted</a>. You can accept an answer by clicking the grey check to the left of the answer to toggle it green. Thanks.</span>
