<div class="post-text" itemprop="text">
<p>I made this calculator to try and calculate trigonometry in python. I've only just started learning how to use this program and I haven't been able to find anything so far that makes sense to me. The problem with this is that I keep getting different answers to those that come up on my scientific calculator.</p>
<pre><code>while True: 

    print('type "sine1" to find the value of the Opposite')
    print('type "sine2" to find the value of the Hypotenuse')
    print('type "cosine1" to find the value of the Adjacent')
    print('type "cosine2" to find the value of the Hypotenuse')
    print('type "tangent1" to find the value of the Opposite')
    print('type "tangent2" to find the value of the Adjacent')
    user_input = input(": ")

    from math import sin, cos, tan


    if user_input == 'sine1':
        degrees = float(input('Enter the degrees: '))
        hypotenuse = float(input('Enter the value of the hypotenuse: '))
        result = str(hypotenuse * sin(degrees))
        print('The answer is ' + result)
        print(input('Press enter to quit: '))
        break

    elif user_input == 'sine2':
        degrees = float(input('Enter the degrees: '))
        opposite = float(input('Enter the value of the opposite: '))
        result = str(opposite / sin(degrees))
        print('The answer is ' + result)
        print(input('Press enter to quit: '))
        break

    elif user_input == 'cosine1':
        degrees = float(input('Enter the degrees: '))
        hypotenuse = float(input('Enter the value of the hypotenuse: '))
        result = str(hypotenuse * cos(degrees))
        print('The answer is ' + result)
        print(input('Press enter to quit: '))
        break

    elif user_input == 'cosine2':
        degrees = float(input('Enter the degrees: '))
        adjacent = float(input('Enter the value of the adjacent: '))
        result = str(adjacent / cos(degrees))
        print('The answer is ' + result)
        print(input('Press enter to quit: '))
        break

    elif user_input == 'tangent1 ':
        degrees = float(input('Enter the degrees: '))
        adjacent = float(input('Enter the value of the adjacent: '))
        result = str(hypotenuse * tan(degrees))
        print('The answer is ' + result)
        print(input('Press enter to quit: '))
        break

    elif user_input == 'tangent2':
        degrees = float(input('Enter the degrees: '))
        opposite = float(input('Enter the value of the opposite: '))
        result = str(adjacent / cos(degrees))
        print('The answer is ' + result)
        print(input('Press enter to quit: '))
        break

    else:
        print('invalid input, please close the program and try again... maybe learn how to spell first :P')
        print(input('press enter to quit'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>All trigonometric function from the <code>math</code> module require their argument to be in radians, not in degrees. You can use <a href="https://docs.python.org/3/library/math.html#math.radians" rel="nofollow noreferrer"><code>math.radians</code></a> to do the conversion.</p>
<pre><code>import math

degrees = 90
radians = math.radians(degrees)

print(math.sin(radians)) # 1.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python's trig functions assume that the input is in radians, and you're entering degrees.  </p>
<p>First convert your degrees to radians by multiplying <code>degrees</code> by <code>math.pi/180.0</code> and see if those match better.</p>
</div>
<span class="comment-copy">Hi welcome to StackOverflow. So what exactly is your question? You need to narrow it down to a specific problem to get a positive reaction from most people on this site. Please update the question by clicking the <code>edit</code> button below your post. Thanks!</span>
<span class="comment-copy">Trigonometric functions in every language use radians, not degrees.  Make sure you convert before you give an angle value to a function.</span>
<span class="comment-copy">Excellent edit from <code>math.py</code> to <code>math.pi</code>. I thought my eyes were deceiving me for a moment there. XD</span>
<span class="comment-copy">Just tried what you suggested, ended up getting this error:</span>
<span class="comment-copy">Traceback (most recent call last):   File "..\Playground\", line 17, in &lt;module&gt;     result = str(hypotenuse * sin(degrees * math.py/180)) NameError: name 'math' is not defined</span>
<span class="comment-copy">Thanks, will try that again</span>
<span class="comment-copy">Unless you need to work with Python 1.1 or something, it's better to use <code>math.radians</code> than to do the math explicitly. Sure, the possible rounding error of one ULP probably isn't going to make a difference, and the performance cost of a float division definitely won't make a difference in CPython, butâ€¦ why make it more complicated only to introduce two flaws, no matter how trivial those flaws are?</span>
