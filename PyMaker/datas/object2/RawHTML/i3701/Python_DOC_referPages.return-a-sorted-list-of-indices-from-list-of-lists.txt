<div class="post-text" itemprop="text">
<p>If I have a list of lists, I know I can get the index of the largest item using a solution posted <a href="https://bytes.com/topic/python/answers/503846-returning-index-minimum-list-lists" rel="nofollow noreferrer">here</a>:</p>
<pre><code>def get_maximum_votes_index(L):
    return max((n,i,j) for i, L2 in enumerate(L) for j, n in enumerate(L2))[1:]
</code></pre>
<p>However, if I want to return a sorted list of indices, descending from the maximum, how would I do that?</p>
<p>For example:</p>
<pre><code>L = [[1,2],[4,3]]
</code></pre>
<p>Would return:</p>
<pre><code>[(1,0),(1,1),(0,1),(0,0)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You basically just need to replace the <code>max</code> with <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a>:</p>
<pre><code>L = [[1,2],[4,3]]

# step 1: add indices to each list element
L_with_indices = ((n,i,j) for i, L2 in enumerate(L) for j, n in enumerate(L2))

# step 2: sort by value
sorted_L = sorted(L_with_indices, reverse=True)

# step 3: remove the value and keep the indices
result = [tup[1:] for tup in sorted_L]
# result: [(1, 0), (1, 1), (0, 1), (0, 0)]
</code></pre>
</div>
