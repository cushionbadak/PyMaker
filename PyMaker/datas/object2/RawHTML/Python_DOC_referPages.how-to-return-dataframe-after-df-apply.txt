<div class="post-text" itemprop="text">
<p>Let's say I have a pandas data frame <code>df</code></p>
<pre><code>[In] df = pd.read_csv('data.csv')
</code></pre>
<p>Due to the empty column, I drop the last two columns of <code>df</code></p>
<pre><code>[In] csv_df.drop(csv_df.columns[-2:], axis = 1, inplace=True)
[In] print(type(csv_df[csv_df.columns[2:]]))
</code></pre>
<p>The return data structure is </p>
<pre><code>[Out] &lt;class 'pandas.core.frame.DataFrame'&gt;
</code></pre>
<p>However, when I manipulate the content of all the x by <code>df.apply()</code>, the return type changed to pandas series.</p>
<pre><code># replace comma
[In] csv_df = csv_df[csv_df.columns[2:]].apply(lambda x: str(x).replace(',','.'))
[In] print(type(csv_df))
[Out] &lt;class 'pandas.core.series.Series'&gt;
</code></pre>
<p>I have checked the pandas official website of <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html" rel="nofollow noreferrer"><code>apply()</code></a>, it said that it can return either series or dataframe.</p>
<blockquote>
<p>Returns:   applied : Series or DataFrame</p>
</blockquote>
<h3>My question is</h3>
<p>How can I keep the data structure to be pandas dataframe after <code>df.apply()</code>?</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use operation working with <code>DataFrame</code> here - <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.astype.html" rel="nofollow noreferrer"><code>DataFrame.astype</code></a> for convert to <code>string</code>s and <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.replace.html" rel="nofollow noreferrer"><code>DataFrame.replace</code></a>:</p>
<pre><code>csv_df = csv_df[csv_df.columns[2:]].astype(str).replace(',','.')
</code></pre>
<p>If need solution with apply, especially if working by some function working in Series only:</p>
<pre><code>csv_df = csv_df[csv_df.columns[2:]].apply(lambda x: x.astype(str).str.replace(',','.'))
</code></pre>
<p>Function <code>str.lower</code> working only in <code>Series</code>:</p>
<pre><code>csv_df = csv_df[csv_df.columns[2:]].apply(lambda x: x.astype(str).str.lower().str.replace(',','.'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If this can help, just Pass result_type=’expand’ </p>
<pre><code>df.apply(lambda x: [4, 7], axis=1, result_type='expand')
</code></pre>
</div>
<span class="comment-copy">It's 'return', not 'reuturn'... tried to edit, but you changed it back :/</span>
<span class="comment-copy">@l'L'l thanks! My apology.</span>
<span class="comment-copy"><code>csv_df = csv_df[csv_df.columns[2:]].apply(lambda x: x.astype(str).str.replace(',','.'))</code> works like a charm. However on my system configuration, <code>csv_df = csv_df[csv_df.columns[2:]].astype(str).replace(',','.')</code> doesn't work. I'm still working on the reason. I'm appreciated!</span>
<span class="comment-copy">@WYHsu - because use <code>.repalce</code> function, not <code>str.replace</code>. You need <code>.replace(',','.', regex=True)</code> for substrings replacement</span>
<span class="comment-copy">Oh, I got it! Very clear.</span>
<span class="comment-copy">Hi, could you please elaborate a little more why you choose <code>result_type=’expand’</code>? btw thanks for the help!</span>
<span class="comment-copy">because this is mentioned in the official website,   apply() :- "Passing result_type=’expand’ will expand list-like results to columns of a Dataframe"</span>
<span class="comment-copy">I saw it, thanks! But the manual said that: list-like results will be returned as a Series of those. However if the apply function returns a Series these are expanded to columns. Maybe I should try ‘broadcast’?</span>
<span class="comment-copy">You are right. Thanks</span>
