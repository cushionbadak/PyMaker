<div class="post-text" itemprop="text">
<p>I want to scrape the data of a websitse using Beautiful Soup and requests, and I've almost got what I want, but I can't find a way to filter the final steps:</p>
<p>Here is my code:</p>
<pre><code>variants = soup.find('div', class_='product-configure')
print(variants)
</code></pre>
<p>This prints the following:  </p>
<pre><code>&lt;div class="product-configure"&gt;
&lt;select id="custom-variants"&gt;
&lt;option disabled="disabled" selected="selected"&gt;Maak een keuze&lt;/option&gt;
&lt;option data-status="available" data-value="177379037"&gt;Size : EU 40.5 (US 7) 
&lt;/option&gt;
&lt;option data-status="available" data-value="177379043"&gt;Size : EU 41.5 (US 8) 
&lt;/option&gt;
&lt;option data-status="available" data-value="177379223"&gt;Size : EU 42.5 (US 9) 
&lt;/option&gt;
&lt;/select&gt;
&lt;/div&gt;
</code></pre>
<p>How can I filter this so it only prints all the numbers in "data-value"?
(e.g "177379037" as output for the first line)</p>
<p>Here is the HTML:  </p>
<pre><code>          &lt;div class="gui-select"&gt;
                  &lt;div class="product-configure"&gt;
                        &lt;select id="custom-variants"&gt;
            &lt;option selected="selected" disabled="disabled"&gt;Select an option&lt;/option&gt;
                            &lt;option data-value="177379037" data-status="available"&gt;Size : EU 40.5 (US 7)&lt;/option&gt;
                            &lt;option data-value="177379043" data-status="available"&gt;Size : EU 41.5 (US 8)&lt;/option&gt;
                            &lt;option data-value="177379223" data-status="available"&gt;Size : EU 42.5 (US 9)&lt;/option&gt;


        &lt;/div&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use soup.find_all() and use a dict with attributes</p>
<pre><code>options = soup.find_all("option", {"data-value": True})
</code></pre>
<p>Result:</p>
<pre><code>for o in options:
    print(o.attrs["data-value"])
</code></pre>
<hr/>
<pre><code>177379037
177379043
177379223
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use class with attribute css selector</p>
<pre><code>items = [item['data-value'] for item in soup.select('.product-configure [data-value]')]
</code></pre>
<p>If there is only the one class to consider you could use the id for the select</p>
<pre><code>items = [item['data-value'] for item in soup.select('#custom-variants [data-value]')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You use <code>find_all</code> to get all the <code>&lt;option&gt;</code> tags, then print off the <code>data-value</code> attribute. Notice though that not all <code>option</code> tags have that attribute, so I put a <code>try</code> in there to continue if there is no <code>data-value</code> found.</p>
<pre><code>html = '''         &lt;div class="gui-select"&gt;
                  &lt;div class="product-configure"&gt;
                        &lt;select id="custom-variants"&gt;
            &lt;option selected="selected" disabled="disabled"&gt;Select an option&lt;/option&gt;
                            &lt;option data-value="177379037" data-status="available"&gt;Size : EU 40.5 (US 7)&lt;/option&gt;
                            &lt;option data-value="177379043" data-status="available"&gt;Size : EU 41.5 (US 8)&lt;/option&gt;
                            &lt;option data-value="177379223" data-status="available"&gt;Size : EU 42.5 (US 9)&lt;/option&gt;


        &lt;/div&gt;'''

import bs4

soup = bs4.BeautifulSoup(html, 'html.parser')

elem = soup.find_all('option')
for each in elem:
    try:
        print (each['data-value'])
    except:
        continue
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>177379037
177379043
177379223
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/24197922/how-find-specific-data-attribute-from-html-tag-in-beautifulsoup4">How find specific data attribute from html tag in BeautifulSoup4?</a></span>
<span class="comment-copy">exactly what I was looking for thanks. Do you also have an idea how I could filter out just the plain text that begins with "Size: "? Since it is not an attribute</span>
<span class="comment-copy">I use XPATH for that, have to use before BeautifulSoup object, check some example. I let you the xpath example for your question: xpath_optiopns: "//options[@data-value and contains(text(), 'Size :')]"</span>
