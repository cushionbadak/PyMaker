<div class="post-text" itemprop="text">
<p>Hi apologies if the title is confusing, I am new to numpy and not used to the terminology.</p>
<p>Suppose we have a numpy array acting as a world map. 
The parameters are (x y r g b) - all are int16</p>
<p>Example:</p>
<pre><code>a = np.array([[  0,   0,   0, 255,   0], #index 0
              [  0,   1,   0,   0, 255], #index 1
              [  0,   2,   0, 255,   0]]) #index 2
</code></pre>
<p>Now we want to find the index value of the row with x and y values (0, 2) - hence the row with index 2.</p>
<pre><code>[  0,   1,   0,   0, 255] #index 2
</code></pre>
<p>How would I do this without also inputting the rest of the values (r g b)? Basically we are searching a five value row with two values - how would I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's your data:</p>
<pre><code>import numpy as np

arr = np.array([[  0,   0,   0, 255,   0],
              [  0,   1,   0,   0, 255],
              [  0,   2,   0, 255,   0]])

a,b = 0,2 # [a,b] is what we are looking for, in the first two cols
</code></pre>
<p><strong>Here's the solution to get the row index containing [a,b]:</strong></p>
<pre><code>found_index = np.argmax(np.logical_and(arr[:,0]==[a],arr[:,1]==[b]))
print (found_index)
</code></pre>
<p><strong>Output:</strong></p>
<blockquote>
<p>2</p>
</blockquote>
<p><strong>Explanation:</strong></p>
<p>The best way to understand how this works, is by printing each part of it:</p>
<pre><code>print (arr[:,0]==[a])
</code></pre>
<p>Outputs:</p>
<blockquote>
<p>[ True  True  True]</p>
</blockquote>
<pre><code>print (arr[:,1]==[b])
</code></pre>
<p>Outputs:</p>
<blockquote>
<p>[False False  True]</p>
</blockquote>
<pre><code>print (np.logical_and(arr[:,0]==[a],arr[:,1]==[b]))
# print (np.logical_and([ True  True  True], [False False  True]))
</code></pre>
<p>Outputs:</p>
<p>[False False  True]</p>
</div>
<div class="post-text" itemprop="text">
<p>You can slice the rows up to the second column, and check if they are equal to <code>[0,2]</code>. Then use <a href="https://docs.scipy.org/doc/numpy-1.15.1/reference/generated/numpy.all.html" rel="nofollow noreferrer"><code>all</code></a> setting <code>axis</code> to <code>1</code> to set to <code>True</code> those that satisfy all conditions, and use the boolean array to index the <code>ndarray</code>:</p>
<pre><code>a = np.array([[  0,   0,   0, 255,   0],
              [  0,   1,   0,   0, 255],
              [  0,   2,   0, 255,   0]])

a[(a[:,:2] == [0,2]).all(1)]
# array([[  0,   2,   0, 255,   0]])
</code></pre>
</div>
<span class="comment-copy">Can you show the code you have already?</span>
<span class="comment-copy">thanks man, a nice breakdown of whats going on!</span>
<span class="comment-copy">thanks this returned the correct row.</span>
<span class="comment-copy">originalRow = a[(a[:, :2] == [x, y]).all(1)]         originalIndex = numpy.where(numpy.all(originalRow==a, axis=1))[0][0]                                   for anyone wondering how to quickly get the index of this row.</span>
