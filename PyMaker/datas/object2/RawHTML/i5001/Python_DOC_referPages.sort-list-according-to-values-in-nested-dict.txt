<div class="post-text" itemprop="text">
<p>I have a nested dict, I want get a sorted list (A-Z) of the base keys according to one of the nested values, <code>name</code>.</p>
<pre><code>my_dict: {
    'RED':{'name':'Pen', 'number':5},
    'YEL':{'name':'Dog', 'number':1},
    'BLU':{'name':'Ball', 'number':3}
}
</code></pre>
<p>The correct output for the example would be:</p>
<pre><code>my_list = ['BLU', 'YEL', 'RED']
</code></pre>
<p>At the moment, I have an ugly solution, it relies on the code always being 3 chars long.</p>
<pre><code>my_list = []
for code in my_dict:
    my_list.append(my_dict[code]['name'] + code)
my_list = sorted(my_list)
my_list = [x[-3:] for x in my_list]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/howto/sorting.html#key-functions" rel="nofollow noreferrer"><code>key</code></a> argument of the <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> function:</p>
<pre><code>my_dict = {
    'RED':{'name':'Pen', 'number':5},
    'YEL':{'name':'Dog', 'number':1},
    'BLU':{'name':'Ball', 'number':3}
}

my_list = sorted(my_dict, key = lambda x: my_dict[x]['name'])

print(my_list)
</code></pre>
<p>Output:</p>
<pre><code>['BLU', 'YEL', 'RED']
</code></pre>
</div>
<span class="comment-copy">Wow that's it. I looked into the 'key' argument but had trouble, and couldn't find many other nested examples. It seems simple now! Thank you.</span>
