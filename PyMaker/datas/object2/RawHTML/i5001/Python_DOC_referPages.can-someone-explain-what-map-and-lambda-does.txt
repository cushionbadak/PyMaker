<div class="post-text" itemprop="text">
<p>I'm doing some practice on solving 8 puzzle.</p>
<p>When I was searching for references, I came across this code on gitHub:</p>
<pre><code>def _generate_moves(self):
    free = self._get_legal_moves()
    zero = self.find(0)

def swap_and_clone(a, b):
        p = self._clone()
        p.swap(a,b)
        p._depth = self._depth + 1
        p._parent = self
        return p

    return map(lambda pair: swap_and_clone(zero, pair), free) # &lt;- what does this mean?
</code></pre>
<p>What does the line with:</p>
<p><code>return map(lambda pair: swap_and_clone(zero, pair), free)</code> </p>
<p>mean? What does it return?</p>
<p>Here's the complete code on <a href="https://gist.github.com/flatline/838202" rel="nofollow noreferrer">https://gist.github.com/flatline/838202</a></p>
</div>
<div class="post-text" itemprop="text">
<p><code>lambda</code> -&gt; created new function with parameters following it till <code>:</code> then follows function body</p>
<p><code>map</code> -&gt; takes function and apply it to each element of collection and put returned value from such function into new collection</p>
<p>Here you can read more on such a style of programming:
<a href="https://docs.python.org/2.7/howto/functional.html" rel="nofollow noreferrer">https://docs.python.org/2.7/howto/functional.html</a></p>
</div>
<span class="comment-copy"><a href="https://www.python-course.eu/lambda.php" rel="nofollow noreferrer">python-course.eu/lambda.php</a></span>
<span class="comment-copy">I guess searching <code>map</code> and <code>lambda</code> in google would help. The way you get better at doing stuff is actually doing it, so you should just search it on the web (lambda: <a href="https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions" rel="nofollow noreferrer">docs.python.org/3/tutorial/controlflow.html#lambda-expressions</a>, map: <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#map</a>). These are official Python documentation files, that should be your bread and butter all day long going into programming. After you read what's there, just go into your terminal and play around with the mystery functions you want to know about. That's how you gather knowledge.</span>
