<div class="post-text" itemprop="text">
<p>Recently I've made a project using python, though I got confused when I tested it out.</p>
<p>I use x.split to seperate parts of text and then make it go to the next line. Here's what i'm dealing with:</p>
<pre><code>list = [x.split(':') for x in open(path).read().split('\n')]
</code></pre>
<p>path = variable that gets the directory of the file</p>
<p>inside the file, the format is like this:</p>
<pre><code>abcd:1234
abcd:abc40
</code></pre>
<p>and more. 
I found out that it keeps repeating the same line. </p>
<p>How do I make it go from <strong>top to bottom</strong> of the file? ( in order )</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code should not exhibit the problems that you reported. There might be a trailing empty item in the list, but not duplicates or random lines, and it will be processed in order.</p>
<p>Anyway, you don't need to read and split the entire file into lines, and your problem might go away if you simplify the code. You can process the data directly from the file like this:</p>
<pre><code>data = [x.rstrip().split(':') for x in open(path)]
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html?highlight=rstrip#str.rstrip" rel="nofollow noreferrer"><code>rstrip()</code></a> removes any whitespace characters at the end of each line, including any terminating new line character(s).</p>
<p>Alternatively you could use the <a href="https://docs.python.org/3/library/csv.html#module-csv" rel="nofollow noreferrer"><code>csv</code></a> module and avoid the hassle of splitting the lines yourself:</p>
<pre><code>import csv

with open(path, newline='') as f:
    data = [row for row in csv.reader(f, delimiter=':')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your file is like this</p>
<pre><code>abcd:1234
abcd:abc40
pizd:1234
adcd:abc40
</code></pre>
<p>Then</p>
<pre><code>with open('p.txt', 'r+') as f:
    mylist = f.read().splitlines()

print (mylist)

data = [x.rstrip().split(':') for x in mylist]
print (data)
</code></pre>
<p>Output</p>
<pre><code>['abcd:1234', 'abcd:abc40', 'pizd:1234', 'adcd:abc40']
[['abcd', '1234'], ['abcd', 'abc40'], ['pizd', '1234'], ['adcd', 'abc40']]
</code></pre>
</div>
<span class="comment-copy"><code>.read().split('\n')</code> is better be <code>.readlines()</code>. And never assign anything to builtin keywords like <code>list = ...</code></span>
<span class="comment-copy">It keeps repeating what line? Please rewrite this as a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">Your code shouldn't cause such problem.</span>
<span class="comment-copy">@usr2564301 what i'm trying to say is that it picks random lines, it doesn't pick them from top to bottom.</span>
<span class="comment-copy">Are you processing a Windows or Mac file with Python 2? If so <code>\n</code> is not necessarily the line terminator, and <code>split()</code> will not work as you expect. Try opening the file in universal new line mode: <code>open(path, 'ru')</code></span>
<span class="comment-copy">or <code>list(csv.reader(f, delimiter=':'))</code> instead of a list comp...?</span>
<span class="comment-copy">@JonClements: that's a good suggestion, it's a bit simpler. Both run at about the same speed; using <code>list()</code> is <i>slightly</i> faster in Python 3.</span>
<span class="comment-copy">I generally find it's more explicit as to "I'm going to build a list from everything in this source as is" - the <code>[row for row in...]</code> without doing something to <code>row</code> or having an <code>if</code> - always makes me double take if it's been left out or something... :)</span>
