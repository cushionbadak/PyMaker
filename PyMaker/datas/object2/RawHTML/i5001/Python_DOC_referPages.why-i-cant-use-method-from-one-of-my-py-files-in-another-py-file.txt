<div class="post-text" itemprop="text">
<p>This is my code for form with button:</p>
<pre><code>import sys
from ClickerBot import test_ClikerBot

def func1():
    if sys.version_info &lt; (3, 0):
        # Python 2
        import Tkinter as tk
    else:
        # Python 3
        import tkinter as tk
    root = tk.Tk()
    root.title(“Clicker”)

   def startClick():
        root.destroy()
        clicker = test_ClikerBot()
        clicker.test_clicker_bot()

   button1 = tk.Button(root, text=“CLICK CLICK CLICK”, command=startClick())
    button1.pack()
    tk.mainloop()

if __name__ == ‘__main__‘:
    func1()
</code></pre>
<p>When I start this file, I receive next error:</p>
<pre><code>/System/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7    /Users/ltst/Desktop/dev/DribbleBot/venv/Scripts/main.py
Traceback (most recent call last):
  File “/Users/ltst/Desktop/dev/DribbleBot/venv/Scripts/main.py”, line 23, in &lt;module&gt;
    func1()
  File “/Users/ltst/Desktop/dev/DribbleBot/venv/Scripts/main.py”, line 19, in func1
    button1 = tk.Button(root, text=“CLICK CLICK CLICK”, command=startClick())
  File “/Users/ltst/Desktop/dev/DribbleBot/venv/Scripts/main.py”, line 16, in startClick
    clicker = test_ClikerBot()
  File “/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/unittest/case.py”, line 191, in __init__
    (self.__class__, methodName))
ValueError: no such test method in &lt;class ‘ClickerBot.test_ClikerBot’&gt;: runTest
</code></pre>
<p>But in my ClickerBot class exist this method:</p>
<pre><code>class test_ClikerBot(unittest.TestCase):    
   def test_clicker_bot(self):
</code></pre>
<p>Where is problem? I import this code from catalog studio recorder, and start learn python a week ago, because many things for me like magic and google help not every time (Sorry for bad English)</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code would be ok if your <code>test_ClikerBot</code> class was an ordinary class. The point is that <code>unittest</code> is a very special framework, and <code>TestCase</code> classes are not meant to be used directly, but thru a <code>TestRunner</code> and a <code>TestLoader</code> that both do quite some magic under the hood. <a href="https://docs.python.org/3/library/unittest.html#loading-and-running-tests" rel="nofollow noreferrer">This is partly documented</a>, but you'll probably have to read the source code of the existing runners and loaders to really find out how to make the whole thing work. A good starting point might be the already existing GUI testrunner mentionned in the doc:</p>
<blockquote>
<p>The script Tools/unittestgui/unittestgui.py in the Python source 
  distribution is a GUI tool for test discovery and execution</p>
</blockquote>
</div>
<span class="comment-copy">Thanks, I'll take a look this docs.</span>
<span class="comment-copy">That's help, thanks!</span>
