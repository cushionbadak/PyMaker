<div class="post-text" itemprop="text">
<p>I am trying to write a Python script to sniff network traffic using Tshark and save to a .pcap and .csv file.</p>
<p>I have been manually running <code>tcpdump –W 5 –C 500 –w normaltraffic</code></p>
<p>which captures packets and outputs fields <strong>No., Time, Source, Destination, Protocol, Length, Info</strong> into a .csv file. The -C tells tcpdump to save maximum of 5 files overwriting the oldest with new ones, and -W stipulates maximum file soze to be 500mb.</p>
<p>I would prefer to use a Python script and Tshark to output the same fields to a csv file, which would run every 5 minutes and save a new file everytime. The 5 iteration limit and 500mb size is no longer needed.</p>
<p>To iterate the script every 5 minutes I guess I could write a linux cron job, but how could I change the below to output to a new file eachtime (perhaps using a date stamp as the name). The end result I would like is to run the Python script every 5 minutes, and save all .pcap and .csv files in a folder.</p>
<pre><code>import os

os.system("tshark i 2 -T fields -e frame.time -e eth.src -e eth.dst -e ip.src -e ip.dst -e ip.proto -e tcp.len -e _ws.col.Info -w Data.pcap &gt; Data.csv")
</code></pre>
<p>Any help would be greatly appreciated !</p>
<p>@Barmar do you mean like this ?</p>
<pre><code>import os
from datetime import datetime


os.system("tshark i 2 -T fields -e frame.time -e eth.src -e eth.dst -e ip.src -e ip.dst -e ip.proto -e tcp.len -e _ws.col.Info -w Data.pcap &gt; Data.csv")

sys.stdout = open(‘Data.csv’, 'w')

capture = datetime.now().strftime("%Y%m%d-%H%M%S")
sys.stdout = open(capture + ‘.csv’, 'w')
</code></pre>
<p>@mikael-rousson would it look like this </p>
<pre><code>import os
from datetime import datetime
from threading import Timer

sniff=threading.Timer(600, os.system("tshark i 2 -T fields -e frame.time -e eth.src -e eth.dst -e ip.src -e ip.dst -e ip.proto -e tcp.len -e _ws.col.Info -w Data.pcap &gt; Data.csv"))  

while True:
    sniff.start()

    sys.stdout = open(‘Data.csv’, 'w')
    capture = datetime.now().strftime("%Y%m%d-%H%M%S")
    sys.stdout = open(capture + ‘.csv’, 'w')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One option is to use <code>Timer</code> from the <code>threading</code> module in Python. It can run an action after n seconds: <code>threading.Timer(n, action)</code>.</p>
<p><a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer">https://docs.python.org/3/library/threading.html</a></p>
<p>For your task, you could use a recursive call like this (beware max recursion limit python):</p>
<pre><code>import os
from datetime import datetime
from threading import Timer

def sniff(interval=600):
    os.system("tshark i 2 -T fields -e frame.time -e eth.src -e eth.dst -e ip.src -e ip.dst -e ip.proto -e tcp.len -e _ws.col.Info -w Data.pcap &gt; Data_{}.csv".format(datetime.now()))
    Timer(interval, sniff).start()

sniff()
</code></pre>
</div>
<span class="comment-copy">Put a timestamp in the filename. You can use the <code>str.format()</code> method to substute the time into the command line.</span>
<span class="comment-copy">@Barmar ive added another attempt in the description - is this what you meant ? sorry new to programming</span>
<span class="comment-copy">What are really trying to accomplish here? If you start <code>tshark</code> every 5 minutes, you'll just end up with many instances of it running.  What's your stop condition?  <i>Maybe</i> what you're looking to do is to use a ring buffer, specifying that a new file should be created every 5 minutes?  Once the file has been closed and a new file started, then you need to export the packet data from the pcap file to csv and each csv will have 5 minutes worth of data.  Something like: <code>tshark i 2 -b duration:300 -w Data.pcap</code> (Check <a href="https://www.wireshark.org/docs/man-pages/tshark.html" rel="nofollow noreferrer">wireshark.org/docs/man-pages/tshark.html</a> for more information.)</span>
<span class="comment-copy">You need to explain a bit more what youre trying to do... Are you trying to lunch multiple times tshark and basically capture the same traffic many times? Or probably have one tshark collecting some sample every 5 mins? Is the sample smaller than 5 mins, eg collect 30 secs every 5 mins, or are you trying to capture everything (collect 5 mins every 5 mins?)</span>
<span class="comment-copy">@ntg Christopher Maynard  I am trying to create a python script which will run tshark for x number of minutes, and save the output as both .pcap file and .csv file. I would like the output files to be named using the date and time. Once the files have been saved the script should then repeat the process again, until the script is manually stopped.</span>
<span class="comment-copy">do you mean like in the edited description above ?</span>
<span class="comment-copy">when I run the code I get an error saying 'NameError: name threading is not defined'</span>
<span class="comment-copy">if I add import threading to the top of the script I get a different error. AttributeError: module threading has no attribute timer</span>
<span class="comment-copy">are you using Python 3?</span>
<span class="comment-copy">yes I am using Python 3</span>
