<div class="post-text" itemprop="text">
<p>I am doing python basic challenges this is one of them. What all I needed to do is to read through a file and print out the frequency of letters in decreasing order. I am able to do this but I wanted to enhance the program by also printing out the frequency percentage alongside with the letter - frequency - freq%. Something like this: <code>o - 46 - 10.15%</code></p>
<p>This is what I did so far:</p>
<pre><code>def exercise11():
    import string
    while True:
        try:
            fname = input('Enter the file name -&gt; ')
            fop = open(fname)
            break
        except:
            print('This file does not exists. Please try again!')
            continue

    counts = {}
    for line in fop:
        line = line.translate(str.maketrans('', '', string.punctuation))
        line = line.translate(str.maketrans('', '', string.whitespace))
        line = line.translate(str.maketrans('', '', string.digits))
        line = line.lower()
        for ltr in line:
            if ltr in counts:
                counts[ltr] += 1
            else:
                counts[ltr] = 1
    lst = []
    countlst = []
    freqlst = []
    for ltrs, c in counts.items():
        lst.append((c, ltrs))
        countlst.append(c)
    totalcount = sum(countlst)
    for ec in countlst:
        efreq = (ec/totalcount) * 100
        freqlst.append(efreq)
    freqlst.sort(reverse=True)
    lst.sort(reverse=True)
    for ltrs, c, in lst:
        print(c, '-', ltrs)

exercise11()
</code></pre>
<p>As you can see I am able to calculate and sort the freq% on a different list but I am not able to include it in the tuple of the <code>lst[]</code> list alongside with the letter, freq. Is there any way to solve this problem? </p>
<p>Also if you have any other suggestions for my code. Please do mention.
<a href="https://i.stack.imgur.com/OARBw.jpg" rel="nofollow noreferrer">Output Screen</a> </p>
<hr/>
<p><em>Modification</em> </p>
<p>Applying a simple modification as mentioned by @wwii I got the desired output. All I had to do is add one more parameter to the print statement while iterating the <code>lst[]</code> list. Previously I tried to make another list for the freq%, sort and then tried to insert it to the letters-count tuple in a list which didn't work out. </p>
<pre><code> for ltrs, c, in lst:
        print(c, '-', ltrs, '-', round(ltrs/totalcount*100, 2), '%')
</code></pre>
<p><a href="https://i.stack.imgur.com/mnEBu.jpg" rel="nofollow noreferrer">Output Screen</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Your count data is in a dictionary of <code>{letter:count}</code> pairs.  </p>
<p>You can use the dictionary to calculate the total count like this:</p>
<pre><code>total_count = sum(counts.values())
</code></pre>
<p>Then don't calculate the percentage till you are iterating over the counts...</p>
<pre><code>for letter, count in counts.items():
    print(f'{letter} - {count} - {100*count/total}')    #Python v3.6+
    #print('{} - {} - {}'.format(letter, count, 100*count/total)    #Python version &lt;3.6+
</code></pre>
<hr/>
<p>Or if you want to put it all in a list so you can sort it:</p>
<pre><code>data = []
for letter, count in counts.items():
    data.append((letter,count,100*count/total)
</code></pre>
<p>Using <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer">operator.itemgetter</a> for the sort key function can help code readability.</p>
<pre><code>import operator
letter = operator.itemgetter(0)
count = operator.itemgetter(1)
frequency = operator.itemgetter(2)

data.sort(key=letter)
data.sort(key=count)
data.sort(key=frequency)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Tuples are immutable which is probably the issue you are finding. The other issue is the simple form of the <code>sort</code> function; A more-advanced <code>sort</code> function would serve you well. See below:</p>
<p>The list-of-tuples format of <code>lst</code>, but because tuples are immutable whereas lists are mutable, opting to change <code>lst</code> to a list-of-lists is a valid approach. Then, since <code>lst</code> is a list-of-lists with each element consisting of 'letter,count,frequency%', the sort function with <code>lambda</code> can be used to sort by whichever index you'd like. The following is to be inserted after your <code>for line in fop:</code> loop.</p>
<pre><code>lst = []
for ltrs, c in counts.items():
    lst.append([ltrs,c])
totalcount = sum([x[1] for x in lst])       # sum all 'count' values in a list comprehension

for elem in lst:
    elem.append((elem[1]/totalcount)*100)   # now that each element in 'lst' is a mutable list, you can append the calculated frequency to the respective element in lst

lst.sort(reverse=True,key=lambda lst:lst[2])    # sort in-place in reverse order by index 2.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The items in <code>freqlst</code>,<code>countlist</code>, and <code>lst</code> are related to each other by their position. If any are sorted that relationship is lost.</p>
<p><em>zipping</em> the lists together before sorting will maintain the relationship.</p>
<p>Will pick up from your list initialization lines.</p>
<pre><code>lst = []
countlst = []
freqlst = []
for ltr, c in counts.items():
    #change here, lst now only contains letters
    lst.append(ltr)
    countlst.append(c)
totalcount = sum(countlst)
for ec in countlst:
    efreq = (ec/totalcount) * 100
    freqlst.append(efreq)

#New stuff here: Note this only works in python 3+
zipped = zip(lst, countlst, freqlst)
zipped = sorted(zipped, key=lambda x: x[1])

for ltr, c, freq in zipped:
    print("{} - {} - {}%".format(ltr, c, freq)) # love me the format method :)
</code></pre>
<p>Basically, zip combines lists together into a list of tuples. Then you can use a lambda function to sort those tuples (very common stack question)</p>
</div>
<div class="post-text" itemprop="text">
<p>I think I was able to achieve what you wanted by using lists instead of tuples. Tuples cannot be modified, but if you really want to know how click <a href="https://stackoverflow.com/questions/11458239/python-changing-value-in-a-tuple">here</a></p>
<p>(I also added the possibility to quit the program)</p>
<p>Important: Never forget to comment your code</p>
<p>The code:</p>
<pre><code>def exercise11():
    import string
    while True:
        try:

            fname = input('Enter the file name -&gt; ')
            print('Press 0 to quit the program') # give the User the option to quit the program easily
            if fname == '0':
                break
            fop = open(fname)
            break
        except:
            print('This file does not exists. Please try again!')
            continue

    counts = {}
    for line in fop:
        line = line.translate(str.maketrans('', '', string.punctuation))
        line = line.translate(str.maketrans('', '', string.whitespace))
        line = line.translate(str.maketrans('', '', string.digits))
        line = line.lower()
        for ltr in line:
            if ltr in counts:
                counts[ltr] += 1
            else:
                counts[ltr] = 1
    lst = []
    countlst = []
    freqlst = []

    for ltrs, c in counts.items():
        # add a zero as a place holder &amp; 
        # use square brakets so you can use a list that you can modify 
        lst.append([c, ltrs, 0]) 
        countlst.append(c)
    totalcount = sum(countlst)

    for ec in countlst:
        efreq = (ec/totalcount) * 100
        freqlst.append(efreq)
    freqlst.sort(reverse=True)
    lst.sort(reverse=True)

    # count the total of the letters 
    counter = 0
    for ltrs in lst:
        counter += ltrs[0]

    # calculate the percentage for each letter 
    for letter in lst:
        percentage = (letter[0] / counter) * 100
        letter[2] += float(format(percentage, '.2f'))

    for i in lst:
        print('The letter {} is repeated {} times, which is {}% '.format(i[1], i[0], i[2]))
exercise11()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&lt;?php

$fh = fopen("text.txt", 'r') or    die("File does not exist");
 $line = fgets($fh); 

 $words = count_chars($line, 1); 

foreach ($words as $key=&gt;$value)
   {
   echo "The character  &lt;b&gt;' ".chr($key)." '&lt;/b&gt;  was found   &lt;b&gt;$value&lt;/b&gt;   times. &lt;br&gt;";
   }

?&gt;
</code></pre>
</div>
<span class="comment-copy">Do you have to use a tuple? If you simply use a list you shouldn't encounter this issue. Tuples are not mutable</span>
<span class="comment-copy">@NahuelP Yes, to sort the freq I need to have a tuple inside a list to co-relate the freq and the letter.</span>
<span class="comment-copy">so is @wwi's answer correct?</span>
<span class="comment-copy">@EzizDurdyyev Yes it is also, its the simplest modification to resolve my issue.</span>
<span class="comment-copy">@SrijanSingh so you should accept that answer</span>
<span class="comment-copy">Not sure why we need to get hung up on the imutability of tuples. The len of the lists will all be the same. Just use zip() to get them together. That said, advanced sorting is the way to go here for sure :) We are in agreement there. Cheers</span>
<span class="comment-copy">The only flaw with this is that it prints freq(counts) two times in the output screen, once while within the tuple inside the <code>lst[] list</code> and second with the <code>countlst</code> list.</span>
<span class="comment-copy">yeah sorry. That is super easy to fix tho by removing the tuple creation in the first for loop. I was trying to illustrate a solution. I will fix. If this helped, consider accepting it</span>
<span class="comment-copy">Code examples are welcome but please also explain your solution</span>
<span class="comment-copy">this code is for reading the the number  of characters and how offten they are repeated in the file.</span>
