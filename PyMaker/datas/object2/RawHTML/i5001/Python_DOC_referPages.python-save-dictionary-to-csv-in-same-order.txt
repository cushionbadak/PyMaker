<div class="post-text" itemprop="text">
<p>this is my actual code : </p>
<pre><code>import csv

fb_catalog_dict = {
    "id":"",
    "title":"",
    "description":"",
    "availability":"",
    "condition":"",
    "price":"",
    "link":"",
    "image_link":"",
    "brand":"",
    "additional_image_link":"",
    "age_group":"",
    "color":"",
    "gender":"",
    "item_group_id":"",
    "google_product_category":"",
    "material":"",
    "pattern":"",
    "product_type":"",
    "sale_price":"",
    "sale_price_effective_date":"",
    "shipping":"",
    "shipping_weight":"",
    "size":"",
    "custom_label_0":"",
    "custom_label_1":"",
    "custom_label_2":"",
    "custom_label_3":"",
    "custom_label_4":"",
}



with open('mycsvfile.csv', 'wb') as f:  # Just use 'w' mode in 3.x
    w = csv.DictWriter(f, fb_catalog_dict.keys())
    w.writeheader()
    w.writerow(fb_catalog_dict)
</code></pre>
<p>i want to same dictionary in csv in same order like fb_catalog_dict, problem is python create me csv file with diferent order filds, how can i fix this ?</p>
</div>
<div class="post-text" itemprop="text">
<p>In CPython &gt;= 3.6 this will work as written, because <a href="https://stackoverflow.com/q/39980323/4042267"><code>dict</code>s are ordered now</a>.</p>
<p>On any earlier Python version (or different implementations), you can use <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer"><code>collections.OrderedDict</code></a>. It does exactly what its name suggests.</p>
<p>You will have to slightly change your instantiation, because passing a <code>dict</code> to <code>OrderedDict</code> just preserves the order of the <code>dict</code>, but not the order in which you wrote it. So just make it a list of tuples, <a href="https://stackoverflow.com/q/25480089/4042267">as recommended here</a>.</p>
<hr/>
<p>Example code:</p>
<pre><code>import csv
from collections import OrderedDict

fb_catalog_dict = OrderedDict([
    ("id", ""),
    ("title", ""),
    ("description", ""),
    ("availability", ""),
    ...
    ])

with open('mycsvfile.csv', 'wb') as f:  # Just use 'w' mode in 3.x
    w = csv.DictWriter(f, fb_catalog_dict.keys())
    w.writerow(fb_catalog_dict)
</code></pre>
<p>(Not sure what your <code>header</code> was defined as, so I left it out.)</p>
</div>
<div class="post-text" itemprop="text">
<p>Dictionaries are unordered.  And given you only use the keys anyway, what you are doing can be achieved with a list.  ie:</p>
<pre><code>fb_catalog = [
    "id",
    "title",
    "description",
]
</code></pre>
<p>etc..</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python dict is and unordered structure. There is no specific order in a dict. So the only way I see is to use a list of fields to be sure you always get them in the same order:</p>
<pre><code>import csv

d = {'1':1,'2':2,'z':'z'} 

def fb_catalog_dict(fields_list,dict_object):
    return [dict_object[f] if f in dict_object else None for f in fields_list]

f = open('mycsvfile.csv', 'w',newline='')
writer = csv.writer(f)

for i in range(10):
    writer.writerow(get_values_from_dict(['z','1','2'],d))
f.close()
</code></pre>
<p>P.S&gt; the example is for Python 3.x</p>
</div>
<span class="comment-copy">how i can use this in my example code ?</span>
<span class="comment-copy">@JulianMedic See edit. But I'll add some example code in a sec.</span>
<span class="comment-copy">i use python 2.7</span>
<span class="comment-copy">@JulianMedic I added some example code.</span>
