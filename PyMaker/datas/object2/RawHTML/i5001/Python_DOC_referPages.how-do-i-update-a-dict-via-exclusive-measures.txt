<div class="post-text" itemprop="text">
<p>what I'm trying to do is create keys that don't exist in a dict...<br/>
the best way I can think to do this is with:</p>
<pre><code>&gt;&gt;&gt; d = dict( a = 'test' )
&gt;&gt;&gt; d['a'] = d.get('a', 'default' )
</code></pre>
<p>or</p>
<pre><code>&gt;&gt;&gt; if 'a' not in d: d['a'] = 'default'
</code></pre>
<p>the problem I'm having with this is nothing more than a minor annoyance, but it's the fact I have to specify <code>'a'</code> twice.</p>
<p>I'm trying not to define a function as this operation is trivial...<br/>
I just want to know, is there a better built-in way to do this??</p>
</div>
<div class="post-text" itemprop="text">
<p>You could just test if the key is not yet present:</p>
<pre><code>if 'a' not in d:
    d['a'] = 'default'
</code></pre>
<p>This doesn't get around the key repetition (which is easily remedied by using a variable), but at least avoids setting the key if it already is there anyway.</p>
<p>If your real goal is to access the current value and set a default if not yet present, use <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer"><code>dict.setdefault()</code></a>:</p>
<pre><code>value = d.setdefault('a', 'default')
</code></pre>
<p>This tests for the key, sets a default value, and returns the value for the key, all in one step.</p>
<p>Do take into account the default value expression is executed first, <code>dict.setdefault()</code> is not suitable where creating the default is expensive or has side effects.</p>
</div>
<span class="comment-copy">Errr... <code>d.setdefault('a', 'default')</code> ?</span>
<span class="comment-copy">thanks, idk where I overlooked <code>setdefault</code> from, but that's exactly what I needed.</span>
<span class="comment-copy">@Tcll just a tip: if the default value is potentially an expensive operation (some function call or something) - go for the membership check and then assign it... (just that I've seen people use <code>dict.setdefault</code> like it magically does a check first and then happens do the default value - but that's not how function calls work)</span>
<span class="comment-copy">right, as the object is created before <code>setdefault</code> is called ;)</span>
