<div class="post-text" itemprop="text">
<p>I just started learning python a few days ago and have a quick question I can't find an answer to:</p>
<p>How would you ask for items to add to a list while keeping their data type?</p>
<p>if i do this:</p>
<pre><code>def itemType(anyList):
    for i in range(len(anyList)):
        print(type(anyList[i]))

exampleList = []

while True:
    newItem = input('Add item to list? "NO" to end input.)
    if newItem == 'NO':
        break
    else:
        exampleList.append(input())

itemType(exampleList)
</code></pre>
<p>Obviously all the list items are string values. Is there a way to ask for input but keep string, integer, float or whatever data type?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could try casting to each variable type:</p>
<pre><code>try:
  newItem = int(newItem)
except ValueError:
  newItem = float(newItem)
except ValueError:
  pass #keep as string
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could try with python build in function <code>isnumeric</code>.</p>
<p>Here is what it look like:</p>
<pre><code>def itemType(anyList):
    for i in range(len(anyList)):
        print(type(anyList[i]))

exampleList = []

while True:
    newItem = input('Add item to list? "NO" to end input.')
    if newItem == 'NO':
        break
    else:
      if(newItem.isnumeric()):
        exampleList.append(int(newItem))
      else:
        exampleList.append(newItem)

itemType(exampleList)
</code></pre>
<p>It only check for <code>integer</code> and <code>string/float</code>.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/20449427/how-can-i-read-inputs-as-integers">How can I read inputs as integers?</a></span>
<span class="comment-copy">Welcome to SO. The input will always be stored as a string. How would the computer know, if your <code>2</code> will be used as a number or a string? You have to convert it (or use try/except to convert it) in the datatype you expect from the input. <a href="https://stackoverflow.com/questions/23294658/asking-the-user-for-input-until-they-give-a-valid-response">See also here.</a> Happy coding.</span>
<span class="comment-copy">If you want the user to be able to add any valid Python literal, look at <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a>; their <code>input</code> is <b>always</b> a string in Python 3.x. But it's not really very clear what you're trying to achieve here.</span>
<span class="comment-copy">There is no keeping of the data type. The user enters strings, fundamentally, bytes of information. You can choose various ways of interpreting that information. Using <code>eval</code> (or more safely, <code>ast.literal_eval</code>) would interpret the input strings as Python code (or in the latter case, only valid Python literals)</span>
<span class="comment-copy">It's not a valid python code. For strings, you'll get "during handling of the above exception, another exception occurred".</span>
<span class="comment-copy">Your program does not cast negative integers to int</span>
