<div class="post-text" itemprop="text">
<pre><code>fruit = {
    "banana": 1.00,
    "apple": 1.53,
    "kiwi": 2.00,
    "avocado": 3.23,
    "mango": 2.33,
    "pineapple": 1.44,
    "strawberries": 1.95,
    "melon": 2.34,
    "grapes": 0.98
}

for key,value in fruit.items():
     print(value)
</code></pre>
<p>i want to print kiwi key, how ?   print(value[2]) This is now working</p>
</div>
<div class="post-text" itemprop="text">
<p>Python's dictionaries <strong>have no order</strong>, so indexing like you are suggesting (<code>fruits[2]</code>) makes no sense as you can't retrieve the second element of something that has no order. They are merely sets of <code>key:value</code> pairs.</p>
<p>To retrieve the value at <code>key</code>: <code>'kiwi'</code>, simply do: <code>fruit['kiwi']</code>. This is the most fundamental way to access the value of a certain key. See <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer">the documentation</a> for further clarification.</p>
<p>And passing that into a <code>print()</code> call would actually give you an output:</p>
<pre><code>print(fruit['kiwi'])
#2.0
</code></pre>
<hr/>
<p><em>Note how the <code>2.00</code> is reduced to <code>2.0</code>, this is because superfluous zeroes are removed.</em></p>
<hr/>
<p>Finally, if you want to use a <code>for-loop</code> (don't know why you would, they are significantly more inefficient in this case  (<code>O(n)</code> vs <code>O(1)</code> for straight lookup)) then you can do the following:</p>
<pre><code>for k, v in fruit.items():
    if k == 'kiwi':
        print(v)
#2.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>fruit = {
    "banana": 1.00,
    "apple": 1.53,
    "kiwi": 2.00,
    "avocado": 3.23,
    "mango": 2.33,
    "pineapple": 1.44,
    "strawberries": 1.95,
    "melon": 2.34,
    "grapes": 0.98
}

for key,value in fruit.items():
    if value == 2.00:
         print(key)
</code></pre>
<p>I think you are looking for something like this.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can access the value of key 'kiwi' with</p>
<pre><code>print(fruit['kiwi'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Is this what you are looking for?</p>
<pre><code>fruit = {
    "banana": 1.00,
    "apple": 1.53,
    "kiwi": 2.00,
    "avocado": 3.23,
    "mango": 2.33,
    "pineapple": 1.44,
    "strawberries": 1.95,
    "melon": 2.34,
    "grapes": 0.98
}

for key in fruit:
     print(fruit[key],"=",key)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you only want to display the Kiwi field.</p>
<pre><code>fruit = {
    "banana": 1.00,
    "apple": 1.53,
    "kiwi": 2.00,
    "avocado": 3.23,
    "mango": 2.33,
    "pineapple": 1.44,
    "strawberries": 1.95,
    "melon": 2.34,
    "grapes": 0.98
}

print(fruit["kiwi"],"=kiwi")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def reverse_dict(dictionary, lookup_val):
    for key,value in fruit.items():
        if abs(lookup_val-value) &lt; 0.01:
            return key

fruit = {
    "banana": 1.00,
    "apple": 1.53,
    "kiwi": 2.00,
    "avocado": 3.23,
    "mango": 2.33,
    "pineapple": 1.44,
    "strawberries": 1.95,
    "melon": 2.34,
    "grapes": 0.98
}

for key,value in fruit.items():
    print("{}:{}".format(key, value))

print(fruit['kiwi'])
print(reverse_dict(fruit, 2.00))
</code></pre>
<p>Many reasons for caution</p>
<ol>
<li>This will get slow with a large dict</li>
<li>only first match will be returned</li>
<li>your value is a float, so a tolerance is needed: I picked 0.01</li>
</ol>
</div>
<span class="comment-copy">you need 'kiwi' string to fetch its corresponding <b>value</b> from the dict. 'kiwi' string is itself key, why not just do <code>print('kiwi')</code>? If you want to fetch key based on index, in older version of Python's dictionary were unordered in nature. However from Python 3.6, they maintain the insertion order.</span>
<span class="comment-copy">if you are looking for printing the value of "kiwi" key, then you need to just do <code>fruit["kiwi"]</code></span>
<span class="comment-copy"><code>print(fruit['kiwi'])</code>?</span>
<span class="comment-copy">@MoinuddinQuadri See my ans</span>
<span class="comment-copy">@VasilisG. See my ans</span>
<span class="comment-copy">but no loop :) i use for</span>
<span class="comment-copy">@lrakli I understood  the question to be "how to print just the one value out of the <code>dict</code>.  If that is not what you are looking for, then you should reword the question.</span>
<span class="comment-copy">No Bro i want to print only kiwi value</span>
<span class="comment-copy">@Irakli check my new answer.</span>
<span class="comment-copy">@AbhisekRoy Delete your answer if it is wrong! Even though it has an upvote, sometimes you must accept the fate :)</span>
