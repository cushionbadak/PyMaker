<div class="post-text" itemprop="text">
<p>Im using Django framework to build a simple inventory management system. There is data in the database populated using the django admin. Now when i display the data on the website (front-end), there is a time field which is displaying the date, although i am beginning to learn django, I assume my models are wrong. Below i've attached my models.py and also the error on the actual site.</p>
<p>Models.py<br/></p>
<pre><code>    # -*- coding: utf-8 -*-

from __future__ import unicode_literals
import time
from django.db import models

class Cart(models.Model):
    def __str__(self):
        return self.CartColor

    CartColor = models.CharField(max_length=255)
    Quantity = models.CharField(max_length=5)


class Initials(models.Model):
    def __unicode__(self):
        return self.Staff

    Staff = models.CharField(max_length=255)
    FirstName = models.CharField(max_length=255)
    LastName = models.CharField(max_length=255)


class RTInfo(models.Model):
    def __str__(self):
        return str(self.TicketNo)

    TicketNo = models.CharField(max_length=10)
    # TickStamp = models.DateField(auto_now_add=True, blank=True)


class Room(models.Model):
    def __unicode__(self):
        return self.Number

    Number = models.CharField(max_length=5)


class TCCheckOut(models.Model):
    def __str__(self):
        return str(self.ReturnDate)

    ReturnDate = models.DateField(auto_now_add=True, blank=True)
    ReturnTime = models.TimeField(auto_now_add=True, blank=True, unique_for_date=True)
    OutQuantity = models.CharField(max_length=255)
    Staff = models.ForeignKey(Initials, on_delete=models.CASCADE)
    Number = models.ForeignKey(Room, on_delete=models.CASCADE)
    CartColor = models.ForeignKey(Cart, on_delete=models.CASCADE)
    TicketNo = models.ForeignKey(RTInfo, related_name="custom_user1_profile", on_delete=models.CASCADE)
    # TickStamp = models.ForeignKey(RTInfo,related_name="custom_pass2_profile", on_delete=models.CASCADE)


class TCCheckIn(models.Model):
    def __str__(self):
        return str(self.Date)

    Date = models.DateField(auto_now_add=True, blank=True)
    Time = models.TimeField(auto_now_add=True, blank=True)
    Quantity = models.CharField(max_length=255)
    Staff = models.ForeignKey(Initials, on_delete=models.CASCADE)
    Number = models.ForeignKey(Room, on_delete=models.CASCADE)
    CartColor = models.ForeignKey(Cart, on_delete=models.CASCADE)
    TicketNo = models.ForeignKey(RTInfo, related_name="custom_user_profile", on_delete=models.CASCADE)
    ReturnDate = models.ForeignKey(TCCheckOut, related_name="value1", on_delete=models.CASCADE)
    ReturnTime = models.ForeignKey(TCCheckOut, related_name="timeRet", on_delete=models.CASCADE)
    OutQuantity = models.ForeignKey(TCCheckOut, related_name="value3", on_delete=models.CASCADE)
</code></pre>
<p>Actual Error
<a href="https://i.stack.imgur.com/bXRNf.png" rel="nofollow noreferrer">Actual_error</a></p>
<p>As seen from the image above, even though the time is being saved, date is displayed. It was also noted that in Django admin, the said time fields display the date as well, an image has been attached below</p>
<p><a href="https://i.stack.imgur.com/6IQhq.png" rel="nofollow noreferrer">Django_Error</a></p>
<p>I assumed that, in Django admin Return Time is supposed to be a timestamp then why is the date displayed ?</p>
<p>Thanks to anyone that can help! </p>
</div>
<div class="post-text" itemprop="text">
<p>As I mentioned in the comment, this is because of your <code>__str__()</code> in <code>TCCheckOut</code> model. <br/><br/>
<a href="https://docs.python.org/3/reference/datamodel.html#object.__str__" rel="nofollow noreferrer"><strong>str</strong>()</a></p>
<blockquote>
<p>Called by str(object) and the built-in functions format() and print()
  to compute the “informal” or nicely printable string representation of
  an object. The return value must be a string object.
  <br/><br/></p>
</blockquote>
<p>To solve your problem, you can access the <code>ReturnDate</code> and <code>ReturnTime</code> by using <code>TCCheckIn</code> instance<br/></p>
<pre><code>In [1]: check_in = TCCheckIn.objects.get(id=1)

In [2]: check_in.ReturnDate.ReturnDate
Out[2]: datetime.date(2018, 2, 27)

In [3]: check_in.ReturnDate.ReturnTime
Out[3]: datetime.time(1, 24, 46, 440771)
</code></pre>
<p><br/>
By using this kind of accessing, you can display them in your template/html</p>
</div>
<span class="comment-copy">In your <code>TCCheckIn</code> model, you defined <code>ReturnTime</code> which is a reference to <code>TCCheckOut</code> instance and it's <code>__str__()</code> returns <code>ReturnDate</code></span>
<span class="comment-copy">What would be the work around here because if i change the __str__() to ReturnTIme then the date is displayed wrong....</span>
<span class="comment-copy">Thank youuuu! it works now!</span>
<span class="comment-copy">Glad to hear that!</span>
<span class="comment-copy">Hellooo!!! I have one last question regarding forms! Open a new question or post it here? Thanks!</span>
<span class="comment-copy">Post a new question</span>
