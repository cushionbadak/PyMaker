<div class="post-text" itemprop="text">
<p>I realize this has been asked (many) times before, but I've been trying different solutions and none of them are working for me - clearly I'm doing something wrong, but I'm not sure what. </p>
<p>We're learning how to scrub data in Python, so what I'm trying to do is take a text file (that has been converted to a text file from excel) as input and output my scrubbed data. Data is a mix of text and numbers and each cell either has text or numbers but not both. I'm trying to delete certain columns, and I can't figure out how to. I would really appreciate it if I could get answers just using the csv package (or no package at all) - I know pandas is supposed to be helpful, but I'm trying to go by what we're using in class.</p>
<p>This is the code I currently have right now; when I run it, I just get a blank excel sheet as my output.</p>
<pre><code>import csv

def airbnb_csv():

    source = '/Users/(myname)/Desktop/airbnb.txt'
    target = 'scrubbed_airbnb2.csv'

    with open(source,'r') as fp_in:
        reader = csv.reader(fp_in, delimiter=',')
        with open(target,'w') as fp_out:
            writer = csv.writer(fp_out, delimiter=',')
            for r in reader:
                writer.writerow((r[2], r[3], r[5], r[7], r[8], r[9], 
                r[10], r[11], r[13]))
</code></pre>
<p>I have other code that did get me a filled in excel sheet as output. This was my original code, but it got weird fast.</p>
<pre><code>for row in fp_in:
     if (row[:5].isdigit()):
         v = row.split()
         v = v[:9]
         writer.writerow(v)
         if row.startswith("room_id") and not header_written:
            header_written = True
            v = row.split()
</code></pre>
<p>Thank you so much for any and all help/advice/hints you can give me! (no need to correct my code if it's too messy to deal with, but just wanted to add it so I didn't look like I was trying to get my homework done for me)</p>
</div>
<div class="post-text" itemprop="text">
<p>So, here's some directions.</p>
<p>First, not directly regarding your question, context managers can be chained, i.e.:</p>
<pre><code>with open('input') as inp, open('output') as out:
    do_your_stuff
</code></pre>
<p>This will save your from some indentation pain.</p>
<p>More on question: there's no way to "delete" columns for most modern filesystems, so you need to read, process, write to other file (being honest, there's ways around, but that requires <em>way</em> more work). In your case, processing would be selecting what to write (or what to skip). The best way to do this, while keeping your code readable and maintainable is to use <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer"><code>DictReader</code></a> and <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer"><code>DictWriter</code></a>. Once you reading/writing csv rows by <em>named</em> entities, everything becomes easy:</p>
<pre><code>fields_needed = ['price', 'rooms']
with open(source) as fp_in, open(target, 'w') as fp_out:
    reader = csv.DictReader(fp_in)
    writer = csv.DictWriter(fp_out, fieldnames=fields_needed, extrasaction='ignore')

    writer.writeheader()
    for r in reader:
        writer.writerow(r)
</code></pre>
</div>
<span class="comment-copy">if you're not oppsed, this is a <code>bash</code> one liner which I guess you can call from within python if it's necessary to keep it within python</span>
<span class="comment-copy">Getting blank output doesn't sound right from your code. From <code>for r in reader:</code> what do you see if you put <code>print(r)</code> in that loop?</span>
<span class="comment-copy">Yea, in addition, the code, as written, merely defines a function that is never called...</span>
<span class="comment-copy">I missed this the first time around running my code, but when I call it, it says "list index out of range". Does that have to do with me not splitting my rows? (and in that case, that's why I abandoned my first code/the bottom code because my code was splitting my data incorrectly)</span>
<span class="comment-copy">Why use <code>delimiter=','</code>? Isn't that already the default? <a href="https://docs.python.org/3/library/csv.html#csv.Dialect.delimiter" rel="nofollow noreferrer">docs.python.org/3/library/csv.html#csv.Dialect.delimiter</a></span>
