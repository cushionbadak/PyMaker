<div class="post-text" itemprop="text">
<p>I need to concat a single byte with the bytes I get from a parameter string.</p>
<pre><code>byte_command = 0x01
socket.send(byte_command + bytes(message, 'UTF-8'))
</code></pre>
<p>but I get this error:</p>
<pre><code>socket.send(byte_command + bytes(message, 'UTF-8'))
TypeError: str() takes at most 1 argument (2 given)
</code></pre>
<p>I assume this happens because I am using the string concat operator - how do I resolve that?</p>
</div>
<div class="post-text" itemprop="text">
<p>From the error message, I get that you are running <em>Python2</em> (works in <em>Python3</em>). Assuming that <code>message</code> is a string:</p>
<ul>
<li><p><em>Python3</em> (<a href="https://docs.python.org/3/library/stdtypes.html#bytes" rel="nofollow noreferrer">[Python]: class <strong>bytes</strong>(<em>[source[, encoding[, errors]]]</em>)</a>):</p>
<pre><code>byte_command = b"\x01"
sock.send(byte_command + bytes(message, 'UTF-8'))
</code></pre></li>
<li><p><em>Python2</em> (where <code>bytes</code> and <code>str</code> are the same):</p>
<pre><code>byte_command = "\x01"
sock.send(byte_command + message)
</code></pre></li>
</ul>
<p>I also renamed the <code>socket</code> to <code>sock</code> so it doesn't clash with the <code>socket</code> module itself.<br/>
As everyone suggested, it's recommended / common to do the transformation using <code>message.encode("utf8")</code> (in <em>Python3</em> the argument is not even necessary, as <em>utf8</em> is the default encoding)</p>
</div>
<div class="post-text" itemprop="text">
<p>From that error message, it looks like you are using python2, not python3.  In python2, bytes is just an alias for str, and str only takes one argument.</p>
<p>To make something that works in python2 and python3, use str.encode rather than bytes:</p>
<pre><code>byte_command = b'0x01'
socket.send(byte_command + message.encode('UTF-8'))
</code></pre>
</div>
<span class="comment-copy"><code>byte_command = 0x01</code>, it is an int, if you want the <code>bytes</code> representation, use <code>byte_command  = b"\x01"</code>.</span>
<span class="comment-copy">@CristiFati still does not work</span>
<span class="comment-copy">The proximal cause of you error is passing an invalid argument to <code>bytes()</code>...If message is a string, then you need <code>message.encode()</code>... But is this really Python 3?</span>
<span class="comment-copy">Nevermind I accidentally used python 2 -,-</span>
<span class="comment-copy">Yes message is a string. But strangely I get for message="AUTH" I get: 01 65 85 84 72 16 and not 01 41 55 54 48 as I would expect it</span>
<span class="comment-copy">Apperently the bytes I am sending have to be in hex representation - how would I do that?</span>
<span class="comment-copy">I see, the 2nd value list is the hex representation of the ones in the 1st one. The bytes that you're sending? Meaning <code>message</code>? you should edit the question, and add the message as it is and how it should be (althought that would be a different question).</span>
<span class="comment-copy">I created a new question as you advised: <a href="https://stackoverflow.com/questions/48915590/python-3-convert-string-to-hex-bytes" title="python 3 convert string to hex bytes">stackoverflow.com/questions/48915590/â€¦</a></span>
<span class="comment-copy">I see that you already got an answer to that one :)</span>
