<div class="post-text" itemprop="text">
<p>How can I loop over the below dict and create another dict where the values of similar items are added?</p>
<pre><code>file_dict = {'abc.mp3': 10, 'abc.jpg': 20, 'abc.mp4': 30, 'xyz.mp3': 40, 'mno.mp3': 40, 'xyz.jpg': 30}
</code></pre>
<p><strong>Expected output:</strong></p>
<pre><code>added_dict = {'mp3': 90, 'jpg': 50, 'mp4': 30}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In case the solution by @Ajax1234 is too much <em>Python-Fu</em> for you, you can try this one:</p>
<pre><code>file_dict = {'abc.mp3': 10, 'abc.jpg': 20, 'abc.mp4': 30, 'xyz.mp3': 40, 'mno.mp3': 40, 'xyz.jpg': 30}

added_dict = {}
for k, v in file_dict.items():
    temp_k = k.rsplit('.', 1)[-1]
    res = added_dict.setdefault(temp_k, 0)
    added_dict[temp_k] += v
print(added_dict)   # -&gt; {'mp3': 90, 'jpg': 50, 'mp4': 30}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>import os

file_dict = {'abc.mp3': 10, 'abc.jpg': 20, 'abc.mp4': 30, 'xyz.mp3': 40, 'mno.mp3': 40, 'xyz.jpg': 30}

added_dict = {}
for k, v in file_dict.items():
    ext = os.path.splitext(k)[-1][1:]
    added_dict[ext] = added_dict.setdefault(ext, 0) + v

print(added_dict)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>file_dict = {'abc.mp3': 10, 'abc.jpg': 20, 'abc.mp4': 30, 'xyz.mp3': 40, 'mno.mp3': 40, 'xyz.jpg': 30}

some_dict = {}
for key, value in file_dict.iteritems():
    #   Formatting your key.
    formatted_key = key.split('.')[-1]

    #   If key exists, update data.
    if formatted_key in some_dict:
        some_dict[formatted_key] += value
    #   If not, create the key.
    else:
        some_dict[formatted_key] = value

print some_dict
</code></pre>
</div>
<span class="comment-copy">How is your <code>file_dict</code> dictionary having multiple keys with same name? Keys in dictionary are unique</span>
<span class="comment-copy">there's no way your original dict can exist</span>
<span class="comment-copy">The original dict could be instantiated this way, but it would keep the last inserted key for similar ones.</span>
<span class="comment-copy">Short answer: you can't, because your <code>file_dict</code> doesn't actually look like that.  Long answer: use a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a> and come up with a way of generating your original data that doesn't rely on putting it in a dictionary first</span>
<span class="comment-copy">I thought I can simplify the question but I was wrong. I have updated the question and the expected output should be the same. Thx</span>
<span class="comment-copy">Maybe <code>k.rsplit('.', 1)</code> is better?</span>
<span class="comment-copy">@DDGG yes it is.</span>
<span class="comment-copy">Most of our code is the same, Cheers! :)</span>
<span class="comment-copy">Nitpick: going with <code>[-1]</code> is safer imho.</span>
<span class="comment-copy">You're right. :)</span>
