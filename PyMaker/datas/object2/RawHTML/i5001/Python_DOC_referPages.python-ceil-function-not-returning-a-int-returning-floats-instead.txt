<div class="post-text" itemprop="text">
<pre><code>number = 1.23456789
import math
math.ceil(number)
print(number)
</code></pre>
<p>Expected outcome is <code>2</code>, instead the return is the original input of <code>1.234567</code>. </p>
<p>I'm learning Python and this is my fourth assignment, the professor even says in their own textbook to simply put <code>math.ceil(var)</code> so I don't know what I'm doing wrong here.</p>
</div>
<div class="post-text" itemprop="text">
<p>Shouldn't you be looking at the return value of math.ceil?</p>
<pre><code>number = 1.23456789
import math
number=math.ceil(number)
print(number)
</code></pre>
<p>Output is </p>
<pre><code>$ python blah.py 
2.0
</code></pre>
<p>So change <code>number=math.ceil(number)</code> <code>number=math.ceil(number)</code></p>
</div>
<span class="comment-copy"><code>math.ceil</code> <i>returns a new number</i>, it doesn't (and <i>can't</i>) change the original one. Also it rounds <i>up</i>, so I don't know why you expected 1. Also it <i>does</i> return a float, as documented; <code>math.ceil(1.234567) == 2.0</code>.</span>
<span class="comment-copy">(<a href="https://docs.python.org/3/library/math.html#math.ceil" rel="nofollow noreferrer">Reading the documentation</a> can often be productive.)</span>
<span class="comment-copy">why not just <code>number = int(math.ceil(number))</code>?</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ that still won't change the original number, note they need to assign it back to something.</span>
<span class="comment-copy">Is this Python 2 or Python 3? Even assigning the return value back to <code>number</code>, the type will depend on the Python version.</span>
<span class="comment-copy">Durp! I hadn't considered being <i>able</i> to assign a variable with the math.ceiling in-line. This did it! Thanks man!</span>
<span class="comment-copy">Yeah, most math functions don't modify the argument that you pass into the function; most return the result.  There are exceptions though.  Keep learning Python.  You will love it.</span>
