<div class="post-text" itemprop="text">
<p>I'm trying to get it so each piece of code I'm writing is on a separate line but it comes out as a big long line once it wrote the CSV file, I've tried /n, /r/n and .splitlines but none of them work and I have the same result</p>
<p>here is the code(haven't included modules)</p>
<pre><code>save_path = 'C:\\Users\danie\Desktop\pro 42 42' 
name_of_file = 'csv1.csv' 
completename = os.path.join(save_path, name_of_file)

#oldtime = time.time()
def Scheduler(): 
oldtime = time.time()
while 1:
    if time.time() &gt; oldtime + 3600:
        Generate()
        oldtime = time.time()

time.sleep(5)




def Generate():

cursor, connection = database.connection()

#products['2']

count = 1

with open(completename, 'w') as file:
    for tank in data.tankOBJ:


        product = cursor.execute("SELECT *\
                                    FROM pro42_product\
                                    WHERE product_id ='%s'\
                                    LIMIT 1" %(tank['product']))


        product = cursor.fetchone()

        print(product)

        file.write(str(count) + ',' + str(tank['id']).zfill(2) + ',' + str(tank['name']) + ',' + str(tank['name']) + ',' + product[1] + ',' + str(tank['innage']/1000) + ',' + '0' + ',' + '#' + ',' + 'Mtr' + ',' + str(tank['temperature']) + ',' + str(tank['water']/1000) + ',' + str(tank['density']/1000) + ',' + tank['lastmeasurand'].upper() + ',' + 'Y,/r/n')


        count = count + 1


cursor.close()
connection.close()


return "{'success':True}"
</code></pre>
<p>and here is the end result
      1,01,31-TK-01A,31-TK-01A,B,0.0,0,#,Mtr,0.0,0.0,0.0,22-FEB-2018 14:29,Y2,02,31-TK-01B,31-TK-01B,B,0.0,0,#,Mtr,0.0,0.0,0.0,22-FEB-2018 14:29,Y3,03,44-TK-01,44-TK-01,B,0.0,0,#,Mtr,0.0,0.0,0.0,22-FEB-2018 14:29,Y4,04,51-TK-01,51-TK-01,A,12.323,0,#,Mtr,19.0,0.0,0.821,22-FEB-2018 14:29,Y5,05,51-TK-02,51-TK-02,A,0.0,0,#,Mtr,0.0,0.0,0.0,22-FEB-2018 14:29,Y6,06,51-TK-03,51-TK-03,A,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y7,07,51-TK-04,51-TK-04,A,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y8,08,51-TK-12,51-TK-12,B,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y9,09,51-TK-13,51-TK-13,B,0.0,0,#,Mtr,0.0,0.0,0.0,22-FEB-2018 14:29,Y10,10,51-TK-19,51-TK-19,B,0.0,0,#,Mtr,0.0,0.0,0.0,22-FEB-2018 14:29,Y11,11,51-TK-20,51-TK-20,B,0.0,0,#,Mtr,0.0,0.0,0.0,22-FEB-2018 14:29,Y12,12,51-TK-21,51-TK-21,B,0.0,0,#,Mtr,0.0,0.0,0.0,22-FEB-2018 14:29,Y13,13,51-TK-22,51-TK-22,B,0.0,0,#,Mtr,0.0,0.0,0.0,22-FEB-2018 14:29,Y14,14,51-TK-23,51-TK-23,A,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y15,15,51-TK-24,51-TK-24,A,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y16,16,51-TK-25,51-TK-25,A,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y17,17,51-TK-30,51-TK-30,B,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y18,18,51-TK-31,51-TK-31,B,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y19,19,51-TK-32,51-TK-32,B,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y20,20,51-TK-33,51-TK-33,B,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y21,21,51-TK-34,51-TK-34,B,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y22,22,51-TK-35,51-TK-35,B,0.0,0,#,Mtr,0,0.0,0.0,01-JAN-1970 12:15,Y</p>
<p>this comes off as one straight line i want it in separate rows for each piece of data. </p>
</div>
<div class="post-text" itemprop="text">
<p>Very short answer: the newline character is <code>"</code>\n<code>", not "</code>/n`".</p>
<p>Now for a couple advices</p>
<p>1/ hardcoding platform-specific separators defeats the whole point of <code>os.path.join()</code> </p>
<p>2/ in general, use <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">string formatting</a> instead of string concatenation</p>
<p>3/ but if you want to generate a csv, <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">use the csv module</a> instead </p>
<p>4/ if you want both index and value in a for loop, don't maintain the index by hand, <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">use <code>enumerate()</code> instead</a></p>
<p>5/ unless you don't mind <a href="http://bobby-tables.com/" rel="nofollow noreferrer">opening your application to SQL injection attacks</a>, don't use string interpolation for SQL queries, <a href="http://bobby-tables.com/python" rel="nofollow noreferrer">use placeholders and prepared statements instead</a></p>
<p>6/ your system certainly has a builtin tasks scheduler (last time I used Windows - in the NT4 days some 19 years ago that is - it had one, and I assume it still does), use it instead of reinventing the square wheel.</p>
</div>
<div class="post-text" itemprop="text">
<p>You would probably benefit a lot from using <a href="https://docs.python.org/3.6/library/csv.html" rel="nofollow noreferrer">the standard library's csv module</a>, which includes <a href="https://docs.python.org/3.6/library/csv.html#examples" rel="nofollow noreferrer">plenty of examples</a> to demonstrate its use.</p>
<p>Where instead of writing your file line-by-line as in your case you show above it would look something like:</p>
<pre><code>import csv

count = 1
products = []
for tank in data.tankOBJ:
    product = cursor.execute(
        "SELECT * FROM pro42_product "
        "WHERE product_id ='%s' "
        "LIMIT 1" % (tank['product']))

    product = cursor.fetchone()

    newrow = [
        count,
        str(tank['id']).zfill(2),
        tank['name'],
        tank['name'],
        product[1],
        tank['innage']/1000,
        '0',
        '#',
        'Mtr',
        tank['temperature'],
        tank['water']/1000,
        tank['density']/1000,
        str(tank['lastmeasurand']).upper(),
        'Y'
    ]
    products.append(newrow)

    count += 1

with open(completename, 'w', newline='') as f:
    writer = csv.writer(f)
    writer.writerows(products)
</code></pre>
</div>
<span class="comment-copy">you have to replace \n instead of /n</span>
<span class="comment-copy">Would you ming formatting that code to make it easier to read? It looks like you lost indentation for the <code>Scheduler</code> and <code>Generate</code> functions and it's hard to tell if the latter should be its own top-level function or an inner function in <code>Scheduler</code>.  EDIT: also, it's not just about making the code easier to read but making it correct Python code</span>
