<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/13130574/bound-method-error">Bound method error</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>Fairly new to Python with a question regarding class instances. I have something like</p>
<pre><code>class Headers:
  def login_headers(self):
    return {
      'origin': 'address.com',
      'accept-encodig': 'gzip, deflate, br',
      'more': '...'
    }
</code></pre>
<p>In my main file I'm importing <code>from headers import Headers</code> and call an instance and assign it to a variable:</p>
<p><code>headers = Headers()</code></p>
<p>But when I want to get the dictionary out it like this:</p>
<p><code>headers.login_headers</code> it does not return the dictionary but the instance itself.</p>
<p>The print output I'm getting is: <code>&lt;bound method Headers.login_headers of &lt;headers.Headers instance at 0x10e1d4488&gt;</code></p>
<p>Why is it not returning the dict?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because is a method.</p>
<p>For it to be not callable make it property with <a href="https://docs.python.org/3/library/functions.html#property" rel="nofollow noreferrer"><code>@property</code></a> decorator.</p>
<pre><code>class Headers:
    @property
    def login_headers(self):
        return {
            'origin': 'address.com',
            'accept-encodig': 'gzip, deflate, br',
            'more': '...'
        }
</code></pre>
<p>For it to be more pythonic, i woud suggest using method and call it appropriate</p>
<pre><code>class Headers:
    def __init__(self):
        self.login_headers = {
            'origin': 'address.com',
            'accept-encodig': 'gzip, deflate, br',
            'more': '...'
        }

    def get_login_headers(self):
        return self.login_headers

headers = Headers()
headers.get_login_headers()
</code></pre>
<p>In instance initialization you would assign default value of <code>login_headers</code> and if you need to inherit you <code>Headers</code> class you can just override your <code>get_login_headers</code> to match your possible changes.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're missing the parantheses for your method. You're getting the address of the method function instead of the method itself. Try the following:</p>
<pre><code>headers.login_headers()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you need to do to actually <em>call</em> login_headers is just:</p>
<pre><code>    headers = Headers()
    headers.login_headers()
</code></pre>
<p>login_headers is a function that you've defined as a child of the Headers class, so you just need to call it like any other function.</p>
</div>
<span class="comment-copy">coming from the Ruby world this is something I have overseen. Is <code>@property</code> some magic Python decorator? Also does the method behave the same as when I would do <code>.login_headers()</code>?</span>
<span class="comment-copy">No, it doesn't need to be called when value is retrieved, it some sort of lazy-evaluated attribute.</span>
<span class="comment-copy">any downsides of this, I don't wanna attach myself to bad habits. Is using <code>@property</code> totally fine or should I actually call the method with <code>()</code></span>
<span class="comment-copy">@supersize i've updated answer with more pythonic way.</span>
<span class="comment-copy">thanks, totally did miss that</span>
