<div class="post-text" itemprop="text">
<p>I am an experienced <code>c</code> programmer trying to come to terms with <code>Python</code>.</p>
<p><code>location</code> is <code>tuple</code> and I can print with the following</p>
<pre><code>print(" %s %s" % (date_time, model))
print("Lat: %-.4f, Lon: %-.4f" % (location))
</code></pre>
<p>I tried to combine this into a single print, but get error <code>TypeError: must be real number, not tuple</code> with the following</p>
<pre><code>print("%s %s Lat: %-.4f, Lon: %-.4f" % (date_time, model, location))
</code></pre>
<p>I have tried several variations, without success.</p>
<p>I can think of several ways of working around this (which I would do if I had to deliver a working program) but would like to understand an elegant method an experienced Python programmer would use.</p>
</div>
<div class="post-text" itemprop="text">
<p>Unpack your tuple.</p>
<pre><code>&gt;&gt;&gt; date_time, model, location = 1, 2, (3, 4)
&gt;&gt;&gt; print("%s %s Lat: %-.4f, Lon: %-.4f" % (date_time, model, *location))
1 2 Lat: 3.0000, Lon: 4.0000
</code></pre>
<p><a href="https://pyformat.info/" rel="nofollow noreferrer">pyformat.info</a> is a helpful site that summarizes string formatting in Python.</p>
<p>In general, I suggest the usage of the new-style <code>str.format</code> over the <code>%</code> operator. <a href="https://www.python.org/dev/peps/pep-3101/" rel="nofollow noreferrer">Here's</a> the relevant PEP.</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to print the values <strong>in</strong> the tuple, not the tuple itself. Either concatenate the tuple:</p>
<pre><code>print("%s %s Lat: %-.4f, Lon: %-.4f" % ((date_time, model) + location)))
</code></pre>
<p>or interpolate the tuple values into the first tuple:</p>
<pre><code>print("%s %s Lat: %-.4f, Lon: %-.4f" % (date_time, model, *location))
</code></pre>
<p>Personally, I'd not use printf formatting here <em>at all</em>. Use the more modern and powerful <a href="https://docs.python.org/3/library/string.html#formatstrings" rel="nofollow noreferrer">string formatting syntax</a>, preferably in the form of the (very fast) <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">formatted string literals</a>:</p>
<pre><code>print(f"{date_time} {model} Lat: {location[0]:-.4f}, Lon: {location[1]:-.4f}")
</code></pre>
</div>
