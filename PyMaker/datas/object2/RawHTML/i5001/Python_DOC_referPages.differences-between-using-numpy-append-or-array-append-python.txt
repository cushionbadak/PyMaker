<div class="post-text" itemprop="text">
<p>I have this basic example to understand the numpy append method. </p>
<pre><code>distances=[]
for i in range (8):
    distances = np.append(distances, (i))
print(distances)

distances=[]
for i in range (8):
    distances.append(i)
print(distances)
</code></pre>
<p>The output gives me 2 arrays but are in different format (or what I understand of different format). </p>
<pre><code>[ 0.  1.  2.  3.  4.  5.  6.  7.]
[0, 1, 2, 3, 4, 5, 6, 7]
</code></pre>
<p>What is the exact different of both arrays and why is the output different?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your second method is pure python and doesn't use any numpy, so the type starts as list (<code>[]</code>) and stays that way, because <code>list.append()</code> also returns a list. It contains integers because that's what you get out of <code>range</code> and nothing in your code changes them.</p>
<p>The first method uses numpy's <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.append.html" rel="nofollow noreferrer"><code>append</code> method</a> that returns an ndarray, which uses floats by default. This also explains why your returned array contains floats.</p>
</div>
<div class="post-text" itemprop="text">
<p>The first code</p>
<pre><code>distances=[]
for i in range (8):
    distances = np.append(distances, (i))
print(distances)
</code></pre>
<p>results in <code>distances</code> being an <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html#numpy-array" rel="nofollow noreferrer"><code>array</code></a> of <a href="https://docs.python.org/3/library/functions.html#float" rel="nofollow noreferrer"><code>float</code></a>s. While the second code</p>
<pre><code>distances=[]
for i in range (8):
    distances.append(i)
print(distances)
</code></pre>
<p>results in <code>distances</code> being a <a href="https://docs.python.org/3/library/stdtypes.html#list" rel="nofollow noreferrer"><code>list</code></a> of <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer"><code>int</code></a>s.</p>
<p><code>arrary</code> is a numpy type (main difference: faster, all items have the same type), while <code>list</code> is python-internal (main difference: works without <code>numpy</code>, can hold any mixed types).</p>
</div>
<div class="post-text" itemprop="text">
<p>The first gives you an <code>numpy.ndarray</code> and is the result of <code>numpy</code> methods, the second produces a <code>list</code> and is a result of <code>list</code> methods. Numpy arrays and Python lists are not the same thing.</p>
<p>Numpy arrays are essentially object-oriented wrappers around fix-sized, typed, true multidimensional arrays. <code>numpy</code> array methods are optimized for vectorized numerical calculations, and along with <code>scipy</code>, provide powerful scientific computing and linear algebra capabilities.</p>
<p>Python <code>list</code> objects are heterogeneous, resizable, array-lists. They are optimized for constant-time <code>.append</code>. Indeed, both of these for-loops will scale very differently. <code>numpy.ndarray.append</code> requires creating an entirely new array each iteration. Python <code>list</code> have amoratized constant time append. Thus, you will see quadratic growth in runtime as the size of your <code>numpy.ndarray</code> scales, whereas with the list, you will see linear scaling. </p>
</div>
<span class="comment-copy">One is a numpy array containing floats, the other is a list of integers</span>
<span class="comment-copy">But why does one contain floats and why integers. And why one is an array and the other one is a list, if I am doing the same thing? And <code>i</code>is the same for both, I do not understand why one would be floats and the other one ints.@DavidG</span>
<span class="comment-copy">Floats are the default type for numpy arrays.</span>
<span class="comment-copy">What do you mean "doing the same thing"? You are not. The first gives you an array and is the result of array methods, the second produces a list and is a result of list methods.</span>
<span class="comment-copy"><code>np.append</code> is a numpy function that is named like the list <code>append</code>, but is a poor replica.  I discourage using it.  It gives beginners too many problems (like 4-5 SO questions in the last couple of days).</span>
<span class="comment-copy">Thank you so much!</span>
