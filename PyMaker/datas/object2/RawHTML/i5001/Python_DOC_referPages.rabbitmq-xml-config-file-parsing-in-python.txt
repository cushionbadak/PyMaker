<div class="post-text" itemprop="text">
<p>I need to parse XML file in my python code. The xml file is as below</p>
<pre><code>&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:rabbit="http://www.springframework.org/schema/rabbit"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
  http://www.springframework.org/schema/rabbit
  http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd"&gt;

&lt;rabbit:connection-factory id="connectionFactory" host="localhost" 
          username="guest" password="guest"/&gt;

&lt;rabbit:admin connection-factory="connectionFactory"/&gt;
&lt;rabbit:queue id ="tpQueue"/&gt;

&lt;rabbit:topic-exchange id="tpExchange" name="tpExchange"&gt;
    &lt;rabbit:bindings&gt;
        &lt;rabbit:binding queue="tpQueue" pattern="tp.routingkey.1"&gt;
        &lt;/rabbit:binding&gt;
    &lt;/rabbit:bindings&gt;
&lt;/rabbit:topic-exchange&gt;

&lt;bean id="asyncListener" class="com.tp.spring_amqp_rabbitmq.SpringAMQPRabbitAyncListener"/&gt;
&lt;rabbit:listener-container id="myListenerContainer" connection-factory="connectionFactory"&gt;
    &lt;rabbit:listener ref="asyncListener" queue-names="tpQueue"/&gt;
&lt;/rabbit:listener-container&gt;

&lt;/beans&gt;
</code></pre>
<p>I need all rabbit tag elements and its values, like , rabbit: queue, rabbit:topic-exchange, etc. Can  you please suggest me an effective method to get this? Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>My first guess would be to use <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree" rel="nofollow noreferrer"><code>xml.ElementTree</code></a>.</p>
<pre><code>import json
from xml.etree import ElementTree

text = '''\
&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:rabbit="http://www.springframework.org/schema/rabbit"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
  http://www.springframework.org/schema/rabbit
  http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd"&gt;

&lt;rabbit:connection-factory id="connectionFactory" host="localhost"
          username="guest" password="guest"/&gt;

&lt;rabbit:admin connection-factory="connectionFactory"/&gt;
&lt;rabbit:queue id ="tpQueue"/&gt;

&lt;rabbit:topic-exchange id="tpExchange" name="tpExchange"&gt;
    &lt;rabbit:bindings&gt;
        &lt;rabbit:binding queue="tpQueue" pattern="tp.routingkey.1"&gt;
        &lt;/rabbit:binding&gt;
    &lt;/rabbit:bindings&gt;
&lt;/rabbit:topic-exchange&gt;

&lt;bean id="asyncListener" class="com.tp.spring_amqp_rabbitmq.SpringAMQPRabbitAyncListener"/&gt;
&lt;rabbit:listener-container id="myListenerContainer" connection-factory="connectionFactory"&gt;
    &lt;rabbit:listener ref="asyncListener" queue-names="tpQueue"/&gt;
&lt;/rabbit:listener-container&gt;

&lt;/beans&gt;
'''

result = {}
root = ElementTree.fromstring(text)

for elem in root.iter():
    if 'rabbit' in elem.tag:
        key = elem.tag[elem.tag.rfind('}') + 1:]
        result[key] = elem.attrib

print(json.dumps(result, indent=4))
</code></pre>
<p>Output:</p>
<pre><code>{
    "connection-factory": {
        "id": "connectionFactory",
        "host": "localhost",
        "username": "guest",
        "password": "guest"
    },
    "admin": {
        "connection-factory": "connectionFactory"
    },
    "queue": {
        "id": "tpQueue"
    },
    "topic-exchange": {
        "id": "tpExchange",
        "name": "tpExchange"
    },
    "bindings": {},
    "binding": {
        "queue": "tpQueue",
        "pattern": "tp.routingkey.1"
    },
    "listener-container": {
        "id": "myListenerContainer",
        "connection-factory": "connectionFactory"
    },
    "listener": {
        "ref": "asyncListener",
        "queue-names": "tpQueue"
    }
}
</code></pre>
</div>
<span class="comment-copy">Could you be more specific on how you want the data structured after parsing? A dict?</span>
<span class="comment-copy">Yes a dict would serve the purpose</span>
<span class="comment-copy">Wow...wonderful..thanku:)</span>
<span class="comment-copy">Is there any way to avoid JSON and use python nested dictionary instead?? Also, is there any other alternative to parse all tags based on the namespace - &lt;rabbit:..&gt; ?</span>
<span class="comment-copy">@megna <code>result</code> is a python dictionary, I only used <code>json.dumps</code> to print the output for the example.</span>
<span class="comment-copy">I mean, it would be nice if there is any way we can parse the xml based on namespaces-  namespaces = {'rabbit': '<a href="http://www.springframework.org/schema/rabbit" rel="nofollow noreferrer">springframework.org/schema/rabbit</a>'}</span>
<span class="comment-copy">Thank you so much:)</span>
