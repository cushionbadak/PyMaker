<div class="post-text" itemprop="text">
<p>I am learning Object-oriented programming through python. I am trying to write a program to write three special methods for a Fraction class that overload operators to perform rich comparisons between a and b. (a &lt; b, a &gt;b, a==b). A sample would be: </p>
<pre><code>&gt;&gt;&gt;a = Fraction(1, 2)
&gt;&gt;&gt;b = Fraction(1, 3)
&gt;&gt;&gt;a==b
False 
&gt;&gt;&gt;a &gt; b
True
&gt;&gt;&gt;a &lt; b
False
&gt;&gt;&gt;a = Fraction(4, 8)
&gt;&gt;&gt;b = Fraction(2, 4)
&gt;&gt;&gt;a ==b
True
&gt;&gt;&gt;a &gt; b
False
&gt;&gt;&gt;a &lt; b
False
</code></pre>
<p>I really do not understand what it is asking to do. Any help on what to do to help get me started would be great. Thank you. </p>
</div>
<div class="post-text" itemprop="text">
<p>Here is simple code to show how this should be as an example.
It is simple in python as it default have <strong>eq</strong>, <strong>ne</strong> ... you only need to change the logical part.</p>
<pre><code>  class Fraction:
        a = 0
        b = 0

        def __init__(self,A,B):
            self.a=A
            self.b=B
        def __eq__(self,other):
            return (self.b/self.a) == (other.b/other.a)

        def __ne__(self,other):
            return not(self.__eq__)

        #*****************************
        # below code only demo, not for your logical
        #*****************************
        def __lt__(self,other):
            return (self.a&lt;other.a)

        def __le__(self,other):
            return(self.a&lt;=other.a)

        def __gt__(self,other):
            return(self.a&gt;other.a)

        def __ge__(self,other):
            return(self.a&gt;=other.a)



    fra_1=Fraction(4,8)
    fra_2=Fraction(2,4)
    print("(fra_1==fra_2) is:",fra_1==fra_2)
</code></pre>
</div>
<span class="comment-copy">Start by looking at the Python <a href="https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types" rel="nofollow noreferrer">data model</a>.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/2400635/comprehensive-guide-to-operator-overloading-in-python">Comprehensive guide to Operator Overloading in Python</a></span>
<span class="comment-copy">Is this homework? And BTW it is not overloading. Python does not support overloading.</span>
<span class="comment-copy">@KlausD. Yes, it is. I'm not asking you to do the whole assignment I am asking what to do to get started.</span>
<span class="comment-copy">Welcome to SO. Unfortunately this isn't a discussion forum or tutorial service. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links on that page.  You should invest some time working your way through <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a>, practicing the examples. It will give you an introduction to the tools Python has to offer and you may even start to get ideas for solving your problem.</span>
