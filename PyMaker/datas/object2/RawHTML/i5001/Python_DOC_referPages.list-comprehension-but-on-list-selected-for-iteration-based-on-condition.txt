<div class="post-text" itemprop="text">
<p>I am having two lists <code>list1</code> and <code>list2</code> as:</p>
<pre><code>list1 = [4, 3, 20, 10]
list2 = ['a', 'f', 'd', 'b']
</code></pre>
<p>I want to create a new list <code>result</code> based on the condition that if my condition <code>num==10</code> is <code>True</code>, then <code>result</code> should be holding the content from <code>list1</code> else it should be holding the content from <code>list2</code>. Below is the code I tried: </p>
<pre><code>num = 10
result = [element for element in list1 if num == 10 else list2]
</code></pre>
<p>But this is raising <code>SyntaxError</code>. How should I achieve this?</p>
<p>Expected output for above code is:</p>
<pre><code>[4, 3, 20, 10]  # stored in `result`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you only want to create a new list <code>result</code> based on your condition <code>num==10</code>, you may simply do <em>(no need of list comprehension)</em>:</p>
<pre><code>&gt;&gt;&gt; result = (list2, list1)[num==10]
&gt;&gt;&gt; result
[4, 3, 20, 10]
</code></pre>
<p>Above result is based on the fact that Python treats boolean value <code>True</code> and <code>False</code> as <code>1</code> and <code>0</code> respectively. So, we are fetching the desired list from tuple based on the condition.</p>
<p><strong>Other alternatives</strong> to perform the same task:</p>
<pre><code># Alternative 1: Using your `if`/`else` logic
result = (list1 if num == 10 else list2)

# Alternative 2: using `and`/`or` logic
result = (num == 10 and list1) or list2
</code></pre>
<p><strong>If list comprehension is must</strong> to use for you (may be to perform some operation on the elements), then you may use <em>list comprehension</em> with any of the above condition as:</p>
<pre><code>&gt;&gt;&gt; num = 10
&gt;&gt;&gt; list1 = [4, 3, 20, 10]
&gt;&gt;&gt; list2 = ['a', 'f', 'd', 'b']

# Using tuple of lists with boolean index
&gt;&gt;&gt; result = [element for element in (list2, list1)[num==10]]
&gt;&gt;&gt; result
[4, 3, 20, 10]

# Using `if`/`else` logic
&gt;&gt;&gt; result = [element for element in (list1 if num == 10 else list2)]
&gt;&gt;&gt; result
[4, 3, 20, 10]

# Using using `and`/`or` logic
&gt;&gt;&gt; result = [element for element in (num == 10 and list1) or list2]
&gt;&gt;&gt; result
[4, 3, 20, 10]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're just missing some parentheses:</p>
<pre><code>result = [element for element in (list1 if num == 10 else list2)]
</code></pre>
<p>A list comprehension can have a filtering condition (<code>comp_if</code> in <a href="https://docs.python.org/3/reference/expressions.html#displays-for-lists-sets-and-dictionaries" rel="nofollow noreferrer">the language reference</a>) as follows:</p>
<pre><code>[a for a in b if c]
</code></pre>
<p>In your current version, <code>list1</code> is <code>b</code> and <code>num == 10</code> is <code>c</code>, but your additional <code>else list2</code> is syntactically invalid. </p>
<p>You need to be explicit that your conditional expression is all part of <code>b</code>, which you can do with parentheses. </p>
</div>
<span class="comment-copy">Why downvote this great answer? Absurd.</span>
<span class="comment-copy">That's it. Thanks a lot</span>
<span class="comment-copy">@Maryam no worries, note <a href="https://stackoverflow.com/help/someone-answers">stackoverflow.com/help/someone-answers</a></span>
