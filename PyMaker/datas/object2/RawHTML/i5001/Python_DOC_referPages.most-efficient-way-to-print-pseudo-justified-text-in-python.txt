<div class="post-text" itemprop="text">
<p>Suppose I have a string s with plenty of words separated by spaces. Now suppose I wanted to print this string spread out across several lines (that is, there should be a newline character periodically in between some of the words) so that each of the lines is approximately equal in number of characters per line (doesn't have to be exactly equal, there could be small variances here and there. What would be the most efficient way of doing this (in both lines of code and running time)? </p>
<p>I realize I could insert a newline character every certain number of characters but this might slit the word in an undesirable way so that is not acceptable. The reason I ask is because I know in Java, strings are immutable and thus building a string one character at a time is O(n^2). Anyone got any clever ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for <a href="https://docs.python.org/3/library/textwrap.html#textwrap.wrap" rel="nofollow noreferrer"><code>textwrap.wrap</code></a>:</p>
<pre><code>textwrap.wrap(text, width=70, **kwargs)
</code></pre>
<blockquote>
<p>Wraps the single paragraph in text (a string) so every line is at most width characters long. Returns a list of output lines, without final newlines.</p>
</blockquote>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import textwrap
&gt;&gt;&gt; textwrap.wrap(s)
['Suppose I have a string s with plenty of words separated by spaces.',
 'Now suppose I wanted to print this string spread out across several',
 'lines (that is, there should be a newline character periodically in',
 'between some of the words) so that each of the lines is approximately',
 "equal in number of characters per line (doesn't have to be exactly",
 'equal, there could be small variances here and there. What would be',
 'the most efficient way of doing this (in both lines of code and',
 'running time)?  I realize I could insert a newline character every',
 'certain number of characters but this might slit the word in an',
 'undesirable way so that is not acceptable. The reason I ask is because',
 'I know in Java, strings are immutable and thus building a string one',
 'character at a time is O(n^2). Anyone got any clever ideas?']
</code></pre>
</div>
<span class="comment-copy">Even in Java, why do you need to build the string one character at a time? You can use substring to get certain length, for example.</span>
<span class="comment-copy">Do you need to write this yourself, or will <a href="https://docs.python.org/3/library/textwrap.html" rel="nofollow noreferrer">the <code>textwrap</code> module's</a> functions (e.g. <code>wrap</code>, <code>fill</code>) do the job?</span>
<span class="comment-copy">@justhalf: I interpreted the OP as saying that a naive approach (that keeps adding characters until reaching a limit, then wrapping, then building again) is wasteful, which it is. That just rules out the completely naive approach, it doesn't say you can't do it more efficiently.</span>
<span class="comment-copy">Thank you! My hero! It's beautiful :')</span>
