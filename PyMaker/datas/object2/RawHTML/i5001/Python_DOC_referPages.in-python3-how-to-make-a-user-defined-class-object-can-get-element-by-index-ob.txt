<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6486387/implement-list-like-index-access-in-python">Implement list-like index access in Python</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>In python, list, string, tuple can be got element by using index (obj[i]), just like C++. In the same way is there any method like override operators to make user-defined class' object be able to get element by using square-bracket []?</p>
<p>For example:</p>
<pre><code>&gt;&gt;&gt;obj = user_class([1,2,4])
&gt;&gt;&gt;obj[0]
1
&gt;&gt;&gt;obj[1]
2
</code></pre>
<p>the way <code>user_class=list</code> or <code>user_class=tuple</code> can't be a solution, because I have to add a series of control code in this this class. And the way that this class work is totally different from list or tuple.</p>
<p>Is there anyone know the solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should implement a <a href="https://docs.python.org/3/reference/datamodel.html#object.__getitem__" rel="nofollow noreferrer"><code>__getitem__</code></a> method in the <code>user_class</code>.</p>
<pre><code>class user_class:
    def __init__(self, lst):
        self.values = lst
    def __getitem__(self, it):
        return self.values[it]
</code></pre>
<p>Or it can be a subclass of some base type like list:</p>
<pre><code>class user_class(list):
    # your control code goes here
    def shout(self):
        print("AAA!")
</code></pre>
</div>
<span class="comment-copy">Add a <a href="https://docs.python.org/3/reference/datamodel.html#object.__getitem__" rel="nofollow noreferrer"><code>__getitem__</code></a> method in the class.</span>
<span class="comment-copy">Use <code>__getitem__</code>, <code>__setitem__</code>, <code>__delitem__</code> magic methods</span>
