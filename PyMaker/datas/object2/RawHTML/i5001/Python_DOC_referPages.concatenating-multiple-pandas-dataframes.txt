<div class="post-text" itemprop="text">
<p>I have a large number of DataFrames with similar prefix <code>df_</code>, that look like:</p>
<pre><code>df_1
df_x
df_ab
.
.
.
df_1a
df_2b
</code></pre>
<p>Of course I can do <code>final_df = pd.concat([df_1, df_x, df_ab, ... df_1a, df_2b], axis = 1)</code></p>
<p>The issue is that although the prefix <code>df_</code> will always be there, the rest of the dataframes' names keep changing and do not have any pattern. So, I have to constantly update the list of dataframes in <code>pd.concat</code> to create the 'final_df`, which is cumbersome. </p>
<p><strong>Question</strong>: is there anyway to tell python to concatenate all defined dataframes in the namespace (only) starting with <code>df_</code> and create the <code>final_df</code> or at least return a list of all such dataframes that I can then manually feed into <code>pd.concat</code>? </p>
</div>
<div class="post-text" itemprop="text">
<p>You could do something like this, using the built-in function <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer"><code>globals()</code></a>:</p>
<pre><code>def concat_all(prefix='df_'):
    dfs = [df for name, df in globals().items() if name.startswith(prefix)
           and isinstance(df, pd.DataFrame)]
    return pd.concat(dfs, axis=1)
</code></pre>
<p>Logic:</p>
<ol>
<li>Filter down your global namespace to DataFrames that start with <code>prefix</code></li>
<li>Put these in a list (concat doesn't take a generator)</li>
<li>Call <code>concat()</code> on the first axis.</li>
</ol>
<p>Example:</p>
<pre><code>import pandas as pd

df_1 = pd.DataFrame([[0, 1], [2, 3]])
df_2 = pd.DataFrame([[4, 5], [6, 7]])
other_df = df_1.copy() * 2  # ignore this
s_1 = pd.Series([1, 2, 3, 4])  # and this

final_df = concat_all()
final_df

   0  1  0  1
0  0  1  4  5
1  2  3  6  7
</code></pre>
<p>Always use <code>globals()</code> with caution.  It gets you a dictionary of the entire module namespace.</p>
<p>You need <code>globals()</code> rather than <code>locals()</code> because the dictionary is being used inside a function.  <code>locals()</code> would be null here at time of use.</p>
</div>
<span class="comment-copy">Perhaps <a href="https://stackoverflow.com/questions/12101958/how-to-keep-track-of-class-instances" title="how to keep track of class instances">stackoverflow.com/questions/12101958/â€¦</a> can help.</span>
<span class="comment-copy">Why are these similarly structured data frames not contained in a list or dict? Please back up and explain how they are created.</span>
<span class="comment-copy">Thanks for the suggestion. But won't that solution still require me to manually declare each dataframe as an instance of a class?</span>
<span class="comment-copy">If all of the dataframes of interest are in a dict or list, then you simply operate on said dict or list.  You don't need to go searching for dataframes of interest...</span>
