<div class="post-text" itemprop="text">
<p>I want to patch the <code>exists()</code> method of a <code>pathlib.Path</code> object for a unit test but I have problems getting this to work.</p>
<p>What I am trying to do is this:</p>
<pre class="lang-py prettyprint-override"><code>from unittest.mock import patch
from pathlib import Path

def test_move_basic():
    p = Path('~/test.py')
    with patch.object(p, 'exists') as mock_exists:
        mock_exists.return_value = True
</code></pre>
<p>But it fails with:</p>
<p><code>AttributeError: 'PosixPath' object attribute 'exists' is read-only</code>.</p>
<p>Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to patch the <em>class</em>, not the instance. It is enough to patch the method on the <code>Path</code> class, as it defines the <code>exists</code> method for the whole of the <code>pathlib</code> library (<code>PosixPath</code>, <code>WindowsPath</code>, <code>PurePosixPath</code> and <code>PureWindowsPath</code> all inherit the implementation):</p>
<pre><code>&gt;&gt;&gt; from unittest.mock import patch
&gt;&gt;&gt; from pathlib import Path
&gt;&gt;&gt; p = Path('~/test.py')
&gt;&gt;&gt; with patch.object(Path, 'exists') as mock_exists:
...     mock_exists.return_value = True
...     p.exists()
...
True
&gt;&gt;&gt; with patch.object(Path, 'exists') as mock_exists:
...     mock_exists.return_value = False
...     p.exists()
...
False
&gt;&gt;&gt; with patch.object(Path, 'exists') as mock_exists:
...     mock_exists.return_value = 'Anything you like, actually'
...     p.exists()
...
'Anything you like, actually'
</code></pre>
<p>The <code>pathlib</code> classes use <a href="https://docs.python.org/3/reference/datamodel.html#slots" rel="nofollow noreferrer"><code>__slots__</code></a> to keep their memory footprint low, which has the side-effect of their instances not supporting arbitrary attribute assignment.</p>
</div>
<span class="comment-copy">Do you need to use a <code>Path</code> object or can you just mock the whole thing?</span>
<span class="comment-copy">I need the <code>Path</code> object...</span>
<span class="comment-copy">Don't patch an instance. Patch <i>classes</i>.</span>
