<div class="post-text" itemprop="text">
<p>The user inputs the following: </p>
<pre><code>3
1 2
1 2 3
1 2 3 4
1 2 3 4 5
</code></pre>
<p>Where each line is a <em>separate</em> input, so the input would have to be read in line by line. </p>
<p>(ex. read '3', then read '1,2...etc.). </p>
<p>How would you then transform the data to be shown in a list like so?: </p>
<pre><code>list1 = [
        [3],
        [1,2],
        [1,2,3],
        [1,2,3,4],
        [1,2,3,4,5]
]
</code></pre>
<p>What I have so far: </p>
<pre><code>def format(): 
    user_input = [] 
    uInput = input() 
    uInput = uInput.replace(" ", "") # Get rid of the spaces in the input
    user_input.append(uInput) # Append values to list
    return user_input
</code></pre>
<p>But this is problematic, as the turn value is returned as a string and I would have to call the function X times to get all the input (row) values. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can break a line of numbers into a list of numbers like:</p>
<h3>Code:</h3>
<pre><code>def split_ints_to_list(data):
    return [int(x) for x in data.split()]
</code></pre>
<p>You can then convert multiple of those, to a list of lists like:</p>
<pre><code>list_of_lists = [split_ints_to_list(line) for line in input_data]
</code></pre>
<p>Both of these use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> to build a list.</p>
<h3>Test Code:</h3>
<pre><code>input_data = [x.strip() for x in """
    3
    1 2
    1 2 3
    1 2 3 4
    1 2 3 4 5
""".split('\n')[1:-1]]
print(input_data)

for line in input_data:
    print(split_ints_to_list(line))

list_of_lists = [split_ints_to_list(line) for line in input_data]
print(list_of_lists)
</code></pre>
<h3>Results:</h3>
<pre><code>['3', '1 2', '1 2 3', '1 2 3 4', '1 2 3 4 5']

[3]
[1, 2]
[1, 2, 3]
[1, 2, 3, 4]
[1, 2, 3, 4, 5]

[[3], [1, 2], [1, 2, 3], [1, 2, 3, 4], [1, 2, 3, 4, 5]]
</code></pre>
</div>
