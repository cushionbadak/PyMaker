<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15112125/how-to-test-multiple-variables-against-a-value">How to test multiple variables against a value?</a>
<span class="question-originals-answer-count">
                    21 answers
                </span>
</li>
</ul>
</div>
<p>I am writing a simple code that should determine the license plates of the car and say if it is of an old or a new type.
The user inputs a string (example: "ABC123" or "1234POW") and the program should return a string with a corresponding value: "New" or "Old"</p>
<p><strong>So, the problem is:</strong></p>
<pre><code>l = input("Enter your license plate: ")
if len(l) == 6:
    if l[0] and l[1] and l[2] in "ABCDEFGHIJKLMNOPQRSTUVWXYZ":
        if l[3]and l[4]and l[5] in "1234567890":
            print("You have a license plate of an old type")
        else:
            print("The plate is not valid. Check your input")
    else:
        print("The plate is not valid. Check your input")
elif len(l) == 7:
    if l[0:4] in "1234567890":
        if l[4:7] in "ABCDEFGHIJKLMNOPQRSTUVWXYZ":
        print("You have a license plate of a new type")
    else:
        print("Your plate is not valid, check your input+")
</code></pre>
<p>else:
    print("This doesn't look like a valid plate number")</p>
<p><strong>Lines 11 and 12</strong>: I have no idea why, but instead of printing the "New Type" message I get "Your plate is not valid, check your input+". </p>
<p>But if I change the line 12 to "if l[4] and l[5] and l[6] in "ABCDEFGHIJKLMNOPQRSTUVWXYZ" - everything works fine.</p>
<p>Would be grateful for explanation, and I beg my pardon, if I posted something or somehow wrong - I'm new here :D
Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>l[4:7]</code> is a string of length 3. So suppose <code>l</code> is <code>"1234POW"</code>, then <code>l[4:7]</code> is <code>"POW"</code>. Your long string <code>"ABCDEFGHIJKLMNOPQRSTUVWXYZ"</code> does <em>not</em> contain the substring <code>"POW"</code>.</p>
<p>If you want to check that every one of a sequence of characters are in your long string, you can use the function <code>all</code>.</p>
<pre><code>if all(ch in "ABCDEFGHIJKLMNOPQRSTUVWXYZ" for ch in l[4:7]):
    ...
</code></pre>
<p>or even just</p>
<pre><code> if l[4:7].isupper():
</code></pre>
<p>You got away with <code>l[0:4] in "1234567890"</code> because <code>"1234"</code> <em>is</em> an exact substring of <code>"1234567890"</code>. If you had different numbers, it would not have worked, for the same reason as above.</p>
<p>Instead you could use:</p>
<pre><code>if l[:4].isdigit() and l[4:7].isupper():
</code></pre>
<hr/>
<p>On the other hand, your upper condition</p>
<pre><code>if l[0] and l[1] and l[2] in "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
</code></pre>
<p>is also wrong. Python understands this as</p>
<pre><code>if (l[0]) and (l[1]) and (l[2] in "ABCDEFGHIJKLMNOPQRSTUVWXYZ")
</code></pre>
<p>i.e.</p>
<pre><code>if l[0] is not zero
   and l[1] is not zero
   and l[2] is in "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
</code></pre>
<p>So your upper condition should also be changed:</p>
<p>e.g.</p>
<pre><code>if l[:3].isupper() and l[3:6].isdigit():
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is typically a regex problem.
<a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html</a></p>
<p>Trye something like this:</p>
<pre><code>import re

new_plate_re = re.compile(r'^\D{3}\d{3}$')
old_plate_re = re.compile(r'^\d{3}\D{3}$')

def check_plate(plate_num):
    match_new = new_plate_re.match(plate_num)
    if match_new is not None:
        print("You have a license plate of a new type")
        return
    match_old = old_plate_re.match(plate_num)
    if match_old is not None:
        print("You have a license plate of a old type")
        return
    print("Unknown format!")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>khelwood's answer is perfectly fine, but here is an alternative just because when you're learning it's often helpful to see several techniques. You could turn those initial characters in the string into a <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer">Python set</a>. The easiest way to build the set is to use a slice as others have said, and then call the <code>set()</code> function. Overall it would look like this:</p>
<pre><code>if set(l[0:3]).issubset("ABCDEFGHIJKLMNOPQRSTUVWXYZ"):
    if set(l[3:6]).issubset("1234567890"):
       # ...
</code></pre>
</div>
<span class="comment-copy"><code>if l[4] and l[5] and l[6] in "ABCDEFGHIJKLMNOPQRSTUVWXYZ"</code> is equivalent to <code>if (bool(l[4])) and (bool(l[5])) and (l[6] in "ABCDEFGHIJKLMNOPQRSTUVWXYZ")</code>.</span>
<span class="comment-copy"><code>and</code> does not work the way you're expecting it to work. You need to individually compare each of the characters yourself</span>
<span class="comment-copy">Also consider using <code>isalpha</code> and <code>isnum</code> <a href="https://docs.python.org/2/library/stdtypes.html#str.isalpha" rel="nofollow noreferrer">docs.python.org/2/library/stdtypes.html#str.isalpha</a></span>
<span class="comment-copy">Please put more effort into your title. It should describe the problem you're having, not be a plea for help.</span>
<span class="comment-copy">Can your license plates have single or double digit numbers? They can in most countries, and your code would declare that to be invalid.</span>
<span class="comment-copy">Thank you very much, khelwood. Now I get it. Cheers!</span>
<span class="comment-copy">This doesn't really explain the question (though the question was badly presented), of why changing line 12 to something else 'worked'.</span>
<span class="comment-copy">You're actually correct, dear sir :-)</span>
<span class="comment-copy">Thank you very much, Athur. Noted</span>
