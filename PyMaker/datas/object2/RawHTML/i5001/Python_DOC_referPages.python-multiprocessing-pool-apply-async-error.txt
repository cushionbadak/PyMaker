<div class="post-text" itemprop="text">
<p>I'm trying to evaluate a number of processes in a multiprocessing pool but keep running into errors and I can't work out why...  There's a simplified version of the code below:</p>
<pre><code>class Object_1():

    def add_godd_spd_column()

        def calculate_correlations(arg1, arg2, arg3):
            return {'a': 1}

        processes = {}
        pool = Pool(processes=6)
        for i in range(1, 10):
            processes[i] = pool.apply_async(calculate_correlations,
                                            args=(arg1, arg2, arg3,))

        correlations = {}
        for i in range(0, 10):
            correlations[i] = processes[i].get()
</code></pre>
<p>This returns the following error:</p>
<pre><code>Traceback (most recent call last):
  File "./02_results.py", line 116, in &lt;module&gt;
    correlations[0] = processes[0].get()
  File "/opt/anaconda3/lib/python3.5/multiprocessing/pool.py", line 608, in get
    raise self._value
  File "/opt/anaconda3/lib/python3.5/multiprocessing/pool.py", line 385, in 
_handle_tasks
    put(task)
  File "/opt/anaconda3/lib/python3.5/multiprocessing/connection.py", line 206, in send
     self._send_bytes(ForkingPickler.dumps(obj))
   File "/opt/anaconda3/lib/python3.5/multiprocessing/reduction.py", line 50, in dumps
    cls(buf, protocol).dump(obj)
AttributeError: Can't pickle local object 'SCADA.add_good_spd_column.&lt;locals&gt;.calculate_correlations
</code></pre>
<p>When I call the following:
    correlations[0].successful()
I get the following error:</p>
<pre><code>Traceback (most recent call last):
  File "./02_results.py", line 116, in &lt;module&gt;
    print(processes[0].successful())
  File "/opt/anaconda3/lib/python3.5/multiprocessing/pool.py", line 595, in 
successful
    assert self.ready()
AssertionError
</code></pre>
<p>Is this because the process isn't actually finished before the .get() is called?  The function being evaluated just returns a dictionary which should definitely be pickle-able...</p>
<p>Cheers,</p>
</div>
<div class="post-text" itemprop="text">
<p>The error is occurring because <a href="https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled" rel="nofollow noreferrer">pickling a function nested in another function is not supported</a>, and <code>multiprocessing.Pool</code> needs to pickle the function you pass as an argument to <code>apply_async</code> in order to execute it in a worker process. You have to move the function to the top level of the module, or make it an instance method of the class. Keep in mind that if you make it an instance method, the instance of the class itself must also be picklable.</p>
<p>And yes, the assertion error when calling <code>successful()</code> occurs because you're calling it before a result is ready. <a href="https://docs.python.org/3.5/library/multiprocessing.html#multiprocessing.pool.AsyncResult.successful" rel="nofollow noreferrer">From the docs</a>:</p>
<blockquote>
<p><strong><code>successful()</code></strong></p>
<p>Return whether the call completed without raising an exception. Will raise <code>AssertionError</code> if the result is not ready.</p>
</blockquote>
</div>
<span class="comment-copy">It's hard to answer this, because your simplified code works fine. It looks like the problem is that the real <code>calculate_correlations</code> function is not pickleable. Where is it really defined? It seems like it's not actually a top-level function, like your example shows.</span>
<span class="comment-copy">The error indicates it's probably a function nested in another function (<code>add_good_spd_column</code>), which <a href="https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled" rel="nofollow noreferrer">pickle doesn't support</a>.</span>
<span class="comment-copy">Yes, it's all nested inside a class structure - will update question!</span>
<span class="comment-copy"><code>Is this because the process isn't actually finished before the .get() is called?</code> No. <code>.get()</code> by default blocks until an item is available (from <a href="https://docs.python.org/2/library/multiprocessing.html#multiprocessing.Queue.get" rel="nofollow noreferrer">docs</a> )</span>
<span class="comment-copy">Thanks dano.  Should have read the documentation properly!</span>
