<div class="post-text" itemprop="text">
<p>I have a list as below:</p>
<pre><code>L = [[0,[1,1.0]],
     [0,[2,0.5]],
     [1,[3,3.0]],
     [2,[1,0.33],
     [2,[4,1.5]]]
</code></pre>
<p>I would like to convert it into a nested dict as below:</p>
<pre><code>D = {0:{1: 1.0,
        2: 0.5},
     1:{3: 3.0},
     2:{1: 0.33,
        4: 1.5}
     }
</code></pre>
<p>I'm not sure how to convert it. Any suggestion? Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>With <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><strong><code>collections.defaultdict([default_factory[, ...]])</code></strong></a> class:</p>
<pre><code>import collections

L = [[0,[1,1.0]],
     [0,[2,0.5]],
     [1,[3,3.0]],
     [2,[1,0.33]],
     [2,[4,1.5]]]

d = collections.defaultdict(dict)
for k, (sub_k, v) in L:
    d[k][sub_k] = v

print(dict(d))
</code></pre>
<p>The output:</p>
<pre><code>{0: {1: 1.0, 2: 0.5}, 1: {3: 3.0}, 2: {1: 0.33, 4: 1.5}}
</code></pre>
<hr/>
<ul>
<li><strong><code>collections.defaultdict(dict)</code></strong> - the first argument provides the initial value for the <code>default_factory</code> attribute; it defaults to <code>None</code>. 
Setting the <code>default_factory</code> to <code>dict</code> makes the <code>defaultdict</code> useful for building a <em>dictionary of dictionaries</em>.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Beginners friendly,</p>
<pre><code>D = {}
for i, _list in L:
    if i not in D:
        D[i] = {_list[0] : _list[1]}
    else:
        D[i][_list[0]] = _list[1]})
</code></pre>
<p>Result:</p>
<pre><code>{0: {1: 1.0, 2: 0.5}, 1: {3: 3.0}, 2: {1: 0.33, 4: 1.5}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertools.groupby</code>:</p>
<pre><code>import itertools
L = [[0,[1,1.0]],
 [0,[2,0.5]],
 [1,[3,3.0]],
 [2,[1,0.33]],
 [2,[4,1.5]]
 ]

new_l = {a:dict([i[-1] for i in b]) for a, b in itertools.groupby(L, key=lambda x:x[0])}
</code></pre>
<p>Output:</p>
<pre><code>{0: {1: 1.0, 2: 0.5}, 1: {3: 3.0}, 2: {1: 0.33, 4: 1.5}}
</code></pre>
</div>
<span class="comment-copy">I tried this <a href="https://docs.python.org/2/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">docs.python.org/2/library/…</a></span>
<span class="comment-copy">I asked a similar question a while ago and got some good answers. <a href="https://stackoverflow.com/questions/45019709/how-to-process-dicts-within-nested-lists-in-an-ordered-manner-with-python" title="how to process dicts within nested lists in an ordered manner with python">stackoverflow.com/questions/45019709/…</a></span>
<span class="comment-copy">use <code>for k, (k2, v) in L: </code></span>
<span class="comment-copy">my mistake I see now @juanpa.arrivillaga</span>
<span class="comment-copy">@juanpa.arrivillaga, let's do it</span>
<span class="comment-copy">It works! thank you</span>
<span class="comment-copy">@MLam, you're welcome</span>
<span class="comment-copy">This isn't bad, but instead of <code>D[i].update({_list[0] : _list[1]})</code> use <code>D[i][_list[0]] = _list[1]</code>. and better yet, use <code>for k, (k2, v) in L: ... </code>D[k][k2] = v`</span>
<span class="comment-copy">Yeah sure. Correct. @juanpa.arrivillaga</span>
<span class="comment-copy">Use <code>.upate</code>  to update the dict with <i>another dynamic dict</i> with many possible entries. You want to update a single key-value pair, don't creat an unecessary intermediate <code>dict</code> to pass to the <code>update</code> method.</span>
<span class="comment-copy">Yeah makes sense.</span>
<span class="comment-copy">It works! Thanks!</span>
<span class="comment-copy">@MLam the other answer to this is better</span>
