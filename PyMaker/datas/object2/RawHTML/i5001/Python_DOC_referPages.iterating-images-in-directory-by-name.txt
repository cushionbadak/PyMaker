<div class="post-text" itemprop="text">
<p>Hopefully this'll be relatively easy to answer as I'm still new to Python.</p>
<p>I need to for-iterate through images of name <strong>[x]img[y]</strong> where x and y are identifiers that determine how the image is processed. x determines process and is valued 1 or 2 and y determines one of the values to be used in processing.</p>
<p>So, in pseudo-code:</p>
<pre><code>directory = 'my/path/to/images'
for image in directory:
    if x = 1:
        do process a with y
    elif x = 2:
        do process b with y
    else: print "ERROR"
</code></pre>
<p>I'm not familiar enough yet with the code and extracting values from strings to piece together the various different examples I've seen around. I get the feeling I should be able to turn the string into an array and read the 1st and 5th values as integers, right?</p>
<p>Your help is very much appreciated and if you'd like to get a better understanding of what I'm trying to accomplish with this project I've made a GitHub repository <a href="https://github.com/AcrimoniousMirth/Project-Adam-3D-SCANNER-CODE" rel="nofollow noreferrer">here</a>.</p>
<p>Many thanks :)</p>
<hr/>
<p><strong>EDIT</strong></p>
<hr/>
<p>Thanks to <em>Ely</em> for getting me this far however that introduced another error. Here's the test code I'm using to open the directory, which contains files <em>1img2.png, 1img4.png</em> and <em>2img1.png</em>.</p>
<pre><code>import os
import re
DIRECTORY = '/home/pi/Desktop/ScannerDev/TestPhotos/'


for img_filename in os.listdir(DIRECTORY):
    x, y = os.path.splitext(img_filename)[0].split('img')
    print 'Camera is ', x
    print 'Image is ', y
"""
for img_filename in os.listdir(DIRECTORY):
    a = re.search('^(.*)img(.*)\.png$', img_filename)
    if a is None:
        break
    else:
        x = a.group(1)
        y = a.group(2)
    print 'Camera is ', x
    print 'Image is ', y
"""
</code></pre>
<p>Which returns:</p>
<pre><code>Camera is  2
Image is  1
Traceback (most recent call last):
  File "iteratorTEST.py", line 10, in &lt;module&gt;
    x, y = os.path.splitext(img_filename)[0].split('img')
ValueError: need more than 1 value to unpack
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer"><code>os.listdir</code></a> for iterating over the image files in the directory:</p>
<pre><code>for img_filename in os.listdir('my/path/to/images'):

    # in case you don't need to worry about anything but 'img'.
    x, y = img_filename.split('img')

    # in case you want to remove .png as in the comments.
    x, y = os.path.splitext(img_filename)[0].split('img')

    # do stuff here
</code></pre>
<p>If you want to enforce your assumption, say of a .png file name, when iterating the directory, you could do this:</p>
<pre><code>raw_files = os.listdir(DIRECTORY)
for img_filename in filter(lambda x: x.endswith('.png'), raw_files):
    ...
</code></pre>
<p>or</p>
<pre><code>for img_filename in [x for x in os.listdir(DIRECTORY) if x.endswith('.png')]:
    ...
</code></pre>
<p>or various other variations of the idea.</p>
<p>Note that you may also want to further post-process the result of <code>x</code> and <code>y</code> above, like converting them to <code>int</code>, or removing any file extension (if present in the file name), and there are various other helper functions in the <code>os</code> module that will help with it.</p>
<p>This solution makes a hard assumption that the files follow your given format exactly, and that the special string <code>img</code> only appears once in the file name, and acts as a perfect separator between the <code>X</code> portion and the <code>Y</code> portion you need. You'll have to do some additional processing if this assumption is not true.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks to <em>ely</em> for the help with this and to the other's who's answers helped and show alternative methods. <strong>I am writing this as a separate answer to give the final solution we came to in its own, clear area</strong>.</p>
<pre><code># To extract operators x and y from file named ximgy.png
# where y may be multiple characters long.
import os
DIRECTORY = '/home/pi/Desktop/ScannerDev/TestPhotos/'

for img_filename in os.listdir(DIRECTORY):
    # This ensure hidden files or others don't cause issues
    if img_filename.endswith(".png"):
        x, y = os.path.splitext(img_filename)[0].split('img')
        print 'Camera is ', x
        print 'Image is ', y
        # DO STUFF HERE
</code></pre>
</div>
<span class="comment-copy">@usr2564301 When my problem is solved I will accept the answer that solved it. If you look closely at my edit you'll see the return code shows a ValueError. That there is the 'remaining problem' :)</span>
<span class="comment-copy">@AcrimoniousMirth Does the test directory have any other kinds of files in it which are being iterated? I created my own test directory with the same image names and directory names you are using. When I copy/paste your code and run it on my laptop, it works with no errors.</span>
<span class="comment-copy">No, which is the odd thing. It's completely empty but for those 3 images. If there was another type of file I'd expect that issue too. I'm going to try renaming all of the images just because that's all I can think of at the moment. <b>EDIT</b> I found the issue. Some hidden folder. I'll have to add a clause to skip if not of that type</span>
<span class="comment-copy">You could also filter out things that don't meet your assumptions, such as <code>for img_filename in filter(lambda x: x.endswith('.png'), os.listdir(DIRECTORY)</code>.</span>
<span class="comment-copy">@ely hahah, I actually got right onto that once I found the hidden files and put that in a separate answer to make it clear. Thanks for all your help :)</span>
<span class="comment-copy">You can also access characters in string as if it was an array by str[index] and in if condition you can compare it to string directly right? like x == '1'</span>
<span class="comment-copy">Yes, you can base your logic on the string-valued result of <code>x</code> if you don't strictly need to perform integer operations on it.</span>
<span class="comment-copy">@ely Thanks for the quick reply! Yes, each image will be    ximgy.png though y will go into multiple digits! The split tool is excellent, I'll give this a shot :)</span>
<span class="comment-copy">@ely so is there a way to remove ".png" when reading before extracting the y value? Or another operator like split?</span>
<span class="comment-copy">you will need a regular expression for that <code>a = re.search('^(.*)img(.*)\.png$', filename) x = a.group(1) y = a.group(2)</code></span>
