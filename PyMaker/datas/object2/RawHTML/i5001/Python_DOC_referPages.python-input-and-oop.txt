<div class="post-text" itemprop="text">
<p>if I want to use input as Variables name in OOP and Classes
how should i do it:</p>
<pre><code>class animal:
    def  __init__(self,name,age):
        self.name = name
        self.age = age
    def display_age(self):
        print("{} Age: {}".format(self.name,self.age))

def create():
    name = input("enter name: ")
    age = input("enter age: ")
    name = animal(name,age)

create()
Ben.display_age()
</code></pre>
<p>output:</p>
<blockquote>
<p>enter name: <strong>Ben</strong></p>
<p>enter age: <strong>12</strong></p>
<p>NameError: name 'Almog' is not defined</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Here's a function that does something similar.  We will store <code>Animal</code> objects inside a dictionary, using the <code>name</code> of each object as its key.</p>
<pre><code>class Animal:
    def  __init__(self,name,age):
        self.name = name
        self.age = age
    def display_age(self):
        print("{} Age: {}".format(self.name,self.age))

def create(storage):
    name = input("enter name: ")
    age = input("enter age: ")
    storage[name] = Animal(name,age)

storage = {}
create(storage)
storage['Ben'].display_age() # If you didn't use Ben as the name, this will fail with a KeyError
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Hope this helps. Here you need to use the object which has been created.</p>
<pre><code>class Animal:
    def  __init__(self,name,age):
        self.name = name
        self.age = age

    def display_age(self):
        print("{} Age: {}".format(self.name,self.age))

def create():
    name = raw_input("enter name: ")
    age = input("enter age: ")
    return Animal(name, age)

a = create()
a.display_age()
</code></pre>
</div>
<span class="comment-copy">You should become familiar with <a href="https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces" rel="nofollow noreferrer">Python scopes and namespaces</a>. <code>create</code> returns nothing, so the <code>name</code> object is simply garbage collected (deleted) at the end of the function.  You can't create a variable named <code>Ben</code> by assigning a variable <code>name</code> the value <code>Ben</code>, then changing that value.</span>
<span class="comment-copy">so how should I perform new item to the class by user inputs?</span>
<span class="comment-copy"><i>"if I want to use input as Variables name"</i> Then you should reconsider and use a dictionary instead.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1373164/how-do-i-create-a-variable-number-of-variables">How do I create a variable number of variables?</a></span>
<span class="comment-copy">You don't mix it that way. That looks odd, to put user interface logic inside classes that have nothing to do with an user interface. You are mixing different concerns. Write your class. Somehow get data from user, and Instantiante an object from  your class with <code>somename = YourClasss(somedata)</code> using that data as arguments to the <code>__init__()</code>. Your <code>Animal</code> is an animal, it does not know anything about mouses clicks or keyboards or <code>input()</code></span>
<span class="comment-copy">But how can the user can display the age (with the func) using inputs?</span>
