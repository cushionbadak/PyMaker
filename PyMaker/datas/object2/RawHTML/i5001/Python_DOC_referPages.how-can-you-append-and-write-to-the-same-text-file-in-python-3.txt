<div class="post-text" itemprop="text">
<p>In one of my games, I need to append to the end of the game saves file if I the user is new or change the balance in the file if the user already has a game save. This requires me to open the file separately in write and append modes. Is there a way I could do this sumultaneously?</p>
<pre><code>def write_to_txt(self):
    if self.saved_game:
        with open("Game Saves.txt", "w") as f:
            new_saved_game = self.list_saved_game[0] + self.list_saved_game[1][:10] + str(self.balance) + "\n"
            f.write(''.join(self.contents_of_txt_file).replace(self.saved_game, new_saved_game))
    else:
        with open("Game Saves.txt", "a") as f:
            f.write("User: {}\nBalance = {}\n".format(self.name, self.balance))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seems to me that you want a way to delete the contents of the file while in append mode? You could open it in append mode and then use the .truncate() method when you want to start writing from a clean file (as you would if you opened it in write mode).</p>
<p>See this answer: <a href="https://stackoverflow.com/questions/2769061/how-to-erase-the-file-contents-of-text-file-in-python">How to erase the file contents of text file in Python?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use something like:</p>
<pre><code>with open("Game Saves.txt", ('a' if self.saved_game else 'w')) as f:
    &lt;rest of the code&gt;
</code></pre>
</div>
<span class="comment-copy">Mode "append" merely means the file pointer is at the end <i>by default</i>. But you can maneuver through a single open file with <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer"><code>file.seek</code></a>.</span>
<span class="comment-copy"><code>f.seek(0)</code> and then <code>f.truncate()</code> worked but <code>f.truncate(0)</code> did not. Why is that?</span>
<span class="comment-copy">Interesting. From the documentation I gather it should do the same ... Ah, <a href="https://stackoverflow.com/q/8945370">here</a> is a relevant earlier discussion.</span>
