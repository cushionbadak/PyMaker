<div class="post-text" itemprop="text">
<blockquote>
<p>How can I find out the file path and correct script containing a particular function or class of a module?</p>
</blockquote>
<hr/>
<p><strong>Example:</strong> Say I want to take  a look at the tkinter source code for <code>tkinter.Button()</code>.</p>
<p>I found where the <code>__init__.py</code> file is located for tkinter using: </p>
<pre><code>&gt;&gt;&gt;import tkinter
&gt;&gt;&gt;tkinter.__file__
'C:\\Users\\Simon\\AppData\\Local\\Programs\\Python\\Python36-32\\lib\\tkinter\\__init__.py'
</code></pre>
<p>I searched through that folder but was unable to locate any function or class named <code>Button</code>.  My guess that it is contained inside the run-times and not a <code>.py</code> file but I am not definite and want to be <em>sure</em> of this.  </p>
<p>I could not find anything useful in the <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">Python documentation special attributes</a> either.</p>
<p><em>Any suggestions are welcome but please note that this post is not set only on the tkinter module but most packages or modules, tkinter just being an example.</em> </p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>tkinter</code> objects are not implemented as Python source code. See the <a href="https://docs.python.org/3/library/tkinter.html" rel="nofollow noreferrer"><code>tkinter</code> documentation</a>:</p>
<blockquote>
<p>The Tk interface is located in a binary module named _tkinter. This module contains the low-level interface to Tk, and should never be used directly by application programmers. It is usually a shared library (or DLL), but might in some cases be statically linked with the Python interpreter.</p>
</blockquote>
<p>See the <a href="https://www.tcl.tk/man/tcl8.5/" rel="nofollow noreferrer">Tcl/Tk documentation</a> the <code>tkinter</code> library documentation links to. The Tcl/Tk documentation in turn links to <a href="https://core.tcl.tk/" rel="nofollow noreferrer">https://core.tcl.tk/</a>, the central hub for development of that project (which is external to Python).</p>
<p>Following links from there you can find the <a href="https://github.com/tcltk/" rel="nofollow noreferrer">GitHub mirror of the project source code</a>, which includes the <a href="https://github.com/tcltk/" rel="nofollow noreferrer">Tk source</a>, where you can find the <a href="https://github.com/tcltk/tk/blob/master/generic/tkButton.c" rel="nofollow noreferrer"><code>tkButton.c</code> source file</a>; this is the core button widget implementation.</p>
<p>There is some <a href="https://github.com/python/cpython/blob/master/Lib/tkinter/__init__.py" rel="nofollow noreferrer">Python code involved as well</a>, but the class definitions there are mostly there to just pass on commands to the native Tk library.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Any suggestions are welcome but please note that this post is not set only on the &gt;tkinter module but most packages or modules, tkinter just being an example.</p>
</blockquote>
<p>This pretty much answers your question (for general cases) <a href="https://stackoverflow.com/questions/697320/how-do-i-get-the-filepath-for-a-class-in-python">How do I get the filepath for a class in Python?</a></p>
<p>One can also see that Class Button(Widget) <em>is</em> defined in the <strong>init</strong>, but this is a wrapper as @Martijn Pieters wrote.</p>
</div>
<span class="comment-copy">Not all classes in Python are implemented in as Python code, some things are implemented in natively compiled extensions. <code>tkinter</code> objects are exposed in Python from a C library called <code>Tk</code>.</span>
<span class="comment-copy">@MartijnPieters  Thank you.  So I would need to look at the C source and not the Python code for the <code>Button()</code> attribute?</span>
<span class="comment-copy">So if I want to look at the <code>Button()</code> class I need to go lower level.  Thank you very much for your detailed post.</span>
<span class="comment-copy">Thank you for your answer, it was helpful to me so I have up-voted it and since it does answer my second question, but have accepted that of @Martijn Pieters because it describes why it is not possible with <code>tkinter</code> and where <code>Button()</code> is actually located.  Thank you once again.</span>
