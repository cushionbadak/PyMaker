<div class="post-text" itemprop="text">
<p>I am trying to make a script that reads the list element sequentially and concatenate them each into regex pattern.</p>
<p>for example, </p>
<p>I have a list like this:</p>
<pre><code>lst = ['B.', 'Article', 'III']
</code></pre>
<p>And want to comprise regex something like this:</p>
<pre><code>re.search(r lst[0]\s+lst[1]\s+lst[2]).group()
</code></pre>
<p>so that it can match below regardless of white_spaces between each elements from the list:</p>
<pre><code>candidate_1 = 'B.      Article III'
candidate_2 = 'B.        Article III'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code></a>, like so:</p>
<pre><code>r'\s+'.join(lst)
</code></pre>
<p>Here is a complete program:</p>
<pre><code>import re

def list2pattern(l):
    return r'\s+'.join(l)

lst = ['B.', 'Article', 'III']
assert re.search(list2pattern(lst), 'B. Article III')
assert re.search(list2pattern(lst), 'B.      Article III')
assert not re.search(list2pattern(lst), 'B.Article III')
assert not re.search(list2pattern(lst), 'George')
</code></pre>
</div>
<span class="comment-copy">Ok. We wish you the best of luck</span>
<span class="comment-copy">@sshashank124 thx I really hope so :D</span>
<span class="comment-copy">What is your question?</span>
<span class="comment-copy">@Robᵩ I don't know how to concatenate r with str. if I do r lst[0]\s+lst[1]\s+lst[2] it reutrns error, and if I do rlst[0]\s+lst[1]\s+lst[2] it also definitely returns error</span>
<span class="comment-copy">jesus.. this man is real..</span>
<span class="comment-copy">thx. I will keep in mind your magical list2pattern func.</span>
<span class="comment-copy">I have more fundamental question. I have tried type(list2pattern(lst)) and it returns str, where my question is then, how the machine distinguish between str and r str if they are all memorized as str?</span>
<span class="comment-copy">@delinco: What are "str" and "r str"? Ah, probably you mean <code>r""</code>: <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">docs.python.org/3/reference/…</a>.</span>
<span class="comment-copy">the r that always added before expressing regex pattern</span>
