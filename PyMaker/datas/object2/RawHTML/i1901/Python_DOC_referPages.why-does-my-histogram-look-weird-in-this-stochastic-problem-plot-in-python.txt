<div class="post-text" itemprop="text">
<p>I am trying to write a stochastic program in Python to replicate a fair dice (one dice) roll, such that this one dice is rolled 100 times. I intend to display the output of the dice rolls as a histogram.</p>
<p>I thought histograms had a specific n shape but this is what I have been getting with the code I used below.</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt
x = []
for i in range(100):
    num1 = random.choice(range(1,7))
    x.append(num1)
plt.hist(x, bins=6)
plt.xlabel('dice')
plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/8sgXU.jpg" rel="nofollow noreferrer">myweirdhistogram</a></p>
<p>Also, is there an easier way to plot a histogram in python when you have, e.g ages as [10,3,5,1] and the frequency in a table as [2,3,4,4]? Do I have to type out the entire frequency of the ages in a list like this: age = [10,10,3,3,3,5,5,5,5,1,1,1,1] before I write the program?
 please see what I mean in the code below:</p>
<pre><code>import numpy as np
import matplotlib.pyplot as plt

plt.close()

ages = [88,88,88,88,76,76,76, 65,65,65,65,65,96,96,52,52,52,52,52,98,98,102,102,102,102]

#the frequency was = [4, 3, 5, 2, 5, 2, 4] which corresponded to the ages [88,76,65,96,52,98,102]

num_bins = 25
n, bins, patches = plt.hist(ages, num_bins, facecolor='blue')

plt.xlabel('age')
plt.ylabel('Frequency of occurence')
plt.show()

#my histogram again looks more like a bar chart. Is this because I used bins as the ages?
</code></pre>
<p>So far, its easier to plot a histogram with random numbers but not a table for me. Here is my second weird output:<a href="https://i.stack.imgur.com/pKAiP.jpg" rel="nofollow noreferrer">mysecondweirdhistogram</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; ages = [10,3,5,1]
&gt;&gt;&gt; freqs = [2,3,4,4]
</code></pre>
<p>Use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a> to pair each age with it's frequency; then use the frequency to add that many to a new container.</p>
<pre><code>&gt;&gt;&gt; q = []
&gt;&gt;&gt; for a, f in zip(ages, freqs):
...     q.extend(a for _ in range(f))

&gt;&gt;&gt; q
[10, 10, 3, 3, 3, 5, 5, 5, 5, 1, 1, 1, 1]
&gt;&gt;&gt;
</code></pre>
<p><code>a for _ in range(f)</code> is a generator expression which will produce <code>f</code> <code>a</code>'s when iterated. The <code>extend</code> method consumes (iterates over) the generator expression. 
 <em>We</em> typically use <code>_</code> for values that we aren't going to use.   </p>
</div>
<span class="comment-copy">Are you making the lists for the ages and frequencies in another part of your code or are they given to you?</span>
<span class="comment-copy">They are given to me already</span>
<span class="comment-copy">Yes but I already have the frequencies. I was wondering how to write a simpler code using the already stated frequencies. Imagine if it was a bigger table of frequencies, I wouldn't want to write it out like I did in the code.</span>
<span class="comment-copy">Sorry, misunderstood your question.  See edit.</span>
