<div class="post-text" itemprop="text">
<p>I have a list of list, the content of which should be read and store in a structured dictionary.</p>
<pre><code>my_list = [
    ['1', 'a1', 'b1'],
    ['',  'a2', 'b2'],
    ['',  'a3', 'b3'],
    ['2', 'c1', 'd1'],
    ['',  'c2', 'd2']]
</code></pre>
<p>The 1st, 2nd, 3rd columns in each row represents <code>'id'</code>, <code>'attr1'</code>, <code>'attr2'</code>. If <code>'id'</code> in a row is not empty, a new object starts with this <code>'id'</code>. In the example above, there are two objects. The object with <code>'id'</code> being <code>'1'</code> has 3 elements in both <code>'attr1'</code> and <code>'attr2'</code>; while the object with <code>'id'</code> being <code>'2'</code> has 2 elements in both <code>'attr1'</code> and <code>'attr2'</code>. In my real application, there can be more objects, and each object can have an arbitrary number of elements.</p>
<p>For this particular example, the outcome should be</p>
<pre><code>my_dict = {
    'id': ['1', '2'],
    'attr1': [['a1', 'a2', 'a3'], ['c1', 'c2']]
    'attr2': [['b1', 'b2', 'b3'], ['d1', 'd2']]
</code></pre>
<p>Could you please show me how to write a generic and efficient code to achieve it?</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Just build the appropriate <code>dict</code> in a loop with the right conditions:</p>
<pre><code>d = {f: [] for f in ('id', 'attr1', 'attr2')}

for id, attr1, attr2 in my_list:
    if id:
        d['id'].append(id)
        d['attr1'].append([])
        d['attr2'].append([])
    d['attr1'][-1].append(attr1)
    d['attr2'][-1].append(attr2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for i in my_list:
    if i[0] is not "":
        my_dict["id"].append(i[0])
        my_dict["attr1"].append([i[1]])
        my_dict["attr2"].append([i[2]])
    else:
        my_dict["attr1"][-1].append(i[1])
        my_dict["attr2"][-1].append(i[2])
</code></pre>
<p>Not very beautiful code, could be a bit more concise.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's one solution using <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a>:</p>
<pre><code>from collections import defaultdict

dd = defaultdict(lambda: defaultdict(list))

for num, attr1, attr2 in my_list:
    if num:
        current_id = num
    dd[current_id]['attr1'].append(attr1)
    dd[current_id]['attr2'].append(attr2)

# defaultdict(&lt;function __main__.&lt;lambda&gt;()&gt;,
#             {'1': defaultdict(list,
#                          {'attr1': ['a1', 'a2', 'a3'],
#                           'attr2': ['b1', 'b2', 'b3']}),
#              '2': defaultdict(list,
#                          {'attr1': ['c1', 'c2'], 'attr2': ['d1', 'd2']})})

attr1, attr2 = ([v[i] for v in dd.values()] for i in ('attr1', 'attr2'))

res = {'id': list(dd), 'attr1': attr1, 'attr2': attr2}

print(res)

{'id': ['1', '2'],
 'attr1': [['a1', 'a2', 'a3'], ['c1', 'c2']],
 'attr2': [['b1', 'b2', 'b3'], ['d1', 'd2']]}
</code></pre>
</div>
