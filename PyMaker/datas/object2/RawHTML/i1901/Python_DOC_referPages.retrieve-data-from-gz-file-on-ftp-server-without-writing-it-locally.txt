<div class="post-text" itemprop="text">
<p>I would like to retrieve the data inside a compressed gz file stored on an FTP server, without writing the file to the local archive.</p>
<p>At the moment I have done</p>
<pre><code>from ftplib import FTP
import gzip

ftp = FTP('ftp.server.com')
ftp.login()  
ftp.cwd('/a/folder/')

fileName = 'aFile.gz'

localfile = open(fileName,'wb')
ftp.retrbinary('RETR '+fileName, localfile.write, 1024)

f = gzip.open(localfile,'rb')
data = f.read()
</code></pre>
<p>This, however, writes the file "localfile" on the current storage.</p>
<p>I tried to change this in</p>
<pre><code>from ftplib import FTP
import zlib

ftp = FTP('ftp.server.com')
ftp.login()  
ftp.cwd('/a/folder/')

fileName = 'aFile.gz'

data = ftp.retrbinary('RETR '+fileName, zlib.decompress, 1024)
</code></pre>
<p>but, <code>ftp.retrbinary</code> does not output the output of its callback.
Is there a way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>A simple implementation is to:</p>
<ul>
<li><p>download the file to an in-memory file-like object, like <a href="https://docs.python.org/3/library/io.html#io.BytesIO" rel="nofollow noreferrer"><code>BytesIO</code></a>;</p></li>
<li><p>pass that to <code>fileobj</code> parameter of <a href="https://docs.python.org/3/library/gzip.html#gzip.GzipFile" rel="nofollow noreferrer"><code>GzipFile</code> constructor</a>.</p></li>
</ul>
<pre><code>import gzip
from io import BytesIO
import shutil
from ftplib import FTP

ftp = FTP('ftp.example.com')
ftp.login('username', 'password')

flo = BytesIO()

ftp.retrbinary('RETR /remote/path/archive.tar.gz', flo.write)

flo.seek(0)

with open('archive.tar', 'wb') as fout, gzip.GzipFile(fileobj = flo) as gzip:
    shutil.copyfileobj(gzip, fout)
</code></pre>
<hr/>
<p>The above loads whole .gz file to a memory. What can be inefficient for large files. A smarter implementation would stream the data instead. But that would probably require implementing a smart custom file-like object.</p>
<p>See also <a href="https://stackoverflow.com/q/53143518/850848">Get files names inside a zip file on FTP server without downloading whole archive</a>.</p>
</div>
<span class="comment-copy">I think you can create a <code>BytesIO</code> object like this <code>pseudofile=BytesIO()</code> then do <code>ftp.retrbinary('RETR '+fileName, pseudofile.write)</code> but have never done it.</span>
