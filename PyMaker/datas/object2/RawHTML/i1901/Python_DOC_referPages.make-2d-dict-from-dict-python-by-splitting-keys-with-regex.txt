<div class="post-text" itemprop="text">
<p>I have a dict that looks like this:</p>
<pre><code>{'word1/AB': 1,
 'word2/AB': 2,
 'word3/CD': 1,
 'word4/EF': 1,
 'word5/GH': 1}
</code></pre>
<p>And I need to end up with a 2D dict that looks like this:</p>
<pre><code>{'word1':{'AB': 1},
 'word2':{'AB': 2},
 'word3':{'CD': 1},
 'word4':{'EF': 1},
 'word5':{'GH': 1}}
</code></pre>
<p>My regex for splitting the key is: <code>"[a-zA-Z]*[^\/]"</code></p>
<p>But I'm absolutely stumped on how to go about making this. I believe I have to loop through the dict, split the key to two strings and construct the new dict using {str1:{str2: original dict value}} but my knowledge on dicts and slicing etc is shabby and I can't put my thought in code.</p>
<p>Could you help in determining what "tools" I need to do this?</p>
<p><strong>Edit:</strong> I had totally forgot about .split(), however this wasn't the most important aspect of the question. Thanks all for reminding me though!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can just split your string on the <code>'/'</code> character, there's no need for regex here.</p>
<pre><code>&gt;&gt;&gt; d = {'word1/AB': 1,
...: 'word2/AB': 2,
...: 'word3/CD': 1,
...: 'word4/EF': 1,
...: 'word5/GH': 1}
...: 
&gt;&gt;&gt; result = {}
&gt;&gt;&gt; for k, v in d.items():
...:     k_outer, k_inner = k.split('/')
...:     result[k_outer] = {k_inner:v}
...:     
&gt;&gt;&gt; result
&gt;&gt;&gt; 
{'word1': {'AB': 1},
 'word2': {'AB': 2},
 'word3': {'CD': 1},
 'word4': {'EF': 1},
 'word5': {'GH': 1}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>str.split</code>:</p>
<pre><code>d = {'word1/AB': 1, 'word2/AB': 2, 'word3/CD': 1, 'word4/EF': 1, 'word5/GH': 1}
new_data = {tuple(a.split('/')):b for a, b in d.items()}
final_result = {a:{b:c} for [a, b], c in new_data.items()}
</code></pre>
<p>Output:</p>
<pre><code>{'word1': {'AB': 1}, 'word2': {'AB': 2}, 'word3': {'CD': 1}, 'word4': {'EF': 1}, 'word5': {'GH': 1}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to split on a regular expression you could use <code>re.split(regex, stringToSplit)</code>:</p>
<pre><code>import re
dict = {'word1/AB': 1, 'word2/AB': 2,'word3/CD': 1,'word4/EF': 1,'word5/GH': 1}
dict2d = {}
for key in dict:
    values = re.split("\/", key);
    dict2d[values[0]] = {values[1]:dict[key]}
print dict2d
</code></pre>
<h2>Output</h2>
<pre><code>{'word5': {'GH': 1}, 'word4': {'EF': 1}, 'word1': {'AB': 1}, 'word3': {'CD': 1}, 'word2': {'AB': 2}}
</code></pre>
<p>However, for what you want to achieve i believe that <code>key.split("\/")</code> would be more than enough</p>
</div>
<div class="post-text" itemprop="text">
<p>You can split keys with str.split('/'). This one-liner will work:</p>
<pre><code>db = {'word1/AB': 1, 'word2/AB': 2, 'word3/CD': 1, 'word4/EF': 1, 'word5/GH': 1}

{ k.split('/')[0]: {k.split('/')[1]: db[k]}  for k in db.keys()}
</code></pre>
</div>
<span class="comment-copy">If you are a beginner in Python you should start with something simpler: <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">docs.python.org/3/tutorial</a></span>
<span class="comment-copy">so what you're doing in is:  create a dict <code>new_data = {tuple("word1","AB"):val}</code>  create a dict <code>final = { word : { ab : v}}</code> looping the new_dict and getting the key tuple as a list, and then setting each element were it's supposed to be. Am I right?</span>
<span class="comment-copy">@GeorgeTsoumis Yes, that is correct.</span>
