<div class="post-text" itemprop="text">
<p>I have a program that reads a file that has student <strong>names</strong>, <strong>IDs</strong>, <strong>majors</strong>, and <strong>GPAs</strong> in it. </p>
<p>For example (there is much more to the file):</p>
<pre><code>OLIVER
8117411
English
2.09
OLIVIA
6478288
Law
3.11
HARRY
5520946
English
1.88
AMELIA
2440501
French
2.93
</code></pre>
<p>I have to figure out:</p>
<ul>
<li>which medicine majors made the honor roll and </li>
<li><strong>the average GPA of all the math majors</strong></li>
</ul>
<p>All I have right now is the list of medicine majors that made honor roll. I have no idea how to start calculating the average GPA of math majors. Any help is appreciated, and thanks in advance.</p>
<p>This is the code I currently have:</p>
<pre><code>import students6

file = open("students.txt")

name = "x"
while name != "":
    name, studentID, major, gpa = students6.readStudents6(file)
    print(name, gpa, major, studentID)

    if major == "Medicine" and gpa &gt; "3.5":
        print("Med student " + name + " made the honor roll.")

    if major == "Math":
</code></pre>
<p>Here is the <strong>students6.py</strong> file that is being imported:</p>
<pre><code>def readStudents6(file):
    name = file.readline().rstrip()
    studentID = file.readline().rstrip()
    major = file.readline().rstrip()
    gpa = file.readline().rstrip()
    return name, studentID, major, gpa
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to represent the data, currently you are returning tuples from reading the file.
Store them in a list, create methods to filter your students on theire major and one that creates the avgGPA of a given student-list. </p>
<p>You might want to make the GPA a float on reading:</p>
<pre><code>with open("s.txt","w") as f:
    f.write("OLIVER\n8117411\nEnglish\n2.09\nOLIVIA\n6478288\nLaw\n3.11\n" + \
            "HARRY\n5520946\nEnglish\n1.88\nAMELIA\n2440501\nFrench\n2.93\n")

def readStudents6(file):
    name = file.readline().rstrip()
    studentID = file.readline().rstrip()
    major = file.readline().rstrip()
    gpa = float(file.readline().rstrip())  # make float
    return name, studentID, major, gpa
</code></pre>
<p>Two new helper methods that work on the returned student-data-tuples:</p>
<pre><code>def filterOnMajor(major,studs):
    """Filters the given list of students (studs) by its 3rd tuple-value. Students
    data is given as (name,ID,major,gpa) tuples inside the list."""
    return [s for s in studs if s[2] == major] # filter on certain major

def avgGpa(studs):
    """Returns the average GPA of all provided students. Students data
    is given as (name,ID,major,gpa) tuples inside the list."""
    return sum( s[3] for s in studs ) / len(studs) # calculate avgGpa
</code></pre>
<p>Main prog:</p>
<pre><code>students = []

with open("s.txt","r") as f:
    while True:
        try: 
            stud = readStudents6(f)
            if stud[0] == "":
                break
            students.append( stud )
        except:
            break


print(students , "\n")

engl = filterOnMajor("English",students)

print(engl, "Agv: ", avgGpa(engl))
</code></pre>
<p>Output:</p>
<pre><code># all students    (reformatted)
[('OLIVER', '8117411', 'English', 2.09), 
 ('OLIVIA', '6478288', 'Law', 3.11), 
 ('HARRY', '5520946', 'English', 1.88), 
 ('AMELIA', '2440501', 'French', 2.93)] 

# english major with avgGPA    (reformatted)
[('OLIVER', '8117411', 'English', 2.09), 
 ('HARRY', '5520946', 'English', 1.88)] Agv:  1.9849999999999999
</code></pre>
<p>See: <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">PyTut: List comprehensions</a> and <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">Built in functions</a> (<code>float</code>, <code>sum</code>)</p>
<hr/>
<pre><code>def prettyPrint(studs):
    for name,id,major,gpa in studs:
        print(f"Student {name} [{id}] with major {major} reached {gpa}")

prettyPrint(engl)
</code></pre>
<p>Output:</p>
<pre><code>Student OLIVER [8117411] with major English reached 2.09
Student HARRY [5520946] with major English reached 1.88
</code></pre>
</div>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation, as suggested when you created this account.  <a href="http://stackoverflow.com/help/on-topic">On topic</a>, <a href="http://stackoverflow.com/help/how-to-ask">how to ask</a>, and <a href="https://codeblog.jonskeet.uk/2010/08/29/writing-the-perfect-question/" rel="nofollow noreferrer">... the perfect question</a> apply here. StackOverflow is not a design, coding, research, or tutorial resource. However, if you follow whatever resources you find on line, make an honest coding attempt, and run into a problem, you'd have a good example to post.</span>
<span class="comment-copy">You've already figured out how to read the file and extract information.  Computing an arithmetic mean is covered well on thousands of sites.  Please describe exactly where you're stuck with this?</span>
<span class="comment-copy">Maybe start with a better data structure for representing the data.</span>
<span class="comment-copy">After extracting the GPAs of math majors from the file (there are about 20 of them), I don't know how to calculate the average of those specific GPAs.</span>
<span class="comment-copy">Unless you show how you are representing the data no one can help</span>
<span class="comment-copy">I had completely forgotten how to filter based on tuple values. This is extremely helpful, thank you so much.</span>
<span class="comment-copy">Is there a way to format the output of "math" so that it comes out in a column?</span>
<span class="comment-copy">@marina what do you mean by "so that it comes out in a column"? you have your major-filtered list of students, simply print it. Or do <code>print( *[s[3] for s in engl], sep="," )</code> to get only the numbers ...</span>
