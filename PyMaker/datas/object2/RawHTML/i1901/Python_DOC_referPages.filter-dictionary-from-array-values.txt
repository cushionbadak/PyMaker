<div class="post-text" itemprop="text">
<p>I have a dictionary which has values as follows:</p>
<pre><code>dictionary = {(10,9): 1, (44,11): 2, (1,1): 99}
</code></pre>
<p>Basically my keys are pairs of integers and the values of each key are just integers.</p>
<p>I have an array which stores a set of keys:</p>
<pre><code>array = [(1,1), (5,19), (58,7)]
</code></pre>
<p>I would like to filter my dictionary to contain only elements which keys are stored in the array. In my case, after filtering the dictionary I would obtain the following:</p>
<pre><code>dictionary = {(1,1): 99}
</code></pre>
<p>since the only key of the dictionary which is stored in the array is <code>(1,1)</code></p>
<p>What would be the most efficient way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do something like this:</p>
<pre><code>dictionary = {(10,9): 1, (44,11): 2, (1,1): 99}
array = [(1,1), (5,19), (58,7)]

result = { k:v for k, v in dictionary.items() if k in array}
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{(1, 1): 99}
</code></pre>
<p>Or even faster, transforming the list into a <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="noreferrer">set</a>:</p>
<pre><code>s = set(array)
result = {k: v for k, v in dictionary.items() if k in s}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could find the set intersection of the dictionary keys and the array tuples, then get your new values in a dict comprehension. This will reduce the complexity of searching for each key in your array:</p>
<pre><code>dictionary = {(10,9): 1, (44,11): 2, (1,1): 99}
array = [(1,1), (5,19), (58,7)]

&gt;&gt;&gt; {i:dictionary[i] for i in set(dictionary.keys()).intersection(array)}
{(1, 1): 99}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a dict-comprehension:</p>
<pre><code>&gt;&gt;&gt; dictionary = {(10,9): 1, (44,11): 2, (1,1): 99}
&gt;&gt;&gt; lst = [(1,1), (5,19), (58,7)]    
&gt;&gt;&gt; d = {k:v for k,v in dictionary.items() if k in lst}
&gt;&gt;&gt; {(1, 1): 99}
</code></pre>
<p>I renamed <code>array</code> to <code>lst</code> because it is a <code>list</code>. We should not confuse lists with <code>numpy</code> arrays, <code>array.array</code> or the <code>bytearray</code> type.</p>
<p>You could also write a traditional <code>for</code> loop if you are not yet comfortable with comprehensions:</p>
<pre><code>&gt;&gt;&gt; d = {}
&gt;&gt;&gt; for key in dictionary:
...:    if key in lst:
...:        d[key] = dictionary[key]
...:        
&gt;&gt;&gt; d
&gt;&gt;&gt; {(1, 1): 99}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about just:</p>
<pre><code>res = {i: dictionary[i] for i in array if i in dictionary}
</code></pre>
<p>This does it in <em>O(n)</em> where <em>n</em> is the number of items in <code>array</code> and doesn't require any additional data structures. </p>
<p>For your <code>dictionary</code> and <code>array</code>, this gives us:</p>
<pre><code>{(1, 1): 99}
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/23862406/filter-items-in-a-python-dictionary-where-keys-contain-a-specific-string">filter items in a python dictionary where keys contain a specific string</a></span>
