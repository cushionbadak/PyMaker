<div class="post-text" itemprop="text">
<p>I'm trying to move some files around on my filesystem. I'd like to use Python 3's Pathlib to do so, in particular, <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.rename" rel="nofollow noreferrer">Path.rename</a>. </p>
<p>Say I want to move <code>Path('/a/b/c/d')</code> to <code>Path('/w/x/y/z')</code>. </p>
<pre><code>Path('/a/b/c/d').rename(Path('/w/x/y/z'))
</code></pre>
<p>gives</p>
<pre><code>FileNotFoundError: [Errno 2] No such file or directory: '/a/b/c/d' -&gt; '/w/x/y/z'
</code></pre>
<p>I can fix this with</p>
<pre><code>os.makedirs(Path('/w/x/y', exist_ok=True)
Path('/a/b/c/d').rename(Path('/w/x/y/z'))
</code></pre>
<p>But that's less elegant than old school <a href="https://docs.python.org/3/library/os.html" rel="nofollow noreferrer">os</a>, which has a method called <a href="https://docs.python.org/3/library/os.html#os.renames" rel="nofollow noreferrer">renames</a> which does this for you. Is there a way to do this in Pathlib? </p>
</div>
<div class="post-text" itemprop="text">
<p>It's not ideal, but something like the following would work</p>
<pre><code>from pathlib import Path

def ensure(path):
    path.parent.mkdir(parents=True, exist_ok=True)
    return path

Path('a/b/c/before.txt').rename(ensure(Path('x/y/z/moved.txt')))
</code></pre>
<p><code>Pathlib.Path.mkdir</code> doesn't return anything, so it seems like some sort of wrapper like this is necessary.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>pathlib.Path.mkdir()</code> is available:</p>
<pre><code>newname = Path('/w/x/y/z')
newname.parent.mkdir(parents=True, exist_ok=True)
Path('/a/b/c/d').rename(newname)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Pathlib.mkdir offers the same parent-creation behavior</p>
<p>Pathlib.rename does not create parents, similar to how rename() does not create parents</p>
</div>
