<div class="post-text" itemprop="text">
<p>I have a dataframe having categorical variables. I want to convert them to the numerical using the following logic:</p>
<p>I have 2 lists one contains the distinct categorical values in the column and the second list contains the values for each category. Now i need to map these values in place of those categorical values.</p>
<p>For Eg:</p>
<p>List_A = ['A','B','C','D','E']</p>
<p>List_B = [3,2,1,1,2]</p>
<p>I need to replace A with 3, B with 2, C and D with 1 and E with 2.</p>
<p>Is there any way to do this in Python.</p>
<p>I can do this by applying multiple for loops but I am looking for some easier way or some direct function if there is any.</p>
<p>Any help is very much appreciated, Thanks in Advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>Create a mapping dict</p>
<pre><code>List_A = ['A','B','C','D','E',]

List_B = [3,2,1,1,2]
d=dict(zip(List_A, List_B))

new_list=['A','B','C','D','E','A','B']
new_mapped_list=[d[v] for v in new_list if v in d]
new_mapped_list
</code></pre>
<p>Or define a function and use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a></p>
<pre><code>List_A = ['A','B','C','D','E',]

List_B = [3,2,1,1,2]

d=dict(zip(List_A, List_B))

def mapper(value):
    if value in d:
        return d[value]
    return None

new_list=['A','B','C','D','E','A','B']
map(mapper,new_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Suppose df is your data frame and "Category" is the name of the column holding your categories:</p>
<pre><code>df[df.Category == "A"] = 3,2, 1, 1, 2
df[(df.Category == "B") | (df.Category == "E") ] = 2
df[(df.Category == "C") | (df.Category == "D") ] = 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you only need to replace values in one list with the values of other and the structure is like the one you say. Two list, same lenght and same position, then you only need this:</p>
<pre><code>list_a = []
list_a = list_b
</code></pre>
<p>A more convoluted solution would be like this, with a function that will create a dictionary that you can use on other lists:</p>
<pre><code># we make a function
def convert_list(ls_a,ls_b):
    dic_new = {}
    for letter,number in zip(ls_a,ls_b):
        dic_new[letter] = number
    return dic_new
</code></pre>
<p>This will make a dictionary with the combinations you need. You pass the two list, then you can use that dictionary on other list:</p>
<pre><code>List_A = ['A','B','C','D','E']
List_B = [3,2,1,1,2]

dic_new = convert_list(ls_a, ls_b)

other_list = ['a','b','c','d']

for _ in other_list:
    print(dic_new[_.upper()])

# prints
3
2
1
1
</code></pre>
<p>cheers</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a solution from machine learning scikit-learn module.</p>
<pre><code>OneHotEncoder

LabelEncoder
</code></pre>
<p><a href="http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OneHotEncoder.html" rel="nofollow noreferrer">http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OneHotEncoder.html</a>
<a href="http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelEncoder.html" rel="nofollow noreferrer">http://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelEncoder.html</a></p>
<p>The pandas "hard" way: </p>
<p><a href="https://stackoverflow.com/a/29330853/9799449">https://stackoverflow.com/a/29330853/9799449</a></p>
</div>
<span class="comment-copy">Thanks mad_ this is really helpful and exactly what I am looking for.</span>
<span class="comment-copy">Thanks shweta24 but this will work if I have only 5-6 categories in my column. But in my dataset there are 000's of categories.</span>
<span class="comment-copy"><code>A</code> equivalent value should be 3 not 1.</span>
<span class="comment-copy">This is not relevant</span>
