<div class="post-text" itemprop="text">
<p>Well, I have a Flask, SQL-Alchemy project. So far, this is my structure:</p>
<pre><code>app
  |__ module1
  |    |__ models.py
  |    |__ views.py
  |__ module2
  |    |__ models.py
  |    |__ views.py
  |__ app.py
  |__ config.py
</code></pre>
<p>On every <code>models.py</code>, I have this:</p>
<pre><code>from app import db

#classes
</code></pre>
<p>On every <code>views.py</code>, I have this:</p>
<pre><code>from module1.models import *
from module2.models import *
from app import app
from flask import session, request, render_template, url_for, redirect
import datetime

#views
</code></pre>
<p>This is my <code>app.py</code> file:</p>
<pre><code>from flask import Flask
from flask_sqlalchemy import SQLAlchemy
import os

app = Flask(__name__)
db = SQLAlchemy(app)

from module1.views import *
from module2.views import *

import config

def init():
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port, debug=True)

if __name__ == "__main__":
    init()
</code></pre>
<p>When I'm on module1.views, and call a model from module2.models, works perfect. But when calling a model from module1.models on module1.views, I get a NameError:</p>
<pre><code>module1.models, module1.views --&gt; Works
module1.models, module2.views --&gt; Works
module2.models, module1.views --&gt; Name Error
module2.models, module2.views --&gt; Works
</code></pre>
<p>Also, the import goes well, no error on that. When I call the class, it fails. I think it's some problem with the imports statements, but I don't know how to fix it. Any ideas?</p>
<p>Thank you guys, in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>You might need an __init__.py file in each of the sub directories <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/modules.html#packages</a>. </p>
<p>There's more info in this answer as well that might be helpful <a href="https://stackoverflow.com/questions/448271/what-is-init-py-for">What is __init__.py for?</a></p>
<p>Also based on the way you are sharing model functionality between views it would probably make more sense to use a directory structure like </p>
<pre><code>.
├── models
│   ├── models1.py
│   └── models2.py
└── views
    ├── view1.py
    └── view2.py
</code></pre>
</div>
<span class="comment-copy">It looks like you might want to be using the <a href="http://flask.pocoo.org/docs/1.0/blueprints/" rel="nofollow noreferrer">blueprint</a> feature</span>
<span class="comment-copy">I just tried this, the documentation says it should be done with an empty <b>init</b>.py file, but it keeps failing. Any idea why?</span>
<span class="comment-copy">can you post the error message?</span>
<span class="comment-copy">This is the error:  <code>NameError: name 'Cita' is not defined</code>, where Cita is the class implemented on module1.models. I'm calling it from module2.views, like <code>Cita.query.all()</code>. Also, when I call it from module1.views, works perfectly fine</span>
<span class="comment-copy">Also, I thought it was because of the names, after reading the <code>__init__.py </code> documentation, so I renamed those files. Still the same error.</span>
<span class="comment-copy">What happens if you try to import it explicitly in module2.views? <code>from module1.models import Cita</code></span>
