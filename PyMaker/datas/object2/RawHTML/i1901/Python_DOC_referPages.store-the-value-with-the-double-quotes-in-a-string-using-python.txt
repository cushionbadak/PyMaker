<div class="post-text" itemprop="text">
<p>as Im new to python,I needed some help with the following:</p>
<p>I am writings a script to count the number of occurance of "|" in a csv file. So I usually get large csv files with text qualifiers and pipe delimiters. Sometimes it happens that few lines gets shifted to a new line. For example:</p>
<pre><code>"a"|"b"|"c"|"D"|"E"
"F"|"G"|"R"|
"T"|"I"
"W"|"Y"|"U"|"IA|SD"|"O"
</code></pre>
<p>In the above example the second line got shifted to new line. So my plan was to write a prog to count the number of times the "|" is occuring in a line and if there is a mismatch in the count then display that line and copy it to another file. Please note as this is a text qualifier file, i need to consider the pipe as well as the double quotes ; I could have counted the number of pipes but then the third line in the above example would also be counted in. The script is:</p>
<pre><code>import string

l='"|"'
k = 0
linecount=0

with open('testfile.txt') as myfile:
    for line in myfile:
        k=0
        linecount=linecount+1
        words = line.split()
        for i in words:
            for letter in i:
                if(letter==l):
                    k=k+1
        print("Occurrences of the letter:",k)
        print(k)
        if(k!=4):
            print(line)
            f = open("Lines_FILE.txt","a")
            f.write(line)
f.close()
</code></pre>
<p>If you notice k is the count but my output is coming to:</p>
<pre><code>Occurrences of the letter: 0
0
"a"|"b"|"c"|"D"|"E"

Occurrences of the letter: 0
0
"F"|"G"|"R"|

Occurrences of the letter: 0
0
"T"|"I"

Occurrences of the letter: 0
0
"W"|"Y"|"U"|"IA|SD"|"O"
</code></pre>
<p>So as you can see the "|" is not getting counted properly. I tried '"'+|+'"' but that did not work. So if I am able to store the value "|" in the l variable i think Ill be able to get my job done. Any suggestions?</p>
<p>If someone can point out the way to store "|" as a whole in a variable that also would be of great help. I don't want a proper fix of the file. Please note the above example is 3 lines which got converted to 4 lines due to the new line thing.</p>
</div>
<div class="post-text" itemprop="text">
<p>you could use the <a href="https://docs.python.org/3/library/csv.html?highlight=csv#module-csv" rel="nofollow noreferrer"><code>csv</code></a> module directly:</p>
<pre><code>from io import StringIO
from csv import reader, writer

txt = '''"a"|"b"|"c"|"D"|"E"
"F"|"G"|"R"|
"T"|"I"
"W"|"Y"|"U"|"IA|SD"|"O"'''

with StringIO(txt) as infile, StringIO() as outfile:
    maxlen = None
    rows = reader(infile, delimiter='|', quotechar='"')
    out_csv = writer(outfile, delimiter='|', quotechar='"')
    for row in rows:
        if maxlen is None:
            maxlen = len(row)
        while len(row) &lt; maxlen:
            row.extend(next(rows))
        # remove empty item
        row = [item for item in row if item != '']
        out_csv.writerow(row)

    print(outfile.getvalue())
</code></pre>
<p>that prints:</p>
<pre><code>a|b|c|D|E
F|G|R|T|I
W|Y|U|"IA|SD"|O
</code></pre>
<p>this assumes that the first row in your input file hast the correct length.</p>
<p>you should the replace the <code>StringIO</code> parts with your real input and output files.</p>
</div>
<div class="post-text" itemprop="text">
<p>To count occurrences of a substring in a string, you don't need to manually loop over 'words' or any other item. In addition, the <code>split</code> function, without any arguments, splits on whitespace only, so that line does nothing useful.</p>
<p>The line</p>
<pre><code>for letter in i:
</code></pre>
<p>does nothing useful either, because <code>i</code> is a string and so this line feeds <em>each separate character</em> into <code>letter</code>. A single character cannot ever be equal to your multi-character string <code>l</code>, which is why your <code>k</code> never increases.</p>
<p>Use the built-in string function <a href="https://docs.python.org/3.7/library/stdtypes.html#str.count" rel="nofollow noreferrer"><code>count</code></a>:</p>
<blockquote>
<p><code>str.count(sub[, start[, end]])</code><br/>
  Return the number of non-overlapping occurrences of substring <code>sub</code> in the range <code>[start, end]</code>. Optional arguments <code>start</code> and <code>end</code> are interpreted as in slice notation.<br/>
  (<a href="https://docs.python.org/3.7/library/stdtypes.html#str.count" rel="nofollow noreferrer">https://docs.python.org/3.7/library/stdtypes.html#str.count</a>)</p>
</blockquote>
<pre><code>l='"|"'
k = 0
linecount=0

with open('testfile.txt') as myfile:
    for line in myfile:
        linecount=linecount+1
        k = line.count(l)
        print("Occurrences of the letter:",k)
        print(k)
        if(k!=4):
            print(line)
            f = open("Lines_FILE.txt","a")
            f.write(line)
f.close()
</code></pre>
<p>Now you get the expected output</p>
<pre><code>Occurrences of the letter: 4
4
Occurrences of the letter: 2
2
"F"|"G"|"R"|

Occurrences of the letter: 1
1
"T"|"I"

Occurrences of the letter: 4
4
</code></pre>
<hr/>
<p>(original answer, obsolete after clarification)</p>
<p><code>split()</code> only splits on whitespace, so you don't get "words". (Also, splitting on something else is not useful, as it throws away the split-on string.)</p>
<p>You can count right away how many times a substring occurs in a certain string (<code>line.count('"|"')</code>) but your split lines end with <code>"|</code> so you only have to test for that:</p>
<pre><code>with open('testfile.txt') as myfile, open("Lines_FILE.txt","w") as outfile:
    while True:
        currline = myfile.readline().strip()
        if not currline:
            break
        if currline.endswith('"|'):
            currline += myfile.readline().strip()
        print currline
        outfile.write (currline)
</code></pre>
<p>Result:</p>
<pre><code>"a"|"b"|"c"|"D"|"E"
"F"|"G"|"R"|"T"|"I"
"W"|"Y"|"U"|"IA|SD"|"O"
</code></pre>
</div>
<span class="comment-copy">yep. that was a mistake. for the line <code>"F"|"G"|"R"|</code> the <code>csv.reader</code> produces the row <code>['F', 'G', 'R', '']</code>. removed that empty <code>str</code> now.</span>
<span class="comment-copy">Please note, that was a small example. The main file will have more that 10 million lines.</span>
<span class="comment-copy">everything here (well except the output file that is in-memory) is lazy and handles one (or slightly more than one) line at the time. not more than a few lines is ever in memory; no matter how big your file is.</span>
<span class="comment-copy">Hi, can you please elaborate on the line.count('"|"'). I actually want to count the number of times the "|" is occuring in each line.</span>
<span class="comment-copy">I ran your script and the output was : "a"|"b"|"c"|"D"|"E""F"|"G"|"R"|"T"|"I""W"|"Y"|"U"|"IA|SD"|"O" Not what i want .. I just need to count the time "|" is occuring in a file.</span>
<span class="comment-copy">@Siddhartha: I have no idea what you want for output, it is not mentioned anywhere in your question. If you only want to <i>count</i> then please make that clear in your question. As said in my answer, you can count how many times <code>"|"</code> occurs in a line with <code>line.count('"|"')</code>. I don't know how to elaborate more than that, it does what it says.</span>
<span class="comment-copy">Oh got it. I just wanted to count the number of times it occurs. I made a mistake while running the line.count. Thank you for the answer. :) Sorry for my mistake.</span>
