<div class="post-text" itemprop="text">
<p>I want to create a SQLite database through the python driver. As the application will run on different operating systems I want to explicitly specify the (default) encoding of text within the SQLite database.</p>
<p>Apparently I can only do this before a database is created with this command <a href="https://www.sqlite.org/pragma.html#pragma_encoding" rel="nofollow noreferrer">(see SQLite docs)</a>:</p>
<pre><code>PRAGMA encoding = "UTF-8";
</code></pre>
<p>My problem is that the Python way to create/connect to a database does not specify (at least to my understanding) a way to set PRAGMAs (such as encoding) before the database is created (<a href="https://docs.python.org/3.7/library/sqlite3.html#connection-objects" rel="nofollow noreferrer">Python docs</a>)</p>
<p>Is there therefore any way to specify the encoding through the python SQlite driver before/while a database is created?</p>
<p>The only workaround I currently see, which seems a bit hacky, is to run Shell commands through python, but since the SQLite CLI is not installed on the machines, this is no option.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can create the database and change the encoding afterwards</p>
<pre><code>&gt;&gt;&gt; import sqlite3
&gt;&gt;&gt; conn = sqlite3.connect('example.db')
&gt;&gt;&gt; c = conn.cursor()
&gt;&gt;&gt; c.execute('pragma encoding')
&lt;sqlite3.Cursor object at 0x7fa641241e30&gt;
&gt;&gt;&gt; rows = c.fetchall()
&gt;&gt;&gt; for row in rows:
...     print(row)
... 
('UTF-8',)
&gt;&gt;&gt; c.execute('pragma encoding=UTF16')
&lt;sqlite3.Cursor object at 0x7fa641241b20&gt;
&gt;&gt;&gt; c.execute('pragma encoding')
&lt;sqlite3.Cursor object at 0x7fa641241e30&gt;
&gt;&gt;&gt; rows = c.fetchall()
&gt;&gt;&gt; for row in rows:
...     print(row)
... 
('UTF-16le',)
</code></pre>
<p>Note that it is required to edit the database to make these changes permanent, eg:</p>
<pre><code>&gt;&gt;&gt; sql_create_projects_table = """ CREATE TABLE IF NOT EXISTS projects (
...                                         id integer PRIMARY KEY,
...                                         name text NOT NULL,
...                                         begin_date text,
...                                         end_date text
...                                     ); """
&gt;&gt;&gt; c.execute(sql_create_projects_table)
&lt;sqlite3.Cursor object at 0x7f441ce90e30&gt;
&gt;&gt;&gt; rows = c.fetchall()
&gt;&gt;&gt; for row in rows:
...     print(row)
...
&gt;&gt;&gt; sql = ''' INSERT INTO projects(name,begin_date,end_date)
...               VALUES(?,?,?) '''
&gt;&gt;&gt; project = ('Cool App with SQLite &amp; Python', '2015-01-01', '2015-01-30');
&gt;&gt;&gt; c.execute(sql, project)
&lt;sqlite3.Cursor object at 0x7f441ce90e30&gt;
</code></pre>
<p>If you do not at least add a table, the encoding will fall back to its default. Hope this helps.</p>
</div>
<span class="comment-copy">The closest I can think of is the <a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.text_factory" rel="nofollow noreferrer"><code>text_factory</code></a> but you would already have created the DB in instantiating a connection. In fact, my suggestion may be less suitable for what you're trying to do, but it's something to look at I guess</span>
<span class="comment-copy">@roganjosh I thought about that, but text factory is a gateway between the application and the database. So I could not control what the database saves (in which encoding) but only how I read the data.... At least if I understood correctly</span>
<span class="comment-copy">They have C API <a href="https://www.sqlite.org/c3ref/open.html" rel="nofollow noreferrer">sqlite.org/c3ref/open.html</a></span>
<span class="comment-copy">From what I can see, <code>PRAGMA encoding</code> is a one-shot, permanent change to the whole database. Connecting to the DB and executing the PRAGMA <i>should</i> do what you're looking for for all subsequent tables. That being the case, it doesn't look like the API has any other provision for it</span>
<span class="comment-copy">No, I'm angling more towards your interpretation now, going to try test some things out</span>
<span class="comment-copy">I can't get it to work: <a href="https://pastebin.com/4Dst51Fd" rel="nofollow noreferrer">pastebin.com/4Dst51Fd</a>. The encoding only holds for a single session and it's just going back to UTF-8. It's already gone back to UTF-8 before I try to change it</span>
<span class="comment-copy">Hi it worked for me, try adding a table and data after this step before closing it</span>
<span class="comment-copy">Close your connection, reestablish it and then see if you get the same result. You run this all in one session.</span>
<span class="comment-copy">Seems to work for me (if I add a table). That seems to make the encoding change permanent. I'll experiment a bit more and will mark the answer accepted if it still works</span>
<span class="comment-copy">@JonathanR Your example works for me and I would mark it as the accepted solution. Could you edit your answer to include the create a table "hack"?</span>
