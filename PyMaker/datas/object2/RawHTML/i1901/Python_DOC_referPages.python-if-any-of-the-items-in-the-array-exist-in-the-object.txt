<div class="post-text" itemprop="text">
<p>I want to check if ANY of the items in the array exist in the given object.</p>
<p>Here is my current code that works:</p>
<pre><code>if "Mod" in [role.name for role in data.roles]:
</code></pre>
<p>but if I do this....</p>
<pre><code>roles = ["Mod", "Admin"]

if any(roles) in [role.name for role in data.roles]:
</code></pre>
<p>It doesn't work.</p>
<p>How can I achieve this? Any help will be appreciated</p>
</div>
<div class="post-text" itemprop="text">
<p>Use set intersection, as in the following <em>toy example</em>:</p>
<pre><code>roles = ["Mod", "Admin"]

if set(roles).intersection(["Mod"]):
        print("match")
</code></pre>
<p><strong>Output</strong></p>
<pre><code>match
</code></pre>
<p>In your example it will be something like this:</p>
<pre><code>if set(roles).intersection([role.name for role in data.roles]):
        do something
</code></pre>
<p>Or if you prefer:</p>
<pre><code>roles = ["Mod", "Admin"]
data_roles = set(role.name for role in data.roles)

if any(role in data_roles for role in roles):
        do something
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Do:</p>
<pre><code>roles = ["Mod", "Admin"]
if any(role in [role.name for role in data.roles] for role in roles):
    do something
</code></pre>
<p>What is it doing?, first of all we have a "role names list" made with the expression <code>[role.name for role in data.roles]</code>. Let's call it <strong><code>data_role_names</code></strong>.
It reduces now to:</p>
<pre><code>roles = ["Mod", "Admin"]
if any(role in data_role_names for role in roles):
    do something
</code></pre>
<p>Then it comes a little of theory about iterables. These are my favourite posts about it: <a href="https://realpython.com/introduction-to-python-generators/" rel="nofollow noreferrer">Introduction to Python Generators</a> and <a href="https://nvie.com/posts/iterators-vs-generators/" rel="nofollow noreferrer">Iterables vs. Iterators vs. Generators</a>.
<code>any()</code> expects an iterable. A generator is "[..] <strong>a special kind of iterator</strong>" is an iterable.</p>
<p>The generator is made by the expression in parenthesis. Just try:</p>
<pre><code>a = (role in data_role_names for role in roles)

print(type(a))
</code></pre>
<p>And it prints:</p>
<pre><code>Python 3.6.1 (default, Dec 2015, 13:05:11)
[GCC 4.8.2] on linux

&lt;class 'generator'&gt;
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">Any()</a> will then:</p>
<blockquote>
<p>Return True if any element of the iterable is true. If the iterable is
  empty, return False</p>
</blockquote>
<p>Which means that for every <code>role</code> listed in <code>roles</code> (in your example <code>roles = ["Mod", "Admin"]</code>) and return <code>true</code> if any of them is belongs to <code>data_role_names</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <code>&amp;</code> instead,</p>
<pre><code>find = 'Mod'
roles = ["Mod", "Admin"]

if set(roles) &amp; {find}: # {} converts 'Mod' to set
    print("match")

# output
# match
</code></pre>
</div>
<span class="comment-copy">Add quotes where they need to be.</span>
<span class="comment-copy">Why is there a <code>role in</code> in the beginning?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">Any</a> expects an iterable. I'm building a <a href="https://www.programiz.com/python-programming/generator" rel="nofollow noreferrer">generator</a> (which are indeed an iterable) with the expression <code>(role in *&lt;list&gt;* for role in roles)</code>. Then, for every element in <code>roles = ["Mod", "Admin"]</code>, <code>any()</code> will check if belongs to the list and return <code>true</code> if any of them are in it.</span>
