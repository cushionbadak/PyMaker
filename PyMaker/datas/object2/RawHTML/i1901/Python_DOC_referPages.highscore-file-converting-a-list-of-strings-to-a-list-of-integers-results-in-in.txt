<div class="post-text" itemprop="text">
<p>So I have been creating a dice game, where to end with there is a name and score which must be stored in a text document. But then the top 5 highscores and names are printed.</p>
<p>Here is my current code:</p>
<pre><code>#input of new score and name
score = input('score: ')
name = input('Name: ')
#storing it
f = open('scores.txt','a+')
f.write(score)
f.write(',')
f.write(name)
f.write(',')
f.close()
#reading the file with , as a split so forming a list
f = open('scores.txt','r')
content = f.readline()
data = content.split(",")
#extracting the numbers from the original list
numdata = data[::2]
#converting the numbers from a string to an int
for i in range(len(numdata)):
    numdata[i] = int(numdata[i])
#ordering the numbers
numdata = map(int, numdata)
numdata = sorted(numdata, reverse=True)

#then some test prints of the first 5 scores
#i will add the names back to the scores after i have sorted this list issue

f.close()
</code></pre>
<p>So I have stored the score and name, splitting all values with a comma. I have successfully read it from the txt file and extracted the numbers from the original list, into a new one - to then order - however when trying to oder, it orders the numbers as strings, so I edited my code so it ordered as integers. But this is when the problems came, the list was a list of strings to it could not be ordered as ints. So i used</p>
<pre><code>for i in range(len(numdata)):
    numdata[i] = int(numdata[i])
</code></pre>
<p>However this isnt working either, and is giving me the same error code as without it.
this is the error (I have searched how to correct it but nothing i have tried has worked)</p>
<pre><code>invalid literal for int() with base 10: ''
</code></pre>
<p>Was wondering if anyone knew  how to resolve the issue.</p>
</div>
<div class="post-text" itemprop="text">
<p>You might want to switch to better style of writing files using <code>with open(...):</code>. Your error stems from a non-empty piece of line after the last , that you could <code>.strip()</code>.</p>
<p>Maybe read about the csv-module and create a csv-style highscore - file:</p>
<ul>
<li><a href="https://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow noreferrer">https://docs.python.org/3/library/csv.html#csv.writer</a></li>
<li><a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow noreferrer">https://docs.python.org/3/library/csv.html#csv.reader</a></li>
</ul>
<hr/>
<pre><code>import csv
filename = "scores.txt"

def sortScores(s):
    return sorted(s, key = lambda x: x[1], reverse=True)

# write values
def writeScores(fn,s):
    with open(fn,"w",newline="") as f:
        csvwriter=csv.writer(f)
        # sort highest first
        for name,points in sortScores(s):
            csvwriter.writerow([name,str(points)])

# restore values
def readScores(fn): 
    scores_from_file = []
    with open(fn,"r",newline="") as f:
        csvreader=csv.reader(f)
        for row in csvreader:
            scores_from_file.append( (row[0],int(row[1])) )
    return scores_from_file

# game internal data-structure as list of tuples to enable identical names
scores= [("Egon",243), ("Phil",42), ("Angus",999)]

writeScores(filename,scores)

# print file content
with open(filename,"r") as f:
    print(f.read())

scores_from_file = readScores(filename)   

print(scores_from_file)
</code></pre>
<p>Filecontent after writing:</p>
<pre><code>Angus,999
Egon,243
Phil,42
</code></pre>
<p>Content of <code>scores_from_file</code> after reading (its sorted due to sorted write):</p>
<pre><code>[('Angus', 999), ('Egon', 243), ('Phil', 42)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could create a new list with integers, skipping empty strings:</p>
<pre><code>numdata = [
   int(e)
   for e in numdata
   if len(e.strip()) &gt; 0]
</code></pre>
<p>This could work instead of the forloop that you use.</p>
<p>Note: the new <code>numdata</code> list will be shorter because it skips empty strings.</p>
</div>
<div class="post-text" itemprop="text">
<p>The simplest fix to this could be to not have a ' after the last score name pair:</p>
<pre><code>#input of new score and name
score = input('score: ')
name = input('Name: ')
#storing it
f = open('scores.txt','a+')
f.write(score)
f.write(',')
f.write(name)
#Get rid of this.
f.close()
</code></pre>
<p>The error you are getting occurs when you try to convert a num-numerical string into a int. Something like '.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>#By changing
f.write(score)
f.write(',')
f.write(name)
f.write(',')
f.close()
#To
f.write(',')
f.write(score)
f.write(',')
f.write(name)
f.close()
</code></pre>
<p>The code now works, as the final , of the txt line was causing it to be identified as a blank str- interfering with the integers extracted. Although this may cause a new issue if the text document is rest- it works for now. Thanks all</p>
</div>
<div class="post-text" itemprop="text">
<p>Just replace <code>data[::2]</code> with <code>data[:-1:2]</code></p>
<p>This is because <code>content.split(",")</code> is creating an empty string in the last element of <code>data</code> list</p>
</div>
<div class="post-text" itemprop="text">
<p>I think that this issue is possibly caused by this row:</p>
<pre><code>numdata = data[::2]
</code></pre>
<p>According to that line, you are iterating over the list, picking only the odd indices from it.
Lets take the following example:</p>
<pre><code> data = 'Foo,5,'
 print(data.split(','))
 &gt;&gt; ['Foo', '5', '']
</code></pre>
<p>According to your logic, you are picking first and third elements from the list. As you see, the third value is empty string, hence it cannot be cast to int.
You can use:</p>
<pre><code>numdata = data[:2]
</code></pre>
<p>as it will return the first two values in the newly created list, or alternatively you can change the following lines:</p>
<pre><code>data = content.split(",")
#extracting the numbers from the original list
numdata = data[::2]
</code></pre>
<p>with:</p>
<pre><code>numdata = [value.strip() for value in data.split(',') if value is not '']
</code></pre>
<p>This comprehension will return a list with all the strings that are not empty.</p>
<p>After that you can make pairs from each name/score like this:</p>
<pre><code>data = list(zip(numdata[0::2], numdata[1::2]))
</code></pre>
<p>And sort it as follows:</p>
<pre><code>data_cleaned = sorted(data, key =lambda x: x[1])
</code></pre>
<p>Below you can find an example to see how it works:</p>
<pre><code>data = 'Foo, 5, Bar, 1, Baz, 9'  # Simulating string read from text file
# Get and strip all data from the input string.
numdata = [value.strip() for value in data.split(',') if value is not '']
# Create pair from each name/score
data = list(zip(numdata[0::2], numdata[1::2]))
# Sort by score
data_cleaned = sorted(data, key =lambda x: x[1])
print(data_cleaned)

&gt;&gt;Output: [('Bar', '1'), ('Foo', '5'), ('Baz', '9')]
</code></pre>
<p>Note that the code above sorts the pairs by the score value, even if the scores are strings.
Also if it's important for you to have the scores as integers you add the following line after the sorting:</p>
<pre><code>data_cleaned = [[ pair[0], int(pair[1]) ] for pair in data_cleaned]

&gt;&gt;Output: [['Bar', 1], ['Foo', 5], ['Baz', 9]]
</code></pre>
<p>Hope that this helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>You are seperating score and value with ',' and also seperating different entries with comma.
Then your input will store into text file like this.  </p>
<p><code>34,one,56,two,44,three,55,four,67,five,65,six,</code></p>
<p>At the end ',' will also store after each entry.
When you used split function it will create an empty string as last element which can't be converted into string.
So in the code change</p>
<pre><code>#extracting the numbers from the original list
numdata = data[:-1:2]
</code></pre>
</div>
<span class="comment-copy">That error suggests that you're not getting the integers from your text file correctly. Make sure you're correctly reading and parsing the line first.</span>
<span class="comment-copy">@Daddy What output do you get when calling <code>print(numdata)</code> before the for-loop?</span>
<span class="comment-copy">@ralf it prints all the scores from the txt file (as a list of strings), skipping the names as it creates a new list made of every even nth term of the [data] list, eg data[0] data[2] data[4] and so on</span>
<span class="comment-copy">Simple, remove the last <code>f.write(',')</code> before <code>f.close()</code>. You only need one separator comma, the trailing comma is causing you to get a blank string at the end of <code>data</code></span>
<span class="comment-copy">@Daddy Is there any empty string in that list? Because the error suggests that</span>
<span class="comment-copy">I shall try it, thankyou</span>
<span class="comment-copy">Yes this was the problem</span>
<span class="comment-copy">By correcting this it now works</span>
