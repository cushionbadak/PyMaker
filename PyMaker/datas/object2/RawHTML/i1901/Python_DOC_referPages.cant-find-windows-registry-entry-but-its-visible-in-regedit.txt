<div class="post-text" itemprop="text">
<p>I'm searching for an uninstall string for a specific publisher to automate uninstalling some software.  I can see the entry in regedit. I'm searching both the 64 bit and 32 bit registry views as can be seen in my code.  I can see the application in Add or Remove Programs.  The software is published by Environmental Research Systems Institute, Inc.  I've searched all over and can't figure out why I can't find this key with my code. Any help would be appreciated.  In the function <code>getUninstallers</code> there is an if statement commented out in the first try block that has the actual key name I'm trying to find.  Below the code I've included a screenshot of regedit with the key visible.</p>
<pre><code>import winreg 
aKeyName = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall"
bKeyName = "SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall"

def getUninstallers(keyName, bitView):
    if ( bitView == 32 ):
        key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, keyName, 0,
                (winreg.KEY_WOW64_32KEY + winreg.KEY_READ))
    elif ( bitView == 64 ):
        key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, keyName, 0,
                (winreg.KEY_WOW64_64KEY + winreg.KEY_READ))
    subKeyIndex = 0
    subkeys = list()
    while True:
        try:
            subKeyName = winreg.EnumKey(key,subKeyIndex)
            #if(subKeyName.count(r'{D43E583A-A698-4227-8F83-3084172F12F0}') &gt; 0):
            #    print(subKeyName)
            subKey = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, keyName +
                        "\\" + subKeyName)
            valueIndex = 0
            subKeyList = list()
            while True:
                try:
                    aValue = winreg.EnumValue(subKey,valueIndex)
                    if(aValue[0] == 'Publisher' or 
                       aValue[0] == 'UninstallString'):
                        subKeyList.append(aValue)
                    valueIndex+=1
                except OSError:#[WinError 259] No more data is available
                    #These errors are supposed to happen, see winreg 
                    #documentation at docs.python.org/3/library/winreg.html
                    break
            if(len(subKeyList) &gt; 0):
                subkeys.append(subKeyList)
            subKeyIndex += 1
        except OSError:#[WinError 259] No more data is available
            #These errors are supposed to happen, see winreg documentation
            #at docs.python.org/3/library/winreg.html
            break
    return subkeys

def getUninstallersByPublisher(publisher):
    theKeys = [getUninstallers(aKeyName, 32), 
               getUninstallers(bKeyName, 32), 
               getUninstallers(aKeyName, 64), 
               getUninstallers(bKeyName, 64)]
    uninstallers = list()
    for aKey in theKeys:
        for subKey in aKey:
            for aValue in subKey:
                for aString in aValue:
                    if(str(aString).count(publisher) &gt; 0):
                        print("Found key for publisher: " + publisher)
                        for someValue in subKey:
                            for someString in someValue:
                                if(str(someString).count("Uninstall") &gt; 0):
                                    try:
                                        print("Found UninstallString: " +
                                            someValue[1])
                                        uninstallers.append(someValue[1])
                                    except Exception as e:
                                        print("exception: " + str(e))
    # Delete duplicates in list                                        
    uninstallers = list(set(uninstallers))
    return uninstallers


print(getUninstallersByPublisher(
        "Environmental Systems Research Institute, Inc."))
</code></pre>
<p><a href="https://i.stack.imgur.com/gbFJs.png" rel="nofollow noreferrer">Picture of regedit with the key visible</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import winreg
aKeyName = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall"

def getUninstallers(keyName, bitView):
    if ( bitView == 32 ):
        key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, keyName, 0,
         access=(winreg.KEY_WOW64_32KEY | winreg.KEY_READ))
    elif ( bitView == 64 ):
        key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, keyName, 0,
         access=(winreg.KEY_WOW64_64KEY | winreg.KEY_READ))
    subKeyIndex = 0
    subkeys = list()
    while True:
        try:
            subKeyName = winreg.EnumKey(key,subKeyIndex)
            if( bitView == 32 ):
                subKey = winreg.OpenKey(key, subKeyName, 0,
                  access=(winreg.KEY_WOW64_32KEY | winreg.KEY_READ))
            elif( bitView == 64 ):
                subKey = winreg.OpenKey(key, subKeyName, 0,
                  access=(winreg.KEY_WOW64_64KEY | winreg.KEY_READ))
            valueIndex = 0
            subKeyList = list()
            while True:
                try:
                    aValue = winreg.EnumValue(subKey,valueIndex)
                    if(aValue[0] == 'Publisher' or aValue[0] == 'UninstallString'):
                        subKeyList.append(aValue)
                    valueIndex+=1
                except OSError as e:#[WinError 259] No more data is available
                    # These errors are supposed to happen, see winreg documentation
                    # at docs.python.org/3/library/winreg.html
                    if str(e).count('WinError 259') is 0:
                        print("OSError 1: " + str(e) + "\r" + subKeyName)
                    break
            if(len(subKeyList) &gt; 0):
                subkeys.append(subKeyList)
            subKeyIndex += 1
        except OSError as e:#[WinError 259] No more data is available
            # These errors are supposed to happen, see winreg documentation
            # at docs.python.org/3/library/winreg.html
            if str(e).count('WinError 259') is 0:
                print("OSError 2: " + str(e) + "\r" + subKeyName)
            break
    return subkeys

def getUninstallersByPublisher(publisher):
    theKeys = [getUninstallers(aKeyName, 32), getUninstallers(aKeyName, 64)]
    uninstallers = list()
    for aKey in theKeys:
        for subKey in aKey:
            for aValue in subKey:
                for aString in aValue:
                    if(str(aString).count(publisher) &gt; 0):
                        print("Found key for publisher: " + publisher)
                        for someValue in subKey:
                            for someString in someValue:
                                if(str(someString).count("Uninstall") &gt; 0):
                                    try:
                                        print("Found UninstallString: " + someValue[1])
                                        uninstallers.append(someValue[1])
                                    except Exception as e:
                                        print("exception: " + str(e))
    # Delete duplicates in list                                        
    uninstallers = list(set(uninstallers))
    return uninstallers

somePublisher = "Microsoft Corporation"
print(getUninstallersByPublisher(somePublisher))
</code></pre>
</div>
<span class="comment-copy">Question has been asked a bazillion times. Search for registry redirector.</span>
<span class="comment-copy">In the second open, you've mistakenly used a path that's relative to a pseudo-handle for the "\Registry\Machine" key (i.e. HKLM) without the required <code>KEY_WOW64_32KEY</code> or <code>KEY_WOW64_64KEY</code> flag. It should be relative to the parent Key, e.g. <code>subKey = winreg.OpenKey(key, subKeyName)</code>.</span>
<span class="comment-copy">Also, remove <code>bKeyName</code> and all references to it. Don't use the "Wow6432Node" key directly. That's an implementation detail of the API, for which you're already using the above-mentioned flags.</span>
<span class="comment-copy">@eryksun thanks for the tips, working code below.</span>
<span class="comment-copy">Again, the inner <code>OpenKey</code> should use the outer <code>key</code> handle with a relative subkey path, e.g. <code>winreg.OpenKey(key, subKeyName, 0, access=(winreg.KEY_WOW64_64KEY | winreg.KEY_READ))</code>.</span>
<span class="comment-copy">Note that flags should be combined with a bitwise OR, not addition. This matters especially when enabling a flag in a variable in which it may already be enabled (e.g. right: <code>1 | 1</code>. wrong: <code>1 + 1</code>).</span>
<span class="comment-copy">@eryksun edited and tested, thank you again.  REALLY appreciate the help!</span>
