<div class="post-text" itemprop="text">
<p>I have a dictionary like this:</p>
<pre><code>d = {('a','b','c'):4, ('e','f','g'):6}
</code></pre>
<p>and I would like to have a set of tuples like this:</p>
<pre><code>{('a', 'b', 'c', 4), ('e', 'f', 'g', 6)}
</code></pre>
<p>I've tried in this way:</p>
<pre><code>b = set(zip(d.keys(), d.values()))
</code></pre>
<p>But the output is this:</p>
<pre><code>set([(('a', 'b', 'c'), 4), (('e', 'f', 'g'), 6)])
</code></pre>
<p>How can i solve that? Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't want to zip the keys with the values, you want to concatenate them:</p>
<pre><code>&gt;&gt;&gt; {k + (v,) for k, v in d.items()}
{('a', 'b', 'c', 4), ('e', 'f', 'g', 6)}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python &gt;= 3.5, you can use <a href="https://docs.python.org/3/whatsnew/3.5.html#pep-448-additional-unpacking-generalizations" rel="nofollow noreferrer">generalized unpacking</a> in this <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">set comprehension</a>:</p>
<pre><code>{(*k, v) for k, v in d.items()}
# {('a', 'b', 'c', 4), ('e', 'f', 'g', 6)}
</code></pre>
<p>But the more universally applicable <code>tuple</code> concatenation approach as <a href="https://stackoverflow.com/questions/52964027/convert-dictionary-with-tuples-as-keys-to-tuples-that-contain-keys-and-value/#answer-52964061">suggested by Aran-Fey</a> is not significantly more verbose:</p>
<pre><code>{k + (v,) for k, v in d.items()}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a set comprehension to iterate over the key, value pairs, and then create new tuples from the exploded (unpacked) key and the value:</p>
<pre><code>&gt;&gt;&gt; {(*k, v) for k, v in d.items()}
{('e', 'f', 'g', 6), ('a', 'b', 'c', 4)}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or try <code>map</code>:</p>
<pre><code>print(set(map(lambda k: k[0]+(k[1],),d.items())))
</code></pre>
<p>Or (python 3.5 up):</p>
<pre><code>print(set(map(lambda k: (*k[0],k[1]),d.items())))
</code></pre>
</div>
