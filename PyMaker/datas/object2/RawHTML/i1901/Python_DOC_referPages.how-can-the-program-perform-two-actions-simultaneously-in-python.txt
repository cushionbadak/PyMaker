<div class="post-text" itemprop="text">
<p>I wish to make a program that will print numbers from <code>0</code> to <code>x</code>, and simultaneously count time, and both execute simultaneously in console. How can I do that? </p>
<p>For example, I want to make program wich will count time while the computer writes numbers from <code>0</code> to <code>x</code>: </p>
<pre><code>import time
import sys

time_counter = 0
number = int(input("NUMBER: "))
counter = 0

while (counter &lt; number):
    sys.stdout.write("NUMBERS: " + str(counter) + '\r')
    counter += 1

sys.stdout.write('\n')
while (counter &lt; number):
    sys.stdout.write("TIME COUNTER: " + str(time_counter) + '\r')
    time.sleep(1)
    time_counter += 1
</code></pre>
<p>I want to these two <code>while</code> code blocks to execute simultaneously.</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, I'm not exactly clear on what you are trying to achieve (the general purpose of the code).</p>
<p>But for the specific code question, you could try it with a single <code>while</code> loop, maybe like this:</p>
<pre><code>import time

stop_number = int(input("NUMBER: "))

num_counter = 0
time_counter = 0

while num_counter &lt; stop_number:
    print(num_counter, time_counter)

    time.sleep(1)

    num_counter += 1
    time_counter += 1
</code></pre>
<hr/>
<p>I don't know how to easily print on two different lines in the terminal, so my code just prints on the same line, one line per iteration. If you want to go into that, have a look at <a href="https://stackoverflow.com/a/6840469/9225671">this answer</a> and other similar ones.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to measure the time it takes to print the number, you can try the <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow noreferrer"><code>timeit</code> module</a>:</p>
<pre><code>import timeit

def f1(stop_number):
    num_counter = 0

    print('Numbers:')
    while num_counter &lt; stop_number:
        print(num_counter, end=' ', flush=True)
        num_counter += 1
    print()

if __name__ == '__main__':
    stop_number = int(input("NUMBER: "))

    t = timeit.timeit(
        stmt='f1({})'.format(stop_number),
        setup='from __main__ import f1',
        number=1000)
    print()
    print('The statement took in average {} seconds to run.'.format(t))
</code></pre>
<p>Or if you want, you can also measure the time difference using <a href="https://docs.python.org/3/library/time.html#time.perf_counter" rel="nofollow noreferrer"><code>time.perf_counter()</code></a>:</p>
<pre><code>import time

stop_number = int(input("NUMBER: "))

start_time = time.perf_counter()

num_counter = 0
while num_counter &lt; stop_number:
    print(num_counter)
    num_counter += 1

end_time = time.perf_counter()
print('The code took {} seconds to run.'.format(end_time - start_time))
</code></pre>
<hr/>
<p>Note that printing output consumes a lot of time; just the iteration without printing will take a lot less time.</p>
</div>
<span class="comment-copy">You should combine both loops into one.  Just move everything under the second while loop into the first</span>
<span class="comment-copy">How should the output look like?</span>
<span class="comment-copy">You could probably do it using <a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer">threading</a>, using a lock so you don't interleave output. But I'm not clear on how you want this to work.</span>
<span class="comment-copy">I want to build a program that measures the time the computer writes numbers from 0 to 10,000.</span>
<span class="comment-copy">@AlyosaDimitriyev if you want to measure the time, do you need to use <code>time.sleep()</code> in there? That will distort the measurement drastically.</span>
