<div class="post-text" itemprop="text">
<p>I am working in <code>$AIRFLOW_HOME/dags</code>. I have created the following files:</p>
<pre><code>- common
  |- __init__.py   # empty
  |- common.py     # common code
- foo_v1.py        # dag instanciation
</code></pre>
<p>In <code>common.py</code>:</p>
<pre><code>default_args = ...

def create_dag(project, version):
  dag_id = project + '_' + version
  dag = DAG(dag_id, default_args=default_args, schedule_interval='*/10 * * * *', catchup=False)
  print('creating DAG ' + dag_id)

  t1 = BashOperator(
    task_id='print_date',
    bash_command='date',
    dag=dag)

  t2 = BashOperator(
    task_id='sleep',
    bash_command='sleep 5',
    retries=3,
    dag=dag)

  t2.set_upstream(t1)
</code></pre>
<p>In <code>foo_v1.py</code>:</p>
<pre><code> from common.common import create_dag

 create_dag('foo', 'v1')
</code></pre>
<p>When testing the script with python, it looks OK:</p>
<pre><code> $ python foo_v1.py
 [2018-10-29 17:08:37,016] {__init__.py:57} INFO - Using executor SequentialExecutor
 creating DAG pgrandjean_pgrandjean_spark2.1.0_hadoop2.6.0
</code></pre>
<p>I then launch the webserver and the scheduler locally. My problem is that I don't see any DAG with id <code>foo_v1</code>. There is no <code>pyc</code> file being created. What is being done wrong? Why isn't the code in <code>foo_v1.py</code> being executed?</p>
</div>
<div class="post-text" itemprop="text">
<p>To be found by Airflow, the DAG object returned by <code>create_dag()</code> must be in the global namespace of the <code>foo_v1.py</code> module. One way to place a DAG in the global namespace is simply to assign it to a module level variable:</p>
<pre><code>from common.common import create_dag

dag = create_dag('foo', 'v1')
</code></pre>
<p>Another way is to update the global namespace using <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer"><code>globals()</code></a>:</p>
<pre><code>globals()['foo_v1'] = create_dag('foo', 'v1')
</code></pre>
<p>The later may look like an overkill, but it is useful for <a href="https://airflow.apache.org/faq.html#how-can-i-create-dags-dynamically" rel="nofollow noreferrer">creating multiple DAGs dynamically</a>. For example, in a for-loop:</p>
<pre><code>for i in range(10):
    globals()[f'foo_v{i}'] = create_dag('foo', f'v{i}')
</code></pre>
<p><em>Side Note:</em> Any <code>*.py</code> file placed in <code>$AIRFLOW_HOME/dags</code> (even in sub-directories, such as <code>common</code> in your case) will be parsed by Airflow. If you do not want this you can use <a href="https://airflow.apache.org/concepts.html#packaged-dags" rel="nofollow noreferrer">packaged DAGs</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to assign the dag to an exported variable in the module. If the dag isn't in the module <code>__dict__</code> airflow's DagBag processor won't pick it up.</p>
<p>Check out the source here: <a href="https://github.com/apache/incubator-airflow/blob/master/airflow/models.py#L428" rel="nofollow noreferrer">https://github.com/apache/incubator-airflow/blob/master/airflow/models.py#L428</a></p>
</div>
<span class="comment-copy">Did you try assigning the output to a variable? <code>x = create_dag('foo', 'v1')</code></span>
