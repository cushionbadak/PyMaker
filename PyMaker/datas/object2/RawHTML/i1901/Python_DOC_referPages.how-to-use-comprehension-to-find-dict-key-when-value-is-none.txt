<div class="post-text" itemprop="text">
<p>How to use comprehension to find dict key when value is <code>None</code>? Is there a one liner instead of the following code?</p>
<pre><code>def Func():
    for k, v in some_dict.items()
        if not v:
            return k
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>result = next((k for k, v in some_dict.items() if not v), None)
</code></pre>
<p>This uses <a href="https://docs.python.org/3/library/functions.html#next" rel="noreferrer"><code>next</code></a> to iterate over the generator and return the first <code>k</code> whose <code>v</code> is falsey, or <code>None</code> if no item matches that condition. If you prefer to raise an exception when no item matches, leave out the <code>None</code> default value.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this (note empty lists will be None, and big lists default gets first element):</p>
<pre><code>l=next((k for k, v in some_dict.items() if not v),None)
print(l)
</code></pre>
<p>Or:</p>
<pre><code>l=next((k for k in some_dict.keys() if not some_dict[k]),None)
print(l)
</code></pre>
</div>
<span class="comment-copy"><code>[k for k, v in some_dict.items() if not v]</code></span>
<span class="comment-copy">so i need to [k for k, v in some_dict.items() if not v][0]? to get k? what if  all key in some_dict have value? then [k for k.......not v][0] will fail?</span>
<span class="comment-copy">Why would you want to use a list-comprehension here? You aren't creating a list!</span>
<span class="comment-copy">I wrote my comment with the intention that you wanted Func() to return every key, not just the first. If that isn't the case, I would recommend looking at the answer posted.</span>
<span class="comment-copy">Side-note: If you actually want <code>None</code>, not just "any falsy value", change the test from <code>not v</code> to <code>v is None</code>; <code>not v</code> will match <code>0</code>, <code>0.0</code>, <code>False</code>, <code>''</code>, <code>[]</code>, <code>()</code>, <code>{}</code>, etc., not just <code>None</code>, while <code>v is None</code> will match <code>None</code> and only <code>None</code>.</span>
<span class="comment-copy"><code>some_dict.items()</code> -&gt; <code>some_dict.iteritems()</code> for Python 2.x</span>
<span class="comment-copy">Note that if you want the <code>StopIteration</code> exception instead of a silent <code>None</code> return on failure, you can remove both <code>, None</code> and the genexpr parens (because the function call parens can serve double duty) simplifying it to <code>next(k for k, v in some_dict.items() if not v)</code>.</span>
<span class="comment-copy">@khachik it's sort of  convention on the [python] tag to assume Python 3 (seeing as Python 2 is almost at the end of its life)</span>
<span class="comment-copy">Comments are not for extended discussion; this conversation has been <a href="https://chat.stackoverflow.com/rooms/182391/discussion-on-answer-by-u9-forward-how-to-use-comprehension-to-find-dict-key-whe">moved to chat</a>.</span>
