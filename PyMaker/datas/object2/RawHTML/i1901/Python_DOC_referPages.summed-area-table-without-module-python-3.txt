<div class="post-text" itemprop="text">
<p>Anyone know if there is a method to create a summed area table(SAT) without module??
I have try this and work:</p>
<pre><code>import numpy as np

A = np.random.randint(0, 10, (3, 4))

print (A)
print(A.cumsum(axis=0).cumsum(axis=1))
</code></pre>
<p>but this is with module numpy.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>In [99]: A = np.random.randint(0, 10, (3, 4))
In [100]: A
Out[100]: 
array([[1, 4, 0, 9],
       [5, 5, 3, 0],
       [3, 2, 1, 2]])
In [101]: A.cumsum(axis=0).cumsum(axis=1)
Out[101]: 
array([[ 1,  5,  5, 14],
       [ 6, 15, 18, 27],
       [ 9, 20, 24, 35]])
</code></pre>
<p><code>itertools</code> has an <code>accumulate</code> tool that behaves like <code>cumsum</code>:</p>
<p><a href="https://docs.python.org/3/library/itertools.html#itertool-functions" rel="nofollow noreferrer">https://docs.python.org/3/library/itertools.html#itertool-functions</a></p>
<pre><code>In [102]: from itertools import accumulate
In [103]: Al = A.tolist()
In [105]: [list(accumulate(row)) for row in Al]
Out[105]: [[1, 5, 5, 14], [5, 10, 13, 13], [3, 5, 6, 8]]
In [106]: [list(accumulate(row)) for row in zip(*_)]
Out[106]: [[1, 6, 9], [5, 15, 20], [5, 18, 24], [14, 27, 35]]
In [107]: list(zip(*_))
Out[107]: [(1, 5, 5, 14), (6, 15, 18, 27), (9, 20, 24, 35)]
</code></pre>
<p>Or packed into one expression:</p>
<pre><code>In [109]: list(zip(*
     ...:    (accumulate(row) for row in zip(*
     ...:    (accumulate(row) for row in Al)))))
     ...:     
Out[109]: [(1, 5, 5, 14), (6, 15, 18, 27), (9, 20, 24, 35)]
</code></pre>
<p>If you can't use <code>itertools</code> either, then use <code>rough equivalent</code> generator given on the documentation page.</p>
<p>Or with this little accumulate function:</p>
<pre><code>def accum(alist):
    total = 0; res = []
    for a in alist:
        total += a
        res.append(total)
    return res

In [111]: list(zip(*
     ...:    (accum(row) for row in zip(*
     ...:    (accum(row) for row in Al)))))  
Out[111]: [(1, 5, 5, 14), (6, 15, 18, 27), (9, 20, 24, 35)]
</code></pre>
</div>
<span class="comment-copy">do some research before asking question. I found the answer on the first google search <a href="https://stackoverflow.com/questions/25557973/efficient-summed-area-table-calculation-with-numpy" title="efficient summed area table calculation with numpy">stackoverflow.com/questions/25557973/â€¦</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/25557973/efficient-summed-area-table-calculation-with-numpy">Efficient summed Area Table Calculation with Numpy</a></span>
