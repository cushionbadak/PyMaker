<div class="post-text" itemprop="text">
<p>I'm still getting my head around list comprehension in python, but I believe it's what I need for this task.</p>
<p>I have a string which I have cast to a list. I want to remove spaces if both adjacent elements are lowercase alphabet characters.</p>
<p>E.g</p>
<pre><code> INPUT&gt; Bartho lemew The Rhinoceros
 OUTPUT&gt; Bartholemew The Rhinoceros
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a> would be a better fit here:</p>
<pre><code>import re

def remove_spaces(string):
    return re.sub(r'(?&lt;=[a-z]) (?=[a-z])', '', string)

print(remove_spaces('Bartho lemew The Rhinoceros'))
# Bartholemew The Rhinoceros
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Very much similar to another answer</p>
<pre><code>import re
a='Bartho lemew The Rhinoceros asdas'
print(re.sub('([A-Z][a-z]*)(\s)([a-z])(\w*)',r'\1\3\4',a))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think regular expressions are a little overhyped on stackoverflow for beginner questions. For this question though they're definitely the right choice. That said, you also asked for a list comprehension that solves the problem, and who am I to deny you?</p>
<pre><code>def remove_spaces(s):
    s = s.join(['A', 'A'])
    return ''.join([c for i, c in enumerate(s)
                        if c!=' ' or not (s[i-1]+s[i+1]).islower()][1:-1])
</code></pre>
</div>
<span class="comment-copy">you can just do a split on space on your string, which will put your sentence into a list without any spaces</span>
<span class="comment-copy">Don't even try doing this with a list comprehension.</span>
<span class="comment-copy">Where has the <code>'u'</code> come from in the output?</span>
<span class="comment-copy">@Aran-Fey How's this?</span>
