<div class="post-text" itemprop="text">
<p>I would like to open an existing file with the following:  </p>
<pre><code>Hel2o. Th3ese a2re some cha3ra3ct2ers.
Her3e ar2e so5me m2or3e2 ch3aracters.  
</code></pre>
<p>and write this to another file as:  </p>
<pre><code>Hello. Thhhese aare some chaaaraaactters.
Herrre arre sooooome mmorrree chhharacters.
</code></pre>
<p>I want to read the string character by character and when an integer <em>n</em> is reached to print the previous character <em>n</em> amount of times but I'm not sure how to write the code for this. Right now this is what I have:</p>
<pre><code>def decode(user_file):
    file1 = open(user_file, 'r')
    file2 = open('test.txt', 'w')
    char = file1.read(1)
    while char:
        file2.write(char)
        char = file1.read(1)
</code></pre>
<p>This reads the code from the selected file and prints it to the output file, but how do I detect an integer after a character and then print that character <em>n</em> times before continuing? I am using python 3.7.</p>
<p>Thanks in advance :)</p>
</div>
<div class="post-text" itemprop="text">
<p>A solution using regular expressions and <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">sub</a>:</p>
<pre><code>import re

pattern = re.compile('(\w)(\d+)')


def repl(m):
    return m.group(1) * int(m.group(2))


texts = ['Hel2o. Th3ese a2re some cha3ra3ct2ers.', 'Her3e ar2e so5me m2or3e2 ch3aracters.']


for text in texts:
    result = pattern.sub(repl, text)
    print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>Hello. Thhhese aare some chaaaraaactters.
Herrre arre sooooome mmorrree chhharacters.
</code></pre>
<p><strong>Explanation</strong></p>
<p>The pattern <code>(\w)(\d+)</code> matches a letter followed by a group of 1 or more digits. If the pattern is found it is replaced using the function <code>repl</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Check if the char in string is a digit or not using regex</p>
<pre><code>import re
string2=''
prev_char=''
for i in open(user_file, 'r').read():
    if not re.search('\d',i):
        prev_char=i
        string2+=i
    else:
        string2+=prev_char*int(i)

with open('test.txt', 'w') as file_out:
    file_out.write(string2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming your file content is stored in variable <code>s</code>, you can use <code>str.join</code> with the following generator expression that pairs the characters by zipping the strings with itself but with one index apart, and tests if the second character of the pair is a digit to repeat the first character that many times:</p>
<pre><code>''.join(c * int(n) if n.isdigit() else '' if c.isdigit() else c for c, n in zip(s, s[1:] + '1'))
</code></pre>
<p>This returns:</p>
<pre><code>Hello. Thhhese aare some chaaaraaactters.
Herrre arre sooooome mmorrree chhharacters. 
</code></pre>
</div>
