<div class="post-text" itemprop="text">
<p>So my text file says something like this:</p>
<pre><code>Dear $name,
\n\n
Thank you for participating in our study on working memory and musical training!
\n\n
You are receiving this email because you said that you were interested in receiving your results of the tests that you took on your musical and non-musical abilities.
\n\n
Your results are below:
\n\n
Test 1: $score1
\n
Test 2: $score2
\n
Test 3: $score3
\n
Test 4: $score4
\n
Test 5: $score5
\n
Test 6: $score6
\n
\n
Thanks again from all of our research team.

\n\n
Seb
</code></pre>
<p>What I want to do is replace the variables in this file (<code>$name</code>, <code>$score1</code>, <code>$score2</code> etc..) with the appropriate data for each person.</p>
<p>Can I do this? Store variables in a text file and access them? Or is there a better way of doing this?</p>
<p>Edit:</p>
<p>An attempt using @Guilio's example.</p>
<p>I get the following error: AttributeError: 'list' object has no attribute 'split'</p>
<pre><code>import csv
with open('email.csv', newline='') as csvfile:
    scores = csv.reader(csvfile)
    for row in scores:
        name,score1,score2,score3,score4,score5,score6=[col for col in row.split(';') if col!='']
        text="""Dear {name},

        Thank you for participating in our study on working memory and musical training!

        You are receiving this email because you said that you were interested in receiving your results of the tests that you took on your musical and non-musical abilities.

        Your results are below:


        Test 1: {score1}

        Test 2: {score2}

        Test 3: {score3}

        Test 4: {score4}

        Test 5: {score5}

        Test 6: {score6}

        Thanks again from all of our research team.


        Seb""".format(**score_dict)
        print(text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Create a "template", then fill in the placeholders <code>{name}</code> using the values stored in a dictionary.</p>
<pre><code>text="""Dear {name},

Thank you for participating in our study on working memory and musical training!

You are receiving this email because you said that you were interested in receiving your results of the tests that you took on your musical and non-musical abilities.

Your results are below:


Test 1: {score1}

Test 2: {score2}

Test 3: {score3}

Test 4: {score4}

Test 5: {score5}

Test 6: {score6}

Thanks again from all of our research team.


Seb""".format(**score_dict)`
</code></pre>
<p>For each row of your CSV file, <code>score_dict</code> is going to be something like <code>{score1:7, score2:9, ...}</code>.</p>
<p>P.S.: you can also do something like this with the $placeholders by some method included in the <code>string</code> module, but I think that's kind of osbolete. By the way, using multiline strings (with three quotes) you don't need to explicitly include newlines (unless you use "raw strings" like <code>r"""my string"""</code>) just leave a blank line.</p>
<p>EDIT</p>
<p>Assuming you have 4 scores called score1,score2,score3,score4 then (cfr. <a href="https://docs.python.org/3/library/csv.html#index-3" rel="nofollow noreferrer">https://docs.python.org/3/library/csv.html#index-3</a>) for each row do this.</p>
<pre><code>name,score1,score2,score3,score4=[col for col in row.split(';') if col!='']
</code></pre>
<p>The <code>if col!=''</code> part takes care of a trailing <code>;</code> if any.</p>
</div>
<span class="comment-copy">How is this question related to email? It is about text templates.</span>
<span class="comment-copy">Because I am asking about how to format a text template that will be emailed. It is relevant to mention this because there may be a solution that utilises a method already in an email module.</span>
<span class="comment-copy">Thank you Giulio! Can I do this without having to have score1: score2: etc in the data file? Can't I just have the raw data?</span>
<span class="comment-copy">I am assuming you have a CSV file, with or without headers, and that you can loop over the rows as you mentioned in your question. So your raw data should be something like this:      <code>name;score1;score2;...</code> <code>Steve McAdams;7;9;...</code> <code>John Smith;6;10;...</code> <code>Jane Green;8;6;...</code>  EDIT If you are still figuring out how to read a CSV file, Python standard library has a nice module ready to use: <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs.python.org/3/library/csv.html</a></span>
<span class="comment-copy">oh - I thought you meant every cell had to be written as score1:24.  So just by saying "score1" it will automatically look in the correct column and get the correct value?</span>
<span class="comment-copy">Not quite. <code>score1:24</code> is a key/value pair, an element of a data structure of type dictionary. The cell should be just the raw value.</span>
<span class="comment-copy">I understand the dictionary data type. I also know how to use the csv module.  I don't understand how these combine to get the result.  Do I need to do anything different to the data than this: <a href="https://imgur.com/kO5J52V" rel="nofollow noreferrer">imgur.com/kO5J52V</a> ?</span>
