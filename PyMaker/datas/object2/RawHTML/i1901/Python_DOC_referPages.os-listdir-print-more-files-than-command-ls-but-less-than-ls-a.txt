<div class="post-text" itemprop="text">
<p>I'd like to count the command in path <code>/Users/me/anaconda3/bin</code></p>
<pre><code>In [3]: len(os.listdir("/Users/me/anaconda3/bin"))                                                            
Out[3]: 474
</code></pre>
<p>However, when I check with commands</p>
<pre><code>In [5]: !count=0; for f in $(ls /Users/me/anaconda3/bin) ;do count=$(( $count + 1)); done; echo $count        
470
</code></pre>
<p>However, if check all the files:</p>
<pre><code>In [17]: ls -a /Users/me/anaconda3/bin | wc -l                                                                
476
</code></pre>
<p>What's the reason cause the difference?</p>
</div>
<div class="post-text" itemprop="text">
<p>Its easy if you read the documentation of <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer">os.listdir</a></p>
<blockquote>
<p>Return a list containing the names of the entries in the directory
  given by path. The list is in arbitrary order, and does not include
  the special entries '.' and '..' even if they are present in the
  directory.</p>
</blockquote>
<p>That means the os.listdir command always has </p>
<pre><code>no_of_elements_in(`ls -a`)-no_of_elements_in(".. and  .")
</code></pre>
<p>that is </p>
<pre><code>len('os.listdir') =no_of_elements_in(`ls -a`)-2
</code></pre>
<p>In your case <code>474=476-2</code></p>
</div>
<span class="comment-copy">Well, you could check that yourself, dont you think? For code block #1: Use <code>print(..)</code> instead of <code>len(..)</code>. For code block #2: Use: <code>do echo $f; count=....</code>. For code block #3: Remove <code>| wc -l </code>.</span>
<span class="comment-copy">To surely discover the reason, do the folowing: 1) Save output of os.listdir to a file "listdir.txt" (sort list before saving) 2) Save output of "ls" to a file "ls.txt" (also, add sorting params to "ls" command, 3) Save output of "ls -a" to a file "ls-a.txt" 4) Run diff over every pair of files</span>
<span class="comment-copy">Why not check in the shell with <code>ls /Users/me/anaconda3/bin | wc -l</code>? This avoids introducing unnecessary complexity..</span>
