<div class="post-text" itemprop="text">
<p>Using two lists.
numSet = [1,2,3]
alphaSet = ['A', 'B', 'C']
Provide for both the while and for loops, create nested loops that print a table that looks like this
1 A
1 B
1 C
2 A
2 B
2 C
3 A
3 B
3 C</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't use a while loop; for loops are a better option here because you know how many times you want to iterate.</p>
<p>Essentially, you want an outer for loop that runs as many times as there are items in your first list. Each time it runs, run the inner loop as many times as there are items in your second list. Inside that inner loop, print out the relevant element from both lists.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should check out the itertools standard library for effecient looping <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer">here</a></p>
<p>For your case, you can use <code>product</code> which is explained in the documentation as:</p>
<blockquote>
<p>cartesian product, equivalent to a nested for-loop</p>
</blockquote>
<pre><code>from itertools import product

num = [1,2,3]
alphaSet = ['a','b','c']

for (num,alpha) in product(num,alphaSet):
    print(num,alpha)
</code></pre>
</div>
<span class="comment-copy">you would just use <code>itertools.product</code></span>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation, as suggested when you created this account.  <a href="http://stackoverflow.com/help/on-topic">On topic</a>, <a href="http://stackoverflow.com/help/how-to-ask">how to ask</a>, and <a href="https://codeblog.jonskeet.uk/2010/08/29/writing-the-perfect-question/" rel="nofollow noreferrer">... the perfect question</a> apply here. StackOverflow is not a design, coding, research, or tutorial resource. However, if you follow whatever resources you find on line, make an honest coding attempt, and run into a problem, you'd have a good example to post.</span>
<span class="comment-copy">or better yet use the builtin that does this :P (+1 all  the same)</span>
