<div class="post-text" itemprop="text">
<p>I wrote a short script to turn the '\' in the path to '\\'</p>
<pre><code>def useinR(address):
    address_list=address.split("\\")
    r_address="\\\\".join(address_list)
    print(r_address)
</code></pre>
<p>I need to add an "r" in front of the path to make sure it works well, as <a href="https://stackoverflow.com/questions/1347791/unicode-error-unicodeescape-codec-cant-decode-bytes-cannot-open-text-file">This Question mentioned</a></p>
<p>so when I use that script, I need to enter</p>
<pre><code>useinR(r"F:\Study\UWA\CITS4009\w11_example\protein.txt")
</code></pre>
<p>instead of</p>
<pre><code>useinR("F:\Study\UWA\CITS4009\w11_example\protein.txt")
</code></pre>
<p>How can we avoid enter the r before path?</p>
<p>I tried <code>r+address</code> , but in that case the "r" is in the string, so it doesn't work</p>
<p>Why I need to do this:</p>
<p>We cannot use file path like <code>F:\abc.txt</code> in RStudio</p>
<p>we need to enter <code>F:\\abc.txt</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The syntax <code>r"string\with\slashes"</code> indicates that the string literal should be treated as a <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">raw string</a>, which means that slashes do not denote unicode control sequences in the string.</p>
<p>If you want to pass <em>string literals</em> to your <code>useinR</code> function, you need to add the raw string prefix. The prefix can't be applied in front of a variable because it relates only to literals.</p>
</div>
<span class="comment-copy"><code>address=address</code> -this line is useless.</span>
<span class="comment-copy">Does <a href="https://stackoverflow.com/q/2428117/9209546">this Q&amp;A</a> help?</span>
<span class="comment-copy">The whole function is useless. There's no reason to double the backslashes like that.</span>
<span class="comment-copy">We actually don't have proper canonical for these kinds of questions, so if someone wants to post an answer that explains why converting existing strings to "raw strings" is nonsensical, that would be great. I recently looked through all the "raw string" questions I could find, and I couldn't find one with that kind of answer. The closest thing we have is <a href="https://stackoverflow.com/questions/4415259/python-raw-strings">this unclear garbage</a>.</span>
<span class="comment-copy">sorry, I deleted that address=address. It was the remain code when I tried r+address</span>
