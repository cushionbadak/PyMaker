<div class="post-text" itemprop="text">
<p>I want to know how a set of parameters affect the performance of a function <code>f</code>.
I do this to store the execute time of the parameters:</p>
<pre><code>ListOfParam=[param1,param2,param3]
Time=[]
for param in ListOfParam:
    start=time.time()
    f(param) 
    end=time.time()
    Time.append(end-start)
</code></pre>
<p>I am now worrying about whether execution of <code>param1</code> will affect execution 
 time of <code>param2</code>, because some <code>param</code> would use multiple CPUs of my computer. How to make it fair for all the <code>param</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use the <code>timeit</code> Python module. You can read the doc <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow noreferrer">here</a>, and look the examples <a href="https://docs.python.org/3/library/timeit.html#examples" rel="nofollow noreferrer">here</a>. Is better to use this module than implement you own timer, because <code>timeit</code> handle: </p>
<ul>
<li>the Garbage Collector of Python to prevent that process from skewing the results by scheduling a collection run at an inopportune moment.</li>
<li>it picks the most accurate timer for your OS, <code>time.time</code> or <code>time.clock</code>.</li>
<li>it repeats the tests many times to eliminate the influence of other tasks on your machine, such as disk flushing and OS scheduling.</li>
</ul>
<p>Plus: <code>IPython</code> include the <code>%timeit</code> magic function for this purposes (<a href="https://ipython.readthedocs.io/en/stable/interactive/magics.html#magic-timeit" rel="nofollow noreferrer">source</a>). </p>
</div>
