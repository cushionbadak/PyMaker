<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/265960/best-way-to-strip-punctuation-from-a-string-in-python">Best way to strip punctuation from a string in Python</a>
<span class="question-originals-answer-count">
                    24 answers
                </span>
</li>
</ul>
</div>
<p>So I have a list of words where I want to remove all punctuation. Here is my code</p>
<pre><code>def removePunctuation(words):
    return set([s.translate(None, string.punctuation) for s in words])

wordsStripped = removePunctuation(words)
</code></pre>
<p>I am getting the following error</p>
<blockquote>
<p>TypeError: translate() takes exactly one argument (2 given)</p>
</blockquote>
<p>I've veen trying a few different ways to do this but with no luck, there's surely an easier way to do this?
I'm new to python so excuse me if this is a bad question, any help would be greatly appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import string    

trans_table = str.maketrans("", "", string.punctuation
def removePunctuation(words):
    return set([s.translate(trans_table) for s in words])

wordsStripped = removePunctuation(words)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also just do this:</p>
<pre><code>words_stripped = ''.join(c for c in s if not c in string.punctuation)
</code></pre>
<p>Disclaimer: The code below is using Python 2 syntax in an IPython shell - the <code>string.translate</code> function seems to have changed in Python 3 - your above solution was for Python 2.</p>
<p>Addressing timing as mentioned by @Chris_Rands in the comment to this answer:</p>
<pre><code>In [17]: %timeit s.translate(None, string.punctuation)
100000 loops, best of 3: 15.6 µs per loop

In [18]: %timeit ''.join(c for c in s if not c in string.punctuation)
1000 loops, best of 3: 1.04 ms per loop

In [19]: %timeit ''.join(c for c in s if not c in punctuation_set)
1000 loops, best of 3: 632 µs per loop
</code></pre>
<p>This was done with <code>s</code> set to a 5 paragraphs generated here: <a href="https://www.lipsum.com/feed/html" rel="nofollow noreferrer">https://www.lipsum.com/feed/html</a></p>
<p>So, yes, the translate method is by far the fastest. At the same time... depending on how many times you need to do this, you don't really need to worry about this.</p>
<p>Use the simplest approach you can think of and then use a profiling tool (CProfiler) to figure out where exactly your bottleneck is if your script isn't fast enough.</p>
</div>
<span class="comment-copy">I suggest that you read the documentation for translate(): <a href="https://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.translate</a></span>
<span class="comment-copy">You probably want to build a translation table with <code>str.maketrans</code> first.  See: <a href="https://stackoverflow.com/questions/41535571/how-to-explain-the-str-maketrans-function-in-python-3-6/41536036#41536036" title="how to explain the str maketrans function in python 3 6">stackoverflow.com/questions/41535571/…</a></span>
<span class="comment-copy">I think he got it from <a href="https://stackoverflow.com/questions/265960/best-way-to-strip-punctuation-from-a-string-in-python" title="best way to strip punctuation from a string in python">stackoverflow.com/questions/265960/…</a> which is appears to be a very respected answer.</span>
<span class="comment-copy">I think you're confusion derives from using python 2 syntax with python 3</span>
<span class="comment-copy">The accepted answer in the dupe appears to me to use the exact same form of <code>translate()</code> used in the OP here which is from Python 2. The error that the OP asks about here indicates that they are using Python 3. The signature for this function has changed. This dupe seems less than helpful for the current question.</span>
<span class="comment-copy"><code>string.maketrans</code> was deprecated in Python 3.1, and removed in more recent versions.  You should use <code>str.maketrans</code> instead.  The 3 argument version is the most readable in my opinion: <code>str.maketrans('', '', string.punctuation)</code></span>
<span class="comment-copy">Looked up what @PatrickHaugh said and it makes sense to me.  <code>The string.maketrans() function is deprecated and is replaced by new static methods, bytes.maketrans() and bytearray.maketrans(). This change solves the confusion around which types were supported by the string module. Now, str, bytes, and bytearray each have their own maketrans and translate methods with intermediate translation tables of the appropriate type.</code> found at <a href="https://docs.python.org/3/whatsnew/3.1.html" rel="nofollow noreferrer">docs.python.org/3/whatsnew/3.1.html</a></span>
<span class="comment-copy">In this example, <code>maketrans()</code> is unnecessary. You can use the dict comp directly.</span>
<span class="comment-copy">Note that <code>None</code> can be used in place of <code>""</code> in <code>trans_table</code>.</span>
<span class="comment-copy">You could do this and it will work in python 3, but it will be slower than using <code>str.translate()</code>, even if this is optimized by making <code>punctuation</code> a set</span>
