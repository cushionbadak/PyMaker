<div class="post-text" itemprop="text">
<p>I am pretty new to Python and is busy with a bootcamp one of the task I have to complete have me a bit stump.  They give as a input txt file that looks like the following:</p>
<blockquote>
<pre><code>min:1,2,3,4,5,6
max:1,2,3,4,5,6
avg:1,2,3,4,5,6
</code></pre>
</blockquote>
<p>The task is that I have to open the txt file in my program and then work out the min, max and the avg of each line.  I can do this a long way of doing <code>.readlines()</code>, but they want it in a generic way such that the lines don't matter.  They want me to read through the lines with a loop statement and check the first word and then make that word start the operations.</p>
<p>I hope that I have put the question through correctly.</p>
<p>Regards</p>
</div>
<div class="post-text" itemprop="text">
<p>While your question wasnt entirely clear with how to use use readlines and not , maybe this is what you were looking for.</p>
<pre><code>f=open("store.txt","r")
for i in f.readlines():
    func,data=i.split(":")
    data=[int(j) for j in data.rstrip('\n').split(",")]
    print(func,end=":")
    if(func=="max"):
        print(max(data))
    elif(func=="min"):
        print(min(data))
    else:
        print(sum(data)/len(data))
</code></pre>
<p>Next time please try to show your work and ask specific errors , i.e. not how to solve a problem but rather how to change your solution to fix the problem that you are facing </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval()</code></a> may be useful here. </p>
<p>The name of the math operation to perform is conveniently the first word of each line in the text file, and some are python keywords. So after parsing the file into a math expression I found it tempting to just use python's <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer">eval</a> function to perform the operations on the list of numbers.   </p>
<p><em>Note</em>: this is a one-off solution as use of <code>eval</code> is discouraged on unknown data, but safe here as we manage the input data.
<code>avg</code>, is not a built-in operation, so we can define it (and any other operations that are not built-ins) with a lambda.</p>
<pre><code>with open('input.txt', 'r') as f:
    data = f.readlines()

clean = [d.strip('\n').split(':') for d in data]

lines = []

# define operations in input file that are not built-in functions
avg = lambda x:  sum(x)/float(len(x)) # float for accurate calculation result

for i in clean:
    lines.append([i[0], list(map(int, i[1].split(',')))])

for expr in lines:
    info = '{}({})'.format(str(expr[0]), str(expr[1]))
    print('{} = {}'.format(info, eval('{op}({d})'.format(op=expr[0],d=expr[1]))))
</code></pre>
<p>output:</p>
<pre><code>min([1, 2, 3, 4, 5, 6]) = 1
max([1, 2, 3, 4, 5, 6]) = 6
avg([1, 2, 3, 4, 5, 6]) = 3.5
</code></pre>
</div>
<span class="comment-copy">welcome to stackoverflow! please take the <a href="http://stackoverflow.com/tour">tour</a>, read up on <a href="https://stackoverflow.com/help/asking">how to ask a question</a> and provide a <a href="https://stackoverflow.com/help/mcve">minimal, complete and verifiable example</a> that reproduces your problem.</span>
