<div class="post-text" itemprop="text">
<p>I have a sting and need to randomly replace 5% of the elements, and flip them to 0 if they are 1, and flip them to 1 if they are 0.</p>
<p>I have a string that looks like this:</p>
<pre><code
</code></pre>
<p>Effectively, 5% of the values in the string will change from a 0 to 1, or vice versa.</p>
<p>I have tried this but it does not seem to work, and isn't guaranteed to only replace 5% of the elements:</p>
<pre><code>for i in range(500):
    if random.random() &lt; 0.05:
        if test[i] == '1':
            test[i] == '0'
        else:
            test[i] == '1'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This will work on Python 2.7 and 3.6 (tested; probably newer as well).</p>
<pre><code>import random
sting
sting = ''.join([chr(ord(y) ^ 1) if x in random.sample(range(len(sting)),len(sting)//20) else y for x,y in enumerate(list(sting))])
print (sting)
</code></pre>
<p>I have tried this and it works, and is guaranteed to only replace 5% of the elements.</p>
<p>It toggles exactly 5% -- the length of <code>sting</code> divided by 20, which is 5% -- characters from <code>0</code> to <code>1</code> and from <code>1</code> to <code>0</code>, without duplicates. Toggling is done with <a href="https://docs.python.org/3/reference/expressions.html" rel="nofollow noreferrer">XOR</a> operator and <a href="https://docs.python.org/3/library/random.html?highlight=random%20sample#random.sample" rel="nofollow noreferrer">random.sample</a> picks indices to replace "unique elements", i.e. without duplicates.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to change two things</p>
<ol>
<li>strings are immutable. So, <code>test = list(test)</code> before your loop, and <code>test = ''.join(test)</code> after it</li>
<li>Choose in advance which elements you want to change</li>
</ol>
<p>First, choose <code>n</code> random indexes. One option is using <code>random.choice</code> <em>without</em> replacement</p>
<pre><code> num_elements = int(0.05 * len(test))
 indexes = random.choice(list(range(len(test)), num_elements, replace=False)
</code></pre>
<p>and then modify the values as before.</p>
</div>
<span class="comment-copy">Strings are immutable so you'll need it split into a list or similar</span>
<span class="comment-copy">Are you open to use numpy or do you want to stay with random library?</span>
<span class="comment-copy">There is no reason for <code>if random.random() &lt; 0.05:</code>, the number of samples is deterministic, you only need to know what the indices to change are</span>
