<div class="post-text" itemprop="text">
<p>I tried the following code</p>
<pre><code>s='Python is an interpreted high-level programming language for general-purpose programming. Created by Guido van Rossum and first released in 1991, Python has a design philosophy that emphasizes code readability, notably using significant whitespace. It provides constructs that enable clear programming on both small and large scales'
s1='Python features a dynamic type system and automatic memory management. It supports multiple programming paradigms, including object-oriented, imperative, functional and procedural, and has a large and comprehensive standard library'
print(s,end='\r')
print(s1)
</code></pre>
<p>Output I got is</p>
<pre><code>Python is an interpreted high-level programming language for general-purpose programming. Created by Guido van Rossum and first released in 1991, Python has a design philosophy that emphasizes code readability, notably using significant whitespace. It provides con
Python features a dynamic type system and automatic memory management. It supports multiple programming paradigms, including object-oriented, imperative, functional and procedural, and has a large and comprehensive standard library
</code></pre>
<p>The first string <code>s</code> is printing on two lines. <code>\r</code> then makes the second string print from the start of the 2nd line. </p>
<p>I wanted the second string to print from the beginning of the first string. 
Is it possible to do it with <code>print</code> or should I use any other functions?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a feature of the terminal emulator you're using. Yes you can use print to do this, you need to output the appropriate terminal escape sequence for your terminal type.</p>
<p>For example, if you're in an xterm like terminal emulator, the escape sequence is <a href="http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x361.html" rel="nofollow noreferrer">described here</a> (that page is for bash, but python had very similar syntax). The escape sequence you'll likely most be interested in is:</p>
<ul>
<li>Save cursor position: \033[s</li>
<li>Restore cursor position: \033[u</li>
</ul>
<p>If you are doing something a lot more complex, you'll likely also be interested in the <a href="https://docs.python.org/3/howto/curses.html" rel="nofollow noreferrer">curses</a> library.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's tricky. First of all, not all terminals have same capabilities. For example, <code>\033[s</code> and <code>\033[r</code> that Lie Ryan talked about don't work on my terminal. It is safer to read the control sequences from the terminal database:</p>
<pre><code>import os
sc = os.popen('tput sc').read()
rc = os.popen('tput rc').read()
print(sc + s, end='\r')
print(rc + s1, end='\r')
</code></pre>
<p>However, this will <em>not</em> work on Windows. Also, it just saves the coordinates of the cursor in view, not in scroll history; so if you save the cursor on the last line, print something that scrolls the screen and restore cursor, you will not move at all (as it will go back to - the last line!)</p>
<p>The workaround I was suggesting in comments before is this:</p>
<pre><code>import os
columns = int(os.popen('tput cols').read())
need_for_up = (len(s) - 1) // columns
cuu = os.popen('tput cuu %s' % need_for_up).read()
print(s, end='\r' + cuu)
print(s1)
</code></pre>
<p>Because this doesn't work with coordinates but actually moves cursor up from its position, it works whether at the bottom or not.</p>
<p>Since this also queries the Terminfo database using <code>tput</code>, it won't work on Windows either. Whether or not it would work if you hardcode <code>cuu = "\033[%sA" % need_for_up</code>, I don't know (not a Windows person).</p>
</div>
<span class="comment-copy"><code>\r</code> can only return you to the start of the line, not go up lines. Imagine the terminal is a typewriter: it's easy to go to the next row, and to the start of the row, but to go up a row you have to twiddle the knob.</span>
<span class="comment-copy">@Amadan are you suggesting that it is not possible?.</span>
<span class="comment-copy">@Amadan passing <code>end='\r'</code> to <code>print</code> <i>should</i> prevent skipping to the next row. And <code>print(s1, end='\r'); print(s)</code> will leave you with only the longer string printed.</span>
<span class="comment-copy">@AndrasDeak: The row was already skipped by exceeding terminal width, not by outputting <code>\n</code> (which, as you said, doesn't happen here). <code>\r</code> will return you to the start of the current row. However, the start of the first string is on the previous row, which cannot be that easily returned to.</span>
<span class="comment-copy">Some terminals can move the cursor up, but this is not per se the case. Since for example you can redirect the output to a file, and a file has no notion of lines</span>
<span class="comment-copy">It should work on cmd in windows and terminal in linux based installations. Is it possible to generalize? I don't think its possible. I am right?</span>
<span class="comment-copy">Thanks for the answer. Just one more query. Should I use curses library for the same in Linux?</span>
<span class="comment-copy">Hm, I can't seem to make it work... not on Mac, not on Centos (both on <code>xterm-256color</code>). Don't have Windows at hand to check.</span>
<span class="comment-copy">@Amadan: Other sequences you may want to try: <code>\0337</code> and <code>\0337</code>.</span>
<span class="comment-copy">You read my mind - see my answer (<code>\0337</code> and <code>\0338</code> are exactly what <code>sc</code> and <code>rc</code> map to on my TERM).</span>
