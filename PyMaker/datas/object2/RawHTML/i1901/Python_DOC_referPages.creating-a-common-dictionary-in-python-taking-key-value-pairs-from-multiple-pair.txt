<div class="post-text" itemprop="text">
<p>How can I create a big dictionary in Python taking key value pairs from multiple pair of lists. For example, we have 6 lists, namely <em>key1,val1,key2,val2 and key3,val3</em>. Now I want to create a dictionary containing <strong>all keys from key1, key2 and key3</strong> and <strong>corresponding values from val1, val2, val3</strong> respectively.
for example:</p>
<pre><code>val1 = ['3/12/2017', '12/18/2017', '12/18/2017', '12/12/2017']
key1 = [32, 45, 107, 150]
val2 = ['2000-03-13', '2014-11-31']
key2 = [166, 244]
</code></pre>
<p>I want the dictionary as given below:</p>
<pre><code>big_dict = {32: '3/12/2017', 107: '12/18/2017', 45: '12/18/2017', 150: '12/12/2017', 244: '2014-11-31', 166: '2000-03-13'}
</code></pre>
<p>How can this be done?
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> and simple concatenation:</p>
<pre><code>big_dict = dict(zip(key1+key2, val1+val2))
</code></pre>
<p>If you have an unknown number of key and value lists, use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain</code></a> and <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a>:</p>
<pre><code>from itertools import chain

big_dict = dict(zip(chain(*key_lists), chain(*val_lists)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A simple answer would be this, Although there are much efficient ways to do this.</p>
<pre><code>val1 = ['3/12/2017', '12/18/2017', '12/18/2017', '12/12/2017']
key1 = [32, 45, 107, 150]
val2 = ['2000-03-13', '2014-11-31']
key2 = [166, 244]

big_dict = {}

big_dict.update(dict(zip(key1, val1)))
big_dict.update(dict(zip(key2, val2)))
</code></pre>
<p>Or combine lists before and do a one-liner</p>
<pre><code>keys = key1 + key2 # Make sure they are unique however or else dict() will show incorrect results
values = val1 + val2

big_dict.update(dict(zip(keys, values)))

print(big_dict)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this code:</p>
<pre><code>a=(dict(zip(key1,val1)))
b=(dict(zip(key2,val2)))
d = a.copy()
d.update(b)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>add all the lists to a common list and automate the process, as such:</p>
<pre><code>combined_dict = {}

values_lists = [ val1, val2 ]
keys_lists = [ key1, key2 ]

for itr in range(len(keys_list)):
    for list_itr in range(len(keys_list[itr])):
        combined_dict[keys_list[itr][list_itr]] = values_lists[itr][list_itr]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would concat the lists, and by using <code>zip</code> merge it into keys and values (dictionary).</p>
<pre><code>val1 = ['3/12/2017', '12/18/2017', '12/18/2017', '12/12/2017']
key1 = [32, 45, 107, 150]
val2 = ['2000-03-13', '2014-11-31']
key2 = [166, 244]

keys = key1 + key2
vals = val1 + val2
d = dict(zip(keys, vals))

print (d)
# {32: '3/12/2017', 45: '12/18/2017', 107: '12/18/2017', 150: '12/12/2017', 166: '2000-03-13', 244: '2014-11-31'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can extend the list and the zip them and create a dictionary like below</p>
<pre><code>val1 = ['3/12/2017', '12/18/2017', '12/18/2017', '12/12/2017']
key1 = [32, 45, 107, 150]
val2 = ['2000-03-13', '2014-11-31']
key2 = [166, 244]

key1.extend(key2)
val1.extend(val2)

newdict = {k: v for k, v in zip(key1, val1)}

print(newdict)
</code></pre>
</div>
<span class="comment-copy">On what basis, would the key items would be assigned to the value items? It doesn't seem to be ordered.</span>
<span class="comment-copy">This seems to needlessly complicate things.</span>
