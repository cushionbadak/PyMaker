<div class="post-text" itemprop="text">
<p>Let's say you are in the python interactive shell and you type the first two lines:</p>
<pre><code>&gt;&gt;&gt; import math #just to have a statement as well as an expression
&gt;&gt;&gt; [x * 2 for x in [1, 2, 3, 4]]
[2, 4, 6, 8]
&gt;&gt;&gt;
</code></pre>
<p>As you can see the result was printed without using a print function.
Now if we save the executed code inside a file named <code>tempcode.py</code>:
<code>
import math #just to have a statement as well as an expression
[x * 2 for x in [1, 2, 3, 4]]
</code></p>
<p>The question is whether is it possible to load/execute the file inside the python shell that results in printing the result?</p>
<p><strong>Update</strong>: what I really want to do is executing lines of code that were saved in a file and make <em>python shell</em> treat it as if they were typed inside it. <strong>In other words</strong>, what I require is to write a few lines of code in a file instead of entering it manually inside the repl and have them both result in an equal output. Node.js repl has this feature: <code>.load</code></p>
<p><strong>More Clarifying Update</strong>: Expected Behavior</p>
<pre><code>&gt;&gt;&gt; aBuiltinThing('tempcode.py')
[2, 4, 6, 8]
&gt;&gt;&gt;
</code></pre>
<p><strong>**Question**</strong>: Does python have that <code>aBuiltinThing</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can run the python file inside the python shell. Like this,</p>
<pre><code>&gt;&gt;&gt; execfile('abc.py')
[2, 4, 6, 8]
</code></pre>
<p>Where <code>abc.py</code> will be like this.</p>
<pre><code>print [x * 2 for x in [1, 2, 3, 4]]
</code></pre>
<hr/>
<p>If we removed the <code>print</code> in the <code>abc.py</code> while executing from the shell it won't print anything.</p>
<p>If <code>abc.py</code> like this.</p>
<pre><code>[x * 2 for x in [1, 2, 3, 4]]
print 'test'
</code></pre>
<p>Result in the shell will be like this.</p>
<pre><code>&gt;&gt;&gt; execfile('abc.py')
test
</code></pre>
<p>NB: <code>execfile</code> is in <code>python2</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks for clarification, I've edited my answer based on your update. Also I'm not sure, about what you need to print as your python file can have n no. of variables and methods. The best possible way is to execute your python file and save your file's executed objects in a dictionary which can be used as below:-</p>
<p><em>test.py</em> :-</p>
<pre><code>import pandas as pd

a = [x * 2 for x in [1, 2, 3, 4]]

def return_out():
    return a
</code></pre>
<p><em>actual python script</em> :-</p>
<pre><code>exec_dict = {}
exec(open('C:\\Temp\\test.py').read(), exec_dict)
</code></pre>
<p>Now to print the value of the method return_out you can use:-</p>
<pre><code>exec_dict['return_out']()
Out[41]: [2, 4, 6, 8]
</code></pre>
<p>Or to get the variable a:-</p>
<pre><code> exec_dict['a']
 Out[40]: [2, 4, 6, 8]
</code></pre>
<p><em>This will work for both python versions python2 and python3</em></p>
</div>
<div class="post-text" itemprop="text">
<p>If you are willing to sacrifice the stdout to output without using print statement, i believe you could use </p>
<blockquote>
<p>python -i tempcode.py</p>
</blockquote>
<p>you can use <strong>-i</strong> command-line parameter while execution, this should execute your code and at the end give you control without having to rewrite the whole file in your REPL. You will be able to access all the variable and other content of your file as usual.</p>
<p>You can find more info in python doc <a href="https://docs.python.org/3/using/cmdline.html#cmdoption-i" rel="nofollow noreferrer">here</a></p>
</div>
<span class="comment-copy">So you ask about how to do that without changing the code. I.e. <code>print([x * 2 for x in [1, 2, 3, 4]])</code> would not be an option?</span>
<span class="comment-copy">And you do not want to just copy the line and write into a file, you are looking for e.g. a command to dump to file, right?</span>
<span class="comment-copy">Check Subprocess module <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">docs.python.org/3/library/subprocess.html</a>, I guess what you want to do is run <code>python tempcode.py</code> right ?</span>
<span class="comment-copy">@Yunnosch It's not a duplicate of the mentioned question. That guy wants to just save his repl session, what I require is to write a few lines of code in a file instead of entering it manually inside the repl and have them both result in an equal output. Node.js repl has this feature</span>
<span class="comment-copy">Please use that explanation to improve your question. It seems clearer than the current question.</span>
<span class="comment-copy">I think changing the code from what has worked in the shell is not what OP is asking for.</span>
<span class="comment-copy">I just mentioned different scenario of codes executed from the shell. And I think OP looking for the same.</span>
<span class="comment-copy">Please read recent question-edits and OP comments. I interpret them differently, but I am not categorically saying your interpretation is wrong. More explanation by OP might help.</span>
<span class="comment-copy">I don't think OP is asking about copying the code manually and editing it to get the same output.</span>
<span class="comment-copy">@Yunnosch He asked for code execution without using print function, right?</span>
<span class="comment-copy">I do not think so. They asked about execution without any change. I am trying to make them clarify...</span>
<span class="comment-copy">@Sreejith Your solution is not general. try to have an import statement inside your file. eval throws Syntax error</span>
<span class="comment-copy">@Sreejith you are doing too much unnecessary work. If I wanted to go to all this trouble I would've never asked this question. the whole idea is to not do any work. Node.js shell has this feature. <code>.load</code></span>
<span class="comment-copy">I already knew about this feature, but it doesn't work. it just gives you an interactive session after executing the file; however, it does not meet the requirement stated in the question. try creating the file mentioned above and then use your solution, it does not print <code>[2, 4, 6, 8]</code></span>
