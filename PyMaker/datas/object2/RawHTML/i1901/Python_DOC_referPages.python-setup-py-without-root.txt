<div class="post-text" itemprop="text">
<p>I would like to install some Python module, namely the <a href="https://de.mathworks.com/help/matlab/matlab_external/install-the-matlab-engine-for-python.html" rel="nofollow noreferrer">MATLAB Engine</a>. MATLAB is installed globally under <code>/usr/local/sw/matlab</code>, so I change to the  corresponding directory and then run <code>setup.py</code> as explained in the linked documentation. However, I am not root, so I added the <code>--user</code> flag, as documented by the official <a href="https://docs.python.org/3.5/install/index.html#alternate-installation-the-user-scheme" rel="nofollow noreferrer">Python Docs</a>.</p>
<p>So this is what I get:</p>
<p><code>&gt; python setup.py install --user
 running install
 running build
 running build_py
 creating build
 error: could not create 'build': Permission denied
</code></p>
<p>Apparently it tries to build the module in the current directory, where I have no write access. I can sidestep this by running</p>
<p><code>python setup.py build --build-base=/path/to/temp/build/dir</code></p>
<p>But then I don't know how to install that. Also I cannot combine those 2 approaches as <code>install</code> does not recognize the <code>--build-base</code> option.</p>
<p>I furthermore tried to copy the whole <code>matlabroot/extern/engines/python</code> directory somewhere else and run <code>python setup.py install --user</code> there, but this yields</p>
<p><code>error: The installation of MATLAB is corrupted.  Please reinstall MATLAB or contact Technical Support for assistance.</code></p>
<p>I guess it does not find the <code>matlabroot</code> anymore.</p>
<p>So how do I build and install some source located somewhere under <code>/usr...</code> without being root?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://virtualenv.pypa.io/en/stable/" rel="nofollow noreferrer">Virtualenv</a> or <a href="https://docs.python.org/3/tutorial/venv.html" rel="nofollow noreferrer">venv</a> to deal with this kind of issues. </p>
<p>Edit: As we went a bit deeper into issue itself, we managed to figure out the answer. </p>
<p>If you wish to use virtual environment: <code>python setup.py build --build-base="/path/to/directory_you_can_write_to" install --prefix="/path/to/virtualenv/" --user</code></p>
<p>If you wish to accomplish what @Feodoran asked for: <code>python setup.py build --build-base="/path/to/directory_you_can_write_to" install --user</code> </p>
<p>Useful links: </p>
<ul>
<li><a href="https://de.mathworks.com/help/matlab/matlab_external/install-matlab-engine-api-for-python-in-nondefault-locations.html" rel="nofollow noreferrer">https://de.mathworks.com/help/matlab/matlab_external/install-matlab-engine-api-for-python-in-nondefault-locations.html</a></li>
<li><a href="https://python.org/3.2/install" rel="nofollow noreferrer">https://python.org/3.2/install</a> </li>
</ul>
</div>
<span class="comment-copy">How would having a different location for the python binary help with the location issue of the build directory?</span>
<span class="comment-copy">You can setup different env for your MATLAB needs and avoid permission issues.</span>
<span class="comment-copy">Then please elaborate how. Because if I just run <code>~/tmp/matlab/bin/python3 setup.py install --user</code>, where <code>~/tmp/matlab</code> is my venv directory, I get the same problems as before.</span>
<span class="comment-copy">With <code>--prefix</code>. This is from their docs <code>cd "matlabroot\extern\engines\python"; python setup.py install --prefix="installdir</code> where <code>installdir</code> is virtualenv localtion. Here's documentation: <a href="https://de.mathworks.com/help/matlab/matlab_external/install-matlab-engine-api-for-python-in-nondefault-locations.html" rel="nofollow noreferrer">de.mathworks.com/help/matlab/matlab_external/â€¦</a></span>
<span class="comment-copy">This worked for me, without privileged user. <code>python setup.py build --build-base="/path/to/directory_i_can_write_to" install --prefix="/path/to/virtualenv/"</code> Not sure why <code>install</code> doesn't work in your case. Maybe try <code>--home</code> instead of --build-base or check other alternatives here: <a href="https://docs.python.org/3.2/install/" rel="nofollow noreferrer">docs.python.org/3.2/install</a> Edit: Glad you managed to work it out, your comment didn't update for me.</span>
