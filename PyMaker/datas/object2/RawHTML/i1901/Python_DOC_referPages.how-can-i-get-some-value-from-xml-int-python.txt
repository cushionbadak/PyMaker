<div class="post-text" itemprop="text">
<p>I have this sitemap in xml. How i can get each <code>&lt;loc&gt;</code> ?</p>
<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;urlset
      xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9
            http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"&gt;
&lt;!-- created with Free Online Sitemap Generator www.xml-sitemaps.com --&gt;


&lt;url&gt;
  &lt;loc&gt;https://www.nsnam.org/wiki/Main_Page&lt;/loc&gt;
  &lt;lastmod&gt;2018-10-24T03:03:05+00:00&lt;/lastmod&gt;
  &lt;priority&gt;1.00&lt;/priority&gt;
&lt;/url&gt;
&lt;url&gt;
  &lt;loc&gt;https://www.nsnam.org/wiki/Current_Development&lt;/loc&gt;
  &lt;lastmod&gt;2018-10-24T03:03:05+00:00&lt;/lastmod&gt;
  &lt;priority&gt;0.80&lt;/priority&gt;
&lt;/url&gt;
&lt;url&gt;
  &lt;loc&gt;https://www.nsnam.org/wiki/Developer_FAQ&lt;/loc&gt;
  &lt;lastmod&gt;2018-10-24T03:03:05+00:00&lt;/lastmod&gt;
  &lt;priority&gt;0.80&lt;/priority&gt;
&lt;/url&gt;
</code></pre>
<p>Program looks like this.</p>
<pre><code>import os.path
import xml.etree.ElementTree
import requests
from subprocess import call

def creatingListOfBrokenLinks():
    if (os.path.isfile('sitemap.xml')):
        e = xml.etree.ElementTree.parse('sitemap.xml').getroot()
        file = open("all_broken_links.txt", "w")

        for atype in e.findall('url'):
            r = requests.get(atype.find('loc').text)
            print(atype)
            if (r.status_code == 404):
                file.write(atype)

        file.close()


if __name__ == "__main__":
    creatingListOfBrokenLinks()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I suggest you use the elementtree standard library package:</p>
<pre><code>from xml.etree import ElementTree as ET

SITEMAP = """&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;urlset
      xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9
            http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"&gt;
    &lt;!-- created with Free Online Sitemap Generator www.xml-sitemaps.com --&gt;
    ...
    ...
&lt;/urlset&gt;"""

urlset = ET.fromstring(SITEMAP)
loc_elements = urlset.iter("{http://www.sitemaps.org/schemas/sitemap/0.9}loc")
for loc_element in loc_elements:
    print(loc_element.text)
</code></pre>
<p>Documentation links:</p>
<ul>
<li><a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow noreferrer">Main ElementTree documentation</a></li>
<li><a href="https://docs.python.org/3/library/xml.etree.elementtree.html#parsing-xml-with-namespaces" rel="nofollow noreferrer">XML namespaces in ElementTree</a></li>
</ul>
<p><em>Update:</em></p>
<ul>
<li>What your code gets wrong is the XML namespace handling.</li>
<li>Also, my example uses <code>.iter()</code> instead of <code>.findall()</code> / <code>.find()</code> to get the <code>loc</code> elements directly. This might or might not be OK depending on the structure of the XML and the use case.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Your code worked perfectly on my end. All you had to do, is add: <code>{http://www.sitemaps.org/schemas/sitemap/0.9}</code> before <code>url</code> and <code>loc</code></p>
<p>Here:</p>
<pre><code>import os.path
import xml.etree.ElementTree
import requests
from subprocess import call

def creatingListOfBrokenLinks():
    if (os.path.isfile('sitemap.xml')):
        e = xml.etree.ElementTree.parse('sitemap.xml').getroot()
        file = open("all_broken_links.txt", "w")

        for atype in e.findall('{http://www.sitemaps.org/schemas/sitemap/0.9}url'):
            r = requests.get(atype.find('{http://www.sitemaps.org/schemas/sitemap/0.9}loc').text)
            print(atype)
            if (r.status_code == 404):
                file.write(atype)

        file.close()


if __name__ == "__main__":
    creatingListOfBrokenLinks()
</code></pre>
</div>
<span class="comment-copy">What does your python program look like at the moment?</span>
<span class="comment-copy">@frankenapps i updated</span>
