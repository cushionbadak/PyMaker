<div class="post-text" itemprop="text">
<p>I have a free form time duration strings containing hour and minute values one of then could be optional</p>
<pre><code>1 hour
12 hours 3 mins
47 mins
10 hours
1 min
</code></pre>
<p>I have to convert them to number of minutes. First searched for Python library which converts times and duration but the string format does not allow to use such approach</p>
<p>Then I tried with regex to extract the number groups:</p>
<pre><code>re.search("(\d+)?.*(\d+\w)", string).group(1)
re.search("(\d+)?.*(\d+\w)", string).group(2)
</code></pre>
<p>which worked for most cases when hour and minute values are present or when only the minute value is present (since I made the first group optional) This regex fails when the hour is single digit (1 hour).
Also because I am extracting only digits groups without the descriptive text (hour(s) and/or min(s) the calculation is wrong when there is only the hour value (with two digits) - like 10 hours and it wrongly is extracted as the 2nd group as minutes.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re.findall</code> with the following regex:</p>
<pre><code>import re
s = '''1 hour
12 hours 3 mins
47 mins
10 hours
1 min'''
for h, m in re.findall(r'(?=\d+ *hours?| *\d+ *min(?:ute)?s?)(?:(\d+) *hours?)?(?: *(\d+) *min(?:ute)?s?\b)?', s, flags=re.IGNORECASE):
    print(int(h or 0) * 60 + int(m or 0))
</code></pre>
<p>This outputs:</p>
<pre><code>60
723
47
600
1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try using <strong><a href="https://dateutil.readthedocs.io/en/stable/" rel="nofollow noreferrer">dateutil</a></strong> and Regex</p>
<p><strong>Demo:</strong></p>
<pre><code>import dateutil.parser as dparser
import re

s = """1 hour
12 hours 3 mins
47 mins
10 hours
1 min"""

for line in s.splitlines():
    print(dparser.parse(re.sub(r"(mins?)", "minutes", line), fuzzy=True).strftime("%H:%M:%S") )
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>01:00:00
12:03:00
00:47:00
10:00:00
00:01:00
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I wrote this simple snippet that parses all your cases. Ask if you had any problem.</p>
<p>Output:</p>
<pre><code>1 hour -&gt; 1:00:00
12 hours 3 mins -&gt; 12:03:00
47 mins -&gt; 0:47:00
10 hours -&gt; 10:00:00
1 min -&gt; 0:01:00
random text -&gt; 0:00:00
</code></pre>
<p>Code:</p>
<pre><code>import re
from datetime import timedelta


number_word_regex = re.compile(r'(\d+) (\w+)')


def parse_fuzzy_duration(s):
    ret = timedelta(0)

    for number, word in number_word_regex.findall(s):
        number = int(number)

        if word in ['minute', 'min', 'minutes', 'mins']:
            ret += timedelta(minutes=number)
        elif word in ['hour', 'hours']:
            ret += timedelta(hours=number)

    return ret


for s in ['1 hour', '12 hours 3 mins', '47 mins', '10 hours', '1 min', 'random text']:
    print(s, '-&gt;', parse_fuzzy_duration(s))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Other answers is fine, another way to do this with regex (if you really want to):</p>
<pre><code>match = re.match(
    r'((?P&lt;hours&gt;\d+) hours?)? ?((?P&lt;mins&gt;\d+) mins?)?',
    '12 hours 3 mins'
)

match.groupdicts()
</code></pre>
<p>This way it <em>may</em> make more sense you you (this is the main problem with a lot of regex engineering. I'd suggest to try out any regex you choose at some resource like <a href="https://regex101.com/" rel="nofollow noreferrer">https://regex101.com/</a> to have some testing and description.</p>
</div>
<span class="comment-copy">You can extract time data from a string using <code>datetime.strptime()</code> from python library <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">datetime</a></span>
<span class="comment-copy">blhsing's answer was more fool proof engineered so even if I put arbitrary number of white-spaces between the number and the hour/min  pattern it selects the digits. However your's was shorter and thus easier to understand so I was able to change it to the same behavior   : <code>((?P&lt;hours&gt;\d+) *hours?)? ?((?P&lt;mins&gt;\d+) *mins?)?</code> - thanks</span>
