<div class="post-text" itemprop="text">
<p>Spent a long time struggling with this relatively simple question about populating a tic tac toe board. </p>
<pre><code># List variable ticTacToe should eventually 
# hold [ [ a, b, c ], [ d, e, f ], [ g, h, i ]]
# to represent the Tic Tac to board:
#    a b c
#    d e f
#    g h i
</code></pre>
<p><code>ticTacToe = [ [], [], [] ]</code></p>
<pre><code>firstRow = input()

secondRow = input()

thirdRow = input()

ticTacToe.append(firstRow)

ticTacToe.append(secondRow)

ticTacToe.append(thirdRow)    

#Output handled for you
</code></pre>
<p><code>for i in range(3) :
  for j in range(3) :
    print( "%3s" % ticTacToe[i][j], end="")
  print()</code></p>
<p>The output was given to me and can't be replaced. </p>
<p>I'm having two problems here. </p>
<ol>
<li><p>I can't get the row inside the [] without deleting the brackets and starting over. If I were to print ticTacToe I'd get <code>[[], [], [], 'a,b,c', 'd,e,f', 'g,h,i']</code> instead of <code>[[a,b,c], [d,e,f], [g,h,i]]</code></p></li>
<li><p>Unwanted quotation marks keep appearing. If <code>first row = a,b,c</code> , when I append it into ticTacToe it shows up as <code>['a,b,c']</code> instead of <code>[a,b,c]</code></p></li>
</ol>
<p>Not sure where I'm going wrong and any help would be appreciated. Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should read about lists: <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">PyTut lists</a></p>
<pre><code>board = [ [], [], [] ]       # a list of 3 other lists

# addd somthing to board:    
board.append("something")    # now its a list of 3 lists and 1 string
print(board)

board = board + ["otherthing"]   # now its a list of 3 lists and 2 strings
print(board)


# modify the list inside board on place 0:
zero_innerlist = board[0]        # get the list at pos 0 of board
print(board)          
zero_innerlist.append("cat")     # put something into that inner list
print(board)
zero_innerlist.append("dog")     # put more into that inner list
print(board)
print(zero_innerlist)            # print "just" the inner list

one_innerlist = board[1]         # modify the 2nd inner list at pos 1
one_innerlist.append("demo")
print(board)
</code></pre>
<p>Outputs:   </p>
<pre><code>[[], [], [], 'something', 'otherthing']                     # board
[[], [], [], 'something', 'otherthing']                     # board
[['cat'], [], [], 'something', 'otherthing']                # board
[['cat', 'dog'], [], [], 'something', 'otherthing']         # board
['cat', 'dog']                                              # zero_innerlist
[['cat', 'dog'], ['demo'], [], 'something', 'otherthing']   # board
</code></pre>
<p>If you want to add 3 things to each of the inner lists, you need 3 appends to each of the inner lists.</p>
<hr/>
<p>Other nice read: <a href="https://docs.python.org/3.1/library/string.html#string-formatting" rel="nofollow noreferrer">string formatting</a> and <a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer">f-strings</a>:</p>
<p>You are using the 2.7 style printing, for 3 and 3.6 format and f-strings are better:</p>
<pre><code>board = [ ["a","b","c"], ["d","e","f"], ["g","h","i"] ]

for i in range(3) :
    for j in range(3) :
        print( f"{board[i][j]:3s}", end="")
    print()

# or 

for row in board:
    for col in row:
        print( f"{col:3s}", end="")
    print()

# or 

for row in board:
    print( f"{row[0]:3s}{row[1]:3s}{row[2]:3s}")

# or 

print( '\n'.join( ( ''.join(f"{col:3s}" for col in row ) for row in board) ))
</code></pre>
<p>Output (all):</p>
<pre><code>a  b  c  
d  e  f  
g  h  i  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a simple loop through input splitted on space and append to <code>ticTacToe</code> list:</p>
<pre><code>ticTacToe = []
for x in input('Enter rows (each element separated by comma) separated by space: ').split():
    ticTacToe.append(x.split(','))

print(ticTacToe)
#Output handled for you
</code></pre>
<p><strong>Sample run</strong>:</p>
<pre><code>Enter rows (each element separated by comma) separated by space: a,b,c d,e,f g,h,i
[['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]
</code></pre>
<p><hr/>
Or, the whole thing in one line:</p>
<pre><code>ticTacToe = [x.split(',') for x in input('Enter rows (each element separated by comma) separated by space: ').split()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Firstly, in python the quotation marks indicate a string, so you must have them there.</p>
<p>Since <code>ticTacToe</code> is a list of lists, you're appending your inputs to the outermost list. To append to the inner lists:</p>
<pre><code>ticTacToe = [ [], [], [] ]

firstRow = input()
secondRow = input()
thirdRow = input()

ticTacToe[0].append(firstRow)
ticTacToe[1].append(secondRow)
ticTacToe[2].append(thirdRow)  

# ticTacToe &gt;&gt;&gt; [['a,b,c'], ['d,e,f'], ['g,h,i']]
</code></pre>
<p>However, going off of the output code, it would seem that this is not what your instructor wants you to do.</p>
<p>Instead, each of the lists need to contain a single character and not the entire string of characters.</p>
<p>It would look something like this:</p>
<pre><code>[['a', 'b', 'c'], ['d', 'e', 'f'], ['g', 'h', 'i']]
</code></pre>
<p>There are many ways to do this, but here is one:</p>
<pre><code>ticTacToe = [[], [], []]

firstRow = input()
secondRow = input()
thirdRow = input()

ticTacToe[0] = firstRow.split(",")
ticTacToe[1] = secondRow.split(",")
ticTacToe[2] = thirdRow.split(",") 
</code></pre>
<p>The <code>split</code> method takes a string and converts it into a list provided a delimiter, a '<code>,</code>' in this case. It then assigns (not appends) to the inner lists. (Note: this won't work if you put a space after your commas, but I'll let you figure that one out)</p>
</div>
<span class="comment-copy">you are confusing variable names, strings that hold <code>'a,b,c'</code> with list of strings that hold <code>['a','b','c']</code> - from your code it is unclear if you stuff variables inside a list or the strings holding 1 letter each ...</span>
<span class="comment-copy">The list initially had <code>[ [], [], [] ]</code> and you are appending to that. So there is no surprise in what you got. Remember <code>.append()</code> just adds entry at the end of list.</span>
<span class="comment-copy">The parts I wrote myself are the inputs and the appending. The input comes in as a string.</span>
<span class="comment-copy">That's a very detailed explanation.</span>
<span class="comment-copy">Thanks so much! Splitting by ',' solved my problem</span>
<span class="comment-copy">Glad, you solved it. If my or any other answer here helped, please press tick on left of answer, so it would be help future readers.</span>
