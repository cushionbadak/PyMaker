<div class="post-text" itemprop="text">
<p>Following script works fine when I try passing a batch file (that doesn't require any arguments) to the function.</p>
<pre><code>script_as_var = os.path.join(os.environ['SOME_VAR'], 'bin/stop.bat')
jboss = os.path.join(os.environ['JBOSS_HOME'], 'bin/jboss-cli.bat')

def status(some_arg, cmd, more_arg):
    print('CMD: ' + cmd)
    ps = subprocess.Popen(cmd, stdout=subprocess.PIPE)
    output = ps.communicate()[0]
    ...
    ...

status(10, script_as_var, 'last_arg')   # Works fine
</code></pre>
<p>However, when I try passing below command to the function, it fails.</p>
<pre><code>status(15, '[jboss,'"'-c'"','"'--commands="'"read-attribute server-state"'"'"']',
       'some_arg')
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>CMD: [jboss,'-c','--commands='"read-attribute server-state"'']
...
FileNotFoundError: [WinError 2] The system cannot find the file specified
</code></pre>
<p>Below command used to work fine when I didn't create a function.</p>
<pre><code>ps = subprocess.Popen([jboss,'-c','--commands='"read-attribute server-state"''],
                      stdout=subprocess.PIPE)
</code></pre>
<p>As you can notice from the output of <code>print</code> command, I was successfully able to somehow (by using the messy single and double quotes combination) pass the exact command that I was able to run when this function was not created but it seems it sill needs some work for <code>jboss</code> variable to expand.</p>
<p>Any idea how I can fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/subprocess.html#popen-constructor" rel="nofollow noreferrer"><code>subprocess.Popen</code></a> constructor will accept either a string or a sequence like a <code>list</code> as its first argument named <em><code>args</code></em>. You code appears to be trying to use both...and here's how to do that correctly. As you can see, it's also expanding the <code>jboss</code> variable as desired.</p>
<pre><code>import os
os.environ['SOME_VAR'] = 'some_var'          # For testing
os.environ['JBOSS_HOME'] = 'jboss_home_var'  # For testing

script_as_var = os.path.join(os.environ['SOME_VAR'], 'bin/stop.bat')
jboss = os.path.join(os.environ['JBOSS_HOME'], 'bin/jboss-cli.bat')

def status(some_arg, cmd, more_arg):
    print('CMD: ' + repr(cmd))
#    ps = subprocess.Popen(cmd, stdout=subprocess.PIPE)
#    output = ps.communicate()[0]
#    ...
#    ...

status(10, script_as_var, 'last_arg')
status(15, [jboss, '-c', '--commands="read-attribute server-state"'], 'some_arg')
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>CMD: 'some_var\\bin/stop.bat'
CMD: ['jboss_home_var\\bin/jboss-cli.bat', '-c', '--commands="read-attribute server-state"']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're passing a <code>str</code> for command. Note that your working example has a <code>list</code>. You just need to get rid of all the extra quoting and pass a list.</p>
<pre><code>&gt;&gt;&gt; def foo(a, b, c):
  print(b) 

&gt;&gt;&gt; jboss = 42

&gt;&gt;&gt; foo(15,'[jboss,'"'-c'"','"'--commands="'"read-attribute server-state"'"'"']','some_arg')
[jboss,'-c','--commands="read-attribute server-state"']

&gt;&gt;&gt; foo(15,[jboss,'-c','--commands="read-attribute server-state"'],'some_arg')
[42, '-c', '--commands="read-attribute server-state"']
</code></pre>
</div>
<span class="comment-copy">Umm, you realize that you're supposed to pass a <i>list</i> to <code>subprocess.Popen</code>, not a string that <i>looks</i> like a list?</span>
<span class="comment-copy">I see this post has been <code>put on hold</code>. It says, "...this one was resolved in a manner unlikely to help future readers". As i have just started learning Python, there may be many others who might commit the same mistake i did so I'm not sure why this post may not be of help for others.</span>
<span class="comment-copy">There might be someone who makes the same mistake as you once in a blue moon, but what's <i>far</i> more likely is that your question will attract views from people who have a completely different problem. Especially with a title like that, which has no relation to the problem whatsoever (the problem isn't related to <i>functions</i> at all). I honestly think this question will do more harm than good.</span>
<span class="comment-copy">I got the point that it has nothing exactly to do with <i>functions</i> but when this issue came up, i was not sure what else to mention as the post title. I was searching for solutions using those keywords only. If you feel removing the <code>function</code> keyword makes it more relevant to the problem i faced, i think you can remove it or i can do the needful. Thanks for the comment.</span>
<span class="comment-copy">Upvoted both the answers. I got the mistake i was committing. By the way, use of <code>repr</code> was nice. Just read about it. Thank you.</span>
