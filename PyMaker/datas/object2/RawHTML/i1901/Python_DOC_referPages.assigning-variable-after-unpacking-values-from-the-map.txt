<div class="post-text" itemprop="text">
<p>From this answer I learned how can I count occurrences of any character in a string using a <code>map</code>,</p>
<p><a href="https://stackoverflow.com/questions/19967001/count-vowels-in-string-python">Count Vowels in String Python</a></p>
<p>Here is my code which counts occurance of any vowels in a string,</p>
<pre><code>name = "maverick dean"
vowels = 'aeiou'
x = list(map(name.lower().count, 'aeiou'))
</code></pre>
<p>As you can see I used list to put each value of a <code>map</code> in a <code>list</code>. </p>
<p>Which gives this output,</p>
<pre><code>[2, 2, 1, 0, 0]
</code></pre>
<p>My desire output is</p>
<pre><code>[ "a:2", "e:2", "i:1", "o:0", "u:0" ]
</code></pre>
<p>Now I understand I can use <code>for</code> loop to do it, but is there any other way to map output of <code>x</code> directly so that it shows alongside the actual vowel?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions" rel="nofollow noreferrer">lambda function</a> for this:</p>
<pre><code>x = list(map(lambda v: "{}:{}".format(v, name.lower().count(v)), vowels))
print(x)
# ['a:2', 'e:2', 'i:1', 'o:0', 'u:0']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension</p>
<pre><code>x = ["%s:%d" % (letter, name.lower().count(letter)) for letter in vowels]
</code></pre>
<p>or you could even use a zip onto the original list i.e.</p>
<pre><code>x = ["%s:%d" % (l,c) for l, c in zip(vowels, map(name.lower().count, vowels))]
</code></pre>
</div>
<span class="comment-copy">Use a lambda. When you need to use a lambda in a <code>map</code> then a list comprehension is probably better.</span>
