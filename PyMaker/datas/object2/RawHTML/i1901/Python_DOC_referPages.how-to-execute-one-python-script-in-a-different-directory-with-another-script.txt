<div class="post-text" itemprop="text">
<p>I am trying to execute one python script (file2.py) through the other (file1.py). 
The first file is located in test/file1.py and the second file in test/test1/file2.py.</p>
<p>As an example file2.py has the following code:</p>
<pre><code>file = open("textfile.txt","w") 
file.write("Hello world")
file.close()
</code></pre>
<p>so I am trying to create a .txt file from file1.py. 
To do so, I have tried several solutions such as:</p>
<pre><code>import Test1.file2
</code></pre>
<p>or </p>
<pre><code>import os 
os.system('Test1/file2.py')
</code></pre>
<p>or</p>
<pre><code>from subprocess import call
call('Test1/file2.py', shell='True')
</code></pre>
<p>in file1.py but none of them seem to work. The first solution works well if I want to import a function but it does not work when I want to create a text file.</p>
<p>Does anyone know what I am doing wrong and how to fix it? </p>
</div>
<div class="post-text" itemprop="text">
<p>To run the other file, you have some options:</p>
<p>The best one is to treat the file as a module, import it, and call it's methods, so you would have to encapsulate the .txt creating inside a method</p>
<pre><code>#on file1.py
def createTxt():
    #your txt creation goes here
</code></pre>
<p>and call <code>createTxt</code> from <code>file2.py</code> importing <code>file1.py</code>, which will run the method and create the txt file</p>
<pre><code>#on file2.py
import file1

createTxt()
</code></pre>
<p>You can also use <code>execfile('file2.py')</code> to execute it and run it as a script or make a system call with <code>os.system('python file2.py')</code> importing <code>os</code> to also run as a script</p>
<p>The first one is safer and a better code in general, avoid using the other two when possible</p>
</div>
<span class="comment-copy">There's a difference between <code>import Test1</code> and <code>import test1</code>. Python is case sensitive. And depending on which python version you're rocking, you might need to create a <code>__init__.py</code> script in the <code>test1</code> folder. Was a while since I did this, but that usually helps. You can also have a look at <a href="https://docs.python.org/3/library/importlib.html#importing-programmatically" rel="nofollow noreferrer">importlib</a> which does this for you.</span>
