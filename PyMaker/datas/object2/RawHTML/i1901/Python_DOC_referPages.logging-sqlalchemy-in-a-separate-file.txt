<div class="post-text" itemprop="text">
<p>I am trying to keep my SQL alchemy logs separate from my custom logs</p>
<pre><code>LOG_LEVEL = 20
LOG_FORMAT = "%(asctime)s %(name)s %(levelname)s %(message)s"
logging.basicConfig(filename='my_log.log', format=LOG_FORMAT, level=LOG_LEVEL)

handler_sql = logging.FileHandler('my_alchemy_log.log')
handler_sql.setFormatter(logging.Formatter(LOG_FORMAT))
sql_logger = logging.getLogger('sqlalchemy.engine')
sql_logger.setLevel(LOG_LEVEL)
sql_logger.addHandler(handler_sql)

logger = logging.getLogger(__name__)
logger.info("this belongs to my_log")

s = sessionmaker(bind=create_engine(CONN_STRING, poolclass=NullPool))
result = s.query(SomeTableModel).filter_by(**kwargs).first()
s.close()
</code></pre>
<p>What's happening is two files are created and they look like below,</p>
<p><strong>my_log.log</strong></p>
<pre><code>2018-10-24 23:35:01,589 main INFO this belongs to my_log
2018-10-24 23:35:01,650 sqlalchemy.engine.base.Engine INFO SHOW VARIABLES LIKE 'sql_mode'
2018-10-24 23:35:01,650 sqlalchemy.engine.base.Engine INFO {}
2018-10-24 23:35:01,689 sqlalchemy.engine.base.Engine INFO SELECT DATABASE()
2018-10-24 23:35:01,689 sqlalchemy.engine.base.Engine INFO {}
2018-10-24 23:35:01,725 sqlalchemy.engine.base.Engine INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2018-10-24 23:35:01,725 sqlalchemy.engine.base.Engine INFO {}
2018-10-24 23:35:01,742 sqlalchemy.engine.base.Engine INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2018-10-24 23:35:01,743 sqlalchemy.engine.base.Engine INFO {}
2018-10-24 23:35:01,756 sqlalchemy.engine.base.Engine INFO BEGIN (implicit)
2018-10-24 23:35:01,770 sqlalchemy.engine.base.Engine INFO SELECT ..............
</code></pre>
<p><strong>my_alchemy_log.log</strong></p>
<pre><code>2018-10-24 23:35:01,650 sqlalchemy.engine.base.Engine INFO SHOW VARIABLES LIKE 'sql_mode'
2018-10-24 23:35:01,650 sqlalchemy.engine.base.Engine INFO {}
2018-10-24 23:35:01,689 sqlalchemy.engine.base.Engine INFO SELECT DATABASE()
2018-10-24 23:35:01,689 sqlalchemy.engine.base.Engine INFO {}
2018-10-24 23:35:01,725 sqlalchemy.engine.base.Engine INFO SELECT CAST('test plain returns' AS CHAR(60)) AS anon_1
2018-10-24 23:35:01,725 sqlalchemy.engine.base.Engine INFO {}
2018-10-24 23:35:01,742 sqlalchemy.engine.base.Engine INFO SELECT CAST('test unicode returns' AS CHAR(60)) AS anon_1
2018-10-24 23:35:01,743 sqlalchemy.engine.base.Engine INFO {}
2018-10-24 23:35:01,756 sqlalchemy.engine.base.Engine INFO BEGIN (implicit)
2018-10-24 23:35:01,770 sqlalchemy.engine.base.Engine INFO SELECT ..............
</code></pre>
<p>The queries repeat in <strong>my_log.log</strong> too! <strong>That's not expected!!!</strong>
What's expected is, that <strong>my_log.log</strong> should only contain <em>"this belongs to my_log"</em> and no queries. Queries should only end up in <strong>my_alchemy_log.log</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>You can do</p>
<pre><code>sql_logger.propagate = False
</code></pre>
<p>which will stop events logged there being propagated to handlers of ancestor loggers (and hence the root logger, which writes to <code>my_log.log</code>).</p>
<p>To turn off <em>all</em> SQLAlchemy logging (not just from <code>sqlalchemy.engine</code>) from <code>my_log.log</code>, you might need to do</p>
<pre><code>logging.getLogger('sqlalchemy').propagate = False
</code></pre>
<p>The <code>propagate</code> flag is documented <a href="https://docs.python.org/3/library/logging.html#logging.Logger.propagate" rel="nofollow noreferrer">here</a>.</p>
</div>
