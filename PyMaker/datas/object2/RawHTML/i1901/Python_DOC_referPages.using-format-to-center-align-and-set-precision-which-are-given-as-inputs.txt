<div class="post-text" itemprop="text">
<p>this is my problem:consider a number like 29.8245,given an amount for precision first this number should be rounded,for instance for <code>precision =0</code> it would be 30.Now this number should be center aligned in a string with a given width. for instance if <code>width = 10</code> then the final result would be:<code>'    30    '</code>
For this particular example I came up with:</p>
<pre><code>"{:^10}".format("{0:.0f}".format(29.8245))
</code></pre>
<p>the problem is that now the numbers are hard coded and I don't know how to fix that to get the inputs into my code.I know that :</p>
<pre><code>"{}".format()
</code></pre>
<p>is what we use in normal cases but in this problem I don't know how to combine these two codes(I don't even know is it possible or not).
Also is there a better approach  to solve the problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is exactly why format strings support nesting:</p>
<pre><code>&gt;&gt;&gt; width = 10
&gt;&gt;&gt; precision = 0
&gt;&gt;&gt; num = 29.825
&gt;&gt;&gt; f'{num:^{width}.{precision}f}'
'    30    '
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is another possible solution that doesn't rely on f-strings</p>
<pre><code>&gt;&gt;&gt; '{0:^{width}.{precision}f}'.format(12.34, width=10, precision=0)
'    12    '
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way to do it the will work in "old" versions of Python (before 3.6) and will continue to work in it as well:</p>
<pre><code>res = "{:^{width}.{precis}f}".format(29.8245, precis=2, width=15)
print(repr(res))
</code></pre>
<p>As you can see, format string syntax supports nesting.</p>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>'     29.82     '
</code></pre>
<p>The values used for <code>precis</code> and <code>width</code> are expressions, so could involve calculations rather than being hardcoded constants as shown.</p>
</div>
<span class="comment-copy">What if the user inputs a number with width greater than <code>width = 10</code> ?</span>
<span class="comment-copy">@Austin well that is one of  my problems,the width could also change</span>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals" rel="nofollow noreferrer">f-strings</a> are great for Python 3.6+ only code.</span>
<span class="comment-copy">Maybe I'm reading the question wrong, but it seemed that calling format twice is exactly what OP was trying to avoid (<i>"I don't know how to combine these two codes"</i>).</span>
<span class="comment-copy">@wim: Obviously I missed that part of the questionâ€”but regardless, there's not reason to call it twice and I have updated my answer accordingly. Thanks for making the point.</span>
