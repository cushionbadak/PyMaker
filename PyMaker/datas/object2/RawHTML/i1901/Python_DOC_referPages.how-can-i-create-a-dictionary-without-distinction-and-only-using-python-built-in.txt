<div class="post-text" itemprop="text">
<p>I have two lists. Both of sizes are 1013x1. They look like below;</p>
<pre><code>l1=["Volkswagen","Toyota","Toyota","Peugeot",..,"Volkswagen","Ford","Toyota","Volvo","Volkswagen"]

l2=[739,403,347,336,310,308,...,302,302,386,370,324]
</code></pre>
<p>I am trying to create dictionary with them. l1 should be key and l2 should be value. The code is here:</p>
<pre><code>d = dict(zip(l1, l2))
</code></pre>
<p>and d looks like</p>
<pre><code> {'"Audi"': 122, '"BMW"': 141, '"Citroen"': 129, '"Ford"': 203, '"Honda"': 121, '"Hyundai"': 112, '"Kia"': 196, '"Mazda"': 250, '"Mercedes-Benz"': 151, '"Mitsubishi"': 145, '"Nissan"': 131, '"Opel"': 110, '"Peugeot"': 143, '"Skoda"': 510, '"Subaru"': 80, '"Suzuki"': 132, '"Tesla"': 553,'"Toyota"': 102, '"Volkswagen"': 461, '"Volvo"': 416}
</code></pre>
<p>Why is size of d 20? As I understand it is distinct with <strong>l1</strong>. How can I create a dictionary without distinction only using python built-in funtions?</p>
</div>
<div class="post-text" itemprop="text">
<p>Each key can only appear once in a dictionary, but you can have a list as the value:</p>
<pre><code>d = dict()
for key, val in zip(l1, l2):
    if key in d:
        d[key].append(val)
    else:
        d[key] = [val]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your dictionary is of size 20 because you have duplicate keys in <code>l1</code>. Onle the last given <code>value</code> of each <code>key</code> "lives" the others are overwritten. You can append all <code>values</code> to a <code>key</code>, if you store a <code>list of values</code> instead only the <code>value</code> stored by that <code>key</code>.</p>
<p>As alternative to a plain dict you can leverage <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">the <code>defaultdict</code> from the <code>collections</code> module</a>:</p>
<pre><code>from collections import defaultdict

l1=["Volkswagen","Toyota","Toyota","Peugeot","Volkswagen","Ford","Toyota","Volvo","Volkswagen"]
l2=[739,403,347,336,310,308, 302,302,386]
k = defaultdict(list)

for key,value in zip(l1,l2):
    k[key].append(value)

print(k)
</code></pre>
<p>Output:</p>
<pre><code>defaultdict(&lt;class 'list'&gt;, 
{'Volkswagen': [739, 310, 386], 'Toyota': [403, 347, 302], 
 'Peugeot': [336], 'Ford': [308], 'Volvo': [302]})
</code></pre>
<p>This is only feasable if you consider imports of basic modules as "python built-in functions".</p>
</div>
<span class="comment-copy">Dicts contain each key once. There can be no repetitions. If this is indeed what you're asking, that's impossible.</span>
<span class="comment-copy">Sounds like you want a tuple instead of a list.</span>
