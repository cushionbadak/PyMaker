<div class="post-text" itemprop="text">
<p>I have a python program that accepts three command line arguments -f (file1) -n (file2) -o (file3). </p>
<p>The program is structured as follows:</p>
<pre><code>ffile=''
nfile=''
ofile=''

try:
   myopts, args = getopt.getopt(sys.argv[1:],"f:n:o:h:")
   for x,y in myopts:
       if x == '-f':
          ffile=y
       elif x == '-n':
          nfile=y
       elif x == '-o':
          ofile=y

   &lt;do something here with the files&gt;
except:
       sys.stderr("err.txt",w)
       sys.exit(2)
</code></pre>
<p>What I am trying to do is:</p>
<ol>
<li>If any of the arguments (-f,-n) are missing, then print a corresponding error.

<ol start="2">
<li>Print the error message - whatever it might be - to a file "err.txt".</li>
</ol></li>
</ol>
<p>However, the err.txt file is empty. I am not sure what is going on. I have seen many questions where stderr is written to a file, but it does not seem to answer my question. </p>
</div>
<div class="post-text" itemprop="text">
<p>If you are open to changing your approach, I would recommend not trying to re-invent the wheel, and checking out some of the existing python libraries to accomplish this functionality.</p>
<p>There is a library called <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse </a> that does well at parsing out command line arguments and returning appropriate error messages, maybe you would find it helpful.</p>
<pre><code>import argparse
p = argparse.ArgumentParser(description='My Program', formatter_class=argparse.ArgumentDefaultsHelpFormatter)
p.add_argument("-f", type=str, help="-f file", required=True)
p.add_argument("-n", type=str, help="-n file", required=True)
p.add_argument("-o", type=str, help="-o file", default=None)

args = p.parse_args() # will throw error if required -f and -n args not passed
</code></pre>
<p>In terms of error logging, you could try using the python <a href="https://docs.python.org/2/library/logging.html" rel="nofollow noreferrer">logging</a> library. This library can be configured to log information to stdout, text files, etc. and is likely flexible enough for your requirements.</p>
</div>
<span class="comment-copy">Thanks so much!! This is great</span>
