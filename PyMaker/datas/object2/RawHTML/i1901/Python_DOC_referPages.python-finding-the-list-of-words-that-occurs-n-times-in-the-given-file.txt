<div class="post-text" itemprop="text">
<p>I want to find a list of word which occurs n times(for example 200) in a given file. For this purpose I get the the each unique tokens in the file with the following code but I couldn't understand how can I get the ones with the condition of occuring n times.</p>
<pre><code>from collections import Counter
import re

seen = list()
words = re.findall(r'[\w+]+', open('deneme.txt').read())
seen = Counter(words).most_common()
</code></pre>
<p>Output is:</p>
<pre><code>[('Erke', 4), ('a√ß+Noun', 4), ('Antalya', 3), ('123', 3), ('ol+Verb', 3), ('Varol', 2), ('Koleji', 1), ('asdfsdf', 1), ('birak+Verb', 1)]
</code></pre>
<p>For example I want to get tokens with occuring of 3 times. How can I achieve this. I can't reach the number of occurance in the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer">list comprehension</a>:</p>
<pre><code>from collections import Counter
import re

seen = list()
words = re.findall(r'[\w+]+', open('deneme.txt').read())
seen = Counter(words).most_common()

print([w for w, c in seen if c == 3])
</code></pre>
<p><strong>Output</strong></p>
<pre><code> ['123', 'Antalya', 'ol+Verb']
</code></pre>
</div>
<span class="comment-copy">An easier way to do this would be to create a dictionary of all of the words with a value of the count of each word, then look at your dictionary for all words the occur n times</span>
<span class="comment-copy">[ (x,y) for (x,y) in your_array_element if y == 3 ]</span>
<span class="comment-copy">@SPYBUG96 It's not any easier than list comprehension.  You still end up looping through the <code>dict</code>/<code>list</code> either way.</span>
<span class="comment-copy"><code>[e[0] for e in seen if e[1] == 3]</code> will be useful if your tuples in list have too many elements.</span>
<span class="comment-copy">@RockyLi Under what circumstances would that happen?  <a href="https://docs.python.org/3/library/collections.html#collections.Counter.most_common" rel="nofollow noreferrer"><code>Counter.most_common</code></a> always produces tuples of width 2.</span>
<span class="comment-copy">You're right, not in this case.</span>
