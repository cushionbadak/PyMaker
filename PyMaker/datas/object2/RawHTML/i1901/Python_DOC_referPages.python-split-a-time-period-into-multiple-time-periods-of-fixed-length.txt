<div class="post-text" itemprop="text">
<p>Given two dates, I would like to generate a list of dates with a fixed time length in between one another using <em>datetime</em>, starting from the later date.
For instance, given <code>01/01/2018</code> and <code>01/09/2018</code> and time interval of 2 months the output would be:</p>
<pre><code>[01/01/2018, 01/03/2018, 01/05/2018, 01/07/2018, 01/09/2018]
</code></pre>
<p>For an interval of 3 months:</p>
<pre><code>[01/03/2018, 01/06/2018, 01/09/2018]
</code></pre>
<p>I cannot just subtract months using the <code>.replace</code> method on a <em>datetime</em> object since going from a 31 days month to a 30 days month would return an error.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think <code>relativedeleta</code> module can help you on this - <code>pip install python-dateutil</code></p>
<pre><code>from dateutil.relativedelta import *
import datetime
date1 = datetime.datetime.strptime('01/01/2018', "%d/%m/%Y").date()
date2 = datetime.datetime.strptime('01/09/2018', "%d/%m/%Y").date()
f = [(date1 + relativedelta(months=i)).strftime("%d/%m/%Y") for i in range(date1.month, date2.month,2)]
</code></pre>
<p>Result will be - ['01/02/2018', '01/04/2018', '01/06/2018', '01/08/2018']</p>
</div>
<div class="post-text" itemprop="text">
<p>You did specify <em>datetime</em>, but if you're interested,<br/>
a <code>time.localtime</code> object can be broken down like so:   </p>
<pre><code>import time

secSinceEpoch = time.time()
currentTime = time.localtime(secSinceEpoch)
month = currentTime.tm_mon
day = currentTime.tm_mday
year = currentTime.tm_year
hour = currentTime.tm_hour
min = currentTime.tm_min
sec = currentTime.tm_sec
</code></pre>
<p>From here you could perform operations on specific parts of the date/time...</p>
</div>
<span class="comment-copy">If you are happy to use pandas then see <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.interval_range.html" rel="nofollow noreferrer">pandas.interval_range</a></span>
<span class="comment-copy">I would rather stick with datetime, but I will look into this if nothing else comes up thanks.</span>
<span class="comment-copy">Read about <a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta" rel="nofollow noreferrer">datetime.timedelta</a></span>
<span class="comment-copy">The problem with timedelta is that I cannot move from one date to another in time steps bigger than weeks</span>
<span class="comment-copy">Thank you, how would you amend your code if the time period was over a year? Since you are using the month of each date.</span>
<span class="comment-copy">you can pass month difference init to range function -  <code>date_diff = relativedelta(date2, date1)</code> <code>month_diff = date1.month + date_diff.months * (date_diff.years+1)</code></span>
