<div class="post-text" itemprop="text">
<p>I wanted to use the values for self.value which I have initiated in function "take" inside the function of "func1". However, I received an error when trying to do so.</p>
<p>code:</p>
<pre><code>class all():
    def __init__(self):
        self.temp = self.value # Here I declare it first before the self.new but still get error. May I know why?
        if:
            **func**
        else:
            **func**
        self.new = self.func1()

    def func1(self):
        **func**
        return ["{}".format(self.temp)]

    def take(value):
#In this example, the value already contained some values. and already been called. but in another program not in the same program.
        self.value = value
</code></pre>
<p>Error:</p>
<pre><code>AttributeError: "all" object has no attribute "value"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>the reason of behind the occurs this error, you didn't define the value in the constructor(<strong>init</strong>) method.</p>
<pre><code>    def __init__(self):
        self.value = 20(example purpose)
</code></pre>
</div>
<span class="comment-copy">You have to <i>call</i> <code>take</code> if you want <code>self.value</code> to be created...</span>
<span class="comment-copy">You probably shouldn't call your class <code>all</code>, since <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">that is the name of a built-in function</a>.</span>
<span class="comment-copy">But I have already called take. Its still giving me the same error</span>
<span class="comment-copy">Im sorry for confusing but I have already defined the value before by calling it in another program. It has already stored with values.</span>
<span class="comment-copy">you need to access self.temp = self.value instead of self.temp = value.</span>
<span class="comment-copy">you need to declare the self.value in init method as I gave you answer your question. if you will not declare the variable you will get the error.</span>
<span class="comment-copy">you didn't do the declare self.value in init method, kindly add code into the init method something like this self.value = 20 # example.</span>
<span class="comment-copy">your final code may be something like this.  class all:     def __init__(self):                  self.value = 20 # example purpose         self.temp = self.value         self.func1()      def func1(self):         self.take(self.value)         return ["{}".format(self.value)]      def take(self, value):         self.value = value   all = all()  Please arrage the code.</span>
