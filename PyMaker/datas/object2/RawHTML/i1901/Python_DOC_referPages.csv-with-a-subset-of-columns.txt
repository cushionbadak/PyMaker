<div class="post-text" itemprop="text">
<p>Write a function named "filter_columns" that takes a string as a parameter representing the name of a CSV file with 5 columns in the format "string,int,int,int,int" and writes a file named "distant.csv" containing only the first and fifth columns from the input file.</p>
<pre><code>import csv
def filter_columns(csvfile):
    with open(csvfile, 'r') as rf:
        reader = csv.reader(rf)
        with open('distant.csv', 'w') as wf:
            writer = csv.writer(wf)
            for item in reader:
                writer.writerow(item[0] + str(int(item[4])))
</code></pre>
<p>When inputting in the file items.csv</p>
<pre><code>bed,7,22,137,157
defender,14,58,185,61
</code></pre>
<p>I should get </p>
<pre><code>bed,157
defender,61
</code></pre>
<p>But, I am getting </p>
<pre><code>b,e,d,1,5,7
d,e,f,e,n,d,e,r,6,1
</code></pre>
<p>How do I remove the unwanted commas?</p>
</div>
<div class="post-text" itemprop="text">
<p>From the docs, <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">https://docs.python.org/3/library/csv.html</a>, csvwrite.writerow takes an iterable as argument.</p>
<p>When you write <code>item[0]+str(int(item[4]))</code>, you are producing a string, which is a list of characters. Hence the output is like <code>d,e,f,e,n,d,e,r,6,1</code>.</p>
<p>I might want to try:</p>
<pre><code>import csv
def filter_columns(csvfile):
    with open(csvfile, 'r') as rf:
        reader = csv.reader(rf)
        with open('distant.csv', 'w') as wf:
            writer = csv.writer(wf)
            for item in reader:
                print(item)
                writer.writerow([item[0]]+[str(int(item[4]))])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to edit your <code>writerow</code>.</p>
<pre><code>writer.writerow([item[0]]+[item[4]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are passing the string <code>item[0] + str(int(item[4]))</code> to <code>writer.writerow</code>. For example, for the first row you're passing <code>"bed157"</code>, when <code>writer.writerow</code> expects an iterable (e.g. a list) it converts the string you are passing to ["b", "e", "d", "1", "5", "7"].</p>
<p>You need to pass a list/tuple:</p>
<pre><code>import csv

def filter_columns(csvfile):
    with open(csvfile, 'r') as rf:
        reader = csv.reader(rf)
        with open('distant.csv', 'w') as wf:
            writer = csv.writer(wf)
            for row in reader:
                writer.writerow([row[0], str(row[4])])
</code></pre>
</div>
<span class="comment-copy">writer.writerow([item[0],item[-1]])  , this should do.</span>
