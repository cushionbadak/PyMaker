<div class="post-text" itemprop="text">
<p>I have a problem with my Python program. I am trying to make a word counter, an exercise from <a href="https://exercism.io/my/solutions/f33b5167ea1b4d14ae1ad01e9be42816" rel="nofollow noreferrer">Exercism</a>.</p>
<p>Now, my program must pass 13 tests, all of which are diffrent strings with spaces, characters, digits, etc.
I used to have a problem because I would replace all non-letters and non-digits by a space. This created problem's for words like <code>"don't"</code>, because it would divided it into two strings, <code>don</code> and <code>t</code>. To counter this I added an <code>if</code> statement excluding single <code>'</code> marks from being replaced, which worked. </p>
<p>However, one of the strings I must test is <code>"Joe can't tell between 'large' and large."</code>. The problem is that since I exclude <code>'</code> markets, here <code>large</code> and <code>'large'</code> are considered as two different things, also they are the same word. How do I tell my program to "erase" quotes <em>surrounding</em> a word? </p>
<p>Here is my code, and I have added two scenarios, one being the string above, and the other being another string with only one <code>'</code> mark that you should not delete:</p>
<pre><code>def word_count(phrase):
    count = {}
    for c in phrase:
        if not c.isalpha() and not c.isdigit() and c != "'":
            phrase = phrase.replace(c, " ")
    for word in phrase.lower().split():
        if word not in count:
            count[word] = 1
        else:
            count[word] += 1
    return count

print(word_count("Joe can't tell between 'large' and large."))
print(word_count("Don't delete that single quote!"))
</code></pre>
<p>Thank you for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>.strip()</code> to take off the first and last characters once you have them in the list - <a href="https://python-reference.readthedocs.io/en/latest/docs/str/strip.html" rel="nofollow noreferrer">https://python-reference.readthedocs.io/en/latest/docs/str/strip.html</a></p>
<pre><code>def word_count(phrase):
    count = {}
    for c in phrase:
        if not c.isalpha() and not c.isdigit() and c != "'":
            phrase = phrase.replace(c, " ")
    print(phrase)
    for word in phrase.lower().split():
        word = word.strip("\'")
        if word not in count:
            count[word] = 1
        else:
            count[word] += 1
    return count
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The module <a href="https://docs.python.org/3/library/string.html#string.punctuation" rel="nofollow noreferrer">string</a> holds some nice text constants - important for you would be <code>punctuation</code>. The module <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">collections holds Counter</a> - a specialized dictionary class used to count things:</p>
<pre><code>from collections import Counter 
from string import punctuation

# lookup in set is fastest 
ps = set(string.punctuation)  # "!#$%&amp;'()*+,-./:;&lt;=&gt;?@[\]^_`{|}~

def cleanSplitString(s):
    """cleans all punctualtion from the string s and returns split words."""
    return ''.join([m for m in s if m not in ps]).lower().split()

def word_count(sentence):
    return dict(Counter(cleanSplitString(sentence))) # return a "normal" dict

print(word_count("Joe can't tell between 'large' and large.")) 
print(word_count("Don't delete that single quote!"))
</code></pre>
<p>Output:</p>
<pre><code>{'joe': 1, 'cant': 1, 'tell': 1, 'between': 1, 'large': 2, 'and': 1}
{'dont': 1, 'delete': 1, 'that': 1, 'single': 1, 'quote': 1}
</code></pre>
<hr/>
<p>If you want to keep the punctuations inside words, use: </p>
<pre><code>def cleanSplitString_2(s):
    """Cleans all punctuations from start and end of words, keeps them if inside."""
    return [w.strip(punctuation) for w in s.lower().split()] 
</code></pre>
<p>Output:</p>
<pre><code>{'joe': 1, "can't": 1, 'tell': 1, 'between': 1, 'large': 2, 'and': 1}
{"don't": 1, 'delete': 1, 'that': 1, 'single': 1, 'quote': 1} 
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer">Readup on <code>strip()</code></a></p>
</div>
<span class="comment-copy">Check out <a href="https://docs.python.org/3.7/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>str.strip()</code></a></span>
