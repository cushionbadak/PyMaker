<div class="post-text" itemprop="text">
<p>It seems like a trivial task however, I can't find a solution for doing this using python. </p>
<p>Given the following string:</p>
<pre><code>"Lorem/ipsum/dolor/sit         amet consetetur"
</code></pre>
<p>I would like to output</p>
<pre><code>"Lorem/ipsum/dolor/sit         ametconsetetur"
</code></pre>
<p>Hence, removing the single whitespace between <code>amet</code> and <code>consetetur</code>.</p>
<p>Using <code>.replace(" ","")</code> replaces all whitespaces, giving me:</p>
<pre><code>"Lorem/ipsum/dolor/sitametconsetetur"
</code></pre>
<p>which is not what I want. How can I solve this?</p>
</div>
<div class="post-text" itemprop="text">
<p>use regex and word boundary:</p>
<pre><code>&gt;&gt;&gt; s="Lorem/ipsum/dolor/sit         amet consetetur"
&gt;&gt;&gt; import re
&gt;&gt;&gt; re.sub(r"\b \b","",s)
'Lorem/ipsum/dolor/sit         ametconsetetur'
&gt;&gt;&gt;
</code></pre>
<p>This technique also handles the more general case:</p>
<pre><code>&gt;&gt;&gt; s="Lorem/ipsum/dolor/sit         amet consetetur      adipisci velit"
&gt;&gt;&gt; re.sub(r"\b \b","",s)
'Lorem/ipsum/dolor/sit         ametconsetetur      adipiscivelit'
</code></pre>
<p>for start &amp; end spaces, you'll have to work slightly harder, but it's still doable:</p>
<pre><code>&gt;&gt;&gt; s=" Lorem/ipsum/dolor/sit         amet consetetur      adipisci velit "
&gt;&gt;&gt; re.sub(r"(^|\b) (\b|$)","",s)
'Lorem/ipsum/dolor/sit         ametconsetetur      adipiscivelit'
</code></pre>
<p>Just for fun, a last variant: use <code>re.split</code> with a multiple space separation, preserve the split char using a group, then join the strings again, removing the spaces only if the string has some non-space in it:</p>
<pre><code>"".join([x if x.isspace() else x.replace(" ","") for x in re.split("( {2,})",s)])
</code></pre>
<p>(I suppose that this is slower because of list creation &amp; join though)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>s[::-1].replace(' ', '', 1)[::-1]
</code></pre>
<ul>
<li>Reverse the string</li>
<li>Delete the first space</li>
<li>Reverse the string back</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
a="Lorem/ipsum/dolor/sit         amet consetetur"
print(re.sub('(\w)\s{1}(\w)',r'\1\2',a))
</code></pre>
</div>
<span class="comment-copy">Most of us would use a regular expression (regex) to find a single space surrounded by non-spaces.  Feed "Python regex" to your search engine and pick a handy tutorial.</span>
<span class="comment-copy">.. or wait about 15 seconds ...</span>
<span class="comment-copy">@timgeb that doesn't mean that this isn't a duplicate. Just, not of that one.</span>
<span class="comment-copy">Well, then it's reopened until someone finds a better target. :)</span>
<span class="comment-copy">@timgeb wise decision. I tried to look for a better target but google wasn't my friend. There may be one, but well hidden. If someone finds a good dupe, just ping me I'll close</span>
<span class="comment-copy">Thanks so much! This works wonderfully! :)</span>
<span class="comment-copy">You can also use: <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">re.sub()</a> <code>text = "Lorem/ipsum/dolor/sit         amet consetetur"</code> <code>re.sub(" ", "", text, 1)</code></span>
<span class="comment-copy">err, no that doesn't work. Have you tried it? it'll replace one of the many spaces that OP doesn't want to replace, leaving the space between amet and consetetur intact...</span>
<span class="comment-copy">This might work in this very specific case, but is in no way a general solution.</span>
<span class="comment-copy">Yes, of course, I'm not trying to solve a general problem. The OP didn't provide sufficient information to determine what the 'general problem' is, in this case.  If you read the question, you'll see they're asking for replacing a single whitespace, which this does.</span>
<span class="comment-copy">your solution replaces the <i>last</i> whitespace. It would replace the last whitespace in multiple-space string if it was in the end too. OP example isn't well chosen, agreed but question is clear "replace a single whitespace without replacing multiple whitespaces"</span>
<span class="comment-copy">Thank you for the code snippet, which might provide some limited, immediate help. A proper explanation would greatly improve its <a href="https://meta.stackexchange.com/q/114762/206345">long-term value</a> by describing why this is a good solution to the problem, and would make it more useful to future readers with other similar questions. Please edit your answer to add some explanation, including the assumptions you've made.</span>
