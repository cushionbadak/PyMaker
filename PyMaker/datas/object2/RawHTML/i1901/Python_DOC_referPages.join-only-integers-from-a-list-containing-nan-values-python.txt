<div class="post-text" itemprop="text">
<p>I have the following list that contains integers and nan values:</p>
<pre><code>x = [8, 8, 3, 3, 2, 9, nan, nan, nan, 4, 1, 9, 4, 8, 2, nan, nan, nan, nan, 2, 2, 1, 1, 1, 2, nan, nan, nan, nan, 4, 1, 9, 5, 8, 3, 8, 8, 8, 3, 4, 2, nan]
</code></pre>
<p>I want to join the integers in order to become one number and the nan values to remain in their position. Also, each new number should contain 6 digits.</p>
<p>The new list should look like this:</p>
<pre><code>x = [883329, nan, nan, nan, 419482, nan, nan, nan, nan, 221112, nan, nan, nan, nan, 419583, 888342, nan]
</code></pre>
<p>I tried the following code, but it's not what I want</p>
<pre><code>y =''.join(str(n) for n in x)
k=list(map(''.join, zip(*[iter(y)]*6))) 
k = [883329, nannan, nan419, 482nan, nannan, nan221, 112nan, nannan, nan419, 583888, 342nan]
</code></pre>
<p>Any suggestions on how to fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could do the following, using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">groupby</a> and the <a href="https://stackoverflow.com/questions/8991506/iterate-an-iterator-by-chunks-of-n-in-python">grouper</a> recipe:</p>
<pre><code>from numpy import nan, isnan
from itertools import groupby, zip_longest

x = [8, 8, 3, 3, 2, 9, nan, nan, nan, 4, 1, 9, 4, 8, 2, nan, nan, nan, nan, 2, 2, 1, 1, 1, 2, nan, nan, nan, nan, 4, 1,
     9, 5, 8, 3, 8, 8, 8, 3, 4, 2, nan]


def grouper(n, iterable, fillvalue=None):
    "grouper(3, 'ABCDEFG', 'x') --&gt; ABC DEF Gxx"
    args = [iter(iterable)] * n
    return zip_longest(fillvalue=fillvalue, *args)


result = []
for k, v in groupby(x, key=isnan):
    if k:
        result.extend(list(v))
    else:
        result.extend(int(''.join(g)) for g in grouper(6, map(str, v)))

print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[883329, nan, nan, nan, 419482, nan, nan, nan, nan, 221112, nan, nan, nan, nan, 419583, 888342, nan]
</code></pre>
</div>
