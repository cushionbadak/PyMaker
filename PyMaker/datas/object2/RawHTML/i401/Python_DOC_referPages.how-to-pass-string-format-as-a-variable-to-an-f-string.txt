<div class="post-text" itemprop="text">
<p>I am using f-strings, and I need to define a format that depends upon a variable.</p>
<pre><code>def display_pattern(n):
    temp = ''
    for i in range(1, n + 1):
        temp = f'{i:&gt;3}' + temp
        print(temp)
</code></pre>
<p>If it is relevant, the output of <code>display_pattern(5)</code> is:</p>
<pre><code>  1
  2  1
  3  2  1
  4  3  2  1
  5  4  3  2  1
</code></pre>
<p>I wonder if it is possible to manipulate the format <code>&gt;3</code>, and pass a variable instead. For example, I have tried the following:</p>
<pre><code>def display_pattern(n):
    spacing = 4
    format_string = f'&gt;{spacing}' # this is '&gt;4'
    temp = ''
    for i in range(1, n + 1):
        temp = f'{i:format_string}' + temp
        print(temp)
</code></pre>
<p>However, I am getting the following error:</p>
<pre><code>Traceback (most recent call last):
  File "pyramid.py", line 15, in &lt;module&gt;
    display_pattern(8)
  File "pyramid.py", line 9, in display_pattern
    temp = f'{i:format_string}' + temp
ValueError: Invalid format specifier
</code></pre>
<p>Is there any way I can make this code work? The main point is being able to control the spacing using a variable to determine the amount of padding.</p>
</div>
<div class="post-text" itemprop="text">
<p>you should to put the <code>format_string</code> as variable</p>
<pre><code>temp = f'{i:{format_string}}' + temp
</code></pre>
<p>the next code after <code>:</code> is not parsed as variable until you clearly indicate.
And thank @timpietzcker for the link to the docs: <a href="https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals" rel="nofollow noreferrer">formatted-string-literals</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You need to keep the alignment and padding tokens separate from each other:</p>
<pre><code>def display_pattern(n):
    padding = 4
    align = "&gt;"
    temp = ''
    for i in range(1, n + 1):
        temp = f'{i:{align}{padding}}' + temp
        print(temp)
</code></pre>
<p>EDIT:</p>
<p>I think this isn't quite correct. I've done some testing and the following works as well:</p>
<pre><code>def display_pattern(n):
    align = "&gt;4"
    temp = ''
    for i in range(1, n + 1):
        temp = f'{i:{align}}' + temp
        print(temp)
</code></pre>
<p>So I can't really say why your method wouldn't work...</p>
</div>
<span class="comment-copy">You can nest variables up to one level: <a href="https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals" rel="nofollow noreferrer">docs.python.org/3/whatsnew/â€¦</a></span>
<span class="comment-copy">yes but the next code after <code>:</code> is not parsed as variable until you clearly indicate.</span>
<span class="comment-copy">@bearbrown, thanks for providing a detailed explanation. This solves all my doubts.</span>
<span class="comment-copy">why putting a nested <code>{}</code> works in this case? I mean <code>{align}</code> and <code>{padding}</code> are inside <code>{}</code>.</span>
<span class="comment-copy">i think you should not to delete your post it helped me to find the solution.</span>
