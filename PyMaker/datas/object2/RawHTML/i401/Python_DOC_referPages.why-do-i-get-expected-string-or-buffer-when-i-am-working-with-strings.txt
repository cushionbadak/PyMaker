<div class="post-text" itemprop="text">
<p>I am working with Python's re.sub function. It's throwing a TypeError: "expected string or buffer." After debugging and adding plenty of assert statements to check that I am passing strings to re.sub, I am still unsure about why I am getting the exception. Below, please see: my code, the error stack, and other related questions I have perused.</p>
<pre><code>import json
import re
import string
def readFile(filename):
    p = re.compile('[1-9]*[1-9]')
    def n2w(_string):
        isInt = True
        stringToReturn = ""
        try:
            stringToReturn = num2words(int(_string))
        except:
            stringToReturn = _string
        assert isinstance(stringToReturn,str)
        return stringToReturn
    def convertNumbersToWords(_string):
        #Error: expected string?
        assert isinstance(_string,str)
        _string_copy = p.sub(_string,n2w)
        return _string_copy
    questions = []
    articleTitles = []
    articleTexts = []
    answers = [] # Stores questions and article titles and article contents and their associated answers, which are stored as strings.
    # I can access the questions by using [:,0]
    #TODO: Find a way to store questions and article content as keys.
    # TODO: Convert unicode to string.
    #NOTE: I use questions_answers rather than articleTitles_answers because articles can have multiple answers.
    with open(filename) as file:
        data = json.load(file)
        articles = data["data"]
        # Iterate through articles, looking for question/answer pairs.
        for article in articles:
            article_title = str(article["title"].encode('utf-8','replace')) # Converts Unicode object to string.
            article_paragraphs = article["paragraphs"]

            article_text = "".join([str(paragraph["context"].encode('ascii','replace')) for paragraph in article_paragraphs])
            if (len(article_paragraphs) == 0):
                print("O")
            for paragraph in article_paragraphs:
                qas_pairs = paragraph["qas"]
                # Check if this paragraph has questions.
                if (len(qas_pairs) == 0):
                    print("O")
                for qas_pair in qas_pairs:
                    # Note: There's another attribute called "context", which may come in handy.
                    answer = qas_pair["answers"][0]
                    answer_text = str(answer["text"].encode('ascii','replace')) # Converts Unicode object to string.
                    # Get where to find the answers.
                    #answer_start = answer["answer_start"]
                    #answer_end = answer_start + len(answer_text) - 1
                    question = str(qas_pair["question"].encode('ascii','replace'))
                    # Replace numeric characters with English words.
                    question = convertNumbersToWords(question)
                    answer_text = convertNumbersToWords(answer_text)
                    article_title = convertNumbersToWords(article_title)
                    article_text = convertNumbersToWords(article_text)
                    # Remove special characters.
                    from string import punctuation
                    question = question.strip(punctuation)
                    answer_text = answer_text.strip(punctuation)
                    article_title = article_title.strip(punctuation)
                    article_text = article_text.strip(punctuation)
                    questions.append(question)
                    articleTitles.append(article_title)
                    articleTexts.append(article_text)
                    answers.append(answer_text)
    print("All done")
    extractedData = np.array(questions,articleTitles,articleTexts,answers)
    return extractedData
</code></pre>
<blockquote>
<p>--------------------------------------------------------------------------- TypeError                                 Traceback (most recent call
  last)  in ()
  ----&gt; 1 trainingData = readFile("train-v1.1.json")
        2 from sys import getsizeof
        3 print("Finished loading training data.")
        4 print("Size of training data:",getsizeof(trainingData))</p>
<p> in readFile(filename)
       51                     question = str(qas_pair["question"].encode('ascii','replace'))
       52                     # Replace numeric characters with English words.
  ---&gt; 53                     question = convertNumbersToWords(question)
       54                     answer_text = convertNumbersToWords(answer_text)
       55                     article_title = convertNumbersToWords(article_title)</p>
<p> in convertNumbersToWords(_string)
       16         #Error: expected string?
       17         assert isinstance(_string,str)
  ---&gt; 18         _string_copy = p.sub(_string,n2w)
       19         return _string_copy
       20     questions = []</p>
<p>TypeError: expected string or buffer</p>
</blockquote>
<p><strong>Other questions</strong></p>
<p><a href="https://stackoverflow.com/questions/16193521/typeerror-expected-string-or-">TypeError: expected string or buffer</a>
<a href="https://stackoverflow.com/questions/22574770/typeerror-expected-string-or-buffer-while-using-regular-expression-in-python">TypeError: expected string or buffer while using regular expression in python</a>
<a href="https://stackoverflow.com/questions/22896914/python-re-search-error-typeerror-expected-string-or-buffer">python re.search error TypeError: expected string or buffer</a></p>
<p>These questions specifically address a situation where a regex function is receiving strings; since I have done the legwork to ensure this is true, I feel these questions are irrelevant.</p>
</div>
<div class="post-text" itemprop="text">
<p>For starters, you may want to change <code>_string_copy = p.sub(_string,n2w)</code> to <code>_string_copy = p.sub(n2w,_string)</code>. In addition, it would help if you can also provide a sample of your JSON file. Then, though not sure what you want, you might consider changing <code>extractedData = np.array(questions,articleTitles,articleTexts,answers)</code> to <code>extractedData = np.array([questions,articleTitles,articleTexts,answers])</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Your code contains instruction: <code>_string_copy = p.sub(_string,n2w)</code> and the other
answer suggests to change it to <code>_string_copy = p.sub(n2w, _string)</code>.</p>
<p>I agree with that (the first parameter should be the replacement expression),
but I spotted another detail raising my doubts, concerning <code>n2w</code> function.</p>
<p>Look e.g. at <a href="https://docs.python.org/3.7/library/re.html" rel="nofollow noreferrer">https://docs.python.org/3.7/library/re.html</a> - a documentation
of <em>re</em> module and find fragment <em>If repl is a function</em>.</p>
<p>The next sentence states: <em>The function takes a single <strong>match object</strong> argument</em>,
but in your code <code>n2w</code> function has a <strong>_string</strong> as a parameter.</p>
<p>Unfortunately, I'm unable to reproduce the error, since I have no
input file, so I limit my post to just making you aware of the above
discrepancy.</p>
<p>Maybe you should change the parameter to <strong>match</strong> (match object) and rework
the content accordingly? The string just matched you can obtain with
<code>_string = match.group()</code>.</p>
<p>I spotted also such a weird detail in <code>p = re.compile('[1-9]*[1-9]')</code>:</p>
<p>Look at the regex. It contains:</p>
<ul>
<li><code>[1-9]*</code> - a sequence of digits (1 to 9), possibly empty,</li>
<li><code>[1-9]</code> - another (single) digit.</li>
</ul>
<p>Why didn't you write just <code>[1-9]+</code>? It means just the same (a non-empty
sequence of digits), but is shorter and less complicated.</p>
</div>
<span class="comment-copy">The arguments are in wrong order: <a href="https://docs.python.org/3/library/re.html#re.Pattern.sub" rel="nofollow noreferrer">docs.python.org/3/library/re.html#re.Pattern.sub</a></span>
<span class="comment-copy">@KlausD. Oops! I guess it follows the logic: "substitute ___ for ___"  - this may be the first Python function I've seen where the affected object isn't the first argument.</span>
