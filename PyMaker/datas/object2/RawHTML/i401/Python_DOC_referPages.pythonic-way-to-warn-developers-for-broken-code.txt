<div class="post-text" itemprop="text">
<p>Is there a pythonic way to throw an exception to other developers to warn them about using a piece of code with bugs in it?</p>
<p>For example:</p>
<pre><code>def times_two(x):
    raise BrokenException("Attn.This code is unreliable. Only works on positive numbers")
     x = abs(x) * 2
     return x
</code></pre>
<p>I understand that I can raise a generic exception with a message, or even derive my own exception classes, but i just want to know if there is a built-in, pythonic way to do something like this.</p>
<p>And also, I understand that why the actual <code>times_two</code> function doesn't work. That was just an example function.</p>
<p>This is not something to validate input parameters, or even returned values.</p>
<p>This is simply to mark a function as potentially unreliable. </p>
<p>The code must be used in some areas under very specific circumstances, but when devs are writing code and run across this function should be warned of the limitations. </p>
</div>
<div class="post-text" itemprop="text">
<p>Your example is pretty flawed for any use case in which alerting the developers would be needed. This would need to alert the user not to input a negative number.</p>
<pre><code>def times_two(x):
    if x &lt; 0:
        raise BrokenException("Attn user. Don't give me negitive numbers.")
    return x * 2
</code></pre>
<p>Although, I think if your example more accurately described an actual error needing developer attention then you should just fix that and not put it into production knowing there is an error in it.</p>
<p><a href="https://github.com/getsentry/sentry" rel="nofollow noreferrer">sentry.io</a> on the other hand can help find errors and help developers fix errors while in production. You may want to look into that if <code>warnings</code> isn't for you. From their README.me:</p>
<blockquote>
<p>Sentry fundamentally is a service that helps you monitor and fix
  crashes in realtime. The server is in Python, but it contains a full
  API for sending events from any language, in any application.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Builtin Exception '<a href="https://docs.python.org/2/library/exceptions.html#exceptions.ValueError" rel="nofollow noreferrer">ValueError</a>' is the one that should be used.</p>
<pre><code>def times_two(x):
    if x &lt; 0:
        raise ValueError('{} is not a positive number.'.format(x))
    return x * 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This seems like an XY problem. The original problem is that you have some code which is incomplete or otherwise known to not work. If it is something you are currently working on, then the correct tool to use here is your version control. With Git, you would create a new branch which only be merged into <code>master</code> and prepared for release to production after you have completed the work. You shouldn't release a partial implementation.</p>
</div>
<div class="post-text" itemprop="text">
<p>Do you want to stop execution when the function is called? If so, then some sort of exception, like the <code>BrokenException</code> in your example is a good way of doing this.</p>
<p>But if you want to <em>warn</em> the caller, and then continue on anyway, then you want a <code>Warning</code> instead of an exception. You can still create your own:</p>
<pre><code>class BrokenCodeWarning(Warning)
    pass
</code></pre>
<p>When you <code>raise BrokenCodeWarning</code>, execution will <em>not</em> be halted by default, but a warning will be printed to stderr. </p>
<blockquote>
<p>The warnings filter controls whether warnings are ignored, displayed, or turned into errors (raising an exception).</p>
</blockquote>
<p><a href="https://docs.python.org/3.7/library/warnings.html#the-warnings-filter" rel="nofollow noreferrer">https://docs.python.org/3.7/library/warnings.html#the-warnings-filter</a></p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/warnings.html" rel="nofollow noreferrer"><code>warnings</code></a>?</span>
<span class="comment-copy">you can use the assert keyword to make sure x is positive: assert x &gt;= 0.</span>
<span class="comment-copy">why not just comment it out? or rename it something that no one will call? or put it in a different branch? i can't see a good workflow where you'd ever want something like this.</span>
<span class="comment-copy">If you want to mark it as "Do not use" raise NotImplementedError would be a good choice IMO.</span>
<span class="comment-copy">Broken code that is not completed should not be merged into <code>master</code> nor released to production.</span>
<span class="comment-copy">This is the same essence as my answer, no need to import <code>Warning</code> though, that raises an <code>ImportError</code></span>
<span class="comment-copy">Thanks for the note about the import. I think it's important to note that warnings by default <i>don't</i> stop execution. If you want to update your answer with that info, I'll delete this one.</span>
