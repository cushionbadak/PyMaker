<div class="post-text" itemprop="text">
<p>I can't get the function into scipy freqz form so I tried to solve directly in python, but can't convert the complex to a float variable. Wrong implementation?</p>
<pre><code>T = 1/(0.0001)
w_0 = m.pi/2
w = np.arange(-.005, .005, T)
j= 1j
h_num = 1-m.exp(j*w_0)-m.exp(-j*w_0)-2*m.exp(-j*w)+m.exp(-2*j*w)
h_den = 1-(0.9)*m.exp(j*w_0)-(0.9)*m.exp(-j*w_0)-(1.8)*m.exp(-j*w)+(0.81)*m.exp(-2*j*w)
mag = abs(h_num/h_den)
phase = np.angle(h_num)-np.angle(h_den)
</code></pre>
<p>Gives the following error:</p>
<blockquote>
<pre><code>TypeError: can't convert complex to float on the exp(j*w_0)
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You are probably using the <a href="https://docs.python.org/3/library/math.html#math.exp" rel="nofollow noreferrer"><code>exp</code></a> function from the <code>math</code> module, which as stated in the <a href="https://docs.python.org/3/library/math.html" rel="nofollow noreferrer"><code>math</code> module documentation</a></p>
<blockquote>
<p>These functions cannot be used with complex numbers; use the functions of the same name from the cmath module if you require support for complex numbers.</p>
</blockquote>
<p>So, as suggested you could use <a href="https://docs.python.org/2/library/cmath.html#cmath.exp" rel="nofollow noreferrer"><code>cmath.exp</code></a> instead. This would take care of your current error arising during the evaluation of <code>exp(j*w0)</code>. </p>
<p>Unfortunately, with your posted code you will then get another error trying to compute the quantity <code>exp(j*w)</code> since <code>cmath.exp</code> does not support array arguments (neither does <code>math.exp</code> by the way). To resolve that second error you <em>could</em> create an array and evaluate the exponential on each array element, one at a time with a loop.
However, since you are already using <code>numpy</code>, it would just be a whole lot simpler to just use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.exp.html" rel="nofollow noreferrer"><code>numpy.exp</code></a>.</p>
<p>Also adjusting <code>T</code> and <code>w</code> computations to span the whole spectrum, you should get the following:</p>
<pre><code>T = 0.0001
w_0 = np.pi/2
w = np.arange(-np.pi, np.pi, T)
j= 1j
h_num = 1-np.exp(j*w_0)-np.exp(-j*w_0)-2*np.exp(-j*w)+np.exp(-2*j*w)
h_den = 1-(0.9)*np.exp(j*w_0)-(0.9)*np.exp(-j*w_0)-(1.8)*np.exp(-j*w)+(0.81)*np.exp(-2*j*w)
mag = abs(h_num/h_den)
phase = np.angle(h_num)-np.angle(h_den)
</code></pre>
<p>As a side note, the corresponding computation with <code>scipy.freqz</code> would look like:</p>
<pre><code>b = [1-np.exp(j*w_0)-np.exp(-j*w_0), -2, 1]
a = [1-0.9*np.exp(j*w_0)-0.9*np.exp(-j*w_0), -1.8, 0.81]
w, h = freqz(b, a, whole=True)
mag = abs(h)
phase = np.angle(h)
</code></pre>
</div>
