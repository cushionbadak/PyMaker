<div class="post-text" itemprop="text">
<p>I have this list: </p>
<pre><code>mylist = ['*', 'Drama', 'Film Noir', 'Mystery', 'Romance', '*', 'Dance', 'Drama', 'Musical', '*', 'Crime', 'Drama', '*', 'Action', 'Drama', 'Period', 'Western', '*', 'Adaptation', 'Based-on', 'Comedy', 'Romance', '*', 'Mystery', 'Thriller', '*', 'Comedy']
</code></pre>
<p>Obviously, the element ' * ' is separating groups within the list. How do I group the occurrence of elements in between ' * '? The desired result will look like this: </p>
<pre><code>expected_list = [('Drama', 'Film Noir', 'Mystery', 'Romance'), ('Dance', 'Drama', 'Musical'), ('Crime', 'Drama'), ('Action', 'Drama', 'Period', 'Western'), ('Adaptation', 'Based-on', 'Comedy', 'Romance'), ('Mystery', 'Thriller'), ('Comedy')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is a classic <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="noreferrer">use case for <code>itertools.groupby</code></a>:</p>
<pre><code>from itertools import groupby

expected_list = [tuple(grp) for isstar, grp in groupby(mylist, key='*'.__eq__) if not isstar]
</code></pre>
<p>That groups your inputs into runs of <code>*</code> and not-<code>*</code>, drops the <code>*</code> groups, and <code>tuple</code>s up the non-<code>*</code> groups.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> to group entries by whether they are <code>*</code> or not and then just keep those parts that are not <code>*</code> using the <code>__ne__</code> (not equal) method or an equivalent <code>lambda</code> expression:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; mylist = ['*', 'Drama', 'Film Noir', 'Mystery', 'Romance', '*', 'Dance', 'Drama', 'Musical', '*', 'Crime', 'Drama', '*', 'Action', 'Drama', 'Period', 'Western', '*', 'Adaptation', 'Based-on', 'Comedy', 'Romance', '*', 'Mystery', 'Thriller', '*', 'Comedy']
&gt;&gt;&gt; [tuple(g) for k, g in itertools.groupby(mylist, key="*".__ne__) if k]
[('Drama', 'Film Noir', 'Mystery', 'Romance'),
 ('Dance', 'Drama', 'Musical'),
 ('Crime', 'Drama'),
 ('Action', 'Drama', 'Period', 'Western'),
 ('Adaptation', 'Based-on', 'Comedy', 'Romance'),
 ('Mystery', 'Thriller'),
 ('Comedy',)]
</code></pre>
</div>
