<div class="post-text" itemprop="text">
<p>My question is How can I send a CSV file to an FTP server. As you can see, the following script is the current code of mine:</p>
<p>Code sample:</p>
<pre><code>def download_outage_info_all(request):

    upload_data = download_data_form(request.POST)
    if upload_data.is_valid():
        print("valid")
        start = upload_data.cleaned_data['start_date_time']

        end = upload_data.cleaned_data['end_date_time']
        print(start, '-', end)

        start_timestamp = datetime.strptime(
            start, '%Y-%m-%d %H:%M')
        end_timestamp = datetime.strptime(
            end, '%Y-%m-%d %H:%M')

    try:
        info = planned_outages.objects.filter(
            start_timestamp__gte=start_timestamp, end_timestamp__lte=end_timestamp).values()
    except Exception as e:
        print("EXCEPTION", e)
        print("**** Data not found *** ")

    filename_date_part = datetime.now().strftime("%Y%m%d%H%M")

    response = HttpResponse(content_type='text/csv')

    response['Content-Disposition'] = 'attachment;filename=m_availability_' + \
                                      filename_date_part + '.csv'
    writer = csv.writer(response, delimiter=';')

    writer.writerow(['starts YYYY-mm-dd HH:MM:SS', 'time_zone',
                     'ends YYYY-mm-dd HH:MM:SS', 'asset id', 'availability type', 'PowerKW'])

    for x in info:

        try:
            unit_mw = unit_details.objects.get(
                unit_id=x['unit_id_id'])


            # prints to csv file
            writer.writerow([x['start_timestamp'], 'UTC',
                             x['end_timestamp'], unit_mw.unit_name,x['availability_type'], x['capacity_kw']])

        except Exception as e:
            print("EXCEPTION", e)
            print("**** Data not found for unit_mw*** ")

    return response
</code></pre>
<p>This is a Django view, I don't want to save the CSV on my local system, I just want to directly send it to an FTP server. Can anyone help me?</p>
</div>
<div class="post-text" itemprop="text">
<p>Write the CSV file to an in-memory file-like object (e.g. <a href="https://docs.python.org/3/library/io.html#io.BytesIO" rel="nofollow noreferrer"><code>BytesIO</code></a>) and upload that:</p>
<pre><code>from ftplib import FTP
from io import BytesIO
import csv

flo = BytesIO() 
writer = csv.writer(flo, delimiter=';')

writer.writerow(...)

ftp = FTP('ftp.example.com')
ftp.login('username', 'password')

flo.seek(0)
ftp.storbinary('STOR test.csv', flo)
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/12613797/python-script-uploading-files-via-ftp">Python Script Uploading files via FTP</a></span>
<span class="comment-copy">@DragonBall That does not address <i>"I don't want to save the csv on my local system"</i></span>
<span class="comment-copy">Thanks Martin, My test file doesn't contain any data though</span>
<span class="comment-copy">Show us your full code.</span>
<span class="comment-copy">Martin I was able to resolve that, I am new on this so I have tried different ways to save the file with specific name but its not working. Instead of 'STOR <b>test.csv</b>' I wany my file name to be  <b>m_availability_' + \                                       filename_date_part + '.csv'</b></span>
