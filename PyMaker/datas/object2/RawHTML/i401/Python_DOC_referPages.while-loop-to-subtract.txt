<div class="post-text" itemprop="text">
<p>I am attempting to use a while loop to subtract from the input and then display the amount of items it could get based on the input. Now it randomly selects Food and in cost i am attempting to get it to match the randomly chosen Food to the List.</p>
<pre><code>import random

money = input('Total money: ')
mi = int(money)

Food = ['Taco', 'Burrito', 'Nacho']
Price = [6, 4, 2]
Dict = {f:p for (f, p) in zip(Food, Price)}

RandomFood = random.sample(Food, 1)
RFS = str(RandomFood)

while mi &gt;= 0:
    cost = Dict.RFS
    mi = mi - cost
</code></pre>
<p>I don't see why cost isn't working? But I also have not a clue how to display a variable amount of properties.</p>
</div>
<div class="post-text" itemprop="text">
<p>dont use str(randomfood) randomfood is allready str included list and move it in loop. every time it will be diffrent value</p>
<pre><code>import random

money = input('Total money: ')
mi = int(money)

Food = ['Taco', 'Burrito', 'Nacho']
Price = [6, 4, 2]
Dict = {f:p for (f, p) in zip(Food, Price)}

while mi &gt;= 0:
    RFS = random.sample(Food, 1)[0]
    cost = Dict[RFS]
    mi = mi - cost
    print("item: {} cost: {} money you have: {} ".format(RFS,cost,mi))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import random

money = input('Total money: ')
mi = int(money)

Food = ['Taco', 'Burrito', 'Nacho']
Price = [6, 4, 2]
List = {f:p for (f, p) in zip(Food, Price)}

RandomFood = random.choice(Food)
RFS = str(RandomFood)

while mi &gt;= 0:
    cost = List[RFS]
    mi = mi - cost
</code></pre>
<p>As @Patrick Artner suggested, <code>choice()</code> it's a better choice here (<em>hah!</em>).<br/>
<code>List</code> is a dictionary, to get values from a dictionary one must follow this syntax: <code>dict[key]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>A couple of things:</p>
<p>First, you're converting the sample into a string in a way that will create extra characters around the Food, such as "['Taco']" as opposed to "Taco". You should use RandomFood[0] instead of str(RandomFood).</p>
<p>Second, you are calling the item from the list incorrectly. You should use List[RFS] instead of List.RFS</p>
<p>So you're code should look like this:</p>
<pre><code>import random

money = input('Total money: ')
mi = int(money)

Food = ['Taco', 'Burrito', 'Nacho']
Price = [6, 4, 2]
List = {f:p for (f, p) in zip(Food, Price)}

RandomFood = random.sample(Food, 1)
RFS = RandomFood[0]

while mi &gt;= 0:
    cost = List[RFS]
    mi = mi - cost
</code></pre>
</div>
<span class="comment-copy">try cost = List[RFS] or cost = List.get(RFS, 0)</span>
<span class="comment-copy">Both <code>RandomFood</code> and <code>RFS</code> are set exactly <i>once</i>; their values do not change with each iteration of your loop, which as written could be replaced with <code>mi = mi % List[RFS]</code>.</span>
<span class="comment-copy">... dont call dicts <code>List</code> ... also dont call them Dict .. and read about dict and list. You can no access the elememnts of a dict by <code>Dict.rfs</code> ...</span>
<span class="comment-copy">Read:  <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">docs.python.org/3/tutorial/datastructures.html#dictionaries</a></span>
<span class="comment-copy">I rollbacked your last edit. Please do not "fix" your question.. This invalidates all the time spent by the ppl answering your question. The answers do not match your last edit anymore - If you have a new problem., try to solve it and if need be ask a new question. Thanks.</span>
<span class="comment-copy">Ok that works great, I added   <code>if mi &lt; cost:         continue</code>  Under <code>mi = mi - cost</code> so it wouldn't purchase it and grant a negative number. But i also want it to check the other numbers to see if those can be purchased instead of hard stopping at say 4 Money left</span>
<span class="comment-copy">no - we use <code>RandomFood = random.choice(Food)</code> to get one element.</span>
<span class="comment-copy">Ok from here how would I display each instance of food "purchased"?</span>
<span class="comment-copy">To get <i>one</i> element by random from an iterable you do not use a method that produces potentially multiple unique elements from it as list to use the 1st one - you use the method that simply gives you <i>one</i> element. Read : <a href="https://docs.python.org/3/library/random.html#random.choice" rel="nofollow noreferrer">docs.python.org/3/library/random.html#random.choice</a></span>
<span class="comment-copy">Yeah the code currently grabs one element by random, thats why I am asking how do i make it grab a variable amount of elements and then output in print what it has grabbed and how many of each it has grabbed.</span>
<span class="comment-copy">You must change the second parameter of sample then: RandomFood = random.choice(Food, SampleSize). Although with a population of n=3 it's difficult.</span>
