<div class="post-text" itemprop="text">
<p>I am using the following code in which I have a dictionary file,  <code>Dictionary.txt</code>, and a search text file, <code>SearchText.csv</code>, and I am using regex to find and store the matching keywords and count them.</p>
<p>I have a problem: some of the files are thousands or hundreds of thousands of keywords and it takes too much time to process. I run the code on one dictionary which has 300,000 keywords and after an hour it hasn't written a single row.</p>
<p>So, what should I do to reduce the running time of this process?</p>
<pre><code>import csv
import time
import re
allCities = open('Dictionary.txt', encoding="utf8").readlines()
timestr = time.strftime("%Y-%m-%d-(%H-%M-%S)")
with open('SearchText.csv') as descriptions,open('Result---' + str(timestr) + '.csv', 'w', newline='') as output:
    descriptions_reader = csv.DictReader(descriptions)
    fieldnames = ['Sr_Num', 'Search', 'matched Keywords', 'Total matches']
    output_writer = csv.DictWriter(output, delimiter='|', fieldnames=fieldnames)
    output_writer.writeheader()
    line=0
    for eachRow in descriptions_reader:
        matches = 0
        Sr_Num = eachRow['Sr_Num']
        description = eachRow['Text']
        citiesFound = set()
        for eachcity in allCities:
            eachcity=eachcity.strip()
            if re.search('\\b'+eachcity+'\\b',description,re.IGNORECASE):
                citiesFound.add(eachcity)
                matches += 1
        if len(citiesFound)==0:
            output_writer.writerow({'Sr_Num': Sr_Num, 'Search': description, 'matched Keywords': " - ", 'Total matches' : matches})

        else:
            output_writer.writerow({'Sr_Num': Sr_Num, 'Search': description, 'matched Keywords': " , ".join(citiesFound), 'Total matches' : matches})
        line += 1
        print(line)

print(" Process Complete ! ")
</code></pre>
<p>Here is an example of some rows from <code>Dictionary.txt</code>:</p>
<pre class="lang-none prettyprint-override"><code>les Escaldes
Andorra la Vella
Umm al Qaywayn
Ras al Khaimah
Khawr Fakkn
Dubai
Dibba Al Fujairah
Dibba Al Hisn
Sharjah
Ar Ruways
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As user Martineau comments, it's best to profile code to determine where optimisation will be most effective, and to measure the effects of any attempted optimisations.</p>
<p>In the absence of any profiling data, the best candidate for optimisation is likely to be this inner loop:</p>
<pre><code>for eachcity in allCities:
    eachcity=eachcity.strip()
    if re.search('\\b'+eachcity+'\\b',description,re.IGNORECASE):
        citiesFound.add(eachcity)
</code></pre>
<p>Here the code is calling <code>strip</code> on each string in <code>allCities</code> - something which could be done just once, outside the loop, then calling <code>re.search</code> for each city.</p>
<p>It may be more efficient to combine all the cities into a single regex using the <code>|</code> metacharacter, which denotes alternate matches.  For example the pattern </p>
<pre><code>r'foo|bar'
</code></pre>
<p>will match <code>'foo'</code> <em>or</em> <code>'bar'</code>.</p>
<p>Here's a simple example:</p>
<pre><code>&gt;&gt;&gt; text = 'I am flying from les Escaldas to Dubai via Sharjah on Monday'
&gt;&gt;&gt; cities = ['Sharjah', 'Dubai', 'les Escaldas', 'Ar Ruways']
&gt;&gt;&gt; pattern = r'|'.join(r'\b{}\b'.format(re.escape(city)) for city in cities)
&gt;&gt;&gt; pattern
'\\bSharjah\\b|\\bDubai\\b|\\bles Escaldas\\b|\\bAr Ruways\\b'
&gt;&gt;&gt; matches = re.findall(pattern, text)
&gt;&gt;&gt; print(matches)
['les Escaldas', 'Dubai', 'Sharjah']
</code></pre>
<p>Calling <code>re.escape</code> on each city name prevents the search pattern being altered if one of the city names contains a character which is also a regular expression metacharacter.  </p>
<p>Applying this technique to the code in the question:</p>
<pre><code># We only need to create the regex pattern once,
# so do it outside the loop.
pattern = r'|'.join(r'\b{}\b'.format(re.escape(city.strip())) for city in allCities)

for eachRow in descriptions_reader:
    Sr_Num = eachRow['Sr_Num']
    description = eachRow['Text']
    citiesFound = set()
    found = re.findall(pattern, description, re.IGNORECASE)
    citiesFound.update(found)
    matches = len(found)
</code></pre>
<p>The behaviour of the <code>|</code> metacharacter is described in the <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">documentation</a>.</p>
<blockquote>
<p>REs separated by '|' are tried from left to right. When one pattern completely matches, that branch is accepted. This means that once A matches, B will not be tested further, even if it would produce a longer overall match. </p>
</blockquote>
<p>So if there are potential matches which are substrings of other candidates - like "Dubai" and "Dubai City" - the longer candidate must appear earlier in the pattern, otherwise the engine will find the shorter and return it as the match.</p>
<p>To prevent this, sort <code>allCities</code> in descending order of length before creating the pattern:</p>
<p><code>allCities.sort(key=len, reverse=True)</code></p>
<p>or use <code>sorted</code> if the order of <code>allCities</code> must be preserved:</p>
<pre><code>pattern = r'|'.join(r'\b{}\b'.format(re.escape(city.strip())) for
                    city in sorted(allCities, key=len, reverse=True))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a set instead of a list of city names and split the description on spaces to isolate words.  This may work faster than a regular expression</p>
<p>For example:</p>
<pre><code>...
allCities = open('Dictionary.txt', encoding="utf8").readlines()
citySet = set([city.lower().strip() for city in allCities]
...
    ...
    citiesFound = set([ word for word in description.split(" ") if word.lower() in citySet ])
    ...
</code></pre>
</div>
<span class="comment-copy">Can you explain more clearly what you are trying to do? Ideally with an example showing how the input is formatted and what you want the output to look like?</span>
<span class="comment-copy">@Phydeaux    I have some dictionaries files which are .txt files, and a file of .CSV which have 2 column sr_num and text column, from text column I am matching the all keywords row wise and store and count the matched keywords and then write it in a new file row by row.</span>
<span class="comment-copy">can you show an example of how <code>Dictionary.txt</code> is formatted? (edited into the question)</span>
<span class="comment-copy">@Phydeaux I have edit the question.</span>
<span class="comment-copy">One of the first things you should do <i>before</i> attempting to optimize a body of code is to profile it and determine where it's spending most of its time. This will tell you what portions are most important to work on and where you're likely to see the most improvement if you can speed it up. The good news is doing that is relatively easy: See <a href="https://stackoverflow.com/questions/582336/how-can-you-profile-a-python-script">How can you profile a Python script?</a></span>
<span class="comment-copy">Kindly can you explain me little more that how above example is work. e.g. according to above text if the text will <code>I am flying from les Escaldas to Dubai City via Sharjah on Monday </code> then what will be match, what is the logic of matching creteria, i think you can understand what I mean? and yes also in cities I have `  "Dubia" , Dubai City" `</span>
<span class="comment-copy">I mean tell me with more explanation of the logic of selection of matching the keyword in text.</span>
<span class="comment-copy">@csit I've added informatiion of the order of matching to the answer</span>
<span class="comment-copy">ok thankyou so Much , and one little and simple question is that,, is this save same match keyword one time or more then one time  in ` <code>citiesFound = set() </code>  I mean e.g. ` i love dubia and want to live in dubai` in this word dubai is occurs 2 times so , this code save dubai 2 times or 1 times ,,,hoq many times it count the match word?</span>
<span class="comment-copy">I want to count this match one time in one row, becoz this match word is already count in this row.</span>
