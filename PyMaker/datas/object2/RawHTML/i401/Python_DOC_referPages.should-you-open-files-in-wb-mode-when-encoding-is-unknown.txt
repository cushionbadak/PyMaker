<div class="post-text" itemprop="text">
<p>The problem that I'm having with my test image is what I like to call the "It looks like we don't support this file format." error since thats what it says when I open the image.</p>
<pre><code>try:
    with open('GA-image test.png',encoding='utf8') as File:
        FileBytes = File.read(1000000000)
        TypeOfEncoding = 'utf8'
except:
    try:
        with open('GA-image test.png',encoding='Latin-1') as File:
            FileBytes = File.read(1000000000)
            TypeOfEncoding = 'Latin-1'
#To shorten this code I'm just going to give two of the types of encoding

with open('GA-image test2.png','wb') as FileW:
    print(TypeOfEncoding)
    FileBytes2 = str.encode(FileBytes)
    FileBytes3 = FileW.write(FileBytes2)
</code></pre>
<p>This is a link to this code and the test image that I used:
<a href="https://cdn.discordapp.com/attachments/496421060565139466/548261637782503425/Reading_and_writing_a_file_useing_file_bytes.zip" rel="nofollow noreferrer">https://cdn.discordapp.com/attachments/496421060565139466/548261637782503425/Reading_and_writing_a_file_useing_file_bytes.zip</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Image data is <em>not text</em>, don't open images in text mode. Not for reading, and not for writing.</p>
<p>In Python, you open files in one of two modes: text mode, and binary mode, using <code>t</code> or <code>b</code> in the <code>mode</code> argument. If you use neither, <code>t</code> is implied.</p>
<p>Text mode is merely an extra layer on top of binary mode where the binary data is translated from and to <em>text</em>, using a <a href="https://docs.python.org/3/library/codecs.html" rel="nofollow noreferrer">standard text codec</a>. The vast majority of image formats, including PNG, are not text formats, and you can't decode their data with a text codec.</p>
<p>So always open these in binary mode, adding in the <code>b</code> character in the file mode:</p>
<pre><code>with open('GA-image test.png', 'rb') as image_file:
    image_bytes = image_file.read()

with open('GA-image test2.png', 'wb') as output_file:
    output_file.write(image_bytes)
</code></pre>
<p>Text codecs are just one form of storing information in a series of bytes, image formats such as PNG are another, and are not designed to have meaning as text. That you can always decode image data as Latin-1 is a <em>coincidence</em>, an accident of how the Latin-1 codec is designed, and not intentional.</p>
<p>As a side note: it is usually a bad idea to use <code>except</code>, as it catches <em>all</em> exceptions, not just errors with opening a file or decoding errors that will always spring from trying to read PNG data as UTF-8. Use specific exceptions, wherever possible. </p>
</div>
