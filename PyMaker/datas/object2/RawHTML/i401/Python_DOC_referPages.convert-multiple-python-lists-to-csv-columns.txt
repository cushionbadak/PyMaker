<div class="post-text" itemprop="text">
<p>My goal is to write a series of lists to a csv, where each list is a column.</p>
<p>This is my code so far:</p>
<pre><code>rows = list(zip(columns['phase'],columns['start_date']))

with open('date_update.csv','w') as f:
    writer = csv.writer(f)
    for row in rows:
        writer.writerows(row);
</code></pre>
<p><a href="https://i.stack.imgur.com/Vf4HQ.png" rel="nofollow noreferrer">This is the csv it produces</a>. Both lists are the same length. When I print rows it has an extra <code>'),'</code> at the beginning. But this is not present when you print the two lists (<code>columns['phase']</code> and <code>columns['start_date']</code>).</p>
<p>Is there something wrong with the zip line? Or am I not writing it to the csv file correctly?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <code>pd.DataFrame</code> and then save it to a csv. For example:</p>
<pre><code>import pandas as pd
columns = {}

columns['phase'] = ['Phase 1','Phase 2', 'Phase 3','Phase 4']
columns['start_date'] = ['August 24 September','August 24 September',
                         'August 24 September', 'August 24 September']

data = list(zip(columns['phase'],columns['start_date']))

df = pd.DataFrame(data = data)

df.to_csv('date_update.csv', index=False, header=False)
</code></pre>
<p>Will save in the file 'date_update.csv' the following data:</p>
<p>Phase 1,August 24 September<br/>
Phase 2,August 24 September<br/>
Phase 3,August 24 September<br/>
Phase 4,August 24 September  </p>
</div>
<div class="post-text" itemprop="text">
<p>Either use:</p>
<pre><code>for row in rows:
    writer.writerow(row)
</code></pre>
<p>Or:</p>
<pre><code>writer.writerows(rows)
</code></pre>
<p>Note the use of singular and plural forms.  <code>writerows</code> requires a sequence of sequences.  A string is a sequence, so passing a list of strings makes it use a string as a sequence of columns and list each character in a separate column. </p>
<p>Also per the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv docs</a>, use either of the following to open the file passed to <code>csv.writer</code>:</p>
<pre><code>with open('date_update.csv','wb') as f:           # Python 2
with open('date_update.csv','w',newline='') as f: # Python 3
</code></pre>
<p>Full example:</p>
<pre><code>#!python3
import csv

columns = {}
columns['phase']      = ['Phase 1','Phase 2', 'Phase 3','Phase 4']
columns['start_date'] = ['Aug 24, 2018','Sep 25, 2018','Jan 01, 2019','Feb 15, 2019']

rows = zip(columns['phase'],columns['start_date'])

with open('date_update.csv','w',newline='') as f:
    writer = csv.writer(f)
    writer.writerows(rows)
</code></pre>
<p>Output:</p>
<pre><code>Phase 1,"Aug 24, 2018"
Phase 2,"Sep 25, 2018"
Phase 3,"Jan 01, 2019"
Phase 4,"Feb 15, 2019"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As an addendum on what @mark-tolonen wrote you could also use DictWriter from the builtin csv module. </p>
<pre><code>with open('date_update.csv','a') as f:
    writr = csv.DictWriter(f, fieldnames=["phase","start_date"])
    # writr.write_header() # Use only if file is created by operation or is empty
    writr.writerows([{"phase": c["phase"], "start_date": c["start_date"]} for c in columns])
</code></pre>
</div>
<span class="comment-copy">Please don't post images.  Help guidelines prefer text as it is searchable and cut-n-pastable.</span>
