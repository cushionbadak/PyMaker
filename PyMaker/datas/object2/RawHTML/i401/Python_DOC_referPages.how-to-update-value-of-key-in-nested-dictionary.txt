<div class="post-text" itemprop="text">
<pre><code>items = [{'id': 1, 'language': 'English', 'name': 'Sarah', 'description': 'Blah blah'}, {'id': 2, 'language': 'English', 'name': 'Jessica', 'description': 'More blah'}]

d = {}
for item in items:

    language = item['language']
    id = item['id']
    name = item['name']
    description = item['description']

    d[language][id] = {'name': name, 'description': description}

print(d)
</code></pre>
<p>I'm expecting to see in output:</p>
<pre><code>{'English': {1:{'name': 'Sarah', 'description': 'Blah blah'}, 2:{'name': 'Jessica', 'description': 'More blah'}}}
</code></pre>
<p>But unfortunately I'm getting KeyError:
<a href="https://i.stack.imgur.com/GCyhO.png" rel="nofollow noreferrer"><img alt="Traceback: KeyError" src="https://i.stack.imgur.com/GCyhO.png"/></a></p>
<p><strong>So, the question is how to update/append value in nested dictionary? What I'm doing wrong?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>´d´ does not contain <code>d["English"]</code> which you try to create with <code>d[language][id] = {'name': name, 'description': description}</code> - hence the error.</p>
<hr/>
<p>You cannot create intermediate dictionarys "on the fly" if they do not exist - either check if they already exist and if not create them - or use <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer">dict.setdefault(key,default)</a> to create the entry if it does not yet exist:</p>
<pre><code>items = [{'id': 1, 'language': 'English', 'name': 'Sarah', 'description': 'Blah blah'},
         {'id': 2, 'language': 'English', 'name': 'Jessica', 'description': 'More blah'}]

d = {}
for item in items:

    language = item['language']
    idd = item['id']
    name = item['name']
    description = item['description']

    d.setdefault(language,{})[idd] = {'name': name, 'description': description}

print(d)
</code></pre>
<p>Output:</p>
<pre><code>{'English': {1: {'name': 'Sarah', 'description': 'Blah blah'}, 
             2: {'name': 'Jessica', 'description': 'More blah'}}}
</code></pre>
<p>You can use <code>collections.defaultdict</code> as well if you come into performance problems using <code>setdefault</code> - which is slightly less fast.</p>
<hr/>
<p>Related: <a href="https://stackoverflow.com/questions/3483520/use-cases-for-the-setdefault-dict-method">Use cases for the 'setdefault' dict method</a></p>
</div>
<div class="post-text" itemprop="text">
<p>d is an initially empty dictionary, so does not have key language (which is 'english') yet when you try to assign a value to <code>d[language][id]</code>.</p>
<p>You can change your code as follow:</p>
<pre><code>for item in items:

    language = item['language']
    id = item['id']
    name = item['name']
    description = item['description']

    if not language in d:
        d[language] = {}
    d[language][id] = {'name': name, 'description': description}
</code></pre>
</div>
<span class="comment-copy">it is probably a duplicate. Well, a lot of similar questions, but difficult to find an exact one, so just leave it open</span>
<span class="comment-copy">Dear Patrick. I think it is one of the best answers I ever seen. You are so inspired and passionate of what you are doing. Thank you so much! I sincerely wish you all the Best!</span>
<span class="comment-copy">Thank you very much for your variant of solution!</span>
