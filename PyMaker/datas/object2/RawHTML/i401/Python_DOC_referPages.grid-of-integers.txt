<div class="post-text" itemprop="text">
<p>I need to make a grid with the numbers generated by the code, but I'm not understanding how to align them in columns.
Is there a parameter of print or something else that could help me out?</p>
<pre><code>#main()
a=0
b=0
for i in range(1, 13):
    a=a+1
    print("  ")
    b=b+1
    for f in range(1,13):
        print(f*b, end="  ")
</code></pre>
<p>My output at the moment:</p>
<p><a href="https://i.stack.imgur.com/9NghV.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/9NghV.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend using python's f-strings:</p>
<pre><code>for i in range(1, 13):
    print(''.join(f"{i*j: 4}" for j in range(1,13)))
</code></pre>
<p>Here's the output:</p>
<pre><code>
   1   2   3   4   5   6   7   8   9  10  11  12
   2   4   6   8  10  12  14  16  18  20  22  24
   3   6   9  12  15  18  21  24  27  30  33  36
   4   8  12  16  20  24  28  32  36  40  44  48
   5  10  15  20  25  30  35  40  45  50  55  60
   6  12  18  24  30  36  42  48  54  60  66  72
   7  14  21  28  35  42  49  56  63  70  77  84
   8  16  24  32  40  48  56  64  72  80  88  96
   9  18  27  36  45  54  63  72  81  90  99 108
  10  20  30  40  50  60  70  80  90 100 110 120
  11  22  33  44  55  66  77  88  99 110 121 132
  12  24  36  48  60  72  84  96 108 120 132 144
</code></pre>
<p>The most common form is to use almost any arbitrary expression within the curly braces. This can include dictionary values, function calls and so on. The above usage specifies formatting after the colon. The space before the <code>4</code> indicates that the fill character should be a space, and the 4 indicates that the whole expression should take up 4 characters total. For more info, check out the <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Considering the width of each grid cell is stored as <code>w</code>, which for above snippet suffices as 4, a regularly spaced grid can be printed using</p>
<pre class="lang-py prettyprint-override"><code>w = 4
a, b = 0, 0
for i in range(1, 13):
    a, b = a+1, b+1
    for f in range(1, 13):
        print(('{:'+str(w)+'}').format(f*b), end='')
    print('')
</code></pre>
<p>Its output is</p>
<pre><code>   1   2   3   4   5   6   7   8   9  10  11  12
   2   4   6   8  10  12  14  16  18  20  22  24
   3   6   9  12  15  18  21  24  27  30  33  36
   4   8  12  16  20  24  28  32  36  40  44  48
   5  10  15  20  25  30  35  40  45  50  55  60
   6  12  18  24  30  36  42  48  54  60  66  72
   7  14  21  28  35  42  49  56  63  70  77  84
   8  16  24  32  40  48  56  64  72  80  88  96
   9  18  27  36  45  54  63  72  81  90  99 108
  10  20  30  40  50  60  70  80  90 100 110 120
  11  22  33  44  55  66  77  88  99 110 121 132
  12  24  36  48  60  72  84  96 108 120 132 144
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can reference keyword argument values passed to the <code>str.format()</code> method in the format string by name via <code>{name}</code>. Here's an example of doing that where the value referenced is computed (as opposed to being a constant):</p>
<pre><code>mx = 12
w = len(str(mx*mx)) + 1
for b in range(1, mx+1):
    for f in range(1, mx+1):
        print(('{:{w}}').format(f*b, w=w), end='')
    print('')
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>   1   2   3   4   5   6   7   8   9  10  11  12
   2   4   6   8  10  12  14  16  18  20  22  24
   3   6   9  12  15  18  21  24  27  30  33  36
   4   8  12  16  20  24  28  32  36  40  44  48
   5  10  15  20  25  30  35  40  45  50  55  60
   6  12  18  24  30  36  42  48  54  60  66  72
   7  14  21  28  35  42  49  56  63  70  77  84
   8  16  24  32  40  48  56  64  72  80  88  96
   9  18  27  36  45  54  63  72  81  90  99 108
  10  20  30  40  50  60  70  80  90 100 110 120
  11  22  33  44  55  66  77  88  99 110 121 132
  12  24  36  48  60  72  84  96 108 120 132 144
</code></pre>
</div>
<span class="comment-copy">Can u show your output?</span>
<span class="comment-copy">Sure, <a href="https://ibb.co/LC6Gvm9" rel="nofollow noreferrer">link</a></span>
<span class="comment-copy">Max: Add the link to your questionâ€”or better yet, just copy and paste the output into your question as text.</span>
<span class="comment-copy">@martineau ok thanks</span>
