<div class="post-text" itemprop="text">
<p>I have a <code>Scheduler</code> class and a test written for <code>__generate_potential_weeks</code> using <a href="https://docs.python.org/3/library/unittest.html" rel="nofollow noreferrer">unittest</a></p>
<h3>main.py</h3>
<pre class="lang-py prettyprint-override"><code>class Scheduler:
    def __init__(self, num_teams, num_weeks):
        self.potential_weeks = self.__generate_potential_weeks(num_teams)
        # Other stuff

    def __generate_potential_weeks(self, num_teams):
        # Does some things
</code></pre>
<h3>test_scheduler.py</h3>
<pre class="lang-py prettyprint-override"><code>import unittest
from main import Scheduler

class SchedulerTestCase(unittest.TestCase):
    def test_generate_weeks(self):
        sch = Scheduler(4, 14)
        weeks = sch.__generate_potential_weeks(4)
</code></pre>
<p>When I try to test <code>__generate_potential_weeks</code>, I get the following error</p>
<pre><code>AttributeError: 'Scheduler' object has no attribute '_SchedulerTestCase__generate_potential_weeks'
</code></pre>
<h3>Questions</h3>
<ul>
<li>Why can't the test find <code>__generate_potential_weeks</code></li>
<li>How can I test <code>__generate_potential_weeks</code>? It has some complex logic I would like to test separately from <code>Scheduler</code></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Double underscore has a special meaning within python. The name will be mangled to avoid a conflicting name in a subclass.</p>
<p>If that wasn't your intent, I'd encourage you to mark it with a single underscore. If it was, you can still access the function by using the mangled name. I think this will work for you: <code>sch._Scheduler__generate_potential_weeks(4)</code></p>
</div>
<span class="comment-copy">That solved it. I will accept the answer once SO lets me in a couple minutes</span>
