<div class="post-text" itemprop="text">
<p>I have a sqlite3 django database that is using WAL. In operation there are typically three files present: <code>db.sqlite3, db.sqlite3-shm, db.sqlite3-wal</code>.</p>
<p>To conveniently back up the database (when the service is stopped), I'd like to create a management command to checkpoint the sqlite database in order to write all the changes into <code>db.sqlite3</code> and delete the other two files.</p>
<p>While sqlite3 has a <a href="https://www.sqlite.org/c3ref/wal_checkpoint_v2.html" rel="nofollow noreferrer">checkpoint API</a>, I don't know how to access this from django (or <a href="https://docs.python.org/3.0/library/sqlite3.html" rel="nofollow noreferrer">python's sqlite3 module</a>)</p>
</div>
<div class="post-text" itemprop="text">
<p>After much digging, you can use a pragma thus:</p>
<pre><code>from django.core.management.base import BaseCommand
from django.db import connection


class Command(BaseCommand):
    help = 'Checkpoint the database, updating &lt;db&gt;.sqlite3 and removing &lt;db&gt;.sqlite3-wal and &lt;db&gt;.sqlite3-shm files'

    def add_arguments(self, parser):
        parser.add_argument('-cm', '--checkpoint_mode', default='TRUNCATE',
                            choices=['PASSIVE', 'FULL', 'RESTART', 'TRUNCATE'],
                            help='Checkpoint mode - See sqlite3 documentation for options (default is TRUNCATE)')

    def handle(self, *args, **options):
        with connection.cursor() as cursor:
            cursor.execute(f"PRAGMA wal_checkpoint({options['checkpoint_mode']});")
            result = cursor.fetchone()
        print(f'{result}')
</code></pre>
</div>
<span class="comment-copy">Recent enough versions of python support the backup api, which is about the only safe way to copy an open database. You linked to a really old version of the python sqlite3 docs. See <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">docs.python.org/3/library/sqlite3.html</a> instead.</span>
<span class="comment-copy">And if all connections were properly closed, the wal log should be removed by the last one, and you can just copy the database file normally in that case.</span>
<span class="comment-copy">Thanks for the updated link. If only all connections were always properly closed ;)</span>
