<div class="post-text" itemprop="text">
<p>Suppose you have a label which increments in multiple spots:</p>
<p>For example, <code>1-A-1</code>.
Suppose the third spot can increment up to 10 times (<code>1-A-10</code>), after which, <code>A</code> will become <code>B</code>: <code>1-B-1</code>. </p>
<p>Then, this process repeats until <code>1-Z-10</code>, and after that is incremented, you have <code>2-A-1</code>.</p>
<p>How can I write a generic function that will generate a list which has all combinations from <code>1-A-1</code> to <code>10-Z-10</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>This looks like a perfect use case for <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a></p>
<pre><code>labels = itertools.product(range(1, 11), string.ascii_uppercase, range(1, 11))
# (1, 'A', 1) (1, 'A', 2) (1, 'A', 3) ...
</code></pre>
<p><code>product(as, bs, cs, ds, ...)</code> creates a generator that produces values akin to a multiple-level-deep <code>for</code> loop:</p>
<pre><code>for a in as:
    for b in bs:
        for c in cs:
            for d in ds:
                yield (a, b, c, d)
</code></pre>
<p>so to use this, you can either cast directly to list:</p>
<pre><code>result = [f"{a}-{b}-{c}" for a, b, c in labels]
</code></pre>
<p>or loop over <code>labels</code></p>
<pre><code>for label in labels:
    a, b, c = label
    formatted = f"{a}-{b}-{c}"
    # do something with formatted
</code></pre>
</div>
<span class="comment-copy">Why don't you show us what you've tried so far?</span>
<span class="comment-copy">@trotta I would, but I have generalized this problem for the purpose of asking the question to the point where my code is not relevant.</span>
<span class="comment-copy">What if the argument is a variable number of ranges? I know what you said works for this specific example, but my program needs to be dynamic. Sometimes it will have one range, sometimes it will have 3 ranges, etc.</span>
<span class="comment-copy">@Matthew try it. You'll find that <code>product</code> is variadic</span>
<span class="comment-copy">What I meant was how do you pass a list of lists to a variadic function that expects only lists as arguments, but I found that you can use a preceding asterisk in the function argument to unpack the list of lists to lists.</span>
