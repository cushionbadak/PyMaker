<div class="post-text" itemprop="text">
<p>I want to remove duplicate items from a list and keep the order of the original list, as in the example I have:</p>
<pre><code>['hangman', 'song', 'most', 'broadly', 'song', 'hangman', 'work', 'music', 'work', 'broadly', 'typically'] 
</code></pre>
<p>and I want this:</p>
<pre><code>['hangman', 'song', 'most', 'broadly', 'work', 'music', 'typically']
</code></pre>
<p>How can I do this :</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>set</code> for this, set will not accept one item more than once:</p>
<pre><code>old_list = ['hangman', 'song', 'most', 'broadly', 'song', 'hangman', 'work', 'music', 'work', 'broadly', 'typically'] 

new_list = list(set(old_list))
</code></pre>
<p>The <code>new_list</code> will be:</p>
<pre><code>['hangman', 'song', 'most', 'broadly', 'work', 'music', 'typically']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this will keep the order of your old_list in case you need to.</p>
<pre><code>old_list = ['hangman', 'song', 'most', 'broadly', 'song', 'hangman', 'work', 'music', 'work', 'broadly', 'typically']

new_list = []

for n in old_list:
    if n not in new_list:
        new_list.append(n)

print(new_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this using a <a href="https://en.wikipedia.org/wiki/Set_(abstract_data_type)" rel="nofollow noreferrer">Set</a>. Python set implementation docs here (assuming you are using python3)<a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer">enter link description here</a>. Using the first list as an input you can add all elements to the set and the add operation will ignore duplicates. However when reading back from the set the order is not guaranteed.</p>
<p>example:</p>
<pre><code>&gt;&gt;&gt; mylist = ["a", "b", "c", "a"]
&gt;&gt;&gt; myset = set(mylist)
&gt;&gt;&gt; myset
set(['a', 'c', 'b'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To remove duplicates and keep the order of the original list in Python 3.7 you can use <code>dict.fromkeys()</code>:</p>
<pre><code>l = ['hangman', 'song', 'most', 'broadly', 'song', 'hangman', 'work', 'music', 'work', 'broadly', 'typically'] 

list(dict.fromkeys(l))
# ['hangman', 'song', 'most', 'broadly', 'work', 'music', 'typically']
</code></pre>
<p>Otherwise use <code>OrderedDict</code>.</p>
</div>
<span class="comment-copy">Please review this, on how to create a minimal complete verifiable example, and maybe actually attempt to do this homework before asking the user-base here to do it for you? <a href="https://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a> Also review this page for guidance on how to ask homework questions here: <a href="https://meta.stackoverflow.com/questions/334822/how-do-i-ask-and-answer-homework-questions" title="how do i ask and answer homework questions">meta.stackoverflow.com/questions/334822/â€¦</a></span>
<span class="comment-copy">have you tried <code>set(your_list)</code>?</span>
