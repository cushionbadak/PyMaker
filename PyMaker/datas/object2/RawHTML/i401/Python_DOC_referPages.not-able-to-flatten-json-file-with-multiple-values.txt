<div class="post-text" itemprop="text">
<p>I have a json file which I am trying to flatten. The function works properly if there is only one message in the json file, however when there are multiple messages i get the following error:</p>
<pre><code>    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 39 column 1 (char 952)
</code></pre>
<p>JSON file sample</p>
<pre><code>{
    "number": "Abc",
    "date": "01.10.2016",
    "name": "R 3932",
    "locations": [
        {
            "depTimeDiffMin": "0",
            "name": "Spital am Pyhrn Bahnhof",
            "arrTime": "",
            "depTime": "06:32",
            "platform": "2",
            "stationIdx": "0",
            "arrTimeDiffMin": "",
            "track": "R 3932"
        },
        {
            "depTimeDiffMin": "0",
            "name": "Windischgarsten Bahnhof",
            "arrTime": "06:37",
            "depTime": "06:40",
            "platform": "2",
            "stationIdx": "1",
            "arrTimeDiffMin": "1",
            "track": ""
        },
        {
            "depTimeDiffMin": "",
            "name": "Linz/Donau Hbf",
            "arrTime": "08:24",
            "depTime": "",
            "platform": "1A-B",
            "stationIdx": "22",
            "arrTimeDiffMin": "1",
            "track": ""
        }
    ]
}

{
    "number": "Xyz",
    "date": "01.10.2016",
    "name": "R 3932",
    "locations": [
        {
            "depTimeDiffMin": "0",
            "name": "Spital am Pyhrn Bahnhof",
            "arrTime": "",
            "depTime": "06:32",
            "platform": "2",
            "stationIdx": "0",
            "arrTimeDiffMin": "",
            "track": "R 3932"
        },
        {
            "depTimeDiffMin": "0",
            "name": "Windischgarsten Bahnhof",
            "arrTime": "06:37",
            "depTime": "06:40",
            "platform": "2",
            "stationIdx": "1",
            "arrTimeDiffMin": "1",
            "track": ""
        },
        {
            "depTimeDiffMin": "",
            "name": "Linz/Donau Hbf",
            "arrTime": "08:24",
            "depTime": "",
            "platform": "1A-B",
            "stationIdx": "22",
            "arrTimeDiffMin": "1",
            "track": ""
        }
    ]
}
</code></pre>
<p>My code:</p>
<pre><code>import json
import pandas as pd
import numpy as np
from pandas.io.json import json_normalize


desired_width=500
pd.set_option('display.width', desired_width)
np.set_printoptions(linewidth=desired_width)
pd.set_option('display.max_columns', 100)

with open('C:/Users/username/Desktop/samplejson.json') as f:
    data = json.load(f)


def flatten_json(y):
    out = {}
    def flatten(x, name=''):
        if type(x) is dict:
            for a in x:
                flatten(x[a], name + a + '_')
        elif type(x) is list:
            i = 0
            for a in x:
                flatten(a, name + str(i) + '_')
                i += 1
        else:
            out[name[:-1]] = x
    flatten(y)
    return out

for data in data:
    flat = flatten_json(data)
    new_flat = json_normalize(flat)

dfs = pd.DataFrame(new_flat)
print(dfs.head(2))
</code></pre>
<p>I am trying to parse the entire JSON file and load all the data into the dataframe so that I can start using it for analysis purpose. If I have just one message in the file, then the code works correctly and outputs rather a very wide table with lots of columns.</p>
<p>If I have multiple message in the JSON file i get the error that I have attache d above. I looked at many solutions in stackoverflow but they dont seem to </p>
<p>Is there a easier way to read and flatten the JSON file. I tried using the pandas's json_normalize but it only flattens level 1.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it like this. Lets assume that <code>j</code> is the complete json object.</p>
<pre><code>def parse(j):
    for item in j:
        data = pd.DataFrame([{k:v for k, v in item.items() if k != 'locations'}])
        locs = pd.DataFrame(item.get('locations'))
        yield pd.concat([data, locs], axis=1).fillna(method='ffill')

pd.concat(parse(j), axis=0, ignore_index=True)

         date    name number arrTime   ...                       name platform stationIdx   track
0  01.10.2016  R 3932    Abc           ...    Spital am Pyhrn Bahnhof        2          0  R 3932
1  01.10.2016  R 3932    Abc   06:37   ...    Windischgarsten Bahnhof        2          1        
2  01.10.2016  R 3932    Abc   08:24   ...             Linz/Donau Hbf     1A-B         22        
3  01.10.2016  R 3932    Xyz           ...    Spital am Pyhrn Bahnhof        2          0  R 3932
4  01.10.2016  R 3932    Xyz   06:37   ...    Windischgarsten Bahnhof        2          1        
5  01.10.2016  R 3932    Xyz   08:24   ...             Linz/Donau Hbf     1A-B         22 
</code></pre>
<p>Your <code>JSON</code> however is not valid since you are missing a <code>,</code> to separate the two objects.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you only have one message in the file, the file is a valid <em>json</em>, but if you have more (as you placed them), the <em>json</em> is no longer valid (<a href="http://json.org" rel="nofollow noreferrer">[JSON]: Introducing JSON</a>). Example:</p>
<blockquote>
<pre><code>&gt;&gt;&gt; json.loads("{}")
{}
&gt;&gt;&gt; json.loads("{} {}")
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "c:\Install\x64\Python\Python\03.06.08\Lib\json\__init__.py", line 354, in loads
    return _default_decoder.decode(s)
  File "c:\Install\x64\Python\Python\03.06.08\Lib\json\decoder.py", line 342, in decode
    raise JSONDecodeError("Extra data", s, end)
json.decoder.JSONDecodeError: Extra data: line 1 column 4 (char 3)
&gt;&gt;&gt; json.loads("[{}, {}]")
[{}, {}]
</code></pre>
</blockquote>
<p>For more details, check <a href="https://docs.python.org/3/library/json.html#module-json" rel="nofollow noreferrer">[Python 3]: json - JSON encoder and decoder</a></p>
<p>The simplest way to have a valid <em>json</em> consisting of multiple messages:</p>
<ul>
<li>All of them should be enclosed in square brackets ("<strong><em>[</em></strong>", "<strong><em>]</em></strong>")</li>
<li>Every consecutive 2 should be separated by comma ("<strong><em>,</em></strong>")</li>
</ul>
<p>Just as in the "<em>locations</em>" sub messages' case.</p>
</div>
<span class="comment-copy">You can't load it because it's not valid JSON when you have multiple messages present.  Specifically, at the end of the first message and the beginning of the second you have <code>}{</code>.  That's breaking the parser.  In order to be <i>valid json</i> the entire body would have to be wrapped in square brackets <code>[]</code> and in between each message you would need a comma.</span>
