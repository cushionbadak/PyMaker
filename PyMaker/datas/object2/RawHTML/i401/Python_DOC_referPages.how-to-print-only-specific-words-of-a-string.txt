<div class="post-text" itemprop="text">
<p>I want to only print all the "words" that start with "/watch" from the string, and then add all the '/watch...' to a list. Thanks in advance!</p>
<pre><code># Take a random video from my youtube recommended and add it to watch2gether
import requests
from bs4 import BeautifulSoup as BS
import time
import random
# Importing libraries
num = random.randint(1, 20)
recommended = requests.get('https://www.youtube.com/results?search_query=svenska+youtube+klassiker&amp;sp=EgIQAQ%253D%253D')
recommended_soup = BS(recommended.content, features='lxml')
recommended_vid = recommended_soup.find_all('a', href=True)

for links in recommended_vid:
    print(links['href'])
</code></pre>
<p>Output:</p>
<pre><code>/
//www.youtube.com/upload
/
/feed/trending
/feed/history
/premium
/channel/UC-9-kyTW8ZkZNDHQJ6FgpwQ
/channel/UCEgdi0XIXXZ-qJOFPf4JSKw
/gaming
/feed/guide_builder
/watch?v=PbVt_O1kFpA
/watch?v=PbVt_O1kFpA
/user/thedjdoge
/watch?v=1lcksCjvuSs
/watch?v=1lcksCjvuSs
/channel/UCn-puiDqHNMhRvq6wsU3nsQ
/watch?v=AKj_pxp2l1c
/watch?v=AKj_pxp2l1c
/watch?v=QNnEqTQD6DM
/watch?v=QNnEqTQD6DM
/channel/UCDuOAYzgiZzqqlXd2G3GAwg
....
</code></pre>
<p>Maybe I can use something like .remove or .replace, don't know what to do so I appreciate all help.</p>
</div>
<div class="post-text" itemprop="text">
<p>you  can do the following</p>
<pre><code>for links in recommended_vid:
    if "/watch" in links[href]:
        print(link[href])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>yea re is definitely overkill here.  this is a perfect use case for <em>filter</em></p>
<pre><code>a_list  = ["/watch/blah", "not/watch"]
new_list = filter(lambda x: x.startswith("/watch"), a_list)
print(list(new_list))

['/watch/blah']
</code></pre>
<p>just be aware it returns a generator, so wrap it in list if you want the list.</p>
<p><a href="http://book.pythontips.com/en/latest/map_filter.html" rel="nofollow noreferrer">http://book.pythontips.com/en/latest/map_filter.html</a> is good if you want more information on functions that do this kind of data cleaning.  If you need to get really fancy with your data cleaning look into using pandas.  It has a steep learning curve, but it's fantastic for complicated data cleaning.</p>
</div>
<div class="post-text" itemprop="text">
<p>This should help you find all the <code>/watch</code> links. </p>
<pre><code>import re
pattern = re.compile(r"/watch")
# pattern = re.compile(r"/watch\?v=[a-zA-Z_0-9]{11}") -- This pattern is to find all the links as well
matches = pattern.finditer(&lt;your_string&gt;)
for m in matches:
    print(m) #will print all the locations at which /watch occurs
</code></pre>
<p>You can collect all the URLs in a list and proceed. Good Luck!!</p>
</div>
<div class="post-text" itemprop="text">
<p>Looking at your code, a simple <code>if</code> statement with <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>str.startswith()</code></a> should suffice to get what you want. </p>
<p>Assuming the <code>links['href']</code> contains a <code>str</code>, then:</p>
<pre><code>for links in recommended_vid:
    href = links['href']            # I think 'href' will be of type 'str'
    if href.startswith('/watch'):
        print(href)
</code></pre>
<p>Note: <code>.startswith()</code> will only work if <code>/watch</code> is really at the start of the <code>href</code>; you could also try <code>if '/watch' in href:</code>, which will match if that string appears anywhere in <code>href</code>.</p>
</div>
<span class="comment-copy">can you be more specific?  If you only want to print /watch, all that you will see is a bunch of "/watch".  Do you mean you only want to print the lines that begin with "/watch"?</span>
<span class="comment-copy">Exactly sorry that I wasn't so specific, but I didn't really know how to formulate myself to describe my problem that good.</span>
<span class="comment-copy">did you get it?</span>
<span class="comment-copy"><i>Some people, when confronted with a problem, think "I know, I'll use regular expressions." Now they have two problems.</i> -- Jamie Zawinski</span>
<span class="comment-copy">You really don't need a regex for this task, <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>str.startswith</code></a> would be enough!</span>
