<div class="post-text" itemprop="text">
<p>I have a list of 10 drawn rectangles (referenced as cubes in my script) that are affected by gravity. I made a simple collision system for them to stop when they hit the ground. How can I make it so when 2 cubes collide they stop falling like they do with the ground?</p>
<pre><code>import pygame
import time
import random
pygame.init()
clock = pygame.time.Clock()
wnx = 800
wny = 600
black = (0,0,0)
grey = (75,75,75)
white = (255,255,255)
orange = (255,100,30)
wn = pygame.display.set_mode((wnx, wny))
wn.fill(white)
def cube(cx,cy,cw,ch):
    pygame.draw.rect(wn, orange, [cx, cy, cw, ch])
def floor(fx,fy,fw,fh):
    pygame.draw.rect(wn, grey, [fx, fy, fw, fh])
def main():
    floory = 550    
    number = 30
    cubex = [0] * number
    cubey = [0] * number
    cubew = 10                          
    cubeh = 10
    for i in range(len(cubex)):
        cubex[i] = (random.randrange(0, 80)*10)
        cubey[i] = (random.randrange(2, 5)*10)
    gravity = -10
    exit = False

    while not exit:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                exit = True
        for i in range(len(cubex)): #i want to check here if it collides with an other cube
            if not (cubey[i] + 10) &gt;= floory:
                cubey[i] -= gravity

        wn.fill(white)
        floor(0,floory,800,50)

        for i in range(len(cubex)):
            cube(cubex[i], cubey[i], cubew, cubeh)

        pygame.display.update()
        clock.tick(5)
main()
pygame.quit()
quit()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://www.pygame.org/docs/ref/rect.html#pygame.Rect.colliderect" rel="nofollow noreferrer"><code>pygame.Rect.colliderect</code></a> to check if to rectangles are intersecting.</p>
<p>Create an rectangle (<a href="https://www.pygame.org/docs/ref/rect.html" rel="nofollow noreferrer"><code>pygame.Rect</code></a>) which defines the next position (area) of the cube:</p>
<pre class="lang-py prettyprint-override"><code>cubeR = pygame.Rect(cubex[i], cubey[i] + 10, cubew, cubeh)
</code></pre>
<p>Find all intersecting rectangles</p>
<pre class="lang-py prettyprint-override"><code>cl = [j for j in range(len(cubey)) if j != i and cubeR.colliderect(pygame.Rect(cubex[j], cubey[j], cubew, cubeh))]
</code></pre>
<p>And don't move (let further "fall") th cube if there is <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a> collision:</p>
<pre class="lang-py prettyprint-override"><code>if not any(cl):
    # [...]
</code></pre>
<p>The check may look like this:</p>
<pre class="lang-py prettyprint-override"><code>for i in range(len(cubex)):
    cubeR = pygame.Rect(cubex[i], cubey[i] + 10, cubew, cubeh)
    cisect = [j for j in range(len(cubey)) if j != i and cubeR.colliderect(pygame.Rect(cubex[j], cubey[j], cubew, cubeh))]
    if not any(cisect) and not (cubey[i] + 10) &gt;= floory:
        cubey[i] -= gravity
</code></pre>
<p>Note, since all the cubes are aligned to an 10*10 raster, it is sufficient to check if the origins of the cubes are equal:</p>
<pre class="lang-py prettyprint-override"><code>for i in range(len(cubex)):
    cisect = [j for j in range(len(cubey)) if j != i and cubex[i] == cubex[j] and cubey[i]+10 == cubey[j]]
    if not any(cisect) and not (cubey[i] + 10) &gt;= floory:
        cubey[i] -= gravity
</code></pre>
</div>
