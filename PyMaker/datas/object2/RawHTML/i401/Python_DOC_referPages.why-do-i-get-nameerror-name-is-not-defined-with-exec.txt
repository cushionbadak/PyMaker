<div class="post-text" itemprop="text">
<p>When I try this code in a console (in PyCharm):</p>
<pre><code>exec("import random")
exec("def f():\n\treturn random.randint(0, 10), random.randint(0, 10)")
locals()['f']()
</code></pre>
<p>it works fine. But when I try to do exactly the same in my program it doesn't work, and I get the exception</p>
<pre><code>NameError: name 'random' is not defined.
</code></pre>
<p>I found that this code doesn't raise errors:</p>
<pre><code>exec("import random", globals(), globals())
exec("def f():\n\treturn random.randint(0, 10), random.randint(0, 10)", globals(), globals())
globals()['f']()
</code></pre>
<p>But I can't understand why.</p>
<p>What's going on?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're not doing "exactly the same" in your program. That exact code, copied verbatim into a file and run as a Python script, works just fine (albeit with no visible result).</p>
<p>What I think you might actually be doing is something like this:</p>
<pre><code>def import_stuff():
    exec("import random")

def do_stuff():
    import_stuff()
    exec("def f():\n\treturn random.randint(0, 10), random.randint(0, 10)")
    locals()['f']()

do_stuff()
</code></pre>
<p>The above code does result in the <code>NameError</code> exception noted in your question, because (to quote the <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow noreferrer">docs</a>),</p>
<blockquote>
<p>In all cases, if the optional parts are omitted, the code is executed in the current scope.</p>
</blockquote>
<p>Since the code above imports <code>random</code> into the local scope of <code>import_stuff()</code>, it's not visible to <code>do_stuff()</code>.</p>
<p>In fact, the code above is identical in behaviour to the following:</p>
<pre><code>def import_stuff():
    import random

def do_stuff():
    import_stuff()
    def f():
        return random.randint(0, 10), random.randint(0, 10)
    f()

do_stuff()
</code></pre>
<p>â€¦ which also fails, for the same reason.</p>
<p>Assuming this is what's actually going on in your real code, a version modified as in your question by adding <code>globals(), globals()</code> arguments to <code>exec()</code> would work, because then you're explicitly importing <code>random</code> into the global scope, where everything can see it.</p>
</div>
