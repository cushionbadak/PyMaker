<div class="post-text" itemprop="text">
<p>I have a .txt file with first names, last names, and addresses. I would like to use bubble sort to arrange the list alphabetically by the last name. I have some idea of what to do but I am ultimately lost.</p>
<pre><code>Dayn,Overton,45 Ashton Way
Fanny,York,71 Luck Ln.
Maxine,Pierson,876 Kiwi St.
Candi,Robertson,25 Lake View
Dex,Brooks,94 Sunny Cir.
</code></pre>
<pre><code>first = []
last = []
address = []

first = []
last = []
address = []

f = open('/Users/calebcalter/Desktop/sorting.txt', 'r')
last_sort = f.read()

print(last_sort)

length = len(last_sort)

for i in range(length):
    for o in range(length-1):
        if last_sort[o] &gt; last_sort[o+1]:
            last_sort[o], last_sort[o+1] = last_sort[o+1], last_sort[o]
            print(last_sort)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is a <strong>crucial</strong> error in the program, you're using <code>f.read()</code> which reads the whole file in a string, and from here anything <strong>doesn't make any sense</strong>. <br/>To read it as a list of strings (where each string is a line), use <code>f.readlines()</code> (check <a href="https://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow noreferrer">[Python 3]: Methods of File Objects</a> for more details).</p>
<p>Then, you're comparing the <strong>entire strings</strong> (so your sorting is done mainly on the <em>first name</em> which is the 1<sup>st</sup> part of each string). To sort on the <em>last name</em> (which is the 2<sup>nd</sup> part), you have to:</p>
<ul>
<li>Split each string on "<strong><em>,</em></strong>" (to get its parts)</li>
<li>Do the comparison on the 2<sup>nd</sup> part (index <strong><em>1</em></strong>), which is the last name</li>
</ul>
<p>Lastly, your outer loop is a <em>for</em> (which involves a fixed number (<strong><em>N</em></strong>) of steps):</p>
<ul>
<li>I didn't spent time thinking whether it's enough for any list (what's the maximum amount of times a list needs to be traversed, in order to perform all the swaps). Anyway, if it isn't, you might end up with the list not being sorted</li>
<li>The other end: if only the last 2 values in the list need to be swapped (and thus, traversing the list once would be enough), you're still traversing it <strong><em>N</em></strong> times</li>
<li>Considering the above, I switched to <em>while</em> which traverses the list until the last traversal didn't perform any swap (meaning that it's already sorted)</li>
</ul>
<p>Below is <strong>just the sorting part</strong> extracted (and modified) from your code. Note that because everything is for demo purposes only:</p>
<ul>
<li>There's no error checking</li>
<li>There are ways to improve it performance-wise, but they are out of the current scope</li>
</ul>
<p><em>code.py</em>:</p>
<pre class="lang-py prettyprint-override"><code>#!/usr/bin/env python3

import sys


def last_name_bubble(records):
    length = len(records)
    done = False
    while not done:
        done = True
        for i in range(length - 1):
            #if records[i] &gt; records[i + 1]:  # This is your original condition
            if records[i].split(",")[1].strip() &gt; records[i + 1].split(",")[1].strip():
                records[i], records[i + 1] = records[i + 1], records[i]
                done = False
                #print(records)


def main():
    person_list = [
        "Dayn,Overton,45 Ashton Way",
        "Fanny,York,71 Luck Ln.",
        "Maxine,Pierson,876 Kiwi St.",
        "Candi,Robertson,25 Lake View",
        "Dex,Brooks,94 Sunny Cir.",
    ]
    print(person_list)
    last_name_bubble(person_list)
    print(person_list)


if __name__ == "__main__":
    print("Python {:s} on {:s}\n".format(sys.version, sys.platform))
    main()
</code></pre>
<p><strong>Output</strong>:</p>
<blockquote>
<pre><code>[cfati@CFATI-5510-0:e:\Work\Dev\StackOverflow\q054769022]&gt; "e:\Work\Dev\VEnvs\py_064_03.06.08_test0\Scripts\python.exe" code.py
Python 3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)] on win32

['Dayn,Overton,45 Ashton Way', 'Fanny,York,71 Luck Ln.', 'Maxine,Pierson,876 Kiwi St.', 'Candi,Robertson,25 Lake View', 'Dex,Brooks,94 Sunny Cir.']
['Dex,Brooks,94 Sunny Cir.', 'Dayn,Overton,45 Ashton Way', 'Maxine,Pierson,876 Kiwi St.', 'Candi,Robertson,25 Lake View', 'Fanny,York,71 Luck Ln.']
</code></pre>
</blockquote>
</div>
