<div class="post-text" itemprop="text">
<p>I am having some trouble with argparse. My goal is to have the user select one and only one option (-a, -b, -c, etc.) and then the arguments for that option. I'm using subparsers to do this:</p>
<pre><code>parser_iq = subparsers.add_parser('iq', help='iq help')
parser_iq.add_argument("-iq", "--index_query", nargs="+", action=required_length(1,6),type=organize_args, help="Choose an index to query for. Start-date, end-date,  "\
           "csv, json, stdout are all optional")
</code></pre>
<p>This is just one of the subparsers I plan to have. </p>
<p><strong>Problem</strong>: When running this in the command line:</p>
<pre><code>python3.6 main.py iq "index_name_here"
</code></pre>
<p>I get the error that "index_name_here" is unrecognized. I am parsing it like this:</p>
<pre><code>args = parser.parse_args()
</code></pre>
<p>I found some problems similar to mine, but they were passing in sys.argv into parse_args(), which was their issue. </p>
<p>How can I make it so that argparse will recognize the arguments passed? Also, is there a way to have only one option passed in at a time? For example:</p>
<p>Correct:</p>
<pre><code>main.py option1 arg1 arg2
</code></pre>
<p>Wrong:</p>
<pre><code>main.py option1 option2 arg1 arg2
</code></pre>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to pass the value like <code>python3.6 main.py -iq "index_name_here"</code> (i.e., use <code>-iq</code>, not <code>iq</code>).</p>
<p>As far as making mutually exclusive arguments, subparsers is, from what I understand, the way to go, but I can't give much in the way of guidance on how to proceed on that.</p>
<p>Edit:</p>
<p>In response to your comment, does the following work:</p>
<p><code>python3.6 main.py iq -iq "index_name_here"</code></p>
<p>?</p>
</div>
<span class="comment-copy"><code>python3.6 main.py iq -iq "index_name_here"</code>.  The first <code>iq</code> identifies the subparser.  The <code>-iq</code> flags its argument.</span>
<span class="comment-copy">Are you defining the <code>required_length</code> Action class?</span>
<span class="comment-copy">thanks for the help! When I try running with -iq, it gives me this error:    error: invalid choice: 'log4j-*' (choose from 'iq')</span>
<span class="comment-copy">Yes, iq -iq works! I didn't think about that at all, and it doesn't make much sense to me. Do you know why it runs like this?</span>
<span class="comment-copy">@helloworld95 When you pass <code>iq</code>, python knows to invoke the <code>parser_iq</code> parser (because that's the first argument you pass to <code>add_parser</code>). This parser has an argument that can be changed by passing an <code>-iq</code> or <code>--index_query</code> flag along with its associated argument. The documentation isn't the best, but see: <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html</a></span>
<span class="comment-copy">According to the docs, its not required to specify both the parser and argument (iq and -iq).  &gt;&gt;&gt; parser_a = subparsers.add_parser('a', help='a help') &gt;&gt;&gt; parser_a.add_argument('bar', type=int, help='bar help')  &gt;&gt;&gt; parser.parse_args(['a', '12']) Namespace(bar=12, foo=False)  It seems like I'm following the doc, but its still not working as I'd like it to.</span>
<span class="comment-copy">That <code>bar</code> argument is a <code>positional</code>.  Your <code>-iq</code> is a flagged (<code>optionals</code>) argument.  The distinction is fundamental to how <code>argparse</code> works.  The <code>subparsers</code> argument is actually a specialized <code>positional</code>.</span>
