<div class="post-text" itemprop="text">
<p>I have a model class of which I want two fields to be a choice fields, so to populate those choices I am using an enum as listed below</p>
<pre><code>#models.py
class Transaction(models.Model):
    trasaction_status = models.CharField(max_length=255, choices=TransactionStatus.choices())
    transaction_type = models.CharField(max_length=255, choices=TransactionType.choices())

#enums.py
class TransactionType(Enum):

    IN = "IN",
    OUT = "OUT"

    @classmethod
    def choices(cls):
        print(tuple((i.name, i.value) for i in cls))
        return tuple((i.name, i.value) for i in cls)

class TransactionStatus(Enum):

    INITIATED = "INITIATED",
    PENDING = "PENDING",
    COMPLETED = "COMPLETED",
    FAILED = "FAILED"
    ERROR = "ERROR"

    @classmethod
    def choices(cls):
        print(tuple((i.name, i.value) for i in cls))
        return tuple((i.name, i.value) for i in cls)
</code></pre>
<p>However, when I am trying to access this model through admin I am getting the following error :</p>
<pre><code>Django Version: 1.11
Exception Type: ValueError
Exception Value:    
too many values to unpack (expected 2)
</code></pre>
<p>I followed following two articles to use enums :</p>
<pre><code>https://hackernoon.com/using-enum-as-model-field-choice-in-django-92d8b97aaa63

https://blog.richard.do/2014/02/18/how-to-use-enums-for-django-field-choices/
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You define an <code>Enum</code> by setting the various options as documented <a href="https://docs.python.org/3/library/enum.html#creating-an-enum" rel="nofollow noreferrer">here</a>:</p>
<pre><code>class TransactionStatus(Enum):

    INITIATED = "INITIATED"
    PENDING = "PENDING"
    COMPLETED = "COMPLETED"
    FAILED = "FAILED"
    ERROR = "ERROR"
</code></pre>
<p>Note there are no commas! This allows you later in your code to refer to <code>TransactionStatus.ERROR</code> or <code>TransactionStatus.PENDING</code>.</p>
<p>The rest of your code is correct. You get the <code>choices</code> by creating tuples of <code>option.name</code>, <code>option.value</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Problem in your code is that <code>INITIATED = "INITIATED",</code> a comma after <code>INITIATED</code> option and other options. when we add comma after any string it will become a tuple. See an example below</p>
<pre><code>s = 'my str'
print(type(s))
# output: str

s = 'my str',
print(type(s))
# output: tuple
</code></pre>
<h1>models.py</h1>
<pre><code>class Transaction(models.Model):
    trasaction_status = models.CharField(max_length=255, choices=TransactionStatus.choices())
    transaction_type = models.CharField(max_length=255, choices=TransactionType.choices())
</code></pre>
<h1>enums.py</h1>
<pre><code>class TransactionType(Enum):

    IN = "IN"
    OUT = "OUT"

    @classmethod
    def choices(cls):
        print(tuple((i.name, i.value) for i in cls))
        return tuple((i.name, i.value) for i in cls)

class TransactionStatus(Enum):

    INITIATED = "INITIATED"
    PENDING = "PENDING"
    COMPLETED = "COMPLETED"
    FAILED = "FAILED"
    ERROR = "ERROR"

    @classmethod
    def choices(cls):
        print(tuple((i.name, i.value) for i in cls))
        return tuple((i.name, i.value) for i in cls)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>According to your reference from <a href="https://hackernoon.com/using-enum-as-model-field-choice-in-django-92d8b97aaa63" rel="nofollow noreferrer">https://hackernoon.com/using-enum-as-model-field-choice-in-django-92d8b97aaa63</a>. The choices should be list of tuple, while yours will return a tuple of tuple. 
More over i is different from i.name. Try:</p>
<pre><code>#enums.py
class TransactionType(Enum):

    IN = "IN",
    OUT = "OUT"

    @classmethod
    def choices(cls):
        return [(i, i.value) for i in cls]
</code></pre>
</div>
<span class="comment-copy">You have a comma after "IN" and after "INITIATED"...</span>
<span class="comment-copy">Four lines of your code have unwanted commas at the end.</span>
<span class="comment-copy">This is not how you define an <code>Enum</code>. Just remove the commas.</span>
<span class="comment-copy">Not the right advice. Remove the commas, read the <a href="https://docs.python.org/3/library/enum.html#creating-an-enum" rel="nofollow noreferrer">official documentation</a></span>
