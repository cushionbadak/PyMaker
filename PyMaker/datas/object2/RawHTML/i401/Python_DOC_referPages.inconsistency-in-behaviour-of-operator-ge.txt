<div class="post-text" itemprop="text">
<pre><code>from operator import ge
import numpy as np

&gt;&gt;&gt; ge([0,2,3], 0.8)
True
&gt;&gt;&gt; ge([0,2,3], np.float64(0.8))
array([False,  True,  True])
</code></pre>
<p>Any explanation for the difference in the behaviour?</p>
<p>Later found out:</p>
<pre><code>&gt;&gt;&gt; ge([0,2,3], np.float(0.8))
True
</code></pre>
<p>too :)</p>
</div>
<div class="post-text" itemprop="text">
<p>It's obviously the difference between the way that Python and Numpy deal with arrithmatic operations. <code>ge(a, b)</code> is the same as <code>a &gt;= b</code>. If one of the operands is a Numpy object the corresponding method will be called and if the other operand is an array it will perform the comparison in an element-wise manner. That is, if you do the following you'll get the same result:</p>
<pre><code>In [3]: [0,2,3] &gt;= np.float64(0.8)
Out[3]: array([False,  True,  True])
</code></pre>
<p>Python in other hand, deals with the situation differently in both 2 and 3 versions. You're presumably using Python-2.X and it has it's related logic (almost ilogical lol) but in python 3 you can't compare objects in different types, unless the respective operation is explicitly implemented for one of the objects. For built-in objects except different numeric types, objects with different types never compare equal. </p>
<pre><code>In [4]:  ge([0,2,3], 0.8)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&lt;ipython-input-4-405eded6881c&gt; in &lt;module&gt;()
----&gt; 1 ge([0,2,3], 0.8)

TypeError: '&gt;=' not supported between instances of 'list' and 'float'
</code></pre>
<p>Read <a href="https://docs.python.org/3/library/stdtypes.html#comparisons" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#comparisons</a> for more details.</p>
</div>
<span class="comment-copy">which python version you're using? I'm getting an error for 1st expression in python 3.6</span>
<span class="comment-copy">@AkshayNevrekar the first expression works in python 2.7.14</span>
