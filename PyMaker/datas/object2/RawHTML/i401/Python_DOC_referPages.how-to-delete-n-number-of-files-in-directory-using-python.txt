<div class="post-text" itemprop="text">
<p>I have a cat and dog image dataset. I converted into two folders (cat and dog) each folder contains roughly 10000 images. So Far I don't want 10000 images, I need only 2000 images in each folder. How to automate this in python.</p>
<p>I know to delete a file X, I could use <code>os.remove(X)</code>
similarly to delete a folder <code>os.rmdir(dir_)</code></p>
<p>But I'm wondering <strong>how could i delete randomly n files in each folder effectively</strong></p>
<p>So Far I tried,</p>
<pre><code>dogs_dir=os.listdir('dogs')
cats_dir=os.listdir('cats')

selected_dogs = np.random.choice(dogs_dir,8000)
selected_cats = np.random.choice(cats_dir,8000)

for file_ in selected_dogs:
    os.remove('dogs/'+file_)

for file_ in selected_cats:
    os.remove('cats/'+file_)    
</code></pre>
<p>The above code does the job for me, but I'm wondering is their effective way so that i could remove complexity in my code.</p>
<p>Any help would be appreciable.</p>
<p>I'm using ubuntu 17.10, For Now linux based solution is sufficient, but If it compatible with windows also then it's more appreciable.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code seems okay to me.</p>
<p>A few adjustments I would make:</p>
<ol>
<li><p>It's better to use the <code>os</code> library so it should be cross-platform. This is because, when you write <code>os.remove('dogs/'+file_)</code>, the <code>/</code> is not cross platform. Would be better to use <code>os.remove(os.path.join('dogs', file_))</code>.</p></li>
<li><p>You're wasting a lot of space holding the list of filenames to delete (Two lists of 10000 strings). If it doesn't matter to you which images to keep you could save a little bit of space (20%) by slicing:</p>
<pre class="lang-py prettyprint-override"><code>dogs_delete=os.listdir('dogs')[2000:]  # Take the last 8000 images
for file_ in dogs_delete:
    os.remove(os.path.join('dogs', file_))
</code></pre>
<p>If it does matter which images to keep, better to generate indices (less space):</p>
<pre class="lang-py prettyprint-override"><code>dogs_dir=os.listdir('dogs')
for num in random.sample(len(dogs_dir), 8000):
    os.remove(os.path.join('dogs', dogs_dir[num]))
</code></pre></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Instead of <code>numpy</code> and <code>os</code>, I would use <a href="https://docs.python.org/library/random.html#random.sample" rel="nofollow noreferrer"><code>random.sample()</code></a> and the <a href="https://docs.python.org/library/pathlib.html" rel="nofollow noreferrer"><code>pathlib</code></a> module.</p>
<pre><code>from pathlib import Path
import random

def delete_images(directory, number_of_images, extension='jpg'):
    images = Path(directory).glob(f'*.{extension}')
    for image in random.sample(images, number_of_images):
        image.unlink()

delete_images('dogs', 8000)
delete_images('cats', 8000)    
</code></pre>
<p><a href="https://docs.python.org/library/pathlib.html#pathlib.Path.glob" rel="nofollow noreferrer"><code>Path('cats/').glob('*.jpg')</code></a> returns a list of <code>Path</code> objects that represent files in the <code>cats</code> directory whose filenames end with <code>.jpg</code>.</p>
<p><a href="https://docs.python.org/library/random.html#random.sample" rel="nofollow noreferrer"><code>random.sample(&lt;something&gt;, 8000)</code></a> takes a random sample of 8000 items from a list.</p>
<p><a href="https://docs.python.org/library/pathlib.html#pathlib.Path.unlink" rel="nofollow noreferrer"><code>Path().unlink()</code></a> deletes a file. </p>
</div>
<span class="comment-copy">Please clarify: a) OS: Linux, Windows, you need universal solution, b) are you aware of <a href="https://docs.python.org/3.7/library/shutil.html" rel="nofollow noreferrer">shutil</a> ?</span>
<span class="comment-copy">Your code seems reasonable. The only things I'd say are: 1) <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.random.choice.html" rel="nofollow noreferrer"><code>np.random.choice</code></a> samples with replacement by default, pass <code>replace=False</code> to avoid picking the same file twice 2) If you want, you can avoid using NumPy for this task by just using <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer"><code>random.sample</code></a>.</span>
<span class="comment-copy">@AlexYu - updated to the question</span>
<span class="comment-copy">You can also consider moving 8000 files to another directory and then deleting that entire directory</span>
<span class="comment-copy">@jdehesa - I'll take this in mind, thanks for the advice.</span>
<span class="comment-copy">@MohamedThasinah <code>pathlib</code> was added in Python 3.4 which was 5 years ago. I think it's not used much because it's not available on Python 2.</span>
<span class="comment-copy">The only thing I really did differently was using <code>random.sample()</code>. You could've just as easily used <code>os.listdir()</code> in my list comprehension.</span>
