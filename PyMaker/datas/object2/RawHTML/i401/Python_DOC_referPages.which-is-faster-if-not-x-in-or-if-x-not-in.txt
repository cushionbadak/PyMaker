<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3481554/if-loop-x-not-in-vs-not-x-in">If loop: “x not in” vs. “not x in” [duplicate]</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<pre><code>if not 7 in [5, 6, 7]:
     # something

if 7 not in [5, 6, 7]:
    # something
</code></pre>
<p>Which is faster?</p>
</div>
<div class="post-text" itemprop="text">
<p>They are exactly the same, and thus take the same amount of time. <code>not in</code> is just syntactic sugar. Using the <code>dis</code> module, we can see that both result in the same bytecode:</p>
<pre><code>&gt;&gt;&gt; dis.dis("not x in y")
  1           0 LOAD_NAME                0 (x)
              2 LOAD_NAME                1 (y)
              4 COMPARE_OP               7 (not in)
              6 RETURN_VALUE
&gt;&gt;&gt; dis.dis("x not in y")
  1           0 LOAD_NAME                0 (x)
              2 LOAD_NAME                1 (y)
              4 COMPARE_OP               7 (not in)
              6 RETURN_VALUE
</code></pre>
<p>Even adding parentheses as <code>not (x in y)</code> does not change that, unless, of course, you add more to the parentheses:</p>
<pre><code>&gt;&gt;&gt; dis.dis("not (x in y)")
  1           0 LOAD_NAME                0 (x)
              2 LOAD_NAME                1 (y)
              4 COMPARE_OP               7 (not in)
              6 RETURN_VALUE
&gt;&gt;&gt; dis.dis("not (x in y or z)")
  1           0 LOAD_NAME                0 (x)
              2 LOAD_NAME                1 (y)
              4 COMPARE_OP               6 (in)
              6 JUMP_IF_TRUE_OR_POP     10
              8 LOAD_NAME                2 (z)
        &gt;&gt;   10 UNARY_NOT
             12 RETURN_VALUE
</code></pre>
<p>Tested with both, Python 3.6.7 and 2.7.15.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's exactly the same, there is no difference at all. The standard operator is in fact <code>not in</code> (see the <a href="https://docs.python.org/3/reference/expressions.html#membership-test-operations" rel="nofollow noreferrer">docs</a>), the <code>not 7 in</code> form will get automatically transformed to <code>7 not in</code>.</p>
<p>So the recommended way is <code>if 7 not in [5, 6, 7]</code>, that's a straight use of the operator and also has improved readability.</p>
</div>
<span class="comment-copy">Welcome to StackOverflow. This is the kind of question you could easily test for yourself. Have you tried <code>timeit</code> or some other mechanism to test both those lines on your machine?</span>
<span class="comment-copy">Only a matter of readability and personal choice.</span>
<span class="comment-copy">When in doubt, <i>measure</i>. Run a loop a couple of million times for each variant, and measure the total time of the loops. Compare the results. See e.g. <a href="https://stackoverflow.com/questions/2866380/how-can-i-time-a-code-segment-for-testing-performance-with-pythons-timeit">this QA</a> for examples on how to do the timing.</span>
