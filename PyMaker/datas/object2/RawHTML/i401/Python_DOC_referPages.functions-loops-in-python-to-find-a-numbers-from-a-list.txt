<div class="post-text" itemprop="text">
<p>Is there anyway to find the maximum numbers I can choose from a list of numbers and the sum should not exceed 15. Ex: A= [2,5,3,1,10,4,5,9], B=15 output: 5.</p>
<p>I have tried this so far:</p>
<pre><code>A,B = map(int,input().split(" "))
A = list(map(int,input().split(" ")))
A.sort()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sort the list. Loop through the list, sum up to current loopindex. If the result is greater then 15, return the previous index.</p>
<pre><code>A= [2,5,3,1,10,4,5,9]
A.sort()
for i in range(len(A)):
    if sum(A[:i]) &gt; 15:
        print(i-1)
        break
</code></pre>
<p>Output:<br/>
<code>5</code></p>
</div>
<div class="post-text" itemprop="text">
<p>A similar approach to the answer by @J.D. But instead of calculating the <code>sum</code> every time, we could use a variable <code>sum</code> and add an element each time and check.</p>
<pre><code>&gt;&gt;&gt; A = [2,5,3,1,10,4,5,9]
&gt;&gt;&gt; A.sort()
&gt;&gt;&gt; sum = 0
&gt;&gt;&gt; for i in range(len(A)):
...   sum += A[i]
...   if sum &gt; 15:
...     print(i)
...     break
... 
5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code># Precondition: a must be in monotonically increasing order
def max_numbers(a, b):
    s = 0
    for i, n in enumerate(a):
        s += n
        if s &gt; b:
            return i

print(max_numbers(a, b))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also extend on @J.D.'s method and use numpy. You could perform a cumulative sum of the array and then check if the sum to each element exceeds 15.</p>
<pre><code>import numpy as np

a = np.array([2, 5, 3, 1, 10, 4, 5, 9]).sort()

cum_sum =  np.cumsum(a)&lt;16 # returns an array of bools

print(cum_sum.sum())
</code></pre>
<p>returns:</p>
<pre><code>5
</code></pre>
</div>
<span class="comment-copy">What do you mean by 'maximum numbers'? All possible combinations?</span>
<span class="comment-copy">Sort the list, then walk the list until the running total is larger than 15.</span>
<span class="comment-copy">Ya but the numbers should not exceed 15 and the output should display 5.</span>
<span class="comment-copy">@chepner is right. sort the list in ascending order then count the # of items you can add up until you exceed 15 and return the counter.</span>
<span class="comment-copy">Then learn how to code: <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">docs.python.org/3/tutorial</a>  - that is far more beneficial then copy/pasting answers from SO.</span>
<span class="comment-copy">This is inefficient; you don't need to sum up each slice anew on each iteration.</span>
<span class="comment-copy">@chepner - you are 100% right :) it should be <code>return i</code></span>
