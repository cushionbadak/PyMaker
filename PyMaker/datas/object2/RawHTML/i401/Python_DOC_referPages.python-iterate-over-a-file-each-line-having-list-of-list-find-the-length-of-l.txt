<div class="post-text" itemprop="text">
<p>I am having a file containing every line as list of lists. I want to read each line from the file and find the length of list and get the count of same number of list. </p>
<p><strong>Input in the file.dat</strong></p>
<pre><code>[['11', '42'], ['11', '46'], ['46', '47']]

[['48', '49'], ['48', '50']]

[['12', '22'], ['33', '46'], ['41', '42']]

[['48', '42']]
</code></pre>
<p><strong>Output:</strong> </p>
<pre><code>length of list @line1 = 3

length of list @line2 = 2

length of list @line3 = 3

length of list @line4 = 1

number of list with length 1 = 1

number of list with length 2 = 1

number of list with length 3 = 2 
</code></pre>
<p>I tried to read the file with numpy array and find the length. But I don’t know how to read the file line by line and find the length iteratively. Is there any way to do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>Suppose each line of the data file has the list in correct format, i.e. one '[' at the start of each line and one ']' at the end; plus each list in a line also use '[' and ']' correctly, then a simpler solution is just count the number of '[' in each line (and decrease by 1) to determine the number of lists in that line.</p>
<p>Below is my code basing on above assumption:</p>
<pre><code>filename = 'file.dat'
rst = {}

with open(filename, 'r') as f:
    for i, l in enumerate(f):
        count = l.count('[') - 1
        if count in rst:
            rst[count] += 1
        else:
            rst[count] = 1
        print('length of list @line%d = %d' % (i + 1, count))

for k in sorted(rst):
    print('number of list with length %s = %d' % (k, rst[k]))
</code></pre>
<p>Output:</p>
<pre><code>length of list @line1 = 3
length of list @line2 = 2
length of list @line3 = 3
length of list @line4 = 1
number of list with length 1 = 1
number of list with length 2 = 1
number of list with length 3 = 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This example would work, using <a href="https://docs.python.org/3.6/library/ast.html#ast.literal_eval" rel="nofollow noreferrer">ast literal_eval</a> (much safer than a simple <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer">eval</a>) and <a href="https://docs.python.org/3.6/library/collections.html#collections.Counter" rel="nofollow noreferrer">Counter</a> to count the lines with a given length.</p>
<pre><code>import ast
from collections import Counter

lengths = Counter()

with open("file.dat") as fp:
    for cnt, line in enumerate(fp.readlines()):
        ll = ast.literal_eval(line)
        print(f"length of list {cnt+1} = {len(ll)}")
        lengths.update([len(ll)])

for lng, num in lengths.items():
    print(f"number of list with length {lng} = {num}")
</code></pre>
<p>Output:</p>
<blockquote>
<p>length of list 1 = 3<br/>
  length of list 2 = 2<br/>
  length of list 3 = 3<br/>
  length of list 4 = 1<br/>
  number of list with length 3 = 2<br/>
  number of list with length 2 = 1<br/>
  number of list with length 1 = 1</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<pre><code>def main():
    sizeIndex = {}
    with open("/tmp/file.dat") as f:
        count = 1
        while True:
            line = f.readline()
            if not line:
                break
            lineList = eval(line)
            listLength = len(lineList)
            print "length of list @line{} = {}".format(count, listLength)
            if listLength not in sizeIndex:
                sizeIndex[listLength] = []
            sizeIndex[listLength].append(listLength)
            count += 1
    for x in sorted(sizeIndex.keys()):
        print "number of list with length {} = {}".format(x, len(sizeIndex[x]))

main()
</code></pre>
<p>Output:</p>
<pre><code>length of list @line1 = 3
length of list @line2 = 2
length of list @line3 = 3
length of list @line4 = 1
number of list with length 1 = 1
number of list with length 2 = 1
number of list with length 3 = 2
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/2/tutorial/…</a></span>
<span class="comment-copy">why link to <code>python 2</code> @mad_</span>
<span class="comment-copy">@aws_apprentice I could not see python version tagged in the post. But, in case, it helps <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/3/tutorial/…</a></span>
<span class="comment-copy">How would you get that output from that input?</span>
<span class="comment-copy">modified the question, please check the edit</span>
