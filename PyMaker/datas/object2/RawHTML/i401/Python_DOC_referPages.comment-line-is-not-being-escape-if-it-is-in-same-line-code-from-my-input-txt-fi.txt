<div class="post-text" itemprop="text">
<p>I have lines containing comments marked by <code>//</code> in my <code>input.txt</code> file:</p>
<p><strong>Input File</strong></p>
<pre><code>something
something // something something
// something something
something
</code></pre>
<p>Here line 3 is being skipped, but line 2 is not.</p>
<p><strong>My Code</strong></p>
<pre><code>for line in (l for l in open('input.txt', mode='r') if not l.lstrip().startswith('//')):
    f_write.write(line)
</code></pre>
<p>The same code rewritten as a reusable function:</p>
<pre><code>def skip_comments(file):
    for line in file:
        if not line.lstrip().startswith('//'):
            yield line

f = open('input.txt')
for line in skip_comments(f):
    f_write.write(line)
</code></pre>
<p>Both snippets produce the same result. I've tried many times to open with different mode and string but without <code>lstrip</code>, it doesn't work.</p>
</div>
<div class="post-text" itemprop="text">
<p>you should write your code like this:</p>
<pre><code>def skip_comments(file):
for line in file:
    if not line.lstrip().startswith('//'):
        line = line.split("//")
        yield line[0]
</code></pre>
<p><strong>update</strong></p>
<p>if you want to check more complex comment i suggest the code below:</p>
<pre><code>def skip_comments(file):
for line in file:
    if line.startswith('//'):
        continue
    elif line.find("/*")&gt;=0:
        startIndex = line.find("/*")
        endIndex = line.find("*/")
        line = line[:startIndex] + line[endIndex + len("*/"):]
        yield line
    else
        line = line.split("//")[0]
        yield line
</code></pre>
<p>and you can put middle part in while like this so it removes all the comments in line:</p>
<pre><code>def skip_comments(file):
for line in file:
    if line.startswith('//'):
        continue
    elif line.find("/*")&gt;=0:
        while(line.find("/*")&gt;=0):
            startIndex = line.find("/*")
            endIndex = line.find("*/")
            line = line[:startIndex] + line[endIndex + len("*/"):]
        yield line
    else
        line = line.split("//")[0]
        yield line
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>str.startswith</code></a> checks exactly what its name implies: whether a string starts with the requested prefix it not. No amount of stripping leading whitespace with <a href="https://docs.python.org/3/library/stdtypes.html#str.lstrip" rel="nofollow noreferrer"><code>lstrip</code></a> is going to magically expose comments starting in the middle of a line.</p>
<p>A better option would be <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer"><code>str.find</code></a>, which returns the index of the comment on the line.</p>
<pre><code>def skip_comments(file):
    for line in file:
        index = line.find('//')
        if index &gt;= 0:
            yield line[:index]
        else:
            yield line
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can check if '//' is in your line and just keep the text that appear before '//'</p>
<pre><code>for line in (l.split('//')[0].strip() for l in open('input.txt', mode='r') if l.split('//')[0].strip()):
    f_write.write(line)
</code></pre>
</div>
<span class="comment-copy">Does line 2 <code>startswith</code> a double slash in your opinion?</span>
<span class="comment-copy"><code>startswith</code> will only check start not in middle.</span>
<span class="comment-copy">Oh Yes. Thanks skaul05</span>
<span class="comment-copy">Thanks you so much Abbas Dehghan</span>
<span class="comment-copy">Hello Abbas Dehghan, if i wanna check more condition suppose comment line start with /* and end it by <i>/ we know it already. So in this case i can't more check within one line with in your 3 number line here if not line.lstrip().startswith('//'): if i use here 'or' or 'and' such like as if not line.lstrip().startswith('//') or line.lstrip().startswith('/</i>') and line.lstrip().endswith('*/'): and same rule i've flowed under code but working only first condition here. Have i used to another condition for this?</span>
<span class="comment-copy">Mainly i wanted to know that both comment line  // and /* */ contains in my code. So in this case i can't use here within one condition. Individually it's working fine.</span>
<span class="comment-copy">Oh yes just mind  i've used there elif for checking and it's fine but my output file is being noisy a little.</span>
<span class="comment-copy">hi @Prosenjit. please check the update</span>
<span class="comment-copy">Thank you so much Mad Physicist</span>
<span class="comment-copy">@Prosenjit. You now have enough reputation to upvote answers you like, which is the proper way to show thanks in this community. When you get a chance, please select an answer by clicking the check mark next to the one you like best. This will remove your question from the unanswered queue.</span>
<span class="comment-copy">Yes i've done it according to my question. Thanks for your advice.</span>
<span class="comment-copy">Sorry i forgot it. Now it's okay. Thanks.</span>
<span class="comment-copy">Thank you so much rusu_ro1</span>
