<div class="post-text" itemprop="text">
<p>I am trying to use <code>weakref.finalize</code> to handle the destruction of objects according to <a href="https://docs.python.org/3.6/library/weakref.html#comparing-finalizers-with-del-methods" rel="nofollow noreferrer">https://docs.python.org/3.6/library/weakref.html#comparing-finalizers-with-del-methods</a></p>
<p>However, the objects are never collected by Python's garbage collector, so I cannot test what I am doing. <code>weakref.finalize</code> is only called, when the script finishes (see <code>atexit</code>).</p>
<p>But I cannot find out, what blocks garbage collect.
See the following example:</p>
<pre><code>import gc

from weakref import finalize, ref

import objgraph


def close_after_del(obj):

    def _cleaner(obj_):
        print("!object get's closed now")
        obj_.close()

    finalize(obj, _cleaner, obj)


print('open file')
fp = open('blub', 'w')
close_after_del(fp)

print('check for other references:')
objgraph.show_refs(fp)
print(gc.get_referrers(fp))
print('delete and collect it')
w_fp = ref(fp)
del fp
gc.collect()
print('check references again:')
print(gc.get_referrers(w_fp) if w_fp() is not None else "Weak reference is gone")
print("should be deleted by now but isn't")

objgraph.show_refs(w_fp)
</code></pre>
<p><code>objgraph</code> only shows the weak references which should not matter (I only added it afterwards to check for references). <code>gc.get_referrers</code> shows a dictionary, is this related to <code>globals</code> or <code>locals</code>?</p>
<hr/>
<p>Solution according to @user2357112's answer:</p>
<pre><code>from weakref import finalize


def close_after_del(proxy, fp):

    def _cleaner():
        print("!object gets closed now!")
        fp.close()

    finalize(proxy, _cleaner)


class Proxy():

    def __init__(self, fp):
        self.fp = fp


print('open file')
proxy = Proxy(open('blub', 'w'))
close_after_del(proxy, proxy.fp)

print('delete and collect it')
del proxy
import gc; gc.collect()
print("Got collected!")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You've got two issues here. First, in the <code>finalize</code> call:</p>
<pre><code>finalize(obj, _cleaner, obj)
</code></pre>
<p>The callback and arguments shouldn't own references to the object being finalized. Since you've made <code>obj</code> one of the callback arguments directly, <a href="https://docs.python.org/3/library/weakref.html#weakref.finalize" rel="nofollow noreferrer">the object can't be collected</a>:</p>
<blockquote>
<p><strong>Note:</strong> It is important to ensure that <em>func</em>, <em>args</em> and <em>kwargs</em> do not own any references to <em>obj</em>, either directly or indirectly, since otherwise <em>obj</em> will never be garbage collected. In particular, <em>func</em> should not be a bound method of <em>obj</em>.</p>
</blockquote>
<p>You might wonder how you're supposed to access the object, then. The answer is that you're not supposed to access the object. The object is supposed to be dead.</p>
<hr/>
<p>The second issue is that in the following line:</p>
<pre><code>print(gc.get_referrers(w_fp) if w_fp is not None else "Weak reference is gone")
</code></pre>
<p><code>w_fp</code> is the weak reference object, not its referent. You should be using <code>w_fp()</code>.</p>
</div>
<span class="comment-copy"><code>w_fp</code> is a weak reference object. It's never going to be <code>None</code>.</span>
<span class="comment-copy">You are right, I fixed it <code>w_fp</code> -&gt; <code>w_fp()</code>.</span>
<span class="comment-copy">You're still getting the weak reference's referrers, though.</span>
<span class="comment-copy">Okay, I understand that I need to use some proxy objects here.</span>
