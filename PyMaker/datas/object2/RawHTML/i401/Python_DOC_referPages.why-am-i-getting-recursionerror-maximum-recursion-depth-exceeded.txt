<div class="post-text" itemprop="text">
<p>This is the code:</p>
<pre><code>def isEven (n):    #function checks if the number is even or odd

    if (int(n)%2) == 0:
        True
    else:
        False


def Edit(b,x,y): #function loops through the number
   m = str(b)
   for i in range(1, len(m)+1):
        if isEven(m[-i]):
            continue
        elif int(m[-i+(len(m))]) &gt; 5:
            b = b + 1
        else:
            b = b - 1
        y = y + 1
        x = x + 1
   Edit(b,x,y)

number = input()
Number = int(number)
caseNum = 0
moves = 0

Edit(Number,caseNum,moves)

print('Case #' + str(caseNum) + ' : ' + str(moves))
</code></pre>
<p>I want to create a code that checks if there is an odd digit in a number and increments or decrements the number until there are no odd digits in the number.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not really clear on what output you're expecting, so assuming that you want <em>no odd digits</em> in a number(4567 -&gt; 4468)</p>
<p>You simply can do that by:</p>
<pre><code>n = [int(i) for i in input("Enter a number: ")]
caseNum = 0

for i, x in enumerate(n):
    if x % 2 != 0:
        if x &gt; 5:
            n[i] += 1
        else:
            n[i] -= 1
        caseNum += 1

print("".join(str(x) for x in n), "CaseNum: ", caseNum)
</code></pre>
<p>You don't really need an Even function if you're having if-else in main program already.</p>
<p>As of your code, if you're using the Even function, you need to <em>return</em> a the value <code>True</code> or <code>False</code>.</p>
<pre><code> def isEven (n):    #function checks if the number is even or odd
    if int(n) % 2 == 0:
        return True
    else:
        return False
</code></pre>
<p>You're getting the <code>RecursionError</code> as you're calling same function(looping it) without any stopping condition. </p>
<pre><code> Edit(b,x,y)
</code></pre>
<p>This statement in your function is creating the issue and after a limit, python stops executing and gives you the error. </p>
<p>If you can elaborate the use of <code>caseNum</code> and moves, I'd be able to add them in program.</p>
</div>
<div class="post-text" itemprop="text">
<p>Even without an unconditional call to <code>Edit(b,x,y)</code> as the last step, your code was heading for "maximum recursion depth exceeded" regardless.</p>
<p>The problem is you're incrementing or decrementing the number based on it's digits.  Consider a number like <code>3000</code> with one high order odd digit.  You'd need to increment or decrement it nearly 1000 times over 1000 recursive calls.  But the default stack depth is only 1000 frames, so you're already sunk.</p>
<p>But it gets worse.  Consider a simple number like <code>10</code>, your decrementing and incrementing logic will change it to 9, then back to 10, then 9, then 10, and so on.</p>
<p>You're better off incrementing and decrementing individual digits, as @DeepMehta does, rather than the entire number.</p>
<p>To properly control the recursive call to <code>Edit()</code>, use your <code>x</code> and/or <code>y</code> counters to determine if any changes were made during this call.  If no changes, return the number.  If there were changes, recurse to finish the job.</p>
<p>And as far as the <code>isEven()</code> function, you can simply do:</p>
<pre><code>def isEven(number):
    ''' function checks if the number is even or odd '''

    return int(number) % 2 == 0
</code></pre>
</div>
<span class="comment-copy">You call <code>Edit</code> as the last thing in <code>Edit</code>. You will need to return somewhere to stop the recursion.</span>
<span class="comment-copy">Unrelated to the recursion problem, but I suggest you try <code>print(isEven(3))</code> and see if it produces the output you expect.</span>
<span class="comment-copy">Your <code>Edit</code> function keeps calling itself. Python has a built in recursion limit that you are hitting. See <a href="https://docs.python.org/3/library/exceptions.html#RecursionError" rel="nofollow noreferrer">docs.python.org/3/library/exceptions.html#RecursionError</a></span>
<span class="comment-copy">To add to what's already said, you need to add some <code>return</code> before the <code>True</code> and <code>False</code> in <code>isEven()</code>, as a <code>True</code> or <code>False</code> alone won't do anything, you function will just return <code>None</code>.</span>
<span class="comment-copy">caseNum records the number of increments or Decrements</span>
<span class="comment-copy">@ladan There you go.</span>
<span class="comment-copy">Thanks, this really helped</span>
