<div class="post-text" itemprop="text">
<p>I try to get time difference between now and a data's last call and monitoring that in the website.</p>
<p>my models.py codes are; </p>
<pre><code>class MyModel(models.Model):
    th_id = models.CharField(max_length=55)
    src_id = models.IntegerField()
    call_time = models.DateTimeField()

    @property
    def time_diff(self):
        if self.call_time:
            return (datetime.now().date() - self.call_time.date()) &gt; timedelta(hours=2)
        else:
            return 0
    def now_diff(self):
        return datetime.now().date() - self.call_time.date()
</code></pre>
<p>But I need the <code>now_diff</code> function to return the hours difference also. I have searched the internet but can't find any solution, date() object doesn't return hours or minutes. Is there a way?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is because you are doing datetime.now.date() which looses the time part and you get something like datetime.date(2019, 2, 23). If you want to keep the time as well since you need the hours then remove the .date() so you preserve the time component: </p>
<pre><code>&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt; import pytz
&gt;&gt;&gt; from tzlocal import get_localzone
</code></pre>
<p>Here I use local timezone. Read up on pytz timezones for example pytz.utc for UTC time. </p>
<pre><code>&gt;&gt;&gt; local_tz = get_localzone()
</code></pre>
<p>with the .date() you have no hours or minutes</p>
<pre><code>&gt;&gt;&gt;&gt; datetime.now(local_tz).date()
datetime.date(2019, 2, 25)
</code></pre>
<p>without the .date() you can see you have the hours minutes secs and usecs</p>
<pre><code>&gt;&gt;&gt; datetime.now(local_tz)
datetime.datetime(2019, 2, 25, 12, 33, 42, 425078, tzinfo=&lt;DstTzInfo 'Europe/Amsterdam' CET+1:00:00 STD&gt;)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To compute the hours diff. you can write your function as follow:</p>
<pre><code>def now_diff(self):
    delta = datetime.now() - self.call_time
    return delta.total_seconds() / (60 * 60)
</code></pre>
<p>Note: The difference between two dates or times returns <a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta" rel="nofollow noreferrer">timedelta</a> object.</p>
</div>
<span class="comment-copy">I know but If I use datetime.now() instead of datetime.now().date() I can't subtract call_time from it. It gives 'can't subtract offset-naive and offset-aware datetimes' errors</span>
<span class="comment-copy">Use <code>timezone.now()</code> from django.utils so you have the timezone.</span>
<span class="comment-copy">So the issue is call_time is timezone aware. Solution is then to work with timezone aware datetime objects. Either do as Fran says or ensure datetime.now() knows about timezone as shown in my edit above.</span>
