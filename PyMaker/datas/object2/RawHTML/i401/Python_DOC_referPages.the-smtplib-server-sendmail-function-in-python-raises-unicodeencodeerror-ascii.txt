<div class="post-text" itemprop="text">
<p>I am trying to edit a text file then send it as email body using a python script but im getting the unicode encoding error. After some research i found the solution as using the method .encode('utf-8') but this doesn't serve me as the sendmail() method only sends strings  </p>
<p>Here is the python code snippet Im using:</p>
<pre><code>irtem = open('irtemplate.txt')
data = irtem.read().replace('(name)', eng_name).replace('(customer)', 
cu_name).replace('(sr)', SR_num).replace('(problem)', 
prob_description).replace('(email)', eng_email).replace('(details)', 
details_req).replace('(tele)', eng_tele)


message_text = data
message = "From: %s\r\n" % fromaddr + "To: %s\r\n" % toaddr + "CC: 
%s\r\n" % ",".join(cc) + "Subject: %s\r\n" % message_subject + "\r\n" + 
message_text
toaddrs = [toaddr] + cc + bcc
server.set_debuglevel(1)
server.sendmail(fromaddr, toaddrs, message)
server.quit()
</code></pre>
<p>Traceback:</p>
<pre><code>Traceback (most recent call last):
File "autoIR.py", line 39, in &lt;module&gt;
server.sendmail(fromaddr, toaddrs, message)
File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/smtplib.py", line 855, in sendmail
msg = _fix_eols(msg).encode('ascii')
UnicodeEncodeError: 'ascii' codec can't encode character '\u2019' in 
position 168: ordinal not in range(128)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>smtpllib.server's <a href="https://docs.python.org/3/library/smtplib.html#smtplib.SMTP.sendmail" rel="nofollow noreferrer">sendmail</a> method expects a <code>bytes</code> inastance; if it gets a <code>str</code> it tries to encode it to ASCII, resulting in a <code>UnicodeEncodeError</code> if the <code>str</code> contains any non-ASCII characters.</p>
<p>You can workaround this by encoding the message yourself:</p>
<pre><code>&gt;&gt;&gt; msg = 'Hello WÃ¸rld'
&gt;&gt;&gt; from_ = 'a@example.com'
&gt;&gt;&gt; to_ = 'b@example.com'
&gt;&gt;&gt; subject = 'Hello'

&gt;&gt;&gt; fmt = 'From: {}\r\nTo: {}\r\nSubject: {}\r\n{}'

&gt;&gt;&gt; server.sendmail(to_, from_, fmt.format(to_, from_, subject, msg).encode('utf-8'))
{}
</code></pre>
<p>This will send this message<sup>*</sup>:</p>
<pre><code>b'From: b@example.com'
b'To: a@example.com'
b'Subject: Hello'
b'Hello W\xc3\xb8rld'
</code></pre>
<p>However this workaround will not work if you want to send non-text binary data with your message.</p>
<p>A better solution is to use the <a href="https://docs.python.org/3/library/email.message.html#email.message.EmailMessage" rel="nofollow noreferrer">EmailMessage</a> class from the email package.</p>
<pre><code>&gt;&gt;&gt; from email.message import EmailMessage
&gt;&gt;&gt; em = EmailMessage()
&gt;&gt;&gt; em.set_content(fmt.format(to_, from_, subject, msg))
&gt;&gt;&gt; em['To'] = to_
&gt;&gt;&gt; em['From'] = from_
&gt;&gt;&gt; em['Subject'] = subject

&gt;&gt;&gt; # NB call the server's *send_message* method
&gt;&gt;&gt; server.send_message(em)
{}
</code></pre>
<p>This sends this message; note the extra headers telling the recipient the encoding used:</p>
<pre><code>b'Content-Type: text/plain; charset="utf-8"'
b'Content-Transfer-Encoding: 8bit'
b'MIME-Version: 1.0'
b'To: b@example.com'
b'From: a@example.com'
b'Subject: Hello'
b'X-Peer: ::1'
b''
b'From: b@example.com'
b'To: a@example.com'
b'Subject: Hello'
b'Hello W\xc3\xb8rld'
</code></pre>
<p><sup>*</sup> Run the command <code>python -m smtpd -n -c DebuggingServer localhost:1025</code> in a separate terminal to capture the message data.</p>
</div>
