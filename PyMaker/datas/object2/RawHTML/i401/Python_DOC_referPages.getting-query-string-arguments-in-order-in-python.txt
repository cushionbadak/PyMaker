<div class="post-text" itemprop="text">
<p>I have a server program getting query string arguments like the following:</p>
<blockquote>
<p><a href="http://www.example/page.py?a=10&amp;b=5&amp;c=6" rel="nofollow noreferrer">http://www.example/page.py?a=10&amp;b=5&amp;c=6</a></p>
</blockquote>
<p>I need to concat the arguments on order i.e. I need a string that contains a + b + c. I try to access the query string arguments as follows:</p>
<pre><code>#!/usr/bin/python3

import cgitb
import urllib.parse
import sys, os

cgitb.enable()

# Print necessary headers.
print("Content-Type: text/html")
print()

query = os.environ.get('QUERY_STRING')
query = urllib.parse.unquote(query, errors="surrogateescape")
query_components = dict(qc.split("=") for qc in query.split("&amp;"))
for k,v in query_components.items():
    print(k)
</code></pre>
<p>When I print the keys, I get the order:
    c a b</p>
<p>Is it possible to extract the query string arguments in order ?</p>
</div>
<div class="post-text" itemprop="text">
<p>you can use <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">OrderedDict</a> instead of dict when you define query_component</p>
<blockquote>
<p>An OrderedDict is a dict that remembers the order that keys were first inserted.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>from collections import OrderedDict
query_components = OrderedDict(qc.split("=") for qc in query.split("&amp;"))
for k,v in query_components.items():
    if '?' in k:
        print(k.split('?')[1],v)
    else:
        print(k,v)
</code></pre>
</div>
<span class="comment-copy">Dictionaries in python do not maintain insertion order. They store data by hashing to ensure fastest retrieval of data. To maintain order use <a href="https://www.geeksforgeeks.org/ordereddict-in-python/" rel="nofollow noreferrer">ordered dict</a>.</span>
<span class="comment-copy">Is there any reference code on how to extract a ordered dict from query string ?</span>
<span class="comment-copy">Did you try <code>collections.OrderedDict(qc.split("=") for qc in query.split("&amp;"))</code>?</span>
<span class="comment-copy">This one worked. Thanks.</span>
<span class="comment-copy">You are welcome.</span>
