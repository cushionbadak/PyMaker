<div class="post-text" itemprop="text">
<p>I am trying to create an "accumulate" code that run via iteration. In general, a combiner takes in 2 parameters e.g. combiner(x, y) which returns a function e.g. (x+y) and term determines the function of each a value e.g. term(x) gives you x^2 means that the next value of a will be x^2, and next will be the function that determines the next value after a e.g. x = x+1.</p>
<p>I am having issues with my code as it runs an unnecessary additional loop in certain cases (the null value has to be the last value that the loop processes before exiting the while loop e.g.</p>
<pre><code>def accumulate_iter(combiner, null_value, term, a, next, b):
    result = term(a)
    while a&lt;=b:
        a = next(a)
        if a&lt;=b:
            result = combiner(term(a), result)
        else:
            result = combiner(null_value, result)

    return result
</code></pre>
<p>An example of the input will be:
accumulate_iter(lambda x,y: x<em>y, 1, lambda x: x</em>x, 1, lambda x: x+1, 5)</p>
<p>and the output will give you: 14400</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def accumulate_iter(combiner, term, a, next, b):
    result = term(a)
    while a &lt;= b:
        a = next(a)
        if a &lt;= b:
            result = combiner(term(a), result)

    return result

print(accumulate_iter(lambda x, y: x * y, lambda x: x * x, 1, lambda x: x + 1, 5))
</code></pre>
<p>Output:</p>
<pre><code>14400
</code></pre>
<p>You could also get rid of the extra loop iteration completely so you don't need the extra (x&lt;=y) test:</p>
<pre><code>def accumulate_iter(combiner, term, a, next, b):
    result = term(a)
    a = next(a)
    while a &lt;= b:
        result = combiner(term(a), result)
        a = next(a)

    return result
</code></pre>
<p>Note that this second version is more true to what's really going on.  The loop "combines things", which means you need two things to combine, but you only pick up one new thing on each iteration.  So it's natural to have a special case before the loop that deals with the first term and moves past it.</p>
</div>
<span class="comment-copy">What's <code>next</code> standing for?</span>
<span class="comment-copy">I am not sure of what you are trying to do, but I think <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer">functool.reduce</a> may help you. Anyway, could you please add an example of input and the expected output?</span>
<span class="comment-copy">addressing your "issue" directly, why do you need the 'else' clause in your code at all if you don't want anything to happen on the final iteration?</span>
