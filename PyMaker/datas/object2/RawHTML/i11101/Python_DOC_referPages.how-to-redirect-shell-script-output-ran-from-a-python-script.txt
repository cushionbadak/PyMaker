<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4760215/running-shell-command-and-capturing-the-output">Running shell command and capturing the output</a>
<span class="question-originals-answer-count">
                    14 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/4856583/how-do-i-pipe-a-subprocess-call-to-a-text-file">How do I pipe a subprocess call to a text file?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I am executing few shell scripts from a python script. A particular shell script(last line of the code) call is used to run a Hive query to get some table information and I would like to redirect this output to a file. Here is how my python script looks like.</p>
<pre><code>$ cat test.py
    import argparse
    from subprocess import call

    parser = argparse.ArgumentParser()
    parser.add_argument('-c','--cutoff',required=True)
    args = parser.parse_args()

    Table="elements_status_values_"+ args.cutoff
    call(["clear"])
    print "&gt;&gt; Running the hive query"
    call(["hive", "-S", "-e" "select * from %s order by rand() limit 2;" % cutoffTable])
</code></pre>
<p>When I execute this, I get the result on the terminal but I need to redirect the output to a file from python script to do few more operations using the output. So I basically want my Hive query output to be redirected to a file so that I can use the file for other operations within the same script. In shell script we can redirect the output using '&gt;' to a file but is there a way where we can get this done using python?
I have searched posts related to this but all of them are redirecting the python scripts output to a file which I don't want to.</p>
</div>
<div class="post-text" itemprop="text">
<p>Check out <a href="https://docs.python.org/3/library/subprocess.html#older-high-level-api" rel="nofollow">documentation</a> for <code>subprocess.call</code>: you can supply params like <code>stdout</code> and <code>stdin</code>.</p>
<pre><code>with open('output.txt') as output_file:
    call([your_stuff], stdout=output_file)
</code></pre>
<p>This is a generic way - similar approach would work in C and in many other languages too.</p>
<p>Old python-specific way would be to use <code>subprocess.check_output</code> instead of <code>subprocess.call</code>.</p>
<p>Current python-specific way would be to use <code>subprocess.run</code> and literally check its stdout: <code>output = run(..., check=True, stdout=PIPE).stdout</code></p>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/4856583/how-do-i-pipe-a-subprocess-call-in-python-to-a-text-file" title="how do i pipe a subprocess call in python to a text file">stackoverflow.com/questions/4856583/â€¦</a></span>
