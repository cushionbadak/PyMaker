<div class="post-text" itemprop="text">
<p>I have a file of name "input.txt". In this text file a lot of dictionaries are stored. I have to iterate through these dictionaries. How do read the file? Whenever I read the file using open(), file.read() it coverts the whole text into a string type. How to read this file as collection of dictionaries?</p>
<p>Contents of input.txt:</p>
<pre><code>{"label":18,"words":["realclearpolitics","-","election","2016","-","2016","republican","presidential","nomination","polls","year","state"]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>json</code> module's method to convert loaded <code>str</code> to <code>dict</code> for each line in the file:</p>
<pre><code>import json

with open('input.txt','r') as f:
    for line in f.readlines():
        line_as_dict = json.loads(line)
        # process here the dict
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>the closing list bracket was missing in the string. You can use code like <a href="https://stackoverflow.com/a/7771071/1150303">this</a> - with the existing json module of python:</p>
<pre><code>import json

x = '{"label":18,"words":["realclearpolitics","-","election","2016","-","2016","republican","presidential","nomination","polls","year","state"]}'
j = json.loads(x)
print(j)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the contents of a line are a well-formed dict, you can use <code>eval</code> to execute the string in python</p>
<pre><code>line = {"label":18,"words":["realclearpolitics","-","election","2016","-","2016","republican","presidential","nomination","polls","year","state"]}
dictionary = eval(line)
print(dictionary)
</code></pre>
<p>So if you have only that one line in input, you can use</p>
<pre><code>dictionary = eval(open("input.txt").read())
</code></pre>
<p>or if you have one dictionary per line</p>
<pre><code>with open('input.txt', 'r') as f:
    for line in f:
         dictionary = eval(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try following</p>
<pre><code>import ast
import json

def readfile():
    f = open(path_to_file, 'r')
    content = f.read()
    data = ast.literal_eval(content)
    print(json.loads(data))
</code></pre>
<p>ast.literal_eval raises an exception if the input isn't a valid Python datatype, so the code won't be executed if it's not. So, the content that is being read from file gets validated as well </p>
<p><strong>Output:</strong></p>
<pre><code>{'label': 18,
 'words': ['realclearpolitics',
  '-',
  'election',
  '2016',
  '-',
  '2016',
  'republican',
  'presidential',
  'nomination',
  'polls',
  'year',
  'state']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your JSON is incorrect, you missed to close the array, however the corrected JSON is below:</p>
<pre><code>{
    "label": 18,
    "words": ["realclearpolitics", "-", "election", "2016", "-", "2016", "republican", "presidential", "nomination", "polls", "year", "state"]
}
</code></pre>
<p>You can use <code>json</code> built-in function <code>load</code> to read a JSON file:</p>
<pre><code>import json
with open(r'path\of\your\file') as data_file:
    jsonData = json.load(data_file)
    print jsonData # it will print whole JSON data
    print jsonData['words'] # it will print value of the key `word`
</code></pre>
</div>
<span class="comment-copy">Post what you have tried so far?</span>
<span class="comment-copy">There is a missing <code>]</code> before the ending <code>}</code></span>
<span class="comment-copy">Rolled back your question before it's closed for asking several unrelated questions.</span>
<span class="comment-copy">Suppose my dictionary is {"words" : ['q', 'a', 'asa'], "values":[1,45,3]}. How do  I print (word,value)?</span>
<span class="comment-copy">@arihant34, first you read it in as a dictionary, then you read up on how to use dictionaries (which is an entirely different question from what you've asked here.)</span>
<span class="comment-copy">This solution will only work if each line is a complete json object (or if the file has no newlines at all). Why hobble your code this way?</span>
<span class="comment-copy">Actually I dealing with big data, the file here is obtained from performing tf-idf on text.  The file is in the format of many lines where each line is a dictionary , representing a file. This dictionary consists of  words and values . I wanted to map each word to its value.</span>
<span class="comment-copy">In that case, @Gabor's solution is exactly right, and in fact necessary. (A json file can only contain one top-level object.) But to deal with big data, you should be using a saner / more compact format to dump your data.</span>
<span class="comment-copy">EVAL IS EVIL .. :D</span>
<span class="comment-copy">well, use at your own risk! just pointing out it's possible. it can be a valid quick and dirty solution if you're sure what you're evaluating.</span>
<span class="comment-copy">I have many dictionaries in the form of a lines.</span>
<span class="comment-copy">Never use eval where <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer">ast.literal_eval</a> will do. And json isn't quite Python literals.</span>
<span class="comment-copy">@IronFist:  eval is a tool. Like any tool, it can be used for good or evil.</span>
