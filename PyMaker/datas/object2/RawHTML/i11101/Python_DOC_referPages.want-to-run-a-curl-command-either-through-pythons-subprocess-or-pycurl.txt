<div class="post-text" itemprop="text">
<p>I have the following command which adds a user to the administrator group of a <code>gerrit</code> instance,</p>
<pre><code> curl -X POST -H "Content-Type:application/json;charset=UTF-8" -u nidhi:pswd http://host_ip:port/a/groups/Administrators/members.add -d '{"members":["user@example.com"]}'
</code></pre>
<p>When I run this command on my terminal, it runs perfectly and gives the expected output.</p>
<p>But, I want to execute this command in python either using the <code>subprocess</code> or <code>pycurl</code> library.</p>
<p>Using <code>subprocess</code> I wrote the following code,</p>
<pre><code>def add_user_to_administrator(u_name,url):
    bashCommand = 'curl -X POST -H "Content-Type:application/json;charset=UTF-8" -u nidhi:pswd http://'+url+'/a/groups/Administrators/members.add -d '+"'"+'{"members":["$u_n@example.com"]}'+"'"
    bashCommand = string.Template(bashCommand).substitute({'u_n':u_name})
    print bashCommand.split()
    process = subprocess.Popen(bashCommand.split())
</code></pre>
<p>It shows no error but no changes are seen in the administrator group.</p>
<p>I tried the same using <code>pycurl</code>,</p>
<pre><code>def add_user_to_administrator2(u_name,url):
    pf = json.dumps({"members":[str(str(u_name)+"@example.com")]})
    headers = ['Content-Type:application/json;charset=UTF-8']
    pageContents = StringIO.StringIO()


    p = pycurl.Curl()
    p.setopt(pycurl.FOLLOWLOCATION, 1)
    p.setopt(pycurl.POST, 1)
    p.setopt(pycurl.HTTPHEADER, headers)
    p.setopt(pycurl.POSTFIELDS, pf)
    p.setopt(pycurl.WRITEFUNCTION, pageContents.write)
    p.setopt(pycurl.VERBOSE, True)
    p.setopt(pycurl.DEBUGFUNCTION, test)
    p.setopt(pycurl.USERPWD, "nidhi:pswd")
    pass_url=str("http://"+url+"/a/groups/Administrators/Administrators/members.add").rstrip('\n')
    print pass_url
    p.setopt(pycurl.URL, pass_url)
    p.perform()

    p.close() 
    pageContents.seek(0)
    print pageContents.readlines()
</code></pre>
<p>This throws an error, it cannot find the account <code>members</code>.</p>
<p>The variable mentioned <code>url</code> is of the form host_ip:port.</p>
<p>I have tried a lot to fix these errors. I dont know where I am going wrong. Any help would be appreciated.  </p>
</div>
<div class="post-text" itemprop="text">
<h2>a) string escaping</h2>
<p>For the subprocess/curl usage, you should be escaping your string tokens rather than manually adding extra <code>'</code>:</p>
<p><code>...stuff'+"'"+'more.stuff...</code></p>
<p>Escape using <code>\</code> before the character i.e. using</p>
<p><code>"curl -X POST -H \"Content-Type:application/json;charset=UTF-8\""</code></p>
<p>will keep the <code>"</code> around the Content-Type section.</p>
<p>More on escape characters here: <a href="https://docs.python.org/2/reference/lexical_analysis.html#string-literals" rel="nofollow">Lexical Analysis - String Literals</a></p>
<blockquote>
<p>...The backslash () character is used to escape characters that otherwise have a special meaning...</p>
</blockquote>
<h2>b) <code>popen</code></h2>
<p>Looking at the <a href="https://docs.python.org/2/library/subprocess.html#popen-constructor" rel="nofollow"><code>popen</code> docs</a> their example uses <a href="https://docs.python.org/2/library/shlex.html#shlex.split" rel="nofollow"><code>shlex.split()</code></a> to split their command line into args. <code>shlex</code> splits the string a bit differently:</p>
<pre><code>print(bashCommand.split())
['curl', '-X', 'POST', '-H', '"Content-Type:application/json;charset=UTF-8"', '-u', 'nidhi:pswd', 'http://TEST_URL/a/groups/Administrators/members.add', '-d', '\'{"members":["TEST_USER@example.com"]}\'']

print(shlex.split(bashCommand))
['curl', '-X', 'POST', '-H', 'Content-Type:application/json;charset=UTF-8', '-u', 'nidhi:pswd', 'http://TEST_URL/a/groups/Administrators/members.add', '-d', '{"members":["TEST_USER@example.com"]}']
</code></pre>
<p>you can see <code>shlex</code> removes excess quoting.</p>
<h2>c) http response code</h2>
<p>Try using <code>-I</code> option in <code>curl</code> to get a HTTP response code back (and the rest of the HTTP headers):</p>
<pre><code>$curl -h
...
-I, --head          Show document info only
</code></pre>
<p>Even though you're using <code>subprocess</code> to start/make the request, it should still print the return value to the console(stdout).</p>
<h2>d) putting it all together</h2>
<p>I changed the how the <code>url</code> and <code>u_name</code> are interpolated into the string.</p>
<pre><code>import shlex
import subprocess


def add_user_to_administrator(u_name, url):
    bashCommand = "curl -I -X POST -H \"Content-Type:application/json;charset=UTF-8\" -u nidhi:pswd http://%(url)s/a/groups/Administrators/members.add -d '{\"members\":[\"%(u_n)s@example.com\"]}'"
    bashCommand = bashCommand % {'u_n': u_name, 'url': url}
    args = shlex.split(bashCommand)
    process = subprocess.Popen(args)

add_user_to_administrator('TEST_USER', 'TEST_URL')
</code></pre>
<p>If none of this helps, and you're getting no response from gerrit, I'd check gerrit logs to see what happens when it receives your request.</p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>you should try [<code>urllib2</code>] (<code>python2</code>) or <a href="https://docs.python.org/3/library/urllib.html" rel="nofollow"><code>urllib</code></a>(<code>python3</code>) to post json data ;</li>
<li>for <code>subprocess.Popen</code> : <code>subprocess.Popen.communicate</code>(<a href="https://docs.python.org/3.5/library/subprocess.html?highlight=subprocess#subprocess.Popen.communicate" rel="nofollow">https://docs.python.org/3.5/library/subprocess.html?highlight=subprocess#subprocess.Popen.communicate</a>) may give you help,or just exec bashCommand in shell to see the difference;</li>
<li>for <code>pycurl</code> , I have not use it ,but please you add error info.</li>
</ul>
</div>
<span class="comment-copy">Is there a reason why you use curl instead of a module like requests or urllib?</span>
<span class="comment-copy">Thank you for the detailed explanation... Was of great help...!</span>
