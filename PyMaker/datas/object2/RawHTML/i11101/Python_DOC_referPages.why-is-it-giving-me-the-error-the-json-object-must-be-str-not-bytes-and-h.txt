<div class="post-text" itemprop="text">
<p>I was following a tutorial about how to use JSON objects (link: <a href="https://www.youtube.com/watch?v=Y5dU2aGHTZg" rel="nofollow">https://www.youtube.com/watch?v=Y5dU2aGHTZg</a>). When they ran the code, they got no errors, but I did. Is it something to do with different Python versions or something?</p>
<pre><code>from urllib.request import urlopen
import json

def printResults(data):
    theJSON = json.loads(data)
    print (theJSON)

def main():
    urlData ="http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_day.geojson"

    webUrl = urlopen(urlData)
    print(webUrl.getcode())
    if (webUrl.getcode()==200):
        data = webUrl.read()
        printResults(data)
    else:
        print ("You failed")

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/http.client.html#httpresponse-objects" rel="nofollow"><code>HTTPResponse</code> object</a> returned from <a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen" rel="nofollow"><code>urlopen</code></a> reads <code>bytes</code> data (raw binary data), not <code>str</code> data (textual data), while the <code>json</code> module works with <code>str</code>. You need to know (or inspect the headers to determine) the encoding used for the data received, and <code>decode</code> it appropriately before using <code>json.loads</code>.</p>
<p>Assuming it's UTF-8 (most websites are), you can just change:</p>
<pre><code>data = webUrl.read()
</code></pre>
<p>to:</p>
<pre><code>data = webUrl.read().decode('utf-8')
</code></pre>
<p>and it should fix your problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think they were using a different version of the urllib</p>
<p>Try with urllib3 and do the import like this:</p>
<pre><code>from urllib import urlopen
</code></pre>
<p>Hope this is the fix to your problem</p>
</div>
<span class="comment-copy">Thanks so much! This fixed it.</span>
