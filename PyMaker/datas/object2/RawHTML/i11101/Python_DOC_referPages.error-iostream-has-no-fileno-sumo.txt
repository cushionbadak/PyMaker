<div class="post-text" itemprop="text">
<p>I am trying to run SUMO through traci interface. I copy pasted this example from this <a href="http://sumo.dlr.de/wiki/TraCI/Interfacing_TraCI_from_Python" rel="nofollow">link</a>. The code is as follows</p>
<pre><code>import os, sys
import subprocess

if 'SUMO_HOME' in os.environ:
     tools = os.path.join(os.environ['SUMO_HOME'], 'tools')
     sys.path.append(tools)
else:   
     sys.exit("please declare environment variable 'SUMO_HOME'")

PORT = 8813
sumoBinary = "C:/Program Files (x86)/DLR/Sumo/bin/sumo-gui"
sumoProcess = subprocess.Popen([sumoBinary, "-c", "example.sumocfg", \
        "--remote-port", str(PORT)], stdout=sys.stdout, stderr=sys.stderr)


import traci
import traci.constants as tc

traci.init(PORT)
traci.vehicle.subscribe(vehID, (tc.VAR_ROAD_ID, tc.VAR_LANEPOSITION))
print(traci.vehicle.getSubscriptionResults(vehID))

for step in range(3):
    print("step", step)
    traci.simulationStep()
    print(traci.vehicle.getSubscriptionResults(vehID))

traci.close()
</code></pre>
<p>When I try to run the code, it throws me the following error</p>
<pre><code>  File "C:\Anaconda3\lib\site-packages\spyderlib\widgets\externalshell\sitecustomize.py", line 685, in runfile
execfile(filename, namespace)

  File "C:\Anaconda3\lib\site-packages\spyderlib\widgets\externalshell\sitecustomize.py", line 85, in execfile
exec(compile(open(filename, 'rb').read(), filename, 'exec'), namespace)

  File "C:/Users/Raja/Documents/vehicomPhd/SUMOTraffic/traci.py", line 22, in &lt;module&gt;
"--remote-port", str(PORT)], stdout=sys.stdout, stderr=sys.stderr)

  File "C:\Anaconda3\lib\subprocess.py", line 823, in __init__
errread, errwrite) = self._get_handles(stdin, stdout, stderr)

  File "C:\Anaconda3\lib\subprocess.py", line 1037, in _get_handles
c2pwrite = msvcrt.get_osfhandle(stdout.fileno())

  File "C:\Anaconda3\lib\site-packages\IPython\kernel\zmq\iostream.py", line 205, in fileno
raise UnsupportedOperation("IOStream has no fileno.")

UnsupportedOperation: IOStream has no fileno.
</code></pre>
<p>Anyone know what is wrong.</p>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you're running in an <code>ipython</code> notebook. They have non-standard "standard" I/O streams that can't be used like a "true" file object (because they're really data queues, not pipes, so they don't have a file descriptor to use for low level I/O).</p>
<p>You can't use them with libraries (like <code>subprocess</code>) that perform low level I/O; <a href="https://github.com/ipython/ipython/pull/3072/" rel="noreferrer">the error is there to tell you this.</a>. You'll need to use a real file-like object, possibly something as simple as sending output to a <code>tempfile.TemporaryFile</code> and then copying output from the file to <code>stdout</code> if that's what you need.</p>
<p>It's possible it would work by just not passing <code>Popen</code> <code>stdout</code> and <code>stderr</code> arguments at all; the default behavior for <code>subprocess</code> is to use the same <code>stdout</code> and <code>stderr</code> as the parent, so if there are valid file handles opened (even if the notebook replaced <code>sys.stdout</code>/<code>sys.stderr</code> for Python use), it might "just work" (where "just work" includes the possibility that data sent to the underlying file descriptors <code>0</code> and <code>1</code> is discarded, so you never see it).</p>
<p>Or just don't run in the ipython notebook.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem was that my command line used Python 2 whereas the spyder IDE used python 3. Since I wont be needing to pass any more arguments to the stdin, I removed the option and simply tried to open the sumo-gui with <code>subprocess</code> as follows. It works now.</p>
<pre><code>PORT = 8813
sumoBinary = 'C:/Program Files (x86)/DLR/Sumo/bin/sumo-gui'
sumoProcess = subprocess.Popen([sumoBinary, "-c", "Kaiserslautern.sumocfg", \
        "--remote-port", str(PORT)])
</code></pre>
</div>
<span class="comment-copy">Thanks for pointing that out. I replaced <code>stdout=sys.stdout, stderr=sys.stderr</code> with <code>stdin = subprocess.PIPE, stdout=subprocess.PIPE</code> and it does not show up this error. However, I now have a different error.  <code>File "C:/Users/Raja/Documents/vehicomPhd/SUMOTraffic/traci.py", line 28, in &lt;module&gt;     traci.init(8813)    File "C:\Program Files (x86)\DLR\Sumo\tools\traci\__init__.py", line 469, in init     return getVersion() TypeError: Can't convert 'bytes' object to str implicitly</code></span>
<span class="comment-copy">@Mechanic: Not enough context to give you anything definite, but stuff that springs to mind: 1. You're running a version of <code>traci</code> that's written for Python 2 on a Python 3 interpreter (which often just dies with <code>SyntaxError</code>s, but not always) 2. You're using the <code>PIPE</code>-ed handles (binary mode), or data from them (<code>bytes</code>), in a context that requires text mode handles or <code>str</code> data. If that's the case, the simplest fix is to pass <a href="https://docs.python.org/3/library/subprocess.html#frequently-used-arguments" rel="nofollow noreferrer"><code>universal_newlines=True</code></a> to the <code>Popen</code> constructor to open text mode streams.</span>
<span class="comment-copy">The problem is due to the incosistence between Python 2 and 3 and you rightly pointed out.</span>
