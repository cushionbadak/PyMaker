<div class="post-text" itemprop="text">
<p>I have a program that inputs 2 txt files. </p>
<p><strong>deaths.txt</strong></p>
<pre><code>29.0
122.0
453.0
</code></pre>
<p><strong>years.txt</strong></p>
<pre><code>1995
1996
1997
</code></pre>
<p>I make lists from the data</p>
<pre><code>deaths = open("deaths.txt").read().splitlines()
years = open("years.txt").read().splitlines()
</code></pre>
<p>then I convert the lists to int and floats</p>
<pre><code>for x in years[:-1]:
    x = int(x)

for x in deaths[:-1]:
    x = float(x)
</code></pre>
<p>and then the part where it gives the error: <code>ValueError: could not convert string to float</code></p>
<pre><code>plt.plot(years, deaths)
</code></pre>
<p>So it says it cannot convert strings to floats. But I thought I allready did that. What could be the reason?</p>
</div>
<div class="post-text" itemprop="text">
<p>The following should get you going. Rather than using <code>readlines()</code> to read the whole file, a better approach would be to convert each row as it is read in.</p>
<p>As your two data files have a different number of elements, the code makes use of <a href="https://docs.python.org/3/library/itertools.html?highlight=zip_longest#itertools.zip_longest" rel="nofollow noreferrer"><code>zip_longest</code></a> to fill in any missing death data with <code>0.0</code>:</p>
<pre><code>from itertools import zip_longest
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

with open('deaths.txt') as f_deaths:
    deaths = [float(row) for row in f_deaths]

with open('years.txt') as f_years:
    years = [int(row) for row in f_years]

# Add these to deal with missing data in your files, (see Q before edit)    
years_deaths = list(zip_longest(years, deaths, fillvalue=0.0))
years = [y for y, d in years_deaths]
deaths = [d for y, d in years_deaths]

print(deaths)
print(years)

plt.xlabel('Year')
plt.ylabel('Deaths')

ax = plt.gca()
ax.xaxis.set_major_formatter(ticker.FormatStrFormatter('%d'))
ax.set_xticks(years)

plt.plot(years, deaths)
plt.show()
</code></pre>
<p>This will display the following on the screen, showing that the conversions to ints and floats were correct:</p>
<pre><code>[29.0, 122.0, 453.0, 0.0]
[1995, 1996, 1997, 1998]    
</code></pre>
<p>And the following graph will then be displayed:</p>
<p><a href="https://i.stack.imgur.com/MKbKl.png" rel="nofollow noreferrer"><img alt="matplotlib graph" src="https://i.stack.imgur.com/MKbKl.png"/></a></p>
</div>
<span class="comment-copy">Can you provide the content of deaths and years before you convert the lists? I don't get an error with these arrays: deaths = ["29.0", "122.0", "453.0"] years = ["1995", "1996", "1997"]</span>
<span class="comment-copy">why are you not converting the last element, what is it, and are you sure you want to plot it (because that's what your are doing)?</span>
<span class="comment-copy">also you can use list comprehension to convert, or even better <code>map</code></span>
<span class="comment-copy">You get error because you skip last element during conversion and after conversation you do not save x element back to arrays years and deaths. Try to write <code>deaths_int= map(int,deaths)</code>. And plot deaths_int array.</span>
<span class="comment-copy">Thands @StanleyR I did indeed skip the last element of the list. The last element would be " ". So it couldn't change it. But I did tell matplotlib to plot it and that is when the error came.</span>
<span class="comment-copy">I figured it out. I like you approach. The thing was that I didn't convert the last character because it was "". The last line of the file. But I did ask matplot lib to plot it. And that is when the error came. I gave it an upvote because it was very helpfull. But it did not solve my problem.</span>
<span class="comment-copy">If you are trying to deal with missing data, one approach would be to use <code>zip_longest</code> to pad out missing entries with a fill value. For example <code>0.0</code></span>
