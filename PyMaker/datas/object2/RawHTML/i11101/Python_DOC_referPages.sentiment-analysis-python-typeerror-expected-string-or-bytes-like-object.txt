<div class="post-text" itemprop="text">
<p>I am doing a sentiment analysis and I want to Add NOT to every word between negation and following punctuation. I am performing the following code: </p>
<pre><code>import re


fin=open("aboveE1.txt",'r', encoding='UTF-8')

transformed = re.sub(r'\b(?:never|no|nothing|nowhere|noone|none|not|havent|hasnt|hadnt|cant|couldnt|shouldnt|wont|wouldnt|dont|doesnt|didnt|isnt|arent|aint)\b[\w\s]+[^\w\s]', 
   lambda match: re.sub(r'(\s+)(\w+)', r'\1NEG_\2', match.group(0)), 
   fin,
   flags=re.IGNORECASE)
</code></pre>
<p>Traceback (most recent call last):
  line 14, in 
    flags=re.IGNORECASE)
line 182, in sub return _compile(pattern, flags).sub(repl, string, count)
TypeError: expected string or bytes-like object</p>
<p>I dont know how to fix the error. Can you help me?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>re.sub</code> takes in a string, not a file object. Documentation <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow">here</a>.</p>
<pre><code>import re

fin=open("aboveE1.txt",'r', encoding='UTF-8')    
transformed = ''

for line in fin:
    transformed += re.sub(r'\b(?:never|no|nothing|nowhere|noone|none|not|havent|hasnt|hadnt|cant|couldnt|shouldnt|wont|wouldnt|dont|doesnt|didnt|isnt|arent|aint)\b[\w\s]+[^\w\s]', 
    lambda match: re.sub(r'(\s+)(\w+)', r'\1NEG_\2', match.group(0)), 
    line,
    flags=re.IGNORECASE)
    # No need to append '\n' to 'transformed'
    # because the line returned via the iterator includes the '\n'

fin.close()
</code></pre>
<p>Also remember to always close the file you open.</p>
</div>
