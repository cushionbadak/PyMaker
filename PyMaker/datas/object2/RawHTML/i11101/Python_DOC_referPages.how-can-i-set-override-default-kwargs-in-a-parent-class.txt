<div class="post-text" itemprop="text">
<p>Let's say I have the following parent and child classes:</p>
<pre><code>class A(object):
    def __init__(self, *args, **kwargs):
        self.a = kwargs.get('a', 'default_A')
        self.b = kwargs.get('b', 'default_B')

class B(A):

    a = "override_A"

    def __init__(self, *args, **kwargs):
        super(B, self).__init__(**kwargs)

b = B()

print b.b  # this is "default_B", as expected
print b.a  # I expected this to be "override_A"
</code></pre>
<p>What am I doing wrong here? I've tried to understand how inheritance works via answers like <a href="https://stackoverflow.com/a/19205946">this one</a> but haven't found something that describes this specific requirement.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're mixing class and instance variables. <code>B.a</code> is a class variable, which is shadowed by the instance variable set in <code>A.__init__()</code>.</p>
<p>You could for example use <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="noreferrer"><code>dict.setdefault()</code></a>:</p>
<pre><code>class B(A):

    def __init__(self, *args, **kwargs):
        # If the key 'a' exists, this'll be effectively no-operation.
        # If not, then 'a' is set to 'override_A'.
        kwargs.setdefault('a', 'override_A')
        super(B, self).__init__(**kwargs)
</code></pre>
</div>
<span class="comment-copy">@jonrsharpe I just added the semantic print statements. If you run the exact code you'll quickly realize that the issue is not a printing error.</span>
<span class="comment-copy">Yep, I've edited the question to hopefully make that clearer. You hadn't distinguished which outputs were expected and which weren't.</span>
<span class="comment-copy">See also <a href="http://stackoverflow.com/q/16852860/3001761">stackoverflow.com/q/16852860/3001761</a></span>
<span class="comment-copy">Why the <code>(ab)</code> though? This is a perfectly fine use of <code>setdefault()</code>.</span>
<span class="comment-copy">Removed, you're right.</span>
