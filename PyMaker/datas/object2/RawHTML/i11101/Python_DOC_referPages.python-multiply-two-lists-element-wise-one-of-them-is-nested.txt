<div class="post-text" itemprop="text">
<p>I have two lists:</p>
<pre><code>C = [3, 2, 1]
D = [[0, 1, 2, 3], [0, 1, 2], [0, 1]]
</code></pre>
<p>I would like to achieve this result:</p>
<pre><code>E = [[0, 3, 6, 9], [0, 2, 4], [0, 1]]
</code></pre>
<p>using only list comprehensions.Is it possible ? I am stuck at:</p>
<pre><code>E = zip(C, D)
[i * E[0][0] for i in E[0][1]] which gives:

[0, 3, 6, 9]
</code></pre>
<p>but I cannot modify it to apply for other elements of the second list</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, it is possible:</p>
<pre><code>&gt;&gt;&gt; [[c * d_i for d_i in d] for c, d in zip(C, D)]
[[0, 3, 6, 9], [0, 2, 4], [0, 1]]
</code></pre>
<p>You just need two loops here, the first one to iterate over <code>zip(C, D)</code>, and the second one to iterate over each list of <code>D</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You're almost there: it's a nested list comprehension.  Slap another list, [blah[j] for j in ]</p>
<pre><code>C = [3, 2, 1]
D = [[0, 1, 2, 3], [0, 1, 2], [0, 1]]

E = zip(C, D)
print [[i * E[j][0] for i in E[j][1]] for j in range(len(E))]
</code></pre>
<p>Output:</p>
<pre><code>[[0, 3, 6, 9], [0, 2, 4], [0, 1]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This would be straight forward if you use <code>numpy</code> array:</p>
<pre><code>import numpy as np
np.array(C) * np.array(map(np.array, D))

# array([array([0, 3, 6, 9]), array([0, 2, 4]), array([0, 1])], dtype=object)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would also solve it with <a href="https://docs.python.org/3/library/itertools.html#itertools.starmap" rel="nofollow"><code>itertools.startmap</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import starmap
&gt;&gt;&gt;
&gt;&gt;&gt; def multiply(x, lst):
        return [x*i for i in lst]

&gt;&gt;&gt; for item in it.starmap(f, zip(C,D)):
        print(item)


[0, 3, 6, 9]
[0, 2, 4]
[0, 1]
</code></pre>
<p>OR:</p>
<pre><code>&gt;&gt;&gt; l = []
&gt;&gt;&gt; for item in it.starmap(lambda x,y: [x*i for i in y], zip(C,D)):
        l.append(item)
&gt;&gt;&gt; l
[[0, 3, 6, 9], [0, 2, 4], [0, 1]]
</code></pre>
</div>
