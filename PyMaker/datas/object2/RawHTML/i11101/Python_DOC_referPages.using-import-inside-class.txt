<div class="post-text" itemprop="text">
<p>I am completely new to the python class concept. After searching for a solution for some days, I hope I will get help here:</p>
<p>I want a python class where I import a function and use it there. The main code should be able to call the function from the class. for that I have two files in the same folder.</p>
<hr/>
<p>Thanks to @cdarke, @DeepSpace and @MosesKoledoye, I edited the mistake, but sadly that wasn't it.</p>
<p>I still get the Error:</p>
<pre class="lang-none prettyprint-override"><code>test 0
Traceback (most recent call last):
  File "run.py", line 3, in &lt;module&gt;
    foo.doit()
  File "/Users/ls/Documents/Entwicklung/RaspberryPi/test/test.py", line 8, in doit
    self.timer(5)
  File "/Users/ls/Documents/Entwicklung/RaspberryPi/test/test.py", line 6, in timer
    zeit.sleep(2)
NameError: global name 'zeit' is not defined
</code></pre>
<hr/>
<hr/>
<p>@wombatz got the right tip: 
it must be self.zeit.sleep(2) or Test.zeit.sleep(2). the import could be also done above the class declaration. </p>
<hr/>
<p><strong>Test.Py</strong></p>
<pre><code>class Test:
    import time as zeit
    def timer(self, count):
        for i in range(count):
            print("test "+str(i))
            self.zeit.sleep(2)      &lt;-- self is importent, otherwise, move the import above the class declaration
    def doit(self):
        self.timer(5)
</code></pre>
<p>and</p>
<p><strong>run.py</strong></p>
<pre><code>from test import Test
foo = Test()
foo.doit()
</code></pre>
<p>when I try to <code>python run.py</code> I get this error:</p>
<pre class="lang-none prettyprint-override"><code>test 0
Traceback (most recent call last):
  File "run.py", line 3, in &lt;module&gt;
    foo.doit()
  File "/Users/ls/Documents/Entwicklung/RaspberryPi/test/test.py", line 8, in doit
    self.timer(5)
  File "/Users/ls/Documents/Entwicklung/RaspberryPi/test/test.py", line 6, in timer
    sleep(2)
NameError: global name 'sleep' is not defined
</code></pre>
<p>What I understand from the error is that the import in the class is not recognized. But how can I achive that the import in the class is recognized?</p>
</div>
<div class="post-text" itemprop="text">
<p>Everything defined inside the <em>namespace</em> of a class has to be accessed from that class. That holds for methods, variables, nested classes and everything else including modules.</p>
<p>If you really want to import a module inside a class you must access it from that class:</p>
<pre><code>class Test:
    import time as zeit
    def timer(self):
        self.zeit.sleep(2)
        # or Test.zeit.sleep(2)
</code></pre>
<p>But why would you import the module inside the class anyway? I can't think of a use case for that despite from wanting it to put into that namespace.</p>
<p>You really should move the import to the top of the module. Then you can call <code>zeit.sleep(2)</code> inside the class without prefixing <code>self</code> or <code>Test</code>.</p>
<p>Also you should not use non-english identifiers like <code>zeit</code>. People who only speak english should be able to read your code.</p>
</div>
<div class="post-text" itemprop="text">
<p>You want <a href="https://docs.python.org/2/library/time.html?highlight=sleep#time.sleep%20" rel="nofollow noreferrer">time.sleep</a>. You can also use;</p>
<pre><code>from time import sleep
</code></pre>
<p>Edit: Importing within class scope issues explained <a href="https://stackoverflow.com/a/6883558/5757280">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>sleep</code> is not a python builtin, and the name as is, does not reference any object. So Python has rightly raised a <code>NameEror</code>.</p>
<p>You intend to:</p>
<pre><code>import time as zeit

zeit.sleep(2)
</code></pre>
<p>And move <code>import time as zeit</code> to the top of the module. </p>
<p>The <code>time</code> module aliased as <code>zeit</code> is probably not appearing in your module's global symbol table because it was imported inside a <code>class</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're almost there! <code>sleep</code> is a function within the <code>time</code> module. This means that the name <code>sleep</code> doesn't exist unless its understood within the context of <code>time</code>, unless you define it on your own. Since you didn't define it on your own, you can access it by running <code>time.sleep(2)</code>.</p>
<p>In your specific example, you used:</p>
<pre><code>import time as zeit
</code></pre>
<p>you'll have to run:</p>
<pre><code>zeit.sleep(2) 
</code></pre>
<p>Alternatively, you can import sleep directly from time, by running:</p>
<pre><code>from time import sleep
sleep(2)
</code></pre>
<p>Good luck!</p>
<p>You can read more about the time module here: <a href="https://docs.python.org/2/library/time.html" rel="nofollow">https://docs.python.org/2/library/time.html</a></p>
<p>You can learn more about imports here: <a href="https://docs.python.org/3/reference/import.html" rel="nofollow">https://docs.python.org/3/reference/import.html</a></p>
<p>and I highly recommend learning about namespace in python, here: <a href="https://bytebaker.com/2008/07/30/python-namespaces/" rel="nofollow">https://bytebaker.com/2008/07/30/python-namespaces/</a></p>
</div>
<span class="comment-copy">You probably mean <code>zeit.sleep(2)</code></span>
<span class="comment-copy">@cdarke actually <code>zeit.sleep</code>, since OP uses <code>as</code></span>
<span class="comment-copy">@DeepSpace: my edit crossed over your comment.  Thanks</span>
<span class="comment-copy">thanks, i corrected the mistake, but i did not help - see my edit.</span>
<span class="comment-copy">The <code>sleep(2)</code> shown in your second traceback from <code>python run.py</code> doesn't match what you say is in <code>test.py</code> â€” which has <code>zeit.sleep(2)</code> on that line.</span>
<span class="comment-copy">@syntonym I'm sorry I don't quite understand. Could you please show me an example?</span>
<span class="comment-copy">Sorry, I think I misunderstood you. I thought you meant that you always have to use <code>self.attribute</code> in a class, which is of course not true because you can use things like globals or builtins (like print). But you meant that objects defined in the namespace of the class are not accessible from class-bound functions automatically.</span>
<span class="comment-copy">@syntonym yes, I should clarify that, thanks for the hint.</span>
<span class="comment-copy">This is currently the only answer that addresses the OP question.</span>
<span class="comment-copy">@wombatz thank you. this helped.</span>
<span class="comment-copy">thanks, i corrected the mistake, but i did not help - see my edit.</span>
<span class="comment-copy">@ludwigschuster You should read through the answer linked here. There is no reason to have the import within your class. It should go at the top of your module. (Note - there are exceptions to this for modules that require special initialization before being imported, but that is rare and definitely not the case with the <code>time</code> module)</span>
<span class="comment-copy">thanks, i corrected the mistake, but i did not help - see my edit.</span>
<span class="comment-copy">@ludwigschuster see my update: move <code>import time as zeit</code> to the top of the module.</span>
<span class="comment-copy">thanks, i corrected the mistake, but i did not help - see my edit.</span>
<span class="comment-copy">move the import statement above the class definition. the <code>import time as zeit</code> should be above the <code>class Test:</code> line.</span>
<span class="comment-copy">@ludwigschuster, have you been able to try this?</span>
