<div class="post-text" itemprop="text">
<p>I am trying to read a tab-separated file and collect all characters except control characters. If a control character is hit, the remainder of line should be ignored too.
I've tried the following code in Python 3.5, using a <a href="https://docs.python.org/3.5/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow"><code>for..else</code> loop</a>:</p>
<pre><code>import curses.ascii

input_file = ...
chars = set()
with open(input_file) as file:
    for line in file.readlines():
        source, target = line.split("\t")

        for c in source.strip() + target.strip():
            if curses.ascii.iscntrl(c):
                print("Control char hit.")
                break
            chars.add(c)
        else:
            print("Line contains control character:\n" + line)
            continue

        print("Line contains no control character:\n" + line.strip())
</code></pre>
<p>I'd expect this to check each character for being a control character and if it hits one (<code>break</code> is triggered), skip to the next line, hence trigger the <code>else</code>/<code>continue</code> statement.</p>
<p>What happens instead is that <code>continue</code> is always triggered, even if the <code>break</code> statement in the <code>if</code> clause is never reached for a line. Consequently, the final <code>print</code> statement is never reached either.</p>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>else</code> block of a <code>for</code> loop is <em>only</em> executed if the <code>for</code> loop never was interrupted. You'll only see the <code>continue</code> statement in the <code>else</code> block executed if there were <em>no control characters in the line</em>. From the <a href="https://docs.python.org/3/reference/compound_stmts.html#the-for-statement" rel="nofollow"><code>for</code> statement documentation</a>:</p>
<blockquote>
<p>When the items are exhausted (which is immediately when the sequence is empty or an iterator raises a <code>StopIteration</code> exception), the suite in the <code>else</code> clause, if present, is executed, and the loop terminates.</p>
<p>A <code>break</code> statement executed in the first suite terminates the loop without executing the <code>else</code> clause’s suite.</p>
</blockquote>
<p>A better test to see if there are control characters in a line is to use the <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any()</code> function</a> with a <a href="https://docs.python.org/3/tutorial/classes.html#generator-expressions" rel="nofollow">generator expression</a>:</p>
<pre><code>if any(curses.ascii.iscntrl(c) for c in source.strip() + target.strip()):
    print("Line contains control character:\n" + line)
    continue
</code></pre>
<p>or you could use a regular expression; this'll be faster as the looping over text is done in C code without having to box each individual character in a new <code>str</code> object:</p>
<pre><code>import re

control_char = re.compile(r'[\x00-\x31]')

if control_char.search(source.strip() + target.strip()):
    print("Line contains control character:\n" + line)
    continue
</code></pre>
</div>
<span class="comment-copy">the else is triggered only when break is not triggered.</span>
<span class="comment-copy">Hmmm, I suggest you read more about the <code>for...else</code> in python: <a href="http://stackoverflow.com/questions/37642573/how-can-i-make-sense-of-the-else-statement-in-python-loops/37643358#37643358">How can I make sense of the <code>else</code> statement in Python loops?</a></span>
<span class="comment-copy">Check this out if it helps  - <a href="http://stackoverflow.com/questions/9979970/why-does-python-use-else-after-for-and-while-loops" title="why does python use else after for and while loops">stackoverflow.com/questions/9979970/…</a></span>
<span class="comment-copy">Thanks to all of you, your hints have helped. I find the terminology somewhat confusing though.</span>
<span class="comment-copy">If you try to pair <code>else</code> with for, it could be confusing. I don't think the keyword else was a great choice for this syntax, But if you pair else with break, you can see it actually makes sense.  Let me show how it works in human language. -- <code>for</code> each person in a group of suspects <code>if</code> anyone is the criminal <code>break</code> the investigation. <code>else</code> report failure.</span>
