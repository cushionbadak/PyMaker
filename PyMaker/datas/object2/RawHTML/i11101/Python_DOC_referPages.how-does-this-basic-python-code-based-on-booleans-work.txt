<div class="post-text" itemprop="text">
<pre><code>x = False

if x:
     print 'x was True!'
else:
     print 'I will be printed in any case where x is not true'
</code></pre>
<p>In the first line of the code, we assign the value of x = False.</p>
<p>I want to understand what does the line 'if x:' means. 
When x has a value of False, doesn't it imply that the line 'if x:' would be executed as 'if False:'. And hence, the statement 'x was True!' should be printed.</p>
<p>But instead,'I will be printed in any case where x is not true' is printed. </p>
<p>I think I am having some problems understanding how Booleans work. Where am I going wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python does't understand English. It has <strong>no idea</strong> what the stuff in quotes after <code>print</code> actually <em>means</em>. So if execution gets to the line <code>print 'x was True!'</code> it just blindly prints out that text. But execution <em>won't</em> get to that line. </p>
<p>In</p>
<pre><code>if some_expression:
    do_this_stuff()
else:
    do_that_stuff()
</code></pre>
<p>First, <code>some_expression</code> is evaluated.<br/>
If it has a Boolean value of <code>True</code> then <code>do_this_stuff()</code> will be called.<br/>
But if <code>some_expression</code>has a Boolean value of <code>False</code>, then <code>do_that_stuff()</code> will be called.</p>
<p>Your code has,<code>if x:</code>, where <code>x</code> is <code>False</code>, so only the code in the <code>else</code> part gets executed.</p>
<hr/>
<p>The expression following <code>if</code> can be <em>any</em> expression, it doesn't have to be an actual Boolean <code>True</code> or <code>False</code>. </p>
<p>In Python, "null" objects of various kinds are considered to be False when they appear in a Boolean context: this includes the number zero, the empty string <code>''</code>, the empty list <code>[]</code>, the empty tuple <code>()</code>, the empty dictionary <code>{}</code>, and the empty set <code>set()</code>; I think you can see the pattern. :) Non-null objects are considered to be True. </p>
<p>This is a handy feature that makes code more succinct, and more readable, once you are used to it.         </p>
</div>
<div class="post-text" itemprop="text">
<p>else block will execute only if the if condition is false. 
So in this code on giving False here it will jumps to else block. </p>
</div>
<div class="post-text" itemprop="text">
<p>The syntax of an if...else statement is :</p>
<pre><code>if boolean_expression :
    # statement(s) will execute if the boolean expression is true
else
    # statement(s) will execute if the boolean expression is false
</code></pre>
<p>If the Boolean expression evaluates to True, then the if block will be executed, otherwise, the else block will be executed.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/compound_stmts.html#if" rel="nofollow noreferrer">docs.python.org/3/reference/compound_stmts.html#if</a></span>
<span class="comment-copy">An if clause is executed if it's value is true. So if x is False "print 'x was True!'" "won't be executed and the else clause will instead.</span>
<span class="comment-copy">I guess I confused the boolean operator with a conditional statement. Thanks.</span>
<span class="comment-copy">You are confusing <code>x</code> with <code>x == False</code>.</span>
