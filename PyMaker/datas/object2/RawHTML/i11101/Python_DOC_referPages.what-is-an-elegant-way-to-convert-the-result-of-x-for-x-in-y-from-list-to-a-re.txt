<div class="post-text" itemprop="text">
<p>What is an elegant way to convert the result of <code>[x for x in y]</code> from list to a regular variable?</p>
<pre><code>result= [x for x in range(10) if x==7]
</code></pre>
<p>The result of the above will be <code>[7]</code>.
I am now using <code>result=result[0]</code> but ...it does not look right :-)</p>
<p>thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You have a list comprehension on the right hand side. It evaluates to a list.</p>
<p>You want to pick up the first element (which is perhaps the only element for the kind of problems you are trying to solve) from it, so index the 0-th element in the list returned by the list comprehension, just like you would do it for a regular list.</p>
<pre><code>result = [x for x in range(10) if x == 7][0]
</code></pre>
<p>You can also use a generator expression instead of a list expression and then call the <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow">next()</a> function to retrieve the first item from the iterator returned by the generator expression.</p>
<pre><code>result = next(x for x in range(10) if x == 7)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>next</code> that retrieves the next object from the iterator. The parameter that goes within <code>next</code> is a <em><a href="https://wiki.python.org/moin/Generators" rel="nofollow">generator</a></em>. This allows saves you from fully constructing the list and then filtering for <code>7</code>. Instead it only iterates until it hits <code>7</code>, and wont evaluate until the next <code>next(..)</code> is called on the generator object.</p>
<pre><code>&gt;&gt;&gt; next(x for x in range(10) if x==7)
7
</code></pre>
</div>
<span class="comment-copy"><code>result= [x for x in range(10) if x==7][0]</code></span>
<span class="comment-copy">:-)) I love you guys. I am still learning python. amazing language</span>
<span class="comment-copy"><code>[]</code> generates a list. Be careful, can you assert that only one element will pass the filter? Only then is makes sense to drop it. Otherwise you need some logic to choose the element.</span>
<span class="comment-copy">isn't range a generator in python 3? In that case it works properly even without next() (use xrange in python 2)</span>
<span class="comment-copy">Correct, I should have used <code>xrange(..)</code> instead of <code>range(..)</code> since I was writing Python2 -- that would have saved creating a list of 10 items. On Python3, you'd still have to use <code>next(..)</code> because you need the first element that has value equal to 7.</span>
