<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/171480/regex-grabbing-values-between-quotation-marks">RegEx: Grabbing values between quotation marks</a>
<span class="question-originals-answer-count">
                    19 answers
                </span>
</li>
</ul>
</div>
<p>I have a project wherein I need to extract quotations from a huge set of articles . Here ,  by quotations I mean things said by people , for eg: Alen said " text to be extracted ." I'm using NLTK for my other NLP related tasks so any solution using NLTK or any kind of Python library would be quite useful.</p>
<p>Thanks </p>
</div>
<div class="post-text" itemprop="text">
<p>As Mayur mentioned, you can do a regex to pick up everything between quotes</p>
<pre><code>list = re.findall("\".*?\"", string)
</code></pre>
<p>The problem you'll run into is that there can be a surprisingly large amount of things between quotation marks that are actually not quotations.</p>
<p>If you're doing academic articles, you can look for a number after the closing quotation to pick up the footnote number. Else with non academic articles, perhaps you could run something like:</p>
<pre><code>"(said|writes|argues|concludes)(,)? \".?\""
</code></pre>
<p>can be more precise, but risks losing quotes such as blockquotes (blockquotes will cause you problems anyways because they can include a newline before the closing quotation mark)</p>
<p>As for using NLTK, I can't think of anything there that will be of much help other than perhaps wordnet for finding synonyms for "said".</p>
</div>
<div class="post-text" itemprop="text">
<p>This qualifies as a pattern, ie, data you are looking for is always between quotation marks <code>""</code>. Simply put, you can use <a href="https://docs.python.org/3/library/re.html" rel="nofollow">regex</a> for pattern matching.
Let's take this example <code>she said " DAS A SDASD sdasdasd SADSD", " SA23 DSD " ASDAS "ASDAS1 3123$ %$%"</code></p>
<p>The regex that works for your basic example is - </p>
<pre><code>list = re.findall("\".*?\"", string)
</code></pre>
<p><code>List</code> gives us <code>['" DAS A SDASD SADASD SADSD"', '" SA23 DSD "', '"ASDAS1 3123$ %$%"']</code></p>
<p>Here, <code>.*?</code> matches any character (except newline) and the pattern matches the quotation marks (beginning <code>\"</code> and ending <code>\"</code>) literally.</p>
<p>Please beware of the fact that quotation marks within quotation marks breaks this code. You will not get the expected output.</p>
</div>
<span class="comment-copy">This picks up anything between quotation marks. Depending on the text you are evaluating, you'll pick up a bunch of junk that isn't reported speech... just stuff wrapped in quotation marks like the letter "A", the word "obscure" means... etc.</span>
<span class="comment-copy">I've worked under the assumption that OP is working with <b>Structured data that has meaningful conversation</b> because OP says <code>I need to extract quotations from a huge set of articles</code>. So my assumption is a reasonable one.I'll +1 you for adding something good to the answers.</span>
