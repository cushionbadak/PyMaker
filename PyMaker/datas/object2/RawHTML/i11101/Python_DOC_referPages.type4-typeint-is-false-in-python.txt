<div class="post-text" itemprop="text">
<p>I tried <code>type(4) == type(int)</code>, which returns <code>False</code>, but <code>print type(4)</code> returns <code>&lt;type 'int'&gt;</code>, so 4 is obviously <code>int</code>.</p>
<p>Confused why the first statement returns <code>False</code> and not <code>True</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>type</code> of <code>int</code> is <em>type itself</em>:</p>
<pre><code>&gt;&gt;&gt; type(int)
&lt;type 'type'&gt;
</code></pre>
<p>You'd compare with <code>int</code> <strong>directly</strong>; <code>int</code> is, after all, a type, as we established above:</p>
<pre><code>&gt;&gt;&gt; type(4) == int
True
</code></pre>
<p>or even, since <code>int</code> is a singleton, like all types should be:</p>
<pre><code>&gt;&gt;&gt; type(4) is int
True
</code></pre>
<p>However, the proper way to test for types is to use the <a href="https://docs.python.org/3/library/functions.html#isinstance"><code>isinstance()</code> function</a>:</p>
<pre><code>&gt;&gt;&gt; isinstance(4, int)
True
</code></pre>
<p><code>isinstance()</code> also allows for <em>any subclasses</em> of <code>int</code> to pass this test; a subcclass is always considered to be <em>at least</em> an <code>int</code>. That includes any custom subclasses you could build yourself, and still have it work as an <code>int</code> everywhere else in your code.</p>
</div>
<div class="post-text" itemprop="text">
<p>Look this:</p>
<pre><code>&gt;&gt;&gt; type(int)
&lt;type 'type'&gt;
&gt;&gt;&gt; type(4)
&lt;type 'int'&gt;
</code></pre>
<p>Yu should use:</p>
<pre><code>&gt;&gt;&gt; isinstance(4,int)
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are comparing <code>int</code> with <code>type(int)</code>, instead you should:</p>
<pre><code>type(4) == int
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>type of int</code> is <code>type</code>
and <code>type of 4</code> is <code>int</code>.</p>
<pre><code>&gt;&gt;&gt; type(int)
&lt;type 'type'&gt;
&gt;&gt;&gt; type(4)
&lt;type 'int'&gt;
</code></pre>
<p>So you doing wrong comparison.
What you can do to get the desired output is:
Compare the <code>type of 4</code> with <code>int</code></p>
<pre><code>&gt;&gt;&gt; type(4) == int
True
</code></pre>
<p>Or you can use <code>is</code> operator for this like</p>
<pre><code>&gt;&gt;&gt; type(4) is int
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python, type <code>int</code> itself is also a object whose type is <code>type</code>. So <code>type(int)</code> is <code>type</code>. On the other hand, <code>type(4)</code> is <code>int</code></p>
<p>So if you want to check if <code>type(4)</code> is type <code>int</code>, you should write as</p>
<pre><code>type(4) == int
</code></pre>
</div>
<span class="comment-copy"><code>type(int)</code> is <code>type</code>...</span>
<span class="comment-copy">@MartijnPieters, nice catch and vote up. But how to check if the type is int for a number? I want to distinguish between int, float/double and non-numeric.</span>
<span class="comment-copy">@LinMa isinstance(num,int)</span>
<span class="comment-copy">I've learned the same (prefer <code>isinstance</code> over <code>type()==</code>); however, reading this, the <code>type(number)==int</code> <i>feels</i> more pythonic. If you could have a word about why <code>isinstance</code> is the proper way, that would be great.</span>
