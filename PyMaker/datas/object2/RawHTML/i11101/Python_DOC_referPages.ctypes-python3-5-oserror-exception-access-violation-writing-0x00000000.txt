<div class="post-text" itemprop="text">
<p>Researching other similar errors, I think that I have an issue with a an illegal operation such as writing to an address that I shouldn't be. I'm not sure how to resolve this. Any help please?</p>
<p>Exact error I'm getting:</p>
<pre><code>in GetSoftwareVersion()
result = f(LCP_Version, FCP_Version)
OSError: exception: access violation writing 0x00000000 
</code></pre>
<p>Functions I'm calling</p>
<pre><code>x = GetSoftWareVersion()
print(x)
</code></pre>
<p>GetSoftwareVersion() contents</p>
<pre><code>def GetSoftwareVersion():
    f = shim.GetSoftwareVersion

    LCP_Version = ct.c_char_p(0)
    FCP_Version = ct.c_char_p(0)

    result = f(LCP_Version, FCP_Version)

    if result:
        print(find_shim_error(result))

    return LCP_Version.contents.value, FCP_Version.contents.value
</code></pre>
<p>edit: adding the relevant C++ code</p>
<pre><code>PCSHIMDLL_API  error_status_type GetSoftwareVersion(
        char* LCP_Version,
        char* FCP_Version
        )
{
    error_status_type return_status = SUCCESS;
    string LCP_V("");
    string FCP_V("");
    LaserIDType_var laserID;
    laserID = p_DiagIF-&gt;GetLaserID();
    LCP_V = laserID-&gt;m_LCPSoftwareVersion;
    FCP_V = laserID-&gt;m_FCPSoftwareVersion;
    strcpy(LCP_Version, LCP_V.c_str());
    strcpy(FCP_Version, FCP_V.c_str());

    return return_status;
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're getting the error <code>OSError: exception: access violation writing 0x00000000</code> because of the statement <code>LCP_Version = ct.c_char_p(0)</code>.  As suggested by the <a href="https://docs.python.org/3/library/ctypes.html#ctypes.c_char_p" rel="nofollow">ctypes documentation for <code>c_char_p</code></a> you're passing an integer address.</p>
<p>What you're telling <code>ctypes</code> to do is make a new <code>char *</code> pointing to <code>0</code>, then trying to <code>strcpy</code> to it via <code>strcpy(LCP_Version, LCP_V.c_str());</code>.  If you were to use <code>ct.c_char_p(1)</code>, you'd get <code>access violation writing 0x0000001</code>, if <code>c_char_p(2)</code>, then at <code>0x...2</code>, and so on.  It's very unlikely that your memory should or will want to allow you to write to that location, hence the error.</p>
<p>What you likely want to do is use <a href="https://docs.python.org/3/library/ctypes.html#ctypes.create_string_buffer" rel="nofollow"><code>create_string_buffer(N)</code></a>, where <code>N</code> is the size of the array needed to contain the output of <code>LCP_V = laserID-&gt;m_LCPSoftwareVersion;</code>.  <code>create_string_buffer</code>, as the name suggests, will give you a mutable char buffer that's initialized to null bytes (e.g. <code>p = create_string_buffer(3)</code> means <code>p</code> is size 3, with contents <code>b'\x00\x00\x00</code>).  You could guess and check or look at the source of <code>p_DiagIF-&gt;GetLaserID();</code> to hunt down the safe value of <code>N</code>, or just give yourself something huge (for a version number) like <code>LCP_Version = ct.c_char_p(50)</code> and pick something sane from there.</p>
</div>
<span class="comment-copy">What is <code>shim</code> (I assume it's a C dll), and how does <code>dpcGetSoftwareVersion</code> declaration (and description) look like? I see that you're passing 2 <code>NULL</code> <code>char</code> pointers, is that the intent? The function allocates memory for them and then stores some data in that memory (not a very usual practice). Or it expects 2 <code>char*</code>s pointing to an "allocated" area to store the data in (based on the error this seems to be the case)? Try initializing them using <a href="https://docs.python.org/2/library/ctypes.html#ctypes.create_string_buffer" rel="nofollow noreferrer">ctypes.create_string_buffer</a>.</span>
