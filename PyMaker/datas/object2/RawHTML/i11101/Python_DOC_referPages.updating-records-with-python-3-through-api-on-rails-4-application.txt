<div class="post-text" itemprop="text">
<p>I'm working on a Rails 4 / mongoid application which needs to expose APIs for other applications and scripts. I need to be able to update documents in one of the models through an API with Python 3 script. I'm a bit fresh with Python hence asking for help here.</p>
<p>I already found out how to query Rails APIs with Python 3 and urllib but struggling with updates. I was trying to go through Python 3.5 <a href="https://docs.python.org/3/howto/urllib2.html" rel="nofollow">docs</a> for urllib2 but struggling to apply this to my script.</p>
<p>What goes to <code>data</code> and how to add authentication token to <code>headers</code>, which in <code>curl</code> would look something like this</p>
<pre><code>-H 'Authorization:Token token="xxxxxxxxxxxxxxxx"'
-X POST -d "name=A60E001&amp;status=changed"
</code></pre>
<p>I would greatly appreciate if somebody explained how to, for example, update <code>status</code> based on <code>name</code> (name is not unique yet but will be). My biggest challenge is the Python side. Once I have the data in params on Rails side I think I can handle it. I think.</p>
<p>I included my model and update action from the controller below.</p>
<p><code>app/models/experiment.rb</code></p>
<pre><code>class Experiment
  include Mongoid::Document
  include Mongoid::Timestamps

  field :name, type: String
  field :status, type:String
end  
</code></pre>
<p><code>app/controllers/api/v1/experiments_controller.rb</code></p>
<pre><code>module Api
  module V1
    class ExperimentsController &lt; ActionController::Base
      before_filter :restrict_access

      ...

      def update
        respond_to do |format|
          if @expt_proc.update(expt_proc_params)
            format.json { render :show, status: :ok, location: @expt_proc }
         else
            format.json { render json: @expt_proc.errors, status: :unprocessable_entity }
          end
        end
      end

      ...

    private
      def restrict_access
        authenticate_or_request_with_http_token do |token, options|
          ApiKey.where(access_token: token).exists?
        end
      end
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I figured out who to  send a PATCH request with Python 3 and update the the record's <code>status</code> by <code>name</code>.</p>
<p>Thanks to <a href="https://stackoverflow.com/questions/6853050/how-do-i-make-a-patch-request-in-python#answer-7112444">this</a> post found out about <code>requests</code> module. I used <a href="http://docs.python-requests.org/en/master/user/quickstart/" rel="nofollow noreferrer">requests.patch</a> to update the record and it works great.</p>
<p><code>python code</code></p>
<pre><code>import requests
import json

url = 'http://0.0.0.0:3000/api/v1/update_expt_queue.json'
payload = {'expt_name' : 'myExperiment1', 'status' : 'finished' }

r = requests.patch(url, payload)
</code></pre>
<p>There are two problems remaining:</p>
<ol>
<li><p>How to add headers to this request which would allow me to go through token based authentication. At the moment it's disabled. <a href="http://docs.python-requests.org/en/master/api/#requests.patch" rel="nofollow noreferrer">request.patch</a> only takes 2 parameters, it doesn't take <code>headers</code> parameter.</p></li>
<li><p>How to access the JSON which is sent in response by Rails API.   </p></li>
</ol>
</div>
