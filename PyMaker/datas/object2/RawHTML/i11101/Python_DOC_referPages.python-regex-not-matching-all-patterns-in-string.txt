<div class="post-text" itemprop="text">
<p>I want to match a curl command's header pattern like:</p>
<blockquote>
<p>-H 'key: value'</p>
</blockquote>
<p>or</p>
<blockquote>
<p>-H "key: value"</p>
</blockquote>
<p>This switch can appear in the middle somewhere or at the end of string.</p>
<p>My pattern:</p>
<pre><code>&gt;&gt;&gt; header_pattern = re.compile(' \-H (?:\'|\").+?:.+?(?:\'|\")(?:\s+|$)')
</code></pre>
<p>My string:</p>
<pre><code>&gt;&gt;&gt; a = " -H 'Authorization: Bearer xxx' -H 'Content-Type: text/plain' "
</code></pre>
<p>Now I attempted to find all instances of this pattern but its matching just the first pattern.</p>
<pre><code>&gt;&gt;&gt; headers = header_pattern.findall(a)
&gt;&gt;&gt; headers
[" -H 'Authorization: Bearer xxx' "]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why don't use <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow"><code>argparse</code> module</a> instead of regular expressions:</p>
<pre><code>import argparse
import shlex


parser = argparse.ArgumentParser()
parser.add_argument('command')
parser.add_argument('url')
parser.add_argument('-d', '--data')
parser.add_argument('-b', '--data-binary', default=None)
parser.add_argument('-H', '--header', action='append', default=[])
parser.add_argument('--compressed', action='store_true')


curl_command = "curl https://google.com  -H 'Authorization: Bearer xxx' -H 'Content-Type: text/plain'"

tokens = shlex.split(curl_command)
parsed_args = parser.parse_args(tokens)
print(parsed_args.header)
</code></pre>
<p>Prints <code>['Authorization: Bearer xxx', 'Content-Type: text/plain']</code>.</p>
<p>(Inspired by <a href="https://github.com/spulec/uncurl" rel="nofollow"><code>uncurl</code> package</a>).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use this regex to match all header options:</p>
<pre><code>header_pattern = re.compile(r'-H\s*([\'"])(.+?)\1')
</code></pre>
<p><a href="https://regex101.com/r/qD7eY0/2" rel="nofollow">RegEx Demo</a></p>
<p>There is no real need to assert for whitespace before <code>-H</code> but you need you can use:</p>
<pre><code>header_pattern = re.compile(r'(?&lt;=\s)-H\s*([\'"])(.+?)\1')
</code></pre>
</div>
<span class="comment-copy">Yes because your pattern matches a space at the end and at the beginning. Change <code>(?:\s+|$)</code> to <code>(?!\S)</code> <i>(not followed by a character that is not a whitespace)</i></span>
<span class="comment-copy"><code>(?:-H|\G)\s([\'"])[^\'"]+\1</code></span>
<span class="comment-copy">Thanks a lot. Though this is not answer to question's concern but really gives me a lot better approach to achieve what I am trying to do.!</span>
