<div class="post-text" itemprop="text">
<p>In Python, I am creating an array that contains a prufer sequence, i.e. an array of length n-2 that consists of integers between 0 and n-1. For example, (3,4,3,1,2) is a prufer sequence for n=7. I do not know n in advance. I would like to create a prufer sequence, do something with that prufer sequence, create another one, do something with the new sequence, and so on.</p>
<p>I was wondering what the fastest way to generate all n^(n-2) prufer sequences.</p>
</div>
<div class="post-text" itemprop="text">
<p>You seem to be looking for the <a href="https://en.wikipedia.org/wiki/Cartesian_product" rel="nofollow">cartesian product</a> of the <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow"><code>range</code></a> <code>0&lt;=x&lt;n-1</code>, the function <a href="https://docs.python.org/3/library/itertools.html?highlight=cartesian%20product#itertools.product" rel="nofollow"><code>itertools.product</code></a> will do this for you:</p>
<pre><code>for seq in itertools.product(range(n-1), repeat=n-2):
    do_stuff(seq)
</code></pre>
</div>
<span class="comment-copy">If I understand correctly, a prufer sequence would be <code>range(n-1)</code> in python, all possible sequences would be <code>[range(i-1) for i in range(1,n)]</code></span>
<span class="comment-copy">after your example I think you would just want <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a> <code>(range(n-1), repeat=n-2)</code></span>
<span class="comment-copy">I think these are very good comments, and before someone answers performance / optimal algorithm questions it might be great to edit the question with the application of the suggestions from @TadhgMcDonald-Jensen so we get an idea if there is a faster way ...</span>
<span class="comment-copy">That seems to work, and is fast enough for what I am doing.</span>
