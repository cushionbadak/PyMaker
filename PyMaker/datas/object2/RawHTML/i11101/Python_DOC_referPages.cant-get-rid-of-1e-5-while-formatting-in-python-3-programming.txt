<div class="post-text" itemprop="text">
<p>I am creating a length calculator and need to format it so it doesn't show <code>1e-5</code> from going to <code>mm</code> to <code>km</code>. i have tried <code>'{:.6}'.format()</code> but doesn't seem to work as still outputs it as 1e-5. </p>
<p>Any help on what to do to get rid of this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>f</code> presentation type insteaf of the default (<code>g</code> with a small modification):</p>
<pre><code>'{:.6f}'.format(floating_point_number)
</code></pre>
<p>See the <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow"><em>Format Specification Mini-Language</em> documentation</a>:</p>
<blockquote>
<p><code>'f'</code><br/>
  Fixed point. Displays the number as a fixed-point number. The default precision is <code>6</code>.</p>
<p>[...]</p>
<p><code>'g'</code><br/>
  General format. For a given precision p &gt;= 1, this rounds the number to p significant digits and then formats the result in either fixed-point format or in scientific notation, depending on its magnitude.</p>
<p>[...]</p>
<p><code>None</code><br/>
  Similar to <code>'g'</code>, except that fixed-point notation, when used, has at least one digit past the decimal point. The default precision is as high as needed to represent the particular value. The overall effect is to match the output of <code>str()</code> as altered by the other format modifiers.</p>
</blockquote>
<p>Note that if <em>all</em> you are doing is formatting a float (and not include any other string in your <code>str.format()</code> template), you may as well avoid having to parse the template and use the <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow"><code>format()</code> function</a> directly:</p>
<pre><code>format(floating_point_number, '.6f')
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; fp = 1e-5
&gt;&gt;&gt; fp
1e-05
&gt;&gt;&gt; format(fp, '.6f')
'0.000010'
&gt;&gt;&gt; '{:.6f}'.format(fp)
'0.000010'
</code></pre>
</div>
<span class="comment-copy">yes this works but it still outputs, say from going to Km to Meters, it will show the answer as 2000.000000. Is there any way to just get it to print 2000 in this situation without the need for all the 0's</span>
<span class="comment-copy">See <a href="http://stackoverflow.com/q/2440692">Formatting floats in Python without superfluous zeros</a>; when using <code>format()</code> that'd be <code>format(fp, '.6f').rstrip('0').rstrip('.')</code>.</span>
