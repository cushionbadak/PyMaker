<div class="post-text" itemprop="text">
<p>I'm trying to patch a config file used in a django app and having trouble understanding how to do it given the way we import the config.  I don't think the fact that it's Django has much relevance here, but it partially drives this file structure.</p>
<p><strong>app/views.py</strong></p>
<pre><code>from . import config as APP_CONFIG
...later on in some function...
retry_count = APP_CONFIG.MAX_NUMBER_RETRIES
</code></pre>
<p><strong>app/config.py</strong></p>
<pre><code>MAX_NUMBER_RETRIES = 1
</code></pre>
<p>How do I properly patch this config setting?</p>
<p>I've tried varieties of <code>@patch('app.views.CONFIG.MAX_NUMBER_RETRIES', 1)</code> or <code>@patch('app.config.MAX_NUMBER_RETRIES', 1)</code> in my testing function to no avail (I use pytest).</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work:</p>
<pre><code>@patch('app.views.APP_CONFIG.MAX_NUMBER_RETRIES', 1)
</code></pre>
<p>I tried it with a small example (without Django) and it worked as expected. This is probably not pytest but <strong>mock</strong> related. Have a look at the documentation: <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="nofollow">Where to patch</a> .</p>
</div>
<span class="comment-copy">This doesn't work for me, and I'm wondering if if this is being imported before the test runs, so the patch value doesn't come into play.  To be more precise in my example, I'm using the value to set an attribute on a class (a django ListView).</span>
<span class="comment-copy">I wasn't able to get it working, but since it's Django, I passed the parameter in when instantiating the view in my test.  It's one of the standard optional parameters, so it works ok for testing without modifying code to accommodate it.</span>
