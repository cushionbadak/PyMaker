<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4541155/check-if-a-number-is-int-or-float">Check if a number is int or float</a>
<span class="question-originals-answer-count">
                    14 answers
                </span>
</li>
</ul>
</div>
<p>Pretend there are three float values being passed through this function.  The function takes the first two values and subtracts the second from the first.  If the result of that subtraction is less than or equal to the value of the parameter tolerance, it returns true.  I want to set up another test in there.  How do you tell a function to return None if the arguments passed to it are not floats?</p>
<pre><code>def assert_within_tolerance(x_1,x_2,tolerance):
    result=abs(x_1-x_2)
    if result&lt;=tolerance:
        return True
    if result&gt;tolerance:
        print('\nThe result was greater than the tolerance')
        return None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can ask the type of a variable in python with <code>type</code> or <code>isinstance</code>: </p>
<pre><code>def foo(x,y,z):
    if type(x) is not float or type(y) is not float or type(z) is not float:
        return None
    # normal execution here
    pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use "if type(variable) is not float:". For example</p>
<pre><code>def assert_within_tolerance(x_1,x_2,tolerance):
    if type(x_1) is not float or type(x_2) is not float or type(tolerance) is not float:
        print('\nInputs needs to be float')
        return None
    result=abs(x_1-x_2)
    if result&lt;=tolerance:
        return True
    if result&gt;tolerance:
        print('\nThe result was greater than the tolerance')
        return None
</code></pre>
</div>
<span class="comment-copy"><code>isinstance(x_1, float)</code> - True/False whether it is or is not a float.</span>
<span class="comment-copy">Awesome, I'll keep this method under my belt!</span>
<span class="comment-copy"><code>if not all(isinstance(thing, float) for thing in (x_1,x_2,tolerance)): return</code></span>
<span class="comment-copy">Wow thank you.  I was able to implement a single line solution thanks to this.  Very useful!!!!!</span>
<span class="comment-copy">Note that this will not accept integers as input (no 3, but 3.0 is ok). You might want to revise to allow such input.</span>
<span class="comment-copy">From <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow noreferrer">the docs for <code>type</code></a> - <code>The isinstance() built-in function is recommended for testing the type of an object, because it takes subclasses into account.</code></span>
