<div class="post-text" itemprop="text">
<p>I am new to python and still struggle with it.
So can you guys help me with this?</p>
<p>I have this list of lists:</p>
<pre><code>sorted_Region:  [[J, 0.80, 0.30], [H, 0.80, 0.21], [I, 0.87, 0.19], [G, 0.88, 0.15], [D, 0.96, 0.14], [B, 0.97, 0.14], [A, 1.01, 0.11], [C, 1.05, 0.15], [F, 1.06, 0.04], [E, 1.55, 0.22]]
</code></pre>
<p>And I want to make new list of lists with condition:
if the next list has second element value greater or equal to the second element of current list AND the next list has third element value less than the third element of current list.</p>
<p>I tried this code</p>
<pre><code>Region_frontier = []
for i in sorted_Region:
    if i+1[1] &gt;= i[1] and i+1[2] &lt; i[2]:
        Region_frontier.append(i)
print Region_frontier
</code></pre>
<p>but i got this error message.</p>
<pre><code>TypeError: 'int' object has no attribute '__getitem__'
</code></pre>
<p>please kindly help me. thank you in advance ^^</p>
</div>
<div class="post-text" itemprop="text">
<p>You're trying to use index operator on integer which causes the error: <code>i+1[1]</code>. Instead of using indexing you could iterate over the pairs on the list with <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a> and <a href="https://docs.python.org/3.5/library/itertools.html#itertools.islice" rel="nofollow"><code>islice</code></a>:</p>
<pre><code>from itertools import islice

Region_frontier = []
for prev, cur in zip(sorted_Region, islice(sorted_Region, 1, None)):
    if cur[1] &gt;= prev[1] and cur[2] &lt; prev[2]:
        Region_frontier.append(cur)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all I assume that by <strong>previous</strong> you mean the <strong>current</strong> element which you are iterating. 
Also, I want to mention that you have a list of lists, not a set of tuple.
Since python has keywords like that so you should take care while using those words.
Now talking about your problem</p>
<p>The problem is you are iterating over 'int' not a list. When you do 
<code>i in sorted_Region</code> 'i' is an element of that list not its iterator.
So you can do the following</p>
<pre><code>Region_frontier = []
i = 0
while i &lt; len(sorted_Region)-1:
    if sorted_Region[i+1][1] &gt;= sorted_Region[i][1] and sorted_Region[i+1][2] &lt; sorted_Region[i][2]:
        Region_frontier.append(sorted_Region[i])
print(Region_frontier)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For <code>i+1[1]</code>, getting the indexed item of 'int' object is ill-grammar. For the intended purpose, no index in the for loop for <code>sorted_Region</code>, so it is not possible to get the "<code>previous tuple</code>". </p>
<p>To iterate the <code>sorted_Region</code> and compare to the nearby item, try use tuple index(real index <code>i</code> that ranges from 0 to <code>len(sorted_Region) - 1</code>):</p>
<pre><code>Region_frontier = []
for i in range(0, len(sorted_Region) - 1):
    if sorted_Region[i+1][1] &gt;= sorted_Region[i][1] and sorted_Region[i+1][2] &lt; sorted_Region[i][2]:
        Region_frontier.append(i)
print Region_frontier
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for index in range(len(sorted_Region)-1):
    if sorted_Region[index+1][i] &gt;= sorted_Region[index][1] and sorted_Region[index+1][2]&lt;sorted_Region[index][2]:
        Region_frontier.append(i)
print Region_frontier
</code></pre>
</div>
<span class="comment-copy">Can you explain what this has to do with C++?</span>
<span class="comment-copy">im sorry.. gotta remove the tags :)</span>
<span class="comment-copy">@DiniKF Just to help you with terminology since you are just beginning with python, what you have is a list of lists, not a set of tuples. A set is a distinct data structure in with very different properties from a tuple or a list, so using the word 'set' to mean 'list' can cause confusion.</span>
<span class="comment-copy">@juanpa.arrivillaga thank you for the correction :) it means a lot</span>
<span class="comment-copy">Thank you so much ^^</span>
<span class="comment-copy">Thank you, it helps to understand more about python :)</span>
<span class="comment-copy">Thank you, it helps to understand more about python :)</span>
