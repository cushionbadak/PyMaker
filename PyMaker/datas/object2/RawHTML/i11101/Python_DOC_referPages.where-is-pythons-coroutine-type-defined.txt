<div class="post-text" itemprop="text">
<p>I'm working on Python 3.5.1 and I want to be able to tell if a function has returned as coroutine object but I cannot find where the coroutine type is defined, instead as of late I've been using the below snippet to get the type through instantiating a coroutine with a function.</p>
<pre><code>async def _f():
    pass
COROUTINE_TYPE = type(_f())
</code></pre>
<p>There's got to be a better way to do this, my question is where is this type defined so I can use it directly?</p>
</div>
<div class="post-text" itemprop="text">
<p>Probably the best way to access the coroutine type is through the <a href="https://docs.python.org/3/library/types.html#types.CoroutineType" rel="nofollow"><code>types</code></a> module:</p>
<pre><code>import types

types.CoroutineType  # here it is
</code></pre>
<p>That's not actually where the coroutine type is <em>defined</em> - <code>types.py</code> does pretty much the same thing you're doing to get at it - but it's the standard Python-level way to <em>access</em> the type.</p>
<p>If you want to see the actual definition of the type, that's in <a href="https://hg.python.org/cpython/file/3.5/Include/genobject.h" rel="nofollow"><code>Include/genobject.h</code></a> and <a href="https://hg.python.org/cpython/file/3.5/Objects/genobject.c#l849" rel="nofollow"><code>Objects/genobject.c</code></a>. Look for the parts that say <code>PyCoroWhatever</code> or <code>coro_whatever</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The best way to tell if a function is a coroutine is with <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.iscoroutinefunction" rel="nofollow"><code>asyncio.iscoroutinefunction</code></a>. </p>
<pre><code>asyncio.iscoroutinefunction(some_func)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python's coroutine type is defined in <a href="https://github.com/python/cpython/blob/master/Lib/_collections_abc.py" rel="nofollow"><code>_collections_abc</code></a>, which is imported in <a href="https://github.com/python/cpython/blob/master/Lib/collections/abc.py" rel="nofollow"><code>collections.abc</code></a>, which itself is imported in <a href="https://github.com/python/cpython/blob/master/Lib/asyncio/coroutines.py" rel="nofollow">asyncio.coroutines</a>.  </p>
<p>Not sure how this helps you more than @dirn's answer though (which is how to tell if a function is a coroutine).</p>
</div>
<span class="comment-copy">There we go! For some reason I didn't think to try <code>types.CoroutineType</code>, I had already tried <code>types.Coroutine</code> and then gave up when I shouldn't have. Thanks!</span>
<span class="comment-copy">@Oasiscircle: Next time, also try <code>dir(types)</code> to get a list of everything in the module (or <code>help(types)</code> for more useful, better-formatted information, but <code>help(types)</code> in this case doesn't tell you what you want to know).</span>
<span class="comment-copy">@DietrichEpp Haha don't worry, I know about <code>dir()</code> and <code>help()</code>, I've been programming Python professionally for a while now. ;)</span>
<span class="comment-copy">@Oasiscircle: I'm not questioning your competency, just giving information for future visitors to the site.</span>
<span class="comment-copy">There's no <code>CoroutineType</code> class in that module in Python 3.7.1</span>
<span class="comment-copy">Thanks! This happens to solve my current problem but doesn't really answer the question directly, because if I want to know where the coroutine type is defined, not how to check a function if it will return a coroutine.</span>
<span class="comment-copy"><code>asyncio.iscoroutine</code> does <code>isinstance(obj, _COROUTINE_TYPES)</code>, where the TYPES is defined in <code>asyncio.coroutines.py</code> as 2 or 3 types.</span>
<span class="comment-copy">@Oasiscircle: That's not actually the coroutine type. It's an ABC for types that implement an interface matching that of coroutines. This is similar to how <code>collections.abc.Set</code> isn't the set type.</span>
<span class="comment-copy">@user2357112 I was mostly looking for something to use with <code>isinstance</code>, and an interface fits that bill. If there's a place where the coroutine object that implements that interface then I guess that would be more appropriate.</span>
