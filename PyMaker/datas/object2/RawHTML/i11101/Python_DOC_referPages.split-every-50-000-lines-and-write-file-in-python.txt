<div class="post-text" itemprop="text">
<p>I read files which contains 75,151 lines.
I want to split every 50,000 lines.
So I made 2 files, one files have 50,000 lines and the other file has 25,151 lines.</p>
<p>I made code like this
(INSERT_NUMBER : 50,000)</p>
<pre><code> for index, data in enumerate(lines):
   if ((index % INSERT_NUMBER) == 0 and index != 0) or (index == (lines- 1)) : 
           made file ....
</code></pre>
<p>which is the better way to split every 50,000 lines and make new files ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><code>itertools.groupby()</code></a>:</p>
<pre><code>from itertools import groupby

out_filename = '/tmp/f{}.txt'
lines_per_file = 50000

with open('infile.txt') as infile:
    for file_number, lines in groupby(enumerate(infile), key=lambda x: x[0] // lines_per_file):
        with open(out_filename.format(file_number), 'w') as outfile:
            outfile.writelines(line for line_number, line in lines)
</code></pre>
<p>So the trick here is to use the line number of each line to group it into chunks using integer division, and then to use the grouping key as a counter for the output file name.</p>
<p>Is it better than what you already have? It's a bit more complicated to read the code, but it doesn't need to deal with those annoying edge cases when you try to group using modulo arithmetic.</p>
</div>
<span class="comment-copy">Use <a href="http://linux.die.net/man/1/split" rel="nofollow noreferrer"><code>split</code></a>. <code>split --lines=50000 really_big_file.txt</code></span>
<span class="comment-copy">@MattDMo is it possible in python?</span>
<span class="comment-copy">Sure - <code>os.system("split --lines=50000 filename.txt")</code></span>
<span class="comment-copy">Thank you. I try to use it.</span>
