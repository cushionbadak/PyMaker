<div class="post-text" itemprop="text">
<p>Python beginner here. I am trying to write a convenience function to access class variables from a list of objects.</p>
<p>currently, I am writing one function for each variable. For example, I have a class 'swarm' that contains 'animals'. Each animal has many variables that store time series such as position, heading etc. (Only a couple are given in the example below.)</p>
<p>I am looking for a convenient way to access a specific variable from all animals from the Swarm class. I want to obtain a matrix with n columns where n is the number of animals.</p>
<pre><code>import numpy as np

class Animal(object):
    def __init__(self):
        self.x=np.zeros(10)
        self.y=np.ones(10)

class Swarm(object):
    def __init__(self):
        self.animals=[]
        self.animals.append(Animal())
        self.animals.append(Animal())

    def get_all_x(self):
        x1=self.animals[0].x
        x2=self.animals[1].x
        return np.stack([x1,x2],axis=-1)

s=Swarm()
s.get_all_x()
</code></pre>
<p>in pseudo code, I would like a function in the 'Swarm' class that takes the variable name to be collected as a string input. something like this:</p>
<pre><code>def get_var_from_all(self,var):
   return np.stack([x.var for x in self.animals],axis=-1)
</code></pre>
<p>obviously, this way of accessing 'var' doesn't work. any hints?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow"><code>getattr(obj, name)</code></a> -- it's a built-in function that tries to retrieve the field or method with the given <code>name</code> from the provided <code>obj</code>, if that attribute exists.</p>
<pre><code>def get_var_from_all(self, var):
   return np.stack([getattr(x, var) for x in self.animals],axis=-1)
</code></pre>
<p>(You may also be interested in <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow"><code>hasattr</code></a> and <a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow"><code>setattr</code></a> if you plan on doing more metaprogramming.)</p>
</div>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">getattr()</a>.</span>
<span class="comment-copy">great! Can this be extended to cases where in the example above, x would again be an object with variables a and b for example? In that case, I would like something like getattr(pair, 'x.a') but this doesn't seem supported</span>
<span class="comment-copy">@jlarsch -- you would probably need to chain multiple <code>getattr</code>s together to make that work -- for example, do<code>getattr(getattr(pair, 'x'), 'a')</code> or write a loop if you want to make the logic more general-purpose..</span>
<span class="comment-copy">I ended up using this: `       var=['x','a']         for i in range(len(var)):             tmp=[getattr(x, var[i]) for x in tmp]         return np.stack(tmp,axis=-1)`</span>
