<div class="post-text" itemprop="text">
<p>separate.py    </p>
<pre><code>    class foo():
       print 'a bunch of time consuming work'

    class tryme():
       print 'try me'*
</code></pre>
<p>main.py</p>
<pre><code>from separate import *

foo()
</code></pre>
<p>It however printed both:</p>
<pre><code>a bunch of time consuming work
try me
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you call <code>from separate import *</code>
you execute the print command !
If you want to just make an instance do something like : </p>
<pre><code>class foo():
  def my_print(self):
    print 'a bunch of time consuming work'
</code></pre>
<p>and call my print from main !</p>
<pre><code>f = foo()
f.my_print
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should write an init for your classes then it wont happen anymore!</p>
<pre><code>class foo():
  def __init__(self):
    print('a bunch of time consuming work')

class tryme():
  def __init__(self):
    print ('try me')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Because commands in the scope of the class are statically defined, when importing a module it also initiate the static fields when binding everything.
@Tino A gave a nice solution for you, but if you want to read some more material regarding <strong>imports</strong> in python try <a href="https://docs.python.org/3/reference/import.html" rel="nofollow">this</a>.</p>
</div>
<span class="comment-copy">Just a tip: You should use print like a function (print("...") ) to prepare for python 3.</span>
