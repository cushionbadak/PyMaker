<div class="post-text" itemprop="text">
<p>Here's the code I've frankensteined together from other posts,</p>
<pre><code>import xlrd
import os.path
wb = xlrd.open_workbook(os.path.join('D:\Data','SPS1 demo data.xlsx'))
wb.sheet_names()
sh = #?
Strings=#variables
i = 1
file = open("Output.txt", "w")
while sh.cell(i,3).value = (Strings):
   file.write(#row)
   i = i + 1
file.close
</code></pre>
<p>It's not complete, but what I'm trying to accomplish is a search in column 3(or entire sheet, doesn't matter) for 5 specific strings and output those rows line by line to a text file, if possible csv formatted i.e. commas between each value.  </p>
<p>How can I set a variable to 5 possible strings? Would this need to be an array?<br/>
I think the way that I have it written here will overwrite the text file each time rather than append it, is that correct? And if so what's the correct function, "file.append(#stuff)"?</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work. You can't assign 5 strings to a single variable, without using a list or some other data type. You can however check to see if the third cell's value (i[2] - here) is equal to any of the strings you're looking for ("string1" - "string5" - here).</p>
<pre><code>import xlrd
sheet_data = []   
wb = xlrd.open_workbook(Path_to_xlsx)
p = wb.sheet_names()
for y in p:
   sh = wb.sheet_by_name(y)
   for rownum in xrange(sh.nrows):
      sheet_data.append((sh.row_values(rownum)))

found_list = []
rows_to_be_saved = []
for i in sheet_data:
  if i[2] == "string1" or i[2] == "string2" or i[2] == "string3" or i[2] == "string4" or i[2] == "string5":
    found_list.append(i)
  else:
      rows_to_be_saved.append(i)

text_file = open("Output.txt", "w")
text_file.write(found_list)
text_file.close()
</code></pre>
<p>Your output written to the text file "Output.txt" will be comma separated as the rows in your excel are read into python as tuples in a list. </p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">Open</a> the file for appending instead of writing. You should consider using the <code>with</code> keyword when <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">working with files</a>. If you are looking for <i>complete</i> strings: put your strings in a container like a <a href="https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer">set</a> and use the <a href="https://docs.python.org/3/reference/expressions.html#comparisons" rel="nofollow noreferrer">in <i>operator</i></a>.</span>
<span class="comment-copy">Thanks, could you please explain the funciton of "w" in  this line?    text_file = open("Output.txt", "w")</span>
<span class="comment-copy">Yeah, "w" just means the file is writable: <a href="https://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">docs.python.org/2/tutorial/…</a></span>
<span class="comment-copy">Thank you very much for the help!</span>
<span class="comment-copy">Would panda be the best way to go about deleting the rows from the spreadsheet as well? something similar to this, dfs = dfs[dfs['Name'] != '']     found here    <a href="http://stackoverflow.com/questions/16616563/in-python-removing-rows-from-a-excel-file-using-xlrd-xlwt-and-xlutils" title="in python removing rows from a excel file using xlrd xlwt and xlutils">stackoverflow.com/questions/16616563/…</a></span>
<span class="comment-copy">You can definitely do that, but you could also just only read in the columns you want initially or only append those columns to a list later. So: for column in all_columns: good_columns.append((column[0], column[1], column[3]))</span>
