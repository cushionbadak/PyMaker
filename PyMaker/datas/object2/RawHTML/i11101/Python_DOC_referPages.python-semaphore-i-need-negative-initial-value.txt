<div class="post-text" itemprop="text">
<p>Python's semaphore doesn't support negative initial values. How, then, do I make a thread wait until 8 other threads have done something? If Semophore supported negative initial values, I could have just set it to -8, and have each thread increment the value by 1, until we have a 0, which unblocks the waiting thread.</p>
<p>I can manually increment a global counter inside a critical section, then use a conditional variable, but I want to see if there are other suggestions.</p>
</div>
<div class="post-text" itemprop="text">
<p>Surely it's late for an answer, but it can come handy to someone else.</p>
<p>If you want to wait for 8 different threads to do something, you can just wait 8 times.
You initialize a semaphore in 0 with </p>
<p><code>s = threading.Semaphore(0)</code></p>
<p>and then</p>
<pre><code>for _ in range(8):
    s.acquire()
</code></pre>
<p>will do the job.</p>
</div>
<div class="post-text" itemprop="text">
<p>For any further readers: starting from python3.2 there are <a href="https://docs.python.org/3/library/threading.html#barrier-objects" rel="nofollow noreferrer">Barrier Objects</a> which 
provides a simple synchronization primitive for use by a fixed number of threads that need to wait for each other. </p>
</div>
