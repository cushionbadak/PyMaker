<div class="post-text" itemprop="text">
<p>It is hard to describe my problem in the title. I think the title of this problem is not very good. My problem is the following</p>
<p>Say I have a list [0,0,0,0,0], I want to put 3 ones into these 5 slots in the list. I want to enumerate all the possible combinations. In this case, it will be 5 choose 3, which is 10ï¼Œ e.g.,</p>
<pre><code>[1,1,1,0,0]
[1,0,1,0,1]
....
</code></pre>
<p>I wish eventually, to get a list of lists such that each element (which is still a list) in the big list, stores the index of those ones in each scenario, e.g., in the example above, the 1st element in the final big list should be [0,1,2], the 2nd element in the final big list should be [0,2,4]...</p>
<p>Is there a fast way of achieving this? I guess I need to use the library itertools, but not sure which specific function should I use</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow">itertools.combinations</a></p>
<p>To get all the possible binary lists of length 5 with 3 ones</p>
<pre><code>N = 5
zeros = [0]*N
for comb in itertools.combinations(range(N), r = 3):
    l = zeros.copy()
    for indice in comb:
        l[indice] = 1
</code></pre>
<p>Not very efficient, but should be fast enough.</p>
<p>To get the "big list" of indices, use <code>itertools.combinations(range(5), 3))</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Is this what you are looking for?</p>
<pre><code>from itertools import combinations    
num_ones = 3
slots = 5
comb_indices = list(combinations(range(5),3))
print comb_indices
</code></pre>
<p><code>
[(0, 1, 2), (0, 1, 3), (0, 1, 4), (0, 2, 3), (0, 2, 4), (0, 3, 4), (1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]</code></p>
</div>
