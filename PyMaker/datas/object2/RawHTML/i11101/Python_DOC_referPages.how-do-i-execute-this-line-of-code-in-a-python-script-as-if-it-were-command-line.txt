<div class="post-text" itemprop="text">
<p>I'm trying to write a script to duplicate running the line:</p>
<pre><code>    D:\...\bin&gt;jython.bat D:\...\UploadTest.py
</code></pre>
<p>in a python script, like it were via cmd. I've tried a variety of subprocess.Popen commands and none of them work (all get the Errno2 file not found). I currently have </p>
<pre><code>    subprocess.Popen([r'D:\...\bin\jython.bat', r'D:\...\UploadTest.py'])
</code></pre>
<p>and I have tried several other variations. I'm mainly concerned with the space between the .bat and .py portions of the command. Should I just use r'' with a space between the two?</p>
</div>
<div class="post-text" itemprop="text">
<p>You probably need to use <code>shell=True</code> in the POpen call. But note the warnings about potential security issues found in the <a href="https://docs.python.org/2/library/subprocess.html" rel="nofollow">documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I had tried something like this. Let me know if this suits your requirement. Here is the reference <a href="https://stackoverflow.com/questions/20810366/executing-shell-script-using-subprocess-popen-in-python">link</a></p>
<pre><code>#!/usr/bin/env python
from subprocess import call
from textwrap import dedent

call(dedent("""\
    #!/bin/bash
    echo Hello world
    """), shell=True)
</code></pre>
</div>
<span class="comment-copy"><code>r''</code> or <code>'\\'</code>, not both.</span>
<span class="comment-copy">Have you tried just importing the module if it is on your python path? Importing and running the script are the same unless there is an import guard.</span>
<span class="comment-copy">Use os.path.join to prevent using slashes. It is a multi-platform method. <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow noreferrer">os.path.join</a></span>
<span class="comment-copy">@MadPhysicist would that work if i want to run the .bat and the .py as one line? Kind of like an argument I guess (I'm not good with the vocab of coding)</span>
<span class="comment-copy">I am making some assumptions here. Assumption #1 is that the code that you have the <code>Popen</code> call in is being run by jython. Assumption #2 is that <code>UploadTest.py</code> has no import guard (line that says <code>if __name__ == '__main__'</code>). If both are true, replace <code>suborocess.Popen...</code> with <code>import UploadTest.py</code>. If <code>UploadTest.py</code> is not on your python path, do <code>sys.path.append('D:\\folder\\containing\\the\\script')</code> first.</span>
<span class="comment-copy">This is a comment, not an answer.</span>
<span class="comment-copy">@MadPhysicist It's an attempt to answer the question. If you know this doesn't answer the question, could you provide more information please?</span>
<span class="comment-copy">The error <i>File not found</i> suggest that the problem is not really there...</span>
<span class="comment-copy">I doubt a guy running jython from a batch script is going to have success running a script in bash.</span>
