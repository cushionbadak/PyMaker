<div class="post-text" itemprop="text">
<p>As far as I understand the execution of the methods with decorators @onchange and @depends, almost always the argument 'self' in both is a recordset with this format:</p>
<p>res.partner(1, 2, 3) (for example in this case for the res.partner model)</p>
<p>What represents the records on which the decorated methods will be applied.</p>
<p>In cases where the ORM does not recover the id in the database, it is because it is an element that has not yet been recorded.</p>
<p>This is what I learned from books about Odoo's theory and that worked for me so far.</p>
<p>Two weeks ago, after updating third-party modules, I began to notice that in my own modules the self argument always returned me (for example):</p>
<p>res.partner(odoo.models.NewId object at 0x7f8c0f604768,)</p>
<p>And so for each of the methods with these decorators.</p>
<p>This for me indicates that it does not recover the id in the database and only returns its address in memory.</p>
<p>I tried many things, to delete all the own modules and to re-clone them or, create a new database and only install the own modules or, create a new base but with only Odoo modules and use a clean module created by the scaffold command or, delete the IDE and reinstall it, until testing in an instance on another computer and installing my own modules. But I always get the same result.</p>
<p>Before these two weeks the methods in my own modules used the self correctly. And the only updates were to third-party modules.</p>
<p>Another thing of interest is that both the third-party modules and the Odoo modules do recover the recordset in the self variable (according to the theory), but not for my own modules (not even for the basic module that is built using the scaffold command).</p>
<p>My questions are:
- Why the variable self uses the record in this way?
- How can I correct this bug if it were?</p>
<p>Thanks so much in advance!! :)</p>
</div>
<div class="post-text" itemprop="text">
<p>It's fine for <code>onchange</code> methods for me now. But in depends methods I understood that the self variable always had a recordset. The images show a simple module created with scaffold command and using the debug system in Pycharm. I just stopped in a method with @depends decorator and that's the result.</p>
<p><img alt="Pycharm environment" src="https://i.stack.imgur.com/G1ZfB.png"/></p>
<p><img alt="server backend" src="https://i.stack.imgur.com/PohGd.png"/></p>
</div>
<span class="comment-copy">Can you include the code for at least one of the methods you are using? Make sure to include which class it's a part of too.</span>
<span class="comment-copy">Actually that's not a bug. Just look into <code>BaseModel.onchange</code> and you will see, that the record the onchange is happening on will be replaced by a <code>NewId</code> record and the origin will be kept in in this record's <code>_origin</code> attribute. That feature/logic is used since introduction of the "new" API in Odoo v8 (IIRC).</span>
<span class="comment-copy">In this case <code>self</code> could be a recordset. So the code is wrong. You need to loop over self and set the value for each object</span>
