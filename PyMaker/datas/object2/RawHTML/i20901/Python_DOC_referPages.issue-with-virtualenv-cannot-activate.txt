<div class="post-text" itemprop="text">
<p>I created a virtualenv around my project, but when I try to activate it I cannot.
It might just be syntax or folder location, but I am stumped right now.</p>
<p>You can see below, I create the virtualenv and call it venv. Everything looks good, then I try to activate it by running <code>source venv/bin/activate</code></p>
<p>I'm thinking it might just have to do with my system path, but not sure what to point it to (I do know how to edit the path). I'm on python 7 / windows os, virtual env 2.2.x</p>
<pre>
Processing dependencies for virtualenv
Finished processing dependencies for virtualenv

c:\testdjangoproj\mysite&gt;virtualenv --no-site-packages venv
The --no-site-packages flag is deprecated; it is now the default behavior.
Using real prefix 'C:\\Program Files (x86)\\Python'
New python executable in venv\Scripts\python.exe
File venv\Lib\distutils\distutils.cfg exists with different content; not overwri
ting
Installing setuptools.................done.
Installing pip...................done.

c:\testdjangoproj\mysite&gt;source venv/bin/activate
'source' is not recognized as an internal or external command,
operable program or batch file.

c:\testdjangoproj\mysite&gt;source venv/bin/activate
'source' is not recognized as an internal or external command,
operable program or batch file.

c:\testdjangoproj\mysite&gt;source mysite/bin/activate
'source' is not recognized as an internal or external command,
operable program or batch file.

c:\testdjangoproj\mysite&gt;
</pre>
</div>
<div class="post-text" itemprop="text">
<p><code>source</code> is a shell command designed for users running on Linux (or any Posix, but whatever, not Windows).</p>
<p>On Windows, virtualenv creates a batch file, so you should run <code>venv\Scripts\activate</code> instead (per the virtualenv <a href="https://virtualenv.pypa.io/en/stable/userguide/#activate-script" rel="noreferrer">documentation on the activate script</a>).</p>
</div>
<div class="post-text" itemprop="text">
<p>I had the same problem. I was using Python 2, Windows 10 and Git Bash. Turns out in Git Bash you need to use:</p>
<pre><code> source venv/Scripts/activate
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p>For activation you can go to the <code>venv</code> your virtualenv directory
by <code>cd venv</code>.</p></li>
<li><p>Then on Windows, type <code>dir</code> (on unix, type <code>ls</code>). 
You will get 5 folders <code>include</code>, <code>Lib</code>, <code>Scripts</code>, <code>tcl</code> and 60 </p></li>
<li><p>Now type <code>./Scripts/activate</code> to activate your virtualenv <code>venv</code>.</p></li>
</ol>
<p>Your prompt will change to indicate that you are now operating within the virtual environment. It will look something like this <code>(venv)user@host:~/venv$</code>.</p>
<p>Congratulation..</p>
<p>And your <code>venv</code> is activated now.</p>
</div>
<div class="post-text" itemprop="text">
<p>For windows, type "C:\Users\Sid\venv\FirstProject\Scripts\activate" in the terminal without quotes. Simply give the location of your Scripts folder in your project. So, the command will be location_of_the_Scripts_Folder\activate.<a href="https://i.stack.imgur.com/uymhn.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/uymhn.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>I have a hell of a time using <code>virtualenv</code> on windows with git bash, I usually end up specifying the python binary explicitly. </p>
<p>If my environment is in say <code>.env</code> I'll call python via <code>./.env/Scripts/python.exe â€¦</code>, or in a shebang line <code>#!./.env/Scripts/python.exe</code>; </p>
<p>Both assuming your working directory contains your virtualenv (<code>.env</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can run the source command on cygwin terminal</p>
</div>
<div class="post-text" itemprop="text">
<p>I was also facing the same issue in my Windows 10 machine.
What steps i tried were:</p>
<p>Go to andconda terminal
Step 1</p>
<pre><code>pip3 install -U pip virtualenv
</code></pre>
<p>Step 2</p>
<pre><code>virtualenv --system-site-packages -p python ./venv
</code></pre>
<p>or </p>
<pre><code>virtualenv --system-site-packages -p python3 ./venv
</code></pre>
<p>Step 3</p>
<pre><code>.\venv\Scripts\activate
</code></pre>
<p>You can check it via spider tool in anaconda by typing <code>import tensorflow as tf</code></p>
</div>
<div class="post-text" itemprop="text">
<p>A small reminder, but I had my slashes the wrong way on Win10 cmd. According to python <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">documentation</a> the activate command is: <code>C:\&gt; &lt;venv&gt;\Scripts\activate.bat</code>
When you're browsing directories it's e.g. <code>cd .env/Scripts</code></p>
<p>So to create my venv I used <code>python -m venv --copies .env</code> and to activate <code>.env\Scripts\activate.bat</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If you see the 5 folders (<code>Include</code>,<code>Lib</code>,<code>Scripts</code>,<code>tcl</code>,<code>pip-selfcheck</code>) after using the <code>virtualenv yourenvname</code> command, change directory to <code>Scripts</code> folder in the cmd itself and simply use "<em>activate</em>" command.</p>
</div>
<span class="comment-copy">This documentation really helps out for both Posix and Windows systems: <a href="https://virtualenv.pypa.io/en/stable/userguide/" rel="nofollow noreferrer">virtualenv.pypa.io/en/stable/userguide</a></span>
<span class="comment-copy">You nailed it John, thanks !</span>
<span class="comment-copy">Works like a charm !! Thanks :)</span>
<span class="comment-copy">This also helps with <code>virtualenv</code> on both Posix and Windoze systems. <a href="https://virtualenv.pypa.io/en/stable/userguide/" rel="nofollow noreferrer">virtualenv.pypa.io/en/stable/userguide</a></span>
<span class="comment-copy">I don't see this "venv" directory after installing Python 2.7 on Windows. Advice? I went to Blairg23's link, but do not see an "activate" script in my Python "Scripts" directory.</span>
<span class="comment-copy">or just <code>activate</code></span>
<span class="comment-copy">I have a Windows computer and using the Git Bash terminal was the only terminal that worked for me. (The other terminals I tried to use was Command Prompt and the VS Code terminal.)</span>
<span class="comment-copy">I have tried Pycharm terminal. That works.</span>
<span class="comment-copy">In Windows10 <code>.\Scripts\activate</code></span>
<span class="comment-copy">also, some things don't behave correctly <i>cough _ansible_ cough</i> when the virtualenv isn't activated, so if things are weird you may have to activate the venv anyway :(</span>
<span class="comment-copy">Did this resolve the issue for you? It's not clear if you're saying "this works" or "I have the same problem"</span>
<span class="comment-copy">as per John Flatness</span>
