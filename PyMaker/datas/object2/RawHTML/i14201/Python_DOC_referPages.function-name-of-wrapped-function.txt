<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/308999/what-does-functools-wraps-do">What does functools.wraps do?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>How can I get the name of the original function?</p>
<pre><code>def wrap(f):
    def wrapped_f(*args, **kwargs):
        # do something
    return wrapped_f

@wrap
def A(params):
   # do something

print(A.__name__)
</code></pre>
<p>result: wrapped_f, but I need A!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/functools.html#functools.wraps"><code>functools.wraps()</code></a>:</p>
<p>Straight from the docs:</p>
<blockquote>
<p>Without the use of this decorator factory, the name of the example function would have been 'wrapper', and the docstring of the original example() would have been lost.</p>
</blockquote>
<p><strong>Example:</strong></p>
<pre><code>from functools import wraps


def wrap(f):
    @wraps(f)
    def wrapped_f(*args, **kwargs):
        pass
    return wrapped_f


@wrap
def A(params):
    pass


print(A.__name__)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>$ python -i foo.py
A
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functools.html#functools.wraps" rel="noreferrer"><code>functools.wraps</code></a> or update wrapped_f's <code>__name__</code> attribute manually.</p>
<pre><code>from functools import wraps

def wrap(f):
    @wraps(f)
    def wrapped_f(*args, **kwargs):
        # do something
    return wrapped_f

@wrap
def A(params):
   # do something

print(A.__name__)
</code></pre>
</div>
