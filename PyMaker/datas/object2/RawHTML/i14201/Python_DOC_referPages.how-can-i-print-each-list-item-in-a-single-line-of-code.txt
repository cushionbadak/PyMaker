<div class="post-text" itemprop="text">
<p>I want to do something like:</p>
<p><code>print '  -- Checking connectivity from {} to {}'.format((h for h in env.hosts), (h for h in dbHostList))</code></p>
<p>However, this only produces: <code>-- Checking connectivity from &lt;generator object &lt;genexpr&gt; at 0x2c36190&gt; to &lt;generator object &lt;genexpr&gt; at 0x2c367d0&gt;</code></p>
<p>I know there's a way to do this, and I'm just skipping something small.. but I don't know what. Any help is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not sure how you want the lists formatted, but you could do</p>
<pre><code>print '  -- Checking connectivity from {} to {}'.format(env.hosts, dbHostList)
</code></pre>
<p>This would create a string like</p>
<pre><code>'  -- Checking connectivity from [1, 2, 3] to [4, 5, 6]'
</code></pre>
<p>Otherwise if you want some particular format/delimiter you could use <code>join</code>, for example</p>
<pre><code>print '  -- Checking connectivity from {} to {}'.format(':'.join(map(str, env.hosts)), ':'.join(map(str, dbHostList)))
</code></pre>
<p>Which would print</p>
<pre><code>'  -- Checking connectivity from 1:2:3 to 4:5:6'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>(for object in sequence)
</code></pre>
<p>creates a <strong>Generator</strong>. You want this:</p>
<pre><code>[for object in sequence]
</code></pre>
<p>edit:</p>
<p>Or this:</p>
<pre><code>print "Stuff stuff stuff {}".format(" ".join(list))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In general, if your list items are strings, you can use <a href="https://docs.python.org/2/library/stdtypes.html#str.join" rel="nofollow">string join</a>:</p>
<pre><code>print ' '.join(env.hosts)
</code></pre>
<p>If your list items aren't strings, you can use a <a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> in which you call <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow">str()</a> (assuming you have a data type that can be converted by str()) to make them strings:</p>
<pre><code>print ' '.join([str(h) for h in env.hosts])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want a line for each check, you can <a href="https://docs.python.org/2/library/stdtypes.html#str.join" rel="nofollow"><code>join</code></a> newlines together with a formatted string for each pair of hosts. <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow"><code>zip</code></a> can combine the two lists so you can iterate over them pairwise:</p>
<pre><code>print '\n'.join('  -- Checking connectivity from {host} to {db_host}'
                .format(host=host, db_host=db_host)
                for host, db_host in zip(env.hosts, dbHostList))
</code></pre>
</div>
<span class="comment-copy">Whats the expected output?</span>
<span class="comment-copy">To expand on @user5061's question: what do you want? Are you testing each possible connection and reporting the results?  Are you testing certain pairs? Something else?</span>
<span class="comment-copy">A list comprehension of <code>[h for h in env.hosts]</code> would be a complete waste of time. It would create a list, which is an exact copy of <code>env.hosts</code> which is already a list.</span>
<span class="comment-copy">True. I thought he just wanted the correct syntax from () to []. The edit will work, though.</span>
<span class="comment-copy">You don't need to make a string comprehension, a generator will do.</span>
<span class="comment-copy">While a generator can be made to work, it seems the OP wants to print the whole "thing"; thus nothing is gained using a generator.</span>
