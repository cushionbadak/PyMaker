<div class="post-text" itemprop="text">
<p>I need to write a code where a string contains a number, then this number is incremented by 1, and then printed out within the initial string input. </p>
<p>It should work like this</p>
<pre><code>&gt;&gt;&gt;addNumber('I slept 3 hours')
what number would you like to increment? 3
I slept 4 hours
&gt;&gt;&gt;addNumber('I have 366 friends on facebook')
what number would you like to increment? 6
I have 377 friends on facebook
</code></pre>
<p>so far I have this, but I know it is wrong and honestly I don't know how to do this.</p>
<pre><code>def incrementNumbers(statement):
    number1=(int(input('What number would you like to increment?')))
    number2 = number1 +1
    i=[]
    for numbers in statement:
        if numbers.isdigit():
            i.append(numbers)
            statement.replace(numbers,number2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Possible error in your code is: </p>
<ol>
<li>you are trying to replace with <code>int</code> type data in the <code>string</code> directly.</li>
<li>Also only checking <code>numbers.isdigit()</code> will modify all numbers irrespective of what you specified to modify.</li>
</ol>
<p>Possible corrections to your code to make it run properly:</p>
<pre><code>def incrementNumbers(statement):
    number1 = int(input('What number would you like to increment?'))
    number2 = number1 +1
    i=[]
    for numbers in statement:
        if numbers.isdigit() and int(numbers) == number1:
            i.append(numbers)
            statement.replace(numbers,str(number2))
</code></pre>
<p>You can also change your <code>incrementNumbers(statement)</code> function to: </p>
<pre><code>def incrementNumbers(statement):
    number1 = input('What number would you like to increment?')
    number2 = str(int(number1)+1)
    statement = statement.replace(number1,number2)
    return statement
</code></pre>
<p>which I think is better than to use a <code>for</code> loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3.4/library/re.html#re.sub" rel="nofollow"><code>re.sub</code></a> here</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = 'I have 366 friends on facebook'
&gt;&gt;&gt; def addone(obj):
...     val = int(obj.group(1))
...     return str(val+1)
... 
&gt;&gt;&gt; i = raw_input('what number would you like to increment?')
what number would you like to increment?6
&gt;&gt;&gt; re.sub('({})'.format(i),addone,s)
'I have 377 friends on facebook'
</code></pre>
<p>Another Example</p>
<pre><code>&gt;&gt;&gt; s = 'I slept 3 hours'
&gt;&gt;&gt; i = raw_input('what number would you like to increment?')
what number would you like to increment?3
&gt;&gt;&gt; re.sub('({})'.format(i),addone,s)
'I slept 4 hours'
</code></pre>
<p>And you can define your function like</p>
<pre><code>def addNumber(s):
    def addone(obj):
        val = int(obj.group(1))
        return str(val+1)

    i = raw_input('what number would you like to increment?')
    return(re.sub('({})'.format(i),addone,s))
</code></pre>
<p>However I advice that you have a validation function</p>
<pre><code>i = raw_input('what number would you like to increment?')
if 0&lt;int(i)&lt;9:
    return(re.sub('({})'.format(i),addone,s))
else:
    return "Number out of range"
</code></pre>
<p>This will prevent the user from entering values outside your range</p>
</div>
<div class="post-text" itemprop="text">
<p>Under your requirements that the numeric value must be between 0 and 8, you can use <a href="https://docs.python.org/3/library/string.html" rel="nofollow"><code>string.replace</code></a></p>
<pre><code>def increment(s, inc):
    return s.replace(str(inc), str(inc + 1))

&gt;&gt;&gt; s = 'I have 366 friends on facebook'
&gt;&gt;&gt; inc = 6
&gt;&gt;&gt; increment(s, 6)
'I have 377 friends on facebook'
</code></pre>
</div>
<span class="comment-copy">What if they want to increment <code>9</code> in <code>399</code>?</span>
<span class="comment-copy">I don't think it will be tested for 9, it says only single positive digits. So it would have to be from 0-8</span>
<span class="comment-copy">9 is both positive and single.</span>
<span class="comment-copy">yes, but this is a very simple class, so I am just assuming we only need numbers from 0 to 8</span>
<span class="comment-copy">this should be the accepted answer!</span>
