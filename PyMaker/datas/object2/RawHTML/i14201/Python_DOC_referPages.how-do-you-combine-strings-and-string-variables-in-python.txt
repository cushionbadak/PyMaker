<div class="post-text" itemprop="text">
<p>I'm trying to open a text file with a dynamic path. How could I make it work something like this?:</p>
<pre><code>f = open("date/month/week.txt","a")
</code></pre>
<p>date, month, and week are the current date, month, and week.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3.4/library/stdtypes.html#str.format" rel="nofollow"><code>str.format</code></a>:</p>
<pre><code>f = open("{}/{}/{}.txt".format(date, month, week),"a")
</code></pre>
<p>I suggest you finish the <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow">Python tutorial</a> before trying anything too ambitious!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3.4/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow"><code>datetime</code> module with <code>strftime</code> formatting</a>.</p>
<pre><code>import datetime
f = open(datetime.datetime.strftime(datetime.datetime.now(), '%d/%m/%U') + '.txt', 'a')
</code></pre>
<p>For a date of June 8, 2015, this creates a filename of <code>08/06/23.txt</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>you can try this. using string format and datetime for a complete solution</p>
<pre><code>d = datetime.datetime.today()
date = d.date()
month = d.month
week = d.isocalendar()[1]

f = open('{date}/{month}/{week}.txt'.format(date=date, month=month, week=week),"a")
</code></pre>
<p>my personal preference on the naming convention for dates and a file would be in the format 'yyyy-mm-dd' you can include the week on this too, which would look like this</p>
<pre><code>d = datetime.datetime.today()
date = d.date()
week = d.isocalendar()[1]

f = open('{date}-{week}.txt'.format(date=date, week=week),"a")
</code></pre>
<p>that would result in a file of this format. <code>2015-06-08-24.txt</code></p>
</div>
<span class="comment-copy">Have you read any of python tutorial, e.g. <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/index.html</a> ?</span>
<span class="comment-copy"><code>f = open("{}/{}/{}.txt".format(date, month, week),"a")</code>?</span>
<span class="comment-copy">Try the <a href="https://docs.python.org/3.4/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer"><code>datetime</code> module</a>.</span>
<span class="comment-copy">What are "date," "month," and "week"? Is it day number of the month with leading zero, month number of the year with leading zero, week number of the year with leading zero? Or something else?</span>
<span class="comment-copy">gary even with your edit, your question is still unclear. you should give an example of what the date looks like. there are tons of different formats for dates.. a more clear example would be really helpful</span>
<span class="comment-copy">Yep. It does not deserve a downvote. (Perhaps ... The question is low quality. But that is not a heck of a reason to downvote :) )</span>
<span class="comment-copy">maybe someone thought you were copying a comment? ive seen ppl downvote for that before.. not sure though</span>
<span class="comment-copy">@JohnRuddel I didn't even notice there was a comment. When I started typing the answer, there was only the comment pointing to the Python tutorial.</span>
<span class="comment-copy">@kirbyfan64sos yea it was posted close to the same time.. I dono, wasnt me.. but the code is identical which I could see someone thinking that :(</span>
<span class="comment-copy">@JohnRuddell That is called <a href="http://meta.stackoverflow.com/questions/269913/comment-poaching">Comment Poaching</a>. But usually no one down votes for poaching. As I said earlier they mite have as it is a low qual ques. But in anycase kirbyfan64sos has explained my comment beautifully as an answer so I did upvote it :)</span>
<span class="comment-copy">Even better, nice job.</span>
<span class="comment-copy">after one year this wouldn't work anymore, because you are missing the year a proposed improvement : <code>datetime.datetime.strftime(datetime.datetime.now(), '%D/%U')</code> that would output 06/08/15/23.txt</span>
<span class="comment-copy">The OP specified the date, month, and week. Maybe he has a separate folder for each year or something. If he wants to modify this with the year or other additions, he can check out the linked documentation.</span>
<span class="comment-copy">yea exactly the date would be a whole date not day/month/week... date/month/week... but that format will not work for more than a year which is why I was pointing it out for the OP</span>
<span class="comment-copy">He may have had a good reason to omit the year. In any case, it's easy to modify, and now with your comments he's sure to be aware of this possible issue. :)</span>
