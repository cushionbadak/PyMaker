<div class="post-text" itemprop="text">
<p>I have a series of directories that are all named as floating point values, for example:</p>
<pre><code>0
1
2
2.5
6
6.1
10
</code></pre>
<p>I would like to get last (highest) numbered directory.
Using the sort() method on the directory names (which are string), I get 10 directly after 1.</p>
<pre><code>dirs = os.listdir(path)
dirs.sort()
</code></pre>
<p>This gives the order:</p>
<pre><code>0
1
10
2
2.5
6
6.1
</code></pre>
<p>I can put them into a list of floats by casting each to a float and then ordering the list, which solves the ordering problem.  But then when I return the value of the string, I get 10.0, which is not the name of the directory.  I need it to be exactly "10" (or whatever the last directory happens to be named).</p>
<p>Is there an elegant way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <em>key</em> argument to <a href="https://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow">sort</a>:</p>
<pre><code>dirs = os.listdir(path)
dirs.sort(key=float)
</code></pre>
<p>The <em>key</em> argument must be a callable, which will be called for each element in the list. The sorting then happens with respect to the value returned by the callable, without modifying the list items themselves.</p>
<p>In this case, we use <code>float</code> as a callable, which will return the floating point value represented by the strings passed to it.</p>
<p>Obviously, this blows up with strings which are no floats (<code>ValueError</code>), but this seems to be outside your problem scope.</p>
</div>
<span class="comment-copy">If you're not interested in having the sorted list at the end, you can just use the max builtin in much the same way; <code>max(os.listdir(path), key=float)</code> - it's still going to sort them in the background, but you might prefer the look of it.</span>
<span class="comment-copy">@LexyStardust it won't sort them, it will do a single pass.</span>
<span class="comment-copy">@PeterWood Oh, yes, of course you're right. Might out and out be the better solution if you're not interested in the sorted list afterwards then.</span>
<span class="comment-copy">@LexyStardust Yes, <code>max</code> is a good solution, I was just noting that it doesn't do a sort in the background.</span>
