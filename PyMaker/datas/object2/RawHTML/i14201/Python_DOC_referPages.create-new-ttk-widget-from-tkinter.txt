<div class="post-text" itemprop="text">
<p>I'm actually trying to create <code>ttk.Spinbox</code> from <code>tkinter.Spinbox</code>. I can manipulate codes below like <code>ttk.Scrollbar</code> pattern. <code>tkinter.Spinbox</code> button gives an old look for my GUI that is why i want to <code>ttk.Spinbox</code>.</p>
<p>Edit:
I am using <code>Python 3.4</code> on Windows 7 OS. I need a themed Spinbox widget. <code>ttk.__init__</code> file has not Spinbox class/module. So, I open that file and wrote codes just like <code>Scrollbar</code> class given below.</p>
<pre><code>class Scrollbar(Widget, tkinter.Scrollbar):
    """Ttk Scrollbar controls the viewport of a scrollable widget."""

    def __init__(self, master=None, **kw):
        """Construct a Ttk Scrollbar with parent master.

        STANDARD OPTIONS

            class, cursor, style, takefocus

        WIDGET-SPECIFIC OPTIONS

            command, orient
        """
        Widget.__init__(self, master, "ttk::scrollbar", kw)
</code></pre>
<p>And codes that I placed into <code>ttk.__init__.py</code> file. It inherits from <code>tkinter.Spinbox</code>.</p>
<pre><code>class Spinbox(Widget, tkinter.Spinbox):
    """spinbox widget."""
    def __init__(self, master=None, **kw):
        Widget.__init__(self, master, "ttk::spinbox", kw)
</code></pre>
<p>The test result given below is satisfactory.But there is an indent before content of <code>Spinbox Widget</code></p>
<p>tkinter.Spinbox Widget
<img alt="tkinter.Spinbox Widget" src="https://i.stack.imgur.com/jPer5.png"/></p>
<p>ttk.Spinbox Widget
<img alt="ttk.Spinbox Widget" src="https://i.stack.imgur.com/rj3CW.png"/></p>
<p>Is there something wrong? Why an indentation occurs?</p>
<pre><code>import tkinter as tk
import tkinter.ttk as ttk

class Spinbox(ttk.Widget):
    def __init__(self, master, **kw):
        ttk.Widget.__init__(self, master, 'ttk::spinbox', kw)

if __name__ == '__main__':
    root = tk.Tk()
    root.grid_columnconfigure(0, weight=1)
    opts = { 'from_': 5, 'to': 10, 'increment': 1 }
    sp1 = tk.Spinbox(root, from_=5, to=10)
    sp1.grid(row=0, column=0)
    sp2 = Spinbox(root, from_=5, to=10)
    sp2.grid(row=1, column=0,  columnspan=2, sticky="we",pady=2)
    root.mainloop()
</code></pre>
<p>If you expand root window the <code>ttk.Spinbox</code> spreads with it and an indentation occurs. I guess it is due to <code>columnconfigure</code> but i need configuration for better look.</p>
</div>
<div class="post-text" itemprop="text">
<p>This appears to be a bug within Tk itself, and your Python code is simply exposing it.  I converted your example code into straight Tcl/Tk and ran it against both Tk-8.5.17 and Tk-8.6.3 (via <a href="http://tclkits.rkeene.org/fossil/wiki/Downloads" rel="nofollow noreferrer">TclKits</a>), and the same issue is happening there, too:</p>
<pre><code>package require Tk 8.5

grid columnconfigure . 0 -weight 1

spinbox .spin -from 5 -to 10
grid .spin -row 0 -column 0

ttk::spinbox .spin2 -from 5 -to 10
grid .spin2 -row 1 -column 0 -sticky "ew" -pady 2
</code></pre>
<p><br/>
This is what the above code looks like when run:</p>
<p><a href="https://i.stack.imgur.com/QFI8k.png" rel="nofollow noreferrer"><img alt="ttk Spinbox bug present in Tcl/Tk itself" src="https://i.stack.imgur.com/QFI8k.png"/></a></p>
<p><br/>
It appears that the problem code is in the <code>vistaTheme.tcl</code> file within the <code>ttk</code> subdirectory, in the nested code beginning with <code>ttk::style layout TSpinbox</code>:</p>
<pre><code>ttk::style layout TSpinbox {
    Spinbox.field -sticky nswe -children {
        Spinbox.background -sticky news -children {
            Spinbox.padding -sticky news -children {
                Spinbox.innerbg -sticky news -children {
                    Spinbox.textarea -expand 1 -sticky {}
                }
            }
            Spinbox.uparrow -side top -sticky ens
            Spinbox.downarrow -side bottom -sticky ens
        }
    }
}
</code></pre>
<p><br/>
Specifically, if you remove the <code>-sticky {}</code> bit from <code>Spinbox.textarea -expand 1 -sticky {}</code> in the inner-most block, then it looks like the indentation goes away:</p>
<p><a href="https://i.stack.imgur.com/IXIpT.png" rel="nofollow noreferrer"><img alt="Fixed Spinbox example in Tkinter" src="https://i.stack.imgur.com/IXIpT.png"/></a></p>
<p><br/>
I'd suggest reading through the Tcl/Tk bug wiki <a href="http://wiki.tcl.tk/1020" rel="nofollow noreferrer">here</a>, then open a bug with them <a href="http://core.tcl.tk/tk/ticket" rel="nofollow noreferrer">here</a> for this issue.  Wouldn't hold your breath, though.  Tcl/Tk releases don't happen very often, because it's a pretty mature and stable language.  If a fix is produced for Tcl/Tk, then you'll need to file a bug with the Python maintainers to get them to either update their internal copy of Tcl/Tk for the Windows releases or backport a fix.</p>
<p>It might be possible to work around the problem in Python by using ttk's styles and configuring the <code>Spinbox.textarea</code> bit to unset the sticky attribute, however, I don't have an exact code snippet to do that at the moment.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using python 3.4 on windows 7 I don't get the same indentation. Here is a demo:</p>
<pre><code>import tkinter as tk
import tkinter.ttk as ttk

class Spinbox(ttk.Widget):
    def __init__(self, master, **kw):
        ttk.Widget.__init__(self, master, 'ttk::spinbox', kw)

if __name__ == '__main__':
    root = tk.Tk()
    opts = { 'from': 0, 'to': 10, 'increment': 1 }
    sp1 = tk.Spinbox(root, **opts)
    sp1.place(x=5, y=5)
    sp2 = Spinbox(root, **opts)
    sp2.place(x=5, y=30)
    root.mainloop()
</code></pre>
<p>This yields the following:</p>
<p><img alt="screenshot of a tk spinbox and ttk spinbox" src="https://i.stack.imgur.com/1Mgdo.png"/></p>
<p>If you are getting an extra indent in the entry field area perhaps you are formatting the value with spaces or tabs.</p>
</div>
<span class="comment-copy">Your question is "what do you think about patterned codes"? That question doesn't make much sense, and will likely be closed since it's asking for an opinion. Also, I really don't understand what "create ttk.Spinbox from tkinter.Spinbox" means. You can't create one from the other. For one thing, they both already exist so there's no reason to create a ttk.Spinbox. Are you asking how to subclass a ttk.Spinbox?</span>
<span class="comment-copy">Are you serious about ttk has <code>Spinbox</code> module? I tried to run codes before embedding patterned codes to  <code>ttk.__init__ </code> file and got an error message like this: <code>AttributeError: 'module' object has no attribute 'Spinbox'</code>. I asked two question. First, why an indent occurs? And second, is it true manipulating original <code>ttk.__init__ </code>?</span>
<span class="comment-copy">No problem. You may tell me how can i get tcl/ttk package to tkinter. Is it compatible python 3.4?</span>
<span class="comment-copy">Ok, now I see what you're doing, though I still don't understand what you're asking. You've already got the tcl/ttk version with a Spinbox and are trying to use it. Are you asking why the ttk spinbox has less (more?) padding (indentation) than the tkinter spinbox? Your question would be much better if you gave a complete working example <i>without</i> all of that help text. AND, clarify what you're asking. It would also help if you mentioned the platform (Windows, I'm guessing).</span>
<span class="comment-copy">FWIW: A <code>tkinter.ttk.Spinbox</code> class was added to Python 3.7 (according to <a href="https://docs.python.org/3/whatsnew/3.7.html#tkinter" rel="nofollow noreferrer">Whatâ€™s New In Python 3.7</a>).</span>
<span class="comment-copy">Fixed now in Tk (<a href="http://core.tcl.tk/tk/info/f91b7065bf1bf655" rel="nofollow noreferrer">core.tcl.tk/tk/info/f91b7065bf1bf655</a>) following your investigation here.</span>
<span class="comment-copy">Awesome, thanks!  I suppose someone should get a bug opened on Python to get this fix backported into at least Python 3.x.  Dunno if they'd take this for 2.x.</span>
<span class="comment-copy">You right. Your codes give that look. But I haven't find the mistake on my machine yet. May you please try <code>from=5</code> for start value? It always begins with "0" whatever number you write.</span>
