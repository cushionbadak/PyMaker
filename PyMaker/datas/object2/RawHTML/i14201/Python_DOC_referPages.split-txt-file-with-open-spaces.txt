<div class="post-text" itemprop="text">
<p>I'm trying to split a text file in Python but I get the following error:</p>
<pre><code>ValueError: need more than 1 value to unpack
</code></pre>
<p>My code:</p>
<pre><code>for line in lines:
    x, y, e, r, t=line.split()
    return x, y, e, r, t
</code></pre>
<p>the format of the text file is</p>
<pre><code>x y e r t
</code></pre>
<p>but some lines are missing numbers or letters, for example</p>
<pre><code> x   e r t
 x y   r t
</code></pre>
<p>So I guess that is why I get the error, but I can't find a way to resolve it.
Is it possible to also count the blank spaces as a variable?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; 'x   e r t'.replace('  ', ' _').split(' ')
['x', '_', 'e', 'r', 't']
&gt;&gt;&gt; 'x y   r t'.replace('  ', ' _').split(' ')
['x', 'y', '_', 'r', 't']
&gt;&gt;&gt; 'x     r t'.replace('  ', ' _').split(' ')
['x', '_', '_', 'r', 't']
</code></pre>
<p>And then just check for the special value <code>'_'</code> that signalizes a missing value.</p>
</div>
<div class="post-text" itemprop="text">
<p><em>This answer assumes the lines are <strong>missing</strong> fields, @Poke's answer assumes the fields have been replaced with a space (leaving three spaces between the other fields).</em></p>
<p>The docs on <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow"><code>.split()</code></a> tell you everything you need to know.</p>
<blockquote>
<p>If sep is not specified or is None, a different splitting algorithm is applied: runs of consecutive whitespace are regarded as a single separator, and the result will contain no empty strings at the start or end if the string has leading or trailing whitespace. Consequently, splitting an empty string or a string consisting of just whitespace with a None separator returns [].</p>
</blockquote>
<p>So simply specify <code>sep=' '</code> in your call to <code>.split()</code>, i.e.:</p>
<pre><code>line.split(' ')
</code></pre>
<p>So that the separator is exactly one space.</p>
<pre><code>&gt;&gt;&gt; x, y, e, r, t = "x y e r t".split(' ')
&gt;&gt;&gt; print((x, y, e, r, t))
('x', 'y', 'e', 'r', 't')

&gt;&gt;&gt; x, y, e, r, t = "x  e r t".split(' ')
&gt;&gt;&gt; print((x, y, e, r, t))
('x', '', 'e', 'r', 't')

&gt;&gt;&gt; x, y, e, r, t = "x y  r t".split(' ')
&gt;&gt;&gt; print((x, y, e, r, t))
('x', 'y', '', 'r', 't')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the number of spaces between each character is only 1 , and an extra whitespace in between indicates an empty variable. I think your best bet would be to not use <code>line.split()</code> function , instead move over each character in the <code>line</code> and determine the values you need.</p>
<p>A code like this -</p>
<pre><code>lst = []
for line in lines:
    for i in xrange(0,len(line),2):
         if line[i] == ' ':
             lst.append(' ')         # or whatever you use for empty variables
         else:
             lst.append(line[i])
   return lst
</code></pre>
<p>Then you can unpack the list from whereever you are calling the above function</p>
</div>
<span class="comment-copy">Are there actual <code>"</code> in the file, or are you just pointing out where the character would be?</span>
<span class="comment-copy">Can you give a few more actual examples of the contents of the file? Is it just a single character? Are there words, sentences, with spaces, or other symbols?</span>
<span class="comment-copy">There are no " in the file, it is just a blank space</span>
<span class="comment-copy">example line:      color 1234 place a 5</span>
<span class="comment-copy">also an example for the line missing the number, and please tell us why do you need <code>for</code> loop if you are returning the values from the first line only</span>
<span class="comment-copy">It would probably be safer to do <code>.replace(' \x20 ', ' _ ')</code> so as to not accidentally match the two-space case.</span>
<span class="comment-copy">@dimo414 If you do that, the third test case wonâ€™t work.</span>
<span class="comment-copy">Hmm fair, though that wasn't one of OPs examples.  A lookahead regex would work, e.g. <code>re.sub(r' \x20(?= )',' _','x \x20 \x20 r t').split(' ')</code>, but if the inputs are simple enough that's arguably overkill.</span>
<span class="comment-copy"><code>'x \x20 e r t'.split(' ') == ['x', '', '', 'e', 'r', 't']</code></span>
<span class="comment-copy">@poke not sure what you're suggesting, but that returns <code>False</code>.</span>
<span class="comment-copy">Meh, multiple subsequent spaces are ignored in inline code; that first string is <code>'x&lt;space&gt;&lt;space&gt;&lt;space&gt;e&lt;space&gt;r&lt;space&gt;t'</code>.</span>
<span class="comment-copy">This only works on single-character inputs, and also concatenates all lines into the same <code>lst</code>.</span>
