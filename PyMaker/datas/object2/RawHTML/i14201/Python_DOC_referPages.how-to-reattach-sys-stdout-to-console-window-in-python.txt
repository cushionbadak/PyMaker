<div class="post-text" itemprop="text">
<p>My python 3 doodling went like this:</p>
<pre><code>import io, sys
sys.stdout = io.StringIO()
# no more responses to python terminal funnily enough
</code></pre>
<p>My question is how to reattach so when I pass in <code>1+1</code> for example it'll return with <code>2</code> to the console?</p>
<p>This is in the python interpreter on 32-bit python running on windows 7 64 bit.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for <a href="https://docs.python.org/3/library/sys.html#sys.__stdout__" rel="nofollow"><code>sys.__stdout__</code></a>:</p>
<blockquote>
<p>It can also be used to restore the actual files to known working file objects in case they have been overwritten with a broken object. However, the preferred way to do this is to explicitly save the previous stream before replacing it, and restore the saved object.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure how you are taking input but this will do what you want:</p>
<pre><code>import io, sys

f = io.StringIO()
sys.stdout = f

while True:
    inp = input()
    if inp == "1+1":
        print(inp)
        break
sys.stdout = sys.__stdout__
print(eval(f.getvalue()))
</code></pre>
<p>Or get the last value of inp:</p>
<pre><code>import io, sys

f = io.StringIO()
sys.stdout = io.StringIO()

while True:
    inp = input()
    if inp == "1+1":
        print(inp)
        break
sys.stdout = sys.__stdout__
print(eval(inp))
</code></pre>
<p>Or iterate over stdin:</p>
<pre><code>import io, sys

sys.stdout = io.StringIO()
for line in sys.stdin:
    if line.strip() == "1+1":
        print(line)
        break
sys.stdout = sys.__stdout__
print(eval(line))
</code></pre>
</div>
<span class="comment-copy">where/how are you taking input?</span>
<span class="comment-copy">restart python?</span>
<span class="comment-copy">I could @AnandSKumar but I am experimenting with how the stdout works and if I were to create a custom file-like object to possibly redirect stdout to that object.</span>
<span class="comment-copy">@user1561108, are you actually trying to store all output?</span>
<span class="comment-copy">@PadraicCunningham just a learning exercise. What I want to do is suppress output by setting sys.stdout to a dummy file-like object. So far my class implements flush and write with a pass but when I set sys.stdout to an instance of it my app complains at runtime it is a calling flush on a NoneType object.</span>
