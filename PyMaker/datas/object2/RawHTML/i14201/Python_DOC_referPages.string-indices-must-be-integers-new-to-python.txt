<div class="post-text" itemprop="text">
<p>I hope I won't get trashed for this question. This is my <em>first</em> day with Python and all I've done so far is copy pasting and deducing from other snippets of code. I have no experience with code. I'm trying my hardest however this one I can't get past for the past few hours.</p>
<p>I'm currently adjusting an Editorial (iOS app) workflow to fit my needs — namely: posting to my WordPress site, including the ability to choose from a list of all possible post formats (I have "standard" and "link" enabled).</p>
<p>Here is the faulty bit from the relevant Python script:</p>
<pre><code>console.show_activity('Fetching formats...')

server = xmlrpclib.ServerProxy(wp_url)

format = server.wp.getPostFormats(wp_blogid, wp_username, wp_password, 'post_format')


i = 0
for x in format:
        formats += '\n' + x['name'] + " " + str(i)
        i = i+1

workflow.set_variable("formats", formats)
console.hide_activity()
</code></pre>
<p>I'm getting the error: "string indices must be integers, not str"</p>
<p>What is this supposed to do is later show me in a list my available formats. I've done this successfully with <code>server.wp.getPostFormats(wp_blogid, wp_username, wp_password, 'post_tag')</code> and <code>server.wp.getTerms(wp_blogid, wp_username, wp_password, 'category')</code></p>
<p>I know my problem is where the line with the <code>i</code> starts, I just have no idea how to solve it. I'm assuming by reading other topics that I need to cast, but I'm not even sure what <code>getPostFormats</code> returns, or how to do that.</p>
<p>Thanks in advance!</p>
<p>Edit: I've now concluded that <code>server.wp.getPostFormats</code> returns a dictionary, but I have not a slightest idea on how to retrieve only one set of data (either the key or value) of this dictionary. Please help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're getting that error because "string indices must be integers, not str".</p>
<pre><code>    formats += '\n' + x['name'] + " " + str(i)
</code></pre>
<p>Here, you are accessing the 'name'th element of <code>x</code>, where <code>'name'</code> is of course a string and x is a string too, since <code>server.wp.getPostFormats</code> obviously returns a list of strings.</p>
<p>So simply look at <code>format</code> and you should immediately see how to obtain the required data.</p>
<p><strong>UPDATE:</strong></p>
<p>OK, so you figured out that <code>format</code> is a dictionary (returned from <code>server.wp.getPostFormats</code>). In Python, if you iterate over a dictionary (your for-loop), you iterate through its keys. This is the standard behaviour.</p>
<p>Look at this example:</p>
<pre><code>&gt;&gt;&gt; foo = {'a': 1, 'c': 3, 'b': 2}
&gt;&gt;&gt; for x in foo: print(x)
... 
a
c
b
</code></pre>
<p>Of course you also need the values, not only the keys (you seem to look for an entry with the key <code>name</code>). One way is to iterate though the keys and items in one shot:</p>
<pre><code>&gt;&gt;&gt; for key, value in foo.iteritems():
...     print(key + ":" + str(value))
... 
a:1
c:3
b:2
</code></pre>
<p>So the <code>.iteritems()</code> method of a dictionary returns for every iteration a key/value-pair, which you can unpack within the for loops definition.</p>
<p>In your case, you can do the following:</p>
<pre><code>for key, value in format.iteritems():
    formats += 'key: ' + key + ', value: ' + value + '\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given that you are new, I would also suggest using the <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow">enumerate</a> method and refactoring your code:</p>
<pre><code>for i, x in enumerate(format):
    formats += '\n' + x[idx_for_name] + " " + str(i)
</code></pre>
<p>The <code>idx_for_name</code> would be the index for the name.</p>
<p>If you wanna go even further, you can use the <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow">join</a> method too:</p>
<pre><code>formats = '\n'.join(x[idx_for_name] + " " + str(i) \
                        for i, x in enumerate(format))
</code></pre>
<p><em>warning</em>: This code is untested.</p>
</div>
<div class="post-text" itemprop="text">
<p>Read:
<a href="http://python-wordpress-xmlrpc.readthedocs.org/en/latest/ref/methods.html#wordpress_xmlrpc.methods.posts.GetPostFormats" rel="nofollow">http://python-wordpress-xmlrpc.readthedocs.org/en/latest/ref/methods.html#wordpress_xmlrpc.methods.posts.GetPostFormats</a></p>
<p>GetPostFormats return a dictionary so x iterates among the keys which are strings.</p>
<p>Try:</p>
<pre><code>x= format['all']:
</code></pre>
</div>
<span class="comment-copy">Immediately. Hmm…the most I've done is CSS up until now. I wanted to take a few guesses but I'm clueless to be honest. I know this looks like laziness but it isn't.</span>
<span class="comment-copy">I'm still trying to fix this. Can you offer an expanded explanation perhaps? Am I dealing with a dictionary? How do I split the keys from the values and only display the latter?</span>
<span class="comment-copy">Why wouldn't formats = format work? If format is already a list of strings by now?</span>
<span class="comment-copy">Of course it could work. Try <code>formats += '\n' + x + " " + str(i)</code>. OK, so since CSS is not a programming language (although some basic techniques in the workflow are the same), you have to learn how to debug your own code. If you don't know what a variable holds, you can simply try it out in the Python console or put a <code>print(x)</code> in your code to look at it at runtime. Just like when you do <code>border: 1px solid red</code> if you want to highlight an element in CSS to see its bounds ;-)</span>
<span class="comment-copy">Thank you very much. I'm still trying to wrap my head around the principles, but the code above worked perfectly!</span>
<span class="comment-copy">I don't even know where to put it, or instead of what. My level of understanding is way too basic. Am I creating a new variable here?</span>
<span class="comment-copy">How do i know what should <code>idx_for_name</code> should be? Is there a way to know the index for the name?</span>
<span class="comment-copy">No no, formats and types are entirely different things in WordPress. If I change the type, it changes nothing about the format. What I simply need from this dictionary is the names to be displayed in a list, even if untidly. I just don't know how to "extract" only one set of the items and display it.</span>
<span class="comment-copy">How about <code>format['supported']</code>? Isn't that the list of the formats. The real question is, what are you expecting to receive?</span>
<span class="comment-copy">I don't even care if it's the key or name that are used (since they are the same only the value is capitalized). I just have no idea how to get either of these to be stored as the variable formats.</span>
<span class="comment-copy">Should I add this just after i=0?</span>
