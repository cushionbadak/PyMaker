<div class="post-text" itemprop="text">
<p>Why does Python add <code>\xe3</code> in the output of:</p>
<pre><code>&gt;&gt;&gt; b'Transa\xc3\xa7\xc3\xa3o'.decode('utf-8')
'Transaç\xe3o'
</code></pre>
<p>Expected value is:</p>
<pre><code>'Transação'
</code></pre>
<p>Some more information about my environment:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; print (sys.version)
3.4.3 (v3.4.3:9b73f1c3e601, Feb 24 2015, 22:44:40) [MSC v.1600 64 bit (AMD64)]   
&gt;&gt;&gt; sys.stdout.encoding
'cp437'
</code></pre>
<p>This was under Console 2 + Powershell.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use a console or terminal that supports <em>all</em> of the characters that you want to print.</p>
<p>When printing in the interactive console, the characters are encoded to the correct codec for your console, with any character that is not supported using the <a href="https://docs.python.org/3/library/codecs.html#error-handlers" rel="nofollow"><code>backslashreplace</code> error handler</a> to keep the output readable rather than throw an exception. This is a feature of the default <a href="https://docs.python.org/3/library/sys.html#sys.displayhook" rel="nofollow"><code>sys.displayhook()</code> function</a>:</p>
<blockquote>
<p>If <code>repr(value)</code> is not encodable to <code>sys.stdout.encoding</code> with <code>sys.stdout.errors</code> error handler (which is probably <code>'strict'</code>), encode it to <code>sys.stdout.encoding</code> with <code>'backslashreplace'</code> error handler.</p>
</blockquote>
<p>Your console can handle <code>ç</code> but not <code>ã</code>. There are several codecs that include the first character but not the last; you are using <a href="http://en.wikipedia.org/wiki/Code_page_437" rel="nofollow">IBM codepage 437</a>, but it is by no means the only one. </p>
<p>If you are running Python in the standard Windows console (<code>cmd.exe</code>) then be aware that Python, Unicode and that console do not mix very well. You can install the <a href="https://github.com/Drekin/win-unicode-console" rel="nofollow"><code>win-unicode-console</code> package</a> to make Python 3 use the Windows APIs to better output Unicode text; you'll need to make sure you have a font capable of displaying your Unicode text still.</p>
<p>I don't know for certain if that package is compatible with other Windows shells; your mileage may vary.</p>
</div>
<span class="comment-copy">Works fine for me in 3.4.3 on Yosemite.</span>
<span class="comment-copy">You need to tell your operating system, Python version and terminal you are using (grab version string from <code>python</code> startup)</span>
<span class="comment-copy">It has 2 problems when I test it. The output is: <code>u'Transa\xe7\xe3o'</code></span>
<span class="comment-copy">What specific version of Python is this? What characterset does your console support?</span>
<span class="comment-copy">@helpYou: that's because you are testing with Python 2, not 3. Do pay attention!</span>
<span class="comment-copy">From the look of version string, the OP is running on ms-windows, probably in <code>cmd.exe</code>. Not the best terminal out there. Out of the box, it will most definitely <i>not</i> be using UTF-8. How to change that has been answered several times on SO.</span>
<span class="comment-copy">Windows console allows you to print Unicode characters that are unsupported by the current code page. <code>win-unicode-console</code> that you've mentioned does it. See <a href="http://stackoverflow.com/q/28521944/4279">python3 print unicode to windows xp console encode cp437</a></span>
<span class="comment-copy">you should probably mention that the "backslashreplace" behavior if true is specific to <code>repr()</code> (used by <code>sys.displayhook()</code> in REPL)</span>
<span class="comment-copy">@J.F.Sebastian: Yes, this is <code>sys.displayhook()</code> specific; reference added.</span>
