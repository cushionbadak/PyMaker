<div class="post-text" itemprop="text">
<p>I'm trying to create the full path all at once if it doesn't already exist, but I'm not sure it's possible. This is my code now:</p>
<pre><code>absolute_path = '/home/{signup_code}/{resource}/process'
missing_file = absolute_path.format(resource='agents', signup_code=signup_code)
with open(missing_file, 'a') as f:
    f.write(listing_kwargs['agent_id'] + "\n")
</code></pre>
<p>And this is the error I'm getting:</p>
<pre><code>FileNotFoundError: [Errno 2] No such file or directory: '/home/ith/agents/process'
</code></pre>
<p>Or do I have to do something like this:</p>
<pre><code>path = '/home/{signup_code}/{resource}/'
os.makedirs(path, exist_ok=True)

process = os.path.join(path, 'process')

with open(process, 'a') as f:
    f.write(listing_kwargs['agent_id'] + "\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There's no way to do this directly. You're going to need to break it down into two parts.  First, create the path using <a href="https://docs.python.org/3/library/os.html#os.makedirs" rel="nofollow"><code>os.makedirs()</code></a>, and then open the file.  The nice thing is that you can wrap this process in a function, so that it's easily repeatable:</p>
<pre><code>import os
from contextlib import contextmanager

@contextmanager
def open_with_create_path(fname, file_mode='r', buffering=-1,
                          encoding=None, errors=None, newline=None,
                          dir_mode=0o777, exist_ok=True):
    os.makedirs(os.path.dirname(fname), mode=dir_mode, exist_ok=exist_ok)
    f = open(fname, mode=file_mode, buffering=buffering, encoding=encoding,
             errors=errors, newline=newline)
    try:
        yield f
    finally:
        f.close()

FNAME = r'C:\temp\foo\bar\baz.txt'
with open_with_create_path(FNAME, 'w') as f:
    print('foo', file=f)
</code></pre>
</div>
<span class="comment-copy">@StefanoSanfilippo doesn't that question provide a solution to recursively creating directories, while my question asks for a way to create the file in addition to the directories?</span>
<span class="comment-copy">Once you have created all the directories in <code>absolute_path</code>, you can simply <code>open(missing_file, 'a')</code> and it will work. So yes, the real issue here is the one addressed in that question.</span>
<span class="comment-copy">But my question asks to <code>Create directories and filename all at once</code> and if you're saying I can't, then the real answer is that the built-in <code>open()</code> function doesn't support that and there's no other Python function that supports that either.</span>
