<div class="post-text" itemprop="text">
<p>Why is <code>1**Inf == 1</code> ?</p>
<p>I believe it should be <code>NaN</code>, just like <code>Inf-Inf</code> or <code>Inf/Inf</code>.</p>
<p>How is exponentiation implemented on floats in python? 
<code>exp(y*log(x))</code> would get correct result :/</p>
</div>
<div class="post-text" itemprop="text">
<p>You are right, mathematically, <a href="https://math.stackexchange.com/q/10490/118565">the value of 1<sup>∞</sup> is indeterminate</a>.</p>
<p>However, Python doesn't follow the maths exactly in this case. <a href="https://docs.python.org/3/library/math.html#power-and-logarithmic-functions" rel="nofollow noreferrer">The document of <code>math.pow</code></a> says:</p>
<blockquote>
<pre><code>math.pow(x, y)
</code></pre>
<p>Return <code>x</code> raised to the power <code>y</code>. Exceptional cases follow Annex ‘F’ of the C99 standard as far as possible. <strong>In particular, <code>pow(1.0, x)</code> and <code>pow(x, 0.0)</code> always return <code>1.0</code>, even when <code>x</code> is a zero or a NaN.</strong></p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Floating-point arithmetic is not real-number arithmetic.  Notions of "correct" informed by real analysis do not necessarily apply to floating-point.</p>
<p>In this case, however, the trouble is just that <code>pow</code> fundamentally represents two similar but distinct functions:</p>
<ul>
<li>Exponentiation with an integer power, which is naturally a function <strong>R</strong>x<strong>Z</strong> --&gt; <strong>R</strong> (or <strong>R</strong>x<strong>N</strong> --&gt; <strong>R</strong>).</li>
<li>The two-variable complex function given by <code>pow(x,y) = exp(y * log(x))</code> restricted to the real line.</li>
</ul>
<p>These functions agree for normal values, but differ in their edge cases at zero, infinity, and along the negative real axis (which is traditionally the branch cut for the second function).</p>
<p>These two functions are sometimes divided up to make the edge cases more reasonable; when that's done the first function is called <code>pown</code> and the second is called <code>powr</code>; as you have noticed <code>pow</code> is a conflation of the two functions, and uses the edge cases for these values that come from <code>pown</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Technically 1^inf is defined as limit(1^x, x-&gt;inf). 1^x = 1 for any x &gt;1, so it should be limit(1,x-&gt;inf) = 1, not NaN</p>
</div>
<span class="comment-copy">eeee wut? no its not O_o. 1^Inf is and indeterminat, its not defined anyhow.</span>
<span class="comment-copy">look what i wrote above. <code>x^y</code> is equivalent to <code>exp(y*log(x))</code> (i mean mathematically) and that returns NaN</span>
