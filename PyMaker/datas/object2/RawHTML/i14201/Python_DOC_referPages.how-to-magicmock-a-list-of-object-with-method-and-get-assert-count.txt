<div class="post-text" itemprop="text">
<p>I am new to unit testing in python with MagicMock. I have the following code to assert the correct method count in python: </p>
<pre><code> def methodFoo(self):
       for booObject in self.booObjectList:
            booObject.shooMethod()
</code></pre>
<p>I wish to perform an assertion call count of the method <code>shooMethod()</code> in my unit test code to see if for N objects in <code>booObjectList</code> it performs N calls. The above function is not my unit test code. It is a method to be tested by creating a new method <code>test_methodFoo()</code> in my unit test class. How do I go about it? Thanks for you help.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>Mock</code> objects have an attribute <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.called" rel="nofollow"><code>called</code></a> that tracks whether a Mock has been called, and an attribute <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.call_count" rel="nofollow"><code>call_count</code></a> that tracks how many times they were called.</p>
<pre><code>def test_methodFoo(self):
    self.object_under_test.methodFoo()
    self.assertTrue(all([booObject.shooMethod.called for
                         booObject in self.object_under_test.booObjectList]))
</code></pre>
<p>Note however that you can't do something like:</p>
<pre><code>for o in list_of_four_o_mocks:
    o.mocked_method()
self.assertEqual(o.mocked_method.call_count, 4)
</code></pre>
<p>since <code>o</code> is a new object each time.</p>
</div>
<div class="post-text" itemprop="text">
<p>As Adam Smith has already answered your question, just a personal advice - I too faced lot of issues working with mock library when I started doing mocking. Besides python-mock does not works for other teating clients like pytest etc. So I recommend you to use fudge library. It is more pythonic and works with all testing clients.</p>
</div>
<span class="comment-copy">Hi Adam thanks for your reply. I wish to point out that this is the method which I have to test. I'll be having a separate unit-test method isolated which will test the above method. Apologies, maybe my post wasn't clear.</span>
<span class="comment-copy">@harsh8888 is my edit more in line with what you're trying to accomplish?</span>
<span class="comment-copy">yes I found a few issues working with mock. Thank you for your advice. I'll look into fudge!</span>
