<div class="post-text" itemprop="text">
<p>If I want to take</p>
<pre><code>"hi, my name is foo bar"
</code></pre>
<p>and split it on <code>"foo"</code>, and have that split be case insensitive (split on any of <code>"foO"</code>, <code>"FOO"</code>, <code>"Foo"</code>, etc), what should I do? Keep in mind that although I would like to have the split be case insensitive, I also DO want to maintain the case sensitivity of the rest of the string.</p>
<p>So if I have:</p>
<pre><code>test = "hi, my name is foo bar"

print test.split('foo')

print test.upper().split("FOO")
</code></pre>
<p>I would get  </p>
<pre><code>['hi, my name is ', ' bar']
['HI, MY NAME IS ', ' BAR']
</code></pre>
<p>respectively.</p>
<p>But what I <strong>want</strong> is:</p>
<pre><code>['hi, my name is ', ' bar']
</code></pre>
<p>every time. The goal is to maintain the case sensitivity of the original string, except for what I am splitting on. </p>
<p>So if my test string was:</p>
<pre><code>"hI MY NAME iS FoO bar"
</code></pre>
<p>my desired result would be:</p>
<pre><code>['hI MY NAME iS ', ' bar']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/re.html#re.split"><code>re.split</code> function</a> with the <a href="https://docs.python.org/3/library/re.html#re.IGNORECASE"><code>re.IGNORECASE</code> flag</a> (or <code>re.I</code> for short):</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; test = "hI MY NAME iS FoO bar"
&gt;&gt;&gt; re.split("foo", test, flags=re.IGNORECASE)
['hI MY NAME iS ', ' bar']
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also search for something and get the startposition of the keyword. I would recommend that and cut it with "substring" method out. (I am from C# so i dont know whats the method in this language)</p>
</div>
<span class="comment-copy">I don't understand the application of such a split. What would FOO be in real cases? Are you extracting a person's name or something else?</span>
<span class="comment-copy">One possible example: SQL scripts can use a separator to separate batches (f.e. "go" by default in SQL manager). This separator isn't understood by the SQL engine itself, only by the shell. So when you run such a script from a python module, you need to split the file on "go" to run the separate batches in series (case insensitive ofc).</span>
<span class="comment-copy">thank you for using re and giving such a beautiful soln :) @iCodez</span>
