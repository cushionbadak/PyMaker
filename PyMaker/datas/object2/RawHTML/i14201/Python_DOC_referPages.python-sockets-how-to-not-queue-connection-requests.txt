<div class="post-text" itemprop="text">
<p>This is the code I have:</p>
<pre><code>sock = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
sock.setblocking(0)
sock.setsockopt(socket.SOL_SOCKET,socket.SO_REUSEADDR,1)
sock.bind(('localhost',self._lp))
sock.listen(0) 
</code></pre>
<p>for the listen(), I have tried 0 and 1 but in both cases once one client connects, future clients will hang until the first connects. I would like any additional clients that attempt to connect to fail instead of waiting.  Presently, the only thing I can think of is to periodically check sock and    close any queued connections. Is there a better way?</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>This might sound trivial, but: 
Close the listening socket -- that will stop it from listening!</p>
<pre><code>sock.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use it as a <a href="https://docs.python.org/3/library/stdtypes.html#context-manager-types" rel="nofollow">context manager</a> to automatically close it after use.</p>
<pre><code># Note that the arguments were removed -- they were already the defaults
with socket.socket() as sock:
    sock.setblocking(0)
    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
    sock.bind(("localhost", self._lp))
    sock.listen(0)
</code></pre>
</div>
