<div class="post-text" itemprop="text">
<p>I am trying to make a script for unzipping all the .tar.gz files from folders in one directory. For example, I will have a file which it calls ( testing.tar.gz). Then if I do manually, I can press to "extract here" then the .tar.gz file will create a new file, and it calls testing.tar. Finally, if I repeat the process of pressing "extract here", the .tar file prodcudes me all the .pdf files.</p>
<p>I wonder that how can I do it, and I have my code here and it seems doesn't realty work tho.</p>
<pre><code>import os
import tarfile
import zipfile

def extract_file(path, to_directory='.'):
    if path.endswith('.zip'):
        opener, mode = zipfile.ZipFile, 'r'
    elif path.endswith('.tar.gz') or path.endswith('.tgz'):
        opener, mode = tarfile.open, 'r:gz'
    elif path.endswith('.tar.bz2') or path.endswith('.tbz'):
        opener, mode = tarfile.open, 'r:bz2'
    else: 
        raise ValueError, "Could not extract `%s` as no appropriate extractor is found" % path

    cwd = os.getcwd()
    os.chdir(to_directory)

    try:
        file = opener(path, mode)
        try: file.extractall()
        finally: file.close()
    finally:
        os.chdir(cwd)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why do you want to "press" twice to extract a .tar.gz, when you can easily do it once?  Here is a simple code to extract both .tar and .tar.gz in one go:</p>
<pre><code>import tarfile
if (fname.endswith("tar.gz")):
    tar = tarfile.open(fname, "r:gz")
    tar.extractall()
    tar.close()
elif (fname.endswith("tar")):
    tar = tarfile.open(fname, "r:")
    tar.extractall()
    tar.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a simpler option:</p>
<pre><code>import envoy # pip install envoy

def tar_xzf(f):
   r = envoy.run("tar xzf %s -C %s" % (f, "directory"))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When I ran your program, it worked perfectly for a tar.gz and a .tgz file, it didn't give me the correct items when I opened the zip, but .tbz was the only one that raised an error. I think you used the wrong method to unpack a .tbz because the error said I had an incorrect file type, but I didn't. One way you could solve the .zip issue is to us os.command() and unzip it with a command line (depending on your os) because it returned a _MACOSX folder with nothing inside of it even though I entered the path correctly. The only other error I encountered was that you used improper syntax for raising an error.
<br/> This is what you should have used:</p>
<pre><code>raise ValueError("Error message here")
</code></pre>
<p>You used a comma and no parenthesis. Hope this helps!</p>
</div>
<span class="comment-copy">Unless there is a point in using Python, it sounds like a job best fit for a shell script.</span>
<span class="comment-copy">extractall takes the target directory as a parameter, no need to chdir back and forth</span>
<span class="comment-copy">It is because, look like the file I have is (.tar.gz). But the unzipping process, it has to be extract from (.tar.gz) to (.gz) then, extract once more will give out the information I need like .pdf file etc</span>
<span class="comment-copy">and your code isn't working : if (fname.endswith("tar.gz")): NameError: name 'fname' is not defined</span>
<span class="comment-copy">@Alex <code>fname</code> would be a string that is your filename.</span>
<span class="comment-copy">@Alex fname is the string of the filename that you are trying to un-tar. <code>files = [f for f in os.listdir('.') if os.path.isfile(f)] for fname in files:     # do something, e.g. the above "if-elif" code.</code></span>
<span class="comment-copy">@Matthew You can use the path parameter in the extractall() command e.g. <code>tar.extractall(path="/new/dir/location")</code>. You can have more control too, e.g. if you need to extract only a few files inside the tar file using extract(). For more control, please take a look at the man page. <a href="https://docs.python.org/3/library/tarfile.html" rel="nofollow noreferrer">docs.python.org/3/library/tarfile.html</a></span>
