<div class="post-text" itemprop="text">
<p>I've been doing problems on HackerRank to get my foot in the door for solving Python problems and while I've had fun working through a few, one problem is stumping me.</p>
<p>This problem is the Mini-Max sum, which takes an input(<strong>arr</strong>); an array of <strong>5 integers</strong>, and prints the sum of the biggest and smallest 4 integers from arr in the next line's format via <strong>miniMaxSum(arr)</strong></p>
<p>maximum minimum</p>
<p>e.g. miniMaxSum(1, 2, 3, 4, 5)</p>
<p>10 14</p>
<p>I've done something which you can find below that works with this, and <strong>most examples</strong> to return the desired results, but I've just found out that it doesn't work for arr = (5, 5, 5, 5, 5). I suspect that this is because when the maximum value is identical to another value in the list (e.g. arr = 1, 2, 3, 4, 4) or likewise for minimum (e.g. arr = 1, 1, 3, 4, 5), my code simply fails as it <strong>relies on nothing being the same as arr's biggest or smallest value</strong>. The HackerRank error message is "<strong>Wrong Answer</strong>" if that helps.</p>
<p>Please <strong>critique and suggest improvements</strong> so it works with <strong>any</strong> array of 5 integers (e.g. (5, 5, 5, 5, 5)). I am keen in understanding how this works and your help would be immensely appreciated. Thanks in advance!</p>
<pre><code># Complete the miniMaxSum function below.
def miniMaxSum(arr):
    listmax = []
    listmin = []
    for number in arr:
        if number &gt; min(arr):
            listmax.append(number)    
    for number in arr:
        if number &lt; max(arr):
            listmin.append(number)
    maxnum = sum(listmax)
    minnum = sum(listmin)
    print (minnum, maxnum)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since it's a really small list, I would just sort it and then pick off the first-5 and then the last 5 and take the sums of those, respectively.</p>
<pre><code>def miniMaxSum(arr):
  arr_sorted = sorted(arr)
  return sum(arr_sorted[:4]), sum(arr_sorted[-4:])

print(miniMaxSum([1,2,3,4,5]))
print(miniMaxSum([5,5,5,5,5]))
</code></pre>
<p>Output:</p>
<pre><code>&gt;&gt;&gt; print(miniMaxSum([1,2,3,4,5]))
(10, 14)
&gt;&gt;&gt; print(miniMaxSum([5,5,5,5,5]))
(20, 20)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try taking the overall sum and subtracting minimum or maximum:</p>
<pre><code>def maxnum (x):
    return sum(x) - min(x)
def minnum(x):
    return sum(x) - max(x)

a = list(range(5))
b = [5]*5
print (a)
print (maxnum(a), minnum(a))
print (b)
print (maxnum(b), minnum(b))
</code></pre>
<p>output:</p>
<p>[0, 1, 2, 3, 4]</p>
<p>10 6</p>
<p>[5, 5, 5, 5, 5]</p>
<p>20 20</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>#!/bin/python3
# Complete the miniMaxSum function below.
def miniMaxSum(arr):
   arr=sorted(arr)
   s = sum(arr)
   print(s-arr[-1],s-arr[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I like Ruslan's idea of finding the sum then subtracting the min or max to get each answer. However, instead of using 3 loops (one for sum, one for min, and one for max) we can do it all in one loop -</p>
<pre><code>from math import inf

def minimum (a, b):
  return a if a &lt; b else b

def maximum (a, b):
  return a if a &gt; b else b

def minmaxsum (*xs):
  min = inf
  max = -inf
  sum = 0
  for x in xs:
    min = minimum (min, x)
    max = maximum (max, x)
    sum = sum + x
  return (sum - max, sum - min)

print (minmaxsum (1, 3, 5, 7, 9))
# (16, 24)

print (minmaxsum (1, 2, 3, 4, 5))
# (10, 14)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def miniMaxSum(a):   
    max = sum(list(filter(lambda x: x&lt;max(a) if a.count(max(a))==1 else x&lt;=max(a),a)))
    min = sum(list(filter(lambda x: x&gt;min(a) if a.count(min(a))==1 else x&gt;=min(a),a)))
    print(min,max)
</code></pre>
<p>This may help, and if not, can you update your expected output when your input is [1,1,2,3,4] or [1,2,3,4,4] or [5,5,5,5,5] ?</p>
</div>
<span class="comment-copy">Are you forgetting to mention that the goal is to add <b>4</b> out of the <b>5</b> numbers? <a href="https://www.hackerrank.com/challenges/mini-max-sum/problem" rel="nofollow noreferrer">reference</a>?</span>
<span class="comment-copy">An easy solution might be to first <code>sort</code> the input. The <code>min</code> will be the sum of the first four numbers, the <code>max</code> will be the sum of the last four numbers.</span>
<span class="comment-copy">If the code works, this probably belongs on <a href="https://codereview.stackexchange.com/">codereview.stackexchange.com</a></span>
<span class="comment-copy">Hi @user633183, you are correct, and I've edited the Question to say that the sum displayed is of the biggest and lowest 4 numbers. And thank you so much for the solution! It worked :)</span>
<span class="comment-copy">Hey @Alexander, my apologies; I just made my account today so I assumed this was the place to put it. You're welcome to move  this question there if it fits the website best</span>
<span class="comment-copy">Thank you @booleys1012! This method works perfectly :)</span>
<span class="comment-copy"><code>arr[len(arr)-1] == arr[-1]</code></span>
<span class="comment-copy">@thebjorn : Thanks</span>
