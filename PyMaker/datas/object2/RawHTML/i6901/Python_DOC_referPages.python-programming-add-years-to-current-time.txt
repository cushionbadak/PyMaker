<div class="post-text" itemprop="text">
<p>How do I display 5 years and 5 days later to from my current time 
Example :</p>
<pre><code>Year : 2017 
newYear: 2022
</code></pre>
<p>How to do it? 
My current time format looks like this :</p>
<pre><code>import datetime
X=datetime.datetime.now()
print ("year：%s" %x.year)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's simplest to use the 3rd party <code>dateutil</code> and <code>relativedelta</code> here which conveniently takes <code>years</code> as a delta option and will handle leap years for you, eg:</p>
<pre><code>from dateutil.relativedelta import relativedelta

dt = datetime.now() + relativedelta(years=5, days=5)
# datetime.datetime(2022, 9, 4, 13, 49, 33, 650299)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or you can use <a href="http://arrow.readthedocs.io/en/latest" rel="nofollow noreferrer"><code>arrow</code></a>:</p>
<pre><code>&gt;&gt;&gt; import arrow
&gt;&gt;&gt; ar = arrow.utcnow()
&gt;&gt;&gt; ar.shift(years=5, days=5)
&lt;Arrow [2022-09-04T12:50:26.609842+00:00]&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This perhaps:</p>
<pre><code>from calendar import isleap
from datetime import datetime, timedelta
X=datetime.now()

day_count = sum(365 + isleap(yr) for yr in range(X.year + 1, X.year + 6)) + 5

Y = X + timedelta(days=day_count)
</code></pre>
<p>Note: <code>timedelta</code> does not accepts <code>years</code> directly, you have to do it using <code>days</code>. It is not the best method but can be done this way.</p>
</div>
<div class="post-text" itemprop="text">
<p>Sorry for my Late reply, I have been extremely busy these past few days.
My code will first of all add 5 years to the current year, then add five days, making sure to change it if It goes over the maximum allowed. (Which is 31 for August) But you can expand it for the other months too. This is just the concept.</p>
<pre><code>    import datetime
X=datetime.datetime.now()
print ("year：%s" %X.year)
newY = X.year + 5
print("new year: %s" %newY)
newD = X.day + 5
if X.month == 1 or X.month == 3  or X.month == 5 or X.month == 7 or X.month == 8 or X.month == 10 or X.month == 11 or X.month == 12:
    # Test if the Month has 31 days
    if X.day + 5 &gt; 31:
        op1 = X.day + 5
        op2 = op1 - 31
        new = X.month + 1
        print("month: {}".format(new))

newXD = None
</code></pre>
</div>
<span class="comment-copy">You can adapt <a href="https://stackoverflow.com/questions/13685201/how-to-add-hours-to-current-time-in-python/13685221#13685221">this answer</a> to use <code>timedelta(years=5, days=5)</code> ...</span>
<span class="comment-copy">@JonClements <code>class datetime.timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0)</code> from the docs  <a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta" rel="nofollow noreferrer">docs.python.org/3/library/datetime.html#datetime.timedelta</a>. there seems to be no years argument. I think you're wrong.</span>
<span class="comment-copy">@s_vishnu ooops - confusing that with dateutil's relativedelta...</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/15741618/add-one-year-in-current-date-python">Add one year in current date PYTHON</a></span>
<span class="comment-copy">You're talking about days, but all you show is years… so <code>datetime.now().year + 5</code>…?!</span>
<span class="comment-copy">Always forget about arrow and it's quite nice that you can do <code>arrow.utcnow().shift(years=5, days=5)</code> directly...</span>
<span class="comment-copy">Never heard of leap years ?</span>
<span class="comment-copy">@brunodesthuilliers I edited to include leap years</span>
<span class="comment-copy">@Eduardo could just use <code>calendar.isleap</code> instead of rolling your own here...</span>
<span class="comment-copy">@JonClements thanks for the suggestion</span>
<span class="comment-copy">You might also want to check your logic... This gives you 2022-07-22...</span>
