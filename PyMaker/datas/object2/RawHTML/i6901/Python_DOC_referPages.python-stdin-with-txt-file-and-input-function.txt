<div class="post-text" itemprop="text">
<p>I have a input.txt file with the following content.</p>
<pre><code>3 
4 5
</code></pre>
<p>I want to use this as a standard input by using the following command in the command line.</p>
<pre><code>python a.py &lt; input.txt
</code></pre>
<p>In the a.py script, I am trying to read the input line by line using <code>input()</code> function. I know there are better ways to read the stdin, but I need to use <code>input()</code> function. </p>
<p>A naive approach of</p>
<pre><code>line1 = input()
line2 = input()
</code></pre>
<p>did not work. I get the following error message.</p>
<pre><code>File "&lt;string&gt;", line 1
  4 5
    ^
SyntaxError: unexpected EOF while parsing
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That way is ok, it works:</p>
<pre><code>read = input()
print(read)
</code></pre>
<p>but you are just reading one line.</p>
<p>From the <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">input()</a> doc:</p>
<blockquote>
<p>The function then reads a line from input, converts it to a string
  (stripping a trailing newline), and returns that.</p>
</blockquote>
<p>That means that if the file does not end with a blank line, or what is the same, the last nonblank line of the file do not end with an <code>end of line</code> character, you will get <code>exceptions.SyntaxError</code> and the last line will not be read.</p>
</div>
<div class="post-text" itemprop="text">
<p>You mention HackerRank; looking at some of my old submissions, I think I opted to give up on <code>input</code> in lieu of <code>sys.stdin</code> manipulations. <code>input()</code> is very similar to <code>next(sys.stdin)</code>, but the latter will handle EOF just fine.</p>
<p>By way of example, my answer for <a href="https://www.hackerrank.com/challenges/maximize-it/" rel="nofollow noreferrer">https://www.hackerrank.com/challenges/maximize-it/</a></p>
<pre><code>import sys
import itertools

# next(sys.stdin) is functionally identical to input() here
nK, M = (int(n) for n in next(sys.stdin).split())

# but I can also iterate over it
K = [[int(n) for n in line.split()][1:] for line in sys.stdin]

print(max(sum(x**2 for x in combo) % M for combo in itertools.product(*K)))
</code></pre>
</div>
<span class="comment-copy">I added more detail. I get an error when I try to read the second line.</span>
<span class="comment-copy">@hwchung I edited my answer. Any particular reason why you have to stick with the <code>input()</code> func? As I see the situation, or you add an end line to the end of your file, or you will have to use another way besides <code>input()</code> to read the content of the file that you passed as the standard input of the script. Exist several other options, just let me know if you are interested in them ;)</span>
<span class="comment-copy">Thanks for the answer. I want to stick with input() function because what I am trying to do is to debug my code used in HackerRank website. There I use input() function to take the input. It is much easier to debug using my local machine. So I am trying to write a code for taking the input locally. What do you mean by adding end line to the end of my file?</span>
<span class="comment-copy">@hwchung iterating over <code>sys.stdin</code> is a bit more versatile.</span>
<span class="comment-copy">@hwchung as Nick T said, <a href="https://docs.python.org/3/library/sys.html#sys.stdin" rel="nofollow noreferrer">sys.stdin</a> is a good alternative. You can treat it like any normal file and do things like <code>for line in sys.stdin:</code>, <code>sys.stdin.readlines()</code> and so on.</span>
