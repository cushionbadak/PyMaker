<div class="post-text" itemprop="text">
<p>I'm trying to make a <em>Text to Binary</em> converter script. Here's what I've got..</p>
<pre><code>userInput = input()
a = ('00000001')
b = ('00000010')
#...Here I have every remaining letter translated in binary.
z = ('00011010')
</code></pre>
<p>So let's say the user types the word "Tree", I want to convert every letter in binary and display it. I hope you can understand what I'm trying to do here.
PS. I'm a bit newbie! :)</p>
</div>
<div class="post-text" itemprop="text">
<p>The way you have attempted to solve the problem isn't ideal. You've backed yourself into a corner by assigning the binary values to variables.</p>
<p>With variables, you are going to have to use <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval()</code></a> to dynamically get their value:</p>
<pre><code>result = ' '.join((eval(character)) for character in myString)
</code></pre>
<p>Be advised however, the general consensus regarding the use of <code>eval()</code> and similar functions is <strong>don't</strong>. A much better solution would be to use a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> to map the binary values, instead of using variables:</p>
<pre><code>characters = { "a" : '00000001', "b" :'00000010' } #etc

result = ' '.join(characters[character] for character in myString)
</code></pre>
<p>The ideal solution however, would be to use the built-in <a href="https://docs.python.org/3/library/functions.html#ord" rel="nofollow noreferrer"><code>ord()</code></a> function: </p>
<pre><code>result = ' '.join(format(ord(character), 'b') for character in myString)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Check the <a href="http://www.linuxnix.com/pfotd-python-ord-function-examples/" rel="nofollow noreferrer">ord</a> function:</p>
<pre><code>userinput = input()
binaries = [ord(letter) for letter in userinput]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>cheeky one-liner that prints each character on a new line with label</p>
<pre><code>[print(val, "= ", format(ord(val), 'b')) for val in input()]
#this returns a list of "None" for each print statement
</code></pre>
<p>similarly cheeky one-liner to print with arbitrary seperator specified by print's sep value:</p>
<pre><code>print(*[str(val) + "= "+str(format(ord(val), 'b')) for val in input()], sep = ' ')
</code></pre>
<p>Copy and paste into your favorite interpreter :)</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/18815820/convert-string-to-binary-in-python">Convert string to binary in python</a></span>
<span class="comment-copy">Thanks! Seems like a dictionary is what I was looking for!</span>
