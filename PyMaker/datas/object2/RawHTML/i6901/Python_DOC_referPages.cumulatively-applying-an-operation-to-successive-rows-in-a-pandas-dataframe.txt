<div class="post-text" itemprop="text">
<p>I have a pandas <code>DataFrame</code> that looks like the following:</p>
<pre><code>sample = pd.DataFrame([[2,3],[4,5],[6,7],[8,9]],
                      index=pd.date_range('2017-08-01','2017-08-04'),
                      columns=['A','B'])

             A   B
2017-08-01   2   3
2017-08-02   4   5
2017-08-03   6   7
2017-08-04   8   9
</code></pre>
<p>I'd like to cumulatively multiply the values down the columns. Using column <code>A</code> as an example, the second row becomes <code>2*4</code>, the third row becomes <code>2*4*6</code>, and the last row becomes <code>2*4*6*8</code>. Same for column B. So, the desired result is:</p>
<pre><code>             A    B
2017-08-01   2    3
2017-08-02   8    15
2017-08-03   48   105
2017-08-04   384  945
</code></pre>
<p>There must be some built-in way to do this, but I'm having issues even doing it with for loops due to chained assignment issues.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.cumprod.html" rel="nofollow noreferrer"><code>DataFrame.cumprod</code></a></p>
<pre><code>out = sample.cumprod()
print(out)
              A    B
2017-08-01    2    3
2017-08-02    8   15
2017-08-03   48  105
2017-08-04  384  945
</code></pre>
<hr/>
<p>You can also use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.cumprod.html" rel="nofollow noreferrer"><code>np.cumprod</code></a> on the values:</p>
<pre><code>sample[:] = np.cumprod(sample.values, axis=0)
print(sample)
              A    B
2017-08-01    2    3
2017-08-02    8   15
2017-08-03   48  105
2017-08-04  384  945
</code></pre>
<hr/>
<p>Finally, using <a href="https://docs.python.org/3/library/itertools.html#itertools.accumulate" rel="nofollow noreferrer"><code>itertools.accumulate</code></a> (just for fun):</p>
<pre><code>from itertools import accumulate
from operator import mul

pd.DataFrame(np.column_stack([
                 list(accumulate(sample[c], mul)) for c in sample.columns]), 
             index=sample.index, 
             columns=sample.columns)

              A    B
2017-08-01    2    3
2017-08-02    8   15
2017-08-03   48  105
2017-08-04  384  945
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.cumprod.html" rel="nofollow noreferrer"><code>DataFrame.cumprod</code></a>:</p>
<pre><code>print (sample.cumprod())
              A    B
2017-08-01    2    3
2017-08-02    8   15
2017-08-03   48  105
2017-08-04  384  945
</code></pre>
<p>Alternative <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.cumprod.html" rel="nofollow noreferrer"><code>numpy.cumprod</code></a>:</p>
<pre><code>print (np.cumprod(sample))
              A    B
2017-08-01    2    3
2017-08-02    8   15
2017-08-03   48  105
2017-08-04  384  945
</code></pre>
<p><strong>Timings</strong>:</p>
<pre><code>np.random.seed(334)
N = 2000
df = pd.DataFrame({'A': np.random.choice([1,2], N, p=(0.99, 0.01)),
                   'B':np.random.choice([1,2], N, p=(0.99, 0.01))})
print (df)

In [31]: %timeit (df.cumprod())
The slowest run took 4.32 times longer than the fastest. This could mean that an intermediate result is being cached.
10000 loops, best of 3: 150 µs per loop

In [32]: %timeit (np.cumprod(df))
10000 loops, best of 3: 165 µs per loop

In [33]: %timeit (df.apply(np.cumprod))
The slowest run took 5.51 times longer than the fastest. This could mean that an intermediate result is being cached.
1000 loops, best of 3: 1.23 ms per loop
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>data frame has a method named <code>cumprod</code>. you can use it as follows</p>
<pre><code>sample.cumprod()
</code></pre>
</div>
<span class="comment-copy">Woah... retaliatory downvote.</span>
<span class="comment-copy">@ScottBoston Life is harsh...</span>
<span class="comment-copy">I think <code>apply</code> is really slow, the best dont use it ;)</span>
<span class="comment-copy">no worry , all of you getting my upvote !</span>
<span class="comment-copy">Ya, maybe the best is use <code>for completeness, dont use this</code> or remove it ;)</span>
<span class="comment-copy">Not sure what you're trying to achieve by repeating two already identical answers.</span>
<span class="comment-copy">should i delete it?</span>
<span class="comment-copy">Yes. You should. It adds nothing over the existing answers.</span>
<span class="comment-copy">i was typing it, and when i pressed post answer, it took lot of time to submit.</span>
