<div class="post-text" itemprop="text">
<p>Using python, given that string = "Tiësto &amp; Sevenn - BOOM (Artelax Remix)" which contains non-ascii characters, how do I use unidecode to fix the string so stripped clean of non-ascii characters?</p>
<pre><code>string = random.choice(list(open('data.csv'))).rstrip()
print "[+] Starting search for:", string

artistname = string.rsplit(' - ', 1)[0]
songname = string.rsplit(' - ', 1)[1]
</code></pre>
<p>The snip above gives me:
artistname = Tiësto &amp; Sevenn
songname = BOOM (Artelax Remix)</p>
<p>As you can see, the artistname still contains non-ascii characters. How do I use unidecode to fix this issue?</p>
</div>
<div class="post-text" itemprop="text">
<p>Simply call <code>unidecode</code> on your string (<em>unquoted</em>):</p>
<pre><code>&gt;&gt;&gt; from unidecode import unidecode
&gt;&gt;&gt; unidecode(string)
'Tiesto &amp; Sevenn - BOOM (Artelax Remix)'
</code></pre>
<p>There's also the longer/slower route of removing combining characters after normalising into a decomposed form:</p>
<pre><code>&gt;&gt;&gt; import unicodedata
&gt;&gt;&gt; ''.join(s for s in unicodedata.normalize('NFD', string) if not unicodedata.combining(s))
'Tiesto &amp; Sevenn - BOOM (Artelax Remix)'
</code></pre>
</div>
<span class="comment-copy">Did you read the <a href="https://pypi.python.org/pypi/Unidecode" rel="nofollow noreferrer">usage examples</a>? Did you make <i>any</i> attempt to figure out how to use unidecode?</span>
<span class="comment-copy">What have you tried so far? Are you wanting to remove them or replace them? In your example, do you want <code>"Tiesto &amp; Sevenn"</code> or <code>"Tisto &amp; Sevenn"</code> or something else?</span>
<span class="comment-copy">Yes. I've tried unidecode(u'string'). I want the ë character to be changed to e, not to remove it all together.</span>
<span class="comment-copy">unidecode does that.</span>
<span class="comment-copy">unidecode(string)    --- This throws an exception or warning because some of the strings in my data.csv file are good to go and don't need to be converted though unidecode.   /usr/lib64/python2.7/site-packages/unidecode/__init__.py:46: RuntimeWarning: Argument &lt;type 'str'&gt; is not an unicode object. Passing an encoded string will likely have unexpected results.  Would it make more sense to a sanitize my data.csv converting all non-ascii characters in the file vs when I pull out the string?</span>
<span class="comment-copy">@god: You need to actually read the data <i>as unicode</i> before you sanitize it. Use <a href="https://docs.python.org/3/library/codecs.html#codecs.open" rel="nofollow noreferrer"><code>codecs.open</code></a>, and specify the correct encoding.</span>
