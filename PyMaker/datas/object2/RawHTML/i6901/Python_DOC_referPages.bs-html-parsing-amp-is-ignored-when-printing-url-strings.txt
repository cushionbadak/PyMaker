<div class="post-text" itemprop="text">
<p>Consider the following example.</p>
<pre><code>htmlist = ['&lt;div class="portal" role="navigation" id="p-coll-print_export"&gt;',\
           '&lt;h3&gt;Print/export&lt;/h3&gt;',\
           '&lt;div class="body"&gt;',\
           '&lt;ul&gt;',\
           '&lt;li id="coll-create_a_book"&gt;&lt;a href="/w/index.php?title=Special:Book&amp;amp;bookcmd=book_creator&amp;amp;referer=Main+Page"&gt;Create a book&lt;/a&gt;&lt;/li&gt;',\
           '&lt;li id="coll-download-as-rl"&gt;&lt;a href="/w/index.php?title=Special:Book&amp;amp;bookcmd=render_article&amp;amp;arttitle=Main+Page&amp;amp;oldid=560327612&amp;amp;writer=rl"&gt;Download as PDF&lt;/a&gt;&lt;/li&gt;',\
           '&lt;li id="t-print"&gt;&lt;a href="/w/index.php?title=Main_Page&amp;amp;printable=yes" title="Printable version of this page [p]" accesskey="p"&gt;Printable version&lt;/a&gt;&lt;/li&gt;',\
           '&lt;/ul&gt;',\
           '&lt;/div&gt;',\
           '&lt;/div&gt;',\
          ]

soup = __import__("bs4").BeautifulSoup("".join(htmlist), "html.parser")

for x in soup("a"):
    print(x)
    print(x.attrs)
    print(soup.a.get_text())
</code></pre>
<p>I was expecting this short script to print the <code>a</code> tag equaling <code>x</code>, followed by a dictionary of the attributes of <code>x</code> (name (as key) and content (as key's value) of each of these), ending with the text for the link.</p>
<p>Instead the output is</p>
<pre><code>&lt;a href="/w/index.php?title=Special:Book&amp;amp;bookcmd=book_creator&amp;amp;referer=Main+Page"&gt;Create a book&lt;/a&gt;
{'href': '/w/index.php?title=Special:Book&amp;bookcmd=book_creator&amp;referer=Main+Page'}
Create a book
&lt;a href="/w/index.php?title=Special:Book&amp;amp;bookcmd=render_article&amp;amp;arttitle=Main+Page&amp;amp;oldid=560327612&amp;amp;writer=rl"&gt;Download as PDF&lt;/a&gt;
{'href': '/w/index.php?title=Special:Book&amp;bookcmd=render_article&amp;arttitle=Main+Page&amp;oldid=560327612&amp;writer=rl'}
Create a book
&lt;a accesskey="p" href="/w/index.php?title=Main_Page&amp;amp;printable=yes" title="Printable version of this page [p]"&gt;Printable version&lt;/a&gt;
{'href': '/w/index.php?title=Main_Page&amp;printable=yes', 'title': 'Printable version of this page [p]', 'accesskey': ['p']}
Create a book
</code></pre>
<p>The issues I find with this output are:</p>
<ul>
<li><code>print(soup.a.get_text())</code> bit always prints the text of the first tag.</li>
<li>In the dictionaries output by <code>print(x.attrs)</code>, the value of the key <code>"href"</code> is missing <code>&amp;amp.</code></li>
</ul>
<p>What am I missing here and how do I get the desired output?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/cgi.html#cgi.escape" rel="nofollow noreferrer"><code>cgi.escape</code></a> or <a href="https://docs.python.org/3/library/html.html#html.escape" rel="nofollow noreferrer"><code>html.escape</code></a> methods to html encode the <code>&amp;</code> character.  </p>
<pre><code>import html

for x in soup("a"):
    print(x)
    print({k:html.escape(v, False) if k == 'href' else v for k,v in x.attrs.items()})
    print(x.get_text())
</code></pre>
</div>
<span class="comment-copy">Why don't you use <code>x.get_text()</code>? Also <code>&amp;amp;</code> is the html encoded version of <code>&amp;</code>,  i wouldn't worry about it.</span>
<span class="comment-copy">@t.m.adam Of course I should be getting the text from <code>x</code>, thanks. I still need the <code>&amp;amp;</code> part, though. This is part of a challenge and I need the output to match.</span>
<span class="comment-copy">@t.m.adam Quick question. As you can see I added a solution that replaces &amp; with &amp;amp;, but I just realised this is potentially incorrect because the link might have legit ampersands. My question is:</span>
<span class="comment-copy">That is very unlikely. A url that contains ampersands for reasons other than separating parameters in the query string is propably a badly formatted url.</span>
<span class="comment-copy">@t.m.adam Ooops, my comment was cut short, glad you understood my question. Thanks.</span>
