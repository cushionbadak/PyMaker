<div class="post-text" itemprop="text">
<p>I have verified that Py is running as the same user. I am running locally and writing to a share, but the home dir (where Py is running from) shouldn't matter. Same error whether destination file (pull.zip) exists or not. Shouldn't have to run elevated for this. Same result in Py 2 or 3.</p>
<pre><code>import requests, io

url = "https://someplace/stuff.zip"
loc = "\\domain\share\pull.zip"

r = requests.get(url)
print (r.status_code)
with open(loc, 'w+b') as code:
    code.write(r.content)
</code></pre>
<p>Returns this: </p>
<pre><code>PermissionError: [Errno 13] Permission denied: 
'\\domain\\share\\pull.zip'
</code></pre>
<p>(paths have been anonymized)</p>
<p><a href="https://i.stack.imgur.com/9giWW.png" rel="nofollow noreferrer">Efective Permissions</a> on destination folder.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>\\</code> is an <a href="https://docs.python.org/3/reference/lexical_analysis.html?highlight=string%20literals#string-and-bytes-literals" rel="nofollow noreferrer">escape sequence</a> interpreted as a single backslash.</p>
<p>You can use four backslashes to represent two of them (but this will fail if the literal contains another escape sequence)</p>
<pre><code>loc = "\\\\domain\share\pull.zip"
</code></pre>
<p>or a raw literal</p>
<pre><code>loc = r"\\domain\share\pull.zip"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your "pull.zip" is local ("pull.zip" is in folder "share" which is in folder "domain" which is in the current directory of your python file) than you should remove <code>\\</code> from start of string loc and double all other slashes. So your code should look like this:</p>
<pre><code>import requests, io

url = "https://someplace/stuff.zip"
loc = "domain\\share\\pull.zip"

r = requests.get(url)
print (r.status_code)
with open(loc, 'w+b') as code:
    code.write(r.content)
</code></pre>
</div>
<span class="comment-copy">You need to escape those backslashes. If the path is <code>\\foobar</code>, your string should be <code>\\\\foobar</code>, as "\\" escapes to "\".</span>
<span class="comment-copy">Ah! Of course. Thanks!</span>
