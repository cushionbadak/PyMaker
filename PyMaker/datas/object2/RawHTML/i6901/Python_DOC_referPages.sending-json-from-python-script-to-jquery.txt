<div class="post-text" itemprop="text">
<p>I am a newbie to Jquery and my script below doesn't produce any output on the HTML page. </p>
<p><strong>Problem</strong>:</p>
<p>Within my script, I use the <code>requests</code> library to send a GET request to a Flask URL that returns a JSON object. This object then needs to be sent to the JQuery which would then output the JSON object on a webpage. If I send the data using <code>response.text</code> it works fine, but if I send it using <code>response.json()</code> it outputs nothing. However I would need it to be sent as a JSON object so that I could then extract all the data out of it and put it on the HTML elements. </p>
<p><strong>getajaxtest.py</strong>:</p>
<pre><code>import requests
import json
def send_log_ajax():
     url = 'http://xx.com/returnjsonobj'
     response = requests.get(url)
     return response.json()
if __name__ == '__main__':
     ajax_var = send_log_ajax()
     print(ajax_var)
</code></pre>
<p><strong>the HTML and JQuery</strong>:</p>
<pre><code> &lt;html&gt;
    &lt;head&gt;&lt;script
  src="https://code.jquery.com/jquery-3.2.1.min.js"&gt;&lt;/script&gt;&lt;/head&gt;
    &lt;body&gt;
    &lt;div style="border:1px solid black;background-color:lightgray"&gt;
        &lt;p id="transactioninfo"&gt;Loading Transaction Information...&lt;/p&gt;
    &lt;/div&gt;
    &lt;script&gt;
    function getlogs() {

    var url = 'www.myserver.com/getajaxtest.py';

        $.ajax({
           type: 'GET',
           url: url,
           dataType: 'json',
           success: function(data) {

           $("#transactioninfo").html(data)
        },

        error: function(e) {
            console.log(e.message);
        }
    });

    }
    $(document).ready(function(){

        setTimeout(function(){getlogs();}, 2000);
        setInterval(function(){getlogs();}, 2000);

    });

    &lt;/script&gt;

    &lt;/body&gt;
    &lt;/head&gt;
    &lt;/html&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are printing a <strong>Python</strong> data structure, not JSON. <code>requests.json()</code> decoded the Flask response to Python dictionaries, lists, strings, numbers, booleans, and perhaps <code>None</code>. That's not JSON data.</p>
<p>Just keep your data as JSON data, and print the text you received. Your script is nothing but a proxy, there is no need to interpret the JSON data.</p>
<p>If you must decode (perhaps you wanted to apply some transformations to the data contained), make sure you <em>encode back to JSON again</em>. Use <a href="https://docs.python.org/3/library/json.html#json.dumps" rel="nofollow noreferrer"><code>json.dumps()</code></a> to produce a new JSON-encoded string when you do.</p>
</div>
<span class="comment-copy">Shall I just use <code>response.text</code> and then within JQuery, use <code>dataType: 'json'</code>? And nope, no transformations are required, I just need to extract the values from the keys within Jquery</span>
<span class="comment-copy">@omrakhur: then just print <code>response.text</code> for Unicode text, or write <code>response.content</code> directly to <code>sys.stdout.buffer</code> to avoid decoding from bytes and encoding back again.</span>
<span class="comment-copy">I'm a bit confused between <code>response.content</code> and <code>response.text</code>. If I use the former, would it still be seen as JSON when the thing is returned to JQuery?</span>
<span class="comment-copy">@omrakhur: <code>response.content</code> is the raw response from the server, as bytes. JSON is a text-based format, so you can decode the bytes as text. That's what the <code>response.text</code> value is, the bytes interpreted through a text encoding (usually UTF-8 for JSON).</span>
<span class="comment-copy">@omrakhur: writing out text with <code>print()</code> has to encode that text again, as files (including a terminal or a network connection) only take bytes. So your JSON text is encoded again to bytes, and the encoding <i>could</i> be different. So for the same JSON data you could end up with a different result. You don't specify how you run your Python script (is it a CGI script perhaps?) so it's unclear what encoding would be used. It could just be ASCII, and I know Flask produces ASCII-safe JSON, so it <i>probably</i> all is fine.</span>
