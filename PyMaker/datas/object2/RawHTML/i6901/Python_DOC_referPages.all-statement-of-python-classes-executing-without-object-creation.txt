<div class="post-text" itemprop="text">
<p>I am new to python and just created 3 classes in a module i.e global scope, inside a function and if block. while running the module, all statement of all the classes are running. I am surprised why all classes are got executed without any object created.</p>
<pre><code>class Demo:
    print('global class Demo')

def test():
    print('Demo')
    class Demo:
        x = 'Demo from fuction test()'
        print(x)

test()

if True:
    class Demo:
        print('Demo from if:') 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/reference/compound_stmts.html#class-definitions" rel="nofollow noreferrer">Python doc</a>:</p>
<blockquote>
<p>A class definition is an executable statement.</p>
</blockquote>
<p>and...</p>
<blockquote>
<p>The class’s suite is then executed in a new execution frame (see
  Naming and binding), using a newly created local namespace and the
  original global namespace. (Usually, the suite contains mostly
  function definitions.) When the class’s suite finishes execution, its
  execution frame is discarded but its local namespace is saved. [4] A
  class object is then created using the inheritance list for the base
  classes and the saved local namespace for the attribute dictionary.
  The class name is bound to this class object in the original local
  namespace.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>When you write a block of code of this form:</p>
<pre><code>class Name:
    &lt;statements&gt;
</code></pre>
<p>Python always runs the <code>&lt;statements&gt;</code>, right then and there. The main difference is that, if any of those statements define variables, the variables are not set in the global namespace; instead they are "scooped up" and saved in a dictionary, which is associated with an object called (in this case) <code>Name</code>.</p>
<p>For example, you know how this works:</p>
<pre><code>a = 1
print(a) # prints 1
</code></pre>
<p>You can stick that inside a class definition and it still does the same thing:</p>
<pre><code>class Name1:
    a = 2
    print(a) # prints 2
</code></pre>
<p>but after the class definition ends, the variable <code>a</code> is "scooped up" and no longer has the value it had inside the class definition.</p>
<pre><code>a = 1
print(a) # prints 1

class Name2:
    a = 3
    print(a) # prints 3

print(a) # prints 1
print(Name2) # prints &lt;class '__main__.Name2'&gt;

print(Name2.a) # prints 3; this shows where the `a` from the class definition went
</code></pre>
<p>You might be mixing this up with a <em>function</em> definition. When you start a function definition block using the <code>def</code> keyword, the statements inside the block are <em>not</em> executed at that time.</p>
<pre><code>def func():
    a = 4
    print(a)

# this prints nothing unless you call func()
</code></pre>
<p>They're saved until later, when you call the function. But classes are not like functions in this way.</p>
</div>
<div class="post-text" itemprop="text">
<p>It's hard to tell what you're asking, but defining a class is not the same as creating an object. You need to call the class to create an instance (the object you're looking for).</p>
<pre><code># The class (a type)
class Demo:
    pass

# An instance of the class (an object)
Demo()
</code></pre>
</div>
<span class="comment-copy">You are just declaring the class thrice, without any object creation. What is it you are tryingt o do here?</span>
<span class="comment-copy">What is the thing you are trying to achieve ?</span>
<span class="comment-copy">trying to understand how to declare and run a class. As I have got to know you can declare a class in different scope. <a href="https://docs.python.org/3/tutorial/classes.html#a-first-look-at-classes" rel="nofollow noreferrer">docs.python.org/3/tutorial/classes.html#a-first-look-at-classes</a></span>
<span class="comment-copy">This(A class definition is an executable statement) helps to understand the concept. Thanks!</span>
<span class="comment-copy">You are correct, I mixed up function definition. Thanks! Devid.</span>
<span class="comment-copy">@DJ- If my post answered your question, I'd encourage you to indicate that by accepting it - click the green checkmark to the left of the post.</span>
