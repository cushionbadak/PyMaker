<div class="post-text" itemprop="text">
<p>I want to read lines 25 to 55 from a file, but the range seems to be only outputting a single number and 6 lines, when it should be 30 lines.</p>
<pre><code>hamlettext = open('hamlet.txt', 'r')
for i in range (25,55):
    data = hamlettext.readlines(i)

print(i)
print(data)
</code></pre>
<p>Output:</p>
<pre><code>54
['\n', 'Mar.\n', 'O, farewell, honest soldier;\n', "Who hath reliev'd you?\n"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the builtin <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> function:</p>
<pre><code>for i, line in enumerate(hamlettext):
    if i in range(25, 55):
        print(i)
        print(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could read the file fully then slice to get the list of lines:</p>
<pre><code>with open('hamlet.txt', 'r') as f:
    data = f.readlines()[25:55]
</code></pre>
<p>if the file is big, though, it's better to skip 25 lines, then read, then get out of the loop to avoid reading the thousand other lines for nothing:</p>
<pre><code>with open('hamlet.txt', 'r') as f:
    for i, line in enumerate(hamlettext):
        if i &lt; 25:
           continue
        elif i &gt;= 55:
           break
        else:
           print(i,line.rstrip())
</code></pre>
<p>also note that if you're comparing the line numbers with a text editor, there's a 1 offset (python starts at 0, editors start at 1, so you can use <code>enumerate(hamlettext,1)</code> to fix that properly.</p>
</div>
<div class="post-text" itemprop="text">
<p>So your <code>i</code> in the code above is printing the last line. To read all the lines from 25 to 55 you need to print the data inside the loop.</p>
<pre><code>    hamlettext = open('hamlet.txt', 'r')
    for i in range (25,55):
        data = hamlettext.readlines(i)

        print(i)
        print(data)
</code></pre>
</div>
<span class="comment-copy">thank you! both answers work just fine - the enumerate was able to print it a bit cleaner, without the quotes in each line. Is this simply an inbuilt cleanup within enumerate?</span>
<span class="comment-copy">@aiwan: According to the documentation, <code>enumerate</code> returns a tuple containing a count (from start, which defaults to 0) and the values obtained from iterating. In the case of a file, it creates pairs like <code>(0, 'this is the first line\n')</code> which can then be used to keep track of a lines position. You can read more about <code>enumerate</code> by clicking the hyperlink in my answer.</span>
<span class="comment-copy">got it thank you!</span>
<span class="comment-copy">@aiwan: Sure thing. I see that you're new to Stack Overflow (welcome!), and, if an answer helped you, you can choose to upvote it or "accept" it as the correct answer.</span>
<span class="comment-copy">This is incorrect, as <code>readlines(i)</code> does not retrieve line <code>i</code> from the file. "If given an optional parameter <code>sizehint</code>, it reads that many bytes from the file and enough more to complete a line, and returns the lines from that."</span>
