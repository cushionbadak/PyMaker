<div class="post-text" itemprop="text">
<p>I am currently learning python and encourter problems while doing exercise provided from teacher. so i have a txt file contains a name list like the following </p>
<pre><code>Noah

Liam

Madison

Jayden

Elizabeth

Jacob

Mia

Noah

Angelia

Bob

Cindy
</code></pre>
<p>and I am supposed to remove duplicates from the list, eg there are 2 'Noah' in the list and I am supposed to remove one of them and return a list that is alphabetically sorted such as </p>
<pre><code>Angelia

Bob

Cindy
</code></pre>
<p>....</p>
<p>I have searched the internet and know about method where we apply set.
however my teacher specify in the comment and says </p>
<pre><code> for n in open('class_list.txt'):
# TODO: do something with n.strip() "
</code></pre>
<p>and I don't understand why use strip function here? isn't strip function just simply remove the 2 same string from the list if I write n.strip('Noah')? or do I interpret and use strip wrongly?</p>
</div>
<div class="post-text" itemprop="text">
<p>I doubt your teacher meant to use strip() to eliminate duplicates, but to remove the whitespace after the name. 
Since this looks like a homework problem, i won't give you the solution, but i'll try to point you in the right direction.</p>
<p>You should probably know how to read data, either with <code>file = open("file")</code> or <code>with open("file") as f</code>. So, with a list of names, we can get around to eliminating duplicates. However, the word may include some nasty characters at the end of each word(<code>\n</code> in particular for a newline). In order to get around this, call <code>word.strip()</code> which destroys the unnecessary characters and whitespace at the end. So, when you reach a list of words, execute something like</p>
<pre><code>for i in names:
    i = i.strip()
</code></pre>
<p>You are aware as you said of using sets, however, sets are unordered data types, so when you convert a list to a set(with <code>set(list)</code> and <code>list(set)</code>), and then the set back to a list, the order is lost. However, it is easily restored by a handy python function <code>sorted(list)</code>, that will alphabetically sort the names for you.</p>
<p>It is then trivial to print the list, with something to the effect of</p>
<pre><code>for i in names: #names is your list 
    print(i)
</code></pre>
<p><strong>EDIT: If you aren't familiar with sets, there are more understandable ways, 
for example (this isn't very efficient):</strong></p>
<hr/>
<ol>
<li>Keep an empty list of names to store names you have already seen (<code>seen</code>)</li>
<li><p>Iterate through your list of names, and for each name</p>
<ol>
<li>If the name is in <code>seen</code>, <code>list.pop(name)</code> it from your list of names.</li>
<li>If it is not, add it to <code>seen</code> with <code>seen.append</code></li>
</ol></li>
<li>Print the list!</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Add names to a <code>set</code> and sort it.</p>
<pre><code>names = set()
with open('class_list.txt') as f:
    for line in f:
        if line.strip():
            names.add(line.strip())

print('\n'.join(sorted(names)))
</code></pre>
<ul>
<li>Handles duplicates during insertion</li>
<li>No additional <code>in</code> comparisons required</li>
</ul>
<p>The use of <code>str.strip</code> is to eliminate trailing newlines when lines are read in from the file.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you interpreted <code>str.strip()</code> wrongly. What it does is it removes all white space at the beginning and at the end of the line. What you want to do is something like this</p>
<pre><code>names = []
with open(filename, 'r') as f:
    for line in f:
        if line not in names:
            names.append(line.strip())
for name in names.sort():
    print name
</code></pre>
<p>What this does is it opens a file with names. Then you iterate over each line, each line is a name. You check whether that name has been already seen, if not, then add it to the <code>names</code>. At the end sort the unique names and print them.</p>
</div>
<div class="post-text" itemprop="text">
<p>The best way to remove duplicates is to use a <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer"><code>set</code></a>. This a a collection of elements without duplicates.</p>
<p>For instance, you can store the names like this:</p>
<pre><code>names = set([])
with open(filename, 'r') as f:
    for line in f:
        names.add(line.strip())  # drop the trailing \n
</code></pre>
<p>Then, to sort the list:</p>
<pre><code>names = sorted(names)
</code></pre>
<p>Python language has the concept of <a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">comprehension list</a> (and set).</p>
<p>So, you can simplify the code like this:</p>
<pre><code>with open(filename, 'r') as f:
    names = set(line.strip() for line in f)
names = sorted(names)
</code></pre>
<p>If your names are not only English names and contains non-ASCII characters, you may need to sort with you <a href="https://docs.python.org/3/library/locale.html" rel="nofollow noreferrer">locale</a>. One solution is as follow:</p>
<pre><code>import locale

# this reads the environment and inits the right locale
locale.setlocale(locale.LC_ALL, "")

names = sorted(names, key=locale.strxfrm)
</code></pre>
</div>
<span class="comment-copy">The strip function simply removes any leading/trailing whitespace (including spaces and tabs) and newline characters. Thus, it is how you get the raw string. You will need more logic than simply using <code>strip</code> to accomplish your task</span>
<span class="comment-copy">Do you know how to read data from a TXT file in python? There is a reason for using <code>strip()</code>. Hint: see section 7.2.1 <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/inputoutput.html</a></span>
<span class="comment-copy">I upvoted this answer because you answered OPs question without doing his homework for him.</span>
<span class="comment-copy">Thank you very much for the concept! it helps a lot!</span>
<span class="comment-copy">This doesn't deal with duplicates</span>
<span class="comment-copy">@PokestarFan Do you know that a set can't contain duplicates?</span>
<span class="comment-copy">I did not know that. Thanks</span>
<span class="comment-copy">@campovski I am here, although I'm not <i>from</i> here.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ damn, they brainwash ppl really bad then... Hope you got the joke</span>
<span class="comment-copy">Fixed: <code>names = sorted(names)</code></span>
