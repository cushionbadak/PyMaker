<div class="post-text" itemprop="text">
<p>Say I have a folder named <code>foo</code>. Inside that folder is <code>__init__.py</code>, a folder called <code>test</code>, and another Python file called <code>t1.py</code>. Inside folder <code>test</code> is a Python file called <code>bar.py</code>, and in that file I am trying to do something like:</p>
<pre><code>from foo import t1
</code></pre>
<p>And it gives me this error: </p>
<pre><code>ModuleNotFoundError: No module named 'gmuwork'
</code></pre>
<p>Do I need to add something to environment variables or <code>sys.path</code>?</p>
</div>
<div class="post-text" itemprop="text">
<h2>Absolute import</h2>
<p>If you want to use</p>
<pre><code>from foo import t1
</code></pre>
<p>Then yes, <code>foo</code> must be contained in <code>sys.path</code>.
From the <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>When importing the package, Python searches through the directories on
  sys.path looking for the package subdirectory.</p>
</blockquote>
<p>In that case take a look at questions such as <a href="https://stackoverflow.com/questions/12257747/adding-a-file-path-to-sys-path-in-python">adding a file path to sys.path in python</a>.</p>
<h2>Relative import</h2>
<p>Alternatively inside of <code>bar.py</code> you should be able to use </p>
<pre><code>from ..foo import t1
</code></pre>
<p>as an <a href="https://docs.python.org/3/tutorial/modules.html#intra-package-references" rel="nofollow noreferrer">intra-package reference</a>.</p>
<p>Lastly: either way, you should put another empty <code>__init__.py</code> file inside of <code>test</code> to let Python know that folder is a subpackage.</p>
</div>
<span class="comment-copy">Section 6.4 <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">here</a> should be useful</span>
<span class="comment-copy">@BradSolomon: you're right, and I would say section 6.4.2 specifically, Intra-package References and relative import.</span>
