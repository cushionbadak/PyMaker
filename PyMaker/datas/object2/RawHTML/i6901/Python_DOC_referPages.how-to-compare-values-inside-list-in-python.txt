<div class="post-text" itemprop="text">
<pre><code>def comparenumber(current, previous):
    if current == previous:
      return True
    else:
      return False

def getvalues():
    sorted_list = [[8, 13], [8, 14], [8, 15], [8, 16], [8, 17], [9, 11], [9, 12], [9, 13], [9, 14], [9, 15], [9, 16], [9, 17], [9, 18], [10, 10], [10, 11], [10, 12], [10, 13], [10, 17], [10, 18], [11, 9], [11, 10], [11, 11], [11,17], [11, 18], [12, 8], [12, 9], [12, 10], [12, 16], [12, 17], [13, 7], [13, 8], [13, 9], [13, 16], [14, 7], [14, 8], [14, 15], [15, 7], [15, 8], [15, 13], [15, 14], [16, 8], [16, 9], [16, 10], [16, 11], [16, 12], [16, 13], [16, 14], [16, 15], [17, 14], [17, 15], [17, 16], [18, 15], [18, 16], [19, 15], [19, 16]]
    count = 0
    my_list = []
    column_list = []
    is_same = False

    length = len(sorted_list)

    while count &lt; length:
        current = sorted_list[count + 1][0]
        previous = sorted_list[count + 1 - 1][0]
        is_same = comparenumber(current, previous)
        my_list.append(sorted_list[count][1])
        if is_same == False:
            column_list.append(my_list)
            my_list = []
        count = count + 1
    print(column_list)
</code></pre>
<p>i need to compare the first element of first list with first element of next list and if it returns false. then store it in another list. what i am missing here?</p>
<p>output i am expecting is
    [[13, 14, 15, 16, 17], [11, 12, 13, 14, 15, 16, 17, 18], [10, 11, 12, 13, 
    17, 18], .... ]</p>
</div>
<div class="post-text" itemprop="text">
<p>Use defaultdict(list)</p>
<pre><code>from collections import defaultdict
d_dict = defaultdict(list)
for k,v in sorted_list:
    d_dict[k].append(v)

print ( list( d_dict.values() ) )
</code></pre>
<p>Output:</p>
<pre><code>[[13, 14, 15, 16, 17], [11, 12, 13, 14, 15, 16, 17, 18], [10, 11, 12, 13, 17, 18], [9, 10, 11, 17, 18], [8, 9, 10, 16, 17], [7, 8, 9, 16], [7, 8, 15], [7, 8, 13, 14], [8, 9, 10, 11, 12, 13, 14, 15], [14, 15, 16], [15, 16], [15, 16]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also add only this line: </p>
<pre><code> sorted_list.append([0,0])
</code></pre>
<p>to your code above the <code>length = len(sorted_list)</code>, and then your code will work as you expect.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools</code></a> module:</p>
<pre><code>import itertools

sorted_list = [[8, 13], [8, 14], [8, 15], ...]

def getvalues(pairs):
    column_list = []
    # Group the pairs by their first element
    for key, pairs in itertools.groupby(sorted_list, lambda e: e[0]):
        # Compose a list from the pairs' second elements
        column_list.append([e[1] for e in pairs])

    return column_list
</code></pre>
<p>Then you can call <code>getvalues(sorted_list)</code> which will return your desired output:</p>
<pre><code>[[13, 14, 15, 16, 17], [11, 12, 13, 14, 15, 16, 17, 18], ...]
</code></pre>
</div>
<span class="comment-copy">Unrelated to your problem but so much unnecessary code here: ditch <code>comparenumber</code> stuff and use simply <code>if current != previous:</code> instead of <code>if is_same == False:</code>.</span>
<span class="comment-copy"><code>[[e[1] for e in g] for k, g in itertools.groupby(sorted_list, key=lambda x: x[0])]</code></span>
<span class="comment-copy">@f5r5e5d: That works as well, but it's a tad less readable (and a pretty long line).</span>
