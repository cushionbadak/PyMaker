<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/29507247/ordered-dict-preserve-initial-order">Ordered Dict, preserve initial Order</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I want to count the letter frequency in a string using Dict, sorted in alphabetical order. The output should be a dictionary only.</p>
<p>Here's my attempt.</p>
<pre><code>    s = raw_input()
    arr = {}
    for i in s :
        if i in arr :
            arr[i] += 1
        else :
            arr[i] = 1
    x = sorted(arr.items())
    print dict(x)
</code></pre>
<p>Input :</p>
<pre><code>amphisofttechnologies
</code></pre>
<p>Expected Output :</p>
<pre><code>{'a': 1, 'c': 1, 'e': 2, 'f': 1, 'g': 1, 'h': 2, 'i': 2, 'l': 1, 'm': 1, 'n': 1, 'o': 3, 'p': 1, 's': 2, 't': 2}
</code></pre>
<p>My Output :</p>
<pre><code>{'a': 1, 'c': 1, 'e': 2, 'g': 1, 'f': 1, 'i': 2, 'h': 2, 'm': 1, 'l': 1, 'o': 3, 'n': 1, 'p': 1, 's': 2, 't': 2}
</code></pre>
<p>Kindly point out where I am making the mistake.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python dict explicitly doesn't guarantee/keep order between keys. So what you are asking can't be done.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">OrderedDict</a>.</p>
</div>
<span class="comment-copy">You could use <code>OrderedDict(sorted(Counter(s).items()))</code>.</span>
