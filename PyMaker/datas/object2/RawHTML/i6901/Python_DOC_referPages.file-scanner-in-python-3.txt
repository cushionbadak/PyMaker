<div class="post-text" itemprop="text">
<p>I am learning python atm and in order to do something useful whilst learning, I have created a small plan:</p>
<ol>
<li>Read specific disc drive partition. Outcome: List of directories</li>
<li>Iterate each file within directory and subdirectories. Outcome:  List of files within directories</li>
<li>Read file information: extension Outcome: File extension</li>
<li>Read file information: size  Outcome: Size</li>
<li>Read file information: date created  Outcome: Date</li>
<li>Read file information: date modified Date
Read file information: owner    Outcome:Ownership</li>
</ol>
<p>At step 1 I have tried several approaches, scandir:</p>
<pre><code>import os as os
x = [f.name for f in os.scandir('my_path') if f.is_file()]
with open('write_to_file_path', 'w') as f:
    for row in x:
        print(row)
        f.write("%s\n" % str(row))
f.close()
</code></pre>
<p>and this:</p>
<pre><code>import os as os
rootDir = ('/Users/Ivan/Desktop/revit dynamo/')
for dirName, subdirList, fileList in os.walk(rootDir):
    print('Found directory: %s' % dirName)
for fname in fileList:
    print('\t%s' % fname)
</code></pre>
<p>Though I have hard time writing a result into txt file.</p>
<p>May I ask what would be an ideal approach to make an audit of the specific directories with all relevant information extracted and stored as a table in txt file for now?</p>
<p>P.S.: my first question here, so please do not judge to strictly :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you are learning Python3, I would suggest as an alternative to the low-level path manipulation using <a href="https://docs.python.org/3/library/os.path.html" rel="nofollow noreferrer"><code>os.path</code></a>, you could try <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer"><code>pathlib</code></a>(part of standard library as of Python 3.4):</p>
<pre><code>from pathlib import Path
p = Path(mydir)

#list mydir content
for child in p.iterdir(): 
    print(child)

#Recursive iteration 
for child in p.glob("**/*"):
    if child.is_dir():
        #do dir stuff
    else:
        print(child.suffix) #extension
        print(child.owner())#file owner

        child_info = child.stat()
        #file size, mod time
        print(child_info.size,child_info.st_mtime)
</code></pre>
<p>File creation is platform-dependent, but this <a href="https://stackoverflow.com/a/39501288/5422525">post</a> presents some solutions.</p>
<p>The string of a <code>Path</code> can be accessed as <code>str(p)</code>.</p>
<p>To write to a file using <code>pathlib</code>:</p>
<pre><code>textfile = Path(myfilepath)

#create file if it doesn't exist
textfile.touch()

#open file, write string, then close file
textfile.write_text(mystringtext)
</code></pre>
</div>
<span class="comment-copy">There are many similar questions <a href="https://stackoverflow.com/questions/2104080/how-to-check-file-size-in-python" title="how to check file size in python">stackoverflow.com/questions/2104080/…</a> <a href="https://stackoverflow.com/questions/237079/how-to-get-file-creation-modification-date-times-in-python" title="how to get file creation modification date times in python">stackoverflow.com/questions/237079/…</a>, <a href="https://stackoverflow.com/questions/1830618/how-to-find-the-owner-of-a-file-or-directory-in-python" title="how to find the owner of a file or directory in python">stackoverflow.com/questions/1830618/…</a>, for extension os.path.splitext</span>
<span class="comment-copy">For writng to a file use e.g. the <code>csv</code> module</span>
<span class="comment-copy">Thank you Joe.How would I, for instance, iterate through every single file and get creation date, etc ?</span>
<span class="comment-copy">You just use the list that <code>os.walk</code> or <code>glob</code> (<a href="https://pymotw.com/2/glob/" rel="nofollow noreferrer">pymotw.com/2/glob</a>) returns and iterate through it and pass the file name to the functions I mentioned above.</span>
<span class="comment-copy">Thank you. It seems online tutoriaks are not enough. Woud you please recommend any good py3 book to read?</span>
<span class="comment-copy">@Ivan Baranov I think tutorials can be helpful in getting the basics down. At that point you will be much more capable of phrasing your questions/querys so that you can search for the answers you need.</span>
