<div class="post-text" itemprop="text">
<p>I have this output of code (used keyboard module):</p>
<pre><code>[KeyboardEvent(enter up), KeyboardEvent(h down), KeyboardEvent(h up), KeyboardEvent(e down), KeyboardEvent(e up), KeyboardEvent(y down), KeyboardEvent(y up)]
</code></pre>
<p>How can I remove every 'KeyboardEvent' from this list?</p>
</div>
<div class="post-text" itemprop="text">
<p>How about using <a href="https://github.com/boppreh/keyboard#keyboardeventname%60" rel="nofollow noreferrer"><code>KeyboardEvent.name</code></a>:</p>
<pre><code>newList = [event.name for event in myList]
</code></pre>
<p>To get an even better result you can combine this with <a href="https://github.com/boppreh/keyboard#keyboardeventevent_type" rel="nofollow noreferrer"><code>KeyboardEvent.event_type</code></a>:</p>
<pre><code>newList = [event.name + ' ' + event.event_type for event in myList]
</code></pre>
<hr/>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; myList
[KeyboardEvent(enter up), KeyboardEvent(h down), KeyboardEvent(h up), KeyboardEvent(e down), KeyboardEvent(e up), KeyboardEvent(y down)]

&gt;&gt;&gt; [event.name for event in myList]
['enter', 'h', 'h', 'e', 'e', 'y']

&gt;&gt;&gt; [event.name + ' ' + event.event_type for event in myList]
['enter up', 'h down', 'h up', 'e down', 'e up', 'y down']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a=[KeyboardEvent(enter up), KeyboardEvent(h down), KeyboardEvent(h up), KeyboardEvent(e down), KeyboardEvent(e up), KeyboardEvent(y down), KeyboardEvent(y up)]
a=[elem for elem in a if not isinstance(a, KeyboardEvent)]
</code></pre>
<p>This list comprehesion should work</p>
</div>
<div class="post-text" itemprop="text">
<p>I would try regular expressions</p>
<pre><code>import re

Foo = [KeyboardEvent(enter up), KeyboardEvent(h down), KeyboardEvent(h up), KeyboardEvent(e down), KeyboardEvent(e up), KeyboardEvent(y down), KeyboardEvent(y up)]

strList = []

for item in Foo:
  bar = re.sub('KeyboardEvent(\(.*?)', '', str(item))
  bar = re.sub('\)', '', bar)
  strList.append(bar)

print strList
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try to remove this using a loop:</p>
<pre><code>list = [KeyboardEvent(enter up), KeyboardEvent(h down), KeyboardEvent(h up), KeyboardEvent(e down), KeyboardEvent(e up), KeyboardEvent(y down), KeyboardEvent(y up)]

for x in list:
    del list[str(x)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or you could try this which actually removes the KeyBoard event as a string:</p>
<pre><code>a=[KeyboardEvent(enter up), KeyboardEvent(h down), KeyboardEvent(h up), KeyboardEvent(e down), KeyboardEvent(e up), KeyboardEvent(y down), KeyboardEvent(y up)]
a=[str(elem).strip('KeyboardEvent') for elem in a]
</code></pre>
</div>
<span class="comment-copy">Please be clear about your list elements.  There appear to be no strings in this list; rather they're objects (individual instances of class KeyboardEvent).</span>
<span class="comment-copy">The easiest way is just <code>list = []</code>. Is there a specific event that contains a certain keyboard action (such as "enter up") that you want removed?</span>
<span class="comment-copy">Can't blame you for doing exactly what he asked, but this will produce an empty list, and that is clearly not the goal.</span>
<span class="comment-copy">@ChristianDean I did not know that. Could you explain why?</span>
<span class="comment-copy">@ChristianDean, is this what you wanted?</span>
<span class="comment-copy">@Ajax1234 Sure. It's preferred because <code>instance</code> takes subclasses into account, while <code>type</code> does not. Here's the relevant <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow noreferrer">part from the docs</a>.</span>
<span class="comment-copy">Works fine but i still like @Vin√≠cius Aguiar answer more.Upvote anyway.</span>
<span class="comment-copy">What if it isn't a keyboard event?</span>
<span class="comment-copy">It will still work. It works for deleting anything in a list/array.</span>
<span class="comment-copy">then you may as well use <code>list=[]</code></span>
<span class="comment-copy">True, much simpler.</span>
<span class="comment-copy">It's not recommended to use list as a variable name in Python</span>
<span class="comment-copy">['(enter up), KeyboardEvent(h down), KeyboardEvent(h up), KeyboardEvent(e down), KeyboardEvent(e up), KeyboardEvent(y down), KeyboardEvent(y up)'] , it only removes the first one.</span>
