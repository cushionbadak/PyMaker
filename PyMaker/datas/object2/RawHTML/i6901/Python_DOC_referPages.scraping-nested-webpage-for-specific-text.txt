<div class="post-text" itemprop="text">
<pre><code>&lt;tr id="inmate_201700220865"&gt;
    &lt;td class="row "&gt;3&lt;/td&gt;
    &lt;td class="row "&gt;&lt;a href="javascript:" onclick="getInmatePreview(201700220865)"&gt;View&lt;/a&gt;
    &lt;input type="hidden" id="bookingPhoto_201700220865" value="http://bookings.example.org/201708/20170826.AA8"&gt;
    &lt;input type="hidden" id="bookingPhotoFile_201700220865" value="20170826.AA8"&gt;
    &lt;input type="hidden" id="bookingPhotoFolder_201700220865" value="201708"&gt;
    &lt;input type="hidden" id="bookingPhotoName_201700220865" value="LAST, FIRST LAST"&gt;
    &lt;input type="hidden" id="inmateID_201700220865" value="277497"&gt;
    &lt;input type="hidden" id="index_2" value="201700220865"&gt;
    &lt;input type="hidden" id="curIndex_201700220865" value="2"&gt;&lt;/td&gt;
    &lt;td class="row "&gt;LAST&lt;input type="hidden" id="bookingLastName_201700220865" value="LAST"&gt;&lt;/td&gt;
    &lt;td class="row "&gt;FIRST&lt;input type="hidden" id="bookingFirstName_201700220865" value="FIRST"&gt;&lt;/td&gt;
    &lt;td class="row "&gt;LAST&lt;input type="hidden" id="bookingLastName_201700220865" value="LAST"&gt;&lt;/td&gt;
    &lt;td class="row "&gt;08/26/2017&lt;/td&gt;
    &lt;td class="row "&gt;41&lt;/td&gt;
    &lt;td class="row "&gt;M&lt;/td&gt;
&lt;/tr&gt;
</code></pre>
<p>I am attempting to scrape the last 6 lines of text from this table. I am having difficulty without performing nested loops through Beautiful Soup. I'm sure there is an easier way, but for the record I just need the Last  name, First name, Last name, and the last three lines which are DOB, Age and Gender. Below is my code which returns the entire <code>tr</code>.</p>
<pre><code>from bs4 import BeautifulSoup
from urllib.request import urlopen
import re

#beautiful soup scrape
scraped = urlopen('http://www.example.org/inmates/').read()
soup = BeautifulSoup(scraped, 'html.parser')

for item in soup.find_all('tr',{'id' : re.compile('^inmate') }):
    for name in item ('td',{'class'  : "row alt"}):
        print (item)
</code></pre>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>Find all the <code>tr</code> tags and get the texts using <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#get-text" rel="nofollow noreferrer"><code>get_text()</code></a> method. Then <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>split()</code></a> the text by <code>\n</code> and remove the empty strings using <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter</code></a>. Here you get all the data you need in one line.</p>
<pre><code>from bs4 import BeautifulSoup
from urllib.request import urlopen
import re

#beautiful soup scrape
scraped = urlopen('http://www.example.org/inmates/').read()
soup = BeautifulSoup(scraped, 'html.parser')

for item in soup.find_all('tr', {'id' : re.compile('^inmate')}):
    data = list(filter(None, item.get_text().split('\n')))
    print(data)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>['3', 'View', 'LAST Name', 'FIRST Name', 'LAST Name', '08/26/2017', '41', 'M']
</code></pre>
<p>If you want to remove the first 2 elements then just <code>slice</code> the list</p>
<pre><code>data = list(filter(None, item.get_text().split('\n')))[2:]
</code></pre>
<p><strong>Output</strong></p>
<pre><code>['LAST', 'FIRST', 'LAST', '08/26/2017', '41', 'M']
</code></pre>
</div>
<span class="comment-copy">I haven't checked thus but I'm certain it will work. Thank you.</span>
