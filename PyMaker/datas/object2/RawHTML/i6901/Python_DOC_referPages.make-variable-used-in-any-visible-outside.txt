<div class="post-text" itemprop="text">
<p>How to print the match string outside of the if statement?</p>
<pre><code>strings = ("string1", "string2", "string3")
for line in file:
    if any(s in line for s in strings):
        print "s is:",s
</code></pre>
<p>says:</p>
<pre><code>NameError: global name 's' is not defined
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a generator, and call for the <code>next(..)</code>:</p>
<pre><code>strings = ("string1", "string2", "string3")
for line in file:
    result = <b>next((</b>s for s in strings <b>if s in line),None</b>)
    <b>if result is not None:</b>
        print "s is:",s</code></pre>
<p>Here we use <code>None</code> in the <code>next</code> as a fallback value if no such <code>s</code> can be found that matches and check for <code>None</code>.</p>
<p>Note that this will match only the <em>first</em> of the matches. If there are more, these will not be emited. You can however alter the code by using a <code>for</code> loop:</p>
<pre><code>for line in file:
    <b>for s in strings:</b>
        <b>if s in line:</b>
            print "s is:",s</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As the <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any</code> document</a> says:</p>
<blockquote>
<p>Return <code>True</code> if any element of the iterable is true. If the iterable is
  empty, return <code>False</code>.</p>
</blockquote>
<p>And you can not access the intermediate variable used within <code>any(...)</code> <em>(scope of generator expression)</em> outside the scope of it. </p>
<p>In order to achieve this, you may instead do:</p>
<pre><code>strings = ("string1", "string2", "string3")
existed = None

for line in file:
    for s in strings:
        if s in line:
            existed = s
            break
    if existed:
        print "s is:",s
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You just can't, the variable is declared only inside the generator.
You'll have to add another for loop for that:</p>
<pre class="lang-python prettyprint-override"><code>strings = ("string1", "string2", "string3")
for line in file:
    for s in strings:
        if s in line:
            print "s is:",s
</code></pre>
<p>But you can avoid nesting for loops using <a href="https://docs.python.org/2/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a></p>
</div>
<div class="post-text" itemprop="text">
<p>I agree with @Willem Van Onsem's comments.</p>
<pre><code>strings = ("string1", "string2", "string3")
for line in file:
    result = next((s for s in strings if s in line),None)
    if result is not None:
        print "s is:",result
</code></pre>
</div>
<span class="comment-copy">This is not a use-case for <code>any</code>, just use a loop:</span>
