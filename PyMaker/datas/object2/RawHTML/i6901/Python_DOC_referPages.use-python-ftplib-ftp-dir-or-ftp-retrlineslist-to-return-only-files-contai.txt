<div class="post-text" itemprop="text">
<p>I am accessing a government website from Python 3.6 like this:</p>
<pre><code>from ftplib import FTP
ftp = FTP("somedepartment.gov")
ftp.login()
&gt;&gt;&gt; '230 Anonymous access granted, restrictions apply'

filepath = "/path/to/ftp/folder/"
ftp.cwd(filepath)
&gt;&gt;&gt; '250 CWD command successful'
</code></pre>
<p>Then, I go to list the contents of the directory, both <code>ftp.dir()</code> or <code>ftp.retrlines('LIST')</code> seem to have the same effect, listing out an enormous directory into the Jupyter output. I tried to assign the output of these commands to a variable but it contains nothing, which is anyway in line with the <a href="https://docs.python.org/3/library/ftplib.html#ftplib.FTP.dir" rel="nofollow noreferrer">docs</a>. I just wanted to find the names of a few files containing a certain string, not a huge list. Does anyone know how to accomplish this?</p>
</div>
<div class="post-text" itemprop="text">
<p>In general, there's no other way, than retrieving list of all files and filtering them locally.</p>
<p>See <a href="https://stackoverflow.com/q/43670948/850848">Python: How to get list of file and use wildcard in FTP directory?</a></p>
<hr/>
<p>But many servers support non-standard/proprietary filtering of the listing.</p>
<p>If you are lucky and your FTP server do support this, you can use a file mask to retrieve only a subset of files. In your case the mask would be a simple <code>*</code> pattern, which is supported by most major FTP servers.</p>
<pre><code>ftp.retrlines('LIST *string*')
</code></pre>
<hr/>
<p>For a partial list of supported patterns of common FTP servers, see my answer to <a href="https://stackoverflow.com/q/9282753/850848#28187442">FTP directory partial listing with wildcards</a>.</p>
</div>
<span class="comment-copy">That's a C# question you linked.. Do you know how you would get a wildcard into the Python commands <code>ftp.dir()</code> or <code>ftp.retrlines('LIST')</code>? That might solve it..</span>
<span class="comment-copy">Thanks that worked perfectly. Read under the tab 'ftp', "a well-established protocol for conducting file operations (such as transferring files) over a TCP-based network such as the Internet" which does not sound like just Python, so might look into its docs if I need something else.</span>
