<div class="post-text" itemprop="text">
<p>I'd like to find if a list of substrings is contained in a list. For example, I have:</p>
<pre><code>    string_list = ['item1', 'item2', 'subject3', 'subject4']
</code></pre>
<p>and list of substrings</p>
<pre><code>    substrings = ['item', 'subject']
</code></pre>
<p>I'd like to find if 'item' or 'subject' are included in any item of string_list. Individually, I would do something like:</p>
<pre><code>    any('item' in x for x in string_list)
</code></pre>
<p>This works for one substring but I would like to find a pretty way of searching for both strings in the list of substrings.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>any(y in x for x in string_list for y in substrings)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since the substrings are actually at the start, you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>str.startswith</code></a> which can take a tuple of prefixes:</p>
<pre><code>any(x.startswith(('item', 'subject')) for x in string_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>string_list = ['item1', 'item2', 'subject3', 'subject4']

substrings = ['item', 'subject']

any(any(b in i for b in substrings) for i in string_list)
</code></pre>
<p>Output:</p>
<pre><code>True
</code></pre>
</div>
<span class="comment-copy">You could nest <code>any</code>s, or write a more complex generator expression to create the cross product, or use <code>itertools.product</code> to do it for you.</span>
<span class="comment-copy">What is your expected result?  Do you want matches where the <code>string_list</code> starts with the <code>substring</code> item, or exact matches?</span>
<span class="comment-copy">I'd just like a true or false of whether or not the list of strings contains any of the the strings in the substring list.</span>
