<div class="post-text" itemprop="text">
<p>I am trying to write a file but i am getting the following error: <strong>TypeError: a bytes-like object is required, not 'str'</strong></p>
<pre><code>import requests, pandas
from bs4 import BeautifulSoup

r = requests.get("https://www.basketball-reference.com/players/a/")
c = r.content
soup = BeautifulSoup(c, "html.parser")
full_record_heading = soup.findAll("tr")
full_record = soup.findAll("tr")
playerdata = ""
playerdata_saved = ""
for record in full_record:
    playerdata = ""
    for player in record.findAll("td"):
        playerdata = playerdata +","+player.text
    playerdata_saved = playerdata_saved + playerdata[1:]+("\n")
# print(playerdata_saved)

header="From,To,Pos,Ht,Wt,Birth Date,College"
file=open("Basketball.csv","r+b")
file.write(header)
</code></pre>
<p>Can anyone tell me the reason for the error? How can we know the correct syntax of any command and documentation available? I am new to python</p>
</div>
<div class="post-text" itemprop="text">
<p>When you open a file in python, you must specify its "file mode" - read-only, write-only, read AND write, and if the file is binary. So, in this line:</p>
<pre><code>open("Basketball.csv","r+b")
</code></pre>
<p>You opened your file as READ-ONLY, and set the file to be read as BINARY.
You should have opened the file as:</p>
<pre><code>open("Basketball.csv","w")
</code></pre>
<p>As write and as STRING</p>
<p>Nevertheless, you are manually writting a CSV file - you do not have to do that in Pyhton! Look at this example:</p>
<pre><code>import requests
import pandas  # Always import in different lines
from bs4 import BeautifulSoup

r = requests.get("https://www.basketball-reference.com/players/a/")
c = r.content
soup = BeautifulSoup(c, "html.parser")
full_record_heading = soup.findAll("tr")
full_record = soup.findAll("tr")

# Initialize your data buffer
my_data = []

# For each observation in your data source
for record in full_record:
    # We extract a row of data
    observation = record.findAll("td")
    # Format the row as a dictionary - a "python hashmap"
    dict_observation = {
        "From": observation[0],
        "To": observation[1],
        "Pos": observation[2],
        "Ht": observation[3],
        "Wt": observation[4],
        "Birth Date": observation[5],
        "College": observation[6]
    }
    # Add the row to our DataFrame buffer
    my_data.append(dict_observation)
# Now our DataFrame buffer contains all our data.
# We can format it as a Pandas DataFrame
dataframe = pandas.DataFrame().from_dict(my_data)

# Pandas DataFrames can be turned into CSVs seamlessly. Like:
dataframe.to_csv("Basketball.csv", index=False)

# Or even MS Excel:
dataframe.to_excel("Basketball.xlsx")
</code></pre>
<p>Use python data structures as often as you can!</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to write bytes you have to make it like below</p>
<pre><code>file.write(bytes(header, encoding="UTF-8"))
</code></pre>
</div>
<span class="comment-copy">try <code>file=open("Basketball.csv","w")</code> instead of <code>file=open("Basketball.csv","r+b")</code></span>
<span class="comment-copy">Note: <b>always</b> include a generic [python] tag with <i>any</i> Python question. Include version specific tags optionally.</span>
<span class="comment-copy">and <b>always</b> include the <b>full traceback</b> starting from the line <code>Traceback (most recent call last):</code> and up to the exception line, into the question itself.</span>
<span class="comment-copy">The documentation you're looking for is <a href="https://docs.python.org/3/library/io.html" rel="nofollow noreferrer">here</a>.</span>
<span class="comment-copy">also <code>csv</code> documentation tells us to add <code>newline=''</code> to avoid issues.</span>
