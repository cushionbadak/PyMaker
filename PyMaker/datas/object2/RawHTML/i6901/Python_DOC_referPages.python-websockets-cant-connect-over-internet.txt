<div class="post-text" itemprop="text">
<p>I'm just trying to get a very basic websocket connection over internet. The code seems fine - because it works when connecting to localhost - but for some reason fails when I try to use it over the internet. I'm using the <a href="https://pypi.python.org/pypi/websockets" rel="nofollow noreferrer">websockets</a> library, and my server looks like this:</p>
<pre><code>#!/usr/bin/env python3

import asyncio
import websockets
from logging import getLogger, INFO, StreamHandler

logger = getLogger('websockets')
logger.setLevel(INFO)
logger.addHandler(StreamHandler())

clients = set()

async def handler(websocket, path):
    global clients
    clients.add(websocket)
    try:
        await asyncio.wait([ws.send("Hello!") for ws in clients])
        await asyncio.sleep(10)
    finally:
        clients.remove(websocket)

start_server = websockets.serve(handler, host='127.0.0.1', port=6969)

asyncio.get_event_loop().run_until_complete(start_server)
asyncio.get_event_loop().run_forever()
</code></pre>
<p>and the client looks like this:</p>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Chat&lt;/title&gt;
&lt;/head&gt;

&lt;body style="margin:0"&gt;
    &lt;script type="text/javascript"&gt;
        var ws = new WebSocket("ws://127.0.0.1:6969/");
        var messages = document.getElementById('messages');
        ws.onmessage = function (event) {
            var messages = document.getElementById('messages');
            var message = document.createElement('li');
            var content = document.createTextNode(event.data);
            message.appendChild(content);
            messages.appendChild(message);
        };
    &lt;/script&gt;
    Messages:
    &lt;ul id="messages"&gt;&lt;li&gt;Hello!&lt;/li&gt;&lt;/ul&gt;


&lt;/body&gt;&lt;/html&gt;
</code></pre>
<p>So the issue is that the client above works fine, until I run the server on my Ubuntu machine (and I've made sure to forward port 6969 to that machine) and try to connect over the internet. Hostname resolution is working fine, because I can <code>ssh</code> in to start the server, but trying to connect to the websocket always shows me the error message:</p>
<p><code>Firefox can’t establish a connection to the server at ws://&lt;remote server url&gt;:6969/.</code></p>
<p>or similiar for other browsers. Also, in case anyone was wondering, the logger isn't outputting anything useful (since the connection is failing the server isn't doing anything).</p>
</div>
<div class="post-text" itemprop="text">
<p>Your line:</p>
<pre><code>websockets.serve(handler, host='127.0.0.1', port=6969)
</code></pre>
<p>provides a specific address on which the websockets server listens. Your server will <em>only</em> listen on that address; any requests to any other address will never be seen.</p>
<p>From <a href="https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.create_server" rel="nofollow noreferrer">https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.create_server</a> :</p>
<blockquote>
<p>The <code>host</code> parameter can be a string, in that case the TCP server is bound to <code>host</code> and <code>port</code>. The host parameter can also be a sequence of strings and in that case the TCP server is bound to all hosts of the sequence. If <code>host</code> is an empty string or <code>None</code>, all interfaces are assumed and a list of multiple sockets will be returned (most likely one for IPv4 and another one for IPv6).</p>
</blockquote>
<p>You have bound your webserver to <code>127.0.0.1</code>, which is a special address that only ever refers to the local machine. This address is also known as <code>localhost</code>. No other machine can ever connect to your <code>localhost</code>.</p>
<p>The solution is to provide an empty string or <code>None</code> (the default value). In this case, your web server will listen for requests sent to any address.</p>
<pre><code>websockets.serve(handler, port=6969)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>WS server that sends messages at random intervals</h1>
<p>import asyncio
import datetime
import random
import websockets</p>
<p>async def time(websocket, path):
    while True:
        now = datetime.datetime.utcnow().isoformat() + 'Z'
        await websocket.send(now)
        await asyncio.sleep(random.random() * 3)</p>
<p>start_server = websockets.serve(time, '127.0.0.1', 6969)</p>
<p>asyncio.get_event_loop().run_until_complete(start_server)
asyncio.get_event_loop().run_forever()</p>
<p>try this this will defnetly work</p>
</div>
<span class="comment-copy">on the server I don't change any code, the only difference is when it's running on the remote server I change the line <code>var ws = new Websocket("ws://127.0.0.1:6969/");</code> to <code>var ws = new Websocket("ws://&lt;remote server url&gt;:6969/");</code> on the client.</span>
<span class="comment-copy">the <code>telnet</code> command properly resolves the IP address and attempts to connect but then says "connection refused". Also, if you could edit your comment to remove the url I'd appreciate it; I'm not ready for everyone to pentest me just yet :P (I'll edit it out of the question too - whoops)</span>
<span class="comment-copy">Change your <code>websockets.serve()</code> line to this: <code>websockets.serve(handler, port=6969)</code>. That should work equally well in either environment.</span>
<span class="comment-copy">@Robᵩ I changed it to <code>websockets.serve(handler, host="", port=6969)</code> and now I can connect. If you wanna write an answer, I'd be happy to accept it, and I'd also appreciate an explanation of why what I did won't work.</span>
