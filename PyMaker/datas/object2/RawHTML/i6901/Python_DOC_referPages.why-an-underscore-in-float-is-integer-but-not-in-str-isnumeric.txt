<div class="post-text" itemprop="text">
<p>It appears that <a href="https://docs.python.org/3/library/stdtypes.html#float.is_integer" rel="nofollow noreferrer"><code>float.is_integer</code></a> is the only "is" method with an underscore in its name among built-in types in Python. <a href="https://docs.python.org/3/library/stdtypes.html#str.isalnum" rel="nofollow noreferrer">Examples that don't</a> include an underscore: <code>str.isalnum</code>, <code>str.isalpha</code>, <code>str.isdecimal</code>, <code>str.isdigit</code>, <code>str.isidentifier</code>, <code>str.islower</code>, <code>str.isnumeric</code>, <code>str.isprintable</code>, <code>str.isspace</code>, <code>str.istitle</code>, <code>str.isupper</code>.</p>
<p>Any clues as to why?</p>
<p>By <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">PEP 8</a>, I would expect all these names to include an underscore. But practicality beats purity (<a href="https://www.python.org/dev/peps/pep-0020/" rel="nofollow noreferrer">PEP 20</a>), so omitting the underscore in frequently used and short names makes sense. However, both naming conventions at once seems as a consequence of backward compatibility (with the <code>logging</code> module as the canonical example).</p>
</div>
<div class="post-text" itemprop="text">
<p>A <a href="https://bugs.python.org/issue29088" rel="nofollow noreferrer">similar question</a> has been asked on the Python bug tracker:</p>
<blockquote>
<p>Compare <code>isinstance</code>, <code>issubclass</code>, and <code>islower</code> to <code>is_integer</code>, <code>is_fifo</code>, and <code>is_enabled</code>. In Python 3.6, of all the names in the standard library starting with <code>is</code>, I count 69 names with the underscore and 91 without. It seems better to pick one way or the other and stick with it. I would recommend using the underscore, for legibility.</p>
</blockquote>
<p>And the answer (from R. David Murray, a Python core developer) there was:</p>
<blockquote>
<p>Yep, that would be nice.  But Python has evolved over time, and we must maintain backward compatibility.  The names are what they are.</p>
</blockquote>
<p>Given the numbers in the question it seems like <code>is_integer</code> is not the only method with an underscore.</p>
</div>
<span class="comment-copy">Maybe because <code>float.is_integer</code> is a more recent addition (as of 2.6), long after PEP8 has been established? The <code>str</code> apis were probably there since the beginning and were not changed due to compatibility reasons (though it probably could have in 3). <code>float.fromhex</code> could also potentially be renamed, I'm sure there's more cases to be found throughout the standard types.</span>
