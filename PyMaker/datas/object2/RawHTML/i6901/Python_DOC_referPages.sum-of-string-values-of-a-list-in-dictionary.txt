<div class="post-text" itemprop="text">
<p>I am having trouble deriving the overall sum of string values.
While I am able to generate the following if there are in integers form:</p>
<pre><code>size = {
    'serverA' : [10, 10],
    'serverB' : [3, 3, 3],
}
</code></pre>
<p>If I used <code>sums = {k: sum(i for i in v if isinstance(i, int)) for k, v in size.items()}</code>, I will be able to get output such as <code>{'serverA': 20, 'serverB': 9}</code></p>
<p>However, instead of having integers in the values of the list, I got string as follows:</p>
<pre><code>size = {
    'serverA' : ['10', '10'],
    'serverB' : ['3', '3', '3'],
}
</code></pre>
<p>And if I used the same command to generate the sum of values, while there are no errors, the sums are clearly wrong in which the output is <code>{'serverA': 0, 'serverB': 0}</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>map()</code> to map the values to <code>int</code>s:</p>
<pre><code>&gt;&gt;&gt; {k: sum(map(int, v)) for k, v in size.items()}
{'serverA': 20, 'serverB': 9}
</code></pre>
<p>Note: if you have values that aren't integers this will raise a <code>ValueError</code> exception.<br/>
Don't really understand why you had the <code>isintance(i, int)</code> in your base case. </p>
</div>
<div class="post-text" itemprop="text">
<p>Simply use <code>int(integer_string)</code></p>
<pre><code>sums = {k: sum(int(i) for i in v) for k, v in size.items()}
</code></pre>
<p>Also, keep in mind using <code>isinstance</code> is typically considered an antipattern. If you want type checking check out <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer">Python 3.6 type annotations</a> or use a different language.</p>
</div>
<span class="comment-copy">Can't beat this ;-)</span>
