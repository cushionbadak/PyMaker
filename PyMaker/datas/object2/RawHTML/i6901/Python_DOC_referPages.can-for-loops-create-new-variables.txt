<div class="post-text" itemprop="text">
<p>I came across this problem online and used it on visualizer to see how this works. It looks to me that a new variable called guess was created using the for loop.</p>
<p>Question: Did the for loop create a new variable called "guess"? If not, how was the value of guess utilized outside the loop in the if/else statement?</p>
<pre><code>cube = 8

for guess in range(cube+1):
    if guess**3 &gt;= abs(cube):
        break
if guess**3 != abs(cube):
    print(cube, "is not a perfect cube")
else:
    if cube &lt; 0:
        guess = -guess
    print("The cube root of", str(cube), "is", str(guess))
</code></pre>
<p>I'd highly appreciate some feedback on this. Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>Python formally acknowledges that the names defined as for loop targets (a more formally rigorous name for "index variables") leak into the enclosing function scope. </p>
<p>The official word
The Python reference documentation explicitly documents this behavior in the <a href="https://docs.python.org/dev/reference/compound_stmts.html#for" rel="nofollow noreferrer">section on for loops</a></p>
<blockquote>
<p>The for-loop makes assignments to the variables(s) in the target list. [...] Names in the target list are not deleted when the loop is finished, but if the sequence is empty, they will not have been assigned to at all by the loop.</p>
</blockquote>
<p><a href="http://eli.thegreenplace.net/2015/the-scope-of-index-variables-in-pythons-for-loops/" rel="nofollow noreferrer">Read More Here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/reference/compound_stmts.html#the-for-statement" rel="nofollow noreferrer">doc</a>:</p>
<blockquote>
<p>Names in the target list are not deleted when the loop is finished,
  but if the sequence is empty, they will not have been assigned to at
  all by the loop.</p>
</blockquote>
<p>So yes, the for loop create a new variable.</p>
<p>The only case in which <code>guess</code> will not be created is in case that the sequence by which the for loop iterate is empty, e.g.</p>
<pre><code>&gt;&gt;&gt; for abcde in []: pass
... 
&gt;&gt;&gt; abcde
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'abcde' is not defined
</code></pre>
<p>as the opposite of:</p>
<pre><code>&gt;&gt;&gt; for abcde in [1]: pass
... 
&gt;&gt;&gt; abcde
1
</code></pre>
</div>
<span class="comment-copy">outside the loop, <code>guess</code> is the last value calculated before the loop ends (or breaks)</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/10563613/does-python-officially-support-reusing-a-loop-variable-after-the-loop" title="does python officially support reusing a loop variable after the loop">stackoverflow.com/questions/10563613/â€¦</a> and <a href="https://stackoverflow.com/questions/3611760/scoping-in-python-for-loops" title="scoping in python for loops">stackoverflow.com/questions/3611760/scoping-in-python-for-loops</a></span>
