<div class="post-text" itemprop="text">
<p>I have a bit of code that calculates pay / overtime pay based on the hours worked in a week. There are two if statements that calculate the pay for week1 and week2. What I am trying to do is then calculate the total pay which is the pay for the results of the week1 if statement plus the results of the week2 if statement, but I'm struggling. I'm probably making this much more difficult than it needs to be. </p>
<p>I'm using a Jupyter Notebook where each of the chunks below are in a separate cell. The results of the first if statement = 440 the second if statement = 473. The desired result is to combine these so that the output is 913.</p>
<p>Any help or suggestions are greatly appreciated!</p>
<pre><code>rate = 11
week1 = 40 
week2 = 42

if week1 &lt;= 40:
    print((rate * week1))
else:
    print((week1 - 40)*(rate * 1.5) + (40 * rate))

if week2 &lt;= 40:
    print(rate * week2)
else:
    print((week2 - 40)*(rate * 1.5) + (40 * rate))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>if week1 &lt;= 40:
    #print((rate * week1))  # Not necessary, unless you need to print separate weekly pays as well.
    pay = rate * week1
else:
    #print((week1 - 40)*(rate * 1.5) + (40 * rate))
    pay = (week1 - 40)*(rate * 1.5) + (40 * rate)

if week2 &lt;= 40:
    #print(rate * week2)
    pay += rate * week2
else:
    #print((week2 - 40)*(rate * 1.5) + (40 * rate))
    pay = (week2 - 40)*(rate * 1.5) + (40 * rate)
print(pay)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>rate = 11;
week1 = 40;
week2 = 42;

if week1 &lt;= 40 and week2 &lt;= 40:
    print((rate * week1)+(rate * week2))
else:
    print("For Week1: ", (week1 - 40) * (rate * 1.5) + (40 * rate))
    print("For Week2: ", (week2 - 40) * (rate * 1.5) + (40 * rate))
    print("Total is: ", ((week1 - 40) * (rate * 1.5) + (40 * rate) + (week2 - 40) * (rate * 1.5) + (40 * rate)))
</code></pre>
<p>You can use variables too.</p>
</div>
<div class="post-text" itemprop="text">
<p>After writing my initial answer, I though of a completely different one I think is better. You can use the <code>max</code> and <code>min</code> functions to make sure you don't add negative overtime.</p>
<pre><code>rate = 11
week1 = 40 
week2 = 42

week1_pay = max(week1 - 40, 0)*(rate * 1.5) + (min(week1, 40) * rate)
week2_pay = max(week2 - 40, 0)*(rate * 1.5) + (min(week2, 40) * rate)

print(week1_pay)
print(week2_pay)
print(week1_pay + week2_pay)
</code></pre>
<p>This works by finding whichever is larger: <code>weekX - 40</code> or <code>0</code> and multiplying it by <code>rate * 1.5</code>. This will be zero if there was fewer than 40 hours. It then finds the smaller of <code>weekX</code> and <code>40</code> and multiplies that by <code>rate</code> to find the standard pay and adds it to the overtime pay.</p>
<h1>Min and max docs:</h1>
<p><a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#max</a>
<a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#min</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a slightly more advanced feature called the ternary operator to do this:</p>
<pre><code>rate = 11
week1 = 40 
week2 = 42

week1_pay = rate * week1 if week1 &lt;=40 else (week1 - 40)*(rate * 1.5) + (40 * rate))
week2_pay = rate * week2 if week2 &lt;=40 else (week2 - 40)*(rate * 1.5) + (40 * rate))

print(week1_pay)
print(week2_pay)
print(week1_pay + week2_pay)
</code></pre>
<p>This operator works very much like how it sounds when you read the code out loud. That is: variable x is equal to some value if some condition is true, else variable x is equal to some other value.</p>
<p>In a more simple example we can use:</p>
<pre><code>number = 45
pos_or_neg = "negative" if number &lt; 0 else "positive"
</code></pre>
<p>In this example <code>pos_or_neg</code> would evaluate to <code>"positive"</code> because 45 &gt;= 0.</p>
<h1>Ternary Help:</h1>
<p><a href="https://stackoverflow.com/questions/394809/does-python-have-a-ternary-conditional-operator">Does Python have a ternary conditional operator?</a>
<a href="https://docs.python.org/3.3/faq/programming.html#is-there-an-equivalent-of-c-s-ternary-operator" rel="nofollow noreferrer">https://docs.python.org/3.3/faq/programming.html#is-there-an-equivalent-of-c-s-ternary-operator</a></p>
</div>
<span class="comment-copy">store your calculation results in variables instead of merely printing them.</span>
<span class="comment-copy">Make those identical if/else blocks functions that return the result, instead of just printing it. Then it should be trivial, or else I don't see what's the problem.</span>
<span class="comment-copy">Thank you all for your help. I used the max / min option listed below and it worked perfectly. I like the ternary operator, in fact, that might be easier to dissect.</span>
