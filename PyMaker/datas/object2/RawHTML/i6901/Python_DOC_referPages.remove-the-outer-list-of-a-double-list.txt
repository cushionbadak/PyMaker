<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/33161448/getting-only-element-from-a-single-element-list-in-python">Getting only element from a single-element list in Python?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Let's say i have a list that consist of:</p>
<pre><code>[['a','b','c','d']]
</code></pre>
<p>Is there an easy way to remove the outer list so the output would be</p>
<pre><code>['a','b','c','d']
</code></pre>
<p>I figured something like pop, but that remove the element, and i just want to remove the outer list.</p>
<p>I know i could iterate over the double list and append the elements to a new list, and the problem would be solved, but im not happy with that solution, i want a smoother one with cleaner code.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use unpacking:</p>
<pre><code>[new_list] = [['a','b','c','d']]
print(new_list)
</code></pre>
<p>Output:</p>
<pre><code>['a','b','c','d']
</code></pre>
</div>
<span class="comment-copy">"I figured something like pop, but that remove the element, and i just want to remove the outer list." what would be the difference?</span>
<span class="comment-copy">While it's probably not useful for most cases, there is a way to <i>directly</i> rewrite the existing <code>list</code> without the nesting, rather than extracting it, so other references to the <code>list</code> are modified as well. <code>mylist[:] = mylist[0]</code> would replace the contents of <code>mylist</code> with the contents of the nested list without changing the identity of <code>mylist</code>.</span>
<span class="comment-copy">what happens if there is more than one item in the list?</span>
<span class="comment-copy">@Rajez it depends on what the OP is trying to achieve. <code>itertools</code> works for nested lists; however, if the OP just has a single list, this one of the "cleanest" solutions.</span>
<span class="comment-copy">You can use with itertools.chain <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer">docs.python.org/3/library/itertools.html#itertools.chain</a></span>
<span class="comment-copy">@Ajax1234 Hmm yes, It is neat for single list..</span>
