<div class="post-text" itemprop="text">
<p>I have a JSON object like this below. Actually huge JSON file, simplified to ask this question.</p>
<pre><code>"header": {
        "headerAttributes": {
            "pageCount": 5,
            "totalCount": 5
        }
    },
"payload": [
    {
        "firstKey": [
                {
                    "nestedKey_1": "1",
                    "nestedKey_2": "2"
                },
                {
                    "nestedKey_3": "3",
                    "nestedKey_4": "4"
                }
            ]
    }
]
</code></pre>
<p>Now I wrote below python code to access values inside []. </p>
<pre><code>Total_Orders_Count = json_response ['header']['headerAttributes']['totalCount']
for i in range(0,Total_Orders_Count): 
            dict = json_response ['payload'][i]
            inner_dict = dict ['firstKey'] [0]
            print inner_dict ['nestedKey_1'] + '(' + inner_dict['nestedKey_2'] + ')'
</code></pre>
<p>The above code works fine. However, the usage of dict ['firstKey'] [0] doesn't work for values more than 1. </p>
<p>Two Questions.
1. Is there a better way to access Key values inside []. 
2. Can we find length of number of values inside []. For this list, length of values under "firstKey" is 2.</p>
<p>Any help is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just loop over the lists <em>directly</em>. There is no need to know a length up front:</p>
<pre><code>for d in json_response ['payload']:
    for inner_dict in d['firstKey']:
        print '{0[nestedKey_1]}({0]nestedKey_2})'.format(inner_dict)
</code></pre>
<p>The <code>for &lt;name&gt; in &lt;listobject&gt;</code> loop is a <a href="https://en.wikipedia.org/wiki/Foreach_loop" rel="nofollow noreferrer"><em>for each</em> construct</a>; no indices are generated. Instead, the loop assigns each element from the list to the target name.</p>
<p>I changed the name <code>dict</code> to <code>d</code> to avoid masking the built-in type. I also used <a href="https://docs.python.org/2/library/stdtypes.html#str.format" rel="nofollow noreferrer">string formatting</a> to put the values from the inner dictionary into a string.</p>
<p>Note that I dropped using the <code>totalCount</code> key altogether. There is no need to look at that value here.</p>
<p>As for finding the length of a list, just use the <a href="https://docs.python.org/3/library/functions.html#len" rel="nofollow noreferrer"><code>len()</code> function</a>. Again, there is no need to use that function <em>here</em>, iteration directly over the list removes the need to generate indices up front.</p>
</div>
<div class="post-text" itemprop="text">
<p>In the JSON you provided, there is only one element in the outer list of payload. But the code tries to access the first 5 elements of that list, which don't exist.</p>
<p>Try to avoid using direct access to values in a list like this <code>di['key']</code>, instead use 'di.get('key','default')`, unless you are sure it exists.</p>
<p>To loop through the keys-values and get the length of values under 'firstKey', use the following code:</p>
<pre><code>for payload in json_response.get('payload',[]) :
    # Length of values under firstKey
    print(len(payload.get('firstKey',[])))
    # To access nested Keys
    for i in payload.get('firstKey',[]) :
        for k,v in i.items() :
            print(k,':',v)
</code></pre>
</div>
<span class="comment-copy">"the usage of dict ['firstKey'] [0] doesn't work for values more than 1" ? what do you mean?</span>
<span class="comment-copy">also don't call your variable <code>dict</code></span>
<span class="comment-copy"><code>len(json_response['payload'][i]['firstKey'])</code></span>
<span class="comment-copy">@barmar Thanks for this to get the length</span>
