<div class="post-text" itemprop="text">
<p>I am trying to filter duplicate occurrence of number from the input string
If the string contains duplicate characters then it must print "Not a valid number , if the input is without duplicate characters it must print "Valid Number"
What is the correct way to check the duplicate occurrence</p>
<pre><code>input_number = raw_input("Please input the number:")
print type(input_number)
if (int(sorted(input_number))):
    print "Not a valid number"
else:
    print "Valid number"
</code></pre>
<p>I am getting the below error:</p>
<pre><code>TypeError: int() argument must be a string or a number, not 'list'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Convert to a <code>set</code> and measure its size.</p>
<pre><code>if len(set(input_number)) != len(input_number):
    print "Not a valid number"
else:
    print "Valid number"
</code></pre>
<p>If a string contains duplicates, converting it to its <code>set</code> equivalent will cause a reduction in size, so the <code>set</code> will not be of the same size as the <code>str</code>ing.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>sorted()</code> returns a list and <code>int()</code> cannot take list as an argument. To accomplish what you want to do (check if input contains duplicates) is to do </p>
<pre><code>set(input_number)
</code></pre>
<p>Then check if the size of set is equal to <code>len(input_number)</code>, you get the size of set simply by <code>len(set(input_number))</code>. If yes, all characters are unique. If not, some characters repeated and got cut off, because <code>set()</code> is like a set in mathematics, it only contains unique elements. So if not all the elements in <code>input_number</code> are unique, then the size of set would be smaller.</p>
<p>Whole code would be something like this:</p>
<pre><code>input_number = raw_input()
if len(input_number) == len(set(input_number)):
    print "Valid number"
else:
    print "Not a valid number"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To get duplicate items in list</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; 
&gt;&gt;&gt; st = "12456432"
&gt;&gt;&gt; 
&gt;&gt;&gt; [item for item, count in Counter(st).items() if count &gt; 1]
['2', '4']
&gt;&gt;&gt; 
</code></pre>
<p>For you <strong>Solution 1</strong></p>
<pre><code>&gt;&gt;&gt; if len([item for item, count in Counter(st).items() if count &gt; 1]) &gt; 0:
...     print "invaild"
... else: 
...     print "vaild"
... 
invaild
&gt;&gt;&gt; 
</code></pre>
<p>Another <strong>solution 2</strong> </p>
<p>List has count method it returns no of any string exist in list</p>
<pre><code>&gt;&gt;&gt; for item in st:
...     if st.count(item) &gt; 1:
...         print "invailed"
...         break
...     else:
...         print "vailed"
... 
vailed
invailed
</code></pre>
</div>
<span class="comment-copy">the output of the sorted method is a list not an integer '(sorted(input_number))' and int take a string as argument</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted()</code></a> returns a list, no matter what the type of the original sequence was.</span>
<span class="comment-copy">What exactly is your question: the cause of the error, or a correct way to check for duplicate characters?</span>
