<div class="post-text" itemprop="text">
<p>I am trying to get a python project working in Ubuntu 17, but I'm having trouble with module loading. I've been able to isolate the problem with a trivial example. This example works in Windows 10, but not in Ubuntu. Help getting this to work would be greatly appreciated!</p>
<p>Here are the steps I am following:</p>
<p>First I create a project directory called code_playground in ~/dev. Next I create a virtualenv for this project: </p>
<pre><code>~/dev$ which virtualenv
/usr/local/bin/virtualenv

~/dev$ virtualenv -p python3.6 code_playground/
Running virtualenv with interpreter /usr/bin/python3.6
Using base prefix '/usr'
New python executable in /home/user/dev/code_playground/bin/python3.6
Also creating executable in /home/user/dev/code_playground/bin/python
Installing setuptools, pip, wheel...done.
</code></pre>
<p>I activate the virtual environment:</p>
<pre><code>~/dev/code_playground$ source ./bin/activate
(code_playground) ~/dev/code_playground$ 
</code></pre>
<p>It seems to work:</p>
<pre><code>(code_playground) ~/dev/code_playground$ which python
/home/user/dev/code_playground/bin/python
</code></pre>
<p>I create a file called mod_a.py with a simple function in it:</p>
<pre><code>def print_name(name):
    print('Your name is {0}'.format(name))
</code></pre>
<p>Now I create a subdirectory called sub : </p>
<pre><code>(code playground) ~/dev/code_playground$ mkdir sub
(code playground) ~/dev/code_playground$ cd sub
(code playground) ~/dev/code_playground/sub$ 
</code></pre>
<p>Inside sub, I create a file called mod_b.py with these contents:</p>
<pre><code>from mod_a import print_name

print_name('Joe')
</code></pre>
<p>I try to run mod_b.py, but I get an error:</p>
<pre><code>(code playground) ~/dev/code_playground/sub$ python mod_b.py 
Traceback (most recent call last):
   File "mod_b.py", line 1, in &lt;module&gt;
      from mod_a import print_name
ImportError: No module named mod_a
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The Python interpreter has to know where to find <code>module_a.py</code>. The fact that the file that is importing the module <code>module_a.py</code> is in a sub-directory for the directory where <code>module_a.py</code> exist, "is not a thing that help much". You can try few things:</p>
<p>1- Add your <code>mod_a.py</code> path (before the script run) to your Python's path as suggested by @CristiFati.</p>
<p>2- Add your <code>mod_a.py</code> path (using Python code) to your Python's path doing something like (nasty one):</p>
<pre><code>import
sys.path.insert(0, '/home/user/dev/code_playground/bin/python')
from mod_a import print_name
...
</code></pre>
<p>3- Evaluate relative imports (<a href="https://docs.python.org/3/tutorial/modules.html#intra-package-references" rel="nofollow noreferrer">6.4.2. Intra-package References</a>)</p>
</div>
<span class="comment-copy">Add  <code>import sys</code> and <code>print(sys.path)</code> at the begining of your script... and check the paths. But, most likely you'll have to <code>export PYTHONPATH=~/dev/code_playground:${PYTHONPATH}</code>, before starting <i>python</i>.</span>
<span class="comment-copy">Thank you @CrisiFati. That does fix the problem. I wonder, do you have any insight as to why this is needed in Linux, but works without it in Windows? After virtualenv, but before setting the PYTHONPATH variable, here is what I get for sys.path from mod_b.py:      <code>['/home/user/dev/code_playground/sub',      '/home/user/dev/code_playground/lib/python36.zip',      '/home/user/dev/code_playground/lib/python3.6',      '/home/user/dev/code_playground/lib/python3.6/lib-dynload',      '/usr/lib/python3.6',      '/home/user/dev/code_playground/lib/python3.6/site-packages']</code></span>
<span class="comment-copy">I just noticed that in Windows, the code_playground directory is included in sys.path after running virtualenv, without having to set PYTHONPATH. However, this is not the case in Linux. I guess that's why it works in Windows. @CristiFati (or anyone else), do you happen to have any insight as to why that is?</span>
<span class="comment-copy">You should <code>print(sys.path)</code> in <i>Win</i> as well. Are you sure you followed the same steps on both <i>OS</i>es? Note there are some small differences regarding paths for <i>Python</i> between <i>Win</i> and <i>Ux</i>. Also, <i>VEnv</i> might have smth to do with it.</span>
