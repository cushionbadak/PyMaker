<div class="post-text" itemprop="text">
<p>Trying to load a temporary file into a pandas dataframe and throwing an error.  Not sure how to get the parsed data from the temp file into a dataframe to use later on.</p>
<pre><code>line = []
for x in readMe:
    line.append(" ".join(x.split()))
 with tempfile.NamedTemporaryFile() as temp:
    for i in line:
        " ".join(i.split(None))
        temp.write("%s\n" % i)
    df = pd.read_csv(temp.name, sep=' ', names=curves, skiprows=dataStart, header=None)
</code></pre>
<p>Traceback (most recent call last):
File "C:/LAS Load.py", line 42, in 
...
       return func(*args, **kwargs) 
TypeError: a bytes-like object is required, not 'str'</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you wanted to prepend 'file://' to temp.name. After un-indenting the <code>df</code> assignment by two tab stops. The <code>i.split(None)</code> is odd, it seems just like <code>[i]</code>, and <code>' '.join([i])</code> has no side effects. Maybe another copy-n-paste hiccup?</p>
</div>
<div class="post-text" itemprop="text">
<p>You didn't show us what <code>readMe</code> contains, in particular what type it causes <code>i</code> to have. If possible, would you please run this under python3? If not, show us some details like <code>type(i)</code>, and do a trivial <code>temp.write('hello')</code> so it's clear the file descriptor is writable. It's still not obvious what side effects line 41 has:</p>
<pre><code>        " ".join(i.split(None))
</code></pre>
<p>The '%s' % i is essentially taking str(i). Perhaps what we're looking for is <code>i.encode('utf8')</code>, or passing in a <a href="https://docs.python.org/3/library/tempfile.html" rel="nofollow noreferrer">temp file encoding</a>.</p>
</div>
<span class="comment-copy">You recently un-indented by a single tab stop, so now we see <code>for</code> and <code>df =</code> under the <code>with</code>. The trouble with this is that you really want to exit the <code>with</code> first, so it has a chance to <code>close()</code> the temp file descriptor, before attempting to <code>read_csv()</code> that file.</span>
<span class="comment-copy">I believe the tempfile will be deleted and inaccessable to anything outside of it's with statement?</span>
<span class="comment-copy">Alternatively, you might pass in the open <code>temp</code> descriptor instead of <code>temp.name</code>. Not sure if you need to <code>fseek</code> to the front of it first.</span>
<span class="comment-copy">Oh. I guess I usually make up '/tmp/foo' names on my own. Yes, you're right, it will be gone and inaccessible. So my concern is whether the <code>write()</code> is buffered at all, do we want to flush or close?</span>
<span class="comment-copy">I considered that route.  However the program errors before I can get that far, it throws an error on line 42 which is the "temp.write("%s\n" % i)" command</span>
