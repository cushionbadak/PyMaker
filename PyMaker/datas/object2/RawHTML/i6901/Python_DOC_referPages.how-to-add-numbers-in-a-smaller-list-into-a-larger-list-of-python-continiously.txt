<div class="post-text" itemprop="text">
<p>I'm trying to build a poly-alphabetic cipher but I can't find a way of adding a smaller list into a larger list, I have tried with list comprehensions, but still cannot do it. Please help! I want the smaller list to keep adding the same numbers to the larger list</p>
<p>so lets say I have 2 lists like this:</p>
<pre><code>x = [1,2,3]
y = [4,5,6,7,8,9]
z = [i + j for i,j in zip(x,y)]
</code></pre>
<p>the result is the following</p>
<pre><code>print(z)
[5,7,9]
</code></pre>
<p>how can I make it so it is:</p>
<pre><code>[5,7,9,8,10,12]
</code></pre>
<p>meaning it keeps adding the same numbers to the longer list,
thank you for the help</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="noreferrer"><code>itertools.cycle</code></a> to loop back through <code>x</code> as needed</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; x = [1,2,3]
&gt;&gt;&gt; y = [4,5,6,7,8,9]
&gt;&gt;&gt; z = [i + j for i, j in zip(itertools.cycle(x), y)]
&gt;&gt;&gt; z
[5, 7, 9, 8, 10, 12]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is the simplest way, I think: 
<code>z = [y[i] + x[i % len(x)] for i in range(len(y))]</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>x = [1,2,3]
y = [4,5,6,7,8,9]
z=[a+b for a,b in zip((x*(int(len(y)/len(x))))[:len(y)],y)]
</code></pre>
<p>How about this with zip</p>
</div>
<span class="comment-copy">That's because <code>zip</code> function stops on the shortest iterator. Because your first list has 3 elements, it would stop after 3 iterations.  You can find an answer here - <a href="https://stackoverflow.com/a/1277311/840582">stackoverflow.com/a/1277311/840582</a></span>
<span class="comment-copy">@Vinny The link you shared does not solve this problem. This question wants to loop back and re-use the values again, that link shows how to pad out default values after the end of the shorter list.</span>
<span class="comment-copy">You're right, my bad. I missed that part of re-iterate values.</span>
<span class="comment-copy">Thank you! that worked perfectly</span>
