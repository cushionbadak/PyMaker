<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7378091/taking-multiple-inputs-from-user-in-python">Taking multiple inputs from user in python</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/1588058/read-two-variables-in-a-single-line-with-python">Read two variables in a single line with Python</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I need to create a script that calculates the distance between two coordinates. The issue I'm having though is when I assign the coordinate to object one, it is stored as a string and am unable to convert it to a list or integer/float. How can I convert this into either a list or integer/float? The script and error I get is below. </p>
<hr/>
<p>Script:</p>
<pre><code>one=input("Enter an x,y coordinate.")
Enter an x,y coordinate. 1,7

int(1,7)

Traceback (most recent call last):

  File "&lt;ipython-input-76-67de81c91c02&gt;", line 1, in &lt;module&gt;
    int(1,7)
  TypeError: int() can't convert non-string with explicit base
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to convert the entered string to int/float by first splitting the string into the point components, then casting to the appropriate type:</p>
<pre><code>x, y = map(float, one.split(','))
</code></pre>
<p>To keep the entered values as a single custom datatype, named <code>Point</code> for example, you can use a <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer"><code>namedtuple</code></a>:</p>
<pre><code>from collections import namedtuple

Point = namedtuple('Point', 'x, y')
</code></pre>
<hr/>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; from collections import namedtuple
&gt;&gt;&gt; Point = namedtuple('Point', 'x, y')
&gt;&gt;&gt; Point(*map(float, '1, 2'.split(',')))
Point(x=1.0, y=2.0)
&gt;&gt;&gt; _.x, _.y
(1.0, 2.0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Convert the input into the specific type as int or float</p>
<p>Into a list:</p>
<pre><code>_list = list(map(int, input("Enter an x,y coordinate.").split(",")))
</code></pre>
<p>or into variables:</p>
<pre><code>a, b = map(int, input("Enter an x,y coordinate.").split(","))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>After this <code>one=input("Enter an x,y coordinate.")</code> the variable <strong>one</strong> contains a string that looks like this <code>'x, y'</code> which cannot be converted to <code>int</code> as is. </p>
<p>You need to first split the string using <code>str.split(',')</code> which will yield a list <code>[x,y]</code> then you can iterate through the list and convert each of <code>x</code> and <code>y</code> to <code>int</code> using <code>map</code> which applies the <code>int(..)</code> function to every element of the list <code>[x, y]</code>. </p>
<p>In code, you can do it as follows:</p>
<pre><code>one=input("Enter an x,y coordinate.")
x, y = map(int, one.split(','))
</code></pre>
<p>As a side note, you should consider wrapping the user input with a <code>try .. except</code> clause to handle the case where a user inserts non-int input: </p>
<pre><code>try: 
    one=input("Enter an x,y coordinate.")
    x, y = map(int, one.split(','))
except Exception as e: 
    print("Please provide a valid input")
</code></pre>
</div>
<span class="comment-copy"><code>x,y = map(int, input("Enter an x,y coordinate.").split(","))</code> ?</span>
<span class="comment-copy">Python docs are great. So <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer"><code>int()</code></a> is a built in function which when 2 arguments are given, the second argument is the base.</span>
<span class="comment-copy">Thanks for mentioning <code>namedtuple</code> - that's probably more appropriate!</span>
