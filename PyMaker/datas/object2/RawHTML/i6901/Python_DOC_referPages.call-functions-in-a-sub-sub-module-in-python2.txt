<div class="post-text" itemprop="text">
<p>This is legal in Python3.</p>
<pre><code>import keras
keras.preprocessing.sequence.pad_sequences(...)
</code></pre>
<p>But I have to change it to this for it to work in Python2.</p>
<pre><code>from keras.preprocessing import sequence
sequence.pad_sequences(...)
</code></pre>
<p>Is there something wrong with Keras or is this a new feature in Python3?</p>
<p>This question has not been asked before to my best knowledge. Sorry if this is a dumb question but I don't really know what key words I should use to search for this...</p>
</div>
<div class="post-text" itemprop="text">
<p>This is something that depends on the module. If the submodule's name is included in <code>__all__</code> in the module's <code>__init__.py</code>, you'll be able to access it in the way you expect. You can see how <code>__all__</code> works in my answer <a href="https://stackoverflow.com/a/45774712/3496038">here</a>. Or read <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">the documentation on packages</a>:</p>
<blockquote>
<p>The <code>import</code> statement uses the following convention: if a package’s <code>__init__.py</code> code defines a list named <code>__all__</code>, it is taken to be the list of module names that should be imported when <code>from package import *</code> is encountered. It is up to the package author to keep this list up-to-date when a new version of the package is released. Package authors may also decide not to support it, if they don’t see a use for importing * from their package.</p>
</blockquote>
<p>In the case of <code>keras</code>, it seems that the module's <code>__init__.py</code> either: </p>
<ul>
<li>does not define <code>__all__</code></li>
<li>does not include <code>preprocessing</code> in <code>__all__</code></li>
</ul>
</div>
<span class="comment-copy">This is not my experience when using Keras. In Python 2 your first example works as expected, and in the source, while Keras does not define <code>__all__</code> it does explicitly import it's submodules explicitly - which is the other mechanism outlined in the documentation @ZachGates linked to. What version of keras are you using (I'm on 2.0.8) - perhaps an older version does not do the explicit imports in <code>__init__</code>?</span>
<span class="comment-copy">I was using 2.0.2 but it seems the <code>__init__.py</code> hasn't been changed since then. <a href="https://github.com/fchollet/keras/blame/master/keras/__init__.py#L10" rel="nofollow noreferrer">Here</a></span>
<span class="comment-copy">Are you using a virtual environment? Also is there a folder in your working directory called keras?</span>
<span class="comment-copy">Yes exactly! My folder is named keras. That's why I'm having this problem. Thank you and sorry for the delayed response!</span>
<span class="comment-copy">But why is this different in 2 and 3?</span>
