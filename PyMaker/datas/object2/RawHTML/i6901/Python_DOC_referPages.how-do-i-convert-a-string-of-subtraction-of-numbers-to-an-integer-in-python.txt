<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2371436/evaluating-a-mathematical-expression-in-a-string">Evaluating a mathematical expression in a string</a>
<span class="question-originals-answer-count">
                    14 answers
                </span>
</li>
</ul>
</div>
<p>So, I know how to convert basic strings into integers, but how does one convert a string of subtraction (or any other mathematical function)? This doesn't work:</p>
<pre><code>str_a = '10-5'
b = 3
c = int(str_a) + b
ValueError: invalid literal for int() with base 10: '10-5'
</code></pre>
<p>So how can I make it to work? c must be equal to 8.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval()</code></a> to evaluate <code>str_a</code> as the following:</p>
<pre><code>import ast

str_a = '10-5'
c = ast.literal_eval(str_a) + 3
print(c)
str_a = '10+5-2' # you can use any operation not just subtraction and you can add as many numbers as you want
c = ast.literal_eval(str_a) + 2
print(c)
</code></pre>
<p>Output:</p>
<pre><code>8
15
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use regex:</p>
<pre><code>import re

str_a = '10-5'
vals = map(int, re.split("\W+", str_a))
new_value = vals[0] - vals[-1] + 3
</code></pre>
<p>Output:</p>
<pre><code>8
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the builtin <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split</code></a>.</p>
<pre><code>str_a = '10-5'
left, right = str_a.split('-')
b = 3
c = (int(left) - int(right)) + b
</code></pre>
<p>Or use the <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast</code></a> module:</p>
<pre><code>import ast
str_a = '10-5'
b = 3
c = ast.literal_eval(str_a) + b
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Get them with a simple regular expression and then sum them up:</p>
<pre><code>import re

str_a = '10-5'
rx = re.compile(r'[+-]?\d+')

a = sum([int(match.group(0)) for match in rx.finditer(str_a)])

b = 3
c = b + a
print(c)
# 8
</code></pre>
<p>Note that there are no security measurements yet (i.e. a float number won't work) - you'll need to precise your requirements here.</p>
</div>
<span class="comment-copy"><code>ast.literal_eval('10-5') + b</code></span>
