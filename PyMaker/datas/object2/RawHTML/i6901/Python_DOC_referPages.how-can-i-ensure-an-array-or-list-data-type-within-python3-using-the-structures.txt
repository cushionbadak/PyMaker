<div class="post-text" itemprop="text">
<p>I am playing around with the structures 2.0.2 package to create data structures in Python3.  If I write the following code it will ensure that the variable <code>i</code> is an Integer when defined at a later time.</p>
<pre><code>from structures import *
class S(Structure):
    i = Integer

Test = S()
Test.i = 4
print (Test.i)
Test.i = 4.18
print (Test.i)
Test.i = 'A string'
print (Test.i)
</code></pre>
<p>This will yield 4 for the first two print statements and an error for the third because I tried to change the data type to something that could not be rounded to the correct data type.</p>
<p>However, lets say I want the variable <code>i</code> to be a list or a bumpy array populated only with integers.  I try the following;</p>
<pre><code>Test.i = [45,37.8,14.3]
</code></pre>
<p>and I get an error telling me that I cannot turn the variable <code>i</code> into a list.  If I try the following;</p>
<pre><code>from structures import *
class S(Structure):
    i = [Integer]

Test.i = [45,37.8,14.3]
</code></pre>
<p>The code will execute and create a list, but the values are not constrained to an integer.  How can I get the structures package to constrain the data types within lists and bumpy arrays to a static type?</p>
</div>
<div class="post-text" itemprop="text">
<p>That is not possible using structures. You will have to build your own <a href="http://zzzsochi.github.io/structures/types.html#building-custom-types" rel="nofollow noreferrer">custom type</a>. The list type just do a list() cast before assigning the value, so if you want beside do a list cast do an int cast to each item of the list, you will have to implement it ;)</p>
</div>
<span class="comment-copy">The library you're using was last updated 3 years back and as far as I can tell it doesn't support your requirement.  Either move on to a similar library that is actively developed and supports similar functionality or use static analyzers like <a href="http://mypy.readthedocs.io/" rel="nofollow noreferrer">Mypy</a> for this. For Mypy you could define it as <code>List[int]</code>, where <code>List</code> is from <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer"><code>typing</code> module</a>.</span>
