<div class="post-text" itemprop="text">
<p>I have a list of lists as below.
a = [[1,2,3], [2,3,4], [3,4,5]]</p>
<p>I also have a separate list of names
names = ['Ann', 'john', 'smith']</p>
<p>Now I want to write this into a csv file as below</p>
<pre><code>1st row: Ann,1,2,3
2nd row: john,2,3,4
3rd row: smith,3,4,5
</code></pre>
<p>I am currently using;</p>
<pre><code>with open(output_file, 'w') as f:
        writer = csv.writer(f)
        writer.writerows(a)
</code></pre>
<p>However, it does not do the job I want as it always starts from the first column, instead of the second column. Please help me. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open(output_file, 'w') as f:
   f.write('\n'.join([elem[0]+','+str(elem[1]).strip('[').strip(']') for elem in zip(names,a)]))
</code></pre>
<p>Try this.</p>
</div>
<div class="post-text" itemprop="text">
<p>The key point to understand here is that you want to process your list <em>in parallel</em>. This can easily be accomplished by using the built-in function <code>zip</code>. It takes an list of iterables, and yields the <em>n</em>-th element of each iterable as a tuple. You can then format your lines by using <code>str.format</code>:</p>
<pre><code>names = ['Ann', 'john', 'smith']
sublists = [[1,2,3], [2,3,4], [3,4,5]]

with open(output_file, 'w') as file:
    for name, sublist in zip(names, sublists):
        row = '{},{},{},{}'.format(name, *sublist)
        file.write(row)
</code></pre>
<p>Note if your lists are different sizes, you may want to look into using <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><code>itertools.zip_longest</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open("output_file", 'w') as f:
    f.write("\n".join([','.join(map(str, [name] + extra)) for name, extra in zip(name, extras)])
</code></pre>
</div>
