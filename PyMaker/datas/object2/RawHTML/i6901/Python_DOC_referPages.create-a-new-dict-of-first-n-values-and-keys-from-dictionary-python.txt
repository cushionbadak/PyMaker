<div class="post-text" itemprop="text">
<p>I have a dictionary:</p>
<pre><code>{'my_account': [45010045, 43527907, 45147474, 35108100, 45159973],
 'your_account': [38966628, 28171579, 39573751, 41359842, 42445236],
 'his_account': [44822460, 45010045, 39276850, 39896128, 45265335]
}
</code></pre>
<p>I want to keep the first 2 elements of every key, so the result would look like:</p>
<pre><code>{'my_account': [45010045, 43527907],
 'your_account': [38966628, 28171579],
 'his_account': [44822460, 45010045]
}
</code></pre>
<p>Is there any way to achieve this? Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>using dictionary comprehension</p>
<pre><code>my_dict = {'my_account': [45010045, 43527907, 45147474, 35108100, 45159973],
 'your_account': [38966628, 28171579, 39573751, 41359842, 42445236],
 'his_account': [44822460, 45010045, 39276850, 39896128, 45265335]
}

new_dict = {k:v[:2] for k,v in my_dict.items()}
# {'my_account': [45010045, 43527907], 'your_account': [38966628, 28171579], 'his_account': [44822460, 45010045]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just slice-delete the values.</p>
<pre><code>for v in D.itervalues():
  del v[2:]
</code></pre>
</div>
<span class="comment-copy">Yes -- it should be a pretty straight forward dictionary comprehension with some list slicing... Is there something that you're having trouble with specifically?</span>
<span class="comment-copy">It is easy you can accomplish that by take function like that: take(n, d.iteritems())</span>
<span class="comment-copy">@FadySaad Neither Python 2 nor Python 3 has a built-in function <code>take</code>. The easiest way to accompligh this task is with a dictionary comprehension with slicing <code>{k: v[:2] for k, v in d.items()}</code></span>
<span class="comment-copy">@ Patrick Haugh python3 itertools has a take function and here is the link <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">itertools</a></span>
<span class="comment-copy">@PatrickHaugh I originally tried take function, but it does not work as I use Python 2. Dictionary comprehension with slicing (also suggested by @mgilson) works perfectly. Thanks.</span>
