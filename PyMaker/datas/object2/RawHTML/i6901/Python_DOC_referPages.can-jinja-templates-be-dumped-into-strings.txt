<div class="post-text" itemprop="text">
<p>I looked up dump in the Jinja2 API:</p>
<blockquote>
<p>Dump the complete stream into a file or file-like object. Per default unicode strings are written, if you want to encode before writing specify an encoding.</p>
</blockquote>
<p>I am unable to find a file-like object that I could dump back into a string. Does anyone know a workaround for this?</p>
<p>Edit: I normally put the output in a file--but in a separate case I am appending the output to an e-mail.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure why you are looking at the streaming API for templates. Just render the template directly. From the <a href="http://jinja.pocoo.org/docs/2.9/api/#basics" rel="nofollow noreferrer"><em>Basics</em> section</a> of the API documentation:</p>
<blockquote>
<p>To render it with some variables, just call the <code>render()</code> method:</p>
<pre><code>print template.render(the='variables', go='here')
</code></pre>
</blockquote>
<p>The method returns a Unicode string. From the <a href="http://jinja.pocoo.org/docs/2.9/api/#jinja2.Template.render" rel="nofollow noreferrer"><code>Template.render()</code> documentation</a>:</p>
<blockquote>
<p>This will return the rendered template as unicode string.</p>
</blockquote>
<p>The <code>.dump()</code> method only applies to <a href="http://jinja.pocoo.org/docs/2.9/api/#jinja2.environment.TemplateStream" rel="nofollow noreferrer"><em>template streams</em></a>, objects produced by the <a href="http://jinja.pocoo.org/docs/2.9/api/#jinja2.Template.stream" rel="nofollow noreferrer"><code>Template.stream()</code> method</a>; you shouldn't need to worry about those when all you wanted was a single string.</p>
<p>Even so, if you wanted a string from a stream, just join the chunks:</p>
<pre><code>template_stream = template_obj.stream()
rendered = ''.join(template_stream)
</code></pre>
<p>Last but not least, if you still need an in-memory file object, look no further than <a href="https://docs.python.org/3/library/io.html#io.StringIO" rel="nofollow noreferrer"><code>io.StringIO()</code></a>:</p>
<pre><code>import io

fileobj = io.StringIO()
template_stream = template_obj.stream()
template_stream.dump(fileobj)
rendered = fileobj.getvalue()
</code></pre>
<p>Internally, <code>.dump()</code> is implemented as a loop over <code>self</code>, writing each chunk to the file object.</p>
</div>
<span class="comment-copy">Calling <code>.render()</code> returns a string.</span>
<span class="comment-copy">(And the standard python file-like object that writes to a string is called <a href="https://docs.python.org/3/library/io.html#io.StringIO" rel="nofollow noreferrer">StringIO</a>.)</span>
<span class="comment-copy">template engines are made to produce strings!</span>
<span class="comment-copy">When you have something in your <code>Template()</code> object that is causing an error, it'd be nice to be able to see the string before it is rendered. It's the call to <code>.render()</code> that raises the error.</span>
<span class="comment-copy">Thank you, I was missing file.get_model() as an argument for render.</span>
