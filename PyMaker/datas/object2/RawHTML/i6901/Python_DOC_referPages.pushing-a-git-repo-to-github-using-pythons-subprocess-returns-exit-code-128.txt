<div class="post-text" itemprop="text">
<p>I'm currently trying to write a module of my own for using git. For this reason I would like to avoid using GitPython. </p>
<p>My code for pushing at the moment is as follows:</p>
<pre><code>class Git(object):
    def __call_git(self,*args):
        a = [self.path+"git"] + list(args)
        return subprocess.check_output(a,stdin=subprocess.PIPE)
    def push(self,username,password,remote="origin",branch="master"):
        url = self.__call_git("remote","get-url",remote).replace("\n","")
        url = "".join(["https://",username,":",password,"@",url[8:]])
        output = self.__call_git("push","--repo",url,branch)
        return output
</code></pre>
<p>This tries to push to git by executing the command <code>git push --repo https://username:password@github.com/repo.git</code> to avoid having to work with stdin to pass the username and password to git. This works on the command line, but whenever I try running this code, I get the following output:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;pyshell#81&gt;", line 1, in &lt;module&gt;
    g.push("username","password")
  File "/home/git.py", line 68, in push
    output = self.__call_git("push","--repo",url,branch)
  File "/home/git.py", line 37, in __call_git
    return subprocess.check_output(a,stdin=subprocess.PIPE)
  File "/usr/lib/python2.7/subprocess.py", line 574, in check_output
    raise CalledProcessError(retcode, cmd, output=output)
CalledProcessError: Command '['git', 'push', '--repo', 'https://username:password@github.com/repo.git', 'master']' returned non-zero exit status 128
</code></pre>
<p>Git seems to react this way whenever the <code>push</code> command is involved, even for something like <code>git push</code>. Using something like <code>subprocess.Popen</code> and setting <code>stdin=PIPE,stdout=PIPE,stderr=PIPE</code>, <code>process.poll()</code> still gives 128 and <code>process.stdout.read()</code> gives nothing.</p>
<p>Can anyone explain why this is happening, and provide a solution to my problem?</p>
<p>---EDIT---</p>
<p>Following some advice from <a href="https://github.com/git-lfs/git-lfs/issues/1598" rel="nofollow noreferrer">here</a>, I've run a bunch of git commands with <code>GIT_TRACE=1</code>. I've seen that <code>git push</code> is the only command that I am using so far that has a <code>trace: run_command</code> line.</p>
<pre><code>19:57:21.694468 run-command.c:334       trace: run_command: 'git-remote-https'
</code></pre>
<p>This makes me suspect the cause may lie in something else from the link above.</p>
<blockquote>
<p>I cannot run <code>git push origin master</code> from subprocess, even with the environment. I think it has to do with a race condition created by the lfs pre-push hook. Subprocess calls <code>git push</code>, <code>git push</code> calls <code>git lfs</code>, <code>git push</code> ends before lfs or lfs kills the stdout/return code. Git push works normally in the command line, so one would think that invoking it through suprocess would work the same, since the module literally sends the same commands to a shell environment.</p>
</blockquote>
<p>While the issue does not lie in lfs for me, perhaps it lies in that call to <code>git-remote-https</code>? </p>
</div>
<div class="post-text" itemprop="text">
<p>When I've had problems with running git using subprocess I've had to add <code>shell=True</code> to my subprocess function call.In your case:</p>
<p><code>subprocess.check_output(...other args, shell=True)</code></p>
<p>You may want to read the security considerations found in the subprocess docs before you do that though.</p>
<p><a href="https://docs.python.org/3/library/subprocess.html#security-considerations" rel="nofollow noreferrer">Subprocess Security Considerations</a></p>
</div>
<span class="comment-copy">128 is a very common error code with git and can mean everything. You should grab the output of the process  and print it.</span>
<span class="comment-copy">@KlausD. I tried that and got no output at all. Even if using something like <code>subprocess.Popen</code> and setting <code>stdin=PIPE,stdout=PIPE,stderr=PIPE</code>, <code>process.poll()</code> gives 128 and <code>process.stdout.read()</code> gives nothing. I'll add this information into the question.</span>
<span class="comment-copy">Try <code>subprocess.check_output()</code>.</span>
<span class="comment-copy">@KlausD. that is what I'm using in the code I put in the question; it produces no output and just gives an error because git exits with code 128.</span>
<span class="comment-copy">Is there any special character in the password? If yes, try and percent-encode it: <a href="https://en.wikipedia.org/wiki/Percent-encoding#Character_data" rel="nofollow noreferrer">en.wikipedia.org/wiki/Percent-encoding#Character_data</a></span>
<span class="comment-copy">I believe this just makes arguments that're space separated work -- it would just allow me to switch from a list to a string.</span>
<span class="comment-copy">You are correct, and switching from a list to a string solved some problems for me. However, I was writing an internal tool where I control the commands being passed in to subprocess. Admittedly, this might not work well for you. Sorry I couldn't be of more help!</span>
