<div class="post-text" itemprop="text">
<p>Why do <a href="https://docs.python.org/3.6/library/stdtypes.html#set" rel="nofollow noreferrer">set</a> operations work with arbitrary iterables when using set methods, but not operators? To show what I mean:</p>
<pre><code>&gt;&gt;&gt; {0, 1, 2, 3}.intersection([0, 1])
{0, 1}
&gt;&gt;&gt; {0, 1, 2, 3} &amp; [0, 1]
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: unsupported operand type(s) for &amp;: 'set' and 'list'
&gt;&gt;&gt;
&gt;&gt;&gt; {0, 1, 2, 3}.union([4, 5])
{0, 1, 2, 3, 4, 5}
&gt;&gt;&gt; {0, 1, 2, 3} | [4, 5]
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: unsupported operand type(s) for |: 'set' and 'list'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3.6/library/stdtypes.html#set" rel="noreferrer">docs</a>:</p>
<blockquote>
<p>Note, the non-operator versions of <code>union()</code>, <code>intersection()</code>, <code>difference()</code>, and <code>symmetric_difference()</code>, <code>issubset()</code>, and <code>issuperset()</code> methods will accept any iterable as an argument. In contrast, their operator based counterparts require their arguments to be sets. <strong>This precludes error-prone constructions like <code>set('abc') &amp; 'cbs'</code> in favor of the more readable <code>set('abc').intersection('cbs')</code>.</strong></p>
</blockquote>
<p>It was considered less error-prone this way.</p>
</div>
<span class="comment-copy">Are you asking why the Python developers designed <code>set</code> that way or do you just want a link to where this behavior appears in the documentation?  (It's here: <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.copy" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#frozenset.copy</a>)</span>
<span class="comment-copy">It looks like I never reached that part of the documentation.</span>
