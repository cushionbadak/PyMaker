<div class="post-text" itemprop="text">
<p>Python's <a href="https://docs.python.org/3/library/inspect.html" rel="nofollow noreferrer"><code>inspect</code></a> module doesn't seem to be able to inspect the signatures of "built-in" functions, which include functions defined in C extension modules, like those defined by Cython. Is there any way to get the signature of a Python function you have defined in such a module, and specifically in Cython? I am looking to be able to find the available keyword arguments.</p>
<p>MWE:</p>
<pre><code># mwe.pyx
def example(a, b=None):                                                                                                                                                       
    pass       
</code></pre>
<p>and</p>
<pre><code>import pyximport; pyximport.install()                                                                                                                                         
import mwe                                                                                                                                                                    
import inspect                                                                                                                                                                

inspect.signature(mwe.example)   
</code></pre>
<p>yields:</p>
<pre><code>Traceback (most recent call last):                                                                                                                                           
  File "mwe_py.py", line 5, in &lt;module&gt;                                                                                                                                      
    inspect.signature(mwe.example)                                                                                                                                           
  File "/nix/store/134l79vxb91w8mhxxkj6kb5llf7dmwpm-python3-3.4.5/lib/python3.4/inspect.py", line 2063, in signature                                                         
    return _signature_internal(obj)                                                                                                                                          
  File "/nix/store/134l79vxb91w8mhxxkj6kb5llf7dmwpm-python3-3.4.5/lib/python3.4/inspect.py", line 1965, in _signature_internal                                               
    skip_bound_arg=skip_bound_arg)                                                                                                                                           
  File "/nix/store/134l79vxb91w8mhxxkj6kb5llf7dmwpm-python3-3.4.5/lib/python3.4/inspect.py", line 1890, in _signature_from_builtin                                           
    raise ValueError("no signature found for builtin {!r}".format(func))                                                                                                     
ValueError: no signature found for builtin &lt;built-in function example&gt;    
</code></pre>
<p>In Python 3.4.5 and Cython 0.24.1</p>
</div>
<div class="post-text" itemprop="text">
<p>I've retracted my duplicate suggestion (saying that it was impossible...) having investigated further. It seems to work fine with reasonably recent versions of Cython (v0.23.4) and Python 3.4.4.</p>
<pre><code>import cython
import inspect
scope = cython.inline("""def f(a,*args,b=False): pass """)
print(inspect.getfullargspec(scope['f']))
</code></pre>
<p>gives the output</p>
<blockquote>
<p><code>FullArgSpec(args=['a'], varargs='args', varkw=None, defaults=None, kwonlyargs=['b'], kwonlydefaults={'b': False}, annotations={})</code></p>
</blockquote>
<hr/>
<p>Also mentioned in <a href="http://cython.readthedocs.io/en/latest/src/reference/compilation.html#compiler-directives" rel="nofollow noreferrer">the documentation is the compilation option "<code>binding</code>"</a> which apparently makes this detail more accessible (although I didn't need it).</p>
<hr/>
<p>I have a feeling that this may depend on improvements to <code>inspect</code> made relatively recently (possibly <a href="http://bugs.python.org/issue17481" rel="nofollow noreferrer">this fix</a>) so if you're using Python 2 you're probably out of luck.</p>
<hr/>
<p><strong>Edit:</strong> your example works if you using the <code>binding</code> compilation option:</p>
<pre><code>import cython
@cython.binding(True)
def example(a, b=None):                                                                                                                                                       
    pass
</code></pre>
<p>I suspect that <code>inline</code> adds it automatically (but the code to do <code>inline</code> is sufficiently convoluted that I can't find proof of that either way). You can also set it as a file-level option.</p>
</div>
<span class="comment-copy">Why shouldn't it be possible? <code>inspect.signature(all)</code> (for example to extract the signature of <a href="https://docs.python.org/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a>) works great <code>&lt;Signature (iterable, /)&gt;</code>. Please provide an <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> so that answers can actually show you how to do it in <i>your case</i>.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/11343191/python-inspect-getargspec-with-built-in-function">Python inspect.getargspec with built-in function</a></span>
<span class="comment-copy">Also relevant: <a href="https://stackoverflow.com/questions/1104823/python-c-extension-method-signatures-for-documentation" title="python c extension method signatures for documentation">stackoverflow.com/questions/1104823/â€¦</a></span>
<span class="comment-copy">@DavidW Thanks, I have seen these answers, but had wondered if Cython adds some magic to make this work. Sorry, probably should have included in the question</span>
<span class="comment-copy">@MSeifert I have updated with an MWE. If you voted -1, would you mind reversing?</span>
<span class="comment-copy">Thanks David, I have updated the question with an MWE, doesn't seem to work with an import as opposed to inline function.</span>
<span class="comment-copy">@Gilly See edit - it's just a case of making sure you use <code>binding</code></span>
<span class="comment-copy">Thanks a heap! Exactly what I was looking for.</span>
<span class="comment-copy"><code>getfullargspec</code> and <code>signature</code> don't seem to get the keyword arguments correctly for <code>cdef</code> class methods, though they do for <code>pyx</code> module functions. The keyword arguments appear as if they are positional arguments. These functions do get the names of arguments correctly for module functions.</span>
<span class="comment-copy">@IoannisFilippidis I was just about to tell you that it might be worth filling a bug, but it looks like you've already done that...</span>
