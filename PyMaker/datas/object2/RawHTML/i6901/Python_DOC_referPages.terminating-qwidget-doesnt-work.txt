<div class="post-text" itemprop="text">
<p>I used <code>self.close</code> to close the widget that is running. Whole code is as follows:</p>
<pre><code>class timeTracker(QWidget):
        '''time tracker main application v_0.8'''
    def __init__(self, parent=None):
        super(timeTracker, self).__init__(parent)
        self.grid = QGridLayout()
        self.setLayout(self.grid)

        while not self.connectivity():
            print(self.connectivity())
            ret = QMessageBox.warning(self, "Not connected to network. Please check the connection", "", QMessageBox.Yes | QMessageBox.No, QMessageBox.Yes)
            if ret == QMessageBox.No:
                self.close()
                qApp.quit()
                break
            qApp.quit()
        # self.time_widget = timeline.timeWidget()
        # self.grid.addWidget(self.time_widget, 0, 0)


    def connectivity(self):
        try:
            urllib.request.urlopen("http://www.google.com", timeout=1)
            return True
        except urllib.error.URLError as error:
            return False

if __name__ == "__main__":
    application = QApplication(sys.argv)
    main_widget = timeTracker()
    main_widget.show()
    main_widget.move(10, 10)
    sys.exit(application.exec_())
</code></pre>
<p>What I expect from this code is, as long as the connectivity function is returning True, user will be repeatedly asked to do the certain action if they click yes. If they click no, I would like to terminate the whole widget. But when I click no, then it just goes through the lines after the self.close. What can I do to actually terminate the program?</p>
</div>
<div class="post-text" itemprop="text">
<p>To close an application forcefully as in this case we can use <a href="https://docs.python.org/3/library/sys.html#sys.exit" rel="nofollow noreferrer"><code>sys.exit()</code></a></p>
<pre><code>if ret == QMessageBox.No:
    sys.exit(0)
</code></pre>
</div>
<span class="comment-copy">what is <code>check_function()</code>?</span>
<span class="comment-copy">Blocking loops are not user friendly for GUI design, there are other options like using QTimers. But with the code you provide it is impossible to help you.</span>
<span class="comment-copy">@eyllanesc <code>check_function()</code> actually checks the network connection, and clicking yes will check the network, and if connected, emit <code>False</code> and progress to the next codes. But clicking no, therefore executing self.close() is not closing the application running.</span>
<span class="comment-copy">If you do that task, I recommend creating a QThread that performs this task, and emit some signal by doing the task of displaying the warning in the main thread. If you show that function I could put the appropriate code.</span>
<span class="comment-copy">@eyllanesc I've uploaded my whole codes, and I'll take a look at the QThread. Thanks in advance!</span>
