<div class="post-text" itemprop="text">
<p>I am trying to predict whether a person is suffering from a disease or not. By passing inputs through the HTML page and able to predict the value but can't print the accuracy on an HTML page.Error="TypeError: Expected sequence or array-like, got ".Below is my code.please can some help where the problem occurred</p>
<pre><code>    from flask import Flask, redirect, url_for, request, render_template
    import numpy as np
    import pandas as pd
    from sklearn.ensemble import GradientBoostingClassifier,RandomForestClassifier
    from sklearn.model_selection import train_test_split
    from sklearn.metrics import accuracy_score,precision_score,recall_score,auc,roc_curve

    app = Flask(__name__)

    Data = pd.read_csv('data\\new_heart.csv')
    y = Data['target']
    Data.drop("target", axis=1, inplace=True)
    X = Data

    x_train, x_test, y_train, y_test = train_test_split(X, y, random_state=42)

    Model = GradientBoostingClassifier(verbose=1, learning_rate=0.5,warm_start=True)
    Model.fit(x_train, y_train)

    y_pred=0
    def generate_prediction(input):


        y_pred = Model.predict(input)
        return  y_pred

    @app.route('/')
    def home():

        return render_template('disease.html')


    @app.route('/get_value', methods=['GET', 'POST'])
    def get_price():
        input = request.form
        input = np.array(list(input.values())).reshape(1,-1)
        print(input)

        price = generate_prediction(input)
        if price == 0:
            return "Not Suffering from a disease {}".format(price,accuaracy())
        else:
            return "Suffering from a disease {}{}".format(price,accuaracy())





    def accuaracy():


        print("Accuracy(GradientBoostingClassifier)\t:" + str(accuracy_score(y_test, y_pred)))
        print("Precision(GradientBoostingClassifier)\t:" + str(precision_score(y_test, y_pred)))
        print("Recall(GradientBoostingClassifier)\t:" + str(recall_score(y_test, y_pred)))


    if __name__ == '__main__':
        app.run(debug=True)

disease.html

&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Title&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;form action=" http://127.0.0.1:5000/get_value" method="POST"&gt;

    &lt;p&gt;age &lt;input type="text" name="t1"/&gt;&lt;/p&gt;
    &lt;p&gt;sex &lt;input type="text" name="t2"/&gt;&lt;/p&gt;
    &lt;p&gt;cp &lt;input type="text" name="t3"/&gt;&lt;/p&gt;
    &lt;p&gt;trestbps &lt;input type="text" name="t4"/&gt;&lt;/p&gt;
        &lt;p&gt;chol &lt;input type="text" name="t5"/&gt;&lt;/p&gt;
        &lt;p&gt;fbs &lt;input type="text" name="t6"/&gt;&lt;/p&gt;
        &lt;p&gt;restecg &lt;input type="text" name="t7"/&gt;&lt;/p&gt;
        &lt;p&gt;thalach &lt;input type="text" name="t8"/&gt;&lt;/p&gt;
        &lt;p&gt;exang &lt;input type="text" name="t9"/&gt;&lt;/p&gt;
        &lt;p&gt;oldspeak &lt;input type="text" name="t10"/&gt;&lt;/p&gt;
    &lt;p&gt;slope &lt;input type="text" name="t11"/&gt;&lt;/p&gt;
        &lt;p&gt;ca &lt;input type="text" name="t12"/&gt;&lt;/p&gt;
        &lt;p&gt;thal &lt;input type="text" name="t13"/&gt;&lt;/p&gt;

    &lt;p&gt;&lt;input type="submit" value="submit"/&gt;&lt;/p&gt;
    &lt;/form&gt;
&lt;/body&gt;
</code></pre>
<hr/>
<pre><code>traceback (most recent call last):
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\flask\app.py", line 2309, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\flask\app.py", line 2295, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\flask\app.py", line 1741, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\flask\_compat.py", line 35, in reraise
    raise value
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\flask\app.py", line 2292, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\flask\app.py", line 1815, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\flask\app.py", line 1718, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\flask\_compat.py", line 35, in reraise
    raise value
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\flask\app.py", line 1813, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\flask\app.py", line 1799, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\Indu\PycharmProjects\WebApp\HeartDisease.py", line 43, in get_price
    return "Suffering from a disease {}{}".format(price,accuaracy())
  File "C:\Users\Indu\PycharmProjects\WebApp\HeartDisease.py", line 52, in accuaracy
    print("Accuracy(GradientBoostingClassifier)\t:" + str(accuracy_score(y_test, y_pred)))
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\sklearn\metrics\classification.py", line 176, in accuracy_score
    y_type, y_true, y_pred = _check_targets(y_true, y_pred)
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\sklearn\metrics\classification.py", line 71, in _check_targets
    check_consistent_length(y_true, y_pred)
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\sklearn\utils\validation.py", line 231, in check_consistent_length
    lengths = [_num_samples(X) for X in arrays if X is not None]
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\sklearn\utils\validation.py", line 231, in &lt;listcomp&gt;
    lengths = [_num_samples(X) for X in arrays if X is not None]
  File "C:\Users\Indu\PycharmProjects\WebApp\venv\lib\site-packages\sklearn\utils\validation.py", line 138, in _num_samples
    type(x))
TypeError: Expected sequence or array-like, got &lt;class 'int'&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your <code>accuracy()</code> function you need to pass arrays to the Sklearn metrics. Right now you're only passing a single int value. Make sure <code>y_test</code> and <code>y_pred</code> are arrays, even if they are only one element.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are getting error because of your <code>input</code> with the reshape of (-1,1). because of the shape in <code>y_pred = Model.predict(input)</code> you will always get integer value. because you are give single dimension list as input</p>
<p>so to get <code>list</code> your input should be equal to <code>x_test</code> with that you can get <code>y_pred</code>.</p>
<p>also note that in <code>accuracy_score(y_test, y_pred)</code> both the arguments should have same lenght</p>
</div>
<span class="comment-copy">post full traceback pf your error</span>
