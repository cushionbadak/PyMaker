<div class="post-text" itemprop="text">
<p>My Form reference a Django Model with an image field which saves an image url pointing to the /media/ folder.</p>
<p>By default, the Form generates a snippet for images where a 'Browse...' button is shown, like below picture.</p>
<p><a href="https://i.stack.imgur.com/aqBTB.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/aqBTB.png"/></a></p>
<p>When I press the "Browse" button I get a File upload dialogue window pointing to my desktop.</p>
<p><strong>My question:</strong> How do I get this dialogue to point to my /media/ Folder? </p>
<ul>
<li>What I ultimate trying to achieve is the ability to choose among already uploaded pictures in the /media/ folder. If the idea above is too far fetched, what can be suggested as alternative as a basic solution to the problem?</li>
</ul>
<p>I have looked into to amend class <code>ClearableFileInput(FileInput)</code> but lack necessary level of skills for being successful and kind of have a hunch it may exist a better way.</p>
<p>Greatful for some help.</p>
<p><strong>models.py</strong></p>
<pre><code>class Product(models.Model):
    author = models.ForeignKey(User, on_delete=models.CASCADE)
    reference_date = models.DateTimeField(auto_now_add=True)
    product_image = models.ImageField(default='product_image/default.jpg', upload_to='product_image')
</code></pre>
<p>I use Cripsy forms, form helper to generate the Form. </p>
<p><strong>forms.py</strong></p>
<pre><code>class ProductForm(ProductModelForm):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.helper = FormHelper()

        Image = 'product_image'

        self.fields[Image].label = 'Product Image'

        self.helper.layout = Layout(
            Field(Image),
            )
</code></pre>
<p><strong>settings.py</strong></p>
<pre><code>BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
</code></pre>
<p><strong>urls.py</strong></p>
<pre><code>if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need two fields in your form: </p>
<ul>
<li>One to upload a new image (what you have now) </li>
<li>and one to select an image from a list of images. That second one can be a <code>ChoiceField</code> or <code>ModelChoiceField</code> with a custom widget you create to display all the choices (the images) and custom javascript to map the selected images to the input value of the input field. </li>
</ul>
<p>The problem is your <code>Product</code> model doesn't allow you to share images between products. So either you have to copy the image before saving the product or you should switch to have the image in its own model and a <code>ForeignKey</code> on your <code>Product</code>.</p>
</div>
<span class="comment-copy">To do that is much more complex than a simple change to the the <code>FileInput</code> widget. Pointing to a folder on your server means you need to have code to fetch and display all the images on a server. You need either your view to include those images so that clicking a button opens a dialog where the images are shown, or you need to fetch them with ajax when the button is clicked. Do you also want to support browsing to sub-folders?</span>
<span class="comment-copy">The <code>browse...</code> button is btw a standard button shown by your browser when an HTML input with type file (<code>&lt;input type="file"&gt;</code>) element is present. The dialog that ensues is a local browser functionality to select a file on your local PC.</span>
<span class="comment-copy">Thanks, no need to browse sub-folder. I am looking for the most simple way to access the /media/ folder from the Form to be able to choose between already existing pictures. Any easy solution would do here, I think.</span>
<span class="comment-copy">You need two fields in your form: One to upload a new image (what you have now) and one to select an image from a list of images. That second one can be a <code>ChoiceField</code> or <code>ModelChoiceField</code> with a custom widget you create to display all the choices (the images) and custom javascript to map the selected images to the input value of the input field. The problem is your <code>Product</code> model doesn't allow you to share images between products. So either you have to copy the image before saving the product or you should switch to have the image in its own model and a ForeignKey on your Product.</span>
<span class="comment-copy">There's probably a pip package to do this, but haven't found one (django-filer comes close but is afaik focused on the admin site).</span>
