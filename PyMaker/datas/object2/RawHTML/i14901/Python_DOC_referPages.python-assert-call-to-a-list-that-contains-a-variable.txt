<div class="post-text" itemprop="text">
<p>This question follows python 2.7.3 syntax. In unittest framework, suppose I have the following set up:</p>
<pre><code>import mock;
my_mock = mock.Mock();
my_patch = mock.patch("my_method", my_mock);
</code></pre>
<p>Now suppose my_method takes on a list argument as input. </p>
<p>How Can I use my_mock.assert_any_call to make sure that a call is made to my_method such that the input list contains a particular value?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do that by use both <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.mock_calls" rel="nofollow"><code>mock_calls</code></a> and call unpacking as documented <a href="https://docs.python.org/3/library/unittest.mock.html#call" rel="nofollow">here</a>. Now a for cycle can be enough to do the work:</p>
<pre><code>&gt;&gt;&gt; import mock
&gt;&gt;&gt; m = mock.Mock()
&gt;&gt;&gt; m([1,2])
&lt;Mock name='mock()' id='140596484020816'&gt;
&gt;&gt;&gt; m([5,6])
&lt;Mock name='mock()' id='140596484020816'&gt;
&gt;&gt;&gt; m([8,9])
&lt;Mock name='mock()' id='140596484020816'&gt;
&gt;&gt;&gt; for name,args,kwrgs in m.mock_calls:
...     if 5 in args[0]:
...         print("found")
... 
found
</code></pre>
</div>
<span class="comment-copy">Are you still interested about this question?</span>
