<div class="post-text" itemprop="text">
<p>I'm in a situation when I have to call one function foo:</p>
<pre><code>def foo(arg1,arg2,*args):
    pass
</code></pre>
<p>The problem is that I have the <code>*args</code> arguments stored during computing as a list.</p>
<p>Like this:</p>
<pre><code>a = 'arg1'
b = 'arg2'
list_of_args = ['arg3','arg4','arg5']  
</code></pre>
<p>How can I call the function foo with this arguments to be like:</p>
<pre><code>foo('arg1','arg2','arg3','arg4','arg5')
</code></pre>
<p>I could do this:</p>
<pre><code>foo(a,b,list_of_args[0],list_of_args[1],list_of_args[2])
</code></pre>
<p>but it does not solve this problem because length of <code>list_of_args</code> depends on  a situation so it could be:</p>
<pre><code>foo(a,b,list_of_args[0],list_of_args[1],list_of_args[2],list_of_args[3],...)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simply unpack the list with <code>*</code>:</p>
<pre><code>a = 'arg1'
b = 'arg2'
list_of_args = ['arg3','arg4','arg5']

foo(a, b, *list_of_args)
</code></pre>
<p>From the <a href="https://docs.python.org/3/reference/expressions.html#calls" rel="nofollow">docs</a>:</p>
<blockquote>
<p>If the syntax <code>*expression</code> appears in the function call, <code>expression</code>
  must evaluate to an iterable. Elements from this iterable are treated
  as if they were additional positional arguments</p>
</blockquote>
</div>
<span class="comment-copy">Oh, man! Thanks, it was so simple. I've tried many tricks like ', '.join(args) etc. Thanks</span>
