<div class="post-text" itemprop="text">
<p>I have a list  of of SQLAlchemy Model attributes. For example:</p>
<p><code>my_list = ['firstName', 'lastName']</code></p>
<p>I also have a person SQLAlchemy Object with <code>firstName and lastName</code> attributes.</p>
<p>I want to search query my database for people with a query as follows:
<code>session.filter( Person.lastName.like(query+'%') | Person.firstName.like(query+'%')).all()</code></p>
<p>The tricky part is that I want to generate the above filter dynamically from the <code>my_list</code> list. For example if an <code>emailAddress</code> is added to the list I want the query to also search via the objects email property.</p>
</div>
<div class="post-text" itemprop="text">
<p>With SQLAlchemy this is pretty easy if you know about <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>reduce</code></a>; use <code>getattr</code> to get the dynamically named column from the <code>Person</code> class.</p>
<pre><code>from functools import reduce  # python 3
from operator import or_

columns = [ 'firstName', 'lastName' ]

# make a list of `Person.c.like(query+'%')`
likes = [ getattr(Person, c).like(query+'%') for c in column ]

# join them with | using reduce; does the same as likes[0]|likes[1]|....
final_filter = reduce(or_, likes)

session.filter(final_filter).all()
</code></pre>
<p>Though <code>or_</code> also accepts any number of clauses to <code>or</code> together, so you can use argument unpacking too:</p>
<pre><code> final_filter = or_(*likes)
</code></pre>
</div>
<span class="comment-copy">Just to note for anyone hunting, you can use this approach for creating a list of conditions and passing them to the filter function. Something like: <code>filters = [Reservation.start_date &gt; req.start, Reservation.end_date &lt;= req.end]</code>. Then, <code>conditions = reduce(and_, filters)</code>. Finally, <code>db.session.query(Reservation).filter(conditions).all()</code>. The advantage to this is that you can conditionally add filters in a cleaner fashion.</span>
