<div class="post-text" itemprop="text">
<p>I have two rows like below</p>
<pre><code>Tp1g00130_scaffold_1    blastn    exon    20495    20602    .    +    .    
Tp1g00130_scaffold_1    blastn    exon    20650    20804    .    +    .    
</code></pre>
<p>What i want to do is to merge the seq start (column 3 of row 1) and seq end (column 4 of row 2) of two lines if they have the same ID(column 1). For example, the output would look like</p>
<pre><code>Tp1g00130_scaffold_1    blastn    exon    20495    20804    .    +    .    
</code></pre>
<p>I made a good start but cannot quite finish. </p>
<pre><code>prev = None

with open("test_parse") as fh_in:
    for line in fh_in:
        line = line.strip()
        line = line.split()
        line_id = line[0]
        print line
        if prev is not None and prev == line_id:
            print "yes"
        prev = line_id
</code></pre>
<p>Any help?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're almost there.</p>
<p>Instead of <code>prev</code> being just the <code>id</code>, make it the whole last line. This lets us check existance and id (<code>if prev and prev[0] == line[0]:</code>) and get the seq start and seq end (<code>print('{} -&gt; {}'.format(prev[3], line[4]))</code>).</p>
<pre><code>prev = None
with open("test_parse") as fh_in:
    for line in fh_in:
        line = line.strip().split()
        if prev and prev[0] == line[0]:
            print(' '.join(prev).replace(prev[4], line[4]).split())
        prev = line
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your file is small you can use a temporary dict.</p>
<pre><code>records = {}

with open("test_parse") as fh_in:
    for line in fh_in:
        id_, f1, f2, start, end, f4, f5, f6 = line.strip().split()
        if id_ in records:
            records[id_][4] = end
        else:
            records[id_] = [id_, f1, f2, start, end, f4, f5, f6]

for line in records.values():
    print "\t".join(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you have a a header row in your file you can use a <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow">DictReader</a>. </p>
<p>For a file with headers for columns x, y, and z you can do:</p>
<pre><code>import DictReader

reader = DictReader(open('sample.csv'))
for line in reader:
    print(line['x'], line['z'])
</code></pre>
<p>The csv module it is a part of is very helpful in general.</p>
</div>
<span class="comment-copy">Where are you stuck?</span>
<span class="comment-copy">Not sure what you are trying to accomplish, but if you merge non-overlapping exons you might create artificial exons.  What if they are actually two separate exons?</span>
<span class="comment-copy">Good point. Let me think about it.</span>
<span class="comment-copy">This is not for annotation purposes...</span>
<span class="comment-copy">Are the seq start and stop rows always <i>right next to each other</i>?</span>
<span class="comment-copy">Great. I have one question though. How do i join these two - <code>test = '{} {}'.format(prev[0:4], line[4:])</code>. I ask this because i am getting this output `['Tp1g00130_scaffold_1', 'blastn', 'exon', '20495'] ['20804', '.', '+', '.',]</span>
<span class="comment-copy">How do you want it to look?</span>
<span class="comment-copy">rather than two lists which i am currently getting, i want one list only. For example - [Tp1g00130_scaffold_1', 'blastn', 'exon', '20495', '20804', '.', '+', '.']</span>
<span class="comment-copy">See if that's what you want, @upendra. I got <code>['Tp1g00130_scaffold_1', 'blastn', 'exon', '20495', '20804', '.', '+', '.']</code> for output.</span>
<span class="comment-copy">Perfect. Thanks....</span>
