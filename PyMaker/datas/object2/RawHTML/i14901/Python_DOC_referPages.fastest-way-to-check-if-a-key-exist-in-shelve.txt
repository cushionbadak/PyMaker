<div class="post-text" itemprop="text">
<p>I have used python shelve library to pre-store a list of key-vector pairs. There are 3 million entries in total, which takes 6 GB memory storage. 
On a separate training file, I need to check for every record if it is a key in the shelve dictionary. This renders my program extremely slow to run. Is there a fast way to check if a key exists in shelve? Or are there other efficient ways to store key-vector pairs in python, so that it is efficient to check if a key exist?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow"><code>sqlite3</code></a> instead of shelve, and you can query things beyond just asking for arbitrary key. Also do note that <code>shelve</code> does not give any promises about such database being usable on any other Python version, or platform or anything thereof.</p>
<p>Even better though, use <code>sqlite3</code> <em>and</em> store all the keys separately (with unique) and reference these by a foreign key from the vector table; you can scan and keep the key list in memory as a <code>set</code> (should need only say ~40 MiB + 3 M * average key size of RAM).</p>
</div>
<span class="comment-copy">The best way to do this would be to move to a more efficient k/v store (like redis) or perhaps even a database (depending on what you want to do).</span>
<span class="comment-copy">Is sqlite3 faster when I just need to save one value per key and quickly get it back?</span>
