<div class="post-text" itemprop="text">
<p>I'm trying to decode hex string to binary values. 
I found this below command on internet to get it done, </p>
<pre><code>string_bin = string_1.decode('hex')
</code></pre>
<p>but I got error saying</p>
<pre><code>'str' object has no attrubute 'decode'
</code></pre>
<p>I'm using python v3.4.1</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot decode string objects; they are <em>already</em> decoded. You'll have to use a different method.</p>
<p>You can use the <a href="https://docs.python.org/3/library/codecs.html#codecs.decode"><code>codecs.decode()</code> function</a> to apply <code>hex</code> as a codec:</p>
<pre><code>&gt;&gt;&gt; import codecs
&gt;&gt;&gt; codecs.decode('ab', 'hex')
b'\xab'
</code></pre>
<p>This applies a <a href="https://docs.python.org/3/library/codecs.html#binary-transforms"><em>Binary transform</em></a> codec; it is the equivalent of using the <a href="https://docs.python.org/3/library/base64.html#base64.b16decode"><code>base64.b16decode()</code> function</a>, with the input string converted to uppercase:</p>
<pre><code>&gt;&gt;&gt; import base64
&gt;&gt;&gt; base64.b16decode('AB')
b'\xab'
</code></pre>
<p>You can also use the <a href="https://docs.python.org/3/library/binascii.html#binascii.unhexlify"><code>binascii.unhexlify()</code> function</a> to 'decode' a sequence of hex digits to bytes:</p>
<pre><code>&gt;&gt;&gt; import binascii
&gt;&gt;&gt; binascii.unhexlify('ab')
b'\xab'
</code></pre>
<p>Either way, you'll get a <code>bytes</code> object.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/binascii.html" rel="nofollow"><strong><code>binascii</code></strong></a>:</p>
<pre><code>import binascii

binary_string = binascii.unhexlify(hex_string)
</code></pre>
</div>
<span class="comment-copy">&gt;&gt;&gt; s = '1bcd67879034' &gt;&gt;&gt; codecs.decode(s, 'hex') b'\x1b\xcdg\x87\x904' &gt;&gt;&gt; ################### this is not expected result: but expected "  b'\x1b\xcd\x67\x87\x90\x34'  "  ## what I'm I missing?</span>
<span class="comment-copy">@rahookds: that looks correct. Note that a bytes literal representation only uses <code>\xhh</code> escape sequences for <i>non-printable</i> bytes. <code>34</code> is the hex ASCII codepoint for the <code>'4'</code> character, for example. <code>67</code> is <code>'g'</code>.</span>
<span class="comment-copy">yep! so, how do I see what I'm looking for? ;-)</span>
<span class="comment-copy">@rahookds: what are you looking for? You <i>have</i> the bytes from the hex values.</span>
<span class="comment-copy">I'm looking for binary(hex) value output like b'\x1b\xcd\x67\x87\x90\x34' .</span>
