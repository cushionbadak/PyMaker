<div class="post-text" itemprop="text">
<p>Here's what I want to do:</p>
<pre><code>import copy
def printtext(swefile):
    for row in swefile:
        print(row)
text = open("wordsv.txt","r",encoding="utf-8")
text2 = copy.copy(text)
printtext(text)
print(text2.readlines())
</code></pre>
<p>But it is not possible, TypeError: cannot serialize '_io.TextIOWrapper' object.
So I wonder if there is a good method for "cloning" the text variable, so that I could print all the lines again. I know that I could just read the file again, but that answer does not solve the bigger problem I have so any suggestion on how to get this done is helpful.</p>
<hr/>
<p>Here's the larger context as I haven't been able to solve my problem with your suggestions:</p>
<pre><code>with open(textfilename, "r", encoding = "utf-8") as swefile:
    for row in swefile:
        word = row.strip()
        tempfile = copy.copy(swefile)
        l = getFurthest(word,tempfile)
</code></pre>
<p>The thing that I want to happen here is that i want to send the portion of <code>swefile</code> that has not been read yet (i.e. iterated over yet by the for loop) to <code>getFurthest()</code>! And I can't send <code>swefile</code> because that will make the whole thing read so the iterations in the for loop will stop, right? So how can I send only the portion of the textfile that has been read to <code>getFurthest()</code> while still being able to iterate over the rest of it after?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're trying to avoid re-opening the file, but want to read it twice, you can use <a href="https://docs.python.org/3/library/io.html#io.IOBase.seek" rel="nofollow"><code>seek()</code></a>:</p>
<pre><code>import copy
def printtext(swefile):
    for row in swefile:
        print(row)
text = open("wordsv.txt","r",encoding='utf-8')
printtext(text)
text.seek(0)
printtext(text)
</code></pre>
<p>If you just care about the text, you can do this:</p>
<pre><code>import copy
def printtext(swefile):
    for row in swefile:
        print(row)
text = open("wordsv.txt","r",encoding='utf-8').readlines()
text2 = copy.copy(text)
printtext(text)
printtext(text2)
</code></pre>
<p>Here <code>text</code> is a list of the lines in <code>wordsv.txt</code>, and you then copy the list into text2 (i.e. changing <code>text</code> won't change <code>text2</code>). </p>
</div>
<div class="post-text" itemprop="text">
<p>Alternatively, if you really do want to wind up with two files for some reason, it's best to use <a href="https://docs.python.org/2/library/shutil.html#shutil.copy" rel="nofollow"><code>shutil.copy</code></a> to copy it:</p>
<pre><code>import shutil

path = "wordsv.txt"
path2= "wordsv2.txt"
shutil.copy(path, path2)
with open(path, encoding='utf-8') as text, open(path2, encoding='utf=8') as text2:
    # Do something with text, text2 here
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your line <code>text2 = copy.copy(text)</code> does not work because text is a file object only. To "copy" the text in the file, do as follows:</p>
<pre><code>text2 = text.read()
</code></pre>
<p>Please note that you don't copy the actual text (content), as strings are immutable.</p>
</div>
<span class="comment-copy">Erm, if rereading doesn't solve the bigger problem then I'm not sure that I want to know what the bigger problem is...</span>
<span class="comment-copy">Your question is not clear. What are you trying to achieve?</span>
<span class="comment-copy">I am trying to make a COPY of the variable 'text'. So I basically want 'text2' to refer to something (is it really called text file?) that is the same as 'text' but I don't want them to be CONNECTED. :)</span>
<span class="comment-copy">Do you want text to be a file object or a list of strings?</span>
<span class="comment-copy">I want it to be the same as what 'text' is, the thing you get when you write {open("textfile.txt","r"]}</span>
<span class="comment-copy">oh that's brilliant, thanks a lot.</span>
<span class="comment-copy">The problem with that is that I lose <code>text</code>, i.e. it becomes "read". I want to keep them both unread.</span>
<span class="comment-copy">@user3128156 than maybe have a look at samGbos answer.</span>
