<div class="post-text" itemprop="text">
<p>I would like to know how to check whether a string starts with "hello" in Python.</p>
<p>In Bash I usually do:</p>
<pre><code>if [[ "$string" =~ ^hello ]]; then
 do something here
fi
</code></pre>
<p>How do I achieve the same in Python?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>aString = "hello world"
aString.startswith("hello")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/a/8802889/1138689">RanRag has already answered</a> it for your specific question.</p>
<p>However, more generally, what you are doing with</p>
<pre><code>if [[ "$string" =~ ^hello ]]
</code></pre>
<p>is a <em>regex</em> match. To do the same in Python, you would do:</p>
<pre><code>import re
if re.match(r'^hello', somestring):
    # do stuff
</code></pre>
<p>Obviously, in this case, <code>somestring.startswith('hello')</code> is better.</p>
</div>
<div class="post-text" itemprop="text">
<p>In case you want to match <em>multiple</em> words to your magic word you can pass the words to match as a tuple:</p>
<pre><code>&gt;&gt;&gt; magicWord = 'zzzTest'
&gt;&gt;&gt; magicWord.startswith(('zzz', 'yyy', 'rrr'))
True
</code></pre>
<p><strong>Note</strong>: <code>startswith</code> takes <code>str or a tuple of str</code></p>
<p>See the <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="noreferrer">docs</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Can also be done this way..</p>
<pre><code>regex=re.compile('^hello')

## THIS WAY YOU CAN CHECK FOR MULTIPLE STRINGS
## LIKE
## regex=re.compile('^hello|^john|^world')

if re.match(regex, somestring):
    print("Yes")
</code></pre>
</div>
<span class="comment-copy">@Marcin Agreed. Also, the title almost passes for the correct syntax to do it :-) Just remove some spaces and add a few parentheses and end with colon... <code>if aString.startswith(XXXX):</code></span>
<span class="comment-copy">Just wanted to add that for what I was doing, re.match and re.sub  was always significantly slower than any other method.</span>
