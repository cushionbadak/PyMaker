<div class="post-text" itemprop="text">
<p>I'd like to have some information about set of functions (maybe analog of the var_dump() in PHP) which I could use for looking at the content of variables on a server side  in a way that they should be printed on server-side somehow during the work process, or on the client-side in the browser's console (chromelogger?).</p>
<p>I was recently involved into a new project, I'm a newbie in Python/Django, so I need to get familiar with the internal logic and hit the ground running.</p>
<p>I'm using extJS on front-end and Django 1.6 on backend.</p>
<p>Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>Just print them and they will appear at dev-server's console:</p>
<pre><code>print some_var
</code></pre>
<p>Or, if <code>some_var</code> is a some kind of structure (dict or list), use the <a href="https://docs.python.org/2/library/pprint.html" rel="nofollow"><code>pprint</code></a> module:</p>
<pre><code>import pprint
pprint.pprint(some_var)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you are looking for an IDE.. Go for pycharm or eclipse + pydev.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are looking to print the variable structure use <a href="https://docs.python.org/2/library/functions.html#dir" rel="nofollow">dir</a>. </p>
<p>If you want to print only the variable content use <a href="https://docs.python.org/2/library/pprint.html" rel="nofollow">pretty print(pprint)</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you're trying to diagnose issues on a server or in a production-like environment (i.e., one where you can't just dump into an interactive debugger), might I suggest you use logging?</p>
<p><a href="https://docs.djangoproject.com/en/1.7/topics/logging/" rel="nofollow">https://docs.djangoproject.com/en/1.7/topics/logging/</a>
<a href="https://docs.python.org/2/library/logging.html" rel="nofollow">https://docs.python.org/2/library/logging.html</a> (or <a href="https://docs.python.org/3/library/logging.html" rel="nofollow">https://docs.python.org/3/library/logging.html</a>)</p>
<p>You can even go so far as to have an SMTP log handler that will automagically email you log output for certain handlers.</p>
</div>
<span class="comment-copy">Where does logging keep its log files?</span>
<span class="comment-copy">I'm going to punt and refer you to the Django documentation on logging. If you follow their scheme, logfile locations, handlers, and more can all be defined in settings. This includes the ability to automagically get an email copy of error and higher log messages. This is often super handy, and also often super chatty and annoying. With great power....</span>
