<div class="post-text" itemprop="text">
<p>How do i get this python output? counting matches and mismatches</p>
<p>String1: aaabbbccc     #aaabbbccc is user input<br/>
String2: aabbbcccc     #aabbbcccc is user input</p>
<p>Matches: ?<br/>
MisMatches: ?<br/>
String1: aaAbbBccc  #mismatches are capitalize<br/>
String2: aaBbbCccc</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import itertools
s1 = 'aaabbbccc'
s2 = 'aabbbcccc'
print "Matches:", sum( c1==c2 for c1, c2 in itertools.izip(s1, s2) )
print "Mismatches:", sum( c1!=c2 for c1, c2 in itertools.izip(s1, s2) )
print "String 1:", ''.join( c1 if c1==c2 else c1.upper() for c1, c2 in itertools.izip(s1, s2) )
print "String 2:", ''.join( c2 if c1==c2 else c2.upper() for c1, c2 in itertools.izip(s1, s2) )
</code></pre>
<p>This produces:</p>
<pre><code>Matches: 7
Mismatches: 2
String 1: aaAbbBccc
String 2: aaBbbCccc
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you have gotten the string from a file or user input, what about:</p>
<pre><code>import itertools

s1 = 'aaabbbccc'
s2 = 'aabbbcccc'

# This will only consider n characters, where n = min(len(s1), len(s2))
match_indices = [i for (i,(c1, c2)) in enumerate(itertools.izip(s1, s2)) if c1 == c2]
num_matches   = len(match_indices)
num_misses    = min(len(s1), len(s2)) - num_matches

print("Matches:    %d" % num_matches)
print("Mismatches: %d" % num_misses)
print("String 1:   %s" % ''.join(c if i in match_indices else c.upper() for (i,c) in enumerate(s1)))
print("String 2:   %s" % ''.join(c if i in match_indices else c.upper() for (i,c) in enumerate(s2)))
</code></pre>
<p>Output:</p>
<pre>
Matches:    7
Mismatches: 2
String 1:   aaAbbBccc
String 1:   aaBbbCccc
</pre>
<p>If you wanted to count strings of uneven length (where extra characters counted as misses), you could change:</p>
<pre><code>num_misses  = min(len(s1), len(s2)) - num_matches
# to
num_misses  = max(len(s1), len(s2)) - num_matches
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try:</p>
<pre><code>    index = 0
    for letter in String1:
        if String1[index] != String2[index]:
            mismatches +=1
    index += 1
print "Matches:" + (len(String1)-mismatches)
print "Mismatches:" + mismatches  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could try the below.</p>
<pre><code>&gt;&gt;&gt; s1 = 'aaabbbccc'
&gt;&gt;&gt; s2 = 'aabbbcccc'
&gt;&gt;&gt; match = 0
&gt;&gt;&gt; mismatch = 0
&gt;&gt;&gt; for i,j in itertools.izip_longest(s1,s2):
        if i == j:
            match += 1
        else:
            mismatch +=1
</code></pre>
<p>In python3 use <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow"><code>itertools.zip_longest</code></a> instead of <code>itertools.izip_longest</code>.
If you want to consider <code>a</code> and <code>A</code> as a match, then change  the if condition to,</p>
<pre><code>if i.lower() == j.lower():
</code></pre>
<p>Finally get the match and mismatch count from the variables <code>match</code> and <code>mismatch</code> .</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt;s= list('aaabbbccc')
&gt;&gt;&gt;s1=list('aabbbcccc')
&gt;&gt;&gt;match=0
&gt;&gt;&gt;mismatch=0
&gt;&gt;&gt;for i in range(0,len(s)):
...     if(s[i]==s1[i]):
...             match+=1
...     else:
...             mismatch+=1
...             s[i]=s[i].upper()
...             s1[i]=s1[i].upper()
&gt;&gt;&gt;print 'Matches:'+ str(match)
&gt;&gt;&gt;print 'MisMatches:'+str(mismatch)
&gt;&gt;&gt;print 'String 1:' +''.join(s)
&gt;&gt;&gt;print 'String 2:' +''.join(s1)
</code></pre>
</div>
<span class="comment-copy">Will the number of characters be the same?</span>
<span class="comment-copy">user can input as much as they want.</span>
<span class="comment-copy">@SamyShrestha What would be expected output if the inputs are "abcd" and "abcdefghijklmnop"?</span>
<span class="comment-copy">i want to learn this.. i have no idea for counting matches and mismatches.. so just tried searching in python library. but didnt find anything.</span>
<span class="comment-copy">Hint: <code>zip</code>, or possibly <code>itertools.izip_longest</code> ...</span>
<span class="comment-copy">Is there a loop-type line you omitted?</span>
<span class="comment-copy">actually it's like after entering the user input. the program asks for  a(add indel) d(delete indel) s(score) q(quit): s  when 's' is entered then, it gives the required information as output</span>
