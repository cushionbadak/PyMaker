<div class="post-text" itemprop="text">
<p>I am trying to indent the output of pprint so that I will get an 8 space indentation with pprint. The code I used is:</p>
<pre><code>import numpy as np
from pprint import pprint
A = np.array([1, 2, 3, 4])
f = open("log.txt", 'w')
n = 2
for i in range(n):
    A = A + 1
    f.writelines(list(u'    \u27B3 - %s\n'.encode('utf-8') % i for i in A))
    pprint(globals())
</code></pre>
<p><strong>Output</strong></p>
<pre class="lang-none prettyprint-override"><code>{'A': array([2, 3, 4, 5]),
 '__builtins__': &lt;module '__builtin__' (built-in)&gt;,
 '__doc__': None,
 '__file__': '~/Stack exchange/pprint_tab.py',
 '__name__': '__main__',
 '__package__': None,
 'f': &lt;open file 'log.txt', mode 'w' at 0xb659b8b8&gt;,
 'i': 0,
 'n': 2,
 'np': &lt;module 'numpy' from '/usr/lib/python2.7/dist...,
 'pprint': &lt;function pprint at 0xb6dea48c&gt;}
{'A': array([3, 4, 5, 6]),
 '__builtins__': &lt;module '__builtin__' (built-in)&gt;,
 '__doc__': None,
 '__file__': '~/Stack exchange/pprint_tab.py',
 '__name__': '__main__',
 '__package__': None,
 'f': &lt;open file 'log.txt', mode 'w' at 0xb659b8b8&gt;,
 'i': 1,
 'n': 2,
 'np': &lt;module 'numpy' from '/usr/lib/python2.7/dist...,
 'pprint': &lt;function pprint at 0xb6dea48c&gt;}
</code></pre>
<p><strong>Desired output</strong></p>
<pre class="lang-none prettyprint-override"><code>        {'A': array([2, 3, 4, 5]),
         '__builtins__': &lt;module '__builtin__' (built-in)&gt;,
         '__doc__': None,
         '__file__': '~/Stack exchange/pprint_tab.py',
         '__name__': '__main__',
         '__package__': None,
         'f': &lt;open file 'log.txt', mode 'w' at 0xb659b8b8&gt;,
         'i': 0,
         'n': 2,
         'np': &lt;module 'numpy' from '/usr/lib/python2.7/dist...,
         'pprint': &lt;function pprint at 0xb6dea48c&gt;}
        {'A': array([3, 4, 5, 6]),
         '__builtins__': &lt;module '__builtin__' (built-in)&gt;,
         '__doc__': None,
         '__file__': '~/Stack exchange/pprint_tab.py',
         '__name__': '__main__',
         '__package__': None,
         'f': &lt;open file 'log.txt', mode 'w' at 0xb659b8b8&gt;,
         'i': 1,
         'n': 2,
         'np': &lt;module 'numpy' from '/usr/lib/python2.7/dist...,
         'pprint': &lt;function pprint at 0xb6dea48c&gt;}
</code></pre>
<p>In short, I need a space indentation when written to file or printed with <code>pprint</code>. I tried </p>
<pre><code>pp = pprint.PrettyPrinter(indent=8)
</code></pre>
<p>but it does not work</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot get <code>pprint()</code> to add additional leading indentation, no.</p>
<p>Your best option is to use the <a href="https://docs.python.org/2/library/pprint.html#pprint.pformat" rel="nofollow noreferrer"><code>pprint.pformat()</code> function</a> instead, then add indentation manually:</p>
<pre><code>from pprint import pformat

print ''.join([
    '        ' + l
    for l in pformat(globals()).splitlines(True)])
</code></pre>
<p>This uses the <a href="https://docs.python.org/2/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer"><code>str.splitlines()</code> method</a> to split the <code>pformat()</code> output in to separate lines for ease of re-joining.</p>
<p>In Python 3, indenting can be done with <a href="https://docs.python.org/3/library/textwrap.html#textwrap.indent" rel="nofollow noreferrer"><code>textwrap.indent()</code></a>:</p>
<pre><code>from pprint import pformat
from textwrap import indent

print(indent(pformat(globals()),
             '        '))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Minor update to Martijn's answer.  No need to use .format() where simple str concat will do.</p>
<pre><code>from pprint import pformat

def left_indent(text, indent=' ' * 8):
    return ''.join([indent + l for l in text.splitlines(True)])

print(indent(pformat(data)))
</code></pre>
</div>
<span class="comment-copy">You are using a generator expression, not a tuple, which for <code>str.join()</code> is a performance bottleneck. See <a href="https://stackoverflow.com/a/9061024">stackoverflow.com/a/9061024</a></span>
<span class="comment-copy">Updated. ------</span>
<span class="comment-copy">and you're right, not sure why I used format at the time; I think it was a hold over from using <code>.splitlines()</code> without <code>True</code> perhaps (and the format added the newline back).</span>
