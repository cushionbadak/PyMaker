<div class="post-text" itemprop="text">
<p>First of all i would like to apologize since i am a beginner to Python. Anyway I have a Python Program where I can create text files with the general form:</p>
<pre><code>Recipe Name:
Item
Weight
Number of people recipe serves
</code></pre>
<p>And what I'm trying to do is to allow the program to be able to retrieve the recipe and have the ingredients recalculated for a different number of people.  The program should output the the recipe name, the new number of people and the revised quantities for the new number of people. I am able to retrieve the recipe and output the recipe however i am not sure how to have the ingredients recaculated for a different number of people. This is part of my code:</p>
<pre><code>def modify_recipe():
    Choice_Exist = input("\nOkaym it looks like you want to modify a recipe. Please enter the name of this recipe ")
    Exist_Recipe = open(Choice_Exist, "r+")
    time.sleep(2)
    ServRequire = int(input("Please enter how many servings you would like "))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I had to edit it a couple times because I use Python 2.7.5, but this should work:</p>
<pre><code>import time

def modify_recipe():
    Choice_Exist = input("\nOkay it looks like you want to modify a recipe. Please enter the name of this recipe: ")
    with open(Choice_Exist + ".txt", "r+") as f:
        content = f.readlines()
        data_list = [word.replace("\n","") for word in content]

    time.sleep(2)

    ServRequire = int(input("Please enter how many servings you would like: "))

    print data_list[0]
    print data_list[1]
    print int(data_list[2])*ServRequire #provided the Weight is in line 3 of txt file
    print ServRequire

modify_recipe()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend splitting your effort into multiple steps, and working on each step (doing research, trying to write the code, asking specific questions) in succession. </p>
<p>1) Look up <a href="https://docs.python.org/2/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow">python's file I/O</a>. 1.a) Try to recreate the examples you find to make sure you understand what each piece of the code does. 1.b) Write your own script that accomplishes <em>just this piece</em> of your desired program, i.e. opens an exist recipe text file or creates a new one.</p>
<p>2) Really use you're own functions in Python particularly with passing your own arguments. What you're trying to make is a perfect example of good "<a href="https://en.wikipedia.org/wiki/Modular_programming" rel="nofollow">modular programming</a>", were you would right a function that reads an input file, another that writes an output file, another that prompts users for they number they'd like to multiple, and so on. </p>
<p>3) Add a <code>try/except</code> block for user input. If a user enters a non-numeric value, this will allow you to catch that and prompt the user again for a corrected value. Something like:</p>
<pre><code>while True:
  servings = raw_input('Please enter the number of servings desired: ')
  try:
    svgs = int(servings)
    break
  except ValueError:
    print('Please check to make sure you entered a numeric value, with no'
        +' letters or words, and a whole integer (no decimals or fractions).')
</code></pre>
<p>Or if you want to allow decimals, you could use <code>float()</code> instead of <code>int()</code>. </p>
<p>4) [Semi-Advanced] Basic regular expressions (aka "regex") will be <em>very</em> helpful in building out what you're making. It sounds like your input files will have a strict, predictable format, so regex probably isn't necessary. But if you're looking to accept non-standard recipe input files, regex would be a great tool. While it can be a bit hard or confusing skill to learn, but there are a lot of good tutorials and guides. A few I bookmarked in the past are <a href="http://www.python-course.eu/re.php" rel="nofollow">Python Course</a>, <a href="https://developers.google.com/edu/python/regular-expressions" rel="nofollow">Google Developers</a>, and <a href="http://www.diveintopython.net/regular_expressions/" rel="nofollow">Dive Into Python</a>. And a fantastic tool I strongly recommend while learning to build your own regular expression patterns is <a href="http://www.regexr.com/" rel="nofollow">RegExr</a> (or one of many similar, like <a href="http://www.pythonregex.com/" rel="nofollow">PythonRegex</a>), which show you what parts of your pattern are working or not working and why. </p>
<p>Here's an outline to help get you started:</p>
<pre><code>def read_recipe_default(filename):
  # open the file that contains the default ingredients

def parse_recipe(recipe):
  # Use your regex to search for amounts here. Some useful basics include 
  # '\d' for numbers, and looking for keywords like 'cups', 'tbsp', etc.

def get_multiplier():
  # prompt user for their multiplier here

def main():
  # Call these methods as needed here. This will be the first part 
  #  of your program that runs.
  filename = ...
  file_contents = read_recipe_file(filename)
  # ...

# This last piece is what tells Python to start with the main() function above.
if __name__ == '__main__':
  main()
</code></pre>
<p>Starting out can be tough, but it's very worth it in the end! Good luck!</p>
</div>
<span class="comment-copy">What's your problem? You did not state anything about it. Did you take a look at <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">Reading and Writing Files</a> section of the python tutorial?</span>
<span class="comment-copy">I cant figure out how to allow a user to multiply the original servings by entering how many servings are required, as the default servings are in a text file. Does anyone know how this can be done? I am new to file-handling and have been researching constantly but to no avail.</span>
<span class="comment-copy">You could read your file into a dictionary or list, modify it and overwrite your existing file</span>
<span class="comment-copy">Read the file, parse the contents, convert the numbers <code>int</code>/<code>float</code> (as you did in the last line of your code), multiply the numbers using <code>*</code>, convert them back to string and rewrite the file.  There's <b>plenty</b> of questions about any of these steps on SO.</span>
<span class="comment-copy">Parse the contents? Could you provide an example code?</span>
<span class="comment-copy">Thanks! It works but what does the this part of the code do?                                                          with open(Choice_Exist + ".txt", "r+") as f:         content = f.readlines()         data_list = [word.replace("\n","") for word in content]</span>
<span class="comment-copy">it opens the recipe textfile inputted in the line before and reads each line into the list <code>content</code>. And in this list there are "newlines" (<code>\n</code>) after each entry in the list. So <code>data_list</code> removes all these unwanted <code>\n</code> characters.</span>
<span class="comment-copy">@Maxine123 If my code works could you accept my answer? :) (Press the green checkmark) Thanks in advance!</span>
