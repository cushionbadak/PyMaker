<div class="post-text" itemprop="text">
<p>I want to check if a string matches any <code>d["vin"]</code> a list of disctionaries:</p>
<pre><code>mylist = [{"vin":"A123"}, {"vin":"B234"}];
if "A123" in ???:
    # continue...
</code></pre>
<p>How is this possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/2/library/functions.html#any" rel="nofollow"><code>any()</code> function</a> and a <a href="https://docs.python.org/2/tutorial/classes.html#generator-expressions" rel="nofollow">generator expression</a>:</p>
<pre><code>if any(d['vin'] == 'A123' for d in mylist):
</code></pre>
<p>This assumes that all <code>d</code> in <code>mylist</code> have that key; if that's not the case use <code>dict.get()</code>:</p>
<pre><code>if any(d.get('vin') == 'A123' for d in mylist):
</code></pre>
<p>In either case, <code>any()</code> will short-circuit; it'll only test as many <code>d</code> as required to find a match. For your sample, only the first dictionary will be tested.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any</code></a> and a <a href="https://docs.python.org/3/glossary.html#term-generator-expression" rel="nofollow">generator expression</a>:</p>
<pre><code>if any(d["vin"] == "A123" for d in mylist):
    # ... etc.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>mylist = [{"vin":"A123"}, {"vin":"B234"}];

for lists in mylist:
   if "vin" in lists:
        # continue...do something
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>any</code> with <code>in</code>:</p>
<pre><code>if any('A123' in d.values() for d in mylist):
</code></pre>
</div>
<span class="comment-copy">Thanks for the link and explanation. Do you know something about the computation time of this?</span>
<span class="comment-copy">@Freddi: worst case you'll loop through the whole list, testing all <code>d</code> in the list. If you need to do this often for a large list, create an inverse index.</span>
<span class="comment-copy">Doesn't seem to work.</span>
<span class="comment-copy">This won't work: <code>dict.items()</code> iterates over <code>(key, value)</code> pairs. You might have meant <code>d.values()</code>, but even that won't check that <b><code>d["vin"]</code></b> alone contains the value.</span>
<span class="comment-copy">You are right, I meant <code>values</code>.</span>
<span class="comment-copy">But <code>d.values()</code> returns a list in Python 2. The OP specifically stated they are only interested in the <code>'vin'</code> key, not in <i>all</i> values. The value could be given to other keys as well, in which case it shouldn't be matched.</span>
