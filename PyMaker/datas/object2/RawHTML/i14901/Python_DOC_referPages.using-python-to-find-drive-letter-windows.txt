<div class="post-text" itemprop="text">
<p>I'm trying to write a python script (I'm a newbie) that will search the root directory of each connected drive on Windows for a key file and then return the drive letter it's on setting a variable as the drive letter.</p>
<p>Currently I have:</p>
<pre><code>import os
if os.path.exists('A:\\File.ID'):
        USBPATH='A:\\'
        print('USB mounted to', USBPATH)
    if os.path.exists('B:\\File.ID'):
        USBPATH='B:\\'
        print('USB mounted to', USBPATH)
    if os.path.exists('C:\\File.ID'):
</code></pre>
<p>-- And then recurring for every drive letter A through Z. Naturally this will be a lot to type out and I'm just wondering if there's a workaround to keep my code tidy and as minimal as possible (or is this the only way?).</p>
<p>Additionally, is there a way to have it print an error if the drive isn't found (IE say please plug in your USB) and then return to the start/loop? Something like</p>
<pre><code>print('Please plug in our USB drive')
return-to-start
</code></pre>
<p>Kind of like a GOTO command-prompt command?</p>
<p><strong>EDIT:</strong></p>
<p>For people with similar future inquiries, here's the solution:</p>
<pre><code>from string import ascii_uppercase
import os


def FETCH_USBPATH():
    for USBPATH in ascii_uppercase:
         if os.path.exists('%s:\\File.ID' % SVPATH):
            USBPATH='%s:\\' % USBPATH
            print('USB mounted to', USBPATH)
            return USBPATH + ""
    return ""

drive = FETCH_USBPATH()
while drive == "":
    print('Please plug in USB drive and press any key to continue...', end="")
    input()
    drive = FETCH_USBPATH()
</code></pre>
<p>This script prompts the user to plug in a drive containing 'file.id' and when attached, prints the drive letter to console and allows the use of 'drive' as a variable.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you want to repeatedly check if the drive exists, you may want to move that as a separate function, like this</p>
<pre><code>from string import ascii_uppercase
from os import path


def get_usb_drive():
    for drive in ascii_uppercase:
        if path.exists(path.join(drive, "File.ID")):
            return drive + ":\\"
    return ""
</code></pre>
<p>and then, if you want the program to repeatedly prompt the user to plugin the device, you might want to run it in a loop, like this</p>
<pre><code>drive = get_usb_drive()
while drive == "":
    print('Please plug in our USB drive and press any key to continue...',end="")
    input()
    drive = get_usb_drive()
</code></pre>
<p>Initially, we ll try to get the drive with <code>get_usb_drive()</code> and if it fails to find one, it will return an empty string. And we iterate till the returned value from <code>get_usb_drive()</code> is an empty string and prompt the user to plugin the device and wait for the key press.</p>
<p><strong>Note:</strong> We use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow"><code>os.path.join</code></a> to create the actual file system paths, instead of all the manual string concatenation.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a loop and generate the path names:</p>
<pre><code>import os
import string

for l in string.ascii_uppercase:
    if os.path.exists('%s:\\File.ID' % l):
        USBPATH='%s:\\' % l
        print('USB mounted to', USBPATH)
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python haves a simple solution to this. Use the pathlib module.</p>
<pre><code>import pathlib
drive = pathlib.Path.home().drive
print(drive)
</code></pre>
</div>
<span class="comment-copy">There's a note <a href="http://stackoverflow.com/a/827398/736937">here</a> that a similar approach (<code>os.path.isdir</code> vs. <code>os.path.exists</code>) can pop up a windows dialog.  I don't have a drive like that on my desktop, so I can't easily test, but might be worth noting.  If it doesn't (or you don't have that type of drive installed), this approach is very clean and straightforward.</span>
<span class="comment-copy">@jedwards yes I also get a similar error if I do this with a .bat (using if exist cmd) searching drive letters, I have an SD card reader on my computer and that spits out an 'error' as it has 'no media' - however Python's os.path.exists seems to handle that just fine.  thefourtheye I will test this command asap. thanks</span>
<span class="comment-copy">OK couldn't get your code to work so I revised with also taking note to Dan D's:  <code>from string import ascii_uppercase import os   def get_usb_drive():     for drive in ascii_uppercase:          if os.path.exists('%s:\\File.ID' % drive):             drive='%s:\\' % drive             print('USB mounted to', drive)     return ""  drive = get_usb_drive() while drive == "":     print('Please plug in our USB drive and press any key to continue...', end="")     input()     drive = get_usb_drive()</code>  Issue now, it loops even if the drive letter is found. It's probably something simple, alas, I'm a noob</span>
<span class="comment-copy">Please edit and include what you tried in your question itself</span>
<span class="comment-copy">Apologies, updated original entry.</span>
<span class="comment-copy">Thanks @Dan D combined this with thefourtheye's reply. Getting errors here, wondering if you can offer some assistance: <a href="http://stackoverflow.com/questions/29059399/searching-for-a-usb-in-python-is-returning-there-is-no-disk-in-drive" title="searching for a usb in python is returning there is no disk in drive">stackoverflow.com/questions/29059399/â€¦</a></span>
