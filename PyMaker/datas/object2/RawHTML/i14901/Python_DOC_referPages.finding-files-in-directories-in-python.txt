<div class="post-text" itemprop="text">
<p>I've been doing some scripting where I need to access the os to name images (saving every subsequent zoom of the Mandelbrot set upon clicking) by counting all of the current files in the directory and then using %s to name them in the string after calling the below function and then adding an option to delete them all</p>
<p>I realize the below will always grab the absolute path of the file but assuming we're always in the same directory is there not a simplified version to grab the current working directory </p>
<pre><code>def count_files(self):
     count = 0
     for files in os.listdir(os.path.abspath(__file__))):
         if files.endswith(someext):
             count += 1
     return count

def delete_files(self):
     for files in os.listdir(os.path.abspath(__file__))):
         if files.endswith(.someext):
             os.remove(files)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you're doing the <code>.endswith</code> thing, I think the <a href="https://docs.python.org/3/library/glob.html" rel="nofollow"><code>glob</code></a> module might be of some interest.</p>
<p>The following prints all files in the current working directory with the extension .py.  Not only that, it returns only the filename, not the path, as you said you wanted:</p>
<pre><code>import glob

for fn in glob.glob('*.py'): print(fn)
</code></pre>
<p>Output:</p>
<pre>
temp1.py
temp2.py
temp3.py
_clean.py
</pre>
<p><strong>Edit</strong>: re-reading your question, I'm unsure of what you were <em>really</em> asking.  If you wanted an easier way to get the current working directory than</p>
<pre><code>os.path.abspath(__file__) 
</code></pre>
<p>Then yes, <a href="https://docs.python.org/3/library/os.html#os.getcwd" rel="nofollow"><code>os.getcwd()</code></a></p>
<p>But <code>os.getcwd()</code> will change if you change the working directory in your script (e.g. via <a href="https://docs.python.org/3/library/os.html#os.chdir" rel="nofollow"><code>os.chdir()</code></a>, whereas your method will not.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://pypi.python.org/pypi/antipathy" rel="nofollow">antipathy</a>* it gets a little easier:</p>
<pre><code>from antipathy import Path

def count_files(pattern):
    return len(Path(__file__).glob(pattern))

def deletet_files(pattern):
    Path(__file__).unlink(pattern)
</code></pre>
<p>*Disclosure: I'm the author of antipathy.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/os.path.html#os.path.dirname" rel="nofollow"><code>os.path.dirname(path)</code></a> to get the parent directory of the thing <code>path</code> points to.</p>
<pre><code>def count_files(self):
 count = 0
 for files in os.listdir(os.path.dirname(os.path.abspath(__file__)))):
     if files.endswith(someext):
         count += 1
 return count
</code></pre>
</div>
<span class="comment-copy">Yes that's what's i was looking for sorry if that was unclear.</span>
