<div class="post-text" itemprop="text">
<p>I have a string like <code>"Titile Something/17"</code>. I need to cut out <code>"/NNN"</code> part which can be <code>3, 2, 1</code> digit number or may not be present.</p>
<p>How you do this in python? Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>\d{0,3}</code> matches from zero upto three digits. <code>$</code> asserts that we are at the end of a line.</p>
<pre><code>re.search(r'/\d{0,3}$', st).group()
</code></pre>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; re.search(r'/\d{0,3}$', 'Titile Something/17').group()
'/17'
&gt;&gt;&gt; re.search(r'/\d{0,3}$', 'Titile Something/1').group()
'/1'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need RegEx here, simply use the built-in <a href="https://docs.python.org/3/library/stdtypes.html#str.rindex" rel="nofollow noreferrer"><code>str.rindex</code></a> function and <a href="https://stackoverflow.com/q/509211/1903116">slicing</a>, like this</p>
<pre><code>&gt;&gt;&gt; data = "Titile Something/17"
&gt;&gt;&gt; data[:data.rindex("/")]
'Titile Something'
&gt;&gt;&gt; data[data.rindex("/") + 1:]
'17'
</code></pre>
<p>Or you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.rpartition" rel="nofollow noreferrer"><code>str.rpartition</code></a>, like this</p>
<pre><code>&gt;&gt;&gt; data.rpartition('/')[0]
'Titile Something'
&gt;&gt;&gt; data.rpartition('/')[2]
'17'
&gt;&gt;&gt; 
</code></pre>
<p><strong>Note:</strong> This will get any string after the last <code>/</code>. Use it with caution.</p>
<p>If you want to make sure that the split string is actually full of numbers, you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow noreferrer"><code>str.isdigit</code></a> function, like this</p>
<pre><code>&gt;&gt;&gt; data[data.rindex("/") + 1:].isdigit()
True
&gt;&gt;&gt; data.rpartition('/')[2].isdigit()
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>data = "Titile Something/17"

print data.split("/")[0]
'Titile Something' 
print data.split("/")[-1] #last part string after separator /
'17'
</code></pre>
<p>or</p>
<pre><code>print data.split("/")[1] # next part after separator in this case this is the same
'17'
</code></pre>
<p>when You want add this to the list use strip() to remove newline "\n"</p>
<pre><code>print data.split("/")[-1].strip()
'17'
</code></pre>
<p>~             </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I need to cut out "/NNN"</p>
</blockquote>
<pre><code>x = "Titile Something/17"
print re.sub(r"/.*$","",x)   #cuts the part after /
print re.sub(r"^.*?/","",x)  #cuts the part before /
</code></pre>
<p>Using <code>re.sub</code> you can what you want.</p>
</div>
<span class="comment-copy">Please provide an example of what you have already tried</span>
<span class="comment-copy">The deal is you show us what you've tried and code and how you'd approach the problem, SO is not a code writing service</span>
<span class="comment-copy">@EdChum never thought about asking people write code for me, but a code sample - feedback is extremely helpful.</span>
<span class="comment-copy">Nice, but not so readable :) <b>thefourtheye</b>'s sample better, how do you think?</span>
<span class="comment-copy">@DmitrijA fourtheye's sample would work on <code>"Titile Something/foo"</code> input also. But i think you want the last part which has zero or upto three digits.</span>
<span class="comment-copy">Yes you are correct here. But if there is no number, there is no slash also. For this i have to check result is not <code>None</code> before calling <code>.group()</code> on it.</span>
<span class="comment-copy">i think you could easily check whether <code>re.search</code> returns a match object or not.</span>
<span class="comment-copy">Thanks for input and welcome. But  <code>split()</code> returns an array of items split by /, this not 100% matches my task.</span>
