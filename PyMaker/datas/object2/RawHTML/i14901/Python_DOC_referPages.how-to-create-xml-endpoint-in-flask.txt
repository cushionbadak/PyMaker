<div class="post-text" itemprop="text">
<p>I have the following property in SQLAlchemy:  </p>
<pre><code>@property
def serialize(self):
    return {
        'name' : self.name,
        'description' : self.description,
        'id' : self.id,
        'price' : self.price,
        'course' : self.course,
    }
</code></pre>
<p>For JSON, I just used <code>jsonify()</code>, how can I do it for XML?</p>
</div>
<div class="post-text" itemprop="text">
<p>All <code>jsonify</code> is <a href="https://github.com/mitsuhiko/flask/blob/ec5811d0a15dc5ca2c5f231ac6aa79f9a107776e/flask/json.py#L247-L251" rel="nofollow">doing</a> is dumping the arguments passed to it with <code>json</code> and setting the content-type of the response to <code>application/json</code>.  You would do the exact same thing for XML: dump the data (Python has the built-in <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree" rel="nofollow">etree</a> library or there's the more powerful <a href="http://lxml.de/" rel="nofollow">lxml</a>) and set the content-type to <code>application/xml</code>.</p>
<p>There are many ways you could represent data using XML, so that's up to you, but the basic outline is:</p>
<pre><code>import xml.etree.ElementTree as ET
root = ET.element('root')  # name the root whatever you want
# add your data to the root node in the format you want
return app.response_class(ET.dump(root), mimetype='application/xml')
</code></pre>
</div>
