<div class="post-text" itemprop="text">
<p>I'm trying to load a CSV file to Amazon S3 with Python. I need to know CSV file's modification time. I'm using ftplib to connect FTP with Python (2.7).</p>
</div>
<div class="post-text" itemprop="text">
<h1>MLST or MDTM</h1>
<p>While you can retrieve a timestamp of an individual file over FTP with <code>MLST</code> or <code>MDTM</code> commands, neither is supported by ftplib.</p>
<p>Of course you can implement the <code>MLST</code> or <code>MDTM</code> on your own using <a href="https://docs.python.org/3/library/ftplib.html#ftplib.FTP.voidcmd" rel="nofollow noreferrer"><code>FTP.voidcmd</code></a>.</p>
<p>See:</p>
<ul>
<li><a href="https://tools.ietf.org/html/rfc3659#section-3" rel="nofollow noreferrer">3. File Modification Time (MDTM)</a></li>
<li><a href="https://tools.ietf.org/html/rfc3659#section-7" rel="nofollow noreferrer">7. Listings for Machine Processing (MLST and MLSD)</a></li>
</ul>
<p>A simple example for <code>MDTM</code>:</p>
<pre><code>from ftplib import FTP
from dateutil import parser

# ... (connection to FTP)

timestamp = ftp.voidcmd("MDTM /remote/path/file.txt")[4:].strip()

time = parser.parse(timestamp)

print(time)
</code></pre>
<hr/>
<h1>MLSD</h1>
<p>The only command explicitly supported by the ftplib library that can return standardized file timestamp is <code>MLSD</code> via <a href="https://docs.python.org/3/library/ftplib.html#ftplib.FTP.mlsd" rel="nofollow noreferrer"><code>FTP.mlsd</code> method</a>. Though its use makes sense only if you want to retrieve timestamps for more files.</p>
<ul>
<li>Retrieve a complete directory listing using <code>MLSD</code></li>
<li>Search the returned collection for the file(s) you want</li>
<li>Retrieve <code>modify</code> fact</li>
<li>Parse it according to the specification, <code>YYYYMMDDHHMMSS[.sss]</code></li>
</ul>
<p>For details, refer to <a href="https://tools.ietf.org/html/rfc3659" rel="nofollow noreferrer">RFC 3659</a>, particularly the:</p>
<ul>
<li><a href="https://tools.ietf.org/html/rfc3659#section-7.5.3" rel="nofollow noreferrer">7.5.3. The modify Fact</a> section</li>
<li><a href="https://tools.ietf.org/html/rfc3659#section-2.3" rel="nofollow noreferrer">2.3. Times</a> section</li>
</ul>
<pre><code>from ftplib import FTP
from dateutil import parser

# ... (connection to FTP)

files = ftp.mlsd("/remote/path")

for file in files:
    name = file[0]
    timestamp = file[1]['modify']
    time = parser.parse(timestamp)
    print(name + ' - ' + str(time))
</code></pre>
<hr/>
<p>Note that times returned by <code>MLST</code>, <code>MLSD</code> and <code>MDTM</code> are in UTC (unless the server is broken). So you may need to correct them for your local timezone. </p>
<p>Again, refer to RFC 3659 <a href="https://tools.ietf.org/html/rfc3659#section-2.3" rel="nofollow noreferrer">2.3. Times</a> section:</p>
<blockquote>
<p>Time values are always represented in UTC (GMT), and in the Gregorian
  calendar regardless of what calendar may have been in use at the date
  and time indicated at the location of the server-PI.</p>
</blockquote>
<hr/>
<h1>LIST</h1>
<p>If the FTP server does not support any of <code>MLST</code>, <code>MLSD</code> and <code>MDTM</code>, all you can do is to use an obsolete <code>LIST</code> command. That involves parsing a proprietary listing it returns.</p>
<p>A common *nix listing is like:</p>
<pre class="lang-none prettyprint-override"><code>-rw-r--r-- 1 user group           4467 Mar 27  2018 file1.zip
-rw-r--r-- 1 user group         124529 Jun 18 15:31 file2.zip
</code></pre>
<p>With a listing like this, this code will do:</p>
<pre><code>from ftplib import FTP
from dateutil import parser

# ... (connection to FTP)

lines = []
ftp.dir("/remote/path", lines.append)

for line in lines:
    tokens = line.split(maxsplit = 9)
    name = tokens[8]
    time_str = tokens[5] + " " + tokens[6] + " " + tokens[7]
    time = parser.parse(time_str)
    print(name + ' - ' + str(time))
</code></pre>
<hr/>
<h1>Finding the latest file</h1>
<p>See also <a href="https://stackoverflow.com/q/8990598/850848#51055995">Python FTP get the most recent file by date</a>. </p>
</div>
<div class="post-text" itemprop="text">
<p>When I want to change the file modification time, I use an FTP client on the console.
Log on to a remote FTP ftp <em>ftp.dic.com</em></p>
<ul>
<li><em>cd</em> commands go to the correct directory</li>
<li><strong><em>SITE</em></strong> command to move the extended command mode</li>
<li><em>UTIME <strong>somefile.txt</strong> 20050101123000 20050101123000 20050101123000 UTC</em> </li>
</ul>
<p>change the access time, modification time, it's time to create a directory on 2005-01-01 12:30:00 <strong>somefile.txt</strong></p>
<p>Complete example:</p>
<blockquote>
<p>site UTIME somefile.txt 20150331122000 20150331122000 20150331122000 UTC</p>
</blockquote>
<p>Please feel free to sit back and wish you a pleasant journey in time :)</p>
</div>
<span class="comment-copy">See <code>os.stat</code> for the 3 date-time stamps.  Note that the modify time may mean different things on different systems.</span>
<span class="comment-copy">Thanks for reply! I'm using: "ftp.sendcmd('MDTM '+filename)" but it's different then my time stamp. On the ftp last modife time is 01:00 but when I try to check with python it comes 23:00. How can I fix that or add 2 more hours to my code?</span>
<span class="comment-copy">See update to my answer</span>
<span class="comment-copy">I checked my timezone and everything is fine. When I try to check current date with python, it's true. But FTP modify time still incorrect. When I try to check FTP, it's same with my country, true.</span>
<span class="comment-copy">The value you get from the <code>MDTM</code> is in UTC timezone. It has nothing to do with what timezone is set in your local machine or on the server. You have to convert the value you get from the FTP server yourself (programmatically) to your local timezone (if that's what you need).</span>
<span class="comment-copy">Yes, it's exactly what I need. But how can convert this UTC?</span>
<span class="comment-copy">Of course you can use this command in any ftp client.</span>
