<div class="post-text" itemprop="text">
<p>How can I include <code>package_data</code> for <code>sdist</code> without a MANIFEST.in file?</p>
<p>My setup.py looks like this:</p>
<pre><code>import setuptools

setuptools.setup(
    name='foo',
    version='2015.3',
    license='commercial',
    packages=setuptools.find_packages(),

    package_data={'': ['foo/bar.txt']},
)
</code></pre>
<p>Versions:</p>
<pre><code>user@host&gt; python
Python 2.7.6 (default, Mar 22 2014, 22:59:56) 
&gt;&gt;&gt; import setuptools
&gt;&gt;&gt; setuptools.version.__version__
'3.6'
</code></pre>
<p>I just can't get <code>foo/bar.txt</code> included.</p>
<p>Or is <a href="http://blog.codekills.net/2011/07/15/lies,-more-lies-and-python-packaging-documentation-on--package_data-/" rel="noreferrer">this blog post</a> still true?  <a href="http://blog.codekills.net/2011/07/15/lies,-more-lies-and-python-packaging-documentation-on--package_data-/" rel="noreferrer">http://blog.codekills.net/2011/07/15/lies,-more-lies-and-python-packaging-documentation-on--package_data-/</a></p>
<p><em>Over the last hour, though, I've learned that these statements are somewhere between “dangerously misleading” and “damn lies”.
This is because the primary type of Python package is a source package, and the canonical method for creating a source package is by using <code>setup.py sdist</code>. However, the data specified in package_data are not included in source distributions — they are only included in binary (<code>setup.py bdist</code>) distributions and installs (<code>setup.py install</code>).</em></p>
<p>How can I include <code>package_data</code> for <code>sdist</code> without a MANIFEST.in file?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>TL;DR</strong>: The keys in the <code>package_data</code> dictionaries are  <strong>packages</strong>; the values are lists of globs. <code>''</code> is not a valid name for any Python package. </p>
<p>If you want to have <code>bar.txt</code> be installed next to the <code>__init__.py</code> of package <code>foo</code>, use</p>
<pre><code> package_data={'foo': ['bar.txt']}
</code></pre>
<hr/>
<p>I have the layout:</p>
<pre><code>foo/
        __init__.py
        bar.txt
setup.py
</code></pre>
<p>Now, if <code>foo</code> is a package like above, do:</p>
<pre><code>import setuptools

setuptools.setup(
    name='foo',
    version='2015.3',
    license='commercial',
    packages=setuptools.find_packages(),
    package_data={'foo': ['bar.txt']},
)
</code></pre>
<p>And after <code>python setup.py sdist</code>, I check the contents of <code>dist/foo-2015.3.tar.gz</code></p>
<pre><code>% tar tfz dist/foo-2015.3.tar.gz
...
foo-2015.3/foo/bar.txt
...
</code></pre>
<p>However, if I run your <code>setup.py</code> with <code>package_data={'': ['foo/bar.txt']}</code>, I can concur that the <code>foo/bar.txt</code> will <em>not</em> be added to the source distribution, <em>except if the <code>foo-2015.3.egg-info/SOURCES.txt</code> already has the line for <code>foo/bar.txt</code> - in that case the file will pop up in the source distribution too</em></p>
<p>No manifest was used; the setuptools version was <code>3.6</code> (I deliberately installed the same, old version that you were using):</p>
<pre><code>&gt;&gt;&gt; import setuptools
&gt;&gt;&gt; setuptools.__version__
'3.6'
</code></pre>
<hr/>
<p>The behaviour above also works in standard <code>distutils</code>: <a href="https://docs.python.org/3/distutils/setupscript.html#installing-package-data" rel="noreferrer">2.6 Installing package data</a> of the "legacy" distutils documentation; with a comment for 2.7, 3.1:</p>
<blockquote>
<p>Changed in version <em>[2.7, 3.1]</em>: All the files that match <code>package_data</code> will be added to the <code>MANIFEST</code> file <em>if no template is provided</em>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>I had the same issue and fixed it be removing :</p>
<pre><code>include_package_data=True
</code></pre>
</div>
<span class="comment-copy">Thanks for the detailed answer. Unfortunately, I just followed these instructions verbatim and <code>bar.txt</code> failed to appear in <code>foo-2015.3.tar.gz</code>. You mention deliberately using an old version of setuptools, but you don't say why. Could that explain why it's not working?</span>
<span class="comment-copy">This answer is not entirely correct. Empty string <code>''</code> is a special key that applies to all packages as described in <a href="https://setuptools.readthedocs.io/en/latest/setuptools.html#including-data-files" rel="nofollow noreferrer">here</a>:   Notice that if you list patterns in package_data under the empty string, these patterns are used to find files in every package, even ones that also have their own patterns listed.</span>
<span class="comment-copy">This fixed it for me as well.</span>
<span class="comment-copy">Can somebody explain why?</span>
