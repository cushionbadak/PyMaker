<div class="post-text" itemprop="text">
<p>When defining a function within a class in python 3.x does it matter in which order you define functions ?</p>
<p>Is class code pre-complied before you would call the class in main ? </p>
</div>
<div class="post-text" itemprop="text">
<p>The order of class attributes does not matter except in specific cases (e.g. properties when using decorator notation for the accessors). The class object itself will be instantiated once the <code>class</code> block has exited.</p>
</div>
<div class="post-text" itemprop="text">
<p>By default, all names defined in the block of code right within the <code>class</code> statement become keys in a <code>dict</code> (that's passed to the metaclass to actually instantiate the class when said block is all done).  In Python 3 you can change that (the metaclass can tell Python to use another mapping, such as an <code>OrderedDict</code>, if it needs to make definition order significant), but that's <strong>not</strong> the default.</p>
</div>
<span class="comment-copy"><i>"The class object itself will be instantiated once the class block has exited"</i> Isn't the class object instantiated when the <code>class</code> statement is encountered -- but <i>bound</i> to the class name only on exit of the statement ?</span>
<span class="comment-copy">Thanks , Thats what i thought , just wanted to make sure. thanks for clearing it up</span>
<span class="comment-copy">@SylvainLeroux The class block is executed with some namespace (a dict-like object provided by the metaclass) to collect class members, then the populated namespace is passed to the metaclass to create the actual class object. See <a href="https://docs.python.org/3/reference/datamodel.html#customizing-class-creation" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
