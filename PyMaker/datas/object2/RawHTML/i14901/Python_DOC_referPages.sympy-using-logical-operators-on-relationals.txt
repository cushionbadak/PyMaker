<div class="post-text" itemprop="text">
<p>Is this possible? What I want to do is something like this: <code>sympify('2&gt;1 | 2&lt;1')</code> </p>
<p>I pretty much only need 'or' and 'and'. I also tried doing <code>sympify('2&gt;1') | sympify('2&lt;1')</code>. Ideally I would want to just be able to send in a string with relations and logical operators to a function and have it return true or false. (i.e. <code>'(2&gt;1 | 2&lt;1) &amp; 3==3'</code>)</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow">operator precedence</a> in Python/SymPy: you need to surround the inequalities with parentheses otherwise <code>1 | 2</code> is evaluated first and an error is raised by SymPy. You can write:</p>
<pre><code>&gt;&gt;&gt; sympify('(2&gt;1) | (2&lt;1)')
True # SymPy bool
</code></pre>
<p>Of course, you don't really need SymPy's power for logical expressions just involving <code>&amp;</code> and <code>|</code>. Python's <code>bool</code> type supports the operators although you still need parentheses to ensure the correct result: </p>
<pre><code>&gt;&gt;&gt; (2&gt;1) | (2&lt;1)
True # Python bool
</code></pre>
</div>
<span class="comment-copy">Thanks! bool doesn't handle strings though, and i'm doing it on user input so I don't really know how many inequalities will be in a string. I figured it would be easier to use sympy than parsing the strings myself.</span>
