<div class="post-text" itemprop="text">
<p>I have a list: </p>
<pre><code>    data=[ [["apple",2]], [["cake",5],["cake",8]], [["chocolate",3],["chocolate",9],["chocolate",10]],[["grapes",6]] ]
</code></pre>
<p>This list (data) consists of lists (data[x]), which consists of lists (data[x][x]) containing the same word together, each with a number with it. I want to find the average of the number for each word (any floats rounded to integer). </p>
<p>For example, there are 2 cakes in the list (data[1]) and in the same list are the numbers 5 and 8. I want the average out of those two numbers, which would be 7, and so data[1] would be changed to ["cake",7]</p>
<p>If this is done for each element in the list, the result should be: </p>
<pre><code>    data=[["apple",2],["cake",7],["chocolate",7],["grapes",6]]
</code></pre>
<p>How could this be done? Thanks :3</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>zip</code> within a list comprehension:</p>
<pre><code>&gt;&gt;&gt; from __future__ import division
&gt;&gt;&gt; [[set(i).pop(),round(sum(j)/len(j),0)] for i,j in [zip(*i) for i in data]]
[['apple', 2.0], ['cake', 7.0], ['chocolate', 7.0], ['grapes', 6.0]]
</code></pre>
<p>The <code>zip</code> function here would separate your values from names in nested lists:</p>
<pre><code>&gt;&gt;&gt; [zip(*i) for i in data]
[[('apple',), (2,)], [('cake', 'cake'), (5, 8)], [('chocolate', 'chocolate', 'chocolate'), (3, 9, 10)], [('grapes',), (6,)]]
</code></pre>
<p>Then you can loop over them and calculate the avg and use <code>set</code> to select the set of names!also note that is have used <code>round</code> function as you wanted the avg for the <code>cake</code> to be <code>7</code> as its 6.5 .the round function will do the job for you </p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it with 2 list comprehensions and <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.mean.html" rel="nofollow"><code>numpy.mean</code></a> function or <a href="https://docs.python.org/3/library/statistics.html" rel="nofollow"><code>statistics.mean</code></a> function if you use python 3:</p>
<pre><code>In [1]: [[x[0][0], round(np.mean([y[1] for y in x]))] for x in data]
Out[1]: [['apple', 2.0], ['cake', 7.0], ['chocolate', 7.0], ['grapes', 6.0]]
</code></pre>
<p>If you don't have mean function, you can calculate it like this</p>
<pre><code>In [2]: tmp = ([x[0][0], [y[1] for y in x]] for x in data)
In [3]: [[x[0], round(sum(x[1])*1.0/len(x[1]))] for x in tmp]
Out[3]: [['apple', 2.0], ['cake', 7.0], ['chocolate', 7.0], ['grapes', 6.0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try</p>
<pre><code>x=[ [["apple",2]], [["cake",5],["cake",8]], [["chocolate",3],["chocolate",9],["chocolate",10]],[["grapes",6]] ]
y=[]
for i in x:
    avg=0
    c=0
    for k in i:
        avg=k[1]+avg
        c=c+1
    avg=avg/c
    y.append([k[0],avg])
    avg=0
    c=0

print y
</code></pre>
<p>Output:</p>
<pre><code>[['apple', 2], ['cake', 6], ['chocolate', 7], ['grapes', 6]]
</code></pre>
</div>
<span class="comment-copy">Thank you very much (and for answering yesterday's question as well). However I am only familiar with for loops in the format:  <code>for i in x:     #code...</code> How does it work if you use "for" in the way you did there? Where you had <code>[list] for x,y in [list]</code></span>
<span class="comment-copy">You're welcome ;) as you can see the result of <code>[zip(*i) for i in data]</code> contain lists with 2 element so <code>for i,j in</code> will assign the first element to <code>i</code> and the second to <code>j</code>.</span>
<span class="comment-copy">Oh no... <code>numpy.mean</code> did not work in my code. I imported <code>numpy</code> but it came up with a syntax error, highlighting <code>numpy.mean</code>'s <code>numpy</code> red. What should I do? If <code>numpy.mean</code> is not going to work, what is an alternative?  And thank you for answering my above question :)</span>
<span class="comment-copy">@MikasaAckerman what about <code>numpy.average</code>?</span>
<span class="comment-copy">@MikasaAckerman i think this is another problem you can ask it as  a new question!</span>
<span class="comment-copy">Thank you. Any possible ways for the <code>round()</code> function to return for example <code>2</code> instead of <code>2.0</code>?</span>
<span class="comment-copy">yes, you can use <code>int</code> as a function instead of <code>round</code></span>
<span class="comment-copy">Huh! vks, when did ya start answering non-regex?</span>
<span class="comment-copy">@BhargavRao QA Automation Python :P.......still learning..........dont have the level of expertise you have.........just looping and stuff.........</span>
<span class="comment-copy">@BhargavRao nah rarely i use it :P......... vksingh1512@gmail.com and on  fb as well by this id :)</span>
<span class="comment-copy">I have any regex doubts, I'll mail directly</span>
<span class="comment-copy">@BhargavRao sure!!!! drop me a test mail :P..........doubts regarding python will come ur way :)</span>
