<div class="post-text" itemprop="text">
<p>I have a xml file as text file,as follows:-</p>
<pre><code>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;!DOCTYPE dblp SYSTEM "dblp.dtd"&gt;
&lt;dblp&gt;
&lt;article mdate="2011-01-11" key="journals/acta/Saxena96"&gt;
&lt;author&gt;Sanjeev Saxena&lt;/author&gt;
&lt;title&gt;Parallel Integer Sorting and Simulation Amongst CRCW Models.&lt;/title&gt;
&lt;pages&gt;607-619&lt;/pages&gt;
&lt;year&gt;1996&lt;/year&gt;
&lt;volume&gt;33&lt;/volume&gt;
&lt;journal&gt;Acta Inf.&lt;/journal&gt;
&lt;number&gt;7&lt;/number&gt;
&lt;url&gt;db/journals/acta/acta33.html#Saxena96&lt;/url&gt;
&lt;ee&gt;http://dx.doi.org/10.1007/BF03036466&lt;/ee&gt;
&lt;/article&gt;
&lt;article mdate="2011-01-11" key="journals/acta/Simon83"&gt;
&lt;author&gt;Hans-Ulrich Simon&lt;/author&gt;
&lt;title&gt;Pattern Matching in Trees and Nets.&lt;/title&gt;
&lt;pages&gt;227-248&lt;/pages&gt;
&lt;year&gt;1983&lt;/year&gt;
&lt;volume&gt;20&lt;/volume&gt;
&lt;journal&gt;Acta Inf.&lt;/journal&gt;
&lt;url&gt;db/journals/acta/acta20.html#Simon83&lt;/url&gt;
&lt;ee&gt;http://dx.doi.org/10.1007/BF01257084&lt;/ee&gt;
&lt;/article&gt;
</code></pre>
<p>If i type 'Parallel',then i should obtain, the Entire title name,followed by 'author','pages','year','volume','journal'</p>
<p>as sample output as:-</p>
<pre><code>Sanjeev Saxena
Parallel Integer Sorting and Simulation Amongst CRCW Models.
607-619
1996
33
Acta Inf.
</code></pre>
<p>How can i perform the above actions using regex? Please help!</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>The best way for parsing a <code>xml</code> or <code>html</code> doc is using a proper html parser, like <code>beautifulsoup</code> or <code>lxml</code> module, but as an alternative you can use the following pattern :</p>
<pre><code>&gt;&gt;&gt; s="""&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
... &lt;!DOCTYPE dblp SYSTEM "dblp.dtd"&gt;
... &lt;dblp&gt;
... &lt;article mdate="2011-01-11" key="journals/acta/Saxena96"&gt;
... &lt;author&gt;Sanjeev Saxena&lt;/author&gt;
... &lt;title&gt;Parallel Integer Sorting and Simulation Amongst CRCW Models.&lt;/title&gt;
... &lt;pages&gt;607-619&lt;/pages&gt;
... &lt;year&gt;1996&lt;/year&gt;
... &lt;volume&gt;33&lt;/volume&gt;
... &lt;journal&gt;Acta Inf.&lt;/journal&gt;
... &lt;number&gt;7&lt;/number&gt;
... &lt;url&gt;db/journals/acta/acta33.html#Saxena96&lt;/url&gt;
... &lt;ee&gt;http://dx.doi.org/10.1007/BF03036466&lt;/ee&gt;
... &lt;/article&gt;
... &lt;article mdate="2011-01-11" key="journals/acta/Simon83"&gt;
... &lt;author&gt;Hans-Ulrich Simon&lt;/author&gt;
... &lt;title&gt;Pattern Matching in Trees and Nets.&lt;/title&gt;
... &lt;pages&gt;227-248&lt;/pages&gt;
... &lt;year&gt;1983&lt;/year&gt;
... &lt;volume&gt;20&lt;/volume&gt;
... &lt;journal&gt;Acta Inf.&lt;/journal&gt;
... &lt;url&gt;db/journals/acta/acta20.html#Simon83&lt;/url&gt;
... &lt;ee&gt;http://dx.doi.org/10.1007/BF01257084&lt;/ee&gt;
... &lt;/article&gt;"""
&gt;&gt;&gt; import re
&gt;&gt;&gt; l=['author','pages','year','volume','journal']
&gt;&gt;&gt; pat=r'|'.join(('&lt;{}&gt;(.*)&lt;/{}&gt;'.format(i,i) for i in l))
&gt;&gt;&gt; [j  for i in re.findall(pat,s) for j in i if j]
['Sanjeev Saxena', '607-619', '1996', '33', 'Acta Inf.', 'Hans-Ulrich Simon', '227-248', '1983', '20', 'Acta Inf.']
</code></pre>
<p>and if you want to get the words from input, you need the following extra commands :</p>
<pre><code>names=raw_input('enter the named (separate with space): ')
l=names.split()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use an <strong>XML Parser</strong> instead.</p>
<p>Working example using <a href="http://lxml.de/" rel="nofollow"><code>lxml</code></a>:</p>
<pre><code>import lxml.etree as ET

data = """&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
&lt;!DOCTYPE dblp SYSTEM "dblp.dtd"&gt;
&lt;dblp&gt;
        &lt;article mdate="2011-01-11" key="journals/acta/Saxena96"&gt;
                &lt;author&gt;Sanjeev Saxena&lt;/author&gt;
                &lt;title&gt;Parallel Integer Sorting and Simulation Amongst CRCW Models.&lt;/title&gt;
                &lt;pages&gt;607-619&lt;/pages&gt;
                &lt;year&gt;1996&lt;/year&gt;
                &lt;volume&gt;33&lt;/volume&gt;
                &lt;journal&gt;Acta Inf.&lt;/journal&gt;
                &lt;number&gt;7&lt;/number&gt;
                &lt;url&gt;db/journals/acta/acta33.html#Saxena96&lt;/url&gt;
                &lt;ee&gt;http://dx.doi.org/10.1007/BF03036466&lt;/ee&gt;
                &lt;/article&gt;
                &lt;article mdate="2011-01-11" key="journals/acta/Simon83"&gt;
                &lt;author&gt;Hans-Ulrich Simon&lt;/author&gt;
                &lt;title&gt;Pattern Matching in Trees and Nets.&lt;/title&gt;
                &lt;pages&gt;227-248&lt;/pages&gt;
                &lt;year&gt;1983&lt;/year&gt;
                &lt;volume&gt;20&lt;/volume&gt;
                &lt;journal&gt;Acta Inf.&lt;/journal&gt;
                &lt;url&gt;db/journals/acta/acta20.html#Simon83&lt;/url&gt;
                &lt;ee&gt;http://dx.doi.org/10.1007/BF01257084&lt;/ee&gt;
        &lt;/article&gt;
&lt;/dblp&gt;
"""

root = ET.fromstring(data)

title = 'Parallel'
article = root.xpath('.//article[starts-with(title, "%s")]' % title)[0]

for prop in ['author', 'pages', 'year', 'volume', 'journal']:
    print article.findtext(prop)
</code></pre>
<p>Prints:</p>
<pre><code>Sanjeev Saxena
607-619
1996
33
Acta Inf.
</code></pre>
</div>
<span class="comment-copy">use a xml parser</span>
<span class="comment-copy">Please <a href="http://stackoverflow.com/a/1732454/918959">read this answer</a> - it applies to XML as well. For Python you can use <code>lxml</code>, BeautifulSoup 4 (<code>bs4</code>), or about anything from <a href="https://docs.python.org/3/library/xml.html" rel="nofollow noreferrer">the standard library</a></span>
<span class="comment-copy"><a href="http://blog.codinghorror.com/parsing-html-the-cthulhu-way/" rel="nofollow noreferrer">blog.codinghorror.com/parsing-html-the-cthulhu-way</a></span>
<span class="comment-copy">can i use it for a large xml file of 1gb?</span>
<span class="comment-copy">@adsalila no not at all! the proper way is using a <code>xml</code> parser! any way you can try and bechmark by yourself too see the result!</span>
<span class="comment-copy">can u please tell me the variable name used above,that searches for 'Parallel' or any user input?</span>
<span class="comment-copy">@adsalila you mean that instead an initialed list on names (<code>l</code>)you want to ge them from input?</span>
<span class="comment-copy">yes yes,could u please specify me?</span>
<span class="comment-copy">its an large xml file of 1GB what i am to use,Can i use this for that also?</span>
<span class="comment-copy">@adsalila yup, you may want to switch to <a href="http://lxml.de/parsing.html#iterparse-and-iterwalk" rel="nofollow noreferrer"><code>iterparse()</code></a> in this case.</span>
<span class="comment-copy">@adsalila if you've stick to <code>lxml</code> here, please accept the answer. Thanks.</span>
