<div class="post-text" itemprop="text">
<p>I have two dictionaries that I want to match by key in order to create a new dictionary with every value in dict1 as key and an list of each matching key's values in dict2 as the value in the output. The example should be less confusing:</p>
<pre><code>dict1 = {'AAA': 'id5', 'BBB': 'id3', 'CCC': 'id8', 'DDD': 'id3'}
dict2 = {'AAA': 'value8', 'BBB': 'value24', 'CCC': 'value13', 'DDD': 'value2'}
</code></pre>
<p>What I have tried:</p>
<pre><code>keys = set(dict1) &amp; set(dict2)
complete = {}
for x in keys:
    key = dict1[x]
    value = dict2[x]
    complete[key] = [value]
</code></pre>
<p>Output:</p>
<pre><code>complete = {'id3': ['value24'], 'id5': ['value8'], 'id8': ['value13']}
</code></pre>
<p>Desired output: </p>
<pre><code>complete = {'id3': ['value24', 'value2'], 'id5': ['value8'], 'id8': ['value13']}
</code></pre>
<p>In reality the dictionaries are quite large so performance is an important factor. Any help is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/stdtypes.html#dict.keys" rel="nofollow"><code>dict.keys()</code> method</a> returns a <a href="https://docs.python.org/3/library/stdtypes.html#dictionary-view-objects" rel="nofollow"><em>dictionary view</em></a> that already acts as a set. All you need to do is take the union of those views.</p>
<p>If your values from <code>dict1</code> are not unique, use <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow"><code>dict.setdefault()</code></a> to build lists of values:</p>
<pre><code>output = {}
for key in dict1.keys() &amp; dict2.keys():
    output.setdefault(dict1[key], []).append(dict2[key])
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; dict1 = {'AAA': 'id5', 'BBB': 'id3', 'CCC': 'id8', 'DDD': 'id3'}
&gt;&gt;&gt; dict2 = {'AAA': 'value8', 'BBB': 'value24', 'CCC': 'value13', 'DDD': 'value2'}
&gt;&gt;&gt; output = {}
&gt;&gt;&gt; for key in dict1.keys() &amp; dict2.keys():
...     output.setdefault(dict1[key], []).append(dict2[key])
... 
&gt;&gt;&gt; output
{'id8': ['value13'], 'id3': ['value24', 'value2'], 'id5': ['value8']}
</code></pre>
<p>This is about as efficient as it'll get.</p>
</div>
<span class="comment-copy">why is <code>'id3'</code> used as it is not unique?</span>
<span class="comment-copy">@PadraicCunningham: that's the point; I misunderstood at first as well, but <i>values</i> from <code>dict1</code> are the <i>keys</i> in the output, paired with the values from the other dictionary.</span>
<span class="comment-copy">@MartijnPieters.  yep but <code>id3</code> appears twice so the keys should be <code>id5</code> and <code>id8</code> going by <i>create a new dictionary with every unique value in dict1 as key</i></span>
<span class="comment-copy">One instance of duplicates should be used. I just did not want to end up with multiple 'id3'.</span>
<span class="comment-copy">@PadraicCunningham: ah, yes, the wording is poorly chosen. The values are not unique. The intent is clear however. Every value should make a unique key, with the duplicates collapsed down into a list of values.</span>
