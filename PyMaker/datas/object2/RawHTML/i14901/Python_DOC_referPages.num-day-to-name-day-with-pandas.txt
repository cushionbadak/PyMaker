<div class="post-text" itemprop="text">
<p>If I use this funtion <code>pd.DatetimeIndex(dfTrain['datetime']).weekday</code> I get number of the day, but I don't find any function which give the name of de day... So I need to convert 0 to Monday, 1 to Tuestday and so on.</p>
<p>Here is an example of my dataframe:</p>
<pre><code>            datetime    season holiday workingday weather   temp    atemp   humidity    windspeed   count
    0   2011-01-01 00:00:00 1   0   0   1   9.84    14.395  81  0.0000  16
    1   2011-01-01 01:00:00 1   0   0   1   9.02    13.635  80  0.0000  40
    2   2011-01-01 02:00:00 1   0   0   1   9.02    13.635  80  0.0000  32
    3   2011-01-01 03:00:00 1   0   0   1   9.84    14.395  75  0.0000  13
    4   2011-01-01 04:00:00 1   0   0   1   9.84    14.395  75  0.0000  1
    5   2011-01-01 05:00:00 1   0   0   2   9.84    12.880  75  6.0032  1
    6   2011-01-01 06:00:00 1   0   0   1   9.02    13.635  80  0.0000  2
    7   2011-01-01 07:00:00 1   0   0   1   8.20    12.880  86  0.0000  3
    8   2011-01-01 08:00:00 1   0   0   1   9.84    14.395  75  0.0000  8
    9   2011-01-01 09:00:00 1   0   0   1   13.12   17.425  76  0.0000  14
</code></pre>
<p>Another question more, which is the difference between <code>pandas.DatetimeIndex.dayofweek</code>and <code>pandas.DatetimeIndex.weekday</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>One method, so long as datetime is already a datetime column is to apply <code>datetime.strftime</code> to get the string for the weekday:</p>
<pre><code>In [105]:

df['weekday'] = df[['datetime']].apply(lambda x: dt.datetime.strftime(x['datetime'], '%A'), axis=1)
df
Out[105]:
             datetime  season  holiday  workingday  weather   temp   atemp  \
0 2011-01-01 00:00:00       1        0           0        1   9.84  14.395   
1 2011-01-01 01:00:00       1        0           0        1   9.02  13.635   
2 2011-01-01 02:00:00       1        0           0        1   9.02  13.635   
3 2011-01-01 03:00:00       1        0           0        1   9.84  14.395   
4 2011-01-01 04:00:00       1        0           0        1   9.84  14.395   
5 2011-01-01 05:00:00       1        0           0        2   9.84  12.880   
6 2011-01-01 06:00:00       1        0           0        1   9.02  13.635   
7 2011-01-01 07:00:00       1        0           0        1   8.20  12.880   
8 2011-01-01 08:00:00       1        0           0        1   9.84  14.395   
9 2011-01-01 09:00:00       1        0           0        1  13.12  17.425   

   humidity  windspeed  count   weekday  
0        81     0.0000     16  Saturday  
1        80     0.0000     40  Saturday  
2        80     0.0000     32  Saturday  
3        75     0.0000     13  Saturday  
4        75     0.0000      1  Saturday  
5        75     6.0032      1  Saturday  
6        80     0.0000      2  Saturday  
7        86     0.0000      3  Saturday  
8        75     0.0000      8  Saturday  
9        76     0.0000     14  Saturday  
</code></pre>
<p>As to your other question, there is no difference between <code>dayofweek</code> and <code>weekday</code>.</p>
<p>It will be quicker to define a map of the weekday to String equivalent and call map on the weekday:</p>
<pre><code>dayOfWeek={0:'Monday', 1:'Tuesday', 2:'Wednesday', 3:'Thursday', 4:'Friday', 5:'Saturday', 6:'Sunday'}
df['weekday'] = df['datetime'].dt.dayofweek.map(dayOfWeek)
</code></pre>
<p>For version prior to <code>0.15.0</code> the following should work:</p>
<pre><code>import datetime as dt
df['weekday'] = df['datetime'].apply(lambda x: dt.datetime.strftime(x, '%A'))
</code></pre>
<p><strong>Version 0.18.1 and newer</strong></p>
<p>There is now a new convenience method <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.dt.weekday_name.html" rel="nofollow noreferrer"><code>dt.weekday_name</code></a> to do the above</p>
<p><strong>Version 0.23.0 and newer</strong></p>
<p>weekday_name is now depricated in favour of <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.dt.day_name.html" rel="nofollow noreferrer"><code>dt.day_name</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>In version <code>0.18.1</code> you can use new method <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.dt.weekday_name.html" rel="noreferrer"><code>dt.weekday_name</code></a>:</p>
<pre><code>df['weekday'] = df['datetime'].dt.weekday_name
print df
             datetime  season  holiday  workingday  weather   temp   atemp  \
0 2011-01-01 00:00:00       1        0           0        1   9.84  14.395   
1 2011-01-01 01:00:00       1        0           0        1   9.02  13.635   
2 2011-01-01 02:00:00       1        0           0        1   9.02  13.635   
3 2011-01-01 03:00:00       1        0           0        1   9.84  14.395   
4 2011-01-01 04:00:00       1        0           0        1   9.84  14.395   
5 2011-01-01 05:00:00       1        0           0        2   9.84  12.880   
6 2011-01-01 06:00:00       1        0           0        1   9.02  13.635   
7 2011-01-01 07:00:00       1        0           0        1   8.20  12.880   
8 2011-01-01 08:00:00       1        0           0        1   9.84  14.395   
9 2011-01-01 09:00:00       1        0           0        1  13.12  17.425   

   humidity  windspeed  count   weekday  
0        81     0.0000     16  Saturday  
1        80     0.0000     40  Saturday  
2        80     0.0000     32  Saturday  
3        75     0.0000     13  Saturday  
4        75     0.0000      1  Saturday  
5        75     6.0032      1  Saturday  
6        80     0.0000      2  Saturday  
7        86     0.0000      3  Saturday  
8        75     0.0000      8  Saturday  
9        76     0.0000     14  Saturday  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>dt.weekday_name</code> is <a href="https://pandas.pydata.org/pandas-docs/version/0.23.4/generated/pandas.Timestamp.weekday_name.html" rel="nofollow noreferrer">deprecated since <code>pandas 0.23.0</code></a>, instead, use <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.dt.day_name.html" rel="nofollow noreferrer"><code>dt.day_name()</code></a>:</p>
<pre><code>df.datetime.dt.day_name()

0    Saturday
1    Saturday
2    Saturday
3    Saturday
4    Saturday
5    Saturday
6    Saturday
7    Saturday
8    Saturday
9    Saturday
Name: datetime, dtype: object
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Adding to the previous <strong>correct</strong> answer from @jezrael, you can use this:</p>
<pre><code>import calendar
df['weekday'] = pd.Series(pd.Categorical(df['datetime'].dt.weekday_name, categories=list(calendar.day_name)))
</code></pre>
<p>which also provides your new categorical variable with <strong>order</strong> (in this example: 'Monday', ..., 'Sunday')  according to <a href="https://pandas.pydata.org/pandas-docs/stable/categorical.html#working-with-categories" rel="nofollow noreferrer">this</a>. This will possibly be helpful on next steps of your analysis.</p>
</div>
<span class="comment-copy">so why not use a 7-tuple with the names of the day?</span>
<span class="comment-copy">You can get an array of localised day names from <a href="https://docs.python.org/3/library/calendar.html#calendar.day_name" rel="nofollow noreferrer">calendar.day_name</a></span>
<span class="comment-copy">What is <code>dt</code>? I get this error = <code>AttributeError: 'Series' object has no attribute 'dt'</code></span>
<span class="comment-copy">What version of pandas are you using? the <code>dt</code> is a datetime attribute accessor that was added in <code>0.15.0</code>, also your series has to be a datetime dtype, if needed you can convert: <code>df['datetime'] = pd.to_datetime(df['datetime'])</code></span>
<span class="comment-copy"><code>0.14.1</code> included in Anaconda. Anyway <code>df [ 'datetime' ] </code> format is <code>datetime64[ns]</code></span>
<span class="comment-copy">What does <code>import pd print(pd.version.version)</code> show, you've not told me what version of pandas you are using</span>
<span class="comment-copy">I am updating Anaconda packages. I will try with <code>0.15.0</code> version</span>
