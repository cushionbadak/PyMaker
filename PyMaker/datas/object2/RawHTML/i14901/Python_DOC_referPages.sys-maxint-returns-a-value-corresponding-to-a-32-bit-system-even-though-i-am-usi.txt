<div class="post-text" itemprop="text">
<p>I am not very knowledgeable about system architecture, and have just started learning Python.</p>
<p>In one of the tutorial videos it was mentioned that running sys.maxint in the interpreter will return the biggest integer that is available to you.</p>
<p>It was also mentioned that 2147483647 is the integer that corresponds to a 32 bit system. That's is the integer that I am being returned when I run sys.maxint.</p>
<p>I am using Enthought Canopy (64 bit) on a 64 bit OS. Windows 8, to be precise.</p>
<p>Is there any way I can increase the sys.maxint value to one that corresponds a 64 bit machine?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>Python 2.7.9 (default, Dec 10 2014, 12:28:03) [MSC v.1500 64 bit (AMD64)] on win32
Type "copyright", "credits" or "license()" for more information.
&gt;&gt;&gt; import platform
&gt;&gt;&gt; platform.architecture()
&gt;&gt;&gt; ('64bit', 'WindowsPE')
&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.maxint
&gt;&gt;&gt; 2147483647
&gt;&gt;&gt; sys.maxint+1
&gt;&gt;&gt; 2147483648L
</code></pre>
<p>Seems to be a limitation on Windows.</p>
<p>I would not worry about it, as Python supports bignums and won't overflow. Although performance will be lower if you exceed <code>sys.maxint</code>.</p>
</div>
<span class="comment-copy">Did you download and compile 32 bit version of Python?</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/7604966/maximum-and-minimum-values-for-ints">Maximum and Minimum values for ints</a></span>
<span class="comment-copy">Though, as @thavan points out, it is possible (probable) you're using a 32bit python. Also, the bit-width of the system has nothing to do with the maximum value of a number. It's perfectly possible to represent a 64bit number on an 8-bit computer, it just wouldn't likely be very efficient as it probably would lack the ability to do 64bit operations in a single cycle. The bit-width of a system only has a hard constraint on the maximum size of a pointer in memory, and thus the maximum amount of memory addressable.</span>
<span class="comment-copy">@thavan, I just downloaded Enthought Canopy. All I know is that they use Python 2.7. I never had to explicitly compile python.</span>
<span class="comment-copy">Use <a href="https://docs.python.org/3/library/sys.html#sys.maxsize" rel="nofollow noreferrer"><code>sys.maxsize</code></a> instead. The value will depend on whether you're running 32- or 64-bit Python.</span>
