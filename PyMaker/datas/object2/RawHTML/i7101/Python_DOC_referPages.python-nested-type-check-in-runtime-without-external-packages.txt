<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/37973820/how-to-perform-type-checking-with-the-typing-python-module">How to perform type checking with the typing Python module?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
<li>
<a dir="ltr" href="/questions/43646823/python-3-5-checking-type-annotation-at-runtime">Python &gt;=3.5: Checking type annotation at runtime</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>Is there some type checking API from python3.5 typing that I can use to check nested types in runtime.
For example:</p>
<pre><code>from typing import List
check_type([1,2,3], List[int]) # True
check_type([1,2,''], List[int]) # False
</code></pre>
<p>This is only example (it can be 3 or more levels nested, have List, Tuple, Dict)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all()</code></a> built-in function like below:</p>
<pre><code>def check_type(iterable, tp):
    return all(isinstance(item, tp) for item in iterable)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; check_type([1, 2, 3], int)
True
&gt;&gt;&gt;
&gt;&gt;&gt; check_type([1, 2, ''], int)
False
</code></pre>
</div>
<span class="comment-copy">No but you can implement it pretty easily: <code>def check_type(li, inner_type): return isinstance(li, list) and all(isinstance(obj, inner_type) for obj in li)</code></span>
<span class="comment-copy">maybe this helps: <a href="http://mypy-lang.org/" rel="nofollow noreferrer">mypy-lang.org</a>? or check out any of the other references at the bottom of the <a href="https://www.python.org/dev/peps/pep-0484/" rel="nofollow noreferrer">PEP 484</a>.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow noreferrer"><code>isinstance</code> is recommend over <code>type</code></a> - <i>"The <code>isinstance()</code> built-in function is recommended for testing the type of an object, because it takes subclasses into account."</i>.</span>
<span class="comment-copy">sorry, iterable is only example, just for simplify the question. In real structure can be complex, so I thought I can call something without manual falling to the bottom of structure</span>
<span class="comment-copy">@ChristianDean Thanks! I updated my answer.</span>
<span class="comment-copy">@user3479125 How does you data structure look like?</span>
