<div class="post-text" itemprop="text">
<p>I use the scrapy library for scraping and it handels all the logging for me. The log file is very big and I was hoping for another way than to read through the whole file. I'm only interested in the exception.</p>
<p>Is it posible to get the raw logging.exception and read from that without creating another log file?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the python logging facility which is what Scrapy uses. At the program entry point you need to customize this logging facility, it can be in the <code>__init__.py</code> file for example or anything else before you use any log related calls.</p>
<p>What you need to do is set different <strong>handlers</strong>  for different <strong>levels</strong> (ERROR, WARNING, ...). Exception level do not exist, you might be mistaking with Error or Critical levels.</p>
<p>This is the "<a href="https://docs.python.org/3/howto/logging.html#configuring-logging" rel="nofollow noreferrer">Logging How To</a>", you should check it.</p>
<p>Your solution would look like : </p>
<pre><code>import logging

#this is the logger Scrapy uses throughout the app.
logger = logging.getLogger() 

my_exception_handler = logging.FileHandler()
my_exception_handler.setLevel(Logging.ERROR)

logger.addHandler(my_exception_handler)
</code></pre>
<p>Finally, if you are really talking about exception and not error or critical levels. You'll need to inherit from your Exception class or overwrite it so you can use the same logging approach I just explained.</p>
</div>
<span class="comment-copy">Thanks, I got it working with your answer, however i was hoping to avoid creating files. Now i create the file, read the file, store the exceptions in mongodb, and delete the file. The problem is that i dont do the logging myself, is it possible to log directly to mongodb?</span>
<span class="comment-copy">This was not in your question. You can do what you want by creating your own handler which would subclass StreamHandler() and setting the <code>emit()</code> method, which would call pymongo/mongodb. The process stays the same as stated above. Please accept my answer if this has fix your problem.</span>
