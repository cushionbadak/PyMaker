<div class="post-text" itemprop="text">
<p>I installed miniconda for some software I need to run. It worked great, but it made all of the other web related stuff I have set up through mac's default python environment stop working. What I would like to have is the mac python environment as the default and conda only when I need to run this specific software. So I would need to know #1 - how do I modify .bash_profile to allow me to run both environments, and #2 - the command I need to switch between environments (if there is one).</p>
<p>My bash profile looks like:</p>
<pre><code># Setting PATH for Python 3.6
# The original version is saved in .bash_profile.pysave
PATH="/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}"
export PATH

# added by Miniconda3 4.3.21 installer
# export PATH="/Users/mikeheavers/miniconda3/bin:$PATH"
</code></pre>
<p>(I have commented out the conda path for now)</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Have you considered using Python's <a href="http://python-guide-pt-br.readthedocs.io/en/latest/dev/virtualenvs/" rel="nofollow noreferrer">Virtual env</a>? </p>
<p>This allows you to have a completely separate Python installations without causing conflicts with your main python in your path. This sounds ideal for your development needs. </p>
<p>You would need to "activate" the virtualenv prior to starting up miniconda, which will adjust your environmental variables such that the virtualenv python, and it's libraries will be used. </p>
<p>(copying from the link) </p>
<p>This will result in a virtual python installation</p>
<pre><code>$ pip install virtualenv
$ cd my_project_folder
$ virtualenv my_project
$ source my_project/bin/activate
$ # Do stuff, like install from pip
$ deactivate # This will turn off the virtual python in your path
</code></pre>
<p>you can use this interpreter in your bashrc too (Check out the link for a more in depth introduction) </p>
<pre><code>export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python2.7
</code></pre>
</div>
<span class="comment-copy">Rule # 1: Don't modify your system python.  Rule #2: See Rule # 1.</span>
<span class="comment-copy">I'm not sure what to do with this information. Are you saying I shouldn't use miniconda?</span>
<span class="comment-copy">ONLY use miniconda (or something similar, e.g. virtualenv).  Don't install packages to your system python.  I use miniconda, btw.  I speak from experience after having to reinstall my operating system after my system python libraries when I was first learning python.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/using/mac.html" rel="nofollow noreferrer">docs.python.org/3/using/mac.html</a>  "The Apple-provided build of Python is installed in /System/Library/Frameworks/Python.framework and /usr/bin/python, respectively. You should never modify or delete these, as they are Apple-controlled and are used by Apple- or third-party software. Remember that if you choose to install a newer Python version from python.org, you will have two different but functional Python installations on your computer, so it will be important that your paths and usages are consistent with what you want to do."</span>
<span class="comment-copy">Thanks Alexander - I'm definitely not trying to modify the system python - I just want to switch between it and miniconda</span>
<span class="comment-copy">Thanks TJ - I think this is what I want to do - so to clarify - if I have an existing project which depends on conda, I would switch to that project directory, run <code>virtualenv [project_name]</code>, <code>source [project_name]/bin/activate</code>, and then install miniconda via the quick install instructions (<code>bash Miniconda3-latest-MacOSX-x86_64.sh</code>)?</span>
<span class="comment-copy">That sounds like a reasonable set to steps. I did some searching and it sounds like miniconda might support this within its command line <a href="https://conda.io/docs/using/envs.html" rel="nofollow noreferrer">conda.io/docs/using/envs.html</a></span>
