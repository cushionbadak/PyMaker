<div class="post-text" itemprop="text">
<p>Python has 42 builtin functions,</p>
<p>however, official documentation lists 68 built-in Functions.<a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">2. Built-in Functions — Python 3.6.2 documentation</a></p>
<p>It is easy to get just 42 built-in functions:</p>
<pre><code>builtins_dict = {}
for i in all_builtins:
    if type(eval(i)) not in builtin_dict:
        builtin_dict[type(eval(i))] = 1
    else:
        builtin_dict[type(eval(i))] += 1
</code></pre>
<p>output:</p>
<pre><code>{&lt;class 'type'&gt;: 92, 
&lt;class 'ellipsis'&gt;: 1, 
&lt;class 'bool'&gt;: 3, 
&lt;class 'NoneType'&gt;: 4, 
&lt;class 'NotImplementedType'&gt;: 1, 
&lt;class 'builtin_function_or_method'&gt;: 42, 
&lt;class '_frozen_importlib_external.SourceFileLoader'&gt;: 1, 
&lt;class 'str'&gt;: 1, 
&lt;class '_sitebuiltins._Printer'&gt;: 3, 
&lt;class '_sitebuiltins.Quitter'&gt;: 2, 
&lt;class '_sitebuiltins._Helper'&gt;: 1}
</code></pre>
<p>It is easier to categorize all the builtins by 'type'</p>
<p>What's the logic underlying?</p>
</div>
<div class="post-text" itemprop="text">
<p>The objects listed under Built-in Functions in the docs aren't there because of their type. They're there because they're callable, and they do something deemed interesting enough to document when you call them. From a duck-typing perspective, they're functions.</p>
<p>Many of them are types, such as <code>int</code> and <code>super</code>.</p>
</div>
<span class="comment-copy">I don't know the answer, but I'm delighted that you will be volunteering to help with Python documentation in the future.  Of course you are professional.</span>
<span class="comment-copy"><i>Python has 42 builtin functions, however ... 68</i> – what?</span>
<span class="comment-copy">Rather than discussing whole lists of functions, do you have a specific concern about one particular function we can discuss?</span>
<span class="comment-copy">I edited follow your segguestion, why they downvote for unknown? @AzatIbrakov</span>
<span class="comment-copy">You are failing to count various built-ins that are called exactly like functions (<code>int()</code> and <code>str()</code>, for example), but are actually implemented as types.</span>
<span class="comment-copy">It makes conflicts to draw a tree map in mind.</span>
