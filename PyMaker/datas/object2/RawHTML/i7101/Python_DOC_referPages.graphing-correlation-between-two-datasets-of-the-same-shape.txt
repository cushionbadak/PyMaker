<div class="post-text" itemprop="text">
<p>I have two datasets, <code>array1</code> and <code>array2</code>, with the exact same shapes of <code>(365, 180, 140)</code>. The first array has values for precipitation, while the second array has values for dust concentration in the atmosphere. The first element in the array represents the day, and the second and third elements represent longitude and latitude. </p>
<p>I would like to show the correlation between these two datasets on a scatter plot. I would like to have the values for precipitation on the x-axis, and values for dust concentration on the y-axis. Basically, I want to take the values at every index in <code>array1</code>, assign it as the x-coordinate, and take the values at the corresponding index in <code>array2</code>, and assign it as the y-value. Does anyone know how I can achieve this? Thank you so much in advance.</p>
<p>EDIT: What I mean by "every index" is this: For example, I would like to take <code>array1[1, 1, 1]</code>, assign as a x coordinate, and take <code>array2[1, 1, 1]</code>, and assign as a y coordinate, and plot the resulting point on a scatter plot. I would then like to plot <code>[1, 2, 1]</code> , <code>[1, 3, 1]</code>, <code>[1, 4, 1]</code>, and so on. </p>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like you want to plot every single entry in array1 against its corresponding entry in array2.</p>
<p>The scatter function in matplotlib automatically flattens n-dimensional arrays, so something like this should work:</p>
<pre><code>import matplotlib.pyplot as mp
mp.scatter(array1, array2)
</code></pre>
<p>You could also be more explicit and flatten the arrays yourself (the indices will be preserved):</p>
<pre><code>mp.scatter(array1.flatten(), array2.flatten())
</code></pre>
<p>And to provide a full working example, here's some code that creates these arrays and plots them, assuming precipitation will be negatively correlated with dust concentration with some noise.  NOTE: Scatter plots are very slow to render in matplotlib, so for your dimensions, 365x180x140, it may take a while to plot.</p>
<pre><code>import matplotlib.pyplot as mp
import numpy

# specify dimensions
ndays=30
nlat=20
nlon=40

# create a random array (say "precipitation") with the dimensions above
array1 = numpy.random.random((ndays,nlat,nlon))

# create another array negatively correlated with precipitation
array2 = -1*array1
# and add some noise to array2
array2 += numpy.random.normal(loc=0, scale=0.5, size=array2.shape)

mp.scatter(array1.flatten(), array2.flatten())
mp.xlabel('array1')
mp.ylabel('array2')
</code></pre>
<p>Here is the figure this creates:</p>
<p><a href="https://i.stack.imgur.com/YADxr.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/YADxr.jpg"/></a></p>
</div>
<span class="comment-copy">Welcome to StackOverflow.  Please take a look at this guide for how to write a good question: <a href="https://codeblog.jonskeet.uk/2012/11/24/stack-overflow-question-checklist/" rel="nofollow noreferrer">codeblog.jonskeet.uk/2012/11/24/â€¦</a></span>
<span class="comment-copy">First an "array" in Python is either a <a href="https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range" rel="nofollow noreferrer">list, tuple, or range</a>. Since the datasets all consist of three elements and don't mutate, a <a href="https://docs.python.org/3/library/stdtypes.html#tuples" rel="nofollow noreferrer">tuple</a> is a good fit. Next, clarify your question regarding "every index" as every element is indexed from zero. For example, <code>prec = (1, 2, 3)</code> then <code>print(prec[0])</code> yields <code>1</code>. It's not clear which elements of a tuple you want to chart on a Cartesian coordinate system.</span>
<span class="comment-copy">@StevePiercy: I have edited my question. Thanks for the advice.</span>
<span class="comment-copy">@MatthewKim I still don't understand. Can you give an example of what would be the values of <code>x</code> and <code>y</code> on a rectangular coordinate system? There are only two dimensions on a scatter plot, as shown in <a href="https://jsfiddle.net/3t11vp9s/" rel="nofollow noreferrer">this Google Chart example using JSFiddle</a>. As you can see, <code>x</code> and <code>y</code> have a single integer value, not a tuple.</span>
<span class="comment-copy">@StevePiercy: A <code>x</code> coordinate could have a value of <code>1.05</code>, while the corresponding <code>y</code> coordinate could have a value of <code>0.4</code>. And the <code>x</code> and <code>y</code> values have to be integers? I thought I saw scatter plots with tuples.</span>
