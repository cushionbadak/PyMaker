<div class="post-text" itemprop="text">
<p>I have a nested json that looks like this:</p>
<pre><code>[
    {
        'Name':'Anders', 
        'Type':'Hunter', 
        'Race':'Cyborg', 
    },
    {
        'Name':'Karin', 
        'Type':'Titan', 
        'Race':'Human', 
    },
    {
        'Name':'Jenny', 
        'Type':'Warlock', 
        'Race':'Marsian', 
    },
]
</code></pre>
<p>And I have a string that looks like this:</p>
<pre><code>['1', 'Ham', 'Spam', 'Bacon', '1', 'Ham', 'Cucumber', 'Tomato', '1', 'Wood', 'Potato', 'Herring']
</code></pre>
<p>I want to insert the string into the json with a name for the value. Each four in the string is for each person in the json.</p>
<p>Final result should look like this:</p>
<pre><code>    [
    {
        'Name':'Anders', 
        'Type':'Hunter', 
        'Race':'Cyborg',
        'string1':'1',
        'Food_1':'Ham',
        'Food_2':'Spam',
        'Food_3':'Bacon',
    },
    {
        'Name':'Karin', 
        'Type':'Titan', 
        'Race':'Human',
        'string1':'1',
        'Food_1':'Ham',
        'Food_2':'Cucumber',
        'Food_3':'Tomato',
    },
    {
        'Name':'Jenny', 
        'Type':'Warlock', 
        'Race':'Marsian',
        'string1':'1',
        'Food_1':'Wood',
        'Food_2':'Potato',
        'Food_3':'Herring',     
    },
]
</code></pre>
<p>I have tryied with some iterations, but fails all the time :/</p>
<p>Hope you can help me!</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm assuming your data structures are python dicts and lists, and not strings containing json-text.</p>
<p>First, turn your flat list of things to insert into a list of chunks of 4 items each. You can read up on some other ways of doing that <a href="https://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks">here</a>.</p>
<pre><code>new_things = ['1', 'Ham', 'Spam', 'Bacon', '1', 'Ham', 'Cucumber', 'Tomato', '1', 'Wood', 'Potato', 'Herring']
chunks = [new_things[i:i+4] for i in range(0, len(new_things), 4)]
</code></pre>
<p>Resulting in:</p>
<pre><code>[['1', 'Ham', 'Spam', 'Bacon'], ['1', 'Ham', 'Cucumber', 'Tomato'], ['1', 'Wood', 'Potato', 'Herring']]
</code></pre>
<p>Then, iterate over the two collections simultaneously. You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a> for this:</p>
<pre><code>for entry, new_stuff in zip(existing_data, chunks):
    entry["string1"] = new_stuff[0]
    entry["Food_1"] = new_stuff[1]
    entry["Food_2"] = new_stuff[2]
    entry["Food_3"] = new_stuff[3]
</code></pre>
<p>After that, your collection should look like expected.</p>
</div>
<div class="post-text" itemprop="text">
<p>Alternative to answer 1:</p>
<pre><code>json_list = [
    {
        'Name':'Anders', 
        'Type':'Hunter', 
        'Race':'Cyborg', 
    },
    {
        'Name':'Karin', 
        'Type':'Titan', 
        'Race':'Human', 
    },
    {
        'Name':'Jenny', 
        'Type':'Warlock', 
        'Race':'Marsian', 
    },]
foods = ['1', 'Ham', 'Spam', 'Bacon', '1', 'Ham', 'Cucumber', 'Tomato', '1', 'Wood', 'Potato', 'Herring']
for _ in json_list:
    _.update({'string1': foods[0], 'food_1': foods[1], 'food_2': foods[2], 'food_3': foods[3]})
    foods = foods[4:]
json_list
</code></pre>
<p>Results in</p>
<pre><code>[{'Race': 'Cyborg', 'food_3': 'Bacon', 'string1': '1', 'food_2': 'Spam', 'Name': 'Anders', 'Type': 'Hunter', 'food_1': 'Ham'}, {'Race': 'Human', 'food_3': 'Tomato', 'string1': '1', 'food_2': 'Cucumber', 'Name': 'Karin', 'Type': 'Titan', 'food_1': 'Ham'}, {'Race': 'Marsian', 'food_3': 'Herring', 'string1': '1', 'food_2': 'Potato', 'Name': 'Jenny', 'Type': 'Warlock', 'food_1': 'Wood'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A compact way to do this is to use the <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer"><code>iter</code></a> and <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> functions to break the new data up into chunks. </p>
<pre><code>import json

data = [
    {
        'Name':'Anders', 
        'Type':'Hunter', 
        'Race':'Cyborg', 
    },
    {
        'Name':'Karin', 
        'Type':'Titan', 
        'Race':'Human', 
    },
    {
        'Name':'Jenny', 
        'Type':'Warlock', 
        'Race':'Marsian', 
    },
]

keys = ['string1', 'Food_1', 'Food_2', 'Food_3']
new_data = [
    '1', 'Ham', 'Spam', 'Bacon', 
    '1', 'Ham', 'Cucumber', 'Tomato', 
    '1', 'Wood', 'Potato', 'Herring',
]

# Create an iterator that yields chunks of length 4 from new_data
chunks = zip(*[iter(new_data)] * 4)

# Update the dicts in data with the new data
for d, t in zip(data, chunks):
    d.update(zip(keys, t))

# Convert to JSON
json_data = json.dumps(data, indent=4)
print(json_data)
</code></pre>
<p><strong>output</strong></p>
<pre><code>[
    {
        "Name": "Anders",
        "Type": "Hunter",
        "Race": "Cyborg",
        "string1": "1",
        "Food_1": "Ham",
        "Food_2": "Spam",
        "Food_3": "Bacon"
    },
    {
        "Name": "Karin",
        "Type": "Titan",
        "Race": "Human",
        "string1": "1",
        "Food_1": "Ham",
        "Food_2": "Cucumber",
        "Food_3": "Tomato"
    },
    {
        "Name": "Jenny",
        "Type": "Warlock",
        "Race": "Marsian",
        "string1": "1",
        "Food_1": "Wood",
        "Food_2": "Potato",
        "Food_3": "Herring"
    }
]
</code></pre>
<p>We could also put the "chunkifying" step into the main <code>for</code> loop:</p>
<pre><code>for d, t in zip(data, zip(*[iter(new_data)] * 4)):
    d.update(zip(keys, t))
</code></pre>
<p>but I think the previous version is a little more readable.</p>
</div>
<span class="comment-copy">You don't modify JSON directly; you decode it, update the resulting data structure, then re-encode the modified data structure.</span>
