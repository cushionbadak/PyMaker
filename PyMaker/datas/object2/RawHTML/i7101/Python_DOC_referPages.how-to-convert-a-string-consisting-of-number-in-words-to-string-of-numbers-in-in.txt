<div class="post-text" itemprop="text">
<p>I have a <code>string</code> which has numbers in words format(with a string prefix). I want to convert it to string with numbers in integer format(string prefix remains as it is ). Here are some sample data of string:</p>
<pre><code>"m.l. one two three four"
"k.f two seven six eight"
"g.h three nine zero four"
</code></pre>
<p>What I want each of them to converted to:</p>
<pre><code>"ML1234"
"KF2768"
"GH3904"
</code></pre>
<p>I looked around on SO but couldn't find a relevant question(most of the SO questions were related to converting tens,hundreds,thousands to integers).</p>
<p>How can I convert this?</p>
</div>
<div class="post-text" itemprop="text">
<p>A simple solution:</p>
<pre><code>string = "m.l. one two three four"

text_dict = {'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six': 6, 'seven':7, 'eight':8, 'nine':9, 'zero':0}
split = string.split()
numerized = [str(text_dict[word]) for word in split[1:]]
prefix = split[0].upper().replace(".","")
print ("".join([prefix] + numerized))
</code></pre>
<p>Output:</p>
<pre><code>ML1234
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>data = "m.l. one two three four"
numbers = {
    "one":1,
    "two":2,
    "three":3,
    "four":4,
    "five":5,
    "six":6,
    "seven":7,
    "eight":8,
    "nine":9,
    "zero":0
}
def num_map(str):
    return numbers[str]
data = data.split()
# data[0] will be having chars, rest are numbers

tmp =  ''.join(data[0].split('.')[:-1])
tmp += ''.join(map(str,map(num_map, data[1:])))
print tmp.upper()
</code></pre>
<p>map string to int and vice versa</p>
</div>
<div class="post-text" itemprop="text">
<p>A solution with <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer">functools.reduce</a>:</p>
<pre><code>from functools import reduce

text = "m.l. one two three four"

rep = [(" zero", "0"), (" one", "1"), (" two", "2"), (" three", "3"),
       (" four", "4"), (" five", "5"), (" six", "6"), (" seven", "7"),
       (" eight", "8"), (" nine", "9"), (".", "")]
t = reduce(lambda a, kv: a.replace(*kv), rep, text.lower()).upper()
print(t)
</code></pre>
<p>Outputs:</p>
<pre><code>ML1234
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have so many options to choose, apart from that you have to use <code>reduce</code> function or a small library called <a href="https://github.com/JDongian/words2num" rel="nofollow noreferrer"><code>words2num</code></a>.</p>
<p>If you are using python 2.x you can include directly <code>reduce</code>, or if you are using python 3.x use <code>functools.reduce</code>.</p>
<p>From umutto's answer: Python 2.x</p>
<pre><code>text = "m.l. one two three four"

rep = [(" zero", "0"), (" one", "1"), (" two", "2"), (" three", "3"),
   (" four", "4"), (" five", "5"), (" six", "6"), (" seven", "7"),
   (" eight", "8"), (" nine", "9"), (".", "")]
t = reduce(lambda a, kv: a.replace(*kv), rep, text.lower()).upper()
print t
</code></pre>
<p>Output</p>
<blockquote>
<p>ML1234</p>
</blockquote>
<p>This is enough. If you want to use a library <code>words2num</code> is a good option</p>
<p>1, Install <a href="https://github.com/JDongian/words2num" rel="nofollow noreferrer"><code>words2num</code></a></p>
<pre><code>pip install words2num
</code></pre>
<p>2, Import 'words2num'</p>
<pre><code>from words2num import w2n
</code></pre>
<p>3, Create code with <code>w2n()</code> function</p>
<pre><code>string = "m.l. one two three four"

word_str = string.split(" ")
result = ""

for i in word_str:
    try:
            result += str(w2n(i))
    except:
            words = i.upper().split(".")
            result += "".join(words)
print result
</code></pre>
<p>Output</p>
<blockquote>
<p>ML1234</p>
</blockquote>
</div>
<span class="comment-copy">Check this out: <a href="https://pypi.python.org/pypi/words2num" rel="nofollow noreferrer">pypi.python.org/pypi/words2num</a></span>
<span class="comment-copy">See also: <a href="https://stackoverflow.com/questions/493174/is-there-a-way-to-convert-number-words-to-integers" title="is there a way to convert number words to integers">stackoverflow.com/questions/493174/â€¦</a></span>
<span class="comment-copy">@perigon I had looked up at the SO post you mentioned but it is converting string like "seven billion three thousand..." into numbers. My requirement is to take individual words and convert it to number. So <code>m.l. two seven six eight</code> becomes <code>ML2768</code></span>
<span class="comment-copy">reduce and functools.reduce are the same thing. Its just moved under functools library in <a href="https://docs.python.org/3.0/whatsnew/3.0.html" rel="nofollow noreferrer">Python 3.x</a>.</span>
<span class="comment-copy">I am sorry about that I just use only 2.x. well thank you for that information.</span>
