<div class="post-text" itemprop="text">
<p>I want to use something like pytest for very basic testing using simple <strong>asserts</strong>. Is pytest the best choice for this or are there better recent alternatives?</p>
</div>
<div class="post-text" itemprop="text">
<p>To the best of my knowledge, <code>py.test</code> is still the business!</p>
</div>
<div class="post-text" itemprop="text">
<p>pytest works great for simple testing. </p>
<pre><code>def foo():
    return (1,2,3)

def test_foo():
    assert foo() == (1,2,3)
</code></pre>
<p>Not sure how to make that simpler. </p>
</div>
<div class="post-text" itemprop="text">
<p>Two aspects to this -
As far as actual alternative testing libraries, <code>pytest</code> is pretty much the industry standard with no clear competitors. I cannot find any other testing frameworks with the "simple <code>assert</code>" style api.</p>
<p>Now, if you're looking for something even <em>more</em> minimalist than <code>pytest</code>, <code>assert</code> is actually a <a href="https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement" rel="nofollow noreferrer">python builtin</a>, you could write your own miniature runner:</p>
<pre class="lang-py prettyprint-override"><code>def run_tests(**test_fns):
     failures = dict()
     for test_name, test_fn in test_fns.items():
         try:
             test_fn()
         except Exception as e:
             failures[test_name] = e
     return failures

def failing_test():
     assert False, 'failing test failed'

run_tests(fail=failing_test)
#&gt; {'fail': AssertionError('failing test failed')}
# then maybe pretty print the failures and exit properly
</code></pre>
<p>You might also consider <a href="https://docs.python.org/3/library/doctest.html" rel="nofollow noreferrer">doctest</a> if you're trying to avoid 3rd party libraries as it's included in the standard library.</p>
</div>
<span class="comment-copy">Since you seem to want very lightweight testing, why not just use <code>assert</code>?</span>
<span class="comment-copy">Why do you want an alternative? Is there something wrong with it?</span>
<span class="comment-copy">@ChristianDean <code>pytest</code> internally rewrite asserts to produce rather detailed and beautiful tracebacks. Very convenient for debugging.</span>
