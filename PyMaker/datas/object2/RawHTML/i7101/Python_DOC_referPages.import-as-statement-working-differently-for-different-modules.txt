<div class="post-text" itemprop="text">
<p>I am learning Python, and right now I am learning about the import statements in Python. I was testing out some code, and I came across something unusual. Here is the code I was testing.</p>
<pre><code>from math import pow as power
import random as x

print(pow(2, 3))
print(power(2, 3))
print(x.randint(0, 5))
print(random.randint(0, 5))
</code></pre>
<p>I learned that in Python, you can reassign the names of modules using <code>as</code>, so I reassigned pow to power. I expected both <code>pow(2, 3)</code> and <code>power(2, 3)</code> to output the exact same stuff because all I did was change the name. However, <code>pow(2, 3)</code> outputs <code>8</code>, which is an integer, while <code>power(2, 3)</code> outputs <code>8.0</code>, which is a float. Why is that?</p>
<p>Furthermore, I imported the <code>random</code> module as well, and set its name to be <code>x</code>. In the case of the pow and power, both the old name, <code>pow</code>, and the new name, <code>power</code>, worked. But with this random module, only the new name, <code>x</code>, works, and the old name, <code>random</code>, doesn't work. <code>print(x.randint(0, 5))</code> works, but <code>random.randint(0, 5)</code> doesn't work. Why is this so?</p>
<p>Can anyone please explain to a Python newbie such as myself why my code is not working the way I expect it to? I am using Python version 3.62, if that helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>That's because when you import <code>pow</code> from <strong>math</strong> as <code>power</code> and then you call <code>pow</code>, the <code>pow</code> you are calling is a <strong>built-in</strong> function, not the <code>pow</code> from the <strong>math</strong> module.</p>
<p>For <code>random</code> there is no built-in function in python so you only import the <code>x</code> one.</p>
<p>The pow built-in function <a href="https://docs.python.org/3/library/functions.html#pow" rel="nofollow noreferrer">documentation</a></p>
</div>
<div class="post-text" itemprop="text">
<p>when you use pow you are actually using the inbuilt pow function.</p>
<p>but there is no inbuilt function called random thus it does not work </p>
<p>normally in python if you use 'as' you can only use the module what you imported it as not what it was originally called </p>
</div>
<span class="comment-copy">Because <code>pow</code> is using the builtin <code>pow</code> function. When you use <code>as</code>, it will bind that function to that name. It will not import <code>math.pow</code> and bind it to the name <code>pow</code>, it will only import <code>math.pow</code> then bind it to a different name such as <code>power</code>.</span>
<span class="comment-copy">Your expectation was wrong, when you use <code>as</code> it loads the module/function/class as another name. So <code>random</code> won't work. The reason that <code>pow</code> does, is because python has a built-in <code>pow</code> function</span>
<span class="comment-copy">The most precise answer, double checked, you don't need to import math for pow() to work!</span>
<span class="comment-copy">So are you are saying that the math module is a built-in function, while random is not built-in? Then how come I can use the random module if its not built-in? I'm not exactly understanding this. Also can you please explain clearly why <code>pow</code> returns an integer, while <code>power</code> reterns a float? I'm lost.</span>
<span class="comment-copy">@parrot15 the <code>pow</code> function is the built-in. The <i>math</i> module has another <code>pow</code> function different from the built-in function, but as you renamed <code>math.pow</code> as <i>power</i> when you imported it, the <code>math.pow</code> function is not binded to <code>pow</code>. The thing is there are two different functions to use as <code>pow</code> the built-in and the one from <b>math</b>, as you are using different names, you have both working separately</span>
<span class="comment-copy">@MartinAlonso Ok that makes perfect sense now. Upvoted and accepted. Thank you, cleared a lot of confusion.</span>
