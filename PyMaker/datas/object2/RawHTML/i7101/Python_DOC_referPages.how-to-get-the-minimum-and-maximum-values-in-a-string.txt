<div class="post-text" itemprop="text">
<pre><code>files = ['foo.0001.jpg', 'test2.0003.jpg', 'foo.0004.jpg', 'tmp.txt',
         'foo.0003.jpg', 'test2.0002.jpg', 'test2.0004.jpg', 'test.0002.jpg',
         'foo.0002.jpg', 'foo.0005.jpg', 'test.0001.jpg']
</code></pre>
<p>and I want foo.####.jpg and min, max print
           test.####.jpg and min, max print
           test2.####.jpg and min, max print</p>
<pre><code>def get_frame_number(files):
    for c in foo:
        value = files.get(c)
        for i in value:
            num = i.split(".")[1]
            num_list.append(int(num))
        print str(min(num_list)) + "-" + str(max(num_list))
</code></pre>
<p>I have a function. but couldn't figure it out.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re</code> to try to pull the number out of your file name. Then use this function as the <code>key</code> argument to <code>max</code> and <code>min</code> respectively.</p>
<pre><code>import re

def get_frame_number(file):
    match = re.match(r'[\w\d]+\.(\d+)\.jpg', file)
    if match:
        return int(match.group(1))
    else:
        return float('nan')

&gt;&gt;&gt; max(files, key=get_frame_number)
'foo.0005.jpg'
&gt;&gt;&gt; min(files, key=get_frame_number)
'foo.0001.jpg'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>An option would be using <code>key</code> arg (with <a href="https://docs.python.org/3/reference/expressions.html#lambda" rel="nofollow noreferrer"><code>lambda</code></a> function) of <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max()</code></a> and <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer"><code>min()</code></a> built-in functions like this:</p>
<pre><code>for fn in ('foo', 'test', 'test2'):
    fn_max = max(
        (name for name in files if name.startswith('{}.'.format(fn))),
        key=lambda name: int(name.split('.')[1]))
    fn_min = min(
        (name for name in files if name.startswith('{}.'.format(fn))),
        key=lambda name: int(name.split('.')[1]))
    print(fn, fn_max, fn_min)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>('foo', 'foo.0005.jpg', 'foo.0001.jpg')
('test', 'test.0002.jpg', 'test.0001.jpg')
('test2', 'test2.0004.jpg', 'test2.0002.jpg')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re

foo = re.findall( r'(foo\.\d+.jpg)','|'.join( sorted(files) ) ) 
foo[0], foo[-1]
</code></pre>
<p>Output :</p>
<pre><code>('foo.0001.jpg', 'foo.0005.jpg')
</code></pre>
<p>Similarly you can check for min, max of other files:</p>
<pre><code>test = re.findall( r'(test\.\d+.jpg)','|'.join( sorted(files) ) )
test[0], test[-1]

test2 = re.findall( r'(test2\.\d+.jpg)','|'.join( sorted(files) ) )
test2[0], test2[-1]
</code></pre>
<p>Putting all together in one liner:</p>
<pre><code>[ ( i[0], i[-1] ) for i in [ re.findall( r'('+ j + '\.\d+.jpg)','|'.join( sorted(files) ) ) for j in ['foo','test','test2'] ] ]
</code></pre>
<p>Output:</p>
<pre><code>[('foo.0001.jpg', 'foo.0005.jpg'),
 ('test.0001.jpg', 'test.0002.jpg'),
 ('test2.0002.jpg', 'test2.0004.jpg')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def get_frame_number(files,name):
    nums = []
    for each in files:
        parts = each.strip().split('.')
        if parts[0] == name:nums.append(int(parts[1]))
        else:print("Ignoring",each)
    return(sorted(nums)[0],sorted(nums)[-1])
</code></pre>
<p>Try this with :</p>
<pre><code>print(get_frame_number(files,"test"))
print(get_frame_numbers(files,"test2"))
print(get_frame_numbers(files,"foo"))
</code></pre>
</div>
<span class="comment-copy">what isn't working? what is the <code>foo</code> that you're iterating over?</span>
<span class="comment-copy">Thank you for answering my question. Why does 'test' come with 'test2' ?</span>
<span class="comment-copy">@GyuMeenChoi Fixed, please take a look at the edit.</span>
<span class="comment-copy">Thanks buddy modern What does 'name' mean there? Thank you very much for your kind reply to my poor English</span>
<span class="comment-copy">You're welcome, name means your file name ('foo.0005.jpg', 'foo.0001.jpg', etc)</span>
<span class="comment-copy">Thank you very much for your kind reply to my poor English</span>
