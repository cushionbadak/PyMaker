<div class="post-text" itemprop="text">
<p>I am trying to fetch a value from a webpage that is in scientific notation <code>3.67E+17</code> and then convert it to a form <code>0.367E+18</code>. Or if the scientific notation is <code>0.367E+18</code>, then fetch exactly that value. I have been able to implement the part where I open up the webpage and then find where that scientific number is, however, I haven't been able to convert the number itself to the form that I want.</p>
<p>I got this far though:</p>
<pre><code>lsF = "3.18E+20"
int(lsF[lsF.find("E")+2:]) - 18
</code></pre>
<p>I have been able to figure out how many decimal places I need to shift, either left or right, however, how do I actually shift them?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>lsF = "3.18E+20"
ePos = lsF.find("E")
if (ePos):
    mantissa = float(lsF[:ePos])
    exponent = int(lsF[ePos+1:])
else:
    mantissa = float(lsF)
    exponent = 0
shift = 18 - exponent
result = mantissa / 10**shift
</code></pre>
<p><code>result</code> will be the new mantissa for exponent <code>18</code></p>
</div>
<span class="comment-copy">Add 1 to the exponent and divide the mantissa by 10.</span>
<span class="comment-copy">Why are you adding <code>2</code> to the position of <code>E</code>? You should just add <code>1</code>, since you need the <code>+</code> or <code>-</code> to know if it's a positive or negative exponent.</span>
<span class="comment-copy">@AkshatTripathi If you don't want to display it, why do you care what the format is? Just convert it to a float and use it like that.</span>
<span class="comment-copy">I've never heard of software like that. These powers are only used for input and output to humans, internally computers represent numbers in binary floating point.. This sounds like an XY problem.</span>
<span class="comment-copy">Barmar's answer is nice and simple.  If you're looking for library support, there is <a href="https://docs.python.org/3/library/decimal.html#decimal.Decimal" rel="nofollow noreferrer">Decimal</a> and specifically <code>Decimal.as_tuple</code> to decompose the value.</span>
