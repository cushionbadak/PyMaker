<div class="post-text" itemprop="text">
<pre><code>data1 = {'key':['b','b','a','c','a','a','b'], 'data':range(7)}
df1 = pd.DataFrame(data1)
</code></pre>
<p>it is arranged as data, then follow by key. Why it is not arranged in key, then data?</p>
<p>Do I need to specify the columns?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>data1</code> is a dictionary so the elements are stored in an <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">arbitrary order</a>. Now, the reason you see it in that specific order every time is because pandas <a href="https://github.com/pandas-dev/pandas/blob/330b8c1c195174f729a1d2ee6f916ebd1579217e/pandas/core/frame.py#L446" rel="nofollow noreferrer">frame constructor</a> do <a href="https://github.com/pandas-dev/pandas/blob/793020293ee1e5fa023f45c12943a4ac51cc23d0/pandas/core/common.py#L247" rel="nofollow noreferrer">sort the dictionary keys</a> if there is no explicit columns argument.</p>
<p>Constructor simply uses:</p>
<pre><code>&gt;&gt;&gt; sorted(['key', 'data'])
['data', 'key']
</code></pre>
<p>So you are going to get the same ordering of columns every time. You can (have to) give the columns argument explicitly to store them in the order you want.</p>
<pre><code>&gt;&gt;&gt; pd.DataFrame(data1, columns=['key', 'data'])
  key  data
0   b     0
1   b     1
2   a     2
3   c     3
4   a     4
5   a     5
6   b     6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer"><strong><code>OrderedDict</code></strong></a> from the <a href="https://docs.python.org/2/library/collections.html#" rel="nofollow noreferrer"><strong><code>collections</code></strong></a> library to ensure we keep the same order.</p>
<pre><code>from collections import OrderedDict

data1 = OrderedDict({'key': ['b','b','a','c','a','a','b'], 'data': range(7)})
df1 = pd.DataFrame(data1)
df1

  key  data
0   b     0
1   b     1
2   a     2
3   c     3
4   a     4
5   a     5
6   b     6
</code></pre>
</div>
<span class="comment-copy">There is nothing special about the word "key". If you want to sort the dataframe by "key," then do it: <code>df1.sort_values('key')</code>. And you probably confuse "key" and index.</span>
<span class="comment-copy"><code>data1</code> is a dictionary and hence its elements are not ordered.</span>
<span class="comment-copy">df1 = pd.DataFrame(data1, columns = ['key', 'data']) will give me the key follows by data.  but if I don't specify columns, then it returns data follows by key.</span>
