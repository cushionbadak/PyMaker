<div class="post-text" itemprop="text">
<p>I've been writing the following Python 3 Code:</p>
<pre><code>import urllib.request
import discord
import asyncio

#Colors
black = "\033[0;30m"
red = "\033[0;31m"
green = "\033[0;32m"
yellow = "\033[0;33m"
blue = "\033[0;34m"
purple = "\033[0;35m"
cyan = "\033[0;36m"
white = "\033[0;37m"

#Bold Colors
bblack = "\033[1;30m"
bred = "\033[1;31m"
bgreen = "\033[1;32m"
byellow = "\033[1;33m"
bblue = "\033[1;34m"
bpurple = "\033[1;35m"
bcyan = "\033[1;36m"
bwhite = "\033[1;37m"

print(""""""+blue+"""  ____  _                       _  """+red+""" _____              
"""+blue+""" |  _ \(_)___  ___ ___  _ __ __| | """+red+"""|__  /___ _ __ ___  
"""+blue+""" | | | | / __|/ __/ _ \| '__/ _` | """+red+"""  / // _ \ '__/ _ \ 
"""+blue+""" | |_| | \__ \ (_| (_) | | | (_| | """+red+""" / /|  __/ | | (_) |
"""+blue+""" |____/|_|___/\___\___/|_|  \__,_|"""+red+""" /____\___|_|  \___/
""")

yes = ['y','Y','yes','Yes','YES']

email = input(bgreen+'Discord Email Address: '+yellow)
password = input(bgreen+'Discord Password: '+yellow)
hg_api = str(input(bcyan+'Hologram.io API Key: '+yellow))
hg_deviceid = int(input(bcyan+'Hologram.io Device ID: '+yellow))
sender = input(bcyan+'Sender Phone number (leave blank for default: +1-000-000-0001): '+yellow)
if sender == '':
    sender = "+1-000-000-0001"
logs = input(bpurple+'Enable console logs [Y/N]: '+yellow)
print(white)

client = discord.Client()

@client.event
async def on_ready():
    print(green+'Logged in as: '+cyan+client.user.name+white+' '+yellow+'('+client.user.id+')'+white)

@client.event
async def on_message(message):
    author = str(message.author)
    if logs in yes:
        print(yellow+"["+str(message.timestamp)[11:16]+"] "+red+author+": "+cyan+message.content+white)
    if message.author.id != client.user.id:
        body = '['+str(message.timestamp)[11:16]+'] '+author+': '+message.content
        body = str(body)
        print(body)
        values = """
          {
            "deviceid": """,hg_deviceid,""",
            "fromnumber": """,sender,""",
            "body": """,body,"""
          }
        """

        headers = {
          'Content-Type': 'application/json'
        }

        #try:
        request = urllib.request.Request('https://dashboard.hologram.io/api/1/sms/incoming?apikey='+hg_api, data=values, headers=headers)
        response_body = urllib.request.urlopen(request).read()
        #except:
        #   print(red+"Failed to login. Message not sent."+white)

client.run(email, password)
</code></pre>
<p>When I run it, I get this error:</p>
<pre><code>Logged in as: Coto (234246004424179712)
[21:01] EmojiGuy#7257: Either spoopy the bot is dead or it has a check then I guess
[21:01] EmojiGuy#7257: Either spoopy the bot is dead or it has a check then I guess
Ignoring exception in on_message
Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py", line 1190, in do_request_
    mv = memoryview(data)
TypeError: memoryview: a bytes-like object is required, not 'tuple'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/discord/client.py", line 307, in _run_event
    yield from getattr(self, event)(*args, **kwargs)
  File "DiscordZero.py", line 73, in on_message
    response_body = urllib.request.urlopen(request).read()
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py", line 163, in urlopen
    return opener.open(url, data, timeout)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py", line 464, in open
    req = meth(req)
  File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/urllib/request.py", line 1195, in do_request_
    data))
ValueError: Content-Length should be specified for iterable data of type &lt;class 'tuple'&gt; ('\n\t\t  {\n\t\t    "deviceid": ', 108749, ',\n\t\t    "fromnumber": ', '+1-000-000-0001', ',\n\t\t    "body": ', '[21:01] EmojiGuy#7257: Either spoopy the bot is dead or it has a check then I guess', '\n\t\t  }\n\t\t')
</code></pre>
<p>Could someone explain what that is? I've tried things such as removing replacing the <code>+hg_api</code> with <code>,hg_api</code> etc., nothing works...</p>
<p>I don't understand what's wrong. I've googled the error message and everything, can't seem to find a workaround.</p>
<p>(Using Discord Python API &amp; hologram.io API)</p>
</div>
<div class="post-text" itemprop="text">
<p><code>values</code> is a tuple, not a single string:</p>
<pre><code>values = """
  {
    "deviceid": """,hg_deviceid,""",
    "fromnumber": """,sender,""",
    "body": """,body,"""
  }
"""
</code></pre>
<p>That's a series of strings, separated by commas.</p>
<p>Rather than manually try to construct a JSON string, use the <code>json</code> library to encode a dictionary for you. Add</p>
<pre><code>import json
</code></pre>
<p>to your imports and use this to produce <code>values</code>:</p>
<pre><code>values = json.dumps({
    "deviceid": hg_deviceid,
    "fromnumber": sender,
    "body": body,
}).encode('utf8')
</code></pre>
</div>
<span class="comment-copy"><code>values</code> is a tuple. Look at all those commas in the definition. It sounds like you may be interested in the <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>format</code> function</a> for string interpolation.</span>
<span class="comment-copy">(Looking at it again, <code>values</code> should probably be constructed with <code>json.dumps</code>, but <code>str.format</code> would be useful for a lot of the other string manipulation.)</span>
<span class="comment-copy"><code>NameError: name 'json' is not defined</code></span>
<span class="comment-copy">@Coto: you do need to import the library: <code>import json</code>.</span>
<span class="comment-copy"><code>TypeError: POST data should be bytes or an iterable of bytes. It cannot be of type str. </code></span>
<span class="comment-copy">@Coto: `values.encode('utf8')</span>
