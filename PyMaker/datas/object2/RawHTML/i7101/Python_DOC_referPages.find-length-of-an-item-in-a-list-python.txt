<div class="post-text" itemprop="text">
<p>I've searched and searched and can't find anything to help. I have a list that goes like this </p>
<pre><code>['EGLC', 'LON', 'TUPIN', 'WEEE', 'KJFK']
</code></pre>
<p>The first and last items are ignored, but i need to find the length of each item in between. The list has no set size or format, so they length change. I need to find the length of the second item (LON) (The length will be either 3 or 5), then i run it through something, and then it must loop back and check the length of the second item, and repeat, but NOT check the length of the last one.
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>The length of the three items in between can be found using this:</p>
<pre><code>mylist = ['EGLC', 'LON', 'TUPIN', 'WEEE', 'KJFK']
lengths = [len(i) for i in mylist[1:-1]]
print(lengths)
</code></pre>
<p>The output is:</p>
<pre><code>[3, 5, 4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simply use list comprehension to get the length of all the elements except the first and the last one:</p>
<pre><code>my_list = ['EGLC', 'LON', 'TUPIN', 'WEEE', 'KJFK']

len_list = [len(x) for x in my_list[1:-1]]
</code></pre>
<p>Check this link for more such examples : <a href="http://www.pythonforbeginners.com/basics/list-comprehensions-in-python" rel="nofollow noreferrer">List comprehensions in Python</a></p>
<p>Here is the <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">Official Documentation</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>a = ['EGLC', 'LON', 'TUPIN', 'WEEE', 'KJFK']
[len(a[item_]) for item_ in range(1, len(a)-1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this simplest way, like :</p>
<pre><code>arr = ['EGLC', 'LON', 'TUPIN', 'WEEE', 'KJFK']
length = []
for i in range(1, len(arr) - 1):
  length.append(len(arr[i]))

print(length)
</code></pre>
<p><strong>Or,</strong> Apply another process :</p>
<pre><code>arr = ['EGLC', 'LON', 'TUPIN', 'WEEE', 'KJFK']
length = []
for val in arr[1:-1]:
  length.append(len(val))

print(length)
</code></pre>
<p>Output :</p>
<pre><code>[3, 5, 4]
</code></pre>
</div>
<span class="comment-copy">That one gave me an Unexpected EOF while parsing :/</span>
<span class="comment-copy">That's brilliant, thanks! :) Anyway to make it print [3, 4, 5] instead of [3] [3, 4] [3, 4, 5,]? (EDIT, worked it out)</span>
<span class="comment-copy">Yes, It prints <code>[3, 4, 5]</code>. If you write <code>print(length, end=" ")</code> into the <code>for</code> loop, then output will be <code>[3] [3, 5] [3, 5, 4] </code>.</span>
<span class="comment-copy">why down vote ?</span>
