<div class="post-text" itemprop="text">
<p>Say customPassFile.txt has two lines in it. First line is "123testing" and the second line is "testing321". If passwordCracking = "123testing", then the output would be that "123testing" was not found in the file (or something similar). If passwordCracking = "testing321", then the output would be that "testing321" was found in the file. I think that the for loop I have is only reading the last line of the text file. Any solutions to fix this?</p>
<pre><code>import time
import linecache

def solution_one(passwordCracking):
    print("Running Solution #1 @ " + time.strftime("%Y-%m-%d %H:%M:%S",time.localtime()))
    startingTimeSeconds = time.time()
    currentLine = 1
    attempt = 1
    passwordFound = False
    wordListFile = open("customPassFile.txt", encoding="utf8")
    num_lines = sum(1 for line in open('customPassFile.txt'))
    while(passwordFound == False):
        for i, line in enumerate(wordListFile):
           if(i == currentLine):
                line = line
        passwordChecking = line
        if(passwordChecking == passwordCracking):
            passwordFound = True
            endingTimeSeconds = time.time()
            overallTimeSeconds = endingTimeSeconds - startingTimeSeconds
            print("~~~~~~~~~~~~~~~~~")
            print("Password Found: {}".format(passwordChecking))
            print("ATTEMPTS: {}".format(attempt))
            print("TIME TO FIND: {} seconds".format(overallTimeSeconds))
            wordListFile.close()
            break
        elif(currentLine == num_lines):
            print("~~~~~~~~~~~~~~~~~")
            print("Stopping Solution #1 @ " + time.strftime("%Y-%m-%d %H:%M:%S", time.localtime()))
            print("REASON: Password could not be cracked")
            print("ATTEMPTS: {}".format(attempt))
            break
        else:
            attempt = attempt + 1
            currentLine = currentLine + 1
            continue
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The main problem with your code is that you open the file and you read it multiple times. The first time the file object position goes to the end and stays there. Next time you read the file nothing happens, since you are already at the end of the file.</p>
<h2>Example</h2>
<p>Sometimes an example is worth more than lots of words.
Take the file <code>test_file.txt</code> with the following lines:</p>
<pre><code>line1
line2
</code></pre>
<p>Now open the file and read it twice:</p>
<pre><code>f = open('./test_file.txt')
f.tell()
&gt;&gt;&gt; 0

for l in f:
    print(l, end='')
else:
    print('nothing')
&gt;&gt;&gt; line1
&gt;&gt;&gt; line2
&gt;&gt;&gt; nothing

f.tell()
&gt;&gt;&gt; 12

for l in f:
    print(l, end='')
else:
    print('nothing')
&gt;&gt;&gt; nothing
f.close()
</code></pre>
<p>The second time nothing happen, as the file object is already at the end.</p>
<h2>Solution</h2>
<p>Here you have two options:</p>
<ol>
<li><p>you read the file only once and save all the lines in a list and then use the list in your code. It should be enough to replace</p>
<pre><code>wordListFile = open("customPassFile.txt", encoding="utf8")
num_lines = sum(1 for line in open('customPassFile.txt'))
</code></pre>
<p>with </p>
<pre><code>with open("customPassFile.txt", encoding="utf8") as f:
    wordListFile = f.readlines()
num_lines = len(wordListFile)
</code></pre></li>
<li><p>you reset the file object position after you read the file using <a href="https://docs.python.org/3/library/io.html#io.IOBase.seek" rel="nofollow noreferrer"><code>seek</code></a>. It would be something along the line:</p>
<pre><code>for i, line in enumerate(wordListFile):
   if(i == currentLine):
        line = line
wordListFile.seek(0)
</code></pre></li>
</ol>
<p>I would go with option 1., unless you have memory constraint (e.g. the file is bigger than memory)</p>
<h2>Notes</h2>
<p>I have a few extra notes:</p>
<ul>
<li><p>python starts counters with 0 (like c/c++) and not 1 (like fortran). So probably you want to set:</p>
<pre><code>currentLine = 0
</code></pre></li>
<li><p>when you read a file, the new line character <code>\n</code> is not stripped, so you have to do it (with <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>strip</code></a>) or account for it when comparing strings (using e.g. <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>startswith</code></a>). As example:</p>
<pre><code>passwordChecking == passwordCracking
</code></pre></li>
</ul>
<p>will likely always return <code>False</code> as <code>passwordChecking</code> contains  <code>\n</code> and <code>passwordCracking</code> very likely doesn't.</p>
<h2>Disclamer</h2>
<p>I haven't tried the code, nor my suggestions, so there might be other bugs lurking around.</p>
</div>
<div class="post-text" itemprop="text">
<p>**I will delete this answer after OP understands the problem in indentation of I understand his intention of his code.*</p>
<pre><code>for i, line in enumerate(wordListFile):
   if(i == currentLine):
        line = line
passwordChecking = line
#rest of the code.
</code></pre>
<p>Here your code is outside of for loop so only last line is cached.</p>
<pre><code>for i, line in enumerate(wordListFile):
   if(i == currentLine):
       line = line
   passwordChecking = line
   #rest of the code.
</code></pre>
</div>
<span class="comment-copy">Please fix the indentation</span>
<span class="comment-copy">You need to properly indent code. Problem is with indentation.   <code>passwordChecking = line</code> and afterword should indented.</span>
<span class="comment-copy">So should I change my code to the bottom code? Sorry I am new to python.</span>
