<div class="post-text" itemprop="text">
<p>Every object has a <code>__dir__</code> attribute, will the command stop if extra <code>.__dir__</code> references are appended?</p>
<pre><code>&gt;&gt;&gt; dir(''.__dir__)
['__call__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__text_signature__']
</code></pre>
<p>and,</p>
<pre><code>&gt;&gt;&gt; dir(''.__dir__.__dir__.__dir__.__dir__)
['__call__', '__class__', '__delattr__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__name__', '__ne__', '__new__', '__qualname__', '__reduce__', '__reduce_ex__', '__repr__', '__self__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__text_signature__']
</code></pre>
<p>will it stop when enough '.<strong>dir</strong>' are appended?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are taking the <code>dir()</code> of the <code>__dir__</code> attribute, which is a <code>builtin_function_or_method</code> object, which has a <code>__dir__</code> attribute. So yes, you can chain those <code>__dir__</code> attribute lookups endlessly, because the result will always be the same; a bound method object:</p>
<pre><code>&gt;&gt;&gt; ''.__dir__.__dir__
&lt;built-in method __dir__ of builtin_function_or_method object at 0x10672cfc0&gt;
&gt;&gt;&gt; ''.__dir__.__dir__.__dir__
&lt;built-in method __dir__ of builtin_function_or_method object at 0x1067361f8&gt;
</code></pre>
<p><em>Every</em> object in Python has a <a href="https://docs.python.org/3/reference/datamodel.html#object.__dir__" rel="nofollow noreferrer"><code>__dir__</code> attribute</a>, it is always a callable.</p>
<p>Note: the way you strung the attribute lookups keeps a chain of bound method objects alive, so you will eventually run out of memory; each <code>__dir__</code> method wrapper references the preceding one in their <code>__self__</code> attribute.</p>
</div>
<span class="comment-copy">Well, if you use a heck of a lot of calls to <code>__dir__</code>, you'll eventually clutter the memory, and the execution'll possibly stop.</span>
<span class="comment-copy">suffix to repeat any  '<b>someAttribute</b>'  is  endless call its returned value's attributes.</span>
<span class="comment-copy">May an object not have a <code>__dir__</code>? From the docs: "If the object has a method named <code>__dir__()</code>, this method will be called", so it seems to be optional.</span>
<span class="comment-copy">@VPfB: <code>type</code> and <code>object</code> both implement <code>__dir__</code>, so in Python 3, <b>all</b> objects have that method. Only Python 2 old-style classes lack the attribute.</span>
