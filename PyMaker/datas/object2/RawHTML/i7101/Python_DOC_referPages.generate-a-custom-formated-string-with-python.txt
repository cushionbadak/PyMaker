<div class="post-text" itemprop="text">
<p>I have a Javascript code that generates a string (similar to uuid) string</p>
<p>Here it is the js code:  </p>
<pre><code>var t = "xxxxxxxx-xxxx-xxxx-xxxx-xxxx-xxxxxxxx"
  , i = (new Date).getTime();
return e = t.replace(/[x]/g, function() {
    var e = (i + 16 * Math.random()) % 16 | 0;
    return i = Math.floor(i / 16),
    e.toString(16)
})
</code></pre>
<p>How can I generate this string with python?</p>
</div>
<div class="post-text" itemprop="text">
<p>Using regular expression substitution and the new <code>secrets</code> module of Python 3.6 - this is not equivalent to the JavaScript code because <em>this Python code</em> is cryptographically secure and it generates less collisions / repeatable sequences.</p>
<p>The <a href="https://docs.python.org/3/library/secrets.html" rel="nofollow noreferrer"><code>secrets</code> documentation says</a>:</p>
<blockquote>
<p>The secrets module is used for generating cryptographically strong random numbers suitable for managing data such as passwords, account authentication, security tokens, and related secrets.</p>
<p>In particularly, secrets should be used in preference to the default pseudo-random number generator in the random module, which is designed for modelling and simulation, not security or cryptography.</p>
</blockquote>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; from secrets import choice
&gt;&gt;&gt; re.sub('x', 
           lambda m: choice('0123456789abdef'), 
           'xxxxxxxx-xxxx-xxxx-xxxx-xxxx-xxxxxxxx')
'5baf40e2-13ef-4692-8e33-507b-40fb84ff'
</code></pre>
<p>You'd want this for your IDs to be truly as unique as possible, instead of the <a href="https://en.wikipedia.org/wiki/Mersenne_Twister" rel="nofollow noreferrer">Mersenne Twister MT19937</a> -using <code>random</code> which actually is built to specifically yield a <em>repeatable</em> sequence of numbers.</p>
<p>For Python &lt;3.6 you can do</p>
<pre><code>try:
    from secrets import choice
except ImportError:
    choice = random.SystemRandom().choice
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python provides <a href="https://docs.python.org/3.1/library/uuid.html" rel="nofollow noreferrer"><code>UUID</code></a> generation by default:</p>
<pre><code>&gt;&gt;&gt; import uuid
&gt;&gt;&gt; uuid.uuid4()
UUID('bd65600d-8669-4903-8a14-af88203add38')
&gt;&gt;&gt; str(uuid.uuid4())
'f50ec0b7-f960-400d-91f0-c42a6d44e3d0'
&gt;&gt;&gt; uuid.uuid4().hex
'9fe2c4e93f654fdbb24c02b15259716c'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So basically you want some random hex digits:</p>
<pre><code>from random import randint
'-'.join(''.join('{:x}'.format(randint(0, 15)) for _ in range(y)) for y in [10, 4, 4, 4, 10])
</code></pre>
<p>Where 10, 4, 4, 4, 10 are lengths of each segment in your format string. You may want to add a seed, but basically this does what your JS code does, producing strings like <code>'f693a7aef0-9528-5f38-7be5-9c1dba44b9'</code>.</p>
</div>
<span class="comment-copy"><code>binascii.b2a_hex(os.urandom(5))</code></span>
<span class="comment-copy">People seem to think that you're asking how to generate random UUIDs; you might want to clarify your question.</span>
<span class="comment-copy">@Rawing thx. I think it's fixed now</span>
<span class="comment-copy">reopened because this is a duplicate, but still, the question makes no sense. This is not <b>UUID</b> because the <i>type</i> field is <i>wrong</i>. Also why would you want to generate "Universally" unique identifiers that wouldn't be universally unique (using this code will lead to your UUID not being universally unique). Also this question shouldn't have the Javascript tag, because the question is not about javascript.</span>
<span class="comment-copy">It is absolutely not. The knowledge of Javascript doesn't help them formulate the code in Python.</span>
<span class="comment-copy">Thanks. Great answer :)</span>
<span class="comment-copy">@zaph the quality of <code>Math.random()</code> is not guaranteed. Additionally, only 4 bits lowest order bits of the current time is used in the JavaScript code.</span>
<span class="comment-copy">@zaph c.f. <a href="https://stackoverflow.com/a/3357323/918959">stackoverflow.com/a/3357323/918959</a></span>
<span class="comment-copy">@zaph it is not <code>choice</code>, it is <code>secrets.choice</code></span>
<span class="comment-copy">@zaph that's why there is documentation</span>
<span class="comment-copy">The OP's code creates a UUID with an algorithm based on the current time. This code doesn't use the same algorithm.</span>
<span class="comment-copy">It's not that I wanted to be but thx anyway.</span>
<span class="comment-copy">Thank you very much. That's exactly what I want.</span>
<span class="comment-copy">bwt, its [8, 4, 4, 4, 8]</span>
