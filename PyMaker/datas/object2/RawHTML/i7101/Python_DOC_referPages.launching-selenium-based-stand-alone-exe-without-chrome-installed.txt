<div class="post-text" itemprop="text">
<p>I have created a python script that uses selenium and a webdriver (Chromedriver). After completing this script, I used cx_freeze to compile my script into a stand alone exe file that I can double click to execute the script. However, with selenium, I have been using the chromedriver file I downloaded that works along the chrome application I have installed onto my pc. </p>
<p>What I would like to do, or try to do is have my exe file work with the chromedriver and not require the user to have google chrome installed onto their computer. Is there anyway I can include the chrome as a package in the same directory to get around this or something?</p>
<p>I am also open to other ideas.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can always bundle the offline installer and prompt it to be installed and just run the executable to install it. (Available <a href="https://www.google.com/intl/en/chrome/browser/desktop/index.html?standalone=1" rel="nofollow noreferrer">here</a>)</p>
<p>NOTE: There may be some licensing issues which you may have to look into.</p>
<p>Otherwise, use <a href="https://docs.python.org/3/library/webbrowser.html#webbrowser.open" rel="nofollow noreferrer"><code>webbrowser.open('https://www.google.com/chrome/browser/')</code></a> to direct them to the installation page for chrome. Something like:</p>
<pre><code>try:
    selenium.webbrowser('chrome')  # Or whatever the command is
except NameOfExceptionWhenNoBrowserHere:
    # If you are opening the web page:

    import webbrowser

    INSTALL_PAGE = 'https://www.google.com/chrome/browser/'
    print('You need to have Google chrome installed.')
    print(INSTALL_PAGE)
    if input('Open ' + INSTALL_PAGE + '? [yes/no]').lower().startswith('y'):
        webbrowser.open(INSTALL_PAGE)  # Uses default browser

    # If you are running the offline installer

    import subprocess
    import os

    _file_dir = os.path.dirname(os.path.realpath(__file__))

    print('You need to have Google chrome installed.')
    print('Will now open installer')

    # _file_dir is the directory of the python file.
    # If the installer is in the same directory, run it like this.
    subprocess.call(os.path.join(_file_dir, 'install_chrome.exe'))
</code></pre>
</div>
