<div class="post-text" itemprop="text">
<p>I am trying to create a class and I can't seem to get it to work?  I'm fairly new to Python, so any assistance would be appreciated.  Also, not sure if this is the most efficient way to create and use an object. I am trying to build a well model and this is one piece of that model, once I get this simple issue figured out the rest should be fairly easy. Thanks.</p>
<pre><code>import sys
import os
import csv
import pyodbc 
import pandas as pd
import pandas.io.sql as psql
from pandas import Series, DataFrame
from time import gmtime, strftime



#Drill Pipe Class
class DP:
    #Properties
    DP_ID = 1.00
    DP_OD = 1.00
    DP_Name = 'Drill Pipe'
    #test global
    idwel = '6683AFCEA5DF429CAC123213F85EB9B3' 

    #Constructor &lt;- Accepts idwell to get info
    def __init__(self,idwell):
        self.id = idwell
    #..

    #WV DB connecton Function  -&gt; return as dataframe -Updated 7/5/17
    def WV_Read_Query(_query):
        try:
            cnxn = pyodbc.connect("DSN=SQL_R_WV") 
            cur = cnxn.cursor()
            df = psql.read_sql(_query, cnxn)
            cnxn.close()
            #print(df)
            return df
        except "Error":
            return "Query Error...!"
    #..
    def get_DP_Data(_id):
        _id = str(_id)
        DP_Query = """Select Top 1 
                            DS.des as 'dp_name',DS.SZIDNOM as 'dp_id',
                            DS.SZODNOM as 'dp_od',DS.SYSCREATEDATE as 'date'
                        From [dbo].[US_WVJOBDRILLSTRINGCOMP] DS
                        Where IDWELL = '""" + _id +"""' 
                        AND Des = 'Drill Pipe' Order by SYSCREATEDATE Desc"""
        mud_Data = WV_Read_Query(DP_Query)
        return mud_Data
    #..


    DP_Table = get_DP_Data(id) 

    def get_DP_ID(self, DP_Table):
        dp_id = DP_Table['dp_id']
        return dp_id
    #..

    def get_DP_OD(self, DP_Table):
        dp_od = DP_Table['dp_od']
        return dp_od
    #..

    def get_Date(self, DP_Table):
        u_date = DP_Table['date']
        return u_date
    #..

    def get_Des(self, DP_Table):
        des = DP_Table['dp_name']
        return des
    #..

    #Print DP Info
    def DP_Info(self):
        Des = get_Des()
        ID = get_DP_ID()
        OD = get_DP_OD()
        Updated = strftime("%Y-%m-%d %H:%M:%S", gmtime())
        return Des + "\nDP Id:\t" + ID + "\nDP Id:\t" + OD + "\nUpdated:\t" + Updated
    #..
#...

dp = DP('6683AFCEA5DF429CAC123213F85EB9B3')
dp_info = dp.DP_Info()
print(dp_info)  
</code></pre>
<blockquote>
<p>Traceback (most recent call last):   File "u:\Development\Python
  Scripts\HCP\CUC Export Files 8_7_17\Well_Model.py", line 71, in
  
      class DP:   File "u:\Development\Python Scripts\HCP\CUC Export Files 8_7_17\Well_Model.py", line 108, in DP
      DP_Table = get_DP_Data(id)    File "u:\Development\Python Scripts\HCP\CUC Export Files 8_7_17\Well_Model.py", line 104, in
  get_DP_Data
      mud_Data = WV_Read_Query(DP_Query) NameError: name 'WV_Read_Query' is not defined</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>If you are defining non-static, non-class methods within a function, the first argument is <em>always</em> an instance of that class. We usually call this argument <code>self</code>:</p>
<pre><code>def WV_Read_Query(self, _query):
    ...
</code></pre>
<p>And, </p>
<pre><code>def get_DP_Data(self, _id):
</code></pre>
<p>Furthermore, you call a these methods on the object <code>self</code>:</p>
<pre><code>self.WV_Read_Query(DP_Query)
</code></pre>
<p>You might wonder why the function is defined with 2 arguments, but only 1 passed to. That's because the instance is <em>implicitly</em> passed as the first parameter, automatically.</p>
<p>This is equivalent to  </p>
<pre><code>DP.WV_Read_Query(self, DP_Query)
</code></pre>
<p>Where you call the method on the class, but <em>explicitly</em> pass the instance to it. </p>
<hr/>
<p>Further reading:</p>
<ol>
<li><p><a href="https://docs.python.org/3/tutorial/classes.html#classes" rel="nofollow noreferrer">Python <code>classes</code></a></p></li>
<li><p><a href="https://stackoverflow.com/questions/1053592/what-is-the-difference-between-class-and-instance-methods">What is the difference between class and instance methods?</a> </p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>You need to access it with <code>self</code>. So </p>
<pre><code>def get_DP_Data(self, _id):
    _id = str(_id)
    DP_Query = """Select Top 1 
                        DS.des as 'dp_name',DS.SZIDNOM as 'dp_id',
                        DS.SZODNOM as 'dp_od',DS.SYSCREATEDATE as 'date'
                    From [dbo].[US_WVJOBDRILLSTRINGCOMP] DS
                    Where IDWELL = '""" + _id +"""' 
                    AND Des = 'Drill Pipe' Order by SYSCREATEDATE Desc"""
    mud_Data = self.WV_Read_Query(DP_Query)
    return mud_Data
</code></pre>
<p>You also need to add <code>self</code> to several of your methods. The class instance will always be the first parameter in a method unless you define it as a staticmethod using the decorator <code>staticmethod</code>.</p>
</div>
<span class="comment-copy">Maybe you should know the basic syntax of writing a class.</span>
<span class="comment-copy">Please provide a smaller code example. There are lot of redundant code in this example that doesnt add anything to your question.</span>
<span class="comment-copy">since <code>WV_Read_Query</code> is a method within the class, call the object's method by prepending <code>self</code> to the call, try <code>mud_Data = self.WV_Read_Query(DP_Query)</code>?</span>
