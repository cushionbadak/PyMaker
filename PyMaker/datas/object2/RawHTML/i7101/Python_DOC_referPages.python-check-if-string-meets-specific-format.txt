<div class="post-text" itemprop="text">
<p>Programming in Python3.</p>
<p>I am having difficulty in controlling whether a string meets a specific format.</p>
<p>So, I know that Python does not have a <code>.contain()</code> method like Java but that we can use regex.
My code hence will probably look something like this, where lowpan_headers is a dictionary with a field that is a string that should meet a specific format.
So the code will probably be like this:</p>
<pre><code>import re

lowpan_headers = self.converter.lowpan_string_to_headers(lowpan_string)
pattern = re.compile("^([A-Z][0-9]+)+$")
pattern.match(lowpan_headers[dest_addrS])
</code></pre>
<p>However, my issue is in the format and I have not been able to get it right.
The format should be like <code>bbbb00000000000000170d0000306fb6</code>, where the first 4 characters should be <code>bbbb</code> and all the rest, with that exact length, should be hexadecimal values (so from 0-9 and a-f).</p>
<p>So two questions:
(1) any easier way of doing this except through importing re 
(2) If not, can you help me out with the regex?</p>
</div>
<div class="post-text" itemprop="text">
<p>As for the regex you're looking for I believe that</p>
<pre><code>^bbbb[0-9a-f]{28}$
</code></pre>
<p>should validate correctly for your requirements.</p>
<p>As for if there is an easier way than using the <code>re</code> module, I would say that there isn't really to achieve the result you're looking for. While using the <code>in</code> keyword in python works in the way you would expect a <code>contains</code> method to work for a string, you are actually wanting to know if a string is in a correct format. As such the best solution, as it is relatively simple, is to use a regular expression, and thus use the <code>re</code> module.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a solution that does not use <code>regex</code>:</p>
<pre><code>lowpan_headers = 'bbbb00000000000000170d0000306fb6'
if lowpan_headers[:4] == 'bbbb' and len(lowpan_headers) == 32:
    try:
        int(lowpan_headers[4:], 16)  # tries interpreting the last 28 characters as hexadecimal
        print('Input is valid!')
    except ValueError:
        print('Invalid Input')  # hex test failed!
else:
    print('Invalid Input')  # either length test or 'bbbb' prefix test failed!
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In fact, Python does have an equivalent to the <code>.contains()</code> method. You can use the <code>in</code> operator:</p>
<pre><code>if 'substring' in long_string:
    return True
</code></pre>
<p>A similar question has already been answered <a href="https://stackoverflow.com/a/3437070">here</a>.</p>
<p>For your case, however, I'd still stick with regex as you're indeed trying to evaluate a certain String format. To ensure that your string only has hexadecimal values, i.e. 0-9 and a-f, the following regex should do it: <code>^[a-fA-F0-9]+$</code>. The additional "complication" are the four 'b' at the start of your string. I think an easy fix would be to include them as follows: <code>^(bbbb)?[a-fA-F0-9]+$</code>.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; pattern = re.compile('^(bbbb)?[a-fA-F0-9]+$')
&gt;&gt;&gt; test_1 = 'bbbb00000000000000170d0000306fb6'
&gt;&gt;&gt; test_2 = 'bbbb00000000000000170d0000306fx6'
&gt;&gt;&gt; pattern.match(test_1)
&lt;_sre.SRE_Match object; span=(0, 32), match='bbbb00000000000000170d0000306fb6'&gt;
&gt;&gt;&gt; pattern.match(test_2)
&gt;&gt;&gt;
</code></pre>
<p>The part that is currently missing is checking for the exact length of the string for which you could either use the string length method or extend the regex -- but I'm sure you can take it from here :-) </p>
</div>
<div class="post-text" itemprop="text">
<p>As I mentioned in the comment Python <strong>does</strong> have <code>contains()</code> equivalent.</p>
<pre><code>if "blah" not in somestring: 
    continue
</code></pre>
<p><a href="https://stackoverflow.com/a/3437070/3005263">(source)</a> <a href="https://docs.python.org/3/reference/expressions.html#membership-test-details" rel="nofollow noreferrer">(PythonDocs)</a></p>
<p>If you would prefer to use a regex instead to validate your input, you can use this:</p>
<p><code>^b{4}[0-9a-f]{28}$</code> - <a href="https://regex101.com/r/g51QAR/1" rel="nofollow noreferrer">Regex101 Demo with explanation</a></p>
</div>
<span class="comment-copy">Python <b>does</b> have a "contains" equivalent, though: <a href="https://stackoverflow.com/questions/3437059/does-python-have-a-string-contains-substring-method" title="does python have a string contains substring method">stackoverflow.com/questions/3437059/â€¦</a></span>
<span class="comment-copy">Python <i>does</i> have something like <code>Java.lang.String.contains</code>, but it uses the <code>in</code> operator: <code>string1 in string2</code>, although given your specification it sounds like you <i>actually want regex anyway</i></span>
<span class="comment-copy">Does this regex work for you: <code>r'^b{4}[0-9a-f]{28}$'</code>?</span>
<span class="comment-copy">@ikkuh hexadecimal values contain the letters <code>a-f</code>, not <code>a-z</code></span>
<span class="comment-copy">Your regular expression matches a single uppercase character followed by some digits, and repetitions of this pattern. Your string has more than one lowercase character. So it doesn't match.</span>
