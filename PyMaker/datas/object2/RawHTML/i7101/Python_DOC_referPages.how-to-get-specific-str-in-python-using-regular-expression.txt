<div class="post-text" itemprop="text">
<p>I have a str like 
<code>rjg[]u[ur"fur[ufrng[]"gree</code>, </p>
<p>and i want to replace "[" and "]" between "" with #ï¼Œthe result is </p>
<p><code>rjg[]u[ur"fur[ufrng[]"gree</code> =&gt; <code>rjg[]u[ur"fur#ufrng##"gree</code>, </p>
<p>how can i get this in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>One liner solution:</p>
<pre><code>import re

text = 'rjg[]u[ur"fur[ufrng[]"gree'
text = re.sub(r'(")([^"]+)(")', lambda pat: pat.group(1)+pat.group(2).replace(']', '#').replace('[', '#')+pat.group(3), text)
print text
</code></pre>
<p>Output:</p>
<pre><code>rjg[]u[ur"fur#ufrng##"gree
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would try</p>
<pre><code>L = data.split('"')
for i in range(1, len(L), 2):
    L[i] = re.sub(r'[\[\]]', '#', L[i])
result = '"'.join(L)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A one liner without regular expression. Though your solution is very wonderful @jpnkls.</p>
<pre><code>&gt;&gt;&gt; text = 'rjg[]u[ur"fur[ufrng[]"gre[e]"abc[d"ef]"'
&gt;&gt;&gt; '\"'.join([substr.replace('[', '#').replace(']', '#') if n % 2 == 1 else substr for n, substr in enumerate(text.split('\"')[:-1])]+[text.split('\"')[-1]])
rjg[]u[ur"fur#ufrng##"gre[e]"abc#d"ef]"
</code></pre>
<p>This still works for uneven numbers of quotes and a quote at the beginning or the end.</p>
</div>
<div class="post-text" itemprop="text">
<p>An option would be using <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer"><code>str</code></a> built-in functions <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>split()</code></a> and <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>replace()</code></a> like below (<strong>without regex</strong>):</p>
<pre><code>s = 'rjg[]u[ur"fur[ufrng[]"gree'
l = s.split('"')
new_string = '"'.join(w.replace('[', '#').replace(']', '#') for w in l[1:-1])
res = '"'.join((l[0], new_string, l[-1]))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; res
'rjg[]u[ur"fur#ufrng##"gree'
</code></pre>
</div>
<span class="comment-copy">problem is regex doesn't nest.</span>
<span class="comment-copy">What does "between" quotes mean here.  What should the outcome of <code>xx"["["xx</code> be?</span>
<span class="comment-copy">no format like <code>xx"["["xx</code> , cause in my case, the "" will appear in pair</span>
<span class="comment-copy">thank you, helps a lot</span>
<span class="comment-copy">I would add that regex module alone is unable to perform that task (no nesting support)</span>
<span class="comment-copy">thank you, helps a lot</span>
