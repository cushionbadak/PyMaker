<div class="post-text" itemprop="text">
<p>Running a script from the command line, the <code>__name__</code> attribute of that script will be <code>'__main__'</code>. But <code>import</code>ing that script from a different location, the <code>__name__</code> attribute of that module will be the name of the script. </p>
<p>How does python know what the value of <code>__name__</code> should be? Can a script tell that it's being imported, and set the <code>__name__</code> attribute accordingly? </p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/reference/import.html?highlight=__name__#__name__" rel="nofollow noreferrer">From the docs</a></p>
<blockquote>
<p>The import machinery fills in these attributes on each module object during loading, based on the moduleâ€™s spec, before the loader executes the module.</p>
<p><strong><code>__name__</code></strong><br/>
  The <code>__name__</code> attribute must be set to the fully-qualified name of the module. This name is used to uniquely identify the module in the import system.</p>
</blockquote>
<p>So these magic attributes are assigned during the so-called "import machinery". You can read more details <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">about that system in the docs</a> as well.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>Q:</strong> How does python know what the value of <code>__name__</code> should be?</p>
</blockquote>
<p>Well, if you write <code>import foo</code> Python will look for a module named 'foo' and set its name to 'foo'.</p>
<blockquote>
<p><strong>Q:</strong> Can a module tell that it's being imported, ...</p>
</blockquote>
<p>Yes, it can. Usually people do that with <a href="https://docs.python.org/3/library/__main__.html" rel="nofollow noreferrer"><code>if __name__ == '__main__'</code></a> -- if the test passes, it generally means that the module is being executed, if it fails it generally means that it is being imported.</p>
<p>A particular case where this test will fail is when you have a module named <code>__main__</code> (in a file named <code>__main__.py</code>).</p>
<p>If you want to be 100% more sure, you can inspect the <a href="https://docs.python.org/3/library/sys.html#sys._getframe" rel="nofollow noreferrer">frames</a> and see if the module is on top of the stack:</p>
<pre><code>f = sys._getframe()
if f.f_back is None:
    # We're at the top of the stack: this module is being executed.
else:
    # There's a frame on top of us: this module has been imported.
</code></pre>
<blockquote>
<p><strong>Q:</strong> ... and set the <code>__name__</code> attribute accordingly?</p>
</blockquote>
<p>And yes, you can change <code>__name__</code> to whatever you want by simply setting it:</p>
<pre><code>__name__ = 'bar'
</code></pre>
<p>Although there's no reason to do so, other than generating confusion and possibly introducing bugs.</p>
</div>
<span class="comment-copy">In case it is a module <code>__name__</code> is the name of the module.</span>
<span class="comment-copy">@WillemVanOnsem edited for accuracy</span>
