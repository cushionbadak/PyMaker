<div class="post-text" itemprop="text">
<p>I have a function which expects a tuple as one of the arguments</p>
<pre><code>def func(x,
         t # t should be a tuple of a predefined type (str, bool, str)
         ):
    ...
</code></pre>
<p>Is there a built-in error which is appropriate for saying that t is not of the correct type, or should I be defining my own?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, the <a href="https://docs.python.org/3/library/exceptions.html#TypeError" rel="noreferrer"><code>TypeError</code> exception</a> is meant to be used for exactly this case:</p>
<blockquote>
<p>Raised when an operation or function is applied to an object of inappropriate type.</p>
<p><em>[...]</em></p>
<p>Passing arguments of the wrong type (e.g. passing a <code>list</code> when an <code>int</code> is expected) should result in a <code>TypeError</code>[.]</p>
</blockquote>
<p>You may want to look into using <a href="https://www.python.org/dev/peps/pep-0484/" rel="noreferrer">type hinting</a>, to catch programmers errors that pass in the wrong type early. We check type hints during linting time, for example.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use TypeError exception.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, this would typically be indicated by a <code>TypeError</code>. Or if the argument is of the correct type but its value is invalid, use a <code>ValueError</code>.</p>
<p>In many cases (especially with <code>TypeError</code>) you don't have to raise these explicitly, though; they'll just naturally happen when you try to perform an operation that the type doesn't support.</p>
</div>
<span class="comment-copy">Thanks! I love the idea of type hinting, but I'm not sure how to actually programatically validate the type hints (basically, this turns Python into a strongly-typed language, n'est pas?). I'm also working on a small project, so I'm not sure the cost of complexity would be offset by benefit.</span>
<span class="comment-copy">@NotAnAmbiTurner you'd check the hints statically, with an external tool. The hints are not used at runtime.</span>
<span class="comment-copy">Thanks :) Are there any mature type-checkers though?</span>
<span class="comment-copy">@NotAnAmbiTurner <a href="http://mypy.readthedocs.io/en/latest/" rel="nofollow noreferrer">mypy</a> is mature and in production use at Facebook.</span>
