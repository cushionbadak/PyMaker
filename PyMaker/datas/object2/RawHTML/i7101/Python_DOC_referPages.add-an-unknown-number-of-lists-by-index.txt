<div class="post-text" itemprop="text">
<p>I need to add every index of an unknown amount of lists together into one list.</p>
<p>An example of what I mean:</p>
<pre><code>list_a = [1,2,3,4,5]
list_b = [2,4,6,8,10]
list_c = [3,6,9,12,15]

def sum_lists():
    temp_list = []

    for index in range(len(list_a)):
        temp_list.append(list_a[index] + list_b[index] + list_c[index])

    return temp_list

total = sum_lists()
</code></pre>
<p>The expected output of my example code would be:</p>
<pre><code>total = [6,12,18,24,30]
</code></pre>
<p>How would I accomplish the summation of an unknown amount of lists, for example 20 lists? I won't have to do this addition over thousands of lists, but I wouldn't know how many lists I have to add initially.</p>
<p>Any help would be greatly appreciated. All of the lists will be of the same length. </p>
</div>
<div class="post-text" itemprop="text">
<p>Create a list of lists:</p>
<pre><code>In [124]: big_list = [list_a, list_b, list_c]
</code></pre>
<p>Now, <code>zip</code> em up and apply <code>sum</code> to each one using <code>map</code>:</p>
<pre><code>In [125]: list(map(sum, zip(*big_list)))
Out[125]: [6, 12, 18, 24, 30]
</code></pre>
<p>You have other alternatives to <code>map</code>. For example, using a list comprehension:</p>
<pre><code>In [126]: [sum(x) for x in zip(*big_list)]
Out[126]: [6, 12, 18, 24, 30]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can store lists in lists and sum over them.</p>
<p>You could have something like this:</p>
<pre><code>list_a = [1,2,3,4,5]
list_b = [2,4,6,8,10]
list_c = [3,6,9,12,15]

list_of_lists = [list_a, list_b, list_c] # this could be 20+ lists

def sum_lists():
    temp_list = []

    for index in range(len(list_a)):
        temp_list.append(sum([l[index] for l in list_of_lists]))

    return temp_list

total = sum_lists()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's my alternative:</p>
<pre><code>list_a = [1, 2, 3, 4, 5]
list_b = [2, 4, 6, 8, 10]
list_c = [3, 6, 9, 12, 15]

def sum_lists(*arg):

    return [sum(i) for i in zip(*arg)]


results = sum_lists(list_a, list_b, list_c)
</code></pre>
</div>
<span class="comment-copy">If you had to get the sum of a single list (e.g. <code>[1, 2, 3] → 6</code>), how would you do it?</span>
<span class="comment-copy"><code>zip</code> the lists.  In the resulting list of tuples, sum the elements of each tuple.  Look up how to use the <code>zip</code> and <code>sum</code> methods.</span>
<span class="comment-copy"><code>[sum(els) for els in zip(list_a, list_b, list_c)]</code>. As @Prune said, this uses the <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer"><code>sum</code></a> and <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> builtin methods.</span>
<span class="comment-copy">Not exact dupe but close: <a href="https://stackoverflow.com/questions/19261747/sum-of-n-lists-element-wise-python" title="sum of n lists element wise python">stackoverflow.com/questions/19261747/…</a>.</span>
<span class="comment-copy">If you are using a for loop, the answer you accepted isn't the most efficient. It would be better to zip the lists together, iterate over the elements directly and sum those. You should reconsider what answer you want to use.</span>
<span class="comment-copy">Ah, I was wondering where you were. Haven't seen you in a while. For a second, I was starting to get worried ;-)</span>
<span class="comment-copy">@ChristianDean Yeah, been doing a bit of travelling. Hope you didn't miss me too much :p</span>
<span class="comment-copy">How is this different from my answer?</span>
