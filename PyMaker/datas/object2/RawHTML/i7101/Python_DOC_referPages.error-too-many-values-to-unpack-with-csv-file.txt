<div class="post-text" itemprop="text">
<p>my program shown below has the goal of outputting statements based off two criteria:(<code>Year</code> and <code>Location</code>) Once that was accomplished, my next goal is to match <code>year</code> with <code>Yearlink</code> and <code>Location</code> with <code>location</code>. <code>location</code> and <code>year</code> are both input statements. The output should be a statement that outputs values from that row. For some reason, I always receive an error about too many values to unpack. My excel sheet is posted if anyone wants a better idea of what I am talking about.<a href="https://i.stack.imgur.com/AYM2q.jpg" rel="nofollow noreferrer"><img alt="Excel Sheet" src="https://i.stack.imgur.com/AYM2q.jpg"/></a> Anyway I tried everything but nothing was working for me.</p>
<pre><code>Traceback (most recent call last):
  File "C:/Users/RoszkowskiM/Desktop/win4.py", line 134, in &lt;module&gt;
    for From,To,Max,Min in data:
ValueError: too many values to unpack



LOAD_GEN_DATAFILE = 'C:\Users\RoszkowskiM\Desktop\Data_2016.csv' # CSV File to Read
    # read the entire CSV into Python.
    # CSV has columns starting with Year,busnum,busname,scaled_power,tla,location
    data = list(csv.reader(open(LOAD_GEN_DATAFILE)))
    mydict = {}
    for row in data:
        Year,busnum,busname,scaled_power,tla,Location,Yearlink,From,To,Max,Min = row[0:12]



    #If this is a year not seen before, add it to the dictionary
    if Year not in mydict:
        mydict[Year] = {}

    busses_in_year = mydict[Year]
    if Location not in busses_in_year:
         busses_in_year[Location] = []


    #Add the bus to the list of busses that stop at this location
    busses_in_year[Location].append((busnum,busname,scaled_power))
#-------------------------------------------------------------------------------



#-------------------------------------------------------------------------------------------------------------------------------------
#User Input Statement
year = raw_input("Please Select Year of Study: ")
print("\n")

commands = ["Millwood-Buchanan", "Astoria-East-Corona", "Bronx", "DUNWOODIE-North-Sherman_Creek",
            "Vernon", "Greenwood-StatenIsland","West_49th","East_13th","Staten_Island","East_River",
            "East_View","DUNWOODIE-SOUTH","Corona-Jamaica","Astoria-East-Corona-Jamaica",
            "Astoria-West-Queensbridge-Vernon","Astoria-West-Queensbridge"]
max_columns = 50

for index, commands in enumerate(commands):
    stars_amount = max(max_columns - len(commands), 0)
    row = "# {} {}({})".format(commands, "." * stars_amount, index + 1)
    print(row)
location=raw_input(" \n The list above show the TLA Pockets as well as the ID numbers assigned to them ()\n\n Please enter the ID #: ")
print("\n")
Year=year
Location=location




if Year in mydict and Location in mydict[Year]:  
    busses_in_year = mydict[Year]
    print("Here are all the busses at that location for that year and the new LOAD TOTAL: ")
    print("\n")


#Busnum, busname,scaled_power read from excel sheet matching year and location

for busnum,busname,scaled_power in busses_in_year[Location]:
    scaled_power= float(scaled_power)
    busnum = int(busnum)
    print('Bus #: %d\t' % busnum ,'Area Station: %s\t'% busname,'New Load Total: %d MW\t' % scaled_power)
else:
        exit


for row in data:
    Year,busnum,busname,scaled_power,tla,Location,Yearlink,From,To,Max,Min = row[0:11]

    if Yearlink==year and Location==location:
            for From,To,Max,Min in data:
                From=int(From)
                To=int(To)
                Max=float(Max)
                Min=float(Min)
                print('From Bus #: %d\t' % From ,'To Bus #: %d\t'% To,'VMAX: %d pu\t' % Max, 'VMIN: %d pu\t' % Min)                                                                

else:                                                                                                               
    exit
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you considered using a <a href="https://docs.python.org/2/library/csv.html#csv.DictReader" rel="nofollow noreferrer">DictReader</a>? That variable unpacking does seem like a bit of a code smell, and would be much more subject to errors, as opposed to just loading the entire row into a dictionary.</p>
</div>
<span class="comment-copy">Please always post the Traceback in your question.</span>
<span class="comment-copy">Have you tried to <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">catch the error</a> and inspect the variables to see what is happening?  Do you understand what the exception means?</span>
<span class="comment-copy">You should always try to include some example data that we can use to test your code; in the case of a spreadsheet, convert a portion of it to csv and post it. <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a></span>
<span class="comment-copy">I posted the traceback. The excel sheet is posted. I only posted a snippet of it because it is over 1000 lines of data.</span>
<span class="comment-copy">Your screenshot stops at column K but I'm curious if you have data in columns after that?</span>
<span class="comment-copy">how would i do that for my case?</span>
