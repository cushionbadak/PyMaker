<div class="post-text" itemprop="text">
<p>A python newbie question:</p>
<p>I would like to print in python with the c format with a list of parameters:</p>
<pre><code>agrs = [1,2,3,"hello"]
string = "This is a test %d, %d, %d, %s"
</code></pre>
<p>How can I print using python as:</p>
<p><strong>This is a test 1, 2, 3, hello</strong></p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Strings overload the modulus operator, <code>%</code>, for <a href="https://docs.python.org/3/library/stdtypes.html#old-string-formatting" rel="nofollow noreferrer"><code>printf</code>-style formatting</a>, and special case <code>tuple</code>s for formatting using multiple values, so all you need to do is convert from <code>list</code> to <code>tuple</code>:</p>
<pre><code>print(string % tuple(agrs))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have a look at the <code>%</code> operator. It accepts a string and a tuple like that:</p>
<pre><code>print "My age is %d and my favourite char is %c" % (16, '$')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using new-style formatting: How about these one?  (just experementing here)
Docs: <a href="https://docs.python.org/3.6/library/string.html" rel="nofollow noreferrer">https://docs.python.org/3.6/library/string.html</a></p>
<pre><code>args = [1,2,3,"hello"]
string = "{}, "*(len(args)-1)+"{}" # = "{}, {}, {}, {}"

'This is a test {}'.format(string.format(*args)) # inception!
</code></pre>
<p>Or this one:</p>
<pre><code>args = [1,2,3,"hello"]
argstring = [str(i) for i in args]
'This is a test {}'.format(', '.join(argstring))
</code></pre>
<p>Or simply:</p>
<pre><code>args = [1,2,3,"hello"]
'This is a test {}'.format(', '.join(map(str,args)))
</code></pre>
<p>All print:</p>
<blockquote>
<p>This is a test 1, 2, 3, hello</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><strong>Tuple:</strong></p>
<p>Example:</p>
<pre><code>print("Total score for %s is %s  " % (name, score))
</code></pre>
<p>In your case:</p>
<pre><code>print(string % tuple(agrs))
</code></pre>
<p><strong>Or use the new-style string formatting:</strong></p>
<pre><code>print("Total score for {} is {}".format(name, score))
</code></pre>
<p><strong>Or pass the values as parameters and print will do it:</strong></p>
<pre><code>print("Total score for", name, "is", score)
</code></pre>
<hr/>
<p><a href="https://stackoverflow.com/questions/15286401/print-multiple-arguments-in-python">Source</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>l = [1,2,3,"hello"]
print("This is a test %d, %d, %d, %s"%(l[0],l[1],l[2],l[3]))
</code></pre>
<p>Hope this works !
Cheers bud!</p>
</div>
<span class="comment-copy">Look at <a href="https://stackoverflow.com/questions/15286401/print-multiple-arguments-in-python" title="print multiple arguments in python">stackoverflow.com/questions/15286401/â€¦</a></span>
<span class="comment-copy">I'd say go look here in the documentation: <a href="https://docs.python.org/3.6/library/string.html" rel="nofollow noreferrer">docs.python.org/3.6/library/string.html</a> Everything is very well documented there and it should be the first place you look.</span>
<span class="comment-copy">@bouletta: I wouldn't call it a duplicate only because this specific question is concerned with formatting an existing <code>list</code> as sequential format items. True, you could just blindly do <code>string % (agrs[0], agrs[1], agrs[2], agrs[3])</code> and it would work, but you wouldn't necessarily understand why it worked (that you need a <code>tuple</code> specifically, and <code>list(agrs)</code> works just fine.</span>
<span class="comment-copy">This works well for me and is simplest way.  Thanks.</span>
<span class="comment-copy">@ShadowRanger method work best for me because the agrs list is a variable list of parameter.  the "string" is a predefine format so changing it is just making it more complicated.  Thanks Liam.</span>
