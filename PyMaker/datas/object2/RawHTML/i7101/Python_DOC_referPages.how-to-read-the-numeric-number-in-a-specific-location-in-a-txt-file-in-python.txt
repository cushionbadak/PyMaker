<div class="post-text" itemprop="text">
<p>I have an output txt file and I only want the number 13.0 in line 151</p>
<p>13.0  = ebeam1 ! beam 1 total energy in GeV</p>
<p>and 74.761227 line 479 </p>
<p>#  Integrated weight (pb)  :       74.761227</p>
<p>I wonder how to read these numbers and write them as a line in another file?</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to use the linecache module.</p>
<pre><code>import linecache
line = linecache.get('path/to/file', 479)
</code></pre>
<p>Then write it to another file.</p>
<pre><code>with open('other/file.txt', 'w') as f:
    f.write(line)
</code></pre>
<p>Assuming you want to extract just the number portion of the line:</p>
<pre><code>import re
In [4]: re.search(r'(\d+.*\d*$)', line).group()
Out[4]: '74.761227'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Cory Madden's answer will work, but if you didn't know what number the line you're looking for is on you could do something like:</p>
<pre><code>import re

regex = re.compile(r"# Integrated weight \(pb\) : (?P&lt;number&gt;-?\d+\.?\d*)")

with open(file_path, "r") as lines:
    for line in lines:
        match = re.match(regex, line)
        if match:
            number = float(match.group("number"))
            return number
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import linecache
import re

ln = linecache.getline('so_qn_test_file.txt', 479)
nums = re.findall(r"[-+]?\d*\.\d+|[-+]?\d+", ln)
# print(nums)
with open('op_file.txt','w') as f:
    f.write(','.join(nums))
</code></pre>
<p>This will work. I have already tested it. 
For explanation for Regex , <a href="https://docs.python.org/3/library/re.html#re-syntax" rel="nofollow noreferrer">this</a> should help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thank God for your question, you will basically use a for loop to loop through the lines in the file and add each line to a list. So that at anytime you can call the list with the line number you want and that particular line will be delivered to you. You then save it in a variable and then apply regular expression(regex) on it, to get only the floating numbers.</p>
<p>example txt file:</p>
<pre><code>151 Jesus 13.0
152 John
153 Peter 74.745392
</code></pre>
<p>then in your python file</p>
<pre><code>import re

file_line_arr = []
with open('example.txt', 'r') as file:
    for line in file:
        file_line_arr.append(line)
line_1 = file_line_arr[151-1]
line_3 = file_line_arr[153-1]

first_number = re.findall('\d+.?\d+', line_1 )
second_number = re.findall('\d+.?\d+', line_3)

first_number_wq = re.sub("'", "", str(first_number))
first_number_wb = re.sub('(\[|\])', '', first_number_wq)

second_number_wq = re.sub("'", "", str(second_number))
second_number_wb = re.sub('(\[|\])', '', second_number_wq)

with open('new_file.txt', 'w') as new_file:
    new_file.write(first_number_wb + '\n' + second_number_wb)
</code></pre>
<p>Here is a book on python that you will like very much - (<a href="https://www.google.com.gh/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=2&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwig0sX9kM3VAhXCYSYKHfNGDB8QFggvMAE&amp;url=http%3A%2F%2Fhisto.ucsf.edu%2FBMS270%2Fdiveintopython3-r802.pdf&amp;usg=AFQjCNG3lnAst4rGoeT_bTUKF7CZMYNwAA" rel="nofollow noreferrer">dive into python3</a>) search for it</p>
</div>
<span class="comment-copy">Not sure what you are looking for as answer. But you could look into the RegEx language set. It comes built into python and is meant to parse strings. ( <a href="https://regex101.com/" rel="nofollow noreferrer">regex101.com</a> )</span>
<span class="comment-copy">Hi, @surge10!  Welcome to StackOverflow.  You might want to format the code in your answer by adding at least four spaces before each line in the editor, or highlighting it and clicking the <code>{}</code> button.  It will help others to understand what you are saying!</span>
