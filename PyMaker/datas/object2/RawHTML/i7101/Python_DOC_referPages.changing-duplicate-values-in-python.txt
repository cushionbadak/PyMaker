<div class="post-text" itemprop="text">
<p>I have a dictionary of lists of numbers, e.g.:</p>
<pre><code>tDict = {1:[400,200,400,100,0],2:[100,200,300,400,400],3:[200,200,200,100,100]}
</code></pre>
<p>I am not allowed to have duplicate values in the lists so my strategy is to iterate through and replace duplicate values with incremented values. This would produce:</p>
<pre><code>{1:[400,200,401,100,0],2:[100,200,300,400,401],3:[200,201,202,100,101]
</code></pre>
<p>I have tried multiple combinations of counters etc to achieve this:</p>
<pre><code>for k,v in tdict.items():
    for x in range(len(v)):
        for y in range(len(v):
            if v[x]==v[y] and y!0
                v[y]+=1
</code></pre>
<p>etc. (Im pretty new to python as you can probably guess). Any help would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way to do it with <a href="https://docs.python.org/3/library/itertools.html#itertools.count" rel="nofollow noreferrer"><code>itertools.count</code></a> building a new dict from each of the lists and then incrementing the count object when a new instance of an integer is found. The current count is then added to the number:</p>
<pre><code>from itertools import count

for k, v in tDict.items():
   d = {k: count() for k in v}
   tDict[k] = [x+next(d[x]) for x in v]

print tDict
# {1: [400, 200, 401, 100, 0], 
#  2: [100, 200, 300, 400, 401], 
#  3: [200, 201, 202, 100, 101]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try This:</p>
<pre><code>for k, v in tDict.iteritems():
   new_list = []
   for item in v:
       while item in new_list:
           item += 1
       new_list.append(item)
   tDict[k] = new_list
</code></pre>
</div>
<span class="comment-copy">Is there are point of incrementing the duplicate values or why not just remove them? Just trying to understand the logic.</span>
<span class="comment-copy">What is your question?</span>
<span class="comment-copy">I wonder, if is is even possible to add multiple equal <code>values</code> to one <code>key</code> of a <code>dict</code>. How is that <code>dict</code> created? Are those <code>values</code> assigned one by one or is a <code>list</code> created and that list is assigned to a <code>key</code>?</span>
<span class="comment-copy">@MaxM it seems the dictionary has unique keys (obviously), but the values are just lists</span>
<span class="comment-copy">The question is, how those <code>lists</code> be assigned to a <code>key</code>? Assigning the values only would be a more proper way to go, if not multiple <code>lists</code> are possibly added to one <code>key</code></span>
<span class="comment-copy">is this missing an import for iteritems or something? Im a newb and i like how clear the code is here as things like nested list comps are less intuitive. thanks for this anyway.</span>
<span class="comment-copy">@steveeweeveewoo no import is required. Should work as is.</span>
<span class="comment-copy">iteritems does not work in Python3: I should have specified . my bad.</span>
