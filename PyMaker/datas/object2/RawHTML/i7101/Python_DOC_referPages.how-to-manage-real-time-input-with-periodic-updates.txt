<div class="post-text" itemprop="text">
<p>I have a block at position (0,0). Periodically (say every 1 second) the y-coordinate of the block will randomly get updated by +/-1.</p>
<p>And every time the user also inputs a character (+/-) the x-coordinate will be updated by +/-1 as the user has inputted.</p>
<p>If it was only the x coord, I could create a while loop, that runs into the next iteration when input() gets a value.</p>
<p>But how can I deal with both the periodic update as well as the real time input (which can come at any time?)</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3.6/library/threading.html" rel="nofollow noreferrer">Threading</a> is your friend:</p>
<pre><code>import time
from threading import Thread


# This defines the thread that handles console input
class UserInputThread(Thread):
    def __init__ (self):
        Thread.__init__(self)

    # Process user input here:
    def run(self):
        while True:
            text = input("input: ")
            print("You said", text)
            # Exit the thread
            if text == "exit":
                return


console_thread = UserInputThread()
console_thread.start()

while True:
    time.sleep(5)
    print("function")
    # If the thread is dead, the programme will exit when the current iteration of the while loop ends.
    if not console_thread.is_alive():
        break
</code></pre>
<p><code>UserInputThread</code> runs in the background and handles the user input. <code>print("function")</code> could be any logic you need to do in the main thread.</p>
</div>
<span class="comment-copy">If you're asking "how do I poll for keyboard input without blocking indefinitely until the user hits Enter?", <a href="https://docs.python.org/3/library/msvcrt.html#msvcrt.getch" rel="nofollow noreferrer">getch</a> may be an option.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/13207678/whats-the-simplest-way-of-detecting-keyboard-input-in-python-from-the-terminal">What's the simplest way of detecting keyboard input in python from the terminal?</a></span>
<span class="comment-copy">@Kevin Ive played simple terminal games (like tetris) written in Python where the updates (in the case of tetris, the main shape going down by one unit) happens every <code>x</code> second or so, but the shape can be moved sidewards whenever the user inputs a character (using getch I guess). The updates can be done periodically using some time related module. But how to integrate that with the user's inputs?</span>
<span class="comment-copy">Oh thanks this helps a lot!</span>
