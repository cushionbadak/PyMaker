<div class="post-text" itemprop="text">
<p>I have a part in my program that requires working with directories.My current code is:</p>
<pre><code>path = os.path.join('C:','Users',getpass.getuser(),'AppData','Roaming','Microsoft','Windows','Start Menu','Programs','Startup')
</code></pre>
<p>Variable path prints: 'C:Users\\name\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup'.</p>
<p>My question is how can I make var path print 'C:Users/name/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup'</p>
</div>
<div class="post-text" itemprop="text">
<p>As suggested in the comments the system does it. </p>
<p>You are better off changing <code>os.sep</code> or <code>os.path.sep</code> but however you can do this.</p>
<pre><code>&gt;&gt;&gt; os.path.sep = '\\'
&gt;&gt;&gt; os.path.sep
'\\'              #we have changed the separator
&gt;&gt;&gt; os.sep.join(['C:','Users',getpass.getuser(),'AppData','Roaming','Microsoft','Windows','Start Menu','Programs','Startup'])
'C:\\Users\\name\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup'
</code></pre>
<p>But you can simply use this though,</p>
<pre><code>&gt;&gt;&gt; '\\'.join(['C:','Users',getpass.getuser(),'AppData','Roaming','Microsoft','Windows','Start Menu','Programs','Startup'])
'C:\\Users\\name\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup'
</code></pre>
<p>Well both are the same as mentioned in the comments!. </p>
<p>Also <code>os.path.join</code> does not depend upon <code>os.sep</code> or <code>os.path.sep</code> so changing them doesn't prove any effect.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>.replace()</code> method of strings</p>
<pre><code>"C:Users\\name\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup".replace('\\', '/')

#'C:Users/name/AppData/Roaming/Microsoft/Windows/Start Menu/Programs/Startup'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can replace '\\' with '/'</p>
<pre><code>path = path.replace('\\','/')
</code></pre>
</div>
<span class="comment-copy">Why do you want to though? On Windows, <code>\</code> is the directory separator, and the <code>os.path</code> module does the right thing here.</span>
<span class="comment-copy">yes it is correct only and replace does what you want..</span>
<span class="comment-copy">Despite getting the "correct" output depending on your OS from <code>os.path.join</code> you probably also want to use <a href="https://docs.python.org/3/library/os.path.html#os.path.realpath" rel="nofollow noreferrer"><code>os.path.realpath</code></a> on your <code>join</code>ed path to avoid an error from <code>c:Users</code> instead of <code>c:\Users</code>.</span>
<span class="comment-copy">@ChristianKÃ¶nig Thank you,i didn't see there is a backslash missing after C: so I thought python uses / for directory operations. I always mix those.</span>
<span class="comment-copy">Look for the Path class in the <a href="https://github.com/mikeorr/Unipath" rel="nofollow noreferrer">Unipath</a> module. It has very nice features for this kind of problems</span>
<span class="comment-copy">Please notice that <code>os.sep.join</code> is a simple <code>str.join</code> and not the dedicated <code>os.path.join</code>.</span>
