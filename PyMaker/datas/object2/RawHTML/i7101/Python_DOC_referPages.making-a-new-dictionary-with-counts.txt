<div class="post-text" itemprop="text">
<p>I have a list of dictionaries which looks like this:</p>
<pre><code>[{'year_month': '2017-07', 'issue_priority': 'high', 'issue_number': 2153},
 {'year_month': '2017-07', 'issue_priority': 'normal', 'issue_number': 2179},
 {'year_month': '2017-07', 'issue_priority': 'low', 'issue_number': 2169},
 {'year_month': '2017-06', 'issue_priority': 'blocker', 'issue_number': 1998}]
</code></pre>
<p>What I would like to do is to take that list of dictionaries and make it into a dictionary with the following:</p>
<pre><code>{'2017-07': {'high': count of issue_numbers, 'low': count of issue_numbers},
 '2017-06': {'high': count of issue_numbers, 'low': count of issue_numbers}, ...}
</code></pre>
<p>I am just getting back into Python and have never done something like this before so I don't really know where to look. </p>
<p>I know how to iterate over the list but I am not really sure how to get to where I would like to go. </p>
<p>I did the following which has gotten part of the way there, now I am just looking for how to get the count of the issue numbers:</p>
<pre><code>output = {}
for item in issues # issues being my list of dictionaries:
    month = item.pop('year_month')
    output[month] = item
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One option would be to iterate your original list of issues and increment the count in your result manually:</p>
<pre><code>def sort_by_priority(issues):
    result = {}
    for issue in issues:
        priority = issue['issue_priority']
        month = result.setdefault(issue['year_month'], {})
        month[priority] = month.get(priority, 0) + 1
    return result
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This <em>looks</em> like something that should work nicely with a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>, only the inner dictionaries will be counters. You need to do a couple of extra steps to split up by date first.</p>
<p>You need to split the dictionary by <code>year_month</code>. Then, you need to count of all the <code>issue_priority</code> types for that year and month:</p>
<pre><code>from collections import Counter

dates = set(issue['year_month'] for issue in issues)
output = {}
for ym in dates:
    subset = [issue for issue in issues if issue['year_month'] == ym]
    output[ym] = Counter(issue['issue_priority'] for issue in subset)
</code></pre>
<p>Many of the steps shown above can be reduced to a smaller line count, but at the cost of clarity and readability, in my opinion. That being said:</p>
<pre><code>dates = set(issue['year_month'] for issue in issues)
output = {ym: Counter(issue['issue_priority'] for issue in issues if issue['year_month'] == ym) for ym in dates}
</code></pre>
<p>The output of both methods is</p>
<pre><code>{'2017-06': Counter({'blocker': 1}),
 '2017-07': Counter({'high': 1, 'low': 1, 'normal': 1})}
</code></pre>
<p><code>Counter</code> is just a slightly fancier <code>dict</code>, so you can access it as ususal. To avoid problems with missing priority types, just use the <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>get</code></a> method instead of direct indexing:</p>
<pre><code>output['2017-06']['high']
</code></pre>
<p>will raise an error, so do this instead:</p>
<pre><code>output['2017-06'].get('high', 0)
</code></pre>
</div>
<span class="comment-copy">If there are more <code>'issue_priority'</code>s, do you want to add these to the result?</span>
<span class="comment-copy">@WillemVanOnsem yes that would be what I am looking for</span>
<span class="comment-copy">Thank you, while your answer also worked. I chose the other answer, as I did not have to add another library, and didn't have to iterate over another Counter dictionary.</span>
<span class="comment-copy">@DarthOpto. I think you made the right choice for the right reasons. An upvote would be nice though. :)</span>
<span class="comment-copy">Thanks, and have an upvote.</span>
