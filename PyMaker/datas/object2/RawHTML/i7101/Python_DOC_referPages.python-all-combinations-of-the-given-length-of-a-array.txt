<div class="post-text" itemprop="text">
<p>If I have:</p>
<pre><code>a=[[1,2,3],['a','b'],[7,8,9],['c','d','e']]
</code></pre>
<p>I know I should use: </p>
<pre><code>for t in itertools.product(*a):
    print t 
</code></pre>
<p>to get all combinations such as </p>
<pre><code>[(1,'a',7,'c'),(1,'a',7,'d')....]
</code></pre>
<p>However, if I want to set a length subsequence of elements, what should I do?
For example, the result I want is (if I set 3 as a length):</p>
<pre><code>[(1,'a',7),(1,'a','c')....]
</code></pre>
<p>which are all combinations with length 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this by using an outer loop to get all the combinations of 3 sublists in <code>a</code>, and then an inner loop to generate the Cartesian products of those sublists:</p>
<pre><code>import itertools

a = [[1, 2, 3], ['a', 'b'], [7, 8, 9], ['c', 'd', 'e']]

for groups in itertools.combinations(a, 3):
    for t in itertools.product(*groups):
        print(t)
</code></pre>
<p><strong>output</strong></p>
<pre><code>(1, 'a', 7)
(1, 'a', 8)
(1, 'a', 9)
(1, 'b', 7)
(1, 'b', 8)
(1, 'b', 9)
(2, 'a', 7)
(2, 'a', 8)
(2, 'a', 9)
(2, 'b', 7)
(2, 'b', 8)
(2, 'b', 9)
(3, 'a', 7)
(3, 'a', 8)
(3, 'a', 9)
(3, 'b', 7)
(3, 'b', 8)
(3, 'b', 9)
(1, 'a', 'c')
(1, 'a', 'd')
(1, 'a', 'e')
(1, 'b', 'c')
(1, 'b', 'd')
(1, 'b', 'e')
(2, 'a', 'c')
(2, 'a', 'd')
(2, 'a', 'e')
(2, 'b', 'c')
(2, 'b', 'd')
(2, 'b', 'e')
(3, 'a', 'c')
(3, 'a', 'd')
(3, 'a', 'e')
(3, 'b', 'c')
(3, 'b', 'd')
(3, 'b', 'e')
(1, 7, 'c')
(1, 7, 'd')
(1, 7, 'e')
(1, 8, 'c')
(1, 8, 'd')
(1, 8, 'e')
(1, 9, 'c')
(1, 9, 'd')
(1, 9, 'e')
(2, 7, 'c')
(2, 7, 'd')
(2, 7, 'e')
(2, 8, 'c')
(2, 8, 'd')
(2, 8, 'e')
(2, 9, 'c')
(2, 9, 'd')
(2, 9, 'e')
(3, 7, 'c')
(3, 7, 'd')
(3, 7, 'e')
(3, 8, 'c')
(3, 8, 'd')
(3, 8, 'e')
(3, 9, 'c')
(3, 9, 'd')
(3, 9, 'e')
('a', 7, 'c')
('a', 7, 'd')
('a', 7, 'e')
('a', 8, 'c')
('a', 8, 'd')
('a', 8, 'e')
('a', 9, 'c')
('a', 9, 'd')
('a', 9, 'e')
('b', 7, 'c')
('b', 7, 'd')
('b', 7, 'e')
('b', 8, 'c')
('b', 8, 'd')
('b', 8, 'e')
('b', 9, 'c')
('b', 9, 'd')
('b', 9, 'e')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Replace </p>
<pre><code>for t in itertools.product(*a):
</code></pre>
<p>With</p>
<pre><code>for t in itertools.product(*a, repeat=3):
</code></pre>
<p>And take a look at <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer">the docs</a> for further details</p>
</div>
<span class="comment-copy">It gives me 3 repeated full length of a combination such as:          [(1, 'a', 7, 'c', 1, 'a', 7, 'c', 1, 'a', 7, 'c'), ....]</span>
<span class="comment-copy">it isn't doing what is mentioned in the question</span>
<span class="comment-copy">@dPdms apologies, i'll edit the answer</span>
