<div class="post-text" itemprop="text">
<p>The time has come to convert all prints into logging calls in a library I'm maintaining.  Some of the print calls are using <code>str.format</code>, like this (simplified):</p>
<pre><code>&gt;&gt;&gt; n = 4000000
&gt;&gt;&gt; print(f"this bird wouldn't voom if you put {n:,} volts through it!")
this bird wouldn't voom if you put 4,000,000 volts through it!
</code></pre>
<p>When I try to log it:</p>
<pre><code>&gt;&gt;&gt; log.warning("this bird wouldn't voom if you put %d, volts through it!", n)
WARNING:root:this bird wouldn't voom if you put 4000000, volts through it!
</code></pre>
<p>Seems this is not specifying the thousands separator correctly.  How do you specify the thousands separator when using the %-formatting syntax which Python's stdlib logging module necessitates?  </p>
<p>Currently using this workaround, which does give the desired output, but seems wrong since the variable is formatted first using <code>str.format</code> and then formatted as a string again, instead of logging as a number directly:</p>
<pre><code>&gt;&gt;&gt; log.warning("this bird wouldn't voom if you put %s volts through it!", format(n, ','))
WARNING:root:this bird wouldn't voom if you put 4,000,000 volts through it!
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That's a limitation with <code>logging</code> and it's actually mentioned in (at least one place in) the <a href="https://docs.python.org/3/library/logging.html#logging.debug" rel="nofollow noreferrer">documentation</a>: </p>
<blockquote>
<p><code>logging.debug(msg, *args, **kwargs)</code></p>
<p>Logs a message with level <code>DEBUG</code> on the root logger. The msg is the message format string, and the args are the arguments which are merged into <strong><code>msg</code> using the string formatting operator</strong>. (Note that this means that you can use keywords in the format string, together with a single dictionary argument.)</p>
</blockquote>
<p>(emphasis mine)</p>
<p>But the string formatting operator <code>%</code> doesn't support <a href="https://docs.python.org/library/stdtypes.html#printf-style-string-formatting" rel="nofollow noreferrer">thousand seperators</a>.</p>
<p>You could however adapt a recipe from the official <code>cookbook</code>:</p>
<pre><code>import logging

class Message(object):
    def __init__(self, fmt, args):
        self.fmt = fmt
        self.args = args

    def __str__(self):
        return self.fmt.format(*self.args)

class StyleAdapter(logging.LoggerAdapter):
    def __init__(self, logger, extra=None):
        super(StyleAdapter, self).__init__(logger, extra or {})

    def log(self, level, msg, *args, **kwargs):
        if self.isEnabledFor(level):
            msg, kwargs = self.process(msg, kwargs)
            self.logger._log(level, Message(msg, args), (), **kwargs)

logger = StyleAdapter(logging.getLogger(__name__))

def main():
    # this changed
    logger.warning("this bird wouldn't voom if you put {:,} volts through it!", 4000000)

if __name__ == '__main__':
    logging.basicConfig(level=logging.DEBUG)
    main()
</code></pre>
<blockquote>
<p><code>WARNING:__main__:</code> this bird wouldn't voom if you put 4,000,000 volts through it!</p>
</blockquote>
<p>This is actually copied verbatim (I just changed the message) from the last example in the <a href="https://docs.python.org/3/howto/logging-cookbook.html#use-of-alternative-formatting-styles" rel="nofollow noreferrer">"Use of alternative formatting styles"</a> section.</p>
<hr/>
<p>Personally I would just go with your <code>format(n, ',')</code> solution. It may not be perfect but it doesn't require setting up a custom <code>LoggerAdapter</code> to print a different thousand seperator.</p>
</div>
<span class="comment-copy">Shot in the dark: use a <a href="https://docs.python.org/3/library/logging.html#logging.Formatter" rel="nofollow noreferrer"><code>logging.Formatter</code></a> with <code>style="{"</code></span>
<span class="comment-copy">So, maybe something <a href="https://docs.python.org/3/howto/logging-cookbook.html#use-of-alternative-formatting-styles" rel="nofollow noreferrer">here</a> will help.</span>
<span class="comment-copy">@juanpa.arrivillaga  I've tried that in the past, and couldn't get it working.  The <code>{</code> style is used for the template format itself, but not for the parameters of the actual message.  But I may have missed something - if you can get it working, by all means add an answer.</span>
<span class="comment-copy">I've tried to get this to work, myself, also coming up short.  I recommend you continue with your "cheating" version.</span>
<span class="comment-copy">Ugh, the <code>StyleAdapter</code> is really ugly.  Not cool to access protected <code>self.logger._log</code>.  I guess I'll just stick with the workaround.  Thx!</span>
