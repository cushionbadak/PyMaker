<div class="post-text" itemprop="text">
<p>I am trying to autocreate repititive code for an app using python backend. I wish to add a few lines of javascript code to a js file with python script. Can someone please guide me?</p>
<p>My code is shown below:</p>
<pre><code>angular.module('app').config(['$routeProvider',
function($routeProvider) {
    $routeProvider
        .when('/', {
            templateUrl: '/static/partials/home.html',
            controller: 'HomeController'
        })
        .when('/hello', {
            templateUrl: '/static/partials/hello.html',
            controller: 'HelloController'
        })
    }
]);
</code></pre>
<p>I want  to add another url '/index' dynamically from backend which is in python.</p>
<p>So after adding code , it should look as follows:</p>
<pre><code>angular.module('app').config(['$routeProvider',
function($routeProvider) {
    $routeProvider
        .when('/', {
            templateUrl: '/static/partials/home.html',
            controller: 'HomeController'
        })
        .when('/hello', {
            templateUrl: '/static/partials/hello.html',
            controller: 'HelloController'
        })
        .when('/index', {
            templateUrl: '/static/partials/index.html',
            controller: 'IndexController'
        })
    }
]);  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use this.</p>
<pre><code>f = open("&lt;&lt;path of your js file&gt;&gt;.js", 'b')
f.write("console.log('it works');")
f.close()
</code></pre>
<p>The 'b' is the mode in which the open function operates</p>
<p>mode are 'r' for reading, 'w' for writing (truncating the file if it already exists), and 'a' for appending</p>
<p>Please refer to python documentation below.</p>
<p><a href="https://docs.python.org/2/library/functions.html#open" rel="nofollow noreferrer">https://docs.python.org/2/library/functions.html#open</a></p>
</div>
<span class="comment-copy">Are you looking to print text to a file in python?  Check the <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">documentation for input and output</a>.</span>
<span class="comment-copy">I am trying to edit code in a javascript file (.js extension) with python script.</span>
<span class="comment-copy">Is this a wrong way to dynamically add code. The question got a downvote..just trying to clarify?</span>
<span class="comment-copy">Good that you add code to give an example, that usually prevents downvotes :) but anyway, I could answer your question, but won't it be much better to do it within Javascript? That's what functions are for...</span>
<span class="comment-copy">Yeah, I can do with javascript too. Can you tell me how to do it?</span>
<span class="comment-copy">a .js file is basically a text file, why open it as binary? also, if you open it like that, you can't even write to it, just read. why not use <code>with</code>? you're explaining <code>b</code> mode but don't say anything about using it with the other modes. This is a bad answer</span>
<span class="comment-copy">@OferSadan ok thanks, let me change that</span>
<span class="comment-copy">I have added the code. I hope I am more clear now.</span>
<span class="comment-copy">@OferSadan you should append 'b' to the mode value to open the file in binary mode, which will improve portability. (Appending 'b' is useful even on systems that donâ€™t treat binary and text files differently,  <a href="https://docs.python.org/2/library/functions.html#open" rel="nofollow noreferrer">docs.python.org/2/library/functions.html#open</a></span>
<span class="comment-copy">@savinaynarendra Instead of doing this in python, can you have a http call to the python backend which returns the required route details, then you can add the details manually using route provider  <code>var app = angular.module('myApp', []); app.controller('myCtrl', function($scope, $http) { $http.get("./fetchIndex") .then(function(response) {         $scope.route = response.data;    routeProvider.when('/', {templateUrl: '/' + $scope.route});     }); });</code> this is how I did for my angular-python flask web app, however I use UI router for routing,also, routeprovider is avaiable globally</span>
