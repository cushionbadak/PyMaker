<div class="post-text" itemprop="text">
<p>I've recently been looking into how Curses works in Python. I've followed the tutorial here: <a href="https://docs.python.org/3/howto/curses.html" rel="nofollow noreferrer">Curses Programming with Python</a>, and I have successfully messed around with their code to properly output text to various locations in a console screen.</p>
<p>My question is:
Why are some functions attributes of the module, e.g. <code>curses.noecho()</code>
but other functions are attributes of a screen object, e.g. <code>sreen_instance.keypad(True)</code>?</p>
<p>It would make sense to me to have the screen instance specify things like <code>noecho()</code> or <code>cbreak()</code>, rather than the module.</p>
<p>What is the reasoning behind this, and is there any general rule to recognize whether a function should be an attribute of the module, or an attribute of an instance of an object within the Curses library?</p>
</div>
<div class="post-text" itemprop="text">
<p>Notwithstanding the name "stdscr" as "standard <strong>screen</strong>", that is a curses <strong><em>window</em></strong> (and it is the top-level window in case there are subwindows).</p>
<p>The attributes are at the <em>curses</em>-level or <em>window</em>-level because that's how the corresponding functions are organized in curses.  Most of the Python binding has the same name and similar parameters to the C library (allowing for optional parameters in the Python binding which reduce the number of names used, e.g., for <a href="https://docs.python.org/3/library/curses.html#curses.window.addstr" rel="nofollow noreferrer"><code>addstr</code></a> in Python versus <a href="http://invisible-island.net/ncurses/man/curs_addstr.3x.html" rel="nofollow noreferrer"><code>waddstr</code></a> in C).</p>
<p>To see how that works, I'd simply look at the curses C interfaces: anything that uses a <strong><code>WINDOW*</code></strong> parameter (counting aliases such as <code>getch()</code> as <a href="http://invisible-island.net/ncurses/man/curs_getch.3x.html#h3-Reading-characters" rel="nofollow noreferrer"><code>wgetch(stdscr)</code></a>) would be implemented in the Python binding as a <em>window</em> attribute (or function), while those that do not use a <strong><code>WINDOW</code></strong> parameter would be a <em>curses</em> attribute (or function).</p>
</div>
