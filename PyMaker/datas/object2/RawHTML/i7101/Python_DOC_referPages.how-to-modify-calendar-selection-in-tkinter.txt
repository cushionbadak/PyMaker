<div class="post-text" itemprop="text">
<p>I have this wonderful Tkinter code that lets me select dates from a calendar widget and display the datetime text in a second Frame, </p>
<p>I'd really like for the user to have edit capability in that second frame so they can modify the Hour, Minute, second of the selection.</p>
<p><a href="https://i.stack.imgur.com/kTZ90.png" rel="nofollow noreferrer">See the Calendar Widget Screen Shot</a> </p>
<p>I've tried tkinter.Entry() but I cant seem to tie that back to the calendar for auto updates..</p>
<p>See code Below:</p>
<pre><code>class Calendar2(Calendar):
def __init__(self, master=None, call_on_select=None, **kw):
    Calendar.__init__(self, master, **kw)
    self.set_selection_callbeck(call_on_select)

def set_selection_callbeck(self, a_fun):
     self.call_on_select = a_fun


def _pressed(self, evt):
    Calendar._pressed(self, evt)
    x = self.selection
    #print(x)
    if self.call_on_select:
        self.call_on_select(x)
class SecondFrame(tkinter.Frame):

def __init__(self, *args, **kwargs):

    tkinter.Frame.__init__(self, *args, **kwargs)
    self.l = tkinter.Label( self, text="Month(MM)")
    self.l.pack()
    self.pack()

def update_lable(self, x):
    self.l['text'] = x;

def test2():
import sys
root = tkinter.Tk()
root.title('Ttk Calendar')


ttkcal = Calendar2(firstweekday=calendar.SUNDAY)
ttkcal.pack(expand=1, fill='both')

if 'win' not in sys.platform:
    style = ttk.Style()
    style.theme_use('clam')           


sf = SecondFrame(tkinter.Toplevel())

ttkcal.set_selection_callbeck(sf.update_lable)        

root.mainloop()   
test2()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you didn't specify, I'm assuming you're using the code from <a href="http://svn.python.org/projects/sandbox/trunk/ttk-gsoc/samples/ttkcalendar.py" rel="nofollow noreferrer">http://svn.python.org/projects/sandbox/trunk/ttk-gsoc/samples/ttkcalendar.py</a> since everything seems to match.</p>
<p>Instead of using the <code>Label</code> widget, use an <code>Entry</code> widget and bind a <code>&lt;FocusOut&gt;</code> event or a <code>&lt;KeyRelease&gt;</code> event depending on if you want to check when the user unfocused the element, or after each time the text is updated.</p>
<p>Inside the listener function, get a <code>datetime</code> from the text that will be used to set the calendar's date.</p>
<p>Once you have a <code>datetime</code>, set the <code>Calendar</code>'s selection and update the display to show the correct date.</p>
<p>I already made all the code you'll need below:</p>
<pre><code>def setdate(event):
    try:
        # parse the string into a date
        newDate = datetime.datetime.strptime(event.widget.get(), "%Y-%m-%d %H:%M:%S")
    except:
        # the string isn't a valid date, don't do anything
        return

    # change the month and year
    ttkcal._date = datetime.datetime(newDate.year, newDate.month, 1)
    # update the calendar's month and year display
    ttkcal._build_calendar()
    # get the day of the week the day falls on starting from Sunday
    weekday = (newDate.weekday() + 1) % 7

    # get the coordinates of the day in the calendar widget
    # get the x coordinate that day falls on
    x = sum(ttkcal._calendar.column(column)['width'] for column in range(weekday)) + 1 # +1 for the border
    # get the day of the week the first day of that month falls on (starting from Sunday again)
    startWeekday = (datetime.datetime(newDate.year, newDate.month, 1).weekday() + 1) % 7
    # get the row that the date would fall in
    rowNumber = int((newDate.day + startWeekday) / 7)
    # get the y coordinate that week falls on
    y = ttkcal._calendar.bbox(ttkcal._items[rowNumber])[1] + 1
    # dispatch a click to make the calendar think the user clicked on that day
    ttkcal._calendar.event_generate('&lt;ButtonPress-1&gt;', x=x, y=y)
    # it seems to reset the selection for some reason, so set it again
    ttkcal._date = datetime.datetime(newDate.year, newDate.month, 1)

    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    # delete the next line if you are binding to the &lt;FocusOut&gt; event instead of the &lt;KeyRelease&gt; event
    # ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    event.widget.focus_force()



# inside SecondFrame.__init__
self.l = tkinter.Entry(self)
self.l.pack()
self.l.bind("&lt;KeyRelease&gt;", setdate)
</code></pre>
<p>All you gotta do is replace your <code>__init__</code> for <code>SecondFrame</code> with that code. (Keep the <code>tkinter.Frame.__init__(self, *args, **kwargs)</code> of course but that's it)</p>
<p>Keep in mind you'll have to put a date in the form <code>YYYY-MM-DD HH:MM:SS</code> (e.g. <code>2017-8-8 00:00:00</code>). You can change the format on the fourth line where it says <code>"%Y-%m-%d %H:%M:%S"</code> (documentation for the syntax <a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">here</a>). Also, this code requires the <code>datetime</code> module to be imported to create dates.</p>
<p><strong>EDIT:</strong>
You'll also need to change the <code>update_label</code> method to:</p>
<pre><code>self.l.delete(0, 'end')
self.l.insert(0, x)
</code></pre>
<p>That's if you want the text to change even when the user clicks on the calendar</p>
</div>
<span class="comment-copy">Hi, Thanks for the reply! I implemented the code and it gives me the same issue I've been having. Basically, it creates the secondframe "TopLevel", but the "Entry" doesnt appear. So now when I click a date, I just see a grey box</span>
<span class="comment-copy">Okay, I've been able to make this work by removing self from 'self.l = tkinter.Entry(self)' so now it simply reads 'self.l = tkinter.Entry()' Now I get the updated value of the selected date in the entry box, and I can modify that entry by changing the seconds, minutes, hours.. However, those changes are not save when I close the widget. Instead, the returned value remains the selected date, not what is in the entry box. Thats what I need to resolve.</span>
<span class="comment-copy">When you close which widget? And the returned value from what, ttkcal.selection?</span>
