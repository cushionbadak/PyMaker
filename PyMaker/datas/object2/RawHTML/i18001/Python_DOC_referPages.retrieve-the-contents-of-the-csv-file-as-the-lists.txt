<div class="post-text" itemprop="text">
<p>What is the best and most elegant way to retrieve the contents of the csv file as the lists? Note that the required columns such as Country, Area, and Population are to be identified automatically as in the program below.</p>
<pre><code>with open ('data.csv','r') as infile:
    contents = infile.read().split(',')

with open ('data.csv','r') as infile:
    countries = [item.split(',')[contents.index('Country')] for item in infile]

with open ('data.csv','r') as infile:
    areas = [item.split(',')[contents.index('Area')] for item in infile]

with open ('data.csv','r') as infile:
    populations = [item.split(',')[contents.index('Population')] for item in infile]

print (countries)
print (areas)
print (populations)
</code></pre>
<p>Above program works, but looking for pretty short and readable program. </p>
<p>Update:
To prevent error when certain column such as 'Country' does not exist in some file, the program can be improved by:</p>
<pre><code>countries = [item.split(',')[contents.index('Country')] for item in infile if 'Country' in contents]
</code></pre>
<p>How it can be done using csv module??</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="http://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code> module</a> for CSV files:</p>
<pre><code>import csv

countries = []
areas = []
populations = []

with open ('data.csv', newline='') as infile:
    reader = csv.DictReader(infile)
    for row in reader:
        countries.append(row['Country'])
        areas.append(row['Area'])
        populations.append(row['Population'])
</code></pre>
<p>where the <code>DictReader()</code> class automatically uses the first row of headers as keys for the rest of the file.</p>
<p>Or use:</p>
<pre><code>import csv

with open ('data.csv', newline='') as infile:
    reader = csv.reader(infile)
    next(reader, None)  # skip the header first
    countries, areas, populations = zip(*reader)
</code></pre>
<p>if all you have are 3 columns, country, area and population, in that order.</p>
</div>
<span class="comment-copy">Did you try <a href="http://docs.python.org/2/library/csv.html" rel="nofollow noreferrer">csv module</a>?</span>
<span class="comment-copy">thanks. i preferred the first method with DictReader because the columns are not known. However, how can I avoid key error when the specified column header such as 'Area' does not exist in some files during batch processing? @Martijn Pieters</span>
<span class="comment-copy">Test for the key:<code>if 'Area' in row:</code>, etc</span>
