<div class="post-text" itemprop="text">
<p>I want to distinguish between methods and functions in Python 3. Furthermore, I want to get the corresponding class if it is a method. My current solution is like this:</p>
<pre><code>import types
import inspect

def function_or_method(f):
    if inspect.ismethod(f):
        if inspect.isclass(f.__self__):
            print("class method")
            klass = f.__self__
        else:
            print("instance method")
            klass = f.__self__.__class__
    elif inspect.isfunction(f): # function
        if f.__name__ != f.__qualname__: # to distiguish staticmethod and function
            print("static method")
            # HOW TO GET THE CLASS
        else:
            print("function")
    else:
        print("not function or method")

class Foo():
    def bari(self):
        pass
    @classmethod
    def barc(cls):
        pass
    @staticmethod
    def bars():
        pass

def barf():
    pass

function_or_method(Foo().bari) # instance method
function_or_method(Foo.barc) # class method
function_or_method(Foo.bars) # static method
function_or_method(barf) # function
</code></pre>
<p>It works, but it looks not elegant. And I am not sure whether I have missed something. Does anyone know a better solution?</p>
<p><strong>UPDATE 1</strong>: I also want to get the corresponding class if it is a method. I know how to deal with class/instance method(see the above code), but how can I get the class for the static method?</p>
</div>
<div class="post-text" itemprop="text">
<p>You just need to get the type of the method, but since methods are descriptors, you have to :</p>
<p>1 - Get the class out of the instance.
2 - Look up the method reference in <code>__dict__</code> instead of making an attribute lookup. </p>
<p>E.G :</p>
<pre><code>&gt;&gt;&gt; f = Foo()
&gt;&gt;&gt; type(f.__class__.__dict__['bari'])
&lt;class 'function'&gt;
&gt;&gt;&gt; type(f.__class__.__dict__['barc'])
&lt;class 'classmethod'&gt;
&gt;&gt;&gt; type(f.__class__.__dict__['bars'])
&lt;class 'staticmethod'&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think better way to use <code>isfunction()</code> method of <code>inspect</code>.</p>
<p>Syntax:</p>
<pre><code>[inspect.getmembers(&lt;module name&gt;, inspect.isfunction)] # will give all the functions in that module
</code></pre>
<p>If you want to test single method, you can do so by...</p>
<pre><code>inspect.isfunction(&lt;function name&gt;) # return true if is a function else false
</code></pre>
<p>There are many predicates you can use along with is function. Refer to the Python 3 documentation for <a href="http://docs.python.org/3/library/inspect.html" rel="nofollow noreferrer"><code>inspect</code></a> for a clear picture.</p>
</div>
