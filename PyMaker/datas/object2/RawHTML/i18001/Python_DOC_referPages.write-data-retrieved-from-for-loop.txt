<div class="post-text" itemprop="text">
<p>What is the best way to write data retrieved from for loop?</p>
<pre><code>L = ['abc','def','ghi']

for e in L:
    with open ('outfile.txt','w') as outfile:
        print (e, file=outfile)


##But the outfile.txt contains only:
##ghi
##
##        
##I have to write all the elements:
##abc
##def
##ghi
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You re-open the file for writing each loop iteration, which <em>clears</em> the file each time.</p>
<p>Move the file opening <strong>out</strong> of the loop:</p>
<pre><code>L = ['abc','def','ghi']

with open('outfile.txt', 'w') as outfile:
    for e in L:
        print (e, file=outfile)
</code></pre>
<p>Opening a file in <code>w</code> mode explicitly truncates it (removes all data). Quoting the <a href="http://docs.python.org/3/library/functions.html#open" rel="nofollow"><code>open()</code> function documentation</a>:</p>
<blockquote>
<p>Other common values are <code>'w'</code> for writing (truncating the file if it already exists) [...]</p>
</blockquote>
<p>If you <strong>have</strong> to open a file for each iteration, <strong>at the very least</strong> open the file for appending instead, using <code>'a'</code>:</p>
<pre><code>L = ['abc','def','ghi']

for e in L:
    with open('outfile.txt', 'a') as outfile:
        print (e, file=outfile)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is how:</p>
<pre><code>L = ['abc', 'def', 'ghi']    
with open('outfile.txt', 'w') as outfile:
    for e in L:
        # You could also do `outfile.write(e)`
        print(e, file=outfile)
</code></pre>
<p>In the end, the file will look like this:</p>
<pre><code>abc
def
ghi
</code></pre>
<p>Your current method is opening the file in write mode <strong>with each iteration</strong> of the for-loop.  This means that its contents keep getting overwritten.</p>
<p>Remember that each and every time you open a file in write mode, all of its contents are cleared.</p>
</div>
