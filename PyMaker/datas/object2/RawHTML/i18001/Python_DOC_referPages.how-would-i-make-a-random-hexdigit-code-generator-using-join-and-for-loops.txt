<div class="post-text" itemprop="text">
<p>I am new to programming and one assignment I have to do is create a random hexdigit colour code generator using for loops and .join.
Is my program below even close to how you do it, or is it completely off? 
And, is there a way to make a random amount of numbers and letters appear within 6?</p>
<pre><code>import random
str = ("A","B","C","D","E","F","G","H")

seq = ("1","2","3","4","5","6", "7","8","9")

print '#',
for i in range(0,3):

    letter = random.choice(str)
    num = random.choice(seq)
    print num.join(letter),
    print letter.join(num)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Strings can be iterated over, so my code would look like this. </p>
<pre><code>import random

def gen_hex_colour_code():
   return ''.join([random.choice('0123456789ABCDEF') for x in range(6)])

if __name__ == '__main__':
    print gen_hex_colour_code()
</code></pre>
<p>results in </p>
<pre><code>In [8]: 9F04A4

In [9]: C9B520

In [10]: DAF3E3

In [11]: 00A9C5 
</code></pre>
<p>You could then put this in a separate file called for example, <code>myutilities.py</code></p>
<p>Then in your main python file, you would use it like this:</p>
<pre><code>import myutilities

print myutilities.gen_hex_colour_code()
</code></pre>
<p>The <code>if __name__ == '__main__':</code> part will only get executed if you run the myutilities.py file directly. It will not execute when you import it from another file. This is generally where testing functions go.</p>
<p>Also, note that this is using the syntax for Python 2.7. In Python 3.0, one major difference is that print is a function and you would have to use print(gen_hex_colour_code()) instead. See <a href="http://docs.python.org/3.0/whatsnew/3.0.html">http://docs.python.org/3.0/whatsnew/3.0.html</a> for more info on how things are different if you are confused. </p>
<p>Why would I still be using Python 2.7? Many scientific python modules are still using the 2.7 variant, but for a newbie to Python, I would suggest you stick with 3.0</p>
</div>
<div class="post-text" itemprop="text">
<p>One compact way to do this is to use <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="noreferrer">list comprehensions</a> (which are a certain kind of for loop):</p>
<pre><code>&gt;&gt;&gt; alpha = ("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
             "A", "B", "C", "D", "E", "F")
&gt;&gt;&gt; ''.join([random.choice(alpha) for _ in range(6)])
'4CFDE4'
</code></pre>
<p>You could shorten the alphabet line by using <code>range</code> and <code>map</code>:</p>
<pre><code>&gt;&gt;&gt; alpha = map(str, range(10)) + ["A", "B", "C", "D", "E", "F"]
</code></pre>
<p>Or simply just use a string:</p>
<pre><code>&gt;&gt;&gt; alpha = "ABCDEF0123456789"
</code></pre>
<p>PS. Since colors are hex, why not just generate a random number and turn it to hexadecimal?</p>
<pre><code>&gt;&gt;&gt; hex(random.randint(0, 16777215))[2:].upper()
'FDFD4C'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import random
keylist='0123456789ABCDEF'
password=[]
length=15

while len(password) &lt; length:
    a_char = random.choice(keylist)
    password.append(a_char)

print(''.join(password))
</code></pre>
</div>
<span class="comment-copy">and since you are learning python, I'll add a few more comments about how you would use my code.</span>
<span class="comment-copy">In case you were wondering why 16777215, that's 16^6, or #FFFFFF.</span>
