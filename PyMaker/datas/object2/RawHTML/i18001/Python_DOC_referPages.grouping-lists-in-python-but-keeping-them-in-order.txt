<div class="post-text" itemprop="text">
<p>Say I have the following list:</p>
<pre><code>list1 = [{'position':'child','title':'dave','obj':obj,created:'2013-11-20'},
         {'position':'child','title':'james','obj':obj,created:'2013-11-19'},
         {'position':'child','title':'james','obj':obj,created:'2013-11-18'},
         {'position':'child','title':'ian','obj':obj,created:'2013-11-17'},
         {'position':'child','title':'dave','obj':obj,created:'2013-11-16'},
         {'position':'child','title':'dave','obj':obj,created:'2013-11-15'},
         {'position':'child','title':'dave','obj':obj,created:'2013-11-14'}]
</code></pre>
<p>As you can see it is already in date order (and I want to keep it that way). There are lots of answers on stackoverflow on how to use <code>defaultdict</code> to group by common entries, but is there a way to group by <code>title</code> while preserving the <code>created</code> order, like so:</p>
<pre><code>list1 = [{'position':'parent','title':'dave root'},
         {'position':'child','title':'dave','obj':obj,created:'2013-11-20'},
         {'position':'parent','title':'james root'},
         {'position':'child','title':'james','obj':obj,created:'2013-11-19'},
         {'position':'child','title':'james','obj':obj,created:'2013-11-18'},
         {'position':'parent','title':'ian root'},
         {'position':'child','title':'ian','obj':obj,created:'2013-11-17'},
         {'position':'parent','title':'dave root'},
         {'position':'child','title':'dave','obj':obj,created:'2013-11-16'},
         {'position':'child','title':'dave','obj':obj,created:'2013-11-15'},
         {'position':'child','title':'dave','obj':obj,created:'2013-11-14'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="http://docs.python.org/2/library/itertools.html#itertools.groupby" rel="nofollow"><code>itertools.groupby</code></a>:</p>
<pre><code>list1 = [{'position':'child','title':'dave','obj':'obj','created':'2013-11-20'},
         {'position':'child','title':'james','obj':'obj','created':'2013-11-19'},
         {'position':'child','title':'james','obj':'obj','created':'2013-11-18'},
         {'position':'child','title':'ian','obj':'obj','created':'2013-11-17'},
         {'position':'child','title':'dave','obj':'obj','created':'2013-11-16'},
         {'position':'child','title':'dave','obj':'obj','created':'2013-11-15'},
         {'position':'child','title':'dave','obj':'obj','created':'2013-11-14'}]

import itertools
import operator

list1 = [
    x
    for key, grp in itertools.groupby(list1, key=operator.itemgetter('title'))
    for x in [{'position': 'parent', 'title': key + ' root'}]+ list(grp)
]
for x in list1:
    print(x)
</code></pre>
<p>Output:</p>
<pre><code>{'position': 'parent', 'title': 'dave root'}
{'position': 'child', 'created': '2013-11-20', 'obj': 'obj', 'title': 'dave'}
{'position': 'parent', 'title': 'james root'}
{'position': 'child', 'created': '2013-11-19', 'obj': 'obj', 'title': 'james'}
{'position': 'child', 'created': '2013-11-18', 'obj': 'obj', 'title': 'james'}
{'position': 'parent', 'title': 'ian root'}
{'position': 'child', 'created': '2013-11-17', 'obj': 'obj', 'title': 'ian'}
{'position': 'parent', 'title': 'dave root'}
{'position': 'child', 'created': '2013-11-16', 'obj': 'obj', 'title': 'dave'}
{'position': 'child', 'created': '2013-11-15', 'obj': 'obj', 'title': 'dave'}
{'position': 'child', 'created': '2013-11-14', 'obj': 'obj', 'title': 'dave'}
</code></pre>
</div>
<span class="comment-copy">can you explain <code>for key, grp in itertools.groupby(list1, key=operator.itemgetter('title'))</code> and <code>for x in [...]+ list(grp)</code> for me. Also what is <code>x</code> doing? Why is it there?</span>
<span class="comment-copy">@Sevenearths, <code>operator.itemgetter('title')</code> is like <code>lambda x: x['title']</code>. See <a href="http://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer">docs.python.org/3/library/operator.html#operator.itemgetter</a></span>
<span class="comment-copy">@Sevenearths, <code>x</code> is element of [...] + list(grp). See <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">List comphrension - from Python tutorial</a>.</span>
