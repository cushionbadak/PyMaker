<div class="post-text" itemprop="text">
<p>I've been making a genetic program and I've come across a problem. It seems that it will try to calculate large exponents but freeze (which is understandable, because it is a large number) in the process. Is there any way to time the execution? This way I could stop calculating before it freezes for several minutes. Thank you for your help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Generally, you don't really want to do what you're asking. (In fact, there's more than one red flag there.) But if you do:</p>
<p>The only way you can let something run, while also timing is, is to put it in a separate thread or process.</p>
<p>If you want to be able to forcibly interrupt that something, it has to be a process.</p>
<p>So, for example:</p>
<pre><code>import multiprocessing

def try_slow_thing(function, args, timeout):
    p = multiprocessing.Process(target=function, args=args)
    p.start()
    p.join(timeout)
    if p.is_alive():
        p.terminate()
        raise TimeoutError("stupid process wouldn't finish")
</code></pre>
<p>If you want to return a value from the function, or share values from the main process, or anything else more fancy than just "run and finish or don't", read the introductory parts of the <a href="http://docs.python.org/3/library/multiprocessing.html" rel="nofollow"><code>multiprocessing</code></a> docs and skim the rest. (In fact, do that anyway.)</p>
</div>
<span class="comment-copy">I have a great idea: Don't use <code>eval</code>!!</span>
<span class="comment-copy">use <a href="http://www.ibm.com/developerworks/aix/library/au-threadingpython/" rel="nofollow noreferrer">Threads</a> for heavy computational work.</span>
<span class="comment-copy"><code>eval</code> is bad stuff.. Also, you need to show us some code to find what's wrong with it.</span>
<span class="comment-copy">@clcto: No, not in Python, especially CPython. In CPython, if you have more than one CPU-bound thread, they just get in each other's way. (And before 3.2, even having <i>one</i> CPU-bound thread gets in the way of other threads.) So you should use <i>processes</i> for heavy computational work, not threads. (And it's often not a bad idea in other languages; it avoids many of the painful race problems that plague multithreaded programs.)</span>
<span class="comment-copy">What should function or process I use instead of eval() and multiprocessing for calculating the value of strings while timing them to make sure they don't take hours? An example would be eval("85*85940385034").</span>
