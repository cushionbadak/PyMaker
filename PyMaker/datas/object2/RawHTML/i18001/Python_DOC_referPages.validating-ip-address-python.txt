<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/319279/how-to-validate-ip-address-in-python">How to validate IP address in Python? [duplicate]</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>I need to write a script that prints out a statement stating whether an IP is valid or invalid.</p>
<p>IP addresses are made up of four bytes (each with a valid range of 0-255).</p>
<p>valid examples: 127.0.0.1 , 123.244.100.1 , etc.</p>
<p>invalid examples: 124,44,2,2  ,  127.0.2,4  , 355.23.24.43 , etc.</p>
<p>I'm guessing the easiest way would be to use regex? but i am having some trouble with that.</p>
<p>I also thought about using split(), but im not sure how I would handle any other special characters that aren't a "." </p>
<p>Any help or advice would be great, thanks</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; import socket
&gt;&gt;&gt; socket.inet_aton("127.0.0.1")    # valid
'\x7f\x00\x00\x01'
&gt;&gt;&gt; socket.inet_aton("127.1")        # oh yes this is valid too!
'\x7f\x00\x00\x01'
&gt;&gt;&gt; socket.inet_aton("127.0.0,1")    # this isn't
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
socket.error: illegal IP address string passed to inet_aton
</code></pre>
<p>to test for valid IPv6 addresses you can use</p>
<pre><code>&gt;&gt;&gt; socket.inet_pton(socket.AF_INET6, "2001:db8:1234::")
b' \x01\r\xb8\x124\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use the IPy module which specialises in handling IP addresses.
<a href="https://pypi.python.org/pypi/IPy/" rel="nofollow">https://pypi.python.org/pypi/IPy/</a></p>
<pre><code>from IPy import IP
try:
    ip = IP('127.0.0.1')
except ValueError:
    # invalid IP
</code></pre>
<p>Python 3 offers the ipaddress module.
<a href="http://docs.python.org/3/library/ipaddress" rel="nofollow">http://docs.python.org/3/library/ipaddress</a>. Instead of using IPy, you can do this:</p>
<pre><code>ip = ipaddress.ip_address('127.0.0.1')
</code></pre>
<p>and that will throw a ValueError exception.</p>
</div>
<span class="comment-copy">Since when is 123.444.333.1 a valid IP?</span>
<span class="comment-copy">whoops fixed that...</span>
<span class="comment-copy">Looking forward to your regex for ipv6 addresses...why not use a library?</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/319279/how-to-validate-ip-address-in-python" title="how to validate ip address in python">stackoverflow.com/questions/319279/â€¦</a></span>
<span class="comment-copy">2003::5 is a valid IP address.</span>
<span class="comment-copy">thanks, that works!</span>
