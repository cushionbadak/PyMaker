<div class="post-text" itemprop="text">
<p>I have a main list that looks like this:</p>
<pre><code>a = [ [[1,2,3],[4,5,6]], [[7,8,9],[10,11,12]], [[13,14,15],[16,17,18]] ]
</code></pre>
<p>and I need to rearrange it to make it look like this:</p>
<pre><code>b = [[1,2,3,7,8,9,13,14,15], [4,5,6,10,11,12,16,17,18]]
</code></pre>
<p>ie: take all the elements in the first sublists in each sublist of the main list and put them in a single sublist in the <code>0</code> position of a new list and then do the same for the second sublists and put all elements in a single sublist in position <code>1</code> of this new list.</p>
<p>I've tried <code>zip</code> combined with the solution given in <a href="https://stackoverflow.com/questions/952914/making-a-flat-list-out-of-list-of-lists-in-python">Making a flat list out of list of lists in Python</a> but I just can't get it to work.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = [ [[1,2,3],[4,5,6]], [[7,8,9],[10,11,12]], [[13,14,15],[16,17,18]] ]
b = [[item for sitems in items for item in sitems] for items in zip(*a)]
print b
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[[1, 2, 3, 7, 8, 9, 13, 14, 15], [4, 5, 6, 10, 11, 12, 16, 17, 18]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/2/library/functions.html#zip" rel="nofollow"><code>zip</code></a> with <code>*</code> and <a href="http://docs.python.org/2/library/itertools.html#itertools.chain.from_iterable" rel="nofollow"><code>itertools.chain.from_iterable</code></a>.</p>
<pre><code>&gt;&gt;&gt; from itertools import chain, izip
&gt;&gt;&gt; [list(chain.from_iterable(x)) for x in zip(*a)] #or `izip`
[[1, 2, 3, 7, 8, 9, 13, 14, 15], [4, 5, 6, 10, 11, 12, 16, 17, 18]]
</code></pre>
<p>Here <code>zip(*a)</code> returns:</p>
<pre><code>[([1, 2, 3], [7, 8, 9], [13, 14, 15]), ([4, 5, 6], [10, 11, 12], [16, 17, 18])]
</code></pre>
<p>Now you can flatten its items using <code>chain.from_iterable(x)</code>.</p>
<h1>Timing comparisons:</h1>
<pre><code>In [1]: from itertools import izip, chain
In [2]: a = [[[1,2,3],[4,5,6]], [[7,8,9],[10,11,12]], [[13,14,15],[16,17,18]]]
In [3]: %timeit [list(chain.from_iterable(x)) for x in zip(*a)]
100000 loops, best of 3: 3.71 us per loop
In [4]: %timeit [[i for v in r for i in v] for r in zip(*a)]
100000 loops, best of 3: 2.73 us per loop

In [5]: b = a *100
In [6]: %timeit [list(chain.from_iterable(x)) for x in zip(*b)]
10000 loops, best of 3: 97.6 us per loop
In [7]: %timeit [list(chain.from_iterable(x)) for x in izip(*b)]
10000 loops, best of 3: 97.6 us per loop
In [8]: %timeit [[i for v in r for i in v] for r in zip(*b)]
10000 loops, best of 3: 144 us per loop
In [9]: %timeit [[i for v in r for i in v] for r in izip(*b)]
10000 loops, best of 3: 143 us per loop

In [10]: c = a*10000
In [11]: %timeit [list(chain.from_iterable(x)) for x in zip(*c)]
100 loops, best of 3: 12.9 ms per loop
In [12]: %timeit [list(chain.from_iterable(x)) for x in izip(*c)]
100 loops, best of 3: 12.3 ms per loop
In [13]: %timeit [[i for v in r for i in v] for r in zip(*c)]
100 loops, best of 3: 17 ms per loop
In [14]: %timeit [[i for v in r for i in v] for r in izip(*c)]
100 loops, best of 3: 17.1 ms per loop
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; a = [[[1,2,3],[4,5,6]], [[7,8,9],[10,11,12]], [[13,14,15],[16,17,18]]]
&gt;&gt;&gt;
&gt;&gt;&gt; [[i for v in r for i in v] for r in zip(*a)]
[[1, 2, 3, 7, 8, 9, 13, 14, 15], [4, 5, 6, 10, 11, 12, 16, 17, 18]]
</code></pre>
<p>See: <a href="http://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip()</code></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Lists can be flattened by using sum() with the empty list as a first element, so you can use this:</p>
<pre><code>[sum((item[0] for item in a), []), sum((item[1] for item in a), [])]
</code></pre>
<p>or this, for an arbitrary number of inner elements:</p>
<pre><code>[sum((item[i] for item in a), []) for i in range(len(a[0]))]
</code></pre>
</div>
<span class="comment-copy">Selecting this one because it needs no additional packages to be imported. Thank you!</span>
<span class="comment-copy">@Gabriel You are welcome :)</span>
