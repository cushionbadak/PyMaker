<div class="post-text" itemprop="text">
<pre><code>    a = self.test_lockCheck():
    d = []
    for i in a.iteritems():
        d = a.replace('1','3')
</code></pre>
<p><code>a</code> instantiates a function which <code>return</code>'s a list which contains a string for each of its indices. Each string indice will always contain a '1' which needs to be replaced by '3'. I found <code>replace()</code> in another question on this site. I was curious if anyone knew of another way? Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply use a <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>, instead of trying to create a new list via a <code>for</code>-loop:</p>
<pre><code>a = [s.replace('1','3') for s in self.test_lockCheck()]
</code></pre>
<p>If you're dealing with a dictionary, you can still apply something similar:</p>
<pre><code>a = {k.replace('1','3'): v for k,v in self.test_lockCheck().iteritems()}
</code></pre>
</div>
<span class="comment-copy">It sounds like you mean to say that <code>a</code> will be a <code>dict</code> that has <code>string</code> types for its keys, especially since you're using <code>a.iteritems()</code> which wouldn't work if <code>a</code> was a <code>list</code>.</span>
<span class="comment-copy">yes there is always another way ... its hard to tell what you are trying to actually accomplish and what is wrong with the current solution? (I think you mean <code>d.append(a.replace('1','3'))</code> also its unclear what the return of test_lockCheck is ... chances are you should just modify <code>test_lockCheck(key)</code></span>
<span class="comment-copy">your example does not work... it is unclear what is being asked</span>
<span class="comment-copy">except its not actually a list (+1 though)</span>
<span class="comment-copy">@JoranBeasley <i>"... which <code>return</code>'s a list ..."</i>. Although I see what you mean, looking at the code.</span>
<span class="comment-copy">however he is using iteritems ... :) ... but his example is very broken so no idea what he actually has or wants :/</span>
<span class="comment-copy">I wasn't aware that <code>iteritems()</code> was used for only dicts/hashes. I assure you that what <code>test_lock check()</code> returns is a list. Sorry, for the brokenness.</span>
<span class="comment-copy">@user2264406 In that case, the first snippet should work. Do let me know if it does not.</span>
