<div class="post-text" itemprop="text">
<p>Just trying to figure out the intended use of Python3.3's implementation of <a href="http://www.python.org/dev/peps/pep-0405/" rel="noreferrer">PEP405</a>, which is the venv spec. This is my first dive into Python3, as I've been in Python2 up until now.</p>
<p>Running Linux Mint KDE, which is pretty much a Debian distro, I compiled and installed Python 3.3.2. To try out this fancy new feature, I went to where I wanted to create a venv, and ran <code>python3.3 -m venv testenv</code>. It properly created the env. What confuses me, according to the spec, there should be a pysetup3 file inside the bin directory, however there isn't such a file. My guess is that it's the equivalent to easy_install.</p>
<p>Since there is no standard install scripts inside the env, I just downloaded and ran the easy_install script, and then ran <code>easy_install pip</code> to get a pip command for my env.</p>
<p>Is this pysetup3 script an old idea that didn't make the cut? Am I supposed to reinstall easy_install and pip on each new venv?</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks to Jim Garrison for pointing me in the direction. It seems <a href="http://www.python.org/dev/peps/pep-0453/" rel="nofollow">PEP453</a> will solve the issue of what seems to be missing in new environments using <code>venv</code>. PEP453 states that <code>pip</code> will be available by default in Python installations, including the explicitly referenced <code>venv</code>. PEP453 is slated to be included in Python 3.4. I guess for now in Python 3.3, we'll have to manually install <code>setuptools</code> and <code>pip</code>, or continue to use <code>virtualenv</code>.</p>
<p>No idea what <code>pysetup3</code> is from <a href="http://www.python.org/dev/peps/pep-0405/" rel="nofollow">PEP405</a>, but I guess not everything has to be to spec. :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Until pip is a part of Python in 3.4, you can create virtual environments that include pip by running <a href="http://docs.python.org/3/library/venv.html#an-example-of-extending-envbuilder" rel="nofollow">this script</a> available in the docs.  The script simply extends venv's EnvBuilder class to install setuptools and pip after creation of the environment.</p>
<p>Pip installs to the venv's "local/bin" folder.  You'll want to symlink it to the "bin" folder so that it works as expected after running "activate".  From the shell, type:</p>
<pre><code>ln -s /path/to/venv/local/bin/pip /path/to/venv/bin/pip
</code></pre>
<p>Alternatively, you can add two lines of code to the install_pip() method in the <a href="http://docs.python.org/3/library/venv.html#an-example-of-extending-envbuilder" rel="nofollow">script</a> to do this for you each time:</p>
<pre><code>def install_pip(self, context):
    ... (default script code) ...
    # Add these two lines at the end:
    pip_path = os.path.join(context.env_dir, 'local', 'bin', 'pip')
    self.symlink_or_copy(pip_path, os.path.join(context.bin_path, 'pip'))
</code></pre>
</div>
<span class="comment-copy">Interesting. It's might be worth noting that the <a href="http://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">current documentation</a> makes no mention of the <code>pysetup3</code> script, but does mention (in the grey <b>Note:</b> box) having to do the <code>distribute_setup.py</code> dance after activating the <code>venv</code>.</span>
<span class="comment-copy">I've tried using Python 3.3's <code>venv</code>, but after experiencing issues such as this I went back to using <code>virtualenv</code>.  I'm hoping that Python 3.4's <a href="http://www.python.org/dev/peps/pep-0453/" rel="nofollow noreferrer">inclusion of <code>pip</code></a> makes it much nicer to work with <code>venv</code> in the future.</span>
<span class="comment-copy">@Jim Garrison, I wonder if that's the reason they didn't include a script to auto-install easy_install and pip then upon creation of a venv.</span>
