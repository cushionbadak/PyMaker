<div class="post-text" itemprop="text">
<p>I use Wikipedia's API to get information about a page.
The API gives me JSON like this:</p>
<pre><code>"query":{
  "pages":{
     "188791":{
        "pageid":188791,
        "ns":0,
        "title":"Vanit\u00e9",
        "langlinks":[
           {
              "lang":"bg",
              "*":"Vanitas"
           },
           {
              "lang":"ca",
              "*":"Vanitas"
           },
           ETC.
        }
     }
  }
}
</code></pre>
<p>You can see <a href="http://fr.wikipedia.org/w/api.php?action=query&amp;titles=Vanit%C3%A9&amp;prop=langlinks&amp;lllimit=500&amp;format=jsonfm" rel="nofollow noreferrer">the full JSON response</a>.</p>
<p>I want to obtain all entries like:</p>
<pre><code>{
   "lang":"ca",
   "*":"Vanitas"
}
</code></pre>
<p>but the number key ("188791") in the <code>pages</code> object is the problem. </p>
<p>I found <a href="https://stackoverflow.com/questions/14227561/find-a-value-within-nested-json-dictionary-in-python">Find a value within nested json dictionary in python</a> that explains me how to do enumerate the values.</p>
<p>Unfortunately I get the following exception:</p>
<pre><code>TypeError: 'dict_values' object does not support indexing
</code></pre>
<p>My code is:</p>
<pre><code>json["query"]["pages"].values()[0]["langlinks"]
</code></pre>
<p>It's probably a dumb question but I can't find a way to pass in the page id value.</p>
</div>
<div class="post-text" itemprop="text">
<p>As long as you're only querying one page at a time, <a href="https://stackoverflow.com/a/20010860/411022">Simeon Visser's answer</a> will work.  However, as a matter of good style, I'd recommend structuring your code so that you iterate over all the returned results, even if you know there should be only one:</p>
<pre><code>for page in data["query"]["pages"].values():
    title = page["title"]
    langlinks = page["langlinks"]
    # do something with langlinks...
</code></pre>
<p>In particular, by writing your code this way, if you ever find yourself needing to run the query for multiple pages, you can do it efficiently with a single MediaWiki API request.</p>
</div>
<div class="post-text" itemprop="text">
<p>One solution is to use the <code>indexpageids</code> parameter, e.g.: <a href="http://fr.wikipedia.org/w/api.php?action=query&amp;titles=Vanit%C3%A9&amp;prop=langlinks&amp;lllimit=500&amp;format=jsonfm&amp;indexpageids" rel="nofollow">http://fr.wikipedia.org/w/api.php?action=query&amp;titles=Vanit%C3%A9&amp;prop=langlinks&amp;lllimit=500&amp;format=jsonfm&amp;indexpageids</a>. It will add an array of pageids to the response. You can then use that to access the dictionary.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're using Python 3 and <code>values()</code> now returns a <code>dict_values</code> instead of a <code>list</code>. This is <a href="http://docs.python.org/3/library/stdtypes.html#dict.values" rel="nofollow">a view on the values of the dictionary</a>.</p>
<p>Hence that's why you're getting that error because indexing fails. Indexing is possible in a list but not a view.</p>
<p>To fix it:</p>
<pre><code>list(json["query"]["pages"].values())[0]["langlinks"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you really want just one page arbitrarily, do that the way Simeon Visser suggested.</p>
<p>But I suspect you want all langlinks in <em>all</em> pages, yes?</p>
<p>For that, you want a comprehension:</p>
<pre><code>[page["langlinks"] for page in json["query"]["pages"].values()]
</code></pre>
<p>But of course that gives you a 2D list. If you want to iterate over each page's links, that's perfect. If you want to iterate over all of the langlinks at once, you want to flatten the list:</p>
<pre><code>[langlink for page in json["query"]["pages"] 
 for langlink in page["langlinks"].values()]
</code></pre>
<p>… or…</p>
<pre><code>itertools.chain.from_iterable(page["langlinks"] 
                              for page in json["query"]["pages"].values())
</code></pre>
<p>(The latter gives you an iterator; if you need a list, wrap the whole thing in <code>list</code>. Conversely, for the first two, if you <em>don't</em> need a list, just any iterable, use parens instead of square brackets to get a generator expression.)</p>
</div>
<span class="comment-copy">Why pick only the first value? There is no ordering in a dictionary, so 'first' depends on various factors out of your control. What should happen if there is more than one entry in that dictionary?</span>
<span class="comment-copy">Are you sure there will only be one page, or that you only want the first page (and remember, in both JSON and Python dictionaries, "first" is effectively random) if there are more than one?</span>
<span class="comment-copy">@abarnert: If he queried only one page, he <i>should</i> get data for only one page. Anything else would be a bug in MediaWiki.</span>
<span class="comment-copy">As a side note, calling your dictionary <code>json</code> is a very bad idea. That's the name of the module that you use to encode and decode JSON; once you've hidden it with a dictionary, you can't access the module anymore.</span>
<span class="comment-copy">@IlmariKaronen: And you know that the code he wrote to generate that query is inserting a single <code>title</code> and not <code>'|'.join(titles)</code>? And that the same will be true for anyone who searches for this question in the future? And that none of them will ever want to use this code for something more general? The point remains that getting the "first value" out of a dictionary is a weird thing to do in general, and can be a problem with this particular API, and even if you know it won't be a problem with your current code, you should understand why your circumstances are special.</span>
<span class="comment-copy">Thank you it work great ;)</span>
<span class="comment-copy">@Oyabi: Ps. With no disrespect to abarnert intended, if you decided to use my solution, you might want to consider selecting it as the accepted one. Of course, if you don't, that's fine too -- it's your question and your choice. :)</span>
<span class="comment-copy">Sorry I'm not very habistue with this site ;)</span>
<span class="comment-copy">+1 for teaching me a new MW API feature. :)</span>
<span class="comment-copy">I try your solution but I've got this message <b>TypeError: string indices must be integers</b> My code are the following : <code>test= [langlink for page in json["query"]["pages"] for langlink in page["langlinks"]]     print(test)</code> I use Ilmari Karonen solution but I want to know what I doing wrong. Thank you ;)</span>
<span class="comment-copy">@Oyabi: I think you need to add <code>.values()</code> after <code>json["query"]["pages"]</code>, otherwise it iterates over the keys, which are strings. But I doubt you really want a flattened list of langlinks from multiple pages anyway; it seems like kind of a useless thing to query for. If you're sure you'll never want to fetch langlinks for more than one page at a time, you can use Simeon Visser's solution (preferably with a comment saying that, yes, there can only ever be one element in the dict), otherwise use mine.</span>
<span class="comment-copy">Yep that's work. Thank you very much I have more understand comprehension list with your help. Have a nice day ;)</span>
<span class="comment-copy">@IlmariKaronen: Thanks for catching the missing <code>values</code>.</span>
<span class="comment-copy">@IlmariKaronen: Ah, I assumed you were making the same argument you made in the original comments to the question, not a different one that just sounds similar. Probably my fault for making that assumption and not reading carefully.</span>
