<div class="post-text" itemprop="text">
<p>So I made a very primitive and probably inefficient calculator today (first time using Python), and I want to be able to continue doing more problems, how would I do so? Here is my "calculator" app..</p>
<pre><code>import time
print ("Welcome. This is a calculator that uses the function: A (operator) B.")
time.sleep(3.5)
print ("Available operators include: Addition, Subtraction, Multiplication, Division,        Exponent, and Remainder division.")
time.sleep(3.5)
a = float(input("Type in a value of A. "))
b = float(input("Type in a value of B. "))
operb = input("Would you like to: Add - Subtract - Multiply - Divide - Exponent - or Remainder? ")
opera = operb.lower()
if (opera) == "add":
    print ((a) + (b))
elif (opera) == "subtract":
    print ((a) - (b))
elif (opera) == "multiply":
    print ((a) * (b))
elif (opera) == "divide":
    print ((a) / (b))
elif (opera) == "exponent":
    print ((a) ** (b))
elif (opera) == "remainder":
    print ((a) % (b))
else:
    print ("Invalid operation.")
cont = input("Would you like to do another problem?")
cont = cont.lower()
if (cont) == "yes":
    ??
else:
    quit
</code></pre>
<p>I want it to restart at the "Type in a value of A." part, but I'm not sure how to do that.</p>
</div>
<div class="post-text" itemprop="text">
<p>The best way of doing this is probably with a while loop.</p>
<pre><code>while True:
    ## your code
    if cont != "yes":
        break
## quit
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using a <a href="http://docs.python.org/3/reference/compound_stmts.html#while" rel="nofollow">while loop</a>, which keeps executing the block as long as the condition, <code>cont == "yes"</code>, is true, i.e. it stops when the condition becomes false. After the while loop stops, the code after it is executed, in this case <code>print("Bye, thanks for using the calculator.")</code>.</p>
<p><strong>PS</strong>: <em>The brackets around <code>a</code> and <code>b</code> in <code>print ((a) + (b))</code> are unnecessary. Similarly, the brackets around <code>opera</code> and <code>cont</code> are also unnecessary. Also, the space after <code>print</code> makes it a little hard to see which function the arguments are part of. I'd suggest you remove the space. Otherwise for a beginner-level programmer the code is good. Once you become more experienced with Python, you might want to use a dictionary mapping the names of the operator into the functions in the <a href="http://docs.python.org/3/library/operator.html" rel="nofollow"><code>operator</code></a> module.</em></p>
<pre><code>import time
print ("Welcome. This is a calculator that uses the function: A (operator) B.")
time.sleep(3.5)
print ("Available operators include: Addition, Subtraction, Multiplication, Division,        Exponent, and Remainder division.")
time.sleep(3.5)
cont = "yes" # So that the first time the while loop block will run
while cont == "yes":
    a = float(input("Type in a value of A. "))
    b = float(input("Type in a value of B. "))
    operb = input("Would you like to: Add - Subtract - Multiply - Divide - Exponent - or Remainder? ")
    opera = operb.lower()
    if (opera) == "add":
        print ((a) + (b))
    elif (opera) == "subtract":
        print ((a) - (b))
    elif (opera) == "multiply":
        print ((a) * (b))
    elif (opera) == "divide":
        print ((a) / (b))
    elif (opera) == "exponent":
        print ((a) ** (b))
    elif (opera) == "remainder":
        print ((a) % (b))
    else:
        print ("Invalid operation.")
    cont = input("Would you like to do another problem?")
    cont = cont.lower()

print("Bye, thanks for using the calculator.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You most likely going to want to use a <code>while</code> loop, something like:</p>
<pre><code>import time
print ("Welcome. This is a calculator that uses the function: A (operator) B.")
time.sleep(3.5)
print ("Available operators include: Addition, Subtraction, Multiplication, Division,        Exponent, and Remainder division.")
time.sleep(3.5)
while True:
    a = float(input("Type in a value of A. "))
    if a == 'q':  # set up a condition to end the program
        return
</code></pre>
</div>
<span class="comment-copy">â€¦ being correctly written in Python as <code>while True:</code> rather than <code>while (true):</code>.</span>
<span class="comment-copy">You are correct :)</span>
<span class="comment-copy">you mean: put "your code" in a function and then call the function in a loop. btw, <code>//</code> is not a valid comment in Python.</span>
<span class="comment-copy">For good measure, at the very least quit would need to be <code>quit()</code>, but it is better to use <code>sys.exit()</code></span>
