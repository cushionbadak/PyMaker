<div class="post-text" itemprop="text">
<p>I am writing a Python program to which I need to count how many of each word there are in a text file.</p>
<pre><code>def count_words(word,d):
    for l in word:
        if l in d:
            d[l] += 1
        else:
            d[l] = 1
        return d

def count_letters():
    d = dict()
    word_file = open('w.txt')
    for line in word_file:
        word = line.strip();
        d = count_words(word,d)
    return d
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can easily get away with reverse sorting on one condition and forward sorting on another if one of them is an <code>int</code> by negating the <code>int</code> in the key func</p>
<p>replace</p>
<pre><code>freq_list.sort()
</code></pre>
<p>with</p>
<pre><code>freq_list.sort(key=lambda x:(-x[1], x[0]))
</code></pre>
<p>In the more general case, since Python's sort is <strong><a href="http://en.wikipedia.org/wiki/Sorting_algorithm#Stability" rel="nofollow">stable</a></strong> you can sort by the second key and then the first</p>
<pre><code>freq_list.sort(key=lambda x:x[0])
freq_list.sort(key=lambda x:x[1], reverse=True)
</code></pre>
<p>The disadvantage is that you need to do two sorts, so it's a little slower</p>
</div>
<span class="comment-copy">The lambda needs to return a tuple: <code>(-x[1], x[0])</code></span>
<span class="comment-copy">This is exactly why Python 3 made those ambiguous constructs illegalâ€¦ They're not ambiguous to the interpreter, but there's a 50/50 chance you'll interpret them wrong each time you see them (or write code that looks right but raises mysterious errors like <code>TypeError: 'tuple' object is not callable</code> when you run them).</span>
<span class="comment-copy">Good answer. For further reading, see the <a href="http://docs.python.org/3/howto/sorting.html" rel="nofollow noreferrer">Sorting HOWTO</a> in the docs.</span>
<span class="comment-copy">@gnibbler Thanks for your help!</span>
<span class="comment-copy">@gnibbler can you take a look at the changes I made to my program and see what I'm doing wrong? It's the same concept, just a completely different look and that's how it is supposed to look.</span>
