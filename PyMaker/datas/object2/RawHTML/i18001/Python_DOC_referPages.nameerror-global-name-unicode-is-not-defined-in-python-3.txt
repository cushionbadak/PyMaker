<div class="post-text" itemprop="text">
<p>I am trying to use a Python package called bidi. In a module in this package (algorithm.py) there are some lines that give me error, although it is part of the package.</p>
<p>Here are the lines:</p>
<pre><code># utf-8 ? we need unicode
if isinstance(unicode_or_str, unicode):
    text = unicode_or_str
    decoded = False
else:
    text = unicode_or_str.decode(encoding)
    decoded = True
</code></pre>
<p>and here is the error message:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;pyshell#25&gt;", line 1, in &lt;module&gt;
    bidi_text = get_display(reshaped_text)
  File "C:\Python33\lib\site-packages\python_bidi-0.3.4-py3.3.egg\bidi\algorithm.py",   line 602, in get_display
    if isinstance(unicode_or_str, unicode):
NameError: global name 'unicode' is not defined
</code></pre>
<p>How should I re-write this part of the code so it works in Python3?
Also if anyone have used bidi package with Python 3 please let me know if they have found similar problems or not. I appreciate your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3 renamed the <code>unicode</code> type to <code>str</code>, the old <code>str</code> type has been replaced by <code>bytes</code>.</p>
<pre><code>if isinstance(unicode_or_str, str):
    text = unicode_or_str
    decoded = False
else:
    text = unicode_or_str.decode(encoding)
    decoded = True
</code></pre>
<p>You may want to read the <a href="http://docs.python.org/dev/howto/pyporting.html">Python 3 porting HOWTO</a> for more such details. There is also Lennart Regebro's <a href="http://python3porting.com/">Porting to Python 3: An in-depth guide</a>, free online.</p>
<p>Last but not least, you could just try to use the <a href="http://docs.python.org/3/library/2to3.html"><code>2to3</code> tool</a> to see how that translates the code for you.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://pythonhosted.org/six/" rel="noreferrer">six</a> library to support both Python 2 and 3:</p>
<pre><code>import six
if isinstance(value, six.string_types):
    handle_string(value)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you need to have the script keep working on python2 and 3 as I did, this might help someone</p>
<pre><code>import sys
if sys.version_info[0] &gt;= 3:
    unicode = str
</code></pre>
<p>and can then just do for example</p>
<pre><code>foo = unicode.lower(foo)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Hope you are using Python 3 ,
Str are unicode by default, so please 
Replace <code>Unicode</code> function with String <code>Str</code> function.</p>
<pre><code>if isinstance(unicode_or_str, str):    ##Replaces with str
    text = unicode_or_str
    decoded = False
</code></pre>
</div>
<span class="comment-copy">So should I write: if isinstance(unicode_or_str, str)? How about 'unicode_or_str'?</span>
<span class="comment-copy">The variable name doesn't much matter here; <code>if isinstance(unicode_or_str, str)</code> should just work. Renaming the variable name is optional.</span>
<span class="comment-copy">I tried that and I got <code>SyntaxError: invalid syntax</code></span>
<span class="comment-copy">@TJ1: Make sure you didn't remove a closing parenthesis or something somewhere. The code should work just fine with <i>just</i> <code>unicode</code> replaced with <code>str</code>.</span>
<span class="comment-copy">you are right Martijn, I forgot to include : in my code, thanks for the help, it works now.</span>
<span class="comment-copy">that doesn't preserve BC like the answer from @atm  Please consider retracting or updating your answer. There is no reason to leave python2 users behind or have breaking python3</span>
