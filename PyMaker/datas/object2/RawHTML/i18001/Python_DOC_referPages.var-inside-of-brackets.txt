<div class="post-text" itemprop="text">
<p>I have this ....</p>
<pre><code>   fileExt = {'png': "'Content-Type': 'image/png'", 'jpe': "'Content-Type':
   'image/jpeg'", 'jpg': "'Content-Type': 'image/jpeg'", 
   'png': "Content-Type': 'image/png'", 'mp4': "'Content-Type': 'video/mpeg'",
   'mp3': "'Content-Type': 'audio/mpeg'", '3gp': "'Content-Type': 'video/3gpp'",
   'flv': "'Content-Type': 'video/x-flv'", 'flv': "'Content-Type': 'video/x-flv'"}
   handler = fileExt.get(ext)
   go = "'"+handler
   key.copy(key.bucket, key.name, preserve_acl=True, metadata={go})
</code></pre>
<p>i'm getting this error...</p>
<pre><code>   Traceback (most recent call last):
  File "s3ContentType.py", line 43, in &lt;module&gt;
   key.copy(key.bucket, key.name, preserve_acl=True, metadata={go})
  File "/task/__pips__/boto/s3/key.py", line 474, in copy
   encrypt_key=encrypt_key)
  File "/task/__pips__/boto/s3/bucket.py", line 723, in copy_key
   headers = boto.utils.merge_meta(headers, metadata, provider)
  File "/task/__pips__/boto/utils.py", line 172, in merge_meta
   for k in metadata.keys():
AttributeError: 'set' object has no attribute 'keys'
</code></pre>
<p>But if i explicitly put a string inside the metadata brackets it works.</p>
<pre><code>  key.copy(key.bucket, key.name, preserve_acl=True, metadata={'Content-Type': 'image/png'})
</code></pre>
<p>What gives, how do i include a var inside the brackets</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a nested dictionary as well for keeping file extensions and content like this</p>
<pre><code>    fileExt = {'png': {'Content-Type': 'image/png'}, 'jpe': {'Content-Type':'image/jpeg'}, 
    'jpg': {'Content-Type': 'image/jpeg'}, 'png': {'Content-Type': 'image/png'}, 
    'mp4': {'Content-Type': 'video/mpeg'}, 'mp3': {'Content-Type': 'audio/mpeg'}, 
    '3gp': {'Content-Type': 'video/3gpp'}, 'flv': {'Content-Type': 'video/x-flv'}, 
    'flv': {'Content-Type': 'video/x-flv'}}
    handler = fileExt.get(ext)
</code></pre>
<p>then you will be directly using handler in metadata, like this</p>
<pre><code>    key.copy(key.bucket, key.name, preserve_acl=True, metadata=handler)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are constructing two different objects here:</p>
<pre><code>foo = {'a', 'b', 'c'}
</code></pre>
<p>is a <a href="http://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset" rel="nofollow">set</a>, while</p>
<pre><code>bar = {'a': 'b', 'c': 'd'}
</code></pre>
<p>is a <a href="http://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow">dictionary</a>. You can of course reference variables when constructing a dict:</p>
<pre><code>mimetype = "image/png"
bar = {'Content-Type': mimetype}
</code></pre>
<p>A dictionary maps keys to values (hence the <code>:</code>), while the set is only a collection of distinct values. The funciton you're calling expects a dictionary, so you have to create one. If you have a dictionary and want to pass that (continuing from above), you can do that like this:</p>
<pre><code>mimetype = "image/png"
bar = {'Content-Type': mimetype}
key.copy(key.bucket, key.name, preserve_acl=True, metadata=bar)
</code></pre>
<p>(note that the links go to python 3 documentation, but sets and dicts have not really changed since python 2)</p>
<hr/>
<p>For the edit: As the accepted answer said, you have to use a nested dictionary. The question is, why doesn't it work otherwise?</p>
<p>Otherwise, you're creating a set containing the string you previously stored in the fileExt dictionary, for example "Content-Type: 'image/png'". Python will not interpret this string, which is why it does not create a dictionary when you write <code>{"Content-Type: 'image/png'"}</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you say <code>{go}</code> you are actually creating a <code>set</code>, not a <code>dict</code>. And sets don't have keys.</p>
<pre><code>print type({"Welcome"})
print type({"1":"Welcome"})
</code></pre>
<p><strong>Output</strong></p>
<pre><code>&lt;type 'set'&gt;
&lt;type 'dict'&gt;
</code></pre>
<p>But when you say <code>{'Content-Type': 'image/png'}</code>, you are actually creating a <code>dict</code> and thats why it works.</p>
</div>
<span class="comment-copy">can you check out the edited question....i tried key.copy(key.bucket, key.name, preserve_acl=True, metadata=go) and got this error key.copy(key.bucket, key.name, preserve_acl=True, metadata=go)</span>
