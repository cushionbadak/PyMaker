<div class="post-text" itemprop="text">
<p>I'm using matplotlib, and I want to label something with <code>"$\nu$"</code>. I was getting errors, and I realized it was because matplotlib was interpreting the <code>\n</code> as a newline. Does python immediately convert any instances of <code>\n</code> to newlines whenever a string is created?</p>
</div>
<div class="post-text" itemprop="text">
<p>As the Tutorial section on <a href="http://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> and the reference documentation for <a href="http://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals">String and Bytes literals</a> explain, backslash escapes are interpreted in string literals.</p>
<p>This happens before matplotlib even gets to see anything; the literal <code>"$\nu$"</code> represents a string with a dollar sign, a newline, a u, and a dollar sign, and that string is the value matplotlib will see.</p>
<p>There are two ways to avoid this:</p>
<ul>
<li>Escape the backslash itself, as in <code>"$\\nu$"</code>.</li>
<li>Use a raw string, as in <code>r"$\nu$"</code>.</li>
</ul>
<p>Generally, when you're dealing with strings that have lots of backslashes (regular expressions, Windows pathnames, etc.), raw strings are more readable.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes. Except if you specified that it's a raw string:</p>
<pre><code>r"$\nu$"
</code></pre>
<p>Another way around is to use double backslashes, escaping the backslash:</p>
<pre><code>"$\\nu$"
</code></pre>
</div>
<span class="comment-copy">Yes, unless it'a a raw string (<code>r</code> prefix:  <code>r"$\nu$"</code> does <i>not</i> convert to a newline).  In a regular string, you can escape the backslash:  <code>"$\\nu$"</code>.</span>
<span class="comment-copy">+1 Great answer, examples and reference.</span>
