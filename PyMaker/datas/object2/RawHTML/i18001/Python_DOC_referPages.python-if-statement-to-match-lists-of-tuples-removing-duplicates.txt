<div class="post-text" itemprop="text">
<p>I am attempting to pull data from MySQL database on a 10 second interval.  Since the amount of data coming in every second is variable, I plan on pulling the most recent 50 rows every 10 seconds.  My first function works well and pulls the data appropriately.  </p>
<p>My second function is supposed to remove duplicates from the previous pull and only push uniques to the new variable, but I am encountering an error and not sure how to fix it.  It seems like for my if statement I am not allowed to match all elements of each tuple.  I'm not really sure how to change this.</p>
<pre><code>import mysql.connector
import datetime
import requests
from operator import itemgetter
import time

run = True

def sqlPull():
    connection = mysql.connector.connect(user='XXXX', password='XXXXX', host='XXXXXX', database='MeshliumDB')
    cursor = connection.cursor()
    cursor.execute("SELECT TimeStamp, MAC, RSSI FROM wifiscan ORDER BY TimeStamp DESC LIMIT 50;")
    data = cursor.fetchall()
    connection.close()
    time.sleep(10)
</code></pre>
<p>The data output looks like this:</p>
<pre><code>[(104346, datetime.datetime(2013, 11, 14, 17, 43, 20), u'00:1E:4C:03:C0:66', u' 16'), (104345, datetime.datetime(2013, 11, 14, 17, 43, 20), u'00:1E:4C:03:C0:66', u' 16'), (104344, datetime.datetime(2013, 11, 14, 17, 43, 19), u'00:26:AB:BB:FB:B8', u' 17'), (104343, datetime.datetime(2013, 11, 14, 17, 43, 18), u'8C:2D:AA:42:0E:67', u' 17'), (104342, datetime.datetime(2013, 11, 14, 17, 43, 17), u'E4:CE:8F:3F:36:E0', u' 13'), (104341, datetime.datetime(2013, 11, 14, 17, 43, 16), u'00:1E:8F:75:82:35', u' 9'), (104340, datetime.datetime(2013, 11, 14, 17, 43, 16), u'00:1E:8F:75:82:35', u' 9'), (104339, datetime.datetime(2013, 11, 14, 17, 43, 15), u'74:44:01:31:D9:E2', u' 9'), (104338, datetime.datetime(2013, 11, 14, 17, 43, 19), u'84:38:35:5E:F8:BA', u' 8'), (104337, datetime.datetime(2013, 11, 14, 17, 43, 15), u'00:26:08:E2:38:F9', u' 8')]




def dupCatch():
    lastPull = []
    for TimeStamp, MAC, RSSI in data:
        if TimeStamp, MAC, RSSI not in lastPull
            data = newData
            else
            lastPull = data

while run == True:
    sqlPull()
    dupCatch()
    print newData



  File "&lt;ipython-input-1-6d9d5eb980c9&gt;", line 20
    if TimeStamp, MAC, RSSI not in lastPull
                ^
SyntaxError: invalid syntax
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This was originally a comment, but it seemed to be helpful, so I'm reposting it as an answer:</p>
<p>The comma syntax tells python to create a tuple, yes. This is why the following two behaviors are identical:</p>
<pre><code>L = [1, 2, 3]
a, b, c = L
</code></pre>
<p>and </p>
<pre><code>L = [1, 2, 3]
(a, b, c) = L
</code></pre>
<p>However, I suspect that this doesn't always apply, for instance in the case of expressing a condition in an if-statement or a loop. This might be indicative of such expressions not being part of the python grammar itself; but not to worry, as the grammar can be edited in the source code (I know for a fact that this is possible, but the citation escapes me at the moment), which can subsequently be compiled into your own flavor of python.</p>
<p>For the time being, however, you want to force those variables to be gathered into a tuple, so that you can check for the existence of that tuple in the set. To that end, try this:</p>
<pre><code>if (TimeStamp, MAC, RSSI) not in lastPull:
  # do stuff
</code></pre>
<p><strong>EDIT</strong>: I checked <a href="http://docs.python.org/3/reference/grammar.html?highlight=grammar" rel="nofollow">the grammar</a> and this does really seem to be the case.</p>
</div>
<span class="comment-copy"><code>if (TimeStamp, MAC, RSSI) not in lastPull</code></span>
<span class="comment-copy">would you mind explaining to me why i need to do this?</span>
<span class="comment-copy">The <code>()</code> force the values inside to form a tuple. Python does this automatically in most situations, except apparently while checking conditions in if-statements. My guess is that this way of expressing your if-statement is simply not part of the python grammer</span>
<span class="comment-copy">@inspectorG4dget why not make this an answer, so it can be upvoted and commented on?</span>
<span class="comment-copy">@ASGM: I wasn't entirely sure that I had the right answer, which is why I didn't feel it was answer-worthy. But, I've posted it anyways, so please check it out</span>
