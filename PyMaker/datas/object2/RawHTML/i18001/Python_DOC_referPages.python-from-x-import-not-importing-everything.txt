<div class="post-text" itemprop="text">
<p>I know that <code>import *</code> is bad, but I sometimes use it for quick prototyping when I feel too lazy to type or remember the imports</p>
<p>I am trying the following code:</p>
<pre><code>from OpenGL.GL import *

shaders.doSomething()
</code></pre>
<p>It results in an error: `NameError: global name 'shaders' is not defined'</p>
<p>If I change the imports:</p>
<pre><code>from OpenGL.GL import *
from OpenGL.GL import shaders

shaders.doSomething()
</code></pre>
<p>The error disappears. Why does <code>*</code> not include <code>shaders</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>shaders</code> is a submodule, not a function.</p>
<p>The syntax <code>from module import something</code> doesn't import submodules (Which, as another answer stated, not defined in <code>__all__</code>). </p>
<p>To take the module, you'll have to import it specifically:</p>
<pre><code>from OpenGL.GL import shaders
</code></pre>
<p>Or, if you only want to have a few functions of <code>shaders</code>:</p>
<pre><code>from OpenGL.Gl.shaders import function1, function2, function3
</code></pre>
<p>And if you want to have all the functions of <code>shaders</code>, use:</p>
<pre><code>from OpenGL.Gl.shaders import *
</code></pre>
<p>Hope this helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>shaders</code> is a submodule and <a href="http://docs.python.org/3/tutorial/modules.html#importing-from-a-package">it’s not included in <code>__all__</code></a>, <code>from … import *</code> won’t import it.</p>
<p><a href="http://pyopengl.sourceforge.net/documentation/pydoc/OpenGL.GL.shaders.html">And yes, it is a submodule.</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I learned this from my own situation. A module did not automatically import along with the rest of the package. Before that experience my mistaken understanding was that every packages's modules automatically import from an <code>import x</code> or a <code>from x import *</code>.  They don't.</p>
<p>Beginners might expect EVERYTHING to import under those calls, I believe. But the following GUI programming code, which is common, demonstrates that that's not the case:</p>
<pre><code>from tkinter import * 
from tkinter import ttk
</code></pre>
<p>In the above example, module <code>ttk</code> doesn't import automatically along with the rest of the <code>tkinter</code> package, for instance.  </p>
<p>The explanation that I've been told is as follows: when you use <code>from x import *</code>, you actually only imported things in <code>your-python-location/lib/x/__init__.py</code></p>
<p>Packages are folders.  Modules are files.  If the import calls for specific files then the package folder's <code>__init_.py</code> will enumerate the specific files to import.</p>
</div>
<span class="comment-copy">Looks like <code>OpenGL.GL.shaders</code> is a subpackage, not an object defined in <code>OpenGL.GL</code>.</span>
<span class="comment-copy">Is shaders a module?</span>
<span class="comment-copy"><a href="http://stackoverflow.com/a/64130/1265154">stackoverflow.com/a/64130/1265154</a></span>
<span class="comment-copy">@sapi It is a shaders.py file, so it is a module?</span>
<span class="comment-copy">Yes it is. It's a module</span>
<span class="comment-copy">which file (or folder) should  <code>__all__</code> be within?</span>
