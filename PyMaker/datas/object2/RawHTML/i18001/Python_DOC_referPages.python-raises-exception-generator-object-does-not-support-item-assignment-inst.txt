<div class="post-text" itemprop="text">
<p>This is a question I am asking only out of curiosity.</p>
<p>I answered <a href="https://stackoverflow.com/questions/20123912/python-why-is-this-code-considered-a-generator">this question</a> about generators, and the exception that got raised surprised me.  I would expect both of these to give the same exception:</p>
<pre><code># Create a lame generator
a = (x for x in range(5))

# This raises a TypeError with the message "'generator' object is not subscriptable"
# I completely expected this.
a[0]

# Why doesn't this give the same message?
# This raises a TypeError with the message "'generator' object does not support item assignment"
# which is (I think) the exception raised when trying to assign to an immutable object.
a[0] = 2
</code></pre>
<p>I would expect both of them to raise a TypeError with the message "'generator' object is not subscriptable", because it seems to be more important.  Why give the message that you can't assign, whenever trying to access an element would already raise an exception?</p>
<p>Not sure if this is relevant, but I'm using Python 3.3.</p>
</div>
<div class="post-text" itemprop="text">
<p>Those two operations invoke different methods; accessing a subscript invokes <a href="http://docs.python.org/3/reference/datamodel.html#object.__getitem__" rel="nofollow"><code>__getitem__()</code></a>, whereas setting a subscript invokes <a href="http://docs.python.org/3/reference/datamodel.html#object.__setitem__" rel="nofollow"><code>__setitem__()</code></a>. Each raises a different exception because each is a different operation conceptually.</p>
</div>
<span class="comment-copy">Thanks for the quick response!  Is the <code>__setitem__</code> called before <code>__getitem__</code>?  Could I rewrite <code>a[0]</code> as a.__getitem__(), and <code>a[0] = 'puppy'</code> as <code>a.__getitem__().__setitem__('puppy')</code>?  Or am I just thinking about this wrong?</span>
<span class="comment-copy">@CodyPiersall: <code>a[0] = 'puppy'</code> is <code>a.__setitem__(0, 'puppy')</code>. There is no get operation when assigning.</span>
<span class="comment-copy">Thanks!  Exactly the answer I was looking for.  Give me 2 minutes and I'll accept it.  Bonus points for the links to the docs.</span>
