<div class="post-text" itemprop="text">
<p>I am following <a href="http://www.sqlitetutorial.net/sqlite-python/create-tables/" rel="nofollow noreferrer">this</a> sqlite3 for python tutorial.</p>
<p>I am trying to insert a row into a table with this script:</p>
<pre><code>conn = sqlite3.connect(database)

sql = ''' INSERT INTO projects(name,begin_date,end_date)
              VALUES(?,?,?) '''    
project = ('X', '2015-01-01', '2015-01-30');

cur = conn.cursor()
cur.execute(sql,project)

conn.close()
</code></pre>
<p>I can run it with no errors but the row is not inserted.</p>
<p>Although, the row is inserted when using <code>with</code>:</p>
<pre><code>with conn:
    sql = ''' INSERT INTO projects(name,begin_date,end_date)
                  VALUES(?,?,?) '''    
    project = ('X', '2015-01-01', '2015-01-30');

    cur = conn.cursor()
    cur.execute(sql,project)
</code></pre>
<p>Does anyone know whats happening?</p>
<p><strong>UPDATE</strong></p>
<p>I found in <a href="https://docs.python.org/2/library/sqlite3.html" rel="nofollow noreferrer">docs.python.org</a>
that after one or more <code>execute</code> statements one does <code>commit</code> as in</p>
<pre><code>cur.execute(sql, project)
conn.commit()
</code></pre>
<p>and everything goes fine.</p>
<p>But still, I would much appreciate some technical explanation of <code>with</code> keyword</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>But still, I would much appreciate some technical explanation of with
  keyword</p>
</blockquote>
<p>The reason why you should not <code>commit()</code> when using the database connection as  a <em>context manager</em> (<code>with</code> keyword), is because there's a mechanism that auto-commit in such case, if the transaction succeed (meaning that there's no exception raised).</p>
<p>It is explained in the <a href="https://docs.python.org/3/library/sqlite3.html#using-the-connection-as-a-context-manager" rel="nofollow noreferrer">sqlite3 API doc</a>:</p>
<blockquote>
<h2>Using the connection as a context manager</h2>
<p>Connection objects can be used as context managers that automatically
  commit or rollback transactions. In the event of an exception, the
  transaction is rolled back; otherwise, the transaction is committed:</p>
<pre><code>import sqlite3

con = sqlite3.connect(":memory:")
con.execute("create table person (id integer primary key, firstname varchar unique)")

# Successful, con.commit() is called automatically afterwards
with con:
    con.execute("insert into person(firstname) values (?)", ("Joe",))

# con.rollback() is called after the with block finishes with an exception, the
# exception is still raised and must be caught
try:
    with con:
        con.execute("insert into person(firstname) values (?)", ("Joe",))
except sqlite3.IntegrityError:
    print("couldn't add Joe twice")
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Have you tried to debugg your script ?</span>
<span class="comment-copy">What do you mean?</span>
<span class="comment-copy">I mean use the <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer"><code>import pdb; pdb.set_trace()</code></a> statement for debug your script and see what's happen...</span>
<span class="comment-copy">No. I chosed to ask in Stackoverflow.</span>
<span class="comment-copy">Maybe there is something wrong with your date formatt... Who knows ? Without any error and any debug :)</span>
