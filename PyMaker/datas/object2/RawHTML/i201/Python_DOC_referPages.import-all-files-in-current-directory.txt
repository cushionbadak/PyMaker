<div class="post-text" itemprop="text">
<p>I have just started a python project. The directory structure is as follows:</p>
<pre><code>/algorithms  
----/__init__.py  
----/linkedlist  
--------/__init__.py  
--------/file1.py  
--------/file2.py  
/tests  
----/test_linkedlist
</code></pre>
<p>You can also check the <a href="https://github.com/gulshalla/algorithms" rel="nofollow noreferrer">Github repository</a>.</p>
<p>In each of the sub folders under <code>algorithms</code>, in the <code>__init__</code> file I am including the following for all the files one by one:</p>
<pre><code>from .file1 import *
from .file2 import *
</code></pre>
<p>And so on.</p>
<p>The task that I am trying to achieve is running all tests together using the query:</p>
<pre><code>python3 -m unittest discover tests
</code></pre>
<p>Each file in the tests directory starts as follows:</p>
<pre><code>from algorithms.linkedlist import *  
import unittest
</code></pre>
<p>Right now if I want to add a new file to the linkedlist directory, I create the file and then add another <code>from .filename import *</code> in the <code>__init__</code> file. </p>
<p>How do I write a script in the <code>__init__</code> file so that each time I create a new file, I do not have to manually insert the import command? </p>
</div>
<div class="post-text" itemprop="text">
<p>So the <code>__init__</code> is in the same folder? As the <a href="https://docs.python.org/3/library/importlib.html#importlib.__import__" rel="nofollow noreferrer">docs</a> say <em>The import statement is syntactic sugar for the <code>__import__</code> function.</em> </p>
<p>So we can use:</p>
<pre><code>import importlib
import glob
for file in glob.iglob('*.py'):
    importlib.__import__(file)
</code></pre>
<p>Some reasons why this does not work:</p>
<ul>
<li>You want to load the functions <strong>in</strong> the module - the <code>import * from</code> syntax. With this code you can only run <code>file1.test</code>.  </li>
<li>You run the script loading from another directory, which confuses <code>glob</code>. We have to specify the actual working directory. </li>
<li><code>__import__</code> prefers to know the module name. </li>
</ul>
<p>To find the solution I combine the <code>import * from</code> function from <a href="https://stackoverflow.com/questions/43059267/how-to-do-from-module-import-using-importlib">this</a> answer with <code>pkgutil.walk_packages</code> from <a href="https://michaelheap.com/python-dynamically-load-all-modules-in-a-folder/" rel="nofollow noreferrer">this</a> blog. </p>
<pre><code>import importlib
import pkgutil 

def custom_import_all(module_name):
    """ Use to dynamically execute from module_name import * """
    # get a handle on the module
    mdl = importlib.import_module(module_name)

    # is there an __all__?  if so respect it
    if "__all__" in mdl.__dict__:
        names = mdl.__dict__["__all__"]
    else:
        # otherwise we import all names that don't begin with _
        names = [x for x in mdl.__dict__ if not x.startswith("_")]

    # now drag them in
    globals().update({k: getattr(mdl, k) for k in names})


__path__ = pkgutil.extend_path(__path__, __name__)
for importer, modname, ispkg in pkgutil.walk_packages(path=__path__, prefix=__name__+'.'):
    custom_import_all(modname)
</code></pre>
</div>
<span class="comment-copy">Copy pasting this in the <b>init</b> file is failing. Yes the init file is in the same folder. I am trying to run the test command given in the question from the root directory of the package.</span>
<span class="comment-copy">@OmarShalla What do you mean by failing? Do you mean that the files do not get included correctly and therefor your tests are failing or is the suggested code producing errors itself?</span>
<span class="comment-copy">The suggested code is producing errors. You can clone my repository and try it yourself. The error log is too long to post here. Again I am running the following command 'python3 -m unittest discover tests' from the root directory of the package(the directory that contains the algorithms and tests folders)</span>
<span class="comment-copy">Testing with your git now :)</span>
<span class="comment-copy">Thanks for the help!</span>
