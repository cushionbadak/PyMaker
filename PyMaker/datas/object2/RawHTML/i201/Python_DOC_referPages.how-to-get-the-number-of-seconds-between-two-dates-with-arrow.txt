<div class="post-text" itemprop="text">
<p>I use <a href="https://arrow.readthedocs.io/en/latest/" rel="nofollow noreferrer"><code>arrow</code></a> to handle dates and discovered that I do not know how to get natively the number of seconds between two dates:</p>
<pre><code>&gt;&gt;&gt; import arrow
&gt;&gt;&gt; first = arrow.get('2019-03-06')
&gt;&gt;&gt; second = arrow.get('2019-02-06')
&gt;&gt;&gt; (first-second).days
28
&gt;&gt;&gt; (first-second).seconds
0
</code></pre>
<p>From the example above it looks like <code>.days</code> gives the expected output, but <code>.seconds</code> rather gives the number of seconds there are "at the seconds level", that is when looking exclusively at seconds. This would mean that the maximum number is <code>60</code>.</p>
<p>This is not true, however:</p>
<pre><code>&gt;&gt;&gt; (arrow.now()-first).seconds
70223
</code></pre>
<p>70000 seconds is approximately 19 hours, which would be the correct number of hours between last midnight (start of today) and now (about 20:30).</p>
<p>So I am lost at what <code>.seconds</code> actually provides.</p>
</div>
<div class="post-text" itemprop="text">
<p>The seconds property only reflects the difference between first and second if they're within one day. If the days are more than 1 day then the days property get increment by one and the seconds property get reset to zero. If you want to get the total seconds between them, then call the total_seconds() method of the timedelta. See below for the differences</p>
<pre><code>import arrow

first = arrow.get('2019-03-06 02:00:00')
second = arrow.get('2019-03-05 01:00:00')
d0 = first - second
d1 = d0.days
d2 = d0.seconds
d3 = d0.total_seconds()
print('total days: {}'.format(d1))
print('seconds within day: {}'.format(d2))
print('total seconds: {}'.format(d3))

# total days: 1
# seconds within day: 3600
# total seconds: 90000.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/datetime.html#timedelta-objects" rel="nofollow noreferrer">Documentation for datetime</a></p>
<blockquote>
<p><code>.seconds</code> is the number of seconds within a day</p>
<p><code>.total_seconds()</code> is the entire timedelta converted to seconds</p>
</blockquote>
<p>For example:</p>
<pre><code>first = arrow.get('2019-03-06 02:00:00')
second = arrow.get('2019-03-05 01:00:00')

(first - second).seconds
&gt; 3600

(first - second).total_seconds()
&gt; 90000.0
</code></pre>
<blockquote>
<p>So for less than a day difference <code>.seconds &amp; .total_seconds()</code> would be identical.</p>
</blockquote>
</div>
