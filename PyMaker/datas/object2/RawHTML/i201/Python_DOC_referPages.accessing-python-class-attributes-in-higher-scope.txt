<div class="post-text" itemprop="text">
<p>Still learning Python, rookie question here. I'm building a simple tkinter GUI that loads JSON data and then allows the user to select loaded data for plotting. Here's a description of my architecture and issue:</p>
<p>1) In the GUI, I have a load button that calls a function, LoadData, to open a directory containing multiple JSON txt files</p>
<p>2) LoadData checks to see if a certain file name exists, 'AutoPilot.txt', and if it does, another function, LoadAutopilotData, is called</p>
<p>3) LoadAutopilotData creates an instance of the  Data class and populates it with the JSON data</p>
<p>After the functions are complete, I want to access the instance of the Data class I created in the inner scope (APtime), but I can't seem to do that. </p>
<p>File 1 snippet:</p>
<pre><code>loadBtn = Button(toolbar, image=useImg1, command=LoadData)
</code></pre>
<p>File 2 snippet:</p>
<pre><code>def LoadData() :

    # Get data Path from the User
    path = askdirectory()

    # Go to that directory
    os.chdir(path)

    # Check directory to see if AutoPilot.log is available
    try:
        Autopilot = open("AutoPilot.txt")
        Load_Autopilot = True
    except:
        Load_Autopilot = False

    # If Autopilot data exists, load it and populate the listbox
    if Load_Autopilot == True:
        LoadAutopilotData()
        print(APtime.val)
</code></pre>
<p>File 3 snippet:</p>
<pre><code>def LoadAutopilotData() :

    filedata = open( 'AutoPilot.txt' )

    if len( sys.argv) &gt;= 2:
        controller = sys.argv[1]

    APtime = Data("Time", [], "sec")
</code></pre>
<p>where File3 continues on to populate an instance of the Data class. The problem I'm having is that I can only access APtime in File3, and not in the 'higher' level functions. Any help is greatly appreciated. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>What you need to do is return a value to the calling function. You can look at the tutorial section on <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">Defining functions</a> on the Python website to have a little more detail about that.</p>
<p>So if we don't change your code too much this could loook like that:</p>
<p><strong>Solution 1: File 2 snippet</strong></p>
<pre><code>def LoadData() :

    # Get data Path from the User
    path = askdirectory()

    # Go to that directory
    os.chdir(path)

    # Check directory to see if AutoPilot.log is available
    try:
        Autopilot = open("AutoPilot.txt")
        Load_Autopilot = True
    except:
        Load_Autopilot = False

    # If Autopilot data exists, load it and populate the listbox
    if Load_Autopilot == True:
        APtime = LoadAutopilotData()
        print(APtime.val)
</code></pre>
<p><strong>Solution 1: File 3 snippet</strong></p>
<pre><code>def LoadAutopilotData() :

    filedata = open( 'AutoPilot.txt' )

    if len( sys.argv) &gt;= 2:
        controller = sys.argv[1]

    APtime_result = Data("Time", [], "sec")

    return APtime_result
</code></pre>
<ul>
<li>You should see that the function <code>LoadData()</code> assign the value returned by the function <code>LoadAutopilotData()</code> to the <code>APtime</code> variable (the line <code>APtime = LoadAutopilotData()</code>)</li>
<li>After the function <code>LoadAutopilotData()</code> process its data, it uses the statement <code>return APtime_result</code> to make that value available to the calling function.</li>
</ul>
<hr/>
<p>But there are some improvement that could be done in your code. The only one I will mention is that you should read what is in the <a href="https://docs.python.org/3/library/index.html" rel="nofollow noreferrer">Standard Library</a> because it could save you some work. For example, to check if a file exists, there's a <a href="https://docs.python.org/3/library/os.path.html#os.path.exists" rel="nofollow noreferrer">function</a> that already exists for that.</p>
<p>So your File 2 snippet could look like that:</p>
<pre><code>import os.path

def LoadData() :

    # Get data Path from the User
    path = askdirectory()

    Load_Autopilot = os.path.exists(path)

    # If Autopilot data exists, load it and populate the listbox
    if Load_Autopilot:
        APtime = LoadAutopilotData()
        print(APtime.val)
</code></pre>
</div>
<span class="comment-copy"><code>LoadAutopilotData</code> has to <i>return</i> <code>APtime</code>, not just set a local variable that goes out of scope once <code>LoadAutopilotData</code> returns.</span>
