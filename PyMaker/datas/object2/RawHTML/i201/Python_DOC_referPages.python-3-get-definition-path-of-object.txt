<div class="post-text" itemprop="text">
<p>In my main file of my Python3 project, I want to display dotted definition path of imported class as string.</p>
<p><strong>My imported class:</strong></p>
<p>Is named <code>WoodCuting</code> and is located in <code>constants/dimensions.py</code>.</p>
<pre><code>class WoodCuting():
    WIDTH = 12
    HEIGHT = 12
</code></pre>
<p><strong>What I want:</strong></p>
<p>Dotted definition path of imported class as a string - <code>constants.dimensions.WoodCuting</code>.</p>
<p><strong>What I tried:</strong></p>
<p><code>str(type(WoodCuting))</code> returns <code>constants.dimensions.WoodCuting</code> - which is exactly what I want. However it is not reliable solution.</p>
<p>Any Ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this with the object's <code>__module__</code> and <a href="https://docs.python.org/3/glossary.html#term-qualified-name" rel="nofollow noreferrer"><code>__qualname__</code></a> attributes.</p>
<pre><code>&gt;&gt;&gt; '.'.join((WoodCuting.__module__, WoodCuting.__qualname__))
'constants.dimensions.WoodCuting'
</code></pre>
<p>Using <code>__qualname__</code> rather than <code>__name__</code> means you get the correct result for nested objects.</p>
<p>Say this class is in the module:</p>
<pre><code>class Foo:
    class Bar:
        pass

&gt;&gt;&gt; '.'.join((constants.dimensions.Foo.Bar.__module__, constants.dimensions.Foo.Bar.__qualname__))
'constants.dimensions.Foo.Bar'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming <code>WoodCuting</code> is located in <code>constants/dimensions.py</code>:</p>
<pre><code>from constants.dimensions import WoodCuting

def get_full_name(c):
    return c.__class__.__module__ + '.' + c.__class__.__name__

print(get_full_name(WoodCuting()))
</code></pre>
<p>returns <code>constants.dimensions.WoodCuting</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this</p>
<pre><code>import inspect

class WoodCuting():
    WIDTH = 12
    HEIGHT = 12

a=inspect.getfile(WoodCuting)
print (a)
</code></pre>
</div>
<span class="comment-copy">This returns <code>/constants/dimensions.py</code> instead <code>constants.dimensions.WoodCuting</code>.</span>
