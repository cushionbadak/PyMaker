<div class="post-text" itemprop="text">
<p>I have a list of lists (the amount of lists which is created each time the code runs is passed in as an argument), and in each list I need to iterate over the items of each of the second lists in the x amount of lists.</p>
<p>The simplified format would be:</p>
<pre><code>list = [[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [7, 8, 9]], [[1, 2, 3], [10, 11, 12]]]
</code></pre>
<p>And I need to iterate through the list doing (4 + 7 + 10), (5 + 8 + 11) and (6 + 9 + 12).</p>
<p>I haven't made much progress in coding this, at the moment I am just adding together the items in each of the second lists:</p>
<pre><code>mean_list = []
for i in list1:
    each_item = 0
    for ca in i[1]:
        each_item += ca
    mean_list.append(each_item)
print(mean_list)
</code></pre>
<p>The end result should be <code>mean_list = [21, 24, 27]</code> using the example above.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">list comprehension</a>. The first <a href="https://docs.python.org/3.3/library/functions.html#zip" rel="nofollow noreferrer">zip</a> is to select the second lists within each sublist and the second is to interleave the elements from these in order to simply take the <code>sum</code> and the <code>mean</code>:</p>
<pre><code>from statistics import mean
sums, means = zip(*[(sum(i), mean(i)) for i in zip(*list(zip(*l))[1])])

print(sums)
# (21, 24, 27)
print(means)
# (7, 8, 9)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Some comprehension, sum and zip magic:</p>
<pre><code>&gt;&gt;&gt; i = [[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [7, 8, 9]], [[1, 2, 3], [10, 11, 12]]]
&gt;&gt;&gt; q = [x[1] for x in i]
&gt;&gt;&gt; [sum(i) for i in zip(*q)]
[21, 24, 27]
</code></pre>
<p>To get the mean, divide by the length:</p>
<pre><code>&gt;&gt;&gt; [sum(i)/len(i) for i in zip(*q)]
[7.0, 8.0, 9.0] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I dont't know what is the exact purpose but hardcodedly we can do this....</p>
<pre><code>l = [[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [7, 8, 9]], [[1, 2, 3], [10, 11, 12]]]
mean_list = []
for i in range(len(l[0][0])):
    mysum = 0
    for j in l:
        mysum+=j[1][i]
    mean_list.append(mysum)
print(mean_list)
</code></pre>
<p>Outputs
<code>[21, 24, 27]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can easily do this with numpy sum.</p>
<pre><code>import numpy as np

list1 = [[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [7, 8, 9]], [[1, 2, 3], [10, 11, 12]]]

result = np.array(list1).sum(axis = 0)[1]
print(result)
#array([21, 24, 27])
</code></pre>
<p>EDIT: For Mean, as OP apparently wanted instead, just change the sum operation to mean.</p>
<pre><code>result_mean = np.array(list1).mean(axis = 0)[1]
#array([7., 8., 9.])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This looks like a tensor. You can use <code>numpy</code> for matrix addition, it will be much faster than any manual job.</p>
<pre><code>import numpy as np

mat = np.array([[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [7, 8, 9]], [[1, 2, 3], [10, 11, 12]]])

print(mat.mean(axis=0)[1]) # [7, 8, 9]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a double <code>zip</code> in the list comprehension:</p>
<pre><code>l = [[[1, 2, 3], [4, 5, 6]], [[1, 2, 3], [7, 8, 9]], [[1, 2, 3], [10, 11, 12]]]

[sum(j) for num, i in enumerate(zip(*l)) 
        for j in zip(*i) if num % 2]
# [21, 24, 27]
</code></pre>
<p>If you need the mean use <code>statistics.mean()</code> instead of <code>sum</code>.</p>
</div>
<span class="comment-copy">What is the point of the [1, 2, 3] sub-lists?</span>
<span class="comment-copy">The code returns two things, I then put both of these into a new list; the code doesn't work if I remove the first lists</span>
<span class="comment-copy">I actually forgot to mention that I would need to find the mean for each thing (so in this case it would be [7, 8, 9]</span>
<span class="comment-copy">Imagine being the code maintainer, and you come across this line...</span>
<span class="comment-copy">the mean for each thing? where do the <code>[7, 8, 9]</code> come from? @JonathanDyke</span>
<span class="comment-copy">There are three items being added together in this case, so [7, 8, 9] would be [21/3, 24/3, 28/3], and I've not used zip before so I'm not sure where you retrieve the amount of items being summed (just doing /3 wouldn't work because the actual number of lists changes)</span>
<span class="comment-copy">Okay, updated the answer @JonathanDyke</span>
<span class="comment-copy">or <code>mat.sum(axis=0)[1]</code></span>
