<div class="post-text" itemprop="text">
<h2>The problem</h2>
<p>I want to know the correct algorithm/way on searching and modifying a certain element of my 2D list. The modified 2D list will be written later to csv file. Below is my script:</p>
<h2>Code</h2>
<pre><code>import csv
search = input("Enter name to find: ")
replace = input("Enter name replacement: ")
pendingFile = csv.reader(open("pendingLists.csv", "r"), delimiter=",")        
#Problem 1 -&gt; Searching and Modifying algorithm here...  
#Problem 2 -&gt; Writing Algorithm here where the row is modified...
</code></pre>
<h2>Expected Output</h2>
<pre><code>&gt;&gt;&gt;Enter name to find: Mark
&gt;&gt;&gt;Enter name replacement: Jave

Old listfile
~listFile.csv
Job,PB01
Mark,NU01
Jumeirah,SC01

Same modified listfile
~listFile.csv
Job,PB01
Jave,NU01
Jumeirah,SC01
</code></pre>
<p>Proposed searching algorithm that I found on web but still lacks on modifying to be synthesized on my code</p>
<pre><code>for row in pendingFile:
    if search == row[0]:
        print(row)
</code></pre>
<p>I am still new and I have already surfed google and youtube for 2 days but not enough breakthroughs with this problem.
I really need help, I am a student and we're tasked to create GUI POS Python 3 Tkinter as final project individual.</p>
<p>My current programming problem may be big for me, but I genuinely Thank the generous help that you may offer.</p>
</div>
<div class="post-text" itemprop="text">
<p>The three-line fragment you posted is correct.
You may find it more convenient to use a dictionary reader: <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer">https://docs.python.org/3/library/csv.html#csv.DictReader</a>.
Then having read the file you wind up with a list of <code>dict</code>s in memory, and rather than a cryptic <code>0</code> you can use a symbolic column name for each access, as shown below.</p>
<pre><code>for row in rows:
    if search == row['name']:
        print(f'Found {search}, converting to capitals.')
        row['name'] = search.upper()
</code></pre>
<p>Having made several such changes, you would likely want to save the updated rows, using a DictWriter.</p>
</div>
<div class="post-text" itemprop="text">
<h2>I managed to construct of what I am looking for:</h2>
<pre><code>def dataRead():
    with open("Inventory_List.csv", "r") as my_csv:
        myFile = csv.reader(my_csv, delimiter=",")

        global dataInventoryList
        dataInventoryList = [[col[0], col[1], col[2], col[3], col[4], eval(col[5])] for col in myFile]


def dataWrite():
    with open("Inventory_List.csv", "w+") as my_csv:
        myFile = csv.writer(my_csv, delimiter=',', lineterminator='\n')
        myFile.writerows(dataInventoryList)

def main():
    while True:
        found = False
        dataRead()
        print("==========================================================================")
        print("Before update;")

        for i in range(len(dataInventoryList)):
            for j in range(6):
                print(str(dataInventoryList[i][j]) + "\t", end="")
            print("")

        search = input("Enter product code: ")
        quantity = int(input("Please enter quantity: "))
        choice = int(input("Add stocks[1] Pull Stacks[2]\nChoice: "))

        for i in range(len(dataInventoryList)):
            if search == dataInventoryList[i][0]:
                found = True
                if choice == 1:
                    dataInventoryList[i][5] += quantity
                    break
                elif choice == 2:
                    if dataInventoryList[i][5] == 0:
                        print("Requested order is out of stocks!\n")
                        break
                    elif quantity &gt; dataInventoryList[i][5]:
                        print("Requested order is out of range!\n")
                        break
                    elif quantity &lt;= dataInventoryList[i][5]:
                        dataInventoryList[i][5] -= quantity
                        break

        if found == False:
            print("Requested order was not found on the database!\n")

        elif found == True:
            dataWrite()

        print("After update;")
        for i in range(len(dataInventoryList)):
            for j in range(6):
                print(str(dataInventoryList[i][j]) + "\t", end="")
            print("")

main()
</code></pre>
</div>
<span class="comment-copy">Solved! for col in my_csv:          dataInventoryList.append([col[0], col[1]])</span>
