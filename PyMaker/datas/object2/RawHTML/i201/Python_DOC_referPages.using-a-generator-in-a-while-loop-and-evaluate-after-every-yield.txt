<div class="post-text" itemprop="text">
<p>I'm using Python to open some files in a CAD program. Since the program will crash when I open too many files at once, I want my script to stop opening files from a list I generated when the sum of thier filesize exceeds a certain value.</p>
<h2>Here is what I have so far:</h2>
<p>I'm converting the log file to a list. It contains the filepaths seperated by commas:</p>
<pre><code>fList = []

with open('C:/Users/user/Desktop/log.txt', 'r') as f:
    fList = f.read().split(',')
    with suppress(ValueError, AttributeError):
        fList.remove('')
    fcount = len(fList)
</code></pre>
<p>This is the Generator that I use to Iterate over the partList:</p>
<pre><code>def partGenerator(partList):
    for file in partList:
        yield file
</code></pre>
<p>Here I try to loop over the files while the sum of thier size is smaller than 2500000 bite:</p>
<pre><code>count = 0
progression = 0
storage = 0

while storage &lt; 2500000:
    for file in partGenerator(fList):
        name = os.path.basename(file)
        storage += os.path.getsize(file)
        print(f'Auslastung: {storage} bite / 2500000 bite')
        oDoc = oApp.Documents.Open(file)

        progression += 1
        percent = round(100 * progression / fcount)
        print(f'Fortschritt: {progression} / {fcount} ({percent} %) - {name}')
</code></pre>
<p>What happens is, that the files open propperly in the CAD Software, but they don't stop after the while condition is exceeded. My guess is, that the while condition is evaluated after the list runs out of entries and not after every entry like I what to.</p>
<p>Help on the correct syntax would be great!</p>
<h2>What I'm looking for ultimately:</h2>
<p>I would like to use this script in a way that it opens some files and whenever I manualy close one in the CAD program, It opens the next one from my list until the list is exhausted.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>while</code> condition is never checked, no, because the <code>for</code> loop never lets Python check. That the <code>for</code> loop takes elements from a generator function is neither here nor there.</p>
<p>You need to check <strong>inside</strong> your <code>for</code> loop if your condition still holds:</p>
<pre><code>for file in partGenerator(fList):
    name = os.path.basename(file)
    storage += os.path.getsize(file)
    if storage &gt;= 2500000:
        # wait for input before continuing, then reset the storage amount
        input("Please close some files to continue, then press ENTER")
        storage = 0
</code></pre>
<p>Python doesn't check <code>while</code> conditions until the full suite (series of statements) in the block under the <code>while ...:</code> statement has completed running or executes a <code>continue</code> statement, so a <code>while</code> condition really isn't suitable here.</p>
<p>In the above example I used the low-tech <code>input()</code> function to ask whomever is running the script to press <code>ENTER</code> afterwards. It'll depend on what <code>oDoc.Documents</code> actually offers as an API to see if you could use that to detect that files have been closed.</p>
<p>If you wanted to use a generator function, have it track file sizes. You can even have it read those from the CSV file. I'd use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code> module</a> to handle splitting and progress, by the way:</p>
<pre><code>import csv


def parts(logfile):    
    with open(logfile, newline='') as f:
        reader = csv.reader(f)
        files = [column for row in reader for column in row if column]
    fcount = len(files)
    storage = 0
    for i, filename in enumerate(files):
        storage += os.path.getsize(file)
        if storage &gt;= 2500000:
            input("Please close some files to continue, then press ENTER")
            storage = 0
        print(f'Auslastung: {storage} bite / 2500000 bite')
        yield file
        print(f'Fortschritt: {i} / {fcount} ({i / fcount:.2%}) - {name}')
</code></pre>
<p>then just use</p>
<pre><code>for file in parts('C:/Users/user/Desktop/log.txt'):
    oDoc = oApp.Documents.Open(file)
</code></pre>
<p>Note that the absolute number of files open is what your OS limits on, not how large those files are.</p>
</div>
<div class="post-text" itemprop="text">
<p>With the input from Martijn Pieters I came up with something that works perfectly for me. I'm a noob in programming so it took me a while to understand the problem. Here is what woked just fine in the end:</p>
<pre><code>fList = []

with open('C:/Users/jhoefler/Desktop/log.txt', 'r') as f:
    fList = f.read().split(',')
    with suppress(ValueError, AttributeError):
        fList.remove('')
    fcount = len(fList)

count = 0
progression = 0

for file in fList:

    name = os.path.basename(file)
    if oApp.Documents.Count &lt; 10:
        oDoc = oApp.Documents.Open(file)
    else:
        pCount = oApp.Documents.LoadedCount
        fCount = oApp.Documents.LoadedCount
        while fCount == pCount:
            time.sleep(1)
            pCount = oApp.Documents.LoadedCount
        oDoc = oApp.Documents.Open(file)

    progression += 1
    percent = round(100 * progression / fcount)
    print(f'Fortschritt: {progression} / {fcount} ({percent} %) - {name}')
</code></pre>
<p>I'm sure there is a more elegant way to solve the problem, but it workes for my needs just fine.</p>
</div>
<span class="comment-copy">Why not <i>close open files</i>?</span>
<span class="comment-copy">What's the point of <code>partGenerator</code>? You can iterate over the list directly, no need for a generator.</span>
<span class="comment-copy">I make small changes to the files manually so I can not have the script close the files itself.</span>
<span class="comment-copy">I want the script to pause the iteration over the list when the filesize of the previously opend files exceeds a value. My guess was, that it's only possible with a generator</span>
<span class="comment-copy">Sorry, please don't alter questions after receiving answers that address your initial problem. If you have more questions after solving the first, post a new question.</span>
<span class="comment-copy">Thank you for the answer! I thought about using an if condition aswell, but then the script stops after meeting the size-condition right? I want the script to pause if possible until i close enought files so it can open the next ones until the list is exhausted</span>
<span class="comment-copy">@J.H: then don't exit, pause. Use <code>input('Size limit reached, want to continue?')</code></span>
<span class="comment-copy">@J.H: Yes, your if you use a <code>while</code> condition the loop exits when the condition is no longer true, that's the point of such a loop. Don't use a <code>while</code> loop if you don't want to exit the loop.</span>
<span class="comment-copy">Ok I think I got it. Thanks for the input!</span>
