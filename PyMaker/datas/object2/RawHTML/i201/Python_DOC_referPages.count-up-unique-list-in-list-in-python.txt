<div class="post-text" itemprop="text">
<p>How can I count up every list in list in python?
I especially want to know how many of them are in common.</p>
<p>example:</p>
<pre><code>list=[["a", "b", "c"], ["a", "A", "b"], ["B", "c", "C"],["a", "b", "c"]]
</code></pre>
<p>wanted output:</p>
<pre><code> value            counts
["a", "b", "c"]   2
["a", "A", "b"]   1
["B", "c", "C"]   1
</code></pre>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you don't care about the format of the ouput, one option is to turn the sublists to <code>tuples</code> and then use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a>.</p>
<p>The reasoning behind this is that <code>Counter</code> returns a hash table, and only immutable types are hashable, thus a workaround is to cast the sublist to <code>tuples</code> which <i>are immutable</i> unlike lists:</p>
<pre><code>from collections import Counter

Counter([tuple(i) for i in l])
</code></pre>
<p><b> Output </b></p>
<pre><code>Counter({('a', 'b', 'c'): 2, ('a', 'A', 'b'): 1, ('B', 'c', 'C'): 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from collections import Counter
list1 = [["a", "b", "c"], ["a", "A", "b"], ["B", "c", "C"],["a", "b", "c"]]
dictionary = Counter([tuple(i) for i in list1])
dd = pd.DataFrame(data={'list': list(dictionary.keys()),'count': list(dictionary.values())})
print(dd)
</code></pre>
<p>output:</p>
<pre><code>        list  count
0  (a, b, c)      2
1  (a, A, b)      1
2  (B, c, C)      1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Verbose option without dependencies:</p>
<pre><code>lst = [["a", "b", "c"], ["a", "A", "b"], ["B", "c", "C"],["a", "b", "c"]]

res = {}
for array in lst:
    res.setdefault(tuple(array), list()).append(1)
</code></pre>
<p>It creates a dictionary where the sub list is the key, appending 1 each time it matches. Then transform the keys with the sum instead:</p>
<pre><code>for k,v in res.items():
  res[k] = sum(v)
  # print(k, res[k])
</code></pre>
<p>Uncommenting the print line you get:</p>
<pre><code># ('a', 'b', 'c') 2
# ('a', 'A', 'b') 1
# ('B', 'c', 'C') 1
</code></pre>
<p>And <code>res</code> is now:</p>
<pre><code>res #=&gt; {('a', 'b', 'c'): 2, ('a', 'A', 'b'): 1, ('B', 'c', 'C'): 1}
</code></pre>
</div>
<span class="comment-copy">What's the required format? Should it be in dataframe or in some file? What have you tried so far?</span>
<span class="comment-copy">You need a <a href="https://docs.python.org/3.1/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>.</span>
<span class="comment-copy">@pistol2myhead thanks. and I don't really care of the format of output actually, and i've tried Counter already.</span>
<span class="comment-copy">Counter counts up only string I guess, doesnt work for every list in this case</span>
<span class="comment-copy">it worked! thanks a lot, I figured out how to sort out its format by my self thanks!</span>
