<div class="post-text" itemprop="text">
<p>Suppose there are a list called '<code>my_list</code>' and an int variable called '<code>list_index</code>'. Basically, the list '<code>my_list</code>' might change over time and hence the '<code>list_index</code>' might raise '<code>IndexError: list index out of range</code>'. However, I just want to make record when this error occurs since it is not that important. To avoid this error, my basic solutions currently are:</p>
<pre><code># My first way
if my_list[list_index: list_index +1]: 
    print('item exists')
else:
    print('item does not exist')

# My second way
if -len(my_list) &lt;= list_index &lt; len(my_list):
    print('item exists')
else:
    print('item does not exist')
</code></pre>
<p>Except for try/except statement, are there other solutions to avoid the 'IndexError: list index out of range' error?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a try-except.</p>
<pre><code>a = [1,2,3]

try:
 print(a[4])
except IndexError:
 pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What we can do in this scenario is we know a possible error can happen, so we encapsulate the statements where the error is prone to happen inside <code>try</code> and we add an <code>except</code> block with an error type where we define what the program should do if it encounters that error.</p>
<p>The general syntax for it is,</p>
<pre><code>try:
    # statements that can possibly cause an error
except error_type:
    # what to do if an error occurred
</code></pre>
<p>So here the error you are mentioning is <code>IndexError</code> which catches the out of index exception in runtime. So a neat and pythonic way to do it is as follows.</p>
<pre><code>try:
    index_value = my_list[list_index]
except IndexError:
    index_value = -1
    print('Item index does not exist')
</code></pre>
</div>
<span class="comment-copy">The Pythonic way is to wrap the statement in a try-except.</span>
<span class="comment-copy">In Python the concept <a href="https://docs.python.org/3/glossary.html#term-eafp" rel="nofollow noreferrer">EAFP</a> is mainly used... "It's easier to ask for forgiveness than for permission."... Look at <a href="https://docs.python.org/3/reference/compound_stmts.html#the-try-statement" rel="nofollow noreferrer">Exception Handling</a> in Python</span>
<span class="comment-copy">What is the motivation behind this question/what issue are you trying to solve? Perhaps there's a better way to do it.</span>
<span class="comment-copy">Assuming you want to allow negatie indices, as your second approach suggests: Your first will not work for <code>-1</code>, as <code>[-1:0]</code> is <code>[]</code>. I'd go with the comparison chaining with <code>len</code> or try/except.</span>
<span class="comment-copy">If you don't like <code>try/except</code> but think your comparison chaining is too long, how about this gem: <code>abs(int(-i-0.1)) &lt; len(l)</code></span>
