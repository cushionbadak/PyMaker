<div class="post-text" itemprop="text">
<blockquote>
<p>a = ['0,Italy,<strong>"Aromas include tropical fruit, broom, brimstone and dried herb. The palate isnt overly expressive, offering unripened apple, citrus and dried sage alongside brisk acidity."</strong>,Vulkà Bianco,87,,Sicily &amp; Sardinia,Etna,,Kerin O’Keefe,@kerinokeefe,Nicosia 2013 Vulkà Bianco  (Etna),White Blend,Nicosia']</p>
</blockquote>
<p>I have this list, and I want to change ONLY the bold string delimiter from "," to "#" for example.</p>
</div>
<div class="post-text" itemprop="text">
<p>This gets you what you want given the input:</p>
<pre><code>a[0].split('"')[1].replace(",", "#")
</code></pre>
<p>But something tells me that's not too useful/general.</p>
<p>But anyway a solution to this kind of problem will probably involve these two string/list methods: <code>split</code> and <code>replace</code></p>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.split</a></p>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.replace</a></p>
<h2>update</h2>
<p>So if you need to use a spark RDD, you can first create the RDD using the list of strings (not yet a csv)</p>
<pre><code>&gt;&gt;&gt; rdd = sc.parallelize(a)
&gt;&gt;&gt; rdd.take(1)
['0,Italy,"Aromas include tropical fruit, broom, brimstone and dried herb. The palate isnt overly expressive, offering unripened apple, citrus and dried sage alongside brisk acidity.",Vulk\xc3\xa0 Bianco,87,,Sicily &amp; Sardinia,Etna,,Kerin O\xe2\x80\x99Keefe,@kerinokeefe,Nicosia 2013 Vulk\xc3\xa0 Bianco (Etna),White Blend,Nicosia']
&gt;&gt;&gt; processed_rdd = rdd.map(lambda row: row.split('"')[0] + row.split('"')[1].replace(",", "#") + row.split('"')[2])
&gt;&gt;&gt; processed_rdd.take(1)
['0,Italy,Aromas include tropical fruit# broom# brimstone and dried herb. The palate isnt overly expressive# offering unripened apple# citrus and dried sage alongside brisk acidity.,Vulk\xc3\xa0 Bianco,87,,Sicily &amp; Sardinia,Etna,,Kerin O\xe2\x80\x99Keefe,@kerinokeefe,Nicosia 2013 Vulk\xc3\xa0 Bianco (Etna),White Blend,Nicosia']
</code></pre>
<p>There are <strong>several assumptions</strong> I'm making, because you only supplied one example row. </p>
<p>These assumptions are about the existence of this double quoted string <code>" "</code>, which is the column with commas needing replacing.</p>
<p>Further, I'm assuming there are no <code>"</code> in any of the other columns.</p>
<p>I'm also assuming this column doesn't need those <code>"</code> in it after it is processed.</p>
<h2>explanation</h2>
<p>the <code>rdd</code> method <code>map</code> will map a function onto each row in an RDD, and the lambda that the <code>map</code> takes returns the new row. So here I'm mapping this replacing chain of commands to each row in the RDD (and then in the example, I <code>take</code> one)</p>
</div>
<span class="comment-copy">What should your output be?</span>
<span class="comment-copy">Is there a reason you've tagged this with <code>pyspark</code> and rdd?</span>
<span class="comment-copy">basicly I have an CSV file, then I have to create an HIVE table in HDFS. But since the DESCRIPTION has commas in it, the delimiter messes everything up. So a collegue told me I needed to change it in Python, using RDD's</span>
<span class="comment-copy">it would be helpful if you could give an example of such an RDD (you can create one in the <code>pyspark</code> shell using a <code>spark</code> context with a few rows, and I could update my answer with some better example</span>
<span class="comment-copy">That is just a row from 50 from a CSV file. I just needed some ideas on how to do it, so I can replicate it to the rest of the file.  Thanks for the help btw !</span>
<span class="comment-copy">I hope this is a better solution then :), I've updated it with some spark example</span>
