<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/22001882/csv-writing-strings-of-text-that-need-a-unique-delimiter">CSV writing strings of text that need a unique delimiter</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/38758158/how-to-give-2-characters-in-delimiter-using-csv-module">How to give 2 characters in “delimiter” using 'csv' module?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I need to write my program output to a file. However, some of the fields already contain spaces, commas, semicolons, tabs. So I do not want to use spaces, tabs, commas as a field separator. The data are from the web so there are possibilities of server admins using wrong format. </p>
<p>I though of using any made up string, like my name. But this can be unprofessional if the output might be used by other researchers or so. </p>
<p>Are there any recommendations in this matter? What should I use if I am afraid to use commas, semicolons, tabs, spaces as separator? </p>
<p><strong>EDIT:</strong>
For those answers suggesting using json or csv module, please note that I want to load the file into a MySQL database. I just can specify to MySQL that fields are separated by [some separator]. I also need a simple solution. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use commas (or tabs), but use a proper serializer that knows how to escape characters on write, and unescape them on read. <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">The <code>csv</code> module</a> knows how to do this and seems to match your likely requirements.</p>
<p>Yes, you could try to find some random character that never appears in your data, but that just means you'll die horribly if that character ever <em>does</em> appear, and it means producing output that no existing parser knows how to handle. CSV is a well-known format (if surprisingly complex, with varied dialects), and can likely be parsed by existing libraries in whatever language needs to consume it.</p>
<p>JSON (handled in Python by the <code>json</code> module) is often useful as well as a language-agnostic format, as is <code>pickle</code> (though it's only readable in Python), but from what you described, CSV is probably the go to solution to start with.</p>
</div>
<div class="post-text" itemprop="text">
<p>Generally, good separators can be any kind of normal, keyboard-typable symbol that isn't used anywhere else in the data. My suggestion would be either '|' or '/'.</p>
</div>
<div class="post-text" itemprop="text">
<p>CSV files typically use quotes around fields that contain field separator characters, and use a backslash or another quote to escape a literal quote.</p>
<p>CSV is not a well defined format, however, and there are many variants implemented by different vendors. If you want a better-rounded text format that can store structured data you should look into using one of the better defined serialization formats such as JSON and YAML instead.</p>
</div>
<span class="comment-copy">Pipes are good |</span>
<span class="comment-copy">Any separator that doesn't appear in the text works. perhaps <code>;;</code></span>
<span class="comment-copy">What about using a JSON format or protobuf?</span>
<span class="comment-copy">pipes (|), sharps (#) or "^"</span>
