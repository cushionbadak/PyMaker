<div class="post-text" itemprop="text">
<p>I am new in pyspark , I have a script as below ;</p>
<pre><code> joinedRatings=ratings.join(ratings)
 joinedRatings.take(4)
</code></pre>
<p>and the output is ;</p>
<pre><code>[(196, ((242, 3.0), (242, 3.0))), (196, ((242, 3.0), (393, 4.0))), (196, ((242, 3.0), (381, 4.0))), (196, ((242, 3.0), (251, 3.0)))]
</code></pre>
<p>After that I have function that is ;</p>
<pre><code>def filterDuplicates(userRatings):
        ratings = userRatings[1]
        (movie1, rating1) = ratings[0]
        (movie2, rating2) = ratings[1]
        return movie1 &lt; movie2
</code></pre>
<p>Than I have this RDD</p>
<pre><code>   uniqueJoinedRatings = joinedRatings.filter(filterDuplicates)
</code></pre>
<p>My problem is to able to understand how run this function I wrote </p>
<pre><code>  joinedRatings[1] 
</code></pre>
<p>I received error that is;</p>
<pre><code>  Fail to execute line 1: joinedRatings[1] 
  Traceback (most recent call last): 
  File "/tmp/zeppelin_pyspark-240579357005199320.py", line 380, in &lt;module&gt; 
  exec(code, _zcUserQueryNameSpace) 
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  TypeError: 'PipelinedRDD' object does not support indexing
</code></pre>
<p>But it is running under “def filterDuplicates(userRatings):” function without any problem , please let me know how can I learn the value of “joinedRatings[1] “ ?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>please let me know how can I learn the value of “joinedRatings[1] “ ?</p>
</blockquote>
<p>Use either <a href="https://spark.apache.org/docs/latest/api/python/pyspark.html?highlight=first#pyspark.RDD.first" rel="nofollow noreferrer"><code>first</code></a>:</p>
<blockquote>
<p><code>first()</code></p>
<p>Return the first element in this RDD.</p>
</blockquote>
<pre><code>joinedRatings.first()
</code></pre>
<p>or <a href="https://spark.apache.org/docs/latest/api/python/pyspark.html?highlight=take#pyspark.RDD.take" rel="nofollow noreferrer"><code>take</code></a> with <code>__getitem__</code>:</p>
<blockquote>
<p><code>take(num)</code></p>
<p>Take the first num elements of the RDD.</p>
</blockquote>
<pre><code>joinedRatings.take(1)[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Based on the code above (which is not easy to read) I'm guessing the <strong>userRatings</strong> is an array while <strong>joinedRatings</strong> is a PipelinedRDD. It seems PipelinedRDD objects cannot be accessed using an index. e.g. [1]. That's not too surprising. Objects can support accessing them by index but they have to deliberately implement that feature. The vast majority do not as it typically does not make sense for them.</p>
<p>A convenient feature of Python, especially for those new to it, is its build in debugger.</p>
<pre><code>import pdb; pdb.set_trace()
</code></pre>
<p>You can add this line to your source code and debug through it. That'll let you play with/examine the joinedRatings object. For more info see</p>
<p><a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer">https://docs.python.org/3/library/pdb.html</a></p>
</div>
<span class="comment-copy">what does <code>print type(userRatings)</code> in <code>filterDuplicates</code> print? What does <code>print type(joinedRatings)</code> print?</span>
<span class="comment-copy">@ Tobias Brösamle , type(joinedRatings) is &lt;class 'pyspark.rdd.PipelinedRDD'&gt;</span>
<span class="comment-copy">What about type(userRatings)?</span>
<span class="comment-copy">@ Tobias Brösamle  (userRatings) is a variable under def function , I'm using the joinedRatings to execute this function</span>
<span class="comment-copy">But obviously userRatings is not of the same type as joinedRatings. That's why I wanted you to print the type of userRatings, so you can see it's not the same and that the argument "but it works for userRatings in filterDuplicates" is not valid.</span>
<span class="comment-copy"><code>pdb</code> won't work in this case - <a href="https://stackoverflow.com/q/31245083/10465355">How can PySpark be called in debug mode?</a>. <code>userRatings</code> is <code>Tuple[int, Tuple[int, float], Tuple[int, float]]</code> (I am sure about outer tuple, inner ones are guess based on <code>repr</code>) and <code>filterDuplicates</code> just mixes indexing of the outer tuple with unpacking.</span>
<span class="comment-copy">Your exception is related to joinedRatings which is not a tuple</span>
