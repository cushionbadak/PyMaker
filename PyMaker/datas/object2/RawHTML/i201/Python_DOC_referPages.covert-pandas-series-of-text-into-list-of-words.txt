<div class="post-text" itemprop="text">
<p>I have a pandas series that for each row a text review is present:
<a href="https://i.stack.imgur.com/xmnbw.png" rel="nofollow noreferrer"><img alt="series example" src="https://i.stack.imgur.com/xmnbw.png"/></a></p>
<p>I would like to convert this series into a unique list containing each word present in each review, for example:</p>
<p>s = [['the', 'pizza', 'was', 'okay'...], ['i', 'love', 'this', 'place', 'my', 'fiance', 'and', 'i', 'go'...]]</p>
<p>Expected output:</p>
<p>s = ['the', 'pizza', 'was', 'okay'..., 'i', 'love', 'this', 'place', 'my', 'fiance', 'and', 'i', 'go'...]</p>
<p>I have tried using <code>tolist()</code> and doing some loops but I am definitely missing something. What could be a good approach to this problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use list comprehension with flattening:</p>
<pre><code>out = [y for x in df['tokens'] for y in x]
</code></pre>
<p>Or use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain</code></a>:</p>
<pre><code>from  itertools import chain
out = list(chain.from_iterable(df['tokens']))
</code></pre>
<p><strong>Performance</strong>:</p>
<pre><code>np.random.seed(123)
N = 10000
L = list('abcdefghijklmno')

df = (pd.DataFrame({'A': np.random.choice(L, N),
                   'B':np.random.randint(1000, size=N)})
      .groupby('B')['A'].apply(list).to_frame('tokens'))
print (df)

In [269]: %timeit df['tokens'].sum()
15.1 ms ± 1.41 ms per loop (mean ± std. dev. of 7 runs, 100 loops each)

In [270]: %timeit out = [y for x in df['tokens'] for y in x]
360 µs ± 15.5 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)

In [271]: %timeit out = list(chain.from_iterable(df['tokens']))
215 µs ± 1.51 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simply use:</p>
<pre><code>df['tokens'].sum()
</code></pre>
<p>As it will <em>add up</em> all the lists.</p>
</div>
<span class="comment-copy">Thanks. The problem for this is that each letter is being split, but in my case, I want to keep each word as an element of the list.</span>
<span class="comment-copy">@sanna - So need <code>out = [y for x in df['tokens'] for y in x.strip('[]').split(',')]</code> ?</span>
<span class="comment-copy">@sanna - Added timings, <code>sum</code> is maybe nice, but slow, but it is up to you what solution is accepting.</span>
<span class="comment-copy">Thanks for the explanation!</span>
<span class="comment-copy">Rather not, really slow.</span>
