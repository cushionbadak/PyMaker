<div class="post-text" itemprop="text">
<p>I'm trying to learn python, I have written a code to convert list of duplicate tuples into csv. I'm unable to get the output I need</p>
<p>The row names should be dynamic no matter how many ever fruits.</p>
<pre><code>import csv

csvData = [('apple', '2'), ('banana', '10'), ('apple', '21'), ('banana', '24'),('pears','10'),('pears','30')]

with open('person.csv', 'w') as csvFile:
    writer = csv.writer(csvFile)
    writer.writerows(csvData)

csvFile.close()][1]][1]
</code></pre>
<p>I'm getting the output like this</p>
<p><a href="https://i.stack.imgur.com/xxg3N.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/xxg3N.png"/></a></p>
<p>Instead I want the output like this </p>
<p><a href="https://i.stack.imgur.com/uxwWu.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/uxwWu.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>To get to the output you want you need to transform your input of</p>
<pre><code>csvData = [('apple', '2'), ('banana', '10'), ('apple', '21'), 
           ('banana', '24'), ('pears','10'),('pears','30')]
</code></pre>
<p>using python to a list structured like this:</p>
<pre><code>new_data = [('apple', 'banana', 'pears'),     # row 0
            ('2','10','10'),                  # row 1
            ('21','24','30')]                 # row 2   of your outputfile
</code></pre>
<p>If you feed that into </p>
<pre><code>import csv

with open("fruits.csv", "w", newline ="" ) as csvFile:
    writer = csv.writer(csvFile)
    writer.writerows(new_data)

print(open("fruits.csv").read())
</code></pre>
<p>You get your desired output:</p>
<blockquote>
<pre><code>apple,banana,pears
2,10,10
21,24,30
</code></pre>
</blockquote>
<p>You need to add <code>newline =""</code> to your call to avoid mishaps.</p>
<hr/>
<p>To reformat arbitrary input of tuples you can use this:</p>
<p>Python 3.6 solution:</p>
<pre><code>from itertools import zip_longest
import csv

data  = [('apple', '2'), ('banana', '10'), ('apple', '21'), 
         ('banana', '24'), ('pears','10'),('pears','30'),
        ('banana', '24'), ('banana','3000')]

# convert data into dictionary - use collections.defaultdict if speed is a problem
d = {}
for key,value in data:
    d.setdefault(key,[]).append(value)    

# transpose to output format
outdata = zip_longest(*( [k]+i for k,i in d.items() ),"")

with open("fruits.csv", "w", newline ="" ) as csvFile:
    writer = csv.writer(csvFile)
    writer.writerows(outdata)
</code></pre>
<p>Outputfile:</p>
<pre><code>apple,banana,pears,
2,10,10,
21,24,30,
,24,,
,3000,,
</code></pre>
<p>Doku:</p>
<ul>
<li><p><a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer">itertools.zip_longest(iterable,default)</a></p></li>
<li><p><a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer">dict.setdefault(key,default)</a></p></li>
</ul>
<hr/>
<p>Python 2.7 - no zip_longest in itertools:</p>
<pre><code>import csv

data  = [('apple', '2'), ('banana', '10'), ('apple', '21'), 
         ('banana', '24'), ('pears','10'),('pears','30'),
        ('banana', '24'), ('banana','3000')]

# convert data into dictionary - use collections.defaultdict if speed is a problem
d = {}
for key,value in data:
    d.setdefault(key,[]).append(value)   

# get longest list value to fill up shorter ones
longest = len(max(d.values(), key=len))

kr = []

# build up column sublists with empty filler lists
for key in d:
    kr.append([key])
    kr[-1].extend(d[key])
    addon = longest - len(d[key])
    if addon:
        kr[-1].extend( [""]* addon)

# transpose columns into rows
outdata = zip(*kr) 

with open("fruits.csv", "w") as csvFile:
    writer = csv.writer(csvFile)
    writer.writerows(outdata)

print(open("fruits.csv").read()) 
</code></pre>
</div>
<span class="comment-copy">Even though I agree that SO is not for making someone's homework, imho a posted answer should solve the problem. Your answer does not show how to group the values.</span>
<span class="comment-copy">what if the order changes in the tuples ?</span>
<span class="comment-copy">@user9538877  You need to create a list of row-tuples(or lists) that you feed into the csv.writerows(). If your data changes you need to stack the correct numbers positionally over each other.</span>
<span class="comment-copy">@Scotty1-   his question does not post any problems rearranging anything, it just states an input , an output and a wanted output. My answer provides the structure needed to achieve that output.</span>
<span class="comment-copy">No problem Thank u</span>
