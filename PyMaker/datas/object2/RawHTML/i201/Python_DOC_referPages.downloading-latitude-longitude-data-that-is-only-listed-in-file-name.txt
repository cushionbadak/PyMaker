<div class="post-text" itemprop="text">
<p>I'm interested in retrieving latitude and longitude data corresponding to the points listed both on the map and within the downloadable files on the links I've listed. I'm looking for this data so that I can find co-located EPA sites.</p>
<p>Currently, there is no latitude and longitude data openly available on the website, but when you download the files their titles end up being like the following example:</p>
<pre><code> _DW0435 B (18.082454357146347 -67.03902682209014) Primary 3_04_19 3_05_19
</code></pre>
<p>The numbers within parentheses are the lat and lon coordinates so I know there must be a way to retrieve this data in a large batch.</p>
<p>The following is a map of all of the purple air devices available:</p>
<p><a href="https://www.purpleair.com/gmap?&amp;zoom=11&amp;lat=36.53411774316267&amp;lng=-121.59676190898591&amp;clustersize=29&amp;orderby=L&amp;latr=0.5048243411266071&amp;lngr=0.9551239013671875" rel="nofollow noreferrer">https://www.purpleair.com/gmap?&amp;zoom=11&amp;lat=36.53411774316267&amp;lng=-121.59676190898591&amp;clustersize=29&amp;orderby=L&amp;latr=0.5048243411266071&amp;lngr=0.9551239013671875</a></p>
<p>Here is a sensor list of all of the available downloadable data:</p>
<p><a href="https://www.purpleair.com/sensorlist" rel="nofollow noreferrer">https://www.purpleair.com/sensorlist</a></p>
<p>If possible, my goal would be to pull only the latitude and longitude for every available data file and store them in corresponding columns within a csv file... kinda like so:</p>
<pre><code>CSV_FILE
18.38 -67.93
45.2  -32
</code></pre>
<p>etc... </p>
<p>I imagine it will take some relation of python/MATLAB to HTML to successfully download the batch of latitude and longitude coordinates corresponding to points, but my limiting factor here is that I don't have any HTML experience. Any help would be appreciated!</p>
<p>Thank you,
Taylor</p>
</div>
<div class="post-text" itemprop="text">
<p>this should do it:</p>
<pre><code>import requests
from lxml import html
import re

if __name__ == "__main__":
    response = requests.get('https://www.purpleair.com/sensorlist')
    xpath = '//td//button[1]/@onclick'

    for cnt in range(10):
        tree = html.fromstring(response.content[len(response.content)//10*cnt:len(response.content)//10*(cnt+1)])
        onclick_info_from_buttons = tree.xpath(xpath)
        position_re = re.compile(r'(\(-?\d+.\d+ -?\d+.\d+\))')
        results = [position_re.findall(tmp) for tmp in onclick_info_from_buttons]
        results = results[::2]
        results = [x[0] for x in results if x]
        with open('positions.csv', 'a') as f:
            i = 0
            for result in results:
                f.write(f"{result[1:-1]}\n")
                print(i/len(results)*10*(cnt+1), '%')
                i += 1
</code></pre>
<p>This solution is probably not great but does its job.</p>
<p>Note that I used Python 3.6 for f-strings (<code>f"{result[1:-1]}\n"</code>) described here:
<a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">https://docs.python.org/3/reference/lexical_analysis.html#f-strings</a></p>
<p>EDIT: 
I forgot to mention that I sliced the data into 10 pieces so that we can see how many percantage of data has beed saved to the resulting file. The whole dataset is pretty big and it would seemed that the script stopped working.</p>
<p>Also you have to install lxml library (<code>pip3 install lxml</code>).</p>
</div>
