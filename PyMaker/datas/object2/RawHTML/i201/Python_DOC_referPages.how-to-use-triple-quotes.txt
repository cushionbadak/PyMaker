<div class="post-text" itemprop="text">
<p>for some reason even when using triple quotes the text is printed wrongly
These are the variable that I have the problem with... I have other variables with triple quotes that when being printed is printed correctly! the problem is only with these ASCII ones</p>
<p>One of the problematic variables is this ASCII the other ones are the same just with fewer body parts ;)</p>
<pre><code>    gv_sixTries = '''
___________.._______ 
| .__________))______|
| | / /      ||
| |/ /       ||
| | /        ||.-''.
| |/         |/  _  \
| |          ||  `/,|
| |          (\\`_.'
| |         .-`--'.
| |        /Y . . Y\
| |       // |   | \\
| |      //  | . |  \\
| |     ')   |   |   (`
| |          ||'||
| |          || ||
| |          || ||
| |          || ||
| |         / | | \
| |         `-' `-'      
| |                      
| |                      
: :                        
. .                      
'''
</code></pre>
<p>the variable is being printed like that:
<a href="https://i.stack.imgur.com/KLgTU.png" rel="nofollow noreferrer">image</a></p>
<p>the print code is just a normal print(gv_NUMBERTries)</p>
<p>OS: Windows 10</p>
<p>interpreter: Python IDLE 3.7.2</p>
</div>
<div class="post-text" itemprop="text">
<p>Add an r to your string</p>
<pre><code>gv_sixTries = r'''
    ___________.._______ 
    | .__________))______|
    | | / /      ||
    | |/ /       ||
    | | /        ||.-''.
    | |/         |/  _  \
    | |          ||  `/,|
    | |          (\\`_.'
    | |         .-`--'.
    | |        /Y . . Y\
    | |       // |   | \\
    | |      //  | . |  \\
    | |     ')   |   |   (`
    | |          ||'||
    | |          || ||
    | |          || ||
    | |          || ||
    | |         / | | \
    | |         `-' `-'      
    | |                      
    | |                      
    : :                        
    . .                      
    '''
</code></pre>
<p>This tells python to use the string a raw literal, not using backslashes as escape characters</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem comes from unwanted escaping of new line characters due to antislashes at the end of some lines.</p>
<p>Simply declare a raw string by prefixing your string by <code>r</code>, and it will fix the problem.</p>
<pre><code>gv_sixTries = r'''
___________.._______ 
| .__________))______|
| | / /      ||
| |/ /       ||
| | /        ||.-''.
| |/         |/  _  \
| |          ||  `/,|
| |          (\\`_.'
| |         .-`--'.
| |        /Y . . Y\
| |       // |   | \\
| |      //  | . |  \\
| |     ')   |   |   (`
| |          ||'||
| |          || ||
| |          || ||
| |          || ||
| |         / | | \
| |         `-' `-'      
| |                      
| |                      
: :                        
. .                      
'''
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The error comes due to a backslash character in the string which is used for printing escape sequence characters(\n, \t, \, etc.). Use raw string for printing a backslash character on the screen, something like:</p>
<pre><code>gv_Tries = r"""
___________.._______
| .__________))______|
| | / /      ||
| |/ /       ||
| | /        ||.-''.
| |/         |/  _  \
| |          ||  `/,|
| |          (\\`_.'
| |         .-`--'.
| |        /Y . . Y\
| |       // |   | \\
| |      //  | . |  \\
| |     ')   |   |   (`
| |          ||'||
| |          || ||
| |          || ||
| |          || ||
| |         / | | \
| |         `-' `-'
| |
| |
: :
. .
"""
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is because some of your lines end with the Python escape character: <code>\</code>.</p>
<blockquote>
<p>The backslash (\) character is used to escape characters that otherwise have a special meaning, such as newline, backslash itself, or the quote character.</p>
<p><em><a href="https://docs.python.org/3/reference/lexical_analysis.html" rel="nofollow noreferrer">String and Bytes literals</a></em></p>
</blockquote>
<p>When a line ends with a backslash, it tells Python that the line is continued on the next line.</p>
<pre><code>if some_condition \
    or some_other_condition:
</code></pre>
<p>To counter this, you either want to 'double up' your backslashes to escape your escape characters:</p>
<pre><code>gv_sixTries = '''
| |        /Y . . Y\\
| |       // |   | \\\\
| |      //  | . |  \\\\
'''
</code></pre>
<p>Or mark your string with an <code>r</code> to mark it as a <em>raw string</em>.</p>
<blockquote>
<p>Both string and bytes literals may optionally be prefixed with a letter <code>'r'</code> or <code>'R'</code>; such strings are called raw strings and treat backslashes as literal characters.</p>
<p><em><a href="https://docs.python.org/3/reference/lexical_analysis.html" rel="nofollow noreferrer">String and Bytes literals</a></em></p>
</blockquote>
<pre><code>gv_sixTries = r'''
| |        /Y . . Y\
| |       // |   | \\
| |      //  | . |  \\
'''
</code></pre>
</div>
<span class="comment-copy">Seems like you are missing newline characters on those distorted lines</span>
<span class="comment-copy">a bit faster than me, well done ;)</span>
