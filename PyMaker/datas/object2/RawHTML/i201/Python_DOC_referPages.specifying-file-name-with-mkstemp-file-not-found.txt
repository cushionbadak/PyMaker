<div class="post-text" itemprop="text">
<p>I need to be able to create a temporary file with a specified file name and write data to it, then zip said file with filename up along with other files:</p>
<pre><code>fd, path = tempfile.mkstemp(".bin", "filename", "~/path/to/working/directory/")
try:
    with os.fdopen(fd, "wb") as tmp:
        tmp.write(data)
    with ZipFile("zip.zip", "w") as zip:
        zip.write("filename")        
        zip.writestr("file2", file2_str)
        zip.writestr("file3", file3_str)
        # ...
finally:
    os.remove(path)
</code></pre>
<p>I think I must be misunderstanding how mkstemp works, I get the error at the first line of code here:</p>
<p><code>FileNotFoundError: [Errno 2] No such file or directory: '~/path/to/working/directory/filenameq5st7dey.bin'</code></p>
<p>It looks like a bunch of garbage gets added to the file name before the suffix is put on the file. I've tried this without a suffix and I still get garbage at the end of the file name.</p>
<p>Aside from the garbage in the file name, why do I get a file not found error instead of having a temporary file created in my directory with that name (plus garbage)?</p>
</div>
<div class="post-text" itemprop="text">
<p>You supplied this argument:</p>
<pre><code>"~/path/to/working/directory/"
</code></pre>
<p>Perfectly natural, it makes sense why you would supply it. But it is wrong. If you <code>ls .</code> you likely will not find a <code>~</code> directory.</p>
<p>What you were hoping for was expansion to <code>${HOME}</code>, as the Bourne shell does. In python we must call <a href="https://docs.python.org/3/library/os.path.html#os.path.expanduser" rel="nofollow noreferrer">this function</a>:</p>
<pre><code>os.path.expanduser("~/path/to/working/directory/")
</code></pre>
<p>Print the result it returns and you'll see why it's essential.</p>
<p>Some folks prefer to have <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.expanduser" rel="nofollow noreferrer">pathlib</a> do the work for them:</p>
<pre><code>from pathlib import Path
Path("~/path/to/working/directory/").expanduser()
</code></pre>
</div>
