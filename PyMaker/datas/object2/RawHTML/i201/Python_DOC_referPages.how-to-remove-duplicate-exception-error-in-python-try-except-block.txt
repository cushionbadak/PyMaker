<div class="post-text" itemprop="text">
<p>I am a new python programmer and have been making a file sort function to take a file name and neatly arrange it in a file structure being year/month/day. The following code works but looks ugly and there is a lot of duplicate exception errors which I would like to remove. 
Would love to see how to improve the efficiency of this code as it will be run frequently. Thanks in advance</p>
<pre><code>def fileSort(day, month, year, file):
    global filewritten

    try: os.makedirs(togoto + '/' + year)
    except FileExistsError:
        pass
    try: os.makedirs(togoto + '/' + year + '/' + month)
    except FileExistsError:
        pass
    try:
        os.makedirs(togoto + '/' + year + '/' + month + '/' + day)
    except FileExistsError:
    pass
    try:
        shutil.move(path + '/' + file,
                    togoto + '/' + year + '/' + month + '/' + day + '/' + file)
        filewritten += 1

    except FileExistsError:
        pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>os.makedirs()</code> <a href="https://docs.python.org/3/library/os.html#os.makedirs" rel="nofollow noreferrer">already creates the directories leading to the given path</a>, so it should be enough to do</p>
<pre><code>try:
    os.makedirs(togoto + '/' + year + '/' + month + '/' + day)
except FileExistsError:
    pass
try:
    shutil.move(path + '/' + file,
                togoto + '/' + year + '/' + month + '/' + day + '/' + file)
    filewritten += 1

except FileExistsError:
    pass
</code></pre>
<p>This is a bit of an improvement to your original version.</p>
<p>BTW, <code>os.path.join()</code> is your friend:</p>
<pre><code>source = os.path.join(path, file)
targetdir = os.path.join(togoto, year, month, day)
target = os.path.join(togoto, year, month, day, file)
try:
    os.makedirs(targetdir)
except FileExistsError:
    pass
try:
    shutil.move(source, target)
    filewritten += 1

except FileExistsError:
    pass
</code></pre>
<p>Even better would be to use all the capabilities of <code>os.makedirs()</code> if your Python is new enough:</p>
<pre><code>source = os.path.join(path, file)
targetdir = os.path.join(togoto, year, month, day)
target = os.path.join(targetdir, file)

os.makedirs(targetdir, exist_ok=True) # i. e. no exception on an already existing path.
try:
    shutil.move(source, target)
    filewritten += 1
except FileExistsError:
    pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First of all: use <code>makedirs</code> with <em>only</em> the innermost directory:</p>
<pre><code>try: 
    os.makedirs(togoto + '/' + year + '/' + month + '/' + day)
except FileExistsError:
    pass
</code></pre>
<p>Then notice that you should probably use <code>os.path.join</code> to form the path instead, hence:</p>
<pre><code>try: 
    os.makedirs(os.path.join(togoto, year, month, day))
except FileExistsError:
    pass 
</code></pre>
<p>And... in Python 3 (3.2+) there is a parameter <code>exists_ok</code> that can be set to <code>True</code> so that no exception is thrown if the <em>leaf child directory exists</em>, so we get</p>
<pre><code>os.makedirs(os.path.join(togoto, year, month, day), exists_ok=True)
</code></pre>
<hr/>
<p>Finally do note that <code>shutil.move</code> might - <em>or might not</em> - throw a <code>FileExistsError</code> if the target exists...</p>
</div>
<div class="post-text" itemprop="text">
<p>You could define your own function to shorten the code and it's also good for re-usability:</p>
<pre><code>def create_dir(name):
    try:
        os.makedirs(name)
    except FileExistsError:
        pass

def fileSort(day, month, year, file):
    global filewritten
    create_dir(togoto + '/' + year)
    create_dir(togoto + '/' + year + '/' + month)
    create_dir(togoto + '/' + year + '/' + month + '/' + day)
    try:
        shutil.move(path + '/' + file, togoto + '/' + year + '/' + month + '/' + day + '/' + file)
        filewritten += 1
    except FileExistsError:
        pass
</code></pre>
</div>
<span class="comment-copy">You could make a decision block seeing if each directory exists using <code>os.path.isdir</code> starting with the longest path for the first check and moving backwards. If the directory already exists, it would decrease your work.</span>
<span class="comment-copy">this answer might help <a href="https://stackoverflow.com/a/14364249/2484882">stackoverflow.com/a/14364249/2484882</a></span>
<span class="comment-copy">Ah wow that is so much neater. Thanks a lot, much appreciated!</span>
