<div class="post-text" itemprop="text">
<p>Actually I have a folder (data in below picture) which contains 2 subfolders and each subfolder includes some .png files. I need to have loop through each subfolder and do some coding on each image file in that subfolder and save the result. I have used <code>os.walk()</code> and <code>os.listdir()</code> and <code>glob.glob()</code> but none of them worked.  One of many codes that I have tried is same as below:</p>
<pre><code>path1 = Path('./data')
path2 = os.listdir(path1)

# loop through main folder to read each subfolder
for i in path2:
    if not i.startswith('.'):
       path3 = Path(os.path.join(path1,i))
       path4 = os.listdir(path3)

    #loop through each subfolder to read each file
       for j in path4:
           #some coding
</code></pre>
<p><a href="https://i.stack.imgur.com/eoUJw.png" rel="nofollow noreferrer">enter image description here</a></p>
<p>Any suggestion would be highly appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>Something like this with <code>os.walk</code>:</p>
<pre><code>import os
for root, dirs, files in os.walk(path_to_data_folder):
#    if not root.endswith(good_folder_name):
#        continue
    for fname in files:
        if fname_meets_my_criteria:
            fpath = os.path.join(root, fname)
            with open(fpath, 'r') as f, open(new_file_path, 'w') as newfile:
                data = f.read()
                # process file data
                new_data = func_that_processes_data(data)
                newfile.write(new_data)
</code></pre>
<hr/>
<p>That has a bit of pseudocode:</p>
<ul>
<li><p><code>fname_meets_my_criteria</code> is a substitute for a comparison, it needs this if you want to filter the files for processing - it could be something like <code>fname.edswith('.txt')</code> or <code>not fname.endswith('.cfg')</code></p></li>
<li><p><code>new_file_path</code> is the path and name for a new file that the processed data would be written to.</p></li>
</ul>
<hr/>
<p>If you intend to overwrite the files after they have been processed use this instead:</p>
<pre><code>for root, dirs, files in os.walk(path_to_data_folder):
#    if not root.endswith(good_folder_name):
#        continue
    for fname in files:
        if fname_meets_my_criteria:
            fpath = os.path.join(root, fname)
            with open(fpath, 'r') as f:
                data = f.read()
            # process file data
            new_data = func_that_processes_data(data)
            with open(fpath, 'w') as f:
                f.write(new_data)
</code></pre>
<hr/>
<p>In both of my examples, the files were opened as Text files.  If you need to process bytes instead of test/strings open the files with <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer"><code>mode</code> arguments of <code>'rb'</code> or <code>'wb'</code></a></p>
</div>
<div class="post-text" itemprop="text">
<p>I'd suggest using <code>pathlib</code> library. The library is an “Object-oriented filesystem paths” module which combines the best of Python’s file system modules like os, os.path, and glob.</p>
<pre><code>from pathlib import Path

path1 = Path('./data')
files = [item.as_posix() for item in path1 .glob('**/*.png') if item.is_file()]
</code></pre>
<p>This will give you a list of all .png paths in subfolders of data.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>listdir()</code>like that:</p>
<pre><code># pathname of root dir
images_path = "./data"

# filtered file extension
suffix = ".png"

# For each image,
for i in os.listdir(images_path):
    file = os.path.basename(i)
    fileName, fileExtension = os.path.splitext(file)
    # is it an image file with 'suffix' extension ?
    if os.path.isfile(images_path+'/'+i) and fileExtension == suffix:
        # do some coding
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I could find my answer! It was pretty simple but I made a mistake in naming. So, the code is written below maybe help others with same issue:</p>
<pre><code>path = "./data/"

for subfolder in os.listdir(path):
    subfolder_name = path + subfolder

    for imgs in os.listdir(subfolder_name):
        imagename = subfolder_name + '/' + imgs

        # do some coding
</code></pre>
</div>
<span class="comment-copy">Why didn't the <code>os.walk</code> solution work? Did you try to <i>mimic</i> the examples in <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">the docs</a>?</span>
<span class="comment-copy">Thanks but I get confused! Could you tell me what is the "fname_meets_my_criteria" and "new_file_path?</span>
<span class="comment-copy">@Nel - see edit</span>
<span class="comment-copy">Thanks for your answer but I don't need to have all image files together. I am trying to get access to each subfolder to process related image files. By using your code, I won't be able to have loop through subfolders separately.</span>
<span class="comment-copy">I’m not clear what you mean exactly, but you can always keep the parent folder as a value for each file path using .parent method</span>
<span class="comment-copy">Thanks for your answer but it doesn't work in that way I need. Actually this code is not entering in each subfolders and just looping through different subfolders. The value of your "if" is False cause I have .png files in each subfolder.</span>
