<div class="post-text" itemprop="text">
<p>I added a counter at the end of the code below.  However, when the code continues to run past a counter of 10, which is where i set it to break. Can't figure out what I'm doing wrong.</p>
<pre><code>chromedriver='C:\\Users\\user\\Downloads\\chromedriver_win32\\chromedriver.exe'

options=webdriver.ChromeOptions()
options.add_argument('headless')
options.add_argument('window-size=1200x600')
browser=webdriver.Chrome(executable_path=chromedriver,chrome_options=options)

path='C:/Users/something.xlsx'

xls=pd.read_excel(path)
data=xls["companyname"].tolist()
data=[w.replace('" "','+') for w in data]

book=openpyxl.load_workbook(path)
sheet=book.active
try:
    delete=book['Python Data']
    book.remove(delete)
except Exception:
    pass
book.create_sheet('Python Data')
ws1=book['Python Data']
book.save(path)

counter=0

while data:
    for item in data:
        browser.get('https://duckduckgo.com/?q='+item+'&amp;t=h_')
        results = browser.find_elements_by_id('links')
        num_page_items = len(results)
        for i in range(num_page_items):
            mylist = results[i].text
            row=len(ws1['A']) + 1
            ws1.cell(row=1,column=1,value="Results")
            ws1.cell(row=row,column=1,value=mylist)
            book.save(path)
            counter += 1
            print(counter)
            if counter==10:
                break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code after reaching <code>counter == 10</code> is executed again because of infinite <code>while data</code> statement. Please notice, that <code>break</code> does not escape <code>while</code> statement here, it does for <code>for i in range(num_page_items)</code>.</p>
<p>Please use following code:</p>
<pre><code># notice lack of while data statement
for item in data:
    browser.get('https://duckduckgo.com/?q='+item+'&amp;t=h_')
    results = browser.find_elements_by_id('links')
    num_page_items = len(results)
    for i in range(num_page_items):
        mylist = results[i].text
        row=len(ws1['A']) + 1
        ws1.cell(row=1,column=1,value="Results")
        ws1.cell(row=row,column=1,value=mylist)
        book.save(path)
        counter += 1
        print(counter)
        if counter==10:
            break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As written in <a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow noreferrer">4.4. break and continue Statements, and else Clauses on Loops</a>:</p>
<blockquote>
<p>The <code>break</code> statement, like in C, breaks out of the <strong>innermost enclosing</strong> <code>for</code> or <code>while</code> loop.</p>
</blockquote>
<p>In your code it is:</p>
<pre><code>for i in range(num_page_items):
     .....
</code></pre>
</div>
<span class="comment-copy">Why do you use <code>while data</code>? I think that breaks your logic.</span>
<span class="comment-copy">I borrowed a chunk of code from here: <a href="https://stackoverflow.com/questions/46771995/scraping-duckduckgo-with-python-3-6?rq=1" title="scraping duckduckgo with python 3 6">stackoverflow.com/questions/46771995/â€¦</a>. However, I also needed to feed a list of search terms to the duckduck go url and I found some other code (don't remember where) that I thought would allow me to do this. It included the while loop but I suppose I went astray when using it for my particular code.  Can advise how to properly feed the url while avoiding any silly loop errors?</span>
