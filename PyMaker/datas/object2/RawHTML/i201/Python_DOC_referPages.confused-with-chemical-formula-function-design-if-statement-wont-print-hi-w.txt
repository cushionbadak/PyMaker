<div class="post-text" itemprop="text">
<pre><code>def compound_properties(csv_name, compound_formula):
compDict = molform(compound_formula)

compK = compDict.keys()
sList = []
ele = ''
with open("atoms.csv", "r") as atomsF:
elemData = list([row for row in csv.reader(atomsF)])
for i in compK:
  ele = str(i)
  for j in elemData: 
    sList = j
    if ele in sList:
      print('hi')
</code></pre>
<p>How do I check if this element is within this list I generated with a for loop? The If statement I have doesn't print "hi" like it is supposed to. How do I fix this?? </p>
<p>This function takes two parameters: the csv filename and the formula of the compound.</p>
<p>It should call the molform() function to get the composition of the molecule and
  get the required property from the csv file. The csv file will have all the
  properties required.</p>
<p>This function is required to return a tuple of three properties:
  1. The NAME of the atom with the lowest boiling point. 
      For example, if it's oxygen, return 'Oxygen', not 'O' </p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, you can shorten your code quite a bit by removeing unnecessary declarations.</p>
<p><strong>Edit:</strong> I'm guessing you want to open <code>csv_name</code>, not <code>"atoms.csv"</code>?</p>
<p>With everything obsolete removed, it looks like this (take a look <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">here</a> for more info on <code>csv.reader</code>):</p>
<pre><code>def compound_properties(csv_name, compound_formula):
    compDict = molform(compound_formula)

    with open(csv_name, "r") as atomsF:
        elemData = csv.reader(atomsF) # csv.reader already returns a list of rows

    for i in compDict:  # for loop automaticaly iterates over dict keys
        for j in elemData:
            if str(i) in j:  # no need to assign i or j to additional variables
                print('hi')
</code></pre>
<p>Without any real example data, I can't say more about this right now then that the problem is not within this for loop. With test data, it works perfectly:</p>
<pre><code>elem_data = [['this', 'is', 'the', 'first', 'row'], ['this', 'is', 'the', 'bar', 'row'], ['this', 'is', 'all', 'a', 'big', 'foo']]

compDict = {'foo': 1, 'bar': 2, 'baz': 3}

for i in compDict:
    for j in elemData:
        if str(i) in j:
            print('{} was found in line {}'.format(i, elemData.index(j) + 1))
</code></pre>
<p>Output:</p>
<pre><code>foo was found in line 3
bar was found in line 2
</code></pre>
</div>
<span class="comment-copy">Instead of <code>sList = j</code> , can you try <code>sList.append(j)</code>. And try running the code again.</span>
<span class="comment-copy">If you supply us with a little more info (how <code>compDict</code> looks, what else the function should return, where <code>csv_name</code> comes into play etc.) we could help you a little better.</span>
<span class="comment-copy">Beware, never iterate a file (or a <code>csv.reader') inside a loop! You will reach the end of file after first iteration and the following ones will process an empty file... You must use the opposite order: </code>for j in elemData: for i in compDict: ...`</span>
