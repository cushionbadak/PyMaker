<div class="post-text" itemprop="text">
<p>I have a raw data in a <code>.txt file</code> format and would like to convert it to <code>.csv file</code> format.</p>
<p>This is a sample data from the txt fle:</p>
<pre><code>(L2-CR666 Reception Counter) L2-CR666 Reception Counter has been forced.
(L7-CR126 Handicapped Toilet) L7-CR126 Handicapped Toilet has been forced.
</code></pre>
<p>I would like to achieve the following result:</p>
<pre><code>L2-CR666 Reception Counter, forced
L7-CR126 Handicapped Toilet, forced
</code></pre>
<p>I have tried the following code but was unable to achieve the stated result. Where did I went wrong?</p>
<pre><code>import csv

with open('Converted Detection\\Testing 01\\2019-02-21.txt') as infile, open('Converted Detection\\Converted CSV\\log.csv', 'w') as outfile:
    for line in infile:
        outfile.write(infile.read().replace("(", ""))
        for line in infile:
            outfile.write(', '.join(infile.read().split(')')))
            outfile.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this : </p>
<pre><code>with open('Converted Detection\\Testing 01\\2019-02-21.txt') as infile, open('Converted Detection\\Converted CSV\\log.csv', 'w') as outfile:
    for line in infile:
        # Get text inside ()
        text = line[line.find("(")+1:line.find(")")]
        # Remove \r\n        
        line = line.rstrip("\r\n")
        # Get last word
        forcedText = line.split(" ")[len(line.split(" "))-1]
        # Remove . char
        forcedText = forcedText[:len(forcedText)-1]
        outfile.write(text+", "+forcedText+"\n")

    outfile.close()
</code></pre>
<p>Best</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/stdtypes.html#str.partition" rel="nofollow noreferrer">.partition()</a> to truncate everything before ) and then simply replace the parts you do not want accordingly. Also, you do not have to close the file when using the with statement as it automatically closes it for you, and you do not have to import the csv library to save a file with the .csv extension.</p>
<p>The following code outputs your wanted result:</p>
<pre class="lang-py prettyprint-override"><code>infile_path = "Converted Detection\\Testing 01\\2019-02-21.txt"
outfile_path = "Converted Detection\\Converted CSV\\log.csv"

with open(infile_path, "r") as infile, open(outfile_path, "+w") as outfile:
    for line in infile:
        line = line.partition(")")[2].replace(" has been forced.", ", forced").strip()
        outfile.write(line + "\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First for loop is reading infile. No need to reread infile and second loop.
Also <code>with</code> block will take care of closing files.</p>
<pre><code>for line in infile:
    line = line.replace("(", "")
    outfile.write(', '.join(line.split(')')))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest using:</p>
<pre><code>lineout = ', '.join(linein.replace('(','').replace(')','').split(' has been ')
</code></pre>
<p>where:</p>
<pre><code>linein = line.strip()
</code></pre>
</div>
