<div class="post-text" itemprop="text">
<p>I'm trying to scrape the email address from a website where the email is nested within a script, and a simple "find/findAll + .text" isn't doing the trick.</p>
<p>source html:</p>
<p><code>&lt;script&gt;EMLink('com','aol','mikemhnam','&lt;div class="emailgraphic"&gt;&lt;img style="position: relative; top: 3px;" src="https://www.naylornetwork.com/EMailProtector/text-gif.aspx?sx=com&amp;nx=mikemhnam&amp;dx=aol&amp;size=9&amp;color=034af3&amp;underline=yes" border=0&gt;&lt;/div&gt;','pcoc.officialbuyersguide.net Inquiry','onClick=\'$.get("TrackLinkClick", { LinkType: "Email", LinkValue: "mikemhnam@aol.com", MDSID: "CPC-1210", AdListingID: "" });\'')&lt;/script&gt;
&lt;br/&gt;</code></p>
<p>My current approach was to try a "findAll +" regex expression like so:</p>
<pre><code>for email in soup.findAll(class_='ListingPageNameAddress NONE'):
    print(email.findAll("([\w\._]+\@([\w_]+\\.)+[a-zA-Z]+)"))
</code></pre>
<p>but in jupyter this is only returning a <code>[] :/</code></p>
<p>Is there an issue with the regex expression or a simpler way to try to tease out the email here?</p>
</div>
<div class="post-text" itemprop="text">
<p>Although regex may be more robust over time, in my experience these parts of scripts tags remain pretty constant so consider a plan B of using split</p>
<pre><code>html ='''

&lt;script&gt;EMLink('com','aol','mikemhnam','&lt;div class="emailgraphic"&gt;&lt;img style="position: relative; top: 3px;" src="https://www.naylornetwork.com/EMailProtector/text-gif.aspx?sx=com&amp;nx=mikemhnam&amp;dx=aol&amp;size=9&amp;color=034af3&amp;underline=yes" border=0&gt;&lt;/div&gt;','pcoc.officialbuyersguide.net Inquiry','onClick=\'$.get("TrackLinkClick", { LinkType: "Email", LinkValue: "mikemhnam@aol.com", MDSID: "CPC-1210", AdListingID: "" });\'')&lt;/script&gt;
&lt;br/&gt;

'''

print(html.split('LinkValue: "')[1].split('"')[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It appears that you aren't using the right <code>findall</code> method. You need to <code>import re</code> and then use the <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>findall()</code></a> method, not the <code>findAll()</code> method (note the case difference of the letter "A"). The function's interface is:</p>
<pre><code>re.findall(pattern, string, flags=0)
</code></pre>
<p>For details, see <a href="https://docs.python.org/3/library/re.html#finding-all-adverbs" rel="nofollow noreferrer">this section</a> of the <code>re</code> doc on finding all adverbs.</p>
</div>
<span class="comment-copy">Thanks! I revised the code to this:  <code>for email in soup.findAll(class_='ListingPageNameAddress NONE'):     print(re.findall(r"([\w\._]+\@([\w_]+\\.)+[a-zA-Z]+)"),text)</code>  but am now getting this error: TypeError: findall() missing 1 required positional argument: 'string'  Is the 'string' different from 'text'?</span>
<span class="comment-copy">You need to revise your new code to be <code>print(re.findall(r"([\w\._]+\@([\w_]+\\.)+[a-zA-Z]+)", text))</code></span>
<span class="comment-copy">Hmm :/ now getting a different error:  TypeError: expected string or bytes-like object</span>
<span class="comment-copy">For reference, the full code I'm using within this html block: <code>for company_name in soup.findAll(class_='ListingPageNameAddress NONE'):     print(company_name.find('h1').text)      for phone in soup.findAll(class_='ListingPageNameAddress NONE'):     print(phone.find(class_='Disappear').text)      for email in soup.findAll(class_='ListingPageNameAddress NONE'):     print(re.findall(r"([\w\._]+\@([\w_]+\\.)+[a-zA-Z]+)",text))</code>  Do I need to tear it down and build from scratch using re rather than bs4?</span>
<span class="comment-copy">In the last line, try replacing <code>text</code> with <code>soup</code>.</span>
