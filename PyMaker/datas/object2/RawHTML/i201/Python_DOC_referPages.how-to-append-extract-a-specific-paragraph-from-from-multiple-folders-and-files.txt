<div class="post-text" itemprop="text">
<p>I have a list that contains directories and filenames that I want to open, read a paragraph from and save that paragraph to a list.</p>
<p>The problem is that I don't know how to "filter" the paragraph out from the files and insert into my list.</p>
<p>My code so far.</p>
<pre><code>rr = []
file_list = [f for f in iglob('**/README.md', recursive=True) if os.path.isfile(f)]
for f in file_list:
  with open(f,'rt') as fl:
    lines = fl.read()
    rr.append(lines)
  print(rr)
</code></pre>
<p>The format of the file I'm trying to read from. The text between the  paragraph start and the new paragraph is what I'm looking for</p>
<pre><code>There is text above this paragraph
## Required reading
    * line
    * line
    * line
     /n
### Supplementary reading
There is text bellow this paragraph
</code></pre>
<p>When I run the code I get all the lines from the files as expected. </p>
</div>
<div class="post-text" itemprop="text">
<p>You need to learn how your imported text is structured. How are the paragraphs segregated? does it look like '\n\n', could you split your text file on '\n\n' and return the index of the paragraph you want?</p>
<pre><code>text = 'paragraph one text\n\nparagraph two text\n\nparagraph three text'.split('\n\n')[1]
print(text)
&gt;&gt;&gt; 'paragraph two text'
</code></pre>
<p>The other option, as someone else mentioned is Regular Expression aka RegEx, which you can import using </p>
<pre><code>import re
</code></pre>
<p>RegEx is used to find patterns in text.</p>
<p>Go to <a href="https://pythex.org/" rel="nofollow noreferrer">https://pythex.org/</a> and grab a sample of one of the documents and experiment findingthe pattern that will match with the paragraph you want to find.</p>
<p>Learn more about RegEx here
<a href="https://regexone.com/references/python" rel="nofollow noreferrer">https://regexone.com/references/python</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Solved my problem with string slicing.</p>
<p>Basically, I just scan each line for a start String and an end String and makes lines out of that. These lines then get appended to a list and written into a file.</p>
<pre><code>for f in file_list:
        with open(f, 'rt') as fl:
            lines = fl.read()
            lines = lines[lines.find('## Required reading'):lines.find('## Supplementary reading')]
            lines = lines[lines.find('## Required reading'):lines.find('### Supplementary reading')]
            lines = lines[lines.find('## Required reading'):lines.find('## Required reading paragraph')]
            rr.append(lines)
</code></pre>
<p>But I still have "## Required reading" in my list and in my file so I run a second read/write method.</p>
<pre><code>def removeHashTag():
    global line
    f = open("required_reading.md", "r")
    lines = f.readlines()
    f.close()
    f = open("required_reading.md", "w")
    for line in lines:
        if line != "## Required reading" + "\n":
            f.write(line)
    f.close()
removeHashTag()
</code></pre>
</div>
<span class="comment-copy">I recommend learning how to work with the <code>re</code> module - <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a> . It's really a very powerful tool. But what exactly do you mean? Provide examples of source and target data which you want to extract.</span>
<span class="comment-copy">Two questions (1) Which paragraph do you want? Always the first paragraph? Always the Nth paragraph? A paragraph containing specific text?  (2) How do the files separate paragraphs? Blank lines between them? Four or eight spaces at the beginning of the first line?</span>
<span class="comment-copy">added the format of the file im reading from</span>
