<div class="post-text" itemprop="text">
<p>I have three lists that contain the following data:</p>
<pre><code>Entities:  ['Ashraf', 'Afghanistan', 'Afghanistan', 'Kabul']
Relations:  ['Born', 'President', 'employee', 'Capital', 'Located', 'Lecturer', 'University']
sentence_list: ['Ashraf','Born', 'in', 'Kabul', '.' 'Ashraf', 'is', 'the', 'president', 'of', 'Afghanistan', '.', ...]
</code></pre>
<p>As the <code>sentence_list</code> is a list of sentences. In each sentence, I want to check if any word of <code>Entities</code> and <code>Relations</code>, the combination of specific words should be added in another list. such as, (<code>Ashraf, born, Kabul</code>) in the first sentence.</p>
<p>What I did: </p>
<p>First incomplete Solution:</p>
<pre><code># read file
with open('../data/parse.txt', 'r') as myfile:
    json_data = json.load(myfile)

for i in range(len(json_data)): # the dataset was in json format
     if json_data[i]['word'] in relation(json_data)[0]: # I extract the relations
         print(json_data[i]['word'])
     if json_data[i]['word'] in entities(json_data)[0]:
         print(json[i]['word'])
</code></pre>
<p>The output: <code>(Ashraf, Born, Ashraf)</code>, where I want <code>(Ashraf, Born, Kabul)</code></p>
<p>The next incomplete solution: I stored <code>json_data</code> to a list and then I did this:</p>
<pre><code>json_data2 = []
for i in range(len(json_data)):
    json2_data.append(json_data[i]['word'])
print(json_data2)


'''
Now I tried if I can find any element of `Entities` list and `Relations` list
in each sentence of `sentence_list`. And then it should store matched 
entities and relations based on sentence to a list. '''

for line in json_data2:
    for rel in relation(obj):
        for ent in entities(obj):
            match = re.findall(rel,  line['word'])
            if match:
                print('word matched relations: %s ==&gt; word: %s' % (rel,  line['address']))
            match2 = re.findall(ent, line['word'])
            if match2:
                print('word matched entities: %s ==&gt; word: %s' % (ent,  line['address']))
</code></pre>
<p>Unfortunately, does not work?    </p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the following <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>to_match = set(Entities+Relations)
l = [{j for j in to_match if j in i} 
        for i in ' '.join(sentence_list).split('.')[:-1]]
</code></pre>
<p><b> Output </b></p>
<pre><code>[{'Ashraf', 'Born', 'Kabul'}, {'Afghanistan', 'Ashraf'}]
</code></pre>
<hr/>
<p>Note that I'm, returning a list of <code>sets</code> to avoid duplicate values, given that for instance in <code>Entities</code> <code>Afghanistan</code> appears twice.</p>
<p>Useful reads:</p>
<ul>
<li><p><a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">List comprehensions</a></p></li>
<li><p><a href="https://docs.python.org/2/library/sets.html" rel="nofollow noreferrer">sets â€” Unordered collections of unique elements</a></p></li>
<li><p><a href="https://docs.python.org/2.4/lib/string-methods.html" rel="nofollow noreferrer">string methods</a></p></li>
</ul>
</div>
<span class="comment-copy">Thank you, but in the second or more index of the list, it takes repeated elements from  <code>Entities list</code>. As you defined each sentence by <code>.split('.')</code> but it should select from both <code>'Entities and Relations'</code> based on its existence in the <code>sentence-list</code>. How to fix that?</span>
<span class="comment-copy">IIUC the update should fix that</span>
<span class="comment-copy">Thank you very much. It's solved by using <code>set</code>.</span>
<span class="comment-copy">I upvoted, thank you again</span>
<span class="comment-copy">last week, the solution you proposed work for me, now it returns an empty list, I don't why?</span>
