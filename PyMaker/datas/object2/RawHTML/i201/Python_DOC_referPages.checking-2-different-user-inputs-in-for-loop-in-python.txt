<div class="post-text" itemprop="text">
<p>I'm new to this and trying to have a loop iterate through a series of numbers until 2 different users say yes to a specific number.</p>
<p>If both users say yes to a number, I'd like the program to print "You both picked [X]!" with X being the number, and for the loop to stop at this point. </p>
<p>If either user says no, however, I'd like the loop to simply continue on to the next number. Why does the below code not work to achieve this?  </p>
<pre><code>for i in range(100):
    user1_response = input("User One: Would you like to pick " + str(i) + "? ")
    user2_response = input("User Two: Would you like to pick " + str(i) + "? ")

    if (user1_response == "N" or "No" or "Reject") or (user2_response == "No" or "N" or "Reject"):
        continue

    else:
        print("")
        print("Both users picked" + str(i) + "!")
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code> if (user1_response == "N" or "No" or "Reject") 
</code></pre>
<p>is being read as </p>
<pre><code> if ([[user1_response == "N"]] or [["No"]] or [["Reject"]]) 
</code></pre>
<p>so <code>user1_response == "N"</code> might return <code>True</code> or <code>False</code>. The <code>No</code> and <code>Reject</code> will both essentially return <code>True</code>.</p>
<p>What you might want is  </p>
<pre><code> if (user1_response in {"N","No","Reject"}) 
</code></pre>
<p>So we created a literal set <code>{"N","No","Reject"}</code>, and we are seeing if <code>user1_response</code> is in that set.</p>
</div>
<div class="post-text" itemprop="text">
<p>The code <code>"No" or "Reject"</code> gets converted to a boolean <code>True</code>. You will need to check if the input equals each individually.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here,  Try this: </p>
<pre><code>#starts our counter
counter = -1
#list of strings that are classified as 'rejections'
rejections = ["no", "N", "n", "Reject"]
#starts our while loops
while counter &lt; 100:
    #adds one to the counter each time the loop executes
    counter = counter + 1

    user1_response = input("User One: Would you like to pick " + str(counter) + "? ")
    user2_response = input("User Two: Would you like to pick " + str(counter) + "? ")
    if user1_response in rejections or user2_response in rejections:
        continue

    else:

        print("")

        print("Both users picked " + str(counter) + "!")

        break
</code></pre>
<p>(yes i know there is probably a better way than to start the counter at -1 but it gets the job done) </p>
<p><em>edit: just fixed it to work with a for instead of a while loop</em></p>
<pre><code>#list of strings that are classified as 'rejections'
rejections = ["no", "N", "n", "Reject"]
#starts our while loops
for i in range(100):

    user1_response = input("User One: Would you like to pick " + str(i) + "? ")
    user2_response = input("User Two: Would you like to pick " + str(i) + "? ")
    if user1_response in rejections or user2_response in rejections:
        continue

    else:

        print("")

        print("Both users picked " + str(i) + "!")

        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I’m pretty new to this as well, but hopefully I can help by adding a perspective close to your skill level </p>
<pre><code>neg= ["n", "no", "reject"]
pos= ["y", "yes", "accept"]
##positive and negative lists to easily check for a     cass unsensitive response

for i in range(100):
    user1= input("User 1 : Would you like to pick "+      str(i)+ "?")
    user2= input("User 2 : Would you like to pick "+ str(i)+ "?")
 ## I suggest making your variable names a little shorter


##Adding .lower() allows users to enter "n' or "N" etc.
    if user1.lower() in neg or user2.lower() in neg:
    continue



    elif user1.lower() in pos and user2.lower() in pos:
            break
print"Both users guessed number "+str(i)
</code></pre>
<p>In my opinion this solution is fairly simple to understand, and very accessible to other new develops, if you were to share what you’ve made with others. </p>
</div>
<div class="post-text" itemprop="text">
<p>The conditional is problematic.</p>
<p>(user1_response == "N" or "No" or "Reject") evaluates to True only when user1_response == "N"</p>
<p>However, if both user1 and user2 type "Y"
(user1_response == "N" or "No" or "Reject") evaluates to "No"
and
(user2_response == "No" or "N" or "Reject") evaluates to "N"</p>
<p>the combined statement (user1_response == "N" or "No" or "Reject") or (user2_response == "No" or "N" or "Reject") evaluates to "No"</p>
<p>and "No" will trigger the "if" portion of the code because "No" is not equivalent to the boolean False. Therefore the "else" portion of the code will not be reached. </p>
<p>This is one possible solution:</p>
<pre><code>if user1_response in ("N","No","Reject") or user2_response in ("No","N","Reject"):
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/15112125/how-to-test-multiple-variables-against-a-value">How to test multiple variables against a value?</a></span>
<span class="comment-copy">Have a look at <a href="https://docs.python.org/3/library/itertools.html#itertools.count" rel="nofollow noreferrer">itertools#count</a>, instead of a while loop.</span>
