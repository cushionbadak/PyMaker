<div class="post-text" itemprop="text">
<p>I am very new to programming and python.  I am trying to use this code:</p>
<pre><code>def show_cards(hand):
    for c in hand:
        b = "[" + c + "]"
        hand.append(b)


a = ["a","b","c","d"]

show_cards(a)

print(a)
</code></pre>
<p>however, whenever I do so, the program just hangs. I thought maybe it was my editor(pycharm) but I've tried running it in just the terminal as well and it's the same result.</p>
<p>actually, I should note, in pycharm I get a keyboard interrupt error that flashes for a second then goes away. I do not get this in the terminal.</p>
<p>I have tried just writing it out in a for loop and forgoing the function, but it's the same issue.</p>
<p>I don't see anything that would cause this and I get no errors, just a hung program.</p>
<p>Any help is appreciated!</p>
<p>Also, I'm sure there is an easier way to write this, so a push in the right direction there would be great as well!!</p>
</div>
<div class="post-text" itemprop="text">
<p><em>list.<a href="https://docs.python.org/2/tutorial/datastructures.html" rel="nofollow noreferrer">append</a>(x)</em> adds the item 'x' to the end of the list. Your code iterates through the list 'hand,' but each time it does so it adds a new item to the end of the list. Thus, the list will never end, so neither will your <code>for</code> loop.</p>
<p>Regarding an easier way to write this, it depends what you're trying to accomplish. If what you want is a list with the same items in square brackets, you might try something like this:</p>
<pre><code>def show_cards(hand):
    new_list = []
    for c in hand:
        b = "[" + c + "]"
        new_list.append(b)
    return(new_list)
</code></pre>
<p>The <em><a href="https://docs.python.org/2.0/ref/return.html" rel="nofollow noreferrer">return</a>()</em> statement allows the function to produce a new list, which you can then assign to  the variable <code>a</code> like this:</p>
<pre><code>a = show_cards(a)
</code></pre>
<p>Alternately, you can change the items in your list <code>a</code> directly, without calling a separate function, by using <em><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a>()</em>. The <code>enumerate()</code> function returns a list of tuples, each of which contains the index of an item in the last (starting with 0, the index of the first item) and its value. So <code>enumerate(a)</code> returns:</p>
<pre><code>[(0, "a"), (1, "b"), (2, "c"), (3, "d"), (4, "e")]
</code></pre>
<p>Which means you can replace each of the items in your list <code>a</code> like this:</p>
<pre><code>for index, value in enumerate(a):
    a[index] = "[" + value + "]"
</code></pre>
<p>And then the value of list <code>a</code> should be:</p>
<pre><code>["[a]", "[b]", "[c]", "[d]", "[e]"]
</code></pre>
<p>If that's not what you wanted, let us know.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are creating an infinite loop by appending to <code>hand</code> within the loop.</p>
<p>Try something like this to print the hand with braquets: </p>
<pre><code>def show_cards(hand):
    for c in hand:
        print("[" + c + "]")
</code></pre>
<p>You can also append to a string and return it if you'd like. </p>
</div>
<span class="comment-copy">You're making <code>hand</code> longer as you iterate through it, so you never get to the end.</span>
<span class="comment-copy">best first post in months!</span>
<span class="comment-copy">Great explanation, thank you.  I'm annoyed at how obvious it is now!</span>
