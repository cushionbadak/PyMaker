<div class="post-text" itemprop="text">
<p>My project structure is like this:</p>
<pre><code>--base
    __init__.py
    mod1.py
    mod2.py
    version.py
</code></pre>
<p>Contents of <code>__init__.py</code>:</p>
<pre><code>from .version import __version__ as version

__version__ = version
</code></pre>
<p>mod2 contains a class called classA.</p>
<p>Inside mod1 I am importing classA like this:</p>
<pre><code>mod1.py:

from base.mod2 import classA
</code></pre>
<p>However I get an error saying "No module named base".</p>
<p>Note: <code>import mod2</code> works. However, I want to use the absolute path approach, but it does not work. Can anyone tell me what I am doing wrong?</p>
<p><strong>EDIT</strong>: I am executing the python script from the <code>base</code> directory. Also, <code>base</code> is in <code>sys.path</code> (just verified).</p>
<p><strong>EDIT 2</strong>: I want to import the class in a similar <a href="https://github.com/user-cont/release-bot/blob/master/release_bot/releasebot.py#L26" rel="nofollow noreferrer">way</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>UPDATE 3</strong>: If you want to import a submodule from within the package directory, which is <code>base</code>, you could use this (omitting the <code>base</code> part in the import) in the file/module <code>mod1.py</code>,</p>
<pre><code>from mod2 import classA
</code></pre>
<p>The above solution also works with <code>run_test_1.py</code> and <code>run_test_2.py</code> scripts. Hope this helps =)</p>
<p><strong>UPDATE 2</strong>: I will demonstrate the same approach by executing a python script from the <code>test</code> directory,</p>
<p>create a script called <code>run_test_1.py</code> under <code>test</code> directory following the same structure as "UPDATE 1", with the following contents:</p>
<pre><code>from base.mod2 import classA
a = classA()
</code></pre>
<p>Also create a second script called <code>run_test_2.py</code> under <code>test</code> directory as well, with the following contents:</p>
<pre><code>from base import mod1
mod1.classA()
</code></pre>
<p>Evaluate both scripts from your terminal like so,</p>
<pre><code>$ cd ~/path/to/test/
$ python run_test_1.py
hello
$ python run_test_2.py
hello
</code></pre>
<p>As demonstrated you should get the output of "hello" on your terminal.</p>
<p><strong>UPDATE 1</strong>: I created the same directory structure for your package like so under a directory called <code>test</code>,</p>
<pre><code>-- test
    --base
        __init__.py
        mod1.py
        mod2.py
        version.py
</code></pre>
<p>Contents of <code>__init__.py</code> is the same as yours.</p>
<pre><code>from .version import __version__ as version
__version__ = version
</code></pre>
<p>Contents of <code>mod1.py</code> is the same as yours,</p>
<pre><code>from base.mod2 import classA
</code></pre>
<p>Contents of <code>mod2.py</code>:</p>
<pre><code>class classA:
    def __init__(self):
        print("hello")
</code></pre>
<p>Then using the <code>python</code> interpreter from the directory <code>test</code>, I tested the following,</p>
<pre><code>&gt;&gt;&gt; from base.mod2 import classA
&gt;&gt;&gt; a = classA()
hello
</code></pre>
<p>If you are sure that <code>base</code> directory is in the <code>sys.path</code> then you could try this,</p>
<p><code>from base import mod2</code></p>
<p>Also I suggest you change <code>base</code> to something more informative for your project.</p>
<p><strong>EDIT</strong>: I also suggest you check the <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">"Packages" documentation</a> on the Python website, which also discusses how to load a submodule.</p>
</div>
<span class="comment-copy">take a look at <a href="https://stackoverflow.com/questions/67631/how-to-import-a-module-given-the-full-path">this</a></span>
<span class="comment-copy">That's very helpful. But I don't want to use the complete path of the file. I want to try to implement something like <a href="https://github.com/user-cont/release-bot/blob/master/release_bot/releasebot.py#L26" rel="nofollow noreferrer">this</a></span>
<span class="comment-copy"><code>from base import .mod2</code> in Python 3</span>
<span class="comment-copy">Thanks for your answer. Looks like you got the question wrong. I have edited the question to make it more clear.</span>
<span class="comment-copy">@JamesBringer Ok I will check it, thanks!</span>
<span class="comment-copy">@James did you try to call it from <code>ipython</code> from the parent directory of <code>base</code> or even from a different directory since it's already in the path?</span>
<span class="comment-copy">I am not using <code>iPython</code> but I am calling it from <code>base</code> directory.</span>
