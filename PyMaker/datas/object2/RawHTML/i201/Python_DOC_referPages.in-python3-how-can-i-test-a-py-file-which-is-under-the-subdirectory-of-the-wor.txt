<div class="post-text" itemprop="text">
<p>Assume that the file hierarchy is like:</p>
<pre><code>|--WORKSPACE
   |--main.py
   |--subdir
   |  --__init__.py
   |  --sub1.py
   |  --sub2.py
</code></pre>
<p>In python2, I'd like to put some testing code below all the module code in submodule script file, and I can just run and check the result. Let the running root path be the WORKSPACE. e.g.
in main.py, I would write</p>
<pre><code>from subdir import sub1
</code></pre>
<p>and in sub1.py:</p>
<pre><code>from sub2 import something

if __name__ == '__main__':
    do some tests
</code></pre>
<p>in python3, I have to write like this:</p>
<pre><code>from subdir.sub2 import something
</code></pre>
<p>when running directory is subdir, it will certainly stop with the import error...So I have to change pwd to the WORKSPACE. I don't think it's an elegant way, is there any other way to run in the subdir as an alternative?</p>
</div>
<div class="post-text" itemprop="text">
<p>It needs no directory name. For example, suppose </p>
<pre><code> ├── main.py
 └── subdir
    ├── __init__.py
    ├── sub1.py
    └── sub2.py
</code></pre>
<p>in main.py</p>
<pre><code>from subdir import sub2
sub2.foo()
</code></pre>
<p>in /subdir/sub1.py</p>
<pre><code>from sub2 import foo

if __name__ == '__main__':
    foo()
</code></pre>
<p>in /subdir/sub2.py</p>
<pre><code>def foo():
    print("foo!")
</code></pre>
<p>Regardless of WORKSPACE wherever I run sub1 would work</p>
</div>
<div class="post-text" itemprop="text">
<p>Just don't do it that way. Organize your package and use relative imports inside it, without mentioning the parent package name.
If in need use subpackages. Lastly (or from the start depending on your mood), create a subpackage named <code>tests</code> containing all your tests. Import what you want to test in your package from there, just like you import from any other place inside your package. Use the module <code>unittest</code> to write <code>unittest.TestCase</code>'s inside tests subpackage.</p>
<p>From the package root execute <code>python -m unittest discover</code> see <a href="https://docs.python.org/3/library/unittest.html#unittest-test-discovery" rel="nofollow noreferrer">here</a> or customize the tests run and output report, see <a href="https://docs.python.org/3/library/unittest.html#loading-and-running-tests" rel="nofollow noreferrer">here</a>. You probably want to study that help page for a while.</p>
<p>Now you can run all your tests at once, albeit there are ways to select only some.</p>
</div>
<div class="post-text" itemprop="text">
<p>i guess you could add</p>
<pre class="lang-py prettyprint-override"><code>import sys
sys.path.append('subdir')

from subdir import sub1
</code></pre>
<p>to your <code>main.py</code>,
this way it'll get all the relative imports in that subfolder for you, no need to call the subfolder each time</p>
<p>and in <code>sub1.py</code> just</p>
<pre class="lang-py prettyprint-override"><code>from sub2 import foo
</code></pre>
</div>
<span class="comment-copy"><code>from sub2 import something</code> works for me in python3.</span>
<span class="comment-copy">All of you are using python3? It's odd, in my python3, I ran it correctly only under WORKSPACE... And what exact version of python are you using, 3.X?</span>
<span class="comment-copy">@Traeyee I don't expect the behavior of <code>import</code> statments to depend on the working directory. Maybe you should write a more detailed description of what you are doing.</span>
<span class="comment-copy">@Goyo Oh, sorry, I had messed it up. My  problem is from .sub2 import foo (pay attention to the dot), it will say No module named '<b>main</b>.foo'; '<b>main</b>' is not a package</span>
<span class="comment-copy">@Traeyee Use <code>from sub2 import foo</code> instead.</span>
<span class="comment-copy">@Goyo It's true, but pycharm cannot recognize clauses of this style so that it cannot     proceed with some smart grammatical assistance. That's where my problem exactly lies</span>
<span class="comment-copy">thx, I learned.</span>
<span class="comment-copy">Well, a smart way</span>
<span class="comment-copy">Pardon my ignorance, what's wrong with this approach? I find it smarter than prepending namefolder. to all imports in that folder...</span>
<span class="comment-copy">@lupodellasleppa There is nothing wrong, but see for example <a href="https://stackoverflow.com/questions/26780255/what-is-the-best-practice-for-importing-modules-absolute-paths-or-relative-path">here</a>, read in particular the comments by Martijn Pieters. Just don't abuse or depend much on that technique.</span>
