<div class="post-text" itemprop="text">
<p>I have some questions in a text file which I want to read one by one. The text file is read questions put in a list. After discussing the first question which is displayed, the program should allow me to trigger for the next. Questions should be coming in random manner.</p>
<p>Now, I have this script which does the job, but each time I have to run the program, as if I am running it for the first time.</p>
<p>Below is my code:</p>
<pre><code>import random

with open('questions.txt', 'r') as f:
text = f.read()

list_of_qns = text.splitlines()

if len(list_of_qns) != 0:
    question = random.choice(list_of_qns)
    print(question)
    list_of_qns.remove(question)
</code></pre>
<p>Please help me to make it run one question at a time without terminating it if the list still have some questions. Please also note that I remove the question which we are done with to prevent it from being displayed more than one in the same run.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>import random

with open('questions.txt', 'r') as f:
    text = f.read()

    list_of_qns = list(filter(None, text.splitlines()))

    while list_of_qns:
        question = random.choice(list_of_qns)
        print(question)
        input()
        list_of_qns.remove(question)
</code></pre>
<p>Press the Enter key to go to the next question.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer">random.shuffle</a> that will shuffle your list of questions in place.</p>
<p>Also, you can use <code>readlines</code> to read your file directly as a list of lines, rather than reading it and splitting it later.</p>
<pre><code>import random

with open('questions.txt', 'r') as f:
    questions = f.readlines()

random.shuffle(questions)

for question in questions:
    print(question)
</code></pre>
<p>If you want to have several sessions of questions, you could define a function:</p>
<pre><code>def ask_all_questions:
    random.shuffle(questions)

    for question in questions:
        print(question)
</code></pre>
<p>Each time you call it, all questions will be asked again, each time in a random order.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use while instead of if:</p>
<pre><code>import random

with open('questions.txt', 'r') as f:
text = f.read()

list_of_qns = text.splitlines()

while len(list_of_qns) != 0:
    question = random.choice(list_of_qns)
    print(question)
    list_of_qns.remove(question)
</code></pre>
<p><strong>While</strong> lets you loop until the condition is <strong>not</strong> met anymore.</p>
<p>For user input, you could use something like:</p>
<pre><code>inp = input()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import random

# reads questions text 
with open('questions.txt', 'r') as f:
text = f.read()

# converts into text format
list_of_qns = text.splitlines()

# length of list_of_questions
number_of_questions = len(list_of_questions)

# create dcitionary to check question printed or not
dict_of_questions_printed = dict()

# for not printed question mark intially as 1 
for question in list_of_qns:
    dict_of_questions_printed[question] = 1

# loop until number_of_questions is not equal to 0 
while number_of_questions != 0:

    # select random question
    question = random.choice(list_of_qns)

    # checks if question is printed or value in dictionary is 0 continues
    if not dict_of_questions_printed[question]: 
        continue

    # else prints question, marks dictionary value of question to 0 and  
    # decrements number of question 
    print(question)
    dict_of_questions_printed[question] = 0
    number_of_question -= 1
    continue
</code></pre>
</div>
<span class="comment-copy">so you want distinct random questions ?</span>
<span class="comment-copy">Yes and in random manner not as arranged in file</span>
<span class="comment-copy">and the program should terminate when all the questions have been displayed</span>
<span class="comment-copy">your idea is fairly decent. The issue is, "do something over and over, until list is empty" should remind you of a functional block to use, instead of <code>if</code>. (ps, think loops.)</span>
<span class="comment-copy">this will mutate the original list</span>
<span class="comment-copy">@David I tried using while loop but this displays all questions at once. I even tried using iter() and next() functions all to no avail</span>
<span class="comment-copy"><code>set_of_q = set(list_of_qns)</code> and then iterate? as <code>list.remove()</code> will remove only one unique item</span>
<span class="comment-copy">@Ruturaj Please note that I have distinct questions in file. But since I am using random module that's why I said I don't want to question to repeat itself.</span>
