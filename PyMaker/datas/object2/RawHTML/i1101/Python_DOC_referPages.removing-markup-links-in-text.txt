<div class="post-text" itemprop="text">
<p>I'm cleaning some text from Reddit.  When you include a link in a Reddit self-text, you do so like this:
<code>[the text you read](https://website.com/to/go/to)</code>.  I'd like to use regex to remove the hyperlink (e.g. <code>https://website.com/to/go/to</code>) but keep <code>the text you read</code>.</p>
<p>Here is another example:</p>
<p><code>[the podcast list](https://www.reddit.com/r/datascience/wiki/podcasts)</code></p>
<p>I'd like to keep: <code>the podcast list</code>.</p>
<p>How can I do this with Python's <code>re</code> library? What is the appropriate regex?</p>
</div>
<div class="post-text" itemprop="text">
<p>I have created an initial attempt at your requested regex:</p>
<pre><code>(?&lt;=\[.+\])\(.+\)
</code></pre>
<p>The first part <code>(?&lt;=...)</code> is a look behind, which means it looks for it but does not match it. You can use this regex along with <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">re's method sub</a>. You can also see the meanings of all the regex symbols <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">here</a>.</p>
<p>You can extend the above regex to look for only things that have weblinks in the brackets, like so:</p>
<pre><code>(?&lt;=\[.+\])\(https?:\/\/.+\)
</code></pre>
<p>The problem with this is that if the link they provide is not started with an http or https it will fail.</p>
<p>After this you will need to remove the square brackets, maybe just removing all square brackets works fine for you.</p>
<p><hr/> <strong>Edit 1:</strong></p>
<p>Valentino pointed out that substitute accepts capturing groups, which lets you capture the text and substitute the text back in using the following regex:</p>
<pre><code>\[(.+)\]\(.+\)
</code></pre>
<p>You can then substitute the first captured group (in the square brackets) back in using:</p>
<pre><code>re.sub(r"\[(.+)\]\(.+\)", r"\1", original_text)
</code></pre>
<p>If you want to look at the regex in more detail (if you're new to regex or want to learn what they mean) I would recommend an <a href="https://regexr.com/" rel="nofollow noreferrer">online regex interpreter</a>, they explain what each symbol does and it makes it much easier to read (especially when there are lots of escaped symbols like there are here).
</p>
</div>
<span class="comment-copy">Please see this answer to a similar question about parsing html with regex: <a href="https://stackoverflow.com/a/1732454/3434388">stackoverflow.com/a/1732454/3434388</a></span>
<span class="comment-copy">I know it has a decent learning curve, but check out <a href="https://www.crummy.com/software/BeautifulSoup/" rel="nofollow noreferrer">crummy.com/software/BeautifulSoup</a> for parsing html</span>
<span class="comment-copy">Also, using re.sub() the lookbehind can be avoided. <code>re.sub(r"\[(.+)\]\(.+\)", r"\1", original_text)</code> this will substitute the contents of the square bracket to the whole match. Just another way to it similar to yours.</span>
<span class="comment-copy">Thanks @Valentino, added!</span>
