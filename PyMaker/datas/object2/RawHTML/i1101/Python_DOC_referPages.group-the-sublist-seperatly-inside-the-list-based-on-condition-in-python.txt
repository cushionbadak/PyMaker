<div class="post-text" itemprop="text">
<p>i have sublist </p>
<pre><code>list=[['RD-2','a',120],['RD-2','b',125],['RD-2','c',127],['RD-3','a',120],['RD-3','b',140],['RD-5','a',120]]
</code></pre>
<p>i want to make seperate sublists in the list based on 1st element of every sublist if its same. The output should be like below</p>
<pre><code>finallist=[[['RD-2','a',120],['RD-2','b',125],['RD-2','c',127]],[['RD-3','a',120],['RD-3','b',140]],['RD-5','a',120]]
</code></pre>
<p>i tried in forloop using if condition but its not working.
help me</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>itertools.groupby</code></p>
<p><strong>Ex:</strong></p>
<pre><code>from itertools import groupby

lst=[['RD-2','a',120],['RD-2','b',125],['RD-2','c',127],['RD-3','a',120],['RD-3','b',140],['RD-5','a',120]]

res = [list(v) for i, v in groupby(lst, lambda x: x[0])]   #GroupBy first element. 
print(res)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[[['RD-2', 'a', 120], ['RD-2', 'b', 125], ['RD-2', 'c', 127]], [['RD-3', 'a', 120], ['RD-3', 'b', 140]], [['RD-5', 'a', 120]]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With no requirement for odering, you can use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a>:</p>
<pre><code>from collections import defaultdict

L = [['RD-2','a',120],['RD-2','b',125],['RD-2','c',127],
     ['RD-3','a',120],['RD-3','b',140],['RD-5','a',120]]

dd = defaultdict(list)

for key, value1, value2 in L:
    dd[key].append([value1, value2])

## Python 3.x, use * unpacking
# for key, *values in L:
#     dd[key].append(values)

res = [[[key, value] for value in values] for key, values in dd.items()]

print(res)

# [[['RD-2', ['a', 120]], ['RD-2', ['b', 125]], ['RD-2', ['c', 127]]],
#  [['RD-3', ['a', 120]], ['RD-3', ['b', 140]]],
#  [['RD-5', ['a', 120]]]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the groups are always contiguous you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer">groupby</a>, if not you can sort the sub-lists based on the first element and then group:</p>
<pre><code>from itertools import groupby
from operator import itemgetter

lst=[['RD-2','a',120],['RD-2','b',125],['RD-2','c',127],['RD-3','a',120],['RD-3','b',140],['RD-5','a',120]]
result = [list(v) for _, v in groupby(lst, key=itemgetter(0))]

print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[[['RD-2', 'a', 120], ['RD-2', 'b', 125], ['RD-2', 'c', 127]], [['RD-3', 'a', 120], ['RD-3', 'b', 140]], [['RD-5', 'a', 120]]]
</code></pre>
</div>
<span class="comment-copy">It's great that you already tried something! If you can show us what you tried, and the error that you got, we can better understand and help you</span>
<span class="comment-copy">thanks it working as expected. thank you so much.</span>
<span class="comment-copy">You are welcome :)</span>
<span class="comment-copy">When you have time. please explain res statement, how did you write the logic. because i was trying inside forloop by using if condition. can you split the "res" to code without lambda. Really thanks for the help</span>
