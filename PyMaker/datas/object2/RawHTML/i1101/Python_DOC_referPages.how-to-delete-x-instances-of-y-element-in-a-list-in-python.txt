<div class="post-text" itemprop="text">
<p>I have a list, and in that list, I have a lot of duplicated values. This is the format of the list: </p>
<p><a href="https://imgur.com/a/tj2ZwxG" rel="nofollow noreferrer">https://imgur.com/a/tj2ZwxG</a></p>
<p>So I have some fields, in this order: "User_ID" "Movie_ID" "Rating" "Time"</p>
<p>What I want to do is, remove, from the 5th occurrence of "User_ID" untill I find a differente "User_ID". For example:</p>
<p>Let's suppose that I have a list with only "User_ID" (from 1 - 196) like this:</p>
<p>1, 1, 1 ,1 ,1, 1, 2 ,2 , 2, 2, 2, 2, 2...</p>
<p>In this case, I have six occurrences of number 1 and seven occurrences of number 2.</p>
<p>So, I will remove, from 1, after the fifth occurrence, until I find the first "2". And the same thing for 2: I will start removing after its fifth occurrence, untill I find a new number, which will be "3", and so on.</p>
<p>So, I will get a new list, like this: 1, 1, 1, 1, 1, 2, 2, 2, 2, 2
containing only 5 instances of each different element.</p>
<p>I know I can acess all the "User_ID" field like this: <code>list[index]["User_ID"]</code></p>
<p>is there a function that does that? Or if there isn't, could someone help me to create one?</p>
<p>Thanks for the help!</p>
<p>What I was trying to do was something like this:</p>
<pre><code>a = 0
b = 1
start = 0
position = 0

while(something that I don't know):
    while(list[a]['User_ID'] == list[b]['User_ID']): #iterate through the list, and I only advance to the next elements if the previous and next elements are the same
        a+=1
        b+=1
        position+=1 
    if(list[a]['User_ID'] != list[b]['User_ID']): #when I finally find a different element
        del new_list[start:start+position] #I delete from the start position, which is five untill the position before the different element.
        a+=1
        b+=1
        start+=5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your input seems to be a <code>list</code> of <code>dict</code> instances. You can use various <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer"><code>itertools</code></a> to only keep 5 dicts with same <code>User_ID</code> key in a space and time efficient manner:</p>
<pre><code>from itertools import chain, groupby, islice
from operator import itemgetter

lst = [{'User_ID': 1, ...}, {'User_ID': 1, ...}, ..., {'User_ID': 2, ...}, ...]    

key = itemgetter('User_ID')
only5 = list(chain.from_iterable(islice(g, 5) for _, g in groupby(lst, key=key)))
</code></pre>
<p>This groups the list into chunks with the same <code>User_ID</code> and then takes the first <code>5</code> from each chunk into the new list.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>list=[1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3]
unique=set(list)

for x in unique:
   y=list.count(x)
   while y&gt;5:
       list.remove(x)
       y-=1

print(list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I am mostly confused by your list of <code>[1,1,1,1,1]</code> etc, it looks like you have a list of dicts or objects.</p>
<p>If you care about every field you can probably just make it a set then back into a list: 
<code>my_list = list(set(my_list))</code></p>
<p>if they are objects, you can override <code>__eq__(self,other)</code> and <code>__hash__(self)</code> and I think you will be able to use the same list/set/list transform to remove duplicates.</p>
</div>
<span class="comment-copy">Post all relevant data here directly as text. Also, what have you tried? What specifically do you need help with?</span>
<span class="comment-copy">Is this list sorted by user_id and if not, do you want only adjacent duplicates beyond 5 removed or any duplicates beyond 5?</span>
<span class="comment-copy">It is sorted by user_id. I would like to remove all duplicates beyond 5 occurences</span>
<span class="comment-copy">That was exacly what I wanted, thanks! As you said, it was indeed a list of dict instances. But I didn't understand exactly how this code works. For example, in this line <code>only5 = list(chain.from_iterable(islice(g, 5) for _, g in groupby(lst, key=key)))</code> There is this <code>for_,g in groupy (lst,key=key)</code>, how does that work?</span>
<span class="comment-copy">I would have to refer you to the docs that I linked. You should also just play around with all these functions on the interactive interpreter to see what they are actually doing ;) however, <code>groupby</code> returns an iterator over pairs <code>(k, g)</code> where <code>k</code> is the result of the <code>key</code> function (applied to the list elements) and <code>g</code> is an iterator over the group of elements with the same key results. Since this line only makes use of the groups, the keys are "discarded" to the "anonymous" <code>_</code> variable in the generator expression.</span>
