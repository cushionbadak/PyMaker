<div class="post-text" itemprop="text">
<p>I am trying to write a Python class method that execute for a fixed amount of time and modify a class instance variable during execution if needed.
For my project, I need <code>read_key</code> method in the following code to run exactly 5 seconds (no more no less). </p>
<p>During this 5 seconds, I use <code>getch.getch()</code> to try reading 
one character from the keyboard and assign it to instance variable <code>self.key</code>. Because <code>getch.getch()</code> will block the execution of its process until a keystroke is detected. If the user doesn't press any key in this 5 seconds window, let <code>self.key</code> be <code>None</code>.</p>
<p>So far, I can only think of using <code>multiprocessing</code> and its <code>join()</code> to realize this 5 seconds "timer" effect. </p>
<pre><code>import getch
import multiprocessing

class A:

    def __init__(self):
        self.key = None
        self.read_key()

        # to check whether instance variable is successfully modified
        print(self.key)     

    def read_key(self):
        def scan():
            self.key = None
            while True:     
                key = getch.getch()
                if key == 'a':
                    self.key = key
                    print('updated self key to ' + str(self.key))
                else:
                    print('invalid entry ' + str(key))
        p = multiprocessing.Process(target=scan)
        p.start()
        p.join(5)
        p.terminate()


if __name__ == '__main__':
    A()
</code></pre>
<p>Running the above code, it does take 5 seconds to finish. If user presses <kbd>a</kbd> key after program is launched, I expect the print out to be:</p>
<pre><code>'updated self key to a'
'a'
</code></pre>
<p>What I actually see:</p>
<pre><code>'updated self key to a'
None
</code></pre>
<p>Apparently, even though  <code>self.key = key</code> is executed, the actual instance variable <code>self.key</code>. Any idea why and how to modify <code>self.key</code> if the user presses the <kbd>a</kbd> key?</p>
</div>
<div class="post-text" itemprop="text">
<p>I managed to come up with the following solution using <code>multiprocessing</code>'s shared variable. Using a shared variable <code>detected</code>, I am able to detect whether user has pressed any of the special keys I would like to detect. Then I manually set the class instance variable at the end of the method to achieve the effect of having <code>self.key</code> attribute set in exactly 5 seconds. </p>
<p><a href="https://docs.python.org/2/library/multiprocessing.html#multiprocessing.Value" rel="nofollow noreferrer">https://docs.python.org/2/library/multiprocessing.html#multiprocessing.Value</a></p>
<pre><code>def read_key(self):
    def scan(detected):
        while True:
            key = getch.getch()
            if key == 'a':
                detected.value = b'a'
            elif key == 'd':
                detected.value = b'd'
            elif key == 'w':
                detected.value = b'w'
            elif key == 's':
                detected.value = b's'

    detected = Value('c', b'z')
    p = Process(target=scan, args=(detected,))
    p.start()
    p.join(self.time_interval)
    p.terminate()
    byte_str_map = {b'a': 'a',
                    b's': 's',
                    b'w': 'w',
                    b'd': 'd'}
    self.key = byte_str_map.get(detected.value)
</code></pre>
</div>
<span class="comment-copy">You cannot share information like that between processes. See the <a href="https://docs.python.org/3/library/multiprocessing.html#sharing-state-between-processes" rel="nofollow noreferrer">Python docs</a> about this. For your specific problem see <a href="https://stackoverflow.com/questions/1335507/keyboard-input-with-timeout-in-python">Keyboard input with timeout in Python</a>.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/11055303/python-multiprocessing-global-variable-updates-not-returned-to-parent">Python multiprocessing global variable updates not returned to parent</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/32666559/cannot-change-class-variables-with-multiprocessing-process-object-in-python3">Cannot change class variables with multiprocessing.Process object in Python3</a></span>
<span class="comment-copy">thanks Jayjayyy, I managed to solve the issue using a workaround. Solution posted below.</span>
<span class="comment-copy">I'm glad to hear that you figured it out :-) Out of curiosity: why are you using Python 2? Or did you just link the wrong docs?</span>
