<div class="post-text" itemprop="text">
<p>I am trying to write a regular expression which returns a part of substring which is after a string. For example: I want to get part of substring along with spaces which resides after "15/08/2017".</p>
<pre><code>a='''S
LINC             SHORT LEGAL                                   TITLE NUMBER
0037 471 661     1720278;16;21                                 172 211 342

LEGAL DESCRIPTION
PLAN 1720278  
BLOCK 16  
LOT 21  
EXCEPTING THEREOUT ALL MINES AND MINERALS  

ESTATE: FEE SIMPLE  
ATS REFERENCE: 4;24;54;2;SW

MUNICIPALITY: CITY OF EDMONTON

REFERENCE NUMBER: 172 023 641 +71

---------------------------------------------------------------------------- 
----
             REGISTERED OWNER(S)
REGISTRATION    DATE(DMY)  DOCUMENT TYPE      VALUE           CONSIDERATION
--------------------------------------------------------------------------- 
-- 
---

172 211 342    15/08/2017  AFFIDAVIT OF                       CASH &amp; MTGE'''
</code></pre>
<p>Is there a way to get <code>'AFFIDAVIT OF'</code> and <code>'CASH &amp; MTGE'</code> as separate strings?</p>
<p>Here is the expression I have pieced together so far:</p>
<pre><code>doc = (a.split('15/08/2017', 1)[1]).strip()
'AFFIDAVIT OF                       CASH &amp; MTGE'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not a regex based solution. But does the trick. </p>
<pre><code>a='''S
LINC             SHORT LEGAL                                   TITLE NUMBER
0037 471 661     1720278;16;21                                 172 211 342

LEGAL DESCRIPTION
PLAN 1720278  
BLOCK 16  
LOT 21  
EXCEPTING THEREOUT ALL MINES AND MINERALS  

ESTATE: FEE SIMPLE  
ATS REFERENCE: 4;24;54;2;SW

MUNICIPALITY: CITY OF EDMONTON

REFERENCE NUMBER: 172 023 641 +71

---------------------------------------------------------------------------- 
----
            REGISTERED OWNER(S)
REGISTRATION    DATE(DMY)  DOCUMENT TYPE      VALUE           CONSIDERATION
--------------------------------------------------------------------------- 
-- 
---

172 211 342    15/08/2017  AFFIDAVIT OF                       CASH &amp; MTGE'''

doc = (a.split('15/08/2017', 1)[1]).strip() 
# used split with two white spaces instead of one to get the desired result
print(doc.split("  ")[0].strip()) # outputs AFFIDAVIT OF
print(doc.split("  ")[-1].strip()) # outputs CASH &amp; MTGE
</code></pre>
<p>Hope it helps. </p>
</div>
<div class="post-text" itemprop="text">
<p><strong><em>re</em> based code snippet</strong></p>
<pre><code>import re
foo = '''S
LINC             SHORT LEGAL                                   TITLE NUMBER
0037 471 661     1720278;16;21                                 172 211 342

LEGAL DESCRIPTION
PLAN 1720278
BLOCK 16
LOT 21
EXCEPTING THEREOUT ALL MINES AND MINERALS

ESTATE: FEE SIMPLE
ATS REFERENCE: 4;24;54;2;SW

MUNICIPALITY: CITY OF EDMONTON

REFERENCE NUMBER: 172 023 641 +71

----------------------------------------------------------------------------
----
             REGISTERED OWNER(S)
REGISTRATION    DATE(DMY)  DOCUMENT TYPE      VALUE           CONSIDERATION
---------------------------------------------------------------------------
--
---

172 211 342    15/08/2017  AFFIDAVIT OF                       CASH &amp; MTGE'''

pattern = '.*\d{2}/\d{2}/\d{4}\s+(\w+\s+\w+)\s+(\w+\s+.*\s+\w+)'
result = re.findall(pattern, foo, re.MULTILINE)
print "1st match: ", result[0][0]
print "2nd match: ", result[0][1]
</code></pre>
<p><strong>Output</strong></p>
<pre><code>1st match:  AFFIDAVIT OF
2nd match:  CASH &amp; MTGE
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>We can try using <code>re.findall</code> with the following pattern:</p>
<pre><code>PHASED OF ((?!\bCONDOMINIUM PLAN).)*)(?=CONDOMINIUM PLAN)
</code></pre>
<p>Searching in multiline and DOTALL mode, the above pattern will match everything occurring between <code>PHASED OF</code> until, but not including, <code>CONDOMINIUM PLAN</code>.</p>
<pre><code>input = "182 246 612    01/10/2018  PHASED OF                           CASH &amp; MTGE\n        CONDOMINIUM PLAN"
result = re.findall(r'PHASED OF (((?!\bCONDOMINIUM PLAN).)*)(?=CONDOMINIUM PLAN)', input, re.DOTALL|re.MULTILINE)
output = result[0][0].strip()
print(output)

CASH &amp; MTGE
</code></pre>
<p>Note that I also strip off whitespace from the match.  We might be able to modify the regex pattern to do this, but in a general solution, maybe you want to keep some of the whitespace, in certain cases.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://xkcd.com/208/" rel="nofollow noreferrer">Why regular expressions?</a> </p>
<p>It looks like you know the exact delimiting string, just <code>str.split()</code> by it and get the first part:</p>
<pre><code>In [1]: a='172 211 342    15/08/2017  TRANSFER OF LAND   $610,000        CASH &amp; MTGE'

In [2]: a.split("15/08/2017", 1)[0]
Out[2]: '172 211 342    '
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would avoid using regex here, because the only meaningful separation between the logical terms appears to be 2 or more spaces.  Individual terms, including the one you want to match, may also have spaces.  So, I recommend doing a regex split on the input using <code>\s{2,}</code> as the pattern.  These will yield a list containing all the terms.  Then, we can just walk down the list once, and when we find the forward looking term, we can return the previous term in the list.</p>
<pre><code>import re
a = "172 211 342    15/08/2017  TRANSFER OF LAND   $610,000        CASH &amp; MTGE"
parts = re.compile("\s{2,}").split(a)
print(parts)

for i in range(1, len(parts)):
    if (parts[i] == "15/08/2017"):
        print(parts[i-1])

['172 211 342', '15/08/2017', 'TRANSFER OF LAND', '$610,000', 'CASH &amp; MTGE']
172 211 342
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">positive lookbehind assertion*</a>*</p>
<pre><code> m=re.search('(?&lt;=15/08/2017).*', a)
 m.group(0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to return the right group:</p>
<pre><code>re.match("(.*?)15/08/2017",a).group(1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You nede to use group(1)</p>
<pre><code>import re
re.match("(.*?)15/08/2017",a).group(1)
</code></pre>
<p>Output</p>
<pre><code>'172 211 342    '
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Building on your expression, this is what I believe you need:</p>
<pre><code>import re

a='172 211 342    15/08/2017  TRANSFER OF LAND   $610,000        CASH &amp; MTGE'
re.match("(.*?)(\w+/)",a).group(1)
</code></pre>
<p>Output:</p>
<pre><code>'172 211 342    '
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this by using <code>group(1)</code></p>
<pre><code>re.match("(.*?)15/08/2017",a).group(1)
</code></pre>
<p><strong>UPDATE</strong></p>
<p>For updated string you can use <code>.search</code> instead of <code>.match</code></p>
<pre><code>re.search("(.*?)15\/08\/2017",a).group(1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is that your string is formatted the way it is.
The line you are looking for is</p>
<p><code>182 246 612    01/10/2018  PHASED OF                           CASH &amp; MTGE</code></p>
<p>And then you are looking for what ever comes after 'PHASED OF' and some spaces.</p>
<p>You want to search for</p>
<blockquote>
<p>(?&lt;=PHASED OF)\s*(?P.*?)\n</p>
</blockquote>
<p>in your string. This will return a match object containing the value you are looking for in the group <code>value</code>.</p>
<pre><code>m = re.search(r'(?&lt;=PHASED OF)\s*(?P&lt;your_text&gt;.*?)\n', a)
your_desired_text = m.group('your_text')
</code></pre>
<p>Also: There are many good online regex testers to fiddle around with your regexes.
And only after finishing up the regex just copy and paste it into python.</p>
<p>I use this one: <a href="https://regex101.com/" rel="nofollow noreferrer">https://regex101.com/</a></p>
</div>
<span class="comment-copy">I have edited with the actual input string.</span>
<span class="comment-copy">Okay anyway to do this using regex?</span>
<span class="comment-copy">Why do you want to do this with regex? Are you willing to accept any other solution?</span>
<span class="comment-copy">Yes if there is a better way other than regex</span>
<span class="comment-copy">See it in action <a href="https://repl.it/repls/JumpyVioletDifferences" rel="nofollow noreferrer">here</a>.</span>
<span class="comment-copy">The thing is the string below DOCUMENT TYPE may be multiline and need not be necessarily a multiline. If it is multiline, it should consider it.</span>
<span class="comment-copy">My answer covers a multiline situation.  If you see a flaw in my answer, then state exactly what it is.</span>
<span class="comment-copy">I cant get you what this does result = re.findall(r'PHASED OF (((?!\bCONDOMINIUM PLAN).)*)(?=CONDOMINIUM PLAN)', input, re.DOTALL|re.MULTILINE). Cant we give 'PHASED OF CONDOMINIUM PLAN' as single word ?</span>
<span class="comment-copy">No, we can't, hence I initially commented under your question that there is no answer.  You need to match across lines.</span>
<span class="comment-copy">Okay fine what will be the modification that needs to be done if there is no multinline word after date?</span>
<span class="comment-copy">It wont work for the input string which i have edited now</span>
<span class="comment-copy">@Farook in this state it won't, right. You could though adjust the solution and split it on a newline first, but in that case, regex would be able to do it in one go.</span>
<span class="comment-copy">This will give incorrect results if there are more than one term before <code>15/08/2017</code>.</span>
<span class="comment-copy">I have edited my input string. It didn't work for the string which is edited now</span>
<span class="comment-copy">This will fail completely if the desired term is anything other than the first term.</span>
<span class="comment-copy">I am not searching for what ever comes after 'PHASED OF' and some spaces. Instead i am seraching for the string after the entire word below the DPCUMENT TYPE (i.e) 'PHASED OF CONDOMINIUM PLAN'</span>
<span class="comment-copy">"I need to get the string after the word 'PHASED OF CONDOMINIUM PLAN' which should returns 'CASH &amp; MTGE' I have tried using the below expression". Where did i go wrong?</span>
