<div class="post-text" itemprop="text">
<p>I want to write some data into a csv file. But nothing was written except the header, which is words and number. What's wrong with my code?</p>
<p>Here is my code.</p>
<pre><code>import os
import csv

csvFile = open('Trail.csv','w+')
fieldname = ['words', 'number']
trialDict = {'apple':1, 'banana':4, 'cat':6}
writer = csv.DictWriter(csvFile, fieldnames=fieldname, extrasaction='ignore')
writer.writeheader()
writer.writerow(trialDict)
csvFile.close()
</code></pre>
<p>I get want you mean and I modify my code. But there is still a problem.</p>
<pre><code>import os
import csv

csvFile = open('Trail.csv','w+')
fieldname = ['words', 'number']
trialDict = {'words':'apple', 'number':5, 'words':'banana','number':6, 'words':'cat', 'number':5}
writer = csv.DictWriter(csvFile, fieldnames=fieldname, extrasaction='ignore') writer.writeheader()
writer.writerow(trialDict)
csvFile.close()
</code></pre>
<p>The output becomes:</p>
<pre><code>word numbers
cat   5
</code></pre>
<p>How can I write everything into the file? I tried the <code>writerows</code> function, but it returned the error:</p>
<pre class="lang-none prettyprint-override"><code>str object has no attribute get()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The real issue here is that you are overwriting your keys with TrialDict and it is only taking the last two instances of <code>words</code> and <code>number</code>. </p>
<pre><code>&gt;&gt;&gt; trialDict = {'words':'apple', 'number':5, 'words':'banana','number':6, 'words':'cat', 'number':5}
&gt;&gt;&gt; trialDict
{'words': 'cat', 'number': 5}
</code></pre>
<p>What you want to do is have a dictionary of count by word altogether and just write the key,value pairs :</p>
<pre><code>fieldnames = ['words', 'number']
trialDict = {'apple': 5, 'banana': 6, 'cat': 5}

with open("Trial.csv", "w+") as f:
    f.write(','.join(fieldnames) + '\n')
    for word, number in trialDict.items():
        f.write(word + ',' + str(number) + '\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Field names are headers, you should include keys in your dict corresponding to your headers, if this is your requirement, this code should work: </p>
<pre><code>import os 
import csv

csvFile = open('Trail.csv','w+')
fieldname = ['apple', 'banana', 'cat']
trialDict = {'apple':1, 'banana':4, 'cat':6}
writer = csv.DictWriter(csvFile, fieldnames=fieldname, extrasaction='ignore')
writer.writeheader()
writer.writerow(trialDict)

csvFile.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need <code>DictWriter</code> for this.  The standard <code>writer</code> works.  Also note the <code>newline=''</code> parameter when opening the file as per <a href="https://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow noreferrer">csv documentation</a>:</p>
<pre><code>import csv

fieldname = ['words', 'number']
trialDict = {'apple':1, 'banana':4, 'cat':6}

with open('Trail.csv','w',newline='') as csvFile:
    writer = csv.writer(csvFile)
    writer.writerow(fieldname)
    for key,value in trialDict.items():
        writer.writerow([key,value])
</code></pre>
<p>Output:</p>
<pre><code>words,number
apple,1
banana,4
cat,6
</code></pre>
<p>To use <code>DictWriter</code> you need a list of dictionaries that have keys that are the header values:</p>
<pre><code>import csv

fieldname = ['words', 'number']
trialList = [{'words':'apple','number':1},
             {'words':'banana','number':4},
             {'words':'cat','number':6}]

with open('Trail.csv','w',newline='') as csvFile:
    writer = csv.DictWriter(csvFile,fieldnames=fieldname)
    writer.writeheader()
    writer.writerows(trialList)
</code></pre>
</div>
<span class="comment-copy">What were you expecting that to do? None of the keys in <code>trialDict</code> is <code>'words'</code> or <code>'number'</code>.</span>
<span class="comment-copy">Did you read the <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer">docs</a>?</span>
<span class="comment-copy">I think OP wanted the header/fieldnames to be <code>word</code> and <code>number</code>. This solution does not get you that.</span>
