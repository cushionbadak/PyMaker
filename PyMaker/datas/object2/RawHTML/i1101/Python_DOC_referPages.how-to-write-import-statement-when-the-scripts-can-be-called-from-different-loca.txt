<div class="post-text" itemprop="text">
<p>Consider the following directory structure:</p>
<pre><code>project/ 
    scripts/
        a1.py
        a2.py
    start.py
</code></pre>
<p><code>start.py</code> depends on <code>a1.py</code> and <code>a1.py</code> in turn uses a function called <code>some_func</code> which is present in <code>a2.py</code>. Moreover, <code>a1.py</code> is also a standalone script and can be called independently. Now this gives rise two cases:</p>
<p><strong>Case 1</strong>: (<em>Standalone script</em>)
I would import some_func as follows</p>
<p><code>from a2 import some_func</code></p>
<p><strong>Case 2</strong>: (<em>Called from <code>start.py</code></em>)</p>
<p><code>from scripts.a2 import some_func</code></p>
<p><strong>My Question</strong>: What is the pythonic way of combining the two use cases?</p>
<p><em>Possible Solution?</em>: Is this recommended or not?</p>
<pre><code>if __name__ == "__main__":
    from a2 import some_func
elif __name__ == "start":
    from scripts.a2 import some_func
</code></pre>
<p>Note: I am using python 3.x</p>
</div>
<div class="post-text" itemprop="text">
<p>Pythonic way is create a package from your code and then use intra-package references in your code: <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/modules.html</a></p>
<pre><code>from . import some_func  # from scripts in same folder
from .scripts import some_func  # from start.py
</code></pre>
<p>Also you will be able to use absolute paths (from package name) after packaging your solution and installing it, like:</p>
<pre><code># this will work from anywhere
from mypackage.scripts import some_func
</code></pre>
</div>
<span class="comment-copy">What is the problem with calling <code>from a2 import some_func</code> in <code>a1</code> and <code>from a1 import some_func</code> in <code>start</code>?</span>
<span class="comment-copy">You can use relative imports in a1.py, more about relative imports <a href="https://stackoverflow.com/questions/14132789/relative-imports-for-the-billionth-time">here</a></span>
