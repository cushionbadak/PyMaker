<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3477502/pythonic-method-to-parse-a-string-of-comma-separated-integers-into-a-list-of-i">“pythonic” method to parse a string of comma-separated integers into a list of integers?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/4071396/split-by-comma-and-strip-whitespace-in-python">Split by comma and strip whitespace in Python</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<pre><code>l='2,3,4,5,6'
</code></pre>
<p>expecting: </p>
<pre><code>[2,3,4,5,6]
</code></pre>
<p>In python how can I convert into the above format</p>
<p>the first one is a string of some numbers I am expecting a list of same numbers.</p>
</div>
<div class="post-text" itemprop="text">
<p>As simple as this:</p>
<pre><code>print [int(s) for s in l.split(',')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>l='2,3,4,5,6'

result = [int(i) for i in l.split(',')]
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[2, 3, 4, 5, 6]
</code></pre>
<p>The above is equivalent to the following <code>for</code> loop:</p>
<pre><code>result = []
for i in l.split(','):
    result.append(i)
</code></pre>
<p>As an alternative you could use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer">map</a>:</p>
<pre><code>l = '2,3,4,5,6'
result = list(map(int, l.split(',')))
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[2, 3, 4, 5, 6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this simple and direct way with a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>.</p>
<pre><code>list_of_numbers = [int(i) for i in l.split(",")]
</code></pre>
<p>Alternatively, you can fix up the string so it becomes a "list of strings", and use <code>literal_eval</code>:</p>
<pre><code>import ast
s = "[" + l + "]'
list_of_numbers = ast.literal_eval(s)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use <a href="http://book.pythontips.com/en/latest/map_filter.html#map" rel="nofollow noreferrer">map</a> and <a href="https://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow noreferrer">split</a> to convert.</p>
<pre><code>map(int, l.split(','))
</code></pre>
<p>Example:</p>
<pre><code>l='2,3,4,5,6'
print(map(int, l.split(',')))
</code></pre>
<p>output</p>
<pre><code>[2, 3, 4, 5, 6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use map like this:</p>
<pre><code>list(map(int,[i for i in l if i.isdigit()]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given: <code>l='2,3,4,5,6'</code></p>
<p>Lazy way: <code>output=eval('['+l+']')</code></p>
<p>Lazy way with Python 3.6+ (using fStrings): <code>output=eval(f"[{l}]")</code></p>
</div>
<span class="comment-copy">try this l.split(“,”)</span>
<span class="comment-copy">You have a typo: <code>"]'</code> =&gt; <code>"]"</code></span>
