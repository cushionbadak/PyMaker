<div class="post-text" itemprop="text">
<p>I'm a python newbie, and writing a small app which will require logging. I want the app to be portable, allowing other admins to configure its behaviour - particularly logging. The characteristics of the <a href="https://docs.python.org/2/library/logging.html" rel="nofollow noreferrer">logging lib</a> seem to be controlled by the application code rather than the deployment/environment.</p>
<p>Java has <a href="https://en.wikipedia.org/wiki/Log4j" rel="nofollow noreferrer">log4j</a>, PHP has <a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md" rel="nofollow noreferrer">PSR-3</a>. Is there something equivalent for Python which would allow the system owner to inject their own logging capability?</p>
</div>
<div class="post-text" itemprop="text">
<p>The best way, in my opinion, to achieve good flexibility, allowing admins to configure your logging settings is to use this config in a <code>ini</code> file:</p>
<pre><code>[loggers]
keys=root

[handlers]
keys=stream_handler

[formatters]
keys=formatter

[logger_root]
level=DEBUG
handlers=stream_handler

[handler_stream_handler]
class=StreamHandler
level=DEBUG
formatter=formatter
args=(sys.stderr,)

[formatter_formatter]
format=%(asctime)s %(name)-12s %(levelname)-8s %(message)s
</code></pre>
<p>After that you can read this configuration in your app:</p>
<pre><code>import logging
from logging.config import fileConfig

fileConfig('logging_config.ini')
logger = logging.getLogger()
logger.debug('your debug message')
</code></pre>
<p>You can check more <a href="https://docs.python-guide.org/writing/logging/#example-configuration-via-an-ini-file" rel="nofollow noreferrer">here</a>.</p>
</div>
<span class="comment-copy">don't think it's what you're after, but did you see: <a href="https://docs.python.org/3/library/logging.config.html#logging.config.fileConfig" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">Currently I'm using a ini file to handle stderr / syslog / email, although your solution is a lot more compact</span>
