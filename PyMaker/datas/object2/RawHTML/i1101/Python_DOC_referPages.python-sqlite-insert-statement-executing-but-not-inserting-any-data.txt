<div class="post-text" itemprop="text">
<p>Dear Stackoverflow community,</p>
<p>i have the following problem. I am using Python 3.5
and SQLite3 package and I'm trying to insert 20 cities into the city table of my database. The problem ist that after executing the code there is no error message but the entries won't show up in the database.</p>
<p><strong>My Code looks like this</strong></p>
<p><em>Database.py</em>: this file encapsulates the database and provides the functionality to easily execute queries.</p>
<pre><code>#!/usr/bin/env python
# -*- coding: utf-8 -*-
import sqlite3
from sqlite3 import Error

class Database:
    database_connection = 0;

    def __init__(self, path_to_database):
        self.__try_connect__(path_to_database)

    def __try_connect__ (self, path_to_database):

        """ create a database connection to the SQLite database
        specified by the db_file
        :param db_file: database file
        :return: Connection object or None
        """
        try:
            self.database_connection = sqlite3.connect(path_to_database)
        except Error as e:
            print(e)

    def execute_query(self, query):

        database_cursor = self.database_connection.cursor()
        print(database_cursor.execute(query))

    def insert(self, table_name, assoziative_key_value_array):
        print("insert not yet implemented")
</code></pre>
<p><em>DatabaseCreator.py</em>: if you want to try to run my code you can use
this class that creates the database for you</p>
<pre><code>from Database import Database

class DatabaseCreator:
    database = 0
    @staticmethod
    def create(path_to_database):
        database = Database(path_to_database)
        DatabaseCreator.delete_old(database)
        DatabaseCreator.create_new(database)

    @staticmethod
    def delete_old(database):
        print("@DatabaseCreator - delete old")
        database.execute_query("DROP TABLE 'Städte'")
        database.execute_query("DROP TABLE 'Vereine'")
        database.execute_query("DROP TABLE 'Präsidenten'")
        database.execute_query("DROP TABLE 'Spieler'")

    @staticmethod
    def create_new(database):
        print("@DatabaseCreator - create new");
        database.execute_query("CREATE TABLE 'Städte' ('Id' INTEGER PRIMARY KEY, 'Name' Varchar NOT NULL);")
        database.execute_query("CREATE TABLE 'Präsidenten' ('Id' INTEGER PRIMARY KEY, 'Name' Varchar NOT NULL);")
        database.execute_query("CREATE TABLE 'Vereine' ('Id' INTEGER PRIMARY KEY, 'Name' Varchar NOT NULL, 'Tabellenplatz' INTEGER NOT NULL, 'PräsidentId' INTEGER NOT NULL, 'StadtId' INTEGER NOT NULL, FOREIGN KEY('StadtId') REFERENCES 'Städte'('Id'), FOREIGN KEY('PräsidentId') REFERENCES 'Präsidenten'('Id') ,CONSTRAINT exclusive_präsidentschaft UNIQUE ('PräsidentId'));")
        database.execute_query("CREATE TABLE 'Spieler' ('Id' INTEGER PRIMARY KEY, 'Name' Varchar NOT NULL, 'Alter' INTEGER NOT NULL, 'Position' Varchar NOT NULL, 'VereinId' INTEGER NOT NULL, FOREIGN KEY('VereinId') REFERENCES 'Vereine'('Id'));")
</code></pre>
<hr/>
<p><em>DatabaseSeeder.py</em>: this class uses the Database class within its static methods and tries to insert
the 20 cities into the database.</p>
<pre><code>#!/usr/bin/env python
# -*- coding: utf-8 -*-
from Database import Database


class DatabaseSeeder:

    database = 0

    @staticmethod
    def seed(database):
        DatabaseSeeder.seed_cities(database)
        DatabaseSeeder.seed_presidents(database)
        DatabaseSeeder.seed_clubs(database)
        DatabaseSeeder.seed_players(database)

    @staticmethod
    def seed_cities(database):
        print("@DatabaseSeeder - seed cities")
        cities = [
            "Berlin",
            "Hamburg",
            "München",
            "Köln",
            "Frankfurt am Main",
            "Stuttgart",
            "Düsseldorf",
            "Dortmund",
            "Essen",
            "Leipzig",
            "Bremen",
            "Dresden",
            "Hannover",
            "Nürnberg",
            "Duisburg",
            "Bochum",
            "Wuppertal",
            "Bielefeld",
            "Bonn",
            "Münster"
        ]

        insert_city_sql_template = "INSERT INTO 'Städte' ('{0}') VALUES ('{1}');"
        for city in cities:
            sql_query = insert_city_sql_template.format("Name", city)
            print(sql_query)
            database.execute_query(sql_query)
</code></pre>
<p>My template for createing the final sql statement looks like this</p>
<p><code>insert_city_sql_template = "INSERT INTO 'Städte' ('{0}') VALUES ('{1}');"</code></p>
<p>It gets formatted into the final sql statement here</p>
<p><code>sql_query = insert_city_sql_template.format("Name", city)</code></p>
<p>When I print the sql statement before it is executed it looks like this</p>
<p><code>INSERT INTO 'Städte' ('Name') VALUES ('Berlin');</code></p>
<hr/>
<p><em>Application.py</em>: in my main class I create a new database connection at first and hand this connection over to the DatabaseSeeder class.</p>
<pre><code>from tkinter import *
import sqlite3
from sqlite3 import Error
from Database import Database
from table import Table
from DatabaseCreator import DatabaseCreator
from DatabaseSeeder import DatabaseSeeder

def main():
    database_path = "./database.db"
    DatabaseCreator.create(database_path)
    database = Database(database_path)
    DatabaseSeeder.seed(database)
</code></pre>
<hr/>
<p>When I execute my code I don't get any error message
but the entries just won't show up in the database.
<a href="https://i.stack.imgur.com/16agf.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/16agf.png"/></a></p>
<p>When I copy the SQL statement from my code and directly execute it on the sqlite cli it works perfectly fine.</p>
<p><a href="https://i.stack.imgur.com/vCyQK.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/vCyQK.png"/></a></p>
<p>I hope someone of you knows what I am missing. Thanks a lot :)</p>
</div>
<div class="post-text" itemprop="text">
<p>Okay I found a solution thanks to @stovfl. I really was missing the commit statement. Now my execute_query method looks like this with a <strong>commit</strong> at the end.</p>
<pre><code>def execute_query(self, query):
    try:
        database_cursor = self.database_connection.cursor()
        database_cursor.execute(query)
    except sqlite3.IntegrityError as e:
        print('sqlite error: ', e.args[0])  # column name is not unique
    self.database_connection.commit()
</code></pre>
<p>Thanks a lot for your help and always remember to commit your changes :D</p>
<p>Greetings</p>
</div>
<span class="comment-copy">Please no pics. could we get the actual code formatted here?</span>
<span class="comment-copy">thanks, replacing the images with code is really a good idea</span>
<span class="comment-copy"><b>Where</b> is your <code>commit</code> statment? Read <a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Connection.commit" rel="nofollow noreferrer">sqlite3.Connection.commit</a></span>
<span class="comment-copy">Please try to create a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>. For example, if the problem is with inserting data, we don’t need to see functions for deleting.</span>
