<div class="post-text" itemprop="text">
<p>When I am trying to find factorial using below code, it is working for all numbers except '0'. When I give the input as 0, below error is displayed. Can some one help me to understand and fix the error</p>
<pre><code>from functools import reduce

n = int(input())
fact = lambda a, b: a*b if (n&gt;=1) else 1
reduce(fact, range(1,n+1))
</code></pre>
<p>Expected result: When input is given as '0' 1 should be displayed as output</p>
<p>Actual result: Below error is displayed</p>
<pre><code>---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)    
&lt;ipython-input-124-52f472210976&gt; in &lt;module&gt;    
      3     
      4 fact = lambda a, b: a*b if (n&gt;=1) else 1    
----&gt; 5 reduce(fact, range(1,n+1))    
      6 

TypeError: reduce() of empty sequence with no initial value
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, at least, <code>reduce()</code> has an "initializer" parameter, which "is placed before the items of the sequence in the calculation, and serves as a default when the sequence is empty" (<a href="https://docs.python.org/3/library/functools.html" rel="nofollow noreferrer">documentation</a>). So use an initializer of <code>1</code>. You can also simplify your code by using the multiplication operator in the <code>operator</code> module.</p>
<pre><code>from functools import reduce
from operator import mul

result = reduce(mul, range(1,n+1), 1)
</code></pre>
<p>You should understand your error now. The error message says that you tried to use <code>reduce()</code> on an <code>empty sequence with no initial value</code>. Putting in the initial value of <code>1</code> solves that.</p>
</div>
<span class="comment-copy">Nice, learned something new +1</span>
<span class="comment-copy">The same is in pyhon2. The documentation of python2.7.15 says exactly the same stuff about the "initializer" parameter.</span>
<span class="comment-copy">@Valentino: Thanks for the additional information. I didn't bother to look that up for Python 2, partly because <code>reduce()</code> there is in a different module (it's a default function).</span>
