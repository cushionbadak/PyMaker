<div class="post-text" itemprop="text">
<p>I'm new to Python. If I want to package a Java program I could use Maven to define the dependencies and build a Jar including all the libraries needed on Mac, which can also be run using windows cmd console, with nothing but only java installed on that windows machine i.e. <code>java -myProgram.jar</code></p>
<p>I wonder how I could achieve the same with a Python program that used some 3rd party libraries. I searched some options like wheels but still confused about what their roles are. Could you help to give me more guidance on this? I'm using PyCharm as IDE. Many thanks. </p>
</div>
<div class="post-text" itemprop="text">
<p>For the closest equivalent of a .jar, you want a Python ZIP Application. This will only require a suitable version of Python installed on the user machine. <a href="https://docs.python.org/3/library/zipapp.html#creating-standalone-applications-with-zipapp" rel="nofollow noreferrer">https://docs.python.org/3/library/zipapp.html#creating-standalone-applications-with-zipapp</a></p>
<p>Basically you can use pip (Python's package manager) to install the dependencies you list into the directory that you'll zip up.</p>
<pre><code>$ python -m pip install foopackage barpackage&gt;=1.0 --target source
$ python -m zipapp source -m "source.foomodule:main" # use -c to compress
</code></pre>
<p>Where <code>source</code> is the name of your source directory containing your program and <code>main</code> is the name of your entry point (in <code>foomodule</code>). This will create a single .pyz file, which is Python's equivalent of a .jar.</p>
<p>You can then run it on a Windows machine with</p>
<pre><code>&gt; py source.pyz
</code></pre>
<p>Where <code>py</code> is either your python launcher or whatever appropriate python executable you have installed.</p>
<p>If you have a <code>requirements.txt</code> you could have pip install dependencies from that before you zip it.</p>
<pre><code>$ python -m pip install -r requirements.txt --target source
</code></pre>
<p>(If you don't you can try generating one from the output of <code>pip freeze</code>, but that's <em>everything</em> you have installed, which might be too much.)</p>
<hr/>
<p>Of course, this all assumes your dependencies are pure Python. If you've got some package that has a compiled binary for macOS, that's not going to work on Windows. In fact, C extensions generally won't be executable from inside a zip archive, even if you compile them on Windows.</p>
<p>If you do need binaries like that, I'd recommend trying a third-party tool like <a href="https://pex.readthedocs.io/en/stable/index.html" rel="nofollow noreferrer">pex</a>.</p>
</div>
<span class="comment-copy">Thanks! will try this.</span>
