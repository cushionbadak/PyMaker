<div class="post-text" itemprop="text">
<p>I need to convert my mongodb cursor to pandas dataframe. I want to avoid the use of lists directly using <code>data = list(collection.find())</code> but it goes out of memory, occupies a lot of memory. suggest me an efficient way to use lists or an alternative solution for this.</p>
<p>I have used a list to convert in pandas dataframe. It goes out of memory and stops the execution.</p>
<pre><code>collection = db.get_collection('xxxyyyzzz')
data = collection.find()
for i in data:
   lst = pd.DataFrame(list.append(data))
</code></pre>
<p>I want to convert cursor to dataframe.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>yield</code> to iterate over the cursor. <a href="https://docs.python.org/3/howto/functional.html#generators" rel="nofollow noreferrer">Read more here</a>. Basically <code>yield</code> would process one item at a time, rather than saving everything in a memory.</p>
<pre><code>def get_cursor():
    collection = db.get_collection('xxxyyyzzz')
    return collection.find()

def get_data_frames(cursor):
    for a_document in cursor:
        yield pd.DataFrame(list.append(data))

cursor = get_cursor()

for df in get_data_frames(cursor):
    // Do whatever
</code></pre>
</div>
<span class="comment-copy">What is the size of the collection? You may want to open a chucksize, process it, then open another chunk, ...</span>
