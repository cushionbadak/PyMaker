<div class="post-text" itemprop="text">
<p>I have the following string:</p>
<pre><code>"[['Categories', [['180972'], ['180800'], ['16228'], ['32733'], ['32789'], ['32833'], ['325137'], ['32839'], ['25329'], ['42605'], ['428240849'], ['5101'], ['568'], ['570716'], ['57116'], ['57080545404'], ['57083134076']]], ['Tags', ['Stock', 'Color', 'Fam', 'Dress','Maxi']], ['Type', ['Luxary']], ['Vendor', ['AAA']]]"
</code></pre>
<p>And I want to parse it as a dict/json.
What is the best way to do so?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>ast.literal_eval</code> to evaluate a string and get back a Python object (if the syntax is correct). <a href="https://stackoverflow.com/questions/15197673/using-pythons-eval-vs-ast-literal-eval">Using this is safer than using <code>eval</code></a>.</p>
<pre><code>import ast

s = "[['Categories', [['180972'], ['180800'], ['16228'], ['32733'], ['32789'], ['32833'], ['325137'], ['32839'], ['25329'], ['42605'], ['428240849'], ['5101'], ['568'], ['570716'], ['57116'], ['57080545404'], ['57083134076']]], ['Tags', ['Stock', 'Color', 'Fam', 'Dress','Maxi']], ['Type', ['Luxary']], ['Vendor', ['AAA']]]"

l = ast.literal_eval(s)
d = dict(l)
{'Categories': [['180972'],
  ['180800'],
  ['16228'],
  ['32733'],
  ['32789'],
  ['32833'],
  ['325137'],
  ['32839'],
  ['25329'],
  ['42605'],
  ['428240849'],
  ['5101'],
  ['568'],
  ['570716'],
  ['57116'],
  ['57080545404'],
  ['57083134076']],
 'Tags': ['Stock', 'Color', 'Fam', 'Dress', 'Maxi'],
 'Type': ['Luxary'],
 'Vendor': ['AAA']}
</code></pre>
<p>If you want to also get rid of the inner list, use <a href="https://stackoverflow.com/a/53932822/4042267">the other answer</a>, instead of just calling <code>dict</code> on the object.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this to convert it to dict:</p>
<pre><code>data= "[['Categories', [['180972'], ['180800'], ['16228'], ['32733'], ['32789'], ['32833'], ['325137'], ['32839'], ['25329'], ['42605'], ['428240849'], ['5101'], ['568'], ['570716'], ['57116'], ['57080545404'], ['57083134076']]], ['Tags', ['Stock', 'Color', 'Fam', 'Dress','Maxi']], ['Type', ['Luxary']], ['Vendor', ['AAA']]]"

data = eval(data)

d={}
for i in data:
    d[i[0]] = [x for x, in i[1]] if isinstance(i[1][0], list) else i[1]
</code></pre>
<p>The output will be:</p>
<pre><code>{'Categories': 
  ['180972',
   '180800',
   '16228',
   '32733',
   '32789',
   '32833',
   '325137',
   '32839',
   '25329',
   '42605',
   '428240849',
   '5101',
   '568',
   '570716',
   '57116',
   '57080545404',
   '57083134076'],
 'Tags': ['Stock', 'Color', 'Fam', 'Dress', 'Maxi'],
 'Type': ['Luxary'],
 'Vendor': ['AAA']
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about this</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; import ast
&gt;&gt;&gt; import pprint
&gt;&gt;&gt; i = ast.literal_eval(s)
&gt;&gt;&gt; d = {k[0]:list(itertools.chain(*k[1])) if isinstance(k[1][0], list) else list(k[1]) for k in i}
&gt;&gt;&gt; pprint.pprint(d)
{'Categories': ['180972',
                '180800',
                '16228',
                '32733',
                '32789',
                '32833',
                '325137',
                '32839',
                '25329',
                '42605',
                '428240849',
                '5101',
                '568',
                '570716',
                '57116',
                '57080545404',
                '57083134076'],
 'Tags': ['Stock', 'Color', 'Fam', 'Dress', 'Maxi'],
 'Type': ['Luxary'],
 'Vendor': ['AAA']}
</code></pre>
</div>
<span class="comment-copy">@Graipher it is a string, see my edit</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer"><code>json.loads(string)</code></a> ?</span>
<span class="comment-copy">@Aprillion: It seems to be an invalid JSON string...</span>
<span class="comment-copy">@Graipher simple replace the <code>'</code> to <code>"</code></span>
<span class="comment-copy">Only use <code>eval</code> on text that you create yourself or confirm for yourself is safe, <i>never</i> from an unknown or untrusted source.</span>
