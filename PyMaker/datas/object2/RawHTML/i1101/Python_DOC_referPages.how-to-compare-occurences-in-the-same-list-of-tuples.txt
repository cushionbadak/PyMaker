<div class="post-text" itemprop="text">
<p>I have a list of tuples like this one:
<code>L = [(23,56,48),(48,93,81),(48,56,23),(54,34,21),(48,98,71),(98,71,48),(56,23,48)]</code>
Some of the tuples are having exactly the same numbers but in different order. I want to count the occurrences of the tuples and overwrite the ones that have the same values inside. I read several answers in here and I managed to do something using the Counter method. But what I tried doesn't seem to work for me. I am new at python so maybe I don't understand the exact use of Counter method.</p>
<pre><code>L1 = Counter()
for item in L:
    for element in item:
        if element in item:
            L1[tuple(item)] = L1[tuple(item)] + 1
print(L1)
</code></pre>
<p>The result I get is:</p>
<pre><code>Counter({(23, 56, 48): 3, (48, 93, 81): 3, (48, 56, 23): 3, (54, 34, 21): 3, 
(48, 98, 71): 3, (98, 71, 48): 3, (56, 23, 48): 3})
</code></pre>
<p>And the result I want to get is:</p>
<pre><code>Counter({(23, 56, 48): 3, (48, 98, 71): 3, (48, 93, 81): 1, (54, 34, 21): 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to map the tuples with the same values to the same <em>key</em>, one way is sorting the tuples (using <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer">sorted</a>):</p>
<pre><code>from collections import Counter

L = [(23,56,48),(48,93,81),(48,56,23),(54,34,21),(48,98,71),(98,71,48),(56,23,48)]


result = Counter(tuple(e) for e in map(sorted, L))
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>Counter({(23, 48, 56): 3, (48, 71, 98): 2, (21, 34, 54): 1, (48, 81, 93): 1})
</code></pre>
</div>
<span class="comment-copy">What does "overwrite the ones that have the same values inside" mean?</span>
<span class="comment-copy">Maybe I cant explain it well, see the actual and the expected results for help, The tuples that contain the same numbers but in different order have to count as the same tuple</span>
<span class="comment-copy">Use set() instead for comparing tuples</span>
<span class="comment-copy">no the order doesn't matter, and this is the context, I tried to do it as simple as possible to ask my question...I don't know what set() does, or how to use it, I will try and see how it works</span>
<span class="comment-copy">Counter is a dictionary at heart and can't use sets as key - it can use frozensets though:  <code>Counter(frozenset(t) for t in L)</code>should give you what you want.</span>
<span class="comment-copy">Maybe <code>Counter(frozenset(t) for t in L)</code>? Not sure what would be more performant</span>
<span class="comment-copy">Yes that could be another option too</span>
<span class="comment-copy">Again as I said being new to python is the problem, I didn't think about using something like map at all. Thank you I will see how it works and try to understand it.</span>
