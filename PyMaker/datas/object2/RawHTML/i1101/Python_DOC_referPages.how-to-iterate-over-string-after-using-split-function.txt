<div class="post-text" itemprop="text">
<p>Here is the string 
ds = 'Java; Python; Ruby; SQL'
I have used slip function to split each language and found the count of one language.
if I want to find if any of 2 languages occur in a string it's returning zero.
example: in the above variable as both java and python are present it has to return count as one.</p>
<pre><code>def language_both_jp(y):
    count = 0
    prog = (y.split(";"))
    for i in range(0,len(prog)):
        if(prog[i] == 'Java'):
            for i in range(0,len(prog)):
                if(prog[i] == 'Python'):
                    count += 1
    return count
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could so something like this, instead use a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a> to store the counts of each language:</p>
<pre><code>ds = 'Java; Python; Ruby; SQL'

counts = {}
for chunk in ds.split(';'):
    language = chunk.strip()
    counts[language] = counts.get(language, 0) + 1

print(counts)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'Java': 1, 'SQL': 1, 'Python': 1, 'Ruby': 1}
</code></pre>
<p>A more <em>pythonic</em> approach will be to use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">collections.Counter</a>:</p>
<pre><code>from collections import Counter

ds = 'Java; Python; Ruby; SQL'
counts = Counter(language.strip() for language in ds.split(';'))
print(counts)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>Counter({'Java': 1, 'Ruby': 1, 'Python': 1, 'SQL': 1})
</code></pre>
<p>Once you have a mapping-like object with the counts of each language, iterate over the key, value pairs and output those with count above 1, for example:</p>
<pre><code>from collections import Counter

ds = 'Java; Python; Ruby; SQL; Python'
counts = Counter(language.strip() for language in ds.split(';'))

for language, count in counts.items():
    if count &gt; 1:
        print(language, count)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>Python 2
</code></pre>
<p>Note that the input string in the above example was slightly modified to include Python twice.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you should be splitting by <code>"; "</code>, so you should have:</p>
<pre><code>def language_both_jp(y):
    count = 0
    prog = (y.split("; "))
    for i in range(0,len(prog)):
        if(prog[i] == 'Java'):
            for i in range(0,len(prog)):
                if(prog[i] == 'Python'):
                    count += 1
    return count

language_both_jp(ds)
#1
</code></pre>
<p>A simpler approach would be:</p>
<pre><code>def language_both_jp(x, l):
    return 1 if [i for i in ds.split("; ") if i in l] else 0

language_both_jp(ds, ['Python','Java'])
#1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>your requirement is not clearly understandable...
however please try below solutions...</p>
<p><code>i</code>. if you <code>want to find the count of occurrence</code> of a <code>word</code> just pass the string and the <code>word</code>as argument..</p>
<p>try below code...</p>
<pre><code>def language_both_jp(y, word):
    count = 0
    prog = (y.split(";"))
    for i in range(0,len(prog)):
        if(prog[i] == word):
            count += 1
return count

string = 'java;python;java;python;c;python'
print(language_both_jp(string, 'java'))
</code></pre>
<p>it will print the count of occurrence of the word</p>
<p><code>ii</code>. If you want to fine the occurrence of two words..</p>
<p>try below code..</p>
<pre><code>def language_both_jp(y, word1,word2):
    count1 = 0
    count2 = 0
    prog = (y.split(";"))
    for i in range(0,len(prog)):
        if(prog[i] == word1):
            count1 += 1
        if(prog[i] == word2):
            count2 += 1
    return 'occurrence of '+word1+'='+str(count1)+'\n'+'occurrence of '+word2+'='+str(count2)

args = 'java;python;java;python;c;python'
print(language_both_jp(args, 'java','python'))
</code></pre>
<p><code>iii</code>. If you want to find the presence of any two words...</p>
<p>try below code</p>
<pre><code>def language_both_jp(y, word1,word2):
    count = ''
    prog = (y.split(";"))
    for i in range(0,len(prog)):
        if(prog[i] == word1):
            for i in range(0, len(prog)):
                if(prog[i] == word2):
                    count = 'yes'
                else:
                    count = 'no'
return count

args = 'java;python;java;python;c;python'
print(language_both_jp(args, 'java','python'))
</code></pre>
<p>please ask if you have any doubts...</p>
</div>
<span class="comment-copy">What is the question?</span>
<span class="comment-copy">What if "Java" is present twice? What should be the count then? Also, you might want to read up on the basics of looping in python</span>
