<div class="post-text" itemprop="text">
<p>I've come up with the following which should be fairly close, but it's not quite right.  I am getting the following error when I try to test if the data is a weekday.  <code>AttributeError: 'str' object has no attribute 'isoweekday'</code></p>
<p>Here is my feeble code:</p>
<pre><code>offset = str(link).find('Run:')
amount = offset + 15
pos = str(link)[offset:amount]
if pos.isoweekday() in range(1, 6):
    outF.write(str(link))
    outF.write('\n')
</code></pre>
<p>I'm looking for the string 'Run:  ' (it always has 2 blanks after the colon) and then I want to move 15 spaces to the right, to capture the date.  So, n-number of spaces to find 'Run:  ' and then get the date, like '2018-12-23' and test if this date is a weekday.  If this substring is a weekday, I want to write the entire string to a line in a CSV file (the writing to a CSV file works fine).  I'm just not sure how to find that one date (there are several dates in the string; I need the one immediately following 'Run:  ').</p>
</div>
<div class="post-text" itemprop="text">
<p>You've only forgotten to <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer">load it into a <code>datetime</code> object</a>:</p>
<pre><code>from datetime import datetime

# ...
pos_date = datetime.strptime(pos, "%Y-%m-%d")
if pos_date.isoweekday() in range(1, 6):  
    # ...
</code></pre>
<hr/>
<p>Also, as you are using <code>.isoweekday()</code> and Monday is represented as 1, you don't really need to check the lower boundary:</p>
<pre><code>if pos_date.isoweekday() &lt;= 5:  # Monday..Friday
    # ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe to convert back to <code>datetime</code> type:</p>
<pre><code>offset = str(link).find('Run:')
amount = offset + 15
pos = str(link)[offset:amount]
if datetime.strptime(pos,'%Y-%m-%d').isoweekday() in range(1, 6):
    outF.write(str(link))
    outF.write('\n')
</code></pre>
<p>Then it should work as expected.</p>
</div>
<div class="post-text" itemprop="text">
<p>Let's suppose your link is</p>
<pre><code>link = "Your Link String is Run:  2018-12-21 21:15:48"
</code></pre>
<p>Your following code will work well to find the offset starting from <code>Run</code></p>
<pre><code>offset = str(link).find('Run:')
amount = offset + 16
</code></pre>
<p>Since, there are two spaces after <code>Run:</code> hence, 16 needs to be added to <code>offset</code>.
Now extracting exactly the date string <code>2018-12-21</code>, we need to add 6 to offset as <code>Run:  </code> has 6 character before starting the date string.</p>
<pre><code>pos = str(link)[offset + 6:amount]
</code></pre>
<p>Now formatting our date string in an datetime object with</p>
<pre><code>pos_date = datetime.strptime(pos, "%Y-%m-%d")
</code></pre>
<p><em>Remember to import datetime at the top of your program file as</em></p>
<pre><code>from datetime import datetime
</code></pre>
<p>Now checking and displaying if the date is a weekday</p>
<pre><code>if pos_date.isoweekday() in range(1, 6):
    print("It's a Week Day!")
</code></pre>
<p>This will return <code>It's a Week Day!</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>link = "something something Run:  2018-12-24 ..."
offset = str(link).find('Run:') 
amount = offset +  15 # should be 16 
pos = str(link)[offset:amount] # this is a string
</code></pre>
<p>The <code>pos</code> of the example above will be <code>Run:  2018-12-24</code>, so it does not capture the date exactly.</p>
<p>A string object does not have <code>isoweekday</code> method, so <code>pos.isoweekday()</code> will result to error. But a <code>datetime.datetime</code> object does have that method.</p>
<p>A solution:</p>
<pre><code>import datetime

link = "something something Run:  2018-12-24 ..."
offset = str(link).find('Run:') # will only give the index of 'R', so offset will be 20
amount = offset + 16
pos = str(link)[offset:amount] # pos is 'Run:  2018-12-24'
datestring = pos.split()[1] # split and capture only the date string

#now convert the string into datetime object
datelist = datestring.split('-')
date = datetime.datetime(int(datelist[0]), int(datelist[1]), int(datelist[2]))

if date.isoweekday() in range(1, 6):
    ....
</code></pre>
<p>This okay..?</p>
</div>
<div class="post-text" itemprop="text">
<p>Another alternative to this would be to use dateutil.parser</p>
<pre><code>from dateutil.parser import parse

try: 
    if parse(pos).isoweekday() &lt;=5:
    ....
except ValueError:
    .....
</code></pre>
<p>The advantage here is that parse will accept a wide variety of date formats that datetime might error out for</p>
</div>
<span class="comment-copy">Please provide a sample input. What you are doing in the code does not make much sense given the description.</span>
<span class="comment-copy">Thanks everyone.  Every single answer looks completely reasonable to me, but I keep getting this error.  SyntaxError: can't assign to function call.  Or, I get this error:  AttributeError: module 'datetime' has no attribute 'strptime'.  Or, I get this: ValueError: time data 'Run: 2018-12-23' does not match format '%Y-%m-%d'. I am using this at the top: from datetime import datetime It's almost like the date/time isn't working, and it can't understand the format of the date.  I understand you have to convert the string to a date, of course, but it just won't do the conversion.</span>
<span class="comment-copy">Oh, now I see.  I had to drop the 'Run:', like this: pos = str(link)[offset+5:amount] I thought Python could figure out that part, and just keep the part that looks like a date.  Also, there is 1 blank space after the colon not two.  Now it works.  Thanks everyone and Merry Christmas!!</span>
<span class="comment-copy">@ryguy72 You too.. :-), didn't sorry for the late reply.</span>
