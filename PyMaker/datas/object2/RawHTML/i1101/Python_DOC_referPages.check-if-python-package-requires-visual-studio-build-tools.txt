<div class="post-text" itemprop="text">
<p>From <a href="https://stackoverflow.com/questions/33100090/why-does-installation-of-some-python-packages-require-visual-studio">this previous SO question</a>, I understand that some python packages rely on Visual Studio Build Tools to compile sources from C on Windows.</p>
<p>I want to avoid using python packages that require Visual Studio Build Tools in my open source projects. I do not want to force my open-source users to install Build Tools for my python app. This seems like a major decrease in usability and makes it harder to install.</p>
<p><strong>How can I determine which open-source python packages require Visual Studio Build Tools?</strong> I have checked pypi.org and libraries.io, as well as looked at the <code>requirements.txt</code> in each package's GitHub repo. I cannot find any sort of requirement for Visual Studio Build Tools, but when I try <code>pip install</code> on the package, it says it requires Build Tools...</p>
<p>I did find <a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" rel="nofollow noreferrer">this website of pre-compiled python libraries</a> from another SO post. Is it safe to assume that any library on this list requires Build Tools? However, I'm assuming this list is not exhaustive. Is there a better source of information?</p>
<p>Please note that I'm NOT asking how to install Visual Studio Build Tools. Thanks in advance for any help!</p>
</div>
<div class="post-text" itemprop="text">
<p>I posted this on Reddit and received the following answer, which I believe is correct. Feel free to add another answer if needed.</p>
<blockquote>
<p>Basically the answer is any time a package must compile C code to build. It's not obvious looking at a packages requirements because the build commands provided by setup tools automatically look for Visual Studio on Windows.</p>
<p>In the distutils configuration file you can set the compiler of your choice: <a href="https://docs.python.org/3/install/index.html#using-non-microsoft-compilers-on-windows" rel="nofollow noreferrer">https://docs.python.org/3/install/index.html#using-non-microsoft-compilers-on-windows</a> . And then when installing via pip you can choose the --no-binary options to make sure you don't get binaries pre-compiled by Visual Studio: <a href="https://pip.pypa.io/en/stable/reference/pip_install/#cmdoption-no-binary" rel="nofollow noreferrer">https://pip.pypa.io/en/stable/reference/pip_install/#cmdoption-no-binary</a></p>
<p>You might also be interested in conda-forge which provides an open source way of providing many package binaries via the conda package manager: <a href="https://conda-forge.org/" rel="nofollow noreferrer">https://conda-forge.org/</a></p>
</blockquote>
<p>Follow up on whether there is any way to detect the use of compilers in a arbitrary python package:</p>
<blockquote>
<p>I assume a lot of packages will have distutils.core.Extension called at some point in their setup.py: <a href="https://docs.python.org/3/extending/building.html#building-c-and-c-extensions-with-distutils" rel="nofollow noreferrer">https://docs.python.org/3/extending/building.html#building-c-and-c-extensions-with-distutils</a></p>
<p>Though setup.py allows you to call arbitrary Python code so the actual C compilation could be hidden somewhere completely different or even use an entirely different build process.</p>
<p>Basically if the license or adherence to FOSS principles it important to your application you either need to base your dependency chain on work other people have already done (e.g. conda-forge) or you need to spend time really investigating the status of every dependency you use :/</p>
</blockquote>
</div>
