<div class="post-text" itemprop="text">
<p>I'm having issues determining my maximum value calculated in my for loop. I'm using Python to evaluate an array to determine the maximum delta in a sequence i.e. maximum value i+1-i. </p>
<p>I'm having two issues:</p>
<ol>
<li>SyntaxError: 'return' outside function</li>
<li>I don't know how to pull the largest calculated iterated value from my for loop</li>
</ol>
<p>Tried having other variables to compare largest values etc</p>
<pre><code>prices=[7,1,5,3,6,4]
profit_loss=0
for i in range(0,len(prices)-1):
        profit_loss=prices[i+1] - prices[i]
        return(profit_loss)
        print(profit_loss)
</code></pre>
<p>Maximum value should be 4 and the results of my print are below:</p>
<pre><code>-6
4
-2
3
-2
</code></pre>
<p>This question is unique because I am looking to understand why the return function is not necessary.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't <code>return</code> outside a function. In fact, you don't need <code>return</code> here:</p>
<pre><code>prices = [7,1,5,3,6,4]
profit_loss = -float('inf')

for i in range(len(prices)-1):
    change = prices[i+1] - prices[i]
    if change &gt; profit_loss:
        profit_loss = change

print(profit_loss)  # 4
</code></pre>
<p>More idiomatic than positional indexing, use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> to iterate elements of <code>prices</code> pairwise:</p>
<pre><code>for i, j in zip(prices, prices[1:]):
    change = j - i
    if change &gt; profit_loss:
        profit_loss = change
</code></pre>
<p>More succinctly, use <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max</code></a> with a generator comprehension:</p>
<pre><code>profit_loss = max(j - i for i, j in zip(prices, prices[1:]))  # 4
</code></pre>
<p>Or use the <a href="https://en.wikipedia.org/wiki/Functional_programming" rel="nofollow noreferrer">functional</a> equivalent:</p>
<pre><code>from operator import sub
profit_loss = max(map(sub, prices[1:], prices))  # 4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work:</p>
<pre><code>prices = [7, 1, 5, 3, 6, 4]
profit_loss = 0
for i in range(0, len(prices)-1):
    res = prices[i+1] - prices[i]
    if res &gt; profit_loss:
        profit_loss = res
print(profit_loss)
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3428769/finding-the-largest-delta-between-two-integers-in-a-list-in-python">Finding the largest delta between two integers in a list in python</a></span>
<span class="comment-copy">This is a great explanation. Thank you.</span>
