<div class="post-text" itemprop="text">
<p>I have a running python application that needs to receive some data and process them. and I also have a PHP server that can get these data. I want to send JSON data from PHP to my python app.
anyway except running a python web server and send data to it, or insert into DB and get from DB with python?
thanks.</p>
<p>I tried using python cherryPy web server.</p>
</div>
<div class="post-text" itemprop="text">
<p>@Niklas D It would be easier to answer your question, if you can give some more context about the application or use case you want to solve.</p>
<p>Some further possibilities are:</p>
<p>Glue Code (I never did it with python and php only C++ with python, but you should be able to find examples on the internet e.g. <a href="https://wiki.python.org/moin/IntegratingPythonWithOtherLanguages#PHP" rel="nofollow noreferrer">https://wiki.python.org/moin/IntegratingPythonWithOtherLanguages#PHP</a> )</p>
<p>Messaging Systems like RabbitMQ, ActiveMQ, ZeroMQ, etc. </p>
<p>Redis (I know you said except writing to a database, but Redis provides some features for publish subscribe <a href="https://redis.io/commands/pubsub" rel="nofollow noreferrer">https://redis.io/commands/pubsub</a> which allows you to write to Redis from the one side and get data on the other side without polling the db all the time, which is the issue you have with using a database I guess) It's a bit easier to setup and use, than a messaging system.</p>
<p>TCP connection between the python and php application. <a href="https://medium.com/swlh/lets-write-a-chat-app-in-python-f6783a9ac170" rel="nofollow noreferrer">https://medium.com/swlh/lets-write-a-chat-app-in-python-f6783a9ac170</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to send data to a python application using web protocols, i.e send POST, GET requests etc then you need to create a python web app to receive and handle those requests. Which in turn needs to be running off a webserver or you could build serverless functions to handle this, see <a href="https://serverless.com/" rel="nofollow noreferrer">https://serverless.com/</a></p>
<p>If you want to get data using a python application, i.e the python app sends POST and GET requests etc to your php app to ask for the JSON payload you can build an app using python's standard requests library <a href="https://docs.python.org/3/library/urllib.request.html" rel="nofollow noreferrer">https://docs.python.org/3/library/urllib.request.html</a> or better still us the Requests package <a href="http://docs.python-requests.org/en/master/" rel="nofollow noreferrer">http://docs.python-requests.org/en/master/</a></p>
<p>Or you could do something and save the JSON file to disk and then open it with your python app. You'd need to set up scheduling or make your php app execute python code on the server... This last suggestion is a bad idea please don't unless your app is isolated and not publicly accessible or you know how to lock down your security. </p>
</div>
<span class="comment-copy">hello NiklasD welcome to stackoverflow check out this link <a href="https://stackoverflow.com/questions/38626423/pass-json-data-from-php-to-python-script">this should help you</a></span>
<span class="comment-copy">Assuming that speed is a critical concern, you could just write into temporary files that both processes have access to, and then watch the file contents on each end.</span>
<span class="comment-copy">actually, I have an assistant program that takes orders, when I said except inserting and selecting from DB that because my python DB checker must have to run every second or so, I use artyom.js for translating speech to text and it requires a PHP server for working well, now I want to send these text orders from PHP to python. python offline speech to texts are so bad and I couldn't find online free API for that. thanks.</span>
<span class="comment-copy">Would you mind elaborating on why a temporary file is a "silly" solution?</span>
<span class="comment-copy">That's my bad @Aleon. It actually might not, I shouldn't have called it silly, really depends on the context.  I conflated it with the shell execute option in my mind, which I don't think is a good idea unless the web apps arent't exposed to the public or the creater has an advanced knowledge of server security.</span>
