<div class="post-text" itemprop="text">
<p>I am using a 3rd-party library to parse some domain specific file. The good thing is the library works, the bad thing is the library has some small issues that I would like to modify, the ugly thing is the function I am using has, well, around 2000 lines. I just want to modify one regular expression inside an <code>if</code> expression, is there a way I could "hotfix" that without modifying the original library?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch" rel="nofollow noreferrer"><code>unittest.mock.patch</code></a> in a <code>with</code> statement to swap out anything. I can't tell you exactly how to do it without seeing the code, but if the regex is already in a global, you can just replace that for the duration of the call.</p>
<p>If it's made from a string literal written inside the function, you could instead patch whatever function it's passed to, like <code>re.compile</code> or <code>re.match</code>, etc. Make a wrapper that checks for the one string you want replaced, replace it, and then delegate to the real function. (Safe a reference to the real thing outside the <code>with</code> statement and use that if you don't want a stack overflow :)</p>
<hr/>
<pre><code>old_compile = re.compile
with patch.object(re, 'compile', lambda s: old_compile('eggs' if s == 'spam' else s)):
    bad_library_function()
</code></pre>
<p>This example assumes that <code>bad_library_function</code> has a call to <code>re.compile</code> in it with a string literal 'spam' that you don't like, and you'd rather it were <code>eggs</code>. The patch replaces it with a new function that treats a <code>'spam'</code> argument as if it were <code>'eggs'</code> and otherwise behaves as the original <code>re.compile</code> function, but only for the duration of the <code>with</code> statement.</p>
<hr/>
<p>This monkeypatching approach is very brittle. If you update the library and it changes the implementation, your patch could break.</p>
</div>
<span class="comment-copy">Make a decorator which checks and fix input?</span>
<span class="comment-copy">@SeverinPappadeux It would not work. This library will scan some log files, and the output depends on the scan result. The newer version of the log file has added some information that would break the predefined regular expression.</span>
