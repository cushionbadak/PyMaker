<div class="post-text" itemprop="text">
<p>Using Below given python script, I am trying to copy a text file and trying to create 10 copies of the same file as shown below:</p>
<pre><code>logs1.txt
logs2.txt
.
.
logs10.txt
</code></pre>
<p>Basically i need to increment only the number present in destination text file name.</p>
<p>I have tried using "for loop" with range command. But I dont know how to increment a number inside a cp command.</p>
<pre><code>#/usr/bin/env python
import subprocess

class RunCmd(object):
    def cmd_run(self, cmd):
        self.cmd = cmd
        subprocess.call(self.cmd, shell=True)


a = RunCmd()
a.cmd_run('cp /sh/awlog/Logs_new_1.txt /sh/logs/logs1.txt')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since the <code>a.cmd_run</code> command-argument contains a string, you can just change this string in a while-loop.</p>
<pre><code>i = 1
while i &lt; 11:
    string = 'cp /sh/ec_rawlog/Logs_new_1.txt /sh/logs/logs%s.txt' % i
    a = RunCmd()
    a.cmd_run(string)
    i += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It should be as simple as</p>
<pre><code>import shutil

for i in range(10):
    shutil.copyfile('/path/to/source/file','/destination/path/logs'+str(i+1)+'.txt')
</code></pre>
<p>There's no need to create a class to carry out such simple functionality. Also, copying files can be done using the <code>shutil</code> module directly rather than creating a subprocess to do so.</p>
<p>More information about <code>shutil</code>: <a href="https://stackoverflow.com/questions/123198/how-do-i-copy-a-file-in-python">How do I copy a file in Python?</a> </p>
<p>Edit:</p>
<p>alternate code as per Bruno's suggestions:</p>
<pre><code>import shutil

for i in range(1,11):
    shutil.copyfile('/path/to/source/file','/destination/path/logs{}.txt'.format(i))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>The <a href="https://docs.python.org/2/library/shutil.html#shutil.copyfile" rel="nofollow noreferrer">shutil</a> module offers a number of high-level operations on files and collections of files. In particular, functions are provided which support file copying and removal.</p>
</blockquote>
<pre><code>import shutil

for i in range(10):
    shutil.copyfile(
        "/sh/awlog/Logs_new_1.txt",
        "/sh/logs/logs{}.txt".format(i+1)
    )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should use <a href="https://docs.python.org/2/library/string.html#format-string-syntax" rel="nofollow noreferrer">string formatting</a></p>
<pre><code>templ = 'cp /sh/ec_rawlog/Logs_new_{0}.txt /sh/logs/logs{0}.txt'
for num in range(1,11):
    print(templ.format(num))
</code></pre>
<p>output</p>
<pre><code>cp /sh/ec_rawlog/Logs_new_1.txt /sh/logs/logs1.txt
cp /sh/ec_rawlog/Logs_new_2.txt /sh/logs/logs2.txt
cp /sh/ec_rawlog/Logs_new_3.txt /sh/logs/logs3.txt
cp /sh/ec_rawlog/Logs_new_4.txt /sh/logs/logs4.txt
cp /sh/ec_rawlog/Logs_new_5.txt /sh/logs/logs5.txt
cp /sh/ec_rawlog/Logs_new_6.txt /sh/logs/logs6.txt
cp /sh/ec_rawlog/Logs_new_7.txt /sh/logs/logs7.txt
cp /sh/ec_rawlog/Logs_new_8.txt /sh/logs/logs8.txt
cp /sh/ec_rawlog/Logs_new_9.txt /sh/logs/logs9.txt
cp /sh/ec_rawlog/Logs_new_10.txt /sh/logs/logs10.txt
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The other answers are good, but you can also do this the old fashioned way:</p>
<pre><code># Open main file
with open("/sh/awlog/Logs_new_1.txt") as f_in:

    # Read in text
    file_str = f_in.read()

    # Iterate 1 - 10
    for i in range(1, 11):

        # Open new file to write to with number
        with open("/sh/logs/logs%d.txt" % i, mode="w") as f_out:
            f_out.write(file_str)
</code></pre>
<p>You can simply iterate over <code>range(1, 11)</code> to get the numbers 1 - 10, excluding 11. You can have a look at <a href="https://docs.python.org/3/library/stdtypes.html#range" rel="nofollow noreferrer"><code>range()</code></a> for behavior specifics. </p>
<p>Addtionally, as pointed out in the other answers, the good thing about <a href="https://docs.python.org/3/library/shutil.html#shutil.copyfile" rel="nofollow noreferrer"><code>shutil.copyfile()</code></a> is that it avoids the need to open files, as shown above, and you can copy the content over directly with no issues. </p>
<p>Having said this, the <a href="https://github.com/python/cpython/blob/master/Lib/shutil.py#L225" rel="nofollow noreferrer">source code</a> does still open files under the hood, so I guess that's something to consider. </p>
</div>
<span class="comment-copy">Looks like a convoluted way of doing something simple. Why are you creating a class to do this? Take a look at <code>shutil</code> module. Also, learn basics of python string operations.</span>
<span class="comment-copy">there are several ways to achieve that. You could have a for loop in range(10) which run the same cmd command and update the name of the target file by concatenate the num to the string. '/sh/logs/logs' + num + '.txt'</span>
<span class="comment-copy">Agreed, and if you really want that, at least associate the command in the <code>RunCmd</code> constructor, e.g. <a href="https://gist.github.com/fcracker79/d971c2a903a08c80ee8148ad00af667a" rel="nofollow noreferrer">gist.github.com/fcracker79/d971c2a903a08c80ee8148ad00af667a</a></span>
<span class="comment-copy">You should use string formatting instead of string concatenation, and <code>range()</code> can take a <code>start</code> argument so you don't need the <code>i+1</code> at all.</span>
<span class="comment-copy">@brunodesthuilliers at that point it's pretty much more about looks than anything else but yeah, that is some alternate syntax. (Unless you <i>really</i> need to worry about performance, of course)</span>
<span class="comment-copy">it's not "pretty much about looks than anything else" but about writing readable idiomatic code. Readiblity is highly valued by python programmers.</span>
<span class="comment-copy">The difference in readability between these two particular examples is opinion-based. Somebody might see the <code>10</code> as clearly showing that there is exactly 10 iterations. Others might prefer the other syntax. Also, in this situation, as there isn't a lot of different variables to be concatenated, you could make a case for either concatenation or using <code>format</code>. In any case, I've provided the alternate syntax you suggested as well.</span>
<span class="comment-copy">@RoadRunner No.</span>
<span class="comment-copy">@RoadRunner the fact that the OP will need to pass the formatted string to <code>a.cmd_run()</code> is obvious enough.</span>
<span class="comment-copy">@brunodesthuilliers Fair enough, I've removed my comment. I'm just suggesting a reason to why this answer was <i>probably</i> downvoted.</span>
<span class="comment-copy">@RoadRunner Fair enough too ;-)</span>
<span class="comment-copy">Also, OP question is effectively how to increment the number within the string. Most of the other answers are more focused on how to copy the file.</span>
