<div class="post-text" itemprop="text">
<p>I am working on a code in python where there is two separate values in one specific line of a file. I want to retrieve both of them as separate parts to a list for matplotlib. This is the code that I have so far:</p>
<pre><code>with open('data.txt') as data_file:

    def process(line):
        line = line.rstrip(data_file)
        line = line.split('.')[1]
        line = line.split(',')
        return line


    x = list()
    y = list()

    counter = 0

    for line in data_file:
        if (counter == 3) or (counter == 4):
            result = process(line)
            x.append(int(result[0]))
            y.append(int(result[1]))
        counter += 1

print(x)
print(y)
</code></pre>
<p>The error is saying:</p>
<pre><code>line = line.rstrip(data_file)
TypeError: rstrip arg must be None or str
</code></pre>
<p>A sample file is:</p>
<pre><code>hi
hi
67, 78
2345, 45677
</code></pre>
<p>Can someone please help me fix this error, or provide a better way to achieve the same outcome. Any help is appreciated!</p>
<p>Thanks so much!</p>
</div>
<div class="post-text" itemprop="text">
<p>this is what i could come up with:</p>
<pre><code>import re

regex = r'[\d]{1,3}, [\d]{1,3}'
result = []
with open('sample.txt') as f:
    lines = f.readlines()
    for line in lines:
        match = re.findall(regex, line)
        if match != []:
            splitted = match[0].split(',')
            #the values are mapped to a list containing floating point numbers
            mapped = list(map(float, splitted))
            #and then are appended to a list that will contain all of
            #the lines that have the numbers on it
            result.append(mapped)

    print(result)
    #this is how you could access each line in result
    for list in result:
        print(list)
</code></pre>
<p>output</p>
<pre><code>[[67.0, 78.0], [25.0, 18.0]] #result is a list containing all lines that have the pattern &lt;number&gt;, &lt;number&gt;
[67.0, 78.0] #the first line that matches the pattern
[25.0, 18.0] #the second one
</code></pre>
<p>this uses regular expressions to look for numbers up to 3 digits (but you can change that to whatever you want), matching the pattern <code>&lt;number&gt;, &lt;number&gt;</code></p>
<p>if it matches the pattern, it splits the two numbers at the <code>,</code> creating a list containing those two values and appends them to the result list</p>
<p>Hope it  helps.</p>
<p>Any questions feel free to ask.</p>
<p><strong>Edit</strong></p>
<p>im using this as a sample file to exemplify to you:</p>
<pre><code>hi
hi
67, 78
hi again
25, 18
</code></pre>
</div>
<span class="comment-copy">Why do you have the argument <code>data_file</code> in the line <code>line = line.rstrip(data_file)</code>?</span>
<span class="comment-copy">@Xteven I thought that <code>line = line.rstrip()</code> needed to reference the file to strip the line</span>
<span class="comment-copy"><code>rstrip</code> is a method belonging to any string object in Python which accepts an optional argument of a string (which contains which characters to strip). More information here: <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str.rstrip</a></span>
<span class="comment-copy">@Xteven thanks so much for your help! I have one more question if that's ok. When I removed the <code>data_file</code> from my code it said that the <code>line = line.split('.')[1]</code> list index is out of range. Do u know how I can solve that?</span>
<span class="comment-copy">In your sample file, none of the lines have the character <code>.</code> in them, which means that <code>line.split(".")</code> just returns a list of whatever was in that line because there is nothing to split by. The return list only has one item (whatever was in the line), so Python is complaining about trying to access the second item.</span>
<span class="comment-copy">Thanks so much for your help! I am a very beginner at python so I don't really understand what's going on - even though you explained some of it! Do you mind explaining to me what re is, findall is, regex is, and finally the match != part. I know that this is basically the whole entire code, but I would really appreciate your help. Thanks again!</span>
<span class="comment-copy">“ re” is a built-in package for python that handles regular expressions. When “re” is imported, it works kind of a class, “findall” being one of the methods it has. “findall”, in this case takes two arguments, the regular expression “regex”, and a string (being whatever is on the line of the sample file)</span>
<span class="comment-copy">"match" is the value that "re.findall" returns. If it matches the regex, its a list with all the matches in a line (in this case there is only one in one line). The "!=" is only an operator, it simply translates to "not equal to", and in this case, an empty list, meaning it will only append the matches that contains the regular expression.</span>
<span class="comment-copy">I highlly suggest checking out the python documentation:  <a href="https://docs.python.org/3/" rel="nofollow noreferrer">docs.python.org/3</a>, expecially the beginner's guide: <a href="https://docs.python.org/3.7/tutorial/index.html" rel="nofollow noreferrer">docs.python.org/3.7/tutorial/index.html</a>, it really helped me out some time ago. If you can't find what you're looking  for in those pages, try searching in the index modules: <a href="https://docs.python.org/3.7/py-modindex.html" rel="nofollow noreferrer">docs.python.org/3.7/py-modindex.html</a></span>
<span class="comment-copy">I made an edit for mapping the values from strings to floats using the map function</span>
