<div class="post-text" itemprop="text">
<p>I have a string:
<code>Data="a" Chain="Y" Classification="" Coreentity="N" createdAt="2018-05-05" name="DM_KING" Hour="23" Sub="N"</code>
I want to extract <code>DM_KING</code></p>
<p>I don't know how to match the first occurrence of <code>"</code> after last <code>"</code> that is after <code>name</code>, I've written regex code as:</p>
<p><code>Data=.*name=\"</code></p>
<p>I expect code to return <code>DM_KING</code>,
<code>DM_KING</code> <strong>could have any length</strong></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>Data=.*name=\"([^"]*)
</code></pre>
<p>You can use this with <code>re.findall</code>.See demo.</p>
<p><a href="https://regex101.com/r/HrvZYo/1" rel="nofollow noreferrer">https://regex101.com/r/HrvZYo/1</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use this regex <code>name="([^"]+)"</code></p>
<p>This regex searches for <code>name="</code> then groups whatever found after that except a <code>"</code> and stops capturing after it sees a <code>"</code>. Then you can print whatever got captured in group1.</p>
<p>Python code,</p>
<pre><code>import re

str = 'Data="a" Chain="Y" Classification="" Coreentity="N" createdAt="2018-05-05" name="DM_KING" Hour="23" Sub="N"'
name = re.search(r'name="([^"]+)"', str)
print(name.group(1))
</code></pre>
<p>Prints,</p>
<pre><code>DM_KING
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe this should work:</p>
<pre><code>re.search('name="\w+', s)[0].split("\"")[1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're going to get more values from your input string, this would be a great place to use a <a href="https://docs.python.org/3/howto/regex.html#non-capturing-and-named-groups" rel="nofollow noreferrer">named group</a>:</p>
<pre><code>import re
data = 'Data="a" Chain="Y" Classification="" Coreentity="N" createdAt="2018-05-05" name="DM_KING" Hour="23" Sub="N"'
matcher = re.compile('name="(?P&lt;name&gt;[^"]+)"')
match = matcher.search(data)
print(match.group('name'))
</code></pre>
<p>This prints:</p>
<pre><code>DM_KING
</code></pre>
<p><a href="https://regex101.com/r/SKLb9p/1/" rel="nofollow noreferrer">Explanation</a>:</p>
<ul>
<li><code>name="</code> matches the characters <code>name="</code> literally (case sensitive)</li>
<li>Named Capture Group "name" <code>(?P&lt;name&gt;[^"]+)</code></li>
<li>Match a single character <em>not</em> (<code>^</code>) present in the list [<code>"</code>]</li>
<li><code>+</code> Quantifier â€” Matches between one and unlimited times, as many times as possible, giving back as needed (greedy)</li>
<li><code>"</code> matches the character <code>"</code> literally</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>If your Before and after the string is certain i.e Hour appearing after the name,
This should work like charm for any length name :</p>
<pre><code>regex = r"name=\"(.*)\" Ho"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this regex</p>
<pre><code>[\s\S]*?name="([^"]*?)"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>print a[a.index('"',a.index('name="'))+1 :a.index('"',a.index('name="')+6)]
</code></pre>
<p>str.index(sub[, start[, end]] ) gives the index of substring "sub" from position "start" to "end" in string "str"</p>
</div>
<span class="comment-copy">Tried it: <a href="https://regex101.com/r/ErNFA1/1" rel="nofollow noreferrer">regex101.com/r/ErNFA1/1</a></span>
<span class="comment-copy">While this might have answered the question, it is generally best practice to explain how the code works.</span>
