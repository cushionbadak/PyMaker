<div class="post-text" itemprop="text">
<p>I'm having an issue with my nested loop. I have the list of ipaddress and hostname, looping of address is correct while looping on hostname is not, <strong>it always use the index 0 after the break.</strong></p>
<pre><code># list example:
ipaddress = ['192.168.1.1', '192.168.1.2']
nhostname = ['lab-sw01', 'lab-rtr02']

for i in ipaddress:
    print ("Now accessing the device: ", i)
    dev = i.strip()
    tn = telnetlib.Telnet(dev)
    print("Host: ",dev)
    tn.read_until(b"Username:")
    tn.write(user.encode("ascii") + b"\n")

    for j in nhostname:
        print ("Hostname :", j)
##        hn = i.strip() 
        if password:
            tn.read_until(b"Password: ")
            tn.write(password.encode("ascii") + b"\n")
        tn.write(b"conf t\r\n")
        time.sleep(2)
        tn.write(("hostname " + j + "\n").encode('ascii'))
        time.sleep(2)
        tn.write(b"exit \n")
        tn.write(b"wr mem \n")
        tn.close()
        break
</code></pre>
<p>Output:</p>
<pre><code>Now accessing the device:  192.168.137.50
Host:  192.168.137.50
Hostname **: lab-sw01**
Now accessing the device:  192.168.137.51
Host:  192.168.137.51
Hostname : **lab-sw01**
</code></pre>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need a nested loop:</p>
<pre><code>for i in range(0,len(ipaddress)):
    print ("Now accessing the device: ",ipaddress[i])
    dev = ipaddress[i].strip()
    tn = telnetlib.Telnet(dev)
    print("Host: ",dev)
    tn.read_until(b"Username:")
    tn.write(user.encode("ascii") + b"\n")

    print ("Hostname :", hostname[i])
    if password:
        tn.read_until(b"Password: ")
        tn.write(password.encode("ascii") + b"\n")
    tn.write(b"conf t\r\n")
    time.sleep(2)
    tn.write(("hostname " + hostname[i] + "\n").encode('ascii'))
    time.sleep(2)
    tn.write(b"exit \n")
    tn.write(b"wr mem \n")
    tn.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You put a break statement at the end of the nhostname-loop, meaning that the nested loop breaks after the first iteration and it goes back to the ipadress loop.</p>
<p>Remove the break statement at the end of the nested loop and it should work.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need something like</p>
<pre><code>ipaddress = ['192.168.1.1', '192.168.1.2']
nhostname = ['lab-sw01', 'lab-rtr02']
for i,j in zip(ipaddress,nhostname):
    print ("Now accessing the device: ", i)
    dev = i.strip()
    print("Host: ",dev)
    print("hostname " + j + "\n")
</code></pre>
<p>Output:</p>
<pre><code>Now accessing the device:  192.168.1.1
Host:  192.168.1.1
hostname lab-sw01

Now accessing the device:  192.168.1.2
Host:  192.168.1.2
hostname lab-rtr02
</code></pre>
<p>You inner loop is breaking, but in  the second loop of the outer for loop, it is starting all over again. That is why your hostname never changes.</p>
<pre><code>ipaddress = ['192.168.1.1', '192.168.1.2']
nhostname = ['lab-sw01', 'lab-rtr02']
for i in ipaddress:
    print ("Now accessing the device: ", i)
    print("Host: ",dev)
    for j in nhostname: #In every looping of the outer loop it will access the first element of the nhostname
        print ("Hostname :", j)
        break
</code></pre>
<p>I think your code should be -</p>
<pre><code>ipaddress = ['192.168.1.1', '192.168.1.2']
nhostname = ['lab-sw01', 'lab-rtr02']
for i,j in zip(ipaddress,nhostname):
    print ("Now accessing the device: ", i)
    dev = i.strip()
    tn = telnetlib.Telnet(dev)
    print("Host: ",dev)
    tn.read_until(b"Username:")
    tn.write(user.encode("ascii") + b"\n")
    print ("Hostname :", j)
##  hn = i.strip()
    if password:
        tn.read_until(b"Password: ")
        tn.write(password.encode("ascii") + b"\n")
    tn.write(b"conf t\r\n")
    time.sleep(2)
    tn.write(("hostname " + j + "\n").encode('ascii'))
    time.sleep(2)
    tn.write(b"exit \n")
    tn.write(b"wr mem \n")
    tn.close()
</code></pre>
</div>
<span class="comment-copy">is this indentation how your original code is written? can you check if its correct here?</span>
<span class="comment-copy">I don't see any way that <code>break</code> isn't executed. Also, your loop probably should be <code>for j in hostname</code> (not <code>nhostname</code>, which isn't defined here).</span>
<span class="comment-copy">Also, do you really want a nested loop? You probably want to zip your two lists and loop together.</span>
<span class="comment-copy">@ParitoshSingh, Yes. thats the original indentation. heres the sample config posted on different forum thanks...<a href="https://python-forum.io/Thread-Nested-for-loop-issue-always-using-index-0?pid=67107#pid67107" rel="nofollow noreferrer">python-forum.io/…</a></span>
<span class="comment-copy">@busybear, break is executed after the loop for j. also there's been a typoerror..should be nhostname(modified the post).                                                            For now, the only thing I know is nested loop, im not familiar with zip which loop the list together but I'll review that one. thanks for sharing</span>
<span class="comment-copy">Hi @walid Da. , Thanks for ur response. But the result its inputing the number 0.      Here's the print output:              Now accessing the device: 192.168.137.50                                                      Host: 192.168.137.50                                                                                Hostname : 0</span>
<span class="comment-copy">Hi @Walid Da., Thanks again its now working. Please correct me if my understanding is wrong. From the change we put the list to i variable, that list starts from range 0 till the end/length under ipaddress list..... Now for the hostname we directly put it to the operation which is tn.write...question with this command [i] in hostname does it mean it copies/use the indexing based on i which ipaddress list was linked? also we automatically strip the brackets on hostname list? thanks</span>
<span class="comment-copy">Actually the i is just an index that allow you to access the elements in the two arrays . we are using the same because both arrays has the same length.</span>
<span class="comment-copy">Thanks for your help</span>
<span class="comment-copy">Yes, I put the break.. but it loop until it execute all the hostname list which not y target...sequence of the loop should be ipaddress then hostname then back to ipaddress. Thanks</span>
<span class="comment-copy">In that case you don't even need two loops. Simply make one for-loop which iterates over the indeces instead of the items in the list or use the zip function.</span>
<span class="comment-copy">copy. Thank you</span>
<span class="comment-copy">This works too. Nice.. learned a new method :)..  In this zip we aggregate multiple list that will be assigned in separate variable.? ...........................................................Another basic question.. supposed to be when we print the list ex. print(ipaddress) before for loop we see the elements with bracket and comma... does assigning it to new variable ex. i will convert it to string something like that?? Thanks</span>
<span class="comment-copy">@searching1 <a href="https://docs.python.org/3.3/library/functions.html#zip" rel="nofollow noreferrer">docs.python.org/3.3/library/functions.html#zip</a></span>
<span class="comment-copy">@searching1 <a href="https://docs.python.org/3/tutorial/datastructures.html#looping-techniques" rel="nofollow noreferrer">docs.python.org/3/tutorial/…</a></span>
<span class="comment-copy">Thanks @bitto, Will review that.</span>
<span class="comment-copy">@searching1 All the best.</span>
