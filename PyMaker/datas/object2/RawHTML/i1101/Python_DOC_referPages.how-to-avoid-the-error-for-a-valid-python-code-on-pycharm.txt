<div class="post-text" itemprop="text">
<p>This is my code:  </p>
<pre><code>from typing import Any, NamedTuple, Mapping, Optional
class Myclass(NamedTuple):
    my_tenant_id: str
    my_firstname_name: str
    my_iphone_version: int
    my_otherdetails: Optional[Mapping]
</code></pre>
<p>Python 3.6.6 says </p>
<blockquote>
<p>Unresolved reference </p>
</blockquote>
<p>at every line wherever <code>:</code> appears</p>
</div>
<div class="post-text" itemprop="text">
<p>If you wish to use type annotation, you'll have to assign the value as well. </p>
<pre><code>my_tenant_id: str = ""
my_first_name: str = ""
</code></pre>
<p>python cannot predefine a variable without assigning values.</p>
<p><strong>Update</strong>: It seems python's type annotation allows declaration of class variables without values. 
<a href="https://docs.python.org/3/library/typing.html#typing.NamedTuple" rel="nofollow noreferrer">https://docs.python.org/3/library/typing.html#typing.NamedTuple</a></p>
</div>
<span class="comment-copy">Are you sure that you are using python 3.6.6? I had to set python3.6 in environment settings for it to work</span>
<span class="comment-copy">please post a proper MCVE - there's nothing named "NamedTuple" in the stdlib.</span>
<span class="comment-copy">I am using Python 3.6.6 as well as tried on 3.6.7 on Pycharm.It says Unresolved Reference despite me importing from typing import Any, NamedTuple, Mapping, Optional</span>
<span class="comment-copy">from typing import Any, NamedTuple, Mapping, Optional class Myclass(NamedTuple):     my_tenant_id: str     my_firstname_name: str     my_iphone_version: int     my_otherdetails: Optional[Mapping]</span>
<span class="comment-copy">I cannot reproduce your problem on 3.6.7.</span>
<span class="comment-copy">This is a <i>class</i> definition, not a variable definition. The posted code is valid.</span>
<span class="comment-copy">Oh that is new for me. It seems you are correct. I read previously that pythons' type annotation is just for syntactic sugar. It doesn't add any new feature. But apparently in this case it does. Without <code>: str</code> python complains that the variable is undefined, but with <code>: str</code> it doesn't.</span>
