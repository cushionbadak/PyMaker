<div class="post-text" itemprop="text">
<p>I wish to replace character <code>'/'</code> when occurred in a certain pattern (preceded and followed by a character) with <code>""</code>.</p>
<p>Example</p>
<ol>
<li><p><code>"a/b b/c"</code> should be replaced to  <code>"ab bc"</code></p></li>
<li><p><code>"a/b python/Java"</code> should be replaced to  <code>"ab python/Java"</code></p></li>
</ol>
<p>While, I know how to substitute using regex <code>re.sub("/","","a/b python")</code>, the problem is, that substitution needs to be done only in specific parts of the string.</p>
<p>Any help here will be appreciated.
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>This simplifies and expands on <a href="https://stackoverflow.com/users/9624435/code-maniac">Code Maniac's</a> comment:</p>
<p>You can replace a found pattern using <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">re.sub</a></p>
<pre><code>import re

regex = r"(\b\w)\/(\w\b)" # do not capture the /

test_str = """a/b b/c
a/b python/Java"""

subst = r"\1\2"           # replace with 1st and 2nd capture group
result = re.sub(regex, subst, test_str, flags=re.MULTILINE)

if result:
    print (result)
</code></pre>
<p>As pattern <code>r"(\b\w)\/(\w\b)"</code> you define a word boundary + 1 word character followed by <code>\</code> followed by 1 more word character followed by a word boundary. You capture it as 1. and 2. group - the <code>\</code>
 is not captured.</p>
<p>You replace each match by the captured groups before/after <code>/</code>.</p>
<p>Output:</p>
<pre><code>ab bc
ab python/Java
</code></pre>
<p>Test: <a href="https://regex101.com/r/WI0Wg3/1" rel="nofollow noreferrer">https://regex101.com/r/WI0Wg3/1</a></p>
</div>
<div class="post-text" itemprop="text">
<p>What you might do is to first match the pattern with a 1+ characters, <code>/</code>, 1+ characters between double quotes. Then because the pattern matches, you could split the string and check if then item has a string length of 3.</p>
<p>If it does, use map and replace the <code>/</code> with an empty string and reconstruct the string.</p>
<p>Match the full pattern:</p>
<pre><code>"\w+\/\w+(?: \w+\/\w+)*"
</code></pre>
<p><a href="https://regex101.com/r/nDUtqj/1/" rel="nofollow noreferrer">Regex demo</a> | <a href="https://ideone.com/MTOoqH" rel="nofollow noreferrer">Python demo</a></p>
<p>For example:</p>
<pre><code>import re

regex = r"\"\w+\/\w+(?: \w+\/\w+)*\""
test_str = ("\"a/b b/c\"\n"
    "\"a/b python/Java\"")
matches = re.findall(regex, test_str, re.MULTILINE)

for match in matches:
    res = map(lambda s: s.replace("/", "") if len(s) == 3 else s, match.strip("\"").split())
    print('"{0}"'.format(" ".join(res)))
</code></pre>
<p>Result</p>
<pre><code>"ab bc"
"ab python/Java"
</code></pre>
</div>
<span class="comment-copy">check this <a href="https://regex101.com/r/nASBji/1/" rel="nofollow noreferrer">regex101.com/r/nASBji/1</a></span>
