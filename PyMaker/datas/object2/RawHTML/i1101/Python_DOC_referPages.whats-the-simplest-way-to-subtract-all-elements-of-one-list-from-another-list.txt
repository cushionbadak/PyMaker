<div class="post-text" itemprop="text">
<p>Given <code>list1</code> = <code>[1,2,2,3]</code>, <code>list2</code> = <code>[1,2]</code>, what's the simplest way to subtract all element of list2 from list1 to get list <code>list3</code> = <code>[2,3]</code> </p>
<p>It seems sum work well for two lists but subtraction doesn't. </p>
<p>To clarify: Order doesn't matter. L2 is a subset of L1. Duplicates need to be kept. Therefore can't use <code>set</code>. </p>
<pre class="lang-none prettyprint-override"><code>&gt;&gt;&gt; [1,2,2,3]+[1,2,3]
[1, 2, 2, 3, 1, 2, 3]

&gt;&gt;&gt; [1,2,2,3]-[1,2]
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: unsupported operand type(s) for -: 'list' and 'list'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try using <code>remove</code>:</p>
<pre><code>list1 = [1,2,2,2,3]
list2 = [1,2,2]

[list1.remove(i) for i in list2] 
list1
</code></pre>
<p>Output:</p>
<pre><code>[2, 3]
</code></pre>
<h3>Update without list comprehension, using standard for loops.</h3>
<pre><code>for i in list2:
    list1.remove(i)
list1
</code></pre>
<p>Output:</p>
<pre><code>[2, 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">collections.Counter</a> and a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>from collections import Counter

list1 = [1, 2, 2, 2, 3]
list2 = [1, 2, 2]

counts = Counter(list2)
result = [l for l in list1 if counts.get(l, 0) == 0 or counts.subtract((l,))]

print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[2, 3]
</code></pre>
<p>The list comprehension is <em>equivalent</em> to:</p>
<pre><code>result = []
for l in list1:
    if counts.get(l, 0) == 0 or counts.subtract((l,)):
        result.append(l)
</code></pre>
<p>The tricky part here is the statement <code>counts.get(l, 0) == 0 or counts.subtract((l,))</code>. The <code>counts.subtract((l,))</code> means subtract 1 from the count of <code>l</code> and the return value of the expression is <code>None</code>, the fact that <code>None</code> is a boolean-like value (that evals to <code>False</code>) allows to use it a single <code>or</code> expression. So the above or will only be <code>True</code> when <code>counts.get(l, 0) == 0</code>.  </p>
</div>
<div class="post-text" itemprop="text">
<p>This is how I would do it:</p>
<pre><code>def remove_elems(l1, l2):
    removals = set(l2)
    result = []
    for elem in l1:
        if elem in removals:
            removals.remove(elem)
        else:
            result.append(elem)
    return result

l1 = [1,2,2,3]
l2 = [1,2]

print(remove_elems(l1, l2))  # -&gt; [2, 3]
</code></pre>
</div>
<span class="comment-copy">This doesn't make sense. <code>+</code> <i>concatenates</i> the lists</span>
<span class="comment-copy">@timgeb I'm not sure that's a good dupe.  The answers there all seem to rely on <code>set</code> and don't preserve the multiplicity of the lists.  If anything, this might be <code>list((Counter(l1) - Counter(l2)).elements())</code>, but that won't preserve order.</span>
<span class="comment-copy">I think you can use <code>remove</code> in this situation.  The <code>set</code> doesn't work here.  Try this instead: <code>[list1.remove(i) for i in list2]</code> <code>list1</code></span>
<span class="comment-copy">OP doesnt want to get the difference between 2 lists, this doesn't appear to be a dup</span>
<span class="comment-copy">@roganjosh <code>remove</code> removes the first instance of a value. Per docstring "L.remove(value) -&gt; None -- remove first occurrence of value."</span>
<span class="comment-copy">A follow up question not so relevant to the original problem. Why directly run "list.remove(i) for i in list2" in terminal without the [ ] generate me an error?   &gt;&gt;&gt; list1 = [1,2,2,2,3] &gt;&gt;&gt; list2 = [1,2,2] &gt;&gt;&gt; [list1.remove(i) for i in list2] [None, None, None] &gt;&gt;&gt; list1 [2, 3] &gt;&gt;&gt; list1 = [1,2,2,2,3] &gt;&gt;&gt; list.remove(i) for i in list2   File "&lt;stdin&gt;", line 1     list.remove(i) for i in list2                      ^ SyntaxError: invalid syntax</span>
<span class="comment-copy">Oh... you the [] denotes list comprehension which is a way of doing a loop.  To re-write that not using list comprehension will be as follows:  <code>for i in list2:</code> <code>list1.remove(i)</code></span>
<span class="comment-copy">in python shell, i input:  list1.remove(i) for i in list2, without the [], it returns a syntax error.  just curious why</span>
<span class="comment-copy"><a href="https://www.pythonforbeginners.com/basics/list-comprehensions-in-python" rel="nofollow noreferrer">Here</a>, this can help you! List comprehension can be tricky with beginners :)</span>
<span class="comment-copy">The OP wants a new list returned, <code>list3</code>â€”modifying <code>list1</code> instead isn't the quite same thing and may be unacceptable.</span>
