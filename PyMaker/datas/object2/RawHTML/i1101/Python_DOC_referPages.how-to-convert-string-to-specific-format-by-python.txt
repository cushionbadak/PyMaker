<div class="post-text" itemprop="text">
<p>How to convert string to specific format by python?</p>
<p>original string like this:</p>
<pre><code>"['13.85,16.60', '12.85,17.46', '17.85,16.42']"  
</code></pre>
<p>want to convert to this format:</p>
<pre><code>"[(13.85,16.60), (12.85,17.46), (17.85,16.42)]"
</code></pre>
<p>or this format is also fine:</p>
<pre><code>"[[13.85,16.60], [12.85,17.46], [17.85,16.42]]"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this (assuming a current Python 3 version) using <a href="http://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a>:</p>
<pre><code>&gt;&gt;&gt; s = "['13.85,16.60', '12.85,17.46', '17.85,16.42']"
&gt;&gt;&gt; import ast
&gt;&gt;&gt; new_s = "[" + ", ".join(f"({item})" for item in ast.literal_eval(s)) + "]"
&gt;&gt;&gt; new_s
'[(13.85,16.60), (12.85,17.46), (17.85,16.42)]'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The below does what you ask:</p>
<pre><code>str([[eval(y) for y in x.split(',')] for x in eval(a)])

&gt;&gt; '[[13.85, 16.6], [12.85, 17.46], [17.85, 16.42]]'
</code></pre>
<p>Be careful with <a href="https://stackoverflow.com/questions/1832940/why-is-using-eval-a-bad-practice">eval</a> though!</p>
</div>
<span class="comment-copy">What have you tried and what exactly is the problem with it?</span>
<span class="comment-copy">The original purpose is to get pair of <code>13.85,16.60</code>, <code>12.85,17.46</code>, and <code>17.85,16.42</code> with the index of list. When convert to the specific format, I can use index of list, for example: using index [0] to get <code>[13.85,16.60]</code> and using index [0][0] to get <code>13.85</code>. But the original string seems failed to achieve that.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1894269/convert-string-representation-of-list-to-list">Convert string representation of list to list</a></span>
<span class="comment-copy">I want to replace <code>' '</code> to <code>( )</code> or <code>[ ]</code>, your solution still has <code>' '</code></span>
<span class="comment-copy">edited my answer to correct that</span>
