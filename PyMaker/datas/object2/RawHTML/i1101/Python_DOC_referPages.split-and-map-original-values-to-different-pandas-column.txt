<div class="post-text" itemprop="text">
<p>I would like to map a function that splits names with the help of the <code>nameparser</code> package in python. </p>
<p>The function I use is the following:</p>
<pre><code>def extract_parts(name):
    first, middle, last = (HumanName(name)).first,(HumanName(name)).middle, (HumanName(name)).last
    return first, middle, last
</code></pre>
<p>And the dataframe would be like the following for example with the <code>NAMES</code> column that contains the names that need to be split with the <code>nameparser</code> package.</p>
<pre><code>ID | NAMES                    | column
1  | Ben Jerry                | I
2  | John Jack Joe            | I 
3  | Dr. Amelia von Lugenwitz | I
4  | Cristian Maria de Angel  | I
5  | The CBA Company          | C
6  | FBPTQ                    | C
</code></pre>
<p>And I loop the function and try to map it, but it only returns the last value. I guess it makes sense. But <code>.apply()</code> did not work, or I don't know how to apply it properly.</p>
<pre><code>for index in range(len(file)):
    if file["column"][index] == "A":
        try:
            file["COLUMN1"], file["COLUMN2"], file["COLUMN3"] = extract_parts(file["ORIGINAL"][index])
        except TypeError as e:
            print(e)
</code></pre>
<p>And it should return a dataframe:</p>
<pre><code>ID | COLUMN1 | COLUMN2 | COLUMN3
1  | Ben     |         | Jerry
2  | John    | Jack    | Joe
3  | Amelia  |         | von Lugenwitz
4  | Cristian| Maria   | de Angel
</code></pre>
<p>Whereby <code>COLUMN1</code> represent the First name that is extracted by nameparser HumanName(), <code>COLUMN2</code> the Middle Names and <code>COLUMN3</code> the Last name.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming your dataframe has a <code>names</code> column, for example:</p>
<pre><code>                      names
0                 Ben Jerry
1             John Jack Joe
2  Dr. Amelia von Lugenwitz
3   Cristian Maria de Angel
</code></pre>
<p>You could use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">zip</a> to unpack the values into multiple columns:</p>
<pre><code>df['first'], df['middle'], df['last'] = zip(*df['names'].apply(extract_parts))
</code></pre>
</div>
<span class="comment-copy">Please share how are the names stored. A <code>DataFrame</code>?</span>
<span class="comment-copy">Yes, I have added that they are stored in a Pandas column</span>
<span class="comment-copy">@yatu that is what the function extract parts do</span>
<span class="comment-copy">I believe the name_parser take a guess and leave one of the two empty</span>
<span class="comment-copy">the nameparser would know what the first and last name is. You can try it out yatu..</span>
<span class="comment-copy">Do I use this in the for loop instead of what I have after the try statement? Would I do something with the index also?</span>
<span class="comment-copy">No need to use a <code>for</code> loop. Just do the line above one-time, change <code>df</code> to the name of your dataframe</span>
<span class="comment-copy">Doesn't work. You didn't take into account the if statement, so I get the following error: <code>TypeError: expected string or bytes-like object</code>. And when I use a try-except, it doesn't create the columns</span>
<span class="comment-copy">@mrPy It will be better if you add a full example on your question, I mean a small sample of your original dataframe</span>
<span class="comment-copy">@mrPy You have <code>if file["column"][index] == "A"</code> what is the relation with the "names" column?</span>
