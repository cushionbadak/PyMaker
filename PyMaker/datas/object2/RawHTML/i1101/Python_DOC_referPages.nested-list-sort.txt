<div class="post-text" itemprop="text">
<p>How do I append two values to a key in dictionary</p>
<p>It is throwing error str object has no attribute append</p>
<pre><code>score_list={}
for _ in range(int(input())):
    score=float(input())
    name=input()
    if score in score_list:
        score_list[score].append(name)
    else:
        score_list[score]=name
new_list=[]
for score in score_list:
    new_list.append([score,score_list[score]])
new_list.sort()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to add a <code>list</code> to your dict - not the string directly. Three ways I know of, from worst to best. </p>
<hr/>
<p>You can either use a normal dict and change your code to </p>
<blockquote>
<pre><code>score_list={}
for _ in range(int(input())):
    score=float(input())
    name=input()
    if score in score_list:
        score_list[score].append(name)
    else:
</code></pre>
</blockquote>
<pre><code>        score_list[score] = [name]  # add as 1-elem list
</code></pre>
<hr/>
<p>or use <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer"><code>dict.setdefault(key,defaultvalue)</code></a>:</p>
<blockquote>
<pre><code>score_list={}
for _ in range(int(input())):
    score=float(input())
    name=input()
</code></pre>
</blockquote>
<pre><code>    k = score_list.setdefault(score,[]) # create key if needed with empty list
    k.append(name)
</code></pre>
<hr/>
<p>or use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict(list)</code></a>.</p>
<pre><code>score_list=defaultdict(list)
</code></pre>
<blockquote>
<pre><code>for _ in range(int(input())):
    score=float(input())
    name=input()
</code></pre>
</blockquote>
<pre><code>    score_list[score].append(name)  # defaultdict handles list creation for you
</code></pre>
<p>The last method is most performant - <code>setdefault(score,[])</code> creates lots of empty default-lists that are not used if the key already exists.</p>
<hr/>
<p>If you need a top n result, you can create it directly from the <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer">dictionaries item()s</a>:</p>
<pre><code>n = 5
top_n = sorted(score_list.items(), reverse=True) [:n]  # sorts by max score first 
# top_n  is a list of tuples:  [ (10000,["a","b","c"]) , (9999, ["b"]), ... ] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understood correctly, you need to change the line:</p>
<pre><code>score_list[score]=name
</code></pre>
<p>to:</p>
<pre><code>score_list[score]=[name]
</code></pre>
<p>In your current version you are assigning the string <code>name</code> to <code>score_list[score]</code>, so you need to change to a list hence the change.</p>
</div>
<span class="comment-copy">Could you add your expected output? Is not clear what do you want to sort.</span>
<span class="comment-copy">the  other answer was deleted, the link can be removed.</span>
