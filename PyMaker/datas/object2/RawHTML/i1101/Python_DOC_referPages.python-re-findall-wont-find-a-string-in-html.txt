<div class="post-text" itemprop="text">
<p>re.findall won't find a string in html. Here is my code:</p>
<pre><code>def get_id(html_source):
    the_button = re.findall("preview.aspx?id=1692003076", html_source)
    print(the_button)
</code></pre>
<p>When I <code>print(html_source)</code> I get the html, which by sight contains "preview.aspx?id=1692003076". re.search also failed to find the string. </p>
<p>I have another re.findall in my code, and it works fine:</p>
<pre><code>id_matches = re.findall('&lt;input type="checkbox" id="\d+"', html_source)
</code></pre>
<p>Any idea why it doesn't work?</p>
</div>
<div class="post-text" itemprop="text">
<p>Note that the "?" is a special character in regular expressions. You need to escape it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try escaping your special characters in your regex: <code>.</code>, <code>?</code>. Or, use <code>html_source.find("preview.aspx?id=1692003076")</code> to find the first instance of that specific string.</p>
<p>If that doesn't work, post a sample of the HTML in your question so we can reproduce this problem.</p>
</div>
<span class="comment-copy">Your <code>'?'</code> is probably causing your issue. See <a href="https://docs.python.org/3.7/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">docs</a> for more info on special characters.</span>
<span class="comment-copy">if you're searching for a string, you shouldn't use <code>re</code>.  <code>.</code>, <code>?</code>, and others are special characters in re.  If you really want to use regex, escape the literal string (<a href="https://docs.python.org/3/library/re.html#re.escape" rel="nofollow noreferrer">docs.python.org/3/library/re.html#re.escape</a>).  No point in fixing just the <code>?</code> - fix the algorithm, not the data</span>
<span class="comment-copy">You're right. Why doesn't python flag that?</span>
<span class="comment-copy">@rachelvsamuel How should python distinguish between someone using the feature correctly or incorrectly? A "?" is a valid regex operator so the code is correct, just not what you wanted</span>
