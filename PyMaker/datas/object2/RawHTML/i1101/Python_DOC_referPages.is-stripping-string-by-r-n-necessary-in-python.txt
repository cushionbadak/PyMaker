<div class="post-text" itemprop="text">
<p>In Java, it's necessary to strip with <code>\r\n</code>, e.g. <a href="https://stackoverflow.com/questions/33012113/split-r-n-is-not-splitting-my-string-in-java">split( "\r\n") is not splitting my string in java</a></p>
<p><strong>But is <code>\r\n</code> necessary in Python?</strong> Is the following true?</p>
<pre><code>str.strip() == str.strip('\r\n ')
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>Return a copy of the string with the leading and trailing characters
  removed. The chars argument is a string specifying the set of
  characters to be removed. If omitted or None, the chars argument
  defaults to removing whitespace. The chars argument is not a prefix or
  suffix; rather, all combinations of its values are stripped</p>
</blockquote>
<p>From this <a href="https://github.com/python/cpython/blob/e42b705188271da108de42b55d9344642170aa2b/Lib/test/string_tests.py#L775" rel="nofollow noreferrer">CPython test</a>, <code>str.strip()</code> seems to be stripping:</p>
<pre><code> \t\n\r\f\v
</code></pre>
<p><strong>Anyone can point me to the code in CPython that does the string stripping?</strong> </p>
</div>
<div class="post-text" itemprop="text">
<p>Are you looking for these lines?</p>
<p><a href="https://github.com/python/cpython/blob/e42b705188271da108de42b55d9344642170aa2b/Objects/unicodeobject.c#L12222-L12247" rel="nofollow noreferrer">https://github.com/python/cpython/blob/e42b705188271da108de42b55d9344642170aa2b/Objects/unicodeobject.c#L12222-L12247</a></p>
<pre><code>#define LEFTSTRIP 0
#define RIGHTSTRIP 1
#define BOTHSTRIP 2

/* Arrays indexed by above */
static const char *stripfuncnames[] = {"lstrip", "rstrip", "strip"};

#define STRIPNAME(i) (stripfuncnames[i])

/* externally visible for str.strip(unicode) */
PyObject *
_PyUnicode_XStrip(PyObject *self, int striptype, PyObject *sepobj)
{
    void *data;
    int kind;
    Py_ssize_t i, j, len;
    BLOOM_MASK sepmask;
    Py_ssize_t seplen;

    if (PyUnicode_READY(self) == -1 || PyUnicode_READY(sepobj) == -1)
        return NULL;

    kind = PyUnicode_KIND(self);
    data = PyUnicode_DATA(self);
    len = PyUnicode_GET_LENGTH(self);
    seplen = PyUnicode_GET_LENGTH(sepobj);
    sepmask = make_bloom_mask(PyUnicode_KIND(sepobj),
                              PyUnicode_DATA(sepobj),
                              seplen);

    i = 0;
    if (striptype != RIGHTSTRIP) {
        while (i &lt; len) {
            Py_UCS4 ch = PyUnicode_READ(kind, data, i);
            if (!BLOOM(sepmask, ch))
                break;
            if (PyUnicode_FindChar(sepobj, ch, 0, seplen, 1) &lt; 0)
                break;
            i++;
        }
    }

    j = len;
    if (striptype != LEFTSTRIP) {
        j--;
        while (j &gt;= i) {
            Py_UCS4 ch = PyUnicode_READ(kind, data, j);
            if (!BLOOM(sepmask, ch))
                break;
            if (PyUnicode_FindChar(sepobj, ch, 0, seplen, 1) &lt; 0)
                break;
            j--;
        }

        j++;
    }

    return PyUnicode_Substring(self, i, j);
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Essentially:</p>
<pre><code>str.strip() == str.strip(string.whitespace) == str.strip(' \t\n\r\f\v') != str.strip('\r\n')
</code></pre>
<p>Unless you are explicitly trying to remove ONLY newline characters, <code>str.strip()</code> and <code>str.strip('\r\n')</code> are different.</p>
<pre><code>&gt;&gt;&gt; '\nfoo\n'.strip()
'foo'
&gt;&gt;&gt; '\nfoo\n'.strip('\r\n')
'foo'
&gt;&gt;&gt; '\r\n\r\n\r\nfoo\r\n\r\n\r\n'.strip()
'foo'
&gt;&gt;&gt; '\r\n\r\n\r\nfoo\r\n\r\n\r\n'.strip('\r\n')
'foo'
&gt;&gt;&gt; '\n\tfoo\t\n'.strip()
'foo'
&gt;&gt;&gt; '\n\tfoo\t\n'.strip('\r\n')
'\tfoo\t'
</code></pre>
<p>This all seems fine, but note that if there is whitespace (or any other character) between a newline and the start or end of a string, <code>.strip('\r\n')</code> won't remove the newline.</p>
<pre><code>&gt;&gt;&gt; '\t\nfoo\n\t'.strip()
'foo'
&gt;&gt;&gt; '\t\nfoo\n\t'.strip('\r\n')
'\t\nfoo\n\t'
</code></pre>
</div>
<span class="comment-copy">It's unnecessary unless you want to keep other whitespace characters.</span>
