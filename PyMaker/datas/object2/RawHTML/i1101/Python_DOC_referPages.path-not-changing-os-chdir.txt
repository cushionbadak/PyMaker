<div class="post-text" itemprop="text">
<p>For the last part #print(new_path), the output is "None". Can one explain me in detail the reason for the occurrence of this error. Thank you in Advance.</p>
<pre><code>import os
def rename_files():
    file_list = os.listdir(r"C:\Users\NISARG\Desktop\WinPython\prank")
    #print(file_list)

    saved_path= os.getcwd()
    print(saved_path)

    new_path= os.chdir(r"C:\Users\NISARG\Desktop\WinPython\prank")
    print(new_path)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>os.chdir(r"C:\Users\NISARG\Desktop\WinPython\prank")    
new_path = os.getcwd()
print(new_path)
</code></pre>
<p><code>os.chdir</code> operates by side-effect and always returns <code>None</code>. If you want the current working dir after a <code>chdir</code> you must ask for it.</p>
</div>
<div class="post-text" itemprop="text">
<p>That is because <code>os.chdir()</code> does not return any value. Below is the fix.</p>
<pre><code>import os

def rename_files():
    file_list = os.listdir(r"H:\RishikeshAgrawani\Projects\GenWork\Python3")
    #print(file_list)

    saved_path= os.getcwd()
    print(saved_path) # H:\RishikeshAgrawani\Projects\GenWork\Python3

    os.chdir(r"H:\RishikeshAgrawani\Projects")
    new_path = os.getcwd()
    print(new_path)   # H:\RishikeshAgrawani\Projects

rename_files()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/os.html#os.chdir" rel="nofollow noreferrer"><code>os.chdir()</code></a> returns <code>None</code> in all cases.  </p>
<p>If you want to know which directory your program is currently in, you must call <a href="https://docs.python.org/3/library/os.html#os.getcwd" rel="nofollow noreferrer"><code>os.getcwd()</code></a>. </p>
<p>Additionally, if you want to make sure your program switches back to the original working directory safely, you could use a <a href="https://docs.python.org/3/library/contextlib.html#contextlib.contextmanager" rel="nofollow noreferrer">contextlib.contextmanager</a>:</p>
<pre><code>import os
from contextlib import contextmanager

path = "/home"

# Save original working directory, assuming its / here
owd = os.getcwd()

@contextmanager
def change_working_directory(directory):
    try:
        os.chdir(directory)
        yield directory
    except FileNotFoundError:
        yield
    finally:
        os.chdir(owd)

print("Before context manager: %s" % owd)
with change_working_directory(path) as directory:
    print("Inside context manager: %s" % directory)

print("After context manager: %s" % owd)
</code></pre>
<p>Which will show the following behaviour:</p>
<pre><code>Before context manager: /
Inside context manager: /home
After context manager: /
</code></pre>
<p><strong>Explanation of context manager:</strong></p>
<p>Which switches to the directory in the <code>try</code> block, does something with the changed directory(in this case just print it), then switch back to the current working directory in the <code>finally</code> block when the context manager exits. The <a href="https://docs.python.org/3/library/exceptions.html#FileNotFoundError" rel="nofollow noreferrer">FileNotFoundError</a> exception is also raised in the <code>except</code> block if the directory doesn't exist, and yields <code>None</code> from the generator. </p>
</div>
<span class="comment-copy">It's because you are creating already exist path.</span>
<span class="comment-copy">@vipulprajapati: no, that's not it. No directories are being created.</span>
