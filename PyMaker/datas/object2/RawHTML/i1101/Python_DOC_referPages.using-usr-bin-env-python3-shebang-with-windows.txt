<div class="post-text" itemprop="text">
<p>I'm trying to run a Python script from the command line as a command on Windows -- so no usage of "Python" or ".py". If my script is named "testing.py", I am attempting to make this name into a command and call "testing" from the command line.</p>
<p>Going through the docs it seems I need to use this shebang <code>#!/usr/bin/env python</code> as long as I have Python in my PATH.</p>
<p><a href="https://docs.python.org/3/using/windows.html#shebang-lines" rel="nofollow noreferrer">https://docs.python.org/3/using/windows.html#shebang-lines</a></p>
<p>I also have the script folder in my PATH, so something like 
"testing.py" is currently working from the command line.  </p>
<p>According to the docs and this tutorial, 
<a href="https://dbader.org/blog/how-to-make-command-line-commands-with-python" rel="nofollow noreferrer">https://dbader.org/blog/how-to-make-command-line-commands-with-python</a></p>
<p>I should be able to evoke my Python script just by "testing" if I have the proper paths within PATH and the above shebang. However, I can't seem to get the script running withouth adding ".py".</p>
</div>
<div class="post-text" itemprop="text">
<p>No, Windows does not support shebang lines.</p>
<p>The documentation you've linked relates to the <code>py</code> launcher installed by Python, which can interpret various shebang lines to choose a Python version to run a script with.</p>
<p><code>setuptools</code> is able to generate wrapper .exes for your Python scripts, <a href="https://python-packaging.readthedocs.io/en/latest/command-line-scripts.html" rel="nofollow noreferrer">but it gets a little involved</a> and already assumes you have a package with a <code>setup.py</code> and so on.</p>
<p>Locally, if you really, <em>really</em> need this, you probably could add <code>.py</code> to the <a href="http://environmentvariables.org/PathExt" rel="nofollow noreferrer"><code>PATHEXT</code> environment variable</a>, so the Windows command line looks up <code>.py</code>s like it looks up <code>.exe</code>s (and various others; the current modern default is <code>.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC</code>). However, this will naturally not scale for distributing apps, as all of your users would need to set that too.</p>
<p>My recommendation is to stick with just that boring old <code>python testing.py</code>, really.</p>
</div>
