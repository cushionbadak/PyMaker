<div class="post-text" itemprop="text">
<p>My new project is to extract data from the <a href="https://www.naxos.com/education/glossary.asp" rel="nofollow noreferrer">Naxos Glossary of Musical Terms,</a> a great resource whose text data I want to process and extract to a database to use on another, simpler website I'll create.</p>
<p>My only problem is awful XHTML formatting. The 
<a href="http://validator.w3.org/check?uri=https%3A%2F%2Fwww.naxos.com%2Feducation%2Fglossary.asp&amp;charset=%28detect%20automatically%29&amp;doctype=Inline&amp;group=0&amp;st=1&amp;user-agent=W3C_Validator%2F1.3%20http%3A%2F%2Fvalidator.w3.org%2Fservices" rel="nofollow noreferrer">W3C XHTML validation</a> raises 318 errors and 54 warnings. Even a <a href="http://infohound.net/tidy/tidy.pl?_function=tidy&amp;_url=https%3A%2F%2Fwww.naxos.com%2Feducation%2Fglossary.asp&amp;_html=&amp;_file=&amp;x=9&amp;y=24&amp;alt-text=&amp;clean=y&amp;doctype=auto&amp;drop-empty-paras=y&amp;fix-backslash=y&amp;fix-bad-comments=y&amp;fix-uri=y&amp;join-styles=y&amp;lower-literals=y&amp;ncr=y&amp;new-blocklevel-tags=&amp;new-empty-tags=&amp;new-inline-tags=&amp;new-pre-tags=&amp;output-xml=y&amp;quote-ampersand=y&amp;quote-nbsp=y&amp;indent=auto&amp;indent-spaces=2&amp;tab-size=4&amp;wrap=90&amp;wrap-asp=y&amp;wrap-jste=y&amp;wrap-php=y&amp;wrap-sections=y&amp;ascii-chars=y&amp;char-encoding=ascii&amp;input-encoding=latin1&amp;output-bom=auto&amp;output-encoding=ascii&amp;_output=warn" rel="nofollow noreferrer">HTML Tidier</a> I found can't fix it all.</p>
<p>I'm using Python 3.67 and the page I'm parsing was ASP. I've tested LXML and Python XML modules, but both fail.</p>
<p>Can anyone suggest any other tidiers or modules? Or will I have to use some sort of raw text manipulation (yuck!)? </p>
<p>My code:</p>
<p>LXML:</p>
<pre><code>from lxml import etree

file = open("glossary.asp", "r", encoding="ISO-8859-1")
parsed = etree.parse(file)
</code></pre>
<p>Error:</p>
<pre><code>  Traceback (most recent call last):
  File "/media/skuzzyneon/STORE-1/naxos_dict/xslt_test.py", line 4, in &lt;module&gt;
    parsed = etree.parse(file)
  File "src/lxml/etree.pyx", line 3426, in lxml.etree.parse
  File "src/lxml/parser.pxi", line 1861, in lxml.etree._parseDocument
  File "src/lxml/parser.pxi", line 1881, in lxml.etree._parseFilelikeDocument
  File "src/lxml/parser.pxi", line 1776, in lxml.etree._parseDocFromFilelike
  File "src/lxml/parser.pxi", line 1187, in lxml.etree._BaseParser._parseDocFromFilelike
  File "src/lxml/parser.pxi", line 601, in lxml.etree._ParserContext._handleParseResultDoc
  File "src/lxml/parser.pxi", line 711, in lxml.etree._handleParseResult
  File "src/lxml/parser.pxi", line 640, in lxml.etree._raiseParseError
  File "/media/skuzzyneon/STORE-1/naxos_dict/glossary.asp", line 25
lxml.etree.XMLSyntaxError: EntityRef: expecting ';', line 25, column 128
&gt;&gt;&gt; 
</code></pre>
<p>Python XML (using the tidied XHTML):</p>
<pre><code>import xml.etree.ElementTree as ET

file = open("tidy.html", "r", encoding="ISO-8859-1")
root = ET.fromstring(file.read())

# Top-level elements
print(root.findall("."))
</code></pre>
<p>Error:</p>
<pre><code>  Traceback (most recent call last):
  File "/media/skuzzyneon/STORE-1/naxos_dict/xslt_test.py", line 4, in &lt;module&gt;
    root = ET.fromstring(file.read())
  File "/usr/lib/python3.6/xml/etree/ElementTree.py", line 1314, in XML
    parser.feed(text)
  File "&lt;string&gt;", line None
xml.etree.ElementTree.ParseError: undefined entity: line 526, column 33
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Lxml likely thinks you're giving it xml that way.
Try it like this:</p>
<pre><code>from lxml import html
from cssselect import GenericTranslator, SelectorError

file = open("glossary.asp", "r", encoding="ISO-8859-1")
doc = html.document_fromstring(file.read())
print(doc.cssselect('title')[0].text_content())
</code></pre>
<p>Also instead of "HTML Tidiers" just open it in chrome and copy the html in the elements panel.</p>
</div>
<span class="comment-copy">Have you tried using the HTMLParser class (which can deal with some kinds of invalid HTML) instead of XMLParser? See eg. this answer for how to use TreeBuilder with HTMLParser to produce an ElementTree from HTML: <a href="https://stackoverflow.com/a/13334529/10186512">stackoverflow.com/a/13334529/10186512</a> (Note that you can also pass your custom HTMLParser in the <code>parser</code> argument to the <code>ElementTree.XML</code> constructor: <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.XML" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a> )</span>
<span class="comment-copy">Can you share the file you're tying to parse? I may have a solution to your problem.</span>
<span class="comment-copy">Just download the webpage I mentioned: <a href="https://www.naxos.com/education/glossary.asp" rel="nofollow noreferrer">naxos.com/education/glossary.asp</a>. All pages, I assume, will have the same formatting, so for the sake of the argument you can help me with one</span>
<span class="comment-copy">As of 25/12: I won't be back until the new year, but after that it'll be normal</span>
