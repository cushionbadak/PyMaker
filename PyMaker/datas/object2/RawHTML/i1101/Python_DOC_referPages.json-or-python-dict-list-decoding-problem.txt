<div class="post-text" itemprop="text">
<p>I have been using the Python script below to try and retrieve and extract some data from Flightradar24, it would appear that it extracts the data in JSON format and will print the data out ok fully using <code>json.dumps</code>, but when I attempt to select the data I want (the status text in this case) using <code>get</code> it gives the following error: </p>
<blockquote>
<p>'list' object has no attribute 'get'</p>
</blockquote>
<p>Is the Data in JSON or a List ? I'm totally confused now. </p>
<p>I'm fairly new to working with data in JSON format, any help would be appreciated! </p>
<p>Script:</p>
<pre><code>import flightradar24
import json

flight_id = 'BA458' 
fr = flightradar24.Api()
flight = fr.get_flight(flight_id)

y = flight.get("data")
print (json.dumps(flight, indent=4))

X= (flight.get('result').get('response').get('data').get('status').get('text'))
print  (X)
</code></pre>
<p>Sample of output data:</p>
<pre><code>{
"result": {
"request": {
"callback": null,
"device": null,
"fetchBy": "flight",
"filterBy": null,
"format": "json",
"limit": 25,
"page": 1,
"pk": null,
"query": "BA458",
"timestamp": null,
"token": null
},
"response": {
"item": {
"current": 16,
"total": null,
"limit": 25
},
"page": {
"current": 1,
"total": null
},
"timestamp": 1546241512,
"data": [
{
"identification": {
"id": null,
"row": 4852575431,
"number": {
"default": "BA458",
"alternative": null
},
"callsign": null,
"codeshare": null
},
"status": {
"live": false,
"text": "Scheduled",
"icon": null,
"estimated": null,
"ambiguous": false,
"generic": {
"status": {
"text": "scheduled",
"type": "departure",
"color": "gray",
"diverted": null
},
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>print(type(variable_name))</code> to see what type it is. The <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>.get(key[,default])</code></a> is not supported on lists - it is supported for <code>dict</code>'s.</p>
<pre><code>X = (flight.get('result').get('response').get('data').get('status').get('text'))
#                                            ^^^^^^^^ does not work, data is a list of dicts
</code></pre>
<p>as <code>data</code> is a list of <code>dict</code>s:</p>
<blockquote>
<pre><code>"data": [          # &lt;&lt;&lt;&lt;&lt;&lt; this is a list
{
"identification": {
"id": null,
"row": 4852575431,
"number": {
"default": "BA458",
"alternative": null
},
"callsign": null,
"codeshare": null
},
"status": {
</code></pre>
</blockquote>
<p>This should work:</p>
<pre><code> X = (flight.get('result').get('response').get('data')[0].get('status').get('text')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The issue, as pointed out by @PatrickArtner, is your <code>data</code> is actually a list rather than a dictionary. As an aside, you may find your code more readable if you were to use a helper function to apply <code>dict.get</code> repeatedly on a nested dictionary:</p>
<pre><code>from functools import reduce

def ng(dataDict, mapList):
    """Nested Getter: Iterate nested dictionary"""
    return reduce(dict.get, mapList, dataDict)

X = ng(ng(flight, ['result', 'response', 'data'])[0], ['status'[, 'text']])
</code></pre>
</div>
<span class="comment-copy">It certainly does work. Thank you.</span>
<span class="comment-copy">Thanks. I'll give that a go. Would be worth it if it makes things easier to pin down the data I want.</span>
