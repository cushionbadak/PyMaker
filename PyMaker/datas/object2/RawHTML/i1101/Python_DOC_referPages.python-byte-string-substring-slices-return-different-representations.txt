<div class="post-text" itemprop="text">
<p>In trying to prune a preceding and trailing bracket - [ and ] - I encountered something unexpected. In the python 3.7 interpreter:</p>
<pre><code>&gt;&gt;&gt; string = [b'0123456789']
&gt;&gt;&gt; string[0][:5]
b'01234'
&gt;&gt;&gt; string[0][0]
48
&gt;&gt;&gt; string[0][:5] == b'01234'
True
&gt;&gt;&gt; string[0][0] == b'0'
False
</code></pre>
<p>This feels to me like an inconsistency. I am new to Python, so, am I interpreting this correctly, is this odd?</p>
</div>
<div class="post-text" itemprop="text">
<p>No, this isn't odd:</p>
<pre><code>&gt;&gt;&gt; type(b'0')
&lt;class 'bytes'&gt;
&gt;&gt;&gt; type(b'0'[0])
&lt;class 'int'&gt;
</code></pre>
<p>So, an <em>element</em> of <code>bytes</code> is an integer. Obviously, an integer cannot equal a <code>bytes</code> object because it's meaningless (how do you compare <code>b'123'</code> and <code>12</code>, for example?).</p>
<p>Quote from the <a href="https://docs.python.org/3/library/stdtypes.html#bytes" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>Since bytes objects are sequences of integers (akin to a tuple), for a bytes object <code>b</code>, <code>b[0]</code> will be an <em>integer</em>, while <code>b[0:1]</code> will be a bytes object of length 1.</p>
</blockquote>
</div>
<span class="comment-copy">Thanks, I interpreted [0] as being equal to [0:1]. Interesting.</span>
