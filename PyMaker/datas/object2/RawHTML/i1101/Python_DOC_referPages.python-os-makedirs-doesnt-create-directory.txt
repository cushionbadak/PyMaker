<div class="post-text" itemprop="text">
<p>For some silly reason, the below works on creating the non-existing directory stored in <code>output_result_dir</code>, but not the non_existing directory stored in <code>output_log_dir</code>. The latter results in a FileNotFound Error with description "[WinError 3] The system cannot find the path specified: 'runpackage1\calculated\logs'"</p>
<pre><code>log_dir = os.path.join(output_dir, 'logs')
output_config_dir = os.path.join(output_dir, 'config')
output_result_dir = os.path.join(output_dir, 'results')
for directory in [output_result_dir, log_dir, output_config_dir]:
    if not os.path.exists(directory):
        os.makedirs(directory)
</code></pre>
<p>Am I missing something really stupid here? I also tried inserting an os.path.abspath around the path to get from relative to full paths, but that didn't help either.</p>
<p>Edit: changed directory from path as some people rightfully pointed out. I actually copied code from two separate functions into one self-contained block here, hence introducing the error. It's not the issue that caused my problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not able to confirm your bug (<a href="https://pyfiddle.io" rel="nofollow noreferrer">https://pyfiddle.io</a> - 3.6):</p>
<pre><code>import os 

for root,dirs,files in os.walk("./"):
    print (root,dirs)
print("")

output_dir = "./temp"
log_dir = os.path.join(output_dir, 'logs')
output_config_dir = os.path.join(output_dir, 'config')
output_result_dir = os.path.join(output_dir, 'results')
for directory in [output_result_dir, log_dir, output_config_dir]:
    os.makedirs(directory)

for root,dirs,files in os.walk("./"):
    print (root,dirs)
</code></pre>
<p>Output:</p>
<pre><code>('./', [])        # before

('./', ['temp'])  # after
('./temp', ['results', 'logs', 'config'])
('./temp/results', [])
('./temp/logs', [])
</code></pre>
<p>Creating the mcve fixed your problem.</p>
<hr/>
<blockquote>
<pre><code>log_dir = os.path.join(output_dir, 'logs')
output_config_dir = os.path.join(output_dir, 'config')
output_result_dir = os.path.join(output_dir, 'results')
for directory in [output_result_dir, log_dir, output_config_dir]:   # using directory
    if not os.path.exists(path):                                    # using path
        os.makedirs(path)                                           # using path
</code></pre>
</blockquote>
<p>You also do not need the guard <code>if not os.path.exists(path):</code> - it is not needed because if the directory already exists - using <code>os.makedirs(path)</code> won't change that provided you give <code>exists_ok=True</code>.</p>
<p>Fix:</p>
<pre><code>log_dir = os.path.join(output_dir, 'logs')
output_config_dir = os.path.join(output_dir, 'config')
output_result_dir = os.path.join(output_dir, 'results')
for directory in [output_result_dir, log_dir, output_config_dir]:   # directory
    os.makedirs(directory, exists_ok=True)                          # directory
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The given code has no errors, you fixed it.</p>
<pre><code>output_dir = '.'
log_dir = os.path.join(output_dir, 'logs')
output_config_dir = os.path.join(output_dir, 'config')
output_result_dir = os.path.join(output_dir, 'results')
for directory in [output_result_dir, log_dir, output_config_dir]:
    if not os.path.exists(directory):
        os.makedirs(directory)
</code></pre>
</div>
<span class="comment-copy">Use <code>directory</code> not <code>path</code></span>
<span class="comment-copy">by creating your <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> you fixed your code --- can't confirm it</span>
<span class="comment-copy">No, I didn't fix my code. It's still giving the same error.</span>
<span class="comment-copy">Turns out the error was produced because (as part of a sync conflict) windows had a lock on a directory that no longer existed on my local PC. So the code was fine from the beginning (apart from me having pulled it together from two different functions and not having renamed a variable), this was just somewhat obscure windows behaviour. Should I:    - close the question    - answer my own (a bit off-topic for future searches based on the title, but it might help people)   - mark one of the given questions as answers (which miss the underlying issue)</span>
<span class="comment-copy">With regard to <code>makedirs</code>, The python 3 syntax is slightly different to when working with existing directories: <code>os.makedirs(name, mode=0o777, exist_ok=False)</code> <a href="https://docs.python.org/3/library/os.html#os.makedirs" rel="nofollow noreferrer">docs.python.org/3/library/os.html#os.makedirs</a></span>
