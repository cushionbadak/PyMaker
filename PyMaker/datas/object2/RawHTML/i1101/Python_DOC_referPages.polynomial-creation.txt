<div class="post-text" itemprop="text">
<p>I'm having problems with an exercise in python, I have to create a function that based on a list will give me a certain polynomial equation for example if given <code>[1,2,3]</code> generates <code>x^2 + 2x + 3</code> and if given <code>[2,2]</code> generates <code>2x + 2</code>. My idea was to make a function that alters a lambda 1 term at a time as shown bellow but I'm not able to make it work. Any suggestions?</p>
<pre><code>def polynomial(coefs):  
    cofLen = len(coefs)  
    ff = lambda x: 0  
    while cofLen &gt; 0:  
        ff += coefs[0]*( x**cofLen)  
        del coefs[0]  

    return ff  

polynomial([1,2,3])  
</code></pre>
<p>The error I get is: <code>NameError: global name 'x' is not defined</code>.</p>
<p>Changing it to </p>
<pre><code>x = 0
def polynomial(coefs):
    global x  
    cofLen = len(coefs)  
    ff = lambda x: 0  
    while cofLen &gt; 0:  
        ff += coefs[0]*( x**cofLen)  
        del coefs[0]  

    return ff  
</code></pre>
<p>changes the error to <code>TypeError: unsupported operand type(s) for +=: 'function' and 'int'</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can not extend a lambda like this. The variable you use inside the lambda only exists in it - that is why you get the first error (<code>NameError: global name 'x' is not defined.</code> on <code>x**cofLen)</code>). If you supply a global x, this still wont work, because you can not add an integer to a lambda. </p>
<p>Instead of incrementally building a lambda, you can use a reversed list of coefficients and <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate()</a> them to get a solution. Enumerate gives you the index into the list which translates to the "power" of x you need. Solution composing the function and calculating one <code>x</code> of it: </p>
<pre><code>def pol(coeff,x): 
    """Calculates the resulting tuple for a polynomial given as coeff list
    anc calculates it at one point of x.

    coeff is a list - most significant exponent first:  [1,2,3] == x^2+2x+3 """

    # create a textual representation
    t = []
    for idx,c in enumerate(coeff[::-1]):
        if c != 0:
            if idx == 0:
                t.append(f"{c}")
            else:
                t.insert(0,f"{f'{c}*' if c != 1 else ''}x{'' if idx==1 else f'^{idx}'}")

    # connect text-parts with '+' and fix '+-' to '-'
    text = '+'.join(t).replace("+-","-")

    # calculate the functions value
    result = sum( x**idx*v for idx,v in enumerate(coeff[::-1]))     

    return  text + f"  (@ x={x}) ",result  

for i in range(10):
     print(*pol([3,1,-4,1,0,-10],i),  sep=" ==&gt; ")
</code></pre>
<p>Output:</p>
<pre><code>3*x^5+x^4-4*x^3+x^2-10  (@ x=0)  ==&gt; -10
3*x^5+x^4-4*x^3+x^2-10  (@ x=1)  ==&gt; -9
3*x^5+x^4-4*x^3+x^2-10  (@ x=2)  ==&gt; 74
3*x^5+x^4-4*x^3+x^2-10  (@ x=3)  ==&gt; 701
3*x^5+x^4-4*x^3+x^2-10  (@ x=4)  ==&gt; 3078
3*x^5+x^4-4*x^3+x^2-10  (@ x=5)  ==&gt; 9515
3*x^5+x^4-4*x^3+x^2-10  (@ x=6)  ==&gt; 23786
3*x^5+x^4-4*x^3+x^2-10  (@ x=7)  ==&gt; 51489
3*x^5+x^4-4*x^3+x^2-10  (@ x=8)  ==&gt; 100406
3*x^5+x^4-4*x^3+x^2-10  (@ x=9)  ==&gt; 180863
</code></pre>
<hr/>
<p>How does the reverse enumeration work?</p>
<pre><code>enumerate ([3, 1, -4, 1, 0, -10][::-1]) gives us:
# values    -10  0  1 -4  1  3   -&gt; v
# indexes     0  1  2  3  4  5   -&gt; idx
</code></pre>
<p>which are then <code>sum( x**idx*v for idx,v in enumerate(coeff[::-1]))</code>-ed.</p>
<p>Example for <code>x==5</code>:</p>
<pre><code>c   idx     v
5 ** 0   * -10 =  -10
5 ** 1   *   0 =    0
5 ** 2   *   1 =   25
5 ** 3   *  -4 = -500
5 ** 4   *   1 =  625
5 ** 5   *   3 = 9375   Total sum = 9515
</code></pre>
</div>
<span class="comment-copy">show your code and error as text</span>
<span class="comment-copy">what do you mean by generating a polynomial?</span>
<span class="comment-copy">What do you expect as the output?</span>
<span class="comment-copy">Welcome to Stack Overflow! <a href="//meta.stackoverflow.com/q/285551">Please don't post your code as an links or images</a>. It's hard to read, prevents text-based searching, and lowers the overall presentation value of the post. Instead <a href="https://stackoverflow.com/posts/54009611/edit">edit</a> your post and place your code as text into it se we have a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> to work with.</span>
<span class="comment-copy">@PatrickArtner I think I fixed it</span>
