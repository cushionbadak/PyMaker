<div class="post-text" itemprop="text">
<p>Assume that I have a matrix:</p>
<pre><code>a = [[4,7,2],[0,1,4],[4,5,6]] 
</code></pre>
<p>And I want to get</p>
<pre><code>b = [0, 1]
c = [[2],[0,1]]
</code></pre>
<ul>
<li><code>b = [0,1]</code> because the inner lists of <code>a</code> at position <code>0</code> and <code>1</code> contain values that are smaller then <code>3</code>. </li>
<li><code>c = [[2],[0,1]]</code> because the <code>[2]</code> nd element of the first sublist in <code>b</code> is below 3 and <code>[0,1]</code> because the first and second element in the second sublist in <code>b</code> is below 3. </li>
</ul>
<p>I tried :</p>
<pre><code>for i in a:
   for o in i:
      if o &lt; 3:
         print(i)
</code></pre>
<p>It only returns the original matrix.</p>
<p>How do I get <code>b</code>&amp;<code>c</code> in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can leverate <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate(iterable[,startingvalue])</code></a> which gives you the index <em>and</em> the value of the thing you iterate over:</p>
<pre><code>a = [[4,7,2],[0,1,4],[4,5,6]] 

thresh = 3
b = [] # collects indexes of inner lists with values smaller then thresh
c = [] # collects indexes in the inner lists that are smaller then thresh
for idx, inner_list in enumerate(a):
    if any(value &lt; thresh for value in inner_list):
        b.append(idx)
        c.append([])
        for idx_2, value in enumerate(inner_list):
            if value &lt; thresh:
                c[-1].append(idx_2)

print(a)
print(b)
print(c)
</code></pre>
<p>Output:</p>
<pre><code>[[4, 7, 2], [0, 1, 4], [4, 5, 6]]
[0, 1]
[[2], [0, 1]]
</code></pre>
<p>Doku:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate()</a></li>
<li><a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">any()</a></li>
</ul>
</div>
<span class="comment-copy">"Matrix b is that a[0], a[1] have a value that is smaller than 3, c is a[0][2] and a[0][0], a[0][1] is less than 3". This doesn't make the question sound clear at all</span>
<span class="comment-copy">This doesn't give it in the exact form you are looking for, but depending on why you want to do this, you might be interested in <code>np.where(a&lt;3)</code> which outputs the tuple <code>([0,1,1],[2,0,1])</code> giving all the indices where <code>a&lt;3</code>.</span>
