<div class="post-text" itemprop="text">
<p>We started studying OOP and we've got some problem to solve:</p>
<blockquote>
<p>'all_illnesses' is a method of a Diagnoser class. The variable of the class is a Node which a root of a tree. This tree has leafs which have data of string. We know that every node in this tree has 0 or 2 children. Now, we have to implement the method of 'all_illnesses' such that it returns a list of the string which have represented by the leafs of that tree. The same string can be shown more than one time, so the list have to be sorted from the string which was shown most often.</p>
</blockquote>
<p>Here is my implementation, I think there are some problems with it:
I am not sure about the recursion as I am really bad in recursion.
Secondly, I don't know how I can transfer this dict into a list in a sorted way.</p>
<p>So,
What is the problem with my recursion?
And how can I transfer this dict into a list in a sorted way? </p>
<p>We must not use modules to solve the problems.</p>
<pre><code>def all_illnesses(self):
    """"""
    ill_dict = dict()

    def all_ill_helper(node):
        """"""
        if node.getpos() is None:
            if node.getdate() in ill_dict:
                ill_dict[node.getdata()] += 1
            else:
                ill_dict.update({node.getdata(), 0})
        else:
            all_ill_helper(node.getpos())
            all_ill_helper(node.getneg())

    all_ill_helper(self.root)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Except for the <code>node.getdate</code> typo @Barmar noted, your recursion does seem fine.  Sorting isn't difficult but you need to use a <code>key</code> function that uses occurance counts in <code>ill_dict</code> to sort the diseases, and get that back in reverse order:</p>
<pre><code>def all_illnesses(self):

    ill_dict = dict()

    def all_illnesses_recursive(node):

        if node.getpos() is None:  # no children if one child missing
            data = node.getdata()

            if data in ill_dict:
                ill_dict[data] += 1
            else:
                ill_dict[data] = 1
        else:
            all_illnesses_recursive(node.getpos())
            all_illnesses_recursive(node.getneg())

    all_illnesses_recursive(self.root)

    # reverse sort keys by value, i.e. most common disease first
    return sorted(ill_dict, key=ill_dict.get, reverse=True)
</code></pre>
<p>I know you can't use Python modules.  The <code>defaultdict</code> class from <em>collections</em> would simplify this code slightly if/when you can use modules.</p>
</div>
<span class="comment-copy">What specifically are you asking? That's not clear.</span>
<span class="comment-copy">What is the problem with my recursion? How can I transfer this dict into a list in a sorted way? @Carcigenicate</span>
<span class="comment-copy">Does this work? If not, what is the error? Do you have an example input/output?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/howto/sorting.html" rel="nofollow noreferrer"><code>sorted</code></a></span>
<span class="comment-copy">It doesn't help me understand the way to transfer the strings into a list sorted. @meowgoesthedog</span>
