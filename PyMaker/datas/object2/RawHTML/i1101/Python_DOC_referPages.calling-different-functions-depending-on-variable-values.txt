<div class="post-text" itemprop="text">
<p>I have 500 floats in total and i want to run if statement on each of them and call a function accordingly </p>
<p>My code is something like this:</p>
<pre><code>x1 = .2
x2 = .33
x3 = -.422
x4 = -1

def function1():
    print("x1 is positive")

def function2():
    print("x2 is positive")

def function3():
    print("x3 is positive")

def function4():
    print("x4 is positive")

for x in range(10):    
    if x1 &gt; 0:
        function1()

    if x2 &gt; 0:
        function2()

    if x3 &gt; 0:
        function3()

    if x4 &gt; 0:
        function4()  
</code></pre>
<p>I want a better more efficient way of doing this otherwise i have to write if statement for all the variables</p>
</div>
<div class="post-text" itemprop="text">
<p>You should take <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">tutorial(s)</a>to learn about python coding - this question is <em>very</em> basic as python goes.</p>
<p>Create a function that checks the variable and prints the correct thing:</p>
<pre><code>x1 = .2
x2 = .33
x3 = -.422
x4 = -1

def check_and_print(value, variablename):
    """Checks if the content of value is smaller, bigger or euqal to zero. 
    Prints text to console using variablename."""
    if value &gt; 0:
        print(f"{variablename} is positive")
    elif value &lt; 0:
        print(f"{variablename} is negative")
    else:
        print(f"{variablename} is zero")

check_and_print(x1, "x1")
check_and_print(x2, "x2")
check_and_print(x3, "x3")
check_and_print(x4, "x4")
check_and_print(0, "carrot") # the given name is just printed
</code></pre>
<p>Output:</p>
<pre><code>x1 is positive
x2 is positive
x3 is negative
x4 is negative
carrot is zero
</code></pre>
<p>You can shorten your code further by using a <code>list</code> of <code>tuples</code> and a loop over it:</p>
<pre><code>for value,name in [(x1, "x1"),(x2, "x2"),(x3, "x3"),(x4, "x4"),(0, "x0")]:
    check_and_print(value,name)  # outputs the same as above
</code></pre>
<p>Doku:</p>
<ul>
<li><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">functions</a> </li>
<li><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">tuples</a></li>
<li><a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">lists</a></li>
<li><a href="https://docs.python.org/3/tutorial/datastructures.html#looping-techniques" rel="nofollow noreferrer">loops</a></li>
<li><a href="https://docs.python.org/3/library/string.html#custom-string-formatting" rel="nofollow noreferrer">string formatting</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>It would be much easier to do what you want if the data wasn't stored in a bunch of separately-named variables like <code>x1</code>, <code>x2</code>, ... <code>x500</code>, as you indicated in a comment.</p>
<p>If you had the values in a list like this:</p>
<pre><code>values = [.2, .33, -.422, -1, .1, -.76, -.36, 1, -.6, .73, .22, .5,  # ... ,
         ]
</code></pre>
<p>Then they could all be processed by a single function called repeatedly in a <code>for</code> loop as shown below:</p>
<pre><code>def check_value(index, value):
    if value &gt; 0:
        print('x{} is positive'.format(index+1))

for i, value in enumerate(values):
    check_value(i, value)
</code></pre>
<p>You haven't indicated the source of the data, but I suspect it's being generated by an automated process of some sort. If you have control over how is done, then it shouldn't be too hard to change things so the values are in suggest form of a list.</p>
</div>
<span class="comment-copy">Are each of those 500 float values stored in separate variables—i.e. <code>x1</code>, <code>x2</code>, ... <code>x500</code>? If they are, that's your first problem. If not, then please <a href="https://stackoverflow.com/posts/54005451/edit">edit</a> your question and show us what you're really dealing with.</span>
<span class="comment-copy">yes they are all separate variables</span>
<span class="comment-copy">In that case you need to put them all in some kind of container—a <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer"><code>list</code></a> seems suitable—and then you can easily handle them all with a single function. It looks like there's some kind if group-of-four, in which case you could use a list-of-lists-of-four-elements.</span>
