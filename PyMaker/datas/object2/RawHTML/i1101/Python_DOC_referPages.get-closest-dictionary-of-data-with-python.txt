<div class="post-text" itemprop="text">
<p>Considering you have a list of dictionaries with different elements e.g: </p>
<pre><code>{
    "acousticness": 0.0681,
    "energy": 0.724,
    "loudness": -5.941,
    "tempo": 132.056,
    "valence": 0.676
},
{
    "acousticness": 0.2754,
    "energy": 0.866,
    "loudness": -7.874,
    "tempo": 180.056,
    "valence": 0.540
},    
{
    "acousticness": 0.0681,
    "energy": 0.724,
    "loudness": -5.941,
    "tempo": 132.056,
    "valence": 0.676
}
</code></pre>
<p>And you give the user the ability to enter a dictionary themselves e.g.</p>
<pre><code>{
    "acousticness": 0.1382,
    "energy": 0.7274,
    "loudness": -5.8246,
    "tempo": 122.6412,
    "valence": 0.6153
}
</code></pre>
<p>How would you iterate through the dictionary in Python3 to get the closest dictionary back? </p>
<p>I found <a href="https://stackoverflow.com/questions/2566412/find-nearest-value-in-numpy-array">this</a> explanation on how to find the nearest element in a normal array but can't get around how to do the same with array comparison.</p>
<p>Thanks for any help in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you want the minimum absolute difference among the values of the dictionaries, you could do something like this:</p>
<pre><code>data = [{
    "acousticness": 0.0681,
    "energy": 0.724,
    "loudness": -5.941,
    "tempo": 132.056,
    "valence": 0.676
},
    {
        "acousticness": 0.2754,
        "energy": 0.866,
        "loudness": -7.874,
        "tempo": 180.056,
        "valence": 0.540
    },
    {
        "acousticness": 0.0681,
        "energy": 0.724,
        "loudness": -5.941,
        "tempo": 132.056,
        "valence": 0.676
    }]

target = {
    "acousticness": 0.1382,
    "energy": 0.7274,
    "loudness": -5.8246,
    "tempo": 122.6412,
    "valence": 0.6153
}


def key(d, t=target):
    return sum(abs(t[k] - v) for k, v in d.items())


result = min(data, key=key)
print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'tempo': 132.056, 'loudness': -5.941, 'acousticness': 0.0681, 'valence': 0.676, 'energy': 0.724}
</code></pre>
<p>The key of the answer, is to use the <code>key</code> parameter of <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer">min</a>. Note that this answer can be tweaked to accommodate multiple <em>closeness</em> measures. For example you could change key to compute the euclidean distance between the dictionary values:</p>
<pre><code>import math

def key(d, t=target):
    return math.sqrt(sum((t[k] - v)**2 for k, v in d.items())
</code></pre>
</div>
<span class="comment-copy">The closest data using the absolute value of the difference of each value of the dictionary?</span>
<span class="comment-copy">you need to say based on what factor <code>closest</code> is defined</span>
