<div class="post-text" itemprop="text">
<p>I'm new to python and threading. I was wondering if there is a way to check the number of worker threads. For example, if I have 10 worker threads, I would like to wait for all ten threads to finish before moving on. My current program is reading a file line by line; therefore, I don't want to continue without processing each line. </p>
<hr/>
<p>My Code:</p>
<pre><code>for line in file:
    if ranges.strip("\n"):
        ''' I went for my code to check the number of workers and 
        if there are not 10 run the line and if there 10 wait for 
        them to finish and then do it'''
        Mythread.run(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>sounds like a job for a <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer"><code>multiprocessing</code></a> <code>Pool</code>, for example:</p>
<pre><code>from multiprocessing import Pool

def myfn(s):
  return len(s)

with open("input.txt") as file, Pool(10) as pool:
  results = pool.map(myfn, line.strip() for line in file)
</code></pre>
<p>will cause <code>myfn</code> to be executed on each line and arrange for the results to come back nicely…</p>
<p>there are various gotchas around this, but it's often easier than doing it yourself!</p>
</div>
<div class="post-text" itemprop="text">
<p>If you do not keep track of the threads currently running, you can do this which is not very efficient, but should get the job done.</p>
<pre><code>import threading

for line in file:
    if ranges.strip("\n"):
        while len(threading.enumerate()) &gt; 11:
            pass
        Mythread.run(line)
</code></pre>
</div>
<span class="comment-copy">While I agree that using <a href="https://docs.python.org/3/library/multiprocessing.html#module-multiprocessing.pool" rel="nofollow noreferrer"><code>Pool()</code></a> would be a good way to do this, you seem to be missing the fact that you can limit the number of worker processes it uses simply by passing it an argument (the first one—called <i>processes</i> in the documentation).</span>
<span class="comment-copy">I was trying to give a simple example!  its constructor has lots of parameters, I was kind of hoping the OP would look at the docs…</span>
<span class="comment-copy">I understand, but suggest that you try to not "dumb-down" your answers too much—especially when it has a direct bearing on the question at hand like it does here. In my opinion you should at least explain what this argument is doing.</span>
<span class="comment-copy">Hey Thanks for the comment</span>
<span class="comment-copy">Hey Thanks for the comment but a problem with this method is its gone skip the line if we have more then 10 thread right? and go to the next line.  idont wenet to skip any line iwent my code to do something for each line in my code</span>
