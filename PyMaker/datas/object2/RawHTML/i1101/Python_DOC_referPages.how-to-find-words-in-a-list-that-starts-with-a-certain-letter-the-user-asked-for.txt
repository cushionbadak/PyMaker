<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/51573309/print-words-starts-from-a-particular-letter-in-python">Print words starts from a particular letter in python? [closed]</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>so i'm trying to make a program that adds, removes, search, saves and loads a list</p>
<p>i have managed to make everything work apart from searching through the list for the first letters</p>
<p>the program will ask what letter the user wants to search for
It will then search through the list for the first letter the user inputted </p>
<p>All i have managed to do is:</p>
<pre><code>mylist = ["hello","world","how","you","doing"]
for word in mylist:
  print (word[0])
</code></pre>
<p>which does print out the first letters of each word</p>
<pre><code>h
w
h
y
d
&gt;&gt;&gt; 
</code></pre>
<p>but what i want to do</p>
<pre><code>mylist = ["hello","world","how","you","doing"]
letter = input("input a letter you would like to search ").lower()
</code></pre>
<p>the letter the user has inputted is to be searched throughout the list</p>
<p>after finding all the words that start with the letter,
i would like it to print out how many words it has found and then print out the words that was found with the letter the user has requested</p>
</div>
<div class="post-text" itemprop="text">
<p>use list comprehension with <code>startswith</code></p>
<pre><code>[i for i in mylist if i.startswith(letter)]
</code></pre>
<p>It is similar to what you are doing but you are not checking the condition like below</p>
<pre><code>mylist = ["hello","world","how","you","doing"]
for word in mylist:
      if word[0]==letter:
            print(word)
</code></pre>
<p>To play safe use <code>.lower()</code> on strings present in list as well</p>
<pre><code>mylist = ["Hello","world","how","you","doing"]
letter = 'h'
[i for i in mylist if i.lower().startswith(letter)] #["Hello","how"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for word in list:
    if input() in word:
        print(word)
</code></pre>
<p>Something on that line. It grabs the word from the list then tests the user input against that word.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>mylist = ["hello","world","how","you","doing"]
letter = input("input a letter you would like to search ").lower()
    input a letter you would like to search 'h'

list_starting_with_letter = [i for i in mylist if i[0].lower()==letter.lower()]
list_starting_with_letter
    ['hello', 'how']

print('Number of such words: '+ str(len(list_starting_with_letter)))
    Number of such words: 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://ideone.com/U6ZM2l" rel="nofollow noreferrer">https://ideone.com/U6ZM2l</a></p>
<pre><code>mylist = ["hello","world","how","you","doing"]
letter = input("input a letter you would like to search ").lower()

words = list(filter(lambda s: s.startswith(letter), mylist))

print( len(words) )

for w in words: print ("\n"+w)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use List Comprehensions:</p>
<pre><code>mylist = ["hello","world","how","you","doing"]
letter = input("input a letter you would like to search ").lower()
result = [word for word in mylist if word.lower().startswith(letter)]
print(len(result))
print(result)
</code></pre>
<p>You can learn more about the power of <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">List Comprehensions in the docs</a></p>
<p>EDIT (inspired by other answers):
Using <code>word.startswith()</code> instead of indexing <code>word[0]</code> avoids problems with empty strings.</p>
</div>
<div class="post-text" itemprop="text">
<p>Hope this will help you</p>
<pre><code>mylist = ["hello","world","how","you","doing"]
letter = input("input a letter you would like to search ").lower()
found = [] #Result will Store
for m in mylist:
    if m.startswith(letter): #It will check if the input value match with from begining of the signl world
        found.append(m) # Store the value if match
print("Total Words is "+str((len(found))))
for f in found:
    print("Word List :\n"+f)
</code></pre>
</div>
<span class="comment-copy">can easily optimize by not printing the words again in a separate loop</span>
