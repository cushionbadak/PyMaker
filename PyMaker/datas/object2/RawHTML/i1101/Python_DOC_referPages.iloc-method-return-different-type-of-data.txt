<div class="post-text" itemprop="text">
<p>I have a dataset 30 obs and 2 columns i used code below to create independent and depend dataset for a single linear regression.</p>
<p>So each dataset is expected to be a 1 column array.</p>
<p>But the return X is a 2d arrary and returned y is a 1d array what is the reason for that?</p>
<p>So to put my quetion in one line:</p>
<p>what is the difference between</p>
<pre><code>X = dataset.iloc[:, 0].values
</code></pre>
<p>and </p>
<pre><code>X = dataset.iloc[:, :-1].values?
</code></pre>
<p>When I use:</p>
<pre><code>X = dataset.iloc[:, 0].values
y = dataset.iloc[:, 1].values

X.shape
Out[207]: (30,)
y.shape
Out[204]: (30,)
</code></pre>
<p>When I use:</p>
<pre><code>X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, 1].values

X.shape
Out[203]: (30, 1)
y.shape
Out[204]: (30,)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>:-1</code> represents a range<sup>1</sup>, while <code>-1</code> is a scalar. Ranges are 1-dimensional, while scalars are 0-dimensional. Think of a line versus a point; a range is a line while a scalar is a point. This is reflected in how Pandas translates a range vs scalar when indexing.</p>
<p>Therefore, the following are equivalent for a dataframe with 2 columns:</p>
<pre><code>df = pd.DataFrame(np.random.random((5, 2)))

df.iloc[:, :-1].shape  # (5, 1)
df.iloc[:, [0]].shape  # (5, 1)
</code></pre>
<p>Using a scalar will remove the extra dimension. You can do this in a couple of ways:</p>
<pre><code>df.iloc[:, 0].shape   # (5,)
df.iloc[:, -2].shape  # (5,)
</code></pre>
<hr/>
<p>In fact, <code>:-1</code> is syntactic sugar for a <a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow noreferrer"><code>slice</code></a> object: <code>slice(0, -1)</code>. In practice, the simpler syntax is preferred unless you need to pass <code>slice</code> objects around.</p>
</div>
<span class="comment-copy">thx! I am new to python. I m a little crazy about how difficult it is to me. this helps so much!</span>
