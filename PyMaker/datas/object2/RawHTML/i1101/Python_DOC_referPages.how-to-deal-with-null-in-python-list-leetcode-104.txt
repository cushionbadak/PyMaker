<div class="post-text" itemprop="text">
<p>I'm trying to solve Leetcode 104 in python: 
<a href="https://leetcode.com/problems/maximum-depth-of-binary-tree/" rel="nofollow noreferrer">https://leetcode.com/problems/maximum-depth-of-binary-tree/</a> </p>
<p>The code comment suggest the input type is TreeNode.
The test case:  root = [3,9,20,null,null,15,7]</p>
<p>I'm confused about the type of the input. </p>
<ol>
<li><p>Is the input type a list or "TreeNode"? Is TreeNode even a type? How does it differ from list? </p></li>
<li><p>How do I get the len(root)? Because there is null there, I couldn't get use len(root). Of course i could turn null into a string "null", but that feel very hacky. </p></li>
</ol>
<p>(I wanted to use geometric progression to solve the problem. that's why I need the length)</p>
<p>This is the code I wrote. Using Geometric progression. S = (a1*(q**n) - a1)/(q-1) when q != 1. The result is using my hacky way which is turned the null into the string "null" and treat root as a list type.  </p>
<pre><code>## a_1 = 1, 
## q = 2, 
## s = len(root) = (a1*q - a1)/(q-1) = (1*(2**n) - 1)/(2-1) 
## --&gt; len(root) = (2**n)-1  --&gt; solve n 


import numpy as np

def f(root):
    s = len(root)
    n = (np.log(s+1))/(np.log(2))
    return n

print f([3,9,20,"null","null",15,7])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li>Yes <code>TreeNode</code> is a valid type. And it is entirely different from a <em>list</em>. You get the definition of the <code>TreeNode</code> type in a comment on the top of the page. It has a value (<em>self.val</em>) and a left and a right cildren, which are also <code>TreeNodes</code> (altough it is not explicitly stated, this is the definition of a binary tree).</li>
<li>The <code>len()</code> function calls the <a href="https://docs.python.org/3/reference/datamodel.html#object.__len__" rel="nofollow noreferrer"><code>__len__()</code></a> method of the argument. It is probably not implemented on the <code>TreeNode</code>. </li>
</ol>
<p>PS. You are mistaken when you try to solve the exercise uing the list as the input. You are expected to use the given <code>TreeNode</code> type.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you activate the <code>Python</code> code type for the answer, you get this comment:</p>
<pre><code># class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
</code></pre>
<p><code>[3,9,20,null,null,15,7]</code> is just a linear description of that tree, where <code>3</code> is the first node, with the leaves <code>9</code> and <code>20</code>, then <code>9</code> has the leaves <code>null</code> and again <code>null</code> (so, no leaves) and <code>20</code> has the leaves <code>15</code> and <code>7</code>. But it makes no sense to give you the definition of the <code>TreeNode</code> and to let you take the parameter <code>root</code>, if they would want you to parse the linear tree description into the <code>TreeNode</code> form.</p>
<p>So your task is, to travel down your <code>root.left</code> and <code>root.right</code> recursively and record the maximum depth.</p>
<p>PS: The question does not change if you select a different programming language so I infer, that they mean <code>null</code> in a symbolic way where it is implemented as <code>None</code> in Python (especially since <code>left</code> and <code>right</code> are by default <code>None</code> for the <code>TreeNode</code> implementation).</p>
<p>PPS: The said linear tree description works like this:</p>
<ol>
<li>You first name the root element of the tree <code>[3]</code></li>
<li>After that, you make a snapshot of the current tree and name all yet unnamed leaves from left to right. If one leaf is empty, you just call it <code>null</code> (Python specific: <code>None</code>).</li>
<li>You repeat 2 until there is no unnamed leaf left</li>
</ol>
</div>
<span class="comment-copy">Welcome to Stack Overflow! Please take the <a href="https://stackoverflow.com/tour">tour</a> and read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a>. Concerning your above question, it is unclear what the code is (don't use links to volatile external resources!), what exactly you did and what you observed. Also, what did you do to analyze the situation? As a general advise, either extract a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> of the code that you don't understand or step through it with a debugger. Both should help you help yourself to understand what's going on.</span>
<span class="comment-copy">"Because there is null there, I couldn't get use len(root)" needs a bit more explanation. (Unless you get an error on the use of <code>null</code>.) <code>len(a_list)</code> will always work.</span>
<span class="comment-copy">Note that python's <code>null</code> is known as <code>None</code>, <code>len</code> of a list with None in it should work just fine.</span>
<span class="comment-copy">My problem is that i can not make  [3,9,20,null,null,15,7] into a list. In my terminal, if I set lst =  [3,9,20,null,null,15,7], &gt;&gt; Traceback (most recent call last):   File "&lt;stdin&gt;", line 1, in &lt;module&gt; NameError: name 'null' is not defined</span>
<span class="comment-copy">Well, you have to use <code>None</code> instead of <code>null</code> because <code>null</code> is just not a thing in Python. You can name a variable <code>null</code> if you want, like <code>noul = 15</code> or <code>nullll = 15</code> or <code>null = 15</code>... there is not more to it. <code>None</code> is the thing that you want. It is a keyword and a special constant that can not be overridden, meaning roughly "nothing" or "unknown".</span>
<span class="comment-copy">thanks!! very clear</span>
<span class="comment-copy">I have another question.  So when i print root.val and print root.left inside the function, it only returns me 3 and &lt;precompiled.treenode.TreeNode object at 0x7f16e2a1fc90&gt;. How do I access the rest values?? Also, how do I create an instance of the TreeNode object? root = TreeNode([3,9,20,null,null,15,7]) ??</span>
<span class="comment-copy"><code>root</code> is a TreeNode object, you don't need to create another one in this exercise. <code>val</code> being 3 is okay. The <code>&lt;precompiled.treenode.TreeNode object at 0x7f16e2a1fc90&gt;</code> is done by the <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow noreferrer">repr()</a> method of the TreeNode. You acces the vale like <code>self.left.val</code> or <code>self.right.val</code>. Deeper values: <code>self.right.left.val</code>. Someone already mentioned to recursion.</span>
<span class="comment-copy">thanks! i added my code...but i wanted to use a different method as in i updated the question  (not binary tree).  how can i treat [3,9,20,null,null,15,7] as a list if it has null and generates an NameError: name 'null' is not defined</span>
<span class="comment-copy">The string <i>[3,9,20,null,null,15,7]</i> is NOT meant for you to use in your Python code. <i>null</i> is not a built-in, therefore you must initialize it before using. e.g: <i>null=None</i> After that it will be a valid list.</span>
