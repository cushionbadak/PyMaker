<div class="post-text" itemprop="text">
<p>I guys, im a noob on the programming world and im putting my best to learn Python. </p>
<p>Im stuck with this problem right now:</p>
<p>"Make an algorithm that verifies if a certain value is an integer."</p>
<p>Now the problem is that the INPUT function returns the type in string. If I cast the variable to FLOAT it stops me from reading the integer numbers. </p>
<p>What should i do?</p>
<pre><code>val1 = float(input("enter value")
if type (val1)== int:
print("value is integer")
else:
print("value is NOT integer")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try to covert the string input into an integer or float:</p>
<pre><code>k = input("enter value:")
try:
    k = int(k)
    # it is an integer
except ValueError:
    try:
        k = float(k)
    except ValueError:
        print("Neither int nor float")
    else:
        print(k, "is a float")
else:
    print(k, "is an integer")
</code></pre>
<p>Output: </p>
<pre><code>enter value:44.4
44.4 is a float

enter value:hallo 
Neither int nor float

enter value:44
44 is an integer
</code></pre>
<p>Doku:</p>
<ul>
<li><a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">Exceptions</a></li>
<li><a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">Exception handling</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>try</code> and <code>except</code> for this (you can give it a look at <a href="https://docs.python.org/2/tutorial/errors.html" rel="nofollow noreferrer">Errors and Exceptions</a>. Try turning the <code>input</code> into an <code>int</code>, and write the corresponding print statements depending on the result:</p>
<pre><code>val1 = input("enter value")
try:
    int(val1)
    print("value is integer")
except:
    print("value is NOT integer")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want also input like <code>'3.0'</code> to be recognized as integers (so all whole numbers, instead of all values of type <code>int</code>), just calling <code>int</code> on it is not enough, since <code>int</code> cannot parse that string.</p>
<p>Another way to determine if a value is a whole number is to see if there is a rest if divided by one, so you can use the modulo operator <code>%</code>:</p>
<pre><code>val1 = float(input("enter value"))
if val1 % 1 == 0:
    print("value is integer")
else:
    print("value is NOT integer")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don’t want casting and error handling. You can use ast.literal_eval that transform string to Python objects and isinstance, which comes with Python, to solve your issue.</p>
<pre><code>from ast import literal_eval


in_val = input('Enter value: ')

# get literal value

l_val = literal_eval(in_val)

# check if it is int
if isinstance(l_val,int):
    print('It is integer')
elif isinstance(l_val,float):
    print('It is a float')
elif isinstance(l_val,str):
    print('It is a string')

else:
    print('Not int,float or string')# could be list, dict etc ;)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>if val1.count('.') == 0:
   print("value is NOT integer")
else:
   print("value is integer")
</code></pre>
</div>
<span class="comment-copy">Welcome to Stack Overflow. Have a look at this question, which explains how to convert a string into an integer <a href="https://stackoverflow.com/questions/2262333/is-there-a-built-in-or-more-pythonic-way-to-try-to-parse-a-string-to-an-integer" title="is there a built in or more pythonic way to try to parse a string to an integer">stackoverflow.com/questions/2262333/…</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/379906/how-do-i-parse-a-string-to-a-float-or-int-in-python">How do I parse a string to a float or int in Python?</a></span>
<span class="comment-copy">Thank you very much!! ill read about Try and Except!</span>
<span class="comment-copy">Thank you very much!! ill read about Try and Except!</span>
<span class="comment-copy">if you get a string input like "3.14" and its contains a dot then its a float.</span>
<span class="comment-copy">This will fail with input like <code>'3e4'</code>, which is a <code>float</code> (and <code>int</code> cannot parse it).</span>
