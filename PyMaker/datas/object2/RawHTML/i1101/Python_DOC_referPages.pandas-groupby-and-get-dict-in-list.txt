<div class="post-text" itemprop="text">
<p>I'm trying to extract grouped row data to use values to plot it with label colors another file.</p>
<p>my dataframe is like below.</p>
<pre><code>df = pd.DataFrame({'x': [1, 4, 5], 'y': [3, 2, 5], 'label': [1.0, 1.0, 2.0]})

    x   y   label
0   1   3   1.0
1   4   2   1.0
2   5   5   2.0
</code></pre>
<p>I want to get group of label list like</p>
<pre><code>{'1.0': [{'index': 0, 'x': 1, 'y': 3}, {'index': 1, 'x': 4, 'y': 2}],
 '2.0': [{'index': 2, 'x': 5, 'y': 5}]}
</code></pre>
<p>How to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.itertuples.html" rel="nofollow noreferrer">itertuples</a> and <a href="https://docs.python.org/2/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">defulatdict</a>:</p>
<p>itertuples returns named tuples to iterate over dataframe:</p>
<pre><code>for row in df.itertuples():
    print(row)
Pandas(Index=0, x=1, y=3, label=1.0)
Pandas(Index=1, x=4, y=2, label=1.0)
Pandas(Index=2, x=5, y=5, label=2.0)
</code></pre>
<p>So taking advantage of this: </p>
<pre><code>from collections import defaultdict
dictionary = defaultdict(list)
for row in df.itertuples():
    dummy['x'] = row.x
    dummy['y'] = row.y
    dummy['index'] = row.Index
    dictionary[row.label].append(dummy)

dict(dictionary)
&gt; {1.0: [{'x': 1, 'y': 3, 'index': 0}, {'x': 4, 'y': 2, 'index': 1}],
 2.0: [{'x': 5, 'y': 5, 'index': 2}]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>df = pd.DataFrame({'x': [1, 4, 5], 'y': [3, 2, 5], 'label': [1.0, 1.0, 2.0]})
df['index'] = df.index
df
   label  x  y  index
0    1.0  1  3      0
1    1.0  4  2      1
2    2.0  5  5      2

df['dict']=df[['x','y','index']].to_dict("records")
df
   label  x  y  index                             dict
0    1.0  1  3      0  {u'y': 3, u'x': 1, u'index': 0}
1    1.0  4  2      1  {u'y': 2, u'x': 4, u'index': 1}
2    2.0  5  5      2  {u'y': 5, u'x': 5, u'index': 2}

df = df[['label','dict']]
df['label'] = df['label'].apply(str) #Converting integer column 'label' to string
df = df.groupby('label')['dict'].apply(list) 
desired_dict = df.to_dict()
desired_dict 
    {'1.0': [{'index': 0, 'x': 1, 'y': 3}, {'index': 1, 'x': 4, 'y': 2}],
     '2.0': [{'index': 2, 'x': 5, 'y': 5}]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a> with <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_dict.html" rel="nofollow noreferrer"><code>to_dict</code></a>:</p>
<pre><code>from collections import defaultdict

# add 'index' series
df = df.reset_index()

# initialise defaultdict
dd = defaultdict(list)

# iterate and append
for d in df.to_dict('records'):
    dd[d['label']].append(d)
</code></pre>
<p>Result:</p>
<pre><code>print(dd)

defaultdict(list,
            {1.0: [{'index': 0.0, 'x': 1.0, 'y': 3.0, 'label': 1.0},
                   {'index': 1.0, 'x': 4.0, 'y': 2.0, 'label': 1.0}],
             2.0: [{'index': 2.0, 'x': 5.0, 'y': 5.0, 'label': 2.0}]})
</code></pre>
<p>In general, there's no need to convert back to a regular <code>dict</code>, since <code>defaultdict</code> is a subclass of <code>dict</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The quickest solution for what you want is almost along what @cph_sto offers,</p>
<pre><code>&gt;&gt;&gt; df.reset_index().to_dict('records')
[{'index': 0.0, 'label': 1.0, 'x': 1.0, 'y': 3.0}, {'index': 1.0, 'label': 1.0, 'x': 4.0, 'y': 2.0}, {'index': 2.0, 'label': 2.0, 'x': 5.0, 'y': 5.0}]
</code></pre>
<p>That is, convert the index to a regular column, then apply the <code>records</code> version of <code>to_dict</code>. Another option of interest:</p>
<pre><code>&gt;&gt;&gt; df.to_dict('index')
{0: {'label': 1.0, 'x': 1.0, 'y': 3.0}, 1: {'label': 1.0, 'x': 4.0, 'y': 2.0}, 2: {'label': 2.0, 'x': 5.0, 'y': 5.0}}
</code></pre>
<p>Check the help on <a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_dict.html" rel="nofollow noreferrer"><code>to_dict</code></a> for more.</p>
</div>
<span class="comment-copy">Thanks. your answer is what I want. I use itertuple.</span>
<span class="comment-copy">@rootpetit Glad I could help :) please accept the answer that answered your question :)</span>
<span class="comment-copy">Thanks to teaching procedure. It helps me a lot to understand pandas.</span>
<span class="comment-copy">thanks it works. and I understood defaultdict is usable like dict.</span>
<span class="comment-copy">Thanks. To my understanding, I'll check pandas to_dict document.</span>
