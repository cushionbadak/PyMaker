<div class="post-text" itemprop="text">
<p>How do I go about removing the space (' ') in this list? </p>
<pre><code>list = ['a', 'b', 'c', ' ', '1', '2', '3', ' ', 'd', 'e','f']
</code></pre>
<p>As far as I know, pop / remove method works with slices but the space character changes position depending on the input. </p>
</div>
<div class="post-text" itemprop="text">
<p>A conditional <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">comprehension</a> will do:</p>
<pre><code>lst = ['a', 'b', 'c', ' ', '1', '2', '3', ' ', 'd', 'e','f']  # do not shadow 'list'

lst = [x for x in lst if x != ' ']
</code></pre>
<p>If you have to mutate the existing <code>list</code> object and not just rebind the variable, use slice assignment</p>
<pre><code>lst[:] = [x for x in lst if x != ' ']
</code></pre>
<p>In case you want to remove any string that consists solely of whitespace characters, you can utilize <code>str.strip()</code></p>
<pre><code>lst = [x for x in lst if x.strip()]
</code></pre>
<p>Note that rebuilding the list from scratch is often better performance-wise than repeatedly calling <code>del</code>, <code>pop</code> or <code>remove</code> as each of those calls has linear complexity since all the elements after the deletion index need to be shifted in the underlying array.</p>
</div>
<div class="post-text" itemprop="text">
<p>you can do by using <code>del</code> function that delete the element from the list.</p>
<p><strong>Code :</strong></p>
<pre><code>lst = ['a', 'b', 'c', ' ', '1', '2', '3', ' ', 'd', 'e','f']
count = 0
for i in lst:
    if i == ' ':
        del lst[count]
    count = count + 1
print(lst)
</code></pre>
<p><strong>Output :</strong></p>
<pre><code>['a', 'b', 'c', '1', '2', '3', 'd', 'e', 'f'] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Below is the functional approach to achieve what you want:                   </p>
<pre><code>list_input = ['a', 'b', 'c', ' ', '1', '2', '3', ' ', 'd', 'e','f']
print(list(filter(lambda elem: elem != ' ', list_input)))

# Output: ['a', 'b', 'c', '1', '2', '3', 'd', 'e', 'f']             
</code></pre>
<p>More pythonic list-comprehension approach:                       </p>
<pre><code>list_input = ['a', 'b', 'c', ' ', '1', '2', '3', ' ', 'd', 'e','f']
print([elem for elem in list_input if elem != ' '])         

# Output: ['a', 'b', 'c', '1', '2', '3', 'd', 'e', 'f']  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just to remember of <a href="https://docs.python.org/3.7/library/itertools.html" rel="nofollow noreferrer"><code>itertools</code></a>:</p>
<pre><code>from itertools import filterfalse

list(filterfalse(lambda x: x == ' ', lst))
#=&gt; ['a', 'b', 'c', '1', '2', '3', 'd', 'e', 'f']
</code></pre>
</div>
<span class="comment-copy">Thank you. I used the str.strip() method and it works great.</span>
