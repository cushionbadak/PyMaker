<div class="post-text" itemprop="text">
<p>I am practicing using databases in python with sqlite3. I am creating a stock management system for a shop and I have a product table with fields: ProductID, Name, StockLevel.</p>
<p>I am struggling to update the stock level when a purchase is made. So the stock level for a specific product should be subtracted by the number ordered.</p>
<p>My code:</p>
<pre><code>def update_stock(product,no_bought):
    with sqlite3.connect("shop.db") as db:
        cursor = db.cursor()
        sql = "UPDATE Product SET StockLevel = StockLevel - %s WHERE Name = %s" 
        cursor.execute(sql, (no_bought, product))
        db.commit()

product = input("What product has been bought: ")
no_bought = input("How much has been bought: ")
update_stock(product,no_bought)
</code></pre>
<blockquote>
<p>sqlite3.OperationalError: near "%": syntax error</p>
</blockquote>
<p>Why is it giving this error? </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>?</code> as your placeholder based on the documentation for <a href="https://docs.python.org/3/library/sqlite3.html" rel="nofollow noreferrer">sqlite3</a>.</p>
<pre><code>def update_stock(product, no_bought):
    with sqlite3.connect("shop.db") as db:
        cursor = db.cursor()
        sql = "UPDATE Product SET StockLevel = StockLevel - ? WHERE Name = ?"
        cursor.execute(sql, (no_bought, product))
        db.commit()
product = input("What product has been bought: ")
no_bought = input("How much has been bought: ")
update_stock(product,no_bought)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to use two placeholders for both of your variables and properly <em>parameterize your query</em> (beware of <a href="https://en.wikipedia.org/wiki/SQL_injection" rel="nofollow noreferrer">SQL injections</a>!):</p>
<pre><code>sql = """
    UPDATE  
        Product 
    SET 
        StockLevel = StockLevel - ?
    WHERE 
        Name = ?
"""
cursor.execute(sql, (no_bought, product))
</code></pre>
<p>Notice how query parameters are passed to <code>execute()</code> separately and how we have 2 placeholders in the query itself.</p>
</div>
<span class="comment-copy">You can't implement both solutions. You're current edit, shows using the method <code>format</code> to replace the placeholders. Then you still pass the variables to <code>cursor.execute</code> as though there are still place holders. There aren't. You can either pass the string <i>with placeholders</i> to <code>cursor,execute</code> or you can replace them first and pass the complete string alone.</span>
<span class="comment-copy">TheHerk I have corrected it but the error still appears</span>
<span class="comment-copy">No, you implemented both. I'll fix my answer after alecxe reminded me about sql safety in this method.</span>
<span class="comment-copy">I have removed my answer. In spite of correctly covering string formatting here, @alecxe correctly pointed out that the <code>execute</code> method is much safer for replacement. Pass your string with placeholders (i.e. <code>{}</code>, <code>{varname}</code>, or <code>%s</code>), then pass the replacement tuple or dictionary as <code>params</code> argument to <code>execute</code>.</span>
<span class="comment-copy">Doesn't SQLite only support <code>?</code> as the placeholder?</span>
<span class="comment-copy">Reason for the downvote: you are supporting OP's efforts to have code vulnerable to <a href="https://en.wikipedia.org/wiki/SQL_injection" rel="nofollow noreferrer">SQL injections</a>.</span>
<span class="comment-copy">Right you are. I forgot the importance of using the library for the replacement. I'll update.</span>
<span class="comment-copy">I have updated this, based on my oversight that you should do string formatting. Let the library do it for safety (thank you @alecxe). Also, since it is sqlite, it required <code>?</code> for placeholder.</span>
<span class="comment-copy">Having made those changes, another error has occurred as seen in the post</span>
<span class="comment-copy">alecxe change <code>%s</code> to <code>?</code></span>
<span class="comment-copy">@Newbie101 ah, yeah, sqlite, right, thanks!</span>
