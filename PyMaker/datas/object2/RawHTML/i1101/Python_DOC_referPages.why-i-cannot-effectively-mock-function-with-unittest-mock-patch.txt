<div class="post-text" itemprop="text">
<p>I'm trying to write UT for function with other function mocked. Both lies in the same module. It appears that <strong>unittest.mock.patch()</strong> call passes without error but doesn't mock anything so I'm getting exception in the example code. So, my question is: How to mock <strong>foo</strong> with <strong>unittest.mock.patch</strong> ?</p>
<pre><code>import unittest
import unittest.mock

def foo():
        raise Exception("not implemented")

def bar():
        foo()

class UT(unittest.TestCase):

        def testBar(self):
                with unittest.mock.patch('mock_test.foo',spec=True) as mock_foo:
                        bar()    # &lt;- original foo is called here

unittest.main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a way to use <code>unittest.mock.patch</code> and patch the <code>foo</code> returns. See the comments in the example:</p>
<pre><code>import unittest
from unittest.mock import patch


def foo():
        raise Exception("Not implemented")


def bar():
        return foo()


class UT(unittest.TestCase):

        def testBar(self):
            # foo is mocked to raise a ValueError and catch it during the test
            with patch('__main__.foo', side_effect=ValueError):
                with self.assertRaises(ValueError):
                    bar()

            # foo is mocked to raise and exception and catch it during the test
            with patch('__main__.foo', side_effect=Exception):
                with self.assertRaises(Exception):
                    bar()

            # foo is mocked to return 1
            with patch('__main__.foo', return_value=1):
                self.assertEqual(bar(), 1, "Should be equal to 1")

            # foo is mocked to return an object
            with patch('__main__.foo', return_value={}):
                self.assertIsInstance(bar(), dict, "Should be an instance of dict")


unittest.main()
</code></pre>
<p>Output:</p>
<pre><code>.
----------------------------------------------------------------------
Ran 1 test in 0.001s

OK
</code></pre>
<p>For more informations, please visit the <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">official documentation</a></p>
</div>
<span class="comment-copy">What is the exception you are getting?</span>
<span class="comment-copy">You probably just want <code>patch('foo')</code>.</span>
<span class="comment-copy">Thanks! Of course '<b>main</b>' is the core that I missed.</span>
