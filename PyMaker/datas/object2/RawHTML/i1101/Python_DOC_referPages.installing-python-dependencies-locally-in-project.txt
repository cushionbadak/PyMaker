<div class="post-text" itemprop="text">
<p>I am coming from NodeJS and learning Python and was wondering how to properly install the packages in <code>requirements.txt</code> file locally in the project.</p>
<p>For node, this is done by managing and installing the packages in <code>package.json</code> via <code>npm install</code>. However, the convention for Python project seems to be to add packages to a directory called <code>lib</code>. When I do <code>pip install -r requirements.txt</code> I think this does a global install on my computer, similar to nodes <code>npm install -g</code> global install. How can I install the dependencies of my requirements.txt file in a folder called lib?</p>
</div>
<div class="post-text" itemprop="text">
<p>use this command<br/>
<code>pip install -r requirements.txt -t &lt;path-to-the-lib-directory&gt;</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The recommended way to do this is by using a virtual environment. You can install virtualenv via pip with </p>
<pre><code>pip install virtualenv
</code></pre>
<p>Then create a virtual environment in your project directory:</p>
<pre><code>virtualenv env
</code></pre>
<p>Which will create a directory called <code>env</code> (you can call it anything you like though) which will mirror your global python installation. Inside <code>env/</code> there will be a directory called <code>lib</code> which will contain Python and will store your dependencies.</p>
<p>Then activate the environment with:</p>
<pre><code>source env/bin/activate
</code></pre>
<p>Then install your dependencies with pip and they will be installed in the virtual environment <code>env/</code>:</p>
<pre><code>pip install -r requirements.txt
</code></pre>
<p>Then any time you return to the project, run <code>source env/bin/activate</code> again so that the dependencies can be found.</p>
<p>When you deploy your program, if the deployed environment is a physical server, or a virtual machine, you can follow the same process on the production machine. If the deployment environment is one of a few serverless environments (e.g. GCP App Engine), supplying a <code>requirements.txt</code> file will be sufficient. For some other serverless environments (e.g. AWS Lambda) the dependencies will need to be included in the root directory of the project. In that case, you should use <code>pip install -r requirements.txt -t ./</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would suggest getting the Anaconda navigator. </p>
<p>You can download it here: <a href="https://www.anaconda.com" rel="nofollow noreferrer">https://www.anaconda.com</a></p>
<p>Anaconda allows you to create virtual environments through a graphical interface. You can download any pip package that is available through Anaconda. </p>
<p>Then all you have to do after you have created and added onto your environment is to got to your designated python editor (I mainly use Pycharm) and setting the path to the virtual environmentâ€™s interpreter when you select or change the interpreter for your project. </p>
<p>Hope this helps.</p>
</div>
<span class="comment-copy">The usual solution is to create a virtual environment: <a href="https://docs.python.org/3/tutorial/venv.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/venv.html</a></span>
<span class="comment-copy">Yes, I created a virtual env, but I was told that this is only for local testing, and that I should still use the <code>lib</code> directory. Although it seems like doing it this way is also for local testing as I assume the <code>lib</code> directory with all my dependencies should be included in the <code>.gitignore</code> file.</span>
<span class="comment-copy">Thanks! Not sure why this isn't well documented. I coulnd't find anything on how to do this.  Should my folder where I install my packages be included in the <code>.gitignore</code> file?</span>
<span class="comment-copy">@henhen if you intend to distribute your package then yes. more info <a href="https://git-scm.com/docs/gitignore" rel="nofollow noreferrer">link</a></span>
<span class="comment-copy">this will install the packages in directory <code>site-packages</code> not in <code>lib</code> as per question.</span>
<span class="comment-copy">@prashantrana packages will be installed in <code>env/lib/pythonx.x/site-packages</code> so not directly in <code>lib</code> but still within <code>lib</code>. Also OP noted that this was common practice to do, so It's no so much that OP wants dependencies in <code>lib</code> but rather to follow best practices. And using a virtual environment is a best practice.</span>
<span class="comment-copy">thanks for information .</span>
