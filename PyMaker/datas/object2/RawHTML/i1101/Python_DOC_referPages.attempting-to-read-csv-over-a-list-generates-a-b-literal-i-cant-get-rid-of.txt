<div class="post-text" itemprop="text">
<p>I have a list of countries with corresponding .csv files. When I attempt to read_csv iterated over the list with a for loop, I get an error.</p>
<p>I tried generating an empty dict first and making a dict of dataframes, I tried using <code>decode</code>, I tried using <code>item = r'{}.csv'.format(file)</code> instead of just <code>item = '{}.csv'.format(file)</code>.</p>
<pre><code>import pandas as pd
import string as str
fileslist = []
with open('data/files.txt') as f:
    for line in f:
        fileslist.append(f.readline().strip())
for file in fileslist:
    item = '{}.csv'.format(file)
    print(item)
    item = pd.read_csv(item)
</code></pre>
<p>This should give me a number of dataframes starting with a dataframe named algeria. Instead I get the error "FileNotFoundError: File b'algeria.csv' does not exist".</p>
</div>
<div class="post-text" itemprop="text">
<p>This code may help you</p>
<pre><code>import os
import pandas as pd

fileslist = []

with open("data/files.txt", mode='r', encoding="utf-8") as fp:
    for line in fp.readlines():
        fileslist.append(line.strip())

for file in fileslist:
    # make sure your files are in same directory
    # if they are in data folder then don't forget to add 'data/{}.csv'.format(file)

    item = '{}.csv'.format(file)

    if os.path.isfile(item):
        item = pd.read_csv(item)
</code></pre>
</div>
<span class="comment-copy">Are you sure you're not just being a goof? Shouldn't it be <code>data/algeria.csv</code>? The fact that the string is a binary representation shouldn't actually matter.</span>
<span class="comment-copy">Oh and to clarify, the <code>b</code> prefix in front of the string just means that it's a binary string, which you can read more about here: <a href="https://stackoverflow.com/questions/17615414/how-to-convert-binary-string-to-normal-string-in-python3" title="how to convert binary string to normal string in python3">stackoverflow.com/questions/17615414/â€¦</a> and here: <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str</a></span>
<span class="comment-copy">This is the correct answer to my question. However, for anyone reading this for future reference, this generates uncallable variables so you still need to make a dictionary of dataframes.</span>
