<div class="post-text" itemprop="text">
<p>So I recreated the sieve of eratosthenes but the result (prime numbers) is not output as i expected.</p>
<p>The first function is the sieve which returns a dictionary with all integers up to a given range as keys and True or False as their values (prime or not). The generator afterwards is supposed to get all the keys with a value of True (prime numbers). I think the problem is that I haven't used the generator correctly (I just learnt about generators), but I can't spot the mistake. </p>
<pre><code>from math import sqrt

def sieve(x):
    values = {}
    for l in range(2, x + 1):
        values[l] = True
    for k in range(2, int(sqrt(x)) + 1):
        if values[k] == True:
            for j in range(k**2, x + 1, k):
                values[j] = False
    return values

def primes(dict1):
    for l in dict1:
        if l == True:
            yield list(dict1.keys())[l]

for k in primes(sieve(int(input()))):
    print(k, end = " ")
</code></pre>
<p>I expect all prime numbers (keys in the dictionary with a value of True) to be printed. But there is no output whatsoever.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is the corrected version where you directly access the dictionary keys and values by iterating over them using <code>items()</code>. I have done some changes to the code:</p>
<ul>
<li><p>Store the user input in a variable called <code>number</code></p></li>
<li><p>Directly access the keys and the values by iterating over <code>dict1.items()</code></p></li>
<li><p>The point 2 simplifies the expression of <code>yield</code> in your original code.</p></li>
<li><p><code>if l == True:</code> can be simply replaced by <code>if value:</code> </p></li>
</ul>
<hr/>
<pre><code>from math import sqrt

def sieve(x):
    # function body here 

def primes(dict1):
    for key, value in dict1.items(): # &lt;--- Directly access keys and values
        if value:
            yield key
number = int(input())

for k in primes(sieve(number)):
    print(k, end = " ")

# 15
# 2 3 5 7 11 13 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Iterating over a dictionary with <code>for l in dict1</code> yields the <em>keys</em>, not the <em>values</em>.</p>
<p>Therefore <code>if l == True</code> is never true.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>for l in dict1</code> iterates over the <strong>keys</strong> of the dictionary, and the comparison <code>if l==True</code> expects a <strong>value</strong>. You can fix that, for example, by iterating over both keys and values using <code>items</code>:</p>
<pre><code>for n, isprime in dict1.items():
    if isprime:
        yield n
</code></pre>
<p>A couple of unrelated notes:</p>
<ul>
<li><p>you probably want to use a list (or even an <a href="https://docs.python.org/3/library/array.html" rel="nofollow noreferrer"><code>array</code></a>) of Booleans to store sieve data. Using a dict whose keys are consecutive numbers is wasteful.</p></li>
<li><p>when testing a Boolean value, use <code>if x</code> rather than <code>if x == True</code>. The latter will give incorrect answer for truthy values other than <code>True</code>, such as 1 or a non-empty container. (To test whether <code>x</code> is false, use <code>if not x</code>.)</p></li>
</ul>
</div>
<span class="comment-copy">Does any of the answers solves your problem? If they do then mark the answer accepted. Since you seem to be new to Stack Overflow, you should read <a href="https://stackoverflow.com/help/someone-answers">What should I do when someone answers my question?</a></span>
<span class="comment-copy">We think in a parallel universe in a synchronized fashion ;)</span>
