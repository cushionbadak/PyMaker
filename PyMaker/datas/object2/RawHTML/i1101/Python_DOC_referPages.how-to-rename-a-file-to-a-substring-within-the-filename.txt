<div class="post-text" itemprop="text">
<p>I'm trying to rename the files in a directory that have the substring "Episode.26" by truncating the words before and after the substring </p>
<p>e.g. 'The.Vision.of.Escaflowne.<strong>Episode.26</strong>.Eternal.Love.1080p.Dual.Audio.Bluray [BC6DDF99]<strong>.mkv'</strong></p>
<p>The value to be found will always be <strong>Episode.##</strong> (## two digits)</p>
<p>Desired result: <strong>Episode.26.mkv</strong></p>
<p>Current result: <strong>Episode.26</strong>.Eternal.Love.1080p.Dual.Audio.Bluray [BC6DDF99]<strong>.mkv</strong>'</p>
<p>I removed the first <strong>n</strong> characters using python; but, I don't know how to isolate 'Episode.26' efficiently</p>
<pre><code>import os

key = "Episode."

for filename in os.listdir("."):
  if(key in filename):
    index = filename.index(key)
    os.rename(filename, filename[index:])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your filename is always separated by periods then <strong><a href="https://python-reference.readthedocs.io/en/latest/docs/str/split.html" rel="nofollow noreferrer"><code>split()</code></a></strong> might be sufficient:</p>
<pre><code>import os

ext = ".mkv"
ndl = "Episode"

for filename in os.listdir("."):
    if ext in filename and ndl in filename:
        num = filename.split(ndl, 1)[1].split(" ")[0].split(".")[1]
        epi = "{}.{}{}".format(ndl, num, ext)
        os.rename(filename, epi)
</code></pre>
<p>This should split the name after your needle ("<code>ndl</code>") grab the episode number and rename the file; it should also handle filenames that include spaces in addition to periods or if "Episode.26" is at the end of the string (eg. <code>Some.Movie.Episode.26 [BC6DDF99].mkv</code>).</p>
<p><strong>Result</strong>:</p>
<pre><code>Episode.26.mkv
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If u'r sure there's two digits after "Episode.", then u can code like this. Otherwise, i'm afraid u should use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">re</a> or <a href="https://docs.python.org/3/library/stdtypes.html?highlight=split#str.split" rel="nofollow noreferrer">split</a> to get what u want.</p>
<pre><code>import os

key = 'Episode'
for filename in os.listdir("."):
    try:
        index = filename.index(key)
        _, file_extension = os.path.splitext(filename)
        new_name = filename[index:index+len(key)+3] + file_extension
        os.rename(filename, new_name)
    except ValueError:
        pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <strong>regular expressions</strong>, capture the episode number and file extension and create the new name using such data:</p>
<h2>Code</h2>
<pre class="lang-python prettyprint-override"><code>import re
import os

key = "Episode"
regexp = re.compile('.*%s\.(\d\d).*\.(.+)' % key)

for filename in os.listdir("."):
  match = regexp.match(filename)

  if match:
    episode, file_ext = match.group(1), match.group(2)
    new_name = key + episode + '.' + file_ext

    os.rename(filename, new_name)
</code></pre>
<p>This way is more cleaner and flexible. REs are very powerfull. Let me know if this worked for you.</p>
</div>
<div class="post-text" itemprop="text">
<p>in your code, you can use search instead of match and remove .* at the beginning of re</p>
<pre><code>import re
import os

key = "Episode"
regexp = re.compile('%s\.(\d\d).*\.(.+)' % key)

for filename in os.listdir("."):
  match = regexp.search(filename)

  if match:
    episode, file_ext = match.group(1), match.group(2)
    new_name = key + episode + '.' + file_ext

    os.rename(filename, new_name)
</code></pre>
</div>
