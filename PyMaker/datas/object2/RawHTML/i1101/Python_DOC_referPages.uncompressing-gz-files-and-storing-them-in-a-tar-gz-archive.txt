<div class="post-text" itemprop="text">
<p>I have the following problem: I am writing a function that looks for a bunch of <code>.gz</code> files, uncompresses them, and stores the individually uncompressed files in a bigger <code>.tar.gz</code> archive. So far, I managed to implement it with the following code, but manually computing the uncompressed file size and setting the <a href="https://docs.python.org/3/library/tarfile.html#tarfile.TarInfo" rel="nofollow noreferrer"><code>TarInfo</code></a> size seem rather hackish and I would like to know whether there is a more idiomatic solution to my problem:</p>
<pre><code>import gzip
import os
import pathlib
import tarfile

def gather_compressed_files(input_dir: pathlib.Path, output_file: str):
    with tarfile.open(output_file, 'w:gz') as tar:
        for input_file in input_dir.glob('*.gz'):
            with gzip.open(input_file) as fd:
                tar_info = tarfile.TarInfo(input_file.stem)
                tar_info.size = fd.seek(0, os.SEEK_END)
                fd.seek(0, os.SEEK_SET)
                tar.addfile(tar_info, fd)
</code></pre>
<p>I tried to create a <code>TarInfo</code> object the following way instead of manually creating it:</p>
<pre><code>tar_info = tar.gettarinfo(arcname=input_file.stem, fileobj=fd)
</code></pre>
<p>However, this functions retrieves the path of the original <code>.gz</code> file we opened as <code>fd</code> to compute its size, and thus only provides a <code>tar_info.size</code> parameter corresponding to the compressed <code>.gz</code> data and not to the uncompressed data, which is not what I want. Not setting the <code>tar_fino.size</code> parameter at all doesn't work either because <code>addfile</code> uses said size when passed a file descriptor.</p>
<p>Is there a better, more idiomatic way to achieve this or am I stuck with my current solution?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your approach is the only way to avoid decompressing the file completely to disk or RAM. After all, you need to know the size ahead of time to add to the tar file, and <code>gzip</code> files don't really know their own decompressed size. <a href="http://www.zlib.org/rfc-gzip.html#header-trailer" rel="nofollow noreferrer">The <code>ISIZE</code> header field</a> theoretically provides the decompressed size, but the field was defined back in the 32 bit days, so it's actually the size modulo <code>2**32</code>; a file originally 4 GB in size and one that was 0 B file would have the same <code>ISIZE</code>. Regardless, Python doesn't expose <code>ISIZE</code>, so even if it was useful, there would be no built-in way to do this (you can always muck about with manual parsing, but that's not exactly clean or idiomatic).</p>
<p>If you want to avoid decompressing the file twice (once to <code>seek</code> forward, once to actually add it to the tar file), at the expense of decompressing it to disk, you can use a <code>tempfile.TemporaryFile</code> to avoid double decompression (without needing to store the original file in memory) with a slight tweak:</p>
<pre><code>import shutil
import tempfile

def gather_compressed_files(input_dir: pathlib.Path, output_file: str):
    with tarfile.open(output_file, 'w:gz') as tar:
        for input_file in input_dir.glob('*.gz'):
            with tempfile.TemporaryFile() as tf:
                # Could combine both in one with, but this way we close the gzip
                # file ASAP
                with gzip.open(input_file) as fd:
                    shutil.copyfileobj(fd, tf)
                tar_info = tarfile.TarInfo(input_file.stem)
                tar_info.size = tf.tell()
                tf.seek(0)
                tar.addfile(tar_info, tf)
</code></pre>
</div>
<span class="comment-copy">Could you give an example of what your trying to? Are all these <code>tar.gz</code> files stored in a directory? Do you want to merge all these files into one <code>tar.gz</code> file? I'm just verifying so I understand your problem correctly.</span>
<span class="comment-copy">I've got a directory with <code>.gz</code> files that I try to store individually uncompressed in a <code>.tar.gz</code> file.</span>
<span class="comment-copy">Thanks for the answer. It makes me a bit sad that <code>ISIZE</code> can't be used, but I guess we can't have all the toys we want to play with :)</span>
