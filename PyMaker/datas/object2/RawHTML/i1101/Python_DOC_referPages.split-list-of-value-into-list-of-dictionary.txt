<div class="post-text" itemprop="text">
<p>I have dictionary with key value like this : </p>
<pre><code>[{"key1" : ['1', '2'], "key2" : ['john', 'marvel']}, {"key1" : ['150', '120'], "key2" : ['gandalf', 'sam']}]
</code></pre>
<p>I would like to get something like this: </p>
<pre><code>[ {key1 : '1', key2 : 'john'}, {key1 : '2', key2 : 'marvel'}, {key1 : '150', key2 : 'gandalf'}, {key1 : '120', key2 : 'sam'}]
</code></pre>
<p>I am stuck, I think to embedded loops but I don't know how. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>data = [{"key1": ['1', '2'], "key2": ['john', 'marvel']}, {"key1": ['150', '120'], "key2": ['gandalf', 'sam']}]

keys = ['key1', 'key2']
result = [dict(zip(keys, items)) for d in data for items in zip(*(d[k] for k in keys))]

print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[{'key2': 'john', 'key1': '1'}, {'key2': 'marvel', 'key1': '2'}, {'key2': 'gandalf', 'key1': '150'}, {'key2': 'sam', 'key1': '120'}]
</code></pre>
<p>The above list comprehension is equivalent to the following for loop:</p>
<pre><code>result = []
for d in data:
    for items in zip(*(d[k] for k in keys)):
        result.append(dict(zip(keys, items)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you literally always have just <code>"key1"</code> and <code>"key2"</code>, then:</p>
<pre><code>In [1]: data = [{"key1" : ['1', '2'], "key2" : ['john', 'marvel']}, {"key1" : ['
   ...: 150', '120'], "key2" : ['gandalf', 'sam']}]
   ...:

In [2]: [{"key1":v1, "key2":v2} for d in data for (v1, v2) in zip(d['key1'], d['key2'])]
Out[2]:
[{'key1': '1', 'key2': 'john'},
 {'key1': '2', 'key2': 'marvel'},
 {'key1': '150', 'key2': 'gandalf'},
 {'key1': '120', 'key2': 'sam'}]
</code></pre>
<p>would do</p>
<p>A more general approach would be something like:</p>
<pre><code>In [5]: [dict(zip(d, vs)) for d in data for vs in zip(*d.values())]
Out[5]:
[{'key1': '1', 'key2': 'john'},
 {'key1': '2', 'key2': 'marvel'},
 {'key1': '150', 'key2': 'gandalf'},
 {'key1': '120', 'key2': 'sam'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>result = [{}]
for item in data:
    key, val = item.split(":", 1)
    if key in result[-1]:
        result.append({})
    result[-1][key] = val
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>list1 = [ {'key1' : '1', 'key2' : 'john'}, {'key1' : '2', 'key2' : 'marvel'}, {'key1' : '150', 'key2' : 'gandalf'}, {'key1' : '120', 'key2' : 'sam'}]
list2 = [{'key1':i['key1'][0], 'key2':i['key2'][0]} for i in list1] + [{'key1':i['key1'][1], 'key2':i['key2'][1]} for i in list1]
list2
[{'key1': '1', 'key2': 'john'},
 {'key1': '150', 'key2': 'gandalf'},
 {'key1': '2', 'key2': 'marvel'},
 {'key1': '120', 'key2': 'sam'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The most easiest way with 2 loops in list comprehension</p>
<p>no hardcoded lists and no new variables</p>
<pre><code>lst = [{"key1" : ['1', '2'], "key2" : ['john', 'marvel']}, {"key1" : ['150', '120'], "key2" : ['gandalf', 'sam']}]

[dict(zip(el.keys(), v)) for el in lst for k,v in el.items()]

[{'key1': '1', 'key2': '2'},
 {'key1': 'john', 'key2': 'marvel'},
 {'key1': '150', 'key2': '120'},
 {'key1': 'gandalf', 'key2': 'sam'}]
</code></pre>
</div>
