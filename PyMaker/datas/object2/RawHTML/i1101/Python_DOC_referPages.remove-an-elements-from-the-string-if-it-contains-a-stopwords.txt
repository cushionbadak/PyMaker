<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/18790072/how-to-remove-items-from-a-list-that-contains-words-found-in-items-in-another-li">How to remove items from a list that contains words found in items in another list [duplicate]</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I have a list as below:</p>
<pre><code>lst = ['for Sam', 'Just in', 'Mark Rich']
</code></pre>
<p>I am trying to remove an element from list of strings(string contains one or more words) which contains <code>stopwords</code>.</p>
<p>As 1st and 2nd elements in the list contains <code>for</code> and <code>in</code> which are <code>stopwords</code>, it will return</p>
<pre><code>new_lst = ['Mark Rich'] 
</code></pre>
<p><strong>What I tried</strong> </p>
<pre><code>from nltk.corpus import stopwords

stop_words = set(stopwords.words('english'))

lst = ['for Sam', 'Just in', 'Mark Rich']
new_lst = [i.split(" ") for i in lst]
new_lst = [" ".join(i) for i in new_lst for j in i if j not in stop_words]
</code></pre>
<p>Which is giving me output as:</p>
<pre><code>['for Sam', 'Just in', 'Mark Rich', 'Mark Rich']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need an <code>if</code> statement rather than extra nesting:</p>
<pre><code>new_lst = [' '.join(i) for i in new_lst if not any(j in i for j in stop_words)]
</code></pre>
<p>If you wish to utilize <code>set</code>, you can use <a href="https://docs.python.org/3/library/stdtypes.html#frozenset.isdisjoint" rel="nofollow noreferrer"><code>set.isdisjoint</code></a>:</p>
<pre><code>new_lst = [' '.join(i) for i in new_lst if stop_words.isdisjoint(i)]
</code></pre>
<hr/>
<p>Here's a demonstration:</p>
<pre><code>stop_words = {'for', 'in'}

lst = ['for Sam', 'Just in', 'Mark Rich']
new_lst = [i.split() for i in lst]
new_lst = [' '.join(i) for i in new_lst if stop_words.isdisjoint(i)]

print(new_lst)

# ['Mark Rich']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension and use <code>sets</code> to check if any words within the two lists intersect:</p>
<pre><code>[i for i in lst if not set(stop_words) &amp; set(i.split(' '))]
['Mark Rich']]
</code></pre>
</div>
<span class="comment-copy">Your 1st answer worked like a charm but 2nd one is giving an empty list.</span>
<span class="comment-copy">@Sociopath, Nope, works fine, see my example.</span>
<span class="comment-copy">thanks. Worked like a charm. Only one thing, in your answer you misplaced <code>]</code></span>
<span class="comment-copy">Note <code>set.intersection</code> has higher complexity vs <code>set.disjoint</code>. It's not necessary to calculate the exact intersection of the 2 sets to know if the intersection is empty.</span>
<span class="comment-copy">Yes I actually thought about <code>.isdisjoint</code> right when i saw your answer. thx for clarifying</span>
