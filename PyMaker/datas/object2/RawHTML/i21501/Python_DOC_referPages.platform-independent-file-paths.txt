<div class="post-text" itemprop="text">
<p>How can I use a file inside my app folder in Python?  Platform independent of course...
something similar to this:</p>
<pre><code>#!/bin/sh
mypath=${0%/*}
LIBDIR=$mypath/modules
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>os.path</code> and its functions, which take care of OS-specific paths:</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; os.path.join('app', 'subdir', 'dir', 'filename.foo')
'app/subdir/dir/filename.foo'
</code></pre>
<p>On Windows, it should print out with backslashes.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
os.path.join(os.path.curdir, 'file.name')
</code></pre>
<p>or</p>
<pre><code>import os
os.path.join(os.path.dirname(__file__), 'file.name')
</code></pre>
<p>depending upon whether it's a module <em>(2)</em> or a single script <em>(1)</em>, and whether you're invoking it from the same directory <em>(1)</em>, or from a different one <em>(2)</em>.</p>
<h2>Edit</h2>
<p>Looking at the "attempt" you have in your question, I'd guess that you'd want <em>(1)</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.4+ you can use <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer"><code>pathlib</code></a>:</p>
<pre><code>from pathlib import Path

libdir = Path(__file__).resolve().with_name('modules')
</code></pre>
<p>How it works: the <code>__file__</code> attribute contains the pathname of the file from which the module was loaded. You use it to initialize a <code>Path</code> object , make the path absolute using the <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.resolve" rel="nofollow noreferrer"><code>resolve()</code></a> method and replace the final path component using the <a href="https://docs.python.org/3/library/pathlib.html#pathlib.PurePath.with_name" rel="nofollow noreferrer"><code>with_name()</code></a> method.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>__file__</code> contains the module's location. Use the functions in <code>os.path</code> to extract the directory from it.</p>
</div>
<span class="comment-copy">can you be more clear ?</span>
<span class="comment-copy">It actually prints 'app\\subdir\\dir\\filename.foo' for me.</span>
<span class="comment-copy">@ArditS.: What's wrong with it?</span>
<span class="comment-copy">@ArditS. That's because you need to escape backslashes in strings. If you add <code>print</code>, you'll see that <code>print(os.path.join("foo", "bar", "baz"))</code> does indeed print <code>foo\bar\baz</code>.</span>
<span class="comment-copy">Or just:   <code>path = Path(__file__).resolve().with_name("modules")</code></span>
