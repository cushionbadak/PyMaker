<div class="post-text" itemprop="text">
<p>I have a function taking float arguments (generally integers or decimals with one significant digit), and I need to output the values in a string with two decimal places (5 -&gt; 5.00, 5.5 -&gt; 5.50, etc). How can I do this in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the string formatting operator for that:</p>
<pre><code>&gt;&gt;&gt; '%.2f' % 1.234
'1.23'
&gt;&gt;&gt; '%.2f' % 5.0
'5.00'
</code></pre>
<p>The result of the operator is a string, so you can store it in a variable, print etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since this post might be here for a while, lets also point out python 3 syntax:</p>
<pre><code>"{:.2f}".format(5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3.6/reference/lexical_analysis.html#f-strings" rel="noreferrer">f-string</a> formatting: </p>
<p>This is new in Python 3.6 - the string is placed in quotation marks as usual, prepended with <code>f'...</code> in the same way you would <code>r'...</code> for a raw string. Then you place whatever you want to put within your string, variables, numbers, inside braces <code>f'some string text with a {variable} or {number} within that text'</code> - and Python evaluates as with previous string formatting methods, except that this method is much more readable. </p>
<pre><code>&gt;&gt;&gt;a = 3.141592
&gt;&gt;&gt;print(f'My number is {a:.2f} - look at the nice rounding!')

My number is 3.14 - look at the nice rounding!
</code></pre>
<p>You can see in this example we <a href="https://docs.python.org/3/library/string.html#format-examples" rel="noreferrer">format with decimal places</a> in similar fashion to previous string formatting methods. </p>
<p>NB <code>a</code> can be an number, variable, or even an expression eg <code>f'{3*my_func(3.14):02f}'</code>.</p>
<p>Going forward, with new code f-strings should be preferred over common %s or str.format() methods as f-strings are much <a href="https://cito.github.io/blog/f-strings/" rel="noreferrer">faster</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>String formatting:</p>
<pre><code>print "%.2f" % 5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using python string formatting.</p>
<pre><code>&gt;&gt;&gt; "%0.2f" % 3
'3.00'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using Python 3 syntax:</p>
<pre><code>print('%.2f' % number)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you actually want to change the number itself instead of only displaying it differently use format()</p>
<p>Format it to 2 decimal places:</p>
<pre><code>format(value, '.2f')

example:

&gt;&gt;&gt; format(5.00000, '.2f')
'5.00'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I know it is an old question, but I was struggling finding the answer myself. Here is what I have come up with:</p>
<p>Python 3:</p>
<pre><code>
num_dict = { 'num': 0.123, 'num2':0.127}
"{0[num]:.2f}_{0[num]:.2f}".format(num_dict)

#output:  
0.12_0.13
</code></pre>
</div>
<span class="comment-copy">This syntax also works with Python 2.7 (at least).</span>
<span class="comment-copy">@kkurian, woah! you just blew my mind :D maybe i should read a modern python book someday - i learnt mine from a 1.5 and somehow miss all the new stuff ;)</span>
<span class="comment-copy">If you don't want to use the numeric placeholder: <code>"{:.2f}".format(5)</code></span>
<span class="comment-copy">@User you seem familiar.</span>
<span class="comment-copy">I think @toonarmycaptain response about fstrings would be closer to "the python3 way." However, fstrings were added in python 3.6, which hadn't released when this answer was posted.</span>
<span class="comment-copy">But all this are strings , so iam not able to do any mathematical operations on them</span>
<span class="comment-copy">@itsaruns Adding empty decimal places makes no difference if you just need to perform mathematical operations on them. You may be looking for <code>math.floor</code>, <code>math.ceil</code> or <code>round</code></span>
<span class="comment-copy">Hi, welcome to Stack Overflow. When answering a question that already has many answers, please be sure to add some additional insight into why the response you're providing is substantive and not simply echoing what's already been vetted by the original poster. This is especially important in "code-only" answers such as the one you've provided.</span>
