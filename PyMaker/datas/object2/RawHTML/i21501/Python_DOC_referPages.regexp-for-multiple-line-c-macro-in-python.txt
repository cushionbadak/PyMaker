<div class="post-text" itemprop="text">
<p>I am trying to delete macros from C headers but I have problem with deleting multiple line macros. So for example</p>
<pre><code>#define macro(char)  \
//macro still continues \
//macro still continues \
</code></pre>
<p>This is regexp for deleting one-line macros but I am not quite sure how to include \n in regular expression.</p>
<pre><code>text=re.sub('#([\W\w\s\d])*?\n', '', text, re.S)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>text=re.sub('#([\W\w\s\d])*?(\n.*?\\\\)*\n', '', text, re.S | re.M)
</code></pre>
<p>should do the trick</p>
<p><strong>EDIT:</strong> fix by @Blackie123</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>text=re.sub(r'^\s*#(?:.*\\\r?\n)*.*$', '', text, flags=re.MULTILINE)
</code></pre>
<p>This one is deleting all multiline macros in a text. There is a <strong>\r?\n</strong> for compatibility with windows line endings. One important thing is writing <strong>"flags="</strong> before flags, because fourth argument in re.sub() is a count, so accepted answer above is quiet wrong and method is interpreting specified flags as a count argument.</p>
<p><a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html#re.sub</a></p>
<p><a href="https://stackoverflow.com/questions/12082886/bug-in-python-regex-re-sub-with-re-multiline">Bug in Python Regex? (re.sub with re.MULTILINE)</a></p>
</div>
<span class="comment-copy">Are you also trying to remove other preprocessor constructs, for example, conditional compilation (<code>#ifdef</code> et al)? Your current regular expression will do so, but the question only mentions macros.</span>
<span class="comment-copy">Yes I want to erase ALL macros. This currently erases only oneline macros such as #include "library.h". I am just not quite sure how to put \\n in regexp and it should work for every macro then</span>
<span class="comment-copy">Nitpicking, but clarity is important to get good answers: I think you mean you want to erase all <i>preprocessor directives</i>. A macro (<code>#define ...</code>) is a type of directive, as is source inclusion (<code>#include ...</code>) and conditional inclusion (<code>#ifdef ... #endif</code>). See the <a href="http://en.wikipedia.org/wiki/C_preprocessor" rel="nofollow noreferrer">C preprocessor</a> article on Wikipedia.</span>
<span class="comment-copy">Oh I am sorry, didn't read it carefully. as far as conditional inclusions are concerned I want to erase just #ifdef &amp; #endif but not code between.</span>
<span class="comment-copy">Not 100% correct but more than enough to help me make it work, thanks.</span>
<span class="comment-copy">just for other people. this is the working one: text=re.sub('#([\W\w\s\d])*?(\n.*?\\\\)*\n', '', text, re.S | re.M)</span>
<span class="comment-copy">yes, you are right. I forgot that the re engine needs double-backslashes too... The other solution is to use a raw string (r'...')</span>
