<div class="post-text" itemprop="text">
<p>I can iterate through a python object with te following code, however I would like to be able to use placeholders for the schema and table name, normally I do this with <code>{}.{}</code> ad the <code>.format()</code> methods, but how do you combine the two?</p>
<pre><code>cur.executemany("INSERT INTO schema.table_name (x,y,z) "
                        "values (%s, %s, %s)", top_sample)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure what the issue is. You can very well use <code>format</code> like this:</p>
<pre><code>cur.executemany("INSERT INTO {}.{} (x,y,z) values (%s, %s, %s)".format('hello', 'world'), top_sample)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Depends on which python you use you can try use <code>f-string</code></p>
<pre><code>schema = "schema"
table_name = "table_name"

cur.executemany(f"INSERT INTO {schema}.{table_name} (x,y,z) values (%s, %s, %s)", top_sample)
</code></pre>
<p>check <a href="https://www.python.org/dev/peps/pep-0498/" rel="nofollow noreferrer">PEP 498 -- Literal String Interpolation</a> </p>
<p>another option is a simple <code>format</code></p>
<pre><code>cur.executemany("INSERT INTO {schema}.{table_name} (x,y,z) values (%s, %s, %s)".format(schema=schema, table_name=table_name), top_sample)
</code></pre>
<p>but I find the first option shorter and cleaner</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>cur.executemany(
  """INSERT INTO schema.{table_name} (x,y,z) values (%s, %s, %s)""".format(table_name=your_table_name),
  top_sample
)
</code></pre>
<p>place your table name in place of your_table_name</p>
</div>
