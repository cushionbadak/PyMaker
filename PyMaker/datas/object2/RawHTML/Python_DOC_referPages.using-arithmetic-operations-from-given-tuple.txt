<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1740726/turn-string-into-operator">Turn string into operator</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I want to use arithmetic operations in python from given tuple. Thing is i know i can use if statements for each of them and depending on user input it will give the correct answer. I don't know but is there a way to do it without ifs. I've tried with for as you can see below but I'm having trouble getting the string as an arithmetic operator.</p>
<p>Code:</p>
<pre><code>__operators = ('+', '-', '/', '//', '*', '**', '%')

def calculator():
    x = input()
    operator = input()
    y = input()
    op = operator

    # print(str(x) + operator + str(y))

    rezultat = 0

    for operator in __operators:
        if operator in __operators:
            operator = op     


    rezultat = x + op + y       
    print(rezultat)
    return rezultat


calculator()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>operator</code> module and a <code>dict</code> !</p>
<pre><code>import operator

op = {
    "+": operator.add
    "-": operator.sub
    "/": operator.truediv
    "//": operator.floordiv
    "*": operator.mul
    "**": operator.pow
    "%": operator.mod
}

print(op["+"](2, 3))
</code></pre>
<blockquote>
<p>5</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>It is basically the same as <strong>@Fukiyel</strong>'s answer, but without the use of <code>operator</code> module. You implement all the operations you want your calculator to support, then you create a dict with key the operator characters and value the functions:</p>
<pre><code>def add(n1,n2):
    return n1 + n2

def subtract(n1,n2):
    return n1 - n2

def division(n1,n2):
    if n2 != 0:
        return n1 / n2

def integerDivision(n1,n2):
    if n2 != 0:
        return n1 // n2

def multiply(n1,n2):
    return n1 * n2

def power(n1,n2):
    return n1 ** n2

def modulo(n1,n2):
    return n1 % n2

__operators = {'+' : add, '-' : subtract, '/' : division, '//' : integerDivision, '*' : multiply, '**' : power, '%' : modulo}

def calculator():
    x = int(input())
    operator = input()
    y = int(input())

    for op in __operators:
        if operator == op:
            result = __operators[operator](x,y)
            print(result)
            return result 

calculator()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval</code></a> but be careful with it, as it allows arbitrary code execution if not handled correctly.</p>
<pre><code>if operator in __operators:
    rezultat = eval("x" + operator + "y")
</code></pre>
</div>
<span class="comment-copy">You've having trouble because it <i>isn't</i> an operator, it's just a string. Also <code>if operator in __operators:</code> seems totally pointless given that you're inside a loop <code>for operator in __operators:</code>.</span>
<span class="comment-copy">@jonrsharpe Thanks for the correction. And is there a way to convert it so python will read it as an operator?</span>
<span class="comment-copy">You may want to use a dictionary that maps the operator strings to operator functions from the <code>operator</code> module.</span>
<span class="comment-copy">There are a couple of options. I'd recommend research, there are existing questions on how to go from a string to an operator.</span>
<span class="comment-copy">Helped me out thank you!</span>
