<div class="post-text" itemprop="text">
<p>I'm wondering what is going on with the file <code>open()</code> mode validation (Python2.7):</p>
<pre><code>&gt;&gt;&gt; with open('input.txt', 'illegal') as f:
...     for line in f:
...         print line
... 
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: mode string must begin with one of 'r', 'w', 'a' or 'U', not 'illegal'

&gt;&gt;&gt; with open('input.txt', 'rock&amp;roll') as f:
...     for line in f:
...         print line
... 
1

2

3
</code></pre>
<p>So, I cannot open the file in <code>illegal</code> mode, but I can open it in <code>rock&amp;roll</code> mode. What mode is actually used for opening the file in this case? </p>
<p>Note that on python3 I cannot use both <code>illegal</code> and <code>rock&amp;roll</code>:</p>
<pre><code>&gt;&gt;&gt; with open('input.txt', 'rock&amp;roll') as f:
...     for line in f:
...         print(line)
... 
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: invalid mode: 'rock&amp;roll'
&gt;&gt;&gt; with open('input.txt', 'illegal') as f:
...     for line in f:
...         print(line)
... 
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: invalid mode: 'illegal'
</code></pre>
<p>And, this is confusing, why the behavior is different for python3.x? </p>
</div>
<div class="post-text" itemprop="text">
<p>The Python 2.x <code>open</code> function essentially delegates its work to the C library <code>fopen</code> function. On my system, the documentation for <code>fopen</code> contains:</p>
<blockquote>
<p>The argument <code>mode</code> points to a string beginning with one of the following sequences (Additional characters may follow these sequences.):</p>
</blockquote>
<p>Your <code>ock&amp;roll</code> is considered "additional characters".</p>
<p>In Python 3, the <a href="https://docs.python.org/3/library/functions.html#open">allowed open modes are more restricted</a> (essentially, only valid strings are permitted).</p>
</div>
<div class="post-text" itemprop="text">
<p>The previous traceback explains it nicely:</p>
<blockquote>
<p>"ValueError: mode string must <strong>begin with</strong> one of 'r', 'w', 'a' or 'U'"</p>
</blockquote>
<p>"rock&amp;roll" begins with <code>"r"</code>, so it's apparently legal.</p>
</div>
<span class="comment-copy">Gave me a good laugh after reading mgilson's answer</span>
<span class="comment-copy">Yeah, I was about to say my guess is they simply added input validation to the function.</span>
<span class="comment-copy">The Python 3 behaviour can be achieved on Python 2 with <code>from io import open</code>.</span>
<span class="comment-copy">Ok, but why the behavior is different for python3.x? This is what got me confused a bit.</span>
<span class="comment-copy">@alecxe -- LOTS of things are different between python2.7 and python3.x ... The devs probably thought that it was stupid to accept "rock&amp;roll" as a file mode even though the system's <code>fopen</code> allowed it, so they probably added some validation ahead of time.</span>
<span class="comment-copy">The <code>io</code> system in Python 3 is a very different implementation than the legacy Python 2 one.  The new io system is also available on Python 2.7 (and introduced in 2.6).  You should see the Py3 behavior if you use <code>import io; io.open('input.txt', 'rock&amp;roll')</code>.  More info: <a href="https://docs.python.org/2/library/io.html" rel="nofollow noreferrer">docs.python.org/2/library/io.html</a></span>
