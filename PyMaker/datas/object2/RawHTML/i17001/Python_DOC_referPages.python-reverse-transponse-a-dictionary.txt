<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7304980/invert-keys-and-values-of-the-original-dictionary">Invert keys and values of the original dictionary</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I am looking to tranpose a dictionary on python and after looking around i was not able to ifnd a solution for this. Does anybody know how could i reverse a dictionary like the following as input:</p>
<blockquote>
<pre><code>graph = {'A': ['B', 'C'],
             'B': ['C', 'D'],
             'C': ['D'],
             'D': ['C'],
             'E': ['F'],
             'F': ['C']}
</code></pre>
</blockquote>
<p>so that i get something like:</p>
<pre><code>newgraph = {'A': [''],
         'B': ['A'],
         'C': ['A', 'B', 'D','F'],
         'D': ['B', 'C'],
         'E': [''],
         'F': ['E']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>defaultdict</code></a>:</p>
<pre><code>newgraph = defaultdict(list)
for x, adj in graph.items():
    for y in adj:
        newgraph[y].append(x)
</code></pre>
<p>While it doesn't seem to make any sense to have the empty string <code>''</code> in the empty lists, it's certainly possible:</p>
<pre><code>for x in newgraph:
    newgraph[x] = newgraph[x] or ['']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/collections.html#collections.defaultdict" rel="nofollow"><code>defaultdict</code></a>:</p>
<pre><code>&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; graph = {'A': ['B', 'C'],
...              'B': ['C', 'D'],
...              'C': ['D'],
...              'D': ['C'],
...              'E': ['F'],
...              'F': ['C']}
&gt;&gt;&gt; new_graph = defaultdict(list)
&gt;&gt;&gt; for ele in graph.keys():
...     new_graph[ele] = []
...
&gt;&gt;&gt; for k, v in graph.items():
...     for ele in v:
...             new_graph[ele].append(k)
...
&gt;&gt;&gt; pprint(new_graph)
{'A': [],
 'B': ['A'],
 'C': ['A', 'B', 'D', 'F'],
 'D': ['B', 'C'],
 'E': [],
 'F': ['E']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's also possible without <code>defaultdict</code>.
Here I've left the empty keys in the new dict with the value None.</p>
<pre><code>graph = {'A': ['B', 'C'],
             'B': ['C', 'D'],
             'C': ['D'],
             'D': ['C'],
             'E': ['F'],
             'F': ['C']}

g = dict.fromkeys(graph.keys())
for k, v in graph.iteritems():
  for x in v:
    if g[x]: g[x] += [k]
    else:    g[x] = [k]

for k in sorted(graph.keys()):
  print k, ':', g[k]
</code></pre>
<p>Output:</p>
<pre><code>A : None
B : ['A']
C : ['A', 'B', 'D', 'F']
D : ['C', 'B']
E : None
F : ['E']
</code></pre>
</div>
<span class="comment-copy">Why is F missing from the result for C?</span>
<span class="comment-copy">sorry, that was a typo! will update</span>
<span class="comment-copy">Why is F missing from the result for C and E has result 'F'?</span>
<span class="comment-copy">OP specifies that <code>'A'</code> should map to a list containing an empty string (<code>'A': ['']</code>).  Your answer makes more sense because if you request <code>new_graph['A']</code> you get an empty list, which is a better representation of no values.  I wonder whether it makes sense to insert the empty lists because the defaultdict will create them on demand.</span>
<span class="comment-copy">I fixed that a moment ago. :)</span>
<span class="comment-copy">how did you manage to get that order while printing. for some reason i get&gt;&gt;&gt;['A', 'B', 'E', 'D', 'F', 'M']</span>
