<div class="post-text" itemprop="text">
<p>I am trying to pull out a particular slice of a numpy array but don't know how to express it with a tuple of indices. Using a tuple of indices works if its length is the same as the number of dimensions:</p>
<pre><code>ind = (1,2,3)

# these two values are the same
foo[1,2,3] 
foo[ind]
</code></pre>
<p>But if I want to get a slice along one dimension the same notation doesn't work:</p>
<pre><code>ind = (2,3)

# these two values are not the same
foo[:,2,3]
foo[:,ind]

# and this isn't even proper syntax
foo[:,*ind]
</code></pre>
<p>So is there a way to use a named tuple of indices together with slices?</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using the <code>:</code> syntax you can explicitly create the <a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow"><code>slice</code></a> object and add that to the tuple:</p>
<pre><code>ind = (2, 3)
s = slice(None) # equivalent to ':'
foo[(s,) + ind] # add s to tuples
</code></pre>
<p>In contrast to using <code>foo[:, ind]</code>, the result of this should be the same as <code>foo[:,2,3]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>For accessing 2D arrays... 
I believe what you are suggesting should work. Be mindful that numpy arrays index starting from 0. So to pull the first and third column from the following matrix I use column indices 0 and 2.</p>
<pre><code>import numpy as np
foo = np.array([[1,2,3],[4,5,6],[7,8,9]])

ind = (0,2)
foo[:,ind]
</code></pre>
<p>For accessing 3D arrays...
3D numpy arrays are accessed by 3 values x[i,j,k] where "i" represents the first matrix slice, or </p>
<pre><code>[[ 0,  1,  2],
 [ 3,  4,  5],
 [ 6,  7,  8]]
</code></pre>
<p>from my example below. "j" represents the second matrix slice, or the rows of these matrices. And "k" represents their columns. i,j and k can be :, integer or tuple. So we can access particular slices by using two sets of named tuples as follows.</p>
<pre><code>import numpy as np
foo2 = np.array([[[ 0,  1,  2],
               [ 3,  4,  5],
               [ 6,  7,  8]],

              [[ 9, 10, 11],
               [12, 13, 14],
               [15, 16, 17]],

              [[18, 19, 20],
               [21, 22, 23],
               [24, 25, 26]]])

ind1 = (1,2)
ind2 = (0,1)

foo2[:,ind1,ind2]
</code></pre>
</div>
<span class="comment-copy">That will get the first and third column, but that's not what I'm trying to do. If I have a 3D array, I'm trying to get a single column, at a particular row and 'tube' (or however you would call the 3rd direction along the array)</span>
