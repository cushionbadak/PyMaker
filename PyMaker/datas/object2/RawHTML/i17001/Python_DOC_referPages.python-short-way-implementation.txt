<div class="post-text" itemprop="text">
<p>I've got a little question: At the moment, I do the following: </p>
<pre><code>", ".join((item[0][i][1] for i in range(len(item[0]))))
</code></pre>
<p>How can I insert the additional statement <code>"if item[0][i][1] not in blockedList"</code>  ? </p>
<p>Thanks a lot for any help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just add it in your list comprehension as:</p>
<pre><code>", ".join(item[0][i][1] for i in range(len(item[0])) if item[0][i][1] not in blockedList)
</code></pre>
<h3>Note</h3>
<p>You can simplify your code as follows:</p>
<pre><code>', '.join(i[1] for i in item[0] if i[1] not in blockedList)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a simple example of joining a two-dimensional array/list.</p>
<pre><code>blocked = [(0,0,0,1),(0,0,1,1),(0,1,0,1),(0,1,1,1),(1,0,0,1),(1,0,1,1),(1,1,1,1)]
data = [(0,0,0,0),(0,0,0,1),(0,0,1,0),(0,0,1,1)]

print ':'.join([''.join(str(col) for col in row) for row in data if row not in blocked])
</code></pre>
<blockquote>
<p>0000:0010</p>
</blockquote>
<p>I have devised a simple grammar for recursive joining of lists/arrays. This is by no means the official grammar. Please see links to official below.</p>
<pre><code>LIST = [FUNCTION(ATOM) for ATOM in LIST if CONDITION]
STR = 'DELIM'.join(LIST)
</code></pre>
<p>Now if you notice, you can now easily substitute a <code>LIST</code> into the <code>LIST</code> for the <code>STR</code> grammar.</p>
<hr/>
<p>Here are the official python grammar rules for parsing:</p>
<p><strong><em>Python 2 Grammar:</em></strong> <a href="https://docs.python.org/2/reference/grammar.html" rel="nofollow">https://docs.python.org/2/reference/grammar.html</a><br/>
<strong><em>Python 3 Grammar:</em></strong> <a href="https://docs.python.org/3/reference/grammar.html" rel="nofollow">https://docs.python.org/3/reference/grammar.html</a></p>
</div>
<span class="comment-copy">Don't use range-len. Your expression is much cleaner as <code>', '.join(x[1] for x in item[0] if x[1] not in blockedList)</code>.</span>
<span class="comment-copy">Thank you very much! :)</span>
