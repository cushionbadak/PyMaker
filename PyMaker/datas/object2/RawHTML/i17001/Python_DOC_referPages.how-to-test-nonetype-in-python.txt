<div class="post-text" itemprop="text">
<p>I have a method that sometimes returns a NoneType value. So how can I question a variable that is a NoneType? I need to use <strong><em>if</em></strong> method, for example</p>
<pre><code>if not new:
    new = '#'
</code></pre>
<p>I know that is the wrong way and I hope you understand what I meant.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>So how can I question a variable that is a NoneType?</p>
</blockquote>
<p>Use <code>is</code> operator, like this</p>
<pre><code>if variable is None:
</code></pre>
<p><strong>Why this works?</strong></p>
<p>Since <a href="https://docs.python.org/2/library/constants.html#None"><code>None</code></a> is the sole singleton object of <a href="https://docs.python.org/2/library/types.html#types.NoneType"><code>NoneType</code></a> in Python, we can use <code>is</code> operator to check if a variable has <code>None</code> in it or not.</p>
<p>Quoting from <a href="https://docs.python.org/2/reference/expressions.html#is"><code>is</code> docs</a>,</p>
<blockquote>
<p>The operators <code>is</code> and <code>is not</code> test for object identity: <code>x is y</code> is true if and only if <code>x</code> and <code>y</code> are the same object. <code>x is not y</code> yields the inverse truth value.</p>
</blockquote>
<p>Since there can be only one instance of <code>None</code>, <code>is</code> would be the preferred way to check <code>None</code>.</p>
<hr/>
<p><strong>Hear it from the horse's mouth</strong></p>
<p>Quoting <a href="https://www.python.org/dev/peps/pep-0008/#programming-recommendations">Python's Coding Style Guidelines - PEP-008</a> (jointly defined by Guido himself),</p>
<blockquote>
<p>Comparisons to singletons like <strong><code>None</code> should always be done with <code>is</code> or <code>is not</code></strong>, <strong>never the equality operators</strong>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<pre><code>if variable is None:
   ...
</code></pre>
<hr/>
<pre><code>if variable is not None:
   ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It can also be done with <code>isinstance</code> as per <a href="https://stackoverflow.com/a/40553322/4288043">Alex Hall's answer</a> : </p>
<pre><code>&gt;&gt;&gt; NoneType = type(None)
&gt;&gt;&gt; x = None
&gt;&gt;&gt; type(x) == NoneType
True
&gt;&gt;&gt; isinstance(x, NoneType)
True
</code></pre>
<p><code>isinstance</code> is also intuitive but there is the complication that it requires the line </p>
<p><code>NoneType = type(None)</code> </p>
<p>which isn't needed for types like <code>int</code> and <code>float</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong><em>As pointed out by Aaron Hill's command:</em></strong></p>
<blockquote>
<p>Since you can't subclass <code>NoneType</code> and since <code>None</code> is a singleton, <code>isinstance</code> should not be used to detect <code>None</code> - instead you should do as the accepted answer says, and use <code>is None</code> or <code>is not None</code>.</p>
</blockquote>
<hr/>
<p><strong><em>Original Answer:</em></strong></p>
<p>The simplest way however, without the extra line in addition to <a href="https://stackoverflow.com/questions/23086383/how-to-test-nonetype-in-python/48464170#48464170">cardamom's answer</a> is probably:<br/>
<code>isinstance(x, type(None))</code> </p>
<blockquote>
<p>So how can I question a variable that is a NoneType? I need to use if method</p>
</blockquote>
<p>Using <code>isinstance()</code> does not require an <code>is</code> within the <code>if</code>-statement: </p>
<pre><code>if isinstance(x, type(None)): 
    #do stuff
</code></pre>
<hr/>
<p><strong>Additional information</strong><br/>
You can also check for multiple types in one <code>isinstance()</code> statement as mentioned in the <a href="https://docs.python.org/3/library/functions.html#isinstance" rel="nofollow noreferrer">documentation</a>. Just write the types as a tuple. </p>
<pre><code>isinstance(x, (type(None), bytes))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python 2.7 :</p>
<pre><code>x = None
isinstance(x, type(None))
</code></pre>
<p>or</p>
<pre><code>isinstance(None, type(None))
</code></pre>
<p>==&gt; True</p>
</div>
<div class="post-text" itemprop="text">
<p>I hope this example will be helpful for you)</p>
<pre><code>print(type(None) # NoneType
</code></pre>
<p>So, you can check type of the variable name</p>
<pre><code>#Example
name = 12 # name = None
if type(name) != type(None):
    print(name)
else:
    print("Can't find name")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not sure if this answers the question. But I know this took me a while to figure out. I was looping through a website and all of sudden the name of the authors weren't there anymore. So needed a check statement. </p>
<pre><code>if type(author) == type(None):
     my if body
else:
    my else body
</code></pre>
<p>Author can be any variable in this case, and <code>None</code> can be any type that you are checking for.</p>
</div>
<span class="comment-copy">I think this was answered <a href="http://stackoverflow.com/questions/14247373/python-none-comparison-should-i-use-is-or">here</a> and apparently somewhere before</span>
<span class="comment-copy">If <code>None</code> is the only value your method returns for which <code>bool(returnValue)</code> equals <code>False</code>, then <code>if not new:</code> ought to work fine. This occurs sometimes in the built-in libs - for example, <a href="https://docs.python.org/2/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match</code></a> returns either None or a truthy match object.</span>
<span class="comment-copy">Also see my answer about <code>null</code> and <code>None</code> in python <a href="https://stackoverflow.com/questions/3289601/null-object-in-python/48504780#48504780">here</a>.</span>
<span class="comment-copy">Since you can't subclass <code>NoneType</code> and since <code>None</code> is a singleton, <code>isinstance</code> should not be used to detect <code>None</code> - instead you should do as the accepted answer says, and use <code>is None</code> or <code>is not None</code>.</span>
<span class="comment-copy">Not working on <code>python3.6.7</code></span>
<span class="comment-copy">Since you can't subclass <code>NoneType</code> and since <code>None</code> is a singleton, <code>isinstance</code> should not be used to detect <code>None</code> - instead you should do as the accepted answer says, and use <code>is None</code> or <code>is not None</code>.</span>
<span class="comment-copy">This answer was useful for <code>python 3.6.7</code></span>
<span class="comment-copy">Since you can't subclass <code>NoneType</code> and since <code>None</code> is a singleton, <code>isinstance</code> should not be used to detect <code>None</code> - instead you should do as the accepted answer says, and use <code>is None</code> or <code>is not None</code>.</span>
<span class="comment-copy">Oh ok! Thanks !</span>
<span class="comment-copy">Since <code>None</code> is a singleton, <code>type</code> should not be used to detect <code>None</code> - instead you should do as the accepted answer says, and use <code>is None</code> or <code>is not None</code>.</span>
