<div class="post-text" itemprop="text">
<p>I need to write a program that takes as data a tuple of two-element tuples, such as:</p>
<pre><code>((1, 1), (2, 2), (12, 13), (4, 4), (99, 98))
</code></pre>
<p>This and/or similar data should be hard-coded (no need for user input).  Then, loop over the tuple and print out the results of multiplying the two numbers together, and use string formatting to display nicely.</p>
<p>I would really appreciate if you explain to me, in detail, what to do and how.</p>
<p>update:</p>
<p>i did </p>
<pre><code>multuple = ((1, 1), (2, 2), (12, 13), (4, 4), (99, 98))

for a, b in multuple:
    print("{} = {} x {}".format(a*b,a,b)
</code></pre>
<p>Thank you all for help. </p>
</div>
<div class="post-text" itemprop="text">
<p>Simplest way to do it:</p>
<pre><code>&gt;&gt;&gt; data = ((1, 1), (2, 2), (12, 13), (4, 4), (99, 98))
&gt;&gt;&gt; result = (a[0] * a[1] for a in data)
&gt;&gt;&gt; list(result)
[1, 4, 156, 16, 9702]
&gt;&gt;&gt;
</code></pre>
<p>Computing <code>result</code> like above one-liner is the same as doing: </p>
<pre><code>result = []
for item in data:
    result.append(item[0] * item[1])
</code></pre>
<p>The one line computation most of the answers mentioned is called <a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>. Since i wrapped <code>a[0] * a[1] for a in data</code> in a round brackets and not square brackets, it instructs the interpreter to return a <a href="https://wiki.python.org/moin/Generators" rel="nofollow">generator</a> and not a list. Which is why I have to use <code>list(result)</code> to print it as a list. This may be a overkill for smaller input array lengths like above but returning generators is a good practice when dealing with larger lists.</p>
<p>Not sure what you meant by a string formatting to print the results nicely, but this is one way:</p>
<pre><code>&gt;&gt;&gt; data = ((1, 1), (2, 2), (12, 13), (4, 4), (99, 98))
&gt;&gt;&gt; result = (a[0] * a[1] for a in data)
&gt;&gt;&gt; for item in zip(data, list(result)):
        print 'Product of {} and {} is {}'.format(item[0][0], item[0][3], item[1])


Product of 1 and 1 is 1
Product of 2 and 2 is 4
Product of 12 and 13 is 156
Product of 4 and 4 is 16
Product of 99 and 98 is 9702
&gt;&gt;&gt; 
</code></pre>
<p>Documentation on <a href="https://docs.python.org/2/library/functions.html#format" rel="nofollow"><code>format()</code></a></p>
</div>
<div class="post-text" itemprop="text">
<p>This is best accomplished with a list comprehension:</p>
<pre class="lang-py prettyprint-override"><code>seq = ((1,1), (2,2), ...)
prod = [a * b for a,b in seq]
</code></pre>
<p>You can read this backwards to establish how it works. The comprehension "[...]" iterates through <code>seq</code>, unpacks each tuple into variables <code>a</code> and <code>b</code>, and multiplies them together producing a new list containing the products.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is the simplest way- you can just unpack the each <code>tuple</code> within the list and then multiply them together within a list comprehension:</p>
<pre><code>&gt;&gt;&gt; ((1, 1), (2, 2), (12, 13), (4, 4), (99, 98))
&gt;&gt;&gt; [n*m for n, m in start]
[1, 4, 156, 16, 9702]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; data = ((1, 1), (2, 2), (12, 13), (4, 4), (99, 98))
&gt;&gt;&gt; for x, y in data:
&gt;&gt;&gt;    print("{} * {} = {}".format(x, y, x*y))

1 * 1 = 1
2 * 2 = 4
12 * 13 = 156
4 * 4 = 16
99 * 98 = 9702
</code></pre>
</div>
<span class="comment-copy">Have you taken a shot at it?  It would be easier to help if you were to show your attempt.</span>
<span class="comment-copy">You could start with <code>map(lambda t: t[0]*t[1], ts)</code> where <code>ts</code> is your tuple of tuples</span>
<span class="comment-copy">Here are some links: <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">Python Tutorial</a>, <a href="http://learnpythonthehardway.org/book/" rel="nofollow noreferrer">Learn Python the Hard Way</a></span>
<span class="comment-copy">Yes it is. its from basic string formatting, i couldnt really understand on how to do it. not trying to make you guys do my homework, thats why i would really appreciate if you explain me more on how and what to do rather than just solution.</span>
<span class="comment-copy">this is exactly what i did. thank you.</span>
<span class="comment-copy">I'm glad to help. It would be nice if you upvote the answer if it help you. ;)</span>
<span class="comment-copy">I up voted but it said I need to have at least 15 reputation.</span>
