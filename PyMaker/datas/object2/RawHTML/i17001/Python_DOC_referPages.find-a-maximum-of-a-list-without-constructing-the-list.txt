<div class="post-text" itemprop="text">
<p>I've been playing around with Python for making one-line solutions for some competition problems, and I've run into the following issue. My solution can be written as <code>max([f(k) for k in range(n)])</code> (where <code>f(k)</code> is some simple expression), which looks great, but when <code>n</code> is large it ends up constructing a list before finding its maximum, which exceeds the memory limit. Is there a way to find the maximum without actually constructing the list, while still keeping it down to one line? I know the following works, but if I wanted that I'd just use a different language:</p>
<pre><code>best = f(0)
for k in range(n):
  best = max(best, f(k))
return best
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow"><code>max()</code></a> takes a <a href="https://docs.python.org/3/tutorial/classes.html#generators" rel="nofollow">generator</a> also:</p>
<pre><code>max(f(k) for k in range(n))
</code></pre>
<p>This saves you from having to build the entire list.</p>
<p>Thanks to @DanielRoseman for pointing out that in Python 2.x you should be using <code>xrange()</code> instead of <code>range()</code>. Recall that <code>range()</code> returns a list in Python 2.x, whereas <code>xrange()</code> returns an <code>xrange object</code> (a constant-memory iterable).</p>
</div>
<span class="comment-copy">If this isn't Python 3, you should also be using <code>xrange</code> rather than <code>range</code> to avoid constructing that list.</span>
<span class="comment-copy">Any iterator actually, including Python 3 <code>map</code> (useful if <code>f</code> is actually a function rather than an inline expression).</span>
<span class="comment-copy">@DanielRoseman Thanks, I made a note of that in the answer.</span>
<span class="comment-copy">"<code>xrange()</code> returns a generator." --&gt; "xrange() returns an object, xrange object" (<i>not</i> generator)</span>
<span class="comment-copy">@GrijeshChauhan OK, I guess an <code>xrange</code> object isn't technically a generator.</span>
