<div class="post-text" itemprop="text">
<p>I am trying to set up some simple flag arguments for my program but cannot figure out how to access them.  I have the argparser:</p>
<pre><code>   parser = argparse.ArgumentParser(description='Simple PostScript Interpreter')
   parser.add_argument('-s', action="store_true")
   parser.add_argument('-d', action="store_true")
   parser.parse_args(sys.argv[1:])
</code></pre>
<p>The program should take either <code>sps.py -s</code>, <code>sps.py -d</code>, or <code>sps.py</code> on the command line. Then I just want to check whether or not the <code>-s</code> flag was set or the <code>-d</code> flag was set. If neither were set, then just default to -d.</p>
<p>What do I need to do to access the boolean values that are set by the parser?</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to give <a href="https://docs.python.org/dev/library/argparse.html#argparse.ArgumentParser.parse_args" rel="noreferrer"><code>parse_args()</code></a> any parameters. You call it like this:</p>
<pre><code>&gt;&gt;&gt; args = parser.parse_args()
</code></pre>
<p>which will return a <a href="https://docs.python.org/dev/library/argparse.html#argparse.Namespace" rel="noreferrer"><code>NameSpace</code></a> object. You can access your arguments using the dot notation:</p>
<pre><code>&gt;&gt;&gt; args.s
False

&gt;&gt;&gt; args.d
False
</code></pre>
<p>Working example:</p>
<pre><code>import argparse
parser = argparse.ArgumentParser(description='Simple PostScript Interpreter')
parser.add_argument('-s', action="store_true")
parser.add_argument('-d', action="store_true")
args = parser.parse_args()
print args
</code></pre>
<p>Running it like so:</p>
<pre><code>msvalkon@Lunkwill:/tmp$ python sps.py
Namespace(d=False, s=False)

msvalkon@Lunkwill:/tmp$ python sps.py -d
Namespace(d=True, s=False)

msvalkon@Lunkwill:/tmp$ python sps.py -s
Namespace(d=False, s=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try adding this:    </p>
<pre><code>args = parser.parse_args()
print args.s
print args.d
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your existing code is mostly correct:</p>
<pre><code>parser = argparse.ArgumentParser(description='Simple PostScript Interpreter')
parser.add_argument('-s', action="store_true")
parser.add_argument('-d', action="store_true")
args = parser.parse_args()
</code></pre>
<p>although the default argument to <code>parse_args</code> makes passing <code>sys.argv[1:]</code> unnecessary. Since each argument is parsed independently, you'll need a post-processing step after the arguments are parsed:</p>
<pre><code>if not args.s and not args.d:
    args.s = True
</code></pre>
</div>
<span class="comment-copy">when I do that and enter <code>sps.py -d</code> it says <code>error: unrecognized arguments: -d</code></span>
<span class="comment-copy">Running <code>python sps.py -d</code> or <code>-s</code> works fine for me with your code, when I remove the <code>sys.argv[1:]</code> from <code>parse_args()</code>. How exactly are you running this?</span>
<span class="comment-copy">i took out the sys.argv[1:] as well. I got it working, but I had to keep the add_argument() calls for both -d and -s. After doing that, the Namespace obj was created correctly</span>
<span class="comment-copy">Sorry if I was unclear, the only part where you had a problem with the code was the <code>sys.argv[1:]</code> which would've resulted in weird option values. You <i>do</i> need to have the <code>add_argument()</code> for any command line argument you wish to implement. Perhaps I should've talked about function arguments, or parameters instead of just arguments to avoid confusion.</span>
<span class="comment-copy">Thanks so much @msvalkon for this answer, I spent forever looking through the docs, and missed the section on the namespace class (<a href="https://docs.python.org/3/library/argparse.html#the-namespace-object" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html#the-namespace-object</a>). This is a super helpful answer!</span>
