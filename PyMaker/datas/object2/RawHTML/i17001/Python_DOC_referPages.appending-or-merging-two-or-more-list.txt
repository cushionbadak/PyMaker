<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/20616563/python-merge-two-lists-with-a-simultaneous-concatenation">Python - Merge two lists with a simultaneous concatenation</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I have these lists.</p>
<pre><code>l1 = [1,2,3,4,5]
l2 = [6,7,8,9,0]
l3 = [11,12,13,14,15]
</code></pre>
<p>And my desired output is like this.</p>
<pre><code>[[1,6,11], [2,7,12], [3,8,13], [4,9,14], [5,0,15]]
</code></pre>
<p>What I have tried is only like this.</p>
<pre><code>[[x] for x in l1]
</code></pre>
<p>I don't have any idea how to append the second and third list.</p>
<p>Any help would be much appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're ok with <code>tuples</code>, use <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow"><code>zip()</code></a> like below:</p>
<pre><code>&gt;&gt;&gt; l1 = [1,2,3,4,5]
&gt;&gt;&gt; l2 = [6,7,8,9,0]
&gt;&gt;&gt; l3 = [11,12,13,14,15]
&gt;&gt;&gt; 
&gt;&gt;&gt; zip(l1, l2, l3)
[(1, 6, 11), (2, 7, 12), (3, 8, 13), (4, 9, 14), (5, 0, 15)]
</code></pre>
<p>Or you can create lists of lists, again using <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow"><code>zip()</code></a></p>
<pre><code>&gt;&gt;&gt; [list(x) for x in zip(l1, l2, l3)]
[[1, 6, 11], [2, 7, 12], [3, 8, 13], [4, 9, 14], [5, 0, 15]]
</code></pre>
<p>Be sure to understand that the lengths of the zipped lists <em>must be equal</em>, or in your case, you might end up missing some data. This is stated in the docs:</p>
<blockquote>
<p>The returned list is truncated in length to the length of the shortest argument sequence</p>
</blockquote>
<p>Example of the above, notice how we're missing the last list.</p>
<pre><code>&gt;&gt;&gt; l1 = [1,2,3,4]
&gt;&gt;&gt; [list(x) for x in zip(l1, l2, l3)]
[[1, 6, 11], [2, 7, 12], [3, 8, 13], [4, 9, 14]]
</code></pre>
<p>You can get around that by using <a href="https://docs.python.org/2/library/itertools.html#itertools.izip_longest" rel="nofollow"><code>itertools.izip_longest()</code></a> which allows a <em>fillvalue</em> to be used (defaults to <code>None</code>):</p>
<pre><code>&gt;&gt;&gt; from itertools import izip_longest
&gt;&gt;&gt; [list(x) for x in izip_longest(l1, l2, l3)]
[[1, 6, 11], [2, 7, 12], [3, 8, 13], [4, 9, 14], [None, 0, 15]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simply use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip()</code></a>:</p>
<pre><code>&gt;&gt;&gt; l1 = [1,2,3,4,5]
&gt;&gt;&gt; l2 = [6,7,8,9,0]
&gt;&gt;&gt; l3 = [11,12,13,14,15]
&gt;&gt;&gt; 
&gt;&gt;&gt; zip(l1, l2, l3)
[(1, 6, 11), (2, 7, 12), (3, 8, 13), (4, 9, 14), (5, 0, 15)]
&gt;&gt;&gt; 
&gt;&gt;&gt; map(list, zip(l1, l2, l3))
[[1, 6, 11], [2, 7, 12], [3, 8, 13], [4, 9, 14], [5, 0, 15]]
</code></pre>
</div>
