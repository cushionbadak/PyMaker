<div class="post-text" itemprop="text">
<p>I was wondering if it is possible to convert numbers into their corresponding alphabetical value. So</p>
<pre><code>1 -&gt; a
2 -&gt; b
</code></pre>
<p>I was planning to make a program which lists all the alphabetical combinations possible for a length specified by a user.</p>
<p>See I know how to build the rest of the program except this!
Any help would be wonderful.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import string
for x, y in zip(range(1, 27), string.ascii_lowercase):
    print(x, y)
</code></pre>
<p>or</p>
<pre><code>import string
for x, y in enumerate(string.ascii_lowercase, 1):
    print(x, y)
</code></pre>
<p>or</p>
<pre><code>for x, y in ((x + 1, chr(ord('a') + x)) for x in range(26)):
    print(x, y)
</code></pre>
<p>All of the solutions above output lowercase letters from English alphabet along with their position:</p>
<pre><code>1 a
...
26 z
</code></pre>
<p>You'd create a dictionary to access letters (values) by their position (keys) easily. For example:</p>
<pre><code>import string
d = dict(enumerate(string.ascii_lowercase, 1))
print(d[3]) # c
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about a dictionary?</p>
<pre><code>&gt;&gt;&gt; import string
&gt;&gt;&gt; num2alpha = dict(zip(range(1, 27), string.ascii_lowercase))
&gt;&gt;&gt; num2alpha[2]
b
&gt;&gt;&gt; num2alpha[25]
y
</code></pre>
<p>But don't go over 26:</p>
<pre><code>&gt;&gt;&gt; num2alpha[27]
KeyError: 27
</code></pre>
<hr/>
<p>But if you are looking for all alphabetical combinations of a given length:</p>
<pre><code>&gt;&gt;&gt; import string
&gt;&gt;&gt; from itertools import combinations_with_replacement as cwr
&gt;&gt;&gt; alphabet = string.ascii_lowercase
&gt;&gt;&gt; length = 2
&gt;&gt;&gt; ["".join(comb) for comb in cwr(alphabet, length)]
['aa', 'ab', ..., 'zz']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Big Letter:</p>
<pre><code>chr(ord('@')+number)
</code></pre>
<p>1 -&gt; A </p>
<p>2 -&gt; B </p>
<p>...</p>
<p>Small Letter:</p>
<pre><code>chr(ord('`')+number)
</code></pre>
<p>1 -&gt; a </p>
<p>2 -&gt; b </p>
<p>...</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#chr" rel="nofollow"><code>chr()</code></a> to turn numbers into characters, but you need to use a higher starting point as there are several other characters in the ASCII table first.</p>
<p>Use <code>ord('a') - 1</code> as a starting point:</p>
<pre><code>start = ord('a') - 1
a = chr(start + 1)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; start = ord('a') - 1
&gt;&gt;&gt; a = chr(start + 1)
&gt;&gt;&gt; a
'a'
</code></pre>
<p>Another alternative is to use the <a href="https://docs.python.org/3/library/string.html#string.ascii_lowercase" rel="nofollow"><code>string.ascii_lowercase</code> constant</a> as a sequence, but you need to start indexing from <em>zero</em>:</p>
<pre><code>import string

a = string.ascii_lowercase[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a quick solution:</p>
<pre><code># assumes Python 2.7
OFFSET = ord("a") - 1

def letter(num):
    return chr(num + OFFSET)

def letters_sum_to(total):
    for i in xrange(1, min(total, 27)):
        for rem in letters_sum_to(total - i):
            yield [letter(i)] + rem
    if total &lt;= 26:
        yield [letter(total)]

def main():
    for letters in letters_sum_to(8):
        print("".join(letters))

if __name__=="__main__":
    main()
</code></pre>
<p>which produces</p>
<pre><code>aaaaaaaa
aaaaaab
aaaaaba
aaaaac
aaaabaa
aaaabb
aaaaca
aaaad
aaabaaa
# etc
</code></pre>
<p>Note that the number of solutions totalling to N is 2**(N-1).</p>
</div>
<div class="post-text" itemprop="text">
<pre class="lang-python prettyprint-override"><code>for i in range(0, 100):
     mul = 1
     n   = i
     if n &gt;= 26:
         n   = n-26
         mul = 2
     print chr(65+n)*mul
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you just want to map between letters and numbers in your own way, <a href="https://docs.python.org/2/tutorial/datastructures.html#dictionaries" rel="nofollow">Dictionary</a> is what you should look at. </p>
</div>
<span class="comment-copy">How are <code>1</code> and <code>a</code> are corresponding?</span>
<span class="comment-copy">What should be the output if the number is 27?</span>
<span class="comment-copy"><a href="https://www.youtube.com/watch?v=lYIRO97dhII" rel="nofollow noreferrer">youtube.com/watch?v=lYIRO97dhII</a></span>
<span class="comment-copy">I'm going to reopen this because the linked duplicate doesn't really answer this question. It may still be a duplicate, but the current dupe target is poor IMO.</span>
<span class="comment-copy">So how would I make it so that if they enter say: 3 output c?</span>
<span class="comment-copy">@user3556962: <code>ord(start + 3)</code> is <code>c</code>.</span>
<span class="comment-copy">start = chr('a') - 1 TypeError: an integer is required (got type str)</span>
<span class="comment-copy">@user3556962: ick, how embarrassing; I swapped the two functions.</span>
<span class="comment-copy">Turned out I was right :)</span>
