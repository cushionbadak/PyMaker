<div class="post-text" itemprop="text">
<p>I have a simple problem using Regex with python...</p>
<p>I am trying to grab GPS coordinates out of a line that will be formatted as such:</p>
<pre><code>-73209460,44477974
</code></pre>
<p>Sometimes it will have the leading '-', sometimes it wont. Consequently, my regex is as follows:</p>
<pre><code>'-?\d\d\d\d\d\d\d\d,\d\d\d\d\d\d\d\d'
</code></pre>
<p>Here's the weird part:</p>
<p>I have tested this query on solely the GPS coordinate string (above) and it works fine, matches it, and acts as intended. However when I try to get it to match the GPS coords when there is "noise" around it, it does not catch it... Here is one line that the GPS coords are in:</p>
<pre><code>RoutingRequest,1391101299,3,-10,1,-1,1000,-73209460,44477974,-1,56862713,56862712,
</code></pre>
<p>Any idea why it would not be catching this? Something to do with the commas?</p>
<p>Thanks guys.</p>
<p>EDIT:</p>
<p>Thanks for all the responses... Here is a quick test script that I was using:</p>
<pre><code>import re

def doesntWork():
    gpsCoords = r'-?\d\d\d\d\d\d\d\d,\d\d\d\d\d\d\d\d'
    gps = re.compile(gpsCoords)

    match = gps.match("1000,-73209460,44477974,-1,56862")

    if match:
        return True
    else:
        return False

def works():
    gpsCoords = r'-?\d\d\d\d\d\d\d\d,\d\d\d\d\d\d\d\d'
    gps = re.compile(gpsCoords)

    match = gps.match("-73209460,44477974")
    if match:
        return True
    else:
        return False

def main():
    print doesntWork()
    print works()

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Aside from the fact your regex looks a little fragile, this is likely due to using <code>re.match</code> instead of <code>re.search</code>.</p>
<p><code>re.match</code> tries to match the regex to the <em>beginning</em> of your string, where as <code>re.search</code> tries to find a match <em>anywhere</em> in your string.</p>
<p>The difference is explained in the python documentation here: <a href="https://docs.python.org/3/library/re.html#search-vs-match" rel="nofollow">https://docs.python.org/3/library/re.html#search-vs-match</a></p>
</div>
<div class="post-text" itemprop="text">
<p>As SpoonMeiser said, you should be using <a href="https://docs.python.org/2/library/re.html#search-vs-match" rel="nofollow"><code>re.search()</code></a>. Here's a little more sophisticated regex which captures both lat and lon in named groups`.. Assuming the last values are longitude values.. This might break but it's a nice idea.</p>
<pre><code>&gt;&gt;&gt; r = "RoutingRequest,1391101299,3,-10,1,-1,1000,-73209460,44477974,-1,56862713,56862712"
&gt;&gt;&gt; re.search(r"(?P&lt;lat&gt;-?\d{8},\d{8}).*(?P&lt;lon&gt;\d{8},\d{8})", r).groupdict()
{'lat': '-73209460,44477974', 'lon': '56862713,56862712'}
</code></pre>
</div>
<span class="comment-copy">You might be looking for something like: <code>/^(-?\d{8}),(-?\d{8})$/</code></span>
<span class="comment-copy">Have you tried testing your regex in a testing program like KODOS? Also, I would take a good look at the regex doc page for python, it looks like a lot of your changes can be rolled up like Rohit is saying.</span>
<span class="comment-copy">Are you using re.match() or re.search()? Can you post your code with an example that works and one that doesnt work?</span>
<span class="comment-copy">I think it'll be more like <code>/(-?\d+,-?\d+)/</code></span>
<span class="comment-copy">That would be it then, Thanks a bunch! and yeah the regex is nasty looking :P</span>
