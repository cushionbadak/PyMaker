<div class="post-text" itemprop="text">
<p>I'm trying to transfer <code>int</code> data into ip address, for IPV6 and IPv4</p>
<pre><code>def int2ip(i):
    if i &gt; sys.maxint * 2 - 1: # ipv6
        socket.inet_ntop(socket.AF_INET6, struct.pack('!L', i))
    socket.inet_ntop(socket.AF_INET, struct.pack('!I', i)) # ipv4
</code></pre>
<p>But for a IPv6 address <code>240e:800::</code>, it's int represent is <code>47925062263553288224699872696711774208</code>, but while passing the int value to <code>int2ip</code>, throw the following error:</p>
<pre><code>struct.error: integer out of range for 'L' format code
</code></pre>
<p>but the int value is really a <code>long</code> type:</p>
<pre><code>&gt;&gt;&gt; print(type(47925062263553288224699872696711774208)
&lt;type 'long'&gt;
</code></pre>
<p>Why?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to put a 128bit number into 32bit ('L' format code).</p>
<p>Python 3 has a library to manage ip addresses (4 &amp; 6): <a href="https://docs.python.org/3/library/ipaddress.html" rel="nofollow">https://docs.python.org/3/library/ipaddress.html</a>.
For python2 there is a backport: <a href="https://pypi.python.org/pypi/ipaddress" rel="nofollow">https://pypi.python.org/pypi/ipaddress</a></p>
</div>
