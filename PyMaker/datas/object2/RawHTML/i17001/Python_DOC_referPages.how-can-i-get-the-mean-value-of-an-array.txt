<div class="post-text" itemprop="text">
<p>I am trying to calculate the mean value of the last 10 elements.
First I am reading out the data from a file:</p>
<pre><code>np.genfromtxt(filename,skip_header=6, names=True)
</code></pre>
<p>First I tried to use numpy.mean function but I am getting the following error:</p>
<pre><code>TypeError: cannot perform reduce with flexible type
</code></pre>
<p>So I decided of writing a function: </p>
<pre><code>def get_mean_values( marray, nr ):
    """
    """
    # Creating an empty array
    tmp = np.delete( marray[-1:], 0, 0 )

    for key in marray.dtype.fields:
        tmp[key] = np.append( tmp[key], np.mean( marray[key][nr:] ) )


    print tmp
    return tmp
</code></pre>
<p>But the tmp array is always empty. How can I calculate and store the mean value of the last 10 elements. </p>
<p>This is how my data looks</p>
<pre><code>array([ (99.9, 9.0),
       (100.0, 9.0) ....], 
      dtype=[('Time', '&lt;f8'), ('HorWind', '&lt;f8')])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The mean function works just fine as long as you are specific enough :)</p>
<pre><code>import numpy

x = numpy.array([(99.9, 9.0),
       (100.0, 9.0)], 
      dtype=[('Time', '&lt;f8'), ('HorWind', '&lt;f8')])

print 'Time', x['Time'].mean()
print 'HorWind', x['HorWind'].mean()
</code></pre>
<p>Output:</p>
<pre><code>Time 99.95
HorWind 9.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I dont know if that helps, but a general function to compute the mean of the last ten elements of an array would be:</p>
<pre><code>array = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]

def lastten(index):
    return sum(index[-10:len(index)])/10

print lastten(array)   --&gt; 15
</code></pre>
</div>
<span class="comment-copy">You need to define what the 'mean' means over these tuples like (99.9, 9.0).   Also you should try the mean method here, once you know:  <a href="https://docs.python.org/3/library/statistics.html#statistics.mean" rel="nofollow noreferrer">docs.python.org/3/library/statistics.html#statistics.mean</a>   Looks like your problem is that you're trying to compute the mean of a bunch of tuples not numbers.</span>
<span class="comment-copy">I am trying to get the mean of the Time(99.0, 100) and the HorWind(9.0, 9.0)</span>
<span class="comment-copy">This is a solution, but I would like to store the data in the same structure as the original array.</span>
<span class="comment-copy">The <code>dtype</code> comes from your question so it should be the structure you currently have. Otherwise I apparently don't understand your question correctly</span>
<span class="comment-copy">I would like to store the mean values: <code>tmp['Time'] = x['Time'].mean()</code>. I tried the following <code>tmp[key] = np.append( tmp[key], np.mean( marray[key][nr:] ) )</code> but the <code>tmp</code> variable is always empty and I don't know why.</span>
<span class="comment-copy">you cannot append to a struct array; the underlying datastructure of a struct array is a C-struct, not a dynamic python type. If you want additional entries in your struct, you will have to create a completely new array.</span>
<span class="comment-copy">Or just <code>np.mean(index[-10:])</code></span>
<span class="comment-copy"><code>np.mean(index[-10:])</code> is not working, I am getting the error mentioned in the question.</span>
<span class="comment-copy">You just need to access the field, as in Wolph's answer. <code>np.mean(x['Time'][-10:])</code>. My coment was more of an improvement to what 386er did.</span>
<span class="comment-copy">Well maybe because the entries of your array are tuples and not single values ?</span>
