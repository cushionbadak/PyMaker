<div class="post-text" itemprop="text">
<p>I'm trying to create linkages between two heatmaps generated using imshow(dataframe) by using ConnectionPatch. The problem is that I want to use dataframe indexes as [xy] connectors but could not find any way to do so. Below is my example dataset:</p>
<pre><code># Creating first dataframe
df = pd.DataFrame(
    np.random.randint(0, 100, size=(100, 5)),
    columns=["heatMap_1", "heatMap_2", "heatMap_3", "heatMap_4", "heatMap_5"],
)

df["index"] = [
    "".join(
        random.choice(
            string.ascii_uppercase + string.ascii_lowercase + string.digits
        )
        for _ in range(5)
    )
    for k in df.index
]

df.set_index("index", inplace=True)

df.head()

# Creating the 2nd dataframe
df2 = pd.DataFrame(
    np.random.randint(0, 25, size=(25, 4)),
    columns=["heatMap_1", "heatMap_2", "heatMap_3", "heatMap_4"],
)

df2["index"] = random.sample(list(clusteredDataframe.index.values), 25)
df2.set_index("index", inplace=True)
df2.head()

# Creating heatmaps using imshow and using gridspec
# to arrange them
fig = plt.figure(figsize=(12, 12))
gs = GridSpec(3, 4)
ax_heatmap1 = plt.subplot(gs[0:3, :2])
ax_connect = plt.subplot(gs[0:3, 2:3])
ax_heatmap2 = plt.subplot(gs[1:2, 3:])

im = ax_heatmap1.imshow(df, cmap="inferno", interpolation="None", aspect="auto")

im = ax_heatmap2.imshow(
    df2, cmap="inferno", interpolation="None", aspect="auto"
)
</code></pre>
<p>The <code>ax_connect</code> is the axis where I would want my linkages to be. I assume ConnectionPatch is the cleanest way to do this ? Or is there a better approach to do this ? </p>
<p>Essentially, this is what I want:
<a href="https://i.stack.imgur.com/HFkn9.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/HFkn9.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can indeed use a <code>ConnectionPatch</code> to draw a line from all the indices of the right heatmap to the respective indices of the left one.</p>
<pre><code>import numpy as np; np.random.seed(8)
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib.gridspec import GridSpec
from matplotlib.patches import ConnectionPatch
import string

n1 = 20
n2 = 5
# Creating first dataframe
df = pd.DataFrame(
    np.random.randint(0, 100, size=(n1, 5)),
    columns=["heatMap_1", "heatMap_2", "heatMap_3", "heatMap_4", "heatMap_5"],
)

chars = list(string.ascii_uppercase + string.ascii_lowercase + string.digits)
df["index"] = ["".join(np.random.choice(chars, size=5)) for k in df.index]

df.set_index("index", inplace=True)


# Creating the 2nd dataframe
df2 = pd.DataFrame(
    np.random.randint(0, 25, size=(n2, 4)),
    columns=["heatMap_1", "heatMap_2", "heatMap_3", "heatMap_4"],
)

df2["index"] = np.random.choice(list(df.index.values), n2)
df2.set_index("index", inplace=True)


# Creating heatmaps using imshow and using gridspec
# to arrange them
fig = plt.figure(figsize=(12,8))
gs = GridSpec(3, 4)
ax_heatmap1 = plt.subplot(gs[0:3, :2])
ax_heatmap2 = plt.subplot(gs[1:2, 3:])

im = ax_heatmap1.imshow(df, cmap="inferno", interpolation="None", aspect="auto")
ax_heatmap1.set(yticks=np.arange(len(df)), yticklabels=df.index.values)
im = ax_heatmap2.imshow(
    df2, cmap="inferno", interpolation="None", aspect="auto")
ax_heatmap2.set(yticks=np.arange(len(df2)), yticklabels=df2.index.values)
# Connect heatmaps by index
ind_list =  list(df.index.values)
x1 = len(df.columns) - 0.5
x2 = -0.5
for i, ind in enumerate(df2.index):
    j = ind_list.index(ind)
    cp = ConnectionPatch((x2, i), (x1, j),  coordsA="data",  coordsB="data",
                          axesA=ax_heatmap2, axesB=ax_heatmap1, color="red", clip_on=False)
    ax_heatmap2.add_artist(cp)

plt.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/A6iUS.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/A6iUS.png"/></a></p>
</div>
<span class="comment-copy">Are you trying to get obtain the red lines in the picture? In that case, what is the axes <code>ax_connect</code> used for? Or should the connections be within that axes? In the latter case the problem would be to find out what the data positions of <code>ax_heatmap2</code> would correspond to in data coordinates of <code>ax_connect</code></span>
<span class="comment-copy">@ImportanceOfBeingErnest, exactly, that is my problem. I need those red lines(which in honesty are crude representations). I cannot translate dataframe index to data coordinates. <code>ax_connect </code> is just representative axis where things should go. It need not be there and is not exactly required - I just used it fill the empty gridspace.</span>
