<div class="post-text" itemprop="text">
<p>I want to create my class Point with method to calculate Euclidean distance. Point class is inherited from QPointF class. But when performing operations like add or mul, the result is not a Point class, it's QPointF. How to fix it? Should i overwrite all magic methods or there is another solution?</p>
<pre><code>from PyQt5.QtCore import QPointF


class Point(QPointF):
    def __init__(self, *args, **kwargs):
        super(QPointF, self).__init__(*args, **kwargs)

    def dist(self):
        return (self._p.x() * self._p.x() +
                self._p.y() * self._p.y()) ** 0.5

 a = Point(1, 2)
 b = Point(2, 3)
 print(a + b, type(a + b))

&gt;&gt; PyQt5.QtCore.QPointF(3.0, 5.0) &lt;class 'PyQt5.QtCore.QPointF'&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you have to overwrite the methods <code>__add__</code>, <code>__mul__</code> and <code>__repr__</code>:</p>
<pre><code>from PyQt5.QtCore import QPointF

class Point(QPointF):
    def dist(self):
        return (self._p.x() * self._p.x() + self._p.y() * self._p.y()) ** 0.5

    def __add__(self, other):
        return self.__class__(super(self.__class__, self).__add__(other))

    def __mul__(self, other):
        return self.__class__(super(self.__class__, self).__mul__(other))

    def __repr__(self):
        return "{}({}, {})".format(self.__class__.__name__, self.x(), self.y())

if __name__ == '__main__':
    a = Point(1, 2)
    b = Point(2, 3)
    print(a, type(a))
    print(b, type(b))
    print(a + b, type(a + b))
    a += Point(10, 10)
    print(a, type(a))
    a += QPointF(10, 10)
    print(a, type(a))
    print(a*3, type(a*3))
    print("a: {}".format(a))
    l = [a, b]
    print(l)
</code></pre>
</div>
