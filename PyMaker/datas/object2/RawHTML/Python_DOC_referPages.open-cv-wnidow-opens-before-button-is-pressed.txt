<div class="post-text" itemprop="text">
<p>Suppose in the current directory there is a file named <code>somecode.py</code>, and a directory named <code>somecode</code> which contains an <code>__init__.py</code> file. Now I run some other Python script from this directory which executes <code>import somecode</code>. Which file will be imported - <code>somecode.py</code> or <code>somecode/__init__.py</code>?</p>
<p>Is there even a defined and reliable search order in which this is resolved?</p>
<p>Oh, and does anyone have a reference to official documentation for this behavior? :-)</p>
</div>
<div class="post-text" itemprop="text">
<p>Packages will be imported before modules. Illustrated:</p>
<pre><code>% tree .
.
|-- foo
|   |-- __init__.py
|   `-- __init__.pyc
`-- foo.py
</code></pre>
<p><code>foo.py</code>:</p>
<pre><code>% cat foo.py 
print 'you have imported foo.py'
</code></pre>
<p><code>foo/__init__.py</code>:</p>
<pre><code>% cat foo/__init__.py
print 'you have imported foo/__init__.py'
</code></pre>
<p>And from interactive interpreter:</p>
<pre><code>&gt;&gt;&gt; import foo
you have imported foo/__init__.py
</code></pre>
<p>I have no idea where this is officially documented.</p>
<p><strong>Edit per comment:</strong> This was performed with Python 2.7 on Mac OS X 10.6.7. I also performed this using Python 2.6.5 on Ubuntu 10.10 and experienced the same result.</p>
</div>
<div class="post-text" itemprop="text">
<p>tested in Windows 10 (Python version 3.5) and on Ubuntu Linux (Python version 2.7 and 3.5) using the following directory: </p>
<p><a href="https://github.com/alphaCTzo7G/stackexchange/tree/master/python/order_import_module_vs_package" rel="nofollow noreferrer">https://github.com/alphaCTzo7G/stackexchange/tree/master/python/order_import_module_vs_package</a></p>
<h3>Result</h3>
<p>The module is always loaded and the following message is printed out every time:</p>
<p>"you have imported foo/<strong>init</strong>.py"</p>
<p>So it seems to be consistent across these Systems, that the package is loaded first.</p>
</div>
<span class="comment-copy">Btw. this is not a duplicate of <a href="http://stackoverflow.com/questions/4092395/python-import-precedence-packages-or-modules" title="python import precedence packages or modules">stackoverflow.com/questions/4092395/â€¦</a> because that post has a slightly different question, and the accepted answer cannot be applied to my question.</span>
<span class="comment-copy">You're going to have to add to your question to clarify, then; I've read these both twice, and it looks like an exact dupe to me. The accepted answer there even gives the text from the docs that you asked for.</span>
<span class="comment-copy">@Josh Caswell:  Well, Case 1 from that question does look exactly like this one, but the accepted answer doesn't really say anything about it, or it says the wrong thing.  (You really have to read the whole docs to get the context; that passage appears before packages are even mentioned at all.)  What <i>does</i> look like an applicable answer is the one from kanaka (which had no votes until I voted it up just now).  It addresses the question but does not cite documentation.</span>
<span class="comment-copy">+1 for having tried, however, this doesn't prove it's a defined behaviour or luck. You might want to complete with exact platform you tried on.</span>
<span class="comment-copy">You're right. I suspect that it has something to do with the way files are displayed by default when a directory listing is performed.</span>
<span class="comment-copy">Thanks, I suppose that answer is good enough for me... If it turns out that this ordering is not reliable, I'll notice when bug reports start rolling in :-)</span>
<span class="comment-copy">You're welcome! I'd be interested to see the results of this on Windows, but don't have ready access to a Windows machine.</span>
<span class="comment-copy">This is documented at <a href="http://www.python.org/doc/essays/packages.html" rel="nofollow noreferrer">python.org/doc/essays/packages.html</a> - see "What If I Have a Module and a Package With The Same Name?"</span>
