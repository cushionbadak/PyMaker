<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/10057854/inverse-of-tan-in-python-tan-1">Inverse of Tan in python (tan-1)</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to find the angle made by the line joining a point with the x-axis with the x-axis. So in effect I'm trying to find plain old tan inverse.
Here's the code I'm using in Python 3</p>
<pre><code>angle_with_x_axis = math.atan(y_from_centre / x_from_centre)
</code></pre>
<p>I'm feeding in the <code>point(1,1)</code> as <code>y_from_centre</code> and <code>x_from_centre</code> and I get</p>
<pre><code>0.7853981633974483
</code></pre>
<p>My expected result is 45, but naturally. 
What am I doing wrong here?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>math</code> uses radians. For degrees use <code>math.degrees</code>:</p>
<pre><code>&gt;&gt;&gt; math.degrees(math.atan(1))
45.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/math.html" rel="noreferrer">math</a> module operates in radians. 0.785 radians is 45 degrees. From the docs:</p>
<blockquote>
<p>math.atan(x)</p>
<p>Return the arc tangent of x, in radians.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/math.html#math.atan" rel="nofollow noreferrer"><code>math.atan()</code></a> function - and many of the other functions in the <a href="https://docs.python.org/3/library/math.html" rel="nofollow noreferrer"><code>math</code></a> module - return their results in radians. The documentation clearly states this:</p>
<blockquote>
<p>Return the arc tangent of x, <strong>in radians</strong>.</p>
</blockquote>
<p><sub>(emphasis mine)</sub></p>
<p>The <code>math</code> module does however provide a way to convert radians to degrees, and visa versa:</p>
<pre><code>&gt;&gt;&gt; import math
&gt;&gt;&gt; math.degrees(math.atan(1))
45.0
&gt;&gt;&gt; 
&gt;&gt;&gt; math.radians(45.0)
0.7853981633974483
&gt;&gt;&gt; 
</code></pre>
<p>You can also create a helper function to wrap this logic:</p>
<pre><code>&gt;&gt;&gt; def atan_in_degress(x):
...     return math.degrees(math.atan(x))
... 
&gt;&gt;&gt; atan_in_degress(1)
45.0
&gt;&gt;&gt; atan_in_degress(2)
63.43494882292202
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy"><a href="https://www.google.co.uk/search?q=0.7853981633974483+radians+in+degrees&amp;oq=0.7853981633974483+radians+in+degrees&amp;aqs=chrome..69i57.2147j0j7&amp;sourceid=chrome&amp;ie=UTF-8" rel="nofollow noreferrer">That is 45 degrees</a>. It's been returned in radians.</span>
<span class="comment-copy">I'm embarassed already.</span>
<span class="comment-copy">Aside: you should consider <code>atan2</code> rather than <code>atan(y/x)</code>.</span>
