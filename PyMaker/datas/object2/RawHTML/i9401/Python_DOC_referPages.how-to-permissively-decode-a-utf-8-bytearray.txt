<div class="post-text" itemprop="text">
<p>I need to decode a UTF-8 sequence, which is stored in a bytearray, to a string.</p>
<p>The UTF-8 sequence might contain erroneous parts. In this case I need to decode as much as possible and (optionally?) substitute invalid parts by something like "?".</p>
<pre><code># First part decodes to "ABÄC"
b = bytearray([0x41, 0x42, 0xC3, 0x84, 0x43])
s = str(b, "utf-8") 
print(s)

# Second part, invalid sequence, wanted to decode to something like "AB?C"
b = bytearray([0x41, 0x42, 0xC3, 0x43])
s = str(b, "utf-8")
print(s)
</code></pre>
<p>What's the best way to achieve this in Python 3?</p>
</div>
<div class="post-text" itemprop="text">
<p>There are several builtin error-handling <a href="https://docs.python.org/3/library/codecs.html#error-handlers" rel="nofollow noreferrer">schemes</a> for encoding and decoding <code>str</code> to and from <code>bytes</code> and <code>bytearray</code> with e.g. <a href="https://docs.python.org/3/library/stdtypes.html#bytearray.decode" rel="nofollow noreferrer"><code>bytearray.decode()</code></a>. For example:</p>
<pre class="lang-python prettyprint-override"><code>&gt;&gt;&gt; b = bytearray([0x41, 0x42, 0xC3, 0x43])
</code></pre>
<p></p>
<pre class="lang-python prettyprint-override"><code>&gt;&gt;&gt; b.decode('utf8', errors='ignore')  # discard malformed bytes
'ABC'
</code></pre>
<p></p>
<pre class="lang-python prettyprint-override"><code>&gt;&gt;&gt; b.decode('utf8', errors='replace')  # replace with U+FFFD
'AB�C'
</code></pre>
<p></p>
<pre class="lang-python prettyprint-override"><code>&gt;&gt;&gt; b.decode('utf8', errors='backslashreplace')  # replace with backslash-escape
'AB\\xc3C'
</code></pre>
<p>In addition, you can write your own error handler and <a href="https://docs.python.org/3/library/codecs.html#codecs.register_error" rel="nofollow noreferrer">register</a> it:</p>
<pre class="lang-python prettyprint-override"><code>import codecs

def my_handler(exception):
    """Replace unexpected bytes with '?'."""
    return '?', exception.end

codecs.register_error('my_handler', my_handler)
</code></pre>
<p></p>
<pre class="lang-python prettyprint-override"><code>&gt;&gt;&gt; b.decode('utf8', errors='my_handler')
'AB?C'
</code></pre>
<p>All of these error handling schemes can also be used with the <code>str()</code> constructor as in your question:</p>
<pre class="lang-python prettyprint-override"><code>&gt;&gt;&gt; str(b, 'utf8', errors='my_handler')
'AB?C'
</code></pre>
<p>... although it's more idiomatic to use <code>str.decode()</code> explicitly.</p>
<p></p>
</div>
