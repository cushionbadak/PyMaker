<div class="post-text" itemprop="text">
<p>Trying to save a list of lists into a csv file, I used the csv module. Here is my script :</p>
<pre><code>import csv
a = [[1.2,'abc',3],[1.2,'werew',4],[1.4,'qew',2]]
with open("output.csv", "wb") as f:
writer = csv.writer(f)
writer.writerows(a)
</code></pre>
<p>When I run this script, an error message appears :</p>
<pre><code>Traceback (most recent call last):
File "csv-ex.py", line 5, in &lt;module&gt;
writer.writerows(a)
TypeError: a bytes-like object is required, not 'str'
</code></pre>
<p>Anyone knows what is missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>You opened the file in binary mode, but the <code>csv.writer()</code> object sends strings.</p>
<p>Open the file in text mode by dropping the <code>b</code>. It is also recommended you set <code>newline=''</code>:</p>
<pre><code>with open("output.csv", "w", newline='') as f:
</code></pre>
<p>See the <a href="https://docs.python.org/3/library/csv.html#id3" rel="nofollow noreferrer"><code>csv</code> module footnote</a>:</p>
<blockquote>
<p>If <code>newline=''</code> is not specified, newlines embedded inside quoted fields will not be interpreted correctly, and on platforms that use <code>\r\n</code> linendings on write an extra <code>\r</code> will be added. It should always be safe to specify <code>newline=''</code>, since the <code>csv</code> module does its own (universal) newline handling.</p>
</blockquote>
<p>In Python 2, it was recommended to open the file in binary mode for the same reasons, but the I/O layer in Python 3 handles this much better with the <code>newline</code> option.</p>
</div>
