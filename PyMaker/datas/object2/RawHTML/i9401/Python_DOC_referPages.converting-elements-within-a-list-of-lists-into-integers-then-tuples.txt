<div class="post-text" itemprop="text">
<p>I have a list of lists, which contain pairs of strings; </p>
<pre><code>my_list = [['4', '5'], ['10', '22'], etc etc]
</code></pre>
<p>What I need to achieve is a list of tuples, where the elements (e.g. <code>[(4, 5), (10, 22)...]</code>) are integers, and currently I'm unsure on the best way to achieve this. </p>
<p>I have browsed other questions but most are related to a list of tuples.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>[(int(x), int(y)) for x, y in my_list]
# [(4, 5), (10, 22)]
</code></pre>
<hr/>
<p>Or:</p>
<pre><code>[tuple(map(int, x)) for x in my_list]
# [(4, 5), (10, 22)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sort of a functional-programming style approach would involve using the built-in <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a> function:</p>
<pre><code>&gt;&gt;&gt; my_list = [['4', '5'], ['10', '22']]
&gt;&gt;&gt; list(map(lambda sublist: tuple(map(int, sublist)), my_list))
[(4, 5), (10, 22)]
</code></pre>
<p>Note that the <code>list()</code> call is needed on Python3.x to convert the "map" object to a list.</p>
</div>
<span class="comment-copy">Is there much of a difference efficiency wise between the two solutions you have given there?</span>
<span class="comment-copy">@A.Prague I would not think so. Just a guess.</span>
<span class="comment-copy">meter it and see for your self?</span>
