<div class="post-text" itemprop="text">
<p>I have this list with 5 sequence of numbers: </p>
<pre><code>['123', '134', '234', '214', '223'] 
</code></pre>
<p>and I want to obtain the percentage of each number <code>1, 2, 3, 4</code> in the <code>ith</code> position of each sequence of numbers. For example, the numbers at <code>0th</code> position of this <code>5</code> sequences of numbers are <code>1 1 2 2 2</code>, then I need to calculate the percentage of 
<code>1, 2, 3, 4</code> in this sequence of numbers and return the percentage as <code>0th</code> element of a new list.</p>
<pre><code>['123', '134', '234', '214', '223']

0th position: 1 1 2 2 2   the percentage of 1,2,3,4 are respectively: [0.4, 0.6, 0.0, 0.0]

1th position: 2 3 3 1 2   the percentage of 1,2,3,4 are respectively: [0.2, 0.4, 0.4, 0.0]

2th position: 3 4 4 4 3   the percentage of 1,2,3,4 are respectively: [0.0, 0.0, 0.4, 0.6]]
</code></pre>
<p>Then desired result is to return:</p>
<pre><code>[[0.4, 0.6, 0.0, 0.0], [0.2, 0.4, 0.4, 0.0], [0.0, 0.0, 0.4, 0.6]]
</code></pre>
<p>My attempt so far:</p>
<pre><code>list(zip(*['123', '134', '234', '214', '223']))
</code></pre>
<p>Result:</p>
<pre><code> [('1', '1', '2', '2', '2'), ('2', '3', '3', '1', '2'), ('3', '4', '4', '4', '3')]
</code></pre>
<p>But I got stuck here, then I don't know how to calculate the percentage of the element of each numbers of <code>1, 2, 3, 4</code>, then obtain the desired result. Any suggestion is appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>count(i)</code> to determine to number of occurrences of the numbers 1-4 and divide it by 5 to obtain the percentage: </p>
<pre><code>sequence=list(zip(*['123', '134', '234', '214', '223']))
percentages=[]
for x in sequence:
    t=list(x)
    temp=[t.count(str(i))/len(x) for i in range(1,5)]  #work out the percentage of each number
    percentages.append(temp) #add percentages to list
</code></pre>
<p>Or, as one list comprehension:</p>
<pre><code>percentages=[[list(x).count(str(i))/len(x) for i in range(1,5)]for x in sequence]
</code></pre>
<p>Output:</p>
<pre><code>[[0.4, 0.6, 0.0, 0.0], [0.2, 0.4, 0.4, 0.0], [0.0, 0.0, 0.4, 0.6]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>starting from your approach, you could do the rest with a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a></p>
<pre><code>from collections import Counter

for item in zip(*['123', '134', '234', '214', '223']):
    c = Counter(item)
    total = sum(c.values())
    percent = {key: value/total for key, value in c.items()}
    print(percent)

    # convert to list
    percent_list = [percent.get(str(i), 0.0) for i in range(5)]
    print(percent_list)
</code></pre>
<p>which prints</p>
<pre><code>{'2': 0.6, '1': 0.4}
[0.0, 0.4, 0.6, 0.0, 0.0]
{'2': 0.4, '3': 0.4, '1': 0.2}
[0.0, 0.2, 0.4, 0.4, 0.0]
{'4': 0.6, '3': 0.4}
[0.0, 0.0, 0.0, 0.4, 0.6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could start by creating the zipped list as you did:</p>
<pre><code>zipped = zip(*l)
</code></pre>
<p>then map an <code>itertools.Counter</code> to it as to get the counts of each item in the results from <code>zip</code>:</p>
<pre><code>counts = map(Counter, zipped)
</code></pre>
<p>and then go through it, creating a list out of their counts divided by their sizes:</p>
<pre><code>res = [[c[i]/sum(c.values()) for i in '1234'] for c in counts]
print(res) 
[[0.4, 0.6, 0.0, 0.0], [0.2, 0.4, 0.4, 0.0], [0.0, 0.0, 0.4, 0.6]]
</code></pre>
<p>If you are a one-liner kind of person, mush the first two in the comprehension to get this in one line:</p>
<pre><code>res = [[c[i]/sum(c.values()) for i in '1234'] for c in map(Counter, zip(*l))]
</code></pre>
<p>additionally, as noted in a comment, if you don't know the elements ahead of time, <code>sorted(set(''.join(l)))</code> could replace <code>'1234'</code>.</p>
</div>
<span class="comment-copy">Too much hard-coding. <code>/5</code> should be replaced by <code>/len(x)</code>, and <code>range(1,5)</code> should be replaced by <code>set(''.join(l))</code> (and you can then replace <code>str(i)</code> with just <code>i</code>).</span>
<span class="comment-copy">If you don't know the elements ahead of time, <code>set(''.join(l))</code> should replace <code>'1234'</code>.</span>
<span class="comment-copy">@Jim Fasarakis-Hilliard  Thanks for your solution, but I don't very understand this syntax <code>[[c[i]/sum(c.values()) for i in '1234'] for c in map(Counter, zip(*l))]</code> because I am not very familiar with <code>map</code>  function. I checked and got to know that it may mean to apply the function <code>Counter</code> on  <code>zip(*l))</code> , then I thought why not directly use <code>Counter(zip(*l))</code> , but i found <code>Counter(zip(*l))</code> do not work. Then I checked and found <code>map(Counter, zip(*l))</code> returns  <code>&lt;map object at 0x033C1930&gt;</code> . I don't know what it means. Could you explain for me why <code>map(Counter, zip(*l))</code>  works?  Thank you.</span>
