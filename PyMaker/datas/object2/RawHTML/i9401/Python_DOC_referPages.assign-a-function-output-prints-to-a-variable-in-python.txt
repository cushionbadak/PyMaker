<div class="post-text" itemprop="text">
<p>I have a function (in some project) that it prints the result.when I call it from the command line or in another python project, it prints the output on the terminal. But I want to store all the print result in a variable, something like this:</p>
<pre><code>output = function_name(function_args)
</code></pre>
<p>and instead of printing the results on the terminal I want to store them in the <code>output</code> variable.
also, the main function returns something(just a number as the status) as the result which i do not want that number.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this by rebinding <code>sys.stdout</code>:</p>
<pre><code>&gt;&gt;&gt; def foo():
...     print('potato')
... 
&gt;&gt;&gt; import sys, io
&gt;&gt;&gt; sys.stdout = io.StringIO()
&gt;&gt;&gt; foo()
&gt;&gt;&gt; val = sys.stdout.getvalue()
&gt;&gt;&gt; sys.stdout = sys.__stdout__  # restores original stdout
&gt;&gt;&gt; print(val)
potato
</code></pre>
<p>For a nicer way to do it, consider writing a context manager.  If you're on Python 3.4+, it's <a href="https://docs.python.org/3/library/contextlib.html#contextlib.redirect_stdout" rel="nofollow noreferrer">already been written for you</a>.  </p>
<pre><code>&gt;&gt;&gt; from contextlib import redirect_stdout
&gt;&gt;&gt; f = io.StringIO()
&gt;&gt;&gt; with redirect_stdout(f):
...     foo()
... 
&gt;&gt;&gt; print(f.getvalue())
potato
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The sensible solution is simple and obvious: fix the function so that it returns the correct data instead of printing it. Else you <em>can</em> use the hack posted by wim but assuming you have the hand on the faulty function resorting to such a convoluted solution falls into the "WTF" category. </p>
<p>NB of course if you don't have the hand on the function's code or it's just for a 5 minutes one-shot script, capturing <code>sys.stdout</code> is a handy fallback.</p>
</div>
<span class="comment-copy">Why don't you fix the function to return the result instead of printing?</span>
<span class="comment-copy">It may be this is in library code which the user cannot modify.  Give the benefit of the doubt!</span>
<span class="comment-copy">@wim for my own curiosity, when does this arise? Just that a company doesn't allow it, or is there a practical limitation somewhere inherent to python?</span>
<span class="comment-copy">There are many possible cases - sometimes you just have python interfaces which wrap  <code>.so</code> file (compiled code).  Sometimes there are .pyc-only distributions as a (weak) attempt obfuscate the source code.  Sometimes the code <i>should</i> print to stdout, and you need to capture the value in your tests, you don't modify the code under test.</span>
