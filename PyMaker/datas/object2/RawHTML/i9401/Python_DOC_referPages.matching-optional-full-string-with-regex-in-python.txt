<div class="post-text" itemprop="text">
<p>I've gone through the HOWTO and the <code>re</code> module docs several times, and I'm still confused about how optionality and grouping interact in Python regexes. What I want is to match everything inside a group, or not at all, but I'm finding that substrings are matching. Here's a minimal example:</p>
<pre><code>&gt;&gt; re.compile(r"(test)?").search("tes")
&lt;_sre.SRE_MATCH at 0xBlahBlah&gt;
</code></pre>
<p>I expected that <em>not</em> to match, since I have the entire string <code>test</code> marked as optional. What (part of the docs) am I not understanding??</p>
<p>A version of the problem that's closer to what I'm actually interested in is as follows:</p>
<pre><code>&gt;&gt; re.compile(r"(distance|mileage)(\sbetween)?").search("distancebetween")
&lt;_sre.SRE_MATCH at 0xBlahblah&gt;
</code></pre>
<p>Why is that whitespace not being forced to match?</p>
<p><strong>EDIT 2017-01-04</strong>
The answers thus far are helpful, but I think I didn't explain my need sufficiently clearly.</p>
<p>In short, I want a regex that will match <code>foo</code> or <code>bar</code> (in their entirety) or <code>foo baz</code> or <code>bar baz</code> (in there entirety) and nothing else.</p>
<pre><code>&gt;&gt; m = re.compile("(foo|bar)(\sbaz)?")
&gt;&gt; m.search("foo ba")
&lt;_sre.SRE_Match as 0xBlahblah&gt;
&gt;&gt; m.search("foo ba").span()
(0, 3)
</code></pre>
<p>So I see that what's happening is that it's matching on <code>foo</code> and then not caring about what's further downstream. How do I get it to match only on <code>baz</code> or nothing at all?</p>
</div>
<div class="post-text" itemprop="text">
<p>Let's look what is matched:</p>
<pre><code>import re
m = re.compile(r"(test)?").search("tes")
m.span()
# have (0, 0)
</code></pre>
<p>It's empty string. Why?</p>
<p>Because <code>?</code> here means <em>zero or one time</em> (just like <code>{0, 1}</code>). So the first group can match either to string <code>test</code> or to empty string (which we have).</p>
<p>Here is a quote from the <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p><code>'?'</code>
  Causes the resulting RE to match 0 or 1 repetitions of the preceding RE. ab? will match either ‘a’ or ‘ab’.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>For what you're describing I don't think you want to use an optional match. I think you want exactly the regexes you have but without the <code>?</code>.</p>
<p>For your first example:</p>
<pre><code>&gt;&gt;&gt; re.compile(r"(test)").search("tes")
&gt;&gt;&gt; re.compile(r"(test)").search("test")
&lt;_sre.SRE_Match object at 0x104c64210&gt;
&gt;&gt;&gt; re.compile(r"(test)").search("testing")
&lt;_sre.SRE_Match object at 0x104c64198&gt; 
</code></pre>
<p>For your second example:</p>
<pre><code>&gt;&gt;&gt; re.compile(r"(distance|mileage)(\sbetween)").search("distancebetween")
&gt;&gt;&gt; re.compile(r"(distance|mileage)(\sbetween)").search("distance between")
&lt;_sre.SRE_Match object at 0x104bf5608&gt;
&gt;&gt;&gt; re.compile(r"(distance|mileage)(\sbetween)").search("distance ")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With the <code>?</code> in both cases, you're saying you want either 0 or 1 occurances of the group. So in  <code>"(test)?"</code> you <em>either</em> match "test" with doesn't match, <em>or</em> an empty string, which will be the very first part of the string.</p>
<p>In the second one, <code>"(distance|mileage)(\sbetween)?"</code> you have the four matches of "distance", "mileage" or "distance between" or "mileage between".</p>
<p>None of these though have to be the whole string, so there can be test before or after. Otherwise you need <code>^regex</code> if you only want the start, or <code>regex$</code> to only match the end, or finally <code>^regex$</code> to only match the whole string.</p>
</div>
