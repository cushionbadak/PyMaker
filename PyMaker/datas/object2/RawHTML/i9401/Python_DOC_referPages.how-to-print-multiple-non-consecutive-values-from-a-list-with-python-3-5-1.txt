<div class="post-text" itemprop="text">
<p>I have created a list and want to choose a handful of items to print from the list. Below, I'd just like to print out "bear" at index 0 and "kangaroo" at index 3. My syntax is not correct:</p>
<pre><code>&gt;&gt;&gt; animals = ['bear', 'python', 'peacock', 'kangaroo', 'whale', 'platypus']
&gt;&gt;&gt; print (animals[0,3])
</code></pre>
<blockquote>
<p>Traceback (most recent call last):   File "", line 1, in
   print (animals[0,3]) TypeError: list indices must be integers
  or slices, not tuple</p>
</blockquote>
<p>I tried with a space between the indexes but it still gives an error:</p>
<pre><code>&gt;&gt;&gt; print (animals[0, 3])
</code></pre>
<blockquote>
<p>Traceback (most recent call last):   File "", line 1, in
   print (animals[0, 3]) TypeError: list indices must be
  integers or slices, not tuple</p>
</blockquote>
<p>I am able to print a single value or a range from 0-3, for example, with:</p>
<pre><code>&gt;&gt;&gt; print (animals [1:4])
['python', 'peacock', 'kangaroo']
</code></pre>
<p>How can I print multiple non-consecutive list elements?</p>
</div>
<div class="post-text" itemprop="text">
<p>To pick arbitrary items from a list you can use <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter</code></a>:</p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter    
&gt;&gt;&gt; print(*itemgetter(0, 3)(animals))
bear kangaroo
&gt;&gt;&gt; print(*itemgetter(0, 5, 3)(animals))
bear platypus kangaroo
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Slicing with a tuple as in <code>animals[0,3]</code> is not supported for Python's <code>list</code> type. If you want certain arbitrary values, you will have to index them separately.</p>
<pre><code>print(animals[0], animals[3])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>list(animals[x] for x in (0,3))</code> is the subset you want. Unlike numpy arrays, native Python lists do not accept lists as indices.</p>
<p>You need to wrap the generator expression in <code>list</code> to print it because it does not have an acceptable <code>__str__</code> or <code>__repr__</code> on its own. You could also use <code>str.join</code> for an acceptable effect: <code>', '.join(animals[x] for x in (0,3))</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>Python's list type does not support that by default. Return a slice object representing the set of indices specified by range(start, stop, step).</p>
<pre><code>class slice(start, stop[, step])

&gt;&gt;&gt;animals[0:5:2]
['bear', 'peacock', 'whale']
</code></pre>
<p>Either creating a subclass to implement by yourself or getting specified values indirectly. e.g.:</p>
<pre><code>&gt;&gt;&gt;map(animals.__getitem__, [0,3])
['bear', 'kangaroo']
</code></pre>
</div>
<span class="comment-copy">Not sure why you got downvoted. Seems like a legit question to me.</span>
