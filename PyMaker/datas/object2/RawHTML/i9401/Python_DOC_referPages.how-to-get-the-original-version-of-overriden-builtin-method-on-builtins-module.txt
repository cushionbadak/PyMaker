<div class="post-text" itemprop="text">
<p>At some arbitrary place in code, this exists:</p>
<pre><code>builtins.open = my_open
</code></pre>
<p>I cannot change that code, but it's broken. I need to make sure any <code>open</code> calls, including those <strong>from other builtin libraries</strong> use the original open. What I need is something like:</p>
<pre><code>orig_open = get_original_method("open")
builtins.open = orig_open
</code></pre>
<p>In Javascript, I typically solved that issue by creating new window frame and getting the methods from there. How to do it in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>If the issue here is simply the <code>open</code> function, you can always grab <a href="https://docs.python.org/3/library/io.html#io.open" rel="nofollow noreferrer"><code>io.open</code></a> which is an alias for it:</p>
<pre><code>import io
builtins.open = io.open
</code></pre>
<p>I am not aware of any generic solutions to this even though I would not be surprised if one existed.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not exactly sure what you want, but you can use the <code>__builtins__</code> magic variable to grab the "original" open function:</p>
<pre><code>&gt;&gt;&gt; builtins.open = __builtins__.open
</code></pre>
<p>The "magic variable" is simply an alias for the <code>builtins</code> module:</p>
<pre><code>&gt;&gt;&gt; __builtins__
&lt;module 'builtins' (built-in)&gt;
&gt;&gt;&gt; 
</code></pre>
<p>You should note however that this is an implementation detail, and other versions of the Python interpreter might not support it. From the Python 3 documentation on the <a href="https://docs.python.org/3/library/builtins.html" rel="nofollow noreferrer"><code>builtins</code></a> module.</p>
<blockquote>
<p>As an implementation detail, most modules have the name <code>__builtins__</code> made available as part of their globals. [...] Since this is an implementation detail, it may not be used by alternate implementations of Python.</p>
</blockquote>
</div>
<span class="comment-copy">@JimFasarakis-Hilliard Do you really think your edit improved the question? Is anyone likely to search over <code>builtin</code> tag?</span>
<span class="comment-copy">Worked thanks. I'll wait though, to see if someone can come with a generic solution.</span>
<span class="comment-copy">This works in console all right. But if I put it in my python file, it gives me this error: <code>AttributeError: 'dict' object has no attribute 'open'</code> I'm new to python, not sure what to think of it.</span>
<span class="comment-copy">@TomášZato Alright. Gimme a sec to look into it.</span>
<span class="comment-copy">@TomášZato Everything worked for me. I'm using Python 3.5.2.</span>
<span class="comment-copy">I can't reproduce the issue in standalone file. But as soon as I execute the project that contains problematic code, I get this error. I don't know how to provide any mor useful info in the scope of SO comment.</span>
<span class="comment-copy">@TomášZato Alright, well you might just wanna go with Jim's solution instead.</span>
