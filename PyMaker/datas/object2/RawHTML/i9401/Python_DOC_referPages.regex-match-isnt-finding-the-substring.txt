<div class="post-text" itemprop="text">
<p>I have some python code where I'm trying to parse out a specific section of a string so that I can grab a list of usernames.  I <em>think</em> I have the regex down (I tested it online and it appears to work) but when I run my test code, it doesn't seem to actually grab what I need, as I get an error:</p>
<blockquote>
<p>if parsed_mod_string.group(1):<br/>
  AttributeError: 'NoneType' object has
  no attribute 'group'</p>
</blockquote>
<p>Which I'm understanding as basically, my code isn't returning anything with my regex comparison.  My code is below, could someone help me identify where I went wrong?</p>
<pre><code>import re
MOD_LIST_MSG = re.compile(r":\w+\.\w+\.\w+ NOTICE #\w+ :The moderators of this room are:(.*)")

test_msg = ":tmi.twitch.tv CAP * ACK :twitch.tv/commands\r\n:tmi.twitch.tv NOTICE #secondubly :The moderators of this room are: mod1, mod2, mod3, mod4\r\n"

parsed_mod_string = MOD_LIST_MSG.match(test_msg)
if parsed_mod_string.group(1):
    mod_list = parsed_mod_string.group(1).split(', ')
    print(mod_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Per the documentation <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match</code></a>:</p>
<blockquote>
<p>If zero or more characters <em>at the beginning of string</em> match the regular expression..</p>
</blockquote>
<p>That is, <code>re.match</code> is an "anchored" search function.</p>
<p>Compare this to <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><code>re.search</code></a>:</p>
<blockquote>
<p>Scan through string looking <em>for the first location</em> where [the pattern matches..]</p>
</blockquote>
</div>
<span class="comment-copy">You would be well served to post example input and desired captured text. Also, you would do <code>if parsed_mod_string:</code> to test the match. You will get an error with <code>if parsed_mod_string.group(1):</code> if there is no match.</span>
<span class="comment-copy">@user2864740 I did exactly that before trying it in python - and it works fine there, but not in my code (see: <a href="https://vgy.me/BSiA0d.png" rel="nofollow noreferrer">this editor</a>) which is what confused me.</span>
<span class="comment-copy">I honestly can't believe it was that simple (I spent hours hunting through documentation and examples to make sure I had it right).  That solved my problem!</span>
<span class="comment-copy">@TaiM. Yay! FWIW - I might split the lines first (on \r\n) and then apply re.match on each line - breaking up a regular expression (or the input to such) can often times simplify a problem. Also, a literal dot is better matched with [.] or \. to avoid over-matching with the .-wildcard.</span>
