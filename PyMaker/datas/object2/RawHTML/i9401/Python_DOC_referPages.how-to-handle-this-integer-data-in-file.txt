<div class="post-text" itemprop="text">
<p>I have a <strong>fileA.txt</strong> as :</p>
<pre><code>000001 
0012
1122 
00192
..
</code></pre>
<p>The file is about <strong>25kb</strong> with some random number on every line.</p>
<p>I want rearrange all these numbers with <strong>8-digits fix length</strong> like the below output:</p>
<pre><code>00000001
00000012
00000112
00000192
</code></pre>
<p>I tried this :</p>
<pre><code>f = open('fileA.txt', 'r')
content = f.readlines()
nums = [ int(x.rstrip('\n')) for x in content]
print nums
f.close()
</code></pre>
<p>output:</p>
<pre><code>[1, 12, 1122, 192]
</code></pre>
<p>I want to rearrange this numbers and even the list-compression gets hanged here for original file. How to do this?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('test.txt') as f:
    for line in f:
        f_line = '{:08}'.format(int(line))
        print(f_line)
</code></pre>
<p>out:</p>
<pre><code>00000001
00000012
00001122
00000192
</code></pre>
<p>List Comprehension:</p>
<pre><code>with open('test.txt') as f:
    lst = ['{:08}'.format(int(line)) for line in f]
</code></pre>
<p>out:</p>
<pre><code>['00000001', '00000012', '00001122', '00000192']
</code></pre>
<p>.</p>
<pre><code>format_spec ::=  [[fill]align][sign][#][0][width][,][.precision][type]
</code></pre>
<blockquote>
<p>width is a decimal integer defining the <strong>minimum field width</strong>. If not
  specified, then the field width will be determined by the content.
  <strong>Preceding the width field by a zero ('0') character</strong> enables sign-aware
  zero-padding for numeric types. This is equivalent to a fill character
  of '0' with an alignment type of '='.</p>
</blockquote>
<p><a href="https://docs.python.org/3.4/library/string.html#format-string-syntax" rel="nofollow noreferrer">format string syntax</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/2/library/string.html#string.zfill" rel="nofollow noreferrer">zfill</a> method, to fill your numbers with '0'.</p>
<pre><code>nums = [ x.rstrip('\n').zfill(8) for x in content]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/string.html#formatstrings" rel="nofollow noreferrer">str.format</a> to do this:</p>
<pre><code>&gt;&gt;&gt; with open('nums.txt') as f:
...     for line in f:
...         print('{:0&gt;8}'.format(line.strip()))
... 
00000001
00000012
00001122
00000192
</code></pre>
<p>The <code>0</code> is the fill character, <code>&gt;</code> specifies right-alignment and <code>8</code> is the width of the filled string.</p>
</div>
<div class="post-text" itemprop="text">
<p>if file is too large don't load all the data together and process it. Instead read line one by one and process each line one by one.</p>
<pre><code>with open('fileA.txt', 'r') as f:
   with open('fileB.txt', 'w') as o: # newfile to fixed
       for line in f:
           val = line.strip('\n').zfill(8)
           print val
           o.write(val + '\n')
</code></pre>
</div>
<span class="comment-copy">Yeah thanks..but how to handle list compression there?</span>
