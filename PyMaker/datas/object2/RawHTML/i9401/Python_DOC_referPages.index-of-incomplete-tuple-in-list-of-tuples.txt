<div class="post-text" itemprop="text">
<p>Here is my problem:</p>
<p>I have a list of tuples (a,b,c) and I want to find the index of the first tuple that starts with a given 'a' and 'b'.</p>
<p>Example:</p>
<p>list = [(1,2,3), (3,4,5), (5,6,7)]</p>
<p>I want, given a = 1, and b = 2 something that returns 0 (index of (1,2,3))</p>
<p>Here is a solution I've found but it's very inefficient:</p>
<pre><code>index0(list)  # returns a list of all first elements in tuples
index1(list)  # returns a list of all second elements in tuples
try:
    i = index0.index(a)
    j = index1.index(b)
    if i == j:
          print(i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter()</code></a>:</p>
<pre><code>try:
    item = next(filter(lambda item: item[0:2] == (a, b), my_list))
    index = my_list.index(item)
except StopIteration:
    print("No matching item")  # Or for example: index = -1
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; my_list = [(1,2,3), (3,4,5), (5,6,7)]
&gt;&gt;&gt; 
&gt;&gt;&gt; a, b = 5, 6
&gt;&gt;&gt; 
&gt;&gt;&gt; item = next(filter(lambda item: item[0:2] == (a, b), my_list))
&gt;&gt;&gt; item
(5, 6, 7)
&gt;&gt;&gt; 
&gt;&gt;&gt; index = my_list.index(item)
&gt;&gt;&gt; index
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way to do it using a <em>generator expression</em> that returns the index of the first matching tuple by calling <code>next</code> on the gen. exp. <a href="https://docs.python.org/2/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a> returns the index of each tuple and the tuple itself:</p>
<pre><code>t = [(1,2,3), (3,4,5), (5,6,7)]
a = 1
b = 2
val = next(ind for ind, (i, j, _) in enumerate(t) if i==a and j==b)
print(val)
# 0
</code></pre>
<p>You'll get an error if no tuple containing the given values is found.</p>
<p>On another note, you can use a list comprehension if you want to collect all tuples that match the criterion.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a fault-tolerant way. Note, it returns -1 if it doesn't find any matching tuple:</p>
<pre><code>In [3]: def find_startswith(tuples, a, b):
   ...:     for i, t in enumerate(tuples):
   ...:         try:
   ...:             f, s, *rest = t
   ...:             if f == a and s == b:
   ...:                 return i
   ...:         except ValueError as e:
   ...:             continue
   ...:     else:
   ...:         return -1
   ...:
   ...:

In [4]: x
Out[4]: [(1, 2, 3), (3, 4, 5), (5, 6, 7)]

In [5]: find_startswith(x, 1,2)
Out[5]: 0

In [6]: find_startswith(x, 3, 2)
Out[6]: -1

In [7]: find_startswith(x, 3, 4)
Out[7]: 1

In [8]: find_startswith(x, 4, 5)
Out[8]: -1

In [9]: find_startswith(x, 5, 6)
Out[9]: 2
</code></pre>
</div>
<span class="comment-copy">It looks like you want us to write some code for you. While many users are willing to produce code for a coder in distress, they usually only help when the poster has already tried to solve the problem on his own. A good way to show this effort is to include the code you've written so far, example input (if there is any), the expected output, and the output you actually get (console output, tracebacks, etc.). The more detail you provide, the more answers you are likely to receive. Check the <a href="http://stackoverflow.com/tour">FAQ</a> and <a href="http://stackoverflow.com/help/how-to-ask">How to Ask</a>.</span>
<span class="comment-copy">This returns the first <i>element</i> in the list, not the index (although, that is what the OPs attempt seems to do, so it is ambiguous). Also, it is better to use <code>next</code> rather than putting the whole result into a list and then using <code>pop</code>.</span>
<span class="comment-copy">@juanpa.arrivillaga <code>index = my_list.index(item)</code> returns the index, I am using list instead of next just to write a solution that works for both Python versions. I updated it to use next since Python 3 is tagged in this question. Thanks!</span>
<span class="comment-copy">Thank you very much for the answer, I think this would be the best way to do it but I get a "StopIteration" error and I have no idea why</span>
<span class="comment-copy">If you do not have a matching element in your list, you will get <code>StopIteration</code> error.</span>
<span class="comment-copy">Trying with numbers it's fine, but when using it in the context I want to use it it seems not to be able to find what it's looking for</span>
