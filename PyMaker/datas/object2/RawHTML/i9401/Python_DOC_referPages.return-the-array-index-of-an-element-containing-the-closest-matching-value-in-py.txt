<div class="post-text" itemprop="text">
<p>How do I return the index for the array element whose sub-element value is the closest matching Int to my query.</p>
<p>eg:
If the array looks like this:</p>
<pre><code>{
  "data": [
      {
        "time": 1483304400,
      },
      {
        "time": 1483308000,
      },
      {
        "time": 1483311600,
      },
      {
        "time": 1483315200,
      },
      {
        "time": 1483318800,
      }
    ]
}
</code></pre>
<p>and my query is <code>1483311700</code> then I want to return <code>2</code> as that's the index for the closest matching element.</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done using the built-in <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer"><code>min</code></a> function with a custom key function that returns the absolute difference between the value of a <code>'time'</code> key and <code>query</code>.</p>
<p><code>min(it, key=keyfunc)</code> returns the smallest element from <code>it</code> according to <code>keyfunc</code>. If you use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate(it)</code></a> instead of <code>it</code> and tweak the key function accordingly, <code>min</code> will return both the element and its index:</p>
<pre><code>&gt;&gt;&gt; index, value = min(enumerate(data), key=lambda x:abs(x[1]['time'] - query))
&gt;&gt;&gt; index
2
</code></pre>
<p>Here <code>data</code> is the value of the <code>'data'</code> key in your input.</p>
</div>
<div class="post-text" itemprop="text">
<p>Simple solution using <code>bisect.bisect(a, x, lo=0, hi=len(a))</code> function(<em>returns an insertion point which comes after (to the right of) any existing entries of x in a.</em>):</p>
<pre><code>idx = bisect.bisect([d['time'] for d in data], 1483311700) - 1
print(idx)  # 2
</code></pre>
<p><a href="https://docs.python.org/3/library/bisect.html#module-bisect" rel="nofollow noreferrer">https://docs.python.org/3/library/bisect.html#module-bisect</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Isolate the time values in a list.</p>
<pre><code>In [1]: %cpaste
Pasting code; enter '--' alone on the line to stop or use Ctrl-D.
:data = {
:  "data": [
:      {
:        "time": 1483304400,
:      },
:      {
:        "time": 1483308000,
:      },
:      {
:        "time": 1483311600,
:      },
:      {
:        "time": 1483315200,
:      },
:      {
:        "time": 1483318800,
:      }
:    ]
:}
:--

In [2]: data["data"]
Out[2]: 
[{'time': 1483304400},
 {'time': 1483308000},
 {'time': 1483311600},
 {'time': 1483315200},
 {'time': 1483318800}]

In [3]: times = [j["time"] for j in data["data"]]

In [4]: times
Out[4]: [1483304400, 1483308000, 1483311600, 1483315200, 1483318800]
</code></pre>
<p>Then generate a list of the absolute difference between the list items and your query.</p>
<pre><code>In [3]: times = [j["time"] for j in data["data"]]

In [4]: times
Out[4]: [1483304400, 1483308000, 1483311600, 1483315200, 1483318800]

In [5]: diff = [abs(j-1483311700) for j in times]

In [6]: diff
Out[6]: [7300, 3700, 100, 3500, 7100]
</code></pre>
<p>Last, find the index of the lowest difference.</p>
<pre><code>In [7]: min(diff)
Out[7]: 100

In [8]: diff.index(100)
Out[8]: 2
</code></pre>
</div>
<span class="comment-copy">this is a dictionary , you can look it like a json , use a library like demjson , then decode it using this instruction , <code>demjson.decode(String that containing the input)</code> then look it like an array , use a for loop , then calculate the most close number to your expected number</span>
