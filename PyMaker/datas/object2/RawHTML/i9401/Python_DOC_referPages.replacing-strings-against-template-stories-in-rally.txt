<div class="post-text" itemprop="text">
<p>I can successfully obtain user story information with my Python code; however, I want to replace a specific string located in the details and user story name. For instance, the string could be $projectName and I'd like to replace it with a user inputted value. </p>
<p>Is there something which helps to code for this or is there a working example? I am stuck because this isn't necessarily a file to edit and the Hierarchy output also creates a block for me to develop something that works.</p>
<p>Here is my code for pulling the data:</p>
<pre><code>#!/usr/bin/env python
import sys
from pyral import Rally, rallyWorkset

options = [arg for arg in sys.argv[1:] if arg.startswith('--')]
args    = [arg for arg in sys.argv[1:] if arg not in options]
server, username, password, apikey, workspace, project = rallyWorkset(options)
if apikey:
        rally = Rally(server, apikey=apikey, workspace=workspace, project=project)
else:
        rally = Rally(server, username=username, password=password, workspace=workspace, project=project)
response = rally.get ('UserStory', fetch=True, query='Name contains "$projecttest"')
for story1 in response:
    print story1.details()
</code></pre>
<hr/>
<p>Here is the output I get, scrubbed, of course:</p>
<pre><code>HierarchicalRequirement
    oid                       : 81284473268
    ref                       : hierarchicalrequirement/81284473268
    ObjectID                  : 81284473268
    ObjectUUID                : 67c952b4-e414-4759-a8c5-d7d7543ba98d
    _ref                      : https://rally1.rallydev.com/slm/webservice/v2.0/hierarchicalrequirement/81284473268
    _CreatedAt                : Dec 14, 2016
    _hydrated                 : True
    Name                      : Robert - test - pyRal - $projecttest
    Subscription              : &lt;&lt;SCRUBBED&gt;&gt;
    Workspace                 : Workspace.ref          (OID  SCRUBBED)
    FormattedID               : US47008

    AcceptedDate              : None
    Attachments               : []
    Blocked                   : False
    BlockedReason             : None
    Blocker                   : None
    Changesets                : []
    Children                  : []
    CreationDate              : 2016-12-14T18:21:03.663Z
    DefectStatus              : NONE
    Defects                   : []
    Description               : &lt;b&gt;Description&lt;/b&gt;&lt;div&gt;&lt;br /&gt;&lt;div&gt;Some format here&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Outcome&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;Some outcome here&lt;/div&gt;&lt;/div&gt;
    DirectChildrenCount       : 0
    Discussion                : []
    DisplayColor              : #21a2e0
    DragAndDropRank           : O~zbf~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Expedite                  : False
    Feature                   : None
    HasParent                 : False
    InProgressDate            : None
    Iteration                 : None
    LastBuild                 : None
    LastRun                   : None
    LastUpdateDate            : 2016-12-19T22:42:48.173Z
    LatestDiscussionAgeInMinutes  : None
    Milestones                : []
    Notes                     : 
    Owner                     : User.ref  (OID  SCRUBBED)
    Package                   : None
    Parent                    : None
    PassingTestCaseCount      : 0
    PlanEstimate              : None
    PortfolioItem             : None
    Predecessors              : []
    Project                   : Project.ref                 (OID  SCRUBBED)
    Ready                     : False
    Recycled                  : False
    Release                   : None
    ScheduleState             : Ungroomed
    ScheduleStatePrefix       : U
    Successors                : []
    Tags                      : []
    TaskActualTotal           : 0.0
    TaskEstimateTotal         : 0.0
    TaskRemainingTotal        : 0.0
    TaskStatus                : NONE
    Tasks                     : []
    TestCaseCount             : 0
    TestCaseStatus            : NONE
    TestCases                 : []
    VersionId                 : 4
    __collection_ref_for_RevisionHistory  : SCRUBBED
    _refObjectUUID            : SCRUBBED
    AcceptanceCriteria        : None
    IGNOREAcceptanceCriteria  : None
    IdeaURL                   : &lt;pyral.entity.CustomField object at 0x7f1afb79a190&gt;
    IdeaVotes                 : None
    JIRAPriority              : None
    JiraKey                   : None
    JiraLink                  : None
    KanbanState               : None
    Priority                  : None
    ReleaseNote               : None
    RequestedDate             : None
    SNRequest                 : None
    Submitter                 : None
    TestRailPlanID            : None
    TrackingState             : None
</code></pre>
<p>=====================================================</p>
<p>So, with PyRal, I would have to send an update to each user story this code pulls, only on the rows which contain the string; however, I would somehow have to store each FormattedID: and the associated Name: field to update, this is where I am stuck, on how to actually store this so it can be iterated over and updated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <em>template strings</em> which do exactly what you want, using an env-variable like to delimit template tokens:</p>
<pre><code>from string import Template
s = Template('this is $projectName')
s.substitute(projectName='THE_PROJECT')
</code></pre>
<p>results in:</p>
<pre><code>'this is THE_PROJECT'
</code></pre>
<p><a href="https://docs.python.org/3/library/string.html" rel="nofollow noreferrer">https://docs.python.org/3/library/string.html</a></p>
<p>Alternate way, if you wrap <code>projectName</code> within curly braces, is using <code>format</code>:</p>
<pre><code>s = 'this is {projectName}'
print(s.format(projectName='THE_PROJECT'))
</code></pre>
</div>
<span class="comment-copy">If you're just looking to replace things like <code>$projectName</code> in a string, this is not a difficult task, but you haven't shown us any attempt. Try using regular expressions and the <code>re</code> module.</span>
<span class="comment-copy">Sorry for that, I was in a hurry, I have updated my post.</span>
<span class="comment-copy">Thanks! I thought about this; however, using PyRal, I have to make a separate call to update the record; thus, I would need to store the FOrmattedID and the Name and then edit only the string inside the name and apply the update to the respective FormattedID (story).</span>
