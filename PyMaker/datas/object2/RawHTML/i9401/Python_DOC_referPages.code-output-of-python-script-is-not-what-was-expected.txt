<div class="post-text" itemprop="text">
<p>Precursor: I am new to Python, but I looked around a lot and couldn't figure out my problem. In reality, I wanted a Fibonacci sequence, so the output is good, but I don't understand why it worked. I was expecting something else.</p>
<p>Here is what I wrote:</p>
<pre><code>sequence=[1,2]
t=0
for i in range(9):
    term=sequence[t-1]+sequence[t-2]
    sequence.append(term)
print(sequence)
</code></pre>
<p>Here's the output:</p>
<pre><code>[1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144]
</code></pre>
<p>Shouldn't the output be some sort of error like 'list index out of range'?</p>
<p>OR</p>
<p>Shouldn't it be something else? Like this, maybe:</p>
<pre><code>[1, 2, null, null, null]
</code></pre>
<p>Here is what I was expecting to have to write to get the Fibonacci sequence (notice t+=1):</p>
<pre><code>sequence=[1,2]
t=0
for i in range(9):
    term=sequence[t-1]+sequence[t-2]
    sequence.append(term)
    t+=1
print(sequence)
</code></pre>
<p>But, that outputs:</p>
<pre><code>[1, 2, 3, 4, 3, 5, 7, 7, 8, 12, 14]
</code></pre>
<p>So, why does that work for the Fibonacci sequence? Does Python automatically recognize something I don't know it does?</p>
<p>Understand what I am saying?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python, <code>sequence[-1]</code> refers to the last item in the list, and <code>sequence[-2]</code> refers to the next-to-last item. This simplifies much list programming--and I used negative indices in an answer on this site just two days ago. There are reasons Python code is usually shorter than code in other languages, and negative indices is just one reason. This technique also works for strings--see <a href="https://docs.python.org/3/tutorial/introduction.html#strings" rel="nofollow noreferrer">here</a> in the part about slicing strings for more detail.</p>
<p>So the index is never out of range in your code. Every time through the loop items <code>-1</code> and <code>-2</code> are added, which are the last two numbers in the loop. This is just what is wanted for the Fibonacci sequence.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>t</code> in the original algorithm may have you confused. It is meaningless IMO. In your second algorithm (the one with <code>t += 1</code>), if you change <code>t=0</code> to <code>t=2</code>, it should work as expected.</p>
</div>
<div class="post-text" itemprop="text">
<p>You appending an item to the list on each iteration and the size of your sequence are getting larger and larger. On each step you take two last items from it to sum so there are no errors.</p>
</div>
<span class="comment-copy">Thank you so much! That makes a lot of sense. And yes, for a Fibonacci sequence that is perfect! I did not realize Python could take negatives indices and that it corresponded to the rear-end of the list. This should help in a lot of other stuff! Thank you so much!</span>
<span class="comment-copy">@kitekid99 you should accept this answer</span>
<span class="comment-copy">That would just keep adding int 1 and int 2</span>
<span class="comment-copy">I meant that change <code>t=0</code> to <code>t=2</code> in your second example, in which you have <code>t += 1</code> at the end.</span>
<span class="comment-copy">My bad, misread your response. Yes, that should work also.</span>
<span class="comment-copy">At least for a few rounds I think. IDK. Haven't tested it</span>
