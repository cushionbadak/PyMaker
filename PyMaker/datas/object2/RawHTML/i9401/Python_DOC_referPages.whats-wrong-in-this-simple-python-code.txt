<div class="post-text" itemprop="text">
<p>Why is it not giving out correct total of first even fibonacci numbers upto 4 mn?</p>
<pre><code>x = 1
y = 2
list = [1,2]
while y&lt; 4000000:
    z= x+y
    x=y
    y=z
    list.append (y)
list_even = []
for a in list:
    if a%2 == 0:
        list_even.append (a)
else:
    pass

total = sum(list_even)
print (total) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are other answers already addressing specific bugs in your code, so I want to offer a completely different implementation that achieves your stated goal:</p>
<blockquote>
<p>giving out correct total of first even fibonacci numbers upto 4 mn</p>
</blockquote>
<p>If you want to find the sum of the even Fibonacci numbers up to some limit, the code below might be a more functional way of achieving it. It's based on composing Python generators, which should help make the code easier to follow and more reusable.</p>
<pre><code>def fib():
    a, b = 0, 1
    while True:
        yield a
        a, b = b, a + b

def evens(l):
    for x in l:
        if x % 2 == 0:
            yield x

def sum_even_fibonacci(limit):
    total = 0

    for x in evens(fib()):
        if total + x &gt; limit:
            return total

        total += x

if __name__ == '__main__':
    print(sum_even_fibonacci(4000000))
</code></pre>
<p><strong>Output</strong></p>
<pre><code>1089154
</code></pre>
<p><strong>Edit</strong></p>
<p>It's ambiguous what exactly OP is asking.</p>
<ul>
<li><p>If OP wants to sum the even Fibonacci terms <em>until the sum would surpass 4,000,000</em>, then the answer is what I stated above - 1089154.</p></li>
<li><p>If OP wants to sum <em>all even Fibonacci terms under 4,000,000</em>, then the expression <code>if total + x &gt; limit</code> would change to <code>x &gt; limit</code> and the answer would be 4613732.</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>I recognize this as <a href="https://projecteuler.net/problem=2" rel="nofollow noreferrer">Problem 2</a> on Project Euler. For some reason, @Tagc is getting the wrong answer. I used a generator as well but not a list. Here was my solution:</p>
<pre class="lang-python prettyprint-override"><code>def fibonacci():
    term_0, term_1 = 1,2
    while True:
        yield term_0 + term_1
        term_0, term_1 = term_1, term_0 + term_1

fibonacci_sum = 2
for n in fibonacci():
    if n &gt; 4000000: break
    if n % 2 == 0: fibonacci_sum += n

print(fibonacci_sum)
</code></pre>
<p>Output:</p>
<pre class="lang-bash prettyprint-override"><code>$ python 002.py
4613732
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>just for fun, this is an one liner version</p>
<pre><code>from itertools import takewhile

def fib():
    fk, fk1 = 0,1
    while True:
        yield fk
        fk, fk1 = fk1, fk+fk1

print( sum( x for x in takewhile(lambda f:f&lt;4000000,fib()) if x%2==0 ) )
</code></pre>
<p>here <a href="https://docs.python.org/3/library/itertools.html#itertools.takewhile" rel="nofollow noreferrer">takewhile</a> will stop the iteration when the condition is no longer satisfied the same way as the others answers</p>
</div>
<span class="comment-copy"><code>x=y; y= x+y</code> is wrong.</span>
<span class="comment-copy">even after correcting, the total is wrong.</span>
<span class="comment-copy"><code>else: pass</code> is not necessary. Just remove it.</span>
<span class="comment-copy">Removed. But how to get correct total?</span>
<span class="comment-copy">@Rizz_Beginner_Python correct answer is <code>4613732</code>, not <code>508186</code>.</span>
<span class="comment-copy">the condition should be <code>x&gt;limit</code></span>
<span class="comment-copy">@Copperfield It depends on how the question is interpreted, before OP completely mangled it. I interpreted 4,000,000 as being the limit on the <i>total</i> (i.e. keep adding the even Fibonacci terms up until 4,000,000 is surpassed).</span>
<span class="comment-copy">the OP wants the sum of the evens fibonacci numbers less than 4.000.000 that much is clear since the begging</span>
<span class="comment-copy">I never changed the part -"Why is it not giving out correct total of first even fibonacci numbers upto 4 mn?"</span>
<span class="comment-copy">I'm getting a different answer because I'm interpreting the question a different way. OP's problem is ambiguous, but your interpretation is more likely to be correct if it's a Project Euler problem. I get the same answer as you if I change <code>total + x &gt; limit</code> to <code>x &gt; limit</code>.</span>
<span class="comment-copy">@Tagc, oh that makes more sense, you're finding the largest sum less than 4000000.</span>
<span class="comment-copy">This should be a challenge on <a href="http://codegolf.stackexchange.com/">codegolf.stackexchange.com</a> :)</span>
