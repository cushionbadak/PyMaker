<div class="post-text" itemprop="text">
<p>I was writing a wrapper class for sockets so I could use it as a file-like object for piping into the <code>stdin</code> and <code>stdout</code> of a process created with <code>subprocess.Popen()</code>.</p>
<pre><code>def do_task():
    global s #The socket
    class sockIO():
        def __init__(self, s):self.s=s
        def write(self, m): self.s.send(m)
        def read(self, n=None): return self.s.read() if n is None else self.s.read(n)
        def fileno(self): return self.s.fileno()
    #stdio=s.makefile('rw')
    stdio=sockIO(s)
    cmd = subprocess.Popen('cmd', shell=True,
                           stdout=stdio, stderr=stdio,
                           stdin=stdio)
</code></pre>
<p>I didn't use <code>socket.makefile()</code> as it gives a <code>io.UnsupportedOperation: fileno</code> error, but with my present code I'm getting the following error on Windows (works fine on Linux):</p>
<pre><code>Traceback (most recent call last):
  File "C:\Users\admin\Desktop\Projects\Python3\client.py", line 65, in &lt;module&gt;
    main()
  File "C:\Users\admin\Desktop\Projects\Python3\client.py", line 62, in main
    receive_commands2()
  File "C:\Users\admin\Desktop\Projects\Python3\client.py", line 57, in receive_commands2
    stdin=stdio)
  File "C:\Python3\lib\subprocess.py", line 914, in __init__
    errread, errwrite) = self._get_handles(stdin, stdout, stderr)
  File "C:\Python3\lib\subprocess.py", line 1127, in _get_handles
    p2cread = msvcrt.get_osfhandle(stdin.fileno())
OSError: [Errno 9] Bad file descriptor
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>According to the Python documentation about <code>socket.fileno()</code>, it is stated that this won't work in Windows. Quoting from <a href="https://docs.python.org/3/library/socket.html?highlight=socket#module-socket" rel="nofollow noreferrer">Python Documentation</a>:</p>
<blockquote>
<p><code>socket.fileno()</code></p>
<p>Return the socketâ€™s file descriptor (a small integer). This is useful with select.select().</p>
<p><strong>Under Windows the small integer returned by this method cannot be used where a file descriptor can be used (such as <code>os.fdopen()</code>)</strong>. Unix
  does not have this limitation.</p>
</blockquote>
<p><strong>Note:</strong></p>
<p>The above code will work in Linux and other *nix systems.</p>
</div>
<span class="comment-copy">don't define methods in one line - they are unreadable for human.</span>
<span class="comment-copy">Sorry, was in a hurry...</span>
<span class="comment-copy"><code>Bad file descriptor</code> may means that socket is closed.</span>
<span class="comment-copy">It's not... I'm sure. Give this line a thought: <code>def fileno(self): return self.s.fileno()</code></span>
<span class="comment-copy">This error is specific to Windows only... Works fine on both Ubuntu and WSL.</span>
