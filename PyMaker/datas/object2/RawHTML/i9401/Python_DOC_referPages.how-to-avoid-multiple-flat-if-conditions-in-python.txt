<div class="post-text" itemprop="text">
<p>Consider the snippet:</p>
<pre><code>def check_conditions(range_of_numbers):
#method returns a list containing messages 
    list1 = []
    if condition1:
       list1.append("message1")
    if condition2:
       list1.append("message2")
    if condition3:
       list1.append("message3")
    try:
       for i in range_of_numbers:
           int(i)
    except ValueError:
        list1.append("message4")
    return message
</code></pre>
<p>I want to have a list in the with messages only if the conditions were satisfied. I do not use multiple if's since it adds on to the code complexity and every time a new parameter is added I would end up adding a new if condition.</p>
</div>
<div class="post-text" itemprop="text">
<p>just loop on the condition/message couples for instance:</p>
<pre><code>for condition,message in ((condition1,"message1"),(condition2,"message2"),(condition3,"message3")):
    if condition:
       list1.append(message)
</code></pre>
<p>if the conditions are exclusive, consider adding a <code>break</code> if one condition matches.</p>
<p>list comprehension version (more "pythonic" but not possible to break on first condition match, though):</p>
<pre><code>list1 = [message for condition,message in ((condition1,"message1"),(condition2,"message2"),(condition3,"message3")) if condition]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As a supplement of Jean-Fran√ßoisFabre.</p>
<h3>All conditions are satisfied</h3>
<pre><code>tmp = [message for condition, message in ((condition1, "message1"),
       (condition2, "message2"),(condition3, "message3")) if condition]
</code></pre>
<h3>Conditions are exclusive</h3>
<pre><code>tmp = next((message for condition, message in ((condition1, "message1"),         
           (condition2, "message2"), (condition3, "message3")) if condition), None)
</code></pre>
</div>
<span class="comment-copy">Do you want to create these conditions dynamically? Because if not, then your current way of writing them is readable and totally fine, i would not change it.</span>
<span class="comment-copy">Have a look at <a href="https://docs.python.org/3/library/itertools.html#itertools.compress" rel="nofollow noreferrer"><code>itertools.compress</code></a>.</span>
<span class="comment-copy">Why not put conditions and messages in lists and zip over them?</span>
<span class="comment-copy">yes, that also works. But since OP code hardcodes the couples, a hardcoded list of tuples is better than zipping 2 hardcoded lists. If the data comes in 2 lists it's different.</span>
