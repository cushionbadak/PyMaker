<div class="post-text" itemprop="text">
<p>i am just trying to do the basic opening of the file while monitoring whether it's still opened or not, but it just opens it and exits. any suggestions to why that happens? </p>
<pre><code>class Opener:
    def __init__(self, file_path):
        self.file_path = file_path
        self.process = None

    def start(self):
        sub = subprocess.Popen(self.file_path, shell=True)
        while sub.poll():
            pass
        print "closed"
new = Opener("test.jpg")
t1 = threading.Thread(target=new.start)
t1.start()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This only works on Windows with <code>shell=True</code> because the default program for the extension is used to open the given file, it's the equivalent of using <code>cmd /c Path\To\File</code></p>
<p>The problem is that</p>
<pre><code>while sub.poll():
    pass
</code></pre>
<p>does not what you want. <code>sub.poll()</code> returns <code>None</code> while the program is running, and the exit code of the program when it has finished. If the program were to terminate with an exit code other then 0 before reaching this loop, then it would just keep looping and consuming CPU. If the program is still running or has completed successfully then the loop is not entered at all.</p>
<p>Checking wheather a process is still runing using <code>poll()</code> should be done by checking <code>sub.poll() is None</code>, or better use <code>sub.wait()</code>.</p>
<p>Some programs however allow only one active instance, if you try to start a second instance it will instead open the file in the open window and exit immediately. In that case there is no easy way to know wheather the file is still open in the application. So the behaviour also depends on the registered program.</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't use <code>subprocess.Popen</code> to open a file. As you can see in the <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">documentation </a> it is used to run child programs in a new process. But if you want to open a file for reading do</p>
<pre><code>with open(self.file_path, 'r') as f:
    # do somethin here
    pass
</code></pre>
<p>The file will be opened at the beginning of the <code>with</code> statement and closed afterwards.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>Popen</code> is meant to create new processes (as in, execute another program from your python script), not open files. You can use the <code>mutiprocessing</code> module to execute the function that opens the file in a different process, instead of</p>
<pre><code>t1 = threading.Thread(target=new.start)
</code></pre>
<p>use:</p>
<pre><code>t1 = multiprocessing.Process(target=new.start)
</code></pre>
<p>and change function <code>Opener.start</code> so it opens a file and asks about it's state. Something like this:</p>
<pre><code>def start(self):
    sub = open(self.file_path)
    while not sub.closed:
        pass
    print "closed"
</code></pre>
</div>
<span class="comment-copy"><code>Popen</code> takes executables as a parameter, not image. What do you want to achieve?</span>
<span class="comment-copy">I used the shell argument which runs the parameter like it would on the command line, it opens the picture like it should but it would wait until it is closed</span>
<span class="comment-copy">are you using windows or linux?</span>
<span class="comment-copy">i am trying to check whether it is closed or not, not only reading the contents. i am also trying to start it through the default program on windows so i will have to run it from the shell</span>
<span class="comment-copy">Then you should have a look at <a href="http://stackoverflow.com/questions/6825994/check-if-a-file-is-open-in-python" title="check if a file is open in python">stackoverflow.com/questions/6825994/â€¦</a></span>
