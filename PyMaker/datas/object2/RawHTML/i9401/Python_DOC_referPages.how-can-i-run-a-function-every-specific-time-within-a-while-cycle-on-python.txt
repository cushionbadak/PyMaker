<div class="post-text" itemprop="text">
<p>I'm working in a project with OCR using a webcam. I would like to know how can I run a function every 3 seconds (for example) while the principal code still running. The code is very long. So I use the following to exemplify:</p>
<pre><code>import cv2

cap = cv2.VideoCapture(0)

def capture():
    cv2.imwrite("frame.jpg", frame)

while(1):
    ret, frame = cap.read()
    cv2.imshow('Webcam', frame)
    (_, cnt, _) = cv2.findContours(frame, cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)
    if len(cnt) &gt; 10:
        # here I want to call capture() function every 3 seconds

    if cv2.waitKey(1) &amp; 0xFF == ord('x'):
        break

cap.release()
cv2.destroyAllWindows()
</code></pre>
<p>I used <code>time.sleep(3)</code> after the statments of <code>capture()</code> function but it pause the continuous capture of the frame. I don't want it. I need something like a software interruption. When the flag shoots, the code of function run but the while cycle continues working.</p>
<p>I'm using python 2.7 on Windows 7.</p>
<p>I hope you understand my purpose. I rode about daemon and threads but I can't interpret so much.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use it like this</p>
<pre><code>import cv2
import threading
import time

cap=cv2.VideoCapture(0)

main_loop_running = True
def capture():
    global main_loop_running, frame
    while (main_loop_running):
        cv2.imwrite("frame.jpg", frame)
        time.sleep(3)

ret, frame = cap.read()
cv2.imshow('Webcam', frame)
child_t = threading.Thread(target=capture)
child_t.setDaemon(True)
child_t.start()

while(1):
    ret, frame = cap.read()
    cv2.imshow('Webcam', frame)

    # here I want to call capture() function every 3 seconds

    if cv2.waitKey(1) &amp; 0xFF == ord('x'):
        break

main_loop_running = False
child_t.join()

cap.release()
cv2.destroyAllWindows()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Probably best to do this with threads (<a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer">see multiprocessing</a>), but easy solution below</p>
<p>Note: Does not fire exactly every 3 seconds as opencv functions take time and probably wait for your webcam to give frames.</p>
<p>Note 2: If not using any kind of multi threading your OCR code WILL block your webcam captures, so make your OCR fast or look into above link. </p>
<pre><code>from time import time

t = time() # starting time

while(1):
    # do stuff

    t_current = time() # current time

    # if more than 3 seconds passed:
    if t_current - t &gt; 3:
        t = t_current
        # do other stuff
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a rather simple solution using threads. You mentioned about not able to exit the app using ctrl-C. This is because the thread is a separate task and you will have to hit ctrl-C again to kill that thread. To fix it, I've catched <code>KeyboardInterrupt</code> and stopped the task accordingly. Try this out. The code is pretty self-explanatory, but let me know in case you have any doubts.</p>
<pre><code>import threading
import cv2

exitTask = False
def threadTask():
    global frame
    if not exitTask:
        threading.Timer(1.0, threadTask).start()
        cv2.imwrite("Threads.jpg", frame)
        print "Wrote to file"

cap = cv2.VideoCapture(0)

try:
    ret, frame = cap.read()
except Exception as err:
    print err
    exit(0)

threadTask()

while(True):
    try:
        ret, frame = cap.read()
        cv2.imshow("Cam", frame)
        cv2.waitKey(1)
    except KeyboardInterrupt:
        exitTask = True
        cv2.destroyAllWindows()
        exit(0)
</code></pre>
</div>
<span class="comment-copy">I used your code but it returned an error:  <code>"Exception in thread Thread-1:"</code> <code>Line 12, in capture: cv2.imwrite("frame.jpg", frame)</code> <code>NameError: global name 'frame' is not defined</code>  Also can you explain how it works please?</span>
<span class="comment-copy">The error is even there in the code that you pasted in the question. In capture function where is the variable frame declared? If you want that frame variable to be the one as created in ret, frame = cap.read(), then in capture function make "global main_loop_running" to "global main_loop_running frame"</span>
<span class="comment-copy">I changed the line: <code>global main_loop_running</code> to <code>global main_loop_running frame</code> but it returns a syntaxis error.</span>
<span class="comment-copy">Sorry my mistake, I missed a ','. It should be 'global main_loop_running, frame'. But this is only a suggestion and you should take a call on whether this is the thing that you want or not. And to explain you on how it works, I am creating a thread called child_t which calls your capture method. I modified capture method to run till the main while loop is running and a sleep of 3 seconds in each iteration</span>
<span class="comment-copy">I added the comma but the error continues.</span>
<span class="comment-copy">It's a good solution but the camera capture freezes when I call the function within the if statment. So, will I have to use <b>threads</b>?</span>
<span class="comment-copy">exactly what my second note says :)</span>
<span class="comment-copy">estimate the time of your OCR. make sure you don't start more threads than are finished (you can also stop every thread after 3 seconds)</span>
<span class="comment-copy">I posted a new question <a href="http://stackoverflow.com/questions/41501384/error-with-global-variables-are-not-defined-in-a-thread-function-on-python">here</a>. If you can help me, I will thank you!</span>
<span class="comment-copy">I implemented your solution but it returned the same error that the previous answer. <code>NameError: global name 'frame' is not defined</code>. Also if I use <b>Ctrl+c</b> to interrupt the execution, it doesn't work. The error continues appearing repeatedly in the Python Shell.</span>
<span class="comment-copy">Pastebin your code. Let me see.</span>
<span class="comment-copy">Here is the code: <a href="http://piratepad.net/X4wzedYsbZ" rel="nofollow noreferrer">link</a></span>
<span class="comment-copy">I've edited the answer with the full code. Try it.</span>
<span class="comment-copy">I tried your code but it only wrote the first frame, it don't refresh the frame each time cycle. Also when I press <b>Ctrl+C</b> the <b>Cam</b> window show the message: <b>Not respond</b>. So I have to kill it with windows task manager.</span>
