<div class="post-text" itemprop="text">
<p>I'm trying to parse content from site (from table) and print only text from node, i'm using .text.strip() but it's doesn't works correct.</p>
<p>My code: </p>
<pre><code>import requests
from bs4 import BeautifulSoup

r = requests.get('http://examplesite.net')
soup = BeautifulSoup(r.content, 'lxml')


builddata = soup.find('table', {'id':'BuildData'})

table_elements = builddata.find_all('tr')
for element in table_elements:
    element_dict = {'element_name':element.findChildren()[0].text.strip(), 'element_value':element.findChildren()[1].text.strip()}
    print(element_dict)
</code></pre>
<p>Result: </p>
<pre><code>{'element_value': 'Студия;                                                 1-к кв;                                                 2-к кв;                                                 3-к кв;                                                 4-к кв', 
{'element_value': 'Квартира у воды,     \t\t       \t\tЗеленая зона', 'element_name': 'Особенности:'}
</code></pre>
<p>lines with problems, should looks like: </p>
<pre><code>{'element_value': 'Студия; 1-к кв; 2-к кв; 3-к кв; 4-к кв', 
{'element_value': 'Квартира у воды, Зеленая зона', 'element_name': 'Особенности:'}
</code></pre>
<p>what i'm doing wrong? </p>
</div>
<div class="post-text" itemprop="text">
<p>You should be using <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#get-text" rel="nofollow noreferrer"><code>get_text()</code></a> with <code>strip=True</code>:</p>
<pre><code>for element in table_elements:
    name, value = element.find_all("td")[:2]

    element_dict = {
        'element_name': name.get_text(strip=True),
        'element_value': ' '.join(value.get_text(strip=True, separator=" ").split())
    }
    print(element_dict)
</code></pre>
<p>Also, see how I've approached reading the cell values in the code above - using <code>find_all()</code> instead of <code>findChildren()</code> and unpacking the cells into name and value pairs.</p>
<p>Note that one of values should be handled "manually" - the "Цена за кв. метр:" one has multiple spaces - we can <a href="https://stackoverflow.com/questions/1546226/a-simple-way-to-remove-multiple-spaces-in-a-string-in-python">replace them with a single one</a>.</p>
<p>Prints:</p>
<pre><code>{'element_name': 'Район:', 'element_value': 'САО (МСК)'}
{'element_name': 'Метро:', 'element_value': 'Речной Вокзал , Петровско-Разумовская'}
{'element_name': 'До метро:', 'element_value': '5.9 км (18 мин на машине) (Посмотреть маршрут)'}
{'element_name': 'Адрес:', 'element_value': 'Дмитровское шоссе, 107 (Посмотреть на карте)'}
...
{'element_name': 'Разрешение на строительство:', 'element_value': 'Есть'}
{'element_name': 'Обновлено:', 'element_value': '19 Декабря 2016'}
{'element_name': 'Особенности:', 'element_value': 'Квартира у воды , Зеленая зона'}
</code></pre>
<hr/>
<p>As a side note, if you'll be dealing with tabular HTML structures more during the HTML parsing, see if loading them into <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html#pandas.DataFrame" rel="nofollow noreferrer"><code>pandas.DataFrame</code></a> objects with <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_html.html" rel="nofollow noreferrer"><code>pandas.read_html()</code></a> would be more convenient than trying to manually parse the tables with <code>BeautifulSoup</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>strip()</code></a> removes <em>trailing</em> white space:</p>
<pre><code>&gt;&gt;&gt; '      test     test         '.strip()
'test     test'
</code></pre>
<p>In order to replace multiple white space characters with only one space, as you appear to do in your example, you can do something like the following:</p>
<pre><code>&gt;&gt;&gt; ' '.join('abc                 adsfdf                adsfsaf'.split())
'abc adsfdf adsfsaf'
</code></pre>
</div>
<span class="comment-copy">Works perfect, but one line returned like this - 118 017        -\n            147 840</span>
<span class="comment-copy">@KonstantinRusanov yup, videl, looking into it, give me a sec, thanks.</span>
<span class="comment-copy">@KonstantinRusanov addressed in the answer, hope it helps!</span>
<span class="comment-copy">Thanks, works perfect!</span>
