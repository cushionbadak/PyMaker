<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7100243/finding-in-elements-in-a-tuple-and-filtering-them">Finding in elements in a tuple and filtering them</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I have the following list.</p>
<pre><code>[('L', 'l'), ('L', 'R'), ('R', 'l'), ('R', 'R')]
</code></pre>
<p>I want to find a subset of this list which satisfies properties like "every tuple has "R" as the second entry". I am very new to programming (literally began studying python syntax a few days ago) so be as clear as you can, thanks.</p>
<p>EDIT: this should generalize, since the list above could be with many more tuples, and each tuple could have many more entires.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer"><code>list comprehension</code></a> like this:</p>
<pre><code>my_list = [('L', 'l'), ('L', 'R'), ('R', 'l'), ('R', 'R')]
res = [item for item in my_list if item[1] == 'R']
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; res
[('L', 'R'), ('R', 'R')]
</code></pre>
<p>Note that you can achieve the same result with <a href="https://docs.python.org/2/library/functions.html#filter" rel="nofollow noreferrer"><code>filter()</code></a>, but you should use the above solution (LC is more pythonic):</p>
<pre><code>res = filter(lambda item: item[1] == 'R', my_list)  # list(filter(...)) in Python 3
</code></pre>
</div>
<span class="comment-copy">You want to filter the list having tuple with "R" at 1st index or do you need a boolean value saying True/False for your property?</span>
<span class="comment-copy">This is what I want. I will accept this answer, but let me just write this in my code and see if I can figure it out.</span>
<span class="comment-copy">OP says <i>this should generalize, since the list above could be with many more tuples, <b>and each tuple could have many more entires</b>.</i> which I take as could be less than 2 also</span>
<span class="comment-copy">How could "many more" be interpreted as "less"?</span>
<span class="comment-copy">How do you generalize "second item is 'R'"?  You want "last item is R"?  "Any item is R"?  etc.</span>
<span class="comment-copy">@MarkReed But the term <i>generalized</i> could be interpreted as that.</span>
