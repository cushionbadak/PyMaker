<div class="post-text" itemprop="text">
<p>Attempt to read a binary file in python.  From the <a href="https://docs.python.org/3/library/struct.html" rel="nofollow noreferrer">dataset page</a>:</p>
<blockquote>
<p>The pixels are stored as unsigned chars (1 byte) and take values from
  0 to 255</p>
</blockquote>
<p>I have tried the following, which prints <code>(0,)</code>, rather than a 784,000 digit array.</p>
<pre><code># -*- coding: utf8 -*-
# Processed MNIST dataset (http://cis.jhu.edu/~sachin/digit/digit.html)
import struct

f = open('data/data0', mode='rb')
data = []

print struct.unpack('&lt;i', f.read(4))
</code></pre>
<p>How can I read this binary into either a 784,000 digit array (28 bytes x 28 bytes x 1k samples), or a 28x28x1000 3D array.  I have never worked with binaries before, and am quite confused!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>f.read()</code> will get you an immutable array of 784,000 bytes (called a <code>str</code> in Python 2). If you need it to be mutable, you can use the <a href="https://docs.python.org/2/library/array.html" rel="nofollow noreferrer"><code>array</code> module</a> and its array type capable of storing various primitives, unsigned bytes (represented by the <code>B</code> code) included:</p>
<pre><code>from array import array

data = array('B')

with open('data/data0', 'rb') as f:
    data.fromfile(f, 784000)
</code></pre>
<p>This can be sliced as necessary:</p>
<pre><code>EXAMPLE_SIZE = 24 * 24
examples = [data[s:s + EXAMPLE_SIZE] for s in xrange(0, len(a), EXAMPLE_SIZE)]
</code></pre>
</div>
<span class="comment-copy">Just food for thought, some existing work using Python read MNIST digits image. <a href="https://github.com/sorki/python-mnist/blob/master/mnist/loader.py" rel="nofollow noreferrer">github.com/sorki/python-mnist/blob/master/mnist/loader.py</a></span>
