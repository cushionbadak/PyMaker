<div class="post-text" itemprop="text">
<p>In my program the first line contains number of test-cases, other lines contain test-cases themselves.
Each test-case contains 8 numbers, 4 for each timestamp: day1 hour1 min1 sec1 day2 hour2 min2 sec2 (second timestamp will always be later than first).
Answer: for each test-case you are to output difference as following (days hours minutes seconds) - please note brackets - separated by spaces.</p>
<p>This is my code:</p>
<pre><code>ins = int(input())

new_list = []

for i in range(ins):
    values = [int(x) for x in input().split()]

    if values[3] &gt; values[7]:
        values[2] += 1
        seconds = 60 - (values[3] - values[7])

    else:
        seconds = values[7] - values[3]

    if values[2] &gt; values[6]:
        values[1] += 1
        minutes = 60 - (values[2] - values[6])

    else:
        minutes = values[6] - values[2]

    if values[1] &gt; values[5]:
        values[0] += 1
        hours = 24 - (values[1] - values[5])

    else:
        hours = values[5] - values[1]

    days = values[4] - values[0]

    new_list.append('(')
    new_list.append(days)
    new_list.append(hours)
    new_list.append(minutes)
    new_list.append(seconds)
    new_list.append(')')

print(' '.join(map(str,new_list)))
</code></pre>
<p>This is my input:</p>
<pre><code>3
1 0 0 0 2 3 4 5
5 3 23 22 24 4 20 45
8 4 6 47 9 11 51 13
</code></pre>
<p>And this is my output:</p>
<pre><code>( 1 3 4 5 ) ( 19 0 57 23 ) ( 1 7 44 26 )
</code></pre>
<p>My question is how can I remove the spaces after and before my brackets, so that my output looks like this:</p>
<pre><code>(1 3 4 5) (19 0 57 23) (1 7 44 26)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Perhaps not the most elegant solution, but change your final line to look like this.</p>
<pre><code>print(' '.join(map(str,new_list)).replace('( ', '(').replace(' )', ')'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your simple case it can be simplified without even using <code>str.join()</code> and <code>map()</code> functions:</p>
<pre><code>result = ""
for i in range(ins):
    ...
    result += '(' + str(days) +" "+ str(hours) + " "+ str(minutes) +" "+ str(seconds) +") "
</code></pre>
<p>Or by using <code>format()</code> function:</p>
<pre><code>    result += '({} {} {} {}) '.format(days, hours, minutes, seconds)
</code></pre>
<p>The output:</p>
<pre><code>(1 3 4 5) (19 0 57 23) (1 7 44 26)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another approach using the brand new <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">formatted string literals</a> (&gt;= 3.6):</p>
<pre><code>new_list.append(f'({days} {hours} {minutes} {seconds}) ')
</code></pre>
<p>Replaces this:</p>
<pre><code>new_list.append('(')
new_list.append(days)
new_list.append(hours)
new_list.append(minutes)
new_list.append(seconds)
new_list.append(')')
</code></pre>
</div>
<span class="comment-copy">who said your solution is not elegant.your solution just made my day :) ... thank you very much</span>
<span class="comment-copy">Thanks, it is a little blunt though!</span>
<span class="comment-copy">Also, would you consider accepting my answer if I've solved your problem?</span>
<span class="comment-copy">sure...why not?</span>
<span class="comment-copy">Nice idea! It would probably be better to use Python's <code>format</code> though.</span>
<span class="comment-copy">@Zak, added <code>format()</code> alternative</span>
