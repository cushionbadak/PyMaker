<div class="post-text" itemprop="text">
<p>I am new to python and want to split what I have read in from a text file into two specific parts. Below is an example of what could be read in:</p>
<pre><code>f = ['Cats','like','dogs','as','much','cats.'][1,2,3,4,5,4,3,2,6]
</code></pre>
<p>So what I want to achieve is to be able to execute the second part of the program is:</p>
<pre><code>words = ['Cats','like','dogs','as','much','cats.']

numbers = [1,2,3,4,5,4,3,2,6]
</code></pre>
<p>I have tried using:</p>
<pre><code>words,numbers = f.split("][")
</code></pre>
<p>However, this removes the double bracets from the two new variable which means the second part of my program which recreates the original text does not work.</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>I assume <code>f</code> is a string like</p>
<pre><code>f = "['Cats','like','dogs','as','much','cats.'][1,2,3,4,5,4,3,2,6]" 
</code></pre>
<p>then we can find the index of <code>][</code> and add one to find the point between the brackets</p>
<pre><code>i = f.index('][')
a, b = f[:i+1], f[i+1:]
print(a)
print(b)
</code></pre>
<p>output:</p>
<pre><code>['Cats','like','dogs','as','much','cats.']
[1,2,3,4,5,4,3,2,6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another Alternative if you want to still use <code>split()</code></p>
<pre><code>f = "['Cats','like','dogs','as','much','cats.'][1,2,3,4,5,4,3,2,6]"
d="]["
print f.split(d)[0]+d[0]
print d[1]+f.split(d)[1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you can make your file look something like this:</p>
<pre><code>[["Cats","like","dogs","as","much","cats."],[1,2,3,4,5,4,3,2,6]]
</code></pre>
<p>then you could simply use Python's json module to do this for you.  Note that the JSON format requires double quotes rather than single.</p>
<pre><code>import json
f = '[["Cats","like","dogs","as","much","cats."],[1,2,3,4,5,4,3,2,6]]'
a, b = json.loads(f)
print(a)
print(b)
</code></pre>
<p>Documentation for the json library can be found here: <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">https://docs.python.org/3/library/json.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative to Patrick's answer using regular expressions:</p>
<pre><code>import re

data = "f = ['Cats','like','dogs','as','much','cats.'][1,2,3,4,5,4,3,2,6]"
pattern = 'f = (?P&lt;words&gt;\[.*?\])(?P&lt;numbers&gt;\[.*?\])'

match = re.match(pattern, data)
words = match.group('words')
numbers = match.group('numbers')

print(words)
print(numbers)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>['Cats','like','dogs','as','much','cats.']
[1,2,3,4,5,4,3,2,6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand correctly, you have a text file that contains <code>['Cats','like','dogs','as','much','cats.'][1,2,3,4,5,4,3,2,6]</code> and you just need to split that string at the transition between brackets. You can do this with the <code>string.index()</code> method and string slicing. See my console output below:</p>
<pre><code>&gt;&gt;&gt; f = open('./catsdogs12.txt', 'r')
&gt;&gt;&gt; input = f.read()[:-1]  # Read file without trailing newline (\n)
&gt;&gt;&gt; input
"['Cats','like','dogs','as','much','cats.'][1,2,3,4,5,4,3,2,6]"
&gt;&gt;&gt; bracket_index = input.index('][')  # Get index of transition between brackets
&gt;&gt;&gt; bracket_index
41
&gt;&gt;&gt; words = input[:bracket_index + 1]  # Slice from beginning of string
&gt;&gt;&gt; words
"['Cats','like','dogs','as','much','cats.']"
&gt;&gt;&gt; numbers = input[bracket_index + 1:]  # Slice from middle of string
&gt;&gt;&gt; numbers
'[1,2,3,4,5,4,3,2,6]'
</code></pre>
<p>Note that this will leave you with a python string that looks visually identical to a list (array). If you needed the data represented as python native objects (i.e. so that you can actually use it like a list), you'll need to use some combination of <code>string[1:-1].split(',')</code> on both strings and <code>list.map()</code> on the numbers list to convert the numbers from strings to numbers.</p>
<p>Hope this helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>Another thing you can do is first replace <code>][</code>  with <code>]-[</code> and then do a split or partition using <code>-</code> but i will suggest you to do split as we don't want that delimiter.</p>
<p><strong>SPLIT</strong></p>
<pre><code>f = "['Cats','like','dogs','as','much','cats.'][1,2,3,4,5,4,3,2,6]" 
f = f.replace('][',']-[')
a,b = f.split('-')
</code></pre>
<p>Output</p>
<pre><code>&gt;&gt;&gt; print(a)
['Cats','like','dogs','as','much','cats.']
&gt;&gt;&gt; print(b)
[1,2,3,4,5,4,3,2,6]
</code></pre>
<p><strong>PARTITION</strong></p>
<pre><code>f = "['Cats','like','dogs','as','much','cats.'][1,2,3,4,5,4,3,2,6]"
f = f.replace('][',']-[')
a,b,c = f.partition('-')
</code></pre>
<p>Output</p>
<pre><code>&gt;&gt;&gt; print(a)
['Cats','like','dogs','as','much','cats.']
&gt;&gt;&gt; print(c)
[1,2,3,4,5,4,3,2,6]
</code></pre>
</div>
<span class="comment-copy">You shouldn't call <code>split</code> twice; it would be better to save its result in a variable.</span>
<span class="comment-copy">Thank you, very useful and well annotated for beginners to understand!</span>
