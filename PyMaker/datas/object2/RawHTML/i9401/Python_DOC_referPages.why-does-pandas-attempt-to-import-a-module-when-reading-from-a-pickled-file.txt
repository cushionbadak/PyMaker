<div class="post-text" itemprop="text">
<p>I have collected some data via the Instagram API, which I've stored into a pandas DataFrame, which in turn has been saved via pandas <code>.to_pickle()</code> method.</p>
<p>When attempting to load the DataFrame on another computer using the `read_pickle()' method, the following error is returned:</p>
<pre><code>Traceback (most recent call last):
File "examine.py", line 14, in &lt;module&gt;
dataframe = pd.read_pickle(args["dataframe"])
File "/home/user/virtualenvs/geopandas/local/lib/python2.7/site-packages/pandas/io/pickle.py", line 65, in read_pickle
return try_read(path)
File "/home/user/virtualenvs/geopandas/local/lib/python2.7/site-packages/pandas/io/pickle.py", line 62, in try_read
return pc.load(fh, encoding=encoding, compat=True)
File "/home/user/virtualenvs/geopandas/local/lib/python2.7/site-packages/pandas/compat/pickle_compat.py", line 117, in load
return up.load()
File "/usr/lib/python2.7/pickle.py", line 858, in load
dispatch[key](self)
File "/usr/lib/python2.7/pickle.py", line 1090, in load_global
klass = self.find_class(module, name)
File "/usr/lib/python2.7/pickle.py", line 1124, in find_class
__import__(module)
ImportError: No module named instagram.models
</code></pre>
<p>Any idea what causes this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Pickle simply doesn't know how to recreate the classes. The information how a class is unpickled and restored is stored inside the class: <code>__new__</code>, <code>__init__</code>, <code>__setstate__</code> and more.</p>
<blockquote>
<p><strong>Similarly, when class instances are pickled, their class’s code and data are not pickled along with them. Only the instance data are pickled.</strong> This is done on purpose, so you can fix bugs in a class or add methods to the class and still load objects that were created with an earlier version of the class. If you plan to have long-lived objects that will see many versions of a class, it may be worthwhile to put a version number in the objects so that suitable conversions can be made by the class’s <code>__setstate__()</code> method.</p>
</blockquote>
<p>Source: <a href="https://docs.python.org/3/library/pickle.html#what-can-be-pickled-and-unpickled" rel="nofollow noreferrer">Python pickle: What can be pickled and unpickled?</a></p>
<p>So to unpickle it, <code>pickle</code> needs to load the class (and thus any intermediate module).</p>
<p>If you don't have/want the <code>instagram</code>-module you should check how to convert the appropriate values in your original dataframe to normal classes (<code>int</code>, <code>float</code>, <code>array</code>, ...) before you pickle it.</p>
</div>
<span class="comment-copy">Is any of the data saved in the pickle contain objects of that type? Could you show df.head() and df.dtypes.</span>
<span class="comment-copy">Based on <code>ImportError: No module named instagram.models</code> it is likely that inside the <code>DataFrame</code> there are objects which are from the <code>instagram</code> model. You will be able to check this by inspecting the data types.</span>
