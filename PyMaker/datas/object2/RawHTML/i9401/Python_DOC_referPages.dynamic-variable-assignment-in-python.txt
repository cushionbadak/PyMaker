<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/8725673/multiple-assignment-and-evaluation-order-in-python">Multiple assignment and evaluation order in Python</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>I am testing a python script, where I have to constantly store the old values of 2 variables and then return them through a function. For this I took fibonacci series as an example:</p>
<pre><code>def fibonacci(n):
  a=0;b=1;cnt=0;
  while True:
    if (cnt &gt; n):
      return;
    yield a;
    c=b;b=a+b;a=c;
    cnt +=1;

fib=fibonacci(5)
for x in fib:
  print(x,end=" ")
</code></pre>
<p>Everything works perfectly as expected here, and the output is also as expected. I however tried to write it in a different way, where instead of using an extra variable "c", I can still do the swap of old values efficiently, and I practically bumped on this (though have no idea how the assignment is working here) :</p>
<p>Instead of the line:</p>
<pre><code>c=b;b=a+b;a=c;
</code></pre>
<p>Used:</p>
<pre><code>a,b=b,a+b
</code></pre>
<p>So a detailed explanation will be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>It is a feature of Python.</p>
<pre><code>&gt;&gt; a=1  
&gt;&gt; b=2  
&gt;&gt; a, b = b, a  
&gt;&gt; a, b   
&gt;&gt; (2, 1)
</code></pre>
<p>The right side of the assignment is an expression that creates a new tuple. The other side of the assignment immediately unpacks that (unreferenced) tuple to the names a and b.</p>
<p>After the assignment, the new tuple is unreferenced and marked for garbage collection, and the values bound to a and b have been swapped.</p>
<p>check this
<a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">tuple and sequences</a></p>
<p>Hope this helps.</p>
</div>
<span class="comment-copy">don't put commands in one line <code>c=b;b=a+b;a=c;</code> it makes code unreadable for people.</span>
<span class="comment-copy">This is possible because python supports <a href="https://www.safaribooksonline.com/library/view/python-cookbook-3rd/9781449357337/ch01s01.html" rel="nofollow noreferrer">unpacking</a></span>
<span class="comment-copy">comma <code>,</code> is used to create <code>tuple</code> - so you "pack" values into tuple <code>b,a+b</code> and later you "unpack" this tuple to variables <code>a,b</code></span>
<span class="comment-copy">IOW, <code>a, b = b, a + b</code> is the same as  <code>(a, b) = (b, a + b)</code></span>
<span class="comment-copy">The feature is also known as simultaneous assignment: <code>a</code> becomes <code>b</code> and at the same time <code>b</code> becomes <code>a+b</code>.</span>
