<div class="post-text" itemprop="text">
<p>If you run <code>pandoc</code> directly with minimal example no problem:</p>
<pre><code>$ cat workfile.md 
This is a **test** see ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png)
$ pandoc workfile.md 
&lt;p&gt;This is a &lt;strong&gt;test&lt;/strong&gt; see &lt;img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" /&gt;&lt;/p&gt;
</code></pre>
<p>But if you call it via <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer">subprocess.run</a>, then it fails. This minimal example:</p>
<pre><code>import subprocess, os

path = 'workfile.md'
contents = "This is a **test** see ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png)"

with open(path, 'w') as f:

    f.write(contents)
    pbody = subprocess.run(["pandoc", "{}".format(path)], check=True, stdout=subprocess.PIPE)
    print("**** pbody: ", pbody)
</code></pre>
<p>gives us </p>
<pre><code>**** pbody:  CompletedProcess(args=['pandoc', 'workfile.md'], returncode=0, stdout=b'\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One of the things that Python (and all other programming languages) do to increase performance of common operations is to maintain a buffer for things like file printing. Depending on how much you write to a file, not all of it will get written immediately, which lets the language reduce the amount of (slow) operations it has to do to actually get things on the disk. If you call <code>f.flush()</code> after <code>f.write(contents)</code>, you should see <code>pandoc</code> pick up the actual contents of the file.</p>
<p>There's a further layer of buffering that's also worth noting- your operating system may have an updated version of the file in memory, but may not have actually written it to disk. If you're writing a server, you may also want to call <code>os.fsync</code>, which will force the OS to write it to disk.</p>
</div>
<span class="comment-copy"><code>subprocess.run</code> is doing exactly what it's documented to do.  <code>subprocess.check_output</code> seems to be a closer match for what you want to do.</span>
<span class="comment-copy">I cannot see in <a href="https://docs.python.org/3.6/tutorial/inputoutput.html" rel="nofollow noreferrer">documentation</a>. Perhaps Python developers could include in docs</span>
<span class="comment-copy">That's a great point. There's a <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">mention</a> in the docs for <code>open()</code>, and some extra details in the <a href="https://docs.python.org/3.6/library/io.html" rel="nofollow noreferrer">io</a> docs. If it makes you feel better, this behavior is the same in C, C++, ruby, and basically every other programming language. So the knowledge is pretty portable.</span>
