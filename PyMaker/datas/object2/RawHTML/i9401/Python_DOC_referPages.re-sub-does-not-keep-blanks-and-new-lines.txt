<div class="post-text" itemprop="text">
<p>I have an xml file with the following line :</p>
<pre><code>           &lt;CREATION_DATE&gt;2009-12-20T10:47:07.000Z&lt;/CREATION_DATE&gt; 
</code></pre>
<p>That I would like to replace with the following :</p>
<pre><code>           &lt;CREATION_DATE&gt;XXX&lt;/CREATION_DATE&gt; 
</code></pre>
<p>Thought it would be pretty straightforward using the <code>re</code> module in the python script I'm supposed to modify. I did something of the sort:</p>
<pre><code>if '&lt;/CREATION_DATE&gt;' in ligne:
    out_lines[i] = re.sub(r'(^.*&lt;CREATION_DATE&gt;).*(&lt;/CREATION_DATE&gt;.*$)', r'\1XXX\2', ligne)
</code></pre>
<p>The field with the date is correctly replaced, but the trailing new line and indentation are lost in the process. I tried converting <code>ligne</code> and the result of the <code>sub</code> function to a raw string with <code>.encode('string-escape')</code>, with no success. I am a noob in python, but I am a bit accustomed to regex's, and I really cannot see what it is I am doing wrong.</p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative, a simpler and a more reliable way to replace the text of an XML element would be to use an <em>XML parser</em>. There is even <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow noreferrer">one in the Python Standard Library</a>:</p>
<pre><code>&gt;&gt;&gt; import xml.etree.ElementTree as ET
&gt;&gt;&gt; 
&gt;&gt;&gt; s = '&lt;ROOT&gt;&lt;CREATION_DATE&gt;2009-12-20T10:47:07.000Z&lt;/CREATION_DATE&gt;&lt;/ROOT&gt;'
&gt;&gt;&gt; root = ET.fromstring(s)
&gt;&gt;&gt; root.find("CREATION_DATE").text = 'XXX'
&gt;&gt;&gt; ET.tostring(root)
'&lt;ROOT&gt;&lt;CREATION_DATE&gt;XXX&lt;/CREATION_DATE&gt;&lt;/ROOT&gt;'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As stated in comments, the variable <code>ligne</code> was stripped of blanks and new lines with <code>ligne = ligne.strip()</code> elsewhere in the code... I am not deleting my question though because alecxe's answer on the xml module is very informative.</p>
</div>
<span class="comment-copy">Can't reproduce. Are you sure something else didn't filter out the indent and trailing newline?</span>
<span class="comment-copy">I am currently testing in an interpretter and it works as I intend it to, I think something is wrong upstream in the treatment of variable <code>ligne</code>...</span>
<span class="comment-copy">cannot reproduce either. I've <a href="https://gist.github.com/philippkeller/b6603df2bcb144f5097955d0f3fa24f2" rel="nofollow noreferrer">got your script running</a> and it made what you wanted in python 2.7</span>
