<div class="post-text" itemprop="text">
<p><strong>I'm writing a code that looks in a text file, and sees if the input is in there.</strong></p>
<p>e.g.</p>
<p><strong>I input "pizza"</strong></p>
<p><strong>My textfile contains:</strong></p>
<pre><code>bread
pizza
pasta
tomato
</code></pre>
<p><strong>I want to find a way to print the the line number the word pizza is on. Any help?</strong> </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('test.txt') as f:
    content = f.readlines()

index = [x for x in range(len(content)) if 'pizza' in content[x].lower()]
</code></pre>
<p>Part (1) of the code reads each line as a separate list in variable "content".</p>
<p>Part (2) populates out the line # of content only if 'pizza' exists in that line. [x for x in range(len(content))] simply populates all index values, while 'if 'pizza' in content[x].lower()' keeps the line # that matches the string.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two ways of accomplishing this:</p>
<ol>
<li>Storing the entire file in memory so you only read it once</li>
<li>Reading through the file on every search, but not having to store it</li>
</ol>
<p>For method 1, first read in every line and then get the index that the word is on:</p>
<pre><code>with open('path.txt') as f: data = f.readlines()
line_no = data.index("pizza")
</code></pre>
<p>Alternatively, go through the file to find the index:</p>
<pre><code>with open('path.txt') as f:
    for line_no, line in enumerate(f):
        if line == "pizza":
            break
    else: # for loop ended =&gt; line not found
        line_no = -1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something like this ?</p>
<pre><code>import re
import os # You can go without is if you have other means to get your filepath

i = 1
matches = []
target = raw_input("Please type string to match\n")
with open(os.getenv("SOME_PATH") + "/myfile.txt") as fic: # open("myfile.txt") if in your current directory
     for line in fic:
         if re.search(target, line):
             print "Found at line {}".format(i)
             matches.append(i)
         i = i +1
if not len(matches):
    raise Exception, "target not found"
</code></pre>
<p>By doing this, you can input a regular expression and it should work (i.e. if you input "p.zza" or "^p.*", it will work.). The list <code>matches</code> will contain all indices of lines that match the input pattern.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>print next (i for i,v in enumerate (open (fname),1) if v == needle)
</code></pre>
</div>
<span class="comment-copy">Start reading thru the <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">Tutorial</a> and practicing the examples, pretty soon you will start getting ideas - try some of them out in the shell to find out what works and what doesn't, look through the docs for the <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer"><i>built-in</i> functions</a> to see if any can help you solve the problem.</span>
<span class="comment-copy">Can you provide some explanation, please?</span>
<span class="comment-copy">Sorry, I have added the explanation</span>
<span class="comment-copy">What do I print then to give me the line number? What variable is the line number?</span>
<span class="comment-copy">index contains the list of line numbers. print(index)</span>
<span class="comment-copy">thanks :) really helped</span>
<span class="comment-copy">You don't want to close the file afterward?</span>
