<div class="post-text" itemprop="text">
<p>So I created a unicode character privately using <strong>Private Character Editor</strong> on Windows 10. The character was saved with the code <code>E000</code>. I copied it from the <strong>Character Map</strong> and pasted into a text editor and it worked. However, when I paste it into the Python IDLE editor it changes to a different unicode character, even before running the program. I can't use <code>u'unicode_string'</code> or anything like that because my unicode character doesn't even work in the interpreter. I am new to programming. </p>
<p>My question is, how do I <em>use</em> my private unicode character in Python 3.4?</p>
<p><a href="https://i.stack.imgur.com/1j9iT.png" rel="nofollow noreferrer">This</a> is what I see on Notepad.</p>
<p><a href="https://i.stack.imgur.com/6iAtp.png" rel="nofollow noreferrer">This</a> is what I see on Python 3.4 interpreter.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python isn't really the interesting part of this, rather the shell or terminal is. In our case, Windows uses special code points to represent private character encodings. To get those, you need to get a hex dump of the character on a shell in Windows, then you can render the character in Python.</p>
<p><strong>NOTE:</strong> Use Unicode points <code>E021</code> or <strong>higher</strong>, since lower number code points are usually used for control, and it seems that the Windows shell that the python interpreter and IDLE use doesn't let you override those with private characters.</p>
<h1>Demonstration</h1>
<p>I tested your issue by generating a private character of my own. I will put an image of my test here since it wouldn't be rendered properly in text here on Stack Overflow.</p>
<p><a href="https://i.stack.imgur.com/f7DZt.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/f7DZt.png"/></a></p>
<h1>Explanation</h1>
<p>I used the <code>Character Map</code> program in Windows 10 to copy the symbol and paste it into my python environment. The environment may truncate it on the right since it is a wide character and the environment didn't seem to like that. (I moved the cursor around to get it to render full-width.)</p>
<p>Then I proceeded to get the hexdump of the code point by encoding the character using the default utf-8 encoding, which turned out to be <code>\xee\x80\xa1</code> as a <a href="https://docs.python.org/3/library/functions.html#bytes" rel="nofollow noreferrer"><code>bytes</code></a> object.</p>
<p>Next I printed the data as a string to show you a common error, and what would be printed if you attempted to print a string of those bytes.</p>
<p>Then, I printed <code>b'\xee\x80\xa1'</code>, which is how you would actually use the symbol in your software.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>\u</code> escape sequence in your Python source code, like so:</p>
<pre><code>my_unicode_string = 'This is my character: \ue000'
print(my_unicode_stirng)
</code></pre>
</div>
<span class="comment-copy">You probably don't have the right font in the IDLE Python editor, or the character is being rendered by a different font than the one you're expecting.</span>
<span class="comment-copy">@nneonneo according to my character map i am using a font called <b>All Fonts (Private Characters)</b>. How do i change the IDLE Python editer font?</span>
<span class="comment-copy">Can you try printing your character from the command-line Python interpreter, not using IDLE?</span>
<span class="comment-copy"><i>Aside</i>: This is yet another reason why I do not use nor recommend IDLE.</span>
<span class="comment-copy">CPython's use of Windows' console was greatly improved in 3.6 to handle non-ascii chars much better.  If one wants to print general unicode chars to the console, get 3.6.  IDLE's display of chars goes through tk.  Tk is limited to the Basic Multilingual Plane (scheduled to change in 2017), but prior to 3.6, tk and hence IDLE displayed unicode much better than the Windows' console.</span>
<span class="comment-copy">My <b>private unicode character (PUC)</b> works on text editors like <code>notepad</code>, and it works on <code>cmd</code> aswell. As well as not working within the Python interpreter, it doesn't work in the Python editor either. For example, if I copy and past my PUC from the <code>cmd</code> or <code>notepad</code> into Pythons editor, a new unicode character shows up, rather than my PUC that I want to use.</span>
<span class="comment-copy">@Arbiter, I did a test, and the last line in the test is how I used the character in python. You should be able to follow the same steps to get the code point for your special character.</span>
<span class="comment-copy">that works, but you said that you copied and pasted your character from the character map in Windows 10? I tried that, but as i paste the character from the character map into the editor (so that i can assign it to char and encode it) the character looks completely different. I then tried the rest of your code and it worked but  for this new character, not the one that i originally created. Why is Python automatically replacing my PUC with a random unicode character when i paste it from the character map?</span>
<span class="comment-copy">@Arbiter I updated my answer to be more clear and I actually used IDLE since that was what you used. In Character Map ensure you click select and copy, and then pasting it into your terminal should work. Also, if you changed or added the character since you opened shell, then that particular terminal might not be able to render the character. Closing and re-opening IDLE would probably fix the issue.</span>
<span class="comment-copy">You're getting different symbols for the low ranges of PUA characters because you already have a font that defines glyphs for them for its own purposes, and fallback between different fonts varies wildly across applications. (The font appearing in the screenshot is Gabriola.) This is always going to be a problem; if you need this to be reliable, and especially if you need it to work for anyone else, Private Use characters aren't your answer.</span>
<span class="comment-copy">That works to print a unicode character, but it doesn't print the unicode character that i have created. Instead, it prints a random unicode character. I'll attach some screenshots to my question</span>
<span class="comment-copy">@Arbiter: That's a different problem which deserves a separate question. If your output console cannot display a character, you'll have to set up your output console to use the correct font. This is unrelated to this question.</span>
<span class="comment-copy">@llnspectable it isn't just that, the Python editor replaces my character with another random unicode character, before i even run the program</span>
<span class="comment-copy">See my attached images for clarification. You can see that on <code>notepad</code> my private unicode character shows up, but in Python (both the editor and output console) show a completely different unicode character. This new character appears instantaneously when i paste my PUC from <code>notepad</code> when it shouldn't, it should be exactly the same as the character i copied in the first place.</span>
