<div class="post-text" itemprop="text">
<p>I have this list of solutions from Sympy solver:</p>
<pre><code>In [49]: sol
Out[49]: 
[-1.20258344291917 - 0.e-23*I,
 -0.835217129314554 + 0.e-23*I,
 0.497800572233726 - 0.e-21*I]

In [50]: type(sol)
Out[50]: list

In [51]: type(sol[0])
Out[51]: sympy.core.add.Add
</code></pre>
<p>How can I convert this list to a numpy object with cells which are normal complex value?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can call the builtin function <a href="https://docs.python.org/3/library/functions.html#complex" rel="noreferrer"><code>complex</code></a> on each element, and then pass the result to <code>np.array()</code>.</p>
<p>For example,</p>
<pre><code>In [22]: z
Out[22]: [1 + 3.5*I, 2 + 3*I, 4 - 5*I]

In [23]: type(z)
Out[23]: list

In [24]: [type(item) for item in z]
Out[24]: [sympy.core.add.Add, sympy.core.add.Add, sympy.core.add.Add]
</code></pre>
<p>Use a list comprehension and the builtin function <code>complex</code> to create a list of python complex values:</p>
<pre><code>In [25]: [complex(item) for item in z]
Out[25]: [(1+3.5j), (2+3j), (4-5j)]
</code></pre>
<p>Use that same expression as the argument to <code>numpy.array</code> to create a complex numpy array:</p>
<pre><code>In [26]: import numpy as np

In [27]: np.array([complex(item) for item in z])
Out[27]: array([ 1.+3.5j,  2.+3.j ,  4.-5.j ])
</code></pre>
<p>Alternatively, you can use <code>numpy.fromiter</code>:</p>
<pre><code>In [29]: np.fromiter(z, dtype=complex)
Out[29]: array([ 1.+3.5j,  2.+3.j ,  4.-5.j ])
</code></pre>
</div>
