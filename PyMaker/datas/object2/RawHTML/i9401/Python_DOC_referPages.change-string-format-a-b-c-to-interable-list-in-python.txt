<div class="post-text" itemprop="text">
<p>I received a JSON with a "code" and "list". I want to iterate for all names in list. But this list is as String, and I tried use <em>split()</em> but it is not working in this case.</p>
<pre><code>jsonreceiced = request.get_json()
json_list = jsonreceiced['list']
#this returns [aaa, bbb, ccc]
#but is is still as a String
</code></pre>
<p>JSON:</p>
<pre><code>{        'code': 'CODE',
         'list': '[aaa, bbb, ccc]'
}
</code></pre>
<p>I want do something like this:</p>
<pre><code>for i in json_list:
     print i
     #Here I send SELECT to my data base
</code></pre>
<p>I create JSON in AndroidStudio like this:</p>
<pre><code>JSONObject jo = new JSONObject();        
    jo.put("code", etCode.getText().toString().trim());
    jo.put("list", userArrayList);
    #UserArrayList is my list of logins
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> with <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>split()</code></a> like this:</p>
<pre><code>&gt;&gt;&gt; s = '[aaa, bbb, ccc]'
&gt;&gt;&gt; [item.strip() for item in s[1:-1].split(',')]
['aaa', 'bbb', 'ccc']
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>strip()</code></a> is used to remove trailing spaces from each item</p>
</div>
<span class="comment-copy">Use <code>ast.literal_eval</code> <code>ast.literal_eval('[1, 2, 3]')</code> returns <code>[1, 2, 3]</code></span>
<span class="comment-copy">@PatrickHaugh: won't work for <code>aaa</code> or other sequences of letters..</span>
<span class="comment-copy">It may well be that you have obfuscated the data a bit too much. Are you saying you always have lists of letter sequences? That's not very useful, and doesn't give us much to work with. Could you give us a more realistic sample? It doesn't have to be real, just <i>representative</i>.</span>
<span class="comment-copy">Maybe unrelated but how is this JSON created (and why is it not providing an array of strings but converting it to a single string)?</span>
<span class="comment-copy">@PatrickHaugh it returns ValueError: malformed string</span>
<span class="comment-copy">Big thanks, it works!</span>
