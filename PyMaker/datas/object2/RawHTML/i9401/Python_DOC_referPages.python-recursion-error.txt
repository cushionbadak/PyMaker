<div class="post-text" itemprop="text">
<p>Can someone explain to me why this doesn't work?</p>
<p>I am trying to create a change machine using recursion. The first parameter is the amount of change that we need to give back, and the second parameter is an array of the number of bills with the first element representing $25, the second representing $50 and the last 
representing $100.</p>
<p>When I call <code>checkchange(125,[0,1,1])</code> it now does not return "T" or "F"
instead it just prints out <code>
lets go
Bills: 011 Money: 125
ok the money is greater than 100
lets go
Bills: 010 Money: 25
this is the money 25</code></p>
<p>Here is the code:</p>
<pre><code>def checkchange(money,bills):
     tot = bills[0] * 25 + bills[1] * 50 + bills[2] * 100
     print("lets go")    
     string = "".join(str(e) for e in bills)
     print("Bills: %s Money %d" % (string,money))
     if tot &lt; money:
         return "F"



     elif money == 25 and bills[0] == 0:
         return "F"


     elif money &gt;= 100 and bills[2] &gt; 0:
         print("ok the money is greater than 100")
         money -= 100
         bills[2] -= 1
         checkchange(money,bills)
         print("this is the money %d" % money)
     elif money &gt;= 50 and bills[1] &gt; 0:
         print("ok the money is greater than 50")
         money -= 50
         bills[1] -= 1
         checkchange(money,bills)
     elif money &gt;= 25 and bills[0] &gt; 0:
         print("money is greater than 25")
         money -= 25
         bills[0] -=1 
         checkchange(money,bills)
     else: 
         return "T"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The ampersand <code>&amp;</code> in Python is the <a href="https://en.wikipedia.org/wiki/Bitwise_operation#AND" rel="nofollow noreferrer"><code>bitwise AND</code></a> operator.  It's not the same as the boolean <code>and</code> operator. When you have a statement like</p>
<pre><code>if money == 25 &amp; bills[0] == 0:
</code></pre>
<p>That's actually being read as <code>money == (25 &amp; bills[0]) == 0</code>, because <code>&amp;</code> binds more tightly than <code>==</code>.  <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">Here's a useful chart</a> on operator precedence</p>
</div>
<div class="post-text" itemprop="text">
<p>I assume the condition is wrong <code>tot &gt; money</code> should be <code>!=</code>.</p>
<pre><code> def checkchange(money,bills):
      tot = bills[0] * 25 + bills[1] * 50 + bills[2] * 100
      print("lets go")    
      if tot != money:
          return "F"

      if money == 25 and bills[0] == 0:
          return "F"


      if money &gt;= 100 and bills[2] &gt; 0:
          print("ok the money is greater than 100")
          money -= 100
          bills[2] -= 1
          checkchange(money,bills)
          print("this is the money %d" % money)
      if money &gt;= 50 and bills[1] &gt; 0:
          print("ok the money is greater than 50")
          money -= 50
          bills[1] -= 1
          checkchange(money,bills)
      if money &gt;= 25 and bills[0] &gt; 0:
          print("money is greater than 25")
          money -= 25
          bills[0] -=1 
          checkchange(money,bills)

      return "T"

 print checkchange(125,[1,0,1])
 print checkchange(125,[0,1,1])
</code></pre>
<p>Outcome:</p>
<pre><code> lets go
 ok the money is greater than 100
 lets go
 money is greater than 25
 lets go
 this is the money 25
 T
 lets go
 F
</code></pre>
</div>
<span class="comment-copy">Use <code>and</code>, not <code>&amp;</code></span>
<span class="comment-copy">Please add input data and the expected outcome or provide a error message if any.</span>
<span class="comment-copy">@ppasler just added the expected outcome</span>
<span class="comment-copy">Why do you use "T" and "F" instead of the built-in booleans? What is the boolean output of the function supposed to represent?</span>
<span class="comment-copy">I just wanted to return a string, this function is part of another function that accepts a string</span>
<span class="comment-copy">OK thanks for an explanation and the information on the operator precedence , I'll see if it works!</span>
<span class="comment-copy">Can you include the output of those two prints at the bottom please?</span>
<span class="comment-copy">See the edited post</span>
<span class="comment-copy">I did, I gave it an upvote.</span>
<span class="comment-copy">If this is it, you can accept the answer and close the question.</span>
<span class="comment-copy">Thanks but this is not exactly what I am going for in the program. The total amount of money can be unequal to the money needed to give out, it is like the total cash in the cash register, the <i>money</i> variable is the money that is needed to be given out.</span>
