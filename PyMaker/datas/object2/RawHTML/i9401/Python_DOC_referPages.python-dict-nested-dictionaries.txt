<div class="post-text" itemprop="text">
<p>I want to update keys from a json file (which is then converted to python dictionary). I would like to have a nested dictionary within my updated files but I don't know how to do this.</p>
<pre><code>        f = dict(
        source=result['sourcefile'],
        destination=result['destinationfile']
                )
</code></pre>
<p>In this code I have <code>result</code> which is my json output. I have the keys <code>sourcefile</code> and <code>destinationfile</code> are the keys I get from the api. I would to change them to <code>source</code> and <code>destination</code>. This code does the job until here; however I would like my dictionary to be nested (whether with a list or another dic).
Something like below:</p>
<pre><code>{"F":{"source":"samplevalue","destination":"samplevalue"}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is sample code that incorporates the code you showed and produces the JSON you show.  It simply makes the object as described and encodes it as JSON.</p>
<pre><code>import json

result = {'sourcefile': "samplevalue", 'destinationfile':"samplevalue"}

f = dict(
                 source=result['sourcefile'],
                         destination=result['destinationfile']
                                         )
g = {"F": f}

print( json.dumps(g) )
</code></pre>
</div>
<span class="comment-copy">Your first code snippet is syntactically incorrect in Python. Please fix it.</span>
<span class="comment-copy">@DYZ code is fine.</span>
<span class="comment-copy">@DYZ sorry, edited</span>
<span class="comment-copy">@YevhenKuzmovych there was a comma left at the end of the final key</span>
<span class="comment-copy">@adelrahimi that is not a problem in python.</span>
<span class="comment-copy">this is not efficient, what if the output was more complex?</span>
<span class="comment-copy">What efficiency are you concerned about?  Your question says that the output is like this, not more complex.  If it addresses your undisclosed concern, the json module has a function <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow noreferrer"><code>json.dump()</code></a> that writes to a stream.  If that isn't what you seek, then I recommend asking a new question.</span>
