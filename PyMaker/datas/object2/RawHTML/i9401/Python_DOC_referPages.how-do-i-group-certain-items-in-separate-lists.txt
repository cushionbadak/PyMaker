<div class="post-text" itemprop="text">
<p>I have a Python code that generates a genotype for an offspring, based on two genotypes from the biological parents that you input. 
Here's the code that works as it should: <a href="http://freetexthost.com/tutjzff4ai" rel="nofollow noreferrer">http://freetexthost.com/tutjzff4ai</a></p>
<p>You input two genotypes (e.g. "EE aa" and "ee AA" and it outputs "Ee Aa". You can also input additional genes, that isn't relevant however because that part works as it should. </p>
<p>It currently has two required gene types (extension and agouti). </p>
<p>I need it to have a third type. I need to have a third type that is "cream". The reason I need this is because currently the "Cr" and "prl" (which are currently in the order list) requires to be input separately (nCr nprl) when they should actually be input as Crprl. The Cr and prl gene sit on the same locus so when the parent has both Cr and prl (Crprl) it needs to always pass one of them. If you input them separately as nCr nprl, there's a chance the offspring receives neither, or both, because the code reads them as two different loci.</p>
<p>the list should look like this</p>
<p>cream = ["Cr","prl"]</p>
<p>possible inputs should be nCr, CrCr, nprl, prlprl, and Crprl</p>
<p>This is what I have so far and it does not work. 
<a href="http://freetexthost.com/6160o0mk3e" rel="nofollow noreferrer">http://freetexthost.com/6160o0mk3e</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I recommend look at <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer">itertools</a> module.
It's really the thing you need. Use it like this:</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; cream = ["Cr","prl"]

&gt;&gt;&gt; list(itertools.combinations(cream+["n"], 2))
[('Cr', 'prl'), ('Cr', 'n'), ('prl', 'n')]

&gt;&gt;&gt; list(itertools.combinations_with_replacement(cream+["n"], 2))
[('Cr', 'Cr'), ('Cr', 'prl'), ('Cr', 'n'), ('prl', 'prl'), ('prl', 'n'), ('n', 'n')]
</code></pre>
<p>There's a very good method set for different combinatorial operations. 
How to iterate combinations and easily check conditions:</p>
<pre><code>&gt;&gt;&gt; for pair in itertools.combinations_with_replacement(cream+["n"], 2):
        print(pair)
        if ('Cr' in pair) or ('prl' in pair):
           print('Parent has on of them, so we have to ...')
        if ('Cr' in pair) and ('prl' in pair):
            print('Parent has both of them')
</code></pre>
<p>How to make a list of merged values and ignore impossible one ('nn')? This so-called '<em>list comprehension</em>' iterates over all combinations, checks any particular combination is valid (<code>x != ('n', 'n')</code>). Then valid combinations are joined as strings with <code>''.join(x)</code> and a list of such strings is returned.</p>
<pre><code> &gt;&gt;&gt; [''.join(x) 
        for x in itertools.combinations_with_replacement(cream+["n"], 2) 
        if x != ('n', 'n')
     ]
['CrCr', 'Crprl', 'Crn', 'prlprl', 'prln']
</code></pre>
<p>Definetely worth looking at <a href="https://docs.python.org/3.6/library/itertools.html#itertools-recipes" rel="nofollow noreferrer">Itertools Recipes</a>.</p>
</div>
<span class="comment-copy">Put a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> <i>in the question itself</i>, and note that chatty content like your last line is discouraged. See <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a>.</span>
<span class="comment-copy">Hi, thank you for your answer! Could you clarify on how I'd best implement this in my code?</span>
<span class="comment-copy">With the recipe you can easily combine genes. I've updated it. You may iterate different combinations and check conditions which genes should be added or not. At a moment I cannot understand you program, because of indentation lack.  Could you place it here (or at <a href="https://gist.github.com" rel="nofollow noreferrer">gist.github.com</a>) with formatting and comment what should it be?</span>
<span class="comment-copy">Sorry about that! Here: <a href="https://gist.github.com/anonymous/cd811826883ce4cf9680ce482f82f4f8" rel="nofollow noreferrer">gist.github.com/anonymous/cd811826883ce4cf9680ce482f82f4f8</a></span>
