<div class="post-text" itemprop="text">
<p>I'm currently trying to make an executable using py2exe. I use Python 3.6. The script I'm using imports openpyxl and pptx and runs fine when I use Pycharm or run the script using the command window. The output produces the error: </p>
<blockquote>
<p>IndexError: tuple index out of range</p>
</blockquote>
<p>Below you can find the cmd output:</p>
<pre><code>C:\Python36&gt;python setup.py py2exe
running py2exe
Traceback (most recent call last):
  File "setup.py", line 4, in &lt;module&gt;
    setup(console=['Storybookmaker.py'])
  File "C:\Python36\lib\distutils\core.py", line 148, in setup
    dist.run_commands()
  File "C:\Python36\lib\distutils\dist.py", line 955, in run_commands
    self.run_command(cmd)
  File "C:\Python36\lib\distutils\dist.py", line 974, in run_command
    cmd_obj.run()
  File "C:\Python36\lib\site-packages\py2exe\distutils_buildexe.py", line 188, in run
    self._run()
  File "C:\Python36\lib\site-packages\py2exe\distutils_buildexe.py", line 267, in _run
    builder.analyze()
  File "C:\Python36\lib\site-packages\py2exe\runtime.py", line 160, in analyze
    self.mf.import_hook(modname)
  File "C:\Python36\lib\site-packages\py2exe\mf3.py", line 120, in import_hook
    module = self._gcd_import(name)
  File "C:\Python36\lib\site-packages\py2exe\mf3.py", line 274, in _gcd_import
    return self._find_and_load(name)
  File "C:\Python36\lib\site-packages\py2exe\mf3.py", line 357, in _find_and_load
    self._scan_code(module.__code__, module)
  File "C:\Python36\lib\site-packages\py2exe\mf3.py", line 388, in _scan_code
    for what, args in self._scan_opcodes(code):
  File "C:\Python36\lib\site-packages\py2exe\mf3.py", line 417, in _scan_opcodes
    yield "store", (names[oparg],)
IndexError: tuple index out of range

C:\Python36&gt;
</code></pre>
<p>What causes the IndexError? </p>
<p>Edit: here is the <code>setup.py</code> file</p>
<pre><code>from distutils.core import setup
import py2exe

setup(console=['Storybookmaker.py'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python 3.6 <a href="https://docs.python.org/3/whatsnew/3.6.html#cpython-bytecode-changes" rel="noreferrer">completely redesigned the bytecode for CPython</a> (it's not a "byte" code at all anymore, it's a wordcode, where all opcodes are two bytes wide instead of 1-3).</p>
<p>The failure you're seeing occurs in <code>py2exe</code> opcode parsing code, which, given the most recent posted version of <code>py2exe</code> only claims support for 3.3 and 3.4, could not possibly have knowledge of, or support for, the new wordcode opcodes; they hadn't even been conceived of at the time <code>py2exe</code> was last updated. The bytecode often changes in small ways from version to version that could break even Python 3.5 (given only 3.3 and 3.4 support is claimed explicitly), but 3.6 is 100% guaranteed to fail.</p>
</div>
<div class="post-text" itemprop="text">
<p>I had same problem, as workaround I used cx_freeze.
My app is based on wxPython, windows 10, python 3.6, cx_freeze 5.5.1</p>
<p>This is the setup file that I used and I got msi file on dist folder.</p>
<pre><code>#setup.py
import sys, os
from cx_Freeze import setup, Executable

__version__ = "1.1.0"

include_files = ['logging.ini', 'config.ini', 'running.png']
excludes = ["tkinter"]
packages = ["os", "idna", "requests","json","base64","pyodbc"]

setup(
    name = "appname",
    description='App Description',
    version=__version__,
    options = {"build_exe": {
    'packages': packages,
    'include_files': include_files,
    'excludes': excludes,
    'include_msvcr': True,
}},
executables = [Executable("b2b_conn.py",base="Win32GUI")]
)`
</code></pre>
<p>then <code>python setup.py bdist_msi</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Dennis, a few hours later than you, i test the same thing without luck, i have installed Python 3.6 and by the moment, it doesn't work.</p>
<p>I try a walkaround, i've installed Python 3.4.3, and try this:</p>
<pre><code>C:\socket&gt; c:\Python34\python.exe setup.py py2exe
</code></pre>
<p>1) enter in your script folder
2) deactivate any antivirus that you have (weird thing, know by another SO question xD)</p>
<p>2) call the python 3.4.3 interpreter by his absolute path, in my case, i've installed in:</p>
<pre><code>C:\Python34
</code></pre>
<p>3) execute the command</p>
<pre><code>c:\Python34\python.exe setup.py py2exe
</code></pre>
<p>hope that help like me</p>
</div>
<span class="comment-copy">can you show us your <code>setup.py</code> file? because the problem is there and not in <code>py2exe</code> which works fine.</span>
<span class="comment-copy">Hi Jean-Francois, I've added the file in the original post. Thanks in advance!</span>
<span class="comment-copy">is the <code>Storybookmaker.py</code> file in the same directory as <code>setup.py</code> ? you could try <code>setup(console=[os.path.join(os.path.dirname(__file__,'Storybookmaker.py')])</code> to be sure to locate the file.</span>
<span class="comment-copy">@Jean-FrancoisFabre  Both setup.py and Storybookmaker.py in the C:\Python36 folder, so that should not matter but I tried it anyway with your code. It get the same IndexError. Any other thoughts?</span>
<span class="comment-copy">So isn't there any alternatives?</span>
<span class="comment-copy">@AlexJolig: There are, though I haven't checked if they're all Python 3.6 compatible. I'm aware of PyInstaller and cx_Freeze; there may be others.</span>
<span class="comment-copy">I've tested <code>cx_freeze</code>. It's compatible with python3.6 but it can't create a single exe file. The problem with <code>Pyinstaller</code> is you can't create x86 exe file via a x64 os</span>
<span class="comment-copy">Like you, I used cx_freeze to create an executable because this was compatible with my python version and easier to use. Thank you for sharing your setup file so that people can use this as an example.</span>
<span class="comment-copy">If I have <code>from PyQt5 import QtGui</code> how do I enter it in <code>packages</code>? Only <code>PyQt5</code> or only <code>QtGui</code> or both?</span>
<span class="comment-copy">Hrvoje T, I've included the whole <code>PyQt5</code>.</span>
<span class="comment-copy">I tried to do the same thing with Python 3.5 but got stuck at installing py2exe because pip needs a newer version, I get an error. <code>You are using pip version 8.1.1, however version 9.0.1 is available. You should consider upgrading via the 'python -m pip install --upgrade pip' command.</code> When I try to upgrade pip, I get the same error!</span>
<span class="comment-copy">As i see, you have 2 choices:  <code>1) Try with Python 3.4.3, this one i have already tested.</code> <code>2) Identify which python you have, when you type at console 'python', what version says?</code>may be you have 2 python and need to specify which one you want update.</span>
<span class="comment-copy">by the way, @Dennis</span>
<span class="comment-copy">Martinez the version now says 3.5 instead of 3.6. I specified the path to 3.5 and the pip 8.1.1 is only installed for 3.5, because 3.6 already has 9.0.1. I will your try you advice with multiple versions.</span>
<span class="comment-copy">Sorry for the delay, enter in your Python Folder and run 'python -m pip install --upgrade pip', and update your Python 3.5 Pip</span>
