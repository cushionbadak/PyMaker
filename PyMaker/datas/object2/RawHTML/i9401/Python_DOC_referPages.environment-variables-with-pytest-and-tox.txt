<div class="post-text" itemprop="text">
<p>How can I test environment variables using pytest and tox?</p>
<h1>validate.py</h1>
<pre><code>ENV_VAR = os.environ['ENV_VAR']

def validate_env_var(value):
    if value != ENV_VAR:
        raise Exception
</code></pre>
<h1>test_validate.py</h1>
<pre><code>class TestValidateEnvVar:
    def test_validate_env_var_pass(self):
        value = 'valid_env_value'
        os.environ["ENV_VAR"] = value
        validate.validate_env_var(value)
</code></pre>
<p>If I set the environment variables in the <code>tox.ini</code> file:</p>
<pre><code>[testenv]
setenv = ENV_VAR=valid_env_value
</code></pre>
<p>The test passes, but I would like to keep the test isolated. </p>
</div>
<div class="post-text" itemprop="text">
<p>The environment variables should be provided by your test, not by your test runner. One option is to use <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">mock</a> and <a href="https://stackoverflow.com/questions/31582750/python-mock-patch-os-environ-and-return-value/31583528">patch <code>os.environ</code></a>. Alternatively you can just provide the environment variables in your test case's <code>setUp()</code> and reset them in <code>tearDown()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I had a problem with the <code>ENV_VAR</code> variable getting set before the test would run.
The <code>validate</code> module had to be reloaded within the test to work properly using <code>imp.reload</code></p>
<h1>test_validate.py</h1>
<pre><code>import mock
from imp import reload
class TestValidateEnvVar:
    @mock.patch.dict(os.environ, {"ENV_VAR": "env_value"})
    def test_validate_env_var_pass(self):
        reload(validate)
        value = 'env_value'
        os.environ["ENV_VAR"] = value
        validate.validate_env_var(value)
</code></pre>
</div>
<span class="comment-copy">you mean you'd like to cleanup the env. variables after the test right?</span>
<span class="comment-copy">for this case, I'm trying to get the test to pass without setting the environment variable using the tox.ini file.</span>
