<div class="post-text" itemprop="text">
<p>Rails run on Cloud9 without any problem.
What I want to do is as follows:</p>
<ol>
<li>run Rails on Heroku</li>
<li>run python program by rake task in Rails (especially python for access AWS s3 by boto to get some.)</li>
</ol>
<p>current condition is as follows:</p>
<ol>
<li>Case 1: deployed rails to heroku without any changing.
The deploy could be success and there is no problem to run rails app via Web browser. but rails server shows error log (by heroku log --tail )</li>
</ol>
<p><em>an error shows "No module named boto"</em></p>
<ol start="2">
<li><p>Case 2: deployed rails to heroku file named requirements.txt on root.
Heroku didn't detect it as Ruby Rails app so that rails server didn't run.
rails server shows error log (by heroku log --tail ) as 
heroku[router]: at=error code=H14 desc="No web processes running"</p></li>
<li><p>Case 3: deployed rails first as same as case 1. Then, add Python on Buildpacks on Heroku setting, then add requirements.txt, finally deploy again. then it's deployed. but rails server shows error log (by heroku log --tail ) as same as Case3.</p></li>
</ol>
<p>if I could run command like pip, it will be easy, but it's impossible.
is there any idea to solve the above?</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of trying to install your custom boto on Heroku, just place your custom boto folder in your project's directory (at the same level as your project's apps). Thereafter, you can import the boto folder using the import statement. You can read about importing a module <a href="https://stackoverflow.com/questions/279237/import-a-module-from-a-relative-path">here</a></p>
<p>Although, the ideal way to do it is to use the Rails SDK for AWS instead of using the Python SDK for AWS and then trying to use it with Rails. All the functionality available with Boto is available with the SDK for Ruby as well.</p>
<p>Check
<a href="http://docs.aws.amazon.com/sdk-for-ruby/v2/developer-guide/" rel="nofollow noreferrer">http://docs.aws.amazon.com/sdk-for-ruby/v2/developer-guide/</a></p>
</div>
<span class="comment-copy">Deploy a rails app and call the Python script using exec like exec("python script.py params")</span>
<span class="comment-copy">Even using your idea, it's same. In case of your idea, it's impossible to use boto because there is no module.</span>
<span class="comment-copy">use the <b>import</b> function to get the module in the script <a href="https://docs.python.org/3/library/functions.html#__import__" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#__import__</a></span>
<span class="comment-copy">sorry, please add comment with understanding.</span>
<span class="comment-copy">I don't intend to install my custom boto on Heroku. I just want to use normal Boto.  You just can try deploying any rails app in to Heroku with requirements.txt to install module. Install will be succeeded, but rails app doesn't run.</span>
<span class="comment-copy">What I meant was that instead of installing boto, download it and make it a part of your repo</span>
