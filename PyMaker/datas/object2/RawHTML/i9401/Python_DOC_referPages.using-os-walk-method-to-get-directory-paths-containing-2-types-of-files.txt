<div class="post-text" itemprop="text">
<p>I want to list all folders containing <code>docx</code> files using <code>os()</code>.walk method in Python 2.7. I managed to do that with code written below, but I want to know if it is possible to limit this list to show only folders containing exactly two specific file types (for example "docx" and "pdf")?</p>
<pre><code>import os
import walk

a = open("output.txt", "w")
for path, subdirs, files in os.walk(r'C:\Users\Stephen\Desktop'):
    for filename in files:
        if filename.endswith(('.docx')):
            f = os.path.join(path, filename)
            a.write(str(f) + os.linesep) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just skip directories where you don't have at least those two extensions; per-directory file lists are limited so it's cheap to use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a> to test for specific extensions:</p>
<pre><code>for path, subdirs, files in os.walk(r'C:\Users\Stephen\Desktop'):
    if not (any(f.endswith('.pdf') for f in files) and 
            any(f.endswith('.docx') for f in files)):
        # no PDF or Word files here, skip
        continue
    # directory contains *both* PDF and Word documets
</code></pre>
<p>When the list of extensions to test for gets a bit longer, you may want to just create a set of all available extensions:</p>
<pre><code>for path, subdirs, files in os.walk(r'C:\Users\Stephen\Desktop'):
    extensions = {os.path.splitext(f)[-1] for f in files}
    if not extensions &gt;= {'.pdf', '.docx', '.odt', '.wpf'}:
        # directory doesn't contain *all* required file types 
        continue
</code></pre>
<p><code>&gt;=</code> tests if the right-hand set is a subset of the left (so <code>extensions</code> is a <a href="https://docs.python.org/3/library/stdtypes.html#set.issuperset" rel="nofollow noreferrer">superset of the right-hand set</a>); so <code>extensions</code> should <em>at least</em> contain all for extensions named on the right:</p>
<pre><code>&gt;&gt;&gt; {'.foo', '.docx', '.pdf', '.odt'} &gt;= {'.pdf', '.docx', '.odt', '.wpf'}  # missing .wpf
False
&gt;&gt;&gt; {'.foo', '.wpf', '.docx', '.pdf', '.odt'} &gt;= {'.pdf', '.docx', '.odt', '.wpf'} # complete
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This?</p>
<pre><code>import os

a = open("output.txt", "w")
for path, subdirs, files in os.walk(r'C:\Users\Stephen\Desktop'):
    docx = False
    pdf = False
    rest = True
    for filename in files:
        if filename.endswith(('.docx')):
            docx = True
        elif filename.endswith(('.pdf')):
            pdf = True
        else:
            rest = False
            break
    if docx and pdf and rest:
        f = os.path.join(path, filename)
        a.write(str(f) + os.linesep)
</code></pre>
</div>
<span class="comment-copy">Thanks! Second example worked like a charm.</span>
<span class="comment-copy">can I add condition that docx and pdf files must start with a digit using isdigit method?</span>
<span class="comment-copy">@stjepan: sure you can. <code>f[0].isdigit()</code> would test if there is a first character is a digit. You may need to rework all your tests to cover multiple aspects.</span>
<span class="comment-copy">Thanks, this worked too. I had to remove ", filename" from f = os.path.join(path, filename) to get only path.</span>
