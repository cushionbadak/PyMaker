<div class="post-text" itemprop="text">
<p>I'm making this classic style asteroids game and I've beaten all the challenges that come with it. Right now there's a new one.</p>
<p>When a bullet hits one of the asteroids, the expected behavior is that it disappear, then three or four smaller asteroids appear in its place, each with random velocity so it looks like a kind of explosion. But instead this weird behavior show in this video I just recorded:</p>
<p><a href="https://youtu.be/2ZJvOcB-ZKM" rel="nofollow noreferrer">https://youtu.be/2ZJvOcB-ZKM</a></p>
<p>As you can see it does 90% of what it's supposed to do, the asteroid dissapear, then I create four new and smaller asteroids in its pace but then, for some reason they dissapear when they should behave like normal asteroids, since they inherit everything.</p>
<p>The game source code can be found here: <a href="https://github.com/JuanBonnett/pysteroids" rel="nofollow noreferrer">https://github.com/JuanBonnett/pysteroids</a></p>
<p>The classes in charge of handling the collision Bullet-&gt;Asteroid are:</p>
<p><code>asteroids.py</code> Main file creates all the objects, the ship, the asteroids generator and the collision detector object.</p>
<p><code>physics.py</code> Where the CollisionDetector class is and which detects when they collide and call its dependencies to do stuff with the collision</p>
<p><code>asteroid.py</code> has an asteroid generator that generates smaller asteroids in the place of the collision, which I call debris.</p>
</div>
<div class="post-text" itemprop="text">
<p>When an asteroid blows up, you are passing it a <code>pos</code> vector of where to start.</p>
<p>You are applying that <em>same</em> vector instance to all resulting asteroids.</p>
<p>All smaller asteroids have the same <code>self.pos</code> value as their siblings that came from the same parent asteroid.</p>
<p>It looks weird because the <code>self.points</code> property is working just fine and updated/translated correctly and so you're seeing two positions fight each other and give chaotic/unpredictable behavior. </p>
<p>Basically the problem is the <code>pos = _pos</code> line in <code>AsteroidGenerator.generate</code>. It should be making a copy of the vector instead of assigning the reference directly to the new asteroid.</p>
<p>I discovered this by putting print statements in your asteroid render code printing the position: <code>print(self.pos.x, self.pos.y)</code>. I noticed all asteroids had the same <code>self.pos</code> but were being given supposedly random velocity vectors, so I figured it was probably an object reference problem and followed where that was being assigned. </p>
</div>
<span class="comment-copy">Consider adding some logging to your code that records when and why each asteroid despawns.</span>
<span class="comment-copy">@Amber what do you mean? Any example of how can I do it?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/logging.html" rel="nofollow noreferrer">docs.python.org/3/library/logging.html</a></span>
<span class="comment-copy">use <code>print()</code> (or logging as @Amber said) to see what values you have in variables and which part of code is executed. It helps to find problem.</span>
<span class="comment-copy">Umm, haven't understood 100%. You managed to change something in the code to make it work? Have made some changes based on what you said but haven't seen progress. It's weird.</span>
<span class="comment-copy">I sent a Pull Request via your github repository</span>
<span class="comment-copy">That's what I supposed. Thanks! Anyway... made the change, after you shoot an asteroid, the four new ones appear but they dissapear in seconds for some weird reason and don't behave like normal asteroids. Tested it? This is actually crazy</span>
