<div class="post-text" itemprop="text">
<p>Im still new to file I/O in python, and so I'm having some trouble with figuring out how to look for a specific variable in a file.</p>
<p>This is the file i'm opening(txt type):</p>
<pre><code>grelha = [['O', 'H', 'L', 'E', 'M', 'R', 'R', 'V', 'U'],

          ['B', 'B', 'R', 'A', 'N', 'C', 'O', 'Z', 'A'],

          ['S', 'R', 'A', 'M', 'S', 'U', 'P', 'A', 'O'],

          ['A', 'A', 'B', 'A', 'P', 'O', 'T', 'Z', 'Z'],

          ['L', 'N', 'Z', 'R', 'O', 'E', 'R', 'N', 'U'],

          ['I', 'U', 'I', 'E', 'P', 'D', 'O', 'I', 'I'],

          ['L', 'O', 'L', 'L', 'O', 'R', 'A', 'C', 'A'],

          ['I', 'T', 'M', 'O', 'T', 'E', 'R', 'P', 'P'],

          ['L', 'I', 'E', 'A', 'Z', 'V', 'Y', 'U', 'U']]
palavras = ['branco','preto','azul','verde','rosa','amarelo','vermelho','cinza','lilas']
</code></pre>
<p>And this is the code I've got:</p>
<pre><code>def file():
    game_file = open(str(input("What is the name of the file?")), "r+")
    for i in game_file:
        if i == 'grelha':#"I've tried without it being a string as well"
            print (i)    
</code></pre>
<p>As far as I could find out there isn't any method to help me do this, and I also don't quite well understand how the iteration works in this case.</p>
<p>If anyone could help me out with this problem and explain the iteration that would be great!</p>
</div>
<div class="post-text" itemprop="text">
<p>By default, python read file by line, so your <code>if i == 'grelha'</code> will get nothing.</p>
<p>If you want to find the line start with palavras, you can use <code>startwith()</code> method:</p>
<pre><code>In [3]: for line in file:
   ...:     if line.startswith('palavras'):
   ...:         print line
   ...:         
palavras = ['branco','preto','azul','verde','rosa','amarelo','vermelho','cinza','lilas']
</code></pre>
<p>For file, iteration works line by line;
For str, iteration works char by char;</p>
<p>Generally, python treat file as string, so you can't write python code in file, the line <code>palavras = ['branco','preto','azul','verde','rosa','amarelo','vermelho','cinza','lilas']</code> is string, not code. You still need to parse them.</p>
</div>
<div class="post-text" itemprop="text">
<p>What you're doing seems to naively assume that just because the file content is valid python, opening it with python will parse it as python.  This is absolutely not the case.  You need to choose a format for storing your data so that it can be interpreted properly when you need to read it back in. </p>
<p>For example, you might find JSON to be a perfect way to store this kind of structured data:  </p>
<pre><code>{"grelha": [["O", "H", "L", "E", "M", "R", "R", "V", "U"], ["B", "B", "R", "A", "N", "C", "O", "Z", "A"], ["S", "R", "A", "M", "S", "U", "P", "A", "O"], ["A", "A", "B", "A", "P", "O", "T", "Z", "Z"], ["L", "N", "Z", "R", "O", "E", "R", "N", "U"], ["I", "U", "I", "E", "P", "D", "O", "I", "I"], ["L", "O", "L", "L", "O", "R", "A", "C", "A"], ["I", "T", "M", "O", "T", "E", "R", "P", "P"], ["L", "I", "E", "A", "Z", "V", "Y", "U", "U"]], "palavras": ["branco", "preto", "azul", "verde", "rosa", "amarelo", "vermelho", "cinza", "lilas"]}
</code></pre>
<p>Then you can read it in in your program with the built-in JSON module:</p>
<pre><code>import json

with open('f.json') as f:
    data = json.loads( f.read() )
print data['grelha']
</code></pre>
</div>
<span class="comment-copy">Can you show the exact content of the file you're opening?  You seem to expect the file to be parsed as python.</span>
<span class="comment-copy">What do you mean you're looking for that variable in the file</span>
<span class="comment-copy">You need to <i>serialize</i> your variable in your file. Storing the variable as regular text is not the way to go. I suggestion taking a look at the <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer"><code>pickle</code></a> module.</span>
<span class="comment-copy"><code>input</code> already returns a string (or should be replaced by <code>raw_input</code>, if this is Python 2 code); there is no need to wrap the value in a call to <code>str</code>.</span>
<span class="comment-copy">Dan Farrel- Done Chepner - The first time around i didn't turn(variable name) it in to a string and it still didn't seem to work</span>
<span class="comment-copy">Thank you! This worked fine! :)</span>
<span class="comment-copy">I tried this but it doesn't seem to recognize the json module when it's like that, I've tried a few different ways as well trying to get there but it didn't seem to work.</span>
<span class="comment-copy">the code I've pasted works as is.  As your data becomes more complex, you'll find it increasingly difficult to build your own parsing system like @scriptboy's answer suggests.  So keep <code>json</code> in mind as a powerful, flexible model for describing structured data external to your appliation code.</span>
