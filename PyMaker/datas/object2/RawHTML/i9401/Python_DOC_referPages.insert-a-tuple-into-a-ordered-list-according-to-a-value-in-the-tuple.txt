<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/8024571/insert-an-item-into-sorted-list-in-python">Insert an item into sorted list in Python</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to find a way to add a a tuple to a list while maintaining the order. For example I have a list.
<code>[(1, 'a'), (3, 'y'), (4, 'd')]</code>
and want to be able to automatically insert another tuple which may be (2, 'q') for example and it would automatically put it between (1, 'a') and (3, 'y') without me knowing the index.</p>
<p>Thanks in Advance</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the Python <a href="https://docs.python.org/2/library/bisect.html" rel="nofollow noreferrer">bisect</a> module.</p>
<pre><code>import bisect

l = [(1, 'a'), (3, 'y'), (4, 'd')]
bisect.insort(l, (2, 'q'))

print (l)
&gt;&gt; [(1, 'a'), (2, 'q'), (3, 'y'), (4, 'd')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if your data is always sorted the <a href="https://docs.python.org/3/library/bisect.html" rel="nofollow noreferrer"><code>bisect</code></a> module will give you an <em>efficient</em> way to find the insertion point.</p>
<p>if the number determines the insertion point you can just do:</p>
<pre><code>import bisect

data = [(1, 'a'), (3, 'y'), (4, 'd')]
bisect.insort(data, (2, 'q'))
print(data)  # [(1, 'a'), (2, 'q'), (3, 'y'), (4, 'd')]
</code></pre>
<p>if the letter is the key to the insertion you need to keep a 'journal' of the letters in your list:</p>
<pre><code>import bisect

data = [(1, 'a'), (3, 'y'), (4, 'd')]
keys = [r[1] for r in data]         # precomputed list of keys

index = bisect.bisect(keys, 'q')

data.insert(index, (2, 'q'))
keys.insert(index, 'q')

print(data)  # [(1, 'a'), (2, 'q'), (3, 'y'), (4, 'd')]
print(keys)  # ['a', 'q', 'y', 'd']
</code></pre>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer"><code>list.insert(x[, start[, end]])</code></a> will do the actual inserting.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>list.insert</code>. From the <a href="https://docs.python.org/2/tutorial/datastructures.html" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>Insert an item at a given position. The first argument is the index of the element before which to insert, so a.insert(0, x) inserts at the front of the list, and a.insert(len(a), x) is equivalent to a.append(x).</p>
</blockquote>
<p><strong>Code</strong></p>
<pre><code>l = [(1, 'a'), (3, 'y'), (4, 'd')]
l.insert(1, (2, 'q'))

print(l)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[(1, 'a'), (2, 'q'), (3, 'y'), (4, 'd')]
</code></pre>
<p><em>Edit:</em> this answer assumes you just wanted to insert that particular tuple in the list, such that the new list remains ordered by the first tuple elements in ascending order. I'm not providing a solution for the general case if that's what you need.</p>
</div>
<div class="post-text" itemprop="text">
<p>use <strong>yourlist.insert(position,value)</strong></p>
<pre><code>li = [(1, 'a'), (3, 'y'), (4, 'd')]
li.insert(1,(2,'q'))
print "list :",li
</code></pre>
<p>output : </p>
<p><strong><code>list : [(1, 'a'), (2, 'q'), (3, 'y'), (4, 'd')]</code></strong></p>
</div>
<span class="comment-copy">Do you know the insertion point up front, or should that be determined based on the value of the tuple being inserted? In other words, are you looking for general sorted-order insertion?</span>
<span class="comment-copy">I don't know the insertion point upfront. So yes I am looking for general sorted-order insertion.</span>
<span class="comment-copy">answerers: this is an obvious duplicate, please stop answering...</span>
