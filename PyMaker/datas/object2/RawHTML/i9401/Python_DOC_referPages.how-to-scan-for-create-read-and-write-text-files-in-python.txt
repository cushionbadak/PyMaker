<div class="post-text" itemprop="text">
<p>I've been messing around with a collatz program I wrote a couple of days back to learn python, recently incorporating a list.</p>
<pre><code>from heapq import nlargest

list=[]

number = input("Please enter range: ")+1


def collatz(a):
    if a%2==0:
        return a/2
    else:
        return (3*a)+1


for x in range(1,number):
    n=x
    count=(-1)
    while n&gt;=1:
        print "%s " % (n),

        if n==1:
            n=0

        n=collatz(n)
        count+=1
    print "\n\n%s: %s\n\n" % (x, count)
    list.insert(x,count)
    x+=1

print "%s\n\n" % (list)
</code></pre>
<p>Now I want to be able to save the data output so that I can use it in excel for example, but also so that I don't have to keep starting from 1 (say I run it once up to 10, and then run it again, I want it to start from 10 up to 20 instead, just like if I ran it once up to 20).  If possible, I'd also like it to generate its own text file if none is found.
Cheers.</p>
</div>
<div class="post-text" itemprop="text">
<p>What you want to do is append your data to a CSV:</p>
<pre><code>import csv
filename = "myfilename.csv"

with open(filename, 'a') as myfile:
    writer = csv.writer(myfile)
    writer.writerow(list)
</code></pre>
<p>the <code>'a'</code> means append.  It creates a new file if none is found.  <code>'w'</code> writes a file and overwrites it if you run the program again.
Use <code>writerow</code> to write a single list (single row), use <code>writerows</code> to write a list of lists (all rows)</p>
<p>Then you can later read your csv again:</p>
<pre><code>import csv
with open(filename, 'r') as myfile:
    reader = csv.reader(myfile)
    for row in reader:
        print(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could create a data frame which you then could write to a new .csv file</p>
<pre><code>import pandas as pd
</code></pre>
<p>Creating a <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html" rel="nofollow noreferrer">DataFrame</a>, at the end of your code: <code>df = pd.DataFrame(data=*some data e.g. list*, index=i)</code></p>
<pre><code>i = range(1, x)

df = pd.DataFrame(data=list, index=i)
print 'dataframe:  ', df
</code></pre>
<p>From data frame to .csv file: <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html" rel="nofollow noreferrer">DataFrame.to_csv()</a> </p>
<pre><code>df.to_csv('C:/Users/.../new_file.csv')
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">7.2 Reading and writing files</a> might be a good start.</span>
<span class="comment-copy">Cheers, I feel like I should learn a bit about this.  Where can I learn about it?  Is there somewhere online that goes over the basics of csv files?  Thanks for the help btw</span>
<span class="comment-copy">All of the basic python tools are very easily googlable.  "python csv" yields this nice article:  <a href="https://pymotw.com/2/csv/" rel="nofollow noreferrer">pymotw.com/2/csv</a></span>
<span class="comment-copy">Thanks a lot, do you know where I could learn a bit more about this?  It looks really alien to me right now...</span>
<span class="comment-copy">You can click on the blue text in my answer which takes you to these links: <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html" rel="nofollow noreferrer">pandas.pydata.org/pandas-docs/stable/generated/…</a> and <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html" rel="nofollow noreferrer">pandas.pydata.org/pandas-docs/stable/generated/…</a></span>
<span class="comment-copy">@user7389469 Considering that you are super new, I'd recommend sticking to built-in functions.  While I really like pandas, installing extra packages adds an extra layer of complexity to your learning curve that you really don't need for writing CSVs.</span>
