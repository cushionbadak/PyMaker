<div class="post-text" itemprop="text">
<p>I am trying to write regular expression for this line:</p>
<p><code>-  5.0   -  4.0   -  3.0  ... +  12.0</code></p>
<p>That It could group floats with sign in a single group (-5.0,-4.0...)</p>
<p>I have tried:</p>
<p><code>\s*([+](?:\s)*\d*[.])</code> </p>
<p>But apparently It does not ignore non-capture group inside capture group.
Any suggestion how this could be solved?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your capture group has the following elements:</p>
<ul>
<li><code>[+]</code> matches a literal <code>+</code></li>
<li><code>(?:\s)*</code> matches any number of whitespace characters</li>
<li><code>\d*</code> matches any number of digits</li>
<li><code>[.]</code> matches a literal <code>.</code></li>
</ul>
<p>So right now, that matches a plus sign followed by space followed by digits followed by a decimal point. But it sounds like you want to match <em>several</em> sign-space-digits-decimalpoint-digits sequences in a row, as long as they have the same sign. I'd do that like this:</p>
<ol>
<li><p>Start with the expression to match a single such sequence:</p>
<pre><code>[+-]\s*\d+[.]\d+
</code></pre>
<p>This matches plus or minus, then space, then digits, decimal point, digits.</p></li>
<li><p>You'll want to save the sign to make sure that the rest of the pattern only matches sequences with the same sign. So make a capturing group.</p>
<pre><code>([+-])\s*\d+[.]\d+
</code></pre></li>
<li><p>Now let's repeat the pattern (with some intervening space) to match another group, except that we want to make sure the sign is the same so we use a backreference.</p>
<pre><code>([+-])\s*\d+[.]\d+\s*\1\s*\d+[.]\d+
</code></pre>
<p>The <code>\1</code> matches whatever was matched by capturing group number 1. In this case, that's the sign, <code>+</code> or <code>-</code>. This pattern will match two consecutive sequences that have the same sign.</p></li>
<li><p>Now change the second part of the pattern to match zero or more additional sequences.</p>
<pre><code>([+-])\s*\d+[.]\d+(?:\s*\1\s*\d+[.]\d+)*
</code></pre></li>
<li>Finally, you can allow for spaces before and after the match. This can be solved with judicious use of the <a href="https://docs.python.org/3/library/re.html#re.regex.search" rel="nofollow noreferrer"><code>search</code></a> function, or <a href="https://docs.python.org/3/library/re.html#re.regex.findall" rel="nofollow noreferrer"><code>findall</code></a>, rather than <a href="https://docs.python.org/3/library/re.html#re.regex.match" rel="nofollow noreferrer"><code>match</code></a>. You can then use <a href="https://docs.python.org/3/library/re.html#re.match.group" rel="nofollow noreferrer"><code>match_object.group()</code></a> with no arguments to get the sequence that was matched, which is what you want.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>According to your requirement:</p>
<blockquote>
<p>That It could group floats with sign in a single group (-5.0,-4.0...)</p>
</blockquote>
<p>The solution using <code>re.findall()</code> function:</p>
<pre><code>s = '-  5.0   -  4.0   -  3.0  ... +  12.0'
signed_floats = [re.sub(r'\s+', r'', f) for f in re.findall(r'-\s*\d+\.\d+\b', s)]

print(signed_floats)
</code></pre>
<p>The output:</p>
<pre><code>['-5.0', '-4.0', '-3.0']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's something you can try:</p>
<pre><code>(\+|-)\s*(\d+\.\d+)\s*
</code></pre>
<p>Although, you will always have a trailing comma, so you'd have to remove it.</p>
<p><a href="https://regex101.com/r/Sv0qjx/2" rel="nofollow noreferrer">Here is a demo</a></p>
</div>
<span class="comment-copy">There maybe a better way if you provide more details about the problem. Is the input data a string? where are you getting the input from. If you can format it differently earlier it could be easier to deal with the data. Also if you want a really easy way to just test a bunch of lines of data you should give this site a try. <a href="http://pythex.org/" rel="nofollow noreferrer">pythex.org</a></span>
