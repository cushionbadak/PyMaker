<div class="post-text" itemprop="text">
<p>first time here.<br/>
I did a bit of searching on my own before
posting a question, however,<br/>
I couldn't find the exact answer to it.<br/>
I've done such things before in C/C++ but here I'm a bit confused.  </p>
<p>I want to print this : </p>
<pre><code>table = [ ['A','B','C','D'], ['E','F','G','H'], ['I','J','K','L'] ]
</code></pre>
<p>this way:  </p>
<pre><code>'A'   'E'   'I'  
'B'   'F'   'J'  
'C'   'G'   'K'  
'D'   'H'   'L'  
</code></pre>
<p>automatically, in a loop.<br/>
First variable from every table in first row, second in second row, etc...<br/>
I tried with 2 for loops but I'm doing it wrong because I run out of indexes.</p>
<p>EDIT - this part is solved but one more question</p>
<p>I have:  </p>
<pre><code>tableData = [ ['apple', 'orange', 'cherry', 'banana'],  
              ['John', 'Joanna', 'Sam', 'David'],  
              ['dog', 'cat', 'mouse', 'rat'] ]  
</code></pre>
<p>and it has to look like this:  </p>
<pre><code>|   apple   |  John  |  dog  |  
|   orange  | Joanna |  cat  |
|  cherry   |  Sam   | mouse |
|  banana   | David  |  rat  |  
</code></pre>
<p>"function should be able to manage lists with different lengths and<br/>
count how much space is needed for a string (for every column separately)".<br/>
Every string has to be centered in it's column.</p>
<p>I tried to print previous table having a zipped object </p>
<pre><code>for row in zip(*table):
    print('| ', ' | '.join(row), ' |')  

|  A | E | I  |
|  B | F | J  |
|  C | G | K  |
|  D | H | L  |  
</code></pre>
<p>but I am out of ideas what comes next in this situation</p>
</div>
<div class="post-text" itemprop="text">
<p>You can <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a>, <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code></a> and <code>print</code>:</p>
<pre><code>In [1]: table = [ ['A','B','C','D'], ['E','F','G','H'], ['I','J','K','L'] ]

In [2]: for row in zip(*table):
   ...:     print(" ".join(row))
   ...:     
A E I
B F J
C G K
D H L
</code></pre>
<p>Or, a one-liner version joining the rows with a newline character:</p>
<pre><code>&gt;&gt;&gt; print("\n".join(" ".join(row) for row in zip(*table)))
A E I
B F J
C G K
D H L
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here you go this works regardless of what the information in the list is. </p>
<pre><code>table = [["a","b","c","d"],["e","f","g","h"],["i","j","k","l"]]
max = len(table[0])
max2 = len (table)
string = []

for a in range(0,max):
    for b in range(0,max2):
        if len(string) == max2:
            string = []
        string.append(table[b][a])
    print string
</code></pre>
</div>
<span class="comment-copy">That edit is big enough that you really should put that in a new question, and accept what you got for the first.  The edit requires another iteration to figure out column widths, and the use of string formatting to center to strings with the fields.  So it's not just a matter of extending all the <code>joins</code>.</span>
<span class="comment-copy">Thank you, works just fine ;)</span>
