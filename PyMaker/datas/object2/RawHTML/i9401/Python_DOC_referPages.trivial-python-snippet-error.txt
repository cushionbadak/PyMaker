<div class="post-text" itemprop="text">
<p>He defines the following Python function normally:</p>
<pre><code>def findMax (team, board, MIN, MAX, levels)
    ...
    ...
    return
</code></pre>
<p>In his program he calls it this way:</p>
<pre><code>myValue = findMax(team, board, MIN, MAX, 3) [1]
</code></pre>
<p>and it works properly.  But if I remove the bracketed 1 and call it like this:</p>
<pre><code>myValue = findMax(team, board, MIN, MAX, 3)
</code></pre>
<p>it throws this error:</p>
<pre><code>TypeError: list indices must be integers or slices, not tuple.
</code></pre>
<p>My question is this:  What is the bracketed 1 doing?  I have never seen a bracketed number following arguments in a called function and I can't find the answer anywhere in the Python literature.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>[1]</code> is a <a href="https://docs.python.org/3/reference/expressions.html#subscriptions" rel="nofollow noreferrer"><em>subscription expression</em></a>. <code>findMax()</code> returns a <em>list</em>, and <code>[1]</code> picks out a single element from that sequence, the one with index 1.</p>
<p>When you remove the <code>[1]</code> expression, you get the <code>TypeError</code> later on when code that expected a different type of object, but is now given that list instead.</p>
<p>Perhaps you found the space between the <code>)</code> of the <code>findMax()</code> call and the <code>[1]</code> confusing. It is much better to leave out that space, and the <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">Python style guide</a> states no spaces should be used there, but spaces are perfectly legal there:</p>
<pre><code>&gt;&gt;&gt; l = ['foo', 'bar']
&gt;&gt;&gt; l[1]
'bar'
&gt;&gt;&gt; l [1]
'bar'
&gt;&gt;&gt; l             [1]
'bar'
</code></pre>
<p>Legal, but confusing to new coders.</p>
</div>
<span class="comment-copy">You omitted the body of <code>findMax</code>. Does it return a list?</span>
<span class="comment-copy">That depends on what exactly <code>findMax()</code> is returning. If it's returning an iterable, then that <code>[1]</code> is accessing the second item in that iterable.</span>
<span class="comment-copy">Thanks! Great explanation.</span>
