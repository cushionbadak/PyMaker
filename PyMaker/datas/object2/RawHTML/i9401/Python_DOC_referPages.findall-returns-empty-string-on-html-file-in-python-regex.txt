<div class="post-text" itemprop="text">
<p>I am learning Regex with Python and I am doing the baby names exercise of the Google Tutorial on Regex.  The html file --baby1990.html-- is in a zipped file that can be downloaded here: <a href="https://developers.google.com/edu/python/set-up" rel="nofollow noreferrer">https://developers.google.com/edu/python/set-up</a> ('Download Google Python Exercises')</p>
<p>The year is placed within  Tags.  The html code is the following:</p>
<pre><code>&lt;h3 align="center"&gt;Popularity in 1990&lt;/h3&gt;
</code></pre>
<p>I am using the following code to extract the year from the file:</p>
<pre><code>f = open('C:/Users/ALEX/MyFiles/JUPYTER NOTEBOOKS/google-python-exercises/babynames/baby1990.html', 'r')

strings = re.findall(r'&lt;h3 align="center"&gt;Popularity in (/d/d/d/d)&lt;/h3&gt;', f.read())
</code></pre>
<p>I have tested the pattern with RegularExpressions101 website and it works.</p>
<p>However the 'strings' list returned is empty.  </p>
<p>len(strings)
out</p>
</div>
<div class="post-text" itemprop="text">
<p>I think the best way to match a year in a contextual string is to use <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer">re.search</a> or <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer">re.match</a>.</p>
<p>For instance:</p>
<pre><code>import re

tag = """&lt;h3 align="center"&gt;Popularity in 1990&lt;/h3&gt;"""

mo = re.search(r"Popularity in (\d{4})", tag)
year = mo.group(1) if mo else ""

print(year)
# -&gt; 1990
</code></pre>
<p>Or course, if you want to find all matches, you need to use <code>re.findall</code>
â€¦</p>
<p>You check your Python RegEx, you can also try online with <a href="https://regex101.com/" rel="nofollow noreferrer">https://regex101.com/</a></p>
</div>
<span class="comment-copy">Change <code>(/d/d/d/d)</code> to <code>(\d\d\d\d)</code> or <code>(\d{4})</code></span>
<span class="comment-copy">Please clarify. Does <code>findall</code> return an empty string, or an empty list? Or does it return a list containing one element, which is an empty string? Or something else?</span>
<span class="comment-copy">FYI, using regexps to parse HTML is usually considered a very bad idea.</span>
<span class="comment-copy">OK , somehow I messed up. I had tested the expression and I had found the error with regex101 but I did not pass the changes to the expression.  I am little bit tired.  Now, it works.</span>
