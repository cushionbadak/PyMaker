<div class="post-text" itemprop="text">
<p>This is my first day in python.<br/>
I have a csv file like the below. <a href="https://i.stack.imgur.com/5UDXB.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/5UDXB.png"/></a></p>
<p>Link to the file: <a href="https://1drv.ms/u/s!AlQo_tHSk1tGjlZYua8xoHSRQ4m6" rel="nofollow noreferrer">https://1drv.ms/u/s!AlQo_tHSk1tGjlZYua8xoHSRQ4m6</a>.   </p>
<p>File name : toy.csv</p>
<pre><code>id  text
1   hello world
2   hello foo world
3   hello my world
</code></pre>
<p>I have to write a code such that it takes the following format:</p>
<p>Required format: </p>
<pre><code>'{"documents":[{"id":"1","text":"hello world"},{"id":"2","text":"hello foo world"},{"id":"three","text":"hello my world"},]}'
num_detect_langs = 1;
</code></pre>
<p>One way to directly hard code as follows:</p>
<pre><code>input_texts = '{"documents":[{"id":"1","text":"hello world"},{"id":"2","text":"hello foo world"},{"id":"three","text":"hello my world"},]}'
</code></pre>
<p>Here the type of input texts would be "str"</p>
<p>However in practice this may not be possible as my input file can contain 1000s of records. I understand that we need to form a "for" loop kind of stuff so that 
it takes the required format. I dont know how to achieve this.</p>
<p>Can someone please help here. </p>
</div>
<div class="post-text" itemprop="text">
<p>Assume your data is in some file like "data.csv" in your working directory. I am also assuming it is a <em>comma</em> separated list (you've only posted a picture which is extremely unhelpful). Anyway:</p>
<pre><code>import csv
import json
with open('data.csv') as f:
    reader = csv.DictReader(f)
    input_text = {'documents': list(reader)}
input_text = json.dumps(input_text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming an input file called <code>data.txt</code>:</p>
<pre><code>id  text
1   hello world
2   hello foo world
3   hello my world
</code></pre>
<p>Do this to create your desired JSON string:</p>
<pre><code>import json

with open('data.txt','r') as f:
    lines = f.read().splitlines()

first_line = lines[0]

id_header, text_header = first_line.split()
text_index = first_line.index(text_header)

documents = []

for line in lines[1:]:
    index = line.split()[0]
    text = line[text_index:]

    documents.append({
        id_header: index,
        text_header: text,
    })

result = {"documents": documents}

json_string = json.dumps(result)
print json_string
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this does not exactly what you want yet but gets you pretty close:</p>
<pre><code>import io
import json

# this is only to fake your input file...
file = io.StringIO('''id  text
1   hello world
2   hello foo world
3   hello my world
''')

# you would have to open your file:
# with open('filename', 'r') as file:
#     ...

lst = []
header = next(file)  # read and discard the header (id  text)
for line in file:
    splt = line[:-1].split(None, 1)
    lst.append({'id': splt[0], 'text': splt[1]})

print(json.dumps(lst))

# [{"id": "1", "text": "hello world"}, 
#  {"id": "2", "text": "hello foo world"},
#  {"id": "3", "text": "hello my world"}]
</code></pre>
<p>i am sure you will figure the rest out.</p>
<p>this uses only built-in functions. but seeing that you mention 'data frame' i guess you would like to use pandas...</p>
</div>
<div class="post-text" itemprop="text">
<p>To convert the dataframe object say <code>df</code> you mentioned in the question to desired format you can do something like this:</p>
<pre><code>d={}
d["Documents"] = df.to_dict(orient='records')    
print d
</code></pre>
<p>Output:</p>
<pre><code>{'documents': [{'text': 'hello world', 'id': 1}, {'text': 'hello foo world', 'id': 2}, {'text': 'hello my world', 'id': 3}]}
</code></pre>
</div>
<span class="comment-copy">having a look at this may help: <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">docs.python.org/3/library/json.html</a></span>
<span class="comment-copy">and this: <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_json.html" rel="nofollow noreferrer">pandas.pydata.org/pandas-docs/stable/generated/â€¦</a></span>
<span class="comment-copy">Thank you very much for the help, this has worked for me.</span>
<span class="comment-copy">No it's not a file. He has a DataFrame object. Even I mistakenly considered it as a file at first.</span>
<span class="comment-copy">Damn it. I have Pandas as an ignored tag because I know nothing of it, didn't even realize that the data frame here had a special meaning. Whoopsie.</span>
<span class="comment-copy">Consider learning some basic Pandas. Data manipulation becomes much easier. Take a look when you have time: <a href="http://pandas.pydata.org/pandas-docs/stable/tutorials.html" rel="nofollow noreferrer">pandas.pydata.org/pandas-docs/stable/tutorials.html</a></span>
<span class="comment-copy">And it's funny that on his first day in Python he is doing pandas :P. Maybe he is an <code>R</code> guy.</span>
<span class="comment-copy">@HaraldNordgren - Thanks for the response.  As MYGz pointed out am an R guy. In R, once the data is read, it will be considered as data frame. Sorry for the confusion caused. However in the case above, I am loading the data from a csv file. Could you please let me know the line  id_header, text_header = first_line.split() is correct? This throws me an error "ValueError: need more than 1 value to unpack".</span>
<span class="comment-copy">Defining <code>d={"documents": []}</code> before the loop requires <code>n</code> lookups of the key "documents" just to append values. Not a good idea.</span>
<span class="comment-copy">@MYGz - any idea why the text and id are swapped? Cant it be  like this  {"id":"1","text":"hello world"}. Id followed by text?</span>
<span class="comment-copy">@Sijo Order is not preserved in Python dictionaries up until Python3.5. From Python3.6 upwards it's preserved.</span>
<span class="comment-copy">@Harald You are right. Changed it. <code>df.to_dict()</code> can achieve that.</span>
