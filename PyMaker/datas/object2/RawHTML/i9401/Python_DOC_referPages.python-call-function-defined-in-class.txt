<div class="post-text" itemprop="text">
<p>So I am making a game and I am using Tkinter and Python 2.7, and I want to store map data in files. I am trying to make a menu to open the file and set to a variable. I am having trouble defining a function to use on the Tkinter Button.</p>
<p>The Tkinter window opens but when I click the button it gives an error.</p>
<p>Code:</p>
<pre><code>#readfiles.py
class maps(object):
    def __init__(self):
        self.data
    def mapset(var):
        data = var
fselect = Tk()
...
buttons = Frame(fselect).pack()
Label(fselect, text="Select maps in folder:")
for i in listdir('./maps/'):
    if i[-4:] == ".pvm":
        Button(buttons, text=i[:-4], command=lambda i=i: mapset(open('./maps/'+i, 'r').read())).pack()
</code></pre>
<p><code>NameError: global name 'mapset' is not defined
</code></p>
<p>Also, how can I access the <code>data</code> variable in <code>maps</code> (so it would be <code>maps.data</code>, right) in another file?</p>
<pre><code>#main.py
from readfiles import *
print maps.data
</code></pre>
<p><code>AttributeError: type object 'maps' has no attribute 'data'</code></p>
<p>Let me know if you need any additional information.
Also, <code>print "Happy New Years!</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a simple GUI class that stores the data from a map file in the <code>self.data</code> attribute.</p>
<p>To test this code I created a set of simple text files using this Bash command:</p>
<pre class="lang-bash prettyprint-override"><code>for i in {0..5}; do echo &gt;"maps/map${i}.pvm" "Map $i data"; done
</code></pre>
<p>And here's the Python 3 code. To run it on Python 2, just change the Tkinter import statement to <code>import Tkinter as tk</code>, and add <code>from __future__ import print_function</code> before the other import statements.</p>
<p>I've added a <code>"Print data"</code> that lets us test that we have actually loaded the data correctly.</p>
<pre class="lang-python prettyprint-override"><code>import tkinter as tk
import os

class Gui(object):
    def __init__(self, mapspath):
        self.data = None

        root = tk.Tk()
        frame = tk.Frame(root)
        frame.pack()

        tk.Label(frame, text="Select maps in folder:").pack()

        for fbase in os.listdir(mapspath):
            if fbase.endswith('.pvm'):
                fname = os.path.join(mapspath, fbase)
                #print(fname)
                tk.Button(frame, text=fbase[:-4], 
                    command=lambda fn=fname:self.read_map(fn)).pack()

        tk.Button(frame, text="Print data", command=self.print_map).pack()

        root.mainloop()

    def read_map(self, fname):
        with open(fname) as f:
            self.data = f.read()

    def print_map(self):
        print("current map:", self.data)

Gui("./maps")
</code></pre>
<p>Unless these maps are huge it would probably be more convenient to store all of them at once. You could store them in a list, but it'd probably be better to store them in a dictionary, using the base name (minus the <code>'.pvm'</code> extension) as the key.</p>
</div>
<span class="comment-copy">Is your indentation correct? Is <code>mapset</code> an attribute of <code>maps</code>?</span>
<span class="comment-copy">Looks like <code>def mapset(var):</code> and its body need to be indented once more</span>
<span class="comment-copy">You never call the <code>maps()</code> function to create an object. And <code>self.data</code> should be <code>self.data = something</code>.</span>
<span class="comment-copy">There are multiple problems with the code you posted. As Barmar mentions, you never create a <code>maps</code> instance, and the <code>maps.__init__</code> method doesn't make sense. What is <code>mapset</code> supposed to do? Is it supposed to be a method of <code>maps</code>? Also, the <code>widget.pack</code> and <code>.grid</code> methods return <code>None</code>, so <code>buttons = Frame(fselect).pack()</code> sets <code>buttons</code> to <code>None</code>. And you forgot to <code>.pack</code> that <code>Label</code> widget.</span>
<span class="comment-copy">Which "variable <code>data</code>" are you referring to? There is no such variable. <code>data</code> is the name of an attribute you seem to want to have in the <code>maps</code> class, but you never actually create an instance of that class, or assign anything to the variable properly. I think your TK code is not the main problem you're having. Rather, it's obscuring your confusion about basic OOP concepts. Try reading over <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">the Python tutorial's chapter on classes</a> and then see if you can sort it out.</span>
