<div class="post-text" itemprop="text">
<p>I am working on a game where I need to randomly generate classes for a list. I use a self-made function <code>randList</code> to do this. The code for that function looks like this:</p>
<pre><code>def randList(options, num): #RANDOMLY SELECTS NUM ITEMS FROM LIST OPTIONS
returnVal = [] #CREATE A LIST THAT IT RETURNS
for i in range(num - 1): #FOR DESIRED NUMBER OF RETURN ITEMS
    val = r.choice(options) #RANDOMLY SELECT ITEM FROM OPTIONS
    returnVal.append(val) #ADD THAT TO RETURNVAL
    options.remove(val) #REMOVE IT FROM OPTIONS.
return returnVal #RETURN GENERATED LIST
</code></pre>
<p>I am using that to randomly generate monsters and items in a room like so:</p>
<pre><code>class roomParent: #ROOM CHARACTER FINDS
    def __init__(self, entities, floor): #INIT WITH ENEMIES IN ROOM, ITEMS ON FLOOR
        self.entities = entities #ENEMIES THERE ARE
        self.floor = floor #ON FLOOR THERE IS
    def generate(self):
        global enemiesBeat
        if enemiesBeat &gt;= 500:
            self.entities = [dragon]
        else:
            self.entities = randList([goblin, dwarf, slime, naga, troll, beholder], 1)
        self.floor = randList([scrap, scrap, scrap, fireJar, ambrosia, sword, spearhead, armor, potion, slimeball], r.randint(0, 3))

room = roomParent([], [])
</code></pre>
<p>Just so you know, <code>goblin</code>, <code>dwarf</code>, <code>slimeball</code>, etc. are defined earlier in the code. I don't think they have anything to do with the problem. I generate the room later like this:</p>
<pre><code>def main():
    room.generate()
    print("Enemies: " + str(room.entities))
main()
</code></pre>
<p>I want it to print out a list with two random monsters in it from <code>room.generate()</code>, but it always prints <code>Enemies: []</code>. There are no errors in the code, and after trying to troubleshoot for 10 minutes, I decided to consult he web with no fruits in result of that labor. Thank you in advance for any help you give.</p>
</div>
<div class="post-text" itemprop="text">
<p>As Oliver points out, the reason you get always get an empty <code>entities</code> array is because <code>self.entities</code> is set to <code>randList([goblin, dwarf, slime, naga, troll, beholder], 1)</code> within <code>generate</code> (I assume the global variable <code>enemiesBeat</code> is less than 500 in your tests).</p>
<p>In your <code>randList</code> function you have an off-by-one error that I mention in the comments which means that the generated list will contain one fewer items than specified by <code>num</code>. As you try to generate a singleton list for <code>self.entities</code> (<code>num</code> = 1), you'll actually have it assigned to an empty list.</p>
<p>You can correct this issue by changing <code>for i in range(num - 1)</code> to <code>for i in range(num)</code> in your <code>randList</code> function.</p>
<hr/>
<p>As an aside, I don't think you need to pass <code>entities</code> and <code>floor</code> as parameters to the <code>roomParent</code> constructor, since it doesn't seem to have any effect. Instead, you could modify the class definition:</p>
<pre><code>class roomParent(object):
    def __init__(self):
        self.entities = []
        self.floor = []
    ...
</code></pre>
<p>And instantiate it like this:</p>
<pre><code>room = roomParent()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer">the random.sample library function.</a></p>
<p>Also, you might want to rethink your capitalization...snake_case is preferred over inCaps for function names.</p>
</div>
<span class="comment-copy">Why <code>for i in range(num - 1)</code> instead of <code>for i in range(num)</code>?</span>
<span class="comment-copy">Also why do you pass <code>entities</code> and <code>floor</code> as parameters to <code>roomParent</code>'s constructor? It looks like you just need to initialise them to empty lists within the constructor, since they get assigned to anyway in the <code>generate</code> method.</span>
<span class="comment-copy">As @Tagc says you do <code>range(num - 1)</code> instead of <code>range(num)</code>. In your sample code you're passing <code>1</code> as the 2nd parameter for <code>randList</code> so your for loop will be <code>for i in range(1 - 1)</code> which won't do anything.</span>
