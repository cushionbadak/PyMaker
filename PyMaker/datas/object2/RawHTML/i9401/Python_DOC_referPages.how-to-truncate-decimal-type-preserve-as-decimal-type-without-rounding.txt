<div class="post-text" itemprop="text">
<p>I need to truncate decimal types without rounding &amp; retain the decimal type, in the most processor efficient way possible.</p>
<p>The Math options I believe returns a float.</p>
<p>The quantize option returns a rounded number I believe.</p>
<p>Str options are way to processor costly.</p>
<p>Is there a simple, direct way to simply cut the digits off a decimal type past a specified decimal length?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/2/library/decimal.html#decimal.Decimal.quantize" rel="noreferrer"><code>quantize</code></a> method does have a <code>rounding</code> parameter which controls how the value is rounded. The <a href="https://docs.python.org/2/library/decimal.html#decimal.Context" rel="noreferrer"><code>ROUND_DOWN</code></a> option seems to do what you want:</p>
<blockquote>
<ul>
<li><code>ROUND_DOWN</code> (towards zero)</li>
</ul>
</blockquote>
<pre><code>from decimal import Decimal, ROUND_DOWN

def truncate_decimal(d, places):
    """Truncate Decimal d to the given number of places.

    &gt;&gt;&gt; truncate_decimal(Decimal('1.234567'), 4)
    Decimal('1.2345')
    &gt;&gt;&gt; truncate_decimal(Decimal('-0.999'), 1)
    Decimal('-0.9')
    """
    return d.quantize(Decimal(10) ** -places, rounding=ROUND_DOWN)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you have a <a href="https://docs.python.org/3/library/decimal.html" rel="nofollow noreferrer">decimal</a>, for example</p>
<pre><code>num = Decimal('3.14159261034899999')
</code></pre>
<p>you can do:</p>
<pre><code>getcontext().prec = 13               # set the precision  (no. of digits)
getcontext().rounding = ROUND_DOWN   # this will effectively truncate

num *= 1
</code></pre>
<p>Using this you'll get (<code>print(num)</code>):</p>
<pre><code>3.141592610348
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To cut off decimals past (for example) the second decimal place:</p>
<pre><code>from math import floor
x = 3.14159
x2 = floor(x * 100) / 100
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand you correctly you can use <code>divmod</code> (it's a build-in function). It splits a number into integer and decimal parts:</p>
<pre><code>&gt;&gt;&gt; import decimal
&gt;&gt;&gt; d1 = decimal.Decimal(3.14)
&gt;&gt;&gt; divmod(d1, 1)[0]
Decimal('3')
&gt;&gt;&gt; d2 = decimal.Decimal(5.64)
&gt;&gt;&gt; divmod(d2, 1)[0]
Decimal('5')
</code></pre>
</div>
<span class="comment-copy">Do you want to actually truncate the numeric value, or do you need a string representation of the value with a given number of digits?</span>
<span class="comment-copy">I need the end result to be a Decimal type.  I don't want to convert in and out of str. I have hella lot of numbers to process.  That would add too much to the processing time.</span>
<span class="comment-copy">When you say <code>decimal</code> you mean <code>decimal.Decimal</code>?</span>
<span class="comment-copy">If processing time is an issue: Are you sure you need <code>Decimal</code>? Or can you get away with <code>float</code>s (maybe using <code>numpy</code>), which is probably inherently faster?</span>
