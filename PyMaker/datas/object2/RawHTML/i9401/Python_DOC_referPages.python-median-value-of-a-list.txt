<div class="post-text" itemprop="text">
<pre><code>def median(x):

    if range(1, len(x))%2!=0:
        sorted(x)
        listlength = range(1, len(x)+1)
        num = listlength / 2
        middlenum = x[num]
    else:
        sorted(x)
        listlength = range(1, len(x)) 
        num = listlength / 2
        num2 = num + 1
        middlenum = x[num2 + num / 2]
    return middlenum
</code></pre>
<p>This is my code, I need to find a median value of a list (x) but I'm getting this error :</p>
<pre><code>"Oops, try again. median([1]) resulted in an error: unsupported operand type(s) for %: 'list' and 'int' "
</code></pre>
<p>I don't really know what to do, please help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could also use NumPy's built-in functions, which could potentially be faster.</p>
<pre><code>import numpy as np
def median(x):
    return np.median(np.array(x))
</code></pre>
<p>NumPy has a whole suite of array-based data analysis functions, such as Mean, Mode, Range, Standard Deviation and more: <a href="https://docs.scipy.org/doc/numpy/reference/routines.statistics.html" rel="nofollow noreferrer">https://docs.scipy.org/doc/numpy/reference/routines.statistics.html</a></p>
<hr/>
<p>Hope this helps!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>range(1, len(x))</code> is an iterable. It can not be divided by a number, <code>2</code> for that case.</p>
<p>I believe you meant to use simply <code>if len(x) % 2:</code>.</p>
<p>In adddition, <code>sorted(x)</code> will return <code>x</code> sorted, not sort it. For that task you have <code>x.sort()</code>.</p>
<hr/>
<p>If you just want to find a median, use the built-in <a href="https://docs.python.org/3/library/statistics.html#statistics.median" rel="nofollow noreferrer"><code>statistics.median</code></a>:</p>
<pre><code>&gt;&gt;&gt; import statistics
&gt;&gt;&gt; statistics.median([1, 2, 3])
2
</code></pre>
<p>Otherwise, see <a href="https://stackoverflow.com/a/29870273/6575931">that</a> answer.</p>
</div>
<div class="post-text" itemprop="text">
<p>In This program at first user will take five values.Then the values will be sorted and give the median value.It will also print the larger values and smaller values compared to the median.So, This is the code where you will get the median values.</p>
<pre><code>a = [int(x) for x in input().split()]
p,q,r,s,t=a
w=a.sort()
median=a[2]
l=a[3],a[4]
m=a[0],a[1]
print("Median is : %i" %median)
print("The larger values are: %i %i" %l)
print("The smaller values are: %i %i" %m)
</code></pre>
<p>if user want to take many values then the code is:</p>
<pre><code>import statistics
a = [int(x) for x in input().split()]
w=a.sort()
median=statistics.median(a)
print("Median is : %.2lf" %median)
</code></pre>
</div>
<span class="comment-copy">def median(x):     if len(x)%2!=0:         x.sort()         listlength = len(x)+1         num = listlength / 2         middlenum = x[num]     else:         x.sort()         listlength = len(x)         num = listlength / 2         num2 = num + 1         middlenum = x[num2 + num / 2]     return middlenum        Error : "Oops, try again. median([1]) resulted in an error: list index out of range "...... what am I doing wrong, DAMNIT, shet I just realised this code is super hard to read, like this</span>
<span class="comment-copy">@MarcelCsharp see update</span>
<span class="comment-copy">Note also that in both branches of the <code>if</code> <code>listlength</code> will be another iterable (or a list in python 2.x), and again can't be divided by 2.  Finally, the calculation in the even case should be <code>middlenum = (x[num] + x[num+1])/2</code> - the current calculation is going to end up calculating roughly the upper quartile!</span>
