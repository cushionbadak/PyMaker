<div class="post-text" itemprop="text">
<p>In the following line</p>
<pre><code>def run_job_subtype(self):
    print os
    if os.path.exists(self.abs_export_dir):
        return "incr"
    else:
        return "full"
</code></pre>
<p>I am getting a traceback as follow:</p>
<pre><code>"AttributeError: 'NoneType' object has no attribute 'path'
</code></pre>
<p>printing os:</p>
<pre><code>&lt;module 'os' from '/usr/lib/python2.7/os.pyc'&gt;
&lt;module 'os' from '/usr/lib/python2.7/os.pyc'&gt;
&lt;module 'os' from '/usr/lib/python2.7/os.pyc'&gt;
None
None
None
None
None
None
None
</code></pre>
<p>all of the sudden it is set to None<br/>
I dont think I am programmatically setting to None..<br/>
Is it possible for os being set to None somehow other than by a programmer?<br/>
or any ways to debug this besides manually looking over thousands of lines of code?  </p>
<p>This function is called within a thread</p>
<p>Another weird thing.... I've changed the code to:</p>
<pre><code>def run_job_subtype(self):
        print os
        print sys.modules['os']

        if os.path.exists(self.abs_export_dir):
            return "incr"
        else:
            return "full"
</code></pre>
<p>Traceback</p>
<pre><code>print sys.modules[\'os\']
', "AttributeError: 'NoneType' object has no attribute 'modules'
</code></pre>
<p>And im also importing sys. I am definitely not creating variables for both os and sys...</p>
<p>something is wiping all the imports?</p>
</div>
<div class="post-text" itemprop="text">
<p>The error is exactly what is wrong - You have set a variable with a name of <code>os</code>, thus when running <code>os.path.exists()</code> you are trying to run <code>.path</code> on a string, integer, or some other variable.</p>
</div>
<span class="comment-copy">You have some variable <code>os</code> in your code somewhere that you are setting equal to <code>None</code></span>
<span class="comment-copy">Somewhere, somehow, you have assigned <code>None</code> to a variable named <code>os</code>, thus shadowing the module name.</span>
<span class="comment-copy">Try to generate a complete enough example that someone can copy-and-paste it from the question and see the problem themselves. Methods for doing this (and motivation, beyond "failure to provide a MCVE with a code-centric question makes it eligible to be closed") are discussed at <a href="http://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a> and <a href="http://sscce.org/" rel="nofollow noreferrer">sscce.org</a>.</span>
<span class="comment-copy">@CharlesDuffy im not asking for what IS wrong. im asking for what could be wrong. i've shown the problem and without neceesarily providing code which is reproducable, ppl's experiences from coding could give hindsight on what <i>could</i> be the source of such an error</span>
<span class="comment-copy">@ealeon, ...and the site rules make questions of that form ("please dump a bunch of speculation") closable. You're expected to do your homework -- in this case, "your homework" means building a reproducer.</span>
<span class="comment-copy">im looking at my diff but i didnt name any variable os...</span>
<span class="comment-copy">Could you then show all your code? It is hard to work with just one line... :)</span>
<span class="comment-copy">@ealeon: we can't see your code. Just before you try to use <code>os.path</code> you set <code>os</code> to <code>None</code>. That could be in any number of ways, see the <a href="https://docs.python.org/3/reference/executionmodel.html#naming-and-binding" rel="nofollow noreferrer">Naming and Binding section</a> for all the ways you could be setting <code>os</code>. It could the code is looking for a local, or a closure, or a global name <code>os</code>. Without your code we can't tell you anything else.</span>
<span class="comment-copy">@CharlesDuffy Closing this question because it <i>currently</i> doesn't provide sufficient information to resolve doesn't help anyone, though. It would be better to ask OP for that information and for him to edit his post to include it, which is what I see done almost all of the time anyway.</span>
<span class="comment-copy">@Tagc: the question won't help future visitors, which is the point of Stack Overflow. Putting a question on hold is also a temporary state; if a MCVE were added we could easily re-open.</span>
