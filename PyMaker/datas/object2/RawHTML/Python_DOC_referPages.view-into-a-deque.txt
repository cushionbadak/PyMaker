<div class="post-text" itemprop="text">
<p>I have a fixed length deque which receives pushed items on the left.</p>
<p>Periodically I wish to copy all of the values, without affecting the elements in the deque. I'm using the more_itertools "spy" function as follows:</p>
<pre><code>from collections import deque
from more_itertools import spy

d = deque(maxlen=3)
d.appendleft(1)
d.appendleft(2)
d.appendleft(3)

# Setup
D = spy(d, n=3)
print(D[0])  # &gt;&gt;&gt;[3, 2, 1]

# Now add another item and retrieve the snapshot again
d.appendleft(4)
print(D[0])  # &gt;&gt;&gt;[3, 2, 1]  Same! I want: [4, 3, 2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>spy</code> function from <code>more_itertools</code> doesn't do what what you seem to expect it to do. It makes a one-time copy of the first <code>n</code> values from the argument, and returns it in a tuple with an iterator that still behaves like the argument (even if the argument was an iterator, not a sequence that can be repeatedly iterated upon).</p>
<p>For your use, you should just copy the deque values each time you want them. Instead of <code>print(D[0])</code>, just do <code>print(list(d))</code> (or just <code>print(d)</code> if you're not picky about the formatting).</p>
</div>
<div class="post-text" itemprop="text">
<p>Per what you commented in the code, if you actually want the dequeue to change as you examine it, why not just pop the items (which contradicts your title)?</p>
</div>
<span class="comment-copy">And what is your question?</span>
<span class="comment-copy">Where did you get the idea that <code>spy</code> would do the thing you're looking for?</span>
