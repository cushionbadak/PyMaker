<div class="post-text" itemprop="text">
<p>I'm processing relatively large images using AWS Lambda (<a href="https://registry.opendata.aws/sentinel-2/" rel="nofollow noreferrer">https://registry.opendata.aws/sentinel-2/</a>). </p>
<p>In order to process these images, I split them into smaller images (~1500 "chips") which can be processed independently (the number of chips varies unpredictably depending on the content of the source image). Chips are processed in parallel using multiple invocations of a Lambda that takes in a "page" of a couple of hundred chips. </p>
<p>Here's where I'm stuck: when all pages have been processed, I need to combine results into a single output image, but how to know when all pages - the "variable batch of invocations" - are complete?</p>
<p>I've considered e.g. writing progress information to s3 or dynamo and invoking the combining function after every page so that only the last invocation of that function goes ahead (when a progress check returns as complete). I've seen options like futures/promises, but the processing time of a page of chips is of the order of 10-15 minutes so I don't want to keep a "controller" function waiting for the futures/promises to complete, because at that point it's cheaper to go with multiple invocations.</p>
<p>Is there a better solution that writing out progress information and checking it multiple times?</p>
<p>(NB I've seen this question: <a href="https://stackoverflow.com/questions/41631548/fork-and-join-with-amazon-lambda">Fork and Join with Amazon Lambda</a>)</p>
</div>
<div class="post-text" itemprop="text">
<p>You could add the chips into a queue with Amazon SQS, and have workers or Lambdas pull those individual jobs off the queue. Then, you can have a cloudwatch alert setup that monitors the depth of your queue, where a queue depth of zero (job completed) triggers a "completion" Lambda that will piece the individual output chips back together. </p>
<p>I believe CloudWatch alerts poll queue statuses in 5 minute intervals, so for your use-case where you have long processing times (~10-15 mins), it wouldn't be the bottleneck here (Lambda timeouts are 15 minutes anyway, so if you set to poll at 15 minutes, your Lambda has either failed or will be completed by then).</p>
<p><em>Step by step, what this would look like:</em></p>
<ol>
<li>Upload new file to S3</li>
<li>Upload triggers a lambda to break apart file into "chips" within a new folder</li>
<li>Add all chips to a new queue</li>
<li>Lambdas pull chips off queue</li>
<li>when queue is empty, trigger conglomeration lambda</li>
</ol>
<p>Here's another helpful answer on setting triggers based on queue status: <a href="https://stackoverflow.com/questions/37144778/efficient-way-to-check-whether-sqs-queue-is-empty">Efficient way to check whether SQS queue is empty</a></p>
</div>
