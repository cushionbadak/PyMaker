<div class="post-text" itemprop="text">
<p>How come that even when only one instance of Redis connection created, every time I call publish or subscribe on that instance, it counts it like another client. So when I connect to redis using python</p>
<pre><code>import redis
redis_server = redis.Redis()
</code></pre>
<p>it does not recognize it as new client. Only when I call one of these </p>
<pre><code>redis_server.publish("channel", message) 
redis_server.subscribe("channel")
</code></pre>
<p>I can see that there are 2 clients connected. Are the pub/sub clients treated seperately in redis? Why not registering connected client when the new connection is open?</p>
</div>
<div class="post-text" itemprop="text">
<p>By default redis-py gives you get a connection pool with only a <em>maximum</em> number of connections. On the first command you issue a real connection will be made and you'll see it appear in the <code>CLIENT LIST</code> on the server.</p>
<p>Whenever any client library for Redis issues a subscribe command, that entire connection is occupied by this, so redis-py is probably creating a separate connection dedicated to this.</p>
<p>This should explain why you see no clients connected, then 2. It's not necessarily 1 connection for every command issued as the connections in the pool will be reused.</p>
</div>
<span class="comment-copy">What do you mean by "it does not recognize"? Recognize how?</span>
<span class="comment-copy">Most likely the client library is opening a new connection from a pool.</span>
<span class="comment-copy">When I run INFO CLIENTS in redis-cli it doesn't show me that there is connected client if I run redis_server = redis.Redis(). However when I run publish or subscribe it shows 3 clients (including redis-cli)</span>
<span class="comment-copy">Ah, is this true only for the pub/sub command or is this true for any command?</span>
<span class="comment-copy">I think only for pub/sub command, since I run "get" and "set" as well and they are not showing as clients.</span>
