<div class="post-text" itemprop="text">
<p>I was trying to make a script that would convert the dates taken from excel from mm/dd/yyyy to dd/m(m)?/yyyy format. Below is my work. I wanted to ask if there is a better, more efficient way to do the same thing with fewer lines of code?</p>
<p>I am a newbie and still learning. Sorry if the code looks silly...</p>
<pre><code>text='''
09/29/2016
07/25/2016
07/25/2016
06/17/2016
06/17/2016
5/5/2016
5/5/2016
4/4/2016
4/4/2016
3/7/2016
3/7/2016
2/8/2016
2/8/2016
2/8/2016
'''
def dataConvert(x):
    text2=list(x.split('\n'))       #makes new list, splits old throug new lines
    del text2[-1]
    text3=[]
    for i in range(len(text2)):     #makes new list, splits old through /
        text3.append(list(text2[i].split('/')))
    for i in range(len(text3)):     #delets ZERO in months, which are still first
        if text3[i][0][0]=='0':
            text3[i][0]=text3[i][0][1]
    for i in range(len(text3)):     #days to front of the sublists
        text3[i].insert(0,text3[i][1])
        del text3[i][2]             #removes days from the middle
    text4=[]
    for i in range(len(text3)):     #joins finished list
        text4.append('/'.join(text3[i]))
    text5='\n'.join(text4)
    print(text5,'\n')
dataConvert(text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>Method 1: string splitting and some indexing:</h1>
<pre><code>text = '''09/29/2016
07/25/2016
07/25/2016
06/17/2016
06/17/2016
5/5/2016
5/5/2016
4/4/2016
4/4/2016
3/7/2016
3/7/2016
2/8/2016
2/8/2016
2/8/2016'''

text2 = text.split('\n')

for date in text2:
    split_up_date = date.split('/') # makes a list in mm/dd/yyyy format
    new_date = "{}/{}/{}".format(split_up_date[1], split_up_date[0], split_up_date[2]) # makes a string in dd/mm/yyyy format
    print(new_date)
</code></pre>
<p>Outputs:</p>
<pre><code>29/09/2016
25/07/2016
25/07/2016
17/06/2016
17/06/2016
5/5/2016
5/5/2016
4/4/2016
4/4/2016
7/3/2016
7/3/2016
8/2/2016
8/2/2016
8/2/2016
</code></pre>
<h1>Method 2: <code>datetime</code> module:</h1>
<pre><code>import datetime

text = '''09/29/2016
07/25/2016
07/25/2016
06/17/2016
06/17/2016
5/5/2016
5/5/2016
4/4/2016
4/4/2016
3/7/2016
3/7/2016
2/8/2016
2/8/2016
2/8/2016'''

text2 = text.split('\n')

for date in text2:
    datetime_date = datetime.datetime.strptime(date, '%m/%d/%Y')
    altered = datetime_date.strftime('%d/%m/%Y')
    print(altered)
</code></pre>
<p>Resulting in:</p>
<pre><code>29/09/2016
25/07/2016
25/07/2016
17/06/2016
17/06/2016
05/05/2016
05/05/2016
04/04/2016
04/04/2016
07/03/2016
07/03/2016
08/02/2016
08/02/2016
08/02/2016
</code></pre>
<p>Which is a nice uniform structure. Furthermore you can easily rearrange it again to your liking using the many formats provided at: </p>
<p><a href="https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow noreferrer">https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior</a></p>
</div>
<span class="comment-copy">Are you aware of the <code>datetime</code> module?</span>
<span class="comment-copy">I am not, good sir. Will check it out! THX!</span>
<span class="comment-copy">I've provided code examples for a couple techniques to solving your problem. If they help I'd appreciate if you click the check mark by my post to accept it as the answer. When you get 15 rep you can upvote helpful answers and questions too!</span>
<span class="comment-copy">Thank you very much!!!! This is it!!! I will look into it. My gratitude!</span>
