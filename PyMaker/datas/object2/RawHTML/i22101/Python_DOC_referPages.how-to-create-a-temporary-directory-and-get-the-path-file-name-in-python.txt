<div class="post-text" itemprop="text">
<p>how to create a temporary directory and get the path / file name in python</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="http://docs.python.org/library/tempfile.html#tempfile.mkdtemp" rel="noreferrer"><code>mkdtemp()</code></a> function from the <a href="http://docs.python.org/library/tempfile.html" rel="noreferrer"><code>tempfile</code></a> module:</p>
<pre class="lang-python prettyprint-override"><code>import tempfile
import shutil

dirpath = tempfile.mkdtemp()
# ... do stuff with dirpath
shutil.rmtree(dirpath)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To expand on another answer, here is a fairly complete example which can cleanup the tmpdir even on exceptions:</p>
<pre><code>import contextlib
import os
import shutil
import tempfile

@contextlib.contextmanager
def cd(newdir, cleanup=lambda: True):
    prevdir = os.getcwd()
    os.chdir(os.path.expanduser(newdir))
    try:
        yield
    finally:
        os.chdir(prevdir)
        cleanup()

@contextlib.contextmanager
def tempdir():
    dirpath = tempfile.mkdtemp()
    def cleanup():
        shutil.rmtree(dirpath)
    with cd(dirpath, cleanup):
        yield dirpath

def main():
    with tempdir() as dirpath:
        pass # do something here
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In python 3.2 and later, there is a useful contextmanager for this in the stdlib <a href="https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryDirectory" rel="noreferrer">https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryDirectory</a></p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, <a href="https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryDirectory" rel="nofollow noreferrer">TemporaryDirectory</a> in the <a href="https://docs.python.org/3/library/tempfile.html#module-tempfile" rel="nofollow noreferrer">tempfile</a> module can be used.</p>
<p>This is straight from the <a href="https://docs.python.org/3/library/tempfile.html#tempfile-examples" rel="nofollow noreferrer">examples</a>:</p>
<pre><code>import tempfile
with tempfile.TemporaryDirectory() as tmpdirname:
     print('created temporary directory', tmpdirname)
# directory and contents have been removed
</code></pre>
<p>If you would like to keep the directory a bit longer, then something like this could be done (not from the example):</p>
<pre><code>import tempfile
import shutil

temp_dir = tempfile.TemporaryDirectory()
print(temp_dir.name)
# use temp_dir, and when done:
shutil.rmtree(temp_dir.name)
</code></pre>
</div>
<span class="comment-copy">Use module <a href="http://docs.python.org/library/tempfile.html" rel="nofollow noreferrer">tempfile</a>.</span>
<span class="comment-copy">If you use this in a test be sure to remove (shutil.rmtree) the directory because it's not automatically deleted after use. "The user of mkdtemp() is responsible for deleting the temporary directory and its contents when done with it." See: <a href="http://docs.python.org/2/library/tempfile.html#tempfile.mkdtemp" rel="nofollow noreferrer">docs.python.org/2/library/tempfile.html#tempfile.mkdtemp</a></span>
<span class="comment-copy">In python3, you can do <code>with tempfile.TemporaryDirectory() as dirpath:</code>, and the temporary directory will automatically cleaned up upon exiting the context manager. <a href="https://docs.python.org/3.4/library/tempfile.html#tempfile.TemporaryDirectory" rel="nofollow noreferrer">docs.python.org/3.4/library/â€¦</a></span>
<span class="comment-copy">See also <a href="http://stackoverflow.com/a/24176022/263998">stackoverflow.com/a/24176022/263998</a></span>
<span class="comment-copy">More useful than the accepted answer!!!</span>
