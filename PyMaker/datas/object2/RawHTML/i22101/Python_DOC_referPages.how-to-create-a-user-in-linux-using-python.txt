<div class="post-text" itemprop="text">
<p>How do I create a user in Linux using Python? I mean, I know about the subprocess module and thought about calling 'adduser' and passing all the parameters at once, but the 'adduser' command asks some questions like password, full name, phone and stuff. How would I answer this questions using subprocess?
   I've seen  module called pexpect in this question: <a href="https://stackoverflow.com/questions/209470/can-i-use-python-as-a-bash-replacement">Can I use Python as a Bash replacement?</a>. Is there any other standard module?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>useradd</code>, it doesn't ask any questions but accepts many command line options.</p>
</div>
<div class="post-text" itemprop="text">
<p>On Ubuntu, you could use the <a href="http://packages.ubuntu.com/lucid/python-libuser" rel="noreferrer">python-libuser</a> package</p>
</div>
<div class="post-text" itemprop="text">
<p>You could just use the built-in binaries so just call useradd or something through the subprocess module, However I don't know if there's any other modules that hook into Linux to provide such functionality.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
import crypt

password ="p@ssw0rd" 
encPass = crypt.crypt(password,"22")
os.system("useradd -p "+encPass+" johnsmith")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def createUser(name,username,password):
    encPass = crypt.crypt(password,"22")   
    return  os.system("useradd -p "+encPass+ " -s "+ "/bin/bash "+ "-d "+ "/home/" + username+ " -m "+ " -c \""+ name+"\" " + username)
</code></pre>
</div>
<span class="comment-copy">how about using <code>libuser</code> python binding to perform this operation?</span>
<span class="comment-copy">Is this a ubuntu-only package? If I need to run it on other distros, will I have to manually install this package?</span>
<span class="comment-copy">You are probably better off with <code>useradd</code> for cross-distribution compatibility, but note that even <code>useradd</code> is not guaranteed to be available on all distros. Puppy Linux I believe does not come with useradd by default, for example.</span>
<span class="comment-copy">For Debian <a href="https://packages.debian.org/en/sid/python-libuser" rel="nofollow noreferrer">packages.debian.org/en/sid/python-libuser</a></span>
<span class="comment-copy">what's the number 22 for? Is this still the proper way to encrypt in 2017?</span>
<span class="comment-copy">22 is a salt. You can use random values. If you want to extra security you can use sha-256 or sha-512</span>
<span class="comment-copy">What's the number 22 for? Also, would subprocess be better than os.system?</span>
<span class="comment-copy">@answerSeeker it is salt. salt is a 2-character string which will be used to select one of 4096 variations of DES. (from pydoc)</span>
<span class="comment-copy">sorry for the necrobump, but crypt can generate a salt for you, no need to specify.      salt = crypt.mksalt(crypt.METHOD_SHA512)     salthash = crypt.crypt(password, salt)  see <a href="https://docs.python.org/3/library/crypt.html#crypt.mksalt" rel="nofollow noreferrer">here</a> for more info.</span>
