<div class="post-text" itemprop="text">
<p>I am getting the following error:</p>
<pre><code>WindowsError: [Error 2] The system cannot find the file specified
</code></pre>
<p>My code is:</p>
<pre><code>subprocess.call(["&lt;&lt;executable file found in PATH&gt;&gt;"])
</code></pre>
<p>Windows 7, 64 bit. Python 3.x latest, stable.</p>
<p>Any ideas?</p>
<p>Thanks,</p>
</div>
<div class="post-text" itemprop="text">
<p>When the command is a shell built-in, add a 'shell=True' to the call.</p>
<p>E.g. for <code>dir</code> you would type:</p>
<pre><code>import subprocess
subprocess.call('dir', shell=True)
</code></pre>
<p>To quote from the documentation:</p>
<blockquote>
<p>The only time you need to specify shell=True on Windows is when the command you wish to execute is built into the shell (e.g. dir or copy). You do not need shell=True to run a batch file or console-based executable.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>On Windows, I believe the <code>subprocess</code> module doesn't look in the <code>PATH</code> unless you pass <code>shell=True</code>. However, <code>shell=True</code> can be a security risk if you're passing arguments that may come from outside your program. To make <code>subprocess</code> nonetheless able to find the correct executable, you can use <a href="https://docs.python.org/3/library/shutil.html#shutil.which" rel="noreferrer"><code>shutil.which</code></a>. Suppose the executable in your <code>PATH</code> is named <code>frob</code>:</p>
<pre><code>subprocess.call([shutil.which('frob'), arg1, arg2])
</code></pre>
<p>(This works on Python 3.3 and above.)</p>
</div>
<div class="post-text" itemprop="text">
<p>On Windows you have to call through cmd.exe. As Apalala mentioned, Windows commands are implemented in cmd.exe not as separate executables.</p>
<p>e.g. </p>
<pre><code>subprocess.call(['cmd', '/c', 'dir'])
</code></pre>
<p>/c tells cmd to run the follow command</p>
<p>This is safer than using shell=True, which allows shell injections.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you are using powershell, then in it will be <code>subprocess.call(['powershell','-command','dir'])</code>. Powershell supports a large portion of POSIX commands</p>
</div>
<div class="post-text" itemprop="text">
<p>To quote from the documentation:</p>
<p>"Prior to Python 3.5, these three functions comprised the high level API to subprocess. You can now use run() in many cases, but lots of existing code calls these functions."</p>
<p>SO: instead of subprocess.call use subprocess.run for Python 3.5 and above</p>
</div>
<span class="comment-copy">and what is this executable file?</span>
<span class="comment-copy">The "android" executable part of the Android SDK</span>
<span class="comment-copy">And is <i>is</i> available on PATH</span>
<span class="comment-copy">can you run it from the command line?</span>
<span class="comment-copy">A little background of what I'm trying to accomplish. This is for Opendevice - an open source project to convert HTML5 apps into device specific apps.  I'm trying to replace os.system() in <a href="http://bitbucket.org/srirangan/opendevice/src/tip/tools/net/srirangan/opendevice/plugins/AndroidPlugin.py" rel="nofollow noreferrer">bitbucket.org/srirangan/opendevice/src/tip/tools/net/srirangan/…</a> to subprocess.call()</span>
<span class="comment-copy">That's because there's no executable called <code>dir.exe</code> while there's a <code>/bin/ls</code> in *nix. <code>dir</code> is implemented by <i>CMD.EXE</i> much like <code>cd</code> is implemented by <i>bash</i>.</span>
<span class="comment-copy">This is strongly discouraged. <a href="https://docs.python.org/2/library/subprocess.html#frequently-used-arguments" rel="nofollow noreferrer">docs.python.org/2/library/…</a></span>
<span class="comment-copy">@nueverest Only when the <i>the command string is constructed from external input</i></span>
<span class="comment-copy">The alternative (more secure for external input) is to get the <code>PATH</code> from the <code>os.environ</code> and search it manually.</span>
<span class="comment-copy">Any python 2 option?</span>
<span class="comment-copy">You're right and you're suggesting the right way to fix it. This answer should be accepted. The currently accepted answer doesn't explain the cause and is suggesting a fix which may be dangerous in some cases.</span>
<span class="comment-copy">How would I keep the screen open?</span>
<span class="comment-copy">@Moondra, If I understand you correctly, try <code>/k</code> instead of <code>/c</code>. Enter <code>cmd /?</code> at the command line for details.</span>
<span class="comment-copy">@User5910 Thank you. Will give it a try when I get a chance.</span>
<span class="comment-copy">This works better than using cmd. Thank you.</span>
