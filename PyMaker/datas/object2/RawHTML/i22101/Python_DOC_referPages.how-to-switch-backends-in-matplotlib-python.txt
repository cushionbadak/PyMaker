<div class="post-text" itemprop="text">
<p>I am struggling with the following issue. I need to generate reports that consists of a collection of charts. All these charts, except one, are made using Matplotlib default backend (TkAgg). One chart needs to be made using the Cairo backend, the reason is that I am plotting an igraph graph and that can only be plotted using Cairo. </p>
<p>The issue is that I cannot change backends on the fly, for example the following does not work:<br/>
<code>matplotlib.pyplot.switch_backend('cairo.png')</code>
(I know that the switch_backend functionality is experimental)</p>
<p>and I have also tried <code>matplotlib.use("cairo.png")</code> but this leads to import problems as the <code>matplotlib.use("cairo.png")</code> statement should come before importing <code>matplotlib.pyplot</code>. 
but I need two different backends over the course of the life of the script. </p>
<p>So my question is does someone have a code snippet that shows how to switch the backend in Matplotlib?</p>
<p>Thanks so much!</p>
<p>UPDATE:
I have written a snippet that loads matplotlib, shows the default backend, unloads matplotlib, reloads it and changes the backend:</p>
<pre><code>import matplotlib
import matplotlib.pyplot as plt
import sys
print matplotlib.pyplot.get_backend()

modules = []
for module in sys.modules:
    if module.startswith('matplotlib'):
        modules.append(module)

for module in modules:
    sys.modules.pop(module)

import matplotlib
matplotlib.use("cairo.png")
import matplotlib.pyplot as plt

print matplotlib.pyplot.get_backend()
</code></pre>
<p>but is this really the way to do it? </p>
<p>UPDATE 2: I had some serious brain freeze yesterday... The simple and most obvious solution is to use the Cairo backend for all charts and not to switch the backend at all :)</p>
<p>UPDATE 3: Actually, it's still an issue so anybody who knows how to dynamically switch matplotlib backends....please post your answer. </p>
</div>
<div class="post-text" itemprop="text">
<p>Six years later and I came across a similar issue, when trying to decide which <code>backend</code> was available to use.<br/>
This code snippet works well for me:</p>
<pre><code>import matplotlib
gui_env = ['TKAgg','GTKAgg','Qt4Agg','WXAgg']
for gui in gui_env:
    try:
        print "testing", gui
        matplotlib.use(gui,warn=False, force=True)
        from matplotlib import pyplot as plt
        break
    except:
        continue
print "Using:",matplotlib.get_backend()

Using: GTKAgg
</code></pre>
<p>As you can deduce, swapping the <code>backend</code> is as simple as re-importing <code>matplotlib.pyplot</code> after forcing the new <code>backend</code></p>
<pre><code>matplotlib.use('WXAgg',warn=False, force=True)
from matplotlib import pyplot as plt
print "Switched to:",matplotlib.get_backend()

Switched to: WXAgg
</code></pre>
<p>For those still having trouble, this code will print out the:<br/>
list of Non Gui backends;<br/>
the list of Gui backends;<br/>
and then attempt to use each Gui backend to see if it is present and functioning.</p>
<pre><code>import matplotlib
gui_env = [i for i in matplotlib.rcsetup.interactive_bk]
non_gui_backends = matplotlib.rcsetup.non_interactive_bk
print ("Non Gui backends are:", non_gui_backends)
print ("Gui backends I will test for", gui_env)
for gui in gui_env:
    print ("testing", gui)
    try:
        matplotlib.use(gui,warn=False, force=True)
        from matplotlib import pyplot as plt
        print ("    ",gui, "Is Available")
        plt.plot([1.5,2.0,2.5])
        fig = plt.gcf()
        fig.suptitle(gui)
        plt.show()
        print ("Using ..... ",matplotlib.get_backend())
    except:
        print ("    ",gui, "Not found")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is an "experimental" feature : </p>
<pre><code>import matplotlib.pyplot as plt
plt.switch_backend('newbackend')
</code></pre>
<p>taken from <a href="http://matplotlib.sourceforge.net/api/matplotlib_configuration_api.html" rel="nofollow noreferrer">matplotlib doc</a>.</p>
<blockquote>
<p>Switch the default backend to newbackend.  This feature is
      <strong>experimental</strong>, and is only expected to work switching to an
      image backend.  Eg, if you have a bunch of PostScript scripts that
      you want to run from an interactive ipython session, you may want
      to switch to the PS backend before running them to avoid having a
      bunch of GUI windows popup.  If you try to interactively switch
      from one GUI backend to another, you will explode.
      Calling this command will close all open windows.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Why not just use the <a href="http://docs.python.org/2/library/functions.html#reload" rel="noreferrer"><code>reload</code></a> built-in function (<a href="https://docs.python.org/3/library/importlib.html#importlib.reload" rel="noreferrer"><code>importlib.reload</code></a> in Python 3)? </p>
<pre><code>import matplotlib
matplotlib.use('agg')

matplotlib = reload(matplotlib)
matplotlib.use('cairo.png')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So I am not completely sure if this is what you are looking for. </p>
<p>You can change your backend through the matplotlibrc file which contains certain configurations for your matplotlib.</p>
<p>In your script you can put: </p>
<pre><code>matplotlib.rcParams['backend'] = 'TkAgg' 
</code></pre>
<p>or something like that to switch between backends. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could also have a different Python process make that plot, possibly with the help of pickle or <a href="http://packages.python.org/joblib/" rel="nofollow">joblib</a>.</p>
</div>
<span class="comment-copy">There is <code>pyplot.switch_backends()</code>. It might not work in your case.</span>
<span class="comment-copy">Thanks! This worked great helping me find the appropriate back-end for this example: <a href="http://stackoverflow.com/questions/11874767/real-time-plotting-in-while-loop-with-matplotlib" title="real time plotting in while loop with matplotlib">stackoverflow.com/questions/11874767/â€¦</a></span>
<span class="comment-copy">@JamesNelson Glad to hear that an answer that was 6 years late, was of use</span>
<span class="comment-copy">Rolf of Saxony, LOL very helpful, I still get responses on Ubuntu and Android post from nearly a decade ago.</span>
<span class="comment-copy">I spent 5 hours until reaching this. Thank you so much.</span>
<span class="comment-copy">Unrecognized backend string "newbackend". What should I do?</span>
<span class="comment-copy">@TSR Replace 'newbackend' with a GUI backend such as 'Qt4Agg'</span>
<span class="comment-copy">This does not work if you have imported pyplot.</span>
<span class="comment-copy">As in you can't reload matplotlib and matplotlib.pyplot? Or are you just saying that my code snipped is incomplete?</span>
<span class="comment-copy">Hmm. Might have actually been a quirk of IPython. Seems to work well in the regular console.</span>
<span class="comment-copy">Made an edit so I can change my vote. Hope you don't mind. I can revert it if you don't like it.</span>
<span class="comment-copy">I think this is an example, that shows, that it does not work: <code>python -c "import matplotlib.pyplot as plt; import matplotlib; from importlib import reload;  matplotlib = reload(matplotlib); matplotlib.use('Agg')"</code> Is that right?</span>
<span class="comment-copy">Indeed, you can specify the backend in your rcParams dictionary but that does not solve the problem of switching from one backend to another one.</span>
<span class="comment-copy">thnx buddy, saved alot of time</span>
<span class="comment-copy">you may also set the default backend in config file which is picked up by matplotlib: <code>~/.config/matplotlib/matplotlibrc</code></span>
