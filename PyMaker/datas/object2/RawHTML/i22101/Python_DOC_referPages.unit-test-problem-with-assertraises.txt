<div class="post-text" itemprop="text">
<p>I am trying to test for an exception.</p>
<p>I have:</p>
<pre><code>def test_set_catch_status_exception(self):
    mro = self.mro
    NEW_STATUS = 'No such status'
    self.assertRaises(ValueError,mro.setStatus(NEW_STATUS))
</code></pre>
<p>I get the following error:</p>
<pre><code>======================================================================
ERROR: test_set_catch_status_exception (__main__.TestManagementReviewGoalGetters)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test_ManagementReviewObjective.py", line 68, in test_set_catch_status_exception
    self.assertRaises(ValueError,mro.setStatus(NEW_STATUS))
  File "/Users/eric/Dropbox/ManagementReview.py", line 277, in setStatus
    raise ValueError('%s is not in the list of allowed statuses: %s' % (status,LIST_OF_STATUSES))
ValueError: No such status is not in the list of allowed statuses: ['Concern or Delay', 'On Track', 'Off Track/Needs Attention']

----------------------------------------------------------------------
</code></pre>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p><code>self.assertRaises</code> expects a function <code>mro.setStatus</code>, followed by an arbitrary number of arguments: in this case, just <code>NEW_STATUS</code>. <code>self.assertRaises</code> assembles its arguments into the function call <code>mro.setStatus(NEW_STATUS)</code> inside a <code>try...except</code> block, thus catching and recording the <code>ValueError</code> if it occurs. </p>
<p>Passing <code>mro.setStatus(NEW_STATUS)</code> as an argument to <code>self.assertRaises</code> causes the <code>ValueError</code> to occur before <code>self.assertRaises</code> can trap it.</p>
<p>So the fix is to change the parentheses to a comma:</p>
<pre><code>self.assertRaises(ValueError,mro.setStatus,NEW_STATUS)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Be careful if you're using <code>factory boy</code>, this package doesn't allow the exception to be raised to the assert level which will always fail</p>
</div>
<span class="comment-copy">That did it! Thanks. :)</span>
<span class="comment-copy">@Eric: No problem. </span>
<span class="comment-copy">I am using python 3.3 interpreter in pycharm IDE. What if I want to pass arguments to the function under test and also include a message in case the desired error is not raised ? Example - <code>self.assertRaises(ValueError, person.set_age_method, -10, "Error: Person's age cannot be negative.")</code> With this, I get an exception: <code>set_age_method takes 2 positional arguments but 3 were given</code>. How do I fix this ? Btw, the docs for this assertion don't clearly tell you how to do it. <a href="https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises" rel="nofollow noreferrer">docs.python.org/3/library/…</a> . What is **kwds ?</span>
