<div class="post-text" itemprop="text">
<p>I have downloaded a page using urlopen. How do I remove all html tags from it? Is there any regexp to replace all &lt;*&gt; tags?</p>
</div>
<div class="post-text" itemprop="text">
<p>A very simple regexp would be :</p>
<pre><code>import re
notag = re.sub("&lt;.*?&gt;", " ", html)
</code></pre>
<p>The drawback of this solution is that it doesn't remove javascript or css, but only tags.</p>
</div>
<div class="post-text" itemprop="text">
<p>I can also recommend <a href="http://www.crummy.com/software/BeautifulSoup/" rel="noreferrer">BeautifulSoup</a> which is an easy to use html parser. There you would do something like:</p>
<pre><code>from BeautifulSoup import BeautifulSoup

soup = BeautifulSoup(html)
all_text = ''.join(soup.findAll(text=True))
</code></pre>
<p>This way you get all the text from a html document.</p>
</div>
<div class="post-text" itemprop="text">
<p>There's a great python library called bleach.  This call below will remove all html tags, leaving everything else (but not removing the content inside tags that are not visible).</p>
<pre><code>bleach.clean(thestring, tags=[], attributes={}, styles=[], strip=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>import re

def remove_html_tags(data):
  p = re.compile(r'&lt;.*?&gt;')
  return p.sub('', data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you need HTML parsing, Python has <a href="http://docs.python.org/library/htmlparser.html" rel="nofollow noreferrer">a module</a> for you!</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="http://www.aaronsw.com/2002/html2text/" rel="nofollow noreferrer">html2text</a> which is supposed to make a readable text equivalent from an HTML source (programatically with Python or as a command-line tool).
Thus I may extrapolate your needs from your question...</p>
</div>
<div class="post-text" itemprop="text">
<p>There are multiple options to filter out html tags from data. you can use Regex or core python. but use simple way:</p>
<p><code>import remove_tags
data_to_remove = '&lt;p&gt;hello\t\t, \tworld\n&lt;/p&gt;'
print remove_tags(data_to_remove)</code></p>
<p>OUTPUT: hello world</p>
</div>
<span class="comment-copy">No. <a href="http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags/1732454#1732454" title="regex match open tags except xhtml self contained tags">stackoverflow.com/questions/1732348/â€¦</a></span>
<span class="comment-copy">That one will fail on you if you have non-escaped '&lt;' and '&gt;' characters outside or inside of the actual tags. If that is not an issue, you can use a regexp. If not, you will need to use an actual html/xml parser.</span>
<span class="comment-copy">-1: Ill-advised, brittle solution.  It will be hard to debug the page with one extra "&lt;" or "&gt;" that breaks this.</span>
<span class="comment-copy">It's simple and efficient, a great of cleaning data simply, I personnaly use it daily. When it comes to a more complicated problems, I then use BeautifulSoup, but please : let's keep simple problems <i>simples</i>. The case you're evoking here will be rare, if not unexistant. Taking it into account would be necessary ONLY if you need ALL your potential data, and you need it absolutely clean.</span>
<span class="comment-copy">There are only about a thousand ways this can fail, and absolutely will for real web pages.</span>
<span class="comment-copy">@bobince I personnaly don't work with fake web pages.</span>
<span class="comment-copy">This requires an external library which is not always a solution to meet the needs of certain folk where they wish to distribute the script.</span>
<span class="comment-copy">your argument is invalid.</span>
<span class="comment-copy">Why downvoted? Seems perfectly reasonable.</span>
<span class="comment-copy">I agree. This code did exactly what I wanted it to do.</span>
<span class="comment-copy">Correct link: <a href="https://docs.python.org/3/library/html.parser.html" rel="nofollow noreferrer">docs.python.org/3/library/html.parser.html</a></span>
