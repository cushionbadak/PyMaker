<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/277922/python-argument-binders">Python Argument Binders</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I have a number of functions with a combination of positional and keyword arguments, and I would like to bind one of their arguments to a given value (which is known only after the function definition). Is there a general way of doing that?</p>
<p>My first attempt was:</p>
<pre><code>def f(a,b,c): print a,b,c

def _bind(f, a): return lambda b,c: f(a,b,c)

bound_f = bind(f, 1)
</code></pre>
<p>However, for this I need to know the exact args passed to <code>f</code>, and cannot use a single function to bind all the functions I'm interested in (since they have different argument lists).</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; from functools import partial
&gt;&gt;&gt; def f(a, b, c):
...   print a, b, c
...
&gt;&gt;&gt; bound_f = partial(f, 1)
&gt;&gt;&gt; bound_f(2, 3)
1 2 3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You probably want the <a href="http://docs.python.org/library/functools.html#functools.partial" rel="noreferrer"><code>partial</code></a> function from functools.</p>
</div>
<div class="post-text" itemprop="text">
<p>As suggested by MattH's <a href="https://stackoverflow.com/a/3188134/2289509">answer</a>, <code>functools.partial</code> is the way to go. </p>
<p>However, your question can be read as "how can I implement <code>partial</code>". What your code is missing is the use of <a href="https://stackoverflow.com/q/36901/2289509"><code>*args</code>, <code>**kwargs</code></a>- 2 such uses, actually:</p>
<pre><code>def partial(f, *args, **kwargs):
    def wrapped(*args2, **kwargs2):
        return f(*args, *args2, **kwargs, **kwargs2)
    return wrapped
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>partial</code></a> and <a href="https://docs.python.org/3/library/functools.html#functools.update_wrapper" rel="nofollow noreferrer"><code>update_wrapper</code></a> to bind arguments to given values and <em>preserve</em> <code>__name__</code> and <code>__doc__</code> of the original function:</p>
<pre><code>from functools import partial, update_wrapper


def f(a, b, c):
    print(a, b, c)


bound_f = update_wrapper(partial(f, 1000), f)

# This will print 'f'
print(bound_f.__name__)

# This will print 1000, 4, 5
bound_f(4, 5)
</code></pre>
</div>
