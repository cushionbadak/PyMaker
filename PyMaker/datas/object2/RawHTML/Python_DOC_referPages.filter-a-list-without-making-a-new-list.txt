<div class="post-text" itemprop="text">
<p>So I'm working on a project where I have a list of objects. I would like to filter the list based on an object attribute, but since this list is used in many other places in my code, I can't create a new list as it will create problems elsewhere in my codes. </p>
<p>I have tried to use this: </p>
<pre><code>individuals = list(filter(lambda x: x.waterstore &gt; 0, individuals))
</code></pre>
<p>but it gives me "UnboundLocalError: local variable 'individuals' referenced before assignment".</p>
<p>Here is the code where the problem occurs. </p>
<pre><code>def day(numberOfDays):
   days = 0
   while days &lt; numberOfDays:
       print(str(days) + " days")
       child = randint(1,100)
       if child &gt; 95:
           IndividualGenerator(randint(1,2))
       SeekWaterHole(individuals, lakes)
       rain(lakes)
       DrinkWater(individuals, lakes)
       for r in range(len(individuals)):
           individuals[r].waterstore -= 1
       individuals = list(filter(lambda x: x.waterstore &gt; 0,individuals))
       individualTotalWater = []
       for i in individuals:
           individualTotalWater.append(i.waterstore)
       AmountWater = lakes[0].water
       Logg = [AmountWater, sum(individualTotalWater), len(individuals)]
       with open("NewCSVTestFile.csv", "a") as f:
               openfile = csv.writer(f, delimiter=",")
               openfile.writerow(Logg)
       print("logg " + str(Logg))
       print()
       days += 1
</code></pre>
<p>Any suggestion?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>"UnboundLocalError: local variable 'individuals' referenced before assignment".</p>
</blockquote>
<p>Your first reference to <code>individuals</code> occurs here:</p>
<pre><code>SeekWaterHole(individuals, lakes)
</code></pre>
<p>but it is not yet defined in your function, nor given as input to the function. Hence python does not know to what it references.</p>
</div>
<div class="post-text" itemprop="text">
<p>you can add individuals[] as an empty list just before the line of error or u can initialize individuals as an global.</p>
<pre><code>from random import randint
def day(numberOfDays):
individuals=''
days = 0
while days &lt; numberOfDays:
    print(str(days) + " days")
    child = randint(1,100)
    #if child &gt; 95:
        #IndividualGenerator(randint(1,2))
    individuals=[]//initialize the list before using it
    #SeekWaterHole(individuals, lakes)
    #rain(lakes)
    #DrinkWater(individuals, lakes)
    for r in range(len(individuals)):
        individuals[r].waterstore -= 1
    individuals = list(filter(lambda x: x.waterstore &gt; 0,individuals))
    individualTotalWater = []
    for i in individuals:
        individualTotalWater.append(i.waterstore)
    #AmountWater = lakes[0].water
    #Logg = [AmountWater, sum(individualTotalWater), len(individuals)]
    #with open("NewCSVTestFile.csv", "a") as f:
    #        openfile = csv.writer(f, delimiter=",")
    #        openfile.writerow(Logg)
    #print("logg " + str(Logg))
    print()
    days += 1
day(10)
</code></pre>
</div>
<span class="comment-copy">You just have to initialize <code>individuals</code> <i>somewhere</i>; what do you think <code>filter</code> is filtering?</span>
<span class="comment-copy">Where does <code>individuals</code> come from for the preceding calls to <code>SeekWaterHold</code> and <code>DrinkWater</code> and the preceding <code>for</code> loop?</span>
<span class="comment-copy">The reason for your <code>UnboundLocalError</code> seems to be the call to <code>SeekWaterHole</code> on line 8, where you indeed use <code>individuals</code> before you assign it in line 13. Note that you do this again in line 10.</span>
<span class="comment-copy">Maybe I did not show enough of the total code, individuals are already a list of objects before def day(NumberOfDays). Both "SeekWaterHole" and "DrinkWater" works fine until I add individuals = list(filter(lambda x: x.waterstore &gt; 0,individuals))</span>
<span class="comment-copy">if I change to NewListIndividuals = list(filter(lambda x: x.waterstore &gt; 0,individuals)) I do not get UnboundLocalError. I dont understand why</span>
<span class="comment-copy">ah, now I understand. By adding "global individuals" on top of the code it works!  '</span>
<span class="comment-copy">This brings up a new question... Why does the code works fine if I write "NewListIndividuals = list(filter(lambda x: x.waterstore &gt; 0,individuals))?  but I get an error if I write "individuals = list(filter(lambda x: x.waterstore &gt; 0,individuals))"?  In the first case "SeekWaterHole" and "Drinkwater" has no problems, but in the second case, it does.  I don't understand how "global individuals" would not be necessary in the first case, but necessary in the second.</span>
<span class="comment-copy">See here for <code>global</code> keyword in pyhton: <a href="https://stackoverflow.com/questions/423379/using-global-variables-in-a-function" title="using global variables in a function">stackoverflow.com/questions/423379/â€¦</a></span>
