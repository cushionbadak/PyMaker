<div class="post-text" itemprop="text">
<p>I have a data frame with more then 1mil values. The task is, to sum it up these values in the range of every 5 minutes.
In other words from 0 to first 5 minutes, then 10 minutes, then 15 and so on. But there are over 30-33 days.
This is my data:</p>
<pre><code>                                    Size
                        DateTime                              
2018-10-19 04:14:01.015000+00:00     2
2018-10-19 04:14:01.546000+00:00     1
2018-10-19 04:15:01.290000+00:00     1
2018-10-19 04:15:01.291000+00:00    10
2018-10-19 04:15:01.821000+00:00     1
2018-10-19 04:15:01.821000+00:00     1
2018-10-19 04:15:02.352000+00:00     1
2018-10-19 04:15:02.352000+00:00     1
2018-10-19 04:15:02.883000+00:00     1
2018-10-19 04:15:02.884000+00:00     1
2018-10-19 04:15:03.413000+00:00     1
2018-10-19 04:15:03.414000+00:00     1
2018-10-19 04:15:03.943000+00:00     1
2018-10-19 04:15:03.943000+00:00     1
2018-10-19 04:15:04.474000+00:00     1
2018-10-19 04:15:04.474000+00:00     1
2018-10-19 04:15:05.003000+00:00     1
2018-10-19 04:15:05.003000+00:00     1
2018-10-19 04:15:05.334000+00:00     1
2018-10-19 04:15:05.336000+00:00     1
...
2018-11-26 19:59:33.928000+00:00     1
2018-11-26 19:59:37.221000+00:00     1
2018-11-26 19:59:41.808000+00:00     1
2018-11-26 19:59:42.338000+00:00     1
2018-11-26 19:59:45.520000+00:00     1
2018-11-26 19:59:52.059000+00:00     1
2018-11-26 19:59:52.589000+00:00     1
2018-11-26 19:59:54.714000+00:00     1
2018-11-26 19:59:55.244000+00:00     1
2018-11-26 19:59:56.297000+00:00     1
2018-11-26 19:59:57.888000+00:00     1
2018-11-26 19:59:59.008000+00:00     1
2018-11-26 20:00:00.071000+00:00     1
2018-11-26 20:51:04.606000+00:00     1
2018-11-26 20:51:57.307000+00:00     1
</code></pre>
<p>As you can see, it's pretty lots of rows in there. I have some ideas about how to do it, but I'm stuck.
Well, data range could be set like: </p>
<pre><code>data[data.index.minute % 5 == 0]
</code></pre>
<p>But how could I sum values before this and in the next range ?</p>
</div>
<div class="post-text" itemprop="text">
<p>With <code>resample</code>:</p>
<pre><code>data.resample('5min')['Size'].sum()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Grouper.html" rel="nofollow noreferrer"><code>pd.Grouper()</code></a> here with <code>freq=5min</code> </p>
<p><strong>note</strong> I only used the top rows of your example data, above the <code>..</code></p>
<pre><code>df_sum = df.groupby(pd.Grouper(key='DateTime', freq='5min', axis=1)).Size.sum().reset_index()

print(df_sum)

             DateTime  Size
0 2018-10-19 04:10:00     3
1 2018-10-19 04:15:00    27
</code></pre>
</div>
<span class="comment-copy">Can you please clarify how you expect the output to look like?</span>
<span class="comment-copy">@perl I need to analyze those data and then plot it to see what time is the best size</span>
<span class="comment-copy">So do you want to sum up all the values with minute % 5 == 0, 1,..., 4 (so 5 groups in total) or resample the data by 5 min intervals and sum up values in each interval? (or is it something other than these two options?)</span>
<span class="comment-copy">@perl nope, note 5 groups, but you're absolutely right about intervals (for example: from started point to next 5 minutes - sum up, then, from 5 minutes to 10 minutes - sum up in and so on). Sorry for my English, I hope you got it correct</span>
<span class="comment-copy">OK, cool, so then I think <code>resample</code> should work, please see my answer</span>
<span class="comment-copy">Yup, it does worked out for me, appreciate. You're the best !!!)</span>
<span class="comment-copy">sorry for interrupt, but could you help me to deal with one more problem: I need to move all days in one to see how size depends on time</span>
<span class="comment-copy">You mean time of the day, right? Let's say you already have you resampled dataset <code>x = data.resample('5min').sum()</code>, then you can group it by time regardless of the date with <code>x.groupby(x.index.time).sum()</code></span>
<span class="comment-copy">damn, you're the maestro, I wish I could be such a badass data analyst))))</span>
<span class="comment-copy">thanks, it looks properly, but I got this error : IndexError: indices are out-of-bounds</span>
<span class="comment-copy">If you reset your index with <code>.reset_index()</code>, your <code>DateTime</code> index becomes a column and then it should work,</span>
<span class="comment-copy">I think the problem is in DateTime, it's not a column, but index. Actually, whis works - data.reset_index().groupby(pd.Grouper(key = 'DateTime', freq ='300s', axis=1)).Size.sum()</span>
<span class="comment-copy">you're really helped me out, much obliged!</span>
