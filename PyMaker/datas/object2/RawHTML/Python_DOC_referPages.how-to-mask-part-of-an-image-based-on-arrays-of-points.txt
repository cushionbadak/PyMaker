<div class="post-text" itemprop="text">
<p>I would like to mask out everything outside of the "V" region defined by the splines I've created. The result I'm after is a 3D array where the regions outside the "V" are set to 0 or 255.</p>
<p>I'm not interested in using <code>fill_between</code>, as I need the region of interest for later processing with CV2.
Thanks!</p>
<p><a href="https://i.stack.imgur.com/Ag4AA.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Ag4AA.png"/></a></p>
<p>Final image should look like this
<a href="https://i.stack.imgur.com/HfnqJ.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/HfnqJ.png"/></a></p>
<p>Here's what I have:</p>
<pre><code>import matplotlib.pyplot as plt
from scipy import misc, interpolate

# Show the image  ---------------- |
f = misc.face()
plt.imshow(f)

# Make the V shape ---------------- |
x1 = [200, 400, 600]
y1 = [0, 300, f.shape[0]]

# Fit spline
tck = interpolate.splrep(x1, y1, k=2)
xx1 = range(min(x1), max(x1))
yy1 = interpolate.splev(xx1, tck)

# Repeat
x2 = [700, 850, 960]
y2 = [f.shape[0], 200, 0]

# Fit spline
tck = interpolate.splrep(x2, y2, k=2)
xx2 = range(min(x2), max(x2))
yy2 = interpolate.splev(xx2, tck)

# Plot splines ---------------- |
plt.plot(xx1, yy1, 'r-', lw=4)
plt.plot(xx2, yy2, 'r-', lw=4)
plt.show()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There must be a better way. But here it is, using interpolation and iterating.</p>
<pre><code>import matplotlib.pyplot as plt
from scipy import misc, interpolate

# Show the image  ---------------- |
im = misc.face().copy()
plt.imshow(f)

# Make the V shape ---------------- |
x1 = [200, 400, 600]
y1 = [0, 300, f.shape[0]]

# Fit spline
tck = interpolate.splrep(x1, y1, k=2)
xx1 = range(min(x1), max(x1))
yy1 = interpolate.splev(xx1, tck)

# Repeat
x2 = [700, 850, 960]
y2 = [f.shape[0], 200, 0]

# Fit spline
tck = interpolate.splrep(x2, y2, k=2)
xx2 = range(min(x2), max(x2))
yy2 = interpolate.splev(xx2, tck)

# Plot splines ---------------- |
plt.plot(xx1, yy1, 'r-', lw=4)
plt.plot(xx2, yy2, 'r-', lw=4)

# Solution - Mask the sides
xx_interp = range(im.shape[0])
yy_interp1 = np.round(np.interp(xx_interp, yy1, xx1)).astype(int)
yy_interp2 = np.round(np.interp(xx_interp, yy2[::-1], xx2[::-1])).astype(int)

for y, x1, x2 in list(zip(xx_interp, yy_interp1, yy_interp2)):
    im[y, :x1, :] = 0
    im[y, x2:, :] = 0

plt.imshow(im);
</code></pre>
<p><a href="https://i.stack.imgur.com/2MdGm.png" rel="nofollow noreferrer"><img alt="Final Image" src="https://i.stack.imgur.com/2MdGm.png"/></a></p>
</div>
<span class="comment-copy">Can you show expected image?</span>
<span class="comment-copy">It should be black on the outsides of the red lines. I'll update</span>
<span class="comment-copy">Is it always be the same kind of shape for all images?</span>
<span class="comment-copy">It's always a spline, yes. Some parameters of the line may change.</span>
