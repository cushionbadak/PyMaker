<div class="post-text" itemprop="text">
<p>I am using <a href="https://pandas-docs.github.io/pandas-docs-travis/reference/api/pandas.io.formats.style.Styler.html#pandas.io.formats.style.Styler" rel="nofollow noreferrer">pandas styler</a> to give some columns a background color, based on the name of the column header.
While this works as intended, the background color of the column header doesn't change.</p>
<p>Here is the part in my script where thy style is applied:</p>
<pre class="lang-py prettyprint-override"><code>def highlight_col(x):
    if x.name in added_columns:
        return ['background-color: #67c5a4']*x.shape[0]
    elif x.name in dropped_columns:
        return ['background-color: #ff9090']*x.shape[0]
    else:
        return ['background-color: None']*x.shape[0]



old = old.style.apply(highlight_col, axis=0)
</code></pre>
<p>Is there a way to apply the <a href="https://pandas-docs.github.io/pandas-docs-travis/reference/api/pandas.io.formats.style.Styler.apply.html#pandas.io.formats.style.Styler.apply" rel="nofollow noreferrer">style.apply()-function</a> not only to the cells below the column header, but the complete column including the column header?</p>
<p>Edit:
For clarification here is a screenshot of the excel output:
<a href="https://i.stack.imgur.com/ahFay.png" rel="nofollow noreferrer">screenshot of excel output</a></p>
<p>"Header 2" should have the same background color as the cells below it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Okay, I think I figured out a way to handle formatting a column header using html 'selectors':</p>
<p>Using much of your code as setup:</p>
<pre><code>df = pd.DataFrame('some value', columns=['Header1','Header2','Header3'], index=np.arange(12))
added_columns = 'Header2'
dropped_columns = 'Header1'

def highlight_col(x):
    if x.name in added_columns:
        return ['background-color: #67c5a4']*x.shape[0]
    elif x.name in dropped_columns:
        return ['background-color: #ff9090']*x.shape[0]
    else:
        return ['background-color: None']*x.shape[0]


col_loc_add = df.columns.get_loc(added_columns) + 2
col_loc_drop = df.columns.get_loc(dropped_columns) + 2

df.style.apply(highlight_col, axis=0)\
  .set_table_styles(
     [{'selector': f'th:nth-child({col_loc_add})',
       'props': [('background-color', '#67c5a4')]},
     {'selector': f'th:nth-child({col_loc_drop})',
       'props': [('background-color', '#ff9090')]}])
</code></pre>
<p>Output:</p>
<p><a href="https://i.stack.imgur.com/u3PuF.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/u3PuF.jpg"/></a></p>
<p><em>Note:  I am using f-string which is a Python 3.6+ feature.</em></p>
</div>
<span class="comment-copy">To do the column headers look at using <code>df.style.set_table_styles</code>.</span>
<span class="comment-copy">Can show a sample image of your expected output?</span>
<span class="comment-copy">@ScottBoston in my undrestanding the set_table_styles changes all headers, but i only want to change specific ones. Also I added a screenshot.</span>
<span class="comment-copy">Okay.  I added a solution.</span>
<span class="comment-copy">Thank you, but sadly it doesn't work. The exported excel file still only colors the column without the header. Do you know about any other way?</span>
<span class="comment-copy">Yep, this appears to be bug.</span>
