<div class="post-text" itemprop="text">
<p>Below is the code that I have built for the dice game i made. I need it to display the number of wins and the number of losses once i quit the game. Everything is running smoothly, but it is only counting the last result currently. any ideas why?</p>
<pre><code>import random

   def roll_dice():
      winner = 0
      loser = 0
      roll = (random.randint(1,6))
      roll2 = (random.randint(1,6))
      print(roll,"  "roll2)
      if roll == roll2:
        print("Winner!")
        winner += 1
      else:
        print("Loser!")
        loser += 1
      play_again = input("Would you like to play again?")

      if play_again == "yes":
        roll_dice()

      else:
        print("You won " , winner , "times")
        print("You lost ", loser , "times")
        quit

   def main():

     game_start = input("Would you like to roll the dice?")
     if game_start == 'yes':
        roll_dice()

     else:
        print("too bad")

   if __name__ == '__main__':
   main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>This is happening because you are variables winner and loser are local variables and are re-initialized to zero every time roll_dice() is called. You can either have winner and loser as global variables or pass them as arguments to your function. See below with global variable</em></p>
<pre><code>import random

winner = 0
loser = 0

def roll_dice():
  global winner, loser
  roll = (random.randint(1,6))
  roll2 = (random.randint(1,6))
  print(roll,"  ",roll2)
  if roll == roll2:
    print("Winner!")
    winner += 1
  else:
    print("Loser!")
    loser += 1
  play_again = input("Would you like to play again?")

  if play_again == "yes":
    roll_dice()

  else:
    print("You won " , winner , "times")
    print("You lost ", loser , "times")
    quit

def main():

 game_start = input("Would you like to roll the dice?")
 if game_start == 'yes':
    roll_dice()

 else:
    print("too bad")

if __name__ == '__main__':
    main()
</code></pre>
<p><strong><em>Also I would like to point out that you should not use recursion here as it can cause a stack overflow error. looping would be a better option.</em></strong></p>
</div>
<div class="post-text" itemprop="text">
<p>This is because <code>winner</code> and <code>loser</code> are local variables scoped to a call of <code>roll_dice</code>.</p>
<p>Each call would instantiate a new variable <code>loser</code> and <code>winner</code> and the instance goes away with the return of the function. </p>
<p>More here <a href="https://stackoverflow.com/questions/291978/short-description-of-the-scoping-rules">Short description of the scoping rules?</a></p>
<p>One dirty fix to your problem would be to make <code>winner</code> and <code>loser</code> variables in global scope.</p>
<p>A cleaner solution would be to restructure your code to make <code>roll_dice</code> return the count of <code>winner</code> and <code>loser</code> as a tuple. </p>
</div>
<div class="post-text" itemprop="text">
<p>Every time you call your <code>function</code> (because you made it as recursion), the variable of <code>winner</code> and <code>loser</code> become <code>zero</code>. I think you need to change your <code>function</code> in <code>def roll_dice()</code>. It's better to use <code>looping</code> as stated by @ashutoshy.and01. </p>
<p>Also, you make the player as a winner if only the number on both dices equal, otherwise a loser even the player's dice number is greater than the computer's.</p>
<pre><code>def roll_dice():
    winner = 0
    loser = 0
    play_again = "yes"
    while play_again == "yes":
        roll = (random.randint(1,6))
        roll2 = (random.randint(1,6))
        print(str(roll),"  ",end=str(roll2))
        if roll &gt;= roll2:
            print(" Winner!")
            winner += 1
        else:
            print(" Loser!")
            loser += 1
        play_again = input("Would you like to play again?")
    print("You won " , winner , "times")
    print("You lost ", loser , "times")
    quit
</code></pre>
</div>
<span class="comment-copy">Please add the current output and the desired output</span>
<span class="comment-copy">You're resetting <code>winner</code> and <code>loser</code> every time you execute <code>roll_dice()</code>. Change those variables to global variables (defined in main or outside of a function) and then write <code>global winner, loser</code> at the top of <code>roll_dice</code>.</span>
<span class="comment-copy"><code>winner</code> and <code>loser</code>, will reset on every call to the function <code>roll_dice</code>, making them global or passing them to the function on every call would help, or you can use a class and make them the class variables.</span>
<span class="comment-copy">thank you, I did not realize it was initializing the variables each time but explaining it that way helps a lot</span>
<span class="comment-copy">i am going with the dirty fix for now but i will look into how to incorporate the cleaner solution for future code to ensure my programs are efficient. thanks for your reply!</span>
<span class="comment-copy">this is much cleaner code and also fixes my problem without having to make 'winner' and 'loser' global variables so thanks so much</span>
<span class="comment-copy">You're welcome. You can mark the answer as accepted if you feel the code helps you. Cheers..</span>
