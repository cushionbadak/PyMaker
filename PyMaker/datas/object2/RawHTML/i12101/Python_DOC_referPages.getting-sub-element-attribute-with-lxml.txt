<div class="post-text" itemprop="text">
<p>I'm looping through a long list of <code>host</code> elements with <code>lxml etree</code> like this:</p>
<pre><code>for host in xml.iter('host'):                                           
</code></pre>
<p>Each element looks like this:</p>
<pre><code>&lt;host status="up" /&gt;
   &lt;address addr="84.20.200.143" addrtype="ipv4" /&gt;
&lt;/host&gt;
</code></pre>
<p>I've been reading the official docs trying to figure out how to get the <code>addr</code> of each sub-element <code>address</code>, but after a dozen tries I can't wrap my head around it. How would I do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>An XPATH selector may get you what you want. Suppose I want a list of addresses for hosts that are up. I could do:</p>
<pre><code>for addr in xml.xpath('//host[@status="up"]/address/@addr'):
    print(addr)
</code></pre>
<p>If I want all addresses I coud do:</p>
<pre><code>for addr in xml.xpath('//host/address/@addr'):
    print(addr)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>for host in xml.iter('host'):
    for child in host:
        print child.attrib['addr']
</code></pre>
<p>It iterates through the child element of <code>host</code>, which is <code>address</code>, and then print the <code>addr</code> attrib</p>
</div>
<div class="post-text" itemprop="text">
<p>When you iterate through your xml, you need to use <code>attrib.get('addr')</code> on the tag you are looking to analyze. </p>
<p>Here is a functional example of what you are trying to do: </p>
<pre><code>s = """&lt;host status="up"&gt;
   &lt;address addr="84.20.200.143" addrtype="ipv4" /&gt;
&lt;/host&gt;"""

import xml.etree.ElementTree as ET
tree = ET.ElementTree(ET.fromstring(s))
root = tree.getroot()
print(root)

for i in root:
    print(i.attrib.get('addr'))
</code></pre>
<p>Output: 84.20.200.143</p>
<p>I believe you can also use <code>find</code> on the root node you are on to find tags within that root. But behind the scenes, this is most likely iterating to look for the tag as well. Nonetheless:</p>
<pre><code>d = root.find('address').attrib.get('addr')
</code></pre>
<p>Extra information. Look at this, this should provide more info. From the docs: </p>
<p><a href="https://docs.python.org/3/library/xml.etree.elementtree.html#finding-interesting-elements" rel="nofollow">https://docs.python.org/3/library/xml.etree.elementtree.html#finding-interesting-elements</a></p>
</div>
<span class="comment-copy">Can we not access <code>address</code> by name? In my actual case, there's more than one sub-element, do I have to iterate through each and check if <code>name == 'address'</code> ?</span>
<span class="comment-copy">Change the second loop to <code>for child in host.iter('address')</code>.</span>
<span class="comment-copy">@warmoverflow no better than lxml. I don't see how a different horse is any better.</span>
<span class="comment-copy">@tdelaney yes I saw your answer and removed mine :)</span>
<span class="comment-copy">So even if I nkow there's only one <code>address</code> tag in a <code>host</code>, I can't access it directly? I have to loop through the sub-elements? In reality there are many <code>host</code> in my file, each with more than one sub-element (in this case I only showed one sub-element).</span>
<span class="comment-copy">Look at my updated answer @Juicy</span>
