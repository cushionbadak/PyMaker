<div class="post-text" itemprop="text">
<p>I would like to match the categories in the url below: <code>news</code> and <code>politics</code></p>
<p>Note that there may be 1 or more categories. A category can be identified by having a <code>/</code> on with side of text or numbers with a <code>/</code> in between.</p>
<p>What I tried:</p>
<pre><code>item.url = 'http://www.example.com/news/politics/this-is-article-name-1993591'

compiled_regex = re.compile('/.+(?!/)/')

match = compiled_regex.search(item.url)
</code></pre>
<p>response is <code>None</code></p>
<p>What I would like (Expected results):</p>
<pre><code>match.group(0) = `news`
match.group(1) = `politics`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Rather than a regex, I'd use <a href="https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse" rel="nofollow"><code>urllib.parse</code></a> which is made to parse urls among other things</p>
<pre><code>&gt;&gt;&gt; url = 'http://www.example.com/news/politics/this-is-article-name-1993591'
&gt;&gt;&gt; import urllib.parse

&gt;&gt;&gt; urllib.parse.urlparse(url)
ParseResult(scheme='http',
            netloc='www.example.com',
            path='/news/politics/this-is-article-name-1993591',
            params='',
            query='',
            fragment='')

&gt;&gt;&gt; urllib.parse.urlparse(url).path
'/news/politics/this-is-article-name-1993591'

&gt;&gt;&gt; urllib.parse.urlparse(url).path.split('/')[1:-1]
['news', 'politics']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>According to your definition, something like this:</p>
<pre><code>categories = item.url.split('/')[3:-1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Others have shown useful answers, however, if you really really need to use regexp:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; url = 'http://www.example.com/news/politics/this-is-article-name-1993591'
&gt;&gt;&gt; re.match('https?://[^/]+/([^/]+)/([^/]+)/', url).groups()
('news', 'politics')
</code></pre>
</div>
<span class="comment-copy">What is the expected output ? Is there any pattern you are looking for ? Please be a little bit more clear.</span>
<span class="comment-copy">I tested this and only the case when 2 categories are in the url will work, 1 and 3 or more will not work</span>
<span class="comment-copy">Yes, this implies there have to be (at least) two "categories". URL structure is dependent on sites and you will probably have to have several different strategies depending on the sites you are trying to parse. If you think one regexp will match them all, you are probably approaching problem the wrong way.</span>
