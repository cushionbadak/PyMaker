<div class="post-text" itemprop="text">
<p>*I am having an issue processing CSV'S. I get this error: </p>
<blockquote>
<p>return codecs.charmap_decode(input,self.errors,decoding_table)[0]
  UnicodeDecodeError: 'charmap' codec can't decode byte 0x90 in position 22: character maps to &lt;undefined&gt;</p>
</blockquote>
<p>What do I need to do to fix this? I think there is an issue where the CSV matches with the user's input.*</p>
<pre><code>import csv

csvanswer=input("Type your issue here!").lower() 

searchanswer=(csvanswer).split() 

userinput = open("task2csv.csv")  

csv_task=csv.reader(userinput)

for row in csv_task:
    if row[0] in searchanswer: 

        print(row) 

        break 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your input file is probably in an encoding other than the default on your system. You can fix this by explicitly providing the correct file encoding to <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow">the <code>open</code> call</a> (you should also <a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow">pass <code>newline=''</code> to the <code>open</code> call to properly obey the <code>csv</code> module's requirements</a>).</p>
<p>For example, if the file is UTF-8, you'd do:</p>
<pre><code>userinput = open("task2csv.csv", encoding='utf-8', newline='')
</code></pre>
<p>If it's some other encoding (UTF-16 is common for files produced by Windows programs), you'd use that. If it's some terrible non-UTF encoding, you're going to have to figure out the locale settings on the machine that produced it, they could be any number of different encodings.</p>
</div>
<span class="comment-copy">see <a href="http://stackoverflow.com/questions/9233027/unicodedecodeerror-charmap-codec-cant-decode-byte-x-in-position-y-character" title="unicodedecodeerror charmap codec cant decode byte x in position y character">stackoverflow.com/questions/9233027/â€¦</a></span>
<span class="comment-copy">What character set is <code>task2csv.csv</code> using? You may have to use a codecs.open on it.</span>
<span class="comment-copy">@mpez0: For Py3 code, you don't need (and shouldn't use) <code>codecs.open</code>; the <code>open</code> built-in supports multiple encodings already (and it's usually faster than <code>codecs.open</code> IIRC). Even on Py2.6/2.7, you usually want to use <a href="https://docs.python.org/2/library/io.html#io.open" rel="nofollow noreferrer"><code>io.open</code></a>, not <code>codecs.open</code>; it's only on 2.5 and earlier that <code>codecs</code> is the best option (by virtue of no other good options existing).</span>
<span class="comment-copy">I have seen this error when my windows concole was not able to display characters my python script was outputting. As others have mentioned, make sure your .csv file does not have "smart quotes" and such. You can check by opening it in a text edior such as notepad++ and looking for weird characters.  Also, try using pprint module instead of print. I think that allowed me to print.</span>
<span class="comment-copy">@ShadowRanger Thanks for the info -- I was only considering 2.x, and hadn't noted io.open. I'm using <code>codecs</code> elsewhere in my code, and just used codecs.open.</span>
<span class="comment-copy">Thanks for the reply, but that line of code didn't work</span>
<span class="comment-copy">@Bakerboy316: Have you actually checked the encoding of the file? That line only works if the file is UTF-8, but it could be UTF-16, or any number of other weird encodings.</span>
<span class="comment-copy">@ShadowRanger UTF-16 doesn't usually contain bytes with value 0x90, unless it's a Chinese text.</span>
