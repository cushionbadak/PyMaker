<div class="post-text" itemprop="text">
<p>I am currently working through a python tutorial that has asked me to create a random function and run it 10 different ways. I'm stuck on how to actually get it to use floats. I Assume I should post the entire thing and just point out where I'm trying to get float to work</p>
<pre><code>def volume (length, width, height):
    print "the object is %d cm long, %d cm wide, and %d cm high" % (length, width, height),
    total_volume = float(length * width * height)
    print "The total volumeis %d cm3" % total_volume


print "Direct input:"
volume (10, 20, 30)

print "direct input variables:"
length = (10)
width = (20)
height = (30)
volume (length, width, height)

print "direct input variables and math"
volume (length + 10, width +20, height +30)

print "direct input math"
volume (10 + 10, 20 +20, 30 + 30)


print "user input with int(raw_input)"
length2 = int(raw_input("what is the length? "))
width2 = int(raw_input("what is the width? "))
height2 = int(raw_input("what is the height? "))
volume (length2, width2, height2)

#here is the first problem
print "user input with float(raw_input)"
length3 = float(raw_input("what is the length? "))
width3 = float (raw_input("what is the width? "))
height3 = float (raw_input("what is the height? "))
volume (length3, width3, height3)

#Doesn't work here either`
print "float(raw_input) + variables"
print "the base oject size is 10 * 10 * 10"
print "why is this important? IT ISN'T!!!!!"
print "However, eventually I will make one that calculates the increase in volume"
length4 = length + float(raw_input("How much length are you adding? "))
width4 = width + float(raw_input("How much width are you adding? "))
height4 = height + float(raw_input("How much height are you adding? "))
volume (length4, width4, height4)
</code></pre>
<p>These two parts simply refuse to return a float. Here is what I tried so far.</p>
<p>I've attempted to add float when calling on the function variable, as follows</p>
<p>volume float(length4, width4, height4)</p>
<p>I tried to add float to the actual definition part of the function as follows</p>
<p>def volume float(length, width, height):</p>
<p>as you can see, I have float placed in the actually math part of the function, with no effect.</p>
<p>It must be possible to make this work. I am hoping someone more knowledgeable can point the way, and I am out of ideas</p>
</div>
<div class="post-text" itemprop="text">
<p>There's nothing wrong with your math, you're just printing the result as an integer by using <code>%d</code>. If you use <code>%f</code> instead, you should see the correct result:</p>
<pre><code>print "The total volume is %f cm3" % total_volume
# Here ---------------------^
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>%f</code> instead of <code>%d</code> when you want float instead of integer.</p>
<p>Also, you can format your strings more with <code>"%0.2f"</code> where 2 is how many decimal places you would like.</p>
<pre><code>&gt;&gt;&gt; x = 1.2342345
&gt;&gt;&gt; print "%0.2f" % x
1.23
</code></pre>
</div>
<span class="comment-copy">Use the <code>return</code> statement with whatever value (variable) you want to return: <code>return total_volume</code>.</span>
<span class="comment-copy">For the record: Python is not a C or similar language: there is no need to declare types (but you can <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer">hint at types</a> since Python 3.5).</span>
<span class="comment-copy">Not that you are also being inconsequent: you cast <code>total_volume</code> to a float in your function, then print it using a <code>%d</code> (integer) specifier.</span>
<span class="comment-copy">I wish I knew what you meant by declaring types. Python is the first language I've used. Not very far into learning it.</span>
<span class="comment-copy">"Declaring types" in this context means you tell the interpreter/compiler/whatever what type your variable is, or what type of variable your function returns. Python deduces this from the context, and is flexible in that: you can set <code>a = 1</code> and <code>a</code> is an <code>int</code>, then in the next line you set <code>a = '1'</code> and a<code>a is a </code>str<code>. For some other languages, you explicitly need to tell it that </code>a` is an <code>int</code> (the declaration): that language will not deduce it from the assignment <code>a = 1</code>. Nor can you afterwards change the type: once an <code>int</code>, always an <code>int</code>. As said, this is not the case in Python.</span>
<span class="comment-copy">Thank you. Probably wouldn't have thought have that. Need to pay more attention to formatters I guess</span>
