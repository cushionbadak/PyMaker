<div class="post-text" itemprop="text">
<p>Trying to figure out how I can do the following. Suppose I have some function which has an attribute that I want to set. generically let's call it: <code>func.attrib = ['list']</code>. the challenge is that <code>'func'</code> can vary according to the result of some look up (say, based on a key within a dictionary). </p>
<p>so, I might want to say:</p>
<pre><code>func.attrib = ['list']
OR
func1.attrib = ['list']
OR 
func2.attrib = ['list']
</code></pre>
<p>etc</p>
<p>where <code>func</code>, <code>func1</code>, <code>func2</code> are the result of a look up in a dictionary. </p>
<p>Treating <code>func</code> as a <code>string</code> and appending <code>".attrib"</code> will not work, so I'm guessing a more specific method of formatting is required. </p>
<p>any help appreciated! </p>
</div>
<div class="post-text" itemprop="text">
<p>Have you considered using an if statement?
Coz for say, if the look up is "Big Melons" and for that you have to use func1.attrib then you could use if or elif statement.</p>
<pre><code>if look_up = "Big Melons":
    func1.attrib = ["Lists"]
elif look_up = "Small Melons":
    func2.attrib = ["list"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you're trying to set an attribute on a function stored as a value in a <code>dict</code>, just do the lookup and set the attribute, e.g.</p>
<pre><code>mydict = {'foo': func, 'bar': func1, 'baz': func2}

key = ... get a key that is either 'foo', 'bar' or 'baz' ...

mydict[key].attrib = ['list']
</code></pre>
<p>If no such <code>dict</code> exists, you but all the function in question are defined in the global namespace of the module, and you want to assign the attribute based on the function name itself (<code>'func'</code>, <code>'func1'</code>, etc.), then you could use <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow"><code>globals</code></a> to get the current module's global <code>dict</code>:</p>
<pre><code># key is 'func', 'func1', or 'func2'
globals()[key].attrib = ['list']
</code></pre>
<p>If the functions are in some other module, you'd use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow"><code>getattr</code></a>:</p>
<pre><code># All the modules are in module spam
import spam

getattr(spam, key).attrib = ['list']
</code></pre>
</div>
<span class="comment-copy">How do you know if you should use func1, func2, func3 etc?</span>
<span class="comment-copy">that is based on a look-up in a dictionary, based on a key. i did not bother to include it in the original question</span>
<span class="comment-copy">I mean, where is the result of the look up stored? Is the result the function? Or is it a string indicating the function?</span>
<span class="comment-copy">the result is a string indicating the function. i.e. the entry in the dictionary would be "func", "func1", or "func2"</span>
<span class="comment-copy">If you don't have a lot of functions, you could build a dictionary of them where the key is that string and the value is the function. Otherwise, you could use the <code>globals</code> variable (I think, not sure), you could search the documentation about that.</span>
<span class="comment-copy">this is suboptimal because there could potentially be many functions, and this type of variable usage is needed in a few ways down the road. the question really is is there a way to append a string to an attribute call.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/q/3253966/5504999">stackoverflow.com/q/3253966/5504999</a>  Try that. I hope it helps you.</span>
