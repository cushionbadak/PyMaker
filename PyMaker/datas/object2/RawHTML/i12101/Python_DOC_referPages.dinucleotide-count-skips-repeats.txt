<div class="post-text" itemprop="text">
<p>I'm working on finding the dinucleotide count in a .txt file. The sample data set that I'm using is 'SSSS'. The code below is what I am running as of now. </p>
<pre><code>import os
stseq = open(os.path.expanduser("/Users/Mitch_Whitaker/Desktop/A5 count.txt"))
lines = stseq.read()
mystr = '\t'.join([line.strip() for line in lines])
all_counts = []
for base1 in ['S', 'T']:
    for base2 in ['S', 'T']:
        dinucleotide = base1 + base2
        count = lines.count(dinucleotide)
        print("count is " + str(count) + " for " + dinucleotide)
        all_counts.append(count)
print(all_counts)
</code></pre>
<p>I get a returned 'SS' count of 2 when in reality is should be 3. Could someone help me figure out a solution for the skipping that occurs while counting the characters. </p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem here might be because of overlapping substrings not being counted. I'm assuming that a substring SSS should be counted as two instances of the dinucleotide SS? The count() method you used will only return 1. If this is indeed the problem, you will probably have to design your own count method.</p>
</div>
<div class="post-text" itemprop="text">
<p>As <a href="https://stackoverflow.com/users/4728340/chuck-logan-lim">Chuck Logan Lim</a> mentioned,  the problem is indeed that overlapping substrings are not counted.</p>
<p>One possible solution is to use a regular expression. Here, <code>(?=...)</code> is a <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">lookahead assertion</a>.</p>
<pre><code>from itertools import product
import re

mystr = 'SSSS'
for base1 , base2 in product('ST', repeat=2):
    dinucleotide = base1 + base2
    pattern = '(?=({}))'.format(dinucleotide)
    m = re.findall(pattern, mystr)
    print("count is {} for {}".format(len(m), dinucleotide))
</code></pre>
<p>Prints:</p>
<pre><code>count is 3 for SS
count is 0 for ST
count is 0 for TS
count is 0 for TT
</code></pre>
</div>
<span class="comment-copy">Can you provide some more context? What is "dinucleotide" and is it relevant to answering your word count problem?</span>
<span class="comment-copy">This is normal behavior of <code>.count()</code>. Try <code>print("SSSS".count("SS"))</code> which will also result in <code>2</code>.</span>
<span class="comment-copy">Dinucleotide would refer to a two letter sequence or digram. The combinations possible for this would be SS, ST, TS, and TT. If there is a given sequence of letters (ex: SSSS), what would be the frequency of letter digrams returned.</span>
<span class="comment-copy">This is indeed the issue. Thanks for the suggestion</span>
<span class="comment-copy">Another solution is to use the <a href="https://pypi.python.org/pypi/regex" rel="nofollow noreferrer">regex</a> module, which is a drop-in replacement for re in python and which offers the option of <code>overlapped=True</code></span>
