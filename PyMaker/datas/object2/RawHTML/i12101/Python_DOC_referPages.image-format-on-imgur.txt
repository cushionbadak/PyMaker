<div class="post-text" itemprop="text">
<p>I'm playing around in python trying to download some images from imgur. I've been using the urrlib and urllib.retrieve but you need to specify the extension when saving the file. This isn't a problem for most posts since the link has for example .jpg in it, but I'm not sure what to do when the extension isn't there. My question is if there is any way to determine the image format of the file before downloading it. The question is mostly imgur specific, but I wouldn't mind a solution for most image-hosting sites.</p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>imghdr.what(filename[, h])</code> in Python 2.7 and Python 3 to determine the image type. </p>
<p>Read <a href="https://docs.python.org/3/library/imghdr.html#module-imghdr" rel="nofollow">here</a> for more info, if you're using Python 2.7. </p>
<p>Read <a href="https://docs.python.org/3/library/imghdr.html#module-imghdr" rel="nofollow">here</a> for more info, if you're using Python 3. </p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the picture has no file extension, there's no way to determine which type it is before you download it. All image formats sets their initial bytes to a particular value. To inspect these 'magic' initial bytes check out <a href="https://github.com/ahupp/python-magic" rel="nofollow">https://github.com/ahupp/python-magic</a> - it matches the initial bytes against known image formats.</p>
<p>The code below downloads a picture from imgur and determines which file type it is.    </p>
<pre><code>import magic
import requests
import shutil

r = requests.get('http://i.imgur.com/yed5Zfk.gif', stream=True)  ##Download picture
if r.status_code == 200:
    with open('~/Desktop/picture', 'wb') as f:
        r.raw.decode_content = True
        shutil.copyfileobj(r.raw, f)

print magic.from_file('~/Desktop/picture')  ##Determine type

## Prints: 'GIF image data, version 89a, 360 x 270'
</code></pre>
</div>
<span class="comment-copy">Imgur has <a href="http://api.imgur.com/" rel="nofollow noreferrer">an API</a>. You should look into that instead of scraping manually. Otherwise, there is always the <a href="https://docs.python.org/3/library/imghdr.html" rel="nofollow noreferrer"><code>imghdr</code> module</a>.</span>
<span class="comment-copy">Ah thanks, I'll look into it!</span>
<span class="comment-copy">Hmm, this doesn't seem to work for non-local files.</span>
<span class="comment-copy">Still, it's as easy as saving to a temp file, checking the image format, and moving the file to the appropriate destination.</span>
