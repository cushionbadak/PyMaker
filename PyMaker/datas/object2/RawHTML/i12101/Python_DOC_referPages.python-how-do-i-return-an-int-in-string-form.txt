<div class="post-text" itemprop="text">
<p>So for a point class I'm writing, I need to write a method that rounds and converts to an int in string form. This is what I did:</p>
<pre><code>def __str__(self):
    return int(round(self.x))
</code></pre>
<p>So it rounds and converts to an int but it isn't in string form. I've tried using str but that doesn't work at all. So how can I get that to string form? Here's my entire point class:</p>
<pre><code>import math


class Error(Exception):
    def __init__(self, message):
        self.message = message


class Point:

    def __init__(self, x, y):
        if not isinstance(x, float):
            raise Error ("Parameter \"x\" illegal.")  
        self.x = x
        if not isinstance(y, float):
            raise Error ("Parameter \"y\" illegal.")
        self.y = y


    def rotate(self, a):
        if not isinstance(a, float):
            raise Error("Parameter \"a\" illegal.")
        self.x0 = math.cos(a) * self.x - math.sin(a) * self.y
        self.y0 = math.sin(a) * self.x + math.cos(a) * self.y


    def scale(self, f):
        if not isinstance(f, float):
            raise Error("Parameter \"f\" illegal.")
        self.x0 = f * self.x
        self.y0 = f * self.y


    def translate(self, delta_x, delta_y):
        if not isinstance(delta_x, float):
            raise Error ("Parameter \"delta_x\" illegal.")
        self.x0 = self.x + delta_x
        if not isinstance(delta_y, float):
            raise Error ("Parameter \"delta_y\" illegal.")
        self.y0 = self.y + delta_y


    def __str__(self):
        return str(int(round(self.x)))
        return str(int(round(self.y)))
</code></pre>
<p>Now I also have a line class that I haven't finished writing yet so if this class looks fine then the error must be in my line class. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>class X:
  def __init__(self):
    self.x = 3.1415
  def __str__(self):
    return str(int(round(self.x)))

x = X()
print x
</code></pre>
<p>This does print <code>3</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Just cast the value you return into string. In the Python data model, </p>
<blockquote>
<h2><code>object.__str__(self)</code></h2>
<p>Called by str(object) and the built-in functions format() and print() to compute the “informal” or nicely printable string representation of an object. The return value must be a string object.</p>
</blockquote>
<p>From <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow">Python Data Model</a></p>
<p>The <code>__str__</code> function is a built in function that must return a informal string representation for the object. You are returning an Integer representation.</p>
<p>So just change your <code>return</code> to <code>str(int(round(self.x)))</code></p>
</div>
<span class="comment-copy">how have you used str ? without converting to int first?</span>
<span class="comment-copy">It's a weird error. The error says TypeError: <b>str</b> returned non-string (type NoneType). Is it possible that my str method is correct and the error is from somewhere else?</span>
<span class="comment-copy">And yes I did use str without converting to an int first and it still gives me that exact error.</span>
<span class="comment-copy">might be just the self.x is None at the time you print then, have you checked?</span>
<span class="comment-copy">also, have you defined the <code>__repr__</code> method? it might be what is causing the error</span>
<span class="comment-copy">he says at the end that he used str() though</span>
<span class="comment-copy">or do you think he might have tried <code>str(round(self.x))</code> instead ?</span>
