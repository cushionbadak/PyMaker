<div class="post-text" itemprop="text">
<p>So I'm creating a basic text-based RPG styled game.
It utilises Rock-Paper-Scissors match-ups and level-based progression.</p>
<p>Because this game is so grindy to get anywhere, and to aid in my black box testing I would like to create a save &amp; load system. So I could save and quit the program and before it quit it would give me a code of all important details. And then when I returned to the program I could re-enter this code and return to where I was at.</p>
<p>In my mind I imagine it to be similar to the system used in Lego games when creating characters, where there is a code accompanied with the character so that you can save the code and re-enter it to get the same character appearance back. However I'm relatively new to programming and am not sure if there's a better way to do this or how I would go about doing this.</p>
<p>Here's my attempt at saving the code:</p>
<pre><code>if TrainTimes == 5483:
    print("Sorry to see you leave!")
    print("Here's your code to sign-in later:")
    code= name,power,rivalname,level,AP,limit,ExpGain,TotalExp,attack,defense,speed,evasiveness,health
    print(code)
    break
</code></pre>
<p>And here's an example after I played through and got to this point:</p>
<p>('Oliver', 'dark', 'Jim', 8, 3, 25, 14, 0, 5, 1, 1, 5, 10)</p>
<p>I'm not sure how I would then load this though, I can imagine I should use something like:</p>
<pre><code>while SaveLoaded == False:
(FUNCTION)
</code></pre>
<p>for the code that would normally play without a save-file, and that I'd need to change SaveLoaded to True if I loaded a save.
But how would I get the program to identify and load in the code?</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Considering you are looking to reclaim the state of your application, this sounds like a good job for <a href="https://docs.python.org/2/library/pickle.html" rel="nofollow">pickle</a> (or, similarly, <a href="https://pypi.python.org/pypi/dill" rel="nofollow">dill</a>).</p>
<p>So, what this will do is dump your objects to a file, then when you reload this file, you will load these properties back in to memory. </p>
<p>Now, with respect to what you are looking to do and based on the comment discussion. You can provide the user with some simple unique code like: </p>
<pre><code>"ABCDEFG"
</code></pre>
<p>which will point to your objects by setting up a dictionary. Now, another modification you can make to make it even easier to access your data is to name each of your values. I don't know what each of your properties mean, but here is a sample of what you can do: </p>
<pre><code>save_state = {
    "ABCDEFG": {
        'name': 'Oliver',
        'color': 'dark',
        'last_name': 'Jim',
        'val_1': 8,
        'val_2': 3,
        'val_3': 25,
        'val_4': 14,
        'val_5': 0,
        'val_6': 5,
        'val_7': 1,
        'val_8': 1,
        'val_9': 5,
        'val_10': 10
    }
}
</code></pre>
<p>Take that data, and using pickle, dump this to your pickle file like this: </p>
<pre><code>import pickle

pickle.dump(save_state, open('dude.txt', 'wb'))
</code></pre>
<p>When you are ready to load the data back, you simply use <code>pickle.load</code>. Like this:</p>
<pre><code>loaded_data = pickle.load(open('dude.txt', 'rb'))
</code></pre>
<p>Printing this data out: </p>
<pre><code>{'ABCDEFG': {'last_name': 'Jim', 'val_2': 3, 'val_3': 25, 'name': 'Oliver', 'val_5': 0, 'val_10': 10, 'val_8': 1, 'val_7': 1, 'val_9': 5, 'val_1': 8, 'val_6': 5, 'color': 'dark', 'val_4': 14}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/json.html" rel="nofollow"><code>json</code></a> module to first serialize the objects into a json string. Then, you can convert it into hexadecimal using the <a href="https://docs.python.org/3/library/binascii.html" rel="nofollow"><code>binascii</code></a> module.  </p>
<p><strong><em>Encoding code:</em></strong> </p>
<pre><code>import json
import binascii

name = 'abc'
power = 5.0
attack = [1, 2, 3]

jsonified = json.dumps((name, power, attack))
secret_number = binascii.hexlify(jsonified.encode('UTF-8'))
print(secret_number)
</code></pre>
<p><strong><em>Decoding code:</em></strong> </p>
<pre><code>import json
import binascii

secret_number = input()
jsonified = binascii.unhexlify(secret_number).decode('UTF-8')
name, power, attack = json.loads(jsonified)

print(name)
print(power)
print(attack)
</code></pre>
<p><strong>Demo</strong>:  </p>
<p><a href="http://ideone.com/6DC1FL" rel="nofollow">Encoding</a><br/>
<a href="http://ideone.com/G4fUdC" rel="nofollow">Decoding</a></p>
</div>
<div class="post-text" itemprop="text">
<pre class="lang-python prettyprint-override"><code>def Load(save):
   if SaveLoaded == True:  
      saveSplit = save.split(',')
      if(len(saveSplit) == 13)
         cleaned = []
         string = ""
         for i in range(0,3):
            string = split[i].strip("'( )")
            cleaned.append(string)

        for i in range(3,13):
           string = split[i].strip("'( )")
           cleaned.append(int(string))

         name,power,rivalname,level,AP,limit,ExpGain,TotalExp,attack,defense,speed,evasiveness,health = saveSplit
      else:
         setDefault()
   else:
      SetDefault()
</code></pre>
<p>Basically you split string to parts with delimiter beeing comma. The you clean unnecesary characters (parentheses etc), convert it to crrect Data Type and assign to your variables, if you don't want to load, or your string is invalid (with invalid being too short) you set your values to your defaults.</p>
</div>
<span class="comment-copy">So, to summarize and see if I understand. You want to prompt a user if they want to save. If they save, you save data somewhere. When they come back, you ask them for a code. They enter the code. If they enter the right code, it loads the previous data they had?</span>
<span class="comment-copy">Yes, that is what I'm hoping to achieve with this :)</span>
<span class="comment-copy">Is this the code they have to enter: <code>('Oliver', 'dark', 'Jim', 8, 3, 25, 14, 0, 5, 1, 1, 5, 10)</code></span>
<span class="comment-copy">Yes, that's the code that my program outputs, so I hoped it would work just as well when it was input</span>
<span class="comment-copy">That was my thought as well, but I wasn't sure how I would be able to convert the data into this code. EDIT: This is what I had in mind when I started: <a href="https://i.ytimg.com/vi/Rp2pDrnB2kA/maxresdefault.jpg" rel="nofollow noreferrer">i.ytimg.com/vi/Rp2pDrnB2kA/maxresdefault.jpg</a> But I'm not sure how to go about converting it</span>
<span class="comment-copy">Oh thank you, this should work well with what I'm trying to do! I decided against including what each variable stood for as I didn't think it mattered. And it shouldn't with this- I'll be sure to try this out and see how it works out! Thanks!</span>
<span class="comment-copy">Best of luck. Try this out. play around with it. See how it works out for you. :)</span>
