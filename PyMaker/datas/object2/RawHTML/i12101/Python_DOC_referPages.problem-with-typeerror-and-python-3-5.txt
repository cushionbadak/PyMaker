<div class="post-text" itemprop="text">
<p>So, I am in the middle of making an IDS - and i am in the process of detecting connections coming to a host. When i finally ran it i got this:  </p>
<pre><code>Exception in thread Thread-3709:    
Traceback (most recent call last):
File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py", line 914, in _bootstrap_inner
self.run()
File "/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py", line 862, in run
self._target(*self._args, **self._kwargs)
TypeError: Scan() argument after * must be a sequence, not int
</code></pre>
<p>Here's the code:</p>
<pre><code>import threading
import socket

print("[*] Starting HazimIDS\n")

def Scan(port):
    while True:
        noPrint = ''

        stcp = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sudp = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)

        stcp.bind(('127.0.0.1', port))
        sudp.bind(('127.0.0.1', port))

        Threads = StartListening(stcp, sudp)

        TCPThread = Threads[0]
        UDPThread = Threads[1]

        ConnectionThread = threading.Thread(target=DealWithConnections, args=(TCPThread, UDPThread))

        RawPackThread    = threading.Thread(target=PrintConnections, args=(listConnection))

        ConnectionThread.start()

        RawPackThread.start()

        while True:
            try:
                TCPTrue

                portstr = str(port)

                for x in range(len(recentports)):
                    port = recentports[x]

                    if portstr == port:
                        noPrint = 'true'
                    else:
                        continue

                if noPrint == '':
                    recentports.append(portstr + "-tcp")
                    print("[*] New Connection Found on port: " + portstr)
                else:
                    continue
            except NameError:
                continue




def ListenTCP(socketObj):
    while True:
        socketObj.listen(1)

        global TCPConnection
        TCPConnection = 'true'

def ListenUDP(socketObj):
    while True:
        data, addr = socketObj.recvfrom(4096)
        global UDPConnection
        UDPConnection = ['true', addr]

def StartListening(socketObjTCP, socketObjUDP):
    ttcp = threading.Thread(target=ListenTCP, args = (socketObjTCP))
    tudp = threading.Thread(target=ListenUDP, args = (socketObjUDP))

    return([ttcp, tudp])

def DealWithConnections(TCPThread, UDPThread):
    TCPThread.start()
    UDPThread.start()

    global listConnection

    listConnection = []

    while True:
        if TCPConnection == 'true':
            try:
                test = listConnection[1]
            except IndexError:
                listConnection.append('tcp')

        elif UDPConnection[0] == 'true':
            try:
                test = listConnection[1]
            except IndexError:
                listConnection.append('udp')

def PrintConnections(globalListConnection):
    while True:
        try:
            test = globalListConnection[1]

            fListVar = globalListConnection[0]

            if test == 'tcp':
                global TCPTrue
            elif test == 'udp':
                global UDPTrue
            elif fListVar == 'tcp':
                global TCPTrue
            elif fListVar == 'udp':
                global UDPTrue

        except IndexError:
            continue


def main():   
    for x in range(4000):
        ScanThread = threading.Thread(target=Scan, args=(x))
        ScanThread.start()

if __name__ == "__main__":
    main()
</code></pre>
<p>It would be greatly appreciated if someone could help me and eradicate all errors...</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to define your <code>args</code> parameter value for <code>Thread()</code> as a <em>sequence</em>; you don't here:</p>
<pre><code>RawPackThread    = threading.Thread(target=PrintConnections, args=(listConnection))
</code></pre>
<p><code>(listConnection)</code> is not a tuple, because a <em>comma</em> is missing:</p>
<pre><code>RawPackThread    = threading.Thread(target=PrintConnections, args=(listConnection,))
</code></pre>
<p>The same applies to the <code>Thread()</code> calls in <code>StartListening</code>:</p>
<pre><code>ttcp = threading.Thread(target=ListenTCP, args = (socketObjTCP))
tudp = threading.Thread(target=ListenUDP, args = (socketObjUDP))
</code></pre>
<p>should be</p>
<pre><code>ttcp = threading.Thread(target=ListenTCP, args = (socketObjTCP,))
tudp = threading.Thread(target=ListenUDP, args = (socketObjUDP,))
</code></pre>
<p>I'd not use a list to communicate between threads; use a thread-safe object from the <a href="https://docs.python.org/3/library/queue.html" rel="nofollow"><code>queue</code> module</a> instead.</p>
</div>
