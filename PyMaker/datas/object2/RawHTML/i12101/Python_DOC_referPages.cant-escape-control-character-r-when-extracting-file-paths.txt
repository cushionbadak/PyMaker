<div class="post-text" itemprop="text">
<p>I am trying to open each of the following files separately.</p>
<pre><code>"C:\recipe\1,C:\recipe\2,C:\recipe\3,"
</code></pre>
<p>I attempt to do this using the following code:</p>
<pre><code>import sys
import os
import re

line = "C:\recipe\1,C:\recipe\2,C:\recipe\3,"
line = line.replace('\\', '\\\\') # tried to escape control chars here
line = line.replace(',', ' ')
print line # should print "C:\recipe\1 C:\recipe\2 C:\recipe\3 "

for word in line.split():
    fo = open(word, "r+")
    # Do file stuff
    fo.close()

print "\nDone\n"
</code></pre>
<p>When I run it, it gives me:</p>
<blockquote>
<p>fo = open(word, "r+")
  IOError: [Errno 13] Permission denied: 'C:'</p>
</blockquote>
<p>So it must be a result of the <code>'\r'</code>s in the original string not escaping correctly. I tried many other methods of escaping control characters but none of them seem to be working. What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">raw string</a>:</p>
<pre><code>line = r"C:\recipe\1,C:\recipe\2,C:\recipe\3,"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If for whatever reason you don't use raw string, you need to escape your single slashes by adding double slash: </p>
<pre><code>line = "C:\\recipe\\1,C:\\recipe\\2,C:\\recipe\\3,"
print(line.split(','))
</code></pre>
<p>Output:</p>
<pre><code>['C:\\recipe\\1', 'C:\\recipe\\2', 'C:\\recipe\\3', '']
</code></pre>
</div>
<span class="comment-copy">You can also use, <code>os.path.normpath()</code> and use <code>/</code> instead, e.g. <code>paths = [os.path.normpath(p) for p in "C:/recipe/1,C:/recipe/2,C:/recipe/3".split(',')]</code>, <code>os.path.normpath()</code> will convert forward slashes to back slashes on windows.</span>
<span class="comment-copy">Note that a raw string still cannot end in a backslash. Not sure why that design decision was made.</span>
<span class="comment-copy">Thank you for the answer! Your suggestion worked. However, is there a function to convert line into a raw string? Like raw(line)?</span>
<span class="comment-copy">@drspaceman0 See <a href="https://stackoverflow.com/questions/7262828/python-how-to-convert-string-literal-to-raw-string-literal" title="python how to convert string literal to raw string literal">stackoverflow.com/questions/7262828/â€¦</a></span>
