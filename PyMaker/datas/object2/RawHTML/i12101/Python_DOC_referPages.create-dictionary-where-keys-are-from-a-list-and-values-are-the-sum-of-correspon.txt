<div class="post-text" itemprop="text">
<p>I have two lists L1 and L2. Each unique element in L1 is a key which has a value in the second list L2. I want to create a dictionary where the values are the sum of elements in L2 that are associated to the same key in L1.</p>
<p>I did the following but I am not very proud of this code. Is there any simpler pythonic way to do it ?</p>
<pre><code>L = [2, 3, 7, 3, 4, 5, 2, 7, 7, 8, 9, 4] # as L1
W = range(len(L)) # as L2

d = { l:[] for l in L }
for l,w in zip(L,W): d[l].append(w)
d = {l:sum(v) for l,v in d.items()}
</code></pre>
<p><strong>EDIT:</strong></p>
<p><strong>Q:</strong> How do I know which elements of L2 are associated to a given key element of L1?</p>
<p><strong>A:</strong> if they have the same index. For example if the element 7 is repeated 3 times in L1 (e.g. L1[2] == L1[7] == L1[8] = 7), then I want the value of the key 7 to be L2[2]+L2[7]+L2[8] </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>enumerate()</code> in order to access to item's index while you loop over the list and use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict"><code>collections.defaultdict()</code></a> (by passing the <code>int</code> as it's missing function which will be evaluated as 0 at first time) to preserve the items and add the values while encounter a duplicate key:</p>
<pre><code>&gt;&gt;&gt; from collections import defaultdict

&gt;&gt;&gt; d = defaultdict(int)
&gt;&gt;&gt; for i,j in enumerate(L):
...     d[j]+=i
... 
&gt;&gt;&gt; d
defaultdict(&lt;type 'int'&gt;, {2: 6, 3: 4, 4: 15, 5: 5, 7: 17, 8: 9, 9: 10})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't need the intermediate <code>dict</code> of <code>list</code>s you can use the <code>collections.Counter</code>:</p>
<pre><code>import collections
L = [2, 3, 7, 3, 4, 5, 2, 7, 7, 8, 9, 4] # as L1
W = range(len(L)) # as L2

d2 = collections.Counter()
for i, value in enumerate(L):
    d2[value] += i
</code></pre>
<p>which behaves like a normal dict:</p>
<pre><code>Counter({2: 6, 3: 4, 4: 15, 5: 5, 7: 17, 8: 9, 9: 10})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Hope this may help you.</p>
<pre><code>L = [2, 3, 7, 3, 4, 5, 2, 7, 7, 8, 9, 4] # as L1
dict_a = dict.fromkeys(set(L),0)
for l,w in enumerate(L):    
    dict_a[w] = int(dict_a[w]) + l
</code></pre>
</div>
<span class="comment-copy">How do you know which elements of L2 are associated to a given key element of L1?</span>
<span class="comment-copy">@eguaio if they are have the same index. For example if the element 7 is repeated 3 times in L1 (e.g. L1[2] == L1[7] == L1[8] = 7), then I want the value of the key 7 to be L2[2]+L2[7]+L2[8]</span>
<span class="comment-copy">updated the answer to show the advantages of <code>Counter</code> over <code>defaultdict</code>.</span>
<span class="comment-copy">the last expression does not produce the same result as the solution you provided first. W[i] will not be the sum it will be the last value in W for the corresponding key.</span>
<span class="comment-copy">yes I also noticed this shortly before you commented, I'll see if I can fix it.</span>
