<div class="post-text" itemprop="text">
<p>I need help with Python. I'm trying to open a file, and if the file doesn't exist, I need to create it and open it for writing. I have this so far:</p>
<pre><code>#open file for reading
fn = input("Enter file to open: ")
fh = open(fn,'r')
# if file does not exist, create it
if (!fh) 
fh = open ( fh, "w")
</code></pre>
<p>The error message says there's an issue on the line <code>if(!fh)</code>. Can I use <code>exist</code> like in Perl?</p>
</div>
<div class="post-text" itemprop="text">
<p>Well, first of all, in Python there is no <code>!</code> operator, that'd be <code>not</code>. But <code>open</code> would not fail silently either - it would throw an exception. And the blocks need to be indented properly - Python uses whitespace to indicate block containment.</p>
<p>Thus we get:</p>
<pre><code>fn = input('Enter file name: ')
try:
    file = open(fn, 'r')
except IOError:
    file = open(fn, 'w')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't need atomicity you can use os module:</p>
<pre><code>import os

if not os.path.exists('/tmp/test'):
    os.mknod('/tmp/test')
</code></pre>
<p><strong>UPDATE</strong>:</p>
<p>As <em>Cory Klein</em> mentioned, on Mac OS for using <strong><a href="https://docs.python.org/3/library/os.html#os.mknod" rel="noreferrer">os.mknod()</a></strong> you need a root permissions, so if you are Mac OS user, you may use <strong><a href="https://docs.python.org/3/library/functions.html#open" rel="noreferrer">open()</a></strong> instead of <strong><a href="https://docs.python.org/3/library/os.html#os.mknod" rel="noreferrer">os.mknod()</a></strong></p>
<pre><code>import os

if not os.path.exists('/tmp/test'):
    with open('/tmp/test', 'w'): pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>'''
w  write mode
r  read mode
a  append mode

w+  create file if it doesn't exist and open it in write mode
r+  open an existing file in read+write mode
a+  create file if it doesn't exist and open it in append mode
'''
</code></pre>
<p>example:</p>
<pre><code>file_name = 'my_file.txt'
f = open(file_name, 'a+')  # open file in append mode
f.write('python rules')
f.close()
</code></pre>
<p>I hope this helps. [FYI am using python version 3.6.2]</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>input()</code> implies Python 3, recent Python 3 versions have made the <code>IOError</code> exception deprecated (it is now an alias for <code>OSError</code>).  So assuming you are using Python 3.3 or later:</p>
<pre><code>fn = input('Enter file name: ')
try:
    file = open(fn, 'r')
except FileNotFoundError:
    file = open(fn, 'w')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think this should work:</p>
<pre><code>#open file for reading
fn = input("Enter file to open: ")
try:
    fh = open(fn,'r')
except:
# if file does not exist, create it
    fh = open(fn,'w')
</code></pre>
<p>Also, you incorrectly wrote <code>fh = open ( fh, "w")</code> when the file you wanted open was <code>fn</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Be warned, each time the file is opened with this method the old data in the file is destroyed regardless of 'w+' or just 'w'.  </p>
<pre><code>import os

with open("file.txt", 'w+') as f:
    f.write("file is opened for business")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First let me mention that you probably don't want to create a file object that eventually can be opened for reading OR writing, depending on a non-reproducible condition. You need to know which methods can be used, reading or writing, which depends on what you want to do with the fileobject.</p>
<p>That said, you can do it as That One Random Scrub proposed, using try: ... except:. Actually that is the proposed way, according to the python motto "It's easier to ask for forgiveness than permission".</p>
<p>But you can also easily test for existence:</p>
<pre><code>import os
# open file for reading
fn = raw_input("Enter file to open: ")
if os.path.exists(fn):
    fh = open(fn, "r")
else:
    fh = open(fn, "w")
</code></pre>
<p>Note: use raw_input() instead of input(), because input() will try to execute the entered text. If you accidently want to test for file "import", you'd get a SyntaxError.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/2967194/open-in-python-does-not-create-a-file-if-it-doesnt-exist">Open in Python does not create a file if it doesn't exist</a></span>
<span class="comment-copy">I have been trying to figure out why this is preferable to <code>open(fn, 'a').close()</code>. Is it because the implicit <code>seek</code> in append may be too expensive?</span>
<span class="comment-copy">macOS <a href="https://stackoverflow.com/a/32115794/446554">requires sudo privileges to run mknod</a> so this is unlikely to be portable to Mac unless you're running your python script with <code>sudo</code>.</span>
<span class="comment-copy"><code>r+</code> does not create any file. As also mentioned <a href="https://stackoverflow.com/a/13248062/6209196">here</a> and <a href="http://www.manpagez.com/man/3/fopen/" rel="nofollow noreferrer">here(in the description)</a> <code>r+</code> is for opening a file in reading and writing mode. Correct it as it might confuse people :)</span>
<span class="comment-copy">You are assuming that the file cannot be opened because it does not exist.  It could be that you don't have read permissions, or the filename is invalid in some way.  Bare <code>except</code> is not a good idea.</span>
<span class="comment-copy">I understand that, (now) but this will be effective enough for his level of programming, it's not like we are teaching him the etiquette of programming or prepping him for <code>class</code> though.</span>
<span class="comment-copy">OK, the poor guy comes from Perl so he needs all the help he can get.</span>
<span class="comment-copy">This made my day. We could explain the intricacies, but, I want to sleep, maybe I will explain pathing in the morning to him, or do you want to?</span>
<span class="comment-copy">There's a typo in the code. It should be <code>with open('file.txt', 'w+') as f:</code>.</span>
<span class="comment-copy">@Flux fixed typo</span>
<span class="comment-copy">The comments regarding <code>input()</code> and <code>raw_input()</code>  only apply to Python 2.  Python 3 has replaced <code>raw_input()</code> with <code>input()</code> and the "old" use of <code>input()</code> is gone.</span>
<span class="comment-copy">That's possible and would be/is a good improvement to make it more intuitive.</span>
