<div class="post-text" itemprop="text">
<p>I am facing a rather elusive bug which seems to be caused by reading from a file. 
I have simplified my program to demonstrate the issue:</p>
<p>consider this program that works fine:</p>
<pre><code>import re

sourceString="Yesterday I had a pizza for lunch it was tasty\n";
sourceString+="today I am thinking about grabbing a burger and tomorrow it\n"; 
sourceString+="will probably be some fish if I am lucky\n\n\n";
sourceString+="see you later!"

jj=["pizza","steak","fish"]

for keyword in jj:
    regexPattern= keyword+".*";
    patternObject=re.compile(regexPattern,re.MULTILINE);
    match=patternObject.search(sourceString);
    if match:
        print("Match found for "+keyword)
        print(match.group()+"\n")
    else:
        print("warning: no match found for :"+ keyword+"\n")
</code></pre>
<p>I am using a very straightforward regex pattern but I am getting the gist of the regex from my array <code>jj</code></p>
<p>the script works as expected (matches patterns containing "pizza" and "fish" but does not match "steak")</p>
<p>now In my actual program I am trying to read these keywords from a file (I don't want to hardcode in the source) </p>
<p>so far I have this:</p>
<pre><code>import re

sourceString="Yesterday I had a pizza for lunch it was tasty\n";
sourceString+="today I am thinking about grabbing a burger and tomorrow it\n"; 
sourceString+="will probably be some fish if I am lucky\n\n\n";
sourceString+="see you later!"

with open('keyWords.txt','r') as f: 
    for keyword in f:
        regexPattern= keyword+".*";
        patternObject=re.compile(regexPattern,re.MULTILINE);
        match=patternObject.search(sourceString);
        if match:
            print("Match found for "+keyword)
            print(match.group())
        else:
            print("warning: no match found for :"+ keyword)
</code></pre>
<p>where keyWords.txt will contain the following:</p>
<pre><code>pizza
steak
fish
</code></pre>
<p>but this breaks the code because somehow only the LAST keyword in the file will successfully match (if a match exists). </p>
<p>What gives?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('keyWords.txt','r') as f: 
    for keyword in f:
        regexPattern = keyword.strip() + ".*";
</code></pre>
<p>Use <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow"><code>strip()</code></a> to remove any <a href="https://en.wikipedia.org/wiki/Newline" rel="nofollow">newline</a> characters from <code>keyword</code>. If you know for certain that there won't be any leading whitespace, <a href="https://docs.python.org/3/library/stdtypes.html#str.rstrip" rel="nofollow"><code>rstrip()</code></a> is sufficient.</p>
</div>
<span class="comment-copy">Don't just assume that it is a bug.  That is simply because each line has a new-line character at the end that you didn't account for.</span>
<span class="comment-copy">..which means due to me not accounting for the newline the program has a bug right? I didn't say the language specification has a flaw</span>
<span class="comment-copy">I'm sorry; I misunderstood.</span>
<span class="comment-copy">no harm done ;)</span>
<span class="comment-copy">This fixed the problem. Great effort</span>
