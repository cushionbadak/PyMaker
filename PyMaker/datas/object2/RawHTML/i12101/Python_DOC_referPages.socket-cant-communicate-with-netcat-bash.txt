<div class="post-text" itemprop="text">
<p>On a vm I used the command: nc -l -p 8221 -e /bin/bash and made a python3 script: </p>
<pre><code>def netcat():
    print ("starting connection")    
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect(("192.168.1.60", 8221))
    while True:
        user = input("what to send?: ")
        s.sendall(bytes(user, "utf-8"))
        time.sleep(5)
        word = "bob"
        data = s.recv(4096)
        if data == b"":
            pass
        else:
            data = data.decode("utf-8")
            print ("Received:", repr(data))
    print ("Connection closed.")
    s.shutdown(socket.SHUT_WR)
    s.close()
netcat()
</code></pre>
<p>this script doesn't work. By don't work I mean when I  run a command with my python script, lets say "pwd", it just loads but never runs.
When, instead of running the python script I would run nc 192.168.1.60 8221, it would work fine. Any ideas why?</p>
</div>
<div class="post-text" itemprop="text">
<p>From <code>input()</code>'s <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow">documentation</a>:</p>
<blockquote>
<p>The function then reads a line from input, converts it to a string
  (stripping a trailing newline), and returns that.</p>
</blockquote>
<p>But Bash is operating in canonical mode and won't process input till a new line arrives. This won't happen, leading to <code>recv</code> blocking forever.</p>
<p>add a <code>+ '\n'</code> after the <code>user = input("what to send?: ")</code> to fix it.</p>
</div>
<span class="comment-copy">Define "doesn't work". Do you get an exception from <code>connect</code>? What's the error message?</span>
<span class="comment-copy">@JohnKugelman   I'll edit the question, good comment</span>
<span class="comment-copy">What do you mean it "loads but never runs"? Do you see <code>starting connection</code>? If you hit Ctrl-C, what line was it stuck on? Please be as detailed as you can.</span>
<span class="comment-copy">It is indeed the answer to my question but there is still something strange. Lets say there was a mistype (ex: pwds) there is simply nothing output, no "bash syntax error".</span>
<span class="comment-copy">Errors are written to <code>stderr</code>, not <code>stdout</code>. use <code>-e '/bin/bash 2&gt;&amp;1'</code> to have netcat send both streams to the client.</span>
<span class="comment-copy">Wow! Thank you so much! I have 1 last question, lets say I would like to let the user make a new request without receiving any response, do I have to use the threading module? I would like to emplement other services (ex: ftp) independantly. EX: I still communicate to nc while ftp is connecting or a nmap scan running at the same time.</span>
<span class="comment-copy">With <code>select</code> you can wait on the socket and stdin at the same time. Then you can run processes in background e.g. <code>(sleep 2s; echo 'hello') &amp;</code> and receive their output asynchronously. But remember, for serious use, there is <code>ssh</code>.</span>
<span class="comment-copy">I do not understand the background processes. To clarify, the processes are not started on the remote host, it is my host that starts them. I thought that the only way possible was with threading, os or subprocess. Were you talking about any of these in your example?</span>
