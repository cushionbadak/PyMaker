<div class="post-text" itemprop="text">
<p>I have this program that simply takes two files and compares them line by line. It works fine as long as both files have the same amount of lines. My problem would be what if for example file2 has more lines than file1? Or the other way around. I get the  IndexError: list index out of range error when this happens.  What can  I do to take this into account? </p>
<pre><code>#Compares two files
def compare(baseline, newestFile):



    baselineHolder = open(baseline)
    newestFileHolder = open(newestFile)



    lines1 = baselineHolder.readlines()
    a = returnName(baseline)
    b = returnName(newestFile)


    for i,lines2 in enumerate(newestFileHolder):
        if lines2 != lines1[i]:
            add1 = i + 1
            print ("line ", add1, " in newestFile is different \n")
            print("TAKE A LOOK HERE----------------------TAKE A LOOK HERE")
            print (lines2)
        else:
            addRow = 1 + i
            print ("line  " + str(addRow) + " is identical")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of reinventing the wheel, why not use the built-in <a href="https://docs.python.org/3/library/difflib.html" rel="nofollow"><code>difflib</code></a>? Here is an example using <a href="https://docs.python.org/3/library/difflib.html#difflib.unified_diff" rel="nofollow"><code>difflib.unified_diff</code></a> from the docs:</p>
<blockquote>
<pre><code>&gt;&gt;&gt; s1 = ['bacon\n', 'eggs\n', 'ham\n', 'guido\n']
&gt;&gt;&gt; s2 = ['python\n', 'eggy\n', 'hamster\n', 'guido\n']
&gt;&gt;&gt; for line in unified_diff(s1, s2, fromfile='before.py', tofile='after.py'):
...     sys.stdout.write(line)   
--- before.py
+++ after.py
@@ -1,4 +1,4 @@
-bacon
-eggs
-ham
+python
+eggy
+hamster
 guido
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You should catch the <code>IndexError</code> and then stop your comparison</p>
<pre><code>    for i,lines2 in enumerate(newestFileHolder):
        try:
            if lines2 != lines1[i]:
                add1 = i + 1
                print ("line ", add1, " in newestFile is different \n")
                print("TAKE A LOOK HERE----------------------TAKE A LOOK HERE")    
                print (lines2)
            else:
                addRow = 1 + i
                print ("line  " + str(addRow) + " is identical")
        except IndexError:
            print("Exit comparison")
            break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Perhaps you can use <a href="https://docs.python.org/2/library/itertools.html#itertools.izip_longest" rel="nofollow"><code>itertools.izip_longest</code></a>. If one sequence has been exhausted, it emits some fill value (by default, <code>None</code>):</p>
<pre><code>import itertools

for l, r in itertools.izip_longest(open('foo.txt'), open('bar.txt')):
    if l is None: # foo.txt has been exhausted
        ...
    elif r is None: # bar.txt has been exhausted
        ...
    else: # both still have lines - compare now the content of l and r
        ...
</code></pre>
<p><strong>Edit</strong> As @danidee correctly notes, for Py3 it is <code>zip_longest</code>.</p>
</div>
<span class="comment-copy">Then you can only compare as many lines as the smaller file has.</span>
<span class="comment-copy">Do you have to use <code>python</code>? Linux has a tool called <code>diff</code> (probably also available in Win) which does exactly that.</span>
<span class="comment-copy">I'll definitely take a look at this</span>
<span class="comment-copy">@Ami Tavory...it should be noted that it's <code>itertools.zip_longest</code> in <code>py3x</code></span>
<span class="comment-copy">@danidee You're right. Many thanks.</span>
