<div class="post-text" itemprop="text">
<p>I'm working on python attempting to make a Caeser Cipher program.
So I've made a GUI platform and have been able to make the cipher part work, but it spits out the message only in ASCII.</p>
<p>When you run my program, it takes the info, you say the amount of letters you want the alphabet to shift by, and then says the message in ASCII, how can i get this part to come out in letters?</p>
<p>I tried storing the for loop into a variable then just adding that variable into a common ascii --&gt; character converter, but that doesn't work.</p>
<p>Here's my code:</p>
<pre><code>def encode(userPhrase):
    msg = input('Enter your message: ')
    key = eval(input("enter a number"))
    finalmsg = msg.upper()
    for ch in finalmsg:
        print( str( ord(ch)+key ), end=' ')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Change your <code>str</code> to <code>chr</code>: </p>
<pre><code>print( chr( ord(ch)+key ), end=' ')
</code></pre>
<p>Per the documentation on <a href="https://docs.python.org/3/library/functions.html#chr" rel="nofollow">chr</a>:</p>
<blockquote>
<p>Return the string representing a character whose Unicode code point is the integer i. For example, chr(97) returns the string 'a', while chr(957) returns the string 'Î½'. This is the inverse of ord().</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You need to allow the letters at the end of the alphabet to wrap around to A,B,C...  You can do it with modulo arithmetic (complicated), or see the example below</p>
<p>Use <code>chr</code>  instead of <code>str</code>.  You pass a parameter <code>userPhrase</code> and you ask to enter a message.  Also, I suggest using <code>int</code> instead of <code>eval</code>. </p>
<pre><code>def encode(userPhrase):
  msg = input('Enter your message: ')
  key = int(input("enter a number"))
  finalmsg = msg.upper()
  for ch in finalmsg:
    new_ch = ord(ch)+key
    if new_ch &gt; ord('Z'):
      new_ch -= 26
    print( chr(new_ch), end=' ')
</code></pre>
<p>The last problem you have is for non letters (e.g. spaces, etc.)</p>
</div>
<span class="comment-copy">On a separate note, do not use <code>eval(input())</code>. It is a terrible security flaw to directly evaluate user input. Instead, use <code>int(input())</code>.</span>
<span class="comment-copy">Yup, as easy as that.. Thanks!!</span>
<span class="comment-copy">I didn't think about adding the wrap around, so that's actually a cool tool. Is there a way to do this backwards? as in when i have a word like I F M M P and make it so my code has a key of 1 to make it say Hello.  i tried playing around with what you suggested, but it still keeps going through the alphabet and into the other characters like &lt; &gt; and numbers and so on</span>
<span class="comment-copy">First question: to reverse, subtract the key instead of adding it <code>new_ch = ord(ch) - key</code>, then check if new value is lower than the character for letter 'A':  <code>if new_ch &lt; ord('A'): new_ch += 26</code>.  For the second question (non alphabetic), I would suggest printing them as is: just add <code>if 'A' &lt;= ch &lt;= 'Z':</code> before the line that adds the key.</span>
