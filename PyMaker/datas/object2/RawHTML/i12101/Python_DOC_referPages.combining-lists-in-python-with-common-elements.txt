<div class="post-text" itemprop="text">
<p>I am generating lists with only '1' and '0' in them:</p>
<pre><code>list_1 = [1,0,0,1,0,0]
list_2 = [1,0,1,0,1,0]
</code></pre>
<p>I am trying to combine them so that if a '1' appears in either list, it appears in the new list, and replaces any '0'</p>
<pre><code>new_list = [1,0,1,1,1,0]
</code></pre>
<p>What would the code be?  </p>
</div>
<div class="post-text" itemprop="text">
<p>Use bitwise or <code>|</code> on a list comprehension and using a <code>zip</code> function:</p>
<pre><code>&gt;&gt;&gt; [x | y for x,y in zip(list_1, list_2)]
[1, 0, 1, 1, 1, 0]
</code></pre>
<p>If the lists don't have same length, use <a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.zip_longest" rel="nofollow"><code>zip_longest</code></a> from <code>itertools</code> module:</p>
<pre><code>&gt;&gt;&gt; l1 = [1,1,1,0,0,1]
&gt;&gt;&gt; l2 = [1,0,1,1,1,0,0,0,1]
&gt;&gt;&gt; 
&gt;&gt;&gt; [x | y for x,y in zip_longest(l1, l2, fillvalue=0)]
[1, 1, 1, 1, 1, 1, 0, 0, 1]
</code></pre>
<p>Another way, is to use <a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.starmap" rel="nofollow"><code>starmap</code></a> as well and remember in Python3, this yields a generator so you will have to convert it to <code>list</code> after that, this way:</p>
<pre><code>&gt;&gt;&gt; from itertools import starmap
&gt;&gt;&gt; from operator import or_ #bitwise or for the function passed to starmap
&gt;&gt;&gt; list(starmap(or_, zip_longest(l1,l2, fillvalue=0)))
[1, 1, 1, 1, 1, 1, 0, 0, 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's how you could create your third list:</p>
<pre><code>list_3 = [int(x or y) for x,y in zip(list_1, list_2)]
</code></pre>
<p>I have a feeling there's a way better way to accomplish what you want, without using these lists. You can think of your lists as binary numbers:</p>
<pre><code>num_1 = int("100100", 2)
num_2 = int("101010", 2)
num_3 = num_1 | num_2  # bitwise or
print(bin(num_3))  # prints '0b101110'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you're looking for is the bitwise OR operation.  An OR of two bits will be 1 if either of the input bits are 1, and 0 if both are 0.  </p>
<p>There are a variety of ways to do this in python over a list, but the simplest would just be a for loop.  Assuming the lists are the same length, this would work:</p>
<pre><code>    new_list = []
    for i in range(len(list_1)):
        new_list.append(list_1[i] | list_2[i]) # the '|' character means bitwise OR
</code></pre>
</div>
<span class="comment-copy">What have you tried already? Please show your code and explain what is not working for you.</span>
<span class="comment-copy">I thought of using a for loop to look at the items in both lists. if either list had a '1' then append a '1' else '0', but I am not sure of the loop code: for ex: for item in list_1 and item in list_2: .... but this results in an error!</span>
<span class="comment-copy">the first solution works. I am not sure how the second solution would receive the sequence since I am using a different routine to populate the lists.</span>
<span class="comment-copy">Initially the lists would be the same length, but eventually, they would not. I think coding to the longest, (if  len(ls_1) &gt;len(ls_2)...)  would be the solution.</span>
