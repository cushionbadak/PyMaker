<div class="post-text" itemprop="text">
<pre><code>x='andi'
print re.search('an[.]+',x)
</code></pre>
<p>It returns <code>None</code>. Does it suppose to match the string.
In documentation the <code>.</code> (dot) can represents any character. And <code>+</code> means 1 or more repetition. So with <code>[.]+</code>, it should match <code>d</code> in the string.</p>
<p>Can anyone explain ? Why does it return <code>None</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>When you use:</p>
<pre><code>print re.search('an[.]+', x)
</code></pre>
<p>it matches <strong>literal dot</strong> since dot is inside <code>[ ]</code> i.e. a character class where special regex meta-characters loose their special meaning.</p>
<p>You should be using:</p>
<pre><code>print re.search('an.+', x)
</code></pre>
<p><strong>Example:</strong></p>
<pre><code>&gt;&gt;&gt; print re.search('an.+', x).group()
andi
</code></pre>
</div>
<span class="comment-copy">what do you think <code>[]</code> does?</span>
<span class="comment-copy">Doc citation: <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">Per the <code>re</code> docs for <code>[]</code></a>: "Special characters lose their special meaning inside sets. For example, <code>[(+*)]</code> will match any of the literal characters <code>'('</code>, <code>'+'</code>, <code>'*'</code>, or <code>')'</code>." (Note that character classes, e.g. <code>\w</code> still have special meaning, it's only special individual characters that lose special meaning).</span>
<span class="comment-copy">@anubhava : sorry late response. This is perfecto man. I have used the [ ] not in the right place . Thanks a lot. :-)</span>
