<div class="post-text" itemprop="text">
<p>I am very new to <code>python</code> and just installed <code>Eric6</code>  I am wanting to search a folder (and all sub dirs) to print the filename of any file that has the extension of <code>.pdf</code>  I have this as my syntax, but it errors saying</p>
<blockquote>
<p>The debugged program raised the exception unhandled FileNotFoundError<br/>
  "[WinError 3] The system can not find the path specified 'C:'"<br/>
  File: C:\Users\pcuser\EricDocs\Test.py, Line: 6</p>
</blockquote>
<p>And this is the syntax I want to execute:</p>
<pre><code>import os

results = []
testdir = "C:\Test"
for folder in testdir:
  for f in os.listdir(folder):
    if f.endswith('.pdf'):
        results.append(f)

print (results)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/glob.html"><code>glob</code></a> module.</p>
<blockquote>
<p>The glob module finds all the pathnames matching a specified pattern</p>
</blockquote>
<pre><code>import glob, os
parent_dir = 'path/to/dir'
for pdf_file in glob.glob(os.path.join(parent_dir, '*.pdf')):
    print (pdf_file)
</code></pre>
<p>This will work on Windows and *nix platforms.</p>
<hr/>
<p>Just make sure that your path is fully escaped on windows, could be useful to use a raw string.</p>
<p>In your case, that would be:</p>
<pre><code>import glob, os
parent_dir = r"C:\Test"
for pdf_file in glob.glob(os.path.join(parent_dir, '*.pdf')):
    print (pdf_file)
</code></pre>
<hr/>
<p>For only a list of filenames (not full paths, as per your comment) you can do this one-liner:</p>
<pre><code>results = [os.path.basename(f) for f in glob.glob(os.path.join(parent_dir, '*.pdf')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Right now, you search each character string inside of testdir's variable.</p>
<p>so it's searching the folder for values "C", ":", "\", "T" etc. You'll want to also escape your escape character like "C:\...\...\"</p>
<p>You probably was to use os.listdir(testdir) instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try running your Python script from <code>C:</code>. From the Command Prompt, you might wanna do this:</p>
<pre><code>&gt; cd C:\    
&gt; python C:\Users\pcuser\EricDocs\Test.py
</code></pre>
<p>As pointed out by Tony Babarino, use <code>r"C:\Test"</code> instead of <code>"C:\Test"</code> in your code.</p>
</div>
<div class="post-text" itemprop="text">
<p>There are a few problems in your code, take a look at how I've modified it below:</p>
<pre><code>import os

results = []
testdir = "C:\\Test"
for f in os.listdir(testdir):
    if f.endswith('.pdf'):
        results.append(f)

print (results)
</code></pre>
<p>Note that I have escaped your path name, and removed your first <code>if folder...</code>. That wasn't getting the folders as you expected, but rather selecting a character of the path string one at a time.</p>
<p>You will need to modify the code to get it to look through all folders, this currently doesn't. Take a look at the <a href="https://docs.python.org/3/library/glob.html" rel="nofollow">glob</a> module.</p>
</div>
<div class="post-text" itemprop="text">
<p>You will need to escape the backslash on windows and you can use os.walk to get all the pdf files.</p>
<pre><code>   for root,dirs,files in os.walk(testdir):
       for f in files:
           if f.endswith('.pdf'):
            results.append(f)
   print (results)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are basically iterating through the string <code>testdir</code> with the first <code>for</code> loop then passing each character to <code>os.listdir(folder)</code> does not make any sense then, just remove that first <code>for</code> loop and use <a href="https://docs.python.org/3/library/fnmatch.html?highlight=fnmatch#fnmatch.fnmatch" rel="nofollow"><code>fnmatch</code></a> method from <code>fnmatch</code> module:</p>
<pre><code>import os
from fnmatch import fnmatch

ext = '*.pdf'
results = []
testdir = "C:\Test"
for f in os.listdir(testdir):
    if fnmatch(f, ext):
        results.append(f)

print (results)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try <code>testdir = r"C:\Test"</code> instead of <code>testdir = "C:\Test"</code>. In python You have to escape special characters like for example <code>\</code>. You can escape them also with symbol '\' so it would be <code>"C:\\Test"</code>. By using <code>r"C:\Test"</code>, You are telling python to use <em>raw</em> string.</p>
<p>Also <code>for folder in testdir:</code> line doesn't make sense because <code>testdir</code> is a string so You are basically trying to iterate over a string.</p>
</div>
<span class="comment-copy">Is "C:\Test" your actual real directory name, or are you anonymizing it because the real directory is "C:\users\your_real_name" or something?</span>
<span class="comment-copy">Why <code>for folder in testdir</code> ??? .. You are looping through <code>tesdir</code> string instead not each folder in <code>testdir</code></span>
<span class="comment-copy">@Kevin - that is the real directory I am wanting to scan.  I created a "Test" directory and placed a few diff file types in it to run this snippet on.</span>
<span class="comment-copy">@IronFist - I am needing to do a recursive search, and once pushed to production environment the direcotry may/may not contain sub directories.</span>
<span class="comment-copy">Related <a href="http://stackoverflow.com/q/28682226">List comprehension with if conditional to get list of files of a specific type</a></span>
<span class="comment-copy">This code executes perfectly!  One question, can you use single or double quotes in python?</span>
<span class="comment-copy">You can use either, it's just convention.</span>
<span class="comment-copy">I also added in this as I only wanted filenames not full dir info (but I didn't say that in my question) print (os.path.basename(pdf_file))</span>
<span class="comment-copy">@MichaelMormon: If you're going to print your code use single quotes because this will use less ink. :-)</span>
<span class="comment-copy">Using raw strings to avoid accidental escape characters is a good idea in general, but I don't think it's responsible for the error here. "\T" doesn't escape to a tab character if the T is in caps.</span>
<span class="comment-copy">Changing it to r"C:\Test" produces the same error.</span>
<span class="comment-copy">delete <code>for folder in testdir:</code> line and it will work</span>
