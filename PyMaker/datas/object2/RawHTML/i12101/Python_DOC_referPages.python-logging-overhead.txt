<div class="post-text" itemprop="text">
<p>I'm writing my code using <a href="https://docs.python.org/3/library/asyncio.html" rel="nofollow">asyncio</a> module with a lot of info/debug logging (<strong>logging.FileHandler</strong>). I'm concerned that extensive using of logging in <strong>asyncio</strong> will decrease the performance of my application, because logging is blocking operation.</p>
<p>What is the best solution for that? Didn't find any information on logging overhead. </p>
<p>Maybe using <a href="https://docs.python.org/2/library/logging.handlers.html#sockethandler" rel="nofollow">SocketHandler</a> or <a href="https://docs.python.org/2/library/logging.handlers.html#memoryhandler" rel="nofollow">MemoryHandler</a> will help? For metrics I'm using <a href="https://docs.atlassian.com/aiostats/latest/_modules/aiostats.html" rel="nofollow">statsd</a> (which is also blocking operation, but must be very fast), but I'm more concerned with non-blocking logging.</p>
<p>Code example:</p>
<pre><code>@asyncio.coroutine
def creator_worker(self):
    while not self.q.empty():
        with (yield from self.semaphore):
            sample = yield from self.q.get()
            logging.debug('Got new sample, processing')
            # start processing
</code></pre>
<p>I'm aware of </p>
<pre><code>import os
os.environ['PYTHONASYNCIODEBUG'] = '1'
import asyncio
</code></pre>
<p>But that's not what I'm looking for.</p>
<p>Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>Logging document provided a solution, log through a QueueHandler, then use a QueueListener to handle log record in another thread.
<a href="https://docs.python.org/3.6/howto/logging-cookbook.html#dealing-with-handlers-that-block" rel="nofollow noreferrer">https://docs.python.org/3.6/howto/logging-cookbook.html#dealing-with-handlers-that-block</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You may create a custom log handler.
The handler will push logging record into a queue.
Another thread may read data from the queue and perform actual logging.</p>
<p>As an option you may use <code>SysLogHandler</code> -- it's pretty fast.
But, anyway, logging too much reduces performance, you can do nothing with it.</p>
</div>
