<div class="post-text" itemprop="text">
<p>I am creating a script that parses a csv file and, in an effort to remain as agnostic to formatting as possible, I am using regular expressions to replace specific substrings. I am looking to replace a line in a cell with the author's name, which can be any number of characters and will contain an email address. It is guaranteed that there will be a space before the substring and that it will be followed by either newline characters (multiple lines in a cell) or a comma (last item in a cell). </p>
<p>I am using...</p>
<pre><code>line = re.sub(' \S+[^,]', " " + author, line)
</code></pre>
<p>...to try to replace everything between the space and a potential comma, but it is including the trailing commas in the line in the expression and replacing them with the author. I have previously tried...</p>
<pre><code>line = re.sub(' \S+(?!,)', " " + author, line)
</code></pre>
<p>...because this sounds like a job for a negative lookahead but I still haven't been able to retain the trailing commas.</p>
<p>I am new to regular expressions so there is probably something simple that I am missing, but I haven't been able to get this to work.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this instead:</p>
<pre><code>/[^\s,]+(?=[,\n])/
</code></pre>
</div>
<span class="comment-copy">Use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module.</span>
<span class="comment-copy">Would :' [^\s,]+(?=[,\n])' work?</span>
<span class="comment-copy">@Someone if you make that an answer I will accept it. I figured that it was something stupid that I was missing.</span>
<span class="comment-copy">It turns out that I was asking the wrong question, but this answered what I asked. Thanks!</span>
<span class="comment-copy">@randman2011 lol np</span>
