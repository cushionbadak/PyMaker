<div class="post-text" itemprop="text">
<p>parser.cpp:</p>
<pre><code>#include &lt;python3.4/Python.h&gt;
#include &lt;fstream&gt;
#include &lt;string&gt;
#include &lt;vector&gt;
#include &lt;iostream&gt;
using namespace std;
extern "C"
{
    PyObject* test(const char* filename)
    {
        size_t LIM = 1000;
        PyObject* result = PyList_New(LIM);
        for (size_t i = 0; i &lt; LIM; i++) {
            PyObject * t = PyList_New(0);
            PyList_Append(t, PyLong_FromLong(1));
            cout &lt;&lt; i &lt;&lt; "/" &lt;&lt; PyList_Size(result) &lt;&lt; " " &lt;&lt; t &lt;&lt; endl;
            if (PyList_SetItem(result, i, t) != 0) {
                cout &lt;&lt; "!" &lt;&lt; endl;
            }
        }
        Py_INCREF(result);
        return result;
    }
}
</code></pre>
<p>compiles by:</p>
<pre><code>g++ -O2 -fPIC -std=c++11 -shared -o parser_c.so parser_c.cpp -lpython3.4m
</code></pre>
<p>test.py:</p>
<pre><code>import ctypes
import datetime
p = ctypes.CDLL('./parser_c.so')
p.test.restype = ctypes.py_object
print(p.test("asd"))
</code></pre>
<p>Executing python3 test.py is terminated with segmentation error and the last line I've got by debug output is</p>
<pre><code>381/1000 0x7f0996bb5a88
</code></pre>
<p>Besides, it's works properly if I don't import datetime in test.py or decrease LIM in parser.cpp.</p>
<p>I can't figure out why that happends.</p>
<p>Can someone help me?</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue is that ctypes releases the global interpreter lock and so calls to Python api functions are undefined</p>
<p><a href="https://docs.python.org/3/library/ctypes.html" rel="nofollow">From the documentation</a>:</p>
<blockquote>
<p>The Python global interpreter lock is released before calling any function exported by these libraries, and reacquired afterwards.</p>
</blockquote>
<p>You need to re-acquire it at the start of your function, and re-release it at the end:</p>
<pre class="lang-cpp prettyprint-override"><code>PyObject* test(const char* filename)
{
    PyGILState_STATE gstate = PyGILState_Ensure();

    // The bulk of your code stays the same and goes here ...

    PyGILState_Release(gstate);

    return result;
}
</code></pre>
</div>
<span class="comment-copy">If you import <code>datetime</code> before <code>ctypes</code>, it works too.</span>
