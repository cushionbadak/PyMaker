<div class="post-text" itemprop="text">
<p>I've been trying to read a file and then overwrite it with some updated data.
I've tried doing it like this:</p>
<pre><code>#Created filename.txt with some data
with open('filename.txt', 'r+') as f:
    data = f.read()
    new_data = process(data)  # data is being changed
    f.seek(0)
    f.write(new_data)
</code></pre>
<p>For some reason, it doesn't overwrite the file and the content of it stays the same.</p>
</div>
<div class="post-text" itemprop="text">
<p>Truncate the file after seeking to the front. That will remove all of the existing data.</p>
<pre><code>&gt;&gt;&gt; open('deleteme', 'w').write('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')
&gt;&gt;&gt; f = open('deleteme', 'r+')
&gt;&gt;&gt; f.read()
'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'
&gt;&gt;&gt; f.seek(0)
&gt;&gt;&gt; f.truncate()
&gt;&gt;&gt; f.write('bbb')
&gt;&gt;&gt; f.close()
&gt;&gt;&gt; open('deleteme').read()
'bbb'
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should add a call to <a href="https://docs.python.org/3/library/io.html#io.IOBase.truncate" rel="nofollow noreferrer"><code>truncate</code></a> after <a href="https://docs.python.org/3/library/io.html#io.IOBase.seek" rel="nofollow noreferrer"><code>seek</code></a> as <a href="https://stackoverflow.com/a/35679565/503099"><code>tdelaney</code></a> suggested.</p>
<p>Try reading and writing in different scopes, the code is more clear that way and the data processing is not done when the file handlers are open. </p>
<pre><code>data = ''
with open('filename.txt', 'r') as f:
    data = f.read()

new_data = process(data)  
with open('filename.txt', 'w+') as f:
    f.write(new_data)
</code></pre>
</div>
<span class="comment-copy">Could you elaborate on what's not working?</span>
<span class="comment-copy">Does it read the file but not write it, or nothing at all?</span>
<span class="comment-copy"><code>w+</code> truncates a file, so this will always be empty on the <code>f.read()</code>. <code>a+</code> also creates the file but you will need to seek to the beginning before reading.</span>
<span class="comment-copy">@AChampion you're right, I've changed my question a bit.</span>
<span class="comment-copy">What's not working this will over-write the data - but will leave data behind if the update is smaller than the original. Just split the call over 2 <code>with</code> statements one <code>with open(..., 'r')</code> and one <code>with open(..., 'w')</code> - truncates.</span>
<span class="comment-copy">It still doesn't work. I'm using the code in a loop and each time the data read from the file is the original data I gave it before the loop started - it doesn't overwrite the file...</span>
<span class="comment-copy">Then we may have to blame your other code. For instance, does <code>process</code> just return the same data? (you could add <code>assert data != new_data</code> to debug. Maybe you are writing a different file than you think. Use <code>os.path.abspath</code> to print the file you actually use.</span>
<span class="comment-copy">Thank you for your answer, I've found the problem in another place in my code, just as you suggested.</span>
<span class="comment-copy">You are completely right, I've changed my code a bit, but it still doesn't work.</span>
