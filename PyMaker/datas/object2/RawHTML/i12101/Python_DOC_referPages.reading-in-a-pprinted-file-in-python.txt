<div class="post-text" itemprop="text">
<p>I have a long-running script that collates a bunch of data for me. Without thinking too much about it, I set it up to periodically serialize all this data collected out to a file using something like this:</p>
<pre><code>pprint.pprint(data, open('my_log_file.txt', 'w'))
</code></pre>
<p>The output of <code>pprint</code> is perfectly valid Python code. Is there an easy way to read in the file into memory so that if I kill the script I can start where I left off? Basically, is there a function which parses a text file as if it were a Python value and returns the result?</p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand the problem correctly, you are writing <strong>one</strong> object to a log file?  In that case you can simply use eval to turn it back in to a valid python object.</p>
<pre><code>from pprint import pprint

# make some simple data structures
dct = {k: v for k, v in zip('abcdefghijklmnopqrstuvwxyz', range(26))}

# define a filename
filename = '/tmp/foo.txt'

# write them to some log
pprint(dct, open(filename, 'w'))

# open them back out of that log and use the readlines() function
# to let python split on the new lines for us
with open(filename, 'r') as f:
    obj = eval(f.read())

print(type(obj))
print(obj)
</code></pre>
<p>It gets a little trickier if you are trying to write multiple objects to this file, but that is still doable.</p>
<p>The output of the above script is </p>
<pre><code>&lt;type 'dict'&gt;
{'a': 0, 'c': 2, 'b': 1, 'e': 4, 'd': 3, 'g': 6, 'f': 5, 'i': 8, 'h': 7, 'k': 10, 'j': 9, 'm': 12, 'l': 11, 'o': 14, 'n': 13, 'q': 16, 'p': 15, 's': 18, 'r': 17, 'u': 20, 't': 19, 'w': 22, 'v': 21, 'y': 24, 'x': 23, 'z': 25}
</code></pre>
<p>Does this solve your problem?</p>
</div>
<span class="comment-copy">It really depends on what you are pretty-printing... You might be able to use <code>json.load</code> if you're just printing <code>dict</code>, <code>list</code> and such.</span>
<span class="comment-copy">It's definitely not valid json.</span>
<span class="comment-copy">Does it stay valid python if you just kill the script? You could check the <a href="https://docs.python.org/3/library/parser.html" rel="nofollow noreferrer">parser</a> module.</span>
<span class="comment-copy">The file itself isn't that big, in not worried about killing it while it's writing the file. I mean, I guess I could just add <code>data=</code> to the front of the file with a text editor and rename the file to end in <code>.py</code>, then import it as a module. That just seems clunky though.</span>
