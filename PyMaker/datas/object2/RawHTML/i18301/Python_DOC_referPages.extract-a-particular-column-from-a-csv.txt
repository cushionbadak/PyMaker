<div class="post-text" itemprop="text">
<p>I have a .csv file in the following format:</p>
<pre><code>ID1    ID2    city       Country
AR     xyz    Tokyo      Japan
AR            New York   USA
AR     abc    Vienna     Austria
</code></pre>
<p>I want to extract the third column data from the file using a regular expression so the output would be:</p>
<pre><code>Tokyo
New York
Vienna
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Why not just use <a href="http://docs.python.org/3/library/csv.html" rel="nofollow">csv</a> module? This can be much faster.</p>
<pre><code>import csv

with open('this.file') as this_file:
  source = csv.reader(this_file, delimiter=' ')
  next(source)  # skipping header
  for row in source:
    print(row[3])
</code></pre>
</div>
<span class="comment-copy">Are you sure that's a <code>csv</code> file?  The "c" stands for comma, and there aren't any commas.  Sometimes people use it to mean "delimiter-separated", and to include semicolons and tabs, but your data doesn't seem to be separated by that either.</span>
<span class="comment-copy"><code>next(source)</code> instead of <code>source.next()</code></span>
<span class="comment-copy">@BurhanKhalid sorry, tested that on 2.7...</span>
<span class="comment-copy">should use <code>with open('this.file', 'rb') as f</code>.</span>
<span class="comment-copy"><code>with open(...) as f:</code> is idiomatic Python, not some special goodness; besides, <code>open()</code> without a <code>.close()</code> of any sort is simply bad practice.</span>
<span class="comment-copy">If the OP is using Python 2.7, then the correct way to open a <code>csv</code> file is using <code>open('this.file', 'rb')</code>.  If the OP is using Python 3, then it should be <code>open('this.file', 'r', newline='')</code>.  I'm also a little worried about the delimiters-- if they're spaces, won't using <code>" "</code> as the delimiter break <code>New York</code> into two parts?</span>
