<div class="post-text" itemprop="text">
<p>I'm having an issue parsing data after reading a file. What I'm doing is reading a binary file in and need to create a list of attributes from the read file all of the data in the file is terminated with a null byte. What I'm trying to do is find every instance of a null byte terminated attribute.</p>
<p>Essentially taking a string like</p>
<pre class="lang-none prettyprint-override"><code>Health\x00experience\x00charactername\x00
</code></pre>
<p>and storing it in a list.</p>
<p>The real issue is I need to keep the null bytes in tact, I just need to be able to find each instance of a null byte and store the data that precedes it. </p>
</div>
<div class="post-text" itemprop="text">
<p>While it boils down to using <code>split('\x00')</code> a convenience wrapper might be nice.</p>
<pre><code>def readlines(f, bufsize):
    buf = ""
    data = True
    while data:
        data = f.read(bufsize)
        buf += data
        lines = buf.split('\x00')
        buf = lines.pop()
        for line in lines:
            yield line + '\x00'
    yield buf + '\x00'
</code></pre>
<p>then you can do something like</p>
<pre><code>with open('myfile', 'rb') as f:
    mylist = [item for item in readlines(f, 524288)]
</code></pre>
<p>This has the added benefit of not needing to load the entire contents into memory before splitting the text.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python doesn't treat NUL bytes as anything special; they're no different from spaces or commas. So, <a href="http://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>split()</code></a> works fine:</p>
<pre><code>&gt;&gt;&gt; my_string = "Health\x00experience\x00charactername\x00"
&gt;&gt;&gt; my_string.split('\x00')
['Health', 'experience', 'charactername', '']
</code></pre>
<p>Note that <code>split</code> is treating <code>\x00</code> as a <em>separator</em>, not a <em>terminator</em>, so we get an extra empty string at the end. If that's a problem, you can just slice it off:</p>
<pre><code>&gt;&gt;&gt; my_string.split('\x00')[:-1]
['Health', 'experience', 'charactername']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To check if string has NULL byte, simply use <code>in</code> operator, for example:</p>
<pre><code>if b'\x00' in data:
</code></pre>
<p>To find the position of it, use <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow"><code>find()</code></a> which would return the lowest index in the string where substring sub is found. Then use optional arguments <em>start</em> and <em>end</em> for slice notation.</p>
</div>
<div class="post-text" itemprop="text">
<p>Split on null bytes; <code>.split()</code> returns a list:</p>
<pre><code>&gt;&gt; print("Health\x00experience\x00charactername\x00".split("\x00"))
['Health', 'experience', 'charactername', '']
</code></pre>
<p>If you know the data always ends with a null byte, you can slice the list to chop off the last empty string (like <code>result_list[:-1]</code>).</p>
</div>
<span class="comment-copy">Thanks for the help, the issue I have though is I forgot to say in my initial question I need to keep all of the nullbyte in place, I just need to be able to take the input and find the nullbyte, sorry I didn't clarify that initially</span>
<span class="comment-copy">You can just add the nullbyte back, right?</span>
<span class="comment-copy">@user2806298 Edited to keep the nullbytes in place</span>
<span class="comment-copy">I forgot to say in my initial question I need to keep all of the nullbyte in place, I just need to be able to take the input and find the nullbyte, sorry I didn't clarify that initially</span>
<span class="comment-copy">You can just add the nullbyte back, right?</span>
<span class="comment-copy">@user2806298: As justhalf implies, Python's <code>str.split</code> method doesn't  have any way to keep the separators, but it's easy to just add them back on to each one. For example: <code>[s+'\x00' for s in my_string.split('\x00')[:-1]]</code>.</span>
<span class="comment-copy">Yeah the extra slash present in error  	 	 I forgot to say in my initial question I need to keep all of the nullbyte in place, I just need to be able to take the input and find the nullbyte, sorry I didn't clarify that initially</span>
<span class="comment-copy">You can just add the nullbyte back, right?</span>
