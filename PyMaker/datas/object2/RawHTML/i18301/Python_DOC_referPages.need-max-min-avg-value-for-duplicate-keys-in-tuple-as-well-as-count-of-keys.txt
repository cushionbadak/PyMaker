<div class="post-text" itemprop="text">
<p>Using python, I am trying to figure out how to extract unique keys from a list of tuple pairs, with the highest, lowest and average values, as well as a count of how many keys, for example with this list:</p>
<pre><code>[('a', 1), ('b', 3,), ('a', 9), ('b', 0), ('b', 9), ('a', 10), ('c', 2)]
</code></pre>
<p>I need to extract this information:</p>
<pre><code>a: max = 10, min = 1, avg = 7 count = 3
b: max = 9, min = 0, avg = 4 count = 3
c: max = 2, min = 2, avg = 2, count = 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="http://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow">defaultdict</a> to gather the information.</p>
<pre><code>from collections import defaultdict

data = [('a', 1), ('b', 3,), ('a', 9), ('b', 0), ('b', 9), ('a', 10), ('c', 2)]

pool = defaultdict(list)
for key, value in data:
    pool[key].append(value)

print(pool)
</code></pre>
<p>You should have no problem to implement the calculation of <a href="http://docs.python.org/3/library/functions.html#min" rel="nofollow">min</a>, <a href="http://docs.python.org/3/library/functions.html#max" rel="nofollow">max</a> and average (<a href="http://docs.python.org/3/library/functions.html#sum" rel="nofollow">sum</a>/<a href="http://docs.python.org/3/library/functions.html#len" rel="nofollow">len</a>) for yourself.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your target looks like a dictionary of dictionaries. So build dictionary taking the 1st element of each tuple as a key. Iterate through the tuples and build up the values for each.
You should end up with something like:</p>
<p>tally = {'a': {'count': 3, 'max': 10, 'avg': 7, 'min': 1}, ... etc.}</p>
</div>
<span class="comment-copy">why are people taking points away for this question? how is that helpful.</span>
<span class="comment-copy">I have been researching quite a bit but have not yet found a solution that I understand.</span>
<span class="comment-copy">Maybe not so helpful without some comments, such as "what have you tried so far?" - you'll get better answers and comments if you also post the code that you've tried and are having trouble with. Otherwise, it just sounds like "someone please write this for me" (which you didn't <i>actually</i> ask, but without any posted code, is an understandable implication).</span>
<span class="comment-copy">You may want to specify that you want a "rounded average". In the case of 'a' you have (10+9+1)/3 = 20/3 which normally ends up being 6 in Python as opposed to 7.</span>
<span class="comment-copy">You might want to ask a question. StackOverflow is not a request-response site, it is not a support forum, it is a <b>question</b>-and-<b>answer</b> site. You ask a question and other readers answer it. In your post there is no question, so it doesn't really fit well into the question-and-answer format.</span>
<span class="comment-copy">We add a single value and so <code>.append</code> is the way to go. Using <code>.extend</code> would give us a TypeError. (Comment: this is the answer to a comment which was removed by the author)</span>
