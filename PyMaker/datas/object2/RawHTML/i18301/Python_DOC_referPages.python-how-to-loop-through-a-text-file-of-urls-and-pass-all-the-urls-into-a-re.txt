<div class="post-text" itemprop="text">
<p>I recently scraped a bunch of metadata using Python's BeautifulSoup Library. I saved all of the urls contained in that metadata to a .txt file. However, I need all of the redirect urls instead.  I'm able to do one url at a time with:</p>
<pre><code>def get_redirect_url(url):
    opener = urllib2.build_opener(urllib2.HTTPRedirectHandler)
    request = opener.open(url)
    return request.url 
print get_redirect_url("www.foo.com")
print ""
</code></pre>
<p>I tried to pass the text file into a list and then pass that list as the argument and I get the following error: "TypeError: get_redirect_url() takes exactly 1 argument (11 given)"</p>
<pre><code>def get_redirect_url(url):
    opener = urllib2.build_opener(urllib2.HTTPRedirectHandler)
    request = opener.open(url)
    return request.url 
with open ('openCRS_url.txt', 'r') as myFile:
    data = [line.strip() for line in myFile]
print get_redirect_url(*data)
print ""
</code></pre>
<p>Is there a way that I can pass either the text file or the list representation of the data from that text file as the parameter of a function, loop through the file, and extract all the redirect urls?  Thank you all.</p>
</div>
<div class="post-text" itemprop="text">
<p>I thin you're calling <code>get_redirect_url()</code> in the wrong way.</p>
<p><code>*</code> is the "splat" operator: It takes a list as input, and expands it into actual positional arguments in the function call.</p>
<p>So, by writing <code>get_redirect_url(*data)</code> you are saying <code>get_redirect_url(url1, url2, url3, ..)</code>. However your function accepts only one argument: <strong>url</strong>.</p>
<p>To sum up, you have to call <code>get_redirect_url()</code> with only one argument at time.</p>
<pre><code>def get_redirect_url(url):
    opener = urllib2.build_opener(urllib2.HTTPRedirectHandler)
    request = opener.open(url)
    return request.url 


with open ('openCRS_url.txt', 'r') as myFile:
    urls = [line.strip() for line in myFile]
    redirect_urls = [get_redirect_url(url) for url in urls]
    print redirect_urls
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code># UNTESTED
def get_lots_of_urls(filename):
    with open(filename) as infile:
        return [get_redirect_url(url.strip()) for url in infile]

for redirect_url in get_lots_of_urls('input_file.txt'):
    print redirct_url
</code></pre>
</div>
<span class="comment-copy">You are able to scrape things with BeatifulSoup but can't loop through a file?</span>
<span class="comment-copy"><a href="http://docs.python.org/3/library/fileinput.html" rel="nofollow noreferrer">docs.python.org/3/library/fileinput.html</a> is the module you want.</span>
<span class="comment-copy">You might want to strip it.</span>
