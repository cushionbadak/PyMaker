<div class="post-text" itemprop="text">
<p>I know you can do something like this in python:</p>
<pre><code>&gt;&gt;&gt; conditional = False
&gt;&gt;&gt; x = [1 if conditional else 2, 3, 4]
[ 2, 3, 4 ]
</code></pre>
<p>but how would I do something like this?</p>
<pre><code>&gt;&gt;&gt; conditional = False
&gt;&gt;&gt; x = [1 if conditional, 3, 4]
[ 3, 4 ]
</code></pre>
<p>That is, I don't want to substitute the <code>1</code> for another number. I want to simply omit it if <code>conditional</code> is false.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use concatenation:</p>
<pre><code>x = ([1] if conditional else []) + [3, 4]
</code></pre>
<p>In other words, generate a sublist that either has the optional element in it, or is empty.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; conditional = False
&gt;&gt;&gt; ([1] if conditional else []) + [3, 4]
[3, 4]
&gt;&gt;&gt; conditional = True
&gt;&gt;&gt; ([1] if conditional else []) + [3, 4]
[1, 3, 4]
</code></pre>
<p>This concept works for more elements too, of course:</p>
<pre><code>x = ([1, 2, 3] if conditional else []) + [4, 5, 6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do it with a slice</p>
<pre><code>x = [1, 3, 4][not conditional:]
</code></pre>
<p>eg</p>
<pre><code>&gt;&gt;&gt; conditional = False
&gt;&gt;&gt; [1, 3, 4][not conditional:]
[3, 4]
&gt;&gt;&gt; conditional = True
&gt;&gt;&gt; [1, 3, 4][not conditional:]
[1, 3, 4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you truly want to avoid the <code>else</code>, you could write a generator for the list items:</p>
<pre><code>def gen_x(conditional):
    if conditional:
        yield 1
    for v in [3, 4]:
        yield v
</code></pre>
<p>Or, <a href="https://docs.python.org/3/whatsnew/3.3.html#pep-380" rel="nofollow noreferrer">since Python 3.3</a>:</p>
<pre><code>def gen_x(conditional):
    if conditional:
        yield 1
    yield from [3, 4]
</code></pre>
<p>And then:</p>
<pre><code>x = list(gen_x(conditional))
</code></pre>
</div>
<span class="comment-copy">There is no list comprehension here, so I removed the tag.</span>
<span class="comment-copy">Same remark applies here as on Abhijit's answer, only more so.</span>
<span class="comment-copy">@MartijnPieters, Ah well this is Python not Ruby :)</span>
<span class="comment-copy">And this won't work if the contition covers more than one element..</span>
<span class="comment-copy">To handle more than one element, define the length of the leading conditional list, and change to <code>condLen=3; [1,1,1,3,4][(not conditional)*condLen:]</code></span>
<span class="comment-copy">This must not be a serious answer...it looks so Perlish to a recent Perl escapee, and unreadable as hell.</span>
