<div class="post-text" itemprop="text">
<p>so I have to sort a file in alphabetical order which isn't my problem. I can do that, but my problem is writing that sorted list into a new file. Here is what I have.</p>
<pre><code>import os
os.chdir("/Users/User/Documents") #(I put my name where it says "User")

user_file = open("info.txt", "r")
file = user_file.read()
file_string = file.split("\n")

file_string.sort()
print(file_string) #This is here just so I can see that it sorted correctly

end_file = open("write.txt", "w")
for item in file_string:
    end = end_file.write(str(item))
    print(end)
</code></pre>
<p>Ok, so my info.txt is what needs to be alphabetized and it is just a list of colors. So my last 4 lines is where I'm struggling. I'm trying to take each item in the file_string and write those into a new file, but print(end) gives me how many characters they are. What am I doing wrong?
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Try doing it this way instead. Yes, this is the full solution.</p>
<pre><code>import os
os.chdir(r'C:\Users\&lt;username&gt;\Documents')
lines = open("info.txt", "r").readlines()
lines.sort()
with open("write.txt", "w") as out:
    out.writelines(lines)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>write()</code> method returns the number of bytes written, so it's working as designed.</p>
<p>You want to write newlines to your file, though (since you removed them from the original file when splitting on newlines), and you mustn't forget to close it, so</p>
<pre><code>for item in file_string:
    end_file.write(item + "\n")
end_file.close()
</code></pre>
<p>would work correctly.</p>
<p>A better solution, though, would be:</p>
<pre><code>with open("info.txt", "r") as user_file:
    file = user_file.readlines()
file.sort()
with open("write.txt", "w") as end_file:
    end_file.writelines(file)
</code></pre>
<p>or even</p>
<pre><code>with open("info.txt", "r") as user_file, open("write.txt", "w") as end_file:
    end_file.writelines(sorted(user_file.readlines()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.x <a href="http://docs.python.org/3/tutorial/inputoutput.html#methods-of-file-objects" rel="nofollow"><code>file.write</code></a> returns the number of characters written to the file, you don't need to worry about that.</p>
<p>The only problem I can think of is that you're not adding any <code>'\n'</code> after words, so all items wind up writing on the same line.</p>
<pre><code>with open("write.txt", "w") as f:
    for item in file_string:
        end_file.write(item + '\n')
</code></pre>
</div>
<span class="comment-copy">Well, aren't the items in the file? (If you can't find the file, it's in your <code>Documents</code> dir.)</span>
<span class="comment-copy">What do you mean "print the end_file"? If you want to print the sorted lines on-screen, just do <code>for line in file: print(line)</code></span>
<span class="comment-copy">Or <code>print("".join(line for line in file))</code></span>
