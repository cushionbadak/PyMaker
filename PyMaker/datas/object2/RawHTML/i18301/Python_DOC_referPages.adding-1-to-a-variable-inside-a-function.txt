<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/9264763/dont-understand-why-unboundlocalerror-occurs">Don't understand why UnboundLocalError occurs [duplicate]</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>So basically I have no idea what is wrong with this small piece of code, and it seems like I can't find a way to make it work.</p>
<pre><code>points = 0

def test():
    addpoint = raw_input ("type ""add"" to add a point")
    if addpoint == "add":
        points = points + 1
    else:
        print "asd"
    return;
test()
</code></pre>
<p>The error I get is:</p>
<pre><code>UnboundLocalError: local variable 'points' referenced before assignment
</code></pre>
<p>Note: I can't place the "points = 0" inside the function, because I will repeat it many times, so it would always set the points back to 0 first.
I am completely stuck, any help would be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>points</code> is not within the function's scope. You can grab a reference to the variable by using <a href="http://docs.python.org/3/reference/simple_stmts.html#grammar-token-nonlocal_stmt">nonlocal</a>:</p>
<pre><code>points = 0
def test():
    nonlocal points
    points += 1
</code></pre>
<p>If <code>points</code> inside <code>test()</code> should refer to the outermost (module) scope, use <a href="http://docs.python.org/3/reference/simple_stmts.html#grammar-token-global_stmt">global</a>:</p>
<pre><code>points = 0
def test():
    global points
    points += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also pass points to the function:
Small example:</p>
<pre><code>def test(points):
    addpoint = raw_input ("type ""add"" to add a point")
    if addpoint == "add":
        points = points + 1
    else:
        print "asd"
    return points;
if __name__ == '__main__':
    points = 0
    for i in range(10):
        points = test(points)
        print points
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Move points into test:</p>
<pre><code>def test():
    points = 0
    addpoint = raw_input ("type ""add"" to add a point")
    ...
</code></pre>
<p>or use <a href="http://docs.python.org/2/reference/simple_stmts.html#the-global-statement" rel="nofollow">global statement</a>, but it is bad practice.
But better way it move points to parameters:</p>
<pre><code>def test(points=0):
    addpoint = raw_input ("type ""add"" to add a point")
    ...
</code></pre>
</div>
<span class="comment-copy">Googling "python unboundlocalerror" would have led you to multiple good explanations of what exactly happens here; and 7 out of the first 10 results are from SO, e.g. <a href="http://stackoverflow.com/questions/9264763/unboundlocalerror-in-python">this</a>. Please do some research before asking a question...</span>
<span class="comment-copy">It worked, thank you!</span>
<span class="comment-copy">+1 for <code>nonlocal</code>, though I favour Xeun's solution.</span>
<span class="comment-copy">As I said in the question, I can't move it into test because it would set it back to 0 everytime I called test(), but thanks for the answer</span>
