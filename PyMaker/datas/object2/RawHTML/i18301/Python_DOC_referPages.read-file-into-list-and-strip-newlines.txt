<div class="post-text" itemprop="text">
<p>I'm having issues in reading a file into a list, When I do it only creates one item from the entire file rather than reading each element into its own field. I'm using <code>\n</code> as the thing to strip on, but I can't get it to work correctly.</p>
<pre><code>temp = open('drugs')
drugs = [temp.read().strip("\n")]
temp.close
</code></pre>
<p>Result:</p>
<pre class="lang-none prettyprint-override"><code>['40 Stimpak\n53 Mentats\n87 Buffout\n109 Rad-X\n125 Booze\n260 Jet Antidote\n311 Roentgen Rum\n424 Monument Chunk\n480 Bonus +1 Agility\n525 Hypo \n48 RadAway\n71 Fruit\n103 Iguana-on-a-stick\n110 Psycho\n144 Super Stimpak\n273 Healing Powder\n334 Poison\n469 Rot Gut\n481 Bonus +1 Intelligence \n49 Antidote\n81 Iguana-on-a-stick\n106 Nuka-Cola\n124 Beer\n259 Jet\n310 Gamma Gulp Beer\n378 Cookie\n473 Mutated Toe\n482 Bonus +1 Strength ']
drugs.strip('\n')

Traceback (most recent call last):
   File "seek", line 18, in &lt;module&gt;
     print drugs.strip('\n')
AttributeError: 'list' object has no attribute 'strip'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>file.read()</code> reads entire file's contents, unless you specify max length. What you must be meaning is <code>.readlines()</code>. But you can go even more idiomatic with a list comprehension:</p>
<pre><code>with open('drugs') as temp_file:
  drugs = [line.rstrip('\n') for line in temp_file]
</code></pre>
<p>The <code>with</code> statement will take care of closing the file.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're okay with reading the entire file's contents into memory, you can also use <a href="https://docs.python.org/3/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer"><code>str.splitlines()</code></a> </p>
<pre><code>with open('your_file.txt') as f:
    lines = f.read().splitlines()
</code></pre>
<p><code>splitlines()</code> is similar to <code>split('\n')</code> but if your file ends with a newline, <code>split('\n')</code> will return an empty string at the very end, whereas <code>splitlines()</code> handles this case the way you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>This incorporates the strip directly into the <code>for</code> statement.</p>
<pre><code>with open('drugs', 'r') as f:
  for line in map(lambda line: line.rstrip('\n'), f):
    print line
</code></pre>
<p>Or, if you know you don't need any space before or after text on a line, you can use this.</p>
<pre><code>import string

with open('drugs', 'r') as f:
  for line in map(string.strip, f):
    print line
</code></pre>
</div>
<span class="comment-copy">The code in your question is not the code generating the results shown.</span>
<span class="comment-copy">note that the '\n' argument is not needed in most situations if you only want to strip new lines and spaces</span>
<span class="comment-copy">@Matt-Mac-Muffin: Indeed! The explicit <code>\n</code> cuts off only the newline character and leaves any trailing spaces; stripping all whitespace is the right thing to do in most cases.</span>
<span class="comment-copy">Using <code>map()</code> isn't really necessary. You can use a <a href="https://docs.python.org/3/reference/expressions.html#generator-expressions" rel="nofollow noreferrer">generator expression</a> and do it like this <code>for line in (line.rstrip('\n') for line in f):</code>.</span>
