<div class="post-text" itemprop="text">
<p>How do I implement a class browser in wxPython? Should I scan the whole code, or there is a function for this in wxPython?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your question isn't entirely clear about what you want, but I'll make some assumptions and show you how to do one of the possible interpretations of what you're asking.</p>
<p>I'll assume you have a string with the contents of a Python script, or a fragment from your cut-and-paste repository, or whatever, and you just want to know the top-level classes defined in that string of source code.</p>
<p>You probably don't want to execute that code. For one thing, who knows what arbitrary strange code can do to your environment? For another, if you're building a class browser, you probably want it to work on code that's depends on other code you may not have access to, so you <em>can't</em> execute it.</p>
<p>So, you want to parse it. The easiest way to do that is to get Python to do it for you, using the <a href="http://docs.python.org/2/library/ast.html" rel="nofollow"><code>ast</code></a> module:</p>
<pre><code>import ast

with open('mymodule.py') as f:
    mycode = f.read()

myast = ast.parse(mycode)
for thing in myast.body:
    if isinstance(thing, ast.ClassDef):
        print('class {}({})'.format(thing.name, 
                                    ', '.join(base.id for base in thing.bases)))
        for subthing in thing.body:
            if isinstance(subthing, ast.FunctionDef):
                print('    def {}'.format(name))
</code></pre>
<p>When I run this against, say, the ast.py from Python 3.3's stdlib, I get this:</p>
<pre><code>class NodeVisitor(object)
    def visit
    def generic_visit
class NodeTransformer(NodeVisitor)
    def generic_visit
</code></pre>
<p>If that's not what you wanted, you'll have to explain what you <em>do</em> want. If, for example, you want all class definitions, even local ones within functions and methods… well, the names of those two classes just dumped out above should help.</p>
</div>
<span class="comment-copy">You'll have to describe in a lot more detail what you mean by "a class browser". Are you trying to browse all the classes in the current interactive environment? In a single script? In a script and everything it imports? In a directory full of scripts? In a "project" defined in some way?</span>
<span class="comment-copy">Meanwhile, whatever your answer, wx isn't going to have anything for scanning Python source or introspecting the interactive environment or anything like that; it's just a GUI library. But the Python standard library has all kinds of things—<a href="http://docs.python.org/3/library/inspect.html" rel="nofollow noreferrer"><code>inspect</code></a> for live objects, <a href="http://docs.python.org/3/library/ast.html" rel="nofollow noreferrer"><code>ast</code></a> to parse source, etc.</span>
<span class="comment-copy">@abarnert, I mean I want to get <b>all</b> the classes (and their functions if possible) in a string. Thanks for the links, I will take a look.</span>
<span class="comment-copy">"A string" meaning "a hunk of Python source code"? And does "all the classes" include classes defined inside functions or methods, or even classes created dynamically? Or just the top-level classes? Or whichever classes would end up being defined if you executed/imported the code? Or…?</span>
<span class="comment-copy">I might be misunderstanding you but ulipad, a wxpython based editor, has a built in class browser. You might see how they do it. <a href="http://code.google.com/p/ulipad/" rel="nofollow noreferrer">code.google.com/p/ulipad</a></span>
<span class="comment-copy">Yes, thanks a lot! That's what I was looking for!</span>
