<div class="post-text" itemprop="text">
<p>I'm trying to write program that calculate the numeric value of a name</p>
<p>this what i wrote </p>
<pre><code>name = input("Enter your full name:")
low = name.lower()
sum = 0
print ()
for ch in name :
    print(sum + ord(ch)-96)
</code></pre>
<p>the problem is when i entered a name for example  anna i got </p>
<p>the output would be</p>
<blockquote>
<p>1</p>
<p>14</p>
<p>14</p>
<p>1</p>
</blockquote>
<p>How can i get only the sum ? which is going to be in this case 30</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to update the <code>sum</code> variable everytime in the loop. Change your loop to:</p>
<pre><code>for ch in name :
    sum += ord(ch)-96

print(sum)
</code></pre>
<p>You can also use <a href="http://docs.python.org/3/library/functions.html#sum" rel="nofollow"><code>sum()</code></a> function with generator expression:</p>
<pre><code>&gt;&gt;&gt; name='anna'
&gt;&gt;&gt; sum(ord(ch) - 96 for ch in name)
30
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You forgot to change your sum variable. Do it like: </p>
<pre><code>low = name.lower()
sum = 0
print ()
for ch in name :
    sum = sum + ord(ch)-96
print(sum)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>bytearray</code> lets us add the ascii values directly using <code>sum</code>. Then you need to subtract 96 for each character in the string</p>
<pre><code>sum(bytearray(low)) - 96 * len(low)
</code></pre>
<p>This works about twice as fast as using ord() for each character on my computer even for short strings, and even better for long strings</p>
</div>
<div class="post-text" itemprop="text">
<p>First, avoid using python keywords as variables. In your code, you have set the keyword <code>sum</code> which is actually a function to the value 0</p>
<p>Second, observe that you are in a for-loop so there is nothing to store the accumulating sum into as the for-loop progresses.</p>
<p>Here is what I came up with:</p>
<pre><code>name = input("Enter your full name: ").lower() #Convert input to lowercase
print () #Print a newline
print (sum(ord(ch) - 96 for ch in name)) #Use the sum function to compute sum of letters
</code></pre>
<p>One-line:</p>
<pre><code>print (sum(ord(ch) - 96 for ch in input("Enter your full name: ").lower()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You just have to use <code>for ch in name</code> in the right place - use generator expression. It would be more pythonic than using a loop:</p>
<pre><code>name = input("Enter your full name:")
low = name.lower()
print ()

print sum(ord(ch)-96 for ch in name)
</code></pre>
<p>You can also use <a href="http://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>, but it would be slower</p>
<pre><code>print sum([ord(ch)-96 for ch in name])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In fact, I think solution from @gnibbler is the best.</p>
<p>Still, I want to share my idea. I would like use <code>map</code> rather than <code>for</code> loop or list comprehension:</p>
<pre><code>name = input("Enter your full name:")
low = name.lower()
print sum(map(lambda ch: ord(ch)-96, low))
</code></pre>
</div>
<span class="comment-copy">now it work ,but not for capital letter</span>
<span class="comment-copy"><a href="http://www.asciitable.com/" rel="nofollow noreferrer">asciitable.com</a> Please note, that uppercase letters start from index 65. You could do an 'if' check if the character is between 64 and 90, or between 96 and 122.</span>
<span class="comment-copy">@Jurgis  The reason it is not working properly is because you did not use the lower case version of the name entered. You had stored this value in <code>low</code> but you never used it in the actual calculation</span>
<span class="comment-copy">The first code will not work because you have set <code>sum</code> to <code>0</code> on the third line. Also in python3, you need the <code>()</code> brackets to print anything</span>
<span class="comment-copy">yeah thanks. and +1 goes to your answer for mentioning not overriding python functions</span>
