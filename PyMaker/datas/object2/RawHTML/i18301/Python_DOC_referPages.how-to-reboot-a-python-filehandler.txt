<div class="post-text" itemprop="text">
<p>I have a file handler:</p>
<pre><code>logger = logging.getLogger(__name__)
fh = logging.FileHandler('file_name.log',mode='w')
logger.addHandler(fh)
</code></pre>
<p>After some time I want to copy the file and clear the original file so that the logger will keep adding data to the original file. Something like this:</p>
<pre><code>shutil.dopy('file_name.log','another_file.log')
os.remove('file_name.log')
open('file_name.log','w')
</code></pre>
<p>This, of course doesn't work.
I'm working on python 3.2.
Can it be done?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>RotatingFileHandler</code> or <code>TimedRotatingFileHandler</code> instead.</p>
<p><a href="http://docs.python.org/3/library/logging.handlers.html#rotatingfilehandler" rel="nofollow">http://docs.python.org/3/library/logging.handlers.html#rotatingfilehandler</a></p>
</div>
<span class="comment-copy">Do you really want to copy the original file, clear it out, and start overwriting it? It's simpler, and more common to just move the file and start writing a new one. It's especially more simpler and more common when you're doing it in Python, which has that functionality built in to the <code>logger</code> module.</span>
