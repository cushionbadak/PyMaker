<div class="post-text" itemprop="text">
<p>Is there a more pythonic way to do the following?</p>
<pre><code>total = 0
for index, value in enumerate(frequencies):
    total += value
    frequencies[index] = total
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>On Python 2.x you can use a generator function(Note that this returns a new list):</p>
<pre><code>def accumulate(lis):
    total = 0
    for item in lis:
        total += item
        yield total


&gt;&gt;&gt; list(accumulate(range(5)))
[0, 1, 3, 6, 10]
</code></pre>
<p>On Python 3.x use <a href="http://docs.python.org/3.3/library/itertools.html#itertools.accumulate" rel="nofollow"><code>itertools.accumulate</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>For Python 3, use <a href="http://docs.python.org/3/library/itertools.html#itertools.accumulate" rel="nofollow">itertools.accumulate</a>:</p>
<pre><code>frequencies = list(itertools.accumulate(frequencies))
</code></pre>
<p>Your code is probably as Pythonic as it can get. One can easily understand what it does.</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't see anything un-pythonic with what you wrote.  An alternative might be <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.cumsum.html?highlight=cumsum#numpy.cumsum" rel="nofollow">numpy.cumsum()</a>.</p>
<pre><code>&gt;&gt;&gt; 
&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; a = np.arange(10)
&gt;&gt;&gt; a
array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
&gt;&gt;&gt; a.cumsum()
array([ 0,  1,  3,  6, 10, 15, 21, 28, 36, 45])
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is an inplace version and this is what exactly you are looking for, if you are using python 2.x.</p>
<pre><code>frequencies = [1, 2, 3]
for i in range(1, len(frequencies)): frequencies[i] += frequencies[i - 1]
print frequencies
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[1, 3, 6]
</code></pre>
</div>
<span class="comment-copy">What is <code>frequencies</code>? What is the desired result?</span>
<span class="comment-copy">Will work only on py3.x</span>
<span class="comment-copy">@hcwhsa oh, thanks, I've learned and used Python 3 ever since I started â˜º.</span>
<span class="comment-copy">The <a href="http://docs.python.org/3.3/library/itertools.html#itertools.accumulate" rel="nofollow noreferrer">documentation</a> contains an equivalent implementation that is remarkably similar to the original code by melbic :)</span>
