<div class="post-text" itemprop="text">
<p>I have two files , and I want to display the content exist in file 1 and file 2 in the screen. But it seems nothing display ( but it should display <code>オレンジ</code>) . What is the problem?</p>
<p>thanks</p>
<pre><code>File 1

リンゴ
バナナ
オレンジ

File 2

オレンジ
</code></pre>
<p>Here is my code</p>
<pre><code>import sys

File1 = open(sys.argv[1],"r",encoding="UTF-8")
F1_Content = File1.readlines()
F1_Content = map(lambda e : e.rstrip("\n"),F1_Content)

File2 = open(sys.argv[2],"r",encoding="UTF-8")
F2_Content = File2.readlines()
F2_Content = map(lambda e : e.rstrip("\n"),F2_Content)

for line in F1_Content:
    print(repr(line))
    if line in F2_Content:
        print(line)

File1.close()
File2.close()   
</code></pre>
<p>Output</p>
<pre><code>'\ufeff
''
''
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You probably have more whitespace in one of the files than just a newline. You could loop over either <code>F1_Content</code> and <code>F2_Content</code>, printing the <em>representation</em> of that line with <code>print(repr(line))</code> or <code>print(line.encode('unicode_escape'))</code> to make it easier to spot how the lines differ.</p>
<p>I'd strip the lines entirely. Also, use a <code>set</code> for the lines of one file, testing will be <em>much</em> more efficient:</p>
<pre><code>with open(sys.argv[1], "r") as file1:
    f1_content = {line.strip() for line in file1}

with open open(sys.argv[2], "r") af file2:
    for line in file2:
        if line.strip() in file2:
            print(line)
</code></pre>
<p>Looping directly over the file itself reads the file line by line, letting you handle file lines without having to read the whole file into memory.</p>
<p>Note also the use of <code>with</code> statements here; file objects are context managers, and when the context closes (the <code>with</code> block ends) the file object is automatically closed for you.</p>
<p>With Katakana, there is also the possibility that one of your files uses decomposition for the  ZI character while the other does not; you can either express it as <code>\u30B8</code> <strong>or</strong> as <code>\u30B7\u3099</code>; (SI + COMBINING KATAKANA-HIRAGANA VOICED SOUND MARK):</p>
<pre><code>&gt;&gt;&gt; print('\u30B8 != \u30B7\u3099:', '\u30B8' != '\u30B7\u3099')
ジ != ジ: True
</code></pre>
<p>You can use <a href="http://docs.python.org/3/library/unicodedata.html#unicodedata.normalize" rel="nofollow"><code>unicodedata.normalize()</code></a> to normalize all your lines to either composed or decomposed forms. Here I force all data to use composed forms:</p>
<pre><code>from unicodedata import normalize

with open(sys.argv[1], "r") as file1:
    f1_content = {normalize(line.strip(), 'NFKC') for line in file1}

with open open(sys.argv[2], "r") af file2:
    for line in file2:
        if normalize(line.strip(), 'NFKC') in file2:
            print(line)
</code></pre>
</div>
<span class="comment-copy">I think there are no white spaces in each line</span>
<span class="comment-copy">@user2131116: Can you show us what <code>repr(line)</code> shows when looping over the file contents?</span>
<span class="comment-copy">@user2131116: You can <a href="http://stackoverflow.com/posts/19174650/edit">edit your question</a> to add that information.</span>
<span class="comment-copy">I use print(repr(line)) but nothing print ...</span>
<span class="comment-copy">@user2131116: That's quite logical, because you only print when the lines match. But they don't match, so you'll never see that print statement. Move the <code>print()</code> to <i>before</i> the <code>if</code>. Use <code>print(line.encode('utf8'))</code>, perhaps, or even better,  <code>print(line.encode('unicode_escape'))</code></span>
