<div class="post-text" itemprop="text">
<p>I have 2 lists of numbers, one called <code>xVar</code> and the other called <code>yVar</code>.  I will use these 2 elements to plot X and Y values on a graph.  They both have the same number of elements.  </p>
<p>Normally, I would just plot </p>
<pre><code>ax.scatter(xVar,yVar,s=2,color='tomato');
</code></pre>
<p>I want to remove data from <code>yVar</code> that are over a certain value, for example all data that have a <code>yVar</code> value over <code>100</code>, but I also want to remove the associated <code>xVar</code> value.  Can somebody suggest a way to create 2 new variables that remove all values in <code>yVar</code> over <code>100</code> and the <code>xVar</code> values associated with them?  Then I can just substitute <code>xVar</code> &amp; <code>yVar</code> in my plotting line to the new variables.</p>
<p>Thanks again All,</p>
</div>
<div class="post-text" itemprop="text">
<p>Whenever you want to do something to the corresponding values of two (or more) lists, that's what <a href="http://docs.python.org/3/library/functions.html#zip" rel="noreferrer"><code>zip</code></a> is for. It gives you one list, of the corresponding values for each index.</p>
<p>So, in this case, <code>zip</code> the two lists together, then filtered the zipped list, then unzip them (with <code>zip</code> again, as the documentation explains):</p>
<pre><code>xVar, yVar = zip(*((x, y) for x, y in zip(xVar, yVar) if y &lt;= 100))
</code></pre>
<p>If this is confusing, let me show it step by step:</p>
<pre><code>&gt;&gt;&gt; xVar = [1, 200, 300, 10]
&gt;&gt;&gt; yVar = [150, 100, 50, 200]
&gt;&gt;&gt; xyVar = zip(xVar, yVar)
&gt;&gt;&gt; xyVar
[(1, 150), (200, 100), (300, 50), (10, 500)]
&gt;&gt;&gt; xyFiltered = [(x, y) for x, y in xyVar if y &lt;= 100]
&gt;&gt;&gt; xyFiltered
[(200, 100), (300, 50)]
&gt;&gt;&gt; xVar, yVar = zip(*xyFiltered)
[(200, 300), (100, 50)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Without writing the code, find the index for the y you want to remove, save the index, remove the y value, then remove the x value at the same index number.</p>
</div>
<div class="post-text" itemprop="text">
<p>Find indices which correspond to data you want to retain:</p>
<pre><code>ind = [i for i in range(len(yVar)) if yVar[i] &lt; 100]
</code></pre>
<p>And use only those points:</p>
<pre><code>yVar = [yVar[i] for i in ind]
xVar = [xVar[i] for i in ind]
</code></pre>
</div>
<span class="comment-copy">+1 I was just about to write this.</span>
<span class="comment-copy">Perfect, thank you very much.</span>
<span class="comment-copy">But there be tricks/gremlins when removing multiple elements (e.g. when removal is during iteration of the list) this way ..</span>
<span class="comment-copy">@user2246674: Just one trick, really: You have to reverse-sort the indices before removing them. But yeah, it's really easy to forget to do that, or get it wrong.</span>
<span class="comment-copy">you might want to check out <a href="http://docs.python.org/2/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a></span>
<span class="comment-copy">@1_CR Thanks, yes, that's a good option.</span>
