<div class="post-text" itemprop="text">
<p>Here is while loop:</p>
<pre><code>def func1(foo)
    bar = []
    while len(bar) &lt; foo: 
        bar.append([])
    return bar
</code></pre>
<p>I have tried to fit my code in one line:</p>
<pre><code>def func1(foo)
    bar = []
    return (bar.append([]) while len(bar) &lt; foo)
</code></pre>
<p>But when i run it, i have the following error:</p>
<pre><code>return (bar.append([]) while len(bar) &lt; foo)
                           ^
SyntaxError: invalid syntax 
</code></pre>
<p>How can I fix that?</p>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>This appears to be coming from a Ruby background where you can write things such as </p>
<pre><code>&gt; i = 0
&gt; i += 1 while i &lt; 10
&gt; i
=&gt; 10
</code></pre>
<p><strong>Solution:</strong> Instead use a list comprehension and</p>
<pre><code>def func1(foo):
    return [ [] for _ in range(foo) ]
</code></pre>
<p>Which says "give me a new list, foo times"</p>
<p><strong>DO NOT</strong> attempt to use the <code>[[]] * foo</code> shorthand because all of the entries in the list will actually refer to the same sublist</p>
<pre><code>&gt;&gt;&gt; l = [[]] * 10
&gt;&gt;&gt; l[0].append(2) # now every sublist has a 2 in it.
&gt;&gt;&gt; l
[[2], [2], [2], [2], [2], [2], [2], [2], [2], [2]]
</code></pre>
<p>or the similar use of <code>extend</code></p>
<pre><code>&gt;&gt;&gt; foo =6
&gt;&gt;&gt; bar = ['abc']
&gt;&gt;&gt; bar.extend([[]] * foo)
&gt;&gt;&gt; bar
['abc', [], [], [], [], [], []]
&gt;&gt;&gt; bar[1].append(2)  # same problem
&gt;&gt;&gt; bar
['abc', [2], [2], [2], [2], [2], [2]]
</code></pre>
<p>If you're absolutely set on a <strong>one-line while loop</strong>, the way to do it would be</p>
<pre><code>def func1(foo)
    bar = []
    while len(bar) &lt; foo: bar.append([])
    return bar
</code></pre>
<p>But the list comprehension is the simplest, fastest, most pythonic solution</p>
</div>
<div class="post-text" itemprop="text">
<p>AFAIK you can't have a one line while loop.
But you can use a <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">comprehension</a>:</p>
<pre><code>return [[] for x in range(foo)]
</code></pre>
</div>
<span class="comment-copy">What in the world made you think that was valid Python syntax? You can't just make sh*t up and expect it to work!</span>
<span class="comment-copy"><code>How can I fix that?</code> Simply Don't try <code>to fit my code in one line</code></span>
<span class="comment-copy">That is valid for <code>if</code> and not <code>while</code></span>
<span class="comment-copy">@karthikr wrong. You're probably thinking of the ternary operator, which is different from an if statement; also it always requires an <code>else</code> part.</span>
<span class="comment-copy">foo is an integer not a list</span>
<span class="comment-copy">Ok, then no <code>len</code> is needed (I haven't noticed that).</span>
