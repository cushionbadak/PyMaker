<div class="post-text" itemprop="text">
<p>i have python shell. Python -V is 3.3.2</p>
<pre><code>&gt;&gt;&gt;f = open('data.txt', 'r')
&gt;&gt;&gt;dir(f)
[..."it's ok"...]
&gt;&gt;&gt;help(f.seek)
Help on built-in function seek:

seek(...)
</code></pre>
<p>Why i not get info about this BIF?
My python shell correctly?    </p>
</div>
<div class="post-text" itemprop="text">
<p>The I/O infrastructure was overhauled in Python 3, completely replacing the old Python 2 file object with a <a href="http://docs.python.org/3/library/io.html" rel="nofollow">new object hierarchy</a>.</p>
<p>When you open a file in text mode, you get an object implementing the <a href="http://docs.python.org/3/library/io.html#io.TextIOBase" rel="nofollow"><code>io.TextIOBase</code></a> interface, which wraps a <a href="http://docs.python.org/3/library/io.html#io.BufferedIOBase" rel="nofollow"><code>io.BufferedIOBase</code></a> object, which in turn wraps something implemting the <a href="http://docs.python.org/3/library/io.html#io.RawIOBase" rel="nofollow"><code>io.RawIOBase</code></a> interface; many methods on the former two are just proxies for methods on the object they wrap.</p>
<p>Neither the <code>io.TextIOBase</code> nor the <code>io.BufferedIOBase</code> classes have docstrings on these various proxy methods.</p>
<p>You can reach down to the raw I/O object with <code>f.buffer.raw</code> and get the help info on the <code>.seek</code> method there:</p>
<pre><code>help(f.buffer.raw.seek)
</code></pre>
<p>You could also make a case that this is a bug; arguably the proxy methods should at least have a docstring that states that they pass on the call to their underlying object so you can <em>find</em> the original method. A pointer to the <code>f.buffer</code> attribute would be helpful, in such cases. Feel free to make that case over at the <a href="http://bugs.python.org/" rel="nofollow">Python issue tracker</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The documentation you want <a href="http://docs.python.org/3.3/library/io.html#io.TextIOBase.seek" rel="nofollow">is here, under io.TextIOBase</a>. For some reason <code>io.TextIOWrapper</code>, an instance of which is returned from <code>open</code>, does not expose the docstrings from its superclass.</p>
<hr/>
<p>These classes are implemented in C and as such don't have the luxury afforded to Python classes of having docstrings and signatures automatically shown and propagated. Chances are nobody had wanted this enough to implement it fully for TextIOWrapper.</p>
</div>
