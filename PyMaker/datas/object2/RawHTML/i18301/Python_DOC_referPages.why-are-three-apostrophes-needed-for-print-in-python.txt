<div class="post-text" itemprop="text">
<p>I'm making this Pythagoras Theorem Calculator in Python 3.3.2.</p>
<p>I made print over several lines so that I could make a diagram:</p>
<pre><code>print("Welcome to the Pythagoras Theorem Calculator, powered by Python!")
print("Below are the values a, b and c. You will need to input these values after.")
print('''
      | .
      |   .
      |     .
side a|       . side c
      |         .
      |           .
      |_____________.
          side b
      ''')
</code></pre>
<p>As you can see above, three apostrophes were needed instead of the speech marks. Why is this so? Is it an escape character? (I've tried searching on Google: <a href="http://bit.ly/15a4zes" rel="nofollow">http://bit.ly/15a4zes</a>)</p>
</div>
<div class="post-text" itemprop="text">
<p>The three quotes allows you to make a string on multiple lines. It avoids you to add <code>\n</code> everywhere or doing multiple <code>print</code> statements.</p>
<p>Threes quote strings are also <strike>used</strike> <strong>recommended</strong> to make documentation, see the <a href="http://www.python.org/dev/peps/pep-0257/" rel="noreferrer">PEP 257 convention </a> (see also comments of this post)</p>
</div>
<div class="post-text" itemprop="text">
<p>Three apostrophes (or speech marks) make your string a triple-quoted string.  This allows it to span multiple lines.  Normal strings can not do this.</p>
<p>If you want the same effect with normal strings, you have to put a <code>'\n'</code> every time you want a line break (which is a little annoying and also makes your string hard to read).</p>
</div>
<div class="post-text" itemprop="text">
<p>They are not needed, they just make it <em>easier</em> to produce a multi-line string.</p>
<p>The alternative would be:</p>
<pre><code>print('      | .')
print('      |   .')
print('      |     .')
print('side a|       . side c')
print('      |         .')
print('      |           .')
print('      |_____________.')
print('          side b')
</code></pre>
<p>Note that Python lets you take your pick of <code>'..'</code> and <code>".."</code> style quotes, whatever better suits your string <em>contents</em>.</p>
</div>
<span class="comment-copy"><a href="http://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
<span class="comment-copy">This question suggest to me that you should be able to use speech marks: <a href="http://stackoverflow.com/q/2504411/945456">stackoverflow.com/q/2504411/945456</a></span>
<span class="comment-copy">@JeffBridgman: You can, if you use three of them.</span>
<span class="comment-copy">You can use either <code>'''somestring'''</code> (I call those single quotes) or <code>"""somestring"""</code> (double quotes), but you can't mix and match. <code>'''somestring"""</code> doesn't work.</span>
<span class="comment-copy">While "apostrophes" is not incorrect, usually programmers call them "single-quotes" (and the actual <code>"</code> quotation marks "double-quotes")</span>
<span class="comment-copy">I'm choosing this answer as it also provides a link and directly answers the question.</span>
<span class="comment-copy">You can make documentation with single-quoted strings too. All you need is a string literal as the first of code in your object (function, class, module).</span>
<span class="comment-copy">Oh really? I learned something today. I must have seen well-documented code everytime since I've never seen function with simple-quoted string at the beginning... Thanks :)</span>
<span class="comment-copy">Why does it say "EOL while scanning string literal" if I do put speech marks?</span>
<span class="comment-copy">I don't think this answers the original question which I understood to be "Why can I only use <code>'</code> and not <code>"</code> to produce a multi-line string?"</span>
<span class="comment-copy">@TimTimmy: Perhaps you forgot to clone one?</span>
