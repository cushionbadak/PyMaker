<div class="post-text" itemprop="text">
<p>I'm trying to do this:</p>
<pre><code>for line in open('some.txt'):
</code></pre>
<p>and it's saying the file is not found. I have the file in the same direction as my python program. what's wrong? I thought it checked the directory to be </p>
<p>SOLUTION: I used <code>os.listdir()</code> and found out my file was actually named some.txt.txt</p>
</div>
<div class="post-text" itemprop="text">
<p>Relative paths are resolved from the current working directory.</p>
<p>For example, let's say I have this directory structure:</p>
<pre><code>/home/joe
├── data
│   └── numbers.txt
└── programs
    └── process.py
</code></pre>
<p>If I were in my home directory (<code>/home/joe</code>), then I could reference the Python script by <code>programs/process.py</code> and the data file by <code>data/numbers.txt</code>. You could also opt to use absolute paths, e.g., <code>/home/joe/programs/process.py</code> and <code>/home/joe/data/numbers.txt</code>.</p>
<p>You can access the parent directory with <code>..</code>. For example, if I were in the <code>programs</code> directory and I wanted to access <code>numbers.txt</code>, I could use <code>../data/numbers.txt</code> (or an absolute path, as before).</p>
<p>Your script can examine its current working directory using <a href="http://docs.python.org/3/library/os.html#os.getcwd" rel="nofollow"><code>os.getcwd</code></a> and change the current working directory using <a href="http://docs.python.org/3/library/os.html#os.chdir" rel="nofollow"><code>os.chdir</code></a>.</p>
<p>The critical thing to note is that while the current working directory and directory the script is in <em>may</em> be the same, that is not necessarily the case. If you want to access a file in the same directory as the script regardless of what the current working directory is, you can chain a few things together:</p>
<ol>
<li><code>__file__</code> is a predefined global variable corresponding to the script's path as it was provided to the Python executable.</li>
<li><a href="http://docs.python.org/3/library/os.path.html#os.path.dirname" rel="nofollow"><code>os.path.dirname</code></a> lets you get the directory from that.</li>
<li><a href="http://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow"><code>os.path.join</code></a> lets you combine that directory and the name of the file you want to access.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>It uses the same directory as the current working directory. Use</p>
<pre><code>import os
os.path.abspath(os.curdir)
</code></pre>
<p>to find out where that is.</p>
</div>
<div class="post-text" itemprop="text">
<p>To add to icktoofay's answer, to open a file relative to the script's folder, you could do the following.</p>
<pre><code>dirname = os.path.dirname(__file__)
path = os.path.join(dirname, 'some.txt')
for line in open(path):
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It should be the directory you ran the python script from.</p>
<p>Use this to print it:</p>
<pre><code>import os
print os.getcwd()
</code></pre>
</div>
<span class="comment-copy">OK i checked what directory it's working in and it is looking in the right directory... the file is CLEARLY there.... but it says its not.</span>
<span class="comment-copy">Give some more information, like the directory in which the script you are running is and the directory in which the file is, also, try an absolute path to the file and see if it works.</span>
<span class="comment-copy">@user2827580: If you only specify a name, it looks for a file of that name in the current working directory. A point I was trying to make is that it doesn't matter where your program is located — you access files relative to the current working directory, which is not necessarily the directory your script is in.</span>
<span class="comment-copy">my file is clearly in the same folder as the .py file is... but it still says it's not there... any ideas as to why that might be?</span>
<span class="comment-copy">@user2827580: In that case, the current working directory does not match up with the directory containing the script. You can use an absolute path or figure out what the actual current working directory is and derive the real path from that.</span>
<span class="comment-copy">i used the os.getcwd() and it said the right directory....</span>
<span class="comment-copy">@user2827580: In that case, it could be that Python has a different idea of what the filename is than what you think it is. Try printing out the result of <code>os.listdir()</code> and see if you can find your file in there.</span>
