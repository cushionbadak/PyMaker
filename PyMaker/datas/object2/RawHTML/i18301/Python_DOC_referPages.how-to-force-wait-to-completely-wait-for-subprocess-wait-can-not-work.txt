<div class="post-text" itemprop="text">
<p>I want to process the command1 by popen(python) and then run another command2 when the first one is finished. when I use wait() to make it work but it did not work.why? Does any one can help me?</p>
<pre><code>def ant_debug():
    ant_debug_cmd = 'cmd /k ant debug'
    os.system(ant_debug_cmd)

def adb_install():
    apk_debug_path = walk_dir('.\\bin')
    adb_install_cmd = 'cmd /k adb install -r ' + apk_debug_path
    os.system(adb_install_cmd)

child = subprocess.call(ant_debug())
if child.wait() == 0:
    adb_install()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are several problems with your code, and it is no suprise it doesn't run.</p>
<p>You do not have to call <code>.wait()</code> when using <code>subprocess.call()</code>. That function takes care of the <code>Process.wait()</code> call <em>for you</em>.</p>
<p>Instead, <code>subprocess.call()</code> returns the exit code <em>directly</em>. Quoting the <a href="http://docs.python.org/3/library/subprocess.html#subprocess.call" rel="nofollow"><code>subprocess.call()</code> documentation</a>:</p>
<blockquote>
<p>Run the command described by <em>args</em>. <strong>Wait for command to complete</strong>, then return the returncode attribute.</p>
</blockquote>
<p>Emphasis mine.</p>
<p>Moreover, your <code>ant_debug()</code> function doesn't return anything (let alone a command to run). Instead it runs the <code>ant</code> command using <code>os.system()</code>! Remove that call <em>all together</em>. Use <code>subprocess.call()</code> <strong>instead</strong> of <code>os.system()</code>.</p>
<p>Rewriting your code to use <em>just</em> <code>subprocess.call()</code> would be:</p>
<pre><code>retcode = subprocess.call(['ant', 'debug'])

if retcode == 0:
    apk_debug_path = walk_dir('.\\bin')
    adb_install_cmd = ['adb', 'install', '-r', apk_debug_path]
    subprocess.call(adb_install_cmd)
</code></pre>
<p>where we pass in the command to run plus its arguments as a list of strings.</p>
<p>I've removed the <code>cmd /k</code> prefix; just run <code>ant</code> <strong>directly</strong>; no shell is needed here. The <code>/k</code> switch even <em>prevents</em> the <code>cmd</code> shell from closing. The return value of <code>cmd</code> is not necessarily the same as what <code>ant</code> returned.</p>
</div>
<div class="post-text" itemprop="text">
<p>In addition to Martijn's comments on subprocess.call, "<a href="https://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/cmd.mspx" rel="nofollow">cmd</a> /k" means to run a command <em>and then continue</em> - so this won't terminate until you tell cmd to exit. There is probably no need to run the ant command using cmd in the first place, so just remove those first two items from the call list. If you do mean to run a command through a shell such as cmd, you can pass the argument <a href="http://docs.python.org/3/library/subprocess.html#frequently-used-arguments" rel="nofollow"><code>shell=True</code></a> (but learn <em>why</em> first, there are risks). </p>
</div>
<span class="comment-copy">You haven't really told us what goes wrong when you run this code. <i>it did not work</i> is not much of an error message.</span>
