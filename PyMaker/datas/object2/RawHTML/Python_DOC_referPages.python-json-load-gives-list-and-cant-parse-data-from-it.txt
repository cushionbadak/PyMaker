<div class="post-text" itemprop="text">
<p>I have a data.json file, which looks like this:</p>
<pre><code>["{\"Day\":\"Today\",\"Event\":\"1\", \"Date\":\"2019-03-20\"}"]
</code></pre>
<p>I am trying to get "Event" from this file using python and miserably failing at this.</p>
<pre><code>with open('data.json', 'r') as json_file:
    data = json.load(json_file)
    print (data['Event'])
</code></pre>
<p>I get the following error:</p>
<p><strong>TypeError: list indices must be integers or slices, not str</strong></p>
<p>And even when I try </p>
<pre><code>print (data[0]['Event'])
</code></pre>
<p>then I get this error:</p>
<p><strong>TypeError: string indices must be integers</strong></p>
<p>One more thing:</p>
<pre><code>print(type(data))
</code></pre>
<p>gives me "list"</p>
<p>I have searched all over and have not found a solution to this. I would really appreciate your suggestions.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the <code>ast</code> module for this:</p>
<pre class="lang-py prettyprint-override"><code>import ast

mydata = ["{\"Day\":\"Today\",\"Event\":\"1\", \"Date\":\"2019-03-20\"}"]
data = ast.literal_eval(mydata[0])
data
{'Day': 'Today', 'Event': '1', 'Date': '2019-03-20'}

data['Event']
'1'
</code></pre>
<h2>Edit</h2>
<p>Your original code <em>does</em> load the data into a list structure, but only contains a single string entry inside that list, despite proper json syntax. <code>ast</code>, like <code>json</code>, will parse that string entry into a python data structure, <code>dict</code>. </p>
<p>As it sits, when you try to index that list, it's not the same as calling a key in a dict, hence the <code>slices cannot be str</code>:</p>
<pre class="lang-py prettyprint-override"><code>alist = [{'a':1, 'b':2, 'c':3}]
alist['a']
TypeError

# need to grab the dict entry from the list
adict = alist[0]
adict['a']
1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to convert the elements in data to dict using json module.</p>
<p><strong>Ex:</strong></p>
<pre><code>import json

with open(filename) as infile:
    data = json.load(infile)
for d in data:
    print(json.loads(d)['Event'])
</code></pre>
<hr/>
<p><strong>Or:</strong></p>
<pre><code>data = list(map(json.loads, data))
print(data[0]["Event"])
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is that you are parsing it as a list that consists of a single element that is a string. </p>
<pre class="lang-py prettyprint-override"><code>["{\"Day\":\"Today\",\"Event\":\"1\", \"Date\":\"2019-03-20\"}"]
</code></pre>
<p>See how the entire content of the list is surrounded by <code>"</code> on either side and every other <code>"</code> is preceded by a <code>\</code>? The slash generally means to ignore the special meaning the following character might have, but interpret it as purely a string. </p>
<p>If you have control over the file's contents, the easiest solution would be to adjust it. You will want it to be in a format like this:</p>
<pre class="lang-py prettyprint-override"><code>[{"Day":"Today", "Event": "1", "Date": "2019-03-20"}]
</code></pre>
<p>Edit: As others have suggested, you can also parse it in its current state. Granted, cleaning the data is tedious, but oftentimes worth the effort. Though this may not be one of those cases. I'm leaving this answer up anyway because it may help with explaining why OPs initial attempt did not work, and why he received the error messages he got.</p>
</div>
<span class="comment-copy">with open('data.json', 'r') as json_file:     data = eval(json.load(json_file))     print (data['Event'])</span>
<span class="comment-copy">@PrasPJ You didn't <code>import json</code>, you really shouldn't use <code>eval</code> on something trivial like this, and it won't even work because you're not holding a string but a list with a string in it.</span>
<span class="comment-copy">It's worth explaining that the reason the original code doesn't work is that the value inside the list is just a string, even if it does contain Python/JSON syntax.</span>
<span class="comment-copy">@PeterWestlake added the explanation in newest edit</span>
