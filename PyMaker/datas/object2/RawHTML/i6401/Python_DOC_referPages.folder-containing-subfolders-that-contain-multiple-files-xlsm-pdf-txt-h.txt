<div class="post-text" itemprop="text">
<p>This could be done with python, but I think I am missing a way to loop for all directories. Here is the code I am using:</p>
<pre><code>import os
 def renameInDir(directory):  
    for filename in os.listdir(directory):
      if filename.endswith(".pdf"):
        path = os.path.realpath(filename)
        parents = path.split('/') //make an array of all the dirs in the path. 0 will be the original basefilename
        newFilename=os.path.dirname(filename)+directory +parents[-1:][0] //reorganize data into format you want 
        os.rename(filename, newFilename)//rename the file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should go with <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">os.walk()</a>. It will map the directory tree by the given directory param, and generate the file names.</p>
<p>Using <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">os.walk()</a> you'll accomplish the desired result is this way:</p>
<pre><code>import os
from os.path import join
for dirpath, dirnames, filenames in os.walk('/path/to/directory'):
    for name in filenames:
        new_name = name[:-3] + 'new_file_extension'
        os.rename(join(dirpath, name), join(dirpath, new_name))
</code></pre>
</div>
<span class="comment-copy">I didn't get how the new file names should be. Are you wondering to just remove the PDF extension, or are you trying to replace it?</span>
<span class="comment-copy">Could you pls inform if the solution below worked for you? If so, could you pls accept the answer? @Eduardo Valdez</span>
