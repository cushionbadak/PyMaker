<div class="post-text" itemprop="text">
<p>I'm trying to create a simple histogram in the shell to give a dictionary with keys which have their values as the probability of the key being chosen if the keys were selected at random. I used formatting which for some reason didn't work. I also did the explicit conversion as usual by using the str() function but i still got the same error. I used a for loop and for some reason it worked when the probability of the key was 1 but it gave an error afterwards.</p>
<p>This is the debug window:</p>
<pre><code>def histogram(word):
    'takes a word and returns an histogram of it'
    d = dict()
    for letter in word:`enter code here`
        d[letter] = d.get(letter,0) + 1 
    return (d)

&gt;&gt;&gt; h = histogram('mississipi')
&gt;&gt;&gt; print (h)
{'i': 4, 'p': 1, 's': 4, 'm': 1}
</code></pre>
<p>This part worked fine but then the problem surfaced</p>
<pre><code>def histogram(word):
    'takes a word and returns an histogram of it'
    d = dict()
    for letter in word:
        d[letter] = '{}/{}'.format((d.get(letter,0) + 1),len(word))
    return d

&gt;&gt;&gt; print (histogram('mississippi'))
Traceback (most recent call last):
  File "&lt;pyshell#4&gt;", line 1, in &lt;module&gt;
    print (histogram('mississippi'))
  File "&lt;pyshell#3&gt;", line 5, in histogram
    d[letter] = '{}/{}'.format((d.get(letter,0) + 1),len(word))
TypeError: Can't convert 'int' object to str implicitly
</code></pre>
<pre><code>def histogram(word):
    'takes a word and returns an histogram of it'
    d = dict()
    for letter in word:
        d[letter] = str(d.get(letter,0) + 1) + '/' + str(len(word))
    return d

&gt;&gt;&gt; print (histogram('mississippi'))
Traceback (most recent call last):
  File "&lt;pyshell#8&gt;", line 1, in &lt;module&gt;
    print (histogram('mississippi'))
  File "&lt;pyshell#7&gt;", line 5, in histogram
    d[letter] = str(d.get(letter,0) + 1) + '/' + str(len(word))
TypeError: Can't convert 'int' object to str implicitly
</code></pre>
<p>After this it seemed to work but still showed error</p>
<pre><code>def histogram(word):
    'takes a word and returns an histogram of it'
    d = dict()
    for letter in word:
        d[letter] = str(d.get(letter,0) + 1) + '/' + str(len(word))
        print (d)

&gt;&gt;&gt; print (histogram('mississippi'))
{'m': '1/11'}
{'m': '1/11', 'i': '1/11'}
{'s': '1/11', 'm': '1/11', 'i': '1/11'}
Traceback (most recent call last):
  File "&lt;pyshell#23&gt;", line 1, in &lt;module&gt;
    print (histogram('mississippi'))
  File "&lt;pyshell#22&gt;", line 5, in histogram
    d[letter] = str(d.get(letter,0) + 1) + '/' + str(len(word))
TypeError: Can't convert 'int' object to str implicitly 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are storing <em>strings</em> into your dictionary, and then try to add 1 to the value of the string.</p>
<p>Separate the counting and the string formatting; <strong>first</strong> create counts, then produce the final dictionary with your strings:</p>
<pre><code>def histogram(word):
    d = {}
    # create counts
    for letter in word:
        d[letter] = d.get(letter, 0) + 1
    # produce a dictionary with count/len strings
    return {l: '{}/{}'.format(c, len(word)) for l, c in d.items()}
</code></pre>
<p>You may want to look at <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter()</code></a> to replace your letter-counting loop:</p>
<pre><code>from collections import Counter

def histogram(word):
    d = Counter(word)
    return {l: '{}/{}'.format(c, len(word)) for l, c in d.items()}
</code></pre>
</div>
<span class="comment-copy">'1/11' is a string, everything that is surrounded by quotes is a string. What you want isn't <code>'{}/{}'.format(a,b)</code> but simply <code>a/b</code></span>
<span class="comment-copy"><code>d.get(letter,0)</code> returns a string, you can't add 1 to that.</span>
<span class="comment-copy">I don't get why you would want strings rather than actual numbers for the values of an histogram ...</span>
<span class="comment-copy">@jadsq: why not ask that on the question then?</span>
