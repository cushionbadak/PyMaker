<div class="post-text" itemprop="text">
<p>I am pretty sure I initialized the list incorrectly, but whether it be the wrong parameter or misaligned syntax I cannot say. 
At first, I believed it was due to the class not visible in main(), but after removing main, the same error was still returned.
I have read through the Python reference and found no discrepancies between our codes. Would much appreciate the pinpointing of any unseen errors. Thanks in advance!</p>
<p>Reference: <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/classes.html</a></p>
<p>Error Returned:</p>
<pre><code>Traceback (most recent call last):
File "dfs_final.py", line 12, in &lt;module&gt;
class node(object):
File "dfs_final.py", line 77, in node
main()
File "dfs_final.py", line 68, in main
nodes = [ node(i, nodes[2*i], nodes[(2*i)+1, false] ) for i in range(10)]
File "dfs_final.py", line 68, in &lt;listcomp&gt;
nodes = [ node(i, nodes[2*i], nodes[(2*i)+1, false] ) for i in range(10)]
NameError: name 'node' is not defined
</code></pre>
<hr/>
<p>Code:</p>
<pre><code>class node(object):

  def __init__(self,cargo = None, left = None, right = None, found = None):
    self.cargo = cargo
    self.left = left
    self.right = right
    self.found = found

 def __str__(self):
   return str(self.cargo)

# pass in root to begin search
def DFS(curr_node, visited = []):

# Return if node DNE
if not curr_node:
  return


# if already visited, return cycle

for i in visited:
  if (curr_node.cargo == visited[i]):
    err_str = "It's a cycle :("
    return err_str

# mark node as found
curr_node.found = true

# add to visited list
visited += [curr_node.cargo]


# pass in node.left, node.right to recurse

DFS(curr_node.left, visited) # Go left first
DFS(curr_node.right, visited) # Try right

# After finished traversing tree
return visited

def main():

  adjacency_matrix = {1: [2, 3], 2: [4, 5],
    3: [5], 4: [6], 5: [6],
    6: [7], 7: []}

  # Initialize array of nodes to pass
  for i in range(10):
    nodes = [ node(i, nodes[2*i], nodes[(2*i)+1, false] ) for i in range(10)]

  for i in nodes:
    print(nodes[i].cargo)

  # Pass into function
  # DFS(nodes)

if __name__ == "__main__":
main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>  for i in range(10):
      nodes = [ node(i, nodes[2*i], nodes[(2*i)+1, false] ) for i in range(10)]
</code></pre>
<p>You can't reference <code>nodes</code> in the list comprehension while building it. (And even if you could you're trying to access elements which are not yet initialised).</p>
</div>
<div class="post-text" itemprop="text">
<p>Python works with indentations. Python does not use brackets for delimiting function bodies therefore your indentation needs to be correct.</p>
<p>Here is a simple piece of code written properly:</p>
<pre><code>if True:
    print("Hello")
</code></pre>
<p>Now here is a bad piece of code wrongly indented:</p>
<pre><code>if True:
print("Hello")
</code></pre>
<p>This is going to come up with an error. How can Python know where the function ends? Or the <code>if</code> statement?</p>
<p><strong>Now, assuming that was only a copy paste issue here what's going to go wrong in your code.</strong></p>
<pre><code>for i in range(10):
    nodes = [ node(i, nodes[2*i], nodes[(2*i)+1, false] ) for i in range(10)]
</code></pre>
<p>You are trying to do the same thing twice here. Use either</p>
<pre><code>nodes = [ node(i, nodes[2*i], nodes[(2*i)+1, false] ) for i in range(10)]
</code></pre>
<p>or</p>
<pre><code>nodes = []
for i in range(10):
    nodes.push( node(i, nodes[2*i], nodes[(2*i)+1, false]) )
</code></pre>
<p>Also you have swap <code>)</code> and <code>]</code> in this line after the <code>false</code>:</p>
<pre><code>nodes = [ node(i, nodes[2*i], nodes[(2*i)+1, false] ) for i in range(10)]
</code></pre>
<p><strong>It's not the only errors in your code</strong> but this is the solution for the error you reported just now.</p>
</div>
<span class="comment-copy">Indentation matters in Python, and yours is broken. You need to fix it.</span>
