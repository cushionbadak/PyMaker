<div class="post-text" itemprop="text">
<p>My program is to check if the input sentence contains <code>not</code> followed by <code>bad</code> and replace it with <code>good</code>. For instance if the sentence contained <code>not bad</code> without any other string in between <code>not</code> and <code>bad</code>, I was able to replace them with <code>good</code> as given in the code below:</p>
<pre><code>s = 'The day is not bad'
s = s.replace('not bad', 'good')
print(s)
</code></pre>
<p>and the output was:</p>
<pre><code>&gt;&gt;&gt; The day is good
</code></pre>
<p><strong>The problem arises when there is some other word (or words) in between <code>not</code> and <code>bad</code>.</strong>
Have a look at the codes I tried:</p>
<pre><code>l = ['not', 'bad']
s = 'The day is not so bad'
if l in s:
    s = s.replace(l,'good')
</code></pre>
<p>It throwed an error like the following while the expected output has to be <strong><code>The day is good</code></strong>:</p>
<pre><code>Traceback (most recent call last):

  File "&lt;ipython-input-69-0eb430659d1e&gt;", line 3, in &lt;module&gt;
    if l in s:

TypeError: 'in &lt;string&gt;' requires string as left operand, not list
</code></pre>
<p>I tried something like this too:</p>
<pre><code>list_ = ['not', 'bad']
if any(word in 'The day is not at all bad' for word in list_):
s = s.replace(s,'good')
</code></pre>
<p>But the errorsome output I got for the above code was:</p>
<pre><code>&gt;&gt;&gt; s
&gt;&gt;&gt; good
</code></pre>
<p>IOW, the whole sentence was replaced by <code>good</code>.
Can you suggest what should be done if I should get something like the one below:</p>
<pre><code>&gt;&gt;&gt; s = 'The day is not at all bad' #input

&gt;&gt;&gt; print(output)
&gt;&gt;&gt; 'The day is good' # the desired output
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are a couple of ways you could approach this.  One way is to convert the sentence to a list of words, locate "not" and "bad" in the list, remove them and all the elements in between and then insert "good".</p>
<pre><code>&gt;&gt;&gt; s = 'the day is not at all bad'
&gt;&gt;&gt; start, stop = 'not', 'bad'
&gt;&gt;&gt; words = s.split()
&gt;&gt;&gt; words
['the', 'day', 'is', 'not', 'at', 'all', 'bad']
&gt;&gt;&gt; words.index(start)
3
&gt;&gt;&gt; words.index(stop)
6
&gt;&gt;&gt; del words[3:7]  # add 1 to stop index to delete "bad"
&gt;&gt;&gt; words
['the', 'day', 'is']
&gt;&gt;&gt; words.insert(3, 'good')
&gt;&gt;&gt; words
['the', 'day', 'is', 'good']
&gt;&gt;&gt; output = ' '.join(words)
&gt;&gt;&gt; print(output)
the day is good
</code></pre>
<p>Another method is to use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a> to find a pattern that matches "not" followed by zero or more words, followed by "bad".  The <code>re.sub</code> function finds strings that match a given pattern and replaces them with a string that you provide:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; pattern = r'not\w+bad'
&gt;&gt;&gt; re.search(pattern, s)
&gt;&gt;&gt; pattern = r'not(\s+\w+)* bad' # pattern matches "not &lt;words&gt; bad" 
&gt;&gt;&gt; re.sub(pattern, 'good', s)
'the day is good'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re
s = 'The day is  at not all bad'
pattern=r'(not)(?(1).+(bad))'

match=re.search(pattern,s)

new_string=re.sub(pattern,"good",s)

print(new_string)
</code></pre>
<p>output:</p>
<pre><code>The day is  at good
</code></pre>
<blockquote>
<p>Regex explanation :</p>
</blockquote>
<p>I used <code>if else</code> condition regex here :</p>
<p>How <code>if else</code> in regex works  , well this is very simple if else regex syntax:</p>
<pre><code>(condition1)(?(1)(do something else))
(?(A)X|Y)
</code></pre>
<p>This means "if proposition A is true, then match pattern X; otherwise, match pattern Y." </p>
<p>so in this regex :</p>
<pre><code>(not)(?(1).+(bad))
</code></pre>
<p>it matches 'bad' if 'not' in the string,  the condition is 'not' must present in the string.</p>
<blockquote>
<p>Second Regex :</p>
</blockquote>
<p>if you want you can also use this regex:</p>
<pre><code>(not.+)(bad)
</code></pre>
<p>In this group(2) is matching 'bad'.</p>
<p>Your string :</p>
<pre><code>&gt;&gt;&gt; s = 'The day is not at all bad' #input

&gt;&gt;&gt; print(output)
&gt;&gt;&gt; 'The day is good' # output
</code></pre>
</div>
<span class="comment-copy">Finally i got what you want , i have updated my answer  , please check.</span>
<span class="comment-copy">Not sure how this addresses of looking for the word "bad" <i>after</i> the word "not"... Also, for your dict example, why are you checking the string is present before replacing it? Just try and replace it and if it's not present nothing will happen... Not much point in scanning <code>s</code> twice...</span>
