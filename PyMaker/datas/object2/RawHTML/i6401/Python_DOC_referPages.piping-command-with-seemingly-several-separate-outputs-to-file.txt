<div class="post-text" itemprop="text">
<p>I am using <a href="https://github.com/sivel/speedtest-cli" rel="nofollow noreferrer">speedtest-cli</a> to get my internet speed in a python script. I would like to run this command in shell via <code>subprocess.Popen</code>.</p>
<p>Here is the command in terminal:</p>
<pre><code>`speedtest-cli --share &gt; output.log`
</code></pre>
<p><code>speedtest-cli</code> runs the test, whilst <code>--share</code> provides me with an additional link in the output, pointing to an image of the speedtest result. Here is the content of <code>output.log</code>:</p>
<blockquote>
<p>Retrieving speedtest.net configuration...
  Testing from M-net (xxx.xxx.xxx.xxx)...
  Retrieving speedtest.net server list...
  Selecting best server based on ping...
  Hosted by XXXXXXXXXXXXXXXXXXXXXX [16.12 km]: 20.902 ms
  Testing download speed................................................................................
  Download: 48.32 Mbit/s
  Testing upload speed......................................................................................................
  Upload: 12.49 Mbit/s
  Share results: <a href="http://www.speedtest.net/result/670483456.png" rel="nofollow noreferrer">http://www.speedtest.net/result/670483456.png</a></p>
</blockquote>
<p>If I run the command in terminal, I get all the test results as well as the link in the target file as expected. I confirmed it is all <code>stdout</code> and not another channel by using this <a href="https://superuser.com/questions/453598/determine-if-output-is-stdout-or-stderr#comment529379_453604">grep trick</a>: <code>command | grep .</code></p>
<p>I am trying to run it in Python as follows:</p>
<pre><code>subprocess.Popen(['speedtest-cli', '--share', '&gt;', 'output.log`],
                  stdout=subprocess.PIPE, shell=True)
</code></pre>
<p>...and I also tried putting the output into the file directly via python:</p>
<pre><code>with open('output.log', 'w') as f:
    Popen(['speedtest-cli', '--json', '--share'], stdout=f, shell=True)
</code></pre>
<p>Neither of these work. I get a nice file created with the latter approach, BUT the link is not included! (the last line in the output above).</p>
<p>Against all the warnings of deprecation and better safety with using <code>subprocess</code> module, I became desparate and tried <code>os.system()</code>:</p>
<pre><code>os.system('speedtest-cli --share &gt; output.log')
</code></pre>
<p>Annoyingly, this works... the full output along with the link is captured in the file.</p>
<p><strong>What is going on here? How do I get the link to be captured using <code>Popen</code>?</strong></p>
<p>I'm using Python 3.5</p>
</div>
<div class="post-text" itemprop="text">
<p>When using <code>shell=True</code>, your argument to <code>Popen</code> needs to be a <em>string</em>, not a list:</p>
<pre><code>subprocess.Popen('speedtest-cli --json --share &gt; output.log',
                 stdout=subprocess.PIPE, shell=True)
</code></pre>
<p>Compare:</p>
<pre><code>&gt;&gt;&gt; subprocess.Popen('echo hello', shell=True)
&gt;&gt;&gt; hello
</code></pre>
<p>And:</p>
<pre><code>&gt;&gt;&gt; subprocess.Popen(['echo', 'hello'], shell=True)
&gt;&gt;&gt; 
</code></pre>
<p>When you pass a list and you are using <code>shell=True</code>, only the the first item is relevant and the remainder is ignored.</p>
<p>If you want to collect the output yourself, consider <code>subprocess.check_output</code>:</p>
<pre><code>&gt;&gt;&gt; output = subprocess.check_output(['echo', 'hello'])
&gt;&gt;&gt; output
b'hello\n'
</code></pre>
<p>Or:</p>
<pre><code>&gt;&gt;&gt; output = subprocess.check_output('echo hello', shell=True)
</code></pre>
<p>The <code>check_output</code> method works with both Python 2 and Python 3.  In Python 3, you also have available the <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer">run</a> method.</p>
</div>
<span class="comment-copy">Thank you - I simply needed to create a single string. In your first code example, you have the single string as a list, which doesn"t work then - should it be corrected?</span>
<span class="comment-copy">Actually, that works fine ("...only the the first item is relevant and the remainder is ignored..."), but it was a typo and I have fixed it.</span>
<span class="comment-copy">shell=True is a security nightmare.  So it's best practise to use shell=False and pass a list of parameters.  (It's not a security problem in this case, as it's only exploitable if an attacker can control one of the parameters.  But it's still best to avoid it).</span>
<span class="comment-copy">@user9876 - I was waiting for someone to leave that customary comment when <code>shell=True</code> pops up  ;)</span>
