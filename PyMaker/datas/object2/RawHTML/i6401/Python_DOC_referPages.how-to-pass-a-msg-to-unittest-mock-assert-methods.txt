<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/library/unittest.html?highlight=testcase#unittest.TestCase.assertEqual" rel="nofollow noreferrer">TestCase</a> docs specify that assert methods can take an optional <code>msg</code> keyword argument to specify a message to add context to the assertion:</p>
<blockquote>
<p>All the assert methods accept a <em>msg</em> argument that, if specified, is used as the error message on failure (see also longMessage).</p>
</blockquote>
<p>Is there a way to do this with the <a href="https://docs.python.org/3/library/unittest.mock.html#the-mock-class" rel="nofollow noreferrer">unittest.mock</a> assert methods, in particular <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.assert_any_call" rel="nofollow noreferrer"><code>assert_any_call</code></a>?</p>
</div>
<div class="post-text" itemprop="text">
<p>Looking at the <a href="https://github.com/python/cpython/blob/master/Lib/unittest/mock.py#L869" rel="nofollow noreferrer">source</a> of <code>assert_any_call</code>, the message is hard-coded:</p>
<pre><code>raise AssertionError(
    '%s call not found' % expected_string
) from cause
</code></pre>
<p>Moreover, the <code>AssertionError</code> is raised directly in the code, rather than being the consequence of a failed <code>assert</code> statement. This pattern is followed by all the <code>assert_*</code> methods in the module.  So there is no way to set a custom message unless you subclass and override the methods that interest you.</p>
</div>
