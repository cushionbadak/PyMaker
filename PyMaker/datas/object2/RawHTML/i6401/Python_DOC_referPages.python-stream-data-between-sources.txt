<div class="post-text" itemprop="text">
<p>I have a large file in my FTP, and I need to write it to google cloud storage.
My first thought would be download it from ftp to local file, and then transmit local file to remote storage. But I would prefer to do it without downloading it localy.
So far I came up with the following code: </p>
<pre><code>from ftplib import FTP
import io

ftp = ftp = FTP('example.com')
ftp.voidcmd('TYPE I')
sock = ftp.transfercmd('RETR file.csv')
raw = io.BytesIO()
file = io.BufferedRandom(raw)

blob = bucket.blob('blobname.csv', chunk_size=262144)  # gcs blob
blob.upload_from_file(file, content_type='text/csv', rewind=True)
</code></pre>
<p>But I get: </p>
<pre><code>Traceback (most recent call last):
  File "/home/tsh/example.py", line 65, in &lt;module&gt;
    file = io.BufferedRandom(raw)
io.UnsupportedOperation: File or stream is not seekable.
</code></pre>
<p>Is there a way to pipe data from ftp to cloud storage (or any other remote resource) without downloading it to local machine? I am using python 3.6.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you can achieve what you want, without python, using <a href="https://rclone.org/" rel="nofollow noreferrer">rclone</a>. If you <em>must</em> use python, maybe they provide a wrapper or you could use <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer"><code>subprocess</code></a> module.</p>
</div>
<span class="comment-copy">Thank you for suggesting rclone, but I need to do it in pure python, without subprocess.</span>
