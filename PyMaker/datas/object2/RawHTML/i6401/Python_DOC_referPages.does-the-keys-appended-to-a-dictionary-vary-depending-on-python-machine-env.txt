<div class="post-text" itemprop="text">
<p>I started practicing codefights recently, its supposed to be a great practice space for online interview questions. </p>
<p>Problem being, this is my solution in python for a simple question on finding the first non repeating character in a string : </p>
<pre><code>def firstNotRepeatingCharacter(s):
    d = dict()
    for i in range(len(s)):
        key = s[i]
        print d
        if key in d:
            d[key] += 1
        else:
            d[key] = 1
    found = '_'
    for key in d:
        if d[key] == 1:
            found = key
            break
    return found
</code></pre>
<p>which when I run on my local jupyter notebook gives me the following output : </p>
<pre><code>firstNotRepeatingCharacter('abacabad')   

{}
{'a': 1}
{'a': 1, 'b': 1}
{'a': 2, 'b': 1}
{'a': 2, 'b': 1, 'c': 1}
{'a': 3, 'b': 1, 'c': 1}
{'a': 3, 'b': 2, 'c': 1}
{'a': 4, 'b': 2, 'c': 1}
Out[89]:
'c'
</code></pre>
<p>Which is awesome. That is the answer. </p>
<p>However running the same on <a href="https://codefights.com/" rel="nofollow noreferrer">codefights </a> env gives an error: 
<a href="https://i.stack.imgur.com/w5Xjj.png" rel="nofollow noreferrer"><img alt="code fights output gives **'d'** because it gets added to the dictionary before. " src="https://i.stack.imgur.com/w5Xjj.png"/></a></p>
<p>So my question being, I being a python noob, the append in a dictionary does it add keys to random place or is it in an orderly fashion ?? 
Or the output difference is because of some difference in the python env of the jupyter noteboook and their online compiler. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> to count character occurrences.</p>
<p>Since the keys in a <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary have no order</a>, you need to loop over the string:</p>
<pre><code>import collections


def first_singleton(s):
    counter = collections.Counter(s)
    for c in s:
        if counter[c] == 1:
            return c
    return None

print(first_singleton('abacabad'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's not stored in order. You can try using <code>OrderedDict</code> <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">https://docs.python.org/3/library/collections.html#collections.OrderedDict</a></p>
</div>
<span class="comment-copy">Keys in <code>dict</code> don't have an order. Since Python 2.7 there is <code>collections.OrderedDict</code></span>
