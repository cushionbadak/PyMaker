<div class="post-text" itemprop="text">
<p>I'm a newbie in Python.
Please explain why python does not have switch-case?</p>
</div>
<div class="post-text" itemprop="text">
<p>We considered it at one point, but without having a way to declare named constants, there is no way to generate an efficient jump table.  So all we would be left with is syntactic sugar for something we could already do with if-elif-elif-else chains.</p>
<p>See <a href="https://www.python.org/dev/peps/pep-0275/" rel="noreferrer">PEP 275</a> and <a href="https://www.python.org/dev/peps/pep-3103/" rel="noreferrer">PEP 3103</a> for a full discussion.</p>
<p>Roughly the rationale is that the various proposals failed to live up to people's expections about what switch-case would do, and they failed to improve on existing solutions (like dictionary-based dispatch, if-elif-chains, getattr-based dispatch, or old-fashioned polymorphism dispatch to objects with differing implementations for the same method).</p>
</div>
<div class="post-text" itemprop="text">
<p>There is literally a section in the docs to answer this.  See below:</p>
<p><a href="https://docs.python.org/3/faq/design.html#why-isn-t-there-a-switch-or-case-statement-in-python" rel="noreferrer"><strong>Why isnâ€™t there a switch or case statement in Python?</strong></a></p>
<p>TL;DR:  existing alternatives (dynamic dispatch via <code>getattr</code> or <code>dict.get</code>, <code>if</code>/<code>elif</code> chains) cover all the use cases just fine.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def f(x):
    return {
        1 : 'output for case 1',
        2 : 'output for case 2',
        3 : 'output for case 3'
    }.get(x, 'default case')   
</code></pre>
<p>You can use this as switch case in python and if condition not match it will return default if condition not match</p>
</div>
<span class="comment-copy">They are not very helpful. It is safer to stick with <code>if... elif</code> than <code>switch</code>. They lead to horrible bugs if you are not careful.</span>
<span class="comment-copy">For a workaround you can refer to <a href="https://stackoverflow.com/q/5440990/6521116">Is there any value to a Switch / Case implementation in Python?</a></span>
<span class="comment-copy">Related post - <a href="https://stackoverflow.com/q/60208/465053">Replacements for switch statement in Python?</a></span>
<span class="comment-copy"><code>case 1:</code> is pretty constant, but without <i>named</i> constants, you'd have to use magic numbers everywhere, and we don't want a syntax construct that encourages magic numbers.</span>
<span class="comment-copy">Does not attempt to answer question "<i>Please explain why python does not have switch-case?</i>".</span>
