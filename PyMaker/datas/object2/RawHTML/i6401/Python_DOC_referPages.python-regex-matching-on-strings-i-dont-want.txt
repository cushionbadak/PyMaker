<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15954650/python-how-do-i-use-re-to-match-a-whole-string">Python- how do I use re to match a whole string</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>This is my first attempt at trying to use regex with Python or at all, and it is not working as expected. I want a regex to match any alphabetic character or underscore as the first character, then any number of alphanumeric characters or underscores after. The regex I am using is '^[a-z_,A-Z][a-z_A-Z0-9]*', which seems to produce what I want at pythex.org, but in my code it is matching strings that I do not want.</p>
<p>My code is as follows:</p>
<pre><code>isMatch = re.match('^[a-z_A-Z][a-z_A-Z0-9]*', someString)
return True if isMatch else False
</code></pre>
<p>Two examples of strings that are matching that I don't want are: "qq-q" and "va[r". What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think that you just forgot the <code>$</code> at the end of your regex to specify the end of the string.</p>
<pre><code>isMatch = re.match('^[a-z_A-Z][a-z_A-Z0-9]*$', someString)
</code></pre>
<p>Without that, it will match the beginning of the string and not the entire string, which explains why it worked on <code>"qq-q"</code> (<code>"qq"</code> is a match) and <code>"va[r"</code> (<code>"va"</code> is a match).</p>
</div>
<span class="comment-copy">show us what <code>someString</code> is</span>
<span class="comment-copy">Well, the first two characters match exactly as expected, with either <code>[a-z_A-Z]</code> matching and then <code>[a-z_A-Z0-9]</code> matching. The <code>*</code> after those two conditions symbolize that the previous statement can be zero or more times repeating. The pattern matches the beginning part of a string as valid, and then ignore the rest because you're missing an ending <code>$</code> or any additional pattern to show that you want to end the search there.</span>
<span class="comment-copy">If you're trying to write a function that detects whether a string is a valid Python identifier, you can do that without regex: try the <code>str.isidentifier()</code> method.</span>
<span class="comment-copy">Upwards of python 3.4 you can also use <a href="https://docs.python.org/3/library/re.html#re.fullmatch" rel="nofollow noreferrer"><code>re.fullmatch</code></a> instead of adding the <code>^</code> and <code>$</code> anchors</span>
