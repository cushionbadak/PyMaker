<div class="post-text" itemprop="text">
<p>I'm not quite sure why this doesn't work, can anyone please help me fix this?</p>
<pre><code>def valid(user_guess, valid_characters, guess_size):
    '''(list, str, int) -&gt; bool
       Given a list of single character strS and a str, 
       return True if every character is in the given string.
     &gt;&gt;&gt; (['A', 'C', 'B', 'E'], 'ACBE', 4)
     True
     &gt;&gt;&gt; (['A', 'C', 'B', 'E'], 'ADFG', 4)
     False
    '''
    for char in user_guess:
        if char in valid_characters and len(user_guess) == guess_size:
            return True
        if char not in valid_characters and len(user_guess) != guess_size:
            return Fal
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a slightly more Pythonic way using <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer"><code>all</code></a></p>
<pre><code>def valid(user_guess, valid_characters, guess_size):
    return len(user_guess) == guess_size and all(c in valid_characters for c in user_guess)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the <code>len(user_guess) == guess_size</code> condition is satisfied the <code>return True</code> is triggering after only checking the first <code>char</code>. For correctness, return <code>False</code> when this condition fails, and return <code>True</code> outside the loop if this never triggers.</p>
<p>Also, the length condition doesn't need to be evaluated inside the loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>I am not sure <em>exactly how</em> you want this code to work. However, based on your comment:</p>
<blockquote>
<p>Given a list of single character strS and a str, <strong>return True
    if every character is in the given string</strong>.</p>
</blockquote>
<p>I assume you simply want to know that <strong>all</strong> characters (="every character") in <code>user_guess</code> are in <code>valid_characters</code>. I would do it this way:</p>
<pre><code>return len(set(user_guess).difference(valid_characters)) == 0
</code></pre>
<p>It is not clear what <code>guess_size</code> is supposed to do.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is one of many possible ways to valid the guesses</p>
<pre><code>guesses = [(['A', 'C', 'B', 'E'], 'ACBE', 4),
           (['A', 'C', 'B', 'E'], 'ADFG', 4)]

def checkguess(g):
    chars = g[0]
    valid = g[1]
    guess_size = g[2]
    if chars == list(valid) and len(chars) == guess_size:
        return True
    else: 
        return False

if __name__ == '__main__':
    result = [checkguess(g) for g in guesses]
    assert result == [True, False]  
</code></pre>
</div>
<span class="comment-copy">What should the function return when <code>char</code> "not in" <code>valid_characters</code> but <code>len(user_guess) == guess_size</code>?</span>
<span class="comment-copy">Why <code>len(user_guess) == guess_size</code> and <code>len(user_guess) != guess_size</code> are inside the loop? these variables do not change!</span>
<span class="comment-copy">For pure fun, try <code>valid(['E', 'T', 'W', 'Q'], 'ADFG', 4)</code></span>
<span class="comment-copy">It still doesn't work for some reason</span>
<span class="comment-copy">In what way is it not working?  Error message, wrong answer, etc</span>
<span class="comment-copy">It doesn't give me anything when I test it. I don't get a boolean. When I copy and paste the code I want to test, it just outputs the same code</span>
<span class="comment-copy">Where are you doing the testing?  Try <code>valid(['A', 'C', 'B', 'E'], 'ACBE', 4)</code> after copying the code.</span>
<span class="comment-copy">I'm doing it in wing 101 and I copied that code and I got the exact same code back after I tested it</span>
