<div class="post-text" itemprop="text">
<p>I am trying to loop though a python dictionary to see if values that I am getting from a csv file already exist in the dictionary, If the values do not exist I want to add them to the dictionary. then append this to a list.</p>
<p>I am getting the error list indices must be integers, not str.</p>
<p>example input </p>
<p>first name last name</p>
<p>john           smith </p>
<p>john           smith</p>
<p>example output </p>
<p>first_name john last name smith</p>
<p>user_list =[]</p>
<pre><code>with open(input_path,'rU') as csvfile:
        reader = csv.DictReader(csvfile)

for row in reader:

  if row['first_name'] not in user_dictionary['first_name'] and not in row['last_name'] not in user_dictionary['last_name']:
      user_dictionary = {

          'first_name':row['first_name'],
          'last_name':row['last_name']
            }
            user_list.append(user_dictionary)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Currently, your code is creating a new dictionary on every iteration of the for-loop. If each value of the dictionary is a list, then you can append to that list via the key:</p>
<pre><code>with open(input_path,'rU') as csvfile:
    reader = csv.DictReader(csvfile)
user_dictionary = {"first_name":["name1, "name2", ...], "last_name":["name3", name4", ....]}
for row in reader:
    if row['first_name'] not in user_dictionary['first_name'] and not in row['last_name'] not in user_dictionary['last_name']:
       user_dictionary["first_name"].append(row['first_name'])
       user_dictionary['last_name'].append(row['last_name'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Generally, you can use a membership test (<code>x in y</code>) on <a href="https://docs.python.org/3/library/stdtypes.html#dict.values" rel="nofollow noreferrer"><code>dict.values()</code></a> view to check if the value already exists in your dictionary.</p>
<p>However, if you are trying to add all unique users from your CSV file to a list of users, that has nothing to do with dictionary values testing, but a list membership testing.</p>
<p>Instead of iterating over the complete list each time for a slow membership check, you can use a <a href="https://docs.python.org/3/library/stdtypes.html#set" rel="nofollow noreferrer"><code>set</code></a> that will contain "ids" of all users added to a list and enable a fast <code>O(n)</code> (amortized) time check:</p>
<pre><code>with open(input_path,'rU') as csvfile:
    reader = csv.DictReader(csvfile)

user_list = []
user_set = set()
for row in reader:
    user_id = (row['first_name'], row['last_name'])
    if user_id not in user_set:
        user = {
            'first_name': row['first_name'],
            'last_name': row['last_name'],
            # something else ...
        }
        user_list.append(user)
        user_set.add(user_id)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The error <code>"list indices must be integers, not str"</code> makes the problem clear: On the line that throws the error, you have a list that you think is a dict. You try to use a string as a key for it, and boom!</p>
<p>You don't give enough information to guess which dict it is: It could be <code>user_dictionary</code>, it could be that you're using <code>csv.reader</code> and not <code>csv.DictReader</code> as you say you do. It could even be something else-- there's no telling what else you left out of your code. But it's a list that you're using as if it's a dict.</p>
</div>
<span class="comment-copy">Please explain your code. How is it failing. Provide a sample input, expected output and current error/bad output you are getting to clearly show where your problem exists.</span>
<span class="comment-copy">In your first iteration - <code>user_dictionary</code> doesn't exist yet... In your subsequent iterations, <code>user_dictionary</code> refers to the last instance of it... Are you supposed to be checking against <i>all</i> dictionaries in the <code>user_list</code> ?</span>
<span class="comment-copy">Your indentation also needs fixing; as posted, your <code>for</code> loop should exit immediately with an exception for trying to read a closed file (because the <code>for</code> loop is outside the <code>with</code> block).</span>
<span class="comment-copy">If you really wanted... <code>user_list = [{'first_name': fn, 'last_name': ln} for fn, ln in {(row['first_name'], row['last_name']) for row in reader}]</code>...</span>
<span class="comment-copy">That's a nice shortcut, but it makes harder (if not impossible) to add other attributes to <code>user</code> dict/list (other than first and last name).</span>
<span class="comment-copy">Well, you can do <code>list({(row['first_name']: row['last_name']): row for row in reader}.values())</code> and make the values what you want there instead of the entire row - however, it'd retain the last occurrence of the key and not the first which may be important...</span>
<span class="comment-copy">Yes, many options, if only OP could clarify what he wants exactly.. :)</span>
<span class="comment-copy">sorry I thought I put this in when I edited my question the error is to do with the user dictionary</span>
<span class="comment-copy">In the code you show you initialize it to a dict. But it seems initialize it to a list.</span>
<span class="comment-copy">... it seems <b>you first</b> initialize it to a list :-(</span>
