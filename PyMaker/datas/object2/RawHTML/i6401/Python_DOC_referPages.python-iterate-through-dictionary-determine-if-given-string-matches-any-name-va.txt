<div class="post-text" itemprop="text">
<p>I looked through <a href="https://stackoverflow.com/questions/19763007/how-do-i-iterate-over-a-dictionary-and-return-the-key-in-python">this post</a> trying to figure out how to find out if a given string matches a certain value in a dictionary, but it's throwing nothing back. I have a dictionary with dictionaries and I'm trying to figure out how I can, let's say if given a string <code>'warrior'</code>, look through the dictionary, go inside the sub dictionary, check the <code>name</code> key for the given string, and if it exists, return the class. This is my code.</p>
<h1>classes.py</h1>
<pre><code>#import playerstats
from player import playerStats

def setClass(chosenClass):
    chosenClass = chosenClass.upper()
    #function from post
    """print ([key
              for key, value in classes.items()
              if value == chosenClass])"""
    #this returns nothing
    for key, value in classes.items():
        if value == chosenClass:
            print(classes[chosenClass][value])
    #also returns nothing
    for i in classes:
        if classes[i]["name"] == chosenClass:
            print('true')

#create classes
classes = {
    'WARRIOR': {
        #define name of class for reference
        'name': 'Warrior',
        #define description of class for reference
        'description': 'You were  born a protector. You grew up to bear a one-handed weapon and shield, born to prevent harm to others. A warrior is great with health, armor, and defense.',
        #define what the class can equip
        'gearWeight': ['Cloth', 'Leather', 'Mail', 'Plate'],
        #define stat modifiers
        'stats': {
            #increase, decrease, or leave alone stats from default
            'maxHealth': playerStats['maxHealth'],
            'stamina': playerStats['stamina'] * 1.25,
            'resil': playerStats['resil'] * 1.25,
            'armor': playerStats['armor'] * 1.35,
            'strength': playerStats['strength'] * 0.60,
            'agility': playerStats['agility'],
            'criticalChance': playerStats['criticalChance'],
            'spellPower': playerStats['spellPower'] * 0.40,
        }
    }
}
</code></pre>
<h1>player.py</h1>
<pre><code>import random
import classes

#set starter gold variable
startGold = random.randint(25,215)*2.5
#begin player data for new slate
playerStats = {
    'currentHealth': int(100),
    'maxHealth': int(100),
    'stamina': int(10),
    'resil': int(2),
    'armor': int(20),
    'strength': int(15),
    'agility': int(10),
    'criticalChance': int(25),
    'spellPower': int(15),
    #set gold as random gold determined from before
    'gold': startGold,
    'name': {'first': 'New', 'last': 'Player'},
}
</code></pre>
<p>What can I do to have it search through the dictionary, and if <code>chosenClass</code> is an existing class dictionary, return true or return the dictionary?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>....
    #this returns nothing
    for key, value in classes.items():
        if value == chosenClass:
</code></pre>
<p>I think you should be comparing the <code>key</code> to <code>chosenClass</code>, instead of the <code>value</code> in that loop.  An easy troubleshooting tool is to print <em>stuff</em> to see what is happening</p>
<pre><code>....
    #this returns nothing
    for key, value in classes.items():
        print('key:{}, value:{}, chosenClass:{}'.format(key, value, chosenClass)
        if value == chosenClass:
</code></pre>
<p>But maybe an easier way to do it is:</p>
<pre><code>def setClass(chosenClass):
    chosenClass = chosenClass.upper()
    chosen = classes.get(chosenClass, False)
    return chosen
</code></pre>
</div>
<span class="comment-copy">You uppercase chosenclass. Uppercase classes[i]["name"] too.</span>
<span class="comment-copy">And BTW you can also simply iterate over classes.values()</span>
<span class="comment-copy">Why not just avoid iterating and index by <code>classes[key]</code> i.e. <code>'WARRIOR'</code>?</span>
<span class="comment-copy">@RyanStein that makes sense. i switched it and it works. thanks! post as an answer and ill upvote and accept.</span>
<span class="comment-copy">Just curious, what does adding <code>False</code> do?</span>
<span class="comment-copy">If <code>chosenClass</code> is not in <code>classes</code>, <code>.get()</code> will return <code>False</code> which will be assigned to <code>chosen</code>.<a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#dict.get</a></span>
