<div class="post-text" itemprop="text">
<p>Throughout my app I am using the following logger:</p>
<pre><code>logger = logging.getLogger()
</code></pre>
<p>However, I want to disable it and disabling logging in general when running tests, so ontop of the <code>tests.py</code> file I included:</p>
<pre><code>logging.disable(logging.CRITICAL)
</code></pre>
<p>But I would like to be able log test-specific messages. I tried getting a new logger and setting a different level:</p>
<pre><code>logger = logging.getLogger('TestLogger')
logger.setLevel(logging.DEBUG)
</code></pre>
<p>But the <code>disable</code> call seems to affect it too.</p>
<p>How can I disable all other loggers except for the <code>logger</code> I am using in the tests file?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>logging.disable()</code> will affect every logger (see <a href="https://docs.python.org/3/library/logging.html#logging.disable" rel="nofollow noreferrer">https://docs.python.org/3/library/logging.html#logging.disable</a>).</p>
<p>You could try something like this:</p>
<pre><code>import logging
logger1 = logging.getLogger('logger1')
logger2 = logging.getLogger('logger2')
keep_this_logger = logging.getLogger('keep_this_logger')

logger1.warning("WARNING 1")
logger2.warning("WARNING 2")
keep_this_logger.warning("WARNING 3")

for key in logging.Logger.manager.loggerDict: # gets all loggers
    logging.getLogger(key).disabled = True # disable them 1 by 1

logging.getLogger('keep_this_logger').disabled = False # re-enable your logger

logger1.warning("WARNING 1")
logger2.warning("WARNING 2")
keep_this_logger.warning("YAY!!!") # success
</code></pre>
<p>EDIT:
Just noticed that you said your main logger is <code>logging.getLogger()</code>. This code will only work for named loggers, the root logger doesn't show up in <code>logging.Logger.manager.loggerDict</code>.</p>
</div>
