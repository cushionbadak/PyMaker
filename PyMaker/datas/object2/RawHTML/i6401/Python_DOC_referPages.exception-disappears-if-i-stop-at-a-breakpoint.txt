<div class="post-text" itemprop="text">
<p><strong>Python 3.6.2</strong></p>
<p>The problem with the code below is that being run, it raises an exception.
But being stepped in debugger, it works perfectly. Where I stop in the debugger is marked as breakpoint in the comments.</p>
<p>I tried the command both in IDE and in the shell. Exception raises. So, this problem is not related to the IDE.</p>
<p>This situation shook me a bit. 
I made a video of it: <a href="https://www.youtube.com/watch?v=OUcMpEzooDk" rel="nofollow noreferrer">https://www.youtube.com/watch?v=OUcMpEzooDk</a></p>
<p><strong>Could you give me a kick here? How can it be?</strong></p>
<p>Comment on the code below (not related to the problem, but just for the most curious).</p>
<p>This is an utility to use with Django web framework.
Users upload files, they are put to the media directory.</p>
<p>Of course, Django knows where the media directory is sutuated.
And then Django keeps in the database paths relative to media. Something like this: </p>
<ul>
<li><p>it_1/705fad82-2f68-4f3c-90c2-116da3ad9a40.txt'</p></li>
<li><p>e5474da0-0fd3-4fa4-a85f-15c767ac32d4.djvu</p></li>
</ul>
<p>I want to know exactly that files kept in media correspond to paths in the database. No extra files, no shortage.</p>
<p><strong>Code:</strong></p>
<pre><code>from pathlib import Path

class &lt;Something&gt;():
    def _reveal_lack_extra_files(self):

        path = os.path.join(settings.BASE_DIR, '../media/')

        image_files = Image.objects.values_list("file", flat=True)
        image_files = [Path(os.path.join(path, file)) for file in image_files]

        item_files = ItemFile.objects.values_list("file", flat=True)
        item_files = [Path(os.path.join(path, file)) for file in item_files]

        sheet_files = SheetFile.objects.values_list("file", flat=True)
        sheet_files = [Path(os.path.join(path, file)) for file in sheet_files]

        expected_files = set().union(image_files, item_files, sheet_files)

        real_files = set()

        glob_generator = list(Path(path).glob("**/*"))

        for posix_path in glob_generator:
            if os.path.isfile(posix_path._str): # Breakpoint
                real_files.add(posix_path)


        lack = expected_files.difference(real_files)
        extra = real_files.difference(expected_files)

        assert bool(lack) == False, "Lack of files: {}".format(lack)
        assert bool(extra) == False, "Extra files: {}".format(extra)
</code></pre>
<p><strong>Traceback:</strong></p>
<pre><code>/home/michael/PycharmProjects/venv/photoarchive_4/bin/python /home/michael/Documents/pycharm-community-2017.1.5/helpers/pydev/pydevd.py --multiproc --qt-support --client 127.0.0.1 --port 43849 --file /home/michael/PycharmProjects/photoarchive_4/manage.py checkfiles
warning: Debugger speedups using cython not found. Run '"/home/michael/PycharmProjects/venv/photoarchive_4/bin/python" "/home/michael/Documents/pycharm-community-2017.1.5/helpers/pydev/setup_cython.py" build_ext --inplace' to build.
pydev debugger: process 3840 is connecting

Connected to pydev debugger (build 171.4694.67)
Traceback (most recent call last):
  File "/home/michael/Documents/pycharm-community-2017.1.5/helpers/pydev/pydevd.py", line 1591, in &lt;module&gt;
    globals = debugger.run(setup['file'], None, None, is_module)
  File "/home/michael/Documents/pycharm-community-2017.1.5/helpers/pydev/pydevd.py", line 1018, in run
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "/home/michael/Documents/pycharm-community-2017.1.5/helpers/pydev/_pydev_imps/_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "/home/michael/PycharmProjects/photoarchive_4/manage.py", line 22, in &lt;module&gt;
    execute_from_command_line(sys.argv)
  File "/home/michael/PycharmProjects/venv/photoarchive_4/lib/python3.6/site-packages/django/core/management/__init__.py", line 364, in execute_from_command_line
    utility.execute()
  File "/home/michael/PycharmProjects/venv/photoarchive_4/lib/python3.6/site-packages/django/core/management/__init__.py", line 356, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "/home/michael/PycharmProjects/venv/photoarchive_4/lib/python3.6/site-packages/django/core/management/base.py", line 283, in run_from_argv
    self.execute(*args, **cmd_options)
  File "/home/michael/PycharmProjects/venv/photoarchive_4/lib/python3.6/site-packages/django/core/management/base.py", line 330, in execute
    output = self.handle(*args, **options)
  File "/home/michael/PycharmProjects/photoarchive_4/general/management/commands/checkfiles.py", line 59, in handle
    self._reveal_lack_extra_files()
  File "/home/michael/PycharmProjects/photoarchive_4/general/management/commands/checkfiles.py", line 39, in _reveal_lack_extra_files
    if os.path.isfile(posix_path._str):
AttributeError: _str

Process finished with exit code 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're using the <code>_str</code> attribute on paths, which is undocumented and not guaranteed to be set. In general, an underscore prefix indicates that this is a private attribute that should not be used by user code. If you want to convert a path to a string, just use <code>str(the_path)</code> instead.</p>
<p>But in this case, you don't need to do so: <code>Path</code> objects have an <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.is_file" rel="nofollow noreferrer"><code>is_file</code></a> method which you can call instead. Another possibility is to pass the <code>Path</code> object itself to the <a href="https://docs.python.org/3/library/os.path.html#os.path.isfile" rel="nofollow noreferrer"><code>os.path.isfile</code></a> function, which is supported on Python 3.6.</p>
</div>
<span class="comment-copy">Where is the <code>Path</code> class coming from?</span>
<span class="comment-copy">Patrick, it is from pathlib import Path. I have now added it to the question.</span>
<span class="comment-copy">It looks like you're running Python 3.6, so <code>isfile</code> should accept a path-like object.  Try <code>if os.path.isfile(posix_path)</code></span>
<span class="comment-copy">Thank you very much. Perfect explanation.</span>
