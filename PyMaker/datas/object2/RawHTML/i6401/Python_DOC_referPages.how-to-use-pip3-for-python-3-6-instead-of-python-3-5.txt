<div class="post-text" itemprop="text">
<p>I'm using Kali dist so I have already installed Python 2.7, 3.5 and 3.6. Commands 'python' and 'pip' are associated with Python 2.7. But the 'python3' uses Python 3.6 while pip3 is installing packages for Python 3.5.<br/>
When I tried to create an venv:</p>
<pre><code>pip3 -p python3.6 virtualenv myenv
</code></pre>
<p>I've got an error:</p>
<pre><code>no such option: -p
</code></pre>
<p>How can I associate pip3 with Python 3.6 instead of Python 3.5?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your version of pip is inextricably linked to your version of Python, you cannot tell pip "use this Python" or "use that Python." If you have a version mismatch between pip3 (using Python 3.X) and python3 (being Python 3.Y), it means your problem is with multiple overlapping distributions of Python and a weirdly configured <code>$PATH</code>.</p>
<p>If you run <code>pip3 --version</code> it will tell you the site-packages directory and Python version number that pip3 is associated with. </p>
<p>If you run <code>python3</code> and then execute <code>&gt;&gt;&gt; import site; site.getsitepackages()</code>, it should print the site-packages directory your <code>python3</code> is using. </p>
<p>If these do not match, you've got path problems and you'll need to post more information about what operating system you're on, what Python distributions you're using, and how you installed them.</p>
<p><strong>Update/Summary of Comment Thread:</strong> Original poster had a distribution-bundled Python 3.6 installed alongside a self-installed Python 3.5. The pip3 on their path was associated with Python 3.6 (system Python), while the command python3 was associated with Python 3.5 (their self-installed Python). Resolution:</p>
<p>Run <code>which -a python3</code> to find Python 3.5. Add the location of Python 3.5 to your <code>$PATH</code>. (Do it in <code>.profile</code> or <code>.bash_profile</code> to make it permanent.)</p>
</div>
<div class="post-text" itemprop="text">
<p>You can explicitly run the <code>pip3</code> script with a particular Python version, by prefixing it with the appropriate <code>python3.</code><em>x</em> command:</p>
<pre><code>ldo@theon:~&gt; pip3 --version
pip 9.0.1 from /usr/lib/python3/dist-packages (python 3.6)
ldo@theon:~&gt; python3.5 $(which pip3) --version
pip 9.0.1 from /usr/lib/python3/dist-packages (python 3.5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First find the right version of python you want to use:</p>
<pre><code>$ which -a python3.6
/usr/bin/python3.6
</code></pre>
<p>then invoke that instance of python directly, e.g.</p>
<pre><code>$ /usr/bin/python3.6 -m venv
usage: venv [-h] [--system-site-packages] [--symlinks | --copies] [--clear] [--upgrade] [--without-pip] [--prompt PROMPT] ENV_DIR [ENV_DIR ...]
venv: error: the following arguments are required: ENV_DIR
</code></pre>
<p>Next, <code>pip</code> does not create virtual environments.  The module <code>venv</code> does.  Read <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer" title="recommended usage">the <code>venv</code> documentation</a> for recommended usage.  In your case, you might want:</p>
<pre><code>$ /usr/bin/python3.6 -m venv myenv
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/34803040/how-to-run-pip-of-different-version-of-python-using-python-command">How to run pip of different version of python using python command?</a></span>
<span class="comment-copy">The '-p python3.6' should be the arguments for virtualenv not pip3</span>
<span class="comment-copy">If one of these answers solved your problem, please mark it.</span>
<span class="comment-copy">Also see <a href="https://unix.stackexchange.com/questions/399626/why-is-kali-linux-so-hard-to-set-up-why-wont-people-help-me/399627#399627">this question</a> and the advice given there: <b><i>If you aren't already a Linux pro, don't use Kali.</i></b> This cannot be stressed enough.</span>
<span class="comment-copy"><code>pip3 --version</code> <code>pip 9.0.1 from /usr/lib/python3/dist-packages (python 3.5)</code> <code>&gt;&gt;&gt; import site; site.getsitepackages()</code> <code>['/usr/local/lib/python3.6/site-packages']</code></span>
<span class="comment-copy">Yep, your pip3 and python binaries are mismatched. How and why do you have two versions of Python 3 installed? You should uninstall both versions of Python 3 and re-install one or the other. Please update your post with information about how you installed these two versions of Python so I can help you figure out how to uninstall them.</span>
<span class="comment-copy">I don't remember exactly but I think Python 3.6 was built in dist and Python 3.5 I've installed by myself. I think so, because I read that the built-in versions do not have pip</span>
<span class="comment-copy">It is quite possible on Linux systems, and not problematic, to have multiple versions of Python installed. I currently have versions from 3.2 up to 3.6 on my main Debian machine. This is handy for testing compatibility of code that I write.</span>
<span class="comment-copy">@LawrenceD'Oliveiro Sure, and if you know what you're doing and need python 3.5 alongside 3.6 (<i>and have a strategy for managing inevitable $PATH and $PYTHONPATH conflicts</i>) that's fine. The OP clearly <b>does not</b> need 3.5 and 3.6 side by side.</span>
<span class="comment-copy"><code>pip3 -V pip 9.0.1 from /usr/lib/python3/dist-packages (python 3.5) </code> <code>python3.6 $(which pip3) --version</code> <code>Traceback (most recent call last):</code> <code>File "/usr/bin/pip3", line 9, in &lt;module&gt;</code> <code>from pip import main</code> <code>ModuleNotFoundError: No module named 'pip' </code></span>
<span class="comment-copy"><code>$which -a python3.6   bash: -a: command not found </code></span>
<span class="comment-copy"><code>which -a</code> works on macOS and Linux. Which OS are you using?</span>
<span class="comment-copy">As I wrote in the post - Kali Linux</span>
<span class="comment-copy">But <code>which</code> without the <code>-a</code> works?</span>
<span class="comment-copy">Oh, sorry, it's my fault, I just wrote the wrong command. <code>which -a python3.6</code> <code>/usr/local/bin/python3.6 /usr/bin/python3.6 </code></span>
