<div class="post-text" itemprop="text">
<p>In Python 3.6, the base64.b64encode() requires a bytes-like object, not 'str'</p>
<p>What is an example of a bytes-like object as opposed to a normal string?</p>
</div>
<div class="post-text" itemprop="text">
<p>Anything that logically stores a sequence of bytes qualifies. That includes the actual <code>bytes</code> type, <code>bytearray</code>, <code>mmap.mmap</code>, <code>array.array('B')</code>, etc. <code>str</code> in Python 3 is a text type; the characters aren't stored in a specified encoding, so you can't use them as raw binary data directly; they must be <code>encode</code>-ed explicitly with a specific encoding.</p>
<p>For the technical definition, see the <a href="https://docs.python.org/3/glossary.html#term-bytes-like-object" rel="nofollow noreferrer">Python 3 glossary</a>:</p>
<blockquote>
<p>An object that supports the Buffer Protocol and can export a C-contiguous buffer. This includes all <code>bytes</code>, <code>bytearray</code>, and <code>array.array</code> objects, as well as many common <code>memoryview</code> objects. Bytes-like objects can be used for various operations that work with binary data; these include compression, saving to a binary file, and sending over a socket.</p>
<p>Some operations need the binary data to be mutable. The documentation often refers to these as “read-write bytes-like objects”. Example mutable buffer objects include <code>bytearray</code> and a <code>memoryview</code> of a <code>bytearray</code>. Other operations require the binary data to be stored in immutable objects (“read-only bytes-like objects”); examples of these include <code>bytes</code> and a <code>memoryview</code> of a <code>bytes</code> object.</p>
</blockquote>
</div>
<span class="comment-copy">It is worth mentioning that the string could be converted to bytes</span>
<span class="comment-copy">@YaroslavSurzhikov: Added a note on that.</span>
<span class="comment-copy">@ShadowRanger So, for example, if I was to use a json string in base64.b64encode(), how would I change the string to a bytes-like object?</span>
<span class="comment-copy">@RayAntebioni: Typically JSON is represented as UTF-8, so you'd pass <code>jsonstring.encode('utf-8')</code>.</span>
