<div class="post-text" itemprop="text">
<p>i'm new to python. 
I have a list of four values.<br/>
I need to choose random values from this list 32 times.<br/>
However, I need that each value be chosen exactly 8 times. </p>
<p>so far I used this:</p>
<pre><code>import random
my_list=['a','b','c','d']
for i in range(1,33):
    selection=random.choice(my_list)
    print("{} selection: {}".format(i,selection))
</code></pre>
<p>This works - but how do I get it to give me each value exactly 8 times?</p>
<p>Thanks for helping.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would build a list with the required elements in it, then shuffle it.</p>
<pre><code>import random
my_list = ['a', 'b', 'c', 'd'] * 8
random.shuffle(my_list)
</code></pre>
<p>Now my_list contains 32 elements in random order, with each unique element appearing eight times.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can first multiply your list 8 times</p>
<pre><code>&gt;&gt;&gt; result = my_list*8
</code></pre>
<p>Then <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer"><code>random.shuffle</code></a> that list and <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join</code></a> it.</p>
<pre><code>&gt;&gt;&gt; random.shuffle(result)
&gt;&gt;&gt; print(''.join(result))
aaabdddbcdbcbabadcccddabbacbaccd
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In order to ensure that each value is selected at 8 times for each element in your list you're going to need a counter for each element. You'll need to keep track of how many times each element has been selected. </p>
<p>Every time that choice is letter is randomly selected increment its unique counter by 1. When you run your random selection again you'll need to check if that value has been selected 8 times already. If it has toss that selection and run the random selection again. Then you'll need to check and see if its randomly returned result has been selected 8 times already.</p>
</div>
<div class="post-text" itemprop="text">
<p>Write a nested for loop, in which the outer for loop runs 8 times, and the inner for loop runs 4 times for the list of numbers.  then in the list remove the value each time the for loop runs.</p>
<pre><code>for i in range(1,8):
    my_list = ['a','b','c','d']
    for j in range(1,4):
        rand = randint(1,(5-j))
        print(rand)
        my_list.remove([rand])
</code></pre>
<p>this is how I would do it, may not be the most efficient method, but  you get the idea.    </p>
</div>
<div class="post-text" itemprop="text">
<p>Create copies of each element with the multiply operator and then use <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer">random.shuffle</a> to randomise the list elements:</p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; timesToSelectValue=8
&gt;&gt;&gt; my_list=['a','b','c','d']
&gt;&gt;&gt; new_list=my_list*timesToSelectValue
&gt;&gt;&gt; random.shuffle(new_list)
&gt;&gt;&gt; print(new_list)
['d', 'b', 'd', 'a', 'c', 'b', 'b', 'a', 'b', 'd', 'd', 'b', 'c', 'b', 'a', 'b', 'c', 'd', 'd', 'c', 'a', 'a', 'b', 'c', 'a', 'c', 'd', 'c', 'd', 'c', 'a', 'a']
</code></pre>
<p><code>new_list</code> is now in a random order and contains exactly 8 of each element in <code>my_list</code>:</p>
<pre><code>&gt;&gt;&gt; for i in my_list:
...     print("count {}={}".format(i,new_list.count(i)))
...
count a=8
count b=8
count c=8
count d=8
</code></pre>
</div>
<span class="comment-copy">What do you mean to have a value chosen exactly 8 times? Can you show us what your expected output would be?</span>
<span class="comment-copy">Concatenate the list to itself 8 times and then shuffle it.</span>
<span class="comment-copy">You need a random permutation of a list containing all of these values (4x8). so create this list and <a href="https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle" rel="nofollow noreferrer">randomly  shuffle</a> it (apparently python has it implemented for you...).</span>
<span class="comment-copy">You've really over-complicated this task. Have a look at the other answers :)</span>
<span class="comment-copy">Yeah I've been doing so much C coding lately that it is hard to remember how amazing Python can be.</span>
<span class="comment-copy">Move over to the C++ dark side, we have <a href="http://en.cppreference.com/w/cpp/algorithm/random_shuffle" rel="nofollow noreferrer"><code>std::random_shuffle</code></a> and all kinds of nifty things in <code>&lt;algorithm&gt;</code></span>
<span class="comment-copy">@CoryKramer Good point :) <code>sort</code> was originally used to demonstrate <code>new_list</code> had exactly 8 copies of each <code>my_list</code> element</span>
