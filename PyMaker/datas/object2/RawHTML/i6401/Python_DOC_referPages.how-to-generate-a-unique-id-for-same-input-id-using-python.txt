<div class="post-text" itemprop="text">
<p>I have a list of ids and I want to display a fake id for each id in my list using Python.</p>
<p>I used the uuid1() but when there is a duplicated id in my list the program stop and don't generate the same random id for same input id.</p>
<pre><code> print uuid.uuid1(data['user']['id']).int&gt;&gt;64
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could just hash your id :</p>
<pre><code>import hashlib
id = 12
hashlib.sha256(str(id).encode()).hexdigest() # with python2.x you don't need to encode()
# =&gt; '6b51d431df5d7f141cbececcf79edf3dd861c3b4069f0b11661a3eefacbba918'
</code></pre>
<p>You'll have to store the correspondance somewhere though, because there is no way to retrieve the id from a hash.</p>
</div>
<div class="post-text" itemprop="text">
<p>from <a href="https://docs.python.org/3/library/uuid.html#uuid.uuid1" rel="nofollow noreferrer">python uuid doc</a>, uuid1 is dependent on current time.</p>
<p>You could use <a href="https://docs.python.org/3/library/uuid.html#uuid.uuid3" rel="nofollow noreferrer">uuid3</a> to have a reproducible uuid for the same input, by reusing the same namespace:</p>
<pre><code>namespace = uuid.uuid4()
...
print uuid.uuid3(namespace, "1")
</code></pre>
</div>
<span class="comment-copy">It doesn't work for me. uuid4() is even worse it doesn't generate anything.</span>
<span class="comment-copy">What is the specific purpose of <code>.int&gt;&gt;64</code> ?</span>
<span class="comment-copy">it generate an integer id and size less than 64 bits.</span>
<span class="comment-copy">Thank you for your help. This solution worked for me but it's too long. Do you know how to shorten or convert to integer?</span>
<span class="comment-copy">you could use md5 instead of sha256, md5 are only 32 chars long. Check this : <a href="https://en.wikipedia.org/wiki/List_of_hash_functions" rel="nofollow noreferrer">en.wikipedia.org/wiki/List_of_hash_functions</a></span>
<span class="comment-copy">Thank you @Lo√Øc, it's perfect now !</span>
