<div class="post-text" itemprop="text">
<p>I have Four files, </p>
<ul>
<li>Main.py</li>
<li>A.py</li>
<li>B.py</li>
<li>Log_System </li>
</ul>
<p>i am using main to use functions of A.py and B.py, so now i have to log all the information when ever i call them.</p>
<p>so i wrote a script called log_system to create log handler for each script file such as A.py, B.py </p>
<pre><code>import logging

def fetchLogger(name="None") :
    logger = logging.getLogger(__name__)
    logger.setLevel(logging.DEBUG)

    if (name == "None"):
        #create File for Log
        handler = logging.FileHandler('./engine_log/Generic.log')
        handler.setLevel(logging.DEBUG)
        #log format 
        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
        handler.setFormatter(formatter)

        #adding the handler to Logging System
        logger.addHandler(handler)
    else: 
        #create File for Log
        handler = logging.FileHandler('./engine_log/'+str(name))
        handler.setLevel(logging.DEBUG)
        #log format 
        formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
        handler.setFormatter(formatter)
        #adding the handler to Logging System
        logger.addHandler(handler)
    return logger
</code></pre>
<p>so if i want to use logging in script file A.py, i would write these line: </p>
<pre><code>import log_system 
"""Log System Building """
file_name =  'A.py'
logger = log_system.fetchLogger(file_name)

def hello():
    try:
        logger.info("excuting Hello")
    except: 
        logger.debug("something went wrong in hello")
</code></pre>
<p>but my log files </p>
<pre><code>2017-10-18 14:59:28,695 - log_system - INFO - A.py-excuting Hello
2017-10-18 14:59:28,695 - log_system - INFO - A.py-excuting Hello
2017-10-18 14:59:28,695 - log_system - INFO - A.py-excuting Hello
2017-10-18 14:59:28,695 - log_system - INFO - A.py-excuting Hello
2017-10-18 14:59:28,695 - log_system - INFO - A.py-excuting Hello
</code></pre>
<p><strong>it is repeating the log many times.... 
so what should i do ??</strong></p>
<p><strong>solution</strong> </p>
<pre><code>logger = logging.getLogger(name)

if logger.hasHandlers(): 
    logger.handlers = []

logger.setLevel(logging.DEBUG)

#create File for Log
handler = logging.FileHandler('./engine_log/'+str(name))
handler.setLevel(logging.DEBUG)
#log format 
formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
handler.setFormatter(formatter)
#adding the handler to Logging System
logger.addHandler(handler)

return logger
</code></pre>
<p>this is how i changed my log_system code, so i just emptied the Handler list if i had created an log handler already so that it does not create duplicate records.</p>
</div>
<div class="post-text" itemprop="text">
<p>Every time <code>fetch_logger</code> is called it adds a new <code>FileHandler</code> to the logger.  Each <code>FileHandler</code> writes to the log file, resulting in the repeating output in the file.</p>
<p>One solution is to call the logger's <a href="https://docs.python.org/3/library/logging.html#logging.Logger.hasHandlers" rel="nofollow noreferrer">hasHandlers</a> method.  This will return True if any handlers have been configured on the logger, and then you can delete them.</p>
<pre><code>def fetchLogger(name="None") :
    logger = logging.getLogger(__name__)
    if logger.hasHandlers():
        # Logger is already configured, remove all handlers
        logger.handlers = []
    # Configure the logger as before.
    ...
</code></pre>
</div>
<span class="comment-copy">This solution worked thank you.</span>
