<div class="post-text" itemprop="text">
<p>I am trying to delete all the <strong>first</strong> element of a list that are equals among themselves, but I found my code ugly. </p>
<p>Here an example: <code>my_list = [1,1,1,9,9,2]</code> become <code>my_list = [1,9,9,2]</code></p>
<pre><code>for spot_prec, spot in zip(my_list, my_list[1:]):
    if spot_prec == spot:
        del spot_prec
    else:
        break
</code></pre>
<p>How to compact it? I heard about generator expression, but I have a problem to include my <code>else break</code> statement.</p>
</div>
<div class="post-text" itemprop="text">
<p>After clarification of OP, seems what is needed is something like:</p>
<pre><code>for ii, element in enumerate(my_list):
    if element == my_list[0]:
       continue
    else:
       break
new_list = my_list[ii-1:]
</code></pre>
<p>Also, using itertools <a href="https://docs.python.org/2/library/itertools.html#itertools.dropwhile" rel="nofollow noreferrer">dropwhile</a>, we can concatenate element 0 and the result of dropping any element at the beginning that is equal to the first element:</p>
<pre><code>new_list = [my_list[0]] + list(dropwhile(lambda x: x == my_list[0], my_list))
</code></pre>
</div>
<span class="comment-copy">Looks like you're looking for <code>unique_justseen</code> found in the <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow noreferrer"><code>itertools</code> recipes</a>.</span>
<span class="comment-copy">What are you trying to do exactly - not sure why you're looping here...? And I don't think that code is doing what you think it is either...</span>
<span class="comment-copy">Can you include example input and desired output?</span>
<span class="comment-copy">I don't want to check only the first and second element, here an example : <code>my_list = [1,1,1,9,9,2]</code> become <code>my_list = [1,9,9,2]</code></span>
<span class="comment-copy">You can then do it in several ways, I have changed my answer to include a pair of examples, I prefer the first one, since it's more obvious.</span>
