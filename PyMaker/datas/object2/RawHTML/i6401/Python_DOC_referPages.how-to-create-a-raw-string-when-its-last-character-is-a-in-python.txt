<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/647769/why-cant-pythons-raw-string-literals-end-with-a-single-backslash">Why can't Python's raw string literals end with a single backslash?</a>
<span class="question-originals-answer-count">
                    12 answers
                </span>
</li>
</ul>
</div>
<p>As we all know,we can create a string like this:</p>
<pre><code>str1 = r"\abc\test"
</code></pre>
<p>But if I want put the <code>\</code> in the end of a string like:</p>
<pre><code>str2 = r"\abc\test\"
</code></pre>
<p>A syntax error occurs !
I have found an answer,but it's in <code>JavaScript</code>.
<a href="https://stackoverflow.com/questions/42604680/string-raw-when-last-character-is">`String.raw` when last character is `\`</a>
So,How to deal this in <code>python</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can concat another normal string:</p>
<pre><code>&gt;&gt;&gt; r'\abc\test' + '\\'
'\\abc\\test\\'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>duplicated <a href="https://stackoverflow.com/questions/647769/why-cant-pythons-raw-string-literals-end-with-a-single-backslash">Why can't Python's raw string literals end with a single backslash?</a></p>
<p><a href="https://docs.python.org/3/reference/lexical_analysis.html" rel="nofollow noreferrer">https://docs.python.org/3/reference/lexical_analysis.html</a></p>
<blockquote>
<p>Specifically, a raw literal cannot end in a single backslash (since the backslash would escape the following quote character). Note also that a single backslash followed by a newline is interpreted as those two characters as part of the literal, not as a line continuation.</p>
</blockquote>
</div>
<span class="comment-copy">escape the <code>'\'</code> with the escape character which is <code>'\'</code>. so it will look like this <code>'\\'</code></span>
<span class="comment-copy">@Ev.Kounis Then you'll have 2 backslashes at the end of your string.</span>
<span class="comment-copy">Interestingly enough, the updated duplicate helps explain this raw string behaviour.</span>
<span class="comment-copy">Append a throwaway character, then slice it out <code>r'\dontcare'[0]</code></span>
