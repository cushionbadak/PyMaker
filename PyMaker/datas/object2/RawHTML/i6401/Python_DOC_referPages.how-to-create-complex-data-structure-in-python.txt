<div class="post-text" itemprop="text">
<p>I would like to create my own custom complex data structure in python. Below is the format of the same. </p>
<pre><code>DownloadInfoIndication () { 
    dsmccMessageHeader () { 
        protocolDiscriminator                   8 bits
        messageId                               16 bits
        transactionId                           32 bits
        adaptationLength                        8 bits
        messageLength                           16 bits
        if (adaptation length &gt; 0) {    
            dsmccAdaptationHeader ()            adaptationLength
        }   
    }   
    downloadId                                  32 bits
    windowSize                                  8 bits (0x00)
    tCDownloadWindow                            32 bits (0x00)
    tCDownloadScenario                          32 bits
    numberOfModules                             16 bits
    for (i = 0; i &lt; numberOfModules; i++) { 
        moduleId                                16 bits
        moduleSize                              32 bits
        moduleVersion                           8 bits
        moduleInfoLength                        8 bits
        for (j = 0; j &lt; moduleInfoLength; j++) {    
            moduleInfoByte                      moduleInfoLength
        }   
    }   
    privateDataLength                           16 bits
    DescriptorCount                             8 bits
    for (k = 0; k &lt; DescriptorCount; k++) { 
        tag                                     8 bits
        length                                  8 bits
        data                                    length
    }   
}
</code></pre>
<p>I tried exploring struct module but I couldn't get any example with similar format. Could anyone please help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Not entirely sure what is your usecase, but at first glance it looks like it could be handled by using OOP (Object Oriented Programming). A simple class would be sufficient.</p>
<p>Have a look at Python doc: <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/classes.html</a>.</p>
</div>
<span class="comment-copy">Can you explain how to interpret that information, or are we supposed to guess?</span>
<span class="comment-copy">Have you tried using a class?</span>
<span class="comment-copy">Hello @PM2Ring, I would to define a data structure in which will have variables protocolDiscriminator, messageId, transactionId, adaptationLength, messageLength etc. Then depending of the value of adaptationLength, I will have another variable dsmccAdaptationHeader whose size would be equal to the variable adaptationLength. If the value of adaptationLength is 0 then i dont need this variable. Similarly as you can see in the I have few for loops which mean the number of variable in the for loop are dynamic and depends on another values. I hope my explanation makes some sense.</span>
<span class="comment-copy">You need to add the explanation into your question, not these coments. Do you need this Python data structure to represent a C-style structure, eg to interface with hardware, or a DLL library?</span>
<span class="comment-copy">@AmitChouksey And what will you do with these objects? Will you pass them to some low-level programs which expect this exact structure at bit level?</span>
<span class="comment-copy">Perhaps, but I suspect that the OP needs something stricter than a simple class composed of standard Python types, especially if that data structure is needed to represent binary data exactly. So he'll probably need to use the <code>struct</code> module, perhaps <code>array</code> or Numpy, and possibly <code>ctypes</code>.</span>
<span class="comment-copy">Yes kind of. Basically the number of variables within the data structure would itself be variable and this number would be equal to value another variable existing within this data structure. Size of variable could also be dynamic.</span>
