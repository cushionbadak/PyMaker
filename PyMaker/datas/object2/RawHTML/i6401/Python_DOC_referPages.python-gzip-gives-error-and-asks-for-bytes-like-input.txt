<div class="post-text" itemprop="text">
<p>I'm unable to get this to work</p>
<pre><code>import gzip
content = "Lots of content here"
f = gzip.open('file.txt.gz', 'a', 9)
f.write(content)
f.close()
</code></pre>
<p>I get output:</p>
<pre><code>============== RESTART: C:/Users/Public/Documents/Trial_vr06.py ==============
Traceback (most recent call last):
  File "C:/Users/Public/Documents/Trial_vr06.py", line 4, in &lt;module&gt;
    f.write(content)
  File "C:\Users\SONID\AppData\Local\Programs\Python\Python36\lib\gzip.py", line 260, in write
    data = memoryview(data)
TypeError: memoryview: a bytes-like object is required, not 'str'
</code></pre>
<p>This was linked in an answer <a href="https://stackoverflow.com/questions/18097107/python-gzip-appending-to-file-on-the-fly">Python Gzip - Appending to file on the fly</a> to <a href="https://stackoverflow.com/questions/46707020/is-it-possible-to-compress-program-output-within-python-to-reduce-output-files?noredirect=1#comment80361232_46707020">Is it possible to compress program output within python to reduce output file's size?</a></p>
<p>I've tried integer data but no effect. What is the issue here</p>
</div>
<div class="post-text" itemprop="text">
<p>by default <code>gzip</code> streams are <em>binary</em> (<a href="https://stackoverflow.com/questions/42013083/python-3-gzip-open-and-modes">Python 3: gzip.open() and modes</a>).</p>
<p>No problem in Python 2, but Python 3 makes a difference between binary &amp; text streams.</p>
<p>So either encode your string (or use <code>b</code> prefix if it's a literal like in your example, not always possible)</p>
<pre><code>f.write(content.encode("ascii"))
</code></pre>
<p>or maybe better for text only: open the <code>gzip</code> stream as <em>text</em>:</p>
<pre><code>f = gzip.open('file.txt.gz', 'at', 9)
</code></pre>
<p>note that append mode on a <code>gzip</code> file works is not that efficient (<a href="https://stackoverflow.com/questions/18097107/python-gzip-appending-to-file-on-the-fly">Python Gzip - Appending to file on the fly</a>)</p>
</div>
<div class="post-text" itemprop="text">
<p>In order to compress your string, it must be a binary value. In order to do that simply put a "b" in front of your string. This will tell the interpreter to read this as the binary value and not the string value.</p>
<p><code>content = b"Lots of content here"</code></p>
<p><a href="https://docs.python.org/3/library/gzip.html" rel="nofollow noreferrer">https://docs.python.org/3/library/gzip.html</a></p>
</div>
<span class="comment-copy">Thanks. Is this a change only for Py3.x?</span>
<span class="comment-copy">yeah, see my edit</span>
<span class="comment-copy">Thanks for the answer. Could it cause some changes when I later read this data from the output file a program?</span>
<span class="comment-copy">All you'll need to do is set the flag as "rb" or some other form denoting binary and you'll be set without any issues.</span>
