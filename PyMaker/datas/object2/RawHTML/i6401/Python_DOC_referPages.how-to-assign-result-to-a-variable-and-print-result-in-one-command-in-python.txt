<div class="post-text" itemprop="text">
<p>In <code>R</code>, when you assign something to a variable, you can wrap your code in brackets to also print the result: </p>
<pre><code>&gt; a&lt;-1+2
&gt; a
3

&gt;(a&lt;-1+2)
3
</code></pre>
<p>Is there an equivalent feature in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>No. You can't mix statements and expressions in the same "command".</p>
<p>You can, however, use <code>;</code> to have both on the same "line":</p>
<pre><code>a = 1 ; print(a)
# 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is no <em>single statement</em> which allows to that.</p>
<p>First we have <a href="https://docs.python.org/2/reference/simple_stmts.html#grammar-token-assignment_stmt" rel="nofollow noreferrer">assignment statements</a>. Which allow to, well, make assignments.</p>
<p>And then you have either a <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer"><code>print</code> <strong>function</strong></a> (for Python 3.x) or a <a href="https://docs.python.org/2/reference/simple_stmts.html#grammar-token-print_stmt" rel="nofollow noreferrer"><code>print</code> <strong>statement</strong></a> (for Python 2.x). But neither of them cannot be mixed with the aforementioned assignemnt statement.</p>
<p>So no, you cannot do that in a single statement. You can, of couse, cheat that into one line by using <code>;</code> but that is something not very readable which I would not recommend.</p>
<hr/>
<h3>Bonun non-aswering rambling</h3>
<p>From a readability point of view, assigning and printing are two very different things which should not be mixed.</p>
<p>Moreover, if you are (for instance) using a logging library instead of direct <code>print</code> usage, then the "single statement" you are looking for would become useless. In fact, I think that that is a rationale behind moving <code>print</code> from statement to function.</p>
<p>So, you don't have a single statement for assign-and-print and, I will add, that kind of statement doesn't seem a good idea in the Python language.</p>
</div>
<span class="comment-copy">This only works in R because <code>(</code> and <code>&lt;-</code> are actually functions. Both have return values, but <code>&lt;-</code> returns invisibly.</span>
