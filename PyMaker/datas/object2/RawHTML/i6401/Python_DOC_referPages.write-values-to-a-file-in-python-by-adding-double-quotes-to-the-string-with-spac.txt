<div class="post-text" itemprop="text">
<p>I am trying to write the values of below list in a txt file , in a specific way </p>
<pre><code>valList = ['1','Age',' Address has spaces','employee','98363','hobbies has space in it ']
</code></pre>
<p><strong>sample.txt</strong></p>
<pre><code>1,Age,"Address has spaces",employee,98363,"hobbies has space in it "
</code></pre>
<p>Here if you see valList is a heterogeneous list , my only intention is write the values which had spaces in it surrounded by double quotes, rest all values should be written as it is .
So far I have tried :</p>
<pre><code>valList = ['1','Age',' Address has spaces','employee','98363','hobbies has space in it ']
# Output = 1,Age,"Address has spaces",employee,98363,"hobbies has space in it "
valstr = ",".join(valList)
with open('sample.txt','wb') as file:
    file.write(valstr)
    file.write('\n' + " \"" + valList[2] + "\" ") 
</code></pre>
<p>Using  <strong>file.write('\n' + " \"" + valList[2] + "\" ")</strong> line I am able to write a single value with quotes , 
but I need a generic way to write values with spaces in it for the given list .</p>
<p>Any help would be highly appreciated . </p>
</div>
<div class="post-text" itemprop="text">
<p>You have <em>CSV data</em>. Use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code> module</a> and it'll automatically use quoting where needed:</p>
<pre><code>import csv
valList = ['1', 'Age', ' Address has spaces', 'employee', '98363', 'hobbies has space in it ']
with open('sample.txt', 'wb') as file:
    writer = csv.writer(file)
    writer.writerow(valList)
</code></pre>
<p>This will quote values <em>as needed</em>; when there is a comma in the field value, or a newline, for example. This doesn't quite fit your exact requirements but a compliant CSV reader will be able to get the exact same values from the file again when reading.</p>
<p>If you <em>MUST</em> have quotes on columns with spaces, you can disable the automatic quoting and add the quotes manually:</p>
<pre><code>import csv
valList = ['1','Age',' Address has spaces','employee','98363','hobbies has space in it ']
with open('sample.txt', 'wb') as file:
    writer = csv.writer(file, quoting=csv.QUOTE_NONE, quotechar='')
    writer.writerow(['"{}"'.format(v) if ' ' in v else v for v in valList])
</code></pre>
<p>The list comprehension wraps anything with a space in the value in double quotes. Note that because we disabled quoting here, values with <em>commas or newlines</em> in them will be refused by the <code>csv.writer()</code> as it now can't quote them.</p>
<p>Demo of both methods:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; import csv
&gt;&gt;&gt; valList = ['1', 'Age', ' Address has spaces', 'employee', '98363', 'hobbies has space in it ']
&gt;&gt;&gt; writer = csv.writer(sys.stdout)
&gt;&gt;&gt; writer.writerow(valList)
1,Age, Address has spaces,employee,98363,hobbies has space in it
&gt;&gt;&gt; writer = csv.writer(sys.stdout, quoting=csv.QUOTE_NONE, quotechar='')
&gt;&gt;&gt; writer.writerow(['"{}"'.format(v) if ' ' in v else v for v in valList])
1,Age," Address has spaces",employee,98363,"hobbies has space in it "
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>valList = ['1','Age',' Address has spaces','employee','98363','hobbies has space in it ']

file = open('sample.txt', 'w')
for item in valList:
    if ' ' in item:
        file.write('"%s",' % item)
    else:
        file.write("%s," % item)
</code></pre>
<p>Output</p>
<pre><code>1,Age," Address has spaces",employee,98363,"hobbies has space in it ",
</code></pre>
</div>
<span class="comment-copy">Thanks for the reply Martijn , but unfortunately 1st answer will work only if string has a comma in it , and the 2nd solution has a  error '_csv.Error: sequence expected'  . Could you please check once again ,</span>
<span class="comment-copy">@csharpcoder: I updated the second option to use a list comprehension, I forgot the Python 2 CSV writer doesn't like iterators.</span>
<span class="comment-copy">Still I am getting an error in the second solution : _csv.Error: need to escape, but no escapechar set</span>
<span class="comment-copy">@csharpcoder: ah, yes, lets disable the escape character too. Just a sec.</span>
<span class="comment-copy">@csharpcoder: done, and tested.</span>
