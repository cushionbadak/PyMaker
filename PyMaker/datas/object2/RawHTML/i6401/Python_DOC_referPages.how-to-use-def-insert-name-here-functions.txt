<div class="post-text" itemprop="text">
<p>I'm new to python and had a question about to to use more functions in a code besides def main():</p>
<p>My code below works, but I am trying to add new def's to their respective areas. </p>
<p>So like a new def called (def calcPay():), to where the hours enter are calculated (regPay, overtimePay, and total) as 3 separate items.
 &amp;
Also add a new def called (def displayOutput():), the function would receive all three of the values from (overtimePay, regPay, and totalPay) and print the message below.</p>
<p>If someone could explain to me how to use new functions besides main, that would be greatly appreciated.</p>
<p>Thanks, here is my code:</p>
<pre><code>def main():

    try:
        hoursWorked = float(input("How many hours did you work? "))


        if hoursWorked &gt; 40:
                overtimePay = (hoursWorked - 40) * 15
                regPay = 40 *10
                totalPay =( overtimePay + regPay)

        else:
            regPay = hoursWorked * 10
            overtimePay = 0
            totalPay = (regPay + overtimePay)


        print("You earned",'${:,.2f}'.format(regPay),"in regular pay",'${:,.2f}'.format(overtimePay),
              "in overtime for a total of",'${:,.2f}'.format(totalPay))
    except:
        print("Sorry, that wasn't a valid number. Ending program")


main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can declare your functions outside of the main function declaration and then use them in the main function (or inside of other functions in the main function).</p>
<p>So you could do something like:</p>
<pre><code>def calcPay(hours):
    # Does logic
    return [400, 30, 430]

def displayOutput(regPay, overtimePay, totalPay):
    # Prints formatted string

def main():
    hoursWorked = float(input("How many hours did you work? "))
    pay = calcPay(hoursWorked)
    displayOutput(pay[0], pay[1], pay[2])

main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have a look at these similar questions:</p>
<ol>
<li><p><a href="https://stackoverflow.com/questions/19130958/what-does-it-mean-to-call-a-function-in-python">What does it mean to call a function?</a></p></li>
<li><p><a href="https://stackoverflow.com/questions/12722767/how-to-correctly-define-a-function">How to correctly define a function?</a></p></li>
<li><p><a href="https://stackoverflow.com/questions/32409802/basic-explanation-of-python-functions">Basic explanation of Python functions?</a></p></li>
</ol>
<p>There's nothing special about the function named <code>main</code>. You can name functions whatever you want.</p>
<p>When you "call" a function you're just jumping from one block of code to another. When the function returns it goes back to the line that called it.</p>
<pre><code>def something():
    print('something')

def other():
    print('else')

def a_value():
    return 100

something()
other()
x = a_value()
print(x)

# ~~~~~ output
something
else
100
</code></pre>
<hr/>
<p>In your example a good use of a function would be to calculate the employee's pay.</p>
<pre><code>def total_pay(hours_worked, hourly_rate, overtime_after=40):
    base_pay = min(overtime_after, hours_worked) * hourly_rate
    overtime_pay = max(0, hours_worked - overtime_after) * (hourly_rate * 1.5)
    return base_pay + overtime_pay
</code></pre>
<p>This function allows us to define the three things that determine a worker's pay.  The <code>base_pay</code> will be, at most, the number of hours before overtime is applied. The <code>overtime_pay</code> will be from 0 to "some other limit" that's not defined here. Overtime is given time and a half (<code>1.5</code>).</p>
</div>
<span class="comment-copy">There is nothing special about a function called main. Just define a function with the name you want, write its arguments and then the body of the function. Just like you did with <code>main()</code>. It's not clear to me what you're struggling with.</span>
<span class="comment-copy">If you are new to Python, please <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">read the official tutorial</a> or check out <a href="https://sopython.com/wiki/What_tutorial_should_I_read%3F" rel="nofollow noreferrer">another tutorial</a>. What you are asking is very basic language knowledge, making this question is far too broad.</span>
