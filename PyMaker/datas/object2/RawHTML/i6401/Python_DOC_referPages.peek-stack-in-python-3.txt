<div class="post-text" itemprop="text">
<p>Question: Implement peek(stack) that returns, but doesn't remove, the top element from a stack. Return None if list is empty. </p>
<p>I tried many times but did not successfully get it, anyone can help? </p>
<p>My attempt:</p>
<pre><code>def peek_stack(stack):
    if stack == []:
        return None
    else:
        s= stack.copy()
        return s.pop(0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you need to use your way to solve this, please use <code>return s.pop()</code> rather than <code>return s.pop(0)</code>, because <code>s.pop()</code> will pop up the last element, but <code>s.pop(0)</code> will pop up the first element...</p>
<p>And by the way, it's recommend just implement it like this(it can avoid copy your stack, and improve performance)</p>
<pre><code>def peek_stack(stack):
    if stack == []:
        return None
    else:
        return stack[-1]    # this will get the last element of stack
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simpler one:</p>
<pre><code>def peek_stack(stack):
    if stack:
        return stack[-1]
</code></pre>
</div>
<span class="comment-copy">Your issue is that <code>s</code> is pointer to <code>stack</code> so it is a shallow copy not a deep copy which is what you want</span>
<span class="comment-copy">Why not just return <code>stack[0]</code>?</span>
<span class="comment-copy">Python <code>list</code>s can already be used as stacks.  <code>lst.append</code> is push, <code>lst[-1]</code> is peek, <code>lst.pop()</code> is... pop.  <a href="https://docs.python.org/3/tutorial/datastructures.html#using-lists-as-stacks" rel="nofollow noreferrer">Relevant docs</a></span>
<span class="comment-copy">In general, it would be better to raise an exception in the event of an empty stack.</span>
<span class="comment-copy">actually, you should use your_stack[-1], because you want to always return the last element in your stack without popping it</span>
