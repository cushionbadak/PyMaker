<div class="post-text" itemprop="text">
<p>I have refered to the following webpage :</p>
<p><a href="https://serverfault.com/questions/153983/sockets-found-by-lsof-but-not-by-netstat">https://serverfault.com/questions/153983/sockets-found-by-lsof-but-not-by-netstat</a></p>
<p>Using Python, I have encountered the same problem on SSL sockets:
    When I use <code>socket.close()</code>, the socket stays in CLOSE_WAIT state for an indefinite time
    when I use <code>socket.shutdown()</code>, lsof says "can't identify protocol"</p>
<p>The solution was to unwrap the SSL layer before closing:</p>
<pre><code>origsock = socket.unwrap()
origsock.close()
</code></pre>
<p>This closes the sockets properly in my app.</p>
<p>I like to ask what <code>unwrap()</code> does in python and how to do it in c ?!</p>
</div>
<div class="post-text" itemprop="text">
<p><code>unwrap</code> does a proper SSL shutdown. Such shutdown is similar to the FIN handshake at the end of the TCP connection, only at the SSL/TLS layer. How this shutdown is done in  C depends on the specific SSL/TLS stack you are using. But for OpenSSL the function you need to use is <a href="https://wiki.openssl.org/index.php/Manual:SSL_shutdown(3)" rel="nofollow noreferrer">SSL_shutdown</a>.</p>
</div>
<span class="comment-copy">Did you read the <a href="https://docs.python.org/3/library/ssl.html#ssl.SSLSocket.unwrap" rel="nofollow noreferrer">documentation</a>?</span>
<span class="comment-copy">How are you doing the SSL communication in C? It should have a method to perform the SSL shutdown, which you should do before closing the socket. That's what <code>unwrap()</code> does.</span>
