<div class="post-text" itemprop="text">
<p>I am parsing a big text file with the following format.</p>
<p>city is city1 in the west coast.</p>
<p>(some lines which are not relevant to me)</p>
<p>......</p>
<p>temperature is 15 degree in winter.</p>
<p>.....</p>
<p>daytime is 5 hours.</p>
<p>....</p>
<p>city is city2 in the west coast.</p>
<p>.... the pattern repeats.</p>
<p>I have used line.startswith() and made a outputline by concatenating the values like : </p>
<p>for line in file:</p>
<pre><code>if line.startswith('city'):

   line1 = line[8:12]

if line.startswith('temperature')

   line2 = line[:] and so on.
</code></pre>
<p>finally outputline = line1 +line2+line3</p>
<p>so it prints one outputline for each city block.</p>
<p>But I understand this is an ugly solution. What I want is a dictionary like this:
{city1:[15, 5], city2:[temperature, daytime] ....}</p>
<p>could you please help?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>dict = {}
if line.startswith('city'):
    current_city = line[8:12]
    dict[current_city] = []
</code></pre>
<p>From here you just need to <code>dict[current_city].append(temp)</code>, etc.</p>
<p>Loop through your input by identifying the pattern wherein the city category will repeat.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can loop over the lines of the text file looking for your cues, then add the values to a dictionary. Each city's values are stored in a list, so you'll end up with a list of city properties keyed by the city name.</p>
<pre><code>cities = {}
with open('file.txt', 'r') as f:
    city = None
    city_name = None

    for line in f:
        if line.startswith('city'):
            if city is not None:
                cities[city_name] = city
            city = []
            city_name = line[8:12]

        elif line.startswith('temperature'):
            city.append(line[:])

        elif line.startswith('daytime'):
            city.append(line[:])

        # etc.

# Print the resulting city properties
from pprint import pprint
pprint(cities)
</code></pre>
<p>You may prefer to use <code>str.split()</code> instead of slicing the values directly. You may also be interested in something like <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a>, which are much more powerful for parsing strings like this.</p>
</div>
<span class="comment-copy">Probably use <code>split()</code> to get the words into a list and then index that list. But you'll still have to check the first word of that list.</span>
<span class="comment-copy">I was able to parse a large text file with lot of complications based on this code. Thanks.</span>
<span class="comment-copy">Fair answer. It just struck me now, rereading the question, that the OP's requested structure is impossible. They also have <code>daytime</code> against the key so might need a tuple/list.</span>
<span class="comment-copy">Thanks Zac for the solution and editing. What I want a dictionary with cities as keys and each key is  mapped to a list of values of temperature, daytime etc.</span>
<span class="comment-copy">@ana I've updated my answer to produce a list instead of a dictionary.</span>
