<div class="post-text" itemprop="text">
<p>I have a list of objects. Could someone help return the object with the highest score? For example:</p>
<pre><code>objs = [
  {
    "name": "John",
    "score": 30
  },  
  {
    "name": "Josh",
    "score": 40
  },  
  {
    "name": "Jason",
    "score": 50
  },  
]
</code></pre>
<p>I need a method that will return the object with the highest score. In this case it should return</p>
<pre><code>  {
    "name": "Jason",
    "score": 50
  }
</code></pre>
<p>So far I tried:</p>
<p><code>print max(objs, key=attrgetter('score'))</code></p>
<p>but it gives me <code>AttributeError: 'dict' object has no attribute 'score'</code></p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<h1>Pandas</h1>
<p>You can convert the dictionary to a <code>dataframe</code>, find the index of the max <code>score</code>, extract the entry and convert that back to a dictionary.</p>
<p>This is probably faster when you have a large number of objects.</p>
<pre><code>df = pd.DataFrame.from_dict(objs)
df.iloc[df['score'].idxmax(),:].to_dict()
</code></pre>
<hr/>
<p><strong>Demo:</strong></p>
<pre><code>import pandas as pd
</code></pre>
<p>Reading to a dataframe</p>
<pre><code>df = pd.DataFrame.from_dict(objs)

print(df)
    name  score
0   John     30
1   Josh     40
2  Jason     50
</code></pre>
<p>Locating the index of the maximum <code>score</code></p>
<pre><code>df.iloc[df['score'].idxmax(),:]

name     Jason
score       50
Name: 2, dtype: object
</code></pre>
<p>Extracting the max and writing to a dictionary</p>
<pre><code>max_obj = df.iloc[df['score'].idxmax(),:].to_dict()
print(max_obj)
{'score': 50, 'name': 'Jason'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>operator.attrgetter()</code> is for attributes, e.g. <code>foo.bar</code>.</p>
<p>For item access you want <code>operator.itemgetter()</code> instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>max(objs, key=lambda x: x['score'])</p>
<p><a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer">The key argument specifies a one-argument ordering function like that used for list.sort().</a></p>
<p>The most compact way to provide the function is <a href="http://www.secnetix.de/olli/Python/lambda_functions.hawk" rel="nofollow noreferrer">with lambda</a>.</p>
<pre><code>&gt;&gt;&gt; max(objs, key=lambda x: x['score'])
{'name': 'Jason', 'score': 50}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not a Python expert and I guarantee there is a simpler and less verbose way to complete.</p>
<p>Though, it works for me:</p>
<pre><code>for x in objs:
    hiscore = 0
    count = 0
    if x.get('score') &gt; hiscore:
        hiscore = x.get('score')
        count += 1
print("Highest score is {data[score]} from player {data[name]}".format(data=x))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should do the job as well,</p>
<p><code>[a for a in objs if a["score"] == max([a["score"] for a in objs])]</code></p>
<p>Returns,</p>
<p><code>[{'score': 50, 'name': 'Jason'}]</code></p>
</div>
<span class="comment-copy">What problems did you run into when you tried to implement this yourself?</span>
<span class="comment-copy">i just updated my question w/ the results of my attempts @pvg</span>
<span class="comment-copy">Those aren't objects, they're dictionaries.</span>
<span class="comment-copy">Do many people actually use the <code>operator</code> module like this? I usually just see a <code>lambda</code>.</span>
