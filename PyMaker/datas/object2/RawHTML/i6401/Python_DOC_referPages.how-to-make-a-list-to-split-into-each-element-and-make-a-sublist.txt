<div class="post-text" itemprop="text">
<p>If I have this list, </p>
<pre><code>list01 = ['GAGGT','TCCGT','ABECF']
</code></pre>
<p>I want to make each element in the list to split, but still remain in the same box of list. 
Like this:</p>
<pre><code>listalt = [['G','A','G','G','T'],['T','C','C','G','T'],['A','B','E','C','F']] 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use this :</p>
<pre><code>final_list=[]
for item in list01:
    final_list.append(list(item))

print(final_list)
</code></pre>
<p>which is same as :</p>
<pre><code>print([list(item) for item in list01])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>listalt = [list(i) for i in list01]
</code></pre>
<p>This is a <a href="http://www.secnetix.de/olli/Python/list_comprehensions.hawk" rel="nofollow noreferrer">list comprehension</a>, and uses the fact that <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-list" rel="nofollow noreferrer"><code>list</code></a> can take an iterable (like a string) and turn it into a <code>list</code></p>
</div>
<span class="comment-copy"><code>listalt = [list(i) for i in list01]</code></span>
<span class="comment-copy">@PatrickHaugh that's the correct answer - make it an answer :)</span>
<span class="comment-copy">By the way if you want to type-cast string to <code>list</code> just for the sake of iteration, then you'll be amazed to know that the strings are also iterable (i.e. you can iterate them character by character)</span>
