<div class="post-text" itemprop="text">
<p>I have a python script that contains a Linux shell command. I'm using <code>subprocess.check_output</code>. My question is about the faster python method to execute a Linux shell command from python script like <code>os.system()</code>. </p>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>I like subprocess.Popen, but it has troubles (maybe it can't) to deal with '&gt;' ==&gt; unconvenient if you have a '&gt;' in the command line </li>
<li>otherwise subprocess.check_output</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>The better way:</p>
<pre><code>from subprocess import call
call('ls')
</code></pre>
<p>Please check:
<a href="https://docs.python.org/2/library/subprocess.html" rel="nofollow noreferrer">https://docs.python.org/2/library/subprocess.html</a></p>
</div>
<span class="comment-copy">Sorry, what’s your question? Which one is faster? <code>os.system</code> has the overhead of spawning a shell (and is easy to use unsafely besides), so it’s probably slower, but you can benchmark it.</span>
<span class="comment-copy">my question is what is the faster python method to execute a  linux shell command</span>
<span class="comment-copy">It’s <code>subprocess.check_output</code>, so just keep using that. And if you find yourself with two options like this… <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow noreferrer">time them</a>.</span>
<span class="comment-copy">ok thanks for help :)</span>
