<div class="post-text" itemprop="text">
<p>Is there a nice way to replicate the following code to use a single <code>with</code> statement:</p>
<pre><code>thing1 = Thing()
if two_things: 
    thing2 = Thing()

do_stuff(thing1)

if two_things:
    do_stuff(thing2)

thing1.close()
if two_things: 
    thing2.close()
</code></pre>
<p>I can use 2 separate with clauses, but this is pretty bad if a lot of the code is shared between the two cases. </p>
<pre><code>if two_things:
    with Thing() as thing1, Thing() as thing2:
        do_stuff(thing1)
        do_stuff(thing2)

else: 
    with Thing() as thing:
        do_stuff(thing1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/contextlib.html#supporting-a-variable-number-of-context-managers" rel="nofollow noreferrer">"Supporting a variable number of context managers"</a></p>
<blockquote>
<p>The primary use case for <code>ExitStack</code> is the one given in the class documentation: supporting a variable number of context managers and other cleanup operations in a single <code>with</code> statement. The variability may come from the number of context managers needed being driven by user input (such as opening a user specified collection of files), or from some of the context managers being optional:</p>
<pre><code>with ExitStack() as stack:
    for resource in resources:
        stack.enter_context(resource)
    if need_special_resource():
        special = acquire_special_resource()
        stack.callback(release_special_resource, special)
    # Perform operations that use the acquired resources
</code></pre>
</blockquote>
</div>
