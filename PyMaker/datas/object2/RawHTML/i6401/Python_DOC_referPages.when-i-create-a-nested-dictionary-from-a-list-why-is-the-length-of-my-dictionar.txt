<div class="post-text" itemprop="text">
<p>I created a script to process each item in a 3-column excel file exported as a .txt file into 3 lists (1 list for each column). There are 22 lines in the .txt file, including the header. With these 3 lists, I'm trying to create a nested dictionary where each column is a key, a key within a value, or a value within a value (ie: {Tag1:{Tag2:Tag3}...} for however many items there are in the lists. </p>
<p>When I zip these lists into a nested dictionary, it truncates the list and zips only 19 items into the dictionary, not 22. Could someone troubleshoot my code and see what the dictionary is doing to my list? </p>
<p>Here's the .txt file for reference:<a href="https://i.stack.imgur.com/ic9g4.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/ic9g4.png"/></a></p>
<p>Here's my script:</p>
<pre><code>import glob
source_file = glob.glob('file_path/test.txt')[0]
time = []
code = []
identifier = []
data_set = {}


for line in open (source_file,'r'):
  line_split = line.split('\t')
  tag_3 = line_split[-1].replace('\n','')
  tag_2 = line_split[1]
  tag_1 = line_split[0]

  time.append(tag_3)
  code.append(tag_2)
  identifier.append(tag_1)

data_set = {a:{b:c} for a,b,c in zip(identifier, code, time)}
</code></pre>
<p>EDIT: here's a link to a downloadable version to the file: <a href="https://drive.google.com/file/d/0B2s43FKt5BZgQldULXVOR0RBeTg/view?usp=sharing" rel="nofollow noreferrer">https://drive.google.com/file/d/0B2s43FKt5BZgQldULXVOR0RBeTg/view?usp=sharing</a></p>
<p>EDIT 2: This should be the desired output:</p>
<pre><code>data_set = {
'Tag1':{'Tag2':'Tag3'},
'0.1M':{'20':'10'},
'0.1MCD':{'2':'1'},
'0.25M':{'17':'1'},
'0.25MC':{'18':'1'},
'0.5MCN':{'16':'1'},
'0.MCD8':{'15':'1'},
'10':{'36':'5'},
'1029':{'75':'17'},
'1029A':{'22':'15'},
'1029B':{'49':'18'},
'1029BCD':{'23':'15'},
'1029BCDA':{'27':'18'},
'109B8N':{'63':'10'},
'1193D4M':{'51':'16'},
'1193D4N':{'2':'11'},
'1193D8M':{'17':'16'},
'11938N':{'25':'12'},
'1193CD4M':{'53':'16'},
'1193CD4N':{'83':'13'},
'118M':{'20':'16'},
'1193BCN':{'16':'7'},
</code></pre>
<p>}</p>
<p>EDIT 3: It turns out the dictionary truncates the value if there are duplicate values in the lists. Is there anyway to avoid this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>s = [b for b in [i.strip('\n').split()  for i in open('file.txt')] if b]
final_data = {a:{b:c} for a, b, c in s}
</code></pre>
<p>Output:</p>
<pre><code>{'1029BCDA': {'27': '18'}, '1029BCD': {'23': '15'}, '0.25M': {'17': '1'}, '118M': {'20': '16'}, '0.1M': {'20': '10'}, '11934D4N': {'83': '13'}, '0.5MCD8': {'15': '1'}, '1193D8M': {'17': '16'}, '1193CD4M': {'53': '16'}, '109B8N': {'63': '10'}, '10': {'36': '5'}, '1193D4M': {'51': '16'}, '1193D4N': {'2': '11'}, '0.1MCD': {'2': '1'}, '1193BCN': {'16': '7'}, '0.25MC': {'18': '1'}, '11938N': {'25': '12'}, '0.5MCN': {'16': '1'}, 'Tag1': {'Tag2': 'Tag3'}, '1029': {'75': '17'}, '1029A': {'22': '15'}, '1029B': {'49': '18'}}
</code></pre>
<p>Edit: using a <code>collections.defaultdict</code> for correct handling of duplicate values:</p>
<pre><code>from collections import defaultdict
d = defaultdict(list)
for a, b, c in s:
   d[a].append({b:c})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Dictionary can't have duplicate keys. What you can do is to define dictionary to hold a list of values. In your case change {Tag1:{Tag2:Tag3}} to be {Tag1:[{Tag2:Tag3}]}</p>
</div>
<div class="post-text" itemprop="text">
<p>What you want is called a “bag”. Try the <a href="https://docs.python.org/3/library/collections.html#counter-objects" rel="nofollow noreferrer">collections.Counter</a> class.</p>
</div>
<span class="comment-copy">can you post the file in text so that people can debug?</span>
<span class="comment-copy">Why dont you create dict when reading file? Also dont redefine built-in <code>dict</code> name</span>
<span class="comment-copy">I'm receiving an error code that says "too many values to unpack" when I plug in your code</span>
<span class="comment-copy">@superasiantomtom95 please post your desired output from the file.</span>
<span class="comment-copy">@superasiantomtom95 Also, I made several changes, let me know how it works now.</span>
<span class="comment-copy">It still says that there are too many values to unpack (referring to the 2nd line of code you provided). Not sure what's wrong on my end</span>
<span class="comment-copy">Actually, if I run my normal script on the file, it works fine. However, the moment I have duplicate values in the tag1 column, that's when the problem arises. Python seems to override the duplicate values. Is there anyway to prevent this?</span>
