<div class="post-text" itemprop="text">
<p>I have a csv file that has data looks similar to this:</p>
<pre><code>Year     Age
2001    58
2006    52
2006    12
2001    50
2012    59
2017    46
</code></pre>
<p>So I want to extract these two rows into two different list. </p>
<pre><code>with open('age.csv', 'r') as files:
        next(files) # skip header

        for row in file_path:
            years = row[0]

return years, average_age
</code></pre>
<p>But this will only give me 20, 20, 20, something that I didn't want it to show. </p>
<p>So that I can have like:</p>
<pre><code>years = [2001, 2006, 2006, 2001, blabla]
</code></pre>
<p>However, for age, I am planning to get the average age for each year. But I don't know how in this case. </p>
</div>
<div class="post-text" itemprop="text">
<p>You have opened the file, and are reading it line by line.  When you reference <code>row[0]</code> and <code>row[1]</code>, you are referencing the first and second character of each line.  In this case, it happens to be <code>2</code> and <code>0</code> as part of the year.</p>
<p>You need to take it one more step and interpret the file as a CSV file, rather than just a series of lines.  Reading the documentation of <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">Python's core CSV library</a> should help.  Meanwhile, here's a code snippet from there which may jump start your process:</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; with open('eggs.csv', newline='') as csvfile:
...     spamreader = csv.reader(csvfile, delimiter=' ', quotechar='|')
...     for row in spamreader:
...         print(', '.join(row))
</code></pre>
<p>Further, with your implementation, it looks like you are iterating over the entire file, constantly reading the first and second characters, and finally returning <em>just</em> the last line.  That looks like a possible error.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to split and strip the string.</p>
<pre><code>with open('age.csv', 'r') as f:
        next(f) # skip header

        list_year = []
        list_age = []
        for row in f:
            year, age = (s.strip() for s in row.split(','))
            list_year.append(year)
            list_age.append(age)
        return (list_year, list_age)
</code></pre>
</div>
<span class="comment-copy">You need to split your row at commas  first: <code>row=row.split(',')</code></span>
<span class="comment-copy">Or use <code>csv</code>, since it was designed for handling csv files.</span>
<span class="comment-copy">In any case, you get only the last line with this code, unless you append <code>row[0]</code> and <code>row[1]</code> to a <code>list</code>.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/q/11059390/937153">parsing a tab-separated file in Python</a></span>
<span class="comment-copy">Have you tried <code>Pandas</code>?</span>
<span class="comment-copy">Thanks it helped a lot, but I also want to know if it is possible to have the age as the average age of each year.</span>
