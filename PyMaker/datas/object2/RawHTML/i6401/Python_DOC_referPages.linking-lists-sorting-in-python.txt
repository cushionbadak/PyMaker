<div class="post-text" itemprop="text">
<p>Here's an example of what I want (Python 3.6):</p>
<pre><code>List1= [1,2,3,4,5] #needed order
List2=[5,4,3,2,1] #inputted order.  
List3=[25,20,15,10,5] #order inputed linked with list2
</code></pre>
<p>Linked with <code>List3</code> in the same order</p>
<p>Expected output when <code>List2</code> is changed in order of <code>List1</code> or in order smallest to largest. <code>List3</code> would change too.</p>
<p>Desired output:</p>
<pre><code>List2=[1,2,3,4,5] #list change to correct order
List3=[5,10,15,20,25] #list stayed in correct position linked with list2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for the argsort functionality. In python, one way to achieve this would be using <code>sorted</code> + <code>enumerate</code>:</p>
<pre><code>&gt;&gt;&gt; [List3[x] for x, _ in sorted(enumerate(List2), key=lambda x: x[1])]
[5, 10, 15, 20, 25]
</code></pre>
<hr/>
<p>With <code>numpy</code>, you'd be able to do this with:</p>
<pre><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; np.array(List3)[np.argsort(List2)]
array([ 5, 10, 15, 20, 25])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is another approach of doing it in pure Python:</p>
<p>You zip the two lists, and then sort by first(default) element.</p>
<pre><code>In [18]: List2=[5,4,3,2,1]

In [19]: List3=[25,20,15,10,5]

In [20]: [b for _, b in sorted(zip(List2, List3))]
Out[20]: [5, 10, 15, 20, 25]
</code></pre>
<p>If you wanted to sort by 2nd element you would do:</p>
<pre><code>result = [b for _, b in sorted(zip(List2, List3), key=lambda x: x[1])]
</code></pre>
</div>
<span class="comment-copy">You're looking for argsort functionality.</span>
<span class="comment-copy">Is there any links or tutorial pages you have for this ? Or a example program?</span>
<span class="comment-copy"><code>argsort</code> is part of the <code>numpy</code> package.</span>
<span class="comment-copy">Is numpy built in ? To python</span>
<span class="comment-copy">@GraphicsLab, you would benefit greatly by reading the python docs, and understanding many of <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">the functions in the standard library</a>.  Functions like <code>max</code>, <code>min</code>, <code>sorted</code>, <code>zip</code>, have very practical applications that you can use to combine into all sorts of things.  Read up on itertools and functools as well to get some ideas.</span>
<span class="comment-copy">Hi is there any way of doing this without downloading and install a package ?</span>
<span class="comment-copy">@GraphicsLab The first technique does not require any packages.</span>
<span class="comment-copy">Have you got an example of that please?</span>
<span class="comment-copy">@GraphicsLab It's in my answer dude. <code>[List3[x] for x, _ in sorted(enumerate(List2), key=lambda x: x[1])]</code></span>
<span class="comment-copy">Sorry just realised you already put one</span>
<span class="comment-copy">I will try this whatâ€™s the bits with in [20]</span>
<span class="comment-copy">@GraphicsLab, oh, I am using <code>ipython</code> interactive shell.</span>
<span class="comment-copy">Okay mate so I just forget the first bits and just read after :</span>
<span class="comment-copy">Beat me to it.  I think the sorted(zip ... solution is more elegant. :)</span>
<span class="comment-copy">@GraphicsLab, Yeah, <code>Out [20]:</code> is part of the shell, ignore it.</span>
