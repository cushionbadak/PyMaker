<div class="post-text" itemprop="text">
<p>I'm trying to mock a function. When I try to mock the function <code>core.use_cases.add_owner_to_place</code> the mock doesn't work. It keeps printing "Ouch".</p>
<p>I've tried to test <code>mocked_add_owner_to_place.called</code> and it returns False.</p>
<p>Does anyone know why it keeps using the real function even if I mock it?</p>
<p><strong>views.py:</strong></p>
<pre><code>from core.use_cases import add_owner_to_place

class CreatePlace(LoginRequiredMixin, FormView):
template_name = 'place/create_place.html'
form_class = PlaceForm
success_url = reverse_lazy('place_list')

def form_valid(self, form):
    place = form.save()
    add_owner_to_place(place, self.request.user)
    return super(CreatePlace, self).form_valid(form)
</code></pre>
<p><strong>tests.py:</strong></p>
<pre><code>from unittest.mock import patch, Mock

@patch('core.use_cases.add_owner_to_place')
@patch('core.forms.PlaceForm.is_valid')
@patch('core.forms.PlaceForm.save')
def test_save_should_be_called(self, mocked_save, mocked_is_valid, mocked_add_owner_to_place):
    self.client.post(reverse('place_create'), data={})
    self.assertTrue(mocked_save.called)
</code></pre>
<p><strong>uses_cases.py:</strong></p>
<pre><code>def add_owner_to_place(place, user):
    print('Ouch')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So, searching around and looking some codes on github, I found out that I need to mock from the <code>view</code> even if the function belongs to the <code>use_cases</code> module.</p>
<p>So my code now is:</p>
<p><strong>tests.py</strong></p>
<pre><code>from unittest.mock import patch, Mock

@patch('core.views.add_owner_to_place')
@patch('core.forms.PlaceForm.is_valid')
@patch('core.forms.PlaceForm.save')
def test_save_should_be_called(self, mocked_save, mocked_is_valid, mocked_add_owner_to_place):
    self.client.post(reverse('place_create'), data={})
    self.assertTrue(mocked_save.called)
</code></pre>
<p>I know that this works, but now I need to search why it works. I'll explain it when I figure it out.</p>
</div>
<span class="comment-copy">The reason for this is explained fairly thoroughly in the <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch" rel="nofollow noreferrer">documentation</a></span>
