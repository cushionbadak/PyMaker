<div class="post-text" itemprop="text">
<p>I'm trying to Solve a little probleme just to otpimize some units production in a game, where Alpha is a variety coefficient (it sets how the variable can differ from each other) :</p>
<pre><code>import numpy as np
import scipy.optimize as opti
alpha = 0.05
C = np.array([-1,-1,-1,-1,-15,-3,-3,-4,0,0,0,0,0,0])
B = np.array([1600,0,0,0,0,0,0,0,0,0,0,0,0,0])
MatriceC = np.array([\
np.array([14-((1-alpha)*8),7-((1-alpha)*8),7-((1-alpha)*25),18-((1- 
alpha)*12),30-((1-alpha)*30),40-((1-alpha)*40),18-((1-alpha)*1),76-((1- 
alpha)*16),-1,0,0,0,0,0]),\
np.array([14-((1+alpha)*8),7-((1+alpha)*8),7-((1+alpha)*25),18- 
((1+alpha)*12),30-((1+alpha)*30),40-((1+alpha)*40),18-((1+alpha)*1),76- 
((1+alpha)*16),0,-1,0,0,0,0])*(-1),\
np.array([14-((1-alpha)*30),7-((1-alpha)*2),7-((1-alpha)*13),18-((1- 
alpha)*7),30-((1-alpha)*30),40-((1-alpha)*40),18-((1-alpha)*24),76-((1- 
alpha)*56),0,0,-1,0,0,0]),\
np.array([14-((1+alpha)*30),7-((1+alpha)*2),7-((1+alpha)*13),18- 
((1+alpha)*7),30-((1+alpha)*30),40-((1+alpha)*40),18-((1+alpha)*24),76- 
((1+alpha)*56),0,0,0,-1,0,0])*(-1),\
np.array([8-((1-alpha)*30),8-((1-alpha)*2),25-((1-alpha)*13),12-((1- 
alpha)*7),30-((1-alpha)*30),40-((1-alpha)*40),1-((1-alpha)*24),16-((1- 
alpha)*56),0,0,0,0,-1,0]),\
np.array([8-((1+alpha)*30),8-((1+alpha)*2),25-((1+alpha)*13),12- 
((1+alpha)*7),30-((1+alpha)*30),40-((1+alpha)*40),1-((1+alpha)*24),16- 
((1+alpha)*56),0,0,0,0,0,-1])*(-1)])
#print(help(opti.linprog))
print(np.shape(MatriceC))
print(np.shape(B))
opti.linprog(C,A_eq=MatriceC,b_eq=B) #This causes the error...
</code></pre>
<p>And I get as an output : </p>
<pre><code>(6, 14)
(14,)
ValueError: Invalid input for linprog with method = 'simplex'.  The number 
of rows in A_eq must be equal to the number of values in b_eq
</code></pre>
<p>Considering the shape of the matrix I get. I don't understand what I'm doing wrong.</p>
<p>PS : </p>
<p>I have tried adding </p>
<pre><code>MatriceC = MatriceC.T
</code></pre>
<p>Just before the linprog call and it stills outpout the same error. It did change the (6, 14) shape into (14, 6) (well it's logical)</p>
</div>
<div class="post-text" itemprop="text">
<p>Transponse your <code>MatriceC</code> with <code>MatriceC.T</code> before passing it to <code>linprog</code></p>
<p><a href="https://docs.scipy.org/doc/scipy-0.15.1/reference/generated/scipy.optimize.linprog.html" rel="nofollow noreferrer"><code>linprog</code></a> according to their doc:</p>
<blockquote>
<p>Minimize: c^T * x</p>
<p>Subject to: A_ub * x &lt;= b_ub
      A_eq * x == b_eq </p>
</blockquote>
<p>In order to satisfy the above equation, the matrices' dimension should conform to each other. Read about <a href="https://en.wikipedia.org/wiki/Matrix_multiplication" rel="nofollow noreferrer">Matrix Multiplication</a>.</p>
</div>
<span class="comment-copy"><code>A_eq.shape[0]</code> must be equal to <code>b_eq.shape[0]</code>, which is <code>False</code> in your case.</span>
<span class="comment-copy">I have added MatriceC = MatriceC.T and now MatriceC.shape[0] = 14 and B.shape[0] = 14 but linprog outpout the same error</span>
<span class="comment-copy">Are you sure you're passing the correct parameters in the same way their doc say?</span>
<span class="comment-copy">The documentation of the function is : scipy.optimize.linprog(c, A_ub=None, b_ub=None, A_eq=None, b_eq=None, bounds=None, method='simplex', callback=None, options=None).       So if I use = opti.linprog(C,A_eq = MatriceC, b_eq = B) It shouldn't cause problem I think</span>
<span class="comment-copy">Yes, check the shape again before passing them and ensure that the matrices conform to each other.</span>
<span class="comment-copy">I've found the problem, when I translated my problem in the standardized form, I added the same amount of new variable in my b vector. Thx for the help :)</span>
