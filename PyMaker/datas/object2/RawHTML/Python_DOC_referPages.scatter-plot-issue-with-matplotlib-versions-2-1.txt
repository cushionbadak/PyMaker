<div class="post-text" itemprop="text">
<p>We use matplotlib in our event viewer app to plot the data sets. 
I run the following code without problems with matplotlib versions &lt;2.1 as shown in this <a href="https://i.stack.imgur.com/qyK9X.png" rel="nofollow noreferrer">plot example</a>. We create plot objects in advance and fill with data later. This is significantly faster than clearing and recreating the collections over and over. We need to stick to this if we want to keep a reasonable reaction time.</p>
<pre><code>import numpy as np
from matplotlib import pyplot

fig = pyplot.figure()
ax = fig.add_axes((0.1, 0.1, 0.8, 0.8),autoscale_on=False)

#Empty data plot
points = ax.scatter([],[], color='r', zorder=2)
#ax properties
ax.set_xlim(-10, 10)
ax.set_ylim(5e-2, 5e3)
ax.set_yscale("log")

#Example data points
x_data = [-5, -3, 0, 3, 5]
y_data = [1, 10, 1000, 10, 1]
#Set data points
points.set_offsets(np.dstack((x_data, y_data)))

pyplot.show()
</code></pre>
<p>However, with matplotlib version above 2.1, it is broken and I cannot find the reason out. </p>
<p>I get the following error message:</p>
<pre><code>Exception in Tkinter callback
Traceback (most recent call last):
  File "/usr/lib/python2.7/lib-tk/Tkinter.py", line 1540, in __call__
    return self.func(*args)
  File "/usr/lib/python2.7/lib-tk/Tkinter.py", line 590, in callit
    func(*args)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_tkagg.py", line 323, in idle_draw
    self.draw()
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_tkagg.py", line 304, in draw
    FigureCanvasAgg.draw(self)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_agg.py", line 430, in draw
    self.figure.draw(self.renderer)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/figure.py", line 1295, in draw
    renderer, self, artists, self.suppressComposite)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/image.py", line 138, in _draw_list_compositing_images
    a.draw(renderer)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/axes/_base.py", line 2399, in draw
    mimage._draw_list_compositing_images(renderer, self, artists)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/image.py", line 138, in _draw_list_compositing_images
    a.draw(renderer)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/collections.py", line 845, in draw
    Collection.draw(self, renderer)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/collections.py", line 256, in draw
    transform, transOffset, offsets, paths = self._prepare_points()
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/collections.py", line 237, in _prepare_points
    offsets = transOffset.transform_non_affine(offsets)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/transforms.py", line 2457, in transform_non_affine
    return self._a.transform_non_affine(points)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/transforms.py", line 2244, in transform_non_affine
    y_points = y_points.reshape((len(y_points), 1))
ValueError: cannot reshape array of size 2 into shape (1,1)
Exception in Tkinter callback
Traceback (most recent call last):
  File "/usr/lib/python2.7/lib-tk/Tkinter.py", line 1540, in __call__
    return self.func(*args)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_tkagg.py", line 233, in resize
    self.show()
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_tkagg.py", line 304, in draw
    FigureCanvasAgg.draw(self)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_agg.py", line 430, in draw
    self.figure.draw(self.renderer)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/figure.py", line 1295, in draw
    renderer, self, artists, self.suppressComposite)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/image.py", line 138, in _draw_list_compositing_images
    a.draw(renderer)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/axes/_base.py", line 2399, in draw
    mimage._draw_list_compositing_images(renderer, self, artists)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/image.py", line 138, in _draw_list_compositing_images
    a.draw(renderer)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/collections.py", line 845, in draw
    Collection.draw(self, renderer)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/artist.py", line 55, in draw_wrapper
    return draw(artist, renderer, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/collections.py", line 256, in draw
    transform, transOffset, offsets, paths = self._prepare_points()
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/collections.py", line 237, in _prepare_points
    offsets = transOffset.transform_non_affine(offsets)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/transforms.py", line 2457, in transform_non_affine
    return self._a.transform_non_affine(points)
  File "/usr/local/lib/python2.7/dist-packages/matplotlib/transforms.py", line 2244, in transform_non_affine
    y_points = y_points.reshape((len(y_points), 1))
ValueError: cannot reshape array of size 2 into shape (1,1)
</code></pre>
<p>I believe the API of a few functions has changed and is now preventing the plotting.</p>
</div>
<div class="post-text" itemprop="text">
<p>To merge two 1D arrays columnwise to a 2D array, <code>numpy.dstack</code> may not be the best choice, independent of matplotlib versions.</p>
<p>You could use</p>
<pre><code>np.column_stack((x_data, y_data))
</code></pre>
<p>or just</p>
<pre><code>np.c_[x_data, y_data]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you print the shape of your dstacked arrays,</p>
<pre><code>print (np.dstack((x_data, y_data)).shape)
</code></pre>
<p>you get <code>(1, 5, 2)</code>. Things work fine in the <code>matplotlib versions =&gt; 2.1</code> if you just use the index <code>[0]</code> on the dstacked array which has a shape <code>(5, 2)</code>. I am using <code>matplotlib 2.2.2</code> and <code>python 3.6.5</code></p>
<hr/>
<p><strong>Working code</strong></p>
<pre><code>import numpy as np
from matplotlib import pyplot

fig = pyplot.figure()
ax = fig.add_axes((0.1, 0.1, 0.8, 0.8),autoscale_on=False)

#Empty data plot
points = ax.scatter([],[], color='r', zorder=2)
#ax properties
ax.set_xlim(-10, 10)
ax.set_ylim(5e-2, 5e3)
ax.set_yscale("log")

#Example data points
x_data = [-5, -3, 0, 3, 5]
y_data = [1, 10, 1000, 10, 1]
#Set data points
points.set_offsets(np.dstack((x_data, y_data))[0]) # &lt;--- Here [0]
pyplot.show()
</code></pre>
<p><a href="https://i.stack.imgur.com/DJbmF.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/DJbmF.png"/></a></p>
</div>
<span class="comment-copy">Thank you! Works fine!</span>
<span class="comment-copy">Another alternative way would be <code>np.vstack((x_data, y_data)).T</code></span>
<span class="comment-copy">Perfect! It works now. Thanks for the fast help!</span>
<span class="comment-copy">@MatthiasPlum: You are welcome. Glad to help</span>
