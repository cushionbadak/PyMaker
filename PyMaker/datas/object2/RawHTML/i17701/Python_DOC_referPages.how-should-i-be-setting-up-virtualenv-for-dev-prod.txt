<div class="post-text" itemprop="text">
<p>So I just realized that my python versions for production and development are different (3.3.1 and 3.3.3).  Do I have to install a specific version or is it enough to just copy over my virtualenv folder to production server?  Is it better to work on the most recent older version (the latest 3.2.x)? Kind of new to this stuff and would like some pointers on how to set things up for an easy transition from dev to prod.</p>
<p>Edit: I also have the fkrull/deadsnakes repo added to both my distros, but I have found that the lastest version found for 3.2.x differs across both when I run apt-get install python3.2.  How does this work?</p>
</div>
<div class="post-text" itemprop="text">
<p>Depends on the risk. If breaking production for 30 seconds will cost a million dollars, then it's probably worth developing and testing all code on the same version.  But if downtime costs you 1 cent per minute, don't waste your time.</p>
<p>Keep an eye on the what's new and trust yourself not to use the new features.  I wouldn't expect you'd be using anything in your python code that was in 3.3.3 but not 3.3.1.
<a href="http://docs.python.org/3/whatsnew/index.html" rel="nofollow">http://docs.python.org/3/whatsnew/index.html</a></p>
<p>YMMV: my current approach is to use the package manager of the distro to install Python and any python packages that have C dependancies/compiled code/PPAs. Read the documentation for your distro to install a non-default version of Python and PPAs.  Then I use <code>pip</code> to install the pure python modules.  I only use <code>virtualenv</code> on my development machine; not production. Why?</p>
<p>In production virtual machines are so cheap it isn't worth the headache of running two applications with different requirements on the same instance.</p>
</div>
<span class="comment-copy">So can I take it that I can be on a different python version in my virtualenvs and just freeze the packages from dev and move it over to production if any errors won't be costly?  Also, what's the proper way to get the same exact Python versions running? I mentioned the deadsnakes repo in my post, but that seems to get different versions based on your distro, so am I supposed to just find a package for it manually and install from there?</span>
