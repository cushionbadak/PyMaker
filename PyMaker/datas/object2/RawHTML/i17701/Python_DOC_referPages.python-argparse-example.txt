<div class="post-text" itemprop="text">
<p>I'm trying to learn argparse in order to use it in my program, the syntax should be like this:</p>
<pre><code>-a --aLong &lt;String&gt; &lt;String&gt;
-b --bLong &lt;String&gt; &lt;String&gt; &lt;Integer&gt;
-c --cLong &lt;String&gt;
-h --help
</code></pre>
<p>I have this code:</p>
<pre><code>#!/usr/bin/env python
#coding: utf-8

import argparse

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Lorem Ipsum')
    parser.add_argument('-a','--aLong', help='Lorem Ipsum', required=False)
    parser.add_argument('-b','--bLong', help='Lorem Ipsum', required=False)
    parser.add_argument('-c','--cLong', help='Lorem Ipsum', required=False)
    parser.add_argument('-h','--help', help='Lorem Ipsum', required=False)
    parser.parse_args()
</code></pre>
<p>The question is, I read in the official doc, saw YouTube videos, etc, but I couldn't understand how can I determine the number of "sub-arguments" of the "main-argument"?</p>
<p>Example: <code>myApp.py -b Foobar 9000</code>, how can I set that <code>-b</code> must have two "sub-arguments", and how can I get the values, <code>Foobar</code> and <code>9000</code>?</p>
<p>And another doubt, I know I can set an argument to be <code>required</code> or not, but I wanted to make my program only executes when <strong>at least one</strong> argument is passed, any of the four mentioned.</p>
<p>Maybe it's a stupid question, but sorry, I can't understand it, and hopefully there is someone here with "teacher powers" to explain it.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import argparse

# Use nargs to specify how many arguments an option should take.
ap = argparse.ArgumentParser()
ap.add_argument('-a', nargs=2)
ap.add_argument('-b', nargs=3)
ap.add_argument('-c', nargs=1)

# An illustration of how access the arguments.
opts = ap.parse_args('-a A1 A2 -b B1 B2 B3 -c C1'.split())

print(opts)
print(opts.a)
print(opts.b)
print(opts.c)

# To require that at least one option be supplied (-a, -b, or -c)
# you have to write your own logic. For example:
opts = ap.parse_args([])
if not any([opts.a, opts.b, opts.c]):
    ap.print_usage()
    quit()

print("This won't run.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The key to this is to define a required, mutually exclusive group.</p>
<pre><code>import argparse

# Use nargs to specify how many arguments an option should take.
ap = argparse.ArgumentParser()
group = ap.add_mutually_exclusive_group(required=True)
group.add_argument('-a', nargs=2)
group.add_argument('-b', nargs=3)
group.add_argument('-c', nargs=1)


# Grab the opts from argv
opts = ap.parse_args()

# This line will not be reached if none of a/b/c are specified.
# Usage/help will be printed instead.

print(opts)
print(opts.a)
print(opts.b)
print(opts.c)
</code></pre>
</div>
<span class="comment-copy">You should be able to achieve what you've mentioned using Argument Groups - <a href="http://docs.python.org/dev/library/argparse.html#argument-groups" rel="nofollow noreferrer">docs.python.org/dev/library/argparse.html#argument-groups</a>.</span>
<span class="comment-copy"><code>argument-groups</code> won't help.  They affect the <code>help</code> display, but don't affect parsing. Testing after parsing as FMc does is the way to ensure one of the 3 arguments is given.  Mutually exclusively groups can be used to prevent more than 1 of the group being used, but the OP wants 'at least one'.</span>
<span class="comment-copy">OP has <code>python-3.x</code> tag, but this answer is Python 2.</span>
<span class="comment-copy">Not quite there yet: in Python 3 <a href="http://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter</code></a> returns an iterator, not a list. You should write <code>if not any([opts.a, opts.b, opts.c]):</code> instead.</span>
<span class="comment-copy">Thanks, I got it now. Just a little doubt: I was trying to use something like this: <code>'-a', '--aLong'</code>, but if I do that, when I call <code>opts.a</code> it gives me an error - <code>AttributeError: 'Namespace' object has no attribute 'a'</code>, so I have to call <code>opts.aLong</code>, why?</span>
<span class="comment-copy">Add a dest argument <code>parser.add_argument('-a','--aLong', dest='a' ...)</code></span>
<span class="comment-copy">OP also wants <code>-b</code> to accept 2 strings and 1 integer.  <code>argparse</code> can't handle that directly.  A custom action could do that, but that's an advanced topic.</span>
<span class="comment-copy">Your required group means that exactly one of the 3 is required.  The OP wanted 'at least one'.</span>
