<div class="post-text" itemprop="text">
<p>I am trying to import Queue and I keep getting the following</p>
<pre><code>Traceback (most recent call last):
  File "threading.py", line 2, in &lt;module&gt;
    import Queue
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/Queue.py", line 5, in &lt;module&gt;
    import threading as _threading
  File "/Users/zaq/threading.py", line 10, in &lt;module&gt;
    queue = Queue.Queue()
AttributeError: 'module' object has no attribute 'Queue'
</code></pre>
<p>I am using the code in the link <a href="https://stackoverflow.com/questions/13481276/threading-in-python-using-queue">Threading in python using queue</a></p>
<p>Also, I can import and use Queue in the python interpreter. </p>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Name of my script was threading.py... Changed it and everthing works fine. Rookie mistake.</p>
</div>
<span class="comment-copy">Yeah I was about to add a comment suggesting you change the script name, strange that the error came from the <code>Queue.Queue()</code> line though, I would have expected it to fail the first time you tried to use the threading module.</span>
<span class="comment-copy">I agree. I think that the Queue.py was trying to import the script that I called threading.py instead of the actual threading script. Weird shit!</span>
<span class="comment-copy">Don't forget to accept your own answer so people will know this question is resolved.</span>
<span class="comment-copy">What's actually going on here is a circular import—<code>Queue</code> tries to <code>import threading</code>, which imports your module. Then your module tries to <code>import Queue</code> and use <code>Queue.Queue()</code>… but <code>Queue</code> is still in the middle of built imported, so it has no <code>Queue</code> member yet.</span>
<span class="comment-copy">In other words, there's tons of fun stuff to learn about the import process if you trace through this. But I wouldn't recommend doing that, because the 2.x import process is a poorly-documented mess; wait until you upgrade to 3.3 (or… don't wait, just upgrade now), then learn the cleaned-up and nicely-documented <a href="http://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">import system</a> instead.</span>
