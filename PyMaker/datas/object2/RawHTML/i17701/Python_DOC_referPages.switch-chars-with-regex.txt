<div class="post-text" itemprop="text">
<p>Say I have something like <code>s='abaabbab'</code>. Is it possible to change this to <code>s='babbaaba'</code> using regex? I mainly want to know if this is possible, not if it is reasonable.</p>
<p>I thought perhaps one of these would work (having previously imported <a href="http://docs.python.org/2/library/re.html" rel="nofollow noreferrer"><code>re</code></a>):</p>
<pre><code>s='ab'
re.sub('a|b',lambda x:['b','a'][x=='a'],s)
#or maybe
re.sub(r'a|b',lambda x:['b','a'][x=='b'],s)
</code></pre>
<p>But they just result in <code>'bb'</code>.</p>
<hr/>
<p>I know I could replace all <code>a</code>'s with <code>c</code>'s, then replace all <code>b</code>'s with <code>a</code>'s, then replace all <code>c</code>'s with <code>b</code>'s, but this seems so long.</p>
<p><a href="https://stackoverflow.com/a/3463853/1896169">gnibbler suggests this:</a></p>
<pre><code>from string import maketrans
trans_table = maketrans(".-a","-.A")
"foo-bar.".translate(trans_table)
</code></pre>
<p>But I doesn't seem to work in python 3.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Say I have something like s='abaabbab'. Is it possible to change this to s='babbaaba' using regex? I mainly want to know if this is possible, not if it is reasonable.</p>
</blockquote>
<p>Yes - but you should use the correct form of <code>str.translate</code> as pointed out by falsetru for this task...</p>
<pre><code>import re

s = 'abaabbab'
print re.sub('[ab]', lambda L: {'a': 'b', 'b': 'a'}[L.group()], s)
# babbaaba
</code></pre>
<p>How this is works is by looking for characters (those defined between the <code>[]</code>) and upon a match, calls the replacement function (here defined by a lambda) which looks for the suitable replacement character using a dictionary.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.x, you should pass a dictionary that map unicode ordinals to unicode characters. ( <a href="http://docs.python.org/3/library/stdtypes.html#str.translate" rel="nofollow"><code>str.translate</code> documentation</a>)</p>
<pre><code>&gt;&gt;&gt; s = 'abaabbab'
&gt;&gt;&gt; s.translate({ord('a'): 'b', ord('b'): 'a'})
'babbaaba'
</code></pre>
<h2>Why the re.sub code does not work?</h2>
<p>Because a argument passed to substitution function is not a string, but <a href="http://docs.python.org/3/library/re.html#match-objects" rel="nofollow">a match object</a>; Comparing a match object with a string produce <code>False</code> (<code>0</code>); the substitution returns the first item <code>b</code>.</p>
<p>Use <a href="http://docs.python.org/3/library/re.html#re.match.group" rel="nofollow"><code>group</code> method</a> to get a matched string.</p>
<pre><code>&gt;&gt;&gt; s = 'ab'
&gt;&gt;&gt; re.sub('[ab]', lambda x: ['b','a'][x.group() != 'a'], s)
'ba'
&gt;&gt;&gt; re.sub('[ab]', lambda x: ['a', 'b'][x.group() == 'a'], s)
'ba'
&gt;&gt;&gt; re.sub('[ab]', lambda x: 'ab'[x.group() == 'a'], s)
'ba'
</code></pre>
</div>
<span class="comment-copy">Regexes are useful for defining patterns and finding things that match those patterns. A character-replacement task like this doesn't seem suited for regexes.</span>
<span class="comment-copy">@user2357112 I'm mainly curious if it is possible</span>
<span class="comment-copy">You are just doing simple character replacements. A regex wouldn't be shorter, would be somewhat less understable and would be slower. There's nothing wrong with using translate here.</span>
<span class="comment-copy">@JonClements Okay; however, translate doesn't seem to work in python 3... (I copied that code, and I get an error)</span>
<span class="comment-copy">@Quincunx Then is your question actually "I've tried this - it doesn't work on Python 3" - or is it, I <i>really, really</i> want a regex... ? If the former - you've got your answer :)</span>
<span class="comment-copy">I already understand regexes, and now I'm liking python's way of dealing with regexes and uses a lot more than Java. I mean, you can even define a function to deal with the replacements for you.</span>
<span class="comment-copy">@Jon: I think it's a really bad idea to quote (parts of) the question in your answer.  One of the most important goals of this site is to maximize the signal-to-noise ratio, and quoted excerpts are almost pure noise.</span>
<span class="comment-copy">@AlanMoore In 1600+ answers I don't think I've even reached double digits of quoting parts of the OP. However, I felt it important in this case as I want to make it clear that the OP requested a regex (even though they're now aware they don't really need one). This will reduce potential noise from comments saying this isn't the best approach - they don't need to do this etc... - especially if the OP gets edited at some point.</span>
<span class="comment-copy">Ah, I must have been looking at the wrong documentation.</span>
<span class="comment-copy"><a href="http://docs.python.org/2/library/stdtypes.html#str.translate" rel="nofollow noreferrer"><code>str.translate</code></a> in Python 2.x is similar to <a href="http://docs.python.org/3/library/stdtypes.html#bytes.translate" rel="nofollow noreferrer"><code>bytes.translate</code></a> in Python 3.x.</span>
