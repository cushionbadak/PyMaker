<div class="post-text" itemprop="text">
<p>What would be a good way to determine the time stamp for a rounded time frame?  For example I pull a timestamp from a database of 1388898695 which translates to "2014-01-04 19:11:35".</p>
<p>Now lets say I want to find an earlier record that is even minutes in the past. So start with 2014-01-04 19:10:00.  How would I find out the number of seconds from the timestamp (in this case 95) and subtract it from 13388898695 so that I can search the database for the 19:10:00 timestamp?</p>
<p>I'm looking for a general method because I'll want to compute different time frames, like minutes by 5's or 15's.</p>
<hr/>
<p>Ok this isn't very pretty, but let's ignore year/month/day roll overs and just try to find the past even interval of 2 minutes.  So 19:53:12 would trigger a search for 19:52:00 (to 19:50:00).</p>
<pre><code>#(2014-01-04 19:53:12)
time1=1388901192

year=int(datetime.datetime.fromtimestamp(time1).strftime('%Y'))
month=int(datetime.datetime.fromtimestamp(time1).strftime('%m'))
day=int(datetime.datetime.fromtimestamp(time1).strftime('%d'))
hours=int(datetime.datetime.fromtimestamp(time1).strftime('%H'))
minutes=int(datetime.datetime.fromtimestamp(time1).strftime('%M'))
seconds=0

if minutes%2 == 0:
    minutes-=2
else:
    minutes-=1

timeString="%s-%s-%s %s:%s:00" % (year,month,day,hours,minutes)
newTime=time.mktime(time.strptime(timeString, '%Y-%m-%d %H:%M:%S'))

print newTime, time1
print datetime.datetime.fromtimestamp(newTime).strftime('%Y-%m-%d %H:%M:%S')
</code></pre>
<p>Produces the search time of
1388901120.0 or 2014-01-04 19:52:00</p>
<p>It seems like this is not a very clean way to do this.</p>
<hr/>
<p>Here's my generic solution using the method from Burhan Khalid:</p>
<pre><code># take timestamp, rewind to timeframe that provides the newest end point where a full interval
# 10:42:34 -&gt; 10:42:00 for interval=2 to fetch records 10:42:00 to 10:40:00
# 10:49:34 -&gt; 10:40:00 for interval=10 to fetch records 10:40:00 to 10:30:00
dt = datetime.datetime.fromtimestamp(ts)
if (dt.minute % interval) == 0:
    prev_ts = dt-datetime.timedelta(minutes=0,seconds=dt.second)
else:
    temp=round(dt.minute/interval)
    temp*=interval
    temp=dt.minute-temp
    prev_ts = dt-datetime.timedelta(minutes=temp,seconds=dt.second)
print "%s: %s -&gt; %s" % (interval, dt, prev_ts)
print time.mktime(prev_ts.timetuple())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is an example to get even minutes, it should get you started with your other cases:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; ts = 1388898695
&gt;&gt;&gt; dt = datetime.datetime.fromtimestamp(ts)
&gt;&gt;&gt; dt.hour,dt.minute,dt.second
(8, 11, 35)
&gt;&gt;&gt; next_ts = dt+datetime.timedelta(minutes=1,seconds=-dt.second)
&gt;&gt;&gt; next_ts.hour,next_ts.minute,next_ts.second
(8, 12, 0)
&gt;&gt;&gt; prev_ts = dt-datetime.timedelta(minutes=1,seconds=dt.second)
&gt;&gt;&gt; prev_ts.hour,prev_ts.minute,prev_ts.second
(8, 10, 0)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Check out <a href="http://docs.python.org/3/library/datetime.html#datetime.timedelta" rel="nofollow">http://docs.python.org/3/library/datetime.html#datetime.timedelta</a></p>
<pre><code>#!/usr/local/cpython-3.3/bin/python

import time
import datetime

def main():
    time0 = time.time()
    time.sleep(3)
    time1 = time.time()

    print(datetime.timedelta(seconds=(time1 - time0)))

main()
</code></pre>
</div>
<span class="comment-copy"><a href="http://docs.python.org/2/library/datetime.html" rel="nofollow noreferrer">docs.python.org/2/library/datetime.html</a></span>
<span class="comment-copy">@SethMMorton I would hope it would seem obvious that I'm using those functions but I'm having problems figuring out how to compute the desired even time interval based on the retrieved time stamp.</span>
<span class="comment-copy">I'm sorry, it wasn't obvious.  You didn't show any code, so I could have no idea what you were doing already.  Can you show a relevant snippet?</span>
<span class="comment-copy">@SethMMorton There isn't much to show because I'm stuck at how to reconstruct the timestamp and rebuild an offset setting the minutes or hours or seconds to something I desire based on the given timestamp.</span>
<span class="comment-copy">So how would I take an existing time stamp (time0) and extract the year,month,day,hours,minutes,seconds in order to compute time1 at a time interval I desire?</span>
