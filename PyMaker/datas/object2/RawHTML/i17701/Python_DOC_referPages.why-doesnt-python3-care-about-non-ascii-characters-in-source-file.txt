<div class="post-text" itemprop="text">
<p>Suppose I have a .py file with the following contents </p>
<pre><code>print('(ノಠ益ಠ)ノ彡┻━┻')
</code></pre>
<p>When called by python3 it prints the angry guy flipping a table, however on python2 we get <code>SyntaxError</code> and need to add a declaration line like <code># coding: utf-8</code> in the file to run it.  </p>
<p>My question is why doesn't python 3 care about non-ascii characters?  I don't see any description of that in <a href="http://www.python.org/dev/peps/pep-0263/" rel="nofollow">PEP 0263</a>.  How does the interpreter guess the encoding of the file correctly when I didn't specify that, where is the behaviour documented?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/3/whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit" rel="noreferrer">Python 3 uses <code>utf-8</code> as the default source code encoding</a>. </p>
<p>Python 2 <a href="http://docs.python.org/2/howto/unicode.html#encodings" rel="noreferrer">uses <code>ASCII</code> by default</a>, so unless you explicitly tell Python <code># -*- coding: utf-8 -*-</code> at the top of your file, it doesn't know how to handle character values above 127.</p>
</div>
<span class="comment-copy">Right.  <a href="http://www.python.org/dev/peps/pep-3120/" rel="nofollow noreferrer">python.org/dev/peps/pep-3120</a></span>
