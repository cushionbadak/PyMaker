<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/613183/how-do-i-sort-a-dictionary-by-value">How do I sort a dictionary by value?</a>
<span class="question-originals-answer-count">
                    42 answers
                </span>
</li>
</ul>
</div>
<p>I have the following data structure:</p>
<pre><code>[ 
    { some: thing9,
      key: 9,
    },
     { some: thing3,
      key: 3,
    },
    { some: thing2,
      key: 2,
    },
    { some: thing1,
      key: 1,
    }
]
</code></pre>
<p>How can I sort this array based on the key value of the dictionary so I get:</p>
<pre><code>[ 
    { some: thing1,
      key: 1,
    },
     { some: thing2,
      key: 2,
    },
    { some: thing3,
      key: 3,
    },
    { some: thing9,
      key: 9,
    }
]
</code></pre>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>sorted(data, key=operator.itemgetter('key'))
</code></pre>
<p>The <a href="http://docs.python.org/3/howto/sorting.html" rel="nofollow">Sorting HOWTO</a> explains this in more detail. But the basic idea is that all sort-related functions take a <code>key</code> argument, a callable that's applied to each value before comparing the values.</p>
<p>So, we want <code>key</code> to take one of the elements of your <code>list</code>, and return the thing you want to sort by. The elements are <code>dict</code>s, and you want to sort by their <code>key</code> item. The <a href="http://docs.python.org/3/library/operator.html" rel="nofollow"><code>itemgetter</code></a> function does exactly what you want. (If that function weren't available, you could use, e.g., <code>lambda item: item['key']</code> instead.)</p>
</div>
<div class="post-text" itemprop="text">
<p>If you prefer to use lambda expressions, this is also an suitable way of solving your problem:</p>
<pre><code>sorted(data, key=lambda x: x['key'])
</code></pre>
<p>So:</p>
<pre><code>from pprint import pprint

data = [
    { 'some': 'thing9',
      'key': 9,
    },
    { 'some': 'thing3',
      'key': 3,
    },
    { 'some': 'thing2',
      'key': 2,
    },
    { 'some': 'thing1',
      'key': 1,
    }
]

pprint(sorted(data, key=lambda x:x['key']))
</code></pre>
<p>outputs</p>
<pre><code>[{'key': 1, 'some': 'thing1'},
 {'key': 2, 'some': 'thing2'},
 {'key': 3, 'some': 'thing3'},
 {'key': 9, 'some': 'thing9'}]
</code></pre>
</div>
<span class="comment-copy">And <a href="http://stackoverflow.com/questions/18384570/sort-dict-by-sub-value-in-python?rq=1">Sort dict by sub-value in Python</a>, and various other dups. Although most of them are about sorting a <code>dict</code>'s items rather than sorting a <code>list</code>, basically the same answer applies without the <code>.items()</code> part.</span>
