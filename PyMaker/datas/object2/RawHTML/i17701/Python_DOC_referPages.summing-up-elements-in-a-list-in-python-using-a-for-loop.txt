<div class="post-text" itemprop="text">
<p>While working on a program that creates bars out of sets of numbers in a list, I found that adding up items in my list doesn't work. I thought the best way to do this is just to make a <code>for</code> loop.</p>
<p>Here's my list:</p>
<pre><code>phonelist = [[12,14,16,17,18],[16,23,54,64,32]]
</code></pre>
<p>And then I try to add this up with a <code>for</code> loop</p>
<pre><code>numphone = 0
for x in len(phonelist[0]):
    numphone = numphone + x
</code></pre>
<p>Yet I get this error:</p>
<blockquote>
<p>TypeError: 'int' object is not iterable</p>
</blockquote>
<p>What should I do?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; phonelist = [[12,14,16,17,18],[16,23,54,64,32]]
&gt;&gt;&gt; [sum(li) for li in phonelist]
[77, 189]
&gt;&gt;&gt; sum([sum(li) for li in phonelist])
266
</code></pre>
<p>or:  </p>
<pre><code>&gt;&gt;&gt; sum(sum(li) for li in phonelist)    # generator expression...
266
</code></pre>
<p>If you are trying to create individual categories, you can use a dict:</p>
<pre><code>data={'Bar {}'.format(i):sum(li) for i, li in enumerate(phonelist, 1)}
data['Total']=sum(data.values())

print data
{'Bar 2': 189, 'Bar 1': 77, 'Total': 266}
</code></pre>
<p>Then if you want to produce a simple bar graph:</p>
<pre><code>for bar in sorted(data.keys()):
    print '{}: {}'.format(bar, int(round(25.0*data[bar]/data['Total']))*'*')
</code></pre>
<p>Prints:</p>
<pre><code>Bar 1: *******
Bar 2: ******************
Total: *************************
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>len(phonelist[0])</code> is an int, so you can't loop over it. You can change that to</p>
<pre><code>for x in phonelist[0]:
</code></pre>
<p>This way <code>x</code> will take on each value of <code>phonelist[0]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>numphone = 0
for x in phonelist[0]:
    numphone = numphone + x
</code></pre>
<p>This should work. You iterate overt the list, not over the length of it, since the length is an integer and iterating over an integer doesn't make sense</p>
</div>
<div class="post-text" itemprop="text">
<p>The best solution to this is to use <a href="http://docs.python.org/3/library/functions.html#sum" rel="nofollow">the <code>sum()</code> built-in function</a>. One method, as given in other answers to this question, is to sum each sumlist, then sum those subtotals.</p>
<p>However, a better solution is to flatten the sublists - this is best achieved with <a href="http://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow"><code>itertools.chain.from_iterable()</code></a>.</p>
<pre><code>sum(itertools.chain.from_iterable(phonelist))
</code></pre>
<p>This is an optimal solution as it means that you do not have to perform a lot of separate sum operations, or create an intermediate list. It will also work lazily if your data is a lazy source, making your code more memory-efficient and spreading the processing load.</p>
</div>
<span class="comment-copy">Of course <a href="http://stackoverflow.com/a/20888941/1288">@dawg's answer</a> is a much more Pythonic method of doing what you're trying to do.</span>
