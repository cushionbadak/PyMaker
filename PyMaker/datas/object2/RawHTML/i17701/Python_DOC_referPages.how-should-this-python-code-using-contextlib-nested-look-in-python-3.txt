<div class="post-text" itemprop="text">
<pre><code>from contextlib import contextmanager, nested
...

@documented_contextmanager
def _setenv(variables):
    if callable(variables):
        variables = variables()
    clean_revert = variables.pop('clean_revert', False)
    previous = {}
    new = []
    for key, value in variables.iteritems():
        if key in state.env:
            previous[key] = state.env[key]
        else:
            new.append(key)
        state.env[key] = value
    try:
        yield
    finally:
        if clean_revert:
            for key, value in variables.iteritems():
                if key in state.env and value == state.env[key]:
                    if key in previous:
                        state.env[key] = previous[key]
                    else:
                        del state.env[key]
        else:
            state.env.update(previous)
            for key in new:
                del state.env[key]

def settings(*args, **kwargs):
    managers = list(args)
    if kwargs:
        managers.append(_setenv(kwargs))
    return nested(*managers)
</code></pre>
<p><a href="https://github.com/fabric/fabric/blob/master/fabric/context_managers.py" rel="nofollow">https://github.com/fabric/fabric/blob/master/fabric/context_managers.py</a></p>
<p>As there is no <code>nested</code> in Python 3 - I need some help in converting it.<br/>
<code>2to3</code> just prints a lot of <code>Generating grammar tables from ...</code> but nothing useful.<br/>
How should this code look in Python 3?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="http://docs.python.org/3/library/contextlib.html#contextlib.ExitStack" rel="nofollow"><code>contextlib.ExitStack</code></a> to emulate <code>return nested(*managers)</code>:</p>
<pre><code>from contextlib import ExitStack, contextmanager

@contextmanager
def settings(*args, **kwargs):
    # ... populate `managers`
    with ExitStack() as stack:
         yield tuple(stack.enter_context(cm) for cm in managers)
</code></pre>
</div>
<span class="comment-copy">You'd just use the <code>with manager1, manager2:</code> version of the statement directly instead of your wrapper function. <code>2to3</code> can probably only recognize the <code>with nested(manager1, manager2):</code> construct, not using <code>nested()</code> elsewhere.</span>
<span class="comment-copy">What context is this <code>settings</code> function used in? All it is is a wrapper around <code>nested</code> that throws away keyword arguments. It looks like it's meant to plug into a specific role defined by some other API.</span>
<span class="comment-copy">Needed to see this piece of code, thanks</span>
<span class="comment-copy">@Sergey: btw, <code>ExitStack</code> is available also in Python 2 in <a href="http://contextlib2.readthedocs.org/en/latest/#contextlib2.ExitStack" rel="nofollow noreferrer"><code>contextlib2</code></a> if you want to use the same source on Python 2 and 3.</span>
