<div class="post-text" itemprop="text">
<p>Say we have a python file with:</p>
<pre><code>class A(object):
    def say_hi(self):
        print('hi, I am A')


class B(object):
    def say_hi(self):
        print('hi, I am B')


class F(object):
    def __init__(self, name):
        self.name = name

    def create(self):
        return  ## ???


if __name__ == '__main__':
    f = F('B')
    b = f.create()
    b.say_hi()
</code></pre>
<p>And I want create instance of a class with its name. What the code in F.create() should be?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="http://docs.python.org/3/library/functions.html#globals" rel="nofollow"><code>globals</code></a>:</p>
<pre><code>&gt;&gt;&gt; class A(object):
...     def say_hi(self):
...         print('hi, I am A')
...
&gt;&gt;&gt; class B(object):
...     def say_hi(self):
...         print('hi, I am B')
...
&gt;&gt;&gt; class F(object):
...     def __init__(self, name):
...         self.name = name
...     def create(self):
...         return globals()[self.name]()
...
&gt;&gt;&gt;
&gt;&gt;&gt; f = F('B')
&gt;&gt;&gt; b = f.create()
&gt;&gt;&gt; b.say_hi()
hi, I am B
</code></pre>
</div>
<span class="comment-copy"><code>globals()[self.name]()</code> ?</span>
<span class="comment-copy">@thefourtheye well, If I pass 'A', I want a <code>A()</code> if 'B' then <code>B()</code>.</span>
<span class="comment-copy">@DSM 'cause I need create instances base on a config file in which the class name is given.</span>
<span class="comment-copy">@mitnk: ah, sorry.  I misread the problem.  I thought you were creating instances and binding them to a given name, but instead you're <i>accessing</i> objects.  That's perfectly sensible.</span>
<span class="comment-copy">Thanks. I always think it's sort of evil to use <code>globals</code> or <code>locals</code> in python. So it not evil at all (at least in the code here)?</span>
<span class="comment-copy">@mitnk, less evil than <code>eval</code>, <code>exec</code> ...</span>
<span class="comment-copy">@mitnk, If you want to restrict name to <code>A</code>, <code>B</code>, use something like <code>{'A': A, 'B': B}[self.name]()</code>.</span>
