<div class="post-text" itemprop="text">
<p>In a python program I am making, I want it to only take integers, and if it gets a string say "There has been an error in the system." instead of murmering sensless information the user will not understand</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <code>try-except</code> block to capture the error and use the <code>raise</code> statement to say the error message of your choice:</p>
<pre><code>try:
    a = int(input())
except:
    raise Exception('There has been an error in the system')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to use a <code>try</code> <code>except</code> block to catch the error - see the <a href="http://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow">documentation</a>. Then you could just <code>print</code> a message, and, if necessary, exit the program:</p>
<pre><code>try:
    value = int(input("Enter an integer: "))
except ValueError:
    print("There has been an error in the system.")
    input()    # To let the user see the error message
    # if you want to then exit the program
    import sys
    sys.exit(1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you do not want to add another indentation level by using a <code>try-except</code> block, you can change the handling of all errors by adding the following to the beginning of your code:</p>
<pre><code>import sys
def my_except_hook(exctype, value, traceback):
        print('There has been an error in the system')
sys.excepthook = my_except_hook
</code></pre>
<p>In case of an error, only your specified error message is printed out. In addition, this <strong>prevents the stack trace from being displayed</strong>.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>import</strong> ctypes
ctypes.windll.user32.MessageBoxW(None, u"CUSTOM MESSAGE", u"TITLE BAR", 0)</p>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/1319615/proper-way-to-declare-custom-exceptions-in-modern-python">Proper way to declare custom exceptions in modern Python?</a></span>
<span class="comment-copy">Isn't "There has been an error in the system." a good example of senseless information the user will not understand? :-)</span>
<span class="comment-copy">Could you please upvote and accept an answer?</span>
<span class="comment-copy">Your solution provides a meaningful error message, but will still display the stack trace. The stack trace might scare off users, since it's mostly irrelevant to them.</span>
