<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/509211/understanding-slice-notation">Understanding slice notation</a>
<span class="question-originals-answer-count">
                    31 answers
                </span>
</li>
</ul>
</div>
<p>I am trying to understand slicing. How does this slice work?</p>
<pre><code>&gt;&gt;&gt; a=['c','b']
&gt;&gt;&gt; a
['c', 'b']
&gt;&gt;&gt; a[-3:-1:3]
['c']
</code></pre>
<p>I have already read all the posts and cannot find an answer. As I understand it slice is supposed to be <code>[start:stop:step]</code>. But if I start at -3 after one step I am at 0.
How exactly does this work? Which indexes are printed? The ones in the range?</p>
</div>
<div class="post-text" itemprop="text">
<p>First note that <code>a[-3:-1]</code> is  <code>['c']</code>. 
<code>a[-3:-1]</code> is a slice containing all the elements in <code>[a[-3], a[-2]]</code>, (if they exist).</p>
<pre><code>&gt;&gt;&gt; a=['c','b']
&gt;&gt;&gt; a[-3:-1]
['c']
</code></pre>
<p><code>a[-3]</code> does not exist (it raises an IndexError), but <code>a[-2]</code> is <code>'c'</code>:</p>
<pre><code>&gt;&gt;&gt; a[-2]
'c'
</code></pre>
<p>That makes sense, since <code>a[-1]</code> is the last element, <code>'b'</code>. <code>a[-2]</code> is thus the penultimate element.</p>
<p>Finally,</p>
<pre><code>&gt;&gt;&gt; a[-3:-1:3]
['c']
</code></pre>
<p>since this is every third element in <code>a[-3:-1]</code>. Since there is only one element in <code>a[-3:-1]</code>, every third element is the same as the first and only element.</p>
<p>The exact rules governing slicing is given by <a href="http://docs.python.org/3/library/stdtypes.html#common-sequence-operations" rel="nofollow">Notes 3 and 5 of the docs section entitled "Common Sequence Operations"</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Think of the indexes as dividers right after an element. e.g.</p>
<p>Given list <code>['a', 'b', 'c']</code></p>
<p>Positive indexes (indexes in |n|): <code>['a'|0| 'b'|1| 'c'|2|]</code></p>
<p>Negative indexes (indexes in |n|), I'm gonna show the list in reverse so it's a bit more clear: <code>['c'|-1| 'b'|-2| 'a'|-3|]</code> or in the original direction (but think of it starting from the end) <code>[|-3|'a' |-2|'b' |-1|'c']</code></p>
<p>So in your example: <code>a=['c','b']</code> your negative indexes are <code>[|-2|'c' |-1|'b']</code> but when you're doing a range, Python doesn't complain when you pass an out of scope starting index of <code>-3</code>. In fact you can pass in any arbitrary indexes when you do a range and Python won't complain. Try for example <code>[-10:-5]</code>, but because in your case your range does contain <code>'c'</code>, that's all you get.</p>
</div>
<span class="comment-copy">Have you read the Python documentation on slicing? In the most basic case, it goes from <code>start</code> to <code>stop</code> in increments of <code>step</code>, excluding <code>stop</code>, but it gets a bit more complicated than that in some cases.</span>
<span class="comment-copy">Your problems appears to be with <code>start</code> and <code>stop</code>, not <code>step</code>. Negative start and stop indices count from the end (in a manner too complicated for me to reproduce faithfully in a comment).</span>
