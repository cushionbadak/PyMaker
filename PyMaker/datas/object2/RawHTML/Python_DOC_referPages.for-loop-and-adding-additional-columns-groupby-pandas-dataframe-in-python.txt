<div class="post-text" itemprop="text">
<p>below code is my original way.</p>
<pre><code>import pandas as pd
data = {'id':[1001,1001,1001,1001,1001,1001,1001,1001,1002,1002,1002,1002,1002,1002,1002,1002],
    'name':['Tom', 'Tom', 'Tom', 'Tom','Tom', 'Tom', 'Tom', 'Tom','Jack','Jack','Jack','Jack','Jack','Jack','Jack','Jack'],
    'team':['A','A', 'B', 'B', 'C','C', 'D', 'D','A','A', 'B', 'B', 'C','C', 'D', 'D',],
    'year':[2011,2011,2012,2012,2013,2013,2014,2014,2011,2011,2012,2012,2013,2013,2014,2014],
    'avg':[0.500,0.400,0.300,0.200,0.100,0.200,0.300,0.400,0.500,0.400,0.300,0.200,0.100,0.200,0.300,0.400]}

df = pd.DataFrame(data)

print (df)

team_names = [c for c in df['team'].value_counts().index]
team_names

for i in team_names:
    df[i+'_vs_avg_2011'] = df.loc[(df['team']==i)&amp;(df['year']==2011)].groupby(['id','name'])['avg'].transform('mean')
    df[i+'_vs_avg_2012'] = df.loc[(df['team']==i)&amp;(df['year']==2012)].groupby(['id','name'])['avg'].transform('mean')
    df[i+'_vs_avg_2013'] = df.loc[(df['team']==i)&amp;(df['year']==2013)].groupby(['id','name'])['avg'].transform('mean')
    df[i+'_vs_avg_2014'] = df.loc[(df['team']==i)&amp;(df['year']==2014)].groupby(['id','name'])['avg'].transform('mean')
    print(i)
</code></pre>
<p>for the loop part
I tried </p>
<pre><code>years_from_to = [str(i).zfill(2) for i in range(2011,2014)]
years_from_to

for i,j in team_names, years_from_to:
    df[i+'_vs_avg_'+j] = df.loc[(df['team']==i)&amp;(df['year']==j)].groupby(['id','name'])['avg'].transform('mean')
    print(i)
</code></pre>
<p>ValueError: too many values to unpack (expected 2)</p>
<p>Is there a way to simplify this or fix this code?</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you can use <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pivot_table.html" rel="nofollow noreferrer"><code>DataFrame.pivot_table</code></a> instaed loops with flattening columns in <code>MultiIndex</code> and then <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.join.html" rel="nofollow noreferrer"><code>DataFrame.join</code></a> to original <code>DataFrame</code>:</p>
<pre><code>df1 = df.pivot_table(index=['id','name'],columns=['team','year'],values='avg', aggfunc='mean')
df1.columns = [f'{a}_vs_avg_{b}' for a, b in df1.columns]
print (df1)
           A_vs_avg_2011  B_vs_avg_2012  C_vs_avg_2013  D_vs_avg_2014
id   name                                                            
1001 Tom            0.45           0.25           0.15           0.35
1002 Jack           0.45           0.25           0.15           0.35

df = df.join(df1, on=['id','name'])
print (df)
</code></pre>
</div>
<span class="comment-copy">what is <code>years_from_to</code>?</span>
<span class="comment-copy">sorry i just added</span>
<span class="comment-copy">What is your expected output?</span>
<span class="comment-copy">for <code>joining</code> the dataframe, I got an error <code>columns overlap but no suffix specified: Index(['A_vs_avg_2011', 'B_vs_avg_2012', 'D_vs_avg_2014', 'C_vs_avg_2013'], dtype='object')</code></span>
<span class="comment-copy">@Yusufsn at first i got errors too, but now i can get the right result.</span>
