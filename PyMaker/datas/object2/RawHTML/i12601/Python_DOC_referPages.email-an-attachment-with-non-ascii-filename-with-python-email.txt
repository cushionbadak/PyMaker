<div class="post-text" itemprop="text">
<p>How can I send an email with a file attached where the file name contains unicode characters? </p>
<p>Up to now, the file will arrive but with the filename <em>"noname"</em>. </p>
<p>This is the part that works perfectly well for ASCII filenames: </p>
<pre><code>import smtplib
from email.mime.text import MIMEText
from email.MIMEBase import MIMEBase
from email.MIMEMultipart import MIMEMultipart
from email.mime.application import MIMEApplication
from email.Utils import formatdate
from email import Encoders
from email.Utils import encode_rfc2231

msg = MIMEMultipart()
msg['Subject'] = "New magazine delivery!"
msg['From'] = sender_email
msg['To'] = ', '.join(kindle_emails)
msg['Date'] = formatdate(localtime=True)
message = "see attachment"
msg.attach(MIMEText(message))
part = MIMEApplication(open(f, 'rb').read(), _subtype='application/x-mobipocket-ebook')

part.add_header('Content-Disposition', 'attachment', filename=os.path.basename(filename)
msg.attach(part)
</code></pre>
<p><strong>First try</strong></p>
<p>Adding a tuple of encoding, language and encoded string and not only the filename.</p>
<pre><code>part.add_header('Content-Disposition', 'attachment', filename=('utf-8', 'fr', os.path.basename(f).encode('utf-8')))
</code></pre>
<p><strong>Second try:</strong></p>
<p>Setting the charset globally like this:</p>
<pre><code>from email import Charset
Charset.add_charset('utf-8', Charset.QP, Charset.QP, 'utf-8')
</code></pre>
<p><strong>Third try</strong></p>
<p>Using <code>utils.encode_rfc2231</code> </p>
<pre><code>from email.Utils import encode_rfc2231
utf8filename = encode_rfc2231(os.path.basename(f).encode('utf-8'), charset='utf-8')
part.add_header('Content-Disposition', 'attachment', filename=('utf-8', 'fr', utf8filename))
</code></pre>
<p><strong>Fourth try</strong></p>
<p>Using <code>urllib.quote()</code> to urlencode the filename. This has the same effect on the filename as the third method. </p>
<pre><code>utf8filename = urllib.quote(os.path.basename(f).encode('utf-8'))
part.add_header('Content-Disposition', 'attachment', filename=('utf-8', 'fr', utf8filename))
</code></pre>
<p>Any ideas?</p>
<p>Am I missing something essential about RFC2231 filename character encoding? </p>
<p>I use Gmail's SMTP server and python 2.7. </p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of telling the server that it's UTF-8 like this:</p>
<pre><code>filename=('utf-8', 'fr', os.path.basename(f).encode('utf-8')))
</code></pre>
<p>...it works when I just send UTF-8 without telling so: </p>
<pre><code>filename=os.path.basename(f).encode('utf-8'))
</code></pre>
<p>The file name will be properly displayed. </p>
<p>This seems to contradict the <a href="https://docs.python.org/2/library/email.message.html" rel="nofollow">documentation</a> which states:</p>
<blockquote>
<p>If the value contains non-ASCII characters, it must be specified as a
  three tuple in the format (CHARSET, LANGUAGE, VALUE), where CHARSET is
  a string naming the charset to be used to encode the value, LANGUAGE
  can usually be set to None or the empty string (see RFC 2231 for other
  possibilities), and VALUE is the string value containing non-ASCII
  code points.</p>
</blockquote>
<p>This doesn't work, however the <a href="https://docs.python.org/3/library/email.message.html" rel="nofollow">python 3 documentation</a> adds: . </p>
<blockquote>
<p>If a three tuple is not passed and the value contains non-ASCII
  characters, it is automatically encoded in RFC 2231 format using a
  CHARSET of utf-8 and a LANGUAGE of None.</p>
</blockquote>
<p>Only this works, even for python 2.7, though it's not mentioned in the docs. </p>
</div>
