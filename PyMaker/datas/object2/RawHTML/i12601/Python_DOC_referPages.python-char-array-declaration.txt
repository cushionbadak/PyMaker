<div class="post-text" itemprop="text">
<p>Is there a way to declare a char array of a fixed size in python as in C for example<br/>
<code>char myArray[100]</code><br/>
I also want to initializa all the characters with NULL.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't have a <em>fixed</em> size string.  (Python doesn't work like that).  But you can easily initialize a string to 100 characters:</p>
<pre><code>myArray = "\0" * 100
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/array.html" rel="nofollow">array</a> (an array in python have fixed type signature, but not fixed size):</p>
<pre><code>&gt;&gt;&gt; import array
myArray = array.array('c', ['\0' for _ in xrange(100)])

&gt;&gt;&gt; myArray
array('c', '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')
&gt;&gt;&gt; myArray[45]
'\x00'
</code></pre>
<p>Notice that i initialize the default to '\0' couse in python you must initialize it with a value, and array have not fixed size (it is dynamic) but this will do.</p>
<p>Another option is to initialize the array and appende the values later, so instead of full of NULL (None in python) it will be just empty and grow at your will:</p>
<pre><code>&gt;&gt;&gt; a = array.array('c',)
&gt;&gt;&gt; a
array('c')
&gt;&gt;&gt; a.append('c')
&gt;&gt;&gt; a
array('c', 'c')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another way is to use <a href="https://docs.scipy.org/doc/numpy-1.13.0/reference/generated/numpy.chararray.html" rel="nofollow noreferrer">numpy.chararray</a>:</p>
<pre><code>import numpy as np
myArray=np.chararray(100)
myArray[:]=0  #NULL is just a zero value
</code></pre>
<p>Results:</p>
<pre><code>&gt;&gt;&gt; myArray
chararray([b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0',
           b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0',
           b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0',
           b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0',
           b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0',
           b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0',
           b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0',
           b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0',
           b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0',
           b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0', b'0'],
          dtype='|S1')
</code></pre>
</div>
<span class="comment-copy">Maybe this thread helps: <a href="http://stackoverflow.com/questions/6142689/initialising-an-array-of-fixed-size-in-python" title="initialising an array of fixed size in python">stackoverflow.com/questions/6142689/â€¦</a></span>
<span class="comment-copy">Or you can check this <a href="http://stackoverflow.com/questions/6376886/what-is-the-best-way-to-create-a-string-array-in-python">one</a></span>
<span class="comment-copy">What is the benefit you're expecting?</span>
<span class="comment-copy">I have a written a module in C, which has a function that writes something to an output string passed as an argument. I declare the string in python before passing it to the function such as:  <code>buf = 'test'  myFunc(buf)</code>  Now I expected the string to grow automatically in length depending on the output provided by the function, but it seems that the length of the string is fixed by declaration. So in this case it is 4, and if fo rexample the function writes "thisisanoutput" to it, after the function returns the value of buf is "this".</span>
<span class="comment-copy">This did the trick, although I had to convert the array to a string first using the tostring() function.</span>
<span class="comment-copy">nice, happy coding :)</span>
<span class="comment-copy">In Python 3, <code>'c'</code> is no longer a valid <a href="https://docs.python.org/3/library/array.html" rel="nofollow noreferrer">type code</a>.</span>
