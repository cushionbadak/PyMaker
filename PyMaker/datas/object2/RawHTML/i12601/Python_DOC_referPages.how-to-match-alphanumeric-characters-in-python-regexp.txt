<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1059559/split-strings-into-words-with-multiple-word-boundary-delimiters">Split Strings into words with multiple word boundary delimiters</a>
<span class="question-originals-answer-count">
                    29 answers
                </span>
</li>
</ul>
</div>
<p>I’d like to get all the words from a text, including unicode characters, not including hyphens or underscores or any other non-alphanumeric characters.</p>
<p>I.e. I want something like this:</p>
<pre><code>&gt;&gt;&gt; getWords('John eats apple_pie')
['John', 'eats', 'apple', 'pie']
&gt;&gt;&gt; getWords(u'André eats apple-pie')
[u'André', u'eats', u'apple', u'pie']
</code></pre>
<p>With</p>
<pre><code>getWords = lambda text: re.compile(r'[A-Za-z0-9]+').findall(text)
</code></pre>
<p>it works for the first example, but not the second, and the other way around with this:</p>
<pre><code>getWords = lambda text: re.compile(r'\w+', re.UNICODE).findall(text)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3/library/stdtypes.html#str.isalnum" rel="nofollow"><code>str.isalnum()</code></a> instead of RegEx in this case:</p>
<pre><code>getWords = lambda x: ''.join(i if i.isalnum() else ' ' for i in x).split()
</code></pre>
</div>
<span class="comment-copy">Split the string by space. Easy. :)</span>
<span class="comment-copy">@Tushar and <code>_</code> and <code>-</code>?</span>
<span class="comment-copy">Did you post this before it was finished?</span>
<span class="comment-copy">@jonrsharpe: Nope, it’s finished I guess. Are you missing more information?</span>
<span class="comment-copy">@BhargavRao: Thanks. In the duplicate are indeed some solutions that should work which use manual parsing instead of regular expressions. Too bad python’s regexps can’t deal with this.</span>
<span class="comment-copy">Oh yeah, use <code>str.isalnum</code> instead if you don't think that digit or other stuff is a part of words.</span>
