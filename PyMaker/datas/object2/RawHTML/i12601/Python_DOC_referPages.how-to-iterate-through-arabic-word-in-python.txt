<div class="post-text" itemprop="text">
<p>In Python 2 at least, <code>unicodedata.name()</code> doesn't recognise certain characters.</p>
<pre><code>ActivePython 2.7.0.2 (ActiveState Software Inc.) based on
Python 2.7 (r27:82500, Aug 23 2010, 17:17:51) [MSC v.1500 64 bit (AMD64)] on win
32
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; from unicodedata import name
&gt;&gt;&gt; print(u'\n')


&gt;&gt;&gt; name(u'\n')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: no such name
&gt;&gt;&gt; name(u'a')
'LATIN SMALL LETTER A'
&gt;&gt;&gt;
</code></pre>
<p>(The first <code>print</code> is to demonstrate that Python itself recognises <code>u'\n'</code> as a newline.)</p>
<p>Certainly Unicode <a href="http://www.fileformat.info/info/unicode/char/000A/index.htm">contains</a> the character <code>\n</code>, and it has a name, specifically "LINE FEED".</p>
<p>NB. <code>unicodedata.lookup('LINE FEED')</code> and <code>unicodedata.lookup(u'LINE FEED')</code> both give a KeyError: undefined character name.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>unicodedata.name()</code> lookup relies on column 2 of the <a href="http://www.unicode.org/Public/5.2.0/ucd/UnicodeData.txt">UnicodeData.txt database in the standard</a> (Python 2.7 uses Unicode 5.2.0).</p>
<p>If that name starts with <code>&lt;</code> it is ignored. All control codes, including newlines, are in that category; the first column has <em>no name</em> other than <code>&lt;control&gt;</code>:</p>
<pre><code>000A;&lt;control&gt;;Cc;0;B;;;;;N;LINE FEED (LF);;;;
</code></pre>
<p>Column 10 is the <em>old</em>, Unicode 1.0 name, and should not be used, according to the standard. In other words, <code>\n</code> <em>has no name</em>, other than the generic <code>&lt;control&gt;</code>, which the Python database ignores (as it is not unique).</p>
<p><a href="https://docs.python.org/3/whatsnew/3.3.html#other-language-changes">Python 3.3</a> added support for <a href="http://www.unicode.org/Public/6.3.0/ucd/NameAliases.txt">NameAliases.txt</a>, which lets you look up names by alias; so <code>lookup('LINE FEED')</code>, <code>lookup('new line')</code> or <code>lookup('eol')</code>, etc, all reference <code>\n</code>.  However, the <code>unicodedata.name()</code> method does not support aliases, nor could it (which would it pick?):</p>
<blockquote>
<ul>
<li>Added support for Unicode name aliases and named sequences. Both <code>unicodedata.lookup()</code> and <code>'\N{...}'</code> now resolve name aliases, and <code>unicodedata.lookup()</code> resolves named sequences too.</li>
</ul>
</blockquote>
<p>TL;DR: <code>LINE FEED</code> is not the official name for <code>\n</code>, it is but an alias for it. Python 3.3 and up let you look up characters by alias.</p>
</div>
<span class="comment-copy">same output on python <code>3.4.1</code></span>
<span class="comment-copy">Seems like the Unicode table has holes :-)</span>
<span class="comment-copy">On my machine, using python3.4 <code>name('\n')</code> fails, but <code>'\N{LINE FEED}'</code> works as well as <code>lookup('LINE FEED')</code>. On python2 all fails.</span>
<span class="comment-copy">@Bakuriu yes, same here, the <code>lookup</code> works; but <code>name</code> fails.</span>
<span class="comment-copy">@AaronDigulla: no, <code>\n</code> has no name (other than <code>&lt;control&gt;</code>). <code>LINE FEED</code> is an <i>alias</i> instead.</span>
