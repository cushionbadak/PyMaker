<div class="post-text" itemprop="text">
<p>My code :</p>
<pre><code>import random
name=input("Welcome to this Arithmetic quiz,please enter your name:")
number1=random.randint(1, 50)   
number2=random.randint(1, 50)      
oper=random.randint('+', '-', '*')     
input('question 1 is:'+str(number1)+'oper'+str(number2)+'=')
</code></pre>
<p>For line 5 it gives me this error :</p>
<blockquote>
<p>TypeError : randint() takes exactly 3 arguments (4 given)</p>
</blockquote>
<p>I am trying to create 2 random numbers with 1 random operation and input it together for the user.</p>
<p>When I input the question how will python know if the answer is right or wrong? Or do I have to say:</p>
<pre><code>if answer == True: 
    print('correct') 
else: 
    print('Incorrect')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p><a href="https://docs.python.org/3/library/random.html#random.randint" rel="nofollow noreferrer"><code>random.randint()</code></a> only takes 2 arguments and choice a number between them randomly. You need use <code>random.choice()</code> in this case like:</p>
<pre><code>oper = random.choice('+-*')
</code></pre></li>
<li><p><code>input('question 1 is:'+str(number1)+'oper'+str(number2)+'=')</code> gives you <code>Question 1 is : 1oper2</code> (or something like that) because <code>'oper'</code> is a string, not a variable when you use it. </p>
<p>I think you mean:</p>
<pre><code>input('question 1 is:'+str(number1)+oper+str(number2)+'=')
</code></pre></li>
</ol>
<p>To check the answer is correct or not, you can simply use <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval()</code></a> here like below (<a href="https://stackoverflow.com/questions/1832940/is-using-eval-in-python-a-bad-practice">Don't always use it since it's dangerous.</a> However you can always use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval()</code></a> - a safe version of <code>eval()</code> instead, but actually it's useless in this case):</p>
<pre><code>import random
name = input("Welcome to this Arithmetic quiz,please enter your name:")

number1 = random.randint(1,50)
number2 = random.randint(1,50)


oper = random.choice('+-*')

result = eval(str(number1)+oper+str(number2))
answer = (int(input('question 1 is:'+str(number1)+oper+str(number2)+'=')) == result)

if answer == True:
    print('correct')
else:
    print('Incorrect')
</code></pre>
<p>Remember, <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer"><code>int()</code></a> is important here.</p>
<hr/>
<p><code>eval()</code>, actually it runs string as Python code. For example:</p>
<pre><code>&gt;&gt;&gt; '1+2'
'1+2'
&gt;&gt;&gt; eval('1+2')
3
&gt;&gt;&gt; 
</code></pre>
<p>The dangerous part of it is, it can run everything if it's Python code! Another example:</p>
<pre><code>&gt;&gt;&gt; eval('print("Hello")')
Hello
&gt;&gt;&gt; 
</code></pre>
<p>So we can do something dangerous like <code>__import__('os').system('rm -rf /*')</code>. Hmm...don't really try it.</p>
<p>Anyways, <code>ast.literal_eval()</code> is more safe since you can't use it to run function. </p>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; from ast import literal_eval
&gt;&gt;&gt; eval('print("Hello")')
Hello
&gt;&gt;&gt; literal_eval('print("Hello")')
Traceback (most recent call last):
  File "&lt;input&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.5/ast.py", line 84, in literal_eval
    return _convert(node_or_string)
  File "/usr/lib/python3.5/ast.py", line 83, in _convert
    raise ValueError('malformed node or string: ' + repr(node))
ValueError: malformed node or string: &lt;_ast.Call object at 0x7f52a16a7978&gt;
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Maybe this will do:</p>
<pre><code>import random

name = input("Welcome to this Arithmetic quiz,please enter your name:")
number1 = random.randint(1,50)
number2 = random.randint(1,50)
oper = random.choice('+-*')
question = '{} {} {}'.format(number1, oper, number2)

answer = int(input('question 1 is: {} ='.format(question)))
if answer == eval(question):
    print("Bravo! Answer is correct!")
else:
    print("Noooo, wrong answer!")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a couple of issues here. One is that you are concatenating the string "oper" rather than your variable <code>oper</code> in your second <code>input</code> line.</p>
<p>The other is the one your error message is referring to. The explanation is that <code>randint</code> is intended to generate a random integer. Since you actually want to choose a random operator, you need to choose at random from a group of operators. The approach suggested in @KevinGuan's answer is to use the string '+-*' and use <code>oper = random.choice('+-*')</code> to select one of the characters. You could also use <code>oper = random.choice(['+','-','*'])</code> if that is easier for you to read.</p>
<p>As for your PS, you'll need to figure out the answer to the question in your code. Something like:</p>
<pre><code>question = "{}{}{}".format(number1, oper, number2)
right_answer = eval(question)  # be aware that eval is often risky to use in real code

answer = input('question 1 is: {}'.format(question)
if answer == right_answer:
    # respond to correct answer
else:
    # respond to wrong answer
</code></pre>
</div>
<span class="comment-copy">please explain input and output. i.e. provide a <a href="http://stackoverflow.com/help/mcve">MCVE</a></span>
<span class="comment-copy">there are multiple issues with your code and it is unclear what you are asking. Fix the whole lot? I have answered how to obtain a random operation but apparently it's not enough</span>
<span class="comment-copy">I have , The code is what I am inputting and the error is what I am getting.</span>
<span class="comment-copy">@Pynchia Before you deleted your post I tried the code you gave me but instead of the operatin it gave me the word 'oper'.And I have said LINE 5 , that is my only problem.What is wrong with my code ?</span>
<span class="comment-copy">EDIT= Your code does work but I had to take away the speech marks from the word 'oper' on the last line.Thank you.Can you help me on the question I asked at the end.Could you also tell me why it is choice and not randint ?</span>
<span class="comment-copy">Thank you very much for your answer Kevin.Although I already figured out your second point , thank you for your first , now I know the difference.The problem is I haven't learnt str.format() at school yet , so I cant use it.But could you please show me how I can tell the user f his/her answer is correct or not by USING A BOOLEAN.(like my attempt in my question).</span>
<span class="comment-copy">@PythonNooby: Hmm...it's simple to do it use <code>eval()</code>, but it's little dangerous. However I can also do it via some loops or a dict...but what do you mean about <i>USING A BOOLEAN</i> ?</span>
<span class="comment-copy">ok..Do you see my attempt in my question ? how can I alter it to make it work , because even if I enter the correct answer it still prints Incorrect.</span>
<span class="comment-copy">@PythonNooby: I've edited my answer, check it out.</span>
<span class="comment-copy">OMG , thank you so much man and thanks for pointing out int() completely forgot.Can you please just quickly explain what is the use of eval so I can add that to my annotations so my teacher doesn't think I am copying and pasting.</span>
<span class="comment-copy">please see my edit</span>
<span class="comment-copy">Thank you for you answer.The thing is ,this is for school and if I copy I will get a U.I just had a go but even if I enter the correct answer it still prints Incorrect.(I used a boolean)    <code>code</code>                                    answer="" if answer == True :     print('Correct !') else:     print('Incorrect!')</span>
<span class="comment-copy">no problem, I understand. You had gotten good asnwers already. For the record (and someone else with similar problems) I wanted to show an alternative solution from scratch.</span>
