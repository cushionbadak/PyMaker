<div class="post-text" itemprop="text">
<p>So I used shlex.split() recently to split a command as argument to subprocess.Popen() function. I recalled that long back I also used re.split() function to split a string with a specific delimiter specified. Can someone point out what is the essential difference in between them? In which scenario is each function best suited?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>shlex.split()</code> is <a href="https://docs.python.org/3/library/shlex.html#shlex.split" rel="noreferrer">designed to work like the shell's split mechanism</a>.</p>
<p>This means doing things like respecting quotes, etc.</p>
<pre><code>&gt;&gt;&gt; shlex.split("this is 'my string' that --has=arguments -or=something")
['this', 'is', 'my string', 'that', '--has=arguments', '-or=something']
</code></pre>
<p><code>re.split()</code> will just split on whatever pattern you define. </p>
<pre><code>&gt;&gt;&gt; re.split('\s', "this is 'my string' that --has=arguments -or=something")
['this', 'is', "'my", "string'", 'that', '--has=arguments', '-or=something']
</code></pre>
<p>Trying to define your own regex to work like <code>shlex.split</code> is needlessly complicated, if it's even possible.</p>
<p>To really see the differences between the two, you can always <a href="http://catb.org/jargon/html/U/UTSL.html" rel="noreferrer">Use the Source, Luke</a>:</p>
<pre><code>&gt;&gt;&gt; re.__file__
'/usr/lib/python3.5/re.py'
&gt;&gt;&gt; shlex.__file__
'/usr/lib/python3.5/shlex.py'
</code></pre>
<p>Open these files in your favorite editor and start poking around, you'll find that they operate quite differently.</p>
</div>
<span class="comment-copy">For splitting a string? Use neither, instead use the builtin  <code>string.split('delimiter')</code></span>
<span class="comment-copy">@TimCastelijns It depends very much on what you want to split. <code>string.split</code> is the simplest but also least capable option.</span>
