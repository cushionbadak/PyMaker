<div class="post-text" itemprop="text">
<p>I want to create a decorator which can wrap around functions with different numbers of variables. For example, below I have two functions <code>abc</code> and <code>abcd</code>, taking 2 and 3 arguments respectively. I want the wrapper to take a variable number of arguments in order to deal with this. However, when I run the code, I get <code>TypeError: _wrapper() takes exactly 0 arguments (2 given)</code>, as though the <code>**kwargs</code> was ignored.</p>
<p>Why is this, and how do I fix this?</p>
<pre><code>def dec(function):
    def _wrapper(**kwargs):
        print len(kwargs)
        function(**kwargs)
    return _wrapper

@dec
def abc(a, b):
    return a*b

@dec
def abcd(a, b, c):
    return a*b*c
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python has two variable argument variables: <code>*args</code> and <code>**kwargs</code>. <code>args</code> is a list of arguments specified without names (e.g. <code>func(1,2,3)</code>), while <code>kwargs</code> is a dictionary of arguments with names (e.g. <code>func(x=1, y=2, z=3)</code>).</p>
<p>Your code is only accepting the kwargs, so you also need to add the unnamed args:</p>
<pre><code>def dec(function):
    def _wrapper(*args, **kwargs):
        print len(args) + len(kwargs)
        return function(*args, **kwargs)
    return _wrapper
</code></pre>
</div>
<span class="comment-copy">In part you probably want to use <a href="https://docs.python.org/3/library/functools.html#functools.wraps" rel="nofollow noreferrer"><code>functools.wraps</code></a></span>
<span class="comment-copy">Ah yes of course, many thanks. I made this error because I also would like to know the names of the function parameters inside _wrapper. Is there any way to find out the name of the nth parameter of the function that is being wrapped?</span>
