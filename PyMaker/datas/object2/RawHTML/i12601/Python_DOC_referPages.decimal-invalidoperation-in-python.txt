<div class="post-text" itemprop="text">
<p>I was testing my code and I thought that this piece of code was correct:</p>
<pre><code>while True:
    try:
        p = Decimal(raw_input(...))
        if ...condition... : break
        else: raise ValueError
    except ValueError:
        print "Error! ..."
</code></pre>
<p>but it's not, since when I input "a", this is what I get:</p>
<pre><code>File "multiple.py", line 28, in &lt;module&gt;
  precision = Decimal(raw_input(...))
File "/usr/lib/python2.7/decimal.py", line 548, in __new__
  "Invalid literal for Decimal: %r" % value)
File "/usr/lib/python2.7/decimal.py", line 3872, in _raise_error
  raise error(explanation)
decimal.InvalidOperation: Invalid literal for Decimal: 'a'
</code></pre>
<p>ValueError does not catch InvalidOperation.
I don't want the program to stop because of that, I want it to keep asking for input until it satisfies the condition. How do I do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>The signal exceptions in the <code>decimal</code> module are all subclasses of the <a href="https://docs.python.org/3/library/decimal.html#decimal.DecimalException" rel="noreferrer"><code>decimal.DecimalException</code> exception class</a>. You can catch any of the following exceptions to deal with the <code>InvalidOperation</code> exception, from the specific to the (very) generic:</p>
<pre><code>decimal.InvalidOperation
decimal.DecimalException
ArithmeticError
Exception
BaseException
</code></pre>
<p><code>ValueError</code> is not in that hierarchy, but catching <code>Exception</code> would also catch <code>ValueError</code> since it is a subclass. Generally speaking, you rarely want to catch <code>BaseException</code> since that catches <em>all</em> possible exceptions, including <code>SystemExit</code> and <code>MemoryError</code>.</p>
<p>You can catch multiple exceptions in the same handler:</p>
<pre><code>from decimal import Decimal, DecimalException

while True:
    try:
        p = Decimal(raw_input(...))
        if ...condition... : break
        else: raise ValueError
    except (ValueError, DecimalException):
        print "Error! ..."
</code></pre>
<p>would catch both your original <code>ValueError</code> exceptions, and all signal exceptions raised by the <code>decimal</code> module.</p>
</div>
<span class="comment-copy">You <i>could</i> try catching the <code>decimal.InvalidOperation</code> exception...</span>
<span class="comment-copy">@PM2Ring how? <code>except decimal.InvalidOperation</code>?</span>
<span class="comment-copy">@Pigna: yes, did you try that yet?</span>
<span class="comment-copy">ok, yes it worked, thanks! I didn't know you could also import errors</span>
<span class="comment-copy">@Pigna: exceptions are just classes, based of <code>BaseException</code>. You can always define more subclasses in that hierarchy for specific purposes.</span>
