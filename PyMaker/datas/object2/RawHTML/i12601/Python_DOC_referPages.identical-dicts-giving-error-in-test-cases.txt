<div class="post-text" itemprop="text">
<p>DRF API response.data</p>
<pre><code>respone.data = {'created': 1, 'status': 1}
</code></pre>
<p>and other data is from serializer.</p>
<pre><code>MySerializer(user_obj, context={'request': self.request}).data
{'created': 1, 'status': 1}

self.assertEqual(d1,d2) gives difference. Apparently there is no difference but somehow both are not matching. 
</code></pre>
<p>dump and again loads matches.</p>
<pre><code>self.assertEqual(json.loads(json.dumps(d1)), json.loads(json.dumps(d2)))
</code></pre>
<p>sorted also matches.</p>
<pre><code>self.assertEqual(sorted(response.data), sorted(data_))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>DRF's Serializer <code>.data</code> method return an OrderedDict which is subclass of dict:</p>
<pre><code>return OrderedDict([
            (field_name, field.get_value(self.initial_data))
             for field_name, field in self.fields.items()
             if (field.get_value(self.initial_data) is not empty) and
             not field.read_only
         ])
</code></pre>
<p>But you are creating a dict, which is different from <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow">OrderedDict</a>.</p>
</div>
<span class="comment-copy"><i>What</i> difference does it give? Could you paste the comparison?</span>
<span class="comment-copy">Before doing the assertEqual, issue the following: <code>self.longMessage = True</code>, which will give you more details when <code>assertEqual</code> fails.</span>
<span class="comment-copy">self.assertEqual(response.data, data_) *** AssertionError: {'created': 1, 'status': 1} != {'created': 1, 'status': 1}</span>
<span class="comment-copy">Both dict are of same type &lt;class 'rest_framework.utils.serializer_helpers.ReturnDict'&gt;</span>
<span class="comment-copy">@MarkWaugh Okay, so now we know its a <code>ReturnDict</code> and not a <code>dict</code>. <code>ReturnDict</code> inherits from <code>OrderedDict</code> and items must have been added in the same order to be equal. You could do <code>dict(d1)==dict(d2)</code> to compare.</span>
