<div class="post-text" itemprop="text">
<p>I just started learning python 2.7.11 from the docs.
I was doing the examples which were given in there, but got confused when <code>print</code> and <code>r</code> were introduced. I got confused about the how backslashes are being displayed as output. This is related to character escaping but till now I just used <code>\b</code> for backspace, <code>\n</code> for new line, <code>\\</code> for a backslash</p>
<p>This is what I am talking about:</p>
<p><a href="https://i.stack.imgur.com/DXvCN.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/DXvCN.jpg"/></a></p>
<p>There are four different cases:</p>
<ol>
<li><p>using neither <code>print</code> nor <code>r</code></p></li>
<li><p>using <code>print</code> but not <code>r</code></p></li>
<li><p>using <code>r</code> but not <code>print</code></p></li>
<li><p>using both <code>print</code> and <code>r</code></p></li>
</ol>
<p>and all of them give different outputs. I can't get my head around what's actually happening in all the four cases.</p>
</div>
<div class="post-text" itemprop="text">
<p>There's no connection between the two, necessarily. <code>r</code> introduces a raw string literal, which doesn't parse escape codes, which means that a <code>\</code> between the quotes will be an actual <code>\</code> character in the string data.</p>
<p><code>print</code> will print out the actual string, while just typing a string literal at the <code>&gt;&gt;&gt;</code> prompt will cause Python to implicitly print the value of the string, but it will be printed as a string literal (with special characters escaped), so you could take it, paste it back into <code>&gt;&gt;&gt;</code> and get the same string.</p>
<p>Edit: <a href="https://docs.python.org/3/library/functions.html#repr" rel="nofollow"><code>repr()</code></a> was mentioned in some of the comments. Basically, it's meant to return a representation of an object that can be parsed back into an equivalent object, whereas <code>str()</code> is aimed more towards a human-readable description. For built-in objects, both are predefined as appropriate, while for user objects, you can define them by defining the special methods <code>__repr__()</code> and <code>__str__()</code>.</p>
<p><code>&gt;&gt;&gt; obj</code> will print out <code>repr(obj)</code>, while <code>print obj</code> will print the value of <code>str(obj)</code>.</p>
<pre><code>&gt;&gt;&gt; class Foo(object):
...     def __str__(self):
...             return "str of Foo"
...     def __repr__(self):
...             return "Foo()"
...
&gt;&gt;&gt; f = Foo()
&gt;&gt;&gt; f
Foo()
&gt;&gt;&gt; print f
str of Foo
&gt;&gt;&gt; eval(repr(f))
Foo()
</code></pre>
<p>Also, regarding the <code>\</code>es, it would also be worth noting that Python will ignore escape sequences it doesn't know:</p>
<pre><code>&gt;&gt;&gt; [c for c in '\w']
['\\', 'w']
&gt;&gt;&gt; [c for c in '\n']
['\n']
</code></pre>
<p><code>\n</code> becomes a newline character, while <code>\w</code> remains a backslash followed by a <code>w</code>.</p>
<p>For example, in <code>'hello\\\world'</code>, the first <code>\</code> escapes the second one, and the third one is left alone because it's followed by a <code>w</code>.</p>
</div>
<span class="comment-copy">You are seeing the difference between repr and str when you don't print and print respectively <a href="http://stackoverflow.com/questions/7784148/understanding-repr-function-in-python" title="understanding repr function in python">stackoverflow.com/questions/7784148/…</a></span>
<span class="comment-copy">I'd suggest that to be complete this answer needs to reference <code>repr()</code>.</span>
<span class="comment-copy">It uses the repr output unless you print</span>
<span class="comment-copy">that cleared the first case... <code>print</code> prints the actual string, is that why \ stays a \ and \\ turns into \ ?</span>
<span class="comment-copy">@vicky96 it is the difference between <code>__str__</code> and <code>__repr__</code> <a href="http://stackoverflow.com/questions/1436703/difference-between-str-and-repr-in-python#" title="difference between str and repr in python%23">stackoverflow.com/questions/1436703/…</a></span>
<span class="comment-copy">@PadraicCunningham got you, thanks</span>
