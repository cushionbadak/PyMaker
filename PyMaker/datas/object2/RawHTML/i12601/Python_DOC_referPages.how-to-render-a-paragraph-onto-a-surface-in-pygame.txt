<div class="post-text" itemprop="text">
<p>I've made a fully functioning main menu with buttons where one button take you to the game and another button that takes you to the instruction page.</p>
<p>However, in my instructions page I can only write a one line sentence. If I add multiple lines it shows squares in the middle.</p>
<p>What I want achieve is to write a multi-line paragraph onto the screen for displaying some instruction, game information, etc.</p>
<p>Here es a screen shot of my current game GUI:
<a href="https://i.stack.imgur.com/g8JLu.png" rel="nofollow noreferrer"><img alt="Game GUI" src="https://i.stack.imgur.com/g8JLu.png"/></a></p>
<p>And this is the relevant code I have so far:</p>
<pre><code>def text_objects(text, font):
   textSurface = font.render(text, True, (0,0,0))
   return textSurface, textSurface.get_rect()


def ParagraphText(text, font):
   ParagraphSize = (600,500)
   FontSize = font.get_height()

   ParagraphSurf = pygame.Surface(ParagraphSize)

   ParagraphSurf.fill(WHITE)
   ParagraphSurf.set_colorkey(WHITE)

   SplitLines = text.splitlines()

   CentreText = (ParagraphSize[1] - len(SplitLines)*(FontSize + 1)//2)

   for idx, line in enumerate(SplitLines):
       currentTextline = font.render(text, False, (0, 0, 0))
       currentPostion = (0, idx * FontSize + CentreText)
       ParagraphSurf.blit(currentTextline, currentPostion)

   return ParagraphSurf, ParagraphSize



def Instructions():
   paragraph = """Your are the last surviving rhino. Your horn
   is worth millions! Right now you are trapped in a zoo and
   waiting to be slaughtered for your horn. But you can't give
   up! Escape from the tribesmen and zoo security so you can
   enjoy your life as a free being once again"""

   screen.blit(pygame.image.load("background0.jpg").convert(), (0,0))
   InstructionsFont = pygame.font.SysFont("elephant",15)
   TextSurf, TextRect = text_objects("Instructions", InstructionsFont)
   TextRect.center = ((screen_width/2),(screen_height/6))
   screen.blit(TextSurf, TextRect)

   ParagraphText(paragraph,InstructionsFont)

   intro = True

   while intro:
       for event in pygame.event.get():
           if event.type == pygame.QUIT:
               pygame.quit()
               quit()

       Buttons("BACK",100,500,120,50,TURQUOISE,DARK_TURQUOISE,"back")

       pygame.display.update()
       clock.tick(15)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://www.pygame.org/docs/ref/font.html#pygame.font.Font.render" rel="nofollow noreferrer"><code>render()</code></a> method of a <a href="https://www.pygame.org/docs/ref/font.html#pygame.font.Font" rel="nofollow noreferrer"><code>pygame.font.Font</code></a> object can only blit single line text, as stated in the <a href="https://www.pygame.org/docs" rel="nofollow noreferrer">documentation</a>.</p>
<p>To work around this you have to adapt your <code>text_objects()</code> function to draw each line of the passed in text string separately onto the appropriate position:</p>
<ol>
<li>Create a new surface onto which the whole paragraph will be drawn. To fake a transparent surface use Pygame's <a href="https://www.pygame.org/docs/ref/surface.html#pygame.Surface.set_colorkey" rel="nofollow noreferrer"><code>set_colorkey()</code></a> method. <sup>1)</sup></li>
<li>Split the text into several lines of characters using Python's built-in <a href="https://docs.python.org/3/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer"><code>splitlines()</code></a> method.</li>
<li>Compute an optional offset value if you want to align (e.g. center) the text vertically inside the paragraph surface. </li>
<li>Loop (i.e. enumerate) over the split lines:

<ul>
<li>Render the current line of characters onto a dummy surface. <sup>1)</sup></li>
<li>Calculate the position of this line to fit into a paragraph style.</li>
<li>Blit the dummy surface onto the main paragraph surface.</li>
</ul></li>
<li>Draw the paragraph surface onto the main screen or return it with other parameters.</li>
</ol>
<p>Now itÂ´s time implement this:</p>
<pre><code>def text_objects(text, font):
    paragraphSize = (xsize, ysize)
    fontSize = font.get_height()

    # Step 1
    paragraphSurface = pygame.Surface(paragraphSize ) 

    #Set colorkey to fake transparent paragraph surface
    paragraphSurface.fill((255, 255, 255))
    paragraphSurface.set_colorkey((255, 255, 255))

    # Step 2
    splitLines = text.splitlines() 

    # Step 3: center the text vertically 
    offSet = (paragraphSize[1] - len(splitLines) * (fontSize + 1)) // 2 

    #Step 4
    for idx, line in enumerate(splitLines):
        currentTextline = font.render(line, False, (0, 0, 0))
        currentPostion = (0, idx * fontSize + offSet)
        paragraphSurface.blit(currentTextline, currentPostion)

    #Step 5
    return paragraphSurface, paragraphSize
</code></pre>
<hr/>
<p>If you want to center each line in the text, don't set the <code>x</code>-coordinate of the <code>currentPostion</code> to <code>0</code> but use the following calculation:</p>
<pre><code>#center paragraph
currentPostion = ((paragraphSize[0] - currentTextline.get_width()) // 2, #x-coordinate
                  idx * fontSize + offSet) #y-coordinate
</code></pre>
<p><img alt="sample: center text" src="https://i.stack.imgur.com/SDtwO.png" title="center"/></p>
<p>or right align:</p>
<pre><code>#right align paragraph
currentPostion = (paragraphSize[0] - currentTextline.get_width(), #x-coordinate
                  idx * fontSize + offSet) #y-coordinate
</code></pre>
<p><img alt="sample: right align" src="https://i.stack.imgur.com/t6ocB.png" title="right align"/></p>
<p><sup>1)</sup> <em>Please note that setting the <code>antialias</code> parameter to <code>true</code> when rendering a line, can have bad effects because of the set color-key of the paragraph surface!</em></p>
<p>I hope this helps you :)</p>
</div>
<span class="comment-copy">I think you will have to provide each line separately.</span>
<span class="comment-copy">I agree with @jonrsharpe</span>
<span class="comment-copy">btw: now, in every second you repeat 15 times: declare paragraph text, load image, create font, get surf and rect, center it, create button - but you can do it only once, before <code>while intro</code>.</span>
<span class="comment-copy"><code>Instructions</code> can look like this: <a href="http://pastebin.com/8UFqkXVv" rel="nofollow noreferrer">pastebin.com/8UFqkXVv</a> . If you don't have animations then it can look like this: <a href="http://pastebin.com/bVPGsjuT" rel="nofollow noreferrer">pastebin.com/bVPGsjuT</a></span>
<span class="comment-copy">Ok thanks that makes sense! i was repeating everything 15 seconds which is a waste of cpu performance etc... thanks for clearing that up</span>
<span class="comment-copy">Hi thanks for ur time and effort to help me but i've got a few questions. What does idx mean and when u use font.render(line...) what does it have line and not the paragraph of text instead?</span>
<span class="comment-copy">im asking this because currently i've used what you taught me to make a seperate function called paragraphtext(). its got the same arguments are the text objects and i called it into my Instructions function as paragraphtext(paragraph, InstructionsFont) but nothing shows up?</span>
<span class="comment-copy">Sorry for my late reply! <code>idx</code> is the index returned by Pythons <a href="https://docs.python.org/2/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> function. Could you please post your updated code, so I can see what's going on?</span>
<span class="comment-copy">I have just updated it.</span>
