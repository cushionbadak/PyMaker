<div class="post-text" itemprop="text">
<p>I realize that there are a lot of questions about this on StackOverflow already, but I find the solutions to be entirely unclear and often contradicting of each other.</p>
<p>I have the following scenario: I am writing a python (Python 3.4) package with the following structure:</p>
<pre><code>mypackage/
    __init__.py (empty file)
    mydir1/
        __init__.py (empty file)
        mymodule1.py
    mydir2/
        __init__.py (empty file)
        mymodule21.py
        mymodule22.py
    mydir3/
        __init__.py (empty file)
        mymodule31.py
        mymodule32.py
    tests/
        __init__.py (empty file)
        test_something_in_mydir1.py
        test_something_in_mydir2.py
        test_something_in_mydir3.py
</code></pre>
<p>I want the files within the <code>tests/</code> directory to contain unit tests of everything inside the package. The problem is that no matter which approach I try, I get this error:</p>
<p><code>SystemError: Parent module '' not loaded, cannot perform relative import</code></p>
<p>I should note that I want this to work "out of the box" which means that I do not want to import things using their absolute paths and I do not want to change my path variable. None of these solutions seem very pythonic and its driving me slowly up the wall. Is there really no way to do this?</p>
<p>I've tried a bunch of stuff already, including examples below, but they all seem to produce the same result:</p>
<pre><code>from ..mydir1.mymodule1 import *
from .mypackage.mydir1.mymodule1 import *
from ...mypackage.mydir1.mymodule1 import *
</code></pre>
<p>And I've tried overwriting the <code>__all__</code> variable in each of the <code>__init__.py</code> files as well as doing the imports as shown here: <a href="https://docs.python.org/3/reference/import.html#submodules" rel="nofollow">https://docs.python.org/3/reference/import.html#submodules</a></p>
<p>Can anyone tell me how to structure the imports (for example) in the file <code>test_something_in_mydir1.py</code> in such a way as to have access to all the classes/functions that are found in mymodule1.py for unit testing the package?</p>
</div>
<div class="post-text" itemprop="text">
<p>If <code>test_something_in_mydir1.py</code> contains:</p>
<pre><code>import unittest
from ..mydir1 import mymodule1

class Test1(unittest.TestCase):
    def test1(self):
        self.assertEqual(mymodule1.x,1) # mymodule1 trivially contains x=1
</code></pre>
<p>And if the unit tests were launched from the directory <em>containing</em> the package (in this case, <code>C:\Test</code>) using the following command:</p>
<pre><code>py -m unittest discover -v
</code></pre>
<p>The tests are discovered and run correctly with relative imports:</p>
<pre><code>C:\Test&gt;tree /f
Folder PATH listing
Volume serial number is CE8B-D448
C:.
└───mypackage
    │   __init__.py
    │
    ├───mydir1
    │       mymodule1.py
    │       __init__.py
    │
    ├───mydir2
    │       mymodule21.py
    │       mymodule22.py
    │       __init__.py
    │
    ├───mydir3
    │       mymodule31.py
    │       mymodule32.py
    │       __init__.py
    │
    └───tests
            test_something_in_mydir1.py
            __init__.py


C:\Test&gt;py -m unittest discover -v
test1 (mypackage.tests.test_something_in_mydir1.Test1) ... ok

----------------------------------------------------------------------
Ran 1 test in 0.000s

OK
</code></pre>
</div>
<span class="comment-copy">Never mind, I had a naming error, so now it discovers the test and attempts to run it, but despite using a relative import <code>from ..mydir1.mymodule1 import *</code> it still gives me the error <code>SystemError: Parent module '' not loaded, cannot perform relative import</code></span>
<span class="comment-copy">I also tried <code>from ..mydir1 import mymodule1</code> and that did not work either, producing the same error.</span>
<span class="comment-copy">I made sure that it was not something stupid in my specific case and even recreated the directory with the same exact titles as the placeholders I used here and indeed the same problem occurs. I created a pastebin just in case it would help to see the precise command that I used and the error that I got <a href="http://pastebin.com/08mutDrY" rel="nofollow noreferrer">here</a></span>
<span class="comment-copy">@RedHack, you can't run the unittest command from within the package directory.  Your pastebin example was run from the tests directory.  My example above was run in <code>C:\Test</code>, where <code>mypackage</code> was a subdirectory.</span>
<span class="comment-copy">Ah, OK that did it. Thank you!</span>
