<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/25837452/python-get-current-time-in-right-timezone">Python get current time in right timezone [duplicate]</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I'm utilizing the datetime module to produce the current date. However, when I run this after 7PM, the current date becomes tomorrow's date. </p>
<p>I'm not sure how to set the time zone for the following module</p>
<pre><code>from datetime import *
print date.today()
</code></pre>
<p>I've read the <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow">documentation</a> but have not found how to set this yet.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your date is a "naive" datetime, it doesn't have a timezone (<code>tz=None</code>). 
Then you have to localize this datetime by setting a timezone. Use <code>pytz</code> module to do that.</p>
<p>Here is an example :</p>
<pre class="lang-python prettyprint-override"><code>from datetime import datetime
from pytz import timezone
# define date format
fmt = '%Y-%m-%d %H:%M:%S %Z%z'
# define eastern timezone
eastern = timezone('US/Eastern')
# naive datetime
naive_dt = datetime.now()
# localized datetime
loc_dt = datetime.now(eastern)
print(naive_dt.strftime(fmt))
# 2015-12-31 19:21:00 
print(loc_dt.strftime(fmt))
# 2015-12-31 19:21:00 EST-0500
</code></pre>
<p>Read <a href="http://pytz.sourceforge.net/#localized-times-and-date-arithmetic" rel="noreferrer">pytz documentation</a> for more information</p>
</div>
<div class="post-text" itemprop="text">
<p>While <code>date</code> doesn't have a way to select a time zone, <code>datetime</code> does. You <a href="https://docs.python.org/2/library/datetime.html#tzinfo-objects" rel="nofollow">need to create a subclass of tzinfo</a> with the information for your desired time zone:</p>
<pre><code>class UTC(tzinfo):
    def utcoffset(self, dt):
        return timedelta(0)

    def tzname(self, dt):
        return "UTC"

    def dst(self, dt):
        return timedelta(0) 
</code></pre>
<p>For example, the Eastern <strong>Standard</strong> Time (UTC-5:00, no DST):</p>
<pre><code>class EST(tzinfo):
    def utcoffset(self, dt):
        return timedelta(hours = -5)

    def tzname(self, dt):
        return "EST"

    def dst(self, dt):
        return timedelta(0)
</code></pre>
<p>After making a class for your timezone, you would then get the <code>date</code> you wanted with:</p>
<pre><code>datetime.now(UTC()).date()
</code></pre>
<p>(Replace <code>UTC</code> with your timezone class name)</p>
<p>There is also a library available, <a href="http://pytz.sourceforge.net/" rel="nofollow">pytz</a>, that would make this much easier for you.</p>
</div>
<span class="comment-copy">I updated my answer. Thank you</span>
<span class="comment-copy">US Eastern time is only -5 during <i>standard</i> time.  It switches to -4 when <i>daylight</i> time is in effect.  Hence the necessity for libraries like pytz.</span>
<span class="comment-copy">@MattJohnson It's just an example, but I used  <i>EST</i> for that reason. EST is always UTC-5, EDT is always UTC-4, ET switches between the two.</span>
<span class="comment-copy">Exactly.  The OP asked for "eastern".  Of course they could be talking about eastern time in <i>australia</i> as well.  lol. :)</span>
<span class="comment-copy">@MattJohnson I see your confusion now. I edited it to hopefully make it more clear that EST was just an example, not meant to actually be the OP's timezone.</span>
<span class="comment-copy">how do you suggest to choose between EST and EDT? <a href="http://stackoverflow.com/a/25887393/4279">Use the tz database instead: <code>datetime.now(pytz.timezone('America/New_York')).date()</code></a>. It finds the correct utc offset for the current date automatically.</span>
