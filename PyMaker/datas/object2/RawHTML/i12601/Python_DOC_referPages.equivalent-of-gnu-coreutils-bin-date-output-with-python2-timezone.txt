<div class="post-text" itemprop="text">
<p>I want to have a datetime formatted like <code>%F %T %Z</code> in Python2.  If I do it naively with <code>datetime.now()</code> the timezone part appears empty.  I've learned that Python2 doesn't have support for <code>tzinfo</code> objects, but there's a 3rd-party <code>pytz</code> module.</p>
<p>Unfortunately, in order to construct a <code>tzinfo</code> with <code>pytz</code> I still need to name the timezone explicitly.  What I would like to have is a combination of <code>localtime()</code> and a <em>default</em> <code>tzinfo</code>, so that I get current time in local timezone.</p>
<p>Compare the following three outputs:</p>
<pre><code>&gt;&gt;&gt; from datetime import datetime
&gt;&gt;&gt; datetime.now().strftime("%F %T %Z")
"2016-01-11 16:13:22 "

&gt;&gt;&gt; import pytz
&gt;&gt;&gt; datetime.now(pytz.timezone('CET')).strftime("%F %T %Z")
"2016-01-11 16:13:37 CET"

&gt;&gt;&gt; from time import localtime
&gt;&gt;&gt; datetime(*(localtime()[:7])).strftime("%F %T %Z")
"2016-01-11 16:14:24 "
</code></pre>
<p>The second one is what I want, sans the need to specify the timezone explicitly.  On the other hand, <code>/bin/date</code> doesn't need any hint to look the timezone up:</p>
<pre><code>$ /bin/date
Mo 11. Jan 16:17:31 CET 2016
</code></pre>
<p>Looking at the source code for <code>date(1)</code> I can see that when compiled with glibc it relies on <code>tm_zone</code> field being part of <code>struct tm</code>, but otherwise will require <code>TZ</code> environment variable to be set.</p>
<p>Any ideas how to make this work with Python2 w/o hard-coding the timezone?</p>
</div>
<div class="post-text" itemprop="text">
<p>On a platform with <code>/bin/date</code> (non-Windows), to print the current local time in a given format:</p>
<pre><code>&gt;&gt;&gt; import time
&gt;&gt;&gt; time.strftime('%F %T %Z')
'2016-01-12 08:12:50 CET'
</code></pre>
<p>To reproduce it portably, you need <code>tzlocal</code> that finds <code>pytz</code> tzinfo that corresponds to your local timezone:</p>
<pre><code>#!/usr/bin/env python
from datetime import datetime
import tzlocal  # pip install tzlocal

local_time = datetime.now(tzlocal.get_localzone())
print(local_time.strftime('%Y-%m-%d %H:%M:%S%z (%Z)'))
# -&gt; 2016-01-12 08:12:51+0100 (CET)
</code></pre>
<p><a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow"><code>%F</code>, <code>%T</code></a> are not portable.</p>
<p>This code works even during a DST transition when the local time may be ambiguous.</p>
</div>
<span class="comment-copy">Your OS knows the timezone, but not necessarily in a form that <code>pytz</code> can understand. See <a href="http://stackoverflow.com/questions/13218506/how-to-get-system-timezone-setting-and-pass-it-to-pytz-timezone" title="how to get system timezone setting and pass it to pytz timezone">stackoverflow.com/questions/13218506/â€¦</a></span>
<span class="comment-copy">Awesome, thank you!</span>
