<div class="post-text" itemprop="text">
<p>I'm trying to re-structure a json file with python. The json is an json-array where each element is a dictionary. In these dictionaries there are a lot of repeated values for some key that is important to me, so I want to put all the other keys of every dictionary in an array for the same value of the important key, creating a json with a different structure.</p>
<p>Then for each different value of some key I want initialize an array. The problem is that the number of different values for this key is <em>a priori</em> unknown. An example in code that I want:</p>
<pre><code>data = json.loads(originalJson)

# List of different authors for key ['author']
authors = []
for x in data:
    if x['author'] not in authors:
        authors.append(x['author'])

newData = []      
for author in authors:
    for x in data:
        if x['author'] == author:
  # And here is the code that initialize 
  # a different array for each author
</code></pre>
<p>P.S.: if you know a more efficient way to re-structure a json please let me a link, example or something. You will notice I'm "very beginner" with python.</p>
<p>EDIT: example of input and output</p>
<pre><code>originalJson = [{ke1 : value, key2 : value, key3 : value,...},{...},....]

wantedJson = [{key1 : valueX,[{key2 : value, ...},{key3 : value,...},...]},
{key1 : valueY, [...]},{key1 : valueZ,[...]}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>collections.defaultdict</code></a>, like this</p>
<pre><code>from collections import defaultdict
d = defaultdict(list)
for x in data:
    d[x['author']].append(x)
</code></pre>
<p>Whenever an author is found, who is not in the dictionary, a new list will be created and used as the value and we append the current item to the list.</p>
<hr/>
<p>You can do the same, with normal dictionaries, like this</p>
<pre><code>d = {}
for x in data:
    d.setdefault(x['author'], []).append(x)
</code></pre>
<hr/>
<p>If you want to maintain the order of authors as they are read from the file, then you can use <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow"><code>collections.OrderedDict</code></a>, like this</p>
<pre><code>from collections import OrderedDict
d = OrderedDict
for x in data:
    d.setdefault(x['author'], []).append(x)
</code></pre>
</div>
<span class="comment-copy">Please post an example of input and expected matching output.</span>
<span class="comment-copy">Why not use a dictionary for new_data with the author as key?</span>
<span class="comment-copy">Your question is too vague. As @brunodesthuilliers said we need some sample input and output.</span>
