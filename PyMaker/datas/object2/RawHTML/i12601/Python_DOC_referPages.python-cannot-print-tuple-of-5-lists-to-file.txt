<div class="post-text" itemprop="text">
<p>I am trying to print a tuple of 5 lists to a file in Python, however, I get the error:</p>
<pre><code>TypeError: Can't convert 'tuple' object to str implicitly
</code></pre>
<p>the following is my code:</p>
<pre><code>def listjoin():
illegallist = zip(carreglist, illegalspeed, illegaltime, illegalname, illegaladdress)
for item in illegallist:
    illegaldatafile.write("Registration: "+item)
    illegaldatafile.write("\n")
    illegaldatafile.write("Speed "+item)
    illegaldatafile.write("\n")
    illegaldatafile.write("Time: "+item)
    illegaldatafile.write("\n")
    illegaldatafile.write("Name: "+item)
    illegaldatafile.write("\n")
    illegaldatafile.write("Address: "+item)
    illegaldatafile.write("\n")
    illegaldatafile.write("\n")
    illegaldatafile.close()
</code></pre>
<p>I'm trying to get something like this:</p>
<pre><code>Registration: BH34JKX
Speed: 80
Time: 6:45:21
Name: John Adams
Address: SW34 7MN

Registration: DX34JKS
</code></pre>
<p>etc..
 (Accidentally posted too early)</p>
<p>I printed a list toa file earlier in my code, and it did not need to be converted to a string. I can't do this:</p>
<pre><code>illegallist = zip(str(carreglist, illegalspeed, illegaltime, illegalname, illegaladdress))
</code></pre>
<p>Because str() only takes 3 arguments.
I tried putting it here:</p>
<pre><code>illegallist = str(zip(carreglist, illegalspeed, illegaltime, illegalname, illegaladdress))
</code></pre>
<p>But then It just says that my file is closed.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of calling each loop iteration's item simply <code>item</code>, you should unpack it so you can more easily reference each object. String formatting will also be helpful:</p>
<pre><code>def listjoin():
    illegallist = zip(carreglist, illegalspeed, illegaltime, illegalname, illegaladdress)
    for reg,speed,timing,name,address in illegallist:
        illegaldatafile.write("Registration: {}\n".format(reg))
        illegaldatafile.write("Speed: {}\n".format(speed))
        illegaldatafile.write("Time: {}\n".format(timing))
        illegaldatafile.write("Name: {}\n".format(name))
        illegaldatafile.write("Address: {}\n\n".format(address))
    illegaldatafile.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are appending the same tuple <code>item</code> over and over to a string. You have to take individual elements from this tuple. This is my (more compact) proposal:</p>
<pre><code>colnames = ['Registration', 'Speed', 'Time', 'Name', 'Address']
for tup in zip(carreglist, illegalspeed, illegaltime, illegalname, illegaladdress):
    for colname, value in zip(colnames, tup):
        illegaldatafile.write('{}: {}\n'.format(colname, value))
    illegaldatafile.write('\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>print</code> statement with <code>file</code> parameter and if you have only 5 tuples you could use <code>%</code>:</p>
<pre><code>def listjoin():
    illegallist = zip(carreglist, illegalspeed, illegaltime, illegalname, illegaladdress)
    for item in illegallist:
        print("Registration: %s" % item[0], file=illegaldatafile)
        print("Speed: %s" % item[1], file=illegaldatafile)
        print("Time: %s" % item[2], file=illegaldatafile)
        print("Name: %s" % item[3], file=illegaldatafile)
        print("Address: %s" % item[4], file=illegaldatafile)
        print(file=illegaldatafile)
    illegaldatafile.close()
</code></pre>
</div>
<span class="comment-copy">1. You can only write strings to files. 2. Why are you trying to write the exact same object (<code>item</code>) on each line and expecting that to produce a different result each time?</span>
<span class="comment-copy">Unpack the list, and if they're not strings cast them.</span>
<span class="comment-copy">@MalikBrahimi: You mean "unpack the <i>tuples</i>".</span>
<span class="comment-copy">1) Python 3's <code>str</code> constructor <i>can</i> take up to 3 args, but only the first arg is the object you want to convert to string; the other 2 args relate to the string's encoding, see <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer">the docs</a> for details. 2) You should not close the file in the <code>for</code> loop. Only close it when you've finished writing everything. Even better, use a <code>with</code> statement so your file is closed automatically.</span>
<span class="comment-copy">Thanks for this, it works very well.</span>
<span class="comment-copy">Sorry, but TigerhawkT3's response looks more similar to my own, and I don't want to change it too much.</span>
