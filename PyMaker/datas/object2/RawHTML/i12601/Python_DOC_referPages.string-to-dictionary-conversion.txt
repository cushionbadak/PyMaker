<div class="post-text" itemprop="text">
<p>My code involves importing and exporting usernames and passwords in the form of a dictionary. In order to export the dictionary i changed it in to a string.
This is the imported text file (it is in the same format that the code exports in):</p>
<pre><code>{'account1': 'password'}{'account2': 'password'}
</code></pre>
<p>the code to export is as follows:</p>
<pre><code>accounts=open("accounts.txt","r")
accounts=accounts.read()

newaccount={username:password}#user name and password are user defined 
str1=str(newaccount)
updated=open("accounts.txt","w")
updated.write(accounts)
updated.write(str1)
updated.close()
</code></pre>
<p>I want the dictionary to look like this:</p>
<pre><code>{'account1':'password', 'account2':'password'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If your format is always like posted, you can parse it into dicts by splitting:</p>
<pre><code>from ast import literal_eval
with open("in.txt") as f:
    d = {}
    for line in f:
        ds = [literal_eval(ele + "}") for ele in line.split("}") if ele]
        for _d in ds:
           d.update(_d)
    print(d)
</code></pre>
<p>Which will give  you:</p>
<pre><code>{'account2': 'password', 'account1': 'password'}
</code></pre>
<p>When you want to save it do yourself a favour and use json or pickle i.e:</p>
<pre><code>from json import dump, load

dump(d, open("in.txt","w"))
</code></pre>
<p>Then just load it when you need it:</p>
<pre><code>d = load(open("in.txt")))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you turn the string representation of the dictionary back into a dictionary and update it, your method would work:</p>
<pre><code>#!python3
import ast

try:
    with open('accounts.txt') as f:
        accounts=ast.literal_eval(f.read())
except FileNotFoundError:
    accounts = {}

username = input('User name? ')
password = input('Password? ')
accounts[username] = password

with open('accounts.txt','w') as f:
    f.write(str(accounts))
</code></pre>
<p>Example:</p>
<pre><code>C:\&gt;test
User name? account1
Password? password

C:\&gt;type accounts.txt
{'account1': 'password'}

C:\&gt;test
User name? account2
Password? password

C:\&gt;type accounts.txt
{'account1': 'password', 'account2': 'password'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Is it possible to load all the accounts in memory? If so, easiest way is to load and write the content as json:</p>
<pre><code>import json
with open("accounts.txt", "r") as fp:
   accounts = json.load(fp)
accounts["newUser"] = "password"
with open("accounts.txt", "w") as fp:
   json.dumps(accounts, fp)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use the python pickle module:</p>
<pre><code>import pickle
accounts = {'account1': 'password'}{'account2': 'password'}
pickle.dump( accounts, open( "save.p", "wb" ) )
</code></pre>
<p>To load the dictionary,   </p>
<pre><code>accounts = pickle.load( open( "save.p", "rb" ) )
</code></pre>
<p>You could now modify the dictionary and again save it using <code>pickle.dump</code></p>
</div>
<span class="comment-copy">Why don't you export your dictionaries in a easier-to-parse format?</span>
<span class="comment-copy">Do no re-invent the wheel, unless it's for training purposes. Dump the dictionary in the file using <a href="https://docs.python.org/3/library/json.html#basic-usage" rel="nofollow noreferrer">json.dump</a> and load it with <a href="https://docs.python.org/3/library/json.html#json.load" rel="nofollow noreferrer">json.load</a></span>
<span class="comment-copy">I suggest you use <code>json</code> object to save your dictionaries, because that way, you won't be able to read it back from your file easily</span>
<span class="comment-copy">Convert the text into a list and update the dictionary from the list.</span>
<span class="comment-copy">Would you mind providing an example of the text you are trying to export into a dictionary?</span>
