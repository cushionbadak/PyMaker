<div class="post-text" itemprop="text">
<p>I'm currently trying to make a simple code (basically mad-libs) and I made a variable called <code>time</code>. The user is supposed to type in something like months or days. If a user inputs month or day, an <code>if</code> statement is supposed to add an <code>"s"</code> to make it plural:</p>
<pre><code>time = str(input("Pick a measurement of time (ex. days): "))
if time[len(time)] != "s":
   time = time + "s"
</code></pre>
<p>When I test this code out, it gives me this error:</p>
<pre><code>Traceback (most recent call last):
   File "D:/nikis_staff/PROGRAMMING/madlibs.py", line 51, in &lt;module&gt;
      if time[len(time)] != "s":
IndexError: string index out of range
</code></pre>
<p>I know that <code>string index out of range</code> means the string is longer than I thought it was but I am using <code>len()</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Indexes in Python <a href="https://en.wikipedia.org/w/index.php?title=Zero-based_numbering&amp;oldid=695682632" rel="nofollow noreferrer">begin with 0</a>, i.e. the first element in a string, list, tuple, etc. is: <code>0</code>. Hence the last element of <code>s</code> is <code>len(s)-1</code>. So <code>time[len(time)]</code> addresses the element after the last element, which of course causes an <a href="https://docs.python.org/3/library/exceptions.html#IndexError" rel="nofollow noreferrer">IndexError</a>. Use <code>time[len(time) - 1]</code> instead, or better yet: <code>time[-1]</code>.</p>
<p>Often you will find <a href="https://stackoverflow.com/questions/509211/explain-pythons-slice-notation">slicing</a> <code>s[-1:]</code> helpful, too, because it returns <code>''</code> for an empty string instead of raising an IndexError.</p>
<p>C.f. <a href="http://www.tutorialspoint.com/python/python_lists.htm" rel="nofollow noreferrer">http://www.tutorialspoint.com/python/python_lists.htm</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If a string is of length 5, like <code>'hello'</code>, then the max index is <code>4</code> since indexing is zero-based (starts from 0, not 1).</p>
<pre><code>&gt;&gt;&gt; len('hello')
5
&gt;&gt;&gt; 'hello'[4]
'o'
</code></pre>
<p>You can avoid calculating the length by using relative offsets for the index. So, if you want the last character, use -1, like this:</p>
<pre><code>&gt;&gt;&gt; 'hello'[-1]
'o'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The right code is:</p>
<p><code>time = str(input("Pick a measurement of time (ex. days): "))
if time[len(time) - 1] != "s":
   time = time + "s"</code></p>
<p>The length of <code>time</code> is <code>len(time)</code>, but the largest index of <code>time</code> is <code>len(time) - 1</code> since the index starts from zero.</p>
<p>Or you can just use <code>if time[-1] != "s":</code> to get and judge the tail element.</p>
</div>
<span class="comment-copy">More idiomatic: <code>if not time.endswith("s"):</code></span>
<span class="comment-copy">Thank you so much!!! It worked :D</span>
<span class="comment-copy">You're welcome! Next to all programming languages have zero-based indexes. Of the languages I know only Pascal/Delphi and Matlab use 1-based indexes. The rationale is that the calculation is much easier to do in a 0-based system.</span>
<span class="comment-copy">Could you tell me why if you think my answer is not useful?</span>
