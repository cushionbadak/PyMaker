<div class="post-text" itemprop="text">
<p>I would like to be able to break out a list of list into chunks, grouped by the zeroth element. The zeroth element (Group Number in this example), must always stayed grouped. If two multiple groups can be paired together as long as they stay under the chunk size, they should be. I've been break out into sublists based on the chunk size, but can't figure out how to get the Group Numbers to stay together.</p>
<pre><code>def chunks(l, n):

    for i in xrange(0, len(l), n):
        yield l[i:i+n]

chunk_size = 3
mydata = [['Group 1', 140], ['Group 1', 210], ['Group 1', 112], ['Group 2', 130], ['Group 3', 124], ['Group 3', 1], ['Group 4', 2]]
test = chunks(mydata, chunk_size )
for x in test:
    print x
</code></pre>
<p>Expected Output:</p>
<pre><code>[['Group 1', 140], ['Group 1', 210], ['Group 1', 112]]
[['Group 2', 130], ['Group 3', 124], ['Group 3', 1]]
[['Group 4', 2]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><code>itertools.groupby</code></a>, you can group an iterable into sub groups.</p>
<pre><code>import itertools

def chunks(l, n):
    chunk = []
    for key, grp in itertools.groupby(l, key=lambda x: x[0]):
        grp = list(grp)
        if len(chunk) + len(grp) &lt;= n:
            chunk.extend(grp)
            grp = []

        while len(chunk) + len(grp) &gt;= n:
            yield chunk
            chunk, grp = grp, []
    if chunk:
        yield chunk
</code></pre>
<p>Usage:</p>
<pre><code>&gt;&gt;&gt; chunk_size = 3
&gt;&gt;&gt; mydata = [ 
...     ['Group 1', 140], ['Group 1', 210], ['Group 1', 112],
...     ['Group 2', 130], ['Group 3', 124], ['Group 3', 1], ['Group 4', 2]]
&gt;&gt;&gt; test = chunks(mydata, chunk_size )
&gt;&gt;&gt; for x in test:
...     print x
... 
[['Group 1', 140], ['Group 1', 210], ['Group 1', 112]]
[['Group 2', 130], ['Group 3', 124], ['Group 3', 1]]
[['Group 4', 2]]
</code></pre>
</div>
<span class="comment-copy">What's the expected output?</span>
<span class="comment-copy">@falsetru added!</span>
