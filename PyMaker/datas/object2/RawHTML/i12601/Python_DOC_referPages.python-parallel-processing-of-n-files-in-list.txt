<div class="post-text" itemprop="text">
<p>There is list of files which I am processing one by one with some function:</p>
<pre><code>list_of_files = [file_1, file_2, file_3, .... file_n]

# each file we are processing in function function_x(file)

for file in list_of_files:
   function_x(file)
</code></pre>
<p>But it takes too long to process one file so I would like to process 4 files in paralel, when any of them is finished, to continue with next form list_of_files</p>
</div>
<div class="post-text" itemprop="text">
<p>Try to use <a href="https://docs.python.org/2/library/multiprocessing.html#multiprocessing.pool.multiprocessing.Pool.map" rel="nofollow">parallel map</a>:</p>
<pre><code>import multiprocessing
pool = multiprocessing.Pool()
pool.map(function_x, list_of_files)
</code></pre>
</div>
<span class="comment-copy">See <a href="http://stackoverflow.com/a/2846697/2296458">this example</a> for how you could use threading. Similarly you could use <a href="https://stackoverflow.com/questions/8753306/python-multiprocessing-for-parallel-processes">mulitprocessing</a></span>
<span class="comment-copy">well, take a look at <a href="https://docs.python.org/3/library/concurrency.html" rel="nofollow noreferrer">Concurrency documentation</a> on the python site, try it yourself, and when you encounter an issue, then come back here with your code, then you'll get help.</span>
<span class="comment-copy">How to make sure it it waits till processing one of four files is finished before continuing with next one. Code above would process all N files at same time and my machine would crash</span>
<span class="comment-copy">@user3292147 If you read the documentation for <code>Pool</code> it says <i>"If processes is <code>None</code> then the number returned by <code>cpu_count()</code> is used"</i> So it will not create a process for <code>N</code> files, it will create up to <code>cpu_count</code> number of processes unless you tell it otherwise.</span>
