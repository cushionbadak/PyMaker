<div class="post-text" itemprop="text">
<p>I have a large file from which I need to load into a list of strings. each element will contain text until a ',' that immediately follows numbers</p>
<p>for eg:</p>
<pre><code>this is some text, value 45789, followed by, 1245, and more text 78965, more random text 5252,
</code></pre>
<p>this should become:</p>
<pre><code>["this is some text, value 45789", "followed by, 1245", "and more text 78965", "more random text 5252"]
</code></pre>
<p>I currently doing <code>re.sub(r'([0-9]+),','~', &lt;input-string&gt;)</code> and then splitting on '~' (since my file doesnt contain ~) but this throws out the numbers before the commas.. any thoughts?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow"><code>re.split</code></a> with <a href="http://www.regular-expressions.info/lookaround.html" rel="nofollow">positive look-behind assertion</a>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; 
&gt;&gt;&gt; text = 'this is some text, value 45789, followed by, 1245, and more text 78965, more random text 5252,'
&gt;&gt;&gt; re.split(r'(?&lt;=\d),', text)
['this is some text, value 45789',
 ' followed by, 1245',
 ' and more text 78965',
 ' more random text 5252',
 '']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want it to deal with spaces as well, do this:</p>
<pre><code>string = "  blah, lots  ,  of ,  spaces, here "
pattern = re.compile("^\s+|\s*,\s*|\s+$")
result = [x for x in pattern.split(string) if x]
print(result)
&gt;&gt;&gt; ['blah', 'lots', 'of', 'spaces', 'here']
</code></pre>
</div>
<span class="comment-copy"><code>re.split('(?&lt;=\d),', line)</code> ?</span>
