<div class="post-text" itemprop="text">
<p>I have a text file which includes lines like this:</p>
<pre><code>&lt;pattern number=1 theme=pseudo&gt;
&lt;pattern number=2 theme=foo&gt;
&lt;pattern number=3 theme=bar&gt;
</code></pre>
<p>I'm selecting a random line with this function:</p>
<pre><code>def find_random_pattern(theme):
    found_lines = []
    pattern = open('poempatterns.txt','r')
    for line in pattern:
        found = re.findall("theme="+theme,line)
        for match in found:
            found_lines.append(line)

    selectedline = random.choice(found_lines)
    return selectedline
</code></pre>
<p>let's say it returned <code>&lt;pattern number=1 theme=pseudo&gt;</code></p>
<p>When I check it with this condition, it returns <code>False</code></p>
<pre><code>if find_random_pattern("pseudo") == "&lt;pattern number=1 theme=pseudo&gt;":
    return True
else:
    return False
</code></pre>
<p>Why these two strings are not matching?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are expecting that <code>re.findall</code> returns the whole line but it returns the matched part:</p>
<pre><code>&gt;&gt;&gt; line = "&lt;pattern number=1 theme=pseudo&gt;"
&gt;&gt;&gt; import re
&gt;&gt;&gt; re.findall("theme=pseudo", line)
['theme=pseudo']
</code></pre>
<p>I suggest you use a pattern that matches the whole line, for example:</p>
<pre><code>&gt;&gt;&gt; re.findall(".*theme=pseudo.*", line)
['&lt;pattern number=1 theme=pseudo&gt;']
</code></pre>
<p>Your final code would look like:</p>
<pre><code>def find_random_pattern(theme):
    found_lines = []
    pattern = open('poempatterns.txt','r')
    for line in pattern:
        # Call strip() just in case you have some blank spaces or \n at the end
        found = re.findall(".*theme=%s.*" % theme, line.strip())
        for match in found:
            found_lines.append(line)

    selectedline = random.choice(found_lines)
    return selectedline
</code></pre>
<p>A solution a bit more concise would be:</p>
<pre><code>import random
import re
import string

def find_random_pattern(theme):
    lines = open('poempatterns.txt','r').readlines()
    stripped_lines = map(string.strip, lines)
    found_lines = filter(lambda l: re.match(".*theme=%s.*" % theme, l), stripped_lines)
    return random.choice(found_lines)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>re.findall</code> does return the match only not the whole <code>line</code>. 
Quoting from <a href="https://docs.python.org/3/library/re.html?highlight=re#module-re" rel="nofollow">Python Docs.</a> :</p>
<blockquote>
<p>re.findall(pattern, string, flags=0) Return all non-overlapping
  matches of pattern in string, as a list of strings. The string is
  scanned left-to-right, and matches are returned in the order found. If
  one or more groups are present in the pattern, return a list of
  groups; this will be a list of tuples if the pattern has more than one
  group. Empty matches are included in the result unless they touch the
  beginning of another match.</p>
</blockquote>
<p><strong>DEMO:</strong></p>
<pre><code>&gt;&gt;&gt; s = 'Good morning Gotham!'
&gt;&gt;&gt; re.findall('Go', s)
['Go', 'Go']
</code></pre>
<p>That's being said, if your requirement is to find if <code>theme</code> exits in <code>line</code>, then you really don't need <code>regex</code> for that:</p>
<pre><code>def find_random_pattern(theme):
    with open('poempatterns.txt','r') as pattern:
        found_lines = [line for line in pattern if theme in line]
    selectedline = random.choice(found_lines)
    return selectedline
</code></pre>
</div>
<span class="comment-copy">If you are only checking that <code>theme=pseudo</code> in <code>line</code> then I really don't see why you need <code>regex</code> here, just <code>in</code> is enough</span>
<span class="comment-copy"><b>Hint:</b> what happens if you do <code>print(find_random_pattern("pseudo"))</code>? (Or <code>print(re.findall(...))</code>.)</span>
<span class="comment-copy">your first function returns false also but second one works. thank you</span>
