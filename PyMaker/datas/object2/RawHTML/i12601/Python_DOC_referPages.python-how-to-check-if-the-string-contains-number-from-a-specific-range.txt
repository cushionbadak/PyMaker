<div class="post-text" itemprop="text">
<p>I've a long list of strings; they are basically filenames. The format is like:</p>
<pre><code>["abcdedf_023.txt",
 "foeoioo_011.txt", 
 "sdjskdsjd_3131.txt", 
 "dsdsdsrer_044.txt", 
 "rgfbfgrt_12.txt"]
</code></pre>
<p>and so on.</p>
<p>What I need is to filter out the names containing numbers greater than <code>15</code> at the end. So with the above input, the desired outout would be:</p>
<pre><code>["abcdedf_023.txt",
 "sdjskdsjd_3131.txt", 
 "dsdsdsrer_044.txt"] 
</code></pre>
<p>This number (15) is not fixed and provided by user as input.</p>
</div>
<div class="post-text" itemprop="text">
<p>Like below? Just use <code>\d+</code> to search numbers?</p>
<pre><code>[i for i in l if int(re.search('\d+', i).group(0)) &gt; 15]
</code></pre>
<p>Demo:</p>
<pre><code>["abcdedf_023.txt", "sdjskdsjd_3131.txt", "dsdsdsrer_044.txt"]
</code></pre>
<hr/>
<p>You can also search for <code>_(\d+).txt</code> (use <code>()</code> to catch the numbers like):</p>
<pre><code>[i for i in f if int(re.search('_(\d+).txt', i).group(1)) &gt; 15]
</code></pre>
<p>To remove something like <code>"abc122dedf_01.txt"</code> in your file (if you don't want it).</p>
<hr/>
<p>If you only need the last two numbers in the filenames, for example get <code>03</code> from <code>1203</code>:</p>
<pre><code>[i for i in f if int(re.search('\d+', i).group(0)[-2:]) &gt; 15]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would use <code>split</code></p>
<pre><code>&gt;&gt;&gt; l = ["abcdedf_023.txt",
"foeoioo_011.txt", 
"sdjskdsjd_3131.txt", 
"dsdsdsrer_044.txt", 
"rgfbfgrt_12.txt"]
&gt;&gt;&gt; [i for i in l if int(i.split('.')[0].split('_')[-1]) &gt; 15 ]
['abcdedf_023.txt', 'sdjskdsjd_3131.txt', 'dsdsdsrer_044.txt']
</code></pre>
<p>Replace <code>15</code> in the above list comprehension with the variable which actually contains the number you want to check with.. Note that the variable must be of type interger or convert it to <code>int</code> during  condition checking.</p>
</div>
<span class="comment-copy">I think I would need to remove underscore '_' before converting the search result to integer?</span>
<span class="comment-copy">@user2436428: Nope, I'm using <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><code>re.search()</code></a> in my code. So it will keep searching unless it find a integer.</span>
<span class="comment-copy">@user2436428: If there's other integers before that <code>_</code>, and you wish you could ignore them, try the second or the third solution.</span>
<span class="comment-copy">I am talking about this statement: int(re.search('_(\d+).txt', i).group(0))</span>
<span class="comment-copy">@user2436428: Oh, my bad. As you can see I'm using <code>(\d+)</code> to catch the integers, but I forgot change <code>.group(0)</code> to <code>.group(1)</code>. I've edited my answer.</span>
