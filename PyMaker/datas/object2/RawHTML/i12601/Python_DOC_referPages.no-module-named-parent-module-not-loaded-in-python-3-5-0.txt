<div class="post-text" itemprop="text">
<p>I have this structure for my package:</p>
<pre><code>/code_trou
    __init__.py
    Main.py
    Menu.py
    /postprocessing
    /preprocessing
    Mesh.py
    Point.py
    /processing
        FDM.py
    /tools
        dllmrg.py
        errormrg.py
        /__pycache_
           errormrg.cpython-35.pyc
</code></pre>
<p>When I execute my <code>Main.py</code> with:</p>
<pre><code>from tools.errormrg import *
</code></pre>
<p>I have this error: <code>"No module named 'tools'"</code></p>
<p>It's the same when I execute <code>Point.py</code> with:</p>
<pre><code>from tools.dllmrg import *
</code></pre>
<p>For <code>Point.py</code> I tried <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow">the Intra-package References described in the doc</a> and it doesn't seem to work: I get the error <code>"Parent module '' not loaded, cannot perform relative import"</code> when executing <code>Point.py</code> with this instead:</p>
<pre><code>from ..tools.dllmrg import *
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What make a directory a Python package is the presence of a <code>__init__.py</code> file. There are no such files in your <code>tools</code> and  <code>processing</code> directory so Python does not recognize them as packages.</p>
<p><a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow">https://docs.python.org/3/tutorial/modules.html#packages</a></p>
</div>
<span class="comment-copy">You need an <code>__init__.py</code> in <code>/tools</code>, to make that a module too (same for the other sub-modules).</span>
