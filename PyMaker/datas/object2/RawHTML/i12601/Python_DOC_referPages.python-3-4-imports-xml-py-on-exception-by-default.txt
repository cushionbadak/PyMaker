<div class="post-text" itemprop="text">
<p>for some weird reason my Python interpreter executes the file ./xml.py if an exception occurs. I have absolutely no idea why this happens - and I definitly do not want this to happen.</p>
<p>I've set up a new directory with a single file, named xml.py, containing just the line 'print("Hello xml.py")'. After starting python3 I enter "a" at the interpreter's prompt. This should show me a simple NameError since a is of course not defined, but instead prints "Hello xml.py" (i.e. executes ./xml.py) and a bunch of other errors, and only then dumps the NameError to the screen:</p>
<pre><code>$ python3
Python 3.4.3 (default, Mar 26 2015, 22:03:40) 
[GCC 4.9.2] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; a
Hello xml.py
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'a' is not defined
Error in sys.excepthook:
Traceback (most recent call last):
  File "&lt;frozen importlib._bootstrap&gt;", line 2218, in _find_and_load_unlocked
AttributeError: 'module' object has no attribute '__path__'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/apport_python_hook.py", line 63, in apport_excepthook
    from apport.fileutils import likely_packaged, get_recent_crashes
  File "/usr/lib/python3/dist-packages/apport/__init__.py", line 5, in &lt;module&gt;
    from apport.report import Report                                                                                                                         
  File "/usr/lib/python3/dist-packages/apport/report.py", line 15, in &lt;module&gt;                                                                               
    import xml.dom, xml.dom.minidom                                                                                                                          
ImportError: No module named 'xml.dom'; 'xml' is not a package                                                                                               

Original exception was:                                                                                                                                      
Traceback (most recent call last):                                                                                                                           
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;                                                                                                                        
NameError: name 'a' is not defined 
</code></pre>
<p>After deleting xml.py, everything's back to normal:</p>
<pre><code>$ rm xml.py 
$ python3
Python 3.4.3 (default, Mar 26 2015, 22:03:40) 
[GCC 4.9.2] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; a
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'a' is not defined
&gt;&gt;&gt; 
</code></pre>
<p>Simple and short question: What the hell is happening here?</p>
</div>
<div class="post-text" itemprop="text">
<p>These bits are the clues:</p>
<pre><code>Error in sys.excepthook:
</code></pre>
<p>…</p>
<pre><code>Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/apport_python_hook.py", line 63, in apport_excepthook
    from apport.fileutils import likely_packaged, get_recent_crashes
  File "/usr/lib/python3/dist-packages/apport/__init__.py", line 5, in &lt;module&gt;
    from apport.report import Report                                                                                                                         
  File "/usr/lib/python3/dist-packages/apport/report.py", line 15, in &lt;module&gt;                                                                               
    import xml.dom, xml.dom.minidom                                                                                                                          
ImportError: No module named 'xml.dom'; 'xml' is not a package
</code></pre>
<p><code>apport</code> is <a href="https://wiki.ubuntu.com/Apport" rel="nofollow">part of Ubuntu</a>, and, for better or worse, seems to try to trap all Python exceptions (using <a href="https://docs.python.org/3/library/sys.html#sys.excepthook" rel="nofollow"><code>sys.excepthook</code></a>) and handle them. When doing that, it tries to import the <code>xml</code> package (<a href="https://docs.python.org/3/library/xml.html" rel="nofollow">part of the Python standard library</a>). Because you’ve aliased that package with a local file, it imports that file instead, doesn’t find the package it expects, and throws another exception.</p>
<p>You could rename your <code>xml.py</code> to something that doesn’t alias a package from the standard library, or put this line early in your program’s execution to disable <code>apport</code>’s exception hook:</p>
<pre><code># reassign sys.excepthook to its initial value
sys.excepthook = sys.__excepthook__
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>Apport</code> is a program that ships with Ubuntu. The main purpose of this program is to detect program crashes and report them. Whenever an exception occurs, Apport tries to handle it using an exception hook. There's a bug report on this topic here: <a href="https://bugs.launchpad.net/ubuntu/+source/apport/+bug/109955" rel="nofollow noreferrer">https://bugs.launchpad.net/ubuntu/+source/apport/+bug/109955</a> </p>
<p>Now this is happening:  when you try to type in <code>a</code> in the console, this execption occurs: </p>
<pre><code>Traceback (most recent call last):                                                                                                                           
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;                                                                                                                        
NameError: name 'a' is not defined 
</code></pre>
<p>Apport had an exception hook set which is invoked on this exception. Apport goes ahead and tries to report it. During this process, it tries to import a package named <code>xml</code> from the standard library. However you named your file <code>xml.py</code> so it shadows the <code>xml</code> package from the standard library. So the import fails: </p>
<pre><code>Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/apport_python_hook.py", line 63, in apport_excepthook
    from apport.fileutils import likely_packaged, get_recent_crashes
  File "/usr/lib/python3/dist-packages/apport/__init__.py", line 5, in &lt;module&gt;
    from apport.report import Report                                                                                                                         
  File "/usr/lib/python3/dist-packages/apport/report.py", line 15, in &lt;module&gt;                                                                               
    import xml.dom, xml.dom.minidom                                                                                                                          
ImportError: No module named 'xml.dom'; 'xml' is not a package    
</code></pre>
<p>Please note, <code>xml</code> is a package in the standard library (it has an <code>__init__.py</code> for example). However, you created a module (<code>xml.py</code> file). So it can not import <code>xml.dom</code> from it. </p>
<p>It works fine after you remove <code>xml.py</code> because then there is no longer a module in the working directory that shadows the one in the standard directory. </p>
<p><strong>Disabling Apport:</strong> If the apport exception handling annoys you, you can disable it following this thread: <a href="https://askubuntu.com/questions/93457/how-do-i-enable-or-disable-apport">https://askubuntu.com/questions/93457/how-do-i-enable-or-disable-apport</a> - however, this would disable error reporting in general which I don't recommend. </p>
</div>
<span class="comment-copy">Thank you for the explanation!</span>
<span class="comment-copy">Thank you for the explanation!</span>
<span class="comment-copy">You can upvote multiple answers if they helped you!</span>
