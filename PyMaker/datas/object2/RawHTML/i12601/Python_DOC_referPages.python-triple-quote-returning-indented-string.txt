<div class="post-text" itemprop="text">
<p>I have the following code:</p>
<pre><code>def bear_room():
    print("""There is a bear here
    The bear has a bunch of honey
    The fat bear is in front of another door
    How are you going to move the bear?
    """)
</code></pre>
<p>And it returns the following:</p>
<pre><code>There is a bear here
    The bear has a bunch of honey
    The fat bear is in front of another door
    How are you going to move the bear?
</code></pre>
<p>Can anyone advise how I can get rid of the indentation on lines 2, 3, and 4?</p>
</div>
<div class="post-text" itemprop="text">
<p>Please check this answer: <a href="https://stackoverflow.com/a/2504457/1869597">https://stackoverflow.com/a/2504457/1869597</a></p>
<p>In general, one of your options is to use:</p>
<pre><code>def bear_room():
    print("There is a bear here\n"
          "The bear has a bunch of honey\n"
          "The fat bear is in front of another door\n"
          "How are you going to move the bear?"
    )
</code></pre>
<p>Which is called implicit concatenation.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you can't modify that string literal (for example, it's defined outside of your code), use <a href="https://docs.python.org/3/library/inspect.html#inspect.cleandoc" rel="nofollow"><code>inspect.cleandoc</code></a> or equivalent:</p>
<pre><code>In [2]: import inspect

In [3]: s = inspect.cleandoc("""There is a bear here
   ...:     The bear has a bunch of honey
   ...:     The fat bear is in front of another door
   ...:     How are you going to move the bear?
   ...: """)

In [4]: print(s)
There is a bear here
The bear has a bunch of honey
The fat bear is in front of another door
How are you going to move the bear?
</code></pre>
<p>If you can modify it, it's much easier to remove leading spaces manually:</p>
<pre><code>def bear_room():
    print("""There is a bear here
The bear has a bunch of honey
The fat bear is in front of another door
How are you going to move the bear?
""")
</code></pre>
<p>or use implicit <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-literal-concatenation" rel="nofollow">string literal concatenation</a>:</p>
<pre><code>def bear_room():
    print('There is a bear here\n'
          'The bear has a bunch of honey\n'
          'The fat bear is in front of another door\n'
          'How are you going to move the bear?\n')
</code></pre>
<p>This option will produce expected results if you end strings with newline characters (<code>\n</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>One can use the <a href="https://docs.python.org/2/library/textwrap.html#textwrap.dedent" rel="nofollow">dedent</a> function. The following solution has the 3 advantages </p>
<ul>
<li>one does not have to add <code>\n</code> character at the end of each line, the text can directly be copied from extern source,</li>
<li>one can keep the indentation of our function,</li>
<li>no extra line are inserted before and after of the text</li>
</ul>
<p>The function looks like this:</p>
<pre><code>from textwrap import dedent
dedentString = lambda s : dedent(s[1:])[:-1]

def bear_room():
    s="""
    There is a bear here
    The bear has a bunch of honey
    The fat bear is in front of another door
    How are you going to move the bear?
    """
    print("Start of string : ")
    print(dedentString(s))
    print("End of string")

bear_room()
</code></pre>
<p>The result is :</p>
<pre><code>Start of string :
There is a bear here
The bear has a bunch of honey
The fat bear is in front of another door
How are you going to move the bear?
End of string
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In your original code, after the first line, there is indentation - the indentation inside the triple quoted string is whitespace. So you need to remove those. </p>
<p>The following works:</p>
<pre><code>def bear_room():
    print("""There is a bear here
The bear has a bunch of honey
The fat bear is in front of another door
How are you going to move the bear?""")

bear_room()
</code></pre>
</div>
<span class="comment-copy">I think you want to indent the other strings such that the first <code>"</code> align</span>
<span class="comment-copy">Thanks Jordan..however using your code returned one long sentence. I added \n to the end of each line which did the trick. Appreciate the help.</span>
<span class="comment-copy">Ah, my bad. Yes, <code>\n</code> should be added at the end of each line. I edited the answer.</span>
<span class="comment-copy">Yes, that also works! However for the purpose of keeping the code tidy, I would stick with Jordan's answer above. Because all the code under 'print' resides within the 'bear_room' function. Thanks.</span>
<span class="comment-copy">Sure, if it helps, you can upvote more than one answers.</span>
