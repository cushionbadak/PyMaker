<div class="post-text" itemprop="text">
<p>I have a list of points with their coordinates, looking like this:</p>
<pre><code>[(0,1),(2,3),(7,-1) and so on.]
</code></pre>
<p>What is the Pythonic way to iterate over them and choose three different every time? I can't find simpler solution than using three <code>for</code> loops like this:</p>
<pre><code>for point1 in a:
    for point2 in a:
        if not point1 == point2:
        for point3 in a:
            if not point1 == point3 and not point2 == point3:
</code></pre>
<p>So I'm asking for help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow"><code>itertools.combinations</code></a>:</p>
<pre><code>from itertools import combinations

for point1, point2, point3 in combinations(points, 3):
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import random

lst = [(0, 1), (2, 3), (7, -1), (1, 2), (4, 5)]

random.sample(lst, 3)
</code></pre>
<p>This will just give you 3 points chosen at random from the list. It seems you may want something different. Can you clarify?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/2/library/stdtypes.html#set" rel="nofollow"><code>set</code></a>.</p>
<p>Let's assume your initial set of coordinates is unique.</p>
<pre><code>&gt;&gt; uniquechoices=[(0,1),(2,3),(7,-1) and so on.]
</code></pre>
<p>Fill a set called <code>selected</code> until it has say 3 values, using random selection</p>
<pre><code>&gt;&gt; from random import randint
&gt;&gt; selected=set([])
&gt;&gt; while len(selected) &lt; 3: selected.add(uniquechoices[randomint(0,len(uniquechoices))])
</code></pre>
</div>
<span class="comment-copy">there is always <code>itertools</code>, a module for iterating over lists</span>
<span class="comment-copy">or, if you want to do it your self, <code>range</code> would make for nicer comparison</span>
<span class="comment-copy">Look at <a href="https://docs.python.org/3.5/library/itertools.html#itertools.combinations" rel="nofollow noreferrer"><code>itertools.combinations</code></a> and <a href="https://docs.python.org/3.5/library/itertools.html#itertools.permutations" rel="nofollow noreferrer"><code>itertools.permutations</code></a>.</span>
<span class="comment-copy">Does the list contain any duplicate points? Roughly how many points does it contain? How many triples do you want to generate? Does it matter if you get some duplicate triples?</span>
<span class="comment-copy">Maybe <code>for point1, point2, point3 in combinations(points, 3): ...</code> would be clearer?</span>
<span class="comment-copy">@MarkDickinson Indeed, thank you.</span>
<span class="comment-copy">I do not think it is what OP is expecting as he said "iterate over them and choose three different every time".</span>
<span class="comment-copy">You're right, I didn't understand the question. I guess it depends on what they want to do with the output</span>
<span class="comment-copy">@Delgan: looking at OP's sample code, it really looks like it <i>is</i> what he wants.</span>
<span class="comment-copy">Yeah, I understood the question as you at the first time because of the title. But the sample code looks like he wants combinations.</span>
<span class="comment-copy">Thanks, but itertools.combinations is better for my problem.</span>
