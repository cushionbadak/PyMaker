<div class="post-text" itemprop="text">
<p>I try using configparser module but I have a little problem with it.</p>
<p>This is a example of code:</p>
<pre><code>import configparser

ini_file = """[s1]\nl1 = 01\n= = 02\n[s2]\n l2 = 123"""
print (ini_file)

config = configparser.ConfigParser()
config.read_string(ini_file)
config.sections()
</code></pre>
<p>Can I use a spacial character in keys like = or : ?</p>
<p>(example = = 02 where first = is key and 02 is value)</p>
<p>(In ANSI-C I can use \" to print " - special char). Maybe in python it's similar :)</p>
<p>Thanks for answer!</p>
</div>
<div class="post-text" itemprop="text">
<p>No and yes.</p>
<p>No: Python uses '\' to escape special characters in strings, but not in code.  The re module also uses '\' to escape characters that are special in re strings.  Configparser does not use '\' or any other escape character.</p>
<p>Yes: The '=' and ':' are the default separators between key and values, but only the defaults.  They can be changed (for an entire file) with a <code>delimiters</code> keyword argument in a <code>Configparser(delimiters=&lt;something else&gt;)</code> call.  From <a href="https://docs.python.org/3/library/configparser.html#customizing-parser-behaviour" rel="nofollow">configparser doc</a>:</p>
<blockquote>
<p>delimiters, default value: ('=', ':')</p>
<p>Delimiters are substrings that delimit keys from values within a section. The first occurrence of a delimiting substring on a line is considered a delimiter. This means values (but not keys) can contain the delimiters.</p>
</blockquote>
</div>
