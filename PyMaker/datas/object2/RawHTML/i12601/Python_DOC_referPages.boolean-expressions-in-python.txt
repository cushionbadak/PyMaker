<div class="post-text" itemprop="text">
<p>I have a Python script I'm running that tests for the conjunction of two conditions, one of which is easy to verify and the other hard.  Say I write it as <code>easy_boole and hard_boole</code> in Python.  Will the interpreter always check <code>easy_boole</code> first and then return <code>False</code> if <code>easy_boole == False</code>?  Is the interpreter optimized in general to resolve these kinds of statements as quickly as possible?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, both <code>and</code> and <code>or</code> are so called short-circuit operators. The evaluation of an <code>and</code> expression ends as soon as a value is falsy, the evaluation of an <code>or</code> expression ends as soon as a value is truthy.</p>
<p>You can find the relevant documentation <a href="https://docs.python.org/2/library/stdtypes.html#boolean-operations-and-or-not" rel="nofollow">here</a>.</p>
<p>Here is a piece of code with which you can observe this behavior yourself:</p>
<pre><code>def fib(n):
    if n &lt;= 2:
        return 1
    return fib(n-1) + fib(n-2)

print(False and fib(100)) # prints False immediately
print(True and fib(100)) # takes very, very long
print(fib(100) and False) # takes very, very long
</code></pre>
<p>So with that in mind, always use <code>easy_boole and hard_boole</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just open up a REPL and try:</p>
<pre><code>&gt;&gt;&gt; False and 1 / 0
False

&gt;&gt; True or 1 / 0
True

&gt;&gt;&gt; False or 1 / 0
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ZeroDivisionError: division by zero
</code></pre>
<p>That means that Python indeed evaluates boolean statements lazily.</p>
<p>P.S. It's a <a href="https://stackoverflow.com/questions/13960657/does-python-evaluate-ifs-conditions-lazily">duplicate</a></p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/reference/expressions.html#boolean-operations" rel="nofollow">Python Documentation</a>:</p>
<blockquote>
<p>The expression x and y first evaluates x; if x is false, its value is
  returned; otherwise, y is evaluated and the resulting value is
  returned.</p>
</blockquote>
<p>So as long as <code>x</code> is <code>False</code>, the expression will be evaluated to <code>False</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, python evaluates if statements lazily. For example, in following code:</p>
<pre><code>if f() and g():
    print("GOOD")
else:
    print("BAD")
</code></pre>
<p>Python interpreter will first check f() statement and if f() is False, it will immediately jump on else statement.</p>
</div>
<span class="comment-copy">Yes. It's shortcircuited.</span>
