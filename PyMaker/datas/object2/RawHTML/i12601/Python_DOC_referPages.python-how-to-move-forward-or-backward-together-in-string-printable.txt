<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/12924009/how-to-move-the-first-letter-of-a-word-to-the-end">How to move the first letter of a word to the end</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>How to shift forward or backward in <code>string.printable</code> whithout <code>string.maketrans</code>?<br/></p>
<p>for example:</p>
<pre><code>&gt;&gt; chars = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
</code></pre>
<p>and then output is:</p>
<pre><code>123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; chars[2:] + chars[:2]
'23456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01'
&gt;&gt;&gt; 
&gt;&gt;&gt; 
&gt;&gt;&gt; chars[-2:] + chars[:-2]
'YZ0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWX'
&gt;&gt;&gt; 
</code></pre>
<p>You can even define a function for that, with your string, the steps and direction as parameters:</p>
<pre><code>&gt;&gt;&gt; def shift(s, step, side='Right'):
        step %= len(s) #Will generate correct steps even step &gt; len(s)
        if side == 'Right':
            return s[-step:]+s[:-step]
        elif side == 'Left':
            return s[step:]+s[:step]
        else:
            print 'Please, Specify either Right or Left shift'
            return -1 #as exit code


&gt;&gt;&gt; shift(chars, 2, 'Right')
'YZ0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWX'
&gt;&gt;&gt; shift(chars, 2, 'Left')
'23456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01'
&gt;&gt;&gt; f(chars, 2, 'No_Direction')
Please, Specify either Right or Left shift
-1
</code></pre>
<p>Another way is to use <a href="https://docs.python.org/3/library/collections.html?highlight=counter#collections.deque" rel="nofollow"><code>deque</code></a> class of the <code>collections</code> module, which has <code>rotate</code> method, this way:</p>
<pre><code>&gt;&gt;&gt; from collections import deque
&gt;&gt;&gt; 
&gt;&gt;&gt; d = deque(chars)
&gt;&gt;&gt; d
deque(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
&gt;&gt;&gt; 
&gt;&gt;&gt; d.rotate(1)
&gt;&gt;&gt; d
deque(['Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y'])
&gt;&gt;&gt; d.rotate(-1)
&gt;&gt;&gt; d
deque(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
&gt;&gt;&gt; d.rotate(3)
&gt;&gt;&gt; ''.join(list(d))
'XYZ0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVW'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can get that by slicing after the last character index you'd like to shift, <code>1</code> in this case:</p>
<pre><code>result = chars[1:] + chars[:1]
</code></pre>
</div>
<span class="comment-copy">Move the first char in a string to the last, and vise versa?</span>
<span class="comment-copy">there are two conditions: <code>one</code> character and <code>two</code> characters or <code>more</code>.. can help me please?</span>
<span class="comment-copy">chars[1:]+chars[0] ?</span>
<span class="comment-copy">thanks so much sir.. that was i need..</span>
<span class="comment-copy">Note that if <code>len(s) &gt; step</code> the result will always be <code>s</code>. If the op wants to shift by more than <code>len(s)</code>, you should first perform <code>step %= len(s)</code> to compensate.</span>
<span class="comment-copy">@Mirac7 .. Thanks for the Head's up</span>
