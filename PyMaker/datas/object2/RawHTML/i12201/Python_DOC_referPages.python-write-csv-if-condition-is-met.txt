<div class="post-text" itemprop="text">
<p>I have a file named <code>y_and_n.csv</code>, and it looks like this:</p>
<pre><code>Y,13,foo
N,19,bar
Y,37,boo
Y,71,fiz
N,29,buz
</code></pre>
<p>What's the best way to write a code in Python that saves a new file, <code>y_only.csv</code>, which would look like the text below?</p>
<pre><code>Y,13,foo
Y,37,boo
Y,71,fiz
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'd write the following.</p>
<pre><code>yn = open("y_and_n.csv",'r')
y = open("y_only.csv",'w',newline='')

for i in yn:
    if i[0] == 'Y':
        y.write(i)

yn.close()
y.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Plain Python has a very good module for reading/writing csv files, named <a href="https://docs.python.org/3/library/csv.html" rel="nofollow">csv</a>. </p>
<p>The basic structure of a reader is:</p>
<pre><code>import csv
with open('some.csv', newline='') as f:
    reader = csv.reader(f)
    for row in reader:
        print(row)
</code></pre>
<p>Therefore,  you shold substitute print(row) for one if structure, selecting only the rows you want to print. Rows are lists, so you should use [] to access columns, as in row[0] for first column.</p>
<p>You should only remember that the row is read as a list of strings.</p>
</div>
<div class="post-text" itemprop="text">
<p>Somewhat similar to GarethPW's answer, but using <code>csv</code> and a generator expression:</p>
<pre><code>import csv
with open("y_and_n.csv") as open_file:
    rows = list(csv.reader(open_file))

with open("y_only.csv", "w") as open_file:
    writer = csv.writer(open_file)
    writer.writerows(row for row in rows if row[0] == "Y")
</code></pre>
</div>
<span class="comment-copy">What has thou tried?</span>
<span class="comment-copy">I'm voting to close this question as off-topic because this isn't a code-writing service</span>
<span class="comment-copy">If you want to split each line into a list an check with that, then <code>line.split(',')</code> will do the trick for you.</span>
