<div class="post-text" itemprop="text">
<p>Ok so I will try again and makes it as clear as I can. I have a text file. That text file has multiple lines and each line is formatted like this:</p>
<blockquote>
<p>string integer integer integer float float float</p>
</blockquote>
<p>I want to sort the lines  in order. I need the order to be based from the highest integer to the lowest. So for each line it would get the highest out of the 3 integers, and use those values to put the lines in order.</p>
<p>If I opened this text file as "file" how would I do this? So "file" would then be the sorted text file as a list</p>
</div>
<div class="post-text" itemprop="text">
<p>Based on your other post I'm assuming you have a list like this:</p>
<pre><code>l = [["Bob","5","10","7","4.5","6.3","6.4"],["Charles","3","4","5","5.2","8.34","356.444"]]
</code></pre>
<p>Then all you need is Python's builtin <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow">sorted</a> function.</p>
<pre><code>sorted(l, key=lambda sl: max(int(i) for i in sl[1:4]), reverse=True)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your program will need to look something like this:</p>
<pre><code>1. Open file (read mode)
2. For each line in the file:  
       a. split line  
       b. create a new list `[string, int, int, int, float, float, float]`  
       c. append list to master list
3. Sort master list
4. Open file (write mode)
5. For each list in the (sorted) master list:  
    a. Turn list back into a string that you want to write to the file
    b. Write line to the file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Original <em>example.txt</em></p>
<pre><code>ed 1 5 0 7.5 8.8. 9.6
edd 7 3 6 5.5 1.2 3.2
eddy 1 2 3 1.1 5.5 6.3
</code></pre>
<p>This will rewrite the target file:</p>
<pre><code>target_file = '/tmp/example.txt'

with open(target_file, 'r+') as file_object:
    lines = file_object.readlines()
    lines = [line.split() for line in lines if line != '\n']

    ordered = sorted(lines, reverse=True, key=lambda line: max(line[1:4]))
    ordered = '\n'.join([' '.join(line) for line in ordered])

    file_object.seek(0)
    file_object.write(ordered)
</code></pre>
<p><em>example.txt</em> after sorting:</p>
<pre><code>edd 7 3 6 5.5 1.2 3.2
ed 1 5 0 7.5 8.8. 9.6
eddy 1 2 3 1.1 5.5 6.3
</code></pre>
</div>
<span class="comment-copy">Could you please show what code you have tried?</span>
<span class="comment-copy">Before answering, I would like to see what you have tried, and examples of what you expect.  I can't help you if I don't know what you want.</span>
<span class="comment-copy">Does it matter that l is a text file? I tried that and it does not appear to change the order of l. Say Charles has a higher integer than 10, it will still output Bob first. I added the code and then I output l[0] then l[1] etc but it has not changed order</span>
<span class="comment-copy">If I change the value of the 2nd element of the 2nd list to '11' then the 'Charles' list comes before the 'Bob' list in the result. So I'm not sure what you are asking.</span>
