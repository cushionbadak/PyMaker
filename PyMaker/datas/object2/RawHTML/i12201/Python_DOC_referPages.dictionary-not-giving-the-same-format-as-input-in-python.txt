<div class="post-text" itemprop="text">
<p>I'm new to Python and I'm currently working on solving problems to improve my coding skills. I have two <code>Lists k and v</code> which are of same size. When I try to put these values into a <code>dictionary</code> and output them, the format in which they are inputted is different from the output.</p>
<p>Example:</p>
<p>Two lists with values - </p>
<pre><code>k = ['1', '16', '11', '20', '3', '26', '7', '22']
v = ['2', '3', '2', '3', '5', '4', '1', '4']
</code></pre>
<p>Adding the above two lists into a dictionary - </p>
<pre><code>d = dict(zip(k, v))
print d
</code></pre>
<p>Expected Output:</p>
<pre><code>{'1': '2', '16': '3', '11': '2', '20': '3', '3': '5', '26': '4', '7': '1', 22': '4'}
</code></pre>
<p>Output I get:</p>
<pre><code>{'11': '2', '26': '4', '20': '3', '22': '4', '16': '3', '1': '2', '3': '5', '7': '1'}
</code></pre>
<p>Could you please tell me why I'm not able to get the output as expected. Any mistake in my code ? and what can be done to bring the output in the expected format. Thanks in advance. Any help would be much appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>You need to use <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow"><code>OrderedDict</code></a> from <code>collections</code> because default <code>dict</code> doesn't keep an order:</p>
<pre><code>from collections import OrderedDict
d = OrderedDict(zip(k, v))

print(d)
OrderedDict([('1', '2'), ('16', '3'), ('11', '2'), ('20', '3'), ('3', '5'), ('26', '4'), ('7', '1'), ('22', '4')])
</code></pre>
</div>
<span class="comment-copy">it's the same output, python dictionaries don't keep order</span>
<span class="comment-copy">The order in a plain <code>dict</code> is determined by the hash of the keys and the order that items were added to it.  A plain <code>dict</code> is optimized for speed; if you need to maintain order it can be done with an <code>OrderedDict</code>, but that uses more RAM since it maintains an extra list of keys. But for most applications you don't need to worry about order, except perhaps when doing output, and you can produce sorted output by sorting the keys then, rather than wasting time &amp; RAM maintaining order at all times.</span>
<span class="comment-copy">@ PM 2Ring - Thanks a lot of helping me out. There are lot of concepts to learn than just coding. Thanks again :)</span>
<span class="comment-copy">Thank you Anton. I did'nt know about <code>OrderedDict</code>. One query, why is OrderedDict being printed in the output ? just curious.</span>
<span class="comment-copy">OrderedDict is being printed because that is how the <code>OrderedDict</code> class defines the cast to a <code>str</code>. But in code it can be treated identically to a normal dictionary. You can always iterator the <code>OrderedDict</code> and print it item by item.</span>
<span class="comment-copy">@Dev I think it's added to <code>__repr__</code> or <code>__str__</code> for information about that particular type.</span>
<span class="comment-copy">Thanks @AChampion  and Anton.</span>
