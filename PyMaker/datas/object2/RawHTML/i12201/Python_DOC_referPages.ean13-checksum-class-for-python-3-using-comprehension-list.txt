<div class="post-text" itemprop="text">
<p>I'm trying to change this python 2 class to make it works in python 3
But unfortunatly i'm stuck with comprehension list</p>
<p>Here is the original class:</p>
<pre><code>class GTIN(object):

def __init__(self, barcode=''):
    self.barcode = barcode

def __checkDigit(self, digits):
        total = sum(digits) + sum(map(lambda d: d*2, digits[-1::-2]))
        return (10 - (total % 10)) % 10

def validateCheckDigit(self, barcode=''):
    barcode = (barcode if barcode else self.barcode)
    if len(barcode) in (8,12,13,14) and barcode.isdigit():
        digits = map(int, barcode)
        checkDigit = self.__checkDigit( digits[0:-1] )
        return checkDigit == digits[-1]
    return False

def addCheckDigit(self, barcode=''):
    barcode = (barcode if barcode else self.barcode)
    if len(barcode) in (7,11,12,13) and barcode.isdigit():
        digits = map(int, barcode)
        return barcode + str(self.__checkDigit(digits))
    return ''
</code></pre>
<p>Here is where am I with my noob skill</p>
<pre><code>class GTIN(object):

def __init__(self, barcode=''):
    self.barcode = barcode

def __checkDigit(self, digits):
        #total = sum(digits) + sum(map(lambda d: d*2, digits[-1::-2]))
        total = sum(digits) + sum([d*2 for d in digits[-1::-2]])
        return (10 - (total % 10)) % 10

def validateCheckDigit(self, barcode=''):
    barcode = (barcode if barcode else self.barcode)
    if len(barcode) in (8,12,13,14) and barcode.isdigit():
        #digits = map(int, barcode)
        digits = (int(s) for s in barcode)
        checkDigit = self.__checkDigit( digits[0:-1] )
        return checkDigit == digits[-1]
    return False

def addCheckDigit(self, barcode=''):
    barcode = (barcode if barcode else self.barcode)
    if len(barcode) in (7,11,12,13) and barcode.isdigit():
        #digits = map(int, barcode)
        digits = (int(s) for s in barcode)
        return barcode + str(self.__checkDigit(digits))
    return ''
</code></pre>
<p>I changed all map fonction by comprehension list but now i'm stuck with  this error</p>
<pre><code>TypeError: 'generator' object is not subscriptable
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is here:</p>
<pre><code>digits = (int(s) for s in barcode)
return barcode + str(self.__checkDigit(digits))
</code></pre>
<p>and later, in <code>__checkDigit</code>, you do </p>
<pre><code>total = sum(digits) + sum([d*2 for d in digits[-1::-2]])
</code></pre>
<p>For <code>digits[-1::-2]</code> to work, <code>digits</code> has to be a list, or some other kind of "subscriptable". In Python 3, <code>map</code> returns a generator, so you changed it. But you changed it to just another kind of generator -- a generator expression.</p>
<p>You can either use a proper list comprehension (note the square brackets):</p>
<pre><code>digits = [int(s) for s in barcode]
</code></pre>
<p>or stick with <code>map</code>, but turn the generator into a list:</p>
<pre><code>digits = list(map(int, barcode))
</code></pre>
</div>
<span class="comment-copy">Why did you change all applications of <code>map</code> with list comprehensions? Where does the error appear? Do you know <a href="http://stackoverflow.com/questions/6288016/generator-object-is-not-subscriptable-error">what it means</a>?</span>
<span class="comment-copy">It's my mistake sry i dit not noticed the () on my comprehension list ! Fixed now</span>
<span class="comment-copy">Addendum: In the general case, another alternative might be using <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer"><code>itertools.islice</code></a> instead of <code>[-1::-2]</code>, but <code>islice</code> does not support negative values for start, stop and step.</span>
<span class="comment-copy">actually , It's my mistake i noticed that later i did not used well comprehension list, arghhh !!! Thanks for your support</span>
