<div class="post-text" itemprop="text">
<p>I'm trying to make a tic tac toe game, the problem is the function that checks the table and then updates it with the players '0' or 'X' at the chosen index. </p>
<p>Please tell me how I can fix this because I can't see what's wrong with this.</p>
<pre><code>table = [['1','2','3'],
         ['4','5','6'],
         ['7','8','9']]

def title():
    for row in table:
        print row

def check(indx, sym):
    for indd, row in enumerate(table):
        for ind, cell in enumerate(row):
            if cell == indx and cell != '0' or cell != 'X':
                table[indd][ind] = sym
            else:
                return False

def main():

    moves_left = 1
    while moves_left &gt; 0:
        if moves_left == 1:
            title()
            indx = raw_input('Where do you want your nought?: ')
            new_table = check(indx, '0')
            if new_table != False:
                moves_left += 1
            else:
                print 'Invalid selection'
        elif moves_left == 2:
            title()
            indx = raw_input('Where do you want your cross?: ')
            new_table = check(indx, 'X')
            if new_table != False:
                moves_left -= 1
            else:
                print 'Invalid Selection'
        else:
            print 'it\'s a draw'

if __name__=='__main__':
    main()
</code></pre>
<p>My Traceback:</p>
<pre><code>Traceback (most recent call last):
  File "tictac.py", line 45, in &lt;module&gt;
    main()
  File "tictac.py", line 28, in main
    new_table = check(indx, '0')
  File "tictac.py", line 19, in check
    table[indd[ind]] = sym
TypeError: 'int' object has no attribute '__getitem__'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>DeveloperXY already got your immediate problem.  There are several more.  The one vexing you at the moment is because your <strong>if</strong> logic is incorrect:</p>
<pre><code>if cell == indx and cell != '0' or cell != 'X':
</code></pre>
<p>Either use parentheses, or learn the order of evaluation for Boolean operators.  Among other things, this statement must <em>always</em> come up True at the start: every cell is something other than 'X'.  Since you perform the update for <em>every</em> cell in the loop, you change them <em>all</em> to '0'.</p>
<p>Instead, you need to design logic that finds the one cell you want to change (at cell == indx) and then changes only that <em>one</em> cell.  Try this for starters:</p>
<pre><code>def check(indx, sym):
    for indd, row in enumerate(table):
        for ind, cell in enumerate(row):
            if cell == indx:
                table[indd][ind] = sym
print table  # I added this to watch what happens to the actual game state.
</code></pre>
<p>Note that I got rid of the return value: you were returning either <strong>None</strong> or <strong>False</strong>, which have the same effect in the statement <strong>if new_table</strong>.
By the way, notice that if you return <strong>True</strong> from <strong>check</strong>, then <strong>moves_left</strong> becomes 2, and your main program goes into an infinite loop.</p>
<p>Now, note that your <strong>title</strong> function pays no attention at all to the game state: it won't print anything but the initial numbering.</p>
<p>Does that move you along far enough to close this issue?</p>
</div>
<div class="post-text" itemprop="text">
<p>Change</p>
<pre><code>table[indd[ind]] = sym # you're treating an integer like a list, which is wrong
</code></pre>
<p>to</p>
<pre><code>table[indd][ind] = sym
</code></pre>
<p>in order to access the cell at the '<code>indd</code>'th row &amp; '<code>ind</code>'th column.</p>
<p>Actually, <code>table[indd[ind]]</code> is a short hand for doing this:</p>
<pre><code>table.__getitem__(indd.__getitem__(ind))
</code></pre>
<p>&amp; integers don't have a <a href="https://docs.python.org/3/reference/datamodel.html#object.__getitem__" rel="nofollow"><strong>getitem</strong>()</a> special method.</p>
</div>
<span class="comment-copy">Yes, Thankyou for helping with that.</span>
<span class="comment-copy">ok thanks for the info, while I don't get a traceback now, this just sets all the cells of the table to 0.</span>
<span class="comment-copy"><code>check(indx, '0')</code> you're always passing <b>0</b> to the method in charge of setting the cells.</span>
<span class="comment-copy">yes because it's noughts and crosses. that should only change the cell equal to indx if it isn't already a 0 or x. It shouldn't change all cells to 0.</span>
<span class="comment-copy">Could you update your post with the minimal, "relevant" code in order to run ?</span>
<span class="comment-copy">ofcourse, I've just added the runnable version.</span>
