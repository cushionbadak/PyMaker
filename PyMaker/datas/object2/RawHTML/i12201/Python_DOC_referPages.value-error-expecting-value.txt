<div class="post-text" itemprop="text">
<p>I have a line of code from a Data Analysis Book using python.</p>
<pre><code>return = [json.loads(line) for line in open(path)]
</code></pre>
<p>Path being the designated text file I have with JSON formatted text inside.</p>
<p>The link is here.
<a href="https://raw.githubusercontent.com/pydata/pydata-book/master/ch02/usagov_bitly_data2012-03-16-1331923249.txt" rel="nofollow">https://raw.githubusercontent.com/pydata/pydata-book/master/ch02/usagov_bitly_data2012-03-16-1331923249.txt</a></p>
<pre><code>ValueError                                Traceback (most recent call last)
&lt;ipython-input-35-b1e0b494454a&gt; in &lt;module&gt;()
----&gt; 1 records = [json.loads(line) for line in open(path)]

&lt;ipython-input-35-b1e0b494454a&gt; in &lt;listcomp&gt;(.0)
----&gt; 1 records = [json.loads(line) for line in open(path)]

/usr/lib/python3.4/json/__init__.py in loads(s, encoding, cls,    object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)
316             parse_int is None and parse_float is None and
317             parse_constant is None and object_pairs_hook is None and not kw):
--&gt; 318         return _default_decoder.decode(s)
319     if cls is None:
320         cls = JSONDecoder

/usr/lib/python3.4/json/decoder.py in decode(self, s, _w)
341 
342         """
--&gt; 343         obj, end = self.raw_decode(s, idx=_w(s, 0).end())
344         end = _w(s, end).end()
345         if end != len(s):

/usr/lib/python3.4/json/decoder.py in raw_decode(self, s, idx)
359             obj, end = self.scan_once(s, idx)
360         except StopIteration as err:
--&gt; 361             raise ValueError(errmsg("Expecting value", s, err.value)) from None
362         return obj, end

ValueError: Expecting value: line 2 column 1 (char 1)
</code></pre>
<p>Any help is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>as said in your trace back the value being returned is the None type. Null, theres nothing to return. Double check your source.</p>
</div>
<div class="post-text" itemprop="text">
<p>line 2 starts with</p>
<pre><code>"a": "GoogleMaps\/RochesterNY",
</code></pre>
<p>Line 1 and the other lines start with</p>
<p>"a": "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.78 Safari/535.11",</p>
<p>It appears that the "a" key is supposed to be an indicator of the browser type and not the URL description. This would probably cause a problem when you are trying to decode it. I would suggest removing it from the data and seeing what happens.</p>
<p>Your call to</p>
<pre><code>--&gt; 343         obj, end = self.raw_decode(s, idx=_w(s, 0).end())
</code></pre>
<p>appears to be in error. Did you write your own version of raw_decode() as the Python JSON manual](<a href="https://docs.python.org/3/library/json.html" rel="nofollow">https://docs.python.org/3/library/json.html</a>) states that </p>
<blockquote>
<p>raw_decode(s)</p>
<p>Decode a JSON document from s (a str beginning with a JSON document) and
  return a 2-tuple of the Python representation and the
  index in s where the document ended.</p>
<p>This can be used to decode a JSON document from a string that may have
  extraneous data at the end.</p>
</blockquote>
<p>which means that ext is not a valid argument for the standard function. It is better to write your own function with a different name in order to prevent accidents in usage.</p>
<p>Similarly you would be better off writing your for loop</p>
<pre><code>records = [json.loads(line) for line in open(path)]
</code></pre>
<p>as
    for line in open(path):
        records = [json.loads(line)</p>
<p>However, given that it appears that the exception is raised from the raw_decode, it would appear that the line that you are trying to decode contains an error. You should check the data that you are processing and handle the error or fix the data. Since it is a JSON line, you should be able to print the line to determine what the error is. It could be your code or the actual data line.</p>
</div>
<span class="comment-copy">You should rewrite your list comprehension as a loop and print the number of the line in your input file that produces the error when decoding the JSON. The first line is fine, for instance, but one of them is ill-formatted.</span>
<span class="comment-copy">Thanks. I Think the case is the data from the input file. I'll go through it tonight and give an update to settle this question.</span>
<span class="comment-copy">I'm using he standard version of raw_decode(). But I think it's most likely the data that I'm process is not formatted correctly. I'll look into more tonight and give an update. Thank you</span>
<span class="comment-copy">@xalio I added a description of what looks wrong with line 2 of your data. If you fix it or remove it, other lines should process.</span>
<span class="comment-copy">Yes I saw it. I'm going through the data right now and removing them. Also, on a side note. I copied about a quarter of the file and it processed it without error. This portion included the the "a" index in question.</span>
<span class="comment-copy">I don't think it's the "a"  key that's the issue. I was able to decode all the "a" keys that had the Google Maps value to them, no issue. And I was able to process it with the a keys that have the correct User_Agent. I still think it's a formatting issue, but with my level of knowledge I don't know how to go about detecting it at the moment.</span>
<span class="comment-copy">@xalio I am assuming that you also tested with only line 2 being removed. I would suggest making the line loop explicit and printing a line count as you start processing each line to verify which line is breaking. I would also use a data set which has only the line that is breaking.</span>
