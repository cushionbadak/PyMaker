<div class="post-text" itemprop="text">
<p>I built and installed my custom Django app following the official tutorial <a href="https://docs.djangoproject.com/en/1.8/intro/reusable-apps/" rel="nofollow">https://docs.djangoproject.com/en/1.8/intro/reusable-apps/</a></p>
<p>The installation seems successful.</p>
<pre><code>$ pip install --user ../horizon2fa-0.1.tar.gz

Processing /opt/stack/horizon2fa-0.1.tar.gz
  Requirement already satisfied (use --upgrade to upgrade): horizon2fa==0.1 from file:///opt/stack/horizon2fa-0.1.tar.gz in /opt/stack/.local/lib/python2.7/site-packages
Building wheels for collected packages: horizon2fa
  Running setup.py bdist_wheel for horizon2fa ... done
  Stored in directory: /opt/stack/.cache/pip/wheels/a6/4a/f0/4533f85d90b8f1a274a35d3865a2e0b15ff85f0570a0708679
Successfully built horizon2fa
</code></pre>
<p>Where can I find the source code of all my custom classes and methods?</p>
<p>I tried to search it through my system but didn't find them. Is the code compiled?</p>
<pre><code>$ sudo find / -name "*horizon2fa*"

/root/.cache/pip/wheels/a0/9d/24/d8070ea2a01759ce7ebc03c34393db8a5aceccd380e60481c5/horizon2fa-0.1-cp27-none-any.whl
/opt/stack/.cache/pip/wheels/a6/4a/f0/4533f85d90b8f1a274a35d3865a2e0b15ff85f0570a0708679/horizon2fa-0.1-cp27-none-any.whl
/opt/stack/.local/lib/python2.7/site-packages/horizon2fa-0.1.dist-info
/opt/stack/horizon2fa-0.1.tar.gz
</code></pre>
<p>The module seems was not installed correctly.</p>
<pre><code>python -c "import horizon2fa; print(horizon2fa.__path__)"

Traceback (most recent call last):
  File "&lt;string&gt;", line 1, in &lt;module&gt;
ImportError: No module named horizon2fa
</code></pre>
<p>Below, you can see my app directory structure.</p>
<pre><code>trex@trex:~/Development/openstack2FA/horizon2fa$ tree
.
├── admin.py
├── dist
│   └── horizon2fa-0.1.tar.gz
├── enabled
│   └── _31000_myplugin.py
├── horizon2fa.egg-info
│   ├── dependency_links.txt
│   ├── PKG-INFO
│   ├── SOURCES.txt
│   └── top_level.txt
├── __init__.py
├── LICENSE
├── main.py
├── MANIFEST.in
├── migrations
│   ├── 0001_initial.py
│   └── __init__.py
├── models.py
├── panel.py
├── README.rst
├── setup.py
├── templates
│   ├── base.html
│   └── horizon2fa
│       ├── created.html
│       ├── index.html
│       ├── login.html
│       ├── new.html
│       └── view.html
├── tests.py
├── urls.py
├── user.py
└── views.py
</code></pre>
<p>And my setup.py script.</p>
<pre><code>import os
from setuptools import find_packages, setup

with open(os.path.join(os.path.dirname(__file__), 'README.rst')) as readme:
    README = readme.read()

# allow setup.py to be run from any path
os.chdir(os.path.normpath(os.path.join(os.path.abspath(__file__), os.pardir)))

setup(
    name='horizon2fa',
    version='0.1',
    packages=find_packages(),
    include_package_data=True,
    license='BSD License',  # example license
    description='A Django app.',
    long_description=README,
    url='http://www.trex.com/',
    author='trex',
    author_email='trex@trex.com',
    classifiers=[
        'Environment :: Web Environment',
        'Framework :: Django',
        'Framework :: Django :: X.Y',  # replace "X.Y" as appropriate
        'Intended Audience :: Developers',
        'License :: OSI Approved :: BSD License',  # example license
        'Operating System :: OS Independent',
        'Programming Language :: Python',
        # Replace these appropriately if you are stuck on Python 2.
        'Programming Language :: Python :: 2',
        'Programming Language :: Python :: 2.7',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python :: 3.4',
        'Programming Language :: Python :: 3.5',
        'Topic :: Internet :: WWW/HTTP',
        'Topic :: Internet :: WWW/HTTP :: Dynamic Content',
    ],
)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Because you used <code>--user</code>, the package is installed for current user (the one who issued <code>pip install --user</code>) and not in system <code>site-packages</code> directory. See the docs for <a href="https://docs.python.org/3/library/site.html#site.USER_BASE" rel="nofollow">site.USER_BASE</a>. 
So, you should look in <code>~/.local/</code> as said in the docs, probably: <code>/home/%user%/.local/lib/python%version%/site-packages/</code>.</p>
<p>Also, considering, that the package got installed somewhere on PYTHONPATH, you could try to find it by running the following command in your shell:</p>
<pre><code>python -c "import %module%; print(%module%.__path__)"
</code></pre>
<p>i.e.</p>
<pre><code>python -c "import horizon2fa; print(horizon2fa.__path__)"
</code></pre>
<p><em>Regarding your question update:</em></p>
<p>You should create a top level directory, e.g. <code>django-horizon2fa</code> and put <code>setup.py</code>, <code>MANIFEST.in</code>, <code>README.RST</code>, <code>LICENSE.txt</code> and your <code>horizon2fa</code> package directory inside it. So that installation related files are in new dir and all files related to your module are inside a dir in that dir. Current directory setup doesn't allow <a href="https://pythonhosted.org/setuptools/setuptools.html#using-find-packages" rel="nofollow">find_packages()</a> do it's job properly.</p>
<pre><code>django-horizon2fa
│
├── LICENSE
├── MANIFEST.in
├── README.rst
├── setup.py
└── horizon2fa
    ├── __init__.py
    ├── admin.py
    ├── tests.py
    ├── urls.py
    ├── user.py
    ├── views.py
    ├── enabled
    │   └── _31000_myplugin.py
    ├── main.py
    ├── migrations
    │   ├── 0001_initial.py
    │   └── __init__.py
    ├── models.py
    ├── panel.py
    ├── tests.py
    ├── urls.py
    ├── user.py
    ├──  views.py
    └── templates
        ├── base.html
        └── horizon2fa
            ├── created.html
            ├── index.html
            ├── login.html
            ├── new.html
            └── view.html
</code></pre>
<p>P.S. Using solely <code>MANIFEST.in</code>, may sometimes lead to problems with inclusion of package data in distribution, e.g. templates. In that case consider providing  files from <code>MANIFEST.in</code> in <code>package_data</code> dictionary to <code>setup()</code>, see <a href="https://pythonhosted.org/setuptools/setuptools.html#including-data-files" rel="nofollow">details in the docs</a>.</p>
</div>
<span class="comment-copy">Aren't they in <code>/opt/stack/.local/lib/python2.7/site-packages</code>?</span>
<span class="comment-copy">Obviously you use Linux (or some other UNIX-style OS), so the install path is probably <code>/usr/local/lib/{{ your python version }}/site-packages</code>. This is at least the location under Debian based systems.</span>
<span class="comment-copy">I don't see my source code in site-packages. ls -lh  /opt/stack/.local/lib/python2.7/site-packages/horizon2fa-0.1.dist-info/ total 28K -rw-rw-r-- 1 stack stack  15 Feb 25 09:38 DESCRIPTION.rst -rw-rw-r-- 1 stack stack   4 Feb 25 09:38 INSTALLER -rw-rw-r-- 1 stack stack 905 Feb 25 09:38 METADATA -rw-rw-r-- 1 stack stack 967 Feb 25 09:38 metadata.json -rw-rw-r-- 1 stack stack 735 Feb 25 09:38 RECORD -rw-rw-r-- 1 stack stack  11 Feb 25 09:38 top_level.txt -rw-rw-r-- 1 stack stack  93 Feb 25 09:38 WHEEL</span>
<span class="comment-copy">I have Fedora 23. $ cat /etc/fedora-release  Fedora release 23 (Twenty Three)</span>
<span class="comment-copy">Look into <code>/opt/stack/.local/lib/python2.7/site-packages/</code>, not the <code>horizon2fa-0.1.dist-info</code> subdirectory. The <code>.dist-info</code> dir only contains pip metadata; the actual package would be inside <code>site-packages</code>.</span>
<span class="comment-copy">I see only the dist info folder inside. $ ls -lh ~/.local/lib/python2.7/site-packages/ total 0 drwxrwxr-x 2 stack stack 131 Feb 25 10:04 horizon2fa-0.1.dist-info drwxrwxr-x 2 stack stack  45 Feb 25 09:38 migrations</span>
<span class="comment-copy">@trex, please see answer update. If the import will fail, then probably the package has installation problem. Then you'll need to add your original package directory structure and <code>setup.py</code> to your question for further research. The're might be problems, if e.g. you used python2 pip to install the package and try to import it in a script ran via python3 - obviously the package get installed in different places for python2 pip and python3 pip.</span>
<span class="comment-copy">Nikita, you are right, there is an installation problem. I have updated my question.</span>
<span class="comment-copy">@trex, updated my answer. Please, try my advice and if the problem persists let us know.</span>
<span class="comment-copy">Nikita, do you mean creating django-horizon2fa folder manually? I created the folder manually and copied there all files from openstack2FA Django project. Still doesn't work. Or maybe you mean start a new Django project with a different name? Like django-admin startproject django-horizon2fa. Hyphen is an illegal character for a Django project.</span>
