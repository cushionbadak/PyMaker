<div class="post-text" itemprop="text">
<p>I'm trying to get the Pan info for an audio file using Python.
preferably any audio file. currently testing on .wav files. 
I'm pretty lost so any info would be much appreciated. </p>
<p>thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>As far as I understand your comments, you have two mono file containing the same source whereas one represents the left channel and the other one represents the right one of a stereo file.</p>
<p>For getting the pan value, you have to make assumptions how the panning has been done. If you assume <a href="https://dsp.stackexchange.com/questions/21691/algorithm-to-pan-audio/21736#21736">constant power panning</a>, you can solve the equations for the angle to get the pan value (between -1 and 1 resp. -45째 to 45째):</p>
<pre><code>import numpy as np
import scipy.io.wavfile as wavfile

def ampradio_to_angle(x):
    """ converts ratio of amplitude of left and right channel to degree in radians """
    if x == 1:
        return 0
    else:
        return 2 * np.arctan((-1 * np.sqrt(2) * np.sqrt(x*x + 1) + x + 1) / (x - 1))

def rad_to_unit(x):
    """ scales -45째 to 45째 in radiants between -1 and 1 """
    return np.degrees(x)/45

sr, left_channel, = wavfile.read("leftfile.wav")
sr, right_channel = wavfile.read("rightfile.wav")
idx = right_channel != 0
if len(right_channel[idx]) == 0:
    ratio = 1e9 # some big number
else:
    ratio = np.average(left_channel[idx] / right_channel[idx])

print(rad_to_unit(ampradio_to_angle(ratio)))
</code></pre>
</div>
<span class="comment-copy">Do I understand your problem right? You have a stereo audio file containing a single souce, panned to a unknown angle and you want to get this angle?</span>
<span class="comment-copy">I have two audio files that are identical except one panned left and one panned right. Together they would be stereo but for this workflow the software spits it out as separate tracks.  I'd like to write a conditional that will rename the file based on the value of the pan.</span>
<span class="comment-copy">Thank you so much for the response. I should have stated i'm pretty new to python. I have been attempting to install all the modules needed to run this script. Scipy is giving me so much trouble I cant seem to install it. Is there another module that will provide the same data?</span>
<span class="comment-copy">There are ready-to-use Python distributions with all common modules installed: <a href="https://www.enthought.com/products/canopy/" rel="nofollow noreferrer">Enthought Canopy</a> or <a href="https://www.continuum.io/" rel="nofollow noreferrer">Anaconda</a>. For other installation hints see <a href="http://www.scipy.org/install.html" rel="nofollow noreferrer">here</a>. If you don't want to use scipy, under any circumstances, you can hack your own functions for reading and writing wave files with the built-in lower-level <a href="https://docs.python.org/3/library/wave.html" rel="nofollow noreferrer">wave-module</a>.</span>
