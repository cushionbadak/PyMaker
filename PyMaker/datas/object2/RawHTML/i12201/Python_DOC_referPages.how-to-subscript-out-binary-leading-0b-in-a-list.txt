<div class="post-text" itemprop="text">
<p>so I've got binary literals but I need to remove the leading '0b's in each one.  How do I go about subscripting them out? Here is my current code:</p>
<pre><code>en = [132, 201, 141, 74, 140, 94, 141, 140, 141, 15, 31, 164, 90, 229, 201, 141, 78, 114, 241, 217, 141, 217, 140, 180, 141, 164, 51, 141, 188, 221, 31, 164, 241, 177, 141, 140, 51, 217, 141, 201, 229, 152, 141, 78, 241, 114, 78, 102, 94, 141, 74, 152, 31, 152, 141, 94, 201, 31, 164, 102, 164, 51, 90, 141, 201, 229, 164, 31, 201, 152, 152, 51, 115]

key = 84

#STEP 1 - 1ST XOR WITH KEY

for i in range(0, len(en)):
    en[i] = en[i] ^ key
    en[i] = bin(en[i])
    if len(en[i]) &lt; 10:
        en[i] = '{:#010b}'.format(int(en[i],2))

print(en)
print(' ')

#STEP 2 - USE SBOX SUB ON EACH BLOCK NIBBLE
for i in range(0, len(en)):
    en[i] = list(en[i])

print(en)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simply remove the <code>#</code> character from the format specifier, because "<em>for integers, when binary, octal, or hexadecimal output is used, this option adds the prefix respective '0b', '0o', or '0x' to the output value"</em> (<a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow">source</a>). Example:</p>
<pre><code>In [3]: '{:08b}'.format(1)
Out[3]: '00000001'
</code></pre>
<p>By the way, it's not necessary to perform that many conversions. You can shorten the first loop:</p>
<pre><code>for i in range(len(en)):
    en[i] = '{:08b}'.format(en[i] ^ key)
</code></pre>
</div>
<span class="comment-copy">You could use <code>[2:]</code>.</span>
<span class="comment-copy">Thank you for this! I really appreciate it :)</span>
