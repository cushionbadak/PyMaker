<div class="post-text" itemprop="text">
<p>I have the following list of value:</p>
<pre><code> my_vals_sorted =    
 [0.04701098816483717,
 0.047837747941765346,
 0.048203210075420284,
 0.050858702201435485,
 0.05517778062513831, # lower median neighbor
 0.06254807568026952, # higher median neighbor
 0.08835915310130199,
 0.09745027658063653,
 0.10855616681703671,
 0.3939978988121587]
</code></pre>
<p>And it has the median:</p>
<pre><code>  import numpy as np
  np.median(my_vals_sorted)
  #0.058862928152703914
</code></pre>
<p>As mentioned in above I'd like to identify lower and higher median neighbor. Yielding </p>
<pre><code>0.05517778062513831, # lower median neighbor
0.06254807568026952, # higher median neighbor
</code></pre>
<p>How can I do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since Python 3.4 there is a <a href="https://docs.python.org/3/library/statistics.html" rel="nofollow"><code>statistics</code></a> module:</p>
<pre><code>import statistics
statistics.median_low(my_vals_sorted)
statistics.median_high(my_vals_sorted)
</code></pre>
<p><code>median_low</code> and <code>median_high</code> can handle unsorted data (will sort them first). If data is already sorted, as your variable name implies, or if you are working with earlier python, you can do worse than copying the <a href="https://hg.python.org/cpython/file/3.5/Lib/statistics.py" rel="nofollow">source</a> of <code>statistics</code>. Code below is mostly copied from there, with some modification (removing sorting, and replacing <code>StatisticsError</code> with generic <code>ValueError</code>):</p>
<pre><code>def median_low(data):
    n = len(data)
    if n == 0:
        raise ValueError("no median for empty data")
    if n % 2 == 1:
        return data[n//2]
    else:
        return data[n//2 - 1]


def median_high(data):
    n = len(data)
    if n == 0:
        raise ValueError("no median for empty data")
    return data[n//2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you can just use regular indexing for this, i.e., </p>
<pre><code>my_vals_sorted[int(len(my_vals_sorted)/2)]
my_vals_sorted[int(len(my_vals_sorted)/2 + 1)]
</code></pre>
</div>
<span class="comment-copy">does my answer deserve to be caned so much? it's pretty much exactly the same as the other answer!</span>
<span class="comment-copy">your last line gives wrong answer: 0.08835915310130199</span>
