<div class="post-text" itemprop="text">
<p>I have basically the following code:</p>
<pre><code>def main():
    for filename in fileinput.input():
        filename = filename.strip()
        process_file(filename)
</code></pre>
<p>The script takes a newline-separated list of file names as its input. However, some of the file names contain invalid utf8, which causes <code>fileinput.input()</code> to implode. I've read about the <code>surrogateescape</code> error handler, which I think is what I want, but I don't know how to set the error handler for fileinput.</p>
<p>In short: how do I get <code>fileinput</code> to deal with invalid Unicode?</p>
</div>
<div class="post-text" itemprop="text">
<p>filenames on POSIX may be arbitrary sequences of bytes (except <code>b'\0'</code> and <code>b'/'</code>) i.e., no character encoding can decode them in the general case (that is why <a href="https://docs.python.org/3/library/os.html#os.fsdecode" rel="nofollow"><code>os.fsdecode()</code></a> exists that uses <code>surrogateescape</code> error handler).</p>
<p>You could use a binary mode to read the filenames then either skip <a href="https://www.python.org/dev/peps/pep-0383/" rel="nofollow">undecodable filenames</a> if the input shouldn't contain them or pass them as is (or <a href="https://docs.python.org/3/library/os.html#os.fsdecode" rel="nofollow"><code>os.fsdecode()</code></a>) to functions that expect filenames:</p>
<pre><code>for filename in fileinput.input(mode='rb'):
    process_file(os.fsdecode(filename).strip())
</code></pre>
<p>Beware, there were several known Python bugs related to using a binary mode and <code>fileinput</code> e.g.:</p>
<ul>
<li><a href="http://bugs.python.org/issue21075" rel="nofollow">fileinput should use stdin.buffer for "rb" mode</a></li>
<li><a href="http://bugs.python.org/issue25510" rel="nofollow">fileinput.FileInput.readline() always returns str object at the end even if in 'rb' mode</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Following documentation please use opening hook:</p>
<pre><code>def main():
for filename in fileinput.input(openhook=fileinput.hook_encoded("utf-8")):
    filename = filename.strip()
    process_file(filename)
</code></pre>
</div>
