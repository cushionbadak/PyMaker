<div class="post-text" itemprop="text">
<p>In C# and other languages, a hash (#) in the format string will be replaced by a number if one exists, and nothing if it doesn't. So a string such as:</p>
<pre><code>number1 = 12.3456
number2 = 12.3
String.Format("0.00####", number1)
String.Format("0.00####", number2)
</code></pre>
<p>Will output <code>number1 = 12.3456</code> but <code>number2 = 12.30</code>. A zero in the format string means if there isn't enough decimal numbers, a zero will be printed out instead.</p>
<p>My question is, is there a similar functionality in Python? I know I can use "{:.6F}" to format a number to 6 decimal points.</p>
</div>
<div class="post-text" itemprop="text">
<p>try this:</p>
<pre><code>print("{:0&lt;.6f} {:0&lt;.1f}".format(12.355, 0.12345))
</code></pre>
<p>Output:</p>
<pre><code>12.355000 0.1
</code></pre>
</div>
<span class="comment-copy">As you already mentioned in your question you can use a format specifier in curly brackets. In addition to this there is a complete <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">Mini-Language for string formatting</a> which can be used with the <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>string.format()</code> function</a>.</span>
<span class="comment-copy">When i change it to <code>"{:0&lt;1f}".format(12.355)</code>, I still get <code>12.355000</code>. <b>Update:</b> I think you missed a dot in the middle, should be <code>"{:0&lt;.1f}".format(12.355)</code></span>
<span class="comment-copy">@MoatazElmasry, sure, thanks for the correction! i've updated the answer.</span>
<span class="comment-copy">no worries, I've marked your answer as correct. Thanks a lot!</span>
