<div class="post-text" itemprop="text">
<pre><code>import argparse

parser_sub = subparsers.add_parser('files')
parser_sub.add_argument(
'--file-name',
action='store',
dest='filename',
nargs='*')

options = parser.parse_args()
</code></pre>
<p>Output: error: too few arguments.</p>
<p>As per this link: <a href="https://bugs.python.org/issue9253" rel="nofollow">https://bugs.python.org/issue9253</a> it states that subparsers cant be optional. Can this behaviour be changed?</p>
<p>I would like my subcommands to be optional. How can I achieve this through argparse in python 2.6?</p>
</div>
<div class="post-text" itemprop="text">
<p>There's not much that can be added to that bug/issue <a href="https://bugs.python.org/issue9253" rel="nofollow">https://bugs.python.org/issue9253</a>.</p>
<p><code>subparsers</code> is a special kind of positional argument.  Normally the only way to make a positional optional is with the <code>nargs='?'</code> parameter. </p>
<p>As detailed in the bug issue, in recent versions, subparsers have inadvertently been made optional.  That's a result of a change in how the parser checks for required arguments.</p>
<p>I won't say it is impossible to retrofit this behavior into the 2.6 version, but it's not something you can do with just a parameter value or two.  I think it would require a good understanding of this bug/issue. It either requires a code change to <code>parse_args</code>, or maybe a custom <code>subparser</code> Action class.</p>
<hr/>
<p>In earlier versions, a missing subparser string will be caught by:</p>
<pre><code>    # if we didn't use all the Positional objects, there were too few
    # arg strings supplied.
    if positionals:
        self.error(_('too few arguments'))
</code></pre>
<p>where <code>positionals</code> is a list of positional Actions.  When a positional is processed it is removed from this list.  Actions with <code>?</code> and '*' get processed even if there's no string (since the accept empty lists).  So anything left in <code>positionals</code> was not seen.</p>
<p>Newer versions dropped this test, substituting instead a test on the <code>required</code> attribute (which was already being used to test <code>optionals</code>).</p>
</div>
<span class="comment-copy">Can you please help here to explain how to use 'nargs' to have optional parameter</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html#nargs</a></span>
<span class="comment-copy">I should add that <code>add_subparsers</code> produces an argument with a special <code>nargs='A...'</code> value.  That can't be changed without destroying the subparser mechanism.</span>
