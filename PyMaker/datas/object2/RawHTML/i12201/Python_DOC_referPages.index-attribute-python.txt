<div class="post-text" itemprop="text">
<p>When I was reading this answer <a href="https://stackoverflow.com/a/9841401/5175044">https://stackoverflow.com/a/9841401/5175044</a> to a question on removing duplicates from a string, I couldn't understand what the <code>index</code> attribute meant in </p>
<pre><code>''.join(sorted(set(foo), key=foo.index)) 
</code></pre>
<p>I did this example run:</p>
<pre><code>foo = "Wicked long string"
&gt;&gt;&gt; "".join(sorted(set(foo),key = foo.index))
'Wicked longstr'
&gt;&gt;&gt; "".join(sorted(set(foo)))
' Wcdegiklnorst'
</code></pre>
<p>which leads me to think that it helps in keeping the order of the characters.</p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned by others Pythons <code>sorted()</code> function and  the <code>sort()</code> method of a list provides the <code>key</code> parameter to specify a function to be called on each list element prior to making comparisons.</p>
<p>The key thing is that this <code>key</code> parameter is a function object that takes when it is called only <em>one</em> argument and returns exactly <em>one</em> value which is used for the sorting.</p>
<p>A anonymous <a href="https://docs.python.org/3/reference/expressions.html#lambda" rel="nofollow">"lambda" function</a> is often used for this purpose, since its definition does not include a <code>return</code> statement and therefor always contains an one expression which is returned.</p>
<p>For instance </p>
<pre><code>&gt;&gt;&gt; myKey = lambda e: id(e)
</code></pre>
<p>creates an <em>(anonymous) function object</em></p>
<pre><code>&gt;&gt;&gt; type(myKey)
&lt;class 'function'&gt;
</code></pre>
<p>which takes one argument and returns a value and would therefore be a valid <code>key</code> for sorting.</p>
<p>If you want to call the <code>myKey</code> function  object now you would simply do this:</p>
<pre><code>&gt;&gt;&gt; myKey(42)
503732608
</code></pre>
<hr/>
<p>To solve your problem you could create a lambda function as <code>key</code> which takes an element and returns its index in the <code>foo</code> string to keep the order of the characters:</p>
<pre><code>&gt;&gt;&gt; foo = "Wicked long string"
&gt;&gt;&gt; "".join(sorted(set(foo), key = lambda e: foo.index(e)))
'Wicked longstr'
</code></pre>
<p>On the other hand -- since <code>foo.index</code> is a function object itself which takes one argument and returns one value -- you could pass this object instead to the <code>sorted()</code> function and by-pass the lambda definition:</p>
<pre><code>&gt;&gt;&gt; "".join(sorted(set(foo),key = foo.index))
'Wicked longstr'
</code></pre>
<p>Hope this helps :)</p>
</div>
<div class="post-text" itemprop="text">
<p><code>index</code> is a method used for most ordered sequences to find the first occurrence of some element in that sequence.  For example <code>"My string is here.".index(" ")</code> would return <code>2</code> because the first occurrence of <code>" "</code> is at position <code>2</code>.  It is used for strings, tuples, lists, etc.  The documentation on <a href="https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange" rel="nofollow">sequences</a> has more about it.</p>
</div>
<span class="comment-copy">Okay... so what is your question?</span>
<span class="comment-copy">All sequences support the <code>.index</code> method, see <a href="https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange" rel="nofollow noreferrer">docs.python.org/2/library/â€¦</a></span>
<span class="comment-copy">This sorts a <code>set</code> (which is unordered) using the original lists index. So you get the same order as the original list. Without <code>key</code> it would just sort the characters lexically.</span>
<span class="comment-copy">@CoryKramer, I don't get what <code>.index</code> is, because it has nothing to do with <code>.index(sub[, start[, end]])</code>, does it?</span>
<span class="comment-copy">@AChampion, so if I run <code>&gt;&gt;&gt; for i in foo: print i.index</code> it returns every list element's original index?</span>
<span class="comment-copy">I understand the use of index when it has parameters. What I don't seem to understand is when it's used as an attribute.</span>
<span class="comment-copy">Methods are not special attributes just because they are methods; they are attributes that can be moved around and referenced just like anything else.  The <code>sorted</code> function has its own way of sorting, but you can also specify a key.  This key is a function which, when given a value, returns a certain number that <code>sorted</code> will use to put that value in its list.  In this case, The value of each element is its index in <code>foo</code>.  That way all equal elements will have the same sort value, and will therefore be sorted next to each other.</span>
<span class="comment-copy">@tulians the attribute is just a variable that stores a reference to that function that you can use like anything else. Try this: <code>x = 'hello'.index</code> then call like <code>x('o')</code>, <code>x('e')</code>, <code>x('y')</code>.</span>
