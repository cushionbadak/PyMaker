<div class="post-text" itemprop="text">
<p>Biologists use a sequence of letters A, C, T, and G to model a genome.  A gene is a substrsing of a genome that starts after a triplet ATG and ends before a triplet TAG, TAA, or TGA.  Furthermore, the length of a gene string is a multiple of 3 and the gene does not contain any of the triplets ATG, TAG, TAA, and TGA.</p>
<p>Ideally:</p>
<pre><code>Enter a genome string: TTATGTTTTAAGGATGGGGCGTTAGTT #Enter   
TTT
GGGCGT
-----------------
Enter a genome string: TGTGTGTATAT
No Genes Were Found
</code></pre>
<p>So far, I have:</p>
<pre><code>def findGene(gene):
    final = ""
    genep = gene.split("ATG")
    for part in genep:
        for chr in part:
            for i in range(0, len(chr)):
                if genePool(chr[i:i + 3]) == 1:
                    break
                else:
                    final += (chr[i+i + 3] + "\n")
    return final

def genePool(part):
    g1 = "ATG"
    g2 = "TAG"
    g3 = "TAA"
    g4 = "TGA"
    if (part.count(g1) != 0) or (part.count(g2) != 0) or (part.count(g3) != 0) or (part.count(g4) != 0):
        return 1

def main():
    geneinput = input("Enter a genome string: ")
    print(findGene(geneinput))

main()
# TTATGTTTTAAGGATGGGGCGTTAGTT
</code></pre>
<p>I keep running into errors</p>
<p>To be completely honest, this is really not working for me - I think I have hit a dead end with these lines of code -  a new approach may be helpful.</p>
<p>Thanks in advance!</p>
<p>The error that I have been getting -</p>
<pre><code>Enter a genome string: TTATGTTTTAAGGATGGGGCGTTAGTT
Traceback (most recent call last):
  File "D:\Python\Chapter 8\Bioinformatics.py", line 40, in &lt;module&gt;
    main()
  File "D:\Python\Chapter 8\Bioinformatics.py", line 38, in main
    print(findGene(geneinput))
  File "D:\Python\Chapter 8\Bioinformatics.py", line 25, in findGene
    final += (chr[i+i + 3] + "\n")
IndexError: string index out of range
</code></pre>
<p>Like I said before, I'm not really sure if I am on the right track to solve the issue with my current code - any new ideas w/ pseudo code is appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be done with a <a href="https://docs.python.org/3/library/re.html" rel="nofollow">regular expression</a>:</p>
<pre><code>import re

pattern = re.compile(r'ATG((?:[ACTG]{3})+?)(?:TAG|TAA|TGA)')
pattern.findall('TTATGTTTTAAGGATGGGGCGTTAGTT')
pattern.findall('TGTGTGTATAT')
</code></pre>
<p><strong>Output</strong></p>
<pre>
['TTT', 'GGGCGT']
[]
</pre>
<p>Explanation extracted from <a href="https://regex101.com/r/yI4tN9/3" rel="nofollow">https://regex101.com/r/yI4tN9/3</a></p>
<pre><code>"ATG((?:[ACTG]{3})+?)(?:TAG|TAA|TGA)"g
    ATG matches the characters ATG literally (case sensitive)
    1st Capturing group ((?:[ACTG]{3})+?)
        (?:[ACTG]{3})+? Non-capturing group
            Quantifier: +? Between one and unlimited times, as few times as possible, expanding as needed [lazy]
            [ACTG]{3} match a single character present in the list below
                Quantifier: {3} Exactly 3 times
                ACTG a single character in the list ACTG literally (case sensitive)
    (?:TAG|TAA|TGA) Non-capturing group
        1st Alternative: TAG
            TAG matches the characters TAG literally (case sensitive)
        2nd Alternative: TAA
            TAA matches the characters TAA literally (case sensitive)
        3rd Alternative: TGA
            TGA matches the characters TGA literally (case sensitive)
    g modifier: global. All matches (don't return on first match)
</code></pre>
</div>
<span class="comment-copy">What are the errors?</span>
<span class="comment-copy">Do you plan to use it for large datasets  or is it intended for short snippets ?</span>
<span class="comment-copy">@mhawke I seem to be running into errors that revolve around the <code>[i:i + 3]</code>--For example, I seem to be having problems when the slicing (the <code>[i:i+3]</code> part) will run out of index spaces.  Does that help?</span>
<span class="comment-copy">@Moritz No, just the basics, just what I had written.  Short snippets, just as you said.</span>
<span class="comment-copy">Maybe it's how the question is written, but genes can contain ATG - it's both an indicator of 'START' and an internal element (codes for methionine).</span>
<span class="comment-copy">I'm not familiar with the <code>re</code>.  A very brief explination? - Thanks @mhawke</span>
<span class="comment-copy">@MattRumbel: basically the re pattern looks for ATG followed by the shortest sequence of bases until one of the sentinel triplets TAG, TAA, or TGA is seen. This will match genes that <i>do</i> contain ATG within their sequence which Stidgeon commented on. (I don't know whether ATG should be included, I'm not a biologist)</span>
<span class="comment-copy">Thanks for the explanation, that was easy to understand</span>
<span class="comment-copy">@Matt The letters have to match in groups of 3, so the <code>(.*?)</code> should be something like<code>((?:[ACTG]{3})*?)</code></span>
<span class="comment-copy">@RootTwo: thanks for pointing that out, I overlooked that requirement.</span>
