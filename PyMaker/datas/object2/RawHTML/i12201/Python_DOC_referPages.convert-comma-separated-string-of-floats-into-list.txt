<div class="post-text" itemprop="text">
<p>I need to define a function <code>txtnum(L)</code> that takes a string of comma separated floats such as <code>"1.5,2.5,3.5"</code> as a parameter and converts it into a list <code>[1.5, 2.5, 3.5]</code>.</p>
<p>I have tried using <code>.split()</code>, <code>.join()</code>, <code>map()</code>, etc and cannot get anything to return a list that does NOT include quotations. I'm pretty new to Python and a little lost here. </p>
<p>How would I go about doing this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to convert the datatype of splitted vars because splitting alone string gives you a list of strings.</p>
<pre><code>&gt;&gt;&gt; s = "1.5,2.5,3.5"
&gt;&gt;&gt; [float(i) for i in s.split(',')]
[1.5, 2.5, 3.5]
&gt;&gt;&gt; 
</code></pre>
<p>or</p>
<pre><code>&gt;&gt;&gt; map(float, s.split(','))
[1.5, 2.5, 3.5]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>1.5,2.5,3.5</code> is a valid <code>tuple</code> literal in Python (without parentheses, yes, but it doesn't matter), so you can use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> on it:</p>
<pre><code>In [1]: import ast

In [2]: s = '1.5,2.5,3.5'

In [3]: ast.literal_eval(s)
Out[3]: (1.5, 2.5, 3.5)
</code></pre>
<p>If you really need a list, that's easy, too:</p>
<pre><code>In [4]: list(ast.literal_eval(s))
Out[4]: [1.5, 2.5, 3.5]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this out:</p>
<pre><code>s = "1.5,2.5,3.5"
strArr = s.split(',')
import numpy as np
x = np.array(strArr, dtype='|S4')
arrFloat = x.astype(np.float)
print arrFloat
</code></pre>
</div>
