<div class="post-text" itemprop="text">
<p>Is there a dictionary in python which will only keep the most recently accessed keys. Specifically, I am caching relatively large blobs of data in a dictionary, and I am looking for a way of preventing the dictionary from ballooning in size, and to drop to the variables which were only accessed a long time ago [i.e. to only keep the say the 1000 most recently accessed keys - and when a new key gets added, to drop the key that was accessed the longest ago].</p>
<p>I suspect this is not part of the standard dictionary class, but am hoping there is something analogous.</p>
</div>
<div class="post-text" itemprop="text">
<p>Sounds like you want a Least Recently Used (LRU) cache.
Here's a Python implementation already: <a href="https://pypi.python.org/pypi/lru-dict/">https://pypi.python.org/pypi/lru-dict/</a></p>
<p>Here's another one: <a href="https://www.kunxi.org/blog/2014/05/lru-cache-in-python/">https://www.kunxi.org/blog/2014/05/lru-cache-in-python/</a></p>
</div>
<span class="comment-copy">You can add a <a href="http://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> to your question and make it more clear.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functools.html#functools.lru_cache" rel="nofollow noreferrer">docs.python.org/3/library/functools.html#functools.lru_cache</a></span>
<span class="comment-copy">Incredibly useful utility when writing your own in memory cache vs. using memcache or something similar (you'd be surprised how often this sadly happens).</span>
