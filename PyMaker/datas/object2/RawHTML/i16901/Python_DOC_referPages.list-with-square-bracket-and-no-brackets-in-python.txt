<div class="post-text" itemprop="text">
<p>I want to know whether both of these are a list or not. In python, are both of these lists?</p>
<pre><code>x = [1,2,3]
## and
y = 1,2,3
</code></pre>
<p>Is <code>y</code> a list?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>x</code> is a list, but <code>y</code> is a <a href="https://docs.python.org/2/library/stdtypes.html#sequence-types-str-unicode-list-tuple-bytearray-buffer-xrange" rel="nofollow"><em>tuple</em></a>. The <a href="https://docs.python.org/2/reference/expressions.html#expression-lists" rel="nofollow">parentheses to define a tuple</a> are optional in most contexts; it is the <em>comma</em> that defines the value, really.</p>
<p>You can test this yourself with the <a href="https://docs.python.org/2/library/functions.html#type" rel="nofollow"><code>type()</code> function</a>:</p>
<pre><code>&gt;&gt;&gt; x = [1,2,3]
&gt;&gt;&gt; type(x)
&lt;type 'list'&gt;
&gt;&gt;&gt; y = 1,2,3
&gt;&gt;&gt; type(y)
&lt;type 'tuple'&gt;
&gt;&gt;&gt; y
(1, 2, 3)
</code></pre>
<p>Tuples are immutable; you can create one but then not alter the contents (add, remove or replace elements).</p>
</div>
<div class="post-text" itemprop="text">
<p>No.  The first is a list and the second is a tuple:</p>
<pre><code>&gt;&gt;&gt; x = [1,2,3]
&gt;&gt;&gt; type(x)
&lt;class 'list'&gt;
&gt;&gt;&gt; y = 1,2,3  # This is equivalent to doing:  y = (1,2,3)
&gt;&gt;&gt; type(y)
&lt;class 'tuple'&gt;
&gt;&gt;&gt;
</code></pre>
<p>As a note for the future, if you ever want to see the type of an object, you can use the <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow"><code>type</code></a> built-in as I demonstrated above.</p>
</div>
<span class="comment-copy">You can get an idea by using <code>type(y)</code></span>
