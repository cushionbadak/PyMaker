<div class="post-text" itemprop="text">
<p>New to python here. Trying to get find the average of totaled up keys in a dictionary.</p>
<p>I've managed to grab the total of all values for each key, but I'm not certain how to find the average of these new values.</p>
<pre><code>import os

f = open("iris.data", "r")
count = 0
d = {}
# You want the dictionary to have d = {Iris-setosa: list of values]
# Populate dictionary
# Code would work regardless of file
# Reference movie names file

for line in f:
    if line.isspace():
        continue #If a particular line is made of just spaces, ignore it
    strip = line.strip("\n") #Strips out that particular string
    data = strip.split(",")
    name = data[4]

    if name in d:
        for i in range(len(data)-1):
            d[name][i] += float(data[i])
        d[name][4] += 1 #increment count
        count += 1
    else:
        d[name] = [float(i) for i in data[0:4]]
        d[name].append(1) #keep count
        count = 1
print(d)

f.close
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You already store a count with each list of values; simply loop over the dictionary <em>items</em> (key-value) pairs and use the last element of the value lists:</p>
<pre><code>for key, values in d.items():
    avg = [v / values[-1] for v in values[:-1]]
    print(key, *avg)
</code></pre>
<p>This uses the last element of each <code>values</code> list as the row count, and uses a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> to produce an average value for each of your columns. </p>
<p>Some other remarks:</p>
<ul>
<li><p>you evidently have a CSV file; consider using the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code> module</a> instead. </p></li>
<li><p>you never <em>called</em> the <code>f.close()</code> method; you merely referenced it. </p>
<p>However, you should consider using the file object as a <a href="https://docs.python.org/3/library/stdtypes.html#context-manager-types" rel="nofollow">context manager</a> instead. The <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow"><code>with</code> statement</a> ensures that the file is closed for you when the block is exited:</p>
<pre><code>with open("iris.data", "r") as f:
    for line in f:
        line = line.rstrip('\n')
        if not line:
            continue
</code></pre></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You can convert the values to a list, then sum, and divide by the length of the list:</p>
<pre><code>values = d.values()
average_value = sum(values) / len(values)
</code></pre>
<p>Since the values are lists, perhaps you can get the average for each list:</p>
<pre><code>for v in d.values():
    average_value = sum(v) / len(v)
</code></pre>
</div>
<span class="comment-copy">You're a saint and scholar sir. Thanks for your help!</span>
<span class="comment-copy">This treats each list as a collection of values; the OP is already summing CSV values however; 4 separate columns are each summed based on a key, with a fifth value in the list being the number of summed rows.</span>
<span class="comment-copy">In other words; the OP is looking for 4 averages per key. Not 1 average per key.</span>
