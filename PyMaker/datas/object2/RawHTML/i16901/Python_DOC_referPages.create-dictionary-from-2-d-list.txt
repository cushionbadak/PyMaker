<div class="post-text" itemprop="text">
<p>I need to create a dictionary, with the last and first name of the author as the key, and the quantity on hand, price, and the book's name as the values. </p>
<pre><code>[['Shakespeare', 'William', 'Rome And Juliet', '5', '5.99'], ['Shakespeare', 'William', 'Macbeth', '3', '7.99'], ['Dickens', 'Charles', 'Hard Times', '7', '27.00'], ['']]
</code></pre>
<p>I've compiled this 2-D list, so far and I'm stuck.</p>
<p>Any help would be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>The following will create a dictionary that maps each author's name to a<code>list</code>of books they've written. This is done using a specialization of the built-in dictionary type named<a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>defaultdict</code></a>which is defined in the<code>collections</code>module.</p>
<pre><code>from collections import defaultdict
from pprint import pprint

books = [['Shakespeare', 'William', 'Rome And Juliet', '5', '5.99'],
         ['Shakespeare', 'William', 'Macbeth', '3', '7.99'],
         ['Dickens', 'Charles', 'Hard Times', '7', '27.00'],
         ['']]

d = defaultdict(list)
for book in (book for book in books if book[0]):
    d[book[0], book[1]].append(book[2:])

pprint(d)
</code></pre>
<p>Output:</p>
<pre class="lang-none prettyprint-override"><code>{('Dickens', 'Charles'): [['Hard Times', '7', '27.00']],
 ('Shakespeare', 'William'): [['Rome And Juliet', '5', '5.99'],
                              ['Macbeth', '3', '7.99']]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It doesn't sound like you have much experience with Python. You should note the following sections of the tutorial (as you make your way through the entire tutorial, which is well worth your time!): <a href="https://docs.python.org/3/tutorial/datastructures.html#looping-techniques" rel="nofollow">looping techniques</a>, <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">dictionaries</a>, and <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow">tuples and sequences</a>.</p>
<p>In the end, you will probably want something along these lines:</p>
<pre><code>&gt;&gt;&gt; books = [['Shakespeare', 'William', 'Rome And Juliet', '5', '5.99'], ['Shakespeare', 'William', 'Macbeth', '3', '7.99'], ['Dickens', 'Charles', 'Hard Times', '7', '27.00'], ['']]
&gt;&gt;&gt; d = dict()
&gt;&gt;&gt; for book in books:
    if book and len(book) &gt; 3:  # make sure book list is not empty and has more than three elements
        d[tuple(book[:2])] = book[3:] + [book[2]]  # make sure value reflects your desired order

&gt;&gt;&gt; d
{('Dickens', 'Charles'): ['7', '27.00', 'Hard Times'], ('Shakespeare', 'William'): ['3', '7.99', 'Macbeth']}
</code></pre>
<p>Note that dictionary keys must be immutable, so I made each key of <code>d</code> a tuple.</p>
</div>
<span class="comment-copy">What language ?</span>
<span class="comment-copy">Coding in python 3</span>
<span class="comment-copy">For future reference, you will likely get more help if you include any code that you have already used to try to tackle this problem on your own.</span>
<span class="comment-copy">What do you want the value to be when an author has written more than one book, as is the case for Shakespeare in your example data?</span>
<span class="comment-copy">Wow, I didn't even know of the defaultdict. And you actually did it perfectly, as the author can have multiple books, hence multiple values for one key.</span>
<span class="comment-copy">Yes, <code>defaultdict</code> is handy for dictionaries where keys need to be mapped to multiple values since adding the first one doesn't need to be handled as a special case. If this answered your question the best, please accept it. If you're unsure how to do that, see the question <a href="http://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work">How does accepting an answer work?</a></span>
<span class="comment-copy">How can I make a 2-D list with the values? So the book would be the bigger list, and it would contain another list that has the 2 numbers in it.</span>
<span class="comment-copy">The value associated with each author name key is a list of lists (aka as a 2-D list). You can append as many additional ones of varying lengths as needed. The code in my answer will work as is for authors of any number of books.</span>
<span class="comment-copy">With this dictionary, I want to be able to change the price and quantity, add more authors, and add books to authors already in the list. By your comment, this will work for adding authors. What about the other things?</span>
<span class="comment-copy">Thank you for the links! And no, I don't have much experience. Just reading a book and trying to learn the best I can. Encountered this problem and couldn't solve it.</span>
