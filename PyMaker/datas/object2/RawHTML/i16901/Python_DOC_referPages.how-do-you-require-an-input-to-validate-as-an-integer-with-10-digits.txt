<div class="post-text" itemprop="text">
<p>I am making an ISBN check digit program. However, although I have made my program so that it will only accept a value of length 10, if I input 10 letters it will crash. </p>
<p>Does anyone know how to fix this?</p>
<p>My Code:</p>
<pre><code>isbnnumber = input('Please input your 10 digit book no. : ')
while len(isbnnumber) != 10:
    print('You have not entered a 10 digit value! Please try again.')
    isbnnumber = input('Please input your 10 digit book no. : ')
else:
    no1 = int(isbnnumber[0])*11
    no2 = int(isbnnumber[1])*10... etc...
</code></pre>
<p>Help would be very much appreciated, thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="nofollow"><code>str.isdigit</code></a> to test if a string is all digits:</p>
<pre><code>while len(isbnnumber) != 10 or not isbnnumber.isdigit():
</code></pre>
<p>See a demonstration below:</p>
<pre><code>&gt;&gt;&gt; '123'.isdigit()
True
&gt;&gt;&gt; '123a'.isdigit()
False
&gt;&gt;&gt;
&gt;&gt;&gt;
&gt;&gt;&gt; isbnnumber = input('Please input your 10 digit book no. : ')
Please input your 10 digit book no. : 123
&gt;&gt;&gt; while len(isbnnumber) != 10 or not isbnnumber.isdigit():
...     print('You have not entered a 10 digit value! Please try again.')
...     isbnnumber = input('Please input your 10 digit book no. : ')
...
You have not entered a 10 digit value! Please try again.
Please input your 10 digit book no. : 123456789
You have not entered a 10 digit value! Please try again.
Please input your 10 digit book no. : 123456789a
You have not entered a 10 digit value! Please try again.
Please input your 10 digit book no. : 1234567890
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Please note that there is not only ISBN-10, there is also ISBN-13 (in fact more commonly used worldwide).
Also, an ISBN-10 does not have to be all digits: one digit is a checksum, which can evaluate to the letter "X" (when it would instead be 10, numerically).
And while you're at it: check those checksum digits too; they are there for a reason.</p>
<p>so I suggest you make some helper functions:</p>
<pre><code>def is_valid_isbn(isbn):
    return is_valid_isbn10(isbn) or is_valid_isbn13(isbn)

def is_valid_isbn10(isbn):
    # left as an exercise
    return len(...) and isbn10_validate_checksum(isbn)

def is_valid_isbn13(isbn):
    # left as an exercise
    return len(...) and isbn13_validate_checksum(isbn)
</code></pre>
<p>and implement your input loop as follows:</p>
<pre><code>valid_isbn=False
while not valid_isbn:
    isbn = input('Please input your ISBN: ')
    valid_isbn = is_valid_isbn(isbn) and isbn # and part is optional, little trick to save your isbn directly into the valid_isbn variable when valid, for later use.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can replace the condition of your while loop with a richer one that checks for digits, for example:</p>
<pre><code>while not isbnnumber.isdigit() or len(isbnnumber) != 10:    
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>With <a href="https://docs.python.org/2/library/re.html" rel="nofollow">regular expressions</a>, you can exactly test a defined format for given string.</p>
<pre><code>import re

m = re.match(r'^\d{10}$', isbn)
if m:
    # we have 10 digits!
</code></pre>
<p>The regular expression here, is <code>\d{10}</code>. The <code>\d</code> means, you are looking for a digit, the <code>{10}</code> means, you need exactly ten of them. The <code>^</code> marks the beginning of the string and <code>$</code> the end of your string.</p>
<p>Using regular expression is not always what you need, and if you're working with them the first time, you need some time to understand. But regular expressions are one of the most powerful tools for developing.</p>
</div>
<span class="comment-copy">Are you using Python 3.x? If so, you should tag it with 'Python-3.x'</span>
<span class="comment-copy">Yes I am, and will do. Any help with the problem?</span>
<span class="comment-copy">many ISBNs include the letter X as well as numbers, any restricting of characters to digits will break on those ISBNs. Uppercase X represents the number 10 when used as the checkdigit <a href="http://www.isbn.org/faqs_general_questions#isbn_faq5" rel="nofollow noreferrer">isbn.org/faqs_general_questions#isbn_faq5</a></span>
<span class="comment-copy">How would I say is NOT digit? This is very helpful but I need the reverse to fit into my program.</span>
<span class="comment-copy">@user3576688 It does say that. It basically says: <code>loop this until the string is 10 characters long and consists of all digits</code></span>
<span class="comment-copy">Uppercase X can be used as the checkdigit in ISBNs, which the OP did not mention <a href="http://www.isbn.org/faqs_general_questions#isbn_faq5" rel="nofollow noreferrer">isbn.org/faqs_general_questions#isbn_faq5</a></span>
<span class="comment-copy">upvoting for handling uppercase X when used as the checkdigit <a href="http://www.isbn.org/faqs_general_questions#isbn_faq5" rel="nofollow noreferrer">isbn.org/faqs_general_questions#isbn_faq5</a></span>
