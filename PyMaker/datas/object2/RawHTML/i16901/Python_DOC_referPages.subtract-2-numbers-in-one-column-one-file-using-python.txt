<div class="post-text" itemprop="text">
<p>I have a file that contains 9 columns and 14399 rows. I want, using Python3.3, to subtract first number in 4th column from the 99th on the same column, then subtract the 100th from the 199th and so one...all in the same column and save the corresponding numbers of the first two columns and the answer of subtracting in a new CSV file. Below are table example and my code attempt (I searched through the questions but didn't find any).</p>
<pre><code>Input file named test.CAR
1/12/2009 00:00:05 01   34.51 1234.43 54.3  4321.5  55.4  3241.4
1/12/2009 00:00:10 02   34.51 1234.40 54.3  4321.52 55.4  3241.4
....
....
1/12/2009 00:10:05 99   36.51 4244.40 64.3  4421.52 85.4  4241.4
..
..
1/12/2009 00:20:10 100  44.51 1234.40 54.3  4321.52 55.4  3241.4
..
..
1/12/2009 00:30:10 199  54.51 1234.40 54.3  4321.52 55.4  3241.4
..
..
Output file named test.csv
1/12/2009 00:00:05  2.00               from (36.51-34.51)
1/12/2009 00:20:10 10.00               from (54.51-44.51)
..
..
</code></pre>
<p>Here is my code so far:</p>
<pre><code>import csv
import math

test_filename='C:/Python33/test.CAR'
test_filename=open(test_filename,'r')
num_lines=sum(1 for line in open('test.CAR'))
with open('test.csv','w',newline='')as fp:
    w=csv.writer(fp,delimiter=',')
    atad=[['DATE','TIME','NUMBER']]
    w.writerows(atad)
    a=0    #to set the first row
    d=98   ## to set the 99th row
    for i in range (1,(num_lines+1)):
        b=test_filename.readline()
        date=(b[0:10])   ## to capture the date in 1st column
        time=(b[12:19])  ## to capture the time in 2nd column
        y=b[24:30]       ## to capture the number I want in 4th column
        number=y(d)-y(a) ## to subtract the specific number on 1st from 99th column

        data=[[date,time,number]]
        w.writerows(data)
        a=a+98   ## counter to change 1st number to the 100th and so on 
        d=d+98   ## counter to change 99th number to the 199th and so on

test_filename.close()
</code></pre>
<p>The code is not working and I appreciate your help. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Treat your file as an iterable and it becomes easy to skip rows; we can use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow"><code>itertools.islice()</code></a> to skip rows we don't need:</p>
<pre><code>from itertools import islice
import csv

test_filename = 'C:/Python33/test.CAR'

with open(test_filename, 'r') as infh, open('test.csv', 'w' ,newline='') as outfh:
    writer = csv.writer(outfh)
    writer.writerow(['DATE', 'TIME', 'NUMBER'])

    for line in infh:
        date1, time1, _, num1, _ = line.split(None, 4)
        num1 = float(num1)

        # skip 98 lines to read line number 99 from where we are now
        nextline = next(islice(infh, 98, 99), None)
        if nextline is None:
            break  # file is done early

        date2, time2, _, num2, _ = nextline.split(None, 4)
        num2 = float(num2)

        writer.writerow([date1, time1, num2 - num1])
</code></pre>
<p>This also uses <code>float()</code> to turn your 4th column into a floating point value. It also uses <code>writer.writerow()</code> (singular) instead of <code>writer.writerows()</code> (plural) as we are only writing one row at a time here.</p>
</div>
<div class="post-text" itemprop="text">
<p>Without commenting/changing any of the style choices, the reason your program doesn't work is that you access values in the list <code>y</code> that are not yet filled in. </p>
<p>Additionally, you read the numbers from the file, but at that point they are still saved as a string.</p>
<pre><code>import csv
import math

test_filename='C:/Python33/test.CAR'
test_filename=open(test_filename,'r')
num_lines=sum(1 for line in open('test.CAR'))
with open('test.csv','w',newline='')as fp:
    w=csv.writer(fp,delimiter=',')
    atad=[['DATE','TIME','NUMBER']]
    w.writerows(atad)
    a=0    #to set the first row
    d=98   ## to set the 99th row
    for i in range (1,(num_lines+1)):
        b=test_filename.readline()
        date=(b[0:10])   ## to capture the date in 1st column
        time=(b[12:19])  ## to capture the time in 2nd column
        y=float(b[24:30])       ## to capture the number I want in 4th column
    while d &lt; len(y)-1:
        number=y(d)-y(a) ## to subtract the specific number on 1st from 99th column

        data=[[date,time,number]]
        w.writerows(data)
        a=a+98   ## counter to change 1st number to the 100th and so on 
        d=d+98   ## counter to change 99th number to the 199th and so on

test_filename.close()
</code></pre>
<p>Assuming the rest of the code works as intended (I am not at all sure it does) the introduction of <code>y=float(b[24:30])</code> and the <code>while</code> loop should solve some of your problems.</p>
</div>
<span class="comment-copy">Could you be a little more specific than "not working", please? Errors (provide full traceback)? Unexpected outputs (provide inputs and expected and actual outputs)?</span>
<span class="comment-copy">HI, the error I'm getting is: number y(d)-y(a)....TypeError:'str' object is not callable.</span>
<span class="comment-copy">maybe you need number=y[d]-y[a]</span>
<span class="comment-copy">Well there you go. <code>y</code> is a six-character string, and you are trying to call it e.g. <code>y(d)</code> with <code>d</code> as an argument. I would suggest you index instead <code>y[d] - y[a]</code>, but with <code>d == 98</code> that will cause an <code>IndexError</code>. What are you trying to do with that line of code?</span>
<span class="comment-copy">@user3178277 If you are adding further information to your question (what is good), like traceback, it is better to add it into your original question then to the comment as in your question it will become more visible to anyone trying to help your.</span>
<span class="comment-copy">Martijn Pieters...thanks..I think this is it. so if I want to subtract the first from the 90 (instead of the 99), i need change (infh, 98, 99), None) to (infh, 89, 90), None)?! if this is correct? how about only recording if the subtraction value is greater than 0.5? I would add: if num2-num1&gt;0.5...write.writerow([date1, time1, num2-num1])... is that correct??!!</span>
<span class="comment-copy">@user3178277: entirely correct on both counts!</span>
<span class="comment-copy">Martijn Pieters...I tried it and it works...Thank you very very very much...you made my day :)</span>
