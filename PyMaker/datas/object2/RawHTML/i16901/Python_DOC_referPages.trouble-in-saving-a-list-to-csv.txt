<div class="post-text" itemprop="text">
<p>I am saving a list to a csv using the writerow function from csv module. Something went wrong when I opened the final file in MS office Excel.
Before I encounter this issue, the main problem I was trying to deal with is getting the list saved to each row. It was saving each line into a cell in row1. I made some small changes, now this happened. I am certainly very confused as a novice python guy.</p>
<pre><code>import csv
inputfile = open('small.csv', 'r')
header_list = []
header = inputfile.readline()
header_list.append(header)
input_lines = []
for line in inputfile:
    input_lines.append(line)
inputfile.close()

AA_list = []
for i in range(0,len(input_lines)):
    if (input_lines[i].split(',')[4]) == 'AA':#column4 has different names including 'AA'
         AA_list.append(input_lines[i])

full_list = header_list+AA_list

resultFile = open("AA2013.csv",'w+')
wr = csv.writer(resultFile, delimiter = ',')
wr.writerow(full_list)
</code></pre>
<p>Thanks!
<img alt="The text is parsed differently from before" src="https://i.stack.imgur.com/DcSHU.png"/></p>
<p>UPDATE:
The full_list look like this: ['1,2,3,"MEM",...]</p>
<p>UPDATE2(APR.22nd):
Now I got three cells of data(the header in A1 and the rest in A2 and A3 respectively) in the same row. Apparently, the newline signs are not working for three items in one big list. I think the more specific question now is how do I save a list of records with '\n' behind each record to csv. </p>
<p>UPDATE3(APR.23rd):
original file
<img alt="enter image description here" src="https://i.stack.imgur.com/EPNeh.png"/></p>
</div>
<div class="post-text" itemprop="text">
<p>Importing the <code>csv</code> module is not enough, you need to use it as well. Right now, you're appending each line as an entire string to your list instead of a list of fields.</p>
<p>Start with</p>
<pre><code>with open('small.csv', 'rb') as inputfile:
    reader = csv.reader(inputfile, delimiter=",")
    header_list = next(reader)
    input_lines = list(reader)
</code></pre>
<p>Now <code>header_list</code> contains all the headers, and <code>input_lines</code> contains a nested list of all the rows, each one split into columns.</p>
<p>I think the rest should be pretty straightforward.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>append()</code> appends a list at the end of another list. So when you write <code>header_list.append(header)</code>, it takes <code>header</code> as a list of characters and appends to <code>header_list</code>. You should write</p>
<pre><code>headers = header.split(',')
header_list.append(headers)
</code></pre>
<p>This would split the header row by commas and <code>headers</code> would be the list of header words, then append them properly after <code>header_list</code>.</p>
<p>The same thing goes for <code>AA_list.append(input_lines[i])</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I figured it out.
The different between [val], val, and val.split(",") in the writerow bracket was:</p>
<p>[val]: a string containing everything taking only the first column in excel(header and "2013, 1, 2,..." in A1, B1, C1 and so on ).</p>
<p>val: each letter or comma or space(I forgot the technical terms) take a cell in excel.</p>
<p>val.split(","): comma split the string in [val], and put each string separated by comma into an excel cell.</p>
<p>Here is what I found out: 1.<a href="https://gis.stackexchange.com/questions/72458/export-list-of-values-into-csv-or-txt-file/72476#72476">the right way to export the flat list to each line by using with syntax</a>, 2.<a href="https://stackoverflow.com/questions/1816880/why-does-csvwriter-writerow-put-a-comma-after-each-character">split the list when writing row</a> </p>
<pre><code>csvwriter.writerow(JD.split())

full_list = header_list+AA_list
with open("AA2013.csv",'w+') as resultFile:
    wr = csv.writer(resultFile, delimiter= ",", lineterminator = '\n')
    for val in full_list:
        wr.writerow(val.split(','))
</code></pre>
<p>The wanted output<img alt="enter image description here" src="https://i.stack.imgur.com/7XbqD.png"/></p>
<p>Please correct my mistakenly used term and syntax! Thanks.</p>
</div>
<span class="comment-copy">Can you include the beginning of <code>full_list</code> in your answer? Also your second for-loop is very un-pythonic, you should rather do <code>for il in input_lines:</code> and then replace <code>input_lines[i]</code> with just <code>il</code>.</span>
<span class="comment-copy">@Jasper I I added the full_list to update.</span>
<span class="comment-copy">There are numerous issues with your code, which I understand is because you're very new to Python. I strongly recommend investing the time to read through the <a href="https://docs.python.org/2/tutorial/" rel="nofollow noreferrer">tutorial</a> (or <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">this</a> if you're using Python 3.x). Also study the <a href="https://docs.python.org/2/library/csv.html" rel="nofollow noreferrer"><code>csv</code> module docs</a>, which include some examples how to use it.</span>
<span class="comment-copy">Any particular reason you specify the delimiter? (Not saying it's wrong, just asking.)</span>
<span class="comment-copy">I realized if I make input_lines a list object, I will have to change the rest of my code. I found a solution for flat list(full_list in my case), yet the three results are still not in ideal segments(each record in one cell taking A1 to C1 in excel). <a href="http://gis.stackexchange.com/questions/72458/export-list-of-values-into-csv-or-txt-file" title="export list of values into csv or txt file">gis.stackexchange.com/questions/72458/â€¦</a></span>
<span class="comment-copy">I corrected the mistakes accordingly in my code and got three cells of data(the header in A1 and the rest in A2 and A3 respectively) in the same row. Apparently, the newline signs are not working for three items in one big list.</span>
<span class="comment-copy">Can you provide the first few lines of the csv file?</span>
<span class="comment-copy">The original csv? Or the output?</span>
<span class="comment-copy">The original of course, the one you're reading from.</span>
<span class="comment-copy">I uploaded a picture of the original data.</span>
