<div class="post-text" itemprop="text">
<p>This is how far I have got with this but I am not sure how to call the procedure again:</p>
<pre><code>Chelsea_Salaries_2014 = {'Jose Mourinho':[53, 163500, 'Unknown']}
Chelsea_Salaries_2014['Eden Hazard']=[22, 185000, 'June 2017']
Chelsea_Salaries_2014['Fernando Torres']=[29, 175000, 'June 2016']
Chelsea_Salaries_2014['John Terry']=[32, 175000, 'June 2015']
Chelsea_Salaries_2014['Frank Lampard']=[35, 125000, 'June 2014']
Chelsea_Salaries_2014['Ashley Cole']=[32, 120000, 'June 2014']
Chelsea_Salaries_2014['Petr Cech']=[31, 100000, 'June 2016']
Chelsea_Salaries_2014['Gary Cahill']=[27, 80000, 'June 2017']
Chelsea_Salaries_2014['David Luiz']=[26, 75000, 'June 2017']
Chelsea_Salaries_2014['John Obi Mikel']=[26, 75000, 'June 2017']
Chelsea_Salaries_2014['Nemanja Matic']=[25, 75000, 'June 2019']
Chelsea_Salaries_2014['Marco Van Ginkel']=[20, 30000, 'June 2018']
Chelsea_Salaries_2014['Ramires']=[26, 60000, 'June 2017']
Chelsea_Salaries_2014['Oscar']=[21, 67500, 'June 2017']
Chelsea_Salaries_2014['Lucas Piazon']=[19, 15000, 'June 2017']
Chelsea_Salaries_2014['Ryan Bertrand']=[23, 35000, 'June 2017']
Chelsea_Salaries_2014['Marko Marin']=[27, 35000, 'June 2017']
Chelsea_Salaries_2014['Cesar Azpilicueta']=[23, 55000, 'June 2017']
Chelsea_Salaries_2014['Branislav Ivanovic']=[29, 67500, 'June 2016']
Chelsea_Salaries_2014['Ross Turnbull']=[22, 17000, 'June 2017']
Chelsea_Salaries_2014['Demba Ba']=[28, 65000, 'June 2016']
Chelsea_Salaries_2014['Oriol Romeu']=[22, 15000, 'June 2015']

search_input = input('Welcome Jose. What player would you like to search for? ')
print('His Current Salary is £' + str(Chelsea_Salaries_2014[search_input][1]))
print()
new_salary = input('What would you like to change his salary to? ')

 if new_salary is 200000:
    print('Salary has been changed to £' + new_salary)
 else:
    if new_salary == &gt;100000:
       print('This salary is ridiculous!')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A few comments:</p>
<ol>
<li><code>new_salary is 200000</code> checks <em>identity</em> (whether the two things are the <em>same object</em>) not <em>equality</em> (whether the two things have the <em>same value</em>); you want <code>new_salary == 200000</code>.</li>
<li>That still won't work, because <code>new_salary</code>, like everything you get from <code>input</code>, is a string; you can fix this with <code>new_salary = int(input(...))</code>.</li>
<li>Your code doesn't actually change the salary in the dictionary <code>Chelsea_Salaries_2014</code>; to do that, assign the new value back to the dictionary <code>Chelsea_Salaries_2014[search_input][1] = new_salary</code>.</li>
<li>What values are you checking for? Should the value be updated if the new value is less than or equal to £200,000? If you get warned that it's ridiculous, should it be updated anyway? You need to think more carefully about what the logic is. For example, I think your first check should be <code>&lt;= 200000</code>, but then you <em>never reach</em> the check for <code>&lt;= 100000</code>.</li>
</ol>
<p>I think you want something like this:</p>
<pre><code>def change_salary(salaries):
    search_input = input('Welcome Jose. What player would you like to search for? ')
    print('His Current Salary is £{0:,}'.format(salaries[search_input][1]))
    new_salary = int(input('What would you like to change his salary to? '))
    if new_salary &lt;= 200000:
        salaries[search_input][1] = new_salary
        print('Salary has been changed to £{0:,}'.format(new_salary))
    else:
        print('This salary is ridiculous!')
</code></pre>
<p>You can now call this repeatedly, like:</p>
<pre><code>while True:
    change_salary(Chelsea_Salaries_2014)
    choice = input("Go again? y/n ")
    if choice.lower() in ('n', 'no'):
        break
</code></pre>
<p>Once you have that working, you might want to consider some input validation in <code>change_salary</code> - i.e. does the user always enter an integer for <code>new_salary</code>? Is <code>search_input</code> always a valid key? What if they only enter part of the name?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this one:</p>
<pre><code>search_input = input('Welcome Jose. What player would you like to search for? ')
print('His Current Salary is £' + str(Chelsea_Salaries_2014[search_input][1]))
print()
new_salary = int(input('What would you like to change his salary to? '))

if new_salary &lt; 200000:
    print('Salary has been changed to £' + new_salary)
else:
    print('This salary is ridiculous!')
</code></pre>
</div>
<span class="comment-copy">Please read <a href="https://docs.python.org/release/1.5.1p1/tut/functions.html" rel="nofollow noreferrer">docs.python.org/release/1.5.1p1/tut/functions.html</a>.</span>
<span class="comment-copy">just enclose the code into a loop... do - while for example, until you press a specific key or write a reserved name</span>
<span class="comment-copy"><code>if new_salary is 200000:</code> is unlikely to do what you want - <code>new_salary</code> is a string, and try <code>(100000 * 2) is 200000</code> in the interpreter.</span>
<span class="comment-copy">@RodXavier, you should have recommended the <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">Python3 version</a> of the tutorial.</span>
<span class="comment-copy">thanks this is a real help</span>
<span class="comment-copy">Although e.g. adding <code>int</code> is useful, you don't need to reproduce the whole code to show this (indeed, doing so makes it harder to spot the change) and it would be useful to <i>say what you've done</i>. Also, this doesn't actually answer the OP's question (how to call the procedure again).</span>
<span class="comment-copy">200000 is the max. Anything below is ok</span>
