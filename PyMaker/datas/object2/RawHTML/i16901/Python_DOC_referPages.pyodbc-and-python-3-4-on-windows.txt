<div class="post-text" itemprop="text">
<p>pyodbc is a very nice thing, but the Windows installers only work with their very specific python version.  With the release of Python 3.4, the only available installers just stop once they don't see 3.3 in the registry (though 3.4 is certainly there).</p>
<p>Copying the .pyd and .egg-info files from a 3.3 installation into the 3.4 site-packages directory doesn't seem to do the trick.  When importing pyodbc, an ImportError is thrown: <code>ImportError: DLL load failed: %1 is not a valid Win32 application.</code></p>
<p>Is there a secret sauce that can be added to make the 3.3 file work correctly?  Or do we just need to wait for a 3.4 installer version?</p>
</div>
<div class="post-text" itemprop="text">
<p>The different versions of Python are (for the most part) not binary-compatible, and thus any compiled extensions (such as pyodbc) will only work for a specific version.</p>
<p>Note that pure-Python packages (the ones that are completely written in Python, and have no non-Python dependencies) do not need to be compiled, and thus can be written to support multiple Python versions.</p>
<p>Also note that it is <em>technically possible</em> for a compiled extension to be written such that it works for Python 3.2 as well as 3.3, 3.4, and the future 3.x's to come, but they have to limit themselves to the <a href="https://docs.python.org/3/c-api/stable.html" rel="noreferrer">"stable ABI"</a> as specified by <a href="http://www.python.org/dev/peps/pep-0384/" rel="noreferrer">PEP 384</a>, and most extensions do not do this. As far as I know, pyodbc is not limited to the stable ABI and must be compiled separately for each Python version.</p>
<p>That said, it is also possible to compile your own version of pyodbc from source, as long as you have the required tools and expertise. (But I'm guessing if you're asking this question, you don't. I don't either, otherwise I'd include some tips in this answer.)</p>
<p>As you have already commented, <a href="https://pypi.python.org/pypi/pypyodbc" rel="noreferrer">pypyodbc</a> may be your best bet, as it is a pure-Python package.</p>
<p>Installing pypyodbc can be done via the commandline: </p>
<pre><code>C:\Python34\Scripts&gt;pip install pypyodbc
</code></pre>
<p>Using it as drop-in replacement of pyodbc can be done using:</p>
<pre><code>import pypyodbc as pyodbc
</code></pre>
<p><em>[The current version of <code>pyodbc</code> at the time of this edit is <a href="https://pypi.python.org/pypi/pyodbc/3.0.10" rel="noreferrer">3.0.10</a>, and it does support Python 3.4. Of course, it's still useful to be aware of <code>pypyodbc</code> in case <code>pyodbc</code> falls behind again when future versions of Python are released.]</em></p>
</div>
<div class="post-text" itemprop="text">
<p>Did you try to download from <a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyodbc" rel="noreferrer">here</a>? It has an unofficial build for 3.4. I did a quick test myself, looks like it's working fine for me.</p>
</div>
<div class="post-text" itemprop="text">
<p>I fixed this by installing <code>pyodbc 3.0.10</code>. The latest version of pyodbc didn't work on Windows with <code>Python 3.4</code></p>
<p>However pyodbc 3.0.10 did work for me</p>
<p>Install command on command prompt : <code>pip install pyodbc 3.0.10</code></p>
</div>
<span class="comment-copy">A switch to pypyodbc may be in order, if there's nothing simple that can be done.</span>
<span class="comment-copy">For what it's worth, <code>pyodbc</code> has been updated very recently (late April 2015) and now supports Python 3.4.</span>
<span class="comment-copy"><i>"it's still useful to be aware of pypyodbc in case pyodbc falls behind again"</i> - Agreed, although unfortunately it looks like pypyodbc development has been stalled for quite a while now. Lots of unacknowledged bug reports and ignored pull requests (the last time I checked, anyway).</span>
<span class="comment-copy">@GordThompson: Indeed, pypyodbc appears to be dead, while pyodbc has had a flurry of activity late in 2016 and early 2017 which caught it all the way up to 3.6, with good prospects that the creator/maintainer will be able to keep up, judging by the fact that his latest commit is a script to help automate the Windows build process.</span>
<span class="comment-copy">No doubt that at least part of the reason for the renewed activity with pyodbc is that it is now officially supported by Microsoft (announced in early December 2016, IIRC).</span>
<span class="comment-copy">I get an error "ImportError: DLL load failed: %1 is not a valid Win32 application."; only when I try to install it into my Anaconda package directory.</span>
<span class="comment-copy">I get an error "ImportError: DLL load failed: %1 is not a valid Win32 application."; only when I try to install it into my Anaconda package directory. I think it's because my Anaconda is 64 bit, and what I installed was the win32 version. <a href="http://stackoverflow.com/a/25398326/1175496">As explained here</a> When I used this 64-bit download executable instead, it worked: pyodbc‑3.0.7.win‑amd64‑py3.4.exe</span>
<span class="comment-copy">That works for me on 3.4 32 bit.  Thanks!</span>
<span class="comment-copy">If you are using Anaconda then you should be using Conda to install your packages/modules. "Conda install pyodbc"</span>
