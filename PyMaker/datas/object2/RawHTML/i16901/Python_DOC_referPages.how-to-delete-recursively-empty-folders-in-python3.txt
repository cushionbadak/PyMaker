<div class="post-text" itemprop="text">
<p>I am trying to remove the empty folders of a directory.</p>
<pre><code>def remove_empty_dir(path):
    try:
        os.rmdir(path)
    except OSError:
        pass

def remove_empty_dirs(path):
    for root, dirnames, filenames in os.walk(path):
        for dirname in dirnames:
            remove_empty_dir(os.path.realpath(os.path.join(root, dirname)))

remove_empty_dirs(path)
</code></pre>
<p>I have also tried with:</p>
<pre><code>import shutil
shutil.rmtree(path)
</code></pre>
<p>But that removes everything, even those folders with contents. The problem is that I need to do it <strong>from inside to outside</strong>, this way if I have:</p>
<pre><code>root_folder
  child_folder1
    grandchild_folder1.1 (empty)
  child_folder2
    granchild_folder2.1
    granchild_folder2.2 (empty)
</code></pre>
<p>The program should delete grandchild_folder1.1, child_folder1 and child_folder2.2, but not the rest.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow"><code>os.walk</code></a> accepts optional <code>topdown</code> parameter (default: True).</p>
<p>By providing <code>topdown=False</code>, you can iterative from child directories first.</p>
<pre><code>def remove_empty_dirs(path):
    for root, dirnames, filenames in os.walk(path, topdown=False):
        for dirname in dirnames:
            remove_empty_dir(os.path.realpath(os.path.join(root, dirname)))
</code></pre>
</div>
<span class="comment-copy">That is great! But I forgot to say that my function was not working, so I have to change something else.</span>
<span class="comment-copy">Done! I had to change remove_empty_dir(os.path.realpath(dirname)) and write remove_empty_dir(os.path.realpath(os.path.join(root, dirname))) instead. Thank you!</span>
