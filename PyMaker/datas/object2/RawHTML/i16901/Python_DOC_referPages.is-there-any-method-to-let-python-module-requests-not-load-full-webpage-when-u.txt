<div class="post-text" itemprop="text">
<p>Not sure if the title make sense or not. Let me give more details here: I use <strong>requests</strong> module to get some webpages and then use <strong>BeautifulSoup</strong> or <strong>re</strong> to parse them. Those pages are kind of big ones, it will take a little while to get them. After taking a look at the HTMLs, I found that all information I care about resides in the first couple of lines (say the first 100 lines) of the HTML. So my question is that if there is a method to load those first 100 lines ONLY when using <strong>requests.get</strong> method? </p>
<p>P.S. The <strong>requests</strong> module is not mandatory here. If the problem can be solved without this module, I'm OK with it. Many thx.</p>
</div>
<div class="post-text" itemprop="text">
<p>The requests package supports precisely this with its <code>readlines()</code> function:</p>
<pre><code>import requests

r = requests.get('http://google.com', stream=True)
first_five_lines = r.raw.readlines(5)
print ''.join(first_five_lines)
</code></pre>
</div>
<span class="comment-copy">Are you sure you can parse it as correct HTML if you just get a truncated chunk?</span>
<span class="comment-copy">BeautifulSoup won't, but I believe using regular expression should do.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/http.client.html#httpresponse-objects" rel="nofollow noreferrer"><code>HTTPResponse.read()</code></a> accepts a parameter specifying the number of bytes to be read. Read however many bytes you need then close the connection.</span>
