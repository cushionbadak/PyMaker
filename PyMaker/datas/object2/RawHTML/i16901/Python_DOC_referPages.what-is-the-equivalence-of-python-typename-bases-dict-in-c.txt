<div class="post-text" itemprop="text">
<p>Alright so, I'm embedding python 3.3 into a c++ application. I'm looking to dynamically create a python class on the c++ side exactly like if I was doing the following in python:</p>
<p><code>my_type = type("MyType", (object,), dict())</code></p>
<p>I know I could always import the "builtins" module but I'm trying to avoid imports on the c++ side in general.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>The following seems to work just fine:</p>
<pre><code>PyObject *type(const char *name, boost::python::tuple bases, boost::python::dict dict) {
    return PyType_Type.tp_new(&amp;PyType_Type,
        Py_BuildValue("sOO", name, bases.ptr(), dict.ptr()), NULL);
}
</code></pre>
<p>Thanks to Zack for pointing me in the right direction!</p>
</div>
<span class="comment-copy">What do you mean. What is it supposed to do?</span>
<span class="comment-copy">I've edited my question.</span>
<span class="comment-copy">This is not an answer because (a) I don't know if it will help and (b) the question has unhelpfully been closed, but investigate <a href="https://docs.python.org/3/c-api/type.html#c.PyType_Type" rel="nofollow noreferrer"><code>PyType_Type</code></a>.</span>
<span class="comment-copy">Thanks Zack! The following did the trick: <code>PyType_Type.tp_new(&amp;PyType_Type, Py_BuildValue("s(){}", "NAME"), NULL);</code></span>
