<div class="post-text" itemprop="text">
<pre><code>index = {
    u'when_air': 0,
    u'chrono': 1,
    u'age_marker': 2,
    u'name': 3
}
</code></pre>
<p>How can I make this more beautiful (and clear) way than just manually setting each value?</p>
<p>like:</p>
<pre><code>index = dict_from_range(
    [u'when_air', u'chrono', u'age_marker', u'name'],
    range(4)
)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can feed the results of <a href="https://docs.python.org/3.4/library/functions.html#zip" rel="nofollow"><code>zip()</code></a> to the builtin <a href="https://docs.python.org/3.4/library/functions.html#func-dict" rel="nofollow"><code>dict()</code></a>:</p>
<pre><code>&gt;&gt;&gt; names = [u'when_air', u'chrono', u'age_marker', u'name']
&gt;&gt;&gt; print(dict(zip(names, range(4))))
{'chrono': 1, 'name': 3, 'age_marker': 2, 'when_air': 0}
</code></pre>
<p><code>zip()</code> will return a list of tuples, where each tuple is the <em>ith</em> element from <code>names</code> and <code>range(4)</code>. <code>dict()</code> knows how to create a dictionary from that.</p>
<p>Notice that if you give sequences of uneven lengths to <code>zip()</code>, the results are truncated. Thus it might be smart to use <code>range(len(names))</code> as the argument, to guarantee an equal length.</p>
<pre><code>&gt;&gt;&gt; print(dict(zip(names, range(len(names)))))
{'chrono': 1, 'name': 3, 'age_marker': 2, 'when_air': 0}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a dict comprehension together with the built-in function <code>enumerate</code> to build the dictionary from the keys in the desired order.</p>
<p>Example:</p>
<pre><code>keys = [u'when_air', u'chrono', u'age_marker', u'name']
d = {k: i for i,k in enumerate(keys)}
print d
</code></pre>
<p>The output is:</p>
<pre><code>{u'age_marker': 2, u'when_air': 0, u'name': 3, u'chrono': 1}
</code></pre>
<hr/>
<p>Note that with Python 3.4 the <code>enum</code> module was added. It may provide the desired semantics more conveniently than a dictionary.</p>
<hr/>
<p>For reference:</p>
<ul>
<li><a href="http://legacy.python.org/dev/peps/pep-0274/" rel="nofollow">http://legacy.python.org/dev/peps/pep-0274/</a></li>
<li><a href="https://docs.python.org/2/library/functions.html#enumerate" rel="nofollow">https://docs.python.org/2/library/functions.html#enumerate</a></li>
<li><a href="https://docs.python.org/3/library/enum.html" rel="nofollow">https://docs.python.org/3/library/enum.html</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>index = {k:v for k,v in zip(['when_air','chrono','age_marker','name'],range(4))}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This?</p>
<pre><code>#keys = [u'when_air', u'chrono', u'age_marker', u'name']

from itertools import count
print dict(zip(keys, count()))
</code></pre>
</div>
<span class="comment-copy">Your index looks like enum. If it really is, you should use the <code>enum</code> module.</span>
<span class="comment-copy">+1, but <code>range(len(names))</code>, perhaps?</span>
<span class="comment-copy">Ah yes, that makes sense</span>
