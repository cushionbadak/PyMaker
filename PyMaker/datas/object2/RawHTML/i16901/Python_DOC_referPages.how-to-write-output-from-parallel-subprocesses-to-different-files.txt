<div class="post-text" itemprop="text">
<p>I have the following python script. How can I log the outputs of each command separately, i.e. one file per each command containing that command's output?</p>
<pre><code>#!/usr/bin/env python                                                                                                                                                                                                                                                           

from subprocess import Popen
import sys

commands = [
    'command1',
    'command2',
    'command3'
]

processes = [Popen(cmd, shell=True) for cmd in commands]

for p in processes:
    p.wait()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just set <code>stdout</code> parameter to a corresponding file:</p>
<pre><code>import shlex
from contextlib import ExitStack # $ pip install contextlib2 (on Python 2)
from subprocess import Popen

with ExitStack() as stack:
    for i, cmd in enumerate(commands):
        output_file = stack.enter_context(open('output%d.log' % i, 'w'))
        stack.callback(Popen(shlex.split(cmd), stdout=output_file).wait)
</code></pre>
<p>To redirect stderr output from a child process, you could set <code>stderr</code> parameter. If <code>stderr=subprocess.STDOUT</code> then stdout and stderr are merged.</p>
<p><a href="https://docs.python.org/3/library/contextlib.html#contextlib.ExitStack" rel="nofollow"><code>ExitStack</code></a> is used to close the files and wait for already started child processes to exit even if an exception happens inside the <code>with</code>-statement e.g., if some command fails to start.</p>
</div>
