<div class="post-text" itemprop="text">
<p>When I run the following code on a string <code>words</code>:</p>
<pre><code>def word_feats(words):
    return dict([(word, True) for word in words])
print(word_feats("I love this sandwich."))
</code></pre>
<p>I get the output dict-comprehension in letters instead of words:</p>
<pre><code>{'a': True, ' ': True, 'c': True, 'e': True, 'd': True, 'I': True, 'h': True, 'l': True, 'o': True, 'n': True, 'i': True, 's': True, 't': True, 'w': True, 'v': True, '.': True}
</code></pre>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to explicitly <em>split</em> the string on whitespace:</p>
<pre><code>def word_feats(words):
    return dict([(word, True) for word in words.split()])
</code></pre>
<p>This uses <a href="https://docs.python.org/3/library/stdtypes.html#str.split"><code>str.split()</code></a> without arguments, splitting on arbitrary-width whitespace (including tabs and line separators).
A string is a sequence of individual characters otherwise, and direct iteration will indeed just loop over each character.</p>
<p>Splitting into words, however, has to be an explicit operation you need to perform yourself, because different use-cases will have different needs on <em>how</em> to split a string into separate parts. Does punctuation count, for example? What about parenthesis or quoting, should words grouped by those not be split, perhaps? Etc.</p>
<p>If all you are doing is setting all values to <code>True</code>, it'll be much more efficient to use <a href="https://docs.python.org/3/library/stdtypes.html#dict.fromkeys"><code>dict.fromkeys()</code></a> instead:</p>
<pre><code>def word_feats(words):
    return dict.fromkeys(words.split(), True)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; def word_feats(words):
...     return dict.fromkeys(words.split(), True)
... 
&gt;&gt;&gt; print(word_feats("I love this sandwich."))
{'I': True, 'this': True, 'love': True, 'sandwich.': True}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to <code>split</code> the <code>words</code> string:</p>
<pre><code>def word_feats(words):
    return dict([(word, True) for word in words.split()])
print(word_feats("I love this sandwich."))
</code></pre>
<h3>Example</h3>
<pre><code>&gt;&gt;&gt; words = 'I love this sandwich.'
&gt;&gt;&gt; words = words.split()
&gt;&gt;&gt; words
['I', 'love', 'this', 'sandwich.']
</code></pre>
<p>You can also use other characters on which to split:</p>
<pre><code>&gt;&gt;&gt; s = '23/04/2014'
&gt;&gt;&gt; s = s.split('/')
&gt;&gt;&gt; s
['23', '04', '2014']
</code></pre>
<h3>Your Code</h3>
<pre><code>def word_feats(words):
    return dict([(word, True) for word in words.split()])
print(word_feats("I love this sandwich."))

[OUTPUT]
{'I': True, 'love': True, 'this': True, 'sandwich.': True}
</code></pre>
</div>
<span class="comment-copy">Perfect, thanks!</span>
<span class="comment-copy">perfect, thanks!</span>
