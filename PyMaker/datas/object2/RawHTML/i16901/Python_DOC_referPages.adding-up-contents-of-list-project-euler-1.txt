<div class="post-text" itemprop="text">
<p>I'm trying to do Project Euler Problem 1 in Python (<a href="http://projecteuler.net./problem=1" rel="nofollow noreferrer">http://projecteuler.net./problem=1</a>) and I'm using a while loop to loop to 1000:</p>
<pre><code>from collections import Counter

x = 0
target = 1000
correctMultiples = list()
while x &lt; target:
    x += 1
    if x % 3 == 0 or x % 5 == 0:
        correctMultiples.append(x)

print(str(correctMultiples) + ' are multiples of 3 or 5')

print('The sum of the multiples of 3 or 5 under 1000 is, ' + str(sum(correctMultiples))) # For some reason, 1000 over, answer is 233168 NOT 234168
</code></pre>
<p>This works but the answer I'm getting is 1000 over. I get 234168 instead of 233168.</p>
<p>I've tried checking for duplicates: (following <a href="https://stackoverflow.com/questions/1920145/how-to-find-duplicate-elements-in-array-using-for-loop-in-python-like-c-c">How to find duplicate elements in array using for loop in Python?</a>)</p>
<pre><code>duplicates = Counter(correctMultiples)
print([i for i in duplicates if duplicates[i] &gt; 1])
</code></pre>
<p>but I don't think there can be duplicates can they? becuase I'm using if x % 3  <strong>or</strong> ...</p>
<p>I know this isn't the most efficient method, but still... why doesn't it work?
Can anyone help me find why the answer is 1000 over?
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You include <code>1000</code> in your loop, while the question ask for numbers <em>below</em> 1000.</p>
<p>Here you increment after doing the boundary check, so when <code>x==999</code> you will still run the loop:</p>
<pre><code>while x &lt; target:
    x += 1
</code></pre>
<p>This would be so much easier with a <code>for</code> loop:</p>
<pre><code>for x in range(1000):
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow">range</a> does <em>not</em> include the last element.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are including the number 1000 in your loop, because in the last iteration, <code>x</code> is 999 and gets increased once more.</p>
<p>A better solution would be the construct</p>
<pre><code>for x in range(1,1000):
    ...
</code></pre>
<p>which includes all x from 1 to 999 and doesn't compare to 1000 on each iteration.</p>
</div>
<span class="comment-copy">Hint: is 1000 divisible by 3 or 5?</span>
<span class="comment-copy">worth noting that if you want to get rid of duplicates you can simply <code>list(set(myList))</code></span>
<span class="comment-copy">you might want to check <code>range()</code> also.</span>
<span class="comment-copy">Sorry, I'm new to Python - when I say &lt;, does it include the number?</span>
<span class="comment-copy">No, but you increment <code>x</code> <i>after</i> you do that check.</span>
