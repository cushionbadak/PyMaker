<div class="post-text" itemprop="text">
<p>I'm current;y working on an encryption/decryption program and I need to be able to convert bytes to an integer. I know that:</p>
<pre><code>bytes([3]) = b'\x03'
</code></pre>
<p>Yet I can not find out how to do the inverse. What am I doing terribly wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you're on at least 3.2, there's a <a href="https://docs.python.org/3/library/stdtypes.html#int.from_bytes" rel="noreferrer">built in for this</a>: </p>
<blockquote>
<p><strong>int.from_bytes</strong>( <em>bytes, byteorder, *, signed=False</em> )</p>
<p>...</p>
<p>The argument bytes must either be a bytes-like object or an iterable
  producing bytes.</p>
<p>The byteorder argument determines the byte order used to represent the
  integer. If byteorder is "big", the most significant byte is at the
  beginning of the byte array. If byteorder is "little", the most
  significant byte is at the end of the byte array. To request the
  native byte order of the host system, use sys.byteorder as the byte
  order value.</p>
<p>The signed argument indicates whether twoâ€™s complement is used to
  represent the integer.</p>
</blockquote>
<p><br/></p>
<pre><code>## Examples:
int.from_bytes(b'\x00\x01', "big")                         # 1
int.from_bytes(b'\x00\x01', "little")                      # 256

int.from_bytes(b'\x00\x10', byteorder='little')            # 4096
int.from_bytes(b'\xfc\x00', byteorder='big', signed=True)  #-1024
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>int.from_bytes( bytes, byteorder, *, signed=False )
</code></pre>
<p>doesn't work with me 
I used function from this website, it works well</p>
<p><a href="https://coderwall.com/p/x6xtxq/convert-bytes-to-int-or-int-to-bytes-in-python" rel="nofollow noreferrer">https://coderwall.com/p/x6xtxq/convert-bytes-to-int-or-int-to-bytes-in-python</a></p>
<pre><code>def bytes_to_int(bytes):
    result = 0
    for b in bytes:
        result = result * 256 + int(b)
    return result

def int_to_bytes(value, length):
    result = []
    for i in range(0, length):
        result.append(value &gt;&gt; (i * 8) &amp; 0xff)
    result.reverse()
    return result
</code></pre>
</div>
<span class="comment-copy">There is also the <code>struct</code> module if you want to convert multiple variables at once.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/q/1163459/608639">Reading integers from binary file in Python</a>, <a href="https://stackoverflow.com/q/444591/608639">How to convert a string of bytes into an int in Python</a>, etc.</span>
<span class="comment-copy">Ah thank you, works now :-)</span>
<span class="comment-copy">if using 1 byte only ord() still works</span>
