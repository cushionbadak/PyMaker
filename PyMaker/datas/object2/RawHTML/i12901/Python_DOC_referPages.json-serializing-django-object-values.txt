<div class="post-text" itemprop="text">
<p>This problem has me scratching my head. I am pretty sure I am entering identical values into identical json serialize functions, but it works in one and doesn't work in the other.</p>
<p>I am using Django. My full function is below:</p>
<pre><code>def lookup(request):
if request.method == 'POST':
    print("Setting variable")
    test1 = [{'artist_name': 'Toucan Sam', 'slug': '266697336'}, {'artist_name': 'Toucan Dad', 'slug': '131853573'}, {'artist_name': 'Toucan Bill', 'slug': '566827569'}]
    print(test1)
    print("serializing")
    test2 = json.dumps(test1)
    print(test2)
    #POST goes here . is_ajax is must to capture ajax requests. Beginner's pit.
    if request.is_ajax() and len(request.POST.get('searchItem')) &gt; 3:
        #Always use get on request.POST. Correct way of querying a QueryDict.
        namestring = request.POST.get('searchItem')
        print("Setting variable")
        matches = ArtistAccount.objects.filter(artist_name__icontains=namestring).values('artist_name', 'slug')
        if matches:
            print(matches)
            print("serializing")
            data = json.dumps(matches)
            print(data)
            return HttpResponse(data, content_type="application/json")
</code></pre>
<p>I first ran it without the print functions and test variables. <code>lookup()</code> would break at the <code>data</code> variable and Django would report that:</p>
<p>Exception Value: [{'artist_name': 'Toucan Sam', 'slug': '266697336'}, {'artist_name': 'Toucan Dad', 'slug': '131853573'}, {'artist_name': 'Toucan Bill', 'slug': '566827569'}] is not JSON serializable</p>
<p>It reports that it isn't "JSON Serializable"!</p>
<p>So I copy the data directly and paste it into the test variables. When I run it again, the test variables serialize just fine and print just fine, but the final data variable does not serialize or print. The function breaks at that attempt, just like before. Below is my console output:</p>
<pre><code>Setting variable
[{'artist_name': 'Toucan Sam', 'slug': '266697336'}, {'artist_name': 'Toucan Dad', 'slug': '131853573'}, {'artist_name': 'Toucan Bill', 'slug': '566827569'}]
serializing
[{"artist_name": "Toucan Sam", "slug": "266697336"}, {"artist_name": "Toucan Dad", "slug": "131853573"}, {"artist_name": "Toucan Bill", "slug": "566827569"}]
Setting variable
[{'artist_name': 'Toucan Sam', 'slug': '266697336'}, {'artist_name': 'Toucan Dad', 'slug': '131853573'}, {'artist_name': 'Toucan Bill', 'slug': '566827569'}]
serializing
</code></pre>
<p>Everything is being copied directly. It looks like it should work! What has gone wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>To clarify, this is what I needed to change to make it work:</p>
<pre><code>matches = list(ArtistAccount.objects.filter(artist_name__icontains=namestring).values('artist_name', 'slug'))
</code></pre>
</div>
<span class="comment-copy">Looks like its time to learn to use the debugger. Replace those print/test lines with <code>import pdb; pdb.set_trace()</code> and you'll get a breakpoint there. <a href="https://docs.python.org/3/library/pdb.html" rel="nofollow noreferrer">docs.python.org/3/library/pdb.html</a></span>
<span class="comment-copy">you are confusing yourself ... you are giving your thing matches which is a list of model classes not a list of dictionaries ... you need to give json only primitive objects (ie ModelClass is not a primative class, but a dictionary of strings is)</span>
<span class="comment-copy">Awesome, @Joran Beasley. This answered my question! Thank you!</span>
