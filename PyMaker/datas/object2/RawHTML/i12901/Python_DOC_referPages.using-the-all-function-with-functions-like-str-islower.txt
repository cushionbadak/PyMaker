<div class="post-text" itemprop="text">
<pre><code>if all(password.islower()) or (password.isalpha()) or (password.isalnum()):
    print("")
</code></pre>
<p>I am trying to make it so the if statment checks if all of the variable 'password' is lowercase but the <code>all</code> function is not working for me.</p>
<p>My problem is that there is an error message saying </p>
<pre><code>TypeError: 'bool' object is not iterable
</code></pre>
<p>How can I use the <code>all</code> function and <code>any</code> function with another function like <code>.islower</code>? Also is the function <code>.isalnum</code> and <code>.isalpha</code> mean it check if all of the variable is a number or alphabetical? </p>
</div>
<div class="post-text" itemprop="text">
<p>For a password tester, you want to check if <em>any</em> of the characters are in a certain group:</p>
<pre><code>any(c.islower() for c in password)
</code></pre>
<p>This is only going to be true if there is at least 1 lowercase character. You can combine these tests with <code>and</code> (don't use <code>all()</code> here, no point as there is no loop):</p>
<pre><code>any(c.islower() for c in password) and any(c.isdigit() for c in password)
</code></pre>
<p>would only be true if there is at least one lowercase character and one digit in the password.</p>
<p>However, stringing these tests together gets unwieldy, fast. It is much easier to create a separate function, and spell out each password test:</p>
<pre><code>def is_valid(password):
    if len(password) &lt; 8:
        return False
    if not any(c in password for c in '!@%/()=?+.-'):
        return False
    if not any(c.isdigit() for c in password):
        return False
    if not any(c.islower() for c in password):
        return False
    if not any(c.isupper() for c in password):
        return False
    return True
</code></pre>
<p>and then just defer to that function when you need to see if your password is at least 8 characters long, uses both lowercase and uppercase letters, and contains at least 1 digit and 1 'special' character, for example:</p>
<pre><code>if is_valid(password):
</code></pre>
<p>Using a dedicated function is far more maintainable.</p>
<p>If your password checker needs to be more flexible still, you use separate tests and collect them in a sequence. Only <em>then</em> is the <code>all()</code> function helpful, <em>all</em> tests need to pass:</p>
<pre><code>def password_contains_lowercase(password):
    return any(c.is_lower() in password)

def password_contains_uppercase(password):
    return any(c.is_upper() in password)

def password_contains_digit(password):
    return any(c.is_digit() in password)

def password_min_length(length):
    def password_length_test(password):
        return len(password) &gt;= min_length
    return password_length_test

# etc.

policies = {
    'mixed_case': (
        password_min_length(8),
        password_contains_lowercase,
        password_contains_uppercase
    ),
    'mixed_case_and_digits': (
        password_min_length(8),
        password_contains_lowercase,
        password_contains_uppercase,
        password_contains_digit
    ),
    # ...
}


def is_valid_password(policy, password):
    return all(test(password) for test in policies[policy])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>i think the problem is that all expects an <code>iterable</code>,</p>
<blockquote>
<p>form docs<br/>
  all(iterable) -&gt; bool</p>
<pre><code>Return True if bool(x) is True for all values x in the iterable.
If the iterable is empty, return True.
</code></pre>
</blockquote>
<p>but the line</p>
<pre><code>if all( password.islower()) or (password.isalpha() )
  #     ^--------will result in a `bool`----------^
  #      --------and NOT and iterable-------------
</code></pre>
<p>how you should use it:</p>
<pre><code>if all( [password.islower(), password.isalpha(), password.isalnum()] ):
    print("")
</code></pre>
</div>
<span class="comment-copy">Check the document...<a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#all</a></span>
<span class="comment-copy">Thanks for the reply. Can you explain what i do to check if all the characters in the password are lower case? I don't understand.</span>
<span class="comment-copy">@ASAP: if <i>all</i> characters need to be lowercase, then just use <code>password.islower()</code>, no loops, no <code>all()</code> needed. The <code>str.islower()</code> method only returns true if <i>all</i> characters are lowercase. We just used it on strings with just <i>one</i> character in them when looping.</span>
<span class="comment-copy">in which case you'd just use <code>password.islower() and password.isalpha() and password.isalnum()</code>. But the latter test is always going to be true if <code>isalpha()</code> is true, and <code>isalpha()</code> is always true if <code>islower()</code> is true for the string. So the whole test is rather pointless as you can boil it down to <code>password.islower()</code>.</span>
<span class="comment-copy">@MartijnPieters agreed, my whole point was to show him how he was using the <code>all</code> builtin in the wrong way, and the reason to that <code>bool</code> related error, as <code>all</code> expects an iterable. Also, i would mention again, using <code>and</code> will result in an error, you don't use logical operators inside arguments to <code>all</code>, so you're comment code won't run. <code>all</code>, as the name suggests tries to see if all passed in expressions return true on not, no case of <code>and</code> or <code>or</code>.</span>
<span class="comment-copy">I didn't say you'd still use <code>all()</code> around all that. :-P</span>
