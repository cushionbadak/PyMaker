<div class="post-text" itemprop="text">
<p>I have a problem with the <code>nargs</code> option of <code>optparse</code>.
This is my code:</p>
<pre><code>def main():
    #variable1 = 'Teste'
    timestr = time.strftime("%Y%m%d%H%M%S")
    if len(sys.argv) == 1:
        prog = os.path.basename(sys.argv[0])
        print("Tool for calculating radiance and reflectance")
        print("for landsat 4,5,7 and 8 dataset.\n")
        print("Nais srl")
        print("Author: Lorenzo Bernardi\n")
        print("usage: %s\n"%sys.argv[0])
        print("-d, --directory  Mandatory. Directory of landsat dataset. Eg. C:\mydir\LT51900311984170XXX05")
        print("-p, --process    Mandatory. Options: [rad, ref or radref] to process radiance, reflectance or both. Default: rad")
        print("-l, --series     Mandatory. Options: [4,5,7 or 8] to specify the Landsat series")
        print("-s, --sensor     Mandatory. Options: [LC, LO, LE, LT] to specify the sensor. Eg. LE=Landsat ETM+")
        print("-b, --bands      Optional. Bands to process")
        print("-o, --output     Optional. Directory where will be saved the radiance and/or reflectance layers")
        print("-v,              Optional. Leave out the end-user control on bands under processing")

        sys.exit(option_error())
    else:
        usage = "usage: %prog [options] "
        parser = optparse.OptionParser(usage=usage)

        parser.add_option("-d", "--directory", dest="directory", action="store", type="string", \
                          help="complete path of landsat product folder: mydir/filename/")

        parser.add_option("-p", "--process", dest="operation", action="store", type="choice", \
                          help="process requested: radiance, reflectance, both", choices=['rad', 'ref', 'radref'], default='rad')

        parser.add_option("-l", "--series", dest="satellite", action="store", type="choice", \
                          help="Landsat series:4, 5, 7, 8", choices=['4', '5', '7', '8'])

        parser.add_option("-s", "--sensor", dest="sensor", action="store", type="choice", \
                          help="sensor acronymous, for example LO for Landsat OLI, or LE for Landsat ETM+, etc..", choices=['LC', 'LO', 'LE', 'LT'], default=None)

        parser.add_option("-o", "--output",   dest="output", type="string", \
                help="Directory of output raster. \n \
                    Unless specified, output directory will be workDirectory/results/datafolder/. \n \
                    If specified, the output directory wil be mydirectory/results/filename/rad (and/or ref)/", default=None)

        parser.add_option("-x", action="store_true", dest="bool", help="activate iterative radiance and/or reflectance computation for all the bands", default=False)

        parser.add_option("-b", "--bands", dest="bands", action="store", type=int, \
                          help="bands to process", nargs='*', default=None)

        (options, args) = parser.parse_args()
</code></pre>
<p>I need to be able to use the code as:</p>
<pre><code>bla bla bla -b 1 2 3
</code></pre>
<p>or </p>
<pre><code>bla bla bla -b 1
</code></pre>
<p>or without -b flag (case default).</p>
<p>The error is:</p>
<pre><code>   C:\Users\lbernardi\Desktop\extract&gt;LandsatTMroutine_RadiometricCorrection_1.0.py-d "C:\Users\lbernardi\Desktop\extract\LC81910312015198LGN00" -p rad -l 8 -s  LC -b 1
   Traceback (most recent call last):
   File "C:\Users\lbernardi\Desktop\extract\LandsatTMroutine_RadiometricCorrection_1.0.py", line 1205, in &lt;module&gt;
  main()
  File "C:\Users\lbernardi\Desktop\extract\LandsatTMroutine_RadiometricCorrection_1.0.py", line 780, in main
  (options, args) = parser.parse_args()
  File "C:\Python34\lib\optparse.py", line 1386, in parse_args
  stop = self._process_args(largs, rargs, values)
  File "C:\Python34\lib\optparse.py", line 1430, in _process_args
  self._process_short_opts(rargs, values)
  File "C:\Python34\lib\optparse.py", line 1521, in _process_short_opts
  if len(rargs) &lt; nargs:
  TypeError: unorderable types: int() &lt; str()
</code></pre>
<p>Can someone suggest some solutions? </p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>optparse</code> module doesn't support specifying <code>'*'</code> as a valid value for the <code>nargs</code> argument. An integer must be specified, as implied by the <a href="https://docs.python.org/2/library/optparse.html#optparse.Option.nargs" rel="nofollow">official documentation</a>:</p>
<blockquote>
<p><code>Option.nargs</code> (default: 1)  </p>
<p>How many arguments of type <code>type</code> should be consumed when this option is seen. If &gt; 1, <code>optparse</code> will store a tuple of values to <code>dest</code>.</p>
</blockquote>
<p>However, <a href="https://docs.python.org/2/library/argparse.html#nargs" rel="nofollow">the <code>argparse</code> module does support it</a>:</p>
<blockquote>
<p><code>'*'</code>. All command-line arguments present are gathered into a list.</p>
</blockquote>
<p>Furthermore, <a href="https://docs.python.org/2/library/optparse.html" rel="nofollow">since version 2.7 the <code>optparse</code> module is deprecated in favor of the <code>argparse</code> module</a>:</p>
<blockquote>
<p>Deprecated since version 2.7: The optparse module is deprecated and will not be developed further; development will continue with the argparse module.</p>
</blockquote>
<p>The <code>argparse</code> module also supports specifying <a href="https://docs.python.org/2/library/argparse.html#help" rel="nofollow">custom help and usage messages</a>, relieving one of the need to print them himself.</p>
</div>
<span class="comment-copy">Use <code>type="int"</code>, not <code>type=int</code>, like the example in the documentation, and <i>exactly</i> what you do for all other options. But you may want to convert to <code>argparse</code>, since <code>optparse</code> is deprecated. Also, <code>argparse</code> does allow for <code>type=int</code>. Also, I think that <code>optparse</code> itself will output a full help message if you don't supply mandatory arguments; that's why you have help and usage message. Besides, you shouldn't really have <i>mandatory</i> <i>options</i>, that's a contradiction (though, <code>argparse</code> has a <code>required</code> keyword for this kind of thing).</span>
<span class="comment-copy">@Evert, that is incorrect, as <i>optparse</i> supports specifying <code>type=int</code>. However, it doesn't support specifying <code>nargs='*'</code>, as detailed in the <a href="http://stackoverflow.com/a/33915578/3903832">answer below</a>.</span>
<span class="comment-copy">@Yoel That's correct, though both the <a href="https://docs.python.org/3/library/optparse.html#standard-option-types" rel="nofollow noreferrer">documentation</a> and the (built-in) help for the <code>Option</code> class don't mention this; <code>optparse</code> is just liberal in what it accepts.</span>
<span class="comment-copy">Yeah, I wasn't sure of it myself but I've tested it and saw that it works due to <a href="https://github.com/python/cpython/blob/master/Lib/optparse.py#L648" rel="nofollow noreferrer">this code excerpt</a>. I also noticed that switching <code>type=int</code> to <code>type="int"</code> doesn't solve the issue in hand while replacing <code>nargs='*'</code> with <code>nargs=1</code> does.</span>
