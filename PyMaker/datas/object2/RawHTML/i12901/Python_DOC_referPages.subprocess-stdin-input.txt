<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3781851/run-a-python-script-from-another-python-script-passing-in-arguments">Run a Python script from another Python script, passing in arguments [duplicate]</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to pass arguments to my test_script.py but I'm getting the following error. I know this isn't the best way to do this but it's the only one that will work since I won't know what functions are in test_script.py. How can I pass arguments as stdin input?</p>
<p><strong>test_script.py</strong></p>
<pre><code>a = int(input())
b = int(input())

print(a+b)
</code></pre>
<p><strong>main_script.py</strong></p>
<pre><code>try:
  subprocess.check_output(['python', 'test_script.py', "2", "3"], stderr=subprocess.STDOUT)
except subprocess.CalledProcessError as e:
  print(e.output)
</code></pre>
<p><strong>Error</strong></p>
<pre><code>b'Traceback (most recent call last):\r\n File "test_script.py", line 1, in &lt;module&gt;\r\n a = int(input())\r\nEOFError: EOF when reading a line\r\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If do not want to use <code>argv</code>, however is odd, consider <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow noreferrer">Popen</a> and operating/communicating on stdin/stdout</p>
<pre><code>from subprocess import Popen, PIPE, STDOUT

p = Popen(['python', 'test_script.py'], stdout=PIPE, stdin=PIPE, stderr=STDOUT)

p_stdout = p.communicate(input=b'1\n2\n')[0]
# python 2
# p_stdout = p.communicate(input='1\n2\n')[0]
print(p_stdout.decode('utf-8').strip())
# python2
# print(p_stdout)
</code></pre>
<p>As a reference from SO <a href="https://stackoverflow.com/questions/14457303/python-subprocess-and-user-interaction">Python subprocess and user interaction</a>.</p>
<p>And even more info on <a href="https://pymotw.com/2/subprocess/" rel="nofollow noreferrer">https://pymotw.com/2/subprocess/</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Not sure what are you trying to do but here is one working example:</p>
<pre><code>import sys

# print('Number of arguments:', len(sys.argv), 'arguments.')
# print('Argument List:', str(sys.argv))

# print(sys.argv[1])
# print(sys.argv[2])

a = int(sys.argv[1])
b = int(sys.argv[2])

print(a+b)
</code></pre>
<p>And your <code>main_script.py</code>:</p>
<pre><code>import subprocess

try:

  out = subprocess.check_output(['python', 'test_script.py', "2", "3"], stderr=subprocess.STDOUT)
  print(out)

except subprocess.CalledProcessError as e:
  print(e.output)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That is jot going to work, <strong>test_script.py</strong> expects for keyboard input not the argument. </p>
<p>If you want <strong>main_script.py</strong> to pass arguments to <strong>test_script.py</strong> you have to amend <strong>test_script.py</strong> below code should do the trick</p>
<pre><code>import sys

args = sys.argv[1:]
for arg in args:
    print arg
</code></pre>
<p>otherwise you can chek argparse <a href="https://docs.python.org/2/library/argparse.html" rel="nofollow">https://docs.python.org/2/library/argparse.html</a></p>
</div>
<span class="comment-copy">in <code>main_script</code> you are passing numbers as argument but in <code>test_script</code> you are trying to read them from <code>stdin</code></span>
<span class="comment-copy">Yes, I know that, but I don't know how to fix it</span>
<span class="comment-copy">what are you actually trying to do?</span>
<span class="comment-copy">A script that test other scripts, you type input data and read the output, an if you know correct output you can see if the script is working properly</span>
<span class="comment-copy">The dupe covers pretty much all you need</span>
<span class="comment-copy">I'm getting error: <code>p_stdout = p.communicate(input='1\n2\n')[0]   File "C:\Python34\lib\subprocess.py", line 959, in communicate     stdout, stderr = self._communicate(input, endtime, timeout)   File "C:\Python34\lib\subprocess.py", line 1195, in _communicate     self.stdin.write(input) TypeError: 'str' does not support the buffer interface</code></span>
<span class="comment-copy">edited to be compatibile with python3</span>
<span class="comment-copy">This works but it uses <code>sys.argv</code>, is there any way for  this to work with <code>input()</code>, or to change <code>input()</code> to <code>sys.argv</code></span>
