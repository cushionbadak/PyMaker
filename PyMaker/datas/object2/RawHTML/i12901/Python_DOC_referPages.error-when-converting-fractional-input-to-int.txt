<div class="post-text" itemprop="text">
<p>In my factorial computation program, I get a number from the user</p>
<pre><code>n=float(input("n=")) #sign
</code></pre>
<p>I wanted to change it so that the number would be converted to an integer instead of a float:</p>
<pre><code>n=int(input("n=")) #sign
</code></pre>
<p>But this doesn't work when I input a float number like "4.5". The error code is:</p>
<pre><code>Traceback (most recent call last):
  File "C:\Python33\factorial of n natural numbers.py", line 5, in &lt;module&gt;
    n=int(input("n="))
ValueError: invalid literal for int() with base 10: '4.5'
</code></pre>
<p>I've converted the int number to float since I decided to enter a float number but it looks like it hasn't been converted or what...</p>
<p>The program still works with the first version, but what's the problem there? What is the difference between those conversions?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that the <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow"><code>input()</code></a> function returns a string object:</p>
<pre><code>&gt;&gt;&gt; n = input("n = ")
n = 4.5

&gt;&gt;&gt; x
&gt;&gt;&gt; '4.5'
&gt;&gt;&gt; type(n)
&lt;class 'str'&gt;
</code></pre>
<p>As the <a href="https://docs.python.org" rel="nofollow">documentation</a> states, when you donÂ´t pass a string instance representing a so called <a href="https://docs.python.org/3/reference/lexical_analysis.html#integers" rel="nofollow"><em>integer literal</em></a> to Pythons <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow"><code>int()</code></a> function, you will get an <code>ValueError</code>.</p>
<pre><code>&gt;&gt;&gt; int(n)
Traceback (most recent call last):
ValueError: invalid literal for int() with base 10: '4.5'
</code></pre>
<p>To avoid this you could catch this error or convert the string first to a floating point number (using <a href="https://docs.python.org/3/library/functions.html#float" rel="nofollow"><code>float()</code></a> -- so the number type is not important -- and afterwards to an <code>int</code>:</p>
<pre><code>&gt;&gt;&gt; int(float(n))
    4
</code></pre>
<p>Hope this helps :)</p>
</div>
<span class="comment-copy">you can't cast anything thats not just numbers as an int, meaning that inputs like <code>4.5</code> will raise that error right away. however, you CAN convert ANY float into an int, ONCE it has already been cast as a float. that is because calling <code>int()</code> on a float really just truncates that float to the decimal</span>
