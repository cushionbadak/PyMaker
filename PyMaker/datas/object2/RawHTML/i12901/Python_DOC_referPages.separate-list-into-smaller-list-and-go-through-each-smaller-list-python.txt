<div class="post-text" itemprop="text">
<p>I have a list like this </p>
<pre><code>results = [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0]
</code></pre>
<p>I want to separate this list, to group items into 4elements together:</p>
<pre><code>size = 4
group_list_4 = [results[i:i+size] for i  in range(0, len(results), size)]
print "List:" , group_list_4
</code></pre>
<p>the result of this command is this:</p>
<pre><code>List: [[1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 1, 0], [1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [1, 0, 0, 0], [1, 0, 0, 0]]
</code></pre>
<p>Into each 4-group I have to check where is 1 element so if the first element on a 4group is 1 it <code>return "first"</code> if second <code>return "second"</code> till four and that value to put inside <code>json_obj['value_1_in_list']</code> .</p>
<pre><code>lista = []
for record in records:
            json_obj = {}
            json_obj['filename'] = filename
            json_obj['value_1_in_list'] =  put element 1 on list
            lista.append(json_obj)
</code></pre>
<p>In the code above I have a list called <code>lista</code> where I create JSON obj, the condition <code>for record in records:</code> will be executed  17 times, also I have 17 small lists with 4 elements. For each time that for loop will be executed a JSON is created.
Now I want inside this <code>for loop</code> to include the value that is 1(first,second,third,fourth) inside one list of 4elements, and next time that for loop will be executed to include the other small list inside <code>results list</code> that contains 4elements how can i do that, any help?</p>
<pre><code>Lists with four elements always contain only one 1.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using a dictionary and list's index method </p>
<p><strong>Code:</strong></p>
<pre><code>test=[[1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 1],
    [0, 0, 1, 0], [1, 0, 0, 0], [1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1],
    [0, 0, 0, 1], [1, 0, 0, 0], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1],
    [1, 0, 0, 0], [1, 0, 0, 0],[0,0,0,0]]
indexer={0:"first : ",1:"two : ",2:"three : ",3:"four : "}
for val in test:
    try:
        print indexer[val.index(1)],val
    except ValueError:
        print "No 1",val
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>first :  [1, 0, 0, 0]
first :  [1, 0, 0, 0]
four :  [0, 0, 0, 1]
first :  [1, 0, 0, 0]
four :  [0, 0, 0, 1]
three :  [0, 0, 1, 0]
first :  [1, 0, 0, 0]
first :  [1, 0, 0, 0]
four :  [0, 0, 0, 1]
four :  [0, 0, 0, 1]
four :  [0, 0, 0, 1]
first :  [1, 0, 0, 0]
four :  [0, 0, 0, 1]
four :  [0, 0, 0, 1]
four :  [0, 0, 0, 1]
first :  [1, 0, 0, 0]
first :  [1, 0, 0, 0]
No 1 [0, 0, 0, 0]
</code></pre>
<p><code>Warning this may not work as expected for cases where there are more then one 1 in the list and OP has not told there will be situation like that</code></p>
</div>
<div class="post-text" itemprop="text">
<p>This can be implemented in a very straightforward way. You have clearly defined criteria (return a value based on an input). That is just a spec for a function. Write a function (<code>one_location</code>) and map it to your data set.</p>
<pre><code>results = [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0]

size = 4
group_list_4 = [results[i:i+size] for i  in range(0, len(results), size)]

def one_location(l):
    if l[0] == 1: return "first"
    elif l[1] == 1: return "second"
    elif l[2] == 1: return "third"
    elif l[3] == 1: return "fourth"

result_list = map(one_location, group_list_4)

list(result_list)

# ['first',
#  'first',
#  'fourth',
#  'first',
#  'fourth',
#  'third',
#  'first',
#  'first',
#  'fourth',
#  'fourth',
#  'fourth',
#  'first',
#  'fourth',
#  'fourth',
#  'fourth',
#  'first',
#  'first',
#  'first',
#  'first']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>digit_word_map = {1: 'one', 2: 'two', 3: 'three', 4: 'four'}
chunks =  [results[i:i + 4] for i in range(len(results)) if i % 4 == 0]
for chunk in chunks:
    print digit_word_map[chunk.index(1) + 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>uses <a href="https://docs.python.org/3/library/itertools.html?highlight=itertools#itertools.compress" rel="nofollow"><code>itertools.compress</code></a>:
works for more than one <code>1</code>s in a sublist</p>
<pre><code>&gt;&gt; q = ['1st','2nd', '3rd', '4th']
&gt;&gt; for i in range(0,len(results),4):
       f.append(compress(q,results[i:i+4]) or ["null"])

# [['1st', '4th'], ['1st'], ['4th'], ['1st'], ['4th'], ['3rd'], ['1st'], ['1st'], ['4th'], ['4th'], ['4th'], ['1st'], ['4th'], ['4th'], ['4th'], ['1st'], ['1st'], ['1st'], ['1st']]
</code></pre>
</div>
<span class="comment-copy">What if there are two <code>1</code> in a list</span>
<span class="comment-copy">So what's your desired output? <code>["first", "first", "fourth"...]</code>?</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks-in-python">How do you split a list into evenly sized chunks in Python?</a></span>
<span class="comment-copy">@JonSurrell i will return all the value that are 1</span>
<span class="comment-copy">What if there are no 1's?</span>
<span class="comment-copy">Your else will never be reached, if there is no 1 you will get a error</span>
<span class="comment-copy">@Vignesh Kalai thank you for ur answer! now this code  how can i include that the first result to be inside json_obj['value_1_in_list']  and so on till for condition is executed ?</span>
<span class="comment-copy">@PadraicCunningham why so ?</span>
<span class="comment-copy"><code>[0,0,0,0].index(1)</code></span>
<span class="comment-copy">@PadraicCunningham yes we could do that :)</span>
<span class="comment-copy">thank you for ur answer! now this code how can I include that the first result to be inside json_obj['value_1_in_list'] and so on till for condition is executed ?</span>
<span class="comment-copy">@EstinaEsitna I don't understand your question.</span>
<span class="comment-copy">I edited my question please check it?</span>
