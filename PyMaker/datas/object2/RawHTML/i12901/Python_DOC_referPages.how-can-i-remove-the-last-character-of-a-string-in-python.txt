<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/663171/is-there-a-way-to-substring-a-string">Is there a way to substring a string?</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
</ul>
</div>
<p>I have a file path as a string and trying to remove the last '/' from the end.</p>
<pre><code>my_file_path = '/home/ro/A_Python_Scripts/flask-auto/myDirectory/scarlett Johanson/1448543562.17.jpg/'
</code></pre>
<p>I've been trying it with regex but it just keeps removing all the '/'. Is there any easier way to just remove the last character without regex?</p>
</div>
<div class="post-text" itemprop="text">
<p>As you say, you don't need to use a regex for this. You can use <a href="https://docs.python.org/3/library/stdtypes.html?highlight=rstrip#str.rstrip" rel="noreferrer"><code>rstrip</code></a>.</p>
<pre><code>my_file_path = my_file_path.rstrip('/')
</code></pre>
<p>If there is more than one <code>/</code> at the end, this will remove all of them, e.g. <code>'/file.jpg//'</code> -&gt; <code>'/file.jpg'</code>. From your question, I assume that would be ok.</p>
</div>
<div class="post-text" itemprop="text">
<p>The easiest is</p>
<p>as @greggo pointed out</p>
<pre><code>string="mystring";
string[:-1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>String.rstrip</code>.</p>
<pre><code>result = string.rstrip('/')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For a path use os.path.abspath </p>
<pre><code>import os    
print os.path.abspath(my_file_path)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The simplest way is to use slice.
If x is your string variable then x[:-1] will return the string variable without the last character.
(BTW, x[-1] is the last character in the string variable)
You are looking for</p>
<p>my_file_path = '/home/ro/A_Python_Scripts/flask-auto/myDirectory/scarlett Johanson/1448543562.17.jpg/'
my_file_path = my_file_path[:-1]</p>
</div>
<div class="post-text" itemprop="text">
<p>To remove the last character, just use a slice: <code>my_file_path[:-1]</code>. If you only want to remove a specific set of characters, use <code>my_file_path.rstrip('/')</code>. If you see the string as a file path, the operation is <a href="https://docs.python.org/3/library/os.path.html#os.path.dirname" rel="nofollow">os.path.dirname</a>. If the path is in fact a filename, I rather wonder where the extra slash came from in the first place. </p>
</div>
<div class="post-text" itemprop="text">
<p>No need to use expensive <code>regex</code>, if barely needed then try-
Use <code>r'(/)(?=$)'</code> pattern that is capture  last <code>/</code> and replace with <code>r''</code> i.e. blank character.</p>
<pre><code>&gt;&gt;&gt;re.sub(r'(/)(?=$)',r'','/home/ro/A_Python_Scripts/flask-auto/myDirectory/scarlett Johanson/1448543562.17.jpg/')
&gt;&gt;&gt;'/home/ro/A_Python_Scripts/flask-auto/myDirectory/scarlett Johanson/1448543562.17.jpg'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Answering the question: to remove the last character, just use:<code>string = string[:-1]</code>.</p>
<p>If you want to remove the last '\' if there is one (or if there is more than one):</p>
<pre><code>while string[-1]=='\\':
    string = string[:-1]
</code></pre>
<p>If it's a path, then use the <code>os.path</code> functions:</p>
<pre><code>dir = "dir1\\dir2\\file.jpg\\"   #I'm using windows by the way
os.path.dirname(dir)
</code></pre>
<p>although I would 'add' a slash in the end to prevent missing the filename in case there's no slash at the end of the original string:</p>
<pre><code>dir = "dir1\\dir2\\file.jpg"
os.path.dirname(dir + "\\")
</code></pre>
<p>When using abspath, (if the path isn't absolute I guess,) will add the current working directory to the path.</p>
<pre><code>os.path.abspath(dir)
</code></pre>
</div>
<span class="comment-copy"><code>stringvar[:-1]</code></span>
<span class="comment-copy"><code>os.path.abspath()</code> will also turn all forward slashes into backslashes on Windows platforms, so it may not always be the right solution.</span>
<span class="comment-copy">except if  the real goal is having a valid path (even on windows)</span>
<span class="comment-copy">You're right. It's a path. I was thinking it was an URL for some reason. <code>abspath()</code> is appropriate here.</span>
