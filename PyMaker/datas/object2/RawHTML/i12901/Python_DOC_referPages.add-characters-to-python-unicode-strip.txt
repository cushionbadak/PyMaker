<div class="post-text" itemprop="text">
<p>I want to remove trailing whitespace and some other characters from strip. Here goes example input/output(tabs and newlines explicitly marked):</p>
<pre><code>Input:
"\t [[  dwarf ]]]   \n"

Output:
"dwarf"
</code></pre>
<p>Now I could theoretically solve my problem like this, :</p>
<pre><code>x = x.strip().strip("[]").strip().strip("[]")
</code></pre>
<p>This should exhaust every combination that can happen in my database; however, I still would need to change the code if we had more levels of brackets and whitespace. I could solve this generically with loops, but it would be just as ugly and inefficient. Is there a better way, or a way to tell strip not to use whole string, but rather the characters I provided?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a regex version with UNICODE support.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; st = "\t [[  dwarf ]]]   \n"
&gt;&gt;&gt; re.sub(r"\s*\[|\]\s*", "", st, flags=re.UNICODE).strip()
'dwarf'
</code></pre>
<p>Little bit elegant regex than the previous one(use <code>ur</code> to handle UNICODE regex patterns):  </p>
<pre><code>&gt;&gt;&gt; re.sub(ur"[ \s*[\] ]+", "", st, flags=re.UNICODE).strip()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You only need to call <code>str.strip</code> once:</p>
<pre><code>In [6]: import string

In [7]: "\t [[  dwarf ]]]   \n".strip("[]" + string.whitespace)
Out[7]: 'dwarf'
</code></pre>
<p><a href="https://docs.python.org/3/library/string.html#string.whitespace" rel="nofollow"><code>string.whitespace</code></a> is a string containing all (ascii) whitespace characters. <code>S.strip("[]" + string.whitespace)</code> will strip all combinations of <code>[</code>, <code>]</code> and whitespace characters.</p>
</div>
<span class="comment-copy">Looks good to me when testing in REPL. I would however replace <code>r</code> with <code>ur</code>, just for the sake of people dealing with unicode regexes - I'm new to Python and I often find myself fighting with its regexes only to discover I forgot to put 'u' in front of it. Same for empty string.</span>
<span class="comment-copy">Thanks! I updated the answer.</span>
<span class="comment-copy">Great. What about <code>unicode</code>? Is there <code>unicode.whitespace</code>?</span>
<span class="comment-copy">@MatthewRock: I'm not qualified to comment on Python 2, sorry. As far as I know, there's no <code>unicode.whitespace</code> or equivalent.</span>
<span class="comment-copy">@MatthewRock can you check my answer if that helps.?</span>
