<div class="post-text" itemprop="text">
<p>I'm making a program which deletes certain lines from an existing file. It takes file1 as entry(f1), it looks for a certain pattern and if it finds it, it modifies the line (to make it compatible with the other file) and saves this modification in a variable 'mark'. It opens another file f2, and searches 'mark' in it. If it finds 'mark' in a certain line in f2, I have to delete that line and the three lines after. The thing is that when I run it, the program deletes everything from f2, so I get an empty file as a result. </p>
<pre><code>new=''
pattern2 = '2:N:0:8'
i=0


f1=open('test_reverse.txt','r')
for line in f1:
    if pattern2 in line:
        mark=line.replace('2:N:0:8','1:N:0:8')
        f2=open('test_OKforward2.txt','r')
        lines=f2.readlines()
        for i, line in enumerate(lines):
            if mark in lines[i]:
                e=lines[i]
                e1=lines[i+1]
                e2=lines[i+2]
                e3=lines[i+3]
                new=e+e1+e2+e3
            f3=open('test_OKforward2.txt','w')
            if line!=new:
                f3.write(line)
</code></pre>
<p>I tried with the next() function as well, but I got the same result and a 'stop iteration' error.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>The thing is that when I run it, the program deletes everything from f2, so I get an empty file as a result.</p>
</blockquote>
<p>Whenever you open a file for writing, everything in it is lost. You have to re-write everything you wish to preserve in the files and exclude what you wanted to delete in the first place.</p>
<p>Notice these lines:</p>
<pre><code>f2=open('test_OKforward2.txt','r')
# ...
f3=open('test_OKforward2.txt','w')
</code></pre>
<p>The problem is that <code>f3</code> is opening the same file as <code>f2</code> for writing for <em>every</em> loop on the lines of file <code>f2</code>.</p>
<p>Basically, after you add lines, you re-open the file for writing, eliminating what you had previously.</p>
<p><strong>First:</strong> You should remove the <code>f3=open</code> from within the loop iterating on each line of <code>f2</code> (i.e. do this at some other location outside this loop). This is the main issue.</p>
<p><strong>Second:</strong> Use a temporary file for the process instead and, at the end, rename the temporary file to the one you had.</p>
<p><strong>Third:</strong> You're not closing the files. Consider using context managers. Your code would look more like this:</p>
<pre><code>with open('something.txt') as f2:
    # do something with f2;
    # f2 with be automatically closed when it exits the ctx manager
</code></pre>
<p><strong>Fourth:</strong> Follow the <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow">PEP-8</a> style standards for your code. Everyone reading your code will thank you.</p>
<blockquote>
<p>I got [...] a 'stop iteration' error.</p>
</blockquote>
<p>This is normal; you said you were using the <code>next()</code> function. Iterators and <code>next()</code> raise <code>StopIteration</code> in order to signal that they cannot produce more elements from the collection being iterated and that this iteration process should stop.</p>
<p>Quoting <a href="https://docs.python.org/3/library/exceptions.html" rel="nofollow">the docs</a>:</p>
<blockquote>
<p><code>exception StopIteration</code></p>
<p>Raised by built-in function <code>next()</code> and an iteratorâ€˜s <code>__next__()</code> method to signal that there are no further items produced by the iterator.</p>
</blockquote>
</div>
<span class="comment-copy">Please remember to come back and accept the answer your found most useful for you. It benefits you, those trying to answer your question, and the community at large. That's how we say 'thank you' around here.</span>
