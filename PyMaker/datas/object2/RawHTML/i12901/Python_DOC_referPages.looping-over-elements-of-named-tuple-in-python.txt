<div class="post-text" itemprop="text">
<p>I have a named tuple which I assign values to like this:</p>
<pre><code>class test(object):
            self.CFTs = collections.namedtuple('CFTs', 'c4annual c4perren c3perren ntfixing')

            self.CFTs.c4annual = numpy.zeros(shape=(self.yshape, self.xshape))
            self.CFTs.c4perren = numpy.zeros(shape=(self.yshape, self.xshape))
            self.CFTs.c3perren = numpy.zeros(shape=(self.yshape, self.xshape))
            self.CFTs.ntfixing = numpy.zeros(shape=(self.yshape, self.xshape))
</code></pre>
<p>Is there a way to loop over elements of named tuple? I tried doing this, but does not work:</p>
<pre><code>for fld in self.CFTs._fields:
                self.CFTs.fld= numpy.zeros(shape=(self.yshape, self.xshape))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>namedtuple is a tuple so you can iterate as over normal tuple:</p>
<pre><code>&gt;&gt;&gt; from collections import namedtuple
&gt;&gt;&gt; A = namedtuple('A', ['a', 'b'])
&gt;&gt;&gt; for i in A(1,2):
    print i


1
2
</code></pre>
<p>but tuples are immutable so you cannot change the value</p>
<p>if you need the name of the field you can use:</p>
<pre><code>&gt;&gt;&gt; a = A(1, 2)
&gt;&gt;&gt; for name, value in a._asdict().iteritems():
    print name
    print value


a
1
b
2

&gt;&gt;&gt; for fld in a._fields:
    print fld
    print getattr(a, fld)


a
1
b
2
</code></pre>
</div>
<span class="comment-copy">thanks @Pawel, good point re immutability. Any way you can adapt your response to my specific code?</span>
<span class="comment-copy">just replace a with self.CTFs</span>
<span class="comment-copy">This seems to be working though in Python 3.6: <code>a._asdict().items()</code></span>
<span class="comment-copy">@ThorSummoner <a href="https://docs.python.org/3/library/collections.html#collections.somenamedtuple._asdict" rel="nofollow noreferrer"><code>_asdict</code></a> is a function, not a property. Could you please delete your comment? It is misleading.</span>
