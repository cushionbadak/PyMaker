<div class="post-text" itemprop="text">
<p>I am trying to make a server in python using sockets that I can connect to on any web browser.  I am using the host as "localhost" and the port as 8888.  </p>
<p>When I attempt to connect to it, the stuff I want to be shown shows up for a split-second, and then it goes away with the browser saying "The connection was reset".<br/>
I've made it do something very simple to test if it still does it, and it does.</p>
<p>Is there a way to stop this?    </p>
<pre><code>import time
import socket
HOST = "localhost"
PORT = 8888

def function(sck):
    sck.send(bytes("test"),"UTF-8"))
    sck.close()

ssck=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
ssck.bind((HOST,PORT))
ssck.listen(1)
while True:
    sck,addr=ssck.accept()
    function(sck)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Probably the same problem as <a href="https://stackoverflow.com/questions/24852821/perl-connection-reset-with-simple-http-server/24852907#24852907">Perl: Connection reset with simple HTTP server</a>, <a href="https://stackoverflow.com/questions/33701177/ultra-simple-http-socket-server-written-in-php-behaving-unexpectedly/33701803#33701803">Ultra simple HTTP socket server, written in PHP, behaving unexpectedly</a>, <a href="https://stackoverflow.com/questions/31168131/http-server-not-sending-complete-file-to-wget-firefox-connection-reset-by-peer/31168786#31168786">HTTP Server Not Sending Complete File To WGET, Firefox. Connection reset by peer?</a>. That is you don't read the HTTP header from the browser but simply send your response and close the connection.</p>
</div>
<div class="post-text" itemprop="text">
<p>tl;dr
your function should be</p>
<pre><code>def function(sck):
    sck.send(bytes("HTTP/1.1 200 OK\n\n&lt;header&gt;&lt;title&gt;test page&lt;/title&gt;&lt;/header&gt;&lt;body&gt;&lt;h1&gt;test page!&lt;/h1&gt;&lt;/body&gt;"),"UTF-8"))
    sck.close()
</code></pre>
<p>With a server as simple as that, you're only creating a TCP socket.</p>
<p>HTTP protocols suggest that the client should ask for a page, something like:</p>
<pre><code>HTTP/1.1 GET /somepath/somepage.html
Host: somehost.com
OtherHeader: look at the http spec
</code></pre>
<p>The response should then be:</p>
<pre><code>HTTP/1.1 200 OK
some: headers

&lt;header&gt;&lt;/header&gt;&lt;body&gt;&lt;/body&gt;
</code></pre>
</div>
<span class="comment-copy">You are aware that the browser expects your server to talk in HTTP?</span>
<span class="comment-copy">What happens if you respond with a HTTP(-like) response? Like <code>HTTP/1.1 200 OK\nConnection: close\n\ntest</code></span>
<span class="comment-copy">Sorry, I wanted to just get it as simple as possible to get the main stuff across.  It still does it with the headers there too.</span>
<span class="comment-copy">Well, proper implementation of HTTP is not simple. If you want your project to be as simple as possible, I'd recommend using a light http lib, for instance <a href="https://docs.python.org/3/library/http.server.html" rel="nofollow noreferrer">python's http.server</a> or a lightweight framework such as <a href="http://flask.pocoo.org/" rel="nofollow noreferrer">Flask</a>.</span>
<span class="comment-copy">Felk, when I try that, it doesn't work at all.  Rather than showing it for a split second, it just says "The connection was reset"</span>
<span class="comment-copy">Could you explain how I would make it read the full request?</span>
<span class="comment-copy">For your local test purposes just <code>sck.recv(2**14)</code> will work (most of the time). An actual webserver would have to ensure to read the whole message.</span>
<span class="comment-copy">Thank you very much Felk, that was what I needed. :)</span>
