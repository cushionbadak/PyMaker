<div class="post-text" itemprop="text">
<pre><code>#!/bin/bash

#=================
function func1 {
#=================

echo "I have chickens"

func2 100

}
#================
function func2 {
#================

number=$1

python &lt;&lt; END

print "I have", number, "chickens"

END
}

func1
</code></pre>
<p>In bash I want to pass func2 an argument. In func2 I want to print the argument using python. </p>
<p>Desired output:</p>
<p>I have chickens</p>
<p>I have 100 chickens</p>
</div>
<div class="post-text" itemprop="text">
<p>Regular bash string variable substitution works:</p>
<pre><code>$ export n=3
$ python &lt;&lt; END
&gt; print "I have ${n} chickens"
&gt; END
</code></pre>
<p>Output:</p>
<pre><code>I have 3 chickens
</code></pre>
<p>Because of this, you have to be <em>very</em> careful if you wish to continue your (rather unusual) approach. A much more common way would be to have the Bash and Python programs in separate files and run the Python script from the Bash script with some command line arguments. You can then access them from Python as <code>sys.argv</code>, or, if you want to do anything more sophisticated, <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">argparse</a>.</p>
</div>
<span class="comment-copy">Python can take arguments in a way similar to bash. Have you heard of <a href="https://docs.python.org/2/library/sys.html#sys.argv" rel="nofollow noreferrer">sys</a>?</span>
