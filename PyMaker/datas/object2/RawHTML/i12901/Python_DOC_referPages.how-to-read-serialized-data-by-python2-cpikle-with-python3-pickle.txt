<div class="post-text" itemprop="text">
<p>I'm trying to work with <a href="http://www.cs.toronto.edu/~kriz/cifar.html" rel="nofollow">CIFAR-10 dataset</a> which contains <a href="http://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz" rel="nofollow">a special version for python</a>.</p>
<p>It is a set of binary files, each representing a dictionary of 10k numpy matrices. The files were obviously created by python2 <code>cPickle</code>.</p>
<p>I tried to load it from python2 as follows:</p>
<pre><code>import cPickle
with open("data/data_batch_1", "rb") as f:
    data = cPickle.load(f)
</code></pre>
<p>This works really great. However, if I try to load the data from python3 (that hasn't <code>cPickle</code> but <code>pickle</code> instead), it fails:</p>
<pre><code>import pickle
with open("data/data_batch_1", "rb") as f:
    data = pickle.load(f)
</code></pre>
<p>If fails with the following error:</p>
<pre><code>UnicodeDecodeError: 'ascii' codec can't decode byte 0x8b in position 6: ordinal not in range(128)
</code></pre>
<p>Can I somehow transform the ofiginal dataset into new one that will be readable from python3? Or may I somehow read it from python3 direrctly?</p>
<p>I've tried loading it by <code>cPickle</code>, dumping it into <code>json</code> and reading it back by <code>pickle</code>, but numpy matrices obviously can't be written as a json file.</p>
</div>
<div class="post-text" itemprop="text">
<p>You'll need to tell pickle what codec to use for those bytestrings, or tell it to load the data as <code>bytes</code> instead. From the <a href="https://docs.python.org/3/library/pickle.html#pickle.load" rel="noreferrer"><code>pickle.load()</code> documentation</a>:</p>
<blockquote>
<p>The <em>encoding</em> and <em>errors</em> tell pickle how to decode 8-bit string instances pickled by Python 2; these default to ‘ASCII’ and ‘strict’, respectively. The <em>encoding</em> can be ‘bytes’ to read these 8-bit string instances as bytes objects.</p>
</blockquote>
<p>To load the strings as <code>bytes</code> objects that'd be:</p>
<pre><code>import pickle
with open("data/data_batch_1", "rb") as f:
    data = pickle.load(f, encoding='bytes')
</code></pre>
</div>
<span class="comment-copy">Just for others who find this via google: if you apply this fix, then get a message <code>TypeError: must be a unicode character, not bytes</code>, your numpy version is too old and has <a href="https://github.com/numpy/numpy/issues/4879" rel="nofollow noreferrer">this</a> bug.</span>
<span class="comment-copy">maybe better to use latin1 and not bytes</span>
<span class="comment-copy">@ShimonDoodkin: that would depend entirely on the data. And just because Latin-1 always works doesn't mean you actually had Latin-1 data.</span>
