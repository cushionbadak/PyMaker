<div class="post-text" itemprop="text">
<p>I have the following code which works to print every possible string of lengths 1-4 made up of the characters in <code>my_list</code>, but if I were to extend this nested approach to handle output strings of up to length 10, the resulting code would be too long. How can I display all possible variants of length 10?</p>
<pre><code>my_list = ['a', 'b', 'c', 'd']

for i in range(len(my_list)):
    print(str(my_list[i]))

for i in range(len(my_list)):
    for o in range(len(my_list)):
        print(str(my_list[i]) + str(my_list[o]))

for i in range(len(my_list)):
    for o in range(len(my_list)):
        for p in range(len(my_list)):
            print(str(my_list[i]) + str(my_list[o]) + str(my_list[p]))

for i in range(len(my_list)):
    for o in range(len(my_list)):
        for p in range(len(my_list)):
            for a in range(len(my_list)):
                print(str(my_list[i]) + str(my_list[o]) + str(my_list[p]) + str(my_list[a]))
</code></pre>
<p>(sample output)</p>
<pre><code>a
b
c
d
aa
ab
ac
ad
ba
bb
bc
bd
[...]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand correctly, you need the <code>itertools.product</code> function.</p>
<pre><code>import itertools

my_list = ['a', 'b', 'c', 'd']
MAX_LENGTH = 4

for length in range(1,MAX_LENGTH + 1):              
  for x in itertools.product(my_list, repeat=length):
    print(''.join(x))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just use the <code>permutations</code> or <code>combinations</code> functions from the <strong>itertools</strong> package. I think that will give you the result you are looking for.</p>
<p>Here is the documentation: <a href="https://docs.python.org/2/library/itertools.html" rel="nofollow">https://docs.python.org/2/library/itertools.html</a></p>
<p>I noticed you added sample output. I think you can achieve this by:</p>
<pre><code>from itertools import *
input = "ABCD"
for x in range(1, len(input)+1):
   result = product(input, repeat=x)
   for item in result:
      print "".join(item)
</code></pre>
</div>
<span class="comment-copy">I don't understand the question. Can you please elaborate on "all possible variants of a string"? Please provide an example of: Input --&gt; Expected Output</span>
<span class="comment-copy">maybe you should have a look at <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer">itertools</a></span>
<span class="comment-copy">"I do not like" is far too vague to be a useful problem statement. Please describe the actual problem you're trying to address.</span>
<span class="comment-copy">[After the OP edited the question to confirm my understanding of the issue, I've cleaned up the text a little to make it more clear.  I suspect this is now a dup of one of the many, many <code>itertools.product</code> questions.]</span>
<span class="comment-copy">I agree that <code>itertools</code> is the right direction, but I don't think <code>permutations</code> or <code>combinations</code> is what OP is looking for.</span>
