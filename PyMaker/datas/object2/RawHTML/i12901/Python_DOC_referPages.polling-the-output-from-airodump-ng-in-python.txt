<div class="post-text" itemprop="text">
<p>I am trying to create a python program that can periodically poll the output from airodump-ng, a wifi sniffing tool. I am doing this on a RPI running Raspbian and Python 3.4
I've looked up how to do this on several website but whenever I try this I get a sort of deadlock and the program stalls.</p>
<p>I am using this code:</p>
<pre><code>import subprocess
airodump = subprocess.Popen(['sudo','airodump-ng','mon0'])
out,err = airodump.communicate(timeout=10)
</code></pre>
<p>So the weird thing is that when I type these commands one by one into IDLE running on the RPI, everything works but after 10 seconds I get a timeout error. When not using the timeout argument, the program simply stalls. Using the extra argument 'stdout=subprocess.PIPE' also doesn't work.
But when I go to terminal and start up python using the command 'python3' and then typing in the first and second line, the whole screen is then filled with the output from airodump-ng and I cannot type anything anymore!</p>
<p>So how can I solve this? I just want to get the most recent output from airodump-ng and the output of airodum-ng can simply be updated in the background, in another thread. I just want the most recent output.</p>
</div>
<div class="post-text" itemprop="text">
<p>see the <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow">doc</a>, works as intended, especially the Note</p>
<blockquote>
<p>If the process does not terminate after timeout seconds, a TimeoutExpired exception will be raised. Catching this exception and retrying communication will not lose any output.</p>
<p>Note</p>
<p>The data read is buffered in memory, so do not use this method if the
  data size is large or unlimited.</p>
</blockquote>
<p>I would look at <a href="https://github.com/derv82/wifite" rel="nofollow">wifite</a> code which make extensive use of airodump !</p>
</div>
<span class="comment-copy">related: <a href="http://stackoverflow.com/q/4417546/4279">Constantly print Subprocess output while process is running</a></span>
<span class="comment-copy">so basically just let airodump-ng write its output to a csv file and read this file then via python? It gets the job done but feels a bit hacky...</span>
<span class="comment-copy">it does, I believe you when you said Using the extra argument 'stdout=subprocess.PIPE' also doesn't work but reading <a href="http://stackoverflow.com/questions/16882112/when-to-use-subprocess-call-or-subprocess-popen-running-airodump/16882176#16882176" title="when to use subprocess call or subprocess popen running airodump">stackoverflow.com/questions/16882112/â€¦</a> it seems it does the job, doesn't it ? what do you mean by it doesn't work ?</span>
<span class="comment-copy">When I try that code and try to run that for-each loop; it stalls as the input has not terminated :(</span>
