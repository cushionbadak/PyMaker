<div class="post-text" itemprop="text">
<p>I'm trying to create an app which should allow to choose a directory and after pressing the button send the selected path to another function outside the <em>App</em> class. Also there is a predefined directory set as default path and displayed in the QLineEdit widget. This is what I've tried:</p>
<pre><code>import os
import sys
from PyQt4 import QtGui
from PyQt4 import QtCore
from functools import partial

class App (QtGui.QMainWindow):

    def __init__(self):
        super(App, self).__init__()
        self.initUI()

    def initUI(self):

        default_path = os.path.dirname(os.path.abspath(__file__))

        def selectDir():
            labelSavePath.setText(QtGui.QFileDialog.getExistingDirectory(self,
                                                         'Select Dir:'))

        self.setFixedSize(450, 150)
        self.setWindowTitle('App')

        labelSavePath = QtGui.QLineEdit(default_path, self)
        labelSavePath.setGeometry(15, 72, 340, 20)
        labelSavePath.setAlignment(QtCore.Qt.AlignLeft)
        labelSavePath.setReadOnly(True)

        btnBrowse = QtGui.QPushButton('Browse', self)
        btnBrowse.setGeometry(365, 67, 80, 30)

        btnBrowse.clicked.connect(selectDir)

        btnStart = QtGui.QPushButton('Start', self)
        btnStart.move(345, 115)
        btnStart.clicked.connect(partial(startRun,
                                 str(labelSavePath.text())))

        self.show()

def startRun(log_path):
    print(log_path) #and do smth useful

if __name__ == "__main__":

    app = QtGui.QApplication(sys.argv)
    w = App()
    sys.exit(app.exec_())
</code></pre>
<p>However, the <em>log_path</em> is always equal to <em>default_path</em> no matter if it is changed by the user or not. I have been looking for the answer for a couple of hours already and still haven't managed to find the bug, since I'm new to PyQt. </p>
<p>How should I edit/pass the text in the <em>labelSavedPath</em> widget correctly, minding possible changes?</p>
</div>
<div class="post-text" itemprop="text">
<p>You seem to have misunderstood what <a href="http://docs.python.org/3/library/functools.html?highlight=partial#functools.partial" rel="nofollow">partial</a> does. It allows you to call a function with some its arguments pre-filled with fixed values - which is exactly what you don't want. Use a <code>lambda</code> instead:</p>
<pre><code>    btnStart.clicked.connect(lambda: startRun(labelSavePath.text()))
</code></pre>
<p>NB: if you're using Python 3, there's no need to wrap everything with <code>str()</code>.</p>
</div>
<span class="comment-copy">I really did misunderstood the <i>partial</i> purpose. Thanks a lot, it works quite ok with lambda. I use Python 2.7 and have to use str().</span>
<span class="comment-copy">@Atsvetk. Okay, but you still don't have to use <code>str()</code>. See: <a href="http://pyqt.sourceforge.net/Docs/PyQt4/incompatible_apis.html#selecting-incompatible-apis" rel="nofollow noreferrer">Selecting Incompatible APIs</a> in the PyQt docs.</span>
