<div class="post-text" itemprop="text">
<p>I've written a Python script which should eventually shutdown the computer. </p>
<p>This line is a part of it :</p>
<pre><code>os.system("shutdown /p")
</code></pre>
<p>It makes some sort of a shutdown but remains on the turn-on Windows control pannel (where the user can switch the computer users). </p>
<p>Is there a way to fully shutdown the computer? </p>
<p>I've tried other <code>os.system("shutdown ___")</code> methods with no success.</p>
<p>Is there another method which might help?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
os.system('shutdown -s')
</code></pre>
<p>This will work for you.</p>
</div>
<div class="post-text" itemprop="text">
<p>For Linux:</p>
<pre><code>import os
os.system('sudo shutdown now')
</code></pre>
<p>or: if you want immediate shutdown without <code>sudo</code> prompt for password, use the following for Ubuntu and similar distro's:</p>
<pre><code>os.system('systemctl poweroff') 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The only variant that really workes for me without any problem is:</p>
<pre><code>import os
os.system('shutdown /p /f')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/ctypes.html" rel="nofollow noreferrer">ctypes</a> you could use the <a href="https://msdn.microsoft.com/en-us/library/aa376868(VS.85).aspx" rel="nofollow noreferrer">ExitWindowsEx</a> function to shutdown the computer.  </p>
<p>Description from MSDN:</p>
<blockquote>
<p>Logs off the interactive user, shuts down the system, or shuts down and restarts the system.</p>
</blockquote>
<hr/>
<p><strong>First some code:</strong></p>
<pre><code>import ctypes

user32 = ctypes.WinDLL('user32')

user32.ExitWindowsEx(0x00000008, 0x00000000)
</code></pre>
<p><strong>Now the explanation line by line:</strong></p>
<ul>
<li>Get the ctypes library</li>
<li>The <code>ExitWindowsEx</code> is provided by the <code>user32.dll</code> and needs to be loaded via <code>WinDLL()</code></li>
<li>Call the <code>ExitWindowsEx()</code> function and pass the necessary parameters.</li>
</ul>
<p><strong>Parameters:</strong></p>
<p>All the arguments are hexadecimals.  </p>
<p><em>The first argument I selected:</em></p>
<blockquote>
<p>shuts down the system and turns off the power. The system must support the power-off feature.</p>
</blockquote>
<p>There are many other possible functions see <a href="https://msdn.microsoft.com/en-us/library/aa376868(VS.85).aspx" rel="nofollow noreferrer">the documentation</a> for a complete list.</p>
<p><em>The second argument:</em></p>
<p>The second argument <em>must</em> give a reason for the shutdown, which is logged by the system. In this case I set it for <code>Other issue</code> but there are many to choose from.  See <a href="https://msdn.microsoft.com/en-us/library/aa376885(v=vs.85).aspx" rel="nofollow noreferrer">this</a> for a complete list.  </p>
<p><strong>Making it cross platform:</strong></p>
<p>This can be combined with other methods to make it cross platform.  For example:</p>
<pre><code>import sys

if sys.platform == 'win32':

    import ctypes
    user32 = ctypes.WinDLL('user32')
    user32.ExitWindowsEx(0x00000008, 0x00000000)

else:

    import os
    os.system('sudo shutdown now')
</code></pre>
<hr/>
<p><em>This is a Windows dependant function (although Linux/Mac will have an equivalent), but is a better solution than calling <code>os.system()</code> since a batch script called <code>shutdown.bat</code> will not conflict with the command (and causing a security hazard in the meantime).</em></p>
<p><strong>In addition it does not bother users with a message saying <code>"You are about to be signed out in less than a minute"</code> like <code>shutdown -s</code> does, but executes silently.</strong></p>
<p>As  a side note use <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">subprocess</a> over <code>os.system()</code> (see <a href="https://stackoverflow.com/questions/4813238/difference-between-subprocess-popen-and-os-system">Difference between subprocess.Popen and os.system</a>)</p>
<hr/>
<p><strong>As a side note:</strong> I built <a href="https://github.com/Simon3335/WinUtils" rel="nofollow noreferrer">WinUtils</a> (Windows only) which simplifies this a bit, however it should be faster (and does not require Ctypes) since it is built in C.</p>
<p><sup><strong>Example:</strong></sup></p>
<pre><code>import WinUtils
WinUtils.Shutdown(WinUtils.SHTDN_REASON_MINOR_OTHER)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This Python code may do the deed:</p>
<pre><code>import os
os.system('sudo shutdown -h now')
</code></pre>
</div>
<span class="comment-copy">This doesn't really have anything to do with Python, as <code>shutdown /p</code> is simply sent to the system as a terminal command. Please specify your OS version, as the options can vary.</span>
<span class="comment-copy">Yes of course. But my question is whether there's a way using Python modules maybe? or another way?  And I need to run the program on several computers, so the OS version is not the same.  Thanks</span>
<span class="comment-copy">One problem with this is that it leaves a message saying <code>"You are about to be signed out in less than a minute"</code>.  Another is that if someone places a batch script with the name <code>shutdown.bat</code> with the script it will not work, it's also a security hazard since that file will be executed.  <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">Subprocess</a> should now be used over <code>os.system()</code>.</span>
<span class="comment-copy">You can avoid that message - os.system('shutdown -s -t 0')</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">Subprocess</a> should now be used over <code>os.system()</code>.</span>
