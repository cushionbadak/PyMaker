<div class="post-text" itemprop="text">
<p>Hey I'm new to this python thing. Have few days to learn all about classes but at the beginning I have problem. I got this kind of error <code>TypeError: __init__() missing 1 required positional argument: 'nazwa'</code>. Can you help me with solution? I want to print out calculation for my object. </p>
<pre><code>class Figura(object):
    def __init__(self,nazwa):
        self.nazwa = nazwa
    def calculate(self):
        print(self.nazwa)

class Kolo(Figura):
    def __init__(self,nazwa,promien):
        Figura.__init__(self)
        self.promien = promien

    def calculate(self):
        Figura.calculate(self)
        print(2 * 3.1415 * promien)

kolo1 = Kolo('kolo',4)
kolo1.calculate()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You'll need to pass on the <code>nazwa</code> argument in the <code>Kolo.__init__()</code> method call:</p>
<pre><code>class Kolo(Figura):
    def __init__(self, nazwa, promien):
        Figura.__init__(self, nazwa)
        self.promien = promien
</code></pre>
<p>You may want to use the <a href="https://docs.python.org/3/library/functions.html#super" rel="nofollow"><code>super()</code> function</a> there instead and avoid having to repeat the parent class:</p>
<pre><code>class Kolo(Figura):
    def __init__(self, nazwa, promien):
        super().__init__(nazwa)
        self.promien = promien

    def calculate(self):
        super().calculate()
        print(2 * 3.1415 * self.promien)
</code></pre>
<p>Note that I corrected your <code>Kolo.calculate()</code> method as well; you want to refer to <code>self.promien</code> rather than make <code>promien</code> a local name.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; class Figura(object):
...     def __init__(self,nazwa):
...         self.nazwa = nazwa
...     def calculate(self):
...         print(self.nazwa)
...
&gt;&gt;&gt; class Kolo(Figura):
...     def __init__(self, nazwa, promien):
...         super().__init__(nazwa)
...         self.promien = promien
...     def calculate(self):
...         super().calculate()
...         print(2 * 3.1415 * self.promien)
...
&gt;&gt;&gt; kolo1 = Kolo('kolo',4)
&gt;&gt;&gt; kolo1.calculate()
kolo
25.132
</code></pre>
</div>
