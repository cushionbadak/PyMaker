<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11536764/how-to-fix-attempted-relative-import-in-non-package-even-with-init-py">How to fix “Attempted relative import in non-package” even with __init__.py</a>
<span class="question-originals-answer-count">
                    12 answers
                </span>
</li>
</ul>
</div>
<p>I have the following directory:</p>
<pre><code>myProgram
└── app
    ├── __init__.py
    ├── main.py 
    └── mymodule.py
</code></pre>
<p>mymodule.py:</p>
<pre><code>class myclass(object):

def __init__(self):
    pass

def myfunc(self):
    print("Hello!")
</code></pre>
<p>main.py:</p>
<pre><code>from .mymodule import myclass

print("Test")
testclass = myclass()
testclass.myfunc()
</code></pre>
<p>But when I run it, then I get this error:</p>
<pre><code>Traceback (most recent call last):
  File "D:/Users/Myname/Documents/PycharmProjects/myProgram/app/main.py", line 1, in &lt;module&gt;
    from .mymodule import myclass
SystemError: Parent module '' not loaded, cannot perform relative import
</code></pre>
<p>This works:</p>
<pre><code>from mymodule import myclass
</code></pre>
<p>But I get no auto completion when I type this in and there is a message: "unresolved reference: mymodule" and "unresolved reference: myclass".
And in my other project, which I am working on, I get the error: "ImportError: No module named 'mymodule'.</p>
<p>What can I do?</p>
</div>
<div class="post-text" itemprop="text">
<p>I had the same problem and I solved it by using an absolute import instead of a relative one.</p>
<p>for example in your case, you will write something like this:</p>
<pre><code>from app.mymodule import myclass
</code></pre>
<p>You can see in the <a href="https://docs.python.org/3/tutorial/modules.html#intra-package-references">documentation</a>.</p>
<blockquote>
<p>Note that relative imports are based on the name of the current
  module. Since the name of the main module is always "<code>__main__</code>",
  modules intended for use as the main module of a Python application
  must always use absolute imports.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>I usually use this workaround:</p>
<pre><code>try:
    from .mymodule import myclass
except Exception: #ImportError
    from mymodule import myclass
</code></pre>
<p>Which means your IDE should pick up the right code location and the python interpreter will manage to run your code.</p>
</div>
<div class="post-text" itemprop="text">
<p>if you just run the <code>main.py</code> under the <code>app</code>, just import like </p>
<pre><code>from mymodule import myclass
</code></pre>
<p>if you want to call <code>main.py</code> on other folder, use:</p>
<pre><code>from .mymodule import myclass
</code></pre>
<hr/>
<p>for example:</p>
<pre><code>├── app
│   ├── __init__.py
│   ├── main.py
│   ├── mymodule.py
├── __init__.py
└── run.py
</code></pre>
<p><strong>main.py</strong></p>
<pre><code>from .mymodule import myclass
</code></pre>
<p><strong>run.py</strong></p>
<pre><code>from app import main
print(main.myclass)
</code></pre>
<p>So I think the main question of you is how to call <code>app.main</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you go one level up in running the script in the command line of your bash shell, the issue will be resolved. To do this, use <code>cd ..</code> command to change the working directory in which your script will be running. The result should look like this:</p>
<pre><code>[username@localhost myProgram]$
</code></pre>
<p>rather than this:</p>
<pre><code>[username@localhost app]$
</code></pre>
<p>Once you are there, instead of running the script in the following format:</p>
<pre><code>python3 mymodule.py
</code></pre>
<p>Change it to this:</p>
<pre><code>python3 app/mymodule.py
</code></pre>
<p>This process can be repeated once again one level up depending on the structure of your Tree diagram. Please also include the compilation command line that is giving you that mentioned error message. </p>
</div>
<span class="comment-copy"><a href="https://www.python.org/dev/peps/pep-0366/" rel="nofollow noreferrer">python.org/dev/peps/pep-0366</a></span>
<span class="comment-copy">I don't get it.</span>
<span class="comment-copy">I came across the same problem. Apparently running script inside a package is considered as a bad practice, and you cant use relative import in that case. Since your main.py is inside the package app, using relative import will cause error. Use relative import only in modules and run the scripts outside the package.</span>
<span class="comment-copy">Use <code>python -m package.module</code> instead of <code>python package/module.py</code>.</span>
<span class="comment-copy"><a href="https://stackoverflow.com/a/19190695/7414040">This</a> is the answer that solves the problem.</span>
<span class="comment-copy">If do this I get another error, a <code>ImportError: No module named 'app.app'; 'app' is not a package</code>: <a href="https://gist.github.com/anonymous/ac0b7b3c36b0a60be6273394d1ddbdfb" rel="nofollow noreferrer">gist.github.com/anonymous/ac0b7b3c36b0a60be6273394d1ddbdfb</a></span>
<span class="comment-copy">@fiatjaf please can you share the structure of your code with us ?</span>
<span class="comment-copy">Thank you, @Erman. Just did it in a comment on that <a href="https://gist.github.com/anonymous/ac0b7b3c36b0a60be6273394d1ddbdfb#gistcomment-2216728" rel="nofollow noreferrer">gist</a>.</span>
<span class="comment-copy">Have you declare your <b>init</b>.py file ? Please make to declare your all your packages inside.</span>
<span class="comment-copy">For more infornation about <b>init</b>.py file, check this link. <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">docs.python.org/3/tutorial/modules.html#packages</a></span>
<span class="comment-copy"><code>except Exception</code> catches <i>any</i> exception, which is not what you want.</span>
<span class="comment-copy">But then do I want <code>SystemError</code> or <code>ImportError</code>?</span>
<span class="comment-copy">You want <code>ImportError</code></span>
<span class="comment-copy">I just wanted to outline that OP, confusingly, has a <code>SystemError</code></span>
<span class="comment-copy">If you want to catch both, catch both (<code>except SystemError, ImportError</code>); don't catch all errors.</span>
<span class="comment-copy">Yes, that is the question. How do we do it?</span>
