<div class="post-text" itemprop="text">
<blockquote>
<p><strong>EDIT</strong>: after reading the comments and the answers I realize that what I want to do does not make much sense. What I had in mind was that I
  have some places in my code which may fail (usually some <code>requests</code>
  calls which may not go though) and I wanted to catch them instead of
  putting a <code>try:</code> everywhere. My specific problem was such that I would
  not care if they fail and would not influence the rest of the code
  (say, a watchdog call).</p>
<p>I will leave this question for posterity as an ode to "think about the
  real problem first, then ask"</p>
</blockquote>
<p>I am trying to handle all uncaught (otherwise unhandled) exceptions:</p>
<pre><code>import traceback
import sys

def handle_exception(*exc_info):
    print("--------------")
    print(traceback.format_exception(*exc_info))
    print("--------------")

sys.excepthook = handle_exception
raise ValueError("something bad happened, but we got that covered")
print("still there")
</code></pre>
<p>This outputs</p>
<pre><code>--------------
['Traceback (most recent call last):\n', '  File "C:/Users/yop/.PyCharm50/config/scratches/scratch_40", line 10, in &lt;module&gt;\n    raise ValueError("something bad happened, but we got that covered")\n', 'ValueError: something bad happened, but we got that covered\n']
--------------
</code></pre>
<p>So, while the raise was indeed caught,  it did not work the way I thought: a call to <code>handle_exception</code>, then resume with the <code>print("still there")</code>.</p>
<p><del>How can I do so?</del></p>
</div>
<div class="post-text" itemprop="text">
<p>You can't do this because Python calls <code>sys.excepthook</code> <a href="https://docs.python.org/3/library/sys.html#sys.excepthook" rel="nofollow">for <em>uncaught</em> exceptions</a>.</p>
<blockquote>
<p>In an interactive session this happens just before control is returned to the prompt; in a Python program this happens just before the program exits. </p>
</blockquote>
<p>There's no way to resume the execution of the program or "supress" the exception in <code>sys.excepthook</code>.</p>
<p>The closest I can think of is</p>
<pre><code>try:
    raise ValueError("something bad happened, but we got that covered")
finally:
    print("still there")
</code></pre>
<p>There's no <code>except</code> clause, therefore <code>ValueError</code> won't be caught, but the <code>finally</code> block is guaranteed to be executed. Thus, the exception hook will still be called and <code>'still there'</code> will be printed, but the <code>finally</code> clause will be executed <em>before</em> <code>sys.excepthook</code>:</p>
<blockquote>
<p>If an exception occurs in any of the clauses and is not handled, the
  exception is temporarily saved. The finally clause is executed. If
  there is a saved exception it is re-raised at the end of the finally
  clause.</p>
</blockquote>
<p>(from <a href="https://docs.python.org/3/reference/compound_stmts.html#finally" rel="nofollow">here</a>)</p>
</div>
<div class="post-text" itemprop="text">
<p>Are you after:</p>
<pre><code>import traceback
import sys

try:
    raise ValueError("something bad happened, but we got that covered")
except Exception:
    print("--------------")
    print(traceback.format_exception(sys.exc_info()))
    print("--------------")
print("still there")
</code></pre>
</div>
<span class="comment-copy">You can't, and this is not a sensible thing to do - what if the bad thing means that your variable is not set? Should you run the next line, which now <code>NameError</code>s?</span>
<span class="comment-copy">Are you trying to do something like <a href="https://github.com/ajalt/fuckitpy" rel="nofollow noreferrer">github.com/ajalt/fuckitpy</a></span>
<span class="comment-copy">@jonrsharpe: after some actual thinking - yes, I guess so. I will update my question with that thinking.</span>
<span class="comment-copy">FWIW, I also found <a href="http://stackoverflow.com/q/14993129/2301450"><i>Is it possible to cancel an exception that has not been caught?</i></a>. Seems pretty close to your question.</span>
<span class="comment-copy">@vaultah: good find - a very similar question, and the first part of the answer is relevant.</span>
<span class="comment-copy"><i>There's no way to resume the execution of the program or "supress" the exception in <code>sys.excepthook</code>.</i> This.</span>
