<div class="post-text" itemprop="text">
<p>Here is my code so far:</p>
<pre><code>import sys
import time
import random 
from sys import *
from random import *
from time import sleep

def intro():
    global lives
    lives = 2
    intro1() def intro1():
    global lives
    text1 = 'please enter (Yes or No)'
    for x in text1:
            print (x, end='')
            sys.stdout.flush()
            sleep(0.007)
    print()
    answer = input()
    if 'yes' in answer:
        lives = lives + 1
        text1 = 'Thank you'
        text2 = '+ 1 life'
        text3 = lives
        text4 = ' lives now.'
        for x in text1:
            print (x, end='')
            sys.stdout.flush()
            sleep(0.007)
        print()
        for x in text2:
            print (x, end='')
            sys.stdout.flush()
            sleep(0.007)
        print()
        for x in range(text3):
            print (x, end='')
            sys.stdout.flush()
            sleep(0.007)
        for x in text4:
            print (x, end='')
            sys.stdout.flush()
            sleep(0.007)
        print()
        intro1()
    if 'no' in answer:
        lives = lives - 1
        if lives &lt;= 0:
            text1 = 'Out of lives. Game Over.'
            for x in text1:
                print (x, end='')
                sys.stdout.flush()
                sleep(0.007)
            end()
        elif lives &gt;= 0:
            text1 = 'That\'s rude'
            text2 = '- 1 life!'
            text3 = lives
            text4 = ' lives left'
            for x in text1:
                print (x, end='')
                sys.stdout.flush()
                sleep(0.007)
            print ()
            for x in text2:
                print (x, end='')
                sys.stdout.flush()
                sleep(0.007)
            print ()
            for x in range(text3):
                print (x, end='')
                sys.stdout.flush()
                sleep(0.007)
            for x in text4:
                print (x, end='')
                sys.stdout.flush()
                sleep(0.007)
            print()
            intro1()
    else:
        intro1() def end():
    text1 = 'done.'
    for x in text1:
        print (x, end='')
        sys.stdout.flush()
        sleep(0.007) intro()
</code></pre>
<p>I know this looks really long, and confusing.  The program runs fine I've tested it.  My only problem is that it prints all the numbers.</p>
<p>Ex:</p>
<blockquote>
<p>lives + 1
  Thank you
  0123 lives now.</p>
</blockquote>
<p>or</p>
<blockquote>
<p>Thats rude
  - 1 live
  01 lives left.</p>
</blockquote>
<p>I only want it to print the last number, but I want it to print with the animation I have. Help would be greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should change:</p>
<pre><code>for x in range(text3):
    print (x, end='')
    sys.stdout.flush()
    sleep(0.007)
</code></pre>
<p>to </p>
<pre><code>for x in str(text3):
    print (x, end='')
    sys.stdout.flush()
    sleep(0.007)
</code></pre>
<p>Note the difference, <code>range(num)</code> will return a list of numbers, while <code>str(num)</code> will convert it to an string from which you can print a character at a time.</p>
<p>BTW... Abiding by the DRY (don't repeat yourself) principle, you should consider factor-out the print to a single function,</p>
<pre><code>def type_output(text):
    for x in str(text):  # Use str to coerce the input to a string
        print (x, end='')
        sys.stdout.flush()
        sleep(0.007)
</code></pre>
<p>That way your code will become more readable.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you call</p>
<pre><code>for x in range(text3):
</code></pre>
<p>It will iterate over a "list" [0,1] when text3 = 2, [0,1,2] when text3 = 3
If you only want 3 then try:</p>
<pre><code>for x in [3]: 
</code></pre>
<p>or something similar, but you can just simply print is as well without the iteration. </p>
</div>
<div class="post-text" itemprop="text">
<p>I guess you don't like that your code is printing e.g. 0123? Where your code has, for example:</p>
<pre><code>   for x in range(text3):
        print (x, end='')
        sys.stdout.flush()
        sleep(0.007)
</code></pre>
<p>what <code>x in range(text3)</code> is doing is returning first 0, then 1, then successive numeric values up to 1 less than the integer value of text3. Look up the built-in range function in the python docs here: <a href="https://docs.python.org/3/library/functions.html" rel="nofollow">https://docs.python.org/3/library/functions.html</a></p>
<p>Instead, you should probably just have a single line of code:</p>
<pre><code>print( text3, end='' )
</code></pre>
<p>this will convert text3 into a string and print it, and you won't get a leading zero :-)</p>
<p>Also where your code has e.g.</p>
<pre><code>    for x in text2:
        print (x, end='')
        sys.stdout.flush()
        sleep(0.007)
</code></pre>
<p>What you are doing is printing the contents of text2 a character at a time. It would be much simpler to write:</p>
<pre><code>print( text2, end='' )
</code></pre>
<p>although you may not need the end='' if your are next going to call print() to start a new line.</p>
<p>I don't know why you have the flush and short delay in there - I don't think they are needed, have never seen that used before. Ah, I guess that's the animation you are referring to. Have you considered making your coding life simpler by defining a function once, which does the animated printing, and simply calling that when needed?</p>
<pre><code>def aniprint( stringtoprint ):
    for c in stringtoprint:
        print( c,end='' )
        sys.stdout.flush()
        sleep(0.007)
</code></pre>
<p>Then simply call it:</p>
<pre><code>aniprint( text1 )
aniprint( text2 )   
</code></pre>
<p>HTH
Barny</p>
</div>
<div class="post-text" itemprop="text">
<p>change <code>range(text3)</code> to <code>str(text3)</code>.</p>
<p><code>range(text3)</code> returns a list <code>[0,1,2...text3-1]</code>. So that for loop is looping over that list of integers when you want to be looping over the characters in the string representation of the number. To fix that just change the integer, <code>text3</code>, into a string and loop over the characters in the same way you are looping over the other strings.</p>
</div>
<span class="comment-copy">Random advice: your animation code is the same each time, you could stick it in a function. Then if you put the <code>text</code> strings in a list, you can loop over it. Your code will get much shorter.</span>
<span class="comment-copy">I think he is trying to create the effect that characters are being typed, that why it's printing each character at a time, with a delay between characters.</span>
<span class="comment-copy">The <code>end</code> limit is not inclusive, so <code>range(text3)</code> will generate a list up to <code>text3-1</code>.</span>
