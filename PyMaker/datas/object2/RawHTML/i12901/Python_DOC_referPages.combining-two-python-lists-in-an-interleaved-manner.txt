<div class="post-text" itemprop="text">
<p>I want to interleave two lists. For example:</p>
<pre><code>arr1 = [1,2,3,4,5,6]
arr2 = [9,8,7,6]
</code></pre>
<p>I't like to get an output like</p>
<pre><code>[1,9,2,8,3,7,4,6,5,6]
</code></pre>
<p>I have created the following script, but it's not working for some reason: </p>
<pre><code>arr1 = [1,2,3,4,5,6]
arr2 = [9,8,7,6]
x = 0

for a in arr2:
    x = x + 2
    arr1.insert(x, a)
</code></pre>
<p>Where am I going wrong? I am not looking for random shuffling. I am using python2.x</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>zip_longest</code> and <code>chain.from_iterable</code> from the <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow"><code>itertools</code></a> module:</p>
<pre><code>&gt;&gt;&gt; arr1 = [1,2,3,4,5,6]
&gt;&gt;&gt; arr2 = [9,8,7,6]
&gt;&gt;&gt; from itertools import chain, zip_longest
&gt;&gt;&gt; [i for i in chain.from_iterable(zip_longest(arr1, arr2)) if i is not None]
[1, 9, 2, 8, 3, 7, 4, 6, 5, 6]
</code></pre>
<p>You need to use <code>izip_longest</code> instead of <code>zip_longest</code> in python-2.x</p>
</div>
<div class="post-text" itemprop="text">
<p>I have figured out a different way to do this, without imports. </p>
<pre><code>mylist = []
a = [1,2,3,4,5,6]
b = [9,8,7,6]
for x in range(max(len(a), len(b))):
    if x &lt; len(a):
        mylist.append(a[x])
    if x &lt; len(b):
        mylist.append(b[x])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you actually want to shuffle them in a randomized fashion the key would be to combine them into one list and use shuffle().</p>
<pre><code>from random import shuffle
import itertools as it

arr1 = [1,2,3,4,5,6]
arr2 = [9,8,7,6]
x = list(it.chain(arr1,arr2))
shuffle(x)
print(x)
</code></pre>
<p><strong>EDIT</strong> question was updated to reflect the order desired wasn't random.</p>
</div>
<span class="comment-copy">Those are <code>set</code> not arrays</span>
<span class="comment-copy">"Can I get an output like {1,9,2,8,3,7,4,6,5,6}" -- you cannot get a set with duplicate elements, perhaps you meant a <code>list</code>?</span>
<span class="comment-copy">and a set has no concept of order... so you can't.... Do you need a set or do you want a list?</span>
<span class="comment-copy">Thanks, I have edited the question. @user3100115</span>
<span class="comment-copy">@BrianCain I have changed my question, Forgive me but I am new to this.</span>
<span class="comment-copy">Alternatively, if you don't want to deal with sentinel values and ever wish to deal with an arbitrary amount of iterables as input, then you want to grab and use the <code>roundrobin</code> recipe from <a href="https://docs.python.org/2/library/itertools.html" rel="nofollow noreferrer">docs.python.org/2/library/itertools.html</a></span>
<span class="comment-copy">I was about to post a simple <code>lst3 = arr1+arr2; random.shuffle(lst3)</code>, but the whole thing evolved in a weird way... :D</span>
