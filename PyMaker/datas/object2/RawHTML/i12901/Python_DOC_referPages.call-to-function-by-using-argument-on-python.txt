<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1009860/how-to-read-process-command-line-arguments">How to read/process command line arguments?</a>
<span class="question-originals-answer-count">
                    17 answers
                </span>
</li>
</ul>
</div>
<p>What is the proper way to use **kwargs in Python to call function and get the output from script?
I will like to use the script like that:</p>
<pre><code>python script.py &lt;argument&gt; "here description"
</code></pre>
<p>Here my example</p>
<pre><code>class Task:
    pass

    def __init__(self, **kwargs):
        arguments = {'cre': 'create', 'inf': 'info', 'sre': 'search', 'com': 'comment'}
        arguments.update(kwargs)
        self.create = arguments['cre']
        self.action = arguments['inf']
        self.search = arguments['sre']
        self.comment = arguments['com']

    def create(description):
         print "Task in progress --&gt;--&gt;"

    def search(description):
        print "Searching for task"

    def info(description):
        print "Task Info"

    def comment(description):
        print "Comment task"

if __name__=='__main__':
    Task(**kwargs)
</code></pre>
<p>On current script i get:</p>
<pre><code>Traceback (most recent call last):
  File "simple_function.py", line 39, in &lt;module&gt;
    Task(**kwargs)
NameError: name 'kwargs' is not defined
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Try this:</strong></p>
<pre><code>import sys

class Task(object):

    def __init__(self, **kwargs):

        functions_mapping = {
            'cre': self.create,
            'inf': self.info,
            'sre': self.search,
            'com': self.comment
        }

        for key, value in kwargs.items():
            self.description = value
            try:
                functions_mapping.get(key)()
            except TypeError:
                print "Please provide a correct function name: {}".format(', '.join([x for x in functions_mapping.keys()]))

    def create(self):
        print "Task in progress --&gt; {}".format(self.description)

    def search(self):
        print "Searching for task --&gt; {}".format(self.description)

    def info(self):
        print "Task Info --&gt; {}".format(self.description)

    def comment(self):
        print "Comment task --&gt; {}".format(self.description)


if __name__=='__main__':
    if len(sys.argv) &gt; 1 and len(sys.argv) &lt; 4:
        function, description = sys.argv[1:]
        my_dict = dict()
        my_dict[function] = description
        Task(**my_dict)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>➜  python stackoverflow.py com something_here
Comment task --&gt; something_here

➜  python stackoverflow.py inf something_else
Task Info --&gt; something_else

➜  python stackoverflow.py sre something_more
Searching for task --&gt; something_more

➜  python stackoverflow.py cre somethingggggg
Task in progress --&gt; somethingggggg

➜  python stackoverflow.py moo foobar
Please provide a correct function name: inf, sre, com, cre
</code></pre>
</div>
<span class="comment-copy">You can get command line arguments from <code>sys.argv</code></span>
<span class="comment-copy"><code>Task(**kwargs)</code>: in this line there are are no kwargs yet, <code>sys.argv</code> does give you command-line arguments, but as a list, not a dict, so more processing is needed</span>
<span class="comment-copy">You can't get argument names from command line like this. Maybe you should look into <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a> library.</span>
<span class="comment-copy">Syntax error:  ` Task(args[0]=args[1]) SyntaxError: keyword can't be an expression `</span>
<span class="comment-copy">@Robert I've updated my answer</span>
<span class="comment-copy"><code>with print(Task(**my_dict)) I get: &lt;__main__.Task instance at 0x7f02829b1a28&gt;</code> Instead name of argument and description-text</span>
<span class="comment-copy">@Robert You don't need to print like that. If you want to test my code just add <code>print arguments</code> under <code>arguments.update(kwargs)</code></span>
<span class="comment-copy">ok, but how I can get output from chosen function as argument?</span>
