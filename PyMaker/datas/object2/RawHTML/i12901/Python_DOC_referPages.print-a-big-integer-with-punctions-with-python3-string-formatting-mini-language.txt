<div class="post-text" itemprop="text">
<p>I want a point after each three digits in a big number (e.g. <code>4.100.200.300</code>).</p>
<pre><code>&gt;&gt;&gt; x = 4100200300
&gt;&gt;&gt; print('{}'.format(x))
4100200300
</code></pre>
<p>This question is specific to Pythons string formatting mini-language.</p>
</div>
<div class="post-text" itemprop="text">
<p>There's only one available thousands separator.</p>
<blockquote>
<p>The <code>','</code> option signals the use of a comma for a thousands separator.</p>
</blockquote>
<p>(<a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow">docs</a>)</p>
<p>Example:</p>
<pre><code>'{:,}'.format(x) # 4,100,200,300
</code></pre>
<p>If you need to use a dot as a thousand separator, consider replacing commas with <code>'.'</code> or setting the locale (<em>LC_NUMERIC</em> category) appropriately.</p>
<p>You could use <a href="http://lh.2xlibre.net/values/thousands_sep/" rel="nofollow">this</a> list to find the right locale. Note that you'll have to use the <code>n</code> integer presentation type for locale-aware formatting:</p>
<pre><code>import locale
locale.setlocale(locale.LC_NUMERIC, 'de_DE') # or da_DK, or lt_LT, or mn_MN, or ...
'{:n}'.format(x) # 4.100.200.300
</code></pre>
<p>In my opinion, the former approach is much simpler:</p>
<pre><code>'{:,}'.format(x).replace(',', '.') # 4.100.200.300
</code></pre>
<p>or</p>
<pre><code>format(x, ',').replace(',', '.') # 4.100.200.300
</code></pre>
</div>
