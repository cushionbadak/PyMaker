<div class="post-text" itemprop="text">
<p>i have the following code and any trying to make a class that generates two random numbers in a list and returns them </p>
<pre><code>import random

class add :

    def __init__(self):
       self.data = []

    def GenerateLocation(self):
        random1 = 10
        random2 = 20
        self.data.append(random.uniform(-random1 , random1))
        self.data.append(random.uniform(-random2 , random2))
        print(self.data)

self.data.GenerateLocation(self)
</code></pre>
<p>I get the error <code>self is not defined in line 15</code> 
the <code>self.data.GenerateLocation(self)</code>.</p>
<p>Can anyone explain this, I've look at the other questions on self and init but its over my head.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you try to do this:</p>
<pre><code>import random

class Add:

    def __init__(self):
       self.data = []

    def generate_location(self):
        random1 = 10
        random2 = 20
        self.data.append(random.uniform(-random1 , random1))
        self.data.append(random.uniform(-random2 , random2))
        print(self.data)

my_object = Add()
my_object.generate_location()
</code></pre>
<p>To use class you have to create object/instance. Creating instance python calls <code>Add.__init__</code> and reserves place in memory for <code>self.data</code>. Then you can call its method <code>my_object.generate_location()</code> and it can use <code>self.data</code>.</p>
<p><code>self</code> is use only inside class - it is like words <code>me</code>, <code>my</code> (<code>my.data</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>The line <code>self.data.GenerateLocation(self)</code> is really strange and it is not clear what are you trying to do here. If you are creating the class, it seems that you want to instantinate it, i.e. create object of that class. To do so, you have to invoke constructor. In your case it will be like (copying from @furas's answer)</p>
<pre class="lang-py prettyprint-override"><code>my_object = Add()
</code></pre>
<p>This creates object <code>my_object</code> which is instance of class <code>Add</code>. Then you can call method <code>generate_location</code> of your object. To do so, you have to prepend <code>generate_location()</code> with the name of your object.</p>
<pre class="lang-py prettyprint-override"><code>my_object.generate_location()
</code></pre>
<p>Note that despite the fact that <code>generate_location</code> has argument <code>self</code>, it is not given explicitly in this call. This is because Python will pass (a reference to) the object <code>my_object</code> to the method <code>generate_location</code> as a first argument automatically just because it is method of this object. (Methods are functions that are associated with objects, like <code>.append()</code> for lists.)</p>
<p>See the official tutorial for more details: <a href="https://docs.python.org/2/tutorial/classes.html" rel="nofollow">python 2</a>, <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow">python 3</a>.</p>
</div>
<span class="comment-copy">Look at your code indentation. Indentation is <i>crucial</i> in Python code. The last line in your code is <i>not part of any method</i>.</span>
<span class="comment-copy">You'll have other errors when you fix that part, because there is no <code>GenerateLocation()</code> method on <code>self.data</code>, which is a list object.</span>
<span class="comment-copy">the self.data.GenerateLocation(self) is in the main of the program , can you not call methods from main or something?</span>
<span class="comment-copy">@Broomer what do you expect <code>self</code> to be, and why?</span>
<span class="comment-copy"><code>self</code> is an argument to a method. The main program is not a method, so there is no <code>self</code> there. Did you mean to create an instance of the class and call the method on that? If so, you'll need to do <i>that</i>: <code>instance = add()</code>, <code>add.GenerateLocation()</code>. The <code>self</code> argument is going to be taken care of for you in that case.</span>
<span class="comment-copy">yes thats exactly whats its supposed to do can you explain why the above code is correct compared having no <i>init_</i> or self and calling it by using the class name like Add.generate_location()</span>
