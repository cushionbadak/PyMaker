<div class="post-text" itemprop="text">
<p>Given that the new Python 3.5 allows type hinting with type signatures I want to use the new feature, but I don't know how to fully annotate a function with the following structure:</p>
<pre><code>def yieldMoreIfA(text:str):
    if text == "A":
        yield text
        yield text
        return
    else:
        yield text
        return
</code></pre>
<p>What's the correct signature?</p>
</div>
<div class="post-text" itemprop="text">
<p>There is a <a href="https://docs.python.org/3/library/typing.html#typing.Generator" rel="noreferrer"><code>Generator[yield_type, send_type, return_type]</code> type</a>:</p>
<pre><code>from typing import Generator

def yieldMoreIfA(text: str) -&gt; Generator[str, None, None]:
    if text == "A":
        yield text
        yield text
        return
    else:
        yield text
        return
</code></pre>
</div>
<span class="comment-copy">What is send_type, and return_type?</span>
<span class="comment-copy">@Drew: you can send values to a generator using <code>generator.send()</code>. <code>send_type</code> specifies the type of these values. In Python 3.3 and up, when a generator uses <code>return some_expression</code> the returned value is wrapped in a <code>StopIteration</code> exception, and becomes the return value of a <code>yield from</code> expression (when <a href="https://docs.python.org/3/whatsnew/3.3.html#pep-380-syntax-for-delegating-to-a-subgenerator" rel="nofollow noreferrer">delegating to a subgenerator</a>, see <a href="https://docs.python.org/3/reference/expressions.html#yield-expressions" rel="nofollow noreferrer"><code>yield from</code></a>); the <code>return_type</code> parameter specifies what type this'll produce.</span>
