<div class="post-text" itemprop="text">
<p>I have used the write function from scipy.io.wavfile to generate a .wav file. </p>
<pre><code>final_out = np.int16(stereo_out/np.max(np.abs(stereo_out)) * 32767)
write('final.wav', fs, final_out)
</code></pre>
<p>Is there any alternate function for write that allows more than 32767 samples?</p>
</div>
<div class="post-text" itemprop="text">
<p>There is <strong>not such limitation in the number of samples</strong> that can be written to a a wav file with <code>scipy.io.wavfile</code>. The <a href="https://en.wikipedia.org/wiki/WAV#Limitations" rel="nofollow">actual limitation</a> on the number of samples is 2^32 (4,294,967,296), but it comes from the fact that the header stores the number of samples as a 32-bit unsigned integer.</p>
<p>The WAV format, however, stores the amplitude of each sample in 16-bits. </p>
<p>With a signed integer of 16-bits, you can only store numbers in the range [-32768, 32767] inclusive, you'll need to scale your signal accordingly to fit that range.</p>
<p>You can think of that number as a fraction (ratio) of the highest amplitude that your system can produce.</p>
</div>
<div class="post-text" itemprop="text">
<p>You might take a look at the <a href="https://docs.python.org/3/library/wave.html" rel="nofollow">wave module</a> in Python's Standard Library. It may allow you to write more than 32767 samples, but I am unsure as to what limitations you may come across while trying to use it.</p>
</div>
<span class="comment-copy">Thank you for the detailed explanation! :)</span>
