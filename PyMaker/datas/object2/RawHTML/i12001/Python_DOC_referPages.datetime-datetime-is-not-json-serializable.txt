<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11875770/how-to-overcome-datetime-datetime-not-json-serializable">How to overcome “datetime.datetime not JSON serializable”?</a>
<span class="question-originals-answer-count">
                    29 answers
                </span>
</li>
</ul>
</div>
<p>I have a class in Python for retrieving all the columns in a table and return a JSON with this data.</p>
<p>The problem is at least one of those columns is a datetime and I can't seem to understand how to serialize the columns so I can generate a valid JSON.</p>
<p>My class is as follows:</p>
<pre><code>class GetTodos(Resource):
    def get(self):
        con = cx_Oracle.connect('brunojs/bdpf5@127.0.0.1/orcl')
        cur = con.cursor()
        cur.execute("select * from organite_repository")
        r = [dict((cur.description[i][0], value) \
                for i, value in enumerate(row)) for row in cur.fetchall()]
        cur.connection.close()
        return (r[0] if r else None) if None else r 
</code></pre>
<p>Any hints on this?</p>
</div>
<div class="post-text" itemprop="text">
<p>JSON doesn't have a default datetime type, so this is why Python can't handle it automatically. So you need to make the datetime into a string one way or another. I think the best way is to write a custom handler to help the json module.</p>
<pre><code>import datetime
import json

def datetime_handler(x):
    if isinstance(x, datetime.datetime):
        return x.isoformat()
    raise TypeError("Unknown type")

json.dumps(data, default=datetime_handler)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A simple way to do it is to cast your data to string.
That way, you will be able to dump with json.</p>
<pre><code>&gt;&gt;&gt; datetime.now()
datetime.datetime(2016, 3, 8, 11, 37, 24, 123639)

&gt;&gt;&gt; str(datetime.now())
'2016-03-08 11:37:27.511053'
</code></pre>
<p>But, you could also implement a serializer to transform the data as you want.</p>
</div>
<span class="comment-copy">I updated this with <code>raise x</code> for my case.</span>
<span class="comment-copy">Use <code>json.JSONEncoder.default = datetime_handler</code> to parse datetime automatically without using <code>default=datetime_handler</code> every time.</span>
<span class="comment-copy">I'm getting a TypeError with this answer, that says datetime_handler accepts 1 argument but JSON is trying to hand it 2.</span>
<span class="comment-copy">Have just tried my original answer with Python 2.6.9 and 3.4.1 and it works with both. If you are following the answer from @ChaimG you may need to specify a self parameter as well because you've overriding this: <a href="https://docs.python.org/3/library/json.html#json.JSONEncoder.default" rel="nofollow noreferrer">docs.python.org/3/library/json.html#json.JSONEncoder.default</a></span>
<span class="comment-copy">maybe would be wise to update json module and allow datetime conversion ?</span>
