<div class="post-text" itemprop="text">
<pre><code>mm1 = [line.strip() for line in open("m1.dat", 'r')]
ii1 = [int(x) for x in mm1]

s1 = 1
er1 = 0.022
er2 = 2.866
w = [1,2,5,6]

f=open('newdat.txt','w')

for item in ii1:
  for i in w:
    if i == 1:
      f.write( s1,item,1,list1[item-1],er2)
    elif i == 2:
      f.write( s1,item,2,list2[item-1],er1)
    elif i == 5:
      f.write( s1,item,5,list3[item-1],er2)
    else:
      f.write( s1,item,6,list4[item-1],er1)
</code></pre>
<p>But I got</p>
<pre><code>TypeError: function takes exactly 1 argument (5 given)
</code></pre>
<p>I understand that I need to format my write but how?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are passing 6 item to <code>write()</code> function. Also you can not write a list on a file object you need to convert them to string. Or in this case you can concatenate them using <code>str.join()</code> then write it to the file.</p>
<pre><code>f.write(','.join(map(str,( s1,item,1,list1[item-1],er2)))
</code></pre>
<p>Also note that you shouldn't open a file like that. Because external objects once been created <a href="https://docs.python.org/3/reference/datamodel.html#objects-values-and-types" rel="nofollow">won't be collected by garbage collector</a>. You can simply use <code>with</code> statement in order to open the files which will close the file automatically at the end of the block.</p>
<pre><code>with open("m1.dat") as f:
    ii1 = [int(x.strip()) for x in f]

s1 = 1
er1 = 0.022
er2 = 2.866
w = [1,2,5,6]

with open('newdat.txt','w') as f:
    for item in ii1:
        for i in w:
            if i % 2 != 0:
                f.write(','.join(map(str, (s1, item, i, list1[item-1], er2)))
            else:
                f.write(','.join(map(str, (s1, item, i, list1[item-1], er1)))
</code></pre>
<p>Also as another alternative approach (and more pythonic), for refusing of joining the items and converting to string you can use <code>csv</code> module and write the expected sequences to a <code>csv</code> file.</p>
<pre><code>import csv

# ...
# ...
with open('newdat.csv', 'w') as csvfile:
    spampwriter = csv.writer(csvfile, delimiter=',')
    for item in ii1:
        for i in w:
            if i % 2 != 0:
                spampwriter.writerrow((s1, item, i, list1[item-1], er2))      
            else:
                spampwriter.writerrow((s1, item, i, list1[item-1], er1))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you're trying to write a CSV file. To do this, you can either use the <a href="https://docs.python.org/2/library/csv.html" rel="nofollow">CSV</a> module or put commas between the values like this:</p>
<pre><code>f.write(",".join(map(str([s1, item, 1, list1[item-1], er2]))))
</code></pre>
<p>This will make all of the values you're trying to write into an array, and then put "," in between each item. It also converts each item of that array into a string, as <code>join</code> expects each element to be a string.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>join</code></a> them, <code>f.write(",".join(s1,item,1,list1[item-1],er2))</code></span>
<span class="comment-copy">or in python3 use print(s1,item,6,list,er,file=f,sep=',')</span>
<span class="comment-copy">I would like data to be written to newline.How to solve this?I need 5 items in each row.</span>
<span class="comment-copy">@RichardRublev that's what this code does. As I mentioned if you want to save your items without joining you can use <code>csv</code>.</span>
