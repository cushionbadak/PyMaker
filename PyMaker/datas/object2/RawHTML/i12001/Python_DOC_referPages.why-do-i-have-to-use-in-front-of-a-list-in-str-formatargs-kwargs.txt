<div class="post-text" itemprop="text">
<p>After reading these:<br/>
<a href="https://stackoverflow.com/questions/15545711/special-use-of-args-kwargs">Special use of args / kwargs</a><br/>
<a href="https://www.python.org/dev/peps/pep-3102/" rel="nofollow noreferrer">https://www.python.org/dev/peps/pep-3102/</a><br/>
<a href="https://stackoverflow.com/questions/36901/what-does-double-star-and-star-do-for-python-parameters">What does ** (double star) and * (star) do for parameters?</a><br/>
<a href="https://docs.python.org/3.5/library/string.html#formatstrings" rel="nofollow noreferrer">https://docs.python.org/3.5/library/string.html#formatstrings</a> </p>
<p>I want to be sure I understand well: <code>str.format(*args, **kwargs)</code></p>
<p>if <code>uniques</code> is a list of two integers such as <code>[0, 0]</code>, which I would use for example in a loop with a condition to increment the first element and no condition to increment the second, with:</p>
<pre><code> print('Task finished. {0!s} retrieved out of {1!s} tested'.format(*uniques))
</code></pre>
<p>I do have to use <code>*uniques</code> because instead <code>uniques</code> would be passed as a tuple to format. But if I do use</p>
<pre><code> print('Task finished. {0.[0]} retrieved out of {0.[1]} tested'.format(uniques))
</code></pre>
<p>It raises value error: <code>ValueError: Empty attribute in format string</code>. Using brackets around <code>uniques</code> doesn't help. I don't really get why? Could someone please clarify?</p>
<p>In the first case, is the list unpacked then converted to a tuple, while in the second, it is not because the list can't be converted by format as a tuple right away, the same way <code>format(uniques[0], uniques[1])</code> would? If I am right, why is that the case, since there's is a <code>tuple(list)</code> function to do that and so, it is very simple?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are mixing <em>attribute</em> and <em>subscription</em> syntax. <code>0.[0]</code> tells the format to look for an <em>attribute</em> by the name <code>[0]</code>. However, the <a href="https://docs.python.org/3/library/string.html#formatstrings" rel="nofollow">formal grammar</a> only allows for a <a href="https://docs.python.org/3/reference/lexical_analysis.html#grammar-token-identifier" rel="nofollow">valid <em>identifier</em></a> to follow the dot (meaning a word formed of letters, digits and underscores, starting with a letter or underscore), and <code>[0]</code> doesn't match that rule, so you get an error that there is no attribute name at all.</p>
<p>Drop the dots:</p>
<pre><code>print('Task finished. {0[0]} retrieved out of {0[1]} tested'.format(uniques))
</code></pre>
<p>This now works, because now the format parser correctly sees subscriptions:</p>
<pre><code>&gt;&gt;&gt; uniques = [0, 0]
&gt;&gt;&gt; print('Task finished. {0[0]} retrieved out of {0[1]} tested'.format(uniques))
Task finished. 0 retrieved out of 0 tested
&gt;&gt;&gt; uniques = [42, 81]
&gt;&gt;&gt; print('Task finished. {0[0]} retrieved out of {0[1]} tested'.format(uniques))
Task finished. 42 retrieved out of 81 tested
</code></pre>
<p>The <code>0[0]</code> specifier tells the <code>str.format</code> parser to use the first positional argument (here provided by <code>uniques</code>) and then threat that as a sequence by subscribing to <code>[0]</code>, so the first element.</p>
<p>When you use <code>'...'.format(*uniques)</code>, any <em>iterable</em> will do, be it a list or a tuple or a different kind of iterable (including generators); Python iterates over it to produce separate arguments. For <code>[42, 81]</code> that means Python will call the method as if you called it with <code>'...'.format(42, 81)</code> either way. In the string format, you then have to address these separate arguments with <code>{0}</code> and <code>{1}</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have a typo in your format string:</p>
<pre><code>print('Task finished. {0[0]} retrieved out of {0[1]} tested'.format(uniques))
</code></pre>
</div>
<span class="comment-copy">Does '...'.format(*(uniques, )) work?</span>
<span class="comment-copy">No it doesn't. Thanks for trying to help. I elaborated my post while you answer, with the edit at the end?</span>
<span class="comment-copy">Ah sorry I did not read the question properly :)</span>
<span class="comment-copy">I guess there's no answer here to how can I be so dumb, but you're awesome! I guess anyway, *list is more pythonic and formal, but I wanted to be sure to understand the mechanics even if I would not use it. Just for elation and peace of the mind.</span>
<span class="comment-copy">@AndoJurai: it depends on what you want to do; if you have a variable number of templates, using named slots with attributes or subscriptions can a be very powerful way to make those templates more flexible, applying a whole namespace mapping to them with <code>template.format(**mapping)</code>.</span>
