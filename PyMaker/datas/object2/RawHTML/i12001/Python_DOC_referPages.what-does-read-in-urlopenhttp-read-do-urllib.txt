<div class="post-text" itemprop="text">
<p>Hi I'm reading "Web Scraping with Python (2015)". I saw the following two ways of opening url, with and without using <code>.read()</code>. See <code>bs1</code> and <code>bs2</code></p>
<pre><code>from urllib.request import urlopen
from bs4 import BeautifulSoup

html = urlopen('http://web.stanford.edu/~zlotnick/TextAsData/Web_Scraping_with_Beautiful_Soup.html')
bs1 = BeautifulSoup(html.read(), 'html.parser')

html = urlopen('http://web.stanford.edu/~zlotnick/TextAsData/Web_Scraping_with_Beautiful_Soup.html')
bs2 = BeautifulSoup(html, 'html.parser')

bs1 == bs2 # true


print(bs1.prettify()[0:100])
print(bs2.prettify()[0:100]) # prints same thing
</code></pre>
<p>So is <code>.read()</code> redundant? Thanks</p>
<p>Code on p7 of Web scpraing with python: (use <code>.read()</code>)</p>
<pre><code>from urllib.request import urlopen
from bs4 import BeautifulSoup
html = urlopen("http://www.pythonscraping.com/pages/page1.html")
bsObj = BeautifulSoup(html.read())
</code></pre>
<p>Code on p15 (without <code>.read()</code>)</p>
<pre><code>from urllib.request import urlopen
from bs4 import BeautifulSoup
html = urlopen("http://www.pythonscraping.com/pages/warandpeace.html")
bsObj = BeautifulSoup(html)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Quoting <a href="http://www.crummy.com/software/BeautifulSoup/bs4/doc/#making-the-soup" rel="nofollow">BS docs</a>:</p>
<blockquote>
<p>To parse a document, pass it into the BeautifulSoup constructor. You
  can pass in a string or an open filehandle:</p>
</blockquote>
<p>When you're using .read() method you use an "string" inteface. When you are not, you're using "filehandle" interface.</p>
<p>Effectively it works same way (although BS4 may read file-like object in lazy way). In your case whole content is read to string object (it's may consume more memory unnecessarily).</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/urllib.request.html#module-urllib.request" rel="nofollow">urllib.request.urlopen</a> returns a file-like object, the <code>read</code> method of it will return the response body of that url.</p>
<p><code>BeautifulSoup</code> constructor accepts both a string or an open filehandle, so yes, <code>read()</code> is redundant here.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Without BeautifulSoup Module</strong></p>
<p>.read() is useful when you are not using the "BeautifulSoup" Module thus making it non-redundant in this case. Only if you use .read() you will get the html content, without which you will just have the object returned by .urlopen()</p>
<p><strong>With BeautifulSoup Module</strong></p>
<p>The BS module has 2 constructors for this feature, one will accept String and the other will accept the object returned by .urlopen(<em>some-site</em>)</p>
</div>
<span class="comment-copy">In addition to the answers above, I suggest you try to use the requests library for HTTP requests  <a href="http://docs.python-requests.org/en/latest/" rel="nofollow noreferrer">docs.python-requests.org/en/latest</a>  You'll be more in control of the HTTP response</span>
<span class="comment-copy">thanks @A.Romeu could you refer me some post for more info please? I do need to fit form and get response webpage in the next step, where I plan to use <code>mechanize</code></span>
<span class="comment-copy">On the link I sent you, there is a lot of information on how to use it, under the section 'The User Guide'. You can start directly with <a href="http://docs.python-requests.org/en/latest/user/quickstart/#make-a-request" rel="nofollow noreferrer">docs.python-requests.org/en/latest/user/quickstart/â€¦</a></span>
<span class="comment-copy">thanks @A.Romeu!</span>
