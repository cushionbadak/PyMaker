<div class="post-text" itemprop="text">
<p>I was solving Project Euler <a href="http://www.mathblog.dk/project-euler-34-factorial-digits/" rel="nofollow">problem 34</a></p>
<p>My code gives is as follows:</p>
<pre><code>import functools

limit = int(input())

factDict = { 0:1, 1:1, 2:2, 3:6, 4:24, 5:120, 6:720, 7:5040, 8:40320, 9:362880 }

for i in range(10, limit):
    listNum = list(map(int, list(str(i))))
    #print(listNum)
    sumFact = functools.reduce(lambda x, y: factDict[x] + factDict[y], listNum)
    if(sumFact%i == 0):
        print(i)
</code></pre>
<p>It works fine until 140 and then gives:</p>
<pre><code>Traceback (most recent call last):
  File "solution.py", line 10, in &lt;module&gt;
    sumFact=functools.reduce(lambda x, y: factDict[x]+factDict[y], listNum)
  File "solution.py", line 10, in &lt;lambda&gt;
    sumFact=functools.reduce(lambda x, y: factDict[x]+factDict[y], listNum)
KeyError: 25
</code></pre>
<p>I printed the list too and found there is no problem there.</p>
<p>Where am I going wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're not using <code>functools.reduce()</code> correctly.</p>
<p>This: <code>functools.reduce(lambda x, y: factDict[x] + factDict[y], listNum)</code> applied to [1, 4, 0] will (try to) calculate:</p>
<pre><code>factDict[factDict[1] + factDict[4]] + factDict[0]
</code></pre>
<p>resulting in this index error (factDict[1] + factDict[4] being equal to 25).</p>
<p>According <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow">to the doc</a>:</p>
<blockquote>
<p>The left argument, x, is the accumulated value</p>
</blockquote>
<p>So if you use factDict[x] you will replace the accumulated value by its factorial (not what you want).</p>
<p>So you have to leave x 'alone'.</p>
<p>Then, to initialize to something "neutral", you can just use 0, this way, it will actually compute (for 140): <code>0 + factDict[1] + factDict[4] + factDict[0]</code></p>
<p>So finally:</p>
<pre><code>#!/usr/bin/env python3

import functools

limit = int(input())

factDict = { 0:1, 1:1, 2:2, 3:6, 4:24, 5:120, 6:720, 7:5040, 8:40320, 9:362880 }

for i in range(10, limit):
    listNum = list(map(int, list(str(i))))
    #print(listNum)
    sumFact = functools.reduce(lambda x, y: x + factDict[y], listNum, 0)
    if(sumFact == i):
        print("Found: " + str(i))
</code></pre>
<p>Moreover I changed the last test in <code>sumFact == i</code> since you're looking for numbers equal to the sum of their factorials, not being a divisor of the sum of their factorials. (As stated in the comments, you can use the test you like).</p>
<p>PS this doesn't give a lot of results:</p>
<pre><code>$ ./test_script.py
1000000
Found: 145
Found: 40585
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>the reduce method does not work as you intend. Visit <a href="https://docs.python.org/2/library/functions.html#reduce" rel="nofollow">https://docs.python.org/2/library/functions.html#reduce</a></p>
<pre><code>sumFact = functools.reduce(lambda x, y: factDict[x] + factDict[y], listNum).
</code></pre>
<p>in that expression x is the accumulated value and y is the update value from the iterable (listNum).
When the exception occures, the value of listNum is [1,4,0]. the calculations made by the reduce function at that moment is then :</p>
<pre><code>accum_value = factDict[1]+factDict[4] # accum_value is set to 25
accum_value = factDict[accum_value]+factDict[0] # Keyerror factDict does not have the key 25.
</code></pre>
<p>A way to correct this is to set an initializer into the reduce function like this.</p>
<pre><code>import functools
limit = int(input())
factDict = { 0:1, 1:1, 2:2, 3:6, 4:24, 5:120, 6:720, 7:5040, 8:40320, 9:362880 }

for i in range(10, limit):
    listNum = list(map(int, list(str(i))))
    #print(listNum)
    sumFact = functools.reduce(lambda x, y: x + factDict[y], listNum[1:len(listNum)],factDict[listNum[0]])
    #print sumFact
    if(sumFact%i == 0):
        print(i) 
</code></pre>
<p>Note that this code will display numbers which are devided by the sum of the factorial of thier digits.</p>
</div>
<span class="comment-copy">Thanks for your reply! I realized after your explanation. But the question states divisor, rendering your last edit not necessary as 19 satisfies. Thanks for clarifying anyway. Also is there a better way using reduce?</span>
<span class="comment-copy">Hum, don't see any divisor in the question or problem 34, but this last test can be set as fit your needs anyway. Yes I found a better way, I edit the answer.</span>
<span class="comment-copy">Done. Don't hesitate to accept my answer if it was helpful.</span>
