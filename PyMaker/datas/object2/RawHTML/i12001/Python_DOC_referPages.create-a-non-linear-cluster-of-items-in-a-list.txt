<div class="post-text" itemprop="text">
<p>first post so please let me know if I'm doing something wrong.<br/>
I'm working in python (Spyder 3.2 on Mac) and I'm trying to create a list with values that are non-linear.<br/>
I want to get an output to look something like:  </p>
<pre><code>a = [1, 2, 3, 4, 600, 601, 602, 603, 1200, 1201, 1202, 1203,...]
</code></pre>
<p>The length of the list and the steps between the variables will vary depending on other variables in the file I'm reading in. </p>
<p>What is the best way to create a list like this? </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = list(range(1,5,1)) + list(range(600,604,1)) + list(range(1200,1204,1))
print(a)
[1, 2, 3, 4, 600, 601, 602, 603, 1200, 1201, 1202, 1203]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can add an element to the end of a Python list with the append function. For example</p>
<pre><code>a = [1, 2, 3, 4, 600, 601, 602, 603]
a.append(1200)
print(a)
</code></pre>
<p>would output <code>[1, 2, 3, 4, 600, 601, 602, 603, 1200]</code>. You can set up your program flow around that however you would like to make sure your other variables take on the value you want them to.</p>
<p>Alternatively, depending on how the values of your other variables are calculated, you may be able to rewrite your list declaration as a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> or multiple nested list comprehensions. For example, a list of the perfect squares less than 401 can be generated like so:</p>
<pre><code>a = [x*x for x in xrange(21)]
</code></pre>
<p>In this line of thought, if you can fit a function to your data you can generate your list with a list comprehension.</p>
</div>
<span class="comment-copy">Define some range... Do <code>a.append(num)</code> for each num in the range. Have you tried that?</span>
