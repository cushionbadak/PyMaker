<div class="post-text" itemprop="text">
<p>I'm trying to connect to a trading platform with tcp connection, the platform runs in java on my virtual machine. </p>
<p>I tried with the following code:</p>
<pre><code>import socket



TCP_IP = 'localhost'
TCP_PORT = 5333
BUFFER_SIZE = 1024
MESSAGE = "function=subscribe_portfolio_balance|item="xxxxxxxxxxxxxxxx"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((TCP_IP, TCP_PORT))
s.send(MESSAGE)
data = s.recv(BUFFER_SIZE)
s.close()

print "received data:", data
</code></pre>
<p>The code is not working, nothing really happens when I run it on the terminal, no error messages, o messages at all... am I doing something wrong in here? Is there a way to structure the code in order to be able to understand what's wrong?</p>
<p>Thanks a lot</p>
</div>
<div class="post-text" itemprop="text">
<p>There are several things that might be causing your problem:</p>
<ul>
<li>The server does not like what you are sending it, and simply discards the data. Your client is blocked waiting for a response  at s.recv(..) - if the server does not respond, your client will simply wait.</li>
<li>You may need to flush your client socket, as the data may be sitting in the output buffer unsent.</li>
</ul>
<p>I would suggest taking a look at the Python Socket HOWTO guide at <a href="https://docs.python.org/3/howto/sockets.html" rel="nofollow">https://docs.python.org/3/howto/sockets.html</a></p>
<p>I mocked up a quick test based on your script. This works for me, the only change I made was to fix the quoting of the message string.</p>
<p><strong>client.py</strong></p>
<pre><code>import socket

TCP_IP = 'localhost'
TCP_PORT = 5333
BUFFER_SIZE = 1024
#note the outer ' around the message
MESSAGE = '"function=subscribe_portfolio_balance|item="xxxxxxxxxxxxxxxx"'

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((TCP_IP, TCP_PORT))
s.send(MESSAGE)
print "sent data"
data = s.recv(BUFFER_SIZE)
print "recieved"
s.close()

print "received data:", data
</code></pre>
<p><strong>server.py</strong></p>
<pre><code>import socket

TCP_IP = 'localhost'
TCP_PORT = 5333
BUFFER_SIZE = 1024

# create an INET, STREAMing socket
serversocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# bind the socket to a public host, and a well-known port
serversocket.bind((TCP_IP, TCP_PORT))
# become a server socket
serversocket.listen(5)

while True:
    # accept connections from outside
    (clientsocket, address) = serversocket.accept()
    # now do something with the clientsocket
    data = clientsocket.recv(BUFFER_SIZE)
    print "recieved: " + data
    clientsocket.send(data)
    clientsocket.close()
</code></pre>
</div>
<span class="comment-copy">Are you sure about <code>MESSAGE = "function=subscribe_portfolio_balance|item="xxxxxxxxxxxxxxxx"</code> There too many quotes I think. Al least you have to get <code>SyntaxError: invalid syntax</code></span>
<span class="comment-copy">Nope, no invalid syntax messages, with this code but yes I get a syntax error message if I direcly insert the string "function=subscribe_portfolio_balance|item="xxxxxxxxxxxxxxxx" in s.send() instead of using the MESSAGE variable. The message above is the one described in the manual, unfortunally in Italian...</span>
<span class="comment-copy">you may transform message like that <code>MESSAGE = 'function=subscribe_portfolio_balance|item='xxxxxxxxxxxxxxxx'"</code> and see what happens.</span>
<span class="comment-copy">Yes I did it I got a syntax error...</span>
<span class="comment-copy">Thanks a lot for this, but still not working... It just print out "sent data" it does not even print out "recieved". What does it mean? Maybe The socket is not connected? I'm totally new to programming but from what I understand there should be two explanations for this: the socket is not connected, the message is not correct, how can I understand what is the problem?</span>
<span class="comment-copy">If you see 'sent data', then you know that at least you managed to connect to the server and send the raw data.  Since you <i>dont</i>  see 'recieved', the server has not sent any data back to you and the client is simply waiting. Why this is so is down to the trading application - this is what you need to investigate.  You will need to look at your trading platform application more closely. Does it write any logs? Can you debug it? Is there any documentation on what format the input should take and so on.</span>
<span class="comment-copy">Yes I accessed to the java consolle and actually it recives the message, "request recived from socket client: new thread created" than nothing happens anymore, not until I stop the python script, than on the java console I can see that it actually responds to my request..</span>
<span class="comment-copy">Interesting. I guess you will have to read their documentation on how they expect external applications to communicate. Perhaps they use a callback mechanism of some sort, but that is just speculation. Ultimately its not a problem with your python program, you need to understand how the trading program communicates.</span>
