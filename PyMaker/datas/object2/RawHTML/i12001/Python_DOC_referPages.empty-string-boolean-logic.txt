<div class="post-text" itemprop="text">
<p>I just stumbled across this and I couldn't find a sufficient answer:</p>
<pre><code>x = ""
</code></pre>
<p>Why then is:</p>
<pre><code>x == True
False

x == False
False

x != True
True

x != False
True
</code></pre>
<p>Am I supposed to conclude that <code>x</code> is neither <code>True</code> nor <code>False</code>?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Am I supposed to conclude that x is neither True nor False?</p>
</blockquote>
<p>That's right. <code>x</code> is neither <code>True</code> nor <code>False</code>, it is <code>""</code>. The differences start with the type:</p>
<pre><code>&gt;&gt;&gt; print(type(""), type("x"), type(True), type(False))
builtins.str, builtins.str, builtins.bool, builtins.bool
</code></pre>
<p>Python is a highly object oriented language. Hence, strings are objects. The nice thing with python is that they can have a boolean <strong>representation</strong> for <code>if x: print("yes")</code>, e. g.. For strings this representation is <code>len(x)!=0</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>to check if x is True of False:</p>
<pre><code>bool("")
&gt; False

bool("x")
&gt; True
</code></pre>
<p>for details on the semantics of <code>is</code> and <code>==</code> see <a href="https://stackoverflow.com/questions/132988/is-there-a-difference-between-and-is-in-python">this question</a></p>
</div>
<div class="post-text" itemprop="text">
<p>In python '==' tests for equality.  The empty string is not equal to True, so the result of your comparison is False.</p>
<p>You can determine the 'truthiness' of the empty string by passing it to the bool function:</p>
<pre><code>&gt;&gt;&gt; x = ''
&gt;&gt;&gt; bool(x)
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In a Boolean context, null / empty strings are false (Falsy). If you use</p>
<pre><code>testString = ""

if not testString:
    print("NULL String")
else:
    print(testString)
</code></pre>
<p>As snakecharmerb said, if you pass the string to the bool() function it will return True or False based</p>
<pre><code>&gt;&gt;&gt; testString = ""
&gt;&gt;&gt; bool(testString)
    False

&gt;&gt;&gt; testString = "Not an empty string"
&gt;&gt;&gt; bool(testString)
    True
</code></pre>
<p>See this doc on Truth Value Testing to learn more about this:</p>
<p>Python 2:</p>
<p><a href="https://docs.python.org/2/library/stdtypes.html#truth-value-testing" rel="nofollow">https://docs.python.org/2/library/stdtypes.html#truth-value-testing</a></p>
<p>Python 3:</p>
<p><a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow">https://docs.python.org/3/library/stdtypes.html#truth-value-testing</a></p>
</div>
<span class="comment-copy">What?! You are to conclude that <code>x</code> isn't <i>equal to</i> either <code>True</code> or <code>False</code>. Why did you think it would be? Have you been confused somehow by <a href="https://docs.python.org/2/library/stdtypes.html#truth-value-testing" rel="nofollow noreferrer">docs.python.org/2/library/stdtypes.html#truth-value-testing</a>? It will still evaluate false-y in a boolean context: <code>if x:</code>, <code>bool(x)</code>, etc..</span>
<span class="comment-copy">Dr. Tautology, I think what you meant to test was if <code>bool(x) == False</code>. Username checks out, though.</span>
<span class="comment-copy">Now see what happens with your tests if you set <code>x=0</code>. And then do the same thing with <code>x=1</code>.</span>
<span class="comment-copy">@PM2Ring Ask one bad question on stackoverflow and it ruins your day.FML</span>
<span class="comment-copy">Hey, it's not <i>that</i> bad. Sure, it's got a net zero score, but you won a few rep points from it, and you got some good answers. But yes, this is fairly basic info that isn't that hard to find in the official documentation.</span>
