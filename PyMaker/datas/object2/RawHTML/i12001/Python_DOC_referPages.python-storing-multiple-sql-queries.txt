<div class="post-text" itemprop="text">
<p>I've got a python file which has a bunch of sql queries in it depending on the arguments that are being passed example would be like this:</p>
<pre><code>if args.monitor == 'Argument One':
    sql_query = """select a, b, c from tableA where a = 123"""
elif args.monitor == 'Argument Two':
    sql_query = """select d, e, f from TableA where d = 456"""
elif ....
</code></pre>
<p>This continues on for about 10 different queries with different complexities.</p>
<p>Obviously this makes a mess of code, and to update and/or add SQL queries involves touching a lot of code.  What I'd like to do is part the queries/arguments into some sort of dict.  Is it possible to use a config file for this purpose where I could do something like the following?</p>
<pre><code>[query]
Argument A = select a, b, c from tableA where a = 123
Argument B = select d, e, f from TableA where d = 456
</code></pre>
<p>And then call via ConfigParser.  My concern is that some of the queries are quite long (10 lines max) so how would I represent that in a config file?</p>
<p>Or do I go the route of saving each query as <code>ArgumentA.sql</code> and then list the directory and if the argument matches then use that sql?</p>
<p>Has anyone approached a scenario like this before?</p>
</div>
<div class="post-text" itemprop="text">
<p>A dict which associates each argument with the respective query does seem the best idea. Considering this, I see several approaches for this</p>
<p><strong>1)</strong> Having a constant at the top of the file which contains this dict. E.g.:</p>
<pre><code>ARGUMENTS_DICT = {
    'Argument One': (
        'select *'
        'from table'
        'where etc'
    ),
    ...
}
</code></pre>
<p><strong>2)</strong> Having the same constant from <strong>1</strong> in another file (Python module) and importing it to the current module. E.g.:</p>
<pre><code>from .arguments_dict import ARGUMENTS_DICT
</code></pre>
<p><strong>3)</strong> Having this dict as a JSON object in a JSON file and using Python's <a href="https://docs.python.org/3/library/json.html" rel="nofollow">json module</a> to load it as a dict. The downside here is that, to maintain the query's readability, each query would need to be split in elements of a list and joined when loaded in Python. E.g.:</p>
<pre><code>// arguments_dict.json
{
    'Argument One': [
        'select *',
        'from table',
        'where etc'
    ],
    ...
}
</code></pre>
</div>
<span class="comment-copy">Is it important that the queries stay human-readable (i.e. with line breaks)?</span>
<span class="comment-copy">The intention is that they would have to be maintained so yeah, need to maintain human readability.</span>
