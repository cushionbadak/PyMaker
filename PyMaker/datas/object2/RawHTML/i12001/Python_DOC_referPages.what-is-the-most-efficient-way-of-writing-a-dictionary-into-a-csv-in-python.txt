<div class="post-text" itemprop="text">
<p>I am writing to code to generate a csv file by scraping a html table from a website. The function will look at each row of the table <code>&lt;tr&gt;</code> and store the data columns in a dictionary like shown below </p>
<pre><code> def write_data():
    table_date = get_data()   # call function to get data from html table into a dict
    // write table_date to csv

 def get_data():
   data = {}
   for row in tr:
      data['name'] = 'John'
      data['id'] = 12
      return data
</code></pre>
<p>This is a simplified version but essentially I need a way to get the dictionary object <code>data</code> for each table row and write it into a csv, where the keys will be the header row. What is an efficient way to do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow"><code>csv.DictWriter()</code> class</a>; just send it dictionaries for each row:</p>
<pre><code>writer = csv.DictWriter(open_writable_file, fieldnames=['id', 'name'])
writer.writeheader()  # write a row the fieldnames
</code></pre>
<p>and for each dictionary you produce:</p>
<pre><code>writer.writerow(table_data)
</code></pre>
<p>Do make sure you open the writable file with the <code>newline=''</code> option to let the <code>csv</code> module control the line endings:</p>
<pre><code>with open(filename, 'w', newline='') as open_writable_file):
</code></pre>
<p>This advise is omitted from the <code>csv.DictWriter</code> documentation example, for some reason; but the object is a subclass of the <a href="https://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow"><code>csv.writer()</code> class</a> and the advice there applies just as much.</p>
</div>
<span class="comment-copy">Thanks @martinj this helps. Though I have a couple of questions? 1. Is there a way to obtain the filenames from the dictionary keys itself instead of having to write it explicitly? 2. Also, the return statement will just return the first row and stop, but I need to return each row from the get_data() to the write_data() functions. Is there a way to accomplish that?</span>
<span class="comment-copy">You write them explicitly to define their <i>order</i>. Dictionaries have no defined order. You could just use <code>table_data.keys()</code> from a first dictionary, but then you'd get an inconsistent order (it would depend on the random seed Python uses to avoid a hash collision attack).</span>
<span class="comment-copy">I don't know how you are scraping your data; you could use a generator function to produce more rows of data from a function, or just return a list of them, or have the function write to the CSV file directly.</span>
