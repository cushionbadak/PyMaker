<div class="post-text" itemprop="text">
<p>The input url is mixed ascii and multi byte code.
And I can't change this strings.
I would like to download this url, but an error occured <code>ordinal not in range(128)</code>.</p>
<pre><code>input_url = "http://sample.jp/api?v1=aaa&amp;v2=日本語&amp;v3=ccc"

req = urllib.request.Request(input_url)
resp = None
try:
    resp = urllib.request.urlopen(req)
except UnicodeEncodeError as e:
    print(e.reason)  # I had an error `ordinal not in range(128)`
return resp
</code></pre>
<p>First, I tried <code>urllib.parse.quote()</code> but the result is <code>http%3a%2f%2fsample%2ejp%2fapi%3fv1%3daaa%26v2%3d%93%fa%96%7b%8c%ea%26v3%3dccc</code>. I had another error <code>ValueError: unknown url type</code>.
How can I resolve this problem? Or do you have some ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>A combination of urllib, and urlparse should do it for you:</p>
<pre><code>&gt;&gt;&gt; urllib.urlencode(urlparse.parse_qsl(urlparse.urlparse(input_url).query))
'v1=aaa&amp;v2=%E6%97%A5%E6%9C%AC%E8%AA%9E&amp;v3=ccc'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to encode those parameters to UTF-8 bytes and the bytes toURL percent encoding. You can do all this with the <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode" rel="nofollow"><code>urllib.parse</code> module</a>:</p>
<pre><code>from urllib.parse import urlparse, parse_qs, urlencode

parsed = urlparse(input_url)
query = parse_qs(parsed.query)
fixed_url = parsed._replace(query=urlencode(query, doseq=True)).geturl()
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import urlparse, parse_qs, urlencode
&gt;&gt;&gt; input_url = "http://sample.jp/api?v1=aaa&amp;v2=日本語&amp;v3=ccc"
&gt;&gt;&gt; parsed = urlparse(input_url)
&gt;&gt;&gt; query = parse_qs(parsed.query)
&gt;&gt;&gt; parsed._replace(query=urlencode(query, doseq=True)).geturl()
'http://sample.jp/api?v1=aaa&amp;v2=%E6%97%A5%E6%9C%AC%E8%AA%9E&amp;v3=ccc'
&gt;&gt;&gt; import urllib.request
&gt;&gt;&gt; urllib.request.urlopen(_)
&lt;http.client.HTTPResponse object at 0x108f0f7b8&gt;
</code></pre>
</div>
<span class="comment-copy">Thank you. It works fine on Python3. <code>from urllib.parse import urlparse, parse_qsl, urlencode urlencode(parse_qsl(urlparse(input_url).query))</code> Genious! Thank you very much for your help.</span>
<span class="comment-copy"><code>&gt;&gt;&gt; urllib.unquote('v1=%5B%27aaa%27%5D') "v1=['aaa']"</code></span>
<span class="comment-copy">Thank you very much for your advice and Demo. I tried but I got <code>http://sample.jp/api?v2=['日本語']&amp;v3=['ccc']&amp;v1=['aaa']</code>. However I understood that I had to encode to UTF-8 and I could use urlparse, parse_qs, urlencode. Thank you very much for your help.</span>
<span class="comment-copy">@MaikoOhkawa: mea culpa, the doseq flag needed to be set.</span>
<span class="comment-copy">Oh, sorry! I misunderstood. I forgot to set the doseq flag. It works completely fine when I add <code>doseq=True</code>. I see. When doseq is True, I can get sequential strings. I learned. Thank you very much for your advice!</span>
