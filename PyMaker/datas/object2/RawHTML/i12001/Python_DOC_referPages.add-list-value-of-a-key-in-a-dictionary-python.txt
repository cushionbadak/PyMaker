<div class="post-text" itemprop="text">
<p>I have a following dictionary:</p>
<pre><code>centroid = {'A': [1.0, 1.0], 'B': [2.0, 1.0]}
</code></pre>
<p>Using the above dictionary I am creating two different dictionaries and appending them to a list:</p>
<pre><code>for key in centroids:
        clusters_list.append(dict(zip(key, centroids.get(key))))
</code></pre>
<p>However when I check my cluster_list I get the following data:</p>
<pre><code>[{'A': 1.0}, {'B': 2.0}]
</code></pre>
<p>instead of 
<code>[{'A': [1.0, 1.0]}, {'B': [2.0, 1.0]}]</code>.
How can i fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension:</p>
<p>For Python 2:</p>
<pre><code>cluster_list = [{k: v} for k, v in centroid.iteritems()]
# [{'A': [1.0, 1.0]}, {'B': [2.0, 1.0]}]
</code></pre>
<p>For Python 3:</p>
<pre><code>cluster_list = [{k: v} for k, v in centroid.items()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use <a href="https://docs.python.org/3/library/itertools.html#itertools.starmap" rel="nofollow">starmap</a> from <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow">itertools</a> module.</p>
<pre><code>In [1]: from itertools import starmap
In [2]: list(starmap(lambda k,v: {k:v}, centroid.items()))
Out[2]: [{'B': [2.0, 1.0]}, {'A': [1.0, 1.0]}]
</code></pre>
<p>And of course, it doesn't guarantee the order in the resulting list.</p>
</div>
<span class="comment-copy">Why not <code>clusters_list = [centroid]</code>?  If you want a copy: <code>clusters_list = [centroid.copy()]</code></span>
<span class="comment-copy">@zondo That'll make a list of one element, not two dictionaries</span>
<span class="comment-copy">@zondo well, i am trying to create two separate dictionaries inside the list.</span>
<span class="comment-copy">@cricket_007: Ah, I didn't notice.</span>
<span class="comment-copy">awesome. worked the way i wanted.</span>
<span class="comment-copy">@ClintWhaley You're welcome :-)</span>
