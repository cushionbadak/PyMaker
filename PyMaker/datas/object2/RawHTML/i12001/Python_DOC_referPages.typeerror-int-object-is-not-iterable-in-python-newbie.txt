<div class="post-text" itemprop="text">
<p>I am an newbie in python, while running this code it gives me this error "TypeError: 'int' object is not iterable" in line 14. Please let me know my mistake.</p>
<pre><code>x=int(raw_input())
y=int(raw_input())
z=int(raw_input())
n=int(raw_input())
xarr = [ i for i in range(x+1) ]
yarr = [ j for j in range(y+1) ]
zarr = [ k for k in range(z+1) ]
results = []
for i in xarr:
    for j in yarr:
        for k in zarr:
            results.append([i,j,k]) 
for w in range(len(results)+1):
    if (sum(w) != n):
        results=results.append(sum(w))
print results
</code></pre>
<p>if x=1, y=1, z=1 and n=2 then 
results = [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]
and I am checking sum of each index of the list results and if the (sum==n) then do not add that index in results list </p>
<p>So output should be : 
[[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [1, 1, 1]]</p>
</div>
<div class="post-text" itemprop="text">
<p>You are summing an integer:</p>
<pre><code>for w in range(len(results)+1):
    if (sum(w) != n):
</code></pre>
<p><code>w</code> is an integer from the <code>range(len(resultss)+1)</code>. If you wanted to sum the triples you produced in <code>results</code>, just loop directly over the results:</p>
<pre><code>for w in results:
    if (sum(w) != n):
</code></pre>
<p>although it is not clear to me why you are looping over the length <em>plus one</em>. Python indices are 0-based, the last index is at <code>len(results) - 1</code>, not <code>len(results)</code>.</p>
<p>You are making it harder on yourself than is needed. Python has several easier options you are missing here.</p>
<ul>
<li><p><code>list.append()</code> returns <code>None</code>. You are replacing <code>results</code> with <code>None</code> here:</p>
<pre><code>results = results.append(sum(w))
</code></pre>
<p>Remove the <code>results =</code> part altogether.</p>
<p>And are you <strong>certain</strong> you want to combine the <code>(x, y, z)</code> triplets with the <code>sum()</code> results in <em>one list</em>?</p></li>
<li><p>When using a list comprehension that does nothing but loop and copy the elements to a list (<code>[i for i in iterable]</code>), just use <code>list()</code> on the iterable:</p>
<pre><code>xarr = list(range(x + 1))
</code></pre>
<p>Since all you do is iterate, you don't actually have to do this <em>at all</em>. And there is rarely a need to convert <code>range()</code> objects to lists, you can address individual indices directly without doing so. Just use your <code>range()</code> objects directly:</p>
<pre><code>xarr = range(x + 1)
</code></pre></li>
<li><p>You can use the <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow"><code>itertools.product()</code> function</a> to produce your results:</p>
<pre><code>from itertools import product

results = product(range(x + 1), range(y + 1), range(z + 1))
</code></pre>
<p>Again, no need to convert this to a list since you are going to iterate over this.</p></li>
<li><p>If you wanted to add <em>indices</em> of the triplets, use <code>enumerate()</code> to produce those together with the triples so you can test the sum, then add the index to a result list:</p>
<pre><code>indices = []
for i, w in enumerate(results):
    if (sum(w) != n):
        indices.append(i)
</code></pre></li>
</ul>
<p>You can put everything into a one-liner after this, using a list comprehension:</p>
<pre><code>from itertools import product

x = int(raw_input())
y = int(raw_input())
z = int(raw_input())
n = int(raw_input())

indices = [i for i, w in enumerate(product(range(x + 1), range(y + 1), range(z + 1)))
           if sum(w) != n]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to use range here</p>
<pre><code>"range(len(results)+1)"
</code></pre>
<p>As results will be a list of list [[x,y,z], [x,y,z]].</p>
<p>Try this: </p>
<pre><code>for w in results:
    if (sum(w) != n):
        results=results.append(sum(w))
</code></pre>
<p>Or do like this:</p>
<pre><code>for w in range(len(results)+1):
    if (sum(results[w]) != n):
</code></pre>
</div>
<span class="comment-copy">Can you show some code?</span>
<span class="comment-copy">Like the error says, <code>w</code> is an integer, and you can't call <code>sum()</code>  on an integer; what would it sum? It's not clear what you're trying to do, though; you should state what you expect the result to be.</span>
<span class="comment-copy">So what is your expected output? The indices of the triples that sum to <code>n</code>? That'd be <code>[0, 1, 2, 4, 7]</code> for your sample.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/28450126/typeerror-int-object-is-not-iterable-in-python">TypeError: 'int' object is not iterable in python</a></span>
<span class="comment-copy">There are some other major problems in that code. <code>results=results.append()</code> will lead to a <code>AttributeError: NoneType has no attribute 'append'</code>, for example.</span>
