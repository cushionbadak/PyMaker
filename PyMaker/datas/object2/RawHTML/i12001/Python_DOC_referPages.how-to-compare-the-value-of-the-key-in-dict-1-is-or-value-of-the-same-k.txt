<div class="post-text" itemprop="text">
<pre><code>string1 = "aadsfytggfbbhieenoohghgsfdetsuhbdfvd"
sortedstring = "".join(sorted(string1))
string2 = "dfgthhdqqaaiirrthhnnoogsfdet"
sortedstring1 = "".join(sorted(string2))

uniqueString = {}
for i in sortedstring:
    if i in uniqueString:
        uniqueString[i]+= 1
    else:
        uniqueString[i] = 1
print uniqueString

uniqueString1 = {}
for i in sortedstring1:
    if i in uniqueString1:
        uniqueString1[i]+= 1
    else:
        uniqueString1[i] = 1
print uniqueString1
</code></pre>
<p>It is giving me this output:</p>
<pre><code>{'a': 2, 'b': 3, 'e': 3, 'd': 4, 'g': 4, 'f': 4, 'i': 1, 'h': 4, 'o': 2, 'n': 1, 's': 3, 'u': 1, 't': 2, 'v': 1, 'y': 1}

{'a': 2, 'e': 1, 'd': 3, 'g': 2, 'f': 2, 'i': 2, 'h': 4, 'o': 2, 'n': 2, 'q': 2, 's': 1, 'r': 2, 't': 3}
</code></pre>
<p>Here I need if value of 'a' (here it is 2) in <code>uniqueString</code> is equal to value of 'a' (here it is 2) in <code>uniqueString1</code> it should return True else False.</p>
<p>I need to verify if a character in string1 repeated x times is in string1, and if the same character is repeated in string 2 for x times, it should return <code>True</code> else <code>False</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>What you are doing is already implemented in python: <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a>:</p>
<pre><code>from collections import Counter
string1 = "aadsfytggfbbhieenoohghgsfdetsuhbdfvd"
string2 = "dfgthhdqqaaiirrthhnnoogsfdet"
counter1 = Counter(string1)
counter2 = Counter(string2)
print(counter1)
# Counter({'f': 4, 'g': 4, 'd': 4, 'h': 4, 's': 3, 'b': 3, 'e': 3, 'o': 2,
#          't': 2, 'a': 2, 'i': 1, 'u': 1, 'n': 1, 'v': 1, 'y': 1})
print(counter2)
# Counter({'h': 4, 'd': 3, 't': 3, 'i': 2, 'f': 2, 'g': 2, 'o': 2, 'n': 2,
#          'q': 2, 'r': 2, 'a': 2, 's': 1, 'e': 1})
</code></pre>
<p>and to compare if they are equal could be done by:</p>
<pre><code>print(counter1['a'] == counter2['a'])
# True
</code></pre>
<p>Or if you want a dictionary containing all the checks for every element in <code>counter1</code> just use a dict comprehension:</p>
<pre><code>character_equally_often = {i: counter1[i] == counter2[i] for i in counter1}
print(character_equally_often)
# {'i': False, 'u': False, 'f': False, 'g': False, 'o': True,
#  's': False, 'd': False, 'n': False, 't': False, 'h': True,
#  'v': False, 'b': False, 'e': False, 'y': False, 'a': True}
</code></pre>
<p>That just compares all characters contained in the first Counter but could be easily extended to contain both counters:</p>
<pre><code>character_equally_often = {i: counter1[i] == counter2[i] for i in set(string1).union(set(string2))}
print(character_equally_often)
# {'i': False, 'u': False, 'f': False, 'g': False, 'o': True,
#  's': False, 'v': False, 'n': False, 't': False, 'h': True,
#  'b': False, 'e': False, 'q': False, 'r': False, 'y': False,
#  'a': True, 'd': False}
</code></pre>
</div>
<span class="comment-copy">Just match <code>uniqueString['a'] == uniqueString1['a']</code> what is the issue?</span>
