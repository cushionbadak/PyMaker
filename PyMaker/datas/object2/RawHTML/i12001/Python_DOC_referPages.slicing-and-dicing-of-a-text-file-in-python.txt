<div class="post-text" itemprop="text">
<p>I am writing a code where I want to search term "X-DSPAM-Confidence: 0.8475" from mbox.text file. well so far, I can search the string and count the number of times it appears in the file. Now the problem is, I have to add the end digits of that string ( here- 0.8475 ) every time it appears in the text file. I need help because I stuck there and couldn't count the total of the float number appears at the end of that string. </p>
<p>The content of my file looks like this:</p>
<pre><code>X-Content-Type-Message-Body: text/plain; charset=UTF-8
Content-Type: text/plain; charset=UTF-8
X-DSPAM-Result: Innocent
X-DSPAM-Processed: Sat Jan  5 09:14:16 2008
X-DSPAM-Confidence: 0.8475
X-DSPAM-Probability: 0.0000
</code></pre>
<p>My code:</p>
<pre><code>text_file = raw_input ("please enter the path of the file that you want to          open:")
open_file = open ( text_file )
print "Text file has been open " 
count = 0
total = 0.00000
for line in open_file:
    if 'X-DSPAM-Confidence:' in line:
        total =+ float(line[20:])
        count = count + 1
print total/count
print "The number of line with X-DSPAM-Confidence: is:", count
</code></pre>
<p>How can I do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>slicing returns a list not a value and the <em>in-place</em> operator for addition is <code>+=</code> not <code>=+</code>. That being said you should use <code>split</code>.</p>
<pre><code>total = 0.00000
for line in open_file:
    if 'X-DSPAM-Confidence:' in line:
        total += float(line.split()[-1]) # change here.
        count = count + 1
print total/count
</code></pre>
<p>Or even better using <code>sum</code> and <code>len</code>.</p>
<pre><code>with open('test.txt') as f:
    data = [float(line.split()[-1]) for line in f if line.strip().startswith('X-DSPAM-Confidence:')]
    print(sum(data)/len(data))
</code></pre>
<p>Python 3.4 or newer solution using <a href="https://docs.python.org/3/library/statistics.html#statistics.mean" rel="nofollow"><code>mean</code></a> from the <a href="https://docs.python.org/3/library/statistics.html#module-statistics" rel="nofollow"><code>statistics</code></a> module.</p>
<pre><code>from statistics import mean


with open('test.txt') as f:
    data = [float(line.split()[-1]) for line in f if line.strip().startswith('X-DSPAM-Confidence:')]
    print(mean(data))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>print</code> statement, much like a magic 8-Ball, tells all</p>
<pre><code>&gt;&gt;&gt; print repr(line[20:])
' 0.0000\n'
</code></pre>
<p>You simply bit off more than <code>float</code> could choose. Narrow it down a bit</p>
<pre><code>total += float(line[21:-1])
</code></pre>
</div>
<span class="comment-copy">Did something go wrong? Tell us what happened.</span>
<span class="comment-copy">regular expression   "X-DSPAM-Confidence:\s(0\.\d{4})". The parentheses <code>(</code> <code>)</code> mean that the expression (re.findall) will return the numbers, which you can then add.</span>
<span class="comment-copy">Also, put an example of the text string you want to parse in the question. Why are you having us dig through some file in the link, Make it easy for us!</span>
