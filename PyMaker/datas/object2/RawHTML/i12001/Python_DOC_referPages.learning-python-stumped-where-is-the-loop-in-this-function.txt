<div class="post-text" itemprop="text">
<p>I do not understand how the result is 10...
Specifically where in the function does it create the loop that adds 1, 2, 3 and 4?</p>
<p>I am also new to Stackoverflow, so if there is a relative article that I overlooked then please do refer me.</p>
<p>Â </p>
<pre><code>def func(x):
    res=0
    for i in range(x):
        res += i
    return res

print(func(5))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def func(x):             # defines the function name and input parameter
    res=0                # created a variable that is right now set to 0
    for i in range(x):   # this has two parts, for-loop, and a range function both explained below
        res += i         # this adds 1 to the variable 'res' each time the for-loop loops
    return res           # end of the function, passes the variables value back to the caller

print(func(5))           # call the function while passing 5 as an argument
</code></pre>
<p>This is how a for loop works,</p>
<p>it will loop over each element you provide it.</p>
<p>so,</p>
<pre><code>myPets = ['dog', 'cat', 'rabbit']    # create a list of pets
for pet in myPets:
    print pet                  # print each pet
</code></pre>
<p>When this runs, you get</p>
<pre><code>dog
cat
rabbit
</code></pre>
<p>Now the <code>range</code> function, creates a sequence of x numbers ranging from 0 to x-1 so,</p>
<pre><code>range(5)
</code></pre>
<p>is equivalent to:</p>
<pre><code>[0,1,2,3,4] 
</code></pre>
<p>Keep in mind, it starts at 0 and ends at x-1</p>
<p>we could also do</p>
<pre><code>range(3, 6)
</code></pre>
<p>which would be equivalent to:</p>
<pre><code>[3,4,5]
</code></pre>
<p>note that in python2 <code>range</code> actually returns the list where as in python3 <code>range</code> is a separate sequence type. For the purposes of a for loop, they do the same thing.</p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned in comments, you need to know what does the <a href="https://docs.python.org/2/library/functions.html#range" rel="nofollow">range</a> function to understand that loop.</p>
<p><code>range(x)</code> function creates an array which contains from 0 to x-1. So <code>range(5)</code> create the array <code>[0, 1, 2, 3, 4]</code>. So the loop:</p>
<pre><code>for i in range(5)
</code></pre>
<p>it's equivalent to:</p>
<pre><code>for i in [0, 1, 2, 3, 4]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for i in range(x):
</code></pre>
<p>This is the loop you are looking for. It iterates over every element in <code>range(x)</code>.</p>
<p>When you have <code>range(5)</code>, you are telling python to generate 5 integers, which are up to but not including 5. So they are 0, 1, 2, 3, 4.</p>
<p>The <code>+=</code> operator adds right operand to the left operand and assign the result to left operand. </p>
<p>So in your case, with the function and the loop iterating from 0 to 4, you are telling python to generate a function called <code>func(x)</code>; within this function, generate a range of integers, from 0 up to but not including 5; add whatever i is to res (to add 0, 1, 2, 3, 4 sequentially to res). </p>
<p>Finally it becomes 10.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>res += i</code> means <code>res= res+i</code> 
so for loop loops as below
<code>res = 0</code>, initially 
The supplied list for looping is </p>
<pre><code>[0,1,2,3,4]
</code></pre>
<p>so <code>res += i</code> is applied for each element of the list
the variable 'i' is a temporary variable used to loop through the for loop function.
so value of 'i' will be changing every time it loops i.e </p>
<pre><code>i=0
i=1
i=2
i=3
i=4
</code></pre>
<p>the value of res keeps on changing as per the for loop</p>
<pre><code>res= 0+0 =0
res= 0+1 =1
res= 1+2 =3
res= 3+3 =6
res= 6+4 =10
</code></pre>
<p>Final returned value is 10 as for loop ends at 4 value in the list</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/release/1.5.1p1/tut/range.html" rel="nofollow">Python.org</a>:</p>
<blockquote>
<p>If you do need to iterate over a sequence of numbers, the built-in function <code>range()</code> comes in handy. It generates lists containing arithmetic progressions, e.g.:</p>
</blockquote>
<pre><code>&gt;&gt;&gt; range(10)
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre>
<p>Essentially, <code>for i in range(10)</code> is the same as saying <code>for i in [1,2,3,4,5,6,7,8,9,10]</code></p>
<p>The <code>+=</code> operator is the same as saying <code>res = res + value</code></p>
<p>So, in combination with the range statement, this piece of code is looking at the first element of the list, <code>0</code>, adding that to zero(your starting element: <code>res = 0</code>), then adding one to that, then adding two to the result of the previous computation (resulting in <code>3</code>), and so on.</p>
</div>
<span class="comment-copy">Do you know what <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer">range</a> does in Python?</span>
<span class="comment-copy">"Where is the loop in this function?"--&gt; <code>for i in range(x)</code> &lt;-- here it is</span>
<span class="comment-copy">Isn't <code>for</code> telling you that it's a loop already? Which language are you from anyway?</span>
<span class="comment-copy">you are doing the equivalent of  <code>0 + 1 + 2 + 3 + 4 </code>, which results in 10. Not exactly rocket science, but it's good that you are learning :D</span>
<span class="comment-copy"><code>range(5)</code> will generate <code>[0,1,2,3,4]</code> so you are doing <code>0+1+2+3+4</code>,so it will result <code>10</code></span>
<span class="comment-copy">you need quotes around your pets: <code>['dog', 'cat', 'rabbit']</code> and <code>range</code> doesn't "give us" a list in python 3, it is <b>equivalent</b> to the list.</span>
<span class="comment-copy">OP did not specify 2 or 3. So I assumed 2. I'll add a note to the answer regardless. Thanks</span>
<span class="comment-copy">I assumed vs3 because of the call to the <code>print()</code> function.</span>
<span class="comment-copy">I see. I didn't notice that before.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/36002457/learning-python-stumped-where-is-the-loop-in-this-function/36002571?noredirect=1#comment59657503_36002509">you were not the only one.</a> I really like your line-by-line commenting the function as an opening to the answer, although you could add "explained below" to the <code>for</code> line.</span>
<span class="comment-copy">technically speaking <code>range</code> it is its own sequence type in python3 which the OP is probably using based on the call to <code>print()</code> but it does act the same way as a <b>list</b> (other then not supporting item assignment and executing way faster)</span>
<span class="comment-copy">Thank you for this comment! I was having difficulty understanding how it looped until I read this.</span>
<span class="comment-copy">Thankyou Tucker. I am very happy that my comment helped you.</span>
