<div class="post-text" itemprop="text">
<p>As I am developer of <code>Python</code> and works at different different technologies.</p>
<p>So sometimes I really feel that there should be a <code>method</code> which can tell both the <code>KEYWORD ARGUMENT</code> and <code>POSITIONAL ARGUMENTS</code>of any method.</p>
<p>Example: </p>
<pre><code>response(url="http://localhost:8080/core",data={"a":"12"},status=500)
</code></pre>
<p>Response have many <code>keyword/positional arguments</code> like <code>url,data, status</code>.</p>
<p>There can be many more keyword arguments of <strong>response method</strong> which I do not mentioned in above example. So I want to know all total number of keyword argument of a method.</p>
<p>So if anyone knows any method in <strong>Python</strong> which can tell about keyword argument please share it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try <code>inspect</code> module:</p>
<pre><code>In [1]: def a(x, y , z): pass
In [2]: import inspect
In [3]: inspect.getargspec(a)
Out[3]: ArgSpec(args=['x', 'y', 'z'], varargs=None, keywords=None, defaults=None)
</code></pre>
<p>or use decorator:</p>
<pre><code>def a(f):
    def new_f(*args, **kwds):
        print "I know my arguments. It:"
        print "args", args
        print "kwds", kwds
        print "and can handle it here"
        return f(*args, **kwds)
    return new_f
@a
def b(*args, **kwargs):
    pass

b(x=1, y=2)
</code></pre>
</div>
<span class="comment-copy">You can actually specify the value for positional arguments also as keyword arguments. Do you want them as well?</span>
<span class="comment-copy">There is an answer here that covers this sort of thing: <a href="http://stackoverflow.com/questions/196960/can-you-list-the-keyword-arguments-a-python-function-receives" title="can you list the keyword arguments a python function receives">stackoverflow.com/questions/196960/â€¦</a></span>
<span class="comment-copy">i Just want to know total number of  keyword arguments of a mehtod. So that i can use them as per my requirement.</span>
<span class="comment-copy">Hmmm, probably you can explain the actual problem. There might be a better/easy solution to it.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/inspect.html#inspect.signature" rel="nofollow noreferrer">inspect.Signature</a>? It still won't help you if signature is defined as <code>callable(*args, **kwargs)</code>, which is perfectly fine in Python.</span>
<span class="comment-copy">Thanks Michael. But, I already know about inspect module. It is helpful for receiving arguments not for default method arguments of python.</span>
<span class="comment-copy">@BhartiRawat see workaround solution in update.</span>
