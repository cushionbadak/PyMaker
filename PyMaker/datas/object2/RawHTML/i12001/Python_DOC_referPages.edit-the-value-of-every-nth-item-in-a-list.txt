<div class="post-text" itemprop="text">
<p>What's the most pythonic way of performing an arithmetic operation on every nth value in a list? For example, if I start with list1:</p>
<pre><code>list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
</code></pre>
<p>I would like to add 1 to every second item, which would give:</p>
<pre><code>list2 = [1, 3, 3, 5, 5, 7, 7, 9, 9, 11]
</code></pre>
<p>I've tried:</p>
<pre><code>list1[::2]+1
</code></pre>
<p>and also:</p>
<pre><code>for x in list1:
    x=2        
    list2 = list1[::x] + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>slicing</code> with a list comprehension as follows:</p>
<pre><code>In [26]: list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

In [27]: list1[1::2] = [x+1 for x in list1[1::2]]

In [28]: list1
Out[28]: [1, 3, 3, 5, 5, 7, 7, 9, 9, 11]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://www.numpy.org/"><code>numpy</code></a> allows you to use <code>+=</code> operation with slices too:</p>
<pre><code>In [15]: import numpy as np

In [16]: l = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])

In [17]: l[1::2] += 1

In [18]: l
Out[18]: array([ 1,  3,  3,  5,  5,  7,  7,  9,  9, 11])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a> and a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a></p>
<pre><code>&gt;&gt;&gt; list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
&gt;&gt;&gt; [v+1 if i%2!=0 else v for i,v in enumerate(list1)]
[1, 3, 3, 5, 5, 7, 7, 9, 9, 11]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
for i in range(1, len(list1), 2):
    list1[i] +=1
print(list1)
</code></pre>
<p>using i%2 seems not very efficient</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
for i in range(1,len(list1),2):
    list1[i] += 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can create an iterator representing the delta (<code>itertools.cycle([0, 1])</code> and then add its elements to your existing list.</p>
<pre><code>&gt;&gt;&gt; list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
&gt;&gt;&gt; [a + b for a,b in zip(list1, itertools.cycle([0,1]))]
[1, 3, 3, 5, 5, 7, 7, 9, 9, 11]
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a = [i for i in range(1,11)] 
#a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
b = [a[i]+1 if i%2==1 else a[i] for i in range(len(a))] 
#b = [1, 3, 3, 5, 5, 7, 7, 9, 9, 11]
</code></pre>
</div>
<span class="comment-copy">Using the console in Enthought Canopy. Do you use a console?</span>
<span class="comment-copy">I write code in Notepad ++ and will just use the python command line interpreter when I need to try something out. I don't have admin rights on the machine I write most of my code on. What is a difference between a console and the interacrtive interpreter (<code>&gt;&gt;&gt;</code>)</span>
<span class="comment-copy">With something like Canopy you have access to the variables created when running your program</span>
<span class="comment-copy">This looks like it's just the iPython interpreter, rather than being specific to one IDE.</span>
<span class="comment-copy">@Igor, try IPython; that's where the <code>In/Out</code> format comes from.</span>
<span class="comment-copy">That <code>%</code> is not efficient might have been right 20 years ago. On any modern CPU it is as fast as any other basic mathematical operation.</span>
<span class="comment-copy"><code>%2</code> is extremely efficient on integral types.  For divisors which aren't powers of two, not so much.</span>
<span class="comment-copy">I'll stick my neck out and say that I prefer this answer to slicing. Why? Because it's an instance of a general form which is extremely Pythonic and extremely powerful: <code>for i in generator(args):</code></span>
<span class="comment-copy">Seems like an exact duplicate of Divisadero's answer posted 10 minutes earlier.</span>
<span class="comment-copy">Welcome to Stack Overflow! While this code snippet may solve the question, <a href="http://meta.stackexchange.com/questions/114762/explaining-entirely-code-based-answers">including an explanation</a> really helps to improve the quality of your post. Remember that you are answering the question for readers in the future, and those people might not know the reasons for your code suggestion. - <a href="https://stackoverflow.com/review/low-quality-posts/11679194">From review</a></span>
