<div class="post-text" itemprop="text">
<p>I'm trying to convert strings representing binaries such as '000', '00', '010' or '00001' into binaries (000, 00, 010 and 00001)
I've tried the following code but it deletes the zeros on the left.</p>
<pre><code>binaries=['000','00','010,'00000']
resultArray = []
    for binary in binaries:
        resultArray.append(int(binary))
print resultArray
</code></pre>
<p>The results is</p>
<pre><code>[0, 0, 10, 0]
</code></pre>
<p>instead of the desired</p>
<pre><code>[000, 00, 010, 00000]
</code></pre>
<p>I also tried:</p>
<pre><code>binaries=['000','00','010,'00000']
resultArray = []
    for binary in binaries:
        resultArray.append(format(int(binary), '02x'))
print resultArray
</code></pre>
<p>but then I get the following results</p>
<pre><code>['00', '00', '1010', '00']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your desired list is impossible to create.  Integers do not have zeros in front however hard you try.  The only way to have zeros at the beginning of your number is to make it a string, but that is what you already have, so I don't think it is necessary for me to show you how to convert strings to strings.  If the zeroes aren't important, than what you have for conversion does the job.  You could make it simpler with <code>resultArray = list(map(int, binaries))</code>, but you just can't have an integer with a zero at the beginning.</p>
</div>
<div class="post-text" itemprop="text">
<p>It happens because <code>int()</code> has a (optional) second argument for <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow">specifying</a> the base, which is by default 10. So basically, you convert <code>0100</code> (hundred) to <code>100</code> (again, hundred).</p>
<p>Try:</p>
<pre><code>int(binary_string, 2)
</code></pre>
<p>and:</p>
<pre><code>bin(number)
</code></pre>
<p>And what the leading zeros goes, it's a bit difficult to do it in general, as there is no difference between <code>000</code> and <code>0</code>. To put it differently, there is no such thing as:</p>
<pre><code>[000, 00, 010, 00000]
</code></pre>
<p>only:</p>
<pre><code>[0, 0, 2, 0] (list of numbers, read by humans in base 10)
</code></pre>
<p>What you can try to do is:</p>
<pre><code>bin(number)[2:].zfill(known_width)
</code></pre>
</div>
<span class="comment-copy">You are right. I guess the question was a bit stupid, your answer helped me to found the real bug in my code.</span>
<span class="comment-copy"><code>int(binaries[2], 2)</code> -&gt; <code>2</code>, not <code>10</code></span>
<span class="comment-copy">@zondo of cource: <code>int()</code> first converts <code>010</code> at base 2 to <code>2</code>. If you want to see binary representation of <code>2</code>, use <code>bin()</code>, which print <code>10</code>.</span>
<span class="comment-copy">The question shows that he wants <code>10</code>.  <code>int(binary_string, 2)</code> doesn't do it.</span>
<span class="comment-copy">@zondo You realize that the result of <code>int(x, y)</code> has no "digits" in it? It's just a "number". When you want to print it at certain base, for example at base 2, then, use <code>bin()</code>. <code>int(binary_string, 2)</code> does not "print" anything.</span>
<span class="comment-copy">The OP clearly stated that he wants the result to be <code>10</code>.  I know <i>why</i> <code>int(binary_string, 2)</code> doesn't do it, but it still doesn't.  It doesn't meet the qualifications, so why is it even mentioned?</span>
