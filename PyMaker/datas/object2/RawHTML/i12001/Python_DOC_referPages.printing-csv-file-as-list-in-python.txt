<div class="post-text" itemprop="text">
<p>My Code:</p>
<pre><code>import csv

with open('serialnumber.csv', 'r') as f:
    reader = csv.reader(f, delimiter=',')
    your_list = list(reader)

print(your_list)
</code></pre>
<p>.csv file:</p>
<pre><code>hello,bye
</code></pre>
<p>Printed output :</p>
<pre><code>[['hello', 'bye']]
</code></pre>
<p>I need to get list like this : </p>
<pre><code>['hello', 'bye']
</code></pre>
<p>What I'm doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>The reason you are getting <code>[["hello", "bye"]]</code> is because, if the CSV has multiple lines, they will be items inside the first list.</p>
<p>You can get what you want by accessing the first item of <code>your_list</code> like this:</p>
<pre><code>&gt;&gt;&gt; print(your_list[0])
["hello", "bye"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is no problem with your code. It is just that you are making a list out of all rows of the csv. That is why you are getting a list of lists. To get each row as a list you can simply iterate over the reader and you will get a list for each row. This technique is particularly useful when you have a large file.</p>
<pre><code>import csv

with open('serialnumber.csv', 'r') as f:
    reader = csv.reader(f, delimiter=',')
    for r in reader:
      print r
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can see a two-dimensional array of CSV file
<code>
[print(r) for r in your_list]
</code></p>
<pre><code>    import csv

with open('serialnumber.csv', 'r') as f:
    reader = csv.reader(f, delimiter=',')
    your_list = list(reader)

#print(your_list)
[print(r) for r in your_list]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to flatten the whole <strong>csv reader</strong> i would use <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow"><strong><code>list comprehenstion</code></strong></a></p>
<pre><code>import csv

with open('serialnumber.csv', 'r') as f:
    reader = csv.reader(f, delimiter=',')
    _list = [word for _iter in reader for word in _iter]
print(_list)
</code></pre>
<p>You could also use <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow"><strong><code>sum</code></strong></a>:</p>
<pre><code>_list = sum(reader, [])
</code></pre>
<p>Example one row <strong>csv</strong>:</p>
<pre><code>hello,bye
</code></pre>
<p>Output:</p>
<pre><code>['hello', 'bye']
</code></pre>
<p>Example multi-row <strong>csv</strong>:</p>
<pre><code>hello,bye,bye
bye,bye,hello
bye,hello,bye
</code></pre>
<p>Output:</p>
<pre><code>['hello', 'bye', 'bye', 'bye', 'bye', 'hello', 'bye', 'hello', 'bye']
</code></pre>
<p>If your csv file has just one row you could use plain <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow"><strong><code>print</code></strong></a>:</p>
<pre><code>import csv

with open('serialnumber.csv', 'r') as f:
    reader = csv.reader(f, delimiter=',')
    print(*reader)
</code></pre>
</div>
<span class="comment-copy">Try <code>print(reader)</code></span>
<span class="comment-copy">output : <code>&lt;_csv.reader object at 0x00482E30&gt;</code></span>
<span class="comment-copy">What happens if you change the name of the variable you're storing the output of <code>csv.reader()</code>?</span>
<span class="comment-copy">do you want to print the whole csv file as a list or just row by row?</span>
<span class="comment-copy">It works. I was trying to solve this one hour before i ask question here. Thanks :)</span>
<span class="comment-copy">It's working too. Thanks ;)</span>
<span class="comment-copy">You are welcome.</span>
