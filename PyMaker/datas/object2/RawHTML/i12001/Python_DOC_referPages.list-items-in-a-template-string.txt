<div class="post-text" itemprop="text">
<p>I'm sure I must be missing something, is there a way of listing all the templates in an instance of <a href="https://docs.python.org/3/library/string.html#string.Template" rel="nofollow"><code>string.Template</code></a>?  Or do I really have to revert to regex to find them?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the regex that the template uses and extract the names:</p>
<pre><code>&gt;&gt;&gt; s = Template('$who likes $what $$ ${another}')
&gt;&gt;&gt; [m.group('named') or m.group('braced')
    for m in s.pattern.finditer(s.template)
    if m.group('named') or m.group('braced')]
['who', 'what', 'another']
</code></pre>
<p>The documentation says the regex has 4 capturing groups:</p>
<ul>
<li>escaped – This group matches the escape sequence, e.g. $$, in the
default pattern.</li>
<li>named – This group matches the unbraced placeholder
name; it should not include the delimiter in capturing group.</li>
<li>braced – This group matches the brace enclosed placeholder name; it should
not include either the delimiter or braces in the capturing group.</li>
<li>invalid – This group matches any other delimiter pattern (usually a
single delimiter), and it should appear last in the regular
expression.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Here's a completely different way to do it (triggered by Lutz Horn's answer but a lot simpler):</p>
<pre><code>from string import Template
from collections import defaultdict

d = defaultdict(str)
s = Template('$who likes $what $$ ${another}')
s.substitute(d)
print(d.keys())
</code></pre>
<p>Gives the expected output.</p>
</div>
<span class="comment-copy">Nice, was about to comment that it didn't catch the braced, but the update does now.</span>
