<div class="post-text" itemprop="text">
<p>I have a file where the lines look like this:</p>
<p>tom, 10, 20, 0, 100, 0, 100, 70, 80, 90, 0, 80, 85</p>
<p>I want to take the number 10 through the second 100, and use the greatest four values. Then take the average.</p>
<p>I have:</p>
<pre><code>        for i in range((my_dictionary[1:6])) :
              for item in inlist:
                  if item &gt; largest:
                      largest = item
                  elif largest &gt; item &gt; second_largest:
                      second_largest = item
                  elif largest &gt; item &gt; second_largest &gt; third_largest:
                      third_largest = item
                  elif largest &gt; item &gt; second_largest &gt; third_largest &gt; fourth_largest:
                      fourth_largest = item
        q = (sum(inlist))/4
</code></pre>
<p>This does not work. I am concerned that each line is not considered a list. The error appears on first line as type is unhashable.</p>
<p>Edit: I want to do this without modules. Also, I am creating a list for the line with : name, q1, q2, q3, q4, q5, q6, a1, a2, a3, a4, midterm, final = line.strip().split(',')</p>
</div>
<div class="post-text" itemprop="text">
<p>No need for complicated conditionals, just use <a href="https://docs.python.org/3/library/heapq.html#heapq.nlargest" rel="nofollow"><code>heapq.nlargest</code></a> or since it's a small number of items anyway, sort the lot of 'em and slice off the largest:</p>
<p>Your code contains insufficient context to figure out where <code>my_dictionary</code> came from, but the general idea would be to slice off the values you care about to make a <code>list</code> to sort, then average those:</p>
<pre><code>import heapq

top4 = sorted(myvalues[1:7], reverse=True)[:4]
# or heapq
top4 = heapq.nlargest(4, myvalues[1:7])
</code></pre>
<p>then average them:</p>
<pre><code>avg = sum(top4) / 4.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Edited: Here's a complete example, in Python 3. Note I added <code>reversed=True</code> on <code>sorted()</code> call. That was a bug earlier.</p>
<p>Also, please note that there are no "modules" here. These are all functions/keywords/capabilities built in to the base python. No imports required!</p>
<pre><code>input = 'tom, 10, 20, 0, 100, 0, 100, 70, 80, 90, 0, 80, 85'
my_dictionary = input.split(', ')
username = my_dictionary.pop(0)
my_dictionary = list(map(int, my_dictionary))


greatest_4values = sorted(my_dictionary[0:6], reverse=True)[0:4]
average = sum(greatest_4values)/4.0


print("Average = ", average)
print("Greatest 4 values = ", greatest_4values)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I assume we're starting like this:</p>
<pre><code>my_dictionary = 'tom', 10, 20, 0, 100, 0, 100, 70, 80, 90, 0, 80, 85
</code></pre>
<p>And we only want the numbers from 10 to the second 100, so...</p>
<pre><code>aList = my_dictionary[1:7]
</code></pre>
<p>Python's built-in <code>sorted</code> will order the numbers from smallest to largest,</p>
<pre><code>aList = sorted(aList)
</code></pre>
<p>Since we want the four <strong>largest</strong> numbers in a list that is ordered from smallest to largest, we want the <strong>last</strong> four items in the list.</p>
<pre><code>greatest = aList[-4:]
</code></pre>
<p>Finally, to get the average, we can simply <code>sum</code> the values in the greatest list and divide by 4 (since we are averaging a total of 4 values).</p>
<pre><code>average = float(sum(greatest) / 4)
</code></pre>
<p><code>float</code> will just let the answer have decimal places. Without <code>float</code>, the average is 57. With <code>float</code>, the average is 57.5</p>
</div>
<span class="comment-copy">Please copy the entire output here, verbatim. Never try to paraphrase error messages, as you'll generally omit some critical information, and it makes the question is less googleable.</span>
<span class="comment-copy">You also need to add the code that gets lines; the error is clearly a problem with <code>my_dictionary[1:6]</code> (you can't slice a <code>dict</code>), so I'm thinking you created some more complicated data structure than just a split line. Also, <code>range(my_dictionary[1:6])</code> makes no sense at all; <code>range</code> generates sequential integers, and you passed it a slice instead of an end point. You probably just want to iterate the slice directly, no use of <code>range</code> at all.</span>
<span class="comment-copy">I am looking to solve this without using modules. Any ideas? The other response does not work.</span>
<span class="comment-copy"><code>sorted</code> requires no special modules. <code>heapq.nlargest</code> is just an optimization for when the number of items to pick is small, and the set to pick from is large; in your case, <code>sorted</code> works fine, but it sounds like you forgot to convert the input values from <code>str</code> to <code>int</code>.</span>
<span class="comment-copy">This leads to an error that I cannot perform an operation on the values in the range. unsupported operand type(s) for +: 'int' and 'str' Full message is: Error in evaluating function: TypeError at line 16 unsupported operand type(s) for +: 'int' and 'str'</span>
<span class="comment-copy">That probably means you still have a list full of strings, not numbers. See the last line in the first paragraph of my sample code, where I <code>map(int,</code> the list to convert from strings (like <code>'100'</code>) to numbers (like <code>100</code>). (Note the missing quotes.)</span>
