<div class="post-text" itemprop="text">
<p>I just started looking into the Python and need help on this.</p>
<p>In the shell I did</p>
<pre><code>&gt;&gt;&gt; print = 1
</code></pre>
<p>Now when I tried to print anything like</p>
<pre><code>&gt;&gt;&gt; print ("hello")
</code></pre>
<p>I am getting <code>"TypeError: 'int' object is not callable</code>, obviously because print in now a int</p>
<p>I am able to figure out that if I restart the shell, print starts working fine again.</p>
<p>What I want to know that how can I reset the <code>print</code> to its original state i.e. print to console without restarting the shell?</p>
</div>
<div class="post-text" itemprop="text">
<p>You created a global that <em>masks</em> the built-in name. Use <code>del</code> to remove the new global; Python will then find the built-in again:</p>
<pre><code>del print
</code></pre>
<p>Python looks for <code>print</code> through the current scope (in functions that includes locals and any parent scopes), then globals, then the <a href="https://docs.python.org/3/library/builtins.html" rel="noreferrer">built-in namespace</a>, and it is in the latter that the <code>print()</code> function lives.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have "masked" the builtin <code>print</code> function by creating a variable with the same name. You could do one of three things:</p>
<ol>
<li>Quit python and restart it. This is guaranteed to work. :-) </li>
<li>Delete the variable you created, as suggested by @MartijnPieters.</li>
<li>Change the new variable to refer to the <code>builtins.print</code> function.</li>
</ol>
<p>For the last option, you'll need to <code>import builtins</code>.</p>
<pre><code>&gt;&gt;&gt; print = 1
&gt;&gt;&gt; print("Hello")
&gt;&gt;&gt; Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: 'int' object is not callable

&gt;&gt;&gt; import builtins
&gt;&gt;&gt; dir(builtins)
&gt;&gt;&gt; ['ArithmeticError', 'AssertionError', 'AttributeError', 
...
'print',
...
'tuple', 'type', 'vars', 'zip']

&gt;&gt;&gt; print=builtins.print
&gt;&gt;&gt; print("Hello")
&gt;&gt;&gt; Hello
</code></pre>
</div>
<span class="comment-copy">Thank you @MartijnPieters</span>
<span class="comment-copy">The last option still leaves a global in place, so <code>print</code> still masks the built-in <code>print</code>. They just happen to be bound to the same object.</span>
<span class="comment-copy">Yeah, but it's a great chance to teach people about <code>builtins</code>!</span>
<span class="comment-copy">Thank you, I will look for <code>builtins</code> as I move forward ......</span>
