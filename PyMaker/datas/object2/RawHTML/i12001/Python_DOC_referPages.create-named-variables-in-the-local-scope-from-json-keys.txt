<div class="post-text" itemprop="text">
<p>Is there a way I can create named variables in the local scope from a json file?</p>
<p><a href="http://www.jsoneditoronline.org/?id=d29e505b4e5937ecefb7027a0d692f51" rel="nofollow">document json</a></p>
<p>This is my json file, I would like to create variables in the local scope named as the path of my json dictionary</p>
<p>This is how I manually create them, I would like to do it automatically for all the json file. Is it possible?</p>
<pre><code>class board(object):
    def __init__(self, json, image):
        self.json = json
        self.image = image  

    def extract_json(self, *args):
        with open(self.json) as data_file:
            data = json.load(data_file)
            jsonpath_expr = parse(".".join(args))
            return jsonpath_expr.find(data)[0].value    

MyAgonism = board('document.json', './tabellone.jpg')

boxes_time_minutes_coord = MyAgonism.extract_json("boxes", "time_minutes", "coord")
boxes_time_seconds_coord = MyAgonism.extract_json("boxes", "time_seconds", "coord")
boxes_score_home_coord = MyAgonism.extract_json("boxes", "score_home", "coord")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you're making this much more complicated than it needs to be.</p>
<pre><code>with open('document.json') as f:
    d = json.load(f)

time_minutes_coords = d['boxes']['time_minutes']['coord']
time_seconds_coords = d['boxes']['time_seconds']['coord']
score_home_coords = d['boxes']['score_home']['coord']
</code></pre>
<p>If you actually want to create named variables in the local scope from the keys in your json file, you can use the <code>locals()</code> dictionary (but this is a terrible idea, it's far better just to reference them from the json dictionary).</p>
<pre><code># Flatten the dictionary keys.
# This turns ['boxes']['time_minutes']['coord'] 
# into "boxes_time_minutes_coord"
def flatten_dict(d, k_pre=None, delim='_', fd=None):
    if fd is None:
        fd = {}
    for k, v in d.iteritems():
        if k_pre is not None:
            k = '{0}{1}{2}'.format(k_pre, delim, k)
        if isinstance(v, dict):
            flatten_dict(v, k, delim, fd)
        else:
            fd[k] = v
    return fd

fd = flatten_dict(d)
locals().update(fd)

print boxes_time_minutes_coord
</code></pre>
<p>Lots of caveats, like the possibility of overwriting some other variable in your local scope, or the possibility that two dictionary keys could be identical after flattening unless you choose a delimiter that doesn't appear in any of the dictionary keys. Or that this won't work if your keys contain invalid characters for variable names (like spaces for example).</p>
</div>
<span class="comment-copy">Do you mean multiple, single-value variables or one dictionary variable?</span>
<span class="comment-copy">I'm not totally clear what you want, but have you tried simply loading the whole JSON string into Python data structures with <a href="https://docs.python.org/3/library/json.html#json.load" rel="nofollow noreferrer"><code>json.load</code></a> or <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow noreferrer"><code>json.loads</code></a>?</span>
<span class="comment-copy">It's not very clear what you're asking, can you be more specific? If you have tried writing some code, it would help if you shared it.</span>
<span class="comment-copy">How are you doing it manually ?</span>
<span class="comment-copy">This sounds a lot like 'kan I haz kode pls', please post what you have tried. For more guidelines please see <a href="http://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a></span>
<span class="comment-copy">You are right, but I still have to load them "manually". I would like to create a function that automatically store all the values (coords, foreground, etc.) and assign them to a variable. Is it possible?</span>
<span class="comment-copy">What do you mean by "manually"? In my example, you only have to read and parse the json once.  In your example, you're reading and parsing the json <i>every</i> time the function is called.</span>
<span class="comment-copy">I mean you have to "load" the value in these three variables. But my json file is quite long with a tons of value and I don't want to write 100 lines of code to "load" the values in my variables. I would like to create a function that actually load all the values in variables at the same time.</span>
<span class="comment-copy">@Eldar88 Updated the answer, but I think you should really not do what you are trying to do.</span>
<span class="comment-copy">It gives me and error: Too many value to unpack</span>
