<div class="post-text" itemprop="text">
<p>I am trying to add option of options in <code>argparse</code>.
Currently I have:</p>
<pre><code>group = parser.add_mutually_exclusive_group()
group.add_argument("--md", help="Create xyz file for each ionic step for"
                    " visualization", action='store_true')
group.add_argument("--force", help="See which atom has maximum force",
                    action='store_true')
group.add_argument("--opt", help="grep string from file",
                    nargs=2, metavar=("str", "file"))
parser.add_argument("--xsf", help="Create xsf file for md(default is xyz)"
                    " visualization", action='store_true')
parser.add_argument("-N", help="Showing first N line",
                    metavar='integer', type=int)
parser.add_argument("-n", help="Showing last n line",
                    metavar='integer', type=int)
args = parser.parse_args()
</code></pre>
<p>which gives:</p>
<pre><code>./foo.py --h
usage: foo.py [-h]
               [--md | --force | --opt str file]
               [--xsf] [-N integer] [-n integer]
</code></pre>
<p>But I want <code>--xsf</code> as a suboption for <code>--md</code>, <code>-N,-n</code> for <code>--opt</code>; e.g.</p>
<pre><code>./foo.py --h
    usage: foo.py [-h]
                   [--md [--xsf]| --force | --opt str file [-N integer] [-n integer]]
</code></pre>
<p>But I dont know how to achieve that. May be I am missing something, but there is no option like that in <a href="https://docs.python.org/3/library/argparse.html#module-argparse" rel="nofollow">argparse doc</a></p>
<p>Is there any other way of getting that?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>mutually_exclusive_group</code> mechanism is quite simple, and does not work with any kind of nesting, or subgrouping.  </p>
<p>There is a Python bug/issue requesting a more comprehensive grouping mechanism, but the proposed patch is rather complicated.  The problem isn't just with testing, it's with defining the groups in a user friendly way, and with generating the <code>usage</code> line.  It's nice that you included a desired usage, but that format is well beyond the capabilities of the current help formatter.</p>
<p>You might look into recasting your problem as a subparser one.  subparsers are mutually exclusive (you can only give one command name), and you could specify <code>--xsf</code> as an argument for <code>md</code>, and <code>-N</code> as argument for <code>--opt</code>.  But subparsers has its own help issues.</p>
<p>Another route is to write your own <code>usage</code>, and do your own testing of arguments after parsing.  With a suitable choice of defaults you can usually tell whether an argument has been provided or not (the user can't specify <code>None</code>) or you can ignore unnecessary ones.</p>
</div>
<span class="comment-copy">If I add xsf to group, it can't be used with md, they will be mutually exclusive to one another.</span>
