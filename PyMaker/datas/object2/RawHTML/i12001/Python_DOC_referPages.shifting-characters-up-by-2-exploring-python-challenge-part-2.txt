<div class="post-text" itemprop="text">
<p>I understand how this code works in python 2</p>
<pre><code>import string

text = "g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp.\
        bmgle gr gl zw fylb gq glcddgagclr ylb rfyr'q ufw rfgq rcvr gq qm\
        jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb. lmu ynnjw ml rfc spj`."

table = string.maketrans(string.ascii_lowercase,string.ascii_lowercase[2:]+string.ascii_lowercase[:2])
print text.translate(table)
</code></pre>
<p>Now I understand on python 3 that string was changed to <code>str</code>, <code>bytes</code>, <code>bytesarray</code>
And I have solved it but with a way that seems a lot longer that simple <code>maketrans</code> without references.</p>
<p>How would that code be translated to python 3. trying to keep the <code>maketrans</code> method or not putting your a pre rendered table like 'abcde' to 'cdefg'.</p>
<p>But how would this be achieved in python 3 without making one yourself.
or the simplest way of just shifting a character up by 2.(or if re/bitwise can do it)</p>
<p>I am really having fun with this, I'll take any input you can give and I will clarify if I was unclear.</p>
<p>My Python 3 code:</p>
<pre><code>def decypher(cypher):
    dec=""
    for letter in cypher:
        if ord(letter)&gt;=97 and ord(letter)&lt;=122:
            dec+=chr((ord(letter)+2-97)%26+97)
        else:
            dec+=letter
    return dec

text="g fmnc wms bgblr rpylqjyrc gr zw fylb. rfyrq ufyr amknsrcpq ypc dmp. bmgle gr gl zw fylb gq glcddgagclr ylb rfyr'q ufw rfgq rcvr gq qm jmle. sqgle qrpgle.kyicrpylq() gq pcamkkclbcb.  lmu ynnjw ml rfc spj."

print(decypher(text))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It seems that in Python 3 the <a href="https://docs.python.org/3/library/stdtypes.html?highlight=translate#bytes.maketrans" rel="nofollow"><code>maketrans()</code></a> got moved to the <code>str</code> object and the <code>translate()</code> got removed, but since <a href="https://docs.python.org/3/library/stdtypes.html?highlight=translate#str.translate" rel="nofollow"><code>str.translate()</code></a> already does the same we don't need it.</p>
<p>Your Python 2 code will work by simply changing the <code>string.maketrans</code> method call:</p>
<pre><code>table = str.maketrans(
    string.ascii_lowercase,
    string.ascii_lowercase[2:] + string.ascii_lowercase[:2])

text = 'foo'
print(text.translate(table))
</code></pre>
<p>This is one of those somewhat arbitrary changes that makes migrating to Python 3 a little bit more difficult than it needs to be :-/</p>
<p>If you want your code to be compatible with both Python 2 and 3, you could use:</p>
<pre><code>import string

maketrans = getattr(str, 'maketrans', getattr(string, 'maketrans', None))
table = maketrans(
    string.ascii_lowercase,
    string.ascii_lowercase[2:] + string.ascii_lowercase[:2])

print(text.translate(table))
</code></pre>
<hr/>
<p>P.S.</p>
<p>You can do the same <em>without</em> using <code>translate</code> and <code>maketrans</code> in two lines (or even one very long line, but that's ugly). I won't show you the code, but I encourage you to try and figure it out as a learning exercise! Hint: I used a dictionary. If you can't figure it out drop me a line and I'll give you another hint ;-)</p>
</div>
<span class="comment-copy">"I have solved it but with a way that seems alot longer" -&gt; You should also post this, so that specific errors or problems can be pointed out.</span>
<span class="comment-copy">You should <a href="https://stackoverflow.com/posts/35890433/edit">edit</a> the question and put it there. Make sure you format it as code by selecting it and pressing the button in the toolbar or pressing Control+K.</span>
<span class="comment-copy">Sorry this comment things go out of control for me x) thanks.But you see I had to make a whole for loop just to do the same as what the simple maketrans did.</span>
<span class="comment-copy">Yes I was trying to avoid the number some answer and use the attractive wordy method. Thanks for taking your time this is what i was looking for. I looked at the answer for the challenge and found a very number some answer  <code>code</code> for x in text:     print(chr(ord(x) if ord(x)+2 &lt; 97 else ord(x)+2 if ord(x)+2 &lt; 122 else ord(x)-24 ),end="")</span>
