<div class="post-text" itemprop="text">
<p>I have a string of numbers that I would like to convert to a nested list. So far, I have</p>
<pre><code> with open('lifedata.txt') as f:
    table_data = [ line.split() for line in f]
print(table_data)
</code></pre>
<p>If the text document consists of numbers ordered like this,</p>
<p><code>0000000
 0010000
 0001000
 0111000
 0000000
 0000000</code></p>
<p>The code I have so far only creates a nested list that looks like, <code>[['0000000'], ['0010000'], ['0001000'], ['0111000'], ['0000000'], ['0000000']]</code></p>
<p>But instead, I wanted it took be <code>[[0,0,0,0,0,0,0],[],[]]</code> and so on. I also do not know how to convert the string into an integer. I'm just very confused on how I should manipulate the original text document to do what I want it to.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is what is happening:</p>
<pre><code>&gt;&gt;&gt; "0000000".split()
['0000000']
</code></pre>
<p>Instead, call <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow"><code>int()</code></a> on every character in each string:</p>
<pre><code>[[int(c) for c in line.strip()] for line in f] 
</code></pre>
<p>Or, via <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow"><code>map()</code></a>:</p>
<pre><code>[list(map(int, line.strip())) for line in f]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use this ,it will return a list of containing data from each line of txt.</p>
<pre><code>open('lifedata.txt').readlines()
</code></pre>
</div>
<span class="comment-copy">If I try to call every character, it gives me <code>invalid literal for int() with base 10: '\n'</code></span>
<span class="comment-copy">@George okay, updated. Check it out.</span>
<span class="comment-copy">Oh wow that worked! So was line.strip() necessary to exclude the empty space?</span>
<span class="comment-copy">@George in this case, it helps to strip the newline at the end.</span>
