<div class="post-text" itemprop="text">
<p>Ok. I've been playing dungeons &amp; dragons the pen and paper rpg with my friends. You have to have a character sheet and an inventory sheet buts it gets really messy and everything is erased and rewritten a dozen times. So I decided to make a python program to replace my papers. so I started write EXTREMELY basic python codes like</p>
<pre><code>print ""
print "What would you like to know?"
option = raw_input("--&gt; ")
if option == 'name':
    name()
</code></pre>
<p>and then theres is about 60 loops of stuff u can go to including money.</p>
<pre><code>elif option == 'money':
    money()
elif option == 'add gold':
    addgold()

global gold
gold = 10

def money():
    print ""
    print "Gold: ",gold,""

def addgold():
    print ""
    global gold
    addg = raw_input("How much gold would you like to add: ")
    if addg &gt;= 0:
        gold = gold + (int(addg))
    print ""
    print "Your total gold is now: ",gold,""
</code></pre>
<p>I realize now that I have made a huge mistake because there are about 2000 lines of round-about overly complicated code that have taken me a long time to write, and I would hate to waste it all. However I know there are better ways to do this. because of the way I've done this I'm having a hard time implementing suggestions from other questions I have asked. So if I just wanted to do a system where the value of gold is stored in a separate file (maybe using one of the methods described in my previous question) and I would be able to change the value of the variable using addgold() what should do. Once again I apologize for my questions. I should have done a lot more studying and learning before getting myself waist deep in code. Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>I don't know what are all the possible stats of "D&amp;D" but as other user suggested you should probably consider using objects, namely class. The very basic implementation of this could be something like this:</p>
<pre><code>    class Items():
         def __init__(self,items=[]):
              self.items = items

         def add(self,item):
              self.items.append(item)

         def remove(self,item):
              self.items.remove(item)

         def showItems(self):
              print(self.items)

    class Wallet():
         def __init__(self,gold=0):
              self.gold = gold

         def add(self,number):
              self.gold = self.gold + number

         def remove(self,number):
             if self.gold-number&lt;0:
                   print("Sweat runs down your cheek as you notice you are short of", self.gold-number, "coins.")
                   return False
             else:
                  self.gold = self.gold - number
                  print("You spend ", number, "coins.")
                  return True

    class Character():
         # You'll define you character with name,gender and species
         # (it's an example obviously, you can put anything) 
         def __init__(self,name,gender,species):
              # Storing the input arguments inside class
              self.name    = name
              self.gender  = gender
              self.species = species

              self.events = []
              self.wallet  = Wallet()
              self.items   = Items()

         def buy(self,item,cost):
             if self.wallet.remove(cost):
                   self.items.add(item)

         def sell(self,item,cost):
             self.items.remove(item)
             self.wallet.add(cost)
</code></pre>
<p>From this point you can manage your character with simple instructions:</p>
<pre><code>    GwarTheDwarf = Character('Gwar','Female','Dwarf')
    GwarTheDwarf.buy('Great Axe',154)
</code></pre>
<p>, which would result in:</p>
<pre><code>    Sweat runs down your cheek as you notice you are short of -154 coins.
</code></pre>
<p>Learning to use Objects is the perfect way to achieve what you are trying to do. Also for your other problem (saving stuff to file) the best way to start if you chose to save classes (your character for instance) by using <a href="https://docs.python.org/2/library/pickle.html" rel="nofollow">pickle</a>. But take one problem at a time.</p>
</div>
<span class="comment-copy">If your code is working, StackOverflow isn't the right place for your question.  If you are asking for improvements on your code, you might find <a href="https://codereview.stackexchange.com">Code Review</a> more helpful.</span>
<span class="comment-copy">Was your previous question regarding a text file containing <b>gold = 10</b> and how you wanted <code>money = gold</code>?</span>
<span class="comment-copy">So, what exactly is your question?</span>
<span class="comment-copy">For storing variables in text files, read up on <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">Python File I/O</a></span>
<span class="comment-copy">@Elkman123 if your code <i>doesn't</i> work (at least what you posted), consider posting one of the parts that <b>does</b> work to Code Review. Just keep in mind that broken/malfunctioning code is off-topic there, but on the other hand if you cannot narrow it down to a more specific problem, Stack Overflow might not be able to help that great either...</span>
