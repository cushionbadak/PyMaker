<div class="post-text" itemprop="text">
<p>I have a dictionary. Example,</p>
<pre><code>dict = { "wd":"well done", "lol":"laugh out loud"}
</code></pre>
<p>Problem is that if there is something like <code>"lol?"</code> in the text, then it is not expanded at all. Below is the code, I am using to replace the dictionary keys:</p>
<pre><code>def contractions(text, contractions_dict=dict):
    for word in text.split():
        if word.lower() in contractions_dict:
            text = text.replace(word, contractions_dict[word.lower()])
    return text
</code></pre>
<p>Problem is due to space missing in between <code>'lol'</code> and <code>'?'</code>. How do I resolve this?</p>
<p>After, updated code as suggested is as follows: </p>
<pre><code> dict1 = {
          "wd":"well done",
          "lol":"laugh out loud"
         }

 def contractions(text, contractions_dict=dict1):
     for key in contractions_dict:
         text = text.replace(key, contractions_dict[key])
     return text

 text = "lol?"
 text=contractions(text)
 print(text)
</code></pre>
<p>Working for the above example, but in long text, this code is making undesired replacements.</p>
<p>Example,lwhyear olduckwhyeahhnt lookingiaandteam effortato representhinking of whyear oldwhyear oldugh lwhyear olduckwhyeahhahandal seato </p>
<p>This is part of the result that I am getting on my actual data. Need help. </p>
</div>
<div class="post-text" itemprop="text">
<p>Your mistake comes from the way you split your text. The default case for <code>str.split()</code> in python splits on white space, which means that "wtf?" is not split.</p>
<p>As you can see in the <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">documentation</a> str.split() can receive a list of separating characters to be used.</p>
<p>You could solve this specific problem by using:</p>
<p><code>text.split(sep=[' ', '?'])</code></p>
<p>But most probably, you want many more characters to be used as separation points.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is a better solution if you look visaversa, for each key, replace it in the whole text with the value of that key:</p>
<pre><code>def contractions(text, contractions_dict=dict):
    for k, v in contractions_dict.items():
        text = text.replace(k,v)
    return text
</code></pre>
<p>also, note that:</p>
<blockquote>
<p>DO NOT use <code>dict</code> as a variable name, this name is a built-in in python and you will override its functionality.</p>
</blockquote>
<p>The sample input and output:</p>
<pre><code>In [42]: contractions('this is wd and lol?')
Out[42]: 'this is well done and laugh out loud?'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of checking to see the text is part of the dictionary, iterate through the dictionary and check if the key is in the text. This is not recommended though as it contains nested loops.</p>
<pre><code>def contractions(text, contractions_dict=dict):
    for word in text.split():
        for key in contradictions_dict:
            if key in word:
                text = text.replace(word, contractions_dict[key])
    return text
</code></pre>
<p>Instead, you might want to just replace every occurrence of every key autistically using the replace method. Replace will automatically find and replace the word. No need to iterate the text yourself.</p>
<pre><code>def contractions(text, contractions_dict=dict):
    for key in contradictions_dict:
        text = text.replace(key, contractions_dict[key])
    return text
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As already noted, <code>.split()</code> splits only at white spaces, if you wish to extract words and numbers from string, you might use <code>re</code> module for that task following way:</p>
<pre><code>import re
a = 'This, is. (example) for :testing: 123!'
words = re.findall(r'\w+',a)
print(words) #['This', 'is', 'example', 'for', 'testing', '123']
</code></pre>
<p>As you can seen it discards spaces, dots, commas, colons and so on, while keeping sequences consisting of: letters, digits (and underscores <code>_</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>You can solve your problem by using text tokenizer. NLTK library provide many of them such as the <a href="https://www.nltk.org/api/nltk.tokenize.html#nltk.tokenize.regexp.WordPunctTokenizer" rel="nofollow noreferrer">WordPunctTokenizer</a>, you can use it as follow: </p>
<pre><code>from nltk.tokenize import WordPunctTokenizer
text = "Good muffins cost $3.88\nin New York.  Please buy me\ntwo of them.\n\nThanks."
print(WordPunctTokenizer().tokenize(text))
</code></pre>
<p>this will output:</p>
<pre><code>    ['Good', 'muffins', 'cost', '$', '3', '.', '88', 'in', 'New', 'York',
'.', 'Please', 'buy', 'me', 'two', 'of', 'them', '.', 'Thanks', '.']
</code></pre>
<p>As you can notice It can tokenize very complex sentences.</p>
</div>
<span class="comment-copy">Can you provide sample input and output ?</span>
<span class="comment-copy">N.B. I've changed wtf to lol. I hope y'all understand.</span>
<span class="comment-copy">Thanks. Yes, there are many more characters.</span>
<span class="comment-copy">I am getting error: Traceback (most recent call last):   File "c://Python/testdictionary.py", line 13, in &lt;module&gt;     text=contractions(text)   File "C:/Python/testdictionary.py", line 8, in contractions     for k, v in contractions_dict: ValueError: too many values to unpack (expected 2)</span>
<span class="comment-copy">@user1992989 what is the error ?</span>
<span class="comment-copy">Mehrdad Pedramfar, can you share your code? Thanks.</span>
