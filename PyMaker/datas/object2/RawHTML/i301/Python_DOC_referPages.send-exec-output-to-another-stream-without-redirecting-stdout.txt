<div class="post-text" itemprop="text">
<p>I'm writing a Sublime Text plugin that provides multiple Python shells accessible via UNIX sockets. Each shell should act as a standalone REPL running on its own thread. (It is undesirable for these shells to have their own processes; sharing a single process is an absolute requirement.)</p>
<p>The builtin <code>exec()</code> function prints output to stdout if the code was compiled with <code>mode='single'</code> and is an expression that does not evaluate to None. I need to send this output over the socket instead.</p>
<p>I know that this can be done by <a href="https://stackoverflow.com/questions/3906232/python-get-the-print-output-in-an-exec-statement">patching stdout</a>. However, this would not work here because multiple consoles may be running in multiple threads (plus the built-in console).</p>
<p>My ideas are as follows:</p>
<ul>
<li>Try to <code>compile()</code> the input with <code>mode='eval'</code>, <code>eval()</code> it, and print the result (if not None). If it won't compile, try <code>mode='exec'</code> instead of <code>mode='single'</code>.</li>
<li>For each console's thread, keep the output stream in thread-local storage. Patch <code>sys.stdout</code> with an object that checks for these streams before calling "regular" stdout.</li>
<li>Somehow provide a patched <code>sys</code> to each console.</li>
</ul>
<p>These don't seem like great ideas. Is there a better one?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're dead set on having a single process, then depending on how willing you are to dive into obscure C-level features of the CPython implementation, you might try looking into <a href="https://docs.python.org/3/c-api/init.html#sub-interpreter-support" rel="nofollow noreferrer">subinterpreters</a>. Those are, as far as I know, the highest level of isolation CPython provides in a single process, and they allow things like separate <code>sys.stdout</code> objects for separate subinterpreters.</p>
</div>
<span class="comment-copy">These shells are never going to be anywhere near as independent as you're hoping. (Also, <code>exec</code> doesn't auto-print expression values.)</span>
<span class="comment-copy">It does if the code was compiled with <code>mode='single'</code>, which I forgot to mention (now in the question). I'm aware that it won't be perfect, but I'm willing to settle for a definition of "reasonably good" that includes echoing the output.</span>
<span class="comment-copy">Run each of the REPLs in a seperate python process with its own pty. Have your master copy to and from the ptys and the Unix sockets. Attempting to do this without processes is working against the design of Unix.</span>
<span class="comment-copy">With <code>mode='single'</code>, yeah, you'd get autoprinting.</span>
