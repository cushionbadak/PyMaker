<div class="post-text" itemprop="text">
<p>I am trying to form a string using format() but can't figure this out.</p>
<pre><code>lems = ['scaena', 'persona', 'improbus']
for i in lems:
    print('{}{}{}'.format(i, '\t', 'whatever'))
</code></pre>
<p>but the tab is not strung as I expect it. Actually, the last item in the list the tab does apply as it prints out:</p>
<pre><code>scaena  text
persona text
improbus        text
</code></pre>
<p>What is going on? thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>The tab is working properly, you probably are looking for <a href="https://docs.python.org/3/library/stdtypes.html#str.ljust" rel="nofollow noreferrer"><code>.ljust(width)</code></a></p>
<pre class="lang-py prettyprint-override"><code>lems = ['scaena', 'persona', 'improbus']
for i in lems:
    print('{}{}'.format(i.ljust(10), 'whatever'))
</code></pre>
<p>prints out:</p>
<pre><code>scaena    whatever
persona   whatever
improbus  whatever
</code></pre>
<p>Sometimes it's useful to calculate the max length of your strings so the output is more reliable</p>
<pre class="lang-py prettyprint-override"><code>lems = ['scaena', 'persona', 'improbus']
max_len = max(len(l) for l in lems)
for i in lems:
    print('{}{}'.format(i.ljust(max_len + 1), 'whatever'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use the f-string:</p>
<pre><code>lems = ['scaena', 'persona', 'improbus']
for i in lems:
    print(f"{i}\t{'whatever'}")
</code></pre>
<p>You can use the function <code>repr()</code> to see that tab is added to the string:</p>
<pre><code>from reprlib import repr

lems = ['scaena', 'persona', 'improbus']
for i in lems:
    print(repr(f"{i}\t{'whatever'}"))
</code></pre>
<p>Output:</p>
<pre><code>'scaena\twhatever'
'persona\twhatever'
'improbus\twhatever'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>@Bhargav Rao, there is actually nothing wrong with my code in the initial question, the issue I was having was python unrelated so my question has already the answer in it which I reiterate and mark as the correct answer:</p>
<pre><code>for i in lems:
    i = i.strip()
    print('{}{}{}'.format(i, '\t', 'text'))
</code></pre>
</div>
<span class="comment-copy">It is applying properly in all of them. Look.</span>
<span class="comment-copy">Ok, if I do repr(i) I do see the tabs, however what's up with the extra spaces and why is it that is i write this to a text file my gedit text editor editor does not recognize the tab?</span>
<span class="comment-copy">The extra spaces are how it gets to the next tab stop...</span>
<span class="comment-copy">I don't understand how it is working properly when I can count different spaces between the words, 4 between scaena and whatever, 1 between persona and whatever, the third line has 8 spaces. Also, I NEED the tab because I later write this  to a txt file and and the text editor does not read those as tabs.</span>
<span class="comment-copy">one up for the f"{i}\t{'whatever'}</span>
