<div class="post-text" itemprop="text">
<p>How do I convert a list of dates that are in the form yyyymmdd to a serial number? For example, if I have this list of dates:</p>
<pre><code>t = [1898-10-12 06:00,1898-10-12 12:00,1932-09-30 08:00,1932-09-30 00:00]
</code></pre>
<p>How do I convert each date to a serial number? Im currently using the datetime toordinal() command, but each date is being rounded to the same serial number. How do I get the same dates with different times to be different numbers?</p>
<p>The times in the list are the datetime.datetime numbers. I tried then doing:</p>
<pre><code>thurser = []
for i in range(len(t)):
    thurser.append(t[i].toordinal())
</code></pre>
<p>But am not getting serial numbers as floats.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.toordinal" rel="nofollow noreferrer"><code>datetime.toordinal()</code></a> considers only the 'date' part of the datetime object, not the time. So does <a href="https://docs.python.org/3/library/datetime.html#datetime.date.toordinal" rel="nofollow noreferrer"><code>date.toordinal()</code></a> - it only has a date part. The first 2 and last 2 elements in your list have datetimes on the same date but at different times, which <code>.toordinal</code> ignores. So, <code>.toordinal</code> will give you the same value for those same-dated datetimes.</p>
<p>In general, the solution would be to calculate the delta between your dates and a pre-determined/fixed one. I'm using <code>datetime.datetime(1, 1, 1)</code>, the earliest possible datetime, so all the deltas are positive:</p>
<pre><code>thurser = []
# assuming t is a list of datetime objects
for d in t:
    delta = d - datetime.datetime(1, 1, 1)
    thurser.append(delta.days + delta.seconds/(24 * 3600))

&gt;&gt;&gt; print(thurser)
[693149.25, 693149.5, 705555.3333333334, 705555.0]
</code></pre>
<p>And if you prefer ints instead of floats, then use seconds instead of days:</p>
<pre><code>thurser.append(int(delta.total_seconds()))  # total_seconds has microseconds in the float

&gt;&gt;&gt; print(thurser)
[59888095200, 59888116800, 60959980800, 60959952000]
</code></pre>
<p>And to get back the original values in the 2nd example:</p>
<pre><code>&gt;&gt;&gt; [datetime.timedelta(seconds=d) + datetime.datetime(1, 1, 1) for d in thurser]
[datetime.datetime(1898, 10, 12, 6, 0), datetime.datetime(1898, 10, 12, 12, 0),
 datetime.datetime(1932, 9, 30, 8, 0), datetime.datetime(1932, 9, 30, 0, 0)]
&gt;&gt;&gt; _ == t  # compare with original values
True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let me know if my understanding is wrong, I tried following and gives distinct numbers for each value of the list.<br/>
I modified<br/>
<code>t = ['1898-10-12 06:00','1898-10-12 12:00','1932-09-30 08:00','1932-09-30 00:00']</code><br/>
 with<br/>
<code>t = [datetime.datetime(1898, 10, 12, 6, 0), datetime.datetime(1898, 10, 12, 12, 0), datetime.datetime(1932, 9, 30, 8, 0), datetime.datetime(1932, 9, 30, 0, 0)]</code><br/>
As mentioned in comment it is list of datetime.datetime.<br/>
I am considering total MilliSeconds from <code>1970-01-01 00:00:00</code> the given date to generate a number.<br/>
So dates which are before above date give values in negative. But distinct values.</p>
<pre><code>t = [datetime.datetime(1898, 10, 12, 6, 0), datetime.datetime(1898, 10, 12, 12, 0), datetime.datetime(1932, 9, 30, 8, 0), datetime.datetime(1932, 9, 30, 0, 0)]
thurser = []
x = []
for i in range(len(t)):
    thurser.append(t[i].toordinal())
    x.append((t[i]-datetime.datetime.utcfromtimestamp(0)).total_seconds() * 1000.0)

print(thurser)
print(x)
</code></pre>
<p>output:</p>
<blockquote>
<pre><code>[693150, 693150, 705556, 705556]
[-2247501600000.0, -2247480000000.0, -1175616000000.0, -1175644800000.0]
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Is that a list of strings or a list of <code>datedime.datetime</code>?</span>
<span class="comment-copy">It is a list of datetime.datetime</span>
<span class="comment-copy">what do you mean by serial number?</span>
