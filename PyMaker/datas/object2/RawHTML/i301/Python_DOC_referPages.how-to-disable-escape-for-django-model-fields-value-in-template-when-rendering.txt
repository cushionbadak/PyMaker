<div class="post-text" itemprop="text">
<p>I am working on one of my colleague's Django (Django 2.1.4) projects. I spent a couple of days to try to figure out how to disable auto escape for Form field's value when rendering it manually in a template.  <code>{% autoescape off %} and {{form1.LastName | safe }}</code> all don't work.</p>
<p>Here are some relative codes. </p>
<p>Form.py</p>
<pre><code>class tblstudentinfomodelform_page1(forms.ModelForm):
    LastName = forms.CharField(max_length=30, required=True)
</code></pre>
<p>views.py    </p>
<pre><code>def application(request,application_num)
   form1 = tblstudentinfo.objects.get(ApplicationNumber=application_num)
   ...
   form1_forms = tblstudentinfomodelform_page1(initial=form1.__dict__) if form1 else tblstudentinfomodelform_page1(initial=form1)
   ...
   return render(request,'appinfo.html',{'form1':form1_forms})
</code></pre>
<p>appinfo.html</p>
<pre><code>&lt;th&gt;{{form1.LastName}}&lt;br&gt;{{form1.LastName.errors}} {{form1.LastName.value}} &lt;/th&gt;
</code></pre>
<p>Some tests here:</p>
<p>LastName's value is <code>&amp;#350;haha</code></p>
<p><strong>test1</strong>: add <code>{% autoescape off %}</code> at the top of the template and <code>{% endautoescape %}</code> at the bottom</p>
<p><strong>result1</strong>: <code>{{form1.LastName.value}}</code> displays correctly -- Åžhaha, but input textbox shows <code>&amp;#350;haha</code>
<a href="https://i.stack.imgur.com/zf0vq.jpg" rel="nofollow noreferrer">run result -- html page</a></p>
<p><strong>test2</strong>: delete autoescape tag and add <code>safe</code> filter</p>
<pre><code>&lt;th&gt;{{form1.LastName | safe}}&lt;br&gt;{{form1.LastName.errors}} {{form1.LastName.value |safe}} &lt;/th&gt;  
</code></pre>
<p><strong>result2</strong>: get the same result, looks like that <code>safe</code> filter only worked on form.field.value</p>
<p>Any suggestion?</p>
<p>Thank you. </p>
</div>
<div class="post-text" itemprop="text">
<p>Add the answer to here in case someone gets the same problem. </p>
<p>Create a function to unescape all HTML entities. </p>
<pre><code>from html import unescape
def html_unescape(data_model):  # convert to unicode characters 
# Convert all named and numeric character references (e.g. &amp;gt;, &amp;#62;, &amp;#x3e;) in the string s to the corresponding Unicode characters. 
    for f in data_model._meta.get_fields():
        if ( f.get_internal_type() == "CharField" or f.get_internal_type() == "TextField") and getattr(data_model, f.name):
            #some old records haved escaped many times
            str = unescape(unescape(unescape(unescape(unescape(getattr(data_model, f.name))))))
            setattr(data_model, f.name, str)
    return data_model
</code></pre>
<p>and then </p>
<pre><code>form1 = tblstudentinfo.objects.get(ApplicationNumber=application_num)
form1 = html_unescape(form1)
</code></pre>
</div>
<span class="comment-copy">The <code>safe</code> filter works only when you are trying to have a variable containing html code, which you say is safe to be executed as html. For input values, you will need to do a html unescape in the backend. Check - <a href="https://docs.python.org/3/library/html.html#html.unescape" rel="nofollow noreferrer">docs.python.org/3/library/html.html#html.unescape</a></span>
<span class="comment-copy">@AswinMurugesh, great, thank you so much.</span>
