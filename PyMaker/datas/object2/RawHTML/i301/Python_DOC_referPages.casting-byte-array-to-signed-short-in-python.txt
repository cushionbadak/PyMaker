<div class="post-text" itemprop="text">
<p>I want to convert a <em>bytearray</em> type or a list of binary strings in python to a signed short list. In fact, I am getting a byte stream from Ethernet and I want to convert them in <strong>signed short</strong>; however, the only way I found in Python is using <code>struct.unpack</code> which seems to be slow since it requires a format string to determine the type of each byte.</p>
<p>This format requirement slows in two steps:</p>
<p>1) Required to make a long string for a long array of bytes</p>
<p>2) Required to search one-by-one in the array.</p>
<p>In C++, the following simple code does the job on the entire memory block contained by InBuf:</p>
<pre><code>OutBuf = short int[len]
InBuf = char[len*2]
memcpy(&amp;OutBuf, &amp;InBuf, len*2)
</code></pre>
<p>This skips doing the format search within the byte array as well as the format string construction. Does anyone know a better way to do so in <em>Python</em>? </p>
</div>
<div class="post-text" itemprop="text">
<p>If you're using Python &gt; 3.2 you could use <a href="https://docs.python.org/3/library/stdtypes.html#int.from_bytes" rel="nofollow noreferrer"><code>int.from_bytes</code></a>:</p>
<pre><code>int.from_bytes(b, byteorder='little', signed=True)
</code></pre>
</div>
<span class="comment-copy">This does not work since I have a binary string or a list of binary strings like<code>MyBin = b'12wda121q'</code> or <code>MyBin = [b'12was',b'1231ws']</code> and <code>int.from_bytes</code> should be applied on the 2-byte slices to get the true conversion I need. This is still very slow.</span>
