<div class="post-text" itemprop="text">
<p>so i want to extract the images name from the path , to use them as labels further in a classification Task.
this is the pasth:</p>
<p>[PosixPath('/content/drive/My Drive/Logo/adidas10.jpg'),</p>
<p>PosixPath('/content/drive/My Drive/Logo/adidas11.jpg'), </p>
<p>PosixPath('/content/drive/My Drive/Logo/adidas13.jpg'),</p>
<p>.
  .
  .] and it goes on for 600 images .</p>
<p>so what i want to get is the brand name , like in this case adidas.</p>
<p>here's the RegEx expression i used :</p>
<pre><code>r‚Äô([\w\s.-]).[jpg]‚Äô
</code></pre>
<p>but , what i get after checking the images label is this:</p>
<pre><code> print(data.classes)

 ['L']
</code></pre>
<p>any Suggestions ? , thanks. </p>
</div>
<div class="post-text" itemprop="text">
<p>You make use of a <a href="https://www.regular-expressions.info/refshorthand.html" rel="nofollow noreferrer">character class</a> which will one of the listed characters. So your pattern <code>([\w\s.-]).[jpg]</code> will capture in a group matching one of <code>[\w\s.-]</code>, then match match any char except a newline due to the dot <code>.</code> and then match one of <code>[jpg]</code>.</p>
<p>For your example data, that will give you a capturing group for <code>L</code> and a match for <code>og</code> as well as a capturing group for <code>0</code>, <code>1</code>,<code>3</code> and a match for <code>.j</code></p>
<p>If you want to get the brand name like <em>adidas</em> from your examples as you state in your question, you could use a capturing group.</p>
<pre><code>/([^/]*[^/\d])\d*\.jpg
</code></pre>
<p><a href="https://regex101.com/r/mmwtNC/1" rel="nofollow noreferrer">Regex demo</a> | <a href="https://ideone.com/oQrrCA" rel="nofollow noreferrer">Python demo</a></p>
<p>That will match</p>
<ul>
<li><code>/</code> Match literally</li>
<li><code>(</code> Capturing group (This will contain the brand name)

<ul>
<li><code>[^/]*</code> Match not a <code>/</code> 0+ times not a <code>/</code> using a negated <a href="https://www.regular-expressions.info/charclass.html" rel="nofollow noreferrer">character classes</a> </li>
<li><code>[^/\d]</code> Match not a <code>/</code> or a digit</li>
</ul></li>
<li><code>)</code> Close group</li>
<li><code>\d*</code> Match 0+ times a digit</li>
<li><code>\.jpg</code> Match .jpg</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p><code>([\w\s.-])</code> (any of <code>[A-Za-z0-9_]</code>, whitespaces, literal <code>.</code>, literal <code>-</code>) is capturing the <code>L</code> in <code>Logo</code> because it follows:</p>
<ul>
<li><code>.</code>: any single character; <code>o</code> in this case</li>
<li><code>[jpg]</code>: any of <code>j</code>, <code>p</code>, <code>g</code>; <code>g</code> here</li>
</ul>
<p>You need:</p>
<pre><code>/([^/]+)\.jpg$
</code></pre>
<p>Now the only captured group will contain the image name.</p>
<ul>
<li><code>/</code> matches literal <code>/</code></li>
<li><code>([^/]+)</code> matches one or more characters that are not <code>/</code> -- the file name</li>
<li><code>\.jpg</code> matches <code>.jpg</code> at the end (<code>$</code>)</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>A great resource to try your regex out is <a href="https://regex101.com/" rel="nofollow noreferrer">Regex101</a>.</p>
<p>You try to group the file ending together using square braces <code>[]</code> which creates a selection of either of the three characters <code>j</code>, <code>p</code> or <code>g</code>. The dot is not escaped and thus - in regex syntax - is any character. Since you never add any multipliers (like <code>+</code> for 1 or more characters, <code>*</code> for 0 or more characters or <code>?</code> for an optional character), you only match a few letters in total.</p>
<p>If you want to read a bit more about all regex operators, modifiers and similar concepts, <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">I recommend reading the documentation of python's <code>re</code> module</a>.</p>
<p>You can either rewrite the regular expression to something like this (extract the first group in order to retrieve the filename) or use the fact that there is a path processing library in the <code>os</code> package:</p>
<pre><code>^.*\/([^\/]+\.jpg).*$
</code></pre>
<p><a href="https://regex101.com/r/02cQa4/2" rel="nofollow noreferrer">You can see this regex in action here.</a></p>
<p>Since you seem to already have path objects available, you could however just extract the <a href="https://docs.python.org/2/library/os.path.html#os.path.basename" rel="nofollow noreferrer">basename</a> of the path, which in your case will be the filename:</p>
<pre><code>from os.path import basename
a = '/content/drive/My Drive/Logo/adidas10.jpg'
filename = basename(a)
</code></pre>
<p><code>filename</code> would now be <code>adidas10.jpg</code> </p>
</div>
<span class="comment-copy">please read up what <code>[...]</code> mean</span>
<span class="comment-copy">and <code>.</code> for that matter</span>
<span class="comment-copy">That's exactly the expression that I ended up using after tweaking the previous one that has been given to me .                                                   Thanks a lot üôè</span>
<span class="comment-copy">Thank U guys , now i see the errors I made , it's been super helpful and instructive .</span>
<span class="comment-copy">I am glad that we could help. I added another link to a good place to start learning more about the syntax of regular expressions in the answer. I hope it helps you on your journey to become a regex master :-)</span>
