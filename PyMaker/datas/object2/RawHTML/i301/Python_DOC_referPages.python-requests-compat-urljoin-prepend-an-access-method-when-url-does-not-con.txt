<div class="post-text" itemprop="text">
<p>Here are two ways I'm trying to prepend the <code>https://</code> to a URL.  For some reason the urljoin method gives strange output:</p>
<pre><code>from requests.compat import urljoin

host = 'abc.def.com'
host2 = host

# brute-force string method
if not host.startswith('https://'):
    host = 'https://' + host  # Add schema
if host.endswith('/'):
    host = host[:-1]          # Strip /
print('Stringy way', host)

# nice library method? Doesn't quite work
print('urljoin    ', urljoin('https://', host2))
</code></pre>
<p>The output I see, with the weird three /// characters, are</p>
<pre><code>Stringy way https://abc.def.com
urljoin     https:///abc.def.com
</code></pre>
<p>I get non-useful results with other variants too:</p>
<pre><code>print('urljoin #2 ', urljoin('https:/', host2))
print('urljoin #3 ', urljoin('https:', host2))
print('urljoin #4 ', urljoin('https', host2))
</code></pre>
<p>gives:</p>
<pre><code>urljoin #2  https:///abc.def.com
urljoin #3  https:///abc.def.com
urljoin #4  abc.def.com
</code></pre>
<p>Is this the wrong function to use for this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can utilize <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlunsplit" rel="nofollow noreferrer"><code>urllib.parse.urlunsplit()</code></a> to compose URLs:</p>
<pre><code>from urllib.parse import urlunsplit

print(urlunsplit(("https", "abc.def.com", "", "", "")))
</code></pre>
<p>Result:</p>
<pre><code>https://abc.def.com
</code></pre>
<p>It takes a tuple as input that matches the output of <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlsplit" rel="nofollow noreferrer"><code>urlsplit()</code></a>, with the following attributes of the tuple:</p>
<p><a href="https://i.stack.imgur.com/e2oEy.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/e2oEy.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>The urljoin function is generally used for attaching an href anchor to the existing url. Example:</p>
<pre><code>from requests.compat import urljoin
url = 'https://abc.def.com'
href = '364'
urljoin(url, href)
</code></pre>
<p>I get the output:-</p>
<pre><code>'https://abc.def.com/364'
</code></pre>
<p>However if I want to complete my url with 'https://' I would rather use:-</p>
<pre><code>from requests.compat import urljoin
url = 'abc.def.com'
host = ('https://'+ url)
print(host)
</code></pre>
<p>And the output I have is:</p>
<pre><code>https://abc.def.com
</code></pre>
<p>I hope this helped.</p>
</div>
<span class="comment-copy">I think this is the "brute force string method" I showed in the example.</span>
