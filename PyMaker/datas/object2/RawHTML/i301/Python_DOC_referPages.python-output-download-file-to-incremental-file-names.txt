<div class="post-text" itemprop="text">
<p>I am downloading pdf files from urls. The list of urls are in .csv format. The following code works. However, since all my urls end with <strong>/filename1.pdf</strong>, the output writes on top of the previously downloaded filename1.pdf. I have about 15,000 urls, but end up with only one file (which is filename1). Is there a way that I can rename the downloaded pdf files to incremental numbers?</p>
<pre><code>import os
import csv
import requests

os.chdir('C:\\Users\\dul\\Dropbox\\CTO\\ctos')

write_path = 'C:\\Users\\dul\\Dropbox\\CTO\\ctos\\'
with open('urls.csv', 'r') as csvfile:
    spamreader = csv.reader(csvfile)
    for link in spamreader:
        print('-'*72)
        pdf_file = link[0].split('/')[-1]
        with open(os.path.join(write_path, pdf_file), 'wb') as pdf:
            try:
                # Try to request PDF from URL
                print('TRYING {}...'.format(link[0]))
                a = requests.get(link[0], stream=True)
                for block in a.iter_content(512):
                    if not block:
                        break

                    pdf.write(block)
                print('OK.')
            except requests.exceptions.RequestException as e:  
                print('REQUESTS ERROR:')
                print(e) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> to get the index of each item produced by the <code>csv</code> iterator, then prefix the output filename with this number to make each one unique:</p>
<pre><code>with open("urls.csv", "r") as csvfile:
    for idx, link in enumerate(csv.reader(csvfile)):
        print("-" * 72)
        pdf_file = "{idx:05}_{link}".format(idx=idx, link=link[0].split('/')[-1])
        print(pdf_file)
</code></pre>
<p>The <code>{idx:05}</code> component of the format string instructs the formatter to consider <code>idx</code> to have a width of five characters, and to zero pad it.</p>
<p>Result:</p>
<pre>
------------------------------------------------------------------------
00000_filename1.pdf
------------------------------------------------------------------------
00001_filename1.pdf
...
</pre>
</div>
<span class="comment-copy">hey @cody pdf_file = f"{idx:05}_{link[0].split('/')[-1]}"there is an error here? Just to make sure, I am using python27</span>
<span class="comment-copy">@Andre Ok, yeah I was using a feature not available in 2.7, I've updated my answer.</span>
<span class="comment-copy">OMG! It works! THanks!!!!!</span>
