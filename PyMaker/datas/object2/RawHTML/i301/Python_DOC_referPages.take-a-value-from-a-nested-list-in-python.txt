<div class="post-text" itemprop="text">
<p>I ask for a value which is the id of the product.
The thing I want is the price of the product with that id, the last number.</p>
<p>Products code:</p>
<pre><code>producto=[[0, "Patata", "PatataSL", 7], [1, "Jamon", "JamonSL", 21], [2, "Queso", "Quesito Riquito", 5], [3, "Leche", "Muu", 4], [4, "Oro", "Caro", 900], [5, "Zapatos", "Zapatito", 56], [6, "Falda", "Mucha ropa", 34]]
def productos():
    respuesta=True
    while respuesta:
        print ("""
        1.Mostrar Productos
        2.Salir al menu
        """)
        respuesta=input("Introduzca la opcion ") 
        if respuesta=="1":
            for r in producto:
                for c in r:
                    print(c, end = " ")
                print()
        elif respuesta=="2":
            import menu
        elif respuesta !="":
          print("\n No ha introducido un numero del menu") 
</code></pre>
<p>Shopping code:</p>
<pre><code>import clientes
import productos
def compras():
    respuesta=True
    while respuesta:
        print ("""
        1.Comprar
        2.Salir al menu
        """)
        respuesta=input("Introduzca la opcion ") 
        if respuesta=="1":
            i = int(input("Introduzca el id del cliente: "))
            if i in (i[0] for i in clientes.cliente):
                print("El cliente está en la lista")
            else:
                print("El cliente no está en la lista")
                compras()
            p = int(input("Introduzca el id del producto: "))
            if p in (p[0] for p in productos.producto):
                print("El producto esta en stock")
</code></pre>
<p>These are the things I´ve been trying but i get an error code: TypeError: 'int' object is not subscriptable.</p>
<pre><code>for j in productos.producto:
                    for p in j:
                        print (str(p[3]))
                #print("El producto cuesta: " + str(p[p][3]))
</code></pre>
<p>Last part is ok.            </p>
<pre><code>else:
                print("El producto no esta en stock")
                compras()           
        elif respuesta=="2":
          import menu
        elif respuesta !="":
          print("\n No ha introducido un numero del menu") 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can get the nested item by simply adding an additional set of square brackets, so for <code>7</code> in the first nested list is <code>producto[0][3]</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can grab the last element in a list by refering to it as the -1th element.</p>
<pre><code>for productList in producto:
    if respuesta == productList[0]:
        print('Price:', productList[-1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I assume that you need to print the price of the product based on the id. </p>
<pre><code>producto=[[0, "Patata", "PatataSL", 7], [1, "Jamon", "JamonSL", 21], [2, "Queso", "Quesito Riquito", 5], [3, "Leche", "Muu", 4], [4, "Oro", "Caro", 900], [5, "Zapatos", "Zapatito", 56], [6, "Falda", "Mucha ropa", 34]]
</code></pre>
<p>I assume , index 0 is id and index 3 is Price. </p>
<pre><code>product_id = 0 //user input
for v in producto:
   if v[0] == product_id:
       print(v[0][3])
</code></pre>
<p>you need to give the index of the price</p>
</div>
<div class="post-text" itemprop="text">
<p>If at all possible, it would be nice to see this type of structured data in a <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">class</a> or <a href="https://docs.python.org/3.7/library/collections.html#collections.namedtuple" rel="nofollow noreferrer">named tuple</a>.</p>
<p>That way not only do you gain the benefit of always knowing what you're accessing. But it's very simple to figure out how to access it.</p>
<p>Consider the following code:</p>
<pre><code>class Product():
    def __init__(self, amount, name, something, price):
        self.amount = amount
        self.name = name
        self.something = something
        self.price = price


producto=[
    Product(0, "Patata", "PatataSL", 7), Product(1, "Jamon", "JamonSL", 21),
    Product(2, "Queso", "Quesito Riquito", 5), Product(3, "Leche", "Muu", 4),
    Product(4, "Oro", "Caro", 900), Product(5, "Zapatos", "Zapatito", 56),
    Product(6, "Falda", "Mucha ropa", 34)
]

print(producto[0].price)
</code></pre>
<p>It might look like more effort, but if you plan on making a large, even slightly complex program, using nested arrays and non-structured data you will find yourself constantly running into problems like the one your currently encountering.</p>
<p>That said, the answer is:</p>
<pre><code>for j in productos.producto:
    print (str(j[3]))
</code></pre>
<p>You went one level too deep into your nested array.</p>
</div>
<span class="comment-copy">For example I put 3, that id exists so the check works, now I want the price of the product with that id, the value. If the id is 3 the output should be: The price is 4.</span>
<span class="comment-copy">why dont you use dict/json ?</span>
<span class="comment-copy">This worked, just needed to change some things for the output I wanted. Thanks:D</span>
<span class="comment-copy">Wow, this seems to be a better method. When I finish the exercise I will try this way. Thanks for the help.</span>
