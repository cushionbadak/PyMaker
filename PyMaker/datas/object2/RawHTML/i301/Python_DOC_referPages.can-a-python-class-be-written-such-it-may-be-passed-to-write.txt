<div class="post-text" itemprop="text">
<p>I'd like to pass an instance of my class to write() and have it written to a file. The underlying data is simply a bytearray.</p>
<pre><code>mine = MyClass()

with open('Test.txt', 'wb') as f:

    f.write(mine)
</code></pre>
<p>I tried implementing <code>__bytes__</code> to no avail. I'm aware of the buffer protocol but I believe it can only be implemented via the C API (though I did see talk of delegation to an underlying object that implemented the protocol).</p>
</div>
<div class="post-text" itemprop="text">
<p>No, you can't, there are no special methods you can implement that'll make your Python class support the buffer protocol.</p>
<p>Yes, the <a href="https://docs.python.org/3/library/io.html#io.RawIOBase.write" rel="nofollow noreferrer"><code>io.RawIOBase.write()</code></a> and <a href="https://docs.python.org/3/library/io.html#io.BufferedIOBase.write" rel="nofollow noreferrer"><code>io.BufferedIOBase.write()</code></a> methods document that they accept a <a href="https://docs.python.org/3/glossary.html#term-bytes-like-object" rel="nofollow noreferrer"><code>bytes</code>-like object</a>, but the buffer protocol needed to <em>make</em> something <em><code>bytes</code>-like</em> <a href="https://docs.python.org/3/c-api/buffer.html#bufferobjects" rel="nofollow noreferrer">is a C-level protocol only</a>. There is an <a href="https://bugs.python.org/issue13797" rel="nofollow noreferrer">open Python issue to add Python hooks</a> but no progress has been made on this. </p>
<p>The <a href="https://docs.python.org/3/reference/datamodel.html#object.__bytes__" rel="nofollow noreferrer"><code>__bytes__</code> special method</a> is only called if you passed an object to the <code>bytes()</code> callable; <code>.write()</code> does not do this.</p>
<p>So, when writing to a file, only actual <code>bytes</code>-like objects are accepted, <em>everything else</em> must be converted to such an object first. I'd stick with:</p>
<pre><code>with open('Test.txt', 'wb') as f:
    f.write(bytes(mine))
</code></pre>
<p>which will call the <code>MyClass.__bytes__()</code> method, provided it is defined, or provide a method on your class that causes it to write itself to a file object:</p>
<pre><code>with open('Test.txt', 'wb') as f:
    mine.dump(f)
</code></pre>
</div>
<span class="comment-copy">Thanks. Excellent details.</span>
