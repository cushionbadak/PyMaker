<div class="post-text" itemprop="text">
<p>It's a very specific question for a very specific situation.
My function is supposed to return None and I don't know the name of the variable that I need to change before hand. All I know is that the function is supposed to change the variable.</p>
<pre><code>def next(list):
    temporary = [x for x in list]
    temporary.append(temporary[-1] + 1)
    ??? = temporary
    return None
"""
&gt;&gt;&gt;secrettuple = (2, 3, 4, 5)
&gt;&gt;&gt;next(secrettuple)
&gt;&gt;&gt;secrettuple
[2, 3, 4, 5, 6]
"""
</code></pre>
<p>Sorry if this is too similar to another article on the website, I've been browsing for 2 hours and couldn't find an answer to my problem, maybe I wasn't using the right search terms.</p>
</div>
<div class="post-text" itemprop="text">
<p>Provided you are dealing with a <code>list</code> object (which is mutable):</p>
<pre><code>def next(lst, some_lst):
    temporary = [x for x in lst]
    temporary.append(temporary[-1] + 1)
    some_lst[:] = temporary

next(secrettuple, real_list)
</code></pre>
<p>You don't need to <code>return None</code> since by default a function will return <code>None</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I found a way to do it, it was easier than I tought</p>
<pre><code>def next(list):
    temporary = [x for x in list]
    list.append(temporary[-1] + 1)
</code></pre>
<p>This will add an element to both tuples and lists, this is all I needed to be able to do</p>
<p>Edit: I don't know why this worked for me, but other people seem to get errors when doing this</p>
</div>
<span class="comment-copy">What you're asking does not appear to be possible (without using either <code>global</code> or <code>return</code>). If you passed a list to your function, it would be easy: you could just modify the list. But tuples are unmodifiable.</span>
<span class="comment-copy">@khelwood funny that you say that because I actually found a way to do it (see answer below). I was surprised that i worked, But it worked and it was exactly what I needed.</span>
<span class="comment-copy">I said "If you passed a list to your function, it would be easy: you could just modify the list." You did exactly what I said.</span>
<span class="comment-copy">@khelwood Still, I started out with a tupple and a list returned with the element I wanted to add, other people seem to receive errors when doing this, so I don't think my post will be of any use to anyone. I'm going to delete it Edit: Never mind that, I can't delete it...</span>
<span class="comment-copy">Thanks for telling me that I don't need to return None</span>
<span class="comment-copy">If I run this code with the data you gave in the question I get <code>AttributeError: 'tuple' object has no attribute 'append'</code>. And of course it's bad style to reuse the names of the built-ins <a href="https://docs.python.org/3/library/functions.html#func-list" rel="nofollow noreferrer"><code>list</code></a> and <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next</code></a>.</span>
<span class="comment-copy">@Matthias weird, no idea why it worked for me, still, my problem is solved, I'll just close this since no one seems to think this is usefull Edit: Never mind that, I can't delete it when there are answers</span>
