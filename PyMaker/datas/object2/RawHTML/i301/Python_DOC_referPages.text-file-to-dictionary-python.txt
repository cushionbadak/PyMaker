<div class="post-text" itemprop="text">
<p>I have a <code>txt</code> file as below:</p>
<pre><code>Name,Age,username,password,account_signup_date,account_close_date
Freddy,36,fred,123f,2017/04/25,2019/01/22
Tara,25,mtara,123t,2018/03/22,2019/02/15
</code></pre>
<p>Can someone point me as to how to load the data from this <code>txt</code> file to a Python dictionary, with the output being displayed into a second .txt file.</p>
<p>The output should have the following headers:</p>
<pre><code>Name, Age, username, Password, Difference between the present date and the account_close_date
</code></pre>
<p>Below is my code opening file, but I was unable to load data into dictionary as expected.</p>
<pre><code>dict = {}

with open(sampletext.txt,'w') as file_object:
    title = file_object.readline()
    titlesplit = title.split(',')

for each_line in file_object:
    &lt;rest of the code&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This will help you take input from the <code>sample.txt</code> file you have, skip the first line, and write the other lines as the dictionary you into <code>new.txt</code>.</p>
<pre><code>from datetime import datetime
dict1 = {}
with open('sample.txt', 'r') as input_file:
    title = input_file.readlines()[1:]
    for items in title:
        titlesplit = items.strip().split(',')
        dict1['Name'] = titlesplit[0]
        dict1['Age'] = titlesplit[1]
        dict1['Username'] = titlesplit[2]
        dict1['Password'] = titlesplit[3]
        today = datetime.now()
        closing_date = datetime.strptime(titlesplit[5], "%Y/%m/%d")
        dict1["Difference"] = str((today - closing_date).days) + " days"
        with open('new.txt', 'a') as output_file:
            output_file.write(str(dict1))
            output_file.write("\n")
</code></pre>
<p><strong>OUTPUT:</strong></p>
<pre><code>{'Name': 'Freddy', 'Age': '36', 'Username': 'fred', 'Password': '123f', 'Difference': '35 days'}
{'Name': 'Tara', 'Age': '25', 'Username': 'mtara', 'Password': '123t', 'Difference': '11 days'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this</p>
<pre><code>dictvar = {"Name":[],
           "Age":[],
           "Username":[],
           "Password":[]
          }
with open("sample.txt",'r') as fp:
    next(fp)
    for i in fp:
        dictvar["Name"].append(i.rsplit(",")[0])
        dictvar["Age"].append(i.rsplit(",")[1])
        dictvar["Username"].append(i.rsplit(",")[2])
        dictvar["Password"].append(i.rsplit(",")[3])

print(dictvar)
</code></pre>
<p>Output would be</p>
<pre><code>{'Username': ['fred', 'mtara'], 'Age': ['36', '25'], 'Password': ['123f', '123t'], 'Name': ['Freddy', 'Tara']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think this is what you are looking for</p>
<pre><code>with open('/home/rbhanot/test.txt') as fh:
    for line in fh:
        p = {i: [] for i in line.strip('\n').split(',')}
        break

    for line in fh:
        p['Name'].append(line.strip('\n').split(',')[0])
        p['Age'].append(line.strip('\n').split(',')[1])
        p['username'].append(line.strip('\n').split(',')[2])
        p['password'].append(line.strip('\n').split(',')[3])
        p['account_signup_date'].append(line.strip('\n').split(',')[4])
        p['account_close_date'].append(line.strip('\n').split(',')[5])

print(p)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'Name': ['Freddy', 'Tara'], 'Age': ['36', '25'], 'username': ['fred', 'mtara'], 'password': ['123f', '123t'], 'account_signup_date': ['2017/04/25', '2018/03/22'], 'account_close_date': ['2019/01/22', '2019/02/15']}
</code></pre>
<p>If you want to create a separate dictionary for each line then you can use <code>DictReader</code> from <code>csv module</code>. Below is the example for the same from official python documentation.</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; with open('names.csv', newline='') as csvfile:
...     reader = csv.DictReader(csvfile)
...     for row in reader:
...         print(row['first_name'], row['last_name'])
...
Eric Idle
John Cleese

&gt;&gt;&gt; print(row)
OrderedDict([('first_name', 'John'), ('last_name', 'Cleese')])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do it like this, using the <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">datetime</a> module:</p>
<pre class="lang-py prettyprint-override"><code>from datetime import datetime  # import the datetime class

user_list = []  # create an empty list to store users in

with open('sampletext.txt', 'r') as file:  # open the file 'sampletext.txt' with read-access
    title = file.readlines()  # split the file at each newline (\n)

    for item in title:  # for each item user in the list with users
        item = item.strip().split(',')  # remove newlines and split at ","
        user = {
            "name": item[0],
            "age": item[1],
            "username": item[2],
            "password": item[3],
            "account_signup_date": datetime.strptime(item[4], "%Y/%m/%d"),  # create a datetime object from the date
            "account_close_date": datetime.strptime(item[5], "%Y/%m/%d")
        }  # create a dictionary with these keys and values named user

        user_list.append(user)  # append that to the list of users

with open('secoundtext.txt', 'w') as file:  # create and open the secound file
    for user in user_list:  # loop for each user in the list
        file.write("{name}, {age}, {username}, {password}, {diff}\n".format(name=user["name"],
                                                                            age=user["age"], username=user["username"], password=user["password"],
                                                                            diff=(user["account_close_date"] - user["account_signup_date"]).days))  # write the file with the correctly formatted text
</code></pre>
<p>Which would result in that "secoundtext.txt" would look like this:</p>
<pre><code>Freddy, 36, fred, 123f, 637
Tara, 25, mtara, 123t, 330
</code></pre>
</div>
<span class="comment-copy">Why weren't you able to achieve that, other than not having written any code for it? Explain what you want it to look like, what you tried, and what happened instead of the desired outcome.</span>
<span class="comment-copy">For starting: <code>with open(sampletext.txt,'w')</code> should be <code>with open(sampletext.txt,'r')</code></span>
<span class="comment-copy">Do you know how to create a dictionary?</span>
<span class="comment-copy">The <code>csv</code> module could be a good startpoint here...</span>
<span class="comment-copy">I tried to have the code into a dictionary by using the zip(), by combining keys and values, but it didn't work. I'm able to get only the first line into the dictionary, but even then, I can't have them set as keys.</span>
<span class="comment-copy">Thank You for the output. It is truly helpful.</span>
<span class="comment-copy">@Mike You should upvote and Accept an answer if you feel that it helps you in any way. A good way of expressing gratitude towards those who helped.</span>
<span class="comment-copy">Can you please help me on how I can call the dictionary with a function ?</span>
<span class="comment-copy">Why'd you want to call dictionary with a function? Also, what does that even mean? Calling a dictionary with a function sounds ambiguous. Either ask another question addressing the same or Edit your original post to show what you ask for...</span>
<span class="comment-copy">Since I'm learning to use functions that grab their data from dictionaries, I thought, why don't we try it out. It's certainly quite a complex way to learn the language, but, I assume it has its own benefits. Thank You.</span>
<span class="comment-copy">Thank You for the output. It is truly helpful.</span>
<span class="comment-copy">Thank You for the output. It is truly helpful.</span>
<span class="comment-copy">@Mike Please consider upvoting or accepting the answer if it is helpful in resolving your issue.</span>
<span class="comment-copy">Thank You for the output. It is truly helpful.</span>
