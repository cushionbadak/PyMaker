<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/10775894/converting-a-string-representation-of-a-list-into-an-actual-list-object">Converting a string representation of a list into an actual list object [duplicate]</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I have a string formatted as a list of lists in a file. How can I get this into a variable in Python as a list?</p>
<p>E.g. data-string.txt</p>
<pre><code>with open('data-string.txt') as f:
    str = f.read()
</code></pre>
<p>and</p>
<pre><code>str = "[[1, 2, 3], [2, 3, 4], [3, 4, 5]]"
</code></pre>
<p>are equivalent.
How can I get this into a real Python list? I have looked into splitting using multiple delimiters, but if that's the right way I haven't been able to set it up correctly.</p>
</div>
<div class="post-text" itemprop="text">
<p>You may use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval()</code></a> to do your bidding:</p>
<pre><code>import ast
s = ast.literal_eval("[1,2,3]")
s == [1,2,3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>json</code> for some cases, but @Bharel answer is better at all</p>
<pre><code>import json

with open('data-string.txt') as f:
    lst = json.load(f)
    print(lst)  # [[1, 2, 3], [2, 3, 4], [3, 4, 5]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about this:</p>
<pre><code>// convert original string to type list
str1 = list("[[1, 2, 3], [2, 3, 4], [3, 4, 5]]")

// create a new string using the following, which converts same to a 3 x 3 list
str2 = ''.join(str(e) for e in str1)

// prints out as [[1, 2, 3], [2, 3, 4], [3, 4, 5]]

// https://stackoverflow.com/questions/5618878/how-to-convert-list-to-string
</code></pre>
</div>
<span class="comment-copy">Fantastic. Never heard of abstract syntax trees before. Thank you!</span>
<span class="comment-copy">This actually solves my purpose as well. Thank you.</span>
