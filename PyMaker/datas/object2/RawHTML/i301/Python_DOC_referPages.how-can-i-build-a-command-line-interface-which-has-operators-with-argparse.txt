<div class="post-text" itemprop="text">
<p>How can I build the following with argparse:</p>
<p>Synopsis: python3 program.py [operation] [options] target</p>
<p>Operations: install, uninstall, update or remove (you choose one).</p>
<p>I want the operations to have their own set of options. I'm not looking for specific code, just some general guidance.</p>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like you want <a href="https://docs.python.org/3/library/argparse.html#sub-commands" rel="nofollow noreferrer"><code>subparsers</code></a>. The <code>dest='subparser_name'</code> bit allows you to tell which subparser has been called.</p>
<pre><code>import argparse

parser = argparse.ArgumentParser()
subparsers = parser.add_subparsers(dest='subparser_name')
install_parser = subparsers.add_parser('install')
install_parser.add_argument('target')
subparsers.add_parser('uninstall')

print(parser.parse_args(['uninstall']))
print(parser.parse_args(['install', 'target=foo']))
print(parser.parse_args(['uninstall', 'install', 'target=foo']))
</code></pre>
<p>Output:</p>
<pre><code>Namespace(subparser_name='uninstall')
Namespace(subparser_name='install', target='target=foo')
usage: test.py [-h] {install,uninstall} ...
test.py: error: unrecognized arguments: install target=foo
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here how I am doing for similar requirements, However this might be a very basic method and beginner level:<br/>
Example (getopt):</p>
<pre><code>#!/usr/bin/python
import sys, getopt
def main(argv):
   arg=''
   try:
      opts, args = getopt.getopt(argv,"i:u:r:",["install=","update=","remove="])
   except getopt.GetoptError:
      print('test.py -i &lt;myinput&gt;')
      sys.exit(2)
   for opt, arg in opts:
      if opt in ("-i", "--install"):
         #Your operation
         print('installing something based on my input',arg)
         sys.exit()
      elif opt in ("-u", "--update"):
         #Your operation
         print('updating something based on my input',arg)
         sys.exit()
      elif opt in ("-r", "--remove"):
         #Your operation
         print('removing something based on my input',arg)
         sys.exit()  

if __name__ == "__main__":
   main(sys.argv[1:])
</code></pre>
<p>Reference: <a href="https://www.tutorialspoint.com/python/python_command_line_arguments.htm" rel="nofollow noreferrer">Link</a></p>
<p>Usage:</p>
<pre><code>python test.py -i myinput
</code></pre>
<p>Output:</p>
<pre><code>installing something based on my input myinput
</code></pre>
</div>
<span class="comment-copy">Use <a href="https://docs.python.org/dev/library/argparse.html#argparse.ArgumentParser.add_subparsers" rel="nofollow noreferrer"><code>ArgumentParser.add_subparsers</code></a></span>
