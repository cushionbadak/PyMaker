<div class="post-text" itemprop="text">
<p>This is my code:</p>
<pre><code>if self.a == "":
    raise MyException("The required parameter 'a' is empty")
if self.b == "":
    raise MyException("The required parameter 'b' is empty")
if self.v == "":
    raise MyException("The required parameter 'v' is empty")
if self.g == "":
    raise MyException("The required parameter 'g' is empty")
if self.quality == "":
    raise MyException("The required parameter 'quality' is empty")
if self.abc == "":
    raise MyException("The required parameter 'abc' is empty")
</code></pre>
<p>It's seems like too much repeated pattern. The issue is that I can't find a way to make it simpler and compact.</p>
<p>Any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you still want to validate all arguments, here is a solution using <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr</code></a> as suggested above:</p>
<pre><code>for attribute in ["a", "b", ...]:
    if getattr(self, attribute) == "":
        raise MyException(f"The required parameter '{attribute}' is empty")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I wouldn't advocate for getting really fancy trying to eliminate all redundancy. Your code is easy to understand. Doing something clever with <code>getattr()</code> or whatnot to avoid repeating each variable name twice will turn a simple set of <code>if</code> statement into something significantly more complicated.</p>
<p>That said, this is one of the rare times where compacting the code is worth it:</p>
<pre><code>if self.a == "":       raise MyException("The required parameter 'a' is empty")
if self.b == "":       raise MyException("The required parameter 'b' is empty")
if self.v == "":       raise MyException("The required parameter 'v' is empty")
if self.g == "":       raise MyException("The required parameter 'g' is empty")
if self.quality == "": raise MyException("The required parameter 'quality' is empty")
if self.abc == "":     raise MyException("The required parameter 'abc' is empty")
</code></pre>
<p>You could extract an exception raising method out of it; particularly valuable if you do this type of validation in many other places.</p>
<pre><code>def requireNonEmpty(value, name):
    if value == "":
        raise MyException("The required parameter '{}' is empty".format(name))

requireNonEmpty(self.a, 'a')
requireNonEmpty(self.b, 'b')
requireNonEmpty(self.v, 'v')
requireNonEmpty(self.g, 'g')
requireNonEmpty(self.quality, 'quality')
requireNonEmpty(self.abc, 'abc')
</code></pre>
</div>
<span class="comment-copy"><a href="https://stackoverflow.com/a/18538330/7311767">getattr</a></span>
<span class="comment-copy">Lazy solution: don't bother doing any checking at all. If your program crashes later because one of the parameters has a bad value, then mission accomplished -- the program halted and the user knows what the problem is.</span>
<span class="comment-copy">@StephenRauch How would I create the name of the parameter that is missing?</span>
<span class="comment-copy">@Kevin My users aren't programmers. The error appear to the UI must be well written so they will know which setting is missing. I can't show them trace of error.</span>
<span class="comment-copy">The problem is that I don't have ["a", "b", ...]  I have [self.a, self.b]   - self shouldn't be shown in the message</span>
<span class="comment-copy">@Luis <code>getattr(self, "attribute")</code> is equivalent to <code>self.attribute</code></span>
<span class="comment-copy">@Luis the message shown will be identical to the ones you have in your question</span>
