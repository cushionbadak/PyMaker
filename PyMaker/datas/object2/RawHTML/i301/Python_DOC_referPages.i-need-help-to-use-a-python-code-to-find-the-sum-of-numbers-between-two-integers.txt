<div class="post-text" itemprop="text">
<p>I need help to use python code to find the sum of numbers between two integers that were inputted.</p>
<p>I have included my code so far below but it doesn't seem to work.</p>
<pre><code>num1 = int(input('What is your first number? '))
num2 = int(input('What is your second number? '))
if num1 &gt; num2:
    high = num1
    low = num2
if num1 &lt; num2:
    low = num1
    high = num2
def main():
    sum = low
    low = low + 1
    sum = low + sum
    if low &gt; high:
        print('The sum is', sum)
    if low &lt; high:
        main()
</code></pre>
<p>The question is below:</p>
<blockquote>
<p>Consider an algorithm that takes 2 integers and finds the sum of all the integers between them (including the two numbers).</p>
<p>For example, the numbers 2 and 5 give a sum of 14.
  2 + 3 + 4 + 5 = 14</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<pre><code>def main(num1, num2):
    sum = 0
    if num2 &gt; num1:
        for i in range(num1, num2+1):
            sum += i
    elif num1 &gt; num2:
        for i in range(num2, num1+1):
            sum += i
    else: sum = num1*2
    return sum


num1 = int(input('What is your first number? '))
num2 = int(input('What is your second number? '))
sum = main(num1, num2)
print('The sum is:', sum)
</code></pre>
<p>Read line by line and it will make sense :) Good luck</p>
</div>
<div class="post-text" itemprop="text">
<p>The easiest approach would be to use the built-in <code>sum</code> function over a <code>range</code> from <code>low</code> to <code>high</code>. Note the ranges exclude the upper barrier, so you'd have to increment it to include the inputted <code>high</code> value:</p>
<pre><code>sum_between = sum(range(low, high + 1))
</code></pre>
<p>A more performant approach (at least for large ranges) would probably be to use the <a href="https://en.wikipedia.org/wiki/Arithmetic_progression#Sum" rel="nofollow noreferrer">formula for a sum of an arithmetic progression</a>:</p>
<pre><code>n = high - low + 1
sum_between = n * (low + high) / 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can remove the <code>for-loop</code> entirely. just use Python built-in tools, for your target, use <code>sum(range(num1,num2+1))</code>, your check that <code>num1&gt;num2</code> or <code>num1&lt;num2</code> are correct, and please keep them in the code, but you have one unhandle case : when they are equal, and at that case you just return <code>sum = num1</code>.</p>
<p>hope it helped </p>
</div>
<span class="comment-copy">is the indentation of the question given here correct? if yes, when do you see the function named <code>main</code> being actually called in the code?</span>
<span class="comment-copy">Hi, as I'm quite new to coding I put def main(): above the sum = low part if that's what you meant.</span>
<span class="comment-copy">@Anthony <code>def main()</code> is <i>defining</i> the function. To <i>run</i> the function, you need <code>main()</code> somewhere else in your code.</span>
<span class="comment-copy">a function is "defined" using the def keyword. defining the function never actually executes or runs it. (It is like putting a few lines of code together and giving them a name.) you have to "call" the function after defining it. For example, by writing <code>main()</code>. But the calling has to be outside the function definition.</span>
<span class="comment-copy">Python has a list of in-built functions to make  life of programmers easy. For eg, the whole code you have written is just <code>sum(range(num1, num2+1))</code>. To understand what this does, I suggest you start from <a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">here</a>.</span>
<span class="comment-copy">apart from having no explanation for someone who is clearly new to programming, this fails in cases where num2 is smaller than num1.</span>
<span class="comment-copy">I fixed it. Good luck my friend!</span>
