<div class="post-text" itemprop="text">
<p>I want to print number like 
"Factors of (input_number) are " 1,2,5,10,50
but is printing with an extra comma like this:
         1,2,3,4,5,</p>
<pre><code>input_number = int(input("Enter A Number Please: "))
factors = []
for divisor in range(1, input_number+1):
        mod = input_number % divisor
        if mod == 0:
            factors.append(divisor)
print("Factors of %i are - " % input_number)
for element in factors:
        print(element, end=",")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>input_number = int(input("Enter A Number Please: "))
factors = []
for divisor in range(1, input_number+1):
        mod = input_number % divisor
        if mod == 0:
            factors.append(divisor)
print("Factors of %i are - " % input_number+ ",".join(str(row) for row in factors))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to print the elements of an iterable with a given separator, you should send that iterable to <code>print</code> and unpack it, and use the <code>sep</code> argument, rather than printing each element separately with the <code>end</code> argument (which, as you saw, puts the given string at the "end" of each element, including the last one).</p>
<pre><code>print(*factors, sep=",")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python, the <code>end</code> keyword argument to <code>print</code> will specify what should be printed after the string you pass in as the first positional argument. So after each element you print, you're telling Python to print a comma (<code>,</code> character) and that's exactly what it is doing.</p>
<p>One way you could do achieve this is by explicitly not setting the <code>end</code> keyword argument for the last item in the array using array <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumeration</a>, like so:</p>
<pre class="lang-py prettyprint-override"><code>print("Factors: ", end="")
for index, element in enumerate(factors):
    if index == len(factors) - 1:
        print(element)
    else:
        print(element, end=",")
</code></pre>
<p>Another way you could accomplish this would be to convert your array into strings then use the <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>.join()</code></a> method, which concatenates the elements of an iterable with a "glue" string.</p>
<pre class="lang-py prettyprint-override"><code>print("Factors: ", end="")
factors = map(str, factors)
print(",".join(factors))
</code></pre>
<p>It may be helpful to note that casting to <code>str</code> should not affect the way non-strings are printed to STDOUT because they would implicitly be cast to strings when printing. For the second method, it may be helpful to reference the Python documentation for <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a>.</p>
</div>
<span class="comment-copy">note: the upper limit for your test should be <code>int(sqrt(input_number)) (+ 1)</code>. there is no need to go any further.</span>
<span class="comment-copy">This <a href="https://stackoverflow.com/questions/438684/how-to-convert-a-list-of-longs-into-a-comma-separated-string-in-python">other question</a> seems to have your answer.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/438684/how-to-convert-a-list-of-longs-into-a-comma-separated-string-in-python">How to convert a list of longs into a comma separated string in python</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/44778/how-would-you-make-a-comma-separated-string-from-a-list-of-strings">How would you make a comma-separated string from a list of strings?</a></span>
<span class="comment-copy">@rovyko The elements are not strings.</span>
<span class="comment-copy">I didn't know that the <code>sep</code> keyword argument existed until just now. <a href="https://docs.python.org/3.5/library/functions.html#print" rel="nofollow noreferrer">Link to documentation</a> for others.</span>
