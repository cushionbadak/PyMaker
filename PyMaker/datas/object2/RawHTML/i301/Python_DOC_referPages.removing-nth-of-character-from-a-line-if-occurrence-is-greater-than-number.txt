<div class="post-text" itemprop="text">
<p>I take in a CSV which can have more delimiters than desired(problem with the source the CSV is downloaded from and I cannot change that)
If the number of delimiters is greater than 13 (amount of columns i later print out) then I need to delete 4th delimiter(otherwise my script will give an error and printed out version is all messed up, 4th is the location extra delimiters are located)
Code so far is this, I get the count, but cannot delete it. What am I doing wrong?</p>
<p>f is one csv file out of many in a for loop</p>
<pre><code>with open(f, "r") as file:
    filedata = file.read()
    for line in filedata.split("\n"):
        count = line.count(";")
        print(count)  
        limit = 13
        if count &gt; limit:
            line.replace(";", "", 4)
        print(line)
</code></pre>
<p>Thanks in advance!<br/>
Raidar</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>str.replace</code> method returns the replaced string, rather than replacing the string in-place. You should assign the returning value from <code>replace</code> back to the <code>line</code> variable.</p>
<p>Change:</p>
<pre><code>line.replace(";", "", 4)
</code></pre>
<p>to:</p>
<pre><code>line = line.replace(";", "", 4)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>str.replace does not modify the string.</p>
<p>Change </p>
<p><code>line.replace(";", "", 4)</code></p>
<p>to</p>
<p><code>line = line.replace(";", "", 4)</code></p>
<p>From the <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p><strong>str.replace(old, new[, count])</strong></p>
<p>Return a copy of the string with all occurrences of substring old replaced by new. If the optional argument count is given, only the first count occurrences are replaced.</p>
</blockquote>
</div>
<span class="comment-copy">Have you controlled that the extra delimiter is not enclosed in quotes? It is common in csv files and correctly handled by the csv module.</span>
<span class="comment-copy"><code>line.replace(";", "", 4)</code> won't replace the 4th appearance of <code>";"</code>, but the first 4. So your replace strategy here won't work anyway.</span>
<span class="comment-copy">Besides these very correct comments: I'd like to add that for iterating over the lines of a text file you do not need to load it completely into a variable <code>filedata</code> to then split this by newline characters. You simply can iterate over <code>file</code> like <code>for line in file:</code></span>
<span class="comment-copy">Thank You for clarifying it! Have to find another way to index the nth location and replace it.</span>
