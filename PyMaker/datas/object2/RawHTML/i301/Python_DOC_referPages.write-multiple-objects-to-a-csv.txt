<div class="post-text" itemprop="text">
<p>I have multiple objects created from my class and would like to write each of them to an individual row in a CSV file.</p>
<p>This is an example of how my code would look.</p>
<pre><code>p1 = Person("name1", "first", 2.5, 0.5, 3.6)
p2 = Person("name2", "second", 0.6, 5, 3)
p3 = Person("name3", "third", 1, 0.5, 3.4)
p4 = Person("name4", "fourth", 1.4, 0.3, 3.2)
</code></pre>
<p>So I would like all the info for a person to be stored in a CSV file to look like this:</p>
<pre><code>name1 first 2.5 0.5 3.6
name2 second 0.6 5 3
</code></pre>
<p>etc.</p>
<p>I know how to write csv's in general using the csv import, just not with data like this. </p>
<p>Person Class:</p>
<pre><code>class Person: 
    def __init__(self, name, number, score1, score2, score3):
        self.name = name 
        self.number = number
        self.score1 = score1
        self.score2 = score2
        self.score3 = score3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can get the fields of an instance as a <code>dict</code> by using <code>vars</code>:</p>
<pre><code>&gt;&gt;&gt; Person("name1", "first", 2.5, 0.5, 3.6)
{'name': 'name1', 'first_name': 'first', 'a': 2.5, 'b': 0.5, 'c': 3.6}
</code></pre>
<p>This allows to use a <a href="https://docs.python.org/3/library/csv.html#csv.DictWriter" rel="nofollow noreferrer"><code>csv.DictWriter</code></a> to write columns in a predictable way:</p>
<pre><code>import csv

with open('names.csv', 'w', newline='') as csvfile:
    fieldnames = ['name', 'first_name', 'a', 'b', 'c']  # adjust this to your class' fields
    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
    writer.writeheader()
    writer.writerow(vars(p1))
    writer.writerow(vars(p2))
    writer.writerow(vars(p3))
    writer.writerow(vars(p4))
</code></pre>
</div>
<span class="comment-copy">What is the structure of the Person() class? You need to extract the relevant attributes for the class and then write each to the CSV. You may get a dict of the attributes of an instance by calling &lt;object&gt;.__dict__ (aka p1.__dict__).</span>
<span class="comment-copy">Hi, Thanks! This was what I was looking for. Is it also possible to select only certain elements of the object, say the name and one of the scores, and put that into the csv?</span>
<span class="comment-copy">@Jimmy Just exclude them from <code>fieldnames</code> and pass <code>extrasaction='ignore'</code> to the <code>csv.DictWriter</code>. See the documentation of the <code>DictWriter</code> for details.</span>
<span class="comment-copy">Perfect, thanks.</span>
