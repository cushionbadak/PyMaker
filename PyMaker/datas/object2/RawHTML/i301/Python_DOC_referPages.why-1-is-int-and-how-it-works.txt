<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/12876177/how-to-create-a-tuple-with-only-one-element">How to create a tuple with only one element</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>In Python 3.6, <code>x = (1)</code>and type of x is int, it's same as <code>x = 1</code>.
So what's the purpose of <code>()</code>? Why is it not a tuple?</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>A special problem is the construction of tuples containing 0 or 1
  items: the syntax has some extra quirks to accommodate these. Empty
  tuples are constructed by an empty pair of parentheses; <strong>a tuple with
  one item is constructed by following a value with a comma (it is not
  sufficient to enclose a single value in parentheses)</strong>.</p>
</blockquote>
<p>What defines a tuple is not the brackets, it's the commas, so <code>(1, 2, 3)</code> is a tuple, but it's not because of the brackets, it's because of the commas which means just using <code>1, 2, 3</code> would work the same. A tuple with no elements is represented with empty brackets (e.g. <code>()</code>). A tuple with one element is represented with a value, followed by a comma (e.g. <code>1,</code>).</p>
</div>
<span class="comment-copy">Brackets can be used around any expressions, like <code>1 + (1 + 1)</code>. <code>1</code> itself is an expression, so brackets can be used around it.</span>
<span class="comment-copy"><code>()</code> <i>is</i> a tuple, an empty one. Non-empty tuples require commas: <code>1,</code>.</span>
<span class="comment-copy">Why is this question marked as a duplicate? I don't see any answers in attached question as author doesn't ask how to create a single item tuple, but rather what's the purpose of construction <code>(1)</code>, which only @Sweeper answered. @jonrsharpe @paul-rooney @bear-brown @bruno-desthuilliers</span>
<span class="comment-copy">@deathangel908 there is no <i>"purpose of construction"</i>, <code>(1)</code> is <code>1</code>. The OP asked why it wasn't a tuple; if they still have questions they're welcome to edit to clarify. Note also you can only ping one user per comment.</span>
<span class="comment-copy"><code>What defines a tuple is not the brackets, it's the commas</code> really good, my question may be not clear enough, but this is the answer I need, thanks.</span>
<span class="comment-copy"><i>"A tuple with one element always unpacks itself"</i> - no, without the comma it's <i>not a tuple to start with</i>. A one-tuple <i>doesn't</i> unpack itself, as your example <code>x = (1,)</code> shows; <code>x</code> is then a tuple, not the unpacked integer. Also the parentheses are optional there, <code>x = 1,</code> works too.</span>
<span class="comment-copy">@jonrsharpe Oh man, you're right! I always though that the brackets define a tuple, it's commas that define a tuple, brackets are just so it'd be more easily distinguish. If it wasn't for your comment, I'd always thing that brackets define a tuple. I'll update my answer so it's correct. Thanks!</span>
<span class="comment-copy">Really? It's in the docs <i>you quoted from</i>: <i>"A tuple consists of a number of values separated by commas... they may be input with or without surrounding parentheses"</i>. That's <i>why</i> 0- and 1-tuples are a <i>"special problem"</i>.</span>
<span class="comment-copy">I knew what kinds of capabilities a tuple had from other sources and I don't think I've ever heard them specify commas being the crucial part, I never looked at the docs to see how tuples are formed as I though I knew that. I never thought about tuples like that. Now even generator generator comprehensions make sense, the brackets always confused me. I can't believe this went over my head! I guess I just have to look at the docs thoroughly next time I want to post an answer.</span>
