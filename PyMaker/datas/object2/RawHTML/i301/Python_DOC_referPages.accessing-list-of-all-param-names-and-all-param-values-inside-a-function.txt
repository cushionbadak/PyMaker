<div class="post-text" itemprop="text">
<p>I'm trying to create a list of names for my parameters that I want a function to take. The length should be <code>32</code> and I want something like <code>bs=[b0,b1,b2,...,b31]</code> but I don't want to write in <code>b0,b1,...</code> for the hand so is there any way to write a small programme in Python that can generate such a list?</p>
<p>EDIT: Is there anyway to make the parameter values not be strings? I'm trying to put them as arguments in a function like so:</p>
<pre><code>def chiwork(a0,a1,a2,a3,bs):
    ana=np.array([a0,a1,a2,a3])
    betalat=[0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3]
    chia=sum((ana-a)**2)+sum((bs*a[betalat]-amssr)**2)
    return chia
</code></pre>
<p>The function needs to "know" that there are 32 bs but there is no way to unpack it when the elements in bs are in a list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use list comprehension:</p>
<pre><code>bs=['b'+str(i) for i in range(32)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think this meets all your requirements, making generous use of <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">Python's data model for function objects</a>:</p>
<pre><code>def my_func (b1, b2, b3, a1, a2, a3):

    par_names = my_func.__code__.co_varnames[:6]    # A tuple of strings of all param names
                                                    # It's ok to hard-code 6.
    local_ns = locals()
    par_vals  = [local_ns[x] for x in par_names]    # A list of all param values

    another_func(par_vals[0], par_vals[3])
    another_func(*par_vals[0:2])                    # Unpacking first 2 params

def another_func(param1, param2):
    print ("Inside another_func, (param1, param2) are:", param1, ",", param2)

my_func(10, 20, 30, 40, 50, 60)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>Inside another_func, (param1, param2) are: 10 , 40
Inside another_func, (param1, param2) are: 10 , 20
</code></pre>
<p><strong>Notes:</strong></p>
<ol>
<li>No need to follow naming conventions like <code>b1</code>, <code>b2</code>, for param names.</li>
<li>Works for any number of parameters (not just the 32 in your example).</li>
<li>Works even if some of the parameters are kwargs.</li>
<li>As documented, <code>__code__.co_varnames</code> will contain the parameter names, followed by local variable names. Hence we're indexing for the first 6 elements, to get only the parameter names.</li>
</ol>
</div>
<span class="comment-copy">I think you're looking for <code>*args</code> and <code>**kwargs</code>. See <a href="https://stackoverflow.com/questions/919680/can-a-variable-number-of-arguments-be-passed-to-a-function">Can a variable number of arguments be passed to a function</a>.</span>
