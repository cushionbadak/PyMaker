<div class="post-text" itemprop="text">
<p>I have searched many answers on StackOverflow, but I don't seem to find exactly what I want. I have just installed <code>Python 3.7</code> and when I run the command <code>C:\Users\Dell&gt;python</code> I get this:</p>
<blockquote>
<pre><code>Python 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 11:57:41) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
</code></pre>
</blockquote>
<p>I know it has something to do with Anaconda. But, I don't know exactly what's wrong.</p>
<p><strong><em>Question</em></strong></p>
<p>I expected to see something like <code>Python 3.7.0</code>. Can someone please tell me where am I going wrong and how should I change this to what I want? What I should do to get <code>Python 3.7</code> by default?</p>
</div>
<div class="post-text" itemprop="text">
<p>The answer is: Don't run <code>python</code>. Run <a href="https://docs.python.org/3/using/windows.html#python-launcher-for-windows" rel="nofollow noreferrer"><code>py</code>, the Python launcher for Windows</a>. By default, it runs the latest installed version of Python. If you want a specific version, you can follow it with a switch, e.g. <code>py -2</code> for latest Python 2, <code>py -3.6</code> for 3.6, etc.</p>
<p>Yes, you could go mucking about with your <code>PATH</code> environment variable settings to try putting the Python 3.7 install folder ahead of 3.6, but then you just have the same problem again a few months from now when you install 3.8. The launcher was created precisely because of the difficulty of managing side-by-side Python installations on Windows, and solves all of these problems seamlessly (plus, it's four fewer characters to type if all you want is the latest installed version!).</p>
<p>Note that for consistency, you basically never want to launch other utilities by name, instead using the <code>py</code> launcher and the <code>-m</code> switch to make sure you're launching the tool associated with the version you expect. So for example, instead of running <code>pip ...args...</code>, run <code>py -mpip ...args...</code>, which ensures you run the <code>pip</code> corresponding to the Python launcher's default Python version.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to have your python 3.7 version in your path variable higher than that 3.6 version.</p>
</div>
<span class="comment-copy">Check windows environment variables for PYTHONPATH and PATH.  You never know there are other process also install a different version of python and set the path.  If you have sufficient resources, it is recommended to use VM with ubuntu/linux.</span>
<span class="comment-copy">@mootmoot: <code>PYTHONPATH</code> should be irrelevant (it's for adding additional user specified module import locations, Python itself doesn't set it or install anything to it). Only <code>PATH</code> matters.</span>
<span class="comment-copy">Thanks! this helped! Also, which python version is used to run a python script by default? if I run a script named <code>python abcxyz.py</code> does it run in the latest version?</span>
<span class="comment-copy">@Satya: That's actually the best part about the launcher. If you put in a UNIX-style shebang line in a standard form, <a href="https://www.python.org/dev/peps/pep-0397/#shebang-line-parsing" rel="nofollow noreferrer">the <code>py.exe</code> launcher will parse it and do The Right Thingâ„¢</a>, e.g. <code>#!/usr/bin/env python3</code> will launch the script with the latest 3.x Python installed. If, when you installed Python, the <code>py.exe</code> launcher was registered as the handler for the <code>.py</code> extension (the installer offers this option), you don't even need to type <code>py</code>; just running <code>abcxyz.py</code> will work. Makes it possible to write fully portable scripts.</span>
