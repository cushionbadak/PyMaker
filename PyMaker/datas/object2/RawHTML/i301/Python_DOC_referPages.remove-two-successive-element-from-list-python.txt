<div class="post-text" itemprop="text">
<p>There is a problem with removing successive elements from a list. 
For example I have an list;</p>
<pre><code>['aaaaa', '@someword', '@otherword','bbbb',...]
</code></pre>
<p>I want remove from list elements that has @ char. </p>
<pre><code>a = ['aaaaa', '@someword', '@otherword','bbbb']
for word in a:
    if '@' in word:
        print("found @ in word :" +word)
        a.remove(word)
</code></pre>
<p>The output is; (found only first element, skipped second one.)</p>
<pre><code>found @ in word :@someword
</code></pre>
<p>if I add some value between this element; </p>
<pre><code>a = ['aaaaa', '@someword', 'qqqq', '@otherword','bbbb']
</code></pre>
<p>It catch two of them; </p>
<pre><code>found @ in word :@someword
found @ in word :@otherword
</code></pre>
<p>I debug the code, if there are succesive somewords which include @ char, remove function skip the second one, because of the changing of indices after removing process. </p>
<p>how can i remove these words?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension to filter out elements based on a condition:</p>
<pre><code>&gt;&gt;&gt; original = ['aaaaa', '@someword', '@otherword','bbbb']
&gt;&gt;&gt; filtered = [item for item in original if '@' not in item]
&gt;&gt;&gt; filtered
['aaaaa', 'bbbb']
</code></pre>
<p>Or replace them:</p>
<pre><code>&gt;&gt;&gt; replaced = [item if '@' not in item else '' for item in original]
&gt;&gt;&gt; replaced
['aaaaa', '', '', 'bbbb']
</code></pre>
<p>See <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">documentation</a> for more info. Hope it helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>You should never change a list you are iteraring through, but rather make a new one:</p>
<pre><code>b = [word for word in a if not '@' in word]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you need to add the list 'a' into a list. The below code might help you</p>
<pre><code>a = ['aaaaa', '@someword', '@otherword','bbbb']
for word in list(a):
    if '@' in word:
        print("found @ in word :" +word)
        a.remove(word)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>word = ['aaaaa', '@someword', '@otherword','bbbb']    
filtered = list(filter( lambda x : '@' not in x ,word))
</code></pre>
<p>another way is you can user filter </p>
</div>
<div class="post-text" itemprop="text">
<p>It's not advisable to mutate the element of a list while you're looping over it.</p>
<pre><code>a = ['aaaaa', '@someword', '@otherword','bbbb'] 
for index,word in enumerate(a):
    print(index, word)
    if '@' in word:
        a.remove(word)
        print(a)
</code></pre>
<p>The output of this is </p>
<pre><code>(0, 'aaaaa')
(1, '@someword')
['aaaaa', '@otherword', 'bbbb']
(2, 'bbbb')
</code></pre>
<p>From this you can see that '@someword' is deleted and the element at index 2 is no longer '@otherword' it is now 'bbbb'. Therefore '@otherword' can not be deleted.</p>
<p>The second example you gave works because when you delete '@someword' the element at index 2 becomes '@otherword' therefore it can be deleted on the next iteration.</p>
<pre><code>(0, 'aaaaa')
(1, '@someword')
['aaaaa', 'qqqq', '@otherword', 'bbbb']
(2, '@otherword')
['aaaaa', 'qqqq', 'bbbb']
</code></pre>
<p>I'll advise you to create a new list and just store the elements that don't contain '@' in it </p>
<pre><code>a = ['aaaaa', '@someword', 'qqqq', '@otherword','bbbb']
new_list = [i for i in a if '@' not in i]
print(new_list) # ['aaaaa', 'qqqq', 'bbbb']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The actual problem here is that you are looping through a list that you are editing(removing/adding items). This means that when you remove item 2 while you're on the second item, you will then reach item 4 in the next iteration.</p>
<p>Solutions are to loop over a copy of the list, or to create a copy of the list and return that (with list comprehension for example)</p>
<p>A copy of the list can be created with <code>word[:]</code>.</p>
<pre><code>a = ['aaaaa', '@someword', '@otherword','bbbb']
for word in a[:]:
    if '@' in word:
        print("found @ in word :" +word)
        a.remove(word)
</code></pre>
</div>
<span class="comment-copy">You should never modify the list you are iterating through</span>
<span class="comment-copy">So, how can i do it?</span>
<span class="comment-copy">It works in c or java, what is the logic difference of python list?</span>
<span class="comment-copy">I actually don't know what the difference is; I'm not a professional programmer and only comfortable with python. But I think it's still not a good practice in C or Java</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1207406/how-to-remove-items-from-a-list-while-iterating">How to remove items from a list while iterating?</a></span>
