<div class="post-text" itemprop="text">
<p>I make simple script to test how I can remove empty quote from a list. The output actually coming from a device output and i save the output onto csv file.</p>
<p>This is my code</p>
<pre><code> mylist = [['Local Interface', '', 'Parent Interface', '', 'Chassis Id', '', 
 '', '', '', 'Port info', '', '', '', '', 'System Name'], ['ge-0/0/1', '', 
 '', '', '', ' -', '', '', '', '', '', '', '', '', ' 00:2d:b3:c9:e2:f0', ' 
 606', '', '', '', '', '', '', '', 'myhost-re01', '', '', '', ''], ['ge- 
 4/0/7', '', '', '', '', ' -', '', '', '', '', '', '', '', '', ' 
 00:2d:b3:c9:e2:f0', ' 628', '', '', '', '', '', '', '', 'myhost-re01', '', 
 '', '', ''], ['ge-4/0/6', '', '', '', '', ' -', '', '', '', '', '', '', '', 
 '', ' 00:2d:b3:c9:e2:f0', ' 629', '', '', '', '', '', '', '', 
 'myhost-re01', '', '', '', ''], ['ge-0/0/4', '', '', '', '', ' -', '', '', 
 '', '', '', '', '', '', ' 00:2d:b3:c9:e2:f0', ' 138739712', '', '', '', '', 
 'PE12XC1010', '', '', '', ''], ['ge-0/0/2', '', '', '', '', ' -', '', '', 
 '', '', '', '', '', '', ' 00:2d:b3:c9:e2:f0', ' gei_1/5', '', '', '', '', 
 '', 'PE13XC1011', '', '', '', '', ''], ['ge-3/3/0', '', '', '', '', ' -', 
 '', '', '', '', '', '', '', '', ' 0c:12:12:c7:c1:f7', ' gei_2/3', '', '', 
 '', '', '', 'PEUTV01-01XT', '', '', ''], ['ge-3/3/4', '', '', '', '', ' - 
 ', '', '', '', '', '', '', '', '', ' f0:1c:2d:22:37:c0', ' 783', '', '', 
 '', '', '', '', '', 'myhost-re01', ''], ['{master}']]
 print(mylist)
 mylist = list(filter(None,mylist))
 print(mylist)
</code></pre>
<p>The print out before and after filtering is same. </p>
<p>Seems easy to resolve but not success so far...hope someone could help me. Thanks</p>
<p>&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;
<strong>UPDATE1:</strong>
I have json api below that need to be parsed with values. For example lldp info output to be add onto "lldpinfo" or data[2]</p>
<pre><code>json1 = {
  "channel": "scanner",
  "action": "device_scan",
  "table": "D2",
  "device":[]
}
data = "hostname","ipaddress","lldpinfo"
</code></pre>
<p>The overall sample result when parse the value as below</p>
<pre><code>{
  "channel": "scanner",
  "action": "device_scan",
  "table": "D2",
  "device": [
    [
      "hostname": "test1",
      "ipaddress": "192.1.1.1",
      "lldpinfo": [ 
       [
        "Local port": "xe-3/0/3.0", 
        "Port Info": "  ae31.0", 
        "Mac address": " b0:c6:9a:63:80:40", 
        "Chassis Id": "xe-0/1/3.0", 
        "Neighbour Host Name": "host.xsrt1.net"
       ],
       [
        "Local port": "xe-3/0/3.0", 
        "Port Info": "  ae31.0", 
        "Mac address": " b0:c6:9a:63:80:40", 
        "Chassis Id": "xe-0/1/3.0", 
        "Neighbour Host Name": "host.xsrt1.net"
       ]
      ]
    },
    {
      "hostnname": "test2",
      "ipaddress": "192.1.1.2",
      "lldpinfo": [
      {
      }
     ]
    }
  ]
}
</code></pre>
<p>From above result the lldp info details is parse in [] .I think it should be in {} like below...</p>
<pre><code>"lldpinfo": [ 
 {
  "Local port": "xe-3/0/3.0", 
  "Port Info": "  ae31.0", 
  "Mac address": " b0:c6:9a:63:80:40", 
  "Chassis Id": "xe-0/1/3.0", 
  "Neighbour Host Name": "host.xsrt1.net"
  },
  {
   "Local port": "xe-3/0/3.0", 
   "Port Info": "  ae31.0", 
   "Mac address": " b0:c6:9a:63:80:40", 
   "Chassis Id": "xe-0/1/3.0", 
   "Neighbour Host Name": "host.xsrt1.net"
   }
  ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use:</p>
<pre><code>mylist = [['Local Interface', '', 'Parent Interface', '', 'Chassis Id', '',  '', '', '', 'Port info', '', '', '', '', 'System Name'], ['ge-0/0/1', '',  '', '', '', ' -', '', '', '', '', '', '', '', '', ' 00:2d:b3:c9:e2:f0', '  606', '', '', '', '', '', '', '', 'myhost-re01', '', '', '', ''], ['ge-  4/0/7', '', '', '', '', ' -', '', '', '', '', '', '', '', '', '  00:2d:b3:c9:e2:f0', ' 628', '', '', '', '', '', '', '', 'myhost-re01', '',  '', '', ''], ['ge-4/0/6', '', '', '', '', ' -', '', '', '', '', '', '', '',  '', ' 00:2d:b3:c9:e2:f0', ' 629', '', '', '', '', '', '', '',  'myhost-re01', '', '', '', ''], ['ge-0/0/4', '', '', '', '', ' -', '', '',  '', '', '', '', '', '', ' 00:2d:b3:c9:e2:f0', ' 138739712', '', '', '', '',  'PE12XC1010', '', '', '', ''], ['ge-0/0/2', '', '', '', '', ' -', '', '',  '', '', '', '', '', '', ' 00:2d:b3:c9:e2:f0', ' gei_1/5', '', '', '', '',  '', 'PE13XC1011', '', '', '', '', ''], ['ge-3/3/0', '', '', '', '', ' -', '', '', '', '', '', '', '', '', ' 0c:12:12:c7:c1:f7', ' gei_2/3', '', '',  '', '', '', 'PEUTV01-01XT', '', '', ''], ['ge-3/3/4', '', '', '', '', ' -  ', '', '', '', '', '', '', '', '', ' f0:1c:2d:22:37:c0', ' 783', '', '',  '', '', '', '', '', 'myhost-re01', ''], ['{master}']]

mylist = list(map(lambda x: list(filter(None,x)), mylist))
print(mylist)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[['Local Interface', 'Parent Interface', 'Chassis Id', 'Port info', 'System Name'], ['ge-0/0/1', ' -', ' 00:2d:b3:c9:e2:f0', '  606', 'myhost-re01'], ['ge-  4/0/7', ' -', '  00:2d:b3:c9:e2:f0', ' 628', 'myhost-re01'], ['ge-4/0/6', ' -', ' 00:2d:b3:c9:e2:f0', ' 629', 'myhost-re01'], ['ge-0/0/4', ' -', ' 00:2d:b3:c9:e2:f0', ' 138739712', 'PE12XC1010'], ['ge-0/0/2', ' -', ' 00:2d:b3:c9:e2:f0', ' gei_1/5', 'PE13XC1011'], ['ge-3/3/0', ' -', ' 0c:12:12:c7:c1:f7', ' gei_2/3', 'PEUTV01-01XT'], ['ge-3/3/4', ' -  ', ' f0:1c:2d:22:37:c0', ' 783', 'myhost-re01'], ['{master}']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a nested list comprehension to exclude falsey items (in this case empty strings) from your nested list.</p>
<pre><code>mylist = [[x for x in line if x] for line in mylist]
</code></pre>
<p>See <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">list comprehensions</a></p>
<p>This is one list comprehension:</p>
<pre><code>[x for x in line if x]
</code></pre>
<p>nested inside another:</p>
<pre><code>[... for line in mylist]
</code></pre>
<p>giving you a nested list as output.</p>
</div>
<div class="post-text" itemprop="text">
<p>With list comprehension and filtering out those items of your sublist that equal to an empty string</p>
<pre><code>[[sl for sl in sublist if sl != ''] for sublist in mylist]
</code></pre>
<p>Loops over your list</p>
<pre><code>[.. for sublist in mylist]
</code></pre>
<p>and for each sublist only takes those that are not <code>''</code></p>
<pre><code>[sl for sl in sublist if sl != '']
</code></pre>
<p>If you want to use <code>filter</code> this would be</p>
<pre><code>[filter(lambda x: x != '', sublist) for sublist in mylist]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use <code>filter</code> function in list comprehensions:</p>
<pre><code>mylist = mylist = [['Local Interface', '', 'Parent Interface', '', 'Chassis Id', '',
 '', '', '', 'Port info', '', '', '', '', 'System Name'], ['ge-0/0/1', '',
 '', '', '', '', '', '', '', '', '', '', ''], ['{master}']]

new_list = [list(filter(None,n)) for n in mylist]

print(new_list)
</code></pre>
<p><strong>output</strong></p>
<pre><code>[['Local Interface', 'Parent Interface', 'Chassis Id', 'Port info', 'System Name'], ['ge-0/0/1'], ['{master}']]
</code></pre>
</div>
<span class="comment-copy">This is the right way!</span>
<span class="comment-copy">Yup...got clean output ...thanks</span>
<span class="comment-copy">possible to delete the first.... ['Local Interface', 'Parent Interface', 'Chassis Id', 'Port info', 'System Name'], empty [] and  ['{master}'] in the list?</span>
<span class="comment-copy">Sorry I do not understand...Do you want to flatten the list?</span>
<span class="comment-copy">No...If the list got empty [] and specific list that need to be deleted in this case ['Local Interface', 'Parent Interface', 'Chassis Id', 'Port info', 'System Name'], empty [] and ['{master}']...</span>
<span class="comment-copy">You also filter <code>None</code>, <code>False</code>, and <code>0</code></span>
<span class="comment-copy">@ezdazuzena It's a nested list of strings, not of <code>None</code>, <code>False</code> and <code>0</code>. It has the same effect as <code>filter(None, ...)</code></span>
<span class="comment-copy">You're right, I was too fast. My bad.</span>
<span class="comment-copy">Hi...this method also works. Thank you. What is the different compare of using comprehension and lambda operator?</span>
<span class="comment-copy">@chenoi In Python 3, <code>filter</code> and <code>map</code> do not return lists. They return iterable objects (which can be transformed to lists). A list comprehension is a syntax purely for building a list in a transparent way. Use whichever you find more readable.</span>
<span class="comment-copy">Thank you...im getting  [&lt;filter object at 0x7f033380ef98&gt;, &lt;filter object at 0x7f0332945cc0&gt;, &lt;filter object at 0x7f0332945d30&gt;, &lt;filter object at 0x7f0332945da0&gt;, &lt;filter object at 0x7f0332945e10&gt;, &lt;filter object at 0x7f0332945e80&gt;, &lt;filter object at 0x7f0332945ef0&gt;, &lt;filter object at 0x7f0332945f60&gt;, &lt;filter object at 0x7f0332945fd0&gt;]</span>
<span class="comment-copy">Changed the answer</span>
<span class="comment-copy">Yup...it works...now...Thanks</span>
