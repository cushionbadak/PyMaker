<div class="post-text" itemprop="text">
<p>I'am Trying to Communicate with Arduino using serial communication in python. There is this program from arduino <a href="https://www.arduino.cc/en/Tutorial/ReadASCIIString" rel="nofollow noreferrer">https://www.arduino.cc/en/Tutorial/ReadASCIIString</a> . Simply sending a " 120,200,100" to control 3 LEDS. When I tried it in python writing data to the arduino so simply </p>
<p>arduino.write(b'120,10,244\n') </p>
<p>and it works. But my main problem is that if I assigned those values to a variable which gets change through a GUI for example a PyQT slider which I'am planning to implement it on, How should I go about this?</p>
<p>How to output 3 integers assigned to variables-&gt;to csv -&gt; bytes +\n</p>
<p>For example </p>
<p>P1 = self.PWM1horizontalSlider.value() # ASSUMING a value of 120</p>
<p>P2 = self.PWM2horizontalSlider.value() # ASSUMING a value of 200</p>
<p>P3 = self.PWM3horizontalSlider.value() # ASSUMING a value of 100</p>
<p>into b'120,200,100\n' </p>
<p>Read ASCII String Code</p>
<pre><code>// pins for the LEDs:
const int redPin = 3;
const int greenPin = 5;
const int bluePin = 6;

void setup() {
  // initialize serial:
  Serial.begin(9600);
  // make the pins outputs:
  pinMode(redPin, OUTPUT);
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);

}

void loop() {
  // if there's any serial available, read it:
  while (Serial.available() &gt; 0) {

    // look for the next valid integer in the incoming serial stream:
    int red = Serial.parseInt();
    // do it again:
    int green = Serial.parseInt();
    // do it again:
    int blue = Serial.parseInt();

    // look for the newline. That's the end of your sentence:
    if (Serial.read() == '\n') {
      // constrain the values to 0 - 255 and invert
      // if you're using a common-cathode LED, just use "constrain(color, 0, 255);"
      red = 255 - constrain(red, 0, 255);
      green = 255 - constrain(green, 0, 255);
      blue = 255 - constrain(blue, 0, 255);

      // fade the red, green, and blue legs of the LED:
      analogWrite(redPin, red);
      analogWrite(greenPin, green);
      analogWrite(bluePin, blue);

      // print the three numbers in one string as hexadecimal:
      Serial.print(red, HEX);
      Serial.print(green, HEX);
      Serial.println(blue, HEX);
    }
  }
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To answer your question, outside of the example:</p>
<pre><code>p1 = 120
p2 = 200
p3 = 100

the_bytes = bytes(f'{p1},{p2},{p3}\n', 'utf-8')
</code></pre>
<p>This is assuming you want the bytes to use UTF-8 as an encoding, which is common, but something you'd want to check. It could also be something like <code>cp1252</code> - more here <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow noreferrer">https://docs.python.org/3/library/codecs.html#standard-encodings</a></p>
<p>You could then send <code>the_bytes</code> wherever you need them.</p>
</div>
<span class="comment-copy">csv doesn't create byte streams, only text streams. There are several ways to do it. This is too broad.</span>
<span class="comment-copy">Sorry I'll edit the question to be more precise</span>
<span class="comment-copy">I'am planning to implement this to a GUI using a slider to change the PWM values of  the arduino. I first started simply without a GUI and manually changing the values of the PWM values using  arduino.write(b'120,10,244\n') but failed to do so when I assigned the values to a variable</span>
<span class="comment-copy">Note that <code>f'{p1}.{p2}.{p3}\n'</code> is shorthand for <code>'{p1}.{p2}.{p3}\n'.format(p1=p1, p2=p2, p3=p3)</code> - check the documentation for more.</span>
