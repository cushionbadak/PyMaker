<div class="post-text" itemprop="text">
<p>In this code I calculated the average score for each student and return it in a dictionary to create a dictionary with a two-dimensional array:</p>
<pre><code>def bestAverage(inputDict):
    dic = {}
    for i in inputDict:
        if i[0] in dic.keys():
            dic[i[0]].append(int(i[1]))
        else:
            dic[i[0]] = [int(i[1])]
    totle_score = 0
    print(dic)
    for key, value, in dic.items():
        for c in value:
         totle_score += int(c)
        Q = len(value)
        avrage = totle_score / Q
        dic[key]= [avrage]
    print(dic)
</code></pre>
<p>OUTCOME:</p>
<pre><code>{'Diane': [35.0], 'Bion': [95.0], 'Jack': [125.0]}
</code></pre>
<p>NOW, how to return the name with the highest average score?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>dict = {'Diane': [35.0], 'Bion': [95.0], 'Jack': [125.0]}

highest_scorer = max(dict, key=dict.get)
highest_score = dict[highest_scorer]
</code></pre>
<p>Reference <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#max</a></p>
<p>You can also try <code>max(iterable)</code>, but I prefer using <code>max(iterable, *args)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>max_score = max(d.values())[0]
name_max = [k for k,v in d.items() if v[0]==max_score]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import operator
max(dic.items(), key=operator.itemgetter(1))[0]
</code></pre>
<p>you can also use </p>
<pre><code>max(dic, key=dic.get)
</code></pre>
</div>
<span class="comment-copy">thank you for your comment, but what I need is the NAME of the person with the highest score and the score itself.</span>
<span class="comment-copy">@sulaimanalomayri isn't that <code>highest_scorer</code> and <code>highest_score</code>?</span>
<span class="comment-copy">@sulaimanalomayri <code>highest_scorer</code> is the NAME of the person with the highest score and <code>highest_score</code> is the score.</span>
<span class="comment-copy">@bumblebee you're right, thank you so much!</span>
<span class="comment-copy">@sulaimanalomayri Glad, I could help!. If my solution gives you the desired output, please accept it, Thank you!.</span>
<span class="comment-copy">I appreciate it, that was correct, can you please write the code outside the print() statement</span>
<span class="comment-copy">i just edited it @AdamSmith. Before edit, there was.</span>
<span class="comment-copy">Please explain your logic, and give a little commentary on what your code is intended to do. It can help future readers as well.</span>
<span class="comment-copy">operator is a built-in module providing a set of convenient operators. In two words operator.itemgetter(n) constructs a callable that assumes an iterable object (e.g. list, tuple, set) as input, and fetches the n-th element out of it. Reference: <a href="https://docs.python.org/2/library/operator.html#operator.itemgetter" rel="nofollow noreferrer">docs.python.org/2/library/operator.html#operator.itemgetter</a></span>
<span class="comment-copy">the later answer already explained below by @bumblebee</span>
