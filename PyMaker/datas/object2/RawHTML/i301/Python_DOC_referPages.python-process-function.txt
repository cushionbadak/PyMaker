<div class="post-text" itemprop="text">
<p>I was looking through the Python docs and found a function called <code>process</code>. I have only seen it in use in the documentation of other features but it itself is not documented, as far as I can tell.</p>
<p>Here are some examples from the documentation of when it is used.</p>
<p>From <a href="https://docs.python.org/3/library/typing.html?highlight=process#typing.overload" rel="nofollow noreferrer"><code>@typing.overload</code></a>:</p>
<pre><code>@overload
def process(response: None) -&gt; None:
    ...
@overload
def process(response: int) -&gt; Tuple[int, str]:
    ...
@overload
def process(response: bytes) -&gt; str:
    ...
def process(response):
    &lt;actual implementation&gt;
</code></pre>
<p>From <a href="https://docs.python.org/3/library/fileinput.html?highlight=process" rel="nofollow noreferrer"><code>fileinput</code></a>:</p>
<pre><code>import fileinput
for line in fileinput.input():
    process(line)
</code></pre>
<p>And finally, from <a href="https://docs.python.org/3/library/re.html?highlight=process#match-objects" rel="nofollow noreferrer"><code>Match objects</code></a></p>
<pre><code>match = re.search(pattern, string)
if match:
    process(match)
</code></pre>
<p>I am specifically interested in the last usage. My question is this, what is this <code>process</code> function and where is the documentation for it?</p>
</div>
<div class="post-text" itemprop="text">
<p>In these cases, <code>process</code> is just an arbitrary name for an example placeholder function  used to demonstrate example uses of the things being documented. You will often see variables and functions like <code>foo</code>, <code>process</code>, <code>bar</code>, <code>do_something</code>. Generally, if it's a generic named function/variable that isn't the specific thing being documented and isn't defined elsewhere, it will be a placeholder.</p>
<p>For example, the last case could be written, perhaps more clearly (and verbosely), like:</p>
<pre><code>match = re.search(pattern, string)
if match:
    # placeholder
    # here is where you can be sure `match` is not None
    # and you can use it in your code, for example:
    process(match)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>What is the process function ?</h2>
<p>It is a placeholder, it doesn't exist (unless you define it).</p>
<p>It is the equivalent of saying <code># Your code goes here</code>, but it indicates the target object (<code>line</code>, <code>match</code> ...) which will be used by the user.</p>
<h2>Example</h2>
<pre><code>match = re.search(pattern, string)
if match:
    process(match)
</code></pre>
<p>It means, <em>"this is how match work and should be used, do anything you want with the <strong>match</strong> object"</em> </p>
</div>
