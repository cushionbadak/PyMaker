<div class="post-text" itemprop="text">
<p>I have looked at similiar questions and get this to work in strings, but cannot figure how to do the same on a json file.</p>
<p>I would like to count each activity type on each date in a json file. The below line works perfectly, however I do not know all the time values, therefore I would like to match <em>any</em> time on each date. I have tried using <a href="https://docs.python.org/3/library/fnmatch.html" rel="nofollow noreferrer"><code>fnmatch</code></a> but it does not return any values.</p>
<pre><code>c = Counter(
    item['Activity'] for item in json_data
    if item['DateTime'] == '18/02/2019 09:14'
)
</code></pre>
<p>The code I am using to pattern match is below.</p>
<pre><code>from collections import Counter
    import json
    import fnmatch
    import re

with open('dataset_3.json', 'r') as json_file:
    json_data = json.load(json_file)  # loads json data
    c = Counter(
        item['Activity'] for item in json_data
        if item['DateTime'] == fnmatch.filter(item, '18/02/2019' + ' *')
    )
    print(c)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>fnmatch</code> module is meant for matching filenames using UNIX-style globs. For general purpose pattern matching, <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a> are usually a better bet.</p>
<p>However, since in this case you're simply matching the start of <code>item['DateTime']</code>, the <a href="https://docs.python.org/3/library/stdtypes.html#str.startswith" rel="nofollow noreferrer"><code>str.startswith()</code></a> method is the obvious choice:</p>
<pre><code>c = Counter(
    item['Activity'] for item in json_data
    if item['DateTime'].startswith('18/02/2019 ')
)
</code></pre>
</div>
<span class="comment-copy">Im wondering if fnmatch can be used with dictionary ?</span>
<span class="comment-copy">ah ok I didn't realise fnmatch was just for mathing unix filenames. In that case regular expressions should have been what I looked at. That being said your solution actually works perfectly ! thank you !</span>
