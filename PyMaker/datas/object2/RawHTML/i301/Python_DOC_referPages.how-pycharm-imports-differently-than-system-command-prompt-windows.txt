<div class="post-text" itemprop="text">
<p>I am having a problem running my script in a cmd prompt despite it working in PyCharm. I have a folder structure as such:</p>
<pre><code>MyCode # PyCharm project folder
  /UsefulFunctions
    /Messaging
      /Texter.py
  /DiscordBot
    /DiscordBot.py
</code></pre>
<p>Within DiscordBot.py I have an import</p>
<pre><code>from UsefulFunctions.Messaging import Texter
</code></pre>
<p>This works when I run it from PyCharm without a problem. However when I try to run from a command prompt located at the <code>DiscordBot</code> level it errors with:</p>
<blockquote>
<p>ImportError: No module named 'UsefulFunctions'</p>
</blockquote>
<p>So naturally I thought it meant that the <code>UsefulFunctions</code> folder was not on my path. Therefore, I went into my environment variables and added it to my <code>PATH</code> variable (as well as the <code>MyCode</code> folder for good measure). Still it encountered this error. I browsed some posts on here regarding imports (mainly <a href="https://stackoverflow.com/questions/4383571/importing-files-from-different-folder/4383597#4383597">Importing files from different folder</a>) and they recommend doing something like:</p>
<pre><code>import sys
sys.path.insert(0, '/path/to/application/app/folder')
import file
</code></pre>
<p>Or adding <code>__init__.py</code> files to each folder in order to get them to register as packages. I went ahead and added <code>__init__</code> files to each folder and subfolder I was trying to import from, but still could not run from the command prompt...I ommitted the <code>sys.path.insert()</code> solution because I see no benefit from this after already explicitly adding it to my <code>PATH</code> variable. Another solution was to add "." before the import because supposedly otherwise it is only searching python's PATH. I attempted this as:</p>
<pre><code>from .UsefulFunctions.Messaging import Texter
</code></pre>
<blockquote>
<p>ImportError: attempted relative import with no known parent package</p>
</blockquote>
<p>And this error shows on PyCharm now as well... I don't get why my initial script would work without a hitch on PyCharm, but the same program cannot seem to find my import when run from a prompt. Can somebody please explain the difference between PyCharm running the program and my prompt? Why will this not work despite having <code>__init__.py</code> files <strong>and</strong> having added <code>MyCode</code> and <code>UsefulFunctions</code> to my PATH variable on Windows?</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH" rel="nofollow noreferrer">[Python 3]: <strong>PYTHONPATH</strong></a>:</p>
<blockquote>
<p>Augment the default search path for module files. The format is the same as the shellâ€™s PATH: one or more directory pathnames separated by <a href="https://docs.python.org/3/library/os.html#os.pathsep" rel="nofollow noreferrer">os.pathsep</a> (e.g. colons on Unix or semicolons on Windows). Non-existent directories are silently ignored.</p>
</blockquote>
<p>You can also find more details on <a href="https://stackoverflow.com/questions/42705279/strange-error-while-using-pycharm-to-debug-pyqt-gui/55066132#55066132">[SO]: Strange error while using Pycharm to debug PyQt gui (@CristiFati's answer)</a>.</p>
<p>So, in order for <em>Python</em> to be able to load a module (package) without specifying its path, the path must be present in <em>%PYTHONPATH%</em> environment variable.</p>
<p>You mentioned <em>%PATH%</em> several times in the question but it's <strong><em>%PYTHONPATH%</em></strong> (<em>MyCode</em> must be added to it).</p>
<p><em>PyCharm</em> does that because of (any of) the 2 checkboxes in the image below:</p>
<p><a href="https://i.stack.imgur.com/aNFDi.jpg" rel="nofollow noreferrer"><img alt="Img0" src="https://i.stack.imgur.com/aNFDi.jpg"/></a></p>
<p>If you want to get things working from <em>cmdline</em>, yo have to do the same thing there as well:</p>
<blockquote>
<pre class="lang-bat prettyprint-override"><code>[cfati@CFATI-5510-0:e:\Work\Dev\StackOverflow\q054955891\DiscordBot]&gt; set py
Environment variable py not defined

[cfati@CFATI-5510-0:e:\Work\Dev\StackOverflow\q054955891\DiscordBot]&gt; "e:\Work\Dev\VEnvs\py_064_03.06.08_test0\Scripts\python.exe" DiscordBot.py
Traceback (most recent call last):
  File "DiscordBot.py", line 1, in &lt;module&gt;
    from UsefulFunctions.Messaging import Texter
ModuleNotFoundError: No module named 'UsefulFunctions'

[cfati@CFATI-5510-0:e:\Work\Dev\StackOverflow\q054955891\DiscordBot]&gt; set PYTHONPATH=e:\Work\Dev\StackOverflow\q054955891

[cfati@CFATI-5510-0:e:\Work\Dev\StackOverflow\q054955891\DiscordBot]&gt; set py
PYTHONPATH=e:\Work\Dev\StackOverflow\q054955891

[cfati@CFATI-5510-0:e:\Work\Dev\StackOverflow\q054955891\DiscordBot]&gt; "e:\Work\Dev\VEnvs\py_064_03.06.08_test0\Scripts\python.exe" DiscordBot.py
e:\Work\Dev\StackOverflow\q054955891\UsefulFunctions\Messaging\Texter.py imported
</code></pre>
</blockquote>
<p>As a side note, I personally hate names that start with <em>My</em> (e.g. <em>MyCode</em>). Try finding a more useful name (e.g. <em>TestBotProject</em>, or <em>smth</em> similar) :).</p>
</div>
<div class="post-text" itemprop="text">
<p>Python uses the system variable <code>PYTHONPATH</code>, among other things, to decide what to import.<br/>
From the <a href="https://docs.python.org/3/tutorial/modules.html#the-module-search-path" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>When a module named spam is imported, the interpreter first searches
  for a built-in module with that name. If not found, it then searches
  for a file named spam.py in a list of directories given by the
  variable sys.path. sys.path is initialized from these locations:</p>
<ul>
<li>The directory containing the input script (or the current directory
  when no file is specified).  </li>
<li>PYTHONPATH (a list of directory names,
  with the same syntax as the shell variable PATH).  </li>
<li>The installation-dependent default.</li>
</ul>
</blockquote>
<p>The reason PyCharm magically imports the module when you run the script is because of the <code>Project Structure -&gt; Content Root</code> value. It points to your project directory, by default. </p>
</div>
<div class="post-text" itemprop="text">
<p>Check your Interpreter. It is different than your command prompt Interpreter, located in <code>Appdata</code>, whereas the interpreter for PyCharm is in the <code>Workspace</code> folder.</p>
</div>
<div class="post-text" itemprop="text">
<p>Set your Python path  in System variables,So that you can run python -help from any where in directory
then 
navigate to  project folder</p>
<pre><code>c:\nnnn..\mmm..\MyCode 
run python  c:\nnnn..\mmm..\MyCode\DiscordBot
    \DiscordBot.py
</code></pre>
<p>or </p>
<pre><code>C:\Python27\python.exe "C:\Users\Username\MyCode\DiscordBot
    \DiscordBot.py" or 
C:\Python27\python.exe C:\Users\Username\MyCode\DiscordBot
    \DiscordBot.py
</code></pre>
<p>Try quotes if path  has space </p>
</div>
<span class="comment-copy">What happens when you try <code>import UsefulFunctions.Messaging.Texter as Texter</code>?</span>
<span class="comment-copy">@LukeNing the same <code>ImportError</code> unfortunately :(</span>
<span class="comment-copy">Too bad I did not see the bouty 13 hours ago ^^ This is exactly what I would have answered first: <code>Run/Debug configuration</code> has special default behavior. In addition, if each module of the OP is somewhat standalone, defining all necessary <code>__init__.py</code> looks like the pythonic thing to do too ?</span>
<span class="comment-copy">@LoneWanderer: The bounty shouldn't be the reason for posting an answer :). If you feel you have something which would add value, please go ahead and post it. If wanting t play by the rules, adding the <i>__init__.py</i> in each dir should be done. But as you have seen it works without them as well.</span>
<span class="comment-copy">@Reedinationer: Did this answer your question?</span>
<span class="comment-copy">I'm not sure how to check my <code>PYTHONPATH</code> but I ran <code>set path=%PATH%;%PYTHONPATH%;</code> at command prompt and then my program still did not run due to the same <code>ImportError</code>. How is it possible for me to achieve the same behavior with command prompt that I can get with PyCharm's magical "Content Root" value (which I wasn't able to see under "Project Structure" tab of the settings menu in PyCharm)?</span>
<span class="comment-copy">The issue is that <code>PYTHONPATH</code> is empty (check with <code>echo %PYTHONPATH%</code>). You need to set it to your project's directory full path, <code>MyCode</code> to enable importing from that project from anywhere (in this case, <code>DiscordBot</code>). If you want this setting to persist, you must set it as a system environment variable using <code>setx</code>. That requires you run cmd as administrator.</span>
<span class="comment-copy">How would I check my interpreter and be able to get them to match so the command prompt can run the script though?</span>
<span class="comment-copy">Go to File&gt;Settings&gt;Interpreter Settings If it is using the python file of your project as an interpreter like 'C:\Users\Riyouk\PycharmProjects\untitled1\venv\Scripts\python.exe'. Change it to python installed in your appdata folder whose address is more likely 'C:\Users\Riyouk\AppData\Local\Programs\Python\Python36\python.exe'</span>
