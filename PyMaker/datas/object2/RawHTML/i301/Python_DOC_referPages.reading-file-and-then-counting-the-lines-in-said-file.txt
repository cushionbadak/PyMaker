<div class="post-text" itemprop="text">
<p>I'm trying to create a program where the program asks the user for a file. The program then should then print the contents of the file and then count the lines. The issue when I run the program is I get this error: <code>for count in range[1, f2_l + 1]:TypeError: can only concatenate str (not "int") to str</code>. Isn't the count supposed to be an integer and not a string? I'd like to use keep using <code>while f2_l != '':</code>.</p>
<pre><code>f1 = input('Please enter filename you wish to open.: ')   
f2 = open(f1, 'r') 
f2_l = f2.readline()
for count in range[1, f2_l + 1]:
    print(count,':')
while f2_l != '':
    print(f2_l)
    f2_l = f2.readline()
f2.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>f1 = input('Please enter filename you wish to open.: ')   
f2 = open(f1, 'r') 
f2_l = f2.readlines()
for i in range(1, len(f2_l)):
    print(i, ':', f2_l[i - 1])
f2.close()
</code></pre>
<p>Read the docs for file manipulation and loops. i is the index in the line list. <code>readlines()</code> return the list of lines, each one is an str</p>
</div>
<div class="post-text" itemprop="text">
<p>I suggest this:</p>
<pre><code>filename = input('Please enter filename you wish to open.: ')

with open(filename) as f:
    data = f.readlines()

for index, line in enumerate(data, 1):
    print('{index}: {line}'.format(index=index, line=line))
</code></pre>
<p>It is better to do the following:</p>
<ol>
<li><p>Open files with the <code>with</code> statement, which ensures that the files you open will be closed;</p></li>
<li><p>Use the built-in function <code>enumerate</code> rather than a separate for loop for the index</p></li>
<li><p>Instead of concatenating strings with <code>+</code>, use the <code>format</code> method</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>You could use Python's built-in <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enunerate()</code></a> function as shown below to count the lines semi-automatically as they're printed:</p>
<pre><code>filename = input('Please enter filename you wish to open: ')
with open(filename, 'r') as file:
    count = 0  # In case file is empty.
    for count, line in enumerate(file, 1):
        print(line, end='')

print('line count:', count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>You can use this for while loop:</strong></p>
<pre><code>fname = input("Enter file name: ")
f = open( fname , 'r' )
num_lines = 0
with open(fname, 'r') as f:
    line = f.readline()
    while line :
        num_lines+=1
        print(line)
        line = f.readline()
print("Number of lines:")
print(num_lines)
</code></pre>
</div>
<span class="comment-copy">Change <code>readline()</code> for <code>readlines()</code>. <code>readline()</code> return a str, <code>readlines()</code> a list</span>
<span class="comment-copy">I made the change suggested and it gave me the same error.</span>
<span class="comment-copy">Function arguments go in parentheses, not square brackets.</span>
<span class="comment-copy">What are you trying to do with <code>f2_l + 1</code>? <code>f2_l</code> is the first line of the file, not a number, you can't add 1 to it.</span>
<span class="comment-copy">When I ran the program it counted one line extra compared to the actual number of lines in the file. It also printed the first line twice. You did use 'while' which is good.</span>
<span class="comment-copy">Yeah, you are right! I updated it</span>
