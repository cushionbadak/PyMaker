<div class="post-text" itemprop="text">
<p>I want to assign a string to an integer in a dictionary, but I get an error.</p>
<p>This is my code:  </p>
<pre><code>dictionary = {}
dictionary[0] = 0
dictionary[0]['name'] = 'John'
</code></pre>
<p>This is the error I get:</p>
<pre class="lang-none prettyprint-override"><code>dictionary[0]['name'] = 'John'
TypeError: 'int' object does not support item assignment
</code></pre>
<p>How do I assign a string to an integer?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>dd = {}
dd[0] = 0
dd[0] = {'name':'John'}
</code></pre>
<p>Out: {0: {'name': 'John'}}</p>
</div>
<div class="post-text" itemprop="text">
<p>This code <code>dictionary[0] = 0</code> is assigning the key <code>0</code> to the value <code>0</code>. If you want a multi-level dictionary, you need to actually assign the <code>0</code> key to another dictionary.</p>
<p>You'd need something like this:</p>
<pre><code>dictionary = {}
dictionary[0] = {}
dictionary[0]['name'] = 'John'
</code></pre>
<p>That gets you something that works, but it sounds like you actually maybe want a list of dictionaries. Something like this:</p>
<pre><code>user_list = []
user_list[0] = {}
user_list[0]['name'] = 'John'
</code></pre>
<p>Having that many lines to initialize a single thing is discouraged in python as well, so the final code should be something like this:</p>
<pre><code>user_list = [{'name': 'John'}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You did <code>dictionary[0] = 0</code> and then tried <code>dictionary[0]['name'] = 'John'</code>. But the element <code>dictionary[0]</code> is not a dictionary so you cannot access the element with key <code>name</code>. First you have to create the dictionary to be assigned to the element with key <code>0</code>:</p>
<pre><code>dictionary = {}
dictionary[0] = {}
dictionary[0]['name'] = 'John'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to mix different things and using a 1d dictionary as 2d. A solution could be the creation of a list of dictionaries:</p>
<pre><code>l_dic = []
l_dic.append([0,{}])
l[0][1]['name'] = 'John'
</code></pre>
<p>In this way you can continue adding element like:</p>
<pre><code>l_dic[0][1]['surname'] = 'Wayne'
l_dic.append([123,{}])
l_dic[1][1]['name'] = 'Tom
l_dic[1][1]['surname'] = 'Inks'
</code></pre>
<p>and so on... you got my point. 
The integer associated to 'John' is:</p>
<pre><code>print l_dic[0][0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think you should use a built-in dictionary <em>subclass</em> <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a> which will make each entry in the dictionary another dictionary which will create entries within the outer one automatically:</p>
<pre><code>from collections import defaultdict

dictionary = defaultdict(dict)
dictionary[0]['name'] = 'John'
dictionary[1]['name'] = 'Paul'
dictionary[2]['name'] = 'George'
# ... etc
</code></pre>
</div>
<span class="comment-copy"><i>"How do I assign a string to an integer?"</i> What on earth does that mean?</span>
<span class="comment-copy">you are trying to assign value to a value.</span>
