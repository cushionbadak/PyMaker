<div class="post-text" itemprop="text">
<p>I was trying to add the parameter <code>bonus</code> (which will take an integer) with the instance variable <code>self.pay</code> and wanted to print that final payment with the worker's name. But, I could not print that added total payment</p>
<p>I want to call the method <code>rise()</code> instead of returning anything from it, but I am confused how I can call that and pass an integer number.</p>
<pre><code>class Information:
    def __init__(self,first,last,pay):

        self.first = first
        self.last = last
        self.pay = pay


    def rise(self,int(bonus)):
        self.pay = self.pay + bonus

    def __str__(self):
        return "%s and %s and has a balance of %s" % (self.first,self.last,self.pay)

if __name__ == "__main__":
    emp1 = Information("tom","jerry",999)
    print (emp1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>class Information:
    def __init__(self,first,last,pay):
        self.first = first
        self.last = last
        self.pay = pay

    def raise_salary(self, bonus):
        self.pay += int(bonus) # exception if bonus cannot be casted

    def __str__(self):
        return "%s and %s and has a balance of %s" % (self.first,self.last,self.pay)

if __name__ == "__main__":
    emp1 = Information("tom", "jerry", 999)
    print(emp1)
    emp1.raise_salary('1000') # or just emp1.raise(1000)
    print(emp1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I tried with below code. </p>
<p>I updated <strong>def rise(self,int(bonus)):</strong> to <strong>def rise(self,bonus):</strong></p>
<pre><code>class Information:
    def __init__(self,first,last,pay):

        self.first = first
        self.last = last
        self.pay = pay


    def rise(self,bonus):
        self.pay = self.pay + bonus

    def __str__(self):
        return "%s and %s and has a balance of %s" % (self.first,self.last,self.pay)

if __name__ == "__main__":
    emp1 = Information("tom","jerry",999)
    emp1.rise(89)
    print (emp1)
</code></pre>
</div>
<span class="comment-copy"><code>emp1.rise(x)</code>  where <code>x</code> is the bonus value. Do it after <code>emp1 = Information("tom","jerry",999)</code>. and don't use <code>int</code> in <code>def</code>, it will result in error</span>
<span class="comment-copy">You cannot have a call to <code>int()</code> in the function definition. You could do the conversion to an <code>int</code> <i>inside</i> the method body, or use <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer"><code>typing</code></a>. That's the only change you need to make. Then <code>emp1.rise(1000); </code>print(emp1)` will give the result you expect</span>
<span class="comment-copy">@mmdud: On a lighter note, the english word "raise" is more appropriate than the word "rise", to name your function.</span>
<span class="comment-copy">your solution is really helpful, thank you for helping me.</span>
<span class="comment-copy">You haven't said what you changed to make it work.</span>
<span class="comment-copy">@winner , it worked, thank you very much.</span>
