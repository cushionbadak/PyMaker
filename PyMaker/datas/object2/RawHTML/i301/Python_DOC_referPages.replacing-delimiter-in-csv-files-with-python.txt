<div class="post-text" itemprop="text">
<p>I have a folder with several CSV files. These files all contain the box drawing double vertical and horizontal as the delimiter. I am trying to import all these files into python, change that delimiter to a pipe, and then save the new files into another location. The code I currently have runs without any errors but doesn't actually do anything. Any suggestions?</p>
<pre><code>import os
import pandas as pd

directory = 'Y:/Data'
dirlist = os.listdir(directory)
file_dict = {}
x = 0

for filename in dirlist:
    if filename.endswith('.csv'):
        file_dict[x] = pd.read_csv(filename)
        column = file_dict[x].columns[0]
        file_dict[x] = file_dict[x][column].str.replace('╬', '|')
        file_dict[x].to_csv("python/file{}.csv".format(x))
        x += 1
</code></pre>
<p>Here is a picture of sample data:</p>
<p><a href="https://i.stack.imgur.com/WPo8I.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/WPo8I.jpg"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of directly replacing occurrences with the new character (which may replace escaped occurrences of the character as well), we can just use built-in functionality in the csv library to read the file for us, and then write it again</p>
<pre><code>import csv
with open('myfile.csv', newline='') as infile, open('outfile.csv', 'w', newline='') as outfile:
    reader = csv.reader(infile, delimiter='╬')
    writer = csv.writer(outfile, delimiter='|')
    for row in reader:
        writer.writerow(row)
</code></pre>
<p>Adapted from the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>with i as open(filename):
    with o as open(filename+'.new', 'w+):
        for line in i.readlines():
            o.write(line.replace('╬', '|'))
</code></pre>
<p>or, skip the python, and use <code>sed</code> from your terminal:</p>
<p><code>$ sed -i 's/╬/|/g' *.csv</code></p>
<p>Assuming the original delimiter doesn't appear in any escaped strings, this should be slightly faster than using the regular <code>csv</code> module. Panada seems to do some filesystem voodoo when reading CSVs, so I wouldn't be too surprised if it is just as fast. <code>sed</code> will almost certainly beat them both by far.</p>
</div>
<span class="comment-copy">Can you post a sample of the said CSV files?</span>
<span class="comment-copy">Hey, I think you should use index 1 to obtain the first column and not index 0. If I am not wrong, index 0 represent a column with line numbers. So, the code would be: column = file_dict[x].columns[1]</span>
<span class="comment-copy">Fair. I took what i consider to be the fairly safe assumption that the creator of the source data file used that delimited because they lack the concept of "escaping."</span>
