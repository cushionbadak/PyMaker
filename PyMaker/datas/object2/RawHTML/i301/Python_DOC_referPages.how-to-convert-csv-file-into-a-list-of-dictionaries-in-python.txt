<div class="post-text" itemprop="text">
<p>I have a csv file that looks like the following:</p>
<p><a href="https://i.stack.imgur.com/ORkBY.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/ORkBY.png"/></a></p>
<p>I need to convert this into a list of dictionaries that looks like the following:</p>
<pre><code>users = [{ "id": 0, "name": "James" },
{ "id": 1, "name": "John" },
{ "id": 2, "name": "Jake" },
{ "id": 3, "name": "Jim" },
{ "id": 4, "name": "Alex" },
{ "id": 5, "name": "Adam" },
{ "id": 6, "name": "Ryan" },
{ "id": 7, "name": "Katie" },
{ "id": 8, "name": "Julia" },
{ "id": 9, "name": "Sam" }]
</code></pre>
<p>I also have this CSV file of "connections" between each user based on their ids:</p>
<p><a href="https://i.stack.imgur.com/76Pp8.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/76Pp8.png"/></a></p>
<p>I have been trying for hours to get this to just be a simple list of tuples that look like the following:</p>
<pre><code>friends = [(0, 1), (0, 2), (1, 2), (1, 3), (2, 3), (3, 4), (4, 5), (5, 6), (5, 7), (6, 8), (7, 8), (8, 9)]
</code></pre>
<p>I have tried every way of importing csv files I know, but I've never dealt with one that wants me to make a new dictionary for every entry, and i dont think ive ever dealt with one without headers like this. While I wish I could just add headers and my my life easier, it must look like the example I gave above for the rest of my code to work. Please let me know if you have any idea how to do this. Thank you!</p>
<p>I completed this entire project of mine, but had to hardcode the mentioned dictionary and list because I simply do not know how to handle having no headers in a CSV and making them look like this. Any help would be greatly appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>As far as I understand this should solve your first problem. You should be able to easily modify this code to suit your second use case.</p>
<pre><code>users = []
with open('&lt;your_file_name.csv&gt;', 'r') as f: ##open the file in read mode
    for l in f.readlines(): ## get all the lines
        row_id, row_name = l.strip('\n').split(',')  ## unpack the values (assumes only two columns)
        users.append({'id':row_id, 'name' : row_name}) ## add to your list
</code></pre>
<p>As mentioned by darksky, using the csv module is probably better in terms of code stability so take a look at his answer too</p>
</div>
<div class="post-text" itemprop="text">
<p>Let's look at using the standard python <code>csv</code> module for parsing your files.</p>
<pre><code>import csv

with open('names.csv') as csvfile:
    # create a list to store results
    users = []

    # read the file
    reader = csv.reader(csvfile)

    # for every line in the csv
    for row in reader:

        #create a user dict
        user = {}

        # fill in the user.
        user["name"] = row[1]
        user["id"] = row[0]

        # add this user to the list of users
        users.append(user)
</code></pre>
<p>Similarly for friends,</p>
<pre><code>import csv

with open('friends.csv') as csvfile:
    # create a list to store results
    friends = []

    # read the file
    reader = csv.reader(csvfile)

    # for every line in the csv
    for row in reader:

        #create a friend tuple
        friend = (row[0], row[1])

        # add this friend to the list of friends
        friends.append(friend)
</code></pre>
</div>
<span class="comment-copy">What have you tried to get it working? Can you include some of those samples with specific errors or issues.</span>
<span class="comment-copy">Of course, well I erased all the code that wasn't working, basically out of frustration, but I have tried setting a list to empty, then reading the csv file and creating a for loop to try and make a new dictionary each time it came across an iteration but i honestly had no idea what i was doing or if i was even on the right track</span>
<span class="comment-copy">Check out <a href="https://docs.python.org/3/library/csv.html#csv.DictReader" rel="nofollow noreferrer"><code>csv.DictReader</code></a> (especially the <code>fieldnames</code> argument).</span>
<span class="comment-copy">@Ben , this is actually something I tried also. Again, not having headers screws me up because on the line that says "print(row['first_name'], row['last_name'])" I get a key error</span>
<span class="comment-copy">@jacknovozinsky The whole point of the <code>fieldnames</code> argument is to handle a lack of headers. It will use the list you provide as the headers instead of the first line of the csv.</span>
<span class="comment-copy">Thank you so much! This answered my problem AND cleared things up for me!</span>
<span class="comment-copy">I'd advise against manually parsing CSV and use the <code>csv</code> module for it instead. This code breaks as soon as a row contains more than one comma, and there are many other corner cases.</span>
<span class="comment-copy">@darksky I totally agree for a production application the csv module is a better choice, I chose to do it the way i did because i thought it would be simpler for understanding purposes. I've edited my answer</span>
