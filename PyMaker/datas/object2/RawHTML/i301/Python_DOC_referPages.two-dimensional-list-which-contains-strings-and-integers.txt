<div class="post-text" itemprop="text">
<p>I have a two-dimensional list; i.e. a nested list, which contains integers and strings.</p>
<pre><code>mylist = [[92, "james"], [88, "john"], [75, "robert"], [80, "michael"], [25, "william"], [54, "david"], [59, "richard"], [74, "charles"], [46, "joseph"], [90, "thomas"], [80, "christopher"]]
</code></pre>
<p>I want to a way to go through the strings only, check if they start with a particular letter; say <code>j</code>, delete it and ignore the rest of the elements that don't meet this condition.</p>
<p>The desired result will look like this:</p>
<pre><code>mylist = [[92, "ames"], [88, "ohn"], [75, "robert"], [80, "michael"], [25, "william"], [54, "david"], [59, "richard"], [74, "charles"], [46, "oseph"], [90, "thomas"], [80, "christo, her"]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand you correctly, here is a solution using <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>mylist = [[num, (name[1:] if name[0] == "j" else name)]
          for num, name in mylist]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the function <code>lstrip()</code> to remove leading characters:</p>
<pre><code>[[i, j.lstrip('j')] for i, j in mylist]
</code></pre>
</div>
<span class="comment-copy">I tried using a traditional for loop, however, I have a problem iterating over integers in the list.</span>
<span class="comment-copy">@AkbarHussein post the code you've tried so far, and explain what goes wrong</span>
<span class="comment-copy">That's correct! It worked. Thanks a lot.</span>
