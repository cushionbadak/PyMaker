<div class="post-text" itemprop="text">
<p>I know partition() exists, but it only takes in one value, I'm trying to partition around various values:</p>
<p>for example say I wanted to partition around symbols in a string:</p>
<p>input: "function():"</p>
<p>output: ["function", "(", ")", ":"] </p>
<p>I can't seem to find an efficient way to handle variable amounts of partitioning.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>re.findall</code> with an alternation pattern that matches either a word or a non-space character:</p>
<pre><code>re.findall(r'\w+|\S', s)
</code></pre>
<p>so that given <code>s = 'function():'</code>, this returns:</p>
<pre><code>['function', '(', ')', ':']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could <code>re.split</code> by <code>\W</code> and use <code>(...)</code> to keep the delimiters, then remove empty parts.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s = "function(): return foo + 3"
&gt;&gt;&gt; [s for s in re.split(r"(\W)", s) if s.strip()]
['function', '(', ')', ':', 'return', 'foo', '+', '3']
</code></pre>
<p>Note that this will split after <em>every</em> special character; if you want to keep certain groups of special characters together, e.g. <code>==</code> or <code>&lt;=</code>, you should test those first with <code>|</code>.</p>
<pre><code>&gt;&gt;&gt; s = "function(): return foo + 3 == 42"
&gt;&gt;&gt; [s for s in re.split(r"(\W)", s) if s.strip()]
['function', '(', ')', ':', 'return', 'foo', '+', '3', '=', '=', '42']
&gt;&gt;&gt; [s for s in re.split(r"(==|!=|&lt;=|\W)", s) if s.strip()]
['function', '(', ')', ':', 'return', 'foo', '+', '3', '==', '42']
</code></pre>
</div>
<span class="comment-copy">This seems like a job for <a href="https://docs.python.org/3/howto/regex.html" rel="nofollow noreferrer">regular expressions</a>.</span>
<span class="comment-copy">At any rate, if you don't want this question removed, you should make sure you read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and provide your <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">OP asked for "partitioning" the string, and I immediately thought "split", but <i>finding</i> the tokens indeed makes more sense, intuitively...</span>
