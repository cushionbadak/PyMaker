<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1641219/does-python-have-private-variables-in-classes">Does Python have “private” variables in classes?</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>Is it possible to have protected class variables or methods in python? Can I see an example of such usage?</p>
</div>
<div class="post-text" itemprop="text">
<p>The short answer is "no."  There are conventions and good style that allow you to indicate that someone shouldn't be modifying those variables or calling those methods from outside the class but there is no way to strictly enforce this.  There essentially is no such thing as strictly enforced private or protected variables or methods in Python.</p>
<p>See <a href="https://docs.python.org/3/tutorial/classes.html#tut-private" rel="nofollow noreferrer">this</a> tutorial.</p>
</div>
<div class="post-text" itemprop="text">
<p>No it is not possible. People generally use underscores as a convention for private members.</p>
<p>This question on the general python convention can give some more information.</p>
<p><a href="https://stackoverflow.com/q/15047122/8292612">Python "private" function coding convention</a></p>
<p>Basically putting a '_' before your member name will indicate to the outside world that it is private.</p>
<pre><code>not_private = 0
_private = 1
</code></pre>
</div>
<span class="comment-copy">You can mimic with underscores and double underscores in start of variable name and method. Just a convention</span>
<span class="comment-copy">Python classes do not support access modifiers.</span>
