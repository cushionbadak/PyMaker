<div class="post-text" itemprop="text">
<p>I'm writing this python script to recursively go through a directory and use the unrar utility on ubuntu to open all .rar files. For some reason it will enter the directory, list some contents, enter the first sub-directory, open one .rar file, then print all the other contents of the parent directory without going into them. Any ideas on why it would be doing this? I'm pretty new to python, so go easy.</p>
<pre><code>"""Recursively unrars a directory"""

import subprocess
import os


def runrar(directory):
    os.chdir(directory)

    dlist = subprocess.check_output(["ls"])
    for line in dlist.splitlines():
        print(line)
        if isRar(line):
            print("unrar e " + directory + '/' + line)
            arg = directory + '/' + line
            subprocess.call(['unrar', 'e', arg])

        if os.path.isdir(line):
            print 'here'
            runrar(directory + '/' + line)


def isRar(line):
    var = line[-4:]
    if os.path.isdir(line):
        return False
    if(var == ".rar"):
        return True
    return False


directory = raw_input("Please enter the full directory: ")
print(directory)

runrar(directory)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are a lot of problems and clumsy uses of python in your code, I may not be able to list them. Examples:</p>
<ul>
<li>using <code>os.chdir</code></li>
<li>using output of <code>ls</code> to read a directory (very wrong and not portable on windows!)</li>
<li>recursivity can be avoided with <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer"><code>os.walk</code></a></li>
<li>computing extension of a file is easier</li>
<li>checking twice if it's a directory...</li>
</ul>
<p>my proposal:</p>
<pre><code>for root,_,the_files in os.walk(path)
    for f in the_files:
        if f.lower().endswith(".rar"):
            subprocess.call(['unrar', 'e', arg],cwd=root)
</code></pre>
<p>that loops through the files (and dirs, but we ignore them and we materialize it by putting the dir list into the <code>_</code> variable, just a convention, but an effective one), and calls the command using <code>subprocess</code> which changes directory locally so <code>unrar</code> extracts the files in the directory where the archive is.</p>
<p>(In that typical <code>os.walk</code> loop, <code>root</code> is the directory and <code>f</code> is the filename (without path), just what we need to run a subprocess in the proper current dir, so no need for <code>os.path.join</code> to compute the full path)</p>
</div>
<span class="comment-copy">I must say it's a pretty horrible way of scanning files... you should use <code>os.walk</code> then say goodbye to recursion. I think <code>os.chdir</code> isn't very compatible with recursive calls BTW because it introduces an unwanted side effect.</span>
<span class="comment-copy">Thanks for the detailed answer, like I said I'm pretty new to Python, I really appreciate your explanation of how this works</span>
<span class="comment-copy">I try to provide good code, but good code without explanation is useless except for the gurus (who don't ask questions here :)). So if the answer works and you understand it, you can accept it: <a href="http://stackoverflow.com/help/someone-answers">stackoverflow.com/help/someone-answers</a></span>
