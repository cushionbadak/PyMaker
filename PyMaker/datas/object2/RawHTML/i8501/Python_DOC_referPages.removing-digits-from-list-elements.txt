<div class="post-text" itemprop="text">
<p>I have a list of job titles (12,000 in total) formatted in this way:<br/>
<code>Career_List = ['1) ABLE SEAMAN', '2) ABRASIVE GRADER', '3) ABRASIVE GRINDER']</code></p>
<p>How do I remove the numbers, parentheses, and spaces from the list elements so that I end up with this output:<br/>
<code>Career_List_Updated = ['ABLE SEAMAN', 'ABRASIVE GRADER', 'ABRASIVE GRINDER']</code></p>
<p>I know that I am unable to simply remove the first three characters because I have more than ten items in my list. </p>
</div>
<div class="post-text" itemprop="text">
<p>Take advantage of the fact that <a href="https://docs.python.org/3/library/stdtypes.html#str.lstrip" rel="nofollow noreferrer"><code>str.lstrip()</code></a> and the rest of the <code>strip</code> functions accept multiple characters as an argument.</p>
<pre><code>Career_List_Updated =[career.lstrip('0123456789) ') for career in Career_List]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Split each career at the first space; keep the rest of the line.</p>
<pre><code>Career_List = ['1) ABLE SEAMAN', '2) ABRASIVE GRADER', '3) ABRASIVE GRINDER', '12000) ZEBRA CLEANER']
Career_List_Updated = []

for career in Career_List:
    job = career.split(' ', 1)
    Career_List_Updated.append(job[1])

print Career_List_Updated
</code></pre>
<p>Output:</p>
<pre><code>['ABLE SEAMAN', 'ABRASIVE GRADER', 'ABRASIVE GRINDER', 'ZEBRA CLEANER']
</code></pre>
<hr/>
<p>One-line version:</p>
<pre><code>Career_List_Updated = [career.split(' ', 1)[1] \
                       for career in Career_List]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>We want to find the first index that STOPS being a bad character and return the rest of the string, as follows. </p>
<pre><code>def strip_bad_starting_characters_from_string(string):
    bad_chars = set(r"'0123456789 )") # set of characters we don't like
    for i, char in enumerate(string):
        if char not in bad_chars
            # we are at first index past "noise" digits
            return string[i:]

career_list_updated = [strip_bad_starting_characters_from_string(string) for string in career_list]
</code></pre>
</div>
<span class="comment-copy">So you can just remove the first 3 characters? What does that have to do with how many items are in the list. Maybe split on the parens take the second element and <code>lstrip</code> it.</span>
<span class="comment-copy">I wasn't the downvoter, but what if there are no numbers in the string?</span>
<span class="comment-copy">@ryugie: Then this isn't the problem OP posed for us.</span>
<span class="comment-copy">I presume it's just format, but the "Output:" above the horizontal line appears to be a mis-copy on the second list element?</span>
<span class="comment-copy">Thanks; my mouse button is going bad, I think; I get double-clicks.</span>
<span class="comment-copy">This solution is overkill.</span>
<span class="comment-copy">sure. i'm basically reinventing lstrip (which i forgot about)</span>
