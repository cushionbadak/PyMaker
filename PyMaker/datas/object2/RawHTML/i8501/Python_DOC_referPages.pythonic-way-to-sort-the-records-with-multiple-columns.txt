<div class="post-text" itemprop="text">
<p>Let's say we have a lot of records in a file in the following fashion.</p>
<p><code>10.10.10.10(tcp/443) : Some SSL Vulnerability : Medium : Patched</code></p>
<p><code>10.10.10.11(tcp/888) : Some RCE Vulnerability : High : Not Patched</code></p>
<p>These records have the 3rd column with values <code>Critical, High, Medium, Low</code>. </p>
<p>What's the best possible pythonic way to sort these records in this manner :
1. Critical, 2.High, 3.Medium 4. Low ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a pure Python solution, using a dictionary to convert the <code>Critical, High, Medium, Low</code> strings to their numeric values; that numeric value is used as the sorting key function argument to <code>list.sort</code>. My key function also uses the first field of each record as a secondary sorting key so that in each of the sections sorted by grade the entries are also sorted by that first field.</p>
<p>Since your question only includes 2 lines of sample data I've constructed some simple fake data.</p>
<pre><code>data = '''\
00 : abc : Low
01 : def : High
02 : ghi : Low
03 : jkl : Medium
04 : mno : High
05 : pqr : Medium
06 : stu : High
07 : vwx : Medium
08 : yza : High
09 : bcd : High
10 : efg : High
11 : hij : Critical
12 : klm : Critical
13 : nop : Medium
14 : qrs : High
15 : tuv : Critical
'''.splitlines()
data = [row.split(' : ') for row in data]

grades = {'Critical': 1, 'High': 2, 'Medium': 3, 'Low': 4}

data.sort(key=lambda t: (grades[t[2]], t[0]))
for row in data:
    print(' : '.join(row))
</code></pre>
<p><strong>output</strong></p>
<pre><code>11 : hij : Critical
12 : klm : Critical
15 : tuv : Critical
01 : def : High
04 : mno : High
06 : stu : High
08 : yza : High
09 : bcd : High
10 : efg : High
14 : qrs : High
03 : jkl : Medium
05 : pqr : Medium
07 : vwx : Medium
13 : nop : Medium
00 : abc : Low
02 : ghi : Low
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Example using <a href="https://docs.python.org/3/library/enum.html#enum.IntEnum" rel="nofollow noreferrer"><code>IntEnum</code></a> for a list of dictionary.</p>
<pre><code>from enum import IntEnum
class Vulnerability(IntEnum):
    CRITICAL = 1
    HIGH = 2
    MEDIUM = 3
    LOW = 4

records = []
records.append({'v': Vulnerability.MEDIUM})
records.append({'v': Vulnerability.HIGH})
records.append({'v': Vulnerability.CRITICAL})
records.append({'v': Vulnerability.LOW})

print(records)
# [{'v': &lt;Vulnerability.MEDIUM: 3&gt;}, {'v': &lt;Vulnerability.HIGH: 2&gt;}, {'v': &lt;Vulnerability.CRITICAL: 1&gt;}, {'v': &lt;Vulnerability.LOW: 4&gt;}]

print(records[0]['v'] &lt; records[1]['v'])
# False

print(sorted(records, key = lambda k: k['v']))
# [{'v': &lt;Vulnerability.CRITICAL: 1&gt;}, {'v': &lt;Vulnerability.HIGH: 2&gt;}, {'v': &lt;Vulnerability.MEDIUM: 3&gt;}, {'v': &lt;Vulnerability.LOW: 4&gt;}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you can transform your table into a pandas data frame (for example, using <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html" rel="nofollow noreferrer">pandas.read_csv</a>), then this will do the job:</p>
<pre><code>import pandas as pd
df=pd.DataFrame({'a':[1,2,3,4,5,6],'b':['a','b','c','d','e','f'],'val':['critical','high','low','medium','critical','low']})
df['val'] = pd.Categorical(df['val'],['critical','high','medium','low'])
df.sort_values(by='val',inplace=True)
</code></pre>
<p>Then at the beginning <code>df</code> was</p>
<pre><code>    a   b   val
0   1   a   critical
1   2   b   high
2   3   c   low
3   4   d   medium
4   5   e   critical
5   6   f   low
</code></pre>
<p>and in the end <code>df</code> is</p>
<pre><code>    a   b   val
0   1   a   critical
4   5   e   critical
1   2   b   high
3   4   d   medium
2   3   c   low
5   6   f   low
</code></pre>
<p>In the code above, the line that specified the order was</p>
<pre><code>df['val'] = pd.Categorical(df['val'],['critical','high','medium','low'])
</code></pre>
</div>
<span class="comment-copy">How about <a href="https://docs.python.org/3/library/enum.html" rel="nofollow noreferrer">Enum</a>? More specifically, <a href="https://docs.python.org/3/library/enum.html#intenum" rel="nofollow noreferrer">IntEnum</a>.</span>
<span class="comment-copy">Can we assume that you know how to read the data into a list and write the sorted list data back to a file? You should post a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> showing your attempt to solve this problem. Do you want a pure Python solution? Or would you like to use Pandas?</span>
