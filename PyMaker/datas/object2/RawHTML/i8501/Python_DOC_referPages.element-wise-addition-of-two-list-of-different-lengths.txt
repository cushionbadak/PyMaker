<div class="post-text" itemprop="text">
<p>How to perform element-wise addition of different length lists?<br/>
Assuming "0" for missing elements.<br/>
Note: len(a) will always be less than or equal to len(b)</p>
<p>example:</p>
<pre><code>a=[1,2,3]
b=[1,2,3,4,5]
</code></pre>
<p>Desired result:</p>
<pre><code>result=[2,4,6,4,5]
</code></pre>
<p>I can almost, but not quite do this with:</p>
<pre><code>result=[sum(n) for n in zip(a,b)]
</code></pre>
<p>Is it possible to automatically append '0' elements to (list a) so it is the same length as (list b), prior to doing the zip? If that is a good pythonic solution, how would one do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>There's an alternative <code>zip</code> that does not stop at the shortest: <a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer"><code>itertools.zip_longest()</code></a>. You can specify a fill value for the shorter lists:</p>
<pre><code>from itertools import zip_longest

result = [sum(n) for n in zip_longest(a, b, fillvalue=0)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>izip_longest</code>:</p>
<pre><code>&gt;&gt;&gt; izip_longest(a,b,fillvalue=0)
&lt;itertools.izip_longest object at 0x10bbd2520&gt;
&gt;&gt;&gt; list(_)
[(1, 1), (2, 2), (3, 3), (0, 4), (0, 5)]
</code></pre>
<p>Then you can do:</p>
<pre><code>&gt;&gt;&gt; [sum(t) for t in izip_longest(a,b,fillvalue=0)]
[2, 4, 6, 4, 5]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can pad a with zeroes like this and use sum</p>
<pre><code>a=[1,2,3]
b=[1,2,3,4,5]
a[:] = [a[i] if i &lt; len(a) else 0 for i,j in enumerate(b)]
result=[sum(n) for n in zip(a,b)]
print result
</code></pre>
<p>results in</p>
<pre><code>[2, 4, 6, 4, 5]
</code></pre>
</div>
