<div class="post-text" itemprop="text">
<p>I want to store the numbers that are <code>1</code> or <code>2</code> or <code>3</code> or <code>4</code> or <code>5</code> only. I am trying as <code>[1-5]</code>;</p>
<pre><code> matchObj = re.match( '[1-5]', vote, re.M|re.I)
</code></pre>
<p>But it is validating <code>22</code> also. Is anything wrong here?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try with </p>
<pre><code>matchObj = re.match( '^[1-5]$', vote, re.M|re.I)
</code></pre>
<p>This way you tell that the string Starts (^) and Ends ($) with a number between 1 and 5.</p>
<p>Hope it helps</p>
</div>
<div class="post-text" itemprop="text">
<p>This is happening because <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match</code></a> matches the start of the string, so as long as it <em>starts with</em> <code>[1-5]</code> it can end with any other characters (in this case just <code>'2'</code>). You'll need to add a <code>$</code> at the end of the regex to force it to match the end of the string:</p>
<pre><code>match = re.match('[1-5]$', vote)
</code></pre>
<p>Alternatively you could use <code>vote.isdigit()</code> to test whether it's digits and then use <code>int(vote)</code> to extract the number and test the range:</p>
<pre><code>is_valid = vote.isdigit() and 1 &lt;= int(vote) &lt;= 5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you just want one of those numbers from a line of text try <code>matchObj = re.match( '\b[1-5]\b', vote, re.M|re.I)</code>.</p>
<p><code>\b</code> means word boundary so 2 matches but 22 won't.</p>
</div>
<span class="comment-copy">The thing that's wrong is you trying to match a range with regex instead of extracting the number and checking  <code>0 &lt; x &lt; 6</code> ;)</span>
<span class="comment-copy">Checking a range with regex is completely fine. It happens all the time with <code>[a-z]</code></span>
<span class="comment-copy">@ryugie it's not a number-range ;)</span>
<span class="comment-copy">from the doc: "<code>re.match(pattern, string, flags=0)</code>      If zero or more characters at the beginning of string match [...]"</span>
<span class="comment-copy">consider using <code>fullmatch</code> instead, or simply parsing as an int</span>
<span class="comment-copy">pretty sure you mean <code>$</code> for end of string.</span>
<span class="comment-copy">@pbuck Heh, pretty sure I do too -- fixed.</span>
<span class="comment-copy">It was such a brain-fart I had to write code just to make sure!</span>
