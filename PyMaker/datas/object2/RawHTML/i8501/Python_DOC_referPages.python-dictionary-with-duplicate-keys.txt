<div class="post-text" itemprop="text">
<p>I have the following Dictionary Object: </p>
<pre><code>Input = {'userName': ['psrr_api@auto-grid.com', 'ps_api1@auto-grid.com'],
         'password': ['Everseeource2016!', 'Eversource2016!']}
</code></pre>
<p>Which will then result in this specific output: </p>
<pre><code>output = [{'UserName':'ps_api@auto-grid.com','password': 'Eversource2016!'},
          {'userName':'ps_api1@auto-grid.com','password':'Eversource2016!'}]
</code></pre>
<p>I'm not sure how I would approach this problem and any help would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/library/functions.html?highlight=zip#zip" rel="nofollow noreferrer"><code>zip</code></a> to iterate over two lists as the same time. Use a <code>dict constructor</code> to create individual dictionaries, inside a <a href="https://docs.python.org/3/tutorial/datastructures.html?highlight=comprehension#list-comprehensions" rel="nofollow noreferrer"><code>list comprehension</code></a> to handle automatically looping.</p>
<pre><code>Input = {'userName': ['psrr_api@auto-grid.com', 'ps_api1@auto-grid.com'], 'password': ['Everseeource2016!', 'Eversource2016!']}

Output = [ {'UserName':u, 'password':p} for u,p in zip(Input['userName'], Input['password']) ]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In many NoSQL engines data is generally stored in a nested way, for your case it would be:</p>
<pre><code>{'ID_1':
    {
    'username':'psrr_api@auto-grid.com',
    'password': 'Everseeource2016'
    },
'ID_2':{
    'username':'ps_api1@auto-grid.com',
    'password': 'Eversource2016!'
    }
}
</code></pre>
<p>This provides an efficient way to access the data through the ID's</p>
<p><a href="https://www.3pillarglobal.com/insights/exploring-the-different-types-of-nosql-databases" rel="nofollow noreferrer">More Examples</a></p>
<p>Here's the code for converting the format:
This code is generic - means you don't have to specify the keys, in this case: <code>username</code> and <code>password</code>,</p>
<pre><code>from collections import defaultdict
data = defaultdict(dict)
for idx in range(len(Input.values()[0])):
    for key in Input.keys():
        data['ID_'+str(idx)].update({key: Input[key][idx]})
print data
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>And if by chance you need a variable number of keys, you can generalize to:</p>
<p><strong>Code:</strong></p>
<pre><code>keys = [(k,) * len(data[k]) for k in data.keys()]
data_vals = [data[k] for k in data.keys()]
output = [dict(kv) for kv in
          (zip(*pairs) for pairs in zip(zip(*keys), zip(*data_vals)))]
</code></pre>
<p><strong>Test Code:</strong></p>
<pre><code>data = {'userName': ['psrr_api@auto-grid.com', 'ps_api1@auto-grid.com'],
         'password': ['Everseeource2016!', 'Eversource2016!']}

for i in output:
    print(i)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>{'userName': 'psrr_api@auto-grid.com', 'password': 'Everseeource2016!'}
{'userName': 'ps_api1@auto-grid.com', 'password': 'Eversource2016!'}
</code></pre>
</div>
<span class="comment-copy">Dictionaries don't have duplicate keys. Can you give a better description of what you want? Just having us puzzle through the example is a bit tedious. Consider small examples with things like <code>foo</code> that fit onto the screen. And show us what you've done so far. I don't want to put more work into this than you have.</span>
<span class="comment-copy">Yh , as mentioned by tdelaney, you need to share how you ended with the above output - and also state what exactly you want.</span>
<span class="comment-copy">I would have required to hit an api which might have multiple users credentials so far that reason I did need this way. I completely Agreed that Dictionaries don't have duplicate keys</span>
