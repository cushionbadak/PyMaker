<div class="post-text" itemprop="text">
<p>I have the following method that generates data for me:</p>
<pre><code>async def fetch_url(self, video_id):
    data = await self.s3.generate_presigned_url(...video_id...)
    return data

def convert_to_json(self, data):
    loop = asyncio.get_event_loop()
    tasks = []
    urls = [row[0] for row in data]
    for url in urls:
        tasks.append(fetch_url(url))
    loop.run_until_complete(asyncio.gather(*tasks))
    loop.close()
</code></pre>
<p>How to store result from <code>fetch_url</code> in some list?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.gather" rel="nofollow noreferrer"><code>asyncio.gather</code></a>:</p>
<blockquote>
<p>… If all the tasks are done successfully, the returned future’s result is the list of results (in the order of the original sequence, not necessarily the order of results arrival). …</p>
</blockquote>
<p>That is, if you <code>await</code> the gathered result, you will get a list of fetched <code>data</code></p>
<p><br/></p>
<p><a href="https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.run_until_complete" rel="nofollow noreferrer"><code>run_until_complete</code></a>:</p>
<blockquote>
<p>Return the Future’s result, or raise its exception.</p>
</blockquote>
<p>That is <code>run_until_complete</code> will return the result <code>gather</code>, which is the list of fetched <code>data</code>.</p>
<p><br/></p>
<p>The stored result is simply:</p>
<pre><code>...
all_data = loop.run_until_complete(asyncio.gather(*tasks))
loop.close()
return all_data
</code></pre>
</div>
<span class="comment-copy">Check the return value of <code>run_until_complete</code>?</span>
<span class="comment-copy">Thank you very much! After I run this code I got <code>TypeError: object str can't be used in 'await' expression</code> inside fetch_url. How can I fix that?</span>
<span class="comment-copy">@ipetr This means <code>fetch</code> is not really an async method. You need to use an async request library like <a href="http://aiohttp.readthedocs.io/en/stable/client.html#aiohttp-client" rel="nofollow noreferrer">aiohttp</a> or <a href="http://stackoverflow.com/questions/22190403/how-could-i-use-requests-in-asyncio" title="how could i use requests in asyncio">stackoverflow.com/questions/22190403/…</a>.</span>
<span class="comment-copy">I use aiohttp. <code>fetch</code> is return <code>await self.s3.generate_presigned_url(...video_id...)</code>. Update my question</span>
<span class="comment-copy">@ipetr well <code>generate_presigned_url</code> is not async either.</span>
