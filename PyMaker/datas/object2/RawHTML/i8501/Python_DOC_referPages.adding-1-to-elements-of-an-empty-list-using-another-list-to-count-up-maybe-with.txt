<div class="post-text" itemprop="text">
<p>I'm very new to python and programming, so please keep answers simple if you can.</p>
<p>I'm trying to create a script that will add 1 to elements in an empty list based on an unordered other list. My inputs are shown below as well as my desired output. Since 5 appears twice in the 'data' list, element 5 in 'input' should count up to 2. </p>
<p>Here's the code I tried, with the error it gives:</p>
<pre><code>input = [0, 0, 0, 0, 0]
data = [5, 1, 2, 5]

input[data] += 1

#desired output: [1, 1, 0, 0, 2]
</code></pre>
<p>The error this gives: </p>
<p>TypeError: list indices must be integers, not list</p>
<p>I'm confused, because I have a list of integers, but I guess that doesn't count as type 'int'. I searched to try to convert a list to integers, but all the solutions I found result in still having type 'list'. I'm thinking += might not be the right operator to use in this instance, but I'm not sure what else to use.</p>
<p>Edit: Oops, I forgot about lists starting at 0. Thanks for pointing that out, and thanks for all the great answers! Hard to choose just one.</p>
</div>
<div class="post-text" itemprop="text">
<p>welcome to python!</p>
<p>Your problems arise from a misunderstanding of how indexing works. There are two problems. The first has to do with data types, and is neatly encapsulated in your error message: <code>TypeError: list indices must be integers, not list</code>. Let's break this down a bit:</p>
<p>'Indexing' is what happens when you use square brackets after a list to access a particular element of that list. i.e. if <code>a</code> is a list, <code>a[N]</code> will return the Nth element of a, where N is an integer. You can only access <em>one</em> element at a time when indexing. Python doesn't know what to do if you give it a list, and your error message is basically telling you "You've asked me to index a list with another list, and I don't know how to do that. I only understand integers!".</p>
<p>Because you can only index <em>one</em> value at time, the best way of doing what you're trying to do is with a loop:</p>
<pre><code>for i in data:
    input[i] += 1
</code></pre>
<p>How is this different from what you've done? Using a loop goes through each element of <code>data</code> individually, temporarily calls it <code>i</code>, and uses that to index input, and then the <code>+= 1</code> does what you were originally trying to do.</p>
<p><strong>HOWEVER</strong>, if you run the loop, you'll get a second error message, because of a different problem. This error will say <code>IndexError: list index out of range</code>, which tells you that you're requesting to access a part of the list that doesn't exist. But why? <code>input</code> has 5 items in it, and you're only asking it for indices between 1 and 5! This error arises because Python's indexing starts at zero, not one. Valid indices of the <code>input</code> list are therefore <code>[0, 1, 2, 3, 4]</code>, <em>not</em> <code>[1, 2, 3, 4, 5]</code>. Because your <code>data</code> list contains the number 5, at some point during the loop <code>i = 5</code>, and you're asking to access the sixth element of <code>index</code> (<code>index[5]</code>), which does not exist.</p>
<p>You can get past this either by changing your <code>data</code> list so that it contains valid indices, or adjusting your loop so that:</p>
<pre><code>for i in data:
    input[i - 1] += 1
</code></pre>
<p>Hope that helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>You will have to loop through the <strong>data</strong> list, since you cannot pass a list to the index of a list (which is what the error is telling you).</p>
<p>Something like:</p>
<pre><code>for ind in data:
    input[ind]+=1
</code></pre>
<p>Note also that Python lists are 0-indexed, which means the first element is called using:</p>
<pre><code>input[0]
</code></pre>
<p>I notice you have 5's in your <strong>data</strong> list - there is no 5th element in your <strong>input</strong> - the indices are 0,1,2,3,4 so you'd need to modify your code (or <strong>input</strong> list) for it to run without an error.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python basically is telling you, <em>you can't use a list as an index to another list</em>. When you try to index the <code>input</code> list with the <code>data</code> list, Python raises an error because the index object is not valid(Also, while I'm at it, <code>input</code> is a reserved keyword in Python <strong>and should not be used as variable name</strong>. But for sake of clarity, I'll keep using it).</p>
<p>This code</p>
<pre><code>input[data] += 1
</code></pre>
<p>is equivalent to this</p>
<pre><code>input[[5, 1, 2, 5]] += 1
</code></pre>
<p>Which of course makes no sense, and Python complains.</p>
<p>Now if I understand you right, you want to increment the element in <code>input</code> which corresponds to the element in <code>data</code>, each time an occurrences of the element is found. If this is the case, a <a href="https://docs.python.org/3/library/stdtypes.html?highlight=dict#dict" rel="nofollow noreferrer">dictionary</a> would be a much better choice.</p>
<p>Each key in the dictionary would the a number from <code>data</code>, and the value of each key is zero. Each time an occurrence of a key is found, the corresponding value will be incremented. eg.</p>
<pre><code>input = {5: 0, 2:0, 1:0}
data = [5, 1, 2, 5]

for element in data:
    inpt[element] += 1
</code></pre>
<p>However, a much better idea would be to use the <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter()</code></a> class:</p>
<pre><code>from collections import Counter

data = [5, 1, 2, 5]
input = Counter(data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you can do to speed things up is to use a <code>collections.Counter</code> to count the number of times it appeared in data. </p>
<pre><code>input = [0, 0, 0, 0, 0]
data = [5, 1, 2, 5]


from collections import Counter
counted = Counter(data)
for i, b in counted.items():
    input[i-1] = b
</code></pre>
<p>And as a side note, <code>input</code> or any other pre-defined names isn't good variable names since they could mess things up in the future.</p>
<p>A easier way to create the <code>input</code> is to do this in case you don't know how many zeroes you need.</p>
<pre><code>input = [0 for _ in range(max(a))] # place this after you defined counted
</code></pre>
<p>And I believe you don't even need to do this, just use the Counter instance can surely get the job done. <code>Counter({5: 2, 1: 1, 2: 1})</code> It behaves almost the same way as a dict. </p>
</div>
<div class="post-text" itemprop="text">
<p>list is accessed by its index
suppose <code>list1 = [3,4,1,2,5]</code>
to access list element i need to provide index of that element. index start with 0 to n. suppose i want to access second element of list </p>
<pre><code>print list1[1]

#out: 4
</code></pre>
<p>to iterate through list element </p>
<pre><code>for i in list1:
   print list1[i]
</code></pre>
<p>in your code you are accessing list index by  another list.</p>
</div>
<span class="comment-copy">if an element occurs more than twice? maximum count should be 2?</span>
<span class="comment-copy">I'm not sure I understand your question, but yes some elements will occur more than twice in my actual data.</span>
<span class="comment-copy">s/fifth element/sixth element/</span>
<span class="comment-copy">Thanks for explaining the problem before spewing wisdom on how to make it better.</span>
<span class="comment-copy">@MadPhysicist Yeah I do find that pretty annoying sometimes when I ask a question, and some just does a code dump. Code dumps may be useful to the OP at first, but in the long run, your doing more damage then good.</span>
<span class="comment-copy">What does it mean to use a list as an index to another list? I understood index to mean a position in a list, but that doesn't make sense in your context.</span>
<span class="comment-copy">@Liquidity It means your trying to use a list object, to index a list. The fact the that this doesn't sound right is exactly my point. Using a list object to try to index another list <i>doesn't</i> make sense in both the code and the context. Which is why Python raises an error.</span>
<span class="comment-copy">Why do you use a loop instead of a list comprehension to convert the counter to a list?</span>
<span class="comment-copy">to make it easier to read for beginners? why else</span>
<span class="comment-copy">Then why do you advocate  a list comprehension immediately after that, where it probably doesn't belong? If the elements have no dependence on the loop variable, you can do [0]*max(a)</span>
