<div class="post-text" itemprop="text">
<p>I am trying out list comprehension and I am stuck with the below problem. </p>
<pre><code>class Programmer():
    def __init__(self, name, years_at_umich=1, programs_written=0):
        self.name = name
        self.seniority = years_at_umich
        self.bonus_points = random.randrange(1000)
        self.programs_written = programs_written

    def shout(self, phrase_to_shout):
        print phrase_to_shout  # print is for ppl!

    def __str__(self):
        return "My name is {}, and I've been at UMich for about {} years.".format(self.name,self.seniority)

    def year_at_umich(self):
        return self.seniority

prog_tups = zip(names, seniority,programs_written)
print prog_tups
</code></pre>
<p>prints output </p>
<pre><code>[('Albert', 1, 10), ('Bisi', 5, 500), ('Cai', 2, 20), ('Dinesh', 4, 131), ('Euijin', 1, 46)]
</code></pre>
<p>I am trying to use list Comprehension to create a list of Programmer instances out of the prog_tups list from above and save that list in the variable programmers.</p>
<p>My current code is below, I am not getting a traceback, but nothing happens: </p>
<pre><code>programmers = [item for item in prog_tups]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In case if you don't have a custom <code>Programmer</code> class yet consider using <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer"><strong><em>collections.namedtuple</em></strong></a> subclass:</p>
<pre><code>import collections

Programmer = collections.namedtuple('Programmer', 'name seniority programs_written')
prog_tups = [('Albert', 1, 10), ('Bisi', 5, 500), ('Cai', 2, 20), ('Dinesh', 4, 131), ('Euijin', 1, 46)]
programmers = [Programmer(n, s, p) for n,s,p in prog_tups]

# the first programmer
print programmers[0]
</code></pre>
<p>The output:</p>
<pre><code>Programmer(name='Albert', seniority=1, programs_written=10)
</code></pre>
<hr/>
<p>To deal with your existing custom class, use the following approach:</p>
<pre><code>prog_tups = [('Albert', 1, 10), ('Bisi', 5, 500), ('Cai', 2, 20), ('Dinesh', 4, 131), ('Euijin', 1, 46)]
programmers = [Programmer(*t) for t in prog_tups]

# the first programmer
print programmers[0]
</code></pre>
<p>The output:</p>
<pre><code>My name is Albert, and I've been at UMich for about 1 years.
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand your question correctly, you want to have a list of only the names. Seeing as the names are the first element in the tuples, a simple solution would be <code>programmers = [item[0] for item in prog_tuples]</code> to obtain only the names. To see if this works, simply <code>print()</code> it.</p>
</div>
<span class="comment-copy"><code>programmers = [item for item in prog_tups]</code> is just copying <code>prog_tups</code> in <code>programmers</code>... you probably need to <i>print</i> <code>programmers</code> to get an output...</span>
<span class="comment-copy">What do you mean Programmer instances? Where is the Programmer class?</span>
<span class="comment-copy">@Jean-Fran√ßoisFabre, in such case, he could just <code>print names</code>(as it contains a programmers names)</span>
<span class="comment-copy">yes, I think he wants to create a <code>Programmer</code> object. but first things first. Lesson #1: <code>print</code> statement...</span>
<span class="comment-copy">We need to know more about your <code>Programmer</code> class to answer this question. Can you add the type signature of your <code>Programmer</code> constructor (<code>def __init__(self, ...)</code>)?</span>
<span class="comment-copy">Awesome that did the trick, thank you. Also I edited my code to add the Programmer class.</span>
<span class="comment-copy">@Avery9115, welcome, also, see my update to deal with your custom class</span>
