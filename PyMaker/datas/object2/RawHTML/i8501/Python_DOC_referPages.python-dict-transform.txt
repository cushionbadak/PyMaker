<div class="post-text" itemprop="text">
<p>I've been having some strange difficulty trying to transform a dataset that I have.</p>
<p>I currently have a dictionary coming from a form as follows:</p>
<pre><code>data['content']['answers']
</code></pre>
<p>I would like to have the ['answers'] appended to the first element of a list like so:</p>
<pre><code>data['content'][0]['answers']
</code></pre>
<p>However when I try to create it as so, I get an empty dataset.</p>
<pre><code>data['content'] = [data['content']['answers']]
</code></pre>
<p>I can't for the life of me figure out what I am doing wrong.</p>
<p>EDIT: Here is the opening JSON </p>
<p>I have:</p>
<pre><code>{
"content" : {
              "answers" : {
                "3" : {
</code></pre>
<p>But I need it to be:</p>
<pre><code>    {
"content" : [
              {
                 "answers" : {
                  "3" : {
</code></pre>
<p>thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do what you want by using a <em>dictionary comprehension</em> (which is one of the most elegant and powerful features in Python.)</p>
<p>In your case, the following should work:</p>
<pre><code>d = {k:[v] for k,v in d.items()} 
</code></pre>
<p>You mentioned JSON in your question. Rather than rolling your own parser (which it seems like you <em>might</em> be trying to do), consider using the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json</a> module.</p>
</div>
<div class="post-text" itemprop="text">
<p>If I've understood the question correctly, it sounds like you need <code>data['contents']</code> to be equal to a list where each element is a dictionary that was previously contained in <code>data['contents']</code>?</p>
<p>I believe this might work (works in Python 2.7 and 3.6):</p>
<pre><code># assuming that data['content'] is equal to {'answers': {'3':'stuff'}}

data['content'] = [{key:contents} for key,contents in data['content'].items()]

&gt;&gt;&gt; [{'answers': {'3': 'stuff'}}]
</code></pre>
<p>The list comprehension will preserve the dictionary content for each dictionary that was in <code>contents</code> originally and will return the dictionaries as a list.</p>
<p>Python 2 doc: <a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions</a></p>
<p>Python 3 doc:
<a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions</a></p>
</div>
<div class="post-text" itemprop="text">
<p>It would be best if you give us a concrete example of 'data' (what the dictionary looks like), what code you try to run, what result you get and what you except. I think I have an idea but can't be sure.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your question isn't clear and lacks of an explicit example.</p>
<p>Btw, something like this can work for you?</p>
<pre><code>data_list = list()
for content in data.keys():
    data_list.append(data[content])
</code></pre>
</div>
<span class="comment-copy">Show us a repeatable example</span>
<span class="comment-copy">You have a dict-of-dict, and you say you want to convert it to a dict-of-list-of-dict</span>
<span class="comment-copy">yes exactly, I've added some more info</span>
<span class="comment-copy">Wouldn't <code>d = {k:[v] for k,v in d.items()}</code> work? In your edit you are just putting brackets around the values of the outer dictionary.</span>
<span class="comment-copy">In Python, sometimes the answer is too short to see. It almost seems like cheating how short an answer might be. In any event, I posted it below.</span>
<span class="comment-copy">Just added more info above.</span>
<span class="comment-copy">This is a comment rather than an answer. Please don't post comments as answers.</span>
