<div class="post-text" itemprop="text">
<p><strong>Python 3.</strong> Probably need to use urllib to do this,</p>
<p>I need to know how to send a request to a direct download link, and get the name of the file it attempts to save.</p>
<p>(As an example, a KSP mod from CurseForge: <a href="https://kerbal.curseforge.com/projects/mechjeb/files/2355387/download" rel="nofollow noreferrer">https://kerbal.curseforge.com/projects/mechjeb/files/2355387/download</a>)</p>
<p>Of course, the file ID (<code>2355387</code>) will be changed. It could be from any project, but always on CurseForge. (If that makes a difference on the way it's downloaded.)</p>
<p>That example link results in the file:</p>
<p><img alt="Download Screenshot" src="https://i.imgur.com/5MYHKNn.png"/></p>
<p>How can I return that file name in Python?</p>
<p><strong>Edit:</strong> I should note that I want to avoid saving the file, reading the name, then deleting it if possible. That seems like the worst way to do this.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/urllib.request.html#module-urllib.request" rel="noreferrer"><strong><code>urllib.request</code></strong></a>, when you request a response from a url, the response contains a reference to the url you are downloading.</p>
<pre><code>&gt;&gt;&gt; from urllib.request import urlopen    
&gt;&gt;&gt; url = 'https://kerbal.curseforge.com/projects/mechjeb/files/2355387/download'
&gt;&gt;&gt; response = urlopen(url)
&gt;&gt;&gt; response.url
'https://addons-origin.cursecdn.com/files/2355/387/MechJeb2-2.6.0.0.zip'
</code></pre>
<p>You can use <a href="https://docs.python.org/3/library/os.path.html#os.path.basename" rel="noreferrer"><strong><code>os.path.basename</code></strong></a> to get the filename:</p>
<pre><code>&gt;&gt;&gt; from os.path import basename
&gt;&gt;&gt; basename(response.url)
'MechJeb2-2.6.0.0.zip'
</code></pre>
</div>
<span class="comment-copy">Thank you! I hadn't thought of it as a redirect, I tried everything else I could think of but I never thought it would be this simple.</span>
<span class="comment-copy">It also seems odd to me that <code>os.path</code> works on a URL. Is this intended or merely an inadvertent benefit?</span>
<span class="comment-copy">See the answers to <a href="http://stackoverflow.com/questions/7894384/python-get-url-path-sections"><b>Get URL path sections</b></a>. More generally you might want to use a combination of <a href="https://docs.python.org/2/library/urlparse.html" rel="nofollow noreferrer"><b><code>urlparse</code></b></a> and <b><code>posixpath</code></b>.</span>
