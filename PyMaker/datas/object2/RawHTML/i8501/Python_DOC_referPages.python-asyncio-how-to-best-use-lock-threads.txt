<div class="post-text" itemprop="text">
<p>Let's imagine I have a thread with an asyncio event loop and other threads running.</p>
<p>I may have to deal with synchronisation between threads with the lock mecanism for instance. But the lock may block the coroutine... And no other tasks (in the asyncio thread) will run concurrently.</p>
<p>What is the solution ? My guess is that a kind of lock primitivve which would be asynchronous could do the job  but it does not exist as far as I know.</p>
<p>To be precise: I do not refer to the existing asyncio lock primitive.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/asyncio-eventloop.html#asyncio.AbstractEventLoop.run_in_executor" rel="nofollow noreferrer">loop.run_in_executor</a> to run a  synchronous call in a thread:</p>
<pre><code>def synchronous_function():
    with synchronous_lock:
        # Do something

async def asynchronous_function():
    await loop.run_in_executor(None, synchronous_function)
</code></pre>
</div>
<span class="comment-copy">We surely need an example. Now it is not clear why are you mixing up threads and asyncio; And what are you going to lock</span>
