<div class="post-text" itemprop="text">
<p>Is there a way to have two lists named list1 and list2 and be able to look up the position of one entry in another. i.e.</p>
<pre><code>list_one = ["0", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]

list_two = ["h","e","l","l","o"]
</code></pre>
<p>my aim is to allow the user to enter a word which the program will then convert in a set of numbers corresponding to the letters entries in list_one</p>
<p>so if the user did input hello the computer would return 85121215 (being the position of the entries)</p>
<p>is there a possible way to do this </p>
</div>
<div class="post-text" itemprop="text">
<p>Looking up the position of an item in a list is not a very efficient operation.  A dict is a better data structure for this kind of task.  </p>
<pre><code>&gt;&gt;&gt; d = {k:v for v,k in enumerate(list_one)}
&gt;&gt;&gt; print(*(d[k] for k in list_two))
8 5 12 12 15
</code></pre>
<p>If your <code>list_one</code> is always just the alphabet, in alphabetical order, it's probably better and simpler to get something working by using the builtin function <a href="https://docs.python.org/3/library/functions.html#ord" rel="noreferrer"><code>ord</code></a>.  </p>
</div>
<div class="post-text" itemprop="text">
<p>Adding to @wim's answer, could be done with a simple comprehension.</p>
<pre><code>&gt;&gt;&gt; [list_one.index(x) for x in list_two]
[8, 5, 12, 12, 15]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>the <code>x.index(i)</code> returns the position of the element <code>i</code> of the list <code>x</code></p>
<pre><code>print("".join([str(list_one.index(i)) for i in list_two]))
85121215
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>.index()</code> on a list:</p>
<pre><code>list_one = ["0", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z"]

string = "hello"
positions = [list_one.index(c) for c in string]
print(positions)
# [8, 5, 12, 12, 15]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can iterate thought the list :</p>
<pre><code>&gt;&gt;&gt; for i in range(len(list_two)):
...     for j in range(len(list_one)):
...             if list_two[i]==list_one[j]:
...                     list_3.append(j)
&gt;&gt;&gt; list_3
[8, 5, 12, 12, 15]
</code></pre>
<p>but wim's answer is more elegant !</p>
</div>
<span class="comment-copy">It looks like your homework!</span>
<span class="comment-copy">What do you want to do with letters that are duplicated in list1? If there are no duplications or you just want to use the location of the first occurrence, then you could use a dictionary.</span>
<span class="comment-copy">thanks for that! it works now</span>
<span class="comment-copy">great solution!</span>
<span class="comment-copy">thanks! this also helps me. I was looking for a way to store the output as a variable and yours does that. thanks!</span>
<span class="comment-copy">This is much cleaner.</span>
