<div class="post-text" itemprop="text">
<p>I wrote a code where in I have a base class for <code>SchoolMember</code> and derived two classes : <code>Teacher</code> &amp; <code>Student</code>. Please refer the code below:</p>
<pre><code>class SchoolMember:
    '''Represents school member'''
    def __init__(self,name,age):
        self.name=name
        self.age=age
        print('Initialised school member is:', format(self.name))

    def tell(self):
        print ('Name: \t Age: ', format(self.name, self.age))

class Teacher(SchoolMember):
    def __init__(self,name,salary,age):
        SchoolMember.__init__(self,name,age)
        self.salary=salary
        print ('Initialised teacher is ', format(self.name))

    def tell(self):
        '''Prints the salary of the teacher'''
        print('Salary of teacher is ', format(self.salary))

class Student(SchoolMember):
    def __init__(self,name,age,fees):
        SchoolMember.__init__(self,name,age)
        self.fees=fees
        print('Initialised student is',format(self.name))

    def tell(self):
        '''Tells the fees of the student'''
        print('Fees  of student is', format(self.fees))

t = Teacher('Richa', 26,4000)
s = Student('Shubh',21, 2000)

print()
members = [t,s]
for member in members:
    member.tell()
</code></pre>
<p>Output :</p>
<pre><code>('Initialised school member is:', 'Richa')
('Initialised teacher is ', 'Richa')
('Initialised school member is:', 'Shubh')
('Initialised student is', 'Shubh')
()
('Salary of teacher is ', '4000')
('Fees  of student is', '2000')
</code></pre>
<p>Now , my question is : how to get the age in output?</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to read up on the <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow noreferrer"><code>format()</code> function</a> documentation; you are not using it the way it was designed to; the function formats a value according to a specification (the optional second argument).</p>
<p>In fact, you do not need to use it <em>at all</em>.</p>
<p>Use <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>str.format()</code></a> instead, a method on strings:</p>
<pre><code>print 'Name: {}\t Age: {}'.format(self.name, self.age)
</code></pre>
<p>Here the <code>{}</code> placeholders are replaced with the values you pass to the method.</p>
<p>Note that I didn't use <code>print</code> as a function; in Python 2 it is a <em>statement</em>; this is why you see <code>()</code> when you execute <code>print()</code>; that's just <code>print tuple()</code>, really. You <em>could</em> use <code>from __future__ import print_function</code> at the top of your modules, but I'll stick with the old statement for now; it'd be better to just switch to Python 3 entirely.</p>
<p>Next, you want to execute the overridden <code>SchoolMember.tell()</code> method directly from your subclasses:</p>
<pre><code>def tell(self):
    '''Tells the fees of the student'''
    SchoolMember.tell(self)
    print 'Fees  of student is {}'.format(self.fees)
</code></pre>
<p>Because you access the method <em>unbound</em> on the class, you need to manually pass in <code>self</code>.</p>
<p>In new-style classes (inheriting from <code>object</code>, the default base class in Python 3), you could also use the <a href="https://docs.python.org/3/library/functions.html#super" rel="nofollow noreferrer"><code>super()</code> function</a>; if your tutorial is using <code>super()</code> <em>already</em> but you could not get it to work, you are most likely following a Python 3 tutorial and you want to upgrade, rather than stick with a legacy version of the language.</p>
</div>
<span class="comment-copy">I'm unclear what you're asking.  Are you asking how to call the base-class version of tell or the format issue Martijn is answering, or some other issue?</span>
