<div class="post-text" itemprop="text">
<p>I would like a way to find which element in a list is not <code>""</code>
<br/>For example, for this:
<br/><code>['','','b']</code>
<br/>It should return <code>2</code> because the index of <code>"b"</code> is <code>2</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The following uses <code>enumerate</code> to tie each element to a numeric index, then we filter the array for non-empty strings.</p>
<h2>If you want all instances:</h2>
<pre><code>test = ['','','b'] 
print(filter(lambda a: a[1] != "", enumerate(test)))
</code></pre>
<h3>Returns</h3>
<pre><code>[(2, 'b')]
</code></pre>
<h3>If you only want the first instance:</h3>
<pre><code>test = ['','','b'] 
print(filter(lambda a: a[1] != "", enumerate(test))[0][0])
</code></pre>
<h3>If you want a list of all instances:</h3>
<pre><code>test = ['','','b'] 
print([ele[0] for ele in filter(lambda a: a[1] != "", enumerate(test))])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A nice, fast way can use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code></a> with <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a> and a <a href="https://www.python.org/dev/peps/pep-0289/" rel="nofollow noreferrer">generator expression</a>:</p>
<pre><code>next(index for index,item in enumerate(mylist) if item != '')
</code></pre>
<p>That is very efficient; it stops checking as soon as it finds a match. If everything in the list is <code>''</code>, it will throw a StopIteration exception. If you want to have a default value, say -1:</p>
<pre><code>next((index for index,item in enumerate(mylist) if item != ''), -1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a simple for loop and check if the value is not '' then save the index of the value within a list comprehension to solve your problem </p>
<pre><code>test = ['','','b'] 
print([test.index(x) for x in test if x != ''][0]) # output 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>All the other answers looks concise , but it will iterate over the entire list even if the first element is not <code>''</code>. If you just need the first element which is not <code>''</code>, I think you should use a simple for loop.</p>
<pre><code>def function(a,k):
    for i, j in enumerate(a):
        if j != k:
            return i

a = ['','','b']
k=''
print(function(a,k))
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/2161752/how-to-count-the-frequency-of-the-elements-in-a-list">How to count the frequency of the elements in a list?</a></span>
<span class="comment-copy">@umutto: No, that's quite different. That's asking about frequency for every character; this is about the index of the first character that is different.</span>
<span class="comment-copy">The first one returns: &lt;filter object at 0x04317EB0&gt; The second one returns: Traceback (most recent call last):   File "&lt;pyshell#4&gt;", line 1, in &lt;module&gt;     print(filter(lambda a: a[1] != "", enumerate(test))[0][0]) TypeError: 'filter' object is not subscriptable</span>
<span class="comment-copy">The code compiles correctly on my end.  What version of python are you using?  And are you trying my exact code?</span>
<span class="comment-copy">No, I want it to return the index value of 'b'</span>
<span class="comment-copy">@user36456453765745 there, but please make your question clear on your initial post next time.</span>
<span class="comment-copy">@abccd Actual, I think it was pretty clear what the OP wanted from the beginning. He said <i>"I would like a way to find which element in a list is not <code>""</code> "</i> not <i>"I would like a way to find <b>how many</b> elements in a list are <code>""</code>"</i>. But more importantly, if you were not exactly sure what the OP wanted, why did you answer in the first place? Unclear questions should be closed until they become clear, instead of trying to guess at what the correct answer would be.</span>
