<div class="post-text" itemprop="text">
<p>I need to get index (number) of item in list, which contains a string <code>c = "Return To Sender (Matrey Remix)"</code>. Then get information from this index. But I got numbers of all items in list. No errors</p>
<pre><code>demo = json.loads(raw)
c = "Return To Sender (Matrey Remix)"
for i in (i for i, tr in enumerate(demo['tracks']) if str(tr['title']).find(c)):
    print(i)
dict = demo['tracks'][i]
</code></pre>
<p>For example I have 7 track titles in result of code:</p>
<pre><code>for tr in demo['tracks']:
    print(tr['title'])
</code></pre>
<p>Track titles:</p>
<pre><code>Return To Sender (Original Mix)
Return To Sender (Matrey Remix)
Return To Sender (Matrey Remix)
Return To Sender (Matrey Remix)
Return To Sender (Original Mix)
Return To Sender (Original Mix)
Return To Sender (Original Mix)
</code></pre>
<p>But output is empty</p>
<p>The <code>demo</code> object:</p>
<pre><code>{
    'mixes': [],
    'packs': [],
    'stems': [],
    'tracks': [{
        'id': 7407969,
        'mix': 'Original Mix',
        'name': 'Return To Sender',
        'title': 'Return To Sender (Original Mix)',
    }, {
        'id': 7407971,
        'mix': 'Matrey Remix',
        'name': 'Return To Sender',
        'title': 'Return To Sender (Matrey Remix)',
    }, {
        'id': 9011142,
        'mix': 'Matrey Remix',
        'name': 'Return To Sender',
        'title': 'Return To Sender (Matrey Remix)',
    }, {
        'id': 7846774,
        'mix': 'Matrey Remix',
        'name': 'Return To Sender',
        'title': 'Return To Sender (Matrey Remix)',
    }, {
        'id': 7407969,
        'mix': 'Original Mix',
        'name': 'Return To Sender',
        'title': 'Return To Sender (Original Mix)',
    }, {
        'id': 9011141,
        'mix': 'Original Mix',
        'name': 'Return To Sender',
        'type': 'track',
    }, {
        'id': 7789328,
        'mix': 'Original Mix',
        'name': 'Return To Sender',
        'title': 'Return To Sender (Original Mix)',
    }]
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>str.find()</code> returns <code>0</code> when the text is found at the start:</p>
<pre><code>&gt;&gt;&gt; 'foo bar'.find('foo')
0
</code></pre>
<p>That is considered a <em>false</em> value in a boolean context:</p>
<pre><code>&gt;&gt;&gt; if 0:
...     print('Found at position 0!')
...
&gt;&gt;&gt;
</code></pre>
<p>If the text is not there, <code>str.find()</code> returns <code>-1</code> instead. From the <a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer"><code>str.find()</code> documentation</a>:</p>
<blockquote>
<p>Return the lowest index in the string where substring <em>sub</em> is found <em>[...]</em>. Return -1 if sub is not found.</p>
</blockquote>
<p>This means that <strong>only if the text is at the start</strong> will your code not print anything. In all other cases (including <em>not</em> finding the title), the tracks will be printed.</p>
<p>Don't use <code>str.find()</code>. Use <code>in</code> to get <code>True</code> if the text is there, <code>False</code> if it is not:</p>
<pre><code>for i in (i for i, tr in enumerate(demo['tracks']) if c in tr['title']):
</code></pre>
<p>Demo using your <code>json</code> data:</p>
<pre><code>&gt;&gt;&gt; c = "Return To Sender (Matrey Remix)"
&gt;&gt;&gt; for i in (i for i, tr in enumerate(demo['tracks']) if c in tr['title']):
...     print(i)
...
1
2
3
</code></pre>
</div>
