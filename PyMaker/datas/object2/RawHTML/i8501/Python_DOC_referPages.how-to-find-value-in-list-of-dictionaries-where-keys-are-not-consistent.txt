<div class="post-text" itemprop="text">
<p>here, I have a list of dictionaries, I need to find the object using value.</p>
<pre><code>people = [
   {'name': mifta}
   {'name': 'khaled', 'age':30},
   {'name': 'reshad', 'age':31}
]
</code></pre>
<p>I would like to find by 'age' key where value is 30. I can do this by following way</p>
<pre><code>for person in people:
  if person.get('age'):
    if person['age'] == 30:
</code></pre>
<p>is there any better way to do this without lots of if else?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to avoid if..else you can use lambda function.</p>
<pre><code>fieldMatch = filter(lambda x: 30 == x.get('age'), people)
</code></pre>
<p>or also use list comprehension to get names in a list.</p>
<pre><code>names = [person['name'] for person in people if person.get('age') == 30]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can just use <code>dict.get()</code> one time without <code>person['age']</code>, it allows you to provide a default value if the key is missing, so you can try this:</p>
<p><a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer">dict.get</a></p>
<blockquote>
<p>Return the value for key if key is in the dictionary, else default. If
  default is not given, it defaults to None, so that this method never
  raises a KeyError</p>
</blockquote>
<pre><code>people = [
   {'name': 'mifta'},
   {'name': 'khaled', 'age':30},
   {'name': 'reshad', 'age':31}
]    
for person in people:
    if person.get('age',0)==30:
        print(person)
</code></pre>
</div>
<span class="comment-copy">you just need to use <code>if person.get('age') == 30:</code>, <code>get</code> by default returns <code>None</code> which is never <code>== 30</code></span>
<span class="comment-copy">lambda worked perfect for me. thank you</span>
<span class="comment-copy">list comprehension is considered much easier to read than lambda.</span>
