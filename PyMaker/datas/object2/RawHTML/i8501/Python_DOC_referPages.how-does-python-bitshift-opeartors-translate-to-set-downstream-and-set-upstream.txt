<div class="post-text" itemprop="text">
<p>I want to understand how Python bitshift operators <code>&gt;&gt;</code> and <code>&lt;&lt;</code> are used for defining operator relationships in Airflow. I am not able to figure out the logic that can be used for translating the functionality of set_upstream() and set_downstream() methods using the bitshift operators. It will be helpful if someone can also point me to the relevant module in the Airflow code repo.</p>
<pre><code>what makes       op1 &gt;&gt; op2 &gt;&gt; op3 &lt;&lt; op4

equivalent to    op1.set_downstream(op2)
                 op2.set_downstream(op3)
                 op3.set_upstream(op4)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>&gt;&gt;</code> and <code>&lt;&lt;</code> are translated to the <a href="https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types" rel="nofollow noreferrer"><code>__lshift__</code>/<code>__rlshift__</code> and <code>__rshift__</code>/<code>__rrshift__</code> methods</a> of the relevant object.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>It will be helpful if someone can also point me to the relevant module in the Airflow code repo.</p>
</blockquote>
<p>The relevant module where it is defined is <a href="https://github.com/apache/incubator-airflow/blob/51e4ad6e6472dbf42b5531952ea64058ac68836b/airflow/models.py#L2689" rel="nofollow noreferrer"><em>models.py</em></a>, by the way. And the line of relevance is <a href="https://github.com/apache/incubator-airflow/blob/51e4ad6e6472dbf42b5531952ea64058ac68836b/airflow/models.py#L2689" rel="nofollow noreferrer">where the <code>__rshift__</code>, <code>__lshift__</code>, <code>__rrshift__</code> and <code>__rlshift__</code> operators are defined</a>, which are the methods that <code>&gt;&gt;</code> and <code>&lt;&lt;</code> translate to.</p>
</div>
<span class="comment-copy">There's probably a magic method that allows classes to override the butthurt operator functions.</span>
<span class="comment-copy">This is how its implemented:   <code>def __rshift__(self, other):</code> <code>self.set_downstream(other)</code> <code>return other</code></span>
