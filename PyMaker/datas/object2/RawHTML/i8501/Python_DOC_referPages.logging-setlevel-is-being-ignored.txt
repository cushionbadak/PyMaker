<div class="post-text" itemprop="text">
<p>The below code is copied from the documentation. I am supposed to be able to see all the info logs. But I don't. I am only able to see the warn and above even though I've set setLevel to INFO.</p>
<p>Why is this happening? <code>foo.py</code>:</p>
<pre><code>import logging

logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)

logger.debug('debug message')
logger.info('info message')
logger.warn('warn message')
logger.error('error message')
logger.critical('critical message')
</code></pre>
<p>Output:</p>
<pre><code>workingDirectory$ python foo.py
warn message
error message
critical message
</code></pre>
<p>Where did the info and debug messages go??</p>
</div>
<div class="post-text" itemprop="text">
<p>Replace the line</p>
<pre><code>logger.setLevel(logging.DEBUG)
</code></pre>
<p>with</p>
<pre><code>logging.basicConfig(level=logging.DEBUG, format='%(message)s')
</code></pre>
<p>and it should work as expected. If you don't configure logging with any handlers (as in your post - you only configure a level for your logger, but no handlers anywhere), you'll get an internal handler <a href="https://docs.python.org/3/library/logging.html#logging.lastResort" rel="noreferrer">"of last resort"</a> which is set to output just the message (with no other formatting) at the <code>WARNING</code> level.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try running <a href="https://docs.python.org/3/library/logging.html#logging.basicConfig" rel="noreferrer"><code>logging.basicConfig()</code></a> in there.  Of note, I see you mention INFO, but use DEBUG.  As written, it should show all five messages.  Swap out DEBUG with INFO, and you should see four messages.</p>
<pre><code>import logging

logging.basicConfig()
logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)

logger.debug('debug message')
logger.info('info message')
logger.warn('warn message')
logger.error('error message')
logger.critical('critical message')
</code></pre>
<p>edit:  Do you have logging set up elsewhere in your code already?  Can't reproduce the exact behavior you note with the specific code provided.</p>
</div>
<span class="comment-copy">Thanks Vinay, you maintain <code>logging</code>?? Thanks for taking the time to answer a newbie question! I'll try this later tonight and confirm that it worked.</span>
<span class="comment-copy">It worked thanks!</span>
<span class="comment-copy">Hold on - this sets the global/root logging settings, but what if I wanted to set the level only for <code>logger</code>? And why doesn't <code>logger.setLevel(logging.DEBUG)</code> work? It should.</span>
<span class="comment-copy">@Greg because no handler was configured, so logging uses an internal "handler of last resort" which has a level of <code>WARNING</code>: <a href="https://docs.python.org/3.2/library/logging.html#logging.lastResort" rel="nofollow noreferrer">docs.python.org/3.2/library/logging.html#logging.lastResort</a></span>
<span class="comment-copy">Still, it should work. The user sets the level explicitly.</span>
<span class="comment-copy">Hi @tabbek, thanks for the reply. I'll try doing the basicConfig() instead. I'll be able to do it later tonight. I do not have any other code. I have another project with a handler, which works. Then I tried starting a new project, did not work. So I wrote this barebones script. The above code is the only content of <code>foo.py</code>. I'm thinking there is some interference going on or something. I'll keep you updated!</span>
<span class="comment-copy">This works! But why?</span>
<span class="comment-copy">basicConfig() does some basic setup and creation of a new log handler.  from <a href="https://docs.python.org/2/library/logging.html" rel="nofollow noreferrer">docs.python.org/2/library/logging.html</a> at logging.basicConfig([**kwargs])</span>
<span class="comment-copy">basicConfig() should attach a handler with WARNING level.  So does "logger.setLevel(logging.DEBUG)" here set BOTH logger and handler level?</span>
