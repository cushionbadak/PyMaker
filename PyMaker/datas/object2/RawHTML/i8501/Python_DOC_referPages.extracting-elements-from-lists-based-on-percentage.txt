<div class="post-text" itemprop="text">
<p>Say I have a list of n sub lists, </p>
<pre><code>a =[["cat", "dog", "cow", "apple"], ["apple", "dog"],  ["cat", "apple"]["cat","apple", "deer"]]
</code></pre>
<p>Assuming that the threshold percentage is 70%, the elements which appear at least 70% of the time in the sub lists should be in the output.
In this example, "apple" appears in all the sub lists, "cat" comes 3/4 time in all the sub lists.
Hence, the output should be ["apple", "cat"]
How can I achieve this?</p>
<p>I was using intersection, but then only the common elements in all sub lists would come in the output.</p>
<pre><code>output= list(set(a[0]).intersection(*a))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This will do the job:</p>
<pre><code>import collections
import itertools
a =[["cat", "dog", "cow", "apple"], ["apple", "dog"],  ["cat", "apple"],["cat","apple", "deer"]]
n=len(a)
counter = collections.Counter(itertools.chain(*a))
res=[i for i in counter if counter[i]&gt;=0.7*n]
print(res)
</code></pre>
<p>This prints </p>
<pre><code>['cat', 'apple']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a></p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; c = Counter()
&gt;&gt;&gt; for l in a:
...     c.update(set(l))
... 
&gt;&gt;&gt; c
Counter({'apple': 4, 'cat': 3, 'dog': 2, 'deer': 1, 'cow': 1})
&gt;&gt;&gt; [key for key, value in c.items() if value &gt;= 0.7 * len(a)]
['cat', 'apple']
</code></pre>
</div>
<span class="comment-copy">Could same element appear multiple times in sublist i.e. <code>cat</code> appears multiple times in <code>["cat", "dog", "cow", "apple", "cat"]</code>?</span>
<span class="comment-copy">No, they are distinct!</span>
<span class="comment-copy">The code runs fine, thanks a lot! Although, I am getting this inspection warning in my PyCharm, "Unexpected arugument" for <code>Counter(itertools.chain(*a))</code></span>
<span class="comment-copy">You're welcome! Also, on my PyCharm I don't get any warning, so I guess it depends on the PyCharm version</span>
<span class="comment-copy">Yeah, alright! :)</span>
<span class="comment-copy">Thanks a lot! :)</span>
