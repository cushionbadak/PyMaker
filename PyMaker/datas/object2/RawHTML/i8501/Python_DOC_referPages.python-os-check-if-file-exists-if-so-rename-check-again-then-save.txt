<div class="post-text" itemprop="text">
<p>I have a script that takes a file from a form, renames it and uploads it to a folder and inserts record into a database. I would like to add the functionality where before the file is saved, it checks the upload folder to determine if the filename exists. If it does exist, renames the file in a loop and then saves the file.</p>
<p>What I have currently:</p>
<pre><code>file = request.files['xx']
extension = os.path.splitext(file.filename)[1]
xx = str(uuid.uuid4()) + extension
## if xx exists .. xx = str(uuid.uuid4()) + extension.. loop endlessly.
file.save(os.path.join(app.config['UPLOAD_FOLDER'], xx)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Haven't tested this yet but you can use <code>os.path.isfile()</code> to check if a file already exists (for directories, use <code>os.path.exists</code>).</p>
<pre><code>import os

def save():
    file = request.files['xx']
    extension = os.path.splitext(file.filename)[1]

    xx = generate_filename(extension)

    file.save(os.path.join(app.config['UPLOAD_FOLDER'], xx))

def generate_filename(extension):
    xx = str(uuid.uuid4()) + extension
    if os.path.isfile(os.path.join(app.config['UPLOAD_FOLDER'], xx)):
        return generate_filename(extension)
    return xx
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>quick and dirty, haven't tested this. using the check and rename function recursively to add "_1", "_2" etc to the end of the file name until it can be saved.</p>
<pre><code>def check_and_rename(file, add=0):
    original_file = file
    if add != 0:
        split = file.split(".")
        part_1 = split[0] + "_" + str(add)
        file = ".".join([part1, split[1]])
    if not os.path.isfile(file):
        # save here
    else:
        check_and_rename(original_file, add+=1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried to use the <code>glob</code> <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">Module</a>, it provides an interface similar to <code>ls</code>, you can use it as it follows:</p>
<pre><code>import os
import glob
file_list = glob.glob('my_file')
if len(file_list) &gt; 0:
   os.rename('my_file', 'new_name')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>if not os.path.isfile(xx):
    file.save(os.path.join(app.config['UPLOAD_FOLDER'], xx)
else:
    print("File does not exist")
</code></pre>
</div>
<span class="comment-copy">use the <code>shutil</code> module: <a href="https://docs.python.org/3/library/shutil.html" rel="nofollow noreferrer">docs.python.org/3/library/shutil.html</a></span>
<span class="comment-copy">you may add the code before the file.save line: while os.path.exists(xx): xx = str(uuid.uuid4()) + extension</span>
<span class="comment-copy">Thank you Paul for informing being about the shutil module!. This will come in handy big time!</span>
<span class="comment-copy">Thank you jyap, just what I needed!</span>
<span class="comment-copy">Glad I could help.</span>
<span class="comment-copy">Your code doesn't work. I will edit to satisfy the purpose.</span>
