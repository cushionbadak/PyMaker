<div class="post-text" itemprop="text">
<p>I have created a simple command line game in python.
The user begins by inputting their nickname which is stored as <code>name</code></p>
<p>At the end of the game the user's score is stored in a file like so:</p>
<pre><code>wins = str(wins)
losses = str(losses)

file = open('scores.py','a')
file.write(name + ": wins = " + wins + "  losses = " + losses + "\n\n")
file.close
</code></pre>
<p><em>( I converted the 'wins' and 'losses' variables to strings as I couldn't seem to write integers to a file, I don't know if this is possible (i'm sure it is) but I just didn't know how to do it. )</em></p>
<p>I want the user playing the game to have a cumulative score, i.e. if they were to play 1 game and win 6 rounds, play another game and win 2 rounds, I don't want there to by 2 entries in the 'scores.py' file, I would like it to say:</p>
<pre><code>*User*: wins = 8 losses = 0
</code></pre>
<p>The only way I could think of doing this is that after each game finishes, the user's name and score would be appended to the 'scores.py' file, but before that, the file is scanned line-by-line to check whether or not the user's nickname already has an entered score. IF the name inputted at the start of the game is the same name as the one being read on the particular line in the 'scores.py' file, extract the line, convert the string values for wins and for losses to integers, add the current score in the game to the stored score, and then write it back into the file.</p>
<p>Any and all help would be greatly appreciated, and excuse me if the code is terrible and the solution is simple, I am extremely new to python and am not very well-versed in code in general either.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the built-in <code>json</code> module. I think it fits nicely with your use case.</p>
<pre><code>import json

def update_scores(name, wins, losses, scores_file='scores.json'):
    try:
        with open(scores_file, 'r') as f:
            scores = json.load(f)
    except (IOError, ValueError):
        # Non existing or empty file.
        scores = {} 
    try:
        scores[name]['wins'] += wins
        scores[name]['losses'] += losses
    except KeyError:
        # Initialize user score
        scores[name] = {'wins': wins, 'losses': losses}
    with open(scores_file, 'w') as f:
        json.dump(scores, f)

# Use:
update_scores('foo', 3, 8)  # {"foo": {"wins": 3, "losses": 8}}
update_scores('foo', 3, 2)  # {"foo": {"wins": 6, "losses": 10}}
update_scores('bar', 8, 0)  # {"foo": {"wins": 6, "losses": 10}, "bar": {"wins": 8, "losses": 0}}
</code></pre>
</div>
<span class="comment-copy">Don't use the <code>.py</code> extension unless the content is valid python. It's too confusing.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/5453267/is-it-possible-to-modify-lines-in-a-file-in-place">Is it possible to modify lines in a file in-place?</a></span>
<span class="comment-copy">You could use a dictionary <code>{'user':[wins, losses], ...}</code> to hold the info for all your users then use <a href="https://docs.python.org/3/library/pickle.html#module-pickle" rel="nofollow noreferrer">pickle</a> to serialize the dictionary.</span>
<span class="comment-copy">You should try to implement your idea then come back here, if you get stuck on something, and ask a question.</span>
<span class="comment-copy">I tried implementing this and it didn't seem to do anything at all. There were no errors, no entries in the scores file, nothing.</span>
<span class="comment-copy">Scrap that! The code seems to work great for now, I shall try to error check it and experiment with it some more, but for now it works perfectly. Thank you very much!</span>
<span class="comment-copy">You're welcome, I'm glad I helped!</span>
