<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/7946798/interleave-multiple-lists-of-the-same-length-in-python">Interleave multiple lists of the same length in Python</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I have two lists like: </p>
<pre><code>listone = [1, 2, 3]
listtwo = [4, 5, 6]
</code></pre>
<p>I would like to combine them to get: </p>
<pre><code>l = [1, 4, 2, 5, 3, 6]
</code></pre>
<p>How can I do this without using loops? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertools</code> and <code>zip</code>:</p>
<p><strong>Code:</strong></p>
<pre><code>import itertools as it
list(it.chain(*zip(listone, listtwo)))
</code></pre>
<p><strong>Test Code:</strong></p>
<pre><code>listone = [1, 2, 3]
listtwo = [4, 5, 6]
print(list(it.chain(*zip(listone, listtwo))))
</code></pre>
<p><strong>Results:</strong></p>
<pre><code>[1, 4, 2, 5, 3, 6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may use <em>list slicing</em> feature of the list as:</p>
<pre><code>&gt;&gt;&gt; new_list = listone + listtwo  # create initial list of `len` equal
                                  # to `listone + listtwo`
&gt;&gt;&gt; new_list[::2] = listone
&gt;&gt;&gt; new_list[1::2] = listtwo
&gt;&gt;&gt; new_list
[1, 4, 2, 5, 3, 6]
</code></pre>
<p>Another very simple way to achieve this is via using <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><strong><code>zip()</code></strong></a> with nested <em>list comprehension</em> expression as:</p>
<pre><code>&gt;&gt;&gt; listone = [1, 2, 3]
&gt;&gt;&gt; listtwo = [4, 5, 6]

&gt;&gt;&gt; [b for a in zip(listone, listtwo) for b in a]
[1, 4, 2, 5, 3, 6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this is a variant using <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> and a nested <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>listone = [1, 2, 3]
listtwo = [4, 5, 6]

l = list(a for ab in zip(listone, listtwo) for a in ab)
print(l)  # [1, 4, 2, 5, 3, 6]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use numpy (as <a href="https://stackoverflow.com/questions/5347065/interweaving-two-numpy-arrays">here</a>)</p>
<pre><code>import numpy as np

listone = [1, 2, 3] 
listtwo = [4, 5, 6]

l=np.empty((len(listone)+len(listtwo)))
l[0::2]=listone
l[1::2]=listtwo

print l
&gt;&gt;&gt; l = [ 1.  4.  2.  5.  3.  6.]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can plus two lists directly .</p>
<pre><code>list_one=[1,2,3]  
list_two=[4,5,6]  
list_one=list_one+list_two  
print(list_one)

&gt;&gt;&gt;list_one=[1,2,3,4,5,6]      
</code></pre>
<p>you can also change the order of sum ,
then print out [4,5,6,1,2,3].</p>
</div>
<span class="comment-copy">I think OP wants the list in this order <code>[1,4,2,5,3,6]</code></span>
<span class="comment-copy">Yes you are right , i forgot that</span>
