<div class="post-text" itemprop="text">
<p>I can strip numerics but not alpha characters:</p>
<pre><code>&gt;&gt;&gt; text
'132abcd13232111'

&gt;&gt;&gt; text.strip('123')
'abcd'
</code></pre>
<p>Why the following is not working?</p>
<pre><code>&gt;&gt;&gt; text.strip('abcd')
'132abcd13232111'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason is simple and stated in the <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer">documentation of <code>strip</code></a>:</p>
<pre><code>str.strip([chars])

Return a copy of the string with the leading and trailing characters removed. 
The chars argument is a string specifying the set of characters to be removed.
</code></pre>
<p><code>'abcd'</code> is neither leading nor trailing in the string <code>'132abcd13232111'</code> so it isn't stripped.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just to add a few examples to <a href="https://stackoverflow.com/a/43214349/3846228">Jim's answer</a>, according to <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>.strip()</code></a> docs:</p>
<ul>
<li>Return a copy of the string with the <strong>leading</strong> and <strong>trailing</strong> characters removed.</li>
<li>The chars argument is a string specifying the set of characters to be removed.</li>
<li>If omitted or None, the chars argument defaults to removing whitespace. </li>
<li>The chars argument is not a prefix or suffix; rather, all combinations of its values are stripped.</li>
</ul>
<p>So it doesn't matter if it's a digit or not, the main reason your second code didn't worked <strong>as you expected</strong>, is because the term "abcd" was located in the middle of the string.</p>
<hr/>
<p><strong>Example1:</strong></p>
<pre><code>s = '132abcd13232111'
print(s.strip('123'))
print(s.strip('abcd'))
</code></pre>
<p><strong>Output:</strong> </p>
<pre><code>abcd
132abcd13232111
</code></pre>
<hr/>
<p><strong>Example2:</strong></p>
<pre><code>t = 'abcd12312313abcd'
print(t.strip('123'))
print(t.strip('abcd'))
</code></pre>
<p><strong>Output:</strong> </p>
<pre><code>abcd12312313abcd
12312313
</code></pre>
</div>
<span class="comment-copy">Please do not ask questions that are easily addressed by <a href="https://docs.python.org/3/library/stdtypes.html#string-methods" rel="nofollow noreferrer">reading the docs</a>. You are expected to have done some research, and looking at documentation for some method you don't understand is the <i>bare minimum</i>.  Using StackOverflow should be a last resort.</span>
<span class="comment-copy">My bad. I skimmed the doc so I even skipped the part mentioning leading/trailing chars.  I will heed your advice.  Thanks.</span>
<span class="comment-copy">@nfnneil Because the numbers at the beginning and end of the string match the set of characters provided as the argument to <code>strip</code>.</span>
<span class="comment-copy">Very, very clear examples.  Thanks.</span>
