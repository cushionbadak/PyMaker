<div class="post-text" itemprop="text">
<p>I've searched thoroughly for an answer before asking, but all I've been able to find was how to convert one column of my csv file into a datetime object.</p>
<p>My problem is, my file has a separate column for year, month, day, hour, minute, and I've been struggling for a while to convert and combine them.</p>
<p>Any help would be much appreciated.</p>
<p>head of file content:
<a href="https://i.stack.imgur.com/PZZpS.png" rel="nofollow noreferrer">viewed in excel</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html" rel="nofollow noreferrer"><code>read_csv</code></a> with parameters <code>parse_dates</code> and <code>date_parser</code>. See also <a href="http://pandas.pydata.org/pandas-docs/stable/io.html#date-handling" rel="nofollow noreferrer">docs</a>:</p>
<pre><code>import pandas as pd
from pandas.compat import StringIO

temp=u"""year,month,day,hour,minute,a
2017,09,01,10,20,1
2017,10,01,10,20,2
2017,11,01,10,20,3"""
#after testing replace 'StringIO(temp)' to 'filename.csv'
parser = lambda x: pd.datetime.strptime(x, '%Y %m %d %H %M')
df = pd.read_csv(StringIO(temp), 
                 parse_dates={'date':['year','month','day','hour','minute']},
                 date_parser=parser)
print (df)
                 date  a
0 2017-09-01 10:20:00  1
1 2017-10-01 10:20:00  2
2 2017-11-01 10:20:00  3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'll write a simple way.</p>
<p>Suppose there is a CSV file like the one below.</p>
<pre><code>year,month,day,hour,minute
2017,1,1,23,59
2017,2,1,23,59
2017,3,1,23,59
</code></pre>
<p>You can parse csv and create a datetime object.</p>
<pre><code>import csv
from datetime import datetime

with open('test.csv') as fp:
    reader = csv.reader(fp)
    next(reader) # skip header
    for row in reader:
        row = [int(r) for r in row]
        print(datetime(row[0], row[1], row[2], row[3], row[4]))
</code></pre>
<p>The result is like this.</p>
<pre><code>2017-01-01 23:59:00
2017-02-01 23:59:00
2017-03-01 23:59:00
</code></pre>
<p>thx:)</p>
</div>
<div class="post-text" itemprop="text">
<p>this might be a little manual but you could:</p>
<ol>
<li>read each line, split it into your various items (year, month etc) as string.</li>
<li>then recompose into a datetime object with datetime.datetime.strptime (which will convert a string with a given format to a datetime).</li>
</ol>
</div>
<span class="comment-copy">please provide file content here.. so we can get better idea!</span>
<span class="comment-copy">Have you tried <code>strptime</code>? <a href="https://docs.python.org/3/library/datetime.html#strftime-strptime-behavior" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a></span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/21269399/datetime-dtypes-in-pandas-read-csv">datetime dtypes in pandas read_csv</a></span>
<span class="comment-copy">This has been the most helpful! Oh, to actually have a result after typing "print(df)" ... such a relief.</span>
<span class="comment-copy">So output is <code>file</code>? Or <code>dataframe</code>?</span>
<span class="comment-copy">Dataframe, but I only really needed this format to make my life easier while working with time series forecasting.</span>
<span class="comment-copy">This works awesomely as well! Thanks a lot!</span>
<span class="comment-copy">yeah. You are welcome  :)</span>
<span class="comment-copy">@saremisona don't forget to upvote any answer you found useful :)</span>
<span class="comment-copy">I have upvoted everything, it just says it's recorded but not shown because I just joined. I'm sorry. :(</span>
