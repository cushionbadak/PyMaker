<div class="post-text" itemprop="text">
<p>I have a string:</p>
<pre><code> &lt;robot generated="20170330 17:19:11.956" generator="Robot 3.0.2 (Python 2.7.13 on win32)"&gt;
</code></pre>
<p>I want to get the value of "generated", but with below code, it doesn't work</p>
<pre><code>import re
doc=r'&lt;robot generated="20170330 17:19:11.956" generator="Robot 3.0.2 (Python 2.7.13 on win32)"&gt;'
match = re.match(r'generated="(\d+ \d+:\d+:\d+.\d+)',doc)
</code></pre>
<p>the value of match is none. can anyone help?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match</code></a> matches only at the beginning of the string. Use <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><code>re.search</code></a> instead which matches not only at the beginning, but matches anywhere.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; doc=r'&lt;robot generated="20170330 17:19:11.956" generator="Robot 3.0.2 (Python 2.7.13 on win32)"&gt;'
&gt;&gt;&gt; re.search(r'generated="(\d+ \d+:\d+:\d+\.\d+)',doc)
&lt;_sre.SRE_Match object at 0x1010505d0&gt;

&gt;&gt;&gt; re.search(r'generated="(\d+ \d+:\d+:\d+\.\d+)',doc).group()
'generated="20170330 17:19:11.956'

&gt;&gt;&gt; re.search(r'generated="(\d+ \d+:\d+:\d+\.\d+)',doc).group(1)
'20170330 17:19:11.956'
</code></pre>
<p>See <a href="https://docs.python.org/3/library/re.html#search-vs-match" rel="nofollow noreferrer">search() vs. match() from re module documentation</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You don't necessarily need regular expressions in this case. Here is an alternative idea that uses <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer"><code>BeautifulSoup</code> XML/HTML parser</a> with <a href="https://labix.org/python-dateutil" rel="nofollow noreferrer"><code>dateutil</code> datetime parser</a>:</p>
<pre><code>In [1]: from dateutil.parser import parse

In [2]: from bs4 import BeautifulSoup

In [3]: data = '&lt;robot generated="20170330 17:19:11.956" generator="Robot 3.0.2 (Python 2.7.13 on win32)"&gt;'

In [4]: parse(BeautifulSoup(data, "html.parser").robot['generated'])
Out[4]: datetime.datetime(2017, 3, 30, 17, 19, 11, 956000)
</code></pre>
<p>I find this approach beautiful, easy and straightforward.</p>
</div>
<span class="comment-copy">Thanks for your help</span>
<span class="comment-copy">One nitpicky thing here, is that you use the '.' character for the decimal point in the regex expression. However, regex will see that as <i>any character</i>, rather than a literal dot/decimal character, so something like this will also match    '&lt;robot generated="20170330 17:19:11%956" generator="Robot 3.0.2 (Python 2.7.13 on win32)"&gt;' (note the percent sign)</span>
<span class="comment-copy">@AbidHasan, Thank you for pointing it out. I updated the code in the answer.</span>
