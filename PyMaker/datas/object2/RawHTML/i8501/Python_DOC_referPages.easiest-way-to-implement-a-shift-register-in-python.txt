<div class="post-text" itemprop="text">
<p>I want to implement a data structure similar to a shift register, basically a shift register should have a fixed length (L) and should have a function to mange the input to this register (New_Input), the new input will be in the first cell of the shift register and the previous element will be shifted one cell forward. When the register is full and a new element is added it will shift all the element such that the element in the last cell will be thrown (out of our concern). </p>
<p>My idea to implement such things is by using a dictionary that contain those element such that the keys are the order of this dictionary. </p>
<p>Can any one help me?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python already contains this data structure as <a href="https://docs.python.org/dev/library/collections.html#collections.deque" rel="nofollow noreferrer"><code>collections.deque</code></a>:</p>
<pre><code>&gt;&gt;&gt; import collections
&gt;&gt;&gt; c = collections.deque([], 2)
&gt;&gt;&gt; c.extend('a')
&gt;&gt;&gt; c.extend('b')
&gt;&gt;&gt; c.extend('c')
&gt;&gt;&gt; c
deque(['b', 'c'], maxlen=2)
</code></pre>
</div>
<span class="comment-copy">Sounds like you want a <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="nofollow noreferrer">double-ended queue</a>. Push to the front and drop the end.</span>
<span class="comment-copy">what i need to do if i have 2 variables for each element in this structure  c=collections.deque([[ ]*2], L)  c.extend(['a','b']) is this valid ?</span>
<span class="comment-copy">If each element in the queue is more complicated, then pack it into a <a href="https://docs.python.org/dev/library/collections.html#collections.namedtuple" rel="nofollow noreferrer"><code>namedtuple</code></a> or <code>dict</code></span>
<span class="comment-copy">@phihag: I would have used <code>.append(elem)</code> which would preserve any arbitrary type that <code>elem</code> refers to.</span>
<span class="comment-copy">@AliJawadFahs Note that <code>deque([[ ]*2], L)</code> does not make sense. <code>[] * 2</code> is still <code>[]</code>. If you want to initialize the queue with an "empty" list of length <code>L</code>, you could try e.g. <code>[None] * L</code></span>
<span class="comment-copy">&gt;&gt;&gt;import collections &gt;&gt;&gt;a={} &gt;&gt;&gt;a[1]=2 &gt;&gt;&gt;c = collections.deque([], 2) &gt;&gt;&gt;c.extend(a.items()) &gt;&gt;&gt;a[1]=3 &gt;&gt;&gt;c.extend(a.items()) &gt;&gt;&gt;a[1]=4 &gt;&gt;&gt;c.extend(a.items())  &gt;&gt;&gt;print c worked as charm, thanks bro</span>
