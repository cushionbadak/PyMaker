<div class="post-text" itemprop="text">
<p>I have an assignment to create a 10 by 10 table in Python and I'm using the end "\t" within my print function to prevent it from creating a new line. But, I need it to start a new line after of course 10 characters. How can I make it do that? Here's my code:</p>
<pre><code>product = 0
for x in range(1,11):
    for y in range(1,11):
        product = x * y
        print(product, end="\t")
</code></pre>
<p>I need it to look something like this:</p>
<pre><code>1   2   3   4   5   6   ...
2   4   6   8   10  12  ...
3   6   9   12  15  18  ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is using <em>alignement</em> options from the <code>format</code> method.</p>
<pre><code>product = 0
for x in range(1,11):
    for y in range(1,11):
        product = x * y
        print('{:&lt;4}'.format(product), end='')
    print()
</code></pre>
<p>Reference: <a href="https://docs.python.org/3/library/string.html#formatstrings" rel="nofollow noreferrer">Format specification mini-language</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I think all you would need to add to get what you want is to print a new line in your inner loop like so:</p>
<pre><code>product = 0
for x in range(1,11):
    print()
    for y in range(1,11):
        product = x * y
        print(product, end="\t")
</code></pre>
<p>On the third line it'll start a new line after 10.
The output will look like this:
<code>
1   2   3   4   5   6   7   8   9   10<br/>
2   4   6   8   10  12  14  16  18  20<br/>
3   6   9   12  15  18  21  24  27  30<br/>
4   8   12  16  20  24  28  32  36  40<br/>
5   10  15  20  25  30  35  40  45  50<br/>
6   12  18  24  30  36  42  48  54  60<br/>
7   14  21  28  35  42  49  56  63  70<br/>
8   16  24  32  40  48  56  64  72  80<br/>
9   18  27  36  45  54  63  72  81  90<br/>
10  20  30  40  50  60  70  80  90  100
</code></p>
</div>
<div class="post-text" itemprop="text">
<p>For fun, this can be done as a one liner with a bit of list comprehension and the <code>join</code> method</p>
<pre><code>print('\n'.join(['\t'.join([str(x*y) for x in range(1,11)]) for y in range(1,11)]))
</code></pre>
</div>
<span class="comment-copy"><code>print()</code> right after the inner loop.</span>
<span class="comment-copy">@zondo what if she uses 2.x version of Python? I would rather suggest <code>print("")</code>.</span>
<span class="comment-copy">@mwarzynski: Python 2.x does not have the <code>end</code> keyword because <code>print</code> isn't a function.</span>
<span class="comment-copy">@zondo Okay, thanks. Good to know.</span>
<span class="comment-copy">You can use the <code>print</code> function in python 2.6+ using <code>from __future__ import print_function</code> as the first line of code in your script.</span>
<span class="comment-copy">I think this is a bit past where I'm at in my class right now but I'll play with it anyways to see what it does :) Thanks!</span>
<span class="comment-copy"><code>print()</code> automatically adds a new line to whatever is being printed. When you print a new line, you're actually adding two. Just use <code>print()</code> with no arguments.</span>
<span class="comment-copy">@zondo ;) you're right thanks!</span>
<span class="comment-copy">You probably want to more the <code>print()</code> line to after the inner loop. Otherwise you print a blank line at the start, and then leave the console cursor at the end of the last line!</span>
<span class="comment-copy">Hmm putting it inside the inner loop didn't seem to work. That seems to cancel the end argument and everything is starting a new line again even with the other print statement after it.</span>
<span class="comment-copy">Got it! if I put it like so: product = 0     for x in range(1,11):         for y in range(1,11):             product = x * y             print(product, end="\t")         print()  It works now. Thanks for your help!</span>
