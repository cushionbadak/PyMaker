<div class="post-text" itemprop="text">
<p>How can I check if a string contains <strong>only</strong> numbers and lower case letters?</p>
<p>I only managed to check if it contains numbers and lower case letters and doesn't contain upper case letters but I don't know how to check that it doesn't contain any symbols as ^&amp;*(% etc.. </p>
<pre><code>if(any(i.islower() for i in password) and any(i.isdigit() for i in password) and not any(i.isupper() for i in password)):
</code></pre>
<p>EDIT:
so apparently I need to do this without using any loops and mainly using functions like .islower() , .isdigit() , isalnum() etc.. and I have no idea how I can check if a string contains lower case letters and numbers only , without using loops or something that will check every single char in the string . we only started to learn the basics in python so they told us we can't use "for" and all that even if I know what it does.. now I can check if an entire string is only digits or lower/upper case letters but I don't know how to check the two conditions mentioned above in the simplest way possible </p>
</div>
<div class="post-text" itemprop="text">
<p>What about:</p>
<pre><code>if <b>all(c.isdigit() or c.islower()</b> for c in password<b>)</b>:</code></pre>
<p>after all, you want to check that <strong>all</strong> characters are either a digit or lowercase letters. So for all characters <code>c</code>, that character is <code>c.isdigit() or c.islower()</code>. Now an <code>all(..)</code> takes as input an <em>iterable</em> of values and checks if the <em>truthiness</em> of all these values is <code>True</code>. So from the moment there is one digit that does not satisfies our condition, the <code>all(..)</code> will return <code>False</code>.</p>
<p>Mind however that <strong><code>all(..)</code> is <code>True</code> if there are no elements</strong>. Indeed if the <code>password</code> is the empty string, <strong>all</strong> the characters satisfy this condition, since there are no characters.</p>
<p><strong>EDIT</strong>:</p>
<p>In case you want to check that the <code>password</code> contains both digits and lowercase characters, you can alter the condition to:</p>
<pre><code>if all(c.isdigit() or c.islower() for c in password) <b>and \</b>
       <b>any(c.isdigit() for c in password) and \</b>
       <b>any(c.islower() for c in password)</b>:</code></pre>
<p>Now the check will only succeed if there are <em>at least</em> two characters in <code>password</code>: a lower and a digit.</p>
</div>
<div class="post-text" itemprop="text">
<p>How about use <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">regex</a>:</p>
<pre><code>&gt;&gt;&gt; def is_digit_and_lowercase_only(s):
        return re.match("^[\da-z]+$", s)
&gt;&gt;&gt; print is_digit_and_lowercase_only("dA")
None
&gt;&gt;&gt; print is_digit_and_lowercase_only("adc87d6f543sc")
&lt;_sre.SRE_Match object at 0x107c46988&gt;
</code></pre>
<p>It'll return <code>None</code> if match failed, so you can use it with <code>if</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Another solution is to count the letters of each type and make sure they're not zero (in this context True equates to 1 and False to 0):</p>
<pre><code>def validate_password(password):
    """
    Return True if password contains digits and lowercase letters
    but nothing else and is at least 8 characters long; otherwise
    return False.

    """

    ndigits = sum(c.isdigit() for c in password)
    nlower = sum(c.islower() for c in password)
    password_length = len(password)
    return (password_length &gt; 7 and ndigits and nlower and
            (ndigits+nlower)==password_length)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Define a function that applies your rules using sets for membership testing .</p>
<pre><code>import string
lower = set(string.ascii_lowercase)
digits = set(string.digits)
def valid(s):
    '''Test string for valid characters, and composition'''

    s = set(s)
    invalid = s.difference(lower, digits)
    both = s.intersection(lower) and s.intersection(digits)
    return bool(both and not invalid)
</code></pre>
<p>Usage:</p>
<pre><code>&gt;&gt;&gt; valid('12234')
False
&gt;&gt;&gt; valid('abcde')
False
&gt;&gt;&gt; valid('A123')
False
&gt;&gt;&gt; valid('a$1')
False
&gt;&gt;&gt; valid('1a')
True
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use isdigit() or islower() method to check string contains only numbers and lower case letters</p>
<pre><code>import string
input_str=raw_input()


for ch in input_str:

    if  ch.isdigit() or  ch.islower():
        output_str=True

    else:
        output_str=False
        break   

print output_str
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>In [87]: '123anydigitorletterorevenunicodeßßидажелатиница'.isalnum()
Out[87]: True

In [88]: '123anydigitorletterorevenunicodeßßидажелатиница'.islower()
Out[88]: True
</code></pre>
<p>So the solution is </p>
<pre><code>if password.islower() and password.isalnum():
    ...some code...
</code></pre>
<p>I can not figure out what for to iterate the string</p>
</div>
<span class="comment-copy">You are looking for the re module.  It allows regex checking.  <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">docs.python.org/3/library/re.html</a></span>
<span class="comment-copy">but I need to make sure the string contains both numbers and lower case letters . and if i'll use this condition - it will return true if the string contains lower case letters only or if the string contains numbers only.. and I need it to return true when the string contains lower case letters and numbers only</span>
<span class="comment-copy">@Michelle: see updated answer.</span>
<span class="comment-copy">okay I get it now . thank you !</span>
<span class="comment-copy">If part of your answer is incorrect, don't just add a correct version below an "EDIT". Remove the incorrect part, it's useless.</span>
<span class="comment-copy">@BryanOakley: well the <code>all(..)</code> part is the answer to how enforce that the password only contains lowers and digits :). Which is the added value. The edit was more to show how to incorporate that answer into the code, since that was apparently unclear :).</span>
