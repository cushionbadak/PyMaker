<div class="post-text" itemprop="text">
<p>cdp_data.csv</p>
<pre><code>1
2
3
4
</code></pre>
<p>So i'm making this csv processor. When i compile it on windows there is no "," at the end of the line inside the csv. However when i run this on the server there was an extra "," in the line. They have the same python version though.</p>
<pre><code>#!/usr/bin/python
import re
import datetime

now = datetime.datetime.now()
day_minus_one = now + datetime.timedelta(days=-1)
new_date = day_minus_one.strftime('%Y%m%d')

f = open('/tmp/cdp_data.csv','rb')
fo = open('/tmp/cdp_out.csv','wb')

fo.writelines("{},".format(new_date))

for line in f:
    bits = line.split(',')
    bits[0] = re.sub(r'\n', ",", bits[0])
    bits[0] = re.sub(r'\r', "", bits[0])
    fo.write( ','.join(bits) )


f.close()
fo.close()
</code></pre>
<p>Windows result:</p>
<pre><code>20170329,1,2,3,4
</code></pre>
<p>Linux Results:</p>
<pre><code>20170329,1,2,3,4,
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you really want to hard-code CSV, use <code>bits = line.strip().split(',')</code>. The <code>strip()</code> method removes trailing white spaces and will eliminate the empty string at the end of your list.</p>
<p>Otherwise, the recommended approach would be to use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a> module to handle all read, writing and parsing automatically. </p>
<pre><code>import csv
with open('/tmp/cdp_data.csv', newline='') as csvfile:
    spamreader = csv.reader(csvfile, delimiter=' ', quotechar='|')
    with open('/tmp/cdp_out.csv', 'w', newline='') as csvfile:
        spamwriter = csv.writer(csvfile, delimiter=',',
                        quotechar='|', quoting=csv.QUOTE_MINIMAL)
        for row in spamreader:
            spamwriter.writerow(row)
</code></pre>
</div>
<span class="comment-copy">Why not just use the <code>csv</code> module instead and never have to worry about how to parse or write CSV data?</span>
<span class="comment-copy">If your file ends with <code>\n</code> you'll have a trailing comma since you're replacing <code>\n</code> with <code>,</code></span>
<span class="comment-copy">the reason im replacing \n since the input file is separated with new line above edited post.</span>
<span class="comment-copy">TypeError: 'newline' is an invalid keyword argument for this function i'm getting this error.</span>
<span class="comment-copy">Remove the newline argument or use Python3</span>
<span class="comment-copy">|1,2,3,4,| i got this output. if i remove the quotechar='|' i got this result "1,2,3,4," my only goal is 20170329,1,2,3,4, removing the last ","</span>
