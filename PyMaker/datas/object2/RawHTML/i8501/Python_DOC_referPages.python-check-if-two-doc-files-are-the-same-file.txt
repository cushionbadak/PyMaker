<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1072569/see-if-two-files-have-the-same-content-in-python">see if two files have the same content in python [duplicate]</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>IMAP filtering and searching dictates that my script works as follows: Each night I receive an email with a relevant <code>.doc</code> file attached to it. My Python script always selects the last (most recent) email, and does certain operations on that <code>.doc</code> file.</p>
<p>All <code>.doc</code> files sent daily are named exactly the same.</p>
<p>Issue is: Sometimes the sender neglects to send a new file. The result is that my script does the operation on the wrong file (the one from the day before). If I can somehow check that two files are actually (copies) of the same file, then I can avoid doing the operation.</p>
<p>How is this most easily/effectively achievable in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>To compare files binary-wise, the best/quickest way is to use the <a href="https://docs.python.org/3/library/filecmp.html" rel="nofollow noreferrer"><code>filecmp</code></a> module:</p>
<pre><code>&gt;&gt;&gt; import filecmp
&gt;&gt;&gt; filecmp.cmp("first.doc","second.doc",shallow=False)
</code></pre>
<p>returns <code>True</code> if both files share the exact file contents. <code>shallow</code> is set to <code>False</code> so the file contents are analysed regardless of a difference of date (which you'll have when you extract both files)</p>
</div>
