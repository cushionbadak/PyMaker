<div class="post-text" itemprop="text">
<p>I need to do parameter estimations by writing estimation procedure from scratch, not using-ready-to-use routines. For example, we need to optimize the parameters by writing out the specific objective functions most the time. For the unknown parameters, it usually comes in the form of vectors such as <code>BETA=[beta1,beta2....beta_n]</code>. When I estimate the parameters in R, I don't really care about data structures. For python, I know tuple is immutable and I have seen people using tuple for parameter vectors,but what is the <strong>common practice</strong> for parameter estimations? Is there any big difference <strong>specifically for parameter estimations</strong> (Tuple seems a bit faster?)? </p>
</div>
<div class="post-text" itemprop="text">
<p>Have you considered using a <a href="https://docs.python.org/3.6/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a>? You can have your estimations as a <em>key:value</em> pair such as:</p>
<pre><code>beta_dict={beta_1:value_of_beta_1, beta_2:value_of_beta_2, etc...}
</code></pre>
<p>You can then access the values by key:</p>
<pre><code>beta_dict[beta_n] # returns value_of_beta_n
</code></pre>
<p>If you are getting the estimates from a loop you can store them as <em>key:value</em> pairs as follows:</p>
<pre><code>for i in range(length(BETA)): # length(BETA) returns the amount of elements in BETA list
    tmp_key="beta_{}".format(i)
    beta_dict[tmp_key]=BETA[i] # stores the key(tmp_key):value(BETA[i]) pair
</code></pre>
</div>
<span class="comment-copy">Python has no <i>native</i> "arrays". Only lists.</span>
<span class="comment-copy">@WillemVanOnsem Actually python has <a href="https://docs.python.org/3/library/array.html" rel="nofollow noreferrer">native arrays</a> for primitive types.</span>
