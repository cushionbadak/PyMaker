<div class="post-text" itemprop="text">
<p>I have a <code>CSV</code> file with recorded datetimes with a particular format:</p>
<pre class="lang-none prettyprint-override"><code>%Y-%m-%d %H:%M:%s %Z
</code></pre>
<p>Example:</p>
<pre class="lang-none prettyprint-override"><code>2017-02-11 14:11:42 PST
</code></pre>
<p>I am trying to format the <code>datetime</code> to a friendlier value to use later on. </p>
<p>However, I have been unable to create a <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime" rel="nofollow noreferrer"><code>datetime</code></a> object with my code so far.</p>
<p>Here is my code:</p>
<pre><code>for r in row:
  purchase_date.append(
    datetime.strptime(row['purchase-date'], "%Y/%m/%d %H:%M:%S %Z")
    )
</code></pre>
<p>This is the error received:</p>
<pre><code>ValueError: time data '2017-02-11 14:11:42 PST' does not match format %Y/%m/%d %H:%M:%S %Z'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Timezones are often rather wonky when trying to convert from a string.   It is often best to deal with the timezone string yourself.  Here is a bit of code which separates the timezone from the timestamp, and then converts them separately.</p>
<p><strong>Code:</strong></p>
<pre><code>import datetime as dt
import pytz

my_timezones = dict(
    PST='US/Pacific',
)

def convert_my_datetime_str(dt_str):
    # split into time and timezone
    timestamp, tz_str = dt_str.rsplit(' ', 1)

    # convert the date string to datetime
    time = dt.datetime.strptime(timestamp, "%Y-%m-%d %H:%M:%S")

    # get a timezone name
    tz = pytz.timezone(my_timezones[tz_str])

    # return a timezone aware datetime
    return tz.localize(time)
</code></pre>
<p><strong>Test Code:</strong></p>
<pre><code>print(convert_my_datetime_str('2017-02-11 14:11:42 PST'))
</code></pre>
<p><strong>Results;</strong></p>
<pre><code>2017-02-11 14:11:42-08:00
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should be able to just change the format to match your date strings. In the error, your date string has dashes instead of slashes, so make the format string match:</p>
<pre><code>for r in row:
  purchase_date.append(
    datetime.strptime(row['purchase-date'], "%Y-%m-%d %H:%M:%S %Z")
    )
</code></pre>
</div>
<span class="comment-copy">Well no, it doesn't. It has dashes, not slashes, between date components.</span>
<span class="comment-copy">@jonrsharpe Ok. How do I format it further?</span>
<span class="comment-copy">What? You need to <i>change the format</i> so that it actually matches the datetimes you're trying to parse.</span>
