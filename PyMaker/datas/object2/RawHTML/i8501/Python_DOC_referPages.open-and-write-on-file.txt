<div class="post-text" itemprop="text">
<p>I created a code which ask a user to enter a list of position on a plain text file, save the position the user entered in the text file as list than ask the user to enter the word each position represent (the same order as the list of position) end re-create the sentence.
However im not sure on thow things:</p>
<p>1) how can i make the plain text document pop out only when the previous one was closed (so only when the file:list_of_numbers has been closed, the other file list_of_words will popup).</p>
<p>2) How to write the output on a plain text file.</p>
<p>here is the code:</p>
<pre><code>import subprocess
subprocess.Popen(["notepad","list_of_numbers.txt"])
with open("list_of_numbers.txt","r") as pos_file:
    positions = pos_file.read().spllit()

subprocess.Popen(["notepad","list_of_words.txt"])
with open("list_of_words.txt","r") as sentence_file:
    words = sentence_file.read().split()

mapping = dict(zip(positions, words))
output = [mapping[position] for position in positions]

print(' '.join(output))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's no problem to find out how to do this by consulting the Python Docs.<br/>
 - <a href="https://docs.python.org/3/library/subprocess.html?highlight=subprocess#popen-constructor" rel="nofollow noreferrer">Popen</a><br/>
- <a href="https://docs.python.org/3/tutorial/inputoutput.html?highlight=write%20file#methods-of-file-objects" rel="nofollow noreferrer">Reading and Wirting Files</a></p>
<hr/>
<p>A Hint!!! - If you create an object, then you should assign it to a variable!</p>
<pre><code># DO
process = subprocess.Popen(["notepad","list_of_numbers.txt"])

# DONT
subprocess.Popen(["notepad","list_of_numbers.txt"])
</code></pre>
<hr/>
<p>Consulting the python docs should take you to a solution like this:</p>
<pre><code>import subprocess

# don't do anything unless child process has been terminated
with subprocess.Popen(["notepad","list_of_numbers.txt"]) as process:
    pass    # you could leave this line blank but using pass clearer

with open("list_of_numbers.txt","r") as pos_file:
    positions = pos_file.read().split()

process = subprocess.Popen(["notepad","list_of_words.txt"])

with open("list_of_words.txt","r") as sentence_file:
    words = sentence_file.read().split()

mapping = dict(zip(positions, words))
output = [mapping[position] for position in positions]

# open a new file in write mode, write data and close the file
with open('new_file.txt', 'w') as f:
    f.write(' '.join(output))
</code></pre>
<p><em><strong>Note</strong>: You still need to fix your assignments to <code>mapping</code> and <code>output</code> in line 17 and 18 as they won't produce the expected result, but that's not part of your question.</em></p>
</div>
<div class="post-text" itemprop="text">
<p>Im not sure what you are trying to do exactly, but this should help. You do not need to use subprocess, and in fact it is probably overcomplicating some things...</p>
<p>Input:</p>
<pre><code>Enter a number. (Leave blank to continue): 1
Enter a number. (Leave blank to continue): 2
Enter a number. (Leave blank to continue): 3
Enter a number. (Leave blank to continue): 


Enter a word. (Leave blank to continue): a
Enter a word. (Leave blank to continue): b
Enter a word. (Leave blank to continue): c
Enter a word. (Leave blank to continue): 
</code></pre>
<p>Output (console and to output.txt):</p>
<pre><code>1, a

2, b

3, c
</code></pre>
<p>Code:</p>
<pre><code>#!/usr/bin/env python

while True:

    positions = []
    words = []

    while True:
        number = raw_input("Enter a number. (Leave blank to continue): ")
        if not number:
            break

        try:
            positions.append(int(number))
        except TypeError:
            print("Invalid number provided. Try again.")

    print("\n")

    while True:
        word = raw_input("Enter a word. (Leave blank to continue): ")
        if not word:
            break

        words.append(word)

    if len(positions) != len(words):
        print("You did not enter the same number of words and positions..")
        print("Clearing previous inputs..")
    else:
        break

with open("output.txt", 'a') as output_file:
    for x in xrange(0, len(positions)):
        line = "{0}, {1}\n".format(positions[x], words[x])
        output_file.write(line)
        print(line)
</code></pre>
</div>
<span class="comment-copy">He uses Python3. <code>try-except</code> with append? Since when is append raising any Exception?</span>
<span class="comment-copy">@DahliaSR the <code>try-except</code> is not for the <code>.append()</code>, it is for the <code>int()</code> - in the event the user entered a non-integer, and it can not be casted to int. (Note, it is not there under the words <code>while</code>.  Also, updated the print statements for Python 3. I missed that!</span>
