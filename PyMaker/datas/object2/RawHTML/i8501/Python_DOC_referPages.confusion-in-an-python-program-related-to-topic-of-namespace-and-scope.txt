<div class="post-text" itemprop="text">
<p>I just stepped in python recently and now I reached to the topic of Namespace and Scope. With the intention of further understanding of this subject,  <a href="https://www.programiz.com/python-programming/namespace" rel="nofollow noreferrer">I found this</a> which contains a program resulting in my confusion.</p>
<p>And, here's the program:</p>
<pre><code>1  def outer_function():
2      a = 20
3      def inner_function():
4          a = 30
5          print('a =',a)
6
7      inner_function()
8      print('a =',a)
10     
11 a = 10
12 outer_function()
13 print('a =',a)
</code></pre>
<p>And here's the result which you must be quite sure but I am not</p>
<pre><code>a = 30
a = 20
a = 10
</code></pre>
<p>but the output in my mind should be</p>
<pre><code>a = 30
a = 30
a = 20
a = 10
</code></pre>
<p>Even I modified the original code to be like this in order to make it clearer:</p>
<pre><code>def outer_function():
    a = 20
    def inner_function():
        a = 30
        print('a1 =',a)

    inner_function()
    print('a2 =',a)

a = 10
outer_function()
print('a3 =',a)
</code></pre>
<p>But it still like this:</p>
<pre><code>a1 = 30
a2 = 20
a3 = 10
</code></pre>
<p>So, the reason why I thought that there's supposed to a double <code>a1 = 30</code> is because I believed that <code>line5</code> in the code was executed twice as,</p>
<p>firstly, it runs when the <code>outer_function()</code> is called at <code>line12</code> which goes from <code>line1</code> to <code>line8</code> and <code>line5</code> is called with the <code>a1 = 30</code> output </p>
<p>secondly, the <code>line7</code> is called which triggered the <code>line5</code> again with the same output as above, </p>
<p>finally the function <code>outer_function()</code> ends when <code>line8</code> is done, that's when <code>a2 = 20</code> show up.</p>
<p>Then go back to "main thread" (I just call it as this not actually mean it, or it is?) <code>line13</code> and print <code>a3 = 10</code></p>
<p>So, as what I got is not what I thought, what's wrong with my understanding of this program? </p>
<p>Thanks for spending time on reading my problem, it will be of great help to me if you can give me a hand on this :) Thanks in advance</p>
<h1>Edit:</h1>
<p>I just found out where my confusion was! Great appreciation to those who give me a hand. 
Turns out the main problem of my confusion is my unstable foundation of the programming knowledge. So, I incorrectly thought the <code>line5</code> will run when the <code>inner_function()</code> was declared. Hahaha, how could this happen?? This so basic mistakes just happened -- the declaration of the function will never run until it is called in the program! That's why there's only one <code>a = 30</code>!</p>
<p>Anyway, I will keep in mind that do not make the same mistakes again. I'm appreciated to those who give a hand on this minor basic syntactic mistake!</p>
<p>Cheers!</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>inner_function</code> was declared on line 3, but it is <em>only ever called once</em>, and that's on line 7. </p>
<p>If you took out line 7, <code>a1</code> would never print.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces" rel="nofollow noreferrer">9.2. Python Scopes and Namespaces</a>.</span>
<span class="comment-copy">Check out <a href="http://www.pythontutor.com/visualize.html#mode=edit" rel="nofollow noreferrer">pythontutor.com</a> - they provide a nice visualization that will help you understand what's actually happening as you execute your code.</span>
<span class="comment-copy">@wwii hi, thanks for your response, actually I was following the tutorial you mentioned at first but I was just too dumb to completely get the point they give, that's why I find another source to do further reading. But thanks for your answer anyway, I just figured out what happen :)</span>
<span class="comment-copy">@miraculixx Hi, there, thank you so much!!!!! The tool you share just so useful! Following along the visualization, I just realized that I was missing the concept that at first the method was declared, and it will not do anything until you use it. So, haha, my mistakes. And thank you so much for your sharing! :D</span>
<span class="comment-copy">Hey there! It looks like your problem was resolved. If my answer worked for you, you should mark it as the solution. Else I would recommend creating your own answer describing what really fixed your problem.</span>
<span class="comment-copy">Hello, thank you for your answer! And as what you said, the method is only called once. And in my mind at first, I thought the print function will run followed the function declaration without realizing that the line3 to 5 is just a declaration. And the declaration won't do anything until you call it. Gee, I am laughing so hard on this stupid mistakes! Again, a lot appreciation :D (I just know that in the comment to my answer I can't use word T-h-a-n-k-s... But I got dictionary to find the replace word haha)</span>
