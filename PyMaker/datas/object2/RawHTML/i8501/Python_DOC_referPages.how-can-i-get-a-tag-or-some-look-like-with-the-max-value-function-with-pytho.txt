<div class="post-text" itemprop="text">
<p>I'm learning Python right now and I'm trying to get a diferent result from the max() function.</p>
<p>The trouble I want to resolve it's the following:</p>
<pre><code>a = 1
b = 2
c = 3

print(
    max(a,b,c)
    )
</code></pre>
<p>When I execute this sample of code I get the maximum value of the three included in the parameters of the max func, but instead I would want to obtain the name of the largest variable or maybe a tag associated with each var.</p>
<p>Thanks for your help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a dictionary instead.</p>
<pre><code>&gt;&gt;&gt; d = {'a': 1, 'b': 42, 'c': 3}
&gt;&gt;&gt; max(d, key=d.get)
'b'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>The fastest way of doing this:</h2>
<p>This, oddly varies based on the version of Python you're using.</p>
<h2>Python 2.7</h2>
<p><strong>Max, zip method</strong></p>
<pre><code>print(max(zip(tag.values(),tag))[1])
</code></pre>
<p>Clocked at:
20,000 Values : <code>0.010999917984</code></p>
<p><strong><em>[Fastest]</em> Max with tag.get</strong></p>
<pre><code>max(tag, key=tag.get)
</code></pre>
<p>Clocked at:
20,000 Values : <code>0.00600004196167</code></p>
<p><strong>Max with lambda</strong></p>
<pre><code>max(tag, key=lambda k: tag[k])
</code></pre>
<p>Clocked at:
20,000 Values : <code>0.00699996948242</code></p>
<h2>Python 3.6</h2>
<p><strong><em>[Fastest]</em> Max, zip method</strong></p>
<pre><code>print(max(zip(tag.values(),tag))[1])
</code></pre>
<p>Clocked at:
20,000 Values : <code>0.003000020980834961</code></p>
<p><strong>Max with tag.get</strong></p>
<pre><code>max(tag, key=tag.get)
</code></pre>
<p>Clocked at:
20,000 Values : <code>0.00300025939941406257</code></p>
<p><strong>Max with lambda</strong></p>
<pre><code>max(tag, key=lambda k: tag[k])
</code></pre>
<p>Clocked at:
20,000 Values : <code>0.005000114440917969</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Build a dictionary of name or tag -&gt; variable pairs. Then <code>max</code> the dictionary, using the <code>key=function</code> parameter of <a href="https://docs.python.org/3/library/functions.html?highlight=max#max" rel="nofollow noreferrer"><code>max()</code></a>.</p>
<pre><code>a=1
b=5
c=3

d = {'a':a, 'b':b, 'c':c}

print(max(d, key=lambda k: d[k]))
</code></pre>
</div>
<span class="comment-copy">This sounds like an <a href="https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">XY problem</a>.  Why don't you share what it is you are trying to achieve by getting the variable name, and there is almost certainly a better way to solve the problem.</span>
<span class="comment-copy">"Name of the variable" is not a reasonable thing to ask for here - all that the <code>max()</code> function receives are <i>values</i>, there's no particular requirement that any value even came from a variable (and the value has no connection to the variable, even if it came from one).  You've got a couple of answers already, I'll mention for completeness that the popular <code>numpy</code> package contains a <code>argmax()</code> function that returns the index of the maximum instead of its value.</span>
<span class="comment-copy">I was shocked that the original version of <code>max(zip(tag.values(),tag))[1]</code> while not very pythonic was significantly faster than the more pythonic <code>max(tag, key=tag.get)</code> (which is marginally faster than the <code>lambda</code> version) - Py3.6</span>
<span class="comment-copy">@StefanPochmann I updated it, thanks for the input, I was just being dumb.</span>
