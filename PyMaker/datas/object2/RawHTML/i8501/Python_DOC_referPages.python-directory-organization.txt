<div class="post-text" itemprop="text">
<p>I've just started a class that uses Python.  At this point, I'm a complete beginner.  I running Windows 10 via Parallels on an iMac.  I'm have trouble organizing the directories within the "Python36-32" directory that is located on the VM (Windows).  If I place a .py file in the main directory, I can run the file through the command prompt and see something like.  </p>
<p>c:\Program Files\Python36-32&gt;python first.py
hello</p>
<p>However, if I try to organized the file the file isn't read at all.  For example, if I wanted the "first.py" file to run from a "web221" (the name of my class) subdirectory of "python36-32" and then try to open "first.py", I get:</p>
<p>C:\Program Files\Python36-32\web221&gt;python first.py
'python' is not recognized as an internal or external command,
operable program or batch file.</p>
<p>I'd really like to keep all of the .py files I create for my class organized for obvious reasons.  Any help would be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>When you execute from the one directory, the Python executable is present and Windows has no issue finding what to execute.</p>
<p>From the other directory though, Windows attempts to find the executable in your <code>PATH</code> and cannot see it.</p>
<p>Here is some help from the Python 3 docs:
<a href="https://docs.python.org/3/using/windows.html#excursus-setting-environment-variables" rel="nofollow noreferrer">https://docs.python.org/3/using/windows.html#excursus-setting-environment-variables</a></p>
<p>Specifically, try this as a test:</p>
<blockquote>
<p>Windows allows environment variables to be configured permanently at both the User level and the System level, or temporarily in a command prompt.</p>
<p>To temporarily set environment variables, open Command Prompt and use the set command:</p>
</blockquote>
<pre><code>C:\&gt;set PATH=C:\Program Files\Python 3.6;%PATH%
C:\&gt;set PYTHONPATH=%PYTHONPATH%;C:\My_python_lib
C:\&gt;python
</code></pre>
<p>However, this will only temporarily add the executable to your path.  Try it to see if it works, and if it does, then you'll have the information you need to add it to your <code>PATH</code> variable permanently.  Note: your directory is named differently, so you'll need to replace <code>Python 3.6</code> with the name of the directory where Python is installed.</p>
<p>For the task of editing the <code>PATH</code> such that the changes persist from one command prompt session to the next, there's a related SO question that might be helpful:
<a href="https://stackoverflow.com/questions/3701646/how-to-add-to-the-pythonpath-in-windows-7">How to add to the pythonpath in windows 7?</a></p>
</div>
<span class="comment-copy">can you confirm that python is in your PATH?</span>
<span class="comment-copy">Why are you running Python in a Windows VM? Python is already installed on your Mac, and will be much easier to use there.</span>
<span class="comment-copy">There's probably a windows element to his class, and this would make it easier to keep up with rest of it.</span>
<span class="comment-copy">@arcee123 yes, python is in my PATH</span>
<span class="comment-copy">@DanielRoseman my course requires me to run Python on Windows.  It's a Java programming class and the material is setup using the command prompt I guess.  I'd much rather keep it all on my Mac.</span>
<span class="comment-copy">Thanks.  I went through the process you provided but after hitting "Enter" at the end of the last command prompt, Python just opened within the Command Prompt window.  I'm not sure what this means.</span>
<span class="comment-copy">Do you mean that an interactive shell was launched?  Generally it'll print a bunch of info about what version of Python is running, followed by a &gt;&gt;&gt; prompt.  This is what happens when you invoke "python" by itself.  Try running the "python first.py" inside the "web221" directory, as you did before.  Hopefully it should work after setting the Python executable in your path.</span>
