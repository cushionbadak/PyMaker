<div class="post-text" itemprop="text">
<p>I have a list (or a set or tuple if I choose) of 56 different fish species. I would like to "scan" thru a CSV file to recognize any occurrence of any of the fish species. </p>
<p>I tried:</p>
<pre><code>with open(file_path) as f:
    for line in f:
        if (stocks in line):
            fish, remainder = line.split('\t')
            print("fish:", fish)
            print("remainder:", remainder)
</code></pre>
<p>but that fails because of:</p>
<pre><code>TypeError: 'in &lt;string&gt;' requires string as left operand, not tuple
</code></pre>
<p>So I am looking for a way for this to succeed. </p>
<p>The list of possible occurrences:</p>
<pre><code>stocks = (
        'GB COD EAST',
        'GBE COD',
        'GB COD WEST',
        'GBW COD',
        'GOM COD',
        'GB HADDOCK EAST',
        'GBE HADD',
        'GB HADDOCK WEST',
        'GBW HADD',
        'GOM HADDOCK',
        'GOM HADD',
        'GOM HAD',
        'GOM HADOCK',
        'PLAICE',
        'DABS',
        'POLLOCK',
        'POLL',
        'REDFISH',
        'REDS',
        'RED',
        'WHITE HAKE' ,
        'WHITEHAKE',
        'WHAKE',
        'WHAK',
        'GB WINTER FLOUNDER',
        'GB BB',
        'GB WINTER',
        'GB BLACK BACKS',
        'GB BLACKBACKS',
        'GOM WINTER FLOUNDER',
        'GOM BLACKBACKS',
        'GOM BB',
        'GOM WINTER',
        'SNE WINTER FLOUNDER',
        'SNE WINTER',
        'SNE/MA WINTER FLOUNDER',
        'SNE BLACKBACK',
        'SNE BLACKBACKS',
        'SNE BB',
        'WITCH FLOUNDER',
        'WITCH',
        'WHICH',
        'WHITCH',
        'GREYSOLE',
        'GREY SOLE',
        'CC/GOM YELLOWTAIL FLOUNDER',
        'GOM YELLOWTAIL',
        'GOM YELLOW TAIL',
        'GOM YT',
        'GB YELLOWTAIL FLOUNDER',
        'GB YELLOWTAIL',
        'GB YT',
        'SNE/MA YELLOWTAIL FLOUNDER',
        'SNE YT',
        'SNE YELLOWTAIL',
        'SNE YELLOW TAIL',
        'SCALLOP IFQ'
        )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open(file_path) as f:
    for line in f:
        if any(stock.lower() in line.lower().strip() for stock in stocks):
            fish, remainder = line.split('\t')
            print("fish:", fish)
            print("remainder:", remainder)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>stocks</code> is a tuple, <em>you cannot check if a tuple is in a string</em>:</p>
<pre><code>&gt;&gt;&gt; ("a", "b") in "ab"
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: 'in &lt;string&gt;' requires string as left operand, not tuple
</code></pre>
<p>You may use the <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">built-in <code>any()</code> function</a> instead:</p>
<pre><code>if any(stock in line for stock in stocks):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python only allows you to use the in operator with a right operand of type string if the left operand is also of type string.</p>
<p><code>if (stocks in line):</code></p>
<p>stocks is a tuple and line is string. You could use the following method, assuming you want all the matches, including duplicates:</p>
<p><code>with open(file_path) as f:
    for line in f:
        matches = [x for x in stocks if x in line]
        print(matches)</code></p>
</div>
<span class="comment-copy"><code>stocks</code> is a tuple. You are looking for a tuple object in a string. Instead, you need a separate <code>for</code> loop to go through each string <i>inside</i> the overall tuple.</span>
<span class="comment-copy">Have you considered changing stocks to a set - i.e. <code>sstocks = set(stocks)</code></span>
<span class="comment-copy">So I think it works, but just a quick follow up question: it doesn't print anything, I think because the <code>stocks</code> tuple is in all caps, is there a way to ignore upper/lower case? I know that exists in RegEx</span>
<span class="comment-copy">Yes, you can update the condition to: <code>any(stock.lower() in line.lower().strip() for stock in stocks)</code></span>
<span class="comment-copy">It says: <code>AttributeError: 'builtin_function_or_method' object has no attribute 'strip'</code> does that mean <code>strip()</code> won't work on the file?</span>
<span class="comment-copy">That's interesting, <code>line.lower()</code> should return a string, not a function. Are you sure the executing code contains the <code>()</code> after the <code>.lower</code>?</span>
<span class="comment-copy">Yup that was the problem. Sorry for the dumb question, I'm a novice. I really appreciate the help :)</span>
