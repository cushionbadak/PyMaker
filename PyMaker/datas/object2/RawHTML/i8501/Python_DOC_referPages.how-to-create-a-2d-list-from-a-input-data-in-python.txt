<div class="post-text" itemprop="text">
<p>I was trying this</p>
<pre><code>n = int(input())
m = int(input())
print(n,m)
for i in range(0,n):
    for j in range(0,m):
        ar[i][j] = int(input())
for i in range(0,n):
    for j in range(0,m):
        print (ar[i][j])
</code></pre>
<p>But it was showing an error</p>
<pre><code>Traceback (most recent call last):
  File "C:/Users/shivansh/Desktop/test.py", line 6, in &lt;module&gt;
    ar[i][j] = int(input())
NameError: name 'ar' is not defined
</code></pre>
<p>I used to do the same in C language but it works. So, how to this in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>You haven't declared <code>ar</code> yet. In Python, you don't have to perform separate declaration and initialization; nevertheless, you can't perform <em>operations</em> on names willy-nilly. </p>
<p>Start off with something like this:</p>
<pre><code>ar = [[0 for j in range(m)] for i in range(n)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can initialize matrix in nested loop like this:</p>
<pre><code>n = int(input()) # columns
m = int(input()) # rows
print(n,m)
matrix = []
for i in range(0,m):
    matrix.append([])
    for j in range(0,n):
        matrix[i].append(0)
        matrix[i][j] = int(input())
print matrix
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should know that <code>ar</code> is not defined when you are trying to perform an assignment like <code>ar[i][j] = int(input())</code>, there are many ways to fix that.</p>
<h2>In C/C++</h2>
<p>In C/C++, I presume you would do such work like this:</p>
<pre><code>#include &lt;cstdio&gt;

int main()
{
    int m, n;
    scanf("%d %d", &amp;m, &amp;n);
    int **ar = new int*[m];
    for(int i = 0; i &lt; m; i++)
        ar[i] = new int[n];
    for(int i = 0; i &lt; m; i++)
        for(int j = 0; j &lt; n; j++)
            scanf("%d", &amp;ar[i][j]);
    // Do what you want to do

    for(int i = 0; i &lt; m; i++)
        delete ar[i];
    delete ar;

    return 0;
}
</code></pre>
<p>Before you get inputs by <code>scanf</code> in C/C++, you should allocate storage by calling <code>new</code> or <code>malloc</code>, then you can perform your <code>scanf</code>, or it will crash.</p>
<h2>How to do like that in Python</h2>
<p>It's very similar to what you had done in C/C++, according to your code, when you are trying to perform assignment to <code>ar[i][j]</code>, Python has no idea what <code>ar</code> it is! So you have to let it know first. </p>
<h2>A NOT-pythonic way</h2>
<p>A NOT-Pythonic way is do something like you did in C/C++:</p>
<pre><code>n = int(input())
m = int(input())

ar = []
for i in range(m):
    ar.append([])
    for j in range(n):
        k = int(input())
        ar[i].append(k)

for i in range(m):
    for j in range(n):
        print(ar[i][j])
</code></pre>
<p>You initialize the list by <code>ar = []</code> like you did <code>int **ar = new int*[m];</code> in C/C++. For each row in the 2-d list, initialize the row by using <code>ar.append([])</code> like you did <code>ar[i] = new int[n];</code> in C/C++. Then, get your data by using <code>input</code> and append it to <code>ar[i]</code>.</p>
<h2>A pythonic way</h2>
<p>The way to perform such a job like above it's not very pythonic, instead, you can get it done by using a feature called <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">List Comprehensions</a>, then the code can be simplified into this:</p>
<pre><code>n = int(input())
m = int(input())

ar = [[0 for j in range(n)] for i in range(m)]
for i in range(m):
    for j in range(n):
        k = int(input())
        ar[i][j] = k

for i in range(m):
    for j in range(n):
        print(ar[i][j])
</code></pre>
<p>Note that the core <code>ar = [[0 for j in range(n)] for i in range(m)]</code> is a list comprehension that it creates a list which has <code>m</code> lists and for each list of these <code>m</code> lists it has <code>n</code> 0s.</p>
</div>
<div class="post-text" itemprop="text">
<p>Actually, you don't need the column count. Just enter the number of rows and give your input space separated.</p>
<pre><code>rows = int(input('Enter rows\n'))
my_list = []
for i in range(rows):
    my_list.append(list(map(int, input().split())))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you haven't declared ar before, you cannot assign elements  at specific indexes. You can decalre a two dimensional list in this manner initialized to a certain <code>value</code>.</p>
<pre><code>arr = [[value]*c for _ in range(r)]
</code></pre>
<p>where <code>r</code> and <code>c</code> are desired number of rows and columns respectively</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>list=[]

n=int(input("enter no  of rows"))

m=int(input("enter no of columns"))

for i in range(0,m):
    list.append([])
for i in range(0,n):
   for j in range(0,m):
       list[i].append(j)
       list[i][j]=0
for i in range(0,n):
    for j in range(0,m):
        print("entry in row:",i+1,"entry in column:",j+1)
        list[i][j]=int(input())
print(list)
</code></pre>
</div>
<span class="comment-copy">Create an empty list ar outside of loop at your declarations.</span>
<span class="comment-copy">Check here <a href="http://stackoverflow.com/questions/22741030/how-to-input-matrix-2d-list-in-python-3-4" title="how to input matrix 2d list in python 3 4">stackoverflow.com/questions/22741030/â€¦</a></span>
<span class="comment-copy">just indent the statement list.append([]) in the loop i missed it during typing</span>
