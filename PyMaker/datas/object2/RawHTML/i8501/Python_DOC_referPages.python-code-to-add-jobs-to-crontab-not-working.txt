<div class="post-text" itemprop="text">
<p><strong>I have written a small python script to automate the process of adding jobs to crontab but the job added via the script is not working and same job  when given manually working fine</strong></p>
<p><em>HERE IS THE CODE:</em></p>
<pre><code>#!/usr/bin/python3

def scheduler(time=["*","*","*","*","*"],message="no message set"):
 crontab_pointer=open('/var/spool/cron/crontabs/sky','a')
 schedule_string="\n"+" ".join(time)+" "+message+"\n"
 crontab_pointer.write(schedule_string)
 crontab_pointer.close()


if __name__=="__main__":
 scheduler(time=["52","18","*","*","*"],message="env DISPLAY=:0 /home/sky/scripts/notify2.sh")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>Permissions</h1>
<p>Make sure the user you're running your python script as root.  I did some quick testing and other users can't access their /var/spool/cron/crontabs/$username files.  This is by design if I can remember correctly.  You're supposed to use the <code>crontab -e</code> command to edit your crontab.</p>
<p><code>sudo python editcron.py</code></p>
<p>Really, the Python you've written isn't exactly wrong.  It opens the file, adds the string, then closes it.  Nothing ground-breaking here.  I just added some file system checks in to make sure you can get to that file.</p>
<h1>Code</h1>
<pre><code>import os

def scheduler(time=['*', '*', '*', '*', '*'], message='no message set', username='sky'):
    crontab_fn = '/var/spool/cron/crontabs/{!s}'.format(username)
    if not os.path.exists(crontab_fn):
        raise StandardError("File {} missing".format(crontab_fn))
    if not os.access(crontab_fn, os.W_OK):
        raise StandardError("Cannot write to file, run as root")
    crontab_fh = open(crontab_fn, 'a')
    schedule_string = "\n{t:s} {m:s}\n".format(
        t=' '.join(time),
        m=message
    )
    crontab_fh.write(schedule_string)
    crontab_fh.close()

if __name__ == "__main__":
    time = ["52","18","*","*","*"]
    message = "env DISPLAY=:0 /home/sky/scripts/notify2.sh"
    scheduler(time, message)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>NOTES</strong> from man cron:<br/>
         cron searches its spool area (/var/spool/cron/crontabs) for crontab files (which are named after  accounts  in
         /etc/passwd);  crontabs  found  are  loaded  into  memory.  Note that crontabs in <strong>this directory should not be
         accessed directly</strong> - the <strong>crontab command</strong> should be used to access and update them.  </p>
</blockquote>
<hr/>
<blockquote>
<p><strong>Question</strong>: ... same job when given manually working fine  </p>
</blockquote>
<p>I assume you use <code>crontab &lt;filename&gt;</code> here!  </p>
<hr/>
<p>Search for a <code>python module</code> or use <code>module subprocess.run(...)</code> to start <code>crontab &lt;filename&gt;</code> from within your <strong>.py</strong>.  </p>
<p><a href="https://docs.python.org/3/library/subprocess.html#using-the-subprocess-module" rel="nofollow noreferrer">using-the-subprocess-module</a> </p>
<p>Come back and Flag your Question as answered if this is working for you or comment why not.</p>
</div>
