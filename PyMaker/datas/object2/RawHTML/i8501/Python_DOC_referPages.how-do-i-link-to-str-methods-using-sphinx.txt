<div class="post-text" itemprop="text">
<p>I'm using Sphinx to generate my HTML docs from my docstrings like a good lil' Pythonista.</p>
<p>I have a docstring that looked like this:</p>
<pre><code>def do_a_thing(text):
    '''
    Call the ``str.strip()`` method on ``text``. Then do something
    else with it.
    '''
</code></pre>
<p>However, I want it to link to <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.strip</a> rather than just be all monospace and code-blocky.</p>
<p>I've tried a couple of approaches:</p>
<pre><code>:py:func:`str.strip()`
:mod:`str.strip()`
:class:`str.strip()`
:any:`str.strip()`
:doc:`str.strip()`
</code></pre>
<p>None of these work - or more accurately, the first four approaches give me a monospaced &amp; bolded font face, but none of them actually link anywhere. And the <code>any</code> directive gives me <code>WARNING: 'any' reference target not found: str.strip()</code></p>
<p>Obviously I could make a link myself, but that seems gross and also probably not exactly what I want, because what about when I upgrade to Python 4? Then I have to update all of my links in my documentation and that's just gross.</p>
<p>What's the proper way to link to the Python documentation for a str method?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://www.sphinx-doc.org/en/stable/ext/intersphinx.html" rel="nofollow noreferrer">Intersphinx</a> ftw!</p>
<p>In <code>conf.py</code>, add a couple of lines. Pyramid documentation has good examples for adding the <a href="https://github.com/Pylons/pyramid/blob/master/docs/conf.py#L55" rel="nofollow noreferrer">Intersphinx extension</a> and <a href="https://github.com/Pylons/pyramid/blob/master/docs/conf.py#L71" rel="nofollow noreferrer">configuring intersphinx mappings</a>.</p>
<pre><code>extensions = [
    # ...
    'sphinx.ext.intersphinx',
    # ...
    ]
</code></pre>
<p>and</p>
<pre><code>intersphinx_mapping = {
    #...
    'python': ('https://docs.python.org/3', None),
    #...
}
</code></pre>
<p>Then in your .rst files, there are several ways to point to the Python docs. We prefer to use the following format which indicates to the documentation author that the link will resolve to a specified external documentation source.</p>
<pre><code>:mod:`venv module &lt;python:venv&gt;`
:ref:`package &lt;python:tut-packages&gt;`
</code></pre>
<p>For Python, you can also use any of the directives within the <a href="http://www.sphinx-doc.org/en/stable/domains.html#the-python-domain" rel="nofollow noreferrer">Python Domain</a>, including:</p>
<pre><code>:py:meth:`str.strip`
</code></pre>
<p>As far as versioning, you can use multiple names in your intersphinx mapping or update the target mapping.</p>
<pre><code>intersphinx_mapping = {
    #...
    'python2': ('https://docs.python.org/2', None),
    'python': ('https://docs.python.org/3', None),  # use "python" for default version
    #...
}
</code></pre>
<p>or in the future...</p>
<pre><code>intersphinx_mapping = {
    #...
    'python2': ('https://docs.python.org/2', None),
    'python3': ('https://docs.python.org/3', None),
    'python': ('https://docs.python.org/4', None),  # use "python" for default version
    #...
}
</code></pre>
</div>
<span class="comment-copy">So, I already had the intersphinx configured like so. I tried the <code>&lt;python:tut-packages&gt;</code> and it links to <code>https://docs.python.org/3/tutorial/modules.html#tut-packages</code>. However, if I put <code>&lt;python:str.lstrip&gt;</code> in there, like what's at the end of <code>https://docs.python.org/3/library/stdtypes.html#str.lstrip</code> it doesn't link me there.</span>
<span class="comment-copy">I updated my answer for your specific item. For Python, you can also use any of the directives within the <a href="http://www.sphinx-doc.org/en/stable/domains.html#the-python-domain" rel="nofollow noreferrer">Python Domain</a>, including:      :py:meth:<code>str.strip</code></span>
<span class="comment-copy"><code>:py:meth:</code> was exactly what I needed - thanks!</span>
