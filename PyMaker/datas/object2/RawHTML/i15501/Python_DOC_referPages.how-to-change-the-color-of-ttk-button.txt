<div class="post-text" itemprop="text">
<p>I am using Python 3.x on Windows.</p>
<p>My problem is I want to customize a button widget of <code>ttk</code> by completely changing its background and foreground color.  But so far, I have been unsuccessful.</p>
<p>My desired button is:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/jAfx8.png"/></p>
<p>I read the <a href="https://docs.python.org/2/library/ttk.html#ttk.Style" rel="noreferrer"><code>ttk.Style</code></a> guide and used their code:</p>
<pre><code>ttk.Style().configure("TButton", padding=6, relief="flat",
   background="#000")

btn = ttk.Button(text="Sample")
btn.pack()
</code></pre>
<p>But it's changing the border color instead of the whole button bakground.  Here is the output:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/aI9pf.png"/></p>
<p>Kindly help me achieve my desired button.</p>
</div>
<div class="post-text" itemprop="text">
<p>Unfortunately, there isn't an easy way to change the foreground of a button from the <code>ttk</code> library.  It is always the standard Windows gray like in your picture.</p>
<p>But you can easily get what you want with a normal <code>tkinter.Button</code> if you set the right options.  Below is an example script:</p>
<pre><code>import tkinter as tk

root = tk.Tk()
btn = tk.Button(root, 
                bg='#000000',
                fg='#b7f731',
                relief='flat',
                text='hello button',
                width=20)
btn.pack()

root.mainloop()
</code></pre>
<p>And here is what it will look like:</p>
<p><img alt="enter image description here" src="https://i.stack.imgur.com/NnkxA.png"/></p>
<p>Also, the shade of green I picked was just an example one that I thought was pretty close to what you wanted.  But you can specify any hex color code you want.  If you need to turn a RGB value into hex, a simple trick is to use <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="noreferrer"><code>str.format</code></a> like so:</p>
<pre><code>&gt;&gt;&gt; rgb = (183, 247, 49)
&gt;&gt;&gt; '#{:02x}{:02x}{:02x}'.format(*rgb)
'#b7f731'
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import ttk

root.style = ttk.Style()
#root.style.theme_use("clam")
style.configure('TButton', background='black')
style.configure('TButton', foreground='green')
button= ttk.Button(self, text="My background is black and my foreground is green.")
</code></pre>
<p>works for me if you want to change <em>all</em> your buttons to the one you "desire", with Python 2.7 and Tkinter 8.6</p>
</div>
<span class="comment-copy">Thank you so much it worked but is there any example with ttk ??</span>
<span class="comment-copy">i want to do it with ttk @iCodez</span>
<span class="comment-copy">I'm not sure that is possible (I could be wrong though).  <code>ttk.Button</code> is a special kind of button that is designed to be identical to the standard Windows button.  If you want a different look, then there is really no reason to use the <code>ttk.Button</code>.  The normal Tkinter button does what you want just fine.</span>
<span class="comment-copy">Otherwise, you have about three options: 1) use a different GUI toolkit besides Tkinter.  This could be either wxpython or Qt. 2) create an image of the button you want and use that instead, or 3) alter the <code>ttk</code> source code to use a different look.  Other than that, your best bet is to use the normal <code>tkinter.Button</code>.</span>
<span class="comment-copy">thank you @iCodez m going for wxpython :)</span>
<span class="comment-copy">This seems to be the same as what the OP did themselves.</span>
