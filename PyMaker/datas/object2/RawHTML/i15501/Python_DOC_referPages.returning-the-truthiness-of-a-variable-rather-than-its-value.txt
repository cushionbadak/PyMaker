<div class="post-text" itemprop="text">
<p>Consider this code:</p>
<pre><code>test_string = 'not empty'

if test_string:
    return True
else:
    return False
</code></pre>
<p>I know I could construct a conditional expression to do it:</p>
<pre><code>return True if test_string else False
</code></pre>
<p>However, I don't like testing if a boolean is true or false when I'd rather just return the boolean. How would I just return its truthiness?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#bool"><code>bool</code></a>:</p>
<pre><code>return bool(test_string)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; bool('abc')
True
&gt;&gt;&gt; bool('')
False
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">related:  <a href="http://stackoverflow.com/q/8205558/674039">stackoverflow.com/q/8205558/674039</a></span>
<span class="comment-copy">I don't see any difference, an empty string will evaluate to False and vice versa for a non empty string</span>
<span class="comment-copy">@PadraicCunningham I used a string for a simple example. Usually I can get away with just using the object. My actual code is checking if a service is running. If no response is given, I want to return False. If I do get a response though, I don't actually care what the value is. The fact I got a response is enough. The problem is I don't want to provide the response to my user.</span>
<span class="comment-copy">Fast answer :). Vote up</span>
<span class="comment-copy">I did some more research and found a book that says truthiness is checked by first calling <code>__nonzero__</code>, and if that is undefined it then calls <code>__len__</code>. I'm guessing this is the same way bool() works, right?</span>
<span class="comment-copy">It depends on what version of Python you are using.  In Python 2.x, <code>bool()</code> will call <code>__nonzero__</code> or, if that is not implemented, <code>__len__</code>.  If neither of those are implemented, then it will return <code>True</code>.  Here is a <a href="https://docs.python.org/2/reference/datamodel.html#object.__nonzero__" rel="nofollow noreferrer">reference</a>. In Python 3.x however, <code>bool()</code> calls <code>__bool__</code> first, which is a replacement for <code>__nonzero__</code>.  For a reference, see the link in my answer.</span>
