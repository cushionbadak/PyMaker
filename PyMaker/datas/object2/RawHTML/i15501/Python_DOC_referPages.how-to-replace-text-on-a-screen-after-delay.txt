<div class="post-text" itemprop="text">
<p>I am <strong>very new</strong> to Python and I would like to know how I would clear a text that has been printed and add another piece of text. For example, I would like to display "Hello" then program with a delay of 10 seconds to replace text with another text "Goodbye". I am using Python 3.3 on Windows 7.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import time
import os

print ('hello there')
time.sleep(10) # this will BLOCK your program for 10 seconds
os.system('cls') # clear the screen, since cls is the clear screen command for windows
print ('bye')
input() # this is to wait to user to enter something to exist
</code></pre>
<p>version 2, using some 'visual' effects :D</p>
<pre><code>import time
import os

print ('hello there')
for i in range(1, 10):
    time.sleep(1)
    print ('.')
os.system('cls')
print ('bye')
input()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Once text is sent to stdout, there really isn't a good way to change it. What you probably want to do would require a UI library such as tkinter (which comes with Python) or <a href="http://www.wxpython.org" rel="nofollow">wxPython</a>. Then you can create a Window with a label widget that can change every few seconds. You might be able to use Python's <a href="https://docs.python.org/2/howto/curses.html" rel="nofollow">curses library</a> too, but I have yet to see a coherent tutorial on how you would use that for this sort of thing.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python's output is based on an abstraction of "output is just a file that you can write to", so there's no way to do this cross-platform.</p>
<p>However, if you want it to work in a Windows <code>cmd.exe</code> console (aka "DOS prompt"), and don't care about working inside IDLE, on Unix, over a network, etc., you can use the MSVCRT console I/O APIs.</p>
<p>Unfortunately, the limited set of <a href="https://docs.python.org/3/library/msvcrt.html#console-i-o" rel="nofollow">console I/O APIs built into the standard library</a> doesn't include the clear function. But you can look for third-party extended console I/O libraries on PyPI, or use PyWin32 to call the MSVCRT functions directly.</p>
<p>Or you can use a cheap hack:</p>
<pre><code>import subprocess
subprocess.check_call(['cls'])
</code></pre>
<p>This just calls the <code>cls</code> function, which does everything for you.</p>
</div>
<span class="comment-copy">maybe <code>os.system("cls")</code> ... more than that you get alot more complicated ... really on windows its easier to just write a gui program</span>
