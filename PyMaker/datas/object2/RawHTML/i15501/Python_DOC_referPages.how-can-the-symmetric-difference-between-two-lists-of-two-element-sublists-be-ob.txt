<div class="post-text" itemprop="text">
<p>I have two lists each of which contain two-element lists.</p>
<pre><code>a = [['Adolf', '10'], ['Hermann', '20'], ['Heinrich', '30'], ['Heinrich', '15']]
b = [['Rudolf', '40'], ['Adolf', '50']]
</code></pre>
<p>I want to get the 'symmetric difference' of the two lists, based on the 'key' first elements of the sublists.</p>
<p><img alt="" src="https://i.stack.imgur.com/ivtPU.png"/></p>
<p>This 'symmetric difference' would be the following:</p>
<pre><code>c = [['Hermann', '20'], ['Heinrich', '30'], ['Heinrich', '15'], ['Rudolf', '40']]
</code></pre>
<p>So, the 'Adolf' entries have been removed because they exist in both lists, while the others, including the 'Rudolf' entry, have been included because they exist not in both lists.</p>
<p>Another example would be the following:</p>
<pre><code>a = [['Adolf', '10'], ['Hermann', '20'], ['Heinrich', '30'], ['Heinrich', '15']]
b = [['Heinrich', '25']]
c = [['Adolf', '10'], ['Hermann', '20']]
</code></pre>
<p>I feel that this must be achievable through some clever list comprehensions, but I'm not quite sure how to approach it.</p>
<pre><code>c = [x for x in a_pairs if x not in b_pairs]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can make a <code>set</code> of names (the first element) from each list, then use <code>^</code> which will get the symmetric difference of the sets of names. Then use a list comprehension to iterate over each of the lists and check if the name is in the unique set, then add the results of those two list comprehensions.</p>
<pre><code>def getDifference(x,y):
    symDiff = set(i[0] for i in x) ^ set(i[0] for i in y)
    return [i for i in x if i[0] in symDiff] + [i for i in y if i[0] in symDiff]
</code></pre>
<p>First example</p>
<pre><code>&gt;&gt;&gt; a = [['Adolf', '10'], ['Hermann', '20'], ['Heinrich', '30'], ['Heinrich', '15']]
&gt;&gt;&gt; b = [['Rudolf', '40'], ['Adolf', '50']]
&gt;&gt;&gt; getDifference(a,b)
[['Hermann', '20'], ['Heinrich', '30'], ['Heinrich', '15'], ['Rudolf', '40']]
</code></pre>
<p>Second example</p>
<pre><code>&gt;&gt;&gt; a = [['Adolf', '10'], ['Hermann', '20'], ['Heinrich', '30'], ['Heinrich', '15']]
&gt;&gt;&gt; b = [['Heinrich', '25']]
&gt;&gt;&gt; getDifference(a,b)
[['Adolf', '10'], ['Hermann', '20']]
</code></pre>
</div>
<span class="comment-copy">This is great. Thank you very much for your help. I was not aware of the nifty functionality of sets!</span>
<span class="comment-copy">Just as a side note, <code>symmetric_difference()</code> is also a <a href="https://docs.python.org/3/library/stdtypes.html?highlight=set#set.symmetric_difference" rel="nofollow noreferrer">set method</a>. If <code>a</code> and <code>b</code> were sets, the symmetric difference could be returned via <code>a.symmetric_difference(b)</code> or <code>b.symmetric_difference(a)</code>.</span>
