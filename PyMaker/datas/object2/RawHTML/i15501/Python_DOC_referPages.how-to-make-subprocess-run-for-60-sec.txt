<div class="post-text" itemprop="text">
<p>I have the following python script that runs.
I want is to run the subprocess to run for 60 sec and then send the SIGINT signal to subprocess and write the output in file.If i use sleep the subprocess doesn't run.</p>
<pre><code>#!/usr/bin/python
import os
import subprocess
PIPE = subprocess.PIPE
import signal
import time

def handler(signum, frame):
    pass

signal.signal(signal.SIGALRM, handler)
signal.alarm(60)
command = "strace -c ./server"
os.chdir("/root/Desktop/")
p = subprocess.Popen(command, stdout=PIPE, stderr=PIPE)
time.sleep(60)
p.send_signal(signal.SIGINT)
signal.alarm(0)
print p.communicate()[1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.3 and newer, there is a simpler version of the answer (untested code):</p>
<pre><code>with open('output', 'wb', 0) as output_file:
    p = subprocess.Popen("strace -c ./server".split(),
                         stdout=output_file, stderr=subprocess.STDOUT, 
                         cwd="/root/Desktop/",
                         close_fds=True)
    try:
        p.wait(60) # Wait for the child process to finish, or for 60 seconds, which ever comes first.
    except subprocess.TimeoutExpired:
        p.send_signal(signal.SIGINT)
        p.wait() # Wait fro the process to actually exit after receiving the terminate signal.
</code></pre>
<p>See also: <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.wait" rel="nofollow">https://docs.python.org/3/library/subprocess.html#subprocess.Popen.wait</a></p>
</div>
<div class="post-text" itemprop="text">
<p>There are several issues:</p>
<ol>
<li><code>command</code> should be a list </li>
<li>you should read from <code>p.stdout</code>/<code>p.stderr</code> pipes otherwise the child process may stall if it generates enough output</li>
<li>you should use <em>either</em> <code>time.sleep()</code> or <code>signal.alarm()</code> here, not both.</li>
</ol>
<blockquote>
<p>I want is to run the subprocess to run for 60 sec and then send the SIGINT signal to subprocess and write the output in file.</p>
</blockquote>
<p>Start the subprocess, redirect its output to a file:</p>
<pre><code>with open('output', 'wb', 0) as output_file:
    p = subprocess.Popen("strace -c ./server".split(),
                         stdout=output_file, stderr=subprocess.STDOUT, 
                         cwd="/root/Desktop/",
                         close_fds=True)
</code></pre>
<p>Send SIGINT in a minute:</p>
<pre><code>class Alarm(Exception):
    pass

def alarm_handler(signum, frame):
    raise Alarm

# set signal handler
signal.signal(signal.SIGALRM, alarm_handler)
signal.alarm(60) # produce SIGALRM in a minute

try:
    p.wait() # wait for the child process to finish
    signal.alarm(0) # cancel alarm
except Alarm:
    p.send_signal(signal.SIGINT)
    p.wait()
</code></pre>
</div>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/1191374/subprocess-with-timeout" title="subprocess with timeout">stackoverflow.com/questions/1191374/subprocess-with-timeout</a></span>
<span class="comment-copy">related: <a href="http://stackoverflow.com/a/4418891/4279">Stop reading process output in Python without hang?</a></span>
<span class="comment-copy"><a href="https://mail.python.org/pipermail/python-list/2014-December/682746.html" rel="nofollow noreferrer">related thread on python mailing list</a></span>
<span class="comment-copy">CK will this work in python 2.7 ?</span>
<span class="comment-copy">@user2591307: it won't work on Python 2.7 with stdlib's <code>subprocess</code> module but you could install <a href="https://pypi.python.org/pypi/subprocess32/" rel="nofollow noreferrer"><code>subprocess32</code></a> package that should work on Linux. Note: <code>signal.alarm()</code> may be more efficient than <a href="https://hg.python.org/cpython/file/3a35638bce66/Lib/subprocess.py#l1539" rel="nofollow noreferrer"><code>p.wait(60)</code> that uses a busy-loop</a> -- though the difference is negligible.</span>
<span class="comment-copy">@DragonFireCK: the question has no <a href="https://stackoverflow.com/questions/tagged/python-3.x">python-3.x</a> tag and the code in the question uses <code>print</code> statement i.e., the answer should show Python 2 solution</span>
