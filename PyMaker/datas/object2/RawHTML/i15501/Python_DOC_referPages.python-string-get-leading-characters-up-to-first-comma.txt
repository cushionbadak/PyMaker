<div class="post-text" itemprop="text">
<p>I have the following string:</p>
<pre><code>strIn = "Head,0.000235532,0.43656735"
</code></pre>
<p>I would like to retrieve from this a variable <code>type = "Head"</code> and an array 
<code>vals = [0.000235532,0.43656735]</code></p>
<p>How can I do this using Python? I've considered using strIn[0],...,strIn[5] to get the type, but then I realized I'll get types of various lengths. Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're using Python 3, you can do</p>
<pre><code>type_, *vals = strIn.split(',')
vals = [float(v) for v in vals]  # Convert list of strings to list of floats.
</code></pre>
<p>This uses <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>str.split</code></a> to split the string into a list based on the provided character, and then uses Python 3's extended tuple unpacking to put the first value into <code>type_</code> and the remaining values into <code>vals</code>. See <a href="https://stackoverflow.com/questions/6967632/unpacking-extended-unpacking-and-nested-extended-unpacking">this answer</a> for more discussion on how to use tuple unpacking.</p>
<p>If you're on Python 2 you can't use the extended unpacking syntax, so you have to add an additional step:</p>
<pre><code>str_list = strIn.split(',')
type_ = str_list[0]
vals = [float(v) for v in str_list[1:]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As you are in python2 first split with <code>,</code> then use slicing and <code>float</code> function :</p>
<pre><code>&gt;&gt;&gt; none=strIn.split(',')[0]
&gt;&gt;&gt; none
'Head'
&gt;&gt;&gt; vals=map(float,strIn.split(',')[1:])
&gt;&gt;&gt; vals
[0.000235532, 0.43656735]
</code></pre>
<p>As <code>type</code> is a built-in name recommended that dont use it !</p>
</div>
<span class="comment-copy"><code>str.split</code> would be a good starting point.</span>
<span class="comment-copy">Note that <code>*vals</code> will be a list of strings.</span>
<span class="comment-copy">Sorry, on Python 2.7. Can this still work?</span>
<span class="comment-copy">@Menegazzo True. I added a line to convert it to a list of floats.</span>
<span class="comment-copy">@jds I think it will work on Python 2.7 as well. Just give it a try.</span>
<span class="comment-copy">@jds Added a version for Python 2.</span>
<span class="comment-copy"><code>type</code> is a special keyword, that code could have surprising consequences ;-)</span>
<span class="comment-copy">@StanislavShabalin yep, ;) , thanks for attention !</span>
