<div class="post-text" itemprop="text">
<pre><code>numbers = [1, 2 ,3, 4, 5]
l = 0
for n in numbers:
    if n%2 != 0 and n &gt; l:     
        #print(n)
        l = n

if l == 0:
    print ('Odd numbers are not inputted')
else:
    print ('Largest odd no. is: ', l)
</code></pre>
<p>After identifying the integers used if they are odd(which is this case) or even, I ran the program and it did showed that 5 is the largest odd in the list. I was curious as to how did this happen, so I tried printing the variable 'n' which then results in the following numbers: 1, 3, 5. </p>
<p>If l = n which means l is equal to 1, 3 and 5, how come this else statement</p>
<pre><code>else:
    print ('Largest odd no. is: ', l)
</code></pre>
<p>identifies and prints the largest number in the list? I do hope someone could shed some light for me and help me understand this dilemma of mine.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>l</code> is not "equal to 1, 3, and 5". It is equal to 1 the first time through, then it is subsequently set to 3, then to 5, and then the loop ends. So it retains the value it had when the loop ends, which is 5.</p>
</div>
<div class="post-text" itemprop="text">
<p>This should make things more obvious:</p>
<pre><code># Integers 1, 2 ,3, 4, 5 are used
l = 0
for n in numbers:
    if n%2 != 0 and n &gt; l:     
        l = n
        print("L is now {}:".format(l))    # &lt;=
    else:
        print("skip {}".format(n))         # &lt;=
</code></pre>
<p>which results in</p>
<pre><code>L is now 1:
skip 2
L is now 3:
skip 4
L is now 5:
</code></pre>
</div>
<span class="comment-copy">Maybe a bit more obvious if you <code>print</code> <i>after</i> the assignment and actually use <code>l</code>!</span>
<span class="comment-copy">@jonrsharpe: (shrug) functionally identical, but eh, why not? Code updated.</span>
<span class="comment-copy">@HughBothwell This is a great help sir ^_^ I'm still a beginner in using python so would you please explain what does .format do?</span>
<span class="comment-copy">@YuYumenoPie: basic string formatting; see the docs at <a href="https://docs.python.org/3/library/string.html#formatstrings" rel="nofollow noreferrer">docs.python.org/3/library/string.html#formatstrings</a></span>
