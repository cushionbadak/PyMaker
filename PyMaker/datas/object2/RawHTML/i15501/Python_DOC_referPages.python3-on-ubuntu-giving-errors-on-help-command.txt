<div class="post-text" itemprop="text">
<p>I used help() in the python3 shell on Ubuntu 14.04
I got this output
Please help , don't know whats wrong.</p>
<pre><code>Python 3.4.0 (default, Apr 11 2014, 13:05:11) 
[GCC 4.8.2] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; help()
Traceback (most recent call last):
File "&lt;stdin&gt;", line 1, in &lt;module&gt;
File "/usr/lib/python3.4/_sitebuiltins.py", line 98, in __call__
import pydoc
File "/usr/lib/python3.4/pydoc.py", line 65, in &lt;module&gt;
import platform
File "/home/omega/platform.py", line 2, in &lt;module&gt;
print("System    : ",platform.uname().system)
AttributeError: 'module' object has no attribute 'uname'
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that <a href="https://docs.python.org/3/library/platform.html" rel="nofollow"><code>platform</code></a> is the name of a stdlib module, which <code>help</code> uses. By creating a module of your own with the same name that occurs before the stdlib in your <code>sys.path</code>, you're preventing Python from using the standard one.</p>
<p>The fact that your own <code>platform</code> module tries to use the stdlib module of the same name just compounds the problem. That isn't going to work; your <code>import platform</code> inside that module is just importing itself.</p>
<p>The solution is to not collide names like this. Look at the <a href="https://docs.python.org/3/library/" rel="nofollow">list of the standard modules</a>, and don't create anything with the same name as any of them if you want to use features from that module, directly or indirectly.</p>
<p>In other words: Rename your <code>platform.py</code> to something else, or put it inside a package.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>File "/home/omega/platform.py", line 2, in &lt;module&gt;
print("System    : ",platform.uname().system)
</code></pre>
<p>This is the problem, go to platform.py and fix it, it will be ok. It says, <em>platform</em> has not any method called <em>uname</em> you probably misstyped.</p>
</div>
<span class="comment-copy">How do I fix that ?</span>
<span class="comment-copy">@MeghdeepRay: The answer already says how you fix it: "Rename your <code>platform.py</code> to something else, or put it inside a package." And, more generally, don't give any of your own top-level modules or scripts the same name as any of the stdlib modules.</span>
<span class="comment-copy">No, he's not trying to call <code>platform.uname</code>, he's just calling <code>help()</code>. The problem is that <i>Python</i> is trying to call <code>platform.uname</code>. And it doesn't just want any old function there, it wants the one documented as part of the stdlib.</span>
<span class="comment-copy">I thought it maybe a bug?</span>
<span class="comment-copy">No, it's not a bug, he's just hiding a stdlib module. (Well, there's <i>also</i> clearly a bug in his codeâ€”he has a module named <code>platform</code> that imports and tries to use the stdlib module <code>platform</code>. But even without that bug, just hiding the stdlib module will break things.)</span>
