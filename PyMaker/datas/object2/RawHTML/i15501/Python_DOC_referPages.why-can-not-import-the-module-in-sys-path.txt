<div class="post-text" itemprop="text">
<pre><code>root@rebuild:~# python3.4
Python 3.4.0 (default, Nov 27 2014, 13:54:17)
[GCC 4.7.2] on linux
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import sys
&gt;&gt;&gt; sys.path
['', '/root', '/root/Python-3.4.0/Lib/site-packages/}', '/usr/local/python3.4/lib/python34.zip', '/usr/local/python3.4/lib/python3.4', '/usr/local/python3.4/lib/python3.4/plat-linux', '/usr/local/python3.4/lib/python3.4/lib-dynload', '/usr/local/python3.4/lib/python3.4/site-packages']   
&gt;&gt;&gt; import os
&gt;&gt;&gt; os.system("ls  /root/Python-3.4.0/Lib/site-packages/")                      
test.py  README
0
&gt;&gt;&gt; import  test.py
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ImportError: No module named 'test'
</code></pre>
<p>It is strange that why can't import test module which is in the sys.path "/root/Python-3.4.0/Lib/site-packages/"?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import test.py
</code></pre>
<p>You imported your module <code>test</code> with the extension <code>.py</code>. So the import will try to find module named <code>py</code> in package <code>test</code>. </p>
<pre><code>import test
</code></pre>
<p>Would be the correct syntax for importing a module.</p>
<p>For example :</p>
<pre><code>&gt;&gt;&gt; import string
&gt;&gt;&gt; string
&lt;module 'string' from 'C:\Python27\lib\string.pyc'&gt;
</code></pre>
<p>Here <code>string</code> is module. But if you try to <code>import string.py</code> it treats <code>string</code> as <code>package</code> and trys to <code>import</code> <code>py</code> module.</p>
<pre><code>&gt;&gt;&gt; import string.py
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ImportError: No module named py
</code></pre>
<p>And you should also fix your <code>site-packages</code> path in <code>sys.path</code> which has '<strong>}</strong>' symbol at the end which is invalid path.</p>
</div>
<div class="post-text" itemprop="text">
<p>For two reasons:</p>
<ul>
<li>Your <code>sys.path</code> is messed up (there's a trailing <code>}</code>).</li>
<li>You're supposed to <code>import test</code>, not <code>import test.py</code>.</li>
</ul>
<p>Please read the Python tutorial's section on modules: <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow">https://docs.python.org/3/tutorial/modules.html</a></p>
</div>
