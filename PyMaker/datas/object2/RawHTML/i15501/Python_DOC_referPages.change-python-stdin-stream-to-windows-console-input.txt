<div class="post-text" itemprop="text">
<p>I want to run a python 3 script giving it a file via stdin <strong>or</strong> manually typing data.</p>
<p>E.g. let's suppose I want to print the contents of an input with one line. The script, called <code>app.py</code> would look something like this:</p>
<pre><code>from sys import stdin

print("Input says:"+stdin.readline())
</code></pre>
<p>Then, I could run it in both of the following ways:</p>
<p><strong>1. Passing a file as stdin</strong></p>
<pre><code>python app.py &lt; input.txt
</code></pre>
<p><strong>2. Prompt the user for the input</strong></p>
<pre><code>python app.py
</code></pre>
<p>My problem is that in both cases, <strong>after</strong> reading stdin I would like to prompt the user for some extra data. Following the before mentioned example it would be:</p>
<pre><code>from sys import stdin

print("Input says:"+stdin.readline())

print("Did you like that? (Yes/No)")
ans = input() # This line is the issue!
if( ans == "Yes"):
    print("You liked it!")    
</code></pre>
<p>The commented line above works perfectly for case 2, but for case 1 it throws an <code>EOFError: EOF when reading a line</code> error because it tries to read from the file.</p>
<p>I would like to know if before that line I could do something like</p>
<pre><code>sys.stdin = SOMETHING
</code></pre>
<p>Where <strong>SOMETHING</strong> represents the Windows Console input. I think that if I could do that, then both cases would work properly.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could consider both cases to be the same (ignore the difference). Your script just reads two lines from stdin. stdin may be redirected from a file or it can be attached to the console, your script can work the same in many cases:</p>
<pre><code>print("Read the first line from stdin", input())
answer = input("Did you like that? (Yes/No): ") # read 2nd line
if answer == "Yes":
    print("You liked it!")
</code></pre>
<p>See <a href="http://ideone.com/GelIMi" rel="nofollow">executable code example</a>.</p>
<blockquote>
<p><strong>Q:</strong> What I wanted was to read some inputs from a file OR from the console (depending on the parameters used when the app was ran). Some other lines I wanted them to be always read from the console. </p>
</blockquote>
<p>To read from the console directly regardless whether stdin is redirected from a file or not, you could use <a href="https://docs.python.org/3/library/msvcrt.html#msvcrt.getwch" rel="nofollow"><code>msvcrt.getwch()</code></a>. See example usage in <a href="https://github.com/python/cpython/blob/5ae7ac389a68631f51517c7d3557e4775df70708/Lib/getpass.py#L98-L118" rel="nofollow"><code>getpass.win_getpass()</code></a>.</p>
<p>If you have issues with accepting Unicode input; install <a href="https://github.com/Drekin/win-unicode-console" rel="nofollow"><code>win_unicode_console</code> package</a>. You can enable it globally for your python installation or for a specific user or for a script as a whole or temporarily using <code>win_unicode_console.enable()/.disable()</code>. To force it to use console, you could set <code>sys.stdin=None</code> temporarily if stdin is redirected or <a href="https://github.com/Drekin/win-unicode-console/blob/414c7ee0b295a435e88b7a0c30737b1846d9ffa5/win_unicode_console/streams.py#L92" rel="nofollow">call <code>ReadConsoleW()</code> yourself (cumbersome)</a>.</p>
</div>
<span class="comment-copy">You may be able to reach around to the console via the <code>win32console</code> api.</span>
<span class="comment-copy">Try <code>CON</code> or <code>CONIN$</code>.  Might work, depending on what exactly Python does with it.</span>
<span class="comment-copy">Your question is not clear; you want to prompt from the <i>console</i> for some input, even though you have supplied a file as <code>sys.stdin</code>.</span>
<span class="comment-copy">The line <code>answer = input("Did you like that? (Yes/No): ")</code> throws an EOFError if I use a file as input. Anyway, that is supposed to happen since it will try to read an input from the file!</span>
<span class="comment-copy">@Sam: have you tried to click on "executable code example" link? There is no EOFError. How do you think ideone provides input to the script? (there are no people that type the input). EOFError may be raised at the end of file (portable code should handle EOFError exception) -- I don't know the exact conditions: it is a good question on its own. The point of my answer that you should ignore the difference between: <code>cat input | python your_script.py</code>, <code>&lt;input python your_script.py</code> and manually providing input from terminal/console (unless you have a specific reason not to ignore it).</span>
<span class="comment-copy">Yes, that works because stdin has both the first line (data that is there before the execution) and the "Yes" line which is supposed to be typed by the user at runtime. Basically, I what I want is to change the reference sys.stdin from the stream related to the file I give as input (not as argument!) to the stream related to the console's input.</span>
<span class="comment-copy">@Sam: Do you want to read the first line from a file and the second line from the console? It is possible to redirect <code>sys.stdin</code> in the middle of a program to read from console (just assign <code>sys.stdin</code> a file-like object that reads from console directly e.g., using Win32 API (it might not have any effect on <code>input()</code>; use <code>sys.stdin.readline()</code> in that case) or a special filename such as <code>con</code> as suggested in the comments. But a better alternative is to avoid redirecting stdin in the middle of a program; read from a file using a filename instead.</span>
<span class="comment-copy">@Sam: I've updated the answer to mention explicitly how to read from the console directly regardless whether stdin is redirected or not.</span>
