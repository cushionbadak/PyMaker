<div class="post-text" itemprop="text">
<p>I want to convert a comma-delimited CSV file to a pipe-delimited file with Python:</p>
<p>This is how I am reading my csv file:</p>
<pre><code>with open('C://Path//InputFile.csv') as fOpen:
    reader     =     csv.DictReader(fOpen)

    for row in reader:
        for (k, v) in row.items():
            columns[k].append(v)

c = csv.writer(open("C://Path//OutputFile.txt","wb"), delimiter="|")
</code></pre>
<p>How would I write it as pipe delimited file?</p>
</div>
<div class="post-text" itemprop="text">
<p>This does what I think you want:</p>
<pre><code>import csv

with open('C:/Path/InputFile.csv', 'rb') as fin, \
     open('C:/Path/OutputFile.txt', 'wb') as fout:
    reader = csv.DictReader(fin)
    writer = csv.DictWriter(fout, reader.fieldnames, delimiter='|')
    writer.writeheader()
    writer.writerows(reader)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Adapting <a href="https://stackoverflow.com/a/27553098/3357935">martineau's answer</a> for Python 3.</p>
<pre><code>import csv

with open('C:/Path/InputFile.csv') as fin:
    with open('C:/Path/OutputFile.txt', 'w', newline='') as fout:
        reader = csv.DictReader(fin, delimiter=',')
        writer = csv.DictWriter(fout, reader.fieldnames, delimiter='|')
        writer.writeheader()
        writer.writerows(reader)
</code></pre>
<p>The newline parameter was added to prevent <a href="https://stackoverflow.com/q/3348460/3357935">newline issues on Windows systems</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>https://docs.python.org/2/library/csv.html</code> for Python 2.x
<code>https://docs.python.org/3.3/library/csv.html</code> for Python 3.x</p>
<p>These pages explain how to use csv.writer.</p>
<p>Without testing it, your code looks syntacticly valid.
All you need to do is add some <code>c.writerow('data','here')</code> to write your data.</p>
</div>
<span class="comment-copy">Related: <a href="http://stackoverflow.com/questions/1366775/how-to-convert-tab-separated-pipe-separated-to-csv-file-format-in-python">how to convert tab separated pipe separated to csv file format</a></span>
<span class="comment-copy">@martineau The above code will not work in python 2.6, you should mention the python version. It will show syntax error for opening two files like that. If possible please provide the solution for 2.6 as well.</span>
<span class="comment-copy">@cyborg: Just nest (indent) the second <code>with</code> statement and the lines following it all one level inside the first. Apparently having multiple context expressions wasn't added until Python 2.7.</span>
<span class="comment-copy">Returns an error in Python 3.6.4: <code>_csv.Error: iterator should return strings, not bytes (did you open the file in text mode?)</code></span>
<span class="comment-copy">@StevenVascellaro: This code was written for Python 2.x, so doesn't <code>open()</code> the files the way they should be for Python 3 (as shown in the Py3 <code>csv</code> module's <a href="https://docs.python.org/3/library/csv.html#module-csv" rel="nofollow noreferrer">documentation</a>).</span>
<span class="comment-copy">How would the code work for Python 3?</span>
