<div class="post-text" itemprop="text">
<p>im a beginner with python coding language, and I'm having trouble writing a simple program in python that i can run in my terminal.  Here is the program so far.  </p>
<pre><code>import random

X = "*"
O = "*"
Player = "*"
Computer = "*"


def inputPlayerLetter():
    letter = raw_input('Do you want to be X or O? \n')

    if letter == "X":
        print "You are now X's, you will go first"
        Player = "X"
        Computer = "O"
    elif letter == "O":
        print "You are now O's you will go second"
        Player = "O"
        Computer = "X"

inputPlayerLetter()

print Player
print Computer
</code></pre>
<p>This is what i get in my terminal when i run the code.  </p>
<pre><code>Do you want to be X or O? 
X
You are now X's, you will go first
*
*
</code></pre>
<p>or </p>
<pre><code>Do you want to be X or O? 
O
You are now O's you will go second
*
*
</code></pre>
<p>Basically, in my function, if i select X, i want Player to be X, and Computer to be O (or when i select O, i want Player to be O, and Computer to be X).  However, when i print the variable, i get * and *.  How can i fix this, so that my attempted result from my if elif statement has my desired affect.  </p>
</div>
<div class="post-text" itemprop="text">
<p>The values of Player and Computer you are assigning are local to the function. You should return the values from your function, so that they are accesible in the main scope:</p>
<pre><code>def inputPlayerLetter():
    Player , Computer = "*", "*"
    letter = raw_input('Do you want to be X or O? \n')
    if letter == "X":
        print "You are now X's, you will go first"
        Player, Computer = "X", "0"
    elif letter == "O":
        print "You are now O's you will go second"
        Player, Computer = "O", "X"
    return Player, Computer

Player, Computer = inputPlayerLetter()
</code></pre>
<p>For more details see <a href="https://docs.python.org/3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python" rel="nofollow">What are the rules for local and global variables in Python?</a>:</p>
<blockquote>
<p>In Python, variables that are only referenced inside a function are
  implicitly global. If a variable is assigned a new value anywhere
  within the function’s body, it’s assumed to be a local. If a variable
  is ever assigned a new value inside the function, the variable is
  implicitly local, and you need to explicitly declare it as ‘global’.</p>
<p>Though a bit surprising at first, a moment’s consideration explains
  this. On one hand, requiring global for assigned variables provides a
  bar against unintended side-effects. On the other hand, if global was
  required for all global references, you’d be using global all the
  time. You’d have to declare as global every reference to a built-in
  function or to a component of an imported module. This clutter would
  defeat the usefulness of the global declaration for identifying
  side-effects.</p>
</blockquote>
<p>You could also make the variable global but this is in general considered bad practice because it opens the door to unexpected side effects.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your <strong>Player, Computer</strong> variables are outside <code>inputplayerletter()</code> function so you are storing the value in local variables.</p>
<p>To solve this make your function to use your global variables using:</p>
<pre><code>global Player, Computer
</code></pre>
<p>Final code:</p>
<pre><code>import random

X = "*"
O = "*"
Player = "*"
Computer = "*"


def inputPlayerLetter():  
    global Player, Computer


    letter = raw_input('Do you want to be X or O? \n')

    if letter == "X":
        print "You are now X's, you will go first"
        Player = "X"
        Computer = "O"
    elif letter == "O":
        print "You are now O's you will go second"
        Player = "O"
        Computer = "X"

inputPlayerLetter()

print Player
print Computer
</code></pre>
<p>Hope it helps</p>
</div>
<span class="comment-copy">It's a scope issue</span>
