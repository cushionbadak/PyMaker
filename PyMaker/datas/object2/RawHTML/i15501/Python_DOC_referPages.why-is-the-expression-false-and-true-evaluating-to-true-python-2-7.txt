<div class="post-text" itemprop="text">
<p>I have two boolean variables in my program called after and late. Just to make sure each variable got the right value, I tested each one with the following command:</p>
<pre><code>print(after)
print(late)
</code></pre>
<p>The program prints</p>
<pre><code>false
true
</code></pre>
<p>as expected. However, when I run the following code:</p>
<pre><code>if after and late:
  print('true and true')
elif after and (not late):
  print('true and false')
elif (not after) and late:
  print('false and true')
elif (not after) and (not late):
  print('false and false')
</code></pre>
<p>the program prints</p>
<pre><code>'true and true'
</code></pre>
<p>which means that the expression after and late is evaluating to true. Why is this evaluating to true even though true and false should yield false?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; print(True and False)
False
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html#boolean-values" rel="nofollow"><strong>Boolean</strong></a> values have a capital letter in the beginning. I guess you use strings. You could check that with <code>type(after)</code>.</p>
<p>You don't need to divide all the cases manually to "debug" your program. That's not the way Python was intended for...
Just <code>print</code> the evaluated code <code>print(after+' and '+late)</code>, use <code>type</code> like me above or use your interactive python console to play around.</p>
</div>
<span class="comment-copy">Are <code>after</code> and <code>late</code> strings, perhaps?</span>
<span class="comment-copy">a lil more snippet would be helpful</span>
<span class="comment-copy">They're definitely not booleans.  Check the case.  Python's booleans are Capitalized.</span>
<span class="comment-copy">print(type(after), type(later))</span>
<span class="comment-copy">If the answer satisfies please mark and close it.</span>
<span class="comment-copy">Thanks. I just tested it and they were strings.</span>
