<div class="post-text" itemprop="text">
<p>I want to print a float value I got after doing some math as a string in the hh:mm format. Currently I have:(The time in this case is equal to a float like 9.888888888888886,or 09:50 (how I want it))</p>
<pre><code>    time = str(time)
    time = time.split(".")
    time[1] = float(time[1])
    time[1] *= 0.6
    time[1] = str(time[1])
</code></pre>
<p>and when I print I use</p>
<pre><code>    str(time[0]) + ":" + time[1][:2]
</code></pre>
<p>Any way to achieve this effect consistently? With more advanced inputs my above code does not work properly, and outputs the wrong time.</p>
</div>
<div class="post-text" itemprop="text">
<p>Alternatively to using <code>datetime</code>, you can just use simple formatting with a bit of maths, eg:</p>
<pre><code>result = '{0:02.0f}:{1:02.0f}'.format(*divmod(time * 60, 60))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/datetime.html#datetime.timedelta" rel="nofollow"><code>datetime.timedelta</code></a>:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; datetime.timedelta(hours=9.888888888888886)
datetime.timedelta(0, 35600)
&gt;&gt;&gt; str(datetime.timedelta(hours=9.888888888888886))
'9:53:20'
&gt;&gt;&gt; str(datetime.timedelta(hours=9.888888888888886)).rsplit(':', 1)[0]
'9:53'
</code></pre>
<hr/>
<pre><code>&gt;&gt;&gt; datetime.datetime.combine(datetime.date.today(), datetime.time()) + \
... datetime.timedelta(hours=9.888888888888886)
datetime.datetime(2014, 12, 16, 9, 53, 20)
&gt;&gt;&gt; _.strftime('%H:%M')
'09:53'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using divmod you get the remainder and the quotient of a division.</p>
<pre><code>minutes = 9.888888888888886*60
hours, minutes = divmod(minutes, 60)

print "%02d:%02d"%(hours,minutes)
</code></pre>
<p>Output:</p>
<pre><code>09:53
</code></pre>
<p>If you want the seconds too:</p>
<pre><code>seconds = 9.888888888888886*60*60
minutes, seconds = divmod(seconds, 60)
hours, minutes = divmod(minutes, 60)

print "%02d:%02d:%02d"%(hours,minutes,seconds)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you want to turn <code>9.888888888888886</code> into <code>09:53</code>, based on the former being floating point hours, and you don't want to worry about days, without a library you could simply do:</p>
<pre><code>fhours = 9.888888888888886
ihours = int(ihours)
"%02d:%02d" % (ihours,(fhours-ihours)*60)
</code></pre>
<p>With only the math module, try</p>
<pre><code>import math
"%02d:%02d" % (fhours,math.modf(fhours)[0]*60)
</code></pre>
<p>You might think that using the <code>datetime</code> module would help, but it's actually a bit fiddly. You can get a timedelta object out by passing in your fractional hours:</p>
<pre><code> import datetime
 td = datetime.timedelta(hours=9.888888888888886)
</code></pre>
<p>But getting that into a time object or a datetime object to format is the tricky bit, you end up having to do something like</p>
<pre><code> import datetime
 td = datetime.timedelta(hours=9.888888888888886)
 (datetime.datetime(2000,1,1)+td).strftime("%H:%M")
</code></pre>
<p>(That uses a randomly picked date to get the time delta into a datetime to use)</p>
</div>
<span class="comment-copy">Define "does not work properly". Define "wrong time".</span>
<span class="comment-copy">what if you want to have it in the format HH:MM:SS?</span>
