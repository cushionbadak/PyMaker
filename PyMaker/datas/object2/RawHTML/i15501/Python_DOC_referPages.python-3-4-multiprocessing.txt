<div class="post-text" itemprop="text">
<p>This question is asking for advice as well as assistance with some code.</p>
<p>I currently am learning Python with 3.4
I have built a basic network checking tool, i import items from a text file and for each of them i want python to check dns (using pydns), ping the ip (using subprocess to call OS native ping).</p>
<p>Currently i am checking 5000 to 9000 thousand IP address and its taking a number of hours, approx 4 to return all the results.</p>
<p>I am wondering if i can use multiprocessing or threading to speed this up but still the return the output to a list so that the row can be written to a csv file at the very end of the script in bulk.</p>
<p>I am new to python so please tell me if i have overlooked something i should of also.</p>
<p>Main code
<a href="http://pastebin.com/ZS23XrdE" rel="nofollow">http://pastebin.com/ZS23XrdE</a></p>
<p>Class
<a href="http://pastebin.com/kh65hYhG" rel="nofollow">http://pastebin.com/kh65hYhG</a></p>
</div>
<div class="post-text" itemprop="text">
<p>As most of the work seems IO based, you can easily rely on Threads.</p>
<p>Take a look at the Executor.map() function in cocurrent.futures:
<a href="https://docs.python.org/3/library/concurrent.futures.html" rel="nofollow">https://docs.python.org/3/library/concurrent.futures.html</a></p>
<p>You can pass the list of IPs and the function you want to run against each element, the returned value, virtually, is the list of results of the given function.</p>
<p>In your specific case you can wrap the two worker's methods (check_dns_ip and os_ping) in a single one and pass it to the ThreadPoolExecutor.map function.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could <a href="https://stackoverflow.com/a/23616229/4279">use multiple threads to run child processes (<code>ping</code> in your case) and collect their output but it is not necessary</a>. Here's a <a href="https://stackoverflow.com/a/23284285/4279">code example how to make multiple http requests using a thread pool</a>. Here's <a href="https://stackoverflow.com/a/9200305/4279">code that uses <code>concurrent.futures</code> to make dns requests concurrently</a>.</p>
<p>You don't need multiple threads/process to check 5000-9000 IPs (DNS, ICMP).
You could <a href="https://stackoverflow.com/a/20722204/4279">use <code>gevent</code>, <code>twisted</code>, <code>asyncio</code> to make network connections in the same process</a>.</p>
</div>
<span class="comment-copy">multiprocessing is probably a good bet, using a joinable queue to get the data back.  But that might be no better than subprocess, depending on how you are running it.  Are you waiting for each to complete?</span>
<span class="comment-copy">I have updated the main post with the current code i am using that is taking a long time.</span>
