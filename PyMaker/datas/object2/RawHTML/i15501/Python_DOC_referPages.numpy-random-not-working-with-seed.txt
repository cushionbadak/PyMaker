<div class="post-text" itemprop="text">
<pre><code>import random
seed = random.random()
random_seed  = random.Random(seed)
random_vec = [ random_seed.random() for i in range(10)]
</code></pre>
<p>The above is essentially:</p>
<pre><code>np.random.randn(10)
</code></pre>
<p>But I am not able to figure out how to set the seed? </p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure why you <em>want</em> to set the seedâ€”especially to a random number, even more especially to a random float (note that <a href="https://docs.python.org/3/library/random.html#random.seed" rel="nofollow noreferrer"><code>random.seed</code></a> wants a large integer).</p>
<p>But if you do, it's simple: call the <a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.random.seed.html#numpy.random.seed" rel="nofollow noreferrer"><code>numpy.random.seed</code></a> function.</p>
<p>Note that NumPy's seeds are arrays of 32-bit integers, while Python's seeds are single arbitrary-sized integers (although see the docs for what happens when you pass other types).</p>
<p>So, for example:</p>
<pre><code>In [1]: np.random.seed(0)    
In [2]: s = np.random.randn(10)
In [3]: s
Out[3]:
array([ 1.76405235,  0.40015721,  0.97873798,  2.2408932 ,  1.86755799,
       -0.97727788,  0.95008842, -0.15135721, -0.10321885,  0.4105985 ])
In [4]: np.random.seed(0)
In [5]: s = np.random.randn(10)
In [6]: s
Out[6]:
array([ 1.76405235,  0.40015721,  0.97873798,  2.2408932 ,  1.86755799,
       -0.97727788,  0.95008842, -0.15135721, -0.10321885,  0.4105985 ])
</code></pre>
<p>Same seed used twice (I took the shortcut of passing a single <code>int</code>, which NumPy will internally convert into an array of 1 <code>int32</code>), same random numbers generated.</p>
</div>
<span class="comment-copy">Why do you <i>want</i> to set the seed? Especially to a random number?</span>
<span class="comment-copy">You are assigning to <code>s</code> just once here, hence <code>s</code> will always be the same independently of setting seed a second time.</span>
<span class="comment-copy">you forgot to assign a second time <code>s = np.random.randn(10)</code>, however, the end result shall be the same.</span>
