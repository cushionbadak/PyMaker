<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/23116911/all-permutations-of-a-string-in-python-recursive">All Permutations of a String in Python (Recursive)</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>In my program, the user will enter the letters(max is 5), and program will generate all possible words from those letters. For example the user will enter "a b c". Words will be  "abc", "acb" , "bac", "bca", "cab" and "cba".</p>
<p>How can i do it? I cannot find an algorithm. Thanks for your help.</p>
<p>Thanks for everyone for helps. I am beginner. I've learned permutation function new :)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import itertools

In [146]: list(itertools.permutations('abc'))
Out[146]: 
[('a', 'b', 'c'),
 ('a', 'c', 'b'),
 ('b', 'a', 'c'),
 ('b', 'c', 'a'),
 ('c', 'a', 'b'),
 ('c', 'b', 'a')]

In [147]: [''.join(p) for p in itertools.permutations('abc')]
Out[147]: ['abc', 'acb', 'bac', 'bca', 'cab', 'cba']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; for word in itertools.permutations("abc"):
...   print word, ''.join(word)
...
('a', 'b', 'c') abc
('a', 'c', 'b') acb
('b', 'a', 'c') bac
('b', 'c', 'a') bca
('c', 'a', 'b') cab
('c', 'b', 'a') cba
</code></pre>
</div>
<span class="comment-copy">You want words, or sequences of characters?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/itertools.html#itertools.permutations" rel="nofollow noreferrer">docs.python.org/3/library/itertools.html#itertools.permutations</a> with one argument?</span>
<span class="comment-copy">Please show us what you've tried (or even examples of algorithms you've seen, but which didn't quite meet your needs) and explain why it didn't work.</span>
<span class="comment-copy">What you are asking for is called "permutation".</span>
