<div class="post-text" itemprop="text">
<p>I have two lists like</p>
<pre><code>num = [1,2,3,4]
names = ['shiva','naga','sharath','krishna','pavan','adi','mulagala']
</code></pre>
<p>I want to print the two lists parallel and if one list(num) ends i want to repeat the first list(num) till second(names) list ends.  </p>
<p>now i want the output as</p>
<pre><code>1 for shiva
2 for naga
3 for sarath
4 for krishna
1 for pavan
2 for adi
3 for mulagala
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle"><code>itertools.cycle</code></a> and <a href="https://docs.python.org/3/library/functions.html#zip"><code>zip</code></a>:</p>
<pre><code>&gt;&gt;&gt; num = [1,2,3,4]
&gt;&gt;&gt; names = ['shiva','naga','sharath','krishna','pavan','adi','mulagala']
&gt;&gt;&gt; import itertools
&gt;&gt;&gt; for i, name in zip(itertools.cycle(num), names):
...     print('{} for {}'.format(i, name))
...
1 for shiva
2 for naga
3 for sharath
4 for krishna
1 for pavan
2 for adi
3 for mulagala
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You'll want to use a combination of <a href="https://docs.python.org/2/library/itertools.html#itertools.cycle" rel="nofollow">itertools.cycle</a> and <a href="https://docs.python.org/2/library/itertools.html#itertools.izip" rel="nofollow">itertools.izip</a>. For example:</p>
<pre><code>&gt;&gt;&gt; num = [1,2,3,4]
&gt;&gt;&gt; names = ['shiva','naga','sharath','krishna','pavan','adi','mulagala']
&gt;&gt;&gt; import itertools
&gt;&gt;&gt; list(itertools.izip(itertools.cycle(num), names))
[(1, 'shiva'), (2, 'naga'), (3, 'sharath'), (4, 'krishna'), (1, 'pavan'), (2, 'adi'), (3, 'mulagala')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>list(roundrobin('ABC', 'D', 'EF'))</p>
<p><strong>output :</strong> ['A', 'D', 'E', 'B', 'F', 'C']</p>
<pre><code>from itertools import chain, izip_longest
def roundrobin(*iterables):
    sentinel = object()
    return (x for x in chain(*izip_longest(fillvalue=sentinel, *iterables)) if x is not sentinel)
</code></pre>
</div>
