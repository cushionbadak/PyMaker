<div class="post-text" itemprop="text">
<p>When doing:</p>
<pre><code>import types
ns = types.SimpleNamespace(alfa = 1, bravo = 2, charlie = 3)
print(dir(ns))
</code></pre>
<p>The resulting list contains all the class methods also, thus:</p>
<pre><code>['__class__', '__delattr__', ..., 'alfa', 'bravo', 'charlie']
</code></pre>
<p>How to get a list of only the user defined attributes, thus <code>['alfa', 'bravo', 'charlie']</code>, preferable without doing ridiculous text matching on the attribute names ?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Update:</strong></p>
<p>Actually, I just remembered you can do:</p>
<pre><code>&gt;&gt;&gt; import types
&gt;&gt;&gt; ns = types.SimpleNamespace(alfa = 1, bravo = 2, charlie = 3)
&gt;&gt;&gt; list(ns.__dict__)
['charlie', 'bravo', 'alfa']
&gt;&gt;&gt; sorted(ns.__dict__)
['alfa', 'bravo', 'charlie']
&gt;&gt;&gt;
</code></pre>
<p>which is a lot simpler.</p>
<hr/>
<p>Just use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> to filter the results:</p>
<pre><code>&gt;&gt;&gt; import types
&gt;&gt;&gt; ns = types.SimpleNamespace(alfa = 1, bravo = 2, charlie = 3)
&gt;&gt;&gt; [x for x in dir(ns) if not x.startswith('__')]
['alfa', 'bravo', 'charlie']
&gt;&gt;&gt;
</code></pre>
<p>Thankfully, all special methods/attributes begin and end with <code>__</code>, so they are easy to filter out.</p>
<p>If you want to allow names that only start with <code>__</code>, then you can make the <code>if</code> clause a little more robust:</p>
<pre><code>[x for x in dir(ns) if not (x.startswith('__') and x.endswith('__'))]
</code></pre>
</div>
<span class="comment-copy">Thanks, but is such text searching really required ?  Appears like the SimpleNamespace is harder to use than for example dict, which have e.g. keys to get the defined values.</span>
<span class="comment-copy">See my edit.  I just thought of something.</span>
<span class="comment-copy">Great, thanks for remembering... much nicer :-D</span>
