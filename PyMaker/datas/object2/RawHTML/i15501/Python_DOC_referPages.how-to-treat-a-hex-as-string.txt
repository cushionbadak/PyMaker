<div class="post-text" itemprop="text">
<p>I have some hex number such as <code>0x61cc1000</code> and I want to input them to a function which only takes string. I want to treat the hex numbers as strings without any change. </p>
<p>If I use <code>str()</code> function it converts it to <code>int</code> and <em>then</em> treats it as string. But I want to keep the original hex value.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is that you're using <code>str</code>:</p>
<pre><code>&gt;&gt;&gt; str(0x61cc1000)
'1640763392'  # int value of the hex number as a string
</code></pre>
<p>That's because first 0x61cc1000 is evaluated as an <code>int</code>, then <code>str</code> performed on the resulted <code>int</code>.</p>
<p>You want to do:</p>
<pre><code>"{0:x}".format(0x61cc1000)
</code></pre>
<p>Or</p>
<pre><code>'{:#x}'.format(0x61cc1000)
</code></pre>
<p>As already stated in other answer, you can simply:</p>
<pre><code>&gt;&gt;&gt; hex(0x61cc1000)
'0x61cc1000'
</code></pre>
<p>See <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow">6.1.3.1. Format Specification Mini-Language</a> for details.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want the hex string representation of any integer, just pass it through the <code>hex</code> built-in.</p>
<pre><code>&gt;&gt;&gt; n = 0x61cc1000
&gt;&gt;&gt; n
1640763392
&gt;&gt;&gt; hex(n)
'0x61cc1000'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to have 0x at the beginning you may use <code>#x</code> format like this:</p>
<pre><code>'{:#x}'.format(74954)
</code></pre>
</div>
<span class="comment-copy">Can we see some code? It's a little hard to understand exactly what you mean. Where are you getting these hex numbers from?</span>
<span class="comment-copy">A "hex number" doesn't exist. It's an int, represented in base-16 in your code.</span>
<span class="comment-copy">Worked Great. Thanks.</span>
<span class="comment-copy">@Bipario I'm glad it helped, see my update if you want to keep <code>0x</code>.</span>
<span class="comment-copy">This is the most straightforward answer we should be using</span>
<span class="comment-copy">This is great, only improvement is to use <code>format(74954, '#x')</code> which is recommended in this case</span>
<span class="comment-copy">Thanks a lot! I wasn't aware of this standalone function.</span>
