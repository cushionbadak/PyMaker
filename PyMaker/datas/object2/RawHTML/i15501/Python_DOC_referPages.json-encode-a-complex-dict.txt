<div class="post-text" itemprop="text">
<p>How would I json encode the following dict:</p>
<pre><code>data = {
    'name': 'david',
    'avatar': open('file.jpg').read()
}
</code></pre>
<p>When I try doing <code>json.dumps(data)</code> I get a <code>UnicodeDecodeError</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>So you try to encode a picture in json. If you want to display it on a web page, consider using a data-url-encoding:</p>
<pre><code>image = "data:image/jpg;base64,%s" % ''.join(open('file.jpg').read().encode('base64').split())
data = {
    'name': 'david',
    'avatar': image,
}
json_data = json.dumps(data)
</code></pre>
<p>or if you only need the binary data, simply use:</p>
<pre><code>image = open('file.jpg').read().encode('base64')
data = {
    'name': 'david',
    'avatar': image,
}
json_data = json.dumps(data)

#decode
data = json.loads(json_data)
image = data['avatar'].decode('base64')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You must be using Python 2.x.  Since you have Unicode data in the string, you need to make it a <a href="https://docs.python.org/2/reference/lexical_analysis.html#string-literals" rel="nofollow">Unicode string literal</a>:</p>
<pre><code>&gt;&gt;&gt; import json
&gt;&gt;&gt; data = {
...     'name': 'david',
...     'avatar': u'\xed\xb3\x1cW\x7f\x87\x1c\xb9*Pw\x9a#W\x05\xeaNs\xe4\xaa@\xddi\x8e\\\x15\xa8;\xcd\x91\xab\x02u\xa79rU\xa0\xee4\xf7K\xb9\x05{t\x02\xc6I\xb6\xaa\xbf\x00\x00\x00\x00IEND\xaeB`\x82...'
... }
&gt;&gt;&gt; json.dumps(data)
'{"name": "david", "avatar": "\\u00ed\\u00b3\\u001cW\\u007f\\u0087\\u001c\\u00b9*Pw\\u009a#W\\u0005\\u00eaNs\\u00e4\\u00aa@\\u00ddi\\u008e\\\\\\u0015\\u00a8;\\u00cd\\u0091\\u00ab\\u0002u\\u00a79rU\\u00a0\\u00ee4\\u00f7K\\u00b9\\u0005{t\\u0002\\u00c6I\\u00b6\\u00aa\\u00bf\\u0000\\u0000\\u0000\\u0000IEND\\u00aeB`\\u0082..."}'
&gt;&gt;&gt;
</code></pre>
<p>By placing <code>u</code> before the string literal, you tell Python to treat the string as Unicode.</p>
<p>Note that this is unnecessary in Python 3.x since <a href="https://docs.python.org/3/whatsnew/3.0.html#text-vs-data-instead-of-unicode-vs-8-bit" rel="nofollow">all strings are now Unicode by default</a>.</p>
</div>
<span class="comment-copy">Do <code>unicode(open('file.jpg').read())</code></span>
<span class="comment-copy">Cool, thanks for that. It works in terms of encoding. How would I then decode that data back into the exact file data, <code>open('file.jpg').read()</code>?</span>
<span class="comment-copy">This helped a lot, but instead of using <code>open</code> I used <code>StringIO</code>(I am fetching image from database)</span>
<span class="comment-copy">Could you please take a look at the updated question? I don't have that much control over the string (I don't think).</span>
<span class="comment-copy">It's in general a bad idea, to interpret binary data as unicode.</span>
<span class="comment-copy">@Daniel -- ok, then how would I pass the binary data as binary data in the json?</span>
