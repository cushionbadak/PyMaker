<div class="post-text" itemprop="text">
<p>i have the below python code, no data is received and the program quits without running the except clause with print and return statements</p>
<p>any ideas on what is happening?</p>
<pre><code>sock.settimeout(10)
try:
    pkt = sock.recv(255)
except socket.error:
    print "connection timed out!"
    return
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that a <a href="https://docs.python.org/2/library/socket.html#socket.timeout" rel="nofollow"><code>socket.timeout</code></a> exception is a completely different exception from a <a href="https://docs.python.org/2/library/socket.html#socket.error" rel="nofollow"><code>socket.error</code></a>. So, <code>except socket.error:</code> doesn't catch a <code>socket.timeout</code> for the same reason <code>except ValueError:</code> doesn't catch a <code>KeyError</code>.</p>
<p>(The documentation for this isn't exactly obvious in 2.x. This is one of the many things that was cleaned up in Python 3.3/PEP 3151—see <a href="https://docs.python.org/3/library/socket.html#notes-on-socket-timeouts" rel="nofollow">the nice new docs</a>—but as long as you're sticking with 2.x you don't benefit from that.)</p>
<p>The right solution is to handle the right error:</p>
<pre><code>sock.settimeout(10)
try:
    pkt = sock.recv(255)
except socket.timeout:
    print "connection timed out!"
    return
</code></pre>
<p>If you also want to handle socket errors (like, say, a failure from the <code>recv</code> call) the same way:</p>
<pre><code>sock.settimeout(10)
try:
    pkt = sock.recv(255)
except (socket.timeout, socket.error) as e:
    print "connection timed out or erred out: {}!".format(e)
    return
</code></pre>
<p>Notice I also added in the <code>as e</code> and added it to the output. That way, if something unexpected goes wrong, you'll know <em>what</em> went wrong, instead of having to guess.</p>
<p>Of course, you may want to handle the two errors differently, as well:</p>
<pre><code>sock.settimeout(10)
try:
    pkt = sock.recv(255)
except socket.timeout:
    print "connection timed out!"
    return
except socket.error as e:
    print "connection erred out: {}!".format(e)
    return
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>sock.settimeout(10)
try:
    pkt = sock.recv(255)
except:
    print "connection timed out!"
    return
</code></pre>
<p>I just changed the except line</p>
</div>
<span class="comment-copy">Maybe it succeeds, so the <code>except:</code> clause never triggers? (If you want us to debug this further, you're going to need to provide a <a href="http://stackoverflow.com/help/mcve">minimal, complete, verifiable example</a>—or, failing that, at least a lot more information and a bit of debugging info, like what happens if you <code>print pkt</code> right after the <code>pkt =</code>, etc.)</span>
<span class="comment-copy">sorry, I have been working on this for so long just assumed incorrectly that everyone is on board. This snippet is part of a code that scans bluetooth signal. All works fine when signal exists., but hangs on the sock.recv(255) if no signal avail. So I did the above code to timeout after 10seconds if no signal avail. but instead of going to the except clause, it simply quits with error code of timeout.</span>
<span class="comment-copy">abarnert,  i understand what you are saying.  But I tried both socket.timeout and socket.error and both did not catch the error and simply booted me out of the program with -----   File "/home/pi/ming-blue/blescan.py", line 144, in parse_events     pkt = sock.recv(255) _bluetooth.timeout: timed out ____   fyi, i am on python 2.7.3 on the raspberry pi so I am not sure if this is the cause</span>
<span class="comment-copy">It's telling you right there in there error message what type the exception is: _bluetooth.timeout (which I'm guessing is also available as bluetooth.timeout, but is not the same as socket.timeout). You have to catch the right exception, which is almost always documented in the docs and listed in the error message, not just try to guess at it.</span>
<span class="comment-copy">@user1117057: Also, this is exactly why the help asks you to give a complete example, and to include the error message in your question. I assumed sock was a socket.socket object, and that your exception was therefore a socket.timeout. Read your question--is there anything there to even imply that assumption might be wrong?</span>
<span class="comment-copy">That's a <i>terrible</i> idea in general. Now you're ignoring any kind of error, not just the one you're trying to ignore.</span>
