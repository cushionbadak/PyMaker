<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/23294658/asking-the-user-for-input-until-they-give-a-valid-response">Asking the user for input until they give a valid response</a>
<span class="question-originals-answer-count">
                    17 answers
                </span>
</li>
</ul>
</div>
<p>Hi all I am pretty new to python coding but have recently stumbled upon a problem, when asking people for names the program will allow numbers, is there a simple way to fix this.</p>
<p>My code is something like this:</p>
<pre><code>print("what is your name?")

name=input()

print("thank you",name,".")
</code></pre>
<p>I am not entirely sure that is the exact code but it does those three things. Thank you and sorry it is a bit basic. Also I am using 3.3.2 I think.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#str.isalpha" rel="nofollow"><code>str.isalpha</code></a> to test if a string is all alphabetic characters (letters):</p>
<pre><code>&gt;&gt;&gt; 'abcde'.isalpha()
True
&gt;&gt;&gt; 'abcde1'.isalpha()
False
&gt;&gt;&gt;
</code></pre>
<hr/>
<p>If you have a specific character set to test for, you can use <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow"><code>all</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="nofollow">generator expression</a>:</p>
<pre><code>chars = set('abcde')  # Put the characters you want to test for in here
all(c in chars for c in name)
</code></pre>
<p>Also, I used a set instead of a regular string of characters to improve efficiency.  Sets have <code>O(1)</code> (constant) complexity with <code>in</code> where as strings have <code>O(n)</code> (linear) complexity.  In other words, it is faster to find things in a set than in a string.</p>
<hr/>
<p>Lastly, you can use <a href="https://docs.python.org/3/library/string.html#string.ascii_letters" rel="nofollow"><code>string.ascii_letters</code></a> instead of typing out the whole alphabet:</p>
<pre><code>&gt;&gt;&gt; from string import ascii_letters
&gt;&gt;&gt; ascii_letters
'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
&gt;&gt;&gt;
</code></pre>
<p>This becomes especially useful if you want to test for all the letters of the alphabet plus another character or so (such as a hyphen):</p>
<pre><code>chars = set(ascii_letters + '-')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are a couple of ways to address this. One would be to do something like</p>
<pre><code>if name.isalpha():
  # it's alphabetic
else:
  # it's not - prompt for new input
</code></pre>
<p>But this will reject some names that you might like, such as "John Smith" or "Kate O'Conner". </p>
<p>A more careful approach would be something like</p>
<pre><code>if any(map (lambda c: c.isdigit(), name)):
  # there's a digit in there, reject it
else:
  # it's got no digits, but maybe it still has punctuation that you don't want?
  # do further checks as needed
</code></pre>
<p>You can also build a whitelist:</p>
<pre><code>import string
allowed_chars = string.ascii_letters+"'"+ "-" + " "  
   # allow letters, single-quote, hyphen and space
if all([c in allowed_chars for c in name]):
  # passes the whitelist, allow it
</code></pre>
</div>
<span class="comment-copy">check the type of input</span>
<span class="comment-copy">define <code>text</code>. is it only <code>no numbers</code>, or is there more to it?</span>
<span class="comment-copy">The second would probably be better since isalpha will not work for hyphens</span>
<span class="comment-copy">Good point.  I've edited my answer to handle hyphens.</span>
<span class="comment-copy">@iCodez : Except that since the string has a fixed and known size, the actual search complexity is O(1) with regard to the <code>name</code> string.</span>
<span class="comment-copy">if the OP just wants to just check for numbers <code>if not any(x.isdigit() for x in s)</code> and allow all other characters</span>
<span class="comment-copy">@iCodez No, I don't think you will, considering the case we're describing. The slowest element in this equation is the user, and there's not a lot of ways you can make time an issue.</span>
