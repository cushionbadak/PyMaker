<div class="post-text" itemprop="text">
<p>I'm working with an api which returns some data in the form of <code>01234⇒56789</code>. Sometimes this data has only numbers which is not a problem but sometimes it returns <code>⇒</code> character. As I have to automate the filtering process of selecting the number after the arrow (non-ascii character) I have to know when the characters contains a non-ascii character. </p>
<p>I used <code>decode(utf-8)</code> and it returns <code>u'01234\u21d256789'</code> . I tried <code>split('\u21d2')</code> but the string is not splitting. Any help is appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>python3:</p>
<pre><code>&gt;&gt;&gt; s = "01234⇒56789"
&gt;&gt;&gt; s
'01234⇒56789'
&gt;&gt;&gt; s.split("⇒")
['01234', '56789']
</code></pre>
<p>python2:</p>
<pre><code>&gt;&gt;&gt; s = u"01234⇒56789"
&gt;&gt;&gt; s.split(u"⇒")
[u'01234', u'56789']
</code></pre>
<p>the key point in Python2 is to specify that you deal with an unicode string. In Python3 strings are unicode by default and there's <a href="https://docs.python.org/3/reference/lexical_analysis.html#strings" rel="nofollow">bytes</a> type</p>
</div>
<span class="comment-copy">Nice and concise answer. Only one minor point: if you don't specify the encoding at the top of your program, <code>s=u'01234⇒56789'</code> will give an 'Unsupported characters in input' error. Therefore, I would use <code>s.split(u'\u21d2')</code>instead.</span>
<span class="comment-copy">Well, I'm using UTF-8 encoding in console by default, so it's not a problem for me and works as specified. But surely one might need the specify input encoding or use backslash-u coding explicitly.</span>
