<div class="post-text" itemprop="text">
<p>I'm trying do the follow sentence:</p>
<pre><code>¬ = lambda x: not x
</code></pre>
<p>but I'm getting the follow error:</p>
<pre><code>  File "&lt;stdin&gt;", line 1
    ¬ = lambda x: not x
    ^
SyntaxError: invalid character in identifier
</code></pre>
<p>Ok, I know that is an invalid sentence in Python, but I'm looking for a solution that allows me to use this syntax.</p>
<p>My target is create a script to run Propositional Logic Easily, and if I can do it, I'm be able to do some things with sugar syntax like as below:</p>
<pre><code>¬ False
&gt;&gt;&gt;True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Short of rewriting the parser (which isn't a good idea), this is impossible in Python.  Variable names may only contain letters, digits, and/or underscores.  Additionally, the first character must be either a letter or an underscore.  Also, a variable name cannot be the same as a keyword such as <code>if</code> or <code>class</code>. </p>
<p>Other than that, there can be no other characters in the name.  You likewise cannot make your own keywords or operator symbols (although you can overload most of the existing operators on a custom class to do whatever you want.  Here is a reference: <a href="https://stackoverflow.com/questions/1936135/operator-overloading-in-python">operator overloading in python</a>).</p>
<p>For more information, here is a link to <a href="https://docs.python.org/3/reference/grammar.html" rel="nofollow noreferrer">Python's grammar specification</a> and one which defines <a href="https://docs.python.org/3/reference/lexical_analysis.html#identifiers" rel="nofollow noreferrer">identifiers and keywords</a> in Python.</p>
<p>Also, just for the record, you could use <a href="https://docs.python.org/3/library/operator.html#operator.not_" rel="nofollow noreferrer"><code>operator.not_</code></a> instead of making your own function to invert booleans.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks a lot for the help, the @iCodez has answered perfectly to python context, but in true I am opened to use others languages who can do it, and I found it on Ruby, below the ruby code that runs what I want:</p>
<pre><code>#!/usr/local/bin/ruby
# coding: utf-8

σ = 9
def √(x)
    x**0.5
end
def ¬(x)
    not x
end

puts σ
puts √ σ
puts ¬ false
</code></pre>
<p>and the output:</p>
<pre><code>9
3.0
true
</code></pre>
<p>thanks again for help! And thanks too to the <a href="https://softwareengineering.stackexchange.com/questions/264761/language-with-no-ascii-variables-name-restriction">programmers thread</a> that help-me to find other languages.</p>
</div>
<span class="comment-copy">Short answer: you can't. Long answer: Not in a portable way, edit the Python grammar and recompile, but don't expect your script to run anywhere else.</span>
<span class="comment-copy">Why are you trying to re-purpose Python to make a different language anyway? Why not just <i>parse the input</i> and then execute the result? You could use <a href="http://docs.sympy.org/latest/modules/logic.html" rel="nofollow noreferrer">sympy's propositional logic support</a> for the execution.</span>
<span class="comment-copy">I'm just studying @MartijnPieters , I do not want make another language or anything about it, Python is a powerful language and have a lot of good libraries and modules, like logic module that you have showed. If it have no way, Ok I understand, sorry for ask.</span>
<span class="comment-copy">Thanks for answer, but you said "Variable names may only contain letters", Have no ways of put more characters like the exampled "¬" in the letters alphabet? After all an A and an ¬ are just a character.</span>
<span class="comment-copy">@ademar111190: yes, by <i>changing the parser</i>. Or by changing the Unicode standard as codified by Python.</span>
