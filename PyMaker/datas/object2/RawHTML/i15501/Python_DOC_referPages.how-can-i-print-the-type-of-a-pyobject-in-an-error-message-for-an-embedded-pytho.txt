<div class="post-text" itemprop="text">
<p>My C++ code has this check in it:</p>
<pre><code>if (1 != PyString_Check( key ))
</code></pre>
<p>and I'd like to get a "char*" of the type that it actually is in order to provide a more useful error message. Using the C API for Python, how would I do this?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>PyTypeObject* type = key-&gt;ob_type;
const char* p = type-&gt;tp_name;
std::cout &lt;&lt; "My type is " &lt;&lt; p &lt;&lt; std::endl;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As of Python 2.6, there is <a href="https://docs.python.org/3/c-api/structures.html#c.Py_TYPE" rel="nofollow noreferrer">a macro, <code>Py_TYPE</code></a>, which should be used to access the type object of a <code>PythonObject</code>. You can then fetch the <a href="https://docs.python.org/3/c-api/typeobj.html#c.PyTypeObject.tp_name" rel="nofollow noreferrer"><code>tp_name</code> field</a> which contains the fully-qualified name of the type. This means that the type of an object <code>obj</code> can be fetched as a C-string with:</p>
<pre class="lang-cpp prettyprint-override"><code>const char* p = Py_TYPE(obj)-&gt;tp_name;
</code></pre>
</div>
