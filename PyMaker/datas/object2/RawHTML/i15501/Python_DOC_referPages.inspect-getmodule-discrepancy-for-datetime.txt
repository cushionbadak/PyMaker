<div class="post-text" itemprop="text">
<p>For classes defined in python code, inspect.getmodule works for both objects and types</p>
<pre><code>&gt;&gt;&gt; import calendar
&gt;&gt;&gt; c = calendar.Calendar()
&gt;&gt;&gt; print inspect.getmodule(c)
&lt;module 'calendar' from '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.pyc'&gt;
&gt;&gt;&gt; print inspect.getmodule(type(c))
&lt;module 'calendar' from '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/calendar.pyc'&gt;
</code></pre>
<p>But in case of datetime, it doesn't work for objects:</p>
<pre><code>&gt;&gt;&gt; import datetime
&gt;&gt;&gt; d = datetime.datetime.now()
&gt;&gt;&gt; print inspect.getmodule(d)
None
&gt;&gt;&gt; print inspect.getmodule(type(d))
&lt;module 'datetime' from '/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/datetime.so'&gt;
</code></pre>
<p>Why this discrepancy?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>calendar</code> module is pure python, whereas the <code>datetime</code> module is an extension.</p>
<p>According to the docs, <a href="https://docs.python.org/3/library/inspect.html#retrieving-source-code" rel="nofollow"><code>inspect.getmodule()</code></a> is intended for retrieving information about source code, so it's obviously limited in what it can do with objects created by extension modules.</p>
</div>
<span class="comment-copy">Calendar() creates an object and now() just returns the time?</span>
<span class="comment-copy">I don't understand what you mean by that:        <code>&gt;&gt;&gt; d = datetime.datetime.now()       &gt;&gt;&gt; repr(d)       'datetime.datetime(2014, 12, 3, 19, 8, 48, 279667)'       &gt;&gt;&gt; print type(d)       &lt;type 'datetime.datetime'&gt;</code></span>
<span class="comment-copy">the only difference i can see is that datetime is compiled into a dynamic .so lib and calendar is kept as .pyc</span>
