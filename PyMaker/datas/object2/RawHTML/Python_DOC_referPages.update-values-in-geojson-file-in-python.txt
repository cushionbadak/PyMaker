<div class="post-text" itemprop="text">
<p>I have geojson file as follows:</p>
<pre><code>{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "type": "LineString",
        "coordinates": [
          [
            57.45849609375,
            57.36801461845934
          ],
          [
            57.10693359375,
            56.31044317134597
          ],
          [
            59.205322265625,
            56.20059291588374
          ],
          [
            59.4140625,
            57.29091812634045
          ],
          [
            57.55737304687501,
            57.36801461845934
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "type": "LineString",
        "coordinates": [
          [
            59.40307617187499,
            57.29685437021898
          ],
          [
            60.8203125,
            57.314657355733274
          ],
          [
            60.74340820312499,
            56.26776108757582
          ],
          [
            59.227294921875,
            56.21281407174654
          ],
          [
            59.447021484375,
            57.29091812634045
          ]
        ]
      }
    }
  ]
}
</code></pre>
<p>I want to replace <code>LineString</code> in <code>"type": "LineString"</code> with <code>Polygon</code>, and also, replace coordinates last point of each <code>linestring</code> by coordinates of first point to make it close if it has more than 3 points. </p>
<p>How can I do it in Python with geopandas or pandas? Thanks.</p>
<p>Here is expected output:</p>
<pre><code>{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            57.45849609375,
            57.36801461845934
          ],
          [
            57.10693359375,
            56.31044317134597
          ],
          [
            59.205322265625,
            56.20059291588374
          ],
          [
            59.4140625,
            57.29091812634045
          ],
          [
            57.45849609375,
            57.36801461845934
          ]
        ]
      }
    },
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "type": "Polygon",
        "coordinates": [
          [
            59.40307617187499,
            57.29685437021898
          ],
          [
            60.8203125,
            57.314657355733274
          ],
          [
            60.74340820312499,
            56.26776108757582
          ],
          [
            59.227294921875,
            56.21281407174654
          ],
          [
            59.40307617187499,
            57.29685437021898
          ]
        ]
      }
    }
  ]
} 
</code></pre>
<p>Script to get <code>type</code> and <code>coordinates</code> of first <code>LineString</code>:</p>
<pre><code>import json
from pprint import pprint

with open('data.geojson') as f:
    data = json.load(f)

pprint(data)

data["features"][0]["geometry"]['type']
data["features"][0]["geometry"]['coordinates']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can achieve that with the <code>json</code> module:</p>
<pre><code>file_line = 'file.json'
file_poly = 'file_poly.json'

import json
with open(file_line, 'r') as f:
    data = json.load(f)

for feature in data['features']:
    if (feature['geometry']['type'] == 'LineString') &amp; (len(feature['geometry']['coordinates']) &gt;= 3):
        feature['geometry']['type'] = 'Polygon'
        feature['geometry']['coordinates'].append(feature['geometry']['coordinates'][0])

with open(file_poly, 'w+') as f:
    json.dump(data, f, indent=2)

</code></pre>
</div>
<span class="comment-copy">This can be done using json module in python. please refer <a href="https://stackoverflow.com/questions/21035762/python-read-json-file-and-modify">this</a></span>
<span class="comment-copy">what have you tried so far? Take a look at how to read and parse jsons into python dictionaries (using json module), and work with those.</span>
<span class="comment-copy">Thanks for your comment. I'll try and update my question.</span>
