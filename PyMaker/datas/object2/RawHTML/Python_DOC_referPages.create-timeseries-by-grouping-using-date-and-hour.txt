<div class="post-text" itemprop="text">
<p>I am using this data frame:</p>
<pre><code>Fruit   Date      Name  Number
Apples  10/6/2016 Bob    7
Apples  10/6/2016 Bob    8
Apples  10/6/2016 Mike   9
Apples  10/7/2016 Steve 10
Apples  10/7/2016 Bob    1
Oranges 10/7/2016 Bob    2
Oranges 10/6/2016 Tom   15
Oranges 10/6/2016 Mike  57
Oranges 10/6/2016 Bob   65
Oranges 10/7/2016 Tony   1
Grapes  10/7/2016 Bob    1
Grapes  10/7/2016 Tom   87
Grapes  10/7/2016 Bob   22
Grapes  10/7/2016 Bob   12
Grapes  10/7/2016 Tony  15
</code></pre>
<p>I want to aggregate this by name and then by fruit to get a total number of fruit per name.</p>
<pre><code>Bob,Apples,16 ( for example )
</code></pre>
<p>I tried grouping by Name and Fruit but how do I get the total number of fruit.</p>
</div>
<div class="post-text" itemprop="text">
<p>use the sum() method</p>
<pre><code>df.groupby(['Fruit','Name']).sum()

Out[31]: 
               Number
Fruit   Name         
Apples  Bob        16
        Mike        9
        Steve      10
Grapes  Bob        35
        Tom        87
        Tony       15
Oranges Bob        67
        Mike       57
        Tom        15
        Tony        1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Also you can use agg function,</p>
<pre><code>df.groupby(['Name', 'Fruit'])['Number'].agg('sum')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to keep the original columns <code>Fruit</code> and <code>Name</code>, use <code>reset_index()</code>. Otherwise <code>Fruit</code> and <code>Name</code> will become part of the index. </p>
<pre><code>df.groupby(['Fruit','Name'])['Number'].sum().reset_index()

Fruit   Name       Number
Apples  Bob        16
Apples  Mike        9
Apples  Steve      10
Grapes  Bob        35
Grapes  Tom        87
Grapes  Tony       15
Oranges Bob        67
Oranges Mike       57
Oranges Tom        15
Oranges Tony        1
</code></pre>
<p>As seen in the other answers:</p>
<pre><code>df.groupby(['Fruit','Name'])['Number'].sum()

               Number
Fruit   Name         
Apples  Bob        16
        Mike        9
        Steve      10
Grapes  Bob        35
        Tom        87
        Tony       15
Oranges Bob        67
        Mike       57
        Tom        15
        Tony        1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Both the other answers accomplish what you want.  </p>
<p>You can use the <code>pivot</code> functionality to arrange the data in a nice table</p>
<pre><code>df.groupby(['Fruit','Name'],as_index = False).sum().pivot('Fruit','Name').fillna(0)



Name    Bob     Mike    Steve   Tom    Tony
Fruit                   
Apples  16.0    9.0     10.0    0.0     0.0
Grapes  35.0    0.0     0.0     87.0    15.0
Oranges 67.0    57.0    0.0     15.0    1.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>df.groupby(['Fruit','Name'])['Number'].sum()
</code></pre>
<p>You can select different columns to sum numbers. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>groupby</code> and <code>sum</code>:</p>
<pre><code>df.groupby(['Name', 'Fruit']).sum()

               Number
Name  Fruit          
Bob   Apples       16
      Grapes       35
      Oranges      67
Mike  Apples        9
      Oranges      57
Steve Apples       10
Tom   Grapes       87
      Oranges      15
Tony  Grapes       15
      Oranges       1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This answer only to understand how groupby and sum works.</p>
<p>I am using data-set "Rainfall in India since 1900 to 2015" </p>
<p>My Dataset includes columns like "subdivision" and "annual".</p>
<p>So, here i would like to calculate sum of annual rainfall for each subdivision.</p>
<pre><code>Total = Data.groupby('SUBDIVISION')['ANNUAL'].sum()
print (Total)
</code></pre>
<p>this is how subdivision will get grouped and we will get sum of annual rainfall per subdivision.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can set the <code>groupby</code> column to  <code>index</code>  then using <code>sum</code> with <code>level</code> </p>
<pre><code>df.set_index(['Fruit','Name']).sum(level=[0,1])
Out[175]: 
               Number
Fruit   Name         
Apples  Bob        16
        Mike        9
        Steve      10
Oranges Bob        67
        Tom        15
        Mike       57
        Tony        1
Grapes  Bob        35
        Tom        87
        Tony       15
</code></pre>
</div>
<span class="comment-copy">How can pandas knows that I want to sum the col named <code>Number</code> ?</span>
<span class="comment-copy">@Kingname it's the last column left if you take out NAME and FRUIT.  if you add 2 columns left, it would sum both columns</span>
<span class="comment-copy">@StevenG the <code>Date</code> column is also left...</span>
<span class="comment-copy">I find this solution a little hackish compared to the others</span>
<span class="comment-copy"><code>Date</code> is not summed because it has <code>dtype = string</code> yes?</span>
<span class="comment-copy">This should be the accepted answer, it is more explicit.</span>
