<div class="post-text" itemprop="text">
<p>I am looping over a list which produces lists that contain two items, for example;</p>
<pre><code>['string1', '1234567']
['string1', '1234576']
['string1', '1234765']
['string2', '7654321']
['string2', '7654123']
</code></pre>
<p>The first item in the list can be repetitive, the second item in the list is always unique. I want to restructure the list so the following output is produced. I want to have the first items in the list to be unique with the corresponding second items. The desired output;</p>
<pre><code>['string1', ['1234567', '1234576','1234765']]
['string2', ['7654321','7654123']]
</code></pre>
<p>Is it useful to generate a new list of the second items in the list, then create a new list to get the unique strings from the first items? Then compare the two lists and map them in some way...I really have no idea. I don't know if there is some kind of Python functionality for this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since the data is sorted, you can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>from itertools import groupby

l = [['string1', '1234567'],
     ['string1', '1234576'],
     ['string1', '1234765'],
     ['string2', '7654321'],
     ['string2', '7654123']]

l2 = [[k, [x[1] for x in g]] for k, g in groupby(l, key=lambda x: x[0])]
# [['string1', ['1234567', '1234576', '1234765']],
#  ['string2', ['7654321', '7654123']]]
</code></pre>
<p>If the data weren't sorted, you could use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a> to collect all the second elements for each first. This is essentially the same approach that <a href="https://stackoverflow.com/users/152349/mshsayem">mshsayem</a> chose in his answer where he uses a vanilla <code>dict</code> and <code>setdefault</code>:</p>
<pre><code>from collections import defaultdict

d = defaultdict(list)
for x, y in l:
    d[x].append(y)
l2 = d.items()
# [('string2', ['7654321', '7654123']), 
#  ('string1', ['1234567', '1234576', '1234765'])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a way:</p>
<pre><code>&gt;&gt;&gt; l = [['string1', '1234567']
,['string1', '1234576']
,['string1', '1234765']
,['string2', '7654321']
,['string2', '7654123']]
&gt;&gt;&gt; result = {}
&gt;&gt;&gt; for li in l:
        result.setdefault(li[0],[]).append(li[1])


&gt;&gt;&gt; result
{'string2': ['7654321', '7654123'], 'string1': ['1234567', '1234576', '1234765']}
</code></pre>
<p>If you want list of list (as your question) you can do this:</p>
<pre><code>&gt;&gt;&gt; map(list,result.items())
[['string2', ['7654321', '7654123']], ['string1', ['1234567', '1234576', '1234765']]]
</code></pre>
</div>
<span class="comment-copy">Is the data sorted by the first element?</span>
<span class="comment-copy">yes, the data is sorted by the first element.</span>
<span class="comment-copy">Any problem if it is a dict?</span>
<span class="comment-copy">A dictionary would not cause a problem.</span>
<span class="comment-copy">That's a really nice solution</span>
<span class="comment-copy">You have missed a brace after <code>for x in g</code></span>
<span class="comment-copy">@GarbageCollector Well spotted, corrected..</span>
<span class="comment-copy">Perfectly fine and generic solution using only built-in Python tools.</span>
