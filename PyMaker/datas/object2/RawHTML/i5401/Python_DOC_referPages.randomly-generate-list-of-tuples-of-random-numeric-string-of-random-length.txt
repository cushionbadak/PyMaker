<div class="post-text" itemprop="text">
<p>For simulation purposes, I would like to generate a list of string pairs. Each string pair consists of two strings. Each string consists of numerical digits generated randomly. The length of string is of random number as well. How to achieve this function using <code>Numpy</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is an infinite generator. You can either take a slice of it (shown in the last line), or iterate over it directly:</p>
<pre><code>import itertools
import random

def one_string():
    l = random.randint(1, 5)
    return "".join(random.choice("0123456789") for _ in range(l))

def string_pairs():
    while True:
        yield one_string(), one_string()


print(list(itertools.islice(string_pairs(), 10)))
</code></pre>
<p>produces:</p>
<pre><code>[('840', '452'), ('20', '4651'), ('784', '589'), ('1', '08211'), ('809', '2103'), ('48975', '46884'), ('307', '83913'), ('88512', '212'), ('57', '11772'), ('38', '14')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need <code>numpy</code> to get such simple result. All you need is the <em>list comprehension</em> with <a href="https://docs.python.org/3/library/random.html#random.randint" rel="nofollow noreferrer"><strong><code>random.randint</code></strong></a> as:</p>
<pre><code>&gt;&gt;&gt; from random import randint

&gt;&gt;&gt; [(str(randint(0, 99999)), str(randint(0, 99999))) for _ in range(10)]
</code></pre>
<p>Above solution will return 10 pairs of random number strings, with maximum length of each string to be 5 digit. <code>random.randint</code> here will generate random number between <code>0</code> to <code>99999</code>, and since the selection is random, the number of digits will be random too. Then simply type-cast them to string to get your desired result.</p>
<p>Sample result:</p>
<pre><code>[('8655', '9023'), ('7398', '7465'), ('8595', '4994'), ('8532', '9251'), ('196', '5911'), ('4219', '6240'), ('7628', '8162'), ('256', '9675'), ('4466', '4814'), ('6459', '3798')]
</code></pre>
</div>
<span class="comment-copy">Why numpy? That's for array and matrix manipulation, which this problem is not.</span>
<span class="comment-copy">What have you tried so far?  Please post your code</span>
<span class="comment-copy">+1 I'm not exactly sure why the OP wanted to do this with <code>numpy</code>. OP, there are fine solutions using pure Python, such as this one.</span>
<span class="comment-copy">Why not use <b>string.digits</b> from the string module, rather than typing the whole sequence?</span>
<span class="comment-copy">Because I can see more easily what it's doing if I type it out, and "0123456789" is two characters shorter than strings.digits.  Do we think the set of digits is going to change in a future version of Python?</span>
