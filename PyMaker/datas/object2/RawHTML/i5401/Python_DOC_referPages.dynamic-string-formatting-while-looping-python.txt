<div class="post-text" itemprop="text">
<p>I have been looking for a graceful way to dynamically format strings (URLs) in <strong>Python</strong> while looping... This is for when I want to request using different query parameters for each.</p>
<p>For example, this is what I've been resorting to at the moment (assuming I have 3 URLs):</p>
<pre><code>for i in range(3):
    for num in range(0, 496, 5):
        if i == 1:
            requests.get('https://my-website.com?pricefrom={}&amp;priceto={}'.format(num, num + 5))

        if i == 2:
            requests.get('https://my-website.com?qtyfrom={}&amp;qtyto={}'.format(num, num + 5))

        # ......... :(
</code></pre>
<p>This is just ugly and I don't want to imagine what I'd do in the scenario where I have more links to request to.</p>
<p>Isn't there a solution simpler/more graceful like this for example:</p>
<pre><code>urls = [&lt;url1&gt;, &lt;url2&gt;,....&lt;url50&gt;] # maybe each url has placeholders

for url in urls:
    # do some magic
</code></pre>
<p>Any help would be highly appreciated</p>
</div>
<div class="post-text" itemprop="text">
<p>You can store strings with format in list as you said:</p>
<pre><code>import requests

urls = ['https://example.com?from={fr}&amp;to={to}',
        'https://example1.com?from={fr}&amp;to={to}',
        'https://example2.com?from={fr}&amp;to={to}'
]
for url in urls:
    for num in range(0, 496, 5):
        requests.get(url.format(fr=num, to=num + 5))
</code></pre>
<p>Also in python 3.6 you can use <a href="https://docs.python.org/3/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">f-strings</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks to help from @luminousmen and the rest of you guys... I found a solution. Apparently you CAN just add placeholders and not do any operations on them :'D :</p>
<pre><code>urls = ['https://example.com?from={}&amp;to={}', 
        'https://example1.com?from={}&amp;to={}',
        'https://example2.com?from={}&amp;to={}']

for url in urls:
    for num in range(0, 496, 5):
        requests.get(url.format(num, num + 5))
</code></pre>
</div>
<span class="comment-copy">you said different query params for each, can you post at least another variation of the url? thanks.</span>
<span class="comment-copy">Why do you want to format strings when <code>requests.get()</code> let you pass the arguments as a dictionnary ? <a href="http://docs.python-requests.org/en/master/user/quickstart/#passing-parameters-in-urls" rel="nofollow noreferrer">docs.python-requests.org/en/master/user/quickstart/â€¦</a></span>
<span class="comment-copy">Nice catch @brunodesthuilliers, but the thing is: a) I'm not always working with requests(I used it here for simplicity) b) Some of the urls have a lot more query params and I may need to change different parts of those which is why I prefer the string-formatting approach</span>
<span class="comment-copy">@LexBryan Done .. Note: Slightly changed the first url as well</span>
<span class="comment-copy">Hey @luminousmen I tried this (even after adding the nested loop you forgot) but it wasn't working. Syntax error in the assignment of <code>from</code> and <code>to</code> in the format... Luckily, with a little tinkering, i found the solution... Thanks a million though..</span>
<span class="comment-copy">Sorry @EbJ, wrote on a phone) Fix implementation</span>
