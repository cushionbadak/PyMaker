<div class="post-text" itemprop="text">
<p>I am trying to create a password generator that consist of 3 parts. I am able to generate a randomized string (tYVb for example) however when I try to store it as a variable 'mod' and attempt to print it, the value had 'None' attached to the end of it (tYVbNone). How do I ONLY store the string to my variable so I can further manipulate it? </p>
<pre><code>from random import *

number = 4;

def myFunc(length):
    while length &gt; 0:
        rndNumber = randint(0, 51)

    print('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'[rndNumber], end='')
        length -= 1

mod = str(myFunc(number))
print (mod)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the cleanest way to write the code you are looking for would be to do something like this:</p>
<pre><code>import random
letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'

def myFunc(length):
    return ''.join([random.choice(letters) for x in range(0,length)])
</code></pre>
<p>then you can call the function like so:</p>
<pre><code>x = myFunc(10)
print(x)
</code></pre>
<p>producing an output that looks like: <code>zWAGjUyhEZ</code></p>
</div>
<div class="post-text" itemprop="text">
<p>This is how I would do it (based on what you have provided so far):</p>
<pre><code>from random import *

number = 4;

def myFunc(length):
    value = ''
    while length &gt; 0:
        rndNumber = randint(0, 51)
        value += 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'[rndNumber]
        length -= 1
    return value

mod = myFunc(number)
print (mod)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are several errors OR omissions in the code as presented. I offer some comments in the code below to highlight potential improvements to the code OR to highlight some additions.</p>
<pre><code>from random import *

# you don't need a semi-colon after the 4
number = 4

def myFunc(length):

    # Since we are building a password, we want to start with an empty 
    #     password before the while loop.
    password = ''
    while length &gt; 0:
        rndNumber = randint(0, 51)

        # This step builds a new password incrementally. As you go
        #     through the while loop, it adds a new character to the
        #     end of the password variable.
        password += 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'[rndNumber]

        length -= 1
    return password

# you don't need to convert the output to a string using the code above
#     since the process builds a string.    
mod = myFunc(number)
print(mod)
</code></pre>
<p>As mentioned by Charles Duffy, random.choice() is a better solution and makes the code more Pythonic:</p>
<h2><code>random.choice()</code></h2>
<p>This function randomly picks from a sequence of items (and under the hood, strings are considered sequences).</p>
<p>This snippet could be inserted in the above code to help clean it up.</p>
<pre><code>letters = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
letter = random.choice(letters)
password += letter
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your function doesn't return anything and putting a number into it serves no purpose unless one of the variables is global. I'm not sure if you can print on the same line as you define something. Running the code doesn't seem to return anything. Try adding a return statement.</p>
</div>
<span class="comment-copy">Your function doesn't return anything.  <a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">Defining Functions</a></span>
<span class="comment-copy">I get the same output as OP. Four letters and the word none.</span>
<span class="comment-copy">@jmh Any idea why the original code tacked on 'None' at the end?</span>
<span class="comment-copy">@BCarey - No idea why!  Strange though...</span>
<span class="comment-copy">By far the cleanest fix to my problem. I was able to finish my password generator, thank you!</span>
<span class="comment-copy">BTW, in practice, I'd consider <code>random.choice()</code> instead of all this messing with <code>randint()</code> in the first place.</span>
<span class="comment-copy">@CharlesDuffy I agree!</span>
