<div class="post-text" itemprop="text">
<p>everybody.</p>
<p>I can't find a pythonic way to ignore "blank" lines in a CSV. I use quotes because I'm talking about lines that look like '','','','',''
Here is a CSV (blank lines could be random):</p>
<pre><code>id,name,age
1,alex,22
3,tiff,42
,,
,,
4,john,24
</code></pre>
<p>Here is the code:</p>
<pre><code>def getDataFromCsv(path):
    dataSet = []
    with open(unicode(path), 'r') as stream:
        reader = csv.reader(stream, delimiter=',')
        reader.next() # ignoring header
        for rowdata in reader:
            # how to check here?
            dataSet.append(rowdata)
    return dataSet
</code></pre>
<p>Here is similar questions that I've been reading, but different to this in particular:
<a href="https://stackoverflow.com/questions/31508832/python-csv-reader-ignore-blank-row">python csv reader ignore blank row</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#any" rel="noreferrer"><code>any</code></a> to check if any column in the row contains data:</p>
<pre><code>for rowdata in reader:
    # how to check here?
    if any(x.strip() for x in rowdata):
        dataSet.append(rowdata)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about:</p>
<pre><code>if len(rowdata) &gt; 0:
    dataSet.append(rowdata)
</code></pre>
<p>Or am I missing a part of your question?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the built-in function <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a>:</p>
<pre><code>for rowdata in reader:
    # how to check here?
    if not any(row):
        continue
    dataSet.append(rowdata)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<pre><code>with open(fn, 'r') as csvfile:
    reader = csv.reader(csvfile)
    data = [row for row in reader if any(col for col in row)]
</code></pre>
</blockquote>
</div>
<span class="comment-copy">You can use <code>if any(x for x in rowdata): dataSet.append(rowdata)</code></span>
<span class="comment-copy">BTW, change to <code>next(reader)</code> to be compatible with Python3 also</span>
<span class="comment-copy">together with schwobaseggl's @dekim solution works, exacly as expected. Thanks</span>
<span class="comment-copy">@tonypdmtr good call, I was thinking only in 2.7.x, but I'll have that in mind for now on.</span>
<span class="comment-copy">Works as expected, it's clear and it taught me something. Thanks!</span>
<span class="comment-copy">This won't work as these "empty" rows are still 3 long. You must test if all of the 3 strings in the row are empty.</span>
<span class="comment-copy">Hi, welcome to Stack Overflow. When answering a question that already has many answers, please be sure to add some additional insight into why the response you're providing is substantive and not simply echoing what's already been vetted by the original poster. This is especially important in "code-only" answers such as the one you've provided.</span>
<span class="comment-copy">While this code may answer the question, providing additional context regarding how and/or why it solves the problem would improve the answer's long-term value.</span>
