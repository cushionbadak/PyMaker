<div class="post-text" itemprop="text">
<p>I have a <strong>list</strong> from model objects ( <em>length about 1.5 million</em> ).</p>
<pre><code>class Word(object):
    def __init__(self, id, word, arg1 , arg2 )
        self.id = id
        self.word = word
        self.arg1 = arg1 
        self.arg2 = arg2 
</code></pre>
<p>There is many objects that have same <code>word</code> property but different <code>id, arg1, arg2</code>
for example :</p>
<pre><code>1     hi        2      3
2     hi        4      6
3     hello     2      7
4     hi        2      7
5     world     1      9
6     hello     3      3
7     code      5      2
</code></pre>
<p>There is <code>hi =&gt; 3</code> and <code>hello =&gt; 2</code></p>
<p>How can i check duplicate items by <code>word</code> property and remove them in a <strong>fast way</strong><br/>
<strong>Note that the length is too long</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>An option would be using this 3rd-party library <a href="https://github.com/pytoolz/toolz" rel="nofollow noreferrer">toolz</a></p>
<p>In your case, you can use it like this:</p>
<pre><code>import toolz

unique_words = toolz.unique(words, key=lambda w: w.word)
# unique_words is a generator object
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; unique_words = toolz.unique(words, key=lambda w: w.word)
&gt;&gt;&gt; for w in unique_words:
...     print(w.word)
... 
hi
hello
world
code
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You simply want a <code>set</code>. That's a container where only one object with the same key can exist. Here's the <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">official documentation</a>.</p>
<p>What you want to do is make your <code>Word</code> class <em>hashable</em>:</p>
<ul>
<li>it needs a <code>__eq__(otherword)</code> method that takes another word and returns true if the otherword's <code>.word</code> is equal to its own, and</li>
<li>it needs a <code>__hash__</code> method that returns a hash of its content. I'd just <code>return self.word.__hash__()</code>.</li>
</ul>
<p>Then, <code>set</code> makes sure each word is only in there once. You can also combine, cut, subtract sets like you can do it with mathematical sets (the things in curly brackets {} ).</p>
<p>A word about your application: At 1.5 million objects, it <strong>really</strong> looks like you should be having a table rather than a list of Objects, because that just means you really have about as much overhead per row in your table as content (if not even more).</p>
<p>Python's "Pandas" module is probably the tool to use here. It very likely obsoletes most of the stuff you've written so far.</p>
</div>
<div class="post-text" itemprop="text">
<p>I find converting to a dataframe and using <code>drop_duplicates</code> easy.</p>
<p>Use:</p>
<pre><code>DataFrame.drop_duplicates(subset=['word'], keep='first')
</code></pre>
<p>This will return a deduplicated dataframe deleting all rows having the same <code>word</code> property while preserving the first occurance. </p>
<ul>
<li><p>If you wish to drop duplicates except for the last occurrence, use <code>keep='last'</code>.</p></li>
<li><p>To drop all duplicates, use <code>keep=False</code>.</p></li>
</ul>
</div>
<span class="comment-copy">I can't use DB in this section ... just list @Norrius</span>
<span class="comment-copy">@ArashHatami no. Something else is making it look like you can only use lists, but really, Python uses ducktyping, so anything that <i>behaves</i> like a list will work. So: Use a proper data management tool (ORM, Pandas), see my answer.</span>
<span class="comment-copy">Using drop_duplicates of DataFrame is much easier, if you have no problem in converting your list to a dataframe.</span>
<span class="comment-copy">Thank you very much for your useful help.... but i prefer to not change current structure</span>
<span class="comment-copy">Then, it's your fault your application is slow and cumbersome to code. Oh well.</span>
<span class="comment-copy">Thank you but i can't convert <code>list</code> to <code>dataframe</code> in this project</span>
