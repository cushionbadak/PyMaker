<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3199171/append-multiple-values-for-one-key-in-a-dictionary">append multiple values for one key in a dictionary [duplicate]</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>Suppose I have a dictionary as below</p>
<pre><code>my_dict = {
'key1' : 'str1',
'key2' : 'str2',
'key3' : 'str3'
}
</code></pre>
<p>I want to assign additional value to each key so that the structure of dictionary is as follows</p>
<pre><code>key1 : str1, num1
key2 : str2, num2
key3 : str3, num2
</code></pre>
<p>Is it possible to do it, if yes then how can we access individual values.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you don't need to change these multiple values in the dictionary, use <code>tuples</code> as values:</p>
<pre><code>my_dict = {
    'key1' : ('str1', 56),
    'key2' : ('str2', 78),
    'key3' : ('str3', 89)
}
</code></pre>
<p>Otherwise use <code>lists</code>:</p>
<pre><code>my_dict = {
    'key1' : ['str1', 56],
    'key2' : ['str2', 78],
    'key3' : ['str3', 89]
}
</code></pre>
<p>And in both structures, accessing is identical:</p>
<pre><code>&gt;&gt;&gt; my_dict['key3']
('str3', 89)
&gt;&gt;&gt; my_dict['key3'][0]
'str3'
</code></pre>
<p>But assignment is only possible with <code>lists</code> (as they are <code>mutable</code> data structures):</p>
<pre><code>&gt;&gt;&gt; my_dict['key3'][1] = 99
&gt;&gt;&gt; my_dict['key3'][1]
99
&gt;&gt;&gt; my_dict
{'key3': ['str3', 99], 'key1': ['str1', 56], 'key2': ['str2', 78]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you could assign a tuple:</p>
<pre><code>my_dict = {
  'key_0': ('val_0', 'val_1')
  ...
}
</code></pre>
<p>And access like so:</p>
<pre><code>my_dict['key_0'][0]   # 'val_0'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can add the value as a tuple or a list like this:</p>
<pre><code>my_dict = {
'key1' : [str1, num1],
'key2' : [str2, num2],
'key3' : [str2, num2]
}
</code></pre>
<p>This would be the list way to do it. You could access your values with the corresponding indexes.</p>
<p>my_dict['key1'][0] would be the string and my_dict['key1'][1] would be the number. </p>
<p>Good luck!</p>
</div>
<div class="post-text" itemprop="text">
<p>you can establish lists if you want to later append</p>
<pre><code>d= {'a':[1], 'b':[10]}
d['a'].append(2)
print(d) # {'a': [1, 2], 'b': [10]}
print(d['a'][1]) # 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given a list of your new numbers, you can use <code>zip</code>:</p>
<pre><code>nums = [3, 4, 5]
my_dict = {
 'key1' : 'str1',
 'key2' : 'str2',
 'key3' : 'str3'
}
my_dict = {a:[b, c] for c, [a, b] in zip(nums, my_dict.items())}
</code></pre>
<p>Output:</p>
<pre><code>{'key1': ['str1', 5], 'key2': ['str2', 4], 'key3': ['str3', 3]}
</code></pre>
</div>
<span class="comment-copy">Assign a list or tuple as the value.  <code>d = {'k1': ['str1', 1]}</code>. Access via indexing, e.g. <code>d['k1'][0]</code> yields <code>str1</code></span>
<span class="comment-copy">Use a <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer">namedtuple</a></span>
<span class="comment-copy">It's not clear to me how exactly the output should look like. Could you clarify it with an example of how <i>you want the output to work</i> (should the values be concatenated strings or do you want to index the dictionary values or even index the dictionary keys?)</span>
