<div class="post-text" itemprop="text">
<p><strong>Goal</strong></p>
<p>I'm trying to write a zip file to the /tmp folder in a python aws lambda, so I can extract manipulate before zipping, and placing it in s3 bucket.</p>
<p><strong>Problem</strong></p>
<p>Os Errno30 Read Only FileSystem</p>
<p>This code was tested locally on my computer to make sure the file would write to my working directory before I uploaded it to aws. This is the code i'm trying to use.</p>
<pre><code>file = downloadFile() #This is api call that returns binary zip object
newFile = open('/tmp/myZip.zip','wb')
newFile.write(file)
extractAll('/tmp/myZip.zip')
</code></pre>
<p>here is the code that is trying to extract the zip file</p>
<pre><code>def extractAll(self,source):
        with zipfile.ZipFile(source, 'r') as archive:
            archive.extractall()
</code></pre>
<p>here is the trace</p>
<pre><code>[Errno 30] Read-only file system: '/var/task/test-deploy': OSError
Traceback (most recent call last):
File "/var/task/web.py", line 31, in web
performAction(bb, eventBody)
File "/var/task/src/api/web.py", line 42, in performAction
zipHelper.extractAll('/tmp/myZip.zip')
File "/var/task/src/shared/utils/zipfilehelper.py", line 24, in extractAll
archive.extractall()
File "/var/lang/lib/python3.6/zipfile.py", line 1491, in extractall
self.extract(zipinfo, path, pwd)
File "/var/lang/lib/python3.6/zipfile.py", line 1479, in extract
return self._extract_member(member, path, pwd)
File "/var/lang/lib/python3.6/zipfile.py", line 1538, in _extract_member
os.mkdir(targetpath)
OSError: [Errno 30] Read-only file system: '/var/task/test-deploy'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/dev/library/zipfile.html#zipfile.ZipFile.extractall" rel="nofollow noreferrer"><code>extractAll()</code></a> will extract files in the current directory, which is <code>/var/task/test-deploy</code> in your case.</p>
<p>You need to use <a href="https://docs.python.org/3/library/os.html#os.chdir" rel="nofollow noreferrer"><code>os.chdir()</code></a> to change the current directory:</p>
<pre><code>import os, zipfile

os.chdir('/tmp')
with zipfile.ZipFile(source, 'r') as archive:
    archive.extractall()
</code></pre>
<p>Even better, you can <a href="https://docs.python.org/3/library/tempfile.html#tempfile.TemporaryDirectory" rel="nofollow noreferrer">create a temporary directory</a> and extract the files there, to avoid polluting <code>/tmp</code>:</p>
<pre><code>import os, tempfile, zipfile

with tempfile.TemporaryDirectory() as tmpdir:
    os.chdir(tmpdir)
    with zipfile.ZipFile(source, 'r') as archive:
        archive.extractall()
</code></pre>
<p>If you want to restore the current working directory after extracting the file, consider using this decorator:</p>
<pre><code>import os, tempfile, zipfile, contextlib

@contextlib.context_manager
def temporary_work_dir():
    old_work_dir = os.getcwd()
    with tempfile.TemporaryDirectory() as tmp_dir:
        os.chdir(tmp_dir)
        try:
            yield
        finally:
            os.chdir(old_work_dir)

with temporary_work_dir():
    with zipfile.ZipFile(source, 'r') as archive:
        archive.extractall()
</code></pre>
</div>
<span class="comment-copy">In the first line, where are you downloading this file from/to? Lambda has temporary storage only at /tmp. Make sure you are downloading it to /tmp.</span>
<span class="comment-copy">How do you know downloadFile is trying to store in  /tmp/ ?</span>
<span class="comment-copy">downloadFile() is getting a binary object from another api</span>
<span class="comment-copy">I was assuming '/tmp/myZip.zip' the /tmp/  in my destination would resolve to the tmp storage for the lambda</span>
<span class="comment-copy">Please add the full error traceback and the code of <code>downliadFile()</code> to your question!</span>
