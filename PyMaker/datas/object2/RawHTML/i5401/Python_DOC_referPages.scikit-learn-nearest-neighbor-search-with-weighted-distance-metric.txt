<div class="post-text" itemprop="text">
<p>Trying to use minkowski distance and pass weights but the sklearn metrics do not allow this. Tried pdist and cdist from scipy but these calculate the distances before hand!</p>
<pre><code>    import pandas as pd
    from sklearn.neighbors import NearestNeighbors

        X = pd.read_csv('.file.csv')

        weights = [1] * X.shape[1] # filled with 1's for now

        nbrs = NearestNeighbors(
                                algorithm = 'brute',
                                metric = minkowski(u, v, p=1, w=weights), n_jobs = -1)
                               .fit(X)

    distances, indices = nbrs.kneighbors(X=X, n_neighbors=50, return_distance=True)
</code></pre>
<p>This returns: </p>
<pre><code>"NameError: name 'u' is not defined"
</code></pre>
<p><code>callable(minkowski)</code> returns True!</p>
<p>I know I'm not passing u and v so unsurprisingly the error shows up. The documentation for this is a bit poor for using other metrics outside from those supported in sklearn. How can I use a weighted metric from scipy for example?</p>
</div>
<div class="post-text" itemprop="text">
<p>The way you are trying to include the weights is your problem. As <code>u</code> and <code>v</code> are not defined and are internally passed to the metric callable you shouldn't actually include them in your code. You should create a partial function with <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>functools.partial</code></a>from <code>minkowski</code> with the values of <code>p</code> and <code>w</code> predefined.</p>
<pre><code>from functools import partial

w_minkowski = partial(minkowski, p=1, w=weights)
nbrs = NearestNeighbors(algorithm='brute', metric=w_minkowski, n_jobs=-1)
nbrs.fit(X)
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to use Minkowski distance for <code>p=1</code> you can just set <code>NearestNeighbors</code> <code>metric</code> parameter to <code>'manhattan'</code> or <code>'l1'</code> (these are strings). You could also set <code>metric</code> to <code>'minkowski'</code> and set <code>p</code> parameter accordingly.</p>
<p>For details see <a href="http://scikit-learn.org/stable/modules/generated/sklearn.neighbors.NearestNeighbors.html#sklearn.neighbors.NearestNeighbors" rel="nofollow noreferrer">here</a></p>
</div>
<span class="comment-copy">This did the trick alright. Compared to pdist (scipy) this method uses all available CPU power. Thanks!</span>
