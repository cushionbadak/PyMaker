<div class="post-text" itemprop="text">
<p>So I am writing a function that pulls hex color values from a twitter account that posts a color of the day.  I am hoping to send this to an arduino to light up and LED with that color, but I am running into issues when trying to write to the Arduino.  I have converted the hex color value to an RGB value and stored it in a tuple.  I attempt to reference each value in the RGB tuple to write out of a serial connection to my Arduino, however I cannot encode the integers correctly so that they are sent. Here is the specific part of the code I am referring to:</p>
<pre><code> #Convert from hex to rgb
        rgb = tuple(int(this_color[i:i+2], 16) for i in (0, 2 ,4))

        #Add individual rgb values to list
        rgb_values = [rgb[0], rgb[1], rgb[2]]

        if (ser.isOpen()):
        # Start a main loop
            while (loopVar):

                # Prompt for Red value
                redVal = rgb[0]
                print(struct.pack('&gt;B', redVal))
                ser.write("r" + struct.pack('&gt;B',redVal))

                # Prompt for Green value
                greenVal = rgb[1]
                print(struct.pack('&gt;B', greenVal))
                ser.write("g" + struct.pack('&gt;B',greenVal))

                # Prompt for Blue value
                blueVal = rgb[2]
                print(struct.pack('&gt;B', blueVal))
                ser.write("b" + struct.pack('&gt;B',blueVal))

                # Check if user wants to end
                loopCheck = raw_input('Loop (y/N):')
                if (loopCheck == 'N'):
                    loopVar = False

    # After loop exits, close serial connection
    ser.close()
</code></pre>
<p>I thought I would need to convert the integer values to raw binary for use in write.serial, but that doesn't seem to be working.  </p>
<p>Here is the output when I run the file:</p>
<pre><code>142
&lt;class 'int'&gt;
33
&lt;class 'int'&gt;
38
&lt;class 'int'&gt;
b'\x8e'
Traceback (most recent call last):
  File "C:\Users\Louis\Desktop\MSTI Application\Arduino Lamp\Twitter_Scraping_Script_2.py", line 117, in &lt;module&gt;
    get_user_tweets('color_OTD', 5)
  File "C:\Users\Louis\Desktop\MSTI Application\Arduino Lamp\Twitter_Scraping_Script_2.py", line 92, in get_user_tweets
    ser.write("r" + struct.pack('&gt;B',redVal))
TypeError: must be str, not bytes
</code></pre>
<p>Any ideas?</p>
<p>Here is the my full code:</p>
<pre><code>import tweepy 
import csv
import sys
import serial
import struct

#Create Serial port object called arduinoSerialData
ser = serial.Serial("COM1", 57600)
connected = False


#Twitter API credentials
consumer_key = 'xx'
consumer_secret = 'xx'
access_key = 'xx'
access_secret = 'xx'

def get_user_tweets(user_name, num_tweets):
 # Open the Serial Connection
    ser.close()
    ser.open()
    loopVar = True

    #authorize twitter, initialize tweepy
    auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_key, access_secret)
    api = tweepy.API(auth)

    #initialize list to hold tweet colors
    tweets_colors = []

    #Initialize string to hold current tweet
    this_tweet = ""

    #Initialize string to hold current color
    this_color = ""

    #Initialize tuple to hold rgb values
    rgb = ()

    #Initialize list to hold rgb values
    rgb_values =[]


    #Call to get access tweets from specified user
    tweets = api.user_timeline(screen_name='color_OTD',count=num_tweets)

    #Create a csv file with the username of the given user
    #with open('%s_tweets.csv' % user_name, 'w', newline='') as f:

        #Create writer object and give csv column names
        #writer = csv.writer(f)
        #writer.writerow(['red','green','blue'])

    #Loop through all tweets accessed
    for tweet in tweets:

        #If the tweet isn't a retweet
        if not tweet.retweeted:

            #Get # with hex color value
            this_tweet = str(tweet.entities.get('hashtags'))

            #Access hex value within hashtag string
            this_color = this_tweet[11:17]

            #Append all colors to list
            tweets_colors.append(this_color)

            #Convert from hex to rgb
            rgb = tuple(int(this_color[i:i+2], 16) for i in (0, 2 ,4))

            #Add individual rgb values to list
            rgb_values = [rgb[0], rgb[1], rgb[2]]
            #Write rgb values to csv
            #writer.writerow(rgb_values)

            print(rgb[0])
            print(type(rgb[0]))
            print(rgb[1])
            print(type(rgb[1]))
            print(rgb[2])
            print(type(rgb[2]))

            if (ser.isOpen()):
            # Start a main loop
                while (loopVar):

                    # Prompt for Red value
                    redVal = rgb[0]
                    print(struct.pack('&gt;B', redVal))
                    ser.write("r" + struct.pack('&gt;B',redVal))

                    # Prompt for Green value
                    greenVal = rgb[1]
                    print(struct.pack('&gt;B', greenVal))
                    ser.write("g" + struct.pack('&gt;B',greenVal))

                    # Prompt for Blue value
                    blueVal = rgb[2]
                    print(struct.pack('&gt;B', blueVal))
                    ser.write("b" + struct.pack('&gt;B',blueVal))

                    # Check if user wants to end
                    loopCheck = raw_input('Loop (y/N):')
                    if (loopCheck == 'N'):
                        loopVar = False

        # After loop exits, close serial connection
        ser.close()





if __name__ == '__main__':
    get_user_tweets('color_OTD', 5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason for your error is that struct <a href="https://docs.python.org/3.6/library/struct.html#struct.pack" rel="nofollow noreferrer">returns a bytes string</a> while you are trying to add it to a <code>str</code> type. See line <code>ser.write("r" + struct.pack('&gt;B',redVal))
</code>. </p>
<p>Type <code>"r" + b"r"</code> into a python 3 shell and you will get the same error <code>TypeError: must be str, not bytes</code>. You need to change "r" to b"r" which turns the string into a bytes string. <a href="https://docs.python.org/3/library/stdtypes.html#bytes" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#bytes</a></p>
<p>So you will need to change a few of your statements.</p>
<pre><code>ser.write(b"r" + struct.pack('&gt;B',redVal))
ser.write(b"g" + struct.pack('&gt;B',greenVal))
ser.write(b"b" + struct.pack('&gt;B',blueVal))
</code></pre>
</div>
<span class="comment-copy">Can you show the exact error that you get? Would be helpful to know the line number where the type error occurs.</span>
<span class="comment-copy">@costrouc Totally forgot to include that.  Just edited to include the output with error message.</span>
<span class="comment-copy">Thank you! That fixed that error.  When I am trying to run this python script to control the LEDs, should I compile the python script or the Arduino script first?  Thanks again for the help.</span>
