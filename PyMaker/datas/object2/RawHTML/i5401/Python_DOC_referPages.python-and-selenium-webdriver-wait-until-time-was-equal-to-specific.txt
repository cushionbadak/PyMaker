<div class="post-text" itemprop="text">
<p>I'm new <code>python 3</code> user.</p>
<p>I have a project web scraping via python 3 which I have to waiting until time will be 08:22:00 PM after login to web target. </p>
<p>I have project and not any problem but I want import only waiting until specific time and continue again.</p>
<p>Do you have any idea or can you show me any code about that for example : </p>
<p><code>WebDriverWait(driver, 10).until() # for example time=08:22:00 pm continue</code></p>
<p>thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>If you look at the API Docs of <a href="https://seleniumhq.github.io/selenium/docs/api/py/webdriver_support/selenium.webdriver.support.wait.html#module-selenium.webdriver.support.wait" rel="nofollow noreferrer"><strong><code>WebDriverWait</code></strong></a> it is defined as :</p>
<pre><code>class selenium.webdriver.support.wait.WebDriverWait(driver, timeout, poll_frequency=0.5, ignored_exceptions=None)
Constructor, takes a WebDriver instance and timeout in seconds.
</code></pre>
<p>Further the untill method is defined as :</p>
<pre><code>until(method, message='')
Calls the method provided with the driver as an argument until the return value is not False.
</code></pre>
<p>So both <strong><code>WebDriverWait</code></strong> constructor and <strong><code>until</code></strong> method is associated with the <strong><code>WebDriver</code></strong> instance which is extensively used to communicate with <strong>Browser Clients</strong>. Hence <strong><code>WebDriver</code></strong> may not help you.</p>
<p>Having said that different solutions are available through <code>Python</code>.</p>
<hr/>
<h2>Solution # 1</h2>
<p>You can import the <a href="https://docs.python.org/3/library/time.html" rel="nofollow noreferrer"><strong>time</strong></a> and <a href="https://docs.python.org/2/library/datetime.html#datetime-objects" rel="nofollow noreferrer"><strong>datetime</strong></a> module of <strong><code>Python</code></strong> to <code>sleep()</code> in a simple loop as follows :</p>
<pre><code>import datetime
import time

# datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])
# The year, month and day arguments are required. tzinfo may be None.
target_time = datetime.datetime(2018, 1, 23, 13, 2, 00)  # 13:02 pm on 23 January 2018
while datetime.datetime.now() &lt; target_time:
    time.sleep(10)
print("It is 13:02 pm, 2018. Resuming Test Execution")
</code></pre>
<hr/>
<h2>Solution # 2</h2>
<p>You can import the <a href="https://docs.python.org/3/library/threading.html#timer-objects" rel="nofollow noreferrer"><strong>Timer</strong></a> object from <a href="https://docs.python.org/3/library/threading.html#module-threading" rel="nofollow noreferrer"><strong>threading</strong></a> module of <strong><code>Python</code></strong> to induce a <code>timer</code> as follows :</p>
<pre><code>from threading import Timer

def hello():
    print("Hello World")

t = Timer(10.0, hello)
t.start()  # after 30 seconds, "Hello World" will be printed
</code></pre>
<hr/>
<h2>Trivia</h2>
<p>You also use the <strong>Event scheduler</strong> Class <a href="https://docs.python.org/3/library/sched.html#sched.scheduler" rel="nofollow noreferrer"><strong><code>sched</code></strong></a> which implements a general purpose event scheduler: </p>
<pre><code>class sched.scheduler(timefunc=time.monotonic, delayfunc=time.sleep)
</code></pre>
</div>
<span class="comment-copy">Selenium condition waits for and returns an element, so what is the element in this case? Seems you are waiting just for particular time, so why not wait directly as discussed here <a href="https://stackoverflow.com/questions/6579127/delay-a-task-until-certain-time/" title="delay a task until certain time">stackoverflow.com/questions/6579127/â€¦</a> ?</span>
<span class="comment-copy">If you're just scraping, why not just kick off the script at 8:22pm?</span>
<span class="comment-copy">@MivaScott, Because if you trying to login in 8:22 site don't load page if you was not logged</span>
<span class="comment-copy">It working well, thanks</span>
