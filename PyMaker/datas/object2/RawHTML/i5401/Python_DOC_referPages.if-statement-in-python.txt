<div class="post-text" itemprop="text">
<p>I have the code below (attach). What I want to do is to prompt a user to enter a ticker from Quandl website (financial/economic data) so that the dataset is retrieved. One condition, the data should be of 1-month length starting from the time when a user enters ticker.Let'say if the program is run on 22/01/2018 so the data should be from 22/12/2017 till 22/01/2018 (That is the first thing I am struggling with). Second, I want to make sure that the ticker is entered correctly, so I want to make a condition such that "if the command "quandl.get("ticker", start_date=trim_start, end_date=trim_end)" does not retrieve the data- re-enter the ticker" 
Please, advise me this issue.</p>
<pre><code>'''Installation steps - go to "Command line" and pass "pip install quandl"'''
 import quandl                        #To extract the data from Quandl 
 website
 import matplotlib.pyplot as plt      #Plotting library
 import datetime
def MainFormula():
ticker = None 
while ticker is None:
    ticker = input("Please, enter stock ticker (should be available in Quandl Website): ")
    try:
        trim_end=datetime.datetime.now()
        trim_start= trim_end - 30
        if quandl.get("ticker", start_date=trim_start, end_date=trim_end) == True:
            print("Here are the results: ")             
        else:            
            print("Please, enter correct stock ticker (check Quandl website)! ")
    except ValueError as e1:
        print("Please, enter correct alpha (should be float - example: 0.2) ")                 

 program = MainFormula()               
 print(program)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To answer the first part. You can use the <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">datetime</a> module. Like this</p>
<pre><code>from datetime import datetime, timedelta

date_time = datetime.now()

one_month_ago = date_time - timedelta(weeks=4)

print('NOW: ', date_time)
print('ONE_MONTH_AGO: ', one_month_ago)
</code></pre>
<hr/>
<pre><code>NOW:  2018-01-22 10:49:59.967355
ONE_MONTH_AGO:  2017-12-25 10:49:59.967355
</code></pre>
<p>I'm not familiar with the <code>quandle</code> API. I will have a very brief read of the <a href="http://pythonhosted.org/Quandl/" rel="nofollow noreferrer">documentation</a> for <strong>you</strong>.</p>
<p><strong>UPDATE</strong> </p>
<p>Here is how I experimented to try and solve your problem. You can see I just try to get something I know will fail. I import the correct exceptions and handle them in a <code>try</code> <code>except</code> block. I hope this helps.</p>
<pre><code>&gt;&gt;&gt; import quandl
&gt;&gt;&gt; result = quandl.get('NOTHING')
Traceback (most recent call last):
SyntaxError: Invalid format used for Quandl database code.         The correct format is: `DATABASE_CODE/DATASET_CODE`
&gt;&gt;&gt; result = quandl.get('GOOG/NYSE_IBM')
Traceback (most recent call last):
quandl.errors.quandl_error.NotFoundError: (Status 404) (Quandl Error QECx02) You have submitted an incorrect Quandl code. Please check your Quandl codes and try again.
&gt;&gt;&gt; from quandl.errors.quandl_error import NotFoundError
&gt;&gt;&gt; def example_error_handling(*args, **kwargs):
...     try:
...         result = quandl.get(*args, **kwargs)
...     except (SyntaxError, NotFoundError):
...         print('INCORRECT ARGUMENTS. PLEASE TRY AGAIN')
...         # Should probably raise an exception here. Handle it better than a print!
...     else:
...         return result
...     
&gt;&gt;&gt; result = example_error_handling('GOOG/NYSE_IBM')
INCORRECT ARGUMENTS. PLEASE TRY AGAIN
</code></pre>
</div>
<span class="comment-copy">Check out the <code>datetime</code> module for your first question. <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">docs.python.org/3/library/datetime.html</a></span>
<span class="comment-copy">Thank you very much! I used your statements and modified my code.</span>
