<div class="post-text" itemprop="text">
<p>I am trying to hit a port of an IP address and print the <code>status code</code> (i.e <code>200 OK , 502 Bad Gateway</code> etc). Suppose, let's say <code>port 80</code> is open at ip address <code>xx.xx.xx.xxx</code> . So, <code>xx.xx.xx.xxx:80</code> should give us <code>200 OK</code>. In my code, I am using port <code>811450</code> , which is definitely not opened and no application is running there. But it is not showing any error.</p>
<pre><code>import httplib  
import urllib
import socket


class mysocket:


    def __init__(self, sock=None):
        if sock is None:
            self.sock = socket.socket(
                socket.AF_INET, socket.SOCK_STREAM)
        else:
            self.sock = sock

    host = "xx.xx.xx.xxx"
    port = "811450"

    def connect(self, host, port):
        self.sock.connect((host, port))

    def mysend(self, msg):
        totalsent = 0
        while totalsent &lt; MSGLEN:
            sent = self.sock.send(msg[totalsent:])
            if sent == 0:
                raise RuntimeError("socket connection broken")
            totalsent = totalsent + sent

    def myreceive(self):
        chunks = []
        bytes_recd = 0
        while bytes_recd &lt; MSGLEN:
            chunk = self.sock.recv(min(MSGLEN - bytes_recd, 2048))
            if chunk == '':
                raise RuntimeError("socket connection broken")
            chunks.append(chunk)
            bytes_recd = bytes_recd + len(chunk)
        return ''.join(chunks)
</code></pre>
<p>What is the recommended way to achieve it. </p>
</div>
<div class="post-text" itemprop="text">
<p>First of all, 811450 isn't a valid port. The largest valid TCP port range is 65535.</p>
<p>Second, you're mixing up the TCP protocol and the HTTP protocol. If you want an HTTP response from the socket, you need to send a valid HTTP request. You can easily do this with the <code>requests</code> package:</p>
<pre><code>import requests

r = requests.get('http://xx.xx.xx.xxx:811450')
print(r.status_code)
</code></pre>
</div>
<span class="comment-copy">It works, but how to handle when port does not exist ? It is showing error, but if connection refused then I want to show a readable message like "can not connect" something.</span>
<span class="comment-copy">Then you wrap <code>requests.get()</code> in a try/except clause and catch the <code>requests.exceptions.ConnectionError</code> that I assume you're getting. See <a href="https://docs.python.org/3/tutorial/errors.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/errors.html</a></span>
<span class="comment-copy">Yeah got it. Thanks.</span>
