<div class="post-text" itemprop="text">
<p>Suppose I have some code</p>
<pre><code>hello = sys.stdin.readline()
</code></pre>
<p>and I type "whats up\n" (yes I actually type the \n), and then hit enter</p>
<p>and then </p>
<pre><code>print(hello[:-1])
</code></pre>
<p>Which then prints "whats up\n", instead of what I want it to do, which is "whats up" and an actual newline. </p>
<p>What do I need to do to convert <code>\n</code> into the actual newline character? Do I have to replace it with <code>os.linesep</code>? This question also extends to the same problem of converting an inputted <code>\r</code> into a carriage return character.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>\n</code> are the two characters <code>\</code> and <code>n</code>, they are <em>not</em> a newline. The <kbd>enter</kbd> is a newline.</p>
<p>You get exactly what is to be expected.</p>
</div>
<div class="post-text" itemprop="text">
<p>So in order to replace two charachters you have: <code>\</code> and <code>n</code> you need to call <code>[replace()][1]</code> method:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; s = sys.stdin.readline()
whats\nup
&gt;&gt;&gt; s
'whats\\nup\n'
&gt;&gt;&gt; s.replace('\\n', '\n')
'whats\nup\n'
&gt;&gt;&gt; print(s)
whats\nup

&gt;&gt;&gt; print(s.replace('\\n', '\n'))
whats
up

&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">isn't \n a newline?</span>
<span class="comment-copy">yes, but it's being printed in the literal sense</span>
<span class="comment-copy">Wait, you enter "whats up\n" and hit "Enter" or "whats up" and hit "Enter"?</span>
<span class="comment-copy">But you know that entering "\n" won't be converted to new line and will be saved in string as "\\n" escaping first backslash and then adding "n"?</span>
<span class="comment-copy">If you want to evaluate the string backslash n as a newline, you could use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>literal_eval</code></a>, but the easiest way would be <code>replace('\\n', '\n')</code></span>
