<div class="post-text" itemprop="text">
<p>I'm new to python and using command line args or switched in python. I'm trying to write this code which generates base path to create a directory. My code:</p>
<pre><code>import os
import uuid
import datetime
from datetime import date
import subprocess
import sys

today = date.today()
currenttime = ('JT'+datetime.datetime.now().strftime("%H%M%S"))
currentday=('JD'+str(today.day))
currentyear=('JY'+str(today.year))

#param1=sys.argv[1]
step4='dataprep'
source_folder = input('enter existing dir path: ')
if os.path.isdir(source_folder):
    dir_path = source_folder
else:
    dir_path = os.path.join('root/PnG/bd_proc01/',step4,currentyear,currentday,currenttime, \
                          '{}'.format(str(uuid.uuid1())))
os.makedirs(dir_path)
print(dir_path)

#converting dir_path to test
test=dir_path.replace("/", "_")
print(test)
</code></pre>
<p>So my question is how can I generate the same path using command line switches by running the script like below instead of passing them as what I did in script ? and also it script should be able to look for existing path if provided instead of generating one.</p>
<pre><code>pngbdp_step1_upload.py -a root -b test -c bd_proc01 -d uploadout_dataprepin -p JY2017/JD331/JT231450/UUID_b3983ebc-d3c9-11e7-ae72-000d3a0097c5 -x /mnt/localjobfiles/filesnfolderstoupload.txt
</code></pre>
<p>Or can someone shed some light or help me on generating the base path by running like this in command line.</p>
<p>Apologies if my question is vague...</p>
<p>Thx,</p>
<p>yaar7002</p>
</div>
<div class="post-text" itemprop="text">
<p>I think you are looking for the module argparse. It allows you to parse the command line arguments given to your script. For more info, visit <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">https://docs.python.org/3/library/argparse.html</a> . That sums it all up.
Here is the example code from the docs:
import argparse</p>
<pre><code>parser = argparse.ArgumentParser(description='Process some integers.') # just some nice feature

parser.add_argument('integers', metavar='N', type=int, nargs='+',
                help='an integer for the accumulator') #add posibility for argument

parser.add_argument('--sum', dest='accumulate', action='store_const',
                const=sum, default=max,
                help='sum the integers (default: find the max)') #add flag

args = parser.parse_args()
print(args.accumulate(args.integers))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're looking for the <a href="https://docs.python.org/3.6/library/argparse.html#module-argparse" rel="nofollow noreferrer"><code>argparse</code></a> module. You can use that to parse command line arguments. There are a lot of good examples in the docs. </p>
</div>
<span class="comment-copy">Have you looked at the <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse module</a>?</span>
<span class="comment-copy">Hi @Alex, yes I did but I got confused on that because I thought switches and argparse are different.</span>
<span class="comment-copy">Nope! That's what you are looking for... <a href="https://docs.python.org/3/howto/argparse.html#argparse-tutorial" rel="nofollow noreferrer">the tutorial</a> is a great way to learn how to use the package.</span>
<span class="comment-copy">@Alex, Thanks for the link and it is very helpful.</span>
<span class="comment-copy">Glad it helped... Please <a href="https://stackoverflow.com/help/someone-answers">mark an answer as correct</a> if it resolved your question. Looks like @Manjpeglover provided the same info. This helps us keep track of which questions are left to be answered.</span>
