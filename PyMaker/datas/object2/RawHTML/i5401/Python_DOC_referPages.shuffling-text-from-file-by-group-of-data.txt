<div class="post-text" itemprop="text">
<p>I was looking for some approach in Python / Unix Command to shuffle large data set of text by grouping based on first words value like below-</p>
<p>Input Text:</p>
<pre><code>"ABC", 21, 15, 45
"DEF", 35, 3, 35
"DEF", 124, 33, 5
"QQQ" , 43, 54, 35
"XZZ", 43, 35 , 32
"XZZ", 45 , 35, 32
</code></pre>
<p>So it would be randomly shuffled but keep the group together like below</p>
<p>Output Sample-</p>
<pre><code>"QQQ" , 43, 54, 35  
"XZZ", 43, 35 , 32
"XZZ", 45 , 35, 32
"ABC", 21, 15, 45
"DEF", 35, 3, 35
"DEF", 124, 33, 5
</code></pre>
<p>I found solution by normal shuffling, but I am not getting the idea to keep the group while shuffling.</p>
</div>
<div class="post-text" itemprop="text">
<p>It is possible to do it using <a href="https://docs.python.org/3.6/library/collections.html?highlight=collections%20defaultdict#collections.defaultdict" rel="nofollow noreferrer">collections.defaultdict</a>. By identifying each line by its first sequence you can sort through them easily and then only sample over the dictionary's keys, like so:</p>
<pre><code>import random
from collections import defaultdict

# Read all the lines from the file
lines = defaultdict(list)
with open("/path/to/file", "r") as in_file:
    for line in in_file:
        s_line = line.split(",")
        lines[s_line[0]].append(line)

# Randomize the order
rnd_keys = random.sample(lines.keys(), len(lines))

# Write back to the file?
with open("/path/to/file", "w") as out_file:
    for k in rnd_keys:
        for line in lines[k]:
            out_file.write(line)
</code></pre>
<p>Hope this helps in your endeavor.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could also store each line from the file into a nested list:</p>
<pre><code>lines = []
with open('input_text.txt') as in_file:
    for line in in_file.readlines():
        line = [x.strip() for x in line.strip().split(',')]
        lines.append(line)
</code></pre>
<p>Which gives:</p>
<pre><code>[['"ABC"', '21', '15', '45'], ['"DEF"', '35', '3', '35'], ['"DEF"', '124', '33', '5'], ['"QQQ"', '43', '54', '35'], ['"XZZ"', '43', '35', '32'], ['"XZZ"', '45', '35', '32']]
</code></pre>
<p>Then you could group these lists by the first item with <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby()</code></a>:</p>
<pre><code>import itertools
from operator import itemgetter

grouped = [list(g) for _, g in itertools.groupby(lines, key = itemgetter(0))]
</code></pre>
<p>Which gives a list of your grouped items:</p>
<pre><code>[[['"ABC"', '21', '15', '45']], [['"DEF"', '35', '3', '35'], ['"DEF"', '124', '33', '5']], [['"QQQ"', '43', '54', '35']], [['"XZZ"', '43', '35', '32'], ['"XZZ"', '45', '35', '32']]]
</code></pre>
<p>Then you could shuffle this with <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer"><code>random.shuffle()</code></a>:</p>
<pre><code>import random

random.shuffle(grouped)
</code></pre>
<p>Which gives a randomized list of your grouped items intact:</p>
<pre><code>[[['"QQQ"', '43', '54', '35']], [['"ABC"', '21', '15', '45']], [['"XZZ"', '43', '35', '32'], ['"XZZ"', '45', '35', '32']], [['"DEF"', '35', '3', '35'], ['"DEF"', '124', '33', '5']]]
</code></pre>
<p>And now all you have to do is flatten the final list and write it to a new file, which you can do with <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertools.chain.from_iterable()</code></a>:</p>
<pre><code>with open('output_text.txt', 'w') as out_file:
    for line in itertools.chain.from_iterable(grouped):
        out_file.write(', '.join(line) + '\n')

print(open('output_text.txt').read())
</code></pre>
<p>Which a gives new shuffled version of your file:</p>
<pre><code>"QQQ", 43, 54, 35
"ABC", 21, 15, 45
"XZZ", 43, 35, 32
"XZZ", 45, 35, 32
"DEF", 35, 3, 35
"DEF", 124, 33, 5
</code></pre>
</div>
<span class="comment-copy">This one is still shuffling just random order. I am still unable about the "grouping" of first string of the line</span>
<span class="comment-copy">My bad I did not get what you meant by "grouping".</span>
<span class="comment-copy">Sorry If I failed to explain. As I mentioned "grouping based on first words" , so as you see on the sample output, lines start with "XZZ" and "DEF" are altogether. That's what I meant about grouping by first value. Line would be intact, but similar word that start the line would also be "grouped"</span>
<span class="comment-copy">I edited my answer to match your definition of grouping. Once again my apologies for not reading correctly the first time around.</span>
<span class="comment-copy">Works like charm! Thanks, also for being fast ;D</span>
