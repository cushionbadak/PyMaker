<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6624453/whats-the-correct-way-to-convert-bytes-to-a-hex-string-in-python-3">What's the correct way to convert bytes to a hex string in Python 3?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>I'm interacting with an XBEE RF chip and want to decode it's incoming source address from a byte array to a string. The manufacturer's software does this already but I need to handle this in my own custom program. So</p>
<p>Received Address: b'\x00\x13\xa2\x00Aga\xf8'</p>
<p>Address (Decoded by Manufacturer): 00 13 A2 00 41 67 61 F8</p>
<p>I have been trying to decode this using address.decode('utf-8') but always receive a UnicodeDecodeError at \xa2 as an invalid start byte. I also need to know how to convert from the decoded version back to the byte array for sending messages back down the network.</p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>On Python 3.5 and higher, <code>bytes</code> (and some other <code>bytes</code>-like types) have <a href="https://docs.python.org/3/library/stdtypes.html#bytes.hex" rel="nofollow noreferrer">a <code>hex</code> method</a>, so you can just do:</p>
<pre><code>b'\x00\x13\xa2\x00Aga\xf8'.hex()
</code></pre>
<p>to get:</p>
<pre><code>'0013a200416761f8'
</code></pre>
<p>You can call <code>.upper()</code> on the result if case is important.</p>
<p>On 3.4 and earlier, <code>import binascii</code>, then use <a href="https://docs.python.org/3/library/binascii.html#binascii.hexlify" rel="nofollow noreferrer">the <code>hexlify</code> function</a>:</p>
<pre><code>binascii.hexlify(b'\x00\x13\xa2\x00Aga\xf8')
</code></pre>
<p>to get the same result.</p>
</div>
<span class="comment-copy">What version of python are you using?</span>
<span class="comment-copy">Thank you!! This worked perfect. For anyone else that follows this, to return from the hex format to the original bytes, I used bytes.fromhex(hex_output)</span>
