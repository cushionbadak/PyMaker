<div class="post-text" itemprop="text">
<p>So I have multiple sets as win conditions in my tic tac toe game:</p>
<pre><code>    win1 = {1,2,3}
    win2 = {4,5,6}
    win3 = {7,8,9}
    win4 = {1,5,9}
    win5 = {7,5,3}
    win6 = {1,4,7}
    win7 = {2,5,8}
    win8 = {3,6,9}
</code></pre>
<p>where each number is a position on the tic tac toe grid. I also have a list that adds every position the O and the X player makes. My current way of checking if a player won is this:</p>
<pre><code>    def checker():
      if (win1 or win2 or win3 or win4 or win5 or win6 or win7 or win8).issubset(jonesO):
        print 'O wins!'
        return 0
      elif (win1 or win2 or win3 or win4 or win5 or win6 or win7 or win8).issubset(jonesX):
        print 'X wins!'
        return 1
      elif (tie).issubset(bob):
        print 'IT IS A TIE!!!!!'
        return 2
</code></pre>
<p>but I figured out that the .issubset only checks the first set and nothing else. How do I change it so all the sets in the elif() and if are checked as subsets?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python, <code>a or b or c</code> evaluates to the first of the three that is truthy (if none is truthy, it is the last). In your case that would be the first non-empty <code>set</code>: <code>win1</code>. For your case, you can use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a>:</p>
<pre><code>if any(x.issubset(jonesO) for x in (win1, win2, win3, win4, win5, win6, win7, win8)):
    print 'O wins!'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>isSubSet</strong> is costly operation, you should instead use <strong>union</strong> operator of set.</p>
<pre><code>any(jonesO==jonesO.union(x) for x in (win1, win2, win3, win4, win5, win6, win7, win8))
</code></pre>
<p>This condition will return <strong>True</strong> if any of winning combination is part of moves set else will return <strong>False</strong>.</p>
<p>Basically, union of two set will return same set if joining set is already a subset of other set</p>
</div>
<span class="comment-copy"><code>win1 or win2 or win3 or win4 or win5 or win6 or win7 or win8</code> will evaluate to the first non empty <code>winX</code> in the sequence.</span>
<span class="comment-copy">Have you cheked the actual result of <code>(win1 or win2 or win3 or win4 or win5 or win6 or win7 or win8)</code>? BTW you found a rather complex way of representing the gane and checking the win conditions. I'd present it as a two dimmensional list, just the the it is.</span>
<span class="comment-copy">Yeah I tried the (win1 or win2 or win3... win8) and it only checks the first win condition. So if I had the second win condition nothing would happen. What do you mean by presenting it as a two d list, just the the it is?</span>
<span class="comment-copy">I was just about to ask you to explain how "or" operator works on non-booleans, but you did it already. You have my upvote (and my axe!).</span>
<span class="comment-copy">I tested your solution and it works! Could you explain why there is a x.issubset(jonesO)?</span>
<span class="comment-copy">@JerryZhou It is part of the generator expression <code>(fnc(x) for x in y)</code> that iterates the results of function <code>fnc</code> to all elements <code>x</code> of some iterable <code>y</code>. So, <code>x</code> is the loop varibale in that expression that takes on the values <code>win1</code>, <code>win2</code>, etc.</span>
