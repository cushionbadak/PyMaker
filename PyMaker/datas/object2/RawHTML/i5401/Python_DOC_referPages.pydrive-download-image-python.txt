<div class="post-text" itemprop="text">
<p>I have mail messages which contain attachments.<br/>
I need to upload the attachments from mail to google drive.<br/>
For mail I'm using <a href="https://docs.python.org/3/library/imaplib.html" rel="nofollow noreferrer">imaplib</a> and for google drive I'm using <a href="https://pythonhosted.org/PyDrive/quickstart.html" rel="nofollow noreferrer">pyDrive</a></p>
<p>I'm using the below code to get attachment:</p>
<pre><code>if mail.get_content_maintype() == 'multipart':

        for part in mail.walk():
            if part.get_content_maintype() == 'multipart':
                continue

            if part.get('Content-Disposition') is None:

            attachment = part.get_payload(decode=True)
</code></pre>
<p>I have <code>payload</code> my attachment in mail. Now I can't understand how upload <code>payload</code> to google drive using pyDrive. I've tried this, but it did not work</p>
<pre><code>attachment = part.get_payload(decode=True)
gd_file = self.gd_box.g_drive.CreateFile({'title': 'Hello.jpg',
                                                          "parents": [{"kind": "drive#fileLink", "id": folder['id']}]})
                gd_file.GetContentFile(attachment)
                gd_file.Upload()
</code></pre>
<p><strong>UPD:</strong></p>
<p>This code is work, but i think its bad solution(we save image localy, then upload this image in google drive)</p>
<pre><code>attachment = part.get_payload(decode=True)
                att_path = os.path.join("", part.get_filename())
                if not os.path.isfile(att_path):
                     fp = open(att_path, 'wb')
                     fp.write(attachment)
                     fp.close()

                gd_file = self.gd_box.g_drive.CreateFile({'title': part.get_filename(),
                                                          "parents": [{"kind": "drive#fileLink", "id": folder['id']}]})
                gd_file.SetContentFile(part.get_filename())
                gd_file.Upload()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://pythonhosted.org/PyDrive/pydrive.html#pydrive.files.GoogleDriveFile.GetContentFile" rel="nofollow noreferrer"><code>GetContentFile()</code></a> is used to save a <a href="https://pythonhosted.org/PyDrive/pydrive.html#pydrive.files.GoogleDriveFile" rel="nofollow noreferrer"><code>GoogleDriveFile</code></a> to a local file. You want the opposite so try using <a href="https://pythonhosted.org/PyDrive/pydrive.html#pydrive.files.GoogleDriveFile.SetContentString" rel="nofollow noreferrer"><code>SetContentString()</code></a> instead, then call <code>Upload()</code>:</p>
<pre><code>gd_file.SetContentString(attachment)
gd_file.Upload()
</code></pre>
<p><strong>Update</strong></p>
<p><code>SetContentString()</code> won't work if you are dealing with binary data, such as that contained in an image file. As a work-around you can write the data to a temporary file, upload to your drive, then delete the temporary file:</p>
<pre><code>import os
from tempfile import NamedTemporaryFile

tmp_name = None
with NamedTemporaryFile(delete=False) as tf:
    tf.write(part.get_payload(decode=True))
    tmp_name = tf.name    # save the file name
if tmp_name is not None:
    gd_file.SetContentFile(tf_name)
    gd_file.Upload()
    os.remove(tmp_name)
</code></pre>
</div>
<span class="comment-copy">thnks for your answer, i try using <code>SetContentString</code> i have error <code>AttributeError: 'bytes' object has no attribute 'encode'</code></span>
<span class="comment-copy">OK, <code>SetContentString()</code> does not support bytes objects, i.e. binary strings. It expects a <code>str</code> object which is then encoded as UTF8. This will not work because you are dealing with binary data. You can save the attachment to a temporary file first, then use <code>SetContentFile()</code> instead. See updated answer.</span>
<span class="comment-copy">Thank you very much!!!</span>
<span class="comment-copy">No worries. Just one more thing to mention if security is an issue. There is a possible race condition after the file has been written and closed where an attacker could replace the file content with other data. If that's a concern then you need to look at a more secure way to do it.</span>
