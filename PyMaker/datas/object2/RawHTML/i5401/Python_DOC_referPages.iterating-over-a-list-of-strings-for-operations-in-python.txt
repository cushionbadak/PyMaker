<div class="post-text" itemprop="text">
<p>I'm trying to do a rather simple loop in Python 3.6.1 that involves a list of strings. Essentially, I have a dataframe that looks like this:</p>
<pre><code>      X_out  Y_out  Z_in  X_in  Y_in  Z_in      
Year                                                                
1969    4     3     4      4     3     3
1970    2     0     1      3     2     2
1971    3     1     1      0     1     2
1972    2     0     0      3     1     0
</code></pre>
<p>and I'd like to find the net change of X, Y, and Z, making them new columns in this dataframe. </p>
<p>In its simplest form, this could be</p>
<pre><code>df['x_net'] = df['x_in'] - df['x_out']
df['y_net'] = df['y_in'] - df['y_out']
df['z_net'] = df['z_in'] - df['z_out']
</code></pre>
<p>but in actuality, there are about fifteen columns that need to be created in this way. Since it'll be a bear, I figure it's best to put in a function, or at least a loop. I made a list of our initial "root" variables, without the suffixes that looks like this:</p>
<pre><code>root_vars = ['x', 'y', 'z']
</code></pre>
<p>And I think that my code might(?) look something like: </p>
<pre><code>for i in root_vars:
    df['%s_net'] = df['%s_in'] - df['%s_out'] %(root_vars_[i])
</code></pre>
<p>but that's definitely not right. Could someone give me a hand on this one please? </p>
<p>Thank you so much!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the relatively new (<a href="https://docs.python.org/3/whatsnew/3.6.html#pep-498-formatted-string-literals" rel="nofollow noreferrer">Python 3.6</a>) <a href="https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals" rel="nofollow noreferrer">formatted string literals</a>:</p>
<pre><code>for i in root_vars:
    df[f'{i}_net'] = df[f'{i}_in'] - df[f'{i}_out']
</code></pre>
<p>The <code>f</code> prefix before each string causes the <code>{i}</code> to be replaced with the value of the variable <code>i</code>. If you want the code to be usable in Python versions before 3.6, you can go with the more usual formatting:</p>
<pre><code>for i in root_vars:
    df['{}_net'.format(i)] = df['{}_in'.format(i)] - df['{}_out'.format(i)]
</code></pre>
</div>
<span class="comment-copy">It worked! Thank you so much, I really appreciate it!</span>
