<div class="post-text" itemprop="text">
<p>I'm using NodeJS to fire a Python script by way of python-shell package for the cozmo api.</p>
<p>The problem I'm having is when I execute my nodecozmo.py script from the command like it works perfectly.   When I execute the exact same script from my node app, its giving me a syntax error when it executes the py.</p>
<p>Not sure how this could be a syntax error, maybe python-shell package somehow uses an older Python version?  Maybe it doesn't understand handling that syntax?  I tried to go through the source and couldn't see why its causing the issue.</p>
<p><strong>Error</strong></p>
<pre><code>Error:   File "nodecozmo.py", line 16
    def cozmo_program(robot: cozmo.robot.Robot):
                           ^
    SyntaxError: invalid syntax
</code></pre>
<p><strong>Python Script</strong></p>
<pre><code>import time
import cozmo

def cozmo_program(robot: cozmo.robot.Robot):
    robot.move_head(-5)
    time.sleep(3)
    robot.drive_wheels(50, -50)
    robot.move_lift(5)
    time.sleep(3)
    robot.move_lift(-1)
    time.sleep(3)

cozmo.run_program(cozmo_program)
</code></pre>
<p><strong>Node App</strong></p>
<pre><code>var PythonShell = require('python-shell');
PythonShell.run('./nodecozmo.py', function (err) {
    if (err) throw err;
    console.log('finished executing');
  });
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your python script is using <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer">type hinting</a> which is a new syntax introduced in Python 3.5. The <code>def</code> statement</p>
<pre><code>def cozmo_program(robot: cozmo.robot.Robot):
</code></pre>
<p>is saying that the <code>cozmo_program</code> function takes one argument, <code>robot</code>, which should be of type <code>cozmo.robot.Robot</code>. </p>
<p>Since your script, nodecozmo.py, runs without errors from the command line, you must be running it with a version of Python &gt;= 3.5.</p>
<p>Since NodeJS returns a SyntaxError, NodeJS must be running the script Python version &lt; 3.5. Notice how the error message points directly at the colon:</p>
<pre><code>Error:   File "nodecozmo.py", line 16
    def cozmo_program(robot: cozmo.robot.Robot):
                           ^
    SyntaxError: invalid syntax
</code></pre>
<p>Since type hinting is a nicety but not a necessity, you could make your script backwards compatible simply by removing the type hint:</p>
<p>Change </p>
<pre><code>def cozmo_program(robot: cozmo.robot.Robot):
</code></pre>
<p>to </p>
<pre><code>def cozmo_program(robot):
</code></pre>
</div>
<span class="comment-copy">Oh awesome thank you!!  So now im presented with this error:      Error: ImportError: No module named cozmo  Which appears to be where the python script is importing the cozmo package.  Again only throws that error when executing via node, but works perfect when executed via command line.</span>
<span class="comment-copy">Every Python installation has its own directory structure -- in particular, directories where it looks for modules. Your Python3.5+ installation has the <code>cozmo</code> module installed, but your other Python installation does not. You either need to configure NodeJS to run your 3.5+ version of Python, or install the <code>cozmo</code> module into your other (version &lt; 3.5) Python installation.</span>
<span class="comment-copy"><a href="https://github.com/extrabacon/python-shell" rel="nofollow noreferrer">This page</a> shows how to set the <code>pythonPath</code>. Directing the <code>pythonPath</code> to your Python3.5+ executable should fix the problem.</span>
