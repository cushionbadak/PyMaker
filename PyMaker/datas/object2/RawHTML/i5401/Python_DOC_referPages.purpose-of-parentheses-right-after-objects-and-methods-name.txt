<div class="post-text" itemprop="text">
<p>I am just new in Python and have limited knowledge about Object Oriented Programming. Just want to ask a few things about Object, Methods and Function.</p>
<ol>
<li>I noticed that an Objects have parentheses right after its name like <code>book = Workbook()</code> and some have no parenthesis on it. May I know the difference between the two?</li>
<li>Similarly, for methods right after the name of the method <code>b.get_sheet_names()</code> have parentheses. </li>
</ol>
<p>May I know what is the concept behind inclusion of parentheses right after the object name and methods.</p>
</div>
<div class="post-text" itemprop="text">
<p>Parentheses after a name means a function/method is called there.</p>
<p>An object can be created by calling its constructor(<code>__init__</code> function). Constructor is invoked by calling the class itself as a function <code>Workbook()</code></p>
<p>The functions or object methods are called similarly using parentheses.</p>
</div>
<div class="post-text" itemprop="text">
<p>The empty parenthesis indicate a function call with no arguments. In both cases you mention this is consistent with the way you would call the object/member, had they any arguments. </p>
<p><code>circle = Circle(10)
squared = square_me(2)
</code></p>
<p>The first case is special to object oriented programming: it is a constructor call. These are specified by the <code>__init__</code>-method in Python. In this case the constructor takes no arguments. The concept of calling with no arguments makes sense in Python because functions with no arguments typically have observable side-effects, e.g., <code>print_line_of_ones()</code>, or on an object do something based on the object state, e.g., <code>circle.getArea()</code>. In Python a <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">class</a>-member function takes <code>self</code>, the object itself, as first argument.</p>
<p>There are some languages which allow you to omit the parenthesis if there are not arguments (e.g. Scala), but Python requires you to use them, which is reasonable given that it can otherwise be difficult to distinguish them from members, and Python does not statically check this.</p>
</div>
<span class="comment-copy">Parentheses in python mean a function call. For objects, the function is the constructor. Can you show an example of an object with no parentheses?</span>
<span class="comment-copy">You could specify that in Python every object implementing the <code>__call__</code> operator can be invoked like a function. Also empty parentheses mean that there are no arguments to the call or using default arguments.</span>
<span class="comment-copy">It is possible in Python to have the object method without parentheses like b.get_sheet_names ?</span>
<span class="comment-copy">It is possible in Python to have the object method without parentheses like b.get_sheet_names ?</span>
<span class="comment-copy">There is no builtin support for this, and I would not know an easy way to do it. Since functions are essentially just values bound to their name in the <code>__dict__</code> inside the object, maybe there is some hack, but I would not recommend it, and have not seen it used.</span>
