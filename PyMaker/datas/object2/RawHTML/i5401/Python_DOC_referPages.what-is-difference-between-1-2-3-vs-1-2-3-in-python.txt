<div class="post-text" itemprop="text">
<p>In following code, shape of size &amp; randm is same only, 1-D Array (3,)
Then why size=(3, 3, 2) &amp; randm=[-1.10343097 -1.31819984  0.20597956]</p>
<p>Q.1 Why different bracket () vs []
Q.2 What is significant of each bracket () &amp; [] </p>
<pre><code> image = np.array([[[ 0.67826139,  0.29380381],
        [ 0.90714982,  0.52835647],
        [ 0.4215251 ,  0.45017551]],

       [[ 0.92814219,  0.96677647],
        [ 0.85304703,  0.52351845],
        [ 0.19981397,  0.27417313]],

       [[ 0.60659855,  0.00533165],
        [ 0.10820313,  0.49978937],
        [ 0.34144279,  0.94630077]]])

size = np.shape(image)
print (str (size))
print (np.shape(size))

randm = np.random.randn(3)
print (randm)
print (np.shape(randm)) 
</code></pre>
<p>Output- </p>
<pre><code>(3, 3, 2)
(3,)
[-1.10343097 -1.31819984  0.20597956]
(3,)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>image</code> is a multidimensional <code>numpy</code> array.  It is defined via a nested list of lists (the brackets and commas).</p>
<p><code>image.shape</code> is a tuple, and so displays with ().</p>
<p>The other answers, and the supposed duplicate, focus on Python's distinction between lists and tuples.  But this needs a numpy focused answer.</p>
<p>A simple 3d array:</p>
<pre><code>In [244]: x = np.array([[[1,2],[3,4]]])
In [245]: x
Out[245]: 
array([[[1, 2],
        [3, 4]]])
</code></pre>
<p>You can get the shape as a property, or via a function call</p>
<pre><code>In [246]: x.shape
Out[246]: (1, 2, 2)
In [247]: np.shape(x)
Out[247]: (1, 2, 2)
</code></pre>
<p>But the <code>shape</code> does not have a shape property itself.  <code>len(x.shape)</code> would work, since it is a tuple.</p>
<pre><code>In [248]: (x.shape).shape
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&lt;ipython-input-248-b00338a7f4bf&gt; in &lt;module&gt;()
----&gt; 1 (x.shape).shape

AttributeError: 'tuple' object has no attribute 'shape'
</code></pre>
<p><code>np.shape(...shape)</code> is confusing.  <code>np.shape()</code> will first turn its input into an array (if it isn't already) and return the shape of that:</p>
<pre><code>In [249]: np.shape(x.shape)
Out[249]: (3,)
</code></pre>
<p>So I wouldn't normally take this shape of a shape.  However it does demonstrate a key point.  <code>(3,)</code> is a 1 element tuple.  The <code>,</code> is important.  The shape tuple for an 0d array is <code>()</code>.</p>
<p>The next part makes a 3 element array</p>
<pre><code>In [250]: np.random.randn(3)
Out[250]: array([ 2.06265058,  0.87906775, -0.96525837])
In [251]: _.shape
Out[251]: (3,)
In [252]: print(__)
[ 2.06265058  0.87906775 -0.96525837]
</code></pre>
<p>Again, a (3,) shape tuple.  The <code>str</code> display of an array uses the brackets, but omits the commas.  That helps distinguish it from a regular list.</p>
<p>(There is also an array type that displays with (), a structured array. But that's a more advanced topic.)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>(1,2,3) -Tuple
[1,2,3] -List
</code></pre>
<p>Read This for more information about <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">tuple and list</a></p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>()</code> notation means that the data type is of <code>tuple</code> while the <code>[]</code> denotes a <code>list</code>.</p>
<p>Additionally tuples use less memory and are immutable while lists are mutable.</p>
</div>
<span class="comment-copy">() -&gt; This is a tuple data structure, [] -&gt; This is a list</span>
<span class="comment-copy">An even better duplicate: <a href="https://stackoverflow.com/questions/1983/python-what-is-the-difference-between-1-2-3-and-1-2-3-and-when-should-i-us">Python: what is the difference between (1,2,3) and [1,2,3], and when should I use each?</a></span>
<span class="comment-copy">That literally shows up if you copy paste your title into google... o_o</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1983/python-what-is-the-difference-between-1-2-3-and-1-2-3-and-when-should-i-us">Python: what is the difference between (1,2,3) and [1,2,3], and when should I use each?</a></span>
<span class="comment-copy">There is no tuple (creation) shown in the question..</span>
<span class="comment-copy">@user2864740 <code>np.shape</code> returns a tuple.</span>
<span class="comment-copy">Question asked what is difference between (1,2,3) and [1,2,3] So (1,2,3) is tuple and [1,2,3] list.</span>
<span class="comment-copy">@PM2Ring Sure, but I could change the output of FooBaz to look the same :}</span>
<span class="comment-copy">Just saying that such short answers leave a good bit to be desired.</span>
<span class="comment-copy">I changed it after I realized I meant <code>tuple</code></span>
