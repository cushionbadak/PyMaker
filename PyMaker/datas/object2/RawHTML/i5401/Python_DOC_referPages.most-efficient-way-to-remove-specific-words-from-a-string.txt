<div class="post-text" itemprop="text">
<p>Lets say I have the following string,</p>
<pre><code>ing = "2 cup butter, softened"
</code></pre>
<p>and I only want <code>butter</code> from the string (I have done the following so far),</p>
<pre><code>ing.replace('2','').replace('cup','').replace(', ','').replace('softened','')
ing.strip()
</code></pre>
<p><strong>EDIT</strong></p>
<pre><code>    Traceback (most recent call last):
  File "parsley.py", line 107, in &lt;module&gt;
    leaf.write_ingredients_to_csv()
  File "parsley.py", line 91, in write_ingredients_to_csv
    out = re.sub(words, '', matched)
  File "C:\Users\Nikhil\Anaconda3\lib\re.py", line 191, in sub
    return _compile(pattern, flags).sub(repl, string, count)
  File "C:\Users\Nikhil\Anaconda3\lib\re.py", line 301, in _compile
    p = sre_compile.compile(pattern, flags)
  File "C:\Users\Nikhil\Anaconda3\lib\sre_compile.py", line 562, in compile
    p = sre_parse.parse(p, flags)
  File "C:\Users\Nikhil\Anaconda3\lib\sre_parse.py", line 855, in parse
    p = _parse_sub(source, pattern, flags &amp; SRE_FLAG_VERBOSE, 0)
  File "C:\Users\Nikhil\Anaconda3\lib\sre_parse.py", line 416, in _parse_sub
    not nested and not items))
  File "C:\Users\Nikhil\Anaconda3\lib\sre_parse.py", line 752, in _parse
    len(char) + 1)
sre_constants.error: unknown extension ?| at position 23
</code></pre>
<p>Is there a more efficient way of doing this in Python 3? What I have shown is just one example of the string that I am processing. There are many more strings with different words that I need to remove such as <code>cups</code>,<code>cup</code>,<code>tablespoons</code> and <code>teaspoon</code>. I am using the same approach to eliminate the words from the string, so is there a better way of doing this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You may want to use regular expressions.</p>
<pre><code>import re

words = r'oz|lbs?|cups?|tablespoons?|tea‌​spoons?|softened'
words_rm = r'slices?|shredded|sheets?|cans?|\d ?g\b'
other = r'[\d,;#\(\)\[\]\.]'
ing = "2 cup butter, softened"
out = re.sub(words, '', ing)
out = re.sub(words_rm, '', out)
out = re.sub(other, '', out)
out.strip()
# returns:
'butter'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">Regular Expressions</a> are super useful for parsing through strings. With them you can search for all the times your desired string(s) are matched and make a new string just out of those.</p>
</div>
<span class="comment-copy">so what is the common format of the strings? otherwise you cannot come up with a generic way to deal with all of it</span>
<span class="comment-copy">You may have a look at this: <a href="https://stackoverflow.com/questions/25346058/removing-list-of-words-from-a-string" title="removing list of words from a string">stackoverflow.com/questions/25346058/…</a></span>
<span class="comment-copy">Or this : <a href="https://stackoverflow.com/questions/6116978/how-to-replace-multiple-substrings-of-a-string" title="how to replace multiple substrings of a string">stackoverflow.com/questions/6116978/…</a></span>
<span class="comment-copy">@johnII That's the problem, there is no specific format for the string...</span>
<span class="comment-copy">well then for the above only you can use split e.g. ing.split(',')[0].split(' ')[-1]</span>
<span class="comment-copy">I get this error, <code>unknown extension ?| at position 23</code>. How do I solve it?</span>
<span class="comment-copy">I would need the full traceback</span>
<span class="comment-copy">Pls see the edit</span>
<span class="comment-copy">What are you using for <code>words</code>?</span>
<span class="comment-copy">I am using, <code>words = r'oz?|lbs?|cups?|lb?|.?|(?|cup?|tablespoons?|tablespoon?|teaspoons?|teaspoon?|)'</code> and <code>words_rm = r'slices?|slice?|shredded?|sheets?|sheet?|g ?|cans ?|can'</code></span>
