<div class="post-text" itemprop="text">
<p>I'm trying to send a C++ struct over a UDP socket to a Python app.</p>
<p>This is the C++ code to send the struct:</p>
<pre><code>// my struct
struct S_telemetryPacket  {
    // sensors
    float temperatureSensor1;
    float accelerometer1_x;
    float accelerometer1_y;
    float accelerometer1_z;
    float batteryVoltage1;
    float powerDraw1;

    // motors
    int motor1;
    int motor2;
    int motor3;
    int motor4;

} S_telemetryPacket;

// ... some other code populates the struct

// then the struct is sent over UDP
int res = sendto(relaySocket, (char *)&amp;S_telemetryPacket, sizeof(S_telemetryPacket), NULL, (SOCKADDR *)&amp;addrGroundstation, addrGroundstationSize);
</code></pre>
<p>And this is the raw data received in Python:</p>
<pre><code>\x00P\x03E\x00\x00\xfaD\x00\x00\x00\x00\x00@\xfbD\x00`\xfbD\x00@\x03Ed\x00\x00\x00e\x00\x00\x00n\x00\x00\x00o\x00\x00\x00
</code></pre>
<p>When I try to unpack it using the struct library, I get an error.</p>
<pre><code>print struct.unpack('eeeeeeiiii', raw_data)
</code></pre>
<p>This error:</p>
<blockquote>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
struct.error: bad char in struct format
</code></pre>
</blockquote>
<p>Can anyone shed some light? The data I receive looks weird, there are symbols I wouldn't expect like `, or @, or o, etc. </p>
<p>Could it be something wrong with how the struct is sent from the C++ side?</p>
</div>
<div class="post-text" itemprop="text">
<p>The error message says:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
struct.error: bad char in struct format
</code></pre>
<p>This states that format string is wrong.</p>
<p>You should try:</p>
<pre><code>struct.unpack('ffffffiiii', raw_data)
</code></pre>
<p>The <a href="https://docs.python.org/3/library/struct.html#format-characters" rel="nofollow noreferrer"><code>e</code> format string</a> is for a fairly esoteric 16 bit float, and is unlikely to be what you need.  In addition it is not supported on <a href="https://docs.python.org/2/library/struct.html#format-characters" rel="nofollow noreferrer">Python 2</a>.</p>
<h3>Test Code:</h3>
<pre><code>import struct

raw_data = b'\x00P\x03E\x00\x00\xfaD\x00\x00\x00\x00\x00@\xfbD\x00`' \
           b'\xfbD\x00@\x03Ed\x00\x00\x00e\x00\x00\x00n\x00\x00\x00o' \
           b'\x00\x00\x00'
print(struct.unpack('ffffffiiii', raw_data))
</code></pre>
<h3>Results:</h3>
<pre><code>(2101.0, 2000.0, 0.0, 2010.0, 2011.0, 2100.0, 100, 101, 110, 111)
</code></pre>
</div>
<span class="comment-copy">do you extract all the headers ( UDP ,...) ?</span>
<span class="comment-copy">Ah, great that works. I misread the table and used e instead of f...For some reason, the third data element (0.0) is wrong though. It should be 2001. All the other values are correct. Any ideas why?</span>
<span class="comment-copy">It looks like that 0 is in your data... Characters 8-11 are all <code>\x00</code>. At this point I would check the sender...</span>
<span class="comment-copy">Every 4 characters is one float.  The first 4 characters are <code>\x00P\x03E</code> and are <code>2101.0</code></span>
<span class="comment-copy">Perfect. That was it. The sender had a typo and it was using the wrong value... Thanks for the help!</span>
