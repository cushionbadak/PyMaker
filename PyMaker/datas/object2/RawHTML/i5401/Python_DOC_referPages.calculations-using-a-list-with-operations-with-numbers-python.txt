<div class="post-text" itemprop="text">
<p>I am trying to use a list that has operations attached to them, but i can't get the numbers out of the list. Here is the list.</p>
<pre><code>mylist=["+1", "-2", "*2"]
</code></pre>
<p>I was wondering if there was a way to put them together as a float, and then do the operation so it would do 1-2*2 and output the answer. Smaller the better. thanks :) the expected output is -2.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <code>dict</code> to map symbols to operations (that are all defined in <a href="https://docs.python.org/3/library/operator.html" rel="nofollow noreferrer"><code>operator</code></a>) and <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a> to parse the strings in order to avoid evil <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval</code></a>. This applies the operations in the list from left to right, regardless of mathematical operator precedence:</p>
<pre><code>import re
from operator import add, sub, mul, truediv  # use 'floordiv' for integer division

def calc(lst):
    ops = {'+': add, '-': sub, '*': mul, '/': truediv}
    result = 0
    for x in lst:
        op, num = re.match(r'([+\-\*/])(\d+)', x).groups()
        result = ops[op](result, int(num))
    return result

&gt;&gt;&gt; calc(['+1', '-2', '*2'])
-2
&gt;&gt;&gt; calc(['+1', '-2', '*2', '+7', '*3'])
15
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>By treating your example as a string, it is possible to compute the output after each operation listed, assuming the input is treated with precedence from left to right:</p>
<pre><code>from collections import namedtuple
import re
token = namedtuple('token', 'operator, value')
mylist="[+1, -2, *2]"
data = re.findall('[\+\-\*]|\d+', mylist)
final_data = [data[i:i+2] for i in range(0, len(data), 2)] #create tokenized list
tokens = [token(a, int(b)) for a, b in final_data] 
operations = {'+':lambda x,y:x+y, '-':lambda x, y:x-y, '*':lambda x, y:x*y}
total_val = 0
for token in tokens:
   total_val = operations[token.operator](total_val, token.value)
</code></pre>
<p>Output:</p>
<pre><code>-2
</code></pre>
</div>
<span class="comment-copy">These are strings?</span>
<span class="comment-copy"><code>mylist=[+1, -2, *2]</code> is illegal in Python.</span>
<span class="comment-copy">What is the expcted result for the given list: -2 or -3</span>
<span class="comment-copy">@schwobaseggl  -2</span>
<span class="comment-copy">@Alpha You should put that in your post as it clears up the precedence of operations</span>
<span class="comment-copy">Does +1-2*2 really evaluate to -2?</span>
<span class="comment-copy">@DYZ This assumes precedence from left to right</span>
<span class="comment-copy">@DYZ ...which the OP expects, as it turned out :)</span>
<span class="comment-copy">I guess you win, then :)</span>
<span class="comment-copy">Why does 1-2*2 evaluate to -2?</span>
<span class="comment-copy">@DYZ unless the OP clarifies with regard to the proper order, this answer treats the data with precedence from left to right, as I believe adding <code>(</code> and <code>)</code> is out of scope of this question.</span>
