<div class="post-text" itemprop="text">
<p>As title, I have been trying to read text from file, convert to <code>int</code> and store it in a list. My text file look like this:</p>
<pre><code>1,2
3,4
5,6
</code></pre>
<p>I want to read this file, put each pair of numbers into a list <code>m</code>, and store those lists in a bigger list <code>lis</code>. Here is my attempt:</p>
<pre><code>def read_file():        
    lis = []
    m = [0,0]

    with open("data.txt") as f:
        for line in f:
            m[0], m[1] = line.split(",")    # assign to list m
            m[0] = int(m[0])   # cut off '\n' and for later use
            m[1] = int(m[1])   
            lis.append(m)      # store in lis

    print lis
</code></pre>
<p>I expect the <code>lis</code> to be like this:</p>
<pre><code>[[1, 2], [3, 4], [5, 6]]
</code></pre>
<p>But instead, it is:</p>
<pre><code>[[5, 6], [5, 6], [5, 6]]
</code></pre>
<p>I have tried <code>insert</code> instead of <code>append</code> but it seems like that's not where it has problems. I need some help - thank you in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>You are reusing the same list <code>m</code> in each iteration of the loop, each time overwriting the values set in the previous iteration. In the end, <code>lis</code> holds many references to the same list.</p>
<p>Instead, assign a new value to <code>m</code> <em>as a whole</em> in the loop:</p>
<pre><code>for line in f:
    m = [0,0]
    m[0], m[1] = line.split(",")
    m[0] = int(m[0])
    m[1] = int(m[1])   
    lis.append(m)
</code></pre>
<p>Or shorter:</p>
<pre><code>for line in f:
    m = line.split(",")
    m[0] = int(m[0])
    m[1] = int(m[1])   
    lis.append(m)
</code></pre>
<p>Or even shorter, using map:</p>
<pre><code>for line in f:
    m = list(map(int, line.split(",")))
    lis.append(m)
</code></pre>
<p>Or even more shorter, using a list comprehension:</p>
<pre><code>lis = [list(map(int, line.split(","))) for line in f]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def read_file():        
    lis = []
    with open("data.txt") as f:
        for line in f:
            m, n = line.split(",")    
            lis.append([int(m), int(n)])      

    print lis
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In <code>lis</code> all index reference to one list <code>m</code>. If any update in <code>m</code> is takes place, <code>m</code> is update every where  </p>
<p><a href="https://i.stack.imgur.com/i9mol.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/i9mol.png"/></a> </p>
<p>Try this</p>
<pre><code>lis.append( list(map(int,line.split(","))))    
</code></pre>
<p><strong>Output</strong></p>
<blockquote>
<p>[['1', '2'], ['3', '4'], ['5', '6']]</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>csv.reader</code> object instead which uses <code>,</code>(comma) as default field separator:</p>
<pre><code>import csv

with open('data.txt') as f:
    reader = csv.reader(f)
    result = [list(map(int, lst)) for lst in reader]
    print(result)
</code></pre>
<p>The output:</p>
<pre><code>[[1, 2], [3, 4], [5, 6]]
</code></pre>
<p><a href="https://docs.python.org/3/library/csv.html?highlight=csv#csv.reader" rel="nofollow noreferrer">https://docs.python.org/3/library/csv.html?highlight=csv#csv.reader</a></p>
</div>
<span class="comment-copy">You are reusing and overwriting the values in the very same instance <code>m</code>.</span>
<span class="comment-copy"><code>m = [0, 0]</code> is the only time you create a sublist, so you've using the same one</span>
<span class="comment-copy">Thank you! Map is really clever in this case.</span>
<span class="comment-copy">The best code in my opinion sadly has no text for explanation... I would even suggest to step away from limiting the number of columns to 2 and use a list comprehension like <code>lis.append([int(i.strip()) for i in line.split(',')])</code>.</span>
<span class="comment-copy">Thank you. This is really clear!</span>
<span class="comment-copy">Nice illustration, but I don't think <code>append(m+[])</code> is the best way to solve the issue. IMHO, better not re-use <code>m</code> at all.</span>
<span class="comment-copy">While using <code>csv.reader</code> is certainly better, this sounds as if this in itself would solve the problem, but it does not. The problem is with reusing <code>m</code>, which, without any explanation, OP could do again with a <code>csv.reader</code>.</span>
