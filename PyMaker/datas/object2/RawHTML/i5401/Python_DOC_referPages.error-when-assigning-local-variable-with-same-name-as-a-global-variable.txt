<div class="post-text" itemprop="text">
<p>I am seeing an error when assigning either a global or an enclosing-function local to a local variable with the same name.  The code below illustrates this issue, where <code>f()</code> runs fine, while <code>g()</code> raises an error.  It seems like python knows that <code>a</code> is being assigned locally, so it says that all references to <code>a</code> are now local, even the references before <code>a</code> is actually assigned locally.  What explains this behavior?  I am running Python 2.7.12 :: Anaconda 4.2.0 (64-bit).</p>
<pre><code>In [18]: a = 1
    ...: 
    ...: def f():
    ...:   x = a
    ...:   print x
    ...: 
    ...: def g():
    ...:   a = a
    ...:   print a
    ...:   

In [19]: f()
1

In [20]: g()
---------------------------------------------------------------------------
UnboundLocalError                         Traceback (most recent call last)
&lt;ipython-input-20-d65ffd94a45c&gt; in &lt;module&gt;()
----&gt; 1 g()

&lt;ipython-input-18-f3d970bdaa2b&gt; in g()
      6 
      7 def g():
----&gt; 8   a = a
      9   print a
     10 

UnboundLocalError: local variable 'a' referenced before assignment
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The short answer is that, within g(), you need to declare</p>
<pre><code>global a
</code></pre>
<p>if you want to be able to modify "a" from within a function and have this effect globally visible. However, in your case, the effect of using "a" within g() is to convert this variable name to refer to a local-scope variable, which then hides the global "a" which you're attempting to use on the righthand side of your assignment, triggering the exception. This is more fully explained <a href="https://docs.python.org/3/faq/programming.html#why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value" rel="nofollow noreferrer">here</a>. There is also a Python <a href="https://docs.python.org/3/faq/programming.html#what-are-the-rules-for-local-and-global-variables-in-python" rel="nofollow noreferrer">FAQ</a> which explains the rules that make f() work without the need for the "global a".</p>
</div>
<span class="comment-copy">Always Function has scopes and bound to its variable.<a href="https://stackoverflow.com/questions/291978/short-description-of-the-scoping-rules">refer this link</a></span>
<span class="comment-copy">I see no scoping issues here.  When <code>a</code> is first referenced, there are no local definitions of <code>a</code>, so in the answer you referenced it should move on to the locally-enclosed variables and then global variables, where <code>a</code> lives.</span>
<span class="comment-copy">Whats the long answer? :)</span>
<span class="comment-copy">Link to FAQ clarified, thanks.</span>
