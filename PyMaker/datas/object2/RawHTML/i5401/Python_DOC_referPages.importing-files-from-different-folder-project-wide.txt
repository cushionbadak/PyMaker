<div class="post-text" itemprop="text">
<p>There is a popular Python question called <a href="https://stackoverflow.com/questions/4383571/importing-files-from-different-folder">Importing files from different folder</a>.</p>
<p>But the top answer there mentions adding stuff to "some_file.py", and that will obviously only apply to imports inside that file.</p>
<p>What if I want to specify an additional dir to import from, project-wide?</p>
<p>I don't want to modify PYTHONPATH, as I believe a per-project solution is cleaner.</p>
<p>I don't want to use python packages for this, because I feel they'll probably just complicate stuff. E.g. maybe I'll need to manually recompile .py files into .pyc files every time I make a change to the code in the other folder.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>What if I want to specify an additional dir to import from, project-wide?</p>
</blockquote>
<h2>Solution 1: Package installed in develop mode</h2>
<p><a href="https://docs.python.org/3/distutils/setupscript.html" rel="nofollow noreferrer">Create a regular package with  <code>setup.py</code></a> and install it with <code>-e</code> option:</p>
<pre><code>python -m pip install -e /path/to/dir_with_setup_py/
</code></pre>
<blockquote>
<p>-e, --editable    Install a project in editable mode (i.e. setuptools "develop mode") from a local project
                                path or a VCS url.</p>
</blockquote>
<p>Now, as soon as you update your code, the new version will be used at import
without reinstalling anything.</p>
<h2>Solution 2: Dynamically modify <code>sys.path</code></h2>
<p>You can add as many directories dynamically to the search path for Python packages as you want. Make this the very first lines of code you execute:</p>
<pre><code>import sys

sys.path.append('my/path/to/my/file1')
sys.path.append('my/path/to/my/file2')
</code></pre>
<p>or to make the first to be found:</p>
<pre><code>sys.path.insert(0, 'my/path/to/my/file1')
sys.path.insert(0, 'my/path/to/my/file2')
</code></pre>
<p>Now the files:</p>
<pre><code>my/path/to/my/file1/myscript1.py
my/path/to/my/file2/myscript2.py
</code></pre>
<p>can be imported anywhere in your project:</p>
<pre><code>import myscript1
import myscript2
</code></pre>
<p>No need to modify <code>sys.path</code> again as long as this Python process is running.</p>
</div>
<span class="comment-copy">Dynamically alter python path at run time?</span>
<span class="comment-copy">No need to <i>... manually recompile .py  files into .pyc files every time I make a change to the code in the other folder.</i>. Just use a package that is what they are for.</span>
<span class="comment-copy">@MikeMÃ¼ller: Ok, I just read <a href="https://www.pythoncentral.io/how-to-create-a-python-package/" rel="nofollow noreferrer">this tutorial</a> and it doesn't say how another project can find a package that I've created. And <a href="https://python-packaging.readthedocs.io/en/latest/" rel="nofollow noreferrer">this one</a> explains how to "make trouble-free packages for community use" which is not what I want.</span>
