<div class="post-text" itemprop="text">
<p>While reading the docs, I found out that the whole difference between <code>re.match()</code> and <code>re.search()</code> is that <code>re.match()</code> starts checking only from the beginning of the string.</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; a = 'abcde'
&gt;&gt;&gt; re.match(r'b', a)
&gt;&gt;&gt; re.search(r'b', a)
&lt;_sre.SRE_Match object at 0xffe25c98&gt;
&gt;&gt;&gt; re.search(r'^b', a)
&gt;&gt;&gt;
</code></pre>
<p><strong>Is there anything I am misunderstanding, or is there no difference at all between <code>re.search('^' + pattern)</code> and <code>re.match(pattern)</code>?</strong></p>
<p>Is it a good practice to only use <code>re.search()</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>You should take a look at <a href="https://docs.python.org/3/library/re.html#search-vs-match" rel="nofollow noreferrer">Python's <code>re.search()</code> vs. <code>re.match()</code></a> document which clearly mentions about the other difference which is:</p>
<blockquote>
<p>Note however that in <a href="https://docs.python.org/3/library/re.html#re.MULTILINE" rel="nofollow noreferrer"><code>MULTILINE</code></a> mode <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>match()</code></a> only matches at the beginning of the string, whereas using <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><code>search()</code></a> with a <strong>regular expression beginning with '^' will match at the beginning of each line</strong>.</p>
<blockquote>
<p><code>&gt;&gt;&gt; re.match('X', 'A\nB\nX', re.MULTILINE)  # No match</code></p>
<p><code>&gt;&gt;&gt; re.search('^X', 'A\nB\nX', re.MULTILINE)  # Match</code></p>
<p><code>&lt;_sre.SRE_Match object; span=(4, 5), match='X'&gt;</code></p>
</blockquote>
</blockquote>
<p>The first difference (for future readers) being:</p>
<blockquote>
<p>Python offers two different primitive operations based on regular expressions: <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer"><code>re.match()</code></a> checks for a match only at the beginning of the string, while <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><code>re.search()</code></a> checks for a match anywhere in the string (this is what Perl does by default).</p>
<blockquote>
<p>For example:</p>
<p><code>&gt;&gt;&gt; re.match("c", "abcdef")    # No match</code></p>
<p><code>&gt;&gt;&gt; re.search("c", "abcdef")   # Match</code></p>
<p><code>&lt;_sre.SRE_Match object; span=(2, 3), match='c'&gt;</code></p>
</blockquote>
<p><strong>Regular expressions beginning with '^' can be used with <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><code>search()</code></a> to restrict the match at the beginning of the string</strong>:</p>
<blockquote>
<p><code>&gt;&gt;&gt; re.match("c", "abcdef")    # No match</code></p>
<p><code>&gt;&gt;&gt; re.search("^c", "abcdef")  # No match</code></p>
<p><code>&gt;&gt;&gt; re.search("^a", "abcdef")  # Match</code></p>
<p><code>&lt;_sre.SRE_Match object; span=(0, 1), match='a'&gt;</code></p>
</blockquote>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>If you look at this from a <em>code golfing</em> perspective, I'd say there is some use in keeping the two functions separate.</p>
<p>If you're looking from the beginning of the string, <code>re.match</code>, would be preferable to <code>re.search</code>, because the former has one character less in its name, thus saving a byte. Furthermore, with <code>re.search</code>, you also have to add the start-of-line anchor <code>^</code> to signify matching from the start. You don't need to specify this with <code>re.match</code> because it is implied, further saving another byte.</p>
</div>
