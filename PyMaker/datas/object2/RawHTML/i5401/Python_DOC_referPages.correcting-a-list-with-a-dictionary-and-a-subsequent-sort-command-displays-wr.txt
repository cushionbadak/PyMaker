<div class="post-text" itemprop="text">
<p>sorry for the bad title. I am new to programming and I could not come up with a better description. </p>
<p>So, I have this code:</p>
<pre><code>umw = {'T':10, 'J':11, 'Q':12, 'K':13, 'A':14}

def card_ranks(ranks):
    "Return a list of the ranks, sorted with higher first."
    for i in ranks:
        if i in umw:
            index = ranks.index(i)
            ranks[index] = str(umw[i])

    ranks.sort(reverse = True)
    return ranks

print(card_ranks(['A', '3', '4', 'K'])) #should output [14, 13, 4, 3]
</code></pre>
<p>This gives me the following result: </p>
<pre><code>['4', '3', '14', '13']
</code></pre>
<p>clearing the "reverse = True" gives the following:</p>
<pre><code>['13', '14', '3', '4']
</code></pre>
<p>If i do something like that:</p>
<pre><code>r = card_ranks(['A', '3', '4', 'K'])
r[0] -&gt; gives me '4'
but this doesnt work again:
print(sorted(r)) -&gt; gives me ['4', '3', '14', '13'] all over again.
</code></pre>
<p>So it seems, that the .sort() command views the 13 &amp; 14 as a unit and the 3 &amp; 4. </p>
<p>Could somebody explain why that is?  </p>
<p>Thanks alot!</p>
</div>
<div class="post-text" itemprop="text">
<p>You are sorting strings where <code>'11'</code> comes before <code>'3'</code>. The following <a href="https://docs.python.org/2/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> call deals with the necessary type conversion:</p>
<pre><code>def card_ranks(ranks):
    return sorted((umw[c] if c in umw else int(c) for c in ranks), reverse=True)

&gt;&gt;&gt; card_ranks(['A', '3', '4', 'K'])
[14, 13, 4, 3]
</code></pre>
<p>For every string in <code>ranks</code>, the generator expression produces the corresponding value in the <code>umw</code> dict or, as fallback, turns the string into an <code>int</code>, such that a proper numerical, non-lexicographical comparison is possible.</p>
</div>
<div class="post-text" itemprop="text">
<p>You're sorting them lexicographically, as strings rather than numbers.  You could convert them to integers first, or you could expand your <code>umw</code> dictionary:</p>
<pre><code>umw = {str(i): i for i in range(2, 10)}
umw.update({'T':10, 'J':11, 'Q':12, 'K':13, 'A':14})

def card_ranks(ranks):
    return sorted(ranks, key=umw.get, reverse=True)

card_ranks(['A', '3', '4', 'K'])
# ['A', 'K', '4', '3']
</code></pre>
<p>This uses the <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>dict.get</code></a> method as a <a href="https://docs.python.org/3/howto/sorting.html#key-functions" rel="nofollow noreferrer">key function</a> to guide the sorting without changing the values being sorted.</p>
</div>
<div class="post-text" itemprop="text">
<p>It does not see them as a unit, it compares the charakter for charakter:
<code>'1'&lt;'3'&lt;'4'</code>, so the ranking is <code>'13'&lt;'14'&lt;'3'&lt;'4'</code></p>
<p>You want all of them to be numbers, so change the following lines:</p>
<pre><code>ranks[index] = str(umw[i])
</code></pre>
<p>to</p>
<pre><code>ranks[index] = umw[i]
</code></pre>
<p>and:</p>
<pre><code>print(card_ranks(['A', '3', '4', 'K']))
</code></pre>
<p>to</p>
<pre><code>print(card_ranks(['A', 3, 4, 'K']))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ul>
<li>Because the list elements are string that's why </li>
<li>while sorting its taking in account every character i.e. every digit in the number </li>
<li>Which means every string char is sorted by its first character and then by its next character </li>
<li><p>Which means <code>"233" &lt; "3"</code> and <code>"1111" &lt; "233"</code></p>
<pre><code>umw = {'T':10, 'J':11, 'Q':12, 'K':13, 'A':14}

def card_ranks(ranks):
    "Return a list of the ranks, sorted with higher first."
    for i in ranks:
        if i in umw:
            index = ranks.index(i)
            ranks[index] = str(umw[i])
    ranks = list(map(int, ranks))   # The line to be added
    ranks.sort(reverse = True)
    return ranks

print(card_ranks(['A', '3', '4', 'K'])) #sh
</code></pre>
<ul>
<li>You need to convert the list elements to int by <code>ranks = list(map(int, ranks))</code> before sorting the list</li>
</ul></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>ranks[index] = str(umw[i])
</code></pre>
<p>You are saving the values as strings instead of integers.  And it is sorting them as strings.</p>
<p>Try </p>
<pre><code>ranks[index] = int(umw[i])
</code></pre>
</div>
<span class="comment-copy">because the string <code>"13"</code> is not the same as the number <code>13</code>.</span>
<span class="comment-copy">Hey Patrick, thank you for your answer. I especially like the first line. Is this something called a Dictionary Comprehension? I know list comprehensions, but never saw something like that...</span>
<span class="comment-copy">Yes, <code>{str(i): i for i in range(2, 10)}</code> is a dictionary comprehension.</span>
