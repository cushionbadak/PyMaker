<div class="post-text" itemprop="text">
<p>So I have two datetime ordinals, StartDateOrdinal and EndDateOrdinal, and I want to loop through these dates with a step 3. This works just fine, but I notice that the a variable returns an integer instead of an ordinal, and this is a problem for me as I want to retrieve these dates with the datetime.year, .month, and .day methods, which obviously isn't possible with an integer.</p>
<p>Any simple way around this? Either by converting the integer back to a datetime object, or by looping through datetimes some other way. Thanks!</p>
<pre><code>DateRange = range(StartDateOrdinal, EndDateOrdinal, 3)
for a in DateRange
    year = a.year
    month = a.month
    day = a.day
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The essence here is that as you call methods on various objects, you may change the type of object. In Python, all objects have methods and attributes associated with them, but each type of object has different methods/attributes. </p>
<p>The <code>.toordinal()</code> method on a <code>datetime</code> object returns integers (<code>int</code>) so your <code>StartDateOrdinal</code> object is no longer a <code>datetime</code> object.
<code>int</code> does not have a <code>.fromordinal()</code> method. That method is found in the datetime library.</p>
<p>This should solve your problem:</p>
<pre><code>import datetime

# I am gonna use two sample dates: Jan 1, 2018 and Mar 1, 2018

StartDateOrdinal = datetime.datetime(2018, 1, 1).toordinal()
# produced the int: 736695

EndDateOrdinal = datetime.datetime(2018, 3, 1).toordinal()
# produced the int: 736754

DateRange = range(StartDateOrdinal, EndDateOrdinal, 3)
for a in DateRange:

    # convert the integer (int) called a back into a datetime object
    date = datetime.datetime.fromordinal(a)
    year = date.year
    month = date.month
    day = date.day

    # Let's print the results to ensure we got what we expected...
    print(year, month, day)

# outputs...
2018 1 1
2018 1 4
2018 1 7
2018 1 10 
... etc
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That's because you're not iterating through <code>datetime</code> types. When you get <code>StartDateOrdinal</code> and <code>EndDateOrdinal</code> - they are integer types and not date type types. For example</p>
<pre><code>import datetime as dt
x = dt.date(2014,12,11)
y = dt.date(2014,12,31)
a = range(x,y,3) # this wont work as range needs integers to be passed
</code></pre>
<p>So instead you do</p>
<pre><code>DateRange = range(x.ordinal(),y.ordinal(),3)
</code></pre>
<p>inside the loop you convert it back to a datetime object and then use the methods to get month, year, and date</p>
<pre><code>for a in DateRange:
    year = dt.date.fromordinal(a).year
    month = dt.date.fromordinal(a).month
    day = dt.date.fromordinal(a).day
</code></pre>
<p>If you already have the ordinal dates, just <code>import datetime as dt</code> and use the changes within the loop</p>
</div>
<span class="comment-copy">date.fromordinal</span>
<span class="comment-copy">By "datetime ordinals" presumably you mean the result of calling <a href="https://docs.python.org/3/library/datetime.html#datetime.date.toordinal" rel="nofollow noreferrer"><code>toordinal</code></a>, so why not try... <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.fromordinal" rel="nofollow noreferrer"><code>fromordinal</code></a>?</span>
<span class="comment-copy">I tried to do that myself, it gave me the answer "int has no object "fromordinal". I'm probably just dumb here but can you show me how to do it in this example?</span>
<span class="comment-copy">It's a class method on <code>datetime.datetime</code>, not an instance method on <code>int</code>. Hence the <i>"classmethod"</i> in the docs. Take a look at the examples of another class method just above.</span>
<span class="comment-copy">Perfect, thank you! :)</span>
