<div class="post-text" itemprop="text">
<p>Here I am making attempts to create a code what would delete files in a folder according to the mask. All files what include 17 should be removed File name format is ??_????17*.*, where ? - Any symbol 1..n,A..z, _ and 17 - are in any files (others contain 18, as well) and its extension doesn't matter. Certain example of a file AB_DEFG17Something.Anything - Copy (2).txt</p>
<pre><code>import os
import re

dir_name = "/Python/Test_folder"         # open the folder and read files
testfolder = os.listdir(dir_name)

def matching(r, s):                      # condition if there's nothing to match
match = re.search(r, s)
if match:
return match.group()
return "Files don't exist!"

matching(r'^\w\w\[_]\w\w\w\w\[1]\[7]\w+\[.]\w+', testfolder)  # matching the file's mask

for item in testfolder.index(matching):
if item.name(matching, s):
os.remove(os.path.join(dir_name, item))

# format of filenames not converted :  ??_????17*.* 
# convert for python separarately   :  [\w][\w][_\w][\w][\w][\w]\[1]\[7][\w]+[\.][\w]+
# ? - Any symbol 1..n,A..z \w repeating is * 
# * - Any number of symbols 1..n, A..z
# _ and 17 - in any files `
</code></pre>
<p>There are a few mistakes, as well. </p>
<blockquote>
<p>File "D:\Python\Test_folder\Remover v2.py", line 14, in 
    matching(r'\w\w[_]\w\w\w\w[1][7]\w+[.]\w+', testfolder) # matching the file's mask
  ï¿¼ File "D:\Python\Test_folder\Remover v2.py", line 9, in matching
    match = re.search(r, s)
  File "c:\Program Files (x86)\Wing IDE Personal 6.0\bin\runtime-python2.7\Lib\re.py", line 146, in search
    return _compile(pattern, flags).search(string)</p>
</blockquote>
<p>I'm a beginner and with amateurish approach would like to get experience in PY, parallel learning details. What am I doing wrong? Any help would be useful. Thx</p>
</div>
<div class="post-text" itemprop="text">
<p>Don't reinvent the wheel, rather use <a href="https://docs.python.org/2/library/glob.html" rel="noreferrer"><strong><code>glob()</code></strong></a> instead:</p>
<pre><code>import os
from glob import glob

for file in glob('/Python/Test_folder/AB_CDEF17*.*'):
    os.remove(file)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/glob.html#glob.glob" rel="nofollow noreferrer">glob.glob</a></p>
<pre><code>for filename in glob.glob(os.path.join(dirname, "AB_CDEF17*.*")):
    try:
        # Trying to remove a current file
        os.remove(os.path.join(dirname, filename))
    except EnvironmentError:
        # You don't have permission to do it
        pass
</code></pre>
<p>Using <a href="https://docs.python.org/3/library/os.html#os.scandir" rel="nofollow noreferrer">os.scandir</a> and <a href="https://docs.python.org/3/library/re.html#re.match" rel="nofollow noreferrer">re.match</a></p>
<pre><code>pattern = re.compile(r"AB_CDEF17\w+\.\w+")
for filename in os.scandir(dirname):
    if pattern.match(filename):
        try:
            os.remove(os.path.join(dirname, filename))
        except EnvironmentError:
            pass
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the following command directly from your shell:</p>
<pre><code>cd $PATH; for inode in $(ls -il AB_CDEF17*.* | awk '{print $1}'); do find . -type f -inum $inode -exec rm -i {} \;; done
</code></pre>
<ul>
<li><code>cd $PATH;</code> go to the folder in question</li>
<li><code>$(ls -il AB_CDEF17*.* | awk '{print $1}')</code> will print all the inumbers of the files in your current directory, I am using this detour <strong>since it looks like there are spaces inside the filenames</strong>, therefore <code>rm</code> command will not work properly on them.</li>
<li><code>find . -type f -inum $inode -exec rm -i {} \;;</code> find the files based on their inumber and delete them by asking you permission.</li>
</ul>
<p>if you are sure about what you do and you really want to embed it in some python code:</p>
<pre><code>from subprocess import call
call('cd $PATH; for inode in $(ls -il AB_CDEF17*.* | awk '{print $1}'); do find . -type f -inum $inode -exec rm -f {} \;; done') 
</code></pre>
<p><strong>Watch out:</strong> by putting <code>rm -f</code> the files will be deleted without asking your confirmation </p>
</div>
<div class="post-text" itemprop="text">
<p>You can try <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">glob</a> solution</p>
<p>For example,these are files in folder</p>
<pre><code>~/Test-folder$ ls *.txt -1
AB_DEFG17Sitanything.n.txt
AB_DEFG17SOManything.copy(2).txt
AB_DEFG17SOManything.nis.txt
AB_DEFG17SOManything.n.txt
AB_DEFG18SOManything.n.txt
AB_DEFG28SOManything.n.txt
AB_PIZG17SOManything.piz.txt
AB_PIZG28SOManything.n.txt
AB_PIZG76SOManything.n.txt
</code></pre>
<p>My code</p>
<pre><code>import glob
r = [f for f in glob.glob("*.txt") if "AB_DEFG" in f or "17" in f]
for f in r:
    print (f)
</code></pre>
<p>You will get</p>
<pre><code>AB_DEFG17SOManything.n.txt
AB_DEFG17SOManything.nis.txt
AB_PIZG17SOManything.piz.txt
AB_DEFG17Sitanything.n.txt
AB_DEFG28SOManything.n.txt
AB_DEFG17SOManything.copy(2).txt
AB_DEFG18SOManything.n.txt
</code></pre>
<p>I forgot to add remove solution</p>
<pre><code>import glob,os
r = [f for f in glob.glob("*.txt") if "AB_DEFG" in f or "17" in f]
for f in r:
    os.remove(f)
</code></pre>
<p>Only two files will stay</p>
<pre><code>AB_PIZG28SOManything.n.txt
AB_PIZG76SOManything.n.txt
</code></pre>
</div>
<span class="comment-copy">The shell already supports removing files by wildcard. Your regex does not seem to correspond to the glob wildcard in your problem statement particularly closely anyway. Python's <code>glob</code> module would probably be a better choice here.</span>
<span class="comment-copy">For Python questions, you <i>must</i> make sure your indentation is correct. Having us guess which errors are actual errors in your code as opposed to problems caused by sloppy copy/paste is a waste of everybody's time. Try pasting your code as a single block, then selecting that block with the mouse, and typing ctrl-k to indent as code. (This doesn't appear to work in the mobile version of this site.) See also <a href="/help/formatting">help</a>.</span>
<span class="comment-copy"><code>1</code>, <code>7</code>, and <code>_</code> just match themselves, there is no reason to put them in a character class. The backslash before <code>[</code> in your attempt turns it into <i>not</i> a character class anyway.</span>
<span class="comment-copy">Having <code>matching</code> return a string in case of no match seems like a particularly bad choice. If you really think this needs to be a separate function, have it return something which is easy to handle in your other code, like <code>None</code> or <code>False</code>, and only use human-friendly representations when communicating directly with the uer.</span>
