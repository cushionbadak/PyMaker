<div class="post-text" itemprop="text">
<p>I've seen that <code>::-1</code> can be used to reverse a string, but I thought it would be of interest to find the explicit integers <code>i:j:k</code> that would do the job.</p>
<p>I found the documentation <a href="https://docs.python.org/3/library/stdtypes.html#common-sequence-operations" rel="nofollow noreferrer">common-sequence-operations</a>, but can't get it to work. This code test comes up short:</p>
<pre><code>s = "abcd"
print(1,s[4:3:-1]) 
print(2,s[4:2:-1])    
print(3,s[4:1:-1])
print(4,s[4:0:-1])
print(5,s[4:-1:-1])  
</code></pre>
<p>Here is the output:</p>
<pre><code>1 
2 d
3 dc
4 dcb
5 
</code></pre>
<p>It looks like you can't do this with an explicit formula, <code>s[i:j:k]</code>.</p>
<p>Usually I can figure out simple programming by trial-n-error, but that is not working here. Maybe a careful read of the documentation will get me over this!</p>
</div>
<div class="post-text" itemprop="text">
<p>You would have to do it like this:</p>
<pre><code>s = "abcd"
print(s[len(s):-len(s)-1:-1])
</code></pre>
<p>Or, as pointed out by <a href="https://stackoverflow.com/users/722804/terry-jan-reedy">Terry Jan Reedy</a> in the comments, the following way of writing it illustrates nicely the length of the slice as <code>(stop - start) / step</code>:</p>
<pre><code>print(s[-1:-1-len(s):-1])
</code></pre>
<p>The issue is that negative indexing starts at the back, so the negative indexes correspond the following "real" indexes:</p>
<pre><code>-1 -&gt;  3
-2 -&gt;  2
-3 -&gt;  1
-4 -&gt;  0  # -len(s)
-5 -&gt; -1  # that's the one you need (or any smaller number)
</code></pre>
<p><code>0</code> or <code>-len(s)</code> is not enough since the <code>stop</code> index of the slice is exclusive, so you have to get one lower.</p>
</div>
<span class="comment-copy">For that matter, any number less than <code>-len(s)</code> will work.</span>
<span class="comment-copy">@glibdud Very true.</span>
<span class="comment-copy">Yes, I'm not proud "monkey see monkey do" is easier than studying documentation!</span>
<span class="comment-copy">s[-1:-len(s)-1:-1] works and is clearer to me as the bounds are len(s) apart.</span>
<span class="comment-copy">@TerryJanReedy Very good point indeed. Edited the answer...</span>
