<div class="post-text" itemprop="text">
<p>I have a directory of 500 files that I need to batch rename. The files are collected via a google drive form in which the applicant submits 5 individuals files labeled as such:</p>
<pre><code>CPW541_PersonalInformationSheet
CPW541_Resume
CPW541_ShortResponses
CPW541_Essay
CPW541_AcademicSummary
SEL285_PersonalInformationSheet
SEL285_Resume
SEL285_ShortResponses
SEL285_Essay
SEL285_AcademicSummary
</code></pre>
<p>I would like to batch rename the above file names to (in alphabetical order from the top of the directory):</p>
<pre><code>1_PersonalInformationSheet
1_Resume
1_ShortResponses
1_Essay
1_AcademicSummary
2_PersonalInformationSheet
2_Resume
2_ShortResponses
2_Essay
2_AcademicSummary
</code></pre>
<p>I tried using the question <a href="https://stackoverflow.com/questions/225735/batch-renaming-of-files-in-a-directory">here</a> as a reference, but I couldn't make sense of how to rename every five files. Any help would be greatly appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>*It has been brought up that the suffixes are human entered, and thus might be misspelled, not all capitalized identically, etc. This should do the trick:</p>
<p><div class="snippet" data-babel="false" data-console="false" data-hide="false" data-lang="js">
<div class="snippet-code">
<pre class="snippet-code-html lang-html prettyprint-override"><code>from os import listdir, rename
from os.path import join, exists
filedir = "/tmp/foo/"

files = listdir(filedir)
prefixes = set(prefix.split('_')[0] for prefix in files)
suffixes = set(prefix.split('_')[1] for prefix in files)

for count, prefix in enumerate(prefixes):
    for suffix in suffixes:
    	if exists(filedir+prefix+'_'+suffix):
    		rename(filedir+prefix+'_'+suffix,filedir+str(count+1)+'_'+suffix)</code></pre>
</div>
</div>
</p>
<p>That turned my test dir:</p>
<pre><code>asdf_part1
asdf_part2
fdsa_pt1
fdsa_ptTwo
</code></pre>
<p>into:</p>
<pre><code>1_part1
1_part2
2_pt1
2_ptTwo
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the ordering isn't important, the following might be enough - get the list of files, figure out all the prefixes and suffixes (split on the <code>_</code>), then for each prefix, rename each file from <code>prefix_suffix</code> to <code>count_suffix</code>:</p>
<pre><code>from os import listdir, rename
from os.path import join
suffixes = ['PersonalInformationSheet', 'Resume', 'ShortResponses', 'Essay', 'AcademicSummary']
filedir = "/tmp/foo"

prefixes = set(prefix.split('_')[0] for prefix in listdir(filedir))
for count, prefix in enumerate(prefixes):
    for suffix in suffixes:
        rename(
            join(filedir, "{}_{}".format(prefix, suffix)),
            join(filedir, "{}_{}".format(count+1, suffix))
        ) 
</code></pre>
</div>
<span class="comment-copy">what have you tried so far?</span>
<span class="comment-copy">I've tried using <a href="https://mrrsoftware.com/namechanger/" rel="nofollow noreferrer">mrrsoftware.com/namechanger</a> but it only works if you populate the characters you want replaced manually and attach a number to those characters. (E.g. CPW541 --&gt; 1). I also tried using the question I referenced at the bottom but that just replaced the files if the change is specified or all hyphens to dashes.</span>
<span class="comment-copy">how fluent are you with python?</span>
<span class="comment-copy">I've taken an introductory course in python that stopped at OOO. It's been a while since I've used the code. The code I am looking to make would be for a student organization of mine at UT Austin.</span>
<span class="comment-copy">Invest some time with <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a> practicing the examples. It will give you an idea of the tools Python offers to help you solve your problem.</span>
<span class="comment-copy">I am getting "SyntaxError: multiple statements found while compiling a single statement". Also I really appreciate your help getting this far.</span>
<span class="comment-copy">That's usually caused by whitespace issues, or mis-pasting multiple lines into one prompt in the python shell. Have you tried writing this all to a file then running it?</span>
