<div class="post-text" itemprop="text">
<p>I have written a Python code to train Brill Tagger from NLTK library on some 8000 English sentences and tag some 2000 sentences. </p>
<p>The Brill Tagger takes many, many hours to train and finally when it finished training, the last statement of the program had some tiny syntax error and the code, therefore, did not return the output.</p>
<p>Is it possible to retain the tagger in the trained state while correcting the error and getting the program running without having to wait several hours for the tagger to be trained on the very same data?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes! You have a few options. One quick and dirty thing that I employ frequently is dropping to a console. Add this to the end of your script (right after the training finishes):</p>
<pre><code>model = train_for_hours_and_hours()

import code
code.interact(local=locals())
</code></pre>
<p>This works exactly like just the REPL you get from running <code>python3</code>, except all of the variables (including your trained model) are available:</p>
<pre><code>$ python3 script.py
[ ... THREE HOURS LATER ... ]
&gt; print(model)
&lt;NLTK.Model ...&gt;
</code></pre>
<p>A more permanent solution would be to serialize your model and save it to a file right after training finishes. To do this you can use <a href="https://docs.python.org/3/library/pickle.html" rel="noreferrer">pickle</a>:</p>
<pre><code>import pickle
MODEL_FILE = 'model.pickle'

try:
    # Try to load the model from disk
    with open(MODEL_FILE, 'rb') as f:
        model = pickle.load(f)
except FileNotFoundError:
    # Train the model if it doesn't exist yet
    model = train_for_hours_and_hours()
    with open(MODEL_FILE, 'wb') as f:
        pickle.dump(f, model)

# now use `model` here
</code></pre>
</div>
<span class="comment-copy">Sounds brilliant. But I believe I would still have to run the program again after adding all this stuff to prevent this further. Isn't there a way to get something out of my current output where the tagger is completely trained but just the tagging remains, without having to wait for hours?</span>
<span class="comment-copy">Yea you do. Unfortunately it's unlikely you can recover your current model unless you printed it out (and that printout has all of the data that was learned). Is your python script still running? If it crashed after the error, then you're out of luck for sure. If it's still running and you really care that much, you could try going into its memory and finding the structure for the model. But that's probably more work than just training the model again.</span>
<span class="comment-copy">Yeah it crashed - but thanks for saving me from all this trouble again.</span>
<span class="comment-copy">Ah yea that's a shame. But, on the plus side you've hopefully learned the hard way now and you'll never forget to do something like I suggested above in the future! :) Feel free to accept this answer if it helped: <a href="https://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work" title="how does accepting an answer work">meta.stackexchange.com/questions/5234/â€¦</a></span>
