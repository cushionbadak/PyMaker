<div class="post-text" itemprop="text">
<p>Example:</p>
<p>Input:</p>
<pre><code>{"Contact Title": "Owner Name"}
</code></pre>
<p>Expected Output:</p>
<pre><code>{"ContactTitle": "Owner Name"}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>example using json object_hooks (supports nested dictionaries):</p>
<pre><code>In [1]: import json
   ...: 
   ...: example_dict = {'ke  y1': 'value1',
   ...:  'ke y2': 'value2',
   ...:  'k ey3': {'key3a': 'value3a'},
   ...:  'key 4': {'key 4a': {'key4a   a': {'key 4 4 4 44': 'value44 4   44'},
   ...:    'key4 ab': 'value  4ab',
   ...:    'key4ac': 'va lue4ac'},
   ...:   'k ey4b': 'valu  e4b'}}
   ...: 
   ...: def remove_spaces(obj):
   ...:     for key in obj.keys():
   ...:         new_key = key.replace(" ","")
   ...:         if new_key != key:
   ...:             obj[new_key] = obj[key]
   ...:             del obj[key]
   ...:     return obj
   ...: 
   ...: new_json = json.loads(json.dumps(example_dict), object_hook=remove_spaces) 
   ...: 
   ...: new_json
   ...: 
Out[1]: 
{u'key1': u'value1',
 u'key2': u'value2',
 u'key3': {u'key3a': u'value3a'},
 u'key4': {u'key4a': {u'key4aa': {u'key44444': u'value44 4   44'},
   u'key4ab': u'value  4ab',
   u'key4ac': u'va lue4ac'},
  u'key4b': u'valu  e4b'}}
</code></pre>
<p>there's another method (even better as long as you don't exceed recursion depth):</p>
<pre><code>In [2]: def dict_key_unspacer(d):
    ...:     new = {}
    ...:     for k, v in d.iteritems():
    ...:         if isinstance(v, dict):
    ...:             v = print_dict(v)
    ...:         new[k.replace(' ', '')] = v
    ...:     return new
    ...: 
    ...: result_dict = dict_key_unspacer(example_dict)
    ...: 
    ...: result_dict
    ...: 
Out[2]: 
{'key1': 'value1',
 'key2': 'value2',
 'key3': {'key3a': 'value3a'},
 'key4': {'key4a': {'key4aa': {'key44444': 'value44 4   44'},
   'key4ab': 'value  4ab',
   'key4ac': 'va lue4ac'},
  'key4b': 'valu  e4b'}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>thank you for your suggestions, I tried something in regex in one line and it worked fine, but I am seeing the order in the output is changed.</p>
<p>input = [{
    "Id": "ALFKI",
    "Contact Name": "Maria Anders",
    "Contact Title": "Sales Representative",
    "City": "Berlin",
    "Slider": 10
}, {
    "Id": "ANATR",
    "Contact Name": "Ana Trujillo",
    "Contact Title": "Owner",
    "City": "Mexico D.F.",
    "Slider": 5
}]</p>
<p>new_json = (re.sub(r'\s(?=\w+":)',"",str(json.dumps(input))))</p>
<p>output = [
  {
    "ContactName": "Maria Anders",
    "ContactTitle": "Sales Representative",
    "Id": "ALFKI",
    "Slider": 10,
    "City": "Berlin"
  },
  {
    "ContactName": "Ana Trujillo",
    "ContactTitle": "Owner",
    "Id": "ANATR",
    "Slider": 5,
    "City": "Mexico D.F."
  }
]</p>
</div>
<span class="comment-copy">Have you looked at the json package: <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">docs.python.org/3/library/json.html</a></span>
<span class="comment-copy">... is this <i>JSON</i>, i.e. the text-based serialization format, or is this a Python <code>dict</code> object?</span>
<span class="comment-copy">@JacobIRR that would affect values as well, not just keys</span>
<span class="comment-copy">use <code>replace(' ', '')</code> on a <code>dict</code> object's <code>keys()</code>, and <code>json.loads()</code> / <code>json.dumps()</code> to convert to and from JSON</span>
<span class="comment-copy">Hi all, thank you for your suggestions, I tried something in regex in one line and it worked fine, but I am seeing the order in the output is changed.</span>
<span class="comment-copy">input = [{     "Id": "ALFKI",     "Contact Name": "Maria Anders",     "Contact Title": "Sales Representative",     "City": "Berlin",     "Slider": 10 }, {     "Id": "ANATR",     "Contact Name": "Ana Trujillo",     "Contact Title": "Owner",     "City": "Mexico D.F.",     "Slider": 5 }]</span>
<span class="comment-copy">new_json = (re.sub(r'\s(?=\w+":)',"",str(json.dumps(input))))</span>
<span class="comment-copy">[   {     "ContactName": "Maria Anders",     "ContactTitle": "Sales Representative",     "Id": "ALFKI",     "Slider": 10,     "City": "Berlin"   },   {     "ContactName": "Ana Trujillo",     "ContactTitle": "Owner",     "Id": "ANATR",     "Slider": 5,     "City": "Mexico D.F."   } ]</span>
