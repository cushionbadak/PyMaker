<div class="post-text" itemprop="text">
<p>I would like to find a way to duplicate tuples in my list but in a orderly fashion. Meaning: </p>
<p>Assuming:</p>
<pre><code>a = [('c','v','t'),(1,2,3)] 
</code></pre>
<p>and Assuming three duplicates, I am looking for a way to get this: </p>
<pre><code>a = [('c','v','t'),('c','v','t'),('c','v','t'),(1,2,3),(1,2,3),(1,2,3)] 
</code></pre>
<p>So far I use list comprehension </p>
<pre><code>[item*3 for item in a]
</code></pre>
<p>Howver, it breaks the tuples: </p>
<pre><code>out = [('c', 'v', 't', 'c', 'v', 't', 'c', 'v', 't'), (1, 2, 3, 1, 2, 3, 1, 2, 3)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this should work:</p>
<pre><code>[y for y in a for i in range(3)]
</code></pre>
<p>Using two loops prevents the issue you have</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/itertools.html#itertools.repeat" rel="nofollow noreferrer"><code>itertools.repeat</code></a> is your friend.</p>
<pre><code>import itertools as it


a = [("c", "v", "t"), (1, 2, 3)] 

list(it.chain(*zip(*it.repeat(a, 3))))
# [('c', 'v', 't'), ('c', 'v', 't'), ('c', 'v', 't'), (1, 2, 3), (1, 2, 3), (1, 2, 3)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a list comprehension:</p>
<pre><code>dup_num = 3
list1 = [('c', 'v', 't'), (1, 2, 3)]
list2 = [tup2 for tup in list1 for tup2 in [tup] * 3]
</code></pre>
<p>But I don't really like that.</p>
<p>You can also use a for loop:</p>
<pre><code>list2 = []
for tup in list1:
  list2.extend([tup] * 3)
</code></pre>
</div>
<span class="comment-copy">what have you tried so far? Please share us your code</span>
<span class="comment-copy">see above, used a typical list comprehension</span>
<span class="comment-copy"><code>a = [r for item in a for r in itertools.repeat(item, 3)]</code></span>
<span class="comment-copy">You can write <code>for _ in range(3)</code> since <code>i</code> is not used.</span>
