<div class="post-text" itemprop="text">
<p>I have this dataframe :</p>
<pre><code>Team    Age
 X       [28,21,16,45]
 B       [18,19,16,23]
 Y       [32,27,34,23]
</code></pre>
<p>And all I want is to get the brackets off the Age column to go further. I am doing the following:</p>
<pre><code> df['Age']=[','.join(i) for i in df['Age']] 
</code></pre>
<p>But  I get the <strong>can only join an iterable</strong> error when doing so; If i go through a loop and print the result I able to get what want.</p>
</div>
<div class="post-text" itemprop="text">
<p>If values are strings:</p>
<pre><code>df['Age'] = df['Age'].str.strip('[]')
</code></pre>
<p>If values are lists:</p>
<pre><code>df['Age'] = df['Age'].str.join(',')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use:</p>
<pre><code>df['Age'] = df['Age'].astype(str).str[1:-1]
</code></pre>
<p>If the <code>'Age'</code> column is a string column, just use:</p>
<pre><code>df['Age'] = df['Age'].str[1:-1]
</code></pre>
<p>And now:</p>
<pre><code>print(df)
</code></pre>
<p>Is the desired output.</p>
</div>
<span class="comment-copy">What is <code>print (type(df['Age'].iat[0]))</code> ?</span>
<span class="comment-copy">great. Much easier than I thought. Thanks</span>
