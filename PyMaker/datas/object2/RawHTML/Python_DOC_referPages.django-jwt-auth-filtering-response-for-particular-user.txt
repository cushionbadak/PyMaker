<div class="post-text" itemprop="text">
<p>I’m implementing JWT authentication in my Django project and at the moment I’m stuck in a part where I’d like to filter response data by my JWT.</p>
<p>I’d like to get particular data referring to authenticated user in my Django view. How can I get this filtered data? </p>
<p>Here’s example for my Settings view.</p>
<p>Views.py 
</p>
<pre><code>Class SettingsViewSet(viewsets.ModelViewSet):
    # here I'd like to decode my JWT token 
    # and filter the response data for particular user 
    queryset = Settings.objects.all()
    serializer_class = SettingsSerializer
</code></pre>
<p>urls.py</p>
<pre><code># ...
router.register(r'api/settings', SettingsViewSet)
# ...
urlpatterns = [
    # ...
    url(r'^', include(router.urls)),
    url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework')),
    url('api/token/', jwt_views.TokenObtainPairView.as_view(), name='token_obtain_pair'),
    # ...
]
</code></pre>
<p>Serializers.py</p>
<pre><code>class SettingsSerializer(serializers.ModelSerializer):
    class Meta:
        model = Settings 
        fields = ('id', 'name', 'value', 'description', 'office')
</code></pre>
<p>settings.py</p>
<pre><code>REST_FRAMEWORK = {
'DEFAULT_PERMISSION_CLASSES': [
    'rest_framework.permissions.IsAuthenticated',
],
'DEFAULT_AUTHENTICATION_CLASSES': [
    'rest_framework_simplejwt.authentication.JWTAuthentication',
],
</code></pre>
<p>}</p>
<p>Here’s a curl command which I use to get response from server:</p>
<pre><code>curl -H ‘Content-Type: application/json’ http://127.0.0.1:8000/api/settings/ -H ‘Authorization: Bearer &lt;Here goes JWT token for particular user&gt;’ 
</code></pre>
<p>In response I get all the settings for all users. I’d like to get data only for the authenticated one. </p>
</div>
<div class="post-text" itemprop="text">
<p>Currently logged in user instance should be automatically added to <strong>request</strong> objects by the library you are using. With that, you can override <strong>get_queryset</strong> method to filter the response by currently logged in user, assuming you have a user field in your Settings model:</p>
<pre><code>class SettingsViewSet(viewsets.ModelViewSet):
    queryset = Settings.objects.all()
    serializer_class = SettingsSerializer

    def get_queryset(self):
        queryset = Settings.objects.filter(user=self.request.user)
        return queryset
</code></pre>
</div>
