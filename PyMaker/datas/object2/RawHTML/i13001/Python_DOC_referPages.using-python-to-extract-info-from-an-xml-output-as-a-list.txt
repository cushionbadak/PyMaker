<div class="post-text" itemprop="text">
<p>I'm trying to extract data from this XML document and have the output be a list:</p>
<p>ex:  </p>
<pre><code>['10-Yard Fight (USA, Europe)', '1942 (Japan, USA)', .......]
</code></pre>
<p>I can only figure out how to make it many independent lists.</p>
<p>ex:  </p>
<pre><code>['10-Yard Fight (USA, Europe)']
['1942 (Japan, USA)']
[.......]
</code></pre>
<p>XML Sample:</p>
<pre><code>&lt;?xml version="1.0"?&gt;
&lt;menu&gt;
&lt;header&gt;
    &lt;listname&gt;Nintendo Entertainment System&lt;/listname&gt;
    &lt;id&gt;003&lt;/id&gt;
    &lt;lastlistupdate&gt;10/16/2014&lt;/lastlistupdate&gt;
    &lt;listversion&gt;1.1 Final&lt;/listversion&gt;
    &lt;manufacturer&gt;Nintendo&lt;/manufacturer&gt;
    &lt;media&gt;
        &lt;artwork&gt;&lt;/artwork&gt;
        &lt;video&gt;&lt;/video&gt;
    &lt;/media&gt;
    &lt;exporterversion&gt;HyperList XML Exporter Version 1.3 Copywrite (c) 2009-2011 William Strong&lt;/exporterversion&gt;
&lt;/header&gt;
&lt;game name="10-Yard Fight (USA, Europe)" index="true" image="1" id="0034232"&gt;
    &lt;description&gt;10-Yard Fight (USA, Europe)&lt;/description&gt;
    &lt;cloneof&gt;&lt;/cloneof&gt;
    &lt;crc&gt;3D564757&lt;/crc&gt;
    &lt;manufacturer&gt;Nintendo&lt;/manufacturer&gt;
    &lt;year&gt;1985&lt;/year&gt;
    &lt;genre&gt;Football/Sports&lt;/genre&gt;
    &lt;rating&gt;HSRS - GA (General Audience)&lt;/rating&gt;
    &lt;enabled&gt;Yes&lt;/enabled&gt;
&lt;/game&gt;
&lt;game name="1942 (Japan, USA)" index="" image=""&gt;
    &lt;description&gt;1942 (Japan, USA)&lt;/description&gt;
    &lt;cloneof&gt;&lt;/cloneof&gt;
    &lt;crc&gt;171251E3&lt;/crc&gt;
    &lt;manufacturer&gt;Capcom&lt;/manufacturer&gt;
    &lt;year&gt;1986&lt;/year&gt;
    &lt;genre&gt;Shoot-&amp;apos;Em-Up&lt;/genre&gt;
    &lt;rating&gt;HSRS - GA (General Audience)&lt;/rating&gt;
    &lt;enabled&gt;Yes&lt;/enabled&gt;
&lt;/game&gt;
&lt;game name="1943 - The Battle of Midway (USA)" index="" image=""&gt;
    &lt;description&gt;1943 - The Battle of Midway (USA)&lt;/description&gt;
    &lt;cloneof&gt;&lt;/cloneof&gt;
    &lt;crc&gt;12C6D5C7&lt;/crc&gt;
    &lt;manufacturer&gt;Capcom&lt;/manufacturer&gt;
    &lt;year&gt;1988&lt;/year&gt;
    &lt;genre&gt;Shoot-&amp;apos;Em-Up&lt;/genre&gt;
    &lt;rating&gt;HSRS - GA (General Audience)&lt;/rating&gt;
    &lt;enabled&gt;Yes&lt;/enabled&gt;
&lt;/game&gt;
&lt;/menu&gt;
</code></pre>
<p>My sample Python Code</p>
<pre><code>from xml.dom import minidom

def databaseGameExtraction(xml):
    xmldoc = minidom.parse(xml)
    games = xmldoc.getElementsByTagName('game')
    for game in games:
        romKey = game.attributes['name']
        roms = [romKey.value]
        print(roms)
    return roms

databaseGameExtraction('Nintendo Entertainment System.xml')
</code></pre>
<p>also, I want to get the  value of 'Nintendo Entertainment System' to be returned as well.</p>
<p>In a perfect world the function would return the roms in list form and the system name in list form when called from another function.</p>
<p>Thanks,</p>
<ul>
<li>A very junior coder</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>I think you need</p>
<pre><code>roms = []

for game in games:
    romKey = game.attributes['name']
    roms.append(romKey.value)

print("all roms:", roms)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to build the <code>roms</code> list iteratively from your XML:</p>
<pre><code>roms = []
for game in games:
    rom_key = game.attributes['name']
    roms.append(rom_key.value)
</code></pre>
<p>or better written as a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list-comprehension</a>:</p>
<pre><code>roms = [game.attributes['name'].value for game in games]
</code></pre>
<p>You can also extract “Nintendo Entertainment System” using:</p>
<pre><code>xmldoc.getElementsByTagName('listname')[0].firstChild.data
</code></pre>
<p>that leaves us with:</p>
<pre><code>from xml.dom import minidom

def databaseGameExtraction(xml):
    xmldoc = minidom.parse(xml)
    roms = [game.attributes['name'].value
            for game in xmldoc.getElementsByTagName('game')]
    compagny = xmldoc.getElementsByTagName('listname')[0].childNodes[0].data
    return roms, compagny

roms, compagny = databaseGameExtraction('Nintendo Entertainment System.xml')
print(compagny)
print(roms)
</code></pre>
</div>
<span class="comment-copy">This works too, thanks</span>
<span class="comment-copy">Thanks, this got part of it, I couldn't get the sample code of "list-comprehension working, but got the result I wanted.</span>
<span class="comment-copy">@BenElder Woops. Forgot to use <code>.value</code> to extract the string out of the <code>minidom.Attr</code> object. Fixed now.</span>
