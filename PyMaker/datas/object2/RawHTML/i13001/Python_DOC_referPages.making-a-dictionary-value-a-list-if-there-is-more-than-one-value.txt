<div class="post-text" itemprop="text">
<p>I am generating a dictionary of dictionaries and sometimes there may be more than 1 set of dictionaries for each key.</p>
<pre><code>          #ds  and point are lists of dictionaries
def pointList(ds, point, filepath):
    startTime = datetime.now()
    dictPoint = {}

    for ik in ds:
      if ik['ItemK'] in dictPoint:
        print ("This item key (%s) is already in dict point." % ik['ItemK'])

        # add {'MasterKey' : ik['MasterKey'], 'PointId' : None}
        # to the dictPoint like below
        # Now make the dictionary at dictPoint[str(ik['ItemK'])]
        # keep the previous entry that exists

      dictPoint[str(ik['ItemK'])] = {'MasterKey' : ik['MasterKey'], 'PointId' : None}

    for sk in point:
      dictPoint[str(sk['PointK'])]['PointId'] = sk['PointId']
</code></pre>
<p>So if my current dictionary is trying to add an element with <code>PointK = 24</code>, and a dictionary </p>
<p><code>{..., '24': {'MasterKey': '126', 'PointId': None}, ... }</code></p>
<p>already exists, how can i make this dictionary like this</p>
<p><code>{..., '24': {'MasterKey': ['126','132'], 'PointId': [None,None]}, ... }</code></p>
<p>Workaround (kinda)
So this solution only works if there is only a single duplicate, if there is more than 2 of the same ItemK's it wont work i believe</p>
<pre><code>d = {'MasterKey' : [dictPoint[str(ik['ItemK'])]['MasterKey'],ik['MasterKey']], 
     'PointId' : [None, None] }
dictPoint[str(ik['ItemK'])] = d
</code></pre>
<p>Anyway to make this work when the dictionary has lists already formed for the two elements?</p>
</div>
<div class="post-text" itemprop="text">
<p>try this:</p>
<pre><code>for ik in ds:
    dictPoint.setdefault(ik['ItemK'], {}).setdefault('MasterKey', []).append(ik['MasterKey'])
    dictPoint.setdefault(ik['ItemK'], {}).setdefault('PointId', []).append(ik['PointId'])
</code></pre>
<p>the only down side is that MasterKey and PointId will always be lists even if there is only one</p>
</div>
<span class="comment-copy">You might want to look at <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">collections.defaultdict</a>; you can use a <code>defaultdict(lambda: defaultdict(list))</code> to create a structure that can represent you desired one.</span>
