<div class="post-text" itemprop="text">
<p>Here is my code:</p>
<pre><code>list1 =  "SP   " , "Total Sales   " , "Total Commission"
print("  ".join(list1))
listA = ["103  " , "500"]
listB = "104  " , "25000"
listC = "201  " , "51000"
listD = "319  " , "100000"
listE = "367  " , "12599"
listF = "388  " , "12600"
listG = "435  " , "292000"
print("  ".join(listA))
print("  ".join(listB))
print("  ".join(listC))
print("  ".join(listD))
print("  ".join(listE))
print("  ".join(listF))
print("  ".join(listG))
if  0 &lt; (listA[1]) &lt; 50999:
    print ("yes")
</code></pre>
<p>I am getting this error: <code>TypeError: unorderable types: int() &lt; str()</code></p>
<p>I need to be able to check the number in <code>(listA[1])</code> to see if it is greater than 0 and less than 50999 and I can't figure out how to make it work.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have</p>
<pre><code>listA = ["103  " , "500"]
</code></pre>
<p>you can simply use a <a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> to change it to a list of integers:</p>
<pre><code>listA = [int(item) for item in listA]
</code></pre>
<p>which can then be compared with other integers.</p>
<p>However, you shouldn't be using seven (or more) separate lists. Better do something like:</p>
<pre><code>lists = [["103  " , "500"],
         ["104  " , "25000"],
         ["201  " , "51000"],
         ["319  " , "100000"],
         ["367  " , "12599"],
         ["388  " , "12600"],
         ["435  " , "292000"],
        ]
</code></pre>
<p>and then access the sublists as <code>lists[0]</code> instead of <code>listA</code>, <code>lists[1]</code> instead of <code>listB</code>, etc.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are comparing a string and an integer.</p>
<p>You should do something like</p>
<pre><code>if  0 &lt; int(listA[1]) &lt; 50999:
    print("yes")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try passing it into int(). This will convert the string to an int.</p>
<pre><code>0 &lt; int(listA[1]) &lt; 50999:
</code></pre>
</div>
<span class="comment-copy">Welcome to Stack-overflow, please copy paste your code with 4 indentation from next time like this</span>
<span class="comment-copy">You could alternatively use <code>map(int, listA)</code> instead of the list comprehension if you're feeling uber functional :)</span>
<span class="comment-copy">@MichaelRecachinas: Yes, but listcomps are considered much more pythonical. Guido even considered removing <code>map</code> and <code>filter</code> from the language entirely and only seems to have kept them for backwards compatibility reasons.</span>
