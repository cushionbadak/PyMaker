<div class="post-text" itemprop="text">
<p>I am currently writing a program that will take in a text file, and then count the frequency of each word in the file, after lower casing every word and stripping its punctuation. </p>
<p>Here is my code:</p>
<pre><code>import sys 
import string

incoming =[]
freq =[]
word =[]
count = 0
index = 0
i = 0

with open(sys.argv[1], "r") as word_list:
    for line in word_list:
        #word is the string of the .txt file

        #strips punctuation and lower cases each word
        for words in line.split():
            words = words.translate(string.maketrans("",""), string.punctuation)
            words = words.lower()
            incoming.append(words)
        #incoming is now an array with each element as a word from the file     

    for i in range(len(incoming)-1):
        if (incoming[i]) not in word:
            #WORD[i] = word[index]
            word[index] = incoming[i]
            freq[index] = 1
            index += 1

        else: 
            freq[index] = freq[index] + 1


    for j in word:
        print "%s %d", word[j], freq[j]
</code></pre>
<p>I am getting the error: </p>
<pre><code>  File "wordfreq.py", line 26, in &lt;module&gt;
    word[index] = incoming[i]
IndexError: list assignment index out of range
</code></pre>
<p>But I fail to see how it can be out of range. Neither <code>index</code> nor <code>i</code> go out of range as far as I can tell. I am new to Python and am having a lot of trouble with the 'for' loop syntax. Any tips would be much appreciated. </p>
</div>
<div class="post-text" itemprop="text">
<p>In your code, <code>word[index]</code> indeed does not exist. What you should do instead is <code>word.append(WORD[i])</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>A better approach might be to use a defaultdict:</p>
<pre><code>&gt;&gt;&gt; from collections import defaultdict
&gt;&gt;&gt; d = defaultdict(int)
&gt;&gt;&gt; for i in ["abc", "abc", "def"]:
...     d[i] += 1
...
&gt;&gt;&gt; d
defaultdict(&lt;type 'int'&gt;, {'abc': 2, 'def': 1})
&gt;&gt;&gt;
</code></pre>
<p>This is a more pythonic way to count frequencies, rather than maintaining indexes.  The words are in d.keys() and their frequencies are in d.values()</p>
</div>
<span class="comment-copy">In python, you can iterate through a list simply by doing <code>for item in list:</code>. You don't need to use <code>range(len(list)-1)</code>. If you still need access to the index, use <code>for i, item in enumerate(list):</code>.</span>
<span class="comment-copy">How does that translate to looping through the index of the array though? Or how can I "number" my items in the list? I'm having trouble wrapping my head around that.</span>
<span class="comment-copy">I would really recommend against using both <code>WORD</code> and <code>word</code> as variable names in the same source code.</span>
<span class="comment-copy">Noted. Since they are both arrays of words I figured I could get away with it. But it's understandably not readable for others. Will fix it!</span>
<span class="comment-copy">As a convention, python variables are only all-upper case when it's a constant (or a matrix), so <code>ARR</code> is not quite appropriate here.</span>
<span class="comment-copy">I'm getting a different error now. <code>File "wordfreq.py", line 23, in &lt;module&gt;     if (WORD[i]) not in word: TypeError: list indices must be integers, not str</code>  Not sure how to fix this though. I'm new to types in Python. I thought i was considered an int already?</span>
<span class="comment-copy">That line differs from what you posted. I think that's a separate issue.</span>
<span class="comment-copy">Or even <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a></span>
