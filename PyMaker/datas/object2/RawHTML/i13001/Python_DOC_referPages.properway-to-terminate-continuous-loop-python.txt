<div class="post-text" itemprop="text">
<p>let me first start off saying sorry if this is duplicate. a link to the correct thread will be helpful, i just could not find what I was looking for with searching. </p>
<p>I have a python application that checks the status of different things in our network and then writes XML files. It has a constant loop that run through all the checks. Occasionally the application needs to be stopped or restarted to make a change. I don't want to quite the app or restart the app while it is writing a file or executing a task. What are some strategies I can use to terminate the main loop safely? Can I pass something to an object that is running something?    </p>
</div>
<div class="post-text" itemprop="text">
<p>In addition to suggestionsabout signals(<a href="https://docs.python.org/3/library/signal.html" rel="nofollow noreferrer">https://docs.python.org/3/library/signal.html</a>) @Torxed mentioned in his comment, you can also pass some data to program and verify is it set on every loop iteration(I mean pass to stdin, see comments here: <a href="https://stackoverflow.com/questions/3762881/how-do-i-check-if-stdin-has-some-data">How do I check if stdin has some data?</a>)</p>
<p>Another way is to create a file and check if it exists on every iteration. If if doesn't - stop the application. </p>
</div>
<div class="post-text" itemprop="text">
<p>A common usage is to put a check point in the loop. At the simplest level, you just test if a particular file exist and exit loop if it does:</p>
<pre><code>stopfile = '.stop'

while True:
    # check if we are required to stop
    if os.path.exists(stopfile):
        print("Stopping because %s exists" % (stopfile,))
        break
    # real stuff
</code></pre>
<p>In more complex scenarii, you can use any interprocess tool, for example a socket or signals and test it the same way in your loop</p>
</div>
<span class="comment-copy">Use <code>flags</code>, for instance <code>quit = False</code> and honor that in critical places of the code. You can also catch signals <a href="https://docs.python.org/3/library/signal.html" rel="nofollow noreferrer">docs.python.org/3/library/signal.html</a></span>
