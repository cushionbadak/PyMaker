<div class="post-text" itemprop="text">
<p>I have a python data frame with a column called "accredited
This column should have the data of accreditation: "10/10/2011"
Or put: "Not accredited"
But in most of the cases when isn't accredited the column have some text, like:
"This business is not accredited....."
I want to replace the whole text and just put: "Not accredited"</p>
<p>Now, I wrote a  function: </p>
<pre><code>def notAcredited(string):
    if ('Not' in string or 'not' in string):
        return  'Not Accredited'
</code></pre>
<p>I'm implementing the function with a loop, is possible to do this with the ".apply" method?</p>
<pre><code>for i in range(len(df_1000_1500)):
    accreditacion = notAcredited(df_1000_1500['BBBAccreditation'][i])
    if accreditacion == 'Not Accredited':
        df_1000_1500['BBBAccreditation'][i] = accreditacion
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use the vectorized string method <a href="http://pandas.pydata.org/pandas-docs/stable/text.html#text-string-methods" rel="nofollow"><code>Series.str.replace</code></a>:</p>
<pre><code>In [72]: df = pd.DataFrame({'accredited': ['10/10/2011', 'is not accredited']})

In [73]: df
Out[73]: 
          accredited
0         10/10/2011
1  is not accredited

In [74]: df['accredited'] = df['accredited'].str.replace(r'(?i).*not.*', 'not accredited')

In [75]: df
Out[75]: 
       accredited
0      10/10/2011
1  not accredited
</code></pre>
<p>The first argument passed to <code>replace</code>, e.g. <code>r'(?i).*not.*'</code>, can be any <a href="https://docs.python.org/3/library/re.html" rel="nofollow">regex pattern</a>. The second can be any regex replacement value -- the same kind string as would be accepted by <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow"><code>re.sub</code></a>. The <code>(?i)</code> in the regex pattern makes the pattern case-insensitive so <code>not</code>, <code>Not</code>, <code>NOt</code>, <code>NoT</code>, etc. would all match.</p>
<p><code>Series.str.replace</code> Cythonizes the calls to <code>re.sub</code> (which makes it faster than what you could achieve using <code>apply</code> since <code>apply</code> uses a Python loop.)</p>
</div>
