<div class="post-text" itemprop="text">
<p>I'm trying to return a list of strings from the function Groups(s,k) where basically, the list of strings of 'k' elements from string 's' k&gt;=0 and k&lt;= len(s) and these elements in the these strings occur in the same order as 's' as shown below   </p>
<p>Groups("abcde", 2) → ["ab","ac","ad","ae","bc","bd","be","cd","ce,"de"] </p>
<p>Groups("abcde",5) → ["abcde"]<br/>
Groups("abcde",1) → ["a","b","c","d","e"]        </p>
<p>I'm really sorry for my wording of the question as it's hard to understand but here is what I have so far:</p>
<pre><code>    def Groups(s,k):
        if k == 0 or k &gt; len(s):
            return [""]

        return [ i*k for i in s if k ==1]
        if k &gt; 1 and k &lt;= 5:
            return[ x for y in s y for x in s]
</code></pre>
<p>I would greatly appreciate any help:)</p>
</div>
<div class="post-text" itemprop="text">
<p>I think <a href="https://docs.python.org/3/library/itertools.html#itertools.combinations" rel="nofollow"><code>combinations</code></a> is the word you are looking for:</p>
<pre><code>list(''.join(letters) for letters in combinations("abcde", 2))
# returns ['ab', 'ac', 'ad', 'ae', 'bc', 'bd', 'be', 'cd', 'ce', 'de']
</code></pre>
</div>
<span class="comment-copy">Why the "recursion" tag?  There's no recursion here.  Do you need a recursive solution for some reason?  <code>itertools.combinations</code> does just what you want.</span>
