<div class="post-text" itemprop="text">
<pre><code>rand_arr=[0, ]
def rand_key_gen(arr):
    for x in range(0, 25):
        rand_arr[x] = random.choice(arr)
</code></pre>
<p>This is incomplete. But the problem here is that I might get the same value again. How do I circumvent this situation?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>random.shuffle</code> to achieve a shuffled list from the original list. But as it mutate the original list, make a copy of original list first.</p>
<pre><code>import random
shuffled_lst=lst[:]
random.shuffle(shuffled_lst)
print "Reshuffled list : ", shuffled_lst
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You'd use <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer"><code>random.sample</code></a>. It will select the required number of non-repeating elements from <code>arr</code>:</p>
<pre><code>import random
rand_arr = [0]
def rand_key_gen(arr):
    rand_arr[:] = random.sample(arr, 25)
</code></pre>
<p>There's no need for the loop, since you can modify <code>rand_arr</code> via <a href="https://stackoverflow.com/q/10155951/2301450">slice assigment</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>What about using <code>random.shuffle</code>:</p>
<pre><code>from random import shuffle

new_list = old_list[:]  # copy
shuffle(new_list)
print(new_list)
</code></pre>
<p>If you want a smaller list, you can use slicing.</p>
</div>
<span class="comment-copy">So to clarify, you want each item from <code>arr</code> to appear once in <code>rand_arr</code>? (also for the record in Python they're called lists)</span>
