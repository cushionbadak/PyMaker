<div class="post-text" itemprop="text">
<p>I am trying to run the following openssl command in python:</p>
<pre><code>cmd = "openssl x509 -sha1 -in esx.crt -noout -fingerprint"
tmp = os.popen(cmd)
tmp_sha1 = tmp.readline()
</code></pre>
<p>This command is supposed to generate a fingerprint of the certificate. I am trying to capture the output through the file object. But when I read this file object, there's nothing in it. I have executed this command on the command line and it runs fine, generates the fingerprint. Could you tell me how can I get the fingerprint?  </p>
</div>
<div class="post-text" itemprop="text">
<p>You achieve this natively within Python using the <code>OpenSSL</code> module.</p>
<pre><code>from OpenSSL.crypto import load_certificate, FILETYPE_PEM

cert_file_string = open("esx.crt", "rb").read()
cert = load_certificate(FILETYPE_PEM, cert_file_string)

sha1_fingerprint = cert.digest("sha1")
print sha1_fingerprint
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use two modules to establish what you want: <code>subprocess</code> and <code>os</code>.</p>
<p>Using <code>subprocess</code> you can check for the output for the process using <code>communicate()</code>, which <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.communicate" rel="nofollow">reads data from stdout and stderr until EOF</a>.</p>
<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; p = subprocess.Popen("openssl x509 -sha1 -in 17.cert -noout -fingerprint", stdout=subprocess.PIPE)
&gt;&gt;&gt; out, _ = p.communicate() #return a tuple (stdout, stderr)
&gt;&gt;&gt; out
b'SHA1 Fingerprint=87:68:8B:B0:6A:E2:DF:A3:E2:63:76:97:A9:2B:B4:F4:82:4E:0B:D1\n'
</code></pre>
<p>Using <code>os</code> module works fine as well, using both <code>read()</code> and <code>readline()</code> methods: (please note that <a href="https://www.python.org/dev/peps/pep-0361/" rel="nofollow">os.popen() is deprecated</a>)</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; p = os.popen("openssl x509 -sha1 -in 17.cert -noout -fingerprint")
&gt;&gt;&gt; p.read()
'SHA1 Fingerprint=87:68:8B:B0:6A:E2:DF:A3:E2:63:76:97:A9:2B:B4:F4:82:4E:0B:D1\n'
&gt;&gt;&gt; p = os.popen("openssl x509 -sha1 -in 17.cert -noout -fingerprint")
&gt;&gt;&gt; out = p.readline()
'SHA1 Fingerprint=87:68:8B:B0:6A:E2:DF:A3:E2:63:76:97:A9:2B:B4:F4:82:4E:0B:D1\n'
</code></pre>
<p>If you want to write the value to a file, that works as well, which you can verify by opening a file <code>output.txt</code> in your current working directory:</p>
<pre><code>&gt;&gt;&gt; with open('./output.txt', 'w') as f:
...     f.write(out)
...
77
</code></pre>
<p>The <code>77</code> notifies us that 77 bytes were written to the file, which you can verify by opening it in your favourite text editor.</p>
</div>
<span class="comment-copy">Did you mean to type cmd = "openssl x509 -sha1 -in esx.crt -noout -fingerprint"?</span>
<span class="comment-copy">Is it a working directory difference? If you put the full path to <code>/home/wherever/esx.crt</code> does that make it work? Maybe openssl is erroring with a file not found error, and you aren't getting stderr to find out.</span>
<span class="comment-copy">@Charanjit: what do you mean by file object, as in writing to a file?</span>
<span class="comment-copy">No, the tmp variable is file object</span>
<span class="comment-copy">So the problem is that it can't find the cert file. It's in the same directory as my python file. This is the command:                          subprocess.Popen("openssl x509 -sha1 -in ./rui.crt -noout -fingerprint")          Error: WindowsError: [Error 2] The system cannot find the file specified</span>
<span class="comment-copy">@Charanjit: I had the 17.cert in the same directory as <code>openssl</code> binary, remove the <code>./</code> before <code>rui.crt</code> and try again :)</span>
<span class="comment-copy">Did that, but it doesn't work. It's a windows system.</span>
