<div class="post-text" itemprop="text">
<p>The following code in file <code>script.py</code> makes it possible (after <code>chmod 755 script.py</code>) to either <code>script.py dothis</code> or to <code>script.py dothat</code>.</p>
<pre><code>import sys

def dothis():
    print "We're doing this."

def dothat():
    print "We're doing that."

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print "Error: You must specify exactly one function: dothis or dothat"
        sys.exit(1)
    if sys.argv[1] == "dothis":
        dothis()
    elif sys.argv[1] == "dothat":
        dothat()
    else:
        print "I don't know how to "+sys.argv[1]
</code></pre>
<p>Is this the most elegant way to call one of two functions from the command line?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import argparse as ap

def dothis():
    print "We're doing this."

def dothat():
    print "We're doing that."

if __name__ == "__main__":
    parser = ap.ArgumentParser()
    parser.add_argument('thing', choices=['dothis', 'dothat'])
    args = parser.parse_args()
    f = locals()[args.thing]
    f()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are various options. The <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow">argparse</a> module in the standard library is one. </p>
<p>There are also some wrappers that make it easy/easier to use, for example <a href="https://pypi.python.org/pypi/argh" rel="nofollow">argh</a>. This lets you write:</p>
<pre><code>import argh

# declaring:

def echo(text):
    "Returns given word as is."
    return text

def greet(name, greeting='Hello'):
    "Greets the user with given name. The greeting is customizable."
    return greeting + ', ' + name

# assembling:

parser = argh.ArghParser()
parser.add_commands([echo, greet])

# dispatching:

if __name__ == '__main__':
    parser.dispatch()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I recommend argparse: <a href="https://docs.python.org/2/howto/argparse.html" rel="nofollow">https://docs.python.org/2/howto/argparse.html</a></p>
<p>It supports mutual exclusion of arguments among other features.</p>
</div>
<span class="comment-copy">To use the <code>argparse</code> module</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/1009860/command-line-arguments-in-python">Command Line Arguments In Python</a></span>
<span class="comment-copy">@sobolevn How about the new variation of the question? Does that make it entirely unique?</span>
<span class="comment-copy">argh looks good, but after <code>sudo port install py27-argh</code>, I'm getting "ImportError: No module named argh".</span>
