<div class="post-text" itemprop="text">
<p>Is it possible in python to call dot-syntax-function based on condition. Simple example to turn:</p>
<pre><code>if condition:
  foo().bar().baz()
  lots_of_code()
else:
  foo().baz()
  lots_of_code()

def lots_of_code():
  # lots of code
</code></pre>
<p>into:</p>
<pre><code>foo().(if condition: bar()).baz()
# lots of code only once
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No, it is not possible.</p>
<p>The syntax for attribute reference is </p>
<pre><code>attributeref ::=  primary "." identifier
</code></pre>
<p>Quoting the <a href="https://docs.python.org/3/reference/expressions.html#attribute-references" rel="nofollow">documentation</a>,</p>
<blockquote>
<p>An attribute reference is a <em>primary</em> followed by a period and a <em>name</em></p>
</blockquote>
<p><em>name</em> must be <a href="https://docs.python.org/3/reference/lexical_analysis.html#identifiers" rel="nofollow">a regular Python identifier</a> and identifiers can't contain special characters like <code>(</code>.</p>
<p>However, you can use a simple conditional expression to select <em>primary</em>:</p>
<pre><code>(foo().bar() if condition else foo()).baz()
</code></pre>
<p>It's equivalent to </p>
<pre><code>if condition:
    primary = foo().bar()
else:
    primary = foo()

primary.baz()
</code></pre>
<p>Note that in this case we have to use parentheses, because attribute reference has <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow">higher precedence</a> than conditional expression.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since <code>foo()</code> is called in either case, start by doing so unconditionally. Save that object to <code>f</code>, with the intention of calling <code>f.baz()</code>. Before that, though, check your condition to see if <code>f</code> should really be the result of <code>foo().bar()</code>.</p>
<pre><code>f = foo()
if condition:
    f = f.bar()
f.baz()
</code></pre>
</div>
<span class="comment-copy">You can use <code>getattr</code> rather than <i>"dot-syntax-functions"</i>, so you could do e.g. <code>getattr(foo() if condition else foo().bar(), 'baz')()</code>. Or just split it into two lines: <code>root = foo() if condition else foo().bar(); root.baz()</code>.</span>
<span class="comment-copy">or <code>(foo().bar() if condition else foo()).baz()</code></span>
<span class="comment-copy">@vaultah I think your idea worked the best. If you post answer I can mark it as a solution.</span>
