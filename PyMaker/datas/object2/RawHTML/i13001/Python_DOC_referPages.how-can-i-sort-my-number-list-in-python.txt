<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2545532/python-analog-of-phps-natsort-function-sort-a-list-using-a-natural-order-alg">Python analog of PHP's natsort function (sort a list using a “natural order” algorithm) [duplicate]</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<pre><code>list = ['c:8', 'c:9', 'c:13', 'c:19', 'c:2', 'c:3', 'c:0', 'c:1', 'c:6', 'c:7', 'c:4', 'c:5', 'c:14', 'c:18', 'c:17', 'c:12', 'c:15', 'c:11', 'c:10', 'c:16', 'c:20']
</code></pre>
<p>I used "sorted()" but get this result</p>
<pre><code>['c:0', 'c:1', 'c:10', 'c:11', 'c:12', 'c:13', 'c:14', 'c:15', 'c:16', 'c:17', 'c:18', 'c:19', 'c:2', 'c:20', 'c:3', 'c:4', 'c:5', 'c:6', 'c:7', 'c:8', 'c:9']
</code></pre>
<p>But what I want is</p>
<pre><code>['c:0', 'c:1', 'c:2', 'c:3', 'c:4', 'c:5', 'c:6', 'c:7', 'c:8', 'c:9', 'c:10', 'c:11', 'c:12', 'c:13', 'c:14', 'c:15', 'c:16', 'c:17', 'c:18', 'c:19','c:20']
</code></pre>
<p>Besides getting what I want, I want why <code>sorted()</code> could not work.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; l = ['c:8', 'c:9', 'c:13', 'c:19', 'c:2', 'c:3', 'c:0', 'c:1', 'c:6', 'c:7', 'c:4', 'c:5', 'c:14', 'c:18', 'c:17', 'c:12', 'c:15', 'c:11', 'c:10', 'c:16', 'c:20']
&gt;&gt;&gt; l.sort(key=lambda x: int(x[2:])
&gt;&gt;&gt; l
['c:0', 'c:1', 'c:2', 'c:3', 'c:4', 'c:5', 'c:6', 'c:7', 'c:8', 'c:9', 'c:10', 'c:11', 'c:12', 'c:13', 'c:14', 'c:15', 'c:16', 'c:17', 'c:18', 'c:19', 'c:20']
</code></pre>
<p>Because <code>'c:1', 'c:10', 'c:11'</code> are string, and <code>'c:1', 'c:10', 'c:11'</code> are all start with <code>c:1</code>. So you get something like <code>'c:1', 'c:10', 'c:11', 'c:12', 'c:13', 'c:14'</code>. </p>
<p>As my code, use key argument of <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow"><code>sorted()</code></a> or <a href="https://docs.python.org/3/library/stdtypes.html#list.sort" rel="nofollow"><code>list.sort()</code></a>, and use slice to get the number, then use <code>int()</code> function covert the number into int.</p>
</div>
<div class="post-text" itemprop="text">
<p>use <code>sorted</code> with <code>lambda</code> such that <code>sort</code> on the number in <code>string</code>.</p>
<p><code>sorted(list, key=lambda x:int(x.split(':')[-1]))</code></p>
<pre><code>['c:0',
 'c:1',
 'c:2',
 'c:3',
 'c:4',
 'c:5',
 'c:6',
 'c:7',
 'c:8',
 'c:9',
 'c:10',
 'c:11',
 'c:12',
 'c:13',
 'c:14',
 'c:15',
 'c:16',
 'c:17',
 'c:18',
 'c:19',
 'c:20']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need lambda function as key for sorting to split each element and convert second part to integer:</p>
<pre><code>l = sorted(l, key=lambda x: int(x.split(':')[1]))
</code></pre>
<p>Also you should rename <code>list</code> variable, because it is reserved name in python. </p>
</div>
<span class="comment-copy"><code>sorted(l, key=lambda x: int(x.split(':')[1]))</code></span>
<span class="comment-copy"><code>sorted</code> "doesn't work" because these aren't numbers, these are strings, so they're sorted alphabetically.</span>
<span class="comment-copy">Wouldn't <code>lambda x: int(x[2:])</code> be simpler?</span>
<span class="comment-copy">@wnnmaw: Good idea, edited. Thanks :P</span>
