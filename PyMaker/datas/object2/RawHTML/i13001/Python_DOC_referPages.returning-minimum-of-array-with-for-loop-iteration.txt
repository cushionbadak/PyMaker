<div class="post-text" itemprop="text">
<p>I received this line of code that I'm having trouble understanding syntactically.</p>
<pre><code>def coinsNeeded(coins, price, mincoinList):
     return min([mincoinList[price-coin] for coin in coins if coin &lt;= price]) + 1
</code></pre>
<p>What I know so far is that <code>coins</code> and <code>mincoinList</code> are both arrays of integers and that <code>price</code> is also an integer. </p>
<p>From my understanding, the <code>min()</code> function requires an iterable or two arguments, so I don't quite understand what values are being compared in the <code>min()</code> function. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>min([mincoinList[price-coin] for coin in coins if coin &lt;= price]) + 1
</code></pre>
<p>Letâ€™s disect this line!</p>
<p>The core part of this is the following list comprehension:</p>
<pre><code>[mincoinList[price-coin] for coin in coins if coin &lt;= price]
</code></pre>
<p>List comprehensions are a way to create a list by looping over some sequence. In this case, we are creating a list with elements of the value <code>mincoinList[price - coin]</code> for each <code>coin</code> in the <code>coins</code> list <strong>if</strong> the value of <code>coin</code> is lower or equal to <code>price</code>.</p>
<p>So in other words, it selects those coins which are lower than the price, and then for each of those, it gets an element from <code>mincoinList</code> with the difference of the price and coin as the index.</p>
<p>Finally, that list is passed to <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow"><code>min()</code></a> which just returns the element from the list with the lowest value. That value is then incremented by one and returned from the function.</p>
<hr/>
<p>You could write this all in a very verbose multi-line code like this:</p>
<pre><code>selectedCoins = []
for coin in coins:
    if coin &lt;= price:
        selectedCoins.append(mincoinList[price - coin])

return min(selectedCoins) + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code:</p>
<pre><code>def coinsNeeded(coins, price, mincoinList):
     return min([mincoinList[price-coin] for coin in coins if coin &lt;= price]) + 1
</code></pre>
<p>has a list comprehension which is equivalent to:</p>
<pre><code>def coinsNeeded(coins, price, mincoinList):
     minCoinNeeded = []
     for coin in coins:
         if coin &lt;= price:
             minCoinNeeded += mincoinList[price-coin]
     return min(minCoinNeeded) + 1
</code></pre>
</div>
<span class="comment-copy">the <code>min</code> function requires an <code>iterable</code> and returns the minimum of all the elements in it.</span>
<span class="comment-copy">Right but exactly what is the relationship between the array[price-coin] and the for loop?</span>
<span class="comment-copy">min does not need two iterables, you are getting the min value of a single list</span>
<span class="comment-copy">How would I break this up into multiple lines in order to read it more clearly though? <code>mincoinsList[price-coin]</code> is using the variable <code>coin</code> which appears in the for loop <code>for coin in coins</code> so how is this for loop related to <code>mincoinsList</code> syntactically or exactly how is this minimum being calculated?</span>
<span class="comment-copy">It's getting the minimum of the subset of mincoinList where coin &lt;= price (otherwise it would be trying to access a negative array index).  Read up more on list comprehensions if needed.</span>
