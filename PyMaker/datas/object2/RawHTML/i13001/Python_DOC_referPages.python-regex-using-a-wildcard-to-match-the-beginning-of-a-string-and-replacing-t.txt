<div class="post-text" itemprop="text">
<p>I'm trying to match the beginning of a word and then replace the entire word with something.  Below is what I'm trying to do.</p>
<pre><code>add23khh234 &gt; REMOVED
add2asdf675 &gt; REMOVED
</code></pre>
<p>Below is the regex statement I'm using.</p>
<pre><code>string_reg = re.sub(ur'add*', 'REMOVED', string_reg)
</code></pre>
<p>But this code gives me the following.</p>
<pre><code>add23khh234 &gt; REMOVED23khh234
add2asdf675 &gt; REMOVED2asdf675  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>add*</code> is <code>ad '*d'</code>. <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">From the document</a>:</p>
<blockquote>
<p><code>'*'</code></p>
<p>Causes the resulting RE to match 0 or more repetitions of the preceding RE, as many repetitions as are possible. <code>ab*</code> will match <code>a</code>, <code>ab</code>, or <code>a</code> followed by any number of <code>b</code>s.</p>
</blockquote>
<p>So it matchs <code>ad</code> or <code>add</code> or <code>adddddd...</code>. But it doesn't match neither <code>add23khh234</code> nor <code>add2asdf675</code>(or something like these). </p>
<p>You should use <code>.+?</code> or <code>.*?</code> here(not <code>.*</code>, that's greedy). Try something like this:</p>
<pre><code>string_reg = re.sub(ur'add.+? ', 'REMOVED ', string_reg)
</code></pre>
<hr/>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; string_reg = """\
... add23khh234 &gt; REMOVED23khh234
... add2asdf675 &gt; REMOVED2asdf675"""

&gt;&gt;&gt; string_reg = re.sub(ur'add.+? ', 'REMOVED ', string_reg)
&gt;&gt;&gt; print string_reg
REMOVED &gt; REMOVED23khh234
REMOVED &gt; REMOVED2asdf675
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this</p>
<pre><code>string_reg = re.sub(ur'^add.*', 'REMOVED', string_reg)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you have mulitple patterns on one line</p>
<pre><code>string_reg=re.sub("add[^ ]+","REMOVED",string_reg)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Short answer</strong></p>
<pre><code>\badd\w*
</code></pre>
<hr/>
<p>A <a href="http://www.regular-expressions.info/repeat.html" rel="nofollow">quantifier</a> such as <code>*</code> is applied to the previous token or subpattern. for example, the regex you're using <code>add*</code> matches a literal <code>ad</code> followed by any number of subsequent <code>d</code>.</p>
<p><strong>Meeting your criteria</strong></p>
<ul>
<li>You need to match <code>add</code> at the <strong>beggining</strong> of a word, so use a <a href="http://www.regular-expressions.info/wordboundaries.html" rel="nofollow">word boundary</a> <code>\b</code></li>
<li>Then you also need to match the rest of the word in order to replace it. <code>\w</code> is a <a href="http://www.regular-expressions.info/shorthand.html" rel="nofollow">shorthand</a> for <code>[a-zA-Z0-9_]</code>, which matches 1 word character, and that's what you need to repeat any number of times with <code>*</code>.</li>
</ul>
<p><strong>Code</strong></p>
<pre><code>import re

string_reg = 'add23khh234 ... add2asdf675 ... xxxadd2axxx'

string_reg = re.sub(ur'\badd\w*', 'REMOVED', string_reg)
print(string_reg)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>REMOVED ... REMOVED ... xxxadd2axxx
</code></pre>
<p><kbd><a href="http://ideone.com/OITwzE" rel="nofollow">ideone demo</a></kbd></p>
</div>
<span class="comment-copy">This is correct, except that <code>.+*</code> doesn't make sense. I think you meant <code>.*?</code>.</span>
<span class="comment-copy">@EdCottrell Oops, I always use <code>.+?</code> :P. Edited.</span>
