<div class="post-text" itemprop="text">
<p>I am aware of a similar question available in SO but mine is little different <a href="https://stackoverflow.com/q/33708704/5189062">Find values in mongdb</a>. I am trying out a hotel booking app. Here I store the info about on which date the rooms are booked, which means the rooms are available in all other dates. I am working with <code>mongodb</code> and <code>python</code>.</p>
<p>I am using the <code>$nin</code> function. I have a option called alternate dates, where the user gives in another date. I want to display the availability of only one day that is, if room is available on the first date then the search should stop if not it should continue to the next date and give result if available.</p>
<p>This solution gives result for all the given dates.
<a href="https://stackoverflow.com/a/33708740/5189062">solution of Find values in mongdb</a></p>
<p>The data stored is </p>
<pre><code>{
    "_id" : ObjectId("5645f0443f32df13e0dc786e"),
    "Booked Date" : ["28-9-2015","29-9-2015","1-10-2015"],
    "Room No.": "101"
},
{
    "_id" : ObjectId("5645f0c73f32df062064a0f6"),
    "Booked Date" : ["29-9-2015","1-10-2015"],
    "Room No.": "102"
},
{
    "_id" : ObjectId("5645f0c73f32df06205874f8"),
    "Booked Date" : ["29-9-2015","1-10-2015","2-10-2015"],
    "Room No.": "103"
},
</code></pre>
<p>I do the query like this</p>
<pre><code>db.booking.find({"Date": { '$nin':[Date]}},{"_id": False,"Booked Date": False})
</code></pre>
<p>Here I give the input as <code>["1-10-2015","2-10-2015"]</code></p>
<p>So when I get the result I don't know on which date the room is available.</p>
<p>Is there a way I can solve this problem.</p>
<p>When I run this code </p>
<pre><code>db.booking.find({"Date": { '$nin':["1-10-2015","2-10-2015"]}},{"_id": False,"Booked Date": False})
</code></pre>
<p>I get the result</p>
<pre><code>{"Room No.": "101"}, 
{"Room No.": "102"}
</code></pre>
<p>But I dont know for which date the room is available. In the above case it is available only on <code>2-10-2015</code>.</p>
<p>So is there a way to say that it is available on <code>2-10-2015</code>.</p>
<p>And for another case:</p>
<pre><code>db.booking.find({"Date": { '$nin':["1-10-2015","2-10-2015", "3-10-2015"]}},{"_id": False,"Booked Date": False})
</code></pre>
<p>Here it is available on <code>2-10-2015 &amp; 3-10-2015</code>, but it should show only the first availability date i.e <code>2-10-2015</code>.</p>
<p>The output should be the same as above:</p>
<pre><code>{"Room No.": "101"},
{"Room No.": "102"}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to use the <a href="http://api.mongodb.org/python/current/api/pymongo/collection.html#pymongo.collection.Collection.aggregate" rel="nofollow"><code>.aggregate()</code></a> method.</p>
<p>You will need to use the <a href="https://docs.mongodb.org/v3.0/reference/operator/aggregation/match/#pipe._S_match" rel="nofollow"><code>$match</code></a> operator to select document where the "Booked Date" is in your "date_list" then use the <a href="https://docs.mongodb.org/v3.0/reference/operator/aggregation/project/" rel="nofollow"><code>$project</code></a> operator to return the the "Room No" and the corresponding list of "available date" using the <a href="https://docs.mongodb.org/v3.0/reference/operator/aggregation/setDifference/" rel="nofollow"><code>$setDifference</code></a> operator.</p>
<p>Then all you will need is handle the rest of the job client side.</p>
<pre><code>from pprint import pprint
date_list = ["1-10-2015","2-10-2015", "3-10-2015"]
cur = collection.aggregate([
    {"$match": {"Booked Date": {"$in": date_list}}}, 
    {"$project": {
        "Room No": 1, 
        "available_date": {
            "$setDifference": [date_list, "$Booked Date"]
        }
    }}
])
</code></pre>
<p>Then using <a href="https://docs.python.org/3/library/pprint.html" rel="nofollow"><code>pprint.pprint</code></a> to print the result:</p>
<pre><code>pprint(list(cur))
</code></pre>
<p>which yields:</p>
<pre><code>[{'Room No': '101',
  '_id': ObjectId('5645f0443f32df13e0dc786e'),
  'available_date': ['2-10-2015', '3-10-2015']},
 {'Room No': '102',
  '_id': ObjectId('5645f0c73f32df062064a0f6'),
  'available_date': ['2-10-2015', '3-10-2015']},
 {'Room No': '103',
  '_id': ObjectId('5645f0c73f32df06205874f8'),
  'available_date': ['3-10-2015']}]
</code></pre>
<p>Now another way of doing this which is less efficient is that you can denormalize your "available_date" array or list using the <a href="https://docs.mongodb.org/v3.0/reference/operator/aggregation/unwind/#pipe._S_unwind" rel="nofollow"><code>$unwind</code></a> operator then <a href="https://docs.mongodb.org/v3.0/reference/operator/aggregation/sort/#pipe._S_sort" rel="nofollow"><code>$sort</code></a> your result by "available_date" in ascending order. From there you will need to <a href="https://docs.mongodb.org/v3.0/reference/operator/aggregation/group/#pipe._S_group" rel="nofollow"><code>$group</code></a> your document by "Room No" and use the <a href="https://docs.mongodb.org/v3.0/reference/operator/aggregation/first/#grp._S_first" rel="nofollow"><code>$first</code></a> operator to return the first date for each document.</p>
<p><strong>As you can see this a lot more unnecessary work to the server and therefore is not a good solution.</strong></p>
<pre><code>cur = collection.aggregate([
    {"$match": {"Booked Date": {"$in": date_list}}},
    {"$project": {
        "Room No": 1, 
        "available_date": {
            "$setDifference": [date_list, "$Booked Date"]
        }
    }},
    {'$unwind': '$available_date'}, 
    {'$sort': {'avalable_date': 1}}, 
    {'$group': {
        '_id': '$Room No', 
        'available_date': {'$first': '$available_date'}
    }}
])
# pretty print the result
pprint(list(cur))
</code></pre>
<p>Which yields:</p>
<pre><code>[{'_id': '102', 'available_date': '2-10-2015'},
 {'_id': '101', 'available_date': '2-10-2015'},
 {'_id': '103', 'available_date': '3-10-2015'}]
</code></pre>
</div>
<span class="comment-copy">Your question is hard to understand please show the expected result.</span>
<span class="comment-copy">@user3100115 please check the edit</span>
<span class="comment-copy">@TonyRoczz I thought you need the first result.. but I guess you need only one room for each date if its available on that date. right?</span>
<span class="comment-copy">@TonyRoczz if that is so.. I really doubt there may be a query to do that in mongo.. but you can counter that inside your python code.. just return room along with the dates they are available.. and strip down the rooms that are available on the same date.. :)</span>
<span class="comment-copy">What about <code>"Room No": 103</code> ? what should the result be? <code>3-10-2015</code>? right?</span>
