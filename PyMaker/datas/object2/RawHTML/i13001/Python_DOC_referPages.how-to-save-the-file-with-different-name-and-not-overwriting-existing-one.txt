<div class="post-text" itemprop="text">
<p>I need to run a python script repeatedly over different data set. This python script test.py processes the data set, plot and save the result using the command.</p>
<pre><code>plt.savefig('result.png')
</code></pre>
<p>How can I ensure that when the same <code>test.py</code> scripts runs on another data set.. the new <code>result.png</code> doesn't overwrite my previous result? Basically before executing <code>plt.savefig('result.png')</code>, I need to check if result.png already exist and if does then rename the result to any other name like </p>
<pre><code>result1.png
result2.png
</code></pre>
<p>Otherwise, in the next post processing the file is overwritten.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import time
if os.path.exists('result.png'):
    plt.savefig('result_{}.png'.format(int(time.time())))
else:
    plt.savefig('result.png')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>os.path.exists</code> to check whether the file already exists, and if so, append a number. Repeat with the new file name until you find one that does not yet exist.</p>
<pre><code>def unique_file(basename, ext):
    actualname = "%s.%s" % (basename, ext)
    c = itertools.count()
    while os.path.exists(actualname):
        actualname = "%s (%d).%s" % (basename, next(c), ext)
    return actualname
</code></pre>
<p>Example-usage:</p>
<pre><code>for i in range(5):
    with open(unique_file("foo", "txt"), "w") as f:
        f.write(str(i))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>tempfile.mkstemp</code> available in the standard library</p>
<pre><code>import tempfile
fi, filename = tempfile.mkstemp(prefix='result_', suffix='.png')
</code></pre>
<p>Note: <code>fi</code> is an integer. In case you need a file object do</p>
<pre><code>f = os.fdopen(fi, "w")
</code></pre>
<p>whereas <code>filename</code> includes the absolute pathname of the created file, e.g.</p>
<pre><code>'/tmp/result_d_3787js.png'
</code></pre>
<p>Another solution is to use UUIDs, e.g.</p>
<pre><code>import uuid
filename = 'result_'+str(uuid.uuid4())+'.png'
</code></pre>
<p>which produces something like</p>
<pre><code>result_cf29d123-271e-4899-b2f6-d172f157af65.png
</code></pre>
<p>Please see the official docs for further info and parameters
on <a href="https://docs.python.org/3/library/tempfile.html#tempfile.mkstemp" rel="nofollow">mkstemp</a> and <a href="https://docs.python.org/3/library/uuid.html?highlight=uuid#module-uuid" rel="nofollow">uuid</a></p>
</div>
<span class="comment-copy">You can use <code>os.path.exists</code> to check whether the file already exists.</span>
<span class="comment-copy">Note that in its current form this will fail in case two results are created within the same second. Probably does not matter, just wanted to point out.</span>
<span class="comment-copy">Man, the time taken in plotting the matplotlib plot is more than a second in normal scenarios.</span>
