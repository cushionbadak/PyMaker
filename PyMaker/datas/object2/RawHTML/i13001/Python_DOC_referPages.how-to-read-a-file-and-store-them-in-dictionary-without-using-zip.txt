<div class="post-text" itemprop="text">
<p>I need to read the file that contains first line as a key and the second line as a value. I am able to open the file and read it but i am not able to assign it to the dictionary format. </p>
<pre><code>def ticker(n):
infile = open(n)
content = infile.readlines()
c = {}
for lines in content:
    print (lines)
</code></pre>
<p>Below is my output, but i am not able to assign the first line to key and second line to value. </p>
<pre><code>WHOLE FOODS MARKET
WFMI
WYNN RESORTS, LTD
WYNN
XILINX
XLNX
XM SATELLITE RADIO HOLDINGS
XMSR
YAHOO
YHO
</code></pre>
<p>Thanks. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use a dict generator:</p>
<pre><code>{content[i]:content[i+1] for i in range(0, len(content)-1, 2)}
</code></pre>
<p>In your code like so:</p>
<pre><code>def ticker(n):
    infile = open(n)
    content = infile.readlines()
    infile.close()  # Remember to close your file objects... (or use with block)
    return {content[i].strip():content[i+1].strip() for i in range(0, len(content)-1, 2)}
</code></pre>
<p>Or, as @ShadowRanger suggests using zip and slices:</p>
<pre><code>def ticker(n):
    with open(n) as infile:
        content = infile.readlines()
        return dict(zip(content[::2], content[1::2]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You'd use <code>zip</code>, but not with <code>tee</code>, since that would pair all lines with their next line, not even lines with odd.  To pair even with odd, do:</p>
<pre><code>def ticker(file_name):
   with open(file_name) as f:
      stripped = iter(map(str.rstrip, f))
      return dict(zip(*([stripped] * 2)))
</code></pre>
<p>This is just wrapping a <code>dict</code> constructor around an inlined version of the <a href="https://docs.python.org/3/library/itertools.html#itertools-recipes" rel="nofollow"><code>grouper</code> <code>itertools</code> recipe</a>, though using <code>zip</code> since we know it's paired up.</p>
</div>
<span class="comment-copy">If you're going to slurp the whole file up front, you may as well just simplify using slices: <code>return dict(zip(content[::2], content[1::2]))</code></span>
<span class="comment-copy">@ShadowRanger thanks, and revised to include that.</span>
<span class="comment-copy">@DavidZemens sorry i should have mentioned we are not allowed to use zip yet and also i am getting below new line character on the output.     {'\n': '\n',  'ACTIVISION INC  \t\n': 'ATVI\n',  'ADOBE SYS INC\n': 'ADBE\n',  'ALTERA CORP \t\n': 'ALTR\n',  'AMAZON \t\n': 'AMZN\n',  'AMERICAN POWER CONVER CORP \t\n': 'APCC\n'</span>
<span class="comment-copy">Use the <code>strip()</code> method <code>{content[i].strip():content[i+1].strip() for i in range(0, len(content)-1, 2)}</code></span>
