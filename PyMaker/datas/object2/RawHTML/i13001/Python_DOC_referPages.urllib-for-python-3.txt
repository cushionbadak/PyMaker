<div class="post-text" itemprop="text">
<p>This code in python3 is problematic：</p>
<pre><code>import urllib.request
fhand=urllib.request.urlopen('http://www.py4inf.com/code/romeo.txt')
print(fhand.read())
</code></pre>
<p>Its output is:</p>
<pre><code>b'But soft what light through yonder window breaks'
b'It is the east and Juliet is the sun'
b'Arise fair sun and kill the envious moon'
b'Who is already sick and pale with grief'
</code></pre>
<p>Why did I get <code>b'...'</code>？
What could I do to get the right response？</p>
<p>The right text should be</p>
<pre><code>But soft what light through yonder window breaks
It is the east and Juliet is the sun
Arise fair sun and kill the envious moon
Who is already sick and pale with grief
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>b'...'</code> is a <a href="https://stackoverflow.com/questions/6269765/what-does-the-b-character-do-in-front-of-a-string-literal">byte string</a>: an array of bytes, not a real string.</p>
<p>To <a href="https://stackoverflow.com/questions/606191/convert-bytes-to-a-python-string">convert to a real string</a>, use</p>
<pre><code>fhand.read().decode()
</code></pre>
<p>This uses the default encoding 'UTF-8'. For ASCII encoding, use</p>
<pre><code>fhand.read().decode("ASCII")
</code></pre>
<p>for example</p>
</div>
<div class="post-text" itemprop="text">
<p>As <a href="https://docs.python.org/3/library/http.client.html#httpresponse-objects" rel="nofollow">the documentation</a> says, <code>urlopen</code> returns an object whose <code>read</code> method gives you a sequence of <em>bytes</em>, not a sequence of <em>characters</em>. In order to convert the bytes to printable characters, which is what you want, you will need to apply the <code>decode</code> method, using the encoding that the bytes are in.</p>
<p>The reason the result <em>seems</em> to make sense is that the default encoding Python picks to display the bytes happens to be the right one, or at least happens to match the right one for these characters.</p>
<p>To do this properly, you should <code>read().decode(encoding)</code> where <code>encoding</code> is the encoding value from the <code>Content-Type</code> HTTP header, accessible through the <a href="https://docs.python.org/3/library/http.client.html#httpresponse-objects" rel="nofollow"><code>HTTPResponse</code> object</a> (that is, <code>fhand</code>, in your code). If there is no <code>Content-Type</code> header, or if it doesn't specify an encoding, you're reduced to <a href="https://stackoverflow.com/questions/1808567/what-is-the-default-content-type-charset">guessing which encoding to use</a>, but for typical English text it doesn't matter, and in many other cases it's probably going to be UTF-8.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3 distinguishes between byte sequences and strings. The "b" in front of the string tells you that urllib returned the contents as "raw" bytes. It might be worth reading into the python 3 bytes/strings situation, but basically, you did get the right text back. If you don't want the result to be bytes, you'd just have to convert it back to a "real" python string.</p>
</div>
<div class="post-text" itemprop="text">
<p>The third-party <a href="http://docs.python-requests.org" rel="nofollow">requests</a> library handles decoding to unicode strings automatically.  It does its best to infer the correct encoding so you don't need to guess the encoding yourself.</p>
<pre><code>&gt;&gt;&gt; import requests
&gt;&gt;&gt; r = requests.get('http://www.py4inf.com/code/romeo.txt')
&gt;&gt;&gt; print(r.text)
But soft what light through yonder window breaks
It is the east and Juliet is the sun
Arise fair sun and kill the envious moon
Who is already sick and pale with grief
</code></pre>
<p>Same thing with <code>urllib.request</code> and an assumed <code>UTF-8</code> encoding:</p>
<pre><code>&gt;&gt;&gt; from urllib.request import urlopen
&gt;&gt;&gt; r = urlopen('http://www.py4inf.com/code/romeo.txt')
&gt;&gt;&gt; print(r.read().decode('UTF-8'))
But soft what light through yonder window breaks
It is the east and Juliet is the sun
Arise fair sun and kill the envious moon
Who is already sick and pale with grief
</code></pre>
</div>
<span class="comment-copy">possible duplicate of: <a href="http://stackoverflow.com/questions/6269765/what-does-the-b-character-do-in-front-of-a-string-literal" title="what does the b character do in front of a string literal">stackoverflow.com/questions/6269765/…</a></span>
<span class="comment-copy">Is there any more simply way? 'fhand.read().decode("ASCII")'  OMG It's so long!</span>
<span class="comment-copy">@Fourier: <code>decode()</code> has sensible defaults. Just leave the "ASCII" out. Short enough?</span>
<span class="comment-copy">Oh! that's all right!</span>
<span class="comment-copy">@Fourier: Thank you for asking about the shorter form.</span>
<span class="comment-copy">Thanks for ur patient!</span>
<span class="comment-copy">Thank u so much!</span>
<span class="comment-copy">Thank you very much!</span>
<span class="comment-copy">Thank you very much. It works!</span>
