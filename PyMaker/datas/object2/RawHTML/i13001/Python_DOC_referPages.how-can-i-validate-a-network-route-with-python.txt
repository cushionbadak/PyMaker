<div class="post-text" itemprop="text">
<p>Is there a way to validate if a route as below is valid or not with Python?</p>
<pre><code>10.1.1.1 255.255.255.0 192.168.1.10
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://stackoverflow.com/questions/11264005/using-a-regex-to-match-ip-addresses-in-python">RegEx</a> to check it's IP address or not, and then you can use <a href="https://docs.python.org/3/library/ipaddress.html" rel="nofollow noreferrer"><code>ipaddress</code></a> module to check it's valid or not, for example:</p>
<pre><code>import ipaddress
a = ['10.1.1.1', '255.255.255.0',
     '192.168.1.10', '999.999.999.999',
     '123.456.789', 'foobar', '123456']

for i in a:
    try:
        print()
        print(i)
        ipaddress.ip_address(i)
    except ValueError:
        print('invalid')
    else:
        print('valid')
</code></pre>
<p>Output:</p>
<pre><code>10.1.1.1
valid

255.255.255.0
valid

192.168.1.10
valid

999.999.999.999
invalid

123.456.789
invalid

foobar
invalid

123456
invalid
</code></pre>
<hr/>
<p>Also, use <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Address" rel="nofollow noreferrer"><code>ipaddress.IPv4Address()</code></a> to check an IPv4 address, use <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv6Address" rel="nofollow noreferrer"><code>ipaddress.IPv6Address</code></a> to check an IPv6 address. Example:</p>
<pre><code>&gt;&gt;&gt; ipaddress.ip_address('127.0.0.1')
IPv4Address('127.0.0.1')

&gt;&gt;&gt; ipaddress.ip_address('2001:0db8:85a3:0000:0000:8a2e:0370:7334')
IPv6Address('2001:db8:85a3::8a2e:370:7334')


&gt;&gt;&gt; ipaddress.IPv4Address('2001:0db8:85a3:0000:0000:8a2e:0370:7334')
Traceback (most recent call last):
  File "&lt;input&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.5/ipaddress.py", line 1284, in __init__
    self._ip = self._ip_int_from_string(addr_str)
  File "/usr/lib/python3.5/ipaddress.py", line 1118, in _ip_int_from_string
    raise AddressValueError("Expected 4 octets in %r" % ip_str)
ipaddress.AddressValueError: Expected 4 octets in '2001:0db8:85a3:0000:0000:8a2e:0370:7334'

&gt;&gt;&gt; ipaddress.IPv6Address('2001:0db8:85a3:0000:0000:8a2e:0370:7334')
IPv6Address('2001:db8:85a3::8a2e:370:7334')


&gt;&gt;&gt; ipaddress.IPv6Address('127.0.0.1')
Traceback (most recent call last):
  File "&lt;input&gt;", line 1, in &lt;module&gt;
  File "/usr/lib/python3.5/ipaddress.py", line 1909, in __init__
    self._ip = self._ip_int_from_string(addr_str)
  File "/usr/lib/python3.5/ipaddress.py", line 1646, in _ip_int_from_string
    raise AddressValueError(msg)
ipaddress.AddressValueError: At least 3 parts expected in '127.0.0.1'

&gt;&gt;&gt; ipaddress.IPv4Address('127.0.0.1')
IPv4Address('127.0.0.1')
</code></pre>
</div>
<span class="comment-copy">What do you consider as "valid"?</span>
<span class="comment-copy">I don't think that 255.255.255.0 is actually a valid address - it's part of a reserved range. But of course it depends on what exactly OP means by "valid".</span>
<span class="comment-copy">@interjay: Yep, this question is little unclear. If this isn't OP's looking for I'll edit or delete it.</span>
