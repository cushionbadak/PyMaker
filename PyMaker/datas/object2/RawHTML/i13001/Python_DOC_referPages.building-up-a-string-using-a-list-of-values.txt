<div class="post-text" itemprop="text">
<p>I want to fill in a string with a specific format in mind. When I have a single value, it's easy to build it:</p>
<pre><code>&gt;&gt;&gt; x = "there are {} {} on the table.".format('3', 'books')
&gt;&gt;&gt; x
'there are 3 books on the table.'
</code></pre>
<p>but what if I have a long list of objects</p>
<pre><code>items =[{'num':3, 'obj':'books'}, {'num':1, 'obj':'pen'},...]
</code></pre>
<p>and I want to construct the sentence in the exact same way:</p>
<pre><code>There are 3 books and 1 pen and 2 cellphones and... on the table
</code></pre>
<p>How would I be able to do that, given that I don't know the length of the list? Using <code>format</code> I could easily construct the string, but then I have to know the length of the list beforehand.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code> call</a> with a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a><sup>*</sup> to build up the objects part:</p>
<pre><code>objects = ' and '.join(['{num} {obj}'.format(**item) for item in items])
</code></pre>
<p>then interpolate that into the full sentence:</p>
<pre><code>x = "There are {} on the table".format(objects)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; items = [{'num': 3, 'obj': 'books'}, {'num': 1, 'obj': 'pen'}, {'num': 2, 'obj': 'cellphones'}]
&gt;&gt;&gt; objects = ' and '.join(['{num} {obj}'.format(**item) for item in items])
&gt;&gt;&gt; "There are {} on the table".format(objects)
'There are 3 books and 1 pen and 2 cellphones on the table'
</code></pre>
<hr/>
<p><sup>*</sup> You <em>could</em> use a <a href="https://docs.python.org/3/tutorial/classes.html#generator-expressions" rel="nofollow noreferrer">generator expression</a>, but for a <code>str.join()</code> call <a href="https://stackoverflow.com/a/9061024/100297">a list comprehension happens to be faster</a>.</p>
</div>
<span class="comment-copy">mind = blown. This is so simple and beatiful</span>
<span class="comment-copy">Martijn, why a list comprehension and not a generator expressions as the parameter to <code>str.join</code>?</span>
<span class="comment-copy">@Robáµ© Because <code>join</code> will convert the generator expression to list by itself.And by passing the generator expression to join you will force the <code>join</code> to does this job!</span>
<span class="comment-copy">@Kasramvd - my point exactly.</span>
<span class="comment-copy">Thanks, Martijn.</span>
