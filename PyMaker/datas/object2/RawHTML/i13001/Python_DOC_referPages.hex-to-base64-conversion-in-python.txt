<div class="post-text" itemprop="text">
<p>I want to convert a simple HEX string such as 10000000000002ae to Base 64.</p>
<p>The hex string is to be converted to bytes, and the bytes are then encoded to base64 notation, so the expected output for that string: EAAAAAAAAq4=</p>
<p>I found a tool online. <a href="http://tomeko.net/online_tools/hex_to_base64.php?lang=en" rel="noreferrer">http://tomeko.net/online_tools/hex_to_base64.php?lang=en</a></p>
<p>But I have a bunch of HEX values that I need to convert in a script.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has native support for both HEX and base64 encoding:</p>
<pre><code>encoded = HEX_STRING.decode("hex").encode("base64")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3, arbitrary encodings including Hex and Base64 has been moved to <code>codecs</code> module. To get a Base64 <code>str</code> from a hex <code>str</code>:</p>
<pre><code>import codecs

hex = "10000000000002ae"
b64 = codecs.encode(codecs.decode(hex, 'hex'), 'base64').decode()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The tool you link to simply interprets the hex as bytes, then encodes those bytes to Base64.</p>
<p>Either use the <a href="https://docs.python.org/2/library/binascii.html#binascii.unhexlify" rel="nofollow noreferrer"><code>binascii.unhexlify()</code> function</a> to convert from a hex string to bytes, or use the <a href="https://docs.python.org/3/library/stdtypes.html#bytes.fromhex" rel="nofollow noreferrer"><code>bytes.fromhex()</code> class method</a>. Then use the <a href="https://docs.python.org/2/library/binascii.html#binascii.b2a_base64" rel="nofollow noreferrer"><code>binascii.b2a_base64()</code> function</a> to convert that to Base64:</p>
<pre><code>from binascii import unhexlify, b2a_base64

result = b2a_base64(unhexlify(hex_string))
</code></pre>
<p>or</p>
<pre><code>from binascii import b2a_base64

result = b2a_base64(bytes.fromhex(hex_string))
</code></pre>
<p>In Python 2, you can also use the <code>str.decode()</code> and <code>str.encode()</code> methods to achieve the same:</p>
<pre><code>result = hex_string.decode('hex').encode('base64')
</code></pre>
<p>In Python 3, you'd have to use the <code>codecs.encode()</code> function for this.</p>
<p>Demo in Python 3:</p>
<pre><code>&gt;&gt;&gt; bytes.fromhex('10000000000002ae')
b'\x10\x00\x00\x00\x00\x00\x02\xae'
&gt;&gt;&gt; from binascii import unhexlify, b2a_base64
&gt;&gt;&gt; unhexlify('10000000000002ae')
b'\x10\x00\x00\x00\x00\x00\x02\xae'
&gt;&gt;&gt; b2a_base64(bytes.fromhex('10000000000002ae'))
b'EAAAAAAAAq4=\n'
&gt;&gt;&gt; b2a_base64(unhexlify('10000000000002ae'))
b'EAAAAAAAAq4=\n'
</code></pre>
<p>Demo on Python 2.7:</p>
<pre><code>&gt;&gt;&gt; '10000000000002ae'.decode('hex')
'\x10\x00\x00\x00\x00\x00\x02\xae'
&gt;&gt;&gt; '10000000000002ae'.decode('hex').encode('base64')
'EAAAAAAAAq4=\n'
&gt;&gt;&gt; from binascii import unhexlify, b2a_base64
&gt;&gt;&gt; unhexlify('10000000000002ae')
'\x10\x00\x00\x00\x00\x00\x02\xae'
&gt;&gt;&gt; b2a_base64(unhexlify('10000000000002ae'))
'EAAAAAAAAq4=\n'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python has native support for both HEX and base64 encoding:</p>
<pre><code>import base64

def main():
    b16 = bytearray('10000000000002ae'.decode('hex'))
    b64 = base64.b64encode(b16)

    print b64
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In case someone is looking for a python3 one-liner (bash):</p>
<pre><code>python -c "import codecs as c; print(c.encode(c.decode('10000000000002ae', 'hex'), 'base64').decode())"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In python3, you may use <code>bytes.fromhex</code> to bytes, use base64 package convert bytes to base64</p>
<pre class="lang-py prettyprint-override"><code>hex_str = '01'
encoded_str = base64.b64encode(bytes.fromhex(hex_str)).decode('utf-8')
decoded_str = base64.b64decode(encoded_str.encode('utf-8')).hex()
</code></pre>
</div>
<span class="comment-copy">I had to go to the tool itself and run an experiment to see what was meant. The tool decodes the hex notation to bytes, then converts that binary data to base64.</span>
<span class="comment-copy">Always try to break down your problem into sub-problems, and try to understand what the conversion actually does. The two steps involved here are both already answered widely here on Stack Overflow and elsewhere.</span>
<span class="comment-copy">This is awesome. Thank you so much.</span>
<span class="comment-copy"><code>AttributeError: 'str' object has no attribute 'decode'</code></span>
<span class="comment-copy">You're using python 3; this answer works only in python 2 (see the answer below for a Python 3 solution)</span>
<span class="comment-copy">Thanks for the update. This was exactly what I was looking for.</span>
<span class="comment-copy">That tacks on a newline at the end for some reason.</span>
