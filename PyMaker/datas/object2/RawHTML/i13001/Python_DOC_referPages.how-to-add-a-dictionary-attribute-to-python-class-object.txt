<div class="post-text" itemprop="text">
<p>I have a bit of code I'm working with (<a href="https://github.com/Kitt-AI/parsetron" rel="nofollow">specifically Parsetron</a>) which was written for Python 2.7 which I'm trying to run using python 3.4 and unsurprisingly it's throwing errors. </p>
<p>The error I'm specifically looking at is this: </p>
<pre><code>def __new__(cls):
    return cls.__dict__['_grammar_']

KeyError: '_grammar_'
</code></pre>
<p><code>cls</code> is class object, which indeed does not have the key "<code>_grammar_</code>". My question is of course, how to get rid of this error and why it appears. In python 2.7, does <code>__dict__</code> add a key value to the class object whereas Python 3.x doesn't? Running through the thread during debugging it doesn't seem to add this value anywhere. Anyone know what's going on?</p>
</div>
<div class="post-text" itemprop="text">
<p>Looking at the code, you can see that the <code>Grammar._grammar_</code> class attribute is actually <a href="https://github.com/Kitt-AI/parsetron/blob/master/parsetron/parsetron.py#L87" rel="nofollow">set by the metaclass</a>:</p>
<pre><code>dct["_grammar_"] = GrammarImpl(name, dct)
</code></pre>
<p>However, <code>Grammar</code> <a href="https://github.com/Kitt-AI/parsetron/blob/master/parsetron/parsetron.py#L114" rel="nofollow">uses the 2.x syntax</a> for setting a metaclass:</p>
<pre><code>__metaclass__ = MetaGrammar
</code></pre>
<p>To adapt this for Python 3.x, use the <a href="https://docs.python.org/3/whatsnew/3.0.html#changed-syntax" rel="nofollow">new syntax</a>:</p>
<pre><code>class Grammar(metaclass=MetaGrammar):
</code></pre>
</div>
<span class="comment-copy">Could you create a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> for this, rather than two disembodied lines, and give the full traceback?</span>
<span class="comment-copy">it looks like the <b>new</b> method is trying to implement some sort of singleton - however, if that really is the total of the <b>new</b> method it's not doing it very well. As @jonrsharpe says - a proper example is needed for this:</span>
<span class="comment-copy">See <a href="http://stackoverflow.com/q/6760685/3001761">method 3 for creating a singleton</a>, and a possible duplicate: <a href="http://stackoverflow.com/q/17237857/3001761">stackoverflow.com/q/17237857/3001761</a></span>
