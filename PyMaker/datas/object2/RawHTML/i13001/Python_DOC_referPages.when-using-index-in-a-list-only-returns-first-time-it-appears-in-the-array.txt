<div class="post-text" itemprop="text">
<pre><code>sentence = "ask not what your country can do for you ask what you can do for your country"
sentList = sentence.split()

print(sentence)
userWord = input("Pick a word from the sentence above").lower()

if userWord in sentList:

    while True:
       if sentList.index(userWord) + 1 &gt;= 4:
          print (userWord, "appears in the sentence in the",sentList.index(userWord) + 1,"th position")
          break

    elif sentList.index(userWord) + 1 == 3:
          print (userWord, "appears in the sentence in the",sentList.index(userWord) + 1,"rd position")
          break

    elif sentList.index(userWord) + 1 == 2:
        print (userWord, "appears in the sentence in the",sentList.index(userWord) + 1,"nd position")
        break

    elif sentList.index(userWord) + 1 == 1:
         print (userWord, "appears in the sentence in the",sentList.index(userWord) + 1,"st position")
         break

else:
     userWord = input("That word isn't in the sentence, try again")
</code></pre>
<p>When I run the program it only returns the position of the first time it appears in the array. </p>
<p>i.e
    ask not what your country can do for you ask what you can do for your     country</p>
<p>Pick a word from the sentence above: ask</p>
<p>'ask' appears in the sentence in the 1 st position</p>
<p>Why does this happen and how can I fix it?</p>
<p>Sorry if this is a stupid question I am a coding noobie</p>
</div>
<div class="post-text" itemprop="text">
<p>The other answer is better.
I left this one as an example of an alternative way.</p>
<p>according to the python documentation at <a href="https://docs.python.org/3.3/tutorial/datastructures.html" rel="nofollow">https://docs.python.org/3.3/tutorial/datastructures.html</a></p>
<pre><code>Index: Return the index in the list of the first item whose value is x. It is an error if there is no such item.
</code></pre>
<p>you should probably use a for loop (the easiest way) or probably it will be a good example of writing a generator.</p>
<pre><code>for i,word in enumerate(sentList):
    if userWord == word:
        checkLocation(i,userWord)

def checkLocation(index,userWord):
    if index + 1 &gt;= 4:
        print (userWord, "appears in the sentence in the",index + 1,"th position")
    elif 
        index + 1 == 3:
        print (userWord, "appears in the sentence in the",index + 1,"rd position")
    elif 
        index + 1 == 2:
        print (userWord, "appears in the sentence in the",index + 1,"nd position")
    elif 
        index + 1 == 1:
        print (userWord, "appears in the sentence in the",index + 1,"st position")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/stdtypes.html#common-sequence-operations" rel="nofollow"><code>list.index</code></a> accepts additional start index (and end index). Pass the index to find next matched item index.</p>
<pre><code>...

if userWord in sentList:
    i = 0
    while True:
        try:
            i = sentList.index(userWord, i)  # &lt;---
        except ValueError:  # will raise ValueError unless the item is found
            break
        i += 1
        print("{} appears in the sentence in the {}th position".format(
            userWord, i
        ))

else:
     ....
</code></pre>
</div>
<span class="comment-copy"><code>index()</code> returns the first occurrence of the <code>substring</code>. If you want all the indexes write your own function.</span>
<span class="comment-copy">it doesn't appear in the documantation, Thanks.</span>
<span class="comment-copy">@Srgrn, It does. Search for the <code>s.index</code> in the document I linked in the answer.</span>
<span class="comment-copy">I looked on the tutorial page for lists sorry.</span>
