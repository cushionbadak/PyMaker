<div class="post-text" itemprop="text">
<p>The Train status API I use recently added two additional key value pairs <code>(has_arrived, has_departed)</code> in the JSON object, which caused my script to crash.</p>
<p>Here's the dictionary:</p>
<pre><code>{
"response_code": 200,
  "train_number": "12229",
  "position": "at Source",
  "route": [
    {
      "no": 1,
      "has_arrived": false,
      "has_departed": false,
      "scharr": "Source",
      "scharr_date": "15 Nov 2015",
      "actarr_date": "15 Nov 2015",
      "station": "LKO",
      "actdep": "22:15",
      "schdep": "22:15",
      "actarr": "00:00",
      "distance": "0",
      "day": 0
    },
    {
      "actdep": "23:40",
      "scharr": "23:38",
      "schdep": "23:40",
      "actarr": "23:38",
      "no": 2,
      "has_departed": false,
      "scharr_date": "15 Nov 2015",
      "has_arrived": false,
      "station": "HRI",
      "distance": "101",
      "actarr_date": "15 Nov 2015",
      "day": 0
    }
  ]
}
</code></pre>
<p>Not surprisingly, I got the following error:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NameError: name 'false' is not defined
</code></pre>
<p>If I am not mistaken, I think this is because the boolean value in the JSON response is <code>false</code>/<code>true</code> whereas Python recognizes <code>False</code>/<code>True</code>.
Is there any way around it?</p>
<p>PS: I tried converting the JSON response of <code>has_arrived</code> to string and then converting it back to a boolean value, only to find out that I'll always get a <code>True</code> value if there's any character in the string.
I am kinda stuck here.</p>
</div>
<div class="post-text" itemprop="text">
<p>Even though Python's object declaration syntax is very similar to JSON syntax, they're distinct and incompatible. As well as the <code>True</code>/<code>true</code> issue, there are other problems (eg Json and Python handle dates very differently, and python allows comments while Json does not).</p>
<p>The solution is to convert from one to the other.</p>
<p>Python's <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json</a> library can be used to parse (read) the Json in a string and convert it into a python object...</p>
<pre><code>data_from_api = '{...}'
info = json.loads(data_from_api)
</code></pre>
<p>You can convert python objects to json too...</p>
<pre><code>info_as_json = json.dumps(info)
</code></pre>
<p>Example:</p>
<pre><code># Import the json library
import json

# Get the Json data from the question into a variable...
data_from_api = """{
"response_code": 200,
  "train_number": "12229",
  "position": "at Source",
  "route": [
    {
      "no": 1, "has_arrived": false, "has_departed": false,
      "scharr": "Source",
      "scharr_date": "15 Nov 2015", "actarr_date": "15 Nov 2015",
      "station": "LKO", "actdep": "22:15", "schdep": "22:15",
      "actarr": "00:00", "distance": "0", "day": 0
    },
    {
      "actdep": "23:40", "scharr": "23:38", "schdep": "23:40",
      "actarr": "23:38", "no": 2, "has_departed": false,
      "scharr_date": "15 Nov 2015", "has_arrived": false,
      "station": "HRI", "distance": "101",
      "actarr_date": "15 Nov 2015", "day": 0
    }
  ]
}"""

# Convert that data into a python object...
info = json.loads(data_from_api)
print(info)
</code></pre>
<p>And a second example showing how the True/true conversion happens. Note also the changes to quotation, and how the comment is stripped...</p>
<pre><code>info = {'foo': True,  # Some insightful comment here
        'bar': 'Some string'}

# Print a condensed representation of the object
print(json.dumps(info))

# Or print a formatted version which is more human readable but uses more bytes
print(json.dumps(info, indent=2))
</code></pre>
<p>Output:</p>
<pre><code>{"bar": "Some string", "foo": true}
{
  "bar": "Some string",
  "foo": true
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of doing <code>eval</code> on the answer, use the <a href="https://docs.python.org/2/library/json.html#json.loads" rel="nofollow"><code>json</code></a> module.</p>
</div>
<span class="comment-copy">Can you share the code you're using to handle this response please?</span>
<span class="comment-copy">You could just <code>sed</code> over the json beforehand.</span>
<span class="comment-copy"><a href="https://docs.python.org/dev/library/json.html" rel="nofollow noreferrer">docs.python.org/dev/library/json.html</a></span>
<span class="comment-copy">@JGab: Why? It's JSON, not Python.</span>
<span class="comment-copy">Yeah, that was pretty dumb in insight.</span>
<span class="comment-copy">I don't know if I fully comprehend what you've mentioned, but, as you've answered, when i tried to initialize the <code>data_from_api</code> variable, it gave the same error (name false is not defined). So I initialized the dictionary as a string ( <code>data_from_api=' &lt;dict&gt; '</code> and then I used the <code>loads</code> function which worked as expected. What I wanna know is that the dictionary which I get from api is very big(I have reduced the size in the question for  the sake of simplicity), is the the most efficient way to do it?</span>
<span class="comment-copy">The problem is you've got a string that contains Json and you're treating it like a string that contains Python. The two are not  the same. <code>data_from_api</code> should be a string containing exactly what you posted in the question. Whether you read this from a file or from a Http request depends on the source of the data which you haven't specified in your question. The <code>json</code> library will convert json strings into python objects and vice-versa</span>
<span class="comment-copy">I've added an example where the data you provided is treated as a multi-line string literal. Does that make things clearer? (<code>"""..."""</code> is a way of defining strings that span multiple lines and containing <code>"</code>'s). Once you've got a variable containing the json, the conversion is simple. How you populate that variable will depend on where you're getting your data. For next time, including that information / a code snippet in the question would've been helpful.</span>
