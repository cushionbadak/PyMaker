<div class="post-text" itemprop="text">
<p>I am trying to create a program that takes in a username and high score, if they are already a user they update to their new high score or just adds the high score if not. </p>
<p>My code is:</p>
<pre><code>try:
    a = open("data", "r+")
except FileNotFoundError:
    a = open("data", "w")
a = open("data", "r+")
b = a.read()
user = input("Username: ")
user2 = list(user)
if user in b:
    old = input("What is your old highscore? ")
    new = input("What is your new highscore? ")
    b2 = b.split()
    for line in b2:
        #Where I want to edit.
        line=line.replace(old, new)
        print(line)

else:
    new = input("What is your highscore? ")
    a.write(user + " " + new + "\n")
a.close()
</code></pre>
<p>Does anyone know how to replace the old with the new in the file?</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd advise you to move to some standard format of saving information, such as JSON, YAML, XML, CSV, pickle or another. Then what you need is to read and parse the file into native data structure (probably <code>dict</code> in the case), modify it (it is trivial), and write it back.</p>
<p>Example with <a href="https://docs.python.org/3/library/json.html" rel="nofollow"><code>json</code></a> (human readable, quite easy to use):</p>
<pre><code>import json

# loading data
try:
    with open("data") as a:
        b = json.load(a) # b is dict
except FileNotFoundError:
    b = {}

# user 
name = input("What's your name? ")
score = int(input("What's your high score? "))

# manipulating data
b[name] = score

# writing back 
with open("data", "w") as a:
    json.dump(b, a)
</code></pre>
<p>Example with <a href="https://docs.python.org/3/library/shelve.html" rel="nofollow"><code>shelve</code></a> (not human-readable, but extremely easy to use):</p>
<pre><code>import shelve

name = input("What's your name? ")
score = int(input("What's your high score? "))

with shelve.open("bin-data") as b:
    b[name] = score # b is dict-like
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The simple answer is: it is impossible. Operating-systems and their file-operations have no notion of "lines". They deal with blocks of binary data. Some libraries such as Python's standard-library put a convenient abstraction for <em>reading</em> lines above this - but they don't allow you to address individual lines.</p>
<p>So how to solve the problem? Simply by opening the file, reading all lines, manipulating the line in question in place, and then write the <em>whole</em> file out again.</p>
<pre><code> import tempfile

 highscore_file = tempfile.mktemp()

 with open(highscore_file, "w") as outf:
     outf.write("peter 1000\nsarah 500\n")

 player = "sarah"
 score = 2000

 output_lines = []
 with open(highscore_file) as inf:
     for line in inf:
         if player in line:
             # replace old with new line. Don't forget trailing newline!
             line = "%s %i\n" % (player, score)
         output_lines.append(line)

 with open(highscore_file, "w") as outf:
     outf.write("".join(output_lines))



 with open(highscore_file) as inf:
     print inf.read()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First off, after</p>
<pre><code>b = a.read()
</code></pre>
<p>write</p>
<pre><code>a.close()
a = open("data","w")
</code></pre>
<p>See where that takes you.</p>
</div>
<span class="comment-copy">About shelve, how would you use this to access the data so a human could read their high score? Is it possible? Thanks</span>
<span class="comment-copy">@space482: Yes, it is trivial. <code>b</code> behaves mostly like <code>dict</code>, you can do with it <i>most</i> of the things you could do with regular dicts, using the same syntax. When I said it is not human-readable, I only meant that if you open the file using plain text editor, you'll be unable to read the data.</span>
<span class="comment-copy">Ok, thanks for the help.</span>
<span class="comment-copy">One more question, sorry. How would you print out a users name and high score from the file? Is that possible? Thanks again</span>
<span class="comment-copy">The result of loading the file is a dictionary, a standard python data-structure. There are ways to iterate over this, all described in detail in the documentation of python.</span>
<span class="comment-copy">How do you access the data after closing the file? Thanks</span>
<span class="comment-copy">I don't understand your question. You can read the data by opening the file. As my script shows. So - what's missing?</span>
<span class="comment-copy">When I run it, the data does not save.</span>
<span class="comment-copy">when you run what? My code? Then it will save. It proves that it saves the data, because it reads it in in the last two lines, and prints it out, proving that updating the score of sarah to 2000 works.</span>
<span class="comment-copy">Thanks, 1 problem, now when I try to replace the high score it just deletes the data instead of replacing it, any ideas?</span>
<span class="comment-copy">Yeah look at @deets' answer; my answer probably brought you to the point where it only writes the one line, while you have to make your code write everything all over again, replacing the one line.</span>
