<div class="post-text" itemprop="text">
<p>I have lists within list with some values and I am able to display them on my screen like this:</p>
<pre><code>  AD  QS  5S  5D  2D  QD  7D 

  KS  AH  3S  KC 10D  6D  6C 

  5C  2C 10C  7C  4D  8H  2H 

  2S  JH  4S  6S  JC  4H  JD 

  AS  9D  3C  AC  KH  8D  8C
</code></pre>
<p>However, whenever I call a function to pop one of the values from the list and then reprint the whole structure again , it gives me index out of range error.
If the an item from the list have been poped , then I want the program to print whatever range is available for.eg if out of 5, 1 item have been poped and 4 are remaining , I want my output to look like:</p>
<pre><code>AD  QS  5S  5D  2D  QD  7D 

KS  AH  3S  KC 10D  6D  6C 

5C  2C 10C  7C  4D  8H  2H 

2S  JH  4S  6S  JC  4H  JD 

AS  9D  3C  AC      8D  8C
</code></pre>
<p>My code is as follows:</p>
<pre><code>tableau= [[],[],[],[],[],[],[]] #each of the list have 5 values inside
col1 = tableau[0]
col2 = tableau[1]
col3 = tableau[2]
col4 = tableau[3]
col5 = tableau[4]
col6 = tableau[5]
col7 = tableau[6]
lists = [col1, col2, col3, col4, col5, col6, col7]

for y in range(0,5):      
     print '\n'
     for x in lists:
          print x[y],

 #The function I call has something like this inside
 tCol = 5
 tableau[tCol - 1].pop()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you are removing an entry from the <code>list</code> and so the <code>list</code> gets smaller: <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow">https://docs.python.org/3/tutorial/datastructures.html</a></p>
<p>If you are just looking to discard the value and have no use for it later, you can just overwrite it with an empty value, instead of removing it: <code>my_list[index] = ""</code>.</p>
<p>Here's the documentation for <code>list.pop([i])</code>: <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow">https://docs.python.org/3/tutorial/datastructures.html</a></p>
</div>
<span class="comment-copy">Not specifically related to your question, you might want to have a look and <a href="http://pandas.pydata.org/pandas-docs/stable/10min.html" rel="nofollow noreferrer">pandas</a> DataFrames for this kind of data.</span>
<span class="comment-copy">I do not understand why you set <code>tCol = 5</code> and then call <code>tableau[tCol - 1]</code>... Your variable <code>tableau</code> has <code>7</code> columns.</span>
<span class="comment-copy">@Delgan Because it's the variable (<code>KH</code>) he wants to <code>.pop</code>.</span>
<span class="comment-copy">well, i am taking user input for the column from which they ant to pop. That was for e.g</span>
<span class="comment-copy">Ok, sorry, I thought <code>tCol</code> was set as the total number of columns.</span>
<span class="comment-copy">I will need the size for the lists later on in my program, so if I append it as " ", they will take an index value</span>
<span class="comment-copy">Yes, you are correct, however the <code>list_instance[index] = value</code> statement simply replaces the pre-existing value at the index specified with the value specified. The old value is discarded and the new value is at the same index as the old one was. Thus, the length of the <code>list</code> itself is unchanged.  Example: <code>&gt;&gt;&gt; a=["a","b"]</code> <code>&gt;&gt;&gt; a[0] = "f"</code> <code>&gt;&gt;&gt; print(a)</code> output: <code>['f', 'b']</code></span>
