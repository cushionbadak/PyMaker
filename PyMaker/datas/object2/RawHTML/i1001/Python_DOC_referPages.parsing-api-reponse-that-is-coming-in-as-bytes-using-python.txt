<div class="post-text" itemprop="text">
<p>I am trying to parse api reponse in python script. The reponse is coming in as bytes. Basically content is coming similar to below.</p>
<pre><code>b'studentName, Dept, Env, result,\n
"abcd","science","dev","pass"\n
"decf","math","dev","fail"\n'
</code></pre>
<p>The first row has the header and the second row onwards have values under the header. </p>
<p>I have tried using elementtree</p>
<pre><code>data = ElementTree.fromstring(response.content)
for log in data.iter('\n'):
    print(data.text)
</code></pre>
<p>But getting the below response</p>
<blockquote>
<p>AttributeError: 'bytes' object has no attribute 'text'</p>
</blockquote>
<p>I need to be able to parse it and find the student who passed in science. 
What is the better way to be able to parse it and filter the data to what I am looking for?</p>
</div>
<div class="post-text" itemprop="text">
<p>The response is essentially a CSV table. Decode it to a string and read using a CSV reader (e.g., from pandas):</p>
<pre><code>import io
import pandas as pd
response_df = pd.read_csv(io.StringIO(response.content.decode()))
#  studentName     Dept  Env  result  Unnamed: 4
#0        abcd  science  dev    pass         NaN
#1        decf     math  dev    fail         NaN
</code></pre>
<p>The last column is a consequence of having orphan commas at the end of each line. You can drop it:</p>
<pre><code>df.dropna(axis=1, inplace=True)
#  studentName     Dept  Env  result
#0        abcd  science  dev    pass
#1        decf     math  dev    fail
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The response is comma-separated data, and can be decoded using python's <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">csv</a> module.</p>
<pre><code>&gt;&gt;&gt; bs = b'studentName, Dept, Env, result,\n"abcd","science","dev","pass"\n"decf","math","dev","fail"\n'
&gt;&gt;&gt; import csv
&gt;&gt;&gt; import io
&gt;&gt;&gt; # Put the data into a buffer
&gt;&gt;&gt; sio = io.StringIO(bs.decode('utf-8'))
&gt;&gt;&gt; with sio as f:
...     reader = csv.DictReader(f)
...     for row in reader:
...         print(row)
... 
OrderedDict([('studentName', 'abcd'), (' Dept', 'science'), (' Env', 'dev'), (' result', 'pass'), ('', None)])
OrderedDict([('studentName', 'decf'), (' Dept', 'math'), (' Env', 'dev'), (' result', 'fail'), ('', None)])
</code></pre>
<p>Each output row is a dictionary that can be accessed in the usual way</p>
<pre><code>row['result']
</code></pre>
</div>
<span class="comment-copy">I'm confused. The title mentions CDATA, and ElementTree is used in the code. Is this about XML somehow?</span>
<span class="comment-copy">sorry, this is about xml.</span>
<span class="comment-copy">I don't understand. If this is about XML, where is the XML markup? Why is the question tagged with "bytecode"?</span>
<span class="comment-copy">Was just about to say that. Note the .decode(), it turns bytes into strings.</span>
<span class="comment-copy">This worked.. Thank you so much!</span>
