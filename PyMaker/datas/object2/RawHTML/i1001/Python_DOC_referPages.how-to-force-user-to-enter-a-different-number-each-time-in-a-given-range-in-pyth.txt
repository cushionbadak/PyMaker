<div class="post-text" itemprop="text">
<p>My question is related to book "Starting Out With Python" (3rd Edition) by Tony Gaddis. It is Chapter 7 Question 11. Let me excerpt question for reference, <strong>then explain my question below that</strong>.</p>
<blockquote>
<p>The Lo Shu Magic Square is a grid with 3 rows and 3 columns. The Lo Shu Magic Square has the following properties: •
  The grid contains the numbers 1 through 9 exactly. • The sum of each
  row, each column, and each diagonal all add up to the  same number.</p>
<p>In a program you can simulate a magic square using a two-dimensional
  list.  Write a function that accepts a two-dimensional list as an
  argument and  determines whether the list is a Lo Shu Magic Square.
  Test the function in  a program.</p>
</blockquote>
<p><strong>MY QUESTION: Basically, I am asking user to populate this 3x3 grid by using numbers 1-9. However, each number should be different from each other. How can I force user to enter a different number each time in a given range (which is 1-9)? Is there a special function for that? After finishing my "Lists" chapter, I am not capable of doing this in Python.</strong> </p>
<p>I am also providing my code for this question if it helps any. As of now, user can enter any number, even two-digit etc. Thank you in advance.</p>
<pre><code># lo shu magic square

ROWS=3
COLS=3

def main():    
    # create the two dimensional list
    square = [[0, 0, 0],
              [0, 0, 0],
              [0, 0, 0]]

    for r in range(ROWS):
        for c in range(COLS):
            square[r][c]=int(input("Enter a number 1-9 (can't enter the same number again): "))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can create new list and add every user input in that list. Then, you can check if he already entered input. Example:</p>
<pre><code>inputs = []
while True:
 inp = input("Enter something: ")
 if inp in inputs:
  print("Please, enter something else! You already entered that!")
 else:
  print("Successfully entered!")
  inputs.append(inp)
</code></pre>
<p>Example that you can use in your case:</p>
<pre><code>numbers = []
while True:
 inp = int(input("Enter number from 1 to 9: "))
 if 1 &lt;= inp &lt;= 9 and inp not in numbers:
  print("Success!")
  numbers.append(inp)
 else:
  print("Your number is already entered or isn't in range 1-9. Please enter again.")
</code></pre>
<p>Edit: You already store user inputs in list. You can just check if new input is in your list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Math is your answer friend:</p>
<pre><code>print 1 &lt;= x &lt;= 9
</code></pre>
<p>If I misunderstood your question, please let me know!</p>
<hr/>
<p><strong>@edit</strong>: see comments</p>
<pre><code>square = [[0, 0, 0],
          [0, 0, 0],
          [0, 0, 0]]

entered = [];

for r in range(3):
    for c in range(3):
        v = int(input("Enter a number 1-9 (can't enter the same number again): "))
        if v &gt; 9 or v &lt; 1 or v in entered:
          print("bad number")
        entered.append(v)
        square[r][c]=v
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You'd simply check to see if it's in the square, I'd guess.</p>
<pre><code>for r in range(ROWS):
    for c in range(COLS):
        entered = int(input("Enter a number 1-9 (can't enter the same number again): ")
        existing = True in [entered in row for row in square]
        if not existing:
            square[r][c]=entered
</code></pre>
<p>If that's inefficient, try having an entered list, and check for the existence in there. I'll leave it to the hardcore guys to determine the efficiency of this approach</p>
</div>
<div class="post-text" itemprop="text">
<p>You can check to see whether a number is already in the square by comparing each value in each row with the new value.</p>
<pre><code>&gt;&gt;&gt; square = [[0, 1, 9], [2, 5, 3], [6, 0, 4]]
&gt;&gt;&gt; new_value = 7
&gt;&gt;&gt; any(value == new_value for row in square for value in row)
False
</code></pre>
<p>This uses the builtin function <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><strong><code>any</code></strong></a>.</p>
<p>Or, you could check for containment using <code>in</code>:</p>
<pre><code>&gt;&gt;&gt; 3 in [1, 2, 3]
True
</code></pre>
<p>So:</p>
<pre><code>&gt;&gt;&gt; any(new_value in row for row in square)
False
</code></pre>
</div>
<span class="comment-copy">See how to create a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>. Most of what you've written in your question is irrelevant to the problem.</span>
<span class="comment-copy">Thank you. I will work on this now. It is a really good strategy. Never thought storing inputs in a list. Thanks.</span>
<span class="comment-copy">I updated answer, it is more close to your example now.</span>
<span class="comment-copy">Hi I think you did. So this is a two-dimensional list. I am asking user to populate. It is not about print function, it is about input function I think. For example user entered 1 for square[0][0], but he/she should enter a different number for square[0][1] etc.until all 9 elements are filled out.</span>
<span class="comment-copy">I believe I understood that part. I'll append an example.</span>
<span class="comment-copy">I realize that I didn't check for uniqueness as you originally asked. Check out the latest revision with the <code>v in entered</code> bit.</span>
<span class="comment-copy">I think you typed that right as I updated, check again friend :)</span>
<span class="comment-copy">I left <code>print("bad number")</code> for you to replace. You could use <code>sys.exit()</code> or have them start over, or re-enter the number, whatever you'd like. I just gave you an example of detecting it, which is what you asked for.</span>
<span class="comment-copy">Thank you. I am testing out all of the perfect suggestions here. Will try yours next. Best.</span>
