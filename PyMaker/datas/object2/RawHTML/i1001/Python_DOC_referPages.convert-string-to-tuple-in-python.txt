<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/8494514/converting-string-to-tuple">converting string to tuple</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/21735859/covert-a-string-which-is-a-list-into-a-proper-list-python">covert a string which is a list into a proper list python</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Pretty simply question but giving me some trouble: </p>
<p>I have </p>
<pre><code> "('A', 'Open')" # type = str
</code></pre>
<p>and would like:</p>
<pre><code> ('A','Open') # type = tuple
</code></pre>
<p>Have tried using .split(), and just converting the whole thing to tuple(str) with no success. </p>
</div>
<div class="post-text" itemprop="text">
<p>There are two ways to achieve this, both parse the string as Python code.</p>
<p>The seemingly easier option is to use <a href="https://docs.python.org/3/library/functions.html#eval" rel="nofollow noreferrer"><code>eval</code></a>.</p>
<p>The slightly more complicated, but better, option is to use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a>.</p>
<p>In <a href="https://stackoverflow.com/questions/15197673/using-pythons-eval-vs-ast-literal-eval">Using python's eval() vs. ast.literal_eval()?</a> everything has already been said why the latter is almost always what you really want. Note that even the official documentation of <code>eval</code> says that you should use <code>ast.literal_eval</code> instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>How about this?</p>
<pre><code>import re

m_s = "('A', 'Open')"
patt = r"\w+"
print(tuple(re.findall(patt, m_s)))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about using regular expressions ?</p>
<pre><code>In [1686]: x
Out[1686]: '(mono)'

In [1687]: tuple(re.findall(r'[\w]+', x))
Out[1687]: ('mono',)

In [1688]: x = '(mono), (tono), (us)'

In [1689]: tuple(re.findall(r'[\w]+', x))
Out[1689]: ('mono', 'tono', 'us')

In [1690]: x = '(mono, tonous)'

In [1691]: tuple(re.findall(r'[\w]+', x))
Out[1691]: ('mono', 'tonous')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Shortest is do</p>
<pre><code>eval("('A','Open')") #will return type as tuple
</code></pre>
<p>eval() evaluates and executes string as python expression </p>
</div>
<span class="comment-copy">where does this <code>"('A', 'Open')"</code> come from?</span>
<span class="comment-copy"><code>import ast; my_tuple = ast.literal_eval(my_string)</code></span>
<span class="comment-copy">@L3viathan inbuilt <code>eval()</code> itself can do it, no need for external lib.</span>
<span class="comment-copy">@meW thanks ... did not know about this .. will take a read</span>
<span class="comment-copy">@meW, don't suggest use of <code>eval</code>, that is potentially dangerous without explicit warning.</span>
<span class="comment-copy"><code>ast.literal_eval</code> is <i>slightly more complicated</i> than <code>eval</code>, how so?</span>
<span class="comment-copy">@vishes_shell: You need to add an import (albeit from the standard library). I did not say it was a lot more complicated... It might also be slightly slower in evaluating the string, since it first performs some checks.</span>
