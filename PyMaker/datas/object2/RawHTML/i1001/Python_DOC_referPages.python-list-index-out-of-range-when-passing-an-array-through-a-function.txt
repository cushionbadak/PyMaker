<div class="post-text" itemprop="text">
<p>First, i am having trouble understanding this problem so apologies for any confusion when explaining it.</p>
<p>I am currently making a gym workout routine generator which will randomly pull a certain number (specified by me) of exercises for certain msucle groups (also specified by me). I have an array called <code>array</code>, which looks like this;</p>
<pre><code>[['Bench Press', 'Dumbell Press', 'Chest Press Machine', 'Cable Flies', 'Cable Crossover', 'Decline Bench Press', 'Angled Dips', 'Smith Machine Bench Press', 'Inner Chest Push'], 
['Incline Bench Press', 'Incline Dumbell Press', 'Incline Cable Flies', 'Incline Chest Press Machine', 'Incline Dumbell Flies', 'Raised Pushups', 'Smith Machine Incline Bench Press', 'Rotating Incline Dumbell Press', 'Inner Check Upwards Barbell Push'], 
['Barbell Overhead Press', 'Dumbell Overhead Press', 'Dumbell Lateral Raise', 'Face Pulls', 'Dumbell Front Raise', 'Reverse Flies', 'Smith Shoulder Press', 'Cable Side Raise', 'Behind Head Overhead Press'], 
['Dumbell Curls ', 'Hammer Curls', 'Preacher Curls', 'Machine Curls', 'Close Grip Chin Ups', 'Close Grip Pulldown', 'Half Rep Curls', 'Rotating Curls', 'Drop Set Curls'], 
['Cable Pushdowns', 'Overhead Dumbell Extensions', 'Overhead Barbell Extensions', 'Upright Dips', 'Skullcrushers', 'Close Grip Benchpress', 'Tricep Kickbacks', 'Overhead Rope Extensions', 'Drop Set Pushdowns'], 
['Lat Pulldowns', 'Pullups', 'Deadlifts', 'Bent Over Rows', 'Dumbell Rows', 'Rack Pulls', 'Upright Row', 'Low Rows', 'One Arm Cable Pull'], 
['Squats', 'Leg Press', 'Calf Raisers', 'Leg Extensions', 'Leg Curls', 'Lunges', 'Rear Kicks', 'Abductor', 'Adductor']]
</code></pre>
<p>Each array withing the 2d array contains exercises for a different muscle group.</p>
<p>Now the routine I am creating is a 4 day routine. The first day, chest and triceps are being generated (array 1 and 5). Day 2 is shoulders (array 3). Day 3 is back and biceps (array 4 and 6), and finally day 4 is Legs (array 6). </p>
<p>The following function is supposed to set up this system:</p>
<pre><code>def FourDays():
    global Day1
    Day1 = [4,0,0,0,2,0,0]
    global Day2
    Day2 = [0,0,5,0,0,0,0]
    global Day3
    Day3 = [0,0,0,2,0,4,0]
    global Day4
    Day4 = [0,0,0,0,0,0,5]

    Day1_routine = Routine_Maker3(array, Day1)
    Day2_routine = Routine_Maker3(array, Day2)
    Day3_routine = Routine_Maker3(array, Day3)
    Day4_routine = Routine_Maker3(array, Day4)
</code></pre>
<p>For example - <code>Day2</code> (which is shoulders), has the number 5 in the third index of the array. This means 5 exercises from the third array, which is the array containing shoulder exercises.</p>
<p>These variables (<code>Day1</code>, <code>Day2</code>, <code>Day3</code> and <code>Day4</code>) then get passed to the following function, which is responsible for getting the right amount of exercises from <code>array</code></p>
<pre><code>def Routine_Maker3(array, exercises_per_day):
    old_routine = []
    pos = 0
    for i in range(7):
        if pos &gt;= len(array):
            pos = 0
        temporal_array = [array[pos][j] for j in random.sample(range(9), exercises_per_day[pos])]
        old_routine.append(temporal_array)
        pos += 1
    print (old_routine)

    new_routine=[]
    for e in old_routine:
        new_routine += e
    print (new_routine)
</code></pre>
<p>Please Note: <code>Day1</code>,<code>2</code>,<code>3</code>and<code>4</code> should be passed as <code>exercises_per_day</code></p>
<p>Here is an example of what it should ouput:</p>
<pre><code>['Cable Crossover', 'Cable Flies', 'Smith Machine Bench Press', 'Inner Chest Push', 'Upright Dips', 'Overhead Dumbell Extensions']
['Behind Head Overhead Press', 'Dumbell Overhead Press', 'Smith Shoulder Press', 'Face Pulls', 'Dumbell Lateral Raise']
['Machine Curls', 'Close Grip Pulldown', 'Lat Pulldowns', 'One Arm Cable Pull', 'Pullups', 'Upright Row']
['Abductor', 'Rear Kicks', 'Lunges', 'Leg Curls', 'Squats']
</code></pre>
<p>The error i get is a list index out of range, and it says its an issue with these two lines:</p>
<pre><code>Day1_routine = Routine_Maker4(array, Day1)

temporal_array = [array[pos][j] for j in random.sample(range(9), exercises_per_day[pos])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a simpler alternative for your routine maker method.</p>
<pre><code>def Routine_Maker3(array, exercises_per_day):
    routine = []
    for i in range(7):
        routine.extend(random.sample(array[i], exercises_per_day[i]))
    return routine

Routine_Maker3(array, Day1)
</code></pre>
<p><strong>Output :</strong></p>
<pre><code>['Smith Machine Bench Press',
 'Inner Chest Push',
 'Bench Press',
 'Angled Dips',
 'Tricep Kickbacks',
 'Overhead Barbell Extensions']
</code></pre>
<p>Basically the <a href="https://docs.python.org/2/library/random.html#random.sample" rel="nofollow noreferrer">random.sample()</a> function takes an array and a value K, and returns K random values from the array. Just what you want.</p>
<p>Also you have used <code>Routine_Maker4</code> instead of <code>Routine_Maker3</code>. </p>
<p>And whenever you are trying to add a list to another list, if you want a flat 1D list, you need to use <code>extend()</code> rather than <code>append()</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Try this simplified code to help you avoid future complex bugs:</p>
<pre><code>import random

exercises = {"chest": ['Bench Press', 'Dumbell Press', 'Chest Press Machine', 'Cable Flies', 'Cable Crossover', 'Decline Bench Press', 'Angled Dips', 'Smith Machine Bench Press', 'Inner Chest Push'],
             "shoulders": ['Barbell Overhead Press', 'Dumbell Overhead Press', 'Dumbell Lateral Raise', 'Face Pulls', 'Dumbell Front Raise', 'Reverse Flies', 'Smith Shoulder Press', 'Cable Side Raise', 'Behind Head Overhead Press'],
             "back": ['Dumbell Curls ', 'Hammer Curls', 'Preacher Curls', 'Machine Curls', 'Close Grip Chin Ups', 'Close Grip Pulldown', 'Half Rep Curls', 'Rotating Curls', 'Drop Set Curls'],
             "triceps": ['Cable Pushdowns', 'Overhead Dumbell Extensions', 'Overhead Barbell Extensions', 'Upright Dips', 'Skullcrushers', 'Close Grip Benchpress', 'Tricep Kickbacks', 'Overhead Rope Extensions', 'Drop Set Pushdowns'],
             "biceps": ['Lat Pulldowns', 'Pullups', 'Deadlifts', 'Bent Over Rows', 'Dumbell Rows', 'Rack Pulls', 'Upright Row', 'Low Rows', 'One Arm Cable Pull'],
             }


def make_routine(*args, **kwargs):
    routine = []
    muscle_types = list(kwargs.keys())
    for muscle_type in muscle_types:
        muscle_exercises = exercises[muscle_type]
        exercises_per_day = kwargs[muscle_type]
        routine.extend(random.sample(muscle_exercises, exercises_per_day))
    return routine


if __name__ == '__main__':
    day1_routine = make_routine(chest=4, triceps=2)
    day2_routine = make_routine(shoulders=5)
    print("day1_routine:", day1_routine)
    print("day2_routine:", day2_routine)

    # You get the idea
    # Just make you specifications as key word arguments in your calling function
    #
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let's step back a few steps to get a more distanced view onto your problem.</p>
<p>What you want to do is getting a randomized subset with unique elements from a list of lists (what you call an array). The built-in <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer"><code>random</code> module</a> provides a dedicated function for doing exaclty this. The function I am talking about is called <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer"><code>random.sample()</code></a>.</p>
<p>General syntax (taken from the docs is):</p>
<blockquote>
<p><code>random.sample(population, k)</code></p>
<p>Return a k length list of unique elements
  chosen from the population sequence or set. Used for random sampling
  without replacement.</p>
<p>Returns a new list containing elements from the population while
  leaving the original population unchanged. [...]</p>
</blockquote>
<p>Applying this approach to your problem would look like this:</p>
<pre><code>import random

exercises_0 = ['Bench Press', 'Dumbell Press', 'Chest Press Machine', 'Cable Flies', 'Cable Crossover', 'Decline Bench Press', 'Angled Dips', 'Smith Machine Bench Press', 'Inner Chest Push'] 
exercises_1 = ['Incline Bench Press', 'Incline Dumbell Press', 'Incline Cable Flies', 'Incline Chest Press Machine', 'Incline Dumbell Flies', 'Raised Pushups', 'Smith Machine Incline Bench Press', 'Rotating Incline Dumbell Press', 'Inner Check Upwards Barbell Push']
exercises_2 = ['Barbell Overhead Press', 'Dumbell Overhead Press', 'Dumbell Lateral Raise', 'Face Pulls', 'Dumbell Front Raise', 'Reverse Flies', 'Smith Shoulder Press', 'Cable Side Raise', 'Behind Head Overhead Press']
exercises_3 = ['Dumbell Curls ', 'Hammer Curls', 'Preacher Curls', 'Machine Curls', 'Close Grip Chin Ups', 'Close Grip Pulldown', 'Half Rep Curls', 'Rotating Curls', 'Drop Set Curls']
exercises_4 = ['Cable Pushdowns', 'Overhead Dumbell Extensions', 'Overhead Barbell Extensions', 'Upright Dips', 'Skullcrushers', 'Close Grip Benchpress', 'Tricep Kickbacks', 'Overhead Rope Extensions', 'Drop Set Pushdowns']
exercises_5 = ['Lat Pulldowns', 'Pullups', 'Deadlifts', 'Bent Over Rows', 'Dumbell Rows', 'Rack Pulls', 'Upright Row', 'Low Rows', 'One Arm Cable Pull']
exercises_6 = ['Squats', 'Leg Press', 'Calf Raisers', 'Leg Extensions', 'Leg Curls', 'Lunges', 'Rear Kicks', 'Abductor', 'Adductor']

all_exercises = [exercises_0, exercises_1, exercises_2, exercises_3, exercises_4, exercises_5, exercises_6]

days = [
    [4, 0, 0, 0, 2, 0, 0],
    [0, 0, 5, 0, 0, 0, 0],
    [0, 0, 0, 2, 0, 4, 0],
    [0, 0, 0, 0, 0, 0, 5]
    ]



def get_exercises(day_number):
    output = []
    for idx, value in enumerate(days[day_number]):
        if value:
            # use `append` to get a list of lists
            output.append(random.sample(all_exercises[day_number], value))
            # use `extend` to get a single list
            # output.extend(random.sample(all_exercises[day_number], value))
    return output

exercises_to_do = get_exercises(0)

print(exercises_to_do)
</code></pre>
<p>Giving you the following output:</p>
<pre><code>[['Dumbell Press', 'Cable Flies', 'Decline Bench Press', 'Cable Crossover'], ['Cable Flies', 'Inner Chest Push']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I have a version for you routine maker:</p>
<pre><code>def Routine_Maker5(array, exercises_per_day):
    res = []
    for exercise_type, volume in enumerate(exercises_per_day):
        excercises = array[exercise_type][:]
        for _ in range(volume)    
            select = random.randint(0, len(excercises)-1)
            res.append(excercises.pop(select))
    return res
</code></pre>
</div>
<span class="comment-copy">I have made an edit making it a bit clearer</span>
<span class="comment-copy">Can you show me how you are initializing your <code>array</code> variable? It looks to be a 3d array...Nvm you edited it.</span>
<span class="comment-copy">Yeah sorry my copy and paste messed up when i copied the array in - how it looks now is what the array is</span>
<span class="comment-copy">why you set range(7) in <code>for i in range(7)</code></span>
<span class="comment-copy">So that it loops through the whole array. (makes sure it goes through each value in the array, even if its a 0)</span>
<span class="comment-copy">This works and solves all other issues! thank you!!!!</span>
<span class="comment-copy">Could you explain this please - what is <code>exercise_type</code></span>
<span class="comment-copy">The trouble with this one is that it does not remove the value inside the list, meaning i end up with duplicates</span>
<span class="comment-copy">I also get the same issue here. When I copy this into my program the same bug occurs.</span>
<span class="comment-copy">@DominicCulyer Now it will be without duplicates.</span>
<span class="comment-copy">@DominicCulyer <i>exercise_type</i> is index of exercise in initial array. For example: 6 for legs.</span>
