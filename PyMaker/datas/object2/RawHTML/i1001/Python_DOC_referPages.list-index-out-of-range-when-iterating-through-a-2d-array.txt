<div class="post-text" itemprop="text">
<p>As you can see, the following array called <code>routine</code> has a series of other arrays inside of it.</p>
<pre><code>[['Dumbell Press', 'Chest Press Machine', 'Smith Machine Bench Press', 'Angled Dips'], [], [], [], ['Tricep Kickbacks', 'Overhead Dumbell Extensions'], [], []]
</code></pre>
<p>I have tried to copy each item inside this array into a new array. However when i did so i got this output and the following error message.</p>
<pre><code>Bench Press
Inner Chest Push
Smith Machine Bench Press
Cable Crossover
IndexError: list index out of range
</code></pre>
<p>Clearly the code works through the first array inside the 2d array, however stops after that.</p>
<p>This is the code used to generate the above error message.</p>
<pre><code>newarray=[]
for x in range(len(routine)-1):
    for i in range(len(routine)-1):
        temp = routine[x][i]
        print (temp)
        newarray.append(temp)
</code></pre>
<p>Is there a way in which i can join up these arrays so that there is only one array that looks like this.</p>
<pre><code>['Dumbell Press', 'Chest Press Machine', 'Smith Machine Bench Press', 'Angled Dips','Tricep Kickbacks', 'Overhead Dumbell Extensions']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you have nested <code>list</code>s you can try using list comprehension:</p>
<pre><code>routine = [['Dumbell Press', 'Chest Press Machine', 'Smith Machine Bench Press', 'Angled Dips'], [], [], [], ['Tricep Kickbacks', 'Overhead Dumbell Extensions'], [], []]
new_routine = [machine for machines in routine for machine in machines]
print(new_routine)
# ['Dumbell Press', 'Chest Press Machine', 'Smith Machine Bench Press', 'Angled Dips', 'Tricep Kickbacks', 'Overhead Dumbell Extensions']
</code></pre>
<p>This only works if you have <code>list</code> of <code>lists</code> or two levels deep.</p>
<p>To change your code, we can do the following to obtain the same result:</p>
<pre><code>newarray = []
for x in range(len(routine)):
    for i in range(len(routine[x])):
        newarray.append(routine[x][i])

print(newarray)
#['Dumbell Press', 'Chest Press Machine', 'Smith Machine Bench Press', 'Angled Dips', 'Tricep Kickbacks', 'Overhead Dumbell Extensions']
</code></pre>
<p>Notice that I removed the <code>-1</code> from your code. <code>range(start, end)</code> goes from <code>start</code> to <code>end-1</code>aka the entire array since arrays start from <code>0</code>. That said, you don't need the <code>-1</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this :</p>
<pre><code>for e in routine:
    new_list += e
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is what you want:</p>
<pre><code>routine = [['Dumbell Press', 'Chest Press Machine', 'Smith Machine Bench Press', 'Angled Dips'], [], [], [], ['Tricep Kickbacks', 'Overhead Dumbell Extensions'], [], []]


newarray=[]
for i in routine:
        for ii in i:
                newarray.append(ii)

print(newarray) #Output: ['Dumbell Press', 'Chest Press Machine', 'Smith Machine Bench Press', 'Angled Dips', 'Tricep Kickbacks', 'Overhead Dumbell Extensions']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to use index. python can do it as simple as :</p>
<pre><code>newlist=[]
for alist in routine:
    for element in alist:
        newlist.append(element)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>using <a href="https://docs.python.org/2/library/itertools.html#itertools.chain" rel="nofollow noreferrer">chain</a></p>
<pre><code>from itertools import chain
a=[['Dumbell Press', 'Chest Press Machine', 'Smith Machine Bench Press', 'Angled Dips'], [], [], [], ['Tricep Kickbacks', 'Overhead Dumbell Extensions'], [], []]
list(chain(*a))
</code></pre>
<p>Output</p>
<pre><code>['Dumbell Press',
 'Chest Press Machine',
 'Smith Machine Bench Press',
 'Angled Dips',
 'Tricep Kickbacks',
 'Overhead Dumbell Extensions']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For nested lists, a robust solution to combine all components into a single list can be done using <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>chain.from_iterable</code></a></p>
<pre><code>oldlist = [['Dumbell Press', 'Chest Press Machine', 'Smith Machine Bench Press', 'Angled Dips'], [], [], [], ['Tricep Kickbacks', 'Overhead Dumbell Extensions'], [], []]
from itertools import chain
result = list(chain.from_iterable(oldlist))
print(result)
#Output:
['Dumbell Press',
 'Chest Press Machine',
 'Smith Machine Bench Press',
 'Angled Dips',
 'Tricep Kickbacks',
 'Overhead Dumbell Extensions']
</code></pre>
</div>
<span class="comment-copy">Think about len() for a second. It does not recurse into the elements, it just returns the length of the outer list. And yet you are using it for both your outer and inner loop.</span>
<span class="comment-copy">see also: <a href="https://stackoverflow.com/questions/952914/how-to-make-a-flat-list-out-of-list-of-lists" title="how to make a flat list out of list of lists">stackoverflow.com/questions/952914/â€¦</a></span>
<span class="comment-copy">This works - thank you!</span>
