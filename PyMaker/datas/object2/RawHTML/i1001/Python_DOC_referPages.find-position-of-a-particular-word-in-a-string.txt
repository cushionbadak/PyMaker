<div class="post-text" itemprop="text">
<p>I have a list of Genes and I need to identify if the Gene from the list is present in the 'Article Title', if present find the start and the end position of the gene in the sentence.</p>
<p>The code developed does identify the gene and detects the position of the gene in the sentence. However, I need help with finding the start position and end position of the gene</p>
<pre><code>doc = tree.getroot()
 for ArticleTitle in doc.iter('ArticleTitle'):
    file1 = (ET.tostring(ArticleTitle, encoding='utf8').decode('utf8'))
    filename = file1[52:(len(file1))]
    Article= filename.split("&lt;")[0]
    # print(Article)
    # print(type(Article))
    title= Article.split()
    gene_list = ["ABCD1","ADA","ALDOB","APC","ARSB","ATAD3B","AXIN2","BLM","BMPR1A","BRAF","BRCA1"] 
    for item in title:
        for item1 in gene_list:
            if item == item1:
                str_title= ' '.join(title)
                print(str_title)
                print("Gene Found: " + item)
                index= title.index(item)
                print("Index of the Gene :" +str(index))

                result = 0
                for char in str_title:
                    result +=1
                print(result)
</code></pre>
<p>Current output is:</p>
<pre><code>Healthy people 2000: a call to action for ADA members.
Gene Found: ADA
Index of the Gene :8
54
</code></pre>
<p>Expected output is:</p>
<pre><code>Healthy people 2000: a call to action for ADA members.
Gene Found: ADA
Index of the Gene :8
Gene start position: 42
Gene End postion:  45
</code></pre>
<p>The start and end position should count the spaces between the words too.</p>
</div>
<div class="post-text" itemprop="text">
<p>Could use regex</p>
<pre><code>l=["ABCD1","ADA","ALDOB","APC","ARSB"]
l='|'.join(l)
test_string='Healthy people 2000: a call to action for ADA members.'
pos=0
for i in test_string.split():
    m=re.search(l,i)
    if m:
        gene=m.group(0)
        start=test_string.find(gene)
        end=start+len(gene)
        print(start,end,gene,pos)
    pos+=1
</code></pre>
<p>Output</p>
<pre><code>(42, 45, 'ADA', 8)
</code></pre>
<p>The shorter solution without the actual position in the string could be</p>
<pre><code>l=["ABCD1","ADA","ALDOB","APC","ARSB"]
l='|'.join(l)
test_string='Healthy people 2000: a call to action for ADA members.'

[(m.start(),m.group(0),m.end()) for m in re.finditer(l,test_string)]
</code></pre>
</div>
<span class="comment-copy">you have to parse the document and the make a list of the each word start point , it's index value . then you can do this</span>
<span class="comment-copy">You could use the <a href="https://docs.python.org/3/library/stdtypes.html#str.index" rel="nofollow noreferrer">index</a> method, but if you must mach the word completely I suggest you take a look regex</span>
<span class="comment-copy">Related: <a href="https://stackoverflow.com/questions/21842885/python-find-a-substring-in-a-string-and-returning-the-index-of-the-substring" title="python find a substring in a string and returning the index of the substring">stackoverflow.com/questions/21842885/â€¦</a></span>
<span class="comment-copy">@DanielMesejo This helped me! I could get the end and start position! Thanks</span>
<span class="comment-copy">the match object (<code>m</code>) has a start(), end() methods</span>
<span class="comment-copy">@DanielMesejo Yup I know but i am iterating the string as list so matching one word at a time. <code>m.start()</code> will always give me 0. My other suggestion is to use <code>re.finditer</code> but again I dont think that will give the exact output which is needed here</span>
<span class="comment-copy">I see, you could use word boundaries in the regex to avoid splitting on space</span>
<span class="comment-copy">Hmm I cannot see how to map key and value with original string. the dictionary might explode for long strings and that too if the gene could not be found. Would you mind posting as an answer?</span>
<span class="comment-copy">@mad_ The code works fine for the above test string. However, for the following test string: PAH-alpha-KG countertransport stimulates PAH uptake and net secretion in isolated snake renal tubules. The gene is 'PAH' which is in index 3, however, the code detects the position of 'PAH' as 0.</span>
