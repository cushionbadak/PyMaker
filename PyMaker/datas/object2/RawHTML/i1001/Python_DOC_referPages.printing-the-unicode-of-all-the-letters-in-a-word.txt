<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/227459/how-to-get-the-ascii-value-of-a-character">How to get the ASCII value of a character?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I'm stuck on this question:</p>
<blockquote>
<p>user inputs a word, program outputs the unicode of each letter in the word</p>
</blockquote>
<p>this is how the input statement would look:</p>
<pre><code>word = input("Enter a word: ")
</code></pre>
<p>Supposing the user enters the word "Cat", the output would look like this:</p>
<pre><code>C: 67
a: 97
t: 116
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#ord" rel="nofollow noreferrer">ord()</a>.</p>
<pre><code>word = input("Enter a word: ")
for letter in word:
    print(letter + ': ', ord(letter))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Based on your example I guess what you try to output is ASCII values of characters. If so you could check ASCII values using python builtin function <a href="https://docs.python.org/3/library/functions.html#ord" rel="nofollow noreferrer"><code>ord()</code></a>.</p>
<pre><code>userInput = input("Enter a word: ")

for i in userInput:
    print('{}: {}'.format(i, ord(i)))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>C: 67
a: 97
t: 116
</code></pre>
</div>
<span class="comment-copy">Although you've given an example for the output, it doesn't correspond well with the way Unicode strings are described. I suggest something like this <a href="https://www.fileformat.info/info/unicode/char/0043/index.htm" rel="nofollow noreferrer">U+0043</a> <a href="https://www.fileformat.info/info/unicode/char/0061/index.htm" rel="nofollow noreferrer">U+0061</a> <a href="https://www.fileformat.info/info/unicode/char/0074/index.htm" rel="nofollow noreferrer">U+0074</a>. That way it is very clear what the input is and the problem reduces to iterating Unicode codepoints (which are numerically the same as the UTF-32 code units, which might be useful if using Python &lt;3.3).</span>
