<div class="post-text" itemprop="text">
<p>How do I get the numbers from a, what? subindexed dictionary?  (I don't even know the right terms here).</p>
<p>Still a relative newbee here but this is my first pass at a dictionary and while I understand the very simple basic concept I'm missing how to access things.  My dictionary seems to hold the data I want it in the way I want it, but I'm fumbling around on how to access it.</p>
<p>Here's my code:</p>
<pre><code>all_bone_keys[bone.GetName()][frame] = {"x":x[1], "y":y[1], "z":z[1]}
print (len(all_bone_keys["RL_Head"])
print (all_bone_keys["RL_Head"])
</code></pre>
<p>with these results (all fine):</p>
<pre><code>2
{0: {'x': -0.4033583402633667, 'y': -0.08630772680044174, 'z': 0.4855811595916748}, 116: {'x': -0.13178503513336182, 'y': 0.3115540146827698, 'z': 0.2189643830060959}}
</code></pre>
<p>So all well and good -- I have the data as I want it, with the two frames showing my x,y,z.  I can read how many items for each bone just fine so I know how many frames are there, and I can even access the x, y and z values IF I know the frame numbers:</p>
<pre><code>print (all_bone_keys["RL_Head"][116]["x"])
-0.13178503513336182
</code></pre>
<p>but how do I get the 116 in the first place? That's all I really want to know, is how to read those frame numbers so I can then access the data associated with them.</p>
<p>I've looked at tons of tutorials but don't seem to get it, as they nearly always show a dictionary example much simpler.  Any help would be enormously appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have multiple options, most of which can be found here: <a href="https://docs.python.org/3/library/stdtypes.html#mapping-types-dict" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#mapping-types-dict</a></p>
<p>In your case:</p>
<ul>
<li><p>to get dictionary view of keys, as mentioned in comments:</p>
<pre><code>for frame in all_bone_keys["RL_Head"].keys():
    print(frame, all_bone_keys["RL_Head"][frame]["x"])
</code></pre></li>
<li><p>to get both frame and coordinates at once (my favourite for most applications):</p>
<pre><code>for frame, coord in all_bone_keys["RL_Head"].items():
    print(frame, coord["x"])
</code></pre></li>
<li><p>to ensure ordering of frames (<a href="https://mail.python.org/pipermail/python-dev/2017-December/151283.html" rel="nofollow noreferrer">https://mail.python.org/pipermail/python-dev/2017-December/151283.html</a>):</p>
<pre><code>for frame in sorted(all_bone_keys["RL_Head"].keys()):
    print(frame, all_bone_keys["RL_Head"][frame]["x"])
</code></pre></li>
<li><p>or just use <code>list</code> to retrieve simple keys list:</p>
<pre><code>for frame in list(all_bone_keys["RL_Head"]):
    print(frame, all_bone_keys["RL_Head"][frame]["x"])
</code></pre></li>
</ul>
</div>
<span class="comment-copy">What do you mean by: <code>but how do I get the 116 in the first place?</code></span>
<span class="comment-copy">I mean, there are two values in there, a 0 and a 116 -- but how do I access those values?  I won't know up front which values are there but once I have those I can access the x, y and z (and I do know there are only two because printing len() returns that.  So I guess I'm asking how to cycle through the len of that particular key value).  For each bone_head there can be any number of frames, each with an x,y and z value.  This works fine -- and I can find out how many frames, but just not the frame number in order to get that x,y and z values.</span>
<span class="comment-copy">You could do: <code>print(all_bone_keys["RL_Head"].keys())</code></span>
<span class="comment-copy">Great!  Except now I feel REALLY stupid -- I see where that shows me the keys, but how do I access each key separately?  I see that I can tell how many with len() but I am clearly such a newbee I don't get how to get each one at a time.</span>
<span class="comment-copy"><code>for key in all_bone_keys["RL_Head"].keys(): # do something with the key</code></span>
