<div class="post-text" itemprop="text">
<p>Forgive me If i'm asking a very stupid questions.</p>
<p>I'm trying to get name of the past months instead of numbers my django framework:</p>
<p>Example: For instance, if I have <code>12</code>, I want to return <code>december or dec</code></p>
<p>Right now, I had this external python scripts that sort the day, weeks, month and years.</p>
<p>Here the codes for external scripts Name;<strong>basicfun</strong>: (only on the months) </p>
<pre><code>#basicfun codes (external python scripts)  

 def selectDates(query):

    if query == 'Previous-Months':
    dataset = datetime.now().month - 1
    dataset.strftime("%b")

 return dataset 
</code></pre>
<p>It will return to my django view to use as a filter for Queryset </p>
<p>Here the Frame works codes on view:</p>
<pre><code>#Django view 
       def ph(request):
            query = request.GET.get('dateRange')
            fill = selectDates(query)
            data = tank_system.objects.all().filter(datetime__contains=fill)
            return render(request, 'FrounterWeb/extends/ph.html', {'tank': data})
</code></pre>
<h1>Solution I had try</h1>
<p>This link:
<a href="https://stackoverflow.com/questions/6557553/get-month-name-from-number">Get month name from number</a></p>
<p>1.</p>
<pre><code>   dataset = datetime.now().month - 1
   dataset.strftime("%b") 
</code></pre>
<p>error: </p>
<pre><code>Exception Type:AttributeError
Exception Value:'int' object has no attribute 'strftime'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your error is because <code>datetime.now().month</code> is an integer. <code>strftime</code> is a method on the <code>datetime</code> object.</p>
<p>You can get the current month by doing:</p>
<p><code>month = datetime.now().strftime("%b")</code></p>
<p>To get previous month names, easy but sort of "hacky" way to do this would be to just create a dictionary of the month strings you want with the month number as keys:</p>
<pre><code>from datetime import datetime

def limit_month_number(start_month, months_ago):
    """
    This function will return a value from 1-12 inclusive.
    &gt;&gt;&gt; limit_month_number(1,3) -&gt; 10
    &gt;&gt;&gt; limit_month_number(12,14) -&gt; 10
    """
    month_number = start_month - (months_ago % 12)
    if month_number &lt; 1:
        month_number = 12 + month_number 
    return month_number

def get_prev_month(months_ago):
    months = {1: 'Jan', 2: 'Feb', 10: 'Oct', 11: 'Nov', 12: 'Dec'}

    this_month = datetime.now().month

    month_number = limit_month_number(this_month, months_ago)

    prev_month = months[month_number]
    return prev_month

print(get_prev_month(2)) # 'Nov', two months ago from now
</code></pre>
<p>Also, I must point out that you can do this using <code>datetime</code>. Check out this other post: <a href="https://stackoverflow.com/questions/9724906/python-date-of-the-previous-month">python date of the previous month</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Try this</p>
<pre><code>previous_month = (datetime.date.today().replace(day=1) - datetime.timedelta(days=1)).strftime('%B')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://dateutil.readthedocs.io/en/stable/relativedelta.html" rel="nofollow noreferrer"><code>relativedelta</code></a>.</p>
<pre><code>from dateutil.relativedelta import relativedelta

today = dt.date.today()  # 2019-01-03
&gt;&gt;&gt; (today - relativedelta(months=1)).strftime('%B')  # `%b' for abbreviated month
'December'
</code></pre>
<p>For the last three months, you could use a list comprehension:</p>
<pre><code>&gt;&gt;&gt; [(dt.date.today() - relativedelta(months=x)).strftime('%B') for x in range(3, 0, -1)]
['October', 'November', 'December']
</code></pre>
</div>
<span class="comment-copy">thank you Kevin it work on the current month, as the previous month as you said is really hacky</span>
<span class="comment-copy">The benefit of using your own dictionary is that you have the choice of using the abbreviation or the full name of the month.</span>
<span class="comment-copy">I didn't get last month but this months instead, I wonder is becuase the turn didn't work?</span>
<span class="comment-copy">I made an edit to the code. Try that out. I will let you fill in the other 7 months yourself.</span>
<span class="comment-copy">@KevinWelch You can reduce the 'hackiness' by using the standard library's <a href="https://docs.python.org/3/library/calendar.html" rel="nofollow noreferrer">calendar</a> module to provide the month names - see the <code>month_name</code> and <code>month_abbr</code> attributes.</span>
<span class="comment-copy">Do you need to install relativedlta? becuase  #from detutil.relativedelta import relativedelta# Django do not reconsider</span>
<span class="comment-copy">Yes. <code>pip install python-dateutil</code> <a href="https://pypi.org/project/python-dateutil/" rel="nofollow noreferrer">pypi.org/project/python-dateutil</a></span>
<span class="comment-copy">okay thank you Alexander</span>
