<div class="post-text" itemprop="text">
<p>Recently I have been working on a code and got stuck for days on this error.
Basically the program calculates how many calories you have to eat everyday. I have to take input from an entry and I don't know how to convert that input(it's a string by default) into a float to start using the numbers.
I am using Python 3 with Tkinter.</p>
<p>Here is the code:</p>
<pre><code>from tkinter import *

root = Tk()
root.geometry("1000x500")
root.resizable(FALSE, FALSE)
root.title("BMI Calculator")

def calc(args):

    def BMI_temp(args):
        print(str(boyage))
        BMI = IntVar()
        BMI = 66.5 + (13.75 * float(boykg)) + (5.003 * float(boycm)) - (6.755 * float(boyage))
        bmi_temp = Label(root, text="This is how many calories you have to eat if you have a non-active life: " + str(float(BMI)))
        bmi_temp.grid(row=3, sticky=W)

    def boy_age_fnct(args):
        boy_age_entry.focus_set()
        boy_cm_entry.delete(0, "end")
        boy_age.grid(row=2, sticky=W)
        boy_age_entry.grid(row=2, column=1)
        boy_age_entry.bind("&lt;Return&gt;", BMI_temp)

    def boy_cm_fnct(args):
        boy_cm_entry.focus_set()
        boy_kg_entry.delete(0, "end")
        boy_cm.grid(row=1, sticky=W)
        boy_cm_entry.grid(row=1, column=1)
        boy_cm_entry.bind("&lt;Return&gt;", boy_age_fnct)

    boy_kg_entry.focus_set()
    temp = boygirle.get()
    gender = temp.title()
    welcome.destroy()
    hello_lbl.destroy()
    boygirle.destroy()
    boygirlq.destroy()

    if gender[0] == 'B':
        boy_kg.grid(row=0, sticky=W)
        boy_kg_entry.grid(row=0, column=1)
        boy_kg_entry.bind("&lt;Return&gt;", boy_cm_fnct)

    boyage = boy_age_entry.get()
    boycm = boy_cm_entry.get()
    boykg = boy_kg_entry.get()

def hello(args):
    name_user = name_entry.get()
    name2 = name_user.title()
    name_entry.delete(0, "end")
    hello = "Hello " + name2 + "!"
    hello_lbl["text"] = hello
    hello_lbl.grid(row=2, sticky=W)
    btn_cont.grid(row=3, sticky=W)
    name.destroy()
    name_entry.destroy()
    btn_cont.focus_set()

def BMI():
    btn_cont.destroy()
    boygirlq.grid(row=3, sticky=W)
    boygirle.grid(row=3, column=0, ipadx=35)
    boygirle.bind("&lt;Return&gt;", calc)
    boygirle.focus_set()

welcome = Label(root, text="Hello! This is a BMR calculator. It tells you how many calories you have to eat!", font="System 14 bold")
name = Label(root, text="Please enter your name:", font="System 12")
hello_lbl = Label(root, font="System 14")
boygirlq = Label(root, text="Are you a boy or a girl?", font="System 12 bold")
boy_kg = Label(root, text="Please enter your weight(in kg):", font="System 12 bold")
boy_cm = Label(root, text="Please enter your height(in cm):", font="System 12")
boy_age = Label(root, text="Please enter your age(in years):", font="System 12")

btn_cont = Button(root, text="Continue", font="Helvetica 12", command=BMI, relief=RAISED)

boy_kg_entry = Entry(root, font="System 12", relief=SUNKEN)
boy_cm_entry = Entry(root, font="System 12", relief=SUNKEN)
boy_age_entry = Entry(root, font="System 12", relief=SUNKEN)
name_entry = Entry(root, font="System 12", relief=SUNKEN)
boygirle = Entry(root, font="System 12", relief=SUNKEN)
name_entry.bind("&lt;Return&gt;", hello)
name_entry.focus_set()

welcome.grid(row=0, columnspan=2, ipadx=200)
name.grid(row=1, sticky=W)
name_entry.grid(row=1, column=0)

root.mainloop()
</code></pre>
<p>I tried all the methods I found on the internet but nothing worked.</p>
</div>
<div class="post-text" itemprop="text">
<h3>Probable cause: you forgot to fill out one field</h3>
<h2>Explanation</h2>
<p>a <a href="https://docs.python.org/3/library/functions.html#float" rel="nofollow noreferrer">float</a> <em>can</em> be constructed from a str, it just has to have the right format.
You should be able to convert string that look like floats to floats by just using <code>float(mystr)</code>. </p>
<p>Pay attention to:</p>
<ul>
<li>No spaces (or non-digit characters)  </li>
<li>Period (.) as decimal separator, not comma (,)  </li>
<li><em>some</em> special things are allowed (e.g. "inf", "5e3",
...)</li>
</ul>
<p>Most probably (if you didn't cut anything off your error message), you forgot to fill out one field and are thus trying to perform <code>float('')</code>.</p>
<h2>Some examples</h2>
<pre><code>&gt;&gt;&gt; float('')  # probably your case
Traceback (most recent call last):
  File "&lt;pyshell#74&gt;", line 1, in &lt;module&gt;
    float('')
ValueError: could not convert string to float:
&gt;&gt;&gt; float('1')
1.0
&gt;&gt;&gt; float('1.0')
1.0
&gt;&gt;&gt; float('no number')
Traceback (most recent call last):
  File "&lt;pyshell#64&gt;", line 1, in &lt;module&gt;
    float('no number')
ValueError: could not convert string to float: 'no number'
&gt;&gt;&gt; float('10e30')
1e+31
&gt;&gt;&gt; float('inf')
inf
&gt;&gt;&gt; float('123.456')
123.456
&gt;&gt;&gt; float('123,456')  # , not allowed
Traceback (most recent call last):
  File "&lt;pyshell#68&gt;", line 1, in &lt;module&gt;
    float('123,456')
ValueError: could not convert string to float: '123,456'
&gt;&gt;&gt; float('123 456')  # no whitespace as separator
Traceback (most recent call last):
  File "&lt;pyshell#69&gt;", line 1, in &lt;module&gt;
    float('123 456')
ValueError: could not convert string to float: '123 456'
</code></pre>
<h2>Further thoughts</h2>
<p>An alternative for getting the float values is asking for them in a popup window -- tis can be done with <code>tkinter.simpledialog.askfloat</code>. This will return you a <code>float</code> directly and show an error message if the string entered could not be converted.
<strong>But</strong>, it may also return <code>None</code> when the user clicks the "Cancel" button, so you might want to check the result befor computing stuff.</p>
<p>Example:</p>
<pre><code>import tkinter as tk
from tkinter.simpledialog import askfloat

def click():
    val = askfloat('Title', 'The prompt:')  # float or None (cancel)
    if val is not None:
        tk.Label(root, text=f'The value "{val}" is a valid float').pack()  # f-string, replace if you get an error 

root = tk.Tk()
tk.Button(root, text='Click!', command=click).pack()
root.mainloop()
</code></pre>
<p><strong>Edit:</strong></p>
<p>If you keep the <code>Entry</code> widgets, you may want to catch the error and show the user a message. This can easily be done with <code>tkinter.mesagebox</code>, specifically of this case the <code>showerror</code> function.</p>
<p>Example:</p>
<pre><code>import tkinter as tk
from tkinter.messagebox import showerror

def click():
    try:
        val = float(entry.get())
    except ValueError as e:
        showerror('Error title', 'The number could not be converted to float:\n'+str(e))
    else:
        entry.delete(0, tk.END)
        Label(root, text=val).pack()

root = tk.Tk()
entry = tk.Entry(root)
tk.Label(root, text='insert a float value below:').pack()
entry.pack()
tk.Button(root, text='and click!', command=click).pack()
root.mainloop()
</code></pre>
</div>
<span class="comment-copy">That error is caused by calling <code>float()</code> on a value that cannot be converted to a float.  If you look closely at the error message, it should display the bad value, i.e. something like <code>ValueError: could not convert string to float: apple</code>.  If it just ends with <code>float:</code>, that means the input was blank.</span>
<span class="comment-copy">I understand and I know that. I think I should place the <code>boyage</code> <code>boycm</code> and <code>boykg</code> somewhere else but where. I know that the error is because the entry is not completed. What should I do?</span>
<span class="comment-copy">Your <code>calc()</code> function should specifically check each value beforehand, and exit if any of the values can't be converted to floats.</span>
<span class="comment-copy">Ok thank you I will try to fix it</span>
<span class="comment-copy">Thank you very much. I know what I have to do.</span>
<span class="comment-copy">You're welcome. You may also want to look into tkinter.messagebox</span>
