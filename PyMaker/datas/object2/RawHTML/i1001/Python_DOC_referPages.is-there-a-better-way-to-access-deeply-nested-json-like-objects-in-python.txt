<div class="post-text" itemprop="text">
<p>I often have to deal with accessing deeply nested JSON responses. One way to access an element could be something like this:</p>
<pre><code>json_['foo'][0][1]['bar'][3]
</code></pre>
<p>But that's obviously not at all safe. One solution is to use the <code>get</code> method of Python <code>dict</code> and pass <code>{}</code> as the default argument.</p>
<pre><code>json_.get('foo', {})[0][1]['bar'][3]
</code></pre>
<p>But that again can raise an IndexError exception which leaves me with a length check for every list element access.</p>
<pre><code>target = json_.get('foo', {})
if not target:
   return
target = target[0]
if len(target) &lt; 2:
   return
target = target[1].get('bar', {})
if len(target) &lt; 4:
   return
target = target[3]   #Finally...
</code></pre>
<p>And that's not at all pretty. So, is there a better solution for this?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just wrap the entire thing in <code>try/except</code>:</p>
<pre><code>try:
    return json_['foo'][0][1]['bar'][3]
except IndexError, KeyError:
    return None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Adding to the other answer, if you want to just ignore the exceptions you could use:</p>
<pre><code># Wrap this in a function
try:
    return json_['foo'][0][1]['bar'][3]
except (KeyError, IndexError):
    pass
</code></pre>
<p>Addtionally, another way is to suppress exceptions is with <a href="https://docs.python.org/3/library/contextlib.html#contextlib.suppress" rel="nofollow noreferrer"><code>contextlib.suppress()</code></a>:</p>
<pre><code>from contextlib import suppress

# Wrap this in a function
with suppress(KeyError, IndexError):
    return json_['foo'][0][1]['bar'][3]
</code></pre>
</div>
<span class="comment-copy">If returning <code>None</code> is an option, why not <code>try: json_['foo'][0][1]['bar'][3]; except KeyError, IndexError: pass</code>?</span>
