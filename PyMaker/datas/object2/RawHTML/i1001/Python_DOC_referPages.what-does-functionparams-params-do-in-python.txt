<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/40479437/meaning-of-function-calling-in-python">Meaning of function calling in Python?</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I meet some Keras functions that look like the following : Function(1*List of parameters separated by commas)(2*A parameter). But I don't understand what does Function do on the second list of parameters. I have never met this kind of functions in Python. The usual type of functions' prototypes I see are of the following : Function(List of parameters)</p>
<p>Example of these functions met in Keras :</p>
<p><code>x = Dense(128, activation='relu')(x)
x = Dropout(0.35)(x)
out = Dense(num_classes, activation='softmax')(x)</code></p>
<p>In this case, it looks like that Function takes into account what was done precedently on x before applying on it new changes. </p>
<ol>
<li>Is this kind of function writing backed by any Python manual ? </li>
<li>Is it a new type of function writing in Python ?</li>
<li>How does it work ?</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>It's just a function that returns a function which you immediately call. You can do the same:</p>
<pre><code>def add(x):
    def add_x(y):
        return x + y
    return add_x
</code></pre>
<p>This function can now be called like this:</p>
<pre><code>&gt;&gt;&gt; add(4)(7)
11
</code></pre>
<hr/>
<p>This works because</p>
<blockquote>
<p>Functions are first-class objects. A “def” statement executed inside a function definition defines a local function that can be returned or passed around. Free variables used in the nested function can access the local variables of the function containing the def. <a href="https://docs.python.org/3/reference/compound_stmts.html#function-definitions" rel="nofollow noreferrer">[1]</a></p>
</blockquote>
<p>See also: <a href="https://docs.python.org/3/reference/executionmodel.html#naming" rel="nofollow noreferrer">Naming and Binding</a>.</p>
</div>
<span class="comment-copy">Thank you for your clarification, I see that the question was already asked elsewhere but formulated differently ! :D</span>
