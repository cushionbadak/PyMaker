<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/34544247/understanding-pythons-lstrip-method-on-strings">Understanding python's lstrip method on strings</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I am searching for an easier way to remove the '-' in front of each string in a list. (only the first '-' if there is one in front of the string)</p>
<pre><code>note_tmp = [
    "-some-text",
    "-other text",
    "another-one",
    "-text number four"
]
note_done = []
for note in note_tmp:
    if note.startswith("-"):
        note_done.append(note[1:])
    else:
        note_done.append(note)

print(note_done)
</code></pre>
<p>I thing this can be written much easier...</p>
<p>Thanks for your help ;)</p>
</div>
<div class="post-text" itemprop="text">
<p><code>str.lstrip('-')</code> should do:</p>
<pre><code>In [83]: note_tmp = [
    ...:     "-some-text",
    ...:     "-other text",
    ...:     "another-one",
    ...:     "-text number four"
    ...: ]

In [84]: [s.lstrip('-') for s in note_tmp]
Out[84]: ['some-text', 'other text', 'another-one', 'text number four']
</code></pre>
<blockquote>
<p>S.lstrip([chars]) -&gt; str</p>
<p>Return a copy of the string S with leading whitespace removed.
  If chars is given and not None, remove characters in chars instead.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You may use <a href="https://docs.python.org/3/library/stdtypes.html#str.lstrip" rel="nofollow noreferrer"><code>str.lstrip()</code></a> with <em>list comprehension</em> to achieve this as:</p>
<pre><code>my_list = [
    "-some-text",
    "-other text",
    "another-one",
    "-text number four"
]

new_list = [s.lstrip('-') for s in my_list]
</code></pre>
<p>where <code>new_list</code> will hold value:</p>
<pre><code>['some-text', 'other text', 'another-one', 'text number four']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just adding an alternative approach, using list slicing and list comprehension;</p>
<pre><code>note_tmp = [
        "-some-text",
        "-other text",
        "another-one",
        "-text number four"
    ]

new_note_tmp = [x[1:] if x[0] == '-' else x for x in note_tmp]

print(new_note_tmp)

&gt;&gt;&gt;['some-text', 'other text', 'another-one', 'text number four']
</code></pre>
</div>
<span class="comment-copy">I don't know if there is some method; but i think; those methods would at last will do the same; ie. iteration and checking; then modifying and appending; which ofcourse you have done.  Also one thing can be shortened; remove else block and directly modify the main list(if there is a safe copy somewhere)</span>
<span class="comment-copy">Thank you ;), that worked</span>
<span class="comment-copy">@swiftlynx Happy to help :)</span>
<span class="comment-copy">Thank you ;), that worked</span>
<span class="comment-copy">list comprehension isn't making it any shorter</span>
<span class="comment-copy">I beg to differ, as it is quite clearly 5 lines shorter. Furthermore, no-one has asked for a 'shorter' solution.</span>
<span class="comment-copy">i can make it one line code; but that is also not shorter because I think shorter means less in time- space complexity; and not the lines that the code acquires.</span>
<span class="comment-copy">But it does have the benefit that it only removes one '-' at the start of the string, unlike the .lstrip() versions.</span>
