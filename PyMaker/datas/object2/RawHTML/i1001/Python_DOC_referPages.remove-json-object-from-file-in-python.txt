<div class="post-text" itemprop="text">
<p>I'm not sure if my json file is unique but I couldn't find any other question/answers that worked.</p>
<p>My JSON file looks like:</p>
<pre><code>{"UserID": "name1", "Timestamp": "1234"}
{"UserID": "name2", "Timestamp": "4321"}
{"UserID": "name3", "Timestamp": "1234"}
</code></pre>
<p>Is there a way for python to delete an entire line from the file?</p>
<p>This is what I've done so far:</p>
<pre><code>open_file = open("times.json", 'r')
line = open_file.readline()

while line:
    jsonLine = json.loads(line)

    if line['Timestamp'] == '1234':
        del line

open_file.close()
</code></pre>
<p>If the timestamp is 1234, I want it to delete the entire object so the file will just look like this:</p>
<pre><code>{"UserID": "name2", "Timestamp": "4321"}
</code></pre>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Combining both jonrsharpe's and ajon's suggestions, instead of deleting it while reading, read it into memory and then write it back.</p>
<p>You might however have an easier time to read the <code>json</code>s first and then eliminate the lines with matched elements, instead of manipulating the text directly:</p>
<pre><code>json_lines = []
with open("times.json", 'r') as open_file:
    for line in open_file.readlines():
        j = json.loads(line)
        if not j['Timestamp'] == '1234':
            json_lines.append(line)

with open("times.json", 'w') as open_file:
    open_file.writelines('\n'.join(json_lines))
</code></pre>
<p>This method gives you more conditional flexibility over multiple keys/values if necessary as opposed to looking specifically for <code>"TimeStamp": "1234"</code> within the line.</p>
</div>
<div class="post-text" itemprop="text">
<p>As suggested by @jonrsharpe, you can read in the file.  Do whatever manipulations you want.  Then rewrite the file.</p>
<p>Here is an example:</p>
<p>test.out:</p>
<pre><code>test file
#test comment
testfile
</code></pre>
<p>Python code:</p>
<pre><code>content = ''
with open('test.out', 'r') as f:
  for line in f:
    if line.startswith('#'): continue # don't copy comment lines
    content += line

with open('test.out', 'w') as f:
  f.write(content)
</code></pre>
<p>test.out after:</p>
<pre><code>test file
testfile
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Reading the whole file into memory may lead to troubles with large files. You may want to write to a temporary file and then overwrite the old file with the new file. There is a build in python library for that: <a href="https://docs.python.org/3/library/tempfile.html" rel="nofollow noreferrer">https://docs.python.org/3/library/tempfile.html</a></p>
<p>If you are sure, your file is not large, you do not need read_line you can directly use <code>json.load()</code>.</p>
</div>
<span class="comment-copy">That's <i>not</i> a JSON file. In general, deleting a line from a file is not straightforward - I'd recommend reading the whole file, modifying it in-memory then writing out back over it.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/4710067/using-python-for-deleting-a-specific-line-in-a-file">using Python for deleting a specific line in a file</a></span>
<span class="comment-copy">@jonrsharpe While it's not exactly a JSON file, it is however a proper <a href="http://jsonlines.org/examples/" rel="nofollow noreferrer">JSON lines</a> format.</span>
<span class="comment-copy">This one was exactly what I was looking for. Thank you so much. I had to modify it a bit, but this was perfect.</span>
<span class="comment-copy">I've slightly modified the answer to provide the newline as well.  Instead of saving the <code>json</code> object for each line, since you're writing the <code>str</code> back, just save the <code>line</code> from the get go and do a <code>'\n'.join(...)</code> after.  See my updated answer.</span>
<span class="comment-copy">Thank you! Your answer is very helpful.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/io.html#io.IOBase.writelines" rel="nofollow noreferrer"><code>writelines</code></a> expects a <i>sequence</i> of lines; if you build the whole file string yourself, I think it'll write every <i>character</i> to a new line.</span>
<span class="comment-copy">@jonrsharpe I just read the documentation again, I thought I had missed something but no, the line separator is not added so it was expected within the lists themselves.  Seems rather pointless to me since in this case I'd have to <code>'\n'.join(json_lines)</code> myself either way if I use <code>write</code> or <code>writelines</code>.  But I agree, in this case probably better if I just used <code>write()</code>.</span>
<span class="comment-copy">They can't use json.load, as the file doesn't contain a single JSON entity</span>
