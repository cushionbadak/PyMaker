<div class="post-text" itemprop="text">
<p>I use the <code>xml</code> library in Python3.5 for <em>reading</em> and <em>writing</em> an xml-file. I don't modify the file. Just open and write. But the library modifes the file.</p>
<ol>
<li>Why is it modified?</li>
<li>How can I prevent this? e.g. I just want to replace specific tag or it's value in a quite complex xml-file without loosing any other informations.</li>
</ol>
<p>This is the example file</p>
<pre><code>&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;movie&gt;
    &lt;title&gt;Der Eisbär&lt;/title&gt;
    &lt;ids&gt;
        &lt;entry&gt;
            &lt;key&gt;tmdb&lt;/key&gt;
            &lt;value xsi:type="xs:int" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;9321&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;imdb&lt;/key&gt;
            &lt;value xsi:type="xs:string" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;tt0167132&lt;/value&gt;
        &lt;/entry&gt;
    &lt;/ids&gt;
&lt;/movie&gt;
</code></pre>
<p>This is the code</p>
<pre><code>import xml.etree.ElementTree as ET
tree = ET.parse('x.nfo')
tree.write('y.nfo', encoding='utf-8')
</code></pre>
<p>And the xml-file becomes this</p>
<pre><code>&lt;movie xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
    &lt;title&gt;Der Eisbär&lt;/title&gt;
    &lt;ids&gt;
        &lt;entry&gt;
            &lt;key&gt;tmdb&lt;/key&gt;
            &lt;value xsi:type="xs:int"&gt;9321&lt;/value&gt;
        &lt;/entry&gt;
        &lt;entry&gt;
            &lt;key&gt;imdb&lt;/key&gt;
            &lt;value xsi:type="xs:string"&gt;tt0167132&lt;/value&gt;
        &lt;/entry&gt;
    &lt;/ids&gt;
&lt;/movie&gt;
</code></pre>
<ul>
<li>Line 1 is gone.</li>
<li>The <code>&lt;movie&gt;</code>-tag in line 2 has attributes now.</li>
<li>The <code>&lt;value&gt;</code>-tag in line 7 and 11 now has less attributes.</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Note that "xml package" and "the <code>xml</code> library" are ambiguous. There are several XML-related modules in the standard library: <a href="https://docs.python.org/3/library/xml.html" rel="noreferrer">https://docs.python.org/3/library/xml.html</a>.</p>
<blockquote>
<p>Why is it modified?</p>
</blockquote>
<p>ElementTree moves namespace declarations to the root element, and namespaces that aren't actually used in the document are removed. </p>
<p>Why does ElementTree do this? I don't know, but perhaps it is a way to make the implementation simpler. </p>
<blockquote>
<p>How can I prevent this? e.g. I just want to replace specific tag or it's value in a quite complex xml-file without loosing any other informations.</p>
</blockquote>
<p>I don't think there is a way to prevent this. The issue has been brought up before. Here are two very similar questions with no answers: </p>
<ul>
<li><a href="https://stackoverflow.com/q/38438921/407651">How do I parse and write XML using Python's ElementTree without moving namespaces around?</a></li>
<li><a href="https://stackoverflow.com/q/38663191/407651">Keep Existing Namespaces when overwriting XML file with ElementTree and Python</a></li>
</ul>
<p>My suggestion is to use <a href="http://lxml.de" rel="noreferrer">lxml</a> instead of ElementTree. With lxml, the namespace declarations will remain where they occur in the original file.</p>
<blockquote>
<p>Line 1 is gone.</p>
</blockquote>
<p>That line is the XML declaration. It is recommended but not mandatory to have one. </p>
<p>If you always want an XML declaration, use <code>xml_declaration=True</code> in the <code>write()</code> method call.</p>
</div>
<span class="comment-copy">In general, the short names (and where they are specified) for XML namespaces cannot be expected to be stable. But why aren't you using <code>lxml</code> anyway?</span>
<span class="comment-copy"><code>lxml</code> manages to preserve the namespaces by default, although you still have to pass a flag to get the XML declaration up top.</span>
<span class="comment-copy">@o11c You mean a python package <code>lxml</code>? I didn't notice it. I was just using <code>xml</code> as search term in the python doc and found <code>ElementTree</code>.</span>
<span class="comment-copy">@o11c <code>lxml</code> doesn't help, too. It does some transformations of the code, too.</span>
<span class="comment-copy">Well, <i>nobody</i> tries to preserve attribute order. So what <code>lxml</code> does is sort them. So even if they are changed on the <i>first</i> write, they will be consistent on all subsequent writes.</span>
