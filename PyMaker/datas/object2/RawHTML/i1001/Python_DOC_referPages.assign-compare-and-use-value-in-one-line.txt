<div class="post-text" itemprop="text">
<p>Current code:</p>
<pre><code>error = dict.get("error", None)
if error:
    print(error)
</code></pre>
<p>Is there a way to place it on one line, e.g.:</p>
<pre><code>print(error) if (error = dict.get("error", None))
</code></pre>
<p>In C you can assign a value, then compare, then print it out on one line:</p>
<pre><code>if (a = 5) printf("%d",a);
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3.8, you will be able to write</p>
<pre><code>if error := dict.get("error", None):
    print(error)
</code></pre>
<p>Python does not have Perl-style statement modifiers, but since <code>print</code> is a function, you can write an expression statement like</p>
<pre><code>print(error) if (error := dict.get("error", None)) else None
</code></pre>
<p>although I wouldn't recommend it. (Actually, I'm not entirely sure the assignment expressions defined by PEP-572 interact with a conditional expression. I haven't played with any reference implementations to test it, but I believe <code>error</code> will be in scope for the entire expression.)</p>
<hr/>
<p>A simple <code>if</code> statement like that, though, <em>can</em> be written on one line (although again, I wouldn't recommend it; PEP-8 explicitly frowns upon</p>
<pre><code>if error := dict.get('error', None): print(error)
</code></pre>
<p>)</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of using a ternary <code>print("" if not d.get("error") else d["error"])</code> you can use <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>dict.get(key,default)</code></a> and <a href="https://docs.python.org/3/library/functions.html#print" rel="nofollow noreferrer"><code>print()</code></a> with a ternary telling <code>end=""</code> or <code>end="\n"</code> to avoid/use the newline after it:</p>
<pre><code>d = {"error": "plenty"}  

print( d.get("error",""), end = "\n" if d.get("error","") else "")
</code></pre>
<p>This prints nothing (not even a newline due to <code>end=""</code>) if the key is not present.</p>
<p>See <a href="https://stackoverflow.com/questions/11041405/why-dict-getkey-instead-of-dictkey">Why dict.get(key) instead of dict[key]?</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Building on the answer <a href="https://stackoverflow.com/questions/6167127/how-to-put-multiple-statements-in-one-line">here</a> you could possibly cram multiple expressions using a semicolon. Something like</p>
<pre><code>error = my_dict.get("error", None); print(error) if error is not None else None
</code></pre>
<p>Should work, but I'm typing on my phone and can't test.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply use inline <code>if else</code> provided by <code>python</code>.</p>
<pre><code>print('error') if dict.get("error") else 0
</code></pre>
<p>That it! Hope it helps:)</p>
</div>
<span class="comment-copy">No, there isn't; your code is perfectly readable. Note that <code>None</code> is the default default value, so is redundant there.</span>
<span class="comment-copy">Just to agree with the comment above, cramming this into a one-liner feels like poor programming and should be avoided. Still, it is <i>possible</i>. Also, it's bad practice to overwrite the built in <code>dict</code> keyword with a variable.</span>
