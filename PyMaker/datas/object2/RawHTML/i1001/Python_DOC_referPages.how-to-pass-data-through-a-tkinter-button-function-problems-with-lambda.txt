<div class="post-text" itemprop="text">
<p>Start page has two buttons: pull data and plot data in a new frame. figure(f,a) has been defined, but is not included in the section of code below:</p>
<pre><code> button1 = ttk.Button(self, text="Show Graph",
                            command=lambda: controller.show_frame(PageTwo))
 button1.pack()

 button2 = ttk.Button(self, text="PL3",
                            command=lambda: animate(3)) 
 button2.pack()
</code></pre>
<p>Button2 launches the function "animate" it takes in an argument(J), pulls data corresponding to J then plots a scatter plot. </p>
<pre><code>def animate(j)
   a.plot(Date, Left,"go", label = "price")
   title = "Left Fid"
   a.set_title(title) 
</code></pre>
<p>Button1 then shows the figure in a new frame</p>
<pre><code>class PageTwo(tk.Frame):
def __init__(self, parent, controller):
    tk.Frame.__init__(self, parent)
    label = tk.Label(self, text="Graph page", font=LARGE_FONT)
    label.pack(pady=10,padx=10)


    button1 = ttk.Button(self, text="back to home",
                        command=lambda: controller.show_frame(StartPage))
    button1.pack()

    canvas = FigureCanvasTkAgg(f,self)
    canvas.get_tk_widget().pack(side=tk.TOP, fill=tk.BOTH, expand = True)

    canvas.get_tk_widget().pack(side=tk.TOP, fill=tk.BOTH, expand = True) 
</code></pre>
<p>The issue: The data I want to get plotted is being correctly executed by animate. I can see the data in the command prompt. The new tkinter window pops up, but without plotting any of the data generated from "animate". </p>
<p>If I REMOVE the LAMBDA from Button 2, I see the correct plot in the new frame, but is not how I want to structure the code for the future.  I can not remove lambda because eventually there will be 30 buttons just like Button 2. </p>
<p>What is going on with LAMBDA in button 2?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>What is going on with LAMBDA in button 2?</p>
</blockquote>
<p>The <a href="http://effbot.org/zone/tkinter-callbacks.htm" rel="nofollow noreferrer">command parameter</a> in <code>tkinter.Button</code> expects a references to a function.</p>
<p><code>lambda</code> is syntax to create an <a href="https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions" rel="nofollow noreferrer">anonymous, simple function</a>. It's syntax is virtually identical to a function's signature.</p>
<pre><code>def func(a, *args, b = 2, **kwargs):
    return a+b
func = lambda a, *args, b = 2, **kwargs: a+b
</code></pre>
<p>Because <code>lambda</code> is an easy way to create a function, people often use it in <code>tkinter</code> to bundle functions with predetermined arguments specific to the given callback/command.</p>
<blockquote>
<p>Button2 launches the function "animate" it takes in an argument(J), pulls data corresponding to J then plots a scatter plot. [...] </p>
<p>Button1 then shows the figure in a new frame [...] </p>
<p>If I REMOVE the LAMBDA from Button 2, I see the correct plot in the new frame</p>
</blockquote>
<p>Removing the <code>lambda</code> keyword executes <code>animate(3)</code> immediately when the code is executed to configure <code>button2</code> instead of creating an anonymous function. The command for <code>button2</code> is then set to whatever <code>animate(3)</code> returns. If it is not callable, then it is effectively ignored.</p>
<p>Because you did not provide workable code for <code>animate</code> or <code>controller.show_page</code>, it's not possible for any of us to know for sure what it does, but from the results it is safe to assume that <code>animate</code> stores the <code>figure</code> in an attribute/variable, and then <code>controller.show_page</code> (or some portion of <code>PageTwo</code> which is not provided) retrieves the <code>figure</code> from that attribute/variable. This is why the code <em>appears</em> to still be working: because with only one <code>figure</code> to store, <code>button1</code> will always retrieve the correct figure. If you had multiple buttons, presumably <code>button1</code> would always display the <code>figure</code> for the last button created no matter which button was pressed, as that is the most recently stored <code>figure</code>.</p>
<p>Obviously, the issue at the center of all this is likely how <code>animate</code> is storing the <code>figure</code> and the way <code>controller.show_page</code>/<code>PageTwo</code> is retrieving the figure. Two generalized explanations:</p>
<ul>
<li>Something is created after or during the initialization of <code>PageOne</code> which interacts with <code>figure</code> (and/or influences the instantiation of <code>PageTwo</code>). <strong>With</strong> <code>lambda</code>, this object has a certain value while being created which is not changed until after the object has completed its process (whether that's initializing, calling a subsequent method, setting a tertiary variable, etc). <strong>Without</strong> <code>lambda</code>, <code>animate</code> is called immediately which changes this object to reflect the creation of <code>figure</code>.</li>
<li>The variable housing <code>figure</code> or another intermediary variable is being garbage collected because you aren't maintaining a reference to it.</li>
</ul>
<p>Since I think the first is more likely, I'll specifically pick out <code>a</code> and <code>f</code> as candidates: neither of these variables are method parameters (and they don't appear to be pulled from <code>controller</code>, per your code), so they are references that could easily be changed during execution in a higher scope.</p>
<p>If you <a href="https://stackoverflow.com/help/mcve">reduce your code to a MVCE</a>, it would be easier to see what exactly the problem is. You also might find that the issue goes away when you writing the MVCE, which will tell you exactly what went wrong and will let you fix it right away instead of waiting for Stack Overflow answers.</p>
</div>
<span class="comment-copy">Your function 'animate' takes j as a parameter but doesn't use it in any of the statements.  It's called in your button lambda command.</span>
<span class="comment-copy">Please provide a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a></span>
