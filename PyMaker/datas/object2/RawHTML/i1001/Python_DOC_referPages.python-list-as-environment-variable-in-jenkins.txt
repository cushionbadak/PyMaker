<div class="post-text" itemprop="text">
<p>I am trying to set an environment variable in Jenkins that I want my python script in Github to use. I can access variables once they're not a collection but i would like to set a collection variable. In this case, a list.</p>
<p>I have a list variable like:
<code>list = ["item1","item2"]</code></p>
<p>When i try to print it from Jenkins using: 
<code>print(os.environ['list'])</code> it prints the whole list as a single string and using <code>print(type(os.environ['list']))</code> prints "string".</p>
</div>
<div class="post-text" itemprop="text">
<p>Environment variables are just text. In cases (e.g. the PATH and PYTHONPATH variables), this can be done by using <a href="https://docs.python.org/3/library/os.html#os.pathsep" rel="nofollow noreferrer"><code>os.pathsep</code></a> to separate elements of the list. E.g.</p>
<pre><code>os.environ['list'] = os.pathsep.join(["item1", "item2"])
</code></pre>
<p>and then reconstruct</p>
<pre><code>print(os.environ['list'].split(os.pathsep))
</code></pre>
<p>You could also use some serialization standard like JSON.</p>
<p>I don't believe it would work to store the list itself.</p>
</div>
<div class="post-text" itemprop="text">
<p>Create a string variable in jenkins and then use str.split() in the python script to make a list.</p>
<p>In Jenkins: <code>jenkinslist = item1 item2 item3</code></p>
<p>In Github/python: <code>pythonlist = os.environ['jenkinslist'].split()</code></p>
</div>
<span class="comment-copy">Using <code>pathsep</code> could work, but I don't think there's anything traditional about it. There is no guarantee that there is <i>any</i> character available that can unambiguously distinguish between two separate list items; that's why many shells provide special array variables instead of relying on delimited strings to represent a list of strings.</span>
<span class="comment-copy">Thank you for that suggestion. That might work if i wanted to group multiple variables in one list but in my case, I wanted to know how to make a collection variable straight from Jenkins. That does not seem to be possible but I've found a really simple work around. I will post it as the answer. Thanks again.</span>
