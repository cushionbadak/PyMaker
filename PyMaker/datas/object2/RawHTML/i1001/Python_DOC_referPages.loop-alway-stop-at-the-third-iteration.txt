<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/21274865/scrape-multiple-urls-using-qwebpage">Scrape multiple urls using QWebPage</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>So, guys, i am still confuse why the iteration always stop at the third turn<br/>
Here is my code :</p>
<pre><code>from PyQt5.QtWidgets import QApplication
from PyQt5.QtCore import QUrl
from PyQt5.QtWebEngineWidgets import QWebEnginePage
import sys
import numpy as np
from bs4 import BeautifulSoup as soup

class Client(QWebEnginePage):
    def __init__(self,url):
        global app
        self.app = QApplication(sys.argv)
        QWebEnginePage.__init__(self)
        self.html = ""
        self.loadFinished.connect(self.on_load_finished)
        self.load(QUrl(url))
        self.app.exec_()

    def on_load_finished(self):
        self.html = self.toHtml(self.Callable)
        print("Load Finished")

    def Callable(self,data):
        self.html = data
        self.app.quit()



linkgroup = []
linkgroup.append("https://docs.python.org/3/whatsnew/3.7.html")
linkgroup.append("https://docs.python.org/3/tutorial/index.html")
linkgroup.append("https://docs.python.org/3/installing/index.html")
linkgroup.append("https://docs.python.org/3/reference/index.html")
linkgroup.append("https://docs.python.org/3/using/index.html")

for h in range(0,len(linkgroup)):
    #Setting Url
    url = linkgroup[h]
    print(url)
    print("Loop Index : " + str(h))

    client_response = Client(url)
</code></pre>
<p>The output is this  </p>
<pre><code>https://docs.python.org/3/whatsnew/3.7.html
Loop Index : 0
Load Finished
https://docs.python.org/3/tutorial/index.html
Loop Index : 1
Load Finished
https://docs.python.org/3/installing/index.html
Loop Index : 2
</code></pre>
<p>As you can see, the rest iterations of the loop doesn't get executed as it doesn't show the respond from the Client class</p>
</div>
<div class="post-text" itemprop="text">
<p>As commented by pschill above, you should have only one <code>QApplication</code>. How about passing it as a parameter to the constructor? Something like: </p>
<pre><code>from PyQt5.QtWidgets import QApplication
from PyQt5.QtCore import QUrl
from PyQt5.QtWebEngineWidgets import QWebEnginePage
import sys
import numpy as np
from bs4 import BeautifulSoup as soup

class Client(QWebEnginePage):
    def __init__(self,url,app):
        self.app = app
        QWebEnginePage.__init__(self)
        self.html = ""
        self.loadFinished.connect(self.on_load_finished)
        self.load(QUrl(url))
        self.app.exec_()

    def on_load_finished(self):
        self.html = self.toHtml(self.Callable)
        print("Load Finished")

    def Callable(self,data):
        self.html = data
        self.app.quit()

linkgroup = []
linkgroup.append("https://docs.python.org/3/whatsnew/3.7.html")
linkgroup.append("https://docs.python.org/3/tutorial/index.html")
linkgroup.append("https://docs.python.org/3/installing/index.html")
linkgroup.append("https://docs.python.org/3/reference/index.html")
linkgroup.append("https://docs.python.org/3/using/index.html")

app = QApplication(sys.argv)

for h in range(0,len(linkgroup)):
    #Setting Url
    url = linkgroup[h]
    print(url)
    print("Loop Index : " + str(h))

    client_response = Client(url, app)
</code></pre>
</div>
<span class="comment-copy">The constructor of your <code>Client</code> class creates a new <code>QApplication</code> object. That is not a good idea, there should be only one <code>QApplication</code> object per program.</span>
<span class="comment-copy">How should I do it? Is that really the reason why the loop stop?</span>
<span class="comment-copy">Running your code I get segmentation fault on that line as well. So yes, that's exactly why it stops.</span>
<span class="comment-copy">Just want you to know, the code works ~</span>
<span class="comment-copy">Great! I'll update the post, now that it's tested.</span>
