<div class="post-text" itemprop="text">
<p>I have a list <code>lst = [1,1,1,2,2,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4]</code></p>
<p>I'm expecting the following output:</p>
<pre><code>out = [1,"","",2,"","","",3,"","","","",4,"","","","","","","",""]
</code></pre>
<p>I want to keep the first occurrence of the item and replace all other occurrences of the same item with empty strings.</p>
<p>I tried the following approach. </p>
<pre><code>`def splrep(lst):
    from collections import Counter
    C = Counter(lst)
    flst = [ [k,]*v for k,v in C.items()]
    nl = []
    for i in flst:
        nl1 = []
        for j,k in enumerate(i):
            nl1.append(j)
        nl.append(nl1)

    ng = list(zip(flst, nl))
    for i,j in ng:
        j.pop(0)
    for i,j in ng:
        for k in j:
            i[k] = ''
    final = [i for [i,j] in ng]
    fin = [i for j in final for i in j]
    return fin`
</code></pre>
<p>But I'm looking for some simpler or better approaches.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>, quite appropriate for grouping consecutively duplicate values.</p>
<pre><code>from itertools import groupby
[v for k, g in groupby(lst) for v in [k] + [""] * (len(list(g))-1)]
# [1, '', '', 2, '', '', '', 3, '', '', '', '', 4, '', '', '', '', '', '', '', '']
</code></pre>
<p>If your list values are not consecutive, you may sort them first.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using a simple iteration</p>
<p><strong>Ex:</strong></p>
<pre><code>lst = [1,1,1,2,2,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4]
dup_check = set()
result = []
for i in lst:
    if i not in dup_check:
        result.append(i)
        dup_check.add(i)
    else:
        result.append("")
print(result)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[1, '', '', 2, '', '', '', 3, '', '', '', '', 4, '', '', '', '', '', '', '', '']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this simpler function:</p>
<pre><code>def fill_blank(l):
    filled = []
    last = l[0]
    for i in l:
        if i != last:
            last = i
        filled.append(last)
    return filled
</code></pre>
<p>Use it as such:</p>
<pre><code>&gt;&gt;&gt; lst = [1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4]
&gt;&gt;&gt; out = fill_blank(lst)
&gt;&gt;&gt; print(out)
[1, '', '', 2, '', '', '', 3, '', '', '', '', 4, '', '', '', '', '', '', '', '']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Short solution (one-liner) without any modules usage is as follows:</p>
<pre><code>lst = [1,1,1,2,2,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4]
out = ["" if (i in lst[:inx]) else i for inx,i in enumerate(lst)]
print(out)
</code></pre>
<p>output</p>
<pre><code>[1, '', '', 2, '', '', '', 3, '', '', '', '', 4, '', '', '', '', '', '', '', '']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Do this if you <strong>don't</strong> want to use <code>set</code> or <code>itertools</code>:           </p>
<pre><code>lst = [1,1,1,2,2,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4]

new_lst = []

for i in lst:
    if i in new_lst:
        new_lst.append("")
    else:
        new_lst.append(i)

print(new_lst)        
</code></pre>
<p>Output:        </p>
<pre><code>[1, '', '', 2, '', '', '', 3, '', '', '', '', 4, '', '', '', '', '', '', '', '']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try below approach.. </p>
<pre><code>lst = [1,1,1,2,2,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4]
fin=[]
for each in lst:
   if each not in fin:
       fin.append(each)
   else:
       fin.append("")
print(fin)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can store the first occurences in a dictionary with <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer"><code>dict.setdefault()</code></a>, then keep the first found numbers depending if they exist in this dictionary:</p>
<pre><code>lst = [1,1,1,2,2,2,2,3,3,3,3,3,4,4,4,4,4,4,4,4,4]

first_indices = {}
for i, x in enumerate(lst):
    first_indices.setdefault(x, i)

result = [x if first_indices[x] == i else "" for i, x in enumerate(lst)]

print(result)
# [1, '', '', 2, '', '', '', 3, '', '', '', '', 4, '', '', '', '', '', '', '', '']
</code></pre>
</div>
