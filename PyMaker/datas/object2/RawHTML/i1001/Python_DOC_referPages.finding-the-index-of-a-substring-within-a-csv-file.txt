<div class="post-text" itemprop="text">
<p>I have written some code that creates a function for count how many times a substring appears within a string, the second part of this function is supposed to return, is the index of each of those substring's.</p>
<p>The string is stored in a .csv file and where I run into problems is when I try to return the index of the substring's.</p>
<h1>1. Import the text.csv file</h1>
<pre><code>import csv
data = open('text.csv', 'r')
read_data = csv.reader(data)
</code></pre>
<h1>2. Complete function counter. The function should return the number of times the substring appears &amp; their index</h1>
<pre><code>def counter(substring):
  ss_counter = 0
  for substring in read_data:
    ss_counter = ss_counter + 1
    print('Counter = ', ss_counter)
    print('Index = ', substring.index)
</code></pre>
<h1>3. Do not edit the code below</h1>
<pre><code>counter("TCA")
</code></pre>
<p>The error I get from the .index is </p>
<p>built-in method index of list object at 0x7f4519700208</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming you fix when I mention in my comment, it won't work like you expect.</p>
<p>The <code>read_data</code> variable is an object that will iterate over the lines of the file (see the <a href="https://docs.python.org/3/library/csv.html#" rel="nofollow noreferrer">documentation here</a>). So inside the function, when you do <code>for substring in read_data</code>, the substring variable (which you override the parameter), contains an individual line, where each element is the comma separated value.</p>
<p>Check <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">the documentation</a> for the <code>list</code> method <code>index</code>. You have to pass into the <code>index()</code> function the substring you're looking for INSIDE the list. But because you overrode the substring you were looking for, that's impossible now.</p>
<p>As a side note, it's possible that the substring could occur two or more times, and your current code doesn't take that into account.</p>
<p>So one solution could be:</p>
<pre><code>def counter(substring):
    ss_counter = 0
    for row in read_data:
        ss_counter = ss_counter + 1
        print('Counter = ', ss_counter)
        print('Index = ', row.index(substring))
</code></pre>
<p>I'll let you figure out how to take into account multiple occurrences in a given row.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>for</code> loop is overwriting <code>substring</code> as a variable, so within the for loop, substring is actually referring to a row in the csv file, not the original substring you were hoping to search for. You want to iterate through your read_data for every row, and then iterate through every row looking for a match for every possible starting point in that row, starting at index=0. I also suggest you pass the <code>read_data</code> as a second parameter instead of using the global variable. Note, this function will count overlapping substring as two separate substrings (i.e. if <code>substring = 'aa'</code> and <code>read_data = ['aaaa']</code>, this will say there are three occurrences of substring in the first row).</p>
<pre><code>def counter(substring, readData):
    ss_counter = 0
    # Iterate through the read_data string from index 0 to the nth to the last index, with n = length of the substring
    for row in read_data:      
        for i in range(0, len(row) - len(substring) + 1):
            if row[i:i+len(substring)] == substring:
                ss_counter += 1
                print('Counter = ', ss_counter)
                print('Index = ', i)

counter(substring, read_data)
</code></pre>
<p>Edit: Changed read_data to be a list of rows (list of strings).</p>
</div>
<span class="comment-copy">The error is indicating the <code>index</code> is a method. Try <code>print('Index = ', substring.index())</code></span>
<span class="comment-copy">Also another error in your <code>for substring in read_data:</code>. You are overwriting your <code>substring</code> parameter with another variable with the same name, therefore now you are iterating character by character through read_data.</span>
<span class="comment-copy">You question is unclear. What do you mean by "index"? Also a CSV file is composed of rows of data which may have multiple fields in row, so you need to specify what string you're search for substrings.</span>
<span class="comment-copy">This was very helpful, I'll have to look for your for loop and practice more as that is more complex than what I have been using previously.  Note that I am not allowed to edit the last line of code, which means my function is only allowed to take 1 argument.  I'll keep at it tho, thanks for the help.</span>
