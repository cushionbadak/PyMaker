<div class="post-text" itemprop="text">
<p>Let's say I have a list of tuples </p>
<pre><code>users = [('Ben', 13),
         ('Ana', 13),
         ('Max', 13)]
</code></pre>
<p>Where ('Ben', 13) will be 0 and ('Ana', 13) will be 1 ...</p>
<p>EDIT</p>
<p>I have a table from PySimpleGUI that displays a list of tuples. Selecting a row in the table returns the row index. I want to get the 'User ID' that is tied to the returned row index so I could make use of it in a delete query. </p>
<p>Here's the code:</p>
<pre><code>import sys
import mysql.connector
import PySimpleGUI as sg

def connect():
    mydb = mysql.connector.connect(
        host='localhost',
        user='root',
        passwd='maning',
        database='usersdb'
    )
    return mydb

mydb = connect()
mycursor = mydb.cursor()
mycursor.execute("SELECT * FROM thesisdb.users")
data = mycursor.fetchall() #the list of tuples
headings = ['User ID', 'First Name', 'Last Name', 'Username', 'Password', 'Role']


layout = [[sg.Table(values=data, headings=headings, max_col_width=25,
                        auto_size_columns=True, bind_return_key=True, justification='right', num_rows=20, alternating_row_color='lightgreen', key='users')],
          [sg.Button('Read'), sg.Button('Double')],
          [sg.T('Read = read which rows are selected')],[sg.T('Double = double the amount of data in the table')]]

window = sg.Window('Table', grab_anywhere=False, resizable=True).Layout(layout)

while True:
    event, values = window.Read()
    rowIndex = values['users'] #the index of the selected row
    sg.Popup(index) #displays the index of the selected row
</code></pre>
<p>As far as I know, the table is only capable of returning the index of the selected row. That's why I asked if it's possible to add an index number for each tuple because I want to use <code>rowIndex</code> in getting the 'User ID' with the same index number of the selected row.</p>
<p>The delete query will hopefully be:</p>
<p><code>mycursor.execute("DELETE FROM usersdb.users WHERE user_ID = '%s'" % (userID))</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Comment of @Ev. Kounis was right! Each tuple in a list of tuples already has an index. The only thing left to do in order for the list to be usable as a parameter in getting the desired element of the selected row was to remove the brackets and convert it to int. </p>
<p>Here's the code:</p>
<pre><code>raw = values['users']
x = str(raw).replace('[', '').replace(']', '')
r_index = int(x)
userID = data[r_index][0]
</code></pre>
</div>
<span class="comment-copy">Python's got your back, search for <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a></span>
<span class="comment-copy">the <code>index</code> always exists in lists. You do not have to add anything. This is why <code>users[0]</code> returns <code>('Ben', 13)</code>. The <code>0</code> in the <code>[0]</code> is the index.</span>
<span class="comment-copy">Something like <code>list(zip(users, range(len(users))))</code>?</span>
<span class="comment-copy">@jpp: I believe <code>enumerate()</code> is not necessarily the answer to the OP's question. <code>zip()</code> could be the desired alternative.</span>
<span class="comment-copy">@Maning, Great edit, I've reopened.</span>
