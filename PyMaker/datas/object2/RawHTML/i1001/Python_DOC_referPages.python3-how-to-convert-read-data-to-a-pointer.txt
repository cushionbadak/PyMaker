<div class="post-text" itemprop="text">
<p>I have python 2 code that works:</p>
<pre><code>#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os
from os import path

filename = "test.bin" # file contents in hex: 57 58 59 5A 12 00 00 00 4E 44
ID = 4
myfile = open(filename, 'rb')
filesize = path.getsize(filename)
data = list(myfile.read(filesize))
myfile.close()
temp_ptr = data[ID:ID+2]
pointer = int(''.join(reversed(temp_ptr)).encode('hex'), 16)
print(pointer)
</code></pre>
<p>Prints "18"</p>
<p>However, it does not work in python 3. I get:</p>
<pre><code>Traceback (most recent call last):
  File "py2vs3.py", line 13, in &lt;module&gt;
    ptr = int(''.join(reversed(temp_ptr)).encode('hex'), 16)
TypeError: sequence item 0: expected str instance, int found
</code></pre>
<p>I am simply grabbing one 32-bit field from a file and printing how C would see it. How do I make this work in Py3? All the code examples I find are for python 2, and the docs make no sense to me.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3 distinguishes between binary and text I/O. Files opened in binary mode (including 'b' in the mode argument) return contents as bytes objects without any decoding based on <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#open</a></p>
<p>I imitated the example provided by you inline below, instead of reading from a file.</p>
<pre><code># Python 2
frame = "\x57\x58\x59\x5A\x12\x00\x00\x00\x4E\x44"
int(''.join(reversed(frame[4:6])).encode('hex'), 16)
# Result is 18
</code></pre>
<p>Same thing in Python 3</p>
<pre><code># Python 3
# The preceding b'' signifies that this is a bytearray, the same type
# returned when read from a file in binary mode
frame = b"\x57\x58\x59\x5A\x12\x00\x00\x00\x4E\x44"
int.from_bytes(frame[4:6], "little")
# The 2nd argument "little" represents which is the most significant bit
# i.e left most or right most; more details in the link below
# Result is 18
</code></pre>
<p><a href="https://docs.python.org/3/library/stdtypes.html#int.from_bytes" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#int.from_bytes</a> has more information about the method</p>
</div>
<div class="post-text" itemprop="text">
<p>As Mad Wombat commented, python3 does read the file as a byte array rather than a string. The following snippet essentially synthesizes the process.</p>
<pre><code>    data = [char for char in myfile.read()]+['\n']
</code></pre>
</div>
<span class="comment-copy">It seems like in python3 when you open a file in binary mode, read returns a byte arrat rather than a string. So string functions stop working and you need to convert first.</span>
<span class="comment-copy">Try: <code>sum(item &lt;&lt; 8 * idx for idx, item in enumerate(temp_ptr))</code> Probably it's too complex for this moment. Try playing with <i>bytes</i> objects, e.g.: <code>b = b"0123"</code>, <code>print(b, b[0])</code> and familiarize with it (indexing doesn't produce the same type as for strings).</span>
