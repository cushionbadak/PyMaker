<div class="post-text" itemprop="text">
<p>I have an enum that I define like this: </p>
<pre><code>def make_enum(**enums):
    return type('Enum', (), enums)

an_enum = make_enum(first=1, second=2)
</code></pre>
<p>At some later point I would like to check, if a value that I took as a parameter in a funciton is part of <code>an_enum</code>. Usually i would do it like this </p>
<p><code>assert 1 in to_list(an_enum)</code></p>
<p>How can I convert the enum object <code>an_enum</code> to a list? If that is not possible, how can I check if a value "is part of the enum"?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>How can I convert the enum object an_enum to a list? </p>
</blockquote>
<pre><code>&gt;&gt;&gt; [name for name in dir(an_enum) if not name.startswith('_')]
['first', 'second']
</code></pre>
<blockquote>
<p>How can I check if a value "is part of the enum"?</p>
</blockquote>
<pre><code>&gt;&gt;&gt; getattr(an_enum, 'first')
1
&gt;&gt;&gt; getattr(an_enum, '1')
Traceback [...] 
AttributeError: type object 'Enum' has no attribute '1'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure why you're defining enums like you do, there's supported functional way to do this:</p>
<pre><code>en_enum = Enum('Numbers', {'first': 1, 'second': 2})
</code></pre>
<p>If this suits your needs, you can do</p>
<pre><code>&gt;&gt;&gt; en_enum(1)
&lt;Numbers.first: 1&gt;

&gt;&gt;&gt; en_enum(3)
ValueError: 3 is not a valid Numbers
</code></pre>
<p>not actually membership check, but you don't need any special methods/transformers</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/enum.html#iteration" rel="nofollow noreferrer">docs.python.org/3/library/enum.html#iteration</a></span>
<span class="comment-copy">@meowgoesthedog Already thought about that. I think you can only use that, if you are working with the class of the enum. Since I do not define a class, that does not seem to be possible</span>
<span class="comment-copy">Try <code>type(an_enum)</code> to get the class?</span>
<span class="comment-copy">Beginning in Python 3.4 there is an actual <code>Enum</code> type that supports <code>list(an_enum)</code> plus much more.</span>
<span class="comment-copy">I'm pretty sure that OP is asking for enum value membership check, not name check</span>
<span class="comment-copy">So the above version would give you al the attributes. But this really helped, because you can simply change that to <code>[getattr(an_enum, name) for name in dir(an_enum) if not name.startswith('_')]</code> and you will get what I need <code>[1, 2]</code></span>
<span class="comment-copy">Thank you very much for the suggesion. I think I will stay with <code>[getattr(an_enum, name) for name in dir(an_enum) if not name.startswith('_')]</code>, but this way of writing enums is a lot nicer for sure. Also I did not know that you can simply get the enums elements by doing <code>an_enum(x)</code>. So thanks!</span>
