<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1537202/variables-inside-and-outside-of-a-class-init-function">Variables inside and outside of a class __init__() function</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I have a problem with understanding this code.</p>
<p>I called <code>dd</code> 3 times, but why is it not deleting the previous stack of the function each time?</p>
<p>I am getting this output:</p>
<pre><code>11
12
13
</code></pre>
<p>Could you explain a solution? Also, where else could this problem occur?</p>
<pre><code>class Hello():
    v=10

class K():
    a=Hello()
    def p(self):
        self.a.v=self.a.v+1
        print(self.a.v)
        self.a=None
def dd(): 
    ff=K()
    ff.p()
    del(ff)
dd()
dd()
dd()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you delete ff, you are deleting a new object that inherited properties from K (which inherited properties from Hello()).</p>
<p>When properties are inherited to an object, they change together, but do not get deleted together. You will need to reinitialize the properties to get them to change back.</p>
</div>
<span class="comment-copy">You're changing the <code>a</code> class attribute of <code>K</code> so it affects all instances of the class</span>
<span class="comment-copy"><code>a</code> is a class variable and is shared between all instances of <code>K</code>. See <a href="https://docs.python.org/3/tutorial/classes.html#class-and-instance-variables" rel="nofollow noreferrer">docs.python.org/3/tutorial/â€¦</a></span>
<span class="comment-copy">thanks guy i understand now ..</span>
