<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/53642571/retrieving-python-3-6-handling-of-re-sub-with-zero-length-matches-in-python-3">Retrieving python 3.6 handling of re.sub() with zero length matches in python 3.7</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to regex replace n occurrences of a letter with a single letter. Should be simple enough, as <a href="https://xkcd.com/208/" rel="nofollow noreferrer">I know regular expressions</a>. Python 2.7.15 works as expected:</p>
<pre><code>&gt;&gt;&gt; re.sub('x*', 'y', 'xxxxx')
'y'
&gt;&gt;&gt; re.sub('x*', 'y', 'zxxxxxz')
'yzyzy'
</code></pre>
<p>But Python 3.7.2rc1 gives me:</p>
<pre><code>&gt;&gt;&gt; re.sub('x*', 'y', 'xxxxx')
'yy'
&gt;&gt;&gt; re.sub('x*', 'y', 'zxxxxxz')
'yzyyzy'
</code></pre>
<p>Using <code>'x+'</code> as pattern partially works around the issue, but obviously does not work for 0-length matches.</p>
</div>
<div class="post-text" itemprop="text">
<p>This looks like an intentional change in python 3.7. From <a href="https://docs.python.org/3/library/re.html?highlight=regex#re.sub" rel="nofollow noreferrer">the documentation</a>:</p>
<blockquote>
<p>Empty matches for the pattern are replaced when adjacent to a previous
  non-empty match.</p>
</blockquote>
<p>Using that terminology, I found <a href="https://stackoverflow.com/questions/53642571/retrieving-python-3-6-handling-of-re-sub-with-zero-length-matches-in-python-3">this post</a> detailing how to regain the old functionality.</p>
</div>
<span class="comment-copy">I can't reproduce your result in Python 3. I get <code>'y'</code> and <code>'yzyzy'</code>, respectively.</span>
<span class="comment-copy">@Tomothy32 I do reproduce it in 3.7.2 on Linux, what version of python3 are you using?</span>
<span class="comment-copy">I can't reproduce in Python 3.4.5.</span>
<span class="comment-copy">Found a machine with Python 3.5.3, works like v2.7 as expected</span>
<span class="comment-copy">@eyllanesc Never mind, just realized I was using my 3.6.7 interpreter.</span>
