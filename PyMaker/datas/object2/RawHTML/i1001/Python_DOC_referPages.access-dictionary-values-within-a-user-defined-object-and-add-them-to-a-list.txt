<div class="post-text" itemprop="text">
<p>I was wondering if there is a way to access specific dictionary values within user-defined objects?</p>
<p>E.g.</p>
<pre><code>class Test():
    def __init__(self, a, b, c):
        self.a=a
        self.b=b
        self.c=c

test1=Test("text", 0, {"key1":0, "key2":1})
</code></pre>
<p>When doing </p>
<pre><code>test1.c
</code></pre>
<p>I get:</p>
<blockquote>
<p>{'key1': 0, 'key2': 1}</p>
</blockquote>
<p>But how can I get the dictionary value of, lets say, "key1" (only "key1")?</p>
<p>Also, I am trying to add the content of an object to a list (as specific list elements). Is that somehow possible?</p>
<p>I am trying to do something like: </p>
<pre><code>test1_list=[]
test1_list=[].append(Test("text", 0, {"key1":0, "key2":1}))
</code></pre>
<p>When I do:</p>
<pre><code>print(test1_list)
</code></pre>
<p>I only get:</p>
<blockquote>
<p>None</p>
</blockquote>
<p>instead of:</p>
<blockquote>
<p>["text", 0, {"key1":0, "key2":1}]</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>It will make sense to have a closer look at <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">the python data structures</a>. <strong>Your should be able to solve your issues yourself after reading through this documentation.</strong> </p>
<p>At least it will help you to better understand the solutions below.</p>
<hr/>
<p>In short, here is how you get the value for a key:</p>
<pre><code>test1.c['key1']
Out[5]: 0
</code></pre>
<p>And how to append to a list:</p>
<pre><code>test1_list = []
test1_list.append(Test("text", 0, {"key1":0, "key2":1}))
</code></pre>
<p>or in one go:</p>
<pre><code>test1_list = [Test("text", 0, {"key1":0, "key2":1})]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>But how can I get the dictionary value of, lets say, "key1" (only "key1")?</p>
</blockquote>
<p>Here is a horrible (but, working and dynamic) answer using exec:</p>
<pre><code>In [1]: class Test(object):
            def __init__(self, a, b, c):
            self.a = a
            self.b = b
            self.c = c
            try:
                self.__set_key_values()
            except ValueError:
                pass

            def __set_key_values(self):
                n = 1
                for k in self.c.keys():
                    exec(f'self.key{n} = {self.c[k]}')
                    n += 1
</code></pre>
<p>Instance your class with arguments:</p>
<pre><code>In [2]: test1 = Test("text", 0, {"key1":0, "key2":1})
</code></pre>
<p>Try returning key values via direct access:</p>
<pre><code>In [3]: test1.key1
Out [3]: 0

In [4]: test1.key2
Out [4]: 1
</code></pre>
</div>
<span class="comment-copy"><code>test1.c['key1']</code>. You should review introductionary material like the Python tutorial.</span>
<span class="comment-copy">So in your second question do you want to add the <code>test1</code> object or the content of the fields of <code>test1</code>?</span>
<span class="comment-copy">I want to add the content of the fields of "test1" to the list.</span>
<span class="comment-copy">oh... thank you so much... I will definitely go trough the website you suggested.</span>
<span class="comment-copy">My pleasure! And I wish you all the best on your coding adventures!</span>
<span class="comment-copy">just one more thing.... when I do "&gt;&gt;&gt; test1_list" I get: [&lt;__main__.Test object at 0x000001EF6CFDA630&gt;], but not the content in form of list elements</span>
<span class="comment-copy">@KideW This is normal, as python does not know a priory how to 'show' you the object you have put in the list. You can define the <code>__repr__</code> method for your class to tell python how to display your object. See <a href="https://docs.python.org/3/reference/datamodel.html#object.__repr__" rel="nofollow noreferrer">docs.python.org/3/reference/datamodel.html#object.__repr__</a></span>
