<div class="post-text" itemprop="text">
<p>I'm trying to match ip address using ip address that i input myself and ip address that grep using os on python, but when i run my code, the code say not match</p>
<pre><code>app = Tk()
app.title('IP Address')
app.geometry('250x150+200+200')
b = StringVar()

ip = os.popen("ip -4 addr show wlan0 | grep -oP '(?&lt;=inet\s)\d+(\.\d+){3}'").read()
#this will insert wlan0 ip address to variable ip
print(ip)

def com():
        c = b.get()
        if c == ip:
                labl3 = Label(text='Match').pack()
                app.destroy()
        else:
                labl3 = Label(text='Not Match').pack()

labl1 = Label(text='Input Ip address',font=30).pack()

text = Entry(textvariable=b).pack()

button1 = Button(text='Press to print', command= com).pack()

app.mainloop()
</code></pre>
<p>how i fix this?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're using python3, there is an <a href="https://docs.python.org/3/library/ipaddress.html" rel="nofollow noreferrer">ipaddress</a> module. One would use it as follows:</p>
<pre><code>if ipaddress.ip_address(str(lab1)): # valid ip
    pass # or whatever
else:
    raise Exception('Invalid ip address')
</code></pre>
<p>If you're using python2, there's a <a href="https://pypi.org/project/backport_ipaddress/" rel="nofollow noreferrer">backport</a>. Hope this helps.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>c == ip</code> will only evaluate true if the two strings are exactly equal, character for character.</p>
<p>It is likely that this is not evaluating to true because the <code>ip</code> has some trailing white-space characters (in fact, I just ran the command, and it does indeed include a trailing new-line character).</p>
<p>You should therefore compare them like this instead: <code>c.strip() == ip.strip()</code></p>
<p>the <code>.strip()</code> method removes all trailing and leading whitespace in a given string. The above command is therefore comparing the trailing/leading whitespace removed versions of the strings.</p>
<hr/>
<p>Tip: if you want to debug something like this in future, check <code>len(c)</code> and <code>len(ip)</code> and see if they are the same length.</p>
</div>
<div class="post-text" itemprop="text">
<p>A couple of questions to get started. </p>
<p>I'm assuming you are running this on a *nix machine because of the use of  the <code>ip</code> command, unless you have installed <code>iproute2mac</code> for mac or on linux for windows. Could you tell us what platform you are running on? Also, can you tell me the output of the command <code>ip -4 addr show</code> (please omit any details you don't want to share online). Besides platform related things, it could be an issue with string trimming or character escaping. If you could provide a print debug of the inputs that would be super helpful as well. </p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do that by modifying your regex <br/></p>
<pre><code>pat = re.compile("^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$")
</code></pre>
<p>its because <code>.</code> is a wildcard that stands for "every character" .</p>
</div>
<span class="comment-copy">when i change c = b.get to c.strip() = b.get().strip() ,the code become error SyntaxError: can't assign to function call</span>
<span class="comment-copy">To clarify, what you should do is replace the if condition in your code: <code>if c == ip</code> to <code>if c.strip() == ip.strip()</code></span>
<span class="comment-copy">when i change ip at def com() to string like '192.168.0.1' and i ran it, i type same ip address it say match and destroy the window</span>
<span class="comment-copy">it worked thank you so much</span>
<span class="comment-copy">im using raspberry pi and found that command on (<a href="https://stackoverflow.com/questions/8529181/which-terminal-command-to-get-just-ip-address-and-nothing-else" title="which terminal command to get just ip address and nothing else">stackoverflow.com/questions/8529181/â€¦</a>)</span>
<span class="comment-copy">Don't use regexps unnecessarily</span>
