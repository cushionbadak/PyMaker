<div class="post-text" itemprop="text">
<p>I have a simple python script, that creates a socket <code>AF_PACKET</code>, which parses all IPv4 packets and retrieves the source and destination IP addresses:</p>
<pre><code>import socket
import struct

def get_ip(s):
    return '.'.join([str(ord(symbol)) for symbol in s])

def main():
    conn = socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.ntohs(3))

    while True:
    pkt, addr = conn.recvfrom(65536)

    proto = struct.unpack('! H', pkt[12:14])
    eth_proto = socket.htons(proto[0])

    print('eth_proto = ', eth_proto)
    if eth_proto == 8:
        src, target = struct.unpack('! 4s 4s', pkt[26:34])
        source_ip = get_ip(src)
        destination_ip = get_ip(target)

        print('Source IP = ', source_ip)
        print('Destination IP = ', destination_ip)

main()
</code></pre>
<p>Is it possible to refactor getting the IP address, so it will look better and doesn't use this loop:</p>
<pre><code>'.'.join([str(ord(symbol)) for symbol in s])
</code></pre>
<p>Format characters is described here:
<a href="https://docs.python.org/2/library/struct.html" rel="nofollow noreferrer">https://docs.python.org/2/library/struct.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you are using Python 2 (as you have linked to the Python 2 docs), you can use a bytearray and a format string to remove the explicit loop.</p>
<pre><code>&gt;&gt;&gt; s = '\n\x0b\xfa\x01'
&gt;&gt;&gt; '{}.{}.{}.{}'.format(*bytearray(s))
'10.11.250.1'
</code></pre>
<p>If you are using Python 3.3+, you can use the standard library's <a href="https://docs.python.org/3/library/ipaddress.html" rel="nofollow noreferrer">ipaddress</a> module.</p>
<pre><code>&gt;&gt; ipa2 = ipaddress.ip_address(b'\n\x0b\xfa\x01')
&gt;&gt;&gt; ipa2
IPv4Address('10.11.250.1')
&gt;&gt;&gt; str(ipa2)
'10.11.250.1'
</code></pre>
</div>
<span class="comment-copy">Please show example input for the <code>get_ip</code> function and the desired output for that.</span>
<span class="comment-copy">@ruohola output for the function get_ip is the string with ip address  (e.g. 172.15.75.12) input is array of bytes. maybe I can read in different ways this bytes ?</span>
