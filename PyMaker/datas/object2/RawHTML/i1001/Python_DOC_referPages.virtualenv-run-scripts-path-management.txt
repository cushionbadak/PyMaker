<div class="post-text" itemprop="text">
<p>Put simply:<br/>
  How do i guarantee my virtualenv is used and not the native env?</p>
<p>Problem with other answers:
  I've seen this question answered a lot, but the answers are terse and basically just cover the "plug 'n play" scenario of virtual env.</p>
<p>My Scenerio:
  Lets assume a virtual python environment (myEnv) in a folder somewhere that is sufficiently complex, and a machine running it that is sufficiently complex (targetEnv).  Lets assume there is a lot of customization in the virtualenv (myEnv) and that the evn variable in that virtualenv are modified in ways we cannot know (example: through .pth files).</p>
<p>Usually the answer I see is that we should do something like this in the windows cmd prompt:</p>
<pre><code>cd /d C:\Program Files\MyApp\myEnv\Scripts\ &amp;&amp; activate
cd /d C:\Program Files\MyApp\ &amp;&amp; python Main.py
</code></pre>
<p>Now if you look into activate.batch or Activate.ps1, you'll see all they do is assume you've set up a <code>PYTHONHOME</code> variable for your native python environment and then set up new env variables <code>_OLD_VIRTUAL_PATH</code>, <code>_OLD_VIRTUAL_PYTHONHOME</code>, <code>VIRTUAL_ENV</code>, and temporarily remove the <code>PYTHONHOME</code> variable.</p>
<p>However this still doesn't tell the shell how to find something like <code>python.exe</code>.  When I run this like the code suggested above I get a python environment that doesn't contain any of the sys paths in the shell that would activated if explicitly called:
   cd /d C:\Program Files\MyApp\myEnv\Scripts\ &amp;&amp; python.exe</p>
<p>Then in the resulting shell I call:
   import sys
   sys.path</p>
<p>This sort of makes since because all <code>activate</code> did was change the name of environment variables so it's still completely logical that just calling:
    cd /d C:\Program Files\MyApp\ &amp;&amp; python Main.py</p>
<p>finds the <code>python.exe</code> in the <code>_OLD_VIRTUAL_PYTHONHOME</code> (which is the same as the <code>PYTHONHOME</code> variable was) instead of the <code>VIRTUAL_ENV</code> (which is equal to <code>C:\Program Files\MyApp\myEnv\</code>) path.  I suppose this means that modules in the 'VIRTUAL_ENV' path with be discovered but, paths added to the virtual environment will never be searched, because the executable for the myEnv shell isn't called.</p>
<p>Anyone know how to trouble shoot this?</p>
<p><strong>EDIT 1</strong></p>
<p>As noted in the comments I need to clarify.  The .pth file mentioned in the question only contains relative paths and not absolute paths.  As in any real shipping or deployment situation lets assume we don't know where this virtual env is installed and thus have to rely on using paths relative to env variables. </p>
</div>
<div class="post-text" itemprop="text">
<p>Did you tried using below command in CMD ??</p>
<pre><code>python -m venv "C:\Program Files\MyApp\myEnv\Scripts\"
</code></pre>
<p>you can refer more on venv <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">here</a></p>
</div>
<span class="comment-copy">Can't you just use the path to python executable explicitly? <code>cd C:\Program Files\MyApp\ &amp;&amp; C:\Program Files\MyApp\myEnv\python.exe Main.py</code>. At least this is what I'd do on Linux/MacOS when using a venv in a shell script.</span>
<span class="comment-copy">I've actualy just tested that, still doesn't pick up the .pth files in the virtualenv</span>
<span class="comment-copy">Can't reproduce; testing it in a virtualenv on a Windows 10 VM, the pth files from site packages are applied correctly when using absolute path to the venv's python executable. Can you edit your question, adding a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> for the problem?</span>
<span class="comment-copy">Ah, the .pth contain relative paths from where the virtualenv is installed.  It would be impossible to know the absolute path and put it in the .pth in this scenario.  And also self defeating I would think, why would anyone need to use env variables if they knew the absolute path?</span>
<span class="comment-copy">Where exactly do you put the pth file? Is it the venv root dir (e.g. <code>C:\Program Files\MyApp\myEnv</code>)?</span>
<span class="comment-copy">What do you expect the outcome to be after I run that?</span>
