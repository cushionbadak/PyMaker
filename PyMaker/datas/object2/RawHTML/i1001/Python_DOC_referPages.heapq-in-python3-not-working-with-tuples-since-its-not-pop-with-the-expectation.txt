<div class="post-text" itemprop="text">
<p>Everyone says if you push tuple into <code>heapq</code>, it will take the first argument as the comparison factor.</p>
<p>But it's not! I'm curious what's wrong in my code?</p>
<pre><code>for task_name, counter in tasks_counter.items():
    heappush(tasks_q, (-int(counter), task_name, counter))
heapify(tasks_q)
while tasks_q:
    print(tasks_q.pop())
</code></pre>
<h1>output</h1>
<pre><code>(-1, 'G', 1)
(-1, 'F', 1)
(-1, 'E', 1)
(-1, 'D', 1)
(-1, 'C', 1)
(-1, 'B', 1)
(-6, 'A', 6)
</code></pre>
<p>I think I should get the item with value <code>A</code> first, right?
But it's not.</p>
<p>Any alternative solution to use built-in priority queue with Python?</p>
<h1>Another example's output.</h1>
<p><a href="https://i.stack.imgur.com/U7rmx.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/U7rmx.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You are using the <code>pop</code> function of <code>list</code>.  You need to use <a href="https://docs.python.org/3/library/heapq.html#heapq.heappop" rel="nofollow noreferrer"><code>heapq.heappop</code></a> function instead.  It will adjust the list to maintain the heap invariant along the way.  See the <a href="https://docs.python.org/3/library/heapq.html#basic-examples" rel="nofollow noreferrer">Basic Examples</a>.</p>
<p>It's also not necessary to call <code>heapify</code> if you start with <code>[]</code> and call <code>heappush</code> repeatedly.  <code>heappush</code> already ensures that the heap invariant is maintained.</p>
</div>
