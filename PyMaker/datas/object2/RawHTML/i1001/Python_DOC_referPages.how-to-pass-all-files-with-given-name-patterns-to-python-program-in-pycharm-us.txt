<div class="post-text" itemprop="text">
<p>I have a bunch of .html files in a directory that I am reading into a python program using PyCharm. I am using the (*) star operator in the following way in the parameters field of the run/debug configuration dialog box in PyCharm:
<code>*.html</code>
, but this doesn't work. I get the following error:</p>
<p><code>IOError: [Errno 2] No such file or directory: '*.html'</code></p>
<p>at the line where I open the file to read into my program. I think its reading the "*.html" literally as a file name. I'd appreciate your help in teaching me how to use the star operator in this case.</p>
<p>Addendum:
I'm pretty new to Python and Pycharm. I'm running my script using the following configuration options:</p>
<p><a href="https://i.stack.imgur.com/iRs0q.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/iRs0q.png"/></a></p>
<p>Now, I've tried different variations of parameters here, like <code>'*.html'</code>, <code>"*.html"</code>, and just <code>*.html</code>. I also tried <code>glob.glob('*.html')</code>, but the code takes it literally and thinks that the file name itself is "glob.glob('*.html')" and throws an error. I think this is more of a Pycharm thing than understanding bash or python. I guess what I want is to make Pycharm pass all the files of the directory through that parameters field in the picture. Is there some way for me to specify to Pycharm NOT to consider the string of parameters literally?</p>
<p>The way the files are being handled is by running a <code>for</code> loop through the <code>sys.argv</code> list and calling a function on each file. The function simply uses the <code>open()</code> method to read the contents of the file into a string so I can pull patterns out of the text. Hope that fleshes out the problem a bit better.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://www.gnu.org/software/bash/manual/html_node/Filename-Expansion.html" rel="nofollow noreferrer">Filename expansion</a> is a feature of bash. So if you call your python script from the linux command line, it will work, just like if you would have typed out all of the filenames as arguments to your script. Pycharm doesn't have this feature, so you will have to do that by yourself in your python script using a <a href="https://docs.python.org/2/library/glob.html" rel="nofollow noreferrer">glob</a>.</p>
<pre><code>import glob
import sys
files = glob.glob(sys.argv[-1])
</code></pre>
<p>To keep compatibility between bash and pycharm, you can use something like this:</p>
<pre><code>import glob
globs = ['*.html', '*.css', 'script.js']
files = []
for g in globs:
    files.extend(glob.glob(g))
</code></pre>
</div>
<span class="comment-copy">It would be nice to see the piece of code that's attempting to open the files, but you could give <a href="https://docs.python.org/3/library/glob.html#glob.iglob" rel="nofollow noreferrer">docs.python.org/3/library/glob.html#glob.iglob</a> a try.</span>
