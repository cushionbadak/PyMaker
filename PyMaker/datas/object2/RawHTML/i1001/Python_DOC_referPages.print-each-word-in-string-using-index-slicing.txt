<div class="post-text" itemprop="text">
<p>I want to print each word in <code>word = "They stumble who run fast"</code> on a new line using index slicing.</p>
<p>I've tried using a <code>while</code> loop, like printing words after each space</p>
<pre><code>word = "They stumble who run fast"
space = word.count(' ')
start = 0
while space != -1:
   print(word[start:space])
</code></pre>
<p>The result should be like this:</p>
<pre><code>They
stumble
who
run
fast
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you absolutely need to use index slicing:</p>
<pre><code>word = "They stumble who run fast"

indexes = [i for i, char in enumerate(word) if char == ' ']

for i1, i2 in zip([None] + indexes, indexes + [None]):
    print(word[i1:i2].strip())
</code></pre>
<p>Output:</p>
<pre><code>They
stumble
who
run
fast
</code></pre>
<p>But why not use <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>.split()</code></a>?</p>
<pre><code>word = "They stumble who run fast"
print(*word.split(), sep='\n')
</code></pre>
<p>Output:</p>
<pre><code>They
stumble
who
run
fast
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think I know what this problem is for (edx class..as I ran into the same thing). This solution worked for me using the pieces they're encouraging the students to use at this point in the course:</p>
<pre><code>quote = "they stumble who run fast"
start = 0
space_index = quote.find(" ")
while space_index != -1:
    print (quote[start:space_index])
    start = space_index+1
    space_index = quote.find(" ", space_index+1)
else:
    print (quote[start::1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The obvious solution would be to use <code>str.split</code>, but that would violate your desire for slicing:</p>
<pre><code>for w in word.split():
    print(w)
</code></pre>
<p>A better way might be to keep track of an index for the current space and keep looking for the next one. This is probably similar to what you had in mind, but your loop doesn't update and variables:</p>
<pre><code>start = 0
try:
    while True:
        end = word.index(' ', start)
        print(word[start:end])
        start = end + 1
except ValueError:
    print(word[start:])
</code></pre>
<p>A shortcut that probably won't be acceptable either, but produces the desired output:</p>
<pre><code>print(word.replace(' ', '\n'))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Not sure why anyone would want to do this rather than just use <code>str.split()</code>, but here is another (fairly ugly) way along the lines of your initial stab at it.</p>
<pre><code>word = "They stumble who run fast"
while ' ' in word:
    i = word.index(' ')
    print(word[:i])
    word = word[i+1:]
print(word)

# OUTPUT
# They
# stumble
# who
# run
# fast
</code></pre>
</div>
<span class="comment-copy">Any particular reason you want to slice the string rather than something simple like <code>str.split()</code>? Or is this just a puzzle?</span>
