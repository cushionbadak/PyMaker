<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/12943819/how-to-prettyprint-a-json-file">How to prettyprint a JSON file?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I have some code that creates a dictionary and pastes it into a text file. But it pastes the dictionary as one line. Below I have the code and the textfile it creates. </p>
<pre><code>print('Writing to Optimal_System.txt in %s\n' %(os.getcwd()))    
f = open('Optimal_System.txt','w')
f.write(str(optimal_system))
f.close  
</code></pre>
<p>Is there any way to make the textfile give each key-value pair it's own line like this?</p>
<pre><code>{'Optimal Temperature (K)': 425
 'Optimal Pressure (kPa)': 100
 ...
}
</code></pre>
<p><a href="https://i.stack.imgur.com/q5Qyu.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/q5Qyu.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Using formatting string and assuming that <code>optimal_system</code> is your dictionary:</p>
<pre><code>with open('output.txt', 'w') as f:
    for k in optimal_system.keys():
        f.write("{}: {}\n".format(k, optimal_system[k]))
</code></pre>
<p><strong>EDIT</strong></p>
<p>As pointed by @wwii, the code above can be also written as:</p>
<pre><code>with open('output.txt', 'w') as f:
    for k, v in optimal_system.items():
        f.write("{}: {}\n".format(k, v))
</code></pre>
<p>And the string can be formatted using <a href="https://docs.python.org/3.7/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">formatted string literals</a>, available since python 3.6, hence <code>f'{k}: {v}\n'</code> instead of <code>"{}: {}\n".format(k, v)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/pprint.html" rel="nofollow noreferrer"><code>pprint</code> module</a> -- it also works for all other data structures.
To force every entry on a new line, set the <code>width</code> argument to something low. The <code>stream</code> argument lets you directly write to the file.</p>
<pre><code>import pprint
mydata = {'Optimal Temperature (K)': 425,
          'Optimal Pressure (kPa)': 100,
          'other stuff': [1, 2, ...]}
with open('output.txt', 'w') as f:
    pprint.pprint(mydata, stream=f, width=1)
</code></pre>
<p>will produce:</p>
<pre><code>{'Optimal Pressure (kPa)': 100,
 'Optimal Temperature (K)': 425,
 'other stuff': [1,
                 2,
                 Ellipsis]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use json.dumps() to do this with the indent parameter. For example:</p>
<pre><code>import json

dictionary_variable = {'employee_01': {'fname': 'John', 'lname': 'Doe'},
                       'employee_02': {'fname': 'Jane', 'lname': 'Doe'}}

with open('output.txt', 'w') as f:
    f.write(json.dumps(dictionary_variable, indent=4))
</code></pre>
</div>
<span class="comment-copy">As the duplicate target suggests, use the <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json</a> module to do this.</span>
<span class="comment-copy">Iterate over the key,value pairs of <code>yourdictionary.items()</code>; use <a href="https://docs.python.org/3.7/library/string.html#format-string-syntax" rel="nofollow noreferrer">string formatting</a> to construct a line (with a newline character) from each key/value; write the line to the file.</span>
<span class="comment-copy"><code>for k,v in optimal_system.items(): ... .format(k,v)...</code>.  And for Python 3.6 the line can be made with an <a href="https://docs.python.org/3.7/reference/lexical_analysis.html#f-strings" rel="nofollow noreferrer">f-string</a> - <code>f'{k}: {v}\n</code>.</span>
<span class="comment-copy">@wwii I will add this in the answer, thanks!</span>
<span class="comment-copy">Thank you, this works great. Just curious though, should I type in "f.close()" outside the for loop just to make sure its closed?</span>
<span class="comment-copy">@bbalzano with the construct <code>with open('filename', 'w') as f:</code> calling <code>f.close()</code> is not needed. Have a look <a href="https://stackoverflow.com/questions/49512990/does-python-gc-close-files-too">here</a> for more details.</span>
