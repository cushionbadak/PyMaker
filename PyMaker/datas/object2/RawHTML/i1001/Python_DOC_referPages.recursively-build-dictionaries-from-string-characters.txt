<div class="post-text" itemprop="text">
<p>I am working on a compression algorithm for a specific data structure and part of it requires changing a string into a dictionary as follows:</p>
<pre><code>    "abc" =&gt; {'a':{'b':{'c':{}}}
</code></pre>
<p>Which is a group of nested dictionaries based on the letters of the word.</p>
<p>How can I do this in a recursive manner in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use recursion with list slicing:</p>
<pre><code>def to_dict(d):
  return {} if not d else {d[0]:to_dict(d[1:])}

print(to_dict('abc'))
</code></pre>
<p>Output:</p>
<pre><code>{'a': {'b': {'c': {}}}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a solution using <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer">reduce</a>:</p>
<pre><code>from functools import reduce

seq = 'abc'
result = reduce(lambda value, key: { key : value }, reversed(seq), {})

print(result)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>{'a': {'b': {'c': {}}}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is one way:</p>
<pre><code>s = 'abc'
d = {}
current = d
for c in s:
    current = current.setdefault(c, {})
print(d)
# {'a': {'b': {'c': {}}}}
</code></pre>
</div>
<span class="comment-copy">You probably mean <code>{'a':{'b':{'c':{}}}</code>? <code>{a:{b:{c:{}}}</code> will raise <code>NameError</code></span>
<span class="comment-copy">Thanks for pointing the mistake, I have corrected it.</span>
<span class="comment-copy">You stated "recursive" in the question- does that mean you require the solution to use recursion?</span>
<span class="comment-copy">Preferably, yes.</span>
