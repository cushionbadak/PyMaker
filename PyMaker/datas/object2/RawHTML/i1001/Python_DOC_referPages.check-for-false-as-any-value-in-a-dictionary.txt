<div class="post-text" itemprop="text">
<p>I have the following dict:</p>
<pre><code>default_wallart = {
    "parkinglot":False,
    "ferrari":False,
    "roadtrip":False,
    "sincity":False,
    "peekaboo":False
}
</code></pre>
<p>I update this to <code>True</code> when something happens and triggers it. What I would like to be able to do, though, is check if <em>any</em> of the values in the dict returns False (and if they do return False for any of the values do one thing, and if not, do something else).</p>
<p>So... how would I go about this? Would be nice if I could do this in a one-line check, but if not, I can work around that.</p>
<p><strong>Note:</strong> this is for Python 2.7x</p>
</div>
<div class="post-text" itemprop="text">
<p>What about doing</p>
<pre><code>if all(default_wallart.values()):
    # All True
else:
    # At least one False.
</code></pre>
<p><hr/>
It is worth mentioning that </p>
<pre><code>&gt;&gt;&gt; all({}.values()) # &lt;=&gt; all([])
True
</code></pre>
<p>So, pay attention to this possibility. Depending on what you want to do, you may want to check for <code>all(default_wallart.values()) and len(default_wallart)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can not simply use the <code>all</code> builtin on the dictionary's values for this, because it will return <code>False</code> if it spots any <em>falsy</em> value such as <code>0</code>, <code>[]</code>, <code>{}</code>, ...</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; default_wallart = { 
...:     "parkinglot":1, 
...:     "ferrari":1, 
...:     "roadtrip":1, 
...:     "sincity":0, 
...:     "peekaboo":1 
...: }                                                                                                                            
&gt;&gt;&gt;                                                                                                                               
&gt;&gt;&gt; all(default_wallart.values())                                                                                                 
False
</code></pre>
<p>We need one more step, checking explicitly against <code>False</code>.</p>
<p>There is no <code>False</code>:    </p>
<pre><code>&gt;&gt;&gt; all(x is not False for x in default_wallart.values())                                                                         
True
</code></pre>
<p>There is at least one <code>False</code>:</p>
<pre><code>&gt;&gt;&gt; any(x is False for x in default_wallart.values())                                                                             
False
</code></pre>
<p>(Checking against <code>True</code> or <code>False</code> with <code>is</code> is fine because these two are singletons.)</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/2/library/functions.html#all" rel="nofollow noreferrer">all</a>:</p>
<pre><code>def do_something():
    return "do something"

def do_else():
    return "do else"


default_wallart = {
    "parkinglot":False,
    "ferrari":False,
    "roadtrip":False,
    "sincity":False,
    "peekaboo":False
}


result = do_something() if not all(default_wallart.itervalues()) else do_else()

print result
</code></pre>
<p><strong>Output</strong></p>
<pre><code>do something
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you are sure that all values are either <code>True</code> or <code>False</code> then you could use <code>in</code> operator</p>
<pre><code>default_wallart = {
    "parkinglot":False,
    "ferrari":False,
    "roadtrip":False,
    "sincity":False,
    "peekaboo":False
}
has_False = False in default_wallart.values()
print(has_False) #prints True if there is at least one False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can loop through all values on the dictionary to find if any of them are False</p>
<pre><code>a = False
for key, value in default_wallart.items():
    if value: # If value is true, just continue to the next item
        continue
    else: # If its not True (aka False), define a as True and break the loop
        a = True
        break

if a:
    pass # When atleast one value is False
else: 
    pass # When all values are True
</code></pre>
</div>
<span class="comment-copy">"check if <i>any</i> of the values" - did you try using <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any</code></a> (or <code>all</code>, as this is a negative check)? What <i>have</i> you tried?</span>
<span class="comment-copy">I admit, I did not, because I didn't think of it at all. Problem with using simple words like "all" or "any", means that it's hard to search for - I did try searching for answers to my question, but only found vaguely similar, and way too complicated answers.</span>
<span class="comment-copy">Thanks, this worked perfectly. I have a set dict, which will never be empty, and I only change from False to True, so no need for more rigourous checks. This is a non-mutable (in any way) dict, in a program, so if anyone mess this up, it's because they go poking in the source-code: ie, not my problem.</span>
