<div class="post-text" itemprop="text">
<p>I have a generator which gives me "chunks" of a pandas dataframe. I save the chunks into a csv file. </p>
<p>For the first "chunk" I want to disable "mode='a'" as I want to overwrite the file if one exists already, the following chunks should be added to the newly created file. </p>
<p>For now I have solved it with a variable outside the loop: "first".</p>
<pre><code>first = True
for chunk in generator:
    if first:
        chunk.to_csv(filename, sep=';')
        first = False
    else:
        chunk.to_csv(filename, sep=';', mode='a', header=False)
</code></pre>
<p>Is there a more elegant way to treat the first element of a generator differently than the rest?</p>
<hr/>
<p>I have found the following code to treat the first object in a list differently, however, it does not work for the generator-object.</p>
<pre><code>seq= something.get()
foob( seq[0] )
for member in seq[1:]:
    foo( member )
</code></pre>
<p>Trying to implement the code of the list for the generator gives me a TypeError ('generator' object is not subscriptable):</p>
<pre><code>generator[0].to_csv(filename, sep=';')
for chunk in generator[1:]:
    chunk.to_csv(filename, sep=';', mode='a', header=False)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'd use <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next</code></a>. This way you don't have the overhead of the repetitive <code>if</code> check (as neglectable as it may be) every iteration:</p>
<pre><code>first = next(generator)
first.to_csv(filename, sep=';')
for chunk in generator:  # will start from the second element
    chunk.to_csv(filename, sep=';', mode='a', header=False)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about this:</p>
<pre><code>for i, chunk in enumerate(generator):
    chunk.to_csv(filename, sep=';', mode=('w' if i == 0 else 'a'), header=(i == 0))
</code></pre>
<p>Alternatively with a helper variable:</p>
<pre><code>for i, chunk in enumerate(generator):
    first = i == 0
    chunk.to_csv(filename, sep=';', mode=('w' if first else 'a'), header=first)
</code></pre>
</div>
<span class="comment-copy">While I love "one-line solutions", I think I will go with "next" as suggested by DeepSpace. The files are quite big and I have a lot of chunks, which would mean a lot of if-checks.</span>
<span class="comment-copy">The if-checks are a red herring. They will contribute precisely <i>zero</i> to overall running time, no matter how many chunks you have.</span>
<span class="comment-copy">Disk IO is the slowest thing in this scenario, inbetween writing chunks to disk your program will have billions of CPU cycles free to do any amount of if checks.</span>
<span class="comment-copy">Alright, I learned something new today ;) Thanks!</span>
