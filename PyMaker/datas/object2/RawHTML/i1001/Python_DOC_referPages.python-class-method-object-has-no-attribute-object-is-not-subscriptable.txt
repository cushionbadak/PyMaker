<div class="post-text" itemprop="text">
<pre><code>class elem:
    def __init__(self, coords):
        if not coords.shape == (2, 3):
            raise TypeError("")
    def Jac(self, f):
        x1, x2, x3 = self[0,:]
        y1, y2, y3 = self[1,:]
        A = array([[x2 - x1, x3 - x1],
                   [y2 - y1, y3 - y1]])
        J = det(A)
    def f_(xi, eta):
        x = x1 + (x2 - x1)*xi + (x3 - x1)*eta
        y = y1 + (y2 - y1)*xi + (y3 - y1)*eta
        return f(x, y)
    return (1/6)(f_(0, 0) + f_(0, 1) + f_(1, 0))

def f(x, y):
    return x**2/10 - y**2/10 + 1

el = array([[3, 11, 0],
            [0, 4, 6]])
EL = elem(el)
print(EL.Jac(f))
</code></pre>
<p>When I ran this code, there was a TypeError: 'elem' object is not subscriptable.
If I substitute</p>
<pre><code>x1, x2, x3 = self[0,:]
</code></pre>
<p>with</p>
<pre><code>x1, x2, x3 = self.coords[0,:]
</code></pre>
<p>it would raise AttributeError: 'elem' object has no attribute 'coords'.</p>
<p>Can anyone please help me with this?</p>
</div>
<div class="post-text" itemprop="text">
<h1><code>__getitem__</code></h1>
<p>In order for an object to be substricptable, you need to implement <strong>getitem</strong> (<a href="https://docs.python.org/3/reference/datamodel.html#object.__getitem__" rel="nofollow noreferrer">https://docs.python.org/3/reference/datamodel.html#object.<strong>getitem</strong></a>) in the class.</p>
<p>However you need to assign the value to the object, for example</p>
<pre><code>class Some:

    def __init__(self, v):
        self.v = v

    def __getitem__(self, i):
        return self.v[i]


some = Some([1,2,3])
print(some[:2])
</code></pre>
<p>results in</p>
<pre><code>[1, 2]
</code></pre>
<p>This should work with numpy as well, which I assume you use.</p>
<h2><code>collections.UserList</code></h2>
<p>Basically, what you want, is to extend the lists functionality. You can use the UserList class from the build in collections module: <a href="https://docs.python.org/3/library/collections.html#collections.UserList" rel="nofollow noreferrer">https://docs.python.org/3/library/collections.html#collections.UserList</a></p>
<p>However, this does not work with numpy arrays, as far as I know.</p>
<h2><code>numpy.ndarray</code></h2>
<p>In numpy you can inherit from the ndarray class, for example:</p>
<pre><code>from numpy import ndarray


class A(ndarray):    
    def custom_function(self, x):
        return self + x

a = A([1,2,3])
print(a.custom_function(666))
</code></pre>
<p>results in </p>
<pre><code>A([[[666., 666., 666.],
    [666., 666., 666.]]])
</code></pre>
<p>Links:</p>
<p><a href="https://docs.scipy.org/doc/numpy/user/basics.subclassing.html#basics-subclassing" rel="nofollow noreferrer">https://docs.scipy.org/doc/numpy/user/basics.subclassing.html#basics-subclassing</a>
<a href="https://docs.scipy.org/doc/numpy/reference/arrays.classes.html" rel="nofollow noreferrer">https://docs.scipy.org/doc/numpy/reference/arrays.classes.html</a>
<a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html#numpy.ndarray" rel="nofollow noreferrer">https://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.html#numpy.ndarray</a></p>
<p><em>Both examples are subscriptable.</em></p>
<p>I hope this helps.</p>
<h3>Some more</h3>
<p>Your code won't work, because you have a return statement in the class body, instead of a function.</p>
<p>Please, do not forget to state import statements in questions. array is not part of the python standard library. I just guess it is numpy, because of the shape property.</p>
</div>
<span class="comment-copy">Yes, those error messages are telling you exactly what the problem is. Your <code>elem</code> class does not support indexing, i.e. <code>some_object[&lt;whatever&gt;]</code> is indexing, and you don't have a <code>coords</code> attribute either. You likely meant to do <code>self.coords = cords</code> in <code>__init__</code></span>
<span class="comment-copy">Solved perfectly. Thank you!</span>
