<div class="post-text" itemprop="text">
<p>I have 2 lists of the same size, one is a list of vectors and the second is their respective tags:</p>
<pre><code>l = [v1, v2,...]
tags = [True,False,...]
</code></pre>
<p>I want to make 2 lists, all the (vi,tag)'s which their tag are true, and it's compliment.
I'm trying to use the zip function for this like so:</p>
<pre><code>true_grp = [x for x in zip(l,tags) if x[1] is True]
false_grp = [x for x in zip(l,tags) if x[1] is False]
</code></pre>
<p>Both lists turn up empty. I don't see the problem here, the 'x' should represent the tuple (vi,tag)</p>
</div>
<div class="post-text" itemprop="text">
<p>No need to use <a href="https://docs.python.org/3/reference/expressions.html#is-not" rel="nofollow noreferrer">is</a>, you can check for boolean values directly. The <code>is</code> operator is for checking object identity, quoting the linked documentation:</p>
<blockquote>
<p>The operators is and is not test for object identity: x is y is true
  if and only if x and y are the same object. Object identity is
  determined using the id() function. x is not y yields the inverse
  truth value</p>
</blockquote>
<p><strong>Code</strong></p>
<pre><code>l = list(range(5))
tags = [True, False, True, False, False]

true_grp = [x for x in zip(l,tags) if x[1]]
false_grp = [x for x in zip(l,tags) if not x[1]]

print(true_grp)
print(false_grp)
</code></pre>
<p><strong>Output</strong></p>
<pre><code>[(0, True), (2, True)]
[(1, False), (3, False), (4, False)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your solution should work fine, but for clarity you can unpack items within a list comprehension. Note you <em>should</em> test for Boolean <code>x</code> via <code>if x</code>:</p>
<pre><code>true_grp = [(value, flag) for value, flag in zip(l, tags) if flag]
false_grp = [(vale, flag) for value, flag in zip(l, tags) if not flag]
</code></pre>
<p>Since these lists are linked, much better is to use a dictionary to store "True" and "False" values. A <a href="https://docs.python.org/3.6/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a> is convenient:</p>
<pre><code>from collections import defaultdict

grp = defaultdict(list)
for value, flag in zip(l, tags):
    grp[flag].append(value)
</code></pre>
<p>Then use <code>grp[0]</code> or <code>grp[False]</code> in place of <code>false_grp</code>; likewise, <code>grp[1]</code> or <code>grp[True]</code> in place of <code>true_grp</code>.</p>
<p>The one-pass dictionary-based solution also has the advantage of working for arbitrary iterables <code>l</code> and <code>tags</code>. If either of these are iterators, the list comprehension solution will not work for <code>false_grp</code>, as an iterable may only be traversed once.</p>
</div>
<span class="comment-copy">Your solution is working for me</span>
<span class="comment-copy">It works, but why? x[1] IS True/False</span>
<span class="comment-copy">You have just reinvented <code>itertools.compress</code> (sort of)</span>
<span class="comment-copy">@CodeHoarder see the linked documentation.</span>
