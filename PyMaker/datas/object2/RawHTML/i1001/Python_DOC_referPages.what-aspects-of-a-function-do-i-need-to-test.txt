<div class="post-text" itemprop="text">
<p>I have the following <code>build_settings_message</code> function and I am a bit confused how should I write a unit test for it. What aspects of it do I need to check?</p>
<pre><code>def build_settings_message(team_id):
    team = SlackTeam.objects.find_by_id(team_id)
    domain = Site.objects.get_current().domain

    attachments = [
        _build_manage_admins(),
        _build_checks_available(team, domain)
    ]

    return {
        'text': "Here is my settings page",
        'attachments': attachments
    }


def _build_manage_admins():
    return {
        "fallback": "Manage admins",
        "color": "#85cdff",
        "callback_id": "admins_controls",
        "title": "Admins",
        "footer": "Users that could remove and edit any checks ",
        "actions": [
            {
                "name": "manage",
                "text": ":key: Manage Admins",
                "type": "button",
                "value": "manage"
            }
        ]
    }


def _build_checks_available(team, domain):
    return {
        "title": "Items available",
        "footer": ("You have got *{} of {}* items for "
                   "check *available*.").format(
                       team.checks_used, team.checks_available),
        "actions": [
            {
                "text": "Open Dashboard",
                "type": "button",
                "url": 'https://' + domain + reverse('dashboard')
            }
        ]
    }
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to <a href="https://docs.python.org/3/library/unittest.mock.html" rel="nofollow noreferrer">mock</a> <code>SlackTeam</code> and <code>Site</code> and return some fake, but real-looking values for <code>team</code> and <code>domain</code>, then verify that the value returned by <code>build_settings_message</code> is correct (based on <code>team</code> and <code>domain</code>).</p>
<p>Be sure to check edge-cases such as no team, duplicate domain, etc.</p>
</div>
<span class="comment-copy">You need to ask yourself (list by no means complete): What is the function supposed to do according to its specs? Does it give the correct result? Do I care to handle wrong input properly? If so, how should it behave? etc...</span>
<span class="comment-copy">you can test what append if a wrong team_id is given as parameter (wrong format, type...)</span>
