<div class="post-text" itemprop="text">
<p>I have this JSON file:</p>
<pre><code>{"a": [{"Name": "name1",
"number": "number1",
"defaultPrice": {"p": "232", "currency": "CAD"},
"prices": {"DZ": {"p": "62", "currency": "RMB"},
 "AU": {"p": "73", "currency": "AUD"},
"lg": "en"}},
{"Name": "name2",
"number": "number2",
 "defaultPrice": {"p": "233", "currency": "CAD"},
 "prices": {"DZ": {"p": "63", "currency": "RMB"},
 "US": {"p": "72", "currency": "USD"},
 "Lg": "en"}}]}
</code></pre>
<p>Now I get this table with name, number, defaultprices, prices, but prices column is like three rows and price 63 need to be read from key p <code>"p": "63", "currency": "RMB".</code></p>
<p>But I hope to get a table with price and currency in seperate column, I used this:</p>
<p>ndf = pd.concat([pd.Series(x) for x in prices], axis=1)</p>
<p>But just get a wrong answer:</p>
<pre><code> 0                                                  1
 DZ           {"p": "232", "currency": "CAD"}  {"p": "62", "currency": "RMB"}
 AU           {"p": "233", "currency": "CAD"}    {"p": "63","currency":"RMB"}
</code></pre>
<p>Anyways to correct this so I can get this expected output? </p>
<pre><code>Name    Number   Code  currency
name1   number1   AU    AUD      
name1   number1   DZ    RMB      
</code></pre>
<p>Thanks a lot!!</p>
</div>
<div class="post-text" itemprop="text">
<p>The json string:</p>
<pre><code>j = {"a": [{ "Name": "name1",
             "number": "number1",
             "defaultPrice":  {"p": "232", "currency": "CAD"},
             "prices": {"DZ": {"p": "62", "currency": "RMB"},
                        "AU": {"p": "73", "currency": "AUD"},
                        "lg": "en"
                       }
             },
            {"Name": "name2",
             "number": "number2",
             "defaultPrice":  {"p": "233", "currency": "CAD"},
             "prices": {"DZ": {"p": "63", "currency": "RMB"},
                        "US": {"p": "72", "currency": "USD"},
                        "Lg": "en"
                       }
            }
          ]}
</code></pre>
<p>The code to get the desired output:</p>
<pre><code>country_codes = set()
for d in j['a']:
  c = d['prices'].keys()
  country_codes.update(c)

country_codes = sorted([i for i in country_codes if not i in ['lg','Lg']])
country_codes

meta = ['Name','number'] + [['prices',c,'p'] for c in country_codes] + [['prices',c,'currency'] for c in country_codes] 

df = json_normalize(j['a'], record_path = 'prices', meta = meta,errors='ignore')
df = df.rename(columns={0: 'countryCode'})
df = df[~df['countryCode'].isin(['lg','Lg'])]

for idx, row in df.iterrows():
    country = row['countryCode']
    col_price = df.columns[df.columns.str.contains(country+'.p')][0]
    col_currency = df.columns[df.columns.str.contains(country+'.currency')][0]
    price = row[col_price]
    currency = row[col_currency]
    df.loc[idx,'price'] = price
    df.loc[idx,'currency'] = currency

df = df[['Name','number','countryCode', 'currency', 'price']]


df
</code></pre>
<p>This gives:</p>
<pre><code>    Name   number countryCode currency price
0  name1  number1          DZ      RMB    62
1  name1  number1          AU      AUD    73
3  name2  number2          DZ      RMB    63
4  name2  number2          US      USD    72
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>apply(pd.Series)</code> on your <code>defaultPrice</code> column to split it into separate columns and then join it back to your original dataframe.</p>
<pre><code>prices = {"a": [{"Name": "name1",
"number": "number1",
"defaultPrice": {"p": "232", "currency": "CAD"},
"prices": {"DZ": {"p": "62", "currency": "RMB"},
 "AU": {"p": "73", "currency": "AUD"},
"lg": "en"}},
{"Name": "name2",
"number": "number2",
 "defaultPrice": {"p": "233", "currency": "CAD"},
 "prices": {"DZ": {"p": "63", "currency": "RMB"},
 "US": {"p": "72", "currency": "USD"},
 "Lg": "en"}}]}

ndf = pd.DataFrame(prices['a'])
pd.concat([ndf, ndf['defaultPrice'].apply(pd.Series)], axis=1).drop('defaultPrice', axis=1)
</code></pre>
<p>However, your <code>prices</code> column is still a list of dictionaries. But since you have not mentioned how you wish to handle that I have just left it as it is (not included in the output).</p>
<p>OUTPUT:</p>
<pre><code>Name    number  p   currency
name1   number1 232 CAD
name2   number2 233 CAD
</code></pre>
</div>
<span class="comment-copy">Can you show a sample of your expected output?</span>
<span class="comment-copy">I have added the target output~Thanks!!@panktijk</span>
<span class="comment-copy">Could you please provide your desired output in the same format as your actual (incorrect) output, and directly in your question, as opposed to linked? It'll make it much easier for people to understand and answer :)</span>
<span class="comment-copy">@MyStackRunnethOver Thanks for the advice!! I improved my formating so it is more clear for helps~~</span>
<span class="comment-copy">Could u pls give some more details of ndf? I tried but failed to get the output. Thanks!!</span>
<span class="comment-copy">@milkbear Sorry I missed that statement. Added it in the answer. Can you check now? <code>prices</code> is the json dictionary you have provided.</span>
<span class="comment-copy">Should be right but it shows  NameError: name 'prices' is not defined    .......omg</span>
<span class="comment-copy">@milkbear Yes that's your JSON file. Read your file and store it in 'prices'.</span>
<span class="comment-copy">Perfect!! It worked well! By the way I updated the target output to learn more about pd.series. Could u also give some advice on the prices column if you got time? Thanks!!!! @panktijk</span>
