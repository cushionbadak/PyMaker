<div class="post-text" itemprop="text">
<p>I faced with an inability of the inheritance of superclass attribute values. I have already called superclass constructor and now trying to check out the inherited values. </p>
<pre><code>class base:
    def __init__(self, x):
        self.x = x
        print(self.x)

class derive(base):
    def __init__(self):
        print(self.x + 1)


print("base class: ")
b = base(1)                           &lt;-- Creating superclass instance 
print("derive class: ")
d = derived()                         &lt;-- Inheriting. Failure.
</code></pre>
<p>Why can't I do this? Should I pass the underlying object to the inheriting object explicitly in order to get <em>x</em> attribute?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>b</code> and <code>d</code> are not related; <code>b</code> is entirely a <em>separate</em> instance of the base class.</p>
<p>If you want to invoke the overridden initializer (<code>__init__</code>), then use the <a href="http://docs.python.org/3/library/functions.html#super" rel="nofollow"><code>super()</code> proxy object</a> to access it:</p>
<pre><code>class derive(base):
    def __init__(self):
        super().__init__(1)
        print(self.x + 1)
</code></pre>
<p>Note that you still need to pass in an argument to the initializer of the parent class. In the above example, I pass in a constant value 1 for the <code>x</code> parameter of the parent initializer.</p>
<p>Note that I used Python 3 specific syntax here; <code>super()</code> without arguments won't work in Python 2, where you also need to use <code>object</code> as a parent for the <code>base</code> class to make it a new-style class.</p>
</div>
<span class="comment-copy">You need to call the base class <code>__init__</code> from the derived class.  There are many previous questions on this issue.</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/222877/how-to-use-super-in-python">How to use 'super' in Python?</a></span>
<span class="comment-copy">@shx2: That question is rather Python 2-specific in its answers.</span>
<span class="comment-copy">You should probably mention it won't work in Python 2.</span>
<span class="comment-copy">@zero323: The OP is using <code>print()</code> functions; I stuck to Python 3 for that reason.</span>
<span class="comment-copy">Sometimes I feel like the only one using <code>print()</code> and Python 2.x</span>
<span class="comment-copy">@zero323: Don't, unless you use <code>from __future__ import print_function</code>.</span>
