<div class="post-text" itemprop="text">
<p>I'm trying to generate a network with preferential attachment.</p>
<p>So I'll start out with two nodes connected by an edge:</p>
<pre><code>links = [[1],[0]]
</code></pre>
<p>I have sample code:</p>
<pre><code>weighted = [nodes for v in links for nodes in v]
</code></pre>
<p>Could someone translate what [something] for v in [list] for [something] in v might mean? I'm only used to the syntax for i in list: {do stuff}</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>weighted_nodes = []
for v in links:
    for nodes in v:
        weighted_nodes.append(nodes)
</code></pre>
<p>is essentially what it is doing</p>
</div>
<div class="post-text" itemprop="text">
<p>That's a nested list comprehension.  That particular form is used to flatten a nested list.</p>
<pre><code>a = [['a','b'],['c','d','e']]

[elem for sublist in a for elem in sublist]
Out[43]: ['a', 'b', 'c', 'd', 'e']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From Wikipedia:</p>
<blockquote>
<p>A list comprehension is a syntactic construct available in some
  programming languages for creating a list based on existing lists. It
  follows the form of the mathematical set-builder notation (set
  comprehension) as distinct from the use of map and filter functions.</p>
</blockquote>
<p><a href="http://en.wikipedia.org/wiki/List_comprehension" rel="nofollow">http://en.wikipedia.org/wiki/List_comprehension</a></p>
</div>
<span class="comment-copy"><a href="http://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">List comprehensions</a></span>
