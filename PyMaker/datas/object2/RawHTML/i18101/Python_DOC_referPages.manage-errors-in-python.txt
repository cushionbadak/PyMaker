<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4508849/how-to-log-python-exception">How to log python exception? [duplicate]</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>I need to manage python errors. For example when I type:</p>
<pre><code>&gt;&gt;&gt; 1/0
</code></pre>
<p>I give back:</p>
<pre><code>Traceback (most recent call last):
  File "&lt;pyshell#14&gt;", line 1, in &lt;module&gt;
    1/0
ZeroDivisionError: division by zero
</code></pre>
<p>but I need to save this error in a variable.
I use try..except for this:</p>
<pre><code>&gt;&gt;&gt; try:
    f(0)
except Exception as err:
    print(err)
</code></pre>
<p>and see in output:</p>
<pre><code>division by zero
</code></pre>
<p>It's not enough for me. I need to error lines numbers like to IDLE (or other IDE)
(I use python 3.3 and can't use python 2.7)</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="http://docs.python.org/3/library/traceback.html" rel="nofollow"><code>traceback</code> module</a> to extract specific information such as line numbers:</p>
<pre><code>&gt;&gt;&gt; try:
...     f(0)
... except Exception as err:
...     import traceback
...     traceback.print_last()
... 
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: can't multiply sequence by non-int of type 'float'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You <em>have</em> saved the exception in a variable, <code>err</code>. It's still bound to the exception, even after the <code>except</code> block.</p>
<p>(The fact that <code>print</code> on an exception doesn't show all that much is a separate issue.)</p>
<p>However, it sounds like you wanted the traceback object, not just the exception object. That doesn't get automatically bound to a variable for you, but you can do it manually:</p>
<pre><code>try:
    1/0
except Exception:
    exc_type, exc_value, exc_traceback = sys.exc_info()
</code></pre>
<p>See <a href="http://docs.python.org/3.3/library/sys.html#sys.exc_info" rel="nofollow"><code>exc_info</code></a> for more information.</p>
<p>But a <code>traceback</code> object is a pretty heavy thing, and keeps all kinds of other heavy things alive as long as you store it. One way to avoid carrying around an object as heavy and inter-linked as the traceback is to extract just the information you want from it. That's what the <a href="http://docs.python.org/3.3/library/traceback.html" rel="nofollow"><code>traceback</code></a> module is for:</p>
<pre><code>try:
    1/0
except Exception:
    exc_type, exc_value, exc_traceback = sys.exc_info()
    exc_traceback = traceback.extract_tb(exc_traceback)
</code></pre>
<p>Now we're only carrying around a list of small tuples of strings and numbers, instead of the traceback object.</p>
<p>Or, even more simply, just format it immediately:</p>
<pre><code>    exc_traceback = traceback.format_tb(exc_traceback)
</code></pre>
</div>
<span class="comment-copy">Possible dublicate: <a href="http://stackoverflow.com/questions/4508849/how-to-log-python-exception" title="how to log python exception">stackoverflow.com/questions/4508849/how-to-log-python-exception</a></span>
<span class="comment-copy">tank you, its useful for me.</span>
<span class="comment-copy">its so intrest for me, i can block an error for next time! tank you</span>
<span class="comment-copy">Tank you.... Your answer is my GOAL..</span>
<span class="comment-copy">i give you 20 point's ;).</span>
