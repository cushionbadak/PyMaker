<div class="post-text" itemprop="text">
<p>I know you can create a simple HTTP web server in Python 3 using</p>
<pre><code>    python -m http.server
</code></pre>
<p>However is there a simple way to secure the connection to the WebServer, do i need to generate certificates? How would I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>First, you will need a certificate - assume we have it in a file <code>localhost.pem</code> which contains <em>both</em> the private and public keys, then:</p>
<pre><code>import http.server, ssl

server_address = ('localhost', 4443)
httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
httpd.socket = ssl.wrap_socket(httpd.socket,
                               server_side=True,
                               certfile='localhost.pem',
                               ssl_version=ssl.PROTOCOL_TLSv1)
httpd.serve_forever()
</code></pre>
<p>Make sure you specify the right parameters for <code>wrap_socket</code>!</p>
</div>
<span class="comment-copy">I suppose you could try asking <code>Google</code> first. See <a href="http://www.piware.de/2011/01/creating-an-https-server-in-python/" rel="nofollow noreferrer">piware.de/2011/01/creating-an-https-server-in-python</a> and <a href="http://code.activestate.com/recipes/442473-simple-http-server-supporting-ssl-secure-communica/" rel="nofollow noreferrer">code.activestate.com/recipes/â€¦</a></span>
<span class="comment-copy">Aside: it's much more common to have a "real" web server handle this, and only use Python to execute application code.</span>
<span class="comment-copy">I also needed to specify <code>keyfile='...'</code>. Also, e.g. when querying with curl, it says <code>curl: (56) GnuTLS recv error (-110): The TLS connection was non-properly terminated</code> (which can be ignored, but something seems to be ugly)</span>
<span class="comment-copy">You need to specify <code>keyfile</code> if the certificate does not contain the private key, as I mentioned - the documentation is <a href="https://docs.python.org/3/library/ssl.html#combined-key-and-certificate" rel="nofollow noreferrer">here</a>.</span>
