<div class="post-text" itemprop="text">
<p>I just need a hint on how to do things properly.</p>
<p>Say I have a script called script.py which uses a list of names as argument ["name1", "name2", etc. ].</p>
<p>I want to call this script from another script using the subprocess module. So what I would like to do is the following :</p>
<pre><code>myList = ["name1", "name2", "name3"]
subprocess.Popen(["python", "script.py", myList])
</code></pre>
<p>Of course that doesn't work because the subprocess.Popen method requires a list of strings as arguments.
So I considered doing the following :</p>
<pre><code>subprocess.Popen(["python", "script.py", str(myList)])
</code></pre>
<p>Now the process starts but it doesn't work because it has a string as argument and not a list. How should I fix that properly? </p>
</div>
<div class="post-text" itemprop="text">
<p>Concatenate them using <code>+</code> operator.</p>
<pre><code>myList = ["name1", "name2", "name3"]
subprocess.Popen(["python", "script.py"] + myList)
</code></pre>
<p>BTW, if you want use same python program, replace <code>"python"</code> with <code>sys.executable</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Thanks for the quick answer falsetru. It doesn't work directly but I understand how to do.
You're suggestion is equivalent to doing :</p>
<pre><code>subprocess.Popen(["Python","script.py","name1","name2","name3"])
</code></pre>
<p>Where I have 3 arguments that are the strings contained in my original list.</p>
<p>All I need to do in my script.py file is to build a new list from each argument received by doing the following :</p>
<pre><code>myList = sys.argv[1:]
</code></pre>
<p>myList is now the same than the one I had initially!</p>
<pre><code>["name1","name2","name3"]
</code></pre>
<p>Don't know why I didn't think about it earlier!</p>
</div>
<span class="comment-copy">or <code>.extend()</code> it if you are unsure about the type of the additional arguments.</span>
<span class="comment-copy">@NiklasR, or <code>+ list(myList)</code></span>
<span class="comment-copy"><code>extend</code> is only useful if you modify a named list prior to the call. <code>subprocess.Popen(["python", "script.py"].extend(myList))</code> would pass <code>None</code> (the return value of <code>extend</code>) as the first and only argument to <code>Popen()</code>.</span>
<span class="comment-copy">@falsetru, can we pass a new parameter (just like we pass to a function) from previous process to the new sub-process?</span>
<span class="comment-copy">@user5319825, Yes, as you can see in the code in the answer. The sub-process can receive those command line parameters using <a href="https://docs.python.org/3/library/sys.html#sys.argv" rel="nofollow noreferrer"><code>sys.argv</code></a>.</span>
<span class="comment-copy">best way that worked for me was to use the <code>extend</code> to add more elements into the list. The <code>extend</code> came in handy as i have still to decide what to add into the list before calling <code>subprocess.Popen()</code></span>
