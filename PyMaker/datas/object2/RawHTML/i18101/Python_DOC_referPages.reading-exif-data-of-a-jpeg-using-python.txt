<div class="post-text" itemprop="text">
<p>I'm trying to create a program to get specific EXIF information of a jpeg without using PIL and such. I'm reading the file in binary but the output is slightly confusing...</p>
<pre><code>file = open("/Users/Niko/Desktop/IMG.JPG", "rb")
print(file.read(16))
</code></pre>
<p>Which outputs:</p>
<pre><code>b'\xff\xd8\xff\xe1/\xfeExif\x00\x00MM\x00*\x00\x00\x00\x08\x00\x0b\x01\x0f\x00\x02\x00\x00\x00\x06\x00\x00'
</code></pre>
<p>What I'm confused about is what the "\","/", and "*" mean...
I know that the first few bytes that signify its a jpeg is 0xFF 0xD8, so I take it the \s are 0s? Can anyone help me understand this?</p>
<p>Apologies for any beginners mistakes, new to coding in general and kind of just jumped in to creating this program.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python presents you with a representation of the byte string that you can copy and paste into a Python interpreter again.</p>
<p>In order to make it readable <em>and</em> survive pasting into something that doesn't handle raw bytes, anything that isn't printable is escaped using a Python byte escape code, <code>\xHH</code>, representing the hexademical value for a byte.</p>
<p>Anything that <em>is</em> printable, is represented as the ASCII character directly. A hex byte 0x41 is the letter <code>A</code> (capital) in ASCII, and printed as such:</p>
<pre><code>&gt;&gt;&gt; b'\x41'
b'A'
</code></pre>
<p>Thus, <code>*</code> is hex 2A, <code>/</code> is hex 2F:</p>
<pre><code>&gt;&gt;&gt; hex(ord(b'*'))
'0x2a'
&gt;&gt;&gt; hex(ord(b'/'))
'0x2f'
</code></pre>
<p>You could use <a href="http://docs.python.org/3/library/binascii.html#binascii.hexlify" rel="nofollow noreferrer"><code>binascii.hexlify()</code></a> to generate an all-hexadecimal representation of your bytes:</p>
<pre><code>&gt;&gt;&gt; from binascii import hexlify
&gt;&gt;&gt; hexlify(b'\xff\xd8\xff\xe1/\xfeExif\x00\x00MM\x00*\x00\x00\x00\x08\x00\x0b\x01\x0f\x00\x02\x00\x00\x00\x06\x00\x00')
b'ffd8ffe12ffe4578696600004d4d002a00000008000b010f0002000000060000'
</code></pre>
<p>That said, you would be better off installing <a href="http://python-imaging.github.io/" rel="nofollow noreferrer">Pillow</a> (the modernized fork of the Python Image Library) and have it handle JPEG images, including <a href="https://stackoverflow.com/questions/4764932/in-python-how-do-i-read-the-exif-data-for-an-image">extracting EXIF information</a>, for you.</p>
</div>
<span class="comment-copy">Why not use the Python Imaging Library (PIL), or it's modern repackaging Pillow? That library supports reading EXIF out of the box.</span>
<span class="comment-copy">Python byte representations print any character outside of the printable ASCII range as a <code>\xHH</code> hexadecimal escape code. <code>\xff</code> is a byte with value 255 (hex FF), while <code>M</code> is a byte with the same value as the ASCII codepoint for the capital letter <code>M</code>, 77 (hex 4D). <code>/</code> is 47 (hex 2F), <code>*</code> is 42, (hex 2A).</span>
<span class="comment-copy">0xff - hex notation. \xff - hex notation within a string.</span>
<span class="comment-copy">as @MartijnPieters said, you're printing escaped characters. You probably want to <code>print(file.read(16).encode('hex'))</code> instead</span>
<span class="comment-copy">@goncalopp: That won't work on Python 3; the <code>bytes</code> type has <i>no</i> <code>.encode()</code> method.</span>
