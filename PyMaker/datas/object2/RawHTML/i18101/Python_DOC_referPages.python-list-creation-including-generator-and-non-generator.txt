<div class="post-text" itemprop="text">
<p>Seems like there should be an easier way to do this:</p>
<pre><code>header_line = [x for x in my_dict.keys()]
header_line.insert(0, "1st column\t2nd column")
header_line.append("note")
print "\t".join(map(str, header_line))
</code></pre>
<p>naively i thought the following should work, but get syntax error on the header_line:</p>
<pre><code>header_line = ["1st column", "2nd column", x for x in my_dict.keys(), "note"] 
print "\t".join(map(str, header_line))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about</p>
<pre><code>header_line = ['1st column', '2nd column'] + [x for x in my_dict.keys()] + ['note']
</code></pre>
<p>As mentioned in the comments, for this case you can just use <code>my_dict.keys()</code> or <code>list(my_dict)</code>, but the above example is still useful as an example of how to do this when the list comprehension can't be trivially eliminated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow"><code>itertools.chain</code></a> if you have a more generaty generator:</p>
<pre><code>import itertools

print "\t".join(itertools.chain(["1st column", "2nd column"], my_dict, ["note"]))
</code></pre>
</div>
<span class="comment-copy">You can use <code>list(my_dict)</code>.</span>
<span class="comment-copy">Yeah, that's true for this example, although it's still useful to know this way of doing it if you have a "real" list comprehension that can't be eliminated.</span>
