<div class="post-text" itemprop="text">
<p>I am using the following code and it works well except for the fact that my code spits out on to a CSV file from Excel and it skips every other line. I have googled the csv module documentation and other examples in <a href="https://stackoverflow.com/questions/11652806/csv-write-skipping-lines-when-writing-to-csv">stackoverflow.com</a> and I found that I need to use DictWriter with the lineterminator set at '\n'. My own attempts to write it into the code have been foiled. </p>
<p>So I am wondering is there a way for me to apply this(being the lineterminator) to the whole file so that I do not have any lines skipped? And if so how?</p>
<p>Here is the code:</p>
<pre><code>import urllib2
from BeautifulSoup import BeautifulSoup
import csv

page = urllib2.urlopen('http://finance.yahoo.com/q/ks?s=F%20Key%20Statistics').read()

f = csv.writer(open("pe_ratio.csv","w"))
f.writerow(["Name","PE"])

soup = BeautifulSoup(page)
all_data = soup.findAll('td', "yfnc_tabledata1")
f.writerow([all_data[2].getText()])
</code></pre>
<p>Thanks for your help in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to open your file with the right options for the <code>csv.writer</code> class to work correctly. The module has universal newline support internally, so you need to turn off Python's universal newline support at the file level.</p>
<p>For Python 2, <a href="http://docs.python.org/2/library/csv.html#csv.writer" rel="nofollow">the docs say</a>:</p>
<blockquote>
<p>If <code>csvfile</code> is a file object, it must be opened with the <code>'b'</code> flag on platforms where that makes a difference.</p>
</blockquote>
<p>For Python 3, <a href="http://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow">they say</a>: </p>
<blockquote>
<p>If <code>csvfile</code> is a file object, it should be opened with <code>newline=''</code>.</p>
</blockquote>
<p>Also, you should probably use a <code>with</code> statement to handle opening and closing your file, like this:</p>
<pre><code>with open("pe_ratio.csv","wb") as f: # or open("pe_ratio.csv", "w", newline="") in Py3
    writer = csv.writer(f)

    # do other stuff here, staying indented until you're done writing to the file
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, since Yahoo provides an API that returns CSV files, maybe you can solve your problem that way? For example, <a href="http://biz.yahoo.com/p/csv/330conamed.csv" rel="nofollow">this URL</a> returns a CSV file containing prices, market cap, P/E and other metrics for all stocks in that industry. There is some <a href="https://code.google.com/p/yahoo-finance-managed/wiki/csvCompanyDownload" rel="nofollow">more information in this Google Code project</a>.</p>
<p>Your code only produces a two-row CSV because there are only two calls to <code>f.writerow()</code>. If the only piece of data you want from that page is the P/E ratio, this is almost certainly not the best way to do it, but you should pass to <code>f.writerow()</code> a tuple containing the value for each column. To be consistent with your header row, that would be something like:</p>
<pre><code>f.writerow( ('Ford', all_data[2].getText()) )
</code></pre>
<p>Of course, that assumes that the P/E ratio will always be second in the list. If instead you wanted all the statistics provided on that page, you could try:</p>
<pre><code># scrape the html for the name and value of each metric
metrics = soup.findAll('td', 'yfnc_tablehead1')
values = soup.findAll('td', 'yfnc_tabledata1')

# create a list of tuples for the writerows method
def stripTag(tag): return tag.text
data = zip(map(stripTag, metrics), map(stripTag, values))

# write to csv file
f.writerows(data)
</code></pre>
</div>
<span class="comment-copy">What do you mean by 'skips every other line'?  Can you give an example input, the output you're getting and the desired output?</span>
