<div class="post-text" itemprop="text">
<p>I have a list of lists and I want to write it in csv file
Example list:</p>
<pre><code>data=[['serial', 'name', 'subject'],['1', 'atul','tpa'],['2', 'carl','CN'].......]
</code></pre>
<p>data[0] should be column names
everything else is row wise data</p>
<p>Please suggest me a way to do this.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is trivial with the <a href="http://docs.python.org/3/library/csv.html"><code>csv</code> module</a>:</p>
<pre><code>with open('output.csv', 'w', newline='') as csvfile:
    writer = csv.writer(csvfile)
    writer.writerows(data)
</code></pre>
<p>You already have the header in <code>data</code> as the first row; you can write all rows in one go with the <code>writer.writerows()</code> method. That's all there is to it, really.</p>
</div>
<div class="post-text" itemprop="text">
<p>I get the following error when I include newline='': TypeError: 'newline' is an invalid keyword argument for this function.</p>
<p>This is what I used and worked fine for me.</p>
<pre><code>csv_file = open("your_csv_file.csv", "wb")
writer = csv.writer(csv_file)
writer.writerows(clean_list)
</code></pre>
</div>
<span class="comment-copy">Have you tried anything yourself yet? What problems did you encounter?</span>
<span class="comment-copy">actully I have multiple sheets in excel file and I parsed all the sheets and created a list of lists. So when I am writing it into csv file with your solution it's pasting column names for each and every sheet</span>
<span class="comment-copy"><code>csv</code> is just writing out what you give it. Skip the first entry of every sheet but the first if you see duplicate column names.</span>
<span class="comment-copy">As seedubbs in their answer mentions, "TypeError: 'newline' is an invalid keyword argument for this function".</span>
<span class="comment-copy">@samkhan13: you and they are using Python 2, not Python 3 (note the question tags). Use <code>open('output.csv', 'wb')</code> instead (so use binary mode so the CSV module can control what newlines are written).</span>
<span class="comment-copy">thanks you for the clarification</span>
<span class="comment-copy">That's because you are using <i>Python 2</i>, not Python 3, as tagged on the question.</span>
