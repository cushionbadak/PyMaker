<div class="post-text" itemprop="text">
<p>I can't figure out why I get the error:  <code>TypeError: Can't convert 'int' object to string implicity</code></p>
<p>This is the relevant code for the class:</p>
<pre><code>class Pig():

def __init__(self, name, age, weight, value):
    self.name = name
    self.age = age
    self.weight = weight
    self.value = value

def runAndGainValue(self, value):
    self.value += value  #This is where the error occur.

def __str__(self):
    a = self.name + " "
    a += str(self.value) + " "
    return a
</code></pre>
<p>And here's the part of the code for the main program:</p>
<pre><code>elif work == "2":
    yourfarm.printAnimals()
    print ("blablablabla")
    for pig in p:
        pig.runAndGainValue(5)
    yourfarm.printAnimals()
</code></pre>
<p>And I can't figure out why I get this error. I've tried searching for it but I am new with programming so I have a lot of trouble with interpreting a totally different code but with the same problem. Very much grateful for your help ahead.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have set the <code>value</code> of your pig to a string, then when you call <code>pig.runAndGainValue(5)</code> you are trying to add an integer to a string:</p>
<pre><code>def runAndGainValue(self, value):
    self.value += value
</code></pre>
<p>This raises an exception as Python strings are not implicitly converted to numbers, even when their value could be interpreted as a number:</p>
<pre><code>&gt;&gt;&gt; '10' + 5
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: Can't convert 'int' object to str implicitly
</code></pre>
<p>When creating the <code>Pig</code>, make sure <code>value</code> in an integer, always. Perhaps you need to explicitly convert in the initializer:</p>
<pre><code>def __init__(self, name, age, weight, value):
    self.name = name
    self.age = int(age)
    self.weight = int(weight)
    self.value = int(value)
</code></pre>
<p>or just make sure your inputs are integers.</p>
</div>
<span class="comment-copy">where does the error occur?</span>
<span class="comment-copy">is self.name a string, or are you passing in a number when you create the Pig object?</span>
<span class="comment-copy">Ops sry, I've edited the question and commented where the error occur.</span>
<span class="comment-copy">I'm not sure what you mean because I'm a superbeginner. But the self.name is decided in my class for the farm. with for i in self.animals: print(i.name,i.weight, and so on).</span>
<span class="comment-copy">I see. That brings me a new problem, because of how I've decided the age, weight, and value in my main code. I wrote it like Pig("bla the pig", "age: 2", "weight: 50" if you understand what I mean.</span>
<span class="comment-copy">@Bondenn: You cannot do that; let the attribute names themselves determine what the value means, don't store strings with added metadata like that.</span>
<span class="comment-copy">@Bondenn: At least, parse out the value: <code>self.age = int(age.rsplit(':', 1)[-1])</code> would get <i>just</i> the part of the string after the last <code>:</code> and turn that into an integer.</span>
<span class="comment-copy">Okey that's my bad for being a beginner! But how do I do it when I want the attributes to be decided? For example: If you buy a pig it should be presented with, Name: Pig, Age: 2, Weight: 50kg and so on?</span>
<span class="comment-copy">@Bondenn: leave <i>that</i> to the printing code; take a look at <a href="http://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">the string format syntax</a> to make that part easier.</span>
