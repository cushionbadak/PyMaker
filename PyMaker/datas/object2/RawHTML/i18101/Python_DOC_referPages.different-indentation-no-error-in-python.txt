<div class="post-text" itemprop="text">
<pre><code>password = raw_input("Enter password: ")
if password == "1234":
  print "You logged in correctly!"
else:
    print "GTFO"
</code></pre>
<p>Though i give different indentations the code is working fine i'm unable to figure it out.</p>
</div>
<div class="post-text" itemprop="text">
<p>it will not be flagged as as IndentationError, sine any block of statement has to have at lease 1 space of indent</p>
<p>here your <code>if</code> and <code>else</code> are two different blocks, so it was indented anyway so the interpreter throws no error</p>
<pre><code>if True:
 print 
elif True:
  print 
elif True:
   print 
elif True:
     print 
else:
         print
</code></pre>
<p>This will work without any problem</p>
<p>But if I try the following I will get <code>IndendationError</code></p>
<pre><code>if True:

    print ""
      print ""  # has different Indentation
    print ""
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://docs.python.org/2/reference/lexical_analysis.html#indentation">The Python documentation</a> explains indentation. Here's a relevant excerpt:</p>
<blockquote>
<p>At the beginning of each logical line, the lineâ€™s indentation level is
  compared to the top of the stack. If it is equal, nothing happens. If
  it is larger, it is pushed on the stack, and one INDENT token is
  generated. If it is smaller, it <em>must</em> be one of the numbers occurring
  on the stack</p>
</blockquote>
<p>In your code, since the indentation level is larger than the top of the stack (which is <code>0</code>), it is treated as a single indent. The <code>else:</code> line popped <code>2</code> off of the top of the stack, so the interpreter has no memory of your previous indentation level of <code>2</code>. It only knows that it's higher than the <code>0</code>.</p>
<p>Problems arise when you start mixing indentation within a block:</p>
<pre><code>def foo():
    if True:
        return True
      return False  # Is this part of the if statement or not?
</code></pre>
<p>When the parser reaches <code>return False</code>, the stack contains <code>[4, 8]</code>. The next line has an indent of <code>6</code>, which is not contained in the stack and therefore generates an <code>IndentationError</code>.</p>
</div>
<span class="comment-copy">Why so?If different indentation we need to get error right!</span>
<span class="comment-copy">I think he means they are at different levels of indentation. Not just different as in 'space' (&amp; its length) vs 'tab'</span>
<span class="comment-copy">@drj: Read the documentation: <a href="http://docs.python.org/3/reference/lexical_analysis.html#indentation" rel="nofollow noreferrer">docs.python.org/3/reference/lexical_analysis.html#indentation</a></span>
<span class="comment-copy">The problem is only when you have different levels of indentation in one block.</span>
<span class="comment-copy">+1 for documentation.</span>
