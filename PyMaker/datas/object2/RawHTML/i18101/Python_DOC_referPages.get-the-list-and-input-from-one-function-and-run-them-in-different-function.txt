<div class="post-text" itemprop="text">
<p>i have a programm that generate the list and then i ask them to tell me what they want to do from the menu and this is where my problem start i was able to get the input form the user to different function but when i try to use the if else condition it doesn't check, below are my code </p>
<pre><code>def menu(x,l):
    print (x)
    if x == 1:
        return make_table(l)
    if x == 2:
        y= input("enter a row (as a number) or a column (as an uppercase letter")
        if y in [ "1",'2','3']:
            print("Minmum is:",minimum(y,l))
    if x== 3:
        print ('bye')

def main():
    bad_filename = True
    l =[]
    while bad_filename == True:
        try:
            filename = input("Enter the filename: ")
            fp = open(filename, "r")
            for f_line in fp:
                f_str=f_line.strip()
                f_str=f_str.split(',')
                for unit_str in f_str:
                    unit=float(unit_str)
                    l.append(unit)
            bad_filename = False
        except IOError:
            print("Error: The file was not found: ", filename)
        #print(l)
    condition=True

    while condition==True:
        print('1- open\n','2- maximum')
        x=input("Enter the choice")
        menu(x,l)

main()
</code></pre>
<p>from the bottom function i can get list and i can get the user input and i can get the data and move it in second function but it wont work after that.thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>I think your problem is simple, and has nothing to do with how you're passing values between functions.</p>
<p>In <code>main</code>, you're reading a value from the user like this:</p>
<pre><code>x=input("Enter the choice")
</code></pre>
<p>The <a href="http://docs.python.org/3/library/functions.html#input" rel="nofollow"><code>input</code></a> function:</p>
<blockquote>
<p>… reads a line from input, converts it to a string (stripping a trailing newline), and returns that.</p>
</blockquote>
<p>So, if the user types <code>1</code> at the prompt, you get back the string <code>"1"</code>.</p>
<p>Now, you pass that value—perfectly correctly—to <code>menu</code>.</p>
<p>In <code>menu</code>, you then try to compare it to various numbers, like this:</p>
<pre><code>if x == 1:
</code></pre>
<p>But this will never be true. A string, like <code>"1"</code>, is <em>never</em> equal to a number, like <code>1</code>. They're not even the same <em>kind</em> of value, much less the same value.</p>
<p>So, you need to do one of two things:</p>
<ul>
<li>Convert the input to an number. For example, change <code>menu(x,l)</code> to <code>menu(int(x), l)</code>. OR…</li>
<li>Write <code>menu</code> to expect strings. For example, change <code>if x == 1:</code> to <code>if x == "1":</code>.</li>
</ul>
<hr/>
<p>You may be wondering why that <code>print (x)</code> didn't help you debug the problem.</p>
<p><code>print(x)</code> prints out the end-user-friendly string representation of whatever you give it. That is, it automatically calls the <a href="http://docs.python.org/3/library/functions.html#func-str" rel="nofollow"><code>str</code></a> function for you. For debugging purposes, you often want to use <a href="http://docs.python.org/3/library/functions.html#repr" rel="nofollow"><code>repr</code></a> instead of <code>str</code>, to get the programmer-friendly string representation instead of the end-user-friendly string representation.</p>
<p>For example, <code>print(str("10"))</code> will print out <code>10</code>—just like <code>print(str(10))</code>, so you can't tell them apart. But <code>print(repr("10"))</code> will print out <code>'10'</code>, unlike <code>print(repr(10))</code>, while prints <code>10</code>, so you <em>can</em> tell them apart. <code>repr</code> can also help you spot things like strings with invisible characters in them, having special "node" objects from a parser instead of just strings, etc.</p>
</div>
<span class="comment-copy">i didnt mean to put return (make_table(l)), i have make_table only and the make_table is working fine.</span>
<span class="comment-copy">Assuming this is Python 3.x, there's no way <code>x</code> will ever be equal to any number, because <code>input</code> returns a <i>string</i>, and the string <code>"1"</code> is not equal to the integer <code>1</code>.</span>
<span class="comment-copy">+1 for the print explanation, very useful</span>
