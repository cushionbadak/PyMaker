<div class="post-text" itemprop="text">
<p>I'm struggeling a bit with a part of code for a little program I'm writing. Have in mind I'm very new with this.</p>
<p>Heres the code:</p>
<pre><code>def sell():
    sell = input("\nGreetings! What would you like to do today?\nPress 1 to sell an animal\nPress 2 to buy an animal\nPress 3 If you want to see all the farms and their animals first\n")

    if sell == "1":
        whichs = input("Which animal do you want to sell?\nPress 1 for pig\nPress 2 for horse\nPress 3 for cow\nPress 4 for bull\n")
        if whichs == "1":
            print ("\nYou just sold\n",p[0])
            print ("\nYou now have 350gold")
            print ("\nThese are the animals you have left:")
            print (p[1], p[2], p[3]) #Prints the animals you have left from p list.
        elif whichs == "2":
            print ("\nYou just sold\n",p[1])
            print ("\nYou now have 350gold")
            print ("\nThese are the animals you have left:")
            print (p[0], p[2], p[3])
        elif whichs == "3":
            print ("\nYou just sold\n",p[2])
            print ("\nYou now have 360gold.")
            print ("\nThese are the animals you have left:")
            print (p[0], p[1], p[3])
        elif whichs == "4":
            print ("\nYou just sold\n",p[3])
            print ("\nYou now have 350gold.")
            print ("\nThese are the animals you have left:")
            print (p[0], p[1], p[2])
        else:
            print ("Error")
</code></pre>
<p>I want this to loop so when the user has sold one animal, they start over with the:</p>
<pre><code>sell = input("\nGreetings! What would you like to do today?\nPress 1 to sell an animal\nPress 2 to buy an animal\nPress 3 If you want to see all the farms and their animals first\n")
</code></pre>
<p>And I'm struggeling with how this is done.</p>
</div>
<div class="post-text" itemprop="text">
<p>The other two answers are right in telling you to use a while loop but fail to address a more general problem: the loop shouldn't be <strong>inside</strong> of the <code>sell</code> function but outside of it, as your text indicates that the user can also buy stuff or look at his stats. You should create individual functions for all of these actions and then create a loop that checks for the action and calls the appropriate functions:</p>
<pre><code>def buy():
    #...

def sell():
    #...

def stats():
    #...

while True:
    choice = input("1: Buy 2:Sell 3:Stats - press any other key to exit")
    if choice == "1": buy()
    elif choice == "2": sell()
    elif choice == "3": stats()
    else: break
</code></pre>
<p>The loop could be optimized by using more pythonic approaches like mapping the choices to the functions in a dictionary, but I've written it with a simple if for clarity.</p>
<p>Also, if you don't choose to hold all your state in global variables (which you shouldn't), it would make sense to put the functions into a class which also holds the current balance, stock and other game parameters.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def sell():
    looping = True

    while looping:
        sell = input("\nGreetings! ... Press Q for quit")

        if sell == "1":
            #rest of your code
        elif sell == "Q":
            looping = False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try using a <a href="http://docs.python.org/3/reference/compound_stmts.html#while" rel="nofollow">while</a> loop:</p>
<pre><code>def sell_function():
    while True:
        sell = input("\nGreetings! What would you like to do today?\nPress 1 to sell an animal\nPress 2 to buy an animal\nPress 3 If you want to see all the farms and their animals first\n")
        # ...
            else:
                print("Error")
                break        # Stop looping on error
</code></pre>
<p>We could have also set a variable to <code>True</code>, done <code>while variable</code> and then <code>variable = False</code> instead of <code>break</code> for the same effect (in this instance).</p>
<p>I renamed your function, as you used a variable called <code>sell</code> and had a function with the same name which could cause problems. Also, you'll no doubt later find the <a href="http://docs.python.org/3/reference/simple_stmts.html#break" rel="nofollow">break</a> and <a href="http://docs.python.org/3/reference/simple_stmts.html#continue" rel="nofollow">continue</a> statements useful.</p>
</div>
<span class="comment-copy">have you tried a <code>while</code> statement?</span>
<span class="comment-copy">Here's the <a href="http://docs.python.org/2/reference/compound_stmts.html#while" rel="nofollow noreferrer">reference</a>. And here's a <a href="http://www.tutorialspoint.com/python/python_while_loop.htm" rel="nofollow noreferrer">tutorial</a>.</span>
<span class="comment-copy">Thank you so much, I had been thinking about if it was optimal to have all that code in one function. Now my code looks much cleaner and everything works great! I'm not quite sure what you mean with mapping the choices. I use classes for all the farms and types of animals if that's what you mean.</span>
<span class="comment-copy">Might be a good idea to add a  <code>break</code> somewhere to get out.</span>
<span class="comment-copy">Where should the break be to get the loop working and to get out at the right place? I've tried putting the break just after the else-statement, but it didn't work.</span>
<span class="comment-copy">@user2877270 See my answer, it should be directly below (and at the same indentation level) as the <code>print("Error")</code> part, if you want to break on error.</span>
<span class="comment-copy">Yeah I noticed that, I had to get the right indention level for my whole code, that's why it wasn't working. Now it's working really smooth, thank you so much for the help! And btw, how do i accept answer? I'm new here aswell :)</span>
<span class="comment-copy">@user2877270 Click the tick beneath the number of votes the answer has.</span>
