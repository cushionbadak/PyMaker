<div class="post-text" itemprop="text">
<p>i have this necessity and i would like to know if it's possible to acomplish: I want to put part from my python code inside a WebServer. And, only after a authentication process, the user who is executing my script, will be able to read a file that is in my WebServer and use that content to execute it as part of script. Is there any function in Python that can read a text from file as a variable and execute that code as if it was written inside the script?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you explain why you want to do this, I'm willing to bet that it's not actually the way you should be solving the problem.</p>
<p>But meanwhile:</p>
<p>The <a href="http://docs.python.org/2/library/functions.html#execfile" rel="nofollow"><code>execfile</code></a> function does exactly what you want: it reads text from a file and executes it as Python code.</p>
<p>If you want to read the text into a variable first, and then execute the code in that variable, what you want is the <a href="http://docs.python.org/2/reference/simple_stmts.html#exec" rel="nofollow"><code>exec</code></a> statement.</p>
<p>You might instead want a custom importer, so you can just <code>import</code> a module from an HTTP URL, or from stored text. Or, of course, you can always just write the text out to a <code>tempfile.NamedTemporaryFile</code> inside some directory you've added to <code>sys.path</code> and then <code>import</code> that module normally, without any custom importer code. See <a href="http://docs.python.org/2/library/modules.html" rel="nofollow">Importing Modules</a> and <a href="http://www.python.org/dev/peps/pep-0302/" rel="nofollow">PEP 302</a> for all the gory details. (Note that everything related to custom importing is 100x easier in Python 3.3 than 2.7… at the very least because you can find all the docs by starting at <a href="http://docs.python.org/3/reference/import.html#importsystem" rel="nofollow">The import system</a> instead of scattered in 14 places, most of which are comments in C code…)</p>
</div>
<div class="post-text" itemprop="text">
<p>Your approach must be a quite bad practice. But you can do for example: <code>exec 'print 1 + 2'</code></p>
</div>
<span class="comment-copy">There's <a href="http://docs.python.org/2/library/functions.html#eval" rel="nofollow noreferrer">eval('string that will be executed here')</a> but you almost certainly shouldn't be using it out of security concerns in this context...</span>
<span class="comment-copy">@chucksmash: <code>eval</code> only evaluates a single expression; a file worth of code is almost certainly a series of statements. He probably wants an <a href="http://docs.python.org/2/reference/simple_stmts.html#exec" rel="nofollow noreferrer"><code>exec</code> statement</a> and/or <a href="http://docs.python.org/2/library/functions.html#execfile" rel="nofollow noreferrer"><code>execfile</code></a> and/or a custom importer. But, that being said, you're completely right that he probably <i>wouldn't</i> want that if he knew better.</span>
<span class="comment-copy">Sounds like someone is trying to make a botnet. There is an exec function.</span>
<span class="comment-copy">@abarnert Ahh I wasn't familiar with exec and execfile. More things to remember to never use :D</span>
<span class="comment-copy">@StarkBR: Well, what are you trying to prevent? Pirates from cracking your code? Users from reading the embarrassing comments where you curse out your company's biggest partner? People from running your code without a valid license? Whatever it is, how important is it, and how hard are you willing to work to prevent it? There is no perfect, or even all that good, protection against any of that; in some cases it's worth fighting anyway, but only if you've analyzed the costs and benefits and make sure you stay on the useful side of the line.</span>
<span class="comment-copy">Yeah, maybe there is another approach. Anyway, the reason for this: I need to run individual codes for each application version. So, after auth process, i wanna download the corresponding part of code for that specific app version and execute it on that specific computer.</span>
<span class="comment-copy">It's not necessarily bad practice - he's just downloading and executing code from a secure server.</span>
