<div class="post-text" itemprop="text">
<p>I have string variable test, In Python 2.7 this works fine.</p>
<pre><code>test = raw_input("enter the test") 
print test
</code></pre>
<p>But in Python 3.3. I use </p>
<pre><code>test = input("enter the test") 
print test
</code></pre>
<p>with the input string <code>sdas</code>, and I get an error message</p>
<blockquote>
<p>Traceback (most recent call last):</p>
<p>File "/home/ananiev/PycharmProjects/PigLatin/main.py",</p>
<p>line 5, in 
  test = input("enter the test")</p>
<p>File "", line 1, in  NameError: name 'sdas' is not defined</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You're running your Python 3 code with a Python 2 interpreter. If you weren't, your <code>print</code> statement would throw up a <a href="http://docs.python.org/3/library/exceptions.html#SyntaxError" rel="noreferrer"><code>SyntaxError</code></a> before it ever prompted you for input.</p>
<p>The result is that you're using Python 2's <a href="http://docs.python.org/2/library/functions.html#input" rel="noreferrer"><code>input</code></a>, which tries to <code>eval</code> your input (presumably <code>sdas</code>), finds that it's invalid Python, and dies.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'd say the code you need is:</p>
<pre><code>test = input("enter the test")
print(test)
</code></pre>
<p>Otherwise it shouldn't run at all, due to a syntax error. The <code>print</code> function requires brackets in python 3. I cannot reproduce your error, though. Are you sure it's those lines causing that error?</p>
</div>
<div class="post-text" itemprop="text">
<p>sdas is being read as a variable. To input a string you need " "</p>
</div>
<div class="post-text" itemprop="text">
<p>I got the same error. In the terminal when I typed "python filename.py", with this command, python2 was tring to run python3 code, because the is written python3. It runs correctly when I type "python3 filename.py" in the terminal. I hope this works for you too.</p>
</div>
<div class="post-text" itemprop="text">
<p>In operating systems like Ubuntu python comes preinstalled. So the default version is python 2.7 you can confirm the version by typing below command in your terminal </p>
<pre><code>python -V
</code></pre>
<p>if you installed it but didn't set default version you will see </p>
<pre><code>python 2.7
</code></pre>
<p>in terminal. I will tell you how to set the default python version in Ubuntu.</p>
<p>A simple safe way would be to use an alias. Place this into <strong>~/.bashrc</strong> or <strong>~/.bash_aliases</strong> file:</p>
<pre><code>alias python=python3
</code></pre>
<p>After adding the above in the file, run the command below:</p>
<p><code>source ~/.bash_aliases</code> or <code>source ~/.bashrc</code></p>
<p>now check python version again using <code>python -V</code></p>
<p>if python version 3.x.x one, then the error is in your syntax like using <strong>print</strong> with parenthesis. change it to </p>
<pre><code>test = input("enter the test")
print(test)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Well question is very simple, i don't know why people have answer this badly.</p>
<p>Solution: </p>
<p>If using python 2.x :</p>
<pre><code>then for evaluated input use "input"
example: number = input("enter a number")

and for string use "raw_input"
example: name = raw_input("enter your name")
</code></pre>
<p>If using python 3.x :</p>
<pre><code>then for evaluated result use "eval" and "input"
example: number = eval(input("enter a number"))

for string use "input"
example: name = input("enter your name")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>temperature = input("What's the current temperature in your city? (please use the format ??C or ???F) &gt;&gt;&gt; ")

### warning... the result from input will &lt;str&gt; on Python 3.x only
### in the case of Python 2.x, the result from input is the variable type &lt;int&gt;
### for the &lt;str&gt; type as the result for Python 2.x it's neccessary to use the another: raw_input()

temp_int = int(temperature[:-1])     # 25 &lt;int&gt; (as example)
temp_str = temperature[-1:]          # "C" &lt;str&gt; (as example)

if temp_str.lower() == 'c':
    print("Your temperature in Fahrenheit is: {}".format(  (9/5 * temp_int) + 32      )  )
elif temp_str.lower() == 'f':
    print("Your temperature in Celsius is: {}".format(     ((5/9) * (temp_int - 32))  )  )
</code></pre>
</div>
<span class="comment-copy">Python 3 input function is well explained in this video: <a href="https://www.youtube.com/watch?v=i7Y9ugHJJUg" rel="nofollow noreferrer">youtube.com/watch?v=i7Y9ugHJJUg</a>.</span>
<span class="comment-copy">Are you sure? As far as I did understand, the OP wants zu pass a defined variable so the script does evaluate the variable.</span>
<span class="comment-copy">Can you elaborate what you wants to say? It would be better if you provide code snippet?</span>
<span class="comment-copy">Or use the shebang in the python script :). More info, for example, here: <a href="https://stackoverflow.com/questions/6908143/should-i-put-shebang-in-python-scripts-and-what-form-should-it-take" title="should i put shebang in python scripts and what form should it take">stackoverflow.com/questions/6908143/â€¦</a></span>
