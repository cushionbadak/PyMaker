<div class="post-text" itemprop="text">
<p>I'd like to use <code>argparse</code> to read from <em>either</em> <code>stdin</code> <em>or</em> an input file. In other words: </p>
<ul>
<li>If an input file is given, read that.</li>
<li>If not, read from stdin <em>only</em> if it's not the terminal. (i.e. a file is being piped in)</li>
<li>If neither of these criteria are satisfied, signal to argparse that the inputs aren't correct. </li>
</ul>
<p>I'm asking for behavior similar to what's described in <a href="https://stackoverflow.com/q/7576525/915501">this question</a>, but I want <code>argparse</code> to recognize no file as a failed input. </p>
</div>
<div class="post-text" itemprop="text">
<p>Using the information from the question you linked to, what about using <code>sys.stdin.isatty()</code> to check if the instance your program is being run is part of a pipeline, if not, read from input file, otherwise read from <code>stdin</code>. If the input file does not exist or <code>stdin</code> is empty throw an error. </p>
<p>Hope that helped.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would recommend just settings <code>nargs='?'</code> and then handling the case of a Nonetype separately. According to <a href="https://docs.python.org/3/library/argparse.html#filetype-objects" rel="nofollow noreferrer">the official documentation</a>, <em>"FileType objects understand the pseudo-argument '-' and automatically convert this into sys.stdin for readable FileType objects and sys.stdout for writable FileType objects"</em>. So just give it a dash if you want stdin.</p>
<h2>Example</h2>
<pre class="lang-py prettyprint-override"><code>import argparse
import sys
parser = argparse.ArgumentParser()
parser.add_argument('inputfile', nargs='?', type=argparse.FileType('r'))
if not inputfile:
    sys.exit("Please provide an input file, or pipe it via stdin")
</code></pre>
</div>
<span class="comment-copy">Does <code>fileinput</code> module help at all?</span>
<span class="comment-copy">I was trying to do something like that. Of course it's possible to check for an empty input after <code>argparse</code> runs, but it's slightly more ugly (especially since you have to call <code>print_usage()</code> manually to get behavior like you'd get when you omit a required argument).</span>
<span class="comment-copy">Yeah...not very pythonic. I'm surprised non of the veterans have yet answered with an elegant solution. Usually they post before I have even gotten my head around the problem.</span>
