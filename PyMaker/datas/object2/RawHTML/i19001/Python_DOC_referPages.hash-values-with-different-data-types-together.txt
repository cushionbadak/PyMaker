<div class="post-text" itemprop="text">
<h3>Question:</h3>
<p>What is a good way to get a hash from a group of values of different data types (in Python)?</p>
<p>The values need to be hashed in a consistent order. Values that need to be hashed are strings and integers.</p>
<h3>Example:</h3>
<pre><code>value1 = 'coconut'
value2 = 1.23

hash = Sha1Hash(value1, value2)
</code></pre>
<p>Could always concat into a string, but feel like this is less than ideal:</p>
<pre><code>hash = Sha1Hash( '%s%s' % (value1, value2))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you want a sha1 hash value. Python comes with a sha1 hash function, but it requires a string as input. Your data, <code>(value1, value2)</code>, therefore needs to be serialized. </p>
<p>Since your data consists of only strings, ints and floats, you could serialize it and preserve the order of the values with</p>
<pre><code>str([value1, value2])
</code></pre>
<hr/>
<pre><code>import hashlib

value1 = 'coconut'
value2 = 1.23

m = hashlib.sha1()
m.update(str([value1, value2]))
print(m.hexdigest())            
# 1381ae81c8a5b660cca5b8d4607aa378320e25e8
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just make a tuple of the values, and hash that:</p>
<pre><code>&gt;&gt;&gt; Sha1Hash((value1, value2))
</code></pre>
<p>or use the standard <a href="http://docs.python.org/3/library/functions.html#hash" rel="nofollow">hash</a> function:</p>
<pre><code>&gt;&gt;&gt; hash((value1, value2))
</code></pre>
</div>
<span class="comment-copy">It depends. Why do you need a hash? What constraints should it satisfy?</span>
<span class="comment-copy">It needs to hash the values in a consistent order. It also needs to hash strings, integers, ans possibly floating point numbers.</span>
