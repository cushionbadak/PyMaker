<div class="post-text" itemprop="text">
<p>I have this function, but i'm not familiar with the error or how to correct it.</p>
<pre><code>def intify(file1):
    numbers=range(0,10)
    strnum=[]
    for x in numbers:
        strnum.append(str(x))

    number1=[]
    for line in file1:
        for split in line.split(' '):
                number1.append(split)

    listnum=[]
    for x in number1:
        if x[0] in strnum:
            listnum.append(x)

    w=map(float, listnum)
    #return w
    print(w)
</code></pre>
<p>error map object at 0x275b990</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>error map object at 0x275b990</p>
</blockquote>
<p>It is not an error - you just print address of iterator, returned by <code>map</code>. You could print <code>list(w)</code> to make sure that everything's alright. Of course, you <strong>should not return</strong> <code>list(w)</code> since it is unnecessary and expensive.</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3+, <code>map()</code> is a class, not a function (<a href="http://docs.python.org/3/library/functions.html#map" rel="nofollow">documentation here</a>). A <code>map</code> instance can be iterated over and each item in the sequence will be processed only as needed ("lazy evaluation"). This way an actual list need never be created, saving time and memory, and if you don't need all the items (e.g., you stop processing when you hit a certain value) then you can save a bunch of function calls, too. In general, then, you will want to do something like this with <code>map()</code>:</p>
<pre><code>for num in map(float, listnum):
     print(num)   # or do something else
</code></pre>
<p>If you really do want an actual list, just convert it to one: the <code>list()</code> constructor accepts any iterable, including a <code>map()</code> instance:</p>
<pre><code>w = list(map(float, listnum))
</code></pre>
<p>What you're seeing when you print a <code>map</code> object is not an error, but rather the default Python display (<code>repr()</code>) of objects. The code is the <code>id()</code> of the object in hexadecimal, which in CPython is its memory address; this is useful mainly for distinguishing one instance from others. You'll be seeing this a lot, so get used to it.</p>
</div>
<span class="comment-copy">What language is this? What have you tried?</span>
<span class="comment-copy">Seems like Python</span>
<span class="comment-copy">Python 3.x, specifically.</span>
