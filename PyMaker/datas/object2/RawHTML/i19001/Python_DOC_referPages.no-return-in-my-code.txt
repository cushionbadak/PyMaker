<div class="post-text" itemprop="text">
<p>If I execute this piece of code, it works partially. I tried with an empty string and the code works. But sometimes it tells me False when the character is in the string!</p>
<pre><code>def isIn(char, aStr):
"""char is a single character and aStr is
an alphabetized string.
Returns: true if char is in aStr; false otherwise"""

# base case: if aStr is an empty string
    if aStr == '':
        return('The string is empty!')
        #return False
# base case: if aStr is a string of length 1
    if len(aStr) == 1:
        return aStr == char
# base case: see if the character in the middle of aStr is equal to the test char
    midIndex = len(aStr)/2
    midChar = aStr[midIndex]
    if char == midChar:
        return True
# Recursive case: if the test character is smaller than the middle character,recursively
# search on the first half of aStr
    elif char &lt; midChar:
        return isIn(char, aStr[:midIndex])
# Otherwise the test character is larger than the middle character, so recursively
# search on the last half of aStr
    else:
        return isIn(char, aStr[midIndex:]) 

aStr = str(raw_input('Enter a word: '))
char = str(raw_input('Enter a character: '))
print(isIn(char,aStr))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you never called the function you defined:</p>
<pre><code>aStr = raw_input('Enter a word: ')  #raw_input already returns a string ,no need of str  
char = raw_input('Enter a character: ')
print isIn(char, aStr)                  #call the function to run it
</code></pre>
<p>Demo:</p>
<pre><code>Enter a word: foo
Enter a character: o
True
</code></pre>
<p><a href="http://docs.python.org/2/reference/compound_stmts.html#function-definitions" rel="nofollow"><strong>Functions definition and  execution:</strong></a></p>
<blockquote>
<p>The function definition does not execute the function body; this gets executed only when the function is called.</p>
</blockquote>
<p>example:</p>
<pre><code>def func():   #function definition, when this is parsed it creates a function object
    return "you just executed func"

print func()    #execute or run the function
you just executed func           #output
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code is correct, you should indent it:</p>
<pre><code>def isIn(char, aStr):
    """char is a single character and aStr is
    an alphabetized string.
    Returns: true if char is in aStr; false otherwise"""

    # base case: if aStr is an empty string
    if aStr == '':
    ...
</code></pre>
<p>Then just test with:</p>
<pre><code>&gt;&gt;&gt; isIn('a', 'afdsf')
True
&gt;&gt;&gt; print isIn('a', 'dfg')
False
</code></pre>
<p>By the way this acomplishes the same in two lines:</p>
<pre><code>def isIn(char, aStr):
    return char in sStr
</code></pre>
</div>
<span class="comment-copy">Please fix your indentation.</span>
<span class="comment-copy">why not use <code>char in aStr</code>?</span>
<span class="comment-copy">Ids that the indentation that you have in your code? If so that is the issue see (python tutorial](<a href="http://docs.python.org/3/tutorial/controlflow.html#defining-functions" rel="nofollow noreferrer">docs.python.org/3/tutorial/controlflow.html#defining-functions</a>)</span>
<span class="comment-copy">That code won't even compile without the docstring indented, so I assume that's just a formatting error, but if I copy and paste your code and fix nothing but the docstring indentation it works fine.</span>
<span class="comment-copy">why is this downvoted? it is the correct answer to the OP's problem</span>
<span class="comment-copy">Why the downvotes? This is correct! Although it is not clear from the lack of indentation the last two lines of the example are obviously not part of the isIn function and a call to isIn (as well as printing its result) is what is needed to make the original module complete.</span>
<span class="comment-copy">Yep, my answer was also incorrectly downvoted. Maybe the OP is expecting something else.</span>
<span class="comment-copy">Ok, I fixed that, thanks!</span>
<span class="comment-copy">@david_doji So what was the mistake?</span>
