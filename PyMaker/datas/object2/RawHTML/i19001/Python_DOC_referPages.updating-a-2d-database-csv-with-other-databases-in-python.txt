<div class="post-text" itemprop="text">
<p>I basically have a file such as</p>
<pre><code>Name Day1 Day2 Day3
Abe  1    2    3
Ben  2    2    1
Cat  2    3    2
</code></pre>
<p>And I have "update files" in the form</p>
<pre><code>Name Day3 Day4
Abe  4    0
Dan  6    3
</code></pre>
<p>So I need to keep track of which rows extend horizontally, which extend vertically, and which extend both ways. In excel this basically looks like splitting each dataset into 4, and pasting the data in the appropriate places.</p>
<p>I was hacking together a solution but I figure perhaps NumPy or Pandas or some other suite has great tools for this purpose?</p>
<p>Edit: The "update" files always contain more up-to-date information, so whatever they contain overrides the original file. If it helps, the update file could be counted on always having a higher number for any Name/Day combination.</p>
</div>
<div class="post-text" itemprop="text">
<p>How about this, using <code>pandas</code>:</p>
<pre><code>&gt;&gt;&gt; updated = orig.append(new).groupby('Name').last().fillna(0)
&gt;&gt;&gt; updated
      Day1  Day2  Day3  Day4
Name                        
Abe      1     2     4     0
Ben      2     2     1     0
Cat      2     3     2     0
Dan      0     0     6     3
</code></pre>
<hr/>
<p>First, read in the data (this will depend on the details of the format):</p>
<pre><code>&gt;&gt;&gt; orig = pd.read_csv("days1.txt", delim_whitespace=True)
&gt;&gt;&gt; new = pd.read_csv("days2up.txt", delim_whitespace=True)
&gt;&gt;&gt; orig
  Name  Day1  Day2  Day3
0  Abe     1     2     3
1  Ben     2     2     1
2  Cat     2     3     2
&gt;&gt;&gt; new
  Name  Day3  Day4
0  Abe     4     0
1  Dan     6     3
</code></pre>
<p>Then append the new data, which automatically extends the columns:</p>
<pre><code>&gt;&gt;&gt; orig.append(new)
   Day1  Day2  Day3  Day4 Name
0     1     2     3   NaN  Abe
1     2     2     1   NaN  Ben
2     2     3     2   NaN  Cat
0   NaN   NaN     4     0  Abe
1   NaN   NaN     6     3  Dan
</code></pre>
<p>Combine by the Name column, and take the last valid value (originally I was worried this would lose the Day1 and Day2 information for Abe, but it doesn't):</p>
<pre><code>&gt;&gt;&gt; orig.append(new).groupby("Name").last()
      Day1  Day2  Day3  Day4
Name                        
Abe      1     2     4     0
Ben      2     2     1   NaN
Cat      2     3     2   NaN
Dan    NaN   NaN     6     3
</code></pre>
<p>Replace the missing values with 0:</p>
<pre><code>&gt;&gt;&gt; orig.append(new).groupby("Name").last().fillna(0)
      Day1  Day2  Day3  Day4
Name                        
Abe      1     2     4     0
Ben      2     2     1     0
Cat      2     3     2     0
Dan      0     0     6     3
</code></pre>
<p>And finally write out:</p>
<pre><code>&gt;&gt;&gt; updated = orig.append(new).groupby("Name").last().fillna(0)
&gt;&gt;&gt; updated.to_csv("updated.csv")
&gt;&gt;&gt; !cat updated.csv
Name,Day1,Day2,Day3,Day4
Abe,1.0,2.0,4,0.0
Ben,2.0,2.0,1,0.0
Cat,2.0,3.0,2,0.0
Dan,0.0,0.0,6,3.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="http://docs.python.org/3/library/sqlite3.html" rel="nofollow"><code>sqlite3</code></a> module might be a better fit for dynamically-modified data like this. It's built into Python, and is quite easy to deal with. Initially, you'll want to read in your data using the <a href="http://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code></a> module, and in and of itself it may provide enough functionality for what you're trying to do, especially if management insists on using this format. </p>
</div>
<span class="comment-copy">why not use an actual database like SQLite3?</span>
<span class="comment-copy">I'm considering it. Any good resources for merging processes with SQLite3?</span>
<span class="comment-copy">the people I'm coding it for want to use CSV files though</span>
<span class="comment-copy">SQLite3 seems like a really good option, but I like using pandas for this. Seems like the right tool for the job. Thanks!</span>
