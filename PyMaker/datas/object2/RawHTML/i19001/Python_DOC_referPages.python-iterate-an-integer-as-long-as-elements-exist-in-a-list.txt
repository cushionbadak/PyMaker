<div class="post-text" itemprop="text">
<p>I have a list that looks like this:</p>
<pre><code>data = [['info', 'numbers', 'more info'], ['info', 'numbers', 'more info'], ['..*this is dynamic so it could have hundreds*..']]
</code></pre>
<p><code>data</code> is read in from a dynamic file and split up to be like this, so the number of elements are unknown.</p>
<p>What I am trying to do is rejoin the information with a <code>':'</code> between the items and store it into a text file per line but the problem is with a loop to iterate through the data elements and increment an integer to be used on the data list.</p>
<p>here is a snippet:</p>
<pre><code>#not sure what type of loop to use here
# to iterate through the data list.
saveThis = ':'.join(data[n])
file2.write(saveThis+'\n')
</code></pre>
<p>thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>Flatten the list, <em>then</em> join. <code>itertools.chain.from_iterable()</code> does the flattening:</p>
<pre><code>from itertools import chain

':'.join(chain.from_iterable(data))
</code></pre>
<p>This would put a <code>:</code> between <strong>all</strong> the items in all the sublists, writing them out as one long string.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; from itertools import chain
&gt;&gt;&gt; ':'.join(chain.from_iterable(data))
'info:numbers:more info:info:numbers:more info:..*this is dynamic so it could have hundreds*..'
</code></pre>
<p>If you need the sublist each to be written to a new line, just loop over <code>data</code>:</p>
<pre><code>for sublist in data:
    file2.write(':'.join(sublist) + '\n')
</code></pre>
<p>or use a nested list comprehension:</p>
<pre><code>    file2.write('\n'.join(':'.join(sublist) for sublist in data) + '\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Is this what you're looking for? Assuming you're not using that n for anything other than iterating over the data list, you can get rid of it altogether and do a nice little loop like this:</p>
<pre><code>for item in data:
    saveThis = ':'.join(item)
    file2.write(saveThis + '\n')
</code></pre>
<p>You could condense it even more, if you felt like it, but I'd probably avoid that. Readability counts!</p>
<pre><code># Condensed to one line, but a little harder to read:
file2.write('\n'.join(':'.join(item) for item in data))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the integer would only be used as an index into <code>data</code>, you can just dispense with the integer entirely and iterate over the elements of <code>data</code> instead:</p>
<pre><code>for datum in data:
    saveThis = ':'.join(datum)
    file2.write(saveThis + '\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Do you mean like this:</p>
<pre><code>In [5]: a
Out[5]: [['info', 'numbers', 'more info'], ['info', 'numbers', 'more info']]

In [6]: [item for sublist in a for item in sublist]
Out[6]: ['info', 'numbers', 'more info', 'info', 'numbers', 'more info']

In [7]: ":".join([item for sublist in a for item in sublist])
Out[7]: 'info:numbers:more info:info:numbers:more info'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you really want "a loop to iterate through the data elements and increment an integer", that's exactly what <a href="http://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate</code></a> is for:</p>
<pre><code>for i, element in enumerate(data):
    # i is the integer, incremented each time through the loop
</code></pre>
<p>However, I don't see why you think you want that for your problem. (Maybe if you described the problem better, or just showed us the code you have and the part that you don't know how to write?)</p>
</div>
<span class="comment-copy">for sublist in data:     file2.write('.......')  worked perfectly. thank you so much, that's exactly what I was trying to do. I'm still learning that python is far superior to c++</span>
