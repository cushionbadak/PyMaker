<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5658369/how-to-input-a-regex-in-string-replace">How to input a regex in string.replace?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I have a parameter file of the form:</p>
<pre><code>parameter-name parameter-value
</code></pre>
<p>Where the parameters may be in any order but there is only one parameter per line.  I want to replace one parameter's <code>parameter-value</code> with a new value.</p>
<p>I am using a line replace function <a href="https://stackoverflow.com/questions/39086/search-and-replace-a-line-in-a-file-in-python">posted previously</a> to replace the line which uses Python's <a href="http://www.tutorialspoint.com/python/string_replace.htm%20String.Replace" rel="noreferrer"><code>string.replace(pattern, sub)</code></a>.  The regular expression that I'm using works for instance in vim but doesn't appear to work in <code>string.replace()</code>. </p>
<p>Here is the regular expression that I'm using:</p>
<pre><code>line.replace("^.*interfaceOpDataFile.*$/i", "interfaceOpDataFile %s" % (fileIn))
</code></pre>
<p>Where <code>"interfaceOpDataFile"</code> is the parameter name that I'm replacing (/i for case-insensitive) and the new parameter value is the contents of the <code>fileIn</code> variable. </p>
<p>Is there a way to get Python to recognize this regular expression or else is there another way to accomplish this task?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>str.replace()</code> <sup><a href="https://docs.python.org/2/library/stdtypes.html#str.replace" rel="noreferrer">v2</a>|<a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="noreferrer">v3</a></sup> does not recognize regular expressions. </p>
<p>To perform a substitution using a regular expression, use <code>re.sub()</code> <sup><a href="https://docs.python.org/2/library/re.html#re.sub" rel="noreferrer">v2</a>|<a href="https://docs.python.org/3/library/re.html#re.sub" rel="noreferrer">v3</a></sup>.</p>
<p>For example:</p>
<pre><code>import re

line = re.sub(
           r"(?i)^.*interfaceOpDataFile.*$", 
           "interfaceOpDataFile %s" % fileIn, 
           line
       )
</code></pre>
<p>In a loop, it would be better to compile the regular expression first:</p>
<pre><code>import re

regex = re.compile(r"^.*interfaceOpDataFile.*$", re.IGNORECASE)
for line in some_file:
    line = regex.sub("interfaceOpDataFile %s" % fileIn, line)
    # do something with the updated line
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for the <a href="http://docs.python.org/2/library/re.html#re.sub" rel="noreferrer">re.sub</a> function.</p>
<pre><code>import re
s = "Example String"
replaced = re.sub('[ES]', 'a', s)
print replaced 
</code></pre>
<p>will print <code>axample atring</code></p>
</div>
<div class="post-text" itemprop="text">
<p>As a summary </p>
<pre><code>import sys
import re

f = sys.argv[1]
find = sys.argv[2]
replace = sys.argv[3]
with open (f, "r") as myfile:
     s=myfile.read()
ret = re.sub(find,replace, s)   # &lt;&lt;&lt; This is where the magic happens
print ret
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>re.sub</code> is definitely what you are looking for.  And so you know, you don't need the anchors and the wildcards.</p>
<pre><code>re.sub(r"(?i)interfaceOpDataFile", "interfaceOpDataFile %s" % filein, line)
</code></pre>
<p>will do the same thing--matching the first substring that looks like "interfaceOpDataFile" and replacing it.</p>
</div>
<span class="comment-copy">I had to pass in <code>flags=re.MULTILINE</code> as the last argument to <code>re.sub</code> in order to get this to work, which makes sense - <a href="https://docs.python.org/2/library/re.html#re.MULTILINE" rel="nofollow noreferrer">read about it in the docs here</a></span>
<span class="comment-copy">regex compilations are cached (<a href="https://docs.python.org/3.6/library/re.html#re.compile" rel="nofollow noreferrer">docs</a>), so compiling isn't even necessary. But as you show, if one compiles, compile outside the loop.</span>
<span class="comment-copy">Is it possible to replace with case in one line, like if first character is E change to G, if Z change it to B for example.</span>
<span class="comment-copy">You can pass a string -&gt; string function as the second argument of <code>re.sub</code>. That function will be called with each matched substring, and its result will be put in the result.</span>
<span class="comment-copy">if we want case insensitive substitution, we can put <code>replaced = re.sub('[ES]', 'a', s, flags=re.IGNORECASE)</code></span>
<span class="comment-copy">I need to replace the entire line because the original file will have something like:    <code>interfaceOpDataFile SomeDummyFile.txt</code>    and I will want to replace it with:        <code>interfaceOpDataFile SomeUsefulFile.txt</code>   If I don't include the anchors how will replace know that I want to get rid of <code>SomeDummyFile.txt</code>?</span>
<span class="comment-copy">Ah, I mis-understood exactly what you were doing with the replacement.  If each pair is on its own line, you still don't need the anchors explicity. <code>re.sub(r"(?i)(interfaceOpDataFile).*", r'\1 UsefulFile', line)</code>  This will take the whole line, capture the arguement name, and add it back the the substitution for you.</span>
