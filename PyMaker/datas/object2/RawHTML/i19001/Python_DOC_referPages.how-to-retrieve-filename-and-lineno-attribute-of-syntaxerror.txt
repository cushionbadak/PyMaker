<div class="post-text" itemprop="text">
<p>I have embedded python interpreter in my application. I use it to run python scripts using <code>PyRun_String()</code> API. I can fetch error information using <code>PyErr_Fetch()</code> if an error/exception encounters. This gives me exception type, exception value and exception traceback. I then find line number of the originated error from traceback. However, i dont get any kind of traceback in case of Syntax Error. Do anybody know how to retrieve line number without traceback..? Is there any way to retreive it using exception type or exception value..? </p>
<p>Python documentation stated that:</p>
<blockquote>
<p>Instances of this class have attributes filename, lineno, offset and text for easier access to the details. str() of the exception instance returns only the message.</p>
</blockquote>
<p>How do I retrieve filename and lineno attribute of SyntaxError in embedded python..?</p>
<p>Any help will be appreciated. Thanks in advance.</p>
<hr/>
<p>Thanks for your suggestion Brett.
But I already tried it by using PyObject_GetAttr().</p>
<p>Please see below sample code that I used for testing purpose.</p>
<pre><code>int main(int argc, char** argv)
{
    Py_Initialize();

    // Get a reference to the main module.
    PyObject* main_module =
        PyImport_AddModule("__main__");

    // Get the main module's dictionary
    // and make a copy of it.
    PyObject* main_dict =
        PyModule_GetDict(main_module);

    const char *script_source = "def main():\n\tprint('Hello'\n\nmain()";

    PyObject *res = PyRun_String(script_source,Py_file_input,main_dict,main_dict);
    if(res == NULL)
    {
        PyObject *ptype = NULL, *pvalue = NULL, *ptraceback = NULL;
        PyErr_Fetch(&amp;ptype,&amp;pvalue,&amp;ptraceback);

        PyObject* py_filename = PyUnicode_FromString("filename");
        PyObject* file_name = PyObject_GetAttr(ptype,py_filename);

        PyObject* py_lineno = PyUnicode_FromString("lineno");
        PyObject* line_no = PyObject_GetAttr(ptype,py_lineno);
    }
}
</code></pre>
<p>I have intentionally inserted a syntax error in script_source.</p>
<p>I am unable to retrieve actual file name and line number from file_name and line_no objects.</p>
<p>I tried to debug file_name and line_no objects and the content's looks like below.
"member filename of Syntax Error Objects" and "member lineno of Syntax Error Objects"</p>
<p>These objects are not callable so I can't use PyObject_Call() variant's over these.</p>
<p>Is there any way so that I can get actual file name and line number from these object's..?</p>
<p>In this file name will be  as I am using PyRun_String().</p>
</div>
<div class="post-text" itemprop="text">
<p>I resolved it in following way.
I used PyErr_NormalizeException() after PyErr_Fetch() and code is working fine now.</p>
<pre class="lang-c prettyprint-override"><code>int main(int argc, char** argv)
{
    Py_Initialize();

    // Get a reference to the main module.
    PyObject* main_module =
        PyImport_AddModule("__main__");

    // Get the main module's dictionary
    // and make a copy of it.
    PyObject* main_dict =
        PyModule_GetDict(main_module);

    const char *script_source = "def main():\n\tprint('Hello'\n\nmain()";

    PyObject *res = PyRun_String(script_source,Py_file_input,main_dict,main_dict);
    if(res == NULL)
    {
        PyObject *ptype = NULL, *pvalue = NULL, *ptraceback = NULL;
        PyErr_Fetch(&amp;ptype,&amp;pvalue,&amp;ptraceback);
        PyErr_NormalizeException(&amp;ptype,&amp;pvalue,&amp;ptraceback);

        char *msg;
        char *file;
        int line;
        int offset;
        char *text;

        int res = PyArg_ParseTuple(pvalue,"s(siis)",&amp;msg,&amp;file,&amp;line,&amp;offset,&amp;text);

        PyObject* file_name = PyObject_GetAttrString(pvalue,"filename");
        PyObject* file_name_str = PyObject_Str(file_name);
        PyObject* file_name_unicode = PyUnicode_AsEncodedString(file_name_str,"utf-8", "Error");
        char *actual_file_name = PyBytes_AsString(file_name_unicode);

        PyObject* line_no = PyObject_GetAttrString(pvalue,"lineno");
        PyObject* line_no_str = PyObject_Str(line_no);
        PyObject* line_no_unicode = PyUnicode_AsEncodedString(line_no_str,"utf-8", "Error");
        char *actual_line_no = PyBytes_AsString(line_no_unicode);

        printf("done");
    }
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The attributes are set on the the <a href="http://hg.python.org/cpython/file/e57c8a90b2df/Include/pyerrors.h#l20" rel="nofollow">PySyntaxErrorObject struct</a>, but be aware that the struct is not exposed if you are adhering to Python's stable ABI. Otherwise you should be able to use <a href="http://docs.python.org/3/c-api/object.html#PyObject_GetAttr" rel="nofollow">a PyObject_GetAttr* function</a> to get at the attributes.</p>
</div>
