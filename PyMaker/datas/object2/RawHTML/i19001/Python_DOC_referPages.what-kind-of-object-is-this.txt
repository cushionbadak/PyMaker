<div class="post-text" itemprop="text">
<p>I'm trying to load this object in python or PHP, but I'm now trying to know if there are libraries that are already written so that I don't parse the document myself.</p>
<pre><code>variable = [["1","arbitrary string","another arbitrary string"],
["2","arbitrary string","another arbitrary string"],
["3","arbitrary string","another arbitrary string"],
["4","arbitrary string","another arbitrary string"]];
another_variable = "arbitrary string";
</code></pre>
<p>Any hints will be appreciated.
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>This looks a lot like JSON. PHP has some built-in functions to handle it - json_decode, for instance: <a href="http://www.php.net/manual/en/function.json-decode.php" rel="nofollow">http://www.php.net/manual/en/function.json-decode.php</a>.</p>
<p>It looks like Python also has a JSON library built-in: <a href="http://docs.python.org/3/library/json.html" rel="nofollow">http://docs.python.org/3/library/json.html</a> (the same library is available in Python 2 as well, if you're still using the "older" version).</p>
</div>
<div class="post-text" itemprop="text">
<p>That is a JSON encoded string, representing an array of arrays.</p>
<p>You can make it a PHP native element using :</p>
<pre><code>$var = json_decode($variable);
</code></pre>
<p>Do note that <code>json_decode()</code> is build-in to PHP after 5.2 only. Otherwise you'll have to get it from PEAR.</p>
</div>
<span class="comment-copy">That's legitimate python code as-is.</span>
<span class="comment-copy">Is there a way to load it into variables so that I can manipulate it?</span>
<span class="comment-copy">looks like a flattened json object.</span>
<span class="comment-copy">use something like <code>another_variable=json.loads(variable)</code> be sure to <code>import json</code>.</span>
<span class="comment-copy">What are you trying to do with this?  as mgilson said, thats python code as is.</span>
<span class="comment-copy">If my answer solved your problem, hit the green check next to it to "accept" it. Otherwise, let me know if you need more information and I'll try to improve my answer. :)</span>
<span class="comment-copy">When I did json = urllib2.urlopen(url).read() the whole thing was read as a string. I was looking for something like: json["variable"]</span>
<span class="comment-copy">What you need to do is retrieve the JSON data as a string (via urlopen().read() for instance), and then use the JSON library to convert it to a variable. In particular, try json.loads(myVariable).</span>
