<div class="post-text" itemprop="text">
<p>I am trying to search the protein data bank with author's name, but the only choice is to use full last name and initials, therefore there are some false hits. Is there a way to do this with python? Below is the code I used:</p>
<pre><code>    import urllib2

#http://www.rcsb.org/pdb/software/rest.do#search

url = 'http://www.rcsb.org/pdb/rest/search'

queryText = """

&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;orgPdbQuery&gt;
  &lt;queryType&gt;org.pdb.query.simple.AdvancedAuthorQuery&lt;/queryType&gt;
  &lt;description&gt;Author Name: Search type is All Authors and Author is Wang, R. and Exact match is true&lt;/description&gt;
    &lt;searchType&gt;All Authors&lt;/searchType&gt;
    &lt;audit_author.name&gt;Wang, R. &lt;/audit_author.name&gt;
    &lt;exactMatch&gt;true&lt;/exactMatch&gt;
&lt;/orgPdbQuery&gt;
"""


print "query:\n", queryText

print "querying PDB...\n"

req = urllib2.Request(url, data=queryText)

f = urllib2.urlopen(req)

result = f.read()


if result:

    print "Found number of PDB entries:", result.count('\n')
    print result
else:

    print "Failed to retrieve results"enter code here
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I just published a Python package, PyPDB, that can perform an advanced search of the RCSB Protein Data Bank by author, keyword, or subject area. The repository is <a href="https://github.com/williamgilpin/pypdb" rel="nofollow">here</a> but it can also be found on PyPI:</p>
<p><code>pip install pypdb</code></p>
<p>For your application, I'd suggest first doing a general keyword search for PDB IDs with the author's name, and then search the resulting list of PDBs for entries containing the author's name among the metadata:</p>
<p>The keyword search for "actin network"</p>
<pre><code>from pypdb import *

author_name = 'J.A. Doudna'    
search_dict = make_query(author_name)
found_pdbs = do_search(search_dict)
</code></pre>
<p>Now iterate through the results looking for the author's name</p>
<pre><code>matching_results = list()
for pdb_id in found_pdbs:
    desc_pdb = describe_pdb(item)
    if author_name in desc_pdb['citation_authors']:
        matching_results.append(pdb_id)
</code></pre>
<p>You can imagine using fancier regular expressions to improve slight variations in the way an author's name or initials are used. There also might be a nicer way to write this code that bundles requests.</p>
</div>
<span class="comment-copy">Well you could loop through <code>A.</code> to <code>Z.</code>, then try <code>A.A.</code> to <code>Z.Z.</code>, etc.  See <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a>.  But it's probably faster to not use an exact match and then filter out the ones you don't need using a regular expression.</span>
<span class="comment-copy">Is there a way to do <i>what</i>? If the database does not contain the first name of the author then no, there is no way to get that out of that particular database.</span>
<span class="comment-copy">I meant "is there a way to search with full name", not only using full last and first initial. There is a way to search with full names I think, that I could download all PDB entries and store them in my local drive and then I could search the full name in the header info for all entries, which will take quite some time.</span>
<span class="comment-copy">Thanks, Rufflewind. I think I can first filter out those with (last name + first initial), and then use RE to further select from there. I will give it a try.</span>
