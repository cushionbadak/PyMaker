<div class="post-text" itemprop="text">
<p>I am new to python. This is my code:</p>
<pre><code>print("Welcome to the Currency Converter")

print("This Currency Converter converts: ")

print(" US [D]ollar")

print(" [E]uro")

print(" British[P]ound Sterling")

print(" Japanese[Y]en")

print()

def input1() :

    a = input("Enter the currency inital {eg. [E] for Euro} you wish to convert from: ")
    if a.lower is not ('e','y','p','d'):
        print("That is not a valid currency inital. Please try again ")
        input1()
input1()

def input2() :

    b = input("Enter the currency inital you wish to convert to: ")
    if b.lower is not ('e','y','p','d'):
        print("That is not a valid currency inital. Please try again")
        input2()
input2()
</code></pre>
<p>It's always repeating even though I don't want it to. My aim is to make it work only if <code>e</code>,<code>y</code>,<code>d</code> or <code>p</code> is entered, otherwise it should display the error message and repeat the question.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code doesn't properly call the functions nor does it assign global variables for conversion. In addition, you shouldn't use the <code>is</code> keyword, which checks for equivalent references in memory, you should use the <code>in</code> keyword which checks for the existence of an element in your tuple.</p>
<pre><code>print("Welcome to the Currency Converter")

print("This Currency Converter converts: ")

print(" US [D]ollar")

print(" [E]uro")

print(" British[P]ound Sterling")

print(" Japanese[Y]en")

print()

def input1() :

    a = input("Enter the currency inital {eg. [E] for Euro} you wish to convert from: ")
    if a.lower() not in ('e','y','p','d'):
        print("That is not a valid currency inital. Please try again ")
        return input1()
    return a

a = input1()

def input2() :

    b = input("Enter the currency inital you wish to convert to: ")
    if b.lower() not in ('e','y','p','d'):
        print("That is not a valid currency inital. Please try again")
        return input2()
    return b

b = input2()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There are several problems:</p>
<p>You are reading the input in a function, but never returning it.</p>
<pre><code>def fun():
  a = 1

fun()
print(a)  # NameError
</code></pre>
<p>Your test fails, because you are comparing a method (<code>a.lower</code>) with a tuple. You have to call the function and check wether the result is <code>in</code> a sequence type:</p>
<pre><code>if a.lower() not in ('e', 'y', 'p', 'd'):
  ...
</code></pre>
<p>Finally, there's no need to call the <code>input1</code> function recursively:</p>
<pre><code>def input1() :
  while True:    
    a = input("Enter the currency inital {eg. [E] for Euro} you wish to convert from: ")
    if a.lower() not in ('e','y','p','d'):
      print("That is not a valid currency inital. Please try again ")
    else:
      return a.lower()
</code></pre>
<p>and then in the "main" part of the script:</p>
<pre><code>from_curr = input1()
</code></pre>
<p>(don't use <code>from</code> as variable name, since it is a <a href="https://docs.python.org/2/reference/lexical_analysis.html#keywords" rel="nofollow">keyword</a>).</p>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><code>a.lower</code> is a function which you need to call, otherwise you only get a function reference back. So do <code>a.lower()</code>.</li>
<li><p><code>if x is not ('e', 'y', 'p', 'd')</code> – The <code>is</code> (or <code>is not</code>) operator checks for <em>identity</em>. On the left side you have the user input, and on the right side, you have a 4-element tuple with possible characters. Those two will never have the same identity. You want to use the <code>in</code> operator:</p>
<pre><code>if a.lower() not in ('e', 'y', 'p', 'd'):
    …
</code></pre></li>
</ol>
</div>
<span class="comment-copy">You probably want <code>not in (...)</code></span>
<span class="comment-copy">Please read Python documentation on <a href="https://docs.python.org/3/tutorial/introduction.html#first-steps-towards-programming" rel="nofollow noreferrer"><code>while</code> loops.</a></span>
<span class="comment-copy"><code>a.lower</code> is a function, you have to call it: <code>a.lower()</code>, and you are missing an <code>in</code> keyword.</span>
<span class="comment-copy">I really miss the "lacks minimal understanding" close reason :/</span>
<span class="comment-copy">@vaultah there really are worse questions than this...</span>
<span class="comment-copy">Yeah guys, sorry I forgot about fixing <code>in</code>.</span>
<span class="comment-copy">What's wrong with it now?</span>
<span class="comment-copy">Did you check the return value of the functions when you enter a wrong letter in the fjrst attempt?</span>
<span class="comment-copy">How's this Jasper, recursion?</span>
<span class="comment-copy">Better :-)  I'd still rather use a loop instead of recursion here, but that's just a matter of taste</span>
