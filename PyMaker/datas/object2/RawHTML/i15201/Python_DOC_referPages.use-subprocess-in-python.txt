<div class="post-text" itemprop="text">
<p>I am writing a small program in Python, to record an audio WITH printing some text at same time.</p>
<p>But my Print is executed until finishing of audio recording.
Can you please help me to resolve this issue?</p>
<pre><code>import picamera, subprocess, os, sys

a1 = "arecord -f cd -D plughw:0 -d 10 a.wav"
subprocess.call(a1,shell= True)
print("Audio record is only for 10sec")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're using <a href="https://docs.python.org/3/library/subprocess.html#subprocess.call" rel="nofollow"><code>subprocess.call</code></a>, which blocks:</p>
<blockquote>
<p>Run the command described by args. <strong>Wait for command to complete</strong>, then return the returncode attribute.</p>
</blockquote>
<p>You can use a <a href="https://docs.python.org/3/library/subprocess.html#popen-objects" rel="nofollow"><code>Popen</code></a> object, which doesn't block:</p>
<pre><code>proc = subprocess.Popen(a1.split())
# code will proceed

# use proc.communicate later on
</code></pre>
<p>Or you can have two things run separately using a <a href="https://docs.python.org/3/library/threading.html#thread-objects" rel="nofollow"><code>Thread</code></a> (which then spawns a process in it's own context):</p>
<pre><code>import picamera, subprocess, os, sys
import threading

def my_process():
    a1 = "arecord -f cd -D plughw:0 -d 10 a.wav"
    subprocess.call(a1,shell= True)
thread = threading.Thread(target=my_process)
thread.start()
print("Audio record is only for 10sec")
</code></pre>
</div>
<span class="comment-copy">Well, you could put <code>print</code> right below the <code>subprocess.call()</code> - it won't wait for the <code>arecord</code> to end then :) Otherwise, you can use <a href="https://docs.python.org/3/library/threading.html" rel="nofollow noreferrer">threads</a> to run it simultaneously.</span>
<span class="comment-copy">@IgorHatarist but in actual practice, It is waiting for audio end then print the text.. i m exactly doing same what you said</span>
<span class="comment-copy">Hm, I can't reproduce it. Are you sure that if you swap lines containing <code>subprocess.call</code> and <code>print</code>, the message still won't show up after the record is finished?</span>
<span class="comment-copy">when I use <code>proc = subprocess.Popen(a1.spilt())</code> instead of <code>subprocess.call(a1,shell= True)</code> it is showing me an error <code>AttributeError: 'str' object has no attribute 'spilt'</code></span>
<span class="comment-copy">threads are unnecessary here. You should not call <code>.communicate()</code> unless any of the pipes is redirected, use <code>.wait()</code> instead.</span>
<span class="comment-copy">@J.F.Sebastian Can you please edit my coding, to make <code>subprocess.Popen</code> error free</span>
<span class="comment-copy"><code>spilt</code> is an obvious typo. Use <code>a1.split()</code> as shown in the answer instead.</span>
