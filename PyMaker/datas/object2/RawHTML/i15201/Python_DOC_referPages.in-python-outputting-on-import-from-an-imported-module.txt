<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5855758/what-is-the-source-code-of-the-this-module-doing">What is the source code of the “this” module doing?</a>
<span class="question-originals-answer-count">
                    5 answers
                </span>
</li>
</ul>
</div>
<p>Using Python 2.7.</p>
<p>Saw that when importing the module "this", an output to the screen (interpreter) is automatically generated.</p>
<pre><code>import this
</code></pre>
<p>It outputs some kind of text labeled as "The Zen of Python, by Tim Peters."</p>
<p>I am curious as how that is done.
How does one have a module output, or do anything, immediately when it is imported?</p>
<p>[EDIT] This not a duplicate, as the referenced question is on the "ROT13" encoding being used in the module "this", and not as to how to invoke an action from an imported module.</p>
</div>
<div class="post-text" itemprop="text">
<p>when you import something, you are doing the equivalent of copying and pasting a class onto the top of your file. inside that package, anything can be done that can be done in your normal python file, hence a print statement. </p>
</div>
<div class="post-text" itemprop="text">
<p>Try this you'll get the hang of it:</p>
<p><code>main.py</code></p>
<pre><code>from help import *
</code></pre>
<p><code>help.py</code></p>
<pre><code>print "I'm a helper script."
</code></pre>
</div>
<span class="comment-copy">Simply add some print statements. <a href="https://hg.python.org/cpython/file/94d8524086bd/Lib/this.py" rel="nofollow noreferrer">hg.python.org/cpython/file/94d8524086bd/Lib/this.py</a></span>
<span class="comment-copy">Thank you for the useful comment.</span>
<span class="comment-copy">The accepted answer is misleading, import in Python is not a copy-paste like <code>#include</code> in C: <a href="https://docs.python.org/3/reference/import.html#the-import-system" rel="nofollow noreferrer">docs.python.org/3/reference/import.html#the-import-system</a></span>
<span class="comment-copy">Use comments if you have an issue with the closing of the question, don't add those things to question body.</span>
<span class="comment-copy">@ Ashwini Chaudhary The duplicate note says to "edit this question to explain how it is different." Best of all would have been if @mhawke had read the question he assumed was a duplicate of mine, instead of killing my question with a negligent mark of "duplicate."</span>
<span class="comment-copy">And you're often more concerned in <i>not</i> doing something when the module is imported, hence the conditional <code>if __name__ == '__main__':</code></span>
<span class="comment-copy">Good info. I am glad @Roberto added that thing about <b>main</b>.  I would have gone crazy trying to get it to work, as all of my modules have <b>main</b> .</span>
<span class="comment-copy">Import doesn't work like that in Python, it is not equivalent to copy-pasting the source code. <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">When we import something</a> a module object is created that requires processing the whole module from top to bottom, so if any prints are present at the global level then they are executed as well. If it was equivalent to copy-pasting then we will always end up with all variables from the imported module in our current module.</span>
<span class="comment-copy">correct me if I am wrong, but I believe that it is as i specified, pasting a self contained class on top of the file (of course it is a little more complicated than that)</span>
<span class="comment-copy">Not it's not equivalent to that, for example if that was the case then <code>global</code> statements in imported module will then pick the items from current module as well.</span>
