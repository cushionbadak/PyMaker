<div class="post-text" itemprop="text">
<p>I have a function for example:</p>
<pre><code>launcher(usr_login, usr_password)
</code></pre>
<p>which calls other python script + usr_login + usr_password as arguments.</p>
<p>See:
Function</p>
<pre><code>launcher("login", "pass")
</code></pre>
<p>will execute function.py file as  <code>$function.py login pass</code><br/>
Subject:
I have dict user_login : password, And I would like to be able launch a 'launcher' function in one time multithreaded / multiprocessed</p>
<p>dict has login1 : pass1 , login2 : pass2
So I need launch launcher(login1, pass1) and launcher(login2, pass2) in same time.
Is there a way how to do it?
Thank you</p>
<pre><code># -*- coding: utf-8 -*-
from config import users, ThCount
from time import sleep
from multiprocessing import Pool
import os

users = {}

def launcher(usr_login, usr_password):
    os.system("C:\\Python34\\python.exe implementation.py %s %s" % (usr_login, usr_password))
</code></pre>
<p>Reply for comment #1
If I use like this:</p>
<pre><code>def launcher(usr_login, usr_password):
    os.system("C:\\Python34\\python.exe implementation.py %s %s" % (usr_login, usr_password))
if __name__ == '__main__':
    with Pool(5) as p:
        p.map(launcher, users)
</code></pre>
<p>I got:</p>
<pre><code>TypeError: launcher() missing 1 required positional argument: 'usr_password'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can't pass multiple arguments to function using <code>Pool.map()</code>.</p>
<p>As a simple solution you can pack them into tuple. </p>
<pre><code># -*- coding: utf-8 -*-
from multiprocessing import Pool
import os

users = {
    'a': '1',
    'b': '2',
    'c': '3'
}

def launcher(args):
    os.system("python implementation.py %s %s" % (args[0], args[1]))


if __name__ == '__main__':
    with Pool(3) as p:
        p.map(launcher, users.items())
</code></pre>
<p><strong>UPD</strong> I noticed you're using Python 3.4. Starting from version 3.3 you can use <a href="https://docs.python.org/dev/library/multiprocessing.html#multiprocessing.pool.Pool.starmap" rel="nofollow">Pool.starmap</a> to pass multiple parameters and therefore keep list of parameters readable as before.</p>
<pre><code># -*- coding: utf-8 -*-
from multiprocessing import Pool
import os

users = {
    'a': '1',
    'b': '2',
    'c': '3'
}

def launcher(usr_login, usr_password):
    os.system("python implementation.py %s %s" % (usr_login, usr_password))


if __name__ == '__main__':
    with Pool(3) as p:
        p.starmap(launcher, users.items())
</code></pre>
</div>
<span class="comment-copy">rtfm <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow noreferrer">docs.python.org/3/library/multiprocessing.html</a></span>
<span class="comment-copy">if <b>name</b> == '<b>main</b>':     with Pool(int(ThCount)) as p:         p.map(launcher, users) I tested it before. Doesn't work. Seems like function wasnt called.</span>
<span class="comment-copy">yeah! Thats I was looking for. You did the solution. Thank you.</span>
<span class="comment-copy">You're welcome. See UPD part, it's better solution IMHO.</span>
<span class="comment-copy">you can use Pool.starmap to keep it readable as before. What does this mean?  I have no output. Function just runs Selenium WebDriver and login to site. Anyway Thank you.</span>
<span class="comment-copy">It allows you to pass few parameters to a function, therefore you can give them readable names, instead of unclear <code>args</code>.</span>
<span class="comment-copy">thank you. i got you.</span>
