<div class="post-text" itemprop="text">
<p>I need to Telnet into my router and issue a reboot command on it. And it has to be achieved with Python. Here's the code I've got:  </p>
<pre><code>import sys
import telnetlib

HOST = "192.168.1.254"
user = "Administrator"
password = "xxxxxxxx"
port = "23"

telnet = telnetlib.Telnet(HOST,port)
telnet.read_until(b"login: ")

telnet.write(admin.encode('ascii') + b"\n")
telnet.read_until(b"Password: ")
telnet.write(password.encode('ascii') + b"\n")

telnet.write(b"system reboot\n")
telnet.close()
</code></pre>
<p>When I'm initating it in command prompt it'd just stay blank, no errors whatsoever. It's as if it's loading something for so long, but the router would not reboot. The script sort of hangs.  </p>
<p>Thanks for helping!</p>
</div>
<div class="post-text" itemprop="text">
<p>I faced the same issue today, 1.5 years after your question. In my case, the issue was resolved by removing the extra space, i.e.:</p>
<pre class="lang-python prettyprint-override"><code>telnet.read_until(b"Password: ") # note the space before "
</code></pre>
<p>becomes:</p>
<pre><code>telnet.read_until(b"Password:") # no space before "
</code></pre>
<p>It seems, the problem exists because of the extra space that is not output by telnet serve and thus read_until is not able to find the specified string.</p>
</div>
<div class="post-text" itemprop="text">
<p>To my mind, there is something wrong with string passed to router. They must not be byte (the <code>b</code> prefix is not needed). Try removing it. String encoding also seems strange. </p>
</div>
<span class="comment-copy">Must it produce output? It just reboots and that's all</span>
<span class="comment-copy">Sorry, my English isn't so good, so I might explain myself wrongly. You're right, it does not have to produce output. But the router does not reboot, though I've told it to "system reboot".</span>
<span class="comment-copy">Edited ur question read edit carefully</span>
<span class="comment-copy">What's <code>admin</code> in <code>telnet.write(admin.encode('ascii') + b"\n")</code>? Did you mean <code>user</code>?</span>
<span class="comment-copy">Well, I'm trying to build my code on this user's example, since he said he got it working: <a href="http://stackoverflow.com/a/20485573/3596479">stackoverflow.com/a/20485573/3596479</a>. It would be logical to use "user.encode" though. Which I tried, but it didn't help.</span>
<span class="comment-copy"><code>b</code> as a string prefix means that it's a <b>byte</b> string. In Python 2 <code>b</code> does nothing, but in Python 3 all strings are by default Unicode, so you need to use the <code>b</code> to get a Python 2 style string.</span>
<span class="comment-copy">@PM2Ring, doesn't Python3 have <code>telnetlib</code> that can deal with 'not-byte' strings, as usual?</span>
<span class="comment-copy">Removing "b" in front of "system reboot" did not help either.</span>
<span class="comment-copy">Perhaps not; the <a href="https://docs.python.org/3/library/telnetlib.html#telnet-example" rel="nofollow noreferrer">example code</a> in the official telnetlib docs for Python 3 uses explicit <code>b</code> strings. FWIW, I don't use Python3, but I have succesfully used telnetlib in Python 2 to telnet into my ADSL modem. The <code>b</code> strings makes sense IMHO, since the telnet protocol uses ASCII strings and so I'd expect it to get confused if you talked to it with Unicode.</span>
