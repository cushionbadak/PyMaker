<div class="post-text" itemprop="text">
<p>I try to unzip 150  zip files. All the zip files as different names, and they all spread in one big folder that divided to a lot of sub folders and sub sub folders.i want to extract each archive to separate folder with the same name as the original zip file name and also in the same place as the original zip file . my code is:</p>
<pre><code>import zipfile    
import os,os.path,sys  

pattern = '*.zip'  
folder = r"C:\Project\layers"   
files_process = []  
for root,dirs,files in os.walk(r"C:\Project\layers"):  
    for filenames in files:  
        if filenames == pattern:  
            files_process.append(os.path.join(root, filenames))  
            zip.extract() 
</code></pre>
<p>After i run the code nothing happened.
Thanks in advance for any help on this. </p>
</div>
<div class="post-text" itemprop="text">
<p>UPDATE:</p>
<p>Finally, this code worked for me:</p>
<pre><code>import zipfile,fnmatch,os

rootPath = r"C:\Project"
pattern = '*.zip'
for root, dirs, files in os.walk(rootPath):
    for filename in fnmatch.filter(files, pattern):
        print(os.path.join(root, filename))
        zipfile.ZipFile(os.path.join(root, filename)).extractall(os.path.join(root, os.path.splitext(filename)[0]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path.rglob" rel="nofollow"><code>Path.rglob()</code></a> to enumerate zip-files recursively and <a href="https://docs.python.org/3/library/shutil.html#shutil.unpack_archive" rel="nofollow"><code>shutil.unpack_archive()</code></a> to unpack zip files:</p>
<pre><code>#!/usr/bin/env python3
import logging
from pathlib import Path
from shutil import unpack_archive

zip_files = Path(r"C:\Project\layers").rglob("*.zip")
while True:
    try:
        path = next(zip_files)
    except StopIteration:
        break # no more files
    except PermissionError:
        logging.exception("permission error")
    else:
         extract_dir = path.with_name(path.stem)
         unpack_archive(str(path), str(extract_dir), 'zip')
</code></pre>
<p>It <em>"extract[s] each archive to separate folder with the same name as the original zip file name and also in the same place as the original zip file"</em> e.g., it extracts <code>'layers/dir/file.zip'</code> archive into <code>'layers/dir/file'</code> directory.</p>
</div>
<div class="post-text" itemprop="text">
<p>To unzip all the files into a temporary folder (Ubuntu)</p>
<pre><code>import tempfile
import zipfile

tmpdirname = tempfile.mkdtemp()

zf = zipfile.ZipFile('/path/to/zipfile.zip')

for fn in zf.namelist():
    temp_file = tmpdirname+"/"+fn
    #print(temp_file)

    f = open(temp_file, 'w')
    f.write(zf.read(fn).decode('utf-8'))
    f.close()
</code></pre>
</div>
<span class="comment-copy">Using <code>zipfile</code> module: <a href="https://docs.python.org/2/library/zipfile.html" rel="nofollow noreferrer">docs.python.org/2/library/zipfile.html</a></span>
<span class="comment-copy"><a href="https://docs.python.org/2/library/zipfile.html#zipfile.ZipFile.extract" rel="nofollow noreferrer">extract_zip</a></span>
<span class="comment-copy">Use <code>os.path.splitext(filename)[0]</code> instead of <code>filename.split('.')[0]</code> The latter return a wrong result if there are multiple dots in the filename.</span>
<span class="comment-copy">This worked for me - thanks.</span>
<span class="comment-copy">i get an error:     Traceback (most recent call last):   File "D:\desktop\python.py", line 2, in &lt;module&gt;     from pathlib import Path ImportError: No module named pathlib</span>
<span class="comment-copy">i using python 2.7.8 shell</span>
<span class="comment-copy">@Y.Y.C: there is a backport of <code>pathlib</code> for Python 2. Run <a href="https://pypi.python.org/pypi/pathlib/" rel="nofollow noreferrer"><code>pip install pathlib</code></a> or <a href="https://www.python.org/downloads/" rel="nofollow noreferrer">install Python 3</a></span>
<span class="comment-copy">where i install pathlib?</span>
<span class="comment-copy">@Y.Y.C: just run the <code>pip</code> command. If you don't know what the command-line is or don't know what <code>pip</code> command does; ask a separate question (or (more likely) find an existing one).</span>
<span class="comment-copy">the decoding assumes the files are text</span>
<span class="comment-copy">I would encourage the usage of <code>os.path.join(tmpdirname, fn)</code> instead of <code>tmpdirname+"/"+fn</code></span>
<span class="comment-copy">You could open the temp_file as binary so you don't need to decode it, and use context manager for the file handle so you don't need the <code>f.close()</code> , e.g.  <code>with open(temp_file, 'wb') as f:</code> Even better you could replace the loop over <code>namelist</code> with the <code>zipfile.extractall</code> method and supply tmpdirname as the path. This doesn't answer the question though. The question mentions nothing about temp directories, it asks "i want to extract each archive to separate folder with the same name as the original zip file name and also <b>in the same place</b> as the original zip file"</span>
