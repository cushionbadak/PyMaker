<div class="post-text" itemprop="text">
<p>I've been researching the topic of using C++ code in Python, but haven't found a generic clean flexible way to wrap C++ library in the Python package.</p>
<p>The question is whether it's possible to use existing complex C++ library to create a <strong>regular</strong> Python library, that can be called exactly like native Python libraries, such as NumPy or SciPy. If yes, any references would be much appreciated. If there are examples/tutorials available - it would be even more useful.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>There are many, many ways.  Boost Python, <a href="http://www.boost.org/doc/libs/1_57_0/libs/python/doc/" rel="nofollow">http://www.boost.org/doc/libs/1_57_0/libs/python/doc/</a> , is very C++-specific and exploits C++ templates to the hilt (like all of Boost!-).  Part of more general (less C++ specific) approaches include manual C coding of Python extensions, per <a href="https://docs.python.org/3/extending/extending.html" rel="nofollow">https://docs.python.org/3/extending/extending.html</a> ; SWIG, per <a href="http://www.swig.org/Doc1.3/SWIGPlus.html" rel="nofollow">http://www.swig.org/Doc1.3/SWIGPlus.html</a> ; Cython, per <a href="http://docs.cython.org/src/userguide/wrapping_CPlusPlus.html" rel="nofollow">http://docs.cython.org/src/userguide/wrapping_CPlusPlus.html</a> ; ... and no doubt others I haven't come across yet.</p>
<p>The very existence of so many strong, actively maintained alternatives, hints that there's no "one size fits all" here!  If you're a template wizard I bet you'll swear by Boost; if you're not, I guess you're more likely to swear <em>at</em> it -- and so on, and so forth.</p>
<p>Personally, I tend to end up using Cython (or even just <code>ctypes</code>!-) for experimenting, manual extension coding when I decide I want to do a lot of Python work using a certain C++ library (and performance is crucial) -- and SWIG at work, because that's the standard there.  Haven't seriously used Boost in far too long -- a refresh on it goes on my not-so-tiny todo list for when my spare time gets more copious...:-).</p>
</div>
<span class="comment-copy">You should read the official docs on <a href="https://docs.python.org/3/extending/extending.html" rel="nofollow noreferrer">Extending Python with C and C++</a>.</span>
<span class="comment-copy">Thanks, Alex for great pointers!</span>
