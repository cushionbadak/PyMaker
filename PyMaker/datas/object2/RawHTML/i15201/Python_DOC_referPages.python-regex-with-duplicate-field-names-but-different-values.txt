<div class="post-text" itemprop="text">
<p>I have the string below and I am interested in extracting the bolded text.  *Just a note that the ID that I need must be connected the name Erik:</p>
<pre><code>"startRow":0,"endRow":1,"totalRows":2,"rowsReturned":2,"test":[{"id":1,"date":"2015-01-28 12:06:24","name":"first"},{**"id":8**,"date":"2015-01-29 07:39:21","name":"Erik"}
</code></pre>
<p>I am using the regex <code>("id":)(\d+)(,"date":)(.*)(,"name":"Erik")</code> but this returns to me id:1  </p>
<p>Is there any way to just get the id associated with the name erik?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a negated character class <code>[^,]*</code> instead of <code>.*</code> because <code>.*</code> is greedy by default and it matches all the characters as much as possible. Non-greedy regex <code>.*?</code> also won't work here because <code>.</code> matches also the character comma. This <code>[^,]*</code> matches any character but not of comma , zero or more times.</p>
<pre><code>("id":)(\d+)(,"date":)([^,]*)(,"name":"Erik")
</code></pre>
<p><a href="https://regex101.com/r/zM7yV5/12" rel="nofollow">DEMO</a></p>
<p>Remove the extra capturing groups to return only the id.</p>
<pre><code>&gt;&gt;&gt; s = '"startRow":0,"endRow":1,"totalRows":2,"rowsReturned":2,"test":[{"id":1,"date":"2015-01-28 12:06:24","name":"first"},{"id":8,"date":"2015-01-29 07:39:21","name":"Erik"}'
&gt;&gt;&gt; re.findall(r'"id":(\d+),"date":[^,]*,"name":"Erik"', s)
['8']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A much simpler way to do this is deserialize the JSON structure, and extract the relevant information. E.g.,</p>
<pre><code>import json

data = '''{"startRow":0,"endRow":1,"totalRows":2,"rowsReturned":2,"test":[{"id":1,"date":"2015-01-28 12:06:24","name":"first"},{"id":8,"date":"2015-01-29 07:39:21","name":"Erik"}]}'''
data = json.loads(data)

for row in data['test']:
    print("ID: {}".format(row['id']))
    print("Date: {}".format(row['date']))
    print("Name: {}".format(row['name']))
</code></pre>
</div>
<span class="comment-copy">Are you working with JSON data?  If so, why not parse it using <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow noreferrer"><code>json.loads</code></a> and then access the item you want by index?</span>
<span class="comment-copy">Thank-you it worked!!!</span>
