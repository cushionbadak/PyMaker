<div class="post-text" itemprop="text">
<p>I'm trying to parse some options when running a Python script.</p>
<pre><code>def main(argv):
    try:
        opts, args = getopt.getopt(argv,"a:p:i:r",["algo=", "population=", "iterations=", "random"])
    except getopt.GetoptError:
        printUsage()
        sys.exit(1)
    print(args, opts)
    #Afterwards, I parse the options
    #...

if __name__ == "__main__":
    main(sys.argv[1:])
</code></pre>
<p>However, when I run this</p>
<pre><code>python tsp.py cities.txt -p 4
</code></pre>
<p>The <code>print(args, opts)</code> yields this.</p>
<pre><code>(['cities.txt', '-p', '4'], [])
</code></pre>
<p>Why is it parsing options as arguments?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>getopt</code> requires that all <code>-</code> options come <em>first</em>. <code>-p 4</code> instead came <em>after</em> a non-dash option.</p>
<p><code>python tsp.py -p 4 cities.txt</code> will be parsed correctly.</p>
<p>You may want to switch to using the <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow"><code>argparse</code> library</a> instead; it is far more flexible and can parse optional command line switches in any location, as it also handles required arguments explicitly.</p>
</div>
<span class="comment-copy">You could also use <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">argparse</a> for more flexible and comfortable argument handling</span>
<span class="comment-copy">Darn it! I had no idea. I was getting dangerously close to not meeting a deadline because of this... Thanks.</span>
