<div class="post-text" itemprop="text">
<p>I've made a little script to calculator percent; however, I wish to actually include the '%' within the message printed...</p>
<p>Tried this at the start - didn't work...</p>
<blockquote>
<p>oFile.write("Percentage: %s%"\n" % percent)</p>
</blockquote>
<p>I then tried <code>"Percentage: %s"%"\n" % percent"</code> which didn't work.</p>
<p>I'd like the output to be:   Percentage: x%</p>
<p>I keep getting "TypeError: not all arguments converted during string formatting" </p>
</div>
<div class="post-text" itemprop="text">
<p>To print the <code>%</code> sign you need to 'escape' it with another <code>%</code> sign: </p>
<pre><code>percent = 12
print "Percentage: %s %%\n" % percent  # Note the double % sign
&gt;&gt;&gt; Percentage: 12 %
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or use <code>format()</code> function, which is more elegant.</p>
<pre><code>percent = 12
print "Percentage: {}%".format(percent)
</code></pre>
<p><strong>4 years later edit</strong></p>
<p>Now In Python3x <code>print()</code> requires  parenthesis.</p>
<pre><code>percent = 12
print ("Percentage: {}%".format(percent))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The new Python 3  approach is to use format strings.</p>
<pre><code>percent = 12
print("Percentage: {0} %\n".format(percent))
&gt;&gt;&gt; Percentage: 12 %
</code></pre>
<p>This is also supported in Python &gt; 2.6.</p>
<p>See the docs here: <a href="https://docs.python.org/3/library/stdtypes.html#str.format" rel="nofollow">Python 3</a> and  <a href="https://docs.python.org/2/library/stdtypes.html#str.format" rel="nofollow">Python 2</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Format is more elegant but the modulo sign seems to be quicker!</p>
<p><a href="http://inre.dundeemt.com/2016-01-13/string-modulo-vs-format-fight/" rel="nofollow noreferrer">http://inre.dundeemt.com/2016-01-13/string-modulo-vs-format-fight/</a> - shows that modulo is ~30% faster!</p>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/1640487/python-string-replacement-with-character-kwargs-weirdness">python string replacement with % character/**kwargs weirdness</a></span>
<span class="comment-copy">@OliverW.: yes but that one's title and wording are very unclear, so this one should be canonical</span>
<span class="comment-copy">Still working at 2019 with python 3.5.2</span>
<span class="comment-copy">Note that no need <code>0</code> inside bracelets</span>
<span class="comment-copy">@howaboutNO <code>0</code> is required if you're using Py2.6</span>
