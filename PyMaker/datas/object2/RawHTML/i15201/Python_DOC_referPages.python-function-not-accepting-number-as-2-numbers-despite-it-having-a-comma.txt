<div class="post-text" itemprop="text">
<p>This is probably going to be fairly obvious but for some reason it just DOESN'T work. </p>
<p>The function I have is like this:</p>
<pre><code>def hours(num,num2):

    return num , " hours and " , num2 , " minutes."
</code></pre>
<p>the function that's plugging into that is:</p>
<pre><code>total(final) #this isn't really important, just wanted to show that it was a function
             #plugging into another function. This function puts out 2 numbers in a (n,m)
             #format.
</code></pre>
<p>which comes out with a number that's in a (n,m) format 
When I try to plug that (n,m) into the first function though, it doesn't work? I think it should because it's separated by a comma, and that's what the first function calls for, but I don't know. </p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>def total(final):
    return (10, 20)

def hours(num1, num2):
    print num1, num2

result = total(4)
hours(*result)  #explode result tuple into two arguments

--output:--
10 20
</code></pre>
<p>A tuple, like <code>(10, 20)</code> is a single <em>thing</em>, and therefore it counts as only one argument.  It does NOT work like this:</p>
<pre><code>    hours( (10, 20) )
             |   |
             V   V
def hours(num1, num2):
</code></pre>
<p>Instead it works like this:</p>
<pre><code>  hours( (10, 20) )
         |------|
             |   
             V   
 def hours(num1, num2):
</code></pre>
<p>...which means you didn't provide an argument for num2.</p>
<p>However, writing:</p>
<pre><code>hours( *(10, 20) )
</code></pre>
<p>explodes the tuple into two arguments:</p>
<pre><code>hours(10, 20)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try calling <em>hours()</em> with the <code>*</code> to unpack the tuple:</p>
<pre><code>time = (3, 15)
print(hours(*time))        # unpack the tuple
</code></pre>
<p>Here is the relevant section of the docs:
<a href="https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists" rel="nofollow">https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists</a></p>
</div>
<div class="post-text" itemprop="text">
<p>It's a bit hard to tell based on the wording of your question, but I think what you're saying is that this:</p>
<pre><code>hours(total(final))
</code></pre>
<p>doesn't work as expected, where <code>total</code> returns something like <code>return n,m</code>?</p>
<p>If so, you need to use what's commonly called the <em>splat</em> operator, python's syntax for unpacking arguments:</p>
<pre><code>hours(*total(final))
</code></pre>
<p>The <code>*</code> operator, when used on an input parameter to a method, expands out a list/tuple/iteratable and uses the results as positional arguments to a method. I.E.</p>
<pre><code>ex = 1,2
foo(*ex)
# is equivalent to
foo(1,2)
</code></pre>
<p>If you omit the <code>*</code> operator, a tuple would be passed together as a single positional argument, rather than being unpacked.</p>
</div>
<span class="comment-copy">You would have to call <code>hours(*total(final))</code> to force it to unpack.</span>
<span class="comment-copy">You need the <code>*</code> stuff, as hinted by Mr Bothwell and explained in some of the answers, but I think that doesn't stop your troubles, as it seems to me that what your <code>hours</code> function returns is not what you expect... either <code>return num+" hours and "+num2 +" minutes."</code> or <code>return "%d hours and %d minutes."%(num, num1)</code> looks more useful to me --- but I may be wrong.</span>
<span class="comment-copy">It worked! Thank you so much!!</span>
<span class="comment-copy">@bardofshipping, You're welcome.  As an alternative, you could define hours like this:  <code>def hours(numbers):</code>, then for the first line of the function body write:  <code>num1, num2 = numbers</code></span>
