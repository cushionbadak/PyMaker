<div class="post-text" itemprop="text">
<p>I'm working on a school project and I have a problem. I have to write code for apothecary where clients can buy medicine. So, I need to make restrictions, which one doesn't go with others and etc. Here is the code:</p>
<pre><code>def prodajLek():
    lekovi = Fajl1.UcitavanjeLekova()
    lekoviRed = []
    brojacZaForPetlju = 1
    n = 0
    cena = 0
    kolicina = []
    korpa = []
    rednibrojevilekova = []
    ukupnacena = 0
    print("  Fabricki naziv     Genericki naziv    Serijski broj    Kolicina        Cena  \n")
    for i in lekovi:
        x = i.strip().split("|")
        lekoviRed.append(x)
        if lekoviRed[n][5] == "False":
            print(brojacZaForPetlju,"\t {:10} \t {:10} \t\t\t {:3} \t\t\t {:4} \t\t  {:5}".format(x[0],x[1],x[2],x[3],x[4]))
        brojacZaForPetlju = brojacZaForPetlju + 1
        n = n + 1
    print("\n\n\n\n")
    rednibrleka = input("Izaberite redni broj leka koji zelite da prodate:\n&gt;&gt;\t")
    rednibrleka = int(rednibrleka)
    rednibrleka = rednibrleka - 1
    rednibrojevilekova.append(rednibrleka)
    kolicinaZahteva = input("Koju kolicinu zelite da prodate?\n&gt;&gt;\t")
    kolicinaZahteva = int(kolicinaZahteva)
    if kolicinaZahteva &gt; int(lekoviRed[rednibrleka][3]):
        print("Nema toliko na lageru!\n")
        Fajl1.LekarMenu()
    kolicina.append(kolicinaZahteva)
    cena = int(lekoviRed[rednibrleka][4])
    korpa.append(cena)
    print("Da li zelite da kupite jos lekova?\n1.Da\n2.Ne\n")
    nastavakKupovine = input("&gt;&gt;")
    if nastavakKupovine == "1":
        prodajLek()

    elif nastavakKupovine == "2":
        Fajl1.LekarMenu()
</code></pre>
<p>So, when I get to the nastavakKupovine input, when I press 1, I need to continue shopping and store my row numbers, my price and quantity in arrays rednibrojlekova = [] , korpa = [] and kolicina = []. But I have a problem, because I dont know how to continue this without reseting these arrays to empty.</p>
</div>
<div class="post-text" itemprop="text">
<p>The standard idiom for what you want to do is a <code>while True</code> loop. Rather than show how to change your (rather long) function, here's a very simple one which hopefully shows the principle in a straightforward way:</p>
<pre><code>def ask():
    answers = []
    while True:
        response = input("What do you have to say? ")
        answers.append(response)
        check = input("Type 'q' to quit, anything else to repeat: ")
        if check == "q":
            break
        else:
            continue
    return answers
</code></pre>
<p>For this simple function, the <code>else: continue</code> part isn't necessary, because the loop will continue anyway, but I've included it so you can see how to use it.</p>
<p>Here's an example of the function in action:</p>
<pre class="lang-none prettyprint-override"><code>&gt;&gt;&gt; ask()
What do you have to say? Something
Type 'q' to quit, anything else to repeat: 
What do you have to say? Another thing
Type 'q' to quit, anything else to repeat: 
What do you have to say? Ok, done
Type 'q' to quit, anything else to repeat: q
['Something', 'Another thing', 'Ok, done']
&gt;&gt;&gt; 
</code></pre>
<p>You can find out more about <code>while</code>, <code>break</code> and <code>continue</code> by reading the <a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow">More Control Flow Tools</a> chapter of the official Python tutorial.</p>
</div>
<span class="comment-copy">thats it,thank you very much.</span>
