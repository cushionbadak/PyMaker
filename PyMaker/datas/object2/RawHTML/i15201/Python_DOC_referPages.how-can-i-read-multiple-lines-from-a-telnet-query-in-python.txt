<div class="post-text" itemprop="text">
<p>I am attempting to communicate with a device using Python's telnetlib module. I seem to be able to establish a connection and pass my query to the device, however, the output is not what I expect.</p>
<p>Here is my simplified code:</p>
<pre><code>import telnetlib
import time

HOST = "10.10.10.71"

tn = telnetlib.Telnet(HOST, port=55555, timeout=60)

time.sleep(5)                # Give the processor time to connect

tn.write(b'v' + b'\r\n')     # Get the processor version, using 'v'

print(tn.read_eager().decode('utf-8'))

tn.close()                   # Close the connection
</code></pre>
<p>After executing this code, all the terminal displays is: mpa:? -- not the processor information I was expecting.</p>
<p>When I use a Telnet client, after establishing the connection, I get an <em>mpa:?</em> prompt, which indicated the device is ready for my command. I then type in 'v', which should produce an output in this format:</p>
<pre><code>mpa:? v

FIRMWARE CONFIGURATION:
Processor Firmware Type
Build Number
Copyright Info

HARDWARE CONFIGURATION:
Line 1          - xxxx
Line 2          - xxxx
Line 3          - xxxx
...

mpa:?
</code></pre>
<p>After the query, the <em>mpa:?</em> prompt is displayed, ready for the next command.</p>
<p>In place of <code>print(tn.read_eager().decode('utf-8'))</code>, I have also tried <code>print(tn.read_all().decode('utf-8'))</code>, but this times out with the following error message:</p>
<pre><code>Traceback (most recent call last):
File "C:/Python/Telnet_logger_1.py", line 14, in &lt;module&gt;
print(tn.read_all().decode('utf-8'))
File "C:\Python34\lib\telnetlib.py", line 335, in read_all
self.fill_rawq()
File "C:\Python34\lib\telnetlib.py", line 526, in fill_rawq
buf = self.sock.recv(50)
socket.timeout: timed out
</code></pre>
<p>Would anyone be able to point me into the right direction, or let me know what I'm doing wrong?</p>
<p>Many thanks!!</p>
</div>
<div class="post-text" itemprop="text">
<p>I have resolved the problem by adding a while-loop to print each line after a new line and carriage return has been read in:</p>
<pre><code>import telnetlib

HOST = "10.10.10.71"

tn = telnetlib.Telnet(HOST, port=55555, timeout=60)

tn.read_until(b"mpa:?")

tn.write(b'v' + b'\n\r')

while True:
    line = tn.read_until(b"\n\r")  # Check for new line and CR
    print(line)
    if (b"mpa:?") in line:   # If last read line is the prompt, end loop
        break

tn.close()
</code></pre>
</div>
<span class="comment-copy">I suspect that you need to read the <code>mpa:?</code> prompt returned by the device before you attempt to send it a command. Have you tried something like  <code>tn.read_until(b"mpa:?")</code>, which is similar to the example in <a href="https://docs.python.org/3/library/telnetlib.html" rel="nofollow noreferrer">the docs</a>?</span>
<span class="comment-copy">@PM2Ring - Thanks for your suggestion. I tried to remove the <code>time.sleep(5)</code> and replaced it with <code>tn.read_until(b"mpa:?")</code> - I still get the timeout error when I use tn.read_all(), and when I use tn.read_eager(), I get no output at all.</span>
<span class="comment-copy">I'm not sure what to suggest. I have only limited experience with telnetlib, but I have used it successfully (in Python 2.6.) to communicate with my ADSL modem. Since the modem always terminates its output with a command prompt I use <code>tn.read_until(prompt)</code> to read data from it.</span>
