<div class="post-text" itemprop="text">
<p>I wrote a tokenize function that basically reads a string representation and splits it into list of words.</p>
<p>My code:</p>
<pre><code>def tokenize(document):
    x = document.lower() 
    return re.findall(r'\w+', x)
</code></pre>
<p>My output:</p>
<pre><code>tokenize("Hi there. What's going on? first-class")
['hi', 'there', 'what', 's', 'going', 'on', 'first', 'class']
</code></pre>
<p>Desired Output:</p>
<pre><code>['hi', 'there', "what's", 'going', 'on', 'first-class']
</code></pre>
<p>Basically I want the apostrophed words and hypen words to remain as a single word in list along with double quotes. How can i change my function to get the desired output.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>\w+</code> matches one or more <em>word characters</em>; this does not include apostrophes or hyphens.</p>
<p>You need to use a <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">character set</a> here to tell Python exactly what you want to match:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; def tokenize(document):
...     return re.findall("[A-Za-z'-]+", document)
...
&gt;&gt;&gt; tokenize("Hi there. What's going on? first-class")
['hi', 'there', "what's", 'going', 'on', 'first-class']
&gt;&gt;&gt;
</code></pre>
<p>You'll notice too that I removed the <code>x = document.lower()</code> line.  This is no longer necessary since we can match uppercase characters by simply adding <code>A-Z</code> to the character set.</p>
</div>
<span class="comment-copy">Can you split on spaces?</span>
