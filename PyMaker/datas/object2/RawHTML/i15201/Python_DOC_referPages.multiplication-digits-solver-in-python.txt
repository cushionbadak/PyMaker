<div class="post-text" itemprop="text">
<p>I am creating a program in Python that finds the digits that can match the letters of the following multiplication, for example:</p>
<p>OTTO x<br/>
____I<br/>
STOP<br/>
( meaning OTTO x I = STOP )</p>
<p>Here is the code I've been working on, but it doesn't seem to stop...</p>
<pre><code># OTTO x I = STOP

times = 1
digit_o = 0
digit_t = 0
digit_i = 1
digit_s = 0
digit_p = 0

concatenation_otto = str(str(digit_o) + str(digit_t) + str(digit_t) + str(digit_o))
concatenation_stop = str(str(digit_s) + str(digit_t) + str(digit_o) + str(digit_p))

def amend() :
    concatenation_otto = str(str(digit_o) + str(digit_t) + str(digit_t) + str(digit_o))
    concatenation_stop = str(str(digit_s) + str(digit_t) + str(digit_o) + str(digit_p))
amend()

print "working..."
while (concatenation_otto * digit_i == concatenation_stop) :
    while times == 7 :
        if times == 1 :
            digit_o += 1
            times += 1
            print digit_o + " / " + str(times)
            amend()
            break
        elif times == 2 :
            digit_t += 1
            times += 1
            amend()
            break
        elif times == 3 :
            digit_i += 1
            times += 1
            amend()
            break
        elif times == 4 :
            digit_s += 1
            times += 1
            amend()
            break
        elif times == 5 :
            digit_p += 1
            times += 1
            amend()
            break

        times == 1
        continue

print digit_o
print concatenation_otto + " x " + str(digit_i) + " = " + concatenation_stop
</code></pre>
<p>Please help and I hope you fully understood what I meant. Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no need to reinvent the wheel. Use <a href="https://docs.python.org/3/library/itertools.html#itertools.permutations" rel="nofollow"><code>itertools.permutations</code></a> to create 5-permutations of the digits, then check the result.</p>
<pre><code>import itertools

for O, T, I, S, P in itertools.permutations((1,2,3,4,5,6,7,8,9), 5):
    OTTO = 1000 * O + 100 * T + 10 * T + O
    STOP = 1000 * S + 100 * T + 10 * O + P
    if OTTO * I == STOP:
        print(O, T, I, S, P)
        break
</code></pre>
</div>
<span class="comment-copy"><i>I am creating a program in Python</i> ... Continue</span>
<span class="comment-copy">What multiplication?</span>
<span class="comment-copy">Are you trying to solve "OTTO times I equals STOP", or "OTTO times (four underscores plus I) equals STOP"? Do the underscores represent the bar separating the multiplication from the solution, or are they supposed to be "fill in the blanks"?</span>
<span class="comment-copy">@user5061 <code>OTTO X I = STOP</code></span>
<span class="comment-copy">Do you mean <code>(O * T * T * O) * I = S * T * O * P</code> or do you mean (Which I think is more likely) <code>I(1000O + 100T + 10T + O) = 1000S + 100T + 10O + P</code>? Any of which is off-topic not to do with programming.</span>
