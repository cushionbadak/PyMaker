<div class="post-text" itemprop="text">
<p>After I port my script to Windows from Mac (both python 2.7.*), I find that all the logging not working in subprocess, only the <code>father</code>'s logging are write to file. Here is my example code:</p>
<pre><code># test log among multiple process env
import logging, os
from multiprocessing import Process

def child():
    logging.info('this is child')

if __name__ == '__main__':
    logging.basicConfig(filename=os.path.join(os.getcwd(), 'log.out'),
            level = logging.DEBUG, filemode='w',
            format = '[%(filename)s:%(lineno)d]: %(asctime)s - %(levelname)s: %(message)s')


    p = Process(target = child, args = ())
    p.start()
    p.join()

    logging.info('this is father')
</code></pre>
<p>the output only write <code>this is father</code> into log.out, and the child's log missing. How to make logging woking in child process?</p>
</div>
<div class="post-text" itemprop="text">
<p>Each child is an independent process, and file handles in the parent may be closed in the child after a fork (assuming POSIX). In any case, logging to the same file from multiple processes is not supported. See <a href="https://docs.python.org/2/howto/logging-cookbook.html#logging-to-a-single-file-from-multiple-processes" rel="nofollow">the documentation</a> for suggested approaches.</p>
</div>
<span class="comment-copy"><code>multiprocessing</code> itself has a logging module. You have to use <code>multiprocessing.get_logger()</code> to create a logger</span>
<span class="comment-copy">even if you use Python 2.7 it might be useful to <a href="https://docs.python.org/3/howto/logging-cookbook.html#logging-to-a-single-file-from-multiple-processes" rel="nofollow noreferrer">look at Python 3 docs that has a code example</a></span>
