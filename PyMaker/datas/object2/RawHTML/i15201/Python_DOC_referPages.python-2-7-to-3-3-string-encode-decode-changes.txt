<div class="post-text" itemprop="text">
<p>I am just fixing a 2.7 script to 3.5 and ran into some decode/encode issues.</p>
<pre><code> id = entry.attrib['{http://www.opengis.net/gml/3.2}id']
 code = id.split('-')[2]
 doc['code'] = (code + u"-area").decode('utf-8')
</code></pre>
<p>above is the 2.7 version that reads stuff from a xml file. What is the correct way of doing this in 3.3 since some encoding stuff was changed and 'str' object has no attribute 'decode' any more.</p>
<p>I have seen this also: <code>.encode('UTF-8').decode('utf-8')</code>  do this have any effect ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3.X already holds unicode characters, so I think you do not need to use <code>.decode('utf-8')</code>. In the moment you need to store in someway/somewhere your <code>doc['code']</code> then you can use <code>.encode('utf-8')</code> and then retrieve it through <code>.decode('utf-8')</code></p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/howto/pyporting.html#text-versus-binary-data" rel="nofollow noreferrer">docs.python.org/3/howto/pyporting.html#text-versus-binary-data</a> - The initial document should be parsed correctly, if possible.</span>
