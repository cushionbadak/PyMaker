<div class="post-text" itemprop="text">
<p>I am looking to extract the file extension if it exists for web addresses (trying to identify which links are to a list of extensions which I do not want e.g. <code>.jpg</code>, <code>.exe</code> etc).</p>
<p>So, I would want to extract from the following URL <code>www.example.com/image.jpg</code> the extension <code>jpg</code>, and also handle cases when there is no extension such as <code>www.example.com/file</code> (i.e. return nothing). </p>
<p>I can't think how to implement it, but one way I thought of was to get everything after the last dot,  which if there was an extension would allow me to look that extension up, and if there wasn't, for the example <code>www.example.com/file</code> it would return <code>com/file</code>  (which given is not in my list of excluded file-extensions, is fine).</p>
<p>There may be an alternative superior way using a package I am not aware of, which could identify what is/isn't an actual extension. (i.e. cope with cases when the URL does not actually have an extension).</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/2/library/urlparse.html" rel="nofollow"><code>urlparse</code></a> module (<a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow"><code>urllib.parse</code></a> in Python 3) provides tools for working with URLs. Although it doesn't provide a way to extract the file extension from a URL, it's possible to do so by combining it with <a href="https://docs.python.org/2/library/os.path.html#os.path.splitext" rel="nofollow"><code>os.path.splitext</code></a>:</p>
<pre><code>from urlparse import urlparse
from os.path import splitext

def get_ext(url):
    """Return the filename extension from url, or ''."""
    parsed = urlparse(url)
    root, ext = splitext(parsed.path)
    return ext  # or ext[1:] if you don't want the leading '.'
</code></pre>
<p>Example usage:</p>
<pre><code>&gt;&gt;&gt; get_ext("www.example.com/image.jpg")
'.jpg'
&gt;&gt;&gt; get_ext("https://www.example.com/page.html?foo=1&amp;bar=2#fragment")
'.html'
&gt;&gt;&gt; get_ext("https://www.example.com/resource")
''
</code></pre>
</div>
<span class="comment-copy">@user1093967 Nope, works just fine. Try it and see!</span>
