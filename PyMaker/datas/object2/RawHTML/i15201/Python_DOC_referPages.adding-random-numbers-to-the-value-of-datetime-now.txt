<div class="post-text" itemprop="text">
<p>Basically, I'm trying to make a program that will calculate the average speed between two points that are 200m apart, and of course convert that into mph so I can say whether it is above or below the speed limit. I'm having problems making it so that it adds random numbers to the value of datetime.now() as it is telling me "NameError: name 'random' is not defined".
There's probably an incredibly simple solution to this, I'm just very unsure of how to use the random in this instance.
I'm not really sure how to go about fixing this, thanks for any help.
Here is my code so far:</p>
<pre><code>from datetime import date, datetime, time, timedelta
from random import seed, randrange, uniform
import time
def timeDelta():
    print("Average Speed Checker")
    start = (input("Car has passed Cam1: "))
    if start in ("y"):
        camInput1 = datetime.now()
        print(camInput1)
        print("Car is travelling...")
        time.sleep(1)
        print("Car is travelling...")
        time.sleep(1)
        print("Car has passed cam2")
        camInput2 = camInput1 + timedelta(seconds = random.uniform(5, 10))
        timeDelta = camInput2 - camInput1
        distance = 200
        duration = timeDelta.total_seconds()
        print("Time Delta is equal to: {0}".format(duration))
        speedCarMs = distance/duration
        print("Car is travelling in m/s at: {0}".format(speedCarMs))
        speedCarMph = 2.237*speedCarMs
        print("Car is traveelling in MPH at: {0}".format(speedCarMph))


print("Choose which function you want to use: ")
while True:
    choice = (input("Choice: "))
    if choice in ("speed"):
        timeDelta()
    else:
        print("Invalid response")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Because you imported like this:</p>
<pre><code>from random import seed, randrange, uniform
</code></pre>
<p>you don't need to reference the namespace. Instead of this:</p>
<pre><code>timedelta(seconds = random.uniform(5, 10))
</code></pre>
<p>Try:</p>
<pre><code>timedelta(seconds=uniform(5, 10))
</code></pre>
<p>This is because when you import like <code>from ... import ...</code>, it adds them to the current scope. Just like how <code>a = 29</code> would add the variable <code>a</code> to the scope with value <code>29</code>, <code>from random import uniform</code> would add <code>uniform</code> to the scope as a function.</p>
</div>
<div class="post-text" itemprop="text">
<p>You imported the name <code>uniform</code> (among others), <strong>not</strong> the name <code>random</code>:</p>
<pre><code>from random import seed, randrange, uniform
</code></pre>
<p>This adds <code>seed</code>, <code>randrange</code> and <code>uniform</code> to your globals.</p>
<p>Simple remove the <code>random.</code> prefix and use the <code>uniform</code> global directly:</p>
<pre><code>camInput2 = camInput1 + timedelta(seconds = uniform(5, 10))
</code></pre>
<p>Note that you can simplify your code here; there is no need to add to <code>camInput1</code> then subtract that again. Just use:</p>
<pre><code>timeDelta = timedelta(seconds = uniform(5, 10))
</code></pre>
<p><code>datetime_value + timedelta_value - datetime_value</code> produces just <code>timedelta_value</code> again.</p>
</div>
<span class="comment-copy">Because you specifically <code>from random import seed, randrange, uniform</code>, so you only need e.g. <code>uniform(5, 10)</code>; <code>random.uniform</code> is for when you just <code>import random</code>.</span>
<span class="comment-copy">unrelated: <code>datetime.now()</code> is a local time that may be nonmonotonous and ambiguous, use <code>datetime.utcnow()</code> or just work with "seconds since the epoch" (<code>time.time()</code>) instead. See more details in <a href="http://stackoverflow.com/q/26313520/4279">Find if 24 hrs have passed between datetimes - Python</a>. You should probably use <a href="https://docs.python.org/3/library/time.html#time.monotonic" rel="nofollow noreferrer"><code>time.monotonic()</code></a> to measure the time interval.</span>
