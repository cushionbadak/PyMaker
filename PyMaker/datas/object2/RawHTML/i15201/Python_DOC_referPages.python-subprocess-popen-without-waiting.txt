<div class="post-text" itemprop="text">
<p>I'm using Python 3.4.2 on Windows. In script1.py I'm doing this:</p>
<pre><code>myProc = subprocess.Popen([sys.executable, "script2.py", "argument"])
myProc.communicate()
</code></pre>
<p>it works and call script2.py . 
The problem is that in script2.py there is a infinite loop (there must be) and the script1.py is waiting for script2.py to finish. How can I tell to script1.py to just call script2.py and don't wait for the process to finish?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just don't call <code>myProc.communicate()</code> if you don't want to wait. <code>subprocess.Popen</code> will start the process.</p>
</div>
<div class="post-text" itemprop="text">
<p>Call the script in another window.</p>
<pre><code>myProc = subprocess.Popen(["start", sys.executable, "script2.py", "argument"])
myProc.communicate()
</code></pre>
<p><code>start</code> is a windows shell function that runs a program separately, allowing the current one to continue its process. I haven't tested this as I've no access to a Windows OS, but The linux equivalent (<code>nohup</code>) works as required.</p>
<p>If you need fine control over what happens with script2.py, refer to the <code>multiprocessing</code> module <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow">here</a>.</p>
</div>
<span class="comment-copy">Does this help? <a href="http://stackoverflow.com/questions/13243807/popen-waiting-for-child-process-even-when-the-immediate-child-has-terminated" title="popen waiting for child process even when the immediate child has terminated">stackoverflow.com/questions/13243807/â€¦</a></span>
<span class="comment-copy">Unrelated: as  a more flexible alternative, you could import the script as a Python module instead (use <code>if __name__ =="__main__"</code>  guard in it, to avoid running the code on import) and call functions directly or using <code>threading</code>, <code>multiprocessing</code>, <code>concurrent.futures</code> if needed.</span>
<span class="comment-copy">I can't believe it..sorry for the silly question, and thanks for the reply.</span>
