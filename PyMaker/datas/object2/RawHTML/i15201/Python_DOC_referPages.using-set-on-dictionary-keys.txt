<div class="post-text" itemprop="text">
<p>For my program, I wish to cleanly check whether any elements in a list is a key in a dictionary. So far, I can only think to loop through the list and checking.</p>
<p>However, is there any way to simplify this process? Is there any way to use sets? Through sets, one can check whether two lists have common elements.</p>
</div>
<div class="post-text" itemprop="text">
<p>This should be easy using the builtin <a href="https://docs.python.org/2/library/functions.html#any" rel="nofollow"><code>any</code></a> function:</p>
<pre><code>any(item in dct for item in lst)
</code></pre>
<p>This is quick, efficient and (IMHO) quite readible.  What could be better?  :-)</p>
<hr/>
<p>Of course, this doesn't tell you <em>which</em> keys are in the dict.  If you need that, then you're best recourse is to use dictionary view objects:</p>
<pre><code> # python2.7
 dct.viewkeys() &amp; lst  # Returns a set of the overlap

 # python3.x
 dct.keys() &amp; lst  # Same as above, but for py3.x
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can test for an intersection between the dictionary's keys and the list items using <a href="https://docs.python.org/3/library/stdtypes.html#dict.keys" rel="nofollow"><code>dict.keys</code></a>:</p>
<pre><code>if the_dict.keys() &amp; the_list:
    # the_dict has one or more keys found in the_list
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; the_dict = {'a':1, 'b':2, 'c':3}
&gt;&gt;&gt; the_list = ['x', 'b', 'y']
&gt;&gt;&gt; if the_dict.keys() &amp; the_list:
...     print('found key in the_list')
...
found key in the_list
&gt;&gt;&gt;
</code></pre>
<p>Note that in Python 2.x, the method is called <a href="https://docs.python.org/2/library/stdtypes.html#dict.viewitems" rel="nofollow"><code>dict.viewkeys</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>As far as efficiency goes, you can't be any more efficient than looping through the list.  I would also argue that looping through the list is already a simple process.  </p>
</div>
<span class="comment-copy">Because any only returns True or False? So you won't get the common elements from that.</span>
<span class="comment-copy">The original question is "I wish to cleanly check whether any elements in a list is a key in a dictionary."  So this solves that question.</span>
<span class="comment-copy">@user3467349 -- But that's what OP asked for...  "For my program, I wish to cleanly check whether any elements in a list is a key in a dictionary."  OP didn't ask to know <i>which</i> keys are in the dict.  If you want to know which keys, then that's a different story ...</span>
<span class="comment-copy">No need for making a <code>set</code>; in modern Python you could use <code>the_dict.keys() &amp; the_list</code>, or in 2, <code>the_dict.viewkeys() &amp; the_list</code>.</span>
<span class="comment-copy">That's an awesome trick that I had no idea existed.</span>
<span class="comment-copy">Thanks, I apologize for stating the question in the wrong way. I probably should have said a cleaner way.</span>
