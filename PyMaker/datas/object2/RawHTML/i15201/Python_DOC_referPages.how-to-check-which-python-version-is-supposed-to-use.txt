<div class="post-text" itemprop="text">
<p>Put the case that I have a bunch of python scripts all beginning either with <code>#!/usr/bin/env python</code> or with nothing (no shebang at all). Some of those scripts need python <code>2.7</code> (or any <code>2.x</code> version), some of them need python <code>3.x</code> and some of them can run on both (these check the python version themselves).</p>
<p>I am on a system with two versions of python: <code>python2</code> and <code>python3</code>. The general <code>python</code> programm is just a symlink.</p>
<p>As this <code>python</code> symlink can change I want to edit the shebangs in the scripts to specify if this script should use <code>python2</code> or <code>python3</code>. Is there any possibility/program/script to 'parse' a python script and determine if it should get run by <code>python2</code> or <code>python3</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://www.python.org/dev/peps/pep-0394/" rel="nofollow">PEP 394 - The "python" Command on Unix-Like Systems</a>:</p>
<blockquote>
<ul>
<li><p>... <code>python</code> should be used in the shebang line only for scripts that are
  source compatible with both Python 2 and 3.</p></li>
<li><p>in preparation for an eventual change in the default version of
  Python, Python 2 only scripts should either be updated to be source
  compatible with Python 3 or else to use <code>python2</code> in the shebang line.</p></li>
</ul>
</blockquote>
<p>In general, the same script could be run by both Python 2 and 3. It means that (at least for some scripts) you have to read the source and decide for yourself what Python version should be used.</p>
<blockquote>
<p>Is there any possibility/program/script to 'parse' a python script and
  determine if it should get run by python2 or python3?</p>
</blockquote>
<p>You could try to <em>compile</em> your scripts using <code>python2</code> and <code>python3</code> binaries, try:</p>
<pre><code>$ python -mcompileall -h
</code></pre>
<p>If only <code>python3</code> binary can compile a script, you could add <code>python3</code> into the shebang.</p>
<p><a href="https://docs.python.org/3/howto/pyporting.html" rel="nofollow">Modernize, Futurize, Pylint packages</a> could also help to find <code>python2</code>-only, <code>python3</code>-only scripts automatically.</p>
<p><a href="https://docs.python.org/3/library/2to3.html" rel="nofollow"><code>lib2to3</code></a> allows you to detect <code>python2</code> or <code>python3</code> markers such the presence of a <code>print</code> statement in a source (Python 2 marker) or the presence of <code>yield from</code> in a source (Python 3 marker) but it is probably too low level.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, put <code>python2</code> or <code>python3</code> on the <code>#!</code> line.  On *nix, when you try to 'execute' file directly, the OS should read the line and select the proper binary.  On Windows, omit 'usr/bin/env and use py.exe to run the file, which is now installed with the PSF CPython installer.  Example: tem.py contains</p>
<pre><code>#! python2
import sys; print(sys.version)
</code></pre>
<p>At command line</p>
<pre><code>C:\Users\Terry&gt;py /programs/python34/tem.py
2.7.9 (default, Dec 10 2014, 12:28:03) [MSC v.1500 64 bit (AMD64)]
</code></pre>
<p>If I change 2 to 3 in file, output changes to 3.4.2.</p>
</div>
<span class="comment-copy">Have you tried running <code>2to3</code> on the scripts to see if it finds anything? Clear indications might be the use of <code>print x</code> instead of <code>print(x)</code>. There are other breaking differences between py2 and py3. If <code>2to3</code> doesn't complain about anything, it's written for python3.</span>
<span class="comment-copy">@kdopen Is 2to3 an official tool? Or is this an external program?</span>
<span class="comment-copy">Should be installed as part of your python distro. But it's only a rough guide. Really, you need to examine the script in detail looking for things which make it clear which version they were writing for.</span>
<span class="comment-copy">Yep, but I know that most of those 'generic' python scripts are written only for version 2.x</span>
<span class="comment-copy">But I'll try compilation tomorrow :)</span>
<span class="comment-copy">The question was, how I can determine what version of python one should use for a specific script. By checking if <code>print</code> or <code>print()</code> is used for example.</span>
