<div class="post-text" itemprop="text">
<p>Is there a better way in python to generate a list dictionaries, containing values from lists, than using nested <code>for</code> loops?</p>
<p>Example:</p>
<pre><code>alphabet = ['a', 'b', 'c', 'd', 'e', 'f', ... ,'z']
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
chars = ["!", "@", "#", "$"]

objects = []
for letter in alphabet:
    for number in numbers:
        for char in characters:
            objects.append({
                'letter': letter,
                'number': number,
                'char': char
            })

print objects
# [{letter: 'a', 'number': 0, 'char':'!'}, {letter: 'a', 'number': 0, 'char':'@'}, ...
</code></pre>
<p>I'm trying to figure out how to make a list of dicts that contains every combination of three lists.  Using nested <code>for</code> loops in the example above, this is 26 x 10 x 4 loops.  I looked at using <code>zip</code>, but only merges lists and doesn't give every unique combination.</p>
<p>Is there a pythonic way to get it done quicker than 26 x 10 x 4 loops?</p>
<p>Is there a way to accomplish this lazily via a generator?  If so, how?</p>
</div>
<div class="post-text" itemprop="text">
<p>To produce the generator you requested:</p>
<pre><code>from itertools import product

alphabet = ['a', 'b', 'c', 'd', 'e', 'f', ... ,'z']
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
chars = ["!", "@", "#", "$"]

combinations = product(alphabet, numbers, chars)
generator = ({'letter': l, 'number': n, 'char': c} for l, n, c in combinations)
</code></pre>
<p>As this is a generator, it will be evaluated only when needed:</p>
<pre><code>list(generator)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow"><code>itertools.product</code></a> to compute the Cartesian product between all provided iterables:</p>
<pre><code>import itertools
import string

for letter, number, char in itertools.product(string.ascii_lowercase, string.digits, string.punctuation):
    print({'letter': letter, 'number': number, 'char': char})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>funnily enough it is itertools.product</p>
<pre><code>import itertools
alphabet = ['a', 'b', 'c', 'd', 'e', 'f','z']
numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
chars = ["!", "@", "#", "$"]
my_iter = itertools.product(alphabet,numbers,chars)
my_keys = "letter number char".split()
for data in my_iter:
    print dict(zip(my_keys,data))
</code></pre>
</div>
<span class="comment-copy">great minds think alike :P</span>
<span class="comment-copy">Ha, nice one! :)</span>
