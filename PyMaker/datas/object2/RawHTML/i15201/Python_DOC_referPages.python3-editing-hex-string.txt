<div class="post-text" itemprop="text">
<p>I'm trying to write a file's hex size in the header of another file. When I convert the length to hex I get <code>b'\x00\x00\x00\x04'</code>  so it writes <code>"00000004"</code> to the file.</p>
<p>The file's length is stored in 2 byte intervals though, so I need it to format the string to this <code>b'\x00\x04'</code>. what the easiest way to do this?</p>
<pre><code>import mmap
def compact_bytes(values):
    return (values[0] &lt;&lt; 4)| values[2]
</code></pre>
<p>I tried this but I know it's not correct and not the proper method. </p>
</div>
<div class="post-text" itemprop="text">
<p>You are converting a number into bytes, not hex. Use the <a href="https://docs.python.org/3/library/struct.html" rel="nofollow"><code>struct</code> module</a> to do this:</p>
<pre><code>struct.pack('&gt;H', values)
</code></pre>
<p>This produces an unsigned short, 2 bytes, in big endian order; for the length <code>4</code> that'd produce <code>\x00\x04</code>:</p>
<pre><code>&gt;&gt;&gt; import struct
&gt;&gt;&gt; struct.pack('&gt;H', 4)
b'\x00\x04'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the integer is an big endian unsigned short, use <a href="https://docs.python.org/3/library/struct.html#struct.pack" rel="nofollow"><code>struct.pack</code></a> with the big endian flag.</p>
<pre><code>struct.pack('&gt;H', values)
</code></pre>
<p>In this format string, <code>&gt;</code> is the big endian flag, and <code>H</code> is unsigned short.</p>
<h2>Example:</h2>
<pre><code>&gt;&gt;&gt; import struct
&gt;&gt;&gt; struct.pack('&gt;H', 4)
b'\x00\x04'
</code></pre>
<p>You can find all the <code>struct</code> format characters <a href="https://docs.python.org/3/library/struct.html#format-characters" rel="nofollow">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; 4 .to_bytes(2, 'big')
b'\x00\x04'
</code></pre>
</div>
<span class="comment-copy">thats awesome, thanks so much^_^ and sorry i always say that "hex" when i mean "bytes" : /</span>
<span class="comment-copy">was already using stuct.pack but was using the '&gt;i' argument. the "&gt;H" fixed it thanks, next time ill do some more reading on the struct documentation.</span>
