<div class="post-text" itemprop="text">
<p>Below is the script I'm trying to write.  I've made other working scripts, including simple if-statement scripts, but I wanted to experiment a bit and try making a script that relies on string inputs instead of integers or floaters.</p>
<p>It goes without saying that I'm still learning and won't require this to do my job, but thanks for trying if you decide to take a crack at it.  I spent about an hour with another novice coder trying out tiny adjustments.  I'm almost certain it's futile to have the input equal a string to start with, creating my strife.</p>
<pre><code>answer = raw_input("Do you enjoy your work?\n")

print str(answer)
if answer = str("yes") :
    print "I'm happy to hear that, " + str(name)"
    print "I wonder what being a " + str(title) + " actually means."
    print "I don't have the term in my vocabulary.  I'm a machine."
    raw_input("My script is over soon.  Goodbye.\n")
else :
    print "I'm sorry to hear that, " + str(name)"
    print "I guess being a " + str(title) + " must be difficult."
    raw_input("My script is over soon.  Goodbye.\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>raw_input</code> returns a string already, so you don't have to convert it to string again. No need <code>str("yes")</code> this.</p>
<p>Also your intention is wrong. It must be;</p>
<pre><code>if answer == "yes":
</code></pre>
<p>Your whole script must be like;</p>
<pre><code>from time import sleep
answer = raw_input("Do you enjoy your work?\n")

print answer
if answer == "yes":
    print "I'm happy to hear that, " + name)"
    print "I wonder what being a " + title + " actually means."
    print "I don't have the term in my vocabulary.  I'm a machine."
    print ("My script is over soon.  Goodbye.\n")
    sleep(2)
else :
    print "I'm sorry to hear that, " + name"
    print "I guess being a " + title + " must be difficult."
    print ("My script is over soon.  Goodbye.\n")
    sleep(2)
</code></pre>
<p>Used <code>sleep</code> function from <code>time</code> module. So it'll wait which seconds do you want as you see it's 2 seconds now <code>sleep(2)</code> </p>
<p>Also you can use <code>format()</code> function to place like;</p>
<pre><code>print "I'm sorry to hear that {} ".format(name)
</code></pre>
<p>It's my favorite function since it's pretty usefull, check it <a href="https://docs.python.org/3/library/functions.html#format" rel="nofollow">here</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>2 things to get you up and running</p>
<pre><code>if answer = str("yes") :
</code></pre>
<p>Is wrong this will assign a string "yes" to answer. As it is it won't run. Use</p>
<pre><code>if answer == "yes" :
</code></pre>
<p>Also take away the unneeded quotes at the end of</p>
<pre><code>print "I'm happy to hear that, " + str(name)"
</code></pre>
<p>instead</p>
<pre><code>print "I'm happy to hear that, " + name
</code></pre>
<p>You should only enclose string literals in quotes and you'd usually have an even number of quotes.</p>
<p>The final thing is all these <code>str</code> calls aren't required if the value is already a string. It will work like this but you are doing unnecessary work.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is the complete script in it's entirety. I was stringing the inputs when I didn't have to, like an idiot.  I also had 3 typos to correct.</p>
<pre><code>print "Hello. I'm a program made to ask generic questions and reply."
print "I'm not advanced enough to react to questions I'm asked."
print "If I had to pick a name for myself, it would be Dan."
name = raw_input("What is your name?\n")

title = raw_input("You already know what I do for work.  What is your official title?\n")

answer = raw_input("Do you enjoy your work?\n")

if answer == str("yes") :
    print "I'm happy to hear that, " + name
    print "I wonder what being a " + title + " actually means."
    print "I don't have the term in my vocabulary.  I'm a machine."
    raw_input("My script is over soon.  Goodbye.\n")
else :
    print "I'm sorry to hear that, " + name
    print "I guess being a " + title + " must be difficult."
    raw_input("My script is over soon.  Goodbye.\n")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is right version:</p>
<pre><code>answer = raw_input("Do you enjoy your work?\n")

print answer
if answer == "yes" : # use == to judge string equals but not =
    print "I'm happy to hear that, " + str(name)
    print "I wonder what being a " + str(title) + " actually means."
    print "I don't have the term in my vocabulary.  I'm a machine."
    raw_input("My script is over soon.  Goodbye.\n")
else :
    print "I'm sorry to hear that, " + str(name)
    print "I guess being a " + str(title) + " must be difficult."
    raw_input("My script is over soon.  Goodbye.\n")
</code></pre>
<p>In your code your <code>if</code> is wrong, you should use <code>==</code> to replace <code>=</code>.
Code like this:</p>
<pre><code>ans = raw_input("input word:")
if ans = 'yes':
  print 'yes'
else:
  print 'no'
</code></pre>
<p>is <code>SyntaxError: invalid syntax</code></p>
</div>
<span class="comment-copy">answer == "yes". Your intention is to check for condition but you are assigning value "yes" to answer.</span>
<span class="comment-copy">Oh, and this isn't the whole script, just the part that doesn't work.  If you want to test it yourself just remove the parts that say + str(name) and + str(title).   ajkumar25 came up with the same error I've been getting all day.  Thanks for the fast reply, though!</span>
<span class="comment-copy">raw_input() return as string, no need to re-str.</span>
<span class="comment-copy">zoosuck's solution didn't work either, but I've implemented both of their suggestions.  Maybe we can fix it one line at a time, lol.  No wait, I'm not finished implementing zoo's fix after all..</span>
<span class="comment-copy">ITS ALIVE!  Well, it's a step in the right direction.  Thank you guys so much, you've absolutely made my day.</span>
<span class="comment-copy">the title and name are inputs, so they don't need to be strung again.</span>
<span class="comment-copy">@JonesCrimson True thanks for warning I forget to fix them :) But in your codes they were like it</span>
<span class="comment-copy">I would rate your answer as helpful, too, if I had the reputation.</span>
<span class="comment-copy">The problem, on top of the ==, was that I was stringing inputs.</span>
