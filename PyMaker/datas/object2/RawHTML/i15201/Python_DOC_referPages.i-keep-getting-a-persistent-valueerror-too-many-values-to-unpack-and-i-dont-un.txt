<div class="post-text" itemprop="text">
<p>I am getting this error and i think i have spent 5 hours on it. Please someone help.
I eventually want to get the values out of this.
What is causing there to be many values? Is it my string values or the setup of the dictionary itself.</p>
<pre><code>import ast
# -*- coding: utf-8 -*-
class MyMetric:
    def __init__(self, name):
        self.name = name

        self.metric_system = {
                         "yotta":  ("Y", str(10^24) ),
                         "zetta":  ("Z", str(10^21)),
                         "exa":    ("E", str(10^18)),
                         "peta":   ("P", str(10^15)),
                         "tera":   ("T", str(10^12)),
                         "giga":   ("G", str(10^9)),
                         "mega":   ("M", str(10^6)),
                         "kilo":   ("k", str(10^3)),
                         "hecto":  ("h", str(10^2)),
                         "deka":   ("da", str(10^1)),
                         "deci":   ("d", str(10^-1)),
                         "centi":  ("c", str(10^-2)),
                         "milli":  ("m",  str(10^-3)),
                         "micro":  ("Î¼", str(10^-6)),
                         "nano":   ("n", str(10^-9)), 
                         "pico":   ("p", str(10^-12)),
                         "femto":  ("f", str(10^-15)),
                         "atto":   ("a", str(10^-18)),
                         "zepto":  ("z", str(10^-21)),
                         "yocto":  ("y", str(10^-24))   
                         } 

    def __str__(self): 
        for key,val in self.metric_system:

            self.metric_name = key
            self.metric_symbol = val[0]
            self.metric_value = val[1]

            if self.name == self.metric_name:
                print  ("it is there")



me =  MyMetric("milli")  
print(me) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Looping over a dictionary gives you <em>only the keys</em>. Use the <a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow"><code>dict.items()</code> method</a> when you want both the key and the value:</p>
<pre><code>for key, val in self.metric_system.items():
</code></pre>
<p>From the <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow"><code>dict()</code> documentation</a>:</p>
<blockquote>
<p><code>iter(d)</code><br/>
  Return an iterator over the keys of the dictionary. This is a shortcut for <code>iter(d.keys())</code>.</p>
</blockquote>
<p>A <code>for</code> loop uses <code>iter()</code> on the item being looped over, internally.</p>
<p>Note that the <code>__str__</code> method is expected to <strong>return</strong> a string, not print it.</p>
<p>However, there is little point in iterating over all values in the dictionary when you <em>already have the key</em>. You can simply do:</p>
<pre><code>def __str__(self): 
    if self.name in self.metric_system:
        return "it is here"
    return "it is not here"
</code></pre>
<p>or use dictionary lookup to get the values:</p>
<pre><code>def __str__(self): 
    try:
        symbol, magnitude = self.metric_system[self.name]
    except KeyError:
        return 'Unknown metric {}'.format(self.name)
    return 'Metric {} ({}, {})'.format(self.name, symbol, magnitude)
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; print(MyMetric("milli"))
Metric milli (m, -9)
&gt;&gt;&gt; print(MyMetric("foobar"))
Unknown metric foobar
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your loop should be</p>
<pre><code>for key,val in self.metric_system.items():
</code></pre>
<p>This will iterate over pairs of <code>(key, value)</code></p>
</div>
<span class="comment-copy"><code>for key,val in self.metric_system</code> -&gt; <code>for key,val in self.metric_system.items()</code></span>
<span class="comment-copy"><code>^</code> is not the <code>power-of</code> operator, it is the bitwise <code>XOR</code> operator. <code>2^5 = 7</code> because <code>0010 XOR 0101 = 0111</code>. The correct operator is <code>**</code>. <code>2 ** 5 = 32</code></span>
