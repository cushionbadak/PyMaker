<div class="post-text" itemprop="text">
<p>I have an application, that using Docker SDK for Python and running container with Flask app. I'm running container using this:</p>
<pre><code>import docker
client = docker.from_env()
client.containers.run("container-name", ports={50: 8080}, detach=True}
</code></pre>
<p>Because of container is detached, the next line become execute, when container didn't have time to load. So, if i try to make request:</p>
<pre><code>import requests
res = requests.get("localhost:8080")
</code></pre>
<p>I will get an error.</p>
<p>Of course, i can use construction like this:</p>
<pre><code>while True:
    try:
        res = requests.get("localhost:8080")
        break
    except:
        print("Retry to connect")
</code></pre>
<p>But it's not good for me.
Is there any another way to check, is container is ready for requests?</p>
</div>
<div class="post-text" itemprop="text">
<p>I had a similar issue before when using their SDK. To overcome most of my issues I switched to the containers.create API which returns a container object.</p>
<pre><code>container = client.containers.create(image_name,
                                     detach=True,
                                     tty=True,
                                     network_mode='host',
                                     environment=env_variables,
                                     name='my_container')
container.start()
# do stuff
# container.exec_run(some_bash_command, tty=True, detach=True)
container.stop()
</code></pre>
<p>And if you have an already existing container you can do:</p>
<pre><code>client.containers.get(container_name)
</code></pre>
</div>
<span class="comment-copy">The process in the container still isn't guaranteed to have usefully started by the time you reach the <code># do stuff</code> line.</span>
