<div class="post-text" itemprop="text">
<p>How would I go about adding 2 of the same keys just with <code>screenshoturl2</code> and <code>screenshoturl1</code> from a dict to a JSON file?</p>
<p>This is the code I have right now and it works but it just only adds the first <code>screenshoturl1</code> and not <code>screenshoturl2</code> and I have no idea on how to make it add it. See replies <a href="https://stackoverflow.com/questions/55112118/python-attributeerror-dict-object-has-no-attribute-replace#comment96969348_55112317">here</a> for more and maybe helpful info about my topic</p>
<pre><code>    #!/usr/bin/env python3
import os
import sys
import json
import fileinput

def NumberofScreenshots():
    global numberofscreenshots
    while True:
        try:
            numberofscreenshots = input("Number of Screenshots?: ")
            if numberofscreenshots == '':
                print("Please enter how much screenshots to include.")
                continue
            elif numberofscreenshots.isalpha():
                print("Please enter a number not a string.")
                continue
            else:
                break
        except ValueError:
            break
def ScreenshotURL():
    global screenshoturl1, screenshoturl2
    if numberofscreenshots == "1":
        screenshoturl1 = input("Screenshot URL: ")
    elif numberofscreenshots == "2":
        screenshoturl1 = input("Screenshot URL: ")
        screenshoturl2 = input("Screenshot URL: ")
    else:
        pass
def NumberofScreenshots1():
    if numberofscreenshots == "1":
        with open('path/to/json/file','r') as f:
            data = json.loads(f.read())

        data['tabs'][0]['views'][1]['screenshots'][0]

        data['tabs'][0]['views'][1]['screenshots']  =  data['tabs'][0]['views'][1]['screenshots'][0]

        data['tabs'][0]['views'][1]['screenshots'] = {"accessibilityText": "Screenshot","url": screenshoturl1,"fullSizeURL": screenshoturl1}

        with open('path/to/json/file', 'w') as f:
            f.write(json.dumps(data))
    else:
        print("Try again.")
def NumberofScreenshots2():
    global data
    if numberofscreenshots == "2":
        with open('path/to/json/file','r') as f:
            data = json.loads(f.read())

        data['tabs'][0]['views'][1]['screenshots'][0]
        print(data)

        data['tabs'][0]['views'][1]['screenshots'] = data['tabs'][0]['views'][1]['screenshots'][0]
        print(data)


        data['tabs'][0]['views'][1]['screenshots'].update({"accessibilityText": "Screenshot","url": screenshoturl1,"fullSizeURL": screenshoturl1, "accessibilityText": "Screenshot","url": screenshoturl2,"fullSizeURL": screenshoturl2})
        print(data)

        with open('path/to/json/file', 'w') as f:
            f.write(json.dumps(data))
    else:
        print("Try again.")


print("Pick Template:")
print("1. Default")
template = input("Template Name/Number: ")

if (template == "1"):
    NumberofScreenshots()
    ScreenshotURL()

    NumberofScreenshots1()
    NumberofScreenshots2()

# Show the user a error if they enter a number for a template that can't be found.
else:
    print("The template you are looking for can not be found!")
</code></pre>
<p>We are looking at the function called <code>NumberofScreenshots2</code></p>
<p>JSON File: </p>
<pre><code>{
  "tabs": [
    {
      "tabname": "Details",
      "views": [
        {
          "title": "Some Name",
          "useBoldText": true,
          "useBottomMargin": false,
          "class": "DepictionSubheaderView"
        },
        {
          "itemCornerRadius": 6,
          "itemSize": "",
          "screenshots": [
            {
              "accessibilityText": "Screenshot",
              "url": "Screenshot URL 1",
              "fullSizeURL": "Screenshot URL 1"
            },
            {
              "accessibilityText": "Screenshot",
              "url": "Screenshot URL 2",
              "fullSizeURL": "Screenshot URL 2"
            },
            {
              "accessibilityText": "Screenshot",
              "url": "Screenshot URL 3",
              "fullSizeURL": "Screenshot URL 3"
            },
            {
              "accessibilityText": "Screenshot",
              "url": "Screenshot URL 4",
              "fullSizeURL": "Screenshot URL 4"
            },
            {
              "accessibilityText": "Screenshot",
              "url": "Screenshot URL 5",
              "fullSizeURL": "Screenshot URL 5"
            }
          ],
          "ipad": {
            "itemCornerRadius": 9,
            "itemSize": "{320, 550.8266666666667}",
            "screenshots": [
              {
                "accessibilityText": "Screenshot",
                "url": " Screenshot URL?size=640",
                "fullSizeURL": "Screenshot URL"
              }
            ],
            "class": "DepictionScreenshotView"
          },
          "class": "DepictionScreenshotsView"
        },
        {
          "markdown": " Description",
          "useSpacing": true,
          "class": "DepictionMarkdownView"
        },
        {
          "class": "DepictionSeparatorView"
        },
        {
          "title": "Known Issues",
          "class": "DepictionHeaderView"
        },
        {
          "markdown": "None",
          "useSpacing": true,
          "class": "DepictionMarkdownView"
        },
        {
          "class": "DepictionSeparatorView"
        },
        {
          "title": "Latest Version",
          "class": "DepictionHeaderView"
        },
        {
          "title": "1.0",
          "text": "Latest Version Number",
          "class": "DepictionTableTextView"
        },
        {
          "title": "Released",
          "text": "3/10/19",
          "class": "DepictionTableTextView"
        },
        {
          "title": "Price",
          "text": "Free",
          "class": "DepictionTableTextView"
        },
        {
          "title": "Developer",
          "text": "TestDev",
          "class": "DepictionTableTextView"
        },
        {
          "title": "Contact Support",
          "action": "",
          "class": "DepictionTableButtonView"
        },
        {
          "spacing": 16,
          "class": "DepictionSpacerView"
        },
        {
          "spacing": 20,
          "class": "DepictionSpacerView"
        }
      ],
      "class": "DepictionStackView"
    },
    {
      "tabname": "Changelog",
      "views": [
        {
          "title": "1.0",
          "useBoldText": true,
          "useBottomMargin": true,
          "class": "DepictionSubheaderView"
        },
        {
          "markdown": "\t\n\u2022 Initial Release",
          "useSpacing": false,
          "class": "DepictionMarkdownView"
        },
        {
          "markdown": "&lt;small style=\"color: #999; margin-top: -8px;\"&gt;Released 3/10/2019&lt;/small&gt;",
          "useRawFormat": true,
          "class": "DepictionMarkdownView"
        }
      ],
      "class": "DepictionStackView"
    }
  ],
  "class": "DepictionTabView"
}
</code></pre>
<p>I want it to remove everything in <code>screenshots</code> and re-add it with the user input that they enter in the <code>screenshoturl1</code> and <code>screenshoturl2</code> so it will delete everything like the placeholders in <code>screenshots</code> and only add 2 back with the url the user enters in <code>screenshoturl1</code> and <code>screenshoturl2</code> and help will be nice.</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand what you are trying to do here, it looks like you would like to update one or two of the URLs, one at a time.</p>
<p>What you could do is go over each screenshot item, one at a time, and either update it or stop. This is easier and also lets you update all of them if you want to. This also means we don't have to ask how many to do up front (we just stop when we don't get any more).</p>
<pre><code>import json

# Load the data
file_name = 'path/to/json/file'
with open(file_name) as fh:
    full_data = json.load(fh)

# Dig into the data to find the screenshots
screen_shots = full_data['tabs'][0]['views'][1]['screenshots']

# Loop over each screen shot, updating each one
for number, screen_shot in enumerate(screen_shots):
    print("Screenshot", number)
    print('\tCurrent data:', screen_shot)

    new_url = input(
        "\tPlease enter new URL (leave empty and press return to stop): "
    ).strip()

    if new_url:
        # Updating the data here will also update the 'full_data' object
        # as we are just referencing a part of it, not making copies
        screen_shot.update({"url": new_url, "fullSizeURL": new_url})
    else:
        print("\tAll done!")
        break

# Remove all entries which we did not update
screen_shots = screen_shots[:number]

# Save the data
with open(file_name, 'w') as fh:
    json.dump(full_data, fh, indent=4)
</code></pre>
<p>Something else you may want to look into is returning results from your functions instead of using global variables, as this can quickly get very confusing with bigger scripts.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can have your value a collection (like a list or a tuple). For added convenience you can use defaultdict. So if you wanted to have two values for a key:</p>
<pre><code>from collections import defaultdict

multiValueDict = defaultdict(list)

multiValueDict[1].append(1)
multiValueDict[1].append(2)
print(multiValueDict[1])
</code></pre>
<p>And this outputs:</p>
<pre><code>[1, 2]
</code></pre>
</div>
<span class="comment-copy">You can't, otherwise they wouldn't be <b>keys</b> would they?</span>
<span class="comment-copy">Your title is a bit confusing, so I want to clarify: You can't add the same key to a dict more than once, because that makes it not a dict in python. If you need more than one value with the same key, you can use the single key, and a list as the values tied to that key</span>
<span class="comment-copy">Sorry if the title is confusing I am very new to python and don't know to much about it thats why I posted my question here but I am sill confused on how to go about doing this</span>
<span class="comment-copy">Thanks so much this seems better then before but now how would I add two urls instead of just one so have both <code>new_url</code> and <code>new_url2</code></span>
<span class="comment-copy">Do you mean that when the script finishes, any screenshots which you did not update are removed? So for example, if you only put in 1 the remaining 4 would go?</span>
<span class="comment-copy">That could work to but I want to add another input field for another url and add both the first <code>new_url</code> and <code>new_url2</code> to the json file.</span>
<span class="comment-copy">I would like the <code>new_url</code> and <code>new_url2</code> to be separate in the json file so it would look like something like this <code>{"accessibilityText": "Screenshot","url": "new_url","fullSizeURL": "new_url"},</code> and <code>{"accessibilityText": "Screenshot","url": "new_url2","fullSizeURL": "new_url2"}</code></span>
<span class="comment-copy">I've updated the script above to snip out entries that you didn't update. This means there will be as many in the output as you want. This will support 2, but it will also support 3 or 1 etc. If that's not what you need then you would probably need to change it, or go into more detail about what you expect to see as output in various different scenarios. Good luck!</span>
