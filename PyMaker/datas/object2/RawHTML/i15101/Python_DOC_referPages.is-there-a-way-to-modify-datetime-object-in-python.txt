<div class="post-text" itemprop="text">
<p>In the function main I have</p>
<pre><code>def main():
    #...
    def button_callback(button,a, byMouse,label):
            #...
            date = date - oneday
            while(date.isoweekday()&gt;5): date = date -oneday
            #...
    oneday = datetime.timedelta(1)
    date = datetime.date.today()
</code></pre>
<p>python complains:  local variable 'date' referenced before assignment, which is expected. In other parts of main() I pay attention not to assign but to modify, thus I have for example </p>
<pre><code>def main():
    # other part of main()
    def clear_callback( button,byMouse,aaa):
        a_cats.clear()

    a_cats = set(["GT","GR"])
</code></pre>
<p>which python is happy about (it woudn't be if I set e.g. a_cats = a_cats.clear() ).</p>
<p>Is there a way to modify  a datetime object without explicitly using "=", so that I can avoid using global variables ?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're using Python 3.x, you can declare the variable as <a href="https://docs.python.org/3/reference/simple_stmts.html#the-nonlocal-statement" rel="nofollow"><code>nonlocal</code></a>:</p>
<pre><code>def main():
    def button_callback(button,a, byMouse,label):
        nonlocal date  # &lt;--------------
        date = date - oneday
        ...

    oneday = datetime.timedelta(1)
    date = datetime.date.today()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>datetime</code> object is immutable. The only way to change <code>date</code> is to bind it to a new <code>datetime</code> object.</p>
<p>To assign to outer-scope variable, you could use <code>nonlocal</code> in Python 3 <a href="https://stackoverflow.com/a/28383476/4279">as @falsetru suggested</a> or emulate it using a list or a custom object in Python 2:</p>
<pre><code>def button_callback(self, *args):
    self.date -= DAY
</code></pre>
<p>See <a href="https://stackoverflow.com/a/141710/4279">What limitations have closures in Python compared to language X closures?</a></p>
</div>
