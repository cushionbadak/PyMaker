<div class="post-text" itemprop="text">
<p>I'm trying to generate a spectrum of all the cyclic combinations from my peptide.</p>
<p>Here's my the code for the linear spectrum:</p>
<pre><code>#For example: LEQN
#L:113 E:129 Q:128 N:114
    peptide = [113,129,128,114]
        for a in peptide:
            for i in peptide[b:]:
                s+= i
                spectrum.append(s)
            s=0
            b += 1

spectrum.sort()
print spectrum
</code></pre>
<p><strong>Outputs:</strong> [113, 114, 128, 129, 242, 242, 257, 370, 371, 484]</p>
<p>My code successful adds these sums L(113), E(129), Q(128), N(114), LE(113+129), LEQ(113+129+128), LEQN(113+129+128+114), EQ(129+128), EQN(129+128+114), QN(128+114)</p>
<p><strong>BUT</strong> is missing QNL(128+113+114), NL(114+113), NLE(114+113+129)</p>
<p>Ex. QNL should be 128+114+113 which is the summation of elements 2, 3, and 1.
NL is 114+133 which is the summation of elements 3 and 0. And NLE is 113+114+129 which is the summation of elements 3, 0, 1.</p>
<p>*I wouldn't need to add EQNL or QNLE because they are exact same thing as LEQN.</p>
<p>*However LE=242 and QN=242 have the same mass but are NOT the same thing.</p>
<p><strong>Expected Output:</strong> 113, 114, 128, 129, 227(N+L), 242, 242, 257, 355(Q+N+L), 356(N+L+E), 370, 371, 484</p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand your question correctly, you want all the possible sublists, for each length up to the length of the <code>peptide</code> list and for each starting position in that list, wrapping around at the end of the list. One way to do this would be using <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow"><code>cycle</code></a> and <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow"><code>islice</code></a> from <code>itertools</code>.</p>
<pre><code>from itertools import cycle, islice

peptide = [113, 129, 128, 114]
spectrum = []
for num in range(1, len(peptide)):
    for start in range(len(peptide)):
        group = islice(cycle(peptide), start, start + num)
        spectrum.append(sum(group))
spectrum.append(sum(peptide)) # add the entire list only once
</code></pre>
<p>This way, <code>sorted(spectrum)</code> ends up as <code>[113, 114, 128, 129, 227, 242, 242, 257, 355, 356, 370, 371, 484]</code>, which seems to be what you wanted.</p>
<p>Not sure, though, how this scales to much longer lists of peptides (I'd assume in practice those lists have more than four elements).</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>peptide = [113,129,128,114]
peptide *= 2
spectrum = []
for i in range(len(peptide)/2):
    for j in range(i+1,i+4):
       s = 0
       for a in peptide[i:j]:
           s+= a
       spectrum.append(s)
spectrum.sort()
print spectrum
</code></pre>
</div>
<span class="comment-copy">It's a bit unclear what you're trying to do, could you specify the expected output and what a cyclic combination is?</span>
<span class="comment-copy">Can't you just duplicate the peptide in tandem and loop through peptide[0:4], peptide[2:6], peptide[3:6], peptide[3:7], etc?</span>
<span class="comment-copy">What do you mean @heathobrien? Ok I added more details along with my expected output.</span>
<span class="comment-copy">See my answer for what I meant</span>
<span class="comment-copy">I learned a lot from this, thank you.</span>
<span class="comment-copy">Admitedly, that doesn't include the sum for the entire peptide</span>
<span class="comment-copy">This code would be more useful it there was additional comments and explanation.</span>
