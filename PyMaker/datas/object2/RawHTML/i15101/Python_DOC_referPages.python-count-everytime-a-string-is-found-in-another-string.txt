<div class="post-text" itemprop="text">
<p>I'm trying to enumerate the time the program finds a specific string in a longer text but I'm stuck, the program shows the length of the response string instead of the times <code>ultrias</code> is present in response. Here's the code:</p>
<pre><code>ultrias = "am 17"
response = "Hi i am 17, did you know I am 17"
num = 0
for ultrias in response:
    num += 1
print (num)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python strings have a built-in <code>str.count()</code> method that can do that:</p>
<pre><code>ultrias = "am 17"
response = "Hi i am 17, did you know I am 17"
print(response.count(ultrias))
</code></pre>
<p><strong>output</strong></p>
<pre><code>2
</code></pre>
<p>If you aren't permitted to use the <code>str.count()</code> method, you <em>could</em> do something like this:</p>
<pre><code>ultrias = "am 17"
response = "Hi i am 17, did you know I am 17"

count = 0
data = response[:]
while True:
    start = data.find(ultrias)
    if start &lt; 0:
        break
    data = data[start + len(ultrias):]
    count += 1
print(count)
</code></pre>
<p>But I wouldn't recommend it.</p>
<p>Neither of these algorithms handle overlapping matches, but the second example can be easily modified to do that:</p>
<pre><code>count = 0
data = response[:]
while True:
    start = data.find(ultrias)
    if start &lt; 0:
        break
    data = data[start + 1:]
    count += 1
print(count)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Others have answered with a few different ways to achieve your requirement, however, none explained why the output of your code is the length of the input string.</p>
<p><code>for</code> loops have a loop variable that is assigned values from the object that is being iterated over. In the case of the object being a string, the for loop will iterate in order over each character in the string, assigning the character to the loop variable  e.g.</p>
<pre><code>&gt;&gt;&gt; for i in "Hi there":
...     print i
... 
H
i

t
h
e
r
e
</code></pre>
<p>So you can see that <code>i</code> is assigned in turn a character from the string "Hi there". The same thing is happening in your code: <code>ultrias</code> is the loop variable and is being assigned consecutive characters from the string <code>"Hi i am 17, did you know I am 17"</code>.</p>
<pre><code>ultrias = "am 17"
response = "Hi i am 17, did you know I am 17"
num = 0
for ultrias in response:
    print(ultrias)
    num += 1
print (num)
</code></pre>
<p>The output will be:</p>
<pre><code>H
i

i

a
m

1
7
.
.
.

3
</code></pre>
<p>Also note that the value of <code>ultrias</code> after the loop has terminated is the last value assigned it by the loop - not <code>"am 17"</code> but <code>"7"</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#str.count" rel="nofollow"><code>str.count</code></a>:</p>
<pre><code>&gt;&gt;&gt; ultrias = "am 17"
&gt;&gt;&gt; response = "Hi i am 17, did you know I am 17"
&gt;&gt;&gt; response.count(ultrias)
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use string.count(string) to get what you need.</p>
<pre><code>&gt;&gt;&gt; find = "am 17"
&gt;&gt;&gt; string = "Hi I am 17, did you know I am 17"
&gt;&gt;&gt; string.count(find)
2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Through <code>re</code> module. </p>
<pre><code>&gt;&gt;&gt; ultrias = "am 17"
&gt;&gt;&gt; response = "Hi i am 17, did you know I am 17"
&gt;&gt;&gt; print(len(re.findall(ultrias, response)))
2
</code></pre>
</div>
<span class="comment-copy">Do you need to count <i>overlapping</i> occurrences ? Say how many time is  <code>171</code> in <code>17171</code> ? One or two ?</span>
