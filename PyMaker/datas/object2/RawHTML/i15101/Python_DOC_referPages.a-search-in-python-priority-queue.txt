<div class="post-text" itemprop="text">
<p>I am trying to write an A* search to solve a maze in Python, however I am struggling to find a built in priority queue that works for this. I am using PriorityQueue at the moment, but it offers no functionality in order to change an items priority, which is a problem in the commented section at the bottom of the algorithm (in the else if statement).</p>
<p>Does anyone have any idea what I could do in that else if block, or what built in priority queue would give me this functionality?</p>
<pre><code>def A_search(maze, start, end):
expanded = 0 # use to track number of nodes expanded by the algorithm
node1 = Node(start,0)
frontier = PriorityQueue()
frontier.put((dist_to_goal(node1,end) + node1.get_cost(), node1))
visited = []
in_frontier = [] # keep track of items in frontier, PriorityQueue has no way to peek
in_frontier.append(node1)
while(True):
    if(frontier == []):
        return(None,expanded)
    curr = (frontier.get())[1]
    in_frontier.remove(curr)
    expanded += 1
    if(curr.get_loc() == end):
        return(curr,expanded)
    visited.append(curr.get_loc())
    neighbors = find_neighbors(maze, curr.get_loc())
    for neighbor in neighbors:
        node_n = Node(neighbor,node1.get_cost()+1)
        node_n.parent = curr
        if(neighbor not in visited) and (node_n not in in_frontier):
            frontier.put((dist_to_goal(node_n,end) + node1.get_cost(), node_n))
            in_frontier.append(node_n)
        # else if node_n is in frontier w/ a higher path cost then replace it w/ current
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The closest you will find in the built-in libraries is <a href="https://docs.python.org/3/library/heapq.html" rel="nofollow">heapq</a>.</p>
<p>After changing the priority you need to call either <code>heapq.heapify</code> (costs O(n) time but will not change A* overall complexity) or use the internal <code>heapq._siftdown</code> function at O(log n) time. </p>
</div>
