<div class="post-text" itemprop="text">
<p><br/>
I have recently been creating a guessing game for my co - workers as a project to learning Python 3.3x. I have been storing the results in a text file formatted with the name and score, separated by a colon, as shown...</p>
<pre><code>Adam:12
Dave:25
Jack:13
Adam:34
Dave:23
</code></pre>
<p>The text file is read with the following code, thanks to Padraic Cunningham. </p>
<pre><code>from collections import defaultdict
d = defaultdict(list)
with open('guesses.txt') as f:
    for line in f:
        name,val = line.split(":")
        d[name].append(int(val))

for k in sorted(d):
    print(k," ".join(map(str,d[k])))
</code></pre>
<p>The issue now is, is that I want to see Dave, Adam and Jack's most recent four scores. One way that I thought about this is to somehow read the list above and reverse it, so that it would see the most recent results first. I thought I could first inverse the dictionary, using the line of code below:</p>
<pre><code>inv_map = {v: k for k, v in d.items()}
</code></pre>
<p>But that does not work, as it returns the error:</p>
<pre><code>TypeError: unhashable type: 'list'
</code></pre>
<p>As I want to store the 4 most recent results, then I would need to make sure that the oldest result is deleted every time a new result arrives, and updates the dictionary. </p>
<p>How would I be able to make sure that only 4 maximum values are assigned to each key? Could that be done by inversing the dictionary? I have tried to see if other questions follow the same principle, but I have not found anything as such. </p>
<p><strong>NOTE</strong> I have seen the itemgetter method, but I have MORE than one value for each key.  </p>
<p>The text file would appear like this:</p>
<pre><code>Adam:12
Dave:25
Jack:13
Adam:34
Dave:23
Jack:17
Adam:28
Adam:23
Dave:23
Jack:11
Adam:39
Dave:44
Jack:78
Dave:38
Jack:4    
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You COULD use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>defaultdict</code></a> with <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="nofollow"><code>deque(maxlen=4)</code></a> to handle that.</p>
<pre><code>import collections

d = collections.defaultdict(lambda: collections.deque(maxlen=4))
# defaultdict accepts as an argument a function that returns the default
#   state of the value of undefined keys. In this case we make an anonymous
#   function that returns a `collections.deque` with maxlen of 4.

# we could also do
# # import functools, collections
# # d = collections.defaultdict(functools.partial(collections.deque,
# #                                               maxlen=4))

with open('path/to/file.txt', 'r') as infile:
    for line in infile:
        player,score = line.strip().split(":")
        d[player].append(int(score))
</code></pre>
<p>However you're probably better off just creating this data structure to begin with and pickling the object.</p>
<pre><code>import pickle

# `highscores` is some previously populated high score dict

def save_scores(filename):
    with open(filename, 'w') as outfile:
        pickle.dump(highscores, outfile)

def load_scores(filename):
    with open(filename, 'r') as infile:
        highscores = pickle.load(infile)
    return highscores
</code></pre>
</div>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/28326725/a-user-score-saving-program">A user score saving program</a></span>
<span class="comment-copy">As you can see in the duplicate, you can serialize to files real python objects (in your case that will be a dictionary of string-&gt;list) , which should make this <b>a lot</b> easier.</span>
<span class="comment-copy">Oh ok. But, when I use my <code>print(dict(d))</code> method, it prints out this:</span>
<span class="comment-copy"><code>{'Jack': deque([17, 11, 78, 4], maxlen=4), 'Dave': deque([23, 23, 44, 38], maxlen=4), 'Adam': deque([34, 28, 23, 39], maxlen=4)}</code></span>
<span class="comment-copy">How do I get rid of the deque and the maxlen elements to reveal the dictionary itself? or even better, how could I then print it neatly, so it only reads <code>Jack 17 11 78 4</code> without the brackets? @adamsmith</span>
<span class="comment-copy">That dictionary has one value per key, that value is a <code>deque</code> object (which itself has a <code>maxlen</code> attribute). You can print it nicely by doing something like <a href="https://gist.github.com/NotTheEconomist/c0b688f5e1d2f4bd0978" rel="nofollow noreferrer">this</a></span>
<span class="comment-copy">Yes, that works. But then when I sorted the keys in alphabetical order, all the names came up in the order Adam, Dave and Jack using the <code>for k in sorted(d)</code> line. How can I still keep its functionality of having it print it out in alphabetical order?</span>
