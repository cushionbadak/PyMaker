<div class="post-text" itemprop="text">
<p>How can I catch an error on python 3? I've googled a lot but none of the answers seem to be working. The file open.txt doesn't exist so it should print e.errno.</p>
<p>This is what I tried now:</p>
<p>This is in my defined function</p>
<pre><code>try:
    with open(file, 'r') as file:
        file = file.read()
        return file.encode('UTF-8')
except OSError as e:
    print(e.errno)
</code></pre>
<p>However I does not print anything when I get this error</p>
<pre><code>FileNotFoundError: [Errno 2] No such file or directory: 'test.txt'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>FileNotFoundError</code> is a subclass of <code>OSError</code>, catch that or the exception itself:</p>
<pre><code>except OSError as e:
</code></pre>
<p>Operating System exceptions have been reworked in Python 3.3; <code>IOError</code> has been merged into <code>OSError</code>. See the <a href="https://docs.python.org/3/whatsnew/3.3.html#pep-3151-reworking-the-os-and-io-exception-hierarchy" rel="noreferrer"><em>PEP 3151: Reworking the OS and IO exception hierarchy</em> section</a> in the What's New documentation.</p>
<p>For more details the <a href="https://docs.python.org/3/library/exceptions.html#os-exceptions" rel="noreferrer"><em>OS Exceptions</em> section</a> for more information, scroll down for a class hierarchy.</p>
<p>That said, your code <em>should still just work</em> as <code>IOError</code> is now an alias for <code>OSError</code>:</p>
<pre><code>&gt;&gt;&gt; IOError
&lt;class 'OSError'&gt;
</code></pre>
<p>Make sure you are placing your exception handler in the correct location. Take a close look at the traceback for the exception to make sure you didn't miss where it is actually being raised. Last but not least, you did restart your Python script, right?</p>
</div>
<span class="comment-copy">unrelated: do not use the same name for different purposes in the same context. Use <code>text = file.read()</code> instead. Keep the text as Unicode, do not encode it to bytes unless it is absolutely necessary.</span>
<span class="comment-copy">make sure that you run the right file. Provide the full traceback.</span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/15032108/pythons-open-throws-different-errors-for-file-not-found-how-to-handle-b">Python's "open()" throws different errors for "file not found" - how to handle both exceptions?</a></span>
<span class="comment-copy">I updated my code, do you see anything that might be wrong? Could it be the fault of the return line?</span>
<span class="comment-copy">@ThomasW: I can't reproduce your issue with that code; it simply prints <code>2</code> for me. No, the return line doesn't cause any issues here.</span>
<span class="comment-copy">With your help I solved the problem, tnx!</span>
<span class="comment-copy">How did you solve this @ThomasW? I get this sporadically here <a href="https://github.com/pypa/pip/blame/master/src/pip/_internal/req/req_tracker.py#L52" rel="nofollow noreferrer">github.com/pypa/pip/blame/master/src/pip/_internal/req/â€¦</a> using an embedded version of python on linux...</span>
<span class="comment-copy">@crizCraig: 'sporadically', or on specific Python versions? <code>open()</code> can throw <code>OSError</code> in Python 3.2 or before.</span>
