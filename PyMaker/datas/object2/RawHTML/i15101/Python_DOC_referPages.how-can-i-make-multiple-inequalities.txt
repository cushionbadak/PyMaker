<div class="post-text" itemprop="text">
<p>How can I make multiple inequalities in python? for example.</p>
<pre><code>school_type = input ("Enter what type of school you want. press H for high school, M for middle school, or E for elementary school").lower()

while school_type != "h" or school_type != "m" or school_type != "e": # Is this code correct?

   print ("You must enter H, M, or E")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>school_type != "h" or school_type != "m"</code> will always evaluate to <code>True</code> because <code>school_type</code> will always be either not equal to <code>"h"</code> or not equal to <code>"m"</code>.  </p>
<p>You should be using <code>and</code> in your while-loop condtion instead of <code>or</code>:</p>
<pre><code>while school_type != "h" and school_type != "m" and school_type != "e":
</code></pre>
<p>That, or you could use <a href="https://docs.python.org/3/reference/expressions.html#not-in" rel="nofollow"><code>not in</code></a>:</p>
<pre><code>while school_type not in {"h", "m", "e"}:
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As @iCodez just said, you want to iterate again if the <code>school_type</code> is something different from <code>"h"</code>, and something different from <code>"m"</code> and something different from <code>"e"</code>. And as he said, this is better expressed with something like <code>school_type not in ["h", "m", "e"]</code>. That expression is simpler, easier to read and less error-prone.</p>
<p>After you change the <code>while</code>'s condition, there are still two things that I'd fix in your code. First, if the condition is true, that is, the user typed a wrong value for <code>school_type</code>, a proper action should be taken: The user must be asked to type a new value, until he/she types a correct one. Second, you should use <code>raw_input()</code> instead of <code>input()</code>. The difference is the first one is better suited for strings, while the second one is problematic, and in this cases actually requires the user to type the <code>"</code> around the input value.</p>
<p>The resulting could be something like this:</p>
<pre><code>def ask_for_school_type():
    s = "Enter what type of school you want. Type H for high \
school, M for middle school, or E for elementary school: "
    return raw_input(s).lower()

school_type = ask_for_school_type()
while school_type not in ["h", "m", "e"]:
   print "You must enter H, M, or E"
   school_type = ask_for_school_type()
</code></pre>
</div>
