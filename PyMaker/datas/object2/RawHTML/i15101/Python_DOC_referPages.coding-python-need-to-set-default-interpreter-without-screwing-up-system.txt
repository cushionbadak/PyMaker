<div class="post-text" itemprop="text">
<p>I am a newbie Python programmer. I am coding a simple application right now that just runs commands and prints the output in an organized way. Specifically, commands from FGLRX, the proprietary driver for ATI/AMD GPUs cards for linux.</p>
<p>One of the functions, is to get the device temperature. So far I got it working, but id like to make the output refresh automatically. I was advised to use the curses library.</p>
<p>Setting it up, I realized Im probably not running the best python system config.</p>
<p>Here is what happens:
I am running on Debian Wheezy. I am using the PyCharm Python IDE with project interpreter Python 3.3</p>
<p>So, first of all, when I try to debug within the IDE, it fails. I googled that, and thats because curses can not find a terminal within the IDE. - that's fine.</p>
<p>So I was trying to debug by just running "naturally" (per say) the program from Konsole.</p>
<p>I am not even sure what Python version my system is running. But it does not seem to be 3 because it fails to operate properly my program when using "elif".</p>
<p>But my biggest issue is the default subversion of python3 running. Its not the one I want.</p>
<p>Why do I say that:
running a python console within my IDE (3.2.3), I check for installed modules and both "curses" and "_curses" shows up as installed.</p>
<p>But, in my Konsole, if I run "python3 main.py", I get this:</p>
<pre><code>audric@pc1:/mnt/megaomg/software/AmdAtiUtils$ python3 main.py
Traceback (most recent call last):
File "main.py", line 13, in &lt;module&gt;
import curses
File "/usr/local/lib/python3.4/curses/__init__.py", line 13, in &lt;module&gt;
from _curses import *
ImportError: No module named '_curses'
</code></pre>
<p>So apparently I am running 3.4 as default Python3 and it does not have curses installed?</p>
<p>My question here is what is my best option?
Set my default Python3 to 3.2.3?
Re compile 3.4 with curses?
go emo and go back to windows?
yet another option?</p>
<p>My goal here is to be able to run my program (obviously) but without compromising my system stability.</p>
<p>This is the program by the way:
<a href="https://github.com/audricd/AmdAtiUtils" rel="nofollow">https://github.com/audricd/AmdAtiUtils</a></p>
<p>Thanks in advance.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, to know what is the Python version installed in your system, run in a terminal:</p>
<pre><code>$ python --version
</code></pre>
<p>Second, curses are available on Python 3.4 standard library. Well, actually, as <a href="https://docs.python.org/3/howto/curses.html#curses-howto" rel="nofollow">Documentation</a> says: </p>
<blockquote>
<p>The Windows version of Python doesnâ€™t include the curses module.</p>
</blockquote>
<p>So, if you are running your code on a Windows machine, you should read the documentation linked above to get one alternative.</p>
<p>Right, now your question. Some usual way to have a Python interpreter isolated from your system is using virtualenv. You can grab it from pip easily:</p>
<pre><code># pip3 install virtualenv
</code></pre>
<p>After, you can create a virtual environment in this way:</p>
<pre><code>$ virtualenv venv
</code></pre>
<p>And it will generate a fresh interpreter for you isolated from your system Python binds (note that it will create a directory called venv). To activate it:</p>
<pre><code>$ source venv/bin/activate
</code></pre>
<p>And now you can install all the necessary modules for your project without messing with your system (and perhaps with other Python code that you have).</p>
<p>Also, virtualenv lets you to specify the Python version which it will be based on. To do it, you should already have this specifc Python version installed on your system, and you need know where is its correspondent binary. So,you can do:</p>
<pre><code>virtualenv venv --python=/the/python/binary/here
</code></pre>
<p>After you have set up virtualenv and have activated it, you can simple type:</p>
<pre><code>python your_app.py
</code></pre>
<p>Now, your code will run with the Python version that you have set up with virtualenv.</p>
<p>You can get more on virtualenv on its <a href="https://virtualenv.pypa.io/en/latest/index.html" rel="nofollow">documentation</a>.</p>
<hr/>
<p>If you deliberately want to use a Python specific version and you don't have it installed on your system, download it from <a href="https://www.python.org/downloads/" rel="nofollow">Python website</a> and follow these instructions found in the <a href="https://hg.python.org/cpython/file/3.4/README" rel="nofollow">Python README</a> which is included in your donwload. If you need help, there is already many questions on StackOverflow related on how to install a new Python version without messing with your system.</p>
</div>
<span class="comment-copy">hello,thanks for the help! My debian wheezy is running python 2.7.3. Which I believe is the system default (stable branch). I have set up venv with python3 but I am not clear what is the next step? Now I have a Python console, and this must be incredibly stupid to ask but, where do I go from there to test my code?</span>
<span class="comment-copy">After activate the virtualenv, you can just do "python your_app.py"</span>
<span class="comment-copy">I have added more information in my answer on how to use virtualenv after activation.</span>
<span class="comment-copy">thanks a million to troubleshoot this with me. still having an issue. if I'm on the venv line, I can't do anything. it's a raw python console. outside of it, it pythons system default. not really sure how venv works. will have a look a the provided documentation.</span>
<span class="comment-copy">Did you activated it?</span>
