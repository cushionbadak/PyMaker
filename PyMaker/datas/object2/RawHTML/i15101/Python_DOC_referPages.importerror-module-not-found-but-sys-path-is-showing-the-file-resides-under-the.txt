<div class="post-text" itemprop="text">
<p>When I print sys.path in my code I get the following as output:</p>
<p>['C:\Netra_Step_2015\Tests\SVTestcases', 'C:\Netra_Step_2015\Tests\SVTestcases\TC-Regression', 'C:\Python27\python27.zip', 'C:\Python27\DLLs', 'C:\Python27\lib', etc.]</p>
<p>Now, when I write "import testCaseBase as TCB" where testcaseBase.py is in this path: </p>
<p>C:\Netra_Step_2015\Tests\SVTestcases\Common\shared </p>
<p>I get an error: "<strong>ImportError: No module named testCaseBase"</strong></p>
<p>My code is in C:\Netra_Step_2015\Tests\SVTestcases\TC-Regression\regression.py. My code goes ahead with compilation, but testcaseBase.py which is residing in a parallel directory fails to compile. </p>
<p>What might be the reason? </p>
</div>
<div class="post-text" itemprop="text">
<p>Perhaps I'm missing something, but this file path...</p>
<pre><code>C:\Netra_Step_2015\Tests\SVTestcases\Common\shared
</code></pre>
<p>...isn't in your <code>sys.path</code>, so it's not surprising you got an error. You have several options though. Changing your project structure or, if <code>Common</code> and <code>shared</code> are actual packages with <code>__init__.py</code> defined inside of them, do:</p>
<pre><code>import Common.shared.testCaseBase
</code></pre>
<p>You can also just append the path in your calling script, so:</p>
<pre><code>sys.path.append('\SVTestcases\Common\shared')
</code></pre>
<p>Or, actually just add the following path to your ENV variable (<code>PYTHONPATH</code>)</p>
<pre><code>C:\Netra_Step_2015\Tests\SVTestcases\Common\shared
</code></pre>
<p>But it's not necessarily a good habit to substitute good directory structure and importing techniques with editing your <code>PYTHONPATH</code> each time. You'll be much better off if you resolve this another way.</p>
</div>
<div class="post-text" itemprop="text">
<p>put</p>
<p><strong>C:\Netra_Step_2015\Tests\SVTestcases\Common\shared</strong></p>
<p>in your PYTHONPATH env</p>
</div>
<div class="post-text" itemprop="text">
<p>Please dont use ~/ in the path . it does not work. Use the full path. </p>
</div>
<span class="comment-copy">Thanks Eithos, appending the path in sys.path worked for me, I am going to try other solutions given by you too</span>
<span class="comment-copy">@user3565150: For more info on how to set up a package structure see the official Python docs on <a href="https://docs.python.org/2/tutorial/modules.html#packages" rel="nofollow noreferrer">Packages</a>. That link's for Python 2, here's the <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">Python 3 version</a>.</span>
<span class="comment-copy">I don't use Windows, but shouldn't that be <code>PYTHONPATH</code> ?</span>
<span class="comment-copy">So, if there is another folder under Common, I have to put it in PATH env explicitly or just adding till common will include all the subfolders under it ?</span>
