<div class="post-text" itemprop="text">
<p>I'm trying to combine if else inside my regular expression, basically if some patterns exists in the string, capture one pattern, if not, capture another.</p>
<p>The string is:
'<a href="https://www.searchpage.com/searchcompany.aspx?companyId=41490234&amp;page=0&amp;leftlink=true" rel="nofollow">https://www.searchpage.com/searchcompany.aspx?companyId=41490234&amp;page=0&amp;leftlink=true</a>" and I want to extract staff around the '?"</p>
<p>So if '?' is detected inside the string, the regular expression should capture everything after the '?' mark; if not, then just capture from the beginning.</p>
<p>I used:<code>'(.*\?.*)?(\?.*&amp;.*)|(^&amp;.*)'</code>
But it didn't work...</p>
<p>Any suggestion?</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>This regex:</p>
<pre><code>(^[^?]*$|(?&lt;=\?).*)
</code></pre>
<p>captures:</p>
<ul>
<li><code>^[^?]*$</code> everything, if there's no <code>?</code>, or</li>
<li><code>(?&lt;=\?).*</code> everything after the <code>?</code>, if there is one</li>
</ul>
<p>However, you should look into <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow"><code>urllib.parse</code></a> (Python 3) or <a href="https://docs.python.org/2/library/urlparse.html" rel="nofollow"><code>urlparse</code></a> (Python 2) if you're working with URLs.</p>
</div>
<div class="post-text" itemprop="text">
<p>regex might not be the best solution to this problem ...why not just </p>
<p><code>my_url.split("?",1)</code></p>
<p>if that is truly all you wish to do</p>
<p>or as others have suggested</p>
<pre><code>from urlparse import urlparse
print urlparse(my_url)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/2/library/urlparse.html" rel="nofollow">urlparse</a>:</p>
<pre><code>&gt;&gt;&gt; import urlparse
&gt;&gt;&gt; parse_result = urlparse.urlparse('https://www.searchpage.com/searchcompany.aspx?
companyId=41490234&amp;page=0&amp;leftlink=true')

&gt;&gt;&gt; parse_result
ParseResult(scheme='https', netloc='www.searchpage.com', 
path='/searchcompany.aspx', params='', 
query='companyId=41490234&amp;page=0&amp;leftlink=true', fragment='')

&gt;&gt;&gt; urlparse.parse_qs(parse_result.query)
{'leftlink': ['true'], 'page': ['0'], 'companyId': ['41490234']}
</code></pre>
<p>The last line is a dictionary of key/value pairs.</p>
</div>
<span class="comment-copy">If you can guarantee that there won't be any other question marks later, you could use something like <code>r".*?\??([^?]+)"</code>.</span>
<span class="comment-copy">thanks for reply. But this still captures the '<a href="https://www.search" rel="nofollow noreferrer">search</a>..' part. But I actually want to capture it happens when there's no question mark detected..</span>
<span class="comment-copy">Why not use <a href="https://docs.python.org/2/library/urlparse.html" rel="nofollow noreferrer"><code>urlparse</code></a>? It allows you to get all the parts of the URL.</span>
<span class="comment-copy">possible duplicate of <a href="http://stackoverflow.com/questions/10113090/best-way-to-parse-a-url-query-string">Best way to parse a URL query string</a></span>
<span class="comment-copy">yes some famous saying about regular expressions comes to mind here (+1)</span>
<span class="comment-copy">cause I want to parse and extract parts for not only url but also the query and the path. so there's url string as above, but also path string as '/company/Analytics/GetService' and also the query string as 'companyId=4343&amp;type=0&amp;page=11'</span>
<span class="comment-copy">there fixed now you can do that too ....</span>
<span class="comment-copy">@JudyJiang you almost certainly want <code>urllib.parse</code> or <code>urlparse</code> then ...</span>
<span class="comment-copy">I will second @ZeroPiraeus comment ...</span>
