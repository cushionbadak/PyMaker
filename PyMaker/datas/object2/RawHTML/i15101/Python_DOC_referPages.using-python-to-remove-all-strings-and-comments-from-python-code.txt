<div class="post-text" itemprop="text">
<p>I'd like to count the uniqueness of my variable names in all the python code I've written. To do so, I need to strip out all the keywords and reserved words (which are known), the comments and the strings. For example, the following code:</p>
<pre><code>''' long comment '''
for x in range(y, y+foo):
    print "Hello", 'world', '''lookout for the # tricky nest''', q # comment
</code></pre>
<p>should be stripped to the tokens of <code>for, x, in, range, y, foo, print, q</code> which can be further parsed using a known set of keywords. Is this possible using the python engine itself (maybe with the <a href="https://docs.python.org/2/library/ast.html" rel="nofollow">ast module</a>)?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is my first time playing with the <code>ast</code> module, but it was relatively easy to collect all the object names referenced in a source:</p>
<pre><code>import ast

class Visit(ast.NodeVisitor):
    def __init__(self):
        ast.NodeVisitor.__init__(self)
        self.s = set()
    def visit_Name(self,node):
        self.s.add(node.id)

with open('x.py') as f:
    a=ast.parse(f.read())
v = Visit()
v.visit(a)
print v.s
</code></pre>
<p>Where <code>x.py</code> was:</p>
<pre><code>''' long comment '''
q=7
y=0
foo=10
for x in range(y,y+foo):
    print "Hello", 'world', '''lookout for the # tricky nest''', q # comment
</code></pre>
<p>Output:</p>
<pre><code>set(['q', 'y', 'range', 'foo', 'x'])
</code></pre>
<p>Note that keywords aren't included already, but it does pick up the function name <code>range</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're more concerned with getting the list of variables rather than how to strip out all strings, comments, etc., you could try something like:</p>
<pre><code>for name in (set(locals()) | set(globals())):
    print(name)
</code></pre>
<p>to print anything that shows up in either the local dictionary or global dictionary. Use <code>dir(myobject)</code> to get the variables for <code>myobject</code>.</p>
<p><a href="https://docs.python.org/3/library/functions.html" rel="nofollow">https://docs.python.org/3/library/functions.html</a></p>
</div>
<span class="comment-copy">What did you tried?</span>
<span class="comment-copy">@AvinashRaj right now I have an over-complicated pyparsing code to try to interpret python code. I realized that this could be done in-house with the engine itself. Since I don't know the AST module and the pyarsing is irrelevant to the question here I left it off.</span>
