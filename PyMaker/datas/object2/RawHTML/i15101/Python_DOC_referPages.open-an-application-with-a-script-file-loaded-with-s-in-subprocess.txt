<div class="post-text" itemprop="text">
<p>To open an application in Windows named DriveMaster, I am using subprocess.Popen:</p>
<pre><code>subprocess.Popen(['C:\\Program Files (x86)\\ULINK DM2012 PRO NET\\v970\\DriveMaster.exe'])
</code></pre>
<p>Now, if I need to open DriveMaster with a script file loaded, what should I do? From windows command prompt or a windows batch file I run: </p>
<pre><code>"C:\Program Files (x86)\ULINK DM2012 PRO NET\v970\DriveMaster.exe" /s:c:\Program Files (x86)\ULINK DM2012 PRO NET\v970\Scripts\ATA\SATA_TestBatch.srt
</code></pre>
<p>Now I need to open DriveMaster with the script file SATA_TestBatch.srt file. Please note there is '/s:' included in the command to load the script file.</p>
</div>
<div class="post-text" itemprop="text">
<p>The first thing that you can try is to run the command as is:</p>
<pre><code>import subprocess

subprocess.check_call(r'"C:\Program Files (x86)\ULINK DM2012 PRO NET\v970\DriveMaster.exe" /s:c:\Program Files (x86)\ULINK DM2012 PRO NET\v970\Scripts\ATA\SATA_TestBatch.srt')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work :</p>
<pre><code>subprocess.Popen([r'C:\\Program Files (x86)\\ULINK DM2012 PRO NET\\v970\\DriveMaster.exe', r'/s:c:\Program Files (x86)\ULINK DM2012 PRO NET\v970\Scripts\ATA\SATA_TestBatch.srt'])
</code></pre>
<p>reference: <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow">https://docs.python.org/3/library/subprocess.html</a></p>
<blockquote>
<p>args should be a sequence of program arguments or else a single string. By default, the program to execute is the first item in args if args is a sequence.</p>
</blockquote>
</div>
<span class="comment-copy">Somewhat related: <a href="http://stackoverflow.com/questions/3730964/python-script-execute-commands-in-terminal" title="python script execute commands in terminal">stackoverflow.com/questions/3730964/â€¦</a></span>
<span class="comment-copy">But this involves, and indeed requires, the shell, which can easily be avoided here.</span>
<span class="comment-copy">@tripleee: <b>wrong</b>. Popen does <i>not</i> use the shell by default.</span>
<span class="comment-copy">Note the use of double quotes around the executable's path. Without them <code>CreateProcess</code> scans <code>lpCommandLine</code> for whitespace from left to right to find the executable's path. For example, without quotes it tries <code>C:\Program</code>, <code>C:\Program Files (x86)</code>, <code>C:\Program Files (x86)\ULINK</code>, <code>C:\Program Files (x86)\ULINK DM2012</code>, <code>C:\Program Files (x86)\ULINK DM2012 PRO</code>, and finally <code>C:\Program Files (x86)\ULINK DM2012 PRO NET\v970\DriveMaster.exe</code>. If any of the latter doesn't exist it also tries appending a <code>.EXE</code> extension before moving on.</span>
<span class="comment-copy">it causes <code>SyntaxError</code>. Use raw-string literals for Windows paths: <code>r'...\U..'</code></span>
<span class="comment-copy">An error is raised you're right. It's actually a FileNotFoundError. My bad, I rarely use Windows :) . Answer edited, thank you Sebastian. Tested using Python3.4 for Windows : <code>subprocess.Popen(['C:\test.bat', '--my-test-arg']</code> . Test.bat contains <code>echo %1%</code>, and it prints <code>--my-test-arg</code></span>
<span class="comment-copy">No. If the path has <code>'\U'</code> in it then SyntaxError is raised</span>
