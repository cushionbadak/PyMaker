<div class="post-text" itemprop="text">
<p>How would I mimic this result</p>
<pre><code>&gt;&gt;&gt; countthesewords = wordcounter("~/mybook.txt")
&gt;&gt;&gt; countthesewords['coffee']
15
</code></pre>
<p>I'm guessing that you would first need to do a def within a def,</p>
<pre><code>#filename is wordcountingprogram

def wordcounter(filename):
    txtfile = open(filename, 'r')
    txtstr = txtfile.read()
wordcounter = txtstr ?????
</code></pre>
<p>I think I'm supposed to turn the file into a library, but how do I get it so you can call it like that?</p>
<p>I got it, Thank you for all who helped!</p>
</div>
<div class="post-text" itemprop="text">
<p>No, you do not need a function within a function. Try using the <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow">Counter</a> class from the collections module.</p>
<pre><code>from collections import Counter

def wordcounter(filename):
    with open(filename) as txtfile: # Make sure file is taken care of
        word_count = Counter(txtfile.read().split())

    return word_count
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No, what you can do is to create a <code>class</code> named <code>wordcounter</code> (uppercase Wordcounter would be more <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow">PEP-8</a> compliant) and overload the <code>__getitem__</code> method. Here is an example for you to get the idea:</p>
<pre><code>class Wordcounter:
    def __init__(self, filename):
        f = open(filename, 'r')
        self.s = f.read()

    def __getitem__(self, item):
        return self.s.count(item)

w = Wordcounter('testfile.txt')
print w['coffee']
</code></pre>
<p>Result:</p>
<pre><code>15
</code></pre>
<p>See <a href="https://docs.python.org/2/reference/datamodel.html#object.__getitem__" rel="nofollow">Python data model documentation</a> for details</p>
</div>
<div class="post-text" itemprop="text">
<p>In addition to @Selcuk's suggestion, use len(string) to count:</p>
<pre><code>import re

def wordcounter(filename, word):
   txtfile = open(filename, 'r')
   text = txtfile.read()
   repetition = re.findall(word, text)
   print len(repetition)

wordcounter('file.txt', 'coffee')
</code></pre>
</div>
<span class="comment-copy">I think this counts all the words in the file; not the number of repetitions of a given word.</span>
<span class="comment-copy">@Selcuk No, it counts the number of occurrences of each unique element in the iterator, and exposes them with a dict interface</span>
<span class="comment-copy">Yes, but the question is to count the number of occurences of the word <code>coffee</code> inside a text file.</span>
<span class="comment-copy">@Selcuk <code>txtfile.read().split()</code> returns a list of the words in txtfile...Counter counts the number of occurrences of each of those words</span>
<span class="comment-copy">You should really re-read the question</span>
<span class="comment-copy">In order for the program to use the name wordcounter as a variable to import the text file  <code>wordcounter("textfile.txt")</code> and as a dictionary <code>wordcounter['word']</code>  how would your example work?  to result in  <code>&gt;&gt;&gt; countthesewords = wordcountingprogram.wordcounter("~/mybook.txt")  &gt;&gt;&gt; countthesewords['coffee'] 15</code></span>
<span class="comment-copy">Oh, I see!  so for <b>init</b>, it's basically just the wordcounter() and for <b>getitem</b> is x() when x = wordcounter() right?  Now i just have to figure out a way to make it search the whole word and not just how many time it appears.</span>
<span class="comment-copy"><code>__init__</code> is where you create the instance and <code>__getitem__</code> is where you <i>parse</i> what is inside the square brackets.</span>
<span class="comment-copy">Also, what does the .s do after the self.s because I've noticed that it doesn't work without the s. By the way, thank you so much for helping me. making class is exactly what I'm looking for. By the way, can you put another class in the <code>__getitem__</code> to push it further?</span>
<span class="comment-copy"><code>s</code> is the instance variable that holds the contents of the text file. I don't understand what you mean by "push it further"?</span>
