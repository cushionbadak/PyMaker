<div class="post-text" itemprop="text">
<p>I'm have a 585L, 2L numpy array in Python.
The data is organized like in this example.</p>
<pre><code>0,0
1,0
2,1
3,0
4,0
5,1
...
</code></pre>
<p>I would like to create an array deleting all the lines where 0 is present on the seconds column. Thus, the final result pretended is:</p>
<pre><code>2,1
5,1
</code></pre>
<p>I have read some related examples but I'm still struggling with this.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you mention your structure being a numpy array, rather than a list, I would use numpy logical indexing to select only the values you care for.</p>
<pre class="lang-python prettyprint-override"><code>&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; x = [[0,0], [1,0], [2,1], [3,0], [4,0], [5,1]] # Create dummy list
&gt;&gt;&gt; x = np.asarray(x) # Convert list to numpy array
&gt;&gt;&gt; x[x[:, 1] != 0] # Select out items whose second column don't contain zeroes

 array([[2, 1],
   [5, 1]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>here is my answer
if your list like this [[0,0],[2,1],[4,3],[2,0]]
if your list structure isnt like this please tell me</p>
<p>my answer prints the list whose second column num dont equal to  0</p>
<pre><code>    print [x for x in your_list if x[1] != 0] #your_list is the variable of the list 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use an list comprehension. These are described on the Python Data Structures page (<a href="https://docs.python.org/2/tutorial/datastructures.html" rel="nofollow">Python 2</a>, <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow">Python 3</a>).</p>
<p>If your array is:</p>
<pre><code>x = [[0,0],
    [1,0],
    [2,1],
    [3,0],
    [4,0],
    [5,1]]
</code></pre>
<p>Then the following command</p>
<pre><code>[y for y in x if y[1] != 0]
</code></pre>
<p>Would return the desired result of:</p>
<pre><code>[[2, 1], [5, 1]]
</code></pre>
<p>Edit: I overlooked that it was a numpy array. Taking that into account, JoErNanO's answer is better.</p>
</div>
<span class="comment-copy">How are you declaring the array?</span>
<span class="comment-copy">Thank you also. Similar to @SimeonJM, I just replaced the != to ==</span>
<span class="comment-copy">if my answer worked please vote me !</span>
<span class="comment-copy">Yes exactly what needed. I was trying to do something similar but my proposed array comprehension was messed up. Thanks.</span>
<span class="comment-copy">Cool, glad it worked. JoErNanO's solution is more efficient for a numpy array, though, I believe.</span>
<span class="comment-copy">Ok, in this cased I marked solved by @JoErNanO solution. Thank you both.</span>
