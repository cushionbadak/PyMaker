<div class="post-text" itemprop="text">
<p>I have following style of string: </p>
<pre><code>line = '242322342343-gewe|gu_w=23423526,29845903458,3244;tu_w=2234234;'
</code></pre>
<p>I want to match elements that are in between <code>gu_w=</code> and <code>;</code>but after match I don't want <code>gu_w</code> and <code>;</code> to be in the result: </p>
<pre><code>re.compile(r'gu_w=(.*?);', re.I | re.U)
</code></pre>
<p>above expression will return: </p>
<pre><code>gu_w=23423526,29845903458,3244;
</code></pre>
<p>but how do I get regex to return <code>23423526,29845903458,3244</code></p>
<p>I was thinking strip the results after matching but is there a better way? </p>
</div>
<div class="post-text" itemprop="text">
<p>You must be doing <code>.group(0)</code>, which returns the entire match.  You should be accessing capture group <code>1</code> instead.  This will return only the text matched by <code>(.*?)</code>:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; line = '242322342343-gewe|gu_w=23423526,29845903458,3244;tu_w=2234234;'
&gt;&gt;&gt; pat = re.compile(r'gu_w=(.*?);', re.I | re.U)
&gt;&gt;&gt; pat.search(line).group(1)
'23423526,29845903458,3244'
&gt;&gt;&gt;
</code></pre>
<p>Below is an excerpt from the <a href="https://docs.python.org/3/library/re.html#re.match.group" rel="nofollow">documentation</a>:</p>
<blockquote>
<p><code>match.group([group1, ...])</code></p>
<p>Returns one or more subgroups of the match...<strong>If a
  <code>groupN</code> argument is zero, the corresponding return value is the entire
  matching string</strong>; if it is in the inclusive range <code>[1..99]</code>, it is the string matching the corresponding parenthesized group.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>In addition to iCodez's answer, you could also use lookarounds to handle the boundaries.</p>
<pre><code>re.compile(r"""
    (?&lt;=gu_w=)    # assert literal gu_w=
    .*?           # match anything, non-greedily
    (?=;)         # assert literal ;""", re.I | re.U | re.X)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This regex:</p>
<pre><code>gu_w=([^;]+)
</code></pre>
<p><a href="https://regex101.com/r/fE6kA0/2" rel="nofollow">DEMO</a></p>
<p>will match between the anchors without including them.</p>
<p>Python demo:</p>
<pre><code>&gt;&gt;&gt; st='242322342343-gewe|gu_w=23423526,29845903458,3244;tu_w=2234234;'
&gt;&gt;&gt; re.search(r'gu_w=([^;]+)', st).group(1) 
'23423526,29845903458,3244'
</code></pre>
<p>You can also use named capture groups to make your intent more clear:</p>
<pre><code>&gt;&gt;&gt; seeking='gu_w'
&gt;&gt;&gt; m=re.search(r'{0}=(?P&lt;{0}&gt;[^;]+)'.format(seeking), st)
&gt;&gt;&gt; m.group(seeking)
'23423526,29845903458,3244'
</code></pre>
<p>Or,</p>
<pre><code>&gt;&gt;&gt; m.groupdict()
{'gu_w': '23423526,29845903458,3244'}
</code></pre>
</div>
<span class="comment-copy">shoot i was indeed doing group.</span>
<span class="comment-copy">@How would i give a name to the group <code>re.compile(r'(?P&lt;gu&gt;gu_w=(.*?);)', re.I | re.U)</code> this will return entire thing.</span>
<span class="comment-copy">Use <code>.group(2)</code> since you put the capture group in another capture group.</span>
