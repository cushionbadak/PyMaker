<div class="post-text" itemprop="text">
<p>I am trying to use Python's <code>mock</code> library in my unit testing but I am seeing inconsistent results depending on how I import the target that I am trying to patch. I would expect that both of these print statements should return <code>False</code> but it appears that only the second statement returns <code>False</code>:</p>
<pre><code>from requests import get
import requests

with mock.patch('requests.get') as get_mock:
    get_mock.return_value.ok = False
    print get('http://asdf.com').ok
    print requests.get('http://asdf.com').ok
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>According to <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="nofollow">Where to patch</a> <code>unittest.mock</code> documentation you should pay some attention about what you patch.</p>
<p>Use</p>
<pre><code>from requests import get
</code></pre>
<p>create a local reference (a copy) of the original method. By </p>
<pre><code>with mock.patch('requests.get') as get_mock:
</code></pre>
<p>you patch just the reference in <code>requests</code> module that give to you so called <em>inconsistent results</em> because the local reference created by <code>from</code> sentence remain untouched.</p>
<p>The local reference can be patched by <code>patch.object(get)</code> or <code>patch('__main__.get')</code>.</p>
</div>
<span class="comment-copy">Are you still interested?</span>
<span class="comment-copy">Interested in what?</span>
<span class="comment-copy">About this question... I've not received any feedback on my answer. There are something that is not clear?</span>
