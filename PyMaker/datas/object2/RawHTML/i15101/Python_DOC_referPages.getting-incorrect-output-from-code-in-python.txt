<div class="post-text" itemprop="text">
<p>For this function I am supposed to read a file with 12 random numbers. Then I am supposed to output the numbers 1 per line and finally the program is supposed to separate the even numbers and the odds then add them up and display their totals. The problem here is that even though I am getting printing of the numbers fine, the total function in the end is messing up and giving incorrect totals. </p>
<pre><code>def main():

    infile = open('numbers.txt','r')

    line1 = infile.readline()
    line2 = infile.readline()
    line3 = infile.readline()
    line4 = infile.readline()
    line5 = infile.readline()
    line6 = infile.readline()
    line7 = infile.readline()
    line8 = infile.readline()
    line9 = infile.readline()
    line10 = infile.readline()

    line1 = line1.rstrip('\n')
    line2 = line2.rstrip('\n')
    line3 = line3.rstrip('\n')
    line4 = line4.rstrip('\n')
    line5 = line5.rstrip('\n')
    line6 = line6.rstrip('\n')
    line7 = line7.rstrip('\n')
    line8 = line8.rstrip('\n')
    line9 = line9.rstrip('\n')
    line10 = line10.rstrip('\n')

    print(line1)
    print(line2)
    print(line3)
    print(line4)
    print(line5)
    print(line6)
    print(line7)
    print(line8)
    print(line9)
    print(line10)

    line = infile.readline()

    total = 0
    evenTotal = 0
    oddTotal = 0

    while line != '':
        total += int(line)
        if int(line) % 2 == 0:
            evenTotal += int(line)
        else:
            oddTotal += int(line)
        line = infile.readline()

    print("=======================================")
    print('The total for the even numbers is', evenTotal)
    print("=======================================")
    print('The total for the odd numbers is', oddTotal)

    infile.close()
main()
</code></pre>
<p>Here's are the contents from the file</p>
<pre><code>47
64
67
40
91
98
82
2
42
84
48
96
</code></pre>
<p>I am only getting 0 for both the totals somehow. </p>
<p>Can someone help with this?</p>
</div>
<div class="post-text" itemprop="text">
<p>The file object returned by <code>open</code> maintains a pointer to where you are currently in a file.  Each time you call <code>infile.readline()</code> it is advancing that pointer to the next line.</p>
<p>Because in the process of testing your code you're reading each line (and printing it) in advance, when you get to the later code that counts the values of the lines your file has already reached the end and will not magically go back to the beginning of the file.</p>
<p>You can either reopen the file, or more simply use <a href="https://docs.python.org/3/library/io.html#io.IOBase.seek" rel="nofollow"><code>infile.seek(0)</code></a> to return the file pointer to the beginning of the file.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have two errors in your code,</p>
<ol>
<li><p>first you read your file line by line, reaching the end of file, and later you try to read further... that's impossible, you have to rewind your file, as explained in <a href="https://stackoverflow.com/a/28617926/2749397">Iguananaut's answer</a>.</p></li>
<li><p>your approach is, well, unusual...Â in general files are not read so explicitly, <code>line1</code>, <code>line2</code>, etc --- you want to be more generic so that your solution of a programming problem results more general.</p></li>
</ol>
<p>Of course there are a number of things you don't know about the manner Python deals with files, as the only thing you appear to know is the <code>.readline</code> method, that you abused a little. One really important thing about files is that <em>file objects</em> (what is returned by a <code>open</code>) are <em>iterables</em>, that is you can use them in a <code>for</code> loop (e.g., line 5 below), and the object that you have to deal with in every iteration is a line of text. That said, you can organize your code as follows</p>
<pre><code># initialize your accumulators
odds = 0 ; evens = 0

# read lines from your file simply iterating on the file object!
for line in open('numbers.txt'):

    # the int function ignores the white space, no need to strip
    n = int(line)
    % now you can print n
    print(n)
    # with an if...else... we update the accumulators
    if n%2:     # n is odd
        odds += n
    else:
        evens += n
    # we have read a line, converted in an integer, printed it,
    # we updated the sums, we have done everything, hence

# we dedent the code, meaning that we are out of the loop
total = evens+odds
print("The sum of all even numbers is", evens)
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should learn to use list comprehensions or loops instead...</p>
<pre><code>infile = open('numbers.txt','r')
numbers = [int(line) for line in infile]

evens = [num for num in numbers if num % 2 == 0]
odds = [num for num in numbers if num %2 == 1]
</code></pre>
<p>You should be able to do the rest with the code you have, however note that <code>sum([1,2,3,4,5])</code> returns <code>15</code>!</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/a/28617926/4279">@Iguananaut provided you with an answer to your issue</a>. Here's a solution to the problem stated in the question, to show how it can be done.</p>
<blockquote>
<p>For this function I am supposed to read a file with 12 random numbers. Then I am supposed to output the numbers 1 per line and finally the program is supposed to separate the even numbers and the odds then add them up and display their totals. </p>
</blockquote>
<pre><code>total = [0, 0] # even, odd
with open('numbers.txt') as file:
    for n in map(int, file): # read integers from the file, 1 per line
        print(n) # "output the numbers 1 per line"
        total[n &amp; 1] += n  # "separate the even .. and the odds then add them"
print("Even total: {}, odd total: {}".format(*total)) # "display their totals"
</code></pre>
</div>
<span class="comment-copy"><b>Wow</b> you need to learn loops (see e.g. <a href="https://docs.python.org/2/tutorial/controlflow.html" rel="nofollow noreferrer">docs.python.org/2/tutorial/controlflow.html</a>). But you're great in Modern Family!</span>
<span class="comment-copy">I believe you have read all the lines in the file when you're setting line1 = ..., line2 = ... meaning line equals nothing. You could read the lines inside the while loop, strip the newline and add the number to evenTotal/oddTotal</span>
<span class="comment-copy">There was a very similar (meaning almost exact) question asked couple of days ago. Is there some kind of class running somewhere? <a href="http://stackoverflow.com/questions/28597759/number-read-and-output/28597833#28597833">Read</a> the responses on that question. They deal with a lot of little things that are bothering you as well and could easily help you too!</span>
<span class="comment-copy">@ljetibo In the US anyways a new school semester recently started :)</span>
<span class="comment-copy">Unrelated, since you're also maintaining a <code>total</code> you don't need both <code>evenTotal</code> and <code>oddTotal</code> since <code>oddTotal == total - evenTotal</code> :)</span>
<span class="comment-copy">Got it. Thank you!</span>
<span class="comment-copy">I am going to look into what you said for sure. Thanks!</span>
<span class="comment-copy">All good advice in practice to be sure, but if this is a homework assignment it might not be accepted, depending on what the parameters of the assignment are.</span>
<span class="comment-copy">This also helped a bunch, thanks!</span>
