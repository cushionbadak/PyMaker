<div class="post-text" itemprop="text">
<p>I'm wondering whether it's possible to intercept a logging call to send an email or sms based on the level.</p>
<p>Bearing in mind that under email and sms, there is also <code>logging.error</code> which could cause a loop</p>
<pre><code>import logging, smtplib, urllib2

LOGGER = 'log.out'
FORMAT = '%(asctime)s %(levelname)s %(message)s'
LEVEL = logging.INFO

logging.basicConfig(filename=LOGGER, format=FORMAT, maxBytes=2048, level=LEVEL)

def email(_msg):
    try:
        email_mesg = "Subject:{0}\n\n{1}".format(email_subj, _msg)
        s = smtplib.SMTP(email_host)
        s.sendmail(email_from, email_recv, email_mesg)
        s.quit()
    except smtplib.SMTPException as e:
        logging.error(e)

def sms(_msg):
    try:
        sms_mesg = urllib2.quote(_msg)
        url = "https://smsapi/?username={0}&amp;password={1}&amp;message={2}&amp;orig={3}&amp;number={4}".format(sms_user, sms_pass, sms_mesg, sms_orig, sms_numb)
        req = urllib2.Request(url)
        res = urllib2.urlopen(req)
    except urllib2.URLError as e:
        logging.error(e)

if __name__ == "__main__":
    """
    The following line should log and trigger email
    """
    logging.warning("Something you should know about")

    """
    The following line should log and trigger sms
    """
    logging.error("Something you should know about")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use a <a href="https://docs.python.org/3/library/logging.html#filter-objects" rel="nofollow">Filter</a>:</p>
<pre><code>import sys, logging

class SMSEmailFilter(logging.Filter):
    def filter(self, record):
        if not record.args:
            if record.levelno == logging.WARN:
                email(record.msg)
            elif record.levelno &gt;= logging.ERROR:
                sms(record.msg)
        return True

logging.basicConfig(level=logging.DEBUG, format='%(asctime)s %(levelname)s %(message)s', stream=sys.stdout)
logger = logging.getLogger()
logger.addFilter(SMSEmailFilter())


def email(_msg):
    try:
        print "Sending email..."
    except:
        logger.error('from email', {'a': 1})


def sms(_msg):
    try:
        print "Sending sms..."
    except:
        logger.error('from sms', {'a': 1})


logger.warning('This is a warning')
logger.error('This is an error')
</code></pre>
</div>
<span class="comment-copy">Awesome. Thank you for the introduction to addFilter. Would this not cause an infinite loop in sms if it errored though?</span>
<span class="comment-copy">record.level isnt correct, it would be <code>levelno</code> or <code>levelname</code> <a href="https://docs.python.org/2/library/logging.html#logging.LogRecord" rel="nofollow noreferrer">docs.python.org/2/library/logging.html#logging.LogRecord</a></span>
<span class="comment-copy">Thanks, @Christian, amended.</span>
<span class="comment-copy">I hope you dont mind if i edit your answer to be the complete solution just so Im not adding an extra answer, after all, it was your solution</span>
<span class="comment-copy">Alright, seems like I had to approve it directly.</span>
