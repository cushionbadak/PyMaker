<div class="post-text" itemprop="text">
<pre><code>#Wednesday 11th February 2015 By Daniel B Scanlon
#Sorting Homework
import operator
pay = {}
pay["Developers"]=[35,22,18,36]
pay["Designers"]=[25,65,24,45]
pay["Testers"]=[34,52,12,32]
userInput=int(input("How would you like the menu to be sorted?\n1 for     Dictionary keys sorted in alphabetical order\n2 for Sort each list of employeeâ€™s pay rates from highest to lowest\n3 for Lowest pay level in each list sorted from highest to lowest\n4 for Average pay per department sorted from highest to lowest"))
if userInput == 1:
    for key,value in pay.items():
        sortedDictionary = sorted(pay)
     print (sortedDictionary)
if userInput == 2:
    for key,value in pay.items():
        value.sort()
        value.reverse()
        print(key,value)
if userInput == 3:
    for key,value in pay.items():
        value.sort()
        pay [key]=value.pop()
        lowestPay =   sorted(pay.items(),key=operator.itemgetter(1),reverse=True)
    print (lowestPay)
</code></pre>
<p>In the third <code>if</code> statement I am trying to get the highest value from each list and and then print them with the keys assigned to them from highest to lowest and when I run I am getting a error saying </p>
<pre><code>  ... line 22, in &lt;module&gt;
    lowestPay = sorted(pay.items(),key=operator.itemgetter(1),reverse=True)
TypeError: unorderable types: int() &lt; list()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to sort lists:</p>
<pre><code>sorted(pay.items(),key=operator.itemgetter(1),reverse=True)
</code></pre>
<p>Here <code>operator.itemgetter(1)</code> gets each <em>value</em> from the <code>pay</code> dictionary.</p>
<p>However, you replaced <strong>one</strong> value with an integer:</p>
<pre><code>value.sort()
pay [key]=value.pop()
</code></pre>
<p>That's the highest value from the original list, and you replaced the whole list with that lowest value.</p>
<p>So you had this:</p>
<pre><code>&gt;&gt;&gt; pay
{'Designers': [25, 65, 24, 45], 'Developers': [35, 22, 18, 36], 'Testers': [34, 52, 12, 32]}
</code></pre>
<p>then in your loop took <em>one</em> of those keys and replaced the value:</p>
<pre><code>&gt;&gt;&gt; key = 'Designers'
&gt;&gt;&gt; value = pay[key]
&gt;&gt;&gt; value
[25, 65, 24, 45]
&gt;&gt;&gt; value.sort()
&gt;&gt;&gt; pay[key] = value.pop()
&gt;&gt;&gt; pay
{'Designers': 65, 'Developers': [35, 22, 18, 36], 'Testers': [34, 52, 12, 32]}
</code></pre>
<p>Note how <code>pay['Designers']</code> is now no longer a list. It is a single integer. You now can no longer sort your dictionary items as you cannot compare a single integer to the other lists:</p>
<pre><code>&gt;&gt;&gt; sorted(pay.items(),key=operator.itemgetter(1),reverse=True)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: unorderable types: int() &lt; list()
</code></pre>
<p>If you wanted to find the highest pay rate, I'd use the <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow"><code>max()</code> function</a> here, and use it <em>twice</em>, once in the key function to select the highest value from the list:</p>
<pre><code>highest_rate = max(pay.items(), key=lambda i: max(i[1]))
</code></pre>
<p>This returns the <code>key, value</code> pair for the job title with the highest rate:</p>
<pre><code>&gt;&gt;&gt; pay = {'Designers': [25, 65, 24, 45], 'Developers': [35, 22, 18, 36], 'Testers': [34, 52, 12, 32]}
&gt;&gt;&gt; max(pay.items(), key=lambda i: max(i[1]))
('Designers', [25, 65, 24, 45])
</code></pre>
</div>
<span class="comment-copy">Why are you replacing each value in <code>pay</code> with a single integer from <code>value</code> before sorting?</span>
<span class="comment-copy">i am not a 100% sure what you mean but if its what i think your talking about its because i have been asked to find the highest pay rate in each list so i have ordered them then took the last one and added it to a different dictionary</span>
<span class="comment-copy">Thank you i knew i was doing something stupid</span>
