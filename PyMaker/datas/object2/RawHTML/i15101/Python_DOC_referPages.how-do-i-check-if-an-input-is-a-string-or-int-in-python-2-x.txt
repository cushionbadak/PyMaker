<div class="post-text" itemprop="text">
<p>I am trying to check if an input is a word or a number.</p>
<pre><code>var = input("var: ")

if isinstance(var, str):
    print "var = word"

else:
   print "var = number"
</code></pre>
<p>This is the code I came up with but sadly doesn't work;
I'm new to python and programming in general so I don't know alot of commands,
any suggestion would be appreciated ^^</p>
</div>
<div class="post-text" itemprop="text">
<p><code>input()</code> will take and evaluate your input before handing it over to you. That is, if the user enters <code>exit()</code>, your application will exit. This is undesirable from a standpoint of security. You would want to use <code>raw_input()</code> instead. In this case you can expect the returned value to be a string.</p>
<p>If you still want to check if the strings content is convertible to a (integer) number, please follow the approach discussed here:</p>
<ul>
<li><a href="https://stackoverflow.com/q/354038/1025391">How do I check if a string is a number (float) in Python?</a></li>
</ul>
<p>A short outline: Just try to convert it to a number and see if it fails.</p>
<p>Example (untested):</p>
<pre><code>value = raw_input()
try:
    int(value)
    print "it's an integer number"
except ValueError:
    print "it's a string"
</code></pre>
<p>For reference:</p>
<ul>
<li><a href="https://docs.python.org/2/library/functions.html#int" rel="nofollow noreferrer">https://docs.python.org/2/library/functions.html#int</a></li>
<li><a href="https://docs.python.org/2/library/functions.html#input" rel="nofollow noreferrer">https://docs.python.org/2/library/functions.html#input</a></li>
<li><a href="https://docs.python.org/2/library/functions.html#raw_input" rel="nofollow noreferrer">https://docs.python.org/2/library/functions.html#raw_input</a></li>
</ul>
<p>Note that the semantics of the <code>input()</code> function change with Python 3:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#input</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Did you try <code>str.isdigit()</code>?
For example:</p>
<pre><code>v = raw_input("input: ")

if v.isdigit():
    int(v)
    print "int"
else:
    print "string"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>input()</code> would always return for you a string (<code>str</code> type). there are several things you can do with that string to check if it's an <code>int</code></p>
<ol>
<li><p>you can try casting that string to an int:</p>
<pre><code>var = input("var: ")
try:
    var = int(var)
except ValueError:
    print "var is a str"
print "var is an int"
</code></pre></li>
<li><p>you can use regular expression to check if the string contains only digits (if your <code>int</code> is decimal, for other bases you'd have to use the appropriate symbols):</p>
<pre><code>import re
var = input("var: ")
if re.match(r'^\d+$', var):
    print "var is an int"
else:
    print "var is a str"
</code></pre></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>To check the variable type you can do the following:</p>
<pre><code>&gt;&gt;&gt; x = 10
&gt;&gt;&gt; type(x)
&lt;type 'int'&gt;
</code></pre>
<p>For string:</p>
<pre><code>&gt;&gt;&gt; y = "hi"
&gt;&gt;&gt; type(y)
&lt;type 'str'&gt;
</code></pre>
<p>Using <code>isinstance</code>:</p>
<pre><code>x = raw_input("var: ")
try:
    int(x)
except ValueError:
    print "string"
else: 
    print "int"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As @paidhima said the <code>input</code> function will always return a string in python 3.x.
Example:</p>
<pre><code>Python 3.4.0 (default, Apr 11 2014, 13:05:11) 
[GCC 4.8.2] on linux
Type "help", "copyright", "credits" or "license" for more information.

&gt;&gt;&gt; var = input("var: ")
var: 12
&gt;&gt;&gt; var
'12'
&gt;&gt;&gt;type(var)
&lt;class 'str'&gt;
&gt;&gt;&gt; 
</code></pre>
<p>If i do the following:</p>
<pre><code>&gt;&gt;&gt; var = input("var: ")
var: aa
&gt;&gt;&gt; var
'aa'
&gt;&gt;&gt; type(var)
&lt;class 'str'&gt;
&gt;&gt;&gt;
</code></pre>
<p>They are both string because it is not a good idea to have the program decide if it's gonna give us a string or and integer, we want the logic that we build in the program to handle that.
In python3.x you example is not gonna work, but you can try this this:</p>
<pre><code>#!/usr/bin/env python3
# -*- coding: utf-8 -*-

var = input('var: ')

# we try to conver the string that we got
# in to an intiger 
try:
    # if we can convert it we store it in the same
    # variable
    var = int(var)
except ValueError:
    # if we can't convert we will get 'ValueError'
    # and we just pass it 
    pass


# now we can use your code 
if isinstance(var, str):
    print("var = word")

else:
    print("var = number")
# notice the use of 'print()', in python3 the 'print is no longer 
# a statement, it's a function
</code></pre>
<p>Now back to your script using python2.x.
As i said above it's not a good practice to use the function <code>input</code>, you can use <code>raw_input</code> that works the same in python2.x like <code>input</code> in python3.x .</p>
<p>I'm gonna say it again because i don't want to confuse you :
Python2.x:</p>
<pre><code>input 
# evaluates the expression(the input ) and returns what
# can make from it, if it can make an integer it will make one
# if not it will keep it as a string

raw_input
# it will always return the expression(the input ) as a string for 
# security reasons and compatibility reasons
</code></pre>
<p>Python3.x</p>
<pre><code> input
 # it will always return the expression(the input ) as a string for 
 # security reasons and compatibility reasons
</code></pre>
<p>Attention, in python3.x there is no <code>raw_input</code> .</p>
<p>Your code should work just fine, in python2.x, make sure you use the right python, and i hope this helped you in a way or another.</p>
</div>
<span class="comment-copy">What do you mean by "doesn't work"?</span>
<span class="comment-copy">EDIT: Whoops, <code>raw_input</code> is always going to return a string, <code>input</code> does an eval..  ORIGINAL: The <code>input</code> function is always going to return a string, even if you enter only numbers.</span>
<span class="comment-copy">Any input returns me 'var = word', even if I input a string.</span>
<span class="comment-copy">@BhargavRao, thanks, I noticed that a moment after I typed it.</span>
<span class="comment-copy">@Manakin <code>raw_input</code> is <i>the</i> correct way in Python2</span>
<span class="comment-copy">Your code is working for me after a little change. I put the lower print in the line above the except ValueError:  This gave me a prefect result.  Thanks alot!</span>
<span class="comment-copy">This prints both <code>string</code> and <code>number</code> outputs when the input is a string. Put the last print in an <code>else:</code> statement and it should work perfect. @Manakin</span>
<span class="comment-copy">Thanks for the note. I adapted the snippet.</span>
<span class="comment-copy">Don't use <code>type</code> to check types in a conditional, use <code>isinstance</code>. In any case, there's no point in checking the type of <code>x</code> if you use <code>raw_input</code>, because it will always be a string.</span>
<span class="comment-copy">Changed and added the right code that works @Kevin</span>
