<div class="post-text" itemprop="text">
<p>Python source files often come with a <code>coding</code> header similar to the following</p>
<pre><code># -*- coding: iso-8859-1 -*-
</code></pre>
<p>How can I this line to properly parse the contents of such a file? Is there a better way than manually opening the file in binary mode, reading one line, and checking if it contains the header? Is there a library that does this?</p>
<hr/>
<p>Background: this comes in the context of fixing <a href="https://github.com/alecthomas/importmagic/issues/13" rel="nofollow">this bug</a>, which crashes elpy when used in conjunction with python3 and importmagic. The code that I'm trying to fix uses</p>
<pre><code>with open(filename) as fd:
    success = subtree.index_source(filename, fd.read())
</code></pre>
<p>and crashes on non-utf-8 files. Ideally I would like to keep changes to a minimum.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is <a href="https://docs.python.org/3/library/tokenize.html#tokenize.detect_encoding" rel="nofollow"><code>tokenize.open()</code></a> that does exactly that: it opens a Python source file using the character encoding specified in the <code>coding</code> header (<a href="https://www.python.org/dev/peps/pep-0263/" rel="nofollow">encoding declaration</a>).</p>
<p>You could <a href="https://gist.github.com/zed/dbdccd6d996b974e20cd" rel="nofollow">decode on-the-fly remote Python files too</a>.</p>
</div>
<span class="comment-copy">"better way" is such an extremely relative thing that I'm tempted to ignore your question. What is bad about the way you're currently doing it?</span>
<span class="comment-copy">@MarcusMÃ¼ller - considering that python supports some source encoding schemes, it is reasonable to assume that there is an already existing python library to read such files. There are several formats, 8 vs. 16 bit encodings, BOMs and etc..., its not an obvious thing to do on your own.</span>
<span class="comment-copy">ah, but there's a PEP that already describes how this should be handled</span>
<span class="comment-copy">@tdelaney: I've added an answer based on your inspiration; thanks!</span>
