<div class="post-text" itemprop="text">
<p>I'm writing a web app that requires an objective source of time "atomic clock or otherwise" to deal with API rate limits that reset every 15 minutes.</p>
<p>Is there a python library out there for this task or should I try scraping a webpage or what?</p>
<p>EDIT:  I'm sorry for not being philosophically clear about "objective."  I just meant a website that offers a reasonably accurate source of time, instead of my computer or otherwise, that's accurate within a minute or two.  </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Wall time. The API resets once every 15 minutes. Within ~15 seconds accuracy but I'm flexible. </p>
</blockquote>
<p>You could use <a href="https://docs.python.org/3/library/time.html#time.monotonic" rel="nofollow noreferrer"><code>time.monotonic()</code></a>:</p>
<blockquote>
<p>Return the value (in fractional seconds) of a monotonic clock, i.e. a
  clock that cannot go backwards. The clock is not affected by system
  clock updates. The reference point of the returned value is undefined,
  so that only the difference between the results of consecutive calls
  is valid.</p>
</blockquote>
<p>You could call <code>start = time.monotonic()</code> every 15 minutes. The difference <code>time.monotonic() - start</code> is the elapsed time measured well within 15 seconds tolerance.</p>
<p><a href="https://www.python.org/dev/peps/pep-0418/" rel="nofollow noreferrer">PEP 418: Add monotonic time, performance counter, and process time functions</a> mentions what hardware clocks are typically available and the properties of the corresponding OS time functions.</p>
<p>You could <a href="https://stackoverflow.com/questions/1205722/how-do-i-get-monotonic-time-durations-in-python#comment30697978_14416514">implement <code>time.monotonic()</code> on Python 2.7 if necessary</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>What makes you think that the site you are scraping also uses "objective time"?</p>
<p>I suggest you slow your request rate to something like 5% below the stated limit.</p>
<p>That should give enough leeway that a low-resolution "non-objective" timer will keep you out of trouble.</p>
</div>
<span class="comment-copy">What is "objective" time and how much accuracy do you need?</span>
<span class="comment-copy">Einstein said that there is no such thing as objective time. You probably need high resolution time, but it is very hard to achieve (and not a task for Python of course). Advise: instead of buying atomic clock, use GPS receivers (all GPS satellites have own atomic clock).</span>
<span class="comment-copy">You don't need atomic time for some event that repeats every couple of minutes. Do you need real time (wall clock but can drift eg. due to DST) or monotonic time (increases steadily but has no relation to wall clock)?</span>
<span class="comment-copy">Wall time.  The API resets once every 15 minutes.  Within ~15 seconds accuracy but I'm flexible.</span>
<span class="comment-copy">Relatively objective time.  Sorry for not being completely clear.  I get from the down votes that my plan is a "bad idea" and will try out your suggestion.  Thanks.</span>
