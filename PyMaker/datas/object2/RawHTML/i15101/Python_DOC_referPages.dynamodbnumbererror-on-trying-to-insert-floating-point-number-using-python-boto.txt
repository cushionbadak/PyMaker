<div class="post-text" itemprop="text">
<p>Code snippet : </p>
<pre><code>conn = dynamo_connect()

company = Table("companydb",connection=conn)

companyrecord = {'company-slug':'www-google-com12','founding-year':1991, 'randomlist' :[1,2,3,4,5], 'randomdict' : {'a':[1,2,3],'b':'something','randomnumber':10.55} }

company.put_item(data=companyrecord)
</code></pre>
<p>I am getting the following error:</p>
<pre><code>File "C:\Python27\lib\site-packages\boto\dynamodb2\items.py", line 329, in prepare_full
    final_data[key] = self._dynamizer.encode(value)
  File "C:\Python27\lib\site-packages\boto\dynamodb\types.py", line 279, in encode
    return {dynamodb_type: encoder(attr)}
  File "C:\Python27\lib\site-packages\boto\dynamodb\types.py", line 335, in _encode_m
    return dict([(k, self.encode(v)) for k, v in attr.items()])
  File "C:\Python27\lib\site-packages\boto\dynamodb\types.py", line 279, in encode
    return {dynamodb_type: encoder(attr)}
  File "C:\Python27\lib\site-packages\boto\dynamodb\types.py", line 305, in _encode_n
    raise DynamoDBNumberError(msg)
boto.dynamodb.exceptions.DynamoDBNumberError: BotoClientError: Inexact numeric for `10.55`
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes There are Known <a href="https://github.com/boto/boto/issues/1531" rel="nofollow">issues</a> on GitHub related to floating numbers, There may be 2 workarounds , First if you are comfortable to store <code>10.5</code> instead of <code>10.55</code>, then it will just work fine I guess, The another is to store the floating value as String or integer and later modulate it while accessing.</p>
<p>So of you chose the string part then you could store it as <code>'10.55'</code> instead of <code>10.55</code> and later when you access the values from the table then you could simply use <code>float("10.55")</code> and you will be done.</p>
<p>Another method is to store it as an integer , First choose a precision value (say 2 decimal values) then you will store <code>10.55</code> as <code>1055</code>(multiplied by 100, since 2 decimal precision), and while accessing it you could have simply used <code>1055/100.0</code> and you will get <code>10.55</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>Python3 offers <a href="https://docs.python.org/3/library/stdtypes.html#float." rel="nofollow noreferrer">float.hex() / .fromhex()</a> to store floats as string without loosing precision:</p>
<blockquote>
<p>Two methods support conversion to and from hexadecimal strings. Since Pythonâ€™s floats are stored internally as binary numbers, converting a float to or from a decimal string usually involves a small rounding error. In contrast, hexadecimal strings allow exact representation and specification of floating-point numbers. This can be useful when debugging, and in numerical work.</p>
</blockquote>
<p>If you don't want to loose any precision, this might be an alternative to @ZdaR's solution using <code>str()</code> and <code>float()</code> for conversion.</p>
<p>[Note: I'm a new user and couldn't comment on <a href="https://stackoverflow.com/a/28425387/4998979">ZdaR's solution</a>]</p>
</div>
<div class="post-text" itemprop="text">
<p>Use Decimal(str(your_number)) instead.
See <a href="https://github.com/boto/boto3/issues/665" rel="nofollow noreferrer">https://github.com/boto/boto3/issues/665</a></p>
</div>
<span class="comment-copy">Mind including the code that's actually causing the error...?</span>
<span class="comment-copy">@tzaman I have updated the code in my post above. I have tried inserting records for a dictionary without a float value, the insertion works just fine. Even when put 10.55 as '10.55' , it also works but the Dynamodb data type is then interpreted as String and not Number</span>
<span class="comment-copy">This is not a solution to the problem it is just a small hack.</span>
<span class="comment-copy">true. I do not want to loose any of the precision data - that leaves me with option 2 - convert all float values in the python dictionary to string and re-construct the dictionary before calling put-item so that i would clear boto validation and not throw exception. Also, one thing to keep in mind is the dictionaries can be nested , it has to work in either case. Are you aware of any library that would perform this function ?</span>
<span class="comment-copy">Exactly, so try using <code>string</code> instead of float</span>
<span class="comment-copy">makes sense, i wrote my own wrapper to convert all the float occurrences to string values. Thanks @anmol_uppal for your help.</span>
