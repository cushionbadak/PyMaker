<div class="post-text" itemprop="text">
<p>I have a list with two integers which can change randomly. I want to check if any of these integers are over <code>21</code>.</p>
<p>So for example if I wanted to find a specific integer I would say:</p>
<pre><code>score = [4, 21]
if 21 in score:
   ...
</code></pre>
<p>However, how would I change this to a range of values instead of a specific integer.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you only have two numbers, simple conditional operators will suffice:</p>
<pre><code>if score[0] &gt; 21 or score[1] &gt; 21:
</code></pre>
<p>Otherwise, if you have more numbers, you can use <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow"><code>any</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="nofollow">generator expression</a>:</p>
<pre><code>if any(x &gt; 21 for x in score):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try it this way (using <code>any</code>):</p>
<pre><code>score = [4, 21]
integers = [21,43]
if any(i &gt; max(score) for i in integers):
    ...
</code></pre>
<p>The integers can be an iterable of any length, say <code>[2,3,1,6,7]</code>. It'll check them one at a time to verify if it satisfies the condition that <code>i &gt; max(score)</code>. The first one that does will short-circuit the result to <code>True</code>. The code inside the condition then executes successfully.</p>
</div>
<div class="post-text" itemprop="text">
<p>You might look into using a <code>Set</code>. </p>
<pre><code>score = set([4, 21, 8, 10, 22, 12])
target= set([21, 22])

if target.issubset(score):
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>range</code>:</p>
<pre><code>&gt;&gt;&gt; s
[4, 21]
&gt;&gt;&gt; 2 in range(s[0], s[1])
False
&gt;&gt;&gt; 20 in range(s[0], s[1])
True
&gt;&gt;&gt; 
</code></pre>
<p>If your list is not ordered, you have to add <code>s.sort()</code> before proceeding with the use of <code>range</code></p>
</div>
<span class="comment-copy">This assumes that s only contains exactly two numbers that are ordered.</span>
<span class="comment-copy">And it is a correct assumption. Read the first sentence of the OP's question: "I have a list with two integers which can change randomly..." ordering them would only require an additional <code>s.sort()</code></span>
<span class="comment-copy">Ideally you would look for a slightly more general solution. And why would you create a list of arbitrary numbers and compare your target to all of them? If <code>s[0] == 1</code> and <code>s[1] == 21</code>, there is no reason to create a list of 20 numbers and compare a target value to each member of that list. See iCodez's solution using Python's <code>any</code>.</span>
<span class="comment-copy">I don't think the use of <code>any</code> is suitable for a beginner. The use of <code>range</code> might not be very efficient but it doesn't introduce a new keyword. Your own answer also shows a misunderstanding of what is being asked and is unnecessarily difficult for a newbie, IMO.</span>
