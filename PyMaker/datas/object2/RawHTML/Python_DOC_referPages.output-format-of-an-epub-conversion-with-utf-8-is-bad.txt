<div class="post-text" itemprop="text">
<p>I want to write an epub file from .epub to .txt and get only the text, I found an library to do it.</p>
<pre><code>import epub_conversion

f = open("demofile.txt", "a")
book = open_book("razvansividra.epub")
lines = convert_epub_to_lines(book)

for line in lines:
    f.writelines(str(line.encode("utf-8")))
</code></pre>
<p>Everything good, but the main problem is that the output is in this format:</p>
<blockquote>
<p>Carte electronic\xc4\x83 publicat\xc4\x83 cu sprijinul Ministerului Afacerilor Externe \xe2\x80\x93 Departamentul Politici pentru Rela\xc8\x9bia cu Rom\xc3\xa2nii de Pretutindeni.'b'  'b'</p>'b''b''</blockquote></div>
<div class="post-text" itemprop="text">
<p>You're taking an unnecessary encoding/decoding round trip.</p>
<p>Check this little interactive session:</p>
<pre><code>&gt;&gt;&gt; s = 'electronică'
&gt;&gt;&gt; b = s.encode('utf-8')
&gt;&gt;&gt; b
b'electronic\xc4\x83'
&gt;&gt;&gt; str(b)
"b'electronic\\xc4\\x83'"
</code></pre>
<ul>
<li>First, you have a string <code>s</code>, which you encode – you get a <code>bytes</code> object (note the <code>b'...'</code> notation).</li>
<li>Then you call <code>str()</code> on it, which converts it back to a string again – but not by decoding, but by using extra quotes and escape sequences.</li>
<li>When you call <code>f.writelines()</code>, this string is decoded again internally for writing it to disk. But since it's all ASCII, that last step isn't obvious.</li>
</ul>
<p>You should make sure to open the files with the right encoding from the beginning.
Then you won't have to use <code>line.encode('utf-8')</code> anymore.</p>
<p>Thus:</p>
<pre><code>f = open("demofile.txt", "w", encoding="utf-8")
</code></pre>
<p>And then later:</p>
<pre><code>f.writelines(lines)
</code></pre>
<p>Note that there's no need to do <code>for line in lines</code> if you use <code>writelines</code>; it's already meant to be used with an iterable of lines.</p>
<p>When you open the resulting file, make sure you use an editor that supports UTF-8.
Notably "simple" Windows tools like Notepad typically fail to display UTF-8 files correctly.</p>
</div>
