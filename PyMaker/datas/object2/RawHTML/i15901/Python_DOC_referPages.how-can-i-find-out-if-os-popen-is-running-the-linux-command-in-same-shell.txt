<div class="post-text" itemprop="text">
<p>I've the below python function that I use to run the linux command. I'm running a script which creates some environment variable and then I'm porting all those variable into on script again by running the linux command using the function below; however it seems that the environment variables of the first command is not getting recorded using second command. I was wondering is it because the <code>os.popen</code> runs command in different shell every time I call it? If so how can I modify my code or which function to use to have everything running in the same shell?</p>
<pre><code>def execute(cmd):
    '''Module to execute linux command'''
    try:
        proc = os.popen(cmd)
        out = proc.read().strip()
        return out
    except Exception,err:
        print "Exception occurred : %s"%str(err)
        raise(str(err))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>os.popen()</code> is deprecated.  In its place we have <code>subprocess.Popen()</code> and perhaps even better for your use case, <code>subprocess.check_output()</code>.  These new methods take an optional <code>env</code> argument which is a dict of environment variable names and values.  You can pass anything you need in there.</p>
<p>Or, if you really want to set the variables outside and have them "stick" in subprocesses, you can <code>export</code> them in the shell (<code>export myvarname</code>) before running Python.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://man7.org/linux/man-pages/man3/popen.3.html" rel="nofollow">popen(3)</a> (and in Python <a href="https://docs.python.org/3/library/os.html#os.popen" rel="nofollow">os.popen</a>) never runs the <em>same</em> shell, but forks a new one.</p>
</div>
<span class="comment-copy">actually I'm setting many env variable during the program and then depending on the situation only need to source back. Is there any way by which I can retain the shell itself ?</span>
<span class="comment-copy">What is "the shell itself?"  The one where Python was launched from?  I'm not clear on what the workflow is.</span>
<span class="comment-copy">Ok. Here is the flow of my program.</span>
<span class="comment-copy">Ok. Here is the flow of my program. My python script is calling a utility(test.sh) which records the shell environment to a file.   Before calling this utility I sourced another file which had some set of shell variables.  Now when I record the environment using test.sh I don't find the shell variables that I sourced from the other file.</span>
<span class="comment-copy">When you say "I source another file" what does that mean?  You mean you sourced another file from Python by launching a shell?  This will never work.  I think you might better simply "parse" the other file in Python and pass the needed variables using the <code>env</code> argument I suggested.</span>
