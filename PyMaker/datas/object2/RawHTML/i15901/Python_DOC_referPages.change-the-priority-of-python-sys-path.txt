<div class="post-text" itemprop="text">
<p>How can I change the priority of the path in sys.path in python 2.7?
I know that I can use <code>PYTHONPATH</code> environment variable, but it is what I will get:</p>
<pre><code>$ PYTHONPATH=/tmp python
Python 2.7.6 (default, Mar 22 2014, 22:59:56) 
[GCC 4.8.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import sys
&gt;&gt;&gt; for i in sys.path:
...   print i
... 

/usr/local/lib/python2.7/dist-packages/pycuda-2014.1-py2.7-linux-x86_64.egg
/usr/local/lib/python2.7/dist-packages/pytest-2.6.2-py2.7.egg
/usr/local/lib/python2.7/dist-packages/pytools-2014.3-py2.7.egg
/usr/local/lib/python2.7/dist-packages/py-1.4.24-py2.7.egg
/usr/lib/python2.7/dist-packages
/tmp
/usr/lib/python2.7
/usr/lib/python2.7/plat-x86_64-linux-gnu
/usr/lib/python2.7/lib-tk
/usr/lib/python2.7/lib-old
/usr/lib/python2.7/lib-dynload
/usr/local/lib/python2.7/dist-packages
/usr/lib/python2.7/dist-packages/PILcompat
/usr/lib/python2.7/dist-packages/gtk-2.0
/usr/lib/python2.7/dist-packages/ubuntu-sso-client
&gt;&gt;&gt; 
</code></pre>
<p><code>/tmp</code> is added between <code>/usr/lib/python2.7/dist-packages</code> and <code>/usr/lib/python2.7</code>.</p>
<p>My goal is to make python to load packages from <code>/usr/local/lib/python2.7/dist-packages</code> first.</p>
<p>Here is what I want:</p>
<pre><code>$ python
Python 2.7.6 (default, Mar 22 2014, 22:59:56) 
[GCC 4.8.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; import numpy as np
&gt;&gt;&gt; np.version
&lt;module 'numpy.version' from '/usr/local/lib/python2.7/dist-packages/numpy/version.pyc'&gt;
&gt;&gt;&gt; 
</code></pre>
<p>If I install <code>python-numpy</code> by <code>apt-get install python-numpy</code>. Python will try to load from <code>/usr/lib/python2.7</code> and not the one I compiled.</p>
</div>
<div class="post-text" itemprop="text">
<p>As you may know, <a href="https://docs.python.org/2/tutorial/modules.html#the-module-search-path" rel="noreferrer"><code>sys.path</code> is initialized from</a>:</p>
<ul>
<li>the current directory</li>
<li>your <code>PYTHONPATH</code></li>
<li>an installation-dependent default</li>
</ul>
<p>However unfortunately that is only part of the story: <code>setuptools</code> creates <a href="https://pythonhosted.org/setuptools/easy_install.html" rel="noreferrer"><code>easy-install.pth</code></a> files, which also modify <code>sys.path</code> and worst of all they <em>prepend</em> packages and therefore totally mess up the order of directories.</p>
<p>In particular (at least on my system), there is <code>/usr/local/lib/python2.7/dist-packages/easy-install.pth</code> with the following contents:</p>
<pre><code>import sys; sys.__plen = len(sys.path)
/usr/lib/python2.7/dist-packages
import sys; new=sys.path[sys.__plen:]; del sys.path[sys.__plen:]; p=getattr(sys,'__egginsert',0); sys.path[p:p]=new; sys.__egginsert = p+len(new)
</code></pre>
<p>This causes <code>/usr/lib/python2.7/dist-packages</code> to be <em>prepended even before your <code>PYTHONPATH</code></em>!</p>
<p>What you could do is simply change the 2nd line in this file to</p>
<pre><code>/usr/local/lib/python2.7/dist-packages
</code></pre>
<p>and you will get your desired priority.</p>
<p>However beware this file might be overwritten or changed again by a future <code>setuptools</code> invocation!</p>
</div>
<div class="post-text" itemprop="text">
<p>We encountered an almost identical situation and wanted to expand upon @kynan's response which is spot-on.  In the case where you have such an <code>easy-install.pth</code>  that you want to overcome, but which you cannot modify it (say you are a user with no root/admin access), you can do the following:</p>
<ul>
<li><p>Set up an <a href="https://docs.python.org/3/install/#alternate-installation" rel="nofollow noreferrer">alternate python installation scheme</a></p>
<ul>
<li>e.g. we use a PYTHON HOME install (setting PYTHONUSERBASE)</li>
</ul></li>
<li><p>Create a user/home site-packages</p>
<ul>
<li>You can do this by installing a package into the user env: <code>pip install &lt;package&gt; --user</code> </li>
</ul></li>
<li><p>Create a pth to set <code>sys.__egginsert</code> to workaround the system/distribution easy-install.pth</p>
<ul>
<li>Create a <code>$PYTHONUSERBASE/lib/python2.7/site-packages/fix_easy_install.pth</code></li>
<li>Containing: <code>import sys; sys.__egginsert = len(sys.path);</code></li>
</ul></li>
</ul>
<p>This will set <code>sys.__egginsert</code> to point to the end of your <code>sys.path</code> including your usersite paths.  When the nefarious system/dist <code>easy-install.pth</code> will then insert its items at the end of the system path.</p>
</div>
<span class="comment-copy">From the outputs you provided python <i>is</i> loading modules from <code>/usr/local</code> before those in <code>/usr/lib</code> so, where's the problem?</span>
<span class="comment-copy">Have you tried simply editing the variable sys.path to see if that works?</span>
<span class="comment-copy">@Bakuriu no. I remove the installed numpy by "apt-get remove python-numpy" to get this result for asking the solution.</span>
<span class="comment-copy">Well you could put it in your $PYTHONSTARTUP file, then it would be "permanent" in the same way that modifying $PYTHONPATH would be.</span>
<span class="comment-copy">Note that what you are seeing is due to the implicit <a href="https://docs.python.org/3.4/library/site.html" rel="nofollow noreferrer"><code>import site</code></a> done during initialization. If you launch the interpreter with the <code>-S</code> options you'll see that <code>/tmp</code> is added at the beginning of the list instead of among the other paths.</span>
