<div class="post-text" itemprop="text">
<p>this is my first post here! I hope this question wasn't answered before, unfortunately I didn't really know what I should have searched for...</p>
<p>This is a university exercise where I'm asked to draw a series of squares with user-defined columns an rows and with the colour (blue) progressively becoming lighter. To complicate things further , the squares must be ordered from darker to lighter in even rows (row 0 included) and in the other direction in odd ones, with the darkest square of each row being lighter than the lightest of the previous row.</p>
<p>I'm using pygame 1.9 with python 3.2.</p>
<p>Here's what I tried so far:</p>
<p><div class="snippet" data-hide="false" data-lang="js">
<div class="snippet-code">
<pre class="snippet-code-html lang-html prettyprint-override"><code>import pygame
rows = int(input('Rows? '))
cols = int(input('Columns? '))
colourstepblue = 255/(cols*rows) #defines how much lighter the squares
                                 #become at each iteration
pygame.init()                   
screen = pygame.display.set_mode((640,480))
screen.fill((255,255,255))
count = 0
for i in range(0,rows):
    for a in range(0,cols):
        if i%2 == 0:
            pygame.draw.rect(screen, (0, 0, (colourstepblue*( (a) * (i+1)))), (a*30, i*30, 29, 29))    
        else:
            pygame.draw.rect(screen, (0, 0, 255 - (i)*colourstepblue*a), (a*30, i*30, 29, 29))
    count += cols
pygame.display.flip()</code></pre>
</div>
</div>
</p>
<p>(sorry if it says html I don't know how to have it say python)</p>
<p>This produces the right amount of squares in the right format, however I can't manage to get the colouring right. I'd be grateful for any advice you can give on getting this to work properly (although again this is an excercise so I'd rather not be given the code outright, just a tip to set me in the right direction).</p>
<p>Thanks for any answer and sorry for the long question!</p>
</div>
<div class="post-text" itemprop="text">
<p>One way to get the colors right is to generate them first, instead of calculating them as you go. You can do this easily with a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>.</p>
<p>If you are in python 2, you need to be careful when you divide. Make sure one of the numbers is a float to prevent python from rounding them to int. Also, you can omit the first parameter in <code>range</code>. It will default to 0.</p>
<pre><code>colourstepblue = 255.0/(cols*rows)
colours = [x*colourstepblue for x in range(cols*rows)]
</code></pre>
<p>Then, you can slice the list of colours. In the odd rows, you can slice the list in reverse.
Also, you should consider using more descriptive variable names.</p>
<pre><code>for row in range(rows):
    if row % 2 == 0:
        row_colours = colours[row*rows:(row+1)*rows]
    else 
        row_colours = colours[(row+1)*rows:row*rows:-1]
    for col in range(cols):
        # row_colours[col] contains the colour you want
</code></pre>
</div>
<span class="comment-copy">Thanks, it's a very good idea, but for some reason when I write this: for col in cols:         pygame.draw.rect(screen, (0, 0, row_colours[col]), (col*30, row*30, 29, 29)) it says I'm out of range</span>
<span class="comment-copy">Ah, I've missed something. I've modified the code that slices the list. I think that should work now. @Sauron</span>
<span class="comment-copy">Thanks, works perfectly now :D can you tell me exactly why the previous version didn't work? After all this excercise's purpose was to teach me something ^^ @parchment</span>
<span class="comment-copy">My previous version didn't work because I sucked at math :P @Sauron</span>
<span class="comment-copy">@Sauron <a href="http://i.stack.imgur.com/t0h5K.png" rel="nofollow noreferrer">actual issue</a></span>
