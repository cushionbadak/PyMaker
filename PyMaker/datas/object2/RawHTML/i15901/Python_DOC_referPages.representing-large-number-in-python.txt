<div class="post-text" itemprop="text">
<p>I am getting a large value as a string as follows</p>
<pre><code>s='1234567'
d='12345678912'
</code></pre>
<p>I want to do arithmetic as <code>(100/d)*s</code>
To do this, I need to convert the strings to appropriate large values. What would be the way to represent them as a number?</p>
</div>
<div class="post-text" itemprop="text">
<p>Just convert them using <a href="https://docs.python.org/2/library/functions.html#float" rel="nofollow"><code>float</code></a>. Python takes care of creating appropriately large representation. You can read more about <a href="https://docs.python.org/2/library/stdtypes.html#typesnumeric" rel="nofollow">Numerals here</a>.</p>
<pre><code>s='1234567'
d='12345678912'

(100/float(d))*float(s)
</code></pre>
<p>You could convert them using <a href="https://docs.python.org/2/library/functions.html#int" rel="nofollow"><code>int</code></a>, but as @GamesBrainiac pointed, that will work only in Python3; in Python2 it will most of the time give you 0 as result.</p>
<pre><code>(100/int(d))*int(s)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If <code>s</code> and <code>d</code> are large e.g., thousands of digits then you could use <a href="https://docs.python.org/3/library/fractions.html" rel="nofollow"><code>fractions</code> module</a> to find the fraction:</p>
<pre><code>from fractions import Fraction

s = int('1234567')
d = int('12345678912')
result = Fraction(100, d) * s
print(result)
# -&gt; 30864175/3086419728
</code></pre>
<p><code>float</code> has finite precision; It won't work for very large/small numbers.</p>
</div>
<span class="comment-copy">Numbers in python can be as large as you want them to be. No need to use strings. Just do <code>int(number)</code> and you're done. Python 3 has great number features.</span>
<span class="comment-copy">Check out the Decimal module</span>
<span class="comment-copy">@GamesBrainiac I think <code>int</code> won't work with the example OP has given, it will output <code>0</code> in most cases.</span>
<span class="comment-copy">@muç„¡ In python 3, it will work fine, but in 2 it won't.</span>
<span class="comment-copy">I am getting an invalid literal for float error</span>
<span class="comment-copy">@user2626431 It is working fine for me. What are your input values? Do they contain whitespace?</span>
