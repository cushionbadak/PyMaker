<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15112125/how-to-test-multiple-variables-against-a-value">How to test multiple variables against a value?</a>
<span class="question-originals-answer-count">
                    21 answers
                </span>
</li>
</ul>
</div>
<p>Is there a way to do effectively do:</p>
<pre><code>if operator != ('+' or '-' or '*' or '/'):
</code></pre>
<p>without having to do</p>
<pre><code>operator != '+' and operator != '-' and operator != '*'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use the <code>in</code> operator</p>
<pre><code>if operator not in ('+', '-', '/')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Effective to read solution would be: <code>if operator in ('+', '-', '*', '/')</code> or simply <code>if operator in '+-*/'</code> (thanks @kindall) which is like looking for a char in a string. I personally find it less readable though.</p>
<p>Otherwize you use a dictionnary (for instance, to bind a function to each operator) and just use exceptions:</p>
<pre><code>ops = {'+': 'plus', '-': 'minus', '*': 'times', '/': 'div'}
operator = '/'
try:
  print ops[operator]
except KeyError:
  print "Unknow operation (%s)" % (operator)
</code></pre>
</div>
<span class="comment-copy">..and <a href="https://docs.python.org/3/whatsnew/3.2.html#optimizations" rel="nofollow noreferrer"><code>operator not in {'+', '-', '/'}</code> in Python 3.2+</a></span>
<span class="comment-copy">@AshwiniChaudhary -- Ooo ... I didn't realize that the python3.2 optimizer was that smart.  That's fantastic.</span>
<span class="comment-copy">Works with python 2 as well <a href="https://docs.python.org/2/reference/expressions.html#set-displays" rel="nofollow noreferrer">docs.python.org/2/reference/expressions.html#set-displays</a></span>
<span class="comment-copy">@srj It is not about how sets are displayed, it is about the optimization done by <a href="https://github.com/python/cpython/blob/master/Python/peephole.c#L84" rel="nofollow noreferrer">peephole.c</a> in Python 3.2+ when it sees set literals being used with <code>in</code> and <code>not in</code> operators. See <a href="http://bugs.python.org/issue6690" rel="nofollow noreferrer">issue 6690</a> for details.</span>
<span class="comment-copy"><code>operator in "+-*/"</code> ... no need to use a list since the operators are all single chars.</span>
