<div class="post-text" itemprop="text">
<p>I have read a lot now on the topic of UTF-8 encoding in Python 3 but it still doesn't work, and I can't find my mistake.</p>
<p>My code looks like this</p>
<pre><code>def main():

    with open("test.txt", "rU", encoding='utf-8') as test_file:
        text = test_file.read()
    print(str(len(text)))


if __name__ == "__main__":

    main()
</code></pre>
<p>My <code>test.txt</code> file looks like this</p>
<pre><code>ö
</code></pre>
<p>And I get the following error:</p>
<pre><code>UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf6 in position 0: invalid start byte
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your file is not UTF-8 encoded. I'm not sure what encoding uses F6 for <code>ä</code> either; that codepoint is the encoding for <code>ö</code> in Latin 1 and CP-1252:</p>
<pre><code>&gt;&gt;&gt; b'\xf6'.decode('utf8')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xf6 in position 0: invalid start byte
&gt;&gt;&gt; b'\xf6'.decode('latin1')
'ö'
</code></pre>
<p>You'll need to save that file as UTF-8 instead, with whatever tool you used to create that file.</p>
<p>If <code>open('text').read()</code> works, then you were able to decode the file using the default system encoding. See the <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow"><code>open()</code> function documentation</a>:</p>
<blockquote>
<p><em>encoding</em> is the name of the encoding used to decode or encode the file. This should only be used in text mode. The default encoding is platform dependent (whatever <a href="https://docs.python.org/3/library/locale.html#locale.getpreferredencoding" rel="nofollow"><code>locale.getpreferredencoding()</code></a> returns), but any encoding supported by Python can be used. </p>
</blockquote>
<p>That is not to say that you were reading the file using the correct encoding; that just means that the default encoding didn't break (encountered bytes for which it doesn't have a character mapping). It could still be mapping those bytes to the wrong characters.</p>
<p>I <em>urge</em> you to read up on Unicode and Python:</p>
<ul>
<li><p><a href="http://joelonsoftware.com/articles/Unicode.html" rel="nofollow">The Absolute Minimum Every Software Developer Absolutely, Positively Must Know About Unicode and Character Sets (No Excuses!)</a> by Joel Spolsky</p></li>
<li><p>The <a href="http://docs.python.org/3/howto/unicode.html" rel="nofollow">Python Unicode HOWTO</a></p></li>
<li><p><a href="http://nedbatchelder.com/text/unipain.html" rel="nofollow">Pragmatic Unicode</a> by Ned Batchelder</p></li>
</ul>
</div>
<span class="comment-copy">Your file is not UTF-8 encoded.</span>
<span class="comment-copy">Its a testfile. I should write a programm in Python3 that is able to read it. And write it out again. And it Should be in UTF-8.</span>
<span class="comment-copy">Two things are wrong here - either your file is not UTF-8, and if it isn't it has something other than <code>ä</code> in it.</span>
<span class="comment-copy">I got the testfile from the server of the university. So i guess the file should be ok. Intressing is that i can read the file with open(test.txt).read() and it works without a problem ... I don't get it.</span>
<span class="comment-copy">@GVVMultigamingClan: <code>open()</code> <i>without</i> <code>encoding</code> takes your <i>system default</i> as the encoding. If <code>open('test.txt').read()</code> works then the file is <b>not</b> UTF-8 but whatever <a href="https://docs.python.org/3/library/locale.html#locale.getpreferredencoding" rel="nofollow noreferrer"><code>locale.getpreferredencoding()</code></a> returns.</span>
