<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/24755463/functools-partial-wants-to-use-a-positional-argument-as-a-keyword-argument">functools.partial wants to use a positional argument as a keyword argument</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Consider the following piece of code that utilizes <a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow"><code>functools.partial()</code></a>:</p>
<pre class="lang-python prettyprint-override"><code>import functools

def add(a, b):
    return a + b

add_10 = functools.partial(add, a=10)
add_10(4)
</code></pre>
<p>When I run it, I got the following error:</p>
<pre class="lang-none prettyprint-override"><code>Traceback (most recent call last):
File "test.py", line 7, in &lt;module&gt;
    add_10(4)
TypeError: add() got multiple values for argument 'a'
</code></pre>
<p>When I change the keyword argument to a positional argument in the penultimate line, it passes:</p>
<pre class="lang-python prettyprint-override"><code>add_10 = functools.partial(add, 10)
</code></pre>
<p>Why doesn't it pass in the first case? I'm using Python 3.4.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import functools

def add(a, b):
    return a + b

add_10 = functools.partial(add, b=10)

add_10(4)
</code></pre>
<p>This code will work. Function arguments with default value have to be at the end. So b=10 instead of a=10</p>
</div>
