<div class="post-text" itemprop="text">
<p>I'm trying to find a way to write regex which match any 5 digit numbers in string, except those, which are followed by slash.</p>
<p>I can't figure out why this RE doesn't work:</p>
<pre><code>r"\D(\d{%d})[^/]\D" % 5
</code></pre>
<p>EXAMPLE </p>
<pre><code>'dsadasd894665' -&gt; NO MATCH
'dsadsa78954,4' -&gt; 78954 
'dsda78954/sdd' -&gt; NO MATCH
</code></pre>
<p>Have you any idea?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>(?&lt;!\d)(\d{5})(?!\/|\d)
</code></pre>
<p>Try this.This Works.See demo.Your regex does not start or end with 0 width assertions.So it actually needs 1 charcter before and 2 ahead.</p>
<p><a href="http://regex101.com/r/yA5iD9/16" rel="nofollow">http://regex101.com/r/yA5iD9/16</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You could try the below regex,</p>
<pre><code>(?&lt;!\d)\d{5}(?=[^\d/]|$)
</code></pre>
<p><a href="http://regex101.com/r/fG1vD4/3" rel="nofollow">DEMO</a></p>
<p><strong>EXplanation:</strong></p>
<ul>
<li><code>(?&lt;!\d)</code> Match wouldn't be preceded by a digit.</li>
<li><code>\d{5}</code> Exactly 5 digits.</li>
<li><code>(?=[^\d/]|$)</code> Must be followed by a  non-digit or <code>/</code> or end of the line anchor.</li>
</ul>
<p><strong>Code:</strong></p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; s1 = "dsadasd894665"
&gt;&gt;&gt; s2 = "dsadsa78954,4"
&gt;&gt;&gt; s3 = "dsda78954/sdd"
&gt;&gt;&gt; re.search(r'(?&lt;!\d)\d{5}(?=[^\d/]|$)', s1)
&gt;&gt;&gt; re.search(r'(?&lt;!\d)\d{5}(?=[^\d/]|$)', s2)
&lt;_sre.SRE_Match object at 0x7f0835855370&gt;
&gt;&gt;&gt; re.search(r'(?&lt;!\d)\d{5}(?=[^\d/]|$)', s3)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason your regex is not working is due to the <code>\D</code>s. I don't know why you put them in. Another problem is that <code>[^/]</code> will not match the end of the string, so use <code>?!</code> instead.</p>
<p>The following works:</p>
<pre><code>r"(\d{%d})(?!\/)" % 5
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you want to find numbers that are on their own, i.e. not preceeded by another number, not followed by another number, and also not followed by a slash, we are going to use <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow">negative look-aheads and look-behinds</a> to ensure this:</p>
<pre><code>(?&lt;!\d)\d{5}(?!/|\d)
</code></pre>
<p>This will match a <code>\d{5}</code> if it is <em>not</em> preceeded by another <code>\d</code> (i.e. no number is before it), and it is also <em>not</em> followed by another <code>\d</code> or a <code>/</code>.</p>
<p>Using that on your examples yields the desired results:</p>
<pre><code>&gt;&gt;&gt; for example in ('dsadasd894665', 'dsadsa78954,4', 'dsda78954/sdd'):
    print(re.search(r'(?&lt;!\d)\d{%d}(?!/|\d)' % 5, example))

None
&lt;_sre.SRE_Match object; span=(6, 11), match='78954'&gt;
None
</code></pre>
</div>
<span class="comment-copy">Doesn't work with <code>123456</code>.</span>
<span class="comment-copy">@vks Exactly. <code>12345</code> is a 5 digit string in <code>123456</code>.</span>
<span class="comment-copy">instead of using this kind of alternation in a lookaround, use a negative lookaround: <code>(?&lt;!\d)</code></span>
<span class="comment-copy">Doesn't work with <code>123456</code>.</span>
