<div class="post-text" itemprop="text">
<p>I have a cli <code>build.py</code> I call it <code>build.py -t -c -f</code><br/>
When I parse the command line arguments, Is there a built in way to get a list of  </p>
<pre><code>['t' = true,'c'=true,'f'=true,'s'=false]
</code></pre>
<p>Below are the definitions, not sure what to change in the <code>dest</code> (that addition of <code>[..]</code> is not working. Just to show what I try to achieve.</p>
<pre><code>from argparse import ArgumentParser
from argparse import RawDescriptionHelpFormatter

parser = ArgumentParser(description=program_license, formatter_class=RawDescriptionHelpFormatter)

parser.add_argument("-s","--stored_proc", dest="build_what['s']", action="store_true", help="build all stored procedures, or the folder/*.sql specified")
parser.add_argument("-t","--triggers", dest="build_what['t']", action="store_true", help="build all triggers, or the folder/*.sql specified")
parser.add_argument("-f","--functions", dest="build_what['f']", action="store_true", help="build all functions, or the folder/*.sql specified")
parser.add_argument("-c","--scripts", dest="build_what['c']", action="store_true", help="run all scripts, or the folder/*.sql specified")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>parse_args</code> method of argument parsers returns a <a href="https://docs.python.org/3/library/argparse.html#argparse.Namespace" rel="nofollow">namespace</a>. You can access your values directly as properties there:</p>
<pre><code>args = parser.parse_args()
args.stored_proc # or `args.s` if you set `dest` to `'s'`
</code></pre>
<p>If you need dictionary access (for whatever reason), you can use <a href="https://docs.python.org/3/library/functions.html#vars" rel="nofollow"><code>vars</code></a> to convert it:</p>
<pre><code>&gt;&gt;&gt; parser.parse_args(['-s', '-f'])
Namespace(c=False, f=True, s=True, t=False)
&gt;&gt;&gt; vars(_)
{'f': True, 'c': False, 't': False, 's': True}
</code></pre>
<p>Note, that that dictionary will contain <em>all</em> registered arguments, and not only those four. So if you need a dictionary with exactly those four values, itâ€™s probably better to create it explicitely:</p>
<pre><code>{'f': args.f, 'c': args.c, 't': args.t, 's': args.s}
</code></pre>
</div>
<span class="comment-copy">do you use <code>argparse</code>?</span>
<span class="comment-copy">modified I am using ArgumentParser, from argparse import ArgumentParser from argparse import RawDescriptionHelpFormatter</span>
<span class="comment-copy"><code>['t' = true,'c'=true,'f'=true,'s'=false]</code> is not a Python list. You mean a dictionary (<code>{'t':true,'c':true,'f':true,'s':false}</code>)?</span>
<span class="comment-copy">well...does not really matter to me for this specific task wether it is a list or dictionary I think</span>
<span class="comment-copy">Use <code>dest='s'</code> if you want the short name in the <code>Namespace</code>.  Without the <code>dest</code> value it will use <code>'stored_proc'</code>.</span>
