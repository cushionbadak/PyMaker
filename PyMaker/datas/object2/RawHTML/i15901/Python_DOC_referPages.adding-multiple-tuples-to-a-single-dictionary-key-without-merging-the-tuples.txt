<div class="post-text" itemprop="text">
<p>I am attempting to take a large data set and create a dictionary with multiple data points per key.</p>
<p>For example, I have a list of lists </p>
<pre><code>names = [[2013, 'Patrick', 'M', 2566], [2013, 'Mary', 'F', 2602], [2013, 'Alice', 'F', 2915], [2013, 'Alberto', 'M', 581], [2012, 'Patrick', 'M', 2798], [2012, 'Mary', 'M', 6], [2012, 'Mary', 'F', 2559], [2012, 'Alice', 'M', 5], [2012, 'Alice', 'F', 2491], [2012, 'Alberto', 'M', 610], [2011, 'Patrick', 'M', 2858], [2011, 'Patrick', 'F', 5], [2011, 'Mary', 'F', 2700], [2011, 'Alice', 'F', 2190], [2011, 'Alberto', 'M', 660] ......]
</code></pre>
<p>I attempting to create dictionary such that the result is</p>
<pre><code>{ .... 'Patrick':[ ...., (2013, 'M', 2566), (2012, "M', 2798), ...], .....}
</code></pre>
<p>My first through is to use append such as </p>
<pre><code>d = {}
for year, key, gender, count in names:
        d.setdefault(key, []).append(year)
        d.setdefault(key, []).append(gender)
        d.setdefault(key, []).append(count)
</code></pre>
<p>However, this gives me a dictionary with the data not separated by tuples.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just append these as tuples.</p>
<p>This should work:</p>
<pre><code>d = {}
for year, key, gender, count in names:
    d.setdefault(key, []).append((year, gender, count))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>defaultdict</code></a> to simplify things a bit.</p>
<p>Your main issue though is that you were appending each element individually, instead append a tuple to the dictionary value (which in this case happens to be a list).</p>
<pre><code>from collections import defaultdict

names = [[2013, 'Patrick', 'M', 2566], [2013, 'Mary', 'F', 2602], [2013, 'Alice', 'F', 2915], [2013, 'Alberto', 'M', 581], 
         [2012, 'Patrick', 'M', 2798], [2012, 'Mary', 'M', 6], [2012, 'Mary', 'F', 2559], [2012, 'Alice', 'M', 5], 
         [2012, 'Alice', 'F', 2491], [2012, 'Alberto', 'M', 610], [2011, 'Patrick', 'M', 2858], [2011, 'Patrick', 'F', 5], 
         [2011, 'Mary', 'F', 2700], [2011, 'Alice', 'F', 2190], [2011, 'Alberto', 'M', 660]]

d = defaultdict(list)

for year, name, gender, count in names:
    d[name].append((year, gender, count))
</code></pre>
</div>
