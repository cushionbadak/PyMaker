<div class="post-text" itemprop="text">
<p>Recently I have been learning about classes and inheritance etc. With classes how are we suppose to inherit other traits from classes other from <code>super().__init__()</code>. </p>
<pre><code>class classone(object):
    def __init__(self, benchpress):
            self.benchpress = benchpress

class classtwo(classone): #Parent class is classone
    def __init__(self, i_bench_four_hundred):
             self.i_bench_four_hundred = i_bench_four_hundred

call_class = classtwo("Good job")
print(call_class.i_bench_four_hundred)
</code></pre>
<p>So from here how do I get data or traits from the "Parent Class". Because that's what OOP is about right? Getting stuff from the upper class? If you didn't want to do this why not just code without OOP. I say this because I see people who wouldn't really try get anything out of the parent class, they are just related in "outcome" or "goal".</p>
</div>
<div class="post-text" itemprop="text">
<p>The point of classes is that they encapsulate data and the methods that operate on that data. Classes can be extended and the child class will inherit the attributes of its parent. This is one specific feature of classes and OO programming - 'inheritance'.</p>
<p>To access an overridden method in the parent class in Python you use the <code>super().method()</code> syntax. If an attribute is not overridden it can be accessed with <code>self.method()</code>. I think this is what you're asking.</p>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#super" rel="nofollow noreferrer"><code>super().__init__()</code></a>?</span>
<span class="comment-copy">Is your question: how do I get access to <code>benchpress</code> from <code>classtwo</code>? You would use <code>super</code>.</span>
<span class="comment-copy">So, then my second part of the question. What's the point of using classes if you are not going to do this. (As I look at other code)</span>
<span class="comment-copy">@user3818650 What is the use of classes if you are not going to use traits from other classes? I'm just trying to clarify your question :)</span>
<span class="comment-copy">-1 you don"t know why to use classes, you should look at the documentations: <a href="https://docs.python.org/2/tutorial/classes.html" rel="nofollow noreferrer">docs.python.org/2/tutorial/classes.html</a></span>
<span class="comment-copy">"encapsulate data and methods that operate on that data" does this just mean, makes your code more clean and effective so you can editing is easy?</span>
<span class="comment-copy">That could be a benefit, but isn't the central principle. This wikipedia page on encapsulation explains it: <a href="http://en.wikipedia.org/wiki/Encapsulation_(object-oriented_programming)" rel="nofollow noreferrer">en.wikipedia.org/wiki/â€¦</a></span>
<span class="comment-copy">And also I just learnt, you inherit the same functions from parent classes automatically without any inheritance command. This would be another reason to use classes.</span>
