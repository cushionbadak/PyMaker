<div class="post-text" itemprop="text">
<p>I have a big text file who's lines are composed in this format:</p>
<pre><code>Query: 1586     cccaagatgagctgcagccccccagagagagctctgcacgtcaccaagtaaccaggcccc 1645
Sbjct: 27455708 cccaagatgagctgcagccccccagagagagctctgcacgtcaccaagtaaccaggcccc 27455649

Query: 1646     agcctccaggcccccaactccgcccagcctctccccgctctggatcctgcactctaacac 1705      
Sbjct: 27455648 agcctccaggcccccaactccgcccagcctctccccgctctggatcctgcactctaacac 27455589

Query: 1706     tcgactctgctgctcatgggaagaacagaattgctcctgcatgcaactaattcaataaaa 1765              
Sbjct: 27455588 tcgactctgctgctcatgggaagaacagaattgctcctgcatgcaactaattcaataaaa 27455529
</code></pre>
<p>For each line, I want to be able to extract only the varying sequences of agtc while removing the other character (query, sbjct and varying numbers) so that the final string would look like this</p>
<pre><code>line1 = cccaagatgagctgcagccccccagagagagctctgcacgtcaccaagtaaccaggcccc
line2 = cccaagatgagctgcagccccccagagagagctctgcacgtcaccaagtaaccaggcccc
etc...
</code></pre>
<p>I've been working on this for awhile and can't get it to work. I've tried the re module and <code>.translate</code> but to not results. I am programming in python 3.4. Thank you!</p>
</div>
<div class="post-text" itemprop="text">
<p>While you could use regular expressions (like you have attempted) the example your provide can be easily split up by using <code>agtc_part = line.split()[2]</code></p>
<p>This splits a given line into a list of strings where the delimiter is a space. Indexing starts from 0, so the part with <code>agct</code> in is indexed by 2.</p>
<p>Note that calling <code>split()</code> without explicitly passing in an argument indicating the character to split on not only splits on a space character, but will also group sequential spaces together rather than splitting on each one. This is important in your case because you have a different number of white space characters between the number and the agct string.</p>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; "aaa   bbb".split()
['aaa', 'bbb']
&gt;&gt;&gt; "aaa   bbb".split(' ')
['aaa', '', '', 'bbb']
</code></pre>
</div>
<span class="comment-copy">It's possible to find the differences between two strings: <a href="http://stackoverflow.com/questions/17904097/python-difference-between-two-strings" title="python difference between two strings">stackoverflow.com/questions/17904097/â€¦</a></span>
<span class="comment-copy">regex would work, but be very slow compared to <code>split()</code></span>
<span class="comment-copy">Where is the code you have tried, and what is the problem you are having with the code?</span>
<span class="comment-copy">from your output it's seems this is simple string operation. why did you try <code>re</code>? what have you tried?</span>
<span class="comment-copy">am i allowed to ask what you have tried?</span>
<span class="comment-copy">Just a minor point, the default delimiter is a space, so you can simply <code>line.split()[2]</code></span>
<span class="comment-copy">Yep, I was aware of that, but thought it might be better to make it explicit :)</span>
<span class="comment-copy">@three_pineapples: Your solution gives a wrong result for the line starting with "Query". With the usage of the explicit space (<code>' '</code>) you ran into a trap. From the documentation: "<a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">If sep is given, consecutive delimiters are not grouped together</a>".</span>
<span class="comment-copy">@Matthias Oh! When I wrote the answer, the example provided was not in a code block in the post so there was only 1 space visible between the number and the text. I thus thought everything was separated by a single space, not padded to look nice when printed. I'll update my answer.</span>
<span class="comment-copy">@three_pineapples: Looks like I have too give you an upvote now. :-)</span>
