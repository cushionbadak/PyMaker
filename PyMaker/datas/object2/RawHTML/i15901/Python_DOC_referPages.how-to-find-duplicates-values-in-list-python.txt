<div class="post-text" itemprop="text">
<p>I was wondering how can I know if when a user inputs a value, that value already exists in a list.</p>
<p>For example;</p>
<pre><code>lis = ['foo', 'boo', 'hoo']
</code></pre>
<p>user inputs:</p>
<pre><code>'boo'
</code></pre>
<p>Now my question is how can I tell the user this value already exists inside the list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/reference/expressions.html#in" rel="nofollow"><code>in</code> operator</a>:</p>
<pre><code>&gt;&gt;&gt; lis = ['foo', 'boo', 'hoo']
&gt;&gt;&gt; 'boo' in lis
True
&gt;&gt;&gt; 'zoo' in lis
False
</code></pre>
<p>You can also use <code>lis.index</code> which will return the index of the element.</p>
<pre><code>&gt;&gt;&gt; lis.index('boo')
1
</code></pre>
<p>If the element is not found, it will raise <code>ValueError</code>:</p>
<pre><code>&gt;&gt;&gt; lis.index('zoo')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: 'zoo' is not in list
</code></pre>
<p><strong>UPDATE</strong></p>
<p>As Nick T commented, if you don't care about order of items, you can use <a href="https://docs.python.org/3/library/stdtypes.html#types-set" rel="nofollow"><code>set</code></a>:</p>
<pre><code>&gt;&gt;&gt; lis = {'foo', 'boo', 'hoo'}  # set literal  == set(['foo', 'boo', 'hoo'])
&gt;&gt;&gt; lis.add('foo')  # duplicated item is not added.
&gt;&gt;&gt; lis
{'boo', 'hoo', 'foo'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One more way you can do is use collections :-</p>
<pre><code>import collections
lis = ['foo', 'boo', 'hoo']
# Now if user inputs boo
lis.append('boo')
print [x for x, y in collections.Counter(lis).items() if y &gt; 1]
# Now it will print the duplicate value in output:-
boo
</code></pre>
<p>But the above one is not efficient. So for make it efficient use set as falsetru indicates in the answer:-</p>
<pre><code>totalList= set()
uniq = []
for x in lis:
    if x not in totalList:
        uniq.append(x)
        totalList.add(x)
</code></pre>
</div>
<span class="comment-copy">Your question is more <i>avoiding</i> duplicates in a list. If you don't care about order, you could also use a <code>set</code>, which, if you attempt to add a duplicate, it ignores it.</span>
<span class="comment-copy">oh yes... the set function... I am a bit unfamiliar with its use.. but I have indeed seen it in action.</span>
<span class="comment-copy">It's not a function, but <a href="https://docs.python.org/2/library/stdtypes.html#set-types-set-frozenset" rel="nofollow noreferrer">a full-blown data-type</a> along with <code>int</code>, <code>dict</code>, <code>list</code>, and <code>str</code>.</span>
<span class="comment-copy">oh wow... so its more than what I expected for it to be ! Thanks NickT for the great info !</span>
<span class="comment-copy">Thanks alot friend ! This helped alot.. and clear some ideas up. :)</span>
<span class="comment-copy">Thank you Brother Hussain, that is a very nice example. The second example is short and concise, really good.</span>
