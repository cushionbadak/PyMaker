<div class="post-text" itemprop="text">
<p>Would it be possible to dynamically add filters to a Peewee select statement given a list? For example instead of:</p>
<pre><code>Table.select().paginate(page,ENTRY_PER_PAGE).where((Table.Base==Base1) &amp; (Table.Base==Base2) &amp; ...)
</code></pre>
<p>I would like to pass in, say a <code>list</code>, and it would filter by content in that <code>list</code>:</p>
<pre><code>list = [Base1, Base2, Base3...]
Table.select().paginate(page,ENTRY_PER_PAGE).where((Table.Base==contentfromList))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/2/library/functions.html#reduce" rel="nofollow"><code>reduce</code></a> (<a href="https://docs.python.org/3/library/functools.html#reduce" rel="nofollow"><code>functools.reduce</code></a> in Python 3.x):</p>
<pre><code>&gt;&gt;&gt; import operator
&gt;&gt;&gt; reduce(operator.mul, [2, 3, 5])
30
&gt;&gt;&gt; 2 * 3 * 5
30
</code></pre>
<p>With generator expression:</p>
<pre><code>base_list = [Base1, Base2, Base3]
Table.select().paginate(page,ENTRY_PER_PAGE).where(
    reduce(oeprator.and_, (Table.Base == b for b in base_list))
)
</code></pre>
<p>Instead of <code>operator.and_</code> (<code>operator.__and__</code>), if you need to express more complex expression, you can also use <a href="https://docs.python.org/3/reference/expressions.html#lambda" rel="nofollow"><code>lambda</code></a>:</p>
<pre><code>...
reduce(lambda a, b: a &amp; b, (Table.Base == b for b in base_list))
...
</code></pre>
</div>
<span class="comment-copy">Ah, that's great! Question though, what exactly does the "<i>" in operator.and</i> do? Any reason why we can't simply use &amp;&amp; or || ?</span>
<span class="comment-copy">@Stupid.Fat.Cat, If you mean <code>(... for .. in ...)</code>, it's a <a href="https://docs.python.org/2/tutorial/classes.html#generator-expressions" rel="nofollow noreferrer">generator expression</a>.</span>
<span class="comment-copy">@Stupid.Fat.Cat, There's no <code>&amp;&amp;</code>, <code>||</code> operator in Python, but <code>and</code>, <code>or</code>.</span>
<span class="comment-copy">oh, and one last question @falsetru, for your last example, you have a,b, where does the a come from?</span>
<span class="comment-copy">@Stupid.Fat.Cat, <code>lambda</code> expression is a kind of expression that returns a function. Please follow the link in the answer. (to links to <code>reduce</code>, <code>lambda</code>)</span>
