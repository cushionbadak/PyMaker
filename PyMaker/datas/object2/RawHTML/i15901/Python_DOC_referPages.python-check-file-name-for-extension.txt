<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5899497/checking-file-extension">Checking file extension</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>Is there a way in Python to check a file name to see if its extension is included in the name?  My current workaround is to simply check if the name contains a . in it, and add an extension if it doesn't...this obviously won't catch files with . but no extension in the name (ie. 12.10.13_file).  Anyone have any ideas?</p>
</div>
<div class="post-text" itemprop="text">
<p>'12.10.13_file' as a filename, does have '13_file' as it's file extension. At least regarding the file system. </p>
<p>But, instead of finding the last . yourself, use <a href="http://docs.python.org/library/os.path.html#os.path.splitext" rel="nofollow">os.path.splitext</a>:</p>
<pre><code>import os
fileName, fileExtension = os.path.splitext('/path/yourfile.ext')

# Results in:
# fileName = '/path/yourfile'
# fileExtension = '.ext'
</code></pre>
<p>If you want to exclude certain extensions, you could blacklist those after you've used the above.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>libmagic</code> via <a href="https://pypi.python.org/pypi/python-magic" rel="nofollow">https://pypi.python.org/pypi/python-magic</a> to determine "file types."  It's not 100% perfect, but a whole lot of files can be accurately classified this way, and then you can decide your own rules, such as <code>.txt</code> for text files, <code>.pdf</code> for PDFs, etc.</p>
<p>Don't think in terms of finding files with or without extensions--think of it in terms of classifying your files based on their content, ignoring their current names.</p>
</div>
<span class="comment-copy">And why would <code>13_file</code> <i>not</i> be an extension? You'll need to define some rules as to what makes a valid extension here. There are no standard rules.</span>
<span class="comment-copy">And if you have done that and decide that Martijn is right, use <a href="https://docs.python.org/3/library/os.path.html#os.path.splitext" rel="nofollow noreferrer"><code>os.path.splitext</code></a>. It will return a tuple with the filename and the extension (which contains the ., i.e. <code>.13_file</code>) or an empty string as the second element.</span>
