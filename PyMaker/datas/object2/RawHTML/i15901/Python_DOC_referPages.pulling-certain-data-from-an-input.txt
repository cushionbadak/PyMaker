<div class="post-text" itemprop="text">
<p>Im trying to extract a certain part of my input from the first line and use it to calculate the problem and then put it back together. </p>
<p>For example,</p>
<pre class="lang-none prettyprint-override"><code>Please enter the starting weight of food in pounds followed by ounces:8:9

Please enter the ending weight of food in pounds followed by ounces:6:14
</code></pre>
<p>I want to extract the pounds and work that first or am I looking at this wrong? Here is the problem description:</p>
<p>Write the pseudocode and the Python 3.3 program for the following problem. A monkey is being fed some food. Read in the starting weight in lbs:ozs. Also read in the ending weight in lbs:ozs (you may assume this is smaller than the starting weight. Find the difference and  print out the amount of food consumed by the monkey in lbs:ozs. Some sample data is shown below (with the corresponding output). </p>
<p><strong>Hints</strong>: convert all values to ounces first. Use the “find” command to locate the “:” in the input data (see sample2 on Y:).</p>
<p><strong>Run#1</strong>:
&gt;</p>
<blockquote>
<pre class="lang-none prettyprint-override"><code>Starting weight of food (in lbs:ozs)=8:9

Ending weight of food (in lbs:ozs)=6:14

Food consumed by the monkey (lbs:ozs)=1:11
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>msg = 'Starting weight of food (in lbs:ozs) = '
answer = input(msg).strip()
try:
    pounds, ounces = answer.split(':')
    pounds = float(pounds)
    ounces = float(ounces)
except (ValueError) as err:
    print('Wrong values: ', err)

print(pounds, ounces)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code># get input from the user, e.g. '8:9'
start_weight= input('Starting weight of food (in lbs:ozs)=')
# so start_weight now has the value '8:9'

# find the position of the ':' character in the user input, as requested in the assignment: 'Use the “find” command to locate the “:” in the input data'
sep= start_weight.find(':')
# with the input from before ('8:9'), sep is now 1

# convert the text up to the ":" character to a number
start_pounds= float(start_weight[:pos])
# start_pounds is now 8

# convert the text after the ":" character to a number
end_pounds= float(start_weight[pos+1:])
# end_pounds is now 9

# get input from the user, e.g. '6:14'
end_weight= input('Ending weight of food (in lbs:ozs)=')

SNIP # You'll have to figure this part out for yourself, I can't do the entire assignment for you...

# finally, display the result, using "str(number)" to convert numbers to text
print('Food consumed by the monkey (lbs:ozs)=' + str(pounds_eaten_by_monkey) + ':' + str(ounces_eaten_by_monkey))
</code></pre>
<p>This should get you started. All that's left is to write the code that converts pounds and ounces to pounds, and to calculate how much food the monkey has consumed. Good luck.</p>
</div>
<span class="comment-copy">Get user input like so: <code>i= input('Please enter the starting weight of food in pounds followed by ounces: ')</code>. Convert input to pounds and ounces like so: <code>pounds, ounces= map(int, i.split(':'))</code>. This is very basic stuff. Consider reading the <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">python tutorial</a>.</span>
<span class="comment-copy">This is my first programming class. Im just having a hard time understanding the find command. Still cant figure this problem out.</span>
<span class="comment-copy">so this split the first input into two different inputs? Whenever i try to print just pounds, it gives me both pounds and ounces. Also dont understand the except line. First programming class so im just  beginning!</span>
<span class="comment-copy">In this case, yes <code>.split(':')</code> splits the user input into two values. <a href="https://docs.python.org/3.3/library/stdtypes.html#str.split" rel="nofollow noreferrer">Docs on str.split.</a> The <code>except (ValueError) as err:</code> will be executed if the user enters invalid input, which can't be converted to numbers, like <code>5:a</code> or <code>7</code>.</span>
