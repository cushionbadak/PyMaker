<div class="post-text" itemprop="text">
<p>I have the following dictionary containing a bunch of functions and their keys as in the bellow example:</p>
<pre><code>function_list = {0:power_off(), 1:image_capture(100,1000,100,100), 2:video_record(100,100), 3:image_settings(), 4:video_settings(), 5:device_settings()}
</code></pre>
<p>Actually there are about 5 times more, but I simplified it for this post...
My question is, how should I proceed so that when I define the <strong>function_list</strong> dictionary, it will not run all the functions from it's content, rather just at when I call them in the following manner: <strong>function_list[current_selection]</strong>, based on the value of <strong>current_selection</strong> parameter.</p>
<p>I'm doing this so I don't have to have a long and complex if... elif statement like:</p>
<pre><code>if current_selection == 0:
    power_off()
elif current_selection == 1:
    image_capture(100,1000,100,100)
elif current_selection ==2:
    video_record(100,100)
... and so on ...
</code></pre>
<p>If anyone could help me out, I would really appreciate it.
Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this : </p>
<pre><code>function_list = {0:{"func":power_off},
                 1:{"func":image_capture, "args":(100,1000,100,100)},
                 2:{"func":video_record, "args":(100,100)},
                 3:{"func":image_settings},
                 4:{"func":video_settings},
                 5:{"func":device_settings} }

f = function_list[current_selection]
if "args" in f:
    f["func"](*f["args"])
else:
    f["func"]()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is you are making function calls. The values in the dictionary should be function references.</p>
<p><code>function_list = {0:power_off}</code>
and then to call, 
<code>function_list[0]()</code>.</p>
<p>If you have to pass arguments, you can replace the function reference with a lambda expression.</p>
<p><code>function_list = {1: lambda arg1, arg2: image_capture(arg1, arg2)}</code></p>
</div>
<span class="comment-copy">Thanks for the hint, this should work. Testing it right away.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functools.html#functools.partial" rel="nofollow noreferrer"><code>functools.partial()</code></a> is a slightly easier way of doing this than a lambda.</span>
