<div class="post-text" itemprop="text">
<p>I have been using python since last summer and i think that i have absorbed enough information to do at least basic programming.</p>
<p>The thing is that i'm making text-based rpg-game and i have already done the saving process and the game now transfers information to savegame.txt. But i want to make game hacking harder. I saw in forums that changing file name is possible, but it wasn't close enough this case and/or i weren't able to read through lines how it works. So the idea is that it becomes unreadable format, but code inside won't change and it can be 'normalized' back.</p>
<p>so more clearly:</p>
<p>How do I change savegame.txt to savegame.xsave (or something like that) and vice versa?</p>
</div>
<div class="post-text" itemprop="text">
<p>I agree with the comments that this probably isn't the best use of your time. But the simplest thing to do would be to take advantage of the rot13 encoder.</p>
<pre><code>with open("data.secret", 'w') as f:
  f.write("player score: 500".encode('rot13'))
  f.write("player badge: cool guy".encode('rot13')

with open("data.secret") as f:
  x = f.readline().decode('rot13')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just encrypt all text in file with any encryption algorithm.
For example, you can <a href="https://www.dlitz.net/software/pycrypto/" rel="nofollow">pycrypto</a> library.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you just want to make the text file unreadable you could just encode it with, for example, base64:</p>
<pre><code>import base64
encoded = base64.b64encode("myTextFileContents")
decoded = base64.b64decode(encoded)
</code></pre>
<p>You can read more here: <a href="https://docs.python.org/3/library/base64.html" rel="nofollow">https://docs.python.org/3/library/base64.html</a></p>
</div>
<span class="comment-copy">Is this really a valid use of your time while making a game?  Why not wait until you're complete with the game before getting caught up in this early optimizations, kludges, hacks, tacked-on-features...etc</span>
<span class="comment-copy">Consider that if you, say, needed to test a particular level or set of circumstances, it would be painfully hard to manipulate a save file to create said circumstances (trying to reach a certain level with specific gear!) if your save file were to be encrypted or obfuscated.  You would then have to manually code in features to do such things.  Spend time making your game, not making defense mechanisms for it.</span>
