<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2032403/how-to-create-full-compressed-tar-file-using-python">How to create full compressed tar file using Python?</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Let say I have this code that moves files in another directory:</p>
<pre><code>import os, shutil

    try:
        os.chdir(rec.gec_daily_dir)
        direct = os.listdir(/src/dir/)
        for f in direct:
            if f[-3:] == 'xls':
                shutil.move(f, /archive/dir/)
    except TypeError:
        print "Directory or file not found"
</code></pre>
<p>So how could I archive (or compress) file just before moving it to antoher directory (does not matter zip or tar.gz)? (original file should only be in archive state, not like when you manually archive it, it leaves original file un-archived)</p>
<p>I saw there a lib <code>tarfile</code>, where you could do something like that, but I saw some examples ofr archiving whole directory, but what I need is to archive each file separately.</p>
<p><strong>Example</strong></p>
<p>Init state</p>
<pre><code>src/dir/
</code></pre>
<p>files in there:</p>
<pre><code>file1.xls, file2.xls

archive/dir
</code></pre>
<p>file in there: none</p>
<p>Now compressing files and moving them to another directory:</p>
<p>Final state</p>
<pre><code>src/dir/
</code></pre>
<p>file in there: none</p>
<pre><code>archive/dir
</code></pre>
<p>files in there:</p>
<pre><code>file1.zip, file2.zip (or .gz)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Archives don't really make sense if all you going to do is put one file into each of them.</p>
<p>Or did you mean to compress them, e.g. using the <a href="https://docs.python.org/3/library/gzip.html" rel="nofollow">gzip</a> or <a href="https://docs.python.org/3/library/bz2.html" rel="nofollow">bz2</a> module?</p>
<p>If you indeed really want archives with only a single file, create a tar or ZIP object and just add it straight away, e.g. for <a href="https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.add" rel="nofollow">TarFile.add</a>.</p>
<p>Note that while it is very common when using unix-like operating systems to compress single files using bz2 or gzip doing so is very <em>un</em>common on other platforms, e.g. Windows. There the recommendation would be to use ZIP files, even for single files, since they are handled well by applications (Windows Explorer and others).</p>
<p>To put a single file into a ZIP file do something similar to this:</p>
<pre><code>import zipfile
# ...

with zipfile.ZipFile(nameOfOrginalFile + ".zip", "w", zipfile.ZIP_DEFLATED) as zip_file:
    zip_file.write(nameOfOriginalFile)
</code></pre>
<p>Not passing <code>ZIP_DEFLATED</code> to <code>ZipFile</code> will result in an uncompressed zip file.</p>
<p>To compress a single file using e.g. gzip:</p>
<pre><code>import gzip

with gzip.GzipFile(nameoforiginalFile + ".gz", "w") as gz:
    with open(nameoforignalfile) as inp_file;
        shutil.copyfileobj(inp_file, gz)
</code></pre>
<p>The <code>bz2</code> and <code>lzm</code>a (not available for Python 2) APIs are the same, just import <code>bz2</code>/<code>lzma</code> and use <code>bz2.BZ2File</code> instead.</p>
<p>After both <code>with</code> blocks you can delete the original file (<code>os.remove(file)</code>) and move the archive file to the correct location. Alternatively, create the archive file directly in the correct location (<code>os.path.join</code> the target location and the archive name).</p>
</div>
<div class="post-text" itemprop="text">
<p>The standard library contains <a href="https://docs.python.org/2/library/zipfile.html" rel="nofollow">zipfile</a> module for working with .zip archives, <a href="https://docs.python.org/2/library/gzip.html" rel="nofollow">gzip</a> module for working with <code>.gz</code> compressed files and <a href="https://docs.python.org/2/library/bz2.html" rel="nofollow">bz2</a> module for working with <code>.bz2</code> compressed files (the later is slower, but yields better compression).</p>
<p>Python 3.3 also introduces [lzma] (for <code>.xz</code> and <code>.lzma</code> files), which has even better compression ratio, but it does not seem to be backported to 2.7.</p>
<p>Note that a single file does not need <code>.tar.gz</code>, a <code>.gz</code> will do. Because <code>.tar.gz</code> is two levels. <code>.tar</code> to put several files together and <code>.gz</code> to compress it and you don't need the first  part if you have just one. Zip does both things, so for single file it is slightly less efficient than gz (they use the same compression method), but you may have some tool that understands zip files and not gz files, so there may be some reason to use it.</p>
<p>To create single compressed file with <a href="https://docs.python.org/2/library/gzip.html" rel="nofollow">gzip</a>, <a href="https://docs.python.org/2/library/bz2.html" rel="nofollow">bz2</a> or [lzma], you just use <code>open</code> function from the respective module and then use <a href="https://docs.python.org/2/library/shutil.html" rel="nofollow">shutil</a>.copyfileobj to copy the content of the source file to the archive.</p>
</div>
<span class="comment-copy">I don't understand what's is not that clear I am asking?.. Simple question. How to archive file (zip, gzip you name it) before moving it to another directory, so it would appear in that directory archived.</span>
<span class="comment-copy">So can anyone just put simple code example of that example of mine?:)</span>
<span class="comment-copy">Well I thought archive and compress as synonyms. Well what I meant is not to archive directory, but to yeah, compress files and then move them to another directory.</span>
<span class="comment-copy">@Andrius: No, they are not. Zip does both, tar only archives and gzip/bzip2/xz only compress. A .tar.gz is combination of tar and gzip.</span>
<span class="comment-copy">Ok, then I really recommend to go with gzip or bz2 modules. gzip is faster, but compression is worse. bz2 is slower, but compresses better. Usual convention is to name compressed files <code>&lt;originalFileName&gt;.gzip</code> or <code>... .bz2</code>.</span>
<span class="comment-copy">... of course it would really be best to use lzma, but python 2.7 is too old for that module.</span>
