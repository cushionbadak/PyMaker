<div class="post-text" itemprop="text">
<p>The following is the code for my projext which includes index.html, css , js , settings.py as well.
I have properly made the folders as well in my project file, so its not an issue of source as well.
I am trying to apply the pen from here:
<a href="https://codepen.io/soju22/pen/ZPXLZe" rel="nofollow noreferrer">https://codepen.io/soju22/pen/ZPXLZe</a></p>
<h2>index.html</h2>
<pre><code>      &lt;!DOCTYPE html&gt;
{% load static %}
&lt;!DOCTYPE html&gt;
&lt;html lang="en" dir="ltr"&gt;
  &lt;head&gt;
    &lt;meta charset="utf-8"&gt;
    &lt;title&gt;&lt;/title&gt;
    &lt;script src="{% static "clubapp/js/logmain.js" %}"&gt;

    &lt;/script&gt;
  &lt;link rel="stylesheet" href="{% static "clubapp/css/yo.css" %}"/&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id="info"&gt;
      &lt;h1&gt;Tribute to Matthew Shlian&lt;/h1&gt;
      &lt;h2&gt;&lt;em&gt;Paper Artist&lt;/em&gt; : Cutting Folding Gluing&lt;/h2&gt;
      &lt;p&gt;This pen is inpired by &lt;em&gt;&lt;a href="https://www.instagram.com/p/BtLYfbOgR8v/" target="_blank"&gt;Unholy 132&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
      &lt;a class="link" href="https://www.mattshlian.com/" target="_blank"&gt;&lt;i class="fa fa-link" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;
      &lt;a class="link" href="https://www.instagram.com/matthewshlian/" target="_blank"&gt;&lt;i class="fa fa-instagram" aria-hidden="true"&gt;&lt;/i&gt;&lt;/a&gt;
    &lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<h2>CSS</h2>
<pre><code>html, body {
  margin: 0;
  width: 100%;
  height: 100%;
  font-family: 'Montserrat', sans-serif;
}

canvas {
  position: fixed;
  width: 100%;
  height: 100%;
}

#info {
  position: absolute;
  width: 100%;
  top: 25%;
  z-index: 10;
  color: #fff;
  text-shadow: 2px 2px 2px #000;
  text-align: center;
}

a {
  color: #fff;
}

.link {
  display: inline-block;
  padding: 4px;
  margin: 0 0.5em;
  border-radius: 8px;
  background-color: rgba(255, 255, 255, 0.1);
  color: #fff;
  text-shadow: none;
  font-size: 24px;
  transition: all 0.4s;
  &amp;:hover {
    color: #FF5649;
    background-color: rgba(255, 255, 255, 1);
  }
}
</code></pre>
<h2>JS</h2>
<pre><code>let scene, camera, cameraCtrl, renderer;
let light, light1;
let width, height, cx, cy;
let rWidth, rHeight;
const TMath = THREE.Math;

let conf = {
  color: 0x9C1E15,
  objectWidth: 30,
  colWidth: 50,
  rowHeight: 50,
  noiseCoef: 50,
  mouseCoef: 0.1,
  lightIntensity: 1.5,
  ambientColor: 0x808080,
  light1Color: 0xffffff,
  light2Color: 0xffffff,
  light3Color: 0xffffff,
  light4Color: 0xffffff,
};

let objects;
const simplex = new SimplexNoise();

let mouseOver = false;
const mouse = new THREE.Vector2();
const mousePlane = new THREE.Plane(new THREE.Vector3(0, 0, 1), 0);
const mousePosition = new THREE.Vector3();
const raycaster = new THREE.Raycaster();

function init() {
  renderer = new THREE.WebGLRenderer({ antialias: true });
  renderer.shadowMap.enabled = true;
  renderer.shadowMap.type = THREE.PCFSoftShadowMap;
  renderer.setSize(window.innerWidth, window.innerHeight);
  document.body.appendChild(renderer.domElement);

  camera = new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 0.1, 1000);
  camera.position.z = 200;
cameraCtrl = new THREE.OrbitControls(camera);
  cameraCtrl.enabled = false;

  let size = getRendererSize();
  rWidth = size[0];
  rHeight = size[1];

  initScene();
  initEventHandlers();

  camera.position.z = 300;
  animate();
};

function initScene() {
  scene = new THREE.Scene();
  scene.background = new THREE.Color(0xffffff);

  initLights();
  initObjects();
}

function initLights() {
  light = new THREE.AmbientLight(conf.ambientColor);
  scene.add(light);

  light1 = new THREE.PointLight(conf.light1Color, conf.lightIntensity, 500);
  light1.position.z = 100;
  light1.castShadow = true;
  scene.add(light1);
}

function initObjects() {
  let geo = new THREE.PlaneBufferGeometry(rWidth * 2, rHeight * 2);
  let mat = new THREE.MeshPhongMaterial({ color: conf.color });
  let plane = new THREE.Mesh(geo, mat);
  plane.castShadow = false;
  plane.receiveShadow = true;
  scene.add(plane);

  objects = [];
  geo = new THREE.BoxGeometry(conf.objectWidth, conf.objectWidth, conf.objectWidth);
  mat = new THREE.MeshPhongMaterial({ color: conf.color });
  let nx = Math.round(rWidth / conf.colWidth) + 1;
  let ny = Math.round(rHeight / conf.rowHeight) + 1;
  let x, y, rx, ry, rz;
  for (let i = 0; i &lt; nx; i++) {
    for (let j = 0; j &lt; ny; j++) {
      mesh = new THREE.Mesh(geo, mat);
      x = -rWidth / 2 + i * conf.colWidth;
      y = -rHeight / 2 + j * conf.rowHeight;
      mesh.position.set(x, y, conf.objectWidth);
      mesh.castShadow = true;
      mesh.receiveShadow = true;
      objects.push(mesh);
      scene.add(mesh);
    }
  }
}

function animateObjects() {
  const time = Date.now() * 0.00005;
  const mx = mouse.x * conf.mouseCoef;
  const my = mouse.y * conf.mouseCoef;
  const noise = conf.noiseCoef * 0.00001;
  let mesh;
  for (let i = 0; i &lt; objects.length; i++) {
    mesh = objects[i];
    let nx = mesh.position.x * noise + mx + time;
    let ny = mesh.position.y * noise + my + time;
    rx = simplex.noise2D(nx, ny) * Math.PI;
    ry = simplex.noise2D(ny, nx) * Math.PI;
    // rz = simplex.noise2D(nx + ny, nx - ny) * Math.PI;
    mesh.rotation.set(rx, ry, 0);
  }
}

function initEventHandlers() {
  onWindowResize();
  window.addEventListener('resize', onWindowResize, false);

  document.body.addEventListener('mousemove', e =&gt; {
    const v = new THREE.Vector3();
    camera.getWorldDirection(v);
    v.normalize();
    mousePlane.normal = v;

    mouseOver = true;
    mouse.x = (e.clientX / width) * 2 - 1;
    mouse.y = - (e.clientY / height) * 2 + 1;

    raycaster.setFromCamera(mouse, camera);
    raycaster.ray.intersectPlane(mousePlane, mousePosition);
    setMapValue(mousePosition.x, mousePosition.y, 50);
  });
  document.body.addEventListener('mouseout', e =&gt; { mouseOver = false; });
}

function animate() {
  requestAnimationFrame(animate);

  animateObjects();
  animateLights();

  renderer.render(scene, camera);
};

function animateLights() {
  if (mouseOver) {
    light1.position.x = mousePosition.x;
    light1.position.y = mousePosition.y;
  } else {
    const time = Date.now() * 0.001;
    light1.position.x = Math.sin(time * 0.1) * rWidth / 3;
    light1.position.y = Math.cos(time * 0.2) * rHeight / 3;
  }
}

function onWindowResize() {
  width = window.innerWidth; cx = width / 2;
  height = window.innerHeight; cy = height / 2;
  camera.aspect = width / height;
  camera.updateProjectionMatrix();
  renderer.setSize(width, height);
}

function getRendererSize() {
  mouse.x = 1; mouse.y = 1;
  raycaster.setFromCamera(mouse, camera);
  raycaster.ray.intersectPlane(new THREE.Plane(new THREE.Vector3(0, 0, 1), 0), mousePosition);
  return [mousePosition.x * 2, mousePosition.y * 2];
}

function rnd(max, negative) {
  return negative ? Math.random() * 2 * max - max : Math.random() * max;
}

init();
</code></pre>
<h2>settings.py</h2>
<pre><code>import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(BASE_DIR,'templates')
STATIC_DIR = os.path.join(BASE_DIR,'static')
MEDIA_DIR = os.path.join(BASE_DIR,'media')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^ievtzxc470l!@awu+sq&amp;p9^p6x_z1a@o02uc!cis#od*84g$c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'clubapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'clubproj.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR,],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'clubproj.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS':{'min_length':9}
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS=[
STATIC_DIR,
]
</code></pre>
<p>`Above are all the files, please provide me a solution as im not able to get my html webpage the way i want it to be.
<a href="https://i.stack.imgur.com/qoXfK.png" rel="nofollow noreferrer">Image</a>
<a href="https://i.stack.imgur.com/hfV7G.png" rel="nofollow noreferrer">Image</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I guess there is a path mismatch in your project.
First, try</p>
<pre><code>python manage.py collectstatic
</code></pre>
<p>It wil collect all of your static file in static folder you've mentioned in your settings.py.
Then in template when you do {%static ...%} it means /static/(as seen in your setting.py) is already applied now you have to pass path inside static folder.
Suppose you have style.css inside css folder which is inside static folder, you have to write</p>
<pre><code>{%static 'css/styles.css'%}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this</p>
<p>in settings.py</p>
<pre><code>STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR + '/static/'
</code></pre>
<p>in project base urls</p>
<pre><code>if settings.DEBUG:
    urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)
</code></pre>
<p>for more details refer <a href="https://docs.djangoproject.com/en/2.1/howto/static-files/" rel="nofollow noreferrer">this</a></p>
<p>hope it helps</p>
</div>
<div class="post-text" itemprop="text">
<p>In your settings.py add this, </p>
<pre><code>STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
</code></pre>
<p>Delete your <code>STATICFILES_DIRS=[STATIC_DIR,]</code> line from settings.py.</p>
<p>Now your static root is pointing to your static folder inside your app. You can point to your static files according to your css or js folder etc.</p>
<p>Note - This will only work if debug is true. Once debug is false, then you need to change your static root according to your production server.</p>
</div>
<span class="comment-copy">So you can't apply static files, the main reason can be path mismatch. What is your folder structure inside your project?</span>
<span class="comment-copy">Ive added a screenshot of the structure, please check it.</span>
<span class="comment-copy">Hey, what do you want to do with my pen ? ^^</span>
<span class="comment-copy">Nope, it says: The system cannot find the path specified: 'C:\\Users\\heerd\\Desktop\\club\\clubproj \\static\\'</span>
<span class="comment-copy">I tried but not working.</span>
<span class="comment-copy">@HeerDonda can you show directory structure of project</span>
<span class="comment-copy">Yes, ive added the screenshots please have a look at it.</span>
