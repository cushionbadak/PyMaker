<div class="post-text" itemprop="text">
<p>I'm trying to import a CSV from a different path indicating the specified path with a dictionary. </p>
<pre><code>import csv
import os
import pandas as pd

PATH = Path("../../Toxic-comment-classification")
PATH.mkdir(exist_ok=True)

args = {
    "data_dir": PATH,
}

class MultiLabelTextProcessor(DataProcessor):

    def __init__(self, data_dir):
        self.data_dir = data_dir
        self.labels = None


    def get_train_examples(self, data_dir, size=-1):
        filename = 'train.csv'
        data_df = pd.read_csv(os.path.join(data_dir, filename))
        return(data_df)

a = MultiLabelTextProcessor(args.values())
print(a.get_train_examples(a.data_dir))
</code></pre>
<p>However, I get the following error when I try to run : </p>
<blockquote>
<p>TypeError: expected str, bytes or os.PathLike object, not dict_values</p>
</blockquote>
<p>I understand args.values() gives me a dict_object. How can I just have my value from my dictionary as a string ? </p>
</div>
<div class="post-text" itemprop="text">
<p>Obviously you are using Python 3. <code>args.values()</code> does not give you a dict object, but a <code>dict_values</code>, which the equivalent in Python 2 was a list. However, in your case, the list/dict_values has only one item, i.e. <code>args.values() == [PATH]</code> (sort of)</p>
<p>I bet you expect the <code>args</code> is a dict with only one entry so you want to extract that <code>PATH</code> content. You can simply do <code>list(args.values())[0]</code> on it. Or, in my opinion a better way, just use <code>args['data_dir']</code></p>
<p><code>os.path.join(data_dir, filename)</code> with <code>data_dir</code> a list or dict_values type and <code>filename</code> a string type is causing problem on your code.</p>
</div>
