<div class="post-text" itemprop="text">
<p>I am trying to write a program that outputs a list of questions for a test. What I am trying to do is to avoid adding duplicates to the list that way when I print the list I only have a certain amount of unique elements.</p>
<pre><code>def pick_questions(input_list, number_of_picks):
    """Picks random elements of an input list given the number of picks"""
    selected_strings = []

    for index in range(0, number_of_picks + 1):
        random_index = randint(0, len(input_list) - 1)

        if input_list[random_index] not in selected_strings:
            selected_strings.append(input_list[random_index])
            random_index = randint(0, len(input_list) - 1)

    return selected_strings
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/2/library/random.html#random.sample"><code>random.sample</code></a> so there wouldn't be need to do any filtering:</p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; random.sample(range(10), 5)
[1, 4, 3, 8, 7]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Initiate your list as a set. Set can only contain unique values. After your work is done, change your set back to list. </p>
<pre><code>set = {1, 2, 3}
&gt;&gt;&gt; set
set([1, 2, 3])
&gt;&gt;&gt; set.add(4) # this would add 4 to the set because the set does not have 4
&gt;&gt;&gt; set
set([1, 2, 3, 4])
&gt;&gt;&gt; set.add(4) # this would *not* add 4 to the set because the set already has 4
&gt;&gt;&gt; set
set([1, 2, 3, 4])
&gt;&gt;&gt; list(set)
[1, 2, 3, 4]
</code></pre>
<p>please refer to <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow">this link</a> for more details.</p>
</div>
<div class="post-text" itemprop="text">
<p>If, as it seems, you can use the <code>random</code> module, <code>random</code> has a very convenient function for your use case</p>
<pre><code>from random import sample as pick_questions
</code></pre>
<p><code>sample</code>'s documentation from yhe <code>ipython</code> prompt</p>
<blockquote>
<pre><code>In [4]: sample?
Signature: sample(population, k)
Docstring:
Chooses k unique random elements from a population sequence or set.

Returns a new list containing elements from the population while
leaving the original population unchanged.  The resulting list is
in selection order so that all sub-slices will also be valid random
samples.  This allows raffle winners (the sample) to be partitioned
into grand prize and second place winners (the subslices).

Members of the population need not be hashable or unique.  If the
population contains repeats, then each occurrence is a possible
selection in the sample.

To choose a sample in a range of integers, use range as an argument.
This is especially fast and space efficient for sampling from a
large population:   sample(range(10000000), 60)
File:      ~/src/miniconda3/lib/python3.5/random.py
Type:      method
</code></pre>
</blockquote>
</div>
<span class="comment-copy">Use <a href="https://docs.python.org/2/library/stdtypes.html#set" rel="nofollow noreferrer">set</a>.</span>
<span class="comment-copy">@kanayamalakar, should <i>not</i> be indented</span>
<span class="comment-copy"><code>for index in range(0, number_of_picks + 1):</code>  is not want you want, it gives you the numbers <code>0, 1, ..., npicks</code> that is, you will have <code>npicks+1</code> extractions from your input list.</span>
<span class="comment-copy">You will lose any ordering if you store elements this way.</span>
<span class="comment-copy">as @Holloway said, this would lose ordering. If you have to preserve the ordering please refer to this post. <a href="http://stackoverflow.com/questions/480214/how-do-you-remove-duplicates-from-a-list-in-python-whilst-preserving-order" title="how do you remove duplicates from a list in python whilst preserving order">stackoverflow.com/questions/480214/â€¦</a></span>
