<div class="post-text" itemprop="text">
<p>I write a program that find the prime numbers . My teacher told me to do that in three steps . Firstly i had to generate all odds numbers . Then i need to check if it is devigable or not . To do that he tell me to use % operator . Here is my code :</p>
<pre><code>for num in range(3,10):
    if num%2 != 0: #generating odds
        for i in range(3,num):
            if num%i != 0:
                print num
            else:
                None
    else:
        None
</code></pre>
<p>Now my question is , the above code is right to generate prime ? </p>
<p>The above code gives me wrong ans . But where's the bugs here ? I need the explenation .</p>
<p>Sample output of the above code is:
3
5
5
5
7
7
7
7
7
9
9
9
9
9
9</p>
</div>
<div class="post-text" itemprop="text">
<p>The second <code>for</code> loop should be terminated if <code>num</code> is not a prime number.</p>
<pre><code>for num in range(3, 100):
    if num % 2 != 0:
        for i in range(3, num):
            if num % i == 0:
                break
        else:
            print(num)
</code></pre>
<p>I found <a href="https://docs.python.org/3/tutorial/controlflow.html?#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow">the official document</a> for you:</p>
<blockquote>
<p>Loop statements may have an else clause; it is executed when the loop terminates through exhaustion of the list (with for) or when the condition becomes false (with while), but not when the loop is terminated by a break statement. </p>
</blockquote>
<p>Luckily, it provides with a sample about prime number.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have some correct ideas, but also some bugs. Since you mentioned a teacher I'll not give you a code example, just some hints.</p>
<p>You iterate (count upwards) for all numbers from 3 to 10. That's missing the number 2 already, which is also prime. You should just print that before everything else, to be complete.</p>
<p>Then you check if a number is odd by <code>%2</code>. That is a good idea, but it is also possible in python to iterate over only odd numbers by using <code>range(3,10,2)</code> instead. The last number is the step size, so it would count <code>3, 5, 7, 9</code>.
(This is just an enhancement, nothing wrong with your version)</p>
<p>Next you loop over all numbers smaller than the current number. First, you can already stop at <code>num/2</code>, because a divisor cannot be larger than that.
Your bug comes now: you print <code>num</code> every time one of the <code>i</code> does not divide. This is not a prime number. It's only a prime number if NONE of the numbers <code>i</code> divide <code>num</code>. I suggest you reverse your logic: print in the <code>else</code> statement and use the python statement <code>break</code> to escape the loop if one of the <code>i</code>s divide.</p>
<p>Additionally: <code>else: None</code> doesn't do anything, you can just leave it out. In Python not every <code>if</code> has to have an <code>else</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>i provide pseudo code in C language you understand it and try</p>
<pre><code>int num=40; //your variable
for(int i=3;i&lt;num;i++)
{
 if(i%2!=0)  //odd
 {
    int j=3;
    for( ;j&lt;i;J++)
    {
     if(i%j==0)
      {
       printf("not Prime");
       break;
      }
    }
   if(i==j)
    {
     printf("num is prime=%d",&amp;i);
    }

}
else
{
 printf("none")
}
}   
</code></pre>
</div>
<span class="comment-copy">provide sample output</span>
<span class="comment-copy">I edit the ques with sample out put</span>
<span class="comment-copy">The last else statement remains at the level of second for statement . I can't undestand that . Do it should at the level of second if statement ? If so , then the result is wrong . Can you please explain in brief about the use of else statement here</span>
<span class="comment-copy">@user6359012 if the second <code>for</code> loop never trigger off <code>break</code>, then it goto execute statement in <code>else</code></span>
<span class="comment-copy">Thank you . I understand now .</span>
<span class="comment-copy">For completeness sake, '2' should be included in the output. Namely, the script should look like so:  print(2),;for num in range(3, 100):;    if num % 2 != 0:;        for i in range(3, num):;            if num % i == 0:;                break;        else:;            print(num),;</span>
<span class="comment-copy">Thanks . Its so helpful .</span>
