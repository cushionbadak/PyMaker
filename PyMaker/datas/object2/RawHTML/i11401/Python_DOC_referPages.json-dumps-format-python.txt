<div class="post-text" itemprop="text">
<p>I am reading a JSON file, adding a field and then writing to a new JSON file.</p>
<p>The JSON file I read in <code>links.json</code> looks like this:</p>
<pre><code>[{"negativeNode":"osgb4000000023183407","toid":"osgb4000000023296573","term":"Private Road - Restricted Access","polyline":[492019.481,156567.076,492028,156567,492041.667,156570.536,492063.65,156578.067,492126.5,156602],"positiveNode":"osgb4000000023183409","index":1,"nature":"Single Carriageway"}
,{"negativeNode":"osgb4000000023763485","toid":"osgb4000000023296574","term":"Private Road - Restricted Access","polyline":[492144.493,156762.059,492149.35,156750,492195.75,156630],"positiveNode":"osgb4000000023183408","index":2,"nature":"Single Carriageway"}
,{"negativeNode":"osgb4000000023183650","toid":"osgb4000000023296638","term":"Private Road - Restricted Access","polyline":[492835.25,156873.5,493000,156923,493018.061,156927.938],"positiveNode":"osgb4000000023183652","index":3,"nature":"Single Carriageway"}
,{"negativeNode":"osgb4000000023181163","toid":"osgb4000000023388466","term":"Local Street","polyline":[498136.506,149148.313,498123.784,149143.969,498119.223,149143.411,498116.43,149143.318,498113.638,149145.179],"positiveNode":"osgb4000000023806248","index":4,"nature":"Single Carriageway"}
]
</code></pre>
<p>I open the JSON file, read it, create a new field and then dump it in a new file:</p>
<pre><code>import json
links_file = open('links.json')
links = json.load(links_file)

for link in links:
    link['length'] = 10

with open('links_new.json','w') as outfile:
    json.dump(links, outfile)
</code></pre>
<p>This succesfuly exports and I am able to inspect with a text editor (Sublime Text)</p>
<pre><code>[{"index": 1, "term": "Private Road - Restricted Access", "nature": "Single Carriageway", "negativeNode": "osgb4000000023183407", "toid": "osgb4000000023296573", "length": 10, "polyline": [492019.481, 156567.076, 492028, 156567, 492041.667, 156570.536, 492063.65, 156578.067, 492126.5, 156602], "positiveNode": "osgb4000000023183409"}, {"index": 2, "term": "Private Road - Restricted Access", "nature": "Single Carriageway", "negativeNode": "osgb4000000023763485", "toid": "osgb4000000023296574", "length": 10, "polyline": [492144.493, 156762.059, 492149.35, 156750, 492195.75, 156630], "positiveNode": "osgb4000000023183408"}, {"index": 3, "term": "Private Road - Restricted Access", "nature": "Single Carriageway", "negativeNode": "osgb4000000023183650", "toid": "osgb4000000023296638", "length": 10, "polyline": [492835.25, 156873.5, 493000, 156923, 493018.061, 156927.938], "positiveNode": "osgb4000000023183652"}, {"index": 4, "term": "Local Street", "nature": "Single Carriageway", "negativeNode": "osgb4000000023181163", "toid": "osgb4000000023388466", "length": 10, "polyline": [498136.506, 149148.313, 498123.784, 149143.969, 498119.223, 149143.411, 498116.43, 149143.318, 498113.638, 149145.179], "positiveNode": "osgb4000000023806248"}]
</code></pre>
<p>As you can see, this isn't as visually readable as the original JSON file. I am able to read it line by line successfully but it is printed as one single line in Sublime Text. Is there a formatting side to JSON dumps that I am missing?</p>
</div>
<div class="post-text" itemprop="text">
<p>There's a parameter called <code>indent</code>. It is <code>None</code> by default, which means "no pretty printing". If you set it to an integer value, it will enable pretty-printing, and use that many spaces to indent nested elements.</p>
<p>In your case it will be something along the lines of:</p>
<pre><code>json.dump(links, outfile, indent=4)
</code></pre>
<p>(or <code>indent=2</code> if you prefer less spaces). Here's an example from the docs (<a href="https://docs.python.org/2/library/json.html" rel="nofollow">link</a>), which shows more functionality you might also want as you progress:</p>
<pre><code>&gt;&gt;&gt; import json
&gt;&gt;&gt; print json.dumps({'4': 5, '6': 7}, sort_keys=True,
...                  indent=4, separators=(',', ': '))
{
    "4": 5,
    "6": 7
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>indent</code> parameter allows some degree of pretty printing.</p>
<p>From the docs</p>
<blockquote>
<p>If <em>indent</em> is a non-negative integer, then JSON array elements and object members will be pretty-printed with that indent level. An indent level of 0, or negative, will only insert newlines. None (the default) selects the most compact representation.</p>
</blockquote>
</div>
<span class="comment-copy">If you would just have read <a href="https://docs.python.org/3/library/json.html#json.dump" rel="nofollow noreferrer">the documentation</a>, you find that there are numerous parameters to <code>json.dump()</code>, including formatting parameters.</span>
<span class="comment-copy">The answer is here <a href="http://stackoverflow.com/questions/12943819/how-to-python-prettyprint-a-json-file" title="how to python prettyprint a json file">stackoverflow.com/questions/12943819/â€¦</a></span>
<span class="comment-copy">Ouch on the down votes! Thanks for the pointers - it's always simple in retrospect. Now solved ;)</span>
