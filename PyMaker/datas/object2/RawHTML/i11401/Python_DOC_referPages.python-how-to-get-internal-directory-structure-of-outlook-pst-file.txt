<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3197388/outlook-pst-file-parsing-in-python">Outlook PST File Parsing in Python [closed]</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>Is there any Library for Python (Windows) to read the Internal Directory structure of PST file eg. Inbox, Drafts, etc including Folders created by Users.</p>
</div>
<div class="post-text" itemprop="text">
<p>as per <a href="https://support.microsoft.com/en-us/kb/287070" rel="nofollow">https://support.microsoft.com/en-us/kb/287070</a></p>
<blockquote>
<p>Microsoft Outlook automatically stores messages, contacts,
  appointments, tasks, notes, and journal entries in one of the
  following two locations: In a personal storage folder, also known as a
  .pst file, on your hard disk drive. In a mailbox that is located on
  the server. Your mailbox is located on a server if you use Outlook
  with Microsoft Exchange Server.</p>
</blockquote>
<p>so, based on this info, you should be able to use OS</p>
<pre><code>import os
</code></pre>
<p>documentation for the library is here: <a href="https://docs.python.org/3/library/os.html" rel="nofollow">https://docs.python.org/3/library/os.html</a></p>
<p>The following example shows a simple use of scandir() to display all the files (excluding directories) in the given path that donâ€™t start with '.'. The entry.is_file() call will generally not make an additional system call:</p>
<pre><code>for entry in os.scandir(path):
   if not entry.name.startswith('.') and entry.is_file():
       print(entry.name)
</code></pre>
<p>for validating directories:
using listdir(path) lists available directories within the specified path, adding further logic, you should be able to achieve what you want
Ex:</p>
<pre><code>import os

cdirs = os.listdir("C:/")

print(cdirs)
</code></pre>
<p>or create a function to do this:</p>
<pre><code> def file_check(path):
        file_dirs = listdir(path)
        #do something with this

        return file_dirs
</code></pre>
</div>
<span class="comment-copy">I am not talking about pst file location, The question is basically related to the PST file's structure. PST contains the attributes which  are mentioned by you. I want to fetch the internal folder names from the pst file.</span>
<span class="comment-copy">using listdir(path) and some logic, you should be able to "scan" for directories.</span>
<span class="comment-copy">Dear @glls, As per my knowledge, listdir only applicable to folders not files. pst considered by OS as a file.</span>
<span class="comment-copy">i did not know that, could you include it in your orig. question? in that case, you would have to use scandir and maybe open the pst files. (dont know what this would result in) but are you able to read the pst file using python or tried? and based on the content categorize ?</span>
<span class="comment-copy">Already Included.</span>
