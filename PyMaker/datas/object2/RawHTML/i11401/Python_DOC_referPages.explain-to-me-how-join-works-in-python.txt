<div class="post-text" itemprop="text">
<p>I have created an answer validation code for use in a troubleshooting program. I have used the obvious validators for number answers (using the try/except method), however I now have yes/no questions as well. I scoured the internet and stack exchange and found one method that removes any integers from the answer (not just ones on the edges of an answer like <code>.strip()</code>). It uses the join method:</p>
<pre><code>while True:
    a = input("Yes or No? ").lower()
    a = ''.join(c for c in a if c.isalpha())
    if a == "y" or a == "yes":
        print("You inputted Yes!")
        break
    elif a == "n" or a == "no":
        print("You inputted No!")
        break
    else:
        print("Please input a valid option!") 
</code></pre>
<p>So if the user inputted 'Y312eS2', then it would accept that as a 'yes' answer. I want to know how it works though, because I have to explain it and all examples of <code>.join()</code> on the internet don't use it this time.</p>
<p>Can anyone help me?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>c for c in a if c.isalpha()
</code></pre>
<p>iterates over all characters in <code>a</code> and yields only the ones that are alpha but not numeric (<code>c.isalpha() is True</code>)</p>
<pre><code>''.join(['A', 'B', 'C'])
</code></pre>
<p><a href="https://docs.python.org/2/library/string.html#string.join" rel="nofollow">concatenates the list of characters</a> to one string without separators:</p>
<pre><code>ABC
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have a <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>str.join()</code> method</a>. This method simply puts all values in the iterable argument (which must be strings) together into a new string with the string object on which you called it as the joiner:</p>
<pre><code>&gt;&gt;&gt; ' - '.join(['foo', 'bar', 'baz'])
'foo - bar - baz'
&gt;&gt;&gt; ', '.join(['spam', 'eggs', 'ham'])
'spam - eggs - ham'
</code></pre>
<p>In your example, the <em>empty</em> string <code>''</code> is used, so there is nothing separating the strings being joined:</p>
<pre><code>&gt;&gt;&gt; ''.join(['Py', 'thon'])
'Python'
</code></pre>
<p>The input to the method is a <a href="https://docs.python.org/3/tutorial/classes.html#generator-expressions" rel="nofollow"><em>generator expression</em></a>:</p>
<pre><code>(c for c in a if c.isalpha())
</code></pre>
<p>This simply passes on all characters from <code>a</code> to the <code>str.join()</code> method if they are <em>letters</em>; <a href="https://docs.python.org/3/library/stdtypes.html#str.isalpha" rel="nofollow"><code>str.isalpha()</code></a> only returns true then, and not for numbers or whitespace or any other type of character:</p>
<pre><code>&gt;&gt;&gt; '1'.isalpha()
False
&gt;&gt;&gt; 'c'.isalpha()
True
</code></pre>
<p>So <code>''.join(c for c in a if c.isalpha())</code> joins all characters from <code>c</code> that are letters into a new string, effectively filtering out <em>anything else</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>.join()</code> it self has nothing do to with removing certain characters from a string, or validating anything.</p>
<p><code>.join()</code> simply takes the string that it was called upon (<code>'x'</code> in case of <code>'x'.join()</code>), concats it to every string in the iterable it got as a parameter and returns the whole thing as a single string.</p>
<p>For example:</p>
<pre><code>'*'.join(['1', '2'])
&gt;&gt;  '1*2'
</code></pre>
<p>In the example in your code, a conditional statement was added to the iterable that was passed to <code>.join()</code>, so it would take only the strings that are letters.</p>
</div>
<div class="post-text" itemprop="text">
<p>the .join() method is usually used to convert a list to a string.</p>
<p>you have a list comprehension plugged in to the method.  </p>
<p><a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions</a></p>
<p>The list is built, and the .join() method concatenates each character in the list you've built with a separation character (in your case, none '').</p>
<p><a href="https://docs.python.org/2/library/string.html#string.join" rel="nofollow">https://docs.python.org/2/library/string.html#string.join</a></p>
</div>
<span class="comment-copy">What exactly is your question? How <code>join()</code> works? It is the same as string concatenation using <code>+</code>...</span>
<span class="comment-copy">Thank you, I understood it concatenates the string but did not know that it loops over all of the characters and only returns the alpha-characters, thank you :))</span>
<span class="comment-copy">Just a small note, <code>isalpha()</code> returns False for an integer string ('1', '2' and so on..), so the statement <code>iterates over all characters in a and yields only the ones that are alphanumeric</code> should be changed to <code>iterates over all characters in a and yields only the ones that are letters</code>. There is another method for alphanumeric, <code>.isalnum()</code></span>
