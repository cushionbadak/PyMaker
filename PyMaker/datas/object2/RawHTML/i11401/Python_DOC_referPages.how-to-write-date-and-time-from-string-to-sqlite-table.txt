<div class="post-text" itemprop="text">
<p>I have date and time in one-string format "2016-03-28T20:23:46+0800". How to convert it to date-time format Sqlite3 supports in "datetime" domain? I'm using python to read/write data in database.</p>
<p>I know that it's possible to achive using python:</p>
<pre><code>&gt;&gt;&gt; str = "2016-03-28T20:23:46+0800"
&gt;&gt;&gt; temp = str.split('T')
&gt;&gt;&gt; temp[1] = temp[1].rstrip('+')
&gt;&gt;&gt; temp[1]
'20:23:46+0800'
&gt;&gt;&gt; temp[1] = temp[1].split('+')[0]
&gt;&gt;&gt; result = " ".join(temp)
&gt;&gt;&gt; result
'2016-03-28 20:23:46'
</code></pre>
<p>but maybe the given string has a convertible format?</p>
</div>
<div class="post-text" itemprop="text">
<p>date time format does not exist in sqlite, one work around is to use number sequence as date time for example:</p>
<pre><code>def Strtime2Num(result):
    date_object = datetime.strptime(Strtime,"%Y-%m-%dT%H:%M%S+0800")
    Strtime = date_object.strftime('%Y%m%d%H%M')
    return int(result)
</code></pre>
<p>when select in sql command, you can use </p>
<pre><code>con.execute(UPDATE YearUpdateCapa SET %s = %d WHERE DateTime &gt;= %d AND DateTime &lt;= %d' % (name, avail,start,end))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>sqlite3</code> won't produce an error until you try to select the value back as <em><code>datetime</code> object</em> if you try to insert a timestamp in the wrong format. To validate the input date/time string, <a href="https://stackoverflow.com/a/15464333/4279">convert it to <code>datetime.datetime</code> first</a>. <code>sqlite3</code> module can convert <code>datetime.datetime</code> automatically:</p>
<pre><code>#!/usr/bin/env python3
import sqlite3
from datetime import datetime

db = sqlite3.connect(':memory:')
db.execute('CREATE TABLE dates (timestamp TIMESTAMP)')
db.executemany('INSERT INTO dates VALUES(?)', 
               [[datetime.utcnow()], ['2016-03-28 20:23:46.000000+0800']])
print(*db.execute('SELECT timestamp FROM dates'), sep='\n')
</code></pre>
<h3>Output</h3>
<pre><code>('2016-05-14 05:08:52.487113',)
('2016-03-28 20:23:46.000000+0800',)
</code></pre>
<p><code>TIMESTAMP</code> field accepts a string in ISO 8601 format <code>'YYYY-MM-DD HH:MM:SS.mmmmmm'</code> or <code>datetime.datetime</code> object. </p>
<p><a href="https://stackoverflow.com/q/1829872/4279">To return <code>datetime.datetime()</code> back, you could use <code>detect_types=sqlite3.PARSE_DECLTYPES</code></a> (if you need the timezone support; <a href="https://docs.python.org/3/library/sqlite3.html#converting-sqlite-values-to-custom-python-types" rel="nofollow noreferrer">define your own converter</a> that returns timezone-aware datetime objects).</p>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/help/someone-answers">stackoverflow.com/help/someone-answers</a></span>
