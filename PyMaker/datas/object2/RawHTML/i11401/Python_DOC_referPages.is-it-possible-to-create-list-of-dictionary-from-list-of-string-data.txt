<div class="post-text" itemprop="text">
<p>My Input list is of the following type (Note that it includes empty strings): </p>
<pre><code>Input = ['NO', 'Part Number', '1', '12334', '2', '45fd33', '']
</code></pre>
<p>I need to create a list of dictionaries like (Where the empty strings are ignored) </p>
<pre><code>[
  {'NO': '1', 'Part Number': '12334'},
  {'NO': '2', 'Part Number': '45fd33'}
]
</code></pre>
<p>What I have tried so far:</p>
<pre><code>dict(enumerate(new_name_list, start=1))
</code></pre>
<p>and got following output:</p>
<pre><code>{1: 'NO', 2: 'Part Number', 3: '1', 4: '12334', 5: '2', 6: '45fd33', 7: ''}
</code></pre>
<p>How can I get expected output and exclude empty string value from the list?</p>
</div>
<div class="post-text" itemprop="text">
<p>There are two separate questions that you ask here.</p>
<p>To remove <code>''</code> from your list you can pass it through a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a></p>
<pre><code>&gt;&gt;&gt; Input = ['NO', 'Part Number', '1', '12334', '2', '45fd33','']
&gt;&gt;&gt; Input_Changed = [i for i in Input if i!='']
&gt;&gt;&gt; Input_Changed
['NO', 'Part Number', '1', '12334', '2', '45fd33']
</code></pre>
<p>The syntax of your string follows the general rule that the odd elements baring the first two is meant to be <code>NO</code> and the even ones are meant to be <code>Part_Number</code>.</p>
<p>For this we can use following the <code>iter</code> trick: </p>
<pre><code>&gt;&gt;&gt; i = iter(Input_Changed[2:])
&gt;&gt;&gt; [{Input_Changed[0]:x,Input_Changed[1]:y} for x,y in zip(i,i)]
[{'Part Number': '12334', 'NO': '1'}, {'Part Number': '45fd33', 'NO': '2'}]
</code></pre>
<p>The main idea is that <code>iter</code> returns an iterator and hence each time you pass an element you consume an element. Thus you get the required output when you <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow"><code>zip</code></a> (which returns adjacent elements as you are passing the same iterator as both the arguments). </p>
</div>
<span class="comment-copy">Why are you getting the data in this structure instead of a sequence of 2-sequences?</span>
<span class="comment-copy">Right now your expected output is a set of.. well, I'm not sure, it's halfway between a list and a dictionary.  I <i>think</i> what you want is a list of dictionaries instead.</span>
<span class="comment-copy">Why your keys are in the same list than your values ? It is possible to have 3, 4 keys instead of 2 ? To have a list of keys separated from the values could be better (unless if if you always have to work with 2 keys).</span>
<span class="comment-copy">What's the difference between this "trick" and <code>zip(Input_Changed[2::2], Input_Changed[3::2])</code>?</span>
<span class="comment-copy">@Two-BitAlchemist Single iterator using the "trick". When you slice, you are creating two new lists.</span>
