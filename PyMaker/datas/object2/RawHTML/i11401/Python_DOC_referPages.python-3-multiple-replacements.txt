<div class="post-text" itemprop="text">
<p>I don't see why this has been placed on hold as "off topic." I am asking for programming help, not a reference (which is what the explanation of why it was closed said). Here's my original question:
I have a python 3 script to send emails in HTML to a list of about 600 people. Sendmail apparently can't send non-ascii characters above 127 (decimal) unless I jump through hoops with MIME. So I'm considering doing a bulk replace of all accented characters with their HTML &amp;#...; equivalents.</p>
<p>I'd rather not use regex, since I'm not proficient at them. Is there way to do this without using a loop, or at least not a complicated one?</p>
</div>
<div class="post-text" itemprop="text">
<p>Googled "python encode html entities", first result: <a href="https://wiki.python.org/moin/EscapingHtml" rel="nofollow">https://wiki.python.org/moin/EscapingHtml</a>:</p>
<blockquote>
<h3>Builtin HTML/XML escaping via ASCII encoding</h3>
<p>A very easy way to transform non-ASCII characters like German umlauts or letters with accents into their HTML equivalents is simply encoding them from unicode to ASCII and use the xmlcharrefreplace encoding error handling:</p>
</blockquote>
<pre><code>&gt;&gt;&gt; a = u"äöüßáà"
&gt;&gt;&gt; a.encode('ascii', 'xmlcharrefreplace')
'&amp;#228;&amp;#246;&amp;#252;&amp;#223;&amp;#225;&amp;#224;'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3.5/library/stdtypes.html?highlight=maketrans#str.translate" rel="nofollow"><code>str.translate()</code></a> and the entities from the <a href="https://docs.python.org/3/library/html.entities.html" rel="nofollow"><code>html</code></a> package:</p>
<pre><code>import html

text = "a text with ä and ö"
ent = {k: '&amp;{};'.format(v) for k, v in html.entities.codepoint2name.items()}
print(text.translate(ent))
</code></pre>
<p>Output:</p>
<pre><code>a text with &amp;auml; and &amp;ouml;
</code></pre>
</div>
<span class="comment-copy"><code>str.replace()</code> replaces <i>all</i> replacements in the string; no need for a loop.</span>
<span class="comment-copy">The obvious thing is to use a dictionary of replacements. Given such a dictionary, 1 line of code is enough to do the replacements: <code>s = ''.join(d[c] if c in d else c for c in s)</code></span>
<span class="comment-copy">The problem with str.replace() is that I'd have to have about 30 of them.</span>
<span class="comment-copy">I tried a copy and paste of the two lines above, but got this error:    codecs.charmap_encode(input,self.errors,encoding_map)[0] UnicodeEncodeError: 'charmap' codec can't encode characters in position 0-4: character maps to &lt;undefined&gt;. Maybe I need to import something?</span>
<span class="comment-copy">Wait, the error was due to my having a line about code pages at the top of the file, left over from earlier experimentation. I do now get the output shown above. I will go with this solution, which is extremely economical.</span>
