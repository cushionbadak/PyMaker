<div class="post-text" itemprop="text">
<p>Python's random seems are global, so modules changing it will effect each other.</p>
<p>While there are of course many 3rd party modules, is there a way using Python's standard library to have a random number local to a context.</p>
<p>(without using <code>random.get/setstate</code> which may be problematic when mixing code from different modules).</p>
<p>Something like...</p>
<pre><code>r = random.context(seed=42)
number = r.randint(10, 20)
</code></pre>
<p>Where each module can use its own random context.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/random.html" rel="noreferrer">From the docs</a>:</p>
<blockquote>
<p>The functions supplied by this module are actually bound methods of a hidden instance of the <code>random.Random</code> class. You can instantiate your own instances of <code>Random</code> to get generators that donâ€™t share state.</p>
</blockquote>
<p>Make your own <code>random.Random</code> instance and use that.</p>
<pre><code>rng = random.Random(42)
number = rng.randint(10, 20)
</code></pre>
</div>
<span class="comment-copy">Thanks! I was expecting to see this documented more prominently, but its only referenced as plain-text in the middle of a paragraph. - <a href="https://docs.python.org/3/library/random.html" rel="nofollow noreferrer">docs.python.org/3/library/random.html</a> - with no heading or example code.</span>
