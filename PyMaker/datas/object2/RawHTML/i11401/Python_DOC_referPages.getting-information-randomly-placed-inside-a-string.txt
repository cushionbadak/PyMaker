<div class="post-text" itemprop="text">
<p>I need to extract information from this string (was bytes, but I decoded it):</p>
<p><strong>\x00\x00\x00!broadcast "updatedirection 126.0"</strong></p>
<p>I need to see whether it contains <strong>broadcast, updatedirection</strong> and also see what the number is at the end. My first solutions were:</p>
<pre><code>data = data.split('!')
data = data[1]
</code></pre>
<p>but the symbol in that position seemed to change randomly and with no apparent pattern at all. Then I tried:</p>
<pre><code>data = data[12:]
</code></pre>
<p>But the string length changed all the time, so that didn't work.</p>
<p>I am doing this for a computer science project in school where I am using BYOB (based on Scratch, a simple language to teach young people how to program) and sockets to send data between them to make a LAN multiplayer. This is literally the only thing that doesn't work yet.</p>
<p>Hope someone can give me a solution to find this data.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could hit it with a hammer</p>
<pre><code>import re

s = '\x00\x00\x00!broadcast "updatedirection 126.0"'
pat = re.compile(r'(?:\x00){3}\Wbroadcast "updatedirection ([\d.]+)"')
m = pat.match(s)
if m:
    print(m.group(1)) # '126.0'
</code></pre>
<p>Checking for different cases,</p>
<pre><code>s = '\x00\x00\x00#broadcast "updatedirection 126.0"'
pat.match(s).group(1) # '126.0'

s = '\x00\x00\x00!foo "bar 126.0"'
pat.match(s) # None
</code></pre>
<p>You could make it more robust by changing the first part for null bytes of regex to something like giving it a range<code>(?:\x00){m,n}</code> or something similar.</p>
</div>
<div class="post-text" itemprop="text">
<p>To check if a string contains a word:</p>
<pre><code>if word in string:
</code></pre>
<p>Then I would use <a href="https://docs.python.org/3/library/stdtypes.html#str.rfind" rel="nofollow">rfind()</a> to find where the last space is, extract the text after this space and check whether it is a number.</p>
<p>You can test for both words in a single statement:</p>
<pre><code>str = "test it here"

if "test" in str and "here" in str:
    print("they are")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this,</p>
<pre><code>import re

s = '\x00\x00\x00!broadcast "updatedirection 126.0"'

# if 'broadcast' in s  and 'updatedirection' in s:
if all([item in s for item in ['broadcast', 'updatedirection']]):
    result = re.findall('[-+]?\d*\.\d+|\d+', s)  # extract all numbers from a string

    print(result[-1]) # the last number
    # Output
    126.0
</code></pre>
<p>Refer to <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow">re.findall</a>.</p>
</div>
<span class="comment-copy">Use a regular expression</span>
<span class="comment-copy"><code>import re</code> <code>print re.findall('!broadcast "updatedirection [\d.]+"', INPUT)</code></span>
