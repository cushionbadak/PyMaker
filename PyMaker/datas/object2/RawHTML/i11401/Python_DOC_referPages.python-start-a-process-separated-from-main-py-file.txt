<div class="post-text" itemprop="text">
<p>I have a python script .py that basically do this</p>
<pre><code>&lt;take input from console&gt;
&lt;launch command with os.system&gt;
&lt;quit console&gt;
</code></pre>
<p>The problem is that when I launch command with os.system(string), it is executed in the python script, so it will quit console only when the command has finished.
I want launch the command as another process, so the main code goes on and can quit console (with "quit", I guess), without touching the process it started. How can I? </p>
</div>
<div class="post-text" itemprop="text">
<p>The command given to <code>system()</code> <em>is</em> launched as a separate process, but <code>system()</code> waits for its termination.  The easiest way to avoid this is by appending a <code>&amp;</code> to your command string, then the command is executed in the background (i. e. without waiting for its termination):</p>
<pre><code>system('./call_my_lengthy_program.sh &amp;')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also use the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow">subprocess module</a>.</p>
<pre><code># useless example
import subprocess
subprocess.Popen("sleep.exe 5 &amp;&amp; echo test", shell=True)
exit(0)
</code></pre>
<p>.. this will wait 5 seconds and print test to your stdout.</p>
</div>
<span class="comment-copy">This is something of a multi-thread/multi-process concept. Please learn on multithread, multiprocessing, and subprocess modules.</span>
