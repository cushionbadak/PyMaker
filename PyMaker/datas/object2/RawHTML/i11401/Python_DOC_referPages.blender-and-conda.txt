<div class="post-text" itemprop="text">
<p>I have  installed Blender recently, and want to script with my conda libraries (Miniconda python 2.7) but conflicts occur due to Blender 2.77, and imports are not reachable.  How to make this work?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since v2.50 blender has used python 3.x. You should start by using the python3 version of miniconda to be able to use it within blender. For blender 2.77 python 3.5 is being used.</p>
<p>You have several options for adding custom python modules to blender.</p>
<ol>
<li>Include all modules within the one folder for <a href="https://www.blender.org/api/blender_python_api_current/info_tutorial_addon.html" rel="nofollow noreferrer">your addon</a>. (an addon is a python module)</li>
<li>Configure the <a href="https://blender.stackexchange.com/a/5289/935">scripts directory</a> in blender's preferences.</li>
<li>Install your module within blender's python directories. <a href="https://www.blender.org/manual/getting_started/installing/configuration/directories.html" rel="nofollow noreferrer">This explains the file paths</a> blender uses.</li>
<li>Delete the bundled python (or build your own blender) so that blender uses a system installed python. Ensure that the system install matches the python version that blender was built with.</li>
</ol>
<p>There are some <a href="https://www.blender.org/manual/advanced/command_line/arguments.html#environment-variables" rel="nofollow noreferrer">environment variables</a> you can set to help blender find what it needs. Python's <code>sys.path</code> may also be altered to include your modules.</p>
<p>Which approach you use will mostly depend on what you plan to do. The first would be best if you want to share your work with others, while the others would be better suited if you only want to adjust your install of blender.</p>
<p>You might find <a href="https://blender.stackexchange.com/a/30517/935">this answer</a> at blender.stackexchange.com can help.</p>
<p>If you have strong reasons for using the python 2.7 version of miniconda then you will need to look at other ways to transfer data, like using <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_call" rel="nofollow noreferrer"><code>subprocess.check_call()</code></a> or <a href="https://docs.python.org/3/library/multiprocessing.html#exchanging-objects-between-processes" rel="nofollow noreferrer"><code>multiprocess.Pipe</code></a>. You should <a href="https://blender.stackexchange.com/a/32779/935">read this</a> if you need to go that way.</p>
</div>
<span class="comment-copy">So your goal is to add conda library in blender python?</span>
