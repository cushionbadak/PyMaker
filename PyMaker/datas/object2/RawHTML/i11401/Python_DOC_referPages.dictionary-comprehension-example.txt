<div class="post-text" itemprop="text">
<p>I have a set, which contains n sets of prime numbers(3):</p>
<pre><code>&gt;&gt;&gt; sets
{frozenset({3, 13, 23}), frozenset({17, 2, 13}), 
frozenset({19, 2, 3}), frozenset({3, 29, 23}), frozenset({17, 11, 23}),
frozenset({17, 2, 19}), frozenset({11, 17, 3}), frozenset({17, 5, 7})}
</code></pre>
<p>I want to create the dictionary with values: prime numbers-triple and keys: the product of three prime numbers.</p>
<p>This is my attempt:</p>
<pre><code>lists = [list(i) for i in sets]
products = [reduce(lambda x,y:x*y,i) for i in lists]
dictir = {x:y for x in products for y in sets}
</code></pre>
<p>But dictir gives me incorrect result:</p>
<pre><code>{897: frozenset({17, 5, 7}), 114: frozenset({17, 5, 7}), 595: frozenset({17, 5, 7}), 561: frozenset({17, 5, 7}), 646: frozenset({17, 5, 7}), 2001: frozenset({17, 5, 7}), 442: frozenset({17, 5, 7}), 4301: frozenset({17, 5, 7})}
</code></pre>
<p>Can you help me to correct this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You may use <code>zip()</code> but another, more efficient approach would be this:</p>
<pre><code>import operator
tuples = ((reduce(operator.mul, i), i) for i in sets)
dictir = dict(tuples)

# Or as a 1 liner
dictir = {reduce(operator.mul, i): i for i in sets}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You do double iteration and effectively create Cartesian product of <code>lists</code> and <code>products</code>.</p>
<p>To iterate elementwise on multiple sequences simply use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a>.</p>
<pre><code>dictir = {x: y for x, y in zip(products, sets)} 
</code></pre>
<p>Of course you may drop all intermediate variables and do simple one-liner:</p>
<pre><code>sets = {frozenset({3, 13, 23}), frozenset({17, 2, 13}),
        frozenset({19, 2, 3}), frozenset({3, 29, 23}), frozenset({17, 11, 23}),
        frozenset({17, 2, 19}), frozenset({11, 17, 3}), frozenset({17, 5, 7})}
dictir = {reduce(lambda x, y: x * y, s): s for s in sets}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think, you can simply use that:</p>
<pre><code>import operator
dictir = {reduce(operator.mul,numbers):numbers for value in sets}
</code></pre>
</div>
<span class="comment-copy">it gives me "SyntaxError: invalid syntax"</span>
<span class="comment-copy">@YNWA1992 Fixed and tested.</span>
