<div class="post-text" itemprop="text">
<p>I came across this Python script:</p>
<pre><code>parser = ap.ArgumentParser() 
parser.add_argument("-t", "--trainingSet", help="Path to Training Set", required="True")
args = vars(parser.parse_args())
train_path = args["trainingSet"]
</code></pre>
<p>The points I didn't get are:</p>
<ul>
<li><p>How do we use those arguments in the command line: "-t", "--trainingSet", help="Path to Training Set", required="True"?</p></li>
<li><p>What does <code>args</code> mean? How was the training path retrieved?</p></li>
</ul>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Create a <code>parser</code> object:</p>
<pre><code>parser = ap.ArgumentParser() 
</code></pre>
<p>add an argument definition to the parser (it creates an <code>Action</code> object, though you don't need to worry about that here).</p>
<pre><code>parser.add_argument("-t", "--trainingSet", help="Path to Training Set", required="True")
</code></pre>
<p>Tell the <code>parser</code> to parse the commandline arguments that are available in <code>sys.argv</code>.  This a list of strings created by the commandline shell (bash or dos).</p>
<pre><code>args = parser.parse_args()
</code></pre>
<p><code>args</code> is a <code>argparse.Namespace</code> object.  It is a simple object class.  <code>vars</code> converts it to a dictionary</p>
<pre><code>argdict = vars(args)
</code></pre>
<p>This is ordinary dictionary access</p>
<pre><code>train_path = argdict["trainingSet"]
</code></pre>
<p>you can get the same thing from the namespace</p>
<pre><code>train_path = args.trainingSet
</code></pre>
<p>I'd recommend looking at <code>args</code></p>
<pre><code>print args
</code></pre>
<p>With this <code>parser</code> definition, a commandline like </p>
<pre><code>$ python myprog.py -t astring    # or
$ python myprog.py --trainingSet anotherstring
</code></pre>
<p>will end up setting <code>train_path</code> to the respective string value. It is up to the rest of your code to use that value.</p>
<p>The <code>help</code> parameter will show up in the help message, such as when you do</p>
<pre><code>$ python myprog.py -h
</code></pre>
<p>The <code>required</code> parameter means that the <code>parser</code> will raise an error if you don't provide this argument, e.g. </p>
<pre><code>$ python myprog.py    
</code></pre>
</div>
<span class="comment-copy"><code>args</code> means "arguments", and you run the program like <code>python script.py -t something</code>... Does that help?</span>
<span class="comment-copy">have you looked at <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">the documentation</a>?  It explains a lot about how it works.</span>
<span class="comment-copy">You could use both <code>-t</code> and <code>--trainingSet</code>. Also, you should provide boolean <code>True</code> for <code>required</code> argument of <code>add_argument</code>.</span>
<span class="comment-copy">maybe the part you are confused about is that <a href="https://docs.python.org/3/library/argparse.html#argparse.ArgumentParser.add_argument" rel="nofollow noreferrer"><code>add_argument</code></a> only adds one argument, there is no argument called <a href="https://docs.python.org/3/library/argparse.html#required" rel="nofollow noreferrer"><code>required</code></a> that just means that the <code>--trainingSet</code> argument is required</span>
