<div class="post-text" itemprop="text">
<p>I learn that <code>exit</code> is not a keyword in Python by,</p>
<pre><code>import keyword
print('exit' in keyword.kwlist)     # Output: False
</code></pre>
<p>But there is no reminder of <code>NameError: name 'exit' is not defined</code> while using it. The output of the following snippet code makes me confused. Can anyone help me out?</p>
<pre><code>for i in range(5):
    print(i)
    cur=i if i&lt;2 else exit

print(cur)
# Output
0
1
2
3
4
Use exit() or Ctrl-D (i.e. EOF) to exit
</code></pre>
<p>I am unable to get related info about <code>exit</code> from Python documentations, except for <a href="https://docs.python.org/2/library/constants.html?highlight=exit#exit" rel="nofollow"><code>exit([code=None])</code></a>. </p>
</div>
<div class="post-text" itemprop="text">
<p>Keywords are part of the python syntax.  They usually have special meaning in statements (e.g. <code>for</code>, <code>del</code>, <code>if</code> ...).  This has other consequences -- e.g. you <em>can't</em> make a variable with the same name as a keyword.  </p>
<p><em>builtins</em> are <a href="https://docs.python.org/2/library/functions.html" rel="nofollow">callable objects</a> (e.g. functions or at least function-like) that python provides in the namespace by default.  examples of builtin functions are things like <code>sorted</code>, <code>id</code>, <code>vars</code>, ...</p>
<p>It's worth noting that <code>exit</code> is a convenience provided when in an interactive session.  It's highly encouraged to use <a href="https://docs.python.org/2/library/sys.html#sys.exit" rel="nofollow"><code>sys.exit</code></a> instead.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>exit</code> is an instance of the <code>Quitter</code> class.  The <code>Quitter</code> class defines an <code>__repr__</code> method that returns the string that you see when you type <code>exit</code> into the shell.  It also defines a <code>__call__</code> method.  Just as <code>__init__</code> is called when you use a class like a function, <code>__call__</code> is called when an instance is used like a function.  Therefore, <code>exit()</code> calls the <code>__call__</code> method, which exits the program.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/constants.html#exit" rel="nofollow noreferrer"><code>exit</code></a> is an <a href="https://docs.python.org/3/library/constants.html" rel="nofollow noreferrer">Built-in Constants</a> <strong>added by the <code>site</code> module</strong>.</p>
<blockquote>
<p>The <a href="https://docs.python.org/3/library/site.html#module-site" rel="nofollow noreferrer"><code>site</code></a> module (which is imported automatically during startup,
  except if the <a href="https://docs.python.org/3/using/cmdline.html#id3" rel="nofollow noreferrer"><code>-S</code></a> command-line option is given) adds several constants
  to the built-in namespace. <strong>They are useful for the interactive
  interpreter shell and should not be used in programs</strong>.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p><code>exit</code> is the <code>sys.exit</code> function when you are using the interactive console.</p>
<p>Many things exist while they are not keywords (e.g. <code>sum</code>, <code>int</code>...). So you can bind to existing names, but not to keywords</p>
</div>
<span class="comment-copy">@Ian, it seems that <code>exit</code> equals <code>Use exit() or Ctrl-D (i.e. EOF) to exit</code>, like a constant string.</span>
<span class="comment-copy">Which is an interesting behavior, I suppose... like when you use console.. :)</span>
<span class="comment-copy">You found <a href="https://docs.python.org/3.5/library/constants.html" rel="nofollow noreferrer">docs.python.org/3.5/library/constants.html</a> which says <code>exit</code> is a constant added by <code>site.py</code>, not a keyword or built-in function.  Not a duplicate, but see <a href="http://stackoverflow.com/questions/6501121/the-difference-between-exit-and-sys-exit-in-python" title="the difference between exit and sys exit in python">stackoverflow.com/questions/6501121/…</a></span>
<span class="comment-copy">The python doc. calls <code>exit</code> a constant:  <a href="https://docs.python.org/3.5/library/constants.html" rel="nofollow noreferrer">docs.python.org/3.5/library/constants.html</a></span>
<span class="comment-copy">@cdarke -- Yeah.  I'm guessing that's because they didn't have a better thing to call it.  It's not a builtin (don't want people using it in scripts because it isn't there ...).  With that said -- calling it a constant is a little weird in my opinion...</span>
<span class="comment-copy">Agreed, python doesn't really have constants (OK, readonly properties), and it breaks PEP008 if it is one because it should be uppercase!</span>
<span class="comment-copy">thx, <code>print(type(exit))</code> is <code>&lt;class 'site.Quitter'&gt;</code>.</span>
<span class="comment-copy"><code>exit</code> has the same functionality, but it is not the same as <code>sys.exit</code>.  See @zondo's post and <a href="http://stackoverflow.com/questions/6501121/the-difference-between-exit-and-sys-exit-in-python" title="the difference between exit and sys exit in python">stackoverflow.com/questions/6501121/…</a></span>
