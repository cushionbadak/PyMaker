<div class="post-text" itemprop="text">
<p>I've got unicode strings (from an API query) that should have been encoded as regular ascii strings (as they already contain unicode representations). How can I change the encoding without actually changing the the characters being encoded?</p>
<p>To wit:</p>
<pre><code>string = '165\xc2\xba F' # What I want
print(string)

my_string = u'165\xc2\xba F' # What I have
print(my_string)
</code></pre>
<p>PS I realize <code>\xc2\xba</code> is actually for ordinal number and not the degree sign (<code>\xc2\xb0</code>) but that's what I got. </p>
</div>
<div class="post-text" itemprop="text">
<p>What you have is not "unicode" is the byte sequence for the UTF-8 encoding of the string you want. </p>
<p>You can retrieve the text by using the "latin-1" codec to transparently transport your byte sequence to a byte-string (from your unicode-string) and
them, decode it normally from UTF-8:</p>
<pre><code>In[]: u'165\xc2\xba F'.encode("latin1").decode("utf-8")
Out[]: u'165ยบ F'
</code></pre>
<p>Why the latin-1 codec is special and works in this case is described on the second paragraph from here: <a href="https://docs.python.org/3/library/codecs.html#encodings-and-unicode" rel="nofollow">https://docs.python.org/3/library/codecs.html#encodings-and-unicode</a></p>
<p>When you've got some minutes to spare it would be useful to read <a href="http://www.joelonsoftware.com/articles/Unicode.html" rel="nofollow">this nice article on Unicode</a> to know what are codecs, and what does text in unicode mean. </p>
</div>
<span class="comment-copy"><code>u'165\xba F'</code> is the output I got for your input. Only when I print that do I have the desired output. It's all very confusing.</span>
<span class="comment-copy">Maybe I'm not using the right term, but doesn't the <code>u</code> necessarily designate my string as "unicode". I mean, that's what <code>type(my_string)</code> says.</span>
<span class="comment-copy">Thanks to your answer, I found that <code>my_string.encode('latin1')</code> will give me what I want. Much appreciated!</span>
<span class="comment-copy">You really  should have your program deal with text as unicode instead.</span>
<span class="comment-copy">The fact I had th 'right output' is that I've run the snippet in a Python3 console. Python3 uses Unicode by default, and outputs common printable characters as themselves, not an escaped representation.   To have the same output in Python2, use <code>print</code>.</span>
