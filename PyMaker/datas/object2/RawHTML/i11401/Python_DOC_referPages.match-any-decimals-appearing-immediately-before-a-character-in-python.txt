<div class="post-text" itemprop="text">
<p>I can't seem to find an example of this, but I doubt the regex is that sophisticated.  Is there a simple way of getting the immediately preceding digits of a certain character in Python?
For the character "A" and the string: 
"&amp;#238A" 
It should return 238A</p>
</div>
<div class="post-text" itemprop="text">
<p>As long as you intend to include the trailing character in the resulting match, the regex pattern to do that is very simple. For instance, if you want to capture any series of digits followed by a letter A, the pattern would be <code>\d+A</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If you are on python 3, try this.
Please refer to <a href="https://docs.python.org/3/library/re.html" rel="nofollow">this link</a> for more information.</p>
<pre><code>import re
char = "A" # the character you're searching for.
string = "BA &amp;#238A 123A" # test string.
regex = "[0-9]+%s" %char # capturing digits([0-9]) which appear more than once(+) followed by a desired character "%s"%char
compiled_regex = re.compile(regex) # compile the regex
result = compiled_regex.findall(string)
print (result)
&gt;&gt;['238A', '123A']
</code></pre>
</div>
<span class="comment-copy"><code>A</code> is not a decimal character. Did you mean hexadecimal?</span>
<span class="comment-copy">@StevenDoggart  Edited my question to include the relevant character, A</span>
<span class="comment-copy">The regex pattern for that is exceedingly simple. It would just be \d+A</span>
<span class="comment-copy">Do you want the character itself included in the result? If not you want to use positive lookahead: <code>\d+(?=A)</code>.</span>
<span class="comment-copy">@pzp Do positive lookaheads lead to slow backtracking? Can't remember, I may be thinking more of lookbehinds. You could just put the digits in a group and extract the group like <code>(\d+)A</code>, that should avoid any potential backtracking.</span>
