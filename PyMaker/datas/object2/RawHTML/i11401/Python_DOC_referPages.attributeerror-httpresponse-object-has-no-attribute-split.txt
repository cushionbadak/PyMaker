<div class="post-text" itemprop="text">
<p>I am trying to get some information from google finance but I am getting this error </p>
<blockquote>
<p>AttributeError: 'HTTPResponse' object has no attribute 'split'</p>
</blockquote>
<p>Here is my python code:</p>
<pre><code>import urllib.request
import urllib
from bs4 import BeautifulSoup

symbolsfile = open("Stocklist.txt")

symbolslist = symbolsfile.read()

thesymbolslist = symbolslist.split("\n")

i=0


while i&lt;len (thesymbolslist):
    theurl = "http://www.google.com/finance/getprices?q=" + thesymbolslist[i] + "&amp;i=10&amp;p=25m&amp;f=c"
    thepage = urllib.request.urlopen (theurl)
    print(thesymbolslist[i] + " price is " + thepage.split()[len(thepage.split())-1])
    i= i+1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>The Cause of the Problem</h2>
<p>This is because <code>urllib.request.urlopen (theurl)</code> returns an object representing the connection, not a string. </p>
<hr/>
<h2>The Solution</h2>
<p>To read data from this connection and actually get a string, you need to do</p>
<pre><code>thepage = urllib.request.urlopen(theurl).read()
</code></pre>
<p>and then the rest of your code should follow naturally.</p>
<h2>Addendum to the Solution</h2>
<p>Occasionally, the string itself contains an unrecognised character encoding glyph, in which case Python converts it into a <a href="https://stackoverflow.com/questions/22824539/what-is-a-python-bytestring">bytestring</a>. </p>
<p>The right approach to dealing with that is to find the correct character encoding and decode the bytestring into a regular string using it, as seen in <a href="https://stackoverflow.com/questions/36877016/typeerror-str-does-not-support-the-buffer-interface-in-html2text/36879764#36879764">this question</a>:</p>
<pre><code>thepage = urllib.request.urlopen(theurl)
# read the correct character encoding from `Content-Type` request header
charset_encoding = thepage.info().get_content_charset()
# apply encoding
thepage = thepage.read().decode(charset_encoding)
</code></pre>
<p>It is sometimes safe to make the assumption that the character encoding is  <code>utf-8</code>, in which case</p>
<pre><code>thepage = urllib.request.urlopen(theurl).read().decode('utf-8')
</code></pre>
<p>does work more often than not. It's a statistically good guess if nothing else.</p>
</div>
<div class="post-text" itemprop="text">
<p>Checking the <a href="https://docs.python.org/3/library/urllib.request.html" rel="nofollow">documentation</a> might save you time in the future. It says that the urlopen() method returns an <a href="https://docs.python.org/3/library/http.client.html#http.client.HTTPResponse" rel="nofollow">HTTPResponse</a> object which has a read() method. In Python 3, you need to decode the output from the source encoding, in this case UTF-8. So just write </p>
<pre><code>thepage = urllib.request.urlopen(theurl).read().decode('utf-8')
</code></pre>
</div>
<span class="comment-copy">What are you trying to do here? <code>thepage.split()[len(thepage.split())-1])</code></span>
<span class="comment-copy">i am trying to get the page into a list and then get the last attribute from that list and print it.</span>
<span class="comment-copy">You need to <code>read()</code> from the <code>thepage</code> to get an actual string.</span>
<span class="comment-copy">once i did that it gave me this error:          TypeError: Can't convert 'bytes' object to str implicitly</span>
<span class="comment-copy">It's because the encoding of the string you're receiving is not something Python understands. Give me a minute to provide a fix.</span>
<span class="comment-copy">Your solution is more robust since it does not depend on the source encoding, so OP: better mark this one the right answer :)</span>
<span class="comment-copy">once i did that it gave me this error: TypeError: Can't convert 'bytes' object to str implicitly</span>
<span class="comment-copy">Python 3? Then see <a href="http://stackoverflow.com/questions/16699362/python3-error-typeerror-cant-convert-bytes-object-to-str-implicitly/16699591#16699591" title="python3 error typeerror cant convert bytes object to str implicitly">stackoverflow.com/questions/16699362/â€¦</a> Try <code>thepage = urllib.request.urlopen(theurl).read().decode('utf-8')</code></span>
<span class="comment-copy">that fixed it, thanks</span>
<span class="comment-copy">@le_m That assumes the default encoding is <code>utf-8</code> - which is often true, but is not necessarily the encoding sent over. The correct way to do it is to check the encoding in the headers and apply that.</span>
<span class="comment-copy">@AkshatMahajan You are right, of course, but since OP is just querying google.com we can safely assume UTF-8.</span>
