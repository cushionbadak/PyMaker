<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/449775/how-can-i-split-a-url-string-up-into-separate-parts-in-python">How can I split a url string up into separate parts in Python?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I'm trying to split a url into parts so that I can work with these separately. </p>
<p>For e.g. the url:</p>
<p><code>'https://api.somedomain.co.uk/api/addresses?postcode=XXSDF&amp;houseNo=34'</code></p>
<p>How can I split this into:
1) the source/origin (i.e. protocol + subdomain + domain)
2) path '/api/addresses'
3) Query:  '?postcode=XXSDF&amp;houseNo=34'</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>urlparse</code> library, found in <code>urllib</code> in Python3, is designed for this. Example adapted from the <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer">documentation</a>:</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import urlparse
&gt;&gt;&gt; o = urlparse('https://api.somedomain.co.uk/api/addresses?postcode=XXSDF&amp;houseNo=34')
&gt;&gt;&gt; o   
ParseResult(scheme='https', netloc='api.somedomain.co.uk', path='/api/addresses', params='', query='postcode=XXSDF&amp;houseNo=34', fragment='')
&gt;&gt;&gt; o.scheme
'http'
&gt;&gt;&gt; o.port
None
&gt;&gt;&gt; o.geturl()
'https://api.somedomain.co.uk/api/addresses?postcode=XXSDF&amp;houseNo=34'
</code></pre>
<p>In order to get host, path and query, the API is straighforward:</p>
<pre><code>&gt;&gt;&gt; print(o.hostname, o.path, o.query)
</code></pre>
<p>Returns:</p>
<pre><code>api.somedomain.co.uk /api/addresses postcode=XXSDF&amp;houseNo=34
</code></pre>
<p>In order to get the subdomain itself, <a href="https://stackoverflow.com/questions/6925825/get-subdomain-from-url-using-python">the only way seems to split by <code>.</code></a>.</p>
<hr/>
<p>Note that the <code>urllib.parse.urlsplit</code> should be used instead <code>urlparse</code>, according to the documentation:</p>
<blockquote>
<p>This should generally be used instead of urlparse(<a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlsplit" rel="nofollow noreferrer">https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlsplit</a>) if the more recent URL syntax allowing parameters to be applied to each segment of the path portion of the URL (see RFC 2396) is wanted</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You can just use python's urlparse.</p>
<pre><code>&gt;&gt;&gt; from urlparse import urlparse
&gt;&gt;&gt; o = urlparse('http://www.cwi.nl:80/%7Eguido/Python.html')
&gt;&gt;&gt; o   
ParseResult(scheme='http', netloc='www.cwi.nl:80', path='/%7Eguido/Python.html',
            params='', query='', fragment='')
&gt;&gt;&gt; o.scheme
'http'
&gt;&gt;&gt; o.port
80
&gt;&gt;&gt; o.geturl()
'http://www.cwi.nl:80/%7Eguido/Python.html'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You probably want the stdlib module <code>urlparse</code> on Python 2, or <code>urllib.parse</code> on Python 3. This will split the URL up more finely than you're asking for, but it's not difficult to put the pieces back together again.</p>
</div>
<span class="comment-copy">Thanks - I love how python has a tool for everything.</span>
