<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/15299878/how-to-use-python-decorators-to-check-function-arguments">How to use Python decorators to check function arguments?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/2489669/function-parameter-types-in-python">Function parameter types in Python</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>Currently Python allows you to define functions like</p>
<pre><code>def f(x, A):
</code></pre>
<p>I would like to be able to define functions like</p>
<pre><code>def f(x: int, A: list):
</code></pre>
<p>because I think it would cut down on programmer errors.</p>
<p>How can I do this?</p>
<p>Right now I am resorting to</p>
<pre><code>def f(x, A):
    assert type(x) == int and type(A) == list, "Invalid parameters to function f"
</code></pre>
<p>But I think it might be easier if I could just change the signature of the <code>def</code> function.</p>
</div>
<div class="post-text" itemprop="text">
<p>Modifying def is possible, but not at all the right (simplest) approach. </p>
<p>The easiest way will be to use python 3. It supports the type annotations, though it does not do anything with them by default.</p>
<p><a href="https://stackoverflow.com/a/15299927/3103584">This answer</a> combines python 3's annotations with a decorator and type filtering helper functions. There are plenty of decorator based solutions and recipes for type checking. Do a search for "python annotation type checking" if you want other examples.</p>
<p>Note that the above question includes answers with decorators for python 2 as well, if you cannot use python 3 for some reason.</p>
</div>
<span class="comment-copy">You might want to take a look at <a href="http://stackoverflow.com/questions/11328920/is-python-strongly-typed">this question ("Is Python strongly typed?")</a>, and <a href="http://stackoverflow.com/questions/2489669/function-parameter-types-in-python">this one ("Function parameter types in Python")</a> as well.</span>
<span class="comment-copy">Assertions can be turned off. You shouldn't rely on them for program flow. Also, Python does include functionality for <a href="https://docs.python.org/3/library/typing.html" rel="nofollow noreferrer">type hinting</a>, as you are using, but static typing and function overloading are more Java tools than Python tools.</span>
<span class="comment-copy"><code>def</code> is not a function. It doesn't have a signature, and you can't change how it works any more than you could change <code>return</code> or <code>while</code>.</span>
<span class="comment-copy">Check out type hinting in PyCharm, it can show warnings as you're writing the code.</span>
<span class="comment-copy">@user2357112 You certainly <i>can</i> change the functionality of any keyword via source code preprocessing. However, that'd be like using a nuclear bomb to go grocery shopping. It's just going to be a disaster and dinners never going to happen.</span>
