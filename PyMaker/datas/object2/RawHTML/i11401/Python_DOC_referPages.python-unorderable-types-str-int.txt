<div class="post-text" itemprop="text">
<p>I have this code snippet where it returns the index of the lowest integer in a list </p>
<pre><code>for x in range(0,len(points)):
    minVal = min(range(len(pathValue)), key=pathValue.__getitem__)
    if visited[x] != "T": visited[minVal]= "T"
</code></pre>
<p>points visited and pathValue are all lists and contains the following:</p>
<pre><code>points = ['A', 'B', 'C', 'D', 'E', 'F']
visited = ['F', 'F', 'F', 'F', 'F', 'F']
pathValue = [9, 5, 1, 2, 3, 4]
</code></pre>
<p>However when I compile the program it always points an error to this line</p>
<pre><code> minVal = min(range(len(pathValue)), key=pathValue.__getitem__)
</code></pre>
<p>and says </p>
<pre><code>Unorderable types: str() &lt; int() 
</code></pre>
<p>What is wrong with my code?</p>
</div>
<div class="post-text" itemprop="text">
<p>Not all values in <code>pathValue</code> are integers. You have <em>at least</em> one string object in that list.</p>
<p>If there are only integers in <code>pathValue</code>, your expression works:</p>
<pre><code>&gt;&gt;&gt; pathValue = [9, 5, 1, 2, 3, 4]
&gt;&gt;&gt; min(range(len(pathValue)), key=pathValue.__getitem__)
2
</code></pre>
<p>But add a string, and you get your specific error:</p>
<pre><code>&gt;&gt;&gt; pathValue = [9, 5, 1, 2, 3, 4, 'foo']
&gt;&gt;&gt; min(range(len(pathValue)), key=pathValue.__getitem__)
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: unorderable types: str() &lt; int()
</code></pre>
<p>Make <em>absolutely</em> sure your <code>pathValue</code> list only contains integers.</p>
<p>Note that I'd use the <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow"><code>enumerate()</code> function</a> and a <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow"><code>operator.itemgetter()</code> object</a> here instead of <code>range()</code> and <code>pathValue.__getitem__</code>:</p>
<pre><code>from operator import itemgetter

minVal = min(enumerate(pathValue), key=itemgetter(1))[0]
</code></pre>
<p>This too retrieves the index of the minimum value, provided there are only integers in the input list, of course.</p>
</div>
<span class="comment-copy">it would be better if you copy paste the <code>pathvalue</code> list from a command prompt. even <code>pathValue = ['9', 5, 1, 2, 3, 4 ]</code>, this will show you the error you are getting</span>
<span class="comment-copy">@manojprashantk: it is not the first element in the list; in that case the <code>str()</code> and <code>int()</code> values in the error message would be reversed. But yes, there is a string object in the list.</span>
<span class="comment-copy">yes i just made an example out there and thanks for specifying what happens if the first element is a string :)</span>
