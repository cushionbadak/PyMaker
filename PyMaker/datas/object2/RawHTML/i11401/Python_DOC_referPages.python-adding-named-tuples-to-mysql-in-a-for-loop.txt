<div class="post-text" itemprop="text">
<p>So I have the following namedtuple, containing multiple items:</p>
<pre><code>[item(company='MARINE AND GENERAL MUTUAL LIFE ASSURANCE SOCIETY', google_name='no results', place_id='no results', formatted_address='no results'),
 item(company='KENTSTONE PROPERTIES LIMITED', google_name='no results', place_id='no results', formatted_address='no results'),
 item(company='ASHFORD CATTLE MARKET COMPANY LIMITED(THE)', google_name=u'The Ashford Cattle Market Co Ltd', place_id=u'ChIJRSxF4gbb3kcRCjmXJcSWOrI', formatted_address=u'The New Ashford Market Monument Way, Orbital Park, Ashford TN24 0HB, United Kingdom'),
 item(company='ORIENTAL GAS COMPANY, LIMITED(THE)', google_name=u'Orient Express Hotels', place_id=u'ChIJffRJYVVYwokReF_qwmzMgh0', formatted_address=u'1155 Ave of the Americas, New York, NY 10036, United States'),
 item(company='BRITISH INDIA STEAM NAVIGATION COMPANY LIMITED', google_name=u'British-India Steam-Navigation Co Ltd', place_id=u'ChIJe6yzIVN2AjoRZdGKagFvkvs', formatted_address=u'54/7, Bisha    Lakshmitala Road, Parnashree, Kolkata, West Bengal 700060, India')]
</code></pre>
<p>I would like to add those items to MySQL database, to the table called place_id, this is what I've got so far:</p>
<pre><code>cursor.execute("INSERT INTO place_id (company, google_name, place_id, formatted_address) VALUES (%(company)s, %(google_name)s, %(place_id), %(formatted_address)s" ....
</code></pre>
<p>And I don't know where to go from there.</p>
<p>I would like to add the items via for loop (or executemany, but I am not that familiar with it). I am already connected to the database via MySQLdb module.</p>
<p>Thank you for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming item really is a <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow"><code>namedtuple</code></a> and deducing from the order of arguments that it's declared like</p>
<pre><code>item = namedtuple('item', 'company google_name place_id formatted_address')
</code></pre>
<p>there's no need to use named placeholders in your query, unless you really want to. Just use the normal sequence formatting style that works with tuples:</p>
<pre><code># assuming items is a reference to the list of item instances you gave
# in the example
cursor.executemany("INSERT INTO place_id "
                   "(company, google_name, place_id, formatted_address) "
                   "VALUES (%s, %s, %s, %s)", items)
</code></pre>
<p>To use the named placeholder version you could convert the list of items to a sequence of <code>OrderedDict</code>s (a sequence of mappings) with <a href="https://docs.python.org/3/library/collections.html#collections.somenamedtuple._asdict" rel="nofollow"><code>namedtuple._asdict</code></a>, but there's really no need for this:</p>
<pre><code>cursor.executemany("INSERT INTO place_id "
                   "(company, google_name, place_id, formatted_address) "
                   "VALUES (%(company)s, %(google_name)s, %(place_id)s, %(formatted_address)s",
                   (i._asdict() for i in items))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using 'named' style parameter markers (such as <code>'%(company)s'</code>) in the query requires that you pass a <em>mapping</em> with the necessary keys to <code>cursor.execute()</code>. Since you pass it a tuple, you need to change the markers accordingly (e.g. use the 'format' style):</p>
<pre><code>for i in items:
    cursor.execute("INSERT INTO place_id (company, google_name, place_id, "
                   "formatted_address) VALUES (%s, %s, %s, %s)", i)
</code></pre>
<p>or using <code>cursor.executemany()</code>:</p>
<pre><code>cursor.executemany("INSERT INTO place_id (company, google_name, place_id, "
                   "formatted_address) VALUES (%s, %s, %s, %s)", items)
</code></pre>
</div>
<span class="comment-copy">Is there a reason for insisting on using a for-loop? Why not <code>executemany</code>? See <a href="http://stackoverflow.com/questions/10180335/mysqldb-executemany-using-a-list-as-input" title="mysqldb executemany using a list as input">stackoverflow.com/questions/10180335/â€¦</a> for hints.</span>
<span class="comment-copy">Just checked executemany, I am not familiar with it and a little bit confused with syntax.</span>
<span class="comment-copy">thank you eugene y !</span>
