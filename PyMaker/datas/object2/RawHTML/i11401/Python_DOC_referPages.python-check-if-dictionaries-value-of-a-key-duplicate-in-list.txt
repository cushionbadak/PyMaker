<div class="post-text" itemprop="text">
<p>I have a set of data, and I want to check if the <code>value</code> in my <code>data</code> are duplicates.<br/>
My method is below, and I think it's a bit complicated, so I want to ask is there a better way to do this ? </p>
<pre><code>data =[
        {"name": "ali", 
         "value": "ABC" 
         },
        {"name": "bob", 
         "value": "ABC" 
         },
        {"name": "cathy", 
         "value": "ABC" 
         },
        {"name": "david", 
         "value": "ABCD" 
         },
    ]


check_list = []
duplicate_value = []
for d in data:
    if d["value"] not in check_list:
        check_list.append(d["value"]) 
    else:
        if d["value"] not in duplicate_value:
            duplicate_value.append(d["value"])


print  "You have duplicate value:", duplicate_value 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>from collections import Counter

data =[
        {"name": "ali", 
         "value": "ABC" 
         },
        {"name": "bob", 
         "value": "ABC" 
         },
        {"name": "cathy", 
         "value": "ABC" 
         },
        {"name": "david", 
         "value": "ABCD" 
         },
    ]

arr = [d['value'] for d in data]

duplicate_values = [k for k, v in Counter(arr).items() if v &gt; 1]

print('Duplicate values - ', duplicate_values)
</code></pre>
<p>Output -</p>
<pre><code>Duplicate values -  ['ABC']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do something simple as:</p>
<pre><code>def has_duplicates(your_list):
    values = [item['value'] for item in your_list]

    return len(set(values)) &lt; len(values)

def get_duplicates(your_list):
    values = [item['value'] for item in some_list]

    return [item for item in set(values) if values.count(item) &gt; 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow"><code>collections.Counter</code></a>:</p>
<pre><code>&gt;&gt;&gt; c = collections.Counter(d['value'] for d in data)
&gt;&gt;&gt; c
Counter({'ABC': 3, 'ABCD': 1})
&gt;&gt;&gt; duplicates = [k for k, n in c.most_common() if n &gt; 1]
&gt;&gt;&gt; duplicates
['ABC']
</code></pre>
</div>
<span class="comment-copy">Why don't you use a <code>set</code> of <code>(key, value)</code> entries?</span>
<span class="comment-copy">He seems only interested in duplicates in values. <code>set([('ali', 'ABC'), ('bob', 'ABC')])</code> doesn't really help much here</span>
