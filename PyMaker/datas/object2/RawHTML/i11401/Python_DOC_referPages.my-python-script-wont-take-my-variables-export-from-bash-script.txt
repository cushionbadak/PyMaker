<div class="post-text" itemprop="text">
<p>I'm working on a school project and I don't have a lot of time to finish it. I'm unable to find the solution. I read tons of references, but I'm not a developer.
Half of the code below is not from me, which explains why I can't find a solution.</p>
<p>My problem: </p>
<p>I have to collect rejects from Iptables in bash (with the log) and make a very simple real-time graph of that in Python.</p>
<p>I've already done that: </p>
<p><strong>In bash</strong></p>
<pre><code>#!/bin/sh
for i in {1..10}
do
  p22=`cat  /var/log/messages | grep 'MONFIREWALL' |grep DPT="22"  | wc -l`
  p80=`cat  /var/log/messages | grep 'MONFIREWALL' |grep DPT="8080"| wc -l`
  p12=`cat  /var/log/messages | grep 'MONFIREWALL' |grep DPT="12" | wc -l`
  p123=`cat  /var/log/messages | grep 'MONFIREWALL' |grep DPT="123" | wc -l`
  p1234=`cat  /var/log/messages | grep 'MONFIREWALL' |grep DPT="1234" | wc -l`
  echo "Le port n°22   a subit " $p22 "attaque(s)" 
  echo "Le port n°80   a subit " $p80 "attaque(s)"
  echo "Le port n°12   a subit " $p12 "attaque(s)"
  echo "Le port n°123  a subit " $p123 "attaque(s)"
  echo "Le port n°1234 a subit " $p1234 "attaque(s)"
  echo "------------ REFRESH -----------"
  sleep 5
done
</code></pre>
<p><strong>And in Python:</strong> </p>
<pre><code>import matplotlib.pyplot as plt
import matplotlib.animation as animation
import time
import os
fig = plt.figure()
ax1 = fig.add_subplot(1,1,1)
def animate(i):
    pullData = open("sampleText.txt","r").read()
    dataArray = pullData.split('\n')
    xar = []
    yar = []
    for eachLine in dataArray:
        if len(eachLine)&gt;1:
            x,y = eachLine.split(',')
            xar.append(int(x))
            yar.append(int(y))
    ax1.clear()
    ax1.plot(xar,yar)
ani = animation.FuncAnimation(fig, animate, interval=1000)
plt.show()
</code></pre>
<p>I don't get how i can put my bash variable in the PullData instead in that .txt file.</p>
<p>I get my variable like that: </p>
<pre><code>import os
x22=os.environ['p22']
</code></pre>
<p>If anyone can help me, I will be so pleased.
Excuse my English; I'm French.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your <em>bash</em> script must export the variables to get them into the main environment space.  From there, your Python's <strong>os.environ</strong> call will be able to find the value.  In your last code portion, please try to print <strong>x22</strong> to check that it works.</p>
</div>
<div class="post-text" itemprop="text">
<p>Looking at what you are trying to achieve, i.e a dynamically updated graph, I suggest that you can't do it with environment variables. You can set and export them from the parent shell, however, the environments of parent and child are independent so any change made in the parent is not visible in the child.</p>
<p>You could implement the bash script functionality in Python, but I assume that you must use a bash script. One way to do it would be to have the bash script write to the "pull data" file, which the Python script then reads and graphs, as it currently does. There will be problems with this method because it's possible for the Python script to read the file while it's being updated and therefore receive incomplete or mixed values. There are ways that you can synchronise access, however, it's messy.</p>
<p>A better way would be to <em>call</em> the bash script from within Python. The bash script would write the data to it's standard out, which Python can read and make the graph without worrying about the bash script overwriting it mid-processing. You can use <a href="https://docs.python.org/3/library/subprocess.html#subprocess.check_output" rel="nofollow"><code>subprocess.check_ouput()</code></a> (or <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow"><code>subprocess.run()</code></a> if using Python &gt;= 3.5) for this:</p>
<p><strong>bash script</strong></p>
<pre><code>#!/bin/sh

PORTS="22 8080 12 123 1234"    
for port in $PORTS
do
    count=$(grep "MONFIREWALL.*DPT=$port" /var/log/messages | wc -l)
    echo "$port,$count"
done
</code></pre>
<p>And then in the Python script call the script (assume it's named <code>count_rejects,sh</code>) by changing the first few lines of <code>animate()</code> like this:</p>
<pre><code>from subprocess import check_output

COUNT_REJECTS = '/path/to/count_rejects.sh'

def animate(i):
    data = check_output([COUNT_REJECTS])
    dataArray = data.split('\n')
    ...
</code></pre>
<p>There are some other improvements that could be made to the Python code, e.g. the graph data should be sorted before plotting, but this should be enough to get you going.</p>
<p>And you might want to use a bar chart rather than a graph.</p>
</div>
<span class="comment-copy">I'm not sure what you are asking, but your bash script is not exporting the variables. You should use <code>export p22=</code>whatever` for that. Without the <code>export</code> keyword it is just a shell variable and not exported to the children processes.</span>
<span class="comment-copy">Yes ofcourse, but i don't know how to put them in the graph, i only can export them in the script to print them separatly</span>
<span class="comment-copy">Yes, that's work i add print x22 after the plt.show()</span>
<span class="comment-copy">Thank you so much for your help. I having some trouble with the bash script. count=$(grep MONFIREWALL.*DPT=\"$port\" /tmp/messages | wc -l) doesn't work.  the output tell me that i havn't any attack on any port. if i replace it by:   cat  /var/log/messages | grep 'MONFIREWALL' |grep DPT="1234" | wc -l`  The number of attacks are displayed.  So i think that the variable $port doesn't work fine but i am unable to fix it.</span>
<span class="comment-copy">I assuming some others issue with my python script. The output of the count_rejects file doesn't match with the fact that i would like to display the number of the port on the X axis but instead of that i have a scale from 0 to some thousands (that what you were talking about, that i might use a bar char ..)</span>
<span class="comment-copy">@Dizzy:re your first comment: I tested with <code>/tmp/messages', but you should just change it to </code>/var/log/messages`.</span>
<span class="comment-copy">@Dizzy: re your second comment: That's because in your example bash script you are mapping attacks on port 8080 to port 80, whereas my script uses the port as is, i.e. 8080 is 8080 on the x-axis. Port numbers are 16bit integers, so 65535 would be the maximum, so your x-axis is going to be quite wide.</span>
<span class="comment-copy">@Dizzy: Also, I suggested a bar chart because there is no relationship between adjacent ports - they are independent of each other - so plotting the transition from port to port conveys little information. Also you can have a bar for each port without including the intervening ones that you're not interested in.</span>
