<div class="post-text" itemprop="text">
<p>Right now I am having a list </p>
<pre><code>&gt;&gt;&gt; deints
[10, 10, 10, 50]
</code></pre>
<p>I want to print it as <code>10.10.10.50</code>. I made it as </p>
<h1>Method 1</h1>
<pre><code>&gt;&gt;&gt; print(str(deints[0])+'.'+str(deints[1])+'.'+str(deints[2])+'.'+str(deints[3]))
10.10.10.50
</code></pre>
<p>Are there any other ways we can acheivie this ?</p>
<p>Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it with:</p>
<pre><code>print('.'.join(str(x) for x in deints))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow"><code>join</code></a> method on strings and have to convert the data in the list to strings first.</p>
<pre><code>&gt;&gt;&gt; '.'.join(map(str, deints))
'10.10.10.50'
</code></pre>
<p><code>join</code> takes the string as a delimiter and concatenates the content of the list with this delimiter between each element.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is <em>very</em> simple. Take a look at <a href="https://docs.python.org/2/library/stdtypes.html#str.join" rel="nofollow"><code>str.join</code></a></p>
<pre><code>print '.'.join([str(a) for a in deints])
</code></pre>
<hr/>
<p>Citation from the docs:</p>
<blockquote>
<p><strong>str.join(iterable)</strong></p>
<p>Return a string which is the concatenation of the strings in the iterable <em>iterable</em>. The separator between elements is the string providing this method.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Obviously <code>str.join()</code> is the shortest way </p>
<pre><code>'.'.join(map(str, deints))
</code></pre>
<p>or if you dislike <code>map()</code> use a list comprehension</p>
<pre><code>'.'.join([str(x) for x in deints])
</code></pre>
<p>you could also do it manually, using <code>*</code> to convert the <code>deints</code> list into a series of function arguments</p>
<pre><code>'{}.{}.{}.{}'.format(*deints)
</code></pre>
<p>or use <code>functools.reduce</code> and a <code>lambda</code> function</p>
<pre><code>reduce(lambda y, z: '{}.{}'.format(y, z), x)
</code></pre>
<p>All return</p>
<pre><code>'10.10.10.50'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just a non-<code>join</code> solution.</p>
<pre><code>&gt;&gt;&gt; print(*deints, sep='.')
10.10.10.50
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Convert them into strings, then join them. Try using:</p>
<pre><code>".".join([str(x) for x in x])
</code></pre>
</div>
<span class="comment-copy"><code>print('.'.join(map(str, deints)))</code></span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/2906092/converting-a-list-to-a-string">Converting a list to a string</a></span>
<span class="comment-copy">Thank you.  Even though it is for python 2 I understood what I need to add to make it run in python 3</span>
<span class="comment-copy">@Neapolitan <a href="http://stackoverflow.com/a/9061024/1672429">You're wrong.</a></span>
<span class="comment-copy">Care to explain the downvote?</span>
<span class="comment-copy">I'm not the down voter, but the problem here is that you need to <code>'.'.join</code></span>
<span class="comment-copy">Ah, right. But the abstraction should have been possible. It's funny, <a href="http://stackoverflow.com/questions/12053236/python-equivalent-for-phps-implode/12053276#12053276">first time I answered this kind of question</a> I got positive reputation ...</span>
<span class="comment-copy">I need an integer not again in string. I have found what I need. Thank you</span>
<span class="comment-copy">@Raja: The list is unaltered. <code>map</code> applies the call to <code>str</code> to the list and gives back the changed result (an <i>iterable</i>  with strings) which is then used by <code>join</code>.</span>
<span class="comment-copy">Can you explain please</span>
<span class="comment-copy">@Raja, this just concatenates all the elements inserting a period as a separator. You also need to convert each number to a string first.</span>
