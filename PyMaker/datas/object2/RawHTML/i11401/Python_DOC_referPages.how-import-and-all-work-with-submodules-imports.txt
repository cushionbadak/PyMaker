<div class="post-text" itemprop="text">
<p>The tutorial (4th paragraph, <a href="https://docs.python.org/3/tutorial/modules.html#importing-from-a-package" rel="nofollow">https://docs.python.org/3/tutorial/modules.html#importing-from-a-package</a>) mentions :</p>
<blockquote>
<p>It also includes any submodules of the package that were explicitly
  loaded by previous import statements. Consider this code:</p>
</blockquote>
<pre><code>import sound.effects.echo
import sound.effects.surround
from sound.effects import *
</code></pre>
<blockquote>
<p>In this example, the echo and surround modules are imported in the
  current namespace because they are defined in the sound.effects
  package when the from...import statement is executed. (This also works
  when <code>__all__</code> is defined.)</p>
</blockquote>
<p>Doubts:</p>
<ol>
<li>In the first statement, which <code>previous import statements</code> is it referring to?</li>
<li>I cannot understand the statements and the example. To <code>from sound.effects import *</code> should not import anything unless defined in <code>__all__</code> of <code>__init__.py</code> in the package.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p><code>previous import statements</code> refers to:</p>
<pre><code>import sound.effects.echo
import sound.effects.surround
</code></pre></li>
<li><p>According to CPython 3.6, <code>from sound.effects import *</code> only import submodules loaded in <code>__init__.py</code> (by defining <code>__all__</code>). That means you cannot use symbols in <code>echo</code> and <code>surround</code> when <code>__all__</code> isn't defined.</p></li>
</ol>
<p>Otherwise,</p>
<blockquote>
<p>It also includes any submodules of the package that were explicitly loaded by previous import statements.</p>
</blockquote>
<p>only works when <code>__all__</code> defined in <code>sound.effects</code>'s <code>__init__.py</code> like <code>__all__ = ["echo", "surround", "reverse"]</code>.</p>
</div>
<span class="comment-copy">"If <code>'__all__ '</code>is not defined, the statement from <code>sound.effects import *</code> does not import all submodules from the package sound.effects into the current namespace; it only ensures that the package <code>sound.effects</code> has been imported (possibly running any initialization code in<code>__init__.py</code>) and then imports whatever names are defined in the package." It says it in your link</span>
<span class="comment-copy">@Natecat can you  please explain the second statement mentioned. What does <code>because they are defined in the sound.effects package</code> mean?</span>
