<div class="post-text" itemprop="text">
<p>I'm new to python and working on a way to open a file named acne.txt which is inside my define folder in the same python34 folder as my code. </p>
<p>The code I've written for the same is:</p>
<pre><code>NN_is = [word for word,pos in tagged_sent if pos == 'NN']
print(NN_is[0])
searchfile = open(r"define/NN_is[0].txt", "r")
file_contents = searchfile.readlines()
searchfile.close()
</code></pre>
<p>The variable NN_is[0] when printed yields acne. Can someone help me in solving this problem.</p>
<p>Thank you in advance. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow"><code>os.path.join()</code></a> to concatenate the directory and file name, and use <a href="https://docs.python.org/3/library/stdtypes.html?highlight=str.format#str.format" rel="nofollow"><code>str.format()</code></a> to construct the string for the file name:</p>
<pre><code>import os.path

path = os.path.join('define', '{}.txt'.format(NN_is[0]))
with open(path) as searchfile:
    file_contents = searchfile.readlines()
    ...
</code></pre>
<p>I also recommend that you open the file within a <code>with</code> statement. This ensures that the file will always be closed, even if there is an error. It's also handy because you don't need to explicitly close the file - it will be closed when the <code>with</code> statement goes out of scope.</p>
</div>
<span class="comment-copy">Maybe to add a bit which was wrong with the code: <code>""define/NN_is[0].txt"</code> is a string with the <b>content</b> <code>NN_is[0]</code> whereas <code>NN_is</code> (without quotationmarks) is the variable <code>NN_is</code>. You can combine a string and the content of the variable: <code>"define/" + NN_is[0]</code> is a string whith <code>define/</code> and the content of the variable concatenated. <code>os.path.join</code> and <code>str.format</code> only makes stuff easier (os.path.join will automatically use the right "/" or "//" or whatever your OS uses) but is not "needed" strictly speaking.</span>
<span class="comment-copy">Thank you @mhawke</span>
<span class="comment-copy">Suppose there is no file with the name in the variable NN_is[0], and I wish to print that "No such file exists". What should I add to do the above task?</span>
<span class="comment-copy">@NamanArora: well, what happens when you try to open a non-existent file? An exception is raised: <code>FileNotFoundError</code> in Python 3, or <code>IOError</code> in Python 2. So you can use a <code>try/except</code> statement to catch and handle the exception.</span>
<span class="comment-copy">great. thanks @mhawke</span>
