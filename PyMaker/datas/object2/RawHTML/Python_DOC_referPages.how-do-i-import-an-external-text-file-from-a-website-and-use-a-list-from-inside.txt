<div class="post-text" itemprop="text">
<p>I'm having trouble trying to make this work</p>
<pre><code>import requests
import random
response = requests.get("https://cdn.discordapp.com/attachments/480168592164257792/557872162661335040/aaaaa.txt")
data = response.text
for line in data:
    print(line)
</code></pre>
<p>I am trying to pull a txt file from the internet, and be able to use the list inside of the text file. </p>
<p>Right now all it does is assume each letter is a different string(?)</p>
</div>
<div class="post-text" itemprop="text">
<p>The attribute <code>response.text</code> is a string, so iterating over it will give you individual chars. You can split the string by spaces (or maybe be newlines) to get what you need (I also added a few print statements to show the steps):</p>
<pre><code>import requests
response = requests.get(
    "https://cdn.discordapp.com/attachments/480168592164257792/557872162661335040/aaaaa.txt")
print('response.text type:', type(response.text))
print('response.text len:', len(response.text))
print(response.text)

print()
print('splitting by spaces:')
for i, s in enumerate(response.text.split()):
    print(i, s)

print()
print('splitting by newlines:')
for i, line in enumerate(response.text.split('\n')):
    print(i, line)
</code></pre>
<p>The code gives this output:</p>
<pre><code>response.text type: &lt;class 'str'&gt;
response.text len: 21
a = ["please","work"]

splitting by spaces:
0 a
1 =
2 ["please","work"]

splitting by newlines:
0 a = ["please","work"]
</code></pre>
<hr/>
<p>@bruno suggested in a comment to use <a href="https://docs.python.org/3.7/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer"><code>str.splitlines()</code></a>; this will work even if the response is bytes, since there also exists the method <a href="https://docs.python.org/3.7/library/stdtypes.html#bytes.splitlines" rel="nofollow noreferrer"><code>bytes.splitlines()</code></a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>response.text seems to be characters, if you loop over them you get each string. (Read about how Python handles strings).
In this case Python doesn't know what a "line" is. So split the data with newlines and try again:</p>
<pre><code>import requests
import random
  response = requests.get("https://cdn.discordapp.com/attachments/480168592164257792/557872162661335040/aaaaa.txt")
data = response.text
for line in data.split("\n"):
  print(line)
</code></pre>
</div>
<span class="comment-copy">You want data.splitlines() instead of data.split("\n") (can make a difference if response.text is a byte string and uses another newline marker).</span>
<span class="comment-copy">@brunodesthuilliers I added that observation to my answer</span>
<span class="comment-copy">You want <code>data.splitlines()</code>  instead of <code>data.split("\n")</code> (can make a difference if <code>response.text</code> is a byte string and uses another newline marker).</span>
