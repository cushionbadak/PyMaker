<div class="post-text" itemprop="text">
<p>I've been trying to fit some data and predict them.I'm using SVC function in sklearn to train them.My problem is that my data are so complicated and I don't know how to classify them.I'm Uploading a 3d figure here .The dataset includes about 800 rows with 3 columns.I used gamma=100 and C=10.0 and after splitting the data set and test them i got accuracies between 61.0 and 64.0 percent.but i think i can do better than these.i set kernel 'rbf' and after some tests i understood that 'rbf' is good choice.but after reading the documentation of svm <a href="https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html" rel="nofollow noreferrer">here</a> and the kernel functions <a href="https://data-flair.training/blogs/svm-kernel-functions/" rel="nofollow noreferrer">here</a> i got confused.here are my questions:1.Which kernel should i use(based on my dataset which is uploaded here)?2.what other parameters should i change for classification task?
help me to get good accuracy
here is my dataset:</p>
<pre><code>from sklearn import svm
from sklearn.model_selection import train_test_split
model=svm.SVC(C=1.0,gamma=100,kernel='rbf')
X_train, X_test, y_train, y_test = train_test_split(X, labels)
model.fit(X_train,y_train)
print(model.predict(X_test))
print('\n\n\n',y_test,'\n\n\n',

( np.array(y_test)==model.predict(X_test)).sum()/(np.array(y_test).shape))
</code></pre>
<p><a href="https://i.stack.imgur.com/1Lc6T.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/1Lc6T.jpg"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Just note: You actually did not provide any dataset, just the source code.</p>
<p>Using different kernel seems like a good idea. Only from that image it'S really hard to say which kernel will perform better than the others, usually the choice of kernel requires some intuition or domain knowledge, so it's hard to say that offhand.</p>
<p>Since there are only 4 kernels in scikit-learn, I think you should just try all of them and compare them, maybe using crossvalidation, to see which performs the best.
Some of the kernels are parametrized, and there you may try multiple kernels, up to degree 10. Using bigger degree than 10 for polynomial kernel might not help anything, but that's just my guess.</p>
<p>You also should try different valus for the C parameter. In most machine learning algorithms, the constants weighting individual losses in multi-task training (which is the case also here), have "multiplicative" impact (for lack of better words), so I advice to use to use following values for C: <code>[1e-3, 1e-2, 1e-1, 1, 10, 100]</code></p>
</div>
<span class="comment-copy">i uploaded them here:<a href="https://github.com/mahyarsadeghi/The-dataset-and-one-3d-animation-of-dataset" rel="nofollow noreferrer">github.com/mahyarsadeghi/…</a></span>
<span class="comment-copy">Do you want to use SVM only is any other ML algorithm is okay for you?</span>
<span class="comment-copy">I think my dataset in so complicated.That is why other algorithms won't make much diffrence</span>
<span class="comment-copy">I think your dataset is simple. I sorted your dataset based on the first index, I think your features are correlated. Maybe I can answer it with another algorithm.</span>
<span class="comment-copy">thanks for your answers.i uploaded my dataset with its labels in a text file here.I also created an html animation here make visualization better</span>
<span class="comment-copy"><a href="https://github.com/mahyarsadeghi/The-dataset-and-one-3d-animation-of-dataset" rel="nofollow noreferrer">github.com/mahyarsadeghi/…</a></span>
