<div class="post-text" itemprop="text">
<pre><code>class UnorderedList:
def __init__(self):
    self.head = None

def __str__(self):
    item = self.head
    items = list()
    while item:
        items.append(str(item.get_data()))
        item = item.get_next()    
    return '[' + ' '.join(items) + ']' 

def add(self, item):
    new_node = Node(item)
    new_node.set_next(self.head)
    self.head = new_node

def get(self, index):
    item = self.head
    length = item.size()
    string1 = " "
    for index in range[0, length -1, -1]:
        string1 += index
</code></pre>
<p>And the test is: Will give me 7</p>
<p><code>my_list = UnorderedList()
for x in [3,5,4,6,7,8]:
    my_list.add(x)
    print(my_list.get(1))</code></p>
<p>I need to write my def get(self, index) function so it returns the value of the index starting from the end.</p>
<p>How would I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could try this:</p>
<pre><code>for index in range[0, length -1, -1]:
    string1 += (length - 1) - index
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Suppose your class Node:</p>
<pre><code>class Node:
    def __init__(self,initdata):
        self.data = initdata
        self.next = None

    def get_data(self):
        return self.data

    def get_next(self):
        return self.next

    def set_data(self,newdata):
        self.data = newdata

    def set_next(self,newnext):
        self.next = newnext

    def __str__(self):
        return str(self.data)
</code></pre>
<p>Change your class UnorderedList (this is linked list):</p>
<p>1, if you want to get the size of the linked list, add function <code>size</code></p>
<p>2, your <code>range</code> function is not correct, pls refer to <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer">official doc</a>, should be like range(length -1, 0, -1)</p>
<p>3, for linked list, the feature is to get the element not by the index, you can search and get element until you find the specific element, see below function <code>get</code></p>
<pre><code>class UnorderedList:
    def __init__(self):
        self.head = None

    def isEmpty(self):
        return self.head == None

    def __str__(self):
        item = self.head
        items = list()
        while item:
            items.append(str(item.get_data()))
            item = item.get_next()    
        return '[' + ' '.join(items) + ']'


    def add(self,item):
        new_node = Node(item)
        new_node.set_next(self.head)
        self.head = new_node

    def size(self):
        current = self.head
        count = 0
        while current != None:
            count = count + 1
            current = current.get_next()
        return count

    def get(self,item):
        current = self.head
        found = False
        string1=""       
        while current != None and not found:
            string1 += str(current)
            if current.get_data() == item:   
                found = True
            else:
                current = current.get_next()

        return string1
</code></pre>
<p>Test:</p>
<pre><code>my_list = UnorderedList()
for x in [3,5,4,6,7,8]:
    my_list.add(x)
print my_list.get(4)
</code></pre>
<p>It will add all element to be a linked list <code>my_list</code>, then you can get all element till 4 is found, the output will be:</p>
<pre><code>8764
</code></pre>
</div>
<span class="comment-copy">I'm not sure what to do because I get an error: 'Node' object has no attribute 'size' And I also can't use len()  Do I have to add something somewhere?</span>
<span class="comment-copy">You can maybe try to turn the my_list into a nodelist. Then you could use my_list.length</span>
