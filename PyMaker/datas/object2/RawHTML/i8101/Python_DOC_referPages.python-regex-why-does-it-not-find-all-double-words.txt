<div class="post-text" itemprop="text">
<p>I need to match double words but my regex is not working correctly.</p>
<pre><code>L = "let's s?,play%3with,1symbols88,/symbols"
pattern = r'(\b\S+\b)[\d\s\.,-?\)\(!\/]+\b\1\b'
r = re.compile(pattern, re.IGNORECASE)
print(re.findall(r, L))

# Outputs: ['s']
# Expected: ['s','symbols']
</code></pre>
<p><a href="https://regex101.com/r/frz8kQ/3" rel="nofollow noreferrer">https://regex101.com/r/frz8kQ/3</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a more basic regex with a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>:</p>
<pre><code>import re
from collections import Counter
text = "let's s?,play%3with,1symbols88,/symbols"

word_pattern = re.compile('[a-z]+', re.I)
word_counter = Counter(re.findall(word_pattern, text))
print([word for word, counter in word_counter.items() if counter &gt; 1])
# ['symbols', 's']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Another one-liner using <code>re.split()</code> function and <code>Counter</code> subclass:</p>
<pre><code>import collections, re

L = "let's s?,play%3with,1symbols88,/symbols"
print([i for i,c in collections.Counter(re.split(r'[\d\W]+', L)).items() if c &gt; 1])
</code></pre>
<p>The output:</p>
<pre><code>['s', 'symbols']
</code></pre>
</div>
<span class="comment-copy">Digits are word characters, thus there is no boundary between <code>symbols</code> and <code>88</code></span>
<span class="comment-copy">What is a "double word"?  Why would you expect your solution to work?</span>
<span class="comment-copy">@SebastianProske Yes that's it ^^ I totally forgot about how the word boundries '\b' are defined</span>
<span class="comment-copy">So, remove them and use <a href="https://regex101.com/r/frz8kQ/5" rel="nofollow noreferrer"><code>r'(\S+)[\d\s.,?)(!/-]+\b\1\b'</code></a>. And put the <code>-</code> at the end of the character class as <code>[,-?]</code> forms a range.</span>
<span class="comment-copy">@WiktorStribiżew Yeah was able to figure it out, after Sebastian remark... Thanks a lot though</span>
<span class="comment-copy">Way more elegant then what I had in mind, nice solution</span>
<span class="comment-copy">One remark: it will extract words that are repeated anywhere inside the string, not those words that are separated with a specific set of characters. See <a href="https://ideone.com/i5d3T1" rel="nofollow noreferrer">this Python demo</a>, <code>s</code> is still extracted though the <a href="https://regex101.com/r/frz8kQ/6" rel="nofollow noreferrer">original regex does not match it</a>.</span>
<span class="comment-copy">@WiktorStribiżew: I don't know if the original regex was an attempt or the description of the desired behaviour.</span>
