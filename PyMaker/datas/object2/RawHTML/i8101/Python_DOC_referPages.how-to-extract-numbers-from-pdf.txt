<div class="post-text" itemprop="text">
<p>(Python 3.4.3)</p>
<p>Hello, I'm very new to Python and I want to extract numbers from a PDF file. For more details, I wanted to create a histogram depicting the scores of those approved on a university. Because of that, all numbers below 500 and above 900 shouldn't be considered, as no one gets approved with these given scores.</p>
</div>
<div class="post-text" itemprop="text">
<p>You first need a PDF parser since Python by default is not capable of reading it. A SO answer posted here <a href="https://stackoverflow.com/questions/25665/python-module-for-converting-pdf-to-text">Python module for converting PDF to text</a> suggested to use PDFMINER for it - <a href="http://www.unixuser.org/~euske/python/pdfminer/index.html" rel="nofollow noreferrer">http://www.unixuser.org/~euske/python/pdfminer/index.html</a></p>
<p>However youve not provided any examples of how the numbers are represented. You need to make some kind of a custom line parser using regex/patterns to define rules how to extract these numbers. The difficulty mainly depends if the PDF contains only raw statistical data, if  not, you also need to be careful not to take in all numbers, that is the ones that actually do not refer to any statistical data but are just in a sentence.</p>
<p>You can learn more about regular expressions in python from here <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">https://docs.python.org/3/library/re.html</a></p>
<p>If regex is new to you, you can learn and experiment with it here
<a href="http://regexr.com/" rel="nofollow noreferrer">http://regexr.com/</a> .</p>
</div>
<span class="comment-copy">Ok, thanks. The numbers are floats like 731.9, 655.4, 701.8, etc. They range from 600 to 900. There is really anything more about them that should be noted? I've said that in my question because there isn't just data in the pdf.</span>
<span class="comment-copy">What you can do is paste the contents of the PDF into <a href="http://regexr.com/" rel="nofollow noreferrer">regexr.com</a> and then start building your regex from there, try to experiment with it for example change [A-Z] to [600-900] and see what happens. The matching pattern will be highlighted. This pattern wont do exactly what you want but you need to solve the right pattern yourself. Im just pointing you to the right direction. Finally if you got everything you wanted extracted, you can put the expression into python. Then you can start processing the data. Making regex expressions can be difficult at the start, but dont give up :)</span>
<span class="comment-copy">I used regex and it worked quite well; luckily I got the numbers I wanted without much trouble. Then I created <a href="https://i.imgur.com/tY7BN1e.png" rel="nofollow noreferrer">a histogram</a> with the output.</span>
