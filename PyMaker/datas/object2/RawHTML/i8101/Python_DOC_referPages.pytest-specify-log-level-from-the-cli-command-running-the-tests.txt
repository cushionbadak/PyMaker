<div class="post-text" itemprop="text">
<p>my team and I are using Pytest + Jenkins to automate our product testing. we have been using the standard Logging lib of python to get proper log messages during testing, before and after each test etc. we have multiple layers of logging, we log out ERROR, WARNING, INFO and DEBUG. the default value for our logger is INFO. we create the logger object in the primary setup of the tests, and pass it down to each object created, so all our logs go to the same logger.</p>
<p>so far when we are developing a new feature or test, we are working in DEBUG mode locally, and change it back to INFO when submitting new code to our SVN, but i am trying to add option to change logging level using the CLI, but i haven't found anything easy to implement. I've considered using Fixtures, but from what i understand those are only for the tests themselves, and not for the setup/tear-down phases, and the log is created regard less of the tests.
any hack or idea on how to add a Pytest option to the CLI command to support changing logging level?</p>
</div>
<div class="post-text" itemprop="text">
<p>Combining <a href="https://docs.pytest.org/en/latest/example/simple.html#pass-different-values-to-a-test-function-depending-on-command-line-options" rel="nofollow noreferrer">pytest commandline options</a> and the <a href="https://docs.python.org/3/howto/logging.html#logging-to-a-file" rel="nofollow noreferrer">python loglevel from commandline example</a> you can do the following: </p>
<p>Add the following to <code>conftest.py</code>:</p>
<pre><code>import pytest
import logging


def pytest_addoption(parser):
    parser.addoption(
        "--log", action="store", default="WARNING", help="set logging level"
    )


@pytest.fixture
def logger():
    loglevel = pytest.config.getoption("--log")
    logger = logging.getLogger(__name__)

    numeric_level = getattr(
        logging,
        loglevel.upper(),
        None
    )
    if not isinstance(numeric_level, int):
        raise ValueError('Invalid log level: %s' % loglevel)

    logger.setLevel(numeric_level)
    return logger
</code></pre>
<p>and then request the <code>logger</code> fixture in your tests</p>
<pre><code>def test_bla(logger):
    assert True
    logger.info("True is True")
</code></pre>
<p>Then run pytest like</p>
<pre><code>py.test --log INFO
</code></pre>
<p>to set the log level to <code>INFO</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is now built into pytest. Just add '--log-level=' to the command line when running your test. For example:</p>
<pre><code>pytest --log-level=INFO
</code></pre>
<p>Documentation updates can be found here: <a href="https://docs.pytest.org/en/latest/logging.html" rel="nofollow noreferrer">https://docs.pytest.org/en/latest/logging.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Try <code>--log-cli-level=INFO</code></p>
<p>like:</p>
<pre><code>pytest -vv -s --log-cli-level=INFO --log-cli-format="%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)" --log-cli-date-format="%Y-%m-%d %H:%M:%S" ./test_file.py
</code></pre>
</div>
<span class="comment-copy">Does this answer your question?</span>
<span class="comment-copy">not exactly, but your example did give me the right idea. i'm creating the logger object at the setup_class of the suite, so i didn't use fixtures, i just used the example you gave me of how to use the pytest_addoption method, to add logging level to the pytest CLI command. i didn't realize it was that simple, and got lost in fixtures and hooks when reading in the pytest doc.</span>
<span class="comment-copy">This does not provide an answer to the question. Once you have sufficient <a href="https://stackoverflow.com/help/whats-reputation">reputation</a> you will be able to <a href="https://stackoverflow.com/help/privileges/comment">comment on any post</a>; instead, <a href="https://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead">provide answers that don't require clarification from the asker</a>. - <a href="/review/low-quality-posts/22625950">From Review</a></span>
