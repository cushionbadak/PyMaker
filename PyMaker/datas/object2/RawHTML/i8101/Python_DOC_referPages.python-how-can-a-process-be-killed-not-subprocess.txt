<div class="post-text" itemprop="text">
<p>Say I have code something like:</p>
<pre><code>from multiprocessing import Process

def pro_a():       
    #execute some code that runs a radio program

def pro_b():
    #execute some code that keeps a GUI running

.
.
. #some code

if __name__ == '__main__':
    Process(target=pro_a).start()
    Process(target=pro_b).start()
</code></pre>
<p>How can I end these processes after they have started? I've tried .end(), .quit(), .terminate() and each time, the command window says 'Process' object has no attribute '...' (Linux)</p>
<p>In my specific code, I'm running GNU radio at a certain center frequency, then I want my GUI to be able to have a button that when pushed, updates the center frequency, then closes the processes and re-runs them so that the new center frequency is used. </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>Comment</strong>: I need to terminate it ... from another process  </p>
</blockquote>
<p>You can do it using <code>os.kill(...</code>.  </p>
<blockquote>
<p><strong>os.kill(pid, sig)</strong><br/>
  Send signal sig to the process pid. Constants for the specific signals available on the host platform are defined in the signal module.  </p>
</blockquote>
<p>For instance:</p>
<pre><code>os.kill(p.pid, signal.SIGTERM)
</code></pre>
<blockquote>
<p><strong>Note</strong>: Watch out the warnings about <code>kill</code> a <code>process</code> in the Documentation.<br/>
  Python » 3.6.1 Documentation <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.terminate" rel="nofollow noreferrer">multiprocessing.Process.terminate</a></p>
</blockquote>
<hr/>
<p>If you use it this way, you get the return value from  <code>.start()</code> an  that's <code>None</code>:  </p>
<pre><code>if __name__ == '__main__':
    p =Process(target=pro_a).start()
</code></pre>
<p>You have to do it for instance:  </p>
<pre><code>if __name__ == '__main__':
    p= Process(target=pro_a)
    p.start()
    time.sleep(5)
    p.terminate()
</code></pre>
</div>
<span class="comment-copy"><code>.terminate()</code> should work, see <a href="https://docs.python.org/2/library/multiprocessing.html#multiprocessing.Process.terminate" rel="nofollow noreferrer">docs.python.org/2/library/…</a>. Show your code that tries to terminate the process.</span>
<span class="comment-copy">I was trying to terminate in a function outside of main, and it didn't like it for some reason. When I tried to terminate in main, it worked. I'm trying to get my callBack function to terminate another process. If I could get my function to return something to main it would work I think, but i'm having trouble with that too.</span>
<span class="comment-copy">Maybe the problem was variable scope, because the variable wasn't in scope outside <code>main</code>.</span>
<span class="comment-copy">I think I figured it out somewhat. I need to start the process in the function to be able to terminate it in the function. Otherwise it gives me an error. The problem is I need to start it in main, and end it if the button is pushed so I need to find a workaround now.</span>
<span class="comment-copy">Assign the process to a global variable that you can access in the function that runs when the button is pushed.</span>
<span class="comment-copy">This terminates the process after 5 seconds, I need to terminate it after a button from another process is pushed.</span>
<span class="comment-copy">@DamianConnors It's just an example, you can use whatever criteria you want.</span>
