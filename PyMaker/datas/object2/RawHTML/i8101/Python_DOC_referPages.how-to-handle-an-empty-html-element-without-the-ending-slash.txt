<div class="post-text" itemprop="text">
<p>I try to convert an HTML page into a tree structure. I have derived this class (I removed what I actually do with each tag as it's not relevant) :</p>
<pre><code>class PageParser(html.parser.HTMLParser):
    def handle_starttag(self, tag, attrs):
        print("start "+tag)
    def handle_endtag(self, tag):
        print("end "+tag)
    def handle_startendtag(self, tag, attrs):
        print("startend "+tag)
</code></pre>
<p>I expected empty elements to trigger the <code>handle_startendtag</code> method. The problem is that, when encountering an empty element like <code>&lt;meta&gt;</code>, only the <code>handle_starttag</code> method is called. The tag is never closed from my class' point of view :</p>
<pre><code>parser = PageParser()
parser.feed('&lt;div&gt; &lt;meta charset="utf-8"&gt; &lt;/div&gt;')
</code></pre>
<p>prints :</p>
<pre><code>start div
start meta
end div
</code></pre>
<p>I need to know when each element has been closed to correctly create the tree. How can I know if a tag is an empty element ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Checking the <a href="https://docs.python.org/3/library/html.parser.html" rel="nofollow noreferrer">documentation</a>, and specifically this example:</p>
<blockquote>
<p>Parsing an element with a few attributes and a title:  </p>
<pre><code>&gt;&gt;&gt;parser.feed('&lt;img src="python-logo.png" alt="The Python logo"&gt;')
Start tag: img
    attr: ('src', 'python-logo.png')
    attr: ('alt', 'The Python logo')
</code></pre>
</blockquote>
<p>We can determine that this is the expected behavior.</p>
<p>The best suggestion come from @HenryHeath 's comment: Use <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer">BeautifulSoup</a>.</p>
<p>If you don't want to use it though, you can work around the expected behavior of <code>HTMLParser</code> as follows:</p>
<ul>
<li>This is a list of every <a href="http://w3c.github.io/html/single-page.html#void-elements" rel="nofollow noreferrer">HTML 5.2 void element</a>.</li>
<li><p>Create a list with those element names:</p>
<pre><code>void_elements = ['area', 'base', ... , 'wbr']
</code></pre></li>
<li><p>In <code>handle_starttag</code> check if the tag is in the <code>void_elements</code> list:</p>
<pre><code>class PageParser(html.parser.HTMLParser):
    def handle_starttag(self, tag, attrs):
        if tag in void_elements:
            # DO what should happen inside handle_startendtag()
            print("void element "+tag)
        else:
            print("start "+tag)
</code></pre></li>
</ul>
<p>Good luck :)</p>
</div>
<span class="comment-copy">From the docs: <i>"This parser does not check that end tags match start tags or call the end-tag handler for elements which are closed implicitly by closing an outer element."</i> <a href="https://docs.python.org/3/library/html.parser.html" rel="nofollow noreferrer">docs.python.org/3/library/html.parser.html</a></span>
<span class="comment-copy">You should either be inputting strict XML where the <code>&lt;meta&gt;</code> tag is no longer valid and you have to write it as <code>&lt;meta/&gt;</code> or keep track of a list of tags that might come as empty tags, like the <code>&lt;br/&gt;</code> or the <code>&lt;meta/&gt;</code> tags.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/3115448/best-way-to-convert-the-this-html-file-into-an-xml-file-using-python" title="best way to convert the this html file into an xml file using python">stackoverflow.com/questions/3115448/â€¦</a></span>
<span class="comment-copy">Your solution worked, thank you. Parsing a Twitter page, I found that they use the <code>link</code> tag as an empty element, but it's not in the list you linked to. I don't know if it should (maybe it's not standard), but I put it there in case someone encounters the same problem.</span>
