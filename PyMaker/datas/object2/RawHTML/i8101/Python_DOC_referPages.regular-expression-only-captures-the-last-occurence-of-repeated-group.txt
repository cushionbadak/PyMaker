<div class="post-text" itemprop="text">
<p>I am trying to capture multiple "&lt;attribute&gt; = &lt;value&gt;" pairs with a <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">Python regular expression</a> from a string like this:</p>
<pre><code>  some(code) ' &lt;tag attrib1="some_value" attrib2="value2"                   en=""/&gt;
</code></pre>
<p>The regular expression <code>'\s*&lt;tag(?:\s*(\w+)\s*=\"(.*?)\")*</code> is intended to match those pairs multiple times, i.e. return something like</p>
<pre><code>"attrib1", "some_value", "attrib2", "value2", "en", ""
</code></pre>
<p>but it only captures the last occurence:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; re.search("'\s*&lt;tag(?:\s*(\w+)\s*=\"(.*?)\")*", '  some(code) \' &lt;tag attrib1="some_value" attrib2="value2"                   en=""/&gt;').groups()
('en', '')
</code></pre>
<p>Focusing on &lt;attrib&gt;="&lt;value&gt;" works:</p>
<pre><code>&gt;&gt;&gt; re.findall("(?:\s*(\w+)\s*=\"(.*?)\")", '  some(code) \' &lt;tag attrib1="some_value" attrib2="value2"                   en=""/&gt;')
[('attrib1', 'some_value'), ('attrib2', 'value2'), ('en', '')]
</code></pre>
<p>so a pragmatic solution might be to test <code>"&lt;tag" in string</code> before running this regular expression, but..</p>
<p>Why does the original regex only capture the last occurence and what needs to be changed to make it work as intended?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is just how regex works : you defined one capturing group, so there is only one capturing group. When it first captures something, and then captures an other thing, the first captured item is replaced.That's why you only get the last captured one.<br/>
There is no solution for that that I am aware of...</p>
</div>
<div class="post-text" itemprop="text">
<p>From the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">documentation</a> search will return only one occurrence. The findAll method returns all occurrences in the list. That is what you need to use, like in your second example.</p>
</div>
<span class="comment-copy">The weekly "how to parse html/xml with regex" question... Use an XML parser. Don't try to use a <i>regular</i> expression on a language that isn't regular.</span>
<span class="comment-copy">You are right, the question is really about regex, not XML.</span>
<span class="comment-copy">That's how regex works. It captures only the last occurence. You can't capture an arbitrary number of occurences with regex. Write a loop to apply the regex multiple times, or use an xml parser.</span>
<span class="comment-copy">@Rawing Could you elaborate on why it only captures the last occurance of a repeating group in an "answer" or provide some references? If the engine "sees" the repeating group, why does it not capture it? Is there maybe an option to not overwrite the last group-match?</span>
<span class="comment-copy">@StutiRastogi No, but thanks. BTW: the string is only one of many lines that may or may not contain the data I am looking to extract, so it needs to match <code>' &lt;tag</code> also.</span>
<span class="comment-copy">Exactly, but I only need one occurence: the pattern should match the <i>whole string</i>, albeit with multiple repetitions of one group. <code>findall</code> also only returns the last match.</span>
<span class="comment-copy">The pattern <i>does</i> match the whole string <i>with</i> repetitions of the group, only this do not produce multiple match groups, unfortunately.</span>
<span class="comment-copy">What are you aiming for? Do you want only one occurrence or all of them? And what is wrong in the second example? I don't know why you want to have &lt;tag in the RegEx.</span>
<span class="comment-copy">Thanks, but it's two different things. Have a look at the comments and the other answer, they address the original problem.</span>
<span class="comment-copy">I looked at them and understood, your question was not clear to me initially. Good luck with the reading.</span>
