<div class="post-text" itemprop="text">
<p>I wanted to experiment with != instead of = here (by switching the <code>if</code> and <code>else</code> statements), in case I wanted to add an elif: after (maybe a test-response if entered guess is greater than max). 
I don't understand why it is now throwing a warning/error, or what that warning means.</p>
<p>To clarify, the code runs and seems to work, but I get a warning in the repl.it I'm using to write/run. </p>
<p>On line 3 <code>def make_guess</code></p>
<p>It says - <code>Redefining name 'guess' from outer scope (line 21)</code> <strong>&lt;=What does this mean?</strong></p>
<p>And then on line 21 <code>max=int(input("Guess number between 1 and what?"))</code></p>
<p>It says <code>Redefining built-in 'max'</code> [Although I'm guessing this isn't the issue, because if I rename that variable <code>maxi</code> it doesn't show the warning for line 21]</p>
<p>Original code:</p>
<pre><code>import random

def make_guess(guess):
    if guess == randomnumber:
        print()
        print("Congratulations, you guessed my number!")
    else:
        guess = int(input("Guess again?"))
        make_guess(guess)

print("GUESS MY NUMBER")
print()
max = int(input("Guess number between 1 and what?"))

randomnumber = random.randint(1, max)

guess = int(input("What is your best guess?"))
make_guess(guess)


print("My number was", randomnumber)
</code></pre>
<p>New code:</p>
<pre><code>import random


def make_guess(guess):
    if randomnumber != guess:
        guess = int(input("Guess again?"))
        make_guess(guess)
    else:
        print()
        print("Congratulations, you guessed my number!")


print("GUESS MY NUMBER")
print()

max = int(input("Guess number between 1 and what?"))

randomnumber = random.randint(1, max)

guess = int(input("What is your best guess?"))
make_guess(guess)

print("My number was", randomnumber)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This particular warning was given by my IDE (in this case <a href="https://repl.it/languages/python3" rel="nofollow noreferrer">repl.it</a>). 
It was letting me know that I was reusing/redefining a variable (in this case <code>guess</code>) in a different scope (ie within the function) and that this might be an issue. </p>
<p>The second warning was being given because I was using <code>max</code> as a variable name, and <code>max</code> has other uses within python, chiefly as a the <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max</code> Built-in Function</a> used with lists and other iterables. Redefining <code>max</code> could also be an issue if you actually wanted to use the Built-in function. In this case it is not, but the IDE helpfully warns you, as this isn't an advisable practice. </p>
</div>
<div class="post-text" itemprop="text">
<p>I copied and pasted your code into my repl and it seemed to run perfectly. Maybe there is a setting that is wrong or maybe you accidentally pressed a letter when running it. One small letter or period could mess up your pages of work.</p>
</div>
<span class="comment-copy">I ran your code and I didn't seem to get an error :C Edit: This is using python 3.6.1 on Windows</span>
<span class="comment-copy">I should clarify, it's not throwing an error as in not working, but running correctly, with a warning next to lines 3, 21 in my code.</span>
<span class="comment-copy">maybe <a href="http://stackoverflow.com/questions/28843079/redefined-outer-name-from-outer-scope-python3" title="redefined outer name from outer scope python3">stackoverflow.com/questions/28843079/â€¦</a></span>
<span class="comment-copy">A warning is just a warning. The one about <code>max</code> is because Python has a built-in function called <code>max</code> and by using the same name you won't be able to later use the function <code>max</code> (in the same scope). When unintentional, such things can lead to difficult to find bugs and are best avoided. The other warning seems more pointless. Different IDEs will give different warnings (if any -- IDLE doesn't give warnings).</span>
