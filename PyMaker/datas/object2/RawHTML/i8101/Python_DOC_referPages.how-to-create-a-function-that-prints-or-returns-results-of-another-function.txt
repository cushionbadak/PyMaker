<div class="post-text" itemprop="text">
<p>I've created a function (<code>p_r</code>) that will either <code>print</code> or <code>return</code> the results of functions.</p>
<p>I'm doing this for running tests. (print shows the output, return will spit out the values but doesn't print the output).
- Python noob; so, let me know if there is an easier way of doing this, like a "verbose" or testing keyword. I've been on this project for days.</p>
<p><strong>Modules required...</strong></p>
<pre><code>import random
</code></pre>
<p><strong>Variables:</strong></p>
<pre><code>yt_url = '' #url of either a video or playlist [user input]
printr_return = True
yt_url1 = 'https://youtu.be/WaGRTixwkSQ'
yt_url2 = 'https://www.youtube.com/playlist?list=PL6FhCd_HO_AD-22-Csv-vYlhLoKlAY3Zt'
</code></pre>
<p><strong>The function:</strong></p>
<pre><code>#Switches between printing or returning data, depending on printr_return
#''' 
def p_r (statement, printr_return):
    if printr_return is True:
        print (statement)
    else:
        return (statement)
#'''
</code></pre>
<hr/>
<p><strong>The problem:</strong></p>
<p>I don't understand why I get a <code>NoneType</code> when I use <code>p_r</code> in the following function:</p>
<pre><code>#Choses between the two urls above and outputs yt_url
#'''
def random_urltest (yt_url1, yt_url2):
    rnt = random.choice([1,2])
    if rnt == 1:
        yt_url = yt_url1
    if rnt == 2:
        yt_url = yt_url2
    p_r (yt_url, False)    #-- what's wrong here?
    #return yt_url          #-- but this works
#'''
</code></pre>
<p><strong>Run it:</strong></p>
<pre><code>yt_url = random_urltest (yt_url1, yt_url2) #returns NoneType if I use p_r
p_r ('Running test on url...%s' % (yt_url), True) #This works...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try putting at the end</p>
<p>return (p_r (yt_url, False))</p>
<p>instead of just running the function</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def random_urltest (yt_url1, yt_url2):
     rnt = random.choice([1,2])
     if rnt == 1:
         yt_url = yt_url1
     if rnt == 2:
         yt_url = yt_url2
     val = p_r (yt_url, False)
     if val:
         return val
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You clearly expect the <code>random_urltest()</code> function to return a value:</p>
<pre><code>yt_url = random_urltest (yt_url1, yt_url2)
</code></pre>
<p>But the function does not return anything!  As @bell-_-0001 suggested, instead of just <em>calling</em> <code>p_r()</code>, you need to <em>return</em> its value:</p>
<pre><code>def random_urltest (yt_url1, yt_url2):
    rnt = random.choice([1,2])
    if rnt == 1:
        yt_url = yt_url1
    if rnt == 2:
        yt_url = yt_url2
    return p_r (yt_url, False)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It turns out I was <em>"trying to reinvent the wheel"</em>...</p>
<p><a href="https://stackoverflow.com/questions/43943559/how-to-create-a-function-that-prints-or-returns-results-of-another-function#comment74919764_43943559">user2357112</a> gave the best answer to my overall problem (although the answers from <a href="https://stackoverflow.com/a/43943837/1947026">John Gordon</a> and <a href="https://stackoverflow.com/a/43943791/1947026">mohammad</a> solve my question directly)</p>
<p>I can use the built-in <a href="https://docs.python.org/3/howto/logging.html#logging-basic-tutorial" rel="nofollow noreferrer"><code>logging module</code></a> to debug/test - and <a href="https://docs.python.org/2/library/logging.html#logging.disable" rel="nofollow noreferrer">disable logging</a>.</p>
<p>The details of how to use the module are extensive, but I referenced <a href="http://python-guide-pt-br.readthedocs.io/en/latest/writing/logging/" rel="nofollow noreferrer">The Hitchhiker's Guide to Python</a> and made a quick code change to show how it works...</p>
<p><strong>The changes include</strong>: </p>
<ul>
<li>adding the <code>logging module</code></li>
<li>creating a <code>logging</code> configuration as <code>logger</code></li>
<li>replacing my <code>p_r</code> function with the <code>logger</code> object</li>
<li>Simplified the <code>random_urltest</code> function</li>
</ul>
<hr/>
<p><strong>Imports:</strong></p>
<pre><code>import random
import logging
</code></pre>
<hr/>
<p><strong>Creates a logger configuration</strong>: <a href="https://docs.python.org/2/library/logging.html#logrecord-attributes" rel="nofollow noreferrer">Formats info</a></p>
<pre><code>logger = logging.getLogger()
handler = logging.StreamHandler()
formatter = logging.Formatter(
        '%(asctime)s %(name)-12s %(levelname)-8s %(message)s')
handler.setFormatter(formatter)
logger.addHandler(handler)
logger.setLevel(logging.DEBUG)
</code></pre>
<hr/>
<p><strong>Variables:</strong></p>
<pre><code>yt_url = '' #url of either a video or playlist [user input]
yt_url1 = 'https://youtu.be/WaGRTixwkSQ'
yt_url2 = 'https://www.youtube.com/playlist?list=PL6FhCd_HO_AD-22-Csv-vYlhLoKlAY3Zt'
</code></pre>
<p><strong>Function:</strong></p>
<pre><code>#Choses between the two urls above and outputs yt_url
#'''
def random_urltest (yt_url1, yt_url2):
     yt_url = random.choice([yt_url1, yt_url2])
     logger.debug('Running test on url...%s',yt_url)
     return yt_url
#'''
</code></pre>
<hr/>
<p><strong>Run it:</strong></p>
<pre><code>random_urltest (yt_url1, yt_url2)
</code></pre>
<hr/>
<p><strong>Output:</strong> : url will switch between url1 and url2</p>
<pre><code>2017-05-12 12:48:13,186 root         DEBUG    Running test on url...https://www.youtube.com/playlist?list=PL6FhCd_HO_AD-22-Csv-vYlhLoKlAY3Zt
[Finished in 0.118s]
</code></pre>
</div>
<span class="comment-copy">Edit your post to include the exact error message you're getting.</span>
<span class="comment-copy">It seems like you would be better served by a logging tool, such as the built-in <a href="https://docs.python.org/2/library/logging.html" rel="nofollow noreferrer"><code>logging</code> module</a>. You can't write a function that returns on behalf of its caller, and having your functions conditionally not return things seems like a terrible idea.</span>
<span class="comment-copy">Regardless of this specific example working or not, there is no point in a function that only returns or prints the argument it receives <b>as is</b>.</span>
<span class="comment-copy">What's error message?</span>
<span class="comment-copy">You are not returning anything at random_urltest!</span>
<span class="comment-copy">Yep. That did it! Although, having looked at some other replies about the <a href="https://docs.python.org/2/library/logging.html" rel="nofollow noreferrer"><code>logging module</code></a> that may kill the need for the function I created. I'll research that and later decide which solution is best for my needs. :)</span>
<span class="comment-copy">Is <code>if val:</code> a shorter, reverse alternative to <code>if val is None:</code>?</span>
<span class="comment-copy">they are equivalent because also if val = 0 then "if val" is not evaluated. but in your case they are equivalent</span>
<span class="comment-copy">Ah! That solution works ~ I'm also going to look into the <a href="https://docs.python.org/2/library/logging.html" rel="nofollow noreferrer"><code>logging module</code></a> that @user2357112 mentioned. That may work better</span>
