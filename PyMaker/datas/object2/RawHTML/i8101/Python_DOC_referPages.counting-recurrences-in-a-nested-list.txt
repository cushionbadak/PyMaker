<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/40140067/python-counting-element-frequency-in-a-2d-list">Python-Counting element frequency in a 2D list [duplicate]</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I have a nested list that contains 2 names and 2 ages respectively. I need to write a function that looks through the list and counts the number of times the name appears. The list looks like this: </p>
<pre><code>L = [['James', 'Alan', '20', '19'], ['Alan', 'Henry', '17', '23'], ['Bill', 'James', '40', '33'], ['Hillary', 'Phil', '74', '28']]
</code></pre>
<p>So this function would count that James is in the list twice, Alan twice, and the rest of the names once.</p>
</div>
<div class="post-text" itemprop="text">
<p>To count things, I'd suggest a <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; L = [['James', 'Alan', '20', '19'], ['Alan', 'Henry', '17', '23'], ['Bill', 'James', '40', '33'], ['Hillary', 'Phil', '74', '28']]
&gt;&gt;&gt; Counter(name for sub_list in L for name in sub_list[:2])
Counter({'James': 2, 'Alan': 2, 'Phil': 1, 'Bill': 1, 'Hillary': 1, 'Henry': 1})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This code works</p>
<pre><code>L = [['James', 'Alan', '20', '19'], ['Alan', 'Henry', '17', '23'],
     ['Bill', 'James', '40', '33'], ['Hillary', 'Phil', '74', '28']]
name = 'James'
count = 0
for nested_list in L:
    if name in nested_list:
       count+=1
print count
</code></pre>
<p>Edit 1:
If you don't know the name you are searching for and want all the count of the names,then this code works</p>
<pre><code>L = [['James', 'Alan', '20', '19'], ['Alan', 'Henry', '17', '23'],
 ['Bill', 'James', '40', '33'], ['Hillary', 'Phil', '74', '28']]
count_dict = {}

for nested_list in L:
    if nested_list[0] not in count_dict.keys():
       count_dict[nested_list[0]] = 0
    elif nested_list[1] not in count_dict.keys():
       count_dict[nested_list[1]] = 0
    count_dict[nested_list[0]] += 1
    count_dict[nested_list[1]] += 1


for key,value in count_dict.items():
    print 'Name:',key,'Occurrence count',value
</code></pre>
</div>
<span class="comment-copy">I'm afraid to tell you you're asking your question in a wrong place. If you want to get your desire answer you better to update your question with the code that you've tried so far and tell us about it's problems.</span>
<span class="comment-copy">It's unclear what your specific problem is.  You want to write this function, but at what point did you get stuck?  Your requirements are unclear as well.  Should the function return counts for <i>all</i> names or just for one of the names that is passed in as a parameter?</span>
<span class="comment-copy">This is helpful :) thanks</span>
<span class="comment-copy">Is there a way I can do it so that I don't have to include 'James' in my code? So if the list was a lot larger and I didn't know all the names it would still count them.</span>
<span class="comment-copy">Then use dictionary.So,when you see a new name add it to the dictionary as the key and increment the value for that key i.e name</span>
