<div class="post-text" itemprop="text">
<p>I have an array:</p>
<pre><code>[(0, b'C', 5.8816, 6.0, 0.1184, 4.2631, 4.2631, 0.0)
 (1, b'H', 0.8495, 1.0, 0.1505, 0.951, 0.951, 0.0)
 (2, b'Br', 35.0064, 35.0, -0.0064, 1.2192, 1.2192, -0.0)
 (3, b'Cl', 17.0401, 17.0, -0.0401, 1.2405, 1.2405, -0.0)
 (4, b'F', 9.2225, 9.0, -0.2225, 1.0449, 1.0449, -0.0)]
</code></pre>
<p>from which I want to extract single columns of floating point numbers fro use further on in the program.</p>
<p>When I try the following:</p>
<pre><code>QA = []
idx_IN_columns = [5]
QA = data[idx_IN_columns]
</code></pre>
<p>I get:</p>
<pre><code>Traceback (most recent call last):

  File "&lt;ipython-input-22-4e6a1b6a3f36&gt;", line 1, in &lt;module&gt;
    runfile('C:/Users/Steve/Python/Testing/ReadFile_mpa_1.py', wdir='C:/Users/Steve/Python/Testing')

  File "C:\Anaconda3\lib\site-packages\spyder\utils\site\sitecustomize.py", line 866, in runfile
    execfile(filename, namespace)

  File "C:\Anaconda3\lib\site-packages\spyder\utils\site\sitecustomize.py", line 102, in execfile
    exec(compile(f.read(), filename, 'exec'), namespace)
    enter code here

  File "C:/Users/Steve/Python/Testing/ReadFile_mpa_1.py", line 34, in &lt;module&gt;
    QA = data[idx_IN_columns]

IndexError: index 5 is out of bounds for axis 1 with size 5
</code></pre>
<p>Assistance will be much appreciated.</p>
<p>Thanks in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>Your data and what you are trying to do with it sounds like a good fit for <a href="http://pandas.pydata.org/pandas-docs/stable/10min.html#getting-data-in-out" rel="nofollow noreferrer">Pandas</a>, a library for working with data in a tabular format.</p>
<pre><code>&gt;&gt;&gt; import pandas as pd
&gt;&gt;&gt; data = [(0, b'C', 5.8816, 6.0, 0.1184, 4.2631, 4.2631, 0.0),
 (1, b'H', 0.8495, 1.0, 0.1505, 0.951, 0.951, 0.0),
 (2, b'Br', 35.0064, 35.0, -0.0064, 1.2192, 1.2192, -0.0),
 (3, b'Cl', 17.0401, 17.0, -0.0401, 1.2405, 1.2405, -0.0),
 (4, b'F', 9.2225, 9.0, -0.2225, 1.0449, 1.0449, -0.0)]
&gt;&gt;&gt; df = pd.DataFrame(data)
&gt;&gt;&gt; df
   0      1        2     3       4       5       6    7
0  0   b'C'   5.8816   6.0  0.1184  4.2631  4.2631  0.0
1  1   b'H'   0.8495   1.0  0.1505  0.9510  0.9510  0.0
2  2  b'Br'  35.0064  35.0 -0.0064  1.2192  1.2192 -0.0
3  3  b'Cl'  17.0401  17.0 -0.0401  1.2405  1.2405 -0.0
4  4   b'F'   9.2225   9.0 -0.2225  1.0449  1.0449 -0.0
</code></pre>
<p>Then, to get column 5, just do <code>df[5]</code>.</p>
<pre><code>&gt;&gt;&gt; df[5]
0    4.2631
1    0.9510
2    1.2192
3    1.2405
4    1.0449
Name: 5, dtype: float64
</code></pre>
<p>By using Pandas, you can also easily read from (<code>pd.read_csv()</code>) and write the data (<code>df.to_csv()</code>) to disk, for example.</p>
</div>
<div class="post-text" itemprop="text">
<p>You cannot access a list element with a list as index (see <a href="https://docs.python.org/3/library/stdtypes.html#sequence-types-list-tuple-range" rel="nofollow noreferrer">Sequence Types</a>), you need to iterate. Your data sets are Tuples; they are similar to Lists, but cannot be modified.
By the way, your data is malformed (lacking commas):</p>
<pre><code>#!python3
# coding=utf-8

l = [
    (0, b'C', 5.8816, 6.0, 0.1184, 4.2631, 4.2631, 0.0),
    (1, b'H', 0.8495, 1.0, 0.1505, 0.951, 0.951, 0.0),
    (2, b'Br', 35.0064, 35.0, -0.0064, 1.2192, 1.2192, -0.0),
    (3, b'Cl', 17.0401, 17.0, -0.0401, 1.2405, 1.2405, -0.0),
    (4, b'F', 9.2225, 9.0, -0.2225, 1.0449, 1.0449, -0.0)
    ]

print( [e[2] for e in l] ) # list comprehension
# [5.8816, 0.8495, 35.0064, 17.0401, 9.2225]

# equivalent loop
result = []
for e in l:
    result.append(e[2])
print(result)
</code></pre>
<p><hr/>
A little more advanced, as <a href="https://docs.python.org/3/reference/expressions.html?highlight=yield#yield-expressions" rel="nofollow noreferrer">generator function</a>:</p>
<pre><code># iterator
def col(l, n=0):
    for e in l:
        yield e[n]

print(list(col(l,2)))

for data in col(l,2):
    print(data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>data = [(0, b'C', 5.8816, 6.0, 0.1184, 4.2631, 4.2631, 0.0),
 (1, b'H', 0.8495, 1.0, 0.1505, 0.951, 0.951, 0.0),
 (2, b'Br', 35.0064, 35.0, -0.0064, 1.2192, 1.2192, -0.0),
 (3, b'Cl', 17.0401, 17.0, -0.0401, 1.2405, 1.2405, -0.0),
 (4, b'F', 9.2225, 9.0, -0.2225, 1.0449, 1.0449, -0.0)]

numbers = [n[2:] for n in data]
</code></pre>
<h1>Result</h1>
<pre><code>[(5.8816, 6.0, 0.1184, 4.2631, 4.2631, 0.0), (0.8495, 1.0, 0.1505, 0.951, 0.951, 0.0), (35.0064, 35.0, -0.0064, 1.2192, 1.2192, -0.0), (17.0401, 17.0, -0.0401, 1.2405, 1.2405, -0.0), (9.2225, 9.0, -0.2225, 1.0449, 1.0449, -0.0)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming your array is meant to have commas at the end, like</p>
<pre><code>data = [(0, b'C', 5.8816, 6.0, 0.1184, 4.2631, 4.2631, 0.0),
 (1, b'H', 0.8495, 1.0, 0.1505, 0.951, 0.951, 0.0),
 (2, b'Br', 35.0064, 35.0, -0.0064, 1.2192, 1.2192, -0.0),
 (3, b'Cl', 17.0401, 17.0, -0.0401, 1.2405, 1.2405, -0.0),
 (4, b'F', 9.2225, 9.0, -0.2225, 1.0449, 1.0449, -0.0)]
</code></pre>
<p>Which is actually a list of tuples (not really an array), you could do</p>
<pre><code>QA = [row[5] for row in data]
</code></pre>
<p>or</p>
<pre><code>from operator import itemgetter

QA = map(itemgetter(5), data)
</code></pre>
</div>
<span class="comment-copy">are you trying to get the element with index 5 from the array?</span>
<span class="comment-copy">the array is confusing, is it a 2d array of just 1d array with tuple as its element. are you mising the commas?</span>
<span class="comment-copy">@Steve Note that your full name shows in the paths of the error message you posted.</span>
<span class="comment-copy">@Steve I edited that, but it still is in the history.</span>
<span class="comment-copy">I had to make a slight modification to you solution.</span>
