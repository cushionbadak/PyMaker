<div class="post-text" itemprop="text">
<p>I have a project called <code>library</code> and in it I have 3 folders - <code>user</code>, <code>book</code> and <code>main</code>. There is a <code>user_utility.py</code> in <code>user</code>. So let's say the project folder is:</p>
<pre><code>/User/me/Projects/library/user/user_utility.py
/User/me/Projects/library/book/book_utility.py
/User/me/Projects/library/main/main.py
</code></pre>
<p>Now, in <code>/User/me/Projects/library/main/main.py</code> I would like to write the import statement as:</p>
<pre><code>from user.user_utility import UserUtility
</code></pre>
<p>What is the <code>$PYTHONPATH</code> variable that allows me to do so? I tried</p>
<pre><code>EXPORT PYTHONPATH="/User/me/Projects/library
</code></pre>
<p>but it does not work and it threw</p>
<pre><code>No module named user.user_utility
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Messing with <code>PYTHONPATH</code> really is the wrong approach to go forward here. Instead, turn your <code>user</code> and <code>book</code> folders into proper modules/submodules. For doing so, you need to add <code>__init__.py </code>-files to (both of) them, looking like this for example:</p>
<pre><code>from user_utility import some_routine
</code></pre>
<p>In your example, this would be <code>/User/me/Projects/library/user/__init__.py</code>. Now you can import this routine from your <code>main.py</code>-file as follows:</p>
<pre><code>from user import some_routine
</code></pre>
<p>For full reference, have a look at <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">the python documentation, modules tutorial</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you call <strong>main.py</strong>  directly from the command line, you can set the environment variable at the beginning of the line:</p>
<pre><code> PYTHONPATH=/User/me/Projects/Library python main.py
</code></pre>
<p>Otherwise, you should be able to set that module lookup path with:</p>
<pre><code>export PYTHONPATH=/User/me/Projects/Library
</code></pre>
<p>To verify, you can see your environment variables with: </p>
<pre><code>env
</code></pre>
<p>Also, make sure to put the <strong>__init__.py</strong> inside the user folder.</p>
</div>
<span class="comment-copy">To be an importable module, the directory must also contain a file named <code>__init__.py</code>.</span>
<span class="comment-copy">i'll take your answer. what i need to do is to only point to the project folder.</span>
