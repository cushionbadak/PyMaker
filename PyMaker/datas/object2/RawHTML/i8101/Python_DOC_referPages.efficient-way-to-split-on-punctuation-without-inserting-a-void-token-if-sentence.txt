<div class="post-text" itemprop="text">
<p>I need to split sentences on punctuation marks in python.</p>
<p>This command works nearly fine:</p>
<pre><code>re.split('\W+', line.lower().strip(), flags=re.UNICODE)
</code></pre>
<p>The problem is that, if the last character of the sentence is a punctuation mark, the last token is a void token.</p>
<p>How can I avoid that?</p>
<p>I would like a solution that allows me not to insert a void token. I cannot afford to cancel it afterwards: in my case efficiency is an issue since I need to run this command over very large corpora of texts.</p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of trying to split by non-word (<code>\W+</code>) characters, you can use <a href="https://docs.python.org/3/library/re.html#re.findall" rel="nofollow noreferrer"><code>re.findall</code></a> with <code>\w+</code>:</p>
<pre><code>&gt;&gt;&gt; line = 'Hello world!'
&gt;&gt;&gt; re.findall(r'\w+', line.lower(), flags=re.UNICODE)
['hello', 'world']
# `.strip()` was remove because `\w+` does not match whitespaces.
</code></pre>
<p>SIDE NOTE: You'd better to use <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer"><code>r'raw string literals'</code></a> to avoid backslashes to be used as escape sequences.</p>
<hr/>
<p>Alternative: Pass the string without trailing non-word chracters to the <code>re.split</code>:</p>
<pre><code>&gt;&gt;&gt; re.split(r'\W+', re.sub(r'\W+$', '', line.lower().strip()), flags=re.UNICODE)
['hello', 'world']
</code></pre>
<p>NOTE: You may also strip leading non-word characters. To handle both sides, use <code>^\W+|\W+$</code> pattern.</p>
</div>
<span class="comment-copy">works great! Thank you</span>
