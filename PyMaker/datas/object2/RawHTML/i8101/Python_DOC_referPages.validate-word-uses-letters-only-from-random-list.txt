<div class="post-text" itemprop="text">
<p>I'm building a 'scrabble' game in Python. Basically, the user is given 7 randomly generated letters and these are stored in the list <code>random_letters</code>. They then enter a word using those letters - this is a string stored as <code>player1_word</code>.</p>
<p>The bit I am stuck on is where I need to validate that the user has entered a valid word - e.g is <code>player1_word</code> only using letters from <code>random_letters</code>.</p>
<pre><code>def is_valid_answer(player_word: str, letters: list) -&gt; bool:
    ...
</code></pre>
<p>Expected behaviour:</p>
<pre><code>&gt;&gt;&gt; random_letters = ["D", "O", "G", "P", "X", "K"]
&gt;&gt;&gt; is_valid_answer("DOG", random_letters)
True
&gt;&gt;&gt; is_valid_answer("CAT", random_letters)
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>set</code> operation to do this:</p>
<pre><code>if not set(Player1Word) - set(randomLetters):
    print "Valid"
</code></pre>
<p><code>set</code> is a data structure contains only unique items. The idea is, convert both of them set. And, then subtract <code>randomLetters</code> from <code>Player1Word</code> to see if <code>Player1Word</code> contains something that not in  <code>randomLetters</code>. If it doesn't contain, the  <code>Player1Word</code> is valid, otherwise not. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>randomLetters = [ 'a' , 'b' , 'x']

word = input('Enter A word : ')
first_letter = word[0]
if first_letter in randomLetters:
  print('valid')
else:
  print('Not valid')
</code></pre>
<p><strong>RESULT</strong></p>
<pre><code>Enter A word :  alex
valid

Enter A word :  devon
Not valid
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python <a href="https://stackoverflow.com/questions/17346905/is-there-a-python-equivalent-for-c-multisetint">does not have a native multiset type</a> so there's not quite a one-liner for this, but <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>collections.Counter</code></a> helps a little:</p>
<pre><code>def is_valid_answer(word, letters):
    letter_counts = collections.Counter(letters)
    for letter in word:
        if not letter_counts[letter]:
            return False
        letter_counts[letter] -= 1
    return True
</code></pre>
<p>Using <code>Counter</code> at least saves you the loop you'd need to populate a plain <code>dict</code> with the counts.</p>
</div>
<span class="comment-copy">Can you show what have you tried?</span>
<span class="comment-copy">show your approach first</span>
<span class="comment-copy">Is your question: "How can I determine whether a string <code>word</code> consists only of characters from a certain list?"</span>
<span class="comment-copy">It's not clear what your problem is from the question.</span>
<span class="comment-copy">I did a rather major rewrite to make the question clearer and more in Python style, please ask if there's anything I changed you're unsure on.</span>
<span class="comment-copy">Thanks, this worked perfectly, just what I was looking for. Never knew about 'set' before, never come across it. Many thanks ;)</span>
<span class="comment-copy">There is a subtle problem with this answer. For instance, if I am given the letters A,E,O,D,T,W,X and provide the answer WOOD, your code will report my answer as valid when it is not.</span>
<span class="comment-copy">@gz. Indeed it does, good spot. My bad for not testing thoroughly! Any ideas on how to fix this?</span>
<span class="comment-copy">@sf318 was giving others a chance to fix/answer, but have posted a solution now.</span>
<span class="comment-copy">Thanks for posting, will test as soon as I get the chance to :)</span>
