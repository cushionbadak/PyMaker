<div class="post-text" itemprop="text">
<p>I want to make an array of subdirectories in Python. Here is an example layout and model list I would like to obtain.</p>
<pre><code>                             Root
                              |
                         directories
                            /    \
                      subdir_1... subdir_n
</code></pre>
<p>Hence from the root, I would like to run a program that will make a list of all the subdirectories. That way if I were to write:</p>
<pre><code>print(List_of_Subdirectories)
</code></pre>
<p>Where List_of_Subdirectories is the list of appended directories. I would obtain the output:</p>
<pre><code>[subdir_1, subdir_2, ... , subdir_n]
</code></pre>
<p>In essence, I would like to achieve the same results as if I were to hard code every directory into a list. For example:</p>
<pre><code>List_of_Subdirectories = ["subdir_1", "subdir_2", ... , "subdir_n"]
</code></pre>
<p>Where subdir_n denotes an arbitrary nth directory. </p>
<p>Unlike other posts here on stack overflow, I would like the list to contain just the directory names without tuples or paths.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you <em>just</em> want the directory names, you can use <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow noreferrer">os.walk</a> to do this:</p>
<p>os.walk(directory)
will yield a tuple for each subdirectory. The first entry in the 3-tuple is a directory name. You can wrap this in a function to simply return the list of directory names like so:</p>
<pre><code>def list_paths(path):
    directories = [x[1] for x in os.walk(path)]
    non_empty_dirs = [x for x in directories if x] # filter out empty lists
    return [item for subitem in non_empty_dirs for item in subitem] # flatten the list
</code></pre>
<p>should give you all of the directories.</p>
</div>
<div class="post-text" itemprop="text">
<p>If all you want is a list of the subdirectories of an specified directory, all you need is <a href="https://docs.python.org/3/library/os.html#os.listdir" rel="nofollow noreferrer">os.listdir</a> and a filter to display only directories.</p>
<p>It's as simple as:</p>
<pre class="lang-py prettyprint-override"><code>List_of_Subdirectories = list(filter(os.path.isdir, os.listdir()))
print(List_of_Subdirectories)
</code></pre>
<p>The return from <code>os.listdir</code> is a list containing the names of all the available elements in the specified directory (or <code>.</code> by default), directories and files. We filter only the directories using <code>os.path.isdir</code>. Then, as you want a <code>list</code>, we explicitly convert the filtered result.</p>
<p>You wouldn't be able to <code>print</code> the filtered result, but you would be able to iterate over it. The snippet below would achieve the same result as the one avobe.</p>
<pre class="lang-py prettyprint-override"><code>directory_elements = filter(os.path.isdir, os.listdir())
List_of_Subdirectories = []
for element in directory_elements:
    List_of_Subdirectories.append(element)
print(List_of_Subdirectories)
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/800197/how-to-get-all-of-the-immediate-subdirectories-in-python">How to get all of the immediate subdirectories in Python</a></span>
<span class="comment-copy">Hi @PeterWood, I looked at that post and I didn't quite get the help I wanted from it.</span>
<span class="comment-copy">Is there any way I can avoid getting the tuples? I would like to have a list with just the directory names. It would work the exact same way as if I were to hard code each directory name myself like L = ["dir1", "dir2", "dir3", ...etc]</span>
<span class="comment-copy">The list comprehension given will yield a list of strings. You can wrap this in a function where the parameter given is a directory path and the list is returned?</span>
<span class="comment-copy">@fwubb I've updated my answer to be a function instead :)</span>
<span class="comment-copy">When I do that, it prepends the path onto the directory name. How would I be able to only work with the directory name?</span>
<span class="comment-copy">@fwubb I've updated my answer to print <i>all</i> directory names from a given path (including duplicates).</span>
<span class="comment-copy">This answer only gives the directory names at a given level, rather than all children of a path.</span>
<span class="comment-copy">And that is exactly what the question asked for. Or at least what I understand from what's written.</span>
<span class="comment-copy">I messed up on my question initially, so that probably answered the right question before I edited.</span>
<span class="comment-copy">Well, in case someone else comes here looking for this info, there are two available ways to do it :)</span>
