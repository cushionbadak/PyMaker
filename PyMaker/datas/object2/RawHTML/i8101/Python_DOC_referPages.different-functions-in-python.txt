<div class="post-text" itemprop="text">
<p>Why can I say this:   </p>
<pre><code>print (max('abcdefg'))
print (sorted('akjsdhfjkh'))
</code></pre>
<p>but not this:</p>
<pre><code>print(capitalize(cat)
</code></pre>
<p>and rather this:</p>
<pre><code>v='cat'
print (v.capitalize())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Short answer:</p>
<p>Nothing profound--just the calling conventions that were chosen for these functions.</p>
<p>Slightly longer answer:</p>
<p>max() and sorted() are functions that operate on sequences--you give them a sequence (list, tuple, or string) and they return a new one.</p>
<p>capitalize() is a method for str objects. As with many of these, there is also a str package method that takes an argument. So you can call it like this if you prefer: <code>str.capitalize(v)</code></p>
</div>
<div class="post-text" itemprop="text">
<p><code>max</code>, <code>sorted</code> are regular builtin functions</p>
<pre><code>In [30]: max
Out[30]: &lt;function max&gt;
</code></pre>
<p>Where <code>capitalize</code> is a method of <code>str</code> class</p>
<pre><code>In [31]: str.capitalize
Out[31]: &lt;method 'capitalize' of 'str' objects&gt;
In [32]: str.capitalize("aaa")
Out[32]: 'Aaa'
In [33]: "aaa".capitalize()
Out[33]: 'Aaa
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>capitalize is a method of the string object:
<a href="https://docs.python.org/2/library/string.html#string.capitalize" rel="nofollow noreferrer">https://docs.python.org/2/library/string.html#string.capitalize</a></p>
<p>sorted and max are built-in functions:
<a href="https://docs.python.org/2/library/functions.html" rel="nofollow noreferrer">https://docs.python.org/2/library/functions.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>There is no logic here.<br/>
You were perfectly correct that any sort of iterable data structure (such as a string or a list) should have a built-in max function . </p>
<p>i.e.</p>
<pre><code>'abcdefg'.max()
</code></pre>
<p>The creators of Python had chosen a small number of operations that they want to be considered as built-in: <a href="https://docs.python.org/2/library/functions.html" rel="nofollow noreferrer">https://docs.python.org/2/library/functions.html</a></p>
<p>Most other functions are part of specific classes or objects.<br/>
I think its perfectly reasonable for max to not have been a built-in and instead been part of some math library</p>
<p>i.e.</p>
<pre><code>import math
math.max('abcdefg')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>look for difference between the method and function. Major difference is that we can operate function independently while in case of method we have to use it with certain object. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can do <code>'cat'.capitalize()</code> by the way.</p>
<p>In Python, there are functions and there are methods. A function can be called on its own. A method needs to be called from an object of its class.</p>
<p>Imagine you have this python file:</p>
<pre><code>def my_print1():       # this is a function
   print("cats are nice")

class test():
    def my_print2():   # this is a method
        print("dogs are nice")
</code></pre>
<p>To call the my_print1 <strong>function</strong> you just do <code>my_print1()</code> and it will print that cats are nice.
But to call the my_print2 <strong>method</strong> you need to have an object of class <code>test</code> and then that object can call my_print2 method. Here's how you can do that in code:</p>
<pre><code>myObject = test()      # this creates an object of class test
myObject.my_print2()   # this calls the method using that object
</code></pre>
<p>You see how my_print2 was called using an object? This is just like doing <code>v.capitalize()</code>. <code>v</code> here is an object of the built-in <code>str</code> (string) class, and <code>capitalize</code> is a method of that class, and so it needed an object <em>(v)</em> to be called from.</p>
<p><code>max</code> and <code>sorted</code> are built-in function of python. They can called without needing an object.</p>
<p><a href="https://docs.python.org/3/library/functions.html" rel="nofollow noreferrer">Here</a> are the built-in functions of python.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/155609/difference-between-a-method-and-a-function">Difference between a method and a function</a></span>
<span class="comment-copy">Why doesn't this work?  def oneToN(n):     if n == 1:         return 1     else:         return n + oneToN(n-1)</span>
