<div class="post-text" itemprop="text">
<p>I've encounter this syntax in <a href="https://doc.scrapy.org/en/latest/intro/tutorial.html#extracting-data" rel="nofollow noreferrer">the srapy documentation</a>.</p>
<pre><code>&gt;&gt;&gt; abc = ['a', 'b', 'c']
&gt;&gt;&gt; dict(abc=abc)
{'abc': ['a', 'b', 'c']}
</code></pre>
<p>There doesn't seem to have this syntax mentioned in <a href="https://docs.python.org/3/library/stdtypes.html?highlight=dict#dict" rel="nofollow noreferrer">the python dict documentation</a>. What is this syntax called? </p>
</div>
<div class="post-text" itemprop="text">
<p>This use <a href="https://docs.python.org/3/glossary.html#term-argument" rel="nofollow noreferrer">keyword arguments</a>.</p>
<p>It is roughly the same as:</p>
<pre><code>def make_dict(**kwargs):
    return kwargs
</code></pre>
<p>In your case,</p>
<pre><code>abc = ['a', 'b', 'c']
dict(abc=abc)
</code></pre>
<p>means:</p>
<pre><code>dict(abc=['a', 'b', 'c'])
</code></pre>
<p>which is the same as:</p>
<pre><code>{'abc': ['a', 'b', 'c']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is nothing special, <code>dict()</code> can take keyword arguments as well as positional arguments. You can read the <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer">docs on <code>dict()</code></a>.</p>
<p>So in your code snippet <code>dict()</code> just take single keyword argument.</p>
</div>
<span class="comment-copy">It's just a function call with single keyword argument. <code>dict(abc=1)</code> may be an easier way to comprehend what's happening here.</span>
<span class="comment-copy"><code>dict(a=1)</code> is equal to <code>{'a': 1}</code></span>
<span class="comment-copy">I want to know why abc=abc expands in dict like having 'abc' as key and the list as value, and is there's specific syntax name for this?</span>
<span class="comment-copy">@user14042 keyword arguments are interpreted literally, they are not names to be resolved.</span>
<span class="comment-copy">It's work like this: <code>def a(**kwargs): print(kwargs)</code></span>
