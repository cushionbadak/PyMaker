<div class="post-text" itemprop="text">
<p>I have a dictionary that has lists as the values:   </p>
<pre><code>my_dict = {'key1': ['foo1','foo2'],
           'key2': ['bar1', 'bar2'],
           'key3': ['foobar1', 'foobar2'}
</code></pre>
<p>I'd like to search the dictionary for multiple keys and store their values in a list:  </p>
<pre><code>keys = []
values = []
for k,v in my_dict.items():
    if k.startswith(('key1', 'key3')):
        keys.append(k)
        values.append(v)
</code></pre>
<p>But when I do this I get a multidimensional (double brackets) list for values.  If I were to replace <code>values.append(v)</code> with <code>print(v)</code> I get the values on 2 separate lines.  My question is, how can I print the value lists from 2 separate keys on the same line? </p>
</div>
<div class="post-text" itemprop="text">
<p>One of the many ways you can print a nested list in one line is with a comprehension:</p>
<pre><code>print(*[i for sub in values for i in sub])
</code></pre>
<p>If you didn't <em>want it</em> to be nested in the first place, replace <code>append</code> with <code>extend</code> in <code>values.append(v)</code>. </p>
<p><code>list.extend</code> takes a list (as <code>v</code> is in this case) and add all its elements to the other list. <code>list.append</code> just adds the element as is to the new list resulting in the nested structure you see.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem appears to spring from the fact that you are separately appending more than one list to the <code>values</code> list. That is, you are doing:</p>
<pre><code>values = []

values.append(['foo1','foo2'])  

# values = [ ['foo1','foo2'] ]

values.append(['foobar1', 'foobar2']) 

# values = [ ['foo1'...], ['foobar1'...] ]
</code></pre>
<p>In order to get values to be a single list of just the strings, use <code>values.extend(v)</code>. The <a href="https://docs.python.org/3/library/stdtypes.html?highlight=list#typesseq-mutable" rel="nofollow noreferrer"><code>.extend()</code></a> method concatenates lists, while the <code>append</code> method nests them.</p>
<pre><code>values.extend(v)

# or:

values += v
</code></pre>
</div>
