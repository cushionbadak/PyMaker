<div class="post-text" itemprop="text">
<p>I am wondering how I can extract every other digit (starting with the second) from a number assigned to a variable in python.</p>
<p>For example, I want this:</p>
<pre><code>a= '102030'
</code></pre>
<p>to become</p>
<pre><code>a= '000'
</code></pre>
<p>I hear this is possible to do using "slicing," I'm just not sure how.</p>
<p>Any help is appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Edit:</strong></p>
<p>Else, if you start from the given string, then you should simply slice it like this:</p>
<pre><code>a = a[1::2]
</code></pre>
<ol>
<li>First element <code>1</code> means you want to slice the element starting from its second element.</li>
<li>The last element <code>2</code> is the interval (every two element)</li>
<li>The empty middle element is actually the upper index limit (exclusive). If you don't put anything means you want all items.</li>
</ol>
<p><strong>Original:</strong></p>
<p>Refering from your previous question here:</p>
<p><a href="https://stackoverflow.com/questions/43904854/how-to-make-list-elements-into-string">How to make list elements into string?</a></p>
<p>Started from having <code>a = [10, 20, 30]</code>,</p>
<p>In order to get the joined string for the given integer list <code>a</code> from the second element <em>per list item</em> onwards, you could slice each item of the list to from the second element onwards by using <code>[1::]</code> (index <code>1</code> means starting from the <em>second</em> element) like this:</p>
<pre><code>a = [10, 20, 30]
a = [''.join(str(x)[1::] for x in a)]

print(a)
</code></pre>
<p>Result:</p>
<pre><code>['000']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, you can only slice on certain sequence objects, like lists and strings.  You have an integer. You can still get the result you want however.</p>
<p>first take your number and convert it into a string:</p>
<pre><code>a = 102030
str_a str(a)
</code></pre>
<p>then after doing this, you can use normal <a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow noreferrer">slice syntax</a>, so you can do this with the start, end, step size</p>
<pre><code>a = int(str_a[1::2])
# a == 0
# but str_a[1::2] == "000"
</code></pre>
<p>now a will be the int you want. </p>
<p>EDIT:  you seem to have changed your question entirely so it becomes even more trivial:</p>
<pre><code>a = "102030"[1::2]
</code></pre>
<p>You are able to 'slice' into strings, slicing syntax is <code>seqence_type[start:end:step]</code> you can omit the first parameter if it starts at the first index (in this case you would get "123" instead of "000", so we can't do that) if you omit the second it goes to the end and if you omit the last parameter step size of 1 is used.  In this way you can even use slicing to copy arrays/strings via</p>
<pre><code>hello = "hello"
hello2 = hello[:]+"2"
print(hello2)
# "hello2"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just do the following:</p>
<pre><code>l[1:][::2]
</code></pre>
<p>Which does essentially the same thing as:</p>
<pre><code>l[1::2]
</code></pre>
<hr/>
<pre><code>&gt;&gt;&gt; a= '102030'
&gt;&gt;&gt; a[1:][::2]
'000'
&gt;&gt;&gt; a[1::2]
'000'
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python slicing syntax supports an optional third argument, a step argument:</p>
<pre><code>def oddIndexes(string):
    return string[1::2]

&gt;&gt;&gt; oddIndexes('102030')
'000'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In python, if you have a list, string etc(call it <code>a</code>), you can access its elements by providing the range of indexes you want the <code>a</code> over. </p>
<p>For example, if <code>a = "abcdef"</code>, <code>a[0:6]</code> will give <code>"abcdef"</code> back. That is,<code>a[0:6]</code> would correspond to 'first six elements of a'. </p>
<p>If you give it <code>a[1:5]</code> the output would be <code>bcde</code>, that is elements from 1 through 4(5 is not inclusive). </p>
<p>You can also ask it to skip a certian number of elements by specifying a third value such as <code>a[0:6:2]</code>. This would mean, start from the 0th element, go up to 6th skip one in the middle. </p>
<p>To answer your question, you would need <code>string[1:6:2]</code></p>
</div>
<span class="comment-copy">I think, you should start with the list which you post in your previous question... The situation here is quite different from slicing a list. This is like changing one integer to another integer, which is I believe not what you meant.</span>
<span class="comment-copy">Fixed, I think...</span>
<span class="comment-copy"><code>a[::-2]</code> step (aka. stride) is the key here, the slice range <i>per se</i> is not that relevant. <b>-2</b> will take the very last digit first, then the digit two steps from right to left and then another two steps and <i>voil√°</i> no iterable left</span>
<span class="comment-copy">@monchitos82, that appears to work in this case, but the <code>0</code>s are in the reverse order to what I would expect when asked to select "every other". Likewise if <code>len(a)</code> is odd</span>
<span class="comment-copy">That's truth, this is depending on the size and position of the numbers, yet there are always caveats for any situation where the string is unknown to the program. With this in mind it is more helpful to use a regex than a slice.</span>
<span class="comment-copy">Ok, but in the code I am writing the source is a different part. I am working with an input integer and trying to extract every other digit. They are not in groups of two.</span>
<span class="comment-copy">@NoahSprenger ok, then it may even be simpler!</span>
<span class="comment-copy">I figured it out! Thank you so much for your help.</span>
<span class="comment-copy">@NoahSprenger you are welcome... :) please do not forget to mark my answer as accepted. Once you mark it as accepted, you could also do <code>upvote</code> on <i>all</i> answers which are helpful to you. You can only mark <i>one</i> answer as accepted (by ticking the V) but you could <i>upvote</i> as many answers as you find helpful (by clicking up-arrow button above the number <code>0</code> in the left of the answers). This way, your answerers will get some reputation in SO for their benefits. it also tells the other visitor of your question what answer(s) you found helpful. Try it out!</span>
<span class="comment-copy">I used a combination of your answer and Ian's answer to get the perfect answer. Thank you so much!</span>
<span class="comment-copy">Just <code>a[1::2]</code> would also return the same string</span>
