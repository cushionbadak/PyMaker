<div class="post-text" itemprop="text">
<p>The files I have seem to be in a "dict" format...</p>
<p>file header is as follows: <code>time,open,high,low,close,volume</code></p>
<p>next line is as follows:
{"t":[1494257340],"o":[206.7],"h":[209.3],"l":[204.50002],"c":[204.90001],"v":[49700650]}`</p>
<pre><code>    import csv
    with open ('test_data.txt', 'rb') as f:

    for line in f:
        dict_file = eval(f.read())
        time = (dict_file['t'])    # print (time) result [1494257340]
        open_price = (dict_file['o'])    # print (open_price) result [206.7]
        high = (dict_file['h'])    # print (high) result [209.3]
        low = (dict_file['l'])    # print (low) result [204.50002]
        close = (dict_file['c'])    # print (close) result [204.90001]
        volume = (dict_file['v'])    # print (volume) result [49700650]

        print (time, open_price, high, low, close, value)

# print result [1494257340] [206.7] [209.3] [204.50002] [204.90001] [49700650]

# I need to remove the [] from the output.

# expected result 

# 1494257340, 206.7, 209.3, 204.50002, 204.90001, 49700650
</code></pre>
<p>the result I need is (change time ("epoch date format") to dd,mm,yy</p>
<p><code>5/8/17, 206.7, 209.3, 204.50002, 204.90001, 49700650</code></p>
<p>so I know I need the csv.writer function</p>
</div>
<div class="post-text" itemprop="text">
<p>I see a number of problems in the code you submitted. I recommend you to break your task into small pieces and see if you can make them work individually. So what are you trying to do is:</p>
<ol>
<li>open a file</li>
<li>read the file line by line</li>
<li><code>eval</code> each line to get a <code>dict</code> object</li>
<li>get values from that object</li>
<li>write those values in a (separate?) csv file</li>
</ol>
<p>Right?</p>
<p><strong>Now do each one, one small step at the time</strong></p>
<ol>
<li>opening a file. </li>
</ol>
<p>You're pretty much on point there:</p>
<pre><code>with open('test_data.txt', 'rb') as f:
    print(f.read())

# b'{"t":[1494257340],"o":[207.75],"h":[209.8],"l":[205.75],"c":[206.35],"v":[61035956]}\n'
</code></pre>
<p>You can open the file in <code>r</code> mode instead, it will give you strings instead of <code>byte</code> type objects</p>
<pre><code>with open('test_data.txt', 'r') as f:
    print(f.read())

# {"t":[1494257340],"o":[207.75],"h":[209.8],"l":[205.75],"c":[206.35],"v":[61035956]}
</code></pre>
<p>It might cause some problems but should work since eval can handle it just fine (at least in python 3)</p>
<ol start="2">
<li>read the file line by line</li>
</ol>
<pre><code>with open('test_data.txt', 'rb') as f:
    for line in f:
        print(line)

# b'{"t":[1494257340],"o":[207.75],"h":[209.8],"l":[205.75],"c":[206.35],"v":[61035956]}\n'
</code></pre>
<p>Here is another problem in your code, you're not using <code>line</code> variable and trying to <code>f.read()</code> instead. This will just read entire file (starting from the second line, since the first one is been read already). Try to swap one for another and see what happens</p>
<ol start="3">
<li><code>eval</code> each line to get a <code>dict</code> object</li>
</ol>
<p>Again. This works fine. but I would add some protection here. What if you get an empty line in the file or a misformatted one. Also if this file comes from an untrusted source you may become a victim of a code injection here, like if a line in your file changed to:</p>
<p><code>print("You've been hacked") or {"t":[1494257340],"o":[207.75],"h":[209.8],"l":[205.75],"c":[206.35],"v":[61035956]}</code></p>
<pre><code>with open('test_data.txt', 'rb') as f:
    for line in f:
        dict_file = eval(line)
        print(dict_file)

# You've been hacked
# {'t': [1494257340], 'o': [207.75], 'h': [209.8], 'l': [205.75], 'c': [206.35], 'v': [61035956]}
</code></pre>
<p>I don't know your exact specifications, but you should be safer with <code>json.loads</code> instead.</p>
<p>...</p>
<hr/>
<p><strong>Can you continue on your own from there?</strong></p>
<ol start="4">
<li>get values from the object</li>
</ol>
<p>I think <code>dict_file['t']</code> doesn't give you the value you expect. </p>
<p>What does it give you? </p>
<p>Why? </p>
<p>How to fix it?</p>
<ol start="5">
<li>write those values in a csv file</li>
</ol>
<p>Can you write some random string to a file?</p>
<p>What scv format looks like? Can you format your values to match it</p>
<p>Check the docs for <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module, can it be of help to you?</p>
<p>And so on and so forth...</p>
<hr/>
<p><strong>EDIT:</strong> Solution</p>
<pre><code># you can save the print output in a file by running:
# $ python convert_to_csv.py &gt; output.cvs
import datetime, decimal, json, os


CSV_HEADER = 'time,open,high,low,close,volume'


with open('test_data.txt', 'rb') as f:

    print(CSV_HEADER)

    for line in f:
        data = json.loads(line, parse_float=decimal.Decimal)
        data['t'][0] = datetime.datetime.fromtimestamp(data['t'][0]) \
            .strftime('%#d/%#m/%y' if os.name == 'nt' else '%-d/%-m/%y')
        print(','.join(str(data[k][0]) for k in 'tohlcv'))
</code></pre>
<p>Running:</p>
<pre><code>$ cat test_data.txt
{"t":[1494257340],"o":[207.75],"h":[209.8],"l":[205.75],"c":[206.35],"v":[61035956]}
{"t":[1490123123],"o":[107.75],"h":[109.8],"l":[105.75],"c":[106.35],"v":[11035956]}
{"t":[1491234234],"o":[307.75],"h":[309.8],"l":[305.75],"c":[306.35],"v":[31035956]}

$ python convert_to_csv.py
time,open,high,low,close,volume
8/5/17,207.75,209.8,205.75,206.35,61035956
21/3/17,107.75,109.8,105.75,106.35,11035956
3/4/17,307.75,309.8,305.75,306.35,31035956
</code></pre>
</div>
<span class="comment-copy">Have you tried converting the string to a byte?</span>
<span class="comment-copy">i'm bit new to python i don't know how to, have watch lots of youtube vids advise me how to if you have time</span>
<span class="comment-copy">I mean I can't really help you becasue you've only given us a portion of your code. Not even the write portion which is what you need help with. But I can do this for you at least. <a href="https://docs.python.org/3.3/howto/unicode.html" rel="nofollow noreferrer">docs.python.org/3.3/howto/unicode.html</a> There are quite a few ways to convert str to bytes. You can find them via that link and it's pretty straight forward. Also I'd like to point out that you should rename close = (dict__file['c']) to something else as it will conflict with f.close(). Any way go to that link it should help you. You can do value = (dict_file[b'v']) but it might not work.</span>
<span class="comment-copy">thankyou, i will go read the link</span>
<span class="comment-copy">If you "watched and read a lot of python tutorials", you should know what <code>[...]</code> means in python</span>
<span class="comment-copy">thankyou very much i will go through what you have suggested</span>
<span class="comment-copy">@bobbin ping me when you solve the problem (or hit the wall again), I'll post a complete solution for you to check out. I thought it would be better for you if I don't post it right away. Cheers!</span>
<span class="comment-copy">import csv         with open('test_data.txt') as csvfile:     reader = csv.DictReader(csvfile)     for row in reader:         print(row['time'], row['open'], row['high'], row['low'], row['close'], row['volume'])       csvfile.close</span>
<span class="comment-copy">Igonato, i would love a full solution pls as im just stuck thankyou..is there a thanks button?</span>
<span class="comment-copy">@bobbin it's hard to read code from comments. Can you update your question instead? Also, please, describe what are you trying to do with the code and what goes wrong, show some effort, be more specific (see this FAQ post <a href="https://meta.stackoverflow.com/a/334823/723891">meta.stackoverflow.com/a/334823/723891</a>) You can vote on questions and answers on this site, I believe you need to earn 15 reputation first though</span>
