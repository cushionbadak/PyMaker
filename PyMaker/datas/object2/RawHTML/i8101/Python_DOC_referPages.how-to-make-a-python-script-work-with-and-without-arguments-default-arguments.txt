<div class="post-text" itemprop="text">
<p>I am trying to get a Python script to work regardless when an argument has been passed or not.</p>
<p>The goal is to make the script functional as "MyPython.py" and "MyPython.py 5" should be able to work. If no argument has been passed, then the argument should be 0.</p>
<p>The variable <code>imported_number</code> should by default be 0 but if an argument has been detected, then it should take whatever number the user has passed.</p>
<pre><code>import argparse

imported_number=0

parser = argparse.ArgumentParser()
parser.add_argument("opt_number", type=int, help="Provide a number please")
args = parser.parse_args()

if args.opt_number &gt; 0:
    imported_number=args.opt_number
    print "You provided me with the number " + imported_number
    print "You provided me with the number {}".format(args.opt_number)
else:
    print "You did not provide me with any number. Taking the default value, which is " + imported_number
</code></pre>
<p>Unfortunately I am getting the <code>error: too few arguments</code> error message.</p>
<p>Does anyone know of good and automated methods to get this task done? I'd appreciate it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>nargs</code>, <code>default</code>, <code>const</code> like this:   </p>
<pre><code>import argparse
parser = argparse.ArgumentParser()
parser.add_argument("opt_number", type=int, help="Provide a number please",
                    nargs='?', default=0, const=0)
args = parser.parse_args()
print(args)
</code></pre>
<p>Your opt_number will be initialized with 0 when no argument is provided.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can make your script a function that accepts and argument passed to it.</p>
<pre><code>import sys

def your_function(imported_number=0):
    #your code
if __name__=='__main__':
    try:
        imported_number=sys.argv[1]
    except:
        pass
    your_function(imported_number)
</code></pre>
</div>
<span class="comment-copy">Have you tried <code>nargs='?'</code> in <code>add_argument</code> ?</span>
<span class="comment-copy">Set a <a href="https://docs.python.org/3/library/argparse.html#default" rel="nofollow noreferrer">default</a> value?</span>
<span class="comment-copy">In a <code>positional</code> like this, <code>const</code>, while accepted as a parameter, does nothing.  You get either the default or the user value.  With an <code>optional</code> it is useful, providing a 3 way choice.</span>
<span class="comment-copy">Thanks mate! This was the trick that I was looking for. Simple and functional in any case.</span>
