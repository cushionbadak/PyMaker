<div class="post-text" itemprop="text">
<p>I am trying to get the word "Test" by taking each character out of the list using positions within it. </p>
<p>Here is my code:</p>
<pre><code>test1 = ["T", "E", "S", "T"]
one = test1[0:1]
two = test1[1:2]
three = test1[2:3]
four = test1[3:4]

print(one, two, three, four)
</code></pre>
<p>At the moment my output from the program is:</p>
<pre><code>['T'] ['E'] ['S'] ['T']
</code></pre>
<p>Although that does read "Test" it has [] around each letter which I don't want.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>[a:b]</code> returns a list with every value from index <code>a</code> until index <code>b</code>.
If you just want to access a singe value from a list you just need to point to the index of the value to access. E.g.</p>
<pre><code>s = ['T', 'e', 's', 't']

print(s[0])   # T
print(s[0:1]) # ['T']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is you are using slices of the list not elements. The syntax <code>l[i1,i2]</code> returns a list with all elements of <code>l</code> between the indices <code>i1</code> and <code>i2</code>. If one of them is out of bound you get an error. To do what you intended you can do: </p>
<pre><code>one = test[0]
two = test[1]
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have <em>slicing</em> and <em>indexing</em> confused. You are using slicing where you should use indexing.</p>
<p>Slicing always returns a new object of the same type, with the given selection elements. Slicing a list always gives you a list again:</p>
<pre><code>&gt;&gt;&gt; test1 = ["T","E","S","T"]
&gt;&gt;&gt; test1[1:3]
['E', 'S']
&gt;&gt;&gt; test1[:1]
['T']
</code></pre>
<p>while <em>indexing</em> uses individual positions only (no <code>:</code> colons to separate start and end positions), and gives you the individual elements from the list:</p>
<pre><code>&gt;&gt;&gt; test1[0]
'T'
&gt;&gt;&gt; test1[1]
'E'
</code></pre>
<p>Not that you need to use indexing at all. Use the <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join()</code> method</a> instead; given a separator string, this joins the string elements of a list together with that delimiter in between. Use the empty string:</p>
<pre><code>&gt;&gt;&gt; ''.join(test1)
'TEST'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this</p>
<pre><code>test1 = ["T","E","S","T"]
final = ""

for i in range(0, len(test1)):
    final = final  + str(test1[i])
</code></pre>
</div>
<span class="comment-copy">Take a look at this <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><code>str.join(iterable)</code> function</a>. You can accomplish what you want with <code>''.join(test1)</code>.</span>
<span class="comment-copy">Just use <code>''.join(test1)</code> to join the characters. Otherwise, <i>don't use slices</i>. Use indices: <code>test1[0]</code>.</span>
<span class="comment-copy">@LysandrosNikolaou: wrong way around.</span>
<span class="comment-copy">Haha, just saw it!</span>
<span class="comment-copy">Thanks for the help :)</span>
<span class="comment-copy">Thanks for the help :)</span>
