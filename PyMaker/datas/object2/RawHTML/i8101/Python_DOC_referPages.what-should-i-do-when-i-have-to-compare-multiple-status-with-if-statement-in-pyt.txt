<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/19389490/how-do-pythons-any-and-all-functions-work">How do Python's any and all functions work?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>Supposed that hi has hi[0]~hi[200] this range , and I want to proceed if statement only if hi[0~200] are include 1. 
If one of hi list has rather than 1 (ex) hi[5]==2), if statement should not proceed, but else statement runs.
What should I do..?
if hi[0]==1 and hi[1]==1 and ... etc
is this the only way? </p>
<pre><code>if hi[]==1:
    i =1
else:
    i=2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I understand your question correctly you want to check if all items within a range of the array have the value <code>1</code>?</p>
<p>You can do this by checking if any item is equal to 1 using <code>any</code> and a generator expression:</p>
<pre><code>if any(item != 1 for item in hi[start:end]):
    print("Error")
else:
    # Ok
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want to check if all the values in a given range are equal to <code>1</code>, you need <code>all</code>:</p>
<pre><code>hi = [1]*10

print(all(x == 1 for x in hi[0:7]))
</code></pre>
<p>returns <code>True</code> because all elements from 0 to 6 (inclusive) are 1. Now:</p>
<pre><code>hi[5] = 5

print(all(x == 1 for x in hi[0:7]))
</code></pre>
<p>returns <code>False</code> because not all elements from 0 to 6 are 1</p>
</div>
<div class="post-text" itemprop="text">
<p>Just loop through it like so:</p>
<pre><code>for i, el in enumerate(hi):
    if el != 1:  # go to the next iteration without doing anything else
        continue
    else:
        # your code goes here
</code></pre>
<blockquote>
<p>EDIT: based on OP's comment on @Andre's answer:</p>
</blockquote>
<pre><code>i = 1 if all(x == 1 for x in hi) else 0
</code></pre>
</div>
<span class="comment-copy">You're looking for the <code>any</code> or <code>all</code> keywords:  <code>if all(h == 1 for h in hi):</code>...</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/19389490/how-do-pythons-any-and-all-functions-work" title="how do pythons any and all functions work">stackoverflow.com/questions/19389490/â€¦</a> &lt;-- this is what I should have set as the dupe.</span>
<span class="comment-copy">@ScottMermelstein But you don't need <code>all()</code> for this necessarily, like <code>set(hi) == {1}</code></span>
<span class="comment-copy">@Chris_Rands that works, but I think it creates a set (and hashes) where an iteration would be faster. You're not reusing the <code>set</code>.</span>
<span class="comment-copy">@Chris_Rands From the Zen of Python <a href="https://www.python.org/dev/peps/pep-0020/" rel="nofollow noreferrer">Pep 20</a>: <code>There should be one-- and preferably only one --obvious way to do it.</code>  Which sounds more like "the one way": using sets in a valid but not intuitive way, or using a python keyword?  Also, OP specifically requests short circuiting behavior, which isn't in the sets.</span>
<span class="comment-copy">You could also use early stopping with a generator: <code>if any(hi[start:end], lambda item: item != 1)</code></span>
<span class="comment-copy">what I want to do is, when the value of  all items in hi is 1 , I want to put value 1 in i</span>
<span class="comment-copy">This doesn't work, because <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer"><code>any()</code></a> doesn't take a key/function argument. You "generally" use it with generator expressions: <code>any(x != 1 for x in hi[start:end])</code></span>
<span class="comment-copy">@BenHoyt oops just copy/pasted the suggestion from arya, rolling back.</span>
<span class="comment-copy"><code>for el in hi: if el == 1: # do something</code> would work too.</span>
<span class="comment-copy">Sure. Is that why I have a -1 now?</span>
<span class="comment-copy">Nope I am not the one who downvoted and actually I do not know why your answer got downvoted.</span>
