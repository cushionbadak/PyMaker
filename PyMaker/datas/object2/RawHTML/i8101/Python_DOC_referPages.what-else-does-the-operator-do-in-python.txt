<div class="post-text" itemprop="text">
<p>Besides being a less than operator, it seems to be doing something else here:</p>
<pre><code>import matplotlib.pyplot as plt
from skimage import io
from skimage import filters

camera = io.imread("img.png", True)
val = filters.threshold_otsu(camera)


newImg = camera &lt; val ######?

plt.subplot(132)
plt.imshow(newImg, cmap='gray')
plt.axis('off')


plt.tight_layout()
plt.show()
</code></pre>
<p>But I'm not sure what is going on, and the result is not a boolean. There doesn't seem to be anything online either. </p>
<p>Where can I read more about what this operator is doing?</p>
</div>
<div class="post-text" itemprop="text">
<p>In this particular case, <code>&lt;</code> is acting as an <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.less.html" rel="nofollow noreferrer">array comparison</a>.  Here you are comparing an array representing the image, with a value representing a threshold.</p>
<p>The result will be an array of booleans, representing those values that are less than the threshold.</p>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; numpy.array([1, 2, 3, 4, 5]) &lt; 3
array([ True,  True, False, False, False], dtype=bool)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Any object can overload comparison operators by <a href="https://docs.python.org/3/reference/datamodel.html#object.__lt__" rel="nofollow noreferrer">defining the right methods</a>:</p>
<blockquote>
<pre><code>object.__lt__(self, other)
object.__le__(self, other)
object.__eq__(self, other)
object.__ne__(self, other)
object.__gt__(self, other)
object.__ge__(self, other)
</code></pre>
<p>By convention, <code>False</code> and <code>True</code> are returned for a successful
  comparison. However, these methods can return any value […]</p>
</blockquote>
<p>So, it's up to the object what exactly a <code>&lt;</code> operation yields.</p>
</div>
<span class="comment-copy">I’m guessing it’s an array of <code>&lt;</code> performed on each corresponding element of the arrays?</span>
<span class="comment-copy">Why do you think the result is not a boolean array?</span>
<span class="comment-copy">Thanks! That helps a lot</span>
