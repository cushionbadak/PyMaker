<div class="post-text" itemprop="text">
<p>Is it possible to store a <code>@property</code> function inside a variable?</p>
<p>Imagine we have the following code:</p>
<pre><code>class I:
  def __init__(self):
    self.i = 0

  def get_i(self):
    return self.i

a = I()

f_i = a.get_i

print(f_i())

a.i = 3

print(f_i())
</code></pre>
<p>I save the function get_i inside a variable and use it. The output is as expected:</p>
<pre><code>0
3
</code></pre>
<p>Now lets look at the same code, but this time with an <code>@property</code> function:</p>
<pre><code>class I:
  def __init__(self):
    self.i = 0

  @property
  def get_i(self):
    return self.i

a = I()

f_i = a.get_i
</code></pre>
<p>Now <code>a.get_i</code> is not the function anymore (It is the value 0). Is there any way to still store the function inside the f_i variable?</p>
</div>
<div class="post-text" itemprop="text">
<p>The whole point of a <code>property</code> is that it is called on access. You'd have to bypass the <a href="https://docs.python.org/3/howto/descriptor.html" rel="nofollow noreferrer">descriptor protocol</a> to prevent this.</p>
<p>You can do this by accessing the <code>property</code> object on the class instead:</p>
<pre><code>f_i = I.get_i
</code></pre>
<p>then bind it to an instance later on:</p>
<pre><code>print(f_i.__get__(a))
</code></pre>
<p>Or you could access the <code>fget</code> getter function on the property object, bind it to <code>a</code> to create a bound method, and store the result for later calling:</p>
<pre><code>f_i = I.get_i.fget.__get__(a) 
print(f_i())
</code></pre>
<p>Accessing the property on the class still invokes the descriptor protocol, but in that case <code>property.__get__</code> returns the property itself.</p>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; a = I()
&gt;&gt;&gt; I.get_i
&lt;property object at 0x10efceb88&gt;
&gt;&gt;&gt; I.get_i.__get__(a)
0
&gt;&gt;&gt; I.get_i.fget
&lt;function I.get_i at 0x10efc3048&gt;
&gt;&gt;&gt; I.get_i.fget.__get__(a)
&lt;bound method I.get_i of &lt;__main__.I object at 0x10efd32e8&gt;&gt;
&gt;&gt;&gt; I.get_i.fget.__get__(a)()
0
</code></pre>
</div>
<span class="comment-copy"><code>I.get_i.fget.__get__(a)</code> is what I was searching for. Thanks!</span>
