<div class="post-text" itemprop="text">
<p>Let me preface this by saying that I am fairly new to coding, so be gentle.</p>
<p>I have been writing the following:</p>
<pre><code>def execute_move(player, house_choice, houses):

next_house=houses[house_choice]
chosen_house=houses[house_choice-1]
chosen_house_seeds=chosen_house[1]
for i in range(chosen_house_seeds):
    if player=='P1': # skips the store of the opposite player
        if next_house==houses[13]:
            next_house_index=houses.index(next_house) 
            new_nhi=next_house_index+1
            next_house=houses[new_nhi]
    elif player=='P2':
        if next_house==houses[6]:
            next_house_index=houses.index(next_house) 
            new_nhi=next_house_index+1
            next_house=houses[new_nhi]
    [(next_house[0], (next_house[1]+1)) if x==next_house else x for x in houses]
    next_house_index=houses.index(next_house) 
    new_nhi=next_house_index+1
    next_house=houses[new_nhi] 
[(chosen_house[0], (chosen_house[1]-chosen_house_seeds)) if x==chosen_house else x for x in houses]
return houses
</code></pre>
<p>My aim is to replace some of the tuples in the list 'houses', and then return the new list of tuples.</p>
<p>For some reason the var I assign the call to later on in the code only produces the original list when printed.</p>
<p>Im thinking that it may have something to do with the indentation of the 'if' statements or the indentation of the return statement.</p>
<p>Help much appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<p>There is nothing intrinsically special about a <code>return</code> statement when compared to other Python statements.</p>
<p>As such, you should <em>indent</em> it as you would any other (i.e., by placing the <code>return</code> line  inside the block that makes sense in your specific algorithm). </p>
</div>
<div class="post-text" itemprop="text">
<p>Any control structure (such as an if statement) expects the next line to be indented.  The control structure ends when the code begins to go back to the original level</p>
<p><a href="https://docs.python.org/3/reference/lexical_analysis.html#indentation" rel="nofollow noreferrer">https://docs.python.org/3/reference/lexical_analysis.html#indentation</a></p>
<pre><code>def function(input):
    input = input * 2
    if (input &gt; 5):
        input * 2
        return input
    input +1
    return input
</code></pre>
<p>so in this case, if the input is &lt; 2.5, it is returned doubled + 1.  If it is &gt;2.5 it is returned * 4</p>
<p>It is probably just a bad cut and paste, but the body of the function must be indented as well.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your list comprehension statements, those that look like <code>[(next_house[0], ...]</code> are building lists but it's not assigned to anything so it is being discarded.  Try setting result to a variable...</p>
<pre><code>list_of_next_house_tuples = [(next_house[0], (next_house[1]+1)) if x==next_house else x for x in houses]
</code></pre>
<p>Then determine what you are going to do with this new list.</p>
</div>
<span class="comment-copy">Thank you! That was the fix.</span>
