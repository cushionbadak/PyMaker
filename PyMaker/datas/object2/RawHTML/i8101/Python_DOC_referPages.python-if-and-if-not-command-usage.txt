<div class="post-text" itemprop="text">
<pre><code>#!/usr/bin/python
import os
import re
path=os.getcwd()
list_dir=os.listdir(path+'//Osativa')
if not os.path.exists('results'):
    os.makedirs('results') 
fo1=open('./results/annotation.txt','w')
f1=open(path+'//CLEAN FILE.csv').readlines()
f2=open(path+'//Osativa//Osativa_323_v7.0.annotation_info.txt').readlines()
#num=0
for line in f1:
    locus_id=line.split(',')[1]
    if locus_id.startswith('LOC'):
        #num +=1
        #print(num)
        #print (locus_id)
        #num1=0
        for line1 in f2:
            if locus_id==line1.split()[1]:
                #num1+=1
                #print (num1)
                #print locus_id
                transcript=line1.split()[2]
                if transcript.startswith('LOC'):
                    #print (locus_id+'\t'+transcript)
                    for i in line1.split():
                         if i.startswith('PF'):
                              print (locus_id+'\t'+transcript+'\t'+i)
                              if not i.startswith('PF'):
                                  print (locus_id+'\t'+transcript+'\t'+'\t')
</code></pre>
<p>My question is, if there is no PF id for a particular gene, I want to type tab key there (remain as a space). So how should I do that?
Also, I want to get this output into an excel file, so if some genes don't have a PF id, I can see a space there. I think my question can be understood. Finally, I want to get the output into another txt file</p>
</div>
<div class="post-text" itemprop="text">
<p>you have problems with indentation, also it is better to use <a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements" rel="nofollow noreferrer"><code>else</code> block</a> here</p>
<pre><code>for line in f1:
    locus_id = line.split(',')[1]
    if locus_id.startswith('LOC'):
        # num +=1
        # print(num)
        # print (locus_id)
        # num1=0
        for line1 in f2:
            if locus_id == line1.split()[1]:
                # num1+=1
                # print (num1)
                # print locus_id
                transcript = line1.split()[2]
                if transcript.startswith('LOC'):
                    # print (locus_id+'\t'+transcript)
                    for i in line1.split():
                        if i.startswith('PF'):
                            print(locus_id + '\t' + transcript + '\t' + i)
                        else:
                            print(locus_id + '\t' + transcript + '\t' + '\t')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As stated already, your <code>for</code> loop and <code>if</code> logic are a bit jumbled. I'm not sure what the exact behavior should be, so here's a suggestion.</p>
<pre><code># print the common part first with no trailing newline
# using a format string
print('{}\t{}\t'.format(locus_id, transcript), end='')
for i in line1.split():
    if i.startswith('PF'):
        print(i)
        # this stops after the first match, your code would
        # print for each match found. Not sure what you want.
        break
# for loop else, means if there was no "break"
else:
    print('\t')
</code></pre>
<p>What's it supposed to do?</p>
<ol>
<li>only print once if a <code>PF</code> is found</li>
<li>print for each <code>PF</code> found</li>
<li>optionally print the line with the <code>\t</code> for each element that isn't a <code>PF</code> </li>
</ol>
<p>As an example of refactoring, create a function to extract the <code>PF</code> or return TAB.</p>
<pre><code>def get_first_PF(items):
    for i in items:
        if i.startswith('PF'):
            return i
    return '\t'
</code></pre>
<p>Then, your code in that block becomes this:</p>
<pre><code>print('{}\t{}\t{}'.format(
    locus_id,
    transcript,
    get_first_PF(line1.split())
))
</code></pre>
</div>
<span class="comment-copy">Do you know about the existence of <code>else</code>, <code>if</code>'s brother?</span>
<span class="comment-copy">your indentation is incorrect... <code>if not i.startswith('PF'):</code> will never be run because it's inside a block code that runes only if <code>if i.startswith('PF'):</code>. Use what Force suggest, or proper indentation.</span>
<span class="comment-copy">When your indentation is reaching all the way to the right of the screen, it's time to refactor your code a little.</span>
<span class="comment-copy">Suggestions: use better variable names; extract your <code>for line1 in f2</code> loop into a function; use unpacking <code>_, locus_id, transcript, the_rest = line1.split(maxsplit=3)</code>; use this pattern: <code>with open(path+'//CLEAN FILE.csv') as f:  f1_lines = f.readlines()</code></span>
