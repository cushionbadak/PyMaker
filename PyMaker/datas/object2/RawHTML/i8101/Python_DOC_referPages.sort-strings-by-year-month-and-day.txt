<div class="post-text" itemprop="text">
<p>I'm quite new to Python. </p>
<p><strong>Basic problem:
Extract a sorted list of file names by year, month and day from directory</strong></p>
<p>I'm writing a script that search for the latest bak</p>
<p>file in directory and importing it to database. </p>
<p>Files have the following format:</p>
<pre><code>MyDB_05-09-2017.bak

MyDB_05-10-2017.bak
</code></pre>
<p>I wish to extract the most up to date bak file by the file name. </p>
<p>I want to sort the files by year,month and day.</p>
<p><strong>This is some basic implementation I have tried:</strong></p>
<pre><code>import glob,os,re
from datetime import datetime

# SQL server backup directory
os.chdir('C:\\SQLServerBackups')

# invoke the sql script to drop the database if exists
os.system('C:\\SQLServerBackups\\database_sql_scripts\\drop_database.bat')

# find the latest .bak file and rename it to target

file_list = glob.glob('*.bak')
latest_bak_file = file_list[0]
latest_year = 0
latest_month = 0
latest_day = 0

for file in file_list:
    print(file)
    del_list = re.split('[-._]',file)
    temp_latest_year = int(del_list[3])
    temp_latest_month = int(del_list[1])
    temp_latest_day = int(del_list[2])

    if temp_latest_year &gt; latest_year:
        latest_year = temp_latest_year
        latest_month = temp_latest_month
        latest_day = temp_latest_day
    elif temp_latest_year == latest_year:
        if temp_latest_month &gt; latest_month:
            latest_month = temp_latest_month
            latest_day = temp_latest_day
        elif temp_latest_month == latest_month:
            if temp_latest_day &gt; latest_day:
                latest_day = temp_latest_day
                latest_bak_file = file

print(latest_bak_file)
</code></pre>
<p>Any advice on how can I implement it better?</p>
<p>I wish to have a sorted list of file names by year,month and day. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can just define a sort key function that returns the fields you want to sort by:</p>
<pre><code>import re

fnames = [
    "MyDB_05-10-2017.bak",
    "MyDB_05-09-2017.bak",
]

def sortkey(x):
    parts = re.split('[-._]', x)
    return [int(parts[3]), int(parts[1]), int(parts[2])]

sorted_fnames = sorted(fnames, key=sortkey)
</code></pre>
<p>or, as @Klaus D said, use <code>datetime.strptime</code> in your search key:</p>
<pre><code>sorted_fnames = sorted(fnames, key=lambda x: datetime.datetime.strptime(x, 'MyDB_%d-%m-%Y.bak'))
</code></pre>
</div>
<span class="comment-copy">Oh dear, but there's a built-in <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code></a> function</span>
<span class="comment-copy">As is said I'm really new to python and I have tried to see if I can use that function but I can't seem to figure out how to use it in this situation.  I'll look into this function again and see how to implement it better...</span>
<span class="comment-copy">Use datetime: <code>datetime.strptime('MyDB_05-09-2017.bak', 'MyDB_%d-%m-%Y.bak')</code></span>
<span class="comment-copy">Yea, that can do the trick nicely! thanks!  I'll try to implement it and see if it works.</span>
