<div class="post-text" itemprop="text">
<p>Im trying to delete all words from a list that include duplicate letters (to start with 'd' and 'r' for testing) but cannot get it check all the letters i want it to. </p>
<pre><code>a = ["word","worrd","worrrd","wordd"]
alpha = ['d','r']
i = 0
x = 0
while x in range(0, len(alpha)):
    while i in range(0, len(a)):
        if a[i].count(alpha[x]) &gt; 1:
            del(a[i])
            i = i - 1
        else:
            i = i + 1
    x = x + 1
print(a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you doing it right but you forgot to reset the value of "i" in while loop of x</p>
<pre><code>a = ["word","worrd","worrrd","wordd"]
alpha = ['d','r']
x = 0
while x in range(0, len(alpha)):
    # i should be reset here
    i = 0
    while i in range(0, len(a)):
        if a[i].count(alpha[x]) &gt; 1:
            del(a[i])
            i = i - 1
        else:
            i = i + 1
    x = x + 1
print(a)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Short solution using <a href="https://docs.python.org/3/library/re.html#re.search" rel="nofollow noreferrer"><strong><em>re.search()</em></strong></a> function:</p>
<pre><code>import re

a = ["word","worrd","worrrd","wordd"]
result = [w for w in a if not re.search(r'([dr]).*\1', w)]

print(result)
</code></pre>
<p>The output:</p>
<pre><code>[word]
</code></pre>
<hr/>
<p><code>([dr]).*\1</code> - regex pattern to check if some letter from character class <code>[dr]</code> occurs at least twice within a word</p>
<p><code>.*</code> - matches 0 or more characters</p>
<p><code>\1</code> - points to the first captured group <code>(...)</code></p>
<hr/>
<p>Another short alternative is using built-in <a href="https://docs.python.org/3/library/functions.html?highlight=all#all" rel="nofollow noreferrer"><strong><em>all()</em></strong></a> function:</p>
<pre><code>a = ["word","worrd","worrrd","wordd"]
alpha = ['d','r']
result = [w for w in a if all(w.count(c) == 1 for c in alpha)]

print(result)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is your method only except I just added i = 0 after first while loop</p>
<pre><code>a = ["word","worrd","worrrd","wordd"]
alpha = ['d','r']
i = 0
x = 0
while x in range(0, len(alpha)):
    i = 0
    while i in range(0, len(a)):
        if a[i].count(alpha[x]) &gt; 1:
            del(a[i])
            i = i - 1
        else:
            i = i + 1
    x = x + 1
print(a)

['word']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you likely are after, is when you have two d:s or r:s in a row. Then you want a regex as:</p>
<pre><code>import re

a = ["word","worrd","worrrd","wordd", "worded"]
result = [w for w in a if not re.search(r'(dd)|(rr)', w)

print(result)
</code></pre>
</div>
<span class="comment-copy">you are not resetting i in "x" loop therefore, this cause issues in matching for next character.</span>
<span class="comment-copy">Thank you, Don't know how i missed that. :)</span>
<span class="comment-copy">i want to retain my method but it only checks the first character of the alpha list</span>
<span class="comment-copy">@EllisRourke, check my alternative approach</span>
<span class="comment-copy">That will also falsely flag words like <code>banana</code>.</span>
<span class="comment-copy">@L3viathan He wants to check for d and r only</span>
<span class="comment-copy">Well, <code>rider</code>, then.</span>
<span class="comment-copy">Duplicate letter with d and r, not both. That's what I am able to interpret after seeing his program and his question</span>
