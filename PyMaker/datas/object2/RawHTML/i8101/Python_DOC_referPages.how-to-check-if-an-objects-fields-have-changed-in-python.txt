<div class="post-text" itemprop="text">
<p>I have class like this:</p>
<pre><code>class Point(object):
    def __init__(self, x, y):
        self.x = x
        self.y = y
</code></pre>
<p>I create an instance of this class by:</p>
<pre><code>p1 = Point(5, 10)
</code></pre>
<p>I want to know if any field of this class was changed. I suppose that there can be some kind of hash function which results I can compare.</p>
<p>For example, in bash I can write <code>md5sum &lt;&lt;&lt;"string"</code>, <code>md5sum &lt;&lt;&lt;"string"</code> in order to get <code>x</code>, <code>y</code> respectively. Then I can compare <code>x</code> and <code>y</code> to find out if they are different or not. </p>
<p>Is there an analogous method which works on Python's object?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can simply achieve that by overriding <code>__setattr__</code> class method.</p>
<pre><code>In[6]: class Point(object):
           def __init__(self, x, y):
               self.x = x
               self.y = y
               self._changed = False

           def __setattr__(self, key, value):
               if key != '_changed':
                   self._changed = True
               super(Point, self).__setattr__(key, value)

           def is_changed(self):
               return self._changed

In[7]: p = Point(2,3)
In[8]: p.is_changed()
Out[8]: False
In[9]: p.x = 23
In[10]: p.is_changed()
Out[10]: True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, there is a way to hash all the instance variables to detect changes:</p>
<pre><code>&gt;&gt;&gt; p1 = Point(5, 10)
&gt;&gt;&gt; h = hash(frozenset(vars(p1).items()))        # Record a hash checksum
&gt;&gt;&gt; h == hash(frozenset(vars(p1).items()))       # Check for changes 
True
&gt;&gt;&gt; p1.x += 1                                    # Change the object data
&gt;&gt;&gt; h == hash(frozenset(vars(p1).items()))       # Check for changes
False
</code></pre>
<p>The technique uses:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#vars" rel="nofollow noreferrer">vars()</a> to access the instance dictionary</li>
<li><a href="https://docs.python.org/3/library/stdtypes.html#dict.items" rel="nofollow noreferrer">items()</a> to get the key and values as a list of tuples</li>
<li><a href="https://docs.python.org/3/library/functions.html#func-frozenset" rel="nofollow noreferrer">frozenset()</a> to make a hashable unordered</li>
<li><a href="https://docs.python.org/3/library/functions.html#hash" rel="nofollow noreferrer">hash()</a> to compute the checksum</li>
</ul>
</div>
