<div class="post-text" itemprop="text">
<p>I'm trying to use a "haze" character - <code>ACS_CKBOARD</code> - as a background, with a custom foreground and background color.</p>
<p>This appears to work okay, but when I call <code>addstr</code> to show text on top of the background, the text is garbled. It appears to be a selection of "alternate characters" in place of my "Hello, world!", except of course that some few normal letters show through.</p>
<p>Here's a small screen capture:</p>
<p><a href="https://i.stack.imgur.com/gekk7.png" rel="nofollow noreferrer"><img alt="iTerm2 Screen with background set to CKBOARD, mangled text in front" src="https://i.stack.imgur.com/gekk7.png"/></a></p>
<p>I'm assuming that something has jammed up inside curses. Does anyone know how I can get the correct text to display against this background?</p>
<p>Here's some code that produces the behavior:</p>
<pre><code>import curses
import locale

def main(scr):
    curses.init_color(2, 650, 407, 160) # brown
    curses.init_color(6, 149, 113, 78)  # tan
    curses.init_pair(1, 2, 6)
    scr.bkgd(curses.ACS_CKBOARD, curses.color_pair(1))
    scr.clear()
    scr.addstr(10, 0, 'Hello, world!', curses.color_pair(0))
    scr.getch()


if __name__ == "__main__":
    locale.setlocale(locale.LC_ALL, '')
    curses.wrapper(main)
</code></pre>
<p>FWIW: I'm using iTerm2 on a Mac, Python version 3.5.3. If I run the same code in Terminal, I get a similar result with the wrong color:</p>
<p><a href="https://i.stack.imgur.com/MojRe.png" rel="nofollow noreferrer"><img alt="Mac Terminal screen with background set to CKBOARD, mangle text in front" src="https://i.stack.imgur.com/MojRe.png"/></a></p>
<p><strong>Update:</strong></p>
<p>After reading Thomas Dickey's answer, I tried to implement what he suggested. I tried setting the <code>bkgd</code> followed by both <code>clear</code> and <code>erase</code> followed by another call to set the <code>bkgd</code>. That didn't work- I got the color without the background characters. Looking at the documentation for <code>bkgd</code>, it does specify that <em>"The change is then applied to every character position in that window",</em> so that's right out!</p>
<p>Then I found <a href="https://docs.python.org/3/library/curses.html#curses.window.bkgdset" rel="nofollow noreferrer"><em>window.</em><code>bkgdset(char[, attr])</code></a>, which <em>does not</em> immediately apply it's setting to every character position. Instead, it just applies to newly-drawn bits. With that function, I modified my code as follows:</p>
<pre><code>    curses.init_pair(1, 2, 6)
    scr.bkgd(curses.ACS_CKBOARD, curses.color_pair(1))
    scr.erase()
    scr.bkgdset(' ', curses.color_pair(1))
    scr.addstr(10, 0, 'Hello, world!', curses.color_pair(0))
</code></pre>
<p>And that works! Here's a screenshot to show the result:</p>
<p><a href="https://i.stack.imgur.com/k4Qpt.png" rel="nofollow noreferrer"><img alt="iTerm2 screen with background ACS_CKBOARD, with clear text" src="https://i.stack.imgur.com/k4Qpt.png"/></a></p>
<p>Thanks, Thomas, for the suggestion about resetting the background after the paint!</p>
</div>
<div class="post-text" itemprop="text">
<p>The <strong>background character</strong> (which you have set with <code>scr.bkgd</code>) is a combination of video attribute, color pair and character which is merged with other characters added to the screen, e.g., via <code>scr.addstr</code>.</p>
<p>For what it's worth, X/Open Curses documents the feature in <a href="http://pubs.opengroup.org/onlinepubs/7908799/xcurses/intov.html#tag_001_004_004" rel="nofollow noreferrer"> Rendition of Characters Placed into a Window</a>.</p>
<p>The alternate character set aspect is one of those video attributes, and as documented by X/Open Curses:</p>
<blockquote>
<p>the attributes specified, OR-ed with the window attributes. </p>
</blockquote>
<p>If you don't want that, you can</p>
<ul>
<li>temporarily set the background, erase the window (filling the background) and reset the background without the alternate character set, e.g.,</li>
</ul>
<pre>
    scr.bkgd(curses.ACS_NORMAL, curses.color_pair(1))
</pre>
<ul>
<li>use a different method for adding characters to the screen.  The underlying curses library <a href="http://invisible-island.net/ncurses/man/curs_addchstr.3x.html" rel="nofollow noreferrer">waddchstr</a> passes the video attributes directly (no merging).  But it does not appear to be part of the Python binding (nothing similar in the <a href="https://docs.python.org/2/library/curses.html" rel="nofollow noreferrer">reference manual)</a>.  The <em>attr</em> parameter of <a href="https://docs.python.org/2/library/curses.html#curses.window.addstr" rel="nofollow noreferrer"><code>addstr</code></a> likely refers to the <em>window attribute</em> (set with a similar function (in X/Open curses, the "window colour").</li>
</ul>
<p>Given the available functions (and limitations of the binding), calls with <code>scr.bkgd</code> are the way to solve the problem.</p>
</div>
<span class="comment-copy">Brilliant! Thanks. (See update.)</span>
