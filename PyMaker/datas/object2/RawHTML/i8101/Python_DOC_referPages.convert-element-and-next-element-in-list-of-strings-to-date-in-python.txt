<div class="post-text" itemprop="text">
<p>I am new to Python and am having trouble with the following string:</p>
<blockquote>
<p>Order now for free delivery loose on Tuesday, April 25 or set in
  jewelry on Tuesday, April 29.</p>
</blockquote>
<p>I have converted it to a list of strings with <code>.split()</code>.  However, I cannot figure out how to iterate through the list to pull out the dates such as April 25 and April 29. Once I pull these strings out, I know I can convert them to a date format with <code>datetime.strptime(string, '%B %d')</code> with <code>string</code> being "April 25" and "April 29" and can apply a date-diff function.</p>
<p>I think I need to pull both list elements that contain month names as strings and the next element with the day of the month to combine them in order to convert them to date format.  </p>
<p>Any assistance would be much appreciated.  Thank you in advance. </p>
</div>
<div class="post-text" itemprop="text">
<p>Praise the power of regular expressions here:</p>
<pre><code>import re
from datetime import datetime

s = "Order now for free delivery loose on Tuesday, April 25 or set in jewelry on Tuesday, April 29."

# regex looking for dates in the given format
rx = re.compile(r'''
            (?:(?:Mon|Tues|Wednes|Thurs|Fri|Satur|Sun)day),\s+
            (?:January|February|March|April|May|June|July|August|September|October|November|December)\s+
            \d+
            ''', re.VERBOSE)

dates = [datetime.strptime("{} #{}".format(m.group(0), "2017"), '%A, %B %d #%Y') 
        for m in rx.finditer(s)]
print(dates)
# [datetime.datetime(2017, 4, 25, 0, 0), datetime.datetime(2017, 4, 29, 0, 0)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If it's intended for the current <strong><em>2017</em></strong> year, the solution using <br/><a href="https://docs.python.org/3.6/library/calendar.html#calendar.day_name" rel="nofollow noreferrer"><strong><em>calendar.day_name</em></strong></a> (the days of the week),<br/> <a href="https://docs.python.org/3.6/library/calendar.html#calendar.month_name" rel="nofollow noreferrer"><strong><em>calendar.month_name</em></strong></a> (the months of the year) <br/>and <a href="https://docs.python.org/3/library/datetime.html#datetime.datetime.strptime" rel="nofollow noreferrer"><strong><em>datetime.strptime()</em></strong></a> function:</p>
<pre><code>import calendar, datetime

s = 'Order now for free delivery loose on Tuesday, April 25 or set in jewelry on Tuesday, April 29'
day_names = '|'.join(list(calendar.day_name))  # Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday
month_names = '|'.join(list(calendar.month_name[1:]))
dates = re.findall(r'((' + day_names + '), (' + month_names + ') \d{1,2})', s)
datetimes = [datetime.datetime.strptime(d[0] + ' 2017', '%A, %B %d %Y') for d in dates]

print(datetimes)
</code></pre>
<p>The output:</p>
<pre><code>[datetime.datetime(2017, 4, 25, 0, 0), datetime.datetime(2017, 4, 29, 0, 0)]
</code></pre>
</div>
<span class="comment-copy">This is the right way to do that. You can also use <a href="https://pypi.python.org/pypi/dateparser" rel="nofollow noreferrer">dateparser</a> library to parse the date.</span>
