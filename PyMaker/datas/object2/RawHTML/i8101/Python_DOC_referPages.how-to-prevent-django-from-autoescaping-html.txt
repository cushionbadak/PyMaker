<div class="post-text" itemprop="text">
<p>I entered a <code>responsibility.description</code> via the Django Admin panel that contained an embedded <code>&lt;a&gt;</code>.  When showing it in the template I want the <code>&lt;a&gt;</code> to appear as a link instead of being escaped as <code>&amp;lt;a&amp;rt;</code>. </p>
<p>I found this advice (<a href="https://stackoverflow.com/questions/1593052/how-to-disable-autoescape-in-django-feeds">How to disable autoescape in django feeds?</a>) but still doesn't seem to work for me.</p>
<p>I've tried marking it as <code>safe</code>:</p>
<pre><code>{% for responsibility in software.responsibilities.all %}
    &lt;li&gt;{{ responsibility.description|safe }}&lt;/li&gt;
{% endfor %}
</code></pre>
<p>and also turning <code>autoescape</code> off:</p>
<pre><code>{% for responsibility in software.responsibilities.all %}
    {% autoescape off %}
        &lt;li&gt;{{ responsibility.description }}&lt;/li&gt;
    {% endautoescape %}
{% endfor %}
</code></pre>
<p>Am I missing something or are there any other methods I can try?</p>
<p>Here is the data that is stored in the database:</p>
<pre><code>&gt;&gt;&gt; Responsibility.objects.filter(id=38)
&lt;QuerySet [&lt;Responsibility: Created and ran test suites using a proprietary testing framework for “Stubbs the Zombie” (&lt;a target="_blank" href="http://www.imdb.com/title/tt0498128/fullcredits?ref_=tt_cl_sm#cast"&gt;credited&lt;/a&gt;), a game for Windows, Mac, and X-Box written in C/C++ utilizing the Halo game engine.&gt;]&gt;
</code></pre>
<p>and here is how it appears in the html:</p>
<pre><code>&lt;li&gt;Created and ran test suites using a proprietary testing framework for "Stubbs the Zombie" (&amp;lt;a target="_blank" href="http://www.imdb.com/title/tt0498128/fullcredits?ref_=tt_cl_sm#cast"&amp;gt;credited&amp;lt;/a&amp;gt;), a game for Windows, Mac, and X-Box written in C/C++ utilizing the Halo game engine.&lt;/li&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/html.html#html.unescape" rel="nofollow noreferrer">html's</a> module, <code>unescape</code> method witch:</p>
<blockquote>
<p>Convert all named and numeric character references (e.g. &gt;, &gt;,
  &amp;x3e) in the string s to the corresponding unicode characters.</p>
</blockquote>
<p>You can use it in one or both of the following ways:</p>
<ol>
<li><p>When you receive data to be stored in the database (<code>POST</code>, <code>PUT</code> etc.):</p>
<pre><code>from html import unescape

to_be_stored = unescape(input_data)
</code></pre>
<p>Then store <code>to_be_stored</code> in your database</p></li>
<li><p>When you send data from the database to the template (<code>GET</code>, <code>LIST</code> etc.):</p>
<pre><code>from html import unescape

class MyView():
    ...
    def get(self):
        ...
        responsibility = Responsibility.objects.filter(id=your_id)
        response['responsibility'] = unescape(responsibility.description)
        ...
</code></pre>
<p>Then <code>return</code>/<code>render</code>/etc the response.</p></li>
</ol>
</div>
<span class="comment-copy">Oops sorry that was an extremely silly fastest gun in the west answer without looking on my part.  No you seem to be doing it right. Can you post some sample data and show how it appears now and how it should appear</span>
<span class="comment-copy">is that only &lt;a&gt; or is it something like &lt;a href="something.com"&gt;something&lt;/a&gt;</span>
<span class="comment-copy">@e4c5 haha, no problem.  I have done the same thing before myself. :)  I added what the data looks like in the database and how it looks in the html.  Hope that helps.</span>
<span class="comment-copy">@Exprator, right it's &lt;a href...&gt; like you suggested if you want to take a look.</span>
<span class="comment-copy">I would question the question. Why are you storing html in the database at all?</span>
<span class="comment-copy">thanks for the server-side solution, was only looking at client-side solutions.</span>
<span class="comment-copy">No problem mate :)</span>
