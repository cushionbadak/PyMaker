<div class="post-text" itemprop="text">
<p>I am not very familiar with python. I am using <code>scikit-learn</code> with python 3.5. This may be a naive question.</p>
<p>In the <code>site-pacakges\sklearn</code> folder, I can see a <code>__init__.py</code> file. So the <code>sklearn</code> should be a <strong>package</strong> according to the <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">doc</a>. But when I run below code, it says <code>sklearn</code> is a <strong>module</strong>.</p>
<pre><code>In [21]: sklearn
Out[21]: &lt;module 'sklearn' from '/home/python35/lib/site-packages/sklearn/__init__.py'&gt;
</code></pre>
<p>Shouldn't it be <code>package 'sklearn'</code> instead of <code>module 'sklearn'</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>All Python packages are of type <code>module</code>.</p>
<p>From the <a href="https://docs.python.org/3/glossary.html#term-package" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>Technically, a package is a Python module with a <code>__path__</code> attribute.</p>
</blockquote>
<pre><code>&gt;&gt;&gt; import numpy # numpy package
&gt;&gt;&gt; type(numpy)
&lt;type 'module'&gt;
&gt;&gt;&gt; numpy.__path__
['/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/numpy']
&gt;&gt;&gt;
&gt;&gt;&gt; import collections  # collections module
&gt;&gt;&gt; collections.__path__
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: 'module' object has no attribute '__path__'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Shouldn't it be package 'sklearn' instead of module 'sklearn'?</p>
</blockquote>
<p>No. A package contains several modules (like a directory contains several files)</p>
</div>
<span class="comment-copy">Thanks. So why doesn't a module have a <code>__path___</code> attribute? As I understand, a module is <code>.py</code> file and a package is a folder containing several <code>.py</code> files among which there's a <code>__init__.py</code> file. Since both folder and file have paths, I think both package and module <b>can</b> have <code>__path__</code> attribute.</span>
<span class="comment-copy">Probably because paths in Python have more to do with directories (packages) than files (modules). Besides, most modules already have a <code>__file__</code> attribute.</span>
