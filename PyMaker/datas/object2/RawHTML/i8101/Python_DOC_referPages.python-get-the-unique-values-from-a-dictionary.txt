<div class="post-text" itemprop="text">
<p>I want to get the unique values from my dictionary.</p>
<p>Input:</p>
<pre><code>{320: [167], 316: [0], 319: [167], 401: [167], 319: [168], 380: [167], 265: [166]}
</code></pre>
<p>Desired Output:</p>
<pre><code>[167,0,168,166]
</code></pre>
<p>My code :</p>
<pre><code>unique_values = sorted(set(pff_dict.itervalues()))
</code></pre>
<p>But I'm getting this error : <code>TypeError: unhashable type: 'list'</code></p>
</div>
<div class="post-text" itemprop="text">
<p>It is not clear why you are mapping to single-item lists as values, but you can use a list comprehension to extract the elements.</p>
<pre><code>foobar = {320: [167], 316: [0], 319: [167], 401: [167], 319: [168], 380: [167], 265: [166]}
print list(set([x[0] for x in foobar.values()]))
</code></pre>
<p>If you start out by mapping directly to values though, the code can be much simpler.</p>
<pre><code>foobar = {320: 167, 316: 0, 319: 167, 401: 167, 319: 168, 380: 167, 265: 166}
print list(set(foobar.values()))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Lists do not qualify as candidate set content because they are <em>unhashable</em>.</p>
<p>You can merge the items into one container using <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer"><code>itertoos.chain.from_iterable</code></a> before calling <code>set</code>:</p>
<pre><code>from itertools import chain

unique_values = sorted(set(chain.from_iterable(pff_dict.itervalues())))
</code></pre>
<p>Note that using <code>itertools</code> does not violate your choice of <code>dict.itervalues</code> over <code>dict.values</code> as the unwrapping/chaining is done <em>lazily</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>set</code> expect an elements not list of list, So you have to create a list of elements using <code>list comprehension</code> </p>
<pre><code>In [34]: sorted(set([i[0] for i in d.values()]))
Out[34]: [0, 166, 167, 168]
</code></pre>
</div>
<span class="comment-copy">The name given to the dict is pure gold.</span>
