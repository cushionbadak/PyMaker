<div class="post-text" itemprop="text">
<p>When I run my crawler it fetches the results as list. However, I expected to have that in regular string being displayed in two columns. Thanks for any suggestion.</p>
<pre><code>import requests
from lxml import html

url="http://www.wiseowl.co.uk/videos/"
def Startpoint(links):
    response = requests.get(links)
    tree = html.fromstring(response.text)
    Title= tree.xpath("//p[@class='woVideoListDefaultSeriesTitle']/a/text()")
    Link=tree.xpath("//p[@class='woVideoListDefaultSeriesTitle']/a/@href")
    print(Title,Link)

Startpoint(url)
</code></pre>
<p>Having results like this:
<a href="https://i.stack.imgur.com/18ort.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/18ort.jpg"/></a></p>
<p>But, I expected the output like:
<a href="https://i.stack.imgur.com/lKKWl.jpg" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/lKKWl.jpg"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>Try iterating over both list sequentially, like this:</p>
<pre><code>import requests
from lxml import html

url="http://www.wiseowl.co.uk/videos/"
def Startpoint(links):
    response = requests.get(links)
    tree = html.fromstring(response.text)
    Title= tree.xpath("//p[@class='woVideoListDefaultSeriesTitle']/a/text()")
    Link=tree.xpath("//p[@class='woVideoListDefaultSeriesTitle']/a/@href")
    for i,j in zip(Title, Link):
        print('{:&lt;70}{}'.format(i,j))

Startpoint(url)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>Title</code> and <code>Link</code> actually don't contain a single element, but both contain <strong>lists</strong> of all the titles and links respectively (those XPath expressions match multiple elements).</p>
<p>So in order to get a list of <code>title, link</code> pairs, you need to <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a> them together:</p>
<pre><code>pairs = zip(titles, links)
</code></pre>
<p>Once you got that, you can iterate over those pairs using a <code>for</code> loop, and print the items left justified so you get your columns:</p>
<pre><code>print('{:&lt;70}{}'.format(title, link))
</code></pre>
<p><em>(See <a href="https://stackoverflow.com/questions/12684368/how-to-left-align-a-fixed-width-string">this answer</a> for details on how to print left aligned items).</em></p>
<hr/>
<p>Everything together:</p>
<pre><code>import requests
from lxml import html

url = "http://www.wiseowl.co.uk/videos/"


def startpoint(links):
    response = requests.get(links)
    tree = html.fromstring(response.text)
    titles = tree.xpath("//p[@class='woVideoListDefaultSeriesTitle']/a/text()")
    links = tree.xpath("//p[@class='woVideoListDefaultSeriesTitle']/a/@href")
    pairs = zip(titles, links)

    for title, link in pairs:
        # Replace '70' with whatever you expect the maximum title length to be
        print('{:&lt;70}{}'.format(title, link))

startpoint(url)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can loop over each link and print the title and url.</p>
<pre><code>import requests
from lxml import html

url="http://www.wiseowl.co.uk/videos/"
def Startpoint(links):
    response = requests.get(links)
    tree = html.fromstring(response.text)
    links = tree.xpath("//p[@class='woVideoListDefaultSeriesTitle']/a")
    for link in links:
        print('{title:&lt;70}{url}'.format(title=link.text, url=link.attrib.['href']))

Startpoint(url)
</code></pre>
</div>
<span class="comment-copy">Wow!!! This is what I was expecting. Thanks sir Shashank, for such a great solution. Usage of those triple "t" is vague to me, though! Forgive my ignorance. Gonna accept you answer in a while.</span>
<span class="comment-copy">Oh yes, Actually your output was having some spaces so I added that, sorry for that :P because I was trying to do some string manipulation but I failed. but still the output is correct</span>
<span class="comment-copy">Thanks sir Lukas Graf, your answer solves the problem too.</span>
<span class="comment-copy">Thanks sir HÃ¥ken Lid, for you answer. It also solves the problem.</span>
