<div class="post-text" itemprop="text">
<p>I have a PostgreSQL table that has a column with an array of tags (an array datatype in the tags column). Using Peewee (the python ORM), I would like to select all rows where any of the tags matches a part/substring of any string in a list.</p>
<p>So, for example, I could have a list that looks like this:</p>
<pre><code>["stan", "tina"]
</code></pre>
<p>and that should match all rows in the table that has any of the tags <code>afghanistan</code>, <code>pakistan</code>, <code>stanford</code> or <code>argentina</code>.</p>
<p>The SQL query could look something like this:</p>
<pre><code>SELECT * FROM media WHERE tags::text LIKE ANY (ARRAY[‘%stan%‘, ‘%tina%‘]);
</code></pre>
<p>How would I do this using Peewee?</p>
<p>The <code>tags</code> column is modelled like this:</p>
<pre><code>tags = ArrayField(TextField)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>assuming your model looks like</p>
<pre><code>from peewee import Model, TextField
from playhouse.postgres_ext import ArrayField


class Media(Model):
    tags = ArrayField(TextField)
</code></pre>
<p>creating subquery with array field <a href="https://www.postgresql.org/docs/9.2/static/functions-array.html" rel="nofollow noreferrer">unnested</a></p>
<pre><code>from peewee import fn

subquery = (Media.select(Media.id.alias('id'),
                         fn.unnest(Media.tags).alias('unnested_tags'))
            .alias('subquery'))
</code></pre>
<p>generating tags filter like</p>
<pre><code>tags = ["stan", "tina"]
tags_filters = [subquery.c.unnested_tags.contains(tag) for tag in tags]
tags_filter = reduce(operator.or_, tags_filters)
</code></pre>
<p>and final query will be</p>
<pre><code>query = (Media.select().join(subquery,
                             on=subquery.c.id == Media.id)
         .filter(tags_filter)
         # gets rid of duplicates
         .group_by(Media.id))
</code></pre>
<p><em>P. S.</em>: in <strong>Python 3</strong> <code>reduce</code> function is available at <a href="https://docs.python.org/3/library/functools.html#functools.reduce" rel="nofollow noreferrer"><code>functools</code> module</a> while in <strong>Python 2</strong> it is a <a href="https://docs.python.org/2/library/functions.html#reduce" rel="nofollow noreferrer">built-in</a></p>
</div>
<span class="comment-copy">Hi! I only get your example work when a whole tag is matched. I guess that could be because the <code>tags</code> model is an <code>ArrayField(TextField)</code>, so the <code>contains()</code> only checks if the array has an exact match of the tag, not a substring. (I edited the question to clarify the case: The column type is <code>ArrayField(TextField)</code>.)</span>
<span class="comment-copy">@AlfredGodoy: edited, hope it helps</span>
<span class="comment-copy">nah, it still just matches full tags. When looking in the SQL produced by Peewee, <code>contains_any()</code> results in <code>WHERE t1."tags" &amp;&amp; %s)</code>, and the <code>&amp;&amp;</code> means that both arrays needs at least one identical value. In my case, the <code>tags</code> list contains substrings/parts, not the full tags. So the tag "istanbul" is not matched by having "stan" in the tags list, atm...</span>
<span class="comment-copy">@AlfredGodoy: googled out new solution</span>
<span class="comment-copy">you are welcome</span>
