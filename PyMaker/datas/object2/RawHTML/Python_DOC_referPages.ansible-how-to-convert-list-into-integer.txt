<div class="post-text" itemprop="text">
<p>i have the following json output</p>
<pre><code>"lc_facts": {
        "changed": false, 
        "failed": false, 
        "launch_configurations": [
            {
                "block_device_mappings": [
                    {
                        "device_name": "/dev/sda1", 
                        "ebs": {
                            "delete_on_termination": true, 
                            "volume_size": 40, 
                            "volume_type": "gp2"
                        }
                    }
                ]
            }
       ]
  }
</code></pre>
<p>The query below</p>
<pre><code>- debug:
    msg: "{{ lc_facts.launch_configurations|json_query('[*].block_device_mappings[0].ebs.[volume_size]') | flatten }}"
</code></pre>
<p>gives</p>
<pre><code>    "msg": [
    [40]
    ]
</code></pre>
<p>i want to convert into an integer so i can use this value. i tried everything, but all i want is to get number only without brackets. i also added <code>|int</code> in the end, but it gives me 0 value, which is weird.</p>
<p>please help, i am really in trouble. </p>
</div>
<div class="post-text" itemprop="text">
<p>Brackets create a list. "[[40]]" is a list of lists with one element "40". The play below</p>
<pre><code>vars:
  var1: [[40]]
tasks:
  - debug: var=var1
  - debug: var=var1[0]
  - debug: var=var1[0][0]
</code></pre>
<p>gives:</p>
<pre><code>"var1": [
    [
        40
    ]
]

"var1[0]": [
    40
]

"var1[0][0]": "40"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try taking the first element of the list with index [0].
Do it twice if the list is inside another list:</p>
<p>for msg = [40] use msg[0]</p>
<p>for msg = [[40]] use msg[0][0]</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def dict_to_obj(obj, data):
    for d in data:
        if isinstance(data[d], dict):
            setattr(obj, str(d), obj.__class__())
            dict_to_obj(getattr(obj, str(d)), data[d])
        else:
            setattr(obj, str(d), data[d])
    return obj

class Empty:pass
obj = Empty()
obj = dict_to_obj(obj,Your_JSON_object)
#Now here you get all json attributes as objects e.g.
#to get volume_size : 
print(obj.lc_facts.launch_configurations.block_device_mappings.ebs.volume_size)
# but for this to work, you need to restructure your json nested key-value pairs like 
# this :-
"launch_configuration" : {....}
# instead of this :-
"launch configuration" : [ {....} ]
</code></pre>
<p>I hope this helps.</p>
</div>
<span class="comment-copy">what does this number represent ? is this the volume size ? and is your json structure always the same ?</span>
<span class="comment-copy">it is the volume size. for this query, it will be same. but it can be changed</span>
<span class="comment-copy">what can be changed?</span>
<span class="comment-copy">huge respect for you. i have no words to say thank you. excellent explanation as well.</span>
<span class="comment-copy">Thank you so much. this solved my problem.</span>
<span class="comment-copy">Thank you for code. this will be helpful when i will try some python.</span>
