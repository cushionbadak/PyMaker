<div class="post-text" itemprop="text">
<p>I am working through reviewing a video on Lynda and sometimes instead of just running the provided code I typed it myself. </p>
<p>The instructor's code works, but mine doesn't. </p>
<p>It returns <code>"object does not take parameters"</code>. </p>
<p>Mine is on top, his is on the bottom. </p>
<p>Can anyone explain?</p>
<pre><code>    class Fibonnacci():
        def _init_(self, a, b):
            self.a = a
            self.b = b

        def series(self):
            while(True):
                yield(self.b)
                self.a, self.b = self.b, self.a + self.b

    f = Fibonnacci(0, 1)
    for r in f.series():
        if r &gt; 100: break
        print(r, end=' ')
</code></pre>
<hr/>
<pre><code>    class Fibonacci():
        def __init__(self, a, b):
            self.a = a
            self.b = b

        def series(self):
            while(True):
                yield(self.b)
                self.a, self.b = self.b, self.a + self.b

    f = Fibonacci(0, 1)
    for r in f.series():
        if r &gt; 100: break    
        print(r, end=' ')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason is the <code>init</code> function in the class. The way this method works as seen <a href="https://docs.python.org/3/reference/datamodel.html#object.__init__" rel="nofollow noreferrer">here</a> to let an object be assigned parameters when initialized. I am sure you understand this, but the simple error you made was that it requires <code>2</code> underscores on either side to take effect. Like this: <code>__init__</code>. That is the difference between your two codes.</p>
<pre><code>class Fibonnacci():
    def _init_(self, a, b):   #&lt;-- the error is here, should be __init__()
        self.a = a
        self.b = b

    def series(self):
        while(True):
            yield(self.b)
            self.a, self.b = self.b, self.a + self.b

f = Fibonnacci(0, 1)
for r in f.series():
    if r &gt; 100: break
    print(r, end=' ')
</code></pre>
</div>
<span class="comment-copy"><code>def _init_(self, a, b):</code> should have double underscores: <code>def __init__(self, a, b):</code> in order to be called when the object is initialized.</span>
<span class="comment-copy">just go through <a href="https://docs.python.org/3/reference/datamodel.html#object.__init__" rel="nofollow noreferrer">documentation</a>. Init is dunder method. It is a constructor for class. but your function "<i>init</i>" which having only single underscore both sides of word <code>init</code>. It is a major reason. If you have single "_" on both sides of your <code>init</code> method it means it is not a constructor. it is your custom method.</span>
<span class="comment-copy">Thank you! I didn't even see that until you pointed it out to me.</span>
<span class="comment-copy">@OphA Your welcome, but please leave an upvote and accept the answer rather than commenting :) thanks</span>
