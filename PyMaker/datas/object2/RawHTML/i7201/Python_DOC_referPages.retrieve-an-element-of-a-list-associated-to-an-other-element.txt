<div class="post-text" itemprop="text">
<p>Here is my list : </p>
<pre><code>List1 = [['movies', 0.0], ['minion 2015', 1.0], ['minion 2016', 0.3333333333333333]]
</code></pre>
<p>I would like to recover the element associated to the value "1.0" who is "minion 2015". It's possible to do that?</p>
<hr/>
<p>Some details :</p>
<p>My example is due to a return of a value I got from my script.
This result first shows me a list like list 'list1'. 
Then a processing of this list with a condition returns the result item <code>[1.0]</code>. 
And I would like to know if we can retrieve the element associated with this element (1.0) which is <code>"minion 2015"</code>in output.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you mean you want to <em>retrieve</em> it, here's one option. </p>
<pre><code>In [1194]: def get_key(l, key):
      ...:     for k, v in l:
      ...:         if k == key:
      ...:             yield v
      ...:             

In [1195]: list(get_key(List1, 'minion 2015'))
Out[1195]: [1.0]
</code></pre>
<p>Define a function <code>get_key</code> to yield all values associated with this key.</p>
<hr/>
<p>If you're on python3.3 or greater, you can use a <code>yield from</code> syntax to shorten your function:</p>
<pre><code>In [1198]: def get_key(l, key):
      ...:     yield from (v for k, v in l if k == key)
      ...:             

In [1199]: list(get_key(List1, 'minion 2015'))
Out[1199]: [1.0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter</code></a> like below:</p>
<pre><code>filtered_list = list(filter(lambda i: i[1] == 1.0, my_list))
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>&gt;&gt;&gt; my_list = [['movies', 0.0], ['minion 2015', 1.0], ['minion 2016', 0.3333333333333333]]
&gt;&gt;&gt; filtered_list = list(filter(lambda i: i[1] == 1.0, my_list))
&gt;&gt;&gt; filtered_list
[['minion 2015', 1.0]]
&gt;&gt;&gt; filtered_list[0][0]
'minion 2015'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes It can be done.</p>
<p>I would recommend you to read this <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">reference</a>.</p>
</div>
<span class="comment-copy">How do mean recover? It was never lost.</span>
<span class="comment-copy">What do you mean by recover?</span>
<span class="comment-copy">is it sure that the value is unique?</span>
<span class="comment-copy">Hum, retrieve what i meant</span>
<span class="comment-copy">@StamKaly or <code>next(k for k,v in list1 if v == 1.0)</code>... You could also then provide a default parameter for where no match is found instead of a <code>StopIteration</code> being raised...</span>
<span class="comment-copy">What if the second element of each sub-list is not unique? (you use it as key in your dictionary).</span>
<span class="comment-copy">Yes, he's indexing with float. Maybe, it's necessary to convert the type of element. Like a string for example?</span>
<span class="comment-copy">@Taylor08 Fixed. Take a look now.</span>
<span class="comment-copy">@ettanany Changed my approach.</span>
<span class="comment-copy">Allrigth, thanks people</span>
<span class="comment-copy">Allrigth, thanks people</span>
<span class="comment-copy">Very informative! Thank you.</span>
<span class="comment-copy">Allrigth, thanks people</span>
