<div class="post-text" itemprop="text">
<p>here are my python code for dfs path search:</p>
<pre><code>class Graph(object):
   def __init__(self,dict=None):
       Graph.node = dict if dict != None else {}
   def add_node(self,nodedict):
       self.node = dict(self.node,**nodedict)
   def traversal_dfs(self,start,target,path = []):
       path = path + [start]
       for vertex in self.node[start]:
           print path,vertex,target
           if vertex == target:
               return path + [vertex]
           elif vertex not in path:
               path = self.traversal_dfs(vertex,target,path)
if __name__ == "__main__":
    g = Graph({'a':['b','c'],'b':['c','e'],'c':['d'],'d':['e'],'e':['f','a'],'f':['b']})
    print g.traversal_dfs('a','f')
</code></pre>
<p>But when I run it, I got errors like that:</p>
<pre><code>Traceback (most recent call last):
  File "/Users/zzzyui/PycharmProjects/python_test/Traversal.py", line 25, in &lt;module&gt;
['a'] b f
    print g.traversal_dfs('a','f')
['a', 'b'] c f
['a', 'b', 'c'] d f
['a', 'b', 'c', 'd'] e f
  File "/Users/zzzyui/PycharmProjects/python_test/Traversal.py", line 19, in traversal_dfs
['a', 'b', 'c', 'd', 'e'] f f
    path = self.traversal_dfs(vertex,target,path)
stop flag
None e f
  File "/Users/zzzyui/PycharmProjects/python_test/Traversal.py", line 18, in traversal_dfs
    elif vertex not in path:
TypeError: argument of type 'NoneType' is not iterable
</code></pre>
<p>I wonder why the condition vertex == target does not work and how to fix it?</p>
</div>
<div class="post-text" itemprop="text">
<p>you should add a return statement in elif statement. for e.g return path</p>
</div>
<span class="comment-copy">As seen in the Traceback, <code>elif vertex not in path:</code> is the line causing the problem.  Seems <code>path</code> is None. <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">Catch the exception</a> and in the except suite, inspect <code>path</code> and anything else that may be relevant - printing is a good start.</span>
<span class="comment-copy"><code>def __init__(self,dict=None):</code> ... You shouldn't use variable names that shadow Python keywords or builtins.</span>
<span class="comment-copy"><code>def traversal_dfs(self,start,target,path = []):</code> <a href="https://stackoverflow.com/q/1132941/2823755">mutable default arguments</a> can give you headaches.</span>
<span class="comment-copy">Like <code>return self.traversal_dfs(vertex,target,path)</code> intead of <code>path = ...</code>?</span>
<span class="comment-copy">yes, exactly...</span>
