<div class="post-text" itemprop="text">
<p>I move dictionary  </p>
<pre><code>user = {
    'name': 'Bob',
    'age': '11',
    'place': 'moon',
    'dob': '12/12/12'
}

user1 = {
    'name': 'John',
    'age': '13',
    'place': 'Earth',
    'dob': '12/12/12'
}
</code></pre>
<p>What is the best way to loop through each user by adding 1? So the next user would be user2.</p>
<p>Thanks  </p>
</div>
<div class="post-text" itemprop="text">
<p>Instead of assigning user1 as the variable name for the dictionary you could create a new dictionary variable where the key is the user and the value is a nested dictionary with all of the information about the users like this:</p>
<pre><code>users = {
    'user1': {
         'name': 'John',
         'age': '13',
         'place': 'Earth',
         'dob': '12/12/12'
         },
    'user2': {
         'name': 'Bob',
         'age': '11',
         'place': 'moon',
         'dob': '12/12/12'
         }
     ...}
</code></pre>
<p>Then you can iterate over the nested dictionary for all users user1, user2,...userN instead of assigning each user to its own variable.</p>
<p>Update:
Here's how you would then loop across the nested dictionary:</p>
<pre><code>for k, v in users.items():
    print(k, v)
</code></pre>
<p>where k is the key ('user1', 'user2' etc.) and v is the nested dictionary containing the information for the user.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do that, using <a href="https://docs.python.org/3/library/functions.html#globals" rel="nofollow noreferrer"><code>globals</code></a> or <a href="https://docs.python.org/3/library/functions.html#locals" rel="nofollow noreferrer"><code>locals</code></a> depending on your scope:</p>
<pre><code>&gt;&gt;&gt; for i in range(2):
...     print(globals()['user' + str(i)])
... 
{'name': 'Bob', 'age': '11', 'place': 'moon', 'dob': '12/12/12'}
{'name': 'John', 'age': '13', 'place': 'Earth', 'dob': '12/12/12'}
</code></pre>
<p>But as stated in the comments, I would recommend using a list:</p>
<pre><code>&gt;&gt;&gt; users = [user0, user1]
&gt;&gt;&gt; for i in range(2):
...     print(users[i])
... 
{'name': 'Bob', 'age': '11', 'place': 'moon', 'dob': '12/12/12'}
{'name': 'John', 'age': '13', 'place': 'Earth', 'dob': '12/12/12'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way to deal with this (in my opinion is having the dicts in a list.
 I'd only use dictionaries if the keys actually mean something. The below is also a valid dict to convert to json.</p>
<pre><code>users = [{
             'name': 'John',
             'age': '13',
             'place': 'Earth',
             'dob': '12/12/12'
             },
            {
             'name': 'Bob',
             'age': '11',
             'place': 'moon',
             'dob': '12/12/12'
             }]
</code></pre>
<p>user1 is users[0], user2 is users[1] ...</p>
<p>users.append({...}) to add more etc.</p>
<p>And if you loop and want the user number:</p>
<pre><code>for ind,item in enumerate(users):
    print("user{}".format(ind+1))
</code></pre>
<p>Prints:</p>
<pre><code>user1
user2
</code></pre>
</div>
<span class="comment-copy">When you start numbering variables, you're doing something wrong. Please use a list. That's arguably the "best way" to loop over anything.</span>
<span class="comment-copy">Thanks very much! Working great</span>
<span class="comment-copy">and that's, of course, the sane answer.</span>
<span class="comment-copy">You provided the right answer - but you forgot to loop in - even if it appears dumb, you should add an example of how to loop into your dict to really answers OP</span>
<span class="comment-copy">Thank you for the help - I decided to go with your solution. @Arount It's okay, I have done it.</span>
<span class="comment-copy">@smye it's also for future users and "teach" to this new fellow what SO expect as a good answer - anyway good you had your answer :) +1</span>
<span class="comment-copy">In the second loop  <code>for user in users</code> is way better than using indexes!</span>
<span class="comment-copy">Cheers for the suggestion</span>
