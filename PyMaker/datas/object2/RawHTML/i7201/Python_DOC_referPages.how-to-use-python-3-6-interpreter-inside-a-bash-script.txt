<div class="post-text" itemprop="text">
<p>I want to have a little script, that will find, run and report about all the tests in the folder, like this one:</p>
<pre><code>#!/bin/bash 
coverage run -m unittest discover 
coverage report -m 
</code></pre>
<p>But, when I run it, I get some errors, which I do not get on Windows (like using of <code>super()</code> without an argument). As I've understood, it's connected with the fact, that build-in and default version of Python on Linux is 2.x, whereas I am using 3.6. How should I change the script, so it would use Python 3.6 interpreter?</p>
<p>EDIT:
So here's one of the files with tests that I run:</p>
<pre><code>#!/usr/bin/env python3
import unittest
import random
import math
import sort_functions as s
from comparison_functions import less, greater


class BaseTestCases:
    class BaseTest(unittest.TestCase):
        sort_func = None

        def setUp(self):
            self.array_one = [101, -12, 99, 3, 2, 1]
            self.array_two = [random.random() for _ in range(100)]
            self.array_three = [random.random() for _ in range(500)]
            self.result_one = sorted(self.array_one)
            self.result_two = sorted(self.array_two)
            self.result_three = sorted(self.array_three)

        def tearDown(self):
            less.calls = 0
            greater.calls = 0

        def test_sort(self):
            result_one = self.sort_func(self.array_one)
            result_two = self.sort_func(self.array_two)
            result_three = self.sort_func(self.array_three)
            self.assertEqual(self.result_one, result_one)
            self.assertEqual(self.result_two, result_two)
            self.assertEqual(self.result_three, result_three)

    # and some more tests here       


class TestBubble(BaseTestCases.BaseTest):
    def setUp(self):
    self.sort_func = s.bubble_sort
    super().setUp()

# and some more classes looking like this
</code></pre>
<p>And the error:</p>
<pre><code>ERROR: test_key (test_sort_func.TestBubble)
----------------------------------------------------------------------
Traceback (most recent call last):
File "/home/lelik/Desktop/Sorters/test_sort_func.py", line 67, in setUp
super().setUp()
TypeError: super() takes at least 1 argument (0 given)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, install it for your python3 (if you have it and <code>pip</code> installed)
<code>sudo python3 -m pip install coverage</code></p>
<p>Then, in order to run coverage for python3, run <code>python3 -m coverage report -m</code></p>
<p>So your final script should look like this:</p>
<pre><code>#!/bin/bash 
python3 -m coverage run -m unittest discover 
python3 -m coverage report -m 
</code></pre>
<p>Also you can replace <code>python3</code> with path to your pythons bin. For example <code>/usr/bin/python3</code>. So You can call it this way as well:</p>
<pre><code>#!/bin/bash 
/usr/bin/python3 -m coverage run -m unittest discover 
/usr/bin/python3 -m coverage report -m 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that the <code>coverage</code> command on your Linux host has been installed for Python 2.  That is, somewhere there exists a <code>coverage</code> script that starts with:</p>
<pre><code>#!/usr/bin/python
</code></pre>
<p>And on your system, <code>/usr/bin/python</code> is python 2.</p>
<p>The best solution here is probably to set up a Python 3 <a href="https://docs.python.org/3/tutorial/venv.html" rel="nofollow noreferrer">virtual environment</a> for running your tests (and then installing <code>coverage</code> into that virtualenv).  You may also want to investigate <a href="https://tox.readthedocs.io/en/latest/" rel="nofollow noreferrer">tox</a>, which will handle this for you automatically.</p>
</div>
<span class="comment-copy"><code>#!/usr/bin/env python3</code>, but you need to actually install Python3</span>
<span class="comment-copy">@cricket_007 No, the script is <code>bash</code> (<code>coverage</code> is a script or binary which itself relies on a Python env), not <code>python</code>. What OP needs to find out is how it is configured, and why the configuration that (assumedly) work in his shell isn't there in his script.</span>
<span class="comment-copy">@cricket_007, tried this, still get <code>TypeError: super() takes at least 1 argument (0 given)</code>. Python3 is definitely installed</span>
<span class="comment-copy">We can't see your code, but can you add it and the full traceback?</span>
<span class="comment-copy">@OlgaGekkel You need provide more details to your <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> please.</span>
<span class="comment-copy">Running <code>sudo</code> command gives me this error: <code>/usr/bin/python3: No module named pip</code>, but both <code>pip</code> and <code>coverage</code> are already installed, cause running <code>pip install coverage</code> tells me <code>Requirement already satisfied: coverage in /usr/local/lib/python2.7/dist-packages</code></span>
<span class="comment-copy">You are missing <code>pip</code> for python3 :) Try <code>sudo apt-get install python3-pip</code>. Then you will be able to use <code>pip3</code> or <code>python3 -m pip</code>.</span>
<span class="comment-copy">it turns out, I also can use a <code>coverage3</code> command, so it looks a little bit better, thanks! :)</span>
