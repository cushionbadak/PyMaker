<div class="post-text" itemprop="text">
<p>I would like to know the what are the methods and properties in the <code>object</code> class of Python but I can't find the documentation anywhere. Do you guys know where can I find it?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html?highlight=object#dir" rel="nofollow noreferrer"><code>dir</code></a> to list them:</p>
<pre><code>&gt;&gt;&gt; dir(object)
['__class__',
 '__delattr__',
 '__dir__',
 '__doc__',
 '__eq__',
 '__format__',
 '__ge__',
 '__getattribute__',
 '__gt__',
 '__hash__',
 '__init__',
 '__init_subclass__',
 '__le__',
 '__lt__',
 '__ne__',
 '__new__',
 '__reduce__',
 '__reduce_ex__',
 '__repr__',
 '__setattr__',
 '__sizeof__',
 '__str__',
 '__subclasshook__']
</code></pre>
<p>Be warned that an object can lie about what attributes are there.  For example, <code>object.mro</code> exists but the dir chooses not to tell you about it.  </p>
<p>To find an "uncensored" list, try this:</p>
<pre><code>&gt;&gt;&gt; object.__dir__(object)
</code></pre>
</div>
<span class="comment-copy">You can also use <code>ipython</code> with its awesome tab completion.</span>
<span class="comment-copy">Ooh, nice dirty trick with <code>object.__dir__</code>!</span>
<span class="comment-copy"><code>dir()</code> doesn't show methods provided by <code>type</code>, the metaclass of <code>object</code>. <code>object.mro</code> is really <code>type.mro</code>.</span>
<span class="comment-copy">As for <code>object.__dir__()</code> vs. <code>dir()</code>, the latter calls <code>type.__dir__(object)</code>, while <code>object.__dir__()</code> is meant for <i>instances</i> (so used for <code>dir(instance)</code>). The latter also looks at <code>type(instance)</code>, while the former does not, which is why the <code>object.__dir__(object)</code> list is larger. You basically have the same output as <code>list(set(dir(object)).union(dir(type)))</code> (modulus ordering).</span>
<span class="comment-copy">As documented in the link provided.  <i>Note Because dir() is supplied primarily as a convenience for use at an interactive prompt, it tries to supply an interesting set of names more than it tries to supply a rigorously or consistently defined set of names, and its detailed behavior may change across releases. For example, metaclass attributes are not in the result list when the argument is a class.</i></span>
