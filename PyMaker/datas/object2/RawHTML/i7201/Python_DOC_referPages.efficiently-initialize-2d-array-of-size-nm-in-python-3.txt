<div class="post-text" itemprop="text">
<p>I am using Python 3 and am trying to create 2D integer arrays of a known and fixed size. How can I do this?</p>
<p>The arrays I have in mind are the Python-provided <code>array.array</code>, although I am not averse to using a library like NumPy.</p>
<p>I know this can be done via lists, but I want to use an array since they are much more space efficient. Right now, I am initializing lists in this way, but I want to replace it with an array:</p>
<p><code>my_list = [[ 0 for _ in range(height) ] for _ in range(.width)]</code></p>
<p>For example, in C, I would write</p>
<p><code>int my_array[ width ][ height ];</code></p>
<p>How can I do this in Python</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use numpy:</p>
<pre><code>import numpy as np
my_array = np.zeros([height, width])
</code></pre>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; np.zeros([3, 5])
array([[ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.],
       [ 0.,  0.,  0.,  0.,  0.]])
</code></pre>
<p>Note that if you specifically need integers, you should use the <code>dtype</code> argument</p>
<pre><code>&gt;&gt;&gt; np.zeros([3, 5], dtype=int)
array([[0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0],
       [0, 0, 0, 0, 0]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The numpy equivalent of the code you posted is:</p>
<pre><code>import numpy as np
my_array = np.empty([height, width])
</code></pre>
<p><code>empty</code> reserves uninitialized space, so it is slightly faster than <code>zeros</code>, because <code>zeros</code> has to make sure that everything is initially set to 0.</p>
<p>Note that, like in C/C++, you should write values before reading them, because they initially "contain garbage".</p>
<p>Docs:</p>
<p><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.empty.html" rel="nofollow noreferrer">https://docs.scipy.org/doc/numpy/reference/generated/numpy.empty.html</a></p>
<p><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.zeros.html" rel="nofollow noreferrer">https://docs.scipy.org/doc/numpy/reference/generated/numpy.zeros.html</a></p>
</div>
<span class="comment-copy">are you open to using numpy?</span>
<span class="comment-copy">So, what <b>exactly</b> do you mean by array? <code>numpy.ndarray</code>? Or <code>array.array</code>?</span>
<span class="comment-copy">Please post a minimal example.  What is the actual data type?  <a href="https://docs.python.org/3/library/array.html" rel="nofollow noreferrer">docs.python.org/3/library/array.html</a>?</span>
<span class="comment-copy">An array.array. I am not averse to using NumPy. I'll update my original question; thank you.</span>
<span class="comment-copy">Are these space efficient like <code>array.array</code>s? The integer arrays I will be working with are expected to be in the magnitude of ~1000x1000.  Edit: I did some reading of the Numpy documentation, it seems like I can specify arrays to use the type int-8, I am currently trying to find out how much overhead there is per element.</span>
<span class="comment-copy">@tpepin96 yes, they are. Although, given the dimensions you are talking about, even an list of lists wouldn't be an issue on modern hardware.</span>
<span class="comment-copy">@tpepin96 They are primitive arrays, so each element is whatever size the <code>dtype</code> implies...</span>
<span class="comment-copy">This looks like it will work; thank you very much!</span>
<span class="comment-copy">@tpepin96 <code>scipy.sparse</code> exists for cases that are <i>actually</i> large (1000x1000 is not)</span>
