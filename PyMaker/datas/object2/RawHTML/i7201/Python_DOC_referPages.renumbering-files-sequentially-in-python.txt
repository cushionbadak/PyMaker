<div class="post-text" itemprop="text">
<p>I'm building a database gathering thousands of images in a folder. I'm using a python script to rename the files in a database but the problem is that whenever I add images to the folder and rename them, it gives all the files a different name. Is there any way to not rename the files in a certain format?</p>
<pre><code>    import os, shutil
    _src = ("/Path/to/Directory")

    _ext = ".png"


    for i,filename in enumerate(os.listdir(_src)):

        newname = ('People-' + str(i).zfill(3) + _ext )
        os.rename(os.path.join(_src, filename), os.path.join(_src, newname))


        print('renaming "%s" to "%s"...' % (filename, newname))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Check the filename matches your format or not with a pattern match.  Also, check for the existence of a new filename and increment the counter until you find an unused one:</p>
<pre><code>import os
import glob
import re

src = r'path\to\directory'
ext = '.png'
i = 0
for filename in glob.glob(os.path.join(src,'*' + ext)):
    if not re.search('People-\d\d\d' + re.escape(ext) +'$',filename):
        while True:
            newname = os.path.join(src,'People-{:03d}{}'.format(i,ext))
            if os.path.exists(newname):
                i += 1
            else:
                break
        print('renaming "%s" to "%s"...' % (filename, newname))
        os.rename(filename,newname)
</code></pre>
<p>Here's an example starting list of files:</p>
<pre><code>People-000.png
People-001.png
People-003.png
a.png
b.png
c.png
</code></pre>
<p>and output:</p>
<pre><code>renaming "a.png" to "People-002.png"...
renaming "b.png" to "People-004.png"...
renaming "c.png" to "People-005.png"...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>So, first you need to find out the largest file name in the sequence. You can use <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer">glob</a> function.</p>
<p>given this folder structure:</p>
<pre><code>(venv) user@MacBookPro:~/Projects/test$ ls -al
total 16
drwxr-xr-x   7 user  staff   238B Jul 31 12:34 ./
drwxr-xr-x@ 17 user  staff   578B Jul 14 13:58 ../
-rw-r--r--@  1 user  staff   6.0K Mar  8  2016 .DS_Store
-rw-r--r--   1 user  staff     0B Jul 31 12:34 People-001.png
-rw-r--r--   1 user  staff     0B Jul 31 12:34 People-002.png
-rw-r--r--   1 user  staff     0B Jul 31 12:34 People-003.png
-rw-r--r--   1 user  staff     0B Jul 31 12:34 foo.png

(venv) user@MacBookPro:~/Projects/test$ python
Python 3.6.1 (default, Apr  4 2017, 09:40:21)
[GCC 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.38)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; from glob import glob
&gt;&gt;&gt; glob('/Users/user/Projects/test/People-???.png')
['/Users/user/Projects/test/People-001.png', '/Users/user/Projects/test/People-002.png', '/Users/user/Projects/test/People-003.png']
&gt;&gt;&gt; max(glob('/Users/user/Projects/test/People-???.png'))
'/Users/user/Projects/test/People-003.png'
&gt;&gt;&gt; max(glob('/Users/user/Projects/test/People-???.png')).split('.')[0].split('-')[1]
'003'
</code></pre>
<p>Next thing, since <strong><em>enumerate(os.listdir(_src))</em></strong> includes not interested files, you can't use its index. So just the max index from above:</p>
<pre><code>&gt;&gt;&gt; max_index = int(max(glob('/Users/user/Projects/test/People-???.png')).split('.')[0].split('-')[1])
&gt;&gt;&gt; for idx,name in enumerate(os.listdir('/Users/user/Projects/test/')):
...     if not name.startswith('People'):
...          max_index += 1
...          print (max_index, name)
...
4 .DS_Store
5 foo.png
</code></pre>
<p>And filter out the hidden files, of course.</p>
</div>
<span class="comment-copy">Check/test the filename's format and change it if it is Not correct.</span>
<span class="comment-copy">Add new images to a temporary folder then move/copy them after renaming.</span>
<span class="comment-copy">if i move the files to a separate folder it will rename them starting at 0 in that folder.</span>
