<div class="post-text" itemprop="text">
<p>There is something I want to do, but unfortunately I have absolutely no idea on how to do it, and I doubt someone else has asked. So, basically, what I want is the program to output text in an previous area. I'll try to explain.</p>
<p>Let's say I outputted the following text to the screen:</p>
<pre><code>===========================================================================================



===========================================================================================
</code></pre>
<p>My question is, is there a way, without using pygame, to replace the blank lines between the lines with a certain text WITHOUT printing the lines again? Is this possible using for example Python IDLE or directly in the terminal, or is it only possible using pygame or something "like" that?</p>
<p>It would look like this, for example:</p>
<pre><code>===========================================================================================

Hello World!

===========================================================================================
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/howto/curses.html" rel="nofollow noreferrer"><code>curses</code></a> library for this kind of text-only UI. Here's a simple example, first printing the horizontal lines, and then, after some time, adding a string on a previous line.</p>
<pre><code>import time, curses

scr = curses.initscr()

scr.addstr(0, 0, "#" * 80)
scr.addstr(2, 0, "#" * 80)
scr.refresh()

time.sleep(1)

scr.addstr(1, 35, "Hello World")
scr.refresh()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>While there should be multiple libraries to handle this task, you should check out <code>curses</code> and <code>colorama</code>. I'm unsure about <code>curses</code> but this is definitely possible with <code>colorama</code> (install it via <code>pip</code>).</p>
<p>Here's an example:</p>
<pre><code>from colorama import *

def pos(x, y):
    return '\x1b['+str(y)+';'+str(x)+'H'

def display():
    init() #just for safety here; needed in Windows
    print(Fore.RED+pos(30, 10)+ 'This string is a different place!')

display()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Given your output, say, for example that is in a file <code>test.dat</code>:</p>
<pre><code>===========================================================================================



===========================================================================================
</code></pre>
<p>a 1 simple line in <code>vim</code> would produce your desired output:</p>
<pre><code>:3s/^$/Hello World!
</code></pre>
<p>If you want to automate this in a script: <code>hello.sh</code></p>
<pre><code>#!/bin/bash
ex test.dat &lt;&lt;-EOF
  :3s/^$/Hello World!
  wq " Update changes and quit.
EOF
</code></pre>
<p>Output:</p>
<pre><code>===========================================================================================

Hello World!

===========================================================================================
</code></pre>
</div>
<span class="comment-copy">While on the same line, you can use carriage return <code>\r</code>. Spanning multiple lines, you should have a look at <a href="https://docs.python.org/3/howto/curses.html" rel="nofollow noreferrer"><code>curses</code></a>. See e.g. <a href="https://stackoverflow.com/a/26584483/1639625">here</a> for an example.</span>
