<div class="post-text" itemprop="text">
<pre><code>class Card():
    def __init__(self, val):
        self.val = val

c = Card(1)
d = -c
</code></pre>
<p>I expect <code>d</code> to be a <code>Card</code> object and <code>d.val</code> to be -1. How I can do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like you want the unary minus operator on <code>Card</code> to return a new card with the value negated. If that's what you want, you can define the <code>__neg__</code> operator on your class like this:</p>
<pre><code>class Card:
    def __init__(self, val):
        self.val = val
    def __neg__(self):
        return Card(-self.val)
</code></pre>
<p><code>__neg__</code> is included in the list of methods that can be overridden to customise arithmetic operations here: <a href="https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types" rel="noreferrer">https://docs.python.org/3/reference/datamodel.html#emulating-numeric-types</a></p>
</div>
<span class="comment-copy">How can I know all the predefined functions, such as <b>neg</b>?</span>
<span class="comment-copy">pretty helpful :)</span>
<span class="comment-copy">This is described in the Python docs for emulating numeric types. The operation you asked about is "unary minus". Unary meaning it acts on one operand.) <a href="https://docs.python.org/2.7/reference/datamodel.html#special-method-names" rel="nofollow noreferrer">docs.python.org/2.7/reference/â€¦</a></span>
