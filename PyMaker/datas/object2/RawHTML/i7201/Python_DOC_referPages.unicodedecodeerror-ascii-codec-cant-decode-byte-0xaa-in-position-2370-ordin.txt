<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/42762556/how-to-interpret-this-error-unicodedecodeerror-ascii-codec-cant-decode-byte">how to interpret this error “UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 164: ordinal not in range(128)”</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I'm writing a script in Python 3.5.3 that takes username/password combos from a file and writes them to another file. The script was written on a machine with Windows 10 and worked. However, when I tried to run the script on a MacBook running Yosemite, I got an error that has something to do with ASCII encoding.</p>
<p>The relevant function is this:</p>
<pre><code>def buildDatabase():
        print("Building database, this may take some time...")
        passwords = open("10-million-combos.txt", "r") #File with user/pword combos.
        hashWords = open("Hashed Combos.txt", "a") #File where user/SHA-256 encrypted pwords will be stored.
        j = 0
        hashTable = [[ None ] for x in range(60001)] #A hashtable with 30,000 elements, quadratic probing means size must = 2 x the final size + 1
        for line in passwords: 
                toSearch = line 
                i = q = toSearch.find("\t") #The username/pword combos are formatted: username\tpassword\n.
                n = toSearch.find("\n")
                password = line[i:n-1] #i is the start of the password, n is the end of it
                username = toSearch[ :q] + ":" #q is the end of the username
                byteWord = password.encode('UTF-8')
                sha.update(byteWord)
                toWrite = sha.hexdigest() #password is encrypted to UTF-8, run thru SHA-256, and stored in toWrite
                skip = False
                if len(password) == 0: #if le(password) is 0, just skip it
                        skip = True
                if len(password) == 1:
                        doModulo = ord(password[0]) ** 4
                if len(password) == 2:
                        doModulo = ord(password[0]) * ord(password[0]) * ord(password[1]) * ord(password[1])
                if len(password) == 3:
                        doModulo = ord(password[0]) * ord(password[0]) * ord(password[1]) * ord(password[2])
                if len(password) &gt; 3:
                        doModulo = ord(password[0]) * ord(password[1]) * ord(password[2]) * ord(password[3])
                assignment = doModulo % 60001
                #The if block above gives each combo an assignment number for a hash table, indexed by password because they're more unique than usernames
                successful = False
                collision = 0
</code></pre>
<p>The error is as follows:</p>
<pre><code>Traceback (most recent call last):
  File "/Users/connerboehm/Documents/Conner B/PythonFinalProject.py", line 104, in &lt;module&gt;
    buildDatabase()
  File "/Users/connerboehm/Documents/Conner B/PythonFinalProject.py", line 12, in buildDatabase
    for line in passwords:
  File "/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/encodings/ascii.py", line 26, in decode
    return codecs.ascii_decode(input, self.errors)[0]
UnicodeDecodeError: 'ascii' codec can't decode byte 0xaa in position 2370: ordinal not in range(128)
</code></pre>
<p>What's happening here? I haven't gotten this error before on Windows, and I can't see any problem with my attempt to encode into UTF-8.</p>
<p>Edit: Notepad encodes in ANSI. Changing the encoding (just copying and pasting the data to a new .txt file) to UTF-8 solved the problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your program doesn't say what codec is used in the file <code>"10-million-combos.txt"</code>, so Python is in this case trying to decode it as ASCII. 0xaa isn't an ASCII ordinal so that failed. Identify what codec is used in your file and pass that in the <code>encoding</code> parameter for <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow noreferrer">open</a>. </p>
</div>
<span class="comment-copy">Time to study character encodings such as ASCII and unicode, UTF-8 is a good place to start.</span>
<span class="comment-copy">"Identify what codec is used in your file" is easier said than done. Maybe you could suggest a way to do it, like the <a href="https://pypi.python.org/pypi/chardet" rel="nofollow noreferrer">chardet</a> module ?</span>
