<div class="post-text" itemprop="text">
<p>I am learning regex of python.</p>
<p>I would like to check the words in a file are replaced by re.sub() function.</p>
<pre><code>import re

original_file=open('original_file_path','r')
replaced_file=open('replaced_file_path','w')

compiled_pattern=re.compile('target_pattern')

match_flag=False
for line in original_file:
    new_line=re.sub(compiled_pattern, 'new_pattern', line, flags=0)
    replaced_file.write(new_line)

    search_result=re.search(compiled_pattern, new_line)
    if search_result:
        match_flag=True

original_file.close()
replaced_file.close()

if match_flag:
    print("Some parts are replaced")
</code></pre>
<p>My code above uses re.search() but I am afraid that it is redundant because re.sub and re.search scans the same 'line' independently.
 Are there any easier way to check whether the words in the file are really replaced or not? Thank you very much.</p>
</div>
<div class="post-text" itemprop="text">
<p>See <a href="https://docs.python.org/3/library/re.html#re.subn" rel="nofollow noreferrer">re.subn</a>:</p>
<blockquote>
<p><code>re.subn(pattern, repl, string, count=0, flags=0)</code></p>
<p>Perform the same operation as <code>sub()</code>, but return a tuple <code>(new_string, number_of_subs_made)</code>.</p>
</blockquote>
<p>For example:</p>
<pre class="lang-none prettyprint-override"><code>&gt;&gt;&gt; r = re.compile('a')
&gt;&gt;&gt; s = 'aaaaa'
&gt;&gt;&gt; (x,n) = re.subn(r, 'b', s)
&gt;&gt;&gt; n
5
&gt;&gt;&gt; x
'bbbbb'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can compare old with new string</p>
<pre><code>if new_line != line:
  match_flag=True
</code></pre>
</div>
