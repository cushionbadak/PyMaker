<div class="post-text" itemprop="text">
<p>I have the following code which opens a text file that contains comma separated numbers.</p>
<pre><code>from collections import Counter

with open("lottoresults.txt") as inf:
    all_lines = [inf.read()]
    print(all_lines)
    for each_line in all_lines:
        print(each_line)
        counts = Counter(each_line)
        set = each_line.replace("", "").split()
        print(set)
        for numbers in set:
            nums = [int(i) for i in numbers.replace(",", "\n").split()]
            print(nums)
            for number in nums:
                counts = Counter(nums)
print(counts)
</code></pre>
<p>The results are:</p>
<pre><code>['1,2,3,4,5\n1,3,5,6,7\n1,8,9,10,11']
1,2,3,4,5
1,3,5,6,7
1,8,9,10,11
['1,2,3,4,5', '1,3,5,6,7', '1,8,9,10,11']
[1, 2, 3, 4, 5]
[1, 3, 5, 6, 7]
[1, 8, 9, 10, 11]
Counter({8: 1, 1: 1, 10: 1, 11: 1, 9: 1})
</code></pre>
<p>What I am trying to accomplish is for the program to read the first line, run Counter to check the number of times a number appears, then read the second line, re-Count (i.e. add count to previous count).</p>
<p>Where am I going wrong? It's currently not even counting the numbers, since there are more than 1 instances of "1".</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from collections import Counter

cnt = Counter()
with open("lottorresults.txt") as f:
    for line in f.readlines():
        numbers = [int(n) for n in line.strip().split(",")]
        cnt.update(numbers)
</code></pre>
<p>Is that right code you want?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/3/library/collections.html#collections.Counter.update" rel="nofollow noreferrer"><code>update</code></a> method of <code>collections.Counter</code>, otherwise you keep overwriting <code>counts</code> each iteration</p>
<pre><code>from collections import Counter

counts = Counter()
with open("lottoresults.txt") as inf:
    for each_line in inf:
        counts.update(int(i) for i in each_line.split(','))
print(counts)
</code></pre>
<p>Result</p>
<pre><code>Counter({1: 3, 3: 2, 5: 2, 2: 1, 4: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1})
</code></pre>
</div>
<span class="comment-copy">Hint: Did you observe the output resulted the counts of last array alone ? It means, the counter is getting re-initialized but not updating.</span>
<span class="comment-copy">I did observe it, but now I realise why it's counting the numbers as occurring once! Thank you.</span>
<span class="comment-copy">That's exactly it. It makes so much sense once you see it working properly. I was trying to count each by encapsulating it at the end, when really I should have started with it...</span>
<span class="comment-copy">+1 The <i>update()</i> method is likely the cleanest way.  FYI, this a good chance to use <i>map()</i> as in <code>c.update(map(int, line.split(',')))</code> or a least a generator expression as in <code>c.update(int(i) for i in line.split(','))</code>.</span>
<span class="comment-copy">Good call on the generator expression</span>
