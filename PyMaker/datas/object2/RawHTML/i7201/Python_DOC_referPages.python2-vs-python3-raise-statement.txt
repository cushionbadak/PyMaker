<div class="post-text" itemprop="text">
<p>In the flask documentation there is an example for a hook function that allows to add custom behaviour for the <code>url_for</code> function by being called, when no flask-defined url endpoint is found. The programmer can add a custom endpoint or re-raise the exception (with the original context) if there is no matching user defined url endpoint as well.</p>
<pre><code>def external_url_handler(error, endpoint, values):
    "Looks up an external URL when `url_for` cannot build a URL."
    # This is an example of hooking the build_error_handler.
    # Here, lookup_url is some utility function you've built
    # which looks up the endpoint in some external URL registry.
    url = lookup_url(endpoint, **values)
    if url is None:
        # External lookup did not have a URL.
        # Re-raise the BuildError, in context of original traceback.
        exc_type, exc_value, tb = sys.exc_info()
        if exc_value is error:
            raise exc_type, exc_value, tb
        else:
            raise error
    # url_for will use this result, instead of raising BuildError.
    return url

app.url_build_error_handlers.append(external_url_handler)
</code></pre>
<p>This code snippet seems to be python2 code and fails for python3 because of the <code>raise exc_type, exc_value, tb</code> line.
The <a href="https://docs.python.org/2.7/reference/simple_stmts.html#raise" rel="nofollow noreferrer">python2</a> and <a href="https://docs.python.org/3.4/reference/simple_stmts.html#raise" rel="nofollow noreferrer">python3</a> documentation list different arguments for the raise statement.</p>
<p>What is the correct way to convert this snippet to python3?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is specified in the documentation for <a href="https://docs.python.org/3/reference/simple_stmts.html#the-raise-statement" rel="nofollow noreferrer">the <code>raise</code> statement</a>:</p>
<blockquote>
<p>You can create an exception and set your own traceback in one step using the <code>with_traceback()</code> exception method (which returns the same exception instance, with its traceback set to its argument), like so:</p>
<pre><code>raise Exception("foo occurred").with_traceback(tracebackobj)
</code></pre>
</blockquote>
<p>So, in your case, that would be:</p>
<pre><code>raise exc_type(exc_value).with_traceback(tb) 
</code></pre>
</div>
<span class="comment-copy">Equivalent Py3 code is <code>raise exc_type(exc_value).with_traceback(tb)</code></span>
