<div class="post-text" itemprop="text">
<p>I am trying to extract a review from one page in Zomato using request and Beautiful Soup 4 in Python. I want to store the link of the requested page and the review extracted into one csv file. </p>
<p>My problem is that the review I extracted does not store into one cell but instead it splits into multiple cells. How do I store my extracted review into one cell?</p>
<p>Here is my code:</p>
<pre><code>import time
from bs4 import BeautifulSoup
import requests

URL = "https://www.zomato.com/review/eQEygl"
time.sleep(2)
reviewPage = requests.get(URL, headers = {'user-agent': 'my-app/0.0.1'})
reviewSoup = BeautifulSoup(reviewPage.content,"html.parser")
reviewText = reviewSoup.find("div",{"class":"rev-text"})
textSoup = BeautifulSoup(str(reviewText), "html.parser")

reviewElem = [URL, ""]
for string in textSoup.stripped_strings:
        reviewElem[1] += string

csv = open("out.csv", "w", encoding="utf-8")
csv.write("Link, Review\n")
row = reviewElem[0] + "," + reviewElem[1] + "\n"
csv.write(row)

csv.close()
</code></pre>
<p><a href="https://docs.google.com/spreadsheets/d/1pqg8ruK4LA3nIxb5JrstyutUsLB5qrM_SXniqlsjsRE/edit#gid=1019963355" rel="nofollow noreferrer">Output</a></p>
<p><a href="https://docs.google.com/spreadsheets/d/1CyNi5LrVtzwNPP2_NYNPlJ5gPDuPtrrYPGrpQMRG6AI/edit?usp=sharing" rel="nofollow noreferrer">Expected Output</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I think the problem is the commas embedded in the <code>reviewElem[1]</code> string, because they are the default delimiter in most CSV software. The following avoids the problem by wrapping the contents of the string in <code>"</code> characters to indicate it's all one cell:</p>
<pre><code>import time
from bs4 import BeautifulSoup
import requests

URL = "https://www.zomato.com/review/eQEygl"
time.sleep(2)
reviewPage = requests.get(URL, headers = {'user-agent': 'my-app/0.0.1'})
reviewSoup = BeautifulSoup(reviewPage.content,"html.parser")
reviewText = reviewSoup.find("div",{"class":"rev-text"})
textSoup = BeautifulSoup(str(reviewText), "html.parser")

reviewElem = [URL, ""]
for string in textSoup.stripped_strings:
    reviewElem[1] += string

csv = open("out.csv", "w", encoding="utf-8")
csv.write("Link, Review\n")
#row = reviewElem[0] + "," + reviewElem[1] + "\n"
row = reviewElem[0] + ',"{}"\n'.format(reviewElem[1])  # quote string 2
csv.write(row)

csv.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>There is no need to manually construct a CSV string.</em> When you do it manually, if there are column delimiters (<code>,</code> by default) inside the column values, they are interpreted as delimiters and not literal strings leading to a column value being scattered around multiple columns.</p>
<p>Use the <code>csv</code> module and the <a href="https://docs.python.org/3/library/csv.html#csv.csvwriter.writerow" rel="nofollow noreferrer"><code>.writerow()</code></a> method:</p>
<pre><code>import csv

# ...

with open("out.csv", "w", encoding="utf-8") as csv_file:
    writer = csv.writer(csv_file)

    writer.writerow(["Link", "Review"])
    writer.writerow(reviewElem)
</code></pre>
</div>
<span class="comment-copy">It is sad that you are actually following a manual workaround and not a reliable and Pythonic solution. Let's see what happens when a review contains double quotes.</span>
<span class="comment-copy">I'm getting an error like this "TypeError: 'fieldnames' is an invalid keyword argument for this function" using your code.</span>
<span class="comment-copy">@JustinManalili okay, let's use <code>writerow</code> for both, give it a try.</span>
