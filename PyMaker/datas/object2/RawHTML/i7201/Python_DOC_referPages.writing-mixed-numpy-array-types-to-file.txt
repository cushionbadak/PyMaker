<div class="post-text" itemprop="text">
<p>I'm trying to write a 3 column data array to a text file. Each row has an associated date and time contained in another array as a string.</p>
<p>For example:</p>
<pre><code>&gt;&gt;&gt; data 
array([[0, 1, 9],
       [1, 1, 2],
       [2, 4, 2],
       [7, 3, 2],
       [2, 2, 7],
       [1, 0, 5]])

&gt;&gt;&gt; dates
array([['2017-07-28T12:00:00'],
       ['2017-07-28T12:01:00'],
       ['2017-07-28T12:02:00'],
       ['2017-07-28T12:03:00'],
       ['2017-07-28T12:04:00'],
       ['2017-07-28T12:05:00']], 
      dtype='&lt;U19')
</code></pre>
<p>I'm trying to use <strong>numpy.savetxt</strong> to write the strings and data to file. Based on the above data, the output file should look like this:</p>
<pre><code>'2017-07-28T12:00:00', 0, 1, 9
'2017-07-28T12:01:00', 1, 1, 2
'2017-07-28T12:02:00', 2, 4, 2
'2017-07-28T12:03:00', 7, 3, 2
'2017-07-28T12:04:00', 2, 2, 7
'2017-07-28T12:05:00', 1, 0, 5
</code></pre>
<p>Unfortunately, I can't figure out how to correctly join the string and numeric data to work with savetxt. I have tried concatenating the arrays, joining them in tuples, stacking them, etc, but the solution has alluded me all day. Ideally, I'd like to stick with numpy and not break this out line-by-line in a loop or involve Pandas.</p>
<p>Can anyone recommend a way to make this work?</p>
</div>
<div class="post-text" itemprop="text">
<p>Since you want to stack columns (like glueing the two arrays together) you need to use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.column_stack.html" rel="nofollow noreferrer"><code>np.column_stack()</code></a>. However, the resulting array has different datatypes which would result in some issues when calling <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.savetxt.html" rel="nofollow noreferrer"><code>np.savetxt()</code></a>. So as a quick'n'dirty solution I provided the <code>fmt=%s</code> argument to use the <a href="https://docs.python.org/3/library/string.html#format-specification-mini-language" rel="nofollow noreferrer">string formatter</a>:</p>
<pre><code>import numpy as np

a = np.array([
        [0, 1, 9],
        [1, 1, 2],
        [2, 4, 2],
        [7, 3, 2],
        [2, 2, 7],
        [1, 0, 5]
    ])

b = np.array([
        ['2017-07-28T12:00:00'],
        ['2017-07-28T12:01:00'],
        ['2017-07-28T12:02:00'],
        ['2017-07-28T12:03:00'],
        ['2017-07-28T12:04:00'],
        ['2017-07-28T12:05:00']
    ])

out = np.column_stack([b, a])

np.savetxt('output.txt', out, delimiter='\t', fmt="%s")
</code></pre>
<p>The output looks like this (tab separated due to <code>delimiter='\t'</code>):</p>
<pre><code>2017-07-28T12:00:00 0   1   9
2017-07-28T12:01:00 1   1   2
2017-07-28T12:02:00 2   4   2
2017-07-28T12:03:00 7   3   2
2017-07-28T12:04:00 2   2   7
2017-07-28T12:05:00 1   0   5
</code></pre>
</div>
<span class="comment-copy">If you don't like the <code>%s</code> answer, consider list approach.  Iterate on the 'rows' and format and write one row at a time.</span>
<span class="comment-copy">I expect <code>out</code> is a string type (that is, converting the numbers to their string equivalents).  In that case <code>%s</code> is the only <code>fmt</code> option.  That's ok as long as you don't need to control things like decimal points.  Constructing a structured array with a compound dtype is more work, and also requires a fancier <code>fmt</code>.</span>
<span class="comment-copy">hpaulj is correct that out ends up as a string type. My example above was slightly simplified and I do require control of decimal points, so unfortunately albert's quick and dirty solution won't work. How does one create a compound data type containing a 2d array that can be written to file?</span>
