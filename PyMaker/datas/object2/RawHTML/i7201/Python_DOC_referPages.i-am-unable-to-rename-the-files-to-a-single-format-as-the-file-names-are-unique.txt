<div class="post-text" itemprop="text">
<p>I have below set of files to be renamed in a single format as shown here;</p>
<pre><code>ABCD.R9999.COMMON.D170401.T199665.txt
</code></pre>
<p>Here, <code>ABCD</code> is mandatory on all files at its beginning. And Any content comes like <code>RR5526</code> or <code>AB8673</code> needs to be replaced with <code>R9999</code>.</p>
<p>Then crop all other unwanted fields and rename the file with above mentioned format.</p>
<pre><code>DH_062_FAT_HSC_H1666_EFTO.FH1666.COMMON.D170801.T0433417
DH_062_FAT_MMA_H0927_EFTO.FH0927.COMMON.D170801.T0433417
ABCD.FH2237.COMMON.D170701.T1549353
P.FH5526.COMMON.D130501.T1243225
FS3389.COMMON.D160901.T1539489
P.FH5587.COMMON.D150601.T1529158.7073202
EFTO.FH3890.COMMON.D170401.T1332005
H1737.COMMON.R201602.D160201.T1725587.txt                 
EFTO.RH3864.MSPCOBMA.D170421.T1246176
P.FH2225.COMMON.D170101.T1737084.12016373.txt
P.FH3204.COMMON.D170701.T1549353.txt_20170627_133012.txt
P.RH2312.COMMON.D110301.T1539063.13313178.txt.gz
</code></pre>
<p>I have tried below script to crop filenames;</p>
<pre><code>#!/bin/bash

FILES=/path/to/*COMMON*
for i in $FILES
do
  newarg="$(echo "$i" | sed 's/.FH\d{4}.COMMON.D\d{6}')"
  if [ "$newarg" != "" ];then
    mv "$i" "$newarg" 
  fi
done
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's some code that does what I think you want to do, although your description is still not completely clear.</p>
<pre><code>import re

data = '''\
DH_062_FAT_HSC_H1666_EFTO.FH1666.COMMON.D170801.T0433417
DH_062_FAT_MMA_H0927_EFTO.FH0927.COMMON.D170801.T0433417
ABCD.FH2237.COMMON.D170701.T1549353
P.FH5526.COMMON.D130501.T1243225
FS3389.COMMON.D160901.T1539489
P.FH5587.COMMON.D150601.T1529158.7073202
EFTO.FH3890.COMMON.D170401.T1332005
H1737.COMMON.R201602.D160201.T1725587.txt
EFTO.RH3864.MSPCOBMA.D170421.T1246176
P.FH2225.COMMON.D170101.T1737084.12016373.txt
P.FH3204.COMMON.D170701.T1549353.txt_20170627_133012.txt
P.RH2312.COMMON.D110301.T1539063.13313178.txt.gz
'''.splitlines()

pat = re.compile(r'(?:.*)(\.COMMON\..*$)')

for s in data:
    z = pat.sub(r'ABCD.R9999\1', s)
    if '.txt' not in z:
        z += '.txt'
    print(' In: {!r}\nOut: {!r}\n'.format(s, z))
</code></pre>
<p><strong>output</strong></p>
<pre><code> In: 'DH_062_FAT_HSC_H1666_EFTO.FH1666.COMMON.D170801.T0433417'
Out: 'ABCD.R9999.COMMON.D170801.T0433417.txt'

 In: 'DH_062_FAT_MMA_H0927_EFTO.FH0927.COMMON.D170801.T0433417'
Out: 'ABCD.R9999.COMMON.D170801.T0433417.txt'

 In: 'ABCD.FH2237.COMMON.D170701.T1549353'
Out: 'ABCD.R9999.COMMON.D170701.T1549353.txt'

 In: 'P.FH5526.COMMON.D130501.T1243225'
Out: 'ABCD.R9999.COMMON.D130501.T1243225.txt'

 In: 'FS3389.COMMON.D160901.T1539489'
Out: 'ABCD.R9999.COMMON.D160901.T1539489.txt'

 In: 'P.FH5587.COMMON.D150601.T1529158.7073202'
Out: 'ABCD.R9999.COMMON.D150601.T1529158.7073202.txt'

 In: 'EFTO.FH3890.COMMON.D170401.T1332005'
Out: 'ABCD.R9999.COMMON.D170401.T1332005.txt'

 In: 'H1737.COMMON.R201602.D160201.T1725587.txt'
Out: 'ABCD.R9999.COMMON.R201602.D160201.T1725587.txt'

 In: 'EFTO.RH3864.MSPCOBMA.D170421.T1246176'
Out: 'EFTO.RH3864.MSPCOBMA.D170421.T1246176.txt'

 In: 'P.FH2225.COMMON.D170101.T1737084.12016373.txt'
Out: 'ABCD.R9999.COMMON.D170101.T1737084.12016373.txt'

 In: 'P.FH3204.COMMON.D170701.T1549353.txt_20170627_133012.txt'
Out: 'ABCD.R9999.COMMON.D170701.T1549353.txt_20170627_133012.txt'

 In: 'P.RH2312.COMMON.D110301.T1539063.13313178.txt.gz'
Out: 'ABCD.R9999.COMMON.D110301.T1539063.13313178.txt.gz'
</code></pre>
<p>I'll let you figure out how to handle names that map to the same output string.</p>
<hr/>
<p>Here's a version that only retains the <code>D</code> and <code>T</code> parts of the name.</p>
<pre><code>pat = re.compile(r'(?:.*)\.COMMON\..*?(D\d*\.T\d*).*$')

for s in data:
    z = pat.sub(r'ABCD.R9999.COMMON.\1.txt', s)
    print(' In: {!r}\nOut: {!r}\n'.format(s, z))
</code></pre>
</div>
<span class="comment-copy">Have you attempted anything?</span>
<span class="comment-copy">This sounds like a job for <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regex</a>. What happens to names like <code>EFTO.RH3864.MSPCOBMA.D170421.T1246176</code> that don't contain <code>.COMMON.</code> ?</span>
<span class="comment-copy">Filenames with MSPCOBMA is a different set of files. That can be handled once I have an idea about how to handle first case.  I tried directly renaming using regex. Updated the post above. But I am not good at RegEx :(</span>
<span class="comment-copy">You still should post that code, even though it doesn't do exactly what you want (otherwise you're likely to get more downvotes). So post the code, and explain what it does wrong. You should also post the output you expect from that input.</span>
<span class="comment-copy">@codeforester, I got a script which replace filenames. I have added the same in my post now. I am not good at RegEx. and I dint find a way to replace the filenames as I am expecting. :(</span>
<span class="comment-copy">I just checked with the requirement;  We need to replace FH1666 with RH1666. This means, the value <code>H1666</code> will be different for each file and anything before H**** should be replaced with R.</span>
<span class="comment-copy">The code you have shared will be replacing those fields if it is a file content right ?.  Those are the files which I am working with and the filenames needs to be replaced as the output you shared. How do we change it ?.</span>
<span class="comment-copy">My code creates new strings from the strings you supply it. It doesn't know that those strings are file names. Once you have the names there are various ways to use them to rename the files, and if you have problems doing that please ask a fresh question; file renaming is a different topic to string pattern matching &amp; replacement.</span>
