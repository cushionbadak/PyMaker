<div class="post-text" itemprop="text">
<p>When I use emacs with elpy, just about every time I start writing code for function by typing:</p>
<pre><code>foo_func(
</code></pre>
<p>I automatically get on the bottom window:</p>
<pre><code>:container.foo_func(x, y, z=None)
</code></pre>
<p>But when I attempt on built-in type like enumerate or sort</p>
<pre><code>enumerate(
list.sort(
</code></pre>
<p>I do not get that nice argument list in elpy. If not, then are there ways to get that even via writing a call like:</p>
<pre><code>&gt;dir(enumerate)
&gt;inspect.signature(enumerate)
</code></pre>
<p>Appreciate any pointers in advance</p>
</div>
<div class="post-text" itemprop="text">
<p>No, some built-in functions (implemented in C) do not provide the required metadata to create signatures for them. Some do (those that are converted to use Argument Clinic in CPython do), while others don't.</p>
<p>This is stated in <a href="https://docs.python.org/3/library/inspect.html#inspect.signature" rel="nofollow noreferrer"><code>inspect.signature</code>s documentation</a>, too:</p>
<blockquote>
<p><strong>Note:</strong> Some callables may not be introspectable in certain implementations of Python. For example, in CPython, some built-in functions defined in C provide no metadata about their arguments.</p>
</blockquote>
<p>Case in point:</p>
<pre><code>&gt;&gt;&gt; signature(sorted)
&lt;Signature (iterable, /, *, key=None, reverse=False)&gt;
&gt;&gt;&gt; signature(enumerate)
ValueError: no signature found for builtin type &lt;class 'enumerate'&gt;
</code></pre>
<p>So you'd need to consult the documentation for these (maybe an emacs plugin that uses the docs might exist?)</p>
</div>
<div class="post-text" itemprop="text">
<p>Thank u that helped above.</p>
<blockquote>
<p>Elpy provides a single interface to documentation. C-c C-d (elpy-doc)
  When point is on a symbol, Elpy will try and find the documentation
  for that object, and display that. If it can’t find the documentation
  for whatever reason, it will try and look up the symbol at point in
  pydoc. If it’s not there, either, it will prompt the user for a string
  to look up in pydoc. With a prefix argument, Elpy will skip all the
  guessing and just prompt the user for a string to look up in pydoc.</p>
</blockquote>
<p><code>enumerate(</code> # &amp; I hit C-c C-d</p>
<p>enumerate():</p>
<p>enumerate(iterable[, start]) -&gt; iterator for index, value of iterable</p>
<p>Return an enumerate object.  iterable must be another object that supports
  iteration.  The enumerate object yields pairs containing a count (from
  start, which defaults to zero) and a value yielded by the iterable argument.
  enumerate is useful for obtaining an indexed list:
      (0, seq[0]), (1, seq[1]), (2, seq[2]), ...</p>
</div>
