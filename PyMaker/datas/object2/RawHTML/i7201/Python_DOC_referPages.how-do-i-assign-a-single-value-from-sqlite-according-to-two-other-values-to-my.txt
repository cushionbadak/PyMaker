<div class="post-text" itemprop="text">
<p>I'm trying to create a simple online login form using Python and SQLite3:</p>
<pre><code>user_email = request.forms.get("email")
user_password = request.forms.get("password")
connection = sqlite3.connect("/home/hassanrashid/mysite/users.db")
c = connection.cursor()
c.execute("SELECT UserName from account WHERE UserEmail=? AND UserPassword=?", (user_email, user_password))
</code></pre>
<p>The email and password values entered into the html form are assigned to the <code>user_email</code> and <code>user_password</code> variables respectively. What I'm trying to do is, once the user logs in, he is greeted with a welcome message ("Welcome, UserName!").</p>
<p>My question is, how do I assign the <code>UserName</code> value from my SQLite database table to my Python variable <code>user_name</code>?</p>
<p>I've also tried this code:</p>
<pre><code>user_name = c.execute("SELECT UserName from account WHERE UserEmail=?", (user_email)).fetchone()
</code></pre>
<p>But that gives me an error: <code>"Incorrect number of bindings supplied. The current statement uses 1, and there are 15 supplied."</code> There are 15 rows in my database. I'm assuming that the criteria (<code>WHERE UserEmail=?</code>) isn't being applied.</p>
<p>How do I fix this?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>user_name = c.execute("SELECT UserName from account WHERE UserEmail=?", (user_email)).fetchone()
</code></pre>
<p>Two issues with this:</p>
<ol>
<li><p><code>(user_email)</code> is not a tuple, so you are not passing a 1-element tuple to <code>execute()</code>. Instead, pass <code>(user_email,)</code> to make a 1-element tuple.</p></li>
<li><p>The return value of <a href="https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.fetchone" rel="nofollow noreferrer"><code>fetchone()</code></a> will return the whole result row as a tuple. If there is only one column in the row, you will still get a 1-element tuple back. You need to unpack the tuple first in order to fix this:</p></li>
</ol>
<pre><code>query = "SELECT UserName from account WHERE UserEmail=?"
result = c.execute(query, (user_email,)) 

# either store the row tuple first
row = result.fetchone()
user_name = row[0]

# or you could unpack the tuple immediately (note the trailing comma)
user_name, = result.fetchone()
</code></pre>
</div>
<span class="comment-copy"><code>(user_email)</code> doesn't create a tuple <code>(user_email,)</code> does. There are probably 15 characters in the email address and it's unpacking the string of characters into 15 individual characters.</span>
<span class="comment-copy">@PeterWood, thank you, that seems to be working. However, now my welcome message is displaying: <code>Welcome, ('Name',)!</code> When I slice it using <code>user_name = user_name[2:6]</code>, it then becomes <code>Welcome, ()!</code> Just two brackets and nothing else, which is strange. How do I go about showing the user_name value without the brackets, quotes and commas?</span>
<span class="comment-copy">@Hassan The (single element) row you are getting is a tuple still, so if you want the first (and only) element of that row, you'd use user_name[0]. Actually, you'll probably also want to error check, e.g. see if you did in fact get a result, and assign the appropriate value to your user_name.</span>
<span class="comment-copy">@bgse I got it! I was getting a tuple, and I used the [0] to extract the value. Thank you so much!</span>
