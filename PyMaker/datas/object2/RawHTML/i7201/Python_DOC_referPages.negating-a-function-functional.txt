<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/42561843/python-negate-boolean-function">Python negate boolean function</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>Does python have a built-in statement or function that negates another function? More specific: a function that takes another function <code>fun</code> (which returns boolean) and returns a function that is a negated copy of <code>fun</code>.</p>
<p>Its simple to create:</p>
<pre><code>def neg(fun):
    def negfun(x):
        return not fun(x)
    return negfun
</code></pre>
<p>Example usage:</p>
<pre><code>In [1]: fun = lambda x: x &lt; 3

In [2]: filter(fun, range(8))
Out[2]: [0, 1, 2]

In [3]: filter(neg(fun), range(8))
Out[3]: [3, 4, 5, 6, 7]
</code></pre>
<p>Maybe this is a bad example, just imagine the filter function already exists somewhere else and you want to use it.</p>
<p>I am just surprised that I couldn't find a simpler way... is there one?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you want to do is compose the <a href="https://docs.python.org/3/library/operator.html#operator.not_" rel="nofollow noreferrer"><code>not</code> operator</a> with <code>fun</code></p>
<p>Sadly, python does not have any nice "composition" function, so you would have to wrap it yourself:</p>
<pre><code>def compose(f, g):
    return lambda x: f(g(x))
</code></pre>
<p>With this you could write:</p>
<pre><code>import operator

def neg(func):
    return compose(operator.not, fun)
</code></pre>
<p>With that said, I find it much more easy to read either your code or simply using a lambda:</p>
<pre><code>neg_func = lambda x: not fun(x)
</code></pre>
</div>
<span class="comment-copy">Not as far as I know, nevertheless you can improve the above code.</span>
<span class="comment-copy">You could use <code>itertools.filterfalse</code> to negate <code>filter</code> results.</span>
<span class="comment-copy">What's so bad about <code>not fun()</code> instead of <code>negfun()</code>?</span>
<span class="comment-copy">@KlausD.: the idea is that the <code>not fun</code> is a blackbox you then pass to another function.</span>
<span class="comment-copy">Indeed python is not functional enough for this. You'll need haskell or scala.</span>
<span class="comment-copy">I must say I usually like lambda expressions, but in this case I think the lambda solution is less readable.</span>
<span class="comment-copy">Depends on the circumstances, sure here we have the definition of <code>neg</code> right above, but in an actual project it could be in some other file and it is not quite obvious what it does. Who knows if it negates the argument or the result, for example? With a lambda it is instantly obvious that we do not mean <code>lambda x: fun(not x)</code>. Imo it's a tossup in general (since the lambda is uglier).</span>
