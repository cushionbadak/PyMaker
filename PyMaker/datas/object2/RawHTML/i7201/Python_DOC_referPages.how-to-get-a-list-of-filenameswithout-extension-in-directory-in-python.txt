<div class="post-text" itemprop="text">
<p>Assume my folder structure to be </p>
<pre><code>+Data
  -abc.jpg
  -db.jpg
  -ap.jpg
</code></pre>
<p>Input is 'path/to/Data' </p>
<p>Expected output is ['abc','db','ap']</p>
<p>I saw many similar questions but did not get what exactly I wanted.
I prefer to use os module in python.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os    
files_no_ext = [".".join(f.split(".")[:-1]) for f in os.listdir() if os.path.isfile(f)]
print(files_no_ext)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>simply try this,</p>
<pre><code>l=os.listdir('path')
li=[x.split('.')[0] for x in l]
</code></pre>
<ol>
<li>First list your directory files</li>
<li>split file by<code>.</code> and take first argument.</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/os.path.html#os.path.isfile" rel="nofollow noreferrer">os.listdir</a> which take path as argument and return a list of files <strong>and</strong> directories in it.<br/>
<code>&gt;&gt;&gt; list_ = os.listdir("path/to/Data")</code><br/>
<code>&gt;&gt;&gt; list_</code><br/>
<code>&gt;&gt;&gt; ['abc.jpg', 'dn.jpg', 'ap.jpg']</code></p>
<p>With that list, you only have to do a comprehension list which split each element on '.' (dot), take all the elements except the last one an join them with '.' (dot) and check if the element is a file using <a href="https://docs.python.org/3/library/os.path.html#os.path.isfile" rel="nofollow noreferrer">os.path.file()</a>.</p>
<p><code>&gt;&gt;&gt; list_ = ['.'.join(x.split('.')[:-1]) for x in os.listdir("path/to/Data") if os.path.isfile(os.path.join('path/to/Data', x))]</code><br/>
<code>&gt;&gt;&gt; list_</code><br/>
<code>&gt;&gt;&gt; ['abc', 'dn', 'ap']</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import os
filenames=next(os.walk(os.getcwd()))[2]
efn=[f.split('.')[0] for f in filenames]

os.getcwd()   #for get current directory path
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>    import os
    from os import listdir
    from os.path import isfile, join
    def filesMinusExtension(path):
        # os.path.splitext(f)[0] map with filename without extension with checking if file exists.
        files = [os.path.splitext(f)[0] for f in listdir(path) if isfile(join(path, f))];
        return files;
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/3207219/how-do-i-list-all-files-of-a-directory">How do I list all files of a directory?</a></span>
<span class="comment-copy">For extracting the file name have a look here: <a href="https://stackoverflow.com/questions/541390/extracting-extension-from-filename-in-python">Extracting extension from filename in Python</a></span>
<span class="comment-copy">Have a look at os.walk()</span>
<span class="comment-copy"><a href="https://docs.python.org/3.6/library/os.html#os.listdir" rel="nofollow noreferrer"><code>os.listdir</code></a> does not make a difference between directories and files, so your list will have (mostly empty) entries for subdirectories.</span>
<span class="comment-copy">@ChristianKÃ¶nig thanks, fixed</span>
<span class="comment-copy">You could furthermore exchange your <code>join/split</code> by <a href="https://docs.python.org/3.6/library/os.path.html#os.path.splitext" rel="nofollow noreferrer"><code>os.path.splitext(f)[0]</code></a>, which takes care of some special cases (leading periods on the basename).</span>
<span class="comment-copy">There are some problems with you code...   But, what bother me is : semi-colons ?  You are in Python guy, just throw them away !</span>
<span class="comment-copy">Thanks for the feedback. Yes the java background seems to affect my python typing of semicolons at times. Anyway can you share what problems could arise with this code ?</span>
<span class="comment-copy">Except semi-colons, why importing isfile and join that way without doing it for os.path.splittext ? Furthermore, you use a comprehension list for filtering (the 'if' at the right) but not for mapping. You just have to do <code>[os.path.splitext(f)[0] for f in listdir(path) if isfile(join(path, f))]</code>.</span>
<span class="comment-copy">Okay I've done the research and you are right. My modified solution removed redundant and unnecessary code.</span>
<span class="comment-copy">You can even not use an intermediate variable and directly return the comprehension list if you want.</span>
