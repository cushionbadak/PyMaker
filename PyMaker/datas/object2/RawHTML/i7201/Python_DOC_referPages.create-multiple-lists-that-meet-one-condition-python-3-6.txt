<div class="post-text" itemprop="text">
<p>I have a class City:</p>
<pre><code>class City(object):
    #A city has two coordinates in a graph(x,y), and a set of order
    def __init__(self, name, x, y, orders):
        self.name = name
        self.x = x
        self.y = y
        self.orders = orders
</code></pre>
<p>I create a list of cities:</p>
<p>Example:</p>
<pre><code>list_cities = [City1, City2, City3, City4]

City1 (0.0, 0.0) [1, 2]
City2 (1.0, 0.0) [2, 3]
City3 (2.0, 0.0) [1, 3]
City4 (3.0, 0.0) [2]
</code></pre>
<p>I would like to group the cities by orders so that it would look like this:</p>
<pre><code>list1 = [City1, City3]
list2 = [City1, City2, City4]
list3 = [City2, City3]
</code></pre>
<p>I've tried it with dictionaries, list lists and sets but it still does not give me results and I do not know how else I could get it. 
I leave you a code that I have tried:</p>
<pre><code>tours = []
city = City.create(arrayCity)

for i in range(0,len(city.orders)):
    tours[city.orders[i]].append(city)
</code></pre>
<p>This outputs:</p>
<pre><code>IndexError: list index out of range
</code></pre>
<p>I hope you can help me.
Thank you very much</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>class City:
    def __init__(self,name,x,y,orders):
        self.name = name
        self.x = x
        self.y = y
        self.orders = orders

City1 = City('City1',0.0,0.0,[1,2])
City2 = City('City2',1.0,0.0,[2,3])
City3 = City('City3',2.0,0.0,[1,3])
City4 = City('City4',3.0,0.0,[2])

list_cities = [City1, City2, City3, City4]

group_cities_by_orders = {}

for i in range(1,len(list_cities)+1):
    for city in list_cities:
        if i in city.orders:
            if i in group_cities_by_orders:
                group_cities_by_orders[i].append(city.name)
            else:
                group_cities_by_orders[i] = [city.name]



print(group_cities_by_orders)

Output:
{1: ['City1', 'City3'], 2: ['City1', 'City2', 'City4'], 3: ['City2', 'City3']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are getting an <code>IndexError</code> because you are trying to access items in an unpopulated list.  I imagine you are trying to fill out something more like this:</p>
<pre><code>tours = [[],[],[]]
</code></pre>
<p>There are a few other problems here.  You are indexing by integers starting from <code>1</code> it seems from your example of how each city is set up.  You need to adjust for the offset.  You don't need to iterate the indices of <code>city.orders</code> you really only need the values.</p>
<p>The below code requires hard coding the number of lists you will need to fill out.  Easy if it is known, but annoying if it can change.  The below code assumes there are 3 tours as in your example.</p>
<pre><code>tours = [[],[],[]]
city = City.create(arrayCity)

for i in city.orders:
    tours[i-1].append(city)
</code></pre>
<p>Ideally you might want a more dynamic set up where you don't have to specify the number of groups before hand:</p>
<pre><code>tours = []
city = City.create(arrayCity)

for i in city.orders:
    while len(tours) &lt; i:
        tours.append([])
    tours[i-1].append(city)
</code></pre>
<p>The above code introduces a while loop that will add lists to <code>tours</code> if you have not yet created the sub-lists you are trying to fill out.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want <code>list1</code> to contain Cities that have <code>1</code> in their <code>order</code>, you can test for that and take action:</p>
<pre><code>if 1 in city.order:
    list1.append(city)
</code></pre>
<p>Similarly</p>
<pre><code>if 2 in city.order:
    list2.append(city)
if 3 in city.order:
    list3.append(city)
</code></pre>
</div>
<span class="comment-copy">What is <code>city.orders</code>?</span>
<span class="comment-copy">The error is because you try to append an element to somthing that doesn't exist yet. First you need to create the list of lists and only then do the for loop for appending.</span>
<span class="comment-copy">Yes, but for another different list of cities I would not know the size of the list of lists</span>
<span class="comment-copy">how many groups do you need ? or you have unknow groups?</span>
<span class="comment-copy">Also you can't have a list with not sequenced indexes. I suggest you to use dictionary</span>
<span class="comment-copy">This will work. :)</span>
<span class="comment-copy">You could make use of <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">collections.defaultdict</a> if you wanted.</span>
<span class="comment-copy">Yup, we can do that too.</span>
