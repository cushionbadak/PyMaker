<div class="post-text" itemprop="text">
<p><strong>Problem:</strong></p>
<p>Iam working on a feed generator which collects feeds from various online sources and I need to divide them into domains ,urls and ip addresses.According to my logic i can be able to differentiate them into ips and rest.And on applying regex on the remaining i thought of differentiating them into domains and urls but all are going to domain list and not to urls.</p>
<p><strong>Code</strong></p>
<pre><code>#!/usr/bin/python
import csv
import MySQLdb
import time
from shutil import copyfile
import socket
import re

def __init__(self):
                self.data = ''
                self.ip = []
                self.url = []
                self.domain = []
def parse(self):
                with open('something.csv') as csv_file:
                        self.count = 0
                        self.reader = csv.reader( csv_file , delimiter = ',')
                        print self.reader.next()
                        self.data = self.reader

                        for trail in self.data:
                                self.address = trail[0]
                                try:
                                        socket.inet_aton( self.address )
                                        self.ip.append( self.address )
                                except:
                                        try:
                                                m = re.search(r"[a-zA-Z\d-]{,63}(\.[a-zA-Z\d-]{,63})*" , trail[0] )
                                                print m.group()

                                                self.domain.append( self.address)
                                        except:
                                                self.url.append( self.address )
                                self.count +=1

                self.today_date = time.strftime( "%Y-%m-%d" )
                with open('/home//ip/{}'.format(self.today_date) , 'w') as g:
                        for i in self.ip:
                                g.write( i )
                                g.write( '\n')
</code></pre>
<p><strong>What I tried</strong></p>
<ul>
<li>To differentiate ip addresses i used socket library and used socket.inet_aton method to verify whether it is valid ip or not, if it is valid ip address then iam appending to list.</li>
<li>I took some help from regex tutorial and wrote the regex to differentiate the domains </li>
</ul>
<p><strong>Solution I wanted (Edited)</strong>
Wrongly Asked. What I wanted is extract the domain names from urls <code>http://www.pcwebopedia.com/index.html</code> and find domain_name as <code>pcwebopedia.com</code> and sent it to domain list and also send the full url to url_list.</p>
<p>Suppose item is www.google.com it should send google.com to domain list and www.google.com to url list.</p>
<p>suppose item is abc.net it should send to domain list and not to url list.</p>
<p>Any suggestions on how to solve this ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The simplest solution would be to check if '/' in url:</p>
<p>If you want more generic and valid solution use:</p>
<pre><code>from urllib.parse import urlparse
urls = []
domains = []

def url_categorize(url):
    o = urlparse(url)
    if o.path:
        urls.append(url)
    else:
        domains.append(url)

url_categorize("https://www.google.co.in")
url_categorize("http://example.com")
url_categorize("https://stackoverflow.com/questions/ask")
url_categorize("https://twitter.com/MarceloRivero")


In [36]: urls
Out[36]: ['stackoverflow.com/questions/ask', 'twitter.com/MarceloRivero']

In [37]: domains
Out[37]: ['google.com', 'abc.net']
</code></pre>
</div>
<span class="comment-copy">if your examples cover all cases why then not just check <code>if '/' in self.address: ...</code>?</span>
<span class="comment-copy">How do you want to handle something like "google.com/"? BTW, if you want to parse these URLs, you should take a look at <a href="https://docs.python.org/3/library/urllib.parse.html#module-urllib.parse" rel="nofollow noreferrer">urllib.parse</a>, or <a href="https://docs.python.org/2/library/urlparse.html" rel="nofollow noreferrer">urlparse</a> for Python 2. It's a better option than rolling your own parser with regex.</span>
<span class="comment-copy">I just noticed that your question is tagged Python 2, but you're opening the CSV file in text mode. You can safely do that in Python 3, but in Python 2 the <code>csv</code> module needs files to be opened in binary mode, as mentioned in <a href="https://docs.python.org/2/library/csv.html#csv.reader" rel="nofollow noreferrer">the docs</a>. Using text files won't hurt on *nix systems, but on Windows, where text files have EOL translation, it will make a mess.</span>
