<div class="post-text" itemprop="text">
<p>My question is: I have this list:</p>
<pre><code>[['x', '2', 'NOT'], [['sw'], ['y', '1', 'P12'], ['sw']], [['sw'],
['y', '2', 'NOT'], ['sw']], ['x', 'P01'], ['y', 'Xt']]
</code></pre>
<p>I'd like to delete the elements duplicate when they appear side by side.
Example:['sw']], [['sw']</p>
<p>The end result should be:</p>
<pre><code> [['x', '2', 'NOT'], ['sw'], ['y', '1', 'P12'], ['y', '2', 'NOT'], ['sw'], 
 ['x', 'P01'], ['y', 'Xt']]
</code></pre>
<p>I have tried a lot, but I can do that.</p>
</div>
<div class="post-text" itemprop="text">
<p>To remove the duplicate elements,</p>
<pre><code>mylist=[['x', '2', 'NOT'], ['sw'], ['y', '1', 'P12'], ['sw'], ['sw'], ['y', '2', 'NOT'], ['sw'], ['x', 'P01'], ['y', 'Xt']]
print (mylist)

newlist=[]
for i, e in enumerate(mylist):
    try:
        if not (mylist[i-1] == mylist[i] or mylist[i] == mylist[i+1]):
            newlist.append(e)
    except IndexError:
        newlist.append(e)

print (newlist)
</code></pre>
<p>Gives the results</p>
<pre><code>[['x', '2', 'NOT'], ['sw'], ['y', '1', 'P12'], ['sw'], ['sw'], ['y', '2', 'NOT'], ['sw'], ['x', 'P01'], ['y', 'Xt']]
[['x', '2', 'NOT'], ['sw'], ['y', '1', 'P12'], ['y', '2', 'NOT'], ['sw'], ['x', 'P01']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Can do this with list comprehension and enumerate (to get the index)</p>
<pre><code>mylist=[['x', '2', 'NOT'], ['sw'], ['y', '1', 'P12'], ['sw'], ['sw'], ['y', '2', 'NOT'], ['sw'], ['x', 'P01'], ['y', 'Xt']]
print (mylist)

newlist=[e for i, e in enumerate(mylist) if mylist[i-1] != mylist[i]]
print (newlist)
</code></pre>
<p>Here's the output</p>
<pre><code>[['x', '2', 'NOT'], ['sw'], ['y', '1', 'P12'], ['sw'], ['sw'], ['y', '2', 'NOT'], ['sw'], ['x', 'P01'], ['y', 'Xt']]
[['x', '2', 'NOT'], ['sw'], ['y', '1', 'P12'], ['sw'], ['y', '2', 'NOT'], ['sw'], ['x', 'P01'], ['y', 'Xt']]
</code></pre>
</div>
<span class="comment-copy">The first step is to make the nesting of your lists uniform. The answers to <a href="https://stackoverflow.com/questions/45502776/partial-list-flattening-in-python">this recent question</a> show how to do that. And then you can search for adjacent duplicates. One way to do that is to use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>groupby</code></a></span>
<span class="comment-copy">What you type is wrong. This two elements ['sw']] [['sw'] belong two DIFFERENT nested lists so they are not side by side. You have a big list that has nested lists as elements. What exactly do you want to achieve? To create a big list with unique elements?</span>
<span class="comment-copy">@MichailN my interpreter isn't complaining...</span>
<span class="comment-copy">You should post your own code attempt, even though it doesn't give the desired result. Questions like this without some code often attract downvotes.</span>
<span class="comment-copy">@ juanpa.arrivillaga I mean logically wrong not syntactically</span>
<span class="comment-copy">Simon it's working !!! thank you very much!!! I had this problem for days.</span>
<span class="comment-copy">Simon , Why does not the last element print? I'm still new to programming, I'm a little lost.</span>
<span class="comment-copy">I've updated the code (It was the exception handling) this will be thrown on the very last element so needs to add this element to the list rather than to just continue</span>
<span class="comment-copy">once more, thank you!!!</span>
<span class="comment-copy">The problem is that when I have duplicate elements I need to remove both. And obtain the following:      [['x', '2', 'NOT'], ['sw'], ['y', '1', 'P12'], ['y', '2', 'NOT'], ['sw'], ['x', 'P01'], ['y',        'Xt']]</span>
