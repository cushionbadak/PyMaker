<div class="post-text" itemprop="text">
<p>So I have a program that rips my movie collection but I'm trying to automate it further. My purpose is to search through each folder and look for a ".mkv" file and if it's found move it to the root folder then delete the original folder.</p>
<p>I have gotten this to work and it's operational but I'm curious how it could be wrote better. Is there a way to essentially do this pseudo code?</p>
<pre><code>loop each folder:
  if folder has files:
    if file extention is '.mkv':
      move file to '/media/movies/'
</code></pre>
<p>The folder structure is</p>
<pre><code>C:/Users/Matthew/Desktop/New folder (2)
    - Test Movie
        ~ Test_Movie_t00.mkv
    - Alpha Movie
        ~ Alpha_Movie_t200.mkv
    - Greatest Movie Ever
        ~ Greatest_Movie_Ever_t100.mkv
    ~ Good Format Movie.mkv
    ~ Stackoverflow the Movie.mkv
</code></pre>
<p>Here is my code that works.</p>
<pre><code>import os
import re

print("Running Cleaner\n")
directory = 'C:/Users/Matthew/Desktop/New folder (2)'
directorylength=len(directory)+1
folders = []
movies = []
for root, dirs, files in os.walk(directory, topdown=False):
    for name in dirs:
        #print(os.path.join(root, name)[strlength:])
        folders.append(os.path.join(root, name)[directorylength:])
for folder in folders:
    for file in os.listdir(directory + "/" + folder):
        if file.endswith(".mkv"):       
            #print(os.path.join(folder, file))
            movies.append(os.path.join(folder, file)[len(folder)+1:])
for folder in folders:
    for movie in movies:
        if os.path.exists(directory + "/" + folder + "/" + movie):
            file=folder + "/" + movie
            print("Found: " + file)
            newFile = re.sub('_t\d{2,}.mkv',".mkv",file)
            newFile = re.sub('_',' ',newFile)
            newFile = newFile[len(folder)+1:]
            print("Renaming to: " + newFile)
            os.rename(directory + "/" + file, directory + "/" + newFile)
    print("Removing empty folder: " + folder)
    os.rmdir(directory + "/" +folder)
print("\nFinished Cleaning up!")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<ol>
<li><p>Keep a mapping of extensions to destination paths</p>
<pre><code>mapping = {'mkv' : '/media/movies/', ... }
</code></pre>
<p>The nice thing about this is the support for multiple extensions in the future.</p></li>
<li><p>Check the extension by splitting with <code>os.path.splitext</code></p></li>
<li><p>Using <a href="https://docs.python.org/3/library/shutil.html#shutil.move" rel="nofollow noreferrer"><code>shutil.move</code></a>, you can specify the destination as a directory. That simplifies things</p></li>
<li><p><code>if not os.listdir</code> to check if a directory is empty. Otherwise, errors will be thrown (if the directory isn't empty)</p></li>
</ol>
<hr/>
<pre><code>mapping = {'mkv' : '/media/movies/', ... }
for root, dirs, files in os.walk(directory, topdown=False):
    for file in files:
        fullpath = os.path.join(root, file) 
        _, ext = os.path.splitext(fullpath)
        if ext in mapping:
            shutil.move(fullpath, mapping[ext])

    for dir in dirs:
        fullpath = os.path.join(root, dir)
        if not os.listdir(fullpath):
            os.rmdir(fullpath)
</code></pre>
</div>
<span class="comment-copy">Have you tried using glob?</span>
<span class="comment-copy">Add to <a href="https://codereview.stackexchange.com">codereview.stackexchange.com</a> this help you to get better suggestion</span>
