<div class="post-text" itemprop="text">
<p>Does anyone know how can I convert unix timestamp to readable dates in Python? I've been using this:</p>
<pre><code>print(
datetime.datetime.fromtimestamp(
    int("1284101485")
).strftime('%Y-%m-%d %H:%M:%S')
)
</code></pre>
<p>but it gets taxing when I have to convert many.</p>
<p>Appreciate the help.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think some of the confusion around this question stems from the word "Taxing", people often assume that this means from a computation time perspective but I suspect that you have not yet learned about <a href="https://wiki.python.org/moin/ForLoop" rel="nofollow noreferrer" title="for loops">for loops</a></p>
<p>In essence, you need to capture the timestamps in some kind of <a href="https://stackoverflow.com/questions/32799980/what-exactly-does-iterable-mean-in-python" title="iterables">iterable</a>, given that you are using a csv I suggest you look at the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer" title="csv module">csv</a> python module. Then you can iterate over the iterable:</p>
<pre><code>for timestamp in timestamp_collection:
    print(datetime.datetime.fromtimestamp(
            int("1284101485")
            ).strftime('%Y-%m-%d %H:%M:%S')
    )
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>print (datetime.datetime.utcfromtimestamp(1284101485))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If time format isn't really important to you, this will do:</p>
<pre><code>&gt;&gt;&gt; from time import ctime as convert
&gt;&gt;&gt; convert(1284101485)
'Fri Sep 10 10:51:25 2010'
</code></pre>
<hr/>
<p>Example of usage:</p>
<pre><code>number = 1000

# Here we generate a list with given number of timestamps.
from random import randint

timestamps = []
for i in range(0, number):
    timestamps += [randint(0, 2147483647)]

# Here is actual example of massive conversation.
from time import ctime as convert

for i in range(0, number):
    print(str(i+1)+"\t"+str(timestamps[i])+"\t-&gt;\t"+convert(timestamps[i]))
</code></pre>
<p>Example generates a list with timestamps (ready-to-use data). Next we convert timestamps (in loop) and print them. Code processes (generates, converts and prints) 200 timestamps faster than I can blink, 1k timestamps in less than 0.5 second and 100k in less than 12 seconds. Tested on old PC.</p>
</div>
<span class="comment-copy">Where are the many timestamps stored? In a file?</span>
<span class="comment-copy">How many is many? What's an acceptable time in your context? What have you tried so far?</span>
<span class="comment-copy">'%Y-%m-%d %H:%M:%S' can be rewritten as: '%x %X'</span>
<span class="comment-copy">@Paddez No it can't</span>
<span class="comment-copy">@donkopotamus: <code>&gt;&gt; datetime.datetime.fromtimestamp(int("1284101485")).strftime('%x %X') &gt;&gt; '09/10/10 06:51:25'</code>  UNIX Timestamp -&gt; Readable date.</span>
<span class="comment-copy">This definitely helps! Understand the confusion, my apologies for not being as clear. In my defence: -I just picked up coding -English isn't my first language If I understand your code correctly, can timestamp_collection be a list?  #can I change the code to this, to basically reiterate all the values in the timestamp_collection list?             for timestamp in timestamp_collection:                    print(datetime.datetime.fromtimestamp(                    int("timestamp")                     ).strftime('%Y-%m-%d %H:%M:%S')              )</span>
<span class="comment-copy">I seem to not able to include codes in comments :$</span>
<span class="comment-copy">@harry yes- timestamp_collection can definitely be a list!  Also, if an answer is helpful please make sure to upvote it, and if it is correct, please mark it correct.</span>
<span class="comment-copy">perfect, already upvoted your answer! certainly most helpful!</span>
<span class="comment-copy">I've tried this but I can't convert more than 1 timestamp. I have about 200 of them</span>
<span class="comment-copy">@Harry, I am not sure what's wrong. Updated answer with usage example.</span>
