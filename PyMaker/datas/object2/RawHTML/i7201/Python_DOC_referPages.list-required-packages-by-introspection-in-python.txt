<div class="post-text" itemprop="text">
<p>How can I list the requires packages by introspection from running Python or IPython instance?</p>
<p>I often start development from a very loaded conda environment that has the full Anaconda distribution and a whole lo more installed. When I wish to share code I would like to be able to spit out a <code>requirements.txt</code> for pip or <code>environment.yml</code> for conda consisting only of the packages currrently loaded in the interpreter.</p>
<p>How can I do this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use the python builtin package <a href="https://docs.python.org/3/library/modulefinder.html" rel="nofollow noreferrer">modulefinder</a> to test your script for modules. Something like:</p>
<pre class="lang-py prettyprint-override"><code>from modulefinder import ModuleFinder

finder = ModuleFinder()
finder.run_script('bacon.py')

print('Loaded modules:')
for name, mod in finder.modules.items():
    print('%s: ' % name, end='')
    print(','.join(list(mod.globalnames.keys())[:3]))

print('-'*50)
print('Modules not imported:')
print('\n'.join(finder.badmodules.keys()))
</code></pre>
</div>
<span class="comment-copy">To build the ralation from loaded modules to package would be a complex task. In general I advise to start developing with an empty environment.</span>
<span class="comment-copy">@Klaus doesn't conda maintain such a mapping?</span>
<span class="comment-copy">It is easy to get the names of the modules loaded, but they are not necessarily the names as required for conda or pip. And a lot of built-in and "private" modules will be in the list.</span>
<span class="comment-copy">@Klaus conda &amp; pip have to maintain their own module-&gt;pacakage mappings in order for their remove commands to work. It should be possible to access that programmatically.</span>
