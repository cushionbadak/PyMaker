<div class="post-text" itemprop="text">
<p>I wrote a simple example of what im trying to do :</p>
<pre><code>class Test:
    @staticmethod
    def mul(x,y):
        return x*y
    FUNC1 = staticmethod(lambda y: Test.mul(y,2))
    FUNC2 = staticmethod(lambda y: staticmethod(lambda x: Test.mul(y,x)))
print Test.FUNC1(2)
print Test.FUNC2(2)(3)
</code></pre>
<blockquote>
<pre><code>print Test.FUNC2(2)(3)
</code></pre>
<p>TypeError: 'staticmethod' object is not callable</p>
</blockquote>
<p>I was expecting second line to print 6 (as 3*2), how to do that right?</p>
</div>
<div class="post-text" itemprop="text">
<p>well that was easier then i thought :</p>
<pre><code>class Test:
    @staticmethod
    def mul(x,y):
        return x*y
    FUNC1 = staticmethod(lambda y: Test.mul(y,2))
    FUNC2 = staticmethod(lambda y: lambda x: Test.mul(y,x))
print Test.FUNC1(2)
print Test.FUNC2(2)(3)
</code></pre>
<p>this works</p>
</div>
<div class="post-text" itemprop="text">
<p>you are evaluating the <code>lambda function</code>; instead you should <code>return</code> it:</p>
<pre><code>class Test:
    @staticmethod
    def mul(x,y):
        return x*y

    @staticmethod
    def FUNC2(y):
        return lambda y: Test.mul(y,2)
</code></pre>
<p>which gives:</p>
<pre><code>print(Test.FUNC2(2))  # &lt;function Test.FUNC1.&lt;locals&gt;.&lt;lambda&gt; at 0x7f2c92594a60&gt;
print(Test.FUNC2(2)(3))  # 6
</code></pre>
<hr/>
<p>a different way to go is to use <a href="https://docs.python.org/3/library/functools.html?highlight=functools" rel="nofollow noreferrer"><code>functools</code></a>:</p>
<pre><code>from operator import mul
from functools import partial

class Test:

    @staticmethod
    def FUNC2(y):
        return partial(mul, y)
    # or
    # FUNC2 = staticmethod(lambda y: partial(mul, y))

print(Test.FUNC2(2))  # functools.partial(&lt;built-in function mul&gt;, 2)
print(Test.FUNC2(2)(3)) # 6
</code></pre>
</div>
<span class="comment-copy">Test.FUNC1(2) works as expected, its Test.FUNC2 that doesnt work... this answer is irrelevant...</span>
<span class="comment-copy">@OfekRon oh, i mislabeled the function in both examples. fixed now... you had no issues with <code>FUNC1</code>, right?</span>
