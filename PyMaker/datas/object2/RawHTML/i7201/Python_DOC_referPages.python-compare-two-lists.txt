<div class="post-text" itemprop="text">
<p>I'm learning python and trying to create a movie collection for my own use using web.py .</p>
<p>I have two lists</p>
<pre><code>movies_all = ["abc","xyz","opq"]
movies_watched = ["xyz","pqr","cba"]
</code></pre>
<p>What I want to do is Print all rows of movies_all in the final output.
Such that If there is a match in list movies_watched, output Yes or No. For example, in above only "xyz" is common.</p>
<p>Preferably the output should be in a single data type, for example "list of lists" or dictionary or list of tuples, etc.
The intention is to display the output in an html table like the one below.</p>
<p>Output:</p>
<pre>
================
Movies| Watched |
------|---------|
abc   |No       |
xyz   |Yes      |
opq   |No       |
</pre>
<p>The table in output is only for improving readability and is actually not required.</p>
<p>I have tried this but not able to output desired result</p>
<pre><code> matches=[]
 print "start comparing"
 for item_a in movies_all:
     for item_b in movies_watched:
         if item_a == item_b:
             matches.append(item_a)
             matches.append("Yes")
             #result=zip(movies_all,matches) -&gt; Tried this but not getting desired output

 for i in range(4):
     print("%s, %s" % (movies_all[i],matches))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Iterate through one list with <code>for...in...</code> and compare to the other list with <code>in</code>. Build your dictionary by creating an empty dictionary and assigning a value to each new key. In  your example, you'll have a key for each item in movies_all.</p>
<pre><code>movies={}
for movie in movies_all:
    if movie in movies_watched:
        movies[movie] = "yes"
    else:
        movies[movie] = "no"
</code></pre>
</div>
<span class="comment-copy">You should post your own attempt at coding this, otherwise your question will attract downvotes. Hint: to do this efficiently, <code>movies_watched</code> should be a <code>set</code>.</span>
<span class="comment-copy">Use the answer that someone posted and then do: import pandas as pd, d = {'movies':movies}, df = pd.DataFrame(data=d)</span>
<span class="comment-copy">@PM2Ring Thanks for informing, practically my first post, added my failed attempt of the code</span>
<span class="comment-copy">@Bharat use the answer and my comment on the answer and done</span>
<span class="comment-copy">Also, your loop creates <code>result</code>, but you don't use it for anything. But thanks for posting some code. Your final <code>for</code> loop loops 4 times, but there are only 3 movies in the list, so the code will crash with an <code>IndexError</code> on the last loop.</span>
<span class="comment-copy">@Bharat Then do: import pandas as pd, d = {'watched':movies}, df = pd.DataFrame(data=d)</span>
<span class="comment-copy">@bennett-brown Thanks this looks like what I was looking for. I was able to get the desired output     &gt;&gt;&gt; for key, value in movies.iteritems(): 	        print ("%s %s" % (key,value))  	 xyz yes abc no opq no</span>
<span class="comment-copy">A <code>dict</code> is unordered â€“ for the time being. Use <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer"><code>collections.OrderedDict()</code></a>. And move from Python 2 to 3, if you're just starting with Python. Better to learn the current version that does not have an end-of-life looming.</span>
<span class="comment-copy">@Bharat I wouldn't bother with a <code>dict</code> for this, I'd use a list of tuples, eg <code>movies_watched = set(movies_watched); lst = [(u, ('No', 'Yes')[u in movies_watched]) for u in movies_all]</code></span>
<span class="comment-copy">@Bharat It's a list comprehension. Here's a slightly simpler version: <code>lst=[(u, u in movies_watched) for u in movies_all]</code>. That's equivalent to <code>lst=[]</code> <code>for u in movies_all:</code> <code>lst.append((u, u in movies_watched))</code>. Sorry, it's not easy posting multi-line Python code in comments, but hopefully you get the idea.</span>
