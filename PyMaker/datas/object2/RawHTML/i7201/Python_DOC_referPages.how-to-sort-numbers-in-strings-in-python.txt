<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/613183/how-do-i-sort-a-dictionary-by-value">How do I sort a dictionary by value?</a>
<span class="question-originals-answer-count">
                    42 answers
                </span>
</li>
</ul>
</div>
<p>sorry... my English is not very good... so i didn't know How to ask this question... please just read so u can understand what i want...
I have a def which takes a dictionary:</p>
<pre><code>{'John':30.370, 'Mike':84.5, 'Sara':97.55, 'Frank': 75.990}
</code></pre>
<p>And i wanna return this:</p>
<pre><code>Sara       97.55
Mike       84.50
Frank      75.99
John       30.37
</code></pre>
<p>But My solution don't return this!
My solution:</p>
<pre><code>def formatted(a):
    s=''
    for i in a:
        d='{0:&lt;10s}{1:&gt;6.2f}\n'.format(i, a[i])
        s=s+d
    s=s.rstrip()  
    return s
a={'John':30.370, 'Mike':84.5, 'Sara':97.55, 'Frank': 75.990}
print (formatted(a))
</code></pre>
<p>it returns:</p>
<pre><code>John       30.37
Mike       84.50
Sara       97.55
Frank      75.99
</code></pre>
<p>I should sort these numbers...But i Have no idea How to do that!
Anybody can help??</p>
</div>
<div class="post-text" itemprop="text">
<p>In one line : </p>
<pre><code>d = {'John': 30.370, 'Mike': 84.5, 'Sara': 97.55, 'Frank': 75.990}
print(
    "\n".join(
        '{0:&lt;10s}{1:&gt;6.2f}'.format(k, v) for k, v in sorted(d.items(), key=lambda x: x[1], reverse=True)
    )
)

Sara       97.55
Mike       84.50
Frank      75.99
John       30.37
</code></pre>
<p>Explanation : </p>
<ul>
<li>first, sort the dictionary according to the value : <code>sorted(d.items(), key=lambda x: x[1], reverse=True)</code> =&gt; <a href="https://docs.python.org/3/library/functions.html?highlight=sorted#sorted" rel="nofollow noreferrer">sorted method in python</a></li>
<li>then, apply the format to all the sorted items =&gt; <a href="https://docs.python.org/3.6/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a></li>
<li>finally, use <code>"\n".join()</code> to regroup and format everybody in one string separated by <code>\n</code> =&gt; <a href="https://docs.python.org/3.6/library/stdtypes.html?highlight=join#str.join" rel="nofollow noreferrer">join method</a></li>
<li>at the end, everything is printed by the print() method</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; d = {'John':30.370, 'Mike':84.5, 'Sara':97.55, 'Frank': 75.990}
&gt;&gt;&gt; b = sorted(d.items(), key=lambda x: x[1])
&gt;&gt;&gt; print b
[('John', 30.37), ('Frank', 75.99), ('Mike', 84.5), ('Sara', 97.55)] 
</code></pre>
<p>for reverse</p>
<pre><code>&gt;&gt;&gt; c = sorted(d.items(), key=lambda x: x[1] ,reverse=True)
&gt;&gt;&gt; print c
[('Sara', 97.55), ('Mike', 84.5), ('Frank', 75.99), ('John', 30.37)]
</code></pre>
<p>for print use :</p>
<pre><code>d = collections.OrderedDict(dict(c)) # c is upder dict
for i, v in d.items(): 
    _dict_pair='{0:&lt;10s}{1:&gt;6.2f}\n'.format(i, v)
    print(_dict_pair)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to <code>sort</code> the dictionary on <code>values</code> using <code>sorted</code> and <code>[operator.itemgetter][1]</code>. </p>
<pre><code>In [100]: _dict = collections.OrderedDict(sorted(d.items(), key=operator.itemgetter(1), reverse=True)) # d is your dictinory

In [101]: _dict
Out[101]: 
OrderedDict([('Sara', 97.55),
             ('Mike', 84.5),
             ('Frank', 75.99),
             ('John', 30.37)])
</code></pre>
<p>Then you need to use <code>collections.OrderedDict</code> as <code>dictionaries</code> are hash key pair. </p>
<pre><code>for i, v in _dict.items():
       d='{0:&lt;10s}{1:&gt;6.2f}\n'.format(i, v)
       print(d)
</code></pre>
<blockquote>
<p>Sara       97.55</p>
<p>Mike       84.50</p>
<p>Frank      75.99</p>
<p>John       30.37</p>
</blockquote>
</div>
<span class="comment-copy">Dictionaries aren't sorted, you need an <code>OrderedDict</code></span>
<span class="comment-copy">You need to sort the dict keys by the values.  e.g. <code>for i in sorted(a, key=a.get)</code></span>
<span class="comment-copy">i am new in python... can u show me how can i use it?</span>
<span class="comment-copy">Can you explain this: print("\n".join('{0:&lt;10s}{1:&gt;6.2f}'.format(k, v) for k, v in sorted(d.items(), key=lambda x: x[1], reverse=True)))                                                                     verbosely?</span>
<span class="comment-copy">line one line:)) lol</span>
