<div class="post-text" itemprop="text">
<p>When, in Python 3, using <code>random</code> module <code>random.shuffle(list(range(n)))</code> works, but <code>random.shuffle(range(n))</code> does not. </p>
<p>Why is it so? </p>
<p>When I type <code>type(range(n))</code> it returns <code>range</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>Python 3's <code>range</code> now returns an range-object (beeing an <strong>immutable sequence</strong>) and not a list (like Python 2)!</p>
<p>A <a href="https://docs.python.org/3/library/stdtypes.html#ranges" rel="nofollow noreferrer">range-object</a> (besides other differences) does not support item assignment, which is the error you observe (probably):</p>
<pre><code>File ".../random.py", line 272, in shuffle
    x[i], x[j] = x[j], x[i]
TypeError: 'range' object does not support item assignment
</code></pre>
<p>The line 272 is the pythonic-way of swapping two variables in python, which is a common operation in most shuffle algorithms (like Fisher-Yates).</p>
<p>The <a href="https://docs.python.org/3/library/random.html#functions-for-sequences" rel="nofollow noreferrer">docs</a> also mentions this (if you want to shuffle sequences):</p>
<blockquote>
<p>To shuffle an immutable sequence and return a new shuffled list, use sample(x, k=len(x)) instead</p>
</blockquote>
<p>So this will work (and is equivalent given the task of shuffling):</p>
<pre><code>shuffled_list = random.sample(range(n), k=n)
</code></pre>
<p>Your approach of creating a list first is also fine, if you can afford the memory/time needed to do that.</p>
</div>
<span class="comment-copy">Which language is your question about?</span>
<span class="comment-copy">Thank you, it is python</span>
<span class="comment-copy">Your question is not true as written.  Entering <code>random.shuffle(list(range(n)))</code> does <b>not</b> work, because <code>random.shuffle</code> works in-place and doesn't return anything. Applying it to an item dynamically created as an argument won't yield any visible result.</span>
