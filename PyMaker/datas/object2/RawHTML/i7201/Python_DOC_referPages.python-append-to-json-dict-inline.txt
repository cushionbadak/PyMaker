<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; salaries = '{"Alfred" : 300, "Jane" : 400 }'
&gt;&gt;&gt; sal = json.loads(salaries)["Hritik"]=0
&gt;&gt;&gt; sal
0
&gt;&gt;&gt; sal = json.loads(salaries)
&gt;&gt;&gt; sal["Hritik"]=0
&gt;&gt;&gt; sal
{'Alfred': 300, 'Jane': 400, 'Hritik': 0}
&gt;&gt;&gt; type(json.loads(salaries))
&lt;class 'dict'&gt;
&gt;&gt;&gt; type(sal)
&lt;class 'dict'&gt;
</code></pre>
<p>Why can't I append to the <code>dict</code> returned by <code>json.loads</code> inline as I can do with the dict sal ?
Doesn't <code>json.loads</code> returns just a <code>dict</code> and that should be same as any other dict ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The assignment statement <code>x = y = z</code> implies that both <code>x</code> and <code>y</code> will take on the value of <code>z</code>. </p>
<p>As an example, look at the byte code for the assignment <code>a = b = 2</code>:</p>
<pre><code>In [45]: import dis; dis.dis(compile('a = b = 2', '', 'exec'))
  1           0 LOAD_CONST               0 (2)
              3 DUP_TOP
              4 STORE_NAME               0 (a)
              7 STORE_NAME               1 (b)
             10 LOAD_CONST               1 (None)
             13 RETURN_VALUE
</code></pre>
<p>With <code>4 STORE_NAME</code>, a is assigned first to 2, followed by <code>7 STORE_NAME</code> where <code>b</code> is then assigned to the same value, 2.</p>
<p>So, with</p>
<pre><code>sal = json.loads(salaries)["Hritik"] = 0
</code></pre>
<p><code>sal</code> receives the value <code>0</code>. Also, a temporary variable is created when you call <code>json.loads</code> and that is modified, following which the reference is lost.</p>
<p>In order to get this to work, you'll need to break this up into 2 parts, as you have already done.</p>
<pre><code>sal = json.loads(salaries)
sal['Hritik'] = 0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Why can't I append to the dict returned by json.loads inline as I can do with the dict sal ? </p>
</blockquote>
<p>You can, and you do, but then you just discard that dict. It doesn't have any effect on the <code>salaries</code> variable, and you didn't assign the dict to <code>sal</code>. You assigned 0 to <code>sal</code>.</p>
<p>When you assign <code>sal = json.loads(salaries)</code>, that makes a new dict, unrelated to the first dict, and then you actually assign the new dict to <code>sal</code>. Modifications to this new dict are still visible when you view the dict through <code>sal</code>.</p>
</div>
<span class="comment-copy">"Assignments in python occur from right to left" isn't quite accurate, because <code>sal</code> actually gets assigned before <code>json.loads(salaries)["Hritik"]</code>. Evaluation order in Python assignment statements is much more of a confusing mess than it first appears.</span>
<span class="comment-copy">@user2357112 Where can I look this up?</span>
<span class="comment-copy"><a href="https://docs.python.org/3/reference/simple_stmts.html#assignment-statements" rel="nofollow noreferrer">docs.python.org/3/reference/â€¦</a></span>
<span class="comment-copy">Check: <code>import dis; dis.dis(compile('a=b=2', '', 'exec'))</code></span>
<span class="comment-copy">@AshwiniChaudhary Thanks! Hope you don't mind, added that to my answer.</span>
