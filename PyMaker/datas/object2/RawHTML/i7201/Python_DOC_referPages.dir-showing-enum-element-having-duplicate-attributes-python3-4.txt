<div class="post-text" itemprop="text">
<p>I was playing around with enums. In particular, I took this bit of code from the <a href="https://docs.python.org/3/library/enum.html#creating-an-enum" rel="nofollow noreferrer"><code>enum</code></a> docs:</p>
<pre><code>from enum import Enum
class Color(Enum):
    RED = 1
    GREEN = 2
    BLUE = 3   
</code></pre>
<p>Then, call <code>dir()</code> on <code>Color.RED</code>:</p>
<pre><code>In [2]: dir(Color.RED)
Out[2]: ['__class__', '__doc__', '__module__', 'name', 'name', 'value', 'value']
</code></pre>
<p>As you can see, there are two identical attributes - <code>name</code> and <code>value</code> there.</p>
<p>From the docs of <a href="https://docs.python.org/3/library/functions.html#dir" rel="nofollow noreferrer"><code>dir()</code></a>:</p>
<blockquote>
<p><em>[...] With an argument, attempt to return a list of valid attributes for
  that object.</em></p>
</blockquote>
<p>So why does <code>dir</code> register <code>Color.RED</code> as having identical attributes with the same name and how do they differ?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>dir(thing)</code> is basically just <code>sorted(thing.__dir__())</code>, and <code>thing.__dir__</code> can return pretty much anything. Enums have a custom <code>__dir__</code> implementation that has changed a few times; in 3.4, <a href="https://github.com/python/cpython/blob/3.4/Lib/enum.py#L472" rel="nofollow noreferrer">that <code>__dir__</code> implementation</a> accidentally put <code>'name'</code> and <code>'value'</code> in the list twice, once explicitly and once from an MRO search.</p>
</div>
<span class="comment-copy">What Python version?</span>
<span class="comment-copy">@user2357112 Sorry, neglected to mention that. It's in 3.4. Also, tried this out with IPython.</span>
<span class="comment-copy">I'll take this. It seems the problem is fixed with &gt;=3.5. Wonder why no one noticed this before.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ:  Well, somebody noticed it, or I wouldn't have fixed it!  ;-)</span>
<span class="comment-copy">@EthanFurman Ah! Nice to meet you. And, shame on you for letting this horrible show-stopping bug go to production :p</span>
