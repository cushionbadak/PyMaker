<div class="post-text" itemprop="text">
<p>I want to run a program on Python on macOS Sierra that checks Terminal for its outputs after I automatically enter a command on it. For example, I would write in Terminal:</p>
<pre><code>$ pwd
</code></pre>
<p>and then Terminal would output something like:</p>
<pre><code>/Users/username
</code></pre>
<p>How would I have Python scan what Terminal outputs and set it to a variable as a string?</p>
<pre><code>&gt;&gt;&gt;output = (whatever Terminal outputs)
&gt;&gt;&gt;print (output)
"/Users/username"
</code></pre>
<p>By the way, the other forums do not explain in much detail how one would do this in macOS. Therefore, this is not a duplicate of any forum.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could pipe the output to a file and read the file.</p>
<pre><code>$ pwd &gt; output.txt
</code></pre>
<p>Then read the file and take further actions based on its contents.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">subprocess</a> module, it has some shortcut methods to make things easier and less complicated than using <code>Popen</code>.</p>
<pre><code>&gt;&gt;&gt; import subprocess
&gt;&gt;&gt; output = subprocess.check_output("pwd")
&gt;&gt;&gt; print(output)
b'L:\\\r\n'
</code></pre>
<p>You can decode this using <code>output.decode("UTF-8")</code> if you like or you can use the <code>universal_newlines</code> keyword argument to have it done automatically as well as sorting out newlines.</p>
<pre><code>&gt;&gt;&gt; subprocess.check_output("pwd", universal_newlines=True)
'L:\\\n'
</code></pre>
<p><em>Edit:</em> With <a href="https://stackoverflow.com/users/2288659/silvio-mayolo">@Silvio's</a> sensible suggestion, passing all arguments you can do the following:</p>
<pre><code>subprocess.check_output(["ls", "-l"])
</code></pre>
<p>Or if you have a string sourced from elsewhere you can call <code>.split()</code> which will generate a list of substrings separated by a space.</p>
<pre><code>subprocess.check_output("ls -l /".split())
</code></pre>
<p>Note: I'm using Python3 on Windows and <a href="https://github.com/bmatzelle/gow" rel="nofollow noreferrer">Gnu on Windows</a> so I have <code>\r\n</code> line endings and <code>pwd</code>.</p>
</div>
<span class="comment-copy">You can manipulate <code>stdout</code> using <code>sys.stdout</code>.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/89228/calling-an-external-command-in-python">Calling an external command in Python</a></span>
<span class="comment-copy">Are you trying to run <code>pwd</code> from within a Python script? (In that specific case, <code>os.getcwd()</code> is what you want.) Or do you want to hook your shell? Or Terminal.app specifically? It would help if you described what exactly you're trying to do... I suspect that this is an X-Y problem.</span>
<span class="comment-copy">Wow, that way actually helps a lot thanks! By the way, could you upvote my question? Because I guess people dislike questions when they can't answer them as sufficiently as you did.</span>
<span class="comment-copy">It works for "pwd" but it doesn't work for things like "ls /Applications" or "sudo pwd". Anything I could do to fix that?</span>
<span class="comment-copy">you can try adding <code>shell=True</code> to the function call. However there are <a href="https://stackoverflow.com/questions/3172470/actual-meaning-of-shell-true-in-subprocess">implications</a>, so you should make sure you sanitise your inputs.</span>
<span class="comment-copy">As an alternative to <code>shell=True</code>, consider passing your arguments as a list. <code>subprocess.check_output(["sudo", "pwd"])</code>. That's a cleaner, safer way to invoke the shell.</span>
