<div class="post-text" itemprop="text">
<p>This is my code:</p>
<pre><code>class Person:
    def __init__(self, name):
        self.name = name


class Student(Person):

    def register(self, school):
        pass
    def payfee(self, money):
        pass
    def chooseClassAndGrand(self, obj):
        pass

class Teacher(Person):
    pass
</code></pre>
<p>I want to add a <code>class</code> instance property to the Student class, how to do with that in the Student class code, if I do not want to rewrite the <code>__init__()</code> method?</p>
</div>
<div class="post-text" itemprop="text">
<p>You do not need to rewrite <code>__init__</code>. Assuming you want <code>Person</code>'s <code>__init__</code> functionality to be invoked when creating an instance of <code>Student</code>, you may use the <a href="https://docs.python.org/3/library/functions.html#super" rel="nofollow noreferrer"><code>super</code></a> keyword inside the <code>__init__</code> function of <code>Student</code>:</p>
<pre><code>class Student(Person):
    def __init__(self):
        super().__init__() # python3.0+
        self.classAndGrade = ...

    ...
</code></pre>
<p>If you're on python &lt; 3.0, you can use </p>
<pre><code>super(Person, self).__init__()
</code></pre>
<p>This is the easiest way to do it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Do add to COLDSPEED, you can also use the below to add attributes:</p>
<pre><code>class Student(Person):
    def __init__(self, name, classAndGrade):
        Person.__init__(self, name)
        self.classAndGrade = classAndGrade

    ...
</code></pre>
</div>
<span class="comment-copy">You don't need to rewrite init. You call the super class' init in your init, and then declare your instance variable.</span>
<span class="comment-copy"><code>class</code> is a reserved keyword and will throw errors. You need to have a different name for the property</span>
<span class="comment-copy">@Ronnie yeah, I use <code>classAndGrade</code></span>
<span class="comment-copy">My <code>Person</code> class is Classic class, can not use the <code>super()</code>, it will report Â·<code>TypeError: must be type, not classobj</code> error</span>
<span class="comment-copy">@244boy The second technique might work</span>
