<div class="post-text" itemprop="text">
<p>Is this answer correct: <a href="https://stackoverflow.com/a/39662710/1175080">https://stackoverflow.com/a/39662710/1175080</a> ?</p>
<p>Quoting that answer.</p>
<blockquote>
<p>In Python 3.5, there is a new operator for the dot product,  so you
  can write a= A @ B  instead of a= numpy.dot(A,B)</p>
</blockquote>
<p>It does not seem to work for me.</p>
<pre><code>$ python3
Python 3.6.1 (default, Apr  4 2017, 09:40:21) 
[GCC 4.2.1 Compatible Apple LLVM 8.1.0 (clang-802.0.38)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; a = [1, 2, 3]
&gt;&gt;&gt; b = [4, 5, 6]
&gt;&gt;&gt; a @ b
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: unsupported operand type(s) for @: 'list' and 'list'
&gt;&gt;&gt;
</code></pre>
<p>But the linked answer has received 6 upvotes, so I must be missing something. Can you provide a complete example that shows how to use the <code>@</code> operator to calculate a dot product?</p>
</div>
<div class="post-text" itemprop="text">
<p>See <a href="https://docs.python.org/3/whatsnew/3.5.html#pep-465-a-dedicated-infix-operator-for-matrix-multiplication" rel="noreferrer">what's new in Python 3.5, section matrix mult (PEP 465)</a>:</p>
<blockquote>
<p>PEP 465 adds the <code>@</code> infix operator for matrix multiplication. <strong>Currently, no builtin Python types implement the new operator</strong>, however, it can be implemented by defining <code>__matmul__()</code>, <code>__rmatmul__()</code>, and <code>__imatmul__()</code> for regular, reflected, and in-place matrix multiplication. The semantics of these methods is similar to that of methods defining other infix arithmetic operators.</p>
</blockquote>
<p>So, you would have to implement those methods yourself.</p>
<p>Or, use <code>numpy&gt;=1.10</code> which already has support for the new operator:</p>
<pre><code>&gt;&gt;&gt; import numpy
&gt;&gt;&gt; x = numpy.ones(3)
&gt;&gt;&gt; m = numpy.eye(3)
&gt;&gt;&gt; x @ m
array([ 1., 1., 1.])
</code></pre>
</div>
<span class="comment-copy">The error tells you exactly what the problem is: <code>unsupported operand type(s) for @: 'list' and 'list'</code>, because it isn't implemented <i>for lists</i> and I have no idea why you thought it would be. It is implemented for <i>numpy arrays</i>.</span>
