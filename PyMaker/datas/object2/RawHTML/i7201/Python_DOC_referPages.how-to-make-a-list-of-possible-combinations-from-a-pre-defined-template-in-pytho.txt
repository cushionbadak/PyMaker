<div class="post-text" itemprop="text">
<p>I'm making something that requires an input of templates.</p>
<p>I need a large scale of possibilities of the generated template</p>
<pre><code>[ "Catman001","Catman002","Catman003","Catman004",....,"Catman999" ]
[ "01Catman01","01Catman02","01Catman03","01Catman04",...,"02Catman01","02Catman02"]
[ "ProAGamer","ProbGamer","ProCGamer","ProDGamer",.....,"ProZGamer"]
[ "XxGamerAxX_01","XxGamerAxX_02","XxGamerAxX_03",.....,"XxGamerBxX_01","XxGamerBxX_02",.....,"XxGamerZxX_99"]
</code></pre>
<p>I have a lot of templates so I'm hoping for an answer that can be used for all the templates above</p>
<p>I have tried the following thing:</p>
<pre><code>Template = Catman{}
CompleteList = []

for i in range(1000):
    CompleteList.append("Template".format(Template,i))

print CompleteList
</code></pre>
<p>only works with digits.</p>
<p>And</p>
<pre><code>Template = "Pro{}Gamer"

CompletedList = []

AToZ = ["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
atoz = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]

for Alphab in AToZ:
    CompletedList.append(Template.format(Alphab))
for Alphab in atoz:
    CompletedList.append(Template.format(Alphab))

print CompletedList
</code></pre>
<p>only works with one letter.</p>
<p>If you looked at the few examples I've made,it makes a list of all possible combinations for that,I'm hoping the code would be like this:</p>
<pre><code>AToZ = ["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]
atoz = ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
Nums = ["0","1","2","3","4","5","6","7","8","9"]

Template = raw_input("Type In The Template")
Template = "XxGamer#xX_%%"

CompletedList = []

'''
# = Capital Letter
$ = Non Capital Letter
% = Numbers
'''

def TemplateCombination(Template,CompletedList):
    if ("#" in Template):
        # Adds All Possible Combinations Of Capital Letters
    if ("$" in Template):
        # Add All Possible Combinations Of Non Capital letters
    if ("%" in template):
        # Add All Possible Combinations Of Numbers
    return CompletedList

TemplateCombination(Template,CompletedList)

print CompletedList
</code></pre>
<p>For those who are still confused I'm trying to make a list filled with possible combinations from premade templates,for example</p>
<pre><code>Input : "Test%Section"
</code></pre>
<p>Should output</p>
<pre><code>OutPut : [ "Test1Section","Test2Section","Test3Section","Test4Section","Test5Section","Test6Section","Test7Section","Test8Section","Test9Section"]
</code></pre>
<p>My problem is I don't know how to do it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can write corresponding functions for <code>#</code> and <code>$</code>.<br/>
Or you can enhance the expand functions.</p>
<pre><code>def expand_nums(to_expand):
res = list()
for n in range(0,10):
    g = re.sub(r'%', str(n), to_expand, 1)
    res.append(g)

return res

res = ['asd%kk%lk%lk%zz']
while res[0].find('%') != -1:
    rres = list()
    for r in res:
        rres += expand_nums(r)
    res = rres

print(rres)
</code></pre>
</div>
<span class="comment-copy">For the combinations of multiple items, you want the Cartesian product, which you can do with <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a>. BTW, you should be learning Python 3, not Python 2.</span>
<span class="comment-copy">tip: you can do <code>from string import ascii_lowercase as atoz</code> and <code>from string import ascii_uppercase as AToZ</code> and <code>Nums = range(10)</code></span>
<span class="comment-copy">You need to fix the indentation.</span>
<span class="comment-copy">Thank You So Much</span>
