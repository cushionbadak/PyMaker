<div class="post-text" itemprop="text">
<p>I'm writing a solution to a problem in which I need to parse the command line arguments. Before parsing, I first did the validation.</p>
<p>Permissible arguments are:</p>
<pre><code>someKey=(apps IN (app1))
someKey=(apps IN (app1,app2))
someKey=(apps IN (app1,app2, app3))
</code></pre>
<p>But if comma is at the end of last app name, then I want the validation to fail.</p>
<pre><code>someKey=(apps IN (app1,app2,))
</code></pre>
<p>I wrote the regex as follows.</p>
<pre><code>\(apps\sIN\s\((app\d|,)+\)\)
</code></pre>
<p>But it taking both valid and invalid cases. I got some references regarding look ahead and look behind lookup, but failed to implement it correctly. Can any of you guys help me to understand what is the resolution to this problem?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>\(apps\sIN\s\((app\d+)(,\s*app\d+)*\)\)</code></p>
<p>This will ensure that at least one occurrence of <code>app\d+</code> exists, and every subsequent occurrence has to be preceded by a comma (and optional whitespace).</p>
<p><a href="https://regex101.com/r/yG9aF3/3" rel="nofollow">Demo</a></p>
<p>If you need to capture the app names, you can use:</p>
<pre><code>\(apps\sIN\s\((app\d+)((?:,\s*(?:app\d+))*)\)\)
</code></pre>
<p>and you will have the first app name in capture group 1, and the rest - including the commas - in capture group 2, which would then need to be split by the comma and have the spaces <code>strip</code>ped off.</p>
</div>
<span class="comment-copy">i recommend veeeeeeeeeeeery strongly to not write such code yourself but to use <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html</a></span>
<span class="comment-copy">Just an FYI that the group <code>(app\d|,)</code> (or the one in the answer by Keith Hall) will only capture the last occurance of that group, it will not create separate groups for separate entries.</span>
<span class="comment-copy">@mnagel arparse is okay for reading the <code>somekey</code> attribute correctly. But whether we can do validation of <code>value</code> using argeparse module itself?</span>
<span class="comment-copy">Thanks Keith. But it didn't match  when the value is having more integers <code>someKey=(apps IN (app12,app13))</code></span>
<span class="comment-copy">@appu, I have now updated my answer so that it will match with more integers</span>
<span class="comment-copy">That did the trick. Thanks Keith</span>
