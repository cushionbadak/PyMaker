<div class="post-text" itemprop="text">
<p>Typing <code>python -i file.py</code> at the command line runs <code>file.py</code> and then drops into the python terminal preserving the run environment.</p>
<p><a href="https://docs.python.org/3/using/cmdline.html" rel="nofollow">https://docs.python.org/3/using/cmdline.html</a></p>
<p>Is there an equivalent in R?</p>
</div>
<div class="post-text" itemprop="text">
<p>I may be misinterpreting what <code>python -i file.py</code> does, but try:</p>
<p>From inside R, at the terminal, you can do:</p>
<pre><code>source('file.R')
</code></pre>
<p>and it will run <code>file.R</code>, with the global environment reflecting what was done in <code>file.R</code></p>
<p>If you're trying to run from the command line, review <a href="https://stackoverflow.com/questions/18306362/run-r-script-from-command-line">this post</a></p>
</div>
<span class="comment-copy">Yes, the idea is from the command line. Thanks for the link. Very useful to see the variety of ways to run an R script at the terminal. Still haven't found one that drops you into the R terminal afterwards, at least I don't see it in the man pages. If you haven't used it, do try <code>python -i</code>. I find it indispensable for debugging scripts.</span>
<span class="comment-copy">What advantage is there to running the script in such a way that it opens python and puts you into the environment (via <code>python -i</code>), as compared to opening R and <code>source()</code>ing the file? Aside from the 2 seconds lost due to having to manually open R ;)  I use Rmarkdown to do all my reports/analyses/etc so I knit my documents from inside RStudio</span>
<span class="comment-copy">That is a good point. There is no simple equivalent to <code>source()</code> in Python, which is what makes <code>-i</code> very handy. Can't off the top of my head think of an example where <code>source</code> wouldn't fit the bill.</span>
