<div class="post-text" itemprop="text">
<p>I am learning how to program in python and am also learning theory as part of a computer science course. In programming i know that i can add additional variables to an array just by using the .append function, however in my theory classes we are told that arrays can neither be increase nor decreased in size.</p>
<p>How does this work in python?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python uses resizable vectors under the hood. They maintain knowledge of how many elements are in the list as well as what the current total capacity is. When you try to add another element beyond the size of the collection, it allocates a new array with more capacity and populates it with the pointers to items from the original backing array. This is similar to java's ArrayList type, except that there's no way to specify the capacity in python</p>
<p>A detailed post on the implementation is here: <a href="http://www.laurentluce.com/posts/python-list-implementation/" rel="nofollow">http://www.laurentluce.com/posts/python-list-implementation/</a></p>
<p>They are not linked lists; there's no linked list type built into python, and the performance patterns are different.</p>
</div>
<div class="post-text" itemprop="text">
<p>A list in python is akin to a linked list. They can grow dynamically and each element can point to anything.</p>
<p>If you're curious about what id dynamic and what isn't in Python then you should read about mutability vs immutability:
<a href="https://codehabitude.com/2013/12/24/python-objects-mutable-vs-immutable/" rel="nofollow">https://codehabitude.com/2013/12/24/python-objects-mutable-vs-immutable/</a></p>
</div>
<span class="comment-copy">In your theory class, you must study C++ or C. Do not get confused..</span>
<span class="comment-copy">The definition of "array" from your theory class seems to be more in line with that of a python <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer"><code>tuple</code></a>. In general, data structure concepts are language specific. The C, C++ and Java array have a fixed size. Python has different data structures.</span>
<span class="comment-copy">Python lists are quite different data structures from C arrays. That's why they are called <code>list</code> instead of <code>array</code>. Arrays are much more efficient in terms of system resources. Python lists are more flexible and convenient for programmers to use.</span>
<span class="comment-copy">I don't see how this question is too broad. The main question here seems to be asking how python lists are implemented. That's in no way too broad</span>
<span class="comment-copy">Python lists are <i>not</i> linked lists.</span>
<span class="comment-copy">Akin != identical.</span>
<span class="comment-copy">@Will they're not akin either. They're both ordered collections but that's not much.</span>
<span class="comment-copy"><code>akin: adjective: of similar character.</code> Your being pedantic won't help anyone. Some people speak abstractly.</span>
