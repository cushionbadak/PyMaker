<div class="post-text" itemprop="text">
<p>How can i extract abandonment from this string <code>('type=weaksubj len=1 word1=abandonment pos1=noun stemmed1=n priorpolarity=negative')</code>? </p>
<p>One possible way can be - </p>
<p>(This is a python Code) </p>
<pre><code>regexp = re.findall("word1=[a-zA-Z0-9]*",string)
</code></pre>
<p>But in the result i get </p>
<pre><code>['word1=abandonment']
</code></pre>
<p>How can i modify the regex so I don't get <strong>'word1'</strong> with the result.
The <strong>'word1'</strong> can be removed using any string function in python but i wish to modify my regex. </p>
</div>
<div class="post-text" itemprop="text">
<p>If the key-value pairs are unique, and always have this same format, you can obtain the result you need with no regex by splitting and creating a dictionary:</p>
<pre><code>s = 'type=weaksubj len=1 word1=abandonment pos1=noun stemmed1=n priorpolarity=negative'
dct  = dict([x.split("=") for x in s.split()])
print(dct) # =&gt; {'stemmed1': 'n', 'len': '1', 'word1': 'abandonment', 'priorpolarity': 'negative', 'type': 'weaksubj', 'pos1': 'noun'} 
print(dct['word1']) # =&gt; abandonment
</code></pre>
<p>See the <a href="http://ideone.com/iihdFv" rel="nofollow">IDEONE demo</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You need to wrap the Group you want to return in brackets and then look up the group (0 in this case).</p>
<pre><code>res= re.search("word1=([a-zA-Z0-9]+?)",mystring)
whatyourelookingfor = res.group[0]
</code></pre>
</div>
<span class="comment-copy"><code>re.findall("word1=([a-zA-Z0-9]*)",string)</code></span>
<span class="comment-copy">Or, if you don't want to use capture groups - <code>(?&lt;=word1=)[a-zA-Z0-9]*</code>.</span>
<span class="comment-copy">Potentially, you could extract it by reading the documentation for the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re</code></a> module ...</span>
