<div class="post-text" itemprop="text">
<p>I have no idea what causes this error, this is as simplest as I could get, yet SO gives me hint that my question does not meet their quality standards so I must post this longer intro.</p>
<pre><code>#===
# my_script.py
import myModule

#===
# myModule\__init__.py
import sys
from my_def import *

class MyModule:
  def __init__(self):
    pass

#===
# myModule\my_def.py
def my_def():
  pass

Traceback (most recent call last):
  File "my_script.py", line 1, in &lt;module&gt;
    import myModule
  File "D:\test\myModule\__init__.py", line 2, in &lt;module&gt;
    from my_def import *
ImportError: No module named 'my_def'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In <code>__init__.py</code>, add a <code>.</code> before <code>my_def</code>. The <code>.</code> means that it should be looking for the file in the same folder as the script itself, rather than relative to <code>my_script.py</code>.</p>
<pre><code>from .my_def import *
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can try this:</p>
<pre><code>sys.path.append("path_of_script")
</code></pre>
</div>
<span class="comment-copy">Didn't you ask this exact question a few minutes ago? <a href="http://stackoverflow.com/q/37501932/3001761">Yes</a>, and it's not like you've improved it much; it's not just a longer intro that's required, it's one that explains the problem.</span>
<span class="comment-copy">Make sure that your <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONPATH" rel="nofollow noreferrer"><code>PYTHONPATH</code></a> contains the path to your module.</span>
