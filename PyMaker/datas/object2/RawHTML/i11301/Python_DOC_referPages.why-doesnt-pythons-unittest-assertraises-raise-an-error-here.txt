<div class="post-text" itemprop="text">
<p>Using Python 3.5, why does all tests below pass when run? Since, an <code>Exception</code> is not raised when <code>div</code> is called, how come that <code>assertRaises()</code> doesn't complain? </p>
<p>According to the documentation for <code>assertRaises()</code>: "or fails if no exception is raised".</p>
<p>Can someone help me out?</p>
<pre><code>..
----------------------------------------------------------------------
Ran 2 tests in 0.002s




def div(self, x, y):
    if y == 0:
        raise Exception("Division by zero")
    return x / y

class MyTest(unittest.TestCase):

    def test1(self):
        with self.assertRaises(Exception) as cm:
            self.div(2, 1)

    def test2(self):
        self.assertRaises(Exception, div, 2, 1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Because you have called <code>div</code> with wrong signature and exceptions was raised prior calling <code>div</code> (actual body of  <code>div</code> wasn't executed, exception was raised prior execution).</p>
<p>To get <strong>more clear</strong> picture of what's going on try to raise <a href="https://docs.python.org/3/library/exceptions.html#ZeroDivisionError" rel="nofollow">ZeroDivisionError</a> from <code>div</code> and replace <code>assertRaises(Exception, ...</code> to <code>assertRaises(ZeroDivisionError, ...</code> within your test cases.</p>
</div>
<div class="post-text" itemprop="text">
<p>An exception <strong>is</strong> raised when you call <code>self.div()</code> because you've defined the <code>div</code> method outside of the <code>MyTest</code> class.   </p>
<p>That's why it's a good idea to also verify the exception message in your test:</p>
<pre><code>with self.assertRaises(Exception) as exc:
    self.div(2, 1)
self.assertEqual("Division by zero", str(exc.exception))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can also use:</p>
<p><code>self.assertRaises(Exception, lambda: div(2, 0))</code></p>
</div>
<span class="comment-copy">Don't throw and catch <code>Exception</code>, because it's far too easy to accidentally catch the wrong thing, like the <code>TypeError</code> that's being thrown here</span>
<span class="comment-copy">Thank you, but when calling div outside, why do I get the error: "Exception was unhandled by user code"?</span>
<span class="comment-copy">Sounds like that message is coming from a weird shell you're running things in. Either way, you're getting that message because <i>there was an exception that was not handled by your code</i>, just like the message says</span>
<span class="comment-copy">Indeed, it was Visual Studio that caused the problems. Running fine from command-line Python.. Thanks!</span>
<span class="comment-copy">When the div method is called the right way, I get the error: "Exception was unhandled by user code" (Division by zero)? Why is that?</span>
<span class="comment-copy"><a href="https://en.wikibooks.org/wiki/Python_Programming/Exceptions#Catching_exceptions" rel="nofollow noreferrer">en.wikibooks.org/wiki/Python_Programming/â€¦</a></span>
