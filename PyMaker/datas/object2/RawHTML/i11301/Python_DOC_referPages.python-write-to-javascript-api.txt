<div class="post-text" itemprop="text">
<p>I have a .js file with the following content:</p>
<pre><code>function get_test1_data() {
  return [
['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'],
['2016-02-19','32765','87917',-55152,'2016-04-27','10:52'],
['2016-02-26','32765','87917',-55152,'2016-04-27','10:52'],
['2016-03-04','32765','87917',-55152,'2016-04-27','10:52'],
['2016-03-11','40431','89100',-48669,'2016-05-02','14:54'],
['2016-03-18','40431','89100',-48669,'2016-05-02','14:56'],
['2016-03-25','40431','89100',-48669,'2016-05-02','15:59'],
['2016-04-01','40431','89100',-48669,'2016-05-02','16:29'],
['2016-04-08','38557','71392',-32835,'2016-06-02','19:08'],
['2016-04-15','38557','71392',-32835,'2016-06-02','19:11'],
['2016-04-22','38557','71392',-32835,'2016-06-02','19:13'],
['2016-04-29','38557','71392',-32835,'2016-06-02','19:15'],
['2016-05-06','38557','71392',-32835,'2016-06-02','19:16'],
['2016-05-13','38557','71392',-32835,'2016-06-02','19:17'],
['2016-05-20','38557','71392',-32835,'2016-06-02','19:18'],
['2016-05-27','38557','71392',-32835,'2016-06-02','19:20'],
['2016-06-03','38557','71392',-32835,'2016-06-02','19:27'],
['2016-06-10','38557','71392',-32835,'2016-06-02','20:45'],
['2016-06-17','38557','71392',-32835,'2016-06-02','20:46'],
  ];
}
</code></pre>
<p>I have a Python3 script which produce one of the above lines every now and then. </p>
<pre><code>'2016-02-12','32765','87917',-55152,'2016-04-27','10:52'
</code></pre>
<p>Usually I add lines to .csv file. For this I use the following code:</p>
<pre><code>fd = open('test.csv','a')
fd.write(z + "\n")
fd.close()
</code></pre>
<p>As .csv don't contain functions the code works as expected.
I need to start adding the same lines into the .js file. For this reason I modified my script. The new line looks like this:</p>
<pre><code>['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'],
</code></pre>
<p>I tried to use the same code</p>
<pre><code>fd = open('test1.js','a')
fd.write(zz + "," + "\n")
fd.close()
</code></pre>
<p>but as expected new line is added at the end of the file:</p>
<pre><code>function get_test1_data() {
  return [
['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'],
['2016-02-19','32765','87917',-55152,'2016-04-27','10:52'],
['2016-02-26','32765','87917',-55152,'2016-04-27','10:52'],
['2016-03-04','32765','87917',-55152,'2016-04-27','10:52'],
['2016-03-11','40431','89100',-48669,'2016-05-02','14:54'],
['2016-03-18','40431','89100',-48669,'2016-05-02','14:56'],
['2016-03-25','40431','89100',-48669,'2016-05-02','15:59'],
['2016-04-01','40431','89100',-48669,'2016-05-02','16:29'],
['2016-04-08','38557','71392',-32835,'2016-06-02','19:08'],
['2016-04-15','38557','71392',-32835,'2016-06-02','19:11'],
['2016-04-22','38557','71392',-32835,'2016-06-02','19:13'],
['2016-04-29','38557','71392',-32835,'2016-06-02','19:15'],
['2016-05-06','38557','71392',-32835,'2016-06-02','19:16'],
['2016-05-13','38557','71392',-32835,'2016-06-02','19:17'],
['2016-05-20','38557','71392',-32835,'2016-06-02','19:18'],
['2016-05-27','38557','71392',-32835,'2016-06-02','19:20'],
['2016-06-03','38557','71392',-32835,'2016-06-02','19:27'],
['2016-06-10','38557','71392',-32835,'2016-06-02','20:45'],
['2016-06-17','38557','71392',-32835,'2016-06-02','20:46'],
  ];
}

['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'],
['2016-07-15','38557','71392',-32835,'2016-06-02','22:18'],
</code></pre>
<p>Any suggestions on how to modify my code on how to start adding the line where it needs to be is appreciated.</p>
<p><strong>UPDATE</strong></p>
<p>In order to define my script output as data I modified the code like this:</p>
<pre><code>tup = (d2(test),a,b,c,st,st1)
zz = str(tup)
zz = ''.join(zz)
zz = zz.replace("(","[")
zz = zz.replace(")","]")
zz = zz.replace(" ","")
zz = str(zz)
print (zz)

data = zz

# Make a string representing the `row` list with no space between items,
# terminate the string with ",\n"     
def format_row(row):
    s = ','.join(['{!r}'.format(u) for u in row])
    return '[{}],\n'.format(s)

def update_js(fname, data):
    # Read old function source
    with open(fname, 'r') as f:
        lines = f.readlines()
    body, tail = lines[:-2], lines[-2:]

    # Convert data rows to strings and add to body list
    for row in data:
        body.append(format_row(row))

    # Save new function source
    with open(fname, 'w') as f:
        f.writelines(body + tail)

update_js('test1.js', data)
</code></pre>
<p>This is the output of <code>print (zz)</code></p>
<pre><code>['2017-01-27','38557','71392',-32835,'2016-06-03','16:03']
</code></pre>
<p>The problem now is the code canot see it as a single line but as separate symbols. Thereby it append it like this:</p>
<pre><code>function get_test1_data() {
  return [
['2016-02-12','32765','87917',-55152,'2016-04-27','10:52'],
['2016-02-19','32765','87917',-55152,'2016-04-27','10:52'],
['2016-02-26','32765','87917',-55152,'2016-04-27','10:52'],
['2016-03-04','32765','87917',-55152,'2016-04-27','10:52'],
['2016-03-11','40431','89100',-48669,'2016-05-02','14:54'],
['2016-03-18','40431','89100',-48669,'2016-05-02','14:56'],
['2016-03-25','40431','89100',-48669,'2016-05-02','15:59'],
['2016-04-01','40431','89100',-48669,'2016-05-02','16:29'],
['2016-04-08','38557','71392',-32835,'2016-06-02','19:08'],
['2016-04-15','38557','71392',-32835,'2016-06-02','19:11'],
['2016-04-22','38557','71392',-32835,'2016-06-02','19:13'],
['2016-04-29','38557','71392',-32835,'2016-06-02','19:15'],
['2016-05-06','38557','71392',-32835,'2016-06-02','19:16'],
['2016-05-13','38557','71392',-32835,'2016-06-02','19:17'],
['2016-05-20','38557','71392',-32835,'2016-06-02','19:18'],
['2016-05-27','38557','71392',-32835,'2016-06-02','19:20'],
['2016-06-03','38557','71392',-32835,'2016-06-02','19:27'],
['2016-06-10','38557','71392',-32835,'2016-06-02','20:45'],
['2016-06-17','38557','71392',-32835,'2016-06-02','20:46'],
['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'],
['2016-07-15','38557','71392',-32835,'2016-06-02','22:18'],
['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'],
['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'],
['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'],
['['],
["'"],
['2'],
['0'],
['1'],
['7'],
['-'],
['0'],
['1'],
['-'],
['2'],
['0'],
["'"],
[','],
["'"],
['3'],
['8'],
['5'],
['5'],
['7'],
["'"],
[','],
["'"],
['7'],
['1'],
['3'],
['9'],
['2'],
["'"],
[','],
['-'],
['3'],
['2'],
['8'],
['3'],
['5'],
[','],
["'"],
['2'],
['0'],
['1'],
['6'],
['-'],
['0'],
['6'],
['-'],
['0'],
['3'],
["'"],
[','],
["'"],
['1'],
['5'],
[':'],
['4'],
['6'],
["'"],
[']'],
['['],
["'"],
['2'],
['0'],
['1'],
['7'],
['-'],
['0'],
['1'],
['-'],
['2'],
['7'],
["'"],
[','],
["'"],
['3'],
['8'],
['5'],
['5'],
['7'],
["'"],
[','],
["'"],
['7'],
['1'],
['3'],
['9'],
['2'],
["'"],
[','],
['-'],
['3'],
['2'],
['8'],
['3'],
['5'],
[','],
["'"],
['2'],
['0'],
['1'],
['6'],
['-'],
['0'],
['6'],
['-'],
['0'],
['3'],
["'"],
[','],
["'"],
['1'],
['6'],
[':'],
['0'],
['3'],
["'"],
[']'],
];
}
</code></pre>
<p>I try to fix it by using </p>
<pre><code>zz = ''.join(zz)
zz = str(zz)
</code></pre>
<p>but with no success.</p>
</div>
<div class="post-text" itemprop="text">
<p>As I mentioned in the comments, you probably should be using JSON for this. It's really not good practice to embed large amounts of data into program source. But anyway...</p>
<p>As Moses Koledoye suggests, the way to do this (without using JSON) is to read the lines of your .js file into a list, modify that list, and save it back to the .js file. We need to append the new data before the last two lines of the .js file. A simple way to do that is to </p>
<ol>
<li>break the list of lines into two lists, a body and a tail </li>
<li>append the new data strings to the body list</li>
<li>write the new body plus tail to the file.</li>
</ol>
<p>The following code works on Python 2.7 and Python 3.</p>
<pre><code>data = [
    ['2016-07-08', '38557', '71392', -32835, '2016-06-02', '22:07'],
    ['2016-07-15', '38557', '71392', -32835, '2016-06-02', '22:18'],
]

# Make a string representing the `row` list with no space between items,
# terminate the string with ",\n"     
def format_row(row):
    s = ','.join(['{!r}'.format(u) for u in row])
    return '[{}],\n'.format(s)

def update_js(fname, data):
    # Read old function source
    with open(fname, 'r') as f:
        lines = f.readlines()
    body, tail = lines[:-2], lines[-2:]

    # Convert data rows to strings and add to body list
    for row in data:
        body.append(format_row(row))

    # Save new function source
    with open(fname, 'w') as f:
        f.writelines(body + tail)

update_js('test1.js', data)
</code></pre>
<hr/>
<h2>Update</h2>
<p>From your comments and the update to your question it appears that you will only ever be adding a single line at a time to your <code>.js</code> file. So here's a simplified version of my earlier function to do that task. Please take note of how I'm passing the data to it.</p>
<pre><code>def update_js(fname, row):
    # Read old function source
    with open(fname, 'r') as f:
        lines = f.readlines()
    body, tail = lines[:-2], lines[-2:]

    # Convert data row to string and add to body list
    s = ','.join(['{!r}'.format(u) for u in row])
    body.append('[{}],\n'.format(s))

    # Save new function source
    with open(fname, 'w') as f:
        f.writelines(body + tail)

d2_test = '2016-07-08'
a, b, c = '38557', '71392', -32835
st, st1 = '2016-06-02', '22:07'

row = [d2_test, a, b, c, st, st1]
print(row)
update_js('test1.js', row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Although your implementation does not look like a very good idea for a javascript file, you may want to look at <code>file.seek</code> with the file opened in binary mode to allow seeking from the end of the file with a negative offset. But finding the correct offset in bytes is hard enough.</p>
<p>I'll suggest you read the entire content of the file into python, modify and then rewrite.</p>
</div>
<span class="comment-copy">so, just to be clear, you need to add the list within the bracket's returned list?</span>
<span class="comment-copy">You probably should be using <a href="https://docs.python.org/3/library/json.html" rel="nofollow noreferrer">json</a> for this instead of CSV.</span>
<span class="comment-copy">I need to add the line within the function instead at the end of the file. The problem is "append" adds to the end of the file.</span>
<span class="comment-copy">It's all fine if I append to .csv as there isn't function. Lines only. In the .js file there is function which adds two more simbols at the end. This makes appending little bit more complicated.</span>
<span class="comment-copy">You should use three file one.js second.json, and python script. Have the js file read the JSON file. Have python append to JSON file.</span>
<span class="comment-copy">Thanks for your help PM 2Ring. It works great when data is defined like this: <code>data = [     ['2016-07-08', '38557', '71392', -32835, '2016-06-02', '22:07'],     ['2016-07-15', '38557', '71392', -32835, '2016-06-02', '22:18'], ]</code> In order to define my output as data I modified the code like this: <code>tup = (d2(test),a,b,c,st,st1) zz = str(tup) zz = ''.join(zz) zz = zz.replace("(","[") zz = zz.replace(")","]") zz = zz.replace(" ","") zz = str(zz) print (zz)  data = zz</code>  This is the output of <code>print (zz)</code> - <code>['2017-01-27','38557','71392',-32835,'2016-06-03','16:03']</code></span>
<span class="comment-copy">The problem is now it inserts the line as separate simbols. Like this: <code>function get_test1_data() {   return [ ['2016-07-08','38557','71392',-32835,'2016-06-02','22:07'], ['['], ["'"], ['2'], ['0'], ['1'], ['7'], ['-'], ['0'], ['1'], ['-'], ['2'], ['0'], ["'"], [','], ["'"], ['3'], ['8'], ['5'], ['5'], ['7'], ["'"], [','], ["'"], ['7'], ['1'], ['3'], .............. and so on  ]; }</code></span>
<span class="comment-copy">Obviously it sees it like separate symbols instead of single line and becouse of the <code>/n</code> it puts them vertically in the file. I tryed to fix it by <code>''.join(zz)</code> and than <code>zz = str(zz)</code> but with no success.</span>
<span class="comment-copy">I just post all in detail in the question above.</span>
<span class="comment-copy">@AlIvon Ok. You really shouldn't change your question after it has gotten answers, but I'll have a look at your changes and see what I can do. Will you only ever be adding a single line at a time?</span>
