<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2100353/sort-csv-by-column">sort csv by column</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I have a CSV file containing values like <code>a | b | c | 8</code> and <code>n | 8 | p | 4</code> as so on. I would like to know as to how do I sort them considering the last element in each row as the index? </p>
<p>Ex: sorted order for the above would be <code>n | 8 | p | 4</code> and <code>a | b | c | 8</code></p>
<p>I am using Python csv reader to read the file and want to apply Quick sort. I split the CSV with <code>'|'</code> but not quite sure how do I proceed from here. Or if splitting isn't the correct thing to do? Can someone shed some light as to how I should be doing it?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have a list of lists you could use the pre built sorting function,
which should be faster than anything you can implement yourself.</p>
<p>There is a command in sort which then does exactly what you want:</p>
<pre><code>sorted(yourArray, key=lambda x: x[3])
#sort yourArray by the 4th value in every list
</code></pre>
<p>So what I would do is:</p>
<ul>
<li>Read csv and split it with ' | '</li>
<li>Save all lines you read in a list</li>
<li>use the above function which <strong>returns a new list</strong> (it is not in place sorting)</li>
</ul>
<p><strong>Edit</strong></p>
<p>Just saw the new comments, and if you want to add new entries and keep your List sorted, you should look into the <a href="https://docs.python.org/3/library/bisect.html#module-bisect" rel="nofollow">bisec module</a>. </p>
<p>It is used for inserting values into an already sorted list, but does not support the <code>key</code> operator.
They explain how to use it for lists of your type in the last paragraph of the link.</p>
</div>
<span class="comment-copy">How often do you need to do this? How many other manipulations with table data like this will you be doing? Because it might be practical to install the <a href="http://pandas.pydata.org/" rel="nofollow noreferrer">pandas package</a> and use that.</span>
<span class="comment-copy">If you're on a *nix command line, a simple <code>sort -k4 -t'|'  input_file.csv</code> would do the trick, btw.</span>
<span class="comment-copy">@Evert The idea is to sort these records on a regular basis since there will be a lot more records pumped into the csv regularly. (Usually around 10 - 20 times a day) Once I have these records sorted, I need to be applying other small operations which isn't all that resource intensive.</span>
