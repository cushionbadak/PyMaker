<div class="post-text" itemprop="text">
<p>I was wondering if this same code could be made with a <code>for loop</code> instead of a <code>while</code></p>
<pre><code>d = 0.6
b  = 0.0
h = 0.0
t = 0.0
count = 0

h = float(input("enter height: "))
b = float(input("enter a number of bounces: "))

t = h

while count &lt; b:
    if count == b - 1:
        t += h * d
        #print(t)
    else:
        h = h * d
        t += h * 2
        #print(t)
    count += 1
    #print (t)
print(t)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As GLHF reminded me, the <code>b</code> should be an int in order for the code below to work.<br/>
I see no reason for a variable <code>b</code>, representing a number of bounces to be a float. Moreover, in your original code you have a comparison between <code>count</code> (an int) and <code>b</code> (float from user input).
In a case, where b is not a float with a <code>0</code> for the decimal part, the check would fail, so you might want to change the line to <code>b = int(input('Enter the number of bounces))</code></p>
<pre><code>for count in range(b-1): # generates a sequence from 0 to b-2
    h *= d
    t += h * 2
    #print(t)
t += h * d
print(t)
</code></pre>
<p><a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow">range()</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Since you don't change your variables from <code>float</code> type to <code>integer</code> you can't do it, because you need <code>range()</code> function and <code>range()</code> only accepts integer type.</p>
<p>If you set your variables to an integer instead of float, you can use it in a for loop like;</p>
<pre><code>d = 0.6
b  = 6 #bounce
h = 5 #height
t = 0.0
count = 0

t = h

for x in range(b):
    if count == b-1:
        t += h*d
    else:
         h *= d
         t += h*2

    count += 1
print (t)
</code></pre>
</div>
<span class="comment-copy">you can't use a float in range function. It must be an integer. And if you use <code>round()</code> the result will change, check OP's variables first. This answer is far from what OP's want.</span>
<span class="comment-copy">@GLHF That's true, thanks for pointing out. I guess I just read that b stands for bounces, which would naturally be int.</span>
<span class="comment-copy">Also the result of your answer is not correct either, you should use range(b) instead of (b-1) and <code>if</code> - <code>else</code> statements.</span>
<span class="comment-copy">@GLHF Actually the result is correct. Testing it in shell with both my and original code, using values <code>d,b,h,t = 0.6, 20, 2.5, 2.5</code> gives <code>9.999634384155991</code> as the answer.</span>
<span class="comment-copy">Works great thanks</span>
