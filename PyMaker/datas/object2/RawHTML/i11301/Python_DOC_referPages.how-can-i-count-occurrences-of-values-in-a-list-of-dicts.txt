<div class="post-text" itemprop="text">
<p>I have this list of dicts:</p>
<pre><code>[{'Description': 'LARCENY'}, {'Description': 'LARCENY'}, {'Description': 'BURGLARY'}, {'Description': 'ROBBERY - STREET'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'AUTO THEFT'}, {'Description': 'AUTO THEFT'}, {'Description': 'ROBBERY - STREET'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'BURGLARY'}, {'Description': 'BURGLARY'}, {'Description': 'LARCENY'}, {'Description': 'ROBBERY - COMMERCIAL'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'COMMON ASSAULT'}]
</code></pre>
<p>I need to make a function that iterates over those dictionaries and counts how many times each type of crime has occurred. The output should be a list of dicts like this:</p>
<pre><code>[{'LARCENY' : 3}, {'BURGLARY' : 2}, {'ROBBERY - STREET' : 3}...
</code></pre>
<p>For each type of crime, I need to know how many times that crime as occurred.
This is what I have so far:</p>
<pre><code>result = {}
for k in data:
   if 'Description' in k:
    result[k['Description']] = result.get(k['Description'], 0) + 1 
</code></pre>
<p>But the output given gives me everything in the same dict, but I want them to be in a list of dicts, each crime with each dict.</p>
<p>Feel free to ask any question if you don't understand mine.</p>
</div>
<div class="post-text" itemprop="text">
<p>Given the result you've got so far...</p>
<pre><code>&gt;&gt;&gt; result = {'LARCENY' : 3, 'BURGLARY' : 2, 'ROBBERY - STREET' : 3}
&gt;&gt;&gt; result = [{k:v} for k,v in result.items()]
&gt;&gt;&gt; result
[{'BURGLARY': 2}, {'LARCENY': 3}, {'ROBBERY - STREET': 3}]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Looks like you want to maintain the order of occurrence of the crimes as well.</p>
<p>So, use <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow"><code>collections.OrderedDict</code></a> instead of normal dict.</p>
<pre><code>&gt;&gt;&gt; from collections import OrderedDict
&gt;&gt;&gt; counter = OrderedDict()
&gt;&gt;&gt; for item in data:
...     if 'Description' in item:
...         counter[item['Description']] = counter.get(item['Description'], 0) + 1
</code></pre>
<p>Now, just construct a new dictionary with each and every key, value pair out of the <code>counter</code>, like this</p>
<pre><code>&gt;&gt;&gt; from pprint import pprint
&gt;&gt;&gt; pprint([{k: v} for k, v in counter.items()])
[{'LARCENY': 3},
 {'BURGLARY': 3},
 {'ROBBERY - STREET': 2},
 {'COMMON ASSAULT': 7},
 {'AUTO THEFT': 2},
 {'ROBBERY - COMMERCIAL': 1}]
</code></pre>
<hr/>
<p>From the comments,</p>
<blockquote>
<p>After I get the desired output I will need to separate the keys and the values into diferent lists,</p>
</blockquote>
<p><strong>Then, don't create list of dictionaries.</strong> Directly create two lists, with <code>keys</code> and <code>values</code>, from the <code>counter</code> itself, like this</p>
<pre><code>&gt;&gt;&gt; list(counter.keys())
['LARCENY', 'BURGLARY', 'ROBBERY - STREET', 'COMMON ASSAULT', 'AUTO THEFT', 'ROBBERY - COMMERCIAL']
&gt;&gt;&gt; list(counter.values())
[3, 3, 2, 7, 2, 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>While your data structure doesn't make sense as noted above, you can solve this easily using the Counter class from collections.</p>
<pre><code>from collections import Counter

crimes = [{'Description': 'LARCENY'}, {'Description': 'LARCENY'}, {'Description': 'BURGLARY'}, {'Description': 'ROBBERY - STREET'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'AUTO THEFT'}, {'Description': 'AUTO THEFT'}, {'Description': 'ROBBERY - STREET'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'BURGLARY'}, {'Description': 'BURGLARY'}, {'Description': 'LARCENY'}, {'Description': 'ROBBERY - COMMERCIAL'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'COMMON ASSAULT'}, {'Description': 'COMMON ASSAULT'}]

c = Counter()
for item in crimes:
    c[item["Description"]] += 1

print(c)
</code></pre>
<p>This gives the output of:</p>
<pre><code>Counter({'COMMON ASSAULT': 7, 'BURGLARY': 3, 'LARCENY': 3, 'AUTO THEFT': 2, 'ROBBERY - STREET': 2, 'ROBBERY - COMMERCIAL': 1})
</code></pre>
<p>I'd recommend looking at the Counter class whenever you want to count things.</p>
</div>
<span class="comment-copy">Why? A single dict with unique keys will be more useful than multiple single keyed dicts.</span>
<span class="comment-copy">It looks like you're asking for a list of dictionaries that just have one element in them each.  How is that better than just a simple dictionary?</span>
<span class="comment-copy"><a href="http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem">What is the XY problem?</a></span>
<span class="comment-copy">After I get the desired output I will need to separate the keys and the values into diferent lists, using [li['Description'] for li in result]</span>
<span class="comment-copy">if you have a dict d you can separate the keys into individual dicts by: [{k: d[k]} for k in d.keys()]</span>
