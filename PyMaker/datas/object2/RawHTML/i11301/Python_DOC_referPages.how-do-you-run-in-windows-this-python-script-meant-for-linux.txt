<div class="post-text" itemprop="text">
<p>I am using Python 3.5 on a Windows 7 computer.</p>
<p>I am trying to run a python script designed to run in Linux found in this book
Learning Python Network Programming by Dr. M. O. Faruque Sarker and Sam Washington Jun 17, 2015
Chapter 6. IP and DNS
GeoIP look-ups</p>
<p>..........The code is saved in my C drive as        C:\Python35\geoiplookup.py
I had renamed it from 
"6_3_geoip_lookup.py"
to 
"geoiplookup.py"
..........Here is the code and also shown in a more user friendly image at <a href="http://imgur.com/PM196AV" rel="nofollow">http://imgur.com/PM196AV</a> 
..........</p>
<pre><code>import socket
from geoip import geolite2
import argparse


if __name__ == '__main__':
    # Setup commandline arguments
    parser = argparse.ArgumentParser(description='Get IP Geolocation info')
    parser.add_argument('--hostname', action="store", dest="hostname", required=True)

    # Parse arguments
    given_args = parser.parse_args()
    hostname =  given_args.hostname
    ip_address = socket.gethostbyname(hostname)
    print("IP address: {0}".format(ip_address))

    match = geolite2.lookup(ip_address)
    if match is not None:
        print('Country: ',match.country)
        print('Continent: ',match.continent) 
        print('Time zone: ', match.timezone) 
</code></pre>
<p>..........This script will show an output similar to the following (in Linux):</p>
<pre><code>$ python 6_3_geoip_lookup.py --hostname=amazon.co.uk
IP address: 178.236.6.251
Country:  IE
Continent:  EU
Time zone:  Europe/Dublin
</code></pre>
<p>..........I tried running the .py file in Python GUI shell in Windows using the following commands without success. Please see picture at <a href="http://imgur.com/wZ4m1S5" rel="nofollow">http://imgur.com/wZ4m1S5</a>
..........</p>
<pre><code>import geoiplookup
--hostname=amazon.co.uk
    SyntaxError: can't assign to operator

--hostname='amazon.co.uk'
    SyntaxError: can't assign to operator

'--hostname'='amazon.co.uk'
    SyntaxError: can't assign to literal

'--hostname'=amazon.co.uk
    SyntaxError: can't assign to literal
</code></pre>
<p>Before you accused me of not trying this in the command line:</p>
<pre><code>C:\Python35&gt;python geoiplookup.py --hostname=amazon.co.uk
</code></pre>
<p>I have, and I got an error message:</p>
<pre><code>IP address: 178.236.6.251
Traceback (most recent call last):
File "geoiplookup.py", line 17, in &lt;module&gt; match = geolite2.lookup(ip_address)
File "c:\Python35\lib\site-packages\geoip.py", line 382, in _read_mmdb_metadata
TypeError: a bytes-like object is required, not 'str'
c:\Python35&gt;
</code></pre>
<p>Please advise . Thanks a million.</p>
<p>Thank you very much.</p>
</div>
<div class="post-text" itemprop="text">
<p>You aren't running the Python script, you're in the Python interpreter and attempting to run each line of code.</p>
<p>Look at your Linux output:</p>
<pre><code>$ python 6_3_geoip_lookup.py --hostname=amazon.co.uk
IP address: 178.236.6.251
Country:  IE
Continent:  EU
Time zone:  Europe/Dublin
</code></pre>
<p>That first line is important. <em>That</em> is what you should be running on your Windows command line:</p>
<pre><code>C:\Python35&gt;python geoiplookup.py --hostname=amazon.co.uk
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In a Windows command prompt, run the following commands:</p>
<pre><code>c:
cd \Python35
python geoiplookup.py --hostname=amazon.co.uk
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>EDIT: It looks like on Python 3.5 the geoip package is having issues (I found someone reporting an issue <a href="https://github.com/mirumee/saleor/issues/458" rel="nofollow">here</a> that has the same error message as you on a different method). the commenters seem to be mentioning that the package looks abandoned, although I have not checked into that myself. As a result, I think this workaround is probably your best option going forward.</p>
<p>I don't think this is an issue of Linux vs Windows. I attempted to run your script on my Mac machine and got the same result as you did on Windows. I tried to look into the error you were getting a little bit more, and I found an article mentioning that they used another package instead since it supported Python 3. That package was <a href="https://pypi.python.org/pypi/maxminddb-geolite2/2015.0303" rel="nofollow">maxminddb-geolite2</a>.</p>
<p>It has a bit of a different format than what you were using, but here is my code:</p>
<pre><code>import socket
from geolite2 import geolite2
import argparse
import pprint

if __name__ == '__main__':
    # Setup commandline arguments
    parser = argparse.ArgumentParser(description='Get IP Geolocation info')
    parser.add_argument('--hostname', action="store",
                        dest="hostname", required=True)

    # Parse arguments
    given_args = parser.parse_args()
    hostname = given_args.hostname
    ip_address = socket.gethostbyname(hostname)
    print("IP address: {0}".format(ip_address))

    match = geolite2.reader().get(ip_address)

    pp = pprint.PrettyPrinter(indent=4)

    if match is not None:
        print("Country: " + str(match['country']['names']['en']))
        print("Continent: " + str(match['continent']['names']['en']))
        print("Time Zone: " + str(match['location']['time_zone']))
        pp.pprint(match)
</code></pre>
<p>As you can see, it is fairly similar in syntax, but just has a slightly different twist. </p>
<p>My output from this script (without the pretty print):</p>
<pre><code>python3 test.py --hostname=amazon.co.uk
IP address: 178.236.6.251
Country: Ireland
Continent: Europe
Time Zone: Europe/Dublin
</code></pre>
<p>Here is the pretty print output from the dictionary in case you were wondering how I knew where to access to get the output you wanted from the match dictionary:</p>
<pre><code>{   'city': {   'geoname_id': 2964574,
                'names': {   'de': 'Dublin',
                             'en': 'Dublin',
                             'es': 'Dublín',
                             'fr': 'Dublin',
                             'ja': 'ダブリン',
                             'pt-BR': 'Dublin',
                             'ru': 'Дублин',
                             'zh-CN': '都柏林'}},
    'continent': {   'code': 'EU',
                     'geoname_id': 6255148,
                     'names': {   'de': 'Europa',
                                  'en': 'Europe',
                                  'es': 'Europa',
                                  'fr': 'Europe',
                                  'ja': 'ヨーロッパ',
                                  'pt-BR': 'Europa',
                                  'ru': 'Европа',
                                  'zh-CN': '欧洲'}},
    'country': {   'geoname_id': 2963597,
                   'iso_code': 'IE',
                   'names': {   'de': 'Irland',
                                'en': 'Ireland',
                                'es': 'Irlanda',
                                'fr': 'Irlande',
                                'ja': 'アイルランド',
                                'pt-BR': 'Irlanda',
                                'ru': 'Ирландия',
                                'zh-CN': '爱尔兰'}},
    'location': {   'latitude': 53.3331,
                    'longitude': -6.2489,
                    'time_zone': 'Europe/Dublin'},
    'registered_country': {   'geoname_id': 2963597,
                              'iso_code': 'IE',
                              'names': {   'de': 'Irland',
                                           'en': 'Ireland',
                                           'es': 'Irlanda',
                                           'fr': 'Irlande',
                                           'ja': 'アイルランド',
                                           'pt-BR': 'Irlanda',
                                           'ru': 'Ирландия',
                                           'zh-CN': '爱尔兰'}},
    'subdivisions': [   {   'geoname_id': 7521314,
                            'iso_code': 'L',
                            'names': {   'en': 'Leinster',
                                         'ja': 'レンスター',
                                         'ru': 'Ленстер'}},
                        {   'geoname_id': 7778677,
                            'names': {'en': 'Dublin City'}}]}
</code></pre>
<p>If you would like to do this, all you have to do is this:</p>
<pre><code>import pprint # At the top of the file

pp = pprint.PrettyPrinter(indent=4) # Anywhere in scope
pp.pprint(match) # Print!
</code></pre>
<p>More information on pretty print <a href="https://docs.python.org/3/library/pprint.html" rel="nofollow">here</a>.</p>
<p>I know this isn't a direct answer to what is going on, but I will update my answer if I actually figure out what the real issue is at hand. Until then, have this workaround :).</p>
</div>
<div class="post-text" itemprop="text">
<p>Another solution is to add PYTHONIOENCODING (a Python-specific environment variable) to your Windows Path environment variable . The code will run but the Russian and Asian characters will still be replaced with ??? like the output in Solution 1</p>
<p>..........i.e.
Add this Python-specific environment variable
PYTHONIOENCODING=utf-8
to your Windows Path environment variable</p>
<p>i.e.</p>
<p>Windows 7 --- &gt; Control Panel --- &gt; System --- &gt; Advanced system settings (on the left hand side) --- &gt; Advanced --- &gt; Environment Variables --- &gt; System variables (bottom box) --- &gt; Path --- &gt; Edit --- &gt; Paste this to the end of the long line at the end:
;PYTHONIOENCODING=utf-8;</p>
<p>..........Then type this into Windows command prompt.
..........</p>
<pre><code>c:\Python35&gt;
c:\Python35&gt;python 6_3_geoip_lookup.py --hostname=amazon.co.uk
</code></pre>
<p>--- &gt; Output:</p>
<pre><code>IP address: 178.236.7.220
Country: Ireland
Continent: Europe
Time Zone: Europe/Dublin
{   'city': {   'geoname_id': 2964574,
            'names': {   'de': 'Dublin',
                         'en': 'Dublin',
                         'es': 'Dubl??n',
                         'fr': 'Dublin',
                         'ja': '??€??–??????',
                         'pt-BR': 'Dublin',
                         'ru': '?”???±??????',
                         'zh-CN': 'é???????—'}},.......

c:\Python35&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Solved:</p>
<p>Follow Kush131's    pprint code to solve my challenge. </p>
<p>If you are using Python 3.5 in Windows , you need to do these extra steps to get the output Kush131 could get in Mac.</p>
<p>After </p>
<pre><code>pip install win-unicode-console
</code></pre>
<p>You will still have problems getting Russian and Asian characters output printed in your command line tool in Windows because "windows console has poor support for encodings like UTF-8". In other words, "running Python from the Windows console, which, by default only, supports your local 8bit charmap." </p>
<p>There are 2 solutions I have found so far:</p>
<p>..........Solution 1 (can print the whole output in Windows command line but still not the Russian and Asian characters, replacing them with ???)</p>
<pre><code>c:\Python35&gt;python -m run 6_3_geoip_lookup.py --hostname=amazon.co.uk
</code></pre>
<p>..........Solution 2 with these 3 lines right below solve the problem with the desired output found in "output_utf8.txt"</p>
<pre><code>c:\Python35&gt;pip install win-unicode-console
c:\Python35&gt;set PYTHONIOENCODING=utf-8:backslashreplace
c:\Python35&gt;python 6_3_geoip_lookup.py --hostname=amazon.co.uk &gt;output_utf8.txt
</code></pre>
<p>If you don't use the solution you could get this error in you Windows command prompt:</p>
<pre><code>   File "c:\Python35\lib\encodings\cp437.py", line 19, in encode
return codecs.charmap_encode(input,self.errors,encoding_map)[0]
UnicodeEncodeError: 'charmap' codec can't encode characters in position 1-4: cha
</code></pre>
</div>
<span class="comment-copy">The Python shell is not the OS shell. Execute the same <code>python &lt;file&gt;</code> command in Windows cmd.exe.</span>
<span class="comment-copy">I did before I asked my question, and I got this error message:..........         c:\Python35&gt;python geoiplookup.py --hostname=amazon.co.uk ..........IP address: 178.236.6.251         Traceback (most recent call last):           File "geoiplookup.py", line 17, in &lt;module&gt;             match = geolite2.lookup(ip_address).......           File "c:\Python35\lib\site-packages\geoip.py", line 382, in _read_mmdb_metadat         a             ..........         TypeError: a bytes-like object is required, not 'str' ..........         c:\Python35&gt;</span>
<span class="comment-copy">Why all the negative votes? No love for a dummy who is trying hard to learn computer programming on his own ?</span>
<span class="comment-copy">I did before I asked my question, and I got this error message:..........         c:\Python35&gt;python geoiplookup.py --hostname=amazon.co.uk ..........IP address: 178.236.6.251         Traceback (most recent call last):           File "geoiplookup.py", line 17, in &lt;module&gt;             match = geolite2.lookup(ip_address).......           File "c:\Python35\lib\site-packages\geoip.py", line 382, in _read_mmdb_metadat         a             ..........         TypeError: a bytes-like object is required, not 'str' ..........         c:\Python35&gt;</span>
<span class="comment-copy">And that is completely different that what you posted in your question. <i>That</i> indicates a different problem. What you posted indicates that you were using the interpreter as the command line.</span>
<span class="comment-copy">I forgot to add that I tried the command line tool before I also tried Python GUI shell. But trust me, I have tried all the tricks I know. If you don't mind , can you please run my code and see for yourself ?</span>
<span class="comment-copy">Anybody else has any suggestion that will work ? Thanks.</span>
<span class="comment-copy">I did before I asked my question, and I got this error message:..........         c:\Python35&gt;python geoiplookup.py --hostname=amazon.co.uk ..........IP address: 178.236.6.251         Traceback (most recent call last):           File "geoiplookup.py", line 17, in &lt;module&gt;             match = geolite2.lookup(ip_address).......           File "c:\Python35\lib\site-packages\geoip.py", line 382, in _read_mmdb_metadat         a             ..........         TypeError: a bytes-like object is required, not 'str' ..........         c:\Python35&gt;</span>
<span class="comment-copy">By the way, next time try looking into this link to avoid being down voted like you were. Stack Overflow can be a very helpful place, but your question needs some work before it is deemed "acceptable". Good luck!   <a href="http://stackoverflow.com/help/how-to-ask">stackoverflow.com/help/how-to-ask</a></span>
<span class="comment-copy">Thanks Kush131 for caring and trying.  Finally an angel who cares, instead of some trigger happy cowboys who downvote based on assumptions. I will check out your answer later today.  Yes, I agree my question does need some work but believe me I had put in a lot of thoughts into it before I post it, obviously not enough but I am learning. Thanks again for your help. I will let you know later about the workaround you suggested.</span>
<span class="comment-copy">No problem. I made an edit about some issues with the geoip package I found online, so I think the workaround may be your best bet going forward (and I am fairly confident it will work for you :) ).</span>
<span class="comment-copy">I used pip install python-geoip-geolite2  , from <a href="https://pypi.python.org/pypi/python-geoip-geolite2" rel="nofollow noreferrer">pypi.python.org/pypi/python-geoip-geolite2</a>    and based on suggestions from <a href="http://pythonhosted.org/python-geoip/" rel="nofollow noreferrer">pythonhosted.org/python-geoip</a></span>
<span class="comment-copy">If you are using python3, make sure to use pip3 so you install the python3 package. Also, I would recommend using pip3 install maxminddb-geolite2, as that is exactly what I used.</span>
