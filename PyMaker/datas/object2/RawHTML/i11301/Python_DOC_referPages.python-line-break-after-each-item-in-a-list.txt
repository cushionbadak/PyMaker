<div class="post-text" itemprop="text">
<p>I have an empty list and a loop. The loop's results append to the empty list. The list is then emailed to me but it comes in the form of <code>['item1', 'item2]</code> I would like this list to be formatted like so:</p>
<pre><code>item1
item2
</code></pre>
<p>My code looks something like this:</p>
<pre><code>list = []

def function_name():
    for item in items:
        r = requests.get(item)
        results = r.status_code, r.url
        print(results, time.strftime('%Y-%m-%d'))
        for s_code in results:
            list.append(s_code)

    msg = str(list)
    subject = 'Hello'
    sender = 'me@example.com'
    recepient = 'you@example.com'

    s = smtplib.SMTP('localhost')
    s.sendmail('address1@example.com', 'address2@example.com', msg)
    s.quit()
</code></pre>
<p>check_broken_links()</p>
<p>When I remove <code>str</code> and do <code>msg = '\n'.join(list)</code> I get an error because I am combining <code>int</code> and <code>str</code> as seen in this line <code>results = r.status_code, r.url</code> leaving <code>str</code> returns every iterable in one line, so that's no good either.</p>
<p>ps
still working on my mail function, it's a bit sloppy, but it sends.</p>
</div>
<div class="post-text" itemprop="text">
<p>To resolve the <code>str.join</code> on a list of numbers, run a list comprehension to convert:</p>
<pre><code>msg = '\n'.join([str(i) for i in list])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you build the text for the email, convert the list to a string with newlines like this</p>
<pre><code>text = '\n'.join(list)
</code></pre>
<p>If you're sending an html email, you may have to do this</p>
<pre><code>text = '&lt;br/&gt;'.join(list)
</code></pre>
</div>
<span class="comment-copy">You could use another loop and print each item.</span>
<span class="comment-copy">What is the code that actually e-mails the list? It should append the contents of the list to the e-mail one item at a time, not simply covert the list to a string.</span>
<span class="comment-copy">Or use <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><b><code>str.join</code></b></a>: <code>'\n'.join(codes)</code></span>
<span class="comment-copy">You need to show the rest of your code.</span>
<span class="comment-copy">Edited question to show all of the code</span>
<span class="comment-copy">This seemed to do the trick. Thank you.</span>
<span class="comment-copy">For the HTML version, it should actually be <code>'&lt;br&gt;'.join(map(cgi.escape, my_list))</code>.</span>
<span class="comment-copy">I just added all my code to make the scenario more clear</span>
