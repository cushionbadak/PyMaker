<div class="post-text" itemprop="text">
<p>My question is related to this  earlier question - <a href="https://stackoverflow.com/questions/17242828/python-subprocess-and-running-a-bash-script-with-multiple-arguments">Python subprocess usage</a></p>
<p>I am trying to run this command using python </p>
<p><strong>nccopy -k 4 "<a href="http://www.esrl.noaa.gov/psd/thredds/dodsC/Datasets/ncep.reanalysis2/pressure/air.2014.nc?air[408:603][2][20:34][26:40]" rel="nofollow noreferrer">http://www.esrl.noaa.gov/psd/thredds/dodsC/Datasets/ncep.reanalysis2/pressure/air.2014.nc?air[408:603][2][20:34][26:40]</a>" foo.nc</strong></p>
<p>When I run the above command I should be able to see a file called foo.nc on my disk or a network error stating unable to access that URL or remote URL not found. </p>
<p>Currently the ESRL NOAA server is down - so when I run the above command I get</p>
<p>syntax error, unexpected $end, expecting SCAN_ATTR or SCAN_DATASET or SCAN_ERROR
context: ^
NetCDF: Access failure
Location: file nccopy.c; line 1348</p>
<p>I should get the same error when I run the python script</p>
<p>This is the code I have and I am unable to figure out exactly how to proceed further -</p>
<p>I tried splitting up "-k 4" into two arguments and removing the quotes and I still get this error nccopy : invalid format : 4</p>
<p>Results of print(sys.argv) data.py </p>
<p>['data.py', '-k', '4', '<a href="http://www.esrl.noaa.gov/psd/thredds/dodsC/Datasets/ncep.reanalysis2/pressure/air.2014.nc?air[480:603][20:34][26:40]" rel="nofollow noreferrer">http://www.esrl.noaa.gov/psd/thredds/dodsC/Datasets/ncep.reanalysis2/pressure/air.2014.nc?air[480:603][20:34][26:40]</a>', 'foo.nc']</p>
<pre><code>import numpy as np

import subprocess

import sys

url = '"http://www.esrl.noaa.gov/psd/thredds/dodsC/Datasets/ncep.reanalysis2/pressure/air.2014.nc?air[408:603][2][20:34][26:40]"'

outputFile = 'foo.nc'

arg1 = "-k 4"

arg3 = url 

arg4 = outputFile


print (input)

subprocess.check_call(["nccopy",arg1,arg3,arg4])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There's two dilemmas here.<br/>
One being that subprocess processes your arguments and tries to use <code>4</code> as a separate argument.</p>
<p>The other being that system calls still goes under normal shell rules, meaning that parameters and commands will be parsed for <a href="http://www.tutorialspoint.com/unix/unix-quoting-mechanisms.htm" rel="nofollow">metacharacters</a> aka special characters. In this case you're wrapping <code>[</code> and <code>]</code>.</p>
<p>There for you need to separate each parameters and it's value into separate objects in the parameter-list, for instance <code>-k 4</code> should be <code>['-k', '4']</code> and you need to wrap parameters/values in <code>'...'</code> instead of <code>"..."</code>.</p>
<p>Try this, <code>shlex.split()</code> does the grunt work for you, and i swapped the encapsulation characters around the URL:</p>
<pre><code>import numpy as np
import subprocess
import sys
import shlex

url = "'http://www.esrl.noaa.gov/psd/thredds/dodsC/Datasets/ncep.reanalysis2/pressure/air.2014.nc?air[408:603][2][20:34][26:40]'"

outputFile = 'foo.nc'
command_list = shlex.split('nccopy -k 4 ' + url + ' ' + outpufFile)

print(command_list)

subprocess.check_call(command_list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of arg1 = "-k 4", use two arguments instead.</p>
<pre><code>import subprocess


url = 'http://www.esrl.noaa.gov/psd/thredds/dodsC/Datasets/ncep.reanalysis2/pressure/air.2014.nc?air[408:603][2][20:34][26:40]'

outputFile = 'foo.nc'

arg1 = "-k"
arg2 = "4"
arg3 = url 
arg4 = outputFile

subprocess.check_call(["nccopy", arg1, arg2, arg3, arg4])
</code></pre>
<p>See also here <a href="https://stackoverflow.com/questions/11679936/python-subprocess-arguments">Python subprocess arguments</a></p>
</div>
<div class="post-text" itemprop="text">
<p>If you have a working shell command that runs a single program with multiple arguments and you want to parameterized it e.g., to use a variable filename instead of the hardcoded value then you could use <code>shlex.split()</code> to create a list of command-line arguments that you could pass to <code>subprocess</code> module and replace the desired argument with a variable e.g.:</p>
<pre><code>&gt;&gt;&gt; shell_command = "python -c 'import sys; print(sys.argv)' 1 't w o'"
&gt;&gt;&gt; import shlex
&gt;&gt;&gt; shlex.split(shell_command)
['python', '-c', 'import sys; print(sys.argv)', '1', 't w o']
</code></pre>
<p>To run the command using the same Python interpreter as the parent script, <code>sys.executable</code> could be used and we can pass a <code>variable</code> instead of <code>'1'</code>:</p>
<pre><code>#!/usr/bin/env python
import random
import sys
import subprocess

variable = random.choice('ab')
subprocess.check_call([sys.executable, '-c', 'import sys; print(sys.argv)',
                       variable, 't w o'])
</code></pre>
<p>Note:</p>
<ul>
<li>one command-line argument per list item</li>
<li>no <code>shlex.split()</code> in the final code</li>
<li>there are no quotes inside <code>'t w o'</code> i.e., <code>'t w o'</code> is used instead of <code>'"t w o"'</code> or <code>"'t w o'"</code></li>
</ul>
<p><code>subprocess</code> module does not run the shell by default and therefore you don't need to escape shell meta-characters such as a space inside the command-line arguments. And in reverse, if your command uses some shell functionality (e.g., file patterns) then either reimplement the corresponding features in Python (e.g., using <code>glob</code> module) or use <code>shell=True</code> and pass the command as a string as is. You might need <code>pipes.quote()</code>, to escape variable arguments in this case. <a href="https://stackoverflow.com/q/7156892/4279">Wildcard not working in subprocess call using shlex</a></p>
</div>
<span class="comment-copy">first of all, use <a href="https://docs.python.org/3/library/shlex.html" rel="nofollow noreferrer">shlex</a>, secondly use <code>Popen()</code> instead of <code>check_call()</code> if possible. Also your problem is that you don't separate <code>-k</code> and <code>4</code>. Subprocess automatically tries to insert a space for each parameter element. Try this <code>["nccopy", '-k', '4']</code></span>
<span class="comment-copy">Also when calling system commands traditional shell logic still applies, meaning <code>" </code> will enable parsing of variables and characters where as <code>' </code> does not around parameters in the command. Unless you want parsing of the parameter I'd say use <code>' </code> to wrap parameters.</span>
<span class="comment-copy">If <code>outputFile</code> has a space in it; your code example fails. There is no reason to use <code>shlex.split()</code> here (and <a href="http://stackoverflow.com/questions/14386775/subprocess-call/14386815#comment45736245_14386815">it can be fooled in the general case</a>). It is convenient to use <code>shlex.split()</code> in a REPL (to create a seed arguments list from a shell command, that you can fine-tune manually later)â€”avoid it in the final code.</span>
<span class="comment-copy">@J.F.Sebastian - can you write an alternate answer that is completely different to the other two ?</span>
<span class="comment-copy">Yes good catch, I'll edit</span>
