<div class="post-text" itemprop="text">
<p>(I will state this is for learning purposes).<br/>
I have a query which returns <code>('a',) , ('b',) , ('c',)</code>
Which I translate to a dictionary which is <code>{a: '',b: '', c: ''}</code>
I am doing it the simple way:</p>
<pre><code>    for(results) in MySQL_CLASS.cursor:
        MyDict[results[0]] = ''
</code></pre>
<p>Is there a shorter way to write this?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://www.python.org/dev/peps/pep-0274/" rel="nofollow">dict comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; results = (('a',) , ('b',) , ('c',))
&gt;&gt;&gt; {x[0]: '' for x in results}
{'a': '', 'c': '', 'b': ''}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://stackoverflow.com/a/37466142/771848">Dict comprehension based approach</a> should be preferred, but, for educational purposes, here is an another option that involves using <a href="https://docs.python.org/3/library/stdtypes.html#dict.fromkeys" rel="nofollow noreferrer"><code>dict.fromkeys()</code></a> with <code>operator.itemgetter</code> and <code>map</code>:</p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; l = [('a',) , ('b',) , ('c',)]
&gt;&gt;&gt; dict.fromkeys(map(itemgetter(0), l), '')
{'a': '', 'c': '', 'b': ''}
</code></pre>
</div>
<span class="comment-copy">You could try using <code>dict.fromkeys</code>, but you're still doing to need to index the tuples.</span>
<span class="comment-copy">Btw, you can shorten it to <code>{x: '' for x, in results}</code>.</span>
<span class="comment-copy">@alexce: Wouldn't that cause the keys yo be tuples? I get following: <code>&gt;&gt;&gt; {x: '' for x in results}</code> -&gt; <code>&gt;&gt;&gt; {('c',): '', ('a',): '', ('b',): ''}</code></span>
<span class="comment-copy">Note the comma after the <code>x</code> - it unpacks the tuples.</span>
<span class="comment-copy">Oh true, missed that in my experiment</span>
