<div class="post-text" itemprop="text">
<p>I have written a batch script that prompts the user for an input and displays the help for a specific library <code>ExternalLibrary</code>. However, I receive the error below the code sample.</p>
<pre><code>@echo off
set input=NUL
set /p input="Help: "

python -c "import sys; sys.path.append('D:\\lib'); import ExternalLibrary;lookup = ExternalLibrary.Presentation_control();if ('%input%' == 'NUL'):&amp;    help(lookup.%input%)&amp;else:&amp;    help(lookup)"
</code></pre>
<p>A working version can be achieved by replacing the <code>if</code> statement with:</p>
<pre><code>help(lookup.%input%)
</code></pre>
<hr/>
<p>Error in the column that starts with <code>if</code></p>
<pre><code>C:\Users\usah&gt;Lib_Help.cmd
Help:
  File "&lt;string&gt;", line 1
    import sys; sys.path.append('D:\\lib'); import ExternalLibrary;lookup = ExternalLibrary.Presentation_control();if ('NUL' == 'NUL'):&amp;    help(lookup.NU
L)&amp;else:&amp;    help(lookup)
                                                                                                                               ^
SyntaxError: invalid syntax
</code></pre>
<p><sub><strong>Footnotes</strong></sub></p>
<p><sub>1. I am note sure whether I should pass <code>&amp;</code>, <code>\n</code>, or <code>;</code> as newline</sub></p>
<p><sub>2. These <a href="https://stackoverflow.com/questions/2043453/executing-python-multi-line-statements-in-the-one-line-command-line">related answers</a> are not satisfying as they use workarounds.</sub></p>
</div>
<div class="post-text" itemprop="text">
<h1>Only simple statements can be written on single line separated by semicolons</h1>
<p>This was more interesting than it seemed. For the sake of unambiguity you can't write conditional or any other compound statement on semicolon separated single line.</p>
<p><a href="https://docs.python.org/3/reference/simple_stmts.html" rel="nofollow">Simple statements</a></p>
<p><a href="https://docs.python.org/3/reference/compound_stmts.html" rel="nofollow">Compound statements</a></p>
<h1>Your options</h1>
<h2>Rewrite it all to Python</h2>
<p>This should not be so hard. Use <code>sys.argv</code> for arguments and</p>
<pre><code>getattr(lookup, "something")
</code></pre>
<p>instead of your</p>
<pre><code>lookup.%input%
</code></pre>
<p><a href="https://docs.python.org/3/library/sys.html#sys.argv" rel="nofollow">sys.argv</a></p>
<p><a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow">getattr</a></p>
<h2>Use linefeeds</h2>
<p>Write multiline Python script on one cmd line. You can do it using <code>!LF!</code> special.</p>
<pre><code>@echo off
setlocal enableDelayedExpansion
set LF=^


set input=NUL
set /p input="Help: "


python -c "import sys!LF!sys.path.append('D:\\lib')!LF!import ExternalLibrary!LF!lookup = ExternalLibrary.Presentation_control()!LF!if ('%input%' == 'NUL'):!LF!    help(lookup)!LF!else:!LF!    help(lookup.%input%)!LF!"
</code></pre>
</div>
<span class="comment-copy">Remove the parentheses.</span>
<span class="comment-copy">That does not work</span>
<span class="comment-copy">But the error message is different, right?</span>
<span class="comment-copy">Nope. I am afraid not.</span>
<span class="comment-copy">Great answer! I corrected some errors in my code. The code you provided is now runnable!</span>
