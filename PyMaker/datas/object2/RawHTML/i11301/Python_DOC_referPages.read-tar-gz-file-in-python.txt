<div class="post-text" itemprop="text">
<p>I have a text file of 25GB. so i compressed it to tar.gz and it became 450 MB. now i want to read that file from python and process the text data.for this i referred <a href="https://stackoverflow.com/questions/2018512/reading-tar-file-contents-without-untarring-it-in-python-script">question</a> . but in my case code doesn't work. the code is as follows : </p>
<pre><code>import tarfile
import numpy as np 

tar = tarfile.open("filename.tar.gz", "r:gz")
for member in tar.getmembers():
     f=tar.extractfile(member)
     content = f.read()
     Data = np.loadtxt(content)
</code></pre>
<p>the error is as follows : </p>
<pre><code>Traceback (most recent call last):
  File "dataExtPlot.py", line 21, in &lt;module&gt;
    content = f.read()
AttributeError: 'NoneType' object has no attribute 'read'
</code></pre>
<p>also, Is there any other method to do this task ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/2.7/library/tarfile.html#tarfile.TarFile.extractfile" rel="noreferrer">docs</a> tell us that <em>None</em> is returned by <em>extractfile()</em> if the member is a not a regular file or link.</p>
<p>One possible solution is to skip over the <em>None</em> results:</p>
<pre><code>tar = tarfile.open("filename.tar.gz", "r:gz")
for member in tar.getmembers():
     f = tar.extractfile(member)
     if f is not None:
         content = f.read()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/tarfile.html#tarfile.TarFile.extractfile" rel="nofollow"><code>tarfile.extractfile()</code></a> can return <code>None</code> if the member is neither a file nor a link. For example your tar archive might contain directories or device files. To fix:</p>
<pre><code>import tarfile
import numpy as np 

tar = tarfile.open("filename.tar.gz", "r:gz")
for member in tar.getmembers():
     f = tar.extractfile(member)
     if f:
         content = f.read()
         Data = np.loadtxt(content)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may try this one</p>
<pre><code>t = tarfile.open("filename.gz", "r")
for filename in t.getnames():
    try:
        f = t.extractfile(filename)
        Data = f.read()
        print filename, ':', Data
    except :
        print 'ERROR: Did not find %s in tar archive' % filename
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You cannot "read" the content of some special files such as links yet tar supports them and tarfile will extract them alright. When <code>tarfile</code> extracts them, it does not return a file-like object but None. And you get an error because your tarball contains such a special file.</p>
<p>One approach is to determine the type of an entry in a tarball you are processing ahead of extracting it: with this information at hand you can decide whether or not you can "read" the file. You can achieve this by calling <code>tarfile.getmembers()</code> returns <code>tarfile.TarInfo</code>s that contain detailed information about the type of file contained in the tarball.  </p>
<p>The <code>tarfile.TarInfo</code> class has all the attributes and methods you need to determine the type of tar member such as <code>isfile()</code> or <code>isdir()</code> or <code>tinfo.islnk()</code> or <code>tinfo.issym()</code> and then accordingly decide what do to with each member (extract or not, etc).</p>
<p>For instance I use these to test the type of file in <a href="https://github.com/nexB/scancode-toolkit/blob/68474f46e6bd125a6b4ee441ce760c6929e80482/src/extractcode/tar.py#L130" rel="nofollow noreferrer">this patched tarfile</a> to skip extracting special files and process links in a special way:</p>
<pre><code>for tinfo in tar.getmembers():
    is_special = not (tinfo.isfile() or tinfo.isdir()
                      or tinfo.islnk() or tinfo.issym())
...
</code></pre>
</div>
<span class="comment-copy">Something like <a href="http://stackoverflow.com/q/33113600/1240268">stackoverflow.com/q/33113600/1240268</a></span>
<span class="comment-copy"><i>If member is none of the above, None is returned.</i>, the member is not a file or link.</span>
<span class="comment-copy">Thanks for the code snippet. You are reading twice though - once in setting the "data" variable and the next time in printing. Can you change your code to fix that?</span>
<span class="comment-copy">@SaurabhHirani Changed. Thanks for your reminder.</span>
