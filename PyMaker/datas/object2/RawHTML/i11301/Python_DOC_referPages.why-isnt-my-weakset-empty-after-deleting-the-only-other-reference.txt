<div class="post-text" itemprop="text">
<p>I decided I should familiarize myself with the <a href="https://docs.python.org/3/library/weakref.html" rel="nofollow"><code>weakref</code> library</a>, so I started messing around with the collections, thought I was getting the hang of it until this. </p>
<pre><code>&gt;&gt;&gt; import weakref

&gt;&gt;&gt; class Greek():
        def __init__(self, name):
            self.name = name

&gt;&gt;&gt; objs = [Greek('alpha'), Greek('gamma'), Greek('zeta')]
&gt;&gt;&gt; weak_s = weakref.WeakSet()

&gt;&gt;&gt; for obj in objs: weak_s.add(obj)
</code></pre>
<p>Here I have a WeakSet <code>weak_s</code> that I would expect to contain 3 <code>weakref</code>s to each <code>Greek()</code> instance, and it does:</p>
<pre><code>&gt;&gt;&gt;  weak_s.data
{&lt;weakref at 0x02ECA690; to 'Greek' at 0x02E5FF90&gt;,
 &lt;weakref at 0x02ECA720; to 'Greek' at 0x02E5FFB0&gt;,
 &lt;weakref at 0x02ECA750; to 'Greek' at 0x02E5FFD0&gt;}
</code></pre>
<p>Then I would expect that as soon as I get rid of the <code>objs</code> name, there won't be any more "strong references" to each <code>Greek()</code> instance, and they will be garbage collected. But for some reason this doesn't happen. </p>
<pre><code>&gt;&gt;&gt; del objs
&gt;&gt;&gt; weak_s.data
{&lt;weakref at 0x02ECA750; to 'Greek' at 0x02E5FFD0&gt;}
</code></pre>
<p>Why is there still a weakref inside my WeakSet? I can use <code>del</code> again and it persists, seemingly no matter what I do.</p>
</div>
<div class="post-text" itemprop="text">
<p>You still have the <code>obj</code> variable from here:</p>
<pre><code>&gt;&gt;&gt; for obj in objs: weak_s.add(obj)
</code></pre>
<p>That variable retains its last value from the loop, so it's still referring to the last <code>Greek</code> instance, keeping it alive and in the <code>WeakSet</code>.</p>
</div>
<span class="comment-copy">Where did <code>Foo</code> come from?</span>
<span class="comment-copy">@user2357112 sorry, edited. (Gave up halfway through changing to Foo).</span>
<span class="comment-copy">Please copy-paste your code and results from an actual interpreter session. Don't try to retype output into the question box or edit it manually to "fix" spotted errors; you'll just obscure the actual behavior of your code.</span>
<span class="comment-copy">@user2357112 Ill keep that in mind, thanks.</span>
<span class="comment-copy">Of course, gah. Thanks a lot, silly question.</span>
