<div class="post-text" itemprop="text">
<p>I am trying to create a list with all the newspapers articles from 5 different sources. They are stored in <code>JSON</code> format. All articles are stored in different files that contain that contain the newspaper and the year (time spam 2005-2015). The problem is that one of the newspapers is available for only 2014-15, therefore when I loop everything together I get error. This is my attempt:</p>
<pre><code>import json
import nltk
import re
import pandas

appended_data = []

for i in range(2005,2016):
    df0 = pandas.DataFrame([json.loads(l) for l in open('SDM_%d.json' % i)])
    df1 = pandas.DataFrame([json.loads(l) for l in open('Scot_%d.json' % i)])
    df2 = pandas.DataFrame([json.loads(l) for l in open('APJ_%d.json' % i)])
    df3 = pandas.DataFrame([json.loads(l) for l in open('TH500_%d.json' % i)])
    df4 = pandas.DataFrame([json.loads(l) for l in open('DRSM_%d.json' % i)])
    appended_data.append(df0)
    appended_data.append(df1)
    appended_data.append(df2)
    appended_data.append(df3)
    appended_data.append(df4)


appended_data = pandas.concat(appended_data)

doc_set = appended_data.body
</code></pre>
<p>My question is; does this code does what I am aiming? (creating a single list with the <code>body</code> of all articles from each newspaper along time); and, how can I program it in a way that I skip the years 2005-2013 for the first newspaper (SDM)</p>
</div>
<div class="post-text" itemprop="text">
<p>For the skipping part, you can:</p>
<pre><code>for i in range(2005,2016):
    if i &gt; 2013:
        df0 = pandas.DataFrame([json.loads(l) for l in open('SDM_%d.json' % i)])
        appended_data.append(df0)
    df1 = pandas.DataFrame([json.loads(l) for l in open('Scot_%d.json' % i)])
</code></pre>
<p>To know whether the code performs as expected we'd need so sample data.</p>
</div>
<div class="post-text" itemprop="text">
<p>First of all you need to check the version of python to determine what type of error is thrown when the file name is not found as explained in <a href="https://stackoverflow.com/questions/15032108/pythons-open-throws-different-errors-for-file-not-found-how-to-handle-b">Python's "open()" throws different errors for "file not found" - how to handle both exceptions?</a></p>
<p>Secondly, just in case there is a problem with some of the files you should check all of the possibilities.</p>
<p>One way would be</p>
<ol>
<li><p>Create a list of file name prefixes ['SDM', 'Scot', 'AP', 'TH500', 'DRSM')</p></li>
<li><p>loop over the years</p></li>
<li><p>create the file names as a loop in the list of names</p></li>
<li><p>open the file in a <code>try:</code> <code>except</code> pair in order to handle any problems as myfile Alternatively, you can also use <code>os.path.exists()</code> in an if to avoid the try except. However, you should have a try except pair anyways just in case something else goes wrong.</p></li>
<li><p>read the data into <code>df = pandas.DataFrame([json.loads(myfile))</code> Note you should also encapsulate this as a <code>try ... except</code> pair</p></li>
<li><p><strong>close</strong> the file so that you do not have too many open.</p></li>
<li><p>Now append df to the list you are creating.</p></li>
</ol>
<p>This should handle the situation.</p>
</div>
<span class="comment-copy">It's difficult to answer your first question without any data, but for your second question, you can test if the file exists with <a href="https://docs.python.org/3/library/os.path.html" rel="nofollow noreferrer">os.path.exists</a>.</span>
<span class="comment-copy">Note you should check that the read works and the other files exist just in case.</span>
<span class="comment-copy">You should close your files to avoid too many open at once. Even if this works, it is better to start with good habits for future programs.</span>
<span class="comment-copy">thanks very much for the answer, it works great!</span>
<span class="comment-copy">You're welcome. The <code>os.path.exists()</code> suggestion in the comments is also one to keep in mind for the general case where you don't know beforehand which files may or may not exist.</span>
