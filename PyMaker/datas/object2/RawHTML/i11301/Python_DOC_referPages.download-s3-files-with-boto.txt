<div class="post-text" itemprop="text">
<p>I am trying to set up an app where users can download their files stored in an S3 Bucket. I am able to set up my bucket, and get the correct file, but it won't download, giving me the this error: <code>No such file or directory: 'media/user_1/imageName.jpg'</code> Any idea why? This seems like a relatively easy problem, but I can't quite seem to get it. I can delete an image properly, so it is able to identify the correct image.</p>
<p>Here's my views.py</p>
<pre><code>def download(request, project_id=None):
    conn = S3Connection('AWS_BUCKET_KEY', 'AWS_SECRET_KEY')
    b = Bucket(conn, 'BUCKET_NAME')
    k = Key(b)
    instance = get_object_or_404(Project, id=project_id)
    k.key = 'media/'+str(instance.image)
    k.get_contents_to_filename(str(k.key))
    return redirect("/dashboard/")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you are downloading to a <strong>local directory that doesn't exist</strong> (<code>media/user1</code>). You need to either:</p>
<ul>
<li>Create the directory on the local machine first</li>
<li>Just use the filename rather than a full path</li>
<li>Use the full path, but replace slashes (<code>/</code>) with another character -- this will ensure uniqueness of filename without having to create directories</li>
</ul>
<p>The last option could be achieved via:</p>
<pre><code>k.get_contents_to_filename(str(k.key).replace('/', '_'))
</code></pre>
<p>See also: <a href="https://stackoverflow.com/questions/31918960/boto3-to-download-all-files-from-a-s3-bucket/31929277#31929277">Boto3 to download all files from a S3 Bucket</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Downloading files using boto3 is very simple, configure your AWS credentials at system level before using this code.</p>
<pre><code>client = boto3.client('s3')

// if your bucket name is mybucket and the file path is test/abc.txt
// then the Bucket='mybucket' Prefix='test'

resp = client.list_objects_v2(Bucket="&lt;your bucket name&gt;", Prefix="&lt;prefix of the s3 folder&gt;") 

for obj in resp['Contents']:
    key = obj['Key']
    //to read s3 file contents as String
    response = client.get_object(Bucket="&lt;your bucket name&gt;",
                         Key=key)
    print(response['Body'].read().decode('utf-8'))

    //to download the file to local
    client.download_file('&lt;your bucket name&gt;', key, key.replace('test',''))
</code></pre>
<p>replace is to locate the file in your local with s3 file name, if you don't replace it will try to save as 'test/abc.txt'.</p>
</div>
<span class="comment-copy">quick tip: since you're using django you could use <a href="http://django-storages.readthedocs.io/en/latest/" rel="nofollow noreferrer">django-storages</a> it'll be easier</span>
<span class="comment-copy">maybe you should use boto3  download_file</span>
<span class="comment-copy">Could you possibly give me a simple example. I relatively new to Boto and AWS. If not, that's totally fine.</span>
<span class="comment-copy">I've added some sample code.</span>
<span class="comment-copy">This answer should have more up vote. simplest solution</span>
<span class="comment-copy">You can use <a href="https://docs.python.org/3/library/os.html#os.makedirs" rel="nofollow noreferrer"><code>os.makedirs()</code></a> to create a directory, including its parent directories if needed.</span>
<span class="comment-copy">This was very helpful, but the C-style comments in Python code are unnerving.</span>
