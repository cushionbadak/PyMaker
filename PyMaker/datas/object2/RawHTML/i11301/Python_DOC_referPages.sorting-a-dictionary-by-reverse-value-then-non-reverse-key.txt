<div class="post-text" itemprop="text">
<p>I have a dictionary containing string keys and int values that I want to be sorted. I want it to first be sorted by decreasing value number, then in alphabetical order.</p>
<p>For example if you had a dictionary containing:</p>
<pre><code>my_dict = {'zebra':1, 'the':201, 'apple':1, 'chicken':58}
</code></pre>
<p>The resulting sorted list would contain:</p>
<pre><code>{('the', 201), ('chicken', 58), ('apple', 1), ('zebra', 1)
</code></pre>
<p>Currently I'm using the following:</p>
<pre><code>my_list = sorted(my_dict.items(), key=lambda x: (x[1],x[0])
</code></pre>
<p>I get a list sorted first in ascending value order and then in alphabetical. </p>
<p>How can I reverse the values but not the keys? I know you can pass a third parameter <code>reverse=[boolean]</code> to the <code>sorted()</code> method, but it either does or does not reverse BOTH keys and values. How can sort by just one reversal? Thanks for any help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Just negate the value and use it as primary key:</p>
<pre><code>&gt;&gt;&gt; my_dict = {'zebra':1, 'the':201, 'apple':1, 'chicken':58}
&gt;&gt;&gt; sorted(my_dict.items(), key=lambda x: (-x[1], x[0]))
[('the', 201), ('chicken', 58), ('apple', 1), ('zebra', 1)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As sorting is stable in Python, you can simply sort it twice: first by the secondary key, then by the primary key:</p>
<pre><code>In [29]: from operator import itemgetter
In [30]: my_dict = {'zebra':1, 'the':201, 'apple':1, 'chicken':58}
In [31]: my_list = sorted(sorted(my_dict.iteritems(), key=itemgetter(0)), key=itemgetter(1), reverse=True)

In [32]: my_list
Out[32]: [('the', 201), ('chicken', 58), ('apple', 1), ('zebra', 1)]
</code></pre>
<p><a href="https://docs.python.org/3/howto/sorting.html#sort-stability-and-complex-sorts" rel="nofollow">This documentation</a> explains stable sorting in Python in more detail.</p>
</div>
<span class="comment-copy">not really duplicate but the "sort by value descending then by key ascending" has answers posted <a href="http://stackoverflow.com/questions/37513551/how-to-sort-tuple-element-first-on-the-basis-of-key-and-then-on-the-basis-of-val">on this question</a></span>
<span class="comment-copy">Simpler than mine; I like it! :)</span>
