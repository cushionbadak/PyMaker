<div class="post-text" itemprop="text">
<p>I often find myself wanting to test the intersection of two sets without using the result of the intersections.</p>
<pre><code>set1 = set([1,2])
set2 = set([2,3])
if(set1 &amp; set2):
  print("Non-empty intersection")
else:
  print("Empty intersection")
</code></pre>
<p>The problem is that a new set is created to do this test which can be inefficient.</p>
<p>Is there a short way to do this without explicitly writing it out (as in the following)?</p>
<pre><code>if(any(x in set2 for x in set1)):
  print("Non-empty intersection")
else:
  print("Empty intersection")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are looking for <a href="https://docs.python.org/3.4/library/stdtypes.html?highlight=sets#set.isdisjoint" rel="nofollow"><code>set.isdisjoint()</code></a>, as sets are <a href="https://en.wikipedia.org/wiki/Disjoint_sets" rel="nofollow">disjoint</a> if and only if they have an empty intersection. </p>
<pre><code>&gt;&gt;&gt; set1 = set([1,2])
&gt;&gt;&gt; set2 = set([2,3])
&gt;&gt;&gt; set1.isdisjoint(set2)
False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/stdtypes.html#set.isdisjoint" rel="nofollow"><code>set.isdisjoint()</code></a> to test wheather two sets have an empty intersection, just negate for the oposite:</p>
<pre><code>set1 = set([1,2])
set2 = set([2,3])

if not set1.sidisjoint(set2):
  print("Non-empty intersection")
else:
  print("Empty intersection")
</code></pre>
</div>
