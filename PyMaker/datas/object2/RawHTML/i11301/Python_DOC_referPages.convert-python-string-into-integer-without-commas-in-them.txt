<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1779288/how-to-convert-a-string-to-a-number-if-it-has-commas-in-it-as-thousands-separato">How to convert a string to a number if it has commas in it as thousands separators?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>I am using beautifulsoup4 to extract prices tag from a website. The code i m using is this</p>
<pre><code> #price
        try:
            price = soup.find('span',{'id':'actualprice'})
            price_result= str(price.get_text())
            print "Price: ",price_result
        except StandardError as e:
            price_result="Error was {0}".format(e)
            print price_result
</code></pre>
<p>The output i m getting is a string with a format with commas in it. e.g.
<code>82,000,00</code></p>
<p><strong>What i want:</strong></p>
<p>Change the format from string price to integer price without commas in it so that i can use them as values intead of strings in excel</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this :</p>
<pre><code>&gt;&gt;&gt; string = '82,000,00'
&gt;&gt;&gt; int(price_result.replace(',', ''))
8200000
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Checkout <a href="https://docs.python.org/2/library/string.html" rel="nofollow">https://docs.python.org/2/library/string.html</a> or <a href="https://docs.python.org/3/library/string.html" rel="nofollow">https://docs.python.org/3/library/string.html</a> depending on the Python version you are using and use the "replace()" function:</p>
<pre><code>int_price = int(price_result.replace(',',''))
</code></pre>
<p>This replaces all commas within the string and then casts it to an INT:</p>
<pre><code>&gt;&gt;&gt; price = "1,000,000"
&gt;&gt;&gt; type(price)
&lt;type 'str'&gt;
&gt;&gt;&gt; int_price = int(price.replace(',',''))
&gt;&gt;&gt; type(int_price)
&lt;type 'int'&gt;
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the last part is a fractional part, you could do something like this:</p>
<pre><code>import re
r = re.compile(r'((?:\d{1,3},?)+)(,\d{2})')
m = r.match('82,000,00')
v = m.group(1).replace(',', '') + m.group(2).replace(',', '.')
print(float(v))
</code></pre>
<p>Output:</p>
<pre><code>82000.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import re

''.join(re.findall(r'\d+', '82,000,00'))
</code></pre>
<p>or another method will be,</p>
<pre><code>int(filter(str.isdigit, '82,000,00'))
</code></pre>
</div>
<span class="comment-copy">What do you mean by "without commas"? You want to remove commas from your number, or simple change it into dot?</span>
<span class="comment-copy">All i want is to use it as a number when i extract it so i can do  my computation.</span>
<span class="comment-copy">netter to have it without commas</span>
<span class="comment-copy">It's a weird notation. Normally it would be 82,000.00 or 82.000,00. Are the "numbers" always like this format?</span>
<span class="comment-copy">Wouldn't that make it 100 times bigger?</span>
<span class="comment-copy">It depends whether the second comma separates the fractional part or not. The question is not clear about this...</span>
<span class="comment-copy">there is no point. this solves</span>
