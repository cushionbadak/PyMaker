<div class="post-text" itemprop="text">
<p>I am working on Twitter. I got data from Twitter with Stream API and the result of app is JSON file. I wrote tweets data in a text file and now I see Unicode characters instead of Turkish characters. I don't want to do find/replace in Notepad++ by hand. Is there any automatic option to replace characters by opening txt file, reading all data in file and changing Unicode characters with Turkish characters by Python?</p>
<p>Here are Unicode characters and Turkish characters which I want to replace.</p>
<ul>
<li>ğ - \u011f</li>
<li>Ğ - \u011e</li>
<li>ı - \u0131</li>
<li>İ - \u0130</li>
<li>ö - \u00f6</li>
<li>Ö - \u00d6</li>
<li>ü - \u00fc</li>
<li>Ü - \u00dc</li>
<li>ş - \u015f</li>
<li>Ş - \u015e</li>
<li>ç - \u00e7</li>
<li>Ç - \u00c7</li>
</ul>
<p>I tried two different type</p>
<pre><code>#!/usr/bin/env python

# -*- coding: utf-8 -*- 

import re

dosya = open('veri.txt', 'r')

for line in dosya:
    match = re.search(line, "\u011f")
    if (match):
        replace("\u011f", "ğ")

dosya.close()
</code></pre>
<p>and:</p>
<pre><code>#!/usr/bin/env python

# -*- coding: utf-8 -*- 

f1 = open('veri.txt', 'r')
f2 = open('veri2.txt', 'w')

for line in f1:
    f2.write=(line.replace('\u011f', 'ğ')) 
    f2.write=(line.replace('\u011e', 'Ğ'))
    f2.write=(line.replace('\u0131', 'ı'))
    f2.write=(line.replace('\u0130', 'İ'))
    f2.write=(line.replace('\u00f6', 'ö'))
    f2.write=(line.replace('\u00d6', 'Ö'))
    f2.write=(line.replace('\u00fc', 'ü'))
    f2.write=(line.replace('\u00dc', 'Ü'))
    f2.write=(line.replace('\u015f', 'ş'))
    f2.write=(line.replace('\u015e', 'Ş'))
    f2.write=(line.replace('\u00e7', 'ç'))
    f2.write=(line.replace('\u00c7', 'Ç'))

f1.close()
f2.close()
</code></pre>
<p>Both of these didn't work. 
How can I make it work?</p>
</div>
<div class="post-text" itemprop="text">
<p>JSON allows both "escaped" and "unescaped" characters.  The reason why the Twitter API returns only escaped characters is that it can use the ASCII encoding, which increases interoperability.  For Turkish characters you need another encoding.  Opening a file with the <a href="https://docs.python.org/3/library/functions.html#open" rel="nofollow"><code>open</code></a> function opens a file assuming your current locale encoding, which is probably what your editor expects.  If you want the output file to have e.g. the <code>ISO-8859-9</code> encoding, you can pass <code>encoding='ISO-8859-9</code>' as an additional parameter to the <code>open</code> function.</p>
<p>You can read a file containing a JSON object with the <code>json.load</code> function.  This returns a Python object with the escaped characters decoded.  Writing it again with <code>json.dump</code> and passing <code>ensure_ascii=False</code> as an argument writes the object back to a file without encoding Turkish characters as escape sequences.  An example:</p>
<pre><code>import json
inp = open('input.txt', 'r')
out = open('output.txt', 'w')
in_as_obj = json.load(inp)
json.dump(in_as_obj, out, ensure_ascii=False)
</code></pre>
<p>Your file isn't really a JSON file, but instead a file containing multiple JSON objects.  If each JSON object is on its own line, you can try the following:</p>
<pre><code>import json
inp = open('input.txt', 'r')
out = open('output.txt', 'w')
for line in inp:
    if not line.strip():
        out.write(line)
        continue
    in_as_obj = json.loads(line)
    json.dump(in_as_obj, out, ensure_ascii=False)
    out.write('\n')
</code></pre>
<p>But in your case it's probably better to write unescaped JSON to the file in the first place.  Try replacing your <code>on_data</code> method by (untested):</p>
<pre><code>def on_data(self, raw_data):
    data = json.loads(raw_data)
    print(json.dumps(data, ensure_ascii=False))
</code></pre>
</div>
<span class="comment-copy">How about you show the code you used to get data from twitter? It would be easier to update it to output data correctly in the first place.</span>
<span class="comment-copy">'\u00c7' is an unicode escape sequence and actually <i>is</i> the same as 'Ç'. Try running <code>'\u00c7' == 'Ç'</code> in the python interpreter. It will return <code>True</code>. More information here: <a href="https://docs.python.org/3/howto/unicode.html#unicode-literals-in-python-source-code" rel="nofollow noreferrer">docs.python.org/3/howto/…</a></span>
<span class="comment-copy">Another problem is that <code>f2.write=(line.replace('\u00c7', 'Ç'))</code> does not do what you want. It replaces the <code>write</code> method by a string instead of calling the method (which would be <code>f2.write(...)</code>).</span>
<span class="comment-copy">class StdOutListener(StreamListener):       def on_data(self, data):         print (data)         return True      def on_error(self, status):         print (status)   if <b>name</b> == '<b>main</b>':      l = StdOutListener()     auth = OAuthHandler(consumer_key, consumer_secret)     auth.set_access_token(access_token, access_token_secret)     stream = Stream(auth, l)     stream.filter(languages=["tr"], track=["words in Turkish")</span>
<span class="comment-copy">and i do:  python3 twitter_streaming.py &gt; data.txt  to get data from twitter</span>
<span class="comment-copy">This is result with the code:  Traceback (most recent call last):   File "kod3.py", line 4, in &lt;module&gt;     in_as_obj = json.load(inp)   File "/usr/lib/python3.4/json/__init__.py", line 268, in load     parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)   File "/usr/lib/python3.4/json/__init__.py", line 318, in loads     return _default_decoder.decode(s)   File "/usr/lib/python3.4/json/decoder.py", line 346, in decode     raise ValueError(errmsg("Extra data", s, end, len(s))) ValueError: Extra data: line 3 column 1 - line 1054 column 1 (char 4657 - 2667065)</span>
<span class="comment-copy">It seems like your "JSON" file is in a strange format. Do you have an example of a file which fails and which you can publish? E.g. you can put it here (<a href="https://paste.pound-python.org/" rel="nofollow noreferrer">paste.pound-python.org</a>) and paste the link in the comment box.</span>
<span class="comment-copy"><a href="https://paste.pound-python.org/show/SiUalejehr6T8BEvYOpw/" rel="nofollow noreferrer">paste.pound-python.org/show/SiUalejehr6T8BEvYOpw</a>  here is a part of my text output file.</span>
<span class="comment-copy">Second output code block worked well thank you. But in my text file, it has one empty line between each line. And the code stops working when it sees the empty line. Is there any code to force it working until the end of file or should i delete all empty lines by hand?   For on_data method you offered, it gives me "TabError: inconsistent use of tabs and spaces in indentation" . I checked it no additional tabs or spaces...</span>
