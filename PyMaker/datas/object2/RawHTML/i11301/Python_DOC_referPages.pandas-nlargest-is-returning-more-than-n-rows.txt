<div class="post-text" itemprop="text">
<p>I have a <code>DataFrame</code> that looks like this:</p>
<pre><code>            name      value 
 date   
 2016-05-01 kelly      20  
 2016-05-05 john       12  
 2016-05-05 sarah      25  
 2016-05-05 george     3  
 2016-05-05 tom        40  
 2016-05-07 kara       24  
 2016-05-07 jane       90  
 2016-05-07 sally      39  
 2016-05-07 sam        28  
</code></pre>
<p>I want to get the top 3 rows (according to value) preferably per date. 
I'm expecting something like this:</p>
<pre><code>            name      value 
 date   
 2016-05-01 kelly      20  
 2016-05-05 john       12  
 2016-05-05 sarah      25  
 2016-05-05 tom        40  
 2016-05-07 jane       90  
 2016-05-07 sally      39  
 2016-05-07 sam        28  
</code></pre>
<p>but I'm ok also with this:</p>
<pre><code>            name      value 
 date   
 2016-05-05 tom        40  
 2016-05-07 jane       90  
 2016-05-07 sally      39  
</code></pre>
<p>I tried <code>df.nlargest(3, 'value')</code> but I get this weird result:</p>
<pre><code>         name        value 
 date       
 2016-05-01 kelly      20  
 2016-05-01 kelly      20  
 2016-05-01 kelly      20  
 2016-05-05 tom        40  
 2016-05-05 tom        40  
 2016-05-05 tom        40  
 2016-05-05 sarah      25  
 2016-05-05 sarah      25  
 2016-05-05 sarah      25  
 2016-05-07 kara       24  
 2016-05-07 kara       24  
 ...
 2016-05-07 sally      39  
 2016-05-07 sally      39  
 2016-05-07 jane       90  
 2016-05-07 jane       90  
 2016-05-07 jane       90  
</code></pre>
<p>I tried running it day by day:<br/>
<code>[df.ix[day].nlargest(3, 'value') for day in df.index.unique()]</code></p>
<p>but I got the same problem (each name is duplicated 3 times) </p>
</div>
<div class="post-text" itemprop="text">
<p>To start, this will get the job done:</p>
<pre><code>df.sort_values('value', ascending=False).groupby(level=0).head(3).sort_index()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>Use <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer"><code>[:n]</code></a> slice of <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sort_values.html" rel="nofollow noreferrer"><code>sort_values()</code></a> result</h1>
<p>Use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sort_values.html" rel="nofollow noreferrer"><code>sort_values()</code></a> in <a href="https://stackoverflow.com/a/24989227/2087463">descending mode</a> and take the <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">first <code>n</code> results in a slice</a>, then use <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.sort_index.html" rel="nofollow noreferrer"><code>sort_index()</code></a> to keep the days <a href="https://en.wikipedia.org/wiki/Monotonic_function" rel="nofollow noreferrer">monotonically increasing</a>. </p>
<pre><code>import pandas as pd
import cStringIO

df  = pd.read_table(cStringIO.StringIO('''
 date   name      value 
 2016-05-01 kelly      20  
 2016-05-05 john       12  
 2016-05-05 sarah      25  
 2016-05-05 george     3  
 2016-05-05 tom        40  
 2016-05-07 kara       24  
 2016-05-07 jane       90  
 2016-05-07 sally      39  
 2016-05-07 sam        28 
'''), sep=' *', index_col=0, engine='python')

print 'Original DataFrame:'
print df
print

df_top3 = df.sort_values('value', ascending=False)[:3].sort_index()
print 'Top 3 Largest value DataFrame:'
print df_top3
print
</code></pre>
<hr/>
<pre><code>Original DataFrame:
              name  value
date                     
2016-05-01   kelly     20
2016-05-05    john     12
2016-05-05   sarah     25
2016-05-05  george      3
2016-05-05     tom     40
2016-05-07    kara     24
2016-05-07    jane     90
2016-05-07   sally     39
2016-05-07     sam     28

Top 3 Largest value DataFrame:
             name  value
date                    
2016-05-05    tom     40
2016-05-07   jane     90
2016-05-07  sally     39
</code></pre>
</div>
<span class="comment-copy">Thanks! so groupby(level=0) + sorting got the results per date just as I needed. I guess nlargest isn't usable in this use case</span>
