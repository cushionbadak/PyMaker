<div class="post-text" itemprop="text">
<p>So my txt file looks like this:</p>
<pre><code>68,125
113,69
65,86
108,149
152,53
78,90
54,160
20,137
107,90
48,12
</code></pre>
<p>I need to read these files and then put it into a list of x and y coordinates tuples.</p>
<p>My output should be </p>
<pre><code>[(68, 125), (113, 69), (65, 86), (108, 149), (152, 53), (78, 90), (54, 160), (20, 137), (107, 90), (48, 12)] 
</code></pre>
<p>I am stuck on how to do this. I need to use basic python only.</p>
<p>Edit:</p>
<p>My attempt so far is this</p>
<pre><code>numbers = []
input_file = open(filename,'r')
numbers_list = input_file.readlines()
input_file.close()
for i in numbers_list:
    numbers += [i]
return numbers
</code></pre>
<p>My output returns as this:</p>
<pre><code>['68,125\n', '113,69\n', '65,86\n', '108,149\n', '152,53\n', '78,90\n', '54,160\n', '20,137\n', '107,90\n', '48,12\n']
</code></pre>
<p>How do I get rid of the '\n' and also how can I put each individual element in the list into a tuple. Thank you. My mistake for not adding in my attempt.</p>
</div>
<div class="post-text" itemprop="text">
<p>Read all the content on the basis of new line from file.
Strip the newlines from each string.
Then convert each string into tuple by splitting on comma.
Below is the code witha text file input having content as you have asked and result as you expected.</p>
<pre><code>import sys
def test(filename):
    f = open(filename)
    lines = f.readlines()
    lines = [item.rstrip("\n") for item in lines]
    newList = list()
    for item in lines:
            item = item.split(",")
            item = tuple(int(items) for items in item)
            newList.append(item)                
    f.close()
    print newList

if __name__ == "__main__":
    test(sys.argv[1])

O/P:
techie@gateway2:myExperiments$ python test.py /export/home/techie/myExperiments/test.txt
[(68, 125), (113, 69), (65, 86), (108, 149), (152, 53), (78, 90), (54, 160), (20, 137), (107, 90), (48, 12)]
</code></pre>
<p>Hope this will help. :-)</p>
</div>
<div class="post-text" itemprop="text">
<p>Here are 3 and 2 line answers:</p>
<pre><code>with open("my_txt_file") as f:
  lines = f.readlines()
result = [tuple(int(s) for s in line.strip().split(",")) for line in lines]
</code></pre>
<p>better, as Ilja Everilä pointed out, "open file as iterator":</p>
<pre><code>with open("my_txt_file") as f:
  result = [tuple(int(s) for s in line.strip().split(",")) for line in f]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As your file contains comma separated integer values, you could use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow"><code>csv</code></a> module to handle it:</p>
<pre><code>import csv

with open(filename, newline='') as f:
    reader = csv.reader(f)
    numbers = [tuple(map(int, row)) for row in reader]
</code></pre>
</div>
<span class="comment-copy">What have you attempted?</span>
<span class="comment-copy">sorry i should have done this</span>
<span class="comment-copy">How can I get rid of the quotes (" ' ") using this method.</span>
<span class="comment-copy">Ok. You want tuple of integers  i guess ??</span>
<span class="comment-copy">yea i do i should have specified that.</span>
<span class="comment-copy">Ok i have edited the answer as per your requirement. Please see the answer. We can do these things in a more pythonic way in just two line. But i thought it will be easier to understand thats why give the simple code .</span>
<span class="comment-copy">Thank you very much.</span>
<span class="comment-copy">You should avoid <code>readlines()</code> almost always, if you have to read lines from a file and process them right away. Just use the open file as an iterator. You create an unnecessary copy of the list for the list comprehension, as you're not mutating the list <i>lines</i> in it. <code>split()[0]</code> is weird, did you mean <code>strip()</code>?</span>
<span class="comment-copy">@IljaEverilä Thank you for suggestions! Edited the answer</span>
