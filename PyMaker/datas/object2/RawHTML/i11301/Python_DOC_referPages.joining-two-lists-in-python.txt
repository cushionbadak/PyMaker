<div class="post-text" itemprop="text">
<p>I have two arrays (A &amp; B).
I would like to calculate the % of users of array A , who are included in array B.
I have tried but I canÂ´t find the solution.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>100.0 * sum((x in B) for x in A) / len(A)
</code></pre>
<p>If <code>B</code> is large, use a set for efficiency:</p>
<pre><code>100.0 * len(set(B).intersection(A)) / len(A)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The most pyhtonic way is like Rogalski above commented. </p>
<p>Python in my opinion is very strong at sets:  <a href="https://docs.python.org/2/library/sets.html" rel="nofollow">https://docs.python.org/2/library/sets.html</a></p>
<p>you can make an intersection in two ways </p>
<p>set(A) &amp; set(B) or set(A).intersection(set(B))</p>
<p>And the formula is like mentioned above (just corrected)</p>
<pre><code>100 * len(set(A) &amp; set(B)) / len(set(A))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You only need to create one set and sum the times an element in a is in the set of the members in b:</p>
<pre><code>st  = set(b)

perc = sum((ele in st for ele in a),0.0) / len(a) * 100
</code></pre>
<p>If you actually have numpy arrays:</p>
<pre><code>import numpy as np

a, b = [1, 3], [1, 4,3]
perc = np.in1d(a, b).sum() / 100.0 / len(a) 
</code></pre>
</div>
<span class="comment-copy"><code>1.0 * len(set(A) &amp; set(B)) / len(set(B))</code></span>
<span class="comment-copy">Are these numpy arrays?</span>
<span class="comment-copy">Your title says "lists" but your question says "arrays". Are they Python lists, <a href="https://docs.python.org/3/library/array.html" rel="nofollow noreferrer">array.array</a>s, Numpy arrays, or something else? Also, do either of these "arrays" contain duplicate items?</span>
<span class="comment-copy">Can you have duplicate users in either array? And if so do they weigh in?</span>
<span class="comment-copy">The question says "% of users of array A" so I guess the denominator should be <code>len(A)</code>.</span>
<span class="comment-copy">good thinking - thx</span>
<span class="comment-copy">.intersection can take an iterable that is not a set so the second call is unnecessary and may as well just be <code>set(A) &amp; set(B)</code></span>
