<div class="post-text" itemprop="text">
<p>I'm looking through python built in library modules, and for example in <code>socket.py</code> I see the line:</p>
<pre><code>import _socket
</code></pre>
<p>I understand that the socket module acts as a wrapper for <code>_socket</code>.  I want to read through some of the source code files within <code>_socket</code> to see how certain tasks are accomplished. </p>
<p>Where can I find <code>_socket</code> or any of these other shared files on a Linux box?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>_socket</code> is a C extension. The <code>socket.py</code> module wraps this with some additional information that doesn't need the speed boost or access to OS-level C APIs.</p>
<p>If you are versed in C, you can read the <a href="https://hg.python.org/cpython/file/3.5/Modules/socketmodule.c" rel="noreferrer"><code>socketmodule.c</code> source code</a>. </p>
<p>There is no one-on-one mapping between the final <code>.so</code> or <code>.dll</code> file and the original source file however. You can grep the <a href="https://hg.python.org/cpython/file/3.5/setup.py" rel="noreferrer"><code>setup.py</code> file</a> for the names instead:</p>
<pre><code>exts.append( Extension('_socket', ['socketmodule.c'],
                       depends = ['socketmodule.h']) )
</code></pre>
<p>Take into account however that some modules are <em>built-in</em>, compiled as part of the <code>python</code> binary; these are all listed in the <a href="https://docs.python.org/3/library/sys.html#sys.builtin_module_names" rel="noreferrer"><code>sys.builtin_module_names</code> tuple</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>__file__</code> attribute:</p>
<pre><code>In [11]: _socket.__file__
Out[11]: '/Users/andy/.miniconda3/lib/python3.5/lib-dynload/_socket.cpython-35m-darwin.so'
</code></pre>
<p>In python packages you can also use the <code>__path__</code> attribute (for the directory):</p>
<pre><code>In [12]: yapf.__file__
Out[12]: '/Users/andy/.miniconda3/lib/python3.5/site-packages/yapf/__init__.py'

In [13]: yapf.__path__
Out[13]: ['/Users/andy/.miniconda3/lib/python3.5/site-packages/yapf']
</code></pre>
</div>
<span class="comment-copy">Great answer. Thanks.</span>
<span class="comment-copy">This doesn't tell you where to find the C source code however.</span>
