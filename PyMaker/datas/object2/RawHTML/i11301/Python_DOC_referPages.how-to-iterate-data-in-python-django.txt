<div class="post-text" itemprop="text">
<p>I am having following data:</p>
<pre><code>   [{
    'mp': [ &lt; MpbMealPlan: MpbMealPlan object &gt; , &lt; MpbMealPlan: MpbMealPlan object &gt; ],
    'user': [ &lt; User: mpowner mpowner &gt; ]
}, {
    'mp': [ &lt; MpbMealPlan: MpbMealPlan object &gt; , &lt; MpbMealPlan: MpbMealPlan object &gt; ],
    'user': [ &lt; User: kvermaOwner Owner &gt; ]
}]
</code></pre>
<p>I want to iterate it in my django template. As shown these are two records with 2 keys in each(mp and user) each record belong to particular user. So I wnat to it such that I get mps of user and detail of user. But when I try to iterate it as explained in below answer or any other answer through out SO I every time get bizarre results. mp can contains further multiple records but I am stuck at first iteration only. I am very new to python , it is my 3rd day working. Any guidance would save my day.</p>
<p>As soon as I apply below:</p>
<pre><code>{% for contributor in contributors.details %}

    {{ contributor }}

{% endfor %}
</code></pre>
<p>and I got this Output which break downs the structure:</p>
<pre><code>  {
    'mp': [ &lt; MpbMealPlan: MpbMealPlan object &gt; , &lt; MpbMealPlan: MpbMealPlan object &gt; ],
    'user': [ &lt; User: mpowner mpowner &gt; ]
} {
    'mp': [ &lt; MpbMealPlan: MpbMealPlan object &gt; , &lt; MpbMealPlan: MpbMealPlan object &gt; ],
    'user': [ &lt; User: kvermaOwner Owner &gt; ]
}
</code></pre>
<p>One query: Is it even possible to get desired results from the data I have. I want to iterate it to get mp and user and then I want to iterate mp to get multiple records within it. 
As whenever I tried iterating up to any level I get all the records so keys "mp and user" are not solving my purpose.</p>
<p>I don't want to waste any one's time here.
I have updated the question. Thanks for answers till now. 
<strong>Update:</strong></p>
<p>Following is the method I used and got desired results:</p>
<pre><code> {% for contributor in contributors.details %}

    {% for user in contributor.user %}
        {{ user }}
        &lt;br&gt;

        {% for mp in contributor.mp %}

            {{ mp.mp_name }}
            &lt;br&gt;
        {% endfor %}


    {% endfor %}

{% endfor %}
</code></pre>
<p>Results: </p>
<pre><code>user:mpowner mpowner
mp:Fresh &amp; Healthy
mp:evening snacks
user:kvermaOwner Owner
mp:Fresh &amp; Healthy
mp:Energizing 
</code></pre>
<p>At last I got desired output with <strong>C14L</strong>'s help (Amazing guidance). Thanks to "ajabdelaziz" and others too.</p>
</div>
<div class="post-text" itemprop="text">
<p>For Python3, calling <code>.items()</code> gives you the items.</p>
<pre><code>for key, item in data.items():
</code></pre>
<p>For Python2 use <code>iteritems()</code>:</p>
<pre><code>for k, v in knights.iteritems():
</code></pre>
<p>In Django template:</p>
<pre><code>&lt;div&gt;
  {% for k,v in test.items %}
  &lt;p&gt;{{ k }} --&gt; {{ v }}&lt;/p&gt;
  {% endfor %}
&lt;/div&gt;
</code></pre>
<p>Docs: <a href="https://docs.python.org/3/tutorial/datastructures.html#looping-techniques" rel="nofollow">https://docs.python.org/3/tutorial/datastructures.html#looping-techniques</a></p>
<p><strong>Edit:</strong></p>
<p>To add to the answer, looking at your specific object</p>
<pre><code>[('details', [{
    'mp': u '[{"fields": {"status": 
</code></pre>
<p>look at this part: 'mp': <strong>u '</strong>[{"fields": {"st</p>
<p>That is <em>not</em> a <code>list()</code>, it is a string: <code>u''</code></p>
<p>When you loop a string, you get the individual characters the string contains, one by one. Hence the "strange" result.</p>
<p><strong>Edit 2:</strong></p>
<p>Both <code>contributor.mp</code> and <code>contributor.user</code> contain lists</p>
<pre><code>{% for contributor in contributors.details %}
    {{ contributor.mp }}
    {{ contributor.user }}
{% endfor %}
</code></pre>
<p>so, for example to print all usernames, you can do</p>
<pre><code>{% for contributor in contributors.details %}
    {% for user in contributor.user %}
        {{ user.username }}
    {% endfor %}
{% endfor %}
</code></pre>
<p>To print the list of <code>mp</code> items, you can do</p>
<pre><code>{% for contributor in contributors.details %}
    {% for mp in contributor.mp %}
        {{ mp }}
    {% endfor %}
{% endfor %}
</code></pre>
<p>But each <code>mp</code> object has probably a number of attributes. You need to look up what your <code>MpbMealPlan</code> class definition looks like.</p>
</div>
<div class="post-text" itemprop="text">
<p>From what I'm seeing based on your error, is that you're trying to iterate over mp which has a value with dictionaries and lists in them.  Because of the different data types, you cannot just use <code>.items()</code> only.  You'll need to use <code>.items()</code> to get the mp's value in key,value.  then you'll have to deal with iterating over the list then the key, values again.  C14L's answer shows how to do that in templates just don't forget about your datatypes!</p>
<p>i.e - </p>
<pre><code>   &lt;div&gt;
    {% for k,v in test.items %}
        {% for item in v%}
            {% item %}
        {% endfor %}    
    {% endfor %}
   &lt;/div&gt;
</code></pre>
<p>item would be the list that you can then iterate over to get additional key value pairs.  </p>
<p>Another possible solution is to do most of this in a template tag filter.  and then just apply the filter onto the selected variable you want it to filter out.</p>
</div>
<span class="comment-copy">Show us what you've tried so far</span>
<span class="comment-copy">I think duplicate this question <a href="http://stackoverflow.com/questions/8018973/how-to-iterate-through-dictionary-in-a-dictionary-in-django-template" title="how to iterate through dictionary in a dictionary in django template">stackoverflow.com/questions/8018973/â€¦</a></span>
<span class="comment-copy">@se0kjun I have tried that answer but no help. Still get wrong results. If someone like I can paste answers I  am getting after each for loop I applied.</span>
<span class="comment-copy">show what code you have tried in your template, don't just say "it's not working", we don't know what you've tried to do</span>
<span class="comment-copy">I want to do this is django template. Will it work in template too?</span>
<span class="comment-copy">Yes, that works too, I add it to the answer</span>
<span class="comment-copy">Thanks again. I think the 'u' before 'mp' was because i was using serializers.serialize("json",model.getUserById(contributor_id)) to get data for 'mp'. I have updated my question. You are realy helping thanks!</span>
<span class="comment-copy">You are almost there now. Just need to look up what structure you <code>MpbMealPlan</code> objects have. The <code>User</code> objects may be a standard Django <code>User</code>, so there is <code>username</code>, <code>first_name</code> etc on it. I'll add to my answer.</span>
<span class="comment-copy">I know their structure I will get them once start getting single object at a time. I want to fetch mps and user out of one record first and then from second record seems like its not even possible with my structure, Thanks a ton btw, saved my many hours.</span>
