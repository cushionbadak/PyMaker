<div class="post-text" itemprop="text">
<p>I have a dict that looks like </p>
<pre><code>{'2016-05-30':{
    'go':((1, 2, 3, 4),), 
    'stop':((5, 6, 7, 8),)}, 
 '2016-05-31': {
    'go':((11, 12, 13, 14),), 
    'stop':((15, 16, 17, 18),)}}
</code></pre>
<p>and I have a list of state: <code>['state1', 'state2', 'state3', 'state4']</code></p>
<p>I'm trying to get an output that looks like <code>(state, date, value)</code></p>
<p>I can do it by running bunch of <code>for</code> loops:</p>
<pre><code>some_list=[]
state = ['state1', 'state2', 'state3', 'state4']
data = {'2016-05-30':{
    'go':((1, 2, 3, 4),), 
    'stop':((5, 6, 7, 8),)}, 
 '2016-05-31': {
    'go':((11, 12, 13, 14),), 
    'stop':((15, 16, 17, 18),)}}
for d in data:
    for vals in data.values():
        for val in vals.get('go'):
            if val:
                for k,v in zip(state, val):
                    some_list.append((k, d, v))
</code></pre>
<p>It's very brute force, and I'm wondering if there's a more clever way/pythonic way to do it</p>
<p>EDIT: okay, using actually values now instead of fake values (for most part). Should be clearer. Code should be able to be copypasta-ed</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is what I think that you want, using list comprehensions,</p>
<pre><code>some_list = [[s, d, v] for d in data for vals in data[d]['go'] for s, v in zip(state, vals)]

# [['state1', '2016-05-31', 11],
#  ['state2', '2016-05-31', 12],
#  ['state3', '2016-05-31', 13],
#  ['state4', '2016-05-31', 14],
#  ['state1', '2016-05-30', 1],
#  ['state2', '2016-05-30', 2],
#  ['state3', '2016-05-30', 3],
#  ['state4', '2016-05-30', 4]]
</code></pre>
<p>If the field 'go' is not always present, you can use</p>
<pre><code>[[s, d, v] for d in data for f in data[d] for vals in data[d][f] for s, v in zip(state, vals) if f == 'go']
</code></pre>
</div>
<span class="comment-copy">If you want pythonic, list comprehensions: <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">docs.python.org/3/tutorial/â€¦</a></span>
<span class="comment-copy">@leekaiinthesky I might be able to do list comprehension on the last part of the code (append), but I still have trouble getting rid of other for loops</span>
<span class="comment-copy">It would be nice if you included valid Python code in question. Makes working with it easier.</span>
<span class="comment-copy">@JonSurrell I can add my source dict. Is that what you're looking for? Otherwise this code is already working (except that .get statement)</span>
<span class="comment-copy">@JChao Yes, exactly that. In general try to include code that can be copy/pasted. Save us the time of having to recreate your data structure.</span>
<span class="comment-copy">@JChao is this not what you are after?</span>
<span class="comment-copy">for some reason it's not running on my code. I'm gonna tweak around and see what i can get, but I do believe this is the answer. Will mark as answer. thanks.</span>
