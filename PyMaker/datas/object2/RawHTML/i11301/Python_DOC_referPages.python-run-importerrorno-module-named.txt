<div class="post-text" itemprop="text">
<p><a href="https://i.stack.imgur.com/GqWSt.png" rel="nofollow noreferrer"><img alt="This is my project structure" src="https://i.stack.imgur.com/GqWSt.png"/></a></p>
<p>This is my project structure. I use virtualenv in my project but when I run it ,it has an ImportError.I use <strong>Mac</strong>.
<a href="https://i.stack.imgur.com/Quzyg.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/Quzyg.png"/></a>
<a href="https://i.stack.imgur.com/1O2Ia.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/1O2Ia.png"/></a></p>
<blockquote>
<p>But I can run it successfully use Pycharm</p>
</blockquote>
<p><a href="https://i.stack.imgur.com/hQAMS.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/hQAMS.png"/></a></p>
<p>So how to run it successfully by Terminal.Because I want to run it in a <strong>Ubuntu</strong> server with <strong>cron</strong></p>
<hr/>
<p>Thanks you for your answers.Here I show my solution.I modify my  <strong>handler.py</strong> I think it may be related to <a href="https://docs.python.org/3/tutorial/modules.html#the-module-search-path" rel="nofollow noreferrer">The Module Search Path</a>.
So I add the project path to the <strong>PYTHONPATH</strong>.</p>
<pre><code>import os

project_home = os.path.realpath(__file__)
project_home = os.path.split(project_home)[0]
import sys

sys.path.append(os.path.split(project_home)[0])
import shutil
from modules import db, json_parse, config_out
from init_log import init as initlog

initlog()

if __name__ == '__main__':
    try:
        columns = json_parse.json_parse()
        if not columns:
            sys.exit()
        is_table_has_exist = db.check_tables_exist(columns=columns)
        if is_table_has_exist:
            db.check_columns(columns=columns)
        is_ok, config_path = config_out.output(columns)
        if is_ok:
            file_name = os.path.split(config_path)[1]
            shutil.copy(config_path, os.path.join("/app/statics_log/config", file_name))
    except Exception, e:
        print e
</code></pre>
<p>And I run with crontab by this.</p>
<pre><code>cd to/my/py_file/path &amp;&amp; /project_path/.env/bin/python /path/to/py_file
</code></pre>
<p>example:</p>
<pre><code>13 8 1 * * cd bulu-statics/create_config/ &amp;&amp; /home/buka/bulu-statics/.env/bin/python /home/buka/bulu-statics/create_config/handler.py &gt;&gt; /app/statics_log/config/create_config.log
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>PyCharm automatically adds project directories marked as containing sources to the <code>PYTHONPATH</code> environment variable, whihc is why it works from within pycharm. On the terminal use</p>
<pre><code>PYTHONPATH=${PWD}/..:${PYTHONPATH} python handler.py
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use explicit relative imports:</p>
<pre><code>from .modules import db, json_parse, config_out
</code></pre>
<p>The proper way to do this is to turn your project into a proper Python package by adding a <code>setup.py</code> file and then installing it with <code>pip install -e .</code></p>
</div>
<div class="post-text" itemprop="text">
<p>probably because PyCharm added your project folder to the <a href="https://stackoverflow.com/questions/17198319/how-to-configure-custom-pythonpath-with-vm-and-pycharm"><code>PythonPath</code></a>, so you can run you app inside PyCharm.</p>
<p>However, when you try to run it from command line, python interpreter cannot find these libs in Python python, so what you need to do is to add your python virtualenv the python python. </p>
<p>there are different ways to adding python path, but I would suggest you to follow: </p>
<ol>
<li>prepare a <a href="https://stackoverflow.com/questions/1471994/what-is-setup-py"><code>setup.py</code></a> you'll need to specify <code>packages</code> and <code>install_requires</code>. </li>
<li>install your app locally in <code>development</code> mode via <code>pip install -e /path/to/your-package</code>  -&gt; it'll create a egg-link in your python virtualenv, you can run your app in your local terminal from now on;</li>
<li>for packing and releasing, you may want to build an artifact by following <a href="https://docs.python.org/2.7/distutils/builtdist.html" rel="nofollow noreferrer">https://docs.python.org/2.7/distutils/builtdist.html</a>
you may <code>pip install</code> or <code>easy_install</code> the artifact on your other machines. you also can release your package to <a href="https://pypi.python.org/pypi" rel="nofollow noreferrer">PyPi</a> if you want. </li>
</ol>
</div>
