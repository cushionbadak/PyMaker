<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/163542/python-how-do-i-pass-a-string-into-subprocess-popen-using-the-stdin-argument">Python - How do I pass a string into subprocess.Popen (using the stdin argument)?</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>How can I implement something like </p>
<pre><code>$ echo "hello" | my_app
</code></pre>
<p>with usage of Python's subprocess? </p>
<p>subprocess.Popen() expects a pipe or a file handle for STDIN. But I want to provide STDIN for the called program via a variable. So something like</p>
<pre><code>myinput = "hello"
subprocess.Popen("an_external_programm", stdin=myinput)
….
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I was able to solve my problem by using <code>Popen.communicate()</code></p>
<p>So some kind of pseudo code:</p>
<pre><code>proc = subprocess.Popen(…)
proc.communicate(input="my_input_via_stdin")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In a python script named myscript.py</p>
<pre><code>import sys

for line in sys.stdin:
     print(line)
</code></pre>
<p>in unix</p>
<p>echo 'hello' | myscript.py</p>
</div>
<span class="comment-copy">Have a look at <code>Popen.communicate()</code>. Link: <a href="https://docs.python.org/3/library/subprocess.html?highlight=subprocess#subprocess.Popen.communicate" rel="nofollow noreferrer">docs.python.org/3/library/…</a></span>
<span class="comment-copy">Can you be clear about your use case? First off you look like you're piping "hello" to your script, in the second example it's a variable in your script.</span>
<span class="comment-copy">I want to call an external tool from inside my Python script in the kind of the shell example but the content -- the "hello" from shell sxample, is coming from a Python variable.</span>
<span class="comment-copy">Actually Popen.communicate() did the trick</span>
<span class="comment-copy">the ellipsis character (...) kind of masks the solution in this answer :-)</span>
