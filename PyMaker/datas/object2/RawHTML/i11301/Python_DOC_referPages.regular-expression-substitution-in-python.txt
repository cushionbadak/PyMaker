<div class="post-text" itemprop="text">
<p>I have a string</p>
<p><code>line = "haha (as jfeoiwf) avsrv arv (as qwefo) afneoifew"</code></p>
<p>From this I want to remove all instances of <code>"(as...)"</code> using some regular expression. I want the output to look like</p>
<p><code>line = "haha avsrv arv afneoifew"</code></p>
<p>I tried:</p>
<pre><code>line = re.sub(r'\(+as .*\)','',line)
</code></pre>
<p>But this yields:</p>
<p><code>line = "haha  afneoifew"</code></p>
</div>
<div class="post-text" itemprop="text">
<p>To get <a href="https://docs.python.org/3/howto/regex.html#greedy-versus-non-greedy" rel="nofollow">non-greedy behaviour</a>, you have to use <code>*?</code> instead of <code>*</code>, ie <code>re.sub(r'\(+as .*?\) ','',line)</code>. To get the desired string, you also have to add a space, ie <code>re.sub(r'\(+as .*?\) ','',line)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that your regexp matches this whole group : <code>(as jfeoiwf) avsrv arv (as qwefo)</code>, hence your result.</p>
<p>You can use :</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; line = "haha (as jfeoiwf) avsrv arv (as qwefo) afneoifew"
&gt;&gt;&gt; line = re.sub(r'\(+as [a-zA-Z]*\)','',line)
&gt;&gt;&gt; line
'haha  avsrv arv  afneoifew'
</code></pre>
<p>Hope it'll be helpful.</p>
</div>
<div class="post-text" itemprop="text">
<p>You were very close. You need to use lazy quantifier '?' after .*. In default it will try to capture biggest group it possibly can. With lazy quantifier it'll actually try to match smallest possible groups.</p>
<pre><code>line = re.sub(r'\(+as .*?\) ','',line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try:</p>
<pre><code>re.sub(u".\(as \w+\).", ' ',line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try:</p>
<pre><code>re.sub(r'\(as[^\)]*\)', '', line)
</code></pre>
</div>
