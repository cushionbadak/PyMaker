<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/4800419/finding-max-value-in-the-second-column-of-a-nested-list">Finding max value in the second column of a nested list?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I am writing a Python program that produces a list similar to the code block below. The user inputs ten numbers, which are stored in a list. It counts the number of distinct objects. The first number in each ( ) is the number the user entered, and the second value is how many times it was entered. What I need to do is essentially print out to the user "The most common number is x which was entered y times".</p>
<pre><code>organizedList = [(1.0, 5), (5.0, 3)]
print max(organizedList)
</code></pre>
<p>I tried a normal max command, but it chooses the second value as the max even thought it was chosen less often. Thank you for your help.</p>
</div>
<div class="post-text" itemprop="text">
<p>As the other answers have already pointed out, you can tell the <code>max</code> function to only look at the second value by setting the <code>key</code> parameter. To output the result you can do this:</p>
<pre><code>x,y = max(organizedList, key=lambda x: x[1])

print "The most common number is",x,"which was entered",y,"times."
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <code>key</code> option to <code>max</code>, which is a function that tells <code>max</code> what value to base the output on.</p>
<pre><code>organizedList = [(1.0, 5), (5.0, 3)]
print max(organizedList, key=lambda x: x[1])
</code></pre>
<p>This will use the 2nd element to determine the maximum value.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow"><code>max</code></a> has a key argument which you can use to specify on which tuple element the max should be found from. </p>
<pre><code>&gt;&gt;&gt; max(organizedList, key=lambda x: x[1])
(1.0, 5)
</code></pre>
<p>Alternatively if you aren't a fan of anonymous functions you could use <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow"><code>operator.itemgetter</code></a> to use the second element similarly with </p>
<pre><code>&gt;&gt;&gt; max(organizedList, key=itemgetter(1))
(1.0, 5)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Normaly a list of tuples is sorted by the first element, but you can change  the way to get the max element by the key argument</p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; organizedList = [(1.0, 5), (5.0, 3)]
&gt;&gt;&gt; max(organizedList, key=itemgetter(1))
(1.0, 5)
</code></pre>
</div>
<span class="comment-copy">the max function will first look at the first number, returning the max from there. You could simply reverse the order in your array.</span>
<span class="comment-copy">@quemeraisc that would work for this particular input, but is in no way general.</span>
<span class="comment-copy">This worked perfectly. Thank you!!</span>
<span class="comment-copy">note: You need parenthesis to make this work in python 3: print (â€¦)</span>
<span class="comment-copy">@richard But since the OP was not using parenthesis, we can safely assume they were using Python 2.</span>
<span class="comment-copy">Yes, the note if for Ron, in-case he comes here, looking for an answer.</span>
