<div class="post-text" itemprop="text">
<p>I have this function and I need to build an interface for it.
It's a function that is searching some data in the log file.
This data needs to printed into Label.
1. Data (int ) needs to be user input.
2. Value from user input will be searched in the log file
3. Results from the log needs to printed on label. </p>
<p>Thank you for support.
I'm  new here! So hello to everyone.</p>
<p>Namaste!
<a href="http://i.stack.imgur.com/5saAb.jpg" rel="nofollow">This is the progress-</a>
Please see below the code:</p>
<pre><code>    def searcher():
        imei = input("Insert imei: ")
        log = reversed(list(open("C:/test.log")))

        if len(imei) == 15:
            for line in log:
               if imei in line:
                    if ("[S/W Upgrade]") in line:
                        print (line,"S/W upgrade found in LOG- OK to close the JOB")
                    elif ("SVC Connection") in line:
                        print(" SVC connexion only FOUND! Please connect device again for S/W Upgrade!")
                    else:
                        print(line,"FAIL")
                    break
            else:
                print("IMEI not found in LOG FILE - please connect device to FENRIR for S/W upgrade")
        else:
            print("Wrong IMEI number- please check your input!")

        return()

    searcher()


Please see below my progress:

import tkinter as tk


class ImeiApp(tk.Tk):
    def __init__(self):
        tk.Tk.__init__(self)
        self.entry = tk.Entry(self)
        self.button = tk.Button(self, text="Check IMEI", command=self.on_button)
        self.button.pack()
        self.entry.pack()

    def on_button(self):
        self.button = tk.Button(self,command=searcher)
def searcher():
    global line
    global searcher
    imei = tk.Entry
    log = reversed(list(open('C:/test.log','r')))
    if len(imei) == 15:
        for line in log:
           if imei in line:
                if ("[S/W Upgrade]") in line:
                    print (line,"S/W upgrade found in LOG- OK to close the JOB")
                elif ("SVC Connection") in line:
                    print(" SVC connexion only FOUND! Please connect device again for S/W Upgrade!")
                else:
                    print(line,"FAIL")
                break
        else:
            print("IMEI not found in LOG FILE - please connect device to FENRIR for S/W upgrade")
    else:
        print("Wrong IMEI number- please check your input!")

    return()

app = ImeiApp()
app.mainloop()
self.button.pack()
self.entry.pack()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your main problem seems to be that your button does not execute your <code>searcher</code> function as you expected.</p>
<p>The code for your button looks like this:</p>
<pre><code>self.button = tk.Button(self, text="Check IMEI", command=self.on_button)
</code></pre>
<p>While the function it's supposed to execute is this:</p>
<pre><code>def on_button(self):
    self.button = tk.Button(self.root,command=searcher)
</code></pre>
<p>That means that on pressing the button, you create a new button with a different command (<code>searcher</code>) and assign it to your original button. This happens when clicking on your button for the first time; clicking on it for a second time, the "new" button will look for the <code>searcher</code> function, which does not exist - it is outside of the scope of the class.</p>
<p>My solution is to</p>
<ul>
<li>include the <code>searcher</code> function in your <code>ImeiApp</code> class</li>
<li>drop the on_button function altogether</li>
<li>assign <code>self.searcher</code> as the command for your button</li>
</ul>
<p>Here we go:</p>
<pre><code>class ImeiApp(tk.Tk):

    def __init__(self):
        self.root = tk.Tk()
        self.entry = tk.Entry(self.root)
        self.button = tk.Button(
            self.root, text="Check IMEI", command=self.on_button)
        self.button.pack()
        self.entry.pack()
        self.root.mainloop()

    def on_button(self):
        self.button = tk.Button(self.root, command=searcher)

    def searcher(self):
        ...
</code></pre>
<p>Notice that I made some changes to your class' <code>__init__</code> function. Instead of using your class itself as the main window, I generated a main window called <code>root</code> and put the button and the entry widget in there. </p>
<p>Concerning your code in general: As <a href="https://stackoverflow.com/users/856070/jcfollower">jcfollower</a> pointed out in the comments, you should check out <a href="http://effbot.org/tkinterbook/" rel="nofollow">effbot's introduction to tkinter</a> and maybe the <a href="https://docs.python.org/3/library/tkinter.html" rel="nofollow">Python docs on Tkinter</a> for more information on how tkinter is used.</p>
</div>
<span class="comment-copy">Stackoverflow isn't a code writing service. Is there a specific problem you're having? Have you worked through a tkinter tutorial?</span>
<span class="comment-copy">Please be more specific in your question titles, as well. "Python 3 tkinter" unfortunately doesn't tell the community what you need or how to best answer your question.</span>
<span class="comment-copy">I just added my progress. I have the button - and the entry window - but i miss the label and the button action ( function is not triggered when button is pressed )</span>
<span class="comment-copy">I don't think your line <code>imei = tk.Entry</code> does what you were hoping for.  I think you need something like <code>imei = self.entry.get()</code>.  See <a href="http://effbot.org/tkinterbook/entry.htm" rel="nofollow noreferrer">effbot.org/tkinterbook/entry.htm</a></span>
<span class="comment-copy">thanks jcfollower :) I will try more and post back! Cheers</span>
