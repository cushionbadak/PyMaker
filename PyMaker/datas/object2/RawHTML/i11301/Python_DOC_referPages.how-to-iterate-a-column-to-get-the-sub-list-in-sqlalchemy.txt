<div class="post-text" itemprop="text">
<p>I would like to acquire the sub list from a table like this using sqlalchemy:  </p>
<pre><code>Column1    Column2
   a          1
   a          2
   b          1
   b          2
</code></pre>
<p>and firstly get </p>
<pre><code>Column1    Column2
   a          1
   a          2
</code></pre>
<p>and secondly get</p>
<pre><code>Column1    Column2
   b          1
   b          2
</code></pre>
<p>Can I realize it by executing the query language once? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it with a single query, but you need to perform the grouping in Python. To do that you could use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><code>itertools.groupby</code></a> to process the query results which you would order by (<code>column1</code>, <code>column2</code>). Here is an example:</p>
<pre><code>from itertools import groupby
from sqlalchemy import create_engine, Column, Integer, String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

Base = declarative_base()
class Stuff(Base):
    __tablename__ = 'stuff'
    id = Column(Integer, primary_key=True)
    column1 = Column(String(10))
    column2 = Column(String(10))

    def __repr__(self):
        return '({}, {})'.format(self.column1, self.column2)

db_url = 'sqlite:////tmp/test.db'
engine = create_engine(db_url)
Base.metadata.bind = engine
session = sessionmaker(bind=engine)()

for k, g in groupby(session.query(Stuff).order_by(Stuff.column1, Stuff.column2),
                    key=lambda stuff: stuff.column1):
    print('{}: {}'.format(k, ','.join(stuff.column2 for stuff in g)))
</code></pre>
<p>If your table contains this data:</p>
<pre>
Column1    Column2
   a          1
   a          2
   b          1
   b          2
   a          3
</pre>
<p>the output would be:</p>
<pre>
a: 1,2,3
b: 1,2
</pre>
<p>To process the data replace the <code>print()</code> in the for loop with your processing code.</p>
</div>
