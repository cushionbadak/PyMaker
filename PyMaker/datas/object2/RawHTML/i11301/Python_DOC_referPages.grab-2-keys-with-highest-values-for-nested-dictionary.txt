<div class="post-text" itemprop="text">
<p>I have a dictionary which looks like this:</p>
<pre><code>bigdict = { 

'a': {'foo':2, 'bar':3, 'baz':7, 'qux':1},
'b': {'foo':6, 'bar':4, 'baz':3, 'qux':0},
'c': {'foo':4, 'bar':5, 'baz':1, 'qux':6}
}
</code></pre>
<p>And for each dictionary, I want to be able to grab the 2 keys with the highest values and put the results in a new dictionary.</p>
<p>e.g. </p>
<pre><code>newbigdict = {
 a: {'baz':7, 'bar':3},
 b: {'foo': 6, 'bar':4},
 c: {'qux':6, 'bar':5}
}
</code></pre>
<p>Any ideas? I've been stuck on this for a while. I use Python 3.</p>
</div>
<div class="post-text" itemprop="text">
<p>This can be solved easily using a <a href="https://www.python.org/dev/peps/pep-0274/" rel="nofollow noreferrer">dictionary comprehension.</a> See this post for more explanation about a <a href="https://stackoverflow.com/questions/14507591/python-dictionary-comprehension">Python Dictionary Comprehension</a> </p>
<pre><code>&gt;&gt;&gt; def findtoptwo(d):
...     toptwo = sorted(d.values())[-2:]
...     return {k:v for k,v in d.items() if v in toptwo}
... 
&gt;&gt;&gt; newdict = {k:findtoptwo(v) for k,v in bigdict.items()}
&gt;&gt;&gt; newdict
{'a': {'bar': 3, 'baz': 7}, 'c': {'qux': 6, 'bar': 5}, 'b': {'foo': 6, 'bar': 4}}
</code></pre>
<p>The logic here is simple, For each key-value pair in the dictionary we check if the value is present in the top two values. For this we sort the dictionary values and slice the last two values. Read more about <a href="https://stackoverflow.com/questions/509211/explain-pythons-slice-notation">slices in python here</a> and the builtin <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>sorted</code> here</a>. </p>
</div>
<div class="post-text" itemprop="text">
<p>it can be done pretty easily using <a href="http://pandas.pydata.org/pandas-docs/stable/10min.html" rel="nofollow">pandas</a> module:</p>
<pre><code>In [97]: bigdict = {
   ....: 'a': {'foo':2, 'bar':3, 'baz':7, 'qux':1},
   ....: 'b': {'foo':6, 'bar':4, 'baz':3, 'qux':0},
   ....: 'c': {'foo':4, 'bar':5, 'baz':1, 'qux':6},
   ....: }

In [98]: df = pd.DataFrame.from_dict(bigdict)

In [99]: df
Out[99]:
     a  b  c
bar  3  4  5
baz  7  3  1
foo  2  6  4
qux  1  0  6

In [126]: df.apply(lambda x: x.nlargest(2).to_dict()).to_dict()
Out[126]:
{'a': {'bar': 3, 'baz': 7},
 'b': {'bar': 4, 'foo': 6},
 'c': {'bar': 5, 'qux': 6}}
</code></pre>
<p><strong>one-liner:</strong></p>
<pre><code>In [129]: (pd.DataFrame.from_dict(bigdict)
   .....:    .apply(lambda x: x.nlargest(2).to_dict())
   .....:    .to_dict()
   .....: )
Out[129]:
{'a': {'bar': 3, 'baz': 7},
 'b': {'bar': 4, 'foo': 6},
 'c': {'bar': 5, 'qux': 6}}
</code></pre>
</div>
<span class="comment-copy">Related <a href="http://stackoverflow.com/q/268272">Getting key with maximum value in dictionary?</a> and <a href="http://stackoverflow.com/q/7197315">5 maximum values in a python dictionary</a></span>
<span class="comment-copy">Apply solution of question linked by @BhargavRao. Remove key from dict. Apply again.</span>
<span class="comment-copy">@spectras Or sort the dict and take the top two. It's simpler and works better in case the OP needs to save the original dict.</span>
