<div class="post-text" itemprop="text">
<p>I am attempting to learn Python from scratch. I had a look at <a href="https://wiki.python.org/moin/BeginnersGuide/NonProgrammers" rel="nofollow">the official Python Wiki</a> and from there, came across the <a href="http://pythonturtle.org/" rel="nofollow">PythonTurtle</a> tool. It does seem to be very much obsolete by now. However, for learning purposes, I wish to use exactly the version of Python that comes with this tool, which happens to be 2.6.2c1. Now, I also had a look at <a href="https://www.python.org/doc/versions/" rel="nofollow">the different versions of Python</a> for which official documentation seems to be available online.</p>
<p>My question is, on that page, versions 2.6.1 and 2.6.2 are given but not 2.6.2c1 . Going by the build date of this version as displayed inside the PythonTurtle tool, it appears that this is a pre-release build of 2.6.2. Where can I find the official documentation for the same?</p>
</div>
<div class="post-text" itemprop="text">
<p>You won't find separate docs for Python 2.6.2c1, because it was a <em>release candidate</em> for 2.6.2 --- what the Python core developers were testing during the pre-release period of 2.6.2.  Aside from any bugs found and fixed during that period, it <em>was</em> 2.6.2.</p>
<p>Note, however, that "bugs found and fixed" <em>could</em> include <strong>documentation bugs</strong>... which would exactly undermine whatever you're trying to do.  Essentially, you're saying, "I want Python version 2.6.2, only with more bugs and less-correct docs".</p>
<p>2.6.2 was a bug-fix-only release anyway, so just use the <a href="https://docs.python.org/2.6/" rel="nofollow">online Python 2.6 docs</a>.  They include all documentation updates through the end of the 2.6 releases (2.6.9) --- again, including fixes for any documentation bugs that were discovered.</p>
<p>If you're looking for the 2.6.2 source, which includes documentation, it's at the Python FTP site:</p>
<p><a href="https://www.python.org/ftp/python/2.6.2/" rel="nofollow">https://www.python.org/ftp/python/2.6.2/</a></p>
<p>And again, note that there is a Windows compressed help file available in that directory --- <em>one</em> file, covering both 2.6.2 and (to some, possibly inaccurate extent) 2.6.2c1.</p>
<p>Even c1's <code>README</code> file starts out:</p>
<blockquote>
<p>This is Python version 2.6.2</p>
</blockquote>
<p>Not 2.6.2c1... just 2.6.2.</p>
<p><strong>Don't use the release candidate!</strong>  Use the <em>actual</em> release, which came out only 7 days later.  (I would give the same advice to the "PythonTurtle" author, if I could go back in time.)</p>
</div>
<span class="comment-copy">Find a new tutorial. The "correct" way to do things changes sometimes (especially Python 2.x vs Python 3.x). You don't want to intentionally learn outdated techniques.</span>
<span class="comment-copy">The documentation for 2.6.2rc1 should be the same as the documentation for 2.6.2.  There shouldn't be meaningful changes between a release candidate and the real release.  However, it's unclear why you'd want to be focusing on that particular version anyway.  What you want is to learn things that will help you in the future.  So if there is anything about that particular version that is weird, learning it will only hinder you later in using more up-to-date versions.  It's especially unlikely to be useful given that it's not a real release.</span>
<span class="comment-copy"><i>Many</i> versions of Python include the <a href="https://docs.python.org/3/library/turtle.html" rel="nofollow noreferrer"><code>turtle</code> module</a>, including all versions of Python 3...  It's only "very much obsolete" if you're deliberately using an obsolete version.  Why are you doing that?  Is there something specific you expect to gain by studying <i>that</i> release candidate from seven years ago?</span>
<span class="comment-copy">Also, the official <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">Python Tutorial</a> is an excellent introduction to Python, accompanied by frequent reference to the official <a href="https://docs.python.org/3/" rel="nofollow noreferrer">Python docs</a>.  Stack Overflow's <a href="https://stackoverflow.com/tags/python/info"><code>[python]</code> tag wiki</a> also has plenty of links to check out (possibly <i>too</i> many for a beginner).</span>
<span class="comment-copy">@KevinJ.Chase I was not talking about the turtle module but about this third-party tool called PythonTurtle. That tool is obsolete, not the turtle module itself. I found this learning tool very easy for beginners to demonstrate something graphically and hence I wanted to know what can I do in order to go beyond what the tool teaches. As far as the official Python tutorial is concerned, I could not find one for version 2.6.2c1.</span>
