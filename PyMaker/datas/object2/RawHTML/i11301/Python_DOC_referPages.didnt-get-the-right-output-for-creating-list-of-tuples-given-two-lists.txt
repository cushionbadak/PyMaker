<div class="post-text" itemprop="text">
<p>I am following <a href="https://teamtreehouse.com/library/python-collections/tuples/combo" rel="nofollow noreferrer">TreeHouse</a> tuple tutorials for Python 3 and I got this error for the following code:
<a href="https://i.stack.imgur.com/b8irI.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/b8irI.png"/></a></p>
<pre><code>def combo(iter1, iter2):
    ltup = []
    for a in iter1:
        for b in iter2:
            ltup.append(tuple([a, b]))
    return ltup
</code></pre>
<p><a href="https://i.stack.imgur.com/MF1Fm.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/MF1Fm.png"/></a></p>
<p>How should I fix it and why is my solution wrong?</p>
<p>I have used <code>zip</code> and it didn't pass the challenge:
<a href="https://i.stack.imgur.com/SIOfQ.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/SIOfQ.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You do not need nested cycles. Try this code:</p>
<pre><code>def combo(iter1, iter2):
    ltup = []
    for a,b in zip(iter1, iter2):
            ltup.append((a, b))
    return ltup

print combo([1,2,3],[3,2,1])
</code></pre>
<p>Or another the shortest variant, I guess: 
<code>zip(iter1, iter2)</code></p>
<blockquote>
<p>[(1, 3), (2, 2), (3, 1)]</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Youcan use <code>zip</code> to get the answer.</p>
<pre><code>a = [1,2,3]
b = [4,5,6]
ans = zip(a,b)
[(1, 4), (2, 5), (3, 6)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You just need to <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow"><code>zip</code></a> those iterables together:</p>
<blockquote>
<p>This function returns a <code>list</code> of tuples, where the <code>i-th tuple</code> contains the <code>i-th</code> element from each of the argument sequences or iterables. The returned list is truncated in length to the length of the shortest argument sequence.</p>
</blockquote>
<p>Since, your iterables has same length, this should work as expected for you.</p>
<pre><code>def combo(iter1, iter2):
    return zip(iter1, iter2)
</code></pre>
<hr/>
<p><strong>UPDATE: for python 3</strong></p>
<p>Just for completeness sake, It is not mentioned in the question which python version is being used. if you are using python3, then <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a> will return an iterable, so you need to convert it to list explicitly:</p>
<pre><code>def combo(iter1, iter2):
    return list(zip(iter1, iter2))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following works too (the other answers were missing to convert it to a list):</p>
<pre><code>def combo(iter1, iter2):
    return list(zip(iter1, iter2))
</code></pre>
</div>
<span class="comment-copy">Use <code>list(zip(seq1, seq2))</code> - in Python 3.x <code>zip</code> is lazy and it returns generator instead of list. Online checker may run an return type assertion.</span>
<span class="comment-copy">well, your answer is correct but I have hard time following it! Can you please provide more explanation?</span>
<span class="comment-copy">When you use nested cycles, you make tuples for all pairs of your lists. I.e., for my lists you will get: [(1, 3), (1, 2), (1, 1), (2, 3), (2, 2), (2, 1), (3, 3), (3, 2), (3, 1)]. However, you need just combines the first elements, then the seconds etc. About <code>zip</code> read here: <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow noreferrer">docs.python.org/2/library/functions.html#zip</a></span>
<span class="comment-copy">I have accepted this as an answer but I really have hard time to follow. zip(iter1, iter2) works for me on the shell but not in treehouse challenge but your answer works there). Thanks</span>
<span class="comment-copy">May be <code>zip</code> is not allowed in your challenge?</span>
<span class="comment-copy">check my answer</span>
<span class="comment-copy">please see the updated question. <code>zip</code> doesn't work</span>
<span class="comment-copy">I don't understand. In the <code>Bummer</code> error, It looks like that both expected output and the generated output for the first item are same <code>(10, 'T')</code> but still it says that they don't match?</span>
<span class="comment-copy">yeah if you try my code that is what is says. The errors in treehouse unfortunately are not very descriptive but tutorials are great!</span>
<span class="comment-copy">@AKS, I think the error is caused by the output being incorrect. The for example bit is silly because they haven't considered that the first item can be correct while the fault is in the other items. Great way to make confusing error messages.</span>
<span class="comment-copy">@JohnLaRooy: I agree. The error message is really confusing. I updated my answer for python3.</span>
<span class="comment-copy">Have a look at my updated answer. I have added some explanation why you need to convert it <code>list</code> explicitly.</span>
