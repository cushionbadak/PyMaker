<div class="post-text" itemprop="text">
<p>So I am trying to web scrape <a href="https://en.wikipedia.org/wiki/FIFA_World_Rankings" rel="nofollow">https://en.wikipedia.org/wiki/FIFA_World_Rankings</a> and scrape the first table on the page, but it has not worked and I get an error 'NoneType' object is callable. </p>
<p>Here is my code: </p>
<pre><code>from bs4 import BeautifulSoup
import urllib2

soup = BeautifulSoup(urllib2.urlopen("https://en.wikipedia.org/wiki/FIFA_World_Rankings").read())

for row in soup('table', {'class': 'wikitable'})[0].tbody('tr'):
    tds = row('td')
    print tds[0].string, tds[1].string
</code></pre>
<p>I don't know much about HTML and I know very little about web scraping. </p>
</div>
<div class="post-text" itemprop="text">
<p>You are missing the <code>findAll</code> (or <code>find_all</code>, if you want to be Pythonic) function to search for all tags under an element. </p>
<p>You may also want to do a check on the data to make sure you don't get an IndexError like so. </p>
<pre><code>for row in soup('table', {'class': 'wikitable'})[0].findAll('tr'):
    tds = row.findAll('td')
    if len(tds) &gt; 1:
        print tds[0].text, tds[1].text
</code></pre>
<p>And here's the output it gives</p>
<pre><code> Argentina 1532
 Belgium 1352
 Chile 1348
 Colombia 1337
 Germany 1309
 Spain 1277
 Brazil 1261
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import requests
from bs4 import BeautifulSoup

request = requests.get("https://en.wikipedia.org/wiki/FIFA_World_Rankings")
sourceCode = BeautifulSoup(request.content)
tables = sourceCode.select('table.wikitable')
table = tables[0]

print table.get_text()
</code></pre>
<p>also if you want the results as a list:</p>
<pre><code>list = [text for text in table.stripped_strings]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work. You need to use <code>find_all</code> to look for tags. Also, in the Wiki article, team ranks are present in table rows 3-22, hence the if condition.</p>
<pre><code>from bs4 import BeautifulSoup
import urllib2

soup = BeautifulSoup(urllib2.urlopen("https://en.wikipedia.org/wiki/FIFA_World_Rankings").read())

for i,row in enumerate(soup('table', {'class': 'wikitable'})[0].find_all('tr')):
    if i &gt; 2 and i &lt; 23:
      data = row.find_all('td')
      print i,data[0].text, data[1].text
</code></pre>
</div>
<span class="comment-copy"><code>row('td')</code>... <code>row</code> is not a method, and so it is not "callable". Same for <code>tbody('tr')</code> probably</span>
<span class="comment-copy">Also - I would recommend that you use the request library, rather than the <code>urllib2</code> library - <code>requests</code> is a much nicer way of fetching web pages.</span>
<span class="comment-copy"><code>.string</code> doesn't work. <code>.text</code> works.</span>
<span class="comment-copy">Ran it myself in python2. <code>beautifulsoup4 (4.4.1)</code></span>
<span class="comment-copy">It may be a platform issue then. Gives me <code>None</code>.</span>
<span class="comment-copy">Here's the docs, even. <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/#string" rel="nofollow noreferrer">crummy.com/software/BeautifulSoup/bs4/doc/#string</a></span>
<span class="comment-copy"><a href="http://imgur.com/ZKtzlfe" rel="nofollow noreferrer">imgur.com/ZKtzlfe</a> And by the way, I did not downvote brother. I know it is a platform issue.</span>
<span class="comment-copy">This gave me an error that said:  Couldn't find a tree builder with the features you requested: html5lib. Do you need to install a parser library?</span>
<span class="comment-copy">You can replace <code>html5lib</code> with <code>html_parser</code>, or just remove it.</span>
<span class="comment-copy">it works without it, I just default to html5lib because some sites are finicky, sorry, should have specified that dependency</span>
<span class="comment-copy">This was a great answer too, wish I could accept both.</span>
<span class="comment-copy">this gave the correct output. If you don't mind explaining the enumerate part that would be fantastic</span>
<span class="comment-copy">@AdamWarner <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate()</code></a></span>
<span class="comment-copy">See <code>for row in rows</code> for example gives each row. <code>for i,row in enumerate(rows)</code> gives the current index in <code>i</code> and row in <code>row</code>. I hope I made it clear.</span>
<span class="comment-copy">@AdamWarner Please mark it as the answer if it helped. :)</span>
<span class="comment-copy">@AbdulFatir I tried to adapt this <a href="http://www.premierleague.com/en-gb/matchday/league-table.html" rel="nofollow noreferrer">premierleague.com/en-gb/matchday/league-table.html</a> and could not figure it out. Any suggestions?</span>
