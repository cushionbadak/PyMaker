<div class="post-text" itemprop="text">
<p>I'm trying to scrape <a href="https://en.wikipedia.org/wiki/List_of_government_gazettes" rel="nofollow noreferrer">this Wikipedia page</a>.</p>
<p>I'm encountering some problems and would appreciate your assistance:</p>
<blockquote>
<ol>
<li><p>Some rows have more than one name or link and I want them all to be assigned to the correct country. Is there anyway I can do that?</p></li>
<li><p>I want to skip the 'Name(native)' column. How can I do that?</p></li>
<li><p>If I'm scraping the 'Name(native)' column. I get some gibberish, is there anyway to encode that?</p></li>
</ol>
</blockquote>
<pre><code>import requests
from bs4 import BeautifulSoup
import csv
import pandas as pd

url = 'https://en.wikipedia.org/wiki/List_of_government_gazettes'
source = requests.get(url).text

soup = BeautifulSoup(source, 'lxml')
table = soup.find('table', class_='wikitable').tbody

rows = table.findAll('tr')

columns = [col.text.encode('utf').replace('\xc2\xa0','').replace('\n', '') for col in rows[1].find_all('td')]
print(columns)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use pandas function <a href="http://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_html.html" rel="nofollow noreferrer"><code>read_html</code></a> and get second <code>DataFrame</code> from list of <code>DataFrames</code>:</p>
<pre><code>url = 'https://en.wikipedia.org/wiki/List_of_government_gazettes'
df = pd.read_html(url)[1].head()
print (df)
       Country/region                                              Name  \
0              Albania       Official Gazette of the Republic of Albania   
1              Algeria                                  Official Gazette   
2              Andorra  Official Bulletin of the Principality of Andorra   
3  Antigua and Barbuda              Antigua and Barbuda Official Gazette   
4            Argentina     Official Gazette of the Republic of Argentina   

                                 Name (native)                    Website  
0  Fletorja Zyrtare E Republikës Së Shqipërisë                 qbz.gov.al  
1                   Journal Officiel d'Algérie              joradp.dz/HAR  
2     Butlletí Oficial del Principat d'Andorra                www.bopa.ad  
3         Antigua and Barbuda Official Gazette    www.legalaffairs.gov.ag  
4    Boletín Oficial de la República Argentina  www.boletinoficial.gob.ar 
</code></pre>
<p>If check output there is problematic row <code>26</code>, because wrong data also in wiki page.</p>
<p>Solution should be set value by column name and row:</p>
<pre><code>df.loc[26, 'Name (native)'] = np.nan 
</code></pre>
</div>
<span class="comment-copy">so it's much simpler than I though, thank you very much! heading to learn Pandas and how to convert this table into a csv. thank again @jezrael</span>
