<div class="post-text" itemprop="text">
<p>Below are some toy examples to reproduce the issues I am having with pathos.multiprocessing on Python 3.5. One issue is that the parallel process fails to recognize what <code>Test</code> is, even when <code>Test</code> is not used within <code>test()</code>. I've seen some posts address the second issue saying that I need an <code>import numpy as np</code> inside the <code>test</code> function, but that isn't working for me.</p>
<pre><code>import numpy as np

from enum import Enum
from pathos.multiprocessing import ProcessingPool

class TestEnum(Enum):
    A = 1
    B = 2

def test(x):
    if x &gt;= 0:
        return np.array(TestEnum.A)
    else:
        return np.array(TestEnum.B)

def main():
    inputs = np.arange(100)
    pool = ProcessingPool()
    outputs = pool.map(test, inputs)
</code></pre>
<p>The error I am getting is: <code>_pickle.PicklingError: Can't pickle &lt;enum 'TestEnum'&gt;: it's not found as builtins.TestEnum</code></p>
<p>If I were to get rid of all occurrences of <code>TestEnum</code>, then the next error would would be that <code>np</code> is not recognized. I saw other posts on this site suggesting that an <code>import numpy as np</code> is required at the top of <code>main()</code>, but this did not work for me. The error I get when I try to import modules inside <code>main()</code> is: <code>ImportError: __import__ not found</code></p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>Question</strong>: If I add an entry point and call main() through it work  </p>
</blockquote>
<p>It's mandatory for <code>multiprocessing</code>!</p>
<blockquote>
<p>Python » 3.6 Documentation <a href="https://docs.python.org/3/library/multiprocessing.html#the-spawn-and-forkserver-start-methods" rel="nofollow noreferrer">Section: Safe importing of main module</a> </p>
<blockquote>
<p><strong>Safe importing of main module</strong><br/>
    Make sure that the main module can be safely imported by a new Python interpreter without causing unintended side effects (such a starting a new process).  </p>
<p>One should protect the “entry point” of the program by using <code>if __name__ == '__main__':</code></p>
</blockquote>
</blockquote>
</div>
<span class="comment-copy">Can't test with <code>pathos</code>, using <code>multiprocessing.Pool()</code> works without Error.</span>
<span class="comment-copy">@stovfl when I try running with <code>multiprocessing.Pool</code> I get this error: <code>_pickle.PicklingError: Can't pickle &lt;function test at 0x2b276ed23ae8&gt;: attribute lookup test on __main__ failed</code></span>
<span class="comment-copy">How do you call <code>main()</code>, I assume you <b>don't have</b> a <code>if __name__ == '__main__':</code> entry point.</span>
<span class="comment-copy">@stovfl Good point - I had been testing this by executing line by line through my IDE. If I add an entry point and call <code>main()</code> through it works with <code>multiprocessing.Pool</code>. Any idea why it wouldn't work executing line by line?</span>
