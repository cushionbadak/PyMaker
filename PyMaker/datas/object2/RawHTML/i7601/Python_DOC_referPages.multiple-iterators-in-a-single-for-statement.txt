<div class="post-text" itemprop="text">
<p>Is it possible to loop over multiple iterators in a single <code>for</code>-statement?</p>
<pre><code>&gt;&gt;&gt; for i in range(1), range(2):
...  print(i)
...
0
0
1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There's nothing built into the <code>for</code> syntax for that; a <code>for</code> loop always loops over one iterable. You can <em>make</em> <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer">one iterable backed by a bunch of others</a>, though:</p>
<pre><code>import itertools
for i in itertools.chain(range(1), range(2)):
    print(i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This is not possible, however you can try alternatives like merging the two ranges to a single list.</p>
<pre><code>for i in (range(1)+ range(2)):
  print(i)
</code></pre>
<p>This should work. range(1) and range(2) are expanded to lists and you can always concatenate them using overloaded '+' operator.</p>
<p>PS:wont work in python3, possibly because range is generated on the fly.</p>
</div>
<span class="comment-copy">No, you'd have to e.g. <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain</code></a> them into a single iterable.</span>
<span class="comment-copy"><code>range(1) + range(2)</code></span>
<span class="comment-copy">Not in Python 3.x, it won't.</span>
<span class="comment-copy">@jonsharpe you are right.</span>
<span class="comment-copy">"<i>possibly because range is generated on the fly</i>" actually, I don't think <code>range</code> has a <code>__add__</code> method implemented, that's why. Can someone confirm?</span>
<span class="comment-copy">@Coldspeed <code>dir(range(1))</code> confirms your suspicion.</span>
<span class="comment-copy">And anyway, even in Python 2.x it is better to use <code>itertools.chain</code>, as it avoids creating temporary lists, which might be a memory hog for large ranges.</span>
