<div class="post-text" itemprop="text">
<p>I have a flask server that grabs binary data for several different files from a database and puts them into a python 'zipfile' object.  I want to send the generated zip file with my code using flask's "send_file" method.</p>
<p>I was originally able to send non-zip files successfully by using the BytesIO(bin) as the first argument to send_file, but for some reason I can't do the same thing with my generated zip file.  It gives the error:</p>
<p>'ZipFile' does not have the buffer interface.</p>
<p>How do I send this zip file object to the user with Flask?</p>
<p>This is my code:</p>
<pre><code>@app.route("/getcaps",methods=['GET','POST'])
def downloadFiles():
    if request.method == 'POST':
        mongo = MongoDAO('localhost',27017)
        identifier = request.form['CapsuleName']
        password = request.form['CapsulePassword']
        result = mongo.getCapsuleByIdentifier(identifier,password)
        zf = zipfile.ZipFile('capsule.zip','w')
        files = result['files']
        for individualFile in files:
            data = zipfile.ZipInfo(individualFile['fileName'])
            data.date_time = time.localtime(time.time())[:6]
            data.compress_type = zipfile.ZIP_DEFLATED
            zf.writestr(data,individualFile['fileData'])
        return send_file(BytesIO(zf), attachment_filename='capsule.zip', as_attachment=True)
    return render_template('download.html')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>BytesIO()</code> needs to be passed <em>bytes data</em>, but a <code>ZipFile()</code> object is not bytes-data; you actually created a file <em>on your harddisk</em>.</p>
<p>You can create a <code>ZipFile()</code> in memory by using <code>BytesIO()</code> <em>as the base</em>:</p>
<pre><code>memory_file = BytesIO()
with zipfile.ZipFile(memory_file, 'w') as zf:
    files = result['files']
    for individualFile in files:
        data = zipfile.ZipInfo(individualFile['fileName'])
        data.date_time = time.localtime(time.time())[:6]
        data.compress_type = zipfile.ZIP_DEFLATED
        zf.writestr(data, individualFile['fileData'])
memory_file.seek(0)
return send_file(memory_file, attachment_filename='capsule.zip', as_attachment=True)
</code></pre>
<p>The <code>with</code> statement ensures that the <code>ZipFile()</code> object is properly closed when you are done adding entries, causing it to write the required trailer to the in-memory file object. The <code>memory_file.seek(0)</code> call is needed to 'rewind' the read-write position of the file object back to the start.</p>
</div>
<span class="comment-copy"><b>See also:</b> <a href="https://stackoverflow.com/questions/26513542/flask-how-to-send-a-dynamically-generate-zipfile-to-the-client" title="flask how to send a dynamically generate zipfile to the client">stackoverflow.com/questions/26513542/â€¦</a></span>
<span class="comment-copy">How would I do this when I just have <code>files = ['filename1', 'filename2']</code> i.e. files on the server site which I would like to zip and send?</span>
<span class="comment-copy">@Cleb: you mean you have complete filenames in strings and those files exist on disk? Then use the <a href="https://docs.python.org/3/library/zipfile.html#zipfile.ZipFile.write" rel="nofollow noreferrer"><code>zf.write()</code> method</a> to add the data from those files to the <code>ZipFile</code> object.</span>
<span class="comment-copy">Thanks, that's indeed what I ended up with (also using <a href="https://stackoverflow.com/questions/27991745/python-zip-file-and-avoid-directory-structure">this answer</a> to get only the files and avoid the entire directory structure).</span>
