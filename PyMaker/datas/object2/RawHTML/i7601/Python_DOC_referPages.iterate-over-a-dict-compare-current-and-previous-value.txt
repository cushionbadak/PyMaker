<div class="post-text" itemprop="text">
<p>So, this has got me a little stumped.  I have a dict which I am trying to iterate over and I'm looking for the peak values.  The concept is here:</p>
<pre><code>out = {}
for i in data.keys():
    if(data[i].next() -2 &gt; data[i]:
        out.update(i, data[i])
</code></pre>
<p>I have tried putting this in <code>list(range(len(data)))</code> and iterating through that way, which works with dummy data.  However my data does not have keys like 1, 2, 3, 4.  Exmaple data:</p>
<pre><code>{ 29600: 0.65867825014992798,
 30000: 1.3958743297851659,
 30400: 2.1166100767879361,
 30800: 2.0297784488567414,
 31200: 1.9480822174184762,
 31600: 1.887373119058025,
 32000: 1.8890589139490572,
 32400: 4.1795916676025842,
 32800: 3.828821494194075,
 33200: 3.7060572197219459,
 33600: 3.647037270729065,
 34000: 3.6029200898094329,
 34400: 3.5352886422138452,
 34800: 6.7902577064444039,
 35200: 6.5199005963210857,
</code></pre>
<p>There are points in the data, where the value increases by a large value (roughly 3) and I am trying to find both the index and the value associated with those points.  Hence I'm using the next value - 2 and seeing if it is still larger than the previous as my check.  This dict can easily be a pandas data series if its easier that way.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can keep the list of keys with in sorted order then use it to iterate overt the dictionary:    </p>
<pre><code>data = { 29600: 0.65867825014992798,
         30000: 1.3958743297851659,
         30400: 2.1166100767879361,
         30800: 2.0297784488567414,
         31200: 1.9480822174184762,
         31600: 1.887373119058025,
         32000: 1.8890589139490572,
         32400: 4.1795916676025842,
         32800: 3.828821494194075,
         33200: 3.7060572197219459,
         33600: 3.647037270729065,
         34000: 3.6029200898094329,
         34400: 3.5352886422138452,
         34800: 6.7902577064444039,
         35200: 6.5199005963210857}

out = {}
# keep the keys in sorted order
sorted_keys = sorted(data)

# now for each key in the list
for i in range(len(sorted_keys)-1):

    # get key at index i and key at index i+1 and compare them
    if(data[sorted_keys[i+1]] -2 &gt; data[sorted_keys[i]]):

        # if condition matched update the out 
        out[sorted_keys[i]] = data[sorted_keys[i]]
        out[sorted_keys[i+1]] = data[sorted_keys[i+1]]

print(out)
</code></pre>
<p>Output:</p>
<pre><code>{32000: 1.8890589139490572,
 32400: 4.179591667602584,
 34400: 3.535288642213845,
 34800: 6.790257706444404}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using dataframe since you're okay with pandas  :</p>
<p>input </p>
<pre><code>    k       v
0   29600   0.658678250149928
1   30000   1.395874329785166
2   30400   2.116610076787936
3   30800   2.0297784488567414
4   31200   1.948082217418476
5   31600   1.887373119058025
6   32000   1.8890589139490568
7   32400   4.179591667602584
8   32800   3.8288214941940755
9   33200   3.7060572197219455
10  33600   3.647037270729065
11  34000   3.602920089809433
12  34400   3.5352886422138448
13  34800   6.790257706444404
14  35200   6.519900596321086


d["new"] = d.v - d.v.shift(-1)
d["new"] = d["new"].apply(lambda x:abs(x))
d[d["new"] &gt;2]
</code></pre>
<p>output</p>
<pre><code>    k       v                   new
6   32000   1.8890589139490568  2.2905327536535274
12  34400   3.5352886422138448  3.254969064230559
</code></pre>
</div>
<span class="comment-copy">Can you give the peak value in your exemple ?</span>
<span class="comment-copy">Keep in mind that dictionaries aren't ordered unless you make an <a href="https://docs.python.org/3/library/collections.html#collections.OrderedDict" rel="nofollow noreferrer">OrderedDict</a>. So iterating like you are now relying upon your "next" value to be some number isn't always going to work.</span>
<span class="comment-copy">I've added better example data, @Tbaki, and this doesn't work at all, I can't iterate over the data.</span>
<span class="comment-copy">@NickHale you just want the max key/value ?</span>
<span class="comment-copy">Not just the max, the data is very large, in steps.  I'm looking for the key/value at the step points</span>
<span class="comment-copy">Great, I did not know about <code>sorted()</code>!</span>
<span class="comment-copy">@NickHale I am happy it worked! <code>Happy Coding</code>.</span>
<span class="comment-copy">this works for me, good answer, I can only accept one though!</span>
<span class="comment-copy">@NickHale no problem, good luck :D</span>
