<div class="post-text" itemprop="text">
<p>I have a Python class that contains all the AWS regions. I wrote a class method that would return me the list of all the regions. Is there a better way of returning all the class variable values so I don't have to hard-code all the values in the return statement like I am doing in the example below?</p>
<pre><code>class AwsRegion():
    '''
    Class to define AWS Regions
    '''
    OHIO = 'us-east-2'
    NORTH_VIRGINIA = 'us-east-1'
    NORTH_CALIFORNIA = 'us-west-1'
    OREGON = 'us-west-2'
    MUMBAI = 'ap-south-1'
    SEOUL = 'ap-northeast-2'
    SINGAPORE = 'ap-southeast-1'
    SYDNEY = 'ap-southeast-2'
    TOKYO = 'ap-northeast-1'
    FRANKFURT = 'eu-central-1'
    IRELAND = 'eu-west-1'
    LONDON = 'eu-west-2'
    SAO_PAULO = 'sa-east-1'

    @classmethod
    def all(cls, ):
        return [AwsRegion.OHIO, AwsRegion.NORTH_VIRGINIA, AwsRegion.NORTH_CALIFORNIA, AwsRegion.OREGON, \
            AwsRegion.MUMBAI, AwsRegion.SEOUL, AwsRegion.SINGAPORE, AwsRegion.SYDNEY, AwsRegion.TOKYO, \
            AwsRegion.FRANKFURT, AwsRegion.IRELAND, AwsRegion.LONDON, AwsRegion.SAO_PAULO]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In this case, you can enumerate all the attributes of the class that are uppercase; I'd use the <a href="https://docs.python.org/3/library/functions.html#vars" rel="nofollow noreferrer"><code>vars()</code> function</a> to access the class namespace:</p>
<pre><code>@classmethod
def all(cls):
    return [value for name, value in vars(cls).items() if name.isupper()]
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; class AwsRegion():
...     '''
...     Class to define AWS Regions
...     '''
...     OHIO = 'us-east-2'
...     NORTH_VIRGINIA = 'us-east-1'
...     NORTH_CALIFORNIA = 'us-west-1'
...     OREGON = 'us-west-2'
...     MUMBAI = 'ap-south-1'
...     SEOUL = 'ap-northeast-2'
...     SINGAPORE = 'ap-southeast-1'
...     SYDNEY = 'ap-southeast-2'
...     TOKYO = 'ap-northeast-1'
...     FRANKFURT = 'eu-central-1'
...     IRELAND = 'eu-west-1'
...     LONDON = 'eu-west-2'
...     SAO_PAULO = 'sa-east-1'
...     @classmethod
...     def all(cls):
...         return [value for name, value in vars(cls).items() if name.isupper()]
...
&gt;&gt;&gt; AwsRegion.all()
['us-east-2', 'us-east-1', 'us-west-1', 'us-west-2', 'ap-south-1', 'ap-northeast-2', 'ap-southeast-1', 'ap-southeast-2', 'ap-northeast-1', 'eu-central-1', 'eu-west-1', 'eu-west-2', 'sa-east-1']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As a general reference, you can get the attributes of any class through the following ways. Choose depending on your needs:</p>
<p><a href="https://docs.python.org/3.4/library/stdtypes.html#object.__dict__" rel="nofollow noreferrer"><code>__dict__</code></a>:</p>
<p><em>Will return a dict of all <strong>writeable</strong> class attributes. This is usually what you need.</em></p>
<pre><code>myObj = MyClass()
attributes = myObj.__dict__
</code></pre>
<p><a href="https://docs.python.org/3.4/library/functions.html#vars" rel="nofollow noreferrer"><code>vars()</code></a>:</p>
<p><em>Same result as <code>__dict__</code>, but using this instead is considered best practice.</em></p>
<pre><code>myObj = MyClass()
attributes = dir(myObj)
</code></pre>
<p><a href="https://docs.python.org/3.4/library/functions.html#dir" rel="nofollow noreferrer"><code>dir()</code></a>:</p>
<p><em>Will return <strong>all</strong> class attributes, including those that aren't made by you but are inherited from <code>object</code>.</em></p>
<pre><code>myObj = MyClass()
attributes = dir(myObj)
</code></pre>
<p>In your case, using <code>vars()</code> will work just fine, as demonstrated by Martijn Pieters in his <a href="https://stackoverflow.com/a/44790074/7662085">answer</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like what you might be doing is accidentally creating an <a href="https://docs.python.org/3/library/enum.html" rel="nofollow noreferrer"><code>Enum</code></a> type. </p>
<p>If your <code>AwsRegion</code> class is only used to store these values (not lots of other complex behavior), try making it a subclass of <code>Enum</code>.  This would give you a handful of nice methods without having to recreate it all yourself and would make your code clearer to others who know what enumerate types are.</p>
<pre><code>from enum import Enum

class AwsRegion2(Enum):
    OHIO = 'us-east-2'
    NORTH_VIRGINIA = 'us-east-1'
    NORTH_CALIFORNIA = 'us-west-1'
    OREGON = 'us-west-2'
    MUMBAI = 'ap-south-1'
    SEOUL = 'ap-northeast-2'
    SINGAPORE = 'ap-southeast-1'
    SYDNEY = 'ap-southeast-2'
    TOKYO = 'ap-northeast-1'
    FRANKFURT = 'eu-central-1'
    IRELAND = 'eu-west-1'
    LONDON = 'eu-west-2'
    SAO_PAULO = 'sa-east-1'


print(list(AwsRegion2))
</code></pre>
</div>
<span class="comment-copy"><code>all</code> is a class attribute <b>too</b>. Do you mean anything that isn't a callable or otherwise a descriptor?</span>
<span class="comment-copy">There must be a simpler way to return those values than hardcoding them in a list...</span>
<span class="comment-copy">You mentioned vars() but typed dir(myObj) in this line: vars = dir(myObj). Is that a typo?</span>
