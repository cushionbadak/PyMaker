<div class="post-text" itemprop="text">
<p>I am using widows 10 pro, python 3.6.2rc1. I am training a convolutional neural network made by tensorflow. As a preprocessing phase, I hae written the following code to resize each image. It works perfectly well, but since I have more than 100 training images (I made it quite low just to see how it works at the moment) with very different names, and at the end I'd like all of them follow the same naming convention as in "image001", "image002" and so on, I added a counter and use it to change the name of the image before saving it to the same folder by using cv2.imwrite(). But I am getting this error:</p>
<pre><code>Traceback (most recent call last):
  File "E:/Python/TrainingData/TrainingPrep.py", line 11, in &lt;module&gt;
    cv2.imwrite(imageName,re)
cv2.error: D:\Build\OpenCV\opencv-3.2.0\modules\imgcodecs\src\loadsave.cpp:531: error: (-2) could not find a writer for the specified extension in function cv::imwrite_
</code></pre>
<hr/>
<pre><code>import cv2
import glob

i=0
images = glob.glob("*.jpg")
for image in images:
    img = cv2.imread(image,1)
    counter=str(i)
    re = cv2.resize(img,(128,128))
    imageName = "image"+counter
    cv2.imwrite(imageName,re)
    i=i+1
    print(counter)
</code></pre>
<p>I need my images have the names image001, image00x. I appreciate if you help me solve this problem.</p>
<p>Thank you very much.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="http://docs.opencv.org/2.4/modules/highgui/doc/reading_and_writing_images_and_video.html#bool%20imwrite(const%20string&amp;%20filename,%20InputArray%20img,%20const%20vector%3Cint%3E&amp;%20params)" rel="nofollow noreferrer">imwrite</a> method expects the extension to determine the file format.</p>
<p>Simply change your line to (for PNG, or whatever file format you want) and it should work:</p>
<pre><code>imageName = "image"+counter+".png"
</code></pre>
<p>You can rename the files later if you so wish, using <code>glob.glob</code>. A working example should be something like this:</p>
<pre><code>import cv2
import glob
import os

i=0
images = glob.glob("*.jpg")
for image in images:
    img = cv2.imread(image,1)
    counter=str(i)
    re = cv2.resize(img,(128,128))
    imageName = "image"+counter+".jpg"
    cv2.imwrite(imageName,re)
    i=i+1
    print(counter)

rename = glob.glob("images*.jpg")
for src in rename:
    dst = os.path.splitext(item)[0] 
    os.rename(src, dst)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This method will give you the leading zeros you want in the file name:</p>
<pre><code>import cv2
import glob

i=0
images = glob.glob("*.jpg")
for image in images:
    img = cv2.imread(image,1)
    re = cv2.resize(img,(128,128))
    imageName = "image{:03d}.png".format(i) # format i as 3 characters with leading zeros
    cv2.imwrite(imageName,re)
    i=i+1
    print(counter)
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> is convenient when you need a counter while iterating.</span>
<span class="comment-copy">Great. Thanks for the answer. Just a fast double check. In case of renaming, why in the above code are dst and src the same? It retuns the following error when I later change "image" in filename to "pic" for instance. The error is Traceback (most recent call last):   File "E:/Python/Images/RenameLater.py", line 11, in &lt;module&gt;     os.rename(src,dst) FileExistsError: [WinError 183] Cannot create a file when that file already exists: 'image001.jpg' -&gt; 'E:\\Python\\Images'</span>
<span class="comment-copy">@E.Erfan, because I'm using an "image*.jpg" expansion pattern, which is looking for anything starting with "image" and ending with ".jpg". In that case, "pic" would not work. You can modify the above code to work with a lot of cases.</span>
<span class="comment-copy">The idea of adding zeros was great and made it much more organzied. thanks</span>
