<div class="post-text" itemprop="text">
<p>I'm trying to make a desktop notifier, and for that I'm scraping news from a site. When I run the program, I get the following error.</p>
<pre class="lang-none prettyprint-override"><code>news[child.tag] = child.encode('utf8')
AttributeError: 'xml.etree.ElementTree.Element' object has no attribute 'encode'
</code></pre>
<p>How do I resolve it? I'm completely new to this. I tried searching for solutions, but none of them worked for me.</p>
<p>Here is my code:</p>
<pre><code>import requests
import xml.etree.ElementTree as ET


# url of news rss feed
RSS_FEED_URL = "http://www.hindustantimes.com/rss/topnews/rssfeed.xml"


def loadRSS():
    '''
    utility function to load RSS feed
    '''
    # create HTTP request response object
    resp = requests.get(RSS_FEED_URL)
    # return response content
    return resp.content


def parseXML(rss):
    '''
    utility function to parse XML format rss feed
    '''
    # create element tree root object
    root = ET.fromstring(rss)
    # create empty list for news items
    newsitems = []
    # iterate news items
    for item in root.findall('./channel/item'):
        news = {}
        # iterate child elements of item
        for child in item:
            # special checking for namespace object content:media
            if child.tag == '{http://search.yahoo.com/mrss/}content':
                news['media'] = child.attrib['url']
            else:
                news[child.tag] = child.encode('utf8')
        newsitems.append(news)
    # return news items list
    return newsitems


def topStories():
    '''
    main function to generate and return news items
    '''
    # load rss feed
    rss = loadRSS()
    # parse XML
    newsitems = parseXML(rss)
    return newsitems
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're trying to convert a <code>str</code> to <code>bytes</code>, and then store those bytes in a dictionary.
The problem is that the object you're doing this to is an
<a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element" rel="nofollow noreferrer"><code>xml.etree.ElementTree.Element</code></a>,
not a <code>str</code>.</p>
<p>You probably meant to get the text from within or around that element, and then <code>encode()</code> <em>that</em>.
The docs
suggests using the
<a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.itertext" rel="nofollow noreferrer"><code>itertext()</code></a>
method:</p>
<pre><code>''.join(child.itertext())
</code></pre>
<p>This will evaluate to a <code>str</code>, which you can then <code>encode()</code>.</p>
<p>Note that the
<a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element.text" rel="nofollow noreferrer"><code>text</code> and <code>tail</code> attributes</a>
might not contain text
(emphasis added):</p>
<blockquote>
<p>Their values are usually strings <strong>but may be any application-specific object</strong>.</p>
</blockquote>
<p>If you want to use those attributes, you'll have to handle <code>None</code> or non-string values:</p>
<pre><code>head = '' if child.text is None else str(child.text)
tail = '' if child.text is None else str(child.text)
# Do something with head and tail...
</code></pre>
<p>Even this is not really enough.
If <code>text</code> or <code>tail</code> contain <code>bytes</code> objects of some unexpected
(or plain wrong)
encoding, this will raise a <code>UnicodeEncodeError</code>.</p>
<h2>Strings versus Bytes</h2>
<p>I suggest leaving the text as a <code>str</code>, and not encoding it at all.
Encoding text to a <code>bytes</code> object is intended as the last step before writing it to a binary file, a network socket, or some other hardware.</p>
<p>For more on the difference between bytes and characters, see Ned Batchelder's
"<a href="http://nedbatchelder.com/text/unipain.html" rel="nofollow noreferrer">Pragmatic Unicode, or, How Do I Stop the Pain?</a>"
(36 minute <a href="https://www.youtube.com/watch?v=sgHbC6udIqc" rel="nofollow noreferrer">video from PyCon US 2012</a>).
He covers both Python 2 and 3.</p>
<h2>Example Output</h2>
<p>Using the <code>child.itertext()</code> method, and <em>not encoding the strings</em>, I got a reasonable-looking list-of-dictionaries from <code>topStories()</code>:</p>
<pre><code>[
  ...,
  {'description': 'Ayushmann Khurrana says his five-year Bollywood journey has '
                  'been “a fun ride”; adds success is a lousy teacher while '
                  'failure is “your friend, philosopher and guide”.',
    'guid': 'http://www.hindustantimes.com/bollywood/i-am-a-hardcore-realist-and-that-s-why-i-feel-my-journey-has-been-a-joyride-ayushmann-khurrana/story-KQDR7gMuvhD9AeQTA7tbmI.html',
    'link': 'http://www.hindustantimes.com/bollywood/i-am-a-hardcore-realist-and-that-s-why-i-feel-my-journey-has-been-a-joyride-ayushmann-khurrana/story-KQDR7gMuvhD9AeQTA7tbmI.html',
    'media': 'http://www.hindustantimes.com/rf/image_size_630x354/HT/p2/2017/06/26/Pictures/actor-ayushman-khurana_24f064ae-5a5d-11e7-9d38-39c470df081e.JPG',
    'pubDate': 'Mon, 26 Jun 2017 10:50:26 GMT ',
    'title': "I am a hardcore realist, and that's why I&amp;thinsp;feel my journey "
             'has been a joyride: Ayushmann...'},
]
</code></pre>
</div>
<span class="comment-copy">i have not worked with xml, but the error says that <code>child</code> is not a string object. so before <code>encode</code> it seems to convert your <code>Element</code> instance <code>child</code> to some string.</span>
<span class="comment-copy">simply checking <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#xml.etree.ElementTree.Element" rel="nofollow noreferrer">the docs</a>, how about <code>child.text.encode</code>?</span>
<span class="comment-copy">Ya i did that too but i'm getting the same error @Leonard2</span>
<span class="comment-copy">news[child.tag] = child.text.encode('utf8') AttributeError: 'NoneType' object has no attribute 'encode'</span>
<span class="comment-copy">I guess this problem can be data-dependent. I mean, it depends on whether each <code>child</code> has some text or not.</span>
<span class="comment-copy">when i write just child.text then i get the following error in my notification program      message.append(signature=signature, *args) TypeError: Expected a string or unicode object</span>
<span class="comment-copy">@ani:  I don't see <code>message.append</code> in your code anywhere.  Anyway, like I highlighted in my answer, <code>text</code> and <code>tail</code> can contain <i>any</i> object, so don't assume they're text in any form, let alone Unicode strings.  (If you <i>did</i> get <code>str</code> strings and then used the <code>encode()</code> method to convert them to <code>bytes</code>, see my update about leaving them as strings.)</span>
<span class="comment-copy">No i'm using message.append in another program</span>
<span class="comment-copy">when i'm using str(child.text) i'm getting the following error  UnicodeEncodeError: 'ascii' codec can't encode character u'\u201c' in position 136: ordinal not in range(128)</span>
<span class="comment-copy">@ani:  Remember the bit that said "may be <i>any</i> application-specific object"?  That includes "text" in unspecified (and possibly incorrect) encodings.  Are you <i>sure</i> you can't get what you want from <code>itertext()</code>?  I added an example of the output I got from it.</span>
