<div class="post-text" itemprop="text">
<p>This is not a duplicate of a related question <a href="https://stackoverflow.com/questions/23935029/when-where-should-i-check-for-the-minimum-python-version">When/where should I check for the minimum Python version?</a>.</p>
<p>My problem is that and I'm not sure if it is a good idea in the first place.</p>
<p>My program starts with (X does not matter now):</p>
<pre><code>if sys.version_info &lt; (3, X):
    raise RuntimeError("Python ver. 3.X or higher is required")
</code></pre>
<p>and I cannot recall why I put that test there.</p>
<p>Well, it gives a clear message instead of some obscure error, but that's all.</p>
<p>The program is being developed and keeping the X up-to-date is not easy. I don't want to go into details in order to avoid opinion-based discussion about setting X.</p>
<p>I'd like to reduce the question to simple yes or no for version check. Are there any existing guidelines?</p>
</div>
<div class="post-text" itemprop="text">
<p>Remove the check entirely.  This info belongs in the package metadata, so it will be caught at <strong>install time</strong> - not at runtime.  </p>
<p>You're clearly not writing a cross-compat library here, so the only <code>.py</code> file that should contain any information about supported Python versions is the <code>setup.py</code> file.</p>
<p>(<em>Note</em>: even if you were writing a cross-compat library, best practice is usually to isolate any version-specific detail into a separate <code>compat.py</code> module)</p>
</div>
<div class="post-text" itemprop="text">
<p>A few options:</p>
<ul>
<li><p>Can you check commit messages around the time the line was added and see if you complained about something in them? Maybe then do a diff and see what changed before and after the line was added. It could guide you to the specific part and tell you <em>why</em> you insisted on X.</p></li>
<li><p>You can also head to the "<strong>What's New in Python 3.X</strong>" section of the documentation <a href="https://docs.python.org/3/whatsnew/3.X.html" rel="nofollow noreferrer">https://docs.python.org/3/whatsnew/3.X.html</a>) and hunt down what changed that made you want Python 3.X and not Python 3.(X-1) (a diff of sorts on Python itself). Whatever the reason you had to raise an <em>exception</em> instead of issuing a <em>warning</em>, it has to be there in the change log.</p></li>
</ul>
</div>
<span class="comment-copy">"Errors should never pass silently." - <code>import this</code>.</span>
<span class="comment-copy">You already have the message in place, and it doesn't hurt to have it there.  (Like you said, it actually makes errors potentially clearer.)  So why waste time thinking about whether to remove the check or not?</span>
<span class="comment-copy">What happens if you remove the check and execute your script with a version before <i>Python3.X</i>? You could then try with a previous version of that one and so on (til the point it no longer works).</span>
