<div class="post-text" itemprop="text">
<p>If suppose I have a file full of functions in python naming <strong>basics.py</strong> which <strong>does not have a class</strong> inside it.
and there's <strong>no   __init__()</strong> function too.
Now if I want to access the functions of <strong>basics.py</strong> inside the <strong>views.py</strong> .
How can I do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>This is a common mistake because python 3 have stricter rules when it comes to relative imports.</p>
<p>I assume you have a structure like this.</p>
<pre><code>myapp
├── basics.py
└── views.py
</code></pre>
<p>.. where <code>myapp</code> is in the root of your project.</p>
<p>Let's assume <code>basics.py</code> looks like this.</p>
<pre><code>def do_stuff():
    pass
</code></pre>
<p>The ways you can import things from basic would then be (<code>views.py</code>)</p>
<pre><code>from myapp import basics
from myapp.basics import do_stuff
from . import basics
from .basics import do_stuff

# View code ...
</code></pre>
<p>I assumed here that <code>basics.py</code> and <code>views.py</code> are located in the same package (<code>app</code>).</p>
<p>When you run a python project your current directory is added to the python path. You will either have to import all the way from the root of your project or use <code>.</code> to import from the local package/directory.</p>
<p>Also notice in the example that you can import the entire module or just single functions/objects. When importing the entire <code>basics</code> module you access it using <code>basics.do_stuff()</code> in the view. </p>
</div>
<div class="post-text" itemprop="text">
<p>use:</p>
<pre><code>import basics
</code></pre>
<p>than use all the functions you want :)</p>
</div>
<span class="comment-copy">use an import statement in views.py <code>import basics</code></span>
<span class="comment-copy"><a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">docs.python.org/3/tutorial/modules.html</a> You should read more about Python.</span>
<span class="comment-copy">Not having a class is <i>usual</i>. There is absolutely no need for one if you're not keeping state. And <code>__init__()</code> methods are only used within classes anyway.</span>
<span class="comment-copy">Are you using Python 2 or 3?</span>
<span class="comment-copy">If you can share your project structure, that would help a lot.</span>
<span class="comment-copy">This assumes the person is using a relative import in python 2 or the module is in the root of the python path.</span>
<span class="comment-copy">it gives me an error saying unresolved reference 'basics'</span>
