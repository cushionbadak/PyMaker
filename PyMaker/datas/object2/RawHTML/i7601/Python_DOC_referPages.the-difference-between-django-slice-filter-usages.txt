<div class="post-text" itemprop="text">
<p>I have a <code>myList</code> list with e.g. 5 elements, but I want to slice it in template by using command:</p>
<p><code>{% for item in myList|slice:"3" %}</code></p>
<p>or this command:</p>
<p><code>{% for item in myList|slice:":3" %}</code></p>
<p>What's the difference between <code>slice:"x"</code> and <code>slice:":x"</code>? (I don't have currently access to machine with django installed but I'm curious)</p>
</div>
<div class="post-text" itemprop="text">
<p><code>slice:"3"</code> and <code>slice:":x"</code> are both same as they will return first 3 elements from the list</p>
<p>but if you use <code>slice:"2:x"</code> then it will leave the 2 items from the first of the list and take from 3rd item till the number you mentioned in the x variable, its basically taking a part</p>
</div>
<div class="post-text" itemprop="text">
<p>They produce same result:</p>
<pre><code>&gt;&gt;&gt; from django.template import Template, Context
&gt;&gt;&gt; Template('{{xs|slice:"3"}} {{xs|slice:":3"}}').render(Context({
...    'xs': list(range(10))
... }))
u'[0, 1, 2] [0, 1, 2]'
</code></pre>
<p>Django <a href="https://docs.djangoproject.com/en/1.11/ref/templates/builtins/#slice" rel="nofollow noreferrer"><code>slice</code></a> filter internally use <a href="https://docs.python.org/3/library/functions.html#slice" rel="nofollow noreferrer"><code>slice</code></a> python function (or type).</p>
<blockquote>
<pre><code>class slice(stop)   #  slice|"3" -&gt; slice(3) -&gt; slice(None, 3, None)
class slice(start, stop[, step])  # slice|":3" -&gt; slice(None, 3, None)
</code></pre>
</blockquote>
</div>
