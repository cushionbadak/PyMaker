<div class="post-text" itemprop="text">
<p>I have a test class with some static methods along with normal methods. The problem is that <code>pytest</code> is not collecting static methods. I couldn't find anything in the documentation regarding this. How can I make it collect staticmethods too?</p>
<pre><code>class TestFoo(object):
    @staticmethod
    def test_bar():
        assert 1 == 1

    def test_bar2(self):
        assert 1 == 1
</code></pre>
<p>In the above class, only <code>test_bar2</code> is collected and <code>test_bar()</code> isn't.</p>
<p>I am running <code>Python 2.7.13, pytest-3.1.2, py-1.4.34, pluggy-0.4.0</code></p>
<p>Plugins are <code>xdist-1.17.1, leaks-0.2.2, cov-2.5.1</code></p>
</div>
<div class="post-text" itemprop="text">
<p>When collecting test functions, <a href="https://github.com/pytest-dev/pytest/blob/4e57a39067ddf1973ca2a6207423fdcd5916fa2e/_pytest/python.py#L273" rel="nofollow noreferrer">pytest ensure each functions are callable</a>.</p>
<p>But a <em>staticmethod</em> is not callable, from <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">https://docs.python.org/3/reference/datamodel.html</a>:</p>
<blockquote>
<p>Static method objects are not themselves callable, although the objects they wrap usually are.</p>
</blockquote>
<p>see:</p>
<pre><code>&gt;&gt;&gt; class TestFoo(object):
...     @staticmethod
...     def test_bar():
...         assert 1 == 1
... 
&gt;&gt;&gt; hasattr(TestFoo.__dict__['test_bar'], '__call__')
False
</code></pre>
<p>For this to work, pytest itself should be modified to accept static method, I don't know if that's what they want, you can open an issue on their issue tracker on github if you think you really need it.</p>
<p>Why do you think static methods are a solution? For which problem exactly?</p>
</div>
<span class="comment-copy">Discussing if we should have static methods or not or if they solve any problem isn't the point. My codebase has them if the method doesn't use self. Thanks for the answer though!</span>
