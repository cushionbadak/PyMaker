<div class="post-text" itemprop="text">
<p>Consider this draft text paragraph:</p>
<blockquote>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus iaculis imperdiet hendrerit. Aliquam vitae eleifend ex. Aenean molestie mi vel mauris blandit sagittis. Cras dictum ac nibh nec malesuada. Fusce dolor ex, vulputate id ipsum eget, varius condimentum lectus. Fusce accumsan nisl eget tincidunt elementum. Suspendisse eu pellentesque odio.</p>
</blockquote>
<p>I want to check this text if contains words <strong>('Lorem' AND 'ipsum') OR 'dolor'</strong></p>
<p>How I can do this in Python?</p>
<p>Use case:
Queries are saved to database, so, the user can remove or add or edit queries in an admin area.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus iaculis imperdiet hendrerit. Aliquam vitae eleifend ex. Aenean molestie mi vel mauris blandit sagittis. Cras dictum ac nibh nec malesuada. Fusce dolor ex, vulputate id ipsum eget, varius condimentum lectus. Fusce accumsan nisl eget tincidunt elementum. Suspendisse eu pellentesque odio."

result = ('Lorem' in text and 'ipsum' in text) or 'dolor' in text
print(result)
</code></pre>
<p>Output:</p>
<pre><code>True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus iaculis imperdiet hendrerit. Aliquam vitae eleifend ex. Aenean molestie mi vel mauris blandit sagittis. Cras dictum ac nibh nec malesuada. Fusce dolor ex, vulputate id ipsum eget, varius condimentum lectus. Fusce accumsan nisl eget tincidunt elementum. Suspendisse eu pellentesque odio."

word_lists = [['Lorem', 'ipsum'], ['dolor']]
result = any(all(w in text for w in word_list) for word_list in word_lists)
print result
</code></pre>
<blockquote>
<p>True</p>
</blockquote>
<p>You can add elements to word_lists if you need to add more condidions.</p>
</div>
<div class="post-text" itemprop="text">
<p>@ Lhassan Baazzi</p>
<pre><code>import re

r = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus iaculis imperdiet hendrerit. Aliquam vitae eleifend ex. Aenean molestie mi vel mauris blandit sagittis. Cras dictum ac nibh nec malesuada. Fusce dolor ex, vulputate id ipsum eget, varius condimentum lectus. Fusce accumsan nisl eget tincidunt elementum. Suspendisse eu pellentesque odio."

if re.search('Lorem' and 'ipsum',r) or re.search('dolor',r):
    print 'Exists'
</code></pre>
</div>
<span class="comment-copy">hint: can be done using <code>in</code> operator</span>
<span class="comment-copy">@EricFinn I'm thinking to save it in an SQLite database and query on it.</span>
<span class="comment-copy">What's the exact use case? does it need to work with any query and any text?  I'd personally do: ``` tokens = set(text.split()) answer = ('lorem' in tokens and 'ipsum' tokens) or 'dolor' in tokens ```</span>
<span class="comment-copy">If the text had 'dolors' should that be considered a match? What about "Dolor"? Please clarify what you mean by "words".</span>
<span class="comment-copy">@RoryDaulton The user enter queries to need to be checked against a text like this one <code>('Lorem' AND 'ipsum') OR 'dolor'</code></span>
<span class="comment-copy">I'd tokenize it first. For example, "dolores" would match with this solution</span>
<span class="comment-copy">How I can transform this query <code>('Lorem' AND 'ipsum') OR 'dolor'</code> into this <code>('Lorem' in text and 'ipsum' in text) or 'dolor' in text</code></span>
<span class="comment-copy">You can see <a href="https://docs.python.org/3/library/ast.html" rel="nofollow noreferrer">docs.python.org/3/library/ast.html</a> or write a binary expression tree <a href="https://en.wikipedia.org/wiki/Binary_expression_tree" rel="nofollow noreferrer">en.wikipedia.org/wiki/Binary_expression_tree</a> from scratch to implement your request executor</span>
