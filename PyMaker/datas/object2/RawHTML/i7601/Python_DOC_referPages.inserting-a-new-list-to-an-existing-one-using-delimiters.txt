<div class="post-text" itemprop="text">
<p>I have a list that stores tuples of coordinates. For example:</p>
<pre><code>coords = [(0,0), (1,1), (4,4), (4,6), (9,2), (34,14), (43,6)]
</code></pre>
<p>I have other two tuples which work as <em>delimiters</em> (they are always within the <code>coords</code> list), for example:</p>
<pre><code>start = (1,1)
end = (9,2)
</code></pre>
<p>The <code>start</code> point is not always listed before the <code>end</code> point, but both of them are always within the <code>coords</code> list.</p>
<p>Finally, I have another separate list of coordinates, for example:</p>
<pre><code>to_add = [(50,50), (71,31), (84,24)]
</code></pre>
<p>Basically, I would like to remove all the items from the <code>coords</code> list 
 that are between the <code>start</code> and <code>end</code> tuples and add the <code>to_add</code> items within it. The final result would be like this:</p>
<pre><code>coords = [(0,0), (1,1), (50,50), (71,31), (84,24), (9,2), (34,14), (43,6)]
</code></pre>
<p>How can I do that?</p>
</div>
<div class="post-text" itemprop="text">
<p>The solution using <code>sorted()</code> and <code>list.index()</code> functions:</p>
<pre><code>coords = [(0,0), (1,1), (4,4), (4,6), (9,2), (34,14), (43,6)]
end = (1,1)
start = (9,2)
to_add = [(50,50), (71,31), (84,24)]

bounds = sorted((end, start))  # getting arranged boundaries
coords[coords.index(bounds[0])+1:coords.index(bounds[1])] = to_add

print(coords)
</code></pre>
<p>The output:</p>
<pre><code>[(0, 0), (1, 1), (50, 50), (71, 31), (84, 24), (9, 2), (34, 14), (43, 6)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Divide the list into three different list i.e from 0 index to start coordinate index, another from start coordinate index to end coordinate and the last list from end coordinate index to last element of the list. Now only add 1st and last list with to_add list.</p>
<p>Code snippet for required output</p>
<pre><code>start = (1,1)
end = (9,2)
start, end =  sorted((end, start))
to_add = [(50,50), (71,31), (84,24)]
coords = coords[:coords.index(start)+1] + to_add + coords[coords.index(end):]
</code></pre>
<p>output</p>
<pre><code>[(0, 0), (1, 1), (50, 50), (71, 31), (84, 24), (9, 2), (34, 14), (43, 6)]
</code></pre>
</div>
<span class="comment-copy">have you tried anything before asking?</span>
<span class="comment-copy">Start working your way through the <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">Tutorial</a> practicing all the examples given. Eventually you will start to get ideas for solving your problem.  Try some of those ideas out - if you get stuck come back and ask a question.</span>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation.  <a href="http://stackoverflow.com/help/on-topic">on topic</a> and <a href="http://stackoverflow.com/help/how-to-ask">how to ask</a> apply here.  StackOverflow is not a design, coding, research, or tutorial service.</span>
<span class="comment-copy">Use <code>index</code> to find both tuples in the list.  Use string slicing to build a new list from the pieces you want to keep.  Is that enough to get you moving?</span>
<span class="comment-copy">Thanks @Prune, I will give a look at it.</span>
<span class="comment-copy">Thanks, even if it is clearer to understand, it seems not working when start and end tuples are swapped.</span>
<span class="comment-copy">Sorry, i didnt notice that. We can sort the coordinates and reassign start and end coordinates. I have made changes in my answer</span>
<span class="comment-copy">Thanks for the edit, your code helped me to understand better but I accepted another similar answer since it was posted before. +1</span>
<span class="comment-copy">Pleasure i could help!!</span>
