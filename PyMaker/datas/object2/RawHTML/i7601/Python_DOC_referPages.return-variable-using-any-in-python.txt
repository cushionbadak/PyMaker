<div class="post-text" itemprop="text">
<p>Is there any way to return a variable using any?</p>
<p>Without using Any:</p>
<pre><code>for punctuation in punctuations_list:
    if punctuation in utterance:
        print (punctuation)
</code></pre>
<p>With Any (Getting error since punctuation isn't initialised):</p>
<pre><code>if any(punctuation in utterance for punctuation in punctuations_list):
    print (punctuation)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>No, <code>any()</code> only produces <code>True</code> or <code>False</code>. If you need the matching elements, don't use <code>any()</code>, instead filter (like you did with your <code>for</code> loop).</p>
<p>You could use a list comprehension first to do the filtering:</p>
<pre><code>matching = [p for p in puntuations_list if p in utterance]
if matching:
    # print all matching punctuation on separate lines
    print(*matching, sep='\n')
</code></pre>
<p>or if you only need the <em>first</em> matching element, use the <a href="https://docs.python.org/3/library/itertools.html#next" rel="nofollow noreferrer"><code>next()</code> function</a> and a generator expression:</p>
<pre><code>matching = next((p for p in puntuations_list if p in utterance), None)
if matching is not None:
    print(matching)
</code></pre>
<p>The second argument to <code>next()</code> is returned if the generator expression doesn't produce any values; so here <code>None</code> signals there was no matching punctuation (so <code>any()</code> would have returned <code>False</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>No, <code>any()</code> can only return True of False, if you need a variable use <code>filter()</code></p>
</div>
<span class="comment-copy">Or <code>next()</code> if they just want the first occurrence</span>
<span class="comment-copy">@Chris_Rands: it's not clear to me what they expect as output; I added the option.</span>
