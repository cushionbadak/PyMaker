<div class="post-text" itemprop="text">
<p>I'm using a Python to transmit two integers (range 0...4095) via SPI. The package seems to expect a byte array in form of <code>[0xff,0xff,0xff]</code>. 
So e.g. 1638(hex:666) and 1229(hex:4cd) should yield <code>[0x66,0x64,0xcd]</code>. 
So would an effective conversion look like as the mixed byte in the middle seems quite nasty? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can do it by left shifting and then bitwise OR'ing the two 12-bit values together and using the <code>int_to_bytes()</code> function shown below, which will work in Python 2.x. </p>
<p>In Python 3, the <code>int</code> type has a built-in method called <a href="https://docs.python.org/3/library/stdtypes.html#int.to_bytes" rel="nofollow noreferrer"><code>to_bytes()</code></a> that will do this and more, so in that version you wouldn't need to supply your own.</p>
<pre><code>def int_to_bytes(n, minlen=0):
    """ Convert integer to bytearray with optional minimum length. 
    """
    if n &gt; 0:
        arr = []
        while n:
            n, rem = n &gt;&gt; 8, n &amp; 0xff
            arr.append(rem)
        b = bytearray(reversed(arr))
    elif n == 0:
        b = bytearray(b'\x00')
    else:
        raise ValueError('Only non-negative values supported')

    if minlen &gt; 0 and len(b) &lt; minlen: # zero padding needed?
        b = (minlen-len(b)) * '\x00' + b
    return b

a, b = 1638, 1229  # two 12 bit values
v = a &lt;&lt; 12 | b  # shift first 12 bits then OR with second
ba = int_to_bytes(v, 3)  # convert to array of bytes
print('[{}]'.format(', '.join(hex(b) for b in ba)))  # -&gt; [0x66, 0x64, 0xcd]
</code></pre>
</div>
<span class="comment-copy">What is a mixed byte? What makes a byte look nastier than other bytes?</span>
<span class="comment-copy">To stay with the example: 0x64 contains information of both integer and by that it would yield 100 as decimal number. But I think Artyer has now already shown a good way how the information can be "redistributet"</span>
<span class="comment-copy">Thanks for the answer! Sorry that I initially forgot the tag to show, that I'm using python2. Is there an equivalent?</span>
<span class="comment-copy">Thanks again for the python2 workaround! Turns out that the SPI interface demands the actual byte array as input. But for my case 'ba' seems to have the wrong format. In the end I converted it with 'for b in ba: btar[i] = b, i+=1'</span>
<span class="comment-copy">Doochi: Sounds like the interface wants an integer array with 8-bit values in it. Turns out that's what <code>int_to_bytes()</code> creates internally (the <code>arr</code>) and converts into a Python <code>bytearray</code> at the end just, before it returnsâ€”so it would be easy to make it do what's needed rather than having to do it manually everytime you call it.</span>
