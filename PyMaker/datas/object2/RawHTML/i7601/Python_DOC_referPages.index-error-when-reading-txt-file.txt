<div class="post-text" itemprop="text">
<p>I'm new to python, and doing some elementary coding assignments on edx with the Jupityr notebook. I've encountered an index error on one of my assignments I can't quite figure out. The assignment has me read a text file one line at a time within a while loop, and print the output in a specific format. My code is as follows</p>
<pre><code>city_temp = mean_temp.readline().strip().split(',')

while city_temp:

    print (headings[0].title(), "of", city_temp[0], headings[2], "is", city_temp[2], "Celsius")
    city_temp = mean_temp.readline().strip().split(',')
</code></pre>
<p>The code runs through the entire file, but instead of ending the 'while' loop at the empty line, it continues to run and create an empty list. I'm not sure why this is happening and can't figure out a fix on my own. I've tried adding an 'if' test for an empty string and breaking, and also writing an additional line of empty text but neither option resulted in any success. If anybody has an idea I would greatly appreciate it!</p>
<p>I have an excerpt of what the txt file contains pasted below as well. There's additional cities, but I don't find it necessary to include every one:</p>
<pre><code>city,country,month ave: highest high,month ave: lowest low
Beijing,China,30.9,-8.4
</code></pre>
<p>This is the index error I was getting: (sorry for poor formatting, still learning</p>
<hr/>
<pre><code>IndexError                                Traceback (most recent call last)
&lt;ipython-input-18-6ea7e8e263b5&gt; in &lt;module&gt;()
      5 while city_temp:
      6 
----&gt; 7     print (headings[0].title(), "of", city_temp[0], headings[2], "is", city_temp[2], "Celsius")
      8     city_temp = mean_temp.readline().strip().split(',')
      9 

IndexError: list index out of range
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A better (more pythonic?) way to accomplish this would be:</p>
<pre><code>for line in mean_temp:
    city_temp = line.strip().split(',')
    try:
        print ("{} of {} {} is {} Celsius".format(headings[0].title(),
                                                  city_temp[0], 
                                                  headings[2],
                                                  city_temp[2]))
    except IndexError:
        break
</code></pre>
<p>You can read a file line by line by using the file object as an iterator.  This one shouldn't need the try block as the loop will end gracefully when it reaches an empty line. Also, put this code in a with statement:</p>
<pre><code>with open("myfile.txt", 'r') as mean_temp:
</code></pre>
<p>to make sure the file closes when you're done reading it.</p>
<p>Check out: <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/inputoutput.html</a></p>
<p>To clarify what's actually going on in the question:</p>
<p>When readline() reaches the end of a file, it returns an empty string.  When you use strip() on an empty string, it returns an empty list. When you use strip(',') or any separator on an empty string it returns a list with an empty string in it.  In this case, your while loop was checking the list. Since the list wasn't empty, it returned True and the while loop continued.  If you need the while loop, my recommendation would be:</p>
<pre><code>line = mean_temp.readline()
while line:
    city_temp = line.strip().split(',')
    print ("{} of {} {} is {} Celsius".format(headings[0].title(),
                                              city_temp[0], 
                                              headings[2],
                                              city_temp[2]))
    line = mean_temp.readline()
</code></pre>
<p>This is probably the cleanest way to while loop your way through a file line by line.  Pretty much does exactly the same thing as the for loop above.</p>
</div>
<div class="post-text" itemprop="text">
<p>I believe you need to check for empty list and not empty string</p>
<pre><code>city_temp = mean_temp.readline().strip().split(',')

while city_temp:

   print (headings[0].title(), "of", city_temp[0], headings[2], "is", city_temp[2], "Celsius")
   city_temp = mean_temp.readline().strip().split(',')
   if len(city_temp) == 0:
     break
</code></pre>
</div>
<span class="comment-copy">To actually solve your IndexError, edit into your question your entire error message, including the traceback.  city_temp should be an empty list if it's reading an empty line (strip() would remove any whitespace characters before the split occurs), so there's something else going on here.</span>
<span class="comment-copy">@AlanLeuthard I've attached the entire error I was getting before, I'm very curious to understand why this error is happening</span>
<span class="comment-copy">Ahhhh...just tested it.  'empty_string.split()' returns an empty list.  'empty_string.split(',')' returns a list with an empty string in it. The list isn't empty, so city_temp is True.   Change 'while city_temp' to 'while city_temp[0]' to check the emptiness of what's in the list.  Or use a try block.</span>
<span class="comment-copy">That did it! I never would have realized that without your help. Thanks again!</span>
<span class="comment-copy">I added to the answer BTW, for posterity.</span>
<span class="comment-copy">That's a great idea, thanks for the tip! Unfortunately the submission I make requires the while loop to be present, but I will definitely be using the try command in the future.</span>
<span class="comment-copy">Then keep the readline() initial condition and while loop.  Use the try: block for your print statement and you're done.</span>
<span class="comment-copy">fantastic! Thanks you so much for your help!</span>
<span class="comment-copy">I tried doing this, and I still got the index error.        IndexError                                Traceback (most recent call last)     &lt;ipython-input-12-16bbaf244ca2&gt; in &lt;module&gt;()   I do agree with your comment that I should be checking for an empty list though, I don't know why I didn't think of that.</span>
<span class="comment-copy">You are checking for an empty list.  If "city_temp" is empty, then it will present as False to the while loop.  The check for 0 length is actually redundant.</span>
