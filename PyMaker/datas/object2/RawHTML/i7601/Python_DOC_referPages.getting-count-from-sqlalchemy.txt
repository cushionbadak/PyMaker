<div class="post-text" itemprop="text">
<p>I have:</p>
<pre><code>res = db.engine.execute('select count(id) from sometable')
</code></pre>
<p>The returned object is <code>sqlalchemy.engine.result.ResultProxy</code>.</p>
<p>How do I get count value from <code>res</code>? </p>
<p>Res is not accessed by index but I have figured this out as:</p>
<pre><code>count=None
for i in res:
    count = res[0]
    break
</code></pre>
<p>There must be an easier way right? What is it? I didn't discover it yet.
Note: The db is a <code>postgres</code> db.</p>
</div>
<div class="post-text" itemprop="text">
<p>While the other answers work, SQLAlchemy provides a shortcut for scalar queries as <a href="http://docs.sqlalchemy.org/en/latest/core/connections.html#sqlalchemy.engine.ResultProxy.scalar" rel="noreferrer"><code>ResultProxy.scalar()</code></a>:</p>
<pre><code>count = db.engine.execute('select count(id) from sometable').scalar()
</code></pre>
<p><code>scalar()</code> fetches the first column of the first row and closes the result set, or returns None if no row is present. There's also <a href="http://docs.sqlalchemy.org/en/latest/orm/query.html#sqlalchemy.orm.query.Query.scalar" rel="noreferrer"><code>Query.scalar()</code></a>, if using the Query API.</p>
</div>
<div class="post-text" itemprop="text">
<p>what you are asking for called <em>unpacking</em>, <code>ResultProxy</code> is an <a href="https://docs.python.org/3/glossary.html#term-iterable" rel="nofollow noreferrer"><em>iterable</em></a>, so we can do</p>
<pre><code># there will be single record
record, = db.engine.execute('select count(id) from sometable')
# this record consist of single value
count, = record
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>ResultProxy</code> in SQLAlchemy (as documented here <a href="http://docs.sqlalchemy.org/en/latest/core/connections.html?highlight=execute#sqlalchemy.engine.ResultProxy" rel="nofollow noreferrer">http://docs.sqlalchemy.org/en/latest/core/connections.html?highlight=execute#sqlalchemy.engine.ResultProxy</a>) is an iterable of the columns returned from the database. For a <code>count()</code> query, simply access the first element to get the column, and then another index to get the first element (and only) element of that column.</p>
<pre><code>result = db.engine.execute('select count(id) from sometable')
count = result[0][0]
</code></pre>
<p>If you happened to be using the ORM of SQLAlchemy, I would suggest using the <code>Query.count()</code> method on the appropriate model as shown here: <a href="http://docs.sqlalchemy.org/en/latest/orm/query.html?highlight=count#sqlalchemy.orm.query.Query.count" rel="nofollow noreferrer">http://docs.sqlalchemy.org/en/latest/orm/query.html?highlight=count#sqlalchemy.orm.query.Query.count</a></p>
</div>
