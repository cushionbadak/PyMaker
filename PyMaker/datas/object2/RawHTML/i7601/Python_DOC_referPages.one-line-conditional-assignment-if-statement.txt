<div class="post-text" itemprop="text">
<p>This is the first question I am asking on this forum, so I welcome your feedback on making this more helpful to others.</p>
<p>Say I have this list:</p>
<pre><code>IDs = ['First', 'Second', 'Third']
</code></pre>
<p>and this dictionary:</p>
<pre><code>statistics = {('First', 'Name'):"FirstName", ('Second','Name'):"SecondName", ('Third','Name'):"ThirdName"}
</code></pre>
<p>Is there a shorter, easier to read one-liner than the following?</p>
<pre><code>firstID = IDs[[statistics[ID,'Name'] for ID in IDs].index('FirstName')]
</code></pre>
<p>Many thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>A more efficient (and probably more readable) approach would be this:</p>
<pre><code>firstID = next(id for id in IDs if statistics[(id,'Name')]=='FirstName')
</code></pre>
<p>This defines a <a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">generator</a> which checks the <code>IDs</code> in order, and yields values from <code>statistics</code> that equal <code>"FirstName"</code>. <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next(...)</code></a> is used to retrieve the first value from this iterator. If no matching name is found, this will raise <code>StopIteration</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code># If you ever plan to change the order of IDs:
firstID = IDs[IDs.index('First')]

# If you are literally just looking for the first ID in IDs:
firstID = IDs[0]
</code></pre>
<p>If you look at your code in these two lines:</p>
<pre><code>IDs = ['First', 'Second', 'Third']
firstID = IDs[[statistics[ID,'Name'] for ID in IDs].index('FirstName')]
</code></pre>
<p>The index of <code>'FirstName'</code> in your newly created list will ALWAYS be equal to the index of <code>'First'</code> in <code>IDs</code>. Because your list comprehension will iterate <code>IDs</code> in order and put the corresponding <code>dict</code> values in that order, you will always create <code>'FirstName'</code> at the same index as <code>'First'</code> appears in <code>IDs</code>. Therefore it is far more efficient simply to call it from that list using one of the above methods.</p>
</div>
<span class="comment-copy">@Jean-Fran√ßoisFabre: Looks valid to me, as long as you read the rest of the line. Not very efficient design, though.</span>
<span class="comment-copy">so unreadable I thought that it was incorrect!</span>
<span class="comment-copy">Any particular reason you put your dict in this direction, instead of switching the keys and values? If you need lookups in both directions, have you considered making a second, reversed dict?</span>
<span class="comment-copy">What do you wanna do? I do not understand your purpose..</span>
<span class="comment-copy">Why is this happening?</span>
<span class="comment-copy">Thank you, that is exactly what I was looking for!</span>
<span class="comment-copy">Thanks but I was looking to search for the ID ('First') of an element just by using its name ('FirstName')</span>
