<div class="post-text" itemprop="text">
<p>I'm defining a function that concatenates two strings given by the user, but the string returned by sys.stdin.readline() includes the newline character so my output doesn't look concatenated at all (technically, this output is still concatenated, but with a "\n" between the two strings.) How do I get rid of the newline?</p>
<pre><code>def concatString(string1, string2):
    return (string1 + string2)

str_1 = sys.stdin.readline()
str_2 = sys.stdin.readline()
print( "%s" % concatString(str_1, str_2))
</code></pre>
<p>console:</p>
<pre><code>hello
world
hello
world
</code></pre>
<p>I tried read(n) that takes in n number of characters, but it still appends the "\n"</p>
<pre><code>str_1 = sys.stdin.read(5) '''accepts "hello" '''
str_2 = sys.stdin.read(3) '''accepts "\n" and "wo", discards "rld" '''
</code></pre>
<p>console:</p>
<pre><code>hello
world
hello
wo
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just call <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer">strip</a> on each string you take from input to remove <em>surrounding</em> characters. Make sure you read the documentation linked to ensure what kind of <em>strip</em> you want to perform on the string. </p>
<pre><code>print("%s" % concatString(str_1.strip(), str_2.strip()))
</code></pre>
<p>Fixing that line and running your code: </p>
<pre><code>chicken
beef
chickenbeef
</code></pre>
<p>However, based on the fact that you are taking a user input, you should probably take the more idiomatic approach here and just use the commonly used input. Using this also does not require you to do any manipulation to strip unwanted characters. Here is the tutorial for it to help guide you: <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/inputoutput.html</a></p>
<p>Then you can just do: </p>
<pre><code>str_1 = input()
str_2 = input()

print("%s" % concatString(str_1, str_2))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can replace your concatString to be something like that :</p>
<pre><code>def concatString(string1, string2):
    return (string1 + string2).replace('\n','')
</code></pre>
</div>
<span class="comment-copy">Why don't you just use <code>input</code> (i.e. <code>raw_input</code> on python 2)?</span>
<span class="comment-copy">thank you! I just started learning python and I'm still familiarizing myself with the functions. cheers</span>
<span class="comment-copy">Just keep in mind that <code>strip()</code> with no arguments removes all whitespace and from both start and end of the string. Use <code>rstrip()</code> if only want whitespace removed from the end of the string, and use <code>rstrip('\n')</code> if only wan't to remove the new line character.</span>
<span class="comment-copy">this worked fine! thanks man!</span>
