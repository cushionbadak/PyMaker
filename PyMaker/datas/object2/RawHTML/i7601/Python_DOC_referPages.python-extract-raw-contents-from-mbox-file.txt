<div class="post-text" itemprop="text">
<p>In an <code>mbox</code> file I stored some e-mails: they can also use MIME. They must be extracted <em>as they are</em> in the <code>mbox</code> file, without modifications, with a <code>Python3</code> script. I tried the following code:</p>
<pre><code>import mailbox

for message in mailbox.mbox('mboxfile'):
    mstring = message.as_string()
    print(mstring)
</code></pre>
<p>This seems to print the e-mails' raw contents. The e-mails in the <code>mbox</code> don't always use <code>\r\n</code> for all their new lines: sometimes they have only <code>\n</code>. Anyway, in the <code>message.as_string()</code> output always <code>\n</code> is used, as specified in the <a href="https://docs.python.org/3/library/email.message.html#email.message.EmailMessage" rel="nofollow noreferrer">manual page</a>.</p>
<p>The manual also states (about <code>as_string()</code>):</p>
<blockquote>
<p>Note that this method is provided as a convenience and may not be the most useful way to serialize messages in your application, especially if you are dealing with multiple messages.</p>
</blockquote>
<p>I can't fully understand what this suggestion could mean. My <code>mbox</code> file obviously contains several e-mails and I would like to extract all them. Above all, I would like to obtain <strong>exactly</strong> the same raw e-mails stored there, without <strong>any</strong> modification and preserving for each line its <strong>original</strong> <code>\r\n</code> or <code>\n</code>, as if I were using <code>cat</code> on the <code>mbox</code> file. So:</p>
<ul>
<li>Is my code the correct way to do this?</li>
<li>If not, which would be the correct way?</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>If you want the contents without any modification, you can simply <code>print()</code> each <code>message</code>:</p>
<pre><code>import mailbox

for message in mailbox.mbox('mboxfile.mbox'):
    print(message)
</code></pre>
<p>Files with the <code>.mbox</code> extension are simply long <strong>plain text files</strong>: 
<a href="https://en.wikipedia.org/wiki/Mbox" rel="nofollow noreferrer">https://en.wikipedia.org/wiki/Mbox</a></p>
<hr/>
<p>Also check out the <code>email</code> module for handling email messages as an alternative: <a href="https://docs.python.org/3/library/email.message.html" rel="nofollow noreferrer">https://docs.python.org/3/library/email.message.html</a></p>
</div>
