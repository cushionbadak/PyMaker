<div class="post-text" itemprop="text">
<p>I have a list of n elements (divisible to 56). From each 'step' of 56 elements, I would like to remove specific elements on same indices in each step:. Let's say I have a list of 280 elements and I want to separate it by 56 elements, that will be 5 lists. And from each list to remove specific indices (index variable down below for example). </p>
<pre><code>index = [1, 8, 14, 21, 28, 35, 42, 49]

my_list = ['4','5', '3', '7'.... '1'] #at least 56 elements
len(my_list) # Out: 280, for example
new_l = []


for i in my_list[0:56]:
     if i not in index:
        new_l.append(i)
</code></pre>
<p>I would like to iterate repeatedly trough my_list a step with 56 elements and remove those specific indices from index variable. Thanks in advance and may the force be with you!</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems like you're trying to both chunk and filter a list at the same time.</p>
<pre><code>indices = [1, 3, 5]
s = 6
t = list(range(30))

[[v for j, v in enumerate(t[i:i+s]) if j not in indices] for i in range(0, len(t), s)]
# [[0, 2, 4], [6, 8, 10], [12, 14, 16], [18, 20, 22], [24, 26, 28]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a <em>list comprehension</em> generating indices and items concurrently with <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a>. Taking the <em>modulo</em> of the index on 56 gives you a number between 0 and 55 which can be used for the filtering based on the values in the <code>index</code> list:  </p>
<pre><code>new_l = [x for i, x in enumerate(my_list) if i%56 not in index]
</code></pre>
<p>Bear in mind that indexing starts from 0. In case your <code>index</code> list does not take this into account, you can pass a <code>start</code> of 1 to <code>enumerate</code>.</p>
<p><sub> <em>Pro-Tip</em>: Making <code>index</code> list a set will reduce the membership look-up complexity to <em>O</em>(1).</sub></p>
</div>
<div class="post-text" itemprop="text">
<p>I am not entirely sure I understood your question. The way I get it, you want to remove every 56th element in <code>my_list</code> from the <code>index</code> list. If this is correct, you should use the slice <code>[0::56]</code>, not <code>[0:56]</code>. The latter will give you the first 56 elements.</p>
<p>Here's a simplified example, removing every 2nd element, with both lists being identical so it's easier to keep track of what's happening:</p>
<pre><code>&gt;&gt;&gt; index = [1, 8, 14, 21, 28, 35, 42, 49]
&gt;&gt;&gt; my_list = [1, 8, 14, 21, 28, 35, 42, 49]
&gt;&gt;&gt; to_remove = set(my_list[0::2])  # {1, 14, 28, 42}
&gt;&gt;&gt; [x for x in index if x not in to_remove]
[8, 21, 35, 49]
</code></pre>
<p>In your case, you would use <code>to_remove = set(my_list[0::56])</code>. Here, <code>0</code> is the starting index (default is <code>0</code>), and <code>56</code> the interval between elements (default is <code>1</code>).</p>
<p>If, instead, you want to keep those of the 56th elements that are not in <code>index</code> (as your code suggests), you can use this:</p>
<pre><code>&gt;&gt;&gt; index_set = set(index)
&gt;&gt;&gt; [x for x in my_list[0::56] if x not in index_set]
</code></pre>
<hr/>
<p>Okay, I think <em>now</em> I got what you want: </p>
<pre><code>&gt;&gt;&gt; index = [1, 3]
&gt;&gt;&gt; my_list = list(range(20))
&gt;&gt;&gt; [x for n in range(0, len(my_list), 5) 
       for i, x in enumerate(my_list[n:n+5]) if i not in index]
[0, 2, 4, 5, 7, 9, 10, 12, 14, 15, 17, 19]
</code></pre>
</div>
<span class="comment-copy">By <b>step</b>, I think you mean <b>slice</b>. Both can not be used interchangeably.</span>
<span class="comment-copy">Give a real, simplified example.  Maybe a list of 20 elements and step of 7 or some such.  Give sample input and output as the result you want is not clear.</span>
<span class="comment-copy">That's it mate. Thanks for catching my thoughts, even that I couldn't explain them well :)</span>
<span class="comment-copy">Thanks mate, but that's not the case. Let's say I have 224 elements in my_list. I would like to iterate from [0:56] and on each iteration to remove elements corresponding to index list.</span>
<span class="comment-copy">You only want to check the slice <code>[0:56]</code> once or repeatedly?</span>
<span class="comment-copy">Yes, repeatedly :)</span>
<span class="comment-copy">@HristoStoychev Well, that's what the answer does. You don't need to take slices, just fold the current index using <code>mod 56</code> :)</span>
<span class="comment-copy">@HristoStoychev Did you try out the code?</span>
