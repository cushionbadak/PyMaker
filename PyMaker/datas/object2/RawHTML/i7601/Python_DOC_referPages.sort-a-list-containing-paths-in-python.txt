<div class="post-text" itemprop="text">
<p>I have a list <code>paths_list</code> which contains the path of files(images) of a particular folder . Example:</p>
<p><code>['/home/username/images/s1/4.jpg', '/home/username/images/s1/7.jpg', '/home/username/images/s1/6.jpg', '/home/username/images/s1/3.jpg', '/home/username/images/s1/5.jpg', '/home/username/images/s1/10.jpg', '/home/username/images/s1/9.jpg', '/home/username/images/s1/1.jpg', '/home/username/images/s1/2.jpg', '/home/username/images/s1/12.jpg', '/home/username/images/s1/11.jpg', '/home/username/images/s1/8.jpg']</code></p>
<p>I want to sort then in the order: <code>[/1.jpg ,2.jpg .....,/12.jpg]</code>
Neither sorting via <strong>length</strong> nor via <strong>alphabetical</strong> order is helping. What should be done here?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>sorted</code> with a <code>lambda</code>. For the sorting criteria, you can use <code>os</code> to first pull just the file name (using <a href="https://docs.python.org/3/library/os.path.html#os.path.basename" rel="noreferrer"><code>basename</code></a>), then you can split off just the filename less the extension (using <a href="https://docs.python.org/3/library/os.path.html#os.path.splitext" rel="noreferrer"><code>splitext</code></a>), lastly convert to <code>int</code> so you sort numerically instead of lexicographically.</p>
<pre><code>&gt;&gt;&gt; import os
&gt;&gt;&gt; l = ['/home/username/images/s1/4.jpg', '/home/username/images/s1/7.jpg', '/home/username/images/s1/6.jpg', '/home/username/images/s1/3.jpg', '/home/username/images/s1/5.jpg', '/home/username/images/s1/10.jpg', '/home/username/images/s1/9.jpg', '/home/username/images/s1/1.jpg', '/home/username/images/s1/2.jpg', '/home/username/images/s1/12.jpg', '/home/username/images/s1/11.jpg', '/home/username/images/s1/8.jpg']
&gt;&gt;&gt; sorted(l, key=lambda i: int(os.path.splitext(os.path.basename(i))[0]))
['/home/username/images/s1/1.jpg',
 '/home/username/images/s1/2.jpg',
 '/home/username/images/s1/3.jpg',
 '/home/username/images/s1/4.jpg',
 '/home/username/images/s1/5.jpg',
 '/home/username/images/s1/6.jpg',
 '/home/username/images/s1/7.jpg',
 '/home/username/images/s1/8.jpg',
 '/home/username/images/s1/9.jpg',
 '/home/username/images/s1/10.jpg',
 '/home/username/images/s1/11.jpg',
 '/home/username/images/s1/12.jpg']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use natural sorting (see <a href="https://stackoverflow.com/questions/4836710/does-python-have-a-built-in-function-for-string-natural-sort">this question</a>): clean code and good practice when sorting strings. </p>
<pre><code>from natsort import natsorted
l = ['/home/username/images/s1/4.jpg', '/home/username/images/s1/7.jpg', '/home/username/images/s1/6.jpg', '/home/username/images/s1/3.jpg', '/home/username/images/s1/5.jpg', '/home/username/images/s1/10.jpg', '/home/username/images/s1/9.jpg', '/home/username/images/s1/1.jpg', '/home/username/images/s1/2.jpg', '/home/username/images/s1/12.jpg', '/home/username/images/s1/11.jpg', '/home/username/images/s1/8.jpg']
natsorted(l)
</code></pre>
<p>gives</p>
<pre><code>['/home/username/images/s1/1.jpg',
'/home/username/images/s1/2.jpg',
'/home/username/images/s1/3.jpg',
'/home/username/images/s1/4.jpg',
'/home/username/images/s1/5.jpg',
'/home/username/images/s1/6.jpg',
'/home/username/images/s1/7.jpg',
'/home/username/images/s1/8.jpg',
'/home/username/images/s1/9.jpg',
'/home/username/images/s1/10.jpg',
'/home/username/images/s1/11.jpg',
'/home/username/images/s1/12.jpg']
</code></pre>
<p>Natural sorting sorts based on how you would read things on a computer screen (alphabetically and numerically), rather than how the computer reads the code. </p>
</div>
<div class="post-text" itemprop="text">
<p>The other answers here are good. But anyhow I would like to post mine with some explanations</p>
<pre><code>from os.path import basename,splitext
path_list = ['/home/username/images/s1/4.jpg', '/home/username/images/s1/7.jpg',
             '/home/username/images/s1/6.jpg', '/home/username/images/s1/3.jpg',
             '/home/username/images/s1/5.jpg', '/home/username/images/s1/10.jpg',
             '/home/username/images/s1/9.jpg', '/home/username/images/s1/1.jpg',
             '/home/username/images/s1/2.jpg', '/home/username/images/s1/12.jpg',
             '/home/username/images/s1/11.jpg', '/home/username/images/s1/8.jpg']

new_list = [splitext(basename(x))[0] for x in path_list]

fin_list = list(zip(path_list,new_list))

fin_list = [x[0] for x in sorted(fin_list,key=lambda x: int(x[1]))]

print(fin_list)
</code></pre>
<p>1) Creates a list which has only the file name. <code>1,2,..</code> and so on.</p>
<pre><code>new_list = [splitext(basename(x))[0] for x in path_list]
</code></pre>
<p><strong>Note:</strong> Why [0] ?? Because the output of each <code>splitext(basename(x))[0]</code> would be like this,</p>
<pre><code>('1','.jpg') , ('4','.jpg')
</code></pre>
<p>so <code>[0] 0th</code> index gives us just the filename!</p>
<p>2) <strong>zip</strong> each and every item from both iterables with each other and create a list. So this list has values like these,</p>
<pre><code>fin_list = list(zip(path_list,new_list))
#output
('/home/username/images/s1/4.jpg','4.jpg')
</code></pre>
<p>3) <code>[x[0] for x in sorted(fin_list,key=lambda x: int(x[1]))]</code> </p>
<p>This one creates a list from the sorted list of <code>fin_list</code> note <strong>key</strong> is the main thing here. Key will be the second item from tuple i.e <code>4,3,7,..</code> and such. Based  on which sorting happens.</p>
<p>finally your <strong>output</strong>:</p>
<pre><code>['/home/username/images/s1/1.jpg', '/home/username/images/s1/2.jpg',
 '/home/username/images/s1/3.jpg', '/home/username/images/s1/4.jpg',
 '/home/username/images/s1/5.jpg', '/home/username/images/s1/6.jpg', 
'/home/username/images/s1/7.jpg', '/home/username/images/s1/8.jpg',
 '/home/username/images/s1/9.jpg', '/home/username/images/s1/10.jpg',
 '/home/username/images/s1/11.jpg', '/home/username/images/s1/12.jpg']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use split on "/", take the last element, split on ".", take the first, and convert it too an int:</p>
<pre><code>l = ['/home/username/images/s1/4.jpg', '/home/username/images/s1/7.jpg', '/home/username/images/s1/6.jpg', '/home/username/images/s1/3.jpg', '/home/username/images/s1/5.jpg', '/home/username/images/s1/10.jpg', '/home/username/images/s1/9.jpg', '/home/username/images/s1/1.jpg', '/home/username/images/s1/2.jpg', '/home/username/images/s1/12.jpg', '/home/username/images/s1/11.jpg', '/home/username/images/s1/8.jpg']
sorted_list = sorted(l, key = lambda x: int(x.split("/")[-1].split(".")[0]))
</code></pre>
<p>output </p>
<pre><code>['/home/username/images/s1/1.jpg',
 '/home/username/images/s1/2.jpg',
 '/home/username/images/s1/3.jpg',
 '/home/username/images/s1/4.jpg',
 '/home/username/images/s1/5.jpg',
 '/home/username/images/s1/6.jpg',
 '/home/username/images/s1/7.jpg',
 '/home/username/images/s1/8.jpg',
 '/home/username/images/s1/9.jpg',
 '/home/username/images/s1/10.jpg',
 '/home/username/images/s1/11.jpg',
 '/home/username/images/s1/12.jpg']
</code></pre>
</div>
<span class="comment-copy">so <b>how</b> do you want to sort? what is the rule? if there is a rule it can be done.</span>
<span class="comment-copy">is there a reason for replacing the <code>split('.')</code> with <code>splitext</code>? Multiple dots in the basename?</span>
<span class="comment-copy">I just figured since I was already using <code>os</code> for <code>basename</code> I'd use <code>splitext</code> to make it more clear what that split was doing. <code>split('.')</code> would have worked just fine too. Yeah that is also a good catch, <code>splitext</code> will work properly for multiple dots in the filename too, although not in this particular case, since they want the value to be numbers they can sort numerically.</span>
<span class="comment-copy">I guess you should also add the point that unlike <code>.sort()</code> , <code>sorted()</code> doesn't sort the list in place so we need to save the list . for example : <code>l = sorted(l, key=lambda i: int(os.path.splitext(os.path.basename(i))[0]))</code></span>
<span class="comment-copy">I guess <code>natsorted</code> doesn't sort the list in place and we need to save the sorted list to some new list.</span>
<span class="comment-copy">That is correct. It is also true for all other answers that use <code>sorted()</code></span>
<span class="comment-copy">I guess you should also add the point that unlike <code>.sort()</code> , <code>sorted()</code> doesn't sort the list in place so we need to save the list . for example : <code>l = sorted(l, key=lambda i: int(os.path.splitext(os.path.basename(i))[0]))</code></span>
<span class="comment-copy">@Varun Thanks, didn't think about that. :)</span>
