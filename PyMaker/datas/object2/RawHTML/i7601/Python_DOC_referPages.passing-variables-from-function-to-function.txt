<div class="post-text" itemprop="text">
<p>I have a question about passing variables from function to another function by using this code:</p>
<pre><code>def Hello():
    good = "Nice"
    return good

def Bye():
    print (good)

Hello()
Bye()
</code></pre>
<p>It returns "Global name "good" is not defined"</p>
<p>How can I solve this problem?
Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want the variable <code>good</code> to be available to other functions without having to run the function <code>Hello</code>, you should declare good as a global function. </p>
<pre><code>def Hello():
    global good
    good = 'Nice'
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to learn about scopes. The variable <code>good</code> exists only within the scope of the function <code>Hello</code> - outside this function the variable is not known.</p>
<p>In your case, you should store the return value of <code>Hello</code> in a variable - and then pass this variable to the function <code>Bye</code>:</p>
<pre><code>def Hello():
    good = "Nice"
    return good

def Bye(g):
    print (g)

g = Hello()
Bye(g)
</code></pre>
<p>From the <a href="https://docs.python.org/3/reference/executionmodel.html#resolution-of-names" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p>A scope defines the visibility of a name within a block. If a local variable is defined in a block, its scope includes that block. If the definition occurs in a function block, the scope extends to any blocks contained within the defining one, unless a contained block introduces a different binding for the name.</p>
<p>[...]</p>
<p>When a name is not found at all, a NameError exception is raised. If the current scope is a function scope, and the name refers to a local variable that has not yet been bound to a value at the point where the name is used, an UnboundLocalError exception is raised. UnboundLocalError is a subclass of NameError.</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>There is a simpler solution that follows more closely the original code:</p>
<pre><code>def Hello():
    good = "Nice"
    return good

def Bye():
    print (good)

good = Hello()
Bye()
</code></pre>
<p>Python keeps variables defined in a local scope local, therefore you cannot read <code>good</code> outside of your function unless you explicitly return it (and store it). Python also doesn't allow you to write to variables defined in a larger scope unless you pass them as an input argument or use the <code>global</code> directive. But the OP didn't ask to write to good from within another function. Python DOES allow to read variables from a larger scope. So all you need to do is to store the variable <code>good</code> in your larger scope, it is been returned already by the OP's <code>Hello</code> function anyway.</p>
</div>
<div class="post-text" itemprop="text">
<p>With this you have to use global variables which are accessible for every function in every slide. Here is a video which will show you how to complete the thing you are looking for. <a href="https://youtu.be/lcEm0R7mwJk" rel="nofollow noreferrer">https://youtu.be/lcEm0R7mwJk</a>. Hope you get the answer you are looking for.</p>
<p>Denis Granulo.</p>
</div>
<span class="comment-copy">Thank you so much. I had a quite big code that didn't work because of that, but now it totally works!!  Thanks so much!!</span>
<span class="comment-copy">Glad it helped you.</span>
