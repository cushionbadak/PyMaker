<div class="post-text" itemprop="text">
<p>If this is a duplicate question, I am sorry. I have spent a good hour trying to find the answer and tested a couple theories with no success. Without posting my whole code I'm working on, I'll just post the snippet. </p>
<p>Basically I need to print these for loop statements all into one line to run for each employee. </p>
<p>i.e. 'Employee Sam is 31 years old, their job title is Data Analyst and they make $90,000 annually. Their 2017 bonus will be $2,700."</p>
<pre><code># Employee List
names = ['Sam', 'Chris', 'Jose', 'Luis', 'Ahmad']
ages = ['31', '34', '30', '28', '25']
jobs = ['Data Analyst', 'SEO Python Genius', 'Data Analyst', 'Interchange 
Analyst', 'Data Analyst']
salaries = ['$90,000', '$120,000', '$95,000', '$92,000', '$90,000']
bonuses = ['$2,700', '$3,600', '$2,850', '$2,750', '$2,700']


# this for-loop goes through name list
for name in names:
    print ("Employee %s" % name)

for age in ages:
    print ("is %s" % age, "years old")

for job in jobs:
    print (", their job title is %s" % job)

for salary in salaries:
    print (" and they make %s" % salary, "annually.")

for bonus in bonuses:
    print ("Their 2017 bonus will be %s." % salary)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> to iterate collectively through parallel lists.</p>
<pre><code>for name, age, job, salary, bonus in zip(names, ages, jobs, salaries, bonuses):
    print ("Employee %s" % name)
    print ("is %s years old" % age)
    print (", their job title is %s" % job)
    print (" and they make %s annually" % salary)
    print ("Their 2017 bonus will be %s." % bonus)
</code></pre>
<p>This will still each part of the message on a separate line, because they are separate print statements. Instead, you could combine them into one <code>print</code>:</p>
<pre><code>for name, age, job, salary, bonus in zip(names, ages, jobs, salaries, bonuses):
    print ("Employee %s is %s years old. Their job title is %s, and "
           "they make %s annually. Their 2017 bonus will be %s."
           %(name, age, job, salary, bonus))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>zip</code> these together and, ideally, use a format string for cutting down the overall lines since they all use the same format:</p>
<pre><code>emps = zip(names, ages, jobs, salaries, bonuses)
fmt = ("Employee {} is {} years old, their job " 
       "title is {} and they make {} annually. " 
       "Their 2017 bonus will be {}.")
for emp in emps:
    print(fmt.format(*emp))
</code></pre>
<p>Tweak the format in <code>fmt</code> accordingly. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could also just access the lists by index if you know for sure that all lists have the same length.</p>
<pre><code>for i in range(len(names)):
    print(names[i], ages[i], jobs[i], salaries[i], bonuses[i])
</code></pre>
<p>I personally don't think this makes the code any less readable compared to using <code>zip</code>.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1663807/how-can-i-iterate-through-two-lists-in-parallel">How can I iterate through two lists in parallel?</a></span>
<span class="comment-copy">Great answer. Probably you should also add <code>end=" "</code> argument in the <code>print</code> function to get a one-line output.</span>
<span class="comment-copy">@SamChats Yes, that would make sense. Probably easier just to combine the <code>print</code>s into one statement.</span>
