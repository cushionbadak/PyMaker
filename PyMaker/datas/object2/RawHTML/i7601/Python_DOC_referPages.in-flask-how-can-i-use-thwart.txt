<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/23600286/python-mysql-connector-database-query-with-s-fails">Python MySQL Connector database query with %s fails</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I've been struggling to implement user registration func with flask. Here is the code I've done.</p>
<pre><code>import os
from flask import Flask, render_template, flash, request, url_for, redirect, session
from content_management import Content
from dbconnect import connection
from wtforms import Form, BooleanField, TextField, PasswordField, validators
from passlib.handlers.sha2_crypt import sha256_crypt
from MySQLdb import escape_string as thwart
import gc

def register_page():
    try:
        form = RegistrationForm(request.form)
        if request.method == "POST" and form.validate():
            username = form.username.data
            email = form.email.data
            password = sha256_crypt.encrypt((str(form.password.data)))

            c, conn = connection()

            x = c.execute("SELECT * FROM users WHERE username = (%s)", (thwart(username)))
            if int(x) &gt; 0:
                flash("That username is already taken, please choose another")
                return render_template("register.html", form = form)
            else:
                c.execute("INSERT INTO users (username, email, password, tracking) VALUES (%s, %s, %s, %s)", (thwart(username), thwart(password), thwart(email), thwart("/introduction-to-python-programming/")))
                conn.commit()
                flash("Thanks for registering")
                c.close()
                conn.close()
                gc.collect()

                session['login_in'] = True
                session['username'] = username

                return redirect(url_for('dashboard'))
        return render_template("register.html", form = form)

    except Exception as e:
        return(str(e))
</code></pre>
<p>When I fill the form and hit submit button, error occurs like as follows.</p>
<blockquote>
<p>not all arguments converted during string formatting</p>
</blockquote>
<p>I guess this happens because of <strong>thwart</strong>.
When I insert <code>print(thwart(username))</code>, output <strong>b'username'</strong>.</p>
<p>But there is no value of <strong>int(x)</strong>.</p>
<pre><code>x = c.execute("SELECT * FROM users WHERE username = (%s)", (thwart(username)))
</code></pre>
<p>The above seems not working because of <code>(thwart(username))</code>, I'm not sure.</p>
<p>Would you tell me how I can fix it?</p>
</div>
<div class="post-text" itemprop="text">
<p>To denote a tuple with a item, there should be a trailing comma before the closing parenthesis:</p>
<pre><code>&gt;&gt;&gt; x = (1)  # without trailing command =&gt; `(1) == 1`
&gt;&gt;&gt; type(x)
&lt;type 'int'&gt;
&gt;&gt;&gt; x = (1,)  # with trailing comma
&gt;&gt;&gt; type(x)
&lt;type 'tuple'&gt;
</code></pre>
<hr/>
<pre><code>x = c.execute("SELECT * FROM users WHERE username = (%s)", (thwart(username),))
</code></pre>
<p>or you can use a list:</p>
<pre><code>x = c.execute("SELECT * FROM users WHERE username = (%s)", [thwart(username)])
</code></pre>
<hr/>
<p><strong>SIDE NOTE</strong>
According to <a href="https://www.python.org/dev/peps/pep-0249" rel="nofollow noreferrer">DB API v2</a>, <a href="https://www.python.org/dev/peps/pep-0249/#id15" rel="nofollow noreferrer"><code>cursor.execute*(..)</code></a> return value is not defined. You'd better to use use <code>cursor.fetch*()</code> to fetch results.</p>
</div>
<span class="comment-copy">Thanks a million. When I change my code as above, it works well. I can't thank you enough. I'm still a little vague. What is the difference between two of them?</span>
<span class="comment-copy">@YuiryKozlenko, <code>(1)</code> is not a tuple with <code>1</code> as its item, but just a <code>1</code>. In other word, <code>(1) == 1</code>.</span>
<span class="comment-copy">@YuiryKozlenko, If you're still unclear about tuple literal, please read a documentation about <a href="https://docs.python.org/3/library/stdtypes.html#tuple" rel="nofollow noreferrer"><code>tuple</code></a></span>
