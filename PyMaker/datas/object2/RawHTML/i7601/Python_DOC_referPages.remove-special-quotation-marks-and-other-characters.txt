<div class="post-text" itemprop="text">
<p>I am trying to download articles using <code>Article</code> from <code>newspaper</code>, and trying to tokenize the words using <code>nltk</code> <code>word_tokenizer</code>. The problem is, when I try to print the parsed article text, some of these articles have special quotation marks like <code>“</code>, <code>”</code>, <code>’</code>, which aren't filtered out by the tokenizer, as it would a regular <code>'</code> and <code>"</code>.</p>
<p>Is there a way to replace these special quotes with normal quotes, or better yet remove all possible speical characters that the tokenizer may miss out on?</p>
<p>I tried to remove these special characters by explicitly mentioning them in code, but it gives me the error <code>Non-UTF-8 code starting with '\x92'</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using the <a href="https://pypi.python.org/pypi/Unidecode/" rel="nofollow noreferrer">unidecode</a> package would normally replace these characters with utf-8 ones.</p>
<pre><code>from unidecode import unidecode
text = unidecode(text)
</code></pre>
<p>A drawback, however, is that you would also change some characters (e.g. accentuated ones) which you may want to keep. If that is the case, an option is to use <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a> to specifically erase (or replace) some pre-identified special characters:</p>
<pre><code>import re
exotic_quotes = ['\\x92'] # fill this up
text = re.sub(exotic_quotes, "'", text) # changing the second argument to fill the kind of quote you want to replace the exotic ones with
</code></pre>
<p>I hope this helps !</p>
</div>
<span class="comment-copy">Thanks! This works perfectly. Is there any way to completely remove any words with these non utf-8 characters? Because for my specific application, I don't really need any special characters, or punctuation, just the actual utf-8 words from the article.</span>
<span class="comment-copy">You're very welcome. Using <code>unidecode</code> should replace all non utf-8 characters, but keep punctuation signs, etc.. If you want to keep letters (and whitespaces) only, use a regular expression : <code>text = re.sub('[^A-Za-z ]', '', text)</code>. And if you want to get rid of words containing any non-utf8 character, use more complex regular expressions !</span>
