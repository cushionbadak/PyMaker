<div class="post-text" itemprop="text">
<p>Looks like I am out of luck here... sorry to ask you folks. :(</p>
<p>I am trying to do the following:</p>
<pre><code>import multiprocessing
import time

class TestClass(multiprocessing.Process):
    def __init__(self):
        super(TestClass, self).__init__()
        print("Initializing the test class...")
        self.VARIABLE = 0

    def run(self):
        while self.VARIABLE &lt; 10:
            print("Sleeping... Variable now: " + str(self.VARIABLE))
            time.sleep(1)

    def setVar(self, VALUE):
        print("Setting new value from " + str(self.VARIABLE) + " to " + str(VALUE) + " ...")
        self.VARIABLE = VALUE


if __name__ == "__main__":
    TESTPROCESS = TestClass()
    TESTPROCESS.start()
    time.sleep(5)
    TESTPROCESS.setVar(5)
    time.sleep(5)
    TESTPROCESS.setVar(10)
</code></pre>
<p>However, in the result, it doesn't update the self.VARIABLE in run(), but only in setVar().</p>
<pre><code>c:\Python35\python.exe Test.py
Initializing the test class...
Sleeping... Variable now: 0
Sleeping... Variable now: 0
Sleeping... Variable now: 0
Sleeping... Variable now: 0
Sleeping... Variable now: 0
Setting new value from 0 to 5 ...
Sleeping... Variable now: 0
Sleeping... Variable now: 0
Sleeping... Variable now: 0
Sleeping... Variable now: 0
Sleeping... Variable now: 0
Setting new value from 5 to 10 ...
Sleeping... Variable now: 0
Sleeping... Variable now: 0
[...]
</code></pre>
<p>I thought, "self" would indicate, that this are "global" parameters for this class/object?</p>
<p>Even when I modify the run() function to have a "while true: --&gt; break" loop, the same issue still occurs. Where is my thinking error?</p>
<p>Thanks in advance...</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.start" rel="nofollow noreferrer"><code>TESTPROCESS.start()</code></a> causes the <code>run()</code> method to be executed in a separate process; that's kind of the entire point.  As a result, you do not have one <code>TestClass</code> instance; you have two, and they exist in separate processes.  One of these instances is updated by your calls to <code>setVar</code>, and the other (due to being a different object) is not.  If you want to be able to communicate between processes, look into <a href="https://docs.python.org/3/library/multiprocessing.html#pipes-and-queues" rel="nofollow noreferrer">pipes and queues</a>.</p>
</div>
<span class="comment-copy"><i>facepalm</i> Yes. You are right... I use that already in a more complex scenario but for the sake of complexity I wanted to keep it simple. - Too simple here. - Mea culpa. :)</span>
