<div class="post-text" itemprop="text">
<pre><code>class A(object):
    __A = None
    def get_a(self):
        return self.__A
    def set_a(self, value):
        self.__A = value

class B(A):
    def method_b(self, value):
        self.set_a(value)

class C(A):
    def method_c(self)
         self.get_a()
</code></pre>
<p>Someone can to explain me how can i to catch installed value in method_b inside my 'C' class method? </p>
<p>P.S. In this variant i just getting nothing.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python isn't Java; you don't need setters &amp; getters here: just access the attributes directly.</p>
<p>There are three problems with your code. </p>
<ol>
<li><p><code>C.method_c()</code> has no <code>return</code> statement, so it returns <code>None</code>. </p></li>
<li><p>You are using <code>__</code> <a href="https://docs.python.org/3/tutorial/classes.html#private-variables" rel="nofollow noreferrer">name mangling</a> when that's exactly what you <em>don't</em> want. </p></li>
<li><p>In <code>A.set_a()</code> you want to set a class attribute, but your assignment instead creates an instance attribute which shadows the class attribute. </p></li>
</ol>
<p>Here's a repaired version.</p>
<pre><code>class A(object):
    _A = 'nothing'
    def get_a(self):
        return self._A
    def set_a(self, value):
        A._A = value

class B(A):
    def method_b(self, value):
        self.set_a(value)

class C(A):
    def method_c(self):
        return self.get_a()

b = B()
c = C()
print(c.method_c())
b.method_b(13)
print(c.method_c())
</code></pre>
<p><strong>output</strong></p>
<pre><code>nothing
13
</code></pre>
<hr/>
<p>Here's a slightly more Pythonic version:</p>
<pre><code>class A(object):
    _A = 'nothing'

class B(A):
    def method_b(self, value):
        A._A = value

class C(A):
    pass

b = B()
c = C()
print(c._A)
b.method_b(13)
print(c._A)
</code></pre>
</div>
<span class="comment-copy"><code>def method_b(self, 13):</code> - this is invalid syntax.</span>
<span class="comment-copy">1. You can't use numbers in functions definition. 2. Why would you get 13 in class C where you only set it in class B while class C has nothing to do with class B?</span>
<span class="comment-copy">You should try to create an <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> of what you're trying to achieve by doing this</span>
<span class="comment-copy">Sorry my bad. I slightly changed the code, let's say it's dynamic value.</span>
