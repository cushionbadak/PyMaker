<div class="post-text" itemprop="text">
<p>There are two options which create arrays:</p>
<pre><code>x = numpy.array([[5, 5, 3, 2], [2, 1, 0, 9], [3, 7, 6, 0]])
y = numpy.array([(5, 5, 3, 2), (2, 1, 0, 9), (3, 7, 6, 0)])
</code></pre>
<p>But they have both same outputs.</p>
<pre><code>[[5 5 3 2]
[2 1 0 9]
[3 7 6 0]]
</code></pre>
<p>They have both same type:</p>
<pre><code>&lt;class 'numpy.ndarray'&gt;  
</code></pre>
<p>Which one is better and what is the difference?</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Python</strong> has <a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer"><strong>tuples</strong></a> (with round brackets, like <code>(1,4,2,5)</code>) and <strong>lists</strong> (with square brackets, like <code>[1,4,2,5]</code>). Tuples are <em>immutable</em> ordered collections: once constructed, neither the length nor the elements can change (one can however alter the <em>state</em> of the individual elements given these are mutable). Both are used <a href="https://stackoverflow.com/questions/626759/whats-the-difference-between-lists-and-tuples">for different purposes</a>.</p>
<p>But if you construct a <strong>2d numpy array</strong>, then both will result in <strong>the same array</strong>, since numpy will simply read the elements <em>in</em> the list/tuple and copy the data into an array. It is only if for instance the rows have a different length, that numpy will construct an object array, and then it will reference to the tuples/lists.</p>
</div>
<div class="post-text" itemprop="text">
<p>From numpy's point of view - there is no difference between the two options: the resulting arrays are "identical" in everything.</p>
</div>
<span class="comment-copy">For a numeric array like that they are interchangeable.  One's a list of lists the other a list of tuples.  When creating a structured array, the list of tuples is required, but that may be a more advanced topic</span>
