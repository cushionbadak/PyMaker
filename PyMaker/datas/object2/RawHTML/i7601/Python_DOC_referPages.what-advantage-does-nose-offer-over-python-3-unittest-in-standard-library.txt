<div class="post-text" itemprop="text">
<p>In a new project (starting with no unit test suite), supporting Python 3 only, <strong>what good reasons are there to use <a href="https://nose.readthedocs.io/" rel="nofollow noreferrer">the <code>nose</code> library</a></strong>?</p>
<p>I understand that ‘nose’ began when the Python standard library had no easy way for the test runner to discover unit tests.</p>
<p>Starting with Python 2.7 and Python 3.2, standard library <code>unittest</code> now <a href="https://docs.python.org/3/library/unittest.html#unittest-test-discovery" rel="nofollow noreferrer">has the <code>discover</code> sub-command</a>, removing that reason to choose <code>nose</code> for Python 2.7 or Python 3 code.</p>
<p>So, <strong>what remaining reasons are there</strong> to prefer <code>nose</code> in a new Python 3 code base?</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://nose.readthedocs.io/" rel="nofollow noreferrer">documentation site for nose</a> has a notice:</p>
<blockquote>
<p>Nose has been in maintenance mode for the past several years […]. New projects should consider using Nose2, py.test, or just plain unittest/unittest2.</p>
</blockquote>
<p>This implies that the developers of <code>nose</code> don't see any special advantage over the suggested alternatives.</p>
</div>
<span class="comment-copy">None. The very page you linked to says “New projects should consider using Nose2, py.test, or just plain unittest/unittest2”.</span>
