<div class="post-text" itemprop="text">
<p>I don't understand why this doesn't work. I want to print the <strong>highest negative value</strong> from a series of user-inputted negative ints. E.g., user inputs: -1, -5, -3, program returns -1. But my program (below) is returning -5. Why is this? Is my code totally messed up? I know I can use a list and max way around it but I don't want to over-complicate the program.</p>
<pre><code>x = 0
done = False
while not done:
    y = int(input("Enter another number (0 to end): "))
    num = y
    if num != 0:
        if num &lt; x:
            x = num
    else:
        done = True
print(str(x))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your operator should be <strong>greater than</strong> <code>&gt;</code>, not less than <code>&lt;</code> in order to take the maximum value. Initializing to <code>-float('inf')</code> ensures the first negative value passes the condition:</p>
<pre><code>x = -float('inf')
while True:
    num = int(input("Enter another number (0 to end): "))
    if num != 0:
        if num &gt; x:
            x = num
    else:
        break
print(x)
</code></pre>
<p>You can drop the <code>done</code> variable by using a <code>while True...break</code> instead.</p>
<hr/>
<blockquote>
<p>I know I can use a list and max way around it but I don't want to
  over-complicate the program.</p>
</blockquote>
<p>You can do this in a single line using <strong><a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer"><code>iter</code></a></strong> with your <strong>sentinel</strong> <code>0</code> to call <code>input</code> repeatedly, collecting an <em>iterable</em> of negative numbers. <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map(int, ...)</code></a> converts the iterable items to ints while <a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow noreferrer"><code>max</code></a> returns the maximum:</p>
<pre><code>max(map(int, iter(input, '0')))
</code></pre>
<hr/>
<p><em>Demo</em>:</p>
<pre><code>&gt;&gt;&gt; m = max(map(int, iter(input, '0')))
-3
-1
-4
-2
0
&gt;&gt;&gt; m
-1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Well the <em>highest</em> negative value is the same as the <em>maximum</em> value.</p>
<p>Now your loop invariant should be that <code>x</code> is the <em>thus far observed maximum value</em>. But you actually store the thus far observed <em>minimum value</em>: indeed if the new value is <em>less</em> than, you assign it to <code>x</code>.</p>
<p>So a quick fix is to change to comparison to <code>&gt;</code>. But now the initial <em>maximum</em> will be <code>0</code>. We can change that, by setting the initial value to for instance <code>None</code>, and if <code>x</code> is <code>None</code>, set <code>x</code> to the entered value.</p>
<pre><code>x = None
done = False
while not done:
    y = int(input("Enter another number (0 to end): "))
    num = y
    if num != 0:
        if x is None or num &gt; x:
            x = num
    else:
        done = True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You never compare the inputted value with the largest-negative-value so far. You also set your initial value to zero, which is not a suitable result value. One way to handle these is to replace your lines</p>
<pre><code>if num &lt; x
    x = num
</code></pre>
<p>with</p>
<pre><code>if num &lt; 0 and (x == 0 or x &lt; num &lt; 0):
  x = num
</code></pre>
<p>There are other ways, of course, including setting <code>x</code> to the smallest possible negative number. That would simplify your comparisons, since in my code above there is a check just for <code>x</code> never being set before.</p>
<p>Note that if there is no negative number input at all, the result is zero. That may or may not be what you want.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just use inbuilt <code>max</code> function to find maximum number</p>
<pre><code>numbers = []
done = False
while not done:
    number = int(input("Enter another number (0 to end): "))
    if number &lt; 0:
        numbers.append(number)
    else:
        done = True

print(max(numbers)) 
</code></pre>
</div>
<span class="comment-copy">Because -5 &lt; -1?  That's what the highest negative value means. Do you want the smallest then? Reverse your operations</span>
<span class="comment-copy">You are setting x to the lowest number, not the highest. Reverse the comparator in <code>if num &lt; x</code>.</span>
<span class="comment-copy">" I know I can use a list and max way around it but I don't want to over-complicate the program" <i>Your</i> way over-complicates the program. Using <code>max</code> would be a single line of code.</span>
<span class="comment-copy">This is nice code. Thank you for explaining it and showing the one line example. That's impressive!</span>
<span class="comment-copy">Good solution. Thank you! I was not familiar with using None but I will remember it now for future reference.</span>
