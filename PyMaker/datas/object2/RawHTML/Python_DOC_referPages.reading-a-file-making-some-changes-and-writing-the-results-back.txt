<div class="post-text" itemprop="text">
<p>I have an input file (File A) as shown below:</p>
<pre><code>Start of the program
This is my first program ABCDE
End of the program
</code></pre>
<p>I receive the program name <code>'PYTHON'</code> as input, and I need to replace <code>'ABCDE'</code> with it. So I read the file to find the word <code>'program'</code> and then replace the string after it as shown below. I have done that in my program. Then, I would like to write the updated string to the original file without changing lines 1 or 3 - just line 2.</p>
<pre><code>Start of the program
This is my first program PYTHON
End of the program
</code></pre>
<p>My code:</p>
<pre><code>fileName1 = open(filePath1, "r")
search = "program"
for line in fileName1:
    if search in line:
        line = line.split(" ")
        update = line[5].replace(line[5], input)
        temp = " ".join(line[:5]) + " " + update
        fileName1 = open(filePath1, "r+")
        fileName1.write(temp)
        fileName1.close()
    else:
        fileName1 = open(filePath1, "w+")
        fileName1.write(line)
        fileName1.close()
</code></pre>
<p>I am sure this can be done in an elegant way, but I got a little confused with reading and writing as I experimented with the above code. The output is not as expected.  What is wrong with my code?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this with a simple replace:</p>
<p><strong>file_a.txt</strong></p>
<pre><code>Start of the program`
This is my first program ABCDE`
End of the program`
</code></pre>
<p><strong>code:</strong></p>
<pre><code>with open('file_a.txt', 'r') as file_handle:
    file_content = file_handle.read()

orig_str = 'ABCDE'
rep_str = 'PYTHON'

result = file_content.replace(orig_str, rep_str)
# print(result)

with open('file_a.txt', 'w') as file_handle:
    file_handle.write(result)
</code></pre>
<p>Also if just replacing <code>ABCDE</code> is not going to work (it may appear in other parts of file as well), then you can use more specific patterns or even a regular expression to replace it more accurately.</p>
<p>For example, here we just replace <code>ABCDE</code> if it comes after <code>program</code>:</p>
<pre><code>with open('file_a.txt', 'r') as file_handle:
    file_content = file_handle.read()

orig_str = 'ABCDE'
rep_str = 'PYTHON'

result = file_content.replace('program {}'.format(orig_str),
                              'program {}'.format(rep_str))

# print(result)

with open('file_a.txt', 'w') as file_handle:
    file_handle.write(result)
</code></pre>
</div>
<span class="comment-copy">You should not name your variables <code>input</code> as it shadows the <code>input()</code> function within Python itself. Perhaps try <code>user_input</code> on this line <code>update = line[5].replace(line[5], input)</code>, unless you were doing this intentionally? In which case you should still have <code>input("Some prompt for users")</code></span>
<span class="comment-copy">These kinds of text processing or "transpiling" is usually done with creating a tree-like data structure (called abstract syntax tree or "AST") from the original file, then changing that tree in whatever form you want, and then converting that back to text again. ----- even in simpler use cases like yours, it's better to first load the data to RAM (in any structure that fits your needs), make the changes and then again write it back to file.</span>
<span class="comment-copy">Thank you very much Amir. It worked fine.</span>
<span class="comment-copy">I'm glad it worked. So please kindly accept the answer</span>
