<div class="post-text" itemprop="text">
<p>I have the following code:</p>
<pre><code>l = ['-1.2', '0.0', '1']

x = 100.0
for i in l:
    if i &lt; x:
        x = i
print x
</code></pre>
<p>The code should find the lowest value in my list (-1.2) but instead when i print 'x' it finds the value is still 100.0
Where is my code going wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>To find the minimum value of a list, you might just as well use <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer"><code>min</code></a>:</p>
<pre><code>x = min(float(s) for s in l) # min of a generator
</code></pre>
<p>Or, if you want the result as a string, rather than a float, use a <a href="https://docs.python.org/3/howto/sorting.html#key-functions" rel="nofollow noreferrer">key function</a>:</p>
<pre><code>x = min(l, key=float)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You aren't comparing integers, you're comparing strings. Strings compare lexicographically -- meaning character by character -- instead of (as you seem to want) by converting the value to a float. Make your list hold numbers (floats or integers, depending on what you want), or convert the strings to floats or integers in your loop, before you compare them.</p>
<p>You may also be interested in the <code>min</code> builtin function, which already does what your current loop does (without the converting, that is.)</p>
</div>
<div class="post-text" itemprop="text">
<p>It looks like you want to convert the list to a list of numbers</p>
<pre><code>&gt;&gt;&gt; foo = ['-1.2', '0.0', '1']
&gt;&gt;&gt; bar = map(float, foo)
&gt;&gt;&gt; bar
[-1.2, 0.0, 1.0]
&gt;&gt;&gt; min(bar)
-1.2
</code></pre>
<p>or if it really is strings you want, that you want to use <code>min</code>'s <code>key</code> argument</p>
<pre><code>&gt;&gt;&gt; foo = ['-1.2', '0.0', '1']
&gt;&gt;&gt; min(foo, key=float)
'-1.2'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python has a built in <code>min</code> function to help you with finding the smallest.</p>
<p>However, you need to convert your list items to numbers before you can find the lowest integer( what, isn't that float? )</p>
<pre><code>min(float(i) for i in l)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>l</code> is a list of strings. When you put numbers between single quotes like that, you are creating strings, which are just a sequence of characters. To make your code work properly, you would have to do this:</p>
<pre><code>l = [-1.2, 0.0, 1]  # no quotation marks

x = 100.0
for i in l:
    if i &lt; x:
        x = i
print x
</code></pre>
<p>If you must use a list of strings, you can try to let Python try to make a number out of each string. This is similar to <a href="https://stackoverflow.com/questions/2622994/python-finding-lowest-integer/2623004#2623004">Justin's answer</a>, except it understands floating-point (decimal) numbers correctly.</p>
<pre><code>l = ['-1.2', '0.0', '1']

x = 100.0
for i in l:
    inum = float(i)
    if inum &lt; x:
        x = inum
print x
</code></pre>
<hr/>
<p>I hope that this is code that you are writing to learn either Python or programming in general. If this is the case, great. However, if this is production code, consider using Python's built-in functions.</p>
<pre><code>l = ['-1.2', '0.0', '1']
lnums = map(float, l)  # turn strings to numbers
x = min(lnums)  # find minimum value
print x
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Cast the variable to a float before doing the comparison:</p>
<pre><code>if float(i) &lt; float(x):
</code></pre>
<p>The problem is that you are comparing strings to floats, which will not work.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>number_list = [99.5,1.2,-0.3]

number_list.sort()

print number_list[0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>list1 = [10,-4,5,2,33,4,7,8,2,3,5,8,99,-34]

print(list1)

max_v=list1[0]

min_v=list1[0]

for x in list1:
    if x&gt;max_v:
        max_v=x
        print('X is {0} and max is {1}'.format(x,max_v))
for x in list1:
    if x&lt;min_v:
        min_v=x
        print('X is {0} and min is {1}'.format(x,min_v))

print('Max values is ' + str(max_v))
print('Min values is ' + str(min_v))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Or no float conversion at all by just specifying floats in the list.</p>
<pre><code>l = [-1.2, 0.0, 1]
x = min(l)
</code></pre>
<p>or</p>
<pre><code>l = min([-1.2, 0.0, 1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You have to start somewhere the correct code should be: </p>
<p><strong>The code to return the minimum value</strong> </p>
<p><code>
l = [ '0.0', '1','-1.2']
x = l[0]
for i in l:
    if i &lt; x:
        x = i
print x
</code></p>
<p>But again it's good to use directly integers instead of using quotations <code>''</code> </p>
<p><strong>This way</strong>! </p>
<p><code>
l = [ 0.0, 1,-1.2]
x = l[0]
for i in l:
    if i &lt; x:
        x = i
print x
</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>l = [-1.2, 0.0, 1]

x = 100.0
for i in l:
    if i &lt; x:
        x = i
print (x)
</code></pre>
<p>This is the answer, i needed this for my homework, took your code, and i deleted the " " around the numbers, it then worked, i hope this helped </p>
</div>
<div class="post-text" itemprop="text">
<p>You have strings in the list and you are comparing them with the number 100.0.</p>
</div>
<div class="post-text" itemprop="text">
<p>'''Functions'''</p>
<pre><code>import math

#functions
def min3(x1,x2,x3):
    if x1&lt;= x2 and x1&lt;= x3:
        return x1
    elif x2&lt;= x1 and x2&lt;= x3:
        return x2
    elif x3&lt;= x2 and x3&lt;= x1:
          return x3
print(min3(4, 7, 5))

print(min3(4, 5, 5))

print(min3(4, 4, 4))

print(min3(-2, -6, -100))

print(min3("Z", "B", "A"))
</code></pre>
</div>
<span class="comment-copy">It looks like you want "list = [1.2, 0.0, 1]" instead of quoted values. (Also lower case L is a bad variable name... it looks too much like a one).</span>
<span class="comment-copy">An integer is a whole number like 4, 20, 0, and -2. Numbers like -1.2 are not integers. Do you understand that? How does this relate to what you want to do here?</span>
<span class="comment-copy"><code>min</code> has a <code>key</code> argument for cases similar to this, with usage like <code>x = min(l, key=float)</code>. It is slightly different than the code posted in that it returns an item from the original iterable (i.e., the string <code>'-1.2'</code>) rather than the resultant thing (i.e. the float <code>-1.2</code>).</span>
<span class="comment-copy">Good point, Mike.</span>
<span class="comment-copy">@OlivierVerdier Is there a particular reason that you do the <code>float(s) for s in l</code> part? Why can't you just do <code>min(l)</code>? I just tried that out and it works. What would be the difference?</span>
<span class="comment-copy">Note that int('1.2') and int('0.0') will both be an error.</span>
<span class="comment-copy">why not float ?</span>
<span class="comment-copy">Thanks, serves me right for trying to answer a question early on a Monday :)</span>
<span class="comment-copy">Please add some explanation to complete the answer. With no explanation and just code, this answer is not helpful as a solution (not to mention if it even solves the problem).</span>
