<div class="post-text" itemprop="text">
<p>I'm trying to put together a really simple module with one .py source file in it, and have already run into a roadblock. I was going to call it <code>scons-config</code> but <code>import scons-config</code> doesn't work in Python. I found <a href="https://stackoverflow.com/questions/711884/python-naming-conventions-for-modules">this SO question</a> and looked at <a href="http://www.python.org/dev/peps/pep-0008/" rel="noreferrer">PEP8 style guide</a> but am kind of bewildered, it doesn't talk about two-word-name conventions.</p>
<p>What's the right way to deal with this?</p>
<ul>
<li>module name: SconsConfig? scons_config? sconsconfig? scons.config?</li>
<li>name of the single .py file in it: scons-config.py? scons_config.py?</li>
</ul>
<p><strong>edit:</strong> I did see "the use of underscores is discouraged" and that left me at a dead end: should I use "sconsconfig" or "scons_config" (I guess the other ones are out)?</p>
</div>
<div class="post-text" itemprop="text">
<p>If you have to, always use underscores <code>_</code>.</p>
<p>Using a dot <code>.</code> would not even work, otherwise </p>
<pre><code>from scons.config import whatever
</code></pre>
<p>would break.</p>
<p>But <a href="https://www.python.org/dev/peps/pep-0008/#package-and-module-names" rel="noreferrer">PEP 8</a> clearly describes it:</p>
<blockquote>
<p>Package and Module Names</p>
<p>Modules should have <strong>short, all-lowercase names</strong>.  <em>Underscores</em> <strong>can be used</strong>
        in the module name if it <strong>improves readability</strong>.  Python <strong>packages</strong> should
        also have short, all-lowercase names, although the <strong>use of underscores is
        discouraged</strong>.</p>
</blockquote>
<p><strong>UPDATE:</strong></p>
<p>To directly target your question: I think <code>sconsconfig</code> is fine. It is not too long and quite readable. </p>
<p>But honestly, I don't think anyone will blame you if you use underscores and your code will run with either decision. There is always a certain level where you should not care <em>that</em> much anymore.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, the module name is the same as the name of the single .py file.  In Python-speak, a collection of several .py files is a package.</p>
<p>PEP-8 discourages breaking up package names with underscores.  A quick peak at my site-packages directory shows that multiword names are commonly just run together (e.g., setuptools, sqlalchemy)</p>
<p>Module names (that is, file names) may be broken up by underscores (and I usually do this, because I hate namesthatruntogethersoyoucanhardlyreadthem).</p>
<p>Stick with lower-case only (per PEP-8).  This avoids problems when going from case-sensitive to case-insensitive filesystems and vice versa.</p>
</div>
<div class="post-text" itemprop="text">
<p>Aside from PEP-8, you can also check out how the native Python modules deal with this issue. </p>
<p>If you were to compare <a href="https://docs.python.org/2/py-modindex.html" rel="noreferrer">the native modules of Python 2</a> to <a href="https://docs.python.org/3/py-modindex.html" rel="noreferrer">that of Python 3</a>, you would see that the new tendency with the official devs is to avoid uppercase and underscores. For example, <code>ConfigParser</code> in Python 2 becomes <code>configparser</code> in Python 3.</p>
<p>Looking at this, the best course of action would be to avoid uppercase and underscores, and just join the words together, i.e. <code>sconsconfig</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>-</code> is a no go. The symbol is used for minus operator. The same is true in most programming languages. Use <code>_</code> or otherwise nothing at all.</p>
</div>
<span class="comment-copy">A single <code>.py</code> is a module...</span>
<span class="comment-copy">I saw "use of underscores is discouraged" and it left me at a dead end.</span>
<span class="comment-copy">@Jason S: Well, use it if readability really suffers or think about another name ;) It is <i>only</i> discouraged, not forbidden.</span>
<span class="comment-copy">"There is always a certain level where you should not care that much anymore." True but there are almost always consequences for these kinds of decisions and if you're a beginner like me it's daunting. Thanks!</span>
<span class="comment-copy">It is worth noting that the first example - using the dot - isn't terrible. It'd be an example of a namespace package as described in <a href="http://www.python.org/dev/peps/pep-0420/" rel="nofollow noreferrer">PEP 420</a>. It isn't exactly what the author is trying to achieve though with a simple module.</span>
<span class="comment-copy">Example: app_pool VS apppool</span>
