<div class="post-text" itemprop="text">
<p>I'm trying to maximize a specific window with python...</p>
<p>Here is the deal:
I have a script that opens 2 firefox windows (selenium rc), and I need to maximize the second window, the last one that opens...
How can I do it?</p>
<p>I'm using this command</p>
<pre><code>window = win32gui.GetForegroundWindow()
win32gui.MoveWindow(window, 0, 0, 1440, 900, True)
</code></pre>
<p>that works perfectly, but only with the focus window... and the second window of firefox witch opens with the script doesnt get focused...</p>
</div>
<div class="post-text" itemprop="text">
<p>This should work</p>
<pre><code>import win32gui, win32con

hwnd = win32gui.GetForegroundWindow()
win32gui.ShowWindow(hwnd, win32con.SW_MAXIMIZE)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't want to install separate modules you could use the inbuilt <a href="https://docs.python.org/3/library/ctypes.html" rel="nofollow noreferrer">ctypes</a> module.  The usage is not that different from the accepted answer above, except that you interact with the DLLs themselves and don't have to install anything else.</p>
<p>First here is the code:</p>
<pre><code>import ctypes

user32 = ctypes.WinDLL('user32')

SW_MAXIMISE = 3

hWnd = user32.GetForegroundWindow()

user32.ShowWindow(hWnd, SW_MAXIMISE)
</code></pre>
<p>Now the explanation:</p>
<ul>
<li>Get ctypes module.</li>
<li>Get the appropriate runtime, for reference use the <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms633548(v=vs.85).aspx" rel="nofollow noreferrer">Windows documentation</a> and look under "Requirements".</li>
<li>Set the <code>SW_MAXIMISE</code> value to 3 since this is the value (indicated in the <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms633548(v=vs.85).aspx" rel="nofollow noreferrer">documentation</a>) to set the window to maximum.</li>
<li><code>hWnd = user32.GetForegroundWindow()</code> retrieves the foreground window (the window that is in front of all the others) - see <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms633505(v=vs.85).aspx" rel="nofollow noreferrer">here</a> for the complete description on the function.</li>
<li>Use <code>ShowWindow()</code> to control the windows show state.  This takes two arguments, the handle to the window (defined above as <code>hWnd</code>) and how the window should be seen (set as 3 in <code>SW_MAXIMISE = 3</code>).  You can see the <a href="https://msdn.microsoft.com/en-us/library/windows/desktop/ms633505(v=vs.85).aspx" rel="nofollow noreferrer">documentation</a> for a more complete list of the various options.</li>
</ul>
<p>You could of course put this into a function to make it easy to use.</p>
<hr/>
<p><strong>Another approach:</strong></p>
<p>Since in this case there are no worries about being cross platform, you could build a C or C++ extension instead.</p>
<p><em>Benefits:</em></p>
<ul>
<li>no ctypes (which is sometimes worth considering, see the <a href="https://stackoverflow.com/questions/8067171/ctypes-vs-c-extension">answers to this question</a>)</li>
</ul>
<p><em>Downfalls:</em></p>
<ul>
<li>needs to be compiled (since it's on Windows only, you only need to worry about compiling for x32 bit and x64 bit)</li>
<li><em>must</em> be a module (i.e. you can't intergrate it in one file)</li>
<li>requires a minimum knowlege of either C or C++ as well as the Python api itself</li>
</ul>
<p>The actual function to be called should not be that difficult:</p>
<pre><code>static PyObject * max_win(PyObject *self, PyObject *args) {
    ShowWindow(GetForegroundWindow(), SW_MAXIMISE);
    return Py_BuildValue(""); // Return nothing
}
</code></pre>
<p><sub>Note that this is only a fragment of the actual code needed</sub></p>
</div>
<span class="comment-copy">TypeError: function takes exactly 3 arguments (2 given)</span>
<span class="comment-copy">sorry, it's <code>ShowWindow</code> instead of <code>SetWindowLong</code> -- updated above</span>
