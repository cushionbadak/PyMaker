<div class="post-text" itemprop="text">
<p>How can i open file in python and write to it multiple times?</p>
<p>I am using speech recognition, and i want one file to change its contents based on what i say.
Other application needs to be able to read this file.
Is there way to do this, or i need to open/close for each write?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can just keep the file object around and write to it whenever you want. You might need to <a href="https://docs.python.org/3/library/io.html#io.IOBase.flush" rel="nofollow noreferrer"><code>flush</code></a> it after each write to make things visible to the outside world.</p>
<p>If you do the writes from a different process, just open the file in append mode ("a").</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>f = open('myfile.txt','w')
f.write('Hi')
f.write('Hi again!')
f.write('Is this thing on?')
# do this as long as you need to
f.seek(0,0) # return to the beginning of the file if you need to
f.close() # close the file handle
</code></pre>
</div>
<span class="comment-copy">How does the "other application" know you're done talking?  What triggers it to read this file?</span>
<span class="comment-copy">It doesnt, i am using voice recognition with games, so i send keypress to application (wolfenstein:enemy territory) and that keypress executes contents of file in question</span>
<span class="comment-copy">Thank you, flush() is what i needed.</span>
<span class="comment-copy">Possibly need an <code>f.seek(0,0)</code> to rewind back to the beginning.</span>
<span class="comment-copy">How about a flush each time? This should not hurt the performance when the input is so slow.</span>
<span class="comment-copy">Never depend on calling <code>close</code> explicitly. <b>Always</b> use a context manager (<code>with open('myfile.txt', 'w') as f</code>).</span>
<span class="comment-copy">Never say never.</span>
<span class="comment-copy">Never say, "never say never."</span>
