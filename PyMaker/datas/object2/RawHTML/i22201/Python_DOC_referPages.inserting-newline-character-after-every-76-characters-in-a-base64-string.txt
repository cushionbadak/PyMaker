<div class="post-text" itemprop="text">
<p>I am trying to convert bitmap images into a base64 string before inserting it into database as binary blobs. The base64 string needs to be encoded in such a way that their is a new line character after every 76 characters. What is the best pythonic way of doing this?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>'\n'.join(s[pos:pos+76] for pos in xrange(0, len(s), 76))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>For Python version 3:</strong></p>
<pre><code>import base64
base64.encodebytes(s)
</code></pre>
<p><a href="https://docs.python.org/3/library/base64.html#base64.encodebytes" rel="nofollow noreferrer">https://docs.python.org/3/library/base64.html#base64.encodebytes</a></p>
<blockquote>
<p>Encode the bytes-like object s, which can contain arbitrary binary data, and return bytes containing the base64-encoded data, with newlines (b'\n') inserted after every 76 bytes of output, and ensuring that there is a trailing newline, as per RFC 2045 (MIME).</p>
</blockquote>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; print(base64.encodebytes(b'a' * 100).decode())
YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFh
YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ==

&gt;&gt;&gt; 
</code></pre>
<p><strong>For Python version 2:</strong></p>
<pre><code>import base64
base64.encodestring(s)
</code></pre>
<p><a href="http://docs.python.org/library/base64.html" rel="nofollow noreferrer">http://docs.python.org/library/base64.html</a></p>
<blockquote>
<p>Encode the string s, which can contain arbitrary binary data, and return a string containing one or more lines of base64-encoded data. encodestring() returns a string containing one or more lines of base64-encoded data always including an extra trailing newline ('\n').</p>
</blockquote>
<p>The docs for version 2 could certainly be written more clearly, but it does what you want.</p>
<p>Example:</p>
<pre><code>&gt;&gt;&gt; print base64.encodestring('a'*100)
YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFh
YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYQ==

&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want line break, don't use the straight base64 package, use the one provided in email:</p>
<pre><code>import email
print email.base64MIME.encode(your_string)
</code></pre>
<p>It do split the encoded string each 76 characters</p>
</div>
<div class="post-text" itemprop="text">
<p>Since Base64 mandates a fixed line length (64 or 76 characters, depending on <a href="http://en.wikipedia.org/wiki/Base64#Variants_summary_table" rel="nofollow noreferrer">which version you look at</a>), the library that produces the Base64 String should already do that (or at least have an option to do that).</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use strict encoding. That will add a new line</p>
<pre><code>'your_string_goes_here'.encode('base64', 'strict')
</code></pre>
</div>
<span class="comment-copy">This adds a newline. Try a longer string &amp; you'll see. Also, "...'strict', meaning that encoding errors raise a UnicodeError)" <a href="https://docs.python.org/2/library/stdtypes.html?highlight=encode#str.encode" rel="nofollow noreferrer">docs.python.org/2/library/â€¦</a></span>
