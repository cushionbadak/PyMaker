<div class="post-text" itemprop="text">
<p>I'm using windows and linux machines for the same project. The default encoding for stdin on windows is cp1252 and on linux is utf-8.</p>
<p>I would like to change everything to uft-8.
Is it possible? How can I do it?</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this by not relying on the implicit encoding when printing things. Not relying on that is a good idea in any case -- the implicit encoding is only used when printing to stdout and when stdout is connected to a terminal.</p>
<p>A better approach is to use <code>unicode</code> everywhere, and use <code>codecs.open</code> or <code>codecs.getwriter</code> everywhere. You wrap <code>sys.stdout</code> in an object that automatically encodes your unicode strings into UTF-8 using, for example:</p>
<pre><code>sys.stdout = codecs.getwriter('utf-8')(sys.stdout)
</code></pre>
<p>This will only work if you use unicode everywhere, though. So, use unicode everywhere. Really, everywhere.</p>
</div>
<div class="post-text" itemprop="text">
<p>This is an old question, but just for reference.</p>
<p>To read <code>UTF-8</code> from <code>stdin</code>, use:</p>
<pre><code>UTF8Reader = codecs.getreader('utf8')
sys.stdin = UTF8Reader(sys.stdin)

# Then, e.g.:
for _ in sys.stdin:
    print _.strip()
</code></pre>
<p>To write <code>UTF-8</code> to <code>stdout</code>, use:</p>
<pre><code>UTF8Writer = codecs.getwriter('utf8')
sys.stdout = UTF8Writer(sys.stdout)

# Then, e.g.:
print 'Anything'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python automatically detects the encoding of stdin. The simplest way I have found to specify an encoding when automatic detection isn't working properly is to use the <a href="https://docs.python.org/3/using/cmdline.html#envvar-PYTHONIOENCODING" rel="noreferrer">PYTHONIOENCODING</a> environment variable, as in the following example:</p>
<pre><code>pipeline | PYTHONIOENCODING="UTF-8" /path/to/your-script.py
</code></pre>
<p>For more information about encoding detection and this variable on different platforms you can look at the <a href="https://docs.python.org/3/library/sys.html#sys.stdin" rel="noreferrer">sys.stdin</a> documentation.</p>
</div>
<div class="post-text" itemprop="text">
<p>In python 3.7 and newer you can use<code>sys.stdin.reconfigure(encoding='utf-8')</code></p>
<h1>refer</h1>
<p>py2:<a href="https://stackoverflow.com/a/4546129/7721525">https://stackoverflow.com/a/4546129/7721525</a></p>
<p>py3:<a href="https://stackoverflow.com/a/16549381/7721525">https://stackoverflow.com/a/16549381/7721525</a></p>
</div>
<span class="comment-copy">What about stdin?</span>
<span class="comment-copy">stdin isn't decoded automatically, so you always have to do this yourself. And assuming the input is UTF-8 is probably a bad idea, but there's <code>codecs.getreader('utf-8')(sys.stdin)</code> if you really want to.</span>
<span class="comment-copy">Note that in contrast to Python 2, Python 3 actually automatically decodes stdin: <a href="http://docs.python.org/3/library/sys.html#sys.stdin" rel="nofollow noreferrer">docs.python.org/3/library/sys.html#sys.stdin</a> -- this behavior can be changed as outlined in the docs.</span>
<span class="comment-copy">Is there any way in Python 3 to forcibly change the encoding of STDIN regardless of the environment variables?</span>
<span class="comment-copy">This doesn't work in Python 3.</span>
