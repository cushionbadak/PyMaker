<div class="post-text" itemprop="text">
<p><code>contacts.remove((name,ip))</code></p>
<p>I have the ip and it's unique. I want to remove this tuple from contacts according to the ip and no need to name.</p>
<p>I just tried this <code>contacts.remove((pass,ip))</code>, but I encountered an error.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>contacts = [(name, ip) for name, ip in contacts if ip != removable_ip]
</code></pre>
<p>or</p>
<pre><code>for x in xrange(len(contacts) - 1, -1, -1):
    if contacts[x][1] == removable_ip:
        del contacts[x]
        break # removable_ip is allegedly unique
</code></pre>
<p>The first method rebinds <code>contacts</code> to a newly-created list that excludes the desired entry. The second method updates the original list; it goes backwards to avoid being tripped up by the <code>del</code> statement moving the rug under its feet.</p>
</div>
<div class="post-text" itemprop="text">
<p>Since the <code>ip</code> to remove is unique, you don't need all the usual precautions about modifying a container you're iterating on -- thus, the simplest approach becomes:</p>
<pre><code>for i, (name, anip) in enumerate(contacts):
  if anip == ip:
    del contacts[i]
    break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This answers my not created question. Thanks for the explanation, but let me summarize and generalize the answers for multiple deletion and Python 3.</p>
<pre><code>list = [('ADC', 3),
        ('UART', 1),
        ('RemoveMePlease', 42),
        ('PWM', 2),
        ('MeTooPlease', 6)]

list1 = [(d, q)
         for d, q in list
         if d not in {'RemoveMePlease', 'MeTooPlease'}]

print(list1)

for i, (d, q) in enumerate(list):
    if d in {'RemoveMePlease', 'MeTooPlease'}:
        del(list[i])

print(list)
</code></pre>
<p><a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">The corresponding help topic</a> </p>
</div>
<span class="comment-copy"><code>pass</code> is a statement, therefore it can't be used in an expression this way. And <code>None</code> is an actual value, so it also won't work.</span>
