<div class="post-text" itemprop="text">
<p>I have a script where I launch with popen a shell command.
The problem is that the script doesn't wait until that popen command is finished and go continues right away.</p>
<pre><code>om_points = os.popen(command, "w")
.....
</code></pre>
<p>How can I tell to my Python script to wait until the shell command has finished?</p>
</div>
<div class="post-text" itemprop="text">
<p>Depending on how you want to work your script you have two options. If you want the commands to block and not do anything while it is executing, you can just use <code>subprocess.call</code>.</p>
<pre><code>#start and block until done
subprocess.call([data["om_points"], "&gt;", diz['d']+"/points.xml"])
</code></pre>
<p>If you want to do things while it is executing or feed things into <code>stdin</code>, you can use <code>communicate</code> after the <code>popen</code> call.</p>
<pre><code>#start and process things, then wait
p = subprocess.Popen([data["om_points"], "&gt;", diz['d']+"/points.xml"])
print "Happens while running"
p.communicate() #now wait plus that you can send commands to process
</code></pre>
<p>As stated in the documentation, <code>wait</code> can deadlock, so communicate is advisable.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can you use <code>subprocess</code> to achieve this.</p>
<pre><code>import subprocess

#This command could have multiple commands separated by a new line \n
some_command = "export PATH=$PATH://server.sample.mo/app/bin \n customupload abc.txt"

p = subprocess.Popen(some_command, stdout=subprocess.PIPE, shell=True)

(output, err) = p.communicate()  

#This makes the wait possible
p_status = p.wait()

#This will give you the output of the command being executed
print "Command output: " + output
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What you are looking for is the <a href="http://docs.python.org/library/subprocess.html#subprocess.Popen.wait" rel="noreferrer"><code>wait</code></a> method.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen.wait" rel="nofollow noreferrer">wait()</a> works fine for me. The subprocesses p1, p2 and p3 are executed at the same. Therefore, all processes are done after 3 seconds.   </p>
<pre><code>import subprocess

processes = []

p1 = subprocess.Popen("sleep 3", stdout=subprocess.PIPE, shell=True)
p2 = subprocess.Popen("sleep 3", stdout=subprocess.PIPE, shell=True)
p3 = subprocess.Popen("sleep 3", stdout=subprocess.PIPE, shell=True)

processes.append(p1)
processes.append(p2)
processes.append(p3)

for p in processes:
    if p.wait() != 0:
        print("There was an error")

print("all processed finished")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let the command you are trying to pass be </p>
<pre><code>os.system('x')
</code></pre>
<p>then you covert it to a statement</p>
<pre><code>t = os.system('x')
</code></pre>
<p>now the python will be waiting for the output from the commandline so that it could be assigned to the variable <code>t</code>.</p>
</div>
<span class="comment-copy">Check out the docs on <a href="http://docs.python.org/library/subprocess.html#convenience-functions" rel="nofollow noreferrer">subprocess.call</a></span>
<span class="comment-copy">But if I type:  om_points = os.popen(data["om_points"]+" &gt; "+diz['d']+"/points.xml", "w").wait() I receive this error: Traceback (most recent call last):   File "./model_job.py", line 77, in &lt;module&gt;     om_points = os.popen(data["om_points"]+" &gt; "+diz['d']+"/points.xml", "w").wait() AttributeError: 'file' object has no attribute 'wait'  What is the problem?  Thanks again.</span>
<span class="comment-copy">You did not click on the link I provided. <code>wait</code> is a method of the <code>subprocess</code> class.</span>
<span class="comment-copy">wait can deadlock if the process writes to stdout and nobody reads it</span>
