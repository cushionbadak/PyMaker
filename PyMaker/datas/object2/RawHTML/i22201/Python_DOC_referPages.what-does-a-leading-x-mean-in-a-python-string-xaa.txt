<div class="post-text" itemprop="text">
<p>What is difference between <code>'aa'</code> and <code>'\xaa'</code>? What does the <code>\x</code> part mean? And which chapter of the Python documentation covers this topic?</p>
</div>
<div class="post-text" itemprop="text">
<p>The leading <code>\x</code> escape sequence means the next two characters are interpreted as hex digits for the character code, so <code>\xaa</code> equals <code>chr(0xaa)</code>, i.e., <code>chr(16 * 10 + 10)</code> -- a small raised lowercase <code>'a'</code> character.</p>
<p>Escape sequences are documented in a short table <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="noreferrer">here</a> in the Python docs.</p>
</div>
<div class="post-text" itemprop="text">
<p>That's unicode character escaping. See "Unicode Constructors" on <a href="http://www.python.org/dev/peps/pep-0100/" rel="nofollow noreferrer">PEP 100</a></p>
</div>
<span class="comment-copy">chr(170) can be interpreted without reference to a particular encoding only in the context of Python 3.X, and it's actually a "feminine ordinal indicator" ... a peculiarity of Spanish orthography, along with its sibling U+00BA "masculine ordinal indicator".</span>
<span class="comment-copy">@John: in IronPython, like in Python 3, <code>'\xaa'</code> is a Unicode string. Didn't you happen to see the "IronPython" tag on the question?  (btw, I resent your assertion that, e.g., <code>2ª</code> for "second [[feminine]]" is "a peculiarity of Spanish orthography" -- I mean, for example, what's Italian, my native language, chopped liver?!).</span>
<span class="comment-copy">what do you do if you want to have more than 2 hex digits</span>
<span class="comment-copy">No it isn't. It's for defining a specific byte in a <code>str</code>, not for making a unicode code point, which is done with the <code>u'\u...</code> notation.</span>
<span class="comment-copy">@Mike, @Jake: It's for BOTH. '\xaa' is a str object. u'\xaa' is a unicode object. <code>print repr(unichr(170))</code> produces <code>u'\xaa'</code></span>
<span class="comment-copy">Whoops. Grossly misread. Thanks for the heads up.</span>
<span class="comment-copy">@Mike Graham, it's <b>IronPython</b> for goodness sake -- otherwise-unadorned strings are <b>unicode</b> (just like in Jython and Python 3).  <i>Read the tags</i>!  (Also goes for John Machin, but I already mentioned that to him wrt his comment on <i>my</i> answer).</span>
<span class="comment-copy">Oops. I seem not to have noticed the IronPython tag. <i>blush</i>. The concepts in my comment are still pretty pertinent—<code>\x</code> and <code>\u</code> remain somewhat different things.</span>
