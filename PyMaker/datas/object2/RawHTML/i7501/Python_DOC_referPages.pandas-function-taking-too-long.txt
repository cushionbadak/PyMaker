<div class="post-text" itemprop="text">
<p>I am trying to extract the top level URLs and ignore the paths. I am using the code below:</p>
<pre><code>for row in Mexico['Page URL']:
    parsed_uri = urlparse( 'http://www.one.com.mx/furl/Conteúdo Raiz/Meu' )
    Mexico['SubDomain'] = '{uri.scheme}://{uri.netloc}/'.format(uri=parsed_uri)
</code></pre>
<p>This script has been running for the past hour. When I ran it, it gave the following warning:</p>
<pre><code>/anaconda/lib/python3.6/site-packages/ipykernel_launcher.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  This is separate from the ipykernel package so we can avoid doing imports until
</code></pre>
<p>I would appreciate it if anyone could advise on a quicker way, perhaps pointers on the method the 'warning' suggests</p>
</div>
<div class="post-text" itemprop="text">
<p>Calling a Python function once for each row of a Series can be very slow if the Series is very long. The key to speeding this up is replacing the multiple function calls with (ideally) one vectorized function call. </p>
<p>When using Pandas, that means rewriting the Python function (e.g. <code>urlparse</code>) in terms of <a href="https://pandas.pydata.org/pandas-docs/stable/text.html#working-with-text-data" rel="nofollow noreferrer">vectorized string functions</a>.</p>
<p>Since <code>urlparse</code> is a <a href="https://github.com/python/cpython/blob/master/Lib/urllib/parse.py#L359" rel="nofollow noreferrer">fairly complicated</a> function, rewriting <code>urlparse</code> would be pretty hard. However, in your case we have the advantage of knowing that all the urls that we care about begin with <code>https://</code> or <code>http://</code>. So we don't need <code>urlparse</code> in its full-blow generality. We can perhaps make do with a much simpler rule: <em>The netloc is whatever characters follow <code>https://</code> or <code>http://</code> until the end of the string or the next <code>/</code>, whichever comes first</em>.
If that is true, then </p>
<pre><code>Mexico['Page URL'].str.extract('(https?://[^/]+)', expand=False)
</code></pre>
<p>can extract all the netlocs from the entire Series <code>Mexico['Page URL']</code> without looping and without multiple <code>urlparse</code> function calls. This will be much faster when <code>len(Mexico)</code> is big.</p>
<hr/>
<p>For example,</p>
<pre><code>import pandas as pd

Mexico = pd.DataFrame({'Page URL':['http://www.one.com.mx/furl/Conteúdo Raiz/Meu',
                                   'https://www.one.com.mx/furl/Conteúdo Raiz/Meu']})

Mexico['SubDomain'] = Mexico['Page URL'].str.extract('(https?://[^/]+)', expand=False)
print(Mexico)
</code></pre>
<p>yields</p>
<pre><code>                                        Page URL               SubDomain
0   http://www.one.com.mx/furl/Conteúdo Raiz/Meu   http://www.one.com.mx
1  https://www.one.com.mx/furl/Conteúdo Raiz/Meu  https://www.one.com.mx
</code></pre>
</div>
<span class="comment-copy">For a start move the <code>urlparse</code> call outside the loop. It does the same thing each time. You dont even use <code>row</code> in your loop, so why have the loop? Did you enter your code wrong?</span>
<span class="comment-copy">Thanks for assisting. The URLs are different for the dataframe. If I move this out of the loop how would I accmodate for this?</span>
<span class="comment-copy">This is probably part of my isse. I am trying to loop throught the data frame and copy the domain/sub domain, ignoring the path</span>
<span class="comment-copy">Do all your urls begin with <code>http://</code>?</span>
<span class="comment-copy">They begin  with https://</span>
<span class="comment-copy">Can i add a condtion to catch both http AND https?</span>
<span class="comment-copy">Sure. In that case, the <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regex</a> would be <code>https?://[^/]+</code>. I've modified the code above to show what I mean.</span>
