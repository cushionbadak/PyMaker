<div class="post-text" itemprop="text">
<p>If the part in bold of this string are the seconds. 00:00:00:<strong>00</strong>.000</p>
<p>How could I add 10 seconds to all this string formats ?</p>
<pre><code>00:00:00:00.000
00:00.000
00.000
</code></pre>
<p>The result should be:</p>
<pre><code>00:00:00:10.000
00:10.000
10.000
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/re.html#re.sub" rel="nofollow noreferrer"><code>re.sub</code></a> with replacement function:</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; strings = [
...     '00:00:00:00.000',
...     '00:00.000',
...     '00.000',
... ]
&gt;&gt;&gt; for s in strings:
...     re.sub(r'\d+(?=\.\d+$)', lambda match: str(int(match.group()) + 10), s)                        
...
'00:00:00:10.000'
'00:10.000'
'10.000'
</code></pre>
<ul>
<li><code>re.sub</code> accept not only the replacement string as the second parameter, but can also accept replacement function as the second parameter.</li>
<li>The function receive matched object as the parameter. The return value of the function is used as a replacemnt string.</li>
<li><code>\d+(?=\.\d+$)</code> pattern is used to match last second part (which is followed by <code>.nnn</code> decimal part)</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>You have two options that come to my mind:</p>
<ol>
<li><p>Find or write your own converter of string to timestamp format, then increase it by 10s and convert back.</p></li>
<li><p>Write your own function that takes string, checks in which format it is and adds 10s shifting it to minutes if necessary.</p></li>
</ol>
</div>
<span class="comment-copy">You don't have fixed pattern in your input.</span>
<span class="comment-copy"><code>s/00\./10./g;</code></span>
<span class="comment-copy">@Scripting.FileSystemObject anything can be done. We just have to find a way. Look at the answer!</span>
<span class="comment-copy">I don't get why 5 users put this question on hold. It's easy to understand. To those users, read the answer. Obviously he understood it. The question <b>don't need</b> to be reworded. And it's a perfect answer !</span>
<span class="comment-copy">nice but cann you explain what <code>str(int(match.group()) + 10), s)</code> does. Please?</span>
<span class="comment-copy">@s_vishnu, <code>match.group()</code> returns matched string part. <code>int(..) + 10</code> to convert the string into integer, then add 10. After that used <code>str(..)</code> to convert integer back to string.</span>
<span class="comment-copy">@s_vishnu, I updated answer (while you were commenting). Reading updated part will also help you understand what that part means. Thank you for the feedback.</span>
<span class="comment-copy">Awesome ! Thank you</span>
