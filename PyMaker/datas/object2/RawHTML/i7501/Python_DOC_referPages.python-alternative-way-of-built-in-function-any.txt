<div class="post-text" itemprop="text">
<p>I'm working with python 2.4 and I need to use the function any which is not available in my python version.</p>
<p>Is there a function or expression that I can use to replace it?</p>
<p>I need to find if at least one element of a string list is in a text Line.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <code>any</code> function is rather easy to re-implement.</p>
<p>The idea is just to iterate over an iterable, and as soon as a truthy object is found, return <code>True</code>; else return False.</p>
<p>Without cheating and peeking at the doc, here is a re-implementation:</p>
<pre><code>def my_any(iterable):
    for it_element in iterable:
        if it_element:
            return True
    return False
</code></pre>
<p>Now with <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">the doc's version</a>:</p>
<pre><code>def any(iterable):
    for element in iterable:
        if element:
            return True
    return False
</code></pre>
<p>It's so easy, my version is exactly the same as the doc's.</p>
<p>About how to use it...
The <code>any</code> function takes an iterable.
It's generally used either with a list, or a generator expression.
For instance, if you want to check if any character of <code>'abcd'</code> is in the <code>line</code> string:</p>
<pre><code>any(it_character in line for it_character in 'abcd')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>For your specific use case (the "break" is optional):</p>
<pre><code>ans = False
for string in lst:
    if string in line: 
        ans = True
        break
</code></pre>
</div>
<span class="comment-copy">There's an equivalent version in the docs itself: <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#any</a></span>
<span class="comment-copy">Ok thank you. But I'm not sure how to use it. My list contains strings not Boolean values.</span>
<span class="comment-copy">It's time to upgrade your Python version</span>
<span class="comment-copy">use <code>grep</code>, that's what it is for, and is plenty fast.</span>
<span class="comment-copy">Thank you @EricDuminil , Ididn't think of it. I'll try it and compare performance.</span>
<span class="comment-copy">Thank you, But I'm working with millions of lines and I was looking for a not time consuming way to do this; using a loop doesn't seem to be the best way. I might be wrong.</span>
<span class="comment-copy">@tsumey Well your specific question is about the <code>any</code> method, so here you go. Now if you want to find a pettern in a large file, you'll probably need to iterate over it anyway, so a loop will be necessary. No magic function will tell you <code>it's at line 125,327</code> without iterating.</span>
<span class="comment-copy">Ok, I'll use the doc solution, thank you.</span>
<span class="comment-copy">Thank you, please have a look at my answer to @Right leg.</span>
<span class="comment-copy">The "any" function is fundamentally performing a loop, although it might be optimized. At some level, you have to look at every string in the list (at least until you find one that works), so something looplike is necessary. The break lets you quit early if a match is found.</span>
