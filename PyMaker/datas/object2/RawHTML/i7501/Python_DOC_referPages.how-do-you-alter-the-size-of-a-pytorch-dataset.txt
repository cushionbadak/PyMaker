<div class="post-text" itemprop="text">
<p>Say I am loading MNIST from torchvision.datasets.MNIST, but I only want to load in 10000 images total, how would I slice the data to limit it to only some number of data points?  I understand that the DataLoader is a generator yielding data in the size of the specified batch size, but how do you slice datasets?</p>
<pre><code>tr = datasets.MNIST('../data', train=True, download=True, transform=transform)
te = datasets.MNIST('../data', train=False, transform=transform)
train_loader = DataLoader(tr, batch_size=args.batch_size, shuffle=True, num_workers=4, **kwargs)
test_loader = DataLoader(te, batch_size=args.batch_size, shuffle=True, num_workers=4, **kwargs)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is important to note that when you create the <code>DataLoader</code> object, it doesnt immediately load all of your data (its impractical for large datasets). It provides you an iterator that you can use to access each sample. </p>
<p>Unfortunately, <code>DataLoader</code> doesnt provide you with any way to control the number of samples you wish to extract. You will have to use the typical ways of slicing iterators.</p>
<p>Simplest thing to do (without any libraries) would be to stop after the required number of samples is reached. </p>
<pre><code>nsamples = 10000
for i, image, label in enumerate(train_loader):
    if i &gt; nsamples:
        break

    # Your training code here.
</code></pre>
<p>Or, you could use <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="noreferrer"><code>itertools.islice</code></a> to get the first 10k samples. Like so.</p>
<pre><code>for image, label in itertools.islice(train_loader, stop=10000):

    # your training code here.
</code></pre>
</div>
