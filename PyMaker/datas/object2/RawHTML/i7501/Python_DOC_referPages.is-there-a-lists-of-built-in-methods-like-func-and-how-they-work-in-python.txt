<div class="post-text" itemprop="text">
<p>I know some of these python built-in methods like: <code>__init__</code> , <code>__eq__</code> , <code>__cmp__</code> . What more are there? Where can I find a good explanation of using these?</p>
</div>
<div class="post-text" itemprop="text">
<p>You probably want to take a look at:</p>
<ul>
<li><a href="https://docs.python.org/2/reference/datamodel.html" rel="nofollow noreferrer">Python Data Model</a></li>
<li><a href="https://minhhh.github.io/posts/a-guide-to-pythons-magic-methods" rel="nofollow noreferrer">A Guide to Python's Magic Methods</a></li>
</ul>
<p>Or for Python 3:</p>
<ul>
<li><a href="https://docs.python.org/3/reference/datamodel.html#special-method-names" rel="nofollow noreferrer">Python Data Model</a></li>
</ul>
<hr/>
<p><em>The following answers are not as good as the links above. They do not provide precise lists and they are just for research &amp; fun.</em></p>
<p>But... for the sport, let's build a code that will give you some basic ones :P</p>
<pre><code>names = [funcname for funcname in dir(object) if funcname.startswith('_')]
for name in names:
    print(name)
    print(getattr(object, name).__doc__)
    print('-' * 20)
</code></pre>
<p>Or taking it one step further, listing many special functions:</p>
<pre><code>classes = (eval(i) for i in dir(__builtins__)
           if isinstance(eval(i), type) and i != 'type')

magics = {function for one_class in classes for function in dir(one_class)
          if function.startswith('__') and function.endswith('__')}
</code></pre>
<p>Or, if you want to be insanly rude, you can even run:*</p>
<pre><code>import re
import requests

TYPEOBJECT_URL = 'https://raw.githubusercontent.com/python' \
                 '/cpython/master/Objects/typeobject.c'
typeobject_c_text = requests.get(TYPEOBJECT_URL).text
print(set(re.findall('__[a-z][a-z0-9_]+__', typeobject_c_text)))
</code></pre>
<p>* Probably not all of the functions in the last example are special methods. This is just for the fun.</p>
</div>
<span class="comment-copy">What your're looking is <a href="https://docs.python.org/2.7/reference/datamodel.html" rel="nofollow noreferrer">Python data model</a>.</span>
<span class="comment-copy">Thanks a lot :)</span>
<span class="comment-copy">No problem, that was a fun one :P If my answer helps you, I will appreciate if you click on the accept answer button.</span>
