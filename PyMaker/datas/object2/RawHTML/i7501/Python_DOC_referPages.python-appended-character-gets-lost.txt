<div class="post-text" itemprop="text">
<p>Hey I´m quite new to python and i´m writing a script to sort through a file in for some keywords, and everything works fine except a small reading/printing miss that i don´t understand... This is my problem code and the file im scanning through:</p>
<pre><code>File:
    SEND TEST
    Tester -&gt; 1FFF 19 02 0F :\user\log
    SEND TEST
    Tester -&gt; 1FFF 18 00 0F [Channel 1] :\user\log
    SEND TEST
    Tester -&gt; 1FFF 12 11 5F :\user\log
    SEND TEST
    Tester -&gt; 1FFF 12 55 1F [Channel 1] :\user\log
    SEND TEST
    Tester -&gt; 1FFF 19 03 2F :\user\log
code:
      if line.startswith('Tester -&gt;'):
         start = 'Tester -&gt; '  # take string from
         end = ':\ ' # end at
         data.append(line[line.find(start) + 9 :line.find(end)].strip('[Channel 1]'))
</code></pre>
<p>this prints </p>
<pre><code>1FFF 19 02 0F
1FFF 18 00 0F [Channel 1]
1FFF 12 11 5F
1FFF 12 55 1F [Channel 1]
1FFF 19 03 2F 
</code></pre>
<p>The <code>data.append</code> string has the problem, as shown in the print i works, but i want to extract the code ex <code>1FFF 12 55 1F</code> but not <code>[Channel 1]</code> aslo... so i used .strip to remove it, but then i get this print: </p>
<pre><code>1FFF 19 02 0F
FFF 18 00 0F
1FFF 12 11 5F
FFF 12 55 1F
1FFF 19 03 2F 
</code></pre>
<p>All strings that has <code>[Channel 1]</code> loses the first character and if i put a <code>8</code> instead of a <code>9</code> in <code>data.apped</code> it prints:</p>
<pre><code>1FFF 19 02 0F
&gt; 1FFF 18 00 0F
1FFF 12 11 5F
&gt; 1FFF 12 55 1F
1FFF 19 03 2F
</code></pre>
<p>Then it takes the <code>&gt;</code> from the <code>Tester -&gt;</code> and I don´t understand why? it skips the character in between for some reason? It´s like when I have a <code>9</code> it counts every character including spaces and when I have a <code>8</code> it counts characters but not including spaces... how is that possible? someone who knows how to fix this, thanks!</p>
<pre><code># Sending Request: Tester -&gt; 1631 11 33 F5 :\ APP_3130 \ Read Identifier \ 
Tester -&gt; 1631 22 F1 2E :\ APP_3138 \ Read Identifier \ 
Tester -&gt; 1FFF 19 02 0F [Channel 1]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that <code>strip('chars')</code> removes all combinations of <code>'chars'</code> as noted here: <a href="https://docs.python.org/3/library/stdtypes.html?highlight=strip#str.strip" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html?highlight=strip#str.strip</a></p>
<p>So what you're really saying is remove the characters <code>[, C, h, a, , n, e, l, 1, and ]</code> from my string.</p>
<p>If you just want to remove <code>[Channel 1]</code> I would do the following:</p>
<pre><code>import re

line = re.sub(r"\[Channel 1\]$", "", line)
</code></pre>
<p>This regex pattern will only match the text <code>[Channel 1]</code> if it is as the end of the line.</p>
<p>or alternatively if you don't want to include the regex module you could use</p>
<pre><code>line = line.replace("[Channel 1]", "")
</code></pre>
<p>This solution will replace <code>[Channel 1]</code> regardless of where it shows up in the line.</p>
<p>=================</p>
<p>The best solution here is to use regex and skip the entire <code>start</code> and <code>end</code> thing. You can do the following:</p>
<pre><code>import re

pattern = re.compile(r"Tester -&gt;\s((?:(?:\w+)+\s)+)(?:\[Channel \d\])?\s?[:]")
if line.startswith('Tester -&gt;'):
    m = pattern.match(line)
    if m is not None:
        data.append(m.group(1).strip())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>this is a version using regex:</p>
<pre><code>import re

rgx = re.compile('Tester\ -&gt;\ ([0-9a-fA-F\ ]{13})')

for line in file:
    match = rgx.match(line)
    if match:
        data.append(match.group(1))

print(data)
# ['1FFF 19 02 0F', '1FFF 18 00 0F', '1FFF 12 11 5F', 
#  '1FFF 12 55 1F', '1FFF 19 03 2F']
</code></pre>
<p>the regular expression matches the string <code>'Tester -&gt; '</code> followed by a string of length 13 containing hexadecimal characters or spaces.</p>
<p>that is assuming that you iterate over your file line per line.</p>
</div>
<span class="comment-copy">I'm not a python programmer but it looks like your ending delimiter is variable: both :\ and [ will signify the end of the string. I think you should look for either one instead of trying to strip out the extra characters after the fact.</span>
<span class="comment-copy">You should read <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer">the docs on <code>str.strip</code></a>.</span>
<span class="comment-copy">I could suggest <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer"><code>re</code></a>, but since you're new, this might be too much information - so if you know the length of the string you're looking for, wouldn't <code>line[line.find(start)+9:line.find(start)+9+14]</code> do the trick?</span>
<span class="comment-copy">you could suggest to use <code>replace('[Channel 1]','')</code> instead and you'd get my upvote.</span>
<span class="comment-copy">@Jean-FrançoisFabre haha I was just editing it to include that</span>
<span class="comment-copy">If you're going to suggest regular expressions, you might as well rewrite a solution using <code>re.match</code>. After all, it is what its meant for - searching text.</span>
<span class="comment-copy">@Kendas why would you use a match to just remove a single thing from the string? That's a lot of extra overhead.</span>
<span class="comment-copy">@NickChapman tricked ya, I already upvoted :)</span>
