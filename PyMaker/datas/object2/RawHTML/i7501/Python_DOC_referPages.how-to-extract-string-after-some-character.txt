<div class="post-text" itemprop="text">
<p>I need to extract in between part:</p>
<pre><code>test="http://localhost:8080/course-single.html"
</code></pre>
<p>I need to get "course-single" from above string.</p>
</div>
<div class="post-text" itemprop="text">
<p>Chain a couple of <code>str.split</code> calls:</p>
<pre><code>test = "http://localhost:8080/course-single.html"

test.rsplit('/', 1)[-1].split('.')[0]
# 'course-single'
</code></pre>
<hr/>
<p><strong>Details</strong><br/>
First, get everything after the last <code>/</code>:</p>
<pre><code>temp = test.rsplit('/', 1)[-1]
temp
# 'course-single.html'
</code></pre>
<p>Next, get everything before the <code>.html</code> portion:</p>
<pre><code>temp = temp.split('.')
temp
# ['course-single', 'html']

temp[0]
# 'course-single'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using Python 3, use the <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow noreferrer">urllib</a> module, then trim out the parts you don't want from the resulting "path" you want:</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import urlparse
&gt;&gt;&gt; url_str = "http://localhost:8080/course-single.html"
&gt;&gt;&gt; urlparse(url_str).path.split('.')[0][1:]
'course-single'
</code></pre>
<p>Details: </p>
<p><code>urlparse(url_str)</code> will yield: </p>
<pre><code>ParseResult(
    scheme='http', netloc='localhost:8080', path='/course-single.html', 
    params='', query='', fragment=''
)
</code></pre>
<p>So, you extract the <code>path</code>: </p>
<p><code>urlparse(url_str).path</code>: to get: <code>'/course-single.html'</code></p>
<p>Then you need to remove the parts you are not interested in, so <code>split</code> on the <code>.</code>, which will give you <code>['/course-single', 'html']</code>. So, just access the first item (<code>[0]</code>), remove the first slash with <code>[1:]</code> slice and that gives you your final result of <code>course-single</code>.</p>
<h1>Multiple slashes</h1>
<p>If you have a longer url, and you need that last part, then you can do the following, and it should work for whatever length url you provide:</p>
<pre><code>&gt;&gt;&gt; url_str = "http://localhost:8080/a/b/c/course-single.html"
&gt;&gt;&gt; urlparse(url_str)
ParseResult(scheme='http', netloc='localhost:8080', path='/a/b/c/course-single.html', params='', query='', fragment='')
&gt;&gt;&gt; urlparse(url_str).path.rsplit('/', 1)[-1].split('.')[0]
'course-single'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use regular expressions:</p>
<pre><code>word = re.search('\d/(.*?)\.html', test)
print word.groups()[0]
</code></pre>
<p>Output:</p>
<pre><code>course-single
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use this:</p>
<pre><code>test="http://localhost:8080/course-single.html"
str = test[test.find('8080/') + 5: test.find('.html')]
print str
</code></pre>
<p>Details:<br/>
<code>test.find('8080/')</code> - find place where <code>8080/</code> string is located ( + 5 because we only have interested in string comes next in line ).<br/>
<code>test.find('.html')</code> - find where <code>.html</code> located.<br/>
<code>test[test.find('8080/') + 5: test.find('.html')]</code> - get string between this 2 located strings.</p>
</div>
<span class="comment-copy">If you are using python 3 can't you just do <code>test[22:35]</code></span>
<span class="comment-copy">@O.KOO Why would you want to hardcode this?</span>
<span class="comment-copy">Kit did not say he is going to perform extraction on multiple URLs. Kit simply says he needs "course-single" from above string. If is one time then why not hardcode it?</span>
<span class="comment-copy">@OLIVER.KOO I don't think that is the right approach to take, no matter what OP says. It leads to less maintainable, one time use code, that'll need be harder to change. I don't care how many people agree with you, that's just something I'll never get behind.</span>
<span class="comment-copy">If you are interested, you can append the <code>urllib</code> stuff I mentioned in my answer and I'll just delete mine.</span>
<span class="comment-copy">@idjaw Nah man your answer deserves its own post. +1'd it.</span>
<span class="comment-copy">Thanks dude. :)</span>
<span class="comment-copy">What is this code. Could you exaplain it?</span>
<span class="comment-copy">added comment on the post.</span>
