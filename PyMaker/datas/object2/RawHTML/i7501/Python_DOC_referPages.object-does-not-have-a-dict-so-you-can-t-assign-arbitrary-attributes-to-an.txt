<div class="post-text" itemprop="text">
<p>From <a href="https://docs.python.org/3.3/library/functions.html#object" rel="nofollow noreferrer">https://docs.python.org/3.3/library/functions.html#object</a></p>
<blockquote>
<p><code>object</code> does not have a <code>__dict__</code>, so you can’t assign arbitrary attributes to an instance of the <code>object</code> class.</p>
</blockquote>
<p>Why "<code>object</code> does not have a <code>__dict__</code>"? 
It works for me</p>
<pre><code>&gt;&gt;&gt; object.__dict__
mappingproxy({'__repr__': &lt;slot wrapper '__repr__' of 'object' objects&gt;, '__hash__': &lt;slot wrapper '__hash__' of 'object' objects&gt;, '__subclasshook__': &lt;method '__subclasshook__' of 'object' objects&gt;, '__ne__': &lt;slot wrapper '__ne__' of 'object' objects&gt;, '__format__': &lt;method '__format__' of 'object' objects&gt;, '__new__': &lt;built-in method __new__ of type object at 0xa3dc20&gt;, '__doc__': 'The most base type', '__class__': &lt;attribute '__class__' of 'object' objects&gt;, '__dir__': &lt;method '__dir__' of 'object' objects&gt;, '__delattr__': &lt;slot wrapper '__delattr__' of 'object' objects&gt;, '__getattribute__': &lt;slot wrapper '__getattribute__' of 'object' objects&gt;, '__le__': &lt;slot wrapper '__le__' of 'object' objects&gt;, '__init__': &lt;slot wrapper '__init__' of 'object' objects&gt;, '__gt__': &lt;slot wrapper '__gt__' of 'object' objects&gt;, '__ge__': &lt;slot wrapper '__ge__' of 'object' objects&gt;, '__eq__': &lt;slot wrapper '__eq__' of 'object' objects&gt;, '__reduce__': &lt;method '__reduce__' of 'object' objects&gt;, '__lt__': &lt;slot wrapper '__lt__' of 'object' objects&gt;, '__str__': &lt;slot wrapper '__str__' of 'object' objects&gt;, '__reduce_ex__': &lt;method '__reduce_ex__' of 'object' objects&gt;, '__sizeof__': &lt;method '__sizeof__' of 'object' objects&gt;, '__setattr__': &lt;slot wrapper '__setattr__' of 'object' objects&gt;})
</code></pre>
<p>Why "you can’t assign arbitrary attributes to an instance of the <code>object</code> class"?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are confusing the <code>__dict__</code> on the <em>type</em> with the attribute on instances. <code>object()</code> <em>instances</em> do not have a <code>__dict__</code> attribute:</p>
<pre><code> &gt;&gt;&gt; object().__dict__
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
AttributeError: 'object' object has no attribute '__dict__'
</code></pre>
<p>Note that the <code>__dict__</code> attribute of custom Python class instances is a <a href="https://docs.python.org/3/howto/descriptor.html" rel="noreferrer"><em>descriptor</em></a>; the instance itself doesn't have the attribute, it is the class that provides it (so <code>type(instance).__dict__['__dict__'].__get__(instance)</code> is returned). <code>object.__dict__</code> may exist, but <code>object.__dict__['__dict__']</code> does not.</p>
<p><code>object()</code> doesn't support instance attributes because it is the base for all custom Python classes, which must <a href="https://docs.python.org/3/reference/datamodel.html#slots" rel="noreferrer">support not having a <code>__dict__</code> attribute when defining slots instead</a>.</p>
</div>
<span class="comment-copy">Look at <code>object().__dict__</code>.</span>
<span class="comment-copy">It is referring to instances of <code>object</code>, not the object type.</span>
<span class="comment-copy">@JimFasarakisHilliard the quote says "<code>object</code> does not have a <code>__dict__</code>" instead of "an instance of <code>object</code> does not have a <code>__dict__</code>". So how did I misunderstand it?</span>
<span class="comment-copy">Thanks. If I am correct, an instance of a class has  <code>__dict__</code> attribute. So why doesn't an instance of  <code>object</code>   have <code>__dict__</code> attribute?</span>
<span class="comment-copy">@Tim: because if it did, you couldn't have custom class instances <i>without</i> a <code>__dict__</code> attribute, such as for those classes that <a href="https://docs.python.org/3/reference/datamodel.html#slots" rel="nofollow noreferrer">have slots instead</a>.</span>
<span class="comment-copy">Thanks. Why "you can’t assign arbitrary attributes to an instance of the object class"?</span>
<span class="comment-copy">@Tim: You need a <code>__dict__</code> mapping to support arbitrary attributes. That's how arbitrary attributes <i>work</i>.</span>
<span class="comment-copy">Does "an instance of object doesn't have <code>__dict__</code> attribute" imply that <code>object</code> class has <code>__slot__</code> attribute?</span>
