<div class="post-text" itemprop="text">
<p>I am trying to to construct the folloiwng line which is the object from the holidays package:</p>
<pre><code>holidays.DE()
</code></pre>
<p>I want to split it as the following:</p>
<p><strong>holidays</strong> and <strong>.DE()</strong> as parameter. As string it does not work tried it already and receiving the following error message:</p>
<p><strong>HOLIDAYS_German = holidays+Option TypeError: unsupported operand type(s) for +: 'module' and 'str'</strong></p>
<p>How can I solve it?</p>
<p>The code looks like the following:</p>
<pre><code>import datetime as dt
import holidays

def BDCTest(date1,date2,Option):

    HOLIDAYS_German = holiday+Option

    for i in range((date2 - date1).days + 1):
        nextday = date1 + dt.timedelta(days=i)
        if nextday not in HOLIDAYS_German:
            print(nextday.strftime('%d-%m-%y'))

if __name__ == '__main__':

    date1 = dt.datetime.strptime('22-12-16', '%d-%m-%y')
    date2 = dt.datetime.strptime('22-12-17', '%d-%m-%y')
    Option = '.DE'

    Test = BDCTest(date1,date2, Option)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just putting two strings together does not make Python execute those strings.</p>
<p>Dynamic attribute access is done with the <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer"><code>getattr()</code> function</a>; <code>DE</code> just an attribute on the <code>holidays</code> module, one that happens to be callable:</p>
<pre><code>Option = 'DE'
HOLIDAYS_German = getattr(holiday, Option)()
</code></pre>
<p>So <code>getattr()</code> retrieves the <code>DE</code> attribute of the <code>holiday</code> object (a module), and the result is called. Note that <code>Option</code> does <em>not</em> start with a <code>.</code>!</p>
</div>
<span class="comment-copy">If you really wanted to go down your route, you could do <code>exec("%s()" %HOLIDAYS_German)</code> which is okay if you're not exposing this to user input. It involves an addition of a single line of code, but is quite dirty.</span>
<span class="comment-copy">Thanks a lot. This is what I was looking for.</span>
