<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/2566412/find-nearest-value-in-numpy-array">Find nearest value in numpy array</a>
<span class="question-originals-answer-count">
                    15 answers
                </span>
</li>
</ul>
</div>
<p>I have a list of some random numbers (integers and floats)</p>
<pre><code>In[]:  list1
Out[]: [8.6, 9, 15, 20, 1]
</code></pre>
<p>I have found out the average/ mean value of the list:</p>
<pre><code>m = reduce(lambda x, y: x + y, list1) / len(list1)
</code></pre>
<p>This outputs 10.72  .</p>
<p>Now, I have to find the closest number to <strong>avg</strong> from the list <strong>list1</strong> .</p>
<p>In the above eg, from list1 the closes number to 10.72 is 9.</p>
<p>One way is to find the difference between the <strong>avg</strong> and <strong>each element</strong> in the list, and then look for the smallest difference and then output that element producing smallest difference, But I was looking for more crisp and efficient way, please suggest me one. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/functions.html#min" rel="nofollow noreferrer">built-in min() function</a> and find minimum distance from your number</p>
<pre><code>min(list1, key=lambda x:abs(x-m))
</code></pre>
</div>
<span class="comment-copy">I guess : <code>a = np.asarray(list1)</code> and then : <code>a[np.abs(a - a.mean()).argmin()]</code>?</span>
<span class="comment-copy">All the answers below in effect do what OP doesn't want to, but at least they do it crisply.</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ what answers? :P</span>
<span class="comment-copy">Woah... wtf....</span>
<span class="comment-copy">Use an array version : <code>a = np.asarray(list1)</code> and use <code>a.mean()</code> to get that mean value and then the linked dup for the rest of the work.</span>
