<div class="post-text" itemprop="text">
<p>So I am trying to keep my project as simple as possible, therefore I have decided to use a CGI with my Python scripts in order to run a program that does something.</p>
<p>So here is my current setup:</p>
<p>In CMD, I run:
<code>python -m http.server --cgi 8000</code></p>
<p>This start a server for me. I can access it via <code>localhost:8000</code>. </p>
<p>Next, I am trying to find my directory with the script by typing in the actual address where it is located: <code>localhost:8000/test/cgi-bin/test.py</code></p>
<p>This is giving me the output of the actual file, not actually reading it properly. I have tried 2 different ways to output data on the Python file, for example:</p>
<pre><code>import sys
sys.stdout.write("Content-type: text\html \r\n\r\n")
sys.stdout.write("&lt;html&gt;&lt;title&gt;Hi&lt;/title&gt;&lt;body&gt;&lt;p&gt;This is a test&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;")
</code></pre>
<p>and </p>
<pre><code>print("Content-Type: text/html\n")
print("&lt;!doctype html&gt;&lt;title&gt;Hello&lt;/title&gt;&lt;h2&gt;hello world&lt;/h2&gt;")
</code></pre>
<p>Both of which result in the actual code being displayed in my browser.</p>
<p>A few questions:</p>
<ul>
<li>How do I get my server to automatically take me to the location of the file I am trying to run? </li>
<li>How do I get the python script to output the proper stuff? </li>
<li>Am I setting this up correctly?</li>
</ul>
<p>I am trying to avoid installing any new dependencies and keep it as minimal as possible. </p>
<p>I am running on Python3, Windows7. I am trying to avoid downloading more pip packages and dependencies because my work is very tech precautious. </p>
<p>Any help is greatly appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>First, I want to say that writing plain CGI-scripts in 2017 is a way of a brave person. Your life will be much easier if you would use <a href="http://bottlepy.org" rel="nofollow noreferrer">bottle</a> or flask.</p>
<p>But if you want, here is the way you can start.</p>
<ol>
<li><p><code>python -m http.server --cgi</code> assumes that the <code>cgi-bin</code> is in the current directory. That is you should go to the <code>test</code> directory and start the command from there. And then call <code>http://localhost:8000/cgi-bin/test.py</code>.</p></li>
<li><p>Your cgi-script is not correct. The script should be executable. I am not sure if it needs a shebang line in Windows when you run the <code>http.server</code>, but is is required when you run CGI-scripts with Apache web server under Windows. The shebang line starts with <code>#!</code> and then contains the full path to python3 interpreter, and the line should end with <code>\n</code> and not <code>\r\n</code>, otherwise it won't work.</p>
<p>After that you should output all the HTTP-headers, print a blank line, and output your content. All HTTP-headers should be separated by '\r\n' and not '\n'.</p></li>
</ol>
<p>Here is an example CGI-script that works on OS X:</p>
<pre><code>#!/usr/bin/env python3
import sys
sys.stdout.write('Status: 200 OK\r\n')
sys.stdout.write('Content-type: text/html;charset="utf-8"\r\n\r\n')

print('&lt;h1&gt;Hello, world!&lt;/h1&gt;')    
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think the first line of the script needs to specify the interpreter path. Some examples are:</p>
<pre><code>#!/usr/bin/python
#!/usr/bin/python2.3
#!/usr/bin/python2.4
#!c:\Python24\python.exe
#!c:\Python25\python.exe
</code></pre>
<p>See if it helps.</p>
</div>
<div class="post-text" itemprop="text">
<p>According to the <a href="https://docs.python.org/3/library/http.server.html#http.server.CGIHTTPRequestHandler" rel="nofollow noreferrer">http.server documentation:</a></p>
<blockquote>
<p>This defaults to ['/cgi-bin', '/htbin'] and describes directories to treat as containing CGI scripts.</p>
</blockquote>
<p>So, <code>http.server</code> is expecting to find CGI scripts in a subfolder named <strong>/cgi-bin</strong> ot <strong>/htbin</strong> in your python.exe folder. If you really want to use the test folder, then change the <code>cgi-directories</code> variable in the <code>http/server.py</code> script.</p>
</div>
<span class="comment-copy"><code>http.server</code> doesn't assume <code>cgi-bin</code> is the current directory. It rather assumes that the CGI script will be put in a subfolder named <code>/cgi-bin</code> (or <code>/htbin</code> according to the docs). This is why he either has to move his CGI scipts in a <code>/cgi-bin</code> subfolder or add <code>/test</code> in the <code>cgi_directories</code> variable.</span>
<span class="comment-copy">What do you mean by this?</span>
<span class="comment-copy">So like, find where my Python is located and then write that up top?</span>
<span class="comment-copy">yes, try it out</span>
<span class="comment-copy">So, I added the path of my Python to the code, but I receive an error message as so: <code>Error response  Error code: 404  Message: File not found.  Error code explanation: HTTPStatus.NOT_FOUND - Nothing matches the given URI.</code> in my browser.</span>
<span class="comment-copy">This is my path: <code>#!C:\Users\BregmanM\AppData\Local\Programs\Python\Python36-32\python.exe</code></span>
