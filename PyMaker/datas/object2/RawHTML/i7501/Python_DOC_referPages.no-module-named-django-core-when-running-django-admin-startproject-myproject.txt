<div class="post-text" itemprop="text">
<p>when running <code>django-admin startproject myproject</code> on macOS I get the error</p>
<blockquote>
<p>Traceback (most recent call last):<br/>
  File "/usr/local/bin/django-admin", line 2, in <br/>
      from django.core import management<br/>
  ImportError: No module named django.core</p>
</blockquote>
<p>I checked out <a href="https://stackoverflow.com/questions/312549/no-module-named-django-core">this question</a> but running <code>import django</code> won't produce any output in a python3 shell.</p>
<p><code>/usr/local/bin/django-admin</code> is a symlink to <code>/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django/bin/django-admin.py</code>.</p>
<p>I already put <code>/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/django</code> in my PYTHONPATH as suggested in other questions.</p>
<p>Am I missing something?</p>
</div>
<div class="post-text" itemprop="text">
<p>Even if you make it work, it is not good practice to do what you're doing! Ideally, the only python-related binaries you would want in /usr/local/bin/ would be python, pip and virtualenv (or venv, pyvenv)...</p>
<p>I would suggest you to delete <code>/Library/Frameworks/Python.framework/Versions/3.6</code> ONLY IF you installed it there. As far as I know, macOS only comes with python2.7 installed and not python3.6!</p>
<p>Then open a new shell and try this:</p>
<pre><code>/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
brew install python3
pip3 install virtualenv
cd ~/Desktop/
mkdir proj
cd proj
virtualenv -p python3 env
source env/bin/activate
pip install django
django-admin.py startproject testproj
</code></pre>
<p>skip the first step if you already have brew installed</p>
</div>
<div class="post-text" itemprop="text">
<p>Check your permissions in <code>/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/</code> with an <code>ls -la</code> command. If you see anything owned by <code>root</code>, this probably needs to change. I suspect that since you installed some packages as root, the permissions are weird and it can't find the module. If this is the case, reinstall the package(s) as your own user using <code>sudo</code>. </p>
<p>Another thing you should check: as phd mentioned you need to make sure you're using the version of <code>python</code> you think you are. Check this by running <code>which python</code> to tell you the location of the one you're referencing, and <code>python --version</code> to tell you which version you're using. If it's not Python 3.6, then you installed Django for a different version of Python. In this case, simply install Django for version 3.6 and you'll be on your way.</p>
<p>For future reference, Python offers a module called <code>venv</code> to prevent version mishaps like this. More info can be found <a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">here</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems like you are trying to create or work on a django project without using a python virtual environment.  I recommend reviewing the python 3 venv documenation (<a href="https://docs.python.org/3/library/venv.html" rel="nofollow noreferrer">https://docs.python.org/3/library/venv.html</a>).  Then creating a virtual environment (venv) specifically for your web application.  Once you you that project's venv setup you can install django into that venv.</p>
</div>
<div class="post-text" itemprop="text">
<p>On MacOS, use <strong>sudo</strong> before the command:</p>
<pre><code>sudo django-admin startproject myproject
</code></pre>
</div>
<span class="comment-copy">What do you mean by "running <code>import django</code> won't do anything in a python3 shell"?</span>
<span class="comment-copy">I get no output when running <code>import django</code> inside a python3 shell.</span>
<span class="comment-copy">If you mean you just get a prompt for the next command, that's standard behavior. That means it was able to import django and that the module was able to be found.</span>
<span class="comment-copy">Yes, that was what I found out, too. However, I can't create a new django project from command line.</span>
<span class="comment-copy">Is import django  working?</span>
<span class="comment-copy">Why should I delete my python3 installation when doing a re-install using brew afterwards? But using virtualenv worked. This is what @jomunculus pointed out, too.</span>
<span class="comment-copy">@elementzero23: As a note, you'll want to use <code>venv</code> instead of <code>virtualenv</code> if you're still using Python 3.6</span>
<span class="comment-copy">@McGlothlin Why? I choose virtualenv because it is suggested in the installation guide of Django. I used python only to run a few small scripts so far - no need of a virtual environment.</span>
<span class="comment-copy">There's probably nothing wrong with it, but <code>venv</code> is built-in as of Python 3.3</span>
<span class="comment-copy">@elementzero23 There are differences between venv and virtualenv! venv is simple and straightforward with no features besides the bare necessities whereas virtualenv is extensive - it works with older python versions and also supports wrappers such as virtualenvwrapper</span>
