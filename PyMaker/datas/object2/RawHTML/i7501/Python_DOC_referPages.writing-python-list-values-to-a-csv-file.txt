<div class="post-text" itemprop="text">
<p>I'm trying to export the list generated to a csv file where each row in the website table corresponds to a new row in the file and each value is in an individual cell, such as:</p>
<blockquote>
<p>NAME.....ICO DATE....ICO PRICE....CURR. PRICE....24 HR ROI
  Stratis.....06/20/16.......$0.007...........$7.480................+38.80%</p>
</blockquote>
<p>The current output looks like this:</p>
<blockquote>
<p>['Patientory\n05/31/17\n$0.104\n$0.274\n+46.11%\n+25.54%\nN/A']</p>
</blockquote>
<pre><code>import csv
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait as wait

csvrows = []

def get_css_sel(selector):
    posts = browser.find_elements_by_css_selector(selector)
    for post in posts:
        print(post.text)
        csvrows.append([post.text])

browser = webdriver.Chrome(executable_path=r'C:\Scrapers\chromedriver.exe')
browser.get("https://icostats.com")
wait(browser, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "#app &gt; div &gt; div.container-0-16 &gt; div.table-0-20 &gt; div.tbody-0-21 &gt; div:nth-child(2) &gt; div:nth-child(8)")))

get_css_sel("#app &gt; div &gt; div.container-0-16 &gt; div.table-0-20 &gt; div.tableheader-0-50")              #fetch header of table
get_css_sel("#app &gt; div &gt; div.container-0-16 &gt; div.table-0-20 &gt; div.tbody-0-21 &gt; div")              #fetch rows of table

def create_csv(thelist):
    with open('ICO.csv', 'w') as myfile:
        for i in thelist:
            wr = csv.writer(myfile, quoting=csv.QUOTE_ALL)
            wr.writerow([i])

create_csv(csvrows)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In <code>get_css_sel()</code>, each <code>post.text</code> contains the row text separated by newlines <code>\n</code> - same as your example of the output. So appending <code>[post.text]</code> appends a list with a single item for the full row. Change that to:</p>
<pre><code>csvrows.append(post.text.split('\n'))  # remove the extra list brackets
                                       # since split returns a list.
</code></pre>
<p>Ex:</p>
<pre><code>&gt;&gt;&gt; y = 'Patientory\n05/31/17\n$0.104\n$0.274\n+46.11%\n+25.54%\nN/A'
&gt;&gt;&gt; y.split('\n')
['Patientory', '05/31/17', '$0.104', '$0.274', '+46.11%', '+25.54%', 'N/A']
</code></pre>
<p>Additionally, in your writing loop, you shouldn't re-create the <code>csv.writer</code> for every row, just do it once before looping over <code>thelist</code>.</p>
<p>And since you have all the rows you want in <code>csvrows</code>, you can use <a href="https://docs.python.org/3/library/csv.html#csv.csvwriter.writerows" rel="nofollow noreferrer"><code>csvwriter.writerows</code></a> directly.</p>
<pre><code>def create_csv(thelist):
    with open('ICO.csv', 'w') as myfile:
        wr = csv.writer(myfile, quoting=csv.QUOTE_ALL)
        wr.writerows(thelist)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this code:</p>
<pre><code>import csv
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait as wait

csvrows = []
def get_css_sel(selector):
    posts = browser.find_elements_by_css_selector(selector)
    for post in posts:
        print(post.text)
        csvrows.append(post.text)

browser = webdriver.Chrome(executable_path=r'//Users/Pranavtadepalli/Downloads/chromedriver')
browser.get("https://icostats.com")
wait(browser, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "#app &gt; div &gt; div.container-0-16 &gt; div.table-0-20 &gt; div.tbody-0-21 &gt; div:nth-child(2) &gt; div:nth-child(8)")))

get_css_sel("#app &gt; div &gt; div.container-0-16 &gt; div.table-0-20 &gt; div.tableheader-0-50")              #fetch header of table
get_css_sel("#app &gt; div &gt; div.container-0-16 &gt; div.table-0-20 &gt; div.tbody-0-21 &gt; div")              #fetch rows of table
new=[",".join(elem.split("\n")) for elem in csvrows]
newfile=open("csvfile.csv",'r')
newfile1=open("csvfile.csv",'w')
newstuff=newfile.read()
for elem in new:
    newfile1.write(elem+'\n')
newfile1.close()
newfile.close()
</code></pre>
</div>
<span class="comment-copy">That's it! Also, how can I remove the quotes? I can't call remove() on it: AttributeError: 'NoneType' object has no attribute 'remove'</span>
<span class="comment-copy">Which quotes are you trying to remove? In the CSV, you've put <code>quoting=csv.QUOTE_ALL</code>. Remove that if you don't want unnecessary quotes. Also, the <a href="https://docs.python.org/3/library/csv.html#csv.writer" rel="nofollow noreferrer">default <code>dialect</code> is 'excel'</a> which is usually sufficient.</span>
<span class="comment-copy">If you're getting empty rows and no text for <code>post.text</code> then put <code>if post.text:</code> before <code>csvrows.append...</code>.</span>
