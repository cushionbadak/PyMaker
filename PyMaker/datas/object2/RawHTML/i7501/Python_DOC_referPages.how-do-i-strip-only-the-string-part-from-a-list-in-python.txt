<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3545331/how-can-i-get-dictionary-key-as-variable-directly-in-python-not-by-searching-fr">How can I get dictionary key as variable directly in Python (not by searching from value)?</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>I have a list that looks like:</p>
<pre><code>{
    'J2EE': 0.0202219636,
    'financial': 0.2439565346,
    'Guru': 0.0202219636,
    'AWS': 0.0202219636,
    'next generation': 0.12072663160000001,
    'Machine Learning': 0.2025762767,
    'technology': 0.066936981
}
</code></pre>
<p>How do I extract only the text parts and make my list look like:</p>
<pre><code>['J2EE', 'financial', 'Guru', 'AWS', ...]
</code></pre>
<p>Should I use Regular expressions?</p>
</div>
<div class="post-text" itemprop="text">
<p>What you have there is a dictionary, not a list, and what you want are the keys:</p>
<pre><code>your_dict = {'J2EE': 0.0202219636, 'financial': 0.2439565346, 'Guru': 0.0202219636, 'AWS': 0.0202219636, 'next generation': 0.12072663160000001, 'Machine Learning': 0.2025762767, 'technology': 0.066936981}
your_dict_keys = your_dict.keys()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I doubt it, but if you really want it in the form of <code>{'J2EE','financial','Guru','AWS',....}</code> use <code>set(dict)</code></p>
</div>
<div class="post-text" itemprop="text">
<p>As noticed by brittenb in his comment, the data structure in your example is in fact a type we call a dictionary in Python. See <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/datastructures.html#dictionaries</a> for further details.</p>
<p>Getting the list of keys of a dictionary is done by calling</p>
<pre><code>list(dict.keys())
</code></pre>
<p>This is what calling it on your example would look like:</p>
<pre><code>test = {'J2EE': 0.0202219636, 'financial': 0.2439565346, 'Guru': 0.0202219636, 'AWS': 0.0202219636, 'next generation': 0.12072663160000001, 'Machine Learning': 0.2025762767, 'technology': 0.066936981}
list(test.keys())
&gt;&gt;&gt;['financial', 'next generation', 'Guru', 'technology', 'J2EE', 'Machine Learning', 'AWS']
</code></pre>
</div>
<span class="comment-copy">A) not a list, it's a dictionary. B) what have you tried?</span>
<span class="comment-copy">Re: regexps - absolutely not!</span>
<span class="comment-copy">I am new to Python, also, I mistook dictionary to be a list. Sorry. I could not figure out anything.</span>
<span class="comment-copy">Sometimes the stackoverflow community can be a bit unwelcoming to newcomers. Don't get discouraged, you'll get a lot of great answers if you follow the community guidelines for asking questions.</span>
<span class="comment-copy">@PrabodhM Thank you, that helped.</span>
<span class="comment-copy">This <code>set</code> is quite unnecessary. Dictionary keys are already unique. Simpler to use <code>dict.keys()</code>.</span>
<span class="comment-copy">True, but OP specified the output to be a set. Although probably by mistake.</span>
<span class="comment-copy">Good approach, but <code>list()</code> call is unnecessary here, since <code>dict.keys()</code> already returns a list.</span>
<span class="comment-copy">In python 3 it returns a dict_keys class object. test.keys().__class__ &lt;class 'dict_keys'&gt;</span>
<span class="comment-copy">You're right, I'm using Python2. Forgot about this difference.</span>
