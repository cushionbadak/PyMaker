<div class="post-text" itemprop="text">
<p>I have several sentences of the format:</p>
<blockquote>
<p>Visa requirements for Qatari citizens are administrative entry restrictions by the authorities of other states placed on <strong>citizens of the Qatar.</strong></p>
<p>Visa requirements for British citizens are administrative entry restrictions by the authorities of other states placed on <strong>citizens of the United Kingdom.</strong></p>
<p>Visa requirements for Belarusian citizens are administrative entry restrictions imposed on <strong>citizens of Belarus</strong> by the authorities of other states. </p>
</blockquote>
<p>I only want to match the "citizens of [country name]" in the above sentences. As you can see, some of them end with a period "citizens of china." others continue and some have words like "the" and some countries have two or more words like "united kingdom".</p>
<p>How do I write a (pythonic) regex that will match the "citizens of COUNTRY_NAME" in all of the above statements and their variations?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://pypi.python.org/pypi/regex/" rel="nofollow noreferrer"><code>regex</code></a> module so that we can use <a href="http://www.regular-expressions.info/unicode.html" rel="nofollow noreferrer">Unicode categories</a>.</p>
<p>We make the assumption that country names are multiple contiguous words that each start with a capital letter, and are separated by some number of spaces. If you can't make that assumption, then tweak it at your will. If you already have a country list, then just <code>.{,40}</code> match the country part (or some other sensible limit) and check if some country is a sub-string.</p>
<pre><code>import regex as re

text = '''Visa requirements...'''
country_pat = r'citizens of (?:the )?((?:\p{Lu}\p{L}+(?:\s*))+)'
print(country_pat.findall(text))
</code></pre>
<p><a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer"><code>(?:</code></a> means we don't match that part, and <code>p{Lu}</code> and <code>p{L}</code> are Unicode uppercase letters and letters, respectively.</p>
</div>
<span class="comment-copy">This is certainly not an easy job for regex.</span>
<span class="comment-copy">I'm not that familiar with <code>regex</code> and it seems to me that since countries can have more than one word in it, and they might not be all in capital letters, it would be better for you to construct a list containing all country's names in english and then proceed to the filterting.</span>
<span class="comment-copy">Are the country names always proper case? (First letters capitalized)</span>
<span class="comment-copy">First, please <i>specify</i> your problem.  Can you characterize the full range of possible phrases?  Can you delineate phrase separators?  For instance, how do you discriminate between "the United States of Brasil" and "the United States of North America"?  How do you discriminate "Trinidad and Tobago" versus "France and Germany"? - - - - Until you can specify the boundaries of the linguistic problem, asking for a specific solution won't work.  Instead, perhaps what you need is a comprehensive list of all nations; then you can find that as a follow-on from "citizens of".</span>
<span class="comment-copy">Since there are no variable country's, install <a href="http://www.regexformat.com" rel="nofollow noreferrer">regexformat.com app</a>. Dump every possible country name there is in the ternary strings to regex tool. It creates a full, multi-level regex trie that you can use. Just put <code>citizens of </code> in front of it. <a href="http://www.regexformat.com/version_files/Rx5_ScrnSht01.jpg" rel="nofollow noreferrer">Screenshot</a> of tool. This is an example of a <a href="http://www.regexformat.com/Dnl/_Samples/_Ternary_Tool%20(Dictionary)/___txt/_ASCII_175,000_word_Mix_A-Z_Multi_Lined.txt" rel="nofollow noreferrer">175,000 word dictionary</a> created with the tool.</span>
