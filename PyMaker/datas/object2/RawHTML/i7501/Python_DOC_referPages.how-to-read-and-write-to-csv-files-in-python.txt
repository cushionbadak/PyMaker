<div class="post-text" itemprop="text">
<p>I have a csv file, which has only a single column , which acts as my input. </p>
<p>I use that input to find my outputs. I have multiple outputs and I need those outputs in another csv file. </p>
<p>Can anyone please suggest me the ways on how to do it ?</p>
<p>Here is the code : </p>
<pre><code>import urllib.request
jd = {input 1}
// 
  Some Codes to find output - a,b,c,d,e
//
** Code to write output to a csv file.
** Repeat the code with next input of input csv file.


 Input CSV File has only a single column and is represented below: 
 1
 2
 3
 4
 5 

 Output would in a separate csv in a given below format :
  It would be in multiple rows and multiple columns format.

 a    b     c    d      e    
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is a simple example: </p>
<p>The data.csv is a csv with one column and multiple rows.</p>
<p>The results.csv contain the mean and median of the input and is a csv with 1 row and 2 columns (mean is in 1st column and median in 2nd column)</p>
<p>Example:</p>
<pre><code>import numpy as np
import pandas as pd
import csv

#load the data
data = pd.read_csv("data.csv", header=None)

#calculate things for the 1st column that has the data
calculate_mean = [np.mean(data.loc[:,0])]
calculate_median = [np.median(data.loc[:,0])]
results = [calculate_mean, calculate_median]

#write results to csv
row = []
for result in results:
    row.append(result)

with open("results.csv", "wb") as file:
   writer = csv.writer(file)
   writer.writerow(row)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In pseudo code, you'll do something like this:</p>
<pre><code>for each_file in a_folder_that_contains_csv:  # go through all the `inputs` - csv files
    with open(each_file) as csv_file, open(other_file) as output_file:  # open each csv file, and a new csv file
        process_the_input_from_each_csv  # process the data you read from the csv_file
        export_to_output_file  # export the data to the new csv file
</code></pre>
<p>Now, I won't write a full-working example because it's better for you to start digging and ask <em>specific</em> questions when you have some. You're now just asking: <em>write this for me because I don't know Python</em>.</p>
<ul>
<li><a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">here is the official documentation</a></li>
<li><a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">here you can read about the csv module</a></li>
<li><a href="https://docs.python.org/3/library/os.html" rel="nofollow noreferrer">here you can read about the <code>os</code> module</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>I think you need <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html" rel="nofollow noreferrer"><code>read_csv</code></a> for reading file to <code>Series</code> and <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.to_csv.html" rel="nofollow noreferrer"><code>to_csv</code></a> for writing output <code>Series</code> to file in looping by <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.iteritems.html" rel="nofollow noreferrer"><code>Series.iteritems</code></a>.</p>
<hr/>
<pre><code>#file content
1
3
5
</code></pre>
<hr/>
<pre><code>s = pd.read_csv('file', squeeze=True, names=['a'])
print (s)
0    1
1    3
2    5
Name: a, dtype: int64
</code></pre>
<hr/>
<pre><code>for i, val in s.iteritems():
    #print (val)
    #some operation with scalar value val
    df = pd.DataFrame({'a':np.arange(val)})
    df['a'] = df['a'] * 10
    print (df)
    #write to csv, file name by val
    df.to_csv(str(val) + '.csv', index=False)

   a
0  0

    a
0   0
1  10
2  20

    a
0   0
1  10
2  20
3  30
4  40
</code></pre>
</div>
<span class="comment-copy">Your question is really vague. Use the <code>csv</code> module to load the data from the csv. Process the info and use the same module to output the data.</span>
<span class="comment-copy">Actually, I am fledgling in python and dont know on how to use it. Also, I am finding to difficult to contemplate on how would it select next input from CSV after completing one iteration of operation.</span>
<span class="comment-copy">Parse the files inside some folder(s) which you can handle with a simple for loop and the <code>os</code> module. Then do what I said in the first comment. Start with the <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">official documentation</a></span>
<span class="comment-copy">I just posted an answer covering 3 cases (lists, pandas, numpy array). Please let us know what format do your data have in order to provide a better solution</span>
<span class="comment-copy">Your first step before asking such a question is to do some research. Searching for "csv python" will  yield lots and lots of results.</span>
<span class="comment-copy">Hey Buddy thanks, I had a query that -  I have one csv file, which has a single column with multiple rows. For Each row, I am doing operation, and finding some outputs. Those outputs are needed to saved in separate csv file in multiple columns. And I want to repeat this until my input csv file gets finished.</span>
<span class="comment-copy">Really appreciated help. !! I just a way to approach . some pseudocode as you have written in your answer.</span>
<span class="comment-copy">@user3476378 do you use pandas to load the first csv file? also, your results are lists or numpy arrays?</span>
<span class="comment-copy">Hi, I havent used anything yet. I came to know that csv and pandas are both go to API's to do these things.</span>
<span class="comment-copy">Thanks for providing the framework. It really much clears the air of doubt I had.!</span>
<span class="comment-copy">Hey Thanks, I have taken your advice. I dont needed anyone to code for me. I just needed a way on how to approach this.</span>
<span class="comment-copy">and how would I import from CSV and how would the code use the input value , writes to csv and then moves back to pick another input value ? I am really confused.</span>
<span class="comment-copy">Hmmm, do you have multiple one column input files and need one output file with all columns ?</span>
<span class="comment-copy">because then is pandas not necessary, plain python is better/faster. But if need create <code>DataFrame</code> (2d array) from all data and then process them by pandas functions, then use my solution.</span>
<span class="comment-copy">I have one csv file, which has a single column with multiple rows. For Each row, I am doing operation, and finding some outputs. Those outputs are needed to saved in separate csv file in multiple columns. And  I want to repeat this until my input csv file gets finished.</span>
<span class="comment-copy">@user3476378 can you upload your data in order to find a solution?</span>
