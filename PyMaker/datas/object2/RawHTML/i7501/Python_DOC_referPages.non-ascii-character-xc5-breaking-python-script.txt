<div class="post-text" itemprop="text">
<p>My node.js server outputs the following array:</p>
<pre><code>["Daniel Guillen","Sarah Tremaine Milam","Karen Ann"...."Chris Doyle","Katie Gould"]
</code></pre>
<p>I'm trying to convert it to a csv file using a python script but when I declare the array in my .py file I get the following error:</p>
<pre><code>SyntaxError: Non-ASCII character '\xc5' in file toCSV.py
</code></pre>
<p>The array consists of people's names from Facebook so someone somewhere has a weird character in their name. It is too long to manually search.</p>
<p>How do you recommend working around this problem or finding the offending character? Iterating through the array in javascript before handing to python is also an option.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use codecs (you'll have to import it) to read utf8 (non-ascii) characters. Like so:</p>
<pre><code>csvfile = codecs.open(outputFileName+".csv", 'w+', 'utf8')
</code></pre>
<p>That would be for writing to an output file. If you want to read in a file, just change the 'w+' to 'r'.
For individual strings, you can also use the method "string".encode('utf8')
This fixes the issue if it's being read from another file. If you have it in the file you're running, you need to set the encoding by putting </p>
<pre><code># -*- coding: utf-8 -*- 
</code></pre>
<p>at top of file</p>
</div>
<div class="post-text" itemprop="text">
<p>If the array is embedded in the python script then you may need to set the encoding at the start of the python file. To do this add the following line before any code:</p>
<pre><code># -*- coding: utf-8 -*-
</code></pre>
<p>This sets the source code encoding to UTF-8.</p>
</div>
<span class="comment-copy"><a href="http://pyvideo.org/pycon-us-2012/pragmatic-unicode-or-how-do-i-stop-the-pain.html" rel="nofollow noreferrer">Pragmatic Unicode, or, How do I stop the pain?</a> - I think that was a talk based on Python 2.7 but some of the ideas transfer to 3.x. <a href="https://docs.python.org/3/howto/unicode.html" rel="nofollow noreferrer">Unicode HOWTO</a> in the docs.</span>
<span class="comment-copy">Switch to Python 3. It defaults to UTF-8 source files, so you don’t have to go to the trouble of declaring encodings.</span>
<span class="comment-copy">This wouldn’t be the cause of a SyntaxError.</span>
<span class="comment-copy">If it's being read from another file, this fixes the issue. If you have it in the file you're running, you need to set the encoding by putting '# -<i>- coding: utf-8 -</i>-` at top of file</span>
<span class="comment-copy">@CaryShindell add this to your answer and I'll mark it as accepted - thanks!</span>
<span class="comment-copy">@PatrickConnors fixed. You're very welcome!</span>
