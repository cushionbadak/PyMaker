<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/32351508/python-sorting-key-function-supporting-tuples-and-lists">Python sorting key function supporting tuples and lists</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>MWE:</p>
<pre><code>list1 = [2,5,46,23,9,78]
list1 = list(enumerate(list1))
</code></pre>
<p>Now suppose I want to sort this list by the index 1, i.e. by the original list1, in say, ascending order.
How do I do that?</p>
<p>I would like something that could then give me both the indexes and the values.</p>
<pre><code>list2 = sorted(list1[1], key=float)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sort with <code>item[1]</code> as key:</p>
<pre><code>&gt;&gt;&gt; list2 = sorted(list1, key=lambda x:x[1])
&gt;&gt;&gt; list2
[(0, 2), (1, 5), (4, 9), (3, 23), (2, 46), (5, 78)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something like this?</p>
<pre><code>&gt;&gt;&gt; from operator import itemgetter
&gt;&gt;&gt; sorted(list1, key=itemgetter(1))
[(0, 2), (1, 5), (4, 9), (3, 23), (2, 46), (5, 78)]
</code></pre>
<p>By providing a function of one argument to <a href="https://docs.python.org/3/library/functions.html#sorted" rel="nofollow noreferrer"><code>key</code></a> we are specifying a comparison key for list elements used by <code>sorted</code>. <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>itemgetter</code></a> is a nice functional wrapper around item getter operator <code>[i]</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to pass in the whole list (not just the first element), and use a lambda function to sort on the value - <code>x[1]</code>.</p>
<pre><code>&gt;&gt;&gt; list1 = [2,5,46,23,9,78]
&gt;&gt;&gt; list2 = list(enumerate(list1))
&gt;&gt;&gt; list2
[(0, 2), (1, 5), (2, 46), (3, 23), (4, 9), (5, 78)]
&gt;&gt;&gt; list3 = sorted(list2, key=lambda x: x[1])
&gt;&gt;&gt; list3
[(0, 2), (1, 5), (4, 9), (3, 23), (2, 46), (5, 78)]
</code></pre>
</div>
<span class="comment-copy">If it's an option, consider sorting the list before enumerating it: <code>list(enumerate(sorted(list1)))</code>, unless you intend to keep a reference to the original index, in which case this does not work.</span>
