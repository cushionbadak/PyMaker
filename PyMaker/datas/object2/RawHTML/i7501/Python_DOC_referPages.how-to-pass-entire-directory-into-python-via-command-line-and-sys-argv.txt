<div class="post-text" itemprop="text">
<p>So in the past when I've used a unix server to do my python development if I wanted to pass in an entire folder or directory, I would just put an asterisk(<em>) on the end of it. An example would be something like users/wilkenia/shakespeare/</em> to pass in a set of files containing each of shakespeare's plays. Is there a way to do this in windows? I've tried putting in C:\Users\Alexander\Desktop\coding-data-exam\wx_data* and the same with the disk name removed. Nothing has worked so far, in fact, it takes in the directory as an argument itself.</p>
<p>Edit: implemented glob, getting a permissions error, even though I'm running as administrator. Here's my <a href="http://pythonfiddle.com/answer1py" rel="nofollow noreferrer">code</a> if anyone wants to have a look.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://docs.python.org/2/library/glob.html#module-glob" rel="nofollow noreferrer"><code>glob</code></a> module, it does exactly this.</p>
<p>A quick demo:</p>
<pre><code>In [81]: import glob

In [82]: glob.glob('*')
Out[82]: 
[
... # a bunch of my personal files from my cwd
]
</code></pre>
<p>If you want to extend this for your use case, you'll need to do something along the lines of:</p>
<pre><code>import sys
import glob

arg = sys.argv[1]

for file in glob.glob(arg):
    ....
</code></pre>
<p>You'll read your args with <code>sys.argv</code> and pass it onto <code>glob</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>For the sake of showing how you can use <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">pathlib</a> to achieve this result. You can do something like this: </p>
<p>some_script.py:</p>
<pre><code>from pathlib import Path

path = Path(sys.argv[1])

glob_path = path.glob('*')

for file_path in glob_path:
    print(file_path)
</code></pre>
<p>Demo:</p>
<pre><code>python some_script.py C:/some/path/
</code></pre>
<p>Output:</p>
<pre><code>C:/some/path/depth_1.txt
C:/some/path/dude.docx
C:/some/path/dude.py
C:/some/path/dude_bock.txt
</code></pre>
<p>The nice thing about <code>pathlib</code>, is that it takes an object oriented approach to help work with the filesystem easier. </p>
<p>Note: <code>pathlib</code> is available <em>out-of-the-box</em> from Python 3.4 and above. If you are using an older version of Python, you will need to use the backported package that you can get from pypi: <a href="https://pypi.python.org/pypi/pathlib2/" rel="nofollow noreferrer">here</a></p>
<p>Simply: <code>pip install pathlib2</code></p>
</div>
<span class="comment-copy">Windows cmd-line doesn't support globbing, but you can pass the argument into the python's <code>glob</code> module.</span>
<span class="comment-copy">Take a look at <a href="https://docs.python.org/3/library/pathlib.html" rel="nofollow noreferrer">pathlib</a>. Very powerful tool that should help you craft what you are trying to do.</span>
