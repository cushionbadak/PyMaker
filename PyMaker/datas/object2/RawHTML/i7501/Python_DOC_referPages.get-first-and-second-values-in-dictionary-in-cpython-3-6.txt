<div class="post-text" itemprop="text">
<p>Now that dictionaries are ordered in python 3.6, it must be the case that there is a way to get the first and second values of a dictionary in only two lines.  Right now, I have to use 7 lines to accomplish this:</p>
<pre><code>for key, value in class_sent.items():
    i += 1
    if i == 1:
        first_sent = value
    elif i == 2:
        second_sent = value
</code></pre>
<p>I also tried:</p>
<pre><code>first_sent = next(iter(class_sent))
    second_sent = next(iter(class_sent))
</code></pre>
<p>But in that case the second_sent is equal to the first_sent. If anyone knows how to obtain the first and second values in a dictionary in as few lines as possible I would seriously appreciate it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Right now Python only guarantees that the order of <code>**kwargs</code> and class attributes are preserved.</p>
<p>Considering that the implementation of Python you're using guarantees this behaviour you could do.</p>
<ol>
<li>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow noreferrer"><code>itertools.islice</code></a>.</li>
</ol>
<p></p>
<pre><code>&gt;&gt;&gt; from itertools import islice    
&gt;&gt;&gt; dct = {'a': 1, 'b': 2, 'c': 3}    
&gt;&gt;&gt; first, second = islice(dct.values(), 2)    
&gt;&gt;&gt; first, second
(1, 2)
</code></pre>
<ol start="2">
<li>Using <a href="https://docs.python.org/3/library/functions.html#iter" rel="nofollow noreferrer"><code>iter()</code></a>.</li>
</ol>
<p></p>
<pre><code>&gt;&gt;&gt; it = iter(dct.values())    
&gt;&gt;&gt; first, second = next(it), next(it)    
&gt;&gt;&gt; first, second
(1, 2)
</code></pre>
<ol start="3">
<li>Using <a href="https://www.python.org/dev/peps/pep-3132/" rel="nofollow noreferrer">extended iterable unpacking</a>(will result in unnecessary unpacking of other values as well):</li>
</ol>
<p></p>
<pre><code>&gt;&gt;&gt; first, second, *_ = dct.values()
&gt;&gt;&gt; first, second
(1, 2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This could work:</p>
<pre><code>first_sent, second_sent = list(class_sent.values())[:2]
</code></pre>
</div>
<span class="comment-copy">For those who wonder: <a href="https://stackoverflow.com/q/39980323/7051394">stackoverflow.com/q/39980323/7051394</a>. Besides, this (as for now) happens to be an implementation detail for CPython, and is not comprised in Python 3.6's spec.</span>
<span class="comment-copy">Please do emphasize the fact that this is not valid in Python 3.6, but in CPython 3.6. As for now, according to the actual specification, dictionaries are not ordered, so this must no be taken for granted.</span>
<span class="comment-copy">excellent!  thanks a lot for the help</span>
<span class="comment-copy">Yes. For now it is good practice to explicitly import and use <code>OrderedDict</code>, which in Python 3.6 is just a thin wrapper around <code>dict</code> now.</span>
<span class="comment-copy">@bobsmith76 note, you could have <i>always</i> done this, just that the order would not reflect insertion order. Since being ordered is currently just an implementation detail, you should still use <code>OrderedDict</code> if you want your code to be portable.</span>
<span class="comment-copy">Is 1 and 2 O(1) operations ?</span>
