<div class="post-text" itemprop="text">
<p>Why does <code>dropwhile</code> and <code>takewhile</code> skip the last <code>a</code> in the following exmaple?</p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; s = "Aardvark"
&gt;&gt;&gt; def vowel(c):
...     return c.lower() in "aeiou"
...
&gt;&gt;&gt; list(itertools.dropwhile(vowel, s))
['r', 'd', 'v', 'a', 'r', 'k']
&gt;&gt;&gt; list(itertools.takewhile(vowel, s))
['A', 'a']
</code></pre>
<p>Before test in console, I think the result should be <code>['r', 'd', 'v', 'r', 'k']</code> and <code>['A', 'a', 'a']</code>.</p>
<p>The documentation said the roughly implementation of <code>dropwhile</code> and <code>takewhile</code> as follows:</p>
<pre><code>def dropwhile(predicate, iterable):
# dropwhile(lambda x: x&lt;5, [1,4,6,4,1]) --&gt; 6 4 1
iterable = iter(iterable)
for x in iterable:
    if not predicate(x):
        yield x
        break
for x in iterable:
    yield x

def takewhile(predicate, iterable):
    # takewhile(lambda x: x&lt;5, [1,4,6,4,1]) --&gt; 1 4
    for x in iterable:
        if predicate(x):
            yield x
        else:
            break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are not <strong>filtering</strong> the string, you are <strong>dropping or taking</strong> as a certain condition is maintained.</p>
<p>The drop-while would stop dropping when reaching <code>"r"</code> which is not a vowel, and take the rest, and the take-while would stop taking when reaching <code>"r"</code> which is not a vowel, and drop the rest.</p>
<p>The behavior you are describing as desired can be gained with <code>filter</code>:</p>
<pre><code>&gt;&gt;&gt; list(filter(lambda x: x.lower() in 'aeoui', "Aardvark"))
['A', 'a', 'a']
&gt;&gt;&gt; list(filter(lambda x: x.lower() not in 'aeoui', "Aardvark"))
['r', 'd', 'v', 'r', 'k']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Starting at the beginning, it <code>take</code>s items <code>While</code> they match a condition, and stops when they don’t. You’re looking for <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter</code></a> (and <a href="https://docs.python.org/3/library/itertools.html#itertools.filterfalse" rel="nofollow noreferrer"><code>itertools.filterfalse</code></a>):</p>
<pre><code>list(filter(vowel, s))
</code></pre>
<p>or a list comprehension:</p>
<pre><code>[c for c in s if vowel(c)]
</code></pre>
</div>
