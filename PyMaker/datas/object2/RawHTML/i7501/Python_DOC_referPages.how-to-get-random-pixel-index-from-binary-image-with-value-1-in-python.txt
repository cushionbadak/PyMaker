<div class="post-text" itemprop="text">
<p>I have a binary image of large size (2000x2000). In this image most of the pixel values are zero and some of them are 1. I need to get only 100 randomly chosen pixel coordinates with value 1 from image. I am beginner in python, so please answer.  </p>
</div>
<div class="post-text" itemprop="text">
<p>I'd suggest making a list of coordinates of all non-zero pixels (by checking all pixels in the image), then using <code>random.shuffle</code> on the list and taking the first 100 elements.</p>
</div>
<div class="post-text" itemprop="text">
<p>After importing necessary libraries like </p>
<pre><code>import cv2
import numpy as np  
import pandas as pd  
import matplotlib.pyplot as plt 

gray_img = cv2.imread(img_file, cv2.IMREAD_GRAYSCALE) # grayscale

gray_img[i,j] will give pixel value at (i,j) position
</code></pre>
<p>Try to send all these values into a file in this format</p>
<pre><code>i_positition,j_position,value_of_pixel

path = os.getcwd() + '/filename.txt'  
data = pd.read_csv(path, header=None, names=['i', 'j', 'value'])

positive = data[data['value'].isin([1])]  
negative = data[data['value'].isin([0])]
</code></pre>
<p>positive data frame contains all the pixel positions whose value is 1.</p>
<pre><code>positive['i'] ,positive['j'] will give you list of (i,j) values of all the pixels whose value is 1.

i_val=np.asarray(positive['i'])

j_val=np.asarray(positive['j'])
</code></pre>
<p>Now you can randomly select any value from <code>i_val</code> &amp; <code>j_val</code> arrays.</p>
<p><strong>Note</strong>: Make sure that your pixel values will be 1 or 0. If your values are 0 and 255 then change this command</p>
<pre><code>positive = data[data['value'].isin([255])] 
</code></pre>
</div>
<span class="comment-copy">Great. What have you tried? <code>PIL</code>  --&gt; <i>Python Imaging Library</i> module might help you.</span>
<span class="comment-copy">Also can you post the image?</span>
<span class="comment-copy">just a quick question - will he need to be careful about 2080 limit as mentioned here?: <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer">docs.python.org/3/library/random.html#random.shuffle</a></span>
<span class="comment-copy">A valid question.  I guess it is up to OP to decide, because we don't know what "most" in the question means - 90%? 99%? 99.99%? If there are just a few hundred non-zero pixels, it should be safe to use <code>random.shuffle</code>, otherwise it might be better to use <code>random.choice</code>.</span>
<span class="comment-copy">Awesome..! Thankyou sir. I found that random.choice can not be used here as coordinates are 2 dimensional. so i have tried random.shuffle as-                         coordinates = np.argwhere(img) print(coordinates.shape) index = random.shuffle(coordinates) print(index[0:100])                                                                                               it gives me following error-TypeError: 'NoneType' object is not subscriptable</span>
<span class="comment-copy"><code>coordinates = np.argwhere(img)  print(coordinates.shape)  random.shuffle(coordinates) print(coordinates[0:100])</code></span>
<span class="comment-copy">Thank you..! It leads to lot of calculation. i tried np.argwhere(img) to get coordinates and random.shuffle()  to get random coordinates but i got TypeError: 'NoneType' object is not subscriptable in sampling only 100 random coordinates.</span>
