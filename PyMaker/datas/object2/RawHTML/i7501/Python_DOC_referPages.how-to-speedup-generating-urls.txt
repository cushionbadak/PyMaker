<div class="post-text" itemprop="text">
<p>I have the following method that generates <code>URLs</code> for me:</p>
<pre><code>async def get_url_for_ids(self, ids: List[int]) -&gt; List[str]:
    urls = []
    async with self.session.create_client('s3', region_name=self.region_name) as s3:
        for id in ids:
            url = s3.generate_presigned_url(ClientMethod='get_object',
                  Params={'Bucket': self.bucket_with_videos,  'Key': '{}.mp4'.format(id)})
            urls.append(url)
    return urls
</code></pre>
<p>This method is the slowest part in my app. Even query to the DB works much faster. <code>get_url_for_ids</code> works around <code>15 sec</code> if <code>ids</code> contains for example <code>30,000</code> elements. </p>
<p>How to speed up it?</p>
</div>
<div class="post-text" itemprop="text">
<p>Depending on what you are doing with your list of URLS one option could be to use a <a href="https://docs.python.org/3/glossary.html#term-generator" rel="nofollow noreferrer">generator</a>. This would mean the the whole list of URLs wouldn't need to be computed before you can start using them.</p>
<pre><code>async def get_url_for_ids(self, ids: List[int]) -&gt; List[str]:
    async with self.session.create_client('s3', region_name=self.region_name) as s3:
        for id in ids:
            url = s3.generate_presigned_url(ClientMethod='get_object',
                  Params={'Bucket': self.bucket_with_videos,  'Key': '{}.mp4'.format(id)})
            yield url
</code></pre>
<p>To use this generator it must be in an async function, and the for loop is prefixed with <code>async</code>:</p>
<pre><code>async def main():
    async for item in get_url_for_ids():
        #do something
</code></pre>
<hr/>
<p>If you <em>need</em> the list pre-computed and available in memory, then I am not sure.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't say what size self.bucket_with_videos is but I suspect it is large and the API is doing a linear, or possibly accidentally quadratic<a href="https://accidentallyquadratic.tumblr.com/" rel="nofollow noreferrer" title="accidentally quadratic">1</a>, search over it.</p>
</div>
<span class="comment-copy">2000 per second is pretty fast! Why are you creating so many pre-signed URLs? Applications normally generate pre-signed URLs only when a user requests access to an object in Amazon S3. That way, the expiration time can be based on the request time. So why are you pre-generating 30,000+ URLs?</span>
<span class="comment-copy">Generating signed URLs doesn't contact the service -- they're generated locally, but do require relatively CPU intensive HMAC-SHA operations. 2K/sec is actually pretty respectable.</span>
