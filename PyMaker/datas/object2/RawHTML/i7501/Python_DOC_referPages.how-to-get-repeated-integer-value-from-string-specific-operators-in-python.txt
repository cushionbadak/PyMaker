<div class="post-text" itemprop="text">
<p>I have a string value that contains numbers symbols and character.
The string is :</p>
<pre><code>"1=value.2=value.4=value + 3=value.4=value+5=value"
</code></pre>
<p>How to find how many repeated key value in whole string and also find repeated key values separated by + operator?</p>
<p>Is there a better way than splitting the string?</p>
</div>
<div class="post-text" itemprop="text">
<p>here is the another way . If my understanding is right.</p>
<pre><code>import re
s = "1=value.2=value.4=value + 3=value.4=value+5=value"
# finding the all value like '1=value' as a list
new_dict_list = re.findall(r'\d+=?\w+', s)
# declaring dict for creating key value dict
new_dict={}
# declare a dict for creating key counting repetition
count_dict_key = {}
for ls in new_dict_list:
    # split the list element for finding and storing key and value
    split_value = ls.split('=')
    key = split_value[0]
    value = split_value[1]
    # checking the repetition key
    if split_value[0] in new_dict:
        count_dict_key[key] = ''.join(new_dict_list).count(key)
    else:
        new_dict[split_value[0]]=value
        count_dict_key[split_value[0]]=1

print("printing new dictionary....\n",new_dict)
print("counting key...\n",count_dict_key) 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Is there a better way than splitting the string?</p>
</blockquote>
<p>Not really. You can use <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer"><code>re.split()</code></a> to split the string on every <code>.</code> and <code>+</code> character. And you can use <code>len()</code> to then get the length of the resulting list which corresponds to the number of "key, value" pairs:</p>
<pre><code>&gt;&gt;&gt; from re import split
&gt;&gt;&gt; string = "1=value.2=value.4=value + 3=value.4=value+5=value"
&gt;&gt;&gt; kv_pairs = re.split('\.|\+', string)
&gt;&gt;&gt; kv_pairs
['1=value', '2=value', '4=value ', ' 3=value', '4=value', '5=value']
&gt;&gt;&gt; len(kv_pairs) # number of key, value pairs
6
&gt;&gt;&gt; 
</code></pre>
<p>If you want to count repeated key, value pairs, you can use <code>collections.Counter()</code>. Note however, that in your example there are no repeated key, value pairs:</p>
<pre><code>&gt;&gt;&gt; from collections import Counter
&gt;&gt;&gt; {k: v for k, v in dict(Counter(kv_pairs)).items() if v &gt; 1}
{}
&gt;&gt;&gt; 
</code></pre>
<p>If you also want to include the separators, you can wrap the regex in parenthesis you form a capture group:</p>
<pre><code>&gt;&gt;&gt; kv_pairs = re.split('(\.|\+)', string)
&gt;&gt;&gt; kv_pairs
['1=value', '.', '2=value', '.', '4=value ', '+', ' 3=value', '.', '4=value', '+', '5=value']
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">What is the key and what is the value?</span>
<span class="comment-copy">can you post the desired output?</span>
<span class="comment-copy">@cᴏʟᴅsᴘᴇᴇᴅ I believe he wants to split his string on every <code>.</code> and <code>+</code> and get the key value pairs as one string separated by the <code>=</code> sign. eg: <code>1=value</code>, <code>4=value</code>, etc...</span>
<span class="comment-copy">Have you tried simply counting the number of <code>.</code> and <code>+</code> in the string?</span>
<span class="comment-copy">You may want to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>, and re-word your question accordingly.</span>
<span class="comment-copy">Thanks @R.A.Munna.</span>
<span class="comment-copy">Didn't he want to count repeated key/value pairs as well? (could you just compare length of a Set of the data to length of the list)</span>
<span class="comment-copy">@WookieCoder Ah, I believe your right. I'll edit.</span>
