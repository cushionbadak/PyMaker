<div class="post-text" itemprop="text">
<p>Running on a local Apache setup on my machine, and I use python outside of Laravel. </p>
<p>Using Laravel 5.4, I have made and registered the command. I can call it fine using <code>php artisan python:printIt</code>. </p>
<p>I am getting a success on running the command. . . but the file is not writing! Here is the console message:</p>
<blockquote>
<p>$ php artisan python:printIt In command handle for printIt. Running
  command. Command is : C:\Users\Cortland\Miniconda3\python.exe
  C:^\wamp64^\www^\cmrd^\cgi-bin^\py-test^\printer.pySuccess. Here is
  the return value: This message came from the python script.1</p>
</blockquote>
<p>The python script is fine when run through the python shell or command line. Here, must be running the script because it has the correct <code>print</code> message. However, the <code>exec</code> return value is a <code>1</code>, which is failure. </p>
<p>The failure is confirmed in that no file 'pyfyle.txt' exists. </p>
<p><strong>What am I doing incorrectly, and how can it be fixed?</strong>
The real application will be more involved, but have to make sure I can operate basic script calls first. </p>
<p>The Laravel command class: </p>
<h1>printIt.php</h1>
<pre><code>class printIt extends Command
{
    protected $signature = 'python:printIt';

    protected $description = 'Run the test python command.';

    public function __construct()
    {
        parent::__construct();
    }

    public function handle()
    {
        echo "In command handle for printIt.\n";
        exec("where python", $path);

        $cmd = base_path('cgi-bin\py-test\printer.py');

        // "path/to/python command"
        $run = $path[0] . ' ' . escapeshellcmd($cmd);

        try {
            echo "Running command.\n";
            echo "Command is : " . $run;
            $res = exec($run, $out, $res);

            if ($res == 1) {
                throw \Exception("Could not run the sript");
            } else {
                echo "Success. Here is the return value: ", print_r($res);
            }
        } catch (\Exception $e) {
            echo "Error running command. It says " . $e-&gt;getMessage();
        }
    }
}
</code></pre>
<p>The python script: </p>
<h1>printer.py</h1>
<pre><code>with open('pyfyle.txt', 'w', encoding='utf-8') as f:
    f.write('new text here.')
    f.close

// Edit: error, incorrect call to close: change f.close to f.close()

print("This message came from the python script..")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In console enter:</p>
<pre><code>sudo chmod +x printer.py
</code></pre>
<p>To give the Python script execution permissions.</p>
<p>That would work for Linux distributions, but seeing that you have "C:\" in your output, it means you're running Windows.</p>
<p>In which case:</p>
<blockquote>
<p>you need to add .py to the PATHEXT environment variable.</p>
</blockquote>
<p>as per:  <a href="https://docs.python.org/3/faq/windows.html#how-do-i-make-python-scripts-executable" rel="nofollow noreferrer">https://docs.python.org/3/faq/windows.html#how-do-i-make-python-scripts-executable</a></p>
</div>
<div class="post-text" itemprop="text">
<p><em>The issue was I had made an assumption about the version of python the server was running.</em></p>
<p>At home I use Python 3.6. If I had simply ran <code>python -V</code> on the server at the beginning, I would have prevented hours of confundrum and frustration. </p>
<p>The server runs on Python 2.6, where file operation is not the same. kwarg <code>encoding</code> is not valid, which is enough to break the program. </p>
<p>Also, I should have been printing <code>$res</code> to see the error messages.</p>
<p><strong>Moral of the story:</strong></p>
<p>Always check software and package versions.</p>
<p>Always find a way to show your errors.</p>
</div>
<span class="comment-copy">What privileges does the python script have? Php runs exec as web user not as root.</span>
<span class="comment-copy">@Bj√∂rn, good call! <code>ls -al</code> shows me <code>-rw-r--r-- 1 Naltroc 197121 150 Jul  1 18:55 printer.py</code>. So that means owner: read write, group: read, others: read if memory serves. In general, Is it safe to set others to execute? The script can only be called through the controller or command interface, so it seems safe . . .</span>
