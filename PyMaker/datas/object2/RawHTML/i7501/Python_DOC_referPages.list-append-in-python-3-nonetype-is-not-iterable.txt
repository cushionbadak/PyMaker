<div class="post-text" itemprop="text">
<p>I am trying to add every word in <code>romeo.txt</code> to an empty list.<br/>
I thought this code was okay but <code>python3</code> returns a traceback saying </p>
<blockquote>
<p>File "test.py", line 13, in &lt;module&gt;
      if i in lst:
  TypeError: argument of type 'NoneType' is not iterable</p>
</blockquote>
<p>here's my code:</p>
<pre><code>fh = open("romeo.txt")
lst = list()
words = fh.read()
list1 = words.split()
for i in list1:
    if i in lst:
        continue
    else:
        lst = lst.append(i)
lst = lst.sort()
print(lst)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h1>Explanation</h1>
<p>You are making the same mistake twice. The first place you are making this error and the reason why you are getting the current error you are seeing is because of this: </p>
<pre><code>lst = lst.append(i)
</code></pre>
<p>The <code>append</code> method actually performs the <em>append</em> in place. The <em>actual</em> return of that call is going to be <code>None</code>, because it doesn't return anything. It doesn't need to, since it does the work on the list.</p>
<p>So, to narrow down exactly what is going on. When you did <code>lst = lst.append(i)</code>. <code>lst</code> will now hold <code>None</code>. So, the next time it goes through its loop and you get here:</p>
<pre><code>if i in lst:
</code></pre>
<p>You are checking if <code>i</code> is in <code>None</code>. Since now <code>lst</code> will hold <code>None</code>, it is exactly here where your error message gets raised and you are seeing that <code>Traceback</code>.</p>
<p>To replicate:</p>
<pre><code>   &gt;&gt;&gt; 'a' in None
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
TypeError: argument of type 'NoneType' is not iterable
</code></pre>
<h1>Solution</h1>
<p>To solve this, you just need perform the append like:</p>
<pre><code>lst.append(i)
</code></pre>
<h1>Second Mistake</h1>
<p>You are also making the same mistake when calling <code>sort</code> here:</p>
<pre><code>lst = lst.sort()
</code></pre>
<p>It is again a method that performs its work <em>in place</em>, therefore you just need:</p>
<pre><code>lst.sort()
</code></pre>
<h1>Extra Note</h1>
<p>Don't forget to close your file at the end of your code (or when you are done using the file: </p>
<pre><code>fh.close()
</code></pre>
<p>Ideally, it is always best to use a context manager as explained in the other answer <a href="https://stackoverflow.com/a/44917006/1832539">here</a>. Since the context manager does all the "cleanup" work for you. </p>
</div>
<div class="post-text" itemprop="text">
<p>Your problem is this line:</p>
<pre><code>lst = lst.append(i)
</code></pre>
<p><code>list.append()</code> does not return a new list, it works in-place and returns <code>None</code>. That means you're only assigning <code>lst</code> to <code>None</code>. So when you try to use <code>lst</code> in your next iteration, it fails. Just remove the assignment to <code>list.append()</code>:</p>
<pre><code>lst.append(i)
</code></pre>
<p>Note you also make the same mistake here:</p>
<pre><code>lst = lst.sort()
</code></pre>
<p><code>list.sort()</code> works <em>in-place</em>. Remove the assignment.</p>
<hr/>
<p>Your code can also be improved in several ways:</p>
<ul>
<li><p>Use the context manger to open your file. This ensures that your file will always close.</p></li>
<li><p>Since you appear to be filtering duplicates from your list, you can use a set instead to remove the duplicates, and sort the remaining words afterwards as @Julien suggested.</p></li>
</ul>
<p>Here is how the new code would look:</p>
<pre><code>with open('romeo.txt', 'r') as file:
    words = set(file.read().split())
    lst = sorted(words)

print(lst)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to avoid the loop, you can use sets:</p>
<pre><code>fh = open("romeo.txt")
words = fh.read()
lst = list(set(words.split()))
lst.sort()
print(lst)
</code></pre>
<p>Simply put, a set cannot have duplicates.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Hello Maxine Mou,</strong></p>
<p>Python 3 learning for best website,<br/>
1. <a href="https://www.tutorialspoint.com/python3/" rel="nofollow noreferrer">https://www.tutorialspoint.com/python3/</a><br/>
2. <a href="https://docs.python.org/3/tutorial/" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/</a><br/>
3. <a href="https://learnpythonthehardway.org/python3/" rel="nofollow noreferrer">https://learnpythonthehardway.org/python3/</a></p>
<p>Difference between python 2 and python 3,<br/>
1. <a href="http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html" rel="nofollow noreferrer">http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html</a><br/>
2. <a href="https://www.quora.com/What-are-the-major-differences-between-Python-2-and-Python-3" rel="nofollow noreferrer">https://www.quora.com/What-are-the-major-differences-between-Python-2-and-Python-3</a></p>
<p><strong>The close() Method</strong><br/>
The close() method of a file object flushes any unwritten information and closes the file object, after which no more writing can be done.</p>
<p>Python automatically closes a file when the reference object of a file is reassigned to another file. It is a good practice to use the close() method to close a file.</p>
<p><strong>Syntax</strong> </p>
<pre><code>fileObject.close();
</code></pre>
<p><strong>Your Mistake</strong><br/>
  When you write below function so it is not proper way because python is understood like as iterable object so you get error so only write <strong>lst.append(i)</strong>.</p>
<blockquote>
<p>lst = lst.append(i)</p>
</blockquote>
<p>Second mistake same as first. If you are sorting the list using <strong>sort()</strong> function so don't need to store in any variable because Python is sorting in existing list. So only write <code>lst.sort()</code>.</p>
<blockquote>
<p>lst = lst.sort()</p>
</blockquote>
<p>Try this below code,</p>
<pre><code>    #Open File using open() file function
    fh = open("test.txt")
    lst = list() 
    words = fh.read()
    list1 = words.split()

    for item in list1: 
        if item in lst:
            continue
        else:
            lst.append(item)

    #List sorting using sort() function
    lst.sort()

    #Display the sorting list
    print(lst)

    # Close the file using close() method
    fh.close()
</code></pre>
<p>I hope my answer is helpful. If any query so please comment.</p>
</div>
<span class="comment-copy">You know you can use <code>set</code> to avoid checking for duplicates? <code>sorted(list(set(words.split())))</code></span>
<span class="comment-copy">@ChristianDean he doesn't since he sorts at the end...</span>
<span class="comment-copy">And 'he' is a 'she' :)</span>
<span class="comment-copy">You should consider accepting the answer that helped resolve your problem. Indicating an answer as accepted helps future readers know quickly what helped resolve your problem if they happen to be facing the same issue.</span>
<span class="comment-copy">Hi all thanks so much for answering my question. I raised the question couple of months ago and it was my first time to use this forum. So sorry that I forgot about the question since I am not a frequent user of the forum. I want to apologize here for my ignorance and thank you all. Your answers have been very helpful.</span>
<span class="comment-copy">No man. I was just joking. I like your answer. That's why I was the first one who up-voted it. I was just teasing you because you beat me to answering the question.</span>
<span class="comment-copy">@ChristianDean Internat-chat is hard. lol.</span>
<span class="comment-copy">You forgot to add the <code>file.read()</code> before calling the <code>.split()</code>.</span>
<span class="comment-copy">@idjaw Thanks. Fixed.</span>
<span class="comment-copy">Using <code>pathlib</code> module, this collapses down to: <code>lst = sorted(set(pathlib.Path('romeo.txt').read_text().split()))</code></span>
<span class="comment-copy">Like the OP you forgot to close the file. Better advice is to use the context manager <code>with open(...) as fh</code>.</span>
