<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1373164/how-do-i-create-a-variable-number-of-variables">How do I create a variable number of variables?</a>
<span class="question-originals-answer-count">
                    16 answers
                </span>
</li>
</ul>
</div>
<p>So let's say we have the lists <code>a = [1,2,3,4]</code> and <code>s = ["q", "w", "e", "r"]</code>.
I want to dedicate every element in <code>s</code> a value in <code>a</code>, so that <code>print(w)</code> prints <code>2</code> and so on. You could write</p>
<pre><code>for u in range(0, len(a)):
   s[u] = a[u]
</code></pre>
<p>But here <code>print(w)</code> makes no sense and we get an error.</p>
</div>
<div class="post-text" itemprop="text">
<p>A <code>dict</code> does exactly this:</p>
<pre><code>In [1261]: d = dict(zip(s, a))

In [1262]: d
Out[1262]: {'e': 3, 'q': 1, 'r': 4, 'w': 2}
</code></pre>
<p>To get the value associated with <code>e</code>, simply use <code>dict indexing</code>:</p>
<pre><code>In [1263]: d['e']
Out[1263]: 3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The following solution does exactly what you have specified, using the built-in <a href="https://docs.python.org/3/library/functions.html#exec" rel="nofollow noreferrer"><code>exec()</code></a> function. However, you should <strong>never ever ever use it</strong>! It is hideously unsafe, and I am only posting it for completeness' sake. Use the solution after it instead.</p>
<pre><code>for i in range(len(s)):
    exec(s[i] + "=" + str(a[i]))
</code></pre>
<p>What you <strong>should</strong> do is use a <a href="https://docs.python.org/3.6/tutorial/datastructures.html#dictionaries" rel="nofollow noreferrer">dictionary</a>:</p>
<pre><code>myDictionary = dict(zip(s, a))
</code></pre>
<p>What this does is it matches each element of the lists <code>s</code> and <code>a</code> into key-value pairs in a dictionary by their index (meaning that they are matched based on their order).</p>
<p>And then you can do:</p>
<pre><code>&gt;&gt;&gt; print(myDictionary["w"])
2
</code></pre>
</div>
<span class="comment-copy">use a <code>dict</code> to map elements as you want!</span>
