<div class="post-text" itemprop="text">
<p>I have a list of strings which may contain letters, symbols, digits, etc, as below:</p>
<pre><code>list = ['\n', '', '0', '38059', '', '', '?_', '71229366', '', '1', '38059', '', '', '?_', '87640804', '', '2', '38059', '', '', '?_', '71758011', '', '', ':?', ';__', '71229366287640804271758011287169822']
</code></pre>
<p>How do I filter out all other strings, except numbers less than 10000000 and greater than 99999999?</p>
<p>Expected Output:</p>
<pre><code>list = ['71229366', '87640804', '71758011']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <code>map</code> and <code>filter</code>.</p>
<pre><code>your_list = ['\n', '', '0', '38059', '', '', '?_', '71229366', '', '1', '38059', 
             '', '', '?_', '87640804', '', '2', '38059', '', '', '?_', '71758011', 
             '', '', ':?', ';__', '71229366287640804271758011287169822']

new_list = list(map(int, filter(lambda x: x.isdigit() and 10000000 &lt; int(x) &lt; 99999999, your_list)))
print(new_list)
</code></pre>
<p><code>list()</code> optional on python2.</p>
<p>Output:</p>
<pre><code>[71229366, 87640804, 71758011]
</code></pre>
<hr/>
<p>If you don't want the conversion to integer, drop the <code>map</code>:</p>
<pre><code>&gt;&gt;&gt; list(filter(lambda x: x.isdigit() and 10000000 &lt; int(x) &lt; 99999999, your_list))
['71229366', '87640804', '71758011']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't mind making a new list, you can try something with just a list comprehension like</p>
<pre><code>filtered_list = [i for i in list if i.isdigit() and 10000000 &lt; int(i) &lt; 99999999]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def valid(v):
    try:
        value = int(v)
        return 10000000 &lt;= value &lt;= 99999999
    except:
        return False

output = [x for x in list if valid(x)]
</code></pre>
<p><strong>Explanation</strong>:</p>
<p>Filter all values in the list using the valid function as your criteria. </p>
</div>
<div class="post-text" itemprop="text">
<pre><code>data = ['\n', '', '0', '38059', '', '', '?_', '71229366', '', '1', '38059', 
        '', '', '?_', '87640804', '', '2', '38059', '', '', '?_', '71758011', 
        '', '', ':?', ';__', '71229366287640804271758011287169822']

res = []
for e in data:
    try:
        number = int(e)
    except ValueError:
        continue
    if 10000000  &lt; number &lt; 99999999:
        res.append(str(number))
</code></pre>
<p>print(res)</p>
<pre><code>print(res)
</code></pre>
<p>Output:</p>
<pre><code> ['71229366', '87640804', '71758011']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Let me provide a <strong>simple and efficient</strong> answer, using regular expressions. There's no need to <code>map</code> (duplicating the original list), or to convert everything to <code>int</code>s; you are basically asking how <strong>to keep all 8-digit integers</strong> in your list:</p>
<pre><code>&gt;&gt;&gt; filter(re.compile('^\d{8}$').match, data)
['71229366', '87640804', '71758011']
</code></pre>
<p>We <a href="https://docs.python.org/3/library/re.html#re.compile" rel="nofollow noreferrer"><code>compile</code></a> a regular expression which matches exactly 8 digits and then filter the list by providing a partial application of <a href="https://docs.python.org/3/library/re.html#re.regex.match" rel="nofollow noreferrer"><code>regex.match</code></a> to the standard <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow noreferrer"><code>filter</code></a> function.</p>
</div>
<span class="comment-copy">what do mean with <i>all the characters</i> ?</span>
<span class="comment-copy">here's the output with no characters <code>[]</code></span>
<span class="comment-copy">Try <code>list = None</code></span>
<span class="comment-copy">Please add the expected output to the question.</span>
