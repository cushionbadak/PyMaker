<div class="post-text" itemprop="text">
<p>I have a <code>dictionary</code>: keys are strings, values are float.</p>
<p>Example: </p>
<pre><code>A = {'a':1, 'b':2, 'c':2, 'd':0}
</code></pre>
<p>I'd like to get <code>'b'</code> or <code>'c'</code> as answer with equal probability. I found a way to get said behaviour. However I'm not convinced this is best practice.</p>
<pre><code>import random

A = {'a':1, 'b':2, 'c':2, 'd':0}
all = (A.items())
values = [(x[1],random.random(),x[0]) for x in all]
maxIndex = values.index(max(values))
print(values[maxIndex][2])
</code></pre>
<p>Is there a better (or even more elegant) approach?</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>import random
A = {'a':1, 'b':2, 'c':2, 'd':0}

mv = max(A.values())
random.choice([k for (k, v) in A.items() if v == mv])
=&gt; 'b' # or 'c'
</code></pre>
<p>First, we find the maximum value and then we randomly pick one of the keys that match that value. We're using <a href="https://docs.python.org/3/library/random.html#random.choice" rel="nofollow noreferrer"><code>random.choice</code></a>, which guarantees a random selection with uniform distribution.</p>
</div>
<span class="comment-copy"><code>random.choice(d.keys())</code> answered <a href="https://stackoverflow.com/questions/4859292/how-to-get-a-random-value-in-python-dictionary">here</a></span>
<span class="comment-copy">@Lex this doesn't look like the same thing. It's like, first find the maximum value, and then choose a random key that maps to that value.</span>
<span class="comment-copy">@Jedi <code>A</code> is in this form. I'm not worried about O(n) as n=4 in this case. I'd be great to see a faster approach in general though.</span>
