<div class="post-text" itemprop="text">
<p>In a module that I import, I'm trying to import another module, that is located in that same directory.</p>
<p>My files look something like this...</p>
<pre><code>project
├── main.py
└── app
    └── foo.py
    └── bar.py
</code></pre>
<p><strong>main.py</strong></p>
<pre><code>import app.foo as Foo
</code></pre>
<p><strong>foo.py</strong></p>
<pre><code>import bar
</code></pre>
<p>So now, when I run main.py, I get a</p>
<pre><code>ModuleNotFoundError: No module named 'bar'
</code></pre>
<p>There are so many similar questions, but none of them seem to be my exact situation. </p>
<p>How can I get this to work?</p>
</div>
<div class="post-text" itemprop="text">
<p>Imports from .. or . should work:</p>
<pre><code>from . import bar 
</code></pre>
<p>remember to add <code>__init__.py</code> (empty file) inside app directory. </p>
<p>Edit: it could be done only if using foo and bar as modules. E.g. you would not be able to run "python foo.py" or "python foo.bar". Outside of app directory, you could try the code with:</p>
<pre><code>python -m app.foo
</code></pre>
<p>(mind the lack of .py extension)</p>
</div>
<div class="post-text" itemprop="text">
<p>This is mainly because when run <code>main.py</code> directly, Python would use the directory where <code>main.py</code> locates as the current running directory, thus when you <code>import bar</code> directly in <code>foo.py</code>, Python interpreter will try to find <code>bar</code> module in that running directory, where <code>bar.py</code> doesn't exist apparently. That is the reason why <strong>relative import</strong> is needed, as answered by <a href="https://stackoverflow.com/users/8221879/robert-szczelina">@Robert Szczelina</a>.<br/>
If you run <code>foo.py</code> directly, the sentense <code>import bar</code> will be right.</p>
</div>
<span class="comment-copy"><code>from . import bar</code> should do the trick, but I'm not sure if this is really the recommended way :)</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/4209641/absolute-vs-explicit-relative-import-of-python-module">Absolute vs. explicit relative import of Python module</a></span>
<span class="comment-copy">Relevant section of the docs: <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">docs.python.org/3/tutorial/modules.html#packages</a> and especially: <a href="https://docs.python.org/3/tutorial/modules.html#intra-package-references" rel="nofollow noreferrer">docs.python.org/3/tutorial/…</a></span>
<span class="comment-copy">Also related: <a href="https://stackoverflow.com/q/14216200/1025391">stackoverflow.com/q/14216200/1025391</a></span>
