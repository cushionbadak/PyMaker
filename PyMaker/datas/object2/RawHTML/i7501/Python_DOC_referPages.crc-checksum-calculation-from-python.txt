<div class="post-text" itemprop="text">
<p>I'm trying to calculate the CRC32-C checksum value. I referred lot of online CRC calculators and lot of websites for writing my own crc checksum calculator. I'm not getting the expected result. From my research only "<a href="http://crccalc.com/" rel="nofollow noreferrer">http://crccalc.com/</a>" is giving my expected value. </p>
<p>I see there are many approaches with tables, without tables.. etc Nothing seems to be working for me, I'm uploading simple approach program which i used to calculate crc</p>
<pre><code>POLY_LENGTH = 32

def convertobin(input_message):
    input_message = bin(input_message[::-1])
    return input_message

def find_xor(polynomial, input_message):
    # print polynomial
    print input_message
    xor = polynomial ^ input_message
    return xor

def find_crc(polynomial, packet):
    print len(packet)
    input_messageInBin = bin(int(packet,16))[2:]
    print input_messageInBin, type(input_messageInBin)
    input_messageInBin = input_messageInBin + '0'*31
    inputMessageLength = len(input_messageInBin)
    firstTime = 1
    remainder = 0
    startmarker = 0
    control = 1
    diff = 0
    stopmarker = 0
    import pdb; pdb.set_trace()
    while control:
        if len(input_messageInBin) &gt; (startmarker + 32) :
            if firstTime:
                inputString = input_messageInBin[0:POLY_LENGTH]
                stopmarker = POLY_LENGTH - 1
                xor = find_xor(polynomial, int(inputString,2))

                xor_bits_length = len(bin(xor)) - 2
                remainder = str(bin(xor))[2:]
                diff = POLY_LENGTH - xor_bits_length
                firstTime = 0
                startmarker = startmarker + diff - 1
            else:
                diff_bits = input_messageInBin[stopmarker+1:stopmarker+diff+1]
                inputString = remainder + diff_bits
                print "--------------------------------------------------------"
                print "Total number of different bits are: ", diff
                print "remainder + diff_bits : ", remainder, "+", diff_bits
                print "XOR of :"
                print inputString
                print bin(polynomial)[2:]
                xor = find_xor(polynomial, int(inputString,2))
                xor_bits_length = len(bin(xor)) - 2
                remainder = str(bin(xor))[2:]
                print remainder
                print "--------------------------------------------------------"
                diff = POLY_LENGTH - xor_bits_length
                stopmarker = stopmarker + diff
                startmarker = startmarker + diff

        else:
            control = 0
            remainder = remainder + input_messageInBin[startmarker:stopmarker]
            print stopmarker
            print startmarker

    return remainder
val = find_crc(0x1EDC6F41, 'FFFFFFFFFFFFFFFFFFFF0F0FB01013F2E8FAF0421208')
print val
</code></pre>
<p>I'm trying to get this working. Appreciate if somebody has solution for this</p>
</div>
<div class="post-text" itemprop="text">
<p>As far as I tested module to use CRC-32C (nasty mangling ceph objects), the best was <a href="http://pythonhosted.org/crccheck/crccheck.html" rel="nofollow noreferrer"><code>crccheck</code></a>, it does not require SSE4 like the most of its  implementations.</p>
<pre><code>&gt;&gt;&gt; from crccheck.crc import Crc32c
&gt;&gt;&gt; Crc32c().process(b'kwarunek').finalhex()
'aa862086'
</code></pre>
<p><a href="http://crccalc.com/" rel="nofollow noreferrer">http://crccalc.com/</a> gives the same results.</p>
<p><strong>Edit: calc for hex value</strong></p>
<p><code>crccheck</code> is able to calc checksum for a hex value, just requires the value to be passed as bytes - <a href="http://pclib.github.io/safari/program/python-cookbook/Text/ch03s05.html" rel="nofollow noreferrer">method for large integers</a>:</p>
<pre><code>x = int('FFFFFFFFFFFFFFFFFFFF0F0FB01013F2E8FAF0421208', 16)
nbytes, rem = divmod(x.bit_length(), 8)
if rem: nbytes += 1
prepared = x.to_bytes(nbytes, 'big')

Crc32c().process(prepared).finalhex()
</code></pre>
</div>
<span class="comment-copy">Not anything near to answer, but you should check <a href="https://www.python.org/dev/peps/pep-0008/#imports" rel="nofollow noreferrer">PEP8</a> on imports. They should be at the beginning of your file, there are no valid reasons to include them in a function (or class, for that matter). It doesn't really hurt, but nevertheless a no-no... <a href="https://stackoverflow.com/a/5262532/1878539">This</a> answer here explains that a little more.</span>
<span class="comment-copy">Does <a href="https://docs.python.org/3/library/binascii.html" rel="nofollow noreferrer">binascii.crc32</a> work for your purposes?</span>
<span class="comment-copy">Thanks. But this takes the ascii characters and not the hex, i got that value for hex from multiple modules lice crcmod, crccheck... is there any help for getting the crc for hex values... You can see in my example i'm trying to calculate crc for hex numbers</span>
<span class="comment-copy">I've updated answer with hex example.</span>
