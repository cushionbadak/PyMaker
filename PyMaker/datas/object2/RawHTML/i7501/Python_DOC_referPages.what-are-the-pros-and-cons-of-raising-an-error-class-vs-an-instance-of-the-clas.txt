<div class="post-text" itemprop="text">
<p>The following appears to have the same effect:</p>
<pre><code>&gt;&gt;&gt; raise NotImplementedError
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NotImplementedError

&gt;&gt;&gt; raise NotImplementedError()
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
NotImplementedError
</code></pre>
<p>Is there a difference, and if so, what are the pros and cons of each?</p>
</div>
<div class="post-text" itemprop="text">
<p>There is essentially no difference if the exception class requires no arguments for initialization:</p>
<blockquote>
<p>If an exception <strong>class</strong> is passed, it will be implicitly <strong>instantiated</strong> by
  calling its constructor with no arguments.</p>
</blockquote>
<p>[<em>Emphasis mine</em>]</p>
<p>Otherwise, you'll get another exception complaining about the initialization of the instance:</p>
<pre><code>class MyException(Exception):
   def __init__(self, arg):
      pass

raise MyException
</code></pre>
<hr/>
<pre><code>Traceback (most recent call last):
  File "python", line 6, in &lt;module&gt;
TypeError: __init__() takes exactly 2 arguments (1 given)
</code></pre>
<p>Apparently, you can do more by passing custom arguments to custom exception classes, or passing a custom message to a builtin exception class:</p>
<pre><code>&gt;&gt;&gt; raise ValueError('number must be 42')
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
ValueError: number must be 42
</code></pre>
<p>The above is much more informative (quite desirable from a users' perspective) than a barren <code>ValueError</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no difference:</p>
<pre><code>&gt;&gt;&gt; try:
...     raise NotImplementedError
... except Exception as e:
...     pass
...
&gt;&gt;&gt; e
NotImplementedError()
&gt;&gt;&gt; type(e)
&lt;type 'exceptions.NotImplementedError'&gt;
&gt;&gt;&gt; type(NotImplementedError)
&lt;type 'type'&gt;
&gt;&gt;&gt; type(NotImplementedError())
&lt;type 'exceptions.NotImplementedError'&gt;
&gt;&gt;&gt;
</code></pre>
<p>See section 8.4 of the docs: <a href="https://docs.python.org/3/tutorial/errors.html#raising-exceptions" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/errors.html#raising-exceptions</a></p>
</div>
