<div class="post-text" itemprop="text">
<p>I am new to Python and am not sure why you must import before you can call a module or function. Does anyone have an answer to this? And thanks in advance. An example would look like:</p>
<pre><code>import random
randomNum = random.randint(0,1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You must import a module in Python before you use a method from it because otherwise, the interpreter doesn't know what to do when you call a method from said module. Some functions in python, like <code>print()</code> can be called without importing any modules, but for others like <code>random.randint()</code>, the module isn't imported by default, so you need to import it before use.</p>
</div>
<div class="post-text" itemprop="text">
<p>Practically, <code>random</code> and <code>math</code> and all of those classes that you need to import are actually other Python files. They are code, written by the people that made Python, and designed to make your job easier.</p>
<p>Think of <code>import</code> as just copy-and-pasting the source code from those modules to the top of your program. It just means that your code can now use all of that code, too. The reason that it is not all imported by default is thus because there would be a lot of overhead from all of those modules, when you might not even use them.</p>
<p>Without importing, the interpreter wouldn't know what to do when you used a function from <code>random</code> (or any other imported module), because it wouldn't have the code to do it.</p>
<p>Likewise, you can actually import your own code if you wanted to. So if, for example, you made a really cool implementation of a stack, you could <code>import</code> that code that you wrote into your other Python files so that you can also use it in those.</p>
<p>Read more about <code>import</code>: <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">https://docs.python.org/3/reference/import.html</a></p>
</div>
<span class="comment-copy">the alternative would probably be to import the module at first use, but that's not how python was designed.</span>
<span class="comment-copy">But why do you have to import at all? Why can't you just call it?</span>
<span class="comment-copy">Python design philosophy: explicit is better than implicit. They prefer to make module dependencies explicit rather than just automatically attempting an import every time you use an undefined variable or something.</span>
<span class="comment-copy">Because you don't load everything which you might not even use. That is why only mostly used and popular modules are there in standard library. Anything else you must <code>import</code></span>
<span class="comment-copy">note the difference between "imported by default" (no namespace/global namespace) and "imported" (namespace)</span>
<span class="comment-copy">Ok, that makes sense. Thank you.</span>
<span class="comment-copy">@Jean-FrançoisFabre what do you mean by the name space? Import "random"?</span>
<span class="comment-copy"><code>import random</code> means that you can use <code>random.</code> prefix to access functions/objects of <code>random</code>. I'm calling that a namespace.</span>
<span class="comment-copy">Also, if you wouldn't explicitly import modules, it would be really tough to deal with namespacing issues. (e.g. Two methods from different modules using the same name.)</span>
<span class="comment-copy">they may not be scripts. They may be DLLs (.pyd) for instance, which make them faster.</span>
<span class="comment-copy">@Jean-FrançoisFabre Good point. Edited.</span>
<span class="comment-copy">The copy and past idea does help make it easier to think about what import is. Thanks you</span>
