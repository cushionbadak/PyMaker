<div class="post-text" itemprop="text">
<p>I have two files containing timestamp column with 1000+ rows. Row in file f1 is related to the row in file f2. I wanted a Python script to do <code>[f1 nth row,f2 nth row]</code> for all corresponding rows in the best way possible. Thanks!</p>
<pre><code>f1:  
05:43:44  
05:59:32

f2:  
05:43:51  
05:59:39
</code></pre>
<p>e.g. [05:43:44,05:43:51], [05:59:32,05:59:39] ....</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do something like the following:</p>
<pre><code>f1_as_list = open(f1).readlines() # get each line as a list element
f2_as_list = open(f2).readlines()
zipped_files = zip(f1_as_list, f2_as_list) # zip the two lists together
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You may use <code>zip()</code> function. <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#zip</a></p>
<pre><code>&gt;&gt;&gt; x = [1, 2, 3]
&gt;&gt;&gt; y = [4, 5, 6]
&gt;&gt;&gt; zipped = zip(x, y)
&gt;&gt;&gt; list(zipped)
[(1, 4), (2, 5), (3, 6)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something like this is probably the most intuitive approach.</p>
<pre><code>#!/usr/bin/python3
with open("f1.txt") as f1:
  with open("f2.txt") as f2:
    for row1 in f1:
      for row2 in f2:
        print("%s %s" % (row1.strip(), row2.strip()))
</code></pre>
<p>Some might prefer a list comprehension, but non-pythonistas may not consider it intuitive.</p>
<pre><code>with open("f1.txt") as f1:
  with open("f2.txt") as f2:
    print("\n".join([
      "%s %s" % (row1.strip(), row2.strip())
      for row1 in f1
      for row2 in f2
    ]))
</code></pre>
</div>
