<div class="post-text" itemprop="text">
<p>I'm trying to make a dict to list of dict like (A=&gt;B):</p>
<p>A:</p>
<pre><code>{
    "macro": ["{$URL}","{$USERNAME}","{$PASSWORD}"],
    "value": ['https://1.1.1.1/sdk',"vmuser","vm@2980"]
}
</code></pre>
<p>B:</p>
<pre><code>[
        {
            "macro": "{$PASSWORD}",
            "value": "vm@2980"
        },
        {
            "macro": "{$USERNAME}",
            "value": "vmuser"
        },
        {
            "macro": "{$URL}",
            "value": 'https://' + hostip + '/sdk'
        },
]
</code></pre>
<p>my solution is follow below,but the python2 work as i though,python3 is not.</p>
<p>Python 2.7.9</p>
<pre><code>&gt;&gt;&gt; cc=dict(macro=["{$URL}","{$USERNAME}","{$PASSWORD}"],value=['https://' + "123" + '/sdk',"vmuser","vm@2980"])
&gt;&gt;&gt; ret=[]
&gt;&gt;&gt; for k,v in cc.items():
...   ret.append(map(lambda x:{k: x},v))
... 
&gt;&gt;&gt; ret
[[{'macro': '{$URL}'}, {'macro': '{$USERNAME}'}, {'macro': '{$PASSWORD}'}], [{'value': 'https://123/sdk'}, {'value': 'vmuser'}, {'value': 'vm@2980'}]]
&gt;&gt;&gt; ret[0]
[{'macro': '{$URL}'}, {'macro': '{$USERNAME}'}, {'macro': '{$PASSWORD}'}]
&gt;&gt;&gt; zip(*ret)
[({'macro': '{$URL}'}, {'value': 'https://123/sdk'}), ({'macro': '{$USERNAME}'}, {'value': 'vmuser'}), ({'macro': '{$PASSWORD}'}, {'value': 'vm@2980'})]
</code></pre>
<p>Python 3.4.2</p>
<pre><code>&gt;&gt;&gt; cc=dict(macro=["{$URL}","{$USERNAME}","{$PASSWORD}"],value=['https://' + "123" + '/sdk',"vmuser","vm@2980"])
&gt;&gt;&gt; ret=[]
&gt;&gt;&gt; for k,v in cc.items():
...   ret.append(map(lambda x:{k: x},v))
... 
&gt;&gt;&gt; ret
[&lt;map object at 0x7faed946c1d0&gt;, &lt;map object at 0x7faed946c208&gt;]
&gt;&gt;&gt; ret=[]
&gt;&gt;&gt; for k,v in cc.items():
...   ret.append(map(lambda x:{k: x},v))
... 
&gt;&gt;&gt; ret
[&lt;map object at 0x7faed946c390&gt;, &lt;map object at 0x7faed946c400&gt;]
&gt;&gt;&gt; c=zip(*ret)
&gt;&gt;&gt; next(c)
({'macro': 'https://123/sdk'}, {'macro': '{$URL}'})
</code></pre>
<p>I'm wondering why python3 key is macro?any better method to do ?</p>
</div>
<div class="post-text" itemprop="text">
<p>In Python 3 <a href="https://docs.python.org/3.6/library/functions.html#map" rel="nofollow noreferrer"><code>map()</code></a> returns an <em>iterator</em>, while in Python 2 it returns a list. To get the same list in Python 3 you would need to wrap the <code>map()</code> in a <code>list()</code>.</p>
<p>That said, to get a list in the desired format you could use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip()</code></a> with a list comprehension:</p>
<pre><code>B = [{"macro": m, "value": v} for m, v in zip(A["macro"], A["value"])]
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; A = {
...     "macro": ["{$URL}", "{$USERNAME}", "{$PASSWORD}"],
...     "value": ["https://1.1.1.1/sdk", "vmuser", "vm@2980"]
... }
&gt;&gt;&gt; [{"macro": m, "value": v} for m, v in zip(A["macro"], A["value"])]
[{'macro': '{$URL}', 'value': 'https://1.1.1.1/sdk'}, {'macro': '{$USERNAME}', 'value': 'vmuser'}, {'macro': '{$PASSWORD}', 'value': 'vm@2980'}]
</code></pre>
</div>
<span class="comment-copy">Use <code>ret.append(list(map(lambda x:{k: x},v)))</code> to have the same result.</span>
