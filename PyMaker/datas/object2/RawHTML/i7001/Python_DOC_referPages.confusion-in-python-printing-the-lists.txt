<div class="post-text" itemprop="text">
<p>In the following python code, I have a list i.e. <code>to_do_list</code> of two lists i.e. <code>other_events</code> and <code>grocery_list</code> where I inserted an item in <code>grocery_list</code> and then deleted it. </p>
<p>My confusion is, when I updated <code>grocery_list</code>, <code>to_do_list</code> is automatically updated but when I deleted <code>grocery_list</code>, <code>to_do_list</code> is not updated... why?</p>
<pre><code>grocery_list = ['banana', 'mango', 'apple']

other_events =['pick up kids','do laundry', 'dance class']

to_do_list = [other_events, grocery_list]

print(to_do_list)

grocery_list.insert(1,'onions');

print(grocery_list)

del grocery_list

print(to_do_list)
</code></pre>
<p>its output is:</p>
<pre><code>[['pick up kids', 'do laundry', 'dance class'], ['banana', 'mango', 'apple']]
['banana', 'onions', 'mango', 'apple']
[['pick up kids', 'do laundry', 'dance class'], ['banana', 'onions', 'mango', 'apple']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason why, when you update <code>grocery_list</code> your object <code>to_do_list</code> is updated is that your list <code>to_do_list</code> contain a only <em>reference</em> on <code>grocery_list</code>.</p>
<p>Now, why after deleting <code>grocery_list</code>, <code>to_do_list</code> is not updated is that the keywork <code>del</code> doesn't delete the object on which but only delete <code>grocery_list</code> from the namespace.</p>
<p>Here is a quote from the <a href="https://docs.python.org/3/reference/simple_stmts.html#the-del-statement" rel="nofollow noreferrer">Python Language Reference</a> on what <code>del</code> does :</p>
<blockquote>
<p>Deletion of a name removes the binding of that name from the local or
  global namespace</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>use  <code>del grocery_list[:]</code> instead 
ouput :</p>
<pre><code>[['pick up kids', 'do laundry', 'dance class'], ['banana', 'mango', 'apple']]
['banana', 'onions', 'mango', 'apple']
[['pick up kids', 'do laundry', 'dance class'], []]
</code></pre>
<p><strong>but why</strong> ?<br/>
assume we have a list :<br/>
<code>grocery_list = ['banana', 'mango', 'apple']</code></p>
<pre><code>del grocery_list
grocery_list
</code></pre>
<p>when you use this to delete list program raise an error :</p>
<pre><code>Traceback (most recent call last):
  File "&lt;pyshell#619&gt;", line 1, in &lt;module&gt;
    del grocery_list
NameError: name 'grocery_list' is not defined
</code></pre>
<p>in this code you used <code>del grocery_list</code> which only delete <code>grocery_list</code>  (<strong>Deletion of a name removes the binding of that name from the local or global namespace</strong>) and don't clear the list you must use <code>del grocery_list[:]</code> to compeletely delete it
 for more detail for <code>del</code> ref to <a href="https://stackoverflow.com/questions/6146963/when-is-del-useful-in-python">this</a></p>
</div>
<div class="post-text" itemprop="text">
<p>grocery_list has many references to it and the </p>
<p><code>del grocery_list</code></p>
<p>will only remove one reference while other references will exists.</p>
<p>One way to remove all the references from a list is to use slice assignment</p>
<pre><code>del grocery_list[:]
</code></pre>
</div>
<span class="comment-copy">use del grocery_list[:] instead</span>
