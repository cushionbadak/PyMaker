<div class="post-text" itemprop="text">
<p>I would like to loop over three lists</p>
<pre><code>['A','B'],[1,2],[3,4]
</code></pre>
<p>If I wanted to loop over all possibilities, I could have done this:</p>
<pre><code>for i,j,k in zip(['A','B'],[1,2],[3,4])
</code></pre>
<p>However, I want to loop in a certain manner. I want to iterate over 
<code>'A',1 and 'B',2</code> for all possible values of the last list. Thus I want to exclude the combinations</p>
<pre><code> 'A',2 and 'B',1.
</code></pre>
<p>Basically I want to generate the following items.
<code>'A',1,3 'A',1,4 'B',2,3 B',2,4</code></p>
<p>I am clueless on how to do it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Because you want to keep 'a' tied together with 1, and 'b' with 2, you should zip the first two lists together. And because you want to iterate over 3 and 4 regardless of which choice you make in the first part, that should be a separate iteration, not part of the zip.</p>
<pre><code>[(i,j,k) for k in [3, 4] for i,j in zip(['a', 'b'], [1, 2])]

# [('a', 1, 3), ('b', 2, 3), ('a', 1, 4), ('b', 2, 4)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product</code></a></p>
<pre><code>from itertools import product
for a,b in product(zip(l1,l2), l3):
        print (a[0], a[1], b)

A 1 3
A 1 4
B 2 3
B 2 4
</code></pre>
</div>
<span class="comment-copy">Not clear what you are asking for ..can you please add more example</span>
<span class="comment-copy">What <b><i>is</i></b> the order you want to loop in?</span>
<span class="comment-copy">any order is fine..i want to enumerate all the possibilities</span>
<span class="comment-copy">@rahul_88 could you provide an example of what you expect the output of this loop to be?</span>
<span class="comment-copy">@HariomSingh I added the iterates I require</span>
<span class="comment-copy">If you're using <code>product</code> from the <code>itertools</code> library, you may want to add that. No sure though, so I'll leave that up to you.</span>
<span class="comment-copy">I just did ;) sorry</span>
<span class="comment-copy">it produces exactly your pairs. you only need to unpack differently</span>
<span class="comment-copy">This would work if you did something like: <code>(i, j), k = a, b</code>.</span>
<span class="comment-copy">^^ i just edited it again ;)</span>
