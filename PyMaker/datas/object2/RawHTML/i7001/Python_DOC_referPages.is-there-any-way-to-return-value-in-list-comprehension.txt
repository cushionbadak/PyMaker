<div class="post-text" itemprop="text">
<p>I wonder if I can return value in list comprehension like</p>
<pre><code>[return role_ for role_ in self.roles if role.name==parameter]
</code></pre>
<p>Of course it doesn't work. At the moment I had to use classic for loop</p>
<pre><code>for role_ in self.roles:
    if role_.name == parameter:
        return role_
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use the <a href="https://docs.python.org/3/library/functions.html#next" rel="noreferrer"><code>next()</code> function</a> with a generator expression:</p>
<pre><code>return next((role_ for role_ in self.roles if role_.name == parameter), None)
</code></pre>
<p>This will return the first matching <code>role_</code> value, or <code>None</code> if there is no such value.</p>
<p>You can't use a list comprehension, no, because you are <em>not producing a list</em>.</p>
</div>
<div class="post-text" itemprop="text">
<p>No. The purpose of a list comprehension is to build a list, not to save lines of code. </p>
<p>Since you do not want a list as the result, a list comprehension is the wrong tool for the job. A loop is perfectly fine.</p>
</div>
<div class="post-text" itemprop="text">
<p>The closest thing would be a calling <code>next</code> with a generator expression:</p>
<pre><code>return next(role_ for role_ in self.roles if role_.name==parameter)
</code></pre>
</div>
<span class="comment-copy">Are you just looking for a 1-liner equivalent of your "classic for loop"?</span>
<span class="comment-copy">No, because a list comprehension is there to produce a list.</span>
<span class="comment-copy">Exactly. My code above is "unreachable".</span>
<span class="comment-copy">Okay, so that was my miss understanding of list comprehension.</span>
