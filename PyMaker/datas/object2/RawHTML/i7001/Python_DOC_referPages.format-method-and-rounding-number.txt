<div class="post-text" itemprop="text">
<p>I don't understand how format &amp; rounding numbers works, because for instance:</p>
<pre><code>"{:.0f}".format(234.50) # returns 234
"{:.0f}".format(235.50) # returns 236
"{:.0f}".format(236.50) # returns 236
"{:.0f}".format(237.50) # returns 238
</code></pre>
<p>And so on...</p>
<p>Am I missing something?</p>
<p>Thanks for your help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Python rounds to nearest integer, but if the decimal is 0.5 it rounds to nearest even integer. This method is called <a href="https://en.wikipedia.org/wiki/Rounding#Round_half_to_even" rel="nofollow noreferrer">round half to even</a> and is common in many programming languages.</p>
<p>This is confirmed in the documentation of the <a href="https://docs.python.org/3/library/functions.html#round" rel="nofollow noreferrer"><code>round</code></a> function as well.</p>
<blockquote>
<p>Return <code>number</code> rounded to <code>ndigits</code> precision after the decimal point. If <code>ndigits</code> is omitted or is <code>None</code>, it returns the nearest integer to its input.</p>
<p>For the built-in types supporting <code>round()</code>, values are rounded to the closest multiple of 10 to the power minus <code>ndigits</code>; <strong>if two multiples are equally close, rounding is done toward the even choice (so, for example, both round(0.5) and round(-0.5) are 0, and round(1.5) is 2)</strong>. Any integer value is valid for <code>ndigits</code> (positive, zero, or negative). The return value is an integer if called with one argument, otherwise of the same type as number.</p>
<p>For a general Python object number, <code>round(number, ndigits)</code> delegates to <code>number.__round__(ndigits)</code>.</p>
</blockquote>
</div>
