<div class="post-text" itemprop="text">
<p>So I have two list of dictionaries which look like the following:</p>
<pre><code>A = [{'id':'xyz', 'count': 3},{'id':'zzz', 'count': 1}]
B = [{'id':'xyz', 'count': 4}]
</code></pre>
<p>I want the final output to be like:</p>
<pre><code>C = [{'id':'xyz', 'count': 7},{'id':'zzz', 'count': 1}]
</code></pre>
<p>So in case that if the value of the first key is the same in both lists, we add up the values for the second key. Any idea how I might achieve this? So far I have tried:</p>
<pre><code>for elem in A:
    if elem['id'] in B.elementsKey['id']:
        # TO DO
</code></pre>
<p>I am stock where I am trying to update the value for the other element accordingly.</p>
<p>NOTE: Each id is unique.</p>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from collections import Counter

C_counts = Counter()
for l in (A, B):
    C_counts.update({x['id']: x['count'] for x in l})

C = [{'id':k, 'count':c} for (k, c) in C_counts.items()]
</code></pre>
<p>If you really don't want to import <code>collections.Counter</code> you can do:</p>
<pre><code>_C = {}
for l in A, B:
    for d in l:
        _C[d['id']] = d['count'] + _C.get(d['id'], 0)

C = [{'id':k, 'count':c} for (k, c) in _C.items()]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's one way to do it using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>:</p>
<pre><code>from itertools import groupby
from operator import itemgetter

f = itemgetter('id')

lst = [{'id': k, 'count': sum(d['count'] for d in g)} 
                         for k, g in groupby(sorted(A+B, key=f), f)]
print(lst)
# [{'id': 'xyz', 'count': 7}, {'id': 'zzz', 'count': 1}]
</code></pre>
</div>
<span class="comment-copy">What are <code>a</code> and <code>b</code>? Do the dictionaries have anything else in them? Might there be multiple entries with <code>'a': 'xyz'</code> in either list? Couldn't you just represent this as <code>A = {'xyz': 3, 'zzz': 1}</code>?</span>
<span class="comment-copy">Can you please show what you've tried? Your question is currently to broad.</span>
<span class="comment-copy">@ChristianDean alright modified it</span>
<span class="comment-copy">I think you have the wrong data structure.  Why have a list of dictionaries containing key names <code>id</code> and <code>count</code>?  Why not just <code>A = {'xyz': 3, 'zzz': 1}</code>?  If you really need names include it in the variable name: <code>A_counts_by_id = {'xyz': 3, 'zzz': 1}</code>.  Then you're just a hop and a skip away from using <code>collections.Counter</code>, which is just a specialized dict that supports counts.  And you can add them together.</span>
<span class="comment-copy">@StevenRumbalski I would love to do that I have no control over these data structures as they are outputs of another existing function</span>
