<div class="post-text" itemprop="text">
<p>I created a variable list like this : </p>
<pre><code>Code = ["RIGHT_ARROW","DOWN_ARROW","LEFT_ARROW","UP_ARROW"]
</code></pre>
<p>I would like to generate more combination of my list like this : </p>
<pre><code>newCode = ["RIGHT_ARROW","DOWN_ARROW","LEFT_ARROW","UP_ARROW"]
</code></pre>
<p>or</p>
<pre><code>["UP_ARROW","RIGHT_ARROW","DOWN_ARROW","LEFT_ARROW"]
</code></pre>
<p>or </p>
<pre><code>["LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW"]`
</code></pre>
<p>or </p>
<pre><code>["DOWN_ARROW","LEFT_ARROW","UP_ARROW","RIGHT_ARROW"]`
</code></pre>
<p>...etc</p>
<p>Is it possible to generate all combinations to the new list? </p>
<p>I tested by <code>itertools.permumations</code> or combinations but this result isn't what I want. </p>
<p>Any ideas? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this way :</p>
<pre><code>def all_perms(elements):
    if len(elements) &lt;=1:
        yield elements
    else:
        for perm in all_perms(elements[1:]):
            for i in range(len(elements)):
                # nb elements[0:1] works in both string and list contexts
                yield perm[:i] + elements[0:1] + perm[i:]

Code = ["RIGHT_ARROW", "DOWN_ARROW", "LEFT_ARROW", "UP_ARROW"]
print(*all_perms(Code))
</code></pre>
<p>Output :</p>
<pre><code>['RIGHT_ARROW', 'DOWN_ARROW', 'LEFT_ARROW', 'UP_ARROW'] ['DOWN_ARROW', 'RIGHT_ARROW', 'LEFT_ARROW', 'UP_ARROW'] ['DOWN_ARROW', 'LEFT_ARROW', 'RIGHT_ARROW', 'UP_ARROW'] ['DOWN_ARROW', 'LEFT_ARROW', 'UP_ARROW', 'RIGHT_ARROW'] ['RIGHT_ARROW', 'LEFT_ARROW', 'DOWN_ARROW', 'UP_ARROW'] ['LEFT_ARROW', 'RIGHT_ARROW', 'DOWN_ARROW', 'UP_ARROW'] ['LEFT_ARROW', 'DOWN_ARROW', 'RIGHT_ARROW', 'UP_ARROW'] ['LEFT_ARROW', 'DOWN_ARROW', 'UP_ARROW', 'RIGHT_ARROW'] ['RIGHT_ARROW', 'LEFT_ARROW', 'UP_ARROW', 'DOWN_ARROW'] ['LEFT_ARROW', 'RIGHT_ARROW', 'UP_ARROW', 'DOWN_ARROW'] ['LEFT_ARROW', 'UP_ARROW', 'RIGHT_ARROW', 'DOWN_ARROW'] ['LEFT_ARROW', 'UP_ARROW', 'DOWN_ARROW', 'RIGHT_ARROW'] ['RIGHT_ARROW', 'DOWN_ARROW', 'UP_ARROW', 'LEFT_ARROW'] ['DOWN_ARROW', 'RIGHT_ARROW', 'UP_ARROW', 'LEFT_ARROW'] ['DOWN_ARROW', 'UP_ARROW', 'RIGHT_ARROW', 'LEFT_ARROW'] ['DOWN_ARROW', 'UP_ARROW', 'LEFT_ARROW', 'RIGHT_ARROW'] ['RIGHT_ARROW', 'UP_ARROW', 'DOWN_ARROW', 'LEFT_ARROW'] ['UP_ARROW', 'RIGHT_ARROW', 'DOWN_ARROW', 'LEFT_ARROW'] ['UP_ARROW', 'DOWN_ARROW', 'RIGHT_ARROW', 'LEFT_ARROW'] ['UP_ARROW', 'DOWN_ARROW', 'LEFT_ARROW', 'RIGHT_ARROW'] ['RIGHT_ARROW', 'UP_ARROW', 'LEFT_ARROW', 'DOWN_ARROW'] ['UP_ARROW', 'RIGHT_ARROW', 'LEFT_ARROW', 'DOWN_ARROW'] ['UP_ARROW', 'LEFT_ARROW', 'RIGHT_ARROW', 'DOWN_ARROW'] ['UP_ARROW', 'LEFT_ARROW', 'DOWN_ARROW', 'RIGHT_ARROW']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Seems like you're looking for <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow noreferrer"><code>random.shuffle</code></a> or <a href="https://docs.python.org/3/library/random.html#random.sample" rel="nofollow noreferrer"><code>random.sample</code></a>.</p>
<p>For inplace list random shuffle:</p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; code = ["RIGHT_ARROW", "DOWN_ARROW", "LEFT_ARROW", "UP_ARROW"]
&gt;&gt;&gt; random.shuffle(code)
&gt;&gt;&gt; code
['LEFT_ARROW', 'UP_ARROW', 'RIGHT_ARROW', 'DOWN_ARROW']
</code></pre>
<p>For immutable sequences, or to generate a new list (your <code>newcode</code>):</p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; code = ["RIGHT_ARROW", "DOWN_ARROW", "LEFT_ARROW", "UP_ARROW"]
&gt;&gt;&gt; random.sample(code, k=len(code))
['UP_ARROW', 'RIGHT_ARROW', 'LEFT_ARROW', 'DOWN_ARROW']
</code></pre>
<p>You can use it multiple times:</p>
<pre><code>&gt;&gt;&gt; random.sample(code, k=len(code))
['DOWN_ARROW', 'RIGHT_ARROW', 'UP_ARROW', 'LEFT_ARROW']
&gt;&gt;&gt; random.sample(code, k=len(code))
['LEFT_ARROW', 'RIGHT_ARROW', 'UP_ARROW', 'DOWN_ARROW']
&gt;&gt;&gt; random.sample(code, k=len(code))
['UP_ARROW', 'DOWN_ARROW', 'RIGHT_ARROW', 'LEFT_ARROW']
</code></pre>
<hr/>
<p>To generate several (for example 10) random shuffles, all in one list, you can use a list comprehension:</p>
<pre><code>&gt;&gt;&gt; [random.sample(code, k=len(code)) for _ in range(10)]
[['DOWN_ARROW', 'RIGHT_ARROW', 'LEFT_ARROW', 'UP_ARROW'], ...
</code></pre>
<p>If, on the other hand, you need <strong>all</strong> permutations of the initial list <code>code</code>, but in a "random" order, you can shuffle the list of permutations returned by <code>itertools.permutations</code>:</p>
<pre><code>&gt;&gt;&gt; all = list(itertools.permutations(code))
&gt;&gt;&gt; random.shuffle(all)
</code></pre>
<hr/>
<p>In the end, the OP wanted to produce a single list of items randomly chosen from the initial list. Something like this (in Python 3.6+):</p>
<pre><code>random.choices(code, k=10)
</code></pre>
<p>or like this (in older Pythons):</p>
<pre><code>[random.choice(code) for _ in range(10)]
</code></pre>
</div>
<span class="comment-copy">if <code>permumations</code> doesn't do the job (or <code>permutations</code>), then you'll have to be more accurate on what you want, because, it pretty much does that</span>
<span class="comment-copy">Ok, you've shown some of the data that you require, but you also need to show code that you've tried and the output that produces and explain why that output is wrong.</span>
<span class="comment-copy">Do you only want to shift the array?</span>
<span class="comment-copy"><code>list(itertools.permutations("UDLR"))</code></span>
<span class="comment-copy">Are you sure that this script return an output values? Because my return code is &lt;generator object all_perms at 0x00000000031DD9D8&gt;</span>
<span class="comment-copy">Not use <code>print(all_perms(Code))</code>. Use <code>print(*all_perms(Code))</code></span>
<span class="comment-copy">@Taylor08, check <a href="https://repl.it/KKiP" rel="nofollow noreferrer">here</a></span>
<span class="comment-copy">I noticed that it's in python 3.6 but it doesn't work in 2.7.1</span>
<span class="comment-copy">It's possible to optimize this fuction in 2.7.1?</span>
<span class="comment-copy">Yeah it's works, but it's possible to have all possible combination as the same list. For exemple, it will be to join all the combination list generated to the one list.</span>
<span class="comment-copy">Not really sure what exactly you need, but check my edit.</span>
<span class="comment-copy">i would like to merge all these combinations. For example : as the same list, add to : ['DOWN_ARROW', 'RIGHT_ARROW', 'UP_ARROW', 'LEFT_ARROW', 'LEFT_ARROW', 'RIGHT_ARROW', 'UP_ARROW', 'DOWN_ARROW' , 'UP_ARROW', 'DOWN_ARROW', 'RIGHT_ARROW', 'LEFT_ARROW' ...] to random mode.</span>
<span class="comment-copy">Then try this: "random.choices(code, k=10)" in python 3.6+, or "[random.choice(code) for _ in range(10)]" for older pythons.</span>
<span class="comment-copy">Yes it works ! Thanks randmir</span>
