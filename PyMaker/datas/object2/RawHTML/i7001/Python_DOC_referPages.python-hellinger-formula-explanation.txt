<div class="post-text" itemprop="text">
<p>I was looking up some formulas for Hellinger's distance between distributions, and I found one (in Python) that I've never seen similar format for. I am confused how it works.</p>
<pre><code>def hellinger(p,q):
    """Hellinger distance between distributions"""
    return sum([(sqrt(t[0])-sqrt(t[1]))*(sqrt(t[0])-sqrt(t[1]))\
                for t in zip(p,q)])/sqrt(2.)
</code></pre>
<p>I've never seen this kind of... format before. They are dividing by a for statement? I mean.. how does this even work?</p>
</div>
<div class="post-text" itemprop="text">
<p>I have a faible for distance measures, hence I made a <a href="https://nbviewer.jupyter.org/gist/Teagum/460a508cda99f9874e4ff828e1896862" rel="nofollow noreferrer">notebook</a> with some implementations of Hellinger distance. </p>
<p>Regarding your question, the construct is called a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comrehension</a> and the backslash is just for line continuation.</p>
<p>Here is a possible listing without list comprehension:</p>
<pre><code>def hellinger_explicit(p, q):
    """Hellinger distance between two discrete distributions.
       Same as original version but without list comprehension
    """
    list_of_squares = []
    for p_i, q_i in zip(p, q):

        # caluclate the square of the difference of ith distr elements
        s = (math.sqrt(p_i) - math.sqrt(q_i)) ** 2

        # append 
        list_of_squares.append(s)

    # calculate sum of squares
    sosq = sum(list_of_squares)    

    return sosq / math.sqrt(2)
</code></pre>
</div>
<span class="comment-copy">This constuct is named <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a> and the backslash is for line continuation.</span>
<span class="comment-copy">Ohhhhhhhhhhhhhhhhh that's not a forward slash - I'm an idiot, I was so confused. Thanks for pointing that out.  That doesn't relieve me of my confusion though - only new questions arise. The <code>t</code> is defined in the for-statement, yet it appears before it... how does python allow for that?</span>
<span class="comment-copy">Check out the above link to the list comprehension documentation. Then you will understand how it works.</span>
<span class="comment-copy">Note that the backslash is unnecessary in this case. It's also poorly written, as squaring the difference will be more efficient than recomputing the square roots. <code>sum((sqrt(x)-sqrt(y))**2 for x,y in zip(p,q))/sqrt(2.)</code></span>
