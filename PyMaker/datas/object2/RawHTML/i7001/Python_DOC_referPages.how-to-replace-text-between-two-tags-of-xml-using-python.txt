<div class="post-text" itemprop="text">
<p>Below is the example xml file.</p>
<pre><code>    &lt;?xml version='1.0' encoding='UTF-8'?&gt;
    &lt;a&gt;
        &lt;b&gt;
            &lt;c&gt;
                &lt;d&gt;TEXT&lt;/d&gt;
            &lt;/c&gt;  
       &lt;/b&gt;
    &lt;/a&gt;
</code></pre>
<p>I need to Replace "TEXT" with list of strings so that my xml look like below.</p>
<pre><code>    &lt;?xml version='1.0' encoding='UTF-8'?&gt;
    &lt;a&gt;
        &lt;b&gt;
            &lt;c&gt;
                &lt;d&gt;TEXT1,TEXT2,TEXT3&lt;/d&gt;
            &lt;/c&gt;  
       &lt;/b&gt;
    &lt;/a&gt;
</code></pre>
<p>Please tell me how can i achieve this using python.</p>
</div>
<div class="post-text" itemprop="text">
<p>this should work,</p>
<pre><code>from xml.dom import minidom
doc = minidom.parse('my_xml.xml')
item = doc.getElementsByTagName('d')
print item[0].firstChild.nodeValue
item[0].firstChild.replaceWholeText('TEXT, TEXT1 , etc...')

for s in item: #if you want to loop try this
    s.firstChild.replaceWholeText('TEXT, TEXT1 , etc...')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>lxml</code> but it depends on your actual purpose of use, here is an example:</p>
<pre><code>from lxml import etree

a = '''&lt;?xml version='1.0' encoding='UTF-8'?&gt;
&lt;a&gt;
    &lt;b&gt;
        &lt;c&gt;
            &lt;d&gt;TEXT&lt;/d&gt;
        &lt;/c&gt;  
   &lt;/b&gt;
&lt;/a&gt;'''

tree = etree.fromstring(a)
#for file you need to use tree = etree.parse(filename)
for item in tree:
    for data in item:
        for point in data:
            if point.tag == 'd':
                if point.text == 'TEXT':
                    point.text = 'TEXT,TEXT,TEXT'
print(etree.tostring(tree))
#&lt;a&gt;
#    &lt;b&gt;
#        &lt;c&gt;
#            &lt;d&gt;TEXT,TEXT,TEXT&lt;/d&gt;
#        &lt;/c&gt;  
#   &lt;/b&gt;
#&lt;/a&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can treat an xml file just as a text file and use the functions you would use to manipulate strings. For example:</p>
<pre><code>with open('testxml.xml','r') as f:
    contents=f.read() #open xml file

stringlist=['Text1','Text2','Text3'] #list of strings you want to replace with
opentag='&lt;d&gt;' #tag in which you want to replace text
closetag='&lt;/d&gt;'

oldtext=contents[contents.find(opentag)+3:contents.find(closetag)] 
newtext=''.join(str_+',' for str_ in stringlist)[:-1] #ignore last comma
contents=contents.replace(oldtext,newtext) #replace old text with new

with open('testxml.xml','w') as f:
    f.write(contents) #write contents to file
</code></pre>
<p>There might be many instances where you have a lot of nested tags and this simple script would not work. You could use Python's built in XML editing package <a href="https://docs.python.org/3/library/xml.etree.elementtree.html#module-xml.etree.ElementTree" rel="nofollow noreferrer">ElementTree</a> if you want to do more advanced tasks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Try this:</p>
<pre><code>a = a.replace(&lt;old string&gt;, &lt;new string&gt;)
</code></pre>
<p>read file and do this operation.</p>
</div>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/1912434/how-do-i-parse-xml-in-python">How do I parse XML in Python?</a></span>
<span class="comment-copy">open xml file, read lines, find the line you want to change, change it, save it --- that is a way to do it -- <a href="https://stackoverflow.com/a/1591617/7383995">stackoverflow.com/a/1591617/7383995</a></span>
