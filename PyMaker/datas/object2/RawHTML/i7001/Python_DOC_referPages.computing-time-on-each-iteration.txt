<div class="post-text" itemprop="text">
<p>i am trying to compute the time for every loop iterations. However, i have noticed that the time required to process (anything) increases on each iteration in an incremental fashion. I am computing time by using following commands:</p>
<pre><code>start_time = time.time()
loop: 
    (any process)
print (time.time() - start_time))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you call the time.time method you are returning the amount of time in seconds based on the Unix clock system, basically the time local to the system.</p>
<p>You are assigning the time to start_time, you are then running your 10 processes and outputting the current time minus start_time, so you are essentially working out how long it takes you to run your 10 processes.</p>
<p>Now I believe that what you're trying to do is calculate how long each individual process takes, to do that you need to move around some of the lines in the sample code you supplied:</p>
<pre><code>    import time
        for i in range(10): 
        start_time = time.time()    
        (any process)

        print(time.time() - start_time))
</code></pre>
<p>By moving the assignment of time into the loop you will be assigning the time at which the loop starts and then outputting the individual time of each iteration rather than timing how long the entire loop takes as a whole.</p>
<p>This would output how long each iteration takes.</p>
<p>Please feel free to ask any questions!</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's an example of how you could perform your timings with <code>timeit</code>.</p>
<pre><code>import timeit
setup = "i = {}"
stmt = """
for x in range(i):
    3 + 3
"""
[timeit.timeit(stmt=stmt, setup=setup.format(i), number=100) for i in range(10)]
</code></pre>
<p>Which gives you a list of the times of each loop:</p>
<pre><code>[8.027901640161872e-05,
 0.00011072197230532765,
 0.00011189299402758479,
 0.00012168602552264929,
 0.00012224999954923987,
 0.0001258430420421064,
 0.00013012002455070615,
 0.00013478699838742614,
 0.000138589006382972,
 0.0001438520266674459]
</code></pre>
</div>
<span class="comment-copy">You should use <a href="https://docs.python.org/3/library/timeit.html" rel="nofollow noreferrer">timeit</a></span>
<span class="comment-copy">@ Cory Madden ... aren't they both [i.e., time.time() and timeit]  doing the same thing?</span>
<span class="comment-copy">Only one of these tools was built for what you want to do. My comment isn't intended as an answer, just a suggestion.</span>
<span class="comment-copy">@CoryMadden ... Thanks alot</span>
<span class="comment-copy">Thank you for the example. Well, this leads me to my original question ... as to why the time for a similar operation increments on every iteration? It started from around 0.000110... and went upto 0.000143</span>
<span class="comment-copy">I'm not sure I understand. If you're performing the operation again then it's going to increment. If you brush your teeth once it takes 2 minutes. If you brush them twice it takes 4 minutes. Now, to be a little more accurate, we could say brushing your teeth the first time takes 3 minutes, because we have to go to the bathroom, get our toothbrush ready, etc. But on the second brushing it only takes us a total of 5 minutes, because we were already in the bathroom with our toothbrush in hand. Your function is printing out the time of the whole loop, I'm not sure if you're aware of that.</span>
<span class="comment-copy">Thank you for the toothbrush example ... it made me laugh. Well, if i was already in the bathroom with toothbrush in hand, then it would surely take me less time than the case of going to the bathroom and picking the toothbrush. I also understand that i am fetching the time of the whole loop. But this is not what is happening here ... the time is constantly increasing in the subsequent iterations. Should i try to clean the memory or environment variables at the end of each loop to see if time of every instance remains same or keeps on increasing?</span>
<span class="comment-copy">I also understand that the time doesn't remains the same in each iteration owing to many factors, but what i am trying to figure out is that it should fluctuate up and down and not just keeps on incrementing.</span>
<span class="comment-copy">:) I had to brush my teeth, so it was on my mind. In my example it <i>is</i> linear, though your code may be doing something that caches a result or maybe some loops are easier for the computer for whatever reason.</span>
