<div class="post-text" itemprop="text">
<p>I have enabled <code>sphinx.ext.intersphinx</code> in my project and added the following configuration:</p>
<pre><code>intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
    'pyserial': ('https://pythonhosted.org/pyserial/', None),
}
</code></pre>
<p>I have the following in my <code>index.rst</code>:</p>
<pre><code>This project depends on the :ref:`pyserial &lt;pyserial:???&gt;` library.
</code></pre>
<p>I would like the link to point to <code>http://pythonhosted.org/pyserial/</code>, the root URL in <code>intersphinx_mapping</code>, but I don't know what <code>???</code> should be.</p>
<p>If I do <code>:ref:`pyserial`</code> or <code>:ref:`pyserial &lt;pyserial&gt;`</code>, I get <code>WARNING: undefined label: pyserial (if the link has no caption the label must precede a section header)</code></p>
<p>If I do <code>:ref:`pyserial &lt;&gt;`</code> I get <code>WARNING: undefined label:  (if the link has no caption the label must precede a section header)
</code></p>
<p>I can replace the <code>:ref:</code> with <code>`pyserial &lt;<a href="http://pythonhosted.org/pyserial/&gt;%60_" rel="nofollow noreferrer">http://pythonhosted.org/pyserial/&gt;`_</a></code>, but I would really like to reference the page via intersphinx, to avoid broken links down the line.</p>
<p>I am using sphinx 1.6.3 on Python 3.6.2 in Anaconda. I am not overly hung on the library I am trying to link to. I suspect that the answer will not really be tied to a library.</p>
<p>If it matters any, the regular references to the pyserial docs work just fine. For example <code>:py:class:`serial.Serial`</code> links to <a href="https://pythonhosted.org/pyserial/pyserial_api.html#serial.Serial" rel="nofollow noreferrer">https://pythonhosted.org/pyserial/pyserial_api.html#serial.Serial</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You've already got the following requirements satisfied. It's the last item that is a common source of frustration.</p>
<ol>
<li><p>Configure the project to use <a href="http://www.sphinx-doc.org/en/stable/ext/intersphinx.html" rel="noreferrer">intersphinx</a>.</p></li>
<li><p>The remote documentation uses Sphinx and does in fact have an inventory file named <code>objects.inv</code>. When running <code>sphinx-build</code>, log entries should be something like this:</p>
<pre><code>loading intersphinx inventory from https://docs.python.org/3/objects.inv...
loading intersphinx inventory from https://pythonhosted.org/pyserial/objects.inv...
</code></pre></li>
<li><p>The syntax for Python projects using intersphinx is the following, just like any <a href="http://www.sphinx-doc.org/en/stable/markup/inline.html#cross-referencing-syntax" rel="noreferrer">cross-referencing link</a>:</p>
<pre><code>:role_name:`title &lt;target&gt;`
</code></pre>
<p>So in your case:</p>
<pre><code>:ref:`pyserial &lt;pyserial:reference-label-name&gt;`
</code></pre></li>
<li><p>Finally, some desired targets might not exist in the inventory for a given page. <a href="https://stackoverflow.com/a/36831198/2214933">This answer shows how to see all intersphinx targets</a>, using the following:</p>
<pre><code>python -m sphinx.ext.intersphinx 'https://pythonhosted.org/pyserial/objects.inv'
</code></pre>
<p>All the API objects appear, which is why you can link to those, but only a limited number of other objects are present:</p>
<pre><code>std:label
        examples                                 Examples                                : examples.html#examples
        genindex                                 Index                                   : genindex.html#
        miniterm                                 serial.tools.miniterm                   : tools.html#miniterm
        modindex                                 Module Index                            : py-modindex.html#
        search                                   Search Page                             : search.html#
        urls                                     URL Handlers                            : url_handlers.html#urls
</code></pre>
<p>The lack of arbitrary labels is a common annoyance for authors.</p>
<p>You can also <a href="https://pythonhosted.org/pyserial/_sources/index.txt" rel="noreferrer">check the project's reST source for targets</a> and in this case, there are no reference labels like <code>.. _my-reference-label:</code>.</p></li>
</ol>
<p>To resolve this issue, you could either use one of the arbitrary targets:</p>
<pre><code>:ref:`pyserial &lt;pyserial:genindex&gt;`
</code></pre>
<p>...or better yet submit a pull request to the project where you provide labels for at least the index page, wait for its acceptance, then use that for intersphinx links. Other authors would appreciate it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Based on the suggestion by @StevePiercy, I submitted <a href="https://github.com/pyserial/pyserial/pull/261" rel="nofollow noreferrer">PR#261</a> to pyserial. Since the PR was accepted, you can now link to the root docs using the <code>welcome</code> label. Something like</p>
<pre><code>This project depends on the :ref:`pyserial &lt;pyserial:welcome&gt;` library.
</code></pre>
<p>The other thing to note is that the pyserial docs should be linked to <a href="https://pyserial.readthedocs.io/en/latest/" rel="nofollow noreferrer">https://pyserial.readthedocs.io/en/latest/</a>, not <a href="https://pythonhosted.org/pyserial/" rel="nofollow noreferrer">https://pythonhosted.org/pyserial/</a> as I have been doing.</p>
</div>
<span class="comment-copy">Sounds like a reasonable solution to me. I will go ahead and submit that PR.</span>
<span class="comment-copy">Just out of curiosity, how do I differentiate between the <code>examples</code> label in <code>python</code> vs <code>pyserial</code> documentation?</span>
<span class="comment-copy"><a href="https://github.com/pyserial/pyserial/pull/261" rel="nofollow noreferrer">github.com/pyserial/pyserial/pull/261</a></span>
<span class="comment-copy">Try in the target part (I can't use literal backticks in comments) <code>&lt;python:examples&gt;</code> and <code>&lt;pyserial:examples&gt;</code>.</span>
<span class="comment-copy">PR was accepted. Thanks for the suggestion.</span>
