<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/533905/get-the-cartesian-product-of-a-series-of-lists">Get the cartesian product of a series of lists?</a>
<span class="question-originals-answer-count">
                    11 answers
                </span>
</li>
</ul>
</div>
<p>I am looking for an iterator which takes as an input multiple ranges in python (or for example lists) and returns all possible combinations for these. Preferably in an iterator so it does not store all combinations in memory. I know how to code it myself, but it seems to me a quite common function so i cannot imagine that it doesn't exists already in some library. This is basically the idea:</p>
<pre><code>a = range(0,2)
b = range(2,4)

for i,j in someFunc(a,b):
    print(i,j)
</code></pre>
<p>This would then print:</p>
<pre><code>0 2
0 3
1 2
1 3
</code></pre>
<p>This can ofcourse be achieved by multiple loops: </p>
<pre><code>for i in a:
    for j in b:
        print(i,j)
</code></pre>
<p>But i am looking for one function which can accept unlimited ranges as arguments. It seems as such a common function, but i have not been able to find it anywhere.            </p>
</div>
<div class="post-text" itemprop="text">
<p>You want <a href="https://docs.python.org/3/library/itertools.html#itertools.product" rel="nofollow noreferrer"><code>itertools.product()</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import product
&gt;&gt;&gt; list(product(range(0, 2), range(2, 4)))
[(0, 2), (0, 3), (1, 2), (1, 3)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>itertools.product</code> does a catesian product: </p>
<pre><code>&gt;&gt;&gt; from itertools import product
&gt;&gt;&gt; A = [1, 2 , 3 ]
&gt;&gt;&gt; B = [3, 5, 4 ]
&gt;&gt;&gt; product(A,B) 
&lt;itertools.product object at 0x7f4428d75e10&gt;
&gt;&gt;&gt; for i in product(A,B): 
...     print i 
... 
(1, 3)
(1, 5)
(1, 4)
(2, 3)
(2, 5)
(2, 4)
(3, 3)
(3, 5)
(3, 4)
&gt;&gt;&gt; 
</code></pre>
</div>
<span class="comment-copy">You are looking for a <i>cartesian product</i>.</span>
<span class="comment-copy">Check in the <code>itertools</code> package of the standard library.</span>
<span class="comment-copy">@martijnPieters Thank you, knowing the correct terminology will help me also with future questions.</span>
<span class="comment-copy">@IgnacioVergaraKausel That is correct, thank you</span>
