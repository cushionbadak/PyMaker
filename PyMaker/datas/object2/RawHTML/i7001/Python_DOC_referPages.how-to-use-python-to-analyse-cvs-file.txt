<div class="post-text" itemprop="text">
<p>I am a beginner of programming, I am now trying to work out how to get the average of elements in a csv file. this is the content of the csv file:</p>
<p><a href="https://i.stack.imgur.com/fWeHp.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/fWeHp.png"/></a></p>
<p>And this is my code:</p>
<pre><code>import csv
suburbs_average = {'North':0,'South':0,'East':0,'West':0}
suburbs_count = {'North':0,'South':0,'East':0,'West':0}
csvfile = open("ps1_3_data.csv")
csv_reader = csv.reader(csvfile, delimiter=',')

for row in csv_reader:
   print (row[0],float(row[1]))


print(suburbs_average)
</code></pre>
<p>I have spent a whole day trying to figure it out how to calculate the average of each suburbs(East,North...). Do I need to sort the same suburb together before calculate and how? Could anyone please help me on this? Thanks in advance. cheers.</p>
</div>
<div class="post-text" itemprop="text">
<p>I really like working with the standard library so I think you should stick with it too so you can understand the base implementations before just installing modules willy-nilly.</p>
<p>The <code>csv</code> module is a part of the standard library, and reading the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">docs</a> will help you learn what each module is capable of when looking for a solution. Given your problem, I'd do the following:</p>
<blockquote>
<p>Iterate through the <code>csv.reader()</code> object and put values into <code>dict()</code>s, then average them.</p>
</blockquote>
<pre><code>import csv

# keep track of each time we see one
count = {'North': 0,
         'South': 0,
         'East': 0,
         'West': 0}

# store the associated values each time we see one
avg = {'North': [],
       'South': [],
       'East': [],
       'West': []}

# get rid of newline if not Py3
with open("ps1_3_data.csv", 'r', newline='') as f: 
    r = csv.reader(f, delimiter=',')
    # assumes you dont have a header row
    # if you do, uncomment the line below this
    # header = next(r)
    for row in r:
        # increment count each time we see one
        count[row[0]] += 1
        # add to the suburbs list of values
        avg[row[0]].append(float(row[1])

# here we replace the lists with a single value
# goes from {'North': [15.0, 10.0, 10.0]}
# to {'North': 11.6666...}
for suburb in avg:
    avg[suburb] = (sum(avg[suburb])/len(avg[suburb])
</code></pre>
<p>I made a CSV with the data supplied to test:</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; temp = r'C:\Users\Paul\Desktop\temp.csv'
&gt;&gt;&gt; count = {'North': 0,
     'South': 0,
     'East': 0,
     'West': 0}
&gt;&gt;&gt; avg = {'North': [],
     'South': [],
     'East': [],
     'West': []}
&gt;&gt;&gt; with open(temp, 'r', newline = '') as f:
    r = csv.reader(f, delimiter=',')
    for row in r:
        count[row[0]] += 1
        avg[row[0]].append(float(row[1]))


&gt;&gt;&gt; count
{'North': 3, 'South': 4, 'East': 5, 'West': 5}
&gt;&gt;&gt; avg
{'North': [15.0, 10.0, 10.0], 'South': [10.0, 5.0, 5.0, 10.0], 'East': [10.0, 5.0, 10.0, 5.0, 10.0], 'West': [20.0, 15.0, 15.0, 20.0, 5.0]}
&gt;&gt;&gt; for suburb in avg:
    avg[suburb] = (sum(avg[suburb])/len(avg[suburb]))


&gt;&gt;&gt; avg
{'North': 11.666666666666666, 'South': 7.5, 'East': 8.0, 'West': 15.0}
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use something like openpyxl which will read excel files in a certain format for you. If you're trying to separate out the data between the items, I would suggest splitting the items and storing them in either a HashMap or something similar. For instance, for each line, split the string via the comma so you have two separate points of data, and go from there.</p>
</div>
<div class="post-text" itemprop="text">
<p>Given a very limited subset of your image:</p>
<pre><code>li=[('East',10.0),('West',5.0),('East',5.0),('West',2.0),('West',1.0)]
</code></pre>
<p>You can create a dictionary of lists with the keys being <code>'West, East, etc</code>:</p>
<pre><code>di={}
for d, n in li:
    di.setdefault(d, []).append(n)

&gt;&gt;&gt; di
{'West': [5.0, 2.0, 1.0], 'East': [10.0, 5.0]}
</code></pre>
<p>Then add and divide by the number of entries:</p>
<pre><code>&gt;&gt;&gt; {d:sum(l)/len(l) for d, l in di.items()}
{'West': 2.6666666666666665, 'East': 7.5}
</code></pre>
</div>
<span class="comment-copy">It looks like you want us to write some code for you. While many users are willing to produce code for a coder in distress, they usually only help when the poster has already tried to solve the problem on his own. A good way to show this effort is to include a <a href="http://stackoverflow.com/help/mcve">Minimal, complete, verifiable example</a>. Check the <a href="https://stackoverflow.com/tour">intro tour</a> you were <i>supposed</i> to finish before posting, especially <a href="http://stackoverflow.com/help/how-to-ask">How to Ask</a>.</span>
<span class="comment-copy"><a href="https://meta.stackoverflow.com/questions/284236/why-is-can-someone-help-me-not-an-actual-question">"Can Someone Help Me?" is not a valid SO question</a>.  This usually suggests that what you need is half an hour with a local tutor or walk through a tutorial, rather than Stack Overflow.</span>
<span class="comment-copy">@Hank You haven't said what the contents of the file are.  I'm guessing row[0] is the region and row[1] is the value you're averaging.  For each iteration of the loop, determine which region is represented then add it's value to a running total for it.  When the loop finishes, take the mathematical average and then insert them into suburbs_average and count.  I agree with the others that you need to read the  material and make an effort before posting here.</span>
