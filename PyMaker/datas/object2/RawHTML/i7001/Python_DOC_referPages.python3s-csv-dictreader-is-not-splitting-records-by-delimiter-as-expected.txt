<div class="post-text" itemprop="text">
<p>I am trying to read a TSV file using csv.DictReader, however, the reader is reporting wrong number of fields. When I looked inside, I found that it is not splitting delimiter properly (I confirmed with <code>str.split(delimiter)</code> and <code>awk -F 'delim'</code>. </p>
<hr/>
<pre><code>from pprint import pprint
import csv
import sys, os
keys = ['id', 'src', 'src_len', 'sys1_o', 'sys1_b', 'sys1_l',
        'sys2_o', 'sys2_b', 'sys2_l', 'sys3_o', 'sys3_b', 'sys3_l', 'x']
# get this data from https://gist.github.com/thammegowda/95613b203a442fbe72fc5b51af491367 
my_data = """segment-22 Kture . 27  Thutaalchisu.   -   33  Koture. -   27  Th jump.    -   33  3
segment-23  ‘Yunker .   7   "said.  -   8   ‘Yunker.    -   7   "said.  -   8   1"""

tmp_file = "tmp.tsv"
with open(tmp_file, 'w', encoding='utf-8') as f:
    f.write(my_data)

def read_recs_csv(path):
    with open(path, 'rt', encoding='utf-8') as f:
        rdr = csv.DictReader(f, fieldnames=keys, delimiter='\t')
        for rec in rdr:
            yield(dict(rec))

def read_recs_raw(path):
    with open(path, 'rt', encoding='utf-8') as f:
        for line in f:
            rec = dict(zip(keys, line.strip().split('\t')))
            yield(rec)

print("Reading through CSV DictReader ")
pprint(list(read_recs_csv(tmp_file)))
print("Reading directly")
pprint(list(read_recs_raw(tmp_file)))
# Debug
print(sys.version_info)
print(os.environ['LANG'])
</code></pre>
<p>Output:</p>
<pre><code>    Reading through CSV DictReader 
[{'id': 'segment-22',
  'src': 'Kture .',
  'src_len': '27',
  'sys1_b': '-',
  'sys1_l': '33',
  'sys1_o': 'Thutaalchisu.',
  'sys2_b': '-',
  'sys2_l': '27',
  'sys2_o': 'Koture.',
  'sys3_b': '-',
  'sys3_l': '33',
  'sys3_o': 'Th jump.',
  'x': '3'},
 {'id': 'segment-23',
  'src': '‘Yunker .',
  'src_len': '7',
  'sys1_b': '-',
  'sys1_l': '8',
  'sys1_o': 'said.\t-\t8\t‘Yunker.\t-\t7\tsaid.',
  'sys2_b': None,
  'sys2_l': None,
  'sys2_o': '1',
  'sys3_b': None,
  'sys3_l': None,
  'sys3_o': None,
  'x': None}]
Reading directly
[{'id': 'segment-22',
  'src': 'Kture .',
  'src_len': '27',
  'sys1_b': '-',
  'sys1_l': '33',
  'sys1_o': 'Thutaalchisu.',
  'sys2_b': '-',
  'sys2_l': '27',
  'sys2_o': 'Koture.',
  'sys3_b': '-',
  'sys3_l': '33',
  'sys3_o': 'Th jump.',
  'x': '3'},
 {'id': 'segment-23',
  'src': '‘Yunker .',
  'src_len': '7',
  'sys1_b': '-',
  'sys1_l': '8',
  'sys1_o': '"said.',
  'sys2_b': '-',
  'sys2_l': '7',
  'sys2_o': '‘Yunker.',
  'sys3_b': '-',
  'sys3_l': '8',
  'sys3_o': '"said.',
  'x': '1'}]
sys.version_info(major=3, minor=6, micro=1, releaselevel='final', serial=0)
en_US.UTF-8
</code></pre>
<p>Note: sample data is posted in <a href="https://gist.githubusercontent.com/thammegowda/95613b203a442fbe72fc5b51af491367/raw/606dc094df684810edb2ad3bb873c9980b088f28/sample.tsv" rel="nofollow noreferrer">a gist</a>. Please download it if tabs are replaced by spaces here.</p>
</div>
<div class="post-text" itemprop="text">
<p>The difference between raw and csv parsing (and that's why I insisted to get the input data) is that csv module handles <em>quoting</em> by default.</p>
<p>There are quotes in your data, and <code>csv</code> consider quote-protected fields as a single field. <code>awk</code> and <code>str.split</code> don't care.</p>
<p>Just tell <code>csv</code> module not to consider quoting:</p>
<pre><code>rdr = csv.DictReader(f, fieldnames=keys, delimiter='\t', quoting=csv.QUOTE_NONE)
</code></pre>
<p>doing this, I get all fields filled.</p>
</div>
<span class="comment-copy">Can you provide an example of your csv contents?</span>
<span class="comment-copy">note that only 12 keys are provided, since there are 13 columns, reader add an extra <code>None</code> key to group other value(s). Is that intentional?</span>
<span class="comment-copy">@Jean-FrançoisFabre Yep, I just wanted to ignore other keys</span>
<span class="comment-copy">According to <a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow noreferrer">the docs</a> you should open the file with <code>newline=''</code>. Does that change anything?</span>
<span class="comment-copy">if you don't post a small example of your file, noone will be able to answer</span>
