<div class="post-text" itemprop="text">
<p>I am trying to understand how the primes iterator works, the code was taken from a lecture. 
I searched for count() but found only methods for lists, objects, I just do not understand how the line <code>self._candidates = count(1)</code> works and what it means.
where is the object we are trying to count 1 in? and the further use of it <code>self._candidates.next()</code> is also very confusing.
I mainly code in java albeit know basic python.
here is the code: </p>
<pre><code>class Primes(object):
    def __init__(self):
        self._candidates = count(1)
    def __iter__(self): return self
    def next(self):
        item = self._candidates.next()
        if item &gt; 1:
            self._candidates = FilterMultiplies(self._candidates, item)
        return item

class FilterMultiplies(object):def __init__(self, seq, n):
    self._seq = iter(seq)
        self._n = n
    def __iter__(self): return self
    def next(self):
        item = self._seq.next()
        while item % self._n == 0:
            item = self._seq.next()
        return item
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Probably this is <a href="https://docs.python.org/3/library/itertools.html#itertools.count" rel="nofollow noreferrer"><code>itertools.count</code></a>, and a line</p>
<pre><code>from itertools import count
</code></pre>
<p>is missing from the listing.</p>
<p><a href="https://wiki.python.org/moin/Generators" rel="nofollow noreferrer">Generators</a> in Python are comparable to <code>Iterator</code>s in Java. The call <code>count(1)</code> returns a generator that counts upwards from 1:</p>
<pre><code>&gt;&gt;&gt; from itertools import count
&gt;&gt;&gt; counter = count(1)
&gt;&gt;&gt; counter.next()
1
&gt;&gt;&gt; counter.next()
2
&gt;&gt;&gt; counter.next()
3
</code></pre>
<p>Note that <code>counter.next()</code> is Python 2 only. For compatibility with both Python 2 and 3, use <code>next(counter)</code> instead.</p>
</div>
<span class="comment-copy">That is indeed confusing. Are you sure that you are showing us <i>all</i> the relevant code and that there is no definition of a <code>count</code> function given earlier, such as in an import? Note that the <code>next</code> method comes from the <code>_candidates</code> attribute which comes from the <code>count</code> function, so solving the <code>count</code> problem will probably also solve your <code>next</code> problem.</span>
<span class="comment-copy">thanks for the comment.I read the whole presentation it was taken from  and there is no such definition of count object or method.. also in previous lectures no such thing was mentioned.</span>
<span class="comment-copy">thanks a lot!! tried to upvote but still have limits of a new user.</span>
<span class="comment-copy"><i>"In Python 3, you'd use next(counter) instead."</i> There's no reason not to use <code>next(counter)</code> in python 2 as well.</span>
<span class="comment-copy">@Rawing Good point. But the code from the question is using <code>.next()</code>.</span>
<span class="comment-copy">@AmR: You may not be able to upvote but you can accept this answer by clicking the checkmark at the upper-left of the question. Do that if this actually answers your question and is the best answer, and both those requirements do seem to be satisfied here. This rewards the answerer and shows others that the question is answered.</span>
