<div class="post-text" itemprop="text">
<pre><code>1st Text file format . 
cake,60
cake,30
tart,50
bread,89  

2nd Text file format . 
cake,10
cake,10
tart,10
bread,10  
</code></pre>
<p>Code I have tried.</p>
<pre><code>from collections import defaultdict
answer = defaultdict(int)
recordNum = int(input("Which txt files do you want to read from "))
count = 1
counter = 0
counst = 1
countesr = 0
while recordNum &gt; counter:
  with open('txt'+str(count)+'.txt', 'r') as f:
      for line in f:
          k, v = line.strip().split(',')
          answer[k.strip()] += int(v.strip())
          count = count+1
          counter = counter+1
print(answer)
</code></pre>
<p>The problem.</p>
<pre><code>I want the dictionary to be {'cake': '100', 'tart': '60', 'bread': '99'}

but it prints like this  {'cake': '30', 'tart': '50', 'bread': '89'}
</code></pre>
<p>Instead of the "cake" value adding with the other cake values from txt file one and two it gets replaced with the latest value. How would I solve this issue.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can accumulate the counts using <code>collections.defaultdict</code>:</p>
<pre><code>from collections import defaultdict

answer = defaultdict(int)
with open("file.txt", 'r') as f:
    for line in f:
        k, v = line.split(',')
        answer[k.strip()] += int(v.strip())

# turn values back to string
for k in answer:
    answer[k] = str(answer[k])
print(answer)
</code></pre>
<p>If the counts are all positive, you may consider <code>collections.Counter</code> instead.</p>
</div>
<div class="post-text" itemprop="text">
<p>One fun thing you can do is add <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer"><code>Counter</code></a>s together:</p>
<pre><code>import csv
from collections import Counter

with open('file.txt', 'r') as f:
    reader = csv.reader(f)
    answer = sum((Counter({k: int(count)}) for k, count in reader), Counter())

print(answer)
</code></pre>
</div>
