<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/24216263/converting-html-list-to-nested-python-list">Converting HTML list to nested Python list</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I have a problem in my python code.</p>
<pre><code>import re
page = '&lt;ul id="talkList" class=aaaaaa &lt;li class&gt;First&lt;/li&gt;&lt;li 
class&gt;Second&lt;/li&gt;&lt;li class&gt;Third&lt;/li&gt;...'
pattern = re.compile(r'&lt;ul id="talkList".*?(&lt;li.*?&lt;/li&gt;)', re.S)
stories = re.findall(pattern, page)
for story in stories:
    print story
</code></pre>
<p>Now the result is:</p>
<pre><code>&lt;li class&gt;First&lt;/li&gt;
</code></pre>
<p>but I want the result is:</p>
<pre><code>&lt;li class&gt;First&lt;/li&gt;
&lt;li class&gt;Second&lt;/li&gt;
&lt;li class&gt;Third&lt;/li&gt;
</code></pre>
<p>I want to match the group <code>(&lt;li.*?&lt;/li&gt;)</code> 0 or unlimited times.</p>
<p>How can I do?</p>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>Zero or More  =&gt;  (&lt;li.*?&lt;/li&gt;){0,}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">star</a> operator:</p>
<pre><code>txt = 'abbabaa'
re.findall(r'(ab)*', txt)
</code></pre>
<p>outputs:</p>
<pre><code>['ab', '', 'ab', '', '', '']
</code></pre>
<h1>Caution</h1>
<p>Matching 0 or more will match empty string, I'm not sure thats what you need.</p>
<h1>Suggestion</h1>
<p>if you are using <code>re.findall</code> you dont need to match all <code>li</code> elements in one results as all resulting matches will return from <code>findall</code>.</p>
<p>first capture the <code>&lt;ul&gt;...&lt;/ul&gt;</code> block using <code>re.search()</code>.
then separate each <code>&lt;li&gt;&lt;/li&gt;</code> element using <code>re.findall()</code> on the resulting ul text</p>
<h1>Suggestion Two</h1>
<p>use <a href="http://lxml.de/" rel="nofollow noreferrer">lxml</a> or <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer">bs4</a> to parse html objects, its simpler than writing your own regexes to find html elements.</p>
</div>
<div class="post-text" itemprop="text">
<p>Can you try to use the regexp below instead.</p>
<pre><code>pattern = re.compile(r'(&lt;li.*?&lt;/li&gt;)', re.S)
</code></pre>
<p>This will work as you expect.</p>
</div>
<div class="post-text" itemprop="text">
<p>Take a look at the documentation for <code>re.findall()</code>:</p>
<pre><code>  findall(pattern, string, flags=0)
    Return a list of all non-overlapping matches in the string.

    If one or more groups are present in the pattern, return a
    list of groups; this will be a list of tuples if the pattern
    has more than one group.

    Empty matches are included in the result.
</code></pre>
<p>Your RE has only one match in your string since there is only one <code>'&lt;ul id="talkList"'</code> to match with. Since you have (one) group in your RE, <code>re.findall()</code> returns that group instead.</p>
<p>If you use just <code>'&lt;li.*?&lt;/li&gt;'</code> as your RE then <code>re.findall()</code> will find three matches and return all three:</p>
<pre><code>import re
page = '&lt;ul id="talkList" class=aaaaaa &lt;li class&gt;First&lt;/li&gt;&lt;li class&gt;Second&lt;/li&gt;&lt;li class&gt;Third&lt;/li&gt;...'
pattern = re.compile(r'&lt;li.*?&lt;/li&gt;', re.S)
stories = re.findall(pattern, page)
for story in stories:
    print story
</code></pre>
<p>Output:</p>
<pre><code>&lt;li class&gt;First&lt;/li&gt;
&lt;li class&gt;Second&lt;/li&gt;
&lt;li class&gt;Third&lt;/li&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of </p>
<pre><code>pattern = re.compile(r'&lt;ul id="talkList".*?(&lt;li.*?&lt;/li&gt;)', re.S)
</code></pre>
<p>Use</p>
<pre><code>pattern = re.compile(r'&lt;li.*?&lt;/li&gt;', re.S)
</code></pre>
<p>Will solve your problem</p>
</div>
<span class="comment-copy">Would you like to augment this code-only answer with some explanatin? That would improve it noticeably.</span>
<span class="comment-copy">I'm already do that way(find ul and then find li). I wonder if there is a way to find it one time ^ ^ Thanks!</span>
<span class="comment-copy">Thank! I know if change it to <code>pattern = re.compile(r'&lt;li.*?&lt;/li&gt;', re.S)</code> will match all &lt;LI&gt;, but I just  want to match the &lt;LI&gt;  <b>UNDER</b> this UL(` &lt;ul id="talkList"`) .  After your answer with the python documentation, I think I can't do that when I use re.findall() method. am I right?</span>
<span class="comment-copy">See ShmulikA's suggestion about doing <code>re.search()</code> first to isolate the <code>&lt;ul&gt;...&lt;/ul&gt;</code> of interest. I think that's the right idea.</span>
<span class="comment-copy">OK,I think so too. Thanks~</span>
<span class="comment-copy">In your case its matching for only one with your specified pattern of combination. If you matches with only common part, it will matches all occurrences of specified pattern @YOUNG</span>
<span class="comment-copy">Thank! I know if change it to <code>pattern = re.compile(r'&lt;li.*?&lt;/li&gt;', re.S)</code> will match all &lt;LI&gt;, but I just  want to match the &lt;LI&gt;  <b>UNDER</b> this UL(` &lt;ul id="talkList"`) .</span>
<span class="comment-copy">you can still do that by specifying unique id to <code>&lt;li&gt;</code> which you want to list and include in <code>re.compile()</code> with <code>&lt;li id="__" .*?&lt;/li&gt;</code> @YOUNG</span>
<span class="comment-copy">mention common <code>id</code> to <code>&lt;li&gt;</code> which you want to list @YOUNG</span>
<span class="comment-copy">OK , I'm already sloved thanks</span>
