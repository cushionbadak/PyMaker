<div class="post-text" itemprop="text">
<p>I want to use Python to:</p>
<ol>
<li>Read a line from <code>search_list</code> file.</li>
<li>Iterate through <code>source_file</code> lines.</li>
<li>If a line match is found, copy that whole line from <code>source_file</code> to <code>export_file</code>.</li>
<li>Repeat steps 1-3 until <code>search_file</code> is exhausted.</li>
</ol>
<p>The contents of <code>source_file</code> are plain text. Sample:</p>
<pre><code>Act of Heroism  Instant 1W  Common  Magali Villeneuve
Adorned Pouncer Creature — Cat 1/1  1W  Rare    Slawomir Maniak
Angel of Condemnation   Creature — Angel 3/3    2WW Rare    Slawomir Maniak
</code></pre>
<p>The <code>search_list</code> file is also a plain text with keywords, one per line, as in the following example:</p>
<pre><code>Condemnation
Heroism
</code></pre>
<p>After spending some time in Stackoverflow, I have the current code --which is unusable at the moment:</p>
<pre><code>with open('list.txt', 'r') as search_list, \
        open('source_file.txt', 'r', encoding="utf8") as source_file:

    for line in search_list:
        searchquery = search_list.readlines()

        for line in source_file:
            current_line = line.split()

            if searchquery in current_line:
                print (line)
</code></pre>
<p>it returns nothing.</p>
<p>I try to figure it out what's wrong and so far I can't find it.</p>
<p>I did a step back and tried to search with string and it worked!</p>
<pre><code>with open('list.txt', 'r') as search_list, \
        open('source_file.txt', 'r', encoding="utf8") as source_file:

    for line in source_file:        
        if "Heroism" in line:
            print (line)
</code></pre>
<p>The result is:</p>
<pre><code>Act of Heroism  Instant 1W  Common  Magali Villeneuve
</code></pre>
<p>Could anyone point me out what's wrong in my top code?</p>
<p>Thank you very much.</p>
</div>
<div class="post-text" itemprop="text">
<p>I interpreted your question as that you want to output each line of a file <code>source_file.txt</code> that contains a certain substring, and these substrings are in another file <code>search_list.txt</code>. If that is correct, the following code should work for you:</p>
<pre><code>import sys

with open('search_list.txt', 'r') as search_list:
    targets = [line.strip() for line in search_list]

with open('source_file.txt', 'r') as source_file:
    for line in source_file:
        if any(target in line for target in targets):
            sys.stdout.write(line)
</code></pre>
<p>where <code>search_lines.txt</code> is</p>
<pre><code>Condemnation
Heroism
</code></pre>
<p>and <code>source_file.txt</code> is </p>
<pre><code>Act of Heroism Instant 1W Common Magali Villeneuve
Adorned Pouncer Creature — Cat 1/1 1W Rare Slawomir Maniak
Angel of Condemnation Creature — Angel 3/3 2WW Rare Slawomir Maniak
</code></pre>
<p>this will correctly output</p>
<pre><code>Act of Heroism Instant 1W Common Magali Villeneuve
Angel of Condemnation Creature — Angel 3/3 2WW Rare Slawomir Maniak
</code></pre>
<p>which is each line that contains either '<code>Condemnation</code>' or '<code>Heroism</code>'.</p>
<p>This works by first building up a list of all the <code>targets</code> first, and then for each line in <code>source_file.txt</code>, checking if any target is a substring of the line. You have to build up the list of targets as when you iterate over a file in Python each line is 'consumed' so you can't go back to the start again in another for loop.</p>
<p>The way the line <code>if any(target in line for target in targets)</code> works is broadly like this:</p>
<p>First, it uses the generator expression <code>target in line for target in targets</code>. This returns the value of <code>target in line</code> (which checks if <code>target</code> is a substring of <code>line</code>) for each <code>target</code> in <code>targets</code> - it could also effectively be written as</p>
<pre><code>with open('source_file.txt', 'r') as source_file:
    for line in source_file:
        matches = []
        for target in targets:
            matches.append(target in line)
        if any(matches):
            sys.stdout.write(line)
</code></pre>
<p>Now, the <code>any</code> function takes an iterable (something like a list) and returns <code>True</code> if any of the values are <code>True</code> (or equivalent to <code>True</code>). It also has the property of short-circuiting - it actuallly stops as soon as it does meet <code>True</code>, if it does. This means the code could be rewritten pretty accuately as</p>
<pre><code>with open('source_file.txt', 'r') as source_file:
    for line in source_file:
        matches = []
        for target in targets:
            if target in line:
                sys.stdout.write(line)
                break
</code></pre>
<p>(This has to do with the fact that there is a generator expression, which does not evaluate the whole thing at once, but lazily gives one value at a time, meaning no more work will be done than needed.)</p>
<p>By the way, <code>[line.strip() for line in search_list]</code> is a list comprehension. This returns a list of <code>line.strip()</code> for each line in <code>search_list</code>. This could be rewritten as</p>
<pre><code>    targets = []
    for line in search_list:
        targets.append(line.strip()
</code></pre>
<p>Hopefully that's helped. <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">Here</a> is some useful documentation on how list comprehensions work. I find it can often be useful to start with the simpler examples like <code>[i ** 2 for i in range(10)]</code>. Let me know if you'd like any more clarification.</p>
</div>
<span class="comment-copy">"but it return nothing": there is no line containing "Dutiful Servants" in the source file. So... what's wrong?</span>
<span class="comment-copy">Looks like none of the line matched "Dutiful Servants" string</span>
<span class="comment-copy">There's nothing wrong with the code, it behaves as it should, none of the 3 lines from <i>source_file.txt</i> contains the string "<i>Dutiful Servants</i>", so nothing gets printed on the screen.</span>
<span class="comment-copy">ouch. I trimmed the source file to make it short. I will update my code to match the current example source file. sorry for confuse everyone. :'(</span>
<span class="comment-copy">Most likely, it's the <b>end of line</b> (<i>eoln</i>). For example, the 1st line of <i>list.txt</i> is "<i>Condemnation\n</i>", which doesn't exist in any of the <i>source_file.txt</i> lines (including "<i>Angel of <b>Condemnation</b> Creature — Angel 3/3 2WW Rare Slawomir Maniak</i>"). To get rid of this, after reading a line call <code>strip()</code> on it. Another <b>big</b> problem in your code is: <code>if searchquery in current_line:</code>; <code>searchquery</code> is a list of strings, so is <code>current_line</code>; so the condition will never be <code>True</code>.</span>
<span class="comment-copy">Thank you so much. it worked! I saw output on screen as I expected. I will try to write the output to the file.   what I learned are; 1) I need to use line.strip() I guess it will strip all content into list but will google for that. 2) I do not understand "any(target in line for targets in targets)". Is this called list comprehension? I need to study that asap.</span>
<span class="comment-copy">Alright - I've tried to update.</span>
<span class="comment-copy">thank you very much. Izaak van Dongen :D</span>
