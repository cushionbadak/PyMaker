<div class="post-text" itemprop="text">
<p>I am trying to put a reference to the following link into one of my reST documents: <a href="https://docs.python.org/3/library/stdtypes.html#typecontextmanager" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#typecontextmanager</a>. I am trying to use a <code>:ref:</code> inline directive instead of a link.</p>
<p>I ran <code>python -m sphinx.ext.intersphinx https://docs.python.org/3/objects.inv</code>. The result shows, among other things:</p>
<pre>
...
std:label
    23acks                    Acknowledgements             : whatsnew/2.3.html#acks
    23section-other           Other Changes and Fixes      : whatsnew/2.3.html#section-other
...
    typebytearray             Bytearray Objects            : library/stdtypes.html#typebytearray
    typebytes                 Bytes Objects                : library/stdtypes.html#typebytes
<b>    typecontextmanager        Context Manager Types        : library/stdtypes.html#typecontextmanager</b>
    typeiter                  Iterator Types               : library/stdtypes.html#typeiter
    typememoryview            Memory Views                 : library/stdtypes.html#typememoryview
...
</pre>
<p>The bolded URL is exactly what I am looking for since my <code>intersphinx_mapping</code> looks like this:</p>
<pre><code>intersphinx_mapping = {
    'python': ('https://docs.python.org/3', None),
}
</code></pre>
<p>I use the following directive:</p>
<pre><code>:ref:`context manager &lt;python:typecontextmanager&gt;`
</code></pre>
<p>This seems to be pointing to the right label, but I get the following warning:</p>
<pre><code>WARNING: undefined label: python:typecontextmanager (if the link has no caption the label must precede a section header)
</code></pre>
<p>The <code>:ref:</code> gets replaced by the string <code>context manager</code>, but there is no link.</p>
<p>What am I missing?</p>
<p>I am using sphinx 1.6.3 on an Anaconda install of Python 3.6.2</p>
<p><strong>Note 1</strong></p>
<p>I have the same problem using <code>:ref:`with &lt;python:with&gt;`</code>, which is supposed to point to <a href="https://docs.python.org/3/reference/compound_stmts.html#with" rel="nofollow noreferrer">https://docs.python.org/3/reference/compound_stmts.html#with</a>, according to the inventory line (also under <code>std:label</code>):</p>
<pre><code>     with                       The with statement          : reference/compound_stmts.html#with
</code></pre>
<p>I am guessing that a solution to the main question will most likely solve this as well.</p>
<p><strong>Note 2</strong></p>
<p>Probably not 100% relevant, but I can link to <code>:py:meth:`~contextmanager.__enter__`</code> in the same section without any problems.</p>
</div>
<div class="post-text" itemprop="text">
<p>Either of these work for me.</p>
<pre><code>:ref:`python:typecontextmanager`
:ref:`typecontextmanager &lt;python:typecontextmanager&gt;`
</code></pre>
<p>Note that if you use angle brackets around the target, then you must include a title.</p>
<p>Here's how they render for me:</p>
<ul>
<li><a href="https://docs.python.org/3/library/stdtypes.html#typecontextmanager" rel="nofollow noreferrer">Context Manager Types</a></li>
<li><a href="https://docs.python.org/3/library/stdtypes.html#typecontextmanager" rel="nofollow noreferrer">typecontextmanager</a></li>
</ul>
<p>As an aside, I recently added context managers to Pyramid's documentation in its <a href="https://docs.pylonsproject.org/projects/pyramid/en/latest/glossary.html#term-context-manager" rel="nofollow noreferrer">Glossary</a>, which I think does a good job of explaining what they are.  Here's the reST source:</p>
<pre><code>:ref:`With Statement Context Managers &lt;python:context-managers&gt;`
:ref:`with &lt;python:with&gt;`
</code></pre>
</div>
<span class="comment-copy">I'm not seeing any fundamental differences between our references here. I will do a <code>make clean</code> and see if that helps.</span>
<span class="comment-copy">A <code>make clean</code> fixed it. However, you answer has some valuable tips in it, so I will select it to keep that rep flowing.</span>
<span class="comment-copy">There are a couple of other options in my answer to another question: <a href="https://stackoverflow.com/a/43908388/2214933">stackoverflow.com/a/43908388/2214933</a>. Sphinx caches parsed reST files as "doctree pickles", and not Python source code files, then writes to output. It only looks for new and changed files. So if you didn't change your reST file and save it since the previous run, then the changes in the output would never show. I sometimes just add a line feed and save it to force the current file to run.</span>
