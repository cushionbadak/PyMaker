<div class="post-text" itemprop="text">
<p>I am trying to create a Jenkins job using Jenkins module in python. I am able to successfully connect with jenkins and perfrom get job_count as well as create_job() method.</p>
<p>In create_job() method i can perfrom this operation only with  "jenkins.EMPTY_CONFIG_XML" parameter. How do i pass my own xml config file? below is my code, I have config saved on local, how to pass it by replacing EMPTY_CONFIG_XML. I tried few things, didn't work. Couldn't find it online. My below code is working. It's creating TestJob with EMPTY_CONFIG_XML. can someone please help how to pass customized XML file? Thank you for help!</p>
<pre><code>import jenkins
import xml.etree.ElementTree as ET

server = jenkins.Jenkins("http://x.x.x.x:8080", username="foo", password="baar")

#print server.get_whoami()
server.create_job("TestJob",jenkins.EMPTY_CONFIG_XML)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Looking through the <a href="http://python-jenkins.readthedocs.io/en/latest/api.html#jenkins.Jenkins.create_job" rel="nofollow noreferrer">documentation for create_job</a>, the <code>config_xml</code> parameter should be passed as a string representation of the xml. </p>
<p>I used a <a href="https://docs.python.org/3/library/xml.etree.elementtree.html" rel="nofollow noreferrer">xml.etree.ElementTree</a> to parse the XML file and  convert it into a string:</p>
<pre class="lang-python prettyprint-override"><code>import xml.etree.ElementTree as ET

def convert_xml_file_to_str():
    tree = ET.parse(path_to_config_file)
    root = tree.getroot()
    return ET.tostring(root, encoding='utf8', method='xml').decode()

def main():
    target_server = jenkins.Jenkins(url, username=username, password=password)
    config = convert_xml_file_to_str()
    target_server.create_job(job_name, config)

main()
</code></pre>
<p>I found <a href="https://stackoverflow.com/questions/15304229/convert-python-elementtree-to-string/48671499#48671499">this</a> thread very helpful in understanding how to parse XML files, it also has a nice explanation about differences between Python2/3.</p>
</div>
