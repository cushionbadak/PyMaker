<div class="post-text" itemprop="text">
<p>I'm trying to do a script that generate a 20 digit random string. But these strings have to be unique.</p>
<p>Imagine that I generate today 20000 random string and tomorrow 20000 other strings I need to be sure that I have 40000 different string.</p>
<p>The problem is the amount of data I have nearly 700000 serial by day and don't know how to optimize it to be sure to have unique serial with competitive time ...</p>
<p>Thanks you for your help.</p>
<p>Need to be compliant to this <a href="https://ec.europa.eu/health/sites/health/files/files/eudralex/vol-1/reg_2016_161/reg_2016_161_en.pdf" rel="nofollow noreferrer">https://ec.europa.eu/health/sites/health/files/files/eudralex/vol-1/reg_2016_161/reg_2016_161_en.pdf</a></p>
<p>I can't do incremental.</p>
</div>
<div class="post-text" itemprop="text">
<p>I agree with @bendl's comment - if you need it to be 20 digits you could just increase by one value each time you need a new string. If it doesn't have to be 20 digits, I'd say take a look at the UUID module for python: <a href="https://docs.python.org/2/library/uuid.html" rel="nofollow noreferrer">https://docs.python.org/2/library/uuid.html</a></p>
<p>This module creates unique IDs, could be what you're looking for. Good luck!</p>
</div>
<div class="post-text" itemprop="text">
<p>To ensure uniqueness you can generate string as combination of UUID and timestamp. For example</p>
<pre><code>&gt;&gt;&gt; import uuid
&gt;&gt;&gt; import time
&gt;&gt;&gt; my_string = "{}-{}".format(uuid.uuid4(), time.time())
&gt;&gt;&gt; print my_string

'6cc452ac-5b30-47df-8ea4-7170ec1979b1-1502985399.0055182'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Essentially you need to create a new random string and verify it does not exist in your current list (if you can't check your current list, this can't be done).</p>
<p>Reference <a href="https://docs.python.org/3/library/random.html#random.choices" rel="nofollow noreferrer">https://docs.python.org/3/library/random.html#random.choices</a></p>
<pre><code>import string
import random

x = 0
itemlist = []

while x &lt; 2000:
    newitem = ''.join(random.choice(string.ascii_uppercase + string.digits) 
    for _ in range(20))

    if newitem not in itemlist:
        itemlist.append(newitem)
        x = x + 1
        print newitem
</code></pre>
</div>
<span class="comment-copy">Is there any reason you can't just start with 00000000000000000001 and move on to 00000000000000000002?</span>
<span class="comment-copy">Need to be random string not incremental with some complexity</span>
<span class="comment-copy">but there is possibility of duplicate with this method. I can't even have 1/10000000 probability it have to be 0</span>
<span class="comment-copy">Having timestamp as part of the generated string will guarantee value uniqueness, because your timestamp will continuously increase as time goes and will never repeat in observable future. You could achieve same result by using SQL sequence, just example below shows how to do this in Python. Additionally, example above scales better than SQL sequences for really big data volumes, should you need this</span>
<span class="comment-copy">But what about my 20 character maximum :/ and only alphanum  Thanks you for your help btw</span>
