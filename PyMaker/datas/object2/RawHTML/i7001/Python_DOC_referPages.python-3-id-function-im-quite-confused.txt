<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/20753364/why-is-the-id-of-a-python-class-not-unique-when-called-quickly">Why is the id of a Python class not unique when called quickly?</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>I have a question about the id() function:</p>
<p>Can I say that: when an object is created whether you use the id function or not it will in the background "create" an id number, this reference's the location of this object. If you don't call the object to a name this id will get cleared away because of the garbage collector? </p>
</div>
<div class="post-text" itemprop="text">
<p>id() is guaranteed to be unique and constant for the object during its lifetime, and will not be affected by "garbage collection".</p>
<p>Check out the answer to this for more insight:
<a href="https://stackoverflow.com/questions/15667189/what-does-id-function-used-for">What does id( ) function used for?</a></p>
</div>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/functions.html#id" rel="nofollow noreferrer">docs</a> are pretty clear about this: "Return the “identity” of an object. This is an integer which is guaranteed to be unique and constant for this object during its lifetime. Two objects with non-overlapping lifetimes may have the same id() value." Note, the fact that this number <i>happens</i> to be a memory address is an implementation detail of CPython that should not be relied upon.</span>
<span class="comment-copy"><a href="https://stackoverflow.com/questions/15667189/what-does-id-function-used-for" title="what does id function used for">stackoverflow.com/questions/15667189/…</a> may be relevant.</span>
<span class="comment-copy">id is unique and constant during its lifetime but whats meant by that? will it be endend if its not attached to an string? which would result in the gc eventually?</span>
<span class="comment-copy">"unique and constant during its lifetime" means a reference that will not change whilst that object exists. Because Python's implementation of id() is based on the variable's address in memory, once a variable is garbage collected, a new variable could assume the id() of the previous object. See <a href="https://stackoverflow.com/questions/20753364/why-is-the-id-of-a-python-class-not-unique-when-called-quickly" title="why is the id of a python class not unique when called quickly">stackoverflow.com/questions/20753364/…</a></span>
