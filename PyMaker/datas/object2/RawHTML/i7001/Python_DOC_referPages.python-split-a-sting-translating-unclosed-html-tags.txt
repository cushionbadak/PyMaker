<div class="post-text" itemprop="text">
<p>i am developing a telegram bot. telegram does not allow to send too long message. my bot has to generate a text and if it is too long i wrote a function to split it in more messages in a list so i can send them one by one.
what i currently do is:</p>
<pre><code>message = "" # random text with variable lenght
max_chars_per_message = 4000
length_message = len(message)
splitted_message_list = []
for i in range(0, length_message, max_chars_per_message):
    splitted_message = [message[i:i+max_chars_per_message]]
    splitted_message_list.append(splitted_message)
</code></pre>
<p>it actually works fine. my problem if is the text contains html tags. I would like that that function could be able to do something like: split the message every 'max_chars_per_message' chars, but if the message ends with an unclosed html tag, split the message before the tag starts and translate that part to the following splitted message.</p>
<p>example:
wrong:</p>
<p><code>this is a &lt;b&gt; te|st &lt;/b&gt; message</code></p>
<p>right:</p>
<p><code>this is a |&lt;b&gt; test &lt;/b&gt; message</code></p>
<p>The supported and used HTML tags are <a href="https://core.telegram.org/bots/api/#formatting-options" rel="nofollow noreferrer">here</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>Have you considered using regex? I'm not an regex expert, but this would be my best effort:</p>
<pre><code>import re

string = 'this is a &lt;b&gt; test &lt;/b&gt; message &lt;b&gt; another text &lt;/b&gt;'
output = re.split(r'(&lt;.+?&gt;)', string)
</code></pre>
<p>output:</p>
<pre><code>['this is a ', '&lt;b&gt;', ' test ', '&lt;/b&gt;', ' message ', '&lt;b&gt;', ' vamo ', '&lt;/b&gt;', '']
</code></pre>
<p>If you want to remove the html and make a list of only the text:</p>
<pre><code>output = re.findall(r'&gt;(.*?)&lt;', string)
</code></pre>
<p>output:</p>
<pre><code>[' test ', ' message ', ' another text ']
</code></pre>
</div>
<span class="comment-copy">Also, have you considered what happens when the whole text is inside some HTML tag?</span>
<span class="comment-copy">@brunodesthuilliers i actually don't know how i could check if there is an unclosed html tag at the end and translate that part to the following message. i was thinking to check if for any tag there is also the closed part but after that the thing seems quite complex</span>
<span class="comment-copy">@Kendas this is a good point i hadn't considered because the generated text contains a lot of short tags. but it's a good point, i guess in that case it should just close the tag before the message ends and add another tag of start at the beginning of the following message. by the way for the moment i don't have the necessity to implement this</span>
<span class="comment-copy">What if "&lt;tag&gt;some text here&lt;/tag&gt;" ends up being longer than max_chars_per_message ?-)</span>
<span class="comment-copy">@91DarioDev I stumbled onto <a href="https://docs.python.org/3/library/html.parser.html" rel="nofollow noreferrer"><code>HTMLParser</code></a> in the official docs. I'm not going to write a working example, so I don't know if it would work, but you could take a look at it. At the very least you can create some sort of nested representation that would tell you which tags you'd need to close and so on. There would be <i>some</i> edge cases, which have no easy answers, though. Like when the opening tags alone take more room than the max length, but that is also for you to figure out.</span>
