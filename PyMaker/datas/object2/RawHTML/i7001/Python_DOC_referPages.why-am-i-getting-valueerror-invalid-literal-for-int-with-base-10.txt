<div class="post-text" itemprop="text">
<p>When I run this program, i get the error, ValueError: invalid literal for int() with base 10: '', I feel like it's to do with the int and str conversions but I'm really not too sure, any help appreciated :)    </p>
<pre><code>CalendarDict = {1:"January", 2:"February", 3:"March", 4:"April", 5:"May", 
6:"June", 7:"July", 8:"August", 9:"September", 10:"October", 11:"Novemeber", 
12:"December"}

InputError = True
while InputError:
    try:
        BirthDate = str(input("Enter Birth Date in format DDMMYY - "))
    except ValueError:
        print("Error - Numbers in format DDMMYY only")
        InputError = False

DD = BirthDate[0:2] 
MM = BirthDate[3:4]
YY = BirthDate[4:6]

if MM == BirthDate[3:4]:
   print("Your Birth Month is - ", (CalendarDict[int(MM)]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The bit that was tripping you up was the <a href="https://stackoverflow.com/a/509295/6084928">slice notation</a>, as noted by others.  Here's a version that seems to do what you want:</p>
<pre><code>CalendarDict = {1:"January", 2:"February", 3:"March", 4:"April", 5:"May", 
6:"June", 7:"July", 8:"August", 9:"September", 10:"October", 11:"Novemeber", 
12:"December"}

while True:
    try:
        BirthDate = str(input("Enter Birth Date in format DDMMYY - "))
        break
    except ValueError:
        print("Error - Numbers in format DDMMYY only")

DD = BirthDate[0:2] 
MM = BirthDate[2:4]
YY = BirthDate[4:]

print("Your Birth Month is - ", (CalendarDict[int(MM)]))
</code></pre>
<p>Note how the start and end positions match up.</p>
</div>
<div class="post-text" itemprop="text">
<p>I would rather put this in a comment but don't have enough reps, so here goes.</p>
<p>Firstly, array slicing in Python requires you to give the numbers in a format <code>[a:b]</code>, where a is the index of the first character you want to get and b is the index of the character upto but <b> NOT </b>including which you want to get your characters, so variable MM should be <code>BirthDate[2:4]</code>.</p>
<p>Next, to check whether something qualifies your "DDMMYY" requirement, you should probably be using <code>int(input("Enter your DOB</code>)) because anyone can enter random text and get away with it if you use the str() function to convert it into a string (because I believe you are looking for integral input)</p>
<p>Also, as mentioned in one of the comments, try putting <code>InputError=False</code> in the <code>try</code> part instead of the <code>except</code> part.</p>
<p>So code will look like this:</p>
<pre><code>CalendarDict = {1:"January", 2:"February", 3:"March", 4:"April", 5:"May", 
6:"June", 7:"July", 8:"August", 9:"September", 10:"October", 11:"Novemeber", 
12:"December"}

InputError = True
while InputError:
    try:
        BirthDate = int(input("Enter Birth Date in format DDMMYY - ")) # change to int() from str()
        InputError = False # set error to false since the above line got evaluated
    except ValueError:
        print("Error - Numbers in format DDMMYY only")

DD = BirthDate[0:2] 
MM = BirthDate[2:4]
YY = BirthDate[4:6]

print("Your Birth Month is - ", (CalendarDict[MM])) # converting into integer is not required since it already is one!  
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>datetime</code> module to do what you want quite efficiently.</p>
<pre><code>import datetime

while True:
    try:
        birthDate = datetime.datetime.strptime(input("Enter Birth Date in format DD/MM/YYYY - "), "%d/%m/%Y")
        break
    except ValueError as ve:
        print(ve)
        continue

print("Your Birth Month is - {}".format(birthDate.strftime("%B")))
</code></pre>
<p>This results in the usage of:</p>
<pre><code>Enter Birth Date in format DD/MM/YYYY - 31/10/2000
Your Birth Month is - October
</code></pre>
<p><code>datetime</code> is quite powerful, especially the provided <code>.strptime</code>, for parsing dates, and <code>.strftime</code> for providing various outputs. I'd advise you to read the <a href="https://docs.python.org/3/library/datetime.html" rel="nofollow noreferrer">documentation</a> if you plan on working with input, output and dates. <code>datetime</code> is easily extensible to more complex tasks with dates.</p>
<p>If you're using Python2, change <code>input</code> to <code>raw_input</code>.</p>
<p>I've also removed your <code>if</code> statement - it seemed to be checking MM against the definition of MM. Note that <code>CalendarDict</code> is unecessary as you can use the power of <code>datetime</code>. I've changed your <code>while</code> loop to just use control flow statement, rather than a variable.</p>
<p>Also a general tip: use <code>camelCasing</code> or <code>underscore_casing</code> for variables, as <code>CapitalCasing</code> is generally reserved for classes.</p>
</div>
<span class="comment-copy">I have no even idea what language it is, but it is obvious to me that <code>MM</code> is containing some string which cannot represent an integer in base 10. Print it to see.</span>
<span class="comment-copy">Oh no sorry i forgot to put that, its python!</span>
<span class="comment-copy">@Emily You're trying to convert an empty string to a number using <code>int</code>. That obviously won't work. You need to debug to find out where you're trying to do that. Since you only use <code>int</code> once, it should be easy to track down.</span>
<span class="comment-copy">It may be useful to know that slicing outside of the range of a string or list in Python fails silently: <code>"a"[3:4] == ""</code>.</span>
<span class="comment-copy">Is this Python 2 or 3? I can't quite figure it out, and this will change the behaviour of <code>input</code> quite drastically.</span>
<span class="comment-copy">I think this will pass on an input like <code>20</code>, leading to a failure later on, but from the message <code>Numbers in format DDMMYY only</code>, you wouldn't expect it to. This was really more of a problem in OP's code than a problem with your answer to OP's question, though.</span>
<span class="comment-copy">Thanks for the help! I've fixed it now, i definitely had my inputerror = false in the wrong place haha</span>
