<div class="post-text" itemprop="text">
<p>I am working on a webserver access log analysis tool. Sometimes i get malformed requests hitting the web server. I want to be able to identify these. However when trying to test whether this string "\x04\x01\x00PÀcö60\x00" starts with \x0. Python reports no match.</p>
<p>I am doing:</p>
<pre><code>&gt;&gt;&gt; t = "\x04\x01\x00P\xC0c\xF660\x00"
&gt;&gt;&gt; t.startswith('\\x0')
False
</code></pre>
<p>What am i missing here? I tried regex as well, but no dice. :(</p>
<p>I even tried to strip the slashes, but i cannot. What wizardry is this?</p>
<pre><code>&gt;&gt;&gt; t.replace("\\", "")
'\x04\x01\x00PÀcö60\x00'
&gt;&gt;&gt; t
'\x04\x01\x00PÀcö60\x00'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>That's because if you'd look at the first character you'd actually see this:</p>
<pre><code>&gt;&gt;&gt; t = "\x04\x01\x00P\xC0c\xF660\x00"
&gt;&gt;&gt; t
'\x04\x01\x00P\xc0c\xf660\x00'
&gt;&gt;&gt; t[0]
'\x04'
&gt;&gt;&gt; t.startswith('\\x0')
False
&gt;&gt;&gt; t.startswith('\\x04')
False
&gt;&gt;&gt; t.startswith('\x04')
True
&gt;&gt;&gt; 
</code></pre>
<p>So the first character is represented by a hex value of <code>04</code> while you tested it with a value of <code>0</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>The first character of the input string <code>'\x04\x01\x00P\xC0c\xF660\x00'</code> is <code>'\x04'</code> as the escape sequence has the format <code>\xhh</code>.</p>
<p><code>'\\x0'</code> in your example is actually a string composed of 3 characters: <code>'\'</code>, <code>'x'</code> and <code>'0'</code>. Compare:</p>
<pre><code>&gt;&gt;&gt; len('\x04')
1
&gt;&gt;&gt; len('\\x0')
3
</code></pre>
<p>So the correct check would be <code>t.startswith('\x04')</code>:</p>
<pre><code>&gt;&gt;&gt; t = '\x04\x01\x00P\xC0c\xF660\x00'
&gt;&gt;&gt; t.startswith('\x04')
True
</code></pre>
<p>See the <a href="https://docs.python.org/3/reference/lexical_analysis.html#literals" rel="nofollow noreferrer">Literals</a> documentation for more details.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use list comprehension to break the string up by <code>\\</code>:</p>
<pre><code>t = "\x04\x01\x00P\xC0c\xF660\x00"
t = [i for i in t if i != "\\"]
</code></pre>
<p><code>t</code> contains:</p>
<pre><code>['\x04', '\x01', '\x00', 'P', '\xc0', 'c', '\xf6', '6', '0', '\x00']
</code></pre>
<p>To access the first character, you will have to provide a hex character that is not <code>0</code>, but <code>04</code>:</p>
<pre><code>if t[0] == "\x04":
   do_something()
</code></pre>
</div>
<span class="comment-copy">I appreciate your answers. However this leaves me with the conundrum of testing whether this string has hex literals in it. That is the reason i was testing for \x0 or \x...</span>
