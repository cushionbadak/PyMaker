<div class="post-text" itemprop="text">
<p>I've read the <code>argparse</code> <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">docs</a> and i am trying to make a program that takes command line arguments and passes those values to variables like so:</p>
<pre><code>ssh.py -username admin -password password -hostlist 192.168.1.1, 192.168.1.2 -commands uname -a, whoami 
</code></pre>
<p>When I statically assign these values within my program it works, however I am unable to get argpase to pass strings into variables regardless of if the destination is a list or a single string.</p>
<p>This works:</p>
<pre><code>hostlist = ['192.168.1.1','192.168.1.2']
username = 'admin'
password = 'password'
commands = ['uname -a','whoami']
</code></pre>
<p>This runs silently and does not work or generate an error or write a log file:</p>
<pre><code>    parser = argparse.ArgumentParser()
    parser.add_argument('-u', '-username', help='The Username for authentication.')
    parser.add_argument('-p', '-password', help='The password for authentication.')
    parser.add_argument('-l', '-hostlist', nargs='+', help='List of devices to interact with.')
    parser.add_argument('-c', '-commands', nargs='+', help='An exact list of commands to run')

    args = parser.parse_args()
    u,username = args.username
    p,password = args.password
    l,hostlist = args.hostlist
    c,commands = args.commands
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>it worked for me :</p>
<pre><code>import optparse


parser = optparse.OptionParser('usage%prog'+'-username &lt;username&gt;'+'-password&lt;pass&gt; '+' -localhost&lt;localhost&gt;' +'-commands &lt;commands&gt; ')


parser.add_option('-u', dest='username', help='The Username for authentication.')
parser.add_option('-p', dest='password', help='The password for authentication.')
parser.add_option('-l', dest='hostlist', help='List of devices to interact with.')
parser.add_option('-c', dest='commands', help='An exact list of commands to run')

(options,args) = parser.parse_args()

username = options.username
password = options.password
hostlist = options.hostlist
commands = options.commands

print username,password,hostlist,commands
</code></pre>
<hr/>
<p>python ssh.py -u admin -p password -l '192.168.1.1, 192.168.1.2' -c 'uname -a',whoami</p>
<hr/>
<p>output:</p>
<pre><code>admin password 192.168.1.1,192.168.1.2 uname -a,whoami
</code></pre>
<p>note 1: you can replace <strong>-username</strong>  with <strong>-u</strong> in my code then you should type :  </p>
<blockquote>
<p>python ssh.py --username (and the other options)</p>
</blockquote>
<p>note2: you used (192.168.1.1, 192.168.1.2) and (uname -a) because <strong>there is a space</strong> in ips and (<strong>-a</strong>) in (uname -a) your program has issue to fix it you have 2 way :  </p>
<p>1) remove space use (uname-a) or (192.168.1.1,192.168.1.2)<br/>
2) use quotes ('192.168.1.1, 192.168.1.2') instead of (192.168.1.1, 192.168.1.2)</p>
</div>
<div class="post-text" itemprop="text">
<p>There are several problems with this code, and with how you've used it.</p>
<ol>
<li><p>The long option should be specified with two hyphens:</p>
<pre><code>parser.add_argument('-u', '--username', help='The Username for authentication.')
</code></pre></li>
<li><p>Each option only populates one value in <code>args</code>, so you shouldn't try to unpack two.  Try this instead:</p>
<pre><code>username = args.username
</code></pre></li>
<li><p>Values are separated on the command line by spaces, not commas, so use this:</p>
<pre><code>--hostlist 192.168.1.1 192.168.1.2
</code></pre></li>
<li><p>Values on the command line that have spaces in them will be split on whitespace and interpreted as separate values ("words").  To force them to be interpreted as separate words, enclose them in quotes:</p>
<pre><code>--commands 'uname -a' 'whoami'
</code></pre>
<p>Alternatively, you can escape the spaces with backslashes:</p>
<pre><code>--commands uname\ -a whoami
</code></pre></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Thanks everyone! Now it seems to be working correctly: </p>
<pre><code>    parser = argparse.ArgumentParser()
    parser.add_argument('-u', '--username', action='store', dest='username', help='The ssh username.')
    parser.add_argument('-p', '--password', action='store', dest='password', help='The ssh password.')
    parser.add_argument('-l', '--hostlist', nargs='+',action='store', dest='hostlist', help='List of devices to interact with.')
    parser.add_argument('-c', '--commands', nargs='+',action='store', dest='commands', help='An exact list of commands to run')

    args = parser.parse_args()
    username = args.username
    password = args.password
    hostlist = args.hostlist
    commands = args.commands
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I guess you may find your answer in the <a href="https://pymotw.com/2/argparse/" rel="nofollow noreferrer">MOTW article</a> dedicated to <code>argparse</code>.</p>
<p>I am not very experienced using this module, but from what I understand you should be using something like:</p>
<pre><code>parser.add_argument('-u', '-username',
                    action='store',         # tell to store a value
                    dest='username',        # use `username` to access value
                    help='The Username for authentication.')

args = parser.parse_args()
username = args.username                    # u, username = ... should raise unpacking error
                                            # as pointed out by hpaulj in comment
</code></pre>
</div>
<span class="comment-copy">I expect <code>u,username = args.username</code> to raise an <code>unpacking</code> error.  <code>args.username</code> should be <code>None</code> or a single string.  But you provide 2 variables to be filled, <code>u</code> and <code>username</code>.  It feels like you are having problems with basic Python, not just <code>argparse</code>.</span>
