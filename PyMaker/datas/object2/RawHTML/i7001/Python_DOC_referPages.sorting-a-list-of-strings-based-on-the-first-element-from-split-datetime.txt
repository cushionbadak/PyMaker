<div class="post-text" itemprop="text">
<p>I have a long list of strings, separated by commas (basically, csv files read line by line to strings, not performing a split on the separator):</p>
<pre class="lang-py prettyprint-override"><code>lines[0] = "2017-08-01 13:45:58,mytext,mytext2,mytext3,etc"
lines[1] = "2017-08-01 15:45:58,mytextx,mytext2x,mytext3x,etcx"
lines[2] = "2017-08-01 19:45:58,mytexty,mytext2y,mytext3y,etcy"
lines[3] = "..."
</code></pre>
<p>From <a href="https://stackoverflow.com/questions/17627531/sort-list-of-date-strings">this</a> post I know that the following code should work if my lines would only consist of datetimes:</p>
<pre class="lang-py prettyprint-override"><code>lines_sorted = sorted(lines, key=lambda x: datetime.datetime.strptime(lines, '%Y-%m-%d %H:%M:%S'))
</code></pre>
<p>I thought I could use <code>partition</code> to extract tuples from all lines in files, where the first element contains the datetimepart:</p>
<pre class="lang-py prettyprint-override"><code>for unsortedFile in glob('*.txt'):
    with open(unsortedFile, 'r') as file:
        lines = [line.rstrip('\n').partition(',') for line in file]
        lines_sorted = sorted(lines, key=lambda x: datetime.datetime.strptime(lines[0], '%Y-%m-%d %H:%M:%S'))
</code></pre>
<p>..but of course, this does not work "TypeError: list indices must be integers or slices, not str" because <code>lines[0]</code> is not referencing the first tuple but the first item in lines-list. I also tried using <code>.strptime(lines[lambda][0], '%Y-%m-%d %H:%M:%S'))</code> but it is neither working.</p>
<p>I know I am doing something wrong.. any help is much appreciated.</p>
<p>[edit]
Here's the answer, from friendly comments below:</p>
<pre class="lang-py prettyprint-override"><code>for unsortedFile in glob('*.txt'):
    with open(unsortedFile, 'r', encoding="utf8") as file: #read each unsorted file to lines (list)
        lines = [line.rstrip('\n') for line in file]
        lines_sorted = sorted(lines,
                    key=lambda x: x.split(',', maxsplit=1)[0]
                    )
        lines.clear()
    with open(unsortedFile,'w', encoding="utf8") as file: #overwrite file
        for line in lines_sorted:
            file.write(line + '\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>basically the <code>key</code> argument of the <code>sorted</code> function must be a function which takes a list item and returns a comparable object.<br/>
<code>sorted</code> will sort the list according to the image of the list items by this function, not the items themselves.  </p>
<p>Here is an example, which is a mix of the suggested solutions :</p>
<pre><code>lines_sorted = sorted(lines,
                      key=lambda x: x.split(',', maxsplit=1)[0]
                     )
</code></pre>
<p>With this code, every item which has the same date will be considered equal by <code>sorted</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just take the first element of the <code>split</code>:</p>
<pre><code>lines_sorted = sorted(
    lines, 
    key=lambda x: datetime.datetime.strptime(x.split(",")[0], 
                                            '%Y-%m-%d %H:%M:%S'
))
</code></pre>
<p>This way you are just taking the datetime for the sorting while keeping the original data.</p>
</div>
<span class="comment-copy">Replace <code>lines[0]</code> with <code>x[0]</code>.</span>
<span class="comment-copy">should be <code>x.split(',')[0]</code> (or <code>x.partition(',')[0]</code>)</span>
<span class="comment-copy">Given the format of your strings and dates, you don't really need to convert to <code>datetime</code> objects to sort them; regular string ordering will give you the same result, so you can drop the <code>key</code> parameter in <code>sort</code>.</span>
<span class="comment-copy">Thank you guys, all comments were very useful! I will update the post</span>
<span class="comment-copy">Also <a href="https://docs.python.org/3/library/stdtypes.html#str.partition" rel="nofollow noreferrer"><code>partition</code></a> will give you tuples like <code>("2017-08-01 13:45:58", ",", "mytext,mytext2,mytext3,etc")</code>; you sure you don't want <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer"><code>split</code></a> with <code>maxsplit=1</code> (which would give you <code>("2017-08-01 13:45:58", "mytext,mytext2,mytext3,etc")</code>)?</span>
<span class="comment-copy">Thank you, User9123, this really looks like the fasted approach (without datetimeconversion and using maxsplit=1 instead of partition. I added yours as the right answer, although everyone that commented contributed - thanks to all for the great help!</span>
