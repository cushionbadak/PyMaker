<div class="post-text" itemprop="text">
<p>I am trying to run a <code>bash</code> while loop inside a <code>Python3.6</code> script. What I have tried so far is:</p>
<pre><code>subprocess.run(args=['while [ &lt;condition&gt; ]; do &lt;command&gt; done;'])
</code></pre>
<p>I get the following error:</p>
<blockquote>
<p>FileNotFoundError: [Errno 2] No such file or directory</p>
</blockquote>
<p>Is there a way to run such a while loop inside <code>Python</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>The part that's tripping you up is providing the args as a list.  From the <a href="https://docs.python.org/3/library/subprocess.html#replacing-functions-from-the-popen2-module" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>If the cmd argument to popen2 functions is a string, the command is executed through /bin/sh. If it is a list, the command is directly executed.</p>
</blockquote>
<p>This seems to do what you want:</p>
<pre><code>subprocess.run('i=0; while [ $i -lt 3 ]; do i=`expr $i + 1`; echo $i; done', shell=True)
</code></pre>
<p>Notice it's specified as a string instead of a list.</p>
</div>
<span class="comment-copy">Welcome to SO: Please take the <a href="https://stackoverflow.com/tour">tour</a> and read with attention <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>. Show us your code that we can help you.</span>
<span class="comment-copy">This is missing a <a href="https://docs.python.org/3/library/subprocess.html#subprocess.run" rel="nofollow noreferrer"><code>shell=True</code></a> keyword argument. As is, you are trying to execute a binary with the name of the passed in string`. And note that I have never seen any need for this.</span>
<span class="comment-copy"><code>while</code> is no program, it is a bash builtin command. Try <code>bash -c "while ..."</code></span>
<span class="comment-copy">Thanx @dhke that worked.</span>
<span class="comment-copy">The argument you should pass is <code>['/bin/bash', '-c', ' .. your code ..']</code>. That way you can control stdout and stderr if you need.</span>
