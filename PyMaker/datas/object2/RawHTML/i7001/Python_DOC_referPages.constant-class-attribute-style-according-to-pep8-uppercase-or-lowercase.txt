<div class="post-text" itemprop="text">
<p>I really like to follow the standard coding style, but can't find an answer on this.</p>
<pre><code>class Card:
    """Card class representing a playing card."""
    RANKS = (None, 'Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10',
             'Jack', 'Queen', 'King')
    SUITS = ('Clubs', 'Spades', 'Diamonds', 'Hearts')

    def __init__(self, rank, suit):
        self.rank = rank
        self.suit = suit

    def __str__(self):
        return f"{Card.RANKS[self.rank]} of {Card.SUITS[self.suit]}"


c = Card(1, 1)
print(c)
</code></pre>
<p>Should I write constants in class attributes all_lower_case or ALL_UPPER_CASE?
PEP8 just says that constants should be ALL_UPPER_CASE at the module level. What about classes?</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://www.python.org/dev/peps/pep-0008/#constants" rel="noreferrer">PEP8</a> makes it clear that constants should be upper-case:</p>
<blockquote>
<h2>Constants</h2>
<p>Constants are usually defined on a module level and written in all capital letters with underscores separating words. Examples include MAX_OVERFLOW and TOTAL.</p>
</blockquote>
<p>Note that it just says that these are <em>usually</em> defined on a module level. But if your values should be treated as constants then make them uppercase - even if they are defined on a class level.</p>
</div>
<div class="post-text" itemprop="text">
<p>Why not extract those outside of the class in the module like this:</p>
<pre><code>from enum import Enum

class Suit(Enum):
    CLUBS = 1
    SPADES = 2
    DIAMONDS = 3
    HEARTS = 4
</code></pre>
<p>Then you could use it like:</p>
<pre><code>Card(Rank.1, Suit.SPADES)
</code></pre>
<p>Also according to the following Python documentation it's ALL_CAPS, even inside Class. This also makes sense to me.</p>
<p><a href="https://docs.python.org/3/library/enum.html#creating-an-enum" rel="nofollow noreferrer">More info and examples.</a></p>
</div>
<span class="comment-copy">Nice idea with the <code>Enum</code> - I really don't know why I tend to avoid / forget about them.</span>
