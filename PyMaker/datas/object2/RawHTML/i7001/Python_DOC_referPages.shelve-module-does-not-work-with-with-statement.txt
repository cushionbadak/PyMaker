<div class="post-text" itemprop="text">
<p>I'm trying to use the shelve module in python, and I'm trying to combine it with the "with" statement, but when trying to do that I get the following error:</p>
<pre><code>with shelve.open('shelve', 'c') as shlv_file:
    shlv_file['title']    = 'The main title of my app'
    shlv_file['datatype'] = 'data type int32'
    shlv_file['content']  = 'Lorem ipsum'
    shlv_file['refs']     = '&lt;htppsa: asda.com&gt;'

print(shlv_file)
</code></pre>
<p>The following error is raised:</p>
<pre><code> with shelve.open('shelve', 'c') as shlv_file:
AttributeError: DbfilenameShelf instance has no attribute '__exit__'
</code></pre>
<p>Although doing this way:</p>
<pre><code>shlv_file = shelve.open('data/shelve', 'c')
shlv_file['title']    = 'The main title of my app'
shlv_file['datatype'] = 'data type int32'
shlv_file['content']  = 'Lorem ipsum'
shlv_file['refs']     = '&lt;htppsa: asda.com&gt;'
shlv_file.close()

shlv_file = shelve.open('data/shelve', 'c')
shlv_file['new_filed'] = 'bla bla bla'
print(shlv_file)
</code></pre>
<p>No error is raised, and the output is the one that is expected. What is the problem with the first syntax ? I was watching a python course in which the instructor uses the first version without any problems.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to understand what the purpose of <code>with</code> is used for. It is basically used to automatically handle setup and cleanup of objects it is called with, provided <em>those objects support the use of such setup and cleanup functions</em>. In particular, the object for setup is the <code>__enter__</code> function, and the teardown equivalent is the <code>__exit__</code> function. Here's an example:</p>
<pre><code>In [355]: class Foo():
     ...:     def __enter__(self):
     ...:         print("Start!")
     ...:         return self
     ...:     def __exit__(self, type, value, traceback):
     ...:         print("End!")
     ...:         
</code></pre>
<p>And, now instantiate an object of <code>Foo</code> with <code>with...as</code>:</p>
<pre><code>In [356]: with Foo() as x:
     ...:     print(x)
     ...:     
Start!
&lt;__main__.Foo object at 0x1097f5da0&gt;
End!
</code></pre>
<p>As you see, <code>with...as</code> will compulsorily call these setup/teardown methods, and if they're missing, an <code>AttributeError</code> will be raised because an attempt to call  a non-existent instance method is made. </p>
<p>It's the same with your <code>shelve</code> object - it doesn't have an <code>__exit__</code> method defined in its class, so using <code>with</code> will not work.</p>
<hr/>
<p>According to the <a href="https://docs.python.org/3/library/shelve.html#shelve.Shelf" rel="nofollow noreferrer">documentation</a>, support for the context manager was added from version 3.4 and onwards. If the context manager does not work, that would mean your version is older.</p>
</div>
<span class="comment-copy">What's your version of Python? According to <a href="https://docs.python.org/3/library/shelve.html#shelve.Shelf" rel="nofollow noreferrer">the documentation</a>, context manager support (the <code>with</code> block) was added in 3.4.</span>
<span class="comment-copy">Well I understand your explanation. What Im still confused is that why it seems to work fine on the instructors tutorial that Im watching and it doesnt work on my machine ?</span>
<span class="comment-copy">+1 for the explanation, but <code>shelve</code> does support a context manager in recent versions (3.4+), which is why Pj- may have seen it in a tutorial.</span>
<span class="comment-copy">@PauloAlmeida Thanks for noting this. I do not know about <code>shelve</code>, so I just assumed it wasn't implemented.</span>
<span class="comment-copy">@Pj- As Paulo pointed out, its to do with your python version.</span>
<span class="comment-copy">I think my python version is not up to date. I will try that @PauloAlmeida</span>
