<div class="post-text" itemprop="text">
<p>A string contains digits split by '-' or '_', how can I get every digits in the string? </p>
<pre><code>import re
pattern = re.compile(r'\w(\d+)(?:(?:-|_)(\d+))*\w')

str='a1-2-3_4bc2-3_4d'
m = re.findall(pattern, str)
print(m)
</code></pre>
<p>I expect the output is [(1,2,3,4),(2,3,4)], but it gives [('1', '4'), ('2', '4')]</p>
</div>
<div class="post-text" itemprop="text">
<p>You're already using findall, so you can simplify your regex to this:</p>
<pre><code>(\d+)(?:-|_)?
</code></pre>
<p>In your full example you'll get</p>
<pre><code>import re
pattern = re.compile(r'(\d+)(?:-|_)?')

str='1-2-3_4'
m = re.findall(pattern, str)
print(m)
</code></pre>
<p>This returns</p>
<pre><code>['1', '2', '3', '4']
</code></pre>
<p>Now, if you are going to throw letters in the mix, you might as well go super simple and extract all the numbers:</p>
<pre><code>import re
pattern = re.compile(r'(\d+)')

str='1-2-3_4b5'
m = re.findall(pattern, str)
print(m)
</code></pre>
<p>That will give you</p>
<pre><code>['1', '2', '3', '4', '5']
</code></pre>
<p>But obviously, that's a different match than taking - and _ into account</p>
</div>
<div class="post-text" itemprop="text">
<p>Edit: this answer is based on what was posted.</p>
<p>you almost got it, try <code>(\d+)(?:(?:-|_)(\d+))*?</code></p>
<pre><code>*?      # (zero or more)(lazy)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's unlikely this can be done in a single step, which requires capturing variable numbers of group at the same time; You could try this instead:</p>
<pre><code>import re
s='a1-2-3_4bc2-3_4d'

[re.findall(r'\d+', g.group()) for g in re.finditer(r'[\d_-]+', s)]
# [['1', '2', '3', '4'], ['2', '3', '4']]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It is still not absolutely clear what the variations of the input string might be, but, given the sample string from the question, you can extract the digits this way:</p>
<ul>
<li>split by two consecutive non-digit characters (<code>\D{2}</code> - where <code>\D</code> would match a non-digit character) using <a href="https://docs.python.org/3/library/re.html#re.split" rel="nofollow noreferrer"><code>re.split()</code></a></li>
<li>extract numbers from every match</li>
</ul>
<p>Demo:</p>
<pre><code>In [1]: import re

In [2]: s = 'a1-2-3_4bc2-3_4d'

In [3]: [re.findall(r"\d+", item) for item in re.split(r"\D{2}", s)]
Out[3]: [['1', '2', '3', '4'], ['2', '3', '4']]
</code></pre>
</div>
<span class="comment-copy">Why not just split on <code>[-_]</code> or <code>re.findall('\d+', str)</code>?</span>
<span class="comment-copy">My real question is more complex, I just want to find a method to get all elements in a group</span>
<span class="comment-copy">Even with your updated version. <code>re.findall('\d+', str)</code> still works. You need to update a version that reveals your real question.</span>
<span class="comment-copy">I have updated the question, do you have a solution?</span>
<span class="comment-copy">Thanks, but if pattern is \w(\d+)(?:(?:-|_)(\d+))*?\w'), str is a1-2-3_4b, your solution returns 1,3, but i still want 1,2,3,4</span>
<span class="comment-copy">then maybe your should edit your question and clarify it more.</span>
