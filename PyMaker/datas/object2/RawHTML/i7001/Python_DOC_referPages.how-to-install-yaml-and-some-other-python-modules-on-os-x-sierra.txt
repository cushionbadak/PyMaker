<div class="post-text" itemprop="text">
<p>I'm having a hard time setting up python packages. EasyInstall from <a href="http://pypi.python.org/pypi/setuptools" rel="noreferrer">SetupTools</a> is supposed to help that, but they don't have an executable for Python 2.6.</p>
<p>For instance to install Mechanize, I'm just supposed to put the Mechanize folder in C:\Python24\Lib\site-packages according to INSTALL.txt, but runnning the tests does not work. Can someone help shed some light on this? Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://stackoverflow.com/a/1449704/1438393">accepted answer</a> is outdated. So first, <a href="https://pypi.python.org/pypi/pip" rel="noreferrer"><code>pip</code></a> is preferred over <code>easy_install</code>, (<a href="https://stackoverflow.com/questions/3220404/why-use-pip-over-easy-install">Why use pip over easy_install?</a>). Then follow these steps to install <code>pip</code> on Windows, it's quite easy.</p>
<ol>
<li><p>Install <a href="https://pypi.python.org/pypi/setuptools#installation-instructions" rel="noreferrer"><code>setuptools</code></a>:</p>
<pre><code>curl https://bootstrap.pypa.io/ez_setup.py | python
</code></pre></li>
<li><p>Install <a href="http://www.pip-installer.org/en/latest/installing.html" rel="noreferrer"><code>pip</code></a>:</p>
<pre><code>curl https://bootstrap.pypa.io/get-pip.py | python
</code></pre></li>
<li><p>Optionally, you can add the path to your environment so that you can use <code>pip</code> anywhere. It's somewhere like <code>C:\Python33\Scripts</code>.</p></li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>Newer versions of Python for Windows come with the <em>pip</em> package manager. <a href="https://pip.pypa.io/en/latest/installing/" rel="noreferrer">(source)</a></p>
<blockquote>
<p>pip is already installed if you're using Python 2 &gt;=2.7.9 or Python 3 &gt;=3.4</p>
</blockquote>
<p>Use that to install packages:</p>
<pre><code>cd C:\Python\Scripts\
pip.exe install &lt;package-name&gt;
</code></pre>
<p>So in your case it'd be:</p>
<pre><code>pip.exe install mechanize
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="http://web.archive.org/web/20120625104458/http://blog.sadphaeton.com/2009/01/20/python-development-windows-part-2-installing-easyinstallcould-be-easier.html" rel="noreferrer">This</a> is a good tutorial on how to get <code>easy_install</code> on windows. The short answer: add <code>C:\Python26\Scripts</code> (or whatever python you have installed) to your PATH. </p>
</div>
<div class="post-text" itemprop="text">
<p>You don't need the executable for setuptools.
You can download the source code, unpack it, traverse to the downloaded directory  and run  <code>python setup.py install</code> in the command prompt</p>
</div>
<div class="post-text" itemprop="text">
<p>Starting with Python 2.7, pip is included by default. Simply download your desired package via</p>
<pre><code>python -m pip install [package-name]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As I <a href="https://stackoverflow.com/questions/11453866/python-modules-names-vs-the-name-of-the-actual-package">wrote elsewhere</a></p>
<blockquote>
<p>Packaging in Python is dire. The root cause is that the language ships without a package manager. </p>
<p>Fortunately, there is one package manager for Python, called <a href="http://www.pip-installer.org/en/latest/index.html" rel="nofollow noreferrer">Pip</a>. Pip is inspired by Ruby's Gem, but lacks some features. Ironically, Pip itself is <a href="https://stackoverflow.com/questions/4750806/how-to-install-pip-on-windows">complicated to install</a>. Installation on the popular 64-bit Windows demands building and installing two packages from source. This is a big ask for anyone new to programming.  </p>
</blockquote>
<hr/>
<p>So the right thing to do is to install pip. However if you can't be bothered, Christoph Gohlke provides binaries for popular Python packages for all Windows platforms <a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/" rel="nofollow noreferrer">http://www.lfd.uci.edu/~gohlke/pythonlibs/</a></p>
<p>In fact, building some Python packages requires a C compiler (eg. mingw32) and library headers for the dependencies. This can be a nightmare on Windows, so remember the name Christoph Gohlke.</p>
</div>
<div class="post-text" itemprop="text">
<p>I had problems in installing packages on Windows. Found the solution. It works in Windows7+. Mainly anything with Windows Powershell should be able to make it work. <a href="http://cli.learncodethehardway.org/book/" rel="nofollow noreferrer">This</a> can help you get started with it.</p>
<ul>
<li>Firstly, you'll need to add python installation to your PATH variable. <a href="https://superuser.com/questions/608892/changing-windows-7-path-avriable">This</a> should help.</li>
<li>You need to download the package in zip format that you are trying to install and unzip it. If it is some odd zip format use 7Zip and it should be extracted.</li>
<li>Navigate to the directory extracted with setup.py using Windows Powershell (Use link for it if you have problems)</li>
<li>Run the command <code>python setup.py install</code></li>
</ul>
<p>That worked for me when nothing else was making any sense. I use Python 2.7 but the documentation suggests that same would work for Python 3.x also.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can also just download and run ez_setup.py, though the SetupTools documentation no longer suggests this.  Worked fine for me as recently as 2 weeks ago.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>PS D:\simcut&gt;  C:\Python27\Scripts\pip.exe install networkx
Collecting networkx
c:\python27\lib\site-packages\pip\_vendor\requests\packages\urllib3\util\ssl_.py:318: SNIMissingWarning: An HTTPS reques
t has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may caus
e the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer ve
rsion of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#snimissi
ngwarning.
  SNIMissingWarning
c:\python27\lib\site-packages\pip\_vendor\requests\packages\urllib3\util\ssl_.py:122: InsecurePlatformWarning: A true SS
LContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL con
nections to fail. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.
readthedocs.io/en/latest/security.html#insecureplatformwarning.
  InsecurePlatformWarning
  Downloading networkx-1.11-py2.py3-none-any.whl (1.3MB)
    100% |################################| 1.3MB 664kB/s
Collecting decorator&gt;=3.4.0 (from networkx)
  Downloading decorator-4.0.11-py2.py3-none-any.whl
Installing collected packages: decorator, networkx
Successfully installed decorator-4.0.11 networkx-1.11
c:\python27\lib\site-packages\pip\_vendor\requests\packages\urllib3\util\ssl_.py:122: InsecurePlatformWarning: A true SSLContext object i
s not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade
to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.io/en/latest/security.html#insecureplat
formwarning.
  InsecurePlatformWarning
</code></pre>
<p>Or just put the directory to your pip executable in your system path.</p>
</div>
<div class="post-text" itemprop="text">
<p>As mentioned by Blauhirn after 2.7 pip is preinstalled.  If it is not working for you it might need to be added to path. </p>
<p>However if you run Windows 10 you no longer have to open a terminal to install a module.  The same goes for opening Python as well.</p>
<p>You can type directly into the search menu <code>pip install mechanize</code>, select command and it will install:</p>
<p><a href="https://i.stack.imgur.com/XmtyA.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/XmtyA.png"/></a></p>
<p>If anything goes wrong however it may close before you can read the error but still it's a useful shortcut.  </p>
</div>
<span class="comment-copy">As of March, 2014, the <a href="https://docs.python.org/3/whatsnew/3.4.html#whatsnew-pep-453" rel="nofollow noreferrer">pip package manager is included with Python 3.4 on all platforms, including Windows</a>. So ensuring you are running Python 3.4 might be a good option.</span>
<span class="comment-copy">install python 2.7.10  or 3.4 above which has by default pip in it.Then use python -m pip install Django in cmd and so on</span>
<span class="comment-copy">of all the suggestions, this is the only one that worked for me. My environment - Python 3.3.1 , Windows 7 64bit, x64 PC. if possible, please upvote this, saves ppl a lot of trouble.</span>
<span class="comment-copy">the above worked for me, but the second curl with https gave a warning about the ssl certificate expired.  had to use --insecure on the curl command line</span>
<span class="comment-copy">1st Answer is still valid, though PIP is superior IMO</span>
<span class="comment-copy">The above worked for me (Windows7 x64, python 2.7) but to install pip I had to follow the instructions @ <a href="https://pip.pypa.io/en/latest/installing.html" rel="nofollow noreferrer">pip.pypa.io/en/latest/installing.html</a></span>
<span class="comment-copy">install python 2.7.10 which has by default pip in it.Then use python -m pip install Django in cmd</span>
<span class="comment-copy">+1 because this explicitly says WHERE to type "pip install &lt;modulename&gt;" most other guides, here and elsewhere, almost takes for granted that I would know this.</span>
<span class="comment-copy">as said this is a great answer! It of course assumes python is installed in c drive. For people using PowerShell, in case you install python to a directory whose path has a space in it, use cd ("path") to change the directory.</span>
<span class="comment-copy">This worked great on Windows 10, even with Python 2.7. Thanks for Windows-oriented answer that didn't make my eyes glaze over.</span>
<span class="comment-copy">For some Windows installations, <code>pip</code> is located as <code>C:\Users\[you]\AppData\Local\Programs\Python\Python[XX]\Scripts\pip</code></span>
<span class="comment-copy">Or <code>python -m pip install &lt;module_name&gt;</code>?</span>
<span class="comment-copy">Step 1 - Get python recognized as a command Step 2 - Run the setup.py file</span>
<span class="comment-copy">this answer is outdated. please change it.</span>
<span class="comment-copy">When installing Python 3.7 on Windows, there is a nice option to add that path to the PATH environment variable.</span>
<span class="comment-copy">Thanks for your response! Where do I unpack it and where would I run that command?</span>
<span class="comment-copy">If you downloaded the tar file, just unpack it with a program like WinRAR. Once you've done that, open up the command prompt and navigate to the folder where it was unpacked (You'll know you're at the right spot if you see a <code>setup.py</code> file). From there you can run <code>python setup.py install</code> and it will install it for you.</span>
<span class="comment-copy">what does -m refer to?</span>
<span class="comment-copy">@delinco <code>m **module-name**: Searches **sys.path** for the named module and runs the corresponding **.py** file as a script.</code>.</span>
