<div class="post-text" itemprop="text">
<p>I have a JSON file that has something like</p>
<pre><code>{
  "a": "1",
  "b": "2",
  "c": "3"
}
</code></pre>
<p>and I want to format this string based on that JSON</p>
<pre><code>"Blah {a} Blah Blah {b} {c}"
</code></pre>
<p>to output</p>
<pre><code>"Blah 1 Blah Blah 2 3"
</code></pre>
<p>I haven't tried anything and i couldn't find anything by Googling it (<code>Python how to format string based on json</code>), most results were just to pretty print JSON.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3.6/library/stdtypes.html#str.format" rel="nofollow noreferrer"><code>str.format</code></a> to easily accomplish this. Assuming you've loaded you JSON data in memory as a dictionary:</p>
<pre><code>&gt;&gt;&gt; data = {
  "a": "1",
  "b": "2",
  "c": "3"
}
&gt;&gt;&gt; "Blah {a} Blah Blah {b} {c}".format(**data)
'Blah 1 Blah Blah 2 3'
</code></pre>
<p>if you're not sure how to load your JSON string into memory, use <a href="https://docs.python.org/3/library/json.html#json.loads" rel="nofollow noreferrer"><code>json.loads</code></a>:</p>
<pre><code>&gt;&gt;&gt; from json import loads
&gt;&gt;&gt; data = loads('{ "a": "1", "b": "2", "c": "3" }')
&gt;&gt;&gt; data
{'a': '1', 'b': '2', 'c': '3'}
</code></pre>
<p>So, put together, the complete script would be:</p>
<pre><code>from json import loads
data = loads('{ "a": "1", "b": "2", "c": "3" }')
print("Blah {a} Blah Blah {b} {c}".format(**data))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>if you have the JSON array as a variable in your code like below</p>
<pre><code>data = {
  "a": "1",
  "b": "2",
  "c": "3"
}
</code></pre>
<p>You can then call those individual items based on the key name in the key/value pairs as defined in the data variable.</p>
<p>It can then be as simple as </p>
<pre><code>new_string = "Blah " + str(data["a"]) + " blah blah " + str(data["b"]) + " " + str(data["c"])
</code></pre>
<p>The variable new_string will then be "Blah 1 blah blah 2 3"</p>
<p>I used the str() method just in case what was in the JSON array is not a string already.</p>
<p>If you are trying to be more programmatic about it, and the string will be generated many times with different data sets, you could do it similar to this, but with variable names that are meaningful to you and your project and made into a function.</p>
<pre><code>data = {"a": "1", "b": "2", "c": "3"}
var_0 = str(data["a"])
var_1 = str(data["b"])
var_2 = str(data["c"])
new_string = "Blah " + var_0 + " blah blah " + var_1 + var_2
</code></pre>
<p>Then from there you can do whatever you need with the new_string</p>
</div>
<span class="comment-copy">Presumably this is actually a dict, not a json string.</span>
<span class="comment-copy">@Daniel Roseman it starts off as a json string, then made into a dict.</span>
<span class="comment-copy">The problem with this is that the string that i will be inputting will be in different orders and have different keywords. Basically my input string will be changing.</span>
<span class="comment-copy">So are you going to be using the exact same JSON data to make lots of different strings? Or lots of different strings and lots of different data?</span>
<span class="comment-copy">@AL_1 unless there is consistency across all of your strings and data sets you are going to probably need to write out unique cases for each on how they are handled unfortunately.</span>
<span class="comment-copy">My strings will use the same keywords, but the order and combinations of the keywords will be different in each string.</span>
