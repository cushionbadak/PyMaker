<div class="post-text" itemprop="text">
<p>i'm not good at english and i'm noob at python but i have tiny question about python map</p>
<p>are they assigned relation each key and value?
if i created some object like this</p>
<pre><code>my_map = {}
my_map['id'] = someObject()
</code></pre>
<p>is someObject not Dangling Pointer?
is not gonna delete by python interpreter?</p>
</div>
<div class="post-text" itemprop="text">
<p>Formally:</p>
<p><code>my_map['id']</code> is a <a href="https://docs.python.org/3/reference/expressions.html#subscriptions" rel="nofollow noreferrer">subscription</a></p>
<p>then you have:</p>
<blockquote>
<p>Assignment statements are used to (re)bind names to values and to
  modify attributes or items of mutable objects:</p>
<p>...</p>
<p>If the primary is a mapping object (such as a dictionary), the
  subscript must have a type compatible with the mappingâ€™s key type, and
  <strong>the mapping is then asked to create a key/datum pair which maps the
  <em>subscript</em> to the assigned object</strong>. This can either replace an existing
  key/value pair with the same key value, or insert a new key/value pair
  (if no key with the same value existed).</p>
</blockquote>
<p>from here <a href="https://docs.python.org/3/reference/simple_stmts.html#assignment-statements" rel="nofollow noreferrer">Assignment statements</a></p>
<p>So basically you are binding/mapping the recently created object to the <em>subscript</em> and of course, the newly created object can be referenced by <code>my_map['id']</code> so the Python garbage collector can't touch it (reclaim it) and it is not a "dangling pointer" or to be more precise an object without any reference to it.</p>
<p>Side note: a <a href="https://en.wikipedia.org/wiki/Dangling_pointer" rel="nofollow noreferrer">dangling pointer</a> is not a term used to refer to an object without reference (how appears you were using the term) but to a reference to a nonvalid object (and this is impossible in Python).</p>
</div>
<div class="post-text" itemprop="text">
<p>There is no pointer in Python. There is name bound to object in Python. </p>
</div>
<span class="comment-copy">No, it is not a dangling pointer because it is an item in a dictionary.</span>
<span class="comment-copy">thank you for your help ^^</span>
