<div class="post-text" itemprop="text">
<pre><code>code="""
[--]
{start}
\ok\
"waw"
the-end
"""
for i in code.split('\n') :
    print i

Result: 

[--]
{start}
\ok"waw"
the-end
</code></pre>
<p>I don't have access the the code as it's typed by user. the '\' at the end of \ok\ give me the wrong result. How can i split() correctly ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is, as was mentioned in the comments, that <code>\\</code> in a string literal followed by a newline will escape that newline, so in fact the value of <code>code</code> is already</p>
<pre><code>[--]
{start}
\ok"waw"
the-end
</code></pre>
<p>You can refer to <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow noreferrer">this</a> for some more info on string literals in Python.</p>
<p>with no newline between <code>ok</code> and <code>"waw"</code>. The problem actually doesn't lie with your code at all, but with your sample input. You say you don't have access to the 'code' as the user will modify it - I can only assume you don't mean the user modifies the program to give input. My suggestion for how to take input is to have the user supply a separate file. This way, the string will be interpreted as a stream of characters and that alone, and Python won't try to do any escaping. For simplicity, I have hardcoded the filename, but it would probably also be a good idea eventually to make this flexible (take input from stdin, let the user supply the filename, etc..).</p>
<p>The file <code>input.txt</code> contains:</p>
<pre><code>[--]
{start}
\ok\
"waw"
the-end
</code></pre>
<p>The code:</p>
<pre><code>import sys
with open("input.txt", "r") as in_file:
    for line in in_file:
        sys.stdout.write(line)
</code></pre>
<p>As expected, the code ouputs</p>
<pre><code>[--]
{start}
\ok\
"waw"
the-end
</code></pre>
<p>Presumably you want to do some more with the lines, as this just replicated the input.</p>
</div>
<span class="comment-copy"><code>\n</code> is used for newline but when ' \' is encountered after ok it is escaped and newline is missed</span>
<span class="comment-copy">Do you mean the user modifies your actual script to give input?</span>
<span class="comment-copy">Use <code>os.linesep</code> instead of <code>\n</code></span>
<span class="comment-copy">Yes, but how can i do to fix it ? the code variable is coming from other end let say from the other part of the world, where he can type anything through the UI . So my only job is to make it as a list of whatever inside the variable.</span>
<span class="comment-copy">@0decimal0 i tried os.linesep but still not working. as "for i in code.split(os.linesep)" . any idea ?</span>
