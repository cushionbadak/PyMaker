<div class="post-text" itemprop="text">
<p>I have a list of lists that looks like this:</p>
<pre><code>lol=[['"buy":17'], ['"hold":18'], ['"sell":3']]
</code></pre>
<p>Is there any simple way to convert the list of lists into 2 independent lists like this?:</p>
<pre><code>list1=["buy","hold","sell"]
list2=[17,18,3]
</code></pre>
<p>First I tried a replace over the list:</p>
<pre><code>lol.replace('[','').replace(']','')
</code></pre>
<p>But outputed that  <code>'list' object has no attribute 'replace'</code></p>
<p>Then I thought I could use regular expressions over the <code>lol</code> to at least obtaining the numbers in an independent list with the following code: </p>
<pre><code>re.findall('\d{1,2}',lol.string)
</code></pre>
<p>but returned outputed that it <code>expected string or bytes-like object</code></p>
</div>
<div class="post-text" itemprop="text">
<p>You can split the strings on <code>':'</code> and then use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>ast.literal_eval</code></a> to produce the final output:</p>
<pre><code>import ast

l1, l2 = zip(*[map(ast.literal_eval, lst[0].split(':')) for lst in lol])
print(l1, l2)
# ('buy', 'hold', 'sell'), (17, 18, 3)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I'd do it like this. Not sure if it is the best way though.</p>
<pre><code>lol=[['"buy":17'], ['"hold":18'], ['"sell":3']]
list1 = list()
list2 = list()
for list_ in lol:
    list1.append(list_[0].split(':')[0])
    list2.append(list_[0].split(':')[1])
</code></pre>
<p>Output:</p>
<pre><code>list1
Out[59]: ['"buy"', '"hold"', '"sell"']

list2
Out[60]: ['17', '18', '3']
</code></pre>
</div>
<span class="comment-copy"><code>zip(*[[s.strip('"') for s in L[0].split(":")] for L in lol])</code></span>
<span class="comment-copy">Read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> along with <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a></span>
<span class="comment-copy">@inspectorG4dget That does not produce integers from the strings.</span>
<span class="comment-copy">@MosesKoledoye: fair point. This should fix it: <code>zip(*[[s.strip('"'), int(n)] for s,n in map(lambda L: L[0].split(":"), lol)])</code></span>
