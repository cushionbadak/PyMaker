<div class="post-text" itemprop="text">
<p>can someone please show me how convert only the username and the password of a link with regex ?? </p>
<p>link = '<a href="http://test.ddns.net:8000/get.php?username=9OsSVedOky&amp;password=Oz2Vmx9GuW&amp;type=list&amp;output=tr" rel="nofollow noreferrer">http://test.ddns.net:8000/get.php?username=9OsSVedOky&amp;password=Oz2Vmx9GuW&amp;type=list&amp;output=tr</a>'</p>
<p>url = '<a href="http://test.ddns.net:8000/get.php?username=[a-zA-Z]|[0-9]|[" rel="nofollow noreferrer">http://test.ddns.net:8000/get.php?username=[a-zA-Z]|[0-9]|[</a>$-<em>@.&amp;+]|&amp;password=[a-zA-Z]|[0-9]|[$-</em>@.&amp;+]|&amp;type=list&amp;output=tr'</p>
<p>urls = re.findall(url, link)`</p>
<p>sorry if i'm not using the right terms but i'm new to coding .</p>
<p>thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>Parsing a url with a regex is in general a bad idea, and especially bad when you have such a poor grasp of the syntax. If you <em>must</em> do it (and the only good reason is because you have been told to), then</p>
<pre><code>&gt;&gt;&gt; import re
&gt;&gt;&gt; rx=re.compile(r"username=(?P&lt;username&gt;[^&amp;]+).*password=(?P&lt;password&gt;[^&amp;]+)")
&gt;&gt;&gt; m = rx.search(link)
&gt;&gt;&gt; m.groupdict()['username']
'9OsSVedOky'
&gt;&gt;&gt; m.groupdict()['password']
'Oz2Vmx9GuW'
</code></pre>
<p>But I endorse Rawing's suggestion. It's much better:</p>
<pre><code>&gt;&gt;&gt; import urllib
&gt;&gt;&gt; qsp=urllib.parse.parse_qs(link.partition('?')[2])
&gt;&gt;&gt; qsp['username']
['9OsSVedOky']
&gt;&gt;&gt; qsp['password']
['Oz2Vmx9GuW']
</code></pre>
</div>
<span class="comment-copy">So new that you can't show what code you tried to do this with?</span>
<span class="comment-copy">Does it have to be regex? You could use <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="nofollow noreferrer"><code>urllib.parse.parse_qs</code></a>.</span>
<span class="comment-copy">link = '<a href="http://test.ddns.net:8000/get.php?username=9OsSVedOky&amp;password=Oz2Vmx9GuW&amp;type=list&amp;output=tr" rel="nofollow noreferrer">test.ddns.net:8000/…</a>'  url = '<a href="http://test.ddns.net:8000/get.php?username=[a-zA-Z]|[0-9]|[$-_@.&amp;+]|&amp;password=[a-zA-Z]|[0-9]|[$-_@.&amp;+]|&amp;type=list&amp;output=tr" rel="nofollow noreferrer">test.ddns.net:8000/…</a>'    urls = re.findall(url, link)     this is what i've tried</span>
<span class="comment-copy">Isn't it possible the password is before the username ?</span>
<span class="comment-copy">Yes, it is. That is one of the reasons a regex is a bad idea. Coping with that sort of variation gets complicated very quickly. On the other hand, even though the password <i>can</i> be first, it almost never is. But split the regex into two (at <code>.*</code>) and search the link twice if you like.</span>
<span class="comment-copy"><a href="https://regex101.com/r/J1YIyZ/2" rel="nofollow noreferrer">regex101.com/r/J1YIyZ/2</a> Maybe regex is just too complicated..</span>
<span class="comment-copy">I did tell you not to use one.</span>
<span class="comment-copy">So, what you are saying is, <code>urllib.parse.parse_qs()</code> does in fact do exactly what you want, but you still choose to roll your own. If this is a personal project, I suppose it's up to you, but using <code>urllib</code> tools gives more readable code, is more maintainable, and is more robust. In a code review I would tell you, as I did at the beginning, <i>don't use a regex.</i> If your grasp of regular expressions is so poor that you have to ask for help on SO with a simple problem, why are you so determined to use one when the best advice we can give you is <i>don't</i>?</span>
