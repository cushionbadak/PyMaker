<div class="post-text" itemprop="text">
<p>I'm working on this Kata in CodeWars, and I pass all but one test, but it doesn't say what the error is.  The description says to check both lists for multiplicities.  List a2 is a list of squares of list a1.  I need to check a1 for the square root of all the items in a2, and return false if the array is empty, None, or the square root isn't in a1.</p>
<p>I am hoping to get any tips you might have about not only function (make it more Pythonic), but error handling.  What am I missing?  Why is it not passing?  Thanks in advance.</p>
<pre><code>def comp(a1, a2):
    if a1 == [] or a2 == []:
        return False
    if a1 == None or a2 == None:
        return False
    pos_count = 0
    neg_count = 0
    for num in set(a2):
        if num**0.5 in set(a1):
            pos_count += 1
        else:
            neg_count += 1
    if neg_count &gt; 0:
        return False
    else:
        return True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your can improve the code you posted as a comment:</p>
<pre><code>def comp(a1, a2):
    if a1 is None or a2 is None:
        return False
    num_squared = []
    for num1 in a1:
        num_squared.append(num1**2)
    if set(a2) == set(num_squared):
        return True
    else:
        return False
</code></pre>
<p>You can build sequences using a comprehension expression. You build a list by appending squares to an empty list, but you could do it like so:</p>
<pre><code>num_squared = [num ** 2 for num in a1]
</code></pre>
<p>You create a temporary <code>set</code> object <code>set(num_squared)</code>. However, you could build a set in the same way as the list instead:</p>
<pre><code>num_squared = {num ** 2 for num in a1}
</code></pre>
<p>If you have a boolean expression and then return <code>True</code> else <code>False</code> you can replace it with the expression itself:</p>
<pre><code>return set(a2) == set(num_squared)
</code></pre>
<p>Applying all these changes you can get:</p>
<pre><code>def comp(a1, a2):
    if a1 is None or a2 is None:
        return False
    else:
        return set(a2) == {num ** 2 for num in a1}
</code></pre>
<p>edit: Just to note:</p>
<p>Empty lists evaluate as <code>False</code> in boolean expressions:</p>
<pre><code>&gt;&gt;&gt; bool([])
False
</code></pre>
<p>Also, <code>None</code> evaluates <code>False</code>:</p>
<pre><code>&gt;&gt;&gt; bool(None)
False
</code></pre>
</div>
<span class="comment-copy">For each number in a1; if number times number is not in a2; return False. If a1 numbers are exhausted return True.</span>
<span class="comment-copy">In the shell, try <code>2 * 2</code>.  the result is 4, an integer.  Now try <code>4 ** .5</code>.  The result is 2.0 a float.  When you take the square root of a number in <code>a2</code> the result may be a float with some <a href="https://docs.python.org/3/tutorial/floatingpoint.html" rel="nofollow noreferrer">floating point errors</a>.  When you try to compare that to an integer in <code>a1</code>, it may fail the comparison. That's a guess anyway for what is happening.</span>
<span class="comment-copy">Well my floating point error theory may not be correct, I just checked  integers from 0 - 100000, in <code>a1</code> and their squares in <code>a2</code> - your function worked for all those.</span>
<span class="comment-copy">If you need to test both lists for multiplicity, then if you have <code>2</code> in <code>a1</code> but no <code>4</code> in <code>a2</code> wouldn't this function still <code>return True</code>? What about 2x<code>4</code> in <code>a2</code> and only one <code>2</code> in <code>a1</code>?</span>
<span class="comment-copy">What if <code>num</code> is negative? What does <code>num ** 0.5</code> give you?</span>
<span class="comment-copy">Thank you so much, @peter-wood.  I know my code is clunky at this point, and I appreciate your guidance to streamline it!</span>
