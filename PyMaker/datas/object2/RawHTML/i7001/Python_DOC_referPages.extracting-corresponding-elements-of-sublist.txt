<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/21444338/transpose-nested-list-in-python">Transpose nested list in python</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
<li>
<a dir="ltr" href="/questions/6473679/transpose-list-of-lists">Transpose list of lists</a>
<span class="question-originals-answer-count">
                    10 answers
                </span>
</li>
</ul>
</div>
<p>It should work like</p>
<pre><code>input: list([[1,1,1],[2,2,2],[3,3,3]])
output: [[1,2,3], [1,2,3], [1,2,3]]
</code></pre>
<p>so far i have done this:</p>
<pre><code>def list(m):
    list2=[]
    for i in range(0, len(m)):
            list2.append([x[i] for x in m])
    return(list2)
</code></pre>
<p>It's not working every time..</p>
<p>For example:</p>
<p>it's working for</p>
<pre><code>input: list([[1,1,1],[2,2,2],[3,3,3]])
</code></pre>
<p>but not for</p>
<pre><code>input: list([[1,3,5],[2,4,6]])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You would usually do that in Python using the <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> function:</p>
<pre><code>inp = list([[1,1,1],[2,2,2],[3,3,3]])
output = list(map(list, zip(*inp)))
print(output)
&gt;&gt;&gt; [[1, 2, 3], [1, 2, 3], [1, 2, 3]]
</code></pre>
<p>The additional <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><code>map</code></a> call is to convert the elements returned by <code>zip</code>, that are <code>tuple</code>s, into <code>list</code>s, but if you are okay with tuples you can just do:</p>
<pre><code>inp = list([[1,1,1],[2,2,2],[3,3,3]])
output = list(zip(*inp))
print(output)
&gt;&gt;&gt; [(1, 2, 3), (1, 2, 3), (1, 2, 3)]
</code></pre>
<p>Also, the outer <code>list</code> is only necessary in Python 3, where <code>zip</code> returns a generator, but not in Python 2.</p>
</div>
<span class="comment-copy">It's not working because you're getting the length of the list instead of getting length of one of its rows, hence your code will only work for n*n lists.</span>
<span class="comment-copy">ohkkk. Got it. thank you</span>
<span class="comment-copy">Look for dupes for common Python questions.</span>
