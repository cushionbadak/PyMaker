<div class="post-text" itemprop="text">
<pre><code>fp.append(np.polyfit(train_x, train_y, 2))
f.append(np.poly1d(fp))
print(np.poly1d(fp))
threshold = fsolve(f, 50)
</code></pre>
<p>The above code finds x values for y=50 successfully. But when I try to do the same for the fitted exponential function, I can't understand how to do that.</p>
<pre><code>def f_exp(x, a, b, c):
    y = a * np.exp(-b * x) + c
    return y
popt, pcov = curve_fit(f_exp, train_x, train_y)
print(popt)
threshold = fsolve(f_exp, 50) fails with  :TypeError: f_exp() missing 3 required positional arguments: 'a', 'b', and 'c'
</code></pre>
<p>if I add *popt then I get</p>
<pre><code>threshold = fsolve(f_exp(*popt), 50) fails with: TypeError: f_exp() missing 1 required positional argument: 'c'
</code></pre>
<p>I assume that I need to add x value, but it's the value I'm trying to find... Anyway, adding some value instead of x, leads to another error:</p>
<pre><code>threshold = fsolve(f_exp(1, *popt), 50) fails with: TypeError: 'numpy.float64' object is not callable
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I guess you need to pass <code>f_exp</code> function with optimized parameters to <code>fsolve</code> (i.e. with a, b and c args set to values obtained from <code>curve_fit</code>). In order to do so you can use <a href="https://docs.python.org/3/library/functools.html" rel="nofollow noreferrer">functools.partial</a> function:</p>
<pre><code>popt, pcov = curve_fit(f_exp, train_x, train_y)
print(popt)
import functools
# preparing arguments
kwargs = dict(zip(['a', 'b', 'c'], popt))
optimized_f_exp = functools.partial(f_exp, **kwargs)
threshold = fsolve(optimized_f_exp, 50)
</code></pre>
<p>What we did here is basically made a new function <code>optimized_f_exp</code> by partially fixing <code>a</code>, <code>b</code> and <code>c</code> args of your original function to be <code>popt</code> (what's exactly why it called <em>partial</em>).</p>
</div>
<span class="comment-copy">Thanks It works. So far I haven't understood all the line of code. Will read manual.</span>
