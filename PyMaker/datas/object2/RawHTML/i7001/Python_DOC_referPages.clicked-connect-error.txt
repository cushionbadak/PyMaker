<div class="post-text" itemprop="text">
<p>I'm working on Window 10,PyCharm-Python 3.5.2</p>
<p>What I was trying to do: If PB1(push button 1) clicked, open a new window.</p>
<p>Problem: I get an error </p>
<pre><code> self.PB1.clicked.connect(self.Soft_Memory())
TypeError: argument 1 has unexpected type 'NoneType' 
</code></pre>
<p>Since I defined Soft_Memory(), I don't see why Soft_Memory() is NoneType. 
Though on the editor '.connect' gets highlighted and says cannot find reference 'connect' in  'function'</p>
<p>Codes are below. I've erased some part of the code so that its better to see. If anyone need the full code please comment.</p>
<p>SM.py</p>
<pre><code>class SM_Window(QMainWindow, QWidget):
    def __init__(self, parent=None):
        super().__init__()
        self.initU()

    def initU(self):
        self.setWindowTitle("SM_Window")
        self.setGeometry(10, 30, 850, 850)
</code></pre>
<p>UI.py</p>
<pre><code>import SM

class MainWindow(QMainWindow, QWidget):

    def __init__(self, parent=None):
        super(MainWindow, self).__init__(parent)
        self.initUI()

    def Soft_Memory(self):
        self.SF = SM.SM_Window()
        self.SF.show()

    def Buttons(self):
        #Button for SF
        self.PB1 = QPushButton("POP", self)
        self.PB1.setToolTip("POPOPOPOPOPOP")
        self.PB1.move(100, 100)

    def Signal_to_Slot(self):
        self.PB1.clicked.connect(self.Soft_Memory())

    def initUI(self):
        self.setWindowTitle("UI")
        self.setGeometry(850, 850, 850, 850)
        self.Buttons()
        self.Signal_to_Slot()
        self.showMaximized()

if __name__ == "__main__":
    app = QApplication(sys.argv)
    ex = MainWindow()
    sys.exit(app.exec())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>connect()</code> method expects a callable argument. When you write <code>self.Soft_Memory()</code> you are making a call to that method, and the result of that call (<code>None</code>, since you don't explicitly return anything) is what is being passed to <code>connect()</code>. </p>
<p>You want to pass a reference to the method itself.</p>
<pre><code>self.PB1.clicked.connect(self.Soft_Memory)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>When you write <code>self.Soft_Memory()</code> you are calling the method by using the parenthesis. What you want is to reference the method:</p>
<pre><code>self.PB1.clicked.connect(self.Soft_Memory)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The answers from @DaveyH-cks and @user3419537 are correct, you should use a reference of the method, instead of calling it:</p>
<pre><code>self.PB1.clicked.connect(self.Soft_Memory)
</code></pre>
<p>However, you might often need to pass arguments on those functions (I certainly do). On those situations, if you need to use args there's a workaround by using <a href="https://docs.python.org/3/reference/expressions.html#lambda" rel="nofollow noreferrer" title="Lambda">lambda</a>.</p>
<pre><code>self.PB1.clicked.connect(lambda: myfunction(self, arg1, True, "example", arg4))
</code></pre>
</div>
<span class="comment-copy">Is it possible if the function() has 'return something' then I use self.functiun()?</span>
<span class="comment-copy">Only if 'something' is a callable. In general you should specify the slot directly to make it clear what you are connecting to</span>
