<div class="post-text" itemprop="text">
<p>I have to download source code of a website like www.humkinar.pk in simple HTML form. Content on site is dynamically generated. I have tried <code>driver.page_source</code> function of <code>selenium</code> but it does not download page completely such as image and javascript files are left. How can I download complete page. Is there any better and easy solution in python available?</p>
</div>
<div class="post-text" itemprop="text">
<h2>Using Selenium</h2>
<p>I know your question is about selenium, but from my experience I am telling you that selenium is recommended for <strong>testing</strong> and <strong>NOT</strong> for scraping. It is very <strong>SLOW</strong>. Even with multiple instances of headless browsers (chrome for your situation), the result is delaying too much.</p>
<h2>Recommendation</h2>
<blockquote>
<p>Python 2, 3</p>
</blockquote>
<p>This trio will help you a lot and save you a bunch of time.</p>
<ul>
<li><a href="https://dryscrape.readthedocs.io/en/latest/" rel="nofollow noreferrer">Dryscrape</a></li>
<li><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" rel="nofollow noreferrer">BeautifulSoup</a></li>
<li><a href="https://docs.python.org/3/library/concurrent.futures.html" rel="nofollow noreferrer">ThreadPoolExecutor</a></li>
</ul>
<blockquote>
<p>Do not use the parser of dryscrape, it is very SLOW and buggy. For
  this situation, one can use BeautifulSoup with the <code>lxml</code> parser. Use dryscrape to scrape Javascript generated content, plain HTML and images.</p>
<p>If you are scraping a lot of links simultaneously, i highly recommend
  using something like ThreadPoolExecutor</p>
</blockquote>
<h2>Edit #1</h2>
<h3>dryscrape + BeautifulSoup usage (<strong>Python 3+</strong>)</h3>
<pre><code>from dryscrape import start_xvfb
from dryscrape.session import Session
from dryscrape.mixins import WaitTimeoutError
from bs4 import BeautifulSoup

def new_session():
    session = Session()
    session.set_attribute('auto_load_images', False)
    session.set_header('User-Agent', 'SomeUserAgent')
    return session


def session_reset(session):
    return session.reset()


def session_visit(session, url, check):
    session.visit(url)
    # ensure that the market table is visible first
    if check:
        try:
            session.wait_for(lambda: session.at_css(
                'SOME#CSS.SELECTOR.HERE'))
        except WaitTimeoutError:
            pass
    body = session.body()
    session_reset(session)
    return body

# start xvfb in case no X is running (server)
start_xvfb()

SESSION = new_session()
URL = 'https://stackoverflow.com/questions/45796411/download-entire-webpage-html-image-js-by-selenium-python/45824047#45824047'
CHECK = False

BODY = session_visit(SESSION, URL, CHECK)
soup = BeautifulSoup(BODY, 'lxml')

RESULT = soup.find('div', {'id': 'answer-45824047'})

print(RESULT)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's not allowed to download a website without Permission. If you would know that, you would also know there is hidden Code on hosting Server, where you as Visitior has no access to it.</p>
</div>
<div class="post-text" itemprop="text">
<p>I Hope below code will work to download the complete content of the page.</p>
<pre><code>driver.get("http://testurl.com")
pageurl=driver.current_url
page = requests.get(pageurl)
pagecontent=page.content

`pagecontent` will contain the complete code content
</code></pre>
</div>
<span class="comment-copy">What webdriver do you use? What browser?</span>
<span class="comment-copy">I am using Chrome</span>
<span class="comment-copy">If I have access to hosting server then is it possible?</span>
