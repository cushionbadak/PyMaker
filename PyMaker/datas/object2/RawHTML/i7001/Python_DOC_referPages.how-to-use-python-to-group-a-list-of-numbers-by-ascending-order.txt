<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/312443/how-do-you-split-a-list-into-evenly-sized-chunks">How do you split a list into evenly sized chunks?</a>
<span class="question-originals-answer-count">
                    57 answers
                </span>
</li>
</ul>
</div>
<p>Lets say I have this list of numbers:</p>
<p><strong>1, 2, 3, 4, 7, 8, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29</strong></p>
<p>And I want to create 5 even groups based on ascending order in the list:</p>
<p>group 1: <strong>1, 2, 3, 4, 7</strong></p>
<p>group 2: <strong>8, 10, 12, 15, 16</strong></p>
<p>group 3: <strong>17, 18, 19, 20, 21</strong></p>
<p>etc...</p>
<p>Can I use python to do this?   I know that I can group by 0:4; 5:9... but I have many lists of various lengths that I need to sort into 5 exact groups each.  </p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this:</p>
<pre><code>l = [1, 2, 3, 4, 7, 8, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29]

new_groups = [l[i:i+5] for i in range(0, len(l), 5)]
</code></pre>
<p>Output:</p>
<pre><code>[[1, 2, 3, 4, 7], [8, 10, 12, 15, 16], [17, 18, 19, 20, 21], [22, 24, 26, 27, 29]]
</code></pre>
<p>If you want to access each group by number, you can build a dictionary:</p>
<pre><code>accessing = {i+1:a for i, a in zip(range(5), new_groups)}

print(acessing[2])
</code></pre>
<p>Output:</p>
<pre><code>[8, 10, 12, 15, 16]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sort your list, and then use the <code>grouper</code> recipe from <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer"><code>itertools</code></a>:</p>
<pre><code>from itertools import zip_longest
l = [1, 2, 3, 4, 7, 8, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29]
l.sort()

def grouper(iterable, n, fillvalue=None):
    args = [iter(iterable)] * n
    return zip_longest(*args, fillvalue=fillvalue)

groups = list(grouper(l, 5))
print(groups)
# [(1, 2, 3, 4, 7), (8, 10, 12, 15, 16), (17, 18, 19, 20, 21), (22, 24, 26, 27, 29)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do that based on the length of the list.</p>
<pre><code>l = [...]
groupLength = len(l) // 5
groups = [l[i*groupLength:(i+1)*groupLength] for i in range(5)]
</code></pre>
<p>Then either complete the last group with the remaining elements:</p>
<pre><code>groups[-1].extend(l[-len(l)%5:])
</code></pre>
<p>Or simply put the remaining elements into a new group:</p>
<pre><code>groups.append(l[-(len(l)%5):])
</code></pre>
</div>
