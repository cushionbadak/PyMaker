<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/11427138/python-wildcard-search-in-string">Python wildcard search in string</a>
<span class="question-originals-answer-count">
                    6 answers
                </span>
</li>
</ul>
</div>
<p>How can I do this:</p>
<pre><code>if 'class="*word*"' in html:
    print "True."
else:
    print "False."
</code></pre>
<p>To use * as a wildcard char like in Linux?</p>
</div>
<div class="post-text" itemprop="text">
<p>You are going to want to look at the <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer" title="re">re</a> module. This will let you do a regular expression and accomplish the same thing as the * does in the linux command line.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you just want to match Unix filename pattern matching, you can use the dedicated module <a href="https://docs.python.org/3/library/fnmatch.html" rel="nofollow noreferrer">fnmatch</a>:</p>
<pre><code>import fnmatch
words = ["testing", "wildcard", "in", "python"]
filtered = fnmatch.filter(words, 'p?thon')
# filtered = ['python']
filtered = fnmatch.filter(words, 'w*')
# filtered = ['wildcard']
</code></pre>
<p>If you want to do advanced pattern matching, use regular expressions.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a regular expression from the <a href="https://docs.python.org/2/library/re.html" rel="nofollow noreferrer">re</a> module for general purpose pattern matching.</p>
<p>However, if you are working with HTML and trying to match tags and such I would recommend looking into <a href="http://lxml.de/" rel="nofollow noreferrer">LXML</a> and using its <code>parse</code> function and <code>cssselect</code> to get what you want.</p>
<pre><code>from lxml import html

# read in and parse the html
html_doc = parse(filename).getroot()

# get elements that match class "classname"
elements = html_doc.cssselect(.classname)
</code></pre>
<p><a href="https://www.w3schools.com/cssref/css_selectors.asp" rel="nofollow noreferrer">This doc</a> describes the different CSS Selectors</p>
</div>
<span class="comment-copy">And if you follow that trail, you'll realize that <a href="https://stackoverflow.com/q/1732348/102441">you shouldn't be parsing HTML that way anyway</a></span>
