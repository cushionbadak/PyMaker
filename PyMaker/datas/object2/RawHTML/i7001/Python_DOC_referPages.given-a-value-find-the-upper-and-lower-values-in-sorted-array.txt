<div class="post-text" itemprop="text">
<p>For example I have array x</p>
<pre><code>x = [10, 100, 1000, 10000] 
</code></pre>
<p>If I have the number 600, then how can I get the values 100 as the lower value and 1000 as the upper value. </p>
</div>
<div class="post-text" itemprop="text">
<p>Assuming the input as sorted, we can use <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.searchsorted.html" rel="nofollow noreferrer"><code>np.searchsorted</code></a> to get the index where <code>600</code> could be placed in that sorted order and then simply use the index and one-off shifted index to get the lower, upper limits upon indexing, like so -</p>
<pre><code>idx = np.searchsorted(x,600)
out = x[idx-1], x[idx]
</code></pre>
<p>Sample run -</p>
<pre><code>In [41]: x = [10, 100, 1000, 10000]

In [42]: idx = np.searchsorted(x,600)

In [44]: x[idx-1], x[idx]
Out[44]: (100, 1000)
</code></pre>
<p>We can also use <a href="https://docs.python.org/2/library/bisect.html" rel="nofollow noreferrer"><code>bisect</code> module</a>, which I believe could be a bit faster -</p>
<pre><code>import bisect

idx = bisect.bisect_left(x,600)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow noreferrer">Iterate over the list</a>; check to see if the current number is greater than the test value; if it is <a href="https://docs.python.org/3/tutorial/introduction.html#lists" rel="nofollow noreferrer">select this value and the previous value</a>.<br/>
<a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate()</a> might make this easier.</p>
<p>Assumes a sorted list.</p>
</div>
<span class="comment-copy">Good, but I would warn the OP to check for edge cases like when searching for values outside of the min and max of the array such as <code>0</code> or <code>10001</code>:   <code>idx = np.searchsorted(x, 0); x[idx-1], x[idx]</code> gives <code>(10000, 10)</code> and <code>idx = np.searchsorted(x, 10001); x[idx-1], x[idx]</code> gives <code>IndexError: list index out of range</code>.</span>
<span class="comment-copy">@StevenRumbalski Good point. OP needs to clarify on what's the desired lower, upper limits for those edge cases.</span>
<span class="comment-copy">Thanks! I won't ever have a case where values are outside the min/max</span>
