<div class="post-text" itemprop="text">
<p>I would like to implement a class which inherits from <a href="https://docs.python.org/3/library/io.html#io.RawIOBase" rel="nofollow noreferrer">RawIOBase</a>. I'm struggling to implement the <strong>readinto</strong> method. Basically, I don't know how to alter the content of the <a href="https://docs.python.org/3.1/library/functions.html#bytearray" rel="nofollow noreferrer">bytearray</a> object passed as a parameter.</p>
<p>I've tried following (naive) approach:</p>
<pre><code>def readinto(self, b):
    data = self.read(len(b))
    b = data
    return len(data)
</code></pre>
<p>But this, as I suspect, will assign new <code>bytearray</code> object to local variable <em>b</em> and it does not change content of the original <code>bytearray</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>from the docs of <a href="https://github.com/python/cpython/blob/master/Modules/_io/bytesio.c#L542" rel="nofollow noreferrer"><code>RawIOBase.readinto</code></a>: </p>
<blockquote>
<p>Read bytes into a pre-allocated, <strong>writable bytes-like object b</strong>, and return the number of bytes read. If the object is in non-blocking mode and no bytes are available, None is returned.</p>
</blockquote>
<p>its a bit confusing but you need to write into the <a href="https://docs.python.org/3/glossary.html#term-bytes-like-object" rel="nofollow noreferrer">bytes-like</a> object <code>b</code> (not read)</p>
<h1>Example Usage</h1>
<pre><code>import io

class MyIO(io.RawIOBase):
    def readinto(self, b):
        msg = b'hello'
        b[:len(msg)] = msg
        return len(msg)

i = MyIO()
buf = bytearray()
i.readinto(buf)
print(buf)
</code></pre>
<p>Take a look at CPython implementation of <a href="https://github.com/python/cpython/blob/master/Modules/_io/bytesio.c#L542" rel="nofollow noreferrer"><code>BytesIO.readinto</code></a>.
basically its does memcpy from the object's buffer to the function input buffer.</p>
</div>
<div class="post-text" itemprop="text">
<p>You want to mutate the object <code>b</code>. Looking at the docs of <code>bytearray</code>, something like this should work:</p>
<pre><code>def readinto(self, b):
    toRead = len(b)
    data = self.read(toRead)
    toWrite = len(data)
    b[:toWrite] = data
    return toWrite
</code></pre>
</div>
<span class="comment-copy">also might work: <a href="https://docs.python.org/2/library/functions.html#bytearray" rel="nofollow noreferrer">docs.python.org/2/library/functions.html#bytearray</a> instead of opening a fileobject.</span>
<span class="comment-copy">thanks didnt notice</span>
<span class="comment-copy">Doesn't this incorrectly append the result to the end of the bytearray? It's clearly not empty, because he determines how much data to read based on the length of the incoming bytearray.</span>
<span class="comment-copy">after looking at some implementations on the wild, I think you correct - updated the answer and comment</span>
