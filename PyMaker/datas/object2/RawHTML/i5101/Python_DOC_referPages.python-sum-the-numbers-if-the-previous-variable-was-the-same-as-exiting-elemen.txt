<div class="post-text" itemprop="text">
<p>i have  alist within alist that looks like that:</p>
<pre><code>sub_count = [[['Farm', u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Premium'], 2], [['Farm', u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Standard'], 2], [['Farm', u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Premium'], 1]]
</code></pre>
<p>what i need to get anew dictionary  with farm as akey ,and lists of subscription name </p>
<p>i.e Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Premium/standard ,and  the summary of subscriptions per subscriptions </p>
<p>example:</p>
<pre><code>dic = {Farm:[Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Premium,3][Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Standard,2]}
</code></pre>
<p>Note:
i have tried to create a new list and try the below method to get my result as alist but not getting the correct result and i actually prefer adict:</p>
<pre><code>['Farm', u'Red Hat Enterprise Linux for Virtual Datacenters with Smart 
Management, Premium', 2, 'Farm', u'Red Hat Enterprise Linux for Virtual 
Datacenters with Smart Management, Standard', 2, 'Farm', u'Red Hat Enterprise 
Linux for Virtual Datacenters with Smart Management, Premium', 1]


list2 = []
for i in list1:
    if i not in list2:
        if not isinstance(i, (int, long)):
            list2.append(i)
        if isinstance(i, (int, long)):
            count = 0
            count = count + i:
            list2.append(count)
</code></pre>
<p>getting:</p>
<pre><code>['Farm', u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Premium', 2, u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Standard', 1]
</code></pre>
<p>Please provide a way to get the dic as the example above</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> of <code>defaultdict</code> of <code>int</code>:</p>
<pre><code>from collections import defaultdict
d = defaultdict(lambda: defaultdict(int))
for (a, b), c in sub_count:
    d[a][b] += c
</code></pre>
<p>Result is (omitting <code>defaultdict</code>-specific markup for readability)</p>
<pre><code>{'Farm': {'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Premium': 3, 
          'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Standard': 2})})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertools.groupby</code>:</p>
<pre><code>import itertools
sub_count = [[['Farm', u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management', 'Premium'], 2], [['Farm', u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management', 'Standard'], 2], [['Farm', u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management', 'Premium'], 1]]
final_data = {a:[zip(*list(d)) for c, d in itertools.groupby(sorted(list(b), key=lambda x:x[0][-1]), key=lambda x:x[0][-1])] for a, b in itertools.groupby(sub_count, key=lambda x:x[0][0])}
new_final_data = {a:[i[0]+[sum(c)] for i, c in b] for a, b in final_data.items()}
</code></pre>
<p>Output:</p>
<pre><code>{'Farm': [['Farm', u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management', 'Premium', 3], ['Farm', u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management', 'Standard', 2]]}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I have done this :</p>
<pre><code>a_dict =defaultdict(dict)
for x in sub_count:
    if a_dict[x[0][0]].get(x[0][1]):
        a_dict[x[0][0]][x[0][1]] += x[1]
    else:
        a_dict[x[0][0]][x[0][1]] = x[1]
</code></pre>
<p>Here is the output :</p>
<pre><code>defaultdict(dict,
            {'Farm': {u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Premium': 3,
              u'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Standard': 2}})
</code></pre>
</div>
<span class="comment-copy">Your example is not valid Python code.</span>
<span class="comment-copy">Thank you for your answer i do i omitting defaultdict-specific markup?</span>
<span class="comment-copy">@askpython Sorry, I did not understand that. What I meant was just that <code>d</code>, when printed, will look a bit different that what I've shown in the answer, including information that it's a <code>defaultdict</code> and what function is used for creating the default values. It still behaves like an ordinary <code>dict</code> for all practical purposes, though.</span>
<span class="comment-copy">Thank you for your answer but one thing is missing the summary of the subscriptions ,there are 2  list:    'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Premium'], 2]   and  'Red Hat Enterprise Linux for Virtual Datacenters with Smart Management, Premium'], 1]  so in the dict i should have a summary of the numbers the dic should be like in mentioned above:        dic = {Farm:[Red Hat Enterprise Linux for Virtual Datacenters with      Smart Management, Premium,3][Red Hat Enterprise Linux for Virtual      Datacenters with Smart Management, Standard,2]}</span>
<span class="comment-copy">@askpython Ihave corrected the answer</span>
