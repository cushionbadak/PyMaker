<div class="post-text" itemprop="text">
<p>I have dictionary with large number of keys and each key has 15 values. 
Below is sample of dictionary </p>
<pre><code>city_info = {
    'new york': {
        'bus': 4175000,
        'car': 2869717,
        'income avg': 3081055,
        'pop': 40000000,
    },
    'memphis': {
        'bus': 4175000,
        'car': 2869717,
        'income avg': 3081055,
        'pop': 400000,
    },
}
</code></pre>
<p>There are 800+ cities or keys in it. 
What I would like to do is basically, add value which is ratio other value so the above dictionary would additional value called "bus ratio" which ratio of pop/bus value. </p>
<p>So, new dictionary would look like </p>
<pre><code>city_info_new = {
    'new york': {
        'bus': 4175000,
        'car': 2869717,
        'income avg': 3081055,
        'pop': 40000000,
        'bus_ratio': 9.58,
    },
    'memphis': {
        'bus': 4175000,
        'car': 2869717,
        'income avg': 3081055,
        'pop': 400000,
        'bus_ratio': 0.095,
    },
}
</code></pre>
<p>Thanks.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just iterate over all dictionary values and add the new field <code>bus_ratio</code>:</p>
<pre><code>for value in city_info.values():
    value['bus_ratio'] = value['pop'] / value['bus']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To create an entirely new dictionary, you can use a dictionary comprehension:</p>
<pre><code>city_info = {
'new york': {
    'bus': 4175000,
    'car': 2869717,
    'income avg': 3081055,
    'pop': 40000000,
},
'memphis': {
    'bus': 4175000,
    'car': 2869717,
    'income avg': 3081055,
    'pop': 400000,
 },
}
city_info_new = {a:{**b, 'bus_ratio':round(b['pop']/float(b['bus']), 2)} for a, b in city_info.items()}
</code></pre>
<p>Output:</p>
<pre><code>{'new york': {'bus': 4175000, 'car': 2869717, 'income avg': 3081055, 'pop': 40000000, 'bus_ratio': 9.58}, 'memphis': {'bus': 4175000, 'car': 2869717, 'income avg': 3081055, 'pop': 400000, 'bus_ratio': 0.1}}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried this?</p>
<pre><code>def Ratio(city):
    return city['pop']/city['bus']

for city,vals in city_info.items():
    vals['bus_ratio']=Ratio(vals)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also use <a href="https://docs.python.org/3/library/stdtypes.html#dict.update" rel="nofollow noreferrer"><code>dict.update</code></a> here:</p>
<pre><code>for city in city_info:
    ratio = city_info[city]['pop'] / city_info[city]['bus']
    city_info[city].update({'bus_ratio': ratio})
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can iterate over the dictionary keys like this:</p>
<pre><code>for city in city_info:
    city_info[city]['bus_ratio'] = city_info[city]['pop'] / city_info[city]['bus']
</code></pre>
</div>
<span class="comment-copy">Thanks. simple, concise, and works. I just had add float to denominator to stop from getting zero values less 1. value['bus_ratio'] = value['pop'] / float(value['bus'])</span>
<span class="comment-copy">I am just running to situation where some of 'pop' or 'bus' value are 'NaN' or string and division produces an error.</span>
<span class="comment-copy">This code will raise a <code>TypeError</code>.</span>
