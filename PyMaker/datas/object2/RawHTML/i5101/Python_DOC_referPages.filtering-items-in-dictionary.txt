<div class="post-text" itemprop="text">
<p>I would like to filter items out of one dictionary where that dictionary contains items of another dictionary.  So, say that I have two dictionary's <code>dict1</code> and <code>dict2</code> where </p>
<pre><code>dict1  = {
    1:{'account_id':1234, 'case':1234, 'date': 12/31/15, 'content': 'some content'},
    2:{'account_id':1235, 'case':1235, 'date': 12/15/15, 'content': 'some content'}
}
dict2 = {
    1:{'account_id':1234, 'case':1234, 'date': 12/31/15, 'content': 'some different content'},
    2:{'account_id':4321, 'case':4321, 'date': 6/12/15, 'content': 'some different content'},
    3:{'account_id':1235, 'case':1235, 'date': 12/15/15, 'content': 'some different content'}
}
</code></pre>
<p>I would like to match on account_id, case and date and have the output be a third dictionary with matched entries from <code>dict2</code> being 1 and 3.</p>
<pre><code>out = {
    1:{'account_id':1234, 'case':1234, 'date': 12/31/15, 'content': 'some different content'},
    2:{'account_id':1235, 'case':1235, 'date': 12/15/15, 'content': 'some different content'}
}
</code></pre>
<p>How would I accomplish this?  I am using Python 3.5</p>
</div>
<div class="post-text" itemprop="text">
<p>Well then, I believe this is what you are looking for:</p>
<pre><code>from itertools import count
from operator import itemgetter
# Set the criteria for unique entry (prevents us from needing to write this twice)
get_identifier = itemgetter("account_id","case","date")

# Create a set of all unique items.
unique_entries = set(map(get_identifier, dict1.values()))

# Get all entries that match one of the unique entries
matched_entires = (d for d in dict2.values() if get_identifier(d) in unique_entries)

# Recreate a new dict together with a counter for items.
out = dict(zip(count(1), matched_entires))
</code></pre>
<p>For more info about <a href="https://docs.python.org/3/library/itertools.html#itertools.count" rel="nofollow noreferrer"><code>count()</code></a> and <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>itemgetter()</code></a>, see their respective docs.</p>
<p>Using a set and generator comprehensions ensures efficiency at the highest level.</p>
</div>
<span class="comment-copy">Can you demonstrate <i>any</i> effort at solving this (or even searching for a solution) yourself?</span>
<span class="comment-copy">Yes - I have tried looking here: <a href="http://treyhunner.com/2016/02/how-to-merge-dictionaries-in-python/" rel="nofollow noreferrer">treyhunner.com/2016/02/how-to-merge-dictionaries-in-python</a> and here: <a href="http://www.pythonforbeginners.com/dictionary/dictionary-manipulation-in-python" rel="nofollow noreferrer">pythonforbeginners.com/dictionary/â€¦</a>.  Perhaps I am missing something quite obvious</span>
<span class="comment-copy">And when you tried to use that information (the code for which you have not shared), your attempt didn't succeed in what way?</span>
