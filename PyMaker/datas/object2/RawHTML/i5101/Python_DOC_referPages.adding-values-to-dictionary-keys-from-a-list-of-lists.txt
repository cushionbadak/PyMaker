<div class="post-text" itemprop="text">
<p>I have the following list and dictionary:</p>
<pre><code>list = [[1,2,2],[2,3,3],[3,4,4]
dict = {1:[], 2:[], 3:[]}
</code></pre>
<p>Let's say I wanted to append all values that proceed dict[keys] into their respective keys such that:</p>
<pre><code>dict = {1:[2,2], 2:[3,3], 3:[4,4]}
</code></pre>
<p>I've attempted using multiple loops to accomplish this.  However whenever I do that all values get searched and appended to each dict[key] simultaneously.  Any help would be appreciated!</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>l = [[1,2,2],[2,3,3],[3,4,4]]

# last key wins 
d = {sublist[0]:sublist[1:] for sublist in l}

print(d)
</code></pre>
<p>You construct the dictionary from your lists elements. Do not use <code>list</code> or <code>dict</code> as names, they shadow the built-ins.</p>
<p><code>sublist[0]</code> is the first element, <code>sublist[1:]</code> are the rest of the elements of each item in l.</p>
<p>More about the syntax used here: <a href="https://www.python.org/dev/peps/pep-0274/" rel="nofollow noreferrer">PEP 274: Dict Comprehensions</a></p>
<p>Outputs:</p>
<pre><code>{1: [2, 2], 2: [3, 3], 3: [4, 4]}     # last key wins (no duplicates present)
</code></pre>
<hr/>
<p>If you need to merge as well, you can use:</p>
<pre><code># merging keys into values as list of sublists
l = [[2,2,2],[2,3,3],[3,4,4]]
d1 = {}
for sub in l:
    # creates dict of { key: [ [int,...], [int,...] ], ... } for same keys
    d1.setdefault(sub[0],[]).append(sub[1:]) 
</code></pre>
<p>or by flattening:</p>
<pre><code># merging keys into values as flattened list
d2 = {}
for sub in l:
    # creates dict of { key: [ int,...,int,... ], ... } for same keys
    d2.setdefault(sub[0],[]).extend(sub[1:]) 
</code></pre>
<p>Outputs:</p>
<pre><code>{2: [[2, 2], [3, 3]], 3: [[4, 4]]}    # merging keys into values as list of sublists

{2: [2, 2, 3, 3], 3: [4, 4]}          # merging keys into values as flattened list
</code></pre>
<p>For merging I used <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer">dict.setdefault()</a> you might want to take a peek at <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer">collections.defaultdict()</a> which I get assured is better suited.</p>
</div>
