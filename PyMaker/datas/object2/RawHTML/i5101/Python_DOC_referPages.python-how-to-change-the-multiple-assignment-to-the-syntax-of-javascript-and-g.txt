<div class="post-text" itemprop="text">
<p>I've got a little problem searching about backtracking. First of all, in  the code I'll link below I found a quite strange syntax to me as a JavaScript programmer:</p>
<pre><code>a[l], a[i] = a[i], a[l]
</code></pre>
<p>Using information in <a href="https://www.tutorialspoint.com/python/python_variable_types.htm" rel="nofollow noreferrer">this page</a> I figured it out it means: "assign <code>a[i]</code> to the <code>a[l]</code> variable and <code>a[l]</code> to the <code>a[i]</code> variable". I can't understand the use of this. I thought it would be the same values. If you first assign the value to <code>a[l]</code> and then try to get <code>a[l]</code>, it's going to be <code>a[i]</code>, for both variables.</p>
<hr/>
<p>It's a Python code, however, I'd like to convert it to the JavaScript using the same principle.</p>
<pre><code># Python program to print all permutations with
# duplicates allowed

def toString(List):
    return ''.join(List)

# Function to print permutations of string
# This function takes three parameters:
# 1. String
# 2. Starting index of the string
# 3. Ending index of the string.
def permute(a, l, r):
    if l==r:
        print toString(a)
    else:
        for i in xrange(l,r+1):
            a[l], a[i] = a[i], a[l]
            permute(a, l+1, r)
            a[l], a[i] = a[i], a[l] # backtrack

# Driver program to test the above function
string = "aab"
n = len(string)
a = list(string)
permute(a, 0, n-1)

# This code is contributed by Bhavya Jain
</code></pre>
<p>You can follow this link to the IDE: <a href="https://ide.geeksforgeeks.org/ASvO8MoGQr" rel="nofollow noreferrer">https://ide.geeksforgeeks.org/ASvO8MoGQr</a>.</p>
<p>What this code does, is getting the permutation values of the string "aab".</p>
<p>For example, using "aab" as the first string, we should get the following result: <strong>aab
aba
aab
aba
baa
baa</strong>.</p>
<p>I tried using "JavaScript" and came up with this:</p>
<pre><code>let arr = [];

let permute = function(str, l, r) {
  if (l === r) {
    arr.push(str);
  } else {
    for (let i = l; i &lt;= r; i++) {
      str[l] = str[i];
      str[i] = str[l];
      permute(str, l + 1, r);
      str[l] = str[i];
      str[i] = str[l];
    }
  }
};

permute('aab', 0, 'aab'.length - 1);

console.log(arr);
</code></pre>
<p>The result I get is <code>["aab", "aab", "aab", "aab", "aab", "aab"]</code>.</p>
<p>Link to the JSFiddle: <a href="https://jsfiddle.net/xrfkt9qj/1/" rel="nofollow noreferrer">https://jsfiddle.net/xrfkt9qj/1/</a>.</p>
<hr/>
<p><strong>EDIT1</strong> I've tried the @jp_data_analysis answer, but it still returns bad results: <a href="https://jsfiddle.net/zurvm0xy/" rel="nofollow noreferrer">https://jsfiddle.net/zurvm0xy/</a>.</p>
<p><strong>EDIT2</strong> ES6 Version of the script: <a href="https://jsfiddle.net/zurvm0xy/4/" rel="nofollow noreferrer">https://jsfiddle.net/zurvm0xy/4/</a>.</p>
<hr/>
<p><em>It's not a duplicate, the variable swapping is only a first part of this problem. Please read the full article.</em></p>
</div>
<div class="post-text" itemprop="text">
<p>The following code 2 pieces of code have the same result, assuming values are immutable.</p>
<p><strong>Python syntax</strong></p>
<pre><code>a[i], a[j] = a[j], a[i]
</code></pre>
<p><strong>Regular syntax</strong></p>
<pre><code>x = a[i]
y = a[j]

a[i] = y
a[j] = x
</code></pre>
<p><strong>Why it works</strong></p>
<p>Python evaluates the right hand side first. See <strong><a href="https://docs.python.org/3/reference/expressions.html#evaluation-order" rel="nofollow noreferrer">Evaluation order</a></strong> for more details.</p>
</div>
<div class="post-text" itemprop="text">
<p>Finally, I figured everything out. The most immportant part was to convert the string to the array using <code>split()</code> function.</p>
<pre><code>let arr = [], y, x;

let permute = function(str, l, r) {
  if (l === r) {
    arr.push(str.join(''));
  } else {
    for (let i = l; i &lt;= r; i++) {
      [str[l], str[i]] = [str[i], str[l]];
      permute(str, l + 1, r);
      [str[l], str[i]] = [str[i], str[l]];
    }
  }
};

permute('aab'.split(''), 0, 'aab'.length - 1)
console.log(arr);
</code></pre>
</div>
<span class="comment-copy">The first block of code you quote is python's 'swap variables' idiom.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/16201656/how-to-swap-two-variables-in-javascript">How to swap two variables in JavaScript</a></span>
<span class="comment-copy">It's not a duplicate, the variable swapping is only a first part of this problem. Please read the full article.</span>
<span class="comment-copy">Your question clearly states: <code>"Python - how to change the multiple assignment to the syntax of JavaScript?"</code></span>
<span class="comment-copy">Sorry, the title isn't very clear. I've edited it now.</span>
<span class="comment-copy">Thank you for the answer, but it still doesn't work.</span>
<span class="comment-copy">Are you suggesting that replacing "Python syntax" with "Regular syntax" didn't work? For your benefit, more detailed feedback would help.</span>
<span class="comment-copy">Can you please check the JSFiddle file or IDE? I returns the same array before and after your solution. Maybe I'm doing something wrong with the loop but I don't think so. Also, the ES6 version of swapping variables: <code>[a, b] = [b, a];</code>.</span>
<span class="comment-copy">@LukasNaujokaitis, thank you. I can't help, but maybe someone with javascript expertise can look and assist.</span>
