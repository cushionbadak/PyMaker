<div class="post-text" itemprop="text">
<p>I'm working on a web scraping project and have a list of URLs.  Some of the URLs are relative URL's and I need to add the root URL ('<a href="https://www.census.gov" rel="nofollow noreferrer">https://www.census.gov</a>') in front of any returned relative URL value starting with ('/').  Here is my for loops:</p>
<pre><code>links = soup.find_all('a', href=True)
records = []
for results in links:
    url = results['href']
    records.append(url)
</code></pre>
<p>I think I have the start of the if statement down:</p>
<pre><code>if url.startswith('/'):
</code></pre>
<p>But not sure how to finish it.
Any tips or guidance appreciated!</p>
<p>Thanks,
Garrett</p>
</div>
<div class="post-text" itemprop="text">
<p>If I have understood you correctly, you can try something like this:</p>
<pre><code>import requests
from bs4 import BeautifulSoup

ROOT_URL = 'https://www.census.gov'

def scrape():
    r = requests.get(ROOT_URL)
    # soup = BeautifulSoup(URL, 'html.parser')
    soup = BeautifulSoup(r.text)
    links = soup.find_all('a', href=True)
    records = []
    for results in links:
        url = results['href']
        print('URL: ', url)
        if url.startswith('#'):
            continue
        elif url.startswith('/'):
            url = ROOT_URL + url
            records.append(url)
            print('PROPER URL: ', url)

if __name__ == '__main__':
    scrape()
</code></pre>
<p>It will add ROOT_URL in the front of all relative links.</p>
</div>
<div class="post-text" itemprop="text">
<p>Rather than rolling your own, try <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urljoin" rel="nofollow noreferrer"><code>urjloin</code></a> from the standard library. It takes care of relative and absolute URLs both.</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import urljoin
&gt;&gt;&gt; base = 'https://www.census.gov/'
&gt;&gt;&gt; relative = '/here/is/some/path'
&gt;&gt;&gt; urljoin(base, relative)
'http://www.census.gov/here/is/some/path'
&gt;&gt;&gt; not_relative =  'http://www.census.gov/here/is/another/path'
&gt;&gt;&gt; urljoin(base, not_relative)
'http://www.census.gov/here/is/another/path'
</code></pre>
<p>If your absolute URLs have a different domain, though, you will need to not join those. In that case, you can just do:</p>
<pre><code>if url.startswith('/'):
    url = urljoin(base, url)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow noreferrer"><code>urlparse</code></a> along with <code>_replace</code> method. This will work for both of your cases</p>
<pre><code>&gt;&gt;&gt; from urllib.parse import urlparse

&gt;&gt;&gt; base_url = 'https://www.census.gov'
&gt;&gt;&gt; urlparse('https://www.census.gov/path/to/text')._replace(netloc=base_url)
</code></pre>
<p>This will give you result like:</p>
<pre><code>&gt;&gt;&gt; ParseResult(scheme='https', netloc='https://www.census.gov', path='/path/to/text', params='', query='', fragment='')
</code></pre>
<p>To parse with one without base_url, use the same method</p>
<pre><code>&gt;&gt;&gt; urlparse('/path/to/text')._replace(netloc=base_url)

&gt;&gt;&gt; ParseResult(scheme='https', netloc='https://www.census.gov', path='/path/to/text', params='', query='', fragment='')
</code></pre>
<p>To obtain combined url as a string use:</p>
<pre><code>&gt;&gt;&gt; url_comp = urlparse('/path/to/text')._replace(netloc=base_url)

&gt;&gt;&gt; url_comp.netloc + url_comp.path
&gt;&gt;&gt; 'https://www.census.gov/path/to/text'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Got it to work with this:</p>
<pre><code>if not url.startswith('/'):
    url
elif url.startswith('/'):
    url = 'https://www.census.gov' + url
</code></pre>
<p>Thanks,
Garrett</p>
</div>
<span class="comment-copy">@gtjoeckel You are welcome!</span>
<span class="comment-copy">I see where you are going with that but my records [] list contains both absolute and relative URLs, so I can't add that base variable to every record or i will double up that value for some of the absolute links.  I need to only add that base value to records that start with a ('/')</span>
<span class="comment-copy">As long as your absolute links all have the same domain, this works just fine. I added an example.</span>
