<div class="post-text" itemprop="text">
<p>What is the difference between if / if any in a list comprehension?</p>
<p>The code:</p>
<pre><code>return [word for word in words if any(set(word.upper()) &lt;= set(row) for row in ('QWERTYUIOP', 'ASDFGHJKL', 'ZXCVBNM'))]
</code></pre>
<p>gives me the expected result. However, if I use "if" instead of "if any", then the result is wrong. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>(set(word.upper()) &lt;= set(row) for row in ('QWERTYUIOP', 'ASDFGHJKL', 'ZXCVBNM'))</code> is a generator expression. <code>if</code> will always see this as a <code>True</code> value</p>
<p><code>any</code> is a function. It iterates over the generator expression and returns a bool</p>
<p>There is no "if any" it's "if [some expression]" the <code>any</code> is part of the expression</p>
</div>
<div class="post-text" itemprop="text">
<p>Think of it this way. The <code>any</code> method will return <code>True</code> the moment it meets the condition you are looking for as it iterates over the collection. In other words it 'short circuits' once it meets your condition. </p>
<p>So, inside your <code>any</code> you are determining this <code>True</code> condition. Once you move outside of it, the <code>if</code> in the overall comprehension is simply checking for whether the <code>any</code> did in fact return <code>True</code>. In the event it is <code>True</code> (aka the <code>if</code> passed the <code>True</code> check), you take the <code>word</code> in to the list you are crafting.</p>
</div>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/functions.html#any" rel="nofollow noreferrer">docs</a> are not clear?</span>
