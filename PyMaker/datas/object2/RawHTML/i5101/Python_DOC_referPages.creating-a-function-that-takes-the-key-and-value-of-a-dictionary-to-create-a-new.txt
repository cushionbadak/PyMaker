<div class="post-text" itemprop="text">
<p>I'm trying to come up with a simple function that takes two inputs (dict key and dict value) and returns a new value for the dictionary. And I want it to be able to be called for a broad number of cases, not just one specific instance.</p>
<p>sample input would look like this:</p>
<pre><code>dict = {1: 11, 2: 12, 3: 13, 4: 14, 5: 15}
</code></pre>
<p>and the output would look like this:</p>
<pre><code>new_dict = {1: 12, 2: 14, 3: 16, 4: 18, 5: 20}
</code></pre>
<p>I was trying to use something like a dict comprehension (<code>new_dict = {k:v + k, v in dict.items()}</code>, which obviously does not work), but not sure if this is the right approach and couldn't figure out how to get that addition part to work correctly. What's a clean/simple way of going about this to be able to work with a bunch of different inputs?</p>
</div>
<div class="post-text" itemprop="text">
<p>You're just missing the <code>for</code> in your list comprehension.</p>
<pre><code>new_dict = {k:v + k for k, v in dict.items()}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could do something like this:</p>
<pre><code>for i in dict:
    new_dict[i] = dict[i] + i
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>First, <code>dict</code> is already <a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer">used for instantiating dictionaries</a>, and you shouldn't use it in the manner you did. </p>
<p>Second, you are missing important part in comprehension and that is <code>for</code>.</p>
<p>That's why it didn't work.</p>
<p>Heres how it works:</p>
<pre><code>a = {1: 11, 2: 12, 3: 13, 4: 14, 5: 15}

print {k: k+v for k, v in a.items()}
# {1: 12, 2: 14, 3: 16, 4: 18, 5: 20}
</code></pre>
</div>
<span class="comment-copy">You didn't get the syntx exactly right for the dictionary comprehension.  It should read like a <code>for</code> loop <code>{k: k+v for k, v in d.items()}</code>.  Also, don't use the name <code>dict</code>, there's already a built-in function with that name.</span>
<span class="comment-copy">You mean 'dict comprehension'?</span>
<span class="comment-copy"><code>dict</code> is not a <a href="https://docs.python.org/3.3/reference/lexical_analysis.html#keywords" rel="nofollow noreferrer">keyword</a>.  You can overwrite it (though you obviously shouldn't without good reason)</span>
