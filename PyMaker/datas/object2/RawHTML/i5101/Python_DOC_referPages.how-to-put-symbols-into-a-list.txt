<div class="post-text" itemprop="text">
<p>How do I put symbols such as \, /, :, *, ?, ", &lt;, &gt;, | into a list?</p>
<p>if I do this:</p>
<pre><code>illegalchar = ['\', '/' ,':' ,'*', '?', '"', '&lt;', '&gt;', '|']
</code></pre>
<p>the commas separating the items will be counted as a string including the <code>]</code></p>
<p>PS: It is to check if the filename contains illegal characters (can't be made into a file), so if there's any alternative methods, please do tell me, thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>Use raw strings (denoted by putting an <code>r</code> in front of your strings).  Then, transform your raw string into list:</p>
<pre><code>illegals = [i for i in r'\/:*?"&lt;&gt;|']

# OR, using @abccd's suggestion, just use list()

illegals = list(r'\/:*?"&lt;&gt;|')

illegals
# ['\\', '/', ':', '*', '?', '"', '&lt;', '&gt;', '|']
</code></pre>
<p>Note the <code>'\\'</code> when printed is still a single backslash, but in value the first backslash is stored as an escape character.</p>
<p>You can read more on the <a href="https://docs.python.org/3/reference/lexical_analysis.html" rel="nofollow noreferrer">documentation of lexical analysis.</a></p>
<p>This answers the question, but in reality you a <code>string</code> is treated like a <code>list</code> of characters, so both of the following will return the same elements:</p>
<pre><code>[i for i in list(r'\/:*?"&lt;&gt;|')]
[c for c in  r'\/:*?"&lt;&gt;|']
</code></pre>
<p>As for how to identify if a filename has any of these characters, you can do this:</p>
<pre><code>valid_file = 'valid_script.py'
invalid_file = 'invalid?script.py'

validate = lambda f: not any(c for c in r'\/:*?"&lt;&gt;|' if c in f)

validate(valid_file)
# True

validate(invalid_file)
# False
</code></pre>
<p>This is just one of the many ways.  You might even opt for a regex approach:</p>
<pre><code>import re

# Note in regex you still need to escape the slash and backslash in the match group
validate = lambda f: not re.search(r'[\\\/:*?\"&lt;&gt;|]+', f)

validate(valid_file)
# True

validate(invalid_file)
# False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to escape the special characters like <code>\</code> in the string before inserting them into the array, like this:</p>
<pre><code>In [2]: something = ["\\", "/"]
In [3]: something
Out[3]: ['\\', '\/']
</code></pre>
<p>Printing it will give you the escaped backslash</p>
<pre><code>In [12]: something = ["\\", "/"]
In [13]: something
Out[13]: ['\\', '/']
In [14]: print ', '.join(something)
\, /
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If the idea is just to check for illegal characters, you are doing an overkill here with complex stuffs. python <code>string</code> allow for lookup as they are iterators too. I would go with below easy approach :</p>
<pre><code>In [5]: illegalchar = '\/:*?"&lt;&gt;|'

In [6]: if "/" in illegalchar:
            print("nay")
   ...:
nay
</code></pre>
<p>downside : one type of <code>quote</code>s have to be skipped which <em>surround</em> the string (<code>'</code> in this case)</p>
</div>
<div class="post-text" itemprop="text">
<p>Just add the escape character <code>\</code> before the backslash <code>\</code>.</p>
<p>Change</p>
<pre><code>illegalchar = ['\', '/' ,':' ,'*', '?', '"', '&lt;', '&gt;', '|']
</code></pre>
<p>to</p>
<pre><code>illegalchar = ['\\', '/' ,':' ,'*', '?', '"', '&lt;', '&gt;', '|']
</code></pre>
</div>
<span class="comment-copy">Try <code>['\\', '/', ...</code></span>
<span class="comment-copy">You do not need a list for this. A string is more compact: <code>illegalchar = ['\\/:*?"&lt;&gt;|']</code>. But you still have to escape the backslash,</span>
<span class="comment-copy">@KlausD. Is \\  the same as \? i've heard it somewhere but i've forgotten, i want to double confirm, thanks anyway!</span>
<span class="comment-copy">Sounds like a job for a good old regex via the <a href="https://docs.python.org/3.6/library/re.html" rel="nofollow noreferrer"><code>re</code></a> module?</span>
<span class="comment-copy">@pstatix sorry, i haven't learned about regex, still quite new to python</span>
<span class="comment-copy">What's the point of <code>[i for i in r'\/:*?"&lt;&gt;|']</code>? You can do <code>list(r'\/:*?"&lt;&gt;|')</code> to the same effect, but even this is not needed.</span>
<span class="comment-copy">@DyZ I realized after the fact <code>list()</code> will do just fine.  While I know you can just interpret the string as a list of individual char, OP specially asks how to put them in a list.</span>
<span class="comment-copy">One type of quotes doesn't have to be missed. You can escape the char of the surround quotes by adding a backslash. It'd look like this: <code>\'</code></span>
<span class="comment-copy">valid point...+1!</span>
