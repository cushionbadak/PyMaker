<div class="post-text" itemprop="text">
<p>I have been trying to figure out how to include certain word groups and exclude others.I have this string for example</p>
<pre><code>string1="HI:MYDLKJL:ajkld? :JKLJBLKJD:DKJL? app?"
</code></pre>
<p>I want to find <code>HI:MYDLKJL:ajkld?</code> and  <code>app?</code> but not <code>:JKLJBLKJD:DKJL?</code> because it begins with a : I have made this code but it still includes the :JKLJBLKJD:DKJL? just ignoring the : in the front</p>
<pre><code>match3=re.findall("[A-Za-z]{1,15}[:]{0,1}[A-Za-z]{0,15}[:]{0,1}[A-Za-z]{0,15}[:]{0,1}[A-Za-z]{0,15}[\?]{1}",string1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The actual pattern is pretty simple to specify. But, you'll <em>also</em> need to specify a look-behind to handle the second term appropriately.</p>
<pre><code>&gt;&gt;&gt; re.findall(r'(?:(?&lt;=\s)|(?&lt;=^))[^:]\S+\?', string1)
['HI:MYDLKJL:ajkld?', 'app?']
</code></pre>
<p>The regex means "any expression that does not start with a colon but ends with a question mark".</p>
<pre><code>(?:             # lookbehind 
    (?&lt;=\s)     # space 
    |           # OR
    (?&lt;=^)      # start-of-line metachar
) 
[^:]            # anything that is not a colon
\S+             # one or more characters that are not a space
\?              # literal question mark
</code></pre>
<p>A simple word boundary does not work because <code>\b</code> will also match the boundary between <code>:</code> and <code>JKLJBLKJD</code>... no bueno, hence the lookbehind.</p>
</div>
<div class="post-text" itemprop="text">
<p>Alternate approach</p>
<pre><code>&gt;&gt;&gt; string1="HI:MYDLKJL:ajkld? :JKLJBLKJD:DKJL? app?"
&gt;&gt;&gt; string1.split()
['HI:MYDLKJL:ajkld?', ':JKLJBLKJD:DKJL?', 'app?']

# filter out elements not needed
&gt;&gt;&gt; [s for s in string1.split() if not s.startswith(':')]
['HI:MYDLKJL:ajkld?', 'app?']
</code></pre>
<p><br/></p>
<p>Or, using the <a href="https://pypi.python.org/pypi/regex/" rel="nofollow noreferrer">regex</a> module</p>
<pre><code>&gt;&gt;&gt; string1="HI:MYDLKJL:ajkld? :JKLJBLKJD:DKJL? app?"
&gt;&gt;&gt; regex.findall(r'(?:^|\s):\S+(*SKIP)(*F)|\S+', string1)
['HI:MYDLKJL:ajkld?', 'app?']
</code></pre>
<ul>
<li><code>(?:^|\s):\S+(*SKIP)(*F)</code> will effectively ignore strings starting with <code>:</code></li>
<li><code>(?:</code> means <a href="https://docs.python.org/3/howto/regex.html#non-capturing-and-named-groups" rel="nofollow noreferrer">non-capturing group</a></li>
</ul>
</div>
<span class="comment-copy">ends with a space? I want it to end with \? thats what your code does though right?</span>
<span class="comment-copy">@Bob Yes, sorry. That was a typo on my part.</span>
