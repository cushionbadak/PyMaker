<div class="post-text" itemprop="text">
<p>I'm building a command line argparser for my program and I try to give much detail in the <code>-h</code> option</p>
<p>I have the following code:</p>
<pre><code>import argparse
legal_actions = ['act1', 'act2', 'act3']
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(help='available commands')

    parser_cmd = subparsers.add_parser("cmd")

    parser_cmd.add_argument("-a", "--action", type=str, metavar="", choices=legal_actions, required=True,
                            help='list of actions: {%(choices)s}')
    parser_cmd.add_argument("nargs", type=str, nargs='*',
                            help="the rest of the arguments required to perform an action")
    parser_cmd.set_defaults(func=cmd_handler)
</code></pre>
<p><code>python prog.py cmd -h</code> will result the following prints in the command line</p>
<pre><code>usage: cmd [-h] -a  [nargs [nargs ...]]

positional arguments:
  nargs           the rest of the arguments required to perform an action

optional arguments:
  -h, --help      show this help message and exit
  -a , --action   list of actions: {act1, act2, act3}
</code></pre>
<p>Every action requires a different number of arguments, so I want to add something that will describe the actions (from the list of actions) like:</p>
<pre><code>actions availble:
    act1: requires 2 arguments (arg1, arg2)
    act2: requires 0 arguments ()
    act3: requires 1 arguments (arg1)
</code></pre>
<p>And I want it to have any link with the above "optional arguments", so it'll be easy to see the "acts" are under the -a option</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to add more information, you can use the <code>epilog</code>-parameter:</p>
<pre><code>from argparse import RawDescriptionHelpFormatter  # This is used to enable newlines in epilogs and descriptions(\n)
from argparse import ArgumentParser

description = 'Some description of program'
epilog = 'actions availble:\n\t'
epilog += 'act1: requires 2 arguments (arg1, arg2)\n\t'
epilog += 'act2: requires 0 arguments ()\n\t'
epilog += 'act3: requires 1 arguments (arg1)'

parser = argparse.ArgumentParser(description=description, epilog=epilog, 
                                formatter_class=RawTextHelpFormatter)
</code></pre>
<p>This will print out </p>
<pre><code>actions availble:
    act1: requires 2 arguments (arg1, arg2)
    act2: requires 0 arguments ()
    act3: requires 1 arguments (arg1)
</code></pre>
<p>At the end of help output. The <code>epilog</code>-parameter can also be included in the <code>add_parser()</code> when using <code>add_subparsers()</code>:</p>
<blockquote>
<p>This object has a single method, add_parser(), which takes a command name and any ArgumentParser constructor arguments, and returns an ArgumentParser object that can be modified as usual.</p>
</blockquote>
<p>NOTE: the default formatter will ignore newlines, so take a look at <a href="https://stackoverflow.com/questions/3853722/python-argparse-how-to-insert-newline-in-the-help-text">Python argparse: How to insert newline in the help text?</a> where this is addressed, which describe how to replace the formatter á la:</p>
<pre><code>ArgumentParser(..., formatter_class=RawDescriptionHelpFormatter)
</code></pre>
<p>Read more about the epilog-parameter in <a href="https://docs.python.org/3/library/argparse.html#epilog" rel="nofollow noreferrer">docs</a>.</p>
</div>
<span class="comment-copy"><code>parser_cmd = subparsers.add_parser("cmd", epilog=epilog)</code> Will do the trick. Thanks!</span>
<span class="comment-copy">Yes, the <code>add_parser()</code> method will accept any arguments that the <code>ArgumentParser</code> initializer would. Glad it could be of use :)</span>
<span class="comment-copy">damn. epilog completely ignore the '\n' and '\t' characters</span>
<span class="comment-copy">Ah, yes, that might be an issue. Take a look at <a href="https://stackoverflow.com/questions/3853722/python-argparse-how-to-insert-newline-in-the-help-text" title="python argparse how to insert newline in the help text">stackoverflow.com/questions/3853722/…</a> which might solve the newline issue</span>
<span class="comment-copy"><code>parser_cmd = subparsers.add_parser("cmd", epilog=epilog, formatter_class=argparse.RawDescriptionHelpFormatter,                                        help="run xgb_server from cmd line with cmd arguments")</code>. Notice that it has to be in parser_cmd, and in order to control description and epilogs, you have to use <code>argparse.RawDescriptionHelpFormatter</code></span>
