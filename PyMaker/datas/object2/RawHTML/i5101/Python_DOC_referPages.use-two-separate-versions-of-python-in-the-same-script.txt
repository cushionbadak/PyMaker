<div class="post-text" itemprop="text">
<p>I have two blocks of code that I would like to combine into one python script. One block of code is written in Python 2.7, the other in Python 3.6</p>
<p>My question is, is there some way to call an old version of python mid script to run that specific block of code?</p>
<p>For instance, if I ran the following code, the script would error out because the second print statement is missing the parenthesis:</p>
<pre><code>#Running python 2 and 3!!

#Py 2
print "Python 2"

#Py 3
print "Python 3"
</code></pre>
<p>Note: Converting the block of code written in 2.7 is possible, but will take a very long time; Time that I do not have at the moment.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could call your Python 2 snippet in a separate process from your Python 3 code (or vice versa) <a href="https://docs.python.org/3.6/library/subprocess.html" rel="nofollow noreferrer">using the subprocess module</a>. That would only work if you don't expect your Python context to be affected by the side effects of the Python 2 snippet, e.g. setting a variable from 2 that 3 will then use would not be possible.</p>
<p>If you wanted to use objects created by your Python 2 snippet in your Python 3 script, you could consider using pickle: serialize your objects to a local file <a href="https://docs.python.org/2/library/pickle.html#pickle.dump" rel="nofollow noreferrer">in Python 2.7</a> and deserialize them <a href="https://docs.python.org/3/library/pickle.html#pickle.load" rel="nofollow noreferrer">from Python 3</a> - note that there are some changes between 2 and 3 that pickle will have to handle (see <a href="https://stackoverflow.com/q/28218466/191191">Unpickling a Python 2 object with Python 3</a>).</p>
</div>
<div class="post-text" itemprop="text">
<p>To save you time:
<a href="https://docs.python.org/3/library/2to3.html#to3-automated-python-2-to-3-code-translation" rel="nofollow noreferrer"><strong>Automated Python 2 to 3 code translation</strong></a></p>
<p>using 2to3 have worked wonders for me and is very simple to handle:</p>
<pre><code>$ 2to3 example.py
</code></pre>
</div>
<span class="comment-copy">You might want to look at <a href="https://pythonhosted.org/six/" rel="nofollow noreferrer">Six</a></span>
<span class="comment-copy">There is no way to do this for two sections in the same file. You can put the second bit in another file and use <code>subprocess.call</code></span>
<span class="comment-copy">you cannot put <code>print "Python 3"</code> in a python 3 script, even somewhere where it's not executed.</span>
<span class="comment-copy">You can use <a href="https://docs.python.org/3/library/2to3.html" rel="nofollow noreferrer"><code>py2to3</code></a></span>
<span class="comment-copy">so, naughty boy, you don't put shebang on top of your scripts? -))</span>
<span class="comment-copy">Is it possible to use pickle to access the object from the subprocessed script? How about writing to a flat file, then reading it in later on in the script?</span>
<span class="comment-copy">That would work and there are some options in <a href="https://docs.python.org/3/library/pickle.html#pickle.load" rel="nofollow noreferrer">pickle.load</a> just for that purpose. I'll add that option to my response.</span>
