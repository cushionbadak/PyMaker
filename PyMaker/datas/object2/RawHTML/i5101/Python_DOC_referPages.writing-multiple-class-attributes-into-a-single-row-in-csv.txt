<div class="post-text" itemprop="text">
<p>I have a list of books called <strong>bookList</strong></p>
<p>In this list, there are <strong>books</strong></p>
<p>Each book has many attributes such as <strong>bookTitle, author, quantity, and isbn</strong>.</p>
<p>My program starts by reading a csv file, which has 5 rows, each row has comma seperated values starting with the name of the bookTitle all the way to the end of that row, being retail price.</p>
<p>Reading the file is no issue, but my problem is in my program you can manipulate the book's data, such as changing the title name.</p>
<p>How can I efficiently write back into the file with the changes made/added books/deleted books?</p>
<p><strong>I tried this</strong>:</p>
<pre><code>with open('inventory.csv', 'w') as f:
        writer = csv.writer(f, lineterminator = '\n')
        for book in bookList:
            writer.writerow(book.bookTitle, book.isbn, book.author, book.publisher, book.dateAdded, book.quantity, book.retail, book.wholesale)
</code></pre>
<p>But "writerow" only takes 1 argument (8 were given)</p>
<p><strong>How can I write into the csv file multiple things per row, separated by commas, for each attribute my book has?</strong></p>
</div>
<div class="post-text" itemprop="text">
<p>Per the <a href="https://docs.python.org/3/library/csv.html#writer-objects" rel="nofollow noreferrer">documentaion</a>, the <code>write</code> method takes a single row as its input argument. All you need to do is turn your attributes into <code>list</code>. I.e. </p>
<pre><code>with open('inventory.csv', 'w') as f:
    writer = csv.writer(f, lineterminator = '\n')
    for book in bookList:
        writer.writerow([book.bookTitle, book.isbn, book.author,
                         book.publisher, book.dateAdded, book.quantity, 
                         book.retail, book.wholesale])
</code></pre>
</div>
<span class="comment-copy">Simples, just enclose in a list. <code>writer.writerow([book.bookTitle, book.isbn, book.author, book.publisher, book.dateAdded, book.quantity, book.retail, book.wholesale])</code></span>
<span class="comment-copy">I could've sworn this made my csv file blank before, but it's working fine. Does it matter if it's a list/tuple?</span>
<span class="comment-copy">@DeathPox AFAIK it just requires a sequence that can be iterated. Try it.</span>
<span class="comment-copy">@DeathPox I find list more natural for this because that's what you'll get if you read CSVs.</span>
<span class="comment-copy">Tuple should work fine too.</span>
