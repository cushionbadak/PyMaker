<div class="post-text" itemprop="text">
<p>I have a list of URLs. (We can assume that a given URL is met in the list no more than once.)</p>
<p>I need a fast way to determine which of two URLs is before in the list.</p>
<p>I think, I should create the dict from URL to its position in the list.</p>
<p>What is the easy way (without writing a <code>for</code> loop with manual increasing of the counter) to map elements of a list into their positions in the list?</p>
<p>The best thing I conceived is:</p>
<pre><code>order = {}
i = 0
for item in list:
    order[item] = i
    i += 1
</code></pre>
<p>Now to check if <code>url1</code> is before <code>url2</code>, I check <code>order[url1] &lt; order[url2]</code>.</p>
<p>Can this code be shortened?</p>
</div>
<div class="post-text" itemprop="text">
<p>This creates your <code>order</code></p>
<pre><code>order = {k: v for v, k in enumerate(list)}
</code></pre>
<p>Example:</p>
<pre><code>L = list('abc')
</code></pre>
<p>Your version:</p>
<pre><code>order1 = {}
i = 0
for item in L:
    order1[item] = i
    i += 1
print(order1)
</code></pre>
<p>My version:</p>
<pre><code>order2 = {k: v for v, k in enumerate(L)}
print(order2)
</code></pre>
<p>Output:</p>
<pre><code>{'a': 0, 'b': 1, 'c': 2}
{'a': 0, 'b': 1, 'c': 2}
</code></pre>
<p>Better don't use <code>list</code>for your variable name because it is a built-in.</p>
<p><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> provides an iterate that gives you the index and the value for each iteration through your list.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to know which comes first for a specific pair of items, you can use the <code>index</code> method on the list:</p>
<pre><code>a = ['cat', 'dog', 'fish']

a.index('cat') &lt; a.index('dog') # True
a.index('fish') &lt; a.index('dog') # False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>List of URLs:</p>
<pre><code>urls = ['A', 'B', 'C', 'D']
</code></pre>
<p>List of indices:</p>
<pre><code>index = range(len(urls))
</code></pre>
<p>Create the dict:</p>
<pre><code>order = dict(zip(urls, index))
</code></pre>
<p>Test:</p>
<pre><code>print(order['A'] &lt; order['B'])  # True
</code></pre>
<p><a href="http://tpcg.io/i6Wa5u" rel="nofollow noreferrer"><strong>Demo</strong></a></p>
</div>
<span class="comment-copy">@RoadRunner "We can assume that a given URL is met in the list no more than once."</span>
<span class="comment-copy">What you are looking for is <a href="https://docs.python.org/3.6/library/functions.html#enumerate" rel="nofollow noreferrer"><code>enumerate</code></a></span>
<span class="comment-copy"><code>dict(map(reversed, enumerate(urls)))</code></span>
<span class="comment-copy">This would have to traverse the list twice for each comparison. Whereas OP's dictionary index mapping only requires one traversal overall.</span>
<span class="comment-copy">The original question isn't clear on the requirement: <code>determine which of two URLs is before in the list.</code> If the urls are coming from outside the list, then this is a perfectly good approach.</span>
