<div class="post-text" itemprop="text">
<p>I am writing code for an assignment based on given pseudocode, but I keep getting this error message:</p>
<blockquote>
<p>'int' object is not subscriptable</p>
</blockquote>
<p>I'm not sure what it means or where I went wrong even after searching what the error means.</p>
<p><strong>My assignment:</strong> </p>
<p>In a class with students <code>n &gt;= 2</code>, a bully is a student who is afraid of no one in the class but every other person in the class is afraid of the bully. You are asked to determine if there is a bully in a class. In your task, you are allowed to consider any pair of students <code>(i, j)</code> and ask student <code>i</code> if they are afraid of student <code>j</code>. Although you are allowed to ask as many (possibly intersecting) pairs of students as you wish, your objective is to minimize the number of such questions you need to ask, since the interrogation process can be rather traumatic for bullied students. Assume that all students are truthful when asked.</p>
<p>We will represent the class as an <code>n</code>-by-<code>n</code> matrix <code>A</code>, where the entry <code>A[i][j]</code> is 1 if student <code>i</code> is afraid of student <code>j</code> and 0 otherwise. We will set <code>A[i][i]</code> as 0.</p>
<p>Note: "student is afraid of student" does not imply that student is a bully.</p>
<p><strong>Given pseudocode:</strong></p>
<pre><code>find_bully_2(A):
    initialise C as the list of all students
    candidate = find_candidate(C, A)
    if candidate is None:
        return None
    if everyone is afraid of candidate and candidate is afraid of no one:
        return candidate as bully
    else:
        return None
</code></pre>
<p>--</p>
<pre><code>find_candidate(C, A):
    if C has only one entry:
        return that entry
    else:
        pairs = len(C) // 2
        newC = []  # a list containing possible bullies
        for i in range(pairs):
            if first person in pair i is afraid of second person:
                add second person to newC
            else:
                add first person to newC
        if there are an odd number of students in C:
            add last student to newC
    return find_candidate(newC, A)
</code></pre>
<p><strong>What I wrote so far:</strong></p>
<pre><code>def find_bully_2(A):
    C = list(range(len(A)))

    candidate = find_candidate(C, A)

    if candidate == None:
        return None

    for i in range(n):
        for j in range(n):
            if A[i][candidate] == 1 and A[candidate][j] == 0:
                return candidate
            else:
                return None


def find_candidate(C, A):
    n = len(C)
    if n == 1:
        return C
    else:
        pairs = n // 2
        newC = []     
        for i in range(pairs):  # I'm really unsure from this line onwards
            if i[1] &gt; i[2]:
                newC.append(i[2])
            else:
                newC.append(i[1])

        if n % 2 != 0:
            newC.append(i[n-1])

    return find_candidate(newC, A)       
</code></pre>
<p>Please help me identify the error in my code so I can correct it!</p>
</div>
<div class="post-text" itemprop="text">
<p>In your second <code>for ... in</code> loop, <code>i</code> is an integer for every iteration of the loop. When you attempt to subscript the integer with <code>i[1]</code> in the line <code>if i[1] &gt; i[2]</code>, you should expect to get the error youâ€™re seeing.</p>
<p><code>range()</code> returns an immutable sequence of integers, as you can see in <a href="https://docs.python.org/3/library/stdtypes.html#range" rel="nofollow noreferrer">the documentation</a>.</p>
<p>You should not be subscripting an integer. Instead, it looks like you want to append the integers to your list <code>newC</code>.</p>
</div>
<span class="comment-copy">Your error traceback shows you where the error is. Unfortunately you have not posted it, and no-one is going to go through all that code to try and spot it.</span>
<span class="comment-copy">Welcome to SO. To maximise the number and helpfulness of responses, you need to provide a <b><a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a></b>. The key word, in this case, seems to be minimal. It really helps to pinpoint the bit of logic that seems to be not working.</span>
