<div class="post-text" itemprop="text">
<p>I want to create this tuple:</p>
<pre><code>a=(1,1,1),(2,2,2),(3,3,3),(4,4,4),(5,5,5),(6,6,6),(7,7,7),(8,8,8),(9,9,9)
</code></pre>
<p>I tried with this</p>
<pre><code>a=1,1,1
for i in range (2,10):
    a=a,(i,i,i)
</code></pre>
<p>However it creates a tuple inside other tuple in each iteration.</p>
<p>Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p>Use an extra comma in your tuples, and just join:</p>
<pre><code>a = ((1,1,1),)
for i in range(2,10):
    a = a + ((i,i,i),)
</code></pre>
<p><strong>Edit</strong>: Adapting juanpa.arrivillaga's comment, if you want to stick with a loop, this is the right solution:</p>
<pre><code>a = [(1,1,1)]
for i in range (2,10):
    a.append((i,i,i))
a = tuple(a)   
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can declare it without having to use a loop.</p>
<pre><code>a = tuple((i,)*3 for i in range(1, 10))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/itertools.html#itertools.repeat" rel="nofollow noreferrer"><code>itertools.repeat</code></a> can also be used here: </p>
<pre><code>&gt;&gt;&gt; from itertools import repeat
&gt;&gt;&gt; [tuple(repeat(i, 3)) for i in range(1, 10)]
[(1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5), (6, 6, 6), (7, 7, 7), (8, 8, 8), (9, 9, 9)]
</code></pre>
<p>If you want the final result to be in a tuple of tuples instead of a list of tuples, you can wrap <code>tuple</code> again:</p>
<pre><code>&gt;&gt;&gt; tuple(tuple(repeat(i, 3)) for i in range(1, 10))
((1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4), (5, 5, 5), (6, 6, 6), (7, 7, 7), (8, 8, 8), (9, 9, 9))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A tuple is an immutable list. It means once you create a tuple, it cannot be modified.
[Read more about tuples and other sequential data types here.][1]
So, if you really need to change a tuple during run time:</p>
<ol>
<li>Convert the tuple into a list</li>
<li>Make the necessary changes to the list</li>
<li>Convert the list back to a tuple</li>
</ol>
<hr/>
<p><strong>OR</strong></p>
<ol>
<li>Create a list</li>
<li>Modify the list</li>
<li><p>Convert the list into a tuple</p>

So, in your case:  
</li>
</ol>
<code>a = []
for i in range (1,10):
    a.append((i,i,i))
a = tuple(a)   
print a</code>
</div>
<div class="post-text" itemprop="text">
<p>A little experimentation got this working. I guess you need a comma after the tuple in a to convince python it is a tuple.</p>
<pre><code>a = ((1,1,1),)
for i in range(2, 10):
  a = a + ((i,i,i),)

print(a)
</code></pre>
</div>
<span class="comment-copy">if this is loop will be performance critical, you should <code>.append</code> into a list then use <code>tuple(a)</code> at the end.</span>
<span class="comment-copy">@juanpa.arrivillaga. or better yet, a deque</span>
<span class="comment-copy">It will work, but seems like a terrible way to do it.</span>
<span class="comment-copy">First case could start with empty tuple and have the range start with 1</span>
<span class="comment-copy">Thank you,  the true it is that I din't want exactly the tuple I posted, what I needed was to append in a tuple an x,y,z Choords of an array (Nx3), like this way <code>((x1,y1,z1),(x2,y2,z2)....(xn,yn,zn))</code> So, you script, it helps a lot.</span>
<span class="comment-copy">The second expression is a generator in Python 2.7, possibly earlier versions too: <a href="https://ideone.com/VqiW5J" rel="nofollow noreferrer">ideone.com/VqiW5J</a></span>
