<div class="post-text" itemprop="text">
<p>I have the following class for opening my websockets:</p>
<pre><code>import os
import asyncio  
import websockets
import threading

class Server:

    def get_port(self):
        return os.getenv('WS_PORT', '9002')

    def get_host(self):
        return os.getenv('WS_HOST', 'localhost')

    def shutdown(self):
        self.loop.call_soon_threadsafe(self.loop.stop)

    def start(self):
        return websockets.serve(self.handler, self.get_host(), self.get_port())
</code></pre>
<p>Followed by some async handling methods for incoming messages. The loop function for getting the messages runs in its own thread, just for information.</p>
<p>I am able to terminate the program, however I was not able to close the sockets properly, cause it causes the following error on the restart of the script</p>
<pre><code>OSError: [Errno 10048] error while attempting to bind on address ('127.0.0.1', 9002):
</code></pre>
<p>Since the port is already in use. Usually I would use some <code>.close()</code> function, however the websocket package does not provide such function, so I am wondering if I can get this done with the os package or the websocket package?</p>
</div>
<div class="post-text" itemprop="text">
<p>The proper shutdown process is discussed <a href="https://websockets.readthedocs.io/en/stable/deployment.html#graceful-shutdown" rel="nofollow noreferrer">here</a>. The basic idea is to use the <code>serve()</code> method as an async context manager.</p>
<pre><code>async with websockets.serve(echo, 'localhost', 9002):
    await stop
</code></pre>
<p>For example, <code>stop</code> can be a <code>Future</code>. The <code>await</code> "returns" when you call <a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.Future.set_result" rel="nofollow noreferrer"><code>stop.set_result()</code></a>. The context manager will then shutdown the server gracefully.</p>
<p>Usually, you would use a signal handler to trigger the stop condition (an example is also included in the docs).</p>
<p>You also might get the error, when the socket is not opened with <code>socket.SO_REUSEADDR</code> by the framework. <a href="https://stackoverflow.com/questions/14388706/socket-options-so-reuseaddr-and-so-reuseport-how-do-they-differ-do-they-mean-t">See this question for details.</a></p>
</div>
<span class="comment-copy">Thank you, your mentioned solution did not work for me, since I am on windows. However your provided link showed a solution, which worked, thank you</span>
