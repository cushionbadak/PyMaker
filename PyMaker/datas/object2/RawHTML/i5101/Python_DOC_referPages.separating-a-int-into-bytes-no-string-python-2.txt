<div class="post-text" itemprop="text">
<p>Basically I want to separate an int, let's say 77121980 into bytes more or less having the following structure (0x04, 0x98, 0xc9, 0xbc) No Strings. or at least (4, 152, 201, 188). but so far i have only found methods like hex()</p>
</div>
<div class="post-text" itemprop="text">
<p>In python 3 you can use <a href="https://docs.python.org/3/library/stdtypes.html#int.to_bytes" rel="nofollow noreferrer"><code>int.to_bytes</code></a>:</p>
<pre><code>&gt;&gt;&gt; (77121980).to_bytes(4, 'big')
b'\x04\x98\xc9\xbc'
</code></pre>
<p>If you want the values:</p>
<pre><code>&gt;&gt;&gt; _bytes = (77121980).to_bytes(4, 'big')
&gt;&gt;&gt; tuple(_bytes)
(4, 152, 201, 188)
</code></pre>
<p>If you're in python 2 you can use <a href="https://docs.python.org/2/library/struct.html#struct.pack" rel="nofollow noreferrer"><code>struct.pack</code></a> which is limited in width (see packing <a href="https://docs.python.org/2/library/struct.html#format-characters" rel="nofollow noreferrer">possibilities</a>):</p>
<pre><code>&gt;&gt;&gt; import struct
&gt;&gt;&gt; struct.pack('&gt;i', 77121980)
b'\x04\x98\xc9\xbc
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use binary <code>&amp;</code> and bitshift operators</p>
<pre><code>i = 77121980
b = []
while i &gt; 0:
    b.append(i &amp; 0xff)
    i &gt;&gt;= 8
b = b[::-1]

b           # [4, 152, 201, 188]
</code></pre>
<p>starting with the original number, this appends the rightmost byte to a list <code>b</code>, then shifts right until there are no more bits to shift. Since we are collecting bytes right to left, the resulting list is in reverse order but you can easily flip that around using slicing or <code>reversed</code>.</p>
</div>
<span class="comment-copy">this will only work in python3</span>
<span class="comment-copy">@avigil added note, thanks :)</span>
