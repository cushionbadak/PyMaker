<div class="post-text" itemprop="text">
<p>I just wrote some code which should go through each line of a file and should call another function if the number after the first word of the line is a 1.</p>
<p>The file looks like this:<br/>
Button0 1<br/>
Button1 0<br/>
Motion 0<br/>
Order 0</p>
<p>My code:</p>
<pre><code>currLog = open(log,"r") #Open current Log-File
    for line in currLog:    #Loop through each Line
        pos = line.split(" ")   #Split line into Name(pos0) and Answer(pos1)
        print(pos[1])
        if (pos[1] == "0"):
            print("Button0")
</code></pre>
<p>Shell-Ouput:</p>
<pre><code>1

0

0

0

Button0
</code></pre>
<p>Like you see it only enters the if-statement at the last line</p>
<p>Already thankful for help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have a new line character that you need to account for. If you print the entire pos variable, you will see the following output:</p>
<pre><code>['Button0', '1\n']
['Button1', '0\n']
['Motion', '0\n']
['Order', '0']
</code></pre>
<p>Your solution would either be to account for the new line character (remove it prior to splitting on " ") or use the .split() string function. Using split() without a separator will also account for consecutive, and trailing whitespace characters. The <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow noreferrer">Python docs</a> explain it very well. </p>
<blockquote>
<p>str.split(sep=None, maxsplit=-1) Return a list of the words in the
  string, using sep as the delimiter string. If maxsplit is given, at
  most maxsplit splits are done (thus, the list will have at most
  maxsplit+1 elements). If maxsplit is not specified or -1, then there
  is no limit on the number of splits (all possible splits are made).</p>
<p>If sep is given, consecutive delimiters are not grouped together and
  are deemed to delimit empty strings (for example, '1,,2'.split(',')
  returns ['1', '', '2']). The sep argument may consist of multiple
  characters (for example, '1&lt;&gt;2&lt;&gt;3'.split('&lt;&gt;') returns ['1', '2',
  '3']). Splitting an empty string with a specified separator returns
  ['']. </p>
<p>For example:</p>
<p>'1,2,3'.split(',') ['1', '2', '3']
  '1,2,3'.split(',', maxsplit=1) ['1', '2,3']
  '1,2,,3,'.split(',') ['1', '2', '', '3', ''] </p>
<p>If sep is not specified or is None, a different splitting algorithm is applied: runs
  of consecutive whitespace are regarded as a single separator, and the
  result will contain no empty strings at the start or end if the string
  has leading or trailing whitespace. Consequently, splitting an empty
  string or a string consisting of just whitespace with a None separator
  returns [].</p>
<p>For example:</p>
<p>'1 2 3'.split() ['1', '2', '3']
  '1 2 3'.split(maxsplit=1) ['1', '2 3']
  '   1   2   3   '.split() ['1', '2', '3']</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>It looks like it is getting the end of line character in the second string as well. From the output it seems that it is printing "1\n\n" effectively. Python's print statement automatically adds one return, so the string it is printing must contain the other one. </p>
<p>I'm seeing two easy solutions to your problem:</p>
<p><code>if (not int(pos[1]))</code></p>
<p>This option parses the input string into just the integer and as Python interprets anything that isn't '0', 'NULL' or "" as false we can invert it and get a true value for 0.</p>
<p><code>if (pos[1][0] == "0")</code></p>
<p>Since the string your comparing has the return character at the end it isn't equal to 0. If you just grab the first character of the string you should be able to get just the "0" and be able to compare it the way you're wanting.</p>
</div>
<span class="comment-copy">If I run this, it prints <code>Button0</code> zero times. That's because <code>line.split(" ")</code> doesn't discard the newline so none of the <code>pos[1]</code> are <code>"0"</code>, rather <code>"0\n"</code>. Use <code>line.split()</code> instead.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/21667511/string-comparison-fails">String comparison fails</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/25253120/python-split-string-by-space-and-strip-newline-char">Python split string by space and strip newline char</a></span>
<span class="comment-copy">Ladies and gentleman, while this is not a great question and an obvious dupe, it's pretty durned good for a new SO user. Includes code, sample input, etc. Especially for a tag like Python. So perhaps be kind with DVs?</span>
<span class="comment-copy">@Konstantin don't sweat it, we were all new once.</span>
