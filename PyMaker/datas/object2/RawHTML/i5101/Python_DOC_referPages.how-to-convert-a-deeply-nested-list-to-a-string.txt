<div class="post-text" itemprop="text">
<p>If I make a deeply nested list, like this:</p>
<pre><code>arr = [1]
for i in range(1000):
    arr = [arr]
</code></pre>
<p>then</p>
<pre><code>print(arr)
</code></pre>
<p>will work fine, but</p>
<pre><code>str(arr)
</code></pre>
<p>fails miserably with maximum recursion depth exceeded. (<code>"%s" % arr</code>, and <code>repr(arr)</code> too.)</p>
<p>How could I get the string that print prints? And what is the underlying reason for the difference? </p>
</div>
<div class="post-text" itemprop="text">
<p>Just to state (one of) the obvious :) (Clearly, we could add handling for more nested instances other than lists, as well.)</p>
<pre class="lang-py prettyprint-override"><code>arr = [1]
for i in range(1000):
  arr = [arr]

def showNested(arr):
  stack = [arr]
  s = ''

  while stack:
    curr = stack.pop()

    if isinstance(curr, list):
      s = s + '['
      stack.append(']')

      for v in curr:
        stack.append(v)

    else:
      s = s + str(curr)

  return s
</code></pre>
<p>Output:</p>
<pre class="lang-py prettyprint-override"><code>print(showNested(arr)) # Python 3.6.1   Where's Waldo?
=&gt
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can increase the <a href="https://docs.python.org/3/library/sys.html#sys.setrecursionlimit" rel="nofollow noreferrer">recursion limit</a>. But this safeguard is there for a  reason. Are you sure this is what you want to do?</p>
<pre><code>import sys

sys.setrecursionlimit(2000)

arr = [1]
for i in range(1000):
    arr = [arr]

str(arr)
</code></pre>
</div>
<span class="comment-copy">I get RecursionError with <code>print</code>, too. Does <code>repr(arr)</code> work?</span>
<span class="comment-copy">Nice. In python 2.7 print works. In 3.5, as you mentioned, it also fails with RecursionError.</span>
<span class="comment-copy">Well, now that you say, it's pretty much obvious. There remains only a rhetoric question. Why is there a difference in 2.7 print and repr.</span>
<span class="comment-copy">@vagoston Sorry, I forgot about showing commas :) Might need a little more work...maybe as exercise for the reader?</span>
<span class="comment-copy">I would not dare to use such a code. It's just pure curiosity. Somehow, print in python 2.7 manages to overcome the maximum recursion problem. I would like to understand how. Certainly not with increasing recursion limit.</span>
<span class="comment-copy">@vagoston, understood. I put the disclaimer there to discourage other users who might attempt the same. I can't help with an explanation on <code>print</code> discrepancy in Python 2.7.</span>
