<div class="post-text" itemprop="text">
<p>I am following this tensorflow <a href="https://www.tensorflow.org/get_started/get_started_for_beginners" rel="nofollow noreferrer">tutorial</a> after two days setting up the environment I finally could run <code>premade_estimator.py</code> using cmd</p>
<p><a href="https://i.stack.imgur.com/DmlmX.png" rel="nofollow noreferrer"><img alt="" src="https://i.stack.imgur.com/DmlmX.png"/></a></p>
<p>but when I try to run the same code in a jupyter notebook I am getting this error:</p>
<blockquote>
<pre><code>usage: ipykernel_launcher.py [-h] [--batch_size BATCH_SIZE]
                             [--train_steps TRAIN_STEPS]

ipykernel_launcher.py: error: unrecognized arguments: -f C:\Users\david\AppData\Roaming\jupyter\runtime\kernel-4faecb24-6e87-40b4-bf15-5d24520d7130.json
</code></pre>
<p>An exception has occurred, use %tb to see the full traceback.</p>
<pre><code>SystemExit: 2

C:\Anaconda3\envs\python3x\lib\site-packages\IPython\core\interactiveshell.py:2918: 
UserWarning: To exit: use 'exit', 'quit', or Ctrl-D. warn("To exit: use 'exit', 'quit', or Ctrl-D.", stacklevel=1)
</code></pre>
</blockquote>
<p>I have tried to fix it without success using:</p>
<pre><code>pip install --ignore-installed --upgrade jupyter

pip install ipykernel
python -m ipykernel install

conda install notebook ipykernel
ipython kernelspec install-self
</code></pre>
<p>Any idea will be appreciate! Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>I got it! the reason why we get the error is because this code is using <a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer"><code>argparse</code></a> and this module is used to write user-friendly command-line interfaces, so it seems, it has a conflict with Jupyter Notebook.</p>
<p>I found the solution in this <a href="https://qiita.com/LittleWat/items/6e56857e1f97c842b261" rel="nofollow noreferrer">page</a>:</p>
<p>What we have to do is:</p>
<p>Delete or comment these lines:</p>
<pre><code>parser = argparse.ArgumentParser()
parser.add_argument('--batch_size', default=100, type=int, help='batch size')
parser.add_argument('--train_steps', default=1000, type=int,
                    help='number of training steps')
</code></pre>
<p>and replace <code>args</code></p>
<pre><code>args = parser.parse_args(argv[1:])
</code></pre>
<p>for a dictionary using the library <a href="https://pypi.python.org/pypi/easydict/" rel="nofollow noreferrer"><code>easydict</code></a> in this way:</p>
<pre><code>args = easydict.EasyDict({
    "batch_size": 100,
    "train_steps": 1000
})
</code></pre>
<p>With <code>easydict</code> we can access dict values as attributes for the arguments.</p>
<p><strong>Update</strong></p>
<p>After all this year diving deeper in python, I found the solution for this question is way more simple (We don't need to use any external library or method). <code>argparse</code> is just one of the many ways to pass arguments to a script in python from the terminal. When I tried to do it in a jupyter notebook obviously that wasn't going to work. We can just replace in the function directly the parameters like:</p>
<pre><code>funtion(batch_size=100, train_steps=1000)
</code></pre>
<p>Now, if we have a long list of parameters for our function, we can use <code>*args</code> or <code>**kargs</code>.</p>
<p><code>*args</code> pass a tuple as parameters in the function, for this case, in particular, it will be:</p>
<pre><code>args = (100, 1000)
function(*args)
</code></pre>
<p><code>**kargs</code> pass a dictionary as arguments to our function:</p>
<pre><code>args = {"batch_size": 100,
        "train_steps": 1000}
function(**args)
</code></pre>
<p>just google it and you will find a really good explanation on how to use them both, here one <a href="http://book.pythontips.com/en/latest/args_and_kwargs.html" rel="nofollow noreferrer">documentation</a> that I used to study this.</p>
</div>
<div class="post-text" itemprop="text">
<p>A more elegant solution would be:</p>
<pre><code>args = parser.parse_known_args()[0]
</code></pre>
<p>instead of </p>
<pre><code>args = parser.parse_args()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Have you tried :</p>
<pre><code>conda install ipykernel --name Python3
python -m ipykernel install
</code></pre>
</div>
<span class="comment-copy">Thanks a lot! Encountered the same problem and this post helped me resolve it.</span>
<span class="comment-copy">Or just use <code>parser.parse_args(args=[])</code>, because <code>parse_args()</code> will pass <code>_sys.argv[1:]</code> as <code>args</code>'s default parameter, replace it with empty list <code>[]</code> solve this problem.</span>
<span class="comment-copy">parser.parse_args('') also worked for me</span>
<span class="comment-copy">I just tried and it showed me: <code>All requested packages already installed.</code></span>
<span class="comment-copy">Have you also upgraded the kernel? pip install --upgrade ipykernel</span>
<span class="comment-copy">Yes I did, I am reading the documentation for <code>argparse</code> to see if there is the problem.</span>
<span class="comment-copy">Are you trying to run the premade_estimator.py from a jupyter notebook or are you copying the script contents to a cell in the notebook?</span>
<span class="comment-copy">@MiltonArangoG I am copying the script contents to a cell in a notebook.</span>
