<div class="post-text" itemprop="text">
<p>What is the proper way to call a method at a certain time (certain time here is a parameter)?</p>
<p>I need the timer, but is it necessary to represent incoming time and <code>time.now()</code> in seconds to get and to use the difference between them?</p>
<p>The code:</p>
<pre><code>import datetime, time
import threading
from threading import Timer

def doItThen():
    print ("did it")

def launchTimer(dateAndTime):
    dateTimeNow = datetime.datetime.now()
    t = threading.Timer((dateAndTime-dateTimeNow).seconds, doItThen)
    t.start()

if __name__ == "__main__":

    launchTimer(datetime.datetime(2018, 2, 21, 8, 27, 51))
</code></pre>
<p>the result:</p>
<blockquote>
<p>did it</p>
</blockquote>
<p>(works)</p>
<p>but what are the risks in using this approach? im not good in testing or predicting the weeknesses</p>
</div>
<div class="post-text" itemprop="text">
<p>If I understand your question correctly, the module <a href="https://github.com/dbader/schedule" rel="nofollow noreferrer">schedule</a> might be what you are looking for.</p>
<p><a href="https://stackoverflow.com/questions/373335/how-do-i-get-a-cron-like-scheduler-in-python">How do I get a Cron like scheduler in Python?</a></p>
<pre><code>import schedule
import time 
def job(): 
    print("I'm working...")     

schedule.every(10).minutes.do(job)
schedule.every().hour.do(job) 
schedule.every().day.at("10:30").do(job) 
while 1: 
    schedule.run_pending()
    time.sleep(1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use <a href="https://github.com/dbader/schedule" rel="nofollow noreferrer">python schedule</a></p>
<blockquote>
<p>schedule.every().day.at("10:10").do(job)</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>Check out <code>scheduler.enterabs</code> from Python's <a href="https://docs.python.org/3/library/sched.html" rel="nofollow noreferrer">Sched lib</a>.</p>
<p>The <code>enterabs</code> function allows you to set a specific time to call a function.  Here's a <a href="https://docs.python.org/3/library/sched.html#sched.scheduler.enterabs" rel="nofollow noreferrer">direct link</a>.</p>
<p>The basic syntax is as follows:</p>
<pre><code>scheduler.enterabs(time, priority, action, argument=(), kwargs={})
</code></pre>
</div>
<span class="comment-copy">Try the method you propose and edit your post to include the result</span>
<span class="comment-copy">I am thinking about using this kind of the routine: t1 = datetime (2010, 1, 1, 1, 1, 1) // t2 = datetime.now() // t = threading.Timer((t1-t2).seconds, doItThen) // t.start() ... don't know if it's a proper way to do it</span>
<span class="comment-copy">Try it, and then edit your post to include the result.</span>
<span class="comment-copy">Done. But what are the risks in using this approach?</span>
<span class="comment-copy">I need to call a method at a random time. It's not periodic or predictable.</span>
<span class="comment-copy">explaint what exactly you are going to do by this. also you can make a random timestamps and pu it in a list like [1518942118,1518942125,...] then run it with schedule</span>
