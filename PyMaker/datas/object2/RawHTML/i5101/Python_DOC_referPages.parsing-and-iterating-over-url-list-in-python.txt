<div class="post-text" itemprop="text">
<pre><code>website_list = [
    'https://www.zillow.com/62347390?location=Chicago%2N%23253',
    'https://www.zillow.com/82983250?location=Boston%3B%53324',
    'https://www.zillow.com/12917837?location=Miami%7K%26345',
]
</code></pre>
<p>How does one create a python function (e.g. <code>city_finder()</code>) such that we get the following output when given <code>website_list</code> as input?</p>
<pre><code>&gt;&gt;&gt; city_finder(website_list)
['Chicago', 'Boston', 'Miami']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The previous answers assume that the format of the URLs will not change. Using regular expressions does not account for unexpected URL forms.</p>
<p>To handle changes in the URL format, use the <code>urllib.parse</code> module, whose documentation is <a href="https://docs.python.org/3/library/urllib.parse.html" rel="nofollow noreferrer">here</a>.</p>
<p>Namely, use the <code>urlparse()</code> function, which can parse a URL into its components. The component you want is the "query component," which is exposed by <code>urlparse()</code> as a dictionary. The value associated with the <code>location</code> key will be a list containing, for example, <code>'Chicago%2N%23253'</code>. Finally, extract the substring before the first <code>%</code>.</p>
<p>Here's a code snippet:</p>
<pre><code>from urllib.parse import urlparse, parse_qs

def city_finder(links)
    cities = []
    for url in links:
        query = parse_qs(urlparse(url).query)
        cities.append(query['location'][0].split('%')[0])
    return cities
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use str.find() to find the index location of "location=" and of the "%" following the name of the city. Use a list compehension to loop through the url list:</p>
<pre><code>def city_finder(website_list)
    return [site[site.find("location=")+9:site.find("%")] for site in website_list]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>re</code> module to find word following <code>location=</code> from each item in <code>website_list</code>. Use <code>append</code> to add retrieved location to <code>city</code> list and <code>return</code> it.</p>
<pre><code>import re
website_list = ['https://www.zillow.com/62347390?location=Chicago%2N%23253', 'https://www.zillow.com/82983250?location=Boston%3B%53324', 'https://www.zillow.com/12917837?location=Miami%7K%26345']
regexp = re.compile("location=(.*)%")
city = []
def city_finder(website_list):
    for lists in website_list:
        city.append((regexp.search(lists).group(1).split('%')[0]))
    return(city)
print city_finder(website_list)
</code></pre>
<p>Outputs:
Â </p>
<pre><code>['Chicago', 'Boston', 'Miami']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As per my comment, you could use</p>
<pre><code>import re

website_list = [
    'https://www.zillow.com/62347390?location=Chicago%2N%23253',
    'https://www.zillow.com/82983250?location=Boston%3B%53324',
    'https://www.zillow.com/12917837?location=Miami%7K%26345',
]

def city_finder(lst=None):
    rx = re.compile(r'location=([^%]+)')
    return [city.group(1) 
            for item in lst 
            for city in [rx.search(item)]
            if city]

print(city_finder(website_list))
</code></pre>
<p>Which yields</p>
<pre><code>['Chicago', 'Boston', 'Miami']
</code></pre>
</div>
<span class="comment-copy">You could use a simple regular expression like <code>location=([^%]+)</code> and grab the first group, see <a href="https://regex101.com/r/aSJxn7/1" rel="nofollow noreferrer">regex101.com/r/aSJxn7/1</a></span>
