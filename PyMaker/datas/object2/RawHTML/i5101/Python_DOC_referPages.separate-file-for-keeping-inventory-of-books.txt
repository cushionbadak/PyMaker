<div class="post-text" itemprop="text">
<p>I have a program that is basically a library simulation, you can look up books, edit, delete, etc.</p>
<p><strong>In my program I've initialized some default books into a class such as this:</strong></p>
<pre><code>class BookData:
    def __init__(self):
        self.bookTitle = ''
        self.isbn = ''
        self.author = ''
        self.publisher = ''
        self.dateAdded = ''
        self.quantity = 0.0
        self.wholesale = 0.0
        self.retail = 0.0


def __str__(self):
    return 'Title: {} ISBN: {} Author: {} ' \
           'Publisher: {} Date Added: {} ' \
           'Quantity: {} Wholesale Value: {} ' \
           'Retail Value: {}'.format(self.bookTitle, self.isbn, self.author, self.publisher, self.dateAdded,
                                     self.quantity, self.wholesale, self.retail)
</code></pre>
<p><strong>An example of a book I have stored in the program:</strong></p>
<pre><code>book0.bookTitle, book0.isbn, book0.author, book0.publisher, book0.dateAdded, book0.quantity, book0.wholesale, book0.retail = "INTRODUCING PYTHON", "978-1-4493-5936-2", "Bill Lubanovic", "O'Reilly Media, Inc.", "11/24/2014", 25, 39.95, 50.00
</code></pre>
<p>Each book then gets appended into a list.</p>
<p><strong>What I want to do</strong> is store all the books into a separate file so that it can be updated and edited within that file, but I don't quite get how to properly open the file, read each part (such as title, isbn, author) then in the main program make those into BookData objects and put them into a list.</p>
<p>I've considered either a plain .txt document with commas to format. I don't know if something like JSON or XML will make this easier.</p>
<p><strong>Psuedo code example:</strong></p>
<pre><code>open(file):
for word in file:
create book with title, author, isbn, etc in file
append to list of books
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python natively supports CSV (comma separated values) files: <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer">Python documentation</a></p>
<p>An example would be:</p>
<pre><code>import csv
books = []
with open('file.csv', newline = '') as csvfile: 
    reader = csv.reader(csvfile)
    for row in reader:
        book = BookData()
        book.bookTitle = row[0]
        book.isbn = row[1] 
</code></pre>
<p>However, that being said, it may be more constructive to change your constructor (ha ha) to take in a row, and then assign it directly:</p>
<pre><code>def __init__(self, row):
    self.bookTitle = row[0]
</code></pre>
</div>
<span class="comment-copy">And what is the question then? Is it how to open files and read data or which format of storing data to use?</span>
<span class="comment-copy">Both. How to tackle this issue (JSON, .txt., XML) and how can I read the file then translate it back into being a book with all the class attributes.</span>
<span class="comment-copy">So would the file have one book per line, with each attribute seperated by commas?</span>
<span class="comment-copy">Yep! For example:  <code>A Wrinkle in Time,Madeleine L'Engle,....</code> <code>"The Lion, The Witch and the Wardrobe",C. S. Lewis, ...</code> (Note the need for quoting fields which have commas in them)  And the benefit of this method is that you can easily open it in software like Microsoft Excel! :)</span>
