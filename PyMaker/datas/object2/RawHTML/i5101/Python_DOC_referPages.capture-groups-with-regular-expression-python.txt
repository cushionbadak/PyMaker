<div class="post-text" itemprop="text">
<p>Kind of a noob here, apologies if I misstep. </p>
<p>I'm learning regular expressions and am on this lesson:
<a href="https://regexone.com/lesson/capturing_groups" rel="noreferrer">https://regexone.com/lesson/capturing_groups</a>. </p>
<p>In the python interpreter, I try to use the parentheses to only capture what precedes the .pdf part of the search string but my result captures it despite using the parens. What am I doing wrong? </p>
<pre><code>import re
string_one = 'file_record_transcript.pdf'
string_two = 'file_07241999.pdf'
string_three = 'testfile_fake.pdf.tmp'

pattern = '^(file.+)\.pdf$'
a = re.search(pattern, string_one)
b = re.search(pattern, string_two)
c = re.search(pattern, string_three)

print(a.group() if a is not None else 'Not found')
print(b.group() if b is not None else 'Not found')
print(c.group() if c is not None else 'Not found')
</code></pre>
<p>Returns</p>
<pre><code>file_record_transcript.pdf
file_07241999.pdf
Not found
</code></pre>
<p>But should return</p>
<pre><code>file_record_transcript
file_07241999
Not found
</code></pre>
<p>Thanks!</p>
</div>
<div class="post-text" itemprop="text">
<p>You need the <em>first</em> captured group:</p>
<pre><code>a.group(1)
b.group(1)
...
</code></pre>
<p>without any captured group specification as argument to <a href="https://docs.python.org/3/library/re.html#match-objects" rel="noreferrer"><code>group()</code></a>, it will show the full match, like what you're getting now.</p>
<p>Here's an example:</p>
<pre><code>In [8]: string_one = 'file_record_transcript.pdf'

In [9]: re.search(r'^(file.*)\.pdf$', string_one).group()
Out[9]: 'file_record_transcript.pdf'

In [10]: re.search(r'^(file.*)\.pdf$', string_one).group(1)
Out[10]: 'file_record_transcript'
</code></pre>
</div>
<span class="comment-copy">Thanks! That was what I was looking for</span>
