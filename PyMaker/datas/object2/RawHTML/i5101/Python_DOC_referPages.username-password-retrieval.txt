<div class="post-text" itemprop="text">
<p>I am creating an app in Kivy. I am creating a login page that allows users to enter a password and user name in order to verify that they have previously used my application. I am storing usernames and passwords in a MySQL database called 'users', and the table is called 'login' that stores their username and password information in two columns. I am using the pymysql library to interact with my Python code and my MySQL database. </p>
<p>In my Python code I am using the fetchall() method to get all of the username and password columns and rows from MySQL, and storing that data in a variable. When I print out that data I get a list of a dictionary that displays the following:</p>
<pre><code>      [{'username': 'sample_username', 'password': 'sample_password'},
       {'username': 'sample_username2', 'password': 'sample_password2'}]
</code></pre>
<p>As you can see in MySQL I created a couple sample usernames and sample passwords that when using the fetchall() method are stored within a dictionary within a list. </p>
<p>Next I created in Kivy a textinput box for username, and a textinput box for 
password. I stored the user input in variables for username and password like below:</p>
<pre><code>   self.username = self.ids.textinput_username.text
   self.password = self.ids.textinput_username.text
</code></pre>
<p>Then after I use the fetchall() method I check to see whether or not the username and password that the user entered match a username or password that is already in my code. </p>
<pre><code>   if self.username in results:
              print("That username is stored")
   if self.password in results:
              print("That is a valid password")
</code></pre>
<p>However, that code is not returning anything at all. It is as if Python cannot 
track the username that was entered by the user, and cannot check to see if it is in the results that I get after using the fetchall method. I even tried storing the results in a list, and then asking Python to check if the username and password string are anywhere in the list. </p>
<pre><code>    login_list = []
    for record in results:
           login_list.append(record)
    if self.username in login_list:
            print("That username is valid")
    if self.password in login_list:
            print("That password is valid")
</code></pre>
<p>However, I get the same issue when I enter that. Python does nothing, and will not perform the conditional statement. I am connect to pymysql and my MySQL database, and stored all of my login information in a module and imported it. I know that I am properly connected because when I print the dictionary within the list, It gets me all of the information that I stored in MySQL. Here is my full code below, minus the imports: </p>
<pre><code>class WelcomeScreen(Screen):
      #A basic welcome screen. All of the functionality is in the .kv file
      pass


class LoginScreen(Screen):
        '''
         Model a screen for the user to enter a username
         and password.
         '''



        def store_username_password(self):
                '''
                get the username and password from textinput.
                Check to see if the username and password is
                stored in mysql database. If not, give the
                user an error message
                '''
               #Create a variable to store the username entered in textinput
               self.username = str(self.ids.textinput_username.text)
               #Create a variable to store the password entered in textinput
               self.password = str(self.ids.textinput_password.text)

              #select the login table from the patient_support database
              cur.execute("""SELECT * FROM login""")
              #Use the fetchall method of the cursor object to get the info
              results = cur.fetchall()


              #If username and password entered in results, print statements

              if self.username in results:
                      print("That is a valid username")

              if self.password in results:
                      print("That is a valid password")























         class ScreenManagement(ScreenManager):
               pass 

         presentation = Builder.load_file("patientsupport.kv")




















             class PatientSupport(App):
                   def build(self):
                   return presentation

             if __name__=='__main__':
                    PatientSupport().run()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>According to the <a href="https://docs.python.org/3/reference/expressions.html#membership-test-operations" rel="nofollow noreferrer">docs</a>:</p>
<blockquote>
<p><code>x in s</code> evaluates to True if x <strong><em>is a member</em></strong> of s, and False otherwise.</p>
</blockquote>
<pre><code>records = [
    {
        'username': 'sample_username', 
        'password': 'sample_password'
    },
    {
        'username': 'sample_username2', 
        'password': 'sample_password2'
    }
]
</code></pre>
<p>The <em>members</em> of <code>records</code> are the two dicts, yet self.username is a str.  Because <code>records</code> has no str's that are <em>members</em>, self.username cannot be <code>in</code> the records list.</p>
<p>Instead, you need to do something like this:</p>
<pre><code>for record in records:
    if record["username"] == "sample_username":
       print("That username is stored")
    if record["password"] == "sample_password":
        print("That is a valid password")
</code></pre>
<p>Output:</p>
<pre><code>That username is stored
That is a valid password
</code></pre>
<p>(But note: that password is not valid for that username)</p>
<p>To check for a valid username and a matching password, you need to do this:</p>
<pre><code>for record in records:
    if (record["username"] == "sample_username" 
        and record["password"] == "sample_password"):

       print("Valid user!")
</code></pre>
<p>When you tried this:</p>
<pre><code>login_list = []
    for record in results:
           login_list.append(record)
</code></pre>
<p>all you did was move each dict into another list, and once again a <code>str</code> type is never going to be found <code>in</code> a list of <code>dict</code> types.  </p>
<p>If you had something like this:</p>
<pre><code>records = [
    {
        'username': 'sample_username', 
        'password': 'sample_password'
    },
    {
        'username': 'sample_username2', 
        'password': 'sample_password2'
    },

    "some string"
]
</code></pre>
<p>Then you would see the output 'yes':</p>
<pre><code>if "some string" in records:
       print("yes")
</code></pre>
<p>In this case, the three members of records are two dict's and a str.</p>
<p>The docs go on to say:</p>
<blockquote>
<p><code>in</code> tests whether the dictionary has a given key.</p>
</blockquote>
<p>That means you can write things like this:</p>
<pre><code>for record in records:
    if 'username' in record:
        print('yes')

--output:--
yes
yes
</code></pre>
<p>But that doesn't help you.</p>
</div>
<span class="comment-copy">Can you not describe absolutely each step, and only limit the question to the exact issue? As it is, it's kind of <i>tl;dr</i>. For example, if the results are fetched, then we don't care about that, so no need to have a whole paragraph dedicated for that. It's too verbose</span>
<span class="comment-copy">To get you pointed in the right direction, check out this CR thread: <a href="https://codereview.stackexchange.com/questions/124191/check-existence-of-a-row-then-update-a-column" title="check existence of a row then update a column">codereview.stackexchange.com/questions/124191/â€¦</a> . I suspect that your issue has something to do with checking for existence in your resultset, and the answers in this thread discuss how to use parameterized queries to increase efficiency, but also to perform similar tasks.</span>
<span class="comment-copy">You should not fetch all records and match then in Python. At least fetch only matching usernames (<code>SELECT * FROM users WHERE username=?</code>) from the database.</span>
<span class="comment-copy">Thank you so much for your help. That solved the problem, and really helped me learn to set up my for loop in a dictionary format, vs. just calling the string. That was a big help. Thank you.</span>
