<div class="post-text" itemprop="text">
<p>I am trying to code code that downloads a PDF from a URL. I found a method of doing this, but it was not written in Python 3 and used the <code>file()</code> function.</p>
<p>I tried replacing this with <code>open()</code> in the line <code>fp = open(path, 'rb')</code>.</p>
<p>However I get this error:</p>
<blockquote>
<p>TypeError: expected str, bytes or os.PathLike object, not HTTPResponse.</p>
</blockquote>
<p>I cant find a solution online. Any help would be appreciated. Here is the code:</p>
<pre><code>import bs4 as bs
import urllib.request
from urllib.request import urlopen
from pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter
from pdfminer.converter import TextConverter
from pdfminer.pdfpage import PDFPage
from pdfminer.layout import LAParams
from io import StringIO
from io import open

def convert_pdf_to_txt(path):
    rsrcmgr = PDFResourceManager()
    retstr = StringIO()
    codec = 'utf-8'
    laparams = LAParams()
    device = TextConverter(rsrcmgr, retstr, codec=codec, laparams=laparams)
    fp = open(path, 'rb')
    interpreter = PDFPageInterpreter(rsrcmgr, device)
    password = ""
    maxpages = 0
    caching = True
    pagenos=set()
    for page in PDFPage.get_pages(fp, pagenos, maxpages=maxpages, password=password,caching=caching, check_extractable=True):
        interpreter.process_page(page)
    fp.close()
    device.close()
    stri = retstr.getvalue()
    retstr.close()
    return stri

pdfFile = urlopen("http://pythonscraping.com/pages/warandpeace/chapter1.pdf");
outputString = convert_pdf_to_txt(pdfFile)

print(outputString)
pdfFile.close()
</code></pre>
<p>Resources used </p>
<p><a href="http://zempirians.com/ebooks/Ryan%20Mitchell-Web%20Scraping%20with%20Python_%20Collecting%20Data%20from%20the%20Modern%20Web-O" rel="nofollow noreferrer">http://zempirians.com/ebooks/Ryan%20Mitchell-Web%20Scraping%20with%20Python_%20Collecting%20Data%20from%20the%20Modern%20Web-O</a>'Reilly%20Media%20(2015).pdf
(page 101)</p>
<p><a href="https://stackoverflow.com/questions/26494211/extracting-text-from-a-pdf-file-using-pdfminer-in-python">Extracting text from a PDF file using PDFMiner in python?</a> 
(the top answer)</p>
</div>
<div class="post-text" itemprop="text">
<p>Rather than struggle with an obsolescent version of <code>pdfminer</code>, I'd advise using <code>pdfminer.six</code> which is a more recent fork of the <code>pdfminer</code> library that's compatible with Python 3.</p>
<pre><code>pip install pdfminer.six
</code></pre>
<p>You'll have to edit some of the <code>import</code> statements, but for the most part, the newer fork is a drop-in replacement. </p>
<p>So, now, after reading the body of the HTTP response (as per Adrian Tam's advice), you've got a PDF object. You can then call your conversion method with that object as a parameter:</p>
<pre><code>def convert_pdf_to_txt(pdf_obj):
    rsrcmgr = PDFResourceManager()
    retstr = StringIO()
    fp = BytesIO(pdf_obj)  #get a file-like binary object
    codec = 'utf-8'
    laparams = LAParams()
    device = TextConverter(rsrcmgr, retstr, codec=codec, laparams=laparams)
    interpreter = PDFPageInterpreter(rsrcmgr, device)
    password = ""
    maxpages = 0
    caching = True
    pagenos=set()
    for page in PDFPage.get_pages(fp, pagenos, maxpages=maxpages, password=password,caching=caching, check_extractable=True):
        interpreter.process_page(page)
    fp.close()
    device.close()
    stri = retstr.getvalue()
    retstr.close()
    print(stri)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Do this (you need to get bytes from a HTTP response object):</p>
<pre class="lang-python prettyprint-override"><code>pdfResponse = urlopen("http://pythonscraping.com/pages/warandpeace/chapter1.pdf");
outputString = convert_pdf_to_txt(pdfResponse.read())
</code></pre>
<p>See <a href="https://docs.python.org/3/library/http.client.html#httpresponse-objects" rel="nofollow noreferrer">https://docs.python.org/3/library/http.client.html#httpresponse-objects</a></p>
<p>But then you have to modify your <code>convert_pdf_to_txt</code> function to take raw data as input instead of file object, i.e., instead of</p>
<pre><code>def convert_pdf_to_txt(path):
   fp = open(path, 'rb')
   ...
   for page in PDFPage.get_pages(fp, ...)
</code></pre>
<p>You have to do:</p>
<pre><code>def convert_pdf_to_txt(rawbytes):
    import io
    fp = io.BytesIO(rawbytes)
    ...
    for page in PDFPage.get_pages(fp, ...)
</code></pre>
<p><code>io.BytesIO</code> helps you to convert a byte data into file-like byte streams (<a href="https://docs.python.org/3/library/io.html#binary-i-o" rel="nofollow noreferrer">https://docs.python.org/3/library/io.html#binary-i-o</a>) so you can afterwards pretend that as a file.</p>
<p>I didn't play with the PDF library before, but you may start in this direction.</p>
</div>
<span class="comment-copy">If you reference an outside resource in your question, especially one after which your code is closely modeled, it would be helpful to all parties if you linked to that resource.</span>
<span class="comment-copy">Also, please fix the indentation in your posted code. You should always check for correct indentation before posting your question.</span>
<span class="comment-copy">Also, post the full stack trace that you see when the <code>TypeError</code> is raised.</span>
<span class="comment-copy">Hey Thanks heaps for your response,  I now get   UnicodeDecodeError: 'utf-8' codec cant decode byte 0xc4 in position 10: invalid continuation byte</span>
<span class="comment-copy">Tried using a different pdf url, same error</span>
<span class="comment-copy">sorry, overlooked that part. Did some edit, hope that helps.</span>
