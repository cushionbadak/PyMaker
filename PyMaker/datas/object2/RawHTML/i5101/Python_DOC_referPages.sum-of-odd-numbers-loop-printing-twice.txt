<div class="post-text" itemprop="text">
<pre><code>M = eval(input("Input the first number "))
N = eval(input("Input the second number(greater than M) "))
sum = 0

    while M &lt;= N:
        if M % 2 == 1:
            sum = sum + M
            M = M + 1
            print(sum)
</code></pre>
<p>This is my python code, every time I run the program, it prints the number twice. (1 1 4 4 9 9 etc.) Just confused on why this happening - in intro to computer programming so any help is appreciated (dumbed down help)</p>
</div>
<div class="post-text" itemprop="text">
<p>My guess is the print statement is not indented inside the if statement properly. As the sum wont increase for an even number and every other number is even </p>
<p>Make sure you have everything indented properly</p>
<pre><code>M = eval(input("Input the first number "))
N = eval(input("Input the second number(greater than M) "))
sum = 0

while M &lt;= N:
    if M % 2 == 1:
        sum = sum + M
        print(sum)
    M = M + 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>My best bet would be to add M++ line after the scope of if statement.
What really is happening that your increment only works when it is inside the if statement but this is logically incorrect because it should increment everytime loop executes.</p>
</div>
<div class="post-text" itemprop="text">
<p>Get rid of <code>eval()</code> you <a href="https://stackoverflow.com/questions/9383740/what-does-pythons-eval-do">really do not need it.</a> and replace it with <a href="https://docs.python.org/3/library/functions.html#int" rel="nofollow noreferrer"><code>int()</code></a>.  By default <code>input()</code> is a string  by default so <code>int()</code> converts it to an integer.</p>
<p>You are using a reserved keyword <code>sum</code></p>
<p>Try running <code>sum.__doc__</code>.  You will see that <code>sum</code> is actually an <a href="https://docs.python.org/3/library/functions.html#sum" rel="nofollow noreferrer">inbuilt function</a>.  You should not create a variable the same name as an inbuilt function.  However you can use an underscore (described in <a href="https://www.python.org/dev/peps/pep-0008/" rel="nofollow noreferrer">pep8</a>) and this will create a working variable.</p>
<p><em>Corrected code:</em></p>
<pre><code>M = int(input("Input the first number "))
N = int(input("Input the second number(greater than M) "))
sum_ = 0

while M &lt;= N:
    if M % 2 == 1:
        sum_ = sum_ + M
        M = M + 1

        print(sum_)
</code></pre>
</div>
<span class="comment-copy">Yeah that was exactly it, thank so much for the help - still getting a hang on the syntax</span>
