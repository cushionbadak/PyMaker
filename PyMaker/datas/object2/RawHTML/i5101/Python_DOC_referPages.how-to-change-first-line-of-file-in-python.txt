<div class="post-text" itemprop="text">
<p>Why does Python-2.7 on Windows truncate a file? The problem is well known with <code>shutil.copyfile</code> but I don't understand how to avoid it when I'm changing the first line. File size is unknown and could be huge.</p>
<p>Reference below but I'd prefer better exception handling with something like the following code:</p>
<pre><code>import os
import sys
import shutil

with open(sys.argv[1], 'r+') as src:
    line = src.readline()
    with open(sys.argv[1], 'r+') as dst:
        dst.write = sys.argv[1]+'\n'
        shutil.copyfileobj(src, dst)
</code></pre>
<p>Reference: <a href="https://stackoverflow.com/questions/14947238/change-first-line-of-a-file-in-python">change first line of a file in python</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You need to create the new version of the file as a <a href="https://docs.python.org/3/library/tempfile.html#tempfile.NamedTemporaryFile" rel="nofollow noreferrer"><code>NamedTemporaryFile</code></a>.  After you finish constructing it, you then rename it on top of the old file.</p>
<h3>Code:</h3>
<pre><code>def insert_line_front(insert_filename, to_insert):

    with open(insert_filename) as src, tempfile.NamedTemporaryFile(
            'w', dir=os.path.dirname(insert_filename), delete=False) as dst:

        # Discard first line
        src.readline()

        # Save the new first line
        dst.write(to_insert + '\n')

        # Copy the rest of the file
        shutil.copyfileobj(src, dst)

    # remove old version
    os.unlink(insert_filename)

    # rename new version
    os.rename(dst.name, insert_filename)

    return()
</code></pre>
<h3>Test Code:</h3>
<pre><code>import os
import shutil
import sys
import tempfile

# For noob - Function code goes here

filename = os.path.abspath(sys.argv[1])
insert_line_front(filename, filename)
</code></pre>
<h3>Before:</h3>
<pre><code>/testcode/file1
"-3.588920831680E-02","1.601887196302E-01","1.302309112549E+02"
"3.739478886127E-01","1.782759875059E-01","6.490543365479E+01"
"3.298096954823E-01","6.939357519150E-02","2.112392578125E+02"
"-2.319437451661E-02","1.149862855673E-01","2.712340698242E+0
</code></pre>
<h3>After:</h3>
<pre><code>/testcode/file2
"-3.588920831680E-02","1.601887196302E-01","1.302309112549E+02"
"3.739478886127E-01","1.782759875059E-01","6.490543365479E+01"
"3.298096954823E-01","6.939357519150E-02","2.112392578125E+02"
"-2.319437451661E-02","1.149862855673E-01","2.712340698242E+0
</code></pre>
</div>
<span class="comment-copy">Opening a file for writing <i>always</i> truncates it, no matter Windows, Linux, OSX, Python or whatever. In your case, the only option is to create a new file, write the first new line into it, and then copy the original file to the end of the new file (the files must have different names).</span>
<span class="comment-copy">You have to open with a mode of something like <code>w+</code>.  Make sure the new first line is <i>exactly</i> the same length as the original (if its shorter then you will get some of the old line left, if it is longer then you will overwrite part of the second line).</span>
