<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/41860105/why-should-all-only-contain-string-objects">Why should __all__ only contain string objects?</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>I found myself using the following pattern in the <code>__init__.py</code> files:</p>
<pre><code>from tool.shed import shovel
from tool.shed import bucket

__all__ = [shovel, bucket]
</code></pre>
<p>The code like that works will all python versions that I have ever tried, but it seems that this is an accident. I have not seen it mentioned anywhere that <code>__all__</code> can be a list of objects (rather than strings), and also, this is reported as an error when running <code>mypy</code>:</p>
<p><code>Type of __all__ must be "Sequence[str]", not "List[object]"</code></p>
<p>Is there any reason why <code>__all__</code> should be list of strings? Or are objects ok too?</p>
</div>
<div class="post-text" itemprop="text">
<p>You will break <code>from mymod import *</code> by doing this. <code>__all__</code> isn't used otherwise.</p>
<pre><code>&gt;&gt;&gt; from a import *
Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "&lt;frozen importlib._bootstrap&gt;", line 1019, in _handle_fromlist
  File "&lt;frozen importlib._bootstrap&gt;", line 1014, in _handle_fromlist
TypeError: Item in a.__all__ must be str, not module
</code></pre>
</div>
<span class="comment-copy">The reason why <code>__all__</code> should be a list of strings is that it only works when it's a list of strings. The reason it should be a list of strings is because that's how <a href="https://docs.python.org/3/tutorial/modules.html#importing-from-a-package" rel="nofollow noreferrer">the documentation</a> says it works, and it works the way the documentation says. Non-strings are not OK because they aren't strings. The reason strings are required is that not all objects have an inherent name: if you say <code>[shovel, bucket]</code> you get the <i>values</i> of those names, and there may not be any way to get the names back from the values.</span>
<span class="comment-copy">@jwodder Sorry, it indeed is. I should have searched more carefully :(</span>
