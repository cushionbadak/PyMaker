<div class="post-text" itemprop="text">
<p>The goal was to create a list of all possible combinations of certain letters in a word... Which is fine, except it now ends up as a list of tuples with too many quotes and commas.</p>
<pre><code>import itertools

mainword = input(str("Enter a word: "))
n_word = int((len(mainword)))

outp = (list(itertools.permutations(mainword,n_word)))
</code></pre>
<p>What I want:</p>
<pre><code>[yes, yse, eys, esy, sye, sey]
</code></pre>
<p>What I'm getting:</p>
<pre><code>[('y', 'e', 's'), ('y', 's', 'e'), ('e', 'y', 's'), ('e', 's', 'y'), ('s', 'y', 'e'), ('s', 'e', 'y')]
</code></pre>
<p>Looks to me I just need to remove all the brackets, quotes, and commas.</p>
<p>I've tried:</p>
<pre><code>def remove(old_list, val):
  new_list = []
  for items in old_list:
    if items!=val:
        new_list.append(items)
  return new_list
  print(new_list)
</code></pre>
<p>where I just run the function a few times. But it doesn't work.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the join function . Below code works perfect .
I am also attach the screenshot of the output.</p>
<pre><code>import itertools

mainword = input(str("Enter a word: "))
n_word = int((len(mainword)))

outp = (list(itertools.permutations(mainword,n_word)))

for i in range(0,6):
  outp[i]=''.join(outp[i])

print(outp)
</code></pre>
<p><a href="https://i.stack.imgur.com/pucUt.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/pucUt.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can recombine those tuples with a comprehension like:</p>
<h3>Code:</h3>
<pre><code>new_list = [''.join(d) for d in old_list]
</code></pre>
<h3>Test Code:</h3>
<pre><code>data = [
    ('y', 'e', 's'), ('y', 's', 'e'), ('e', 'y', 's'),
    ('e', 's', 'y'), ('s', 'y', 'e'), ('s', 'e', 'y')
]

data_new = [''.join(d) for d in data]
print(data_new)
</code></pre>
<h3>Results:</h3>
<pre><code>['yes', 'yse', 'eys', 'esy', 'sye', 'sey']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You need to call <a href="https://docs.python.org/3/library/stdtypes.html#str.join" rel="nofollow noreferrer"><strong><code>str.join()</code></strong></a> on your string tuples in order to convert it back to a single string. Your code can be simplified with <em>list comprehension</em> as:</p>
<pre><code>&gt;&gt;&gt; from itertools import permutations
&gt;&gt;&gt; word = 'yes'

&gt;&gt;&gt; [''.join(w) for w in permutations(word)]
['yes', 'yse', 'eys', 'esy', 'sye', 'sey']
</code></pre>
<p>OR you may also use <a href="https://docs.python.org/3/library/functions.html#map" rel="nofollow noreferrer"><strong><code>map()</code></strong></a> to get the desired result as:</p>
<pre><code>&gt;&gt;&gt; list(map(''.join, permutations(word)))
['yes', 'yse', 'eys', 'esy', 'sye', 'sey']
</code></pre>
</div>
<span class="comment-copy">A side note: do not use <code>str("...")</code>, "Enter a word: " is already a string. Same about <code>int(len...))</code>. <code>len</code> already returns an int.</span>
<span class="comment-copy">"Looks to me I just need to remove all the brackets, quotes, and commas." no. You need to convert a list of tuples to a list of strings.</span>
<span class="comment-copy">I might add that it could be better to use a range up to the len of the list rather than just 6 since the mainword could have more or fewer letters.</span>
<span class="comment-copy">Yes you should use the len() function . I am just give the main logic .it&amp;#39;s up to you to make it generic ! Btw thanks ðŸ˜Š</span>
