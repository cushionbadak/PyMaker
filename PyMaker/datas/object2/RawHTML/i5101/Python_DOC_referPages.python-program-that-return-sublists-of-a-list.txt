<div class="post-text" itemprop="text">
<p>Please I want to design a function that return all possible subset of a list.  Here is the code I tried </p>
<pre><code>def mylist(list1):
    for I in list1:
        print(i)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just using iterative method for doing this as 
i looped from <code>0</code> to <code>2^(length of list)</code> and select each element based on the value of the loop counter</p>
<p>That is if the loop counter is 5 we select the first and third element </p>
<p>as 5 in binary is represented as <code>101</code> the we select the index elements with 1 in binary likewise for 7 we need first three elements <code>111</code> </p>
<pre><code>def mylist(list1):
    num=len(list1)
    result=[]
    for i in range(1&lt;&lt;num):
        temp=list()
        index=0
        while i:
            if i&amp;1==1:
                temp.append(list1[index])
            index+=1;
            i&gt;&gt;=1
        result.append(temp)
    return result

print(mylist([1,2,3]))
</code></pre>
<p><strong>OUTPUT</strong></p>
<pre><code>[[], [1], [2], [1, 2], [3], [1, 3], [2, 3], [1, 2, 3]]
</code></pre>
<p>also you might want convert this function to a generator as the returned list will be huge if the inputlist contains large number of values </p>
</div>
<div class="post-text" itemprop="text">
<p>If what you're looking for is the powerset, <a href="https://docs.python.org/3/library/itertools.html#recipes" rel="nofollow noreferrer">itertools' recipe page</a> has a nice, concise, memory-safe way to do that:</p>
<pre><code>from itertools import chain, combinations

def powerset(iterable):
    """
    powerset([1,2,3]) --&gt; () (1,) (2,) (3,) (1,2) (1,3) (2,3) (1,2,3)
    """
    s = list(iterable)

    # note that this returns an iterator rather than a list
    return chain.from_iterable(combinations(s,n) for n in range(len(s)+1))
</code></pre>
<p>Worth pointing out that finding a powerset is exponential O(2^n). Also, this question had been previously answered <a href="https://stackoverflow.com/questions/374626/how-can-i-find-all-the-subsets-of-a-set-with-exactly-n-elements">here</a>.</p>
</div>
<span class="comment-copy">can you please update your question to include an example input with the corresponding desired output?</span>
<span class="comment-copy">without an example output, try this: <a href="https://stackoverflow.com/questions/26332412/python-recursive-function-to-display-all-subsets-of-given-set" title="python recursive function to display all subsets of given set">stackoverflow.com/questions/26332412/…</a></span>
<span class="comment-copy">You basically want the power set...check here using itertools library: <a href="https://stackoverflow.com/questions/18035595/powersets-in-python-using-itertools" title="powersets in python using itertools">stackoverflow.com/questions/18035595/…</a></span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/374626/how-can-i-find-all-the-subsets-of-a-set-with-exactly-n-elements">How can I find all the subsets of a set, with exactly n elements?</a></span>
