<div class="post-text" itemprop="text">
<p>I want to add two values in one index of list like</p>
<pre><code>['18' 'PASS','19' 'FAIL','20' 'PASS','21' '' FAIL] 
</code></pre>
<p>and then put this value in excel sheet like  18th row put value 'PASS'.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to have multiple values in "one index of a list" you can simply use a list of tuples:</p>
<pre><code>myTupleList= [(1,"one"),(2,"two"),(3,"three")]
</code></pre>
<p>If you want to store something as excel table (which is in and of itself 2 dimensional), you would need at least 3 things: </p>
<pre><code>myData = [(row_1,column_1,data_1), ..., (row_n,col_n,data_n)]
</code></pre>
<p>to enable arbitary placement inside a excel workboot sheet.</p>
<p>Lets create some demo data:</p>
<pre><code>header = [ (0,idx,n) for idx,n in enumerate(["number","number^2","number^3"])] 

data = [ (n, 0, n) for n in range(0,30,3)]
data += [ (n, 1, n ** 2) for n in range(0,30,3)]
data += [ (n, 2, n ** 3) for n in range(0,30,3)]

# header: [(0, 0, 'number'), (0, 1, 'number^2'), (0, 2, 'number^3')]

# data: [(0, 0, 0),    (3, 0, 3),   (6, 0, 6),   (9, 0, 9),   (12, 0, 12), (15, 0, 15), 
#        (18, 0, 18),  (21, 0, 21), (24, 0, 24), (27, 0, 27), (0, 1, 0),   (3, 1, 9), 
#        (6, 1, 36),   (9, 1, 81),  (12, 1, 144),(15, 1, 225),(18, 1, 324),(21, 1, 441), 
#        (24, 1, 576), (27, 1, 729), (0, 2, 0),  (3, 2, 27),   (6, 2, 216), (9, 2, 729), 
#        (12, 2, 1728),(15, 2, 3375),(18, 2, 5832),(21, 2, 9261),(24, 2, 13824), 
#        (27, 2, 19683)]
</code></pre>
<p>And then write the data into workbooks:</p>
<pre><code>writeXlsWorkbook("text.xls","computed Numbers", header, data)
writeXlsxWorkbook("text.xlsx","computed Numbers", header, data)
</code></pre>
<p>Writing old excel files (*.xls):</p>
<pre><code>import xlwt    
def writeXlsWorkbook(filename:str, sheet:str, header:list, tupleData:list):
    """Write xls to filename, place data on sheet with sheet as name.

    'header' and 'tupleData' are 3 dimensional zero based tuples of (row,column, data). 
    If 'header' is given, 'tupleData' will be placed in the row below the header-row."""
    book = xlwt.Workbook()
    sh = book.add_sheet(sheet)

    addToRowsNr = 0
    if header:
        for row, col, data in header:
            sh.write(row , col , data)
        addToRowsNr = 1

    for row, col, data in tupleData:
        sh.write(row + addToRowsNr, col , data)

    book.save(filename)
</code></pre>
<p>Writing new excel files (*.xlsx):</p>
<pre><code>import openpyxl 
def writeXlsxWorkbook(filename:str, sheet:str, header:list, tupleData:list):
    """Write xlsx to filename, place data on sheet with sheet as name.

    'header' and 'tupleData' are 3 dimensional zero based tuples of (row,column, data). 
    If 'header' is given, 'tupleData' will be placed in the row below the header-row."""
    book = openpyxl.Workbook()
    sh = book.active # get the one default sheet
    sh.title = sheet # rename it

    # sh.cell( ..) is 1-based, data is 0 based so we add one to row and col
    addToRowsNr = 0
    if header:
        for row, col, data in header:
            sh.cell(row=row+1, column=col+1, value=data) # ws['B4'] = "42" would work
        addToRowsNr = row+2

    for row, col, data in tupleData:
        sh.cell(row = row + addToRowsNr, column = col + 1, value = data)

    book.save(filename)
</code></pre>
<hr/>
<p>To write your data you would supply:</p>
<pre><code># zero based data, hence -1 on the row
writeXlsWorkbook("somename.xls","someSheetName",None, [(18-1,0, 'PASS'),
                          (19-1,0,'FAIL'),(20-1,0,'PASS'),(21-1,0,'FAIL')] )

writeXlsxWorkbook("somename.xlsx","someSheetName",None, [(18-1,0, 'PASS'),
                           (19-1,0,'FAIL'),(20-1,0,'PASS'),(21-1,0,'FAIL')] )
</code></pre>
<p>Links: </p>
<ul>
<li><a href="https://openpyxl.readthedocs.io/en/stable/tutorial.html#create-a-workbook" rel="nofollow noreferrer">openpyxl</a></li>
<li><a href="https://github.com/python-excel/xlwt" rel="nofollow noreferrer">xlwt</a></li>
</ul>
<p>Disclaimer: I took a peek at <a href="https://stackoverflow.com/a/13437772/7505395">this answer</a> for the old style excel writing 
 and heavily adapted it.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can make a list of tuples</p>
<p>For example</p>
<pre><code>lst = [(18, 'Pass'), (19, 'Fail')]
</code></pre>
<p>You can access the values as</p>
<pre><code>lst[1] --&gt; (19, 'Fail')
lst[1][0] --&gt; 19
lst[1][1] --&gt; 'Fail'
</code></pre>
<p><strong>Please Note:</strong> </p>
<ul>
<li>Tuples are immutable, so cannot add new elements</li>
<li>Merging of tuples with the + operator you can add an element and it will create a new tuple</li>
</ul>
<p>You can read more about this over <a href="https://docs.python.org/3/tutorial/datastructures.html" rel="nofollow noreferrer">here</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Possible options are</p>
<p><strong>1. One string with seperator</strong></p>
<p><code>&gt;&gt;&gt; list = ['18 PASS', '19 FAIL', '20 PASS']</code></p>
<pre><code>&gt;&gt;&gt; list[0].split()
['18', 'PASS']

&gt;&gt;&gt; list[0].split()[0]
'18'

&gt;&gt;&gt; list[0].split()[1]
'PASS'

&gt;&gt;&gt; list = ['18|PASS', '19|FAIL', '20|PASS']

&gt;&gt;&gt; list[0].split('|')
['18', 'PASS']

&gt;&gt;&gt; list[0].split('|')[0]
'18'

&gt;&gt;&gt; list[0].split('|')[1]
'PASS'
</code></pre>
<p>Here you store the information as 1 string with a separator, usually space. And whenever needed you parse it.</p>
<p><strong>Caution</strong>: Though the separator can e any character or string,  you should be extra careful that you separator should not appear in the information string.</p>
<p>For example,
lets go out of your example and take age and name</p>
<pre><code>&gt;&gt;&gt; list = ['48 Torvalds', '62 Rossum', '62 Grady Booch']

&gt;&gt;&gt; list[0].split()[1]
'Torvalds'

&gt;&gt;&gt; list[1].split()[1]
'Rossum'

&gt;&gt;&gt; list[2].split()[1]
'Grady'
</code></pre>
<p>Ouch!! you missed the last name Booch.</p>
<p><strong>2. List of lists or list of tuples</strong></p>
<p>As explained in previous answer by <a href="http://user3287355" rel="nofollow noreferrer">https://stackoverflow.com/users/3287355/user3287355</a></p>
<p>Remember <strong>tuples are immutable</strong>, once created you cannot alter the contents.</p>
<p><strong>3. Recommended to use Python Dictionary</strong></p>
<p>For key-value pairs Python has a built-in structure called Dictionary which analogous to Map, JSON etc.</p>
<pre><code>&gt;&gt;&gt; dict = {'18':'PASS', '19':'FAIL', '20':'PASS'}

&gt;&gt;&gt; dict.get('18')
'PASS'

&gt;&gt;&gt; dict.get('19')
'FAIL'

&gt;&gt;&gt; dict.get('20')
'PASS'
</code></pre>
<p><strong>Caution</strong>: Beware of duplicate keys. Also you can't expect the dictionary to preserve the order of elements as you entered. However its completely based on key-value, we don't get values by index.</p>
</div>
<span class="comment-copy">if(i==1) put value pass in row 18</span>
<span class="comment-copy">Welcome to SO. Check out <a href="https://stackoverflow.com/help/mcve">How to create minimal, complete and verifiable example</a></span>
<span class="comment-copy">You list will become like <code>['18PASS', '19FAIL'...]</code> its better to store a tuple as element of list like <code>[(18,'PASS')...]</code></span>
<span class="comment-copy">You should use 'python' and the pythong that you are using as tags (so <code>python</code> + <code>python-3.x</code> it you use <code>python 3</code>. The python tag will adress all pythonians on SO, the -3.x you need due to differences between 2 and 3. Are you really using wxpython ?</span>
<span class="comment-copy">i got your point but if i have a empty tuples how can i add in that tuples please if you give one small exam like above</span>
<span class="comment-copy">@jaymingaudana, take a look at this: <a href="https://www.w3resource.com/python-exercises/tuple/python-tuple-exercise-5.php" rel="nofollow noreferrer">w3resource.com/python-exercises/tuple/â€¦</a></span>
<span class="comment-copy">where is the excel part?</span>
<span class="comment-copy">actually 18,19,20 are my row number so i want to put my result pass or fail in that row so...</span>
<span class="comment-copy">how to append  in this list?</span>
<span class="comment-copy">where is the excel part?</span>
