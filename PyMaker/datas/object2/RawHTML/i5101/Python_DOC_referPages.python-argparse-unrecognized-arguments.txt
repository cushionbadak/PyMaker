<div class="post-text" itemprop="text">
<p>I am trying to use <code>argparse</code> to parse command line arguments. Here is my code:</p>
<pre><code>#!/usr/bin/python
# -*- coding: UTF-8 -*-
import argparse

def create_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('--allow_ips', nargs='*')
    return parser

if __name__ == '__main__':
    parser = create_parser()
    namespace = parser.parse_args()
</code></pre>
<p>When the script is executed like this, <code>argparse</code> complains about unrecognized arguments.</p>
<pre><code>./prog.py --allow_ips=192.168.0.10 192.168.0.11 192.168.0.12
</code></pre>
<p>But when the script is executed like this, <code>argparse</code> is satisfied.</p>
<pre><code>./prog.py --allow_ips 192.168.0.10 192.168.0.11 192.168.0.12
</code></pre>
<p>How should I change my code so '=' can be used in the argument list?</p>
</div>
<div class="post-text" itemprop="text">
<p>According to the <a href="https://docs.python.org/3/library/argparse.html#nargs" rel="nofollow noreferrer">argparse documentation</a>, passing <code>*</code> in the <code>nargs</code> argument means</p>
<blockquote>
<p>All command-line arguments present are gathered into a list.</p>
</blockquote>
<p>When you invoke your program <em>without</em> the equal sign, all three IP addresses are considered part of the <code>--allow_ips</code> argument; they will be available to your program in a list.</p>
<p>When you invoke your program <em>with</em> the equal sign, only the first IP address is considered part of the <code>--allow_ips</code> argument. <code>argparse</code> then tries to parse the second and third IP addresses. But it cannot because your program does not take any positional arguments. So <code>argparse</code> raises an exception.</p>
</div>
<span class="comment-copy">You can't.  The relevant docs section: <a href="https://docs.python.org/3/library/argparse.html#option-value-syntax" rel="nofollow noreferrer">docs.python.org/3/library/argparse.html#option-value-syntax</a> (<code>single command-line argument,</code>)</span>
<span class="comment-copy">unrelated: to parse the ip addresses you could use <a href="https://docs.python.org/3/library/ipaddress.html#ipaddress.IPv4Address" rel="nofollow noreferrer"><code>ipaddress.IPv4Address</code></a></span>
<span class="comment-copy">Thank you. In my case, the arguments are passed to bash script (entry point). I found that the quotes around the list of IP-addresses are lost. I went through the arguments in the loop, added quotes and wrote it in one line, and then passed it as parameters to my program on the python. Sorry for my english.</span>
