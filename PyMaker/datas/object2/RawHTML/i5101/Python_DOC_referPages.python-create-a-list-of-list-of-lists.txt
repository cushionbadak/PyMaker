<div class="post-text" itemprop="text">
<p>I am trying to create a list of list of lists. I have the dataset below </p>
<pre><code>ID  date    product
A   01/01/2018  1
A   01/01/2018  2
A   02/01/2018  2
B   01/01/2018  3
B   01/01/2018  4
B   02/01/2018  2
B   04/01/2018  1
B   04/01/2018  2
B   04/01/2018  3
</code></pre>
<p>The goal is to create this kind of list:</p>
<pre><code>[[[1,2], [2]], [[3,4],[2],[1,2,3]]]
</code></pre>
<p>The outermost list corresponds to customer ID, the intermediate to the date the product was bought, and the innermost to the products.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can do this using two applications of <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a>, one to group by ID, and one to group by date.</p>
<p>The code below uses a triple-nested list comprehension, which is compact, but not so easy to read. I'll post a longer version shortly.</p>
<pre><code>from itertools import groupby
from operator import itemgetter

data = '''\
ID  date    product
A   01/01/2018  1
A   01/01/2018  2
A   02/01/2018  2
B   01/01/2018  3
B   01/01/2018  4
B   02/01/2018  2
B   04/01/2018  1
B   04/01/2018  2
B   04/01/2018  3
'''

data = (row.split() for row in data.splitlines())

#skip header
next(data)

result = [[[u[-1] for u in group]
    for _, group in groupby(row, itemgetter(1))]
        for _, row in groupby(data, itemgetter(0))]

print(result)
</code></pre>
<p><strong>output</strong></p>
<pre><code>[[['1', '2'], ['2']], [['3', '4'], ['2'], ['1', '2', '3']]]
</code></pre>
<hr/>
<p>Here's a version (mostly) using traditional <code>for</code> loops. It also converts the product numbers from string to integer.</p>
<pre><code>from itertools import groupby
from operator import itemgetter

data = '''\
ID  date    product
A   01/01/2018  1
A   01/01/2018  2
A   02/01/2018  2
B   01/01/2018  3
B   01/01/2018  4
B   02/01/2018  2
B   04/01/2018  1
B   04/01/2018  2
B   04/01/2018  3
'''

data = (row.split() for row in data.splitlines())

#skip header
next(data)

ig1 = itemgetter(1)
result = []
for _, row in groupby(data, itemgetter(0)):
    sublist = []
    for _, group in groupby(row, ig1):
       sublist.append([int(u[-1]) for u in group])
    result.append(sublist)

print(result)
</code></pre>
<p><strong>output</strong></p>
<pre><code>[[[1, 2], [2]], [[3, 4], [2], [1, 2, 3]]]
</code></pre>
</div>
<span class="comment-copy">Do you <i>have</i> to do this with Pandas? What does your current code look like, and what's wrong with it?</span>
<span class="comment-copy">I have seen worse questions than this with much higher scores..</span>
<span class="comment-copy">@PM2Ring You are correct. I assumed it was a dataframe but could be a simple CSV-format. We'll see I guess. I apologize.</span>
<span class="comment-copy">@PM2Ring, It's with Pandas. Sorry, I didn't mention it in my post (1st time on StackOverflow).</span>
<span class="comment-copy">@AntonvBR Looks like you guessed correctly. ;)</span>
