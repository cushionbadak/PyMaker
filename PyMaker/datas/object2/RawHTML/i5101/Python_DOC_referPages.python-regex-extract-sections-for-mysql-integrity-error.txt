<div class="post-text" itemprop="text">
<p>I have the following MySQL error message which is very standard with some section changing depending on the situation:</p>
<pre><code>Cannot add or update a child row: a foreign key constraint fails (`D2b3f1ee0ce83`.`maintable`, CONSTRAINT `fk5_maintable_lkpaitechid` FOREIGN KEY (`aitechid`) REFERENCES `lkpaitechid` (`aitechid_cod`) ON UPDATE NO ACTION) [SQL: "UPDATE D2b3f1ee0ce83.maintable SET aitechid = 'AI00002' WHERE rowuuid = '7a867b48-f335-4135-936f-6707bc4d3077'"] (Background on this error at: http://sqlalche.me/e/gkpj)
</code></pre>
<p>I would like to extract each of its variable parts. So with my minimum Regex experience, I did:</p>
<pre><code>p = re.compile('Cannot add or update a child row: a foreign key constraint fails (`+(\w+)+`.`+(\w+)+`, CONSTRAINT `+(\w+)+` FOREIGN KEY (`+(\w+)+`) REFERENCES `+(\w+)+` (`+(\w+)+`) ON +(\w+)+ +(\w+)+)')
m = p.search(str(e))
if m:
    print("Yes!")
</code></pre>
<p>I tried other combinations like (*?) but did not work. Any idea how I need to structure the Regex string to make it work?</p>
</div>
<div class="post-text" itemprop="text">
<p>The way your regex is written confines you to only this particular error.  If in general you just wanted to capture the quoted values:</p>
<pre><code>p1 = re.compile(r'`(\w+)`')
m1 = p1.findall(str(e))

m1

# ['D2b3f1ee0ce83',
#  'maintable',
#  'fk5_maintable_lkpaitechid',
#  'aitechid',
#  'lkpaitechid',
#  'aitechid_cod']
</code></pre>
<p>For the last one, you'll need to do another search:</p>
<pre><code>p2 = re.compile(r'ON (\w+) ([\w ]+)\)')
m2 = p2.search(str(e))

m2.groups()

# ('UPDATE', 'NO ACTION')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This should work:</p>
<pre><code>&gt;&gt;&gt; t = """Cannot add or update a child row: a foreign key constraint fails (`D2b3f1ee0ce83`.`maintable`, CONSTRAINT `fk5_maintable_lkpaitechid` FOREIGN KEY (`aitechid`) REFERENCES `lkpaitechid` (`aitechid_cod`) ON UPDATE NO ACTION) [SQL: "UPDATE D2b3f1ee0ce83.maintable SET aitechid = 'AI00002' WHERE rowuuid = '7a867b48-f335-4135-936f-6707bc4d3077'"] (Background on this error at: http://sqlalche.me/e/gkpj)"""
&gt;&gt;&gt; r = r'''([`] # Start a match group what has an optional backtick
...     \b # use a 'word boundary'
...     [\d\w`_\.]+ # any of these characters at least once
...     \b # use a 'word boundary'
...     [`])''' # optional backtick, closing match group
&gt;&gt;&gt; re.findall(r, t, re.VERBOSE)
['`D2b3f1ee0ce83`.`maintable`', '`fk5_maintable_lkpaitechid`', '`aitechid`', '`lkpaitechid`', '`aitechid_cod`']
</code></pre>
<p>Adding a "prefix" to filter on more lines should now be nice enough. I did include the backticks as is would be easy enough to remove them with <a href="https://docs.python.org/3/library/stdtypes.html#str.replace" rel="nofollow noreferrer"><code>str.replace</code></a></p>
<p>Take not of the <a href="https://docs.python.org/3/library/re.html#re.VERBOSE" rel="nofollow noreferrer"><code>re.VERBOSE</code></a> to make this more readable</p>
</div>
<span class="comment-copy">Escape literal <code>(</code> and <code>)</code> and remove <code>+</code>s after all <code>(\w+)</code>. See <a href="https://regex101.com/r/OjdHZr/1" rel="nofollow noreferrer">regex101.com/r/OjdHZr/1</a></span>
