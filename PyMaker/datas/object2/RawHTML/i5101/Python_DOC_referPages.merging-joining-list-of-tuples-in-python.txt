<div class="post-text" itemprop="text">
<p>I have 2 list of tuples</p>
<pre><code>a = [(123, 0, 1), (245, 0, 1)]
b = [(123, 1, 0), (678, 1, 0)]
</code></pre>
<p>I want to merge these 2 lists in such a way that my output is :</p>
<pre><code>merged_list = [(123, 1, 1), (245, 0, 1), (678, 1,0)]
</code></pre>
<p>I found this piece of code </p>
<pre><code>def inner_join(a, b):
L = a + b
L.sort(key=itemgetter(0)) # sort by the first column
for _, group in groupby(L, itemgetter(0)):
    row_a, row_b = next(group), next(group, None)
    if row_b is not None: # join
        yield row_a + row_b[1:]
</code></pre>
<p>when I execute this, it returns me the tuple whose first element is common</p>
<pre><code>result = list(inner_join(a,b))
result - [(123,1,1)]
</code></pre>
<p>How can I resolve this, so that I am able to get required solution</p>
<pre><code>[(123, 1, 1), (245, 0, 1), (678, 1,0)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><code>itertools.groupby</code></a> to group similar elements, based on the first value of the tuple. </p>
<pre><code>a = [(123, 0, 1), (245, 0, 1)]
b = [(123, 1, 0), (678, 1, 0)] 

from itertools import groupby
grouped_list = [(k,list(g)) for k,g in groupby(sorted([*a,*b]),key= lambda x: x[0])]
</code></pre>
<p>This will give you output like:</p>
<pre><code>[(123, [(123, 0, 1), (123, 1, 0)]), (245, [(245, 0, 1)]), (678, [(678, 1, 0)])]
</code></pre>
<p>Next we need to sum the second and third value of tuple inside grouped list to get the required output.</p>
<pre><code>out = [(k,*[sum(x) for x in zip(*x)][1:]) for k,x in grouped_list]
</code></pre>
<p>Which will give you your required output</p>
<pre><code>[(123, 1, 1), (245, 0, 1), (678, 1, 0)]
</code></pre>
<p>If you prefer one-liners:</p>
<pre><code>[(k,*[sum(x) for x in zip(*list(g))][1:]) for k,g in itertools.groupby(sorted([*a,*b]),key=lambda x: x[0])]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like you want to use the first value of each tuple as a key in which case changing tuple a to a dictionary might be more practical. I'm sure there's a better way but you could try this. Instead of </p>
<pre><code>a = [(123, 0, 1), (245, 0, 1)]
</code></pre>
<p>try </p>
<pre><code>a_dic = {123: (0,1), 245: (0,1)}
</code></pre>
<p>You can then check b (the list of tuples) against the keys in the dictionary. If no matches are found the new key and values are added to the dictionary. If a key matches then its values are added. </p>
<pre><code>for x in b:
    temp_tuple = x[1], x[2]
    if not x[0] in a_dic.keys():
         a_dic.update({x[0]: temp_tuple})
    else:
         new_value = tuple(map(sum,zip(temp_tuple, a_dic.get(x[0]))))
         a_dic.update({x[0]:new_value})

print(a_dic)
</code></pre>
<p>Result is:</p>
<pre><code>{123: (1, 1), 245: (0, 1), 678: (1, 0)}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Check this out. It is working. You can change/tweak the code as you want. Hope the code is simple enough to understand.</p>
<pre><code>a = [(123, 0, 1), (245, 0, 1)]
b = [(123, 1, 0), (678, 1, 0)]
# print (a)
# print (b)
c1=[]
c=[]
for element1 in b:
    c1.append(element1)
    for element2 in a:
        if element1[0]==element2[0]:
            x=(element1[0],element1[1]+element2[1],element1[2]+element2[2])
            c.append(x)

for element2 in a:
    c1.append(element2)
for element in c1:
    flag=0
    for element1 in c:
        if element1[0]==element[0]:
            flag=1
    if (flag==0):
        c.append(element)
print(c)
</code></pre>
</div>
<span class="comment-copy">did you try something?</span>
<span class="comment-copy">There are no standard tools for this. What have you written so far?</span>
<span class="comment-copy">What are the rules for merging the first tuple? We can guess from the example, but you should state them explicitly. Please read <a href="https://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a> and <a href="https://stackoverflow.com/help/how-to-ask">How do I ask a good question?</a></span>
<span class="comment-copy">@DanilaGanchar I have edited the question, I am not able to find from where I got this solution</span>
