<div class="post-text" itemprop="text">
<p>I know you can check if a key exists using:</p>
<pre><code>if key in mydict:
    ...
</code></pre>
<p>but I wish to somehow use this in a dictionary comprehension as I construct the dictionary. </p>
<p>For example:</p>
<pre><code>mylist = [('a', 0.01), ('b', 0.02), ('c', 0.03), ('a', 0.04)]
mydict = {item[0]: item[1] for item in mylist if item[0] not in mydict else blah blah}
</code></pre>
<p>What's the best way to achieve this?</p>
<p>I need the else part also.</p>
<p>Edit: For clarification. In my case I actually need the sum of item[1] values for all items with a given item[0] value.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python dict is unordered structure with unique keys.
As you need values of firstly encountered keys - iterate input list in reversed order:</p>
<pre><code>mylist = [('a', 0.01), ('b', 0.02), ('c', 0.03), ('a', 0.04)]
mydict = {t[0]:t[1] for t in mylist[::-1]}

print(mydict)
</code></pre>
<p>The output:</p>
<pre><code>{'a': 0.01, 'c': 0.03, 'b': 0.02}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>With</strong> dictionary comprehension:</p>
<pre><code>mylist = [('a', 0.01), ('b', 0.02), ('c', 0.03), ('a', 0.04)]
mydict = {key:value for key, value in mylist[::-1]}
print(mydict)
</code></pre>
<p>Output:</p>
<pre><code>{'a': 0.01, 'c': 0.03, 'b': 0.02}
</code></pre>
<p><strong>Without</strong> dictionary comprehension:</p>
<pre><code>mydict = {}
for key, value in mylist:
    if key not in mydict:
        mydict[key] = value
    else:
        # You asked for the else part. Do whatever here.   
print(d)
</code></pre>
<p>Output:</p>
<pre><code>{'a': 0.01, 'c': 0.03, 'b': 0.02}
</code></pre>
</div>
<span class="comment-copy">thanks for the reply, I have edited the question as I forgot to mention the else part is important for my task</span>
<span class="comment-copy"><code>not in mydict</code> - you can not refer a dict before it was finally created. In Python, assignment goes from "right" to "left"</span>
<span class="comment-copy">What logic is behind that <code>blah blah</code>? Dict has <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer">get</a> and <a href="https://docs.python.org/3/library/stdtypes.html#dict.setdefault" rel="nofollow noreferrer">setdefault</a> methods which support default values. Depending on what exactly you want to do, you could probably use those methods.</span>
<span class="comment-copy">Thanks for replying, but I edited the question as I initially forgot to mention I require else logic. Perhaps I can't use dict comprehension in a single line.</span>
<span class="comment-copy">@JSStuball: For clarification, when you say you need the else logic do you need it to produce a different key?   Do you need to combine values in some way? Do you just need to filter out duplicates? Could you expand on that a little?</span>
<span class="comment-copy">Yes, <code>mydict[key] = value</code> seems to be a better performer in terms of speed. But I valued readability.</span>
<span class="comment-copy">Trust me when I say that a Python programmer expects to see <code>mydict[key] = value</code>. It's the most readable option. <code>update()</code> is for <i>merging</i> dictionaries with defined rules about overwrites of existing keys. When I see <code>update()</code> I immediately think possible key collisions and multiple values being overwritten.</span>
<span class="comment-copy">I understand what you're saying. Updated my answer.</span>
