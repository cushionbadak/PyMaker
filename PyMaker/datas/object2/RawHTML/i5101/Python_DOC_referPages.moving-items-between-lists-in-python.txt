<div class="post-text" itemprop="text">
<p>So I have recently began programming in earnest with Automate the Boring the Stuff, and after reading the chapters on basic syntax decided to start working on a Blackjack game. However, I ran into a problem when dealing out the cards. I have the main deck</p>
<pre><code>deck=[2,3,4,5,6,7,8,9,'J','Q','K','A']*4
</code></pre>
<p>and have a separate empty list called <code>playerHand</code>. I understand that I can use .append and random.choice to pick a card at random and add it to <code>playerHand[]</code>, but this doesn't remove the cards from <code>deck[]</code>.</p>
<p>The only way I could think of would be to randomly generate a number between one and the amount of cards left in deck, set a variable to that number, set another variable to the card at that index, add that card to <code>playerHand[]</code>, and then finally delete the card at that index in <code>deck[]</code>. </p>
<p>Is there a way to do it that doesn't involve 2 temporary variables?</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, use <code>list.pop</code>.</p>
<p><code>list.pop</code> will remove the value at the given index and return it:</p>
<pre><code>In [105]: l = [1, 2, 3, 4]

In [106]: l.pop(2)  # here 2 is the index, at index 2 we have value 3
Out[106]: 3

In [107]: l
Out[107]: [1, 2, 4]
</code></pre>
<p>Note that, by default <code>pop</code> will <em>pop</em> the value at the last index (<code>l[-1]</code>).</p>
<hr/>
<p>So, in your case, you can do a <code>random.shuffle</code>-ing of the list and <code>pop</code>:</p>
<pre><code>In [108]: deck=[2,3,4,5,6,7,8,9,'J','Q','K','A']*4

In [109]: random.shuffle(deck)

In [110]: deck.pop()
Out[110]: 7
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Instead of randomly choosing an <em>element</em>, randomly choose an <em>index</em>. </p>
<p>You can then remove the <em>element</em> at that <em>index</em> and append it to another <code>list</code> in one single line with <a href="https://docs.python.org/3/library/stdtypes.html#mutable-sequence-types" rel="nofollow noreferrer"><code>pop</code></a>:</p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; a = [1, 2, 3, 4]
&gt;&gt;&gt; b = []
&gt;&gt;&gt; b.append(a.pop(random.randint(0, len(a))))
&gt;&gt;&gt; 
&gt;&gt;&gt; a
[1, 3, 4]
&gt;&gt;&gt; b
[2]
</code></pre>
</div>
<span class="comment-copy">Only confusing part for someone new to Python is that you are popping '2' which, in fact, pops '3'. This is, of course, because the list index starts with '0'. I would add this explanation to your answer to be more complete.</span>
<span class="comment-copy">@jamescampbell Edited. Look okay now?</span>
<span class="comment-copy">yes, takes care of their exact use case now. cheers</span>
