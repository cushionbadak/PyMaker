<div class="post-text" itemprop="text">
<p>I want to launch my script like this:</p>
<pre><code>python3 main.py @params.conf 1 2
</code></pre>
<p>where <code>params.conf</code> is a file and <code>1</code>, <code>2</code> are string arguments. </p>
<p>I know how to parse file alone:</p>
<pre><code>argparser = ArgumentParser()
argparser.add_argument('arg1', help='heeelp') 
...
args = argparser.parse_args()
</code></pre>
<p>But how to parse following arguments?</p>
</div>
<div class="post-text" itemprop="text">
<p>An argument prefixed with <code>@</code> is treated as if its contents were in the command line directly, one argument per line. So if the contents of <code>params.conf</code>is</p>
<pre><code>2
3
</code></pre>
<p>And you define a parser like</p>
<pre><code>import argparse
p = argparse.ArgumentParser(fromfile_prefix_chars='@')
p.add_argument("a")
p.add_argument("b")
p.add_argument("c")
p.add_argument("d")
args = p.parse_args()
</code></pre>
<p>and you call your script as</p>
<pre><code>script.py 1 @params.conf 4
</code></pre>
<p>then your arguments <code>a</code> through <code>d</code> will be set to 1 through 4, respectively.</p>
</div>
<div class="post-text" itemprop="text">
<p>You just add more <code>argparser.add_argument</code> calls.</p>
<p>Like this:</p>
<pre><code>import argparse

parser = argparse.ArgumentParser()

parser.add_argument('arg1', type=str)
parser.add_argument('arg2', type=str)
parser.add_argument('arg3', type=str)

args = parser.parse_args() 

print(args)  # arguments are parsed
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/3/library/argparse.html" rel="nofollow noreferrer">The docs</a> explain how to parse positional arguments generally, have you tried something? What happened?</span>
