<div class="post-text" itemprop="text">
<p>If I have the following Python script foo.py :</p>
<pre><code>def foo() :
  my_dict = {'A': 1, 'B': 2, 'C': 3}
  globals().update(my_dict)
  print(A)
  print(B)
  print(C)

foo()
</code></pre>
<p>I can type this in ipython :</p>
<pre><code>run foo.py
=&gt; 1
=&gt; 2
=&gt; 3
A
=&gt; 1
</code></pre>
<p>However, If I remove the foo() at the bottom :</p>
<pre><code>def foo() :
  my_dict = {'A': 1, 'B': 2, 'C': 3}
  globals().update(my_dict)
  print(A)
  print(B)
  print(C)

# no foo
</code></pre>
<p>And I type this in ipython :</p>
<pre><code>run foo.py
foo()
=&gt; 1
=&gt; 2
=&gt; 3
A
=&gt; NameError: name 'A' is not defined
</code></pre>
<p>I get this error. Why is this the case?</p>
</div>
<div class="post-text" itemprop="text">
<p>IPython's <a href="https://ipython.org/ipython-doc/3/interactive/magics.html#magic-run" rel="nofollow noreferrer"><code>%run</code></a> defaults to running the file in a new namespace and then copying the results into your namespace.</p>
<p>When <code>foo.py</code> contains a <code>foo()</code> call, that creates <code>A</code>, <code>B</code>, and <code>C</code> variables in the new namespace that IPython then copies to your namespace.</p>
<p>When <code>foo.py</code> doesn't contain a <code>foo()</code> call, you can call <code>foo()</code> yourself, but <code>foo</code> is still using its original namespace for globals. Calling <code>foo()</code> creates <code>A</code>, <code>B</code>, and <code>C</code> variables in <code>foo</code>'s original namespace, too late for IPython to pick them up and copy them into your namespace.</p>
<p>You can use <code>%run</code> with the <code>-i</code> flag to run the file in your namespace directly, avoiding these issues.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to declare <code>element_dict</code> a global variable before assigning it.  Once you have an assign statement <em>anywhere</em> within a function, the variable being assigned is declared on a local scope only, unless otherwise specified.  In your case, <code>element_dict</code> is declared locally due to <code>element_dict = read_mass_from_file()</code>.</p>
<p><a href="https://docs.python.org/3/tutorial/classes.html#scopes-and-namespaces-example" rel="nofollow noreferrer">See the documentation for more details.</a></p>
<p>To actually reference the global variable:</p>
<pre><code>def mass_mode() :
  '''
  Add element names and masses to the global variables.
  '''
  global element_dict
  element_dict = read_mass_from_file()
</code></pre>
<p>will update the <code>element_dict</code> from the global scope.</p>
</div>
<span class="comment-copy">could you give an example of <code>element_dict</code></span>
<span class="comment-copy">@PratikKumar {'H': 1.0, 'He': 4.0, 'C': 12.0}</span>
<span class="comment-copy">@PratikKumar I will change the question to be easier to understand</span>
<span class="comment-copy">@PratikKumar Updated!</span>
<span class="comment-copy"><code>print('A')</code> would literally print an A, not 1. When asking questions, please post code you have actually run and the actual output you got by running it.</span>
<span class="comment-copy">Thanks for the answer! I have just edited the question. How do you think about the new question? Is the answer still the similar?</span>
