<div class="post-text" itemprop="text">
<p>I'm struggling to get my Python Code to work to output the correct nesting and formatting for my JSON messages. My problem is I am unable to nest the objects in the JSON the way the sample JSON has been given, as this is only how the source system will accept it. I've read the documentation and other tutorials etc online but nothing I have found works for this problem.</p>
<p>Here is the sample JSON I have to work with and contains the right formatting:</p>
<pre><code>    {"messageId": "ID,"messageType": "Type","createdDateTime": "2019-01-01T10:10:10Z","recordOne": [{"dataItemOne": "E123345","dataItemTwo": "2019-01-01T12:12:12Z","attributesRecord": {"attributesOne": 22,"attributesTwo": 24,},"recordTwo": {"dataItemOne": "L22","dataItemTwo": "EL","dataItemThree": "ADDFES334S",},"recordThree": [{"itemOne": "P44587"}]}]}
</code></pre>
<p>And here is my code</p>
<pre><code>import datetime
import json

datetime = datetime.datetime.now().strftime("%Y-%m-%dT%H:%M:%SZ")

data = {'messageId': 'ID',
        'messageType': 'Type',
        'createdDateTime': datetime}

data1 = {'recordOne': []}

data1['recordOne'].append({
    'dataItemOne': 'E123345',
    'dataItemTwo': datetime,
})

datas = [data, data1]

with open('mata.json', 'w') as outfile:
    data = json.dumps(data)
    json.dump(datas, outfile)
</code></pre>
<p>This gives my this type of JSON:</p>
<pre><code>    [{"messageId": "ID","messageType": "Type","createdDateTime": "2019-03-14T20:31:55Z"}, {"recordOne": [{"dataItemOne": "E123345","dataItemTwo": "2019-03-14T20:31:55Z"}]}]
</code></pre>
<p>My main issues are I am unable to output the file to:</p>
<ul>
<li>Start with just a curly braces i.e. {"messageId": "ID" and not [{"messageId": "ID"</li>
<li>I cannot get recordOne to format as "recordOne": [{</li>
<li>Then output attributesRecord as under recordOne as "attributesRecord": {</li>
<li>Then Nest fields under attributeRecords</li>
<li>Records recordTwo &amp; recordThree I cannot create anymore than one object</li>
</ul>
<p>Can anyone help me please and please excuse me I'm a noob?</p>
<p>NB - To get round it I created a separate script that printed the correct nesting and formatting but I was given a hard time and told to use the library, I am aware there are limitations to the library and not sure of this is one of them.</p>
</div>
<div class="post-text" itemprop="text">
<p>Take a look at the piece of code below</p>
<pre class="lang-py prettyprint-override"><code>import datetime
import json

dt = datetime.datetime.now().strftime("%Y-%m-%dT%H:%M:%SZ")

data = {'messageId': 'ID',
        'messageType': 'Type',
        'createdDateTime': dt}

data['recordOne'] = [{
    'dataItemOne': 'E123345',
    'dataItemTwo': dt
}]

# since recordOne contains a list, we use [0] to paste stuff inside it
data['recordOne'][0]['attributesRecord'] = {
    'attributesOne': 22,
    'attributesTwo': 24
}

data['recordTwo'] = {
    ...
}

# and so on and so forth

with open('mata.json', 'w') as outfile:
    json.dump(data, outfile)
</code></pre>
<p>The main thing to take away from this is that if you want to add something to your dictionary, you can just create a new key by writing <code>data['recordOne']</code> and <code>data['recordOne'][0]['attributesRecord']</code>, and whilst doing that, you can also assign it values that you want.</p>
<p>If you want to keep nesting, then just keep adding to the levels of keys. Keep in mind that if you are putting the dictionaries inside lists, you will have to access the key-value pairs inside the list using their respective indexes (such as the <code>[0]</code>)</p>
<p>As some of your dictionaries must also be inside lists, so I would add them as such (see the first <code>data['recordOne']</code>).</p>
<p>And finally, <code>json.dumps()</code> is used to create strings, while <code>json.dump()</code> is used to write to a file. So use that. Hope this helped!</p>
</div>
<span class="comment-copy">Your sample json needs a quick edit, should be <code>"ID", </code> not <code>"ID," </code>. Also, note that <code>[datas]</code> is a <code>list</code>, not <code>dict</code></span>
<span class="comment-copy">Also, I would rename your <code>datetime</code> var as <code>dt</code>, so you don't get <code>str obj has no attribute</code> errors on later calls to that module</span>
<span class="comment-copy">Where are all of the values coming from for the json? This might help construct a more robust solution</span>
<span class="comment-copy">Thanks, I have corrected my JSON sample and dt, I'm creating the values my self using faker to generate test data as I'm going to be doing bulk testing as need JSON files</span>
<span class="comment-copy">Thanks for your quick reply, it make sense what you have said and I have tried the code but get a "line 12, in &lt;module&gt;,  'attributeRecord': 0, TypeError: list indices must be integers or slices, not str" error, not sure how to resolve that?</span>
<span class="comment-copy">@ra67052 what do you have on line 12? Could you give me a snippet?</span>
<span class="comment-copy">I'm using the exact same code and it's line     'attributesTwo': 24</span>
<span class="comment-copy">@ra67052 I've edited it. Please check if it now works for you</span>
<span class="comment-copy">Awesome thanks that works now, this is great help and you found me answer :)</span>
