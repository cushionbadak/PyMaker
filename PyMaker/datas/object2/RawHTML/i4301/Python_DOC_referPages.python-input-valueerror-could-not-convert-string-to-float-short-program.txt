<div class="post-text" itemprop="text">
<pre><code>print('Input a list of numbers to do statistics on them. Type stop to end the list.')

while True:
    number_list = []
    stop_input = False

    while stop_input == False:
        user_input = input('-&gt; ')

        if float(user_input):
            number_list.append(user_input)                    

        elif user_input == 'stop':
            stop_input = True

    print('Sum:', sum(number_list))
</code></pre>
<p>The error is as follows:</p>
<p>if float(user_input):</p>
<p>ValueError: could not convert string to float: 'stop' (line 10).</p>
<p>I am typing input in as</p>
<p>1.0</p>
<p>2.0</p>
<p>3.0</p>
<p>stop</p>
</div>
<div class="post-text" itemprop="text">
<p><code>float('stop')</code> will raise an exception that you have to <a href="https://docs.python.org/3/tutorial/errors.html#handling-exceptions" rel="nofollow noreferrer">catch</a> with a <code>try: ... except ...: ...</code> block.</p>
<p>Additionally, <code>float(user_input)</code> evaluates to <code>False</code> when <code>user_input</code> is <code>0.0</code> (or <code>0</code>), so that number would never be added to the list.</p>
<p>You can change:</p>
<pre><code>if float(user_input):
    number_list.append(user_input)

elif user_input == 'stop':
    stop_input = True
</code></pre>
<p>to:</p>
<pre><code>try:
    number_list.append(float(user_input))
except ValueError:
    if user_input == 'stop':
        stop_input = True
</code></pre>
<p>to fix your program.</p>
</div>
<span class="comment-copy">A couple of things: you don't need to compare with boolean, that's the point. Just do <code>if not stop_input</code> instead of <code>if stop_input == False</code>. Moreover, your error comes from your input: if you try to enter letters, the function to convert your input to float (a decimal number) will fail. So you need to either catch the exception, or change your logic.</span>
<span class="comment-copy"><code>float("Not a float literal")</code> will raise an exception, not return <code>False</code>. You'll have to catch it.</span>
<span class="comment-copy">Just want to add that the Boolean type is a subclass of the int class (<a href="https://docs.python.org/2.3/whatsnew/section-bool.html" rel="nofollow noreferrer">since Python 2.3</a>). That's why <code>float(user_input)</code> evaluates to <code>False</code> in an if-statement when it's value is 0.</span>
