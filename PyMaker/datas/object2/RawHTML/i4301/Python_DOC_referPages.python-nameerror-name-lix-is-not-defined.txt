<div class="post-text" itemprop="text">
<pre><code>dictx1 = {}
dictx2 = {'C':['D','A'],'sXZ':['W','L']}
dictx3 = {'C':['3','4'],'sXZ':['3KL','E','S']}
</code></pre>
<p>I want to merge dictx2 and dictx3 to dictx1 and get the output as "{'C': ['D', 'A','3','4'], 'sXZ': ['W', '3KL', 'L', 'E','S']}"</p>
<p>I wrote below code</p>
<pre><code>dictx1 = {}
dictx1 = dictx2.copy()
ds= [dictx1, dictx3]
for i in dictx2.keys():
    dictx1[i] = list(lix[i][x] for x in range(len(lix[i]) for lix in ds)
</code></pre>
<p>Error:
    dictx1[i] = list(lix[i][x] for x in range(len(lix[i])) for lix in ds)
NameError: name 'lix' is not defined</p>
<p>But it already there with the 'for lix in ds'. I can write the code as below to get the same answer. But I want to know what's wrong with the above one line for code</p>
<pre><code>s=[]
</code></pre>
<p>for i in dictx2.keys():</p>
<pre><code>for li in ds:
    for x in range(len(li[i])):
        s.append(li[i][x])

dictx1[i] = s

s = []
</code></pre>
<p>print (dictx1)</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>dictx2 = {'C':['D','A'],'sXZ':['W','L']}
dictx3 = {'C':['3','4'],'sXZ':['3KL','E','S']}

for k,v in dictx2.items():
    res =  dictx3.get(k, None)
    if res == None:
        dictx3.update({k:v})
    else:
        dictx3.update({k : v + res})

print(dictx3)
</code></pre>
<p>output</p>
<pre><code>{'C': ['D', 'A', '3', '4'], 'sXZ': ['W', 'L', '3KL', 'E', 'S']}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>defaultdict</code></a> and add all lists in a loop:</p>
<pre><code>from collections import defaultdict

dictx1 = defaultdict(list)
for dic in (dictx2, dictx3):
    for key, value in dic.items():
        dictx1[key].extend(value)

# result: defaultdict(&lt;class 'list'&gt;, {'C': ['D', 'A', '3', '4'],
#                                      'sXZ': ['W', 'L', '3KL', 'E', 'S']})
</code></pre>
<p>If you don't want a <code>defaultdict</code> as the result, add <code>dictx1 = dict(dictx1)</code> to turn it into a normal dict.</p>
</div>
<span class="comment-copy">where are you defining <code>i</code>?</span>
<span class="comment-copy">Nested generator comprehensions have the <code>for ... in ...</code>s in the other order.</span>
<span class="comment-copy">joost : I corrected it in the code. One line was missing.</span>
