<div class="post-text" itemprop="text">
<p>I've got a bunch of numbers in a string.  I want to split them into individual digits so I can do more with them later.</p>
<pre><code>number = [6, 18, 6, 4, 12, 18, 0, 18]
</code></pre>
<p>I want to split these like so....
ex: 6, 1, 8, 6, 4, 1, 2, 1, 8, 0, 1, 8</p>
<p>I've tried split(), I've tried list(str(number)), I've tried converting these to strings and integers and I have tried searching stackoverflow.</p>
<p>In other searches I keep seeing a list comprehension example like this, which I don't understand and don't get the desired result after trying:
    [int(i) for i in str(number)]</p>
<p>help??</p>
</div>
<div class="post-text" itemprop="text">
<p>First you have to consider every element of the list as a string, and then cast back every character to an integer.</p>
<pre><code>def customSplit(l):
        result = []
        for element in l:
                for char in str(element):
                        result.append(int(char))
        return result

print(customSplit([6, 18, 6, 4, 12, 18, 0, 18]))
# prints [6, 1, 8, 6, 4, 1, 2, 1, 8, 0, 1, 8]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>How about a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>[ digit for x in number for digit in str(x) ]
</code></pre>
<p>which produces a list of strings:</p>
<p>['6', '1', '8', '6', '4', '1', '2', '1', '8', '0', '1', '8']</p>
<p>or </p>
<pre><code>[ int(digit) for x in number for digit in str(x) ]
</code></pre>
<p>if you'd prefer a list of single-digit integers:</p>
<pre><code>[6, 1, 8, 6, 4, 1, 2, 1, 8, 0, 1, 8]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>itertools.chain</code> like so:</p>
<pre><code>&gt;&gt;&gt; list(map(int, chain.from_iterable(map(str, numbers))))
[6, 1, 8, 6, 4, 1, 2, 1, 8, 0, 1, 8]
</code></pre>
<hr/>
<p>I posted this mainly so I could compare it to a <a href="http://coconut-lang.org" rel="nofollow noreferrer">Coconut</a> equivalent:</p>
<pre><code>&gt;&gt;&gt; numbers |&gt; map$(str) |&gt; chain.from_iterable |&gt; map$(int) |&gt; list
</code></pre>
<p>while looks nicer. If you like Unicode characters, you can replace <code>|&gt;</code> with <code>↦</code>:</p>
<pre><code>&gt;&gt;&gt; numbers ↦ map$(str) ↦ chain.from_iterable ↦ map$(int) ↦ list
</code></pre>
<p>In standard Python, a list comprehension is probably more readable.</p>
</div>
