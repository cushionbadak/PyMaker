<div class="post-text" itemprop="text">
<p>I apologize if this is a bit basic, but I'm mostly a JavaScript developer so I'm unfamiliar with the way Python interprets code. It looks like I'm running into some sort of async/hoisting error on the following code:</p>
<pre><code>if resultsLength == 10:
    listLength = df.head(10).iterrows()
elif resultsLength == 15:
    listLength = df.head(15).iterrows()
elif resultsLength == 20:
    listLength = df.head(20).iterrows()
elif resultsLength == 25:
    listLength = df.head(25).iterrows()

for index, row in listLength:
    .../do stuff
</code></pre>
<p>The error I'm getting is this:</p>
<pre><code>UnboundLocalError: local variable 'listLength' referenced before assignment
</code></pre>
<p>How do I deal with asynchronous issues like this in Python? Am I supposed to define the for loop as a function and use it as a callback?</p>
<p><strong>solution:</strong></p>
<p>Alex Hall was correct, my if test was failing because I forgot to convert resultsLength to an int, like so</p>
<pre><code>if int(resultsLength) == 10:
</code></pre>
<p>For the record, I really shouldn't be getting downvotes for asking a "stupid" question if the majority of people are upvoting the wrong answer. Thanks, Alex, for correctly pointing out the issue.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python is not running the code asynchronously, all your conditions such as <code>resultsLength == 10</code> were false because <code>resultsLength</code> is something else.</p>
<p>In this case your if statements are not needed and you should just write:</p>
<pre><code>for index, row in df.head(listLength).iterrows():
</code></pre>
<p>In the more general case where the if statements contain something more complicated and you really only want to allow a few values, I would recommend adding something like this at the end of your elif chain:</p>
<pre><code>else:
    raise ValueError('Unhandled case listLength = %r' % listLength)
</code></pre>
<p>This will immediately alert you of the problem and let you know what <code>listLength</code> is.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to make sure the <code>listLength</code> variable has a value. In the example below I'm initializing it with the empty list <code>[]</code>,  so that when none of the conditions match, it is still defined.</p>
<pre><code>listLength = []
if resultsLength == 10:
    listLength = df.head(10).iterrows()
elif resultsLength == 15:
    listLength = df.head(15).iterrows()
elif resultsLength == 20:
    listLength = df.head(20).iterrows()
elif resultsLength == 25:
    listLength = df.head(25).iterrows()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You ran that block but resultsLength was neither 10, nor 15, nor 20, nor 25, hence none of the if/elif block got executed and listLength was never set.</p>
<p>You get the error <a href="https://docs.python.org/3/library/exceptions.html#UnboundLocalError" rel="nofollow noreferrer">https://docs.python.org/3/library/exceptions.html#UnboundLocalError</a></p>
<p>To solve your problem, you can make sure resultsLength is set to an empty list before your first if, or you can use else to set it to an empty list as in:</p>
<pre><code>resultsLength = []
if ...
</code></pre>
<p>or </p>
<pre><code>if ...
elif ...
else:
    resultsLength = []
</code></pre>
</div>
<span class="comment-copy">What should the code do if the length is not any of 10, 15, 20, or 25? If the answer is "that shouldn't happen, so the code should crash", great! That's what it's doing already :-)</span>
<span class="comment-copy">It means it went through all the ifs and none of them were true.</span>
<span class="comment-copy">Welcome to StackOverflow.  Please read and follow the posting guidelines in the help documentation, as suggested when you created this account.  <a href="http://stackoverflow.com/help/mcve">Minimal, complete, verifiable example</a> applies here.  We cannot effectively help you until you post your MCVE code and accurately describe the problem. We should be able to paste your posted code into a text file and reproduce the problem you described.</span>
<span class="comment-copy">Also you really don't need any if statements or even an intermediate variable in this case. Just go <code>for index, row in df.head(listLength).iterrows():</code></span>
<span class="comment-copy">Great solution but putting the default into an <code>else</code> clause at the end is frequently a good choice, especially if that is in fact an error condition and something should be logged or raised.</span>
<span class="comment-copy">Too late! This answer exists. Sometimes its a question of sheer typing speed.</span>
