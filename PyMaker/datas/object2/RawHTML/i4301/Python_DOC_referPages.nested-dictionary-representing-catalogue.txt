<div class="post-text" itemprop="text">
<p>A text file has information about after class activities (name, price per month, days and time) that looks like so:</p>
<pre><code>Swimming,20,Monday,15,Monday,17,Wednesday,18,Friday,15
Football,20,Tuesday,18,Wednesday,17,Wednesday,18,Thursday,19
Ballet,40,Monday,18,Tuesday,18,Wednesday,16,Thursday,16,Friday,17
</code></pre>
<p>To represent the course catalogue, I've created a nested dictionary in a format like this:</p>
<pre><code>{'Swimming': {'Price': '20', 'Dates': {'Monday': ['15', '17'], 'Wednesday': ['18'], 'Friday': ['15']}}, 'Football': {'Price': '20', 'Dates': {'Tuesday': ['18'], 'Wednesday': ['17', '18'], 'Thursday': ['19']}}, 'Ballet': {'Price': '40', 'Dates': {'Monday': ['18'], 'Tuesday': ['18'], 'Wednesday': ['16'], 'Thursday': ['16'], 'Friday': ['17']}}}
</code></pre>
<p>And the code looks like this:</p>
<pre><code>    with open("fil.txt", "r") as f:
        catalogue = {}
        while True:
            content = f.readline().strip()
            if not content: break
            content = content.split(',')
            u[content[0]] = {}
            u[content[0]]['Price'] = content[1]
            u[content[0]]['Dates'] = {}
            for i in range(2,len(content),2): 
                if content[i] in u[content[0]]['Dates']:
                    u[content[0]]['Dates'][content[i]].append(content[i+1])
                else:
                    u[content[0]]['Dates'][content[i]] = [content[i+1]]
</code></pre>
<p>My question is : is there a simpler way to implement such dictionary? Or maybe another data structure should have been used to represent catalogue rather than this one? </p>
</div>
<div class="post-text" itemprop="text">
<p>This is one way using a nested dictionary structure via <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><code>collections.defaultdict</code></a>.</p>
<pre><code>from collections import defaultdict

u = defaultdict(lambda: defaultdict(lambda: defaultdict(list)))

with open("fil.txt", "r") as f:
    catalogue = {}
    while True:
        content = f.readline().strip()
        if not content: break
        content = content.split(',')
        u[content[0]]['Price'] = content[1]
        for i in range(2,len(content),2): 
            u[content[0]]['Dates'][content[i]].append(content[i+1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I would simply write a class.</p>
<pre><code>from collections import defaultdict

class SportClass:
    def __init__(self, name, price, *times):
        self.name = name
        self.price = float(price)
        self.days = defaultdict(list)
        for day, hour in zip(times[::2], times[1::2]):
            self.days[day].append(int(hour))

with open('fil.txt') as fp:
    classes = [SportClass(*line.split(',')) for line in fp if line.strip()]
</code></pre>
</div>
<span class="comment-copy">The output data structure looks appropriate for the task.</span>
