<div class="post-text" itemprop="text">
<p>How can i have rounded floating point numbers to be of equal values (so that <code>==</code> returns <code>True</code>) no matter what operations get applied on them (i want the end rounded results to be the same float). I have the following function:</p>
<pre><code>def _round(f, n):
  x = f * pow(10, n)
  return truediv(int(x), pow(10, n))
</code></pre>
<p>but it still doesn't give me the same floating number. Is there a way to make a float (no matter how it has been calculated) to look always strictly the same, since they are being used in a dictionary as keys and any small change results in a <code>KeyError</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think if you can control the accuracy of your floats without jeopardizing your application you can do something like:</p>
<pre><code>round(f, n)
</code></pre>
<p>instead of your code. Just round to the n-th digit of your float.</p>
<p>for example:</p>
<pre><code>a = 2.12423
b = 2.12456
for i in range(1,5):
    print('round(a, {}) == round(b, {}) = {}'.format(i, i, round(a, i) == round(b, i)))
</code></pre>
<blockquote>
<p>round(a, 1) == round(b, 1) = True<br/>
  round(a, 2) == round(b, 2) = True<br/>
  round(a, 3) == round(b, 3) = False<br/>
  round(a, 4) == round(b, 4) = False</p>
</blockquote>
<p>This <a href="https://stackoverflow.com/questions/23721230/float-values-as-dictionary-key">answer</a> also is really relevant.</p>
</div>
<div class="post-text" itemprop="text">
<p>OK, if you need straight decimal truncation (i.e. without rounding up when last decimal is above 5) and use the result as a key for dictionnaries, I would suggest to convert the whole thing into strings. For instance:</p>
<pre><code>def _round(f, n):
   return str(round(f, n+1))[:-1]

for n in range(9):
  print(n, '--&gt;', _round(0.123456789, n))
</code></pre>
<p>Result:</p>
<pre><code>0 --&gt; 1.
1 --&gt; 1.2
2 --&gt; 1.23
3 --&gt; 1.234
4 --&gt; 1.2345
5 --&gt; 1.23456
6 --&gt; 1.234567
7 --&gt; 1.2345678
</code></pre>
<p>If you need to perform some computation on the values afterwards, it's easy to convert back with <code>float(x)</code></p>
</div>
<span class="comment-copy">did you try to use <a href="https://docs.python.org/3/library/decimal.html?highlight=decimal#module-decimal" rel="nofollow noreferrer"><code>decimal</code></a> instead of <code>float</code>?</span>
<span class="comment-copy">Your function does not round to the nearest value for the last decimal but rather truncate to only keep a given number of decimals. Is this the behavior you need?</span>
<span class="comment-copy">@sciroccorics Yes</span>
<span class="comment-copy">Why are you using floating point numbers as dictionary keys? What value does the float represent? Generally, floating-point numbers are useful for measuring continuous values (e.g. physical measurements), not for discrete values (e.g. money, array indexes). Using a float as a dictionary key in the first place is a bit of a code smell that you may want a different type of value there anyway.</span>
<span class="comment-copy">I would argue that musical beats aren't actually continuous, they're discrete. I think what you want is a rational number type: e.g. you want the <code>fractions</code> module.</span>
