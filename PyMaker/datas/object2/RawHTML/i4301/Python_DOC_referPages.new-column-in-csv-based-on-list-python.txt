<div class="post-text" itemprop="text">
<p>I have a csv file (VV_AL_3T3_P3.csv) and each of the rows of each csv file correspond to tiff images of plankton. It looks like this:</p>
<pre><code>Particle_ID  Diameter  Image_File                   Lenght ....etc
          1     15.36  VV_AL_3T3_P3_R3_000001.tif    18.09
          2     17.39  VV_AL_3T3_P3_R3_000001.tif    19.86
          3     17.21  VV_AL_3T3_P3_R3_000001.tif    21.77
          4      9.42  VV_AL_3T3_P3_R3_000001.tif     9.83
</code></pre>
<p>The images were located all together in a folder and then classified by shape in folders. The name of the tiff images is formed by the Image_file + Particle ID; for example for the first row: VV_AL_3T3_P3_R3_000001_1.tiff</p>
<p>Now, I want to add a new column called 'Class' into the csv file that I already have (VV_AL_3T3_P3.csv) with the name of the folder where each .tiff file is located (the class) using python; like this:</p>
<pre><code>Particle_ID  Diameter  Image_File                   Lenght   Class
          1     15.36  VV_AL_3T3_P3_R3_000001.tif    18.09   Spherical
          2     17.39  VV_AL_3T3_P3_R3_000001.tif    19.86   Elongated
          3     17.21  VV_AL_3T3_P3_R3_000001.tif    21.77   Pennates
          4      9.42  VV_AL_3T3_P3_R3_000001.tif     9.83   Others
</code></pre>
<p>So far, I have a list with the names of the folders where every tiff file is located. This is the list that will be the new column. However, how can I do to fit every folder with its row? In other words, matching the 'Class' with 'Particle ID' and 'Image file'.</p>
<p>For now:</p>
<pre><code>## Load modules:
import os
import pandas as pd
import numpy as np
import cv2

## Function to recursively list files in dir by extension
def file_match(path,extension):
    cfiles = []
    for root, dirs, files in os.walk('./'):
        for file in files:
            if file.endswith(extension):
                cfiles.append(os.path.join(root, file))
    return cfiles


## Load all image file at all folders:
image_files = file_match(path='./',extension='.tiff')

## List of directories where each image was found:
img_dir = [os.path.dirname(one_img)[2:] for one_img in image_files]
len(img_dir)

## List of images:
# Image file column in csv files:
img_file = [os.path.basename(one_img)[:22] for one_img in image_files]
len(img_file)
# Particle id column in csv files:
part_id  = [os.path.basename(one_img)[23:][:-5] for one_img in image_files]
len(part_id)

## I have the information related with the collage picture, particle id and the classification folder.
# Now i need to create a loop where this information is merged...

## Load csv file:
data = pd.read_csv('VV_AL_3T3.csv')
sample_file = data['Image File']  # Column name
sample_id   = data['Particle ID'] # Particle ID
</code></pre>
<p>I have seen a similar case here: <a href="https://stackoverflow.com/questions/46789098/create-new-column-in-dataframe-with-match-values-from-other-dataframe">Create new column in dataframe with match values from other dataframe</a></p>
<p>but I don't really know how to use the 'map.set_index' and also, he has two data frames whereas I just have one.</p>
</div>
<div class="post-text" itemprop="text">
<p>For the first part of your question, use os.path.split</p>
<p>If your path was... /home/usuario/Desktop/Classification/Fraction_9to20um/Classes/test</p>
<pre><code>os.path.split(path)[1]
</code></pre>
<p>would return test.</p>
<p>then in your for loop, append that to each row</p>
<pre><code>for row in rows:
    row = row.append(os.path.split(path)[1]
    writer.writerow(row)
</code></pre>
<p>ref: <a href="https://docs.python.org/3/library/os.path.html" rel="nofollow noreferrer">https://docs.python.org/3/library/os.path.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/os.path.html#os.path.split" rel="nofollow noreferrer"><code>os.path.split(path)</code></a> to break a path into two parts: the beginning and the last piece, whether it's a file or a directory. </p>
<p>For example: </p>
<pre><code>myPath = '/test/second/third/theFile.txt'
firstPair = os.path.split(myPath)
# firstPair == ('/test/second/third', 'theFile.txt')
</code></pre>
<p>If you have the full filepath and want the last directory name, run this command twice:</p>
<pre><code>filePath = '/home/usuario/Desktop/Classification/Fraction_9to20um/Classes/ClassA/img_001.tiff'
firstPair = os.path.split(filePath)
secondPair = os.path.split(firstPair[0])
print(secondPair[1])
# ClassA
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like my_files is a list of (paths+tiff_file_name). What you want is the last segment of the parent directory's absolute path, it seems.</p>
<p>So, <code>/some/path/to/directory/classA/instance.tiff</code> would be given to <code>classA</code>.</p>
<p>There are two approaches, with two slightly different interpretations</p>
<p>1) The second last part of the path is the class.</p>
<p><code>rows = [file.split(os.path.sep)[-2] for file in my_files]</code></p>
<p>2) The containing directory of the file, relative to the <code>Classes</code> directory, is the class.</p>
<p><code>rows = [
  os.path.relpath(
    os.path.dirname(file), 
    '/home/usuario/Desktop/Classification/Fraction_9to20um/Classes/'
  )
  for file in my_files
]</code></p>
<hr/>
<p>EDIT (for clarification/sample): In order to write out classes with their files,</p>
<pre><code>with open(output_path, "w") as f:
    writer = csv.writer(f)
    # optionally, write the header
    writer.writerow(['full_img_path', 'img_class'])
    for file in my_files:
        img_class = os.path.relpath(
            os.path.dirname(file),
            '/home/usuario/Desktop/Classification/Fraction_9to20um/Classes/'
        )
        writer.writerow([file, img_class])
</code></pre>
<p>It's not clear from your question if you want your <code>output_path</code> to be class.csv or VV_AL_3T3_P3.csv, but hopefully you see that it's easily interchangeable.</p>
<p>Note that the above pattern tends to be easy enough to implement/debug if there is a one-to-one correspondence between inputs and outputs (input -&gt; simple transform -&gt; output). But once you begin aggregating data (say, the average number of files per class), you might want to begin exploring a data manipulation library like pandas.</p>
</div>
<span class="comment-copy">Please, provide some example of input and output data. See <a href="https://stackoverflow.com/help/mcve">How to create a Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy">I followed your indications, However I have 827 .tiff images. Is there a way to do it at once?</span>
<span class="comment-copy">You were right, my_files is a list of (paths+.tiff). I followed the second approch and now I have a list called rows with the different classes, the names of the folders containing the .tiff files. However, how do I convert that into a new column of my csv file, VV_AL_3T3_P3.csv? I want that every .tiff file goes with its folder.</span>
<span class="comment-copy">See the edit. For writing, the csv.writer will usually have you write arrays of values out. So simply calculate all your values per row, and write them out as an array.</span>
<span class="comment-copy">I edited the question, I hope now is clearer. I obtained two columns, one with the path and another with the belonging class but they didn't fit with the rest of the column like Image_File, Particle ID, Diameter...etc. I am so sorry if I am disturbing you, I really apreciate your help and it is helping me to learn more about Python.</span>
