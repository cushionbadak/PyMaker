<div class="post-text" itemprop="text">
<p>I have a module that imports another module like this:</p>
<pre><code>#main-file.py
import src.FetchFunction.video_service.fields.urls as urls

def some_func():
  return urls.fetch()
</code></pre>
<p>now I want to test this file like this:</p>
<pre><code>import unittest
import src.FetchFunction.video_service.fields.urls as urls
from unittest.mock import MagicMock

class MainFileTest(unittest.TestCase):

    def test_example(self):
      urls.fetch = MagicMock(return_value='mocked_resp')
      assertSomething()
</code></pre>
<p>this part works well and does what I want.
BUT
this affects other tests file...
I mean I have other tests that use the "urls.fetch"
and now instead of getting the proper flow
they get the above mocked response.</p>
<p>Any idea?</p>
<ul>
<li>quite sure its not related but Im using <code>pytest</code> to run my tests</li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/unittest.mock.html#unittest.mock.patch" rel="nofollow noreferrer"><code>patch</code></a> in a context to define the scope where the mocked <code>fetch</code> should be used. In the example below, outside the <code>with</code> block the <code>urls.fetch</code> is reverted to the original value:</p>
<pre><code>import unittest
from unittest.mock import patch

class MainFileTest(unittest.TestCase):

    def test_example(self):
        with patch('urls.fetch', return_value='mocked_resp'):
            # urls.fetch is mocked now
            assertSomething()
        # urls.fetch is not mocked anymore
</code></pre>
</div>
<span class="comment-copy">where were you 4 days ago... Thanks!</span>
<span class="comment-copy">sorry ^_^ but glad to hear it helped you!</span>
<span class="comment-copy">Hey @hoefling any ideas on how to mock this imported module in the tested file. "from .modifiers import Modifiers". Patch does seem to be nice</span>
<span class="comment-copy">Do you want to mock the module? Or do you want to mock what you actually import from it (<code>Modifiers</code> class)? Check out <a href="https://stackoverflow.com/a/48847105/2650249">my other answer</a> for the mocking possibilities for the imported stuff.</span>
