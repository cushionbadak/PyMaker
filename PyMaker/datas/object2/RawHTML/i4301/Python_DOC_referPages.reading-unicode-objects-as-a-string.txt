<div class="post-text" itemprop="text">
<p>I have an excel sheet crawled from a website using beautifulsoup and printed that unicode object result as it is into csv like </p>
<blockquote>
<p>{u'rgb': u'190,190,190', u'type': u'INTERIOR', u'name': u'Orchid, premium leather'}, {u'rgb': u'60,79,77', u'type': u'EXTERIOR', u'name': u'Nord Gray Metallic'}</p>
</blockquote>
<p>But now I'm not able to read them using pandas as a dictionary as it is returning single strings like '{',"u".</p>
<p>I tried encoding the string too but no result.
I want to read the dictionaries as it is.</p>
</div>
<div class="post-text" itemprop="text">
<p>You cant append <code>"["</code> and  <code>"]"</code> characters to the string. And then use <code>eval()</code> to convert it into a list of dicts:</p>
<pre><code>f = open("data.csv", "r")
data_string = "[" + f.read() + "]"
data_list = eval(data_string)

for data in data_list:
    print(data)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow noreferrer"><code>literal_eval</code></a> function from the <a href="https://docs.python.org/3/library/ast.html" rel="nofollow noreferrer"><strong>ast</strong></a> module. </p>
<p><strong>Ex:</strong></p>
<pre><code>import pandas as pd
import ast
d = "{u'rgb': u'190,190,190', u'type': u'INTERIOR', u'name': u'Orchid, premium leather'}, {u'rgb': u'60,79,77', u'type': u'EXTERIOR', u'name': u'Nord Gray Metallic'}"
d = list(ast.literal_eval(d))
df = pd.DataFrame.from_dict(d)
print(df)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>                      name          rgb      type
0  Orchid, premium leather  190,190,190  INTERIOR
1       Nord Gray Metallic     60,79,77  EXTERIOR
</code></pre>
</div>
<span class="comment-copy">Since you tagged <code>json</code>, use <code>json.dumps()</code> to write the dictionary to a CSV, and <code>json.loads</code> to convert the string back to a dictionary.</span>
<span class="comment-copy">File "C:\ProgramData\Anaconda2\lib\ast.py", line 80, in literal_eval     return _convert(node_or_string)   File "C:\ProgramData\Anaconda2\lib\ast.py", line 79, in _convert     raise ValueError('malformed string') ValueError: malformed string</span>
<span class="comment-copy">Can you post some of your data. Looks like the string are having some irregularities.</span>
<span class="comment-copy">{u'rgb': u'158,13,23', u'type': u'EXTERIOR', u'name': u'San Marino Red'}, {u'rgb': u'0,0,0', u'type': u'INTERIOR', u'name': u'Ebony, premium leather'}, {u'rgb': u'212,194,160', u'type': u'INTERIOR', u'name': u'Parchment, premium leather'}, {u'rgb': u'60,72,110', u'type': u'EXTERIOR', u'name': u'Fathom Blue Pearl'}, {u'rgb': u'73,74,76', u'type': u'EXTERIOR', u'name': u'Modern Steel Metallic'}</span>
<span class="comment-copy">df['colors'][0] of my csv looks like this.</span>
<span class="comment-copy">I crawled the data from website and wrote parts of json directly to csv. It is printed as unicode object because I didnt do any encoding. I want to read each unicode objects as a list element or as a single string but it is returning me a single letter as a string.</span>
