<div class="post-text" itemprop="text">
<p>I have this <code>main_dict</code> created and want to see if <code>main_dict[x]["Description"]</code> exists or not, and if yes, then delete it. Where <code>x</code> is <code>'pins'</code>, <code>'nails'</code>, <code>'board'</code>, etc ...</p>
<pre><code>main_dict = {
'pins':
    {
        'Category': ['General'],
        'Contact': ['Mark'],
        'Description': ['This', 'is', 'a']
    },
'nails':
    {
        'Category': ['specific'],
        'Contact': ['Jon'],
        'Description': ['This', 'is', 'a', 'description']
    },
'board':
    {
        'Category': ['General'],
        'Contact': ['Mark'],
        'Description': ['This', 'is', 'a']
    },
'hammer':
    {
        'Category': ['tools'],
        'Contact': ['Jon'],
        'Description': ['This', 'is', 'a', 'description']
    }
}
</code></pre>
<p>I tried this:</p>
<pre><code>for x in main_dict:
   del main_dict[x]["Description"]
</code></pre>
<p>This returns error if <code>main_dict[x]["Description"]</code> does not exist.</p>
<p>Also this does not work:</p>
<pre><code>if main_dict[x]["Description"] in mainDict[x]:
     del main_dict[x]["Description"]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This would remove it from any sub-dictionaries that contain it:</p>
<pre><code>main_dict = {
    'pins':
        {
            'Category': ['General'],
            'Contact': ['Mark'],
            'Description': ['This', 'is', 'a']
        },
    'nails':
        {
            'Category': ['specific'],
            'Contact': ['Jon'],
            'Description': ['This', 'is', 'a', 'description']
        },
    'board':
        {
            'Category': ['General'],
            'Contact': ['Mark'],
            'Description': ['This', 'is', 'a']
        },
    'hammer':
        {
            'Category': ['tools'],
            'Contact': ['Jon'],
            'Description': ['This', 'is', 'a', 'description']
        }
}

for key, value in main_dict.items():
    if isinstance(value, dict) and 'Description' in value:
        del value['Description']
</code></pre>
<p>Result:</p>
<pre><code>{
    'pins':
        {
            'Category': ['General'],
            'Contact': ['Mark'],
        },
    'nails':
        {
            'Category': ['specific'],
            'Contact': ['Jon'],
        },
    'board':
        {
            'Category': ['General'],
            'Contact': ['Mark'],
        },
    'hammer':
        {
            'Category': ['tools'],
            'Contact': ['Jon'],
        }
}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You simply use <code>pop()</code> method with default argument(e.g. <code>None</code>) to omit checking if <code>"Description"</code> exist as key.</p>
<pre><code>for i in main_dict:
    main_dict[i].pop("Description", None)
</code></pre>
<p><em>Note:</em> it's not a good practice to change iterable object while iterating over it.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here's a simple solution:</p>
<pre><code>for x in main_dict:
    if "Description" in main_dict[x]:
        main_dict[x].pop("Description")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>To check if a key is in a dictionary try <code>if key in dict</code> to check in nested dictionaries you follow the same logic:</p>
<pre><code>for key in main_dict:
    if 'Description' in main_dict[key]:
        # do something
</code></pre>
<p>About removing an element, you should indeed use the <a href="https://docs.python.org/3/reference/simple_stmts.html#grammar-token-del_stmt" rel="nofollow noreferrer"><code>del</code> statement</a>. I copied your main_dict, and ran the same as you:</p>
<pre><code>for x in main_dict: 
    del main_dict[x]['Description']
</code></pre>
<p>Maybe you're trying to remove it twice?</p>
</div>
<span class="comment-copy">The second works if you use it correctly. Try: <code>if "Description" in main_dict[x] </code></span>
<span class="comment-copy">that works absolutely fine.</span>
