<div class="post-text" itemprop="text">
<p>We want to build a tokenizer for simple expressions such as <code>xpr = "res = 3 + x_sum*11"</code>. </p>
<p>Such expressions comprise only three tokens, as follows:  </p>
<p>(1) <strong>Integer literals</strong>: one or more digits e.g., <code>3</code> or <code>11</code>;<br/>
(2) <strong>Identifiers</strong>: strings starting with a letter or an underscore and followed by more letters, digits, or underscores e.g., <code>res</code> or <code>x_sum</code>;<br/>
(3) <strong>Operators</strong>: <code>=</code>, <code>+</code>, <code>*</code>, etc.</p>
<p>Leading or trailing white-space characters should be skipped.</p>
<p>To find which token each lexeme is associated with, we only need to find the first non-empty item in each tuple. Write a tokenize  generator (using <code>re.findall</code> and <code>map</code>) that returns all pairs (tuples) of lexemes and tokens. The output of <code>list(tokenize(xpr))</code> should thus be:</p>
<pre><code>[('res', 'id'), ('=', 'op'), ('3', 'int'), ('+', 'op'), ('x_sum', 'id'), ('*', 'op'), ('11', 'int')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/tokenize.html#tokenize.tokenize" rel="nofollow noreferrer"><code>tokenize.tokenize</code></a>:</p>
<pre><code>import tokenize
import token
import io
import collections

class Token(collections.namedtuple('Token', 'num val start end line')):

    @property
    def name(self):
        return token.tok_name[self.num]

    def __repr__(self):
        return '{} {!r} ({} {}): {!r}'.format(self.name, self.val,
                                              self.start, self.end, self.line)


line = b'res = 3 + x_sum*11'
result = [Token(*item) for item in tokenize.tokenize(io.BytesIO(line).readline)]
result = [(tok.val, tok.name) for tok in result[1:-1]]
print(result)
</code></pre>
<p>yields</p>
<pre><code>[('res', 'NAME'), ('=', 'OP'), ('3', 'NUMBER'), ('+', 'OP'), ('x_sum', 'NAME'), ('*', 'OP'), ('11', 'NUMBER')]
</code></pre>
<p>You could modify the <code>Token.name</code> property to match your specification exactly, but since the token names as shown above are already defined in the <a href="https://docs.python.org/3.0/library/token.html" rel="nofollow noreferrer"><code>token</code> module</a>, you may want to change your specification to match what Python uses (if you can).</p>
</div>
<span class="comment-copy">And I want a pony. Do you have a question?</span>
<span class="comment-copy">Do you have anything written so far? We might be able to help you if youre stuck, but i dont think anyone wants to do the whole thing for you</span>
