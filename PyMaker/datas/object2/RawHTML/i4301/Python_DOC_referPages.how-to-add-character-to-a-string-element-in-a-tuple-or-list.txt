<div class="post-text" itemprop="text">
<p>I have the following sentence: </p>
<pre><code>sentence = "&lt;s&gt; online auto body &lt;s&gt;" 
</code></pre>
<p>And I would like first to make words 3-grams out of it as: </p>
<pre><code>('&lt;s&gt;', 'outline', 'auto')
('online', 'auto', 'body')
('auto', 'body', '&lt;s&gt;')
</code></pre>
<p>To do so I used the following code:</p>
<pre><code>sentence = '&lt;s&gt; online auto body &lt;s&gt;'
n = 3
word_3grams = ngrams(sentence.split(), n)
for grams in word_3grams: 
    print(grams)
</code></pre>
<p>Now, I would like to get "#" at the beginning and at the end of every word, as follows: </p>
<pre><code>('#&lt;s&gt;#','#outline#','#auto#')
('#online#', '#auto#', '#body#')
('#auto#', '#body#', '#&lt;s&gt;#')
</code></pre>
<p>But I don't know what to do in order to get it. As a side note elements here are tuples but it wouldn't mind using lists.</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is a solution from the beginning:</p>
<pre><code>sentence = "&lt;s&gt; online auto body &lt;s&gt;" 
n = 3

# Split the sentence into words and append the '#' symbol.
words = tuple(map(lambda w: '#'+w+'#', sentence.split()))

# Create a list of elements consisting of three consecutive words.
splits = [words[i:i+n] for i in range(len(words)-(n-1))]

#Print results.
for elem in splits:
    print(elem)
</code></pre>
<p>Output:</p>
<pre><code>('#&lt;s&gt;#', '#online#', '#auto#')
('#online#', '#auto#', '#body#')
('#auto#', '#body#', '#&lt;s&gt;#')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You want a sliding window like feature.</p>
<pre><code>from itertools import islice

sentence = "&lt;s&gt; online auto body &lt;s&gt;"
myList = sentence.split()
myList = ['#' + word + '#' for word in myList]

slidingWindow = [islice(myList, s, None) for s in range(3)]
print(list(zip(*slidingWindow)))

# [('#&lt;s&gt;#', '#online#', '#auto#'), ('#online#', '#auto#', '#body#'), ('#auto#', '#body#', '#&lt;s&gt;#')]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you just want to change the strings, try:</p>
<pre><code>map(lambda s: "#" + s + "#", sentence.split())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python a tuple is immutable, which means it can't be modified.
As you somehow suggested, it would be better to use lists, more precisely
 <a href="https://www.digitalocean.com/community/tutorials/understanding-list-comprehensions-in-python-3" rel="nofollow noreferrer">list comprehension</a>:</p>
<pre><code>aList = ['auto', 'body', '&lt;s&gt;']
newList = ['#' + item + '#' for item in aList]
print (newList)
# ['#auto#', '#body#', '#&lt;s&gt;#']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can do this using list comprehension and <a href="https://docs.python.org/3/library/string.html#format-string-syntax" rel="nofollow noreferrer">format</a> function:</p>
<pre><code>word_3grams = [('&lt;s&gt;', 'outline', 'auto'),
               ('online', 'auto', 'body'),
               ('auto', 'body', '&lt;s&gt;')]

for grams in word_3grams: 
    print ["{pad}{data}{pad}".format(pad='#', data=s) for s in grams]

['#&lt;s&gt;#', '#outline#', '#auto#']
['#online#', '#auto#', '#body#']
['#auto#', '#body#', '#&lt;s&gt;#']
</code></pre>
</div>
<span class="comment-copy">because of <code>'#' + word + '#'</code></span>
<span class="comment-copy"><code>print(zip(*slidingWindow))</code> only works in python 2. you need to force iteration in python 3</span>
<span class="comment-copy">I tried it with the code above with Python 3.5 and all I get is <code>&lt;itertools.islice object at 0x000001A6E69D3DB8&gt;</code>. How could I force iteration?</span>
<span class="comment-copy">Corrected, you can try again @Marisa</span>
