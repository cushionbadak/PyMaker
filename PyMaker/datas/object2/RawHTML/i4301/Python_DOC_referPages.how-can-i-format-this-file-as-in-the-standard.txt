<div class="post-text" itemprop="text">
<p>I have a huge file (corpus) which includes words and their POS Tags but also some unrelated information in-between which I want to delete. Unrelated information consists only of some number of characters. And 1 space is used to distinguish words-irrelevant informations-POS Tags . Specifically each word in a sentence are split by a newline and sentences are split by two newlines. It has the following format:</p>
<pre><code>My RRT PRP
Name DFEE NN
is  PAAT VBZ
Selub KP NNP
. JUM .   

Sentence_2
</code></pre>
<p>I want to keep the information in this file as an array of sentences where each sentence is an array of words. As follows:</p>
<pre><code>[[('My', 'PRP'), ('name', 'NN'), ('is', 'VBZ'), ('Selub.', 'NNP'), ('.', '.')], ...]
</code></pre>
<p>As a beginner of Python, I will appreciate any help.</p>
</div>
<div class="post-text" itemprop="text">
<p>I split your sentence into two so we can see the split in the output</p>
<pre><code>My RRT PRP
Name DFEE NN

is  PAAT VBZ
Selub KP NNP
. JUM . 
</code></pre>
<p>We can use a generator that yields lists to divide our sentences:</p>
<pre><code>def splitter(lines):
    sentence = []
    for line in lines:
        if not line.strip():  # empty line
            if not sentence:  # blanks before sentences
                continue
            else:  # about to start new sentence
                yield sentence
                sentence = []
        else:
            word, _, tag = line.split()  # Split the line
            sentence.append((word, tag))  # Add to current sentence
    yield sentence  # Yield the last sentence

with open('infile.txt') as f:
    list_of_sentences = list(splitter(f))  # consume the generator into a list
    print(list_of_sentences)
    # [[('My', 'PRP'), ('Name', 'NN')], [('is', 'VBZ'), ('Selub', 'NNP'), ('.', '.')]]
</code></pre>
</div>
<span class="comment-copy">Welcome to SO. Unfortunately this isn't a discussion forum or tutorial service. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links found on that page.  Invest some time working your way through <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a>, practicing the examples. It will give you an introduction to the tools Python has to offer and you may even start to get ideas for solving your problem.<a href="https://meta.stackoverflow.com/questions/284236/why-is-can-someone-help-me-not-an-actual-question">Why “Can someone help me?” is not an actual question?</a>.</span>
