<div class="post-text" itemprop="text">
<p>This is the code I have so far:</p>
<pre><code>def most_oscars(d):
    v=list(d.values())
    k=list(d.keys())
    return k[v.index(max(v))]
</code></pre>
<p>Current output:</p>
<pre><code>Meryl Streep
</code></pre>
<p>But it needs to print like <code>('Meryl Streep', 20)</code></p>
<p>What do I need to add/change?</p>
</div>
<div class="post-text" itemprop="text">
<p>One way is to use <a href="https://docs.python.org/3/library/operator.html#operator.itemgetter" rel="nofollow noreferrer"><code>operator.itemgetter</code></a>.</p>
<pre><code>import operator

def most_oscars(d):
    return max(d.items(), key=operator.itemgetter(1))

nominees = {'Meryl Streep': 20, 'Robert De Niro': 7, 'Michael Caine': 6, 'Maggie Smith': 6}

print(most_oscars(nominees))

# ('Meryl Streep', 20)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since it's entirely feasible for two actors to have the same maximum number of Oscars, you can use a list comprehension to return a list of tuples:</p>
<pre><code>def most_oscars(d):
    maxval = max(d.values())
    return [(k, v) for k, v in d.items() if v == maxval]

nominees = {'Meryl Streep': 20, 'Robert De Niro': 20, 'Michael Caine': 6, 'Maggie Smith': 6}

print(most_oscars(nominees))

# [('Meryl Streep', 20), ('Robert De Niro', 20)]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try this</p>
<pre><code>def most_oscars(d):
    max_key = max(d, key=d.get)
    reslt_pair = tuple([max_key,d[max_key]])
    print(reslt_pair)
</code></pre>
</div>
<span class="comment-copy"><code>return k[v.index(max(v))], max(v)</code></span>
<span class="comment-copy"><code>max(d.items(),key=lambda x: x[1])</code> will do the job!</span>
