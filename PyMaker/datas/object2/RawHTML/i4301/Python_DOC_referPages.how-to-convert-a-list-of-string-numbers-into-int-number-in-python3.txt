<div class="post-text" itemprop="text">
<p>Possible Duplicate: <a href="https://stackoverflow.com/questions/642154/how-to-convert-strings-into-integers-in-python">How to convert strings into integers in Python?</a></p>
<p>Hello guys, </p>
<p>I am trying to convert this string integers from a nested list to integers. This is my list:</p>
<pre><code>listy = [['+', '1', '0'], ['-', '2', '0']]
</code></pre>
<p>I trying to convert to this:</p>
<pre><code>[['+', 1, 2], ['-', 2, 0]]
</code></pre>
<p>This what I have tried so far, but my second line of code is taken from one of the answers in the question <a href="https://stackoverflow.com/questions/642154/how-to-convert-strings-into-integers-in-python">How to convert strings into integers in Python?</a></p>
<pre><code>listy = [['+', '1', '0'], ['-', '2', '0']]
T2 = [list(map(int, x)) for x in listy]
print(T2)
</code></pre>
<p>But it gives me an error:</p>
<pre><code>ValueError: invalid literal for int() with base 10: '+'
</code></pre>
<p>Is there any possible way to fix this in Python 3?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/stdtypes.html#str.isdigit" rel="noreferrer"><code>isdigit()</code></a>:</p>
<pre><code>x = [['+', '1', '0'], ['-', '2', '0']]    
x = [[int(i) if i.isdigit() else i for i in j] for j in x]
</code></pre>
<p>Output:</p>
<pre><code>[['+', 1, 0], ['-', 2, 0]]
</code></pre>
<p>If you want to a solution that works for signed integers as well:</p>
<pre><code>x = [['+', '1', '0'], ['-', '-2', '0']]

def check_conversion(x):
  try:
    return int(x)
  except:
    return x

x = [list(map(check_conversion, i)) for i in x]
</code></pre>
<p>Output:</p>
<pre><code>[['+', 1, 0], ['-', -2, 0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're getting ValueError because <code>'+'</code> and <code>'-'</code> cannot be converted to a type <code>int</code>.  So you will need to check the type and/or contents of each string that you are looking to convert.  The following example checks to see if each item in a sublist contains only digits 0-9:</p>
<pre><code>listy = [['+', '1', '0'], ['-', '2', '0']]
T2 = [[int(x) if x.isdigit() else x for x in sublisty] for sublisty in listy]
print(T2)
&gt;&gt;&gt; [['+', 1, 0], ['-', 2, 0]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem with your solution is that the first items in both inner arrays are not a number so when you try to convert them it gives you that error.</p>
<p>You can do this if you don't know in which positions the non-numbers will be:</p>
<pre><code>outerList = [['+', '1', '0'], ['-', '2', '0']]
result = []
for innerList in outerList:
  innerResult = []
  for elem in innerList:
    try:
      number = int(elem)
      innerResult.append(number)
    except Exception as e:
      innerResult.append(elem)
  result.append(innerResult)
print(result)
</code></pre>
<p>If it's always the first one that is not a number then you can do:</p>
<pre><code>outerList = [['+', '1', '0'], ['-', '2', '0']]
result = []
for innerList in outerList:
  innerResult = []
  for i, elem in enumerate(innerList):
    if i == 0:
      innerResult.append(elem)
    else:
      innerResult.append(int(elem))
  result.append(innerResult)
print(result)
</code></pre>
</div>
<span class="comment-copy">Modify your map like <code>[list(map(lambda x: int(x) if x.isdigit() else x,a)) for a in listy]</code></span>
<span class="comment-copy">isdigit() only recognizes unsigned int. maybe enough for op. More on that topic: <a href="https://stackoverflow.com/questions/1265665/how-can-i-check-if-a-string-represents-an-int-without-using-try-except" title="how can i check if a string represents an int without using try except">stackoverflow.com/questions/1265665/â€¦</a></span>
<span class="comment-copy">@XinHuang nice catch, added in a workaround</span>
