<div class="post-text" itemprop="text">
<p>After reading the file directory using this line, </p>
<pre><code>x = glob.glob('**/*.txt', recursive = True)
</code></pre>
<p>I got this output, </p>
<pre><code>doping_center9_2.txt
doping_center9_3.txt
doping_center9_4.txt
doping_center9_5.txt
n_eff_doping_center1_1.txt
n_eff_doping_center1_2.txt
n_eff_doping_center1_3.txt
n_eff_doping_center1_4.txt
</code></pre>
<p>Now, I would like to create another list and appending the strings with a starting with <code>n_eff</code>. I tried this: </p>
<pre><code>n_eff = []
for i in range(len(x)):
    if x[i] == x[i].startswith("n_eff"):
         n_eff.append(x[i])
</code></pre>
<p>Unfortunately, nothing is happening there, not even an error.</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that <code>startswith</code> is returning boolean value (<code>True</code> or <code>False</code>). You are then checking if <code>x[i]</code> is equal to a boolean value which is always false because it contains string.</p>
<p>Changing the condition should help:
<code>
if x[i].startswith("n_eff"):
</code></p>
</div>
<div class="post-text" itemprop="text">
<p>If the output is multiline you need to split it with <code>split('\n')</code>.</p>
<p>Function <code>"&lt;string&gt;".startswith(&lt;arg&gt;)</code> returns True if <code>&lt;string&gt;</code> starts with the parameter string <code>&lt;arg&gt;</code>. You can check if a string starts with the specified sub string with this function. </p>
<p>Using list comprehension it can be written as:</p>
<pre><code>new_list = [x for x in output if x.startswith('\n')]
</code></pre>
<p>edited considering output a list.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>In [51]: x = '''doping_center9_2.txt
    ...: doping_center9_3.txt
    ...: doping_center9_4.txt
    ...: doping_center9_5.txt
    ...: n_eff_doping_center1_1.txt
    ...: n_eff_doping_center1_2.txt
    ...: n_eff_doping_center1_3.txt
    ...: n_eff_doping_center1_4.txt
    ...: '''.splitlines()
In [52]: x
Out[52]: 
['doping_center9_2.txt',
 'doping_center9_3.txt',
</code></pre>
<p>...
     'n_eff_doping_center1_4.txt']</p>
<p>Are you trying to do something like this?</p>
<pre><code>In [53]: for i in x:
    ...:     if i.startswith('n_eff'):
    ...:         print(i)
    ...:         
n_eff_doping_center1_1.txt
n_eff_doping_center1_2.txt
n_eff_doping_center1_3.txt
n_eff_doping_center1_4.txt
</code></pre>
</div>
<span class="comment-copy">Are you sure they don't have their path associated with them? When I run <a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer"><code>glob.glob(...)</code></a> I get <code>['folder1/file1.txt', 'folder2/file2.txt', ...]</code></span>
<span class="comment-copy">I think he may also have a problem with the strings including a full or partial path, but this is definitely the main problem.</span>
<span class="comment-copy">Thats exactly i was looking for. Thanks a lot! No, the path was working fine.</span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/glob.html" rel="nofollow noreferrer"><code>glob.glob(...)</code></a> returns a list of results, not a multiline string.</span>
