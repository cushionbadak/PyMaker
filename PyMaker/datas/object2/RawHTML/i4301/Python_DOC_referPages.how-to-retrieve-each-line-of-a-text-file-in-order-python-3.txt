<div class="post-text" itemprop="text">
<p>I'm attempting to compare two txt files and find the new lines from one file and write them into a new file. </p>
<p>I noticed that the new lines are written in a different order every time I run the program. Is there a way to preserve the original order?</p>
<p>I noticed that the disorder stems from <code>read().splitlines()</code> on lines 2 and 3. </p>
<p>My code:</p>
<pre><code>with open("C:/Temp/1_attlog.dat", "r") as f1, open("C:/Temp/attlog.dat","r") as f2, open("C:/Temp/attlog_new.dat", "w") as n:
f_a = set(f1.read().splitlines())
f_b = set(f2.read().splitlines())
for line in f_a:
    count_line += 1
    if line not in f_b:
        print(line)
        count_new_lines += 1
        n.writelines(line)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From The python documentation for <a href="https://docs.python.org/3/tutorial/datastructures.html#sets" rel="nofollow noreferrer"><strong>Set</strong></a>:</p>
<blockquote>
<p>A set is an <strong>unordered</strong> collection with no duplicate elements.</p>
</blockquote>
<p>When you save each line into a set the order in which the items are retrieved is not guaranteed to be the same as when they went in.</p>
<p>A better choice might be to use a <a href="https://docs.python.org/3.6/tutorial/introduction.html#lists" rel="nofollow noreferrer"><strong>List</strong></a> and in fact, the <a href="https://docs.python.org/3/library/stdtypes.html#str.splitlines" rel="nofollow noreferrer"><code>splitlines()</code></a> function already returns a list.</p>
<p>You should be able to fix your code by simply removing <code>set(...)</code> from line 2.</p>
<pre><code>with open("C:/Temp/1_attlog.dat", "r") as f1, open("C:/Temp/attlog.dat","r") as f2, open("C:/Temp/attlog_new.dat", "w") as n:
    f_a = f1.read().splitlines() # No more set
    f_b = set(f2.read().splitlines())
    for line in f_a:
        count_line += 1
        if line not in f_b:
            print(line)
            count_new_lines += 1
            n.writelines(line)
</code></pre>
</div>
<span class="comment-copy">You put the lines in a <code>set</code>. Sets are unordered containers.</span>
<span class="comment-copy">As khelwood said "set" doesn't keep order, You can use Orderedset: <a href="https://pypi.org/project/orderedset/" rel="nofollow noreferrer">pypi.org/project/orderedset</a></span>
<span class="comment-copy">Is there any benefit to using an OrderedSet instead of a List?</span>
<span class="comment-copy">Thanx! That did the work..</span>
