<div class="post-text" itemprop="text">
<p>What is the best way to print elements from a list of lists? I have a list that looks like this:</p>
<pre><code>l1 = [['hello', 'world', 'bye'], ['name', 'tour', 'now']]
</code></pre>
<p>I would like to print from this, element by element, so something like:</p>
<pre><code>hello name
world tour
bye now
</code></pre>
<p>I was thinking of using a while loop, something like:</p>
<pre><code>while i &lt; 3:
    print(l1[0][i], l1[1][i])
    i -= 1
</code></pre>
<p>But instead of providing the [0] and [1], I would personally prefer it to be coded for a general case.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>for i in range(len(l1[0])):
    for j in range(len(l1)):
        print(l1[j][i], end='')
        if j != len(l1)-1:
            print(' ', end='')
    print()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I believe the simplest way would be</p>
<pre><code>for l in zip(*l1):
    print ' '.join(l)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>use zip to merge the two lists together element by element: <code>print([' '.join(line) for line in zip(*l1)])</code></p>
<p>EDIT: to get the same output as specify by the OP:</p>
<p><code>print('\n'.join(' '.join(line) for line in zip(*l1)))</code></p>
</div>
<span class="comment-copy">Welcome to SO. Unfortunately this isn't a discussion forum or tutorial service. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links found on that page.  Invest some time working your way through <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a>, practicing the examples. It will give you an introduction to the tools Python has to offer and you may even start to get ideas for solving your problem.</span>
<span class="comment-copy">Thank you, but sadly the issue with this method is that it leaves a blank space at the end of the line that it prints</span>
<span class="comment-copy">I edited it to match your requirements.</span>
<span class="comment-copy">So basically you are checking to see if it's NOT the last element, and if that's true we add the space, otherwise no space is added. Right?</span>
<span class="comment-copy">Exactly. There are more elegant solutions but this is anyway scalable :)</span>
<span class="comment-copy">oops, there was already another answer using <code>zip(*l1)</code>. sorry about that. This answer wouldn't require two joins though.</span>
