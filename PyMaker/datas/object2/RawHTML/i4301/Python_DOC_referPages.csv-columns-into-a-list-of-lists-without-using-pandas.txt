<div class="post-text" itemprop="text">
<p>Say, I have an Excel file exported as a CSV file, 5 rows and 3 columns, with the following values:</p>
<pre><code>1.0 0.0 5.0
2.0 0.0 4.0
3.0 0.0 3.0
4.0 0.0 2.0
5.0 0.0 1.0
</code></pre>
<p>I need to get a list of lists with the sorted values of the correlative columns (in this example 3 columns, but it could be more...), like:</p>
<pre><code>OutputList = [[1.0, 2.0, 3.0, 4.0, 5.0], [0.0, 0.0, 0.0, 0.0, 0.0], [5.0, 4.0, 3.0, 2.0, 1.0]]
</code></pre>
<p>Unfortunately I cannot use Pandas. All answers I found were related to pandas or listing values in rows instead of columns (or code snippets that didn't work for me). </p>
</div>
<div class="post-text" itemprop="text">
<p>Using default <code>csv module</code></p>
<p><strong>Demo:</strong></p>
<pre><code>import csv
with open(filename, "r") as infile:
    reader = csv.reader(infile, delimiter=' ')
    OutputList = [map(float, list(i)) for i in zip(*reader)]

print(OutputList)
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>[[1.0, 2.0, 3.0, 4.0, 5.0], [0.0, 0.0, 0.0, 0.0, 0.0], [5.0, 4.0, 3.0, 2.0, 1.0]]
</code></pre>
<p><em>Edit as per comment.</em></p>
<pre><code>from itertools import izip_longest
import csv
with open(filename, "r") as infile:
    reader = csv.reader(infile, delimiter=' ')
    OutputList = [map(float, [j for j in list(i) if j is not None]) for i in izip_longest(*reader)]

print(OutputList)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could try it with the defaul csv module and the <code>zip</code> function:</p>
<pre><code>import csv
with open('book1.csv') as f:
    reader = csv.reader(f)
    a = list(zip(*reader))
    for i in a:
        print(i)
</code></pre>
<p>Output is:</p>
<pre><code>('1.0', '2.0', '3.0', '4.0', '5.0')
('0.0', '0.0', '0.0', '0.0', '0.0')
('5.0', '4.0', '3.0', '2.0', '1.0')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here is one approach to your problem without using <code>pandas</code> or <code>csv</code>:</p>
<p>Read the file into a list of rows and then use <code>zip</code> to convert it into a list of columns:</p>
<pre><code>delim = ";"  # based on OP's comment
with open("myfile") as f:
    OutputList = [[float(x) for x in line.split(delim)] for line in f]
OutputList = zip(*OutputList)

print(OutputList)
#[(1.0, 2.0, 3.0, 4.0, 5.0),
# (0.0, 0.0, 0.0, 0.0, 0.0),
# (5.0, 4.0, 3.0, 2.0, 1.0)]
</code></pre>
<p>This produces a list of tuples. If you wanted to change those to lists, you can easily convert them using:</p>
<pre><code>OutputList = [list(val) for val in OutputList]
print(OutputList)
#[[1.0, 2.0, 3.0, 4.0, 5.0],
# [0.0, 0.0, 0.0, 0.0, 0.0],
# [5.0, 4.0, 3.0, 2.0, 1.0]]
</code></pre>
</div>
<span class="comment-copy">Then remove tag pandas</span>
<span class="comment-copy">What about using csv reader? Have you looked at <a href="https://stackoverflow.com/questions/28283647/convert-csv-column-to-list">this possible duplicate question</a>?</span>
<span class="comment-copy">OK, thanks for the tip, @Wen</span>
<span class="comment-copy">Does your file have a header?</span>
<span class="comment-copy">No, it doesn't, @pault. That's why I posted the desired 'OutputList' including values in first row.</span>
<span class="comment-copy">In python3 you need to use <code>list(map(float, list(i)))</code></span>
<span class="comment-copy">python3 <code>OutputList = [list(map(float, list(i))) for i in zip(*reader)]</code></span>
<span class="comment-copy">In Python 3, you should <code>open</code> csv files and specify <code>newline=''</code> according to the <a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow noreferrer">documentation</a> (see example code).</span>
<span class="comment-copy">After trying a few times... finally i got it! with <code>delimiter=';'</code> It was the way the csv was actually stored. Thank you very much!</span>
<span class="comment-copy">@martineau. Thanks, sorry I only have python2.7 in my machine.</span>
<span class="comment-copy">Thank you very much, mate. For some reason I just got ' WARNING: Script error: "invalid literal for float(): 1;2;5" at  line number 4' and I think it's related with the specification of the delimiter. Thank you very much anyway, mate!!</span>
<span class="comment-copy">@Victor <code>str.split()</code> takes an optional delimiter argument (default is whitespace). I added an update to fix this for your code.</span>
<span class="comment-copy">Thank you, mate! You guys are amazing! Thank you!!!</span>
