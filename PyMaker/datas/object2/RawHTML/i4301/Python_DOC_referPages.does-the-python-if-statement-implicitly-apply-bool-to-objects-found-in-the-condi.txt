<div class="post-text" itemprop="text">
<p>I have a working selenium program that contains this code:</p>
<pre><code>nxt_page = driver.find_element_by_class_name('btn--alt')
print(type(nxt_page))
if nxt_page:
    driver.execute_script('arguments[0].scrollIntoView();', nxt_page)
    print(type(nxt_page))
    nxt_page.click()
</code></pre>
<p>(see <a href="https://stackoverflow.com/a/46772329/8929814">Scraping Duckduckgo with Python 3.6)
</a></p>
<p>When the program runs, the two print statement show</p>
<pre><code>&lt;class 'selenium.webdriver.remote.webelement.WebElement'&gt;
&lt;class 'selenium.webdriver.remote.webelement.WebElement'&gt;
</code></pre>
<p>Question: If you use an object for the [if conditional], like</p>
<pre><code>if OBJECT:
    print('found')
</code></pre>
<p>is python simply substituting <code>bool(OBJECT)</code> for the conditional? </p>
<p>Is it always the case that <code>bool(OBJECT)</code> is False if <code>OBJECT == None</code>? I wouldn't think that a programmer could tamper with that. You could then equivalently write</p>
<pre><code>if nxt_page is not None:
    ect.
</code></pre>
<p>Before posting this I just found <a href="https://stackoverflow.com/questions/1087135/boolean-value-of-objects-in-python">Boolean value of objects in Python
</a>, and that is certainly helpful.</p>
</div>
<div class="post-text" itemprop="text">
<p>The <a href="https://docs.python.org/3/reference/expressions.html#booleans" rel="nofollow noreferrer">documentation</a> is very clear on how values are evaluated in a boolean context:</p>
<blockquote>
<p>In the context of Boolean operations, and also when expressions are used by control flow statements, the following values are interpreted as false: <code>False</code>, <code>None</code>, numeric zero of all types, and empty strings and containers (including strings, tuples, lists, dictionaries, sets and frozensets). All other values are interpreted as true. User-defined objects can customize their truth value by providing a <code>__bool__()</code> method.</p>
</blockquote>
</div>
<span class="comment-copy">take a look at this: <a href="https://docs.python.org/3/reference/datamodel.html#object.__bool__" rel="nofollow noreferrer">docs.python.org/3/reference/datamodel.html#object.__bool__</a></span>
<span class="comment-copy">Yes. 11 more characters to go...</span>
<span class="comment-copy">In that link you provided, had a link to the Python docs to <a href="https://docs.python.org/2/reference/datamodel.html#object.__nonzero__" rel="nofollow noreferrer"><code>__nonzero__</code></a> which says that internally <code>bool()</code> checks <code>__nonzero__</code> first, then <code>__len__</code> functions.</span>
<span class="comment-copy">The linked question seems to answer your question, so I'm not really sure what you're asking. It isn't always the case that <code>bool(OBJECT)</code> is False if <code>OBJECT == None</code> because one can be customized with <code>__bool__</code> and the other with <code>__eq__</code></span>
<span class="comment-copy"><code>__nonzero__</code> predates <code>bool</code> and is not used in 3.x.  Tests for <code>None</code> should use <code>is</code> or <code>is not</code>.</span>
