<div class="post-text" itemprop="text">
<p>I have to write a <code>fib_memoize(n)</code> function that should be recursive but it should memoize its answer so that it's running time is <code>O(n)</code>.<br/>
This is what I have: </p>
<pre><code>def fib_memoize(n):
    memo = {}
    if n in memo:
        return memo[n]
    else:
        if n &lt;=2:
            f = 1
        else:
            f = fib_recursive(n-1) + fib_recursive(n-2)

        memo[n] = f
        return f
</code></pre>
<p>This is giving me an assertion error saying <code>1 != 0</code>. What is this pointing to? What am I missing?</p>
<p>This is my <code>fib_recursive</code> function (passes the tests):</p>
<pre><code>def fib_recursive(n):
    if n &lt;=1:
        return n
    else:
        return fib_recursive(n-1) + fib_recursive(n-2)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Memoizing is usually done with a decorator over your original function, e.g.:</p>
<pre><code>import functools

def memoize(fn):
    cache = {}

    @functools.wraps(fn)
    def memoizer(n):
        if n not in cache:
            cache[n] = fn(n)
        return cache[n]
    return memoizer

@memoize
def fib_recursive(n):
    if n &lt;=1:
        return n
    else:
        return fib_recursive(n-1) + fib_recursive(n-2)
</code></pre>
<p>This turns the original <code>fib_recursive</code> function into a memoized function.</p>
</div>
<span class="comment-copy">Could you explain to me why I see so many new users with improperly indented <code>def</code> lines?</span>
<span class="comment-copy">It seems like the error you are referring to comes from the test framework. It's telling you that an input of 0 should return 1, but isn't, or vice-versa.</span>
<span class="comment-copy">just memonize by storing fib numbers in a list. Get the next one by appending the sum of the previous two</span>
<span class="comment-copy">@MadPhysicist because they don't know about <code>&lt;ctrl-k&gt;</code> so just indent the first line to get the pasted code to be formatted as code.</span>
<span class="comment-copy">@AChampion. First time I heard about it too. I just click on the little button thingy in the toolbar :) That makes a lot of sense though.</span>
<span class="comment-copy">Or use the  one that <a href="https://docs.python.org/3/library/functools.html" rel="nofollow noreferrer">comes with python</a> <code>@functools.lru_cache</code>. There's even a Fibonacci example in the docs.</span>
<span class="comment-copy">This isn't really helpful to someone trying to understand basic concepts.</span>
<span class="comment-copy">I'm not familiar with the @functools.lru_cache. As you can tell from my question, I'm still a beginner</span>
