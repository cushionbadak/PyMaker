<div class="post-text" itemprop="text">
<p>I use gunicorn to run 2 process of my flask app.
And I use filerotatingfilehandler to rotate log file.
The problem is when one process rotates the log file,the other doesn't know,and later it rotate the file(now named log.txt.1) again(to log.txt.2,and may change log.txt to log.txt.1).Then one process logs in log.txt while the other logs in log.txt.1.
I know I could use watchedfilehandler + logrotate to solve the problem.
But could I still use rotatingfilehandler and detect the file name change?</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use a distributed global lock to prevent the double rotation, like <a href="https://gist.github.com/SerhoLiu/a3d7be43df882af80ef98bc375fc6046" rel="nofollow noreferrer">this example gist</a>.</p>
<p>However, I recommend using <a href="https://docs.python.org/3/library/logging.handlers.html#watchedfilehandler" rel="nofollow noreferrer">WatchedFileHandler</a> like this in your Flask app:</p>
<pre class="lang-py prettyprint-override"><code>from celery.signals import after_setup_logger
from logging import ERROR, Formatter
from logging.handlers import WatchedFileHandler
from yourapp import app


LOG_FORMAT = (
    '-' * 80 + '\n' +
    '%(levelname)s in %(module)s [%(pathname)s:%(lineno)d]:\n' +
    '%(message)s\n' +
    '-' * 80
)


if not app.config['DEBUG']:
    error_handler = WatchedFileHandler(app.config['ERROR_HANDLER_LOG'], delay=True)
    error_handler.setFormatter(Formatter(LOG_FORMAT))
    error_handler.setLevel(ERROR)

    @after_setup_logger.connect
    def after_setup_logger(logger, *args, **kwargs):
        logger.addHandler(error_handler)

    @app.before_first_request
    def before_first_request():
        app.logger.addHandler(error_handler)
</code></pre>
<p>Then use a cron script or file watching daemon to rotate your logfiles by renaming them.</p>
</div>
