<div class="post-text" itemprop="text">
<p>I got the results I wanted by doing this:</p>
<pre><code>list = [1, 2, 3, 4, 5]
def new(x):
  for i in x:
    print i
</code></pre>
<p>and then calling <code>new(list)</code>
Results would be:</p>
<pre><code>1
2
3
4
5
</code></pre>
<p>What I would like to do is something like <code>print [x for x in list]</code>
but I can't seem to find the right answer searchin.
Is there a more compact way to plint out each item in the list on new lines?</p>
</div>
<div class="post-text" itemprop="text">
<p>On <em>Python 3.x</em>, simply add a <code>sep</code> while you <code>print</code>:</p>
<pre><code>lst = [1, 2, 3, 4, 5]
print(*lst, sep="\n")

# 1
# 2
# 3
# 4
# 5
</code></pre>
<p><strong>EDIT</strong>: On  <em>Python 2.6+</em>, you need to import <code>print_function</code>:</p>
<pre><code>from __future__ import print_function 
lst = [1, 2, 3, 4, 5]
print(*lst, sep='\n')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think what you are looking for is :</p>
<pre><code>new = lambda x:"\n".join(map(str,x))
print new(x)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here an answer without <code>lambda</code> and <code>map()</code>:</p>
<pre><code>ls = [1, 2, 3, 4, 5]
print('\n'.join([str(a) for a in ls]))
</code></pre>
<p>Also, please do not call a variable <code>list</code> as this interferes with the <code>class</code> <a href="https://docs.python.org/3/library/functions.html#func-list" rel="nofollow noreferrer">list</a></p>
</div>
