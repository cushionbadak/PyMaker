<div class="post-text" itemprop="text">
<pre><code>list_data = [(4,5),(6,7)] 
output should be [(4,5),(11,7)]
</code></pre>
<p>So i want to update 6 to 11.</p>
<p>Here list_data is list of tuple and tuple is immutable data type, so we can not update tuple. but my requirement
 is to update. Any help will be appreciable.</p>
</div>
<div class="post-text" itemprop="text">
<p>Tuples are <a href="https://docs.python.org/2/tutorial/datastructures.html#tuples-and-sequences" rel="nofollow noreferrer">immutable</a>, try using a nested list instead!</p>
<p>That way you will be able to .append() or .pop() any element on any list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Just replace. Lists are mutable so you can do just that.</p>
<pre><code>for i,(a, b) in enumerate(list_data):
  if a == 6:
    list_data[i] = (11, b)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Convert the tuple to list and change the value and then update the result.</p>
<pre><code>list_data = [(4,5),(6,7)] 
tpl = list(list_data[1])
tpl[0] = 11
list_data[1] = tuple(tpl)
</code></pre>
</div>
<span class="comment-copy">How do you know to update <code>6</code> to <code>11</code>? In other words, what is your general algorithm for replacement given an arbitrary <code>list_data</code>?</span>
<span class="comment-copy">Is there a reason why you can't use lists instead of tuples, since you need to update them?</span>
<span class="comment-copy">tuples are immutable - you can replace the tuple (6,7) with a new tuple (11,7) though.</span>
<span class="comment-copy">Welcome to SO. Unfortunately this isn't a discussion forum or tutorial. Please take the time to read <a href="https://stackoverflow.com/questions/how-to-ask">How to Ask</a> and the other links found on that page.  Invest some time with <a href="https://docs.python.org/3/tutorial/index.html" rel="nofollow noreferrer">the Tutorial</a> practicing the examples. It will give you an idea of the tools Python offers to help you solve your problem.</span>
<span class="comment-copy">" tuple is immutable data type, so we can not update tuple. but my requirement is to update."- if your requirements are really that restrictive then you'll have to hack CPython, however, in a practical sense it's very likely re-building the tuple or using a list would be just fine</span>
<span class="comment-copy">It's working. Thanks alot.</span>
<span class="comment-copy">Please accept the answer that you feel worked best for you.</span>
