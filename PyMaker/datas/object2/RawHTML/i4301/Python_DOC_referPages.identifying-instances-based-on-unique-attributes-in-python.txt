<div class="post-text" itemprop="text">
<p>I'm working on a project and it would make it easier for me to code if we can identify class attributes based on their unique instances.
example</p>
<pre><code>class MyClass:
    def __init__(self, unique_id):
        self.unique_id = unique_id
</code></pre>
<p>and later</p>
<pre><code>class1 = MyClass(1)
class2 = MyClass(2)
</code></pre>
<p>Is it possible to do get the object class1 as an output if</p>
<pre><code>output = instance whose unique_id == 1
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can keep a dict of instances: </p>
<pre><code>class MyClass:
    _instances = {}

    def __init__(self, unique_id):
        self.unique_id = unique_id
        self._instances[unique_id] = self

    @classmethod
    def instance_by_id(cls, id):
        return cls._instances[id]


a = MyClass(1)
b = MyClass(2)


c = MyClass.instance_by_id(1)

print(c)
print(a)
#&lt;__main__.MyClass object at 0x7fa9dd0bfbe0&gt; 
#&lt;__main__.MyClass object at 0x7fa9dd0bfbe0&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><strong>Option A :</strong></p>
<p>If you are planing on adding the id's in a consecutive way you could enter them all into a list :</p>
<pre><code>class_list = []
class_list.append(MyClass(1))
class_list.append(MyClass(2))
</code></pre>
<p>And then get them using</p>
<pre><code>class_list[index]
</code></pre>
<p><strong>Option B :</strong></p>
<p>If you arent going to them consecutively you could do the following</p>
<pre><code>class_dict = {}
class_dict{"some_id"} = MyClass("some_id")
class_dict{"some_id2"} = MyClass("some_id2")
</code></pre>
<p>and then access as following :</p>
<pre><code>class_dict["some_id"]
</code></pre>
<p><strong>Option C - Prefered:</strong></p>
<p>Personally I would recommend the following :</p>
<pre><code>class MyClass:
    static_dict = {}
    def __init__(self, unique_id):
        self.unique_id = unique_id
        MyClass.static_dict[unique_id] = self

    def get_class_by_id(unique_id):
        return static_dict[unique_id]
</code></pre>
<p>and then you could access as following:</p>
<pre><code>MyClass.get_class_by_id("some_id")
</code></pre>
</div>
<span class="comment-copy">Your question is not clear. Do you want to find that instance among other instances?</span>
<span class="comment-copy">Could you just take the <code>id</code> of the object itself using the <a href="https://docs.python.org/3/library/functions.html#id" rel="nofollow noreferrer"><code>id</code> function</a>?</span>
<span class="comment-copy">Still not clear. Where and how are those instances preserved? are they in a container? please add more information about the problem because this seems like it can be solved with a simple <code>if</code> condition.</span>
<span class="comment-copy">@PatrickHaugh i got the id from the object using id(object) but how to get the object from the id</span>
