<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/1663807/how-to-iterate-through-two-lists-in-parallel">How to iterate through two lists in parallel?</a>
<span class="question-originals-answer-count">
                    8 answers
                </span>
</li>
</ul>
</div>
<p>Say I have a couple of text files, <code>fruit.txt</code> and <code>veg.txt</code> which look like,</p>
<pre><code>Apple
Pear
Orange

Brocolli
Cucumber
Spinach
</code></pre>
<p>I have a couple of for loops that print out the contents of the .txt files, </p>
<pre><code>       for line in fruit:
            fields = line.split("\n")   
            col = fields[0]
            print(col)
        for line in veg:
            fields = line.split("\n")   
            col1 = fields[0]
            print(col1)
</code></pre>
<p>And the output I get is,</p>
<pre><code>Apple
Pear
Orange
Brocolli
Cucumber
Spinach
</code></pre>
<p>I want to try and print it side by side like,</p>
<pre><code>Apple Brocolli
Pear Cucumber
Orange Spinach 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <code>format</code> method in builtin strings, and <code>zip_longest</code>.</p>
<pre><code>from itertools import zip_longest
...
# Assuming fruit is file_context.readlines()
fruits = fruit.split("\n")
vegs = veg.split("\n")
for l1,l2 in zip_longest(fruits, vegs, fillvalue=""):
    print("{}\t{}".format(l1, l2))   
</code></pre>
<p><code>zip_longest</code> will take care of the situation where you have unequal number of fruits and vegs.</p>
<p>NOTE: The above will work in python 3. For python 2, remember to replace:</p>
<pre><code>from itertools import zip_longest
</code></pre>
<p>with:</p>
<pre><code>from itertools import izip_longest
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>An easier way would be to use the readlines method like so, and the 'end' parameter is the printed value that prints at the end, by default its value is '\n'  </p>
<pre><code>fruits = fruit.readlines()   
vegs = veg.readlines() 

for i in range(min(len(vegs),len(fruits))):
    print(fruits[i],end="\t")
    print(vegs[i])
</code></pre>
</div>
<span class="comment-copy">are fruit and veg the same size?</span>
<span class="comment-copy">Look at the <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> function.</span>
<span class="comment-copy"><code>[x for x in zip(fruit,veg)]</code></span>
<span class="comment-copy">In this example yes, but I also have a few other text files with uneven lengths, e.g. 3 fruits and 4 veg.</span>
<span class="comment-copy">The duplicate still stands. Use the <code>itertools.zip_longest(...)</code> example.</span>
<span class="comment-copy">For this method, I am assuming it doesn't work for uneven lists? Because I get an IndexError when I try.</span>
<span class="comment-copy">This should work for uneven lists because "i" is actually taking the "min" value of "len(fruits)" and "len(vegs)", make sure you copied the min part.</span>
