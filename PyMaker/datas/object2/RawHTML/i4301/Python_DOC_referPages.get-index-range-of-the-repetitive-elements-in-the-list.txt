<div class="post-text" itemprop="text">
<p>Suppose I have a list <code>a = [-1,-1,-1,1,1,1,2,2,2,-1,-1,-1,1,1,1]</code> in python what i want is if there is any built in function in python in which we pass a list and it will return which element are present at what what index ranges for example </p>
<pre><code>&gt;&gt;&gt; index_range(a)
{-1 :'0-2,9-11', 1:'3-5,12-14', 2:'6-8'}
</code></pre>
<p>I have tried to use <code>Counter</code> function from <code>collection.Counter</code> library but it only outputs the count of the element. </p>
<p>If there is not any built in function can you please guide me how can i achieve this in my own function not the whole code just a guideline. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can create your custom function using <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow noreferrer"><strong><code>itertools.groupby</code></strong></a> and <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow noreferrer"><strong><code>collections.defaultdict</code></strong></a> to get the range of numbers in the form of list as:</p>
<pre><code>from itertools import groupby
from collections import defaultdict


def index_range(my_list):
    my_dict = defaultdict(list)
    for i, j in groupby(enumerate(my_list), key=lambda x: x[1]):
        index_range, numlist = list(zip(*j))
        my_dict[numlist[0]].append((index_range[0], index_range[-1]))
    return my_dict
</code></pre>
<p>Sample Run:</p>
<pre><code>&gt;&gt;&gt; index_range([-1,-1,-1,1,1,1,2,2,2,-1,-1,-1,1,1,1])
{1: [(3, 5), (12, 14)], 2: [(6, 8)], -1: [(0, 2), (9, 11)]}
</code></pre>
<hr/>
<p>In order <strong>to get the values as string in your dict</strong>, you may either modify the above function, or use the return value of the function in <em>dictionary comprehension</em> as:</p>
<pre><code>&gt;&gt;&gt; result_dict = index_range([-1,-1,-1,1,1,1,2,2,2,-1,-1,-1,1,1,1])

&gt;&gt;&gt; {k: ','.join('{}:{}'.format(*i) for i in v)for k, v in result_dict.items()}
{1: '3:5,12:14', 2: '6:8', -1: '0:2,9:11'}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <code>dict</code> that uses list items as keys and their indexes as values:</p>
<pre><code>&gt;&gt;&gt; lst = [-1,-1,-1,1,1,1,2,2,2,-1,-1,-1,1,1,1]
&gt;&gt;&gt; indexes = {}
&gt;&gt;&gt; for index, item in enumerate(lst):
...    indexes.setdefault(value, []).append(index)
&gt;&gt;&gt; indexes
{1: [3, 4, 5, 12, 13, 14], 2: [6, 7, 8], -1: [0, 1, 2, 9, 10, 11]}
</code></pre>
<p>You could then merge the index lists into ranges if that's what you need. I can help you with that too if necessary.</p>
</div>
<span class="comment-copy">Thanks this worked for me</span>
