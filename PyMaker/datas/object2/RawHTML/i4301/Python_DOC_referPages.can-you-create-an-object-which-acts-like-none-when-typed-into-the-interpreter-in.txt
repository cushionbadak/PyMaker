<div class="post-text" itemprop="text">
<p>Is it possible to create a class that has the following behavior?</p>
<pre><code>&gt;&gt;&gt; x = X()
&gt;&gt;&gt; x
&gt;&gt;&gt;
</code></pre>
<p>I tried the following</p>
<pre><code>class X:
    def __repr__(self):
        return ""
</code></pre>
<p>which results in</p>
<pre><code>&gt;&gt;&gt; x = X()
&gt;&gt;&gt; x

&gt;&gt;&gt;
</code></pre>
<p>and also the following:</p>
<pre><code>class X:
    def __repr__(self):
        return repr(None)

&gt;&gt;&gt; x = X()
&gt;&gt;&gt; x
None
&gt;&gt;&gt;
</code></pre>
<p>and other ideas like returning <code>None</code> from <code>__repr__</code> errors when you call <code>repr</code> on it, and deriving from <code>NoneType</code> just errors.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can't make a value that behaves as you want, but you can change how the interactive prompt displays values.  See <a href="https://docs.python.org/3/library/sys.html#sys.displayhook" rel="nofollow noreferrer">sys.displayhook</a> for how to customize the display.</p>
</div>
<span class="comment-copy">Why do you want this behavior?  Trying to determine if this is an XY problem...</span>
<span class="comment-copy">I want to have a function return a value that can be tested, but doesn't show up if you use it as just an expression at top level in a shell</span>
<span class="comment-copy">But why? Why would you go out of your way to make your object harder to inspect? Someone who gets <code>x</code> as the result of an expression wants to see what <code>x</code> is.</span>
<span class="comment-copy">For the same reason that <code>None</code> doesn't show up, the idea is that 99% of the time, you won't want the value, but the remainder of the time, you might...</span>
<span class="comment-copy">Pretty sure that this is special cased at the level of the repl...</span>
