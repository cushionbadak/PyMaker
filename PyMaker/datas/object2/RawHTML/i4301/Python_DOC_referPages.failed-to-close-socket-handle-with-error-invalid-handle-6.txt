<div class="post-text" itemprop="text">
<p>I am working with winsock2 socket in ctypes, I can do <code>closesocket()</code> just fine, but calling CloseHandle, always result in <code>ERROR_INVALID_HANDLE (6)</code>. How should I close it properly ? Currently my app always crash after 64 times of socket() calls.</p>
<pre><code># from MSDN:
# BOOL CloseHandle(   HANDLE hObject);

closehandle = coredll.CloseHandle
closehandle.argtypes = [ w.LPVOID ]

SOCKET = c_ulong
socket = ws2.socket
socket.restype = SOCKET
self._clnt_socket = socket(AF_BT, SOCK_STREAM, BTHPROTO_RFCOMM)
...
connect( self._clnt_socket, _psa, sizeof(self._sa) )
...
send( self._clnt_socket, pbuff, szbuff, 0 ) # int send(  SOCKET s,  const char FAR* buf,  int len,  int flags);

SetLastError(0)
rt = closesocket( self._clnt_socket )
ec = GetLastError()
if ec != w.ERROR_SUCCESS :
    print( u'failed to close socket, ec=%s, %s, rt=%s', (ec, FormatError( ec ), rt) )
    raise Exception(u'BT_SOCKET.close.socket %s' % ec)
else:
    print( u'close socket ok' )
#&gt; close socket ok

# from MSDN:
# To close the connection to the target device, call the closesocket
# function to close the Bluetooth socket. Also, ensure that you release
# the socket by calling the CloseHandle function, as the following
# example code shows.  
#
# closesocket(client_socket); 
# CloseHandle((LPVOID)client_socket);

SetLastError(0)
rt = closehandle(  w.LPVOID( self._clnt_socket ) )
ec = GetLastError()
if ec != w.ERROR_SUCCESS :
    print( u'failed to close handle, ec=%s, %s, rt=%s ', (ec, FormatError( ec ), rt) )
    # //Perform error handling.
    raise Exception(u'BT_SOCKET.close.handle %s' % ec)
else:
    print( u'close socket ok' )
#&gt; failed to close handle, ec=6
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><em>HANDLE</em>s and <em>SOCKET</em>s are different types of <em>objects</em>, so they are incompatible (applies to their <em>Python</em> wrappers as well).</p>
<p>Here's what <a href="https://docs.microsoft.com/en-gb/windows/desktop/api/handleapi/nf-handleapi-closehandle" rel="nofollow noreferrer">[MS.Docs]: CloseHandle function</a> states:</p>
<blockquote>
<p>Do not use the <strong>CloseHandle</strong> function to close a socket. Instead, <strong>use the <a href="https://docs.microsoft.com/en-gb/windows/desktop/api/winsock/nf-winsock-closesocket" rel="nofollow noreferrer">closesocket</a> function</strong>, which releases all resources associated with the socket including the handle to the socket object. For more information, see <a href="https://docs.microsoft.com/en-gb/windows/desktop/WinSock/graceful-shutdown-linger-options-and-socket-closure-2" rel="nofollow noreferrer">Socket Closure</a>.</p>
</blockquote>
<p><strong><em>@EDIT0</em></strong>:</p>
<ul>
<li><p>The above applies to "normal" <em>Win</em>. <a href="https://docs.microsoft.com/en-us/previous-versions/windows/embedded/aa517300(v=msdn.10)" rel="nofollow noreferrer">[MS.Docs]: CloseHandle (Windows CE 5.0)</a> doesn't specify that paragraph, and also mentions that it can be used on <em>Socket</em>s.</p></li>
<li><p><a href="https://docs.microsoft.com/en-us/previous-versions/windows/embedded/aa450958%28v%3dmsdn.10%29" rel="nofollow noreferrer">[MS.Docs]: socket (Windows Sockets) (Windows CE 5.0)</a> states:</p>
<blockquote>
<p>When a session has been completed, a <a href="https://docs.microsoft.com/en-us/previous-versions/windows/embedded/ms887908%28v%3dmsdn.10%29" rel="nofollow noreferrer">closesocket</a> call must be performed.</p>
</blockquote></li>
<li><p><a href="https://docs.microsoft.com/en-us/previous-versions/windows/embedded/ms881660%28v=msdn.10%29" rel="nofollow noreferrer">[MS.Docs]: Creating a Connection to a Remote Device Using Winsock (Windows CE 5.0)</a> does indeed specify to call <em>CloseHandle</em> but only in step <strong><em>#5</em></strong> for client socket (neither in step <strong><em>#4</em></strong>, nor for server socket), which makes me think that it's an error (<em>WinCE</em> pages are full of errors - at least typos)</p></li>
</ul>
<p>As a side question: why are you using <em>ctypes</em> instead of <a href="https://docs.python.org/3/library/socket.html" rel="nofollow noreferrer">[Python 3]: socket - Low-level networking interface</a> which is a wrapper over <em>WinSock</em>? It's like shooting yourself in the foot. If the <em>BT</em> sockets work identically like others (e.g. network), the only thing you have to do is define some constants (e.g. <em>BTHPROTO_RFCOMM</em>).</p>
</div>
<span class="comment-copy">Ok, I think you are right, after cleaning out the close handle stuff. I can open/write/close the socket more then 64 times without crash, though its against what this (<a href="https://docs.microsoft.com/en-us/previous-versions/windows/embedded/ms881660%28v=msdn.10%29" rel="nofollow noreferrer">docs.microsoft.com/en-us/previous-versions/windows/embedded/â€¦</a>) MSDN artical suggested ... As to the python socket, I don't know, if python will check the parameter and stop me from using the unknown parameters ? I'll try, if that works, it would be surely great.</span>
<span class="comment-copy">Ah, I keep forgetting about this <i>WindowsCE</i> and its limitations. However it seems strange to call <code>CloseHandle</code> on <code>SOCKET</code>, as on 64 bit it has a greater size thath <code>HANDLE</code>.</span>
<span class="comment-copy">Thank you for looking into it. I have tried python socket I can't get it to connect. the <code>socekt</code> 's <code>connect()</code> method doesn't accept my bt address neither <code>int('dc1d30428b19',16)</code>, <code>'dc1d30428b19'</code>, nor <code>'dc:1d:30:42:8b:19'</code>. I guess the module has to be patched. But I'v get over the major road blocks, now its somehow stable; unicode works fine; Now I can focus on the GUI, I hope it works with thread. Again thanks for the help.</span>
<span class="comment-copy">Yes, <i>Python</i>'s wrapper expects a tuple (string, int) containing the host name and port.</span>
