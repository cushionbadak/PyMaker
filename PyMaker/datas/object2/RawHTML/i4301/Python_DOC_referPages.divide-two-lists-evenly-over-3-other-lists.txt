<div class="post-text" itemprop="text">
<p>I'm struggling to come up with a effective but simple solution to the following:</p>
<p>I have two lists of dicts:</p>
<pre><code>list_dicts_1 = [
{"name": "Suarez", "footed": "right-footed", "color": "black"}
{"name": "Suarez2", "footed": "right-footed2", "color": "black2"}
{"name": "Suarez3", "footed": "right-footed3", "color": "black3"}
{"name": "Suarez4", "footed": "right-footed4", "color": "black4"}
{"name": "Suarez5", "footed": "right-footed5", "color": "black5"}
{"name": "Suarez6", "footed": "right-footed6", "color": "black6"}
]


list_dicts_2 = [
{"name": "Coutinho", "footed": "left-footed", "color": "orange"}
{"name": "Coutinho2", "footed": "left-footed1", "color": "orange2"}
{"name": "Coutinho3", "footed": "left-footed2", "color": "orange3"}
{"name": "Coutinho4", "footed": "left-footed4", "color": "orange4"}
{"name": "Coutinho5", "footed": "left-footed5", "color": "orange5"}
{"name": "Coutinho6", "footed": "left-footed6", "color": "orange6"}
]
</code></pre>
<p>I want to iterate over these lists of dicts and assign them to 3 empty lists:</p>
<pre><code>list_1 = []
list_2 = []
list_3 = [] 
</code></pre>
<p>desired output:</p>
<pre><code>list_1 = [
{"name": "Suarez", "footed": "right-footed", "color": "black"}, 
{"name": "Suarez4", "footed": "right-footed4", "color": "black4"},
{"name": "Coutinho", "footed": "left-footed", "color": "orange"},
{"name": "Coutinho4", "footed": "left-footed4", "color": "orange4"}
]        

list_2 = [
{"name": "Suarez2", "footed": "right-footed2", "color": "black2"}, 
{"name": "Suarez5", "footed": "right-footed5", "color": "black5"},
{"name": "Coutinho2", "footed": "left-footed2", "color": "orange2"},
{"name": "Coutinho5", "footed": "left-footed5", "color": "orange5"}
]

list_3 = [
{"name": "Suarez3", "footed": "right-footed3", "color": "black3"}, 
{"name": "Suarez6", "footed": "right-footed6", "color": "black6"},
{"name": "Coutinho3", "footed": "left-footed3", "color": "orange3"},
{"name": "Coutinho6", "footed": "left-footed6", "color": "orange6"}
]
</code></pre>
<p>I want to evenly divide the lists of dicts over the 3 empty lists. Each item in the list of dicts can only be in the empty lists once. So first line of list of dicts should go in list_1. then the 2nd line of list of dicts should go in the list_2 etc etc until there's nothing left in the list of dicts. </p>
<p>Is there a simple way to achieve this? </p>
</div>
<div class="post-text" itemprop="text">
<p>You can do so using <code>while</code> loop:</p>
<pre><code>while True:
    try:
        list_1.append(dicts[0])
        del dicts[0]

        list_2.append(dicts[0])
        del dicts[0]

        list_3.append(dicts[0])
        del dicts[0]

    except IndexError:
        break
</code></pre>
<p><strong>EDIT:</strong></p>
<p>Can be done using <code>for</code> loop too!</p>
<pre><code>for i in range(len(dicts)//3):
     list_1.append(dicts[0])
     del dicts[0]
     list_1.append(dicts[0])
     del dicts[0]
     list_1.append(dicts[0])
     del dicts[0]
</code></pre>
<p><strong>EDIT 2:</strong></p>
<p>It can be done even better way and still easy to understand for a beginenr</p>
<pre><code>for i in range(len(dicts)//3):
    list_1.append(dicts[i*3])
    list_1.append(dicts[i*3+1])
    list_1.append(dicts[i*3+2])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Iterators are very useful here: You can use <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow noreferrer"><code>itertools.cycle</code></a> to obtain an iterator that endlessly loops over <code>list_1</code>, <code>list_2</code> and <code>list_3</code>. Then simply iterate over the dicts in <code>list_dicts_1</code> and <code>list_dicts_2</code> and append them to the list you get from <code>cycle</code>:</p>
<pre><code>import itertools

list_1, list_2, list_3 = lists = [], [], []
# make an iterator that endlessly loops over list_1, list_2 and list_3
itr = itertools.cycle(lists)

# loop over the dicts
for dic in itertools.chain(list_dicts_1, list_dicts_2):
    # and append the dict to the next list
    next(itr).append(dic)
</code></pre>
<p>I used <a href="https://docs.python.org/3/library/itertools.html#itertools.chain" rel="nofollow noreferrer"><code>itertools.chain</code></a> to combine <code>list_dicts_1</code> and <code>list_dicts_2</code> into a single iterable, and the <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next</code></a> function to manually advance the <code>cycle</code> iterator.</p>
<p>Results:</p>
<pre><code>&gt;&gt;&gt; list_1
[{'name': 'Suarez', 'footed': 'right-footed', 'color': 'black'},
 {'name': 'Suarez4', 'footed': 'right-footed4', 'color': 'black4'},
 {'name': 'Coutinho', 'footed': 'left-footed', 'color': 'orange'},
 {'name': 'Coutinho4', 'footed': 'left-footed4', 'color': 'orange4'}]
&gt;&gt;&gt; list_2
[{'name': 'Suarez2', 'footed': 'right-footed2', 'color': 'black2'},
 {'name': 'Suarez5', 'footed': 'right-footed5', 'color': 'black5'},
 {'name': 'Coutinho2', 'footed': 'left-footed1', 'color': 'orange2'},
 {'name': 'Coutinho5', 'footed': 'left-footed5', 'color': 'orange5'}]
&gt;&gt;&gt; list_3
[{'name': 'Suarez3', 'footed': 'right-footed3', 'color': 'black3'},
 {'name': 'Suarez6', 'footed': 'right-footed6', 'color': 'black6'},
 {'name': 'Coutinho3', 'footed': 'left-footed2', 'color': 'orange3'},
 {'name': 'Coutinho6', 'footed': 'left-footed6', 'color': 'orange6'}]
</code></pre>
<hr/>
<p>Another option is to concatenate the two input lists into one gigantic list and then slice it:</p>
<pre><code>list_ = list_dicts_1 + list_dicts_2
list_1 = list_[::3]
list_2 = list_[1::3]
list_3 = list_[2::3]
</code></pre>
<p>However, concatenating lists is somewhat costly, so it should be avoided if your lists are very large.</p>
</div>
<span class="comment-copy">What's the desired output for this sample?</span>
<span class="comment-copy">edited main post.</span>
<span class="comment-copy">mate you don't need to do this. You just need one list and one dict: <code>list_1 = [{"name": "Messi", "footed": "left-footed", "color": "doesn't matter"}]</code>.</span>
<span class="comment-copy">Interesting approach!</span>
<span class="comment-copy">Whatever, works! :D</span>
<span class="comment-copy">this is amazing. and very easy to read and understand for a beginner. thanks so much.</span>
<span class="comment-copy">Repeatedly deleting the first element of a list has a <i>horrible</i> run time complexity. You should turn that into a <a href="https://docs.python.org/3/library/collections.html#collections.deque" rel="nofollow noreferrer"><code>deque</code></a> or reverse it and delete from the other end or just use an iterator instead of deleting.</span>
<span class="comment-copy">thanks a lot. is there a way to achieve this without the itertools library, just out of curiousity?</span>
<span class="comment-copy">@adbSOeh There is, and it's actually not as ugly as I initially thought. I updated my answer.</span>
<span class="comment-copy">Nice, i really like the slice approach. i was really overthinking this.</span>
<span class="comment-copy"><code>zip(*zip(*[iter(list_dicts_1+list_dicts_2)]*3))</code></span>
<span class="comment-copy">@JoranBeasley Please no. Incomprehensible one-liners are off-limits here. Take that somewhere where it can be downvoted :P</span>
