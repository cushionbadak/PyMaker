<div class="post-text" itemprop="text">
<p>I am working with objects in Python and all I wanted was to replace the attribute in a for loop to get the data out of the object. Here is my code:</p>
<pre><code>def calculate_something(dictionaryWithObjects):
    for attribute in ['attr1', 'attr2', 'attr3']:
        dataA1, dataA2 = dictionaryWithObjects['Object1'].attribute
        dataB1, dataB2 = dictionaryWithObjects['Object2'].attribute
        dataC1, dataC2 = dictionaryWithObjects['Object3'].attribute
</code></pre>
<p>So this is more or less what I think I need. I will use the data for calculations afterwards. But it gives an error saying that the object has no attribute called ".attribute". Of course it doesn't, I meant it to replace the 'attr1' in there. </p>
<p>What am I doing wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>In order to access an instance attribute by its name, you should use <a href="https://docs.python.org/3/library/functions.html#getattr" rel="nofollow noreferrer">[Python]: <strong>getattr</strong>(<em>object, name[, default]</em>)</a>, e.g.:</p>
<pre><code>dataA1, dataA2 = getattr(dictionaryWithObjects['Object1'], attribute)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try something like this:</p>
<pre><code>def calculate_something(dictionaryWithObjects):
    for attribute in ['attr1', 'attr2', 'attr3']:
        dataA1, dataA2 = dictionaryWithObjects['Object1'][attribute]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>eval</code>:</p>
<pre><code>data=eval('Object1.'+attribute)
</code></pre>
</div>
<span class="comment-copy">Take a look at getattr / setattr  (<a href="https://docs.python.org/3/library/functions.html#setattr" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#setattr</a>)</span>
<span class="comment-copy">You're looking for <code>getattr</code>, <code>getattr(dictionary['Obj1'], attribute)</code></span>
<span class="comment-copy"><code>.attribute</code> is not a variable there, so you can not replace that with the real variable <code>attribute</code> in your for loop.</span>
<span class="comment-copy">Since you are learning, once you have the <code>getattr</code> working, what happens if you remove the <code>[</code> <code>]</code> from the series of attribute names in the <code>for</code>?</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/355539/a-get-like-method-for-checking-for-python-attributes">A get() like method for checking for Python attributes</a></span>
<span class="comment-copy">does the dictionaryWithObjects.get("Object1",attribute) have same as u answered</span>
<span class="comment-copy">@Roushan: True, but that wasn't part of the question, and I didn't want to overcomplicate the answer.</span>
<span class="comment-copy">@Roushan: Only now I understood what you mean by your 1st comment. I thought it was replacing the <code>[]</code> by the <code>get</code> method.</span>
<span class="comment-copy">this doen't work because the attribute is not a key.. It's an object. I've tried that in the beggining x)</span>
<span class="comment-copy">Well can you paste the result for dir(dictionaryWithObjects) and dir(dictionaryWithObjects["Object1"]. This actually helps to get you with your loops over your whatever.</span>
<span class="comment-copy">@NoorAliJafri you would generally want to use <code>vars</code> instead of <code>dir</code>, but why would you, if you can just us <code>getattr</code>?</span>
<span class="comment-copy">@juanpa.arrivillaga I was letting her know to use python's cli with dir(yourobject) to have a better picture of the variable. That's it :D</span>
<span class="comment-copy">Doesn't work (in the question context), but even if it did, it would be one of the ugliest and avoidable ways.</span>
<span class="comment-copy">Realise it's ugly, curious why it doesn't work?</span>
<span class="comment-copy">Because your code snippet doesn't fit in the question context (where there's no "Obj").</span>
<span class="comment-copy">I've changed it, however the point of SO questions is to also solve problems for future users, so it makes no sense to be entirely context specific.</span>
