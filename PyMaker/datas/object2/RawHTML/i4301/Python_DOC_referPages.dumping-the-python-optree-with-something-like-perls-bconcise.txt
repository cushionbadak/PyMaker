<div class="post-text" itemprop="text">
<p>Perl has something called <a href="https://metacpan.org/pod/B::Concise" rel="nofollow noreferrer">B::Concise</a> we can use it with <code>-MO=Concise</code></p>
<pre><code>perl -MO=Concise -e "!$a&amp;&amp;!$b"
7  &lt;@&gt; leave[1 ref] vKP/REFC -&gt;(end)
1     &lt;0&gt; enter -&gt;2
2     &lt;;&gt; nextstate(main 1 -e:1) v:{ -&gt;3
6     &lt;1&gt; not vK/1 -&gt;7
4        &lt;|&gt; or(other-&gt;5) sK/1 -&gt;6
-           &lt;1&gt; ex-not sK/1 -&gt;4
-              &lt;1&gt; ex-rv2sv sK/1 -&gt;-
3                 &lt;#&gt; gvsv[*a] s -&gt;4
-           &lt;1&gt; ex-not sK/1 -&gt;6
-              &lt;1&gt; ex-rv2sv sK/1 -&gt;-
5                 &lt;#&gt; gvsv[*b] s -&gt;6
</code></pre>
<p>Is there anyway to get Python to dump the optree in something text-readable?</p>
</div>
<div class="post-text" itemprop="text">
<p>Rather than getting the bytecode from <a href="https://docs.python.org/3/library/dis.html" rel="nofollow noreferrer"><code>dis</code></a>, you can get the AST from <a href="https://docs.python.org/3/library/dis.html" rel="nofollow noreferrer"><code>ast</code></a>:</p>
<pre><code>&gt;&gt;&gt; import ast
&gt;&gt;&gt; ast.dump(ast.parse("a = a+1").body[0])
"Assign(targets=[Name(id='a', ctx=Store())], value=BinOp(left=Name(id='a', ctx=Load()), op=Add(), right=Num(n=1)))"
</code></pre>
<p>The example in the question:</p>
<pre><code>&gt;&gt;&gt; ast.dump(ast.parse("not a and not b").body[0])
"Expr(value=BoolOp(op=And(), values=[UnaryOp(op=Not(), operand=Name(id='a', ctx=Load())), UnaryOp(op=Not(), operand=Name(id='b', ctx=Load()))]))"
</code></pre>
<p>An example of a definition:</p>
<pre><code>&gt;&gt;&gt; ast.dump(ast.parse("""def f():
...     a = a+1
...     print \"foo\"""").body[0])
"FunctionDef(name='f', args=arguments(args=[], vararg=None, kwarg=None, defaults=[]), body=[Assign(targets=[Name(id='a', ctx=Store())], value=BinOp(left=Name(id='a', ctx=Load()), op=Add(), right=Num(n=1))), Print(dest=None, values=[Str(s='foo')], nl=True)], decorator_list=[])"
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I was able to do this with the <a href="https://docs.python.org/3/library/dis.html" rel="nofollow noreferrer"><code>dis</code></a> module</p>
<pre><code>import dis;

a = 5;

def f():
    a = a+1
    print "foo"

print dis.dis(f);
</code></pre>
<p>outputs,</p>
<pre><code>  7           0 LOAD_FAST                0 (a)
              3 LOAD_CONST               1 (1)
              6 BINARY_ADD          
              7 STORE_FAST               0 (a)

  8          10 LOAD_CONST               2 ('foo')
             13 PRINT_ITEM          
             14 PRINT_NEWLINE       
             15 LOAD_CONST               0 (None)
             18 RETURN_VALUE        
None
</code></pre>
</div>
