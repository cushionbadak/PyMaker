<div class="post-text" itemprop="text">
<p>I have a script named <code>patchWidth.py</code> and it parses command line arguments with <code>argparse</code>:</p>
<pre><code># read command line arguments -- the code is able to process multiple files
parser = argparse.ArgumentParser(description='angle simulation trajectories')
parser.add_argument('filenames', metavar='filename', type=str, nargs='+')
parser.add_argument('-vec', metavar='v', type=float, nargs=3)
</code></pre>
<p>Suppose this script is run with the following:</p>
<pre><code>&gt;&gt;&gt; python patchWidth.py file.dat -vec 0. 0. 1.
</code></pre>
<p>Is there a way to get this entire thing as a string in python? I would like to be able to print to the output file what command was run with what arguments.</p>
</div>
<div class="post-text" itemprop="text">
<p>Yes, you can use the sys module:</p>
<pre><code>import sys
str(sys.argv) # arguments as string
</code></pre>
<p>Note that <code>argv[0]</code> is the script name. For more information, that a look at the <a href="https://docs.python.org/3/library/sys.html#sys.argv" rel="nofollow noreferrer">sys module documentation</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I do not know if it would be the best option, but...</p>
<pre><code>import sys

" ".join(sys.argv)
</code></pre>
<p>Will return a string like <code>/the/path/of/file/my_file.py arg1 arg2 arg3</code></p>
</div>
<span class="comment-copy"><code>parser.parse_args()</code> parses <code>sys.argv[1:]</code> and uses <code>sys.argv[0]</code> as the <code>prog</code> attribute in <code>usage</code>.</span>
