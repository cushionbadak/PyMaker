<div class="post-text" itemprop="text">
<p>How to loop multiple variables and different steps parallel?</p>
<p>Like, in c++, <code>for(int i=0, j=n-1; i&lt;n &amp;&amp; j&gt;=0; i++, j--)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the built-in function <code>zip()</code> to iterate multiple iterables in parallel:</p>
<pre><code>for i,j in zip(range(n), range(n-1, -1, -1)):
    print(i, j)
</code></pre>
<p>Possible output:</p>
<pre><code>0 9
1 8
2 7
3 6
4 5
5 4
6 3
7 2
8 1
9 0
</code></pre>
<p><code>zip()</code> will stop iteration once the first iterator is exhausted. When you want to continue until the last is done, providing fill values for the others, you can use <code>itertools.zip_longest()</code>.</p>
<p>For reference:</p>
<ul>
<li><a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer">https://docs.python.org/3/library/functions.html#zip</a></li>
<li><a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow noreferrer">https://docs.python.org/3/library/itertools.html#itertools.zip_longest</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>In Python, <code>for</code> loops are usually iterated over a sequence (such as but not limited to: a <code>list</code>, <code>numpy</code> array, a <code>range</code>, <code>enumerate</code>d type, <code>dict</code> items etc).</p>
<p>The below implementation is a <code>zip</code>'d form of two <code>range</code> objects:</p>
<pre><code>for i, j in zip(range(0, n, 1), range(n-1, -1, -1)):
    print(i, j)
</code></pre>
<p>The limitation in this approach is that the two sequences (one over <code>i</code> and one over <code>j</code> must be of the same length.</p>
<p>However, if say <code>i</code> iterates over <code>n</code> elements and <code>j</code> over <code>m</code> elements, then the number of times the loop will be executed will be <code>min(i, j)</code>, i.e., the execution exits the loop as soon as one of the sequences is completed.</p>
</div>
<span class="comment-copy">You can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> to iterate through two ranges in parallel.</span>
<span class="comment-copy">@khelwood Thanks!</span>
<span class="comment-copy">Nice! Exactly what I want, thanks.</span>
<span class="comment-copy">no they don't have to. try <code>for i, j in zip([1, 2], 'foobar'): </code>; it stops on the smallest</span>
<span class="comment-copy">@Ev.Kounis Saw your comment after my edit! I noticed that right after I wrote my answer as well.</span>
