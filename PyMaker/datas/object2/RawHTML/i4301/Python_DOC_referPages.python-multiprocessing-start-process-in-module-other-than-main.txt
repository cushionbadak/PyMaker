<div class="post-text" itemprop="text">
<p>I have three modules, <code>worker</code>, <code>master</code>, and <code>MainTests</code>. I'm running the <code>MainTests</code>module as the main script. In <code>MainTests</code>, I call <code>master.run()</code>, inside of which I need to spawn multiple <code>worker</code> processes. Is this possible? In all the python <code>multiprocessing</code> tutorials I have come across, processes are started in the main module. If this is possible, could someone provide an example as to what this might look like?</p>
<p>This is what I have attempted so far:</p>
<p>Worker.py</p>
<pre><code>import time

class Worker(object):
    def __init__(self):
        super(Worker, self).__init__()
    def run(self):
        time.sleep(5)
        print("worker done with run")
        return
</code></pre>
<p>Master.py:</p>
<pre><code>import multiprocessing

class Master(object):
    def __init__(self, workers_array):
        super(Master, self).__init__()
        self.workers_array = workers_array
    def run(self):
        process_arr = [multiprocessing.Process(worker.run()) for worker in self.workers_array]
        [worker_process.start() for worker_process in process_arr]
</code></pre>
<p>MainTests.py</p>
<pre><code>from Worker import *
from Master import *

workers_array = [Worker() for i in range(5)]
master = Master(workers_array)
master.run()
</code></pre>
<p>Two issues arise:</p>
<ol>
<li>Workers seem to be running sequentially, one by one executing run() rather than running in parallel.</li>
<li>Workers seem to keep repeating runs. I would expect that after the workers complete their runs, the program ends, but it keeps going.</li>
</ol>
<p>Thanks in advance for any help.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure if you're still locking for an answer but you just have to put the "entry point" of your <strong>main</strong> program in this if statement:</p>
<pre><code>if __name__ == "__main__":
    main()
</code></pre>
<p>This way you can start a process in an imported module.
For further information check out <a href="https://docs.python.org/3/library/multiprocessing.html?highlight=multipro#the-spawn-and-forkserver-start-methods" rel="nofollow noreferrer">this bit of the docs</a> and obviously everything else in there :)</p>
<p>In your example it would be:</p>
<pre><code>from Worker import *
from Master import *

if __name__ == __main__:
    workers_array = [Worker() for i in range(5)]
    master = Master(workers_array)
    master.run()
</code></pre>
<p>This has worked for me.
Hope I could help.</p>
</div>
<span class="comment-copy">Yes, it is possible.</span>
<span class="comment-copy">regarding your edit: Please show us your attempt, this is not a coding service site.</span>
