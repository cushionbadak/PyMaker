<div class="post-text" itemprop="text">
<p>If there is a file in python with a function definition only and i don't call that function in that file.. is it a script or module? For eg:-</p>
<pre><code>def func():
    print('Hey')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Any python file is a module which you can <a href="https://docs.python.org/3/reference/simple_stmts.html#import" rel="nofollow noreferrer"><code>import</code></a>.</p>
<p>According to python doc:</p>
<blockquote>
<p>A module is a file containing Python definitions and statements. The file name is the module name with the suffix .py appended.</p>
</blockquote>
<p>And also an empty python file is a module, although useless.</p>
<p>And any python file is a also script.</p>
<p>A python file containing only a function definition is a script, but it will not do anything.</p>
<p>There's not much emphasis in making such a distinction in the Python world. Usually, a script is supposed to execute some code, while a module is a library of functions and classes to be imported and executed by some other script.</p>
<p>There's a special variable <code>__name__</code> which you can check to tell if the current script is being run directly in a python interpreter (in that case will have the value <code>"__main__"</code>), or not (i.e. is imported by some other script), e.g.:</p>
<pre><code>if __name__ == '__main__':
    # this script is being run directly in the interpreter
    # i.e.  python this_script.py
    #
    # this block will not be executed when this is import'ed
</code></pre>
<p>Read more at <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/modules.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This is module as well as script file as well. Python is a scripting language so any python file will considered script file first. In you case it will be considered as a module and that will be utilize as below:-</p>
<p>Suppose your python script module file name is util.py</p>
<pre><code>import util

util.func()
</code></pre>
</div>
<span class="comment-copy">That would be a module. You can import it to other modules / scripts and use this code in it.</span>
<span class="comment-copy">yes its a module..</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/2996110/what-is-the-difference-between-a-module-and-a-script-in-python">What is the difference between a module and a script in Python?</a></span>
<span class="comment-copy">Every python files can be called <code>script</code>. Because it is a scripting language. May be you wanted to know if the given file is a <code>module</code> or <code>package</code>?</span>
<span class="comment-copy">Hi, I see you're new to SO. If you feel an answer solved the problem, please <a href="https://meta.stackexchange.com/questions/5234/how-does-accepting-an-answer-work/5235#5235">mark it as 'acceptedâ€™</a> by clicking the green check mark. This helps keep the focus on older SO which still don't have answers.</span>
<span class="comment-copy">but is this a script?</span>
<span class="comment-copy">Yes, any python file is also a script. There's not much emphasis in making such a distinction in the Python world. Usually, a script is supposed to do something, while a module is a library of functions to be imported and executed by some other script.</span>
