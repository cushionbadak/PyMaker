<div class="post-text" itemprop="text">
<p>Perl provides internal documentation in <a href="https://perldoc.perl.org/perlguts.html" rel="nofollow noreferrer">perlguts</a>. This is a great introduction to the perl source code, and helps you navigate and make sense of it. Does Python have an alternative that supplements the CPython source code? Something like pyguts or pythonguts?</p>
</div>
<div class="post-text" itemprop="text">
<p>The equivalent of <code>perlguts</code> is documented in the</p>
<ul>
<li><a href="https://docs.python.org/3/c-api/index.html#c-api-index" rel="nofollow noreferrer"><em>Python/C API Reference Manual</em></a>.</li>
<li><a href="https://docs.python.org/3/extending/index.html#extending-index" rel="nofollow noreferrer"><em>Extending and Embedding the Python Interpreter</em></a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>No there is no complete documentation for the CPython source code. The public API is documented (<a href="https://docs.python.org/library/index.html" rel="nofollow noreferrer">Python library reference</a> and the <a href="https://docs.python.org/c-api/index.html" rel="nofollow noreferrer">C-API documentation</a>).</p>
<p>However there are also some documentations (although not complete and very superficial) in the <a href="https://devguide.python.org/" rel="nofollow noreferrer">development guide</a> especially <a href="https://devguide.python.org/exploring/" rel="nofollow noreferrer">exploring the internals (including the links at the bottom)</a>.</p>
<p>And you can always inspect the source code directly: <a href="https://github.com/python/cpython/" rel="nofollow noreferrer">CPython repository on GitHub</a>.</p>
</div>
<span class="comment-copy">It would have to be the implementation; there are no "guts" to the language itself. (Prior to Perl 5, the implementation <i>was</i> the definition of the language, so there's no real distinction.) The C API is probably what you are looking for.</span>
<span class="comment-copy">Well, I asked mainly to make sure it's about CPython because Python would be ambiguous in this context. Also it could've been about the data-model or something like that (I know it's a long shot but you never know until you asked).</span>
<span class="comment-copy">I think you misunderstood the question. He's not asking about documentation of Pythons public API but documentation of the internals.</span>
<span class="comment-copy">I actually found it with this link, so that's still good =)</span>
