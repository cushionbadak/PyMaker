<div class="post-text" itemprop="text">
<p>I can write <code>'something '.strip()</code> and get <code>something</code> in return or I can type <code>str(8)</code> and get <code>'8'</code> in return. Also, <code>type ('a')</code> returns <code>str</code> as the response. Is <code>str</code> a function (which converted a numeric <code>8</code> to <code>'8'</code>) or a class, which has methods such as <code>strip()</code>, etc.?</p>
</div>
<div class="post-text" itemprop="text">
<p>It is a class, whose constructor can get any Python object, and attempts to convert that to a string according to rules built-in the language.</p>
<p>The first thing it tries to do is to call the <code>__str__</code> method in the passed in object. If that does not exist, it tries to call the <code>__repr__</code> method. Whatever is returned is used as the new built string.</p>
<p>However, str is trully <em>the</em>  string class in Python, were all string methods are defined. </p>
</div>
<div class="post-text" itemprop="text">
<p><code>str</code> is a class.  As seen in the <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer">documentation</a></p>
<pre><code>str(8) # returns '8'
</code></pre>
<p>Is creating an object of type <code>str</code>.  It calls <code>str</code>'s constructor.  Which in turn calls the objects <code>__str__</code> function.</p>
<p>As suggested in the comments, you can take a closer look at what's happens using the <code>type</code> keyword:</p>
<pre><code>type(str)             # &lt;class 'type'&gt;
type(str())           # &lt;class 'str'&gt;
type('Hello, World!') # &lt;class 'str'&gt;
type(8)               # &lt;class 'int'&gt;
type(str(8))          # &lt;class 'str'&gt;
type(str().strip)     # &lt;class 'builtin_function_or_method'&gt;
</code></pre>
</div>
<span class="comment-copy"><code>str</code> is a class. <code>str(8)</code> invokes the object constructor (not a function, but function-like) and returns an instance of <code>str</code> class</span>
<span class="comment-copy">Go ahead and try it, write <code>type(str())</code> and <code>type(str().strip)</code>, also <code>type(str)</code></span>
<span class="comment-copy"><a href="https://docs.python.org/3/library/functions.html#func-str" rel="nofollow noreferrer">docs.python.org/3/library/functions.html#func-str</a> - says it is a class. That doc refers to <a href="https://docs.python.org/3/library/stdtypes.html#str" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#str</a> which describes the class. The Built-in Functions part of the docs clarifies <code>.. functions and types built into..</code></span>
<span class="comment-copy">Thank you for the clear explanation; I really appreciate it! <code>type(str().strip)</code> responds with <code>builtin_function_or_method</code>.</span>
