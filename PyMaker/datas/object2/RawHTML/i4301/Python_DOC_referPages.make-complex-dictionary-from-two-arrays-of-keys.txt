<div class="post-text" itemprop="text">
<p>I have <code>df1</code> and <code>df2</code>. for each element in <code>df1</code> I want to check if it exist in <code>df2</code> and print <code>df3</code> </p>
<pre><code>df1=['c_1', 'd_1', 'f_1', 'h_1', 'i_1', 'n_1', 'v_1', 'm_1']

df2=[['lia', 'f_1', 'n_1', 'v_1'], ['eli', 'f_1', 'n_1', 'v_1', 'm_1']]
</code></pre>
<p>I want an output like this:</p>
<pre><code>df3=[('f_1', {'lia': 1}), ('n_1', {'lia': 1}), ('v_1', {'lia': 1}),
     ('c_1', {'lia': 0}), ('d_1', {'lia': 0}), ('h_1', {'lia': 0}), 
     ('i_1', {'lia': 0}), ('m_1', {'lia': 0}), ('f_1', {'eli': 1}),
    ...]
</code></pre>
<p>I tried some iterations but it didn't work. here is my code.</p>
<pre><code>def st_pl(line, df1):    
 ln=line    
 st=df1    
 l = ln[0]    
 if l:    
  dict_l = {l: 1}    
 if not l:    
  dict_l = {l: 0}    
  li_st = []    
 size = len(ln)    
 for i in range(1, size):    
  tup = (ln[i], dict_l)    
  li_st.append(tup)    
  return li_st
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can try this approach and take help from it:</p>
<pre><code>df1=['c_1', 'd_1', 'f_1', 'h_1', 'i_1', 'n_1', 'v_1', 'm_1']

df2=[['lia', 'f_1', 'n_1', 'v_1'], ['eli', 'f_1', 'n_1', 'v_1', 'm_1']]


final_ist=[]

for i in df1:
    for j in df2:
        if i in j:
            final_ist.append((i,{j[0]:1}))
        else:
            final_ist.append((i,{j[0]:0}))

print(final_ist)
</code></pre>
<p>output:</p>
<pre><code>    [('c_1', {'lia': 0}), ('c_1', {'eli': 0}), ('d_1', {'lia': 0}), 
    ('d_1', {'eli': 0}),('f_1', {'lia': 1}), ('f_1', {'eli': 1}), 
    ('h_1', {'lia': 0}), ('h_1', {'eli': 0}),('i_1', {'lia': 0}), 
    ('i_1', {'eli': 0}),('n_1', {'lia': 1}), ('n_1', {'eli': 1}), 
    ('v_1', {'lia': 1}), ('v_1', {'eli': 1}), 
    ('m_1', {'lia': 0}), ('m_1', {'eli': 1})]
</code></pre>
</div>
<span class="comment-copy">Yes, please share your attempt.  And format your code, please.</span>
<span class="comment-copy">Yes, show your code. This one should be easy, you just want some nested code wrapped about list comprehensions, or set comprehensions, and use the <a href="https://docs.python.org/3/library/stdtypes.html#common-sequence-operations" rel="nofollow noreferrer"><code>in</code> operator</a>.</span>
<span class="comment-copy">I know you've shown the input and the result lists, but what is the logic for the conversion? I can't quite see it?</span>
