<div class="post-text" itemprop="text">
<p>I have a text file having dictionaries like this -</p>
<pre><code>account1 = {'email':'abc@test1', 'password':'abc321', 'securitycode':546987, 'name':'tester1', 'phone':236945744 }

account2 = {'email':'abc@test2.com', 'password':'abc123', 'securitycode':699999, 'name':'tester2', 'phone':666666666666 }
</code></pre>
<p>and I'm trying to read these dictionaries value with this code -</p>
<pre><code>dicts_from_file = []
with open('account.txt','r') as inf:
  dict_from_file = eval(inf.read())


print (dicts_from_file)
</code></pre>
<p>but i get this traceback-</p>
<pre><code>Traceback (most recent call last):
File "C:\Python\Dell_test.py", line 15, in &lt;module&gt;
dict_from_file = eval(inf.read())
File "&lt;string&gt;", line 2
{'email':'abc@test2.com', 'password':'abc123', 'securitycode':699999, 
'name':'tester2', 'phone':666666666666 }
^
SyntaxError: invalid syntax
</code></pre>
<p>Can anybody please help and guide whats wrong with this snippet?</p>
</div>
<div class="post-text" itemprop="text">
<p>Here is hacky solution, using <a href="https://docs.python.org/3/library/imp.html" rel="nofollow noreferrer">imp</a> module:</p>
<pre><code>import imp

accounts = imp.load_source('accounts', 'account.txt')

from accounts import *

print(accounts1)
# {'email':'abc@test1', 'password':'abc321', 'securitycode':546987, 'name':'tester1', 'phone':236945744 }
</code></pre>
<p>But, for future, i would suggest to you not to use this file format)</p>
</div>
<div class="post-text" itemprop="text">
<p>As others have said, you should use a serialisation format, but assuming that is not under your control, there are hacky ways to do this.</p>
<p>Since you have valid python code, the simplest way is to just import it.  First rename your file from <code>account.txt</code> to <code>account.py</code> - or something similar, so long as it has the <code>.py</code> suffix.</p>
<p>If you just imported the module then you would not know the account names, assuming these are random and you need to retain them.  He is a way to get them into a list:</p>
<pre><code>import account

dicts_from_file = [account.__dict__[i] for i in dir(account) if not i.startswith("__")]
print(dicts_from_file)
</code></pre>
<p>Possibly more useful, into a dictionary where the account names are the keys:</p>
<pre><code>import account
import pprint

dict_names = [i for i in dir(account) if not i.startswith("__")]
dicts_from_file = {i:account.__dict__[i] for i in dict_names}
pprint.pprint(dicts_from_file)
</code></pre>
<p>Gives:</p>
<pre><code>{'account1': {'email': 'abc@test1',
              'name': 'tester1',
              'password': 'abc321',
              'phone': 236945744,
              'securitycode': 546987},
 'account2': {'email': 'abc@test2.com',
              'name': 'tester2',
              'password': 'abc123',
              'phone': 666666666666,
              'securitycode': 699999}}
</code></pre>
</div>
<span class="comment-copy">why not just <code>import</code> it?</span>
<span class="comment-copy"><code>eval</code> is rarely the ideal solution. Why is the file in that format to start with? Do you control that, and if so why not use a format more suited to serialisation? If it's valid Python code, why not call it a Python file and <code>import</code> it?</span>
<span class="comment-copy">ast.literaleval() ?</span>
<span class="comment-copy">can you please brief it with an example as im new to python. I will appreciate if you tell me the better way of doing thins..  I want to save some account info in a file and then use that info in the mid of code</span>
<span class="comment-copy">@user3121891 then don't save it like this. Use one of the many serializaiton formats that exist, like JSON, yaml, or pickle.</span>
