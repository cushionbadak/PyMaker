<div class="post-text" itemprop="text">
<p>I'm learning some Networking through Python and came up with this idea of TCPServer Multithread so i can have multiple clients connected. The problem is that i can only connect one client.</p>
<pre><code>import socket
import os
import threading
from time import sleep
from threading import Thread

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print('Socket Preparado...')

def Main():
host = '127.0.0.1'
port = 5000

s.bind((host, port))
print('Enlaze listo...')

print('Escuchando...')
s.listen(5)
c, addr, = s.accept()
os.system('cls')

print('Conexion desde: '+str(addr))

def handle_client(client_socket):
while True:
    data = client_socket.recv(1024).decode('utf-8')
    if not data: break
    print('Client says: ' + data)
    print('Sending: ' + data)
    client_socket.send(data.encode('utf-8'))
client_socket.close()

if __name__ == '__main__':
while True:
    Main()
    client_socket, addr = s.accept()
    os.system('cls')
    print('Conexion desde: '+str(addr))
    Thread.start_new_thread(handle_client ,(client_socket,))
s.close()
</code></pre>
<p>Edit: This is my actual code, to test it i open up two Client.py codes and try to connect to it. The first Client.py successfully connects (Although there's bugs in receiving and sending back info)The second one executes but it's not shown in the server output as connected or something, it just compiles and stays like that.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to create a new thread each time you get a new connection</p>
<pre><code>import socket
import thread

host = '127.0.0.1'
port = 5000

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print('Socket Ready...')

s.bind((host, port))
print('Bind Ready...')

print('Listening...')
s.listen(1)

def handle_client(client_socket):
    while True:
        data = client_socket.recv(1024)
        if not data: break
        print('Client says: ' + data)
        print('Sending: ' + data)
        client_socket.send(data)
    client_socket.close()

while True:
    client_socket, addr = s.accept()
    print('Conexion from: '+str(addr))
    thread.start_new_thread(handle_client ,(client_socket,))
s.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Ok, here's the code solved, i should have said i was working on Python3 version. Reading the docs i found out, here's the code and below the docs.</p>
<pre><code>import socket
import os
import threading
from time import sleep
from threading import Thread
import _thread

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
print('Socket Preparado...')

def Main():
host = '127.0.0.1'
port = 5000

s.bind((host, port))
print('Enlaze listo...')

print('Escuchando...')
s.listen(1)





def handle_client(client_socket):
while True:
    data = client_socket.recv(1024).decode('utf-8')
    if not data: break
    print('Client says: ' + data)
    print('Sending: ' + data)
    client_socket.send(data.encode('utf-8'))
client_socket.close()

if __name__ == '__main__':
Main()
while True:

    client_socket, addr = s.accept()
    os.system('cls')
    print('Conexion desde: '+str(addr))           
    _thread.start_new_thread(handle_client ,(client_socket,))
s.close()
</code></pre>
<p><a href="https://docs.python.org/3/library/threading.html" rel="nofollow">https://docs.python.org/3/library/threading.html</a>
<a href="http://www.tutorialspoint.com/python3/python_multithreading.htm" rel="nofollow">http://www.tutorialspoint.com/python3/python_multithreading.htm</a></p>
<p>The problem was at <code>_thread.start_new_thread(handle_client ,(client_socket,))</code> just <code>import _thread</code> ask some questions here, keep researching and got it. </p>
<p>Thanks all of you.</p>
<p>WhiteGlove    </p>
</div>
<span class="comment-copy">with <code>s.listen(1)</code> ?</span>
<span class="comment-copy"><a href="https://docs.python.org/3.5/library/socket.html#socket.socket.listen" rel="nofollow noreferrer">docs.python.org/3.5/library/socket.html#socket.socket.listen</a></span>
<span class="comment-copy">if i understood well from the documentation, it's the number of possible connections? I changed the number to 2 and still can't connect more than 1 to the server.</span>
<span class="comment-copy">I think i got why it does not connect here 'client_socket, addr = s.accept()' the debugger says that there's no such 's' defined... I though when i invoke Main() it would be declared.</span>
<span class="comment-copy">@dsgdfg I could change 's.listen(1)' to increase the backlog but I don't think it's necessary because as soon as a new connection is made it's given it's own thread so it doesn't block the main thread thus allowing the main thread to accept new connections straight away. In fact if I set it to 's.listen(0)' the code still runs fine and accepts many connections.</span>
