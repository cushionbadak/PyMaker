<div class="post-text" itemprop="text">
<p>I have a .csv file that contains a column of urls (40-50 urls), I want to read the csv file and open all those urls on chrome? Is there a way to accomplish this in python?  I'm using the following piece of code to read the csv file.</p>
<pre><code>exampleFile = open('MyFile.csv')
exampleReader = csv.reader(exampleFile)
exampleData = list(exampleReader)
final = []
for item in exampleData:
    final.append(item[0])
for item in final:
    ???
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="http://www.seleniumhq.org/" rel="nofollow"><code>selenium</code></a> web driver to load each URL in chrome.</p>
<p>Reading the csv file can be improved like this:</p>
<pre><code>from selenium import webdriver

driver = webdriver.Chrome()

with open('MyFile.csv') as example_file:
    example_reader = csv.reader(example_file)
    for row in example_reader:
        driver.get(row[0])
        # do whatever...

    driver.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Assuming your posted snippet is alright and <code>final</code> contains valid urls you could do something like this:</p>
<pre><code>import webbrowser

exampleFile = open('MyFile.csv')
exampleReader = csv.reader(exampleFile)
exampleData = list(exampleReader)
final = []

for item in exampleData:
    final.append(item[0])
for url in final:
    webbrowser.open_new_tab(url)
</code></pre>
<p>For more information take a look to the <a href="https://docs.python.org/3/library/webbrowser.html" rel="nofollow">Convenient Web-browser controller</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Used this in the end to make it work the way I wanted to. Plus I did not have to install any external modules! Thanks a lot for all your answers, they helped me build the final one!</p>
<pre><code>import webbrowser
import csv

path = "C:/Program Files (x86)/Google/Chrome/Application/chrome.exe %s"
exampleFile = open('MyFile.csv')
exampleReader = csv.reader(exampleFile)
exampleData = list(exampleReader)

for item in exampleData:
    webbrowser.get(path).open(item[0])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use selenium with Chrome web driver
<a href="https://sites.google.com/a/chromium.org/chromedriver/getting-started" rel="nofollow">https://sites.google.com/a/chromium.org/chromedriver/getting-started</a></p>
</div>
<div class="post-text" itemprop="text">
<p>You can use selenium. First install selenium by <code>pip install selenium</code>. The following code open <a href="http://www.python.org" rel="nofollow noreferrer">http://www.python.org</a> in mozilla firefox.You can change driver to chrome driver in selenium to open links in chrome. For chrome you can see <a href="https://stackoverflow.com/questions/13724778/how-to-run-selenium-webdriver-test-cases-in-chrome">How to run Selenium WebDriver test cases in Chrome?</a></p>
<pre><code>from selenium import webdriver
from selenium.webdriver.common.keys import Keys

driver = webdriver.Firefox()
driver.get("http://www.python.org")
</code></pre>
</div>
<span class="comment-copy">Do you require to see the webs?</span>
<span class="comment-copy">Use the built-in webbrowser module</span>
<span class="comment-copy">Do you need to open the URLs simultaneously or consecutively (i.e. load first, check it's OK, load next)? And are you planning to do anything with the webpage once it's loaded? Note that if you are planning to just load the pages, similar to a bookmarking application, you can call an external application using the subprocess module (subprocess.call(["chrome.exe", URL]) ).</span>
<span class="comment-copy">@EndermanAPM, Yes I do!</span>
<span class="comment-copy">@Blabber Then, as suggested by all the people Selenium should do the trick if you just need to open them and you don't need to interact with them subprocess will work just fine :)</span>
<span class="comment-copy">WebDriverException: Message: 'chromedriver' executable needs to be in PATH. Please see <a href="https://sites.google.com/a/chromium.org/chromedriver/home" rel="nofollow noreferrer">sites.google.com/a/chromium.org/chromedriver/home</a></span>
