<div class="post-text" itemprop="text">
<p>I would like to understand how to reprint multiple lines in Python 3.5.</p>
<p>This is an example of a script where I would like to refresh the printed statement in place.</p>
<pre><code>import random
import time

a = 0
while True:
    statement = """
    Line {}
    Line {}
    Line {}
    Value = {}
    """.format(random.random(), random.random(), random.random(), a)
    print(statement, end='\r')
    time.sleep(1)
    a += 1
</code></pre>
<p>What I am trying to do is have:</p>
<pre><code>Line 1
Line 2
Line 3
Value = 1
</code></pre>
<p>Write on top of / update / refresh:</p>
<pre><code>Line 1
Line 2
Line 3
Value = 0
</code></pre>
<p>The values of each line will change each time. This is effectively giving me a status update of each Line.</p>
<p>I saw <a href="https://stackoverflow.com/questions/6840420/python-rewrite-multiple-lines-in-the-console?noredirect=1&amp;lq=1">another question from 5 years ago</a> however with the addition of the <code>end</code> argument in Python 3+ print function, I am hoping that there is a much simpler solution.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you want to clear the screen each time you call <code>print()</code>, so that it <em>appears</em> the print is overwritten each time, you can use <code>clear</code> in unix or <code>cls</code> in windows, for example:</p>
<pre><code>import subprocess
a = 0
while True:
    print(a)
    a += 1
    subprocess.call("clear")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If I've understood correctly you're looking for this type of solution:</p>
<pre><code>import random
import time
import os


def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

a = 0
while True:
    clear_screen()

    statement = """
    Line {}
    Line {}
    Line {}
    Value = {}
    """.format(random.random(), random.random(), random.random(), a)
    print(statement, end='\r')
    time.sleep(1)
    a += 1
</code></pre>
<p>This solution won't work with some software like IDLE, Sublime Text, Eclipse... The problem with running it within this type of software is that clear/cls uses ANSI escape sequences to clear the screen. These commands write a string such as "\033[[80;j" to the output buffer. The native command prompt is able to interpret this as a command to clear the screen but these pseudo-terminals don't know how to interpret it, so they just end up printing small square as if printing an unknown character.</p>
<p>If you're using this type of software, one hack around could be doing print('\n' * 100), it won't be the optimal solution but it's better than nothing.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/curses.html?highlight=ncurses" rel="nofollow">curses</a> for this.</p>
<pre><code>#!/usr/bin/python3

import curses
from time import sleep
from random import random

statement = """
Line {}
Line {}
Line {}
Value = {}"""

screen = curses.initscr()
n = 0

while n &lt; 20:
    screen.clear()
    screen.addstr(0, 0, statement.format(random(), random(), random(), n))
    screen.refresh()
    n += 1
    sleep(0.5)

curses.endwin()
</code></pre>
</div>
<span class="comment-copy">Not sure what you are trying to do? Please provide a sample console output</span>
<span class="comment-copy">Updated, hopefully it is clearer now, if not please let me know</span>
<span class="comment-copy">so its actually  a single line you want to update ?</span>
<span class="comment-copy">I am trying to update all lines in the statement</span>
<span class="comment-copy">Ok so you're trying to only reprint a line that has changed, Dynamic screen refresh?? Using the default python IDE, this is not possible to my knoledge. There are ways to fake it buy it won't look as fluid.</span>
<span class="comment-copy">This works only if he is working in the terminal. What if he is using the IDLE or some other interpreter?</span>
<span class="comment-copy">This solution is not portable</span>
<span class="comment-copy">Yes @BPL your answer is more portable :) although note <code>os.system</code> is deprecated</span>
<span class="comment-copy">@Chris_Rands Deprecated? I didn't know that... I don't see it marked in the <a href="https://docs.python.org/3/library/os.html#os.system" rel="nofollow noreferrer">docs</a> though, where have you read that?</span>
<span class="comment-copy">@BPL It says in the docs you link to that using <code>subprocess</code> module is prefered to <code>os.system</code>, also see: <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">docs.python.org/3/library/subprocess.html</a></span>
<span class="comment-copy">This works only if he is working in the terminal. What if he is using the IDLE or some other interpreter?</span>
<span class="comment-copy">nice copy paste !</span>
<span class="comment-copy">@TheLazyScripter I've never used that IDLE thing after working with python for many years so personally I don't care about it. Also, the OP didn't mention that requirement so the assumption is he's using some real tool</span>
<span class="comment-copy">@BPL I use Eclipse and your method doesn't work. I was not specifying that it wouldn't work in IDLE, I was saying that it ONLY works on CMD or some other terminal...</span>
