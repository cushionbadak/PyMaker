<div class="post-text" itemprop="text">
<p>So I'm trying to make a mix and match between numbers here is my code</p>
<pre><code>import random

P1 = float(input("Person's name?")) 
P2 = float(input("Person's name?")) 
P3 = float(input("Person's name?"))

A1 = float(input("Activity?")) 
A2 = float(input("Activity?")) 
A3 = float(input("Activity?")) 

s = (A1, A2, A3)

cool1 = random.sample([A1, A2, A3],1)
cool2 = random.sample([A1, A2, A3],1)
cool3 = random.sample([A1, A2, A3],1)


print ("%s job is %s." %(P1, cool1))

print ("%s job is %s." %(P2, cool2))

print ("%s job is %s." %(P3, cool3))
</code></pre>
<p>The problem is that it is randomizing but it keeps repeating numbers like here</p>
<p>**</p>
<blockquote>
<p>1.0 job is [4.0].
  2.0 job is [5.0].
  3.0 job is [4.0].</p>
</blockquote>
<p>**</p>
<p>What can I do to make it not repeat.
I'm using python 2.7.12</p>
<p>Also how can I use alphanumerical instead of float only.</p>
</div>
<div class="post-text" itemprop="text">
<p>Best way to achieve this will be to use <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow"><code>random.shuffle</code></a> (if you want to randomize the original sample list) or <a href="https://docs.python.org/3/library/random.html#random.shuffle" rel="nofollow"><code>random.select</code></a> (if you want to keep the original sample copy):</p>
<p><em>Example with <code>random.shuffle</code>:</em></p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; my_samples = ['A1', 'A2', 'A3']
&gt;&gt;&gt; shuffle(my_samples)
&gt;&gt;&gt; cool1, cool2, cool3 = my_samples
# Random Result: cool1 = 'A3', cool2='A1', cool3='A2'
</code></pre>
<p><em>Example with <code>random.select</code>:</em></p>
<pre><code>&gt;&gt;&gt; cool1, cool2, cool3 = random.sample(['A1', 'A2', 'A3'], 3)
</code></pre>
<hr/>
<p>If you want minimal changes in your solution. You may remove an entry from your samples based on random selection and get next choice from remaining samples like:</p>
<pre><code>&gt;&gt;&gt; import random
&gt;&gt;&gt; cool1 = random.sample(my_samples,1)
&gt;&gt;&gt; my_samples.remove(*cool1)
&gt;&gt;&gt; my_samples
['A1', 'A3']
&gt;&gt;&gt; cool2 = random.sample(my_samples,1)
&gt;&gt;&gt; my_samples.remove(*cool2)
&gt;&gt;&gt; cool3 = random.sample(my_samples,1)
&gt;&gt;&gt; my_samples.remove(*cool3)
&gt;&gt;&gt; my_samples 
[]
&gt;&gt;&gt; cool1, cool2, cool3
(['A2'], ['A3'], ['A1'])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>write a class to pick a unique element from list<br/>
1. permutations finds all unique elements <br/>
2. rest can define new data and length of result<br/></p>
<pre><code>from itertools import permutations
class PickOne( object ):
    def __init__(self,lst,l):
        self.lst    = lst
        self.visit  = set()
        self.l      =  l 
        self.lenght = self.number(l)
    def pick(self):
        if len(self.visit) == self.lenght :
            print 'run out numbers'
            return 
        res = tuple(random.sample(self.lst,self.l))
        while res in self.visit:
            res = tuple(random.sample(self.lst,self.l))
        self.visit.add( res )
        return res
    def reset(self,l,lst = None):
        if not lst:
            lst = self.lst
        self.__init__(lst,l)

    def number(self,l):
        return len( list(permutations(self.lst,l)) )
</code></pre>
<p>Example:</p>
<pre><code> a = PickOne([1,2,3,4],1)
    &gt;&gt;&gt; a.pick()
    (2,)
    &gt;&gt;&gt; a.pick()
    (1,)
    &gt;&gt;&gt; a.pick()
    (4,)
    &gt;&gt;&gt; a.pick()
    (3,)
    &gt;&gt;&gt; a.pick()
    run out numbers

    &gt;&gt;&gt; a.reset(2)
    &gt;&gt;&gt; a.pick()
    (3, 1)
    &gt;&gt;&gt; a.pick()
    (3, 4)
    &gt;&gt;&gt; a.pick()
    (2, 1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since you are selecting from a list, then you should delete the entry from the list after each check.</p>
<ol>
<li><p>Create your original list, which will be used as needed.</p></li>
<li><p>Create a second list from the first to use as you select.</p></li>
<li><p>As you choose each element from the list, remove it</p></li>
<li><p>Put the chosen element into a list of chosen element.</p></li>
</ol>
<p><a href="http://www.tutorialspoint.com/python/list_remove.htm" rel="nofollow">Python remove method</a></p>
<blockquote>
<p><strong>Parameters</strong><br/>
  obj -- This is the object to be removed from the list.</p>
<p><strong>Return Value</strong><br/>
  This method does not return any value but removes the
  given object from the list.</p>
<p><strong>Example</strong><br/>
   The following example shows the usage of remove() method.</p>
<pre><code>#!/usr/bin/python

aList = [123, 'xyz', 'zara', 'abc', 'xyz'];

aList.remove('xyz');
print "List : ", aList
aList.remove('abc');
print "List : ", aList
</code></pre>
<p>When we run above program, it produces following result âˆ’</p>
<pre><code>List :  [123, 'zara', 'abc', 'xyz']
List :  [123, 'zara', 'xyz']
</code></pre>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>You could do this:</p>
<pre><code>cool1, cool2, cool3 = random.sample([A1, A2, A3], 3)
</code></pre>
<blockquote>
<p>Also how can I use alphanumerical instead of float only.</p>
</blockquote>
<p>Have you tried not converting your inputs to float...?</p>
</div>
<span class="comment-copy">what do you mean repeating? Are you talking about how job 1 and 3 returned the same number?</span>
<span class="comment-copy">Exactly :) @depperm</span>
<span class="comment-copy"><code>cool1, cool2, cool3 = random.sample([A1, A2, A3], 3)</code>? Or just shuffle then assign.</span>
<span class="comment-copy">@CoolBro so am I correct in assuming you want the 3 activity numbers to be randomly assigned to a person but so that each is assigned only once?</span>
<span class="comment-copy">@MoinuddinQuadri Someone seems to be downvoting any answer posted to this question</span>
<span class="comment-copy">@DownVoter: Please would you care to explain the reason as well?</span>
