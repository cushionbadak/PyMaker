<div class="post-text" itemprop="text">
<p>I want to copy an entire directory or just files from a directory to two or more directories at the same time. I'm struggling with the syntax to add more directories for the destination, so the copy is done at the same time (as I'll run a cron job). </p>
<p>Everything works fine if I have one single directory, however I need to add two or more.</p>
<p>The last line of code is:</p>
<pre><code>shutil.copy(full_file_name, r'S:\\A')
</code></pre>
<p>I want to add more destination folders after S:\</p>
<p>(this is for Win machines)</p>
<p>Thanks for help!</p>
</div>
<div class="post-text" itemprop="text">
<p>Why not just wrap in a loop:</p>
<pre><code>destinations = [r'S:\\A', r'S:\\B', r'S:\\C']
for dest in destinations:
    shutil.copy(full_file_name, dest)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want to copy the files at the same time, you should use <a href="https://docs.python.org/3/library/multiprocessing.html" rel="nofollow">multiprocessing</a>.
In this sample, we have two files file1.txt and file2.txt and we will copy them to c:\temp\0 and c:\temp\1. </p>
<pre><code>import multiprocessing
import shutil

def main():
    orgs = ['c:\\temp\\file1.txt']
    dests = ['c:\\temp\\0\\', 'c:\\temp\\1\\'] 
    num_cores = multiprocessing.cpu_count()
    p = multiprocessing.Pool(num_cores)
    operations =  [(x,y) for x in orgs for y in dests]
    p.starmap(shutil.copy, operations)
    p.close()
    p.join()

if __name__ == "__main__":
    main()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In this example you define your file folder before, and an array of destination folders. Python then iterates through the destinations in a <code>for</code> loop. Note the use of <code>os.path.join</code>, which is a safe way of building file paths for cross-platform work.</p>
<pre><code>import shutil
import os


full_file_path =  os.path.join('home', 'orig')
paths = [os.path.join('home', 'destA'), os.path.join('home', 'destB')]
for path in paths:
    shutil.copy(full_file_path, path)
</code></pre>
</div>
<span class="comment-copy">I think you'll have to add one <code>shutil.copy()</code> for each destination directory.</span>
<span class="comment-copy">There is no way to copy to two destinations "at the same time". Almost nothing in a computer program happens precisely "at the same time", I guess may be asking the wrong thing. Do you mean that the files in both destinations should be created syncronously or that you want to execute just one line of code to do two things?</span>
<span class="comment-copy">Yes - sorry I did not mean at the "exact same time", but in the same (or few)  line of code. Thanks.</span>
<span class="comment-copy">thanks. I tested, and this is working well.</span>
<span class="comment-copy">Thank you for your help. I'll definitely test/use your solution, as I'll be handling large files most of the time, and I guess this will take advantage of more cores.</span>
<span class="comment-copy">@alc, if was your favorite, mark it as useful and favorite too! ;)</span>
<span class="comment-copy">Thank you. Very nice/simple solution. I'll test it soon and provide feedback. So far I just tested the one Mr.F suggested with loop wrapping. I'll come back if I need more help, but so far all the solutions here addressed what I needed. Thanks!</span>
