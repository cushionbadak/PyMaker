<div class="post-text" itemprop="text">
<p>I've tried searching online for this question but because the word "object" is so common I get lots of unrelated results instead of what I'm looking for. I also looked through the official docs here: <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">https://docs.python.org/3/tutorial/classes.html</a> and didn't find any explanation for this. So please don't freak out when you read this question.</p>
<p><strong>Question:</strong></p>
<p>In Python while declaring a new class we extend the object class. For ex:</p>
<pre><code>class SomeClass(object):
    #eggs and ham etc
</code></pre>
<p>Here we notice that <code>SomeClass</code> has a capital S because we are following camel case. However, the class that we are inheriting from - "<code>object</code>" doesn't seem to follow this naming convention. Why is the object class in all lower case?</p>
</div>
<div class="post-text" itemprop="text">
<p>All Python's built-in types have lower case: int, str, unicode, float, bool, etc. The object type is just another one of these.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://www.python.org/dev/peps/pep-0008/#class-names" rel="nofollow noreferrer">https://www.python.org/dev/peps/pep-0008/#class-names</a> says:</p>
<blockquote>
<h3>Class Names</h3>
<p>Class names should normally use the CapWords convention.</p>
<p>The naming convention for functions may be used instead in cases where
  the interface is documented and used primarily as a callable.</p>
<p><strong><em>Note that there is a separate convention for builtin names: most
  builtin names are single words (or two words run together), with the
  CapWords convention used only for exception names and builtin
  constants.</em></strong> [emphasis mine]</p>
</blockquote>
<p>All other classes should use the CapWorlds convention. As <code>list</code>, <code>object</code>, etc are built-in names, they follow this <em>separate convention</em>.</p>
<p><sub>(copied from my answer to <a href="https://stackoverflow.com/questions/14973963/if-the-convention-in-python-is-to-capitalize-classes-why-then-is-list-not-cap">If the convention in Python is to capitalize classes, why then is list() not capitalized? Is it not a class?</a>)</sub></p>
</div>
<div class="post-text" itemprop="text">
<p>If you go to the python interpreter and do this:</p>
<pre><code>&gt;&gt;&gt; object
&lt;type 'object'&gt;
</code></pre>
<p>You'll see object is a built-in type, the other built-in types in python are also lowercase <code>type, int, bool, float, str, list, tuple, dict, ...</code>. For instance:</p>
<pre><code>&gt;&gt;&gt; type.__class__
&lt;type 'type'&gt;
&gt;&gt;&gt; object.__class__
&lt;type 'type'&gt;     
&gt;&gt;&gt; int.__class__
&lt;type 'type'&gt;
&gt;&gt;&gt; type.__class__
&lt;type 'type'&gt;
&gt;&gt;&gt; int.__class__
&lt;type 'type'&gt;
&gt;&gt;&gt; bool.__class__
&lt;type 'type'&gt;
&gt;&gt;&gt; float.__class__
&lt;type 'type'&gt;
&gt;&gt;&gt; str.__class__
&lt;type 'type'&gt;
&gt;&gt;&gt; list.__class__
&lt;type 'type'&gt;
&gt;&gt;&gt; tuple.__class__
&lt;type 'type'&gt;
&gt;&gt;&gt; dict.__class__
&lt;type 'type'&gt;
</code></pre>
<p>So it makes sense they are not lowercase, that way is quite easy to distinguish them from the other type of classes</p>
</div>
<div class="post-text" itemprop="text">
<p>The short and basic answer is, class is just a keyword used by the python interpreter to know when some thing needs to be seen as a class , like how you have "def" for defining a function. Its a keyword to describe what follows is all.</p>
</div>
<span class="comment-copy">Though <code>Exception</code> is a built-in class with the <code>e</code> being capital <code>E</code>. I assume Python followed the lower-case letter convention for datatypes and I'm not sure about that to confirm.</span>
<span class="comment-copy">Possible duplicate of <a href="https://stackoverflow.com/questions/14973963/if-the-convention-in-python-is-to-capitalize-classes-why-then-is-list-not-cap">If the convention in Python is to capitalize classes, why then is list() not capitalized? Is it not a class?</a></span>
<span class="comment-copy">@direprobs: it's in the PEP. see my answer</span>
<span class="comment-copy">object does look like a keyword. However, on searching a little more I came across this a class <b>defaultdict</b> inside the collections package. "defaultdict" is a class that extends the dict class. It's not a built-in and yet it's been declared in small letters. Isn't there something wrong here or are some Python classes really declared in lower cases?</span>
<span class="comment-copy">@Mugen <code>OrderedDict</code> is written in camel case. The difference is in the Python version they appeared in: 2.5 for <code>defaultdict</code> and 2.7 for <code>OrderedDict</code>. I don't know if it is related...</span>
<span class="comment-copy">@Mugen Btw this question is also covered in <a href="http://stackoverflow.com/questions/25597121/why-is-ordereddict-named-in-camel-case-while-defaultdict-is-lower-case">this answer</a>.</span>
<span class="comment-copy"><i>"You'll see object is a built-in type, not a class"</i> types and classes are merged and technically a type is a class and a class is a type. There's a circular relationship in Python's model.</span>
<span class="comment-copy">Yeah, that's actually true. I've edited my answer</span>
<span class="comment-copy">The op is asking about object not class.</span>
<span class="comment-copy">That's my bad, in that case Daniel's answer is better.</span>
<span class="comment-copy">@BrandonJones Haha. After you came to know that you weren't answering the question, why didn't you delete your answer? I'm really curious to know what your thinking was here.</span>
