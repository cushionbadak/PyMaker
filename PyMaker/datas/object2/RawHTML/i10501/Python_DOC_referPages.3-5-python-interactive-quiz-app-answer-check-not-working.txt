<div class="post-text" itemprop="text">
<p>I'm trying to have only one defined function for this </p>
<blockquote>
<p>WELCOME TO Your Test</p>
<p>Word 1/5: Potato How many consanants does the word contain?</p>
<p>3</p>
<p>Correct!</p>
<p>Word 2/5: Potato How many vowels does the word contain?</p>
<p>1</p>
<p>Correct!</p>
<p>Word 3/5: Name How many vowels does the word contain</p>
<p>5</p>
<p>Incorrect! Correct answer 4</p>
<p>Word 4/5: YES How many letters does the word contain? 3 Correct!</p>
<p>Word 5/5: Day</p>
<p>What is letter 3 of the word?</p>
<p>Y</p>
<p>Correct!</p>
<p>Game Over. Your Score is 4/5</p>
</blockquote>
<p>@Niemmi Like this this?
    import random
    import string</p>
<pre><code>def consonant_count(word):
    word = word.lower()
    return len([x for x in word if x in consonants])

def vowel_count(word):
    word = word.lower()
    return len([x for x in word if x in vowels])

def prompt_letter_count(word):
    correct = word_map[word]['letters']
    ans = input('How many letters does "{}" contain?'.format(word))
    return check(int(ans), correct)

def prompt_vowel_count(word):
    correct = word_map[word]['vowels']
    ans = input('How many vowels does "{}" contain?'.format(word))
    return check(int(ans), correct)

def prompt_consonant_count(word):
    correct = word_map[word]['consonants']
    ans = input('How many consonants does "{}" contain?'.format(word))
    return check(int(ans), correct)

def prompt_random_letter(word):
    n = random.randint(0, len(word))
    correct = word[n-1]
    ans = input('What is letter {} of "{}"?'.format(n, word))
    return check(int(ans).lower(), correct.lower())

def check(ans, correct):
    if ans == correct:
        return prompt_correct()
    return prompt_incorrect()


def prompt_correct():
    print('That is correct! :)')
    return 1

def prompt_incorrect():
    print('That is incorrect :(')
    return 0

def next_question(word):
    q_type = input_map[random.randint(1, 4)]
    return q_type(word)

vowels = ['a', 'e', 'i', 'o', 'u']
consonants = [x for x in string.ascii_lowercase if x not in vowels]
quizWords = ['WOMBAT', 'COMPUTER', 'BOOKS', 'DAY', 'NIGHT', 'HOUR', 'POTATO', 'HUGE', 'TINY', 'GOOD', 'BAD', 'YES', 'NO', 'HOUSE', 'QUESTION', 'BALLOON', 'CAT', 'DUCK', 'KOOKARBURRA', 'POSTER', 'TELEVISION', 'PRINCE', 'RHYTHM', 'SUDDENLY', 'SNOW', 'MAGNET', 'TOWEL', 'WALKING', 'SPEAKER', 'UNCHARACTERISTICALLY']
word_map = {x:{'consonants':consonant_count(x), 'vowels':vowel_count(x), 'letters':len(x)} for x in quizWords}
input_map = {1:prompt_letter_count, 2:prompt_vowel_count, 3:prompt_consonant_count, 4:prompt_random_letter}

def start_quiz(number_questions):
    current_question = 0
    correct_questions = 0
    if number_questions &gt; len(quizWords):
        number_questions = len(quizWords)
    sample_questions = random.sample(quizWords, number_questions)
    print('WELCOME TO YOUR QUIZ')
    print ('---------------------')
    for x in sample_questions:
        print ("Question {}/{}:".format(current_question+1,  number_questions))
        correct_questions += next_question(x)
        print ('---------------------')
        current_question += 1
    print ('Congragulations on completing your quiz!')
    print ("    Score {}/{}:".format(correct_questions , number_questions))
    try_again = input('Would you like to try again? (y/n)').lower()
    if try_again == 'y' or try_again == 'yes':
        start_quiz(number_questions)

start_quiz(4)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The problem is that you're expecting <a href="https://docs.python.org/3/library/functions.html#input" rel="nofollow"><code>input</code></a> to return you a <code>int</code> which it doesn't do on Python 3. Python 3 <code>input</code> works the same way as <a href="https://docs.python.org/2.7/library/functions.html#raw_input" rel="nofollow"><code>raw_input</code></a> on Python 2 returning a string that you need to convert to other type yourself. You should be able to fix your code by doing the conversions at the required places and switching all <code>raw_input</code> calls to <code>input</code> since there's no <code>raw_input</code> on Python 3.</p>
<p>Example:</p>
<pre><code>def prompt_letter_count(word):
    correct = word_map[word]['letters']
    ans = input('How many letters does "{}" contain?'.format(word))
    return check(int(ans), correct) # instead of check(ans, correct)
</code></pre>
</div>
<span class="comment-copy">that can be checked by debugging function <code>check</code>: add <code>print(repr(ans))</code> and <code>print(repr(correct))</code> to see one is a string and the other isn't</span>
<span class="comment-copy">@Niemmi  I think I made the correct changes, am I on the right rack? See above</span>
<span class="comment-copy">@SamMay Otherwise looks ok but at <code>prompt_random_letter</code> you don't want to convert the answer to <code>int</code> since you're comparing strings against each other.</span>
<span class="comment-copy">@NiemmiCause I tried using it and the letter count still doesn't seem to want to work. Wait false alarm figured it out all good thanks mate :)</span>
<span class="comment-copy">@SamMay If the correct answer type is <code>int</code> as in all the "How many xxx does something contain?" questions you need to convert the user input to <code>int</code>. Then if the correct answer type is <code>str</code> as in "What's the xth letter of word y?" then there's no conversion needed since the input is <code>str</code> already.</span>
