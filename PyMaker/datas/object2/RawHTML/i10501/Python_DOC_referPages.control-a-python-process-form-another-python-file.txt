<div class="post-text" itemprop="text">
<p>first of all a short overview over my current goal:</p>
<p>I want to use a scheduler to execute a simple python program every second. This program reads some data and enter the results inside a database. Because the scheduled task will operate over several days on a raspberry pie the process should start in the background. Therefore I want to create a python file which can start, stop and get the current status from the background job. Furthermore it should be possible to exit and reenter the control file without stopping the background job.</p>
<p>Currently I tried apscheduler to execute the python file every second. The actual problem is, that I can't access the current python file, to control the status, from another external file. Overall I found no real solution how I can control a subprocess form an external file and after find the same subprocess again after restarting the controlling python file.</p>
<p>EDIT:</p>
<p>So overall as far I got it now I'm able to find the current process with his pid. With that im able to send send a terminatesignal to the current process. Inside my scheduled file I'm able to <a href="https://nattster.wordpress.com/2013/06/05/catch-kill-signal-in-python/" rel="nofollow">catch these signals</a> and shut down the program on a normal way.</p>
</div>
<div class="post-text" itemprop="text">
<p>To control (start, restart, stop, schedule) the background process use <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow noreferrer">subprocess</a>. Here is <a href="https://stackoverflow.com/questions/1191374/using-module-subprocess-with-timeout">example</a> of subrocess' popen with timeout.</p>
<p>To pass some data between the <code>scheduler</code> and the <code>background job</code> use one of <a href="https://docs.python.org/3/library/ipc.html" rel="nofollow noreferrer">IPC</a> mechanisms, for example sockets.</p>
</div>
<span class="comment-copy">Okay to control the process I'm able to use subprocess but how can I find the running subprocess again after restarting the controller (mainprocess)?</span>
<span class="comment-copy">No, subprocess created using python's subprocess would normally end after the controlling program ends.</span>
<span class="comment-copy">@VeitBjarsch you may use linux tools like <code>ps</code> for that, see <a href="http://stackoverflow.com/questions/2940858/kill-process-by-name">example</a>.</span>
<span class="comment-copy">The problem is that this will kill the process on a hard way and not exit ist normally. I found <a href="http://stackoverflow.com/questions/16420092/how-to-make-python-script-run-as-service">this</a>. Maybe it will help with my problem.</span>
