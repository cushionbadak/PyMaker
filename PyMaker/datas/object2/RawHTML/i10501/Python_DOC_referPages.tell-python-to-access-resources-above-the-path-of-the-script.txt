<div class="post-text" itemprop="text">
<p>If you run a script from /tmp/myfolder/myscript/, and want to access a resource in myfolder, how do you do that in python?</p>
<p>I did get the file path with <code>__file__</code>, (I was told to not use it because it may not always be populated) but I can't do like in bash, where I "cd .."  to get to the previous directory, because Python does not understand that.</p>
<p>I would like to run the python script and no matter where the folder is, it will always go up one level and get the resource that I need.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python does understand <code>cd</code>: <code>os.chdir()</code>. I am not sure exactly what you are trying to do, but you can try:</p>
<pre><code>import os
os.chdir('..')
</code></pre>
<p>This will change your working directory to the one above the current one (just like <code>cd ..</code>).</p>
<p>You can also use <code>..</code> for many operations that use paths. For example, if you want to open a file that is up one directory: <code>open('../myfile.txt')</code>, etc. You may also find the answers to <a href="https://stackoverflow.com/questions/21030751/python-imports-from-the-directory-above">this question</a> useful, depending on what your goal is.</p>
</div>
<div class="post-text" itemprop="text">
<p>I am unclear about exactly what you are talking about, but I infer that you are talking about intra-package references. You can read more about it <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow">here</a>, but the general concept is you use <code>from .. import module</code> when trying to import a module from another package. </p>
<p>The <code>..</code> in the statement tells the compiler to go up one level and look for a module named <code>module</code>. You can also use <code>for . import module</code>, which will import the 
module <code>name</code> from the current directory and <code>from ../folder import module</code></p>
</div>
<span class="comment-copy">I think you can be pretty sure <code>__file__</code> will be populated in your case. So, <code>os.path.join(os.path.dirname(__file__), '..')</code> is your best way to get parent directory</span>
<span class="comment-copy">Exactly what I was looking for. I do have a script that run in a sub directory of my project, while an asset is in the parent folder, so to access that element, I need to go one level up. This allow me to change the cwd, so I can access the asset, Thanks!</span>
<span class="comment-copy">I would still rather use <code>__file__</code> than CWD. Current working directory really does not have to be where the script is, for example if you run <code>python dirname/script.py</code>, CWD will be one level up from the script.</span>
