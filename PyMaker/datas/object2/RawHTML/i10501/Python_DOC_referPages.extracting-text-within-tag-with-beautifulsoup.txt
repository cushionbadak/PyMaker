<div class="post-text" itemprop="text">
<pre><code>    &lt;div&gt;
&lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;strong&gt;LANGUAGES&lt;/strong&gt;&lt;/span&gt;Cantonese&lt;/p&gt;
&lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;/span&gt;English&lt;/p&gt;
&lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;/span&gt;Putonghua&lt;/p&gt;
&lt;p class="tabbed"&gt;&lt;span class="tab"&gt;&lt;strong&gt;GENDER&lt;/strong&gt;&lt;/span&gt;Male&lt;/p&gt;
   &lt;/div&gt;
</code></pre>
<p>I would like to extract the "Male" in the 5th line but I don't know how to do it. Can anyone help? 
I tried " gen = soup.find('span', class_='tab').string" but it doesn't work. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use the <a href="https://www.google.co.in/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwja4Ii7q_fOAhVGN48KHR_QDZsQygQIHzAA&amp;url=https%3A%2F%2Fwww.crummy.com%2Fsoftware%2FBeautifulSoup%2Fdocumentation.html%23The%2520basic%2520find%2520method%3A%2520findAll(name%2C%2520attrs%2C%2520recursive%2C%2520text%2C%2520limit%2C%2520**kwargs)&amp;usg=AFQjCNFvmAXY4S9WJwdCGla7HED-zGam4A&amp;sig2=-fvqI2tGt02bZk6ckYAqaA&amp;bvm=bv.131783435,d.c2I" rel="nofollow">.findAll()</a> method:</p>
<pre><code>In [37]: from bs4 import BeautifulSoup

In [38]: soup = BeautifulSoup("""&lt;div&gt;
     ...: &lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;strong&gt;LANGUAGES&lt;/strong&gt;&lt;/span&gt;Cantonese&lt;/p&gt;
     ...: &lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;/span&gt;English&lt;/p&gt;
     ...: &lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;/span&gt;Putonghua&lt;/p&gt;
     ...: &lt;p class="tabbed"&gt;&lt;span class="tab"&gt;&lt;strong&gt;GENDER&lt;/strong&gt;&lt;/span&gt;Male&lt;/p&gt;
     ...:    &lt;/div&gt;""", "html")

In [39]: soup.find(lambda tag: tag.text.startswith('GENDER')).text[6:]
Out[39]: u'Male'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You don't need to search every tag, you can find the span where the <code>text="GENDER"</code> and get the text from the parent <code>p</code> setting <em>resursive=False</em> to only get the parent text:</p>
<pre><code>In [4]: from bs4 import BeautifulSoup

In [5]: h = """&lt;div&gt;
   ...: &lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;strong&gt;LANGUAGES&lt;/strong&gt;&lt;/span&gt;Cantonese&lt;/p&gt;
   ...: &lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;/span&gt;English&lt;/p&gt;
   ...: &lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;/span&gt;Putonghua&lt;/p&gt;
   ...: &lt;p class="tabbed"&gt;&lt;span class="tab"&gt;&lt;strong&gt;GENDER&lt;/strong&gt;&lt;/span&gt;Male&lt;/p&gt;
   ...:    &lt;/div&gt;"""

In [6]: soup = BeautifulSoup(h,"html.parser")

In [7]: soup.find("span","tab", text="GENDER").parent.find(text=True,recursive=False)
Out[7]: u'Male'
</code></pre>
<p>Or just using the span without the class name:</p>
<pre><code>In [8]: soup.find("span",text="GENDER").parent.find(text=True,recursive=False)
Out[8]: u'Male'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Here's a simpler way for you to understand: You can get your desired output by parsing the "p" tags. </p>
<pre><code>from bs4 import BeautifulSoup

doc = """ 
&lt;div&gt;
&lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;strong&gt;LANGUAGES&lt;/strong&gt;&lt;/span&gt;Cantonese&lt;/p&gt;
&lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;/span&gt;English&lt;/p&gt;
&lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;/span&gt;Putonghua&lt;/p&gt;
&lt;p class="tabbed"&gt;&lt;span class="tab"&gt;&lt;strong&gt;GENDER&lt;/strong&gt;&lt;/span&gt;Male&lt;/p&gt;
&lt;/div&gt;
"""

soup = BeautifulSoup(doc, "lxml")

ptags = soup.find_all("p", attrs={'class':'tabbed'})
for ptag in ptags:
    print ptag.contents[1].string.strip()
</code></pre>
<p>This will give you the output of every "p"tag as follows</p>
<pre><code>Cantonese
English
Putonghua
Male
</code></pre>
<p>Now if you just want the value of the 4th ptag you could replace the above "for loop" with this one line. Assume you are sure you always want the value of 4th ptag, do the folowing</p>
<pre><code>print ptags[3].contents[1].string.strip()
</code></pre>
<p>will give output:</p>
<pre><code>Male
</code></pre>
<hr/>
<p>Explanation:</p>
<pre><code>ptags = soup.find_all("p", attrs={'class':'tabbed'})
</code></pre>
<p>This returns a ResultSet - basically a list of ptags. Each ptag in your case has two elements the span tag and string.</p>
<pre><code>print ptags

[&lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;strong&gt;LANGUAGES&lt;/strong&gt;&lt;/span&gt;Cantonese&lt;/p&gt;, 
&lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;/span&gt;English&lt;/p&gt;, 
&lt;p class="tabbed" style="margin-top:2px;"&gt;&lt;span class="tab"&gt;&lt;/span&gt;Putonghua&lt;/p&gt;, 
&lt;p class="tabbed"&gt;&lt;span class="tab"&gt;&lt;strong&gt;GENDER&lt;/strong&gt;&lt;/span&gt;Male&lt;/p&gt;]
</code></pre>
<p>Now for every ptag if your print its contents "ptag.contents" it returns a list of elements in the tag
eg:</p>
<pre><code>for ptag in ptags:
    print ptag.contents
</code></pre>
<p>will give:</p>
<pre><code>[&lt;span class="tab"&gt;&lt;strong&gt;LANGUAGES&lt;/strong&gt;&lt;/span&gt;, u'Cantonese']
[&lt;span class="tab"&gt;&lt;/span&gt;, u'English']
[&lt;span class="tab"&gt;&lt;/span&gt;, u'Putonghua']
[&lt;span class="tab"&gt;&lt;strong&gt;GENDER&lt;/strong&gt;&lt;/span&gt;, u'Male']
</code></pre>
<p>Now you want the 2nd element in the list, so just get the 2nd element</p>
<pre><code>for ptag in ptags:
    print ptag.contents[1].string.strip()
</code></pre>
<p>output:</p>
<pre><code>Cantonese
English
Putonghua
Male
</code></pre>
<p>To print just the 4th one of the ptags</p>
<pre><code>print ptags[3].contents[1].string.strip()
</code></pre>
<p>output:</p>
<pre><code>Male
</code></pre>
</div>
<span class="comment-copy">wow, thanks a lot!! May I ask what what is the function/meaning for "lambda tag" and "text[6:]" here?</span>
<span class="comment-copy">@joycey <a href="https://docs.python.org/3/tutorial/controlflow.html#lambda-expressions" rel="nofollow noreferrer">docs.python.org/3/tutorial/controlflow.html#lambda-expressions</a></span>
