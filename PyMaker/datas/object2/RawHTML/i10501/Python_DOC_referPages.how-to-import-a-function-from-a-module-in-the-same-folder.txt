<div class="post-text" itemprop="text">
<p>I am trying to separate my script into several files with functions, so I moved some functions into separate files and want to import them into one main file. The structure is:</p>
<pre><code>core/
  main.py
  posts_run.py
</code></pre>
<p><code>posts_run.py</code> has two functions, <code>get_all_posts</code> and <code>retrieve_posts</code>, so I try import <code>get_all_posts</code> with:</p>
<pre><code>from posts_run import get_all_posts
</code></pre>
<p>Python 3.5 gives the error:</p>
<pre><code>ImportError: cannot import name 'get_all_posts'
</code></pre>
<p>Main.py contains following rows of code:</p>
<pre><code>import vk
from configs import client_id, login, password
session = vk.AuthSession(scope='wall,friends,photos,status,groups,offline,messages',   app_id=client_id, user_login=login,
                     user_password=password)
api = vk.API(session)
</code></pre>
<p>Then i need to import api to functions, so I have ability to get API calls to vk.</p>
<p>Full stack trace</p>
<pre><code>Traceback (most recent call last):
  File "E:/gited/vkscrap/core/main.py", line 26, in &lt;module&gt;
    from posts_run import get_all_posts
  File "E:\gited\vkscrap\core\posts_run.py", line 7, in &lt;module&gt;
    from main import api, absolute_url, fullname
  File "E:\gited\vkscrap\core\main.py", line 26, in &lt;module&gt;
    from posts_run import get_all_posts
ImportError: cannot import name 'get_all_posts'
</code></pre>
<p>api - is a <code>api = vk.API(session)</code> in main.py.
absolute_url and fullname are also stored in main.py.
I am using PyCharm 2016.1 on Windows 7, Python 3.5 x64 in virtualenv.
How can I import this function?</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to add <code>__init__.py</code> in your core folder. You getting this error because python does not recognise your folder as <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="noreferrer">python package</a></p>
<p>After that do</p>
<pre><code>from .posts_run import get_all_posts
#    ^ here do relative import
# or
from core.posts_run import get_all_posts
# because your package named 'core' and importing looks in root folder
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>MyFile.py:</p>
<pre><code>def myfunc():
    return 12
</code></pre>
<p>start python interpreter:</p>
<pre><code>&gt;&gt;&gt; from MyFile import myFunc
&gt;&gt;&gt; myFunc()
12
</code></pre>
<p>Alternatively: </p>
<pre><code>&gt;&gt;&gt; import MyFile
&gt;&gt;&gt; MyFile.myFunc()
12
</code></pre>
<p>Does this not work on your machine?</p>
</div>
<div class="post-text" itemprop="text">
<p>A cheat solution can be found from this question (question is <a href="https://stackoverflow.com/questions/10095037/why-use-sys-path-appendpath-instead-of-sys-path-insert1-path">Why use sys.path.append(path) instead of sys.path.insert(1, path)?</a> ). Essentially you do the following</p>
<pre><code>    import sys
    sys.path.insert(1, directory_path_your_code_is_in)
    import file_name_without_dot_py_at_end
</code></pre>
<p>This will get round that as you are running it in PyCharm 2016.1, it might be in a different current directory to what you are expecting...</p>
</div>
<div class="post-text" itemprop="text">
<p>Python doesn't find the module to import because it is executed from another directory.</p>
<p>Open a terminal and cd into the script's folder, then execute python from there.</p>
<p>Run this code in your script to print from where python is being executed from:</p>
<pre><code>import os
print(os.getcwd())
</code></pre>
<p>EDIT:
This is a demonstration of what I mean</p>
<p>Put the code above in a <code>test.py</code> file located at <code>C:\folder\test.py</code></p>
<p>open a terminal and type</p>
<pre><code>python3 C:\folder\test.py
</code></pre>
<p>This will output the base directory of python executable</p>
<p>now type</p>
<pre><code>cd C:\folder
python3 test.py
</code></pre>
<p>This will output <code>C:\folder\</code>. So if you have other modules in <code>folder</code> importing them should not be a problem</p>
<p>I usually write a bash/batch script to cd into the directory and start my programs. This allows to have zero-impact on host machines</p>
</div>
<span class="comment-copy">Check out the import docs here, should tell you everything you need to know: <a href="https://docs.python.org/3/reference/import.html" rel="nofollow noreferrer">docs.python.org/3/reference/import.html</a></span>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/714063/importing-modules-from-parent-folder">Importing modules from parent folder</a></span>
<span class="comment-copy">@DanielleM.I've read several questions on stack, and read docs for importing, but it has no effect.</span>
<span class="comment-copy">A module is not a module without an <b>init</b>.py. Perhaps that is missing?</span>
<span class="comment-copy">Can we see the full stacktrace? It seems tome you have a circular import, do you import anything from <code>main.py</code> in to <code>posts_run.py</code>?</span>
<span class="comment-copy">I did this, it also had no effect. Python raises same error</span>
<span class="comment-copy">Read update should solve your problem.</span>
<span class="comment-copy">@OleksiyOvdiyenko are you sure your python module is in your <b>local directory</b>?</span>
<span class="comment-copy">@Mr.goosberry, yes, it is in local dir</span>
<span class="comment-copy">@OleksiyOvdiyenko well  Sardorbek's answer shouldn't be giving you a import error. Is your other file in the same folder as your main file, or is it in another sub-folder?</span>
<span class="comment-copy">He might not have his custom python module in his local directory.</span>
<span class="comment-copy">I'm not sure of the exact rules or order, but python will look in the current directory as well as sys.path, $PYTHONPATH, etc.</span>
<span class="comment-copy">Yes, it works with this func, but when i try to call <code>import posts_run</code> it raises <code>ImportError: cannot import name 'get_all_posts'</code></span>
<span class="comment-copy">if you in the core folder, you should be able to reference posts_run directly. If you are in the root folder, try referring to ti as core.posts_run</span>
<span class="comment-copy">@DanielleM. No, I don't believe your correct. I believe that you must add the path to your python module at runtime for python to find where it is: <a href="http://stackoverflow.com/questions/22955684/how-to-import-py-file-from-another-directory" title="how to import py file from another directory">stackoverflow.com/questions/22955684/…</a></span>
<span class="comment-copy">This article goes into more detail - <a href="http://stackoverflow.com/questions/897792/pythons-sys-path-value/38403654#38403654" title="pythons sys path value">stackoverflow.com/questions/897792/pythons-sys-path-value/…</a></span>
<span class="comment-copy">I need to add to path every time i make new project with files in folder?</span>
