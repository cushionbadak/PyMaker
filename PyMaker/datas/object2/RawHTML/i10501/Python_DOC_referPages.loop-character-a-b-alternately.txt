<div class="post-text" itemprop="text">
<p>How can I print A/B character alternately in python loop?</p>
<p>What I expect in result:</p>
<pre><code>oneA
twoB
threeA
fourB
...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3.4/library/itertools.html#itertools.cycle" rel="nofollow"><code>itertools.cycle</code></a> to repeat through a sequence. This is typically used with <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a> to iterate through a longer list, while repeating the shorter one. For example</p>
<pre><code>import itertools
for i,j in zip(['one', 'two', 'three', 'four'], itertools.cycle('AB')):
    print(i+j)
</code></pre>
<p>Output</p>
<pre><code>oneA
twoB
threeA
fourB
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>try this:</p>
<pre><code>l1 = ['A','B']
l2 = ['one','two','three','four']
for i,val in enumerate(l2):
    print(val + l1[i%len(l1)])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also try using the modulus operator % on the index of an incremented for loop for the numbers to alternate the letters:</p>
<pre><code>list_num = ['one', 'two', 'three', 'four', 'five', 'six']
list_alpha = ['A', 'B']
list_combined = []
for i in range(0, len(list_num)):
    list_combined.append(list_num[i] + (list_alpha[1] if i % 2 else list_alpha[0]))
list_combined
&gt;&gt;&gt; ['oneA', 'twoB', 'threeA', 'fourB', 'fiveA', 'sixB']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Something like:</p>
<pre><code>alternate_words = ['A', 'B']
    count = 0

while count &lt; 5:
    print count+1, alternate_words[count % len(alternate_words)]
    count += 1
</code></pre>
<p>Output:</p>
<p>1 A</p>
<p>2 B</p>
<p>3 A</p>
<p>4 B</p>
<p>5 A</p>
</div>
<div class="post-text" itemprop="text">
<p>I think this will help -&gt;</p>
<pre><code>a1 = ['A','B']
a2 = ['one','two','three','four']
for i in range(len(a2)):
    print a2[i]+a1[i%2]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>At the suggestion of @Graipher instead of using combined <code>zip()</code> with <code>itertools.cycle()</code>, better and simpler solution will be use <code>itertools.product()</code> which is </p>
<blockquote>
<p>Cartesian product of input iterables.</p>
<p>Roughly equivalent to nested for-loops in a generator expression. For example, product(A, B) returns the same as ((x,y) for x in A for y in B).</p>
</blockquote>
<p><a href="https://docs.python.org/2/library/itertools.html#itertools.product" rel="nofollow">https://docs.python.org/2/library/itertools.html#itertools.product</a></p>
<pre><code>words = ['one', 'two', 'three'] 
for word, i in itertools.product(words, ('A', 'B')):
    print(word+i)
</code></pre>
</div>
<span class="comment-copy">up until which value? if its just a couple you can type in the 'one', 'two' etc. otherwise we have to come up with a better plan.</span>
<span class="comment-copy">I used your solution. <a href="http://codereview.stackexchange.com/questions/139931/generate-sql-query-by-loop" title="generate sql query by loop">codereview.stackexchange.com/questions/139931/â€¦</a> you can see whole code</span>
