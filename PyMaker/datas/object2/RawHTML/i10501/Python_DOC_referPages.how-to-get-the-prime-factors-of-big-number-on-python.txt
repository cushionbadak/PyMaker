<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/23287/algorithm-to-find-largest-prime-factor-of-a-number">Algorithm to find Largest prime factor of a number</a>
<span class="question-originals-answer-count">
                    27 answers
                </span>
</li>
</ul>
</div>
<p>I want to find largest prime factor of <code>600851475143</code>.</p>
<p>But <a href="https://docs.python.org/2/library/functions.html#range" rel="nofollow"><strong><code>range</code></strong></a> in my code doesn't work for <code>600851475143</code> , too big number .</p>
<p>What should I do? Is there any more efficient algorithm?</p>
<pre><code>list=[]
for i in range(1,600851475144):
    count = 0
    if 600851475143 % i == 0:
        for x in range(2,i):
            if i % x == 0:
                count+=1
                print(count)
        if count == 0:
            list.append(i)
        count=0
print(list)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>This will do :</p>
<pre><code>def PrimeFactor(n):
    m = n
    while n%2==0:
        n = n//2
    if n == 1:         # check if only 2 is largest Prime Factor 
        return 2
    i = 3
    sqrt = int(m**(0.5))  # loop till square root of number
    last = 0              # to store last prime Factor i.e. Largest Prime Factor
    while i &lt;= sqrt :
        while n%i == 0:   
            n = n//i       # reduce the number by dividing it by it's Prime Factor
            last = i
        i+=2
    if n&gt; last:            # the remaining number(n) is also Factor of number 
        return n
    else:
        return last
print(PrimeFactor(int(input()))) 
</code></pre>
</div>
<span class="comment-copy">See the <a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow noreferrer"><b><code>continue</code></b></a> keyword to simplify your loop, and use <a href="https://docs.python.org/2/library/functions.html#xrange" rel="nofollow noreferrer"><b><code>xrange</code></b></a> instead of <b><code>range</code></b>.</span>
<span class="comment-copy">Thank u so much! It works! But I can't understand why we use sqrt.. Is that a mathematical technique?</span>
<span class="comment-copy">@KYH: why should you check <i>after</i> reaching the square root? After that, for all <code>a*b</code> results, <code>a</code> is going to be larger than <code>sqrt(target)</code> and <code>b</code> is going to be smaller. But you already checked all possible values for <code>b</code> in the first 'half' â€“ as <code>a</code>!</span>
<span class="comment-copy">@KYH: to check number is prime or not you check till number's square root  for efficient time so this is also applicable here.. and also as explained by  above comment (by Rad Lexus)</span>
