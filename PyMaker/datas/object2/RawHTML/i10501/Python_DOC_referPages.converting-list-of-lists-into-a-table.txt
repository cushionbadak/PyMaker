<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/5909873/how-can-i-pretty-print-ascii-tables-with-python">How can I pretty-print ASCII tables with Python? [closed]</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
</ul>
</div>
<p>I have this list of lists:</p>
<pre><code>tableData = [['apples', 'oranges', 'cherries', 'banana'],
             ['Alice', 'Bob', 'Carol', 'David'],
             ['dogs', 'cats', 'moose', 'goose']]
</code></pre>
<p>that i have to transform into this table:</p>
<pre><code>apples      Alice    dogs
oranges       Bob    cats 
cherries    Carol    moose 
banana      David    goose
</code></pre>
<p>The trick for me, is have the "lines" to be converted into columns (i.e. apples, oranges, cherries, banana under same column)</p>
<p>I have tried different options (A):</p>
<pre><code>for row in tableData:
        output = [row[0].ljust(20)]
            for col in row[1:]:
             output.append(col.rjust(10))
            print(' '.join(output))
</code></pre>
<p>option (B):</p>
<h1>method 2</h1>
<pre><code>for i in tableData:
    print( i[0].ljust(10)+(str(i[1].ljust(15)))+(str(i[2].ljust(15)))+
    (str(i[3].ljust(15))))    
</code></pre>
<p>None seems to address the issue.<br/>
Thanks in advance for any suggestions.</p>
</div>
<div class="post-text" itemprop="text">
<p>To transpose the table, use the zip-and-splat trick.  </p>
<p>To left-or-right-justify cells, use the <a href="https://docs.python.org/3/library/string.html#formatspec">format spec language</a>:</p>
<pre><code>&gt;&gt;&gt; for row in zip(*tableData):
...     print '{:&lt;10}{:&gt;7}    {:&lt;10}'.format(*row)
...     
apples      Alice    dogs      
oranges       Bob    cats      
cherries    Carol    moose     
banana      David    goose   
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way to "flip" the nested list is to use <code>zip</code>:</p>
<pre><code>for fruit, name, animal in zip(*tableData):
    print(fruit.ljust(10), name.ljust(10), animal.ljust(10))
</code></pre>
<p>This prints:</p>
<pre><code>apples     Alice      dogs
oranges    Bob        cats
cherries   Carol      moose
banana     David      goose
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One could also play around with <a href="http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.html" rel="nofollow"><code>pandas.DataFrame</code></a>:</p>
<pre><code>In [22]: import pandas as pd
In [22]: pd.DataFrame(tableData).T # .T means transpose the dataframe
Out[22]:
          0      1      2
0    apples  Alice   dogs
1   oranges    Bob   cats
2  cherries  Carol  moose
3    banana  David  goose
</code></pre>
<hr/>
<p>Remove those <em>annoying</em> numbers by setting columns and indices to blank:</p>
<pre><code>In [27]: l1, l2 = len(tableData), len(tableData[0])

In [28]: pd.DataFrame(tableData, index=['']*l1, columns=['']*l2).T
Out[28]:

    apples  Alice   dogs
   oranges    Bob   cats
  cherries  Carol  moose
    banana  David  goose
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>There is already a builtin function for this: <code>zip</code>.</p>
<pre><code>zip(* [['apples', 'oranges', 'cherries', 'banana'],
       ['Alice', 'Bob', 'Carol', 'David'],
       ['dogs', 'cats', 'moose', 'goose']])
</code></pre>
</div>
<span class="comment-copy">Just to be clear, is this Py2 or Py3? <code>print</code> differs from one to the other, and the way your example code uses it doesn't exercise any of the differences to make that clear.</span>
<span class="comment-copy">Also: <a href="http://stackoverflow.com/q/9535954/216074">Python: Printing Lists as Tabular Data</a></span>
<span class="comment-copy">this is python 3.5</span>
<span class="comment-copy">No need for explicit field width on the final entry, since it's left justified and will spill if it exceeds the width anyway. Otherwise, yeah, best answer.</span>
<span class="comment-copy">thank you. what exactly do these #'s represent</span>
<span class="comment-copy">Did you follow the link? The numbers are the space that is reserved for the content so that left-or-right-justify knows how many spacess have to be added on the left or right side.</span>
<span class="comment-copy">amazing!!!. Thank you</span>
<span class="comment-copy">Not downvoting, but I think whipping out <code>pandas</code> for a simple problem might be overdoing it, just a bit. :-)</span>
<span class="comment-copy">@ShadowRanger I did considered that, but on a second thought I think  it's a tool worth considering by the questioner (if not now, in the long run) :)</span>
