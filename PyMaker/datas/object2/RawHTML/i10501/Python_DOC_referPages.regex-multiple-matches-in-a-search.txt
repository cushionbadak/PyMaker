<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6018340/capturing-group-with-findall">Capturing group with findall?</a>
<span class="question-originals-answer-count">
                    4 answers
                </span>
</li>
</ul>
</div>
<p>I am using search and then group to extract a specific parts of a string. The problem I have, however, is that it only finds the first time it occurs. Which is correct because that is how search works.</p>
<p>I need to to find every instance of where it occurs, but if I use findall it creates an array which is not what I want and I can't get group() to work with it so it would take a lot of extra steps. Is there another way to do this?</p>
<p>Here is the code I have:</p>
<pre><code> for num, line in enumerate(file, 1):
     if check in line:
         print 'href at line', num
         reg = re.compile('href="(.*?)"|href=\'(.*?)\'')
         link = re.search(reg, line)
         link = link.group(1)
         print 'url:', link
</code></pre>
<p>I only get the first url in the line. </p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/re.html#re.finditer" rel="nofollow"><code>re.finditer</code></a> and loop over the result; <code>finditer</code> returns each match object one at a time, not just the first hit.</p>
<pre><code># Move compile outside the loop; the whole point of compiling is to do the work once
# and reuse the compiled object over and over
reg = re.compile('href="(.*?)"|href=\'(.*?)\'')
for num, line in enumerate(file, 1):
    if check in line:
        print 'href at line', num
        for link in reg.finditer(line):
            print 'url:', link.group(1)
</code></pre>
</div>
<span class="comment-copy">"<i>findall it creates an array which is not what I want</i>" - why not? And what do you want instead?</span>
<span class="comment-copy">When you ask this kind of question, give an example string to reproduce the problem. Here it seems that you are trying to parse html with regex, it's not the way to go, python has several html parser to do that.</span>
<span class="comment-copy">It's a class assignment to help us learn about regular expressions, not actually making this just to parse html.</span>
<span class="comment-copy">In this case, don't forget to say to your teacher that he has no imagination, and that he encourages bad pratices.</span>
<span class="comment-copy">Thank you that worked. If I may ask, what is the difference between finditer and findall though?</span>
<span class="comment-copy">@TheBandit: Click <a href="https://docs.python.org/3/library/re.html#re.finditer" rel="nofollow noreferrer">the link to the docs</a> in my answer (or here, I guess). <code>findall</code> returns the matched parts of the <code>str</code> as <code>str</code>s (or captured strings if capturing groups used), and it returns a fully realized <code>list</code> of them. <code>finditer</code> is generator based (it matches one at a time, as you iterate, not eagerly producing a <code>list</code> of results) and gives full featured match objects, not plain <code>str</code> results.</span>
<span class="comment-copy">Thank you.  Another quick question if you don't mind, when my program checks this line in my text file: &lt;a href='<a href="http://www.muhlenbergconnect.com/s/1570/index.aspx?sid=1570&amp;gid=2&amp;pgid=771" rel="nofollow noreferrer">muhlenbergconnect.com/s/1570/â€¦</a>' it says there is no match. I used a regex testing program and it worked fine, but it's not working in python. Do you know why? I made the | in that regex I compiled specifically for this.</span>
