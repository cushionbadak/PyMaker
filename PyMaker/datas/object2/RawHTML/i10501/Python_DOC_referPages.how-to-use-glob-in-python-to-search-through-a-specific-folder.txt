<div class="post-text" itemprop="text">
<p>I am currently working on a small piece of code that I want to go through a user-inputted folder and rename all the files in there depending on certain criteria. </p>
<p>At the moment, the user enters the filename using this code:</p>
<pre><code>src = input("Please enter the folder path where the files are located")
</code></pre>
<p>Then, I use the glob module to rename the files if they meet certain criteria, e.g:</p>
<pre><code>for f in glob.glob("*reference*" + "*letter*"):
    new_filename = "203 Reference Letter" + " " + name  
    os.rename(f,new_filename)
</code></pre>
<p>Now all this works perfectly if the .py script is located in the folder with all the files in it, however my question is as follows: How can I basically combine the 2 bits of code above? Basically, how do I make it so that the user inputs a filepath, and the glob module then takes that path and renames the files in that folder? </p>
<p>Any help is greatly appreciated! Thank!</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/os.path.html#os.path.join" rel="nofollow">os.path.join</a> to join the user input to the desired pattern:</p>
<pre><code>import os.path

src = input('Please enter the folder path where the files are located: ')
if not os.path.isdir(src):
    print('Invalid given path.')
    exit(1)

path = os.path.join(src, '*reference*letter*')
for f in glob.glob(path):
    new_filename = '203 Reference Letter {}'.format(name)
    os.rename(f, new_filename)
</code></pre>
<p>I do not know what is the pattern used in <code>glob</code>, but basically you join the user input folder to any pattern.</p>
</div>
<span class="comment-copy">What is <code>name</code>? Like the code is now, it seems that all your files would be renamed under the same unique name, i.e. you'd lose all your work!</span>
<span class="comment-copy">Note that <code>"*reference*" + "*letter*"</code> is the same as <code>"*reference**letter*"</code>, which can be confusing. Especially if you choose to use the <code>recursive=True</code> option of <code>glob</code> at a later point, since it uses <code>**</code> to mean a recursive search.</span>
<span class="comment-copy">@HuguesFontenelle, Hi Hugh thanks for the reply, the "name" is just a variable that the user defines early on in the code, this snippet of code is repeated hundreds of times but with different variables</span>
<span class="comment-copy">I understand you did it to demonstrate how to handle an incorrect input, but I would discourage simply <code>exit()</code>-ing without at least an error message.</span>
<span class="comment-copy">Of course, I will update with a better exit.</span>
<span class="comment-copy">Hi @Tiger-222 thanks for the answer, I added that to my code but unfortunately all it does is delete the file in file in question (or maybe doesn't delete, but it definitely disappears from the folder). Any idea why this could be?</span>
<span class="comment-copy">What are file names you are looking to rename?</span>
<span class="comment-copy">@Tiger-222, sorry, realised I was being an idiot and the script was actually working, but I was sending the renamed files to the wrong place. Thanks for your help it works perfectly!</span>
