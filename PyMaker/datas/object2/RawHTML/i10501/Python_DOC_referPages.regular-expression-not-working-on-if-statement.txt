<div class="post-text" itemprop="text">
<p>I'am using following regex to pull several information from a file.</p>
<pre><code>def inventory():
    with open('inventory.log', 'r+') as f:
        match_hostname = re.compile(r'NAME: "(.+)",')
        match_pid = re.compile(r'PID: (.+) ,')
        match_sn = re.compile(r'SN: (.+)')
        list_text = [text.strip() for text in f]
        for line in list_text:
            match_regex_hostname = match_hostname.search(line)
            match_regex_pid = match_pid.search(line)
            match_regex_sn = match_sn.search(line)
            if match_regex_hostname:
                final_hostname = match_regex_hostname.group(1).strip(" ")
                print final_hostname
            elif match_regex_pid:
                final_pid = match_regex_pid.group(1).strip(" ")
                print final_pid
            elif match_regex_sn:
                final_sn = match_regex_sn.group(1).strip(" ")
                print final_sn
inventory()
</code></pre>
<p>below are the content of the "inventory.log" file.</p>
<pre><code>LAB-SW01#show inventory
NAME: "LAB-SW01", DESCR: "My Switch"
PID: AS-2001-XT   , VID: N/A, SN: ABA0923K0DN
</code></pre>
<p>When I call the function it doesn't show the result for <strong>final_sn</strong>. I tried to re-order the if statement and it was revealed that it only works for <strong>if</strong> and the first <strong>elif</strong> statement. Do I miss something on my code? </p>
</div>
<div class="post-text" itemprop="text">
<p>If you have both <code>PID</code> and <code>SN</code> on the same line, you only end up running the first <code>elif</code> statement.</p>
<p>Try this:</p>
<pre><code>def inventory():
with open('inventory.log', 'r+') as f:
    match_hostname = re.compile(r'NAME: "(.+)",')
    match_pid = re.compile(r'PID: (.+) ,')
    match_sn = re.compile(r'SN: (.+)')
    list_text = [text.strip() for text in f]
    for line in list_text:
        match_regex_hostname = match_hostname.search(line)
        match_regex_pid = match_pid.search(line)
        match_regex_sn = match_sn.search(line)
        if match_regex_hostname:
            final_hostname = match_regex_hostname.group(1).strip(" ")
            print final_hostname
        if match_regex_pid:
            final_pid = match_regex_pid.group(1).strip(" ")
            print final_pid
        if match_regex_sn:
            final_sn = match_regex_sn.group(1).strip(" ")
            print final_sn
inventory()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It looks like "inventory.log" is a csv file which means that you can use the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module to do this beautifully.</p>
<pre><code>def inventory(filename):
    with open(filename) as f:
        reader = csv.reader(f)
        for row in reader:
            print([item.strip()
                   for item in row if item.strip().lower().startswith(('name', 'pid', 'sn'))])
</code></pre>
<p>Demo:</p>
<pre><code>&gt;&gt;&gt; import csv
&gt;&gt;&gt; import io
&gt;&gt;&gt; text = """NAME: "LAB-SW01", DESCR: "My Switch"
... PID: AS-2001-XT   , VID: N/A, SN: ABA0923K0DN"""

&gt;&gt;&gt; with io.StringIO(text) as f:
...     reader = csv.reader(f)
...     for row in reader:
...         print([item.strip() for item in row if item.strip().lower().startswith(('name', 'pid', 'sn'))])
... 
['NAME: "LAB-SW01"']
['PID: AS-2001-XT', 'SN: ABA0923K0DN']
</code></pre>
</div>
<span class="comment-copy">In the example log file given, your <code>PID</code> and <code>SN</code> are on the same line. So only the first <code>elif</code> gets called. If you want to get both <code>PID</code> and <code>SN</code> from the same line, you are better off just doing three separate <code>if</code> statements.</span>
<span class="comment-copy">Hi, You were right. I tried to modifed the log file, put the SN to the new line and it works.</span>
