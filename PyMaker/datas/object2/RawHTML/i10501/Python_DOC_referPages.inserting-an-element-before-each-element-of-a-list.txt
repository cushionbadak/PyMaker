<div class="post-text" itemprop="text">
<p>I'm looking to insert a constant element before each of the existing element of a list, i.e. go from:</p>
<pre><code>['foo', 'bar', 'baz']
</code></pre>
<p>to:</p>
<pre><code>['a', 'foo', 'a', 'bar', 'a', 'baz']
</code></pre>
<p>I've tried using list comprehensions but the best thing I can achieve is an array of arrays using this statement:</p>
<pre><code>[['a', elt] for elt in stuff]
</code></pre>
<p>Which results in this:</p>
<pre><code>[['a', 'foo'], ['a', 'bar'], ['a', 'baz']]
</code></pre>
<p>So not exactly what I want. Can it be achieved using list comprehension? Just in case it matters, I'm using Python 3.5.</p>
</div>
<div class="post-text" itemprop="text">
<p>Add another loop:</p>
<pre><code>[v for elt in stuff for v in ('a', elt)]
</code></pre>
<p>or use <a href="https://docs.python.org/3/library/itertools.html#itertools.chain.from_iterable" rel="noreferrer"><code>itertools.chain.from_iterable()</code></a> together with <a href="https://docs.python.org/3/library/functions.html#zip" rel="noreferrer"><code>zip()</code></a> and <a href="https://docs.python.org/3/library/itertools.html#itertools.repeat" rel="noreferrer"><code>itertools.repeat()</code></a> if you need an iterable version rather than a full list:</p>
<pre><code>from itertools import chain, repeat
try:
    # Python 3 version (itertools.izip)
    from future_builtins import zip
except ImportError:
    # No import needed in Python 3

it = chain.from_iterable(zip(repeat('a'), stuff))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>A simple generator function works nicely here too:</p>
<pre><code>def add_between(iterable, const):
    # TODO: think of a better name ... :-)
    for item in iterable:
        yield const
        yield item

list(add_between(['foo', 'bar', 'baz'], 'a')
</code></pre>
<p>This lets you avoid a nested list-comprehension and is quite straight-forward to read and understand at the cost of being <em>slightly</em> more verbose.</p>
</div>
<div class="post-text" itemprop="text">
<p>You already have </p>
<pre><code>   l =  [['a', 'foo'], ['a', 'bar], ['a', 'baz']]
</code></pre>
<p>You can flatten it using </p>
<pre><code>[item for sublist in l for item in sublist]
</code></pre>
<p>this even works for arbitrary length nested list.</p>
</div>
<span class="comment-copy">The list comprehension version is perfect, thanks.</span>
