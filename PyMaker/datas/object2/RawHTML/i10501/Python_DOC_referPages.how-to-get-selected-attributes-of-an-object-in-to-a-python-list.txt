<div class="post-text" itemprop="text">
<p>How do I create a list with the selected attributes of an object in python ? Using list comprehensions.</p>
<p>E.g: </p>
<p>My object A has</p>
<pre><code>A.name
A.age
A.height
</code></pre>
<p>and many more attributes</p>
<p>How do I create a list <code>[name,age]</code></p>
<p>I can do it manually but it looks ugly:</p>
<pre><code>l=[]
l.append(A.name)
l.append(A.age)
</code></pre>
<p>but I am looking for a shortcut.</p>
</div>
<div class="post-text" itemprop="text">
<p>Why not just <code>[A.name, A.age]</code>? <code>list</code> literals are simple. <a href="https://docs.python.org/3/library/operator.html#operator.attrgetter">You could use <code>operator.attrgetter</code> if you need to do it a lot</a>, though it returns <code>tuple</code>s when fetching multiple attributes, not <code>list</code>s, so you'd have to convert if you can't live with that.</p>
</div>
<div class="post-text" itemprop="text">
<p>What you're looking for is <a href="https://docs.python.org/2/library/operator.html#operator.attrgetter" rel="nofollow"><code>operator.attrgetter</code></a></p>
<pre><code>attrs = ['name', 'age'] 
l = list(operator.attrgetter(*attrs)(A))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can collect them going through all <code>A</code> class attributes and checking if they aren't method or built-in.</p>
<pre><code>import inspect

def collect_props():
    for name in dir(A):
        if not inspect.ismethod(getattr(A, name)) and\
           not name.startswith('__'):
            yield name

print list(collect_props())
</code></pre>
</div>
<span class="comment-copy">Not sure what you mean by using list comprehensions here, you don't need (and can't really use) a comprehension for what you describe.</span>
