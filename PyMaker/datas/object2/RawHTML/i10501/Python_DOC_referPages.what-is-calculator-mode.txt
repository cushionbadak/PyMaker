<div class="post-text" itemprop="text">
<p>I don't know about the meaning of calculator mode in Python, and I've put the portion of documentation below.</p>
<blockquote>
<p>If you quit from the Python interpreter and enter it again, the definitions you have made (functions and variables) are lost. Therefore, if you want to write a somewhat longer program, you are better off using a text editor to prepare the input for the interpreter and running it with that file as input instead. This is known as creating a script. As your program gets longer, you may want to split it into several files for easier maintenance. You may also want to use a handy function that youâ€™ve written in several programs without copying its definition into each program.</p>
<p>To support this, Python has a way to put definitions in a file and use them in a script or in an interactive instance of the interpreter. Such a file is called a module; definitions from a module can be imported into other modules or into the main module (the collection of variables that you have access to in a script executed at the top level and in <strong>calculator mode</strong>).</p>
</blockquote>
<p>(Emphasis mine)</p>
<p>Here's the <a href="https://docs.python.org/3/tutorial/modules.html" rel="noreferrer">original document</a>.</p>
</div>
<div class="post-text" itemprop="text">
<p>Interactive mode and <strong>Calculator mode</strong> are the same thing. This is a mode that comes with Python. If you have installed Python then you have also installed something called the <strong>Python Shell</strong>. </p>
<p>There are two ways you can access the Python Shell:</p>
<ul>
<li><p>Typing <code>python</code> or <code>python[version-number]</code> in your command 
prompt/terminal window:</p>
<p>Assuming that you have python in your <code>PATH</code> variable, you can access
the Python Shell by simply typing <code>python</code> or <code>python[version-number]</code>
in your command prompt/terminal window.</p></li>
<li><p>Running the Python Shell in the Python IDLE(Integrated Development Environment) GUI:</p>
<p>To run the Python Shell in the Python IDLE GUI, you can type(again i'm assuming that the path to your python installation folder, is in your PATH variable), just type <code>idle</code> into your command prompt\terminal window and this should start the Python Shell in the Python IDLE GUI.</p></li>
</ul>
<p>Of course the exact text for the Python Shell heading will vary between OS's, but all of them look very similar. Here is an example of what the heading appears like on my Mac:</p>
<pre><code>Python 2.7.5 (default, Mar  9 2014, 22:15:05) 
[GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
&gt;&gt;&gt; 
</code></pre>
<p>As you can tell from the text above, a newline in the Python Shell is denoted by three caret symbols: <code>&gt;&gt;&gt;</code>. For each newline three new carets are printed. Using Python Shell is different from typing a script because the script is predefined and the shell is written line-by-line.</p>
<p>Here is an example to illustrate my point further:</p>
<pre><code>    &gt;&gt;&gt; xyz = 100
    &gt;&gt;&gt; for i in range(1, 10):
    ...     xyz += i
    ...     print(xyz)
    ... 
    101
    103
    106
    110
    115
    121
    128
    136
    145
</code></pre>
<p>As you can tell from the above program, indention is noted by three dots: <code>...</code>, and the only time the Python Shell shows only one line at a time unless it is 'echoing' back what you typed in.</p>
<h2>Why is it called interactive?</h2>
<p>One of the main reason it's called interactive is that to display variable values or run the module in general you don't have to explicitly invoke the Python interpreter. Take the example below:</p>
<pre><code>&gt;&gt;&gt; name = "some name"
&gt;&gt;&gt; print(name)
some name
&gt;&gt;&gt; name
'some name'
</code></pre>
<p>As displayed above, you can access the values of a variable without needing to call print on the variable. This can be very useful when debugging or trying to understand your code.</p>
<p>The Python Shell is not really a practical way to write long/complex programs. A better choice would be to use the <a href="https://docs.python.org/3/library/idle.html" rel="nofollow noreferrer">Python IDLE</a> built-in script editor or another text-editor or IDE. </p>
</div>
<span class="comment-copy">I think 'Calculator Mode' is another way of saying 'Interactive Mode'</span>
<span class="comment-copy">It's the mode you get when you type <code>python</code> with no script name.  You get a <code>&gt;&gt;&gt;</code> prompt to type at.  If you type <code>1+1</code>, it will respond <code>2</code>, justifying the name 'calculator mode' (sort of, just about, barely, if you're feeling kind).</span>
<span class="comment-copy">It's not at all a standard term, but they're probably referring back to chapter 3, section 1: Using Python as a Calculator.</span>
<span class="comment-copy">"calculator mode" is commonly called the REPL Read - Eval - Print - Loop</span>
