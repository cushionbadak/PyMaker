<div class="post-text" itemprop="text">
<p>I distributed my package written in Python 3 on PyPI. It can be installed by both <code>pip2</code> and <code>pip3</code>. How can I configure the package to only be available in Python 3; i.e. to install only with <code>pip3</code>?</p>
<p>I've already added these classifiers in <code>setup.py</code> file:</p>
<pre class="lang-py prettyprint-override"><code>classifiers=[
    ...
    # Supported Python versions.
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.4',
    'Programming Language :: Python :: 3.5',
    ...
]
</code></pre>
<p>But it still can be installed by <code>pip2</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I'm not sure if such an option exists. What you could do though is manually enforce it by checking that the version of python in which it is installed is larger than the version you want to dictate:</p>
<pre><code>from sys import version_info

class NotSupportedException(BaseException): pass

if version_info.major &lt; 3:
    raise NotSupportedException("Only Python 3.x Supported")  
</code></pre>
<p>While this won't stop it being reached from <code>pip2</code> it should stump any users trying to use an old version of Python  </p>
</div>
<div class="post-text" itemprop="text">
<p>As of <code>pip 9.0.0</code> and <code>setuptools 24.2.0</code> you can add a <code>python_requires</code> keyword as a <code>setup()</code> argument in <code>setup.py</code>. This should handle exactly what you need. </p>
<p>Here are some examples on how this might work (taken from <a href="https://packaging.python.org/tutorials/distributing-packages/#python-requires" rel="nofollow noreferrer">the docs</a>):
If your package is for Python 3+ only, write:</p>
<p><code>python_requires='&gt;=3',
</code></p>
<p>If your package is for Python 3.3 and up but you’re not willing to commit to Python 4 support yet, write:</p>
<p><code>python_requires='~=3.3',
</code></p>
<p>If your package is for Python 2.6, 2.7, and all versions of Python 3 starting with 3.3, write:</p>
<p><code>python_requires='&gt;=2.6, !=3.0.*, !=3.1.*, !=3.2.*, &lt;4',
</code></p>
</div>
<span class="comment-copy">Thanks. I also didn't find any way to do that and reached to the same conclusion. But I refrained from check the version because of this: <a href="https://docs.python.org/3/howto/pyporting.html#use-feature-detection-instead-of-version-detection" rel="nofollow noreferrer">docs.python.org/3/howto/…</a>.</span>
