<div class="post-text" itemprop="text">
<p>With <code>multiprocessing.Pool</code>, there are code samples in the tutorials  where you can set number of processes with cpu counts. Can you set the number of cpu's with the <code>multiprocessing.Process</code> method. </p>
<pre><code>from multiprocessing import Process, Value, Array

def f(n, a):
    n.value = 3.1415927
    for i in range(len(a)):
        a[i] = -a[i]

if __name__ == '__main__':
    num = Value('d', 0.0)
    arr = Array('i', range(10))

    p = Process(target=f, args=(num, arr))
    p.start()
    p.join()

    print(num.value)
    print(arr[:])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Actually <code>Process</code> represents only one process which uses only one CPU (if you dont use threads) - it is up to you to create as many <code>Process</code>es as you need. </p>
<p>This means that you have to create as many <code>Process</code>es as you have CPUs to use all of them (possibly -1 if you are doing things in the main process)</p>
<p>You can read the number of CPUs with <a href="https://docs.python.org/3/library/multiprocessing.html#multiprocessing.cpu_count" rel="nofollow">multiprocessing.cpu_count</a></p>
</div>
<span class="comment-copy">Actually your program can easily be modified to use <code>multiprocessing.Pool</code> - so you do not have to take care about CPU count explicitly</span>
<span class="comment-copy">Actually you cannot set the count of CPUs that are used with <code>multiprocessing</code> - all you can do is create as many processes as there are CPUs and hope the OS distributes them well among the CPUs.</span>
<span class="comment-copy">@merlin You can't set the number of <code>cpu's</code> using pool, you can only set the number of Processes.</span>
<span class="comment-copy">You would have to do that explicitly eg by keeping track of the number of created processes in the main process and checking when about to create a new one.</span>
<span class="comment-copy">@Merlin <code>Process</code> only starts one process (per call), so there is nothing to set.</span>
