<div class="post-text" itemprop="text">
<p>I am trying to build a python shell using cmd module. </p>
<pre><code>from cmd import Cmd
import subprocess
import commands
import os 
from subprocess import call

class Pirate(Cmd): 
    intro = 'Welcome to shell\n'
    prompt = 'platform&gt; '
    pass

if __name__ == '__main__':
    Pirate().cmdloop()
</code></pre>
<p>I am trying to build a shell using python - cmd module. I am trying to build these two functionalities. </p>
<p>Welcome to shell</p>
<p>platform&gt; ls </p>
<p>platform&gt; cd .. </p>
<p>like if I want to perform 
ls - list all files from that directory in my python shell 
or 
cd .. - go back to prev directory </p>
<p>Can anyone help in this? 
I tried using subprocess library.. but didn't get it working. </p>
<p>Appreciate your help ! 
Ref Doc: <a href="https://docs.python.org/3/library/cmd.html" rel="nofollow">https://docs.python.org/3/library/cmd.html</a> </p>
</div>
<div class="post-text" itemprop="text">
<p>I have a hard time trying to figure out why you would need such a thing, but here's my attempt:</p>
<pre><code>import subprocess
from cmd import Cmd

class Pirate(Cmd): 
    intro = 'Welcome to shell\n'
    prompt = 'platform&gt; '

    def default(self, line): # this method will catch all commands
        subprocess.call(line, shell=True)

if __name__ == '__main__':
    Pirate().cmdloop()
</code></pre>
<p>The main point is to use <code>default</code> method to catch all commands passed as input.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def do_shell(self, line):
    "Run a shell command"
    print "running shell command:", line
    sub_cmd = subprocess.Popen(line,shell=True,stdout=subprocess.PIPE)
    output = sub_cmd.communicate()[0]
    print output
    self.last_output = output
</code></pre>
<p>In command line:</p>
<pre><code>(Cmd)!ls
(Cmd)!pwd
</code></pre>
</div>
<span class="comment-copy">Is there any reason you're doing it? I mean create new shell?</span>
<span class="comment-copy">yeah.. for our project we will be automating few scripts through this.. I just wanted to try these before going to those</span>
<span class="comment-copy">Did you try to use ipython with hooks?</span>
<span class="comment-copy">Do you plan do reimplement all commands like <code>ls</code> and <code>cd</code> in Python or do you simply want to invoke the underlying system commands ?</span>
<span class="comment-copy">Guillaume - Just I want to get a feel of how the python shell works and have the curiosity to try out these things.</span>
<span class="comment-copy">can you tell me how it works with any system commands like ls / cd</span>
<span class="comment-copy">Any command you pass as input (e.g. <code>ls -lh /</code>) will be passed to the <code>default(line)</code> method. <code>subprocess.call(line)</code> will simply invoke this command line (by starting the appropriate process with given arguments). If <code>ls</code> is in your PATH that will work.</span>
<span class="comment-copy">I didnt get it working though :( I ran the program and tried ls inside python shell.  platform&gt; ls  platform&gt; cd ..  didnt work out either</span>
<span class="comment-copy">Try again with my edit above (<code>shell=True</code>)</span>
<span class="comment-copy"><code>cd</code> will not work with this approach.</span>
<span class="comment-copy">As it stands now, your answer is hard to read. Could you clean it up by formatting and indenting your code correctly? Also, it would help if you added some more text explaining how exactly your code works.</span>
