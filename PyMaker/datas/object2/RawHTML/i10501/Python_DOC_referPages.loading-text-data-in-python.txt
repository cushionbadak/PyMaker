<div class="post-text" itemprop="text">
<p>if I am given a text data which contains a list of numbers without specifying which number refers to which variable, unlike the excel format, how does one load these number as data using Python?</p>
<p>Sorry for the amateur question, but I am just introduced to python.</p>
</div>
<div class="post-text" itemprop="text">
<p>Hi Anthony,</p>
<p>Parsing your file depends on the format it is using. Assuming your file is a sequence of numbers separated by a new line, here's how I would proceed:</p>
<p>First of all, you have to open your file. To do so, you could use the standard <a href="https://docs.python.org/3/library/functions.html?highlight=open#open" rel="nofollow"><code>open</code></a> function.</p>
<p><code>open</code> takes as a first argument the path of the file you want to work with, and a second argument being the mode, which could be <code>'r'</code> to read, <code>'w'</code> to overwrite, and <code>'a'</code> to append text to the file as well as the binary variants (default is <code>'r'</code>). <em>Not talking about <code>open</code>'s other parameters.</em></p>
<pre class="lang-py prettyprint-override"><code>number_file = open('numbers.txt')  # implicitly read mode

numbers = []  # the list in which we're going to store all our numbers

# iterates over each line of the file
for line in number_file:
    n = int(line)      # parsing the string into an integer  
    numbers.append(n)  # adding the number to your list

number_file.close()
</code></pre>
<p>The cool thing is, <code>open</code> is also what we call in Python a <a href="https://docs.python.org/3.5/glossary.html#term-context-manager" rel="nofollow"><em>context manager</em></a>. Behind this jargon lies a really simple concept which is doing action before and after a given code.</p>
<p>The <code>with</code> keyword allows you to use a context manager:</p>
<pre class="lang-py prettyprint-override"><code>with open('numbers.txt') as number_file:
    for line in number_file:
        n = int(line) 
        numbers.append(n)
</code></pre>
<p>If you didn't notice, you don't have to close your file using context managers, because <code>open</code> is taking care of that.</p>
<p>That's why it is recommended rather than the previous method: You can't forget to close your file, thus it's less likely to have an OS error if you open the file twice (e.g. if you want to modify and save a serialized object).</p>
</div>
<div class="post-text" itemprop="text">
<p>In general, you have to filter the data yourself and figure out where each value is, and what variable it should apply to. But there are <em>LOTS</em> of standard formats that python can read directly, and do a lot for you.  For instance, if your text data was in the JSON format, it would be as simple as import json, variable = json.load(open('file data.json','r'))</p>
<p>But if it's not in any known format, that python can read, then you are forced to either convert it into a known format, or do it yourself.  There are packages that help you "parse" text to make it easier to handle someone has created a whole list of them: <a href="https://github.com/webmaven/python-parsing-tools" rel="nofollow">https://github.com/webmaven/python-parsing-tools</a></p>
<p>This is why everyone is asking you what format the data is in.  If it's in a known format, you are probably good to go, but if it's some special custom format, then you need a special parser that you will have to write yourself, or alternatively somehow convert that data into a different format.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>file = 'data.txt'
print(open(file).read(), '\n')
for line in open(file):
    print('\nline', line)
    for number in line.split():
        print(int(number))

11 22 33
1 2 3
0 


line 11 22 33

11
22
33

line 1 2 3

1
2
3

line 0
0
</code></pre>
</div>
<span class="comment-copy">if you could post that <code>text data</code>, it would help a lot</span>
<span class="comment-copy">can you give an example of the text - best mark it as code so it looks to us like it does for you. do you know how to read general text from a file?</span>
<span class="comment-copy">Seeing the data would be helpful. On the other hand, once you read the data from the file (with <code>open(filename)</code>) you can process the data as you wish, so as long as you know what you want, it's not too complicated.</span>
<span class="comment-copy">Hi, I guess I am unable to make the data public since it contains other individual's information. But if that chunk of data cotains many X's and only one Y, but also many observation, how does one load the data into python? Thank you again.</span>
<span class="comment-copy">Hi Anthony, please check out <a href="http://stackoverflow.com/help/mcve">stackoverflow.com/help/mcve</a> and revise your question. This will help better your chances at getting your question answered.</span>
<span class="comment-copy">Without knowing the actual format of the data, you can't write a parser for it. This definitely parses the format you created however.</span>
<span class="comment-copy">At least try to include a small explanation with your answer.</span>
