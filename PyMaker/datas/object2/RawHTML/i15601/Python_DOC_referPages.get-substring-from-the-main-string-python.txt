<div class="post-text" itemprop="text">
<p>I have a <code>string</code> and I want to extract a <code>substring</code> from that main <code>string</code></p>
<p>Some sample strings are:</p>
<pre><code>http://domain.com/xxxxx/xxxxxxxx?tags=%7C105651%7C102496&amp;Asidebar=1&amp;dnr=y
http://domain.com/xxxxx/xxxxxx?tags=%7C12784%7C102496&amp;index=28&amp;showFromBeginning=true&amp;
</code></pre>
<p>I want to get the <code>tags value</code>.</p>
<p>In this case:</p>
<pre><code>val = %7C105651%7C102496

val = %7C12784%7C102496
</code></pre>
<p>Is there any chance to get that?</p>
<p><strong>Edit</strong></p>
<pre><code>tags = re.search('tags=(.+?)&amp;Asidebar', url)
print tags
if tags:
    found = tags.group(1)
    print (found)
output: None
</code></pre>
<p>Note: I've just tried to get something from the first string only</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/2/library/urlparse.html#urlparse.urlparse" rel="nofollow"><code>urlparse.urlparse</code></a> and <a href="https://docs.python.org/2/library/cgi.html#cgi.parse_qs" rel="nofollow"><code>cgi.parse_qs</code></a> (Python 2.x):</p>
<pre><code>&gt;&gt;&gt; import urlparse
&gt;&gt;&gt; import cgi
&gt;&gt;&gt;
&gt;&gt;&gt; s = 'http://domain.com/xxxxx/xxxxxxxx?tags=%7C105651%7C102496&amp;Asidebar=1&amp;dnr=y'
&gt;&gt;&gt; cgi.parse_qs(urlparse.urlparse(s).query)
{'dnr': ['y'], 'Asidebar': ['1'], 'tags': ['|105651|102496']}
&gt;&gt;&gt; cgi.parse_qs(urlparse.urlparse(s).query)['tags'][0]
'|105651|102496'
</code></pre>
<p>In Python 3.x, use <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow"><code>urllib.parse.urlparse</code></a> and <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.parse_qs" rel="nofollow"><code>urllib.parse.parse_qs</code></a>:</p>
<pre><code>&gt;&gt;&gt; import urllib.parse
&gt;&gt;&gt;
&gt;&gt;&gt; s = 'http://domain.com/xxxxx/xxxxxxxx?tags=%7C105651%7C102496&amp;Asidebar=1&amp;dnr=y'
&gt;&gt;&gt; urllib.parse.parse_qs(urllib.parse.urlparse(s).query)['tags'][0]
'|105651|102496'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You're almost there. You don't need to write <code>Asidebar</code> in your regex. Because in your second input string, there isn't a substring called <code>Asidebar</code>.</p>
<pre><code>tags = re.search('tags=(.+?)&amp;', url)
if tags:
    found = tags.group(1)
    print (found)
</code></pre>
</div>
<span class="comment-copy">There is a great chance. Can you show us what you came up with so far?</span>
<span class="comment-copy">sure, wait, I'm editing it</span>
<span class="comment-copy">really thanks. but it seems it is pretty advance.. I'm new to PY and will stick to easyone  Thanks for your effort</span>
<span class="comment-copy">@MMK, Isn't this easy? The function will care edge case for you. Try <code>http://domain.com/xxxxx/xxxxxxxx?tags=%7C105651%7C102496</code> / <code>http://domain.com/xxxxx/xxxxxxxx?tags=</code></span>
<span class="comment-copy">sure..I'm checking it.</span>
<span class="comment-copy">well that's pretty cool, using this now instead..Thanks, :)</span>
<span class="comment-copy">yes, worked.. thanks</span>
<span class="comment-copy">You're welcome :-)</span>
