<div class="post-text" itemprop="text">
<p>I would like to select a specific element that satisfies a condition from a (very long) list. In my specific case each item in the list is a class and the condition I want is, for example, item.id == 1. </p>
<p>I started with</p>
<pre><code>[item for item in collection if item.id == 1]
</code></pre>
<p>but I don't want to traverse the whole list because I am sure there is only one element that satisfied the condition.</p>
<p>The other option is</p>
<pre><code>def check(collection):
    for item in collection:
        if item.id == 1:
            return item
</code></pre>
<p>Is there a more efficient way? Does Python 3 have a build in function for that?
Another option could be to preprocess the list in order to obtain a dictionary, e.g.</p>
<pre><code>{item.id : item for item in collection}
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use a <a href="https://docs.python.org/3/tutorial/classes.html#generator-expressions" rel="nofollow noreferrer">generator expression</a> and the <a href="https://docs.python.org/3/library/functions.html#next" rel="nofollow noreferrer"><code>next()</code> function</a>:</p>
<pre><code>item = next((item for item in collection if item.id == 1), None)
</code></pre>
<p>This'll find the <em>first</em> matching element in the collection, or return <code>None</code> if there is no match. It'll not iterate and evaluate any more than is strictly required to find that one element.</p>
<p>However, if you do need to do this a lot, creating the mapping just once then querying that each time is going to be more efficient:</p>
<pre><code>mapping = {item.id: item for item in collection}
item = mapping.get(1)
</code></pre>
<p>as that'll limit looping to just once, then use the O(1) lookup performance. It is a memory-vs-speed trade-off.</p>
</div>
<div class="post-text" itemprop="text">
<p>To get the first element that satisfies a condition, use <code>next()</code> as outlined in <a href="https://stackoverflow.com/questions/27040117/select-an-element-that-satisfies-a-condition/27040132#27040132">the ninja's answer</a>.</p>
<p>To get an element that satisfies a condition <em>and check that it's the only one such,</em> I use the following function:</p>
<pre><code>def single(seq):
    """Checks that the sequence has a single element and returns it."""
    """Analogous to .Net LINQ's Single()"""
    if hasattr(seq,"__len__"):
        assert len(seq)==1
        return seq[0]
    else:
        i=iter(seq)
        try: value=i.next()
        except StopIteration: raise AssertionError()
        try: i.next()
        except StopIteration: return value
        else: raise AssertionError()
</code></pre>
</div>
<span class="comment-copy">Could you add the class to another list when the item.id is changed to 1?</span>
<span class="comment-copy">No, I can't id. I have a list of such elements and I need to select a specific one. If I add each element to a new list I would have <code>len(collecion)</code> new lists with 1 element each</span>
