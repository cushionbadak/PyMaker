<div class="post-text" itemprop="text">
<p>I have the following decorator:</p>
<pre><code>@acceptable_methods('POST')
def deposit_funds(request, user=None):
    # do something
</code></pre>
<p>And here is the decorator code:</p>
<pre><code>def acceptable_methods(*args):
    """
    Enforce that the necessary method has been called.

    """
    valid_methods = args
    print '11111'

    def _method_wrapper(view_function):
        print '22222'

        def _arguments_wrapper(*args, **kwargs):
            print '33333'
            if args[0].META.get('REQUEST_METHOD') not in valid_methods:
                return JsonRestResponse(None, success=False, error="This is not an acceptable method", status_code=FORBIDDEN_METHOD)
            return view_function(*args, **kwargs)

        return _arguments_wrapper

    return _method_wrapper
</code></pre>
<p>For some very strang reason, it seems to run 16 times on both of the outer wrappers. Here is the print statements:</p>
<pre><code>[21/Nov/2014 16:26:57] "POST /api/v1.0/bonuses/grant HTTP/1.1" 500 124805
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
11111
22222
[21/Nov/2014 16:27:13] "POST /api/v1.0/bonuses/grant HTTP/1.1" 500 66364
</code></pre>
<p>Every print statement has the same <code>os.pid()</code>. 
Why is this occurring? Any why isn't the inner-most method being called at all?</p>
</div>
<div class="post-text" itemprop="text">
<p>Your WSGI server created 16 child processes and Python is being run separately for each.</p>
</div>
<span class="comment-copy">Is this a WSGI application? Have you checked how your WSGI <i>server</i> loads processes? Have you set it up to load multiple processes to handle load?</span>
<span class="comment-copy">You should be printing to stderr, not stdout, so that logging can work correctly (and so that you won't blow up things like mod_wsgi after).</span>
<span class="comment-copy">Why? I have other wrappers that don't do that. I think that this is a matter of a self-referencing loop.</span>
<span class="comment-copy">@David542: That wouldn't be the case here, because this is code run at import time. At that point the code is imported at most once (twice if this is a console script importing itself).</span>
<span class="comment-copy">@David542: unless you omitted some context and this code is run inside another function, and you are calling that function over and over again.</span>
<span class="comment-copy">@David542: you could add a print with <a href="https://docs.python.org/3/library/os.html#os.getpid" rel="nofollow noreferrer"><code>os.getpid()</code></a> to verify.</span>
<span class="comment-copy">Yes, it all uses the same process ID, verified with <code>os.getpid()</code>.</span>
