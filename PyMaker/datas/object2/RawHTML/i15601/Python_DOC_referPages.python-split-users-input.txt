<div class="post-text" itemprop="text">
<pre><code># Enter Function
def enter(self,newval):
    self.value = newval

# Add Function
def add(self,newval):
    self.value += newval

# Subtract Function
def subtract(self,newval):
    self.value -= newval

class Accumulator:
def __init__(self,newval = 0):
    self.value = newval

    acc = Accumulator()

    if operator == 'e' or operator == 'E':
        acc.enter(newval)
    elif operator == 'a' or operator == 'A':
        acc.add(newval)
    elif operator == 's' or operator == 'S':
        acc.subtract(newval)


calculator = input("Enter a number, followed by a space, then a valid operator: ").split
</code></pre>
<p>I am trying to take the users input to create a calculator like idea. I understand how I can take 1 value of input but I don't know how to take 2 values of input "or split" and set them equal to my problem above If the user enters "5 a" it will set 5 as the (newval) value and call to the add function. If the user enters "5 s" it will set 5 as the (newval) value and call to the subtract function and eventually print out the accumulating total.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I don't know how to take 2 values of input "or split" and set them …</p>
</blockquote>
<p>The way to split a string is with its <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow"><code>split</code></a> method.</p>
<p>So:</p>
<pre><code>number, operator = calculator.split()
</code></pre>
<p>By default, <code>split</code> splits on any whitespace; to split on just a single space, use <code>split(' ')</code>.</p>
<p>Also, <code>split</code> will return as many values as there are words. This means if the user types <code>123 + *</code> or <code>123+</code>, you'll get an exception about trying to unpack 3 or 1 values into 2 targets. You can handle that with a <code>try</code>/<code>except</code>, or you can store the result in a list and check its <code>len</code>, or you can use <a href="https://docs.python.org/3/library/stdtypes.html#str.partition" rel="nofollow"><code>partition</code></a> to guarantee that you get exactly two words.</p>
<pre><code>number, _, operator = calculator.partition(' ')
</code></pre>
</div>
<span class="comment-copy">is it python2 or python3? because input() in two versions is different</span>
<span class="comment-copy">You might not want to put that logic directly in <code>__init__()</code>, instead put it in a method <code>operation(val, oper)</code>, which you can invoke with the results of <code>input(...).split()</code>. Otherwise you can only ever perform an operation when you create the calculator. You can always call <code>operation()</code> from <code>__init__(..., string)</code></span>
<span class="comment-copy">To "split" a string, all you have to do is call its <code>split</code> method: <code>number, operator = calculator.split()</code>. Is that what you were asking?</span>
<span class="comment-copy">Of course you still need to convert number to an <code>int</code> or <code>float</code>, and you may want some error handling. Also, you've got a bunch of methods that you defined outside the class, which isn't going to work, and you almost certainly don't want to create a new <code>Accumulator</code> instance inside the constructor for the <code>Accumulator</code> class, so… just fixing the one problem isn't going to make everything suddenly work.</span>
<span class="comment-copy">I got it based on past input... I was looking for input(...).split() Thanks for the fast responses..</span>
