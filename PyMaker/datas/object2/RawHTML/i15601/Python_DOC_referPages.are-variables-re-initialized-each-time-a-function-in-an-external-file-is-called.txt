<div class="post-text" itemprop="text">
<p>I currently import a function from a larger file I have written - e.g.:</p>
<pre><code>     from my_other_file import my_function
</code></pre>
<p>the function that I am importing uses a dictionary that is initialized elsewhere within <code>my_other_file</code> (i.e. at the top of my code I import a CVS file into a dictionary, which is then used by the function).</p>
<p>If i repeatedly call this function (for example when iterating over a loop), will the dictionary be repeatedly re-initialized each time? (or once it has been initialized, it can be called by that function at a later time). I ask because the CSV file the dictionary is crated from is rather large (50MB), and thus I suspect my code will be highly inefficient if this must be read the file in every time the function is called. If it would normally be re-initialized, what would be a way of preventing this from occurring? </p>
</div>
<div class="post-text" itemprop="text">
<p>No, importing a module multiple times only executes the module code just once.</p>
<p>Importing really is just creating a reference to the imported names for your importing code to use. <em>Loading</em> the module is done just once, with the result stored in <code>sys.modules</code>, in order to support the name importing.</p>
<p>See the <a href="https://docs.python.org/3/reference/simple_stmts.html#the-import-statement" rel="nofollow"><code>import</code> statement documentation</a>:</p>
<blockquote>
<p>The basic <code>import</code> statement (no <code>from</code> clause) is executed in two steps:</p>
<ol>
<li>find a module, loading and initializing it <strong>if necessary</strong></li>
<li>define a name or names in the local namespace for the scope where the <code>import</code> statement occurs.</li>
</ol>
</blockquote>
<p>Emphasis mine; once loaded you don't need to load again.</p>
</div>
<span class="comment-copy">Would this be the same case if for example <code>def foo(): import bar</code>? Would the initialization be done agian each time you called <code>foo()</code>?</span>
<span class="comment-copy">@IanAuld: no, because <code>import bar</code> only adds the name <code>bar</code> to the local namespace. Python will still only load the module once, so that there is something to create the references <i>to</i>.</span>
<span class="comment-copy">Good to know :-). Thanks @martijnpieters</span>
<span class="comment-copy">thanks!! just to follow up, when would the the variables referenced in the imported function be initialized? ...when it is imported, or when it is first called? [interested because there may be changes to the external data that the variables are created from between importing the function, and first calling it]</span>
<span class="comment-copy">@kyrenia: when the module is loaded (i.e. the initialisation stage).</span>
