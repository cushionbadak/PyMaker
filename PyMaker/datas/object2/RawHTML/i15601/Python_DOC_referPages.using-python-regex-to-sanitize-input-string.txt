<div class="post-text" itemprop="text">
<p>I have the string:
text = <code>'href = "www.google.com" onmouseover = blahblah &gt;'</code>
I want <code>'href = "www.google.com"&gt;'</code></p>
<p>Currently, my function looks like this:</p>
<pre><code>text = re.sub(r'href = \".*\".*&gt;', 'href = \".*\"&gt;', text)
</code></pre>
<p>which ends up removing the website link and replacing it with the string '.*' .  I think I'm supposed to use ?Pname somehow?, but do not know ho to write it properly so that I get the correct output.</p>
</div>
<div class="post-text" itemprop="text">
<p>You don't want to substitute in <code>.*</code>, you want to substitute in <em>whatever the first <code>.*</code> matched</em>.</p>
<p>To do that, you need a <em>backreference</em>, like <code>\1</code>.</p>
<p>And this means you need something for the backreference to refer back to—a capture group, like <code>(.*)</code> instead of <code>.*</code>.</p>
<p>More generally, the replacement string is not a regular expression, it's a different kind of thing—basically, it's a template that's all literal characters except for backreferences.* So, you don't want to try to escape the quotes, unless you want literal backslashes in the results.</p>
<p>So:</p>
<pre><code>&gt;&gt;&gt; re.sub(r'href = \"(.*)\".*&gt;', r'href = "\1"&gt;', text)
'href = "www.google.com"&gt;'
</code></pre>
<p>This is explained in more detail in <a href="https://docs.python.org/3/howto/regex.html#search-and-replace" rel="nofollow">Search and Replace</a> in the Regular Expression HOWTO.</p>
<hr/>
<p><sub>* Or it can be a function which takes each match object and returns a string.</sub></p>
</div>
<div class="post-text" itemprop="text">
<p>An alternative way to accomplish your goal is to take a substring. No regular expression is needed. The idea is to find the second double-quote character using the string method <code>index()</code>.</p>
<p>For a string called <code>input</code>, this expression gives you the position of the second double-quote character:</p>
<pre><code>input.index('"', input.index('"')+1)
</code></pre>
<p>If that value is <code>k</code>, write <code>input[:k+1]</code> to extract everything up to and including the second double-quote character.</p>
<p>Try out the following in your Python interpreter.</p>
<pre><code>input = 'href = "www.google.com" onmouseover=hax0rFunction()&gt;'
k = input.index('"', input.index('"')+1)
input[0:k+1]
</code></pre>
</div>
<span class="comment-copy">Thanks!  I didn't know how to use group properly.</span>
<span class="comment-copy">@user3709454: The HOWTO is pretty short and well written, so it's worth reading the whole thing. Of course you won't remember all the details, but you will hopefully remember enough to know what to go looking for next time you have a problem.</span>
<span class="comment-copy">@user3709454 It is best to mark this answer as "the answer" by clicking the check box, if this is indeed the answer. This helps others with similar problems see which answer worked for you without needing to read comments.</span>
