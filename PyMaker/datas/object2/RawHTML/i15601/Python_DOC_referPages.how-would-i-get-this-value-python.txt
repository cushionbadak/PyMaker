<div class="post-text" itemprop="text">
<p>I have</p>
<pre><code>class Point:

    def __init__(self, initX, initY):

        self.x = initX
        self.y = initY

    def getX(self):
        return self.x

    def getY(self):
        return self.y

    def __str__(self):
        return "x=" + str(self.x) + ", y=" + str(self.y)


class Rectangle:

    def __init__(self, initP, initW, initH):

        self.__location = initP
        self.__width = initW
        self.__height = initH



    def getWidth(self):
        return self.__width

    def getHeight(self):
        return self.__height

    def getLocation(self):
        return self.__location

    #---------------------------------------------------------------
    #string

    def __str__(self):
        return "x=" + str(self.__location.x) + ", y=" + str(self.__location.y) +", Width=" + str(self.getWidth()) + ", Height=" +str(self.getHeight())

    def area(self):
        return self.getWidth() * self.getHeight()

    def calculatePerimeter(self):
        return self.getWidth()*2 +self.getHeight()*2

    def transpose(self):
        temp = self.__width
        self.__width = self.__height
        self.__height = temp

    def encloses(self, otherP):
        return ((self.getWidth() + self.getLocation().getX()) &gt; otherP.getX()\
               and (self.getLocation().getX()) &lt;otherP.getX() \
               and (self.getHeight() + self.getLocation().getY()) &gt;otherP.getY()\
               and self.getLocation().getY() &lt; otherP.getY())

    def computeDiagonal(self):

        d = (self.getWidth()**2 + self.getHeight()**2) ** 0.5
        return d

    def detectCollision(firstRectangle, secondRectangle):
        print(firstRectangle.getWidth())
        print(secondRectangle)


 first = Rectangle(Point(1,0), 4, 3)
 second = Rectangle(Point(4,0), 4, 3)
 Rectangle.detectCollision(first, second)
</code></pre>
<p>I am trying to detect a collision. I'm a bit stuck. (detectCollision)
I am having trouble getting the value from the point class to the rectangle class.
Does anybody have any idea?</p>
<p>The function detectCollision is wrong. I was testing and I could get the width, and the height with getHeight() but I could not get the values inside Point.</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>I am having trouble getting the value from the point class to the rectangle class.</p>
</blockquote>
<p>I think you need to read through a good tutorial on classes. Maybe <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow">the chapter in the official tutorial</a>, or maybe a third-party tutorial. StackOverflow is not a good place to learn basic concepts.</p>
<p>You don't actually want to get a value from <em>the point class</em>, you want to get the value from <em>a particular point instance</em>. After all, there are lots of points in the world, and each one has different <code>x</code> and <code>y</code> values, and you're trying to check if some particular point has collided with the rectangle.</p>
<p>How do you know <em>which</em> instance? You take one as a parameter. And then you can access that object's members, methods, etc., just like you do with a string or any other object.</p>
<pre><code>class Rectangle(object):
    # existing stuff
    def collision_check(self, point):
        return (self.left &lt;= point.getX() &lt;= self.right and
                self.top &lt;= point.getY() &lt;= self.bottom)
</code></pre>
<p>That's it.</p>
<p>Except that you probably don't want <code>getX</code> and <code>getY</code> methods in the first place; better to just do <code>point.x</code> and <code>point.y</code>.</p>
<p>Also, I've obviously had to make some assumptions about how you defined <code>Rectangle</code> (left/top/bottom/right? left/right/width/top? topleftpoint/bottomrightpoint?) and about what you mean by "collision" (hitting the edge of the rectangle, or the interior of the rectangle?), etc., since you didn't explain any of that. But hopefully you can adapt this to whatever your actual design is.</p>
<hr/>
<p>So, how do you use this? You just pass a point as an argument to the method, same as you do with, say, <code>len</code>:</p>
<pre><code>&gt;&gt;&gt; rect = Rectangle(10, 10, 20, 20)
&gt;&gt;&gt; point1 = Point(5, 5)
&gt;&gt;&gt; rect.collision_check(point1)
False
&gt;&gt;&gt; point2 = Point(15, 15)
&gt;&gt;&gt; rect.collision_check(point2)
True
</code></pre>
<hr/>
<p>Now that you've shown us more of your code, it looks like you're trying to collision-check two rectangles—and, more importantly, your problem is that your rectangle uses a <code>Point</code> as its top-left origin, and you don't know how to access the coordinations of <em>that</em>.</p>
<p>From your description, "I was testing and I could get the width, and the height with getHeight() but I could not get the values inside <code>Point</code>", you seem to still be missing the key issue here. You don't want to get the values inside <code>Point</code>. <code>Point</code> is a class—a factory for creating actual point objects. You want to get the values inside one of those actual point objects, the one you've stored in a rectangle object's <code>__location</code> and made available through a <code>getLocation</code> method. (As I already explained, you should get rid of those getter methods and just have a <code>location</code> attribute, but let's forget that for now.)</p>
<p>So, the way you get the particular point object you're interested in is to call <code>getLocation()</code> on the rectangle, and then the way you get the x and y values for that particular point object is to call its <code>getX</code> and <code>getY</code> methods. So, here's an example of using all those methods:</p>
<pre><code>firstLocation = firstRectangle.getLocation()
firstLeft = firstLocation.getX()
</code></pre>
<p>Or you can combine those calls into one expression:</p>
<pre><code>firstLeft = firstRectangle.getLocation().getX()
</code></pre>
<p>So, you can do something like this:</p>
<pre><code>def detectCollision(firstRectangle, secondRectangle):
    firstLeft = firstRectangle.getLocation().getX()
    firstRight = firstLeft + firstRectangle.getWidth()
    # similar code for top and bottom, and for second rectangle
    return ((firstLeft &lt;= secondLeft &lt;= firstRight or
             firstLeft &lt;= secondRight &lt;= firstRight) and
            (firstTop &lt;= secondTop &lt;= firstBottom or
             firstTop &lt;= secondBottom &lt;= firstBottom))
</code></pre>
</div>
<span class="comment-copy">As a side note, you almost never want getters/setters functions like this in Python. Just access <code>mypoint.x</code>, no need for <code>mypoint.getX()</code>. Also, if this is Python 2.x, you want <code>class Point(object):</code>, not <code>class Point:</code>.</span>
<span class="comment-copy">Please add more about your rectangle class too and what you are trying to get in there and how ?</span>
<span class="comment-copy">It is there. You see how it has print(firstRectangle.getWidth()) and print(secondRectangle)</span>
<span class="comment-copy">Hey, so I did this to see if I understood you.     def detectCollision(self, point):         return Point.getX() I got rectangle object has no attribute x?</span>
<span class="comment-copy">@user3159537: First, where did you get <code>return Point.getX()</code> from? You want to call <code>getX()</code> on <code>point</code>, the parameter you were passed in, not <code>Point</code>, the class. Second I don't know how you got "rectangle object has no attribute x" when I haven't written <code>self.x</code> anywhere; obviously you're adapting my code to fit your definition of <code>Rectangle</code>, but if you do that, you have to actually fit your definition.</span>
