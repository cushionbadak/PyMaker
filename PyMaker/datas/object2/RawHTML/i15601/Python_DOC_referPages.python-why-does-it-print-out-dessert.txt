<div class="post-text" itemprop="text">
<p>I'm new to programming, and obviously I can easily run a program to get the answer, but I want to get a clearer and better understanding of why this code runs "dessert". I understand len(s) is the length of the number, but what about the three numbers "-1, 0 -1"? Can I get a detailed explanation of why this prints dessert?</p>
<pre><code>s = "stressed"

for i in range(len(s)-1, 0, -1):
    print(s[i], end = " ")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>s t r e s s e d</p>
<p>0 1 2 3 4 5 6 7 </p>
<p>range function :  range(start, stop, step)</p>
<p>len(s) = 8</p>
<p>len(s-1)= 7</p>
<p>the loop starts at 7 stops at 0 and counts(steps) bacwards by 1 (-1)
so , the loop prints</p>
<p>7 6 5 4 3 2 1</p>
<p>d e s s e r t</p>
</div>
<div class="post-text" itemprop="text">
<p>The code creates a range that counts <em>down</em>. Starting at <code>len(s) - 1</code> (so 7, <code>stressed</code> is 8 characters long), it'll count <em>down</em> to <code>1</code> (the end point is not included). In other words, you are giving <code>range()</code> three arguments, <code>len(s) - 1</code> is one argument, <code>0</code> is the second and <code>-1</code> is the third, and they represent the start, stop and step arguments. See the <a href="https://docs.python.org/3/library/stdtypes.html#typesseq-range" rel="nofollow"><code>range()</code> type documentation</a>.</p>
<p>The code then uses those values to index <code>s</code>; <code>s[7]</code> is the last character in the string, <code>d</code>, then <code>s[6]</code> is the one-but last character <code>e</code>, etc.</p>
<p>Breaking this down to the components in an interactive session:</p>
<pre><code>&gt;&gt;&gt; s = "stressed"
&gt;&gt;&gt; len(s)
8
&gt;&gt;&gt; len(s) - 1
7
&gt;&gt;&gt; list(range(7, 0, -1))
[7, 6, 5, 4, 3, 2, 1]
&gt;&gt;&gt; s[7]
'd'
&gt;&gt;&gt; s[6]
'e'
&gt;&gt;&gt; s[1]
't'
</code></pre>
<p>If you wanted the code to print out <code>desserts</code> (with the <code>s</code> at the end) then you need to adjust the <code>range()</code> to loop up to <code>-1</code>:</p>
<pre><code>for i in range(len(s) - 1, -1, -1):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It's all about <code>range()</code>.</p>
<p>It's all discussed <a href="https://docs.python.org/2/library/functions.html#range" rel="nofollow">here</a>.</p>
<p>It can be used in three ways;</p>
<pre><code>range(stop)
range(start, stop)
range(start, stop, step)
</code></pre>
<p>Where in the first case, it will give <code>[1, 2, 3, ... stop-1]</code>, in the second case <code>[start, start+1, start+2, ... stop-1]</code>, and in the third case <code>[start, start+step, start+2*step, ...stop-step]</code>.</p>
<p>The thing to note here is that the <code>range</code> you get is <code>[start, stop)</code>. Where standard <a href="http://en.wikipedia.org/wiki/Interval_%28mathematics%29#Notations_for_intervals" rel="nofollow">interval notation</a> has been used.</p>
<p>The other thing to note here is that step can be negative, which is what you have in your example.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>range(len(s)-1, 0, -1)
reange(start_index, to_end_index, is_increment or is_decrement)
</code></pre>
<p>You call a loop with its start index, then tell it to traverse to end index and lastly increase the index or decrease the index</p>
<pre><code>range(len(s)-1 *calculate the lengthof array (string), 0 *end point of traversing, -1 decrement the index)
</code></pre>
<p>If you use</p>
<pre><code>range(0, len(s),1)
</code></pre>
<p>The loop will start from 0 index and traverse till last index with 1 index increment</p>
</div>
<span class="comment-copy">There's a documentation for <a href="https://docs.python.org/3/library/functions.html#func-range" rel="nofollow noreferrer">range</a>.</span>
