<div class="post-text" itemprop="text">
<p>I want to create a class which has a function to count the words in a string which is passed through the function as a parameter (is my terminology correct?). This is what I have an it gives me an error "AttributeError: 'str' object has no attribute 'sentence'.</p>
<pre><code>class myHacks:
    def __init__(self, sentence):
        self.sentence = sentence

    def countWords(self):
        my_list = []
        my_list = self.sentence.split(" ")
        counter = 0
        for m in my_list:
            counter += 1
        return counter
</code></pre>
<p>myHacks.countWords("please count me")</p>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like what you need is just a function, not a class. Classes have to be instantiated, and are used when you need to do more than just one operation on a related set of data. For your single use case, a function will probably suffice:</p>
<pre><code>def countWords(sentence):
    my_list = []
    counter = 0
    for s in sentence:
        counter += 1
    return(counter)
</code></pre>
<p>Also, you never use <code>my_list</code>, and you're counting letters in that sentence, not words. This is probably what you need instead:</p>
<pre><code>def countWords(sentence):
    return len(sentence.split())
</code></pre>
<p>In order to use your method, with a class, like you've written, you'd have to call it this way:</p>
<pre><code>hacks = myHacks('this is my sentence')
hacks.countWords()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are mixing the class instantiation with the method call, you should instantiate a class with the correct string</p>
<pre><code>h = myHacks("please count me")
</code></pre>
<p>and then call the countWords method on the new object</p>
<pre><code>h.countWords()
</code></pre>
</div>
<span class="comment-copy">You might also find this useful: <a href="https://docs.python.org/3/library/collections.html#collections.Counter" rel="nofollow noreferrer">docs.python.org/3/library/collections.html#collections.Counter</a></span>
<span class="comment-copy">Just use <code>collections.Counter</code> like @JoshSmeaton said, unless you really want to reinvent the wheel.</span>
<span class="comment-copy"><code>str.split</code> returns a list.  The <i>built-in</i> function <code>len</code> will return the number of items in the list.  No need to (explicitly) iterate and accumulate with a counter.</span>
