<div class="post-text" itemprop="text">
<p>Is there a statistics module (e.g. for population standard deviation) in Python 2.7?</p>
<p>I found this link for Python3, and would find it very useful to use....</p>
<p><a href="https://docs.python.org/3/library/statistics.html" rel="nofollow">https://docs.python.org/3/library/statistics.html</a></p>
<p>I did find the scipy and numpy stats modules that could make standard deviation, but this is always on the axis of an array. What I want is to be able calculate the standard deviation for example, by passing the numbers and not having to rely on myself for typing the correct mathematical equation.</p>
<p>So for example, in python 3 it looks like I could do this:</p>
<pre><code> pstdev([1.5, 2.5, 2.5, 2.75, 3.25, 4.75]) 
 0.986893273527251
</code></pre>
<p>Okay, so I realized that you can do more in numpy than I thought. For example, with <code>a</code> an array, I can do:</p>
<pre><code>numpy.std(a[0,1:9])
</code></pre>
<p>However, what I would like to do is take different parts from a numpy array as input (not just one slice).</p>
<p>So for example, on row 0 I want to take the numbers 1 to 8 and on row 2 I want the numbers 1:3. So I wonder how to take these different slices from different locations and put then into the function. Can I somehow combine two or more slices into one expression and use that as the array-like input that is required for the numpy.std function?</p>
</div>
<div class="post-text" itemprop="text">
<p>Not built in, but <strong><a href="http://docs.scipy.org/doc/numpy/index.html" rel="nofollow">NumPy</a></strong> is very popular.</p>
<p>Here's what's available for stddev:</p>
<ul>
<li><a href="http://docs.scipy.org/doc/numpy/reference/generated/numpy.std.html" rel="nofollow">http://docs.scipy.org/doc/numpy/reference/generated/numpy.std.html</a></li>
</ul>
<p>Example use:</p>
<pre><code>&gt;&gt;&gt; import numpy
&gt;&gt;&gt; a=numpy.array([1.5, 2.5, 2.5, 2.75, 3.25, 4.75])
&gt;&gt;&gt; numpy.std(a)
0.98689327352725098
</code></pre>
<p>Followup question still not really clear, but is this what you're looking for?</p>
<pre><code>&gt;&gt;&gt; b=numpy.array([[1.5, 2.5, 2.5, 2.75, 3.25, 4.75], [10,20,30,40,50,60]])
&gt;&gt;&gt; b
array([[  1.5 ,   2.5 ,   2.5 ,   2.75,   3.25,   4.75],
       [ 10.  ,  20.  ,  30.  ,  40.  ,  50.  ,  60.  ]])
&gt;&gt;&gt; c = b[0][:4]
&gt;&gt;&gt; c
array([ 1.5 ,  2.5 ,  2.5 ,  2.75])
&gt;&gt;&gt; d = b[1][2:5]
&gt;&gt;&gt; d
array([ 30.,  40.,  50.])
&gt;&gt;&gt; e = numpy.append(c, d)
&gt;&gt;&gt; e
array([  1.5 ,   2.5 ,   2.5 ,   2.75,  30.  ,  40.  ,  50.  ])
&gt;&gt;&gt; numpy.std(e)
19.404725387052988
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>you can use scipy/numpy</p>
<p>also hear is the list of statistical packages for python with short descriptions </p>
<p><a href="https://wiki.python.org/moin/NumericAndScientific" rel="nofollow">https://wiki.python.org/moin/NumericAndScientific</a></p>
</div>
<span class="comment-copy">yes, but that's only on the axis of an array, right?</span>
<span class="comment-copy">It does exactly what you're asking.  See example code I just added.</span>
<span class="comment-copy">sorry we,re running after each other, have a look at my edit, How do i make slices into one array on the fly?</span>
<span class="comment-copy">@oaklander114: as presently edited (as of it looks, 3 minutes before your last comment), there's a demonstration of that given in the answer, no?</span>
<span class="comment-copy">@oaklander114 What are you asking? You included an example array in your question. If you have a followup, give a specific variation using that example array to clarify what you want.  What does <code>a[0,1:9],a[1,1:3]</code> mean?</span>
