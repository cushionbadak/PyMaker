<div class="post-text" itemprop="text">
<p>I cannot for the life of me figure this one out. I've been searching around the web all day and all the resources seem terribly out dated. From what I can tell getting MySQLdb and Python to play nice together is fairly difficult. I've gotten about as far as I can on this, and I'm not sure how to proceed going forward.</p>
<p>First off, I am running Python 2.7</p>
<p>The error I get when I try and run "import MySQLdb" in the live interpreter is this:</p>
<pre><code>ImportError: this is MySQLdb version (1, 2, 2, 'final', 0), but _mysql is version (1, 2, 5, 'final', 1)
</code></pre>
<p>I also see the following error logs when I run "pip install mysql-python" however I'm not sure if thats jsut related to the version mis-match.
<a href="http://pastebin.com/hqVv6aPZ" rel="nofollow">http://pastebin.com/hqVv6aPZ</a></p>
<p>I have a python project that has a dependency on MySQLdb and I've been trying to get the virtualenv that I'm running Python from to install the package properly. This is what I've done:</p>
<ul>
<li>I've built MySQL from the source to ensure that I have a 64bit compatible version of MySQL on my machine. I used the --universal flag to ensure this.</li>
<li>I have verified that I am running a 64bit version of Python as well.</li>
<li>MySQL came from Homebrew</li>
<li>mysql-python came from pip</li>
</ul>
<p>I can't for the life of me figure out what to do here. It seems like there is just a version mis-match between MySQLdb and _mysql on my machine. Is this the case? If so is the solution simply reinstalling an older version of MySQL? It appears that when I force pip to install version 1.2.5 of mysql-python it installs version 1.2.2 of MySQLdb, so i'm lost as to what to do here because I'm not sure what package from homebrew actually correlates to version 1.2.5 for _mysql.</p>
<p>EDIT - </p>
<p>sys.path </p>
<pre><code>'/Users/XXXXXXXXXXX/virtualenvs/qa-automated-tests/lib/python27.zip',
'/Users/XXXXXXXXXXX/virtualenvs/qa-automated-tests/lib/python2.7',
'/Users/XXXXXXXXXXX/virtualenvs/qa-automated-tests/lib/python2.7/plat-darwin', 
'/Users/XXXXXXXXXXX/virtualenvs/qa-automated-tests/lib/python2.7/plat-mac', 
'/Users/XXXXXXXXXXX/virtualenvs/qa-automated-tests/lib/python2.7/plat-mac/lib-scriptpackages', '/Users/XXXXXXXXXXX/virtualenvs/qa-automated-tests/Extras/lib/python',
'/Users/XXXXXXXXXXX/virtualenvs/qa-automated-tests/lib/python2.7/lib-tk', 
'/Users/XXXXXXXXXXX/virtualenvs/qa-automated-tests/lib/python2.7/lib-old', 
'/Users/XXXXXXXXXXX/virtualenvs/qa-automated-tests/lib/python2.7/lib-dynload', 
'/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7', 
'/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin', 
'/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk', 
'/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac', 
'/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages', 
'/Users/adam.stark/virtualenvs/qa-automated-tests/lib/python2.7/site-packages'
</code></pre>
<p>Python --version says i'm on version 2.7.5. I've also set the pastebin to public. I'm just not sure what exactly is pertinent information within that dump, it spits back 16 errors.</p>
</div>
<div class="post-text" itemprop="text">
<p>The issue here ended up being a few things. As abarnert pointed out in the comments of the question, there was a mixing of the system python and the virtualenv python. To resolve this I had to change the project properties of the PyDev project to only point to the virtualenv python instance, then in the PyDev interpreter preferences I had to rebuild the PYTHONPATH.</p>
<p>After this was done, in the virtualenv I had to run the following code:</p>
<pre><code>pip uninstall mysql-python 
pip install mysql-python==1.2.5
</code></pre>
<p>This resolved all of the issues.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can try this. Open terminal and type:</p>
<pre><code>sudo apt-get remove python-mysqldb
sudo apt-get install python-dev libmysqlclient-dev
git clone https://github.com/farcepest/MySQLdb1.git
python setup.py build
sudo python setup.py install
</code></pre>
<p>It worked for me. I use Python 2</p>
</div>
<div class="post-text" itemprop="text">
<p>I had the same problem, produced for a different reason tho. I don't have root privileges on my working machine (part of the university infrastructure). I had to install MySQLdb locally by issuing 
<code>pip install --user MySQL-python</code> (from this <a href="https://docs.python.org/3/install/index.html#alternate-installation" rel="nofollow noreferrer" title="alternate installation guide">guide</a> ). This produced the same
<code>ImportError: this is MySQLdb version (1, 2, 3, 'final', 0), but _mysql is version (1, 2, 5, 'final', 1)</code> mismatch. Installing version 1.2.5 didn't work.</p>
<p>What I did : uninstall from <strong>local</strong> and re-install version 1.2.3 as indicated by the error</p>
<p><code>pip install --user MySQL-python==1.2.3</code> </p>
<p>Error disappeared. </p>
</div>
<span class="comment-copy">Anyway, are you running Apple's pre-installed Python? A Homebrew Python? A different Python, like a python.org binary installer? What do <code>which python</code> and <code>which pip</code> from the shell show? What about <code>import sys; print sys.executable, sys.path</code> inside Python?</span>
<span class="comment-copy">Also, <code>_mysql</code> is not part of MySQL, it's part of MySQLdb. Somehow you've got part of MySQLdb 1.2.2.0 and part of 1.2.5.1. My guess is that either (a) you've got 1.2.2.0 in your system site-packages, and then you installed 1.2.5.1 into your virtual environment but it only got partially installed, or (b) you've somehow got two different Python 2.7 installations sharing part of their site-packages, and the first <code>pip</code> and first <code>python</code> on your PATH are from different Python installations.</span>
<span class="comment-copy">There are no errors at all in those logs. There are a bunch of warnings, which are potential 64-bit bugs that the MySQLdb should fix or work around at some point, but they're not relevant here. You can see at the end that it was able to link <code>_mysql.so</code> with no problems, and then it said "Successfully installed MySQL-python".</span>
<span class="comment-copy">Meanwhile, you still haven't answered my most important question: Are you running the pre-installed Apple Python, a Homebrew Python, or something else? <code>which python</code> from <i>outside of</i> the virtualenv will tell you that, but not from inside it.</span>
<span class="comment-copy">OK, which OS X version? Starting in (I think) 10.8, Apple changed the way they distributed built-in extra batteries, and sometimes trying to update them doesn't work right. I know they don't distribute MySQLdb in 10.9 (because I'm on a 10.9 machine right now), but I don't know about 10.8 or 10.10 off the top of my headâ€¦ I know this <i>probably</i> isn't your issue, but it would be nice to rule it out.</span>
<span class="comment-copy">How did you rebuild the python path?</span>
<span class="comment-copy">What if I want to use a newer mysql-python? <code>but _mysql is version (1, 2, 5, 'final', 1)</code>, what is the corresponding package for <code>_mysql</code>? Is is possible to update / upgrade that <code>_mysql</code>?</span>
<span class="comment-copy">The above was tested on Python 2.7</span>
