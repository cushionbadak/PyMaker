<div class="post-text" itemprop="text">
<p>I have to write a program that generates random passwords (using ASCII values and the chr() function) using Python and I have gotten my program to generate a random password, but when the program loops, it keeps printing the same random password and I have no idea what to do to fix it. If anyone could give me some advice, that would be great because I'm new to python</p>
<p>here is the code that I have so far:</p>
<pre><code>import random, string

LNGTH=8
position=0
password=""
start=0
stop=0

while start==stop:
    input("would you like a password?")
    while position&lt;LNGTH:
        x=random.randrange(9)
        character=chr(random.randrange(97, 97 + 26))
        choice=[str(x),character.upper(),character.lower()]
        pass_pos=random.choice(choice)
        password=password+pass_pos
        position+=1

    print(password)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You never reset <code>position</code>, so your <code>while</code> loop always returns <code>True</code> after the first password is generated.</p>
<p>Because you also do not reset <code>password</code> that means you generate just the one random password and re-display that value over and over again.</p>
<p>You need to reset both <em>inside</em> the outer <code>while</code> loop:</p>
<pre><code>while start==stop:
    input("would you like a password?")
    position = 0
    password = ''
</code></pre>
<p>You could just use <code>while True</code> instead of <code>start == stop</code> there. You could also use a <code>for</code> loop instead of your inner <code>while</code> loop, simplifying your setup:</p>
<pre><code>password = ''
for i in range(LNGTH):
    x=random.randrange(9)
    character=chr(random.randrange(97, 97 + 26))
    choice=[str(x),character.upper(),character.lower()]
    pass_pos=random.choice(choice)
    password=password+pass_pos
</code></pre>
<p>Cleaning that up some more by using <a href="https://docs.python.org/3/library/string.html#string.ascii_letters" rel="nofollow"><code>string.ascii_letters</code></a> and <a href="https://docs.python.org/3/library/string.html#string.digits" rel="nofollow"><code>string.digits</code></a>:</p>
<pre><code>import string
import random

password_characters = string.ascii_letters + string.digits
length = 8

while True:
    if input("Would you like a password? ").lower() not in {'y', 'yes'}:
        break
    password = ''.join([random.choice(password_characters)
                        for _ in range(length)])
    print(password)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Once you have been through the loop once, <code>position</code> is equal to <code>LNGTH</code>, so the loop <code>while position&lt;LNGTH:</code> will exit immediately.</p>
<p>Set <code>position</code> back to zero and <code>password</code> back to <code>""</code> inside the outer loop</p>
</div>
<div class="post-text" itemprop="text">
<p>Your code only generates one password and keeps printing it. That's because it runs the loop <code>while position &lt; LNGTH</code> just once: inside the loop, you increase the position until the password is long enough. But during next iterations, <code>position</code> will be already long enough - so the <code>while</code> loop won't be entered; instead, the already previously generated password will be printed.</p>
<p>You have to reset <code>position</code> to zero before entering the <code>while</code> loop.</p>
</div>
<div class="post-text" itemprop="text">
<p>At that point your program did everytime the same, so without initialising random you get everytime the same random.
you should use random.seed() first or even better use random.SystemRandom() if available.</p>
</div>
<span class="comment-copy">Just to add that while you've had good answers to your question, you could've identified the problem by using a debugger and stepping through the code one line at a time. You'd instantly see that the <code>while</code> statement only ran once. The obvious next step is to examine the condition on the <code>while</code> when you would've seen <code>position</code> wasn't <code>0</code> as you expected. A debugger is a valuable tool and learning to use one can save you a lot of pain, especially in more complex code. Hope that helps for next time</span>
<span class="comment-copy">Thank you so much! that makes a lot more sense XD</span>
<span class="comment-copy">That is not the problem.</span>
