<div class="post-text" itemprop="text">
<p>Okay so I have a list called names and there are other words in the list but this is the result of names[0]</p>
<pre><code>Chen,David,M,334791530,,11Z,,16770712,,,,,,00015956753,
Chen,Peter,M,321564726,,11B,,19979810,,,,,,00012446698,
Chung,Rowan,M,32355988,,11T,,17890708,,,,,,00012127821,
Chung,Kyle,M,387638355,,10U,,19970317,,,,,,00015604870,
Fan,Mark,M,34217543,,10U,,19707713,,,,,,00015799079,
</code></pre>
<p>How do I split names[0] so that it comes out with just the last name, first name, and gender?</p>
<p>Here's the rest of my code:</p>
<pre><code>file = open('CASS.txt', 'r')
f = file.readlines()
file.close()
for line in f:
    if line.find('ICS3M105')&gt;=0:
        names = line.split()
        for name in names[0]:
            if name in range(0,1):
                print(names)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>for line in f:
  names = line.split()
  print names[0].split(',')[0:3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>with open('CASS.txt', 'r') as f:
    for line in f:
        name_last, name_first, gender = line.split(',')[0:3]
</code></pre>
<p>Or using the <a href="https://docs.python.org/2/library/csv.html" rel="nofollow"><code>csv</code></a> module which will may be more reliable for upcoming tasks</p>
<pre><code>import csv
with open('CASS.txt', 'r') as f:
    for row in csv.reader(f):
        name_last, name_first, gender = row[0:3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; s = """Chen,David,M,334791530,,11Z,,16770712,,,,,,00015956753,
           Chen,Peter,M,321564726,,11B,,19979810,,,,,,00012446698,
           Chung,Rowan,M,32355988,,11T,,17890708,,,,,,00012127821,
           Chung,Kyle,M,387638355,,10U,,19970317,,,,,,00015604870,
           Fan,Mark,M,34217543,,10U,,19707713,,,,,,00015799079,"""
</code></pre>
<p>You can use a list comprehension to split on commas, then use slicing to index element <code>[0]</code> to <code>[2]</code> (inclusive) of the <code>split</code> operation.</p>
<pre><code>&gt;&gt;&gt; [i.split(',')[:3] for i in s.split('\n')]
[['Chen', 'David', 'M'],
 ['Chen', 'Peter', 'M'],
 ['Chung', 'Rowan', 'M'],
 ['Chung', 'Kyle', 'M'],
 ['Fan', 'Mark', 'M']]
</code></pre>
</div>
<span class="comment-copy">Three side notes: (1) <code>line.find('ICS3M105')&gt;=0</code> is a lot more readable as <code>'IC3SM105' in line</code>. (2) <code>if name in range(0,1)</code> basically means <code>if name == 0</code>, and given that <code>name</code> is a string, it's always going to be false. (3) There's no reason for <code>readlines</code> here. Just loop <code>for line in file:</code> before closing the file. (Also, use a <code>with</code> statement to get rid of the explicit <code>close</code>.)</span>
<span class="comment-copy">Also, if you want to parse CSV files, look at the <a href="https://docs.python.org/3/library/csv.html" rel="nofollow noreferrer"><code>csv</code></a> module. <code>for row in csv.reader(file):</code> will give you a list of <code>(last, first, sex, somenumber, '', somecode, '', someothernumber, â€¦)</code> for each <code>row</code>, without you having to do any extra work.</span>
<span class="comment-copy">you can just do <code>[:3]</code> instead of <code>[0:3]</code></span>
<span class="comment-copy">@rchang Thanks so much!</span>
