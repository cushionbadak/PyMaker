<div class="post-text" itemprop="text">
<p>I have a text file of the looks like this:</p>
<pre><code>0 1
0 2
0 3
2 3
3 4
4 1
.. ..
</code></pre>
<p>I'd like to make it a dictionary looking like this</p>
<pre><code>graph = { "0" : ["1", "2", "3"],
      "1" : ["4", "0"],
      "2" : ["0", "1", "3"],
      "3" : ["0", "2", "4"],
      "4" : ["1", "3"]
    }
</code></pre>
<p>the file text list is a list of edges for a graph. I need to make a graph out of it without using any package. My final aim is to calculate the diameter and clustering coefficient. However, before starting I need to create the graph.</p>
<p>My attempt so far was:</p>
<pre><code>d = {}
    with open("/Volumes/City_University/data_mining/Ecoli.txt") as f:
        for line in f:
           (key, val) = line.split()
           d[int(key)] = val
    for x in d:
    print (x)
</code></pre>
<p>Outcome:</p>
<pre><code>471
472
474
475
476
477
478
479
480
481
483
484
485
486
487
</code></pre>
<p>Thanks</p>
</div>
<div class="post-text" itemprop="text">
<p>As one other possible option, you can also use <a href="https://docs.python.org/3/library/collections.html#collections.defaultdict" rel="nofollow"><code>defaultdict</code></a> here:</p>
<pre><code>from collections import defaultdict
d = defaultdict(list)
with open("/Volumes/City_University/data_mining/Ecoli.txt") as f:
    for line in f:
        key, val = line.split()
        d[key].append(val)
for k, v in d.items():
    print(k, v)
</code></pre>
<p>This saves you from having to check whether a key is already in <code>d</code> or not, and it also saves you a couple of lines.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>d = {}
with open("/Volumes/City_University/data_mining/Ecoli.txt") as f:
    for line in f:
       (key, val) = line.split()
       if key in d:
           d[key].append(val)
       else:
           d[key] = [val]
for x, v in d.items():
print x, v
</code></pre>
<hr/>
<p>Explanation:</p>
<p>Just make the values of <code>d</code> lists, and append to the lists.</p>
</div>
<div class="post-text" itemprop="text">
<p>try this:</p>
<pre><code>d = {}
with open("/Volumes/City_University/data_mining/Ecoli.txt") as f:
    for line in f:
       (key, val) = line.split()
       if key in d:
           d[key].append(val)
       else:
           d[key] = [val]
for x in d:
    print x,d[x]
</code></pre>
<p>if key is found in dictionary it will append the value else create a new pair</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import numpy as np
file_name='text_file.txt'
key_column=0

dat=np.genfromtxt(file_name,dtype=str)
d={i:[] for i in np.unique(dat[:,key_column])}

for row in dat:
    for key in d.keys():
        if row[key_column]==key :d[key].append(row[1])

print d
</code></pre>
</div>
<span class="comment-copy">this works better, I found also the 0 key in the result</span>
<span class="comment-copy">Great. I'm glad you found it.</span>
<span class="comment-copy">awesome, thank you very much it seems it works. The only issue is that I can't find the key 0... How can I extract the print outcome to a txt file so that I can look better and see if the 0 key is there as well? Thanks again.</span>
<span class="comment-copy">Please see <a href="http://stackoverflow.com/questions/6159900/correct-way-to-write-line-to-file-in-python">this question</a>.</span>
<span class="comment-copy">@Andrea Sportelli You don't need to print to a file to check if a key is there. Simply add one more line to your code: <code>print d.get('0')</code>.</span>
<span class="comment-copy">this might me good for when number of keys is too large, do two passes</span>
