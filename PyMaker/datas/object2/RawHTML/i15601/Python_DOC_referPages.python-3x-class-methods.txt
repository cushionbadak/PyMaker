<div class="post-text" itemprop="text">
<p>I'm currently learning the basics of classes, and I came up with some basic code as follows:</p>
<pre><code>class shape(object):
    def __init__(self, num_sides, type):
        self.num_sides = num_sides
        self.type = type

class square(shape):
    def __init__(self, side_length):
        self.num_sides = 4
        self.type = 'regular quadrilateral'
        self.side_length = side_length
    def perim():
        return side_length * 4
    def area():
        return side_length ** 2

class circle(shape):
    def __init__(self, radius):
        self.num_sides = 1
        self.type = 'ellipsis'
        self.radius = radius
</code></pre>
<p>Now, when I type the following:</p>
<pre><code>shape1 = square(5)
shape1.perim()
</code></pre>
<p>I get the following output:</p>
<pre><code>&lt;bound method square.perim of &lt;__main__.square object at 0x0000000003D5FB38&gt;&gt;
</code></pre>
<p>What is this? How can I get python to actually return the perimeter of the square?</p>
<p>Also, I have another question:
Do any class methods exist other than <code>__init__()</code> and <code>__str__()</code>? If so, can you please list them so I can go off and research them?</p>
</div>
<div class="post-text" itemprop="text">
<p>as shown, you are going to have some problems with this.  If you are trying to have circle and square be subset set classes of shape, then the two sub classes need to be indented.  Also, on class circle and square, you really do not need the (shape). also note the things I commented out as not needed.</p>
<p>This does not come out as I am posting it.  the class shape (object):does not show up and the subclasses are not indented and I can not seem to make it show up</p>
<p>class shape(object):
    def <strong>init</strong>(self, num_sides, type):
        #self.num_sides = num_sides
        self.type = type</p>
<pre><code>class square:

    def __init__(self, side_length):
        #self.num_sides = 4
        #self.type = 'regular quadrilateral'
        self.side_length = side_length

    def perim(self):
        return self.side_length * 4
    def area(self):
        return self.side_length ** 2

class circle: 
    def __init__(self, radius):
        #self.num_sides = 1
        #self.type = 'ellipsis'
        self.radius = radius

    def area (self):
        return 3.14 * self.radius ** 2



shape2 = circle (5)
print ('test of circle: ',shape2.area ())

shape1 = square(5)
print('test of square:  ', shape1.perim())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Two things, indentation of the init of shape and add self. to the perim and area methods.</p>
<pre><code>class shape(object):
    def __init__(self, num_sides, type):
        self.num_sides = num_sides
        self.type = type

class square(shape):

    def __init__(self, side_length):
        self.num_sides = 4
        self.type = 'regular quadrilateral'
        self.side_length = side_length

    def perim(self):
        return self.side_length * 4
    def area(self):
        return self.side_length ** 2

class circle(shape):
    def __init__(self, radius):
        self.num_sides = 1
        self.type = 'ellipsis'
        self.radius = radius

shape1 = square(5)
print( shape1.perim())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Access instance variable with <code>self</code></p>
<pre><code>class square(shape):
    def __init__(self, side_length):
        self.num_sides = 4
        self.type = 'regular quadrilateral'
        self.side_length = side_length
    def perim(self):
        return self.side_length * 4
    def area(self):
        return self.side_length ** 2
</code></pre>
</div>
<span class="comment-copy">You forgot to use <code>self</code> from the <code>perim</code> and <code>area</code> methods</span>
<span class="comment-copy">If you get <code>&lt;bound method square.perim of &lt;__main__.square object at 0x0000000003D5FB38&gt;&gt;</code>, you surely haven't written <code>shape1.perim()</code>, but <code>shape1.perim</code>.</span>
<span class="comment-copy">Your 2nd questions is answered in Python's <a href="https://docs.python.org/3/reference/datamodel.html" rel="nofollow noreferrer">excellent documentation</a>.</span>
<span class="comment-copy">thanks for the link @glglgl</span>
<span class="comment-copy">Note that <code>__init__</code> and <code>__str__</code> aren't class methods.</span>
<span class="comment-copy">You also need <code>self</code> as an parameter of the method</span>
