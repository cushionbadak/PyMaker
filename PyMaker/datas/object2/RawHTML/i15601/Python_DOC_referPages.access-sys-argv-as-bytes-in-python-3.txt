<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/6981594/sys-argv-as-bytes-in-python-3k">sys.argv as bytes in Python 3k</a>
<span class="question-originals-answer-count">
                    2 answers
                </span>
</li>
</ul>
</div>
<p>As the title said, is there a <code>sys.argv</code> equivalent in python 3 allow me to read arguments as bytes?</p>
<p>The reason I want this is, I have a script which accept a bytes (\xe9\x88...) as its first arg, the first arg is supposed to be a bytes converted from an utf8 string, sys.argv will try to decode the first arg using some encoding, which may not utf8, so the program may fail. If I can access the args without calling sys.argv, the conversion will not be done.</p>
</div>
<div class="post-text" itemprop="text">
<p>There was an <a href="http://bugs.python.org/issue8776" rel="noreferrer">issue on the Python bug tracker</a> about this:</p>
<blockquote>
<p>In some situations, the encoding of the command line is incorrect or
  unknown. sys.argv is decoded with the file system encoding which can
  be wrong. Eg. see issue #4388 (ok, it's a bug, it should be fixed).</p>
<p>As os.environb, it would be useful to have bytes version of sys.argv
  to have able to decide the encoding used to decode each argument, or
  to manipulate bytes if we don't care about the encoding.</p>
</blockquote>
<p>Since on Python 3 <code>sys.argv</code> is encoded with the filesystem encoding, the proposed solution on the bug is to use <a href="https://docs.python.org/3/library/os.html#os.fsencode" rel="noreferrer"><code>os.fsencode</code></a>:</p>
<pre><code>argvb = list(map(os.fsencode, sys.argv))
</code></pre>
<p><code>os.fsencode</code> encodes the string using the string using the <code>surrogateescape</code> encoding, which is defined in <a href="https://www.python.org/dev/peps/pep-0383" rel="noreferrer">PEP-383</a>.</p>
</div>
<span class="comment-copy">What's the OS and system locale settings? How is a "string in another encoding" passed in the arguments? This determines what the program actually gets from the system.</span>
