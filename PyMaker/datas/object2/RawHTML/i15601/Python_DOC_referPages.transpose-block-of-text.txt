<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question is an exact duplicate of:</p>
<ul>
<li>
<a dir="ltr" href="/questions/22536569/transposing-a-text-file-in-python">Transposing a text file in Python</a>
<span class="question-originals-answer-count">
                    3 answers
                </span>
</li>
</ul>
</div>
<p>I have a block of ones and zeroes, in string:</p>
<pre><code>1111110000111111
1110110110110111
1101010110101011
1011100110011101
0001111111111011
1000110111110111
0100010011110000
0110000001111110
0111000000110110
0000100010010100
1110110011000111
1101111111100011
1011100110000011
1101010111100001
1110110110111101
1111110000111111
</code></pre>
<p>I want to transpose it, as if it was a matrix - but keep it in string.</p>
<p>Before I start writing nested for loops, is there an easier way?</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>s = """1111110000111111
       1110110110110111
       1101010110101011
       1011100110011101
       0001111111111011
       1000110111110111
       0100010011110000
       0110000001111110
       0111000000110110
       0000100010010100
       1110110011000111
       1101111111100011
       1011100110000011
       1101010111100001
       1110110110111101
       1111110000111111"""

&gt;&gt;&gt; [''.join(i) for i in zip(*s.split())]
['1111010000111111',
 '1110001110110111',
 '1101000110101011',
 '1011100010011101',
 '1101110001111011',
 '1110111000110111',
 '0000100000010000',
 '0111110000011110',
 '0111111001111110',
 '0000111100110100',
 '1110111110010111',
 '1101111111000011',
 '1011100100000011',
 '1101010111100011',
 '1110110110111001',
 '1111110000111111']
</code></pre>
<p><strong>Edit</strong><br/>
If you indeed want a single string as your output, add one more <code>join</code></p>
<pre><code>&gt;&gt;&gt; '\n'.join(''.join(i) for i in zip(*s.split()))
'1111010000111111\n1110001110110111\n1101000110101011\n1011100010011101\n1101110001111011\n1110111000110111\n0000100000010000\n0111110000011110\n0111111001111110\n0000111100110100\n1110111110010111\n1101111111000011\n1011100100000011\n1101010111100011\n1110110110111001\n1111110000111111'
</code></pre>
</div>
<span class="comment-copy"><code>zip</code> will simplify this, but you will have to <code>split</code> and <code>join</code>. Is that one (multiline) string?</span>
<span class="comment-copy">I assume you mean an easier way without writing <i>explicit</i> nested <code>for</code> loops.</span>
<span class="comment-copy">Semi serious answer: make a Matrix class with transposition and string conversion methods, then do <code>s = Matrix.fromstring(s).transposed().tostring()</code>.</span>
<span class="comment-copy">@MightyPork In the first answer of the duplicate: <code>[''.join(chars) for chars in zip(*text.splitlines())]</code> In Cyber's answer: <code>[''.join(i) for i in zip(*s.split())]</code>. Much worse?</span>
<span class="comment-copy">@MightyPork ah, you're using 3.x - see <a href="http://stackoverflow.com/q/13638898/3001761">stackoverflow.com/q/13638898/3001761</a></span>
<span class="comment-copy">Maybe you could elaborate on the asterisk in zip and what zip does? It works, but I don't really get it.</span>
<span class="comment-copy">Cyber, thanks for the point of my answer. Not gonna bother fixing it as yours does the job. You might want to add a <code>str.join</code> though as the OP wanted it as a string, not a list of strings.</span>
<span class="comment-copy">@MightyPork The asterisk operator <a href="http://stackoverflow.com/questions/2921847/what-does-the-star-operator-mean-in-python">unpacks the arguments</a>, in this case from <code>split()</code>. <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow noreferrer"><code>zip</code></a> then takes a sequence of iterables, and joins them elementwise. For example <code>list(zip('abc', 'def'))</code> produces <code>[('a', 'd'), ('b', 'e'), ('c', 'f')]</code>.</span>
