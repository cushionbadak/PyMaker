<div class="post-text" itemprop="text">
<p>I am trying to work with Pandas on some data problems and have come to a point where I am writing code like this:</p>
<pre><code>groups.segment = groups.topic.map(lambda x: 'friends' if 'friend' in str(x) else x)
groups.segment = groups.topic.map(lambda x: 'friends' if 'bro' in str(x) else x)
groups.segment = groups.topic.map(lambda x: 'friends' if 'girls' in str(x) else x)
</code></pre>
<p>I would like to write it in a more concise way way where I don't have to have a bunch of copy and paste code. A little bit new to python so not sure how to make it better. Any help appreciated. </p>
<p>Something along the lines of:</p>
<pre><code>groups.segment = groups.segment.map(lambda x: 'friends' if 'bro' or 'girls' or 'friend' in str(x) else x)
</code></pre>
<p>Is there a way to do this ? </p>
<p>Thanks for any help !</p>
</div>
<div class="post-text" itemprop="text">
<p>It's probably better not to use <code>lambda</code> here:</p>
<pre><code>def mapper(x)
    if any(y in str(x) for y in ('friend', 'bro', 'girls')):
        return 'friends'
    return x

groups.segment = groups.topic.map(mapper)
</code></pre>
<p>You can use <a href="https://docs.python.org/3/library/functions.html#any"><code>any</code></a> here which returns <code>True</code> when at least one of the passed values is <code>True</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>lambda x: 'friends' if 'bro' in str(x) or 'girls' in str(x) or 'friend' in str(x) else x
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can avoid <code>map</code> and <code>lambda</code> altogether and use <code>isin()</code>, which ends up working more like the typical Python idiom of <code>if item in ['a', 'b', 'c']:</code></p>
<pre><code>import pandas as pd

df = pd.DataFrame({'relationship': ['friends', 'friend', 'bro', 'girls']})
df
Out[3]: 
  relationship
0      friends
1       friend
2          bro
3        girls

is_synonym = df.relationship.isin(['friend', 'bro', 'girls'])
df['relationship2'] = df['relationship'].copy()
df.loc[is_synonym, 'relationship2'] = 'friends'
df
Out[15]: 
  relationship relationship2
0      friends       friends
1       friend       friends
2          bro       friends
3        girls       friends
</code></pre>
</div>
<span class="comment-copy">Look into the <code>any</code> built-in function.</span>
