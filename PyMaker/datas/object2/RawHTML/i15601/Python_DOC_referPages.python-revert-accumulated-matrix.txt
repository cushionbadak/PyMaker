<div class="post-text" itemprop="text">
<p>I have a matrix like this </p>
<pre><code>[[1,2,4,6],
[4,7,9,9],
[1,9,10,20]]
</code></pre>
<p>how i get the partial sums by columns in python?</p>
<pre><code>[[1,2,4,6],
[(4-1),(7-2),(9-4),(9-6)],
[(1-4),(9-7),(10-9),(20-9)]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you don't want to use <strong>numpy</strong> or <strong>itertools</strong>, here is the code</p>
<pre><code>&gt;&gt;&gt; a=[[1,2,4,6],
... [4,7,9,9],
... [1,9,10,20]]
&gt;&gt;&gt; a_r = a[::-1]  # reverse original list
&gt;&gt;&gt; for i in range(len(a_r)-1):
...    for j in range(len(a_r[0])):
...       a_r[i][j] = a_r[i][j] - a_r[i+1][j]
... 
&gt;&gt;&gt; a=a_r[::-1]  # reverse result 
&gt;&gt;&gt; for i in a: print i
[1, 2, 4, 6]
[3, 5, 5, 3]
[-3, 2, 1, 11]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you want a solution that doesn't involve numpy, and just uses list of lists and <a href="https://docs.python.org/3/library/itertools.html#itertools.tee" rel="nofollow"><code>itertools.tee</code></a> (which is builtin), then the below should work</p>
<pre><code>from itertools import tee

a = [[1,2,4,6],
     [4,7,9,9],
     [1,9,10,20]]

b = []
b.append(a[0])

# Create two iterators and advance one once.
x, y = tee(a)
next(y)

# Iterate over your two iterators and construct a list t which is their difference
# then append this list to b
for i, j in zip(x, y):
  t = [h-g for g, h in zip(i,j)]
  b.append(t)

print(b)
# [[1, 2, 4, 6], 
#  [3, 5, 5, 3], 
#  [-3, 2, 1, 11]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Try</p>
<p><code>np.vstack((Z[0],np.diff(Z,axis=0)))</code></p>
<p>where <code>Z</code> is the matrix you are differentiating.</p>
</div>
<div class="post-text" itemprop="text">
<p>From the second line, what you want is just the difference of row <code>i</code> and row <code>i-1</code>, and the first line is just the first line of the original array. The easiest way to get this is with <a href="http://www.numpy.org" rel="nofollow">numpy</a>. So this works:</p>
<pre><code>In [1]: import numpy as np

In [2]: a = np.array( [[1,2,4,6],
   ...: [4,7,9,9],
   ...: [1,9,10,20]]
   ...: )

In [3]: np.vstack( (a[0], a[1:]-a[:-1]) )
Out[3]: 
array([[ 1,  2,  4,  6],
       [ 3,  5,  5,  3],
       [-3,  2,  1, 11]])
</code></pre>
<p>As Lord Henry Wotton (!) points out, the difference <code>a[1:]-a[:-1]</code> is the same as <code>np.diff(a, axis=0)</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>I think this one is nice</p>
<pre><code>&gt;&gt;&gt; a = [[1,2,4,6],
... [4,7,9,9],
... [1,9,10,20]]
&gt;&gt;&gt; c = [[0]*5] ; c.extend(a)
&gt;&gt;&gt; print [[ s-r for r, s in zip(*t)] for t in zip(c[:-1],c[1:])]
[[1, 2, 4, 6], [3, 5, 5, 3], [-3, 2, 1, 11]]
&gt;&gt;&gt; 
</code></pre>
<p>Here I prepend a list of zeros to the list of lists (obtaining <code>c</code>), and by a bit of packing and unpacking using <code>zip</code> I have a list of lists with the expected results.</p>
</div>
