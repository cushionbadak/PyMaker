<div class="post-text" itemprop="text">
<p>I have two files in the same directory, and there are no <code>__init__.py</code> files anywhere:</p>
<pre><code>c:\work\test&gt;tree
.
|-- a
|   `-- a
|       |-- a1.py
|       `-- a2.py
`-- b
</code></pre>
<p>one file imports the other:</p>
<pre><code>c:\work\test&gt;type a\a\a1.py
print 'a1-start'
import a2
print 'a1-end'

c:\work\test&gt;type a\a\a2.py
print 'a2'
</code></pre>
<p>The import succeeds even when run from a completely different location:</p>
<pre><code>c:\work\test\b&gt;python ..\a\a\a1.py
a1-start
a2
a1-end
</code></pre>
<p>I'm running</p>
<pre><code>c:\work\test&gt;python -V
Python 2.7.3
</code></pre>
<p>and my PYTHONPATH and PYTHONHOME variables are not set</p>
<pre><code>c:\work\test&gt;echo %PYTHONPATH% %PYTHONHOME%
%PYTHONPATH% %PYTHONHOME%
</code></pre>
<p>How does <code>a1.py</code> find <code>a2</code>?</p>
</div>
<div class="post-text" itemprop="text">
<p>A quote from the <a href="https://docs.python.org/2/tutorial/modules.html">module docs</a> (emphasis mine):</p>
<p>"When a module named spam is imported, the interpreter first searches for a built-in module with that name. If not found, it then searches for a file named spam.py in a list of directories given by the variable sys.path. sys.path is initialized from these locations:</p>
<ul>
<li><strong>the directory containing the input script</strong> (or the current directory).</li>
<li>PYTHONPATH (a list of directory names, with the same syntax as the shell variable PATH).</li>
<li>the installation-dependent default."</li>
</ul>
</div>
<span class="comment-copy">I would hazzard a guess that like PHP, Python would evaluate multiple locations to find files, including the current working directory?</span>
<span class="comment-copy">The current working directory is <code>test\b</code>...</span>
<span class="comment-copy">the script is running from a however, forgive my lack of python knowledge, but php and I believe most languages would treat this scenario similarly, when you type .. that's changing the working directory for that script only</span>
<span class="comment-copy">yes as the answer below states, the directory containing the input script, eg a :).</span>
<span class="comment-copy">The answer below is correct, but the directory where the script is located is different from the current working directory -- i.e. if you print <code>os.getcwd()</code> in <code>a1.py</code> it will print <code>c:\work\test\b</code> (not <code>c:\work\test\a\a</code>).</span>
<span class="comment-copy">Ah, I got confused because I didn't see a reference to <code>test\a\a</code> anywhere in <code>sys.path</code> (which starts out with <code>['', 'c:\\python27\\lib..</code>).</span>
<span class="comment-copy">@thebjorn: <code>''</code> refers to the boldfaced part of ofrommel's answer.  See <a href="https://docs.python.org/3/library/sys.html#sys.path" rel="nofollow noreferrer"><code>sys.path</code></a>.</span>
