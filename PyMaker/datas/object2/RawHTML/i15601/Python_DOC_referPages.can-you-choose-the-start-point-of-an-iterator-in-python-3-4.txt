<div class="post-text" itemprop="text">
<p>Given this list:</p>
<pre><code>numbers=[1, 2, 3, 4, 5]
</code></pre>
<p>My aim is to add these numbers one by one, and each in time doing so, I want to start adding from the  <em>nth</em> place, and save the result:</p>
<pre><code>added=[]
num=[1,2,3,4,5]

for i in range(len(num)):
        add=itertools.accumulate([int (i) for i in num])
        added.append([i for i in add])

        num.insert(len(num),num[0])
        num.pop(0)

return added


&gt;&gt;&gt;[[1, 3, 6, 10, 15], [2, 5, 9, 14, 15], [3, 7, 12, 13, 15], [4, 9, 10, 12, 15], [5, 6, 8, 11, 15]]
</code></pre>
<p>Each time I do this however, I also want to save from the <em>nth</em> position, like so:</p>
<pre><code>[[1, 3, 6, 10, 15], [15, 2, 5, 9, 14], [13, 15, 3, 7, 12], [10, 12, 15, 4, 9], [6, 8, 11, 15, 5]]
</code></pre>
<p>The way to achieve this is quite tricky, but being able to choose the start point for <em>i</em> would make this procedure effortless, because no extra code (mainly other for loops) would need to be created to accommodate procedures such as this.</p>
<p>Just to be clear, I wish to <strong><em>save</em></strong> in the <em>nth</em> position, as in the second list of lists:</p>
<pre><code>[[1, 3, 6, 10, 15], [2, 5, 9, 14, 15], [3, 7, 12, 13, 15], [4, 9, 10, 12, 15], [5, 6, 8, 11, 15]]
[[1, 3, 6, 10, 15], [15, 2, 5, 9, 14], [13, 15, 3, 7, 12], [10, 12, 15, 4, 9], [6, 8, 11, 15, 5]]
</code></pre>
<p>Thanks in advance for any help.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/itertools.html#itertools.islice" rel="nofollow"><code>itertools.islice</code></a>, <a href="https://docs.python.org/3/library/itertools.html#itertools.cycle" rel="nofollow"><code>itertools.cycle</code></a>:</p>
<pre><code>&gt;&gt;&gt; from itertools import accumulate, islice, cycle
&gt;&gt;&gt;
&gt;&gt;&gt; numbers = [1, 2, 3, 4, 5]
&gt;&gt;&gt; n = len(numbers)
&gt;&gt;&gt; [list(accumulate(islice(cycle(numbers), i, i+n))) for i in range(n)]
[[1, 3, 6, 10, 15],
 [2, 5, 9, 14, 15],
 [3, 7, 12, 13, 15],
 [4, 9, 10, 12, 15],
 [5, 6, 8, 11, 15]]
</code></pre>
<p>Combining with <a href="https://docs.python.org/3/library/collections.html#collections.deque.rotate" rel="nofollow"><code>collections.deque.rotate</code></a>, you can get the final result:</p>
<pre><code>&gt;&gt;&gt; from collections import deque
&gt;&gt;&gt; xs = [deque(accumulate(islice(cycle(numbers), i, i+n))) for i in range(n)]
&gt;&gt;&gt; for i, x in enumerate(xs):
...     x.rotate(i)  # if i == 1, [1, 2, 3] become [3, 1, 2].
...
&gt;&gt;&gt; [list(x) for x in xs]
[[1, 3, 6, 10, 15],
 [15, 2, 5, 9, 14],
 [13, 15, 3, 7, 12],
 [10, 12, 15, 4, 9],
 [6, 8, 11, 15, 5]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Sure:</p>
<p>Say you have this list (as you specified):</p>
<pre><code>numbers=[1, 2, 3, 4, 5]
</code></pre>
<p>And you want to start from 2, then you simply do:</p>
<pre><code>numbers[2:]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can cycle the results through:</p>
<pre><code>from itertools import islice, cycle, accumulate
num = [1, 2, 3, 4, 5]
added = []
for n in range(len(num)):
    added.append(list(islice(cycle(accumulate(islice(cycle(num),n,n+len(num)))),len(num)-n,2*len(num)-n)))
</code></pre>
</div>
<span class="comment-copy">Is this what you want? <code>for i in range(start, end, step)</code> e.g. <code>for i in range(2, 10, 2)</code> = <code>2, 4, 6, 8</code></span>
<span class="comment-copy">Her OdraEncoded, thanks for the help, but does that work for when you want to iterate over a sequence e.g a list and when you want to choose it's start point?</span>
<span class="comment-copy">If you want to rotate the iterator, try this <code>itertools.accumulate([num[j % len(num)] for j in range(i, i + len(num))])</code></span>
<span class="comment-copy">Hey, thanks, but the real aim is to save in the nth position, which is the advantage of being able to choose the position of which i iterates from.</span>
<span class="comment-copy">@user2901512, I updated the answer to include the code that yield the second list.</span>
<span class="comment-copy">Bah - had almost exactly the same open in an editor - beat me to it +1</span>
