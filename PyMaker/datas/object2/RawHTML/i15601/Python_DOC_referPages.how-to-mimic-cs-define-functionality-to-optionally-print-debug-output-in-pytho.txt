<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/12524570/how-do-you-implement-ifdef-in-python">How do you implement “#ifdef” in python?</a>
<span class="question-originals-answer-count">
                    7 answers
                </span>
</li>
</ul>
</div>
<p>I have a huge python code with lots of print statements useful for debugging. I want to be able to enable or disable them in one go, without poring over the hundreds of <code>printf</code>'s and commenting them each time.</p>
<p>In C, a <code>#define</code> can be used to comment out unneeded parts of the code using <code>#ifdef</code> like this-</p>
<pre><code>#define debug
#ifdef debug
    printf("Debug on")
#endif
</code></pre>
<p>If I don't want to be in debug mode, I can simply comment #define debug and none of my <code>print</code> statements will compile.</p>
<p>How can this functionality be done in Python?</p>
</div>
<div class="post-text" itemprop="text">
<p>Python has no direct equivalent of C's macros because it has no preprocessor and does not distinguish between compile-time and run-time like C does.</p>
<p>A simple solution however is to put your <code>print</code> lines inside an if-statement:</p>
<pre><code>if False:
    print(...)
    print(...)
    print(...)
    ...
</code></pre>
<p>You can then just change the <code>False</code> to <code>True</code> to have them be executed.</p>
<hr/>
<p>Similarly, you could do:</p>
<pre><code>DEBUG = False

if DEBUG:
    print(...)
    print(...)
    print(...)
    ...
</code></pre>
<p>and then change the <code>DEBUG</code> name to <code>True</code>.</p>
<hr/>
<p>A third (and probably the best) option would be to use Python's built-in <a href="https://docs.python.org/3/library/constants.html#__debug__" rel="nofollow"><code>__debug__</code> flag</a>:</p>
<pre><code>if __debug__:
    print(...)
    print(...)
    print(...)
    ...
</code></pre>
<p><code>__debug__</code> is a constant like <code>None</code> and is set to <code>True</code> if Python is launched without a <code>-O</code> option (it is in debug mode).  Otherwise, if a <code>-O</code> option is set (we are in optimized/production mode), <code>__debug__</code> will be set to <code>False</code> and the code using it will be entirely ignored by the interpreter so that there is no performance penalty.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should look into the Python logging library:</p>
<p><a href="https://docs.python.org/2/library/logging.html" rel="nofollow">https://docs.python.org/2/library/logging.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Use the python standard library <a href="https://docs.python.org/2/library/logging.html" rel="nofollow">logging</a> module. Here is an <a href="https://docs.python.org/2/howto/logging.html" rel="nofollow">easier-to-read tutorial on the logging module</a>. </p>
<p>You can set the debugging level for a given run of your code like so (see <a href="https://docs.python.org/2/howto/logging.html" rel="nofollow">this section</a> for more info):</p>
<pre><code>import logging
# if you want you can also set filename="logfile.txt" to write to file
logging.basicConfig(level=logging.DEBUG) # there are other options like logging.INFO
x = 42.31415
# Run your program here....
logging.debug("x is now" + str(x))
</code></pre>
<p>So you could even pass the debug level at the command line if you so choose, say doing something like</p>
<pre><code>--loggingLevel=DEBUG
</code></pre>
</div>
<span class="comment-copy">Since C macros are evaluated at compile time to simplify the runtime, and since Python does not have this separation, such a functionality doesn’t make much sense in Python. You can just use normal run-time checks to make branches (read: simple ifs).</span>
<span class="comment-copy">Also related: <a href="http://stackoverflow.com/questions/482014/how-would-you-do-the-equivalent-of-preprocessor-directives-in-python" title="how would you do the equivalent of preprocessor directives in python">stackoverflow.com/questions/482014/…</a></span>
<span class="comment-copy">Use <code>if __debug__</code>. This flag is set by the <code>-O</code> option and it actually <i>strips out</i> code when running in production (optimized) mode, so there is no performance penalty.</span>
<span class="comment-copy">Thanks, I forgot about <code>__debug__</code>.</span>
