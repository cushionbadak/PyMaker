<div class="post-text" itemprop="text">
<p>I'm fairly new to Python.  I have a list of dictionaries.</p>
<pre><code>[{"x": "23"}, {"x": "14"}, {"x": "9"}, {"x": "19"}, {"x": "21"}, {"x": "14"}, {"x": "16"}, {"x": "11"}, {"x": "9"}, {"x": "6"}, {"x": "24"}, {"x": "13"}]
</code></pre>
<p>I want to extract the values associated with the <code>x</code> key and plot them.  To do that the list must look like this, and the values must be integers (or floats).</p>
<pre><code>[23, 14, 9, 19, 21, 14, 16, 11, 9, 6, 24, 13]
</code></pre>
<p>My question is: how do I </p>
<ol>
<li>extract these values, and </li>
<li>convert them to integers?</li>
</ol>
</div>
<div class="post-text" itemprop="text">
<p>This can be done using a list comprehension using the dictionary's <code>get</code> method.</p>
<pre><code>&gt;&gt;&gt; l = [{"x": "23"}, {"x": "14"}, {"x": "9"}, {"x": "19"}, {"x": "21"}, {"x": "14"}, {"x": "16"}, {"x": "11"}, {"x": "9"}, {"x": "6"}, {"x": "24"}, {"x": "13"}]
&gt;&gt;&gt; [i.get('x') for i in l]
['23', '14', '9', '19', '21', '14', '16', '11', '9', '6', '24', '13']
</code></pre>
<p>If you'd like them as integers, convert them in the list comprehension</p>
<pre><code>&gt;&gt;&gt; [int(i.get('x')) for i in l]
[23, 14, 9, 19, 21, 14, 16, 11, 9, 6, 24, 13]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use a <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a>. For each item get <code>"x"</code> and cast to <code>int</code>:</p>
<pre><code>[int(item['x']) for item in mylist]
</code></pre>
<p>If you need floats change <code>int</code> to <code>float</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>list comprehension</code></p>
<pre><code>&gt;&gt;&gt; mylist = [{'x': '23'}, {'x': '14'}, {'x': '9'}, {'x': '19'}, {'x': '21'}, {'x': '14'}, {'x': '16'}, {'x': '11'}, {'x': '9'}, {'x': '6'}, {'x': '24'}, {'x': '13'}]
&gt;&gt;&gt; [ int(item.values()[0]) for item in mylist]
[23, 14, 9, 19, 21, 14, 16, 11, 9, 6, 24, 13]
</code></pre>
<p>or <code>map</code></p>
<pre><code>&gt;&gt;&gt; map(lambda x: int(x['x']), mylist)
[23, 14, 9, 19, 21, 14, 16, 11, 9, 6, 24, 13]
</code></pre>
</div>
<span class="comment-copy">Why not <code>i['x']</code> instead of <code>get</code>?</span>
<span class="comment-copy">@RemcoGerlich In this use case, that will work just fine too. I generally stick to <code>.get</code> to protect against <code>KeyError</code>, and just handle missing keys separately.</span>
<span class="comment-copy">But then you need to handle getting back <code>None</code> too, otherwise you just change the exception you're getting.</span>
<span class="comment-copy">Meh, just a coding preference I guess. I prefer handling it with <code>get</code> than using <code>try</code>/<code>except</code>, but whatever floats your boat :)</span>
<span class="comment-copy">To me <code>i['x']</code> says "x is always present, or at least if it isn't then there's nothing we can do but crash", and <code>i.get('x')</code> says "x may not be present, and we're handling that". This question is the first case. But it's very minor of course :-)</span>
<span class="comment-copy">Problem solved! Thanks everyone for the excellent answers.</span>
