<div class="post-text" itemprop="text">
<p>I want to how to find even numbers from lists of lists.<br/>
The example was:</p>
<pre><code>maximum_even_each_list_in_lol([[1,2,3],[6,5,4],[5,7,9]])
</code></pre>
<p>should return (maximum even numbers):</p>
<pre><code>[2,6,0]
</code></pre>
<p>I found how to find even numbers from list, from stackoverflow:</p>
<pre><code>def maximum_even_each_list_in_lol (lol):
    evens=[]
    for number in lol:
        if is_even(number):
            evens.append(number)
    return evens
</code></pre>
<p>but I want to know how I can make it so that it can find even numbers from each list, in list.</p>
</div>
<div class="post-text" itemprop="text">
<p>Though you don't say it explicitly, it seems you are looking for the maximum even number in each list within a list of lists. And from your example it seems you want the programme to add 0 if there is no even number. In that case this will work:</p>
<pre><code>print [max(value for value in [0] + L if not value % 2) for L in list_of_lists]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can build this algorithm up from the inside-out using some nice Pythonic language constructs:</p>
<pre><code># Function to determine if one number is even
is_even = lambda x : x%2==0

# Function to return just the even numbers of a list
just_evens = lambda x : filter(is_even, x)

# Function to return the maximum number in a list, or '0' if there is none
get_max = lambda x : max(x) if len(x) else 0

# Function to return the maximum even number of a list
max_even = lambda x : get_max(just_evens(x))

# Print out the maximum even number from each list:
map(max_even, [[1,2,3],[6,5,4],[5,7,9]])
</code></pre>
<p>This will print out:</p>
<pre><code>[2, 6, None]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#max" rel="nofollow">python 3.4</a> takes a default value for max so if after filtering there are no even numbers we can return <code>0</code> as a default value:</p>
<pre><code>l = [[1,2,3],[6,5,4],[5,7,9]]
print([max(filter(lambda x: not x % 2,x),default=0) for x in l])
[2, 6, 0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>As I understand you want to iterate over a <strong>list of lists</strong>, grabbing biggest even number from each list or 0 if not even numbers were found. Here is your function then:</p>
<pre><code>def maximum_even_each_list_in_lol(lol):
    evens = []
    for sublist in lol:
        subevens = []
        for number in sublist:
            if (not number % 2):
                subevens.append(number)
        # As I understand you want to insert 0
        # if no even numbers were found, right?
        if not subevens:
            subevens = [0]
        evens.append(max(subevens))
    return evens

# Testing
assert maximum_even_each_list_in_lol([[1,2,3],[6,5,4],[5,7,9]]) == [2,6,0]
</code></pre>
<p>Make sure to read about builtin <a href="https://docs.python.org/2/library/functions.html#max" rel="nofollow">max</a> function :)</p>
</div>
<div class="post-text" itemprop="text">
<p>You're almost there! <strong>:-)</strong></p>
<p>Check what the builtin <a href="https://docs.python.org/2/library/functions.html#max" rel="nofollow">max</a> function does.</p>
<pre><code>def maximum_even_each_list_in_lol (lol):
    evens=[0]  # Dirty trick to ensure that regardless of the `even` numbers
               # found, you'll always have a zero among the results.
    for number in lol:
        if is_even(number):
            evens.append(number)
    print "I found these even numbers (%s) among %s" % (evens, lol)
    return max(evens)  # Return the maximum value among the `evens` list.
results = []
for lst in [[1,2,3],[6,5,4],[5,7,9]]:
    print "Studying %s" % lst
    results.append(maximum_even_each_list_in_lol(lst))
print "This is what I found: %s" % results
</code></pre>
<p>I added some <code>print</code> statements to help follow what the code is doing. The code above will output:</p>
<pre><code>Studying [1, 2, 3]
I found these even numbers ([0, 2]) among [1, 2, 3]
Studying [6, 5, 4]
I found these even numbers ([0, 6, 4]) among [6, 5, 4]
Studying [5, 7, 9]
I found these even numbers ([0]) among [5, 7, 9]
This is what I found: [2, 6, 0]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>here you go:</p>
<pre><code>&gt;&gt;&gt; [ max(x) if len(x)&gt;0 else 0 for x in [ list(filter(lambda x:x%2==0,x)) for x in a ]]
[2, 6, 0]
</code></pre>
<p>i used lambda to check for even number, then filter to save value for true, then max if lenght of list greater then 0 else 0</p>
</div>
<span class="comment-copy">from where this 0 came from??</span>
<span class="comment-copy">where did you get the 0 from ?</span>
<span class="comment-copy">and why 4 did't turn up??</span>
<span class="comment-copy">it should be [2,6,4], for even number</span>
<span class="comment-copy">Perhaps for lists that contains only odd items OP wants 0 as output.</span>
<span class="comment-copy">For the 0 part, I don't know how, but my professor put the 0 as a return value, so I am bit confused by the question myself.</span>
<span class="comment-copy">The example result in OP specification has zero in place of <code>None</code>. Otherwise I really appreciate your answer.</span>
<span class="comment-copy">Updated to have <code>0</code> as the default.</span>
<span class="comment-copy">It works. Thank you for the code :)</span>
<span class="comment-copy">Python 3.4+ to be precise. :-)</span>
<span class="comment-copy">@AshwiniChaudhary, yep forgot to add the link</span>
