<div class="post-text" itemprop="text">
<pre><code>initial_p = input("Enter the initial point")

def game():
    x = 1
    guess = input("Guess value")
    if guess == 1:
        initial_p += 2
    else:
        initial_p -= 2

game()

replay = raw_input("Do you want to try it again? Y/N")
if replay == 'Y':
    game()
</code></pre>
<p>each game needs 2 points</p>
<p>I made it really simple just to explain this stuff easily</p>
<p>So to play each game, it requires you to have at least 2 points otherwise it becomes game over
if you guess right, you earn 2 points
if not, you lose 2 points.</p>
<p>with the outcome(points), you can either play again or quit</p>
<p>if you play again, you pay two points</p>
<p>HOWEVER, when you play for the second time or more, that line</p>
<p><code>initial_p += 2</code> and <code>initial_p -= 2</code> still have points that you typed in the very beginning</p>
<p>I'm so confused right now I can't even explain right</p>
<p>But if you understand my explanation, Please help me</p>
<p>Thank You</p>
</div>
<div class="post-text" itemprop="text">
<p>The quick and dirty response is to change to the following. </p>
<pre><code>def game(initial_p):
    #Your Code
    return initial_p


initial_p = game(initial_p)
</code></pre>
<p>Basically, you're placing the global variable as a local variable and reassigning the global. </p>
<p>This should also happen at the very bottom as well. </p>
<p>Also, you can just ask for the input inside of the function, and have a default argument of <code>initial_p</code>. </p>
<p>For example,</p>
<pre><code>def game(first_time=True)
    #Ask for input with if first_time:
    return initial_p
</code></pre>
<p>And modify some global point value or something from the return. </p>
<p>Sorry if this is sloppy, was written on my mobile. </p>
</div>
<span class="comment-copy">Please correctly format your post. Apart from that, I think you are having problem understanding scope of the variables and not their names. <code>initial_p</code> appears to be a global variable currently but is accessed improperly.</span>
<span class="comment-copy">Possible dupe or related to <a href="http://stackoverflow.com/q/423379/2823755">Using global variables in a function other than the one that created them</a>.  Another possible answer - <a href="http://stackoverflow.com/a/370363/2823755">stackoverflow.com/a/370363/2823755</a>. And <a href="http://stackoverflow.com/a/146365/2823755">stackoverflow.com/a/146365/2823755</a></span>
<span class="comment-copy"><a href="http://stackoverflow.com/a/292502/2823755">stackoverflow.com/a/292502/2823755</a>.  And finally from the Tutorial in the docs <a href="https://docs.python.org/3/tutorial/classes.html#python-scopes-and-namespaces" rel="nofollow noreferrer">docs.python.org/3/tutorial/â€¦</a></span>
