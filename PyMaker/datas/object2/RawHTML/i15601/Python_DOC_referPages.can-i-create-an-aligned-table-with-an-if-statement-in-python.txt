<div class="post-text" itemprop="text">
<p>I have data from a CSV file that tells whether or not a basketball player is obese.</p>
<p>I need to make a perfectly aligned table from this data; I have all the information to tell whether or not a player is obese. However, I have an "if" statement that prints out the values of each obese player and I need to make this print out in neat, aligned rows.</p>
<p>I have:</p>
<pre><code>obese_count = 0
total_count = 0


print (" " * 5, "First Name", " " * 2, "Last Name", " " * 2, "Height"," " * 2,"Weight"," " * 2, "BMI") # header
print ("- " * 20)
for player in players:
    if has_data(player):
        if is_obese(player):
            print (" " * 5, player["firstname"]," " * 5, player["lastname"]," " * 9, player["h_feet"]," " * 9,player["h_inches"]," " * 5, player["weight"])
            obese_count += 1
        total_count += 1
</code></pre>
<p>which is returning a very sloppy table:</p>
<pre class="lang-none prettyprint-override"><code>      First Name    Last Name    Height    Weight    BMI
- - - - - - - - - - - - - - - - - - - - 
      Carlos       Boozer           6           9       280
      Elton       Brand           6           8       275
      Glen       Davis           6           9       289
      Thomas       Hamilton           7           2       330
      James       Lang           6           10       305
      Jason       Maxiell           6           7       280
      Oliver       Miller           6           9       280
      Craig       Smith           6           7       272
      Robert       Traylor           6           8       284
      Jahidi       White           6           9       290
</code></pre>
<p>I was wondering if there is any way I could tidy this up, so that I can have a neat and aligned table or at least aligned rows that aren't spaced out differently.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/2/library/string.html#format-examples" rel="nofollow">String formatting</a> is your friend.</p>
<p>For instance,</p>
<pre><code>print '{:&lt;10} {:&lt;10} {:&gt;2}\' {:&gt;2}" {:&gt;6}'.format(player["firstname"], player["lastname"], player["h_feet"], player["h_inches"], player["weight"])
</code></pre>
<p>This should return something like this:</p>
<pre><code>Carlos     Boozer      6'  9"    280
Elton      Brand       6'  8"    275
Glen       Davis       6'  9"    289
</code></pre>
<p>As an aside: it looks like your table has a header for BMI, but there's not a corresponding field in your player dictionary.</p>
</div>
<div class="post-text" itemprop="text">
<p>Python <a href="https://docs.python.org/2/tutorial/inputoutput.html" rel="nofollow">documentation</a> explains it very well.  </p>
<pre><code>&gt;&gt;&gt; for x in range(1,11):
...     print '{0:2d} {1:3d} {2:4d}'.format(x, x*x, x*x*x)
...
1   1    1
2   4    8
3   9   27
4  16   64
5  25  125
6  36  216
7  49  343
8  64  512
9  81  729
10 100 1000
</code></pre>
</div>
<span class="comment-copy"><a href="https://docs.python.org/2/tutorial/inputoutput.html" rel="nofollow noreferrer">Fancier Output Formatting</a></span>
<span class="comment-copy">As shown in the <a href="https://docs.python.org/3/library/string.html#formatspec" rel="nofollow noreferrer">Format Specification Mini-Language</a> documentation you can use <code>width</code> to define how wide each field is coupled with one of the <code>align</code> characters (<code>"&lt;"</code> | <code>"&gt;"</code> | <code>"="</code> | <code>"^"</code>) to get it looking nice.</span>
<span class="comment-copy">Thanks I just added that in there; I didn't even notice. But I am getting an error when I try your suggestion: <code>TypeError: non-empty format string passed to object.__format__</code>. Is there any way I can fix this?</span>
<span class="comment-copy">I'm not completely sure what's causing this error, but it's something to do with the type of data you're passing to <code>.format()</code>. I'd guess it's the numbers, so I'd wrap <code>player("h_feet")</code> in <code>str()</code> to get: <code>str(player("h_feet"))</code>. Do the same for h_inches, weight, and BMI, and see if that works.</span>
<span class="comment-copy">FWIW, I made the numbers strings when writing the code for the example. <code>players = [{'firstname':'Carlos','lastname':'Boozer','h_feet':'6','h_inches':'9','weight':'280'}, ...</code></span>
