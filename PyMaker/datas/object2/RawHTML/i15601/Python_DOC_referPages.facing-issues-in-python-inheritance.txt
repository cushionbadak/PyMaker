<div class="post-text" itemprop="text">
<p>Trying to test inheritance with python. My scenario is like below..</p>
<p><strong>In a folder I’ve a base class named Asset_Base and a child class named Asset and they looks like below..</strong></p>
<p>in <code>Asset_Base.py</code> file:</p>
<pre><code>class Asset_Base(object):
    def __init__(self):
        pass

    def sayHello(self):
        print('Hello!')
</code></pre>
<p>in <code>Asset.py</code> file:</p>
<pre><code>import Asset_Base
class Asset(Asset_Base):
    def __init__(self):
        pass

    def sayHello(self):
        super().sayHello()

a = Asset()
a.sayHello()
</code></pre>
<p>while i run this Asset class <strong>getting this error</strong>..</p>
<pre><code>class Asset(Asset_Base):
TypeError: module.__init__() takes at most 2 arguments (3 given)
</code></pre>
<p><strong>After trying few things found it works fine if i just change the import statement like below</strong> </p>
<p><code>from Asset_Base import *</code></p>
<p><strong>I’m new to python and not sure about the difference between</strong> </p>
<p><code>import Asset_Base</code> and <code>from Asset_Base import *</code></p>
<p><strong>Can anyone please explain it a bit.</strong></p>
<p><em>Thanks in advance.</em></p>
</div>
<div class="post-text" itemprop="text">
<p>That's because in your first example, your class is inheriting from the <code>Asset_Base</code> <em>module</em> (that is, the .py file) -- <em>not</em> the class of the same name that it contains.</p>
<p>Note how your error message talks about <code>module.__init__()</code>.</p>
<p>Change your import statement so that it reads <code>from Asset_Base import Asset_Base</code>.</p>
<p>In addition, "module contains a class of the same name" is an anti-pattern in Python. Avoid doing that.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>import Asset_Base
</code></pre>
<p>imports a module (a file)</p>
<pre><code>from Asset_Base import * 
</code></pre>
<p>You import everything that is in your file (in this case the class Asset_Base)</p>
<p>For more information take a look into the Python <a href="https://docs.python.org/3/tutorial/modules.html" rel="nofollow">documentation</a>.</p>
</div>
<span class="comment-copy">Check out <a href="https://docs.python.org/3/tutorial/classes.html" rel="nofollow noreferrer">9.1 and 9.2</a> and <a href="https://docs.python.org/3/tutorial/modules.html#modules" rel="nofollow noreferrer">6.0 Modules</a> of the Python tutorial.</span>
<span class="comment-copy">Also, note that avoiding the class having the same name as the module is easily accomplished by following the PEP-8 guidelines for names: <code>asset_base.py</code> would contain the class <code>AssetBase</code>, at the very least.</span>
