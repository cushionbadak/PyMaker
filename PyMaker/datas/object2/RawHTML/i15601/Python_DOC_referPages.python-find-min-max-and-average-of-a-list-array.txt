<div class="post-text" itemprop="text">
<p>I am having hard time to figure out how to find min from a list
for example </p>
<p><code>somelist = [1,12,2,53,23,6,17]</code></p>
<p>how can I find min and max of this list with defining (<code>def</code>) a function</p>
<p>I do not want to use built-in function <code>min</code></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>from __future__ import division

somelist =  [1,12,2,53,23,6,17] 
max_value = max(somelist)
min_value = min(somelist)
avg_value = sum(somelist)/len(somelist)
</code></pre>
<p>If you want to manually find the minimum as a function:</p>
<pre><code>somelist =  [1,12,2,53,23,6,17] 

def my_min_function(somelist):
    min_value = None
    for value in somelist:
        if not min_value:
            min_value = value
        elif value &lt; min_value:
            min_value = value
    return min_value
</code></pre>
<p>Python 3.4 introduced the <a href="https://docs.python.org/3/library/statistics.html" rel="noreferrer"><code>statistics</code></a> package, which provides <code>mean</code> and additional stats:</p>
<pre><code>from statistics import mean, median

somelist =  [1,12,2,53,23,6,17]
avg_value = mean(somelist)
median_value = median(somelist)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Return min and max value in tuple:</p>
<pre><code>def side_values(num_list):
    results_list = sorted(num_list)
    return results_list[0], results_list[-1]


somelist = side_values([1,12,2,53,23,6,17])
print(somelist)
</code></pre>
</div>
<span class="comment-copy">would like to point out that that average value is susceptible to division by 0 errors.</span>
<span class="comment-copy">yes, but I want to find like in array list. What I mean by that is set for min = array[0] then, for i in array, if i =&lt; 0 print min, I need to know how can find min and max this way, I tried but it doesn't work, not sure why</span>
<span class="comment-copy">I'm not sure what you want.  Do you want the index of the minimum value?</span>
<span class="comment-copy">def FindMinimum(array):         #write your code here         return minimum  def FindMaximum(array):         #write your code here         return maximum  def FindAverage(array):         #write your code here         return average  list = [2,4,6,8,1,3,5,7] print "min: ", FindMinimum(list) print "max: ", FindMaximum(list) print "average: ", FindAverage(list)                                    I think this is the one of the example had on codecademy.com i am trying to figure this out at the moment, if you can help me with this I will appreciate so much, Thank you</span>
<span class="comment-copy">I think it's best if you figure it out and write it yourself.  If you have problems understanding please ask.</span>
<span class="comment-copy">This is the best way to find the min/max using built-ins.  Sorting is O(nlogn), getting min/max is O(1)</span>
<span class="comment-copy">@Baldrick: Actually, min() and max() are O(n). So, sorting is slower.</span>
<span class="comment-copy">@Hinni after sorting min is at index <code>0</code> and max is at index <code>length</code> (or vice versa). Once sorted there is no need to use <code>min()</code> or <code>max()</code> to find those values.</span>
