<div class="post-text" itemprop="text">
<p>I fear that I am dump as hell, but I do not have a clue how to execute a methode from a class if the variable name is overwritten in the class instance.</p>
<pre><code>class foo():
    def do_stuff(self, name):
        self.new = name

inst = foo()
inst.do_stuff("Hello")
inst.do_stuff = 19
</code></pre>
<p>This is the starting position. While the thing is running, a variable <code>do_suff</code> is declarated in <code>inst</code> so the function gets overwritten. My problem is, how do I manage that the method is called rather than the variable if I want to change variable <code>new</code> of <code>inst</code>?</p>
<p>I thought <code>super()</code> is the way to go, but I have no idea how to achieve this properly. Unforunately my english is not that good so I may screwed up asking search the correct questions.</p>
</div>
<div class="post-text" itemprop="text">
<p>You dont have a parent and a child, you have an instance of a class, super is used when you overwite a method of a base class</p>
<p><a href="https://docs.python.org/3/library/functions.html?highlight=super#super" rel="nofollow">super</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Why would you have to overwrite the attribute <code>do_stuff</code>? You shouldn't do that.</p>
<pre><code>foo.do_stuff(inst)
</code></pre>
</div>
<span class="comment-copy">How did you try to use <code>super</code>, and in what way didn't it work?</span>
<span class="comment-copy">My example was pretty bad, I see now. What I want to do is writing something like a "database" where "Table" inherits from dict so I can create new tables by foo["table1"] = Table().  My problem is if there is a new table with the same name as a already existing function, I think I need to call the function via super().</span>
