<div class="post-text" itemprop="text">
<p>E.g., why can't I do:</p>
<pre><code>(0,1) + (2,2)
</code></pre>
<p>and get:</p>
<pre><code>(2,3)
</code></pre>
<p>as a result?</p>
</div>
<div class="post-text" itemprop="text">
<p>Because the <code>+</code> operator is used to make a new tuple that is the combination of two other tuples.  That is just how Python was designed.</p>
<p>To do what you want, you can use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip</code></a> and a <a href="https://docs.python.org/3/reference/expressions.html#grammar-token-generator_expression" rel="nofollow">generator expression</a>:</p>
<pre><code>&gt;&gt;&gt; t1 = (0,1)
&gt;&gt;&gt; t2 = (2,2)
&gt;&gt;&gt; tuple(x + y for x, y in zip(t1, t2))
(2, 3)
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>'+' operator concatenate tuples . if you want to sum tuples item you can use:</p>
<pre><code>tuple(sum(x) for x in zip((0,1),(2,2)))
</code></pre>
<p>or </p>
<pre><code>tuple(map(sum,zip((0,1),(2,2))))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Its because of you add tow tuple and <code>+</code> operation for tuples concatenate them ! you can use <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow"><code>map</code></a> and <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow"><code>zip</code></a> functions for that :</p>
<pre><code>&gt;&gt;&gt; map(sum,zip((0,1),(2,2)))
[2, 3]
</code></pre>
<p>or use a generator : </p>
<pre><code>&gt;&gt;&gt; tuple(i+j for i,j in zip((0,1),(2,2)))
(2, 3)
</code></pre>
<p>and a better way with <code>operator.add</code>: </p>
<pre><code>&gt;&gt;&gt; from operator import add
&gt;&gt;&gt; map(add,(0,1),(2,2))
[2, 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since Python thinks of tuples as lists that are immutable, adding two tuples is just like adding two lists. So, just as adding two lists will concatenate them:</p>
<pre><code>&gt;&gt;&gt; [1, 2] + [3, 4]
[1, 2, 3, 4]
</code></pre>
<p>adding two tuples will also concatenate them:</p>
<pre><code>&gt;&gt;&gt; (1, 2) + (3, 4)
(1, 2, 3, 4)
</code></pre>
<p>You can create a new tuple that consists of the sum of each pair with a few of Python's built-in functions:</p>
<pre><code>&gt;&gt;&gt; tuple(map(sum, zip((0, 1), (2, 2))))
(2, 3)
</code></pre>
<p>This works by using <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow"><code>zip()</code></a> on the two tuples to make a list of pairs:</p>
<pre><code>&gt;&gt;&gt; zip((0, 1), (2, 2))
[(0, 2), (1, 2)]
</code></pre>
<p>And using <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow"><code>map()</code></a> to apply <a href="https://docs.python.org/2/library/functions.html#sum" rel="nofollow"><code>sum()</code></a> on each element of that list, to get a list of sums:</p>
<pre><code>&gt;&gt;&gt; map(sum, zip((0, 1), (2, 2)))
[2, 3]
</code></pre>
<p>And, finally, using <a href="https://docs.python.org/2/library/functions.html#tuple" rel="nofollow"><code>tuple()</code></a> to turn that from a list into a tuple.</p>
</div>
<div class="post-text" itemprop="text">
<p>Element-wise addition is a more specialized operation than concatenation. Fewer tuples could be added together: what would <code>('a','b') + (1,2,)</code> equal? 
Or <code>('a', 'b') + (1,2,3)</code> for that matter?</p>
<p>Since concatenation is arguably the more commonly desired operation, and importantly, well defined for all tuples, it makes sense that addition of tuples performs concatenation.</p>
</div>
<span class="comment-copy">Simple answer - that is now how the + operator is defined for tuples</span>
<span class="comment-copy">You could use <code>complex</code> instead.</span>
<span class="comment-copy">See <a href="http://stackoverflow.com/a/845758/1084416">this answer</a> to <a href="http://stackoverflow.com/questions/845112/concise-vector-adding-in-python">this question</a>.</span>
<span class="comment-copy">Because then you couldn't use <code>+</code> to concatenate the tuples.</span>
<span class="comment-copy">Right... yeah I forgot about that.  I was actually trying to use subtraction of tuples with -, which just isn't defined.</span>
<span class="comment-copy">good answer dude</span>
