<div class="post-text" itemprop="text">
<p>Assuming I have a list of lists:</p>
<pre><code>ll = [
         ['a', 'b', 'c'],
         [1, 2, 3],
         [4, 5, 6],
         [7, 8, 9]
     ]
</code></pre>
<p>I want to convert it into a dictionary:</p>
<pre><code>dl = dict(
    a = [1, 4, 7],
    b = [2, 5, 8],
    c = [3, 6, 9]
)
</code></pre>
<p>I currently have following code that does this:</p>
<pre><code>dl = dict((k, 0) for k in ll[0])
for i in range(1, len(ll)):
    for j in range(0, len(ll[0])):
        dl[ll[0][j]].append(ll[i][j])
</code></pre>
<p>Is there a simpler/elegant way to do this?</p>
<p>I am using Python 3, if that matters.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use a dict-comprehension with <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip()</code></a>:</p>
<pre><code>&gt;&gt;&gt; {k: v for k, *v in zip(*ll)}
{'c': [3, 6, 9], 'a': [1, 4, 7], 'b': [2, 5, 8]}
</code></pre>
<p>Here <code>zip()</code> with splat operator (<code>*</code>) transposes the list items:</p>
<pre><code>&gt;&gt;&gt; list(zip(*ll))
[('a', 1, 4, 7), ('b', 2, 5, 8), ('c', 3, 6, 9)]
</code></pre>
<p>Now we can loop over this iterator return by <code>zip</code> and using the <a href="https://www.python.org/dev/peps/pep-3132" rel="nofollow">extended iterable packing</a> introduced in Python 3 we can get the key and values very cleanly from each tuple.</p>
</div>
<span class="comment-copy">Check this too <a href="http://stackoverflow.com/questions/4576115/python-list-to-dictionary" title="python list to dictionary">stackoverflow.com/questions/4576115/python-list-to-dictionary</a></span>
<span class="comment-copy">Great. Exactly what I was looking for. Thanks.</span>
