<div class="post-text" itemprop="text">
<p>I was writing a code to find the average household income, and how many families are below poverty line. </p>
<p>this is my code so far</p>
<pre><code>def povertyLevel():

inFile = open('program10.txt', 'r')
outFile = open('program10-out.txt', 'w')

outFile.write(str("%12s  %12s %15s\n" % ("Account #", "Income", "Members")))

lineRead = inFile.readline()       # Read first record
while lineRead != '':              # While there are more records

   words = lineRead.split()        # Split the records into substrings
   acctNum = int(words[0])         # Convert first substring to integer
   annualIncome = float(words[1])  # Convert second substring to float
   members = int(words[2])         # Convert third substring to integer

   outFile.write(str("%10d  %15.2f  %10d\n" % (acctNum, annualIncome, members)))

   lineRead = inFile.readline()    # Read next record


# Close the file.
inFile.close() # Close file
</code></pre>
<h1>Call the main function.</h1>
<p>povertyLevel()</p>
<p>I am trying to find the average of annualIncome and what i tried to do was </p>
<p>avgIncome = (sum(annualIncome)/len(annualIncome))
outFile.write(avgIncome)</p>
<p>i did this inside the while lineRead. however it gave me an error saying</p>
<p>avgIncome = (sum(annualIncome)/len(annualIncome))
TypeError: 'float' object is not iterable </p>
<p>currently i am trying to find which household that exceeds the average income.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>avgIncome</code> expects a <a href="https://docs.python.org/3/glossary.html#term-sequence" rel="nofollow noreferrer">sequence</a> (such as a <a href="https://docs.python.org/3/library/stdtypes.html#lists" rel="nofollow noreferrer"><code>list</code></a>) (Thanks for the <a href="https://stackoverflow.com/a/27262807/1394393">correction</a>, Magenta Nova.), but its argument <code>annualIncome</code> is a <code>float</code>:</p>
<pre><code>annualIncome = float(words[1])
</code></pre>
<p>It seems to me you want to build up a list:</p>
<pre><code>allIncomes = []
while lineRead != '':
    ...
    allIncomes.append(annualIncome)

averageInc = avgIncome(allIncomes)
</code></pre>
<p>(Note that I have one less indentation level for the <code>avgIncome</code> call.)</p>
<p>Also, once you get this working, I highly recommend a trip over to <a href="https://codereview.stackexchange.com/">https://codereview.stackexchange.com/</a>. You could get a lot of feedback on ways to improve this.</p>
<p><strong>Edit:</strong></p>
<p>In light of your edits, my advice still stands. You need to <em>first</em> compute the average before you can do comparisons. Once you have the average, you will need to loop over the data again to compare each income. Note: I advise saving the data somehow for the second loop, instead of reparsing the file. (You may even wish to separate reading the data from computing the average entirely.) That might best be accomplished with a new object or a <code>namedtuple</code> or a <code>dict</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>sum() and len() both take as their arguments an <a href="https://docs.python.org/2/glossary.html#term-iterable" rel="nofollow">iterable</a>. read the python documentation for more on iterables. you are passing a float into them as an argument. what would it mean to get the sum, or the length, of a floating point number? even thinking outside the world of coding, it's hard to make sense of that. </p>
<p>it seems like you need to review the basics of python types. </p>
</div>
<span class="comment-copy">avgIncome.(annualIncome) =&gt; what's the dot for?</span>
<span class="comment-copy">sorry that was just a quick type when i wrote it</span>
<span class="comment-copy">youre calling sum on a float, sum expects a list?</span>
<span class="comment-copy">@spuriousarbiter I've added some notes to my answer in response to your edits.</span>
<span class="comment-copy">Two minor nits: First, it's <code>iterable</code>, not <code>iteratable</code>. More importantly, this <i>won't</i> work on an arbitrary iterable; what you want here is a <i>sequence</i>. (While <code>sum</code> will work on any arbitrary iterable, <code>sum(x)/len(x)</code> will not, for two reasons: <code>len</code> only works on <i>sized</i> collections, which not all iterables are, and the whole thing only makes sense for non-iterator iterables, because otherwise <code>x</code> will be empty after the <code>sum</code> call. Which "sequence" isn't quite the right thing either, it's usually close enough for practical purposes.)</span>
<span class="comment-copy">Anyway, I've edited the answer to say <code>sequence</code>; feel free to revert and fix it better if you want to, of course.</span>
<span class="comment-copy">@abarnert "Iteratable" was a typo; thanks for the corrections.</span>
<span class="comment-copy">Well, if you knew that Python considers tuples to be sequences, and knew that mathematically a single number is the same thing as a 1-tuple of that number (but didn't know that wasn't true in Python), you might expect <code>sum(2.3)</code> to be <code>2.3</code>… But that probably applies to 2 people in the universe, and probably not the asker. :)</span>
<span class="comment-copy">@abarnert I don't think a 1-tuple is the same as a number. A tuple is defined as an ordered list of elements. A 1-tuple is a list of length 1, whereas a number isn't a list at all. The difference is as big as a set with 1 element or a vector with 1 dimension from a standalone number.</span>
<span class="comment-copy">@jpmc26: A Python 1-tuple of a single number obviously isn't the same as a number, but the way tuples are usually defined in set theory—or, for that matter, in programming langauges like Haskell—they are the same. The type of a tuple of 3 integers is <code>int * int * int</code>; the type of a tuple of an integer and a float is <code>int * float</code>; the type of a tuple of just an integer is <code>int</code>. Of course in such languages, there is not function to get the length or sum of a tuple, because such tuples aren't sequences (in the sense that lists are).</span>
<span class="comment-copy">@MagentaNova: As I mentioned to jpmb26 in his answer, <a href="https://docs.python.org/3/library/functions.html#len" rel="nofollow noreferrer"><code>len</code></a> does <i>not</i> take any iterable, it takes a sequence or other sized collection. For example, if you feed in a generator or other iterator, or a third-party single-linked-list type that's iterable but not sized, this isn't going to work.</span>
<span class="comment-copy">@abarnet: thanks for refining the point, but did that really merit a downvote?</span>
