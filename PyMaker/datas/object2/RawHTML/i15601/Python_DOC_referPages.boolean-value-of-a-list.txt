<div class="post-text" itemprop="text">
<p>I made a function and my result is a list:</p>
<pre><code>[3, 3, 3]
</code></pre>
<p>Now I need to return a boolean value. If all of the elements are 2 or higher, I need to return True otherwise I need to return false. In this case it would be : True. ( Because all the elements are 3 and 3 &gt; 2)
Is there any code to do this quickly?</p>
<p>I tried to make a FOR - loop like:</p>
<pre><code>for i in [3, 3, 3]: if i &gt;= 2: return True else: return False
</code></pre>
<p>I think this is correct but I want to know if there is a faster method.</p>
<p>thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Make a <a href="https://docs.python.org/3/glossary.html#term-generator" rel="nofollow">generator</a> (<a href="https://docs.python.org/3/glossary.html#term-generator-expression" rel="nofollow">generator expression</a> here) that yields booleans and pass it to <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow"><code>all</code> function</a>:</p>
<pre><code>&gt;&gt;&gt; all(x &gt;= 2 for x in [3, 3, 3])
True
</code></pre>
<p>I see you posted your code, it's not correct as it will only check the first element of the list. You can fix it:</p>
<pre><code>for i in your_list: 
    if i &lt; 2: 
        return False # Return early
return True # if `i &lt; 2` was False for all elements in the list, return True
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>a= [3, 3, 3]
b=[elem for elem in a if elem &gt; 2]  
print (a==b)
</code></pre>
<p>Output: True</p>
<p>or in a more condensed way</p>
<pre><code>a= [3, 3, 3]
print([elem for elem in a if elem &gt; 2]==a)  
</code></pre>
<p>Output: True</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def areGreaterEqualThen2(lst):
    if lst:
        return lst[0] &gt;= 2 and areGreaterEqualThen2(lst[1:])
    return True
</code></pre>
<p>If you have to define your own function.</p>
<p>It also is a fast solution because if the first condition is false, the entire <code>and</code> returns false.</p>
</div>
<span class="comment-copy">Please show your efforts.</span>
<span class="comment-copy">okej I'm new here. This is my first question ever here. Next time I will show my efforts. Thx for the advice.</span>
<span class="comment-copy">The question was about a faster method, not slower and more complicated.</span>
<span class="comment-copy">Never thought, that someone would solve this problem recursively in Python.</span>
<span class="comment-copy">@Daniel I've done a lot of Haskell lately so this mindset stuck to me.</span>
