<div class="post-text" itemprop="text">
<p>I am trying to write a python script with several text files inside a subdirectory, e.g. </p>
<pre><code>python script.py --inputdir ~/subdirectory
</code></pre>
<p>which will execute each file inside this subdirectory. How can one use argparse to do this? Should you write a function to access and open each file?</p>
<pre><code>import argparse
parser = argparse.ArgumentParser()
parser.add_argument("--inputdir", help="path to your subdirectory",
                    required=True)
args = parser.parse_args()
</code></pre>
<p>Now, what do I do with <code>args.inputdir</code>? How do I extract files? </p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>How can one use argparse to do this? Should you write a function to access and open each file?</p>
</blockquote>
<p>That sounds likely since argparse shouldn't really need to know what to do with the commandline arguments -- just how to get them.  It probably looks something like:</p>
<pre><code>def process_file(filename):
    with open(filename, 'r') as file_input:
        pass  # do something here . . .

def process_directory(directory_name):
    for filename in os.listdir(directory_name):
        process_file(os.path.join(directory_name, filename))

process_directory(args.inputdir)
</code></pre>
<p>Here I've assumed that your directory contains only files (not more directories).  If it does contain more directories, you'll want to filter those out (maybe using <code>os.path.isdir</code>).</p>
</div>
<div class="post-text" itemprop="text">
<p>It's not a job of <code>argparse</code>.</p>
<p>Use <a href="https://docs.python.org/3/library/os.html#os.walk" rel="nofollow"><code>os.walk</code></a> to iterate files recursively.</p>
<pre><code>import os

for parent, dirnames, filenames in os.walk(args.inputdir):
    for fn in filenames:
        filepath = os.path.join(parent, fn)
        with open(filepath) as f:
            # Do something with `f`
</code></pre>
</div>
<span class="comment-copy">Define "execute" -- do you mean "for each file, do ./file", do you want python to import each file into the interpreter session, or do have a need to call the executing process before (e.g. <code>./my_script.sh</code>; <code>python my_file.py</code>)?</span>
<span class="comment-copy">I think <code>os.walk(args.inputdir)</code> should work</span>
<span class="comment-copy">@ShanZhengYang, Thank you for your feedback. I updated the answer accoridngly.</span>
