<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/20002503/why-does-a-b-or-c-or-d-always-evaluate-to-true">Why does `a == b or c or d` always evaluate to True? [duplicate]</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I managed to get this code to work before, but I've changed something accidentally and can't figure out what.
The code that will not work is:</p>
<pre><code>while True:                                                                             
    answer = input ("Would you like to play this game? Type yes if you would like to. Type no to end the program")
    if answer == 'no' or 'n' or 'No' or 'N':
        sys.exit()
    elif answer == 'yes' or 'y' or 'Yes' or 'Y':
        code = input("Input a three digit code. Must be more than 001 and less than 100.")
</code></pre>
<p>When I run the code and put in one of the answers, the program will not run the next part and gives no error message. 
In case it is necessary, I have put the code for the entire program below:</p>
<pre><code>import random                                                                           
import sys
while True:                                                                             
    answer = input ("Would you like to play this game? Type yes if you would like to. Type no to end the program")
    if answer == 'no' or 'n' or 'No' or 'N':
        sys.exit()
    elif answer == 'yes' or 'y' or 'Yes' or 'Y':
        code = input("Input a three digit code. Must be more than 001 and less than 100.") 
        try:                                                                                
            value = int(code)                                                               
        except:                                                                             
            print ("Invalid code")                                                          
            continue                                                                        
        if 1 &lt;= value &lt;= 100:                                                               
            print (code)                                                                    
            print ("Valid code")                                                            
            print ("I will now try to guess your number")                                   
            number = random.randint(1, 100)                                                 
            while number &gt; int(code) or number &lt; int(code):                                 
                print ("Failed attempt. Number guessed is")                                 
                number = random.randint(1, 100)                                             
                print (number)                                                              
            else:                                                                           
                if number == int(code):                                                 
                    print ("Your code is")                                              
                    print (code)                                                                     
        else:                                                                               
            print ("Invalid code")
</code></pre>
<p>EDIT: Thank you so much, the yes option is working now, but the program will still not exit when selecting any of the no options, as it did before. The edited code is:</p>
<pre><code>if answer in ('no', 'n', 'No', 'N'):
    sys.exit()
elif answer in ('yes', 'y', 'Yes', 'Y'):
</code></pre>
<p>I checked by printing the answer value, and i believe it is registering the no input but not executing the command that follows for some reason.</p>
<p>EDIT: I'm still a bit fuzzy on the logic, but changing it to exit() fixed the problem. It asks for confirmation when closing now, when it didn't before, but otherwise sorted.</p>
</div>
<div class="post-text" itemprop="text">
<p>Problem causing silent exit:</p>
<pre><code>if answer == 'no' or 'n' or 'No' or 'N':
    sys.exit()
</code></pre>
<p>That test is testing <code>answer == 'no'</code> as one test, then <code>'n'</code> as a separate test, and so on. <code>or</code> chains return when any test returns a "truthy" value (or the last evaluated value if none are truthy), so the test always ends up evaluating as "truthy" because a non-empty string like <code>'n'</code> is truthy. If you're trying to test for any one of those values, you'd do an "is contained in" test to see if <code>answer</code> is one of a recognized group of values, e.g.:</p>
<pre><code>if answer in ('no', 'n', 'No', 'N'):
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The reason is due to this expression:</p>
<pre><code>if answer == 'no' or 'n' or 'No' or 'N':
</code></pre>
<p>In python, the above is exactly the same as this:</p>
<pre><code>if (answer == 'no') or ('n' != '') or ('No' != '') or ('N' != ''):
</code></pre>
<p>Since all but the first expression evaluates to true, the whole expression is true. </p>
<p>The simplest solution is to convert your input to lowercase and trim off any extra space, then check if the answer is in a list of allowable answers so that you can easily compare for "n", "N", "no", "NO", "No", "nO". </p>
<pre><code>if answer.strip().lower() in ("n", "no"):
</code></pre>
</div>
<span class="comment-copy">Please make sure you get the indentation correct. It's <b>critical</b> in Python.</span>
<span class="comment-copy">You have an infinite loop, because the <code>if answer</code> test is not inside <code>while True:</code></span>
<span class="comment-copy">@Barmar: Since it's not prompting again, probably an indentation issue here, but not in the original code. If it was in the original code, they'd be getting prompted over and over, not silently exiting (or stalling, the OP isn't clear, but as I note in my answer, you'd expect a silent <code>exit</code> here).</span>
<span class="comment-copy">or <code>if answer.lower() in ('no', 'n')</code></span>
<span class="comment-copy">@user3100115: I avoided that to precisely match intended behavior; <code>"NO"</code> would be accepted by that, but it's not in the "official" set of recognized inputs. But if <code>"NO"</code> (and <code>"nO"</code>) is acceptable, then testing a smaller set after lower casing is better for simpler code if nothing else.</span>
<span class="comment-copy">Well, if <code>'no' or 'n' or 'No' or 'N' == True</code> and <code>answer != True</code> then why would the condition <code>answer == 'no' or 'n' or 'No' or 'N'</code> evaluate to true?</span>
<span class="comment-copy">@tglaria: Because it's not about <code>True</code> vs. <code>False</code>, it's "truthy" vs. "falsy". <code>if 'n':</code> will always evaluate as truthy and the block will execute. So if <code>answer</code> isn't <code>'no'</code>, then that evaluates to <code>False</code>, then the <code>or</code> says "but lets see if the next test is truthy" and evaluates <code>'n'</code>, which is truthy on its own. After that first <code>or</code>, <code>answer</code> isn't even checked. So either <code>answer == 'no`` returns </code>True` and shortcircuits to "whole expression is truthy" or it returns <code>False</code> and it then checks if <code>'n'</code> is truthy (which it is). Either way, whole expression is truthy.</span>
<span class="comment-copy">@tglaria: See <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="nofollow noreferrer">Operator precedence</a>. Note: The table is from lowest to highest (many languages use highest to lowest), so don't be confused; <code>or</code> is lower precedence than <code>==</code>.</span>
