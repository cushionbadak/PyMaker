<div class="post-text" itemprop="text">
<p>If I were to create a function:</p>
<pre><code>def function(x, y):
    """A simple function, but 'y' will be a tuple.
    """
    function = (a*b) + x
</code></pre>
<p>I'd like <code>y</code> to be (a, b), so when it comes to printing it out, I would have to do:</p>
<pre><code>print function(3,(4, 5))
=23
</code></pre>
<p>Where x is 3, a is 4 and b is 5. I understand that I can do this without having to turn the argument into a tuple, but it's an assignment I've been given and I have to do it this way.</p>
</div>
<div class="post-text" itemprop="text">
<p>Unpack <code>y</code> into <code>a</code> and <code>b</code></p>
<pre><code>&gt;&gt;&gt; def function(x, y):
...     """A simple function, but 'y' will be a tuple.
...     """
...     a,b = y
...     return (a*b) + x
... 
&gt;&gt;&gt; print function(3,(4, 5))
23
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You could also use the <a href="https://docs.python.org/3/library/operator.html#operator.mul" rel="nofollow"><code>operator</code></a> lib and unpack with <code>*</code>:</p>
<pre><code>from operator import mul
def function(x, y):
   """A simple function, but 'y' will be a tuple.
       """
   return x + mul(*y)

print(function(1,(3,4)))   
</code></pre>
<p>Will output </p>
<pre><code>13
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>By using the print statement, we can see you are using Python2, so you can unpack the tuple in the function declaration like this</p>
<pre><code>def function(x, (a, b)):
    """A simple function
    """
    return (a * b) + x

print function(3,(4, 5))
</code></pre>
<p>This syntax is no longer allowed in Python3, however running the script through "<a href="https://docs.python.org/3/library/2to3.html#using-2to3" rel="nofollow">2to3</a>" yields</p>
<pre><code>def function(x, xxx_todo_changeme):
    """A simple function
    """
    (a, b) = xxx_todo_changeme
    return (a * b) + x
</code></pre>
</div>
