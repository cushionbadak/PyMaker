<div class="post-text" itemprop="text">
<p>Consider following piece of code:</p>
<pre><code>from collections import namedtuple
point = namedtuple("Point", ("x:int", "y:int"))
</code></pre>
<p>The Code above is just a way to demonstrate as to what I am trying to achieve.
I would like to make <code>namedtuple</code> with type hints. </p>
<p>Do you know any elegant way how to achieve result as intended?</p>
</div>
<div class="post-text" itemprop="text">
<p>The prefered Syntax for a typed named tuple since 3.6 is</p>
<pre><code>from typing import NamedTuple

class Point(NamedTuple):
    x: int
    y: int = 1  # Set default value

Point(3)  # -&gt; Point(x=3, y=1)
</code></pre>
<p><strong>Edit</strong>
Starting Python 3.7, consider using Data Classes (your IDE may not yet support them for static type checking):</p>
<pre><code>from dataclasses import dataclass

@dataclass
class Point:
    x: int
    y: int = 1  # Set default value

Point(3)  # -&gt; Point(x=3, y=1)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <a href="https://docs.python.org/3/library/typing.html#typing.NamedTuple"><code>typing.NamedTuple</code></a></p>
<p>From the docs</p>
<blockquote>
<p><em>Typed version</em> of <code>namedtuple</code>.</p>
</blockquote>
<pre><code>&gt;&gt;&gt; import typing
&gt;&gt;&gt; Point = typing.NamedTuple("Point", [('x', int), ('y', int)])
</code></pre>
<p>This is present only in Python 3.5 onwards</p>
</div>
<span class="comment-copy">Also, starting with py3.7 you have the dataclass option:  <a href="https://docs.python.org/3/library/dataclasses.html" rel="nofollow noreferrer">docs.python.org/3/library/dataclasses.html</a></span>
<span class="comment-copy">@JohnE; The OP specifically asked for named tuples. Yes, many use cases of named tuples will be better served by data classes. But to quote the excellent <a href="http://www.attrs.org/en/stable/why.html#namedtuples" rel="nofollow noreferrer">Why not namedtuples</a>: <i>If you want a tuple with names, by all means: go for a namedtuple</i></span>
<span class="comment-copy">I declared it like this: <code>GeoPoint = NamedTuple('GeoPoint', [('longitude', float), ('latitude', float)])</code> then I try geo = GeoPoint(**data) where data is dict containing needed keys and values being <code>decimal.Decimal</code>, and no cast to float happens ;( no typerror either :( :( so how this <code>typing.NamedTuple</code> works? see <a href="https://gist.github.com/andilabs/15002176b2bda786b9037077fa06cc71" rel="nofollow noreferrer">gist.github.com/andilabs/15002176b2bda786b9037077fa06cc71</a></span>
<span class="comment-copy">@andi typing doesn't enforce or cast variables, afaik.</span>
