<div class="post-text" itemprop="text">
<p>Recently, I'm unable to use relative paths in my code while using PyCharm. For instance, a simple <code>open('test.txt', 'r')</code> will not work - whereupon I am sure the file exists in the same level as the running py file. PyCharm will return this error. </p>
<blockquote>
<p>FileNotFoundError: [Errno 2] No such file or directory:</p>
</blockquote>
<p>After reading answers online on StackOverflow, I have tried multiple options including:</p>
<ul>
<li>Changing <code>test.txt</code> to <code>./test.txt</code></li>
<li>Closing project, deleting the .idea folder, open the folder with code.</li>
<li>Reinstalling as well as installing the latest version of PyCharm.</li>
<li>Invalidating caches and restarting.</li>
</ul>
<p>None of these options have worked for me. Is there someway I can tell PyCharm to refresh the current working directory (or even to see where it thinks the current working directory is)?</p>
<p>Thanks in advance!</p>
<p>Edit: I should note that running the script in a terminal window will work. This appears to be a problem with PyCharm and not the script.</p>
</div>
<div class="post-text" itemprop="text">
<p>I have Pycharm 4.5, so things might have changed a bit.</p>
<p>Try going to Settings &gt; Project &gt; Project Structure</p>
<p>On this dialog, click your folder that has the source code in it, and then click the blue folder in the menu to note it as "source" folder. I believe this fixes a lot of the path issues in Pycharm</p>
<p>Here is the link to "content roots": <a href="https://www.jetbrains.com/pycharm/help/content-root.html">https://www.jetbrains.com/pycharm/help/content-root.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>Change:
Run &gt; Edit Configurations &gt; Working directory, 
which sets the working directory for a specific project. (This is on a Mac)</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/reference/import.html#__file__" rel="nofollow"><code>__file__</code></a> refers to file path. So you can use the following to refer file in the same directory:</p>
<pre><code>import os

dirpath = os.path.dirname(__file__)
filepath = os.path.join(dirpath, 'test.txt')
open(filepath, 'r')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In PyCharm, click on "run/edit configurations..."</p>
<p>Then find your script file in the "Python" dropdown menu. Check the "Working Directory" entry and change it if necessary.</p>
</div>
<div class="post-text" itemprop="text">
<p>Sometimes it is different. I solved my problem by clicking "Run" at the Pycharm's toolbar and then "Edit Configurations..." and I change my Interpreter to another actual one. Just changing it in the settings does not help, but this opperation already does ;)</p>
</div>
<div class="post-text" itemprop="text">
<p>I too had the same issue few minutes ago...but,with the latest version of PyCharm it is resolved by simply using the relative path of that file..
For instance, a simple f = open('test', 'r') will work.</p>
</div>
<div class="post-text" itemprop="text">
<p>A little clarification for mac users. In mac, what @andere said above is correct for setting working directory. However, if your code is in a different folder, say <code>working_dir/src/</code> (like classic java/scala file structure) in that case you still need to set your Sources Root. In mac's PyCharm this can be done by right clicking on the <code>src/</code> folder &gt; Mark Directory as &gt; Sources Root. Helped me with lot of similar import issues. Hope this helps someone.</p>
</div>
<span class="comment-copy">you can put this in your script to see the current working directory  <code>import os  print(os.getcwd()) </code></span>
<span class="comment-copy">Interesting, it says that it's at <code>C:\Program Files (x86)\JetBrains\PyCharm 5.0.2\jre\jre\bin</code></span>
<span class="comment-copy">Are you running with elevated permissions on the command line? If you are on a Unix like system then you should check your permissions for the file</span>
<span class="comment-copy">nvm, you are on windows :)</span>
<span class="comment-copy">It was a similar fix that I just found (<a href="http://stackoverflow.com/questions/30353714/python-flask-app-runs-from-wrong-folder-after-run-by-pycharm-on-127-0-0-1">link here</a>), I had to add the working directory by clicking on the project name on the top right and editing its configurations. It seems counter intuitive to have to add this extra step - perhaps there was some issues in creating the project in the first place. I'll marks yours as correct since it was the closest!</span>
<span class="comment-copy">Sadly this didn't work for me on OSX - even though I had the root of my project set as a Source folder, where my script is, the Runner was unable to locate the script. The only solution I found was @andere's below, where you explicitly set the working directory to the absolute path. I'm not sure if this breaks when the project is moved...</span>
<span class="comment-copy">@meowsqueak Glad you worked it out... With your problem I also typically us <code>os.chir(directory_path)</code> using a directory path i split from <code>__file__</code>. Doing that helps when running the script outside of an IDE and in the event that the script is called from a directory other than where the script and text file is located.</span>
<span class="comment-copy">I like your solution better than mine :) I was trying to keep it at the Pycharm level though haha</span>
<span class="comment-copy">Thanks! My problem was more focused in PyCharm but good to know that I could use the os module too!</span>
