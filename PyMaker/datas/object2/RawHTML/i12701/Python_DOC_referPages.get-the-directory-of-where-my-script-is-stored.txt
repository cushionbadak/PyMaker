<div class="post-text" itemprop="text">
<p>I am writing a Python script that has to execute a shell script. In my GIT repo I have plans to commit both (Python program + Shell script) in same directory in my repo. </p>
<p>My issue is that when someone pulls out my code and wants to run my Python script from any relative / absolute location - I need to refer the shell script in the directory where my Python script resided.</p>
<p>I am not sure which one I should make use of</p>
<pre><code>os.path.dirname(os.path.realpath(__file__))
OR
os.path.abspath(os.path.dirname(__file__))
OR
os.path.dirname(os.path.abspath(__file__))
</code></pre>
<p>If I run my python script in same directory it prints same values - even if I execute from a separate directory and run my script as mentioned below I still get same values:</p>
<pre><code> python ./test/test1/1.py

/x/home02/myhome/test/test1
</code></pre>
<p>If it so which one I should actually make use of? What is the difference in between each of them?</p>
<p>========== Updated =========</p>
<p>I created a symbolic link to my code like as mentioned below:</p>
<pre><code>cd
ln -s /x/home02/myhome/test/test1/1.py 2.py
</code></pre>
<p>Now when I re-run my code as mentioned below -</p>
<pre><code>cd
python 2.py
cd test
python ../2.py
</code></pre>
<p>I get the below output</p>
<pre><code>/x/home02/myhome/test/test1
/x/home02/myhome
/x/home02/myhome
</code></pre>
<p>So I think the below one is the correct one as I am always getting the expected output:</p>
<pre><code>os.path.dirname(os.path.realpath(__file__))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Well first you want the directory, so let's use <code>os.path.dirname(...)</code></p>
<p>And <code>os.path.abspath(__file__)</code> should get you the path of the script, the difference between this and <code>os.path.realpath()</code> is the latter eliminates symbolic links, so not sure if you want that</p>
<p>So I'd use <code>os.path.dirname(os.path.abspath(__file__))</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The difference between <code>os.path.realpath</code> and <code>os.path.abspath</code> is the former eliminates symbolic links whereas the latter be the absolute path of a symbolic link.</p>
<p>In this case, the order of <code>os.path.dirname</code> and <code>abspath</code> or <code>realpath</code> shouldn't matter -- It would only matter if the file you passed in didn't have a directory portion.</p>
</div>
<div class="post-text" itemprop="text">
<p>You should use absolute path with directory name of pathname, like this:</p>
<pre><code>import os
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
</code></pre>
<p>Find the common pathname manipulations (os.path) documentation to find the difference between the usage here: <a href="https://docs.python.org/3/library/os.path.html" rel="nofollow">https://docs.python.org/3/library/os.path.html</a></p>
</div>
<span class="comment-copy">Your answer is here: <a href="http://stackoverflow.com/a/31867043">stackoverflow.com/a/31867043</a></span>
<span class="comment-copy">Please see my updated findings in my question .. thanks for giving the correct steps to resolve symbolic links protection in my code</span>
