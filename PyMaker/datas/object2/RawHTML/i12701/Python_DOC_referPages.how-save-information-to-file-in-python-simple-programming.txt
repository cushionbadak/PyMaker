<div class="post-text" itemprop="text">
<p>In the program below, I have created a class called "Tv" and from this class I have instantiated two objects, which are called "vardagsrums_tv" and "koks_tv". In the main function of the program, the user can change different settings in both of the objects, <em>e.g.</em>, volume and channel, through certain class methods I have created. So far, so good.</p>
<p>The heart of the matter, though, is that when the user has changed these different settings (volume, channel), I want to save them to a text file, so that when the user shuts down the program and reopens it, all the settings will be as the user left them.</p>
<p>This is my program:</p>
<pre><code>def main():
vardagsrums_tv = Tv(read_file(2), read_file(1))
koks_tv = Tv(read_file(5), read_file(4))
choice = None
print("***Välkommen till TV-simulatorn***")
while choice != "3":
    print("""
          1. Vardagsrums TV
          2. Köks TV
          3. Avsluta
          """)
    choice = input("Välj ett alternativ: ")
    print("")




    while choice == "1":
        print(vardagsrums_tv)
        print("""
              1. Byt kanal
              2. Sänk ljudvolymen
              3. Höj ljudvolymen
              4. Återvänd till huvudmenyn
              """)
        choice_one = input("Välj ett alternativ: ")
        if choice_one == "1":
            vardagsrums_tv.byt_kanal()
        elif choice_one == "2":
            vardagsrums_tv.sank_volym()
        elif choice_one == "3":
            vardagsrums_tv.hoj_volym()
        elif choice_one == "4":
            choice = None
            break
        else:
            print("Var god välj ett av de fyra alternativen.")




    while choice == "2":
        print(koks_tv)
        print("""
              1. Byt kanal
              2. Sänk ljudvolymen
              3. Höj ljudvolymen
              4. Återvänd till huvudmenyn
              """)
        choice_two = input("Välj ett alternativ: ")
        if choice_two == "1":
            koks_tv.byt_kanal()
        elif choice_two == "2":
            koks_tv.sank_volym()
        elif choice_two == "3":
            koks_tv.hoj_volym()
        elif choice_two == "4":
            choice = None
            break
        else:
            print("Var god välj ett av de fyra alternativen.")




    if choice not in ("1", "2", "3", None):
        print("Du har angivit ett felaktigt alternativ. Försök igen!")
lista_1 = []
lista_1.append(vardagsrums_tv)
print(lista_1)
lista_2 =[]
lista_2.append(koks_tv)
write_file(lista_1, lista_2)
</code></pre>
<p>In the end of my main() function, you'll notice that I am experimenting on how to save the current settings to my text-file. I create a list and try to somehow get the information out of my objects "vardagsrums_tv" and "koks_tv". I thought, if you can print an object and get the settings, then you might also be able to append it to a list. Obviously it didn't work as planned, since I got an error.</p>
<p>I hope you understand what I am trying to do: I want to save information from inside an object (vardagsrums_tv, koks_tv) to a text file, but I seem not to be able to reace the information I want.</p>
<p>Here is the rest of program:</p>
<pre><code>def read_file(val):
val = val
text_file = open("C:\\Users\\Viktor\\Desktop\\laboration_5.txt", "r")
textrader = text_file.readlines()
lista = []
for i in range(len(textrader)):
    text_line = textrader[i]
    element = text_line.split(",")
    lista += element[0], element[1], element[2]
text_file.close()
return lista[val]

def write_file(tv_1, tv_2):
rad_1 = tv_1
rad_2 = tv_2
for i in range(len(vardagsrums_tv)):
    rad_1 += vardagsrums_tv[i], ","
for i in range(len(koks_tv)):
    rad_2 += koks_tv[i], ","
text_file = open("C:\\Users\\Viktor\\Desktop\\laboration_5.txt", "w")
text_file.append(rad_1)
text_file.append(rad_2)
text_file.close

class Tv(object):
"""En vardagsrums TV"""
def __init__(self, kanal, volym):
    self.kanal = int(kanal)
    self.volym = int(volym)




def __str__(self):
    rep = "Vardagsrums TV\n"
    rep += "Kanal: " + str(self.kanal) + "\n"
    rep += "Volym: " + str(self.volym) + "\n"
    return rep




def byt_kanal(self):
    kanal = int(input("Ange din önskade kanal: "))
    while kanal &lt; 1 or kanal &gt; 100:
        print("Du har angivet en felaktig kanal. Vänlig ange en kanal mellan 1 och 100!")
        kanal = int(input("Ange din önskade kanal: "))
    self.kanal = kanal




def hoj_volym(self, hoj = 1):
    self.volym += hoj
    if self.volym &gt; 10:
        print("Du kan inte höja volymen ytterligare.")
        self.volym = 10




def sank_volym(self, sank = 1):
    self.volym -= sank
    if self.volym &lt; 0:
        print("Du kan inte sänka volymen ytterligare.")
        self.volym = 0


def main():
vardagsrums_tv = Tv(read_file(2), read_file(1))
koks_tv = Tv(read_file(5), read_file(4))
choice = None
print("***Välkommen till TV-simulatorn***")
while choice != "3":
    print("""
          1. Vardagsrums TV
          2. Köks TV
          3. Avsluta
          """)
    choice = input("Välj ett alternativ: ")
    print("")




    while choice == "1":
        print(vardagsrums_tv)
        print("""
              1. Byt kanal
              2. Sänk ljudvolymen
              3. Höj ljudvolymen
              4. Återvänd till huvudmenyn
              """)
        choice_one = input("Välj ett alternativ: ")
        if choice_one == "1":
            vardagsrums_tv.byt_kanal()
        elif choice_one == "2":
            vardagsrums_tv.sank_volym()
        elif choice_one == "3":
            vardagsrums_tv.hoj_volym()
        elif choice_one == "4":
            choice = None
            break
        else:
            print("Var god välj ett av de fyra alternativen.")




    while choice == "2":
        print(koks_tv)
        print("""
              1. Byt kanal
              2. Sänk ljudvolymen
              3. Höj ljudvolymen
              4. Återvänd till huvudmenyn
              """)
        choice_two = input("Välj ett alternativ: ")
        if choice_two == "1":
            koks_tv.byt_kanal()
        elif choice_two == "2":
            koks_tv.sank_volym()
        elif choice_two == "3":
            koks_tv.hoj_volym()
        elif choice_two == "4":
            choice = None
            break
        else:
            print("Var god välj ett av de fyra alternativen.")




    if choice not in ("1", "2", "3", None):
        print("Du har angivit ett felaktigt alternativ. Försök igen!")
lista_1 = []
lista_1.append(vardagsrums_tv)
print(lista_1)
lista_2 =[]
lista_2.append(koks_tv)
write_file(lista_1, lista_2)

main()
input("Vänligen tryck enter för att avsluta.")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You should open your <code>laboration_5.txt</code> file with <code>"a"</code> (append) instead of <code>"w"</code> (write) or it will overwrite the file. Then use <code>text_file.write(data)</code> to then append data to this file. Make sure you close you file afterwards with <code>text_file.close()</code>.</p>
<pre><code>text_file = open("C:\\Users\\Viktor\\Desktop\\laboration_5.txt", "a")
text_file.write(rad_1)
text_file.write(rad_2)
text_file.close()
</code></pre>
</div>
<span class="comment-copy">Have you considered <a href="https://docs.python.org/3/library/pickle.html" rel="nofollow noreferrer">pickle</a>? Also read about it on <a href="https://pymotw.com/2/pickle/" rel="nofollow noreferrer">PMOTW</a>. As for managing the objects, have a look at <a href="https://pymotw.com/2/shelve/index.html#module-shelve" rel="nofollow noreferrer">shelve</a></span>
<span class="comment-copy"><code>with</code> statements! Then you don't have to "make sure" of anything; Python handles it. <code>with open("C:\\Users\\Viktor\\Desktop\\laboration_5.txt", "a") as text_file:</code>, then put both <code>write</code>s in an indented block, and you don't need the <code>close</code> at all.</span>
<span class="comment-copy">Agreed, but this was least impact on the authors original code. That seemed to be the situationally correct move.</span>
