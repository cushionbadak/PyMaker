<div class="post-text" itemprop="text">
<p>Input is</p>
<pre><code>list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9]
n = 3
</code></pre>
<p>And expected output is</p>
<pre><code>[1, 4, 7, 2, 5, 8, 3, 6, 9]
</code></pre>
<p>I want to arrange the <code>list1</code> based on <code>n</code>.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>list1 = [1,2,3,4,5,6,7,8,9]
n = 3

m = len(list1)
list2 = [list1[x%(m-1)] for x in range(0, n*(m-1), n)]
list2.append(list1[-1])
print list2
</code></pre>
<p>% is the modulo operator. Basically the range statement iterates from 0 to 3 times the length of the list. The modulo operator crops the iteration to the right number within the length of the list. Unfortunately the last entry of the list cannot be reached with this method as x%(m-1) will be zero then. Therefore the last entry must be treated separately.</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/functions.html#zip" rel="nofollow"><code>zip()</code></a> in this case?</p>
<pre><code>&gt;&gt;&gt; [list1[i:i+n] for i in range(0, len(list1), n)]
[[1, 2, 3], [4, 5, 6], [7, 8, 9]]

&gt;&gt;&gt; list(zip(*[list1[i:i+n] for i in range(0, len(list1), n)]))
[(1, 4, 7), (2, 5, 8), (3, 6, 9)]
&gt;&gt;&gt; 
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about:</p>
<pre><code>list1 = [1,2,3,4,5,6,7,8,9]
n = 3
res = []
for i in range(n):
        res += list1[i::n]
print(res)
</code></pre>
</div>
<span class="comment-copy">post your attempts..</span>
<span class="comment-copy">Am I the only one who doesn't understand the condition?</span>
<span class="comment-copy">@Idos - It counts by threes - 1, 4, 7, then 2, 5, 8, etc.</span>
<span class="comment-copy">so what is the answer for <code>n=4</code>?</span>
<span class="comment-copy">1. Iterate through your list  2. find min &amp; max  3. add n to the min element and store it in a var  4. if var is lower than max and exists in list append it in new list  5. else proceed to next element and append.</span>
<span class="comment-copy">so for <code>n=4</code> it is <code>[1, 5, 1, 5, 1, 5, 1, 5, 9]</code></span>
<span class="comment-copy">&gt;&gt;&gt; <code>n=4</code> <code>[(1, 5, 9)]</code></span>
<span class="comment-copy">@xi_: So what should it gives when <code>n=4</code>?</span>
<span class="comment-copy">good question :)</span>
<span class="comment-copy">something like : [1, 5, 9, 2, 6, 3, 7, 4, 8] ?</span>
<span class="comment-copy">it's the result of appending one every four elements starting at pos 0 then starting at position 1, then pos 2, then pos 3 but as far as we haven't a clear spec ...</span>
