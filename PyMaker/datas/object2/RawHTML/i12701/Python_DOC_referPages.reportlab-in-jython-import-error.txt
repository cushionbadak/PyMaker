<div class="post-text" itemprop="text">
<p>I am using jdk 1.8 and Jython 2.7.0.jar to execute my python Code.
But It seems Jython does not support Python's 2.7 feature 'reportlab' module.</p>
<p>My Java Code :</p>
<pre><code>package test;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;

public class Test{
        public Test()  
        {
         System.out.println("Done!");
        engine.eval("import sys");
        engine.eval("print sys");
        engine.eval("import reportlab");
        engine.eval("print reportlab");
        System.out.println("Done Here");
    } 
    catch (ScriptException ex) 
    {
        Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex);
        System.out.println(ex);
    }
}
public static void main(String args[])
{
    Test t=new Test();
}
}
</code></pre>
<p>Error I got:</p>
<pre><code>run:
Done!
&lt;module 'sys' (built-in)&gt;
javax.script.ScriptException: ImportError: No module named reportlab in    &lt;script&gt; at line number 1
Dec 28, 2015 8:57:52 PM test.Test &lt;init&gt;
SEVERE: null
javax.script.ScriptException: ImportError: No module named reportlab in    &lt;script&gt; at line number 1
    at      org.python.jsr223.PyScriptEngine.scriptException(PyScriptEngine.java:202)
at org.python.jsr223.PyScriptEngine.eval(PyScriptEngine.java:42)
at org.python.jsr223.PyScriptEngine.eval(PyScriptEngine.java:31)
at javax.script.AbstractScriptEngine.eval(AbstractScriptEngine.java:264)
at test.Test.&lt;init&gt;(Test.java:28)
at test.Test.main(Test.java:40)
Caused by: Traceback (most recent call last):
 File "&lt;script&gt;", line 1, in &lt;module&gt;
ImportError: No module named reportlab

at org.python.core.Py.ImportError(Py.java:328)
at org.python.core.imp.import_first(imp.java:877)
at org.python.core.imp.import_module_level(imp.java:972)
at org.python.core.imp.importName(imp.java:1062)
at org.python.core.ImportFunction.__call__(__builtin__.java:1280)
at org.python.core.PyObject.__call__(PyObject.java:431)
at org.python.core.__builtin__.__import__(__builtin__.java:1232)
at org.python.core.imp.importOne(imp.java:1081)
at org.python.pycode._pyx2.f$0(&lt;script&gt;:1)
at org.python.pycode._pyx2.call_function(&lt;script&gt;)
at org.python.core.PyTableCode.call(PyTableCode.java:167)
at org.python.core.PyCode.call(PyCode.java:18)
at org.python.core.Py.runCode(Py.java:1386)
at org.python.core.__builtin__.eval(__builtin__.java:497)
at org.python.core.__builtin__.eval(__builtin__.java:501)
at org.python.util.PythonInterpreter.eval(PythonInterpreter.java:259)
at org.python.jsr223.PyScriptEngine.eval(PyScriptEngine.java:40)
... 4 more
</code></pre>
<p>BUILD SUCCESSFUL (total time: 2 seconds)</p>
<p>If anyone could suggest me an Alternate way of remotely executing a Python script I'd be thankful to them. </p>
<p>Also I have a large code base in python of which rewriting in java is not feasible in scheduled time.</p>
</div>
<div class="post-text" itemprop="text">
<p>Jython is a completely different (and independent) Python interpreter than your system's Python.  While most libraries from Python's standard library will exist in Jython, third party modules installed in your system's Python simply don't exist for the Jython version.</p>
<p>Jython is compatible enough that you can set a Python virtualenv with the Jython interpreter and install modules that are pure-python code (i.e. no binary modules) in that virtualenv - I don't think repotlab qualifies as such - but you might try.  In a Java project setup, probably your project have its own instance of the Jython interpreter installed along other .jar files - it should feature a <code>site-packages</code> folder somewhere where you could try to copy pure Python third-party modules to, but again, I don't think reportlab will be jython compatible.</p>
<p>One option for you is to use Python itself (cPython) in an external process, and call it from Java (or Jython) using xmlrpc code - (A quickly googling didn't find me out a way to call cPython via xmlrpc from pure Java - but I know it works from Jython, if you use Python's stdlib xmlrpc as documented  - 
<a href="https://docs.python.org/3/library/xmlrpc.html?highlight=xmlrpc" rel="nofollow">https://docs.python.org/3/library/xmlrpc.html?highlight=xmlrpc</a></p>
</div>
<div class="post-text" itemprop="text">
<p>I've got a solution on a stackExchange link - <a href="https://stackoverflow.com/questions/30339439/jython-embedded-in-java-importerror-no-module-named-yaml?rq=1">Jython embedded in Java -- ImportError: No module named yaml</a> i.e I can simply add the packages I need under my Jython Installation directory E.g jython/Lib/site-packages I've got no Issues on reportlab for Python2.7.</p>
<p>most Important also append them in your program using sys.path.append()</p>
</div>
<span class="comment-copy">Thanks for the reply. If you know more how I can do this please tell me; and I am also thinking of doing same in Android Application built in Java which would call python scripts. And If I use python I would be able to use my resources more efficiently.</span>
