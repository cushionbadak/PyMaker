<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/3294889/iterating-over-dictionaries-using-for-loops">Iterating over dictionaries using 'for' loops</a>
<span class="question-originals-answer-count">
                    13 answers
                </span>
</li>
</ul>
</div>
<p><strong>my dictionary looks like:</strong></p>
<pre><code>account is: {'Discover': ['username', 'dddddd']}
</code></pre>
<p>I've tried:</p>
<pre><code>print(account[0])
</code></pre>
<p>but it doesn't work.</p>
<p>Im trying to achieve printing out:</p>
<pre><code>Discover
</code></pre>
<p>If someone could help me out? Its been a little while.</p>
<p>Thank you</p>
</div>
<div class="post-text" itemprop="text">
<p><code>Discover</code> is a key of your dictionary. You can access the keys collection in your dictionary using <a href="https://docs.python.org/3/library/stdtypes.html?highlight=dictionary#dict.keys" rel="nofollow">keys()</a> method. Then use each key to access the associated element.</p>
<pre><code>for key in account.keys():
    print(key)
    print(account[key])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Since <code>Discover</code> is the only key you could do <code>print account.keys()[0]</code>.</p>
<p><strong>But</strong> if you ever had more keys this won't work every time since dictionaries are arbitrarily ordered (in other words, have no sense of order), you will need to iterate over the <code>keys()</code> list, or simply <code>print account.keys()</code> to print the whole keys list.</p>
</div>
<div class="post-text" itemprop="text">
<p>if you have more keys, you can loop like this:</p>
<pre><code>for i in account:
    print i
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>It sounds like you want to see the keys of your dict (which in this example is just a single key, <code>'Discover'</code>).  Given a dict key, you can use that key to index into the dict to get the associated value.  Here are some examples using the values you gave:</p>
<pre><code>&gt;&gt;&gt; account = {'Discover': ['username', 'dddddd']}
&gt;&gt;&gt; account
{'Discover': ['username', 'dddddd']}
&gt;&gt;&gt; account.keys()
['Discover']
&gt;&gt;&gt; account['Discover']
['username', 'dddddd']
&gt;&gt;&gt;
</code></pre>
</div>
<span class="comment-copy">You don't need to call .keys, if you wanted key and value you could also use .items</span>
<span class="comment-copy">This is throwing: TypeError: 'dict_keys' object does not support indexing</span>
<span class="comment-copy">@user700070That's because you are using Python 3 (you didn't mention it in your question). In Python 3 you need to convert keys() to a list: <code>print (list(account.keys())[0])</code></span>
<span class="comment-copy">ah-ha, thank you!!</span>
