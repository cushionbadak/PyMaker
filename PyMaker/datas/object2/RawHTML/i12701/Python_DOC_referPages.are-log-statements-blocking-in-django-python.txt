<div class="post-text" itemprop="text">
<p>Will calls to logger block request processing in a Django views?
For instance, in the example below, will the logger.info() at line 2 block the response on line 3?</p>
<pre><code>def random_view(request):
    xyz.do_something()
    logger.info("Does this block the next line execution?")
    return HttpResponse("Done")
</code></pre>
<p>I've looked at the <a href="https://docs.djangoproject.com/en/1.9/topics/logging/" rel="nofollow">Django logging documentation</a> and the <a href="https://docs.python.org/2/library/logging.html" rel="nofollow">python logging module docs</a> but I can't find a concrete answer to this question.</p>
<p>I understand the the Handler decides where each log message goes, but I am not sure if the Handler itself is non-blocking. Would appreciate if someone could clarify or point to documentation explaining this.</p>
</div>
<div class="post-text" itemprop="text">
<p>From <a href="https://docs.djangoproject.com/en/1.9/topics/logging/" rel="nofollow">Django Docs</a></p>
<blockquote>
<p>Django uses Python’s builtin logging module to perform system logging.
  The usage of this module is discussed in detail in Python’s own
  documentation.</p>
</blockquote>
<p>From <a href="https://docs.python.org/3/howto/logging-cookbook.html#dealing-with-handlers-that-block" rel="nofollow">Python Docs</a></p>
<blockquote>
<p>Sometimes you have to get your logging handlers to do their work
  without blocking the thread you’re logging from. This is common in Web
  applications, though of course it also occurs in other scenarios.</p>
</blockquote>
<p>So, although not explicitly mentioned yet logging does seem to be blocking. For details see Python Docs.</p>
</div>
<span class="comment-copy">Thanks, I did read that line, but its not explicit. Was hoping for someone to state this conclusively!</span>
<span class="comment-copy">The problem here as I see it, is that Python doc also states quite clearly that there are ways around this issue, and Django docs do not state explicitly whether those ways are used in Django or not.</span>
