<div class="post-text" itemprop="text">
<p>I want to use same class name in my python script as my Python script name. Also i am having only one class present in my script. For example if my script structure is mentioned below:</p>
<pre><code>test.py
  |
  class test(object):
    def __init__(self, var1, var2 ....):
      ...
      ...  
</code></pre>
<p>I want to understand what difference will it make when i import  this script and use this class from some other script ?</p>
</div>
<div class="post-text" itemprop="text">
<p>Purely from a language point of view, it won't make any difference other than it might cause a little confusion with the person importing the class. </p>
<p>If you use this module as a library in a robotframework test suite, then robot will automatically instantiate a class if it has the same name as the library file. The methods in that class will be exposed as the keywords from that library. </p>
<p>The robotframework user guide has a section titled <a href="http://robotframework.org/robotframework/latest/RobotFrameworkUserGuide.html#creating-test-library-class-or-module" rel="nofollow">Creating test library class or module</a> which says (emphasis mine):</p>
<blockquote>
<p>Python classes are always inside a module. <strong>If the name of a class
  implementing a library is the same as the name of the module, Robot
  Framework allows dropping the class name when importing the library.</strong>
  For example, class MyLib in MyLib.py file can be used as a library
  with just name MyLib. This also works with submodules so that if, for
  example, parent.MyLib module has class MyLib, importing it using just
  parent.MyLib works. If the module name and class name are different,
  libraries must be taken into use using both module and class names,
  such as mymodule.MyLibrary or parent.submodule.MyLib.</p>
</blockquote>
</div>
<span class="comment-copy">Nothing other than confusion because you didn't follow the PEP-8 naming convention for classes (e.g. name it <code>Test</code>).</span>
<span class="comment-copy">@Martijn Pieters While writing a library for Robot framework; i have seen same name as class name and file name is being used.</span>
<span class="comment-copy">The <a href="https://docs.python.org/3/library/array.html" rel="nofollow noreferrer"><code>array</code> module</a> defines an <a href="https://docs.python.org/3/library/array.html#array.array" rel="nofollow noreferrer"><code>array</code> type</a>.</span>
<span class="comment-copy">Another built-in example is class <code>ElementTree</code> in module <code>xml.etree.ElementTree</code>.</span>
<span class="comment-copy">After doing as suggested by @MartijnPieters, you would do something like <code>from test import Test</code> or <code>import test</code> and then <code>test_instance = test.Test(var1, var2)</code>.</span>
