<div class="post-text" itemprop="text">
<p>Is it possible to return unpacked arguments?  What I am picturing is to <code>return msg, *msg_args</code> which would return a tuple such as <code>(msg, msg_args[0], msg_args[1], msg_args[2])</code>.  This would allow me to send it to another function for string interpolation.</p>
<pre><code>def add_to_message(msg, *msg_args):
    msg += "  I am %s."
    msg_args = list(msg_args)
    msg_args.append("fine")
    return(msg, *msg_args)

def display_localized_message(msg, *msg_args):
    """Translate message, then interpolate and print it."""
    print(msg % msg_args)

display_localized_message(
    *add_to_message("Hi %s.  How are %s?", "Peter", "you"))
</code></pre>
<p>Desired results: print <code>Hi Peter.  How are you?  I am fine.</code></p>
<p>Actual results: <code>SyntaxError: can use starred expression only as assignment target</code>.  The line containing the error is <code>return msg, *msg_args</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If you're not using Python 3.5+ with <a href="https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-448" rel="nofollow">additional unpacking generalizations</a>, you can't unpack as part of a return value. Just explicitly make the combined <code>tuple</code> through <code>tuple</code> concatenation:</p>
<pre><code>return (msg,) + msg_args
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In python versions prior to 3.5, simply construct a new tuple using it:</p>
<pre><code>def add_to_message(msg, *msg_args):
    msg += "  I am %s."
    msg_args.append("fine")
    return (msg,) + msg_args
</code></pre>
<p>In python 3.5, your current syntax would be fine.</p>
</div>
<div class="post-text" itemprop="text">
<p>Simple. Just don't use the star and reference as a list.</p>
<pre><code>def add_to_message(msg, *msg_args):
    msg += "  I am %s."
    msg_args.append("fine")
    return (msg,) + msg_args
</code></pre>
<p>The * is only used in the method definition to show that it will be a tuple of all of the rest of the arguments. Inside of the method, you reference that tuple without the star. It is just a tuple. </p>
</div>
<span class="comment-copy">Actually after I first posted I realized the code was using lists (see edited question), so what works for my code is <code>return [msg,] + msg_args</code>.  But that is just what I was looking for.</span>
<span class="comment-copy">@JimK: Just  FYI, you don't need the trailing comma for a single element <code>list</code> literal. That's only needed for <code>tuple</code>s (to distinguish from the case of using parens for grouping).</span>
<span class="comment-copy">Oh I see; thanks!</span>
<span class="comment-copy">The <code>+</code> method still works in Python 3.5 just to be clear.</span>
<span class="comment-copy">That returns a <code>tuple</code> where the second element is the varargs <code>tuple</code>, not a flattened version.</span>
<span class="comment-copy">Now it's a <code>tuple</code> of a value and a <code>list</code>. Still not what was requested.</span>
<span class="comment-copy">@ShadowRanger yeah didn't read it closely enough. Thought the issue was referenced the *msg args. The msg just needs to be added (after making it into a tuple with a single element)</span>
