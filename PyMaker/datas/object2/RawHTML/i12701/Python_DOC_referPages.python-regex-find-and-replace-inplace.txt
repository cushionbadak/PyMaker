<div class="post-text" itemprop="text">
<p>I have a snippet that finds floating point numbers like <strong>1.321234123</strong>. I would like to get rid of some precision and make <strong>1.3212</strong> out of it. But how can i access the found match, convert it and replace it?</p>
<p><strong>Python Source:</strong></p>
<pre><code>import fileinput
import re

myfile = open("inputRegex.txt", "r")

for line in myfile:
    line = re.sub(r"[+-]? *(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?", "foundValue", line.rstrip())
    print(line)
</code></pre>
<p><strong>The Input File:</strong></p>
<pre><code>4.2abc -4.5 abc - 1.321234123 abc + .1e10 abc . abc 1.01e-2 abc

   1.01e-.2 abc 123 abc .123
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Use <a href="https://docs.python.org/3/library/fileinput.html#fileinput.FileInput" rel="nofollow noreferrer"><code>fileinput.FileInput</code></a>, with <code>inplace=True</code>. printed line will be used as a replacement string for each line.</p>
<pre><code>myfile = fileinput.FileInput("inputRegex.txt", inplace=True)

for line in myfile:
    line = re.sub(r"[+-]? *(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?",
                  "foundValue",
                  line.rstrip())
    print(line)
</code></pre>
<hr/>
<p><strong>UPDATE</strong></p>
<p><code>re.sub</code> can accept a function as replacement. It will be called with match object and the return value of the function is used as a replacement string.</p>
<p>The following is slightly modified version to use captured groups (to use in replacement function).</p>
<pre><code>line = re.sub(r"([+-]? *)(\d+(?:\.\d*)?|\.\d+)([eE][+-]?\d+)?",
              lambda m: m.group(1) + re.sub('(\..{4}).*', r'\1', m.group(2)) + (m.group(3) or ''),
              line.rstrip())
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>import fileinput
import re

myfile = open("inputRegex.txt", "r")

def changePrecision(matchObj):
    return str(round(float(matchObj.group(0).replace(" ","")),4))

for line in myfile:
    newLine = re.sub(r"[+-]? *(?:\d+(?:\.\d*)?|\.\d+)(?:[eE][+-]?\d+)?", changePrecision, line)
    print newLine
</code></pre>
<p>I hope this is what you are looking for</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>num_decimal_places = 2
re.sub(r"(\d+)(\.\d{1,num_decimal_places})\d*", r"\1\2", line.rstrip())
</code></pre>
<p><code>\1\2</code> captures the matches in the two sets of parentheses. This doesn't round, but it will truncate</p>
</div>
<span class="comment-copy">Input file does not contain numbers like <code>1.321234123</code>.</span>
<span class="comment-copy">good catch! i've changed it.</span>
<span class="comment-copy">but "foundValue" is a placeholder, i want to represent the actual match und would like to edit it.</span>
<span class="comment-copy">Hmm This solution maintains the e-10, works fine!</span>
<span class="comment-copy">@user1767754, I updated the answer accordingly. Please check it out.</span>
<span class="comment-copy">@user1767754, Do you want replace <code>1e-10</code> with <code>0.0000</code>, and <code>1e10</code> with <code>10000000000.0000</code> ?</span>
