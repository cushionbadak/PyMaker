<div class="post-text" itemprop="text">
<p>I have list of dictionaries as below</p>
<pre><code>dataset={"users": [
    {"id": 20, "loc": "Chicago", "st":"4", "sectors": [{"sname": "Retail"}, {"sname": "Manufacturing"}, {"sname": null}]}, 
    {"id": 21, "loc": "Frankfurt", "st":"4", "sectors": [{"sname": null}]}, 
    {"id": 22, "loc": "Berlin", "st":"6", "sectors": [{"sname": "Manufacturing"}, {"sname": "Banking"},{"sname": "Agri"}]}, 
    {"id": 23, "loc": "Chicago", "st":"2", "sectors": [{"sname": "Banking"}, {"sname": "Agri"}]},
    {"id": 24, "loc": "Bern", "st":"1", "sectors": [{"sname": "Retail"}, {"sname": "Agri"}]},
    {"id": 25, "loc": "Bern", "st":"4", "sectors": [{"sname": "Retail"}, {"sname": "Agri"}, {"sname": "Banking"}]}
    ]}
</code></pre>
<p>I tried below code to remove loc, sectors from above lists
so that my list would contain only id and loc</p>
<pre><code>fs_loc = []
for g, items in itertools.groupby(data['users'], lambda x: (x['id'],x['loc'])):
    fs_loc.append({ 'id': g[0], 'loc': g[1] })
print(fs_loc)
</code></pre>
<p>From this, how can I create new list such that it will have list of id's and the count of them that were grouped by locations like below.</p>
<pre><code>{"locations": [
    {"loc": "Chicago","count":2,"ids": [{"id": "20"}, {"id": "23"}]}, 
    {"loc": "Bern","count":2,"ids": [{"id": "24"}, {"id": "25"}]}, 
    {"loc": "Frankfurt","count":1,"ids": [{"id": "21"}]}, 
    {"loc": "Berlin","count":1,"ids": [{"id": "21"}]}    
    ]}
</code></pre>
<p>I found this difficulty in making the list as above using itertools, probably I might be missing some better approach on achieving as above, could you please suggest.</p>
</div>
<div class="post-text" itemprop="text">
<p>You need to pass a sorted sequence to <code>itertools.groupby</code>.</p>
<p>According to <a href="https://docs.python.org/3/library/itertools.html#itertools.groupby" rel="nofollow"><code>itertools.groupby</code> documentation</a>:</p>
<blockquote>
<p>...
  Generally, the iterable needs to already be sorted on the same key
  function.</p>
<p>The operation of groupby() is similar to the uniq filter in Unix. It
  generates a break or new group every time the value of the key
  function changes (which is why it is usually necessary to have sorted
  the data using the same key function). That behavior differs from
  SQL’s GROUP BY which aggregates common elements regardless of their
  input order.</p>
</blockquote>
<pre><code>byloc = lambda x: x['loc']

it = (
    (loc, list(user_grp))
    for loc, user_grp in itertools.groupby(
        sorted(dataset['users'], key=byloc), key=byloc
    )
)
fs_loc = [
    {'loc': loc, 'ids': [x['id'] for x in grp], 'count': len(grp)}
    for loc, grp in it
]
</code></pre>
<hr/>
<p><code>fs_loc</code> →</p>
<pre><code>[
    {'count': 1, 'loc': 'Berlin', 'ids': [22]},
    {'count': 2, 'loc': 'Bern', 'ids': [24, 25]},
    {'count': 2, 'loc': 'Chicago', 'ids': [20, 23]},
    {'count': 1, 'loc': 'Frankfurt', 'ids': [21]}
]
</code></pre>
</div>
<span class="comment-copy">Thanks a lot! I will try this now</span>
<span class="comment-copy">Hi falsetru! I have a question, can we also add st values with the id's inside the grp ? I tried fs_loc = [     {'loc': loc, 'ids': [x['id'],x['st'] for x in grp], 'count': len(grp)}     for loc, grp in it ]  It is throwing error, could you please suggest?</span>
<span class="comment-copy">fs_loc should appear to have 'ids':[{id,st},{id,st}] .. may be like this?</span>
<span class="comment-copy">@SathishPanduga, Could  you post a separate question with exact desired output? (The output should be valid python literals)</span>
<span class="comment-copy">@SathishPanduga, I am going to sleep. So response will take long. But with a separate question, other people can see and help you to solve the problem.</span>
