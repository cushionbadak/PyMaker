<div class="post-text" itemprop="text">
<p>For example, I have a list of dictionaries like this one:</p>
<pre><code>[{'name':'Mike', 'hobby':'skiing', 'job':'doctor'}, {'name':'Steve', 'hobby':'skiing', 'job':'doctor'}, {'name':'Sally', 'hobby':'chess', 'job':'teacher'} ]
</code></pre>
<p>and I want to search for all dictionaries which have same values for keys <code>'hobby'</code> and <code>'job'</code>. For example  <code>'hobby':'skiing'</code>, <code>'job':'doctor'</code>. The output should be:</p>
<pre><code>[{'name':'Mike', 'hobby':'skiing', 'job':'doctor'}, {'name':'Steve', 'hobby':'skiing', 'job':'doctor'}]
</code></pre>
<p>My code looks something like this:</p>
<pre><code>name=raw_input('Name: ') 
hobby=raw_input('Hobby: ') 
job= raw_input('Job: ') 
def first_searsh(input, key): 
    out = [] 
    for item in list: 
        if item[key] == input: 
            out.append(item) 
return out
</code></pre>
<p>and I have written separate functions for all keys like this one: </p>
<pre><code>def name_search(): 
    if name != "": 
        out_1 = first_search(name, 'name') 
    else: 
        pass 
return out_1 
</code></pre>
<p>My real dictionaries have 10 keys and I don't know how to connect those separate search functions so that the output only displays dictionaries that have all same values, not all dictionaries that have any of the values entered</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>x = [{'name':'Mike', 'hobby':'skiing', 'job':'doctor'}, {'name':'Steve', 'hobby':'skiing', 'job':'doctor'}, {'name':'Sally', 'hobby':'chess', 'job':'teacher'} ]  
hobby = 'skiing'
job = 'doctor'

result = [i for i in x if i['hobby'] == hobby and i['job'] == job]

print(result)
</code></pre>
<p>prints:</p>
<pre><code>[{'hobby': 'skiing', 'job': 'doctor', 'name': 'Mike'},
 {'hobby': 'skiing', 'job': 'doctor', 'name': 'Steve'}]
</code></pre>
<p>or, a more generic solution:</p>
<pre><code>def search_for(d, lst):
    return [i for i in lst if all(i[target_key] == target_value for target_key, target_value in d.items())]

dict_to_search_for = {
    'hobby':'skiing',
    'job':'doctor'
}

lst = [{'name':'Mike', 'hobby':'skiing', 'job':'doctor'}, {'name':'Steve', 'hobby':'skiing', 'job':'doctor'}, {'name':'Sally', 'hobby':'chess', 'job':'teacher'} ]

search_for(dict_to_search_for, lst)
</code></pre>
<ul>
<li><p><code>dict_to_search_for</code> is a dictionary that holds the key-value combos  you are trying to match.</p></li>
<li><p><code>lst</code> is your list</p></li>
<li><p><code>search_for</code> takes as arguments the dictionary and the list.</p></li>
<li><p><code>[i for i in lst if all(i[target_key] == target_value for target_key, target_value in d.items())]</code> is a <a href="https://docs.python.org/2/tutorial/datastructures.html#list-comprehensions" rel="nofollow">list comprehension</a> that collects every dictionary in your <code>lst</code> that matches <a href="https://docs.python.org/3/library/functions.html#all" rel="nofollow"><code>all</code></a> of your key-value combos.</p></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>There may be more Pythonic ways of doing this, but simply iterating through the list for matches to key:value pairs work, using 'and' to specify that both job and hobby conditions must be met.</p>
<p>If an item is a match, append it to a new list, and Bob's yer uncle.</p>
<pre><code>lst = [{'name':'Mike', 'hobby':'skiing', 'job':'doctor'}, {'name':'Steve',     
'hobby':'skiing', 'job':'doctor'}, {'name':'Sally', 'hobby':'chess',   
'job':'teacher'} ]

lst2 = []
for item in lst:
    if item['hobby'] == 'skiing' and item['job'] == 'doctor':
       lst2.append(item)

print lst2
</code></pre>
</div>
<span class="comment-copy">What code have you tried so far?</span>
<span class="comment-copy">You should include your code to your question as your attempts...not in comments</span>
<span class="comment-copy">we aren't allowed to use SQL for this project. the records are stored in txt file and I decided to convert them to dictionaries because I thought it would be easier to work with a list of dictionaries instead of strings. the file in my example would consist of multiple lines which look like this: name|hobby|job</span>
<span class="comment-copy">Thank you very much. I don't have time to try to incorporate it in my code now, but I think that the generic approach could work for me.</span>
<span class="comment-copy">My real dictionaries contain 10 keys, and the user enters the values. The if would be too long if i used it that way.</span>
<span class="comment-copy">thank ypu for your suggestion, I included it</span>
