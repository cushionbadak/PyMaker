<div class="post-text" itemprop="text">
<div class="question-status question-originals-of-duplicate">
<p>This question already has an answer here:</p>
<ul>
<li>
<a dir="ltr" href="/questions/20002503/why-does-a-b-or-c-or-d-always-evaluate-to-true">Why does `a == b or c or d` always evaluate to True? [duplicate]</a>
<span class="question-originals-answer-count">
                    1 answer
                </span>
</li>
</ul>
</div>
<p>I'm new to programming and am learning Python with the book Learning Python the Hard Way. I'm at exercise 36, where we're asked to write our own simple game.</p>
<p><a href="http://learnpythonthehardway.org/book/ex36.html" rel="nofollow">http://learnpythonthehardway.org/book/ex36.html</a></p>
<p>(The problem is, when I'm in the hallway (or more precisely, in 'choices') and I write 'gate' the game responds as if I said "man" of "oldman" etc.</p>
<p>What am I doing wrong?)</p>
<p>EDIT: I shouldn't have written 'if "oldman" or "man" in choice' but instead put 'in choice' after every option.</p>
<p>However, next problem.. The man never stands up and cursus me, it keeps frowning. Why does the game not proceed to that elif?</p>
<pre><code>experiences = []    
def choices():
        while True:
            choice = raw_input("What do you wish to do? ").lower()

            if "oldman" in choice or "man" in choice or "ask" in choice:
                print oldman
            elif "gate" in choice or "fight" in choice or "try" in choice and not "pissedoff" in experiences:
                print "The old man frowns. \"I said, you shall not pass through this gate until you prove yourself worthy!\""
                experiences.append("pissedoff") 
            elif "gate" in choice or "fight" in choice or "try" in choice and "pissedoff" in experiences and not "reallypissed" in experiences:
                print "The old man is fed up. \"I told you not to pass this gate untill you are worthy! Try me again and you will die.\""
                experiences.append("reallypissed")

            elif "gate" in choice or "fight" in choice or "try" in choice and "reallypissed" in experiences:
                print "The old man stands up and curses you. You die"
                exit()


            elif "small" in choice:
                print "You go into the small room"
                firstroom()
            else: 
                print "Come again?"
</code></pre>
<p><strong>EDIT: FIXED IT!!</strong></p>
<pre><code>def choices():
    while True:
        choice = raw_input("What do you wish to do? ").lower()

        if choice in ['oldman', 'man', 'ask']:
            print oldman
        elif choice in ['gate', 'fight', 'try'] and not 'pissedoff' in experiences:
            print "The old man frowns. \"I said, you shall not pass through this gate until you prove yourself worthy!\""
            experiences.append("pissedoff") 
        elif choice in ['gate', 'fight', 'try'] and not 'reallypissed' in experiences:
            print "The old man is fed up. \"I told you not to pass this gate untill you are worthy! Try me again and you will die.\""
            experiences.append("reallypissed")
        elif choice in ['gate', 'fight', 'try'] and 'reallypissed' in experiences:
            print "The old man stands up and curses you. You die"
            exit()
        elif "small" in choice:
            print "You go into the small room"
            firstroom()
        else: 
            print "Come again?"
</code></pre>
<p>Thanks for all your help :).</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>The problem is, when I'm in the hallway (or more precisely, in
  'choices') and I write 'gate' the game responds as if I said "man" of
  "oldman" etc.</p>
</blockquote>
<h2>Explanation</h2>
<p>What you were doing was being seen by Python as:</p>
<pre><code>if ("oldman") or ("man") or ("ask" in choice):
</code></pre>
<p>Which evaluates to True if <strong>any</strong> of those 3 conditions is of a <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing" rel="nofollow">"truthy" value</a>. A non-empty string like "oldman" and "man" evaluates to True. So that explains why your code behaved the way it did.</p>
<h2>Test if a choice is in a list of choices:</h2>
<p>You're looking for</p>
<pre><code>if choice in ['oldman', 'man', 'ask']:
</code></pre>
<p>Or, at least:</p>
<pre><code>if 'oldman' in choice or 'man' in choice or 'ask' in choice
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Look carefully at the evaluation of your conditions:</p>
<pre><code>    if "oldman" or "man" or "ask" in choice:
</code></pre>
<p>This will first evaluate if <code>"oldman"</code> is <code>True</code>, which happens to be the case, and the <code>if</code> condition will evaluate to be <code>True</code>.</p>
<p>I think what you intended is:</p>
<pre><code>    if "oldman" in choice or "man" in choice or "ask" in choice:         
</code></pre>
<p>Alternatively you could use:</p>
<pre><code>    if choice in ["oldman" , "man", "ask" ]:          
</code></pre>
<p>The one caveat, is with this method it is looking for an exact match and not a substring match.</p>
</div>
<span class="comment-copy">I want the old man to stand up and curse after I write 'gate' three times. After the first time 'pissedoff' is added to the experiences list, if I input gate again it should warn me and add reallypissed to the experiences list, and if I input 'gate' the third time it should exit.</span>
<span class="comment-copy">Hey I have suggestion: can you rewrite the if/elif using <code>if choice in [..., ...]</code> to make it easier to follow? I'll be back in a bit to have a look!</span>
<span class="comment-copy">I did, and I think I fixed it! Thanks so much for your help :).</span>
<span class="comment-copy">That explains it, thank you :). I've edited my question, I hope that's how I'm supposed to do that.</span>
