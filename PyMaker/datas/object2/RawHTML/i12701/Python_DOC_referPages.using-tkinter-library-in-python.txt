<div class="post-text" itemprop="text">
<p>I have two python files <code>gui.py</code>, <code>student.py</code>. i have imported <code>tkinter</code>, i will ask the user to enter their name, id, email, and address, Using tkinter widget i will display all in a list. How to do this using class ?</p>
<p>this is <code>gui.py</code></p>
<pre><code>    import tkinter
    import student

    class MyGUI:
        def __init__(self):
            self.__students = []

        # Create the main window widget
        self.main_window = tkinter.Tk()

        self.name_f = tkinter.Frame(self.main_window)
        self.id_f = tkinter.Frame(self.main_window)
        self.email_f = tkinter.Frame(self.main_window)
        self.addy_f = tkinter.Frame(self.main_window)
        self.buttons_f = tkinter.Frame(self.main_window)

        # Create a Label and Entry widget for each item in
        # the Student class
        self.name_l = tkinter.Label(self.name_f, text='Name: ')
        self.name_e = tkinter.Entry(self.name_f, width=10)
        self.id_l = tkinter.Label(self.id_f, text='ID: ')
        self.id_e = tkinter.Entry(self.id_f, width=10)
        self.email_l = tkinter.Label(self.email_f, text='Email: ')
        self.email_e = tkinter.Entry(self.email_f, width=10)
        self.addy_l = tkinter.Label(self.addy_f, text='Address: ')
        self.addy_e = tkinter.Entry(self.addy_f, width=10)

        self.add_b = tkinter.Button(self.buttons_f, text='Add Current    Data', command=self.add)
        self.display_b = tkinter.Button(self.buttons_f, text='List All', command=self.display)
        self.quit_b = tkinter.Button(self.buttons_f, text='Quit', command=self.main_window.destroy)

        self.name_l.pack(side='left')
        self.name_e.pack(side='left')
        self.id_l.pack(side='left')
        self.id_e.pack(side='left')
        self.email_l.pack(side='left')
        self.email_e.pack(side='left')
        self.addy_l.pack(side='left')
        self.addy_e.pack(side='left')

        self.add_b.pack(side='left')
        self.display_b.pack(side='left')
        self.quit_b.pack(side='left')

        self.name_f.pack()
        self.id_f.pack()
        self.email_f.pack()
        self.addy_f.pack()
        self.buttons_f.pack()

        #Enter the tkinter main loop
        tkinter.mainloop()

    def add(self):
        # we will do this in class
        pass

    def display(self):
        # we will do this in class
        pass


# Create an instance of the MyGUI class
my_gui = MyGUI()
</code></pre>
<p>and this is the <code>student.py</code></p>
<pre><code>class Student:
# this a comment
# most languages define attributes sep
# Declare String name
def setName(self, n):
    self.name = n

def setId(self, i):
    self.sid = i

def setEmail(self, e):
    # check to see if e has an @ sign
    self.email = e

def setAddy(self, a):
    self.addy = a

def getName(self):
    return self.name

def getId(self):
    return self.sid

def getEmail(self):
    return self.email

def getAddy(self):
    return self.addy

def printInfo(self):
    info = "Name: "
    info += self.name
    info += '\nID: '
    info += self.sid
    info += '\nEmail: '
    info += self.email
    info += '\nAddress: '
    info += self.addy
    info += '\n'
    return info
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Asking for code solutions to something you should be learning yourself probably isn't a good idea.</p>
<p>Just look up the documentation for TKinter here: <a href="https://docs.python.org/3/library/tkinter.html" rel="nofollow">https://docs.python.org/3/library/tkinter.html</a></p>
<p>As a note, you may want to consider opening separate windows when displaying the information. When I first learned TKinter, I first practiced by printing all my data to the console with the <code>print</code> command before trying to force them into tables.</p>
<p>Also, consider fleshing out the GUI and make it look like a table. Give each label a fixed length and each box a fixed length, this will make it look better.
A good example of this in action is on this amazing website for learning TKinter: <a href="http://www.tkdocs.com/tutorial/firstexample.html" rel="nofollow">http://www.tkdocs.com/tutorial/firstexample.html</a></p>
<p>Just scroll down until you find the Python implementation of the code :)</p>
</div>
<span class="comment-copy">In Python, don't use getter and setter functions like this.  Just access the attribute directly as you do within the functions.</span>
<span class="comment-copy">professor doesn't really care about how it looks. i'm just trying to learn how to use the add function so it can save the data entered in by user and display it. it supposed to create a table where each new entry is listed in the window. im having trouble since the book doesn't clearly explain using buttons to add data only how to put buttons in the widget.</span>
<span class="comment-copy">The best way to do this is by mimicking that example I showed you. Just call the function and pull the variables. Check out that website.</span>
<span class="comment-copy">It defines the 'feet' variable as a special <code>tkinter.StringVar()</code>, allowing you to pull its value from anywhere. Do the same thing in the entry boxes. If you don't associate a variable with the box, then it won't work.</span>
<span class="comment-copy">syntax error.                  name = StringVar()       sid = StringVar()       email = StringVar()       Address = StringVar()       name = ttk.Entry (mainframe, width=7, textvariable=name       name.grid(column=2, row=1, sticky=(W, E)       ttk.Label(mainframe, textvariable=sid).grid(column=2, row = 2, sticky=(W, E))</span>
<span class="comment-copy">use <code>tkinter.StringVar()</code> or remove the need for including the <code>tkinter.</code> part and do a <code>from tkinter import *</code></span>
