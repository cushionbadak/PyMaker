<div class="post-text" itemprop="text">
<p>I have two lists looking like:</p>
<pre><code>list1 = ['a','a','b','b','b','c','d','e','e','g','g']

list2 = ['a','c','z','y']
</code></pre>
<p>What I want to do is to keep all those elements of list1 that are also in list2.
the outcome should be:</p>
<pre><code>outcome= ['a','a','c']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Using <code>in</code> operator, you can check whether an element is in a seqeunce.</p>
<pre><code>&gt;&gt;&gt; list2 = ['a','c','z','y']
&gt;&gt;&gt; 'x' in list2
False
&gt;&gt;&gt; 'y' in list2
True
</code></pre>
<p>Using <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions">list comprehension</a>:</p>
<pre><code>&gt;&gt;&gt; list1 = ['a','a','b','b','b','c','d','e','e','g','g']
&gt;&gt;&gt; list2 = ['a','c','z','y']
&gt;&gt;&gt; [x for x in list1 if x in list2]
['a', 'a', 'c']
</code></pre>
<p>But <code>x in list</code> is not efficient. You'd better convert <code>list2</code> to a <a href="https://docs.python.org/3/library/stdtypes.html#set"><code>set</code></a> object.</p>
<pre><code>&gt;&gt;&gt; set2 = set(list2)
&gt;&gt;&gt; [x for x in list1 if x in set2]
['a', 'a', 'c']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>From Python 3 onwards use <a href="https://docs.python.org/3/library/itertools.html#itertools.filterfalse" rel="nofollow"><code>itertools.filterfalse</code></a></p>
<pre><code>&gt;&gt;&gt; import itertools
&gt;&gt;&gt; list1 = ['a','a','b','b','b','c','d','e','e','g','g']
&gt;&gt;&gt; list2 = ['a','c','z','y']
&gt;&gt;&gt; list(itertools.filterfalse(lambda x:x not in list2,list1))
['a', 'a', 'c']
</code></pre>
<p>The <code>list</code> call is necessary as <code>filterfalse</code> returns an <code>itertools</code> object.</p>
<p>You can also use the <a href="https://docs.python.org/3/library/functions.html#filter" rel="nofollow"><code>filter</code></a> function</p>
<pre><code>&gt;&gt;&gt; list(filter(lambda x: x in list2 , list1))
['a', 'a', 'c']
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>One alternative approach with numpy:</p>
<pre><code>import numpy as np

np.asarray(list1)[np.in1d(list1, list2)].tolist()
#['a', 'a', 'c']
</code></pre>
</div>
<span class="comment-copy">post your attempts..</span>
<span class="comment-copy">@AvinashRaj One liner HW problems can be solved on SO I guess :-)</span>
<span class="comment-copy">@BhargavRao but we can achieve the result without using itertools..</span>
<span class="comment-copy">Third alternative: using <code>filter()</code>.</span>
<span class="comment-copy"><code>list(filter(list2.__contains__, list1))</code></span>
<span class="comment-copy">@falsetru Won't that return the opposite of what the OP returns?</span>
<span class="comment-copy">@BhargavRao, Both (The code in the answer and in the comment) returns <code>['a', 'a', 'c']</code>.</span>
<span class="comment-copy">Sorry, my bad. I got confused.</span>
