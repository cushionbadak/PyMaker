<div class="post-text" itemprop="text">
<p>In python I want to calculate the number of bits required to represent an unsigned number. For eg:</p>
<pre><code>2 --&gt; 2 bits
3 --&gt; 2 bits
10 --&gt; 4 bits
</code></pre>
<p>I am simply calculating it as follows <code>len( bin( n ) ) - 2</code></p>
<p>Is there any other better way to calculate this ? purely using bit manipulation so that I can use it on other languages as well ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The easiest way is to use the <a href="https://docs.python.org/3/library/stdtypes.html#int.bit_length" rel="nofollow"><code>.bit_length()</code></a> method of <code>int</code> type:</p>
<pre><code>&gt;&gt;&gt; for n in (2, 10):
...     print(n.bit_length())
... 
2
4
</code></pre>
<p>If you want to do the bit twiddling yourself, you could use the following function:</p>
<pre><code>def bit_length(n):
    bits = 0
    while n:
        bits += 1
        n &gt;&gt;= 1
    return bits
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If you really want a bit to do it, then</p>
<pre><code>count=0
while(n!=0):
 n=n&gt;&gt;1
 count+=1
</code></pre>
</div>
<span class="comment-copy">Use <code>int.bit_length(integer)</code> python2.7, <code>a=10 a.bit_length()</code> python3</span>
<span class="comment-copy">Your method looks ok, you could also use <code>ceil(log(n, 2))</code> but that may be more expensive.</span>
<span class="comment-copy">Important to consider if you are using signed or unsigned numbers too...</span>
<span class="comment-copy">@zetysz I want to use just bit manipulation so that I can port it to other language.</span>
<span class="comment-copy">@ilent2 just unsigned numbers</span>
<span class="comment-copy">is there a way I can avoid python specific method and find it using just bit manipulation or something so that I can port it to other language like C ?</span>
<span class="comment-copy">@user881300: sure, see the update..</span>
<span class="comment-copy">Shouldn't that be n&gt;&gt;1?</span>
<span class="comment-copy">yes, it's too early in the morning</span>
