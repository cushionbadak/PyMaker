<div class="post-text" itemprop="text">
<p>I'd like to be able to do something like this (Python 3):</p>
<pre><code>config = configparser.ConfigParser()

config.read('http://example.com/myconfig.cfg')
</code></pre>
<p>What is the best way to read a config file over HTTP in Python? I'm not married to <code>configparser</code> if there is a better option.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>urllib2</code> to read file over HTTP and feed <code>config.readfp</code> with it.</p>
<pre><code>import urllib2

config = configparser.ConfigParser()

r = urllib2.urlopen("http://example.com/myconfig.cfg")
config.readfp(r)
</code></pre>
</div>
<span class="comment-copy">Just to make sure: be careful with loading external resources. They can post security risks.</span>
<span class="comment-copy">Note: This is Python 3, and assuming 3.2+, you'll want to use <a href="https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.read_file" rel="nofollow noreferrer"><code>read_file</code></a>, not <code>readfp</code>. <code>readfp</code> has been deprecated since 3.2. Similarly, you'd want <a href="https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen" rel="nofollow noreferrer"><code>urllib.request.urlopen</code></a>, not <code>urllib2.urlopen</code> for any Py3 version.</span>
<span class="comment-copy">Using ShadowRanger's suggestions, I had to do: config.read_string(r.read().decode('utf-8'))  urllib.request.urlopen returns a http.client.HTTPResponse object, so I had to do it that way, which works, does it look like the best way to do it?</span>
