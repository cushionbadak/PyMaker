<div class="post-text" itemprop="text">
<p>I have a dict, of varying length. Each entry has a name and a list as so:</p>
<pre><code>somedict = {'Name': [1, 2, 3], 'Name2': [], 'Name3': [2,3] }
</code></pre>
<p>How do I get the intersection for the following list? I need to do it dynamically, I don't know how long the dict will be.</p>
<p>For the above list, the intersection would be empty, I know. But for</p>
<pre><code>somedict = {'Name': [1, 2, 3], 'Name3': [2,3] }
</code></pre>
<p>It should return</p>
<pre><code>[2, 3]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Normally, intersection is a set operation. So, you might want to convert the values of the dictionary to sets and then run intersection, like this</p>
<pre><code>&gt;&gt;&gt; set.intersection(*(set(values) for values in data.values()))
{2, 3}
</code></pre>
<p>If you want the result to be a list, just convert the resulting set to a list, like this</p>
<pre><code>&gt;&gt;&gt; list(set.intersection(*(set(values) for values in data.values())))
[2, 3]
</code></pre>
<p>Here, the expression, <code>*(set(values) for values in data.values())</code> creates a generator, which yields each and every value of the dictionary item converted to a set and the generator is <a href="https://stackoverflow.com/a/12786141/1903116">unpacked</a> to the <a href="https://docs.python.org/3/library/stdtypes.html#set.intersection" rel="nofollow noreferrer"><code>set.intersection</code></a> function.</p>
</div>
<div class="post-text" itemprop="text">
<p>Provide another way using <code>reduce</code>.</p>
<pre><code>reduce(lambda x,y: set(x) &amp; set(y), the_list)
</code></pre>
<p>the way it behave is like(e.g <code>the_list = [[1, 2, 3], [], [2,3]]</code>):</p>
<pre><code>set([1,2,3]) &amp; set([]) =&gt; tmp_result
set(tmp_result) &amp; set([2,3]) =&gt; final_result
</code></pre>
<p>so the solution will be:</p>
<pre><code>&gt;&gt;&gt; dict_one = {'Name': [1, 2, 3], 'Name2': [], 'Name3': [2, 3]}
&gt;&gt;&gt; reduce(lambda x,y: set(x) &amp; set(y), dict_one.values())
set([])
&gt;&gt;&gt; dict_two = {'Name': [1, 2, 3], 'Name3': [2, 3]}
set([2, 3])
&gt;&gt;&gt; list(dict_two)
[2, 3]
</code></pre>
</div>
