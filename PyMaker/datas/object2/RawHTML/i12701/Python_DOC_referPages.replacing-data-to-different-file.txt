<div class="post-text" itemprop="text">
<p>First of all, we have two files:</p>
<p><em>file01.txt</em></p>
<pre><code>101|10075.0|12|24/12/2015
102|1083.33|12|24/12/2015
</code></pre>
<p><strong>The second file has only one line!</strong></p>
<p><em>file02.txt</em> </p>
<pre><code>101|False|Section06
</code></pre>
<p>The first parameter is th same in both files (unique).
I must replace data file01 by some from file02. Match criterion is the first parameter (code).</p>
<p>I have one input (request for code) and readlines for both file what next I need to do Also I'm working with lists.</p>
<p>Expected result:</p>
<pre><code>input = 101
</code></pre>
<p>The output should be:</p>
<pre><code>101|False|Section06
102|1083.33|12|24/12/2015
</code></pre>
</div>
<div class="post-text" itemprop="text">
<h2>Solution</h2>
<p>This works for the given example:</p>
<pre><code>with open('file01.txt') as fobj1, open('file02.txt') as fobj2:
    data1 = fobj1.readlines()
    data2 = fobj2.readline()

code = data2.split('|', 1)[0]

with open('file01.txt', 'w') as fobj_out:
    for line in data1:
        if line.split('|', 1)[0] == code:
            fobj_out.write(data2 + '\n')
        else:
            fobj_out.write(line)
</code></pre>
<h2>Step by step</h2>
<p>We open both files for reading:</p>
<pre><code>with open('file01.txt') as fobj1, open('file02.txt') as fobj2:
    data1 = fobj1.readlines()
    data2 = fobj2.readline()
</code></pre>
<p>The read data looks like this:</p>
<pre><code>&gt;&gt; data1
['101|10075.0|12|24/12/2015\n', '102|1083.33|12|24/12/2015']

&gt;&gt; data2
'101|False|Section06'
</code></pre>
<p>We only need the code from <code>file02.txt</code>:</p>
<pre><code>&gt;&gt;&gt; code = data2.split('|', 1)[0]
code
'101'
</code></pre>
<p>The <code>data2.split('|', 1)</code> splits at <code>|</code>.  Since we need only one split, we can limit it with <code>1</code>. </p>
<p>Now we open <code>file01.txt</code> again. This time for writing:</p>
<pre><code>with open('file01.txt', 'w') as fobj_out:
    for line in data1:
        if line.split('|', 1)[0] == code:
            fobj_out.write(data2 + '\n')
        else:
            fobj_out.write(line)
</code></pre>
<p>This line <code>if line.split('|', 1)[0] == code:</code> does the same split as above but for all lines of <code>file01.txt</code>. If the code is equal to the one from <code>file02.txt</code>, we use the line from <code>file02.txt</code>, otherwise we just write the line form <code>file01.txt</code> back.</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <a href="https://docs.python.org/3/library/csv.html#csv.reader" rel="nofollow"><code>csv.reader()</code></a> to read the file, and put them in a dict, then replace the keys like this:</p>
<pre><code>import csv
with open('file1') as f:
    d = {i[0]: i[1:] for i in csv.reader(f, delimiter='|')}

with open('file2') as f:
    d.update({i[0]: i[1:] for i in csv.reader(f, delimiter='|')})
</code></pre>
<p>And <code>d</code> looks like:</p>
<pre><code>{'101': ['False', 'Section06'], '102': ['1083.33', '12', '24/12/2015']}
</code></pre>
<p>To get the excepted output:</p>
<pre><code>&gt;&gt;&gt; ['|'.join([i[0]]+i[1]) for i in d.items()]
['101|False|Section06', '102|1083.33|12|24/12/2015']
</code></pre>
<p>And if you want write them into a file:</p>
<pre><code>with open('file1', 'w') as f:
    for i in d.items():
        f.write('|'.join([i[0]]+i[1]))
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can simply concatenate the two sets of data into a single <code>pandas.DataFrame()</code>, as follows:</p>
<pre><code>import pandas as pd

df1 = pd.DataFrame([[10075.0, 12,'24/12/2015'], [1083.33, 12, '24/12/2015']], index=[101,102], columns=['prc', 'code', 'date'])
'''                    
101|10075.0|12|24/12/2015
102|1083.33|12|24/12/2015
'''
df2 = pd.DataFrame([[False, 'Section06'], [True, 'Section07']], index=[101,102], columns=['Bool', 'Section'])
'''
101|False|Section06
102|True|Section07
'''
pd.concat([df1,df2], axis=1, join='outer')
</code></pre>
<p>Which gives:</p>
<pre><code>          prc  code        date   Bool    Section
101  10075.00    12  24/12/2015  False  Section06
102   1083.33    12  24/12/2015   True  Section07
</code></pre>
<p>Now you can get rid of the columns you don't need (eg using <code>pandas.Drop()</code>)</p>
</div>
<span class="comment-copy">What do you mean? Replace the first file with the second file? Why don't just copy-paste...</span>
<span class="comment-copy">Haha funny ? no my program must do it</span>
<span class="comment-copy">also i have table for both files and can see in terminal data of both files.</span>
<span class="comment-copy">Completely unclear what you are asking.</span>
<span class="comment-copy">Show us your expected results in your question</span>
<span class="comment-copy">split('|', 1). for what is "1" ?</span>
<span class="comment-copy">This will help maybe</span>
<span class="comment-copy">It splits at <code>|</code> but only once: <code>['101', 'False|Section06']'</code>.</span>
<span class="comment-copy">Very helpful, thank you.</span>
<span class="comment-copy">I'm wondering if the time complexity is too high if you have to write the altered table back to File1.</span>
<span class="comment-copy">I said above that i'm working with lists, can u provide me what every line here do ?</span>
<span class="comment-copy">This files are just examples, my line is pretty big , i must isolate it in some temp file and change part by part , and write back to old file on same place.</span>
<span class="comment-copy">@BullzY: Check my edit.</span>
<span class="comment-copy">Problem is, for some lines we need a certain subset of the columns and for others we need the other subset.</span>
<span class="comment-copy">OP changed its question quite substantially since I read it first and answered.  ah..</span>
