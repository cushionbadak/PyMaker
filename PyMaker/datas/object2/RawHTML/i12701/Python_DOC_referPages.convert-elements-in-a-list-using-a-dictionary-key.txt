<div class="post-text" itemprop="text">
<p>I have a list of <code>values</code> that match with certain <code>keys</code> from a dictionary I created earlier.</p>
<pre><code>myDict = {1:'A',2:'B',3:'C'}
myList = ['A','A','A','B','B','A','C','C']
</code></pre>
<p>How can I create/convert <code>myList</code> into something like:</p>
<pre><code>myNewList = [1,1,1,2,2,1,3,3]
</code></pre>
<p>Could someone point me in the right direction?</p>
<p>Not sure if it matters, I created the dictionary using json in another script, and I am now loading the created dictionary in my current script.</p>
</div>
<div class="post-text" itemprop="text">
<p>One easy way is to just invert <code>myDict</code> and then use that to map the new list:</p>
<pre><code>myNewDict = {v: k for k, v in myDict.iteritems()}
myNewList = [myNewDict[x] for x in myList]
</code></pre>
<p>Also take a look at this for Python naming conventions: <a href="https://stackoverflow.com/questions/159720/what-is-the-naming-convention-in-python-for-variable-and-function-names">What is the naming convention in Python for variable and function names?</a></p>
</div>
<div class="post-text" itemprop="text">
<pre><code>myDict = {1:'A',2:'B',3:'C'}

myList = ['A','A','A','B','B','A','C','C']

value = [key for i in myList for key, value in myDict.iteritems() if i == value]

print value
</code></pre>
<p>I recommend you read a bit about the compression list
<a href="http://docs.python.org.ar/tutorial/3/datastructures.html" rel="nofollow">http://docs.python.org.ar/tutorial/3/datastructures.html</a></p>
</div>
<div class="post-text" itemprop="text">
<p>This works too:</p>
<pre><code>myNewList = []
for val in myList:
    for key, value in myDict.iteritems():
        if val == value:
        myNewList.append(key)
</code></pre>
</div>
<span class="comment-copy">How have you guaranteed that <code>myDict</code>'s values are unique?  If you haven't, what do you intend to do with a dictionary like <code>{1:'A', 2:'B', 3:'A'}</code>?  Would you replace each <code>'A'</code> in <code>myList</code> with a <code>1</code> or a <code>3</code>... or raise an error of some sort?</span>
<span class="comment-copy">In my case, the values are unique. Not sure if I will come across your scenario anytime soon, but for now I can make this code compile the way I want, which is awesome! Thanks for checking though! :)</span>
<span class="comment-copy">If <code>myDict</code> contains duplicate values, this will result in a mostly-unpredictable <code>myNewDict</code> and <code>MyNewList</code>.  O.P. hasn't addressed that situation yet... for all we know, unique values are already guaranteed.</span>
<span class="comment-copy">@KevinJ.Chase honestly I think OP might have his keys and values flipped. But I think the succinct answer works for this situation unless more details are provided.</span>
<span class="comment-copy">Do you mean <a href="https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions" rel="nofollow noreferrer">list comprehensions</a>?</span>
<span class="comment-copy">yes I sorry,  I'm learning english</span>
<span class="comment-copy">list comprehensions are great but using multiple list comprehensions together makes it hard to read and interpret it for humans. I would break it into two parts and solve it.</span>
<span class="comment-copy">If <code>myDict</code> contains duplicate values, this will append <i>all</i> matching keys to <code>myNewList</code>, in a mostly-unpredictable order.</span>
<span class="comment-copy">add break in the if clause to avoid the duplicates: <code>myNewList = []</code> <code>for val in myList:</code> `    for key, value in myDict.iteritems():` `        if val == value:` `            myNewList.append(key)` `            break` `</span>
