<div class="post-text" itemprop="text">
<p>I am trying to catch a warning that is raised as an error by applying the <code>'error'</code> filter of <code>warnings.simplefilter</code>.  A minimum working example is given below:</p>
<pre><code>&gt;&gt;&gt; import warnings
&gt;&gt;&gt; warnings.simplefilter('error')
&gt;&gt;&gt; try:
...     warnings.warn('test')
... except UserWarning:
...     raise ValueError
...
ValueError: 
</code></pre>
<p>This works fine, but if I want to chain this so that the traceback from the warning is included, I get the following <code>TypeError</code>:</p>
<pre><code>&gt;&gt;&gt; import sys
&gt;&gt;&gt; try:
...     warnings.warn('test')
... except UserWarning:
...     raise ValueError from sys.exc_info()[2]
...
TypeError: exception causes must derive from BaseException
</code></pre>
<p>It seems that even though I am raising a class derived from <code>BaseException</code> (i.e. the <code>ValueError</code>), the information from the traceback from the <code>UserWarning</code> seems to be tricking Python into thinking I am still raising the <code>UserWarning</code>.</p>
<p>Is this the expected behavior?  If so, is there a good workaround?</p>
<p>I am on Python 3.4.3.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are trying to use the <strong>traceback object</strong> as the exception:</p>
<pre><code>raise ValueError from sys.exc_info()[2]
</code></pre>
<p><a href="https://docs.python.org/3/library/sys.html#sys.exc_info" rel="nofollow"><code>sys.exc_info()</code></a> returns a tuple of <code>(ExceptionType, exception_instance, traceback)</code>; you'd want index 1 here (remember Python counts indices from <code>0</code>!):</p>
<pre><code>raise ValueError from sys.exc_info()[1]
</code></pre>
<p>Much better, capture the exception instance in a variable directly:</p>
<pre><code>try:
    warnings.warn('test')
except UserWarning as warning:
    raise ValueError from warning
</code></pre>
<p>That way you don't have to count out tuple indices.</p>
<p>When you set the warnings filter to <code>'error'</code>, the exceptions are subclasses of the <a href="https://docs.python.org/3/library/exceptions.html#Warning" rel="nofollow"><code>Warning</code> exception class</a>, which inherits from <code>Exception</code>, see the <a href="https://docs.python.org/3/library/exceptions.html#exception-hierarchy" rel="nofollow"><em>Exception Hierachy</em> section</a>.</p>
</div>
<span class="comment-copy">By all rights I should delete this question because it was a simple mistake on my part mixing up documentation for two different things; however, the title of the question is general enough, and the answer is good enough that it warrants keeping this around.</span>
<span class="comment-copy">Thanks. I was convoluting <code>raise ... from ...</code> with <code>raise Exception().with_traceback(...)</code>.  My actual use case is within a the <code>__exit__</code> method of a context manager, so I actually am given <code>exc_type</code>, <code>exc_value</code>, and <code>traceback</code> which is why I presented my example using <code>sys.exc_info()</code>.  I was doing <code>raise Exc from traceback</code>, but it looks like I should do <code>raise Exc from exc_value</code>.</span>
<span class="comment-copy">@SethMMorton: the <code>Exception.with_traceback()</code> method doesn't set the <code>__cause__</code> attribute. If you don't handle the exception you'd get <i>only</i> the new exception printed, while with a <code>__cause__</code> attribute you get both, separated by <code>The above exception was the direct cause of the following exception</code>.</span>
<span class="comment-copy">Thanks .  For future readers, the above comment did not come out of left field... I had asked about <code>with_traceback</code> versus <code>raise .. from ..</code> then deleted the question.</span>
