<div class="post-text" itemprop="text">
<p>I don't understand how <code>if not x % 2: return True</code> works. Wouldn't that mean this if x is not divisible by two, return True? That's what i see in this code. </p>
<p>I see it as <code>if not x % 2: return True</code> would return the opposite of if a number is divisible by 2, return True.</p>
<p>I just don't understand how that part of the syntax works.  </p>
<pre><code>def is_even(x):
    if not x % 2:
        return True
    else:
        return False
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>Wouldn't that mean this if x is not divisible by two, return True?</p>
</blockquote>
<p>No, because when x is not divisible by 2 the result of <code>x%2</code> would be a nonzero value, which will be evaluated as <code>True</code> by Python, so its <code>not</code> would be <code>False</code>.</p>
<p>Read more about <a href="https://docs.python.org/3/library/stdtypes.html#truth-value-testing">Truth value testing</a> in python.</p>
</div>
<div class="post-text" itemprop="text">
<p>The modulo operator <code>%</code> returns the remainder of a division. If <code>x</code> is divisible by 2 ('even'), then the remainder is zero and <code>x % 2</code> thus evaluates to zero (=False), which makes the whole expression True.</p>
</div>
<div class="post-text" itemprop="text">
<p>note, to add to the other answers: <code>x % 2</code> does not mean "x is divisible by 2"; instead, it is the modulo operator, and returns the value <code>y</code> such that <code>x</code> is congruent to <code>y</code> (mod 2), which is really just the remainder of dividing <code>x</code> by 2. </p>
<p>Here is a fix for your code:</p>
<pre><code>def is_even(x):
    if not x % 2 == 0:
        # if x is divisible by two, the
        # remainder will be 0
        return True
    else:
        return False
</code></pre>
<p>See also: The modulo operator, in the <a href="https://docs.python.org/3.4/reference/expressions.html#binary-arithmetic-operations" rel="nofollow">python language reference</a> (under "Binary Arithmetic Operators", fourth paragraph down.</p>
</div>
<div class="post-text" itemprop="text">
<p>If the remainder of X / 2 is 0, then return true</p>
<pre><code>2 % 2 = 0


!0 = true
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Simpler and readable is for instance</p>
<pre><code>def is_even(x): 
    return x % 2 == 0
</code></pre>
<p>where it explicitly tells the expression must equate zero in order for the function to return <code>True</code>.</p>
</div>
<div class="post-text" itemprop="text">
<p>If operation <code>X modulo 2 = 0</code>, function returns true - which means that the number is even.</p>
<p>Operation modulo 2 returns the remainder from division by 2.</p>
<p><strong>Example:</strong></p>
<p><code>5 % 2 = 1</code> because <code>5 = 2*2 + 1</code></p>
<p><code>7 % 2 = 1</code> because use <code>7 = 3*2 + 1</code></p>
<p><code>6 % 2 = 0</code> because <code>6 = 3*2 + 0</code></p>
</div>
<span class="comment-copy">Would <code>if 0</code> return True? On a sidenote <code>return not x % 2</code> would be a nicer way to write it</span>
<span class="comment-copy">When in doubt, print! <code>print(x % 2, not x % 2)</code> would show you how the calculation shakes out.</span>
<span class="comment-copy">Thanks @Kasramvd for the answer it really helps with my understanding of what modulo is and how to use it.</span>
<span class="comment-copy">even though this is a horrible antipattern ... just <code>return not x%2</code>  i really hate <code>if True: return True</code>... that said +1 for explaining modulo to him</span>
