<div class="post-text" itemprop="text">
<p>This Python program enters fdisk.  I see the output.  fdisk is an interactive program.  How do I get the Python program to pass an "m" to the first field and press enter? </p>
<pre><code>import subprocess
a = "dev/sda"
x = subprocess.call(["fdisk", a])
print x
</code></pre>
<p>I'd rather not import a new module/library, but I could.  I've tried different syntax with subprocess.call() and extra parameters in the above.  Nothing seems to work.  I get different errors. I've reviewed Python documentation.  I want to feed input and press Enter in the subsequent, interactive menu options of fdisk.</p>
</div>
<div class="post-text" itemprop="text">
<p>Check out the <a href="https://pexpect.readthedocs.org/en/stable/" rel="nofollow"><code>pexpect</code></a> library (I know you didn't want an extra module, but you want to use the best tool for the job). It's pure Python, with no compiled submodules, so installation is a snap. Basically, it does the same thing in Python as the classic Unix utility <a href="http://expect.sourceforge.net/" rel="nofollow"><code>expect</code></a> - spawns child applications, controls them, and responds to expected patterns in their output. It's great for automation, and especially application testing, where you can quickly feed the newest build of a command-line program a series of inputs and guide the interaction based on what output appears.</p>
<p>In case you just don't want another module at all, you can always fall back on the <a href="https://docs.python.org/3/library/subprocess.html" rel="nofollow"><code>subprocess</code></a> module's <a href="https://docs.python.org/3/library/subprocess.html#subprocess.Popen" rel="nofollow"><code>Popen()</code></a> constructor. It spawns and creates a connection to a child process, allowing you to communicate with it as needed, and in fact <code>pexpect</code> relies a great deal on it. I personally think using <code>pexpect</code> is more intuitive than <code>subprocess.Popen()</code>, but that's just me. YMMV.</p>
</div>
<span class="comment-copy">Popen and writing to stdin is all that is needed</span>
<span class="comment-copy">@PadraicCunningham true, but I find <code>pexpect</code> much easier to use. I'll make a mention of it in the answer.</span>
<span class="comment-copy">Yep pexpect is definitely a better general tool but you might as well throw in the popen solution though as it is pretty straight forward.</span>
<span class="comment-copy">@Padraic edited.</span>
