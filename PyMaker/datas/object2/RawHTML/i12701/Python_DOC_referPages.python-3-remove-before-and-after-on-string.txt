<div class="post-text" itemprop="text">
<p>I have this string <code>/1B5DB40?full</code> and I want to convert it to <code>1B5DB40</code>.</p>
<p>I need to remove the <code>?full</code> and the front <code>/</code></p>
<p>My site won't always have <code>?full</code> at the end so I need something that will still work even if the <code>?full</code> is not there.</p>
<p>Thanks and hopefully this isn't too confusing to get some help :)</p>
<p>EDIT:<br/>
I know I could slice at 0 and 8 or whatever, but the <code>1B5DB40</code> could be longer or shorter. For example it could be <code>/1B5DB4000?full</code> or <code>/1B5</code></p>
</div>
<div class="post-text" itemprop="text">
<p>Using <a href="https://docs.python.org/3/library/stdtypes.html#str.lstrp" rel="nofollow"><code>str.lstrip</code></a> (to remove leading <code>/</code>) and <a href="https://docs.python.org/3/library/stdtypes.html#str.split" rel="nofollow"><code>str.split</code></a> (to remove optinal part after <code>?</code>):</p>
<pre><code>&gt;&gt;&gt; '/1B5DB40?full'.lstrip('/').split('?')[0]
'1B5DB40'

&gt;&gt;&gt; '/1B5DB40'.lstrip('/').split('?')[0]
'1B5DB40'
</code></pre>
<p>or using <a href="https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlparse" rel="nofollow"><code>urllib.parse.urlparse</code></a>:</p>
<pre><code>&gt;&gt;&gt; import urllib.parse
&gt;&gt;&gt; urllib.parse.urlparse('/1B5DB40?full').path.lstrip('/')
'1B5DB40'
&gt;&gt;&gt; urllib.parse.urlparse('/1B5DB40').path.lstrip('/')
'1B5DB40'
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can use <code>lstrip</code> and <code>rstrip</code>:</p>
<pre><code>&gt;&gt;&gt; data.lstrip('/').rstrip('?full')
'1B5DB40'
</code></pre>
<p>This only works as long as you don't have the characters <code>f</code>, <code>u</code>, <code>l</code>, <code>?</code>, <code>/</code> in the part that you want to extract.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can use regular expressions:</p>
<pre><code>&gt;&gt;&gt; import re

&gt;&gt;&gt; extract = re.compile('/?(.*?)\?full')
&gt;&gt;&gt; print extract.search('/1B5DB40?full').group(1)
1B5DB40
&gt;&gt;&gt; print extract.search('/1Buuuuu?full').group(1)
1Buuuuu
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>What about regular expressions?</p>
<pre><code>import re
re.search(r'/(?P&lt;your_site&gt;[^\?]+)', '/1B5DB40?full').group('your_site')
</code></pre>
<p>In this case it matches everything that is between <code>'/'</code> and <code>'?'</code>, but you can change it to your specific requirements</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>&gt;&gt;&gt; '/1B5DB40?full'split('/')[1].split('?')[0]
'1B5DB40'
&gt;&gt;&gt; '/1B5'split('/')[1].split('?')[0]
'1B5'
&gt;&gt;&gt; '/1B5DB40000?full'split('/')[1].split('?')[0]
'1B5DB40000'
</code></pre>
<p><a href="https://docs.python.org/2/library/stdtypes.html#str.split" rel="nofollow">Split</a> will simply return a single element list containing the original string if the separator is not found.</p>
</div>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/509211/explain-pythons-slice-notation" title="explain pythons slice notation">stackoverflow.com/questions/509211/â€¦</a></span>
<span class="comment-copy">@pvg I updated my question. The string will be different sizes, which is what I cannot figure out. If I slice it at 0 and 8 then it wont work</span>
<span class="comment-copy">Can you slice at "/" and "?" ?</span>
<span class="comment-copy">@falsetru Will this work even if there isnt <code>?full</code> since sometimes the string won't have it? Sorry I'm new to python so trying to figure this all out.</span>
<span class="comment-copy"><code>string[1:].replace("?full", "")</code></span>
<span class="comment-copy">What if <code>data</code> is <code>'/1Buuuu?full'</code>?</span>
<span class="comment-copy">@falsetru: You are right, I had no idea about that!</span>
