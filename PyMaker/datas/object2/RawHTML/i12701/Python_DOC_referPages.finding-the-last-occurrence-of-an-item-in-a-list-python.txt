<div class="post-text" itemprop="text">
<p>I wish to find the last occurrence of an item 'x' in sequence 's', or to return None if there is none and the position of the first item is equal to 0</p>
<p>This is what I currently have:</p>
<pre><code>def PositionLast (x,s):

    count = len(s)+1
    for i in s:
        count -= 1
        if i == x:
           return count
    for i in s:
        if i != x:
           return None
</code></pre>
<p>When I try:</p>
<pre><code>&gt;&gt;&gt;PositionLast (5, [2,5,2,3,5])
&gt;&gt;&gt; 4
</code></pre>
<p>This is the correct answer. However when I change 'x' to 2 instead of 5 I get this:</p>
<pre><code>&gt;&gt;&gt;PositionLast(2, [2,5,2,3,5])
&gt;&gt;&gt; 5
</code></pre>
<p>The answer here should be 2. 
I am confused as to how this is occurring, if anyone could explain to what I need to correct I would be grateful. 
I would also like to complete this with the most basic code possible.</p>
<p>Thank you.</p>
</div>
<div class="post-text" itemprop="text">
<p>To do it efficiently, <a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow noreferrer">enumerate</a> the list in <a href="https://docs.python.org/3/library/functions.html#reversed" rel="nofollow noreferrer">reverse</a> order and return the index of the first matching item (or <code>None</code> by default), e.g.:</p>
<pre><code>def PositionLast(x, s):
    for i, v in enumerate(reversed(s)):
        if v == x:
            return len(s) - i - 1  # return the index in the original list
    return None
</code></pre>
<p>Avoid reversing the list using slice notation (e.g. <code>s[::-1]</code>) as that would create a new reversed list in memory, which is not necessary for the task.</p>
</div>
<div class="post-text" itemprop="text">
<p>Your logic is incorrect, because you return the count if <code>i==x</code> and you have an extra loop at the trailing of your function.</p>
<p>Instead you loop over the reverse forms of enumerate of your list and return the index of first occurrence :</p>
<pre><code>def PositionLast (x,s):
    return next(i for i,j in list(enumerate(s))[::-1] if j == x)
</code></pre>
<p>Demo:</p>
<pre><code>print PositionLast (2, [2,5,2,3,5,3])
2
print PositionLast (3, [2,5,2,3,5,3])
5
print PositionLast (5, [2,5,2,3,5,3])
4
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your code is wrong, it's checking the list from the beginning and stopping at the first match, what you want is to check the list in reverse order.</p>
<pre><code>def PositionLast (x,s):
    count = len(s)
    for i in s[::-1]:
        count -= 1
        if i == x:
            return count
    return None
</code></pre>
<p>Your first line gives you the correct answer only because of coincidence:<br/>
- Counts equal 5 when checking for the first item.<br/>
- Counts equal 4 when checking for the second item, it matches, then return 4.<br/>
- Coincidentally, this is the index of your last item.  </p>
</div>
<div class="post-text" itemprop="text">
<p>Iterate list in reverse order and then check x. This could be an efficient way as reversing list and then finding index from beginning is resource intensive.</p>
<pre><code>def PositionLast (x,s):
    for i in range(len(s)-1,0,-1):
        if s[i] == x:
            return i
    return None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def positionLast(x, L):
    answer = None
    for i,e in enumerate(L):
        if e==x: answer = i
    return answer
</code></pre>
</div>
<div class="post-text" itemprop="text">
<pre><code>def positionLast(x, L):
    try: return max(i for i,e in enumerate(L) if e==x)
    except: return None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Thanks everyone for the replies and help! Unfortunately no one had the answer I was looking for but no matter I worked it out myself in the end but thank you very much all the same!</p>
<p>Here is the final code:</p>
<pre><code>def PositionLast(x,s):

    count = -1
    position = None
    for i in s:
        count += 1
        if i == x:
            position = count
    return position
</code></pre>
<p>This returns the correct answers to all my tests.</p>
<p>Thanks, Eimear.</p>
</div>
<div class="post-text" itemprop="text">
<pre><code>def lastposition(array,x):

    flag = 0
    for i in range(len(array)):
        if array[i] == int(x):
            x = i
            flag = 1
        else:
            pass
    if flag == 0:
        print 'None'
    else:
        print x

array = [2,5,2,3,5]

x = 2

lastposition(array,x)
</code></pre>
</div>
<span class="comment-copy">Possible duplicate of <a href="http://stackoverflow.com/questions/522372/finding-first-and-last-index-of-some-value-in-a-list-in-python">Finding first and last index of some value in a list in Python</a></span>
<span class="comment-copy">This is not a good answer bro.</span>
<span class="comment-copy">You need to explain why this is the solution</span>
