<div class="post-text" itemprop="text">
<p>I have a dictionary in Python which looks like this</p>
<pre><code>{123: [u'6722000', u'6722001', u'6631999', u'PX522.X522.091003143054.S4J2', u'PXX22.XX22.140311131347.A6D4', u'7767815060', u'6631900', u'7767815062', u'18001029945', u'7767815063'],...}
</code></pre>
<p>When I want to print out the values of dictionary (or store it in a txt file), I only want the values which have "P" in it and not the one having only numbers.</p>
<p>For example, the above dictionary should look like  </p>
<pre><code>{123: [u'PX522.X522.091003143054.S4J2', u'PXX22.XX22.140311131347.A6D4'],...}
</code></pre>
<p>This is the code that I have written </p>
<pre><code>components = nx.connected_component_subgraphs(G)

for idx, comp in enumerate(components):
    if "P" in comp.nodes():
       comp_dict.update({idx: comp.nodes()})
</code></pre>
<p>But it's giving me no output.
If I execute the code without the if-statement, I'm getting the same output with all the values.</p>
</div>
<div class="post-text" itemprop="text">
<p><strong>Code with comments inline:</strong></p>
<pre><code>a_dict = {123: [u'6722000', u'6722001', u'6631999', u'PX522.X522.091003143054.S4J2', u'PXX22.XX22.140311131347.A6D4', u'7767815060', u'6631900', u'7767815062', u'18001029945', u'7767815063'],
               456: [u'6722000', u'6722001', u'6631999', u'PX522.X522.091003143054.S4J2']}
    print "Before...",a_dict
    #Iterate over keys of dictonary
    for k in a_dict.keys():
        #Check the values in list for 'P'. Keep only which has 'P'
        tmp_list = [i for i in a_dict[k] if "P" in i]
        #Update dictionary with new list
        a_dict[k]=tmp_list
        tmp_list = []
    print "After...", a_dict
</code></pre>
<p><strong>Output:</strong></p>
<pre><code>C:\Users\dinesh_pundkar\Desktop&gt;python c.py
Before... {456: [u'6722000', u'6722001', u'6631999', u'PX522.X522.091003143054.S
4J2'], 123: [u'6722000', u'6722001', u'6631999', u'PX522.X522.091003143054.S4J2'
, u'PXX22.XX22.140311131347.A6D4', u'7767815060', u'6631900', u'7767815062', u'1
8001029945', u'7767815063']}
After... {456: [u'PX522.X522.091003143054.S4J2'], 123: [u'PX522.X522.09100314305
4.S4J2', u'PXX22.XX22.140311131347.A6D4']}

C:\Users\dinesh_pundkar\Desktop&gt;
</code></pre>
<p>Please let me know if you have query.</p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/functions.html#enumerate" rel="nofollow">enumerate</a> will give you the iterator index and value of the iterable. In this case the key and index of the key. Not the values of a key. And as the value is a list of string you have to check for "P" in the strings inside the list. Try like this:</p>
<pre><code>for idx, comp in components.items():
    for s in comp:
        if "P" in s:
            print(s)
</code></pre>
</div>
<span class="comment-copy">I don't see you operate on the dictionary you showed. This is a networkx related question and <code>comp.nodes()</code> returns a list of <code>Graph</code> objects if I'm not mistaken, "P" will never be an item of that.</span>
<span class="comment-copy">So is there no way in which I can extract all the 'P' values at any later stage? What I mean to ask is that can I perform any operation on comp_dict and store all the values which contain 'P'  into another dict?</span>
<span class="comment-copy">Thank you, @Dinesh. Your code provided me with the solution I wanted. There's just one more thing. Now, I'm using two for loops instead of one to get the output I want. Is it possible in any way that I implement your logic within my for loop since time complexity is of utmost importance to me?</span>
<span class="comment-copy">Can you please share code you mentioned above? Without seeing, cannot comment.</span>
<span class="comment-copy"><code>comp_dict = {idx: comp.nodes() for idx, comp in enumerate(components)}</code> <code>print comp_dict</code>  It does the same task as the for loop which is there in my question (except filtering out all 'P' values which, obviously, wasn't working earlier).</span>
<span class="comment-copy">Thank you for answering. But in your code, I'm just getting a list of values containing "P" whereas I need a dictionary as output in the same format as my input.</span>
