<div class="post-text" itemprop="text">
<p>So I was writing a tool that would read time from file using graphical user interface based on python 3.52 and Qt5. The minimal operation</p>
<pre><code>datetime.datetime.strptime('Tue', '%a')
</code></pre>
<p>works in an isolated environment, giving output "1900-01-01 00:00:00". However, when I run the following minimal example</p>
<pre><code>import sys
import datetime as datetime

from PyQt5 import QtWidgets

if __name__ == '__main__' :
    print(datetime.datetime.strptime('Tue', '%a'))
    app = QtWidgets.QApplication(sys.argv)
    print(datetime.datetime.strptime('Tue', '%a'))
    #sys.exit(app.exec_())
</code></pre>
<p>I get the output</p>
<pre><code>1900-01-01 00:00:00
Traceback (most recent call last):
File "/home/user/gui/testfile.py", line 11, in &lt;module&gt;
print(datetime.datetime.strptime('Tue', '%a'))
File "/usr/lib/python3.5/_strptime.py", line 510, in _strptime_datetime
tt, fraction = _strptime(data_string, format)
File "/usr/lib/python3.5/_strptime.py", line 343, in _strptime
(data_string, format))
ValueError: time data 'Tue' does not match format '%a'
</code></pre>
<p>So, the first call to the <i>strptime</i> routine works fine, but after the <i>QApplication</i> class is created, it does not work any more. Note that further using <i>QApplication</i> to construct the GUI and do a lot of complicated things with it works fine. The only thing that does not work currently is <i>strptime</i></p>
<p>Any idea what goes wrong?</p>
</div>
<div class="post-text" itemprop="text">
<p>I can reproduce your problem: after calling the QtWidget, the </p>
<p><code>print(datetime.datetime.strptime('Tue', '%a'))</code></p>
<p>results in an error.</p>
<p>If I execute after QtWidget</p>
<p><code>print(datetime.datetime.strptime('Die', '%a'))</code>
this works.</p>
<p>I am located in Switzerland, so <em>Die</em> in German is equivalent to <em>Tue</em>.</p>
<p>It seems that Qt somehow has an influence on the region settings as %A and %a evaluates the local weekday's name(<a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-behavior" rel="nofollow">Datetime</a>). Maybe a Qt expert can explain more in detail, what is ongoing.</p>
</div>
<div class="post-text" itemprop="text">
<p>To elaborate on the nice answer by Patrick, I have now found a way to undo the localization enforced by QT</p>
<pre><code>import sys
import datetime as datetime
import locale

from PyQt5 import QtWidgets

## Start the QT window
print(datetime.datetime.strptime('Tue', '%a'))
app = QtWidgets.QApplication(sys.argv)
locale.setlocale(locale.LC_TIME, "en_GB.utf8")
print(datetime.datetime.strptime('Tue', '%a'))
#sys.exit(app.exec_())
</code></pre>
</div>
<span class="comment-copy">I've tried your script and I can't reproduce, it doesn't crash here (3.5.1 x64,QT_VERSION_STR=5.7.0, PYQT_VERSION_STR=5.7, win7)</span>
<span class="comment-copy">Wow, who would have thought...</span>
<span class="comment-copy">It probably calls <a href="https://linux.die.net/man/3/setlocale" rel="nofollow noreferrer"><code>setlocale(LC_ALL, '')</code></a> or equivalent at some point during its initialization</span>
<span class="comment-copy">Note that this will only work if the <code>en_GB.utf8</code> locale is installed on the os, otherwise it will raise an exception. The <a href="https://linux.die.net/man/3/setlocale" rel="nofollow noreferrer">default on startup of a program</a> is the <code>C</code> locale, so to be portable you might want to use that.</span>
