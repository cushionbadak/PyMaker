<div class="post-text" itemprop="text">
<p>I thought the display in Python interactive mode was always equivalent to <code>print(repr())</code>, but this is not so for <code>None</code>. Is this a language feature or am I missing something? Thank you</p>
<pre><code>&gt;&gt;&gt; None
&gt;&gt;&gt; print(repr(None))
None
&gt;&gt;&gt;
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Yes, this behaviour is intentional.</p>
<p>From the <a href="https://docs.python.org/3/reference/simple_stmts.html#expression-statements" rel="nofollow">Python docs</a></p>
<blockquote>
<p>7.1. Expression statements</p>
<p>Expression statements are used (mostly interactively) to compute and
  write a value, or (usually) to call a procedure (a function that
  returns no meaningful result; in Python, procedures return the value
  <code>None</code>). Other uses of expression statements are allowed and
  occasionally useful. The syntax for an expression statement is:</p>
<pre><code>expression_stmt ::=  starred_expression
</code></pre>
<p>An expression statement evaluates the expression list (which may be a
  single expression).</p>
<p>In interactive mode, if the value is not <code>None</code>, it is converted to a
  string using the built-in <code>repr()</code> function and the resulting string
  is written to standard output on a line by itself (except if the
  result is <code>None</code>, so that procedure calls do not cause any output.)</p>
</blockquote>
</div>
<div class="post-text" itemprop="text">
<p>It's a deliberate feature. If the python code you run evaluates to exactly <code>None</code> then it is not displayed.</p>
<p>This is useful a lot of the time. For example, calling a function with a side effect may be useful, and such functions actually return <code>None</code> but you don't usually want to see the result.</p>
<p>For example, calling <code>print()</code> returns <code>None</code>, but you don't usually want to see it:</p>
<pre><code>&gt;&gt;&gt; print("hello")
hello
&gt;&gt;&gt; y = print("hello")
hello
&gt;&gt;&gt; y
&gt;&gt;&gt; print(y)
None
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>In Python, a function that does not return anything but is called only for its side effects actually returns None. As such functions are common enough, Python interactive interpreter does not print anything in that case. By extension, it does not print anything when the interactive expression evaluates to None, even if it is not a function call.</p>
<p>If can be misleading for beginners because you have </p>
<pre><code>&gt;&gt;&gt; a = 1
&gt;&gt;&gt; a
1
&gt;&gt;&gt;
</code></pre>
<p>but </p>
<pre><code>&gt;&gt;&gt; a = None
&gt;&gt;&gt; a
&gt;&gt;&gt;
</code></pre>
<p>but is is indeed <em>by design</em></p>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/constants.html#None" rel="nofollow"><code>None</code></a> represents the absence of a value, but that absence can be observed. Because it represents <em>something</em> in Python, its <code>__repr__</code> cannot possibly return <em>nothing</em>; <code>None</code> is not nothing.</p>
<p>The outcome is deliberate. If for example a function returns <code>None</code> (similar to having no return statement), the return value of a call to such function does not get shown in the console, so for example <code>print(None)</code> does not <em>print</em> <code>None</code> twice, as the function <code>print</code> equally returns <code>None</code>.</p>
<p>On a side note, <code>print(repr())</code> will raise a <code>TypeError</code> in Python.</p>
</div>
<span class="comment-copy">How do you mean <i>as expected</i>? FWIW, <code>None</code> is not nothing</span>
<span class="comment-copy">@MosesKoledoye I mean <i>as I expected</i> of course, I expected it would behave like anything else where <code>print(repr())</code> gives the same output, apologies</span>
<span class="comment-copy">From <a href="https://docs.python.org/3/reference/simple_stmts.html#expression-statements" rel="nofollow noreferrer">the docs</a> "In interactive mode, if the value is not <code>None</code>, it is converted to a string using the built-in <code>repr()</code> function and the resulting string is written to standard output on a line by itself (except if the result is <code>None</code>, so that procedure calls do not cause any output.)"</span>
<span class="comment-copy">Thanks, this is helpful. Perhaps it could be illustrated further with something like <code>print(print(2))</code> which displays <code>2</code> and <code>None</code></span>
<span class="comment-copy">@Chris_Rands Exactly!</span>
<span class="comment-copy">"<code>print(repr())</code> will raise a TypeError in Python." --- That comes from the <code>repr()</code>, which requires an argument, not the <code>print</code>.  <code>print(repr(None))</code> prints the string <code>'None'</code>, which appears on console without the quotes: <code>None</code> (both when run as a command-line script, or in interactive mode).</span>
<span class="comment-copy">@KevinJ.Chase Thanks Kevin, I never intended to suggest calling <code>repr()</code> with no arguments but perhaps my initial question was not clear on this</span>
