<div class="post-text" itemprop="text">
<p>On Raspberry 3 I run a Rabbit-Mq listener.py that receives a large string (json) consisting of 14000 key/value pairs. The listener.py script will grab this string and pass it along to another script(database.py) that will encode it back to json(python dict object), parse it and store the values to a Mariadb database.</p>
<p>The listener.py calls:</p>
<pre><code>os.system("python %s %s" % (database.py, body))
</code></pre>
<p>where "body" is the string received from rabbitmq. </p>
<p>I have a concern that the 14000 objects json might be to big to pass to database.py as <code>sys argument</code>. Are there any other methods I could achieve my goal? I just heard about pickle, is it better for my purpose?  </p>
</div>
<div class="post-text" itemprop="text">
<p>A simple way would be to use multiprocessing.connection with its <a href="https://docs.python.org/3/library/multiprocessing.html?highlight=multiprocessing#module-multiprocessing.connection" rel="nofollow">Listener and Client</a>. These methods use pickle internally.</p>
</div>
<span class="comment-copy">Why don't you accept the data in database.py directly?</span>
<span class="comment-copy">@MKesper well listener.py runs in a "While True:" loop and is responsible of sending out different commands to many scripts (database updates, graphs, downloads etc). I need this sort of modular approach to keep my code clean</span>
<span class="comment-copy">@BogdanMirceaStanciu but that doesn't need to go via an <code>os.system</code> call. Import database and call methods directly?</span>
<span class="comment-copy">This seems promising. And one of the reasons I call another python script trough "os.system" is to have multiple python processes running at the same time.</span>
<span class="comment-copy">Sounds like you'd want a Process Pool (<a href="https://docs.python.org/3/library/multiprocessing.html?highlight=multiprocessing#module-multiprocessing.pool" rel="nofollow noreferrer">docs.python.org/3/library/â€¦</a>) then.</span>
