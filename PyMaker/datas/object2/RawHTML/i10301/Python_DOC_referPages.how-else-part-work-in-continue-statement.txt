<div class="post-text" itemprop="text">
<p>I'm not sure how the <code>continue</code> statement is interpreted when it is inside a <code>for</code> loop with an <code>else</code> clause.</p>
<p>If the condition is true, the <code>break</code> will exit from a <code>for</code> loop and <code>else</code> part will not be executed. And if the condition is False then <code>else</code> part will be executed. </p>
<p>But, what about <code>continue</code> statement? I tested it seems that the after the <code>continue</code> statement is reached, the <code>else</code> part will be executed. Is this true?? Here is a code example:</p>
<pre><code># when condition found and it's `true` then `else` part is executing :

edibles = ["ham", "spam", "eggs","nuts"]
for food in edibles:
    if food == "spam":
        print("No more spam please!")
        continue
    print("Great, delicious " + food)

else:
    print("I am so glad: No spam!")
print("Finally, I finished stuffing myself")`
</code></pre>
<p>If I remove "spam" from the list, now the condition is always <code>false</code> and never found but still the <code>else</code> part is executed:</p>
<pre><code>edibles = ["ham","eggs","nuts"]
for food in edibles:
    if food == "spam":
        print("No more spam please!")
        continue
    print("Great, delicious " + food)

else:
    print("I am so glad: No spam!")
print("Finally, I finished stuffing myself")
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your <code>else</code> part will be executed in both cases. 
<code>else</code> part executed when loop terminate when condition didn't found.Which is what is happening in your code. But it will also work same without <code>continue</code> statement.</p>
<p>now what about break statement's else part, Break statement's else part will be executed only if:</p>
<ul>
<li>If the loop completes normally without any break.</li>
<li>If the loop doesn't encounter a break.</li>
</ul>
<p><a href="https://i.stack.imgur.com/yPLeC.png" rel="nofollow noreferrer"><img alt="enter image description here" src="https://i.stack.imgur.com/yPLeC.png"/></a></p>
</div>
<div class="post-text" itemprop="text">
<p>With a <code>for</code> loop in Python, the <code>else</code> block is executed when the loop finishes normally, i.e. there is no <code>break</code> statement. A <code>continue</code> does not affect it either way.</p>
<p>If the for loop ends because of a <code>break</code> statement, then <code>else</code> block will not execute. If the loop exits normally (no <code>break</code>), then the <code>else</code> block will be executed.</p>
<p>From the <a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops" rel="nofollow">docs</a>:</p>
<blockquote>
<p>When used with a loop, the else clause has more in common with the else clause of a try statement than it does that of if statements: a try statement’s else clause runs when no exception occurs, and a loop’s else clause runs when no break occurs.</p>
</blockquote>
<p>I always remember it because of how Raymond Hettinger <a href="https://youtu.be/OSGv2VnC0go?t=17m44s" rel="nofollow">describes it</a>. He said it should have been called <code>nobreak</code> instead of <code>else</code>. (That's also a good video that explains the usefulness of the for-else construct)</p>
<p>Example:</p>
<pre><code>numbers = [1,2,3]
for number in numbers:
    if number == 4:
        print("4 was found")
        break
else:
    print("4 was not found")
</code></pre>
<p>When you run the above code, since <code>4</code> is not in the list, the loop will not <code>break</code> and the <code>else</code> clause will print. If you add <code>4</code> to the list and run it again, it will <code>break</code> and the <code>else</code> will not print. In most other languages, you would have to add some sentinel boolean like <code>found</code> and make it <code>True</code> if you find a <code>4</code>, then only print the statement after the loop if <code>found</code> is <code>False</code>. </p>
</div>
<span class="comment-copy"><code>for/else</code> use only <code>break</code> and <code>else</code> doesn't care for <code>continue</code> - it is <code>for-break-else</code> construction. (see @Charles answer)</span>
<span class="comment-copy">Thanks :) i like your explanation can you please answer this question ?   <a href="http://stackoverflow.com/questions/40006300/how-two-recursion-function-in-program-works#40006300" title="how two recursion function in program works%2340006300">stackoverflow.com/questions/40006300/…</a></span>
<span class="comment-copy">And of course if the <code>for</code> (or <code>while</code>) loop is in a function and you exit the loop prematurely using <code>return</code> then the <code>else</code> clause won't be executed either.</span>
