<div class="post-text" itemprop="text">
<p>I am trying to extract English titles from a wiki titles dump that's in a text file using regex in Python 3. The wiki dump contains titles in other languages also and some symbols. Below is my code:</p>
<pre><code>with open('/Users/some/directory/title.txt', 'rb')as f:
    text=f.read()
    letters_only = re.sub(b"[^a-zA-Z]", " ", text)
    words = letters_only.lower().split() 
print(words)
</code></pre>
<p>But I am getting an error:</p>
<pre><code>TypeError: sequence item 1: expected a bytes-like object, str found 
</code></pre>
<p>at the line: <code>letters_only = re.sub(b"[^a-zA-Z]", " ", text)</code></p>
<p>But, I am using <code>b''</code> to make output as byte type, below is a sample of the text file:</p>
<pre><code>Destroy-Oh-Boy!!
!!Que_Corra_La_Voz!!
!!_(chess)
!!_(disambiguation)
!'O!Kung
!'O!Kung_language
!'O-!khung_language
!337$P34K
!=
!?
!?!
!?Revolution!?
!?_(chess)
!A_Luchar!
!Action_Pact!
!Action_pact!
!Adios_Amigos!
!Alabadle!
!Alarma!
!Alarma!_(album)
!Alarma!_(disambiguation)
!Alarma!_(magazine)
!Alarma!_Records
!Alarma!_magazine
!Alfaro_Vive,_Carajo!
!All-Time_Quarterback!
!All-Time_Quarterback!_(EP)
!All-Time_Quarterback!_(album)
!Alla_tu!
!Amigos!
!Amigos!_(Arrested_Development_episode)
!Arriba!_La_Pachanga
!Ask_a_Mexican!
!Atame!
!Ay,_Carmela!_(film)
!Ay,_caramba!
!BANG!
!Bang!
!Bang!_TV
!Basta_Ya!
!Bastardos!
!Bastardos!_(album)
!Bastardos_en_Vivo!
!Bienvenido,_Mr._Marshall!
!Ciauetistico!
!Ciautistico!
!DOCTYPE
!Dame!_!Dame!_!Dame!
!Decapitacion!
!Dos!
!Explora!_Science_Center_and_Children's_Museum
!F
!Forward,_Russia!
!Forward_Russia!
!Ga!ne_language
!Ga!nge_language
!Gã!ne
!Gã!ne_language
!Gã!nge_language
!HERO
!Happy_Birthday_Guadaloupe!
!Happy_Birthday_Guadalupe!
!Hello_Friends
</code></pre>
<p>I have searched online but could not succeed. Any help will be appreciated.</p>
</div>
<div class="post-text" itemprop="text">
<p>You have to choose between binary and text mode.</p>
<p>Either you open your file as <code>rb</code> and then you can use <code>re.sub(b"[^a-zA-Z]", b" ", text)</code>  (<code>text</code> is a <code>bytes</code> object)</p>
<p>Or you open your file as <code>r</code> and then you can use <code>re.sub("[^a-zA-Z]", " ", text)</code>    (<code>text</code> is a <code>str</code> object)</p>
<p>The second solution is more "classical".</p>
</div>
<div class="post-text" itemprop="text">
<p>The problem is with the <code>repl</code> argument you supply, it isn't a <code>bytes</code> object:</p>
<pre><code>letters_only = re.sub(b"[^a-zA-Z]", " ", b'Hello2World')
# TypeError: sequence item 1: expected a bytes-like object, str found
</code></pre>
<p>Instead, supply <code>repl</code> as a bytes instance <code>b" "</code>:</p>
<pre><code>letters_only = re.sub(b"[^a-zA-Z]", b" ", b'Hello2World')
print(letters_only) 
b'Hello World'
</code></pre>
<hr/>
<p>Note: Don't prefix your literals with <code>b</code> and don't open the file with <code>rb</code> if you aren't looking for <code>byte</code> sequences. </p>
</div>
<div class="post-text" itemprop="text">
<p>You can't use a <code>byte</code> string for your regex match when the replacement string isn't.<br/>
Essentially, you can't mix different objects (<code>byte</code>s and <code>string</code>s) when doing most tasks. In your code above, you are using a binary search string and a binary text, but your replacement string is a regular <code>string</code>. All arguments need to be of the same type, so there are 2 possible solutions to this.</p>
<p>Taking the above into account, your code could look like this (this will return regular <code>string</code> strings, not <code>byte</code> objects):</p>
<pre><code>with open('/Users/some/directory/title.txt', 'r')as f:
    text=f.read()
    letters_only = re.sub(r"[^a-zA-Z]", " ", text)
    words = letters_only.lower().split() 
print(words)
</code></pre>
<p>Note that the code does use a special type of string for the regex - a raw string, prefixed with <code>r</code>. This means that python won't interpret escape characters such as <code>\</code>, which is very useful for regexes. See <a href="https://docs.python.org/3/reference/lexical_analysis.html#string-and-bytes-literals" rel="nofollow">the docs</a> for more details about raw strings.</p>
</div>
<span class="comment-copy">try <code>re.sub("[^a-zA-Z]", " ", text)</code> instead</span>
<span class="comment-copy">@imant i tried this also but i am getting below error: <b>TypeError: cannot use a string pattern on a bytes-like object</b></span>
<span class="comment-copy">very nice, I did not know it could be done on bytes. However I'm not sure it's the way to go here. Better go text-only and drop the bytes. Well, maybe it avoids encoding problems.</span>
<span class="comment-copy">that works , now there is no error. But i am getting "b" prefix to every extracted word. Like this **[b'you', b'and', b'then', b'some']**but i think according to you it should not be there.</span>
<span class="comment-copy">@Jean-FrançoisFabre you were right ;-). Sherlock, just open the file without specifying <code>b</code> as @Jean suggests in his answer. <code>b</code> prefixed to the mode when opening files results in them being read as <code>bytes</code> objects, if that isn't what you need, drop it :-)</span>
<span class="comment-copy">@Jean-FrançoisFabre  thanks it worked.</span>
<span class="comment-copy">Let me say I'm pleased of the way the things turned out: Jim is the most knowledgeable of us all, he knew about the ability to use regexes for <code>bytes</code>, although us, mere mortals, just wanted to use a text file and knew zip about that! So everyone learned something and noone got bashed (I almost deleted my post at some point)</span>
<span class="comment-copy">actually you CAN do it, see Jim's answer. You should know it, I know it for at least ... 5 minutes :)</span>
<span class="comment-copy">@Jean-FrançoisFabre Hmmmmmmm... I do too now ;)</span>
