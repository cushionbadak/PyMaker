<div class="post-text" itemprop="text">
<p>I'm looking to unpack from a buffer a string and its length.</p>
<p>For example to obtain <code>(4, 'Gégé')</code> from this buffer :<br/>
<code>b'\x00\x04G\xE9g\xe9'</code></p>
<p>Does someone know how to do ?</p>
</div>
<div class="post-text" itemprop="text">
<p>The length data looks like a big-endian unsigned 16 bit integer, and the string data looks like it's using the Latin1 encoding. If that's correct, you can extract it like this:</p>
<pre><code>from struct import unpack

def extract(buff):
    return unpack(b'&gt;H', buff[:2])[0], buff[2:].decode('latin1')

buff = b'\x00\x04G\xE9g\xe9'
print(extract(buff))
</code></pre>
<p><strong>output</strong></p>
<pre><code>(4, 'Gégé')
</code></pre>
<p>Another possibility for the encoding is the old <a href="https://en.wikipedia.org/wiki/Windows-1252" rel="nofollow noreferrer">Windows code page 1252</a>, which can be decoded using <code>.decode('cp1252')</code>.</p>
<hr/>
<p>The above code works in both Python 2 &amp; Python 3. But in Python 3 there's an easier way: we don't need <code>struct.unpack</code>, we can use the <a href="https://docs.python.org/3/library/stdtypes.html#int.from_bytes" rel="nofollow noreferrer"><code>int.from_bytes</code></a> method.</p>
<pre><code>def extract(buff):
    return int.from_bytes(buff[:2], 'big'), buff[2:].decode('latin1')
</code></pre>
</div>
<span class="comment-copy">Please do not delete your question when it has received a (useful) answer.</span>
