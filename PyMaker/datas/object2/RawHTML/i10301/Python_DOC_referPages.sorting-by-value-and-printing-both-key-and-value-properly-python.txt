<div class="post-text" itemprop="text">
<p><strong>Question 1</strong>: How Can I add to dictionary with asking user, I.E. Input ("Write Runners name"), Input ("Write elapsed time!")</p>
<p><strong>Question 2</strong>: 
I would like to make the output like this.
Underneath my Code .... Drafts :)</p>
<pre><code>import operator
</code></pre>
<p><strong>Dictionary</strong></p>
<pre><code>runners = {"John": 9, "Mike": 2, "Venera": 4}
</code></pre>
<p>Output:</p>
<pre><code>1st. "Entered runner name ", came at, "input time"
2nd. "Entered runner name ", came at, "input time"
3rd. "Entered runner name ", came at, "input time"
</code></pre>
<p>Below it sorts from least to more</p>
<pre><code>s = sorted(runners.items(), key=operator.itemgetter(1))
print(s)
</code></pre>
<p>Example will give you full understanding my problem. So, example code is this, I just want to make it easier.</p>
<pre><code>names =[]
array_times = []
</code></pre>
<p>Looping it questions, to not write bunch of inputs 
for i in range(3):</p>
<pre><code> name=input("Please write the name of Runner!")
    #Appending name to the array name above!
    names.append(name)
    time_elapsed = float(input("Please write the time you spend!"))
    #Appending it to the array above!
    array_times.append(time_elapsed)
# Just to make it easier to understand, assigning the values in arrays above to variables. 
runner1= names[0]
runner2=names[1]
runner3=names[2]
time1=array_times[0]
time2=array_times[1]
time3=array_times[2]
</code></pre>
<p>Writing if-else statement to check which one is which place. </p>
<pre><code>if time1&lt;time2 and time1&lt;time3 and time2&lt;time3:#First winner, second in second, third is last.
    print (runner1,  "wins! His time is", time1, runner2, "is second place. His time is", time2, "and ", runner3, "is third place. his time is ", time3)
elif time2&lt;time1 and time2&lt;time3 and time1&lt;time3:#Second winner, first in second place, third is last.
    print (runner2,  "wins! His time is", time2, runner1, "is second place. His time is", time1, "and ", runner3, "is third place. his time is ", time3)
elif time3&lt;time1 and time3&lt;time2 and time1&lt;time2:#Third winner, First is second, second is last.
    print (runner3,  "wins! His time is", time3, runner1, "is second place. His timae is", time1, "and ", runner2, "is third place. his time is ", time2)
elif time3&lt;time1 and time3&lt;time2 and time2&lt;time1:#Third winner, second is second, first is last.
     print (runner3,  "wins! His time is", time3, runner2, "is second place. His time is", time2, "and ", runner1, "is third place. his time is ", time1)
elif time2&lt;time1 and time2&lt;time3 and time3&lt;time1:#Third winner, second is second, first is last.
     print (runner2,  "wins! His time is", time2, runner3, "is second place. His time is", time
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>python3</p>
<pre><code>import operator

runners = {}

for x in range(3):
    name = input("name: ")
    elapsed_time = int(input("time: "))
    runners[name] = elapsed_time

templates = [
    "{name} wins! His time is {time}.",
    "{name} is in second place. His time is {time}",
    "and {name} is in third place. His time is {time}"
]

for idx, (name, elapsed_time) in enumerate(sorted(runners.items(), key=operator.itemgetter(1))):
    print(templates[idx].format(name=name, time=elapsed_time), end=" ")
print()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>as mentioned in the python <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">doc</a></p>
<blockquote>
<p>It is best to think of a dictionary as an unordered set of key: value pairs, with the requirement that the keys are unique (within one dictionary)</p>
</blockquote>
<p>Use <a href="https://docs.python.org/3/library/collections.html#ordereddict-objects" rel="nofollow">OrderedDict</a></p>
<pre><code>from collections import OrderedDict

no_of_runners = int(input())

runners = dict()
for i in range(no_of_runners):
    name = input()
    time = float(input())
    runners[name] = time
sorted_runners = OrderedDict(sorted(runners.items(), key=lambda t: t[1]))

runners_list = [(i,j) for i,j in sorted_runners.items()]

print (runners_list[0][0],  "wins! His time is", runners_list[0][1], runners_list[1][0], "is in second place. His time is", runners_list[1][1], "and ", runners_list[2][0], "is in third place. his time is ", runners_list[2][1])
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python 2.7</p>
<pre><code>runners={}
for i in range(3):
    name=raw_input("Please write the name of Runner!")
    time_elapsed = float(raw_input("Please write the time you spend!"))
    runners[name]=time_elapsed
position=[]
for name, elapsed in sorted(runners.iteritems(), key=lambda elapsed: elapsed[1]):
    position.append((name, elapsed))
print position[0][0],  "wins! His time is", position[0][1],'\n', position[1][0], "is second. His time is", position[1][1], "\n", position[2][0], "is third. His time is ", position[2][1]
</code></pre>
<p>Python3</p>
<pre><code>runners={}
for i in range(3):
    name=input("Please write the name of Runner!")
    time_elapsed = float(input("Please write the time you spend!"))
    runners[name]=time_elapsed
position=[]
for name, elapsed in sorted(runners.items(), key=lambda elapsed: elapsed[1]):
    position.append((name, elapsed))
print ('\n',position[0][0],  "wins! His time is", position[0][1],'\n', position[1][0], "is second. His time is", position[1][1], "\n", position[2][0], "is third. His time is ", position[2][1])
</code></pre>
</div>
<span class="comment-copy"><i>one</i> question please.</span>
<span class="comment-copy">This works for me. Thanks. But.  Can you please explain your code?  1. runners[name] = elapsed_time 2. for idx, (name, elapsed_time) in enumerate(sorted(runners.items(), key=operator.itemgetter(1))):     print(templates[idx].format(name=name, time=elapsed_time), end=" ") print()</span>
<span class="comment-copy">1) It's just associating <code>name</code> with <code>time</code> in <code>runners</code> <code>dict </code><a href="https://docs.python.org/3/library/stdtypes.html#dict" rel="nofollow noreferrer">docs.python.org/3/library/stdtypes.html#dict</a> 2) <code>runners</code> sorted by value (time), <code>enumerate</code> returning current step of iteration, 0, 1, 2 in your case, and then you asking <code>templates</code> with this <code>idx</code> for string and formatting with current "place" of your runners On first (first place) iteration <code>idx</code> will be 0, so <code>templates[0]</code> will return first string -  <code>"{name} wins! His time is {time}."</code>, on next iteration (second place) <code>idx</code> will be 1 and we will take second string from <code>templates</code>, etc</span>
