<div class="post-text" itemprop="text">
<p>Right now my code will create a text file including the positions of each word in a sentence in a list, and each word in a list - like so: </p>
<p><a href="https://i.stack.imgur.com/UeqOs.png" rel="nofollow noreferrer"><img alt="file content" src="https://i.stack.imgur.com/UeqOs.png"/></a></p>
<p>My code then opens back up the file and should be able to recreate the sentence using those positions and the words in the text file, but it doesn't seem to work with with the readlines code for some reason.</p>
<pre><code>openfilename = open(openfilename,"r")
readlines = openfilename.readlines()

wordslist = readlines[0]
positionslist = readlines[1]

print(positionslist)
print(wordslist)

originalsentence = " ".join([wordslist[x-1] for x in positionslist])
print(originalsentence)
</code></pre>
<p>For example this comes up with wordslist and positionslist coming out as:</p>
<pre><code>[1, 2, 3, 2]
['test123', ',', '.']
</code></pre>
<p>Where as if I were to use:</p>
<pre><code>positionslist = [1, 2, 3, 2]
wordslist = ['test123', ',', '.']
originalsentence = " ".join([wordslist[x-1] for x in positionslist])
print(originalsentence)
</code></pre>
<p>It would work, and I have no idea why because, as a newcomer to python, you'd think they'd work the same. Looking at other people's post with the same error I'm supposedly missing a </p>
<pre><code>(int(...)
</code></pre>
<p>line of code somewhere but I'm not sure where, or if that's even the problem.</p>
</div>
<div class="post-text" itemprop="text">
<p>Another solution is to use <a href="https://docs.python.org/3/library/ast.html#ast.literal_eval" rel="nofollow"><code>ast.literal_eval()</code></a> to convert your string <code>u'[1, 2, 3, 2]</code> directly into a list of interger:</p>
<pre><code>import ast

with open(openfilename, "r") as f:
    positionslist = ast.literal_eval(f.readline())
    wordslist = ast.literal_eval(f.readline())

    print(" ".join([wordslist[x-1] for x in positionslist]))
</code></pre>
<p>Also, the <a href="https://docs.python.org/3/reference/compound_stmts.html#the-with-statement" rel="nofollow"><code>with</code></a> statement replace a try and catch. It also automatically close the file after the block.</p>
</div>
<div class="post-text" itemprop="text">
<p>EDIT: this answer assumes a "raw" format. It won't work here. It <em>would</em> work if <code>readlines[1]</code> was already a list of strings obtained by splitting a line like <code>"1 4 5 6 7"</code>, which isn't the case here since line contains a python list written as a <code>str(list)</code>. <code>ast.literal.eval</code> is the right choice in that case, <em>if</em> the input format is satisfying and not a mistake in the first place.</p>
<p>when you do:</p>
<pre><code>positionslist = readlines[1]
</code></pre>
<p>there's no way you get something other than a list of strings containing integers. You have to convert them for example like this:</p>
<pre><code>positionslist = [int(x) for x in readlines[1]]
</code></pre>
<p>In your hardcoded example, you're using integers directly and it works.</p>
<p>Note: as cricket_007 suggested, since you just iterate on <code>positionslist</code>, you can use</p>
<pre><code>positionslist = map(int,readlines[1])
</code></pre>
<p>It applies the <code>int</code> function to each item of <code>readlines[1]</code>, returns an iterable (returns <code>list</code> in Python 2, so not that much different from the list comprehension above in that case).</p>
<p>In Python 3, that avoids to create/allocate a list that you don't need since you don't use indexes (if you want to debug it you can't since you can iterate only once on it), so it is more performant.</p>
<p>of course, if some line is not a digit it will crash with an explicit error <code>ValueError: invalid literal for int() with base 10</code></p>
</div>
<div class="post-text" itemprop="text">
<p>The issue is, when you read from the file, the values are of <code>str</code> type by default. And when you try to do <code>x-1</code> in <code>[wordslist[x-1] for x in positionslist]</code>, you get error because you try to <code>subtract</code> 1 from string. In order to fix this, convert <code>positionslist</code> to list of int's as:</p>
<pre><code>positionslist = readlines[1]
positionslist = map(int, positionslist) # &lt;-- add this line in your code 
</code></pre>
<p>and your code will work. Check <a href="https://docs.python.org/2/library/functions.html#map" rel="nofollow"><code>map()</code></a> to know about it.</p>
</div>
<span class="comment-copy">Some Stackoverflow users won't open random links, you should instead paste your image. In that case, a screenshot is overkill, it's actually simpler to describe what's in your file since it's only two lines. Because of that @Jean-François Fabre couldn't answer properly your question in the first place. Anyhow, I'm glad I could have help. Welcome to Stackoverflow!</span>
<span class="comment-copy">@MaxChrétien My bad about the screenshot, I'll keep that in mind for my future questions. Thank you very much for your help by the way, I appreciate it.</span>
<span class="comment-copy">you're the only one who actually opened the input image. Okay the question format is bad. But good answer anyway.</span>
<span class="comment-copy">@Jean-François Fabre thanks for making the stack Overflow community nicer :)</span>
<span class="comment-copy">or <code>positionslist = map(int, readlines[1])</code></span>
<span class="comment-copy">yeah that would work here even in python 3 since we use the list just for iterations, not for indexes. editing it.</span>
<span class="comment-copy">I could not see your file format because of my firewall. It would have been better to post the input file as text. In that case, you need to use <code>ast.literal_eval()</code> to interpret the lists directly in python as Max Chretien suggests. That's probably because you wrote your input file using python and with <code>str(yourlist)</code> instead of writing your values one by one.</span>
