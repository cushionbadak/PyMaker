<div class="post-text" itemprop="text">
<p>I have a <code>csv</code> file that contains some data with columns names:</p>
<ul>
<li><em>"PERIODE"</em></li>
<li><em>"IAS_brut"</em></li>
<li><em>"IAS_lissé"</em></li>
<li><em>"Incidence_Sentinelles"</em></li>
</ul>
<p>I have a problem with the third one <strong><em>"IAS_lissé"</em></strong> which is misinterpreted by <code>pd.read_csv()</code> method and returned as �.</p>
<p>What is that character?</p>
<p>Because it's generating a bug in my flask application, is there a way to read that column in an other way <strong>without modifying the file?</strong></p>
<pre class="lang-py prettyprint-override"><code>In [1]: import pandas as pd

In [2]: pd.read_csv("Openhealth_S-Grippal.csv",delimiter=";").columns

Out[2]: Index([u'PERIODE', u'IAS_brut', u'IAS_liss�', u'Incidence_Sentinelles'], dtype='object')
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You can change the <code>encoding</code> parameter for read_csv, see the pandas doc <a href="http://pandas.pydata.org/pandas-docs/stable/io.html#dealing-with-unicode-data" rel="nofollow">here</a>. Also the python standard encodings are <a href="https://docs.python.org/3/library/codecs.html#standard-encodings" rel="nofollow">here</a>. </p>
<p>I believe for your example you can use the <code>utf-8</code> encoding (assuming that your language is French). </p>
<pre><code>df = pd.read_csv("Openhealth_S-Grippal.csv", delimiter=";", encoding='utf-8')
</code></pre>
<hr/>
<p>Here's an example showing some sample output. All I did was make a csv file with one column, using the problem characters.</p>
<pre><code>df = pd.read_csv('sample.csv', encoding='utf-8')
</code></pre>
<p>Output:</p>
<pre><code>    IAS_lissé
0   1
1   2
2   3
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I found the same problem with spanish, solved it with with "latin1" encoding:</p>
<pre><code>import pandas as pd

 pd.read_csv("Openhealth_S-Grippal.csv",delimiter=";", encoding='latin1')
</code></pre>
<p>Hope it helps!</p>
</div>
<div class="post-text" itemprop="text">
<p>Using utf-8 didn't work for me. E.g. this piece of code: </p>
<pre><code>    bla = pd.DataFrame(data = [1, 2])
    bla.to_csv('funkyNamé , things.csv')
    blabla = pd.read_csv('funkyNamé , things.csv', delimiter=";", encoding='utf-8')
    blabla 
</code></pre>
<p>Ultimately returned: OSError: Initializing from file failed</p>
<p>I know you said you didn't want to modify the file. If you meant the file content vs the filename, I would rename the file to something without an accent, read the csv file under its new name, then reset the filename back to its original name. </p>
<pre><code>    originalfilepath = r'C:\Users\myself\\funkyNamé , things.csv'
    originalfolder = r'C:\Users\myself'
    os.rename(originalfilepath, originalFolder+"\\tempName.csv")
    df = pd.read_csv(originalFolder+"\\tempName.csv", encoding='ISO-8859-1')
    os.rename(originalFolder+"\\tempName.csv", originalfilepath)
</code></pre>
<p>If you did mean "without modifying the file<i>name</i>, my apologies for not being helpful to you, and I hope this helps someone else. </p>
</div>
<span class="comment-copy">Looks like Pandas can't handle unicode characters in the column names. Try converting the column names to ascii. Note that you'll lose the accent.</span>
<span class="comment-copy">Oups ! I got an error ( the same one ) <code>'utf8' codec can't decode byte 0xe9 in position 8: unexpected end of data</code></span>
<span class="comment-copy">That is because your data is not encoded to <code>utf-8</code>. Try <code>latin1</code>: <code>pd.read_csv("Openhealth_S-Grippal.csv", delimiter=";", encoding='latin1')</code>...</span>
<span class="comment-copy">Yeah, <code>latin1</code> is what I had at first, but changed it to <code>utf-8</code>. @farhawa, if you want a better answer you can post your csv or a sample of it with the header so that we know what your encoding is.</span>
<span class="comment-copy">Thanks..encoding 'ISO-8859-1' worked for me. My data had pound sign, semi colons etc.</span>
