<div class="post-text" itemprop="text">
<p>I have this script</p>
<pre><code>for line in file:
    while line[i] == " ":
        if i == len(line):
            break
        i += 1
    if i == len(line):
        pass
    while not line[i] == " ":
        if i == len(line):
            break
        obj += line[i]
        i += 1
    print obj
</code></pre>
<p>As of now, <code>file</code> equals <code>["clear", "exit"]</code> and <code>i</code> equals <code>0</code>.</p>
<p>When I run this script, it errors like this</p>
<pre><code>Traceback (most recent call last):
  File "/home/ubuntu/workspace/lib/source.py", line 8, in &lt;module&gt;
    while not line[i] == " ":
IndexError: string index out of range
</code></pre>
<p>I'm pretty sure my loop is protected right, and it should break before this happens. If this the case, then why is it happening?</p>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p>my loop is protected</p>
</blockquote>
<p>No it isn't. The condition on the <code>while</code> has to be evaluated first before reaching the body of the loop where the <em>protection</em> <code>if</code> condition is.</p>
<p>To be sure <code>i</code> does not exceed the length of the list, move the condition on the <code>if</code> and make it the first condition on the <code>while</code>:</p>
<pre><code>while i &lt; len(line) and not line[i] == " ":
    obj += line[i]
    i += 1
</code></pre>
<hr/>
<p>Otherwise you could move the <code>if</code> block after the update of <code>i</code> so the condition is evaluated before that of the next iteration of <code>while</code>:</p>
<pre><code>while not line[i] == " ":
    obj += line[i]
    i += 1
    if i == len(line):
        break
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Your loop is not "safe", "break" only breaks <strong>inner</strong> loop, thus once i==len(line) it goes out of first while, stays in the main for and you try to read out line[i] in "while not line[i] == """ line, which causes you to index outside "line" (since the condition is checked before entering the loop).</p>
<pre><code>for line in file:
    while line[i] == " ":
        if i == len(line):   
            break # THIS executes, thus i == len(line)
        i += 1
    if i == len(line): # this is true, thus nothing happens, pass is no-op
        pass
    while not line[i] == " ": # this executes, and fails since i == len(line)
        if i == len(line):
            break
        obj += line[i]
        i += 1
    print obj
</code></pre>
</div>
<span class="comment-copy"><code>i</code> is not defined in your code snippet. Please update a code to demonstrate <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a>.</span>
<span class="comment-copy"><code>i</code> is out of range when evaluating the condition.  <code>pass</code> probably doesn't do what you think it does.</span>
<span class="comment-copy">Edited to include value of i</span>
<span class="comment-copy">Are you trying to understand the code you posted, or are you just looking for <code>stripped_line = line.strip()</code>?  (See the <a href="https://docs.python.org/3/library/stdtypes.html#str.strip" rel="nofollow noreferrer"><code>str.strip</code> docs</a>, along with <code>lstrip</code> and <code>rstrip</code> on that same page.)</span>
<span class="comment-copy">@KevinJ.Chase I'm trying to fix my code, as it is getting an IndexError, and print the obj.</span>
<span class="comment-copy"><code>obj</code> is never printed, fix?</span>
<span class="comment-copy">@bjskistad You can plug that part into your main code.</span>
<span class="comment-copy">I did, and it's printing two blank values.</span>
<span class="comment-copy">@bjskistad I changed the condition on the while. Check update</span>
<span class="comment-copy">Now giving me IndexError</span>
<span class="comment-copy">What do you mean <code>pass</code> is no-op? It would have to operate if the condition is true.</span>
<span class="comment-copy">I mean that "pass" does nothing, this is literaly no-op in python, it does not affect the execution in any sense. Maybe you meant "continue"?</span>
