<div class="post-text" itemprop="text">
<p>I have to write a program that shows a column of kilograms and a column of pounds, starting at 1 kilogram and ending 99, increasing every step with 2.</p>
<p>I have the following code, and the range() works for the pounds part, but not for the kilograms part. It stays always 1 for the kilograms.</p>
<pre><code>for k in range(1,3,1):
    print("Kilograms","Pounds",sep="        ")
    for i in range(1,101,2):
       for j in range(2,223,3):
           print(i,"",j,sep="        ")
       break
    break
</code></pre>
<p>Also, why can't I use floats in the range, because officially it is 2.2 pounds.</p>
<p>Thanks in advance!</p>
</div>
<div class="post-text" itemprop="text">
<p>Because you use <code>break</code> with in a loop.</p>
<p>In python you don't end a loop with anything but a decreased indentation. Remove your <code>break</code> statements and try again.</p>
<p>The <code>break</code> statements ends the current loop unconditionally. For example,</p>
<pre><code>s = 0
for i in range(1, 101):
    s = s + i
</code></pre>
<p>will make <code>s</code> equal to 5050. However, if you break it some where, like</p>
<pre><code>s = 0
for i in range(1, 101):
    s = s + i
    if i == 5:
        break
</code></pre>
<p><code>s</code> will stop increasing on 15.</p>
<p>As commentors say, you should learn the basics of python from some tutorial. There are pretty many free tutorials on the internet. Don't haste.</p>
<p>Besides, if you wanna use float steps in ranges, take a look at <a href="https://stackoverflow.com/questions/477486/python-decimal-range-step-value">this answer</a>; or rather, see comments below for a simple answer.</p>
</div>
<div class="post-text" itemprop="text">
<p>First off, remove the breaks, as those will prematurely end the loops iterations. Secondly, why are you using nested <code>for</code>loops?</p>
<p>For what you described, nested loops are not even required. You simply need to use <strong>one</strong> <code>for</code>loop. Use <code>range()</code> <strong>once</strong>, to step through the values <code>1</code> to <code>99</code> in increments of <code>2</code>.</p>
<p>From you description, something such as this should suffice:</p>
<pre><code>for i in range(1, 100, 2): # for the numbers 1-99, going by twos
    print('pounds: {} kilograms: {}'.format(i, i * 2.2)) # print pounds, print kilograms
</code></pre>
<hr/>
<p>You seem to be confused about loops in python and he builtin <code>range()</code> function. I recommend looking at the official Python documentation for both:</p>
<ul>
<li><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements" rel="nofollow">Python documentation for <code>for</code> loops</a></li>
<li><a href="https://docs.python.org/3/reference/simple_stmts.html#break" rel="nofollow">Python documentation for <code>break</code> statement</a></li>
<li><a href="https://docs.python.org/3/library/stdtypes.html?highlight=range#range" rel="nofollow">Python documentation for <code>range()</code> function</a></li>
</ul>
</div>
<div class="post-text" itemprop="text">
<p>Try this</p>
<pre><code>import numpy as np


KG_TO_LBS = 2.20462
KG = np.arange(0,100,2.20462)

print("Kilograms", "Pounds")
for kg in KG:
    print(kg, kg/KG_TO_LBS)
</code></pre>
<p>you may have to change the printout to the format you like.</p>
</div>
<span class="comment-copy">What are the breaks for? Break statements will end a loop. Also, range uses integers, which is why you can't use floats.</span>
<span class="comment-copy">First, learn the basics of python loops. Second, once you do that, try solving your problem yourself, and I think you will succeed. Then if you still need help, come back here and edit your question and show a few rows of your expected output.</span>
<span class="comment-copy">The breaks are the least of his problems...</span>
<span class="comment-copy">@DanielMcLaury Yes. His explanation really doesn't help. I still have no idea what his code is suppose to do.</span>
<span class="comment-copy">I'm fairly sure what he actually wants is just      for i in range(1, 100, 2):       print(i, i * 2.2)</span>
<span class="comment-copy">@DanielMcLaury yup, i guess this is good enough.</span>
<span class="comment-copy">It is better to provide hints in questions like this, instead of supplying with your own version of code to solve OP's problem.</span>
<span class="comment-copy">numpy isn't built-in though, which is worth noting if you want to use this method.</span>
