<div class="post-text" itemprop="text">
<p>I am trying to compare two tables (table_a and table_b) and subtract the last column of table_a from the last column of table_b. However, table_a includes an extra row and is causing me to get a NoneType Error. Is there a away I can still include the "Plums" row from table_a and just output 'NULL' for the delta cell? Below is my testable code.</p>
<p>Current Code:</p>
<pre><code>from datetime import datetime
import itertools

table_a = (
      (datetime(2016, 9, 28, 0, 0), 'Apples', 650, 700, 850),
      (datetime(2016, 9, 28, 0, 0), 'Oranges', 900, 950, 1000),
      (datetime(2016, 9, 28, 0, 0), 'Grapes', 1050, 1100, 1150),
      (datetime(2016, 9, 28, 0, 0), 'Plums', 2000, 3000, 4000)
      )

table_b = (
      (datetime(2016, 9, 27, 0, 0), 'Apples', 50, 150, 200),
      (datetime(2016, 9, 27, 0, 0), 'Oranges', 250, 350, 400),
      (datetime(2016, 9, 27, 0, 0), 'Grapes', 450, 550, 600),
      )

table_format = '{:&lt;10}|{:&lt;8}|{:&lt;8}|{:&lt;8}|{:&lt;8}|{:&lt;12}'
line_sep = ('-' * 60)

print(line_sep)
print(table_format.format('Date', 'Count_1', 'Count_2', 'Count_3' , 'Count_4', 'Count_4_Delta'))


for a, b in itertools.zip_longest(table_a, table_b):
      l = str(a[0])[0:10]
      m = a[1]
      n = a[2]
      o = a[3]
      p = a[4]
      q = b[4]
      print(line_sep)
      print(table_format.format(l, m, n, o, p, (p-q)))
</code></pre>
<p>Output with Error:</p>
<pre><code>------------------------------------------------------------
Date      |Count_1 |Count_2 |Count_3 |Count_4 |Count_4_Delta
------------------------------------------------------------
2016-09-28|Apples  |650     |700     |850     |650         
------------------------------------------------------------
2016-09-28|Oranges |900     |950     |1000    |600         
------------------------------------------------------------
2016-09-28|Grapes  |1050    |1100    |1150    |550         
Traceback (most recent call last):
  File "/media/test.py", line 30, in &lt;module&gt;
    q = b[4]
TypeError: 'NoneType' object is not subscriptable
</code></pre>
<p>If I add a if statement to remove NoneType it prints the table without an error but excludes the "Plums" row.</p>
<pre><code>for a, b in itertools.zip_longest(table_a, table_b):
      if a and b is not None:
            l = str(a[0])[0:10]
            m = a[1]
            n = a[2]
            o = a[3]
            p = a[4]
            q = b[4]
            print(line_sep)
            print(table_format.format(l, m, n, o, p, (p-q)))
</code></pre>
<p>Output with If Statement:</p>
<pre><code>------------------------------------------------------------
Date      |Count_1 |Count_2 |Count_3 |Count_4 |Count_4_Delta
------------------------------------------------------------
2016-09-28|Apples  |650     |700     |850     |650         
------------------------------------------------------------
2016-09-28|Oranges |900     |950     |1000    |600         
------------------------------------------------------------
2016-09-28|Grapes  |1050    |1100    |1150    |550              
</code></pre>
<p>I would like to have the below output. Where the "Plums" row still prints but has the string 'NULL" for the delta cell.</p>
<p>Desired Output:</p>
<pre><code>------------------------------------------------------------
Date      |Count_1 |Count_2 |Count_3 |Count_4 |Count_4_Delta
------------------------------------------------------------
2016-09-28|Apples  |650     |700     |850     |650         
------------------------------------------------------------
2016-09-28|Oranges |900     |950     |1000    |600         
------------------------------------------------------------
2016-09-28|Grapes  |1050    |1100    |1150    |550          
------------------------------------------------------------
2016-09-27|Plums   |2000    |3000    |4000    |NULL        
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow"><code>itertools.zip_longest</code></a> accepts an optional <code>fillvalue</code> parameter. If it's provided, it is used instead of <code>None</code>:</p>
<pre><code>&gt;&gt;&gt; list(itertools.zip_longest([1, 2, 3], [4, 5]))
[(1, 4), (2, 5), (3, None)]
&gt;&gt;&gt; list(itertools.zip_longest([1, 2, 3], [4, 5], fillvalue='NULL'))
[(1, 4), (2, 5), (3, 'NULL')]
</code></pre>
<p>You can provide empty row (a list of NULL values) as the <code>fillvalue</code>:</p>
<pre><code>class EmptyValue:
    def __sub__(self, other):
        return 'NULL'
    def __rsub__(self, other):
        return 'NULL'

empty_row = [None, 'NULL', EmptyValue(), EmptyValue(), EmptyValue()]
for a, b in itertools.zip_longest(table_a, table_b, fillvalue=empty_row):
    ...
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><a href="https://docs.python.org/3/library/itertools.html#itertools.zip_longest" rel="nofollow">zip_longest</a> returns a singular <code>None</code> type when it runs out of values. You want a list of <code>None</code>s or you get a <code>TypeError</code> when you try and use the subscript <code>[]</code> operator. </p>
<p>Use the optional fillvalue to get a list of <code>None</code>s and then test for <code>None</code> when you format for output so you don't get another <code>TypeError</code> when you try and do <code>p-q</code> when <code>q</code> is <code>None</code>:</p>
<pre><code>for a, b in itertools.zip_longest(table_a, table_b,fillvalue=[None]*5):
    l = str(a[0])[0:10]
    m = a[1]
    n = a[2]
    o = a[3]
    p = a[4]
    q = b[4]
    print(line_sep)
    print(table_format.format(l, m, n, o, p, (p-q) if q is not None else 'NULL'))
</code></pre>
</div>
<span class="comment-copy">This is the perfect application for the <a href="http://pandas.pydata.org/" rel="nofollow noreferrer"><code>pandas</code></a> package. Check it out.</span>
<span class="comment-copy">First thanks for looking. That snippet did resolve the NoneType error but the table is still not printing. Now I get error 'TypeError: unsupported operand type(s) for -: 'int' and 'str''.</span>
<span class="comment-copy">@MBasith, You may need to use another value instead of <code>'NULL'</code> that can be used in <code>-</code> operation. I will update the answer.</span>
<span class="comment-copy">Okay yes, I see. Cannot subtract and integer with a string.</span>
<span class="comment-copy">This worked great. I'm not very familiar with classes yet but looks like they are quite valuable. If you have a moment can you please let me know what this class is doing?  Thank you so much for your help. Well appreciated.</span>
<span class="comment-copy">@MBasith, The special method <code>__sub__</code> is used when you subtract value from <code>EmptyValue</code> instance. <code>__rsub__</code> is used when you subtract <code>EmptyValue</code> instance from other value.  In other word, <code>EmptyValue() - 1</code> calls <code>EmptyValue().__sub__(1)</code>; <code>1 - EmptyValue()</code> calls <code>EmptyValue().__rsub__(1)</code> (operator overloading). I hope my explanation makes sense.</span>
<span class="comment-copy">@dawg This solution is short and sweet. Worked great. Thank you!</span>
