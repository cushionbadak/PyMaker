<div class="post-text" itemprop="text">
<p>I am writing unit tests for a function, f, which imports other functions/classes which the unit test does not (directly) interact with. Is there any way I can patch those functions from the unit test (maybe in set_up())? </p>
<p>For reference, I am using Python 2.7.</p>
<p>From the unittest, I want to modify/patch the behavior of helper.</p>
<p>In unittest file:</p>
<pre><code>def test_some_function():
    assert(some_function() == True)
</code></pre>
<p>In some_function() definition</p>
<pre><code>import helper
def some_function():
    foo = helper.do_something()
    return foo &amp; bar
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Mocking out a module is fairly standard and documented <a href="https://docs.python.org/3/library/unittest.mock.html#quick-guide" rel="nofollow">here</a>. You will see a fairly explicit example of how it is done. </p>
<p>Furthermore, it is important to understand <a href="https://docs.python.org/3/library/unittest.mock.html#where-to-patch" rel="nofollow">where to patch</a>, to understand how you properly mock out modules in other scripts. </p>
<p>To provide you with a more explicit example with reference to your code, you want to do something like this: </p>
<pre><code>import unittest
from unittest.mock import patch

import module_you_are_testing

class MyTest(unittest.TestCase):

    @patch('module_you_are_testing.helper')
    def test_some_function(self, helper_mock):
        helper_mock.do_something.return_value = "something"
        # do more of your testing things here
</code></pre>
<p>So, the important thing to remember here, is that you are referencing <code>helper</code> with respect to <em>where</em> you are testing. Look at the sample code I provided and you will see we are importing <code>module_you_are_testing</code>. So, it is with respect to <em>that</em> you mock. </p>
</div>
<span class="comment-copy">Please provide a <a href="https://stackoverflow.com/help/mcve">Minimal, Complete, and Verifiable example</a> of your scenario. i.e. Show your code and test code and explain what issues you are having.</span>
<span class="comment-copy">Edited. Hopefully that is enough. I don't think there is much more code I can paste, as this is more of a general question. I know that I can patch, etc. within a single file, but I want to be able to change the behaviour for the unit tests. I tried using a set_up() patch command, but could not get it to work.</span>
<span class="comment-copy">So, you want to control what <code>helper.do_something</code> does? In other words, you are looking to mock that to control its return to write your unit tests for <code>some_function</code>? Because that is definitely doable</span>
<span class="comment-copy">Exactly! My first question was if that was possible, so thanks for clarifying that. :) How can I go about actually doing it? I've tried MagicMock, @patch, etc. based on different blogs, but nothing seems to change the behavior in the unit tests, only locally.</span>
