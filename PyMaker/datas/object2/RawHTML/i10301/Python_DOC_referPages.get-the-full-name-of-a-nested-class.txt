<div class="post-text" itemprop="text">
<p>Given a nested class <code>B</code>:</p>
<pre><code>class A:
    class B:
        def __init__(self):
            pass

ab = A.B()
</code></pre>
<p>How can I get the full name of the class for <code>ab</code>? I'd expect a result like <code>A.B</code>. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could get the fully qualified name, <a href="https://docs.python.org/3/library/stdtypes.html#definition.__qualname__" rel="nofollow"><code>__qualname__</code></a>, of its <a href="https://docs.python.org/3/library/stdtypes.html#instance.__class__" rel="nofollow"><code>__class__</code></a>:</p>
<pre><code>&gt;&gt;&gt; ab.__class__.__qualname__
'A.B'
</code></pre>
<p>Preferably by using <a href="https://docs.python.org/3/library/functions.html#type" rel="nofollow"><code>type</code></a> (which calls <code>__class__</code> on the instance):</p>
<pre><code>&gt;&gt;&gt; type(ab).__qualname__
</code></pre>
</div>
<span class="comment-copy">Why are you nesting classes? What do you need that name for? What's the actual problem you're trying to solve?</span>
<span class="comment-copy">One of my strongest reason is that is show like good practice for modules. For example i have one class which is envelope for all module. I use it because python hasnt perfect solution for modules.   second reason it is better decomposition of problem.</span>
<span class="comment-copy">That's not a great reason; Python <i>does</i> have a solution for modules, and it's, err, modules. The file, or directory containing <code>__init__.py</code>, is the module. You don't have to wrap everything in classes, this isn't Java. Maybe you should have asked that question instead.</span>
<span class="comment-copy"><a href="http://stackoverflow.com/questions/2020014/get-fully-qualified-class-name-of-an-object-in-python" title="get fully qualified class name of an object in python">stackoverflow.com/questions/2020014/â€¦</a></span>
<span class="comment-copy">The good practice is: don't nest classes. There's almost always another, better way to do whatever you're doing.</span>
<span class="comment-copy">Thank you very much.</span>
