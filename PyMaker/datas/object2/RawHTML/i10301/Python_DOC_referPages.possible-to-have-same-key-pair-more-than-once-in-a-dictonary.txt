<div class="post-text" itemprop="text">
<p>I'm creating a blackjack game with a deck of cards like so:<br/>
<code>cards = {'ace':[1,11],'2':2,'3':3}...</code> and so on.  </p>
<p>I want to have <code>3</code> decks of cards, so is it possible to have more than one ace, etc.? If so, how? I still want each card to have the keypair of its value, but I don't care if it's in a dictionary. </p>
</div>
<div class="post-text" itemprop="text">
<p>You could use two separate data structures: One to define <em>unchanging</em> information such as card names and values (as you have already done), and another to keep track of <em>changing</em> information, such as how many of each card remains in the deck.</p>
</div>
<div class="post-text" itemprop="text">
<p>Using a dictionary type in Python will not allow you to have duplicate keys (<a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">see documentation</a>). So it would not be possible to have more than one 'ace' key in any given dictionary.</p>
<p>You didn't give much context as to how you would use the dictionary in your game. Is it used to store all of the cards in the game and to determine the order in which cards are drawn. Or is it simply used to lookup the value of a card that is stored somewhere else in your programme?</p>
<p>If the former is the case then a dictionary is probably not the right data structure to be using as order is not guaranteed (again, <a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries" rel="nofollow">see documentation</a>). Consider using a list, where the order of the elements is maintained and duplicate entries are allowed. You could consider creating a Card class which would have name, value, and deck properties, and store instances of this class in the aforementioned list.</p>
<p>If the latter is the case then it doesn't matter how many decks you have, the name-to-value mappings will always remain the same. In this case you don't need more than one copy of the dictionary.</p>
</div>
<span class="comment-copy">But in your example you have ace with two corresponding values, so where is the problem??</span>
<span class="comment-copy">can I have <code>'ace':[1,11],'ace':[1,11],'ace':[1,11]</code>? That's my question.</span>
<span class="comment-copy">No.  If you reuse a key name, you will overwrite any previous value for that key.</span>
<span class="comment-copy">Is there a way around that?</span>
<span class="comment-copy">You can include a deck ID number as part of the key.</span>
