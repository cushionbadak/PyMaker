<div class="post-text" itemprop="text">
<p>I am learning web scraping. I wrote the following code:</p>
<pre><code>import bs4
from urllib.request import urlopen as uReq
from bs4 import BeautifulSoup as soup
my_url= 'DON'T WANT TO SHARE'
uClient= uReq(my_url)
page_html= uClient.read()
uClient.close()

page_soup= soup(page_html, "html.parser")
contents=page_soup.findAll("data")
print (contents)
</code></pre>
<p>Upon printing the contents I am getting something like this:</p>
<pre><code>&lt;data&gt;
------------------------------------
SIM: B01N2W56MD
(P)UBLISHER NAME: Monster 
------------------------------------
(I)[ 0] Publisher: Monster 
(I)[ 1] Title: Monster 
(I)[12] Subject Keyword: nos
------------------------------------
(S)[ 0] Marketplace ID:  1
(S)[ 1] Replenishment Category:  Non Replenishable
(S)[ 5] Title type:  Main title 1
(S)[ 9] Product Group:  No operation Product Handling Group
(S)[19] Product Subcategory:  A
(S)[32] Are batteries required?:  N
------------------------------------
(K)[ 0] IDC: 030347493342
(K)[ 1] ORC: 6800532606463
------------------------------------
&lt;/data&gt;
</code></pre>
<p>How can I extract these values and print or store them, i.e., the value of SIM or Title or IDC and ORC.</p>
</div>
<div class="post-text" itemprop="text">
<p>You can get extract these values using <a href="https://docs.python.org/3/library/re.html" rel="nofollow noreferrer">regular expressions</a></p>
<pre><code>import  re

data = """
&lt;data&gt;
------------------------------------
SIM: B01N2W56MD
(P)UBLISHER NAME: Monster 
------------------------------------
(I)[ 0] Publisher: Monster 
(I)[ 1] Title: Monster 
(I)[12] Subject Keyword: nos
------------------------------------
(S)[ 0] Marketplace ID:  1
(S)[ 1] Replenishment Category:  Non Replenishable
(S)[ 5] Title type:  Main title 1
(S)[ 9] Product Group:  No operation Product Handling Group
(S)[19] Product Subcategory:  A
(S)[32] Are batteries required?:  N
------------------------------------
(K)[ 0] IDC: 030347493342
(K)[ 1] ORC: 6800532606463
------------------------------------
&lt;/data&gt;"""

sim= re.search(r'SIM:\s(.*?)\n', data).group(1)
dic= re.search(r'IDC:\s(.*?)\n', data).group(1)
title = re.search(r'Title:\s(.*?)\n', data).group(1)

print(sim)
print(dic)
print(title)
</code></pre>
<p>The code above simply looks for data within <code>"SIM"</code> and a <code>"\n"</code> (newline) and saves that data in a variable. Exactl same logic applies to finding value of <code>"DIC"</code> and <code>"Title"</code>.</p>
</div>
<span class="comment-copy">Try the google search: extract text with regex python</span>
<span class="comment-copy">@AntonvBR you should never <a href="https://stackoverflow.com/a/1732454/893159">parse html using regex</a>. And when beautiful soup is already used, it should not be neccessary anyway.</span>
<span class="comment-copy">@Anton vBR can u please tell me in details as i am new and learning so it will be very helpful to me.</span>
<span class="comment-copy">@RibhujeetDas Sorry I was merely trying to point you in the right direction. There are tons of material about BeautifulSoup and Regex that you can learn more about. Good luck!</span>
<span class="comment-copy">thanks for the solution but in my case my whole data is stored in variable named contents and when i am trying to access from there m getting error      page_soup= soup(page_html, "html.parser")     contents=page_soup.findAll("pre")     asin=re.search(r'SIM:\s(.*?)\n',contents).group(1)     print(asin)  m getting error return _compile(pattern, flags).search(string) TypeError: expected string or bytes-like object</span>
<span class="comment-copy">What does the error message say?</span>
<span class="comment-copy">return _compile(pattern, flags).search(string) TypeError: expected string or bytes-like object</span>
<span class="comment-copy">here the whole data have to be kept in a variable as string but in my case i had extracted the data n stored in some other var and now directly want to extract some specific values.</span>
<span class="comment-copy">Your <code>content</code> variable is an element object, you need to convert it into a string. Something like this should do it: <code>data = content.text</code></span>
