<div class="post-text" itemprop="text">
<p>We're trying to automate the downloading of auto-generated reports from Facebook Ads. When a report is ready to download, we get an email with a download link in the body. We parse the body of the message and get this (redacted) url to download the csv file:</p>
<pre><code>https://www.facebook.com/ads/manage/download_report.php?act=&lt;account_id&gt;&amp;report_run_id=&lt;run_id&gt;&amp;format=csv&amp;source=email_v2
</code></pre>
<p>If I put this file into the browser address bar, the file download starts, but when I try to download the content using the python library <code>requests</code> or <code>urllib2</code>:</p>
<pre><code>import requests
url = 'https://www.facebook.com/ads/manage/download_report.php?act=\
       &lt;account_id&gt;&amp;report_run_id=&lt;run_id&gt;&amp;format=csv&amp;source=email_v2'
r = requests.get(url, allow_redirects=True)
open('test.txt', 'a+').write(r.content)
</code></pre>
<p>The resultant file is just HTML that contains none of the data I expected, so it's clear that there's no resource attached to this file path. </p>
<p>How can I initiate the download with python? </p>
</div>
<div class="post-text" itemprop="text">
<p>You need to authenticate to Facebook and use these cookies to download this file. It is not hard to do it but it is worth another question.</p>
<p>You are using <code>open</code> builtin function wrong.<br/>
You have to write downloaded file like this:</p>
<pre><code>import requests
url = 'https://www.facebook.com/ads/manage/download_report.php?act=\
       &lt;account_id&gt;&amp;report_run_id=&lt;run_id&gt;&amp;format=csv&amp;source=email_v2'
r = requests.get(url, allow_redirects=True)
f = open('test.txt', 'a+')
f.write(r.content)
f.close()
</code></pre>
<p>When working with multiple files, an <code>IOError: [Errno 24] Too many open files</code> exception will be raised if file objects are not deleted.<br/>
Quoting from Python <a href="https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files" rel="nofollow noreferrer">documentation</a>:</p>
<blockquote>
<p>It is good practice to use the <code>with</code> keyword when dealing with file objects. The advantage is that the file is properly closed after its suite finishes, even if an exception is raised at some point. Using with is also much shorter than writing equivalent try-finally blocks</p>
</blockquote>
<p>Example:</p>
<pre><code>with open('test.txt', 'a+') as f:
    f.write(r.content)
    # f.close()  # it is redundant
</code></pre>
</div>
<span class="comment-copy">Your Python script isn't logged in to your Facebook account, while your browser is.</span>
<span class="comment-copy">@kindall There we go. So I need to figure out how to pass the facebook authentication with the get request.</span>
<span class="comment-copy">This won't cause the wrong data to end up in the file.</span>
<span class="comment-copy">Technically true, but not relevant to the topic.</span>
<span class="comment-copy">@cdhanson You are missing cookies from the browser!</span>
<span class="comment-copy">@kindall Are you supervising me or something? Hahaha, I am joking. I was editing the question. I was going to post how to authenticate to Facebook but it is worth another question.</span>
<span class="comment-copy">Your correction regarding <code>open</code> should recommend using <code>with open(...) as f</code>.</span>
