<div class="post-text" itemprop="text">
<p>I started a python project and attempted to have it OOP.</p>
<p>I used a script to call function from classes, in the following way:</p>
<pre><code>class Object(): 
    def function(input):
       print(input)
</code></pre>
<p>The command <code>Object.Object.function("example")</code> used to work fine.</p>
<p>I had to reinstall pycharm, and now when running the same code I get the error of not sending enough input.</p>
<p>This can be solved by changing the call to <code>Object.Object().function("example")</code>, </p>
<p>and the function definition to <code>def function(a,input):</code></p>
<p>Where the variable a is never used. This however causes new problems when using libraries.</p>
<p>How can I use the previous configuration?</p>
</div>
<div class="post-text" itemprop="text">
<p><code>Object.Object.function("example")</code> and <code>Object.Object().function("example")</code> are different beasts entirely. The first run invokes the method <code>function</code> on the class <code>Object.Object</code>, while in the latter, <code>Object.Object()</code> creates an instance of type <code>Object.Object</code> and invokes <code>function</code> on that instance (which fails as you must provide the instance itself as the first parameter to the method). It sounds like you are trying to make something like a <a href="https://docs.python.org/3/library/functions.html#staticmethod" rel="nofollow noreferrer"><code>staticmethod</code></a>,</p>
<pre><code>class A:
    @staticmethod
    def f(input):
        print(input)
</code></pre>
<p>for which both <code>A.f</code> and <code>A().f</code> will act as <code>print</code>.</p>
</div>
<span class="comment-copy">I tried your suggestion and got this: <code>TypeError: unbound method getArray() must be called with GetData instance as first argument (got str instance instead)</code> (GetData is the name of the object, getArray is the function), this is the reason I changed the code in the first place.</span>
<span class="comment-copy">After rewriting some of the commands, <code>@staticmethod</code> appears to solve the problem. Thank you!</span>
