<div class="post-text" itemprop="text">
<p>I have a 2 dimensional list. Example:</p>
<pre><code>list = [[1,4,7], [2,5,8], [3,6,9]]
</code></pre>
<p>I need to make a new list whose elements are the elements of each sub-element preserving the order.</p>
<p>Example:</p>
<pre><code>final_list = [1,2,3,4,5,6,7,8,9]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<blockquote>
<p><strong>Q:</strong> The new list must take the first element of each list first, then the
  second, and so on..</p>
</blockquote>
<hr/>
<p><strong>A:</strong>
You can use <code>zip</code> and a list comprehension.</p>
<pre><code>list_1 = [1,4,7]
list_2 = [2,5,8]
list_3 = [3,6,9]


print([x for lst in zip(list_1, list_2, list_3) for x in lst])
# outputs &gt; [1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre>
<hr/>
<p>For your new list, you could do the same, but first unpack the list with a <code>*</code></p>
<pre><code>new_list = [[1,4,7], [2,5,8], [3,6,9]]

print([x for lst in zip(*new_list) for x in lst])
# outputs &gt; [1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>first transpose the list matrix with <a href="https://docs.python.org/2/library/functions.html#zip" rel="nofollow noreferrer">zip</a> then chaining all the inner list together with <a href="https://docs.python.org/2/library/itertools.html#itertools.chain.from_iterable" rel="nofollow noreferrer">itertools</a></p>
<p>also rename variable list to lst, not a good practice to use builtin <code>list</code> as variable name</p>
<pre><code>import itertools
lst = [[1,4,7], [2,5,8], [3,6,9]]
final_list = list(itertools.chain.from_iterable(zip(*lst)))
# final_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]
</code></pre>
</div>
<span class="comment-copy"><code>final_list = sorted(list_1 + list_2 + list_3)</code>?</span>
<span class="comment-copy">Is the roundrobin recipe from <code>itertools</code>, what you are looking for? See here: <a href="https://docs.python.org/3/library/itertools.html" rel="nofollow noreferrer">docs.python.org/3/library/itertools.html</a></span>
<span class="comment-copy">No 8 in final_list?</span>
<span class="comment-copy">Thank you very much @abccd this is exactly what I need it!</span>
