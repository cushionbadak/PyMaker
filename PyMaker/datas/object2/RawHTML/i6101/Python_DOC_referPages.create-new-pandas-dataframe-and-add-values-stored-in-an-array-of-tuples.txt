<div class="post-text" itemprop="text">
<p>I have an array of tuples like:</p>
<pre><code>myArr=Ttest_indResult(statistic=array([ -5.27693006,   0.,   0.,   0.15105006,]),
 pvalue=array([  2.31902785e-06,   1.00000000e+00,   1.00000000e+00,
     8.80460569e-01,)]))
</code></pre>
<p>I want to add the values <code>myArr[1][0],myArr[1][1],myArr[1][2] and myArr[1][3]</code> to a new data frame:</p>
<pre><code>df_tup = pd.DataFrame()
df_tup['t']=df_tup['t'].apply(lambda x: myArr[1][x]...not sure)
</code></pre>
<p>not sure how to iterate through the array while adding a value to the column t.</p>
</div>
<div class="post-text" itemprop="text">
<p><code>myArr</code> is not exactly a <code>tuple</code> but rather a <a href="https://docs.python.org/3/library/collections.html#collections.namedtuple" rel="nofollow noreferrer"><code>namedtuple</code></a> (see <a href="https://github.com/scipy/scipy/blob/80c2d3be7064a71906fef937e633af57921ec996/scipy/stats/mstats_basic.py#L852" rel="nofollow noreferrer"><code>scipy.stats</code> source code</a>), which allow to access its fields like arguments, and the names of these fields. </p>
<p>As in your case it encapsulates two <code>numpy.array</code> (see <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.ttest_ind.html#scipy.stats.ttest_ind" rel="nofollow noreferrer"><code>scipy.stats.ttest_ind</code> doc</a>) you can use it directly as values for your new columns.</p>
<pre><code>pd.DataFrame(columns=myArr._fields, data=np.array(myArr).T)
Out[]:
   statistic    pvalue
0   -5.27693  0.000002
1    0.00000  1.000000
2    0.00000  1.000000
3    0.15105  0.880461
</code></pre>
<p><em>inspired from <a href="https://stackoverflow.com/a/20015080/6914989">this answer</a></em></p>
</div>
<span class="comment-copy">This Works!  Thanks.</span>
