<div class="post-text" itemprop="text">
<pre><code>def count_substring(string, sub_string):
    count = 0
    for i in range(0 , len(string)):
    if ( string[i: ].find(sub_string)) == True:
        count = count +1
    return count


STRING = 'ininini'
SUB_STRING = 'ini'
</code></pre>
<p>CORRECT OUTPUT : 3</p>
<p>MY OUTPUT : 2</p>
<p>it is not detecting the last substring.</p>
</div>
<div class="post-text" itemprop="text">
<p>the problem is that</p>
<pre><code>string[i:].find(sub_string)
</code></pre>
<p>returns <code>-1</code> if not found or the position if found. You want to test for <code>0</code> you're testing for position <code>1</code> (aka <code>True</code>) (<a href="https://docs.python.org/3/library/stdtypes.html#str.find" rel="nofollow noreferrer">https://docs.python.org/3/library/stdtypes.html#str.find</a>).</p>
<p>It's not "not detecting the last substring", it's detecting bogus matches.</p>
<p>You could use <code>startswith</code> instead:</p>
<pre><code>def count_substring(string, sub_string):
    count = 0
    for i in range(0,len(string)):
      if string[i:].startswith(sub_string):
        count += 1
    return count
</code></pre>
<p>Note that using <code>find</code> isn't a bad idea at all, since you don't have to slice the string (it's faster), there's a start position parameter which is handy here:</p>
<pre><code>def count_substring(string, sub_string):
    count = 0
    for i in range(0,len(string)):
      if string.find(sub_string,i) == i:
        count += 1
    return count
</code></pre>
<p>or in one line:</p>
<pre><code>def count_substring(string, sub_string):
        return sum(1 for i in range(len(string)) if string.find(sub_string,i) == i)
</code></pre>
<p>note that <code>string.count(sub_string)</code> doesn't yield the same result because it doesn't consider overlapping strings, like your solution does.</p>
</div>
<span class="comment-copy">try <code>if string[i:].startswith(sub_string):</code></span>
