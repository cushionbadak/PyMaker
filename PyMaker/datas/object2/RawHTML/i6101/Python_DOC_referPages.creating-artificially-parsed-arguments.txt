<div class="post-text" itemprop="text">
<p>My program "program.py" has the form:</p>
<pre><code>if __name__=='__main__':
     args = parse_args()
     main_function(args)
</code></pre>
<p>However, if I import program.py as a module and run program.main_function, how can I pass the parsed arguments structure as an argument to the main_function?</p>
<p>Here is the definition of the parse_args()</p>
<pre><code> def parse_args():
     parser=argparse.ArgumentParser()
     parser.add_argument(...)
     args=parser.parse_args()
     return args
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>If we are talking about <a href="http://file:///usr/share/doc/python3-docs/html/library/argparse.html#option-value-syntax" rel="nofollow noreferrer">argparse.parse_args</a> from the standard library, just pass the list of arguments explicitly.</p>
<p>For example, if you call your program from the command line with these arguments:</p>
<pre><code>program --verbose --mode=3 file1 file2
</code></pre>
<p>the shell splits the command line into five words, the program name and its four arguments. These are stored in <a href="https://docs.python.org/3/library/sys.html#sys.argv" rel="nofollow noreferrer">sys.argv</a>.</p>
<p>To achieve the same effect directly from Python:</p>
<pre><code> args = parse_args(['--verbose', '--mode=3', 'file1' , 'file2'])
 main_function(args)
</code></pre>
<p>UPDATE - parse_args modification:</p>
<pre><code> def parse_args(arglist=None):
     parser=argparse.ArgumentParser()
     parser.add_argument(...)
     args=parser.parse_args(arglist)
     return args
</code></pre>
</div>
<span class="comment-copy">what does <code>parse_args()</code> return? If you are using the argparse method of that name it's just a lis of string.</span>
<span class="comment-copy">How do I connect it though with <code>argparse.ArgumentParser()</code>?</span>
<span class="comment-copy">@cerebrou I have updated my answer</span>
