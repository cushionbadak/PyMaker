<div class="post-text" itemprop="text">
<p>What should <code>print (-2 ** 2)</code> return? According to my calculations it should be <code>4</code>, but interpreter returns <code>-4</code>.<br/>
Is this Python's thing or my math is that terrible?</p>
</div>
<div class="post-text" itemprop="text">
<p>According to <a href="https://docs.python.org/3/reference/expressions.html#operator-precedence" rel="noreferrer">docs</a>, <code>**</code> has higher precedence than <code>-</code>, thus your code is equivalent to <code>-(2 ** 2)</code>. To get the desired result you could put <code>-2</code> into parentheses</p>
<pre><code>&gt;&gt;&gt; (-2) ** 2
4
</code></pre>
<p>or use built-in <a href="https://docs.python.org/3/library/functions.html#pow" rel="noreferrer"><code>pow</code> function</a></p>
<pre><code>&gt;&gt;&gt; pow(-2, 2)
4
</code></pre>
<p>or <a href="https://docs.python.org/3/library/math.html#math.pow" rel="noreferrer"><code>math.pow</code></a> function (returning <code>float</code> value)</p>
<pre><code>&gt;&gt;&gt; import math
&gt;&gt;&gt; math.pow(-2, 2)
4.0
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>The <code>**</code> operation is done before the minus. To get the results expected, you should do </p>
<pre><code>print ((-2) ** 2)
</code></pre>
<p><a href="https://docs.python.org/2/reference/expressions.html#the-power-operator" rel="noreferrer">From the documentation</a>:</p>
<blockquote>
<p>Thus, in an unparenthesized sequence of power and unary operators, the operators are evaluated from right to left (this does not constrain the evaluation order for the operands): <code>-1**2</code> results in <code>-1</code>.</p>
</blockquote>
<p>A full <a href="https://docs.python.org/2/reference/expressions.html#operator-precedence" rel="noreferrer">detail of operators precedence</a> is also available in the documentation. You can see the last line is <code>(expr)</code> which force the expr to be evaluated before being used, hence the result of <code>(-2) ** 2 = 4</code></p>
</div>
<div class="post-text" itemprop="text">
<p>you can also use math library...</p>
<pre><code>math.pow(-2,2) --&gt; 4
-math.pow(2,2) --&gt; -4
math.pow(4,0.5) --&gt; 2
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Python has a problem and does not see the -2 as a number. This seems to be by design as it is mentioned in the docs.</p>
<p>-2 is interpreted as -(2) {unary minus to positive number 2}</p>
<p>That usually doesn't give a problem but in -a ** 2 the ** has higher priority as - and so with - interpreted as a unary operatoe instead of part of the number -2 ** 2 evaluates to -2 instead of 2.  </p>
</div>
<span class="comment-copy">You should do (-2)**2 instead</span>
<span class="comment-copy">The <code>-</code> has lower priority than <code>**</code>. This is interpreted as -(2**2), not (-2)**2...</span>
<span class="comment-copy">The main reason this confuses most people is that they expect <code>-2</code> to be a literal meaning "negative 2", not an expression meaning "apply the negation operator to the literal 2 at runtime". Once you understand that it's an operator, the fact that it's a precedence issue is obvious; until you do, it's baffling. (That's why all the people who run into this are confused by <code>-2 ** 2</code>, not <code>-x ** 2</code>.)</span>
<span class="comment-copy">in math -x² is a negative number or zero because power has higher precedence. So is <code>-2²</code> which is negative. Python is right</span>
