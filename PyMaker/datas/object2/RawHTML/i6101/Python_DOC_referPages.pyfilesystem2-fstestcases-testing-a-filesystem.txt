<div class="post-text" itemprop="text">
<p>I've implemented a filesystem using pyfilesystem2 and now I want to test it. I have my own unit test cases, but pyfilesystem2 provides its own test cases, which I'd be happy to run, but... I have no idea how. The documentation only says how to create a tester class, but not a word on how to invoke the testing - <a href="https://pyfilesystem2.readthedocs.io/en/latest/implementers.html#testing-filesystems" rel="nofollow noreferrer">see for yourself</a>. help() function doesn't help as well - there are almost no docstrings in there.</p>
<p>Ok, but there is a list of available methods, right? Yeah, I tried creating a tester object and then invoking its test_basic() method, but it fails because of some internal errors...</p>
<pre><code>(env) qvasic@qzenbook:~/code/filesyst$ python3 dropboxfs.py
Traceback (most recent call last):
  File "dropboxfs.py", line 630, in &lt;module&gt;
    t.test_basic()
  File "/mnt/d/code/filesyst/env/lib/python3.4/site-packages/fs/test.py", line 349, in test_basic
    repr(self.fs)
AttributeError: 'TestDropBoxFS' object has no attribute 'fs'
(env) qvasic@qzenbook:~/code/filesyst$ python3 dropboxfs.py
Traceback (most recent call last):
  File "dropboxfs.py", line 629, in &lt;module&gt;
    t.test_basic()
  File "/mnt/d/code/filesyst/env/lib/python3.4/site-packages/fs/test.py", line 349, in test_basic
    repr(self.fs)
AttributeError: 'TestDropBoxFS' object has no attribute 'fs'
</code></pre>
<p>(I know there is an implementation for DropBox, it's just an excercise for me.)</p>
<p>Googling doesn't help either, because everything points back to the pyfilesystem2 documentation, which is lacking...</p>
<p>Can anybody give me a hint what to do? How do I run those test cases?</p>
<p>PS. Coming from C/C++ languages to Python is frustrating in terms of documentation. May be I just don't understand the paradigm, but it looks lacking A LOT.</p>
</div>
<div class="post-text" itemprop="text">
<p>PyFilesystem uses the <a href="https://docs.python.org/3/library/unittest.html" rel="nofollow noreferrer">unittest</a> module in the stdlib for tests. To simplify running the tests, I use <code>nose</code> which you can install as follows:</p>
<p><code>
pip install nose
</code></p>
<p>Then you can use the following command to run the tests.</p>
<p><code>
nosetests -v
</code></p>
<p>BTW Your post comes across as venting. You will always get a better response if you keep your questions on topic, without complaining.</p>
<p>You could also ask the PyFilesystem developers directly via the <a href="https://github.com/pyfilesystem/pyfilesystem2/issues" rel="nofollow noreferrer">PyFilesystem Issues</a> on Github.</p>
</div>
<span class="comment-copy">Thanks! You are right, but if there is a prerequisite (like unittest module in this case) for any piece of documentation, it should be mentioned. It's all I am saying.</span>
