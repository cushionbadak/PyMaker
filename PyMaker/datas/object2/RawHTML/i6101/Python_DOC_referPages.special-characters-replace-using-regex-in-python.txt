<div class="post-text" itemprop="text">
<p>Just for learning I am trying to replace all the special characters present in the keyboard to replace with <code>underscore'_'</code></p>
<pre><code>List of characters= ~!@#$%^&amp;*()+|}{:"?&gt;&lt;-=[]\;',./
</code></pre>
<p><code>string I created:</code> </p>
<pre><code>table = """123~!@#$%^&amp;*()+|}{:"?&gt;&lt;-=[]\;',./"""

import re

table1= re.sub(r'!~@#$%^&amp;*()-+={}[]:;&lt;.&gt;?/\'"', '_', table)

Traceback (most recent call last):
  File "&lt;stdin&gt;", line 1, in &lt;module&gt;
  File "/usr/lib64/python2.7/re.py", line 151, in sub
    return _compile(pattern, flags).sub(repl, string, count)
  File "/usr/lib64/python2.7/re.py", line 242, in _compile
    raise error, v # invalid expression
sre_constants.error: unexpected end of regular expression
</code></pre>
<p>Unable to do so I am getting the above error. </p>
<p>How can I replace the special characters in the string using regex</p>
</div>
<div class="post-text" itemprop="text">
<p>You could use <code>re.escape</code> to escape all the special regex characters in the string, and then enclose the escaped string into <code>[...]</code> so it matches any of them.</p>
<pre><code>&gt;&gt;&gt; re.sub("[%s]" % re.escape('!~@#$%^&amp;*()-+={}[]:;&lt;.&gt;?/\''), '_', table)
'123____________|___"_______\\__,__'
</code></pre>
<p>However, as you are not really using that regex as a regex, you might instead just check whether each character is in that string:</p>
<pre><code>&gt;&gt;&gt;''.join("_" if c in '!~@#$%^&amp;*()-+={}[]:;&lt;.&gt;?/\'' else c for c in table)
'123____________|___"_______\\__,__'
</code></pre>
<p>Or to make the lookup a bit faster, create a <code>set</code> from the chars in that string first:</p>
<pre><code>&gt;&gt;&gt; bad_chars = set('!~@#$%^&amp;*()-+={}[]:;&lt;.&gt;?/\'')
&gt;&gt;&gt; ''.join("_" if c in bad_chars else c for c in table)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Just put it in a character class and rearrange the position of some characters (namely <code>-</code>, escaping <code>+</code>):</p>
<pre><code>import re
table = """123~!@#$%^&amp;*()+|}{:"?&gt;&lt;-=[]\;',./"""

table1 = re.sub(r'[-\+!~@#$%^&amp;*()={}\[\]:;&lt;.&gt;?/\'"]', '_', table)
print(table1)
# 123____________|___________\__,__
</code></pre>
</div>
<span class="comment-copy">Is that your exact string? It does not have any quotes. Try <code>table = """..."""</code> Also, what's with the <code>123</code> at the beginning?</span>
<span class="comment-copy">Note that <code>)-+</code> creates an <i>invalid</i> range. Always put the <code>-</code> at the end/start of the character class. Yeah, and use a character class :)</span>
<span class="comment-copy">@tobias_k yes it is the exact string and nothing in front of <code>123</code></span>
<span class="comment-copy">There's also <code>\W</code>, which matches-all non-word characters: <code>re.sub(r'\W', '_', some_string)</code>. <a href="https://docs.python.org/3/library/re.html#regular-expression-syntax" rel="nofollow noreferrer">docs.python.org/3/library/re.html#regular-expression-syntax</a></span>
<span class="comment-copy">@Blurp Good point, but that would also replace e.g. whitespace. Might use something like <code>[^\w\s]</code> though, depending on what exactly OP wants to replace. Also, there seem to be chars like <code>|</code> what shall not be replaced (might be a mistake in the question, though).</span>
