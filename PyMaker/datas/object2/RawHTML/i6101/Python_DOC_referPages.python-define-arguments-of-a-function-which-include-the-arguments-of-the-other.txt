<div class="post-text" itemprop="text">
<p>Please let me know if there are duplicated ones (I believe there are) and I will remove the post. I am just not sure about the jargon for this question.</p>
<p>When writing a new function <code>augmented_func</code> which contains the other function already defined <code>original_func</code>, I am trying to avoid defining arguments that are already in <code>original_func</code>:</p>
<pre><code>def original_func(a1, a2 ,a3):
    print(a1, a2, a3)

def augmented_func(b, a1, a2, a3):
    print(original_func(a1, a2, a3), b)
</code></pre>
<p>How do I avoid writing <code>a</code>'s when defining <code>augmented_func</code>, and make it simpler especially when the number of arguments for <code>original_func</code> is more than, say, three in the example?</p>
</div>
<div class="post-text" itemprop="text">
<p>Use <code>*</code> notation for an arbitrary number of positional arguments:</p>
<pre><code>def augmented_func(b, *args):
    print(original_func(*args), b)

augmented_func('b', 1, 2, 3)
</code></pre>
<p>Or use keyword arguments with <code>**</code>:</p>
<pre><code>def augmented_func(b, **kwargs):
    print(original_func(**kwargs), b)

augmented_func('b', a1=1, a2=2, a3=3)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>I think what you looking for is something like</p>
<pre><code>def original_func(a1, a2 ,a3):
    print(a1, a2, a3)

def augmented_func(b, *args):
    print(original_func(*args), b)
</code></pre>
<p>you can call it then as <code>augmented_func(1, 2, 3, 4)</code></p>
<p><code>*args</code> and <code>**kwargs</code> is a good way for passing the variable number of arguments and passing them to other internal function calls.</p>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html#more-on-defining-functions" rel="nofollow noreferrer">Python docs</a> for further info.</p>
</div>
<span class="comment-copy">oh, so I can just call <code>augmented_func</code> as: <code>augmented_func(b, a1=3, a2=2, a3=4)</code>, is it correct?</span>
<span class="comment-copy">No, but <code>augmented_func(b, 3, 2, 4)</code> will work:</span>
<span class="comment-copy">to do that you would want to use <code>kwargs</code>. With <code>args</code> you have to pay attention to the order in which you send arguments in.</span>
<span class="comment-copy">Clear enough, thanks!</span>
<span class="comment-copy">Can you also mention how to use kwargs here?</span>
