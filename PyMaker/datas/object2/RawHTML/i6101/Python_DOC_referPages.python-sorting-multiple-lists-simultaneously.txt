<div class="post-text" itemprop="text">
<p>This is slightly different than most of the sorting questions on here and I haven't been able to figure out how to get this to work. I have 3 lists, and 2 of them I need to match the order of the 3rd list. There are integers in list 2 that correspond to the same indexed word in list 1. If there is an item in the 3rd list not in the other two i need to generate random numbers for it. The third list is also a tuple, but it's sorted so not sure that will matter. if a word is in lists are in 1 and 2 but not in 3 we can drop those. </p>
<p>For example:</p>
<pre><code>import random

List1 = ['test', 'list', '1']
list2 = [[1,2,3], [4,5,6], [1,3,5]
list3 = [('this', 1),('is',2),('a',3),('test',4),('list',5)]
</code></pre>
<p>what I'd like the results to be is </p>
<pre><code>list1 = ['this', 'is', 'a' , 'test', 'list'] (just equal to first item in list 3)
list2 = [random((1,4),3), random((1,4),3), random((1,4),3), [1,2,3],[4,5,6]]
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>Create a dictionary by <code>zip</code>ping the corresponding elements of <code>list1</code> and <code>list2</code>. Then, you can create the final list by <a href="https://docs.python.org/3/library/stdtypes.html#dict.get" rel="nofollow noreferrer"><code>get</code></a>ting elements from that dict, or a list of random numbers if the element is not present.</p>
<pre><code>&gt;&gt;&gt; list1 = ['test', 'list', '1']
&gt;&gt;&gt; list2 = [[1,2,3], [4,5,6], [1,3,5]]
&gt;&gt;&gt; d = dict(zip(list1, list2))
&gt;&gt;&gt; d
{'1': [1, 3, 5], 'list': [4, 5, 6], 'test': [1, 2, 3]}
&gt;&gt;&gt; list4 = [x for x, y in list3]
&gt;&gt;&gt; list5 = [d.get(x, [random.randint(1,4) for _ in range(3)]) for x in list4]
&gt;&gt;&gt; list5
[[1, 2, 4], [3, 3, 1], [3, 3, 1], [1, 2, 3], [4, 5, 6]]
</code></pre>
<p>Some notes:</p>
<ul>
<li><p>I renamed <code>list1</code> and <code>list2</code> in the output to <code>list4</code> and <code>list5</code>.</p></li>
<li><p>Here, same words refer to <em>the same</em> numbers list instance from <code>list2</code>, i.e. if you modify one, you modify all of them. If that's not what you want, use <code>list(d.get(...))</code> in the list comprehension for <code>list5</code> to create new lists for each element.</p></li>
<li><p>Using <code>get</code> with default might be a bit wasteful here, as it creates all those lists and calls <code>randint</code> even if the default value is not used. Instead, you might want to use a ternary: <code>[d[x] if x in d else [random list] for ...]</code></p></li>
<li><p>Both ways, if the same word appears twice in <code>list3</code> that's not also in <code>list1</code>, those two words will get <em>different</em> random numbers in <code>list5</code>; if you want the same random lists for same words, use <code>[d.setdefault(x, [random list]) for ...]</code></p></li>
</ul>
</div>
<span class="comment-copy">Thanks so much. This is perfect</span>
<span class="comment-copy">thanks for the details. the words are unique in list3 so don't need to worry about getting different random words</span>
