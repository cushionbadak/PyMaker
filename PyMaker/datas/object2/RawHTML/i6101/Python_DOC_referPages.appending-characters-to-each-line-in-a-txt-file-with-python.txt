<div class="post-text" itemprop="text">
<p>I wrote the following python code snippet to append a lower p character to each line of a txt file:</p>
<pre><code>f = open('helloworld.txt','r')
for line in f:
    line+='p'
print(f.read())
f.close()
</code></pre>
<p>However, when I execute this python program, it returns nothing but an empty blank:</p>
<pre><code>zhiwei@zhiwei-Lenovo-Rescuer-15ISK:~/Documents/1001/ass5$ python3 helloworld.py
</code></pre>
<p>Can anyone tell me what's wrong with my codes?</p>
</div>
<div class="post-text" itemprop="text">
<p>Currently, you are only reading each line and not writing to the file. reopen the file in write mode and write your full string to it, like so:</p>
<pre><code>newf=""
with open('helloworld.txt','r') as f:
    for line in f:
        newf+=line.strip()+"p\n"
    f.close()
with open('helloworld.txt','w') as f:
    f.write(newf)
    f.close()
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>well, type help(f) in shell, you can get "Character and line based layer over a BufferedIOBase object, buffer." 
it's meaning：if you reading first buffer,you can get content, but again. it's empty。
so like this:</p>
<pre><code>with open(oldfile, 'r') as f1, open(newfile, 'w') as f2:
       newline = ''
       for line in f1:
         newline+=line.strip()+"p\n"
         f2.write(newline)   
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p><code>open(filePath, openMode)</code> takes two arguments, the first one is the path to your file, the second one is the mode it will be opened it. When you use <code>'r'</code> as second argument, you are actually telling Python to open it as an only reading file.</p>
<p>If you want to write on it, you need to open it in writing mode, using <code>'w'</code> as second argument. You can find more about how to read/write files in Python in its <a href="https://docs.python.org/3/tutorial/inputoutput.html" rel="nofollow noreferrer">official documentation</a>.</p>
<p>If you want to read and write at the same time, you have to open the file in both reading and writing modes. You can do this simply by using <code>'r+'</code> mode.</p>
</div>
<div class="post-text" itemprop="text">
<p>It seems that your for loop has already read the file to the end, so <code>f.read()</code> return empty string.</p>
<p>If you just need to print the lines in the file, you could move the print into for loop just like <code>print(line)</code>. And it is better to move the f.read() before for loop:</p>
<pre><code>f = open("filename", "r")
lines = f.readlines()
for line in lines:
    line += "p"
    print(line)
f.close()
</code></pre>
<p>If you need to modify the file, you need to create another file obj and open it in mode of "w", and use <code>f.write(line)</code> to write the modified lines into the new file.</p>
<p>Besides, it is more better to use with clause in python instead of open(), it is more pythonic.</p>
<pre><code>with open("filename", "r") as f:
    lines = f.readlines()
    for line in lines:
        line += "p"
        print(line)
</code></pre>
<p>When using with clause, you have no need to close file, this is more simple.</p>
</div>
<span class="comment-copy">Do you want to simply have it printed to your terminal with extra <i>p</i>s at the end of each line or a modified version of the file after running it?</span>
<span class="comment-copy">@grovina I want to have a modified version of the file</span>
<span class="comment-copy">I changed r to w and it gave this: IOError: File not open for reading</span>
<span class="comment-copy">The these programs put a new character in a separate line instead of right next to it</span>
<span class="comment-copy">In addition, can you explain what you mean by 'pythonic'?</span>
<span class="comment-copy">About pythonic you could refer to this question: <a href="https://stackoverflow.com/questions/25011078/what-does-pythonic-mean" title="what does pythonic mean">stackoverflow.com/questions/25011078/what-does-pythonic-mean</a></span>
