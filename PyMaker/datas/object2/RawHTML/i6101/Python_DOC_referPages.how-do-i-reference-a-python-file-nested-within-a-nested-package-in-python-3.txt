<div class="post-text" itemprop="text">
<p>Trying to understand how to properly use another module when its nested within a folder. I tried implementing a package using the <code>__init__.py</code> as documented in the <a href="https://docs.python.org/3/tutorial/modules.html#packages" rel="nofollow noreferrer">Packages section</a> of Modules. I am not finding much success. Here is the file structure. </p>
<p><a href="https://i.stack.imgur.com/nTCGI.png" rel="nofollow noreferrer"><img alt="File Structure" src="https://i.stack.imgur.com/nTCGI.png"/></a></p>
<p>For example, I want to be able to reference a class contained within <code>credentials.py</code> in <code>propeller.py</code>. Another use case, I want to reference a function from within <code>base.py</code> in <code>propeller.py</code>. Looking forward to hearing how other approach this. Thanks! </p>
</div>
<div class="post-text" itemprop="text">
<p>It depends. Is the main module 'the_machine' in your <a href="https://docs.python.org/3.6/tutorial/modules.html#the-module-search-path" rel="nofollow noreferrer">Module Search Path</a>?  If so, you should be able to <code>import the_machine.credentials</code>. Otherwise, either <a href="https://stackoverflow.com/questions/16114391/adding-directory-to-sys-path-pythonpath">add it to your sys.path</a> or  <a href="https://stackoverflow.com/questions/67631/how-to-import-a-module-given-the-full-path">import it directly using the path.</a>.</p>
</div>
<span class="comment-copy">Fundamentally, you need to be able to find the file you are looking for from the PATH variable. Usually, "installing" a module involves adding the root directory of your library to the PATH. In a *nix system, something like: <a href="https://askubuntu.com/questions/250929/pythonpath-environment-variable" title="pythonpath environment variable">askubuntu.com/questions/250929/pythonpath-environment-variable</a></span>
