<div class="post-text" itemprop="text">
<pre><code> from random import choice

inputs=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','1','2','3','4','5','6','7','8','9','0']
func={}
code=""
z=len(inputs)
x=z-1
temp=inputs
while x&gt;=0:
    y=choice(temp)
    print(str(x)+"   "+inputs[x]+"   "+y)
    func[inputs[x]]=y
    code=code+inputs[x]+y
    del temp[x]
    x=x-1
    print(temp)
    print(inputs)
</code></pre>
<p>Why does this code not asign every element of inputs to a unique and random element of inputs(as the temp dummy set)? it seems to delete items from both temp and inputs when only told to delete items from the dummy set.</p>
<p>Thanks for any help.</p>
</div>
<div class="post-text" itemprop="text">
<p>You are creating an alias of your list instead of a true copy of it:
replace <code>temp=inputs</code>  with   <code>temp=inputs[:]</code></p>
<pre><code>import random

inputs =  ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','1','2','3','4','5','6','7','8','9','0']
func = {}
code = ""
z = len(inputs)
x = z-1
temp = inputs[:]    #&lt;-- here
while x &gt;= 0:
    y = random.choice(temp)
    print(str(x) + "   " + inputs[x] + "   " + y)
    func[inputs[x]] = y
    code = code+inputs[x] + y
    del temp[x]
    x = x - 1
    print(temp)
    print(inputs)
</code></pre>
</div>
<div class="post-text" itemprop="text">
<p>You are not making a copy of 'inputs' when you do 'temp=inputs', but making a new variable to access the same content. If you want a new copy of the list, then use 'temp = inputs[:]'. Otherwise you are just creating a new reference to the same object, but not duplicating the object itself.</p>
<p>You can find more about this in the <a href="https://docs.python.org/3/faq/programming.html#how-do-i-copy-an-object-in-python" rel="nofollow noreferrer">official Python FAQ</a>.</p>
</div>
<span class="comment-copy"><code>temp</code> and <code>inputs</code> are different names for the same object.</span>
